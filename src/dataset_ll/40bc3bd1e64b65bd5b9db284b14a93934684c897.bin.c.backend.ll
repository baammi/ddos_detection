source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_222a4.20 = global i32 0
@global_var_9de4.24 = constant i32 -509558771
@global_var_225a4.27 = global i32 0
@global_var_225a8.29 = global i32 0
@global_var_225ac.31 = local_unnamed_addr global i32 0
@global_var_225b0.33 = global i32 0
@global_var_18a28.39 = constant [37 x i8] c"kt8lmno5abghi6w7uvx2cdyz14pqef3rs9j0\00"
@global_var_18a50.42 = constant [7 x i8] c"(null)\00"
@global_var_2236c = external local_unnamed_addr global i32
@global_var_225a0.47 = global i32 0
@global_var_22598.49 = global i32 0
@global_var_2259c.50 = local_unnamed_addr global i32 0
@global_var_2527c.52 = global i32 0
@global_var_18a58.54 = constant [6 x i32] %wide-string
@global_var_18a5c.56 = constant [5 x i32] %wide-string
@global_var_18a60.58 = constant [4 x i32] %wide-string
@global_var_22364.63 = local_unnamed_addr global i32 -1
@global_var_18a18.65 = constant [15 x i8] c"191.96.112.131\00"
@global_var_22360.66 = global [15 x i8]* @global_var_18a18.65
@global_var_18a64.69 = constant [3 x i32] %wide-string
@global_var_18a68.73 = constant i32 32
@global_var_222a8.80 = global i32 0
@global_var_ad5c.98 = constant i32 -456978431
@global_var_222c4.104 = local_unnamed_addr global i32 12
@global_var_16f78.125 = constant i32 -905969571
@global_var_b508.133 = constant i32 -478871519
@global_var_be94.144 = constant i32 -382906384
@global_var_a940.153 = constant i32 -442544040
@global_var_c43c.159 = constant i32 -442564540
@global_var_cc04.196 = constant i32 87912
@global_var_ce38.217 = constant i32 -369098502
@global_var_d80c.231 = constant i32 -382910288
@global_var_25608.250 = local_unnamed_addr global i32 0
@global_var_c2c4.261 = constant i32 -442543860
@global_var_142c8.266 = constant i32 -509607925
@global_var_acd0.270 = constant i32 -369093166
@global_var_13cc4.298 = constant i32 -516948194
@global_var_e888.310 = constant i32 -443088884
@global_var_c048.324 = constant i32 -382909968
@global_var_fea8.328 = constant i32 -382906384
@global_var_f968.357 = constant i32 -382910448
@global_var_11e04.358 = constant i32 -382909968
@global_var_11168.398 = constant i32 -478805983
@global_var_11bb8.430 = constant i32 -382910352
@global_var_dbf0.463 = constant i32 -450904024
@global_var_1305c.470 = constant i32 -442695584
@global_var_13638.480 = constant i32 -382910224
@global_var_137a0.504 = constant i32 167772324
@global_var_e610.515 = constant i32 -516948194
@global_var_15750.519 = constant i32 -382910224
@global_var_16cd8.576 = constant i32 -504313148
@global_var_16cc0.577 = constant i32 -483131392
@global_var_16b6c.578 = constant i32 -481229311
@global_var_16d48.579 = constant i32 -477817729
@global_var_16e48.580 = constant i32 -476034303
@global_var_17084.581 = constant i32 -516685812
@global_var_16eac.582 = constant i32 -528203771
@global_var_1710c.583 = constant i32 -478079873
@global_var_170f0.584 = constant i32 -534704125
@global_var_170a0.585 = constant i32 -534704125
@global_var_17038.586 = constant i32 -483131392
@global_var_17974.594 = constant i32 -481296376
@global_var_17a6c.595 = constant i32 -481296376
@global_var_17af0.596 = constant i32 -369098732
@global_var_22578.10 = external global i8*
@global_var_22308.76 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_22578.10 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_22578.10 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_22578.10, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_222a4.20, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_222a4.20 to i32)

; uselistorder directives
  uselistorder i32* @global_var_222a4.20, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81f8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_9de4.24 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 100872, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8220 = call i32 @__GI_time(i32* null)
  store i32 %v2_8220, i32* @global_var_225a4.27, align 4
  %v0_8234 = call i32 @__getpid()
  store i32 %v0_8234, i32* @r0, align 4
  %v0_823c = call i32 @getppid()
  %v2_8244 = xor i32 %v0_8234, %v0_823c
  store i32 %v2_8244, i32* @global_var_225a8.29, align 4
  %v0_8254 = call i32 @clock()
  store i32 %v0_8254, i32* @global_var_225ac.31, align 4
  %v2_8274 = load i32, i32* @global_var_225a8.29, align 4
  %v2_8278 = xor i32 %v2_8274, %v0_8254
  store i32 %v2_8278, i32* @global_var_225b0.33, align 4
  ret i32 %v0_8254

; uselistorder directives
  uselistorder i32 %v0_8254, { 1, 0, 2 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_82b4 = load i32, i32* @global_var_225a4.27, align 4
  %v3_82c0 = mul i32 %v2_82b4, 2048
  %v2_82c8 = xor i32 %v3_82c0, %v2_82b4
  %v3_82d4 = udiv i32 %v2_82c8, 256
  %v2_82e8 = load i32, i32* @global_var_225a8.29, align 4
  store i32 %v2_82e8, i32* @global_var_225a4.27, align 4
  %v2_82f8 = load i32, i32* @global_var_225ac.31, align 4
  store i32 %v2_82f8, i32* @global_var_225a8.29, align 4
  %v2_8308 = load i32, i32* @global_var_225b0.33, align 4
  store i32 %v2_8308, i32* @global_var_225ac.31, align 4
  %v3_831c = udiv i32 %v2_8308, 524288
  %v2_8328 = xor i32 %v3_82d4, %v2_82c8
  %v2_82dc = xor i32 %v2_8328, %v2_8308
  %v2_8340 = xor i32 %v2_82dc, %v3_831c
  store i32 %v2_8340, i32* @global_var_225b0.33, align 4
  ret i32 %v2_8340

; uselistorder directives
  uselistorder i32 %v2_8308, { 1, 0, 2 }
  uselistorder i32 %v2_82c8, { 1, 0 }
  uselistorder i32 %v2_82b4, { 1, 0 }
  uselistorder i32* @global_var_225b0.33, { 0, 2, 1 }
  uselistorder i32* @global_var_225ac.31, { 0, 2, 1 }
  uselistorder i32* @global_var_225a8.29, { 0, 2, 3, 1 }
  uselistorder i32* @global_var_225a4.27, { 0, 2, 1 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8384 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_843c3 = icmp sgt i32 %arg2, 0
  br i1 %v5_843c3, label %dec_label_pc_8390, label %dec_label_pc_8440

dec_label_pc_8390:                                ; preds = %entry, %dec_label_pc_8434.backedge
  %v3_83c8 = phi i32 [ %v3_8434.be, %dec_label_pc_8434.backedge ], [ %arg2, %entry ]
  %stack_var_-28.0.in4 = phi i32 [ %stack_var_-28.0.in.be, %dec_label_pc_8434.backedge ], [ %v0_8384, %entry ]
  %v7_8398 = icmp slt i32 %v3_83c8, 4
  br i1 %v7_8398, label %dec_label_pc_83c8, label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %dec_label_pc_8390
  %v0_83a0 = call i32 @rand_next()
  store i32 %v0_83a0, i32* %r0.global-to-local, align 4
  %v2_83a8 = inttoptr i32 %stack_var_-28.0.in4 to i32*
  store i32 %v0_83a0, i32* %v2_83a8, align 4
  %v1_83b0 = add i32 %stack_var_-28.0.in4, 4
  %v3_83b8 = load i32, i32* %stack_var_-32, align 4
  %v1_83bc = add i32 %v3_83b8, -4
  store i32 %v1_83bc, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8434.backedge

dec_label_pc_83c8:                                ; preds = %dec_label_pc_8390
  %v7_83d0 = icmp slt i32 %v3_83c8, 2
  br i1 %v7_83d0, label %dec_label_pc_8408, label %dec_label_pc_83d4

dec_label_pc_83d4:                                ; preds = %dec_label_pc_83c8
  %v0_83d8 = call i32 @rand_next()
  store i32 %v0_83d8, i32* %r0.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83d8 to i16
  %v3_83e8 = inttoptr i32 %stack_var_-28.0.in4 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v1_83f0 = add i32 %stack_var_-28.0.in4, 2
  %v3_83f8 = load i32, i32* %stack_var_-32, align 4
  %v1_83fc = add i32 %v3_83f8, -2
  store i32 %v1_83fc, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8434.backedge

dec_label_pc_8408:                                ; preds = %dec_label_pc_83c8
  %v0_8408 = call i32 @rand_next()
  store i32 %v0_8408, i32* %r0.global-to-local, align 4
  %v1_8418 = trunc i32 %v0_8408 to i8
  %v3_8418 = inttoptr i32 %stack_var_-28.0.in4 to i8*
  store i8 %v1_8418, i8* %v3_8418, align 1
  %v1_8420 = add i32 %stack_var_-28.0.in4, 1
  %v3_8428 = load i32, i32* %stack_var_-32, align 4
  %v1_842c = add i32 %v3_8428, -1
  store i32 %v1_842c, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8434.backedge

dec_label_pc_8434.backedge:                       ; preds = %dec_label_pc_8408, %dec_label_pc_839c, %dec_label_pc_83d4
  %v3_8434.be = phi i32 [ %v1_83fc, %dec_label_pc_83d4 ], [ %v1_83bc, %dec_label_pc_839c ], [ %v1_842c, %dec_label_pc_8408 ]
  %stack_var_-28.0.in.be = phi i32 [ %v1_83f0, %dec_label_pc_83d4 ], [ %v1_83b0, %dec_label_pc_839c ], [ %v1_8420, %dec_label_pc_8408 ]
  %v5_843c = icmp sgt i32 %v3_8434.be, 0
  br i1 %v5_843c, label %dec_label_pc_8390, label %dec_label_pc_8434.dec_label_pc_8440_crit_edge

dec_label_pc_8434.dec_label_pc_8440_crit_edge:    ; preds = %dec_label_pc_8434.backedge
  %v1_8448.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_8434.dec_label_pc_8440_crit_edge, %entry
  %v1_8448 = phi i32 [ %v1_8448.pre, %dec_label_pc_8434.dec_label_pc_8440_crit_edge ], [ %v0_8384, %entry ]
  ret i32 %v1_8448

; uselistorder directives
  uselistorder i32 %v3_8434.be, { 1, 0 }
  uselistorder i32 %stack_var_-28.0.in4, { 4, 5, 3, 0, 2, 1 }
  uselistorder i32 %v0_8384, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder label %dec_label_pc_8434.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8390, { 1, 0 }
}

define i32 @rand_alphastr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-65 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_8450 = load i32, i32* @fp, align 4
  store i32 %v3_8450, i32* %stack_var_-16, align 4
  %v13_8450 = ptrtoint i32* %stack_var_-16 to i32
  store i32 ptrtoint ([37 x i8]* @global_var_18a28.39 to i32), i32* @r3, align 4
  %v2_8468 = ptrtoint i32* %stack_var_-65 to i32
  store i32 37, i32* @ip, align 4
  store i32 %v2_8468, i32* @r0, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_18a28.39 to i32), i32* @r1, align 4
  store i32 37, i32* @r2, align 4
  %v0_847c = call i32 @memcpy()
  store i32 %v0_847c, i32* %r0.global-to-local, align 4
  %v5_859012 = icmp sgt i32 %arg2, 0
  br i1 %v5_859012, label %dec_label_pc_8484.lr.ph, label %dec_label_pc_8594

dec_label_pc_8484.lr.ph:                          ; preds = %entry
  %v2_84d4 = add i32 %v13_8450, -49
  br label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %dec_label_pc_8484.lr.ph, %dec_label_pc_8588.backedge
  %stack_var_-80.014 = phi i32 [ %arg2, %dec_label_pc_8484.lr.ph ], [ %stack_var_-80.0.be, %dec_label_pc_8588.backedge ]
  %stack_var_-76.113 = phi i8* [ %arg1, %dec_label_pc_8484.lr.ph ], [ %stack_var_-76.1.be, %dec_label_pc_8588.backedge ]
  %tmp30 = icmp ult i32 %stack_var_-80.014, 4
  %v0_851c = call i32 @rand_next()
  store i32 %v0_851c, i32* %r0.global-to-local, align 4
  br i1 %tmp30, label %dec_label_pc_851c, label %dec_label_pc_84a8.lr.ph

dec_label_pc_84a8.lr.ph:                          ; preds = %dec_label_pc_8484
  %v5_8498 = trunc i32 %v0_851c to i8
  br label %dec_label_pc_84a8

dec_label_pc_84a8:                                ; preds = %dec_label_pc_84a8.lr.ph, %dec_label_pc_84a8
  %storemerge39 = phi i32 [ 0, %dec_label_pc_84a8.lr.ph ], [ %v1_84f8, %dec_label_pc_84a8 ]
  %stack_var_-24.08 = phi i8 [ %v5_8498, %dec_label_pc_84a8.lr.ph ], [ %v5_84b8, %dec_label_pc_84a8 ]
  %stack_var_-76.07 = phi i8* [ %stack_var_-76.113, %dec_label_pc_84a8.lr.ph ], [ %v5_84f0, %dec_label_pc_84a8 ]
  %v4_84a8 = sext i8 %stack_var_-24.08 to i32
  %v3_84b4 = udiv i32 %v4_84a8, 256
  %v5_84b8 = trunc i32 %v3_84b4 to i8
  %div = udiv i8 %stack_var_-24.08, 8
  %v3_84c0 = zext i8 %div to i32
  store i32 %v13_8450, i32* %r0.global-to-local, align 4
  %v2_84d8 = add i32 %v2_84d4, %v3_84c0
  %v1_84dc = inttoptr i32 %v2_84d8 to i8*
  %v2_84dc = load i8, i8* %v1_84dc, align 1
  %v4_84e0 = ptrtoint i8* %stack_var_-76.07 to i32
  store i8 %v2_84dc, i8* %stack_var_-76.07, align 1
  %v1_84ec = add i32 %v4_84e0, 1
  %v5_84f0 = inttoptr i32 %v1_84ec to i8*
  %v1_84f8 = add i32 %storemerge39, 1
  %tmp31 = icmp ult i32 %v1_84f8, 4
  br i1 %tmp31, label %dec_label_pc_84a8, label %dec_label_pc_850c

dec_label_pc_850c:                                ; preds = %dec_label_pc_84a8
  %v1_8510 = add i32 %stack_var_-80.014, -4
  br label %dec_label_pc_8588.backedge

dec_label_pc_851c:                                ; preds = %dec_label_pc_8484
  %v3_8538 = urem i32 %v0_851c, 37
  store i32 %v3_8538, i32* %r0.global-to-local, align 4
  %v4_8568 = ptrtoint i8* %stack_var_-76.113 to i32
  %v1_856c = trunc i32 %v3_8538 to i8
  store i8 %v1_856c, i8* %stack_var_-76.113, align 1
  %v1_8574 = add i32 %v4_8568, 1
  %v5_8578 = inttoptr i32 %v1_8574 to i8*
  %v1_8580 = add i32 %stack_var_-80.014, -1
  br label %dec_label_pc_8588.backedge

dec_label_pc_8588.backedge:                       ; preds = %dec_label_pc_851c, %dec_label_pc_850c
  %stack_var_-76.1.be = phi i8* [ %v5_84f0, %dec_label_pc_850c ], [ %v5_8578, %dec_label_pc_851c ]
  %stack_var_-80.0.be = phi i32 [ %v1_8510, %dec_label_pc_850c ], [ %v1_8580, %dec_label_pc_851c ]
  %v5_8590 = icmp sgt i32 %stack_var_-80.0.be, 0
  br i1 %v5_8590, label %dec_label_pc_8484, label %dec_label_pc_8588.dec_label_pc_8594_crit_edge

dec_label_pc_8588.dec_label_pc_8594_crit_edge:    ; preds = %dec_label_pc_8588.backedge
  %v1_859c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_8588.dec_label_pc_8594_crit_edge, %entry
  %v1_859c = phi i32 [ %v1_859c.pre, %dec_label_pc_8588.dec_label_pc_8594_crit_edge ], [ %v0_847c, %entry ]
  %v2_8598 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8598, i32* @fp, align 4
  ret i32 %v1_859c

; uselistorder directives
  uselistorder i32 %stack_var_-80.014, { 1, 2, 0 }
  uselistorder i32 %v13_8450, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_84a8, { 1, 0 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_85d4

dec_label_pc_85c8:                                ; preds = %dec_label_pc_85d4
  %v4_85d4 = ptrtoint i8* %stack_var_-28.0 to i32
  %v1_85f0 = add i32 %v4_85d4, 1
  %v5_85f4 = inttoptr i32 %v1_85f0 to i8*
  %v1_85cc = add i32 %storemerge2, 1
  br label %dec_label_pc_85d4

dec_label_pc_85d4:                                ; preds = %entry, %dec_label_pc_85c8
  %stack_var_-28.0 = phi i8* [ %arg1, %entry ], [ %v5_85f4, %dec_label_pc_85c8 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_85cc, %dec_label_pc_85c8 ]
  %v2_85d8 = load i8, i8* %stack_var_-28.0, align 1
  %v2_85dc = icmp eq i8 %v2_85d8, 0
  br i1 %v2_85dc, label %dec_label_pc_8600, label %dec_label_pc_85c8

dec_label_pc_8600:                                ; preds = %dec_label_pc_85d4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder label %dec_label_pc_85d4, { 1, 0 }
}

define i32 @util_memcpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_867c6 = icmp eq i32 %arg3, 0
  br i1 %v3_867c6, label %dec_label_pc_8684, label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %entry, %dec_label_pc_8644
  %v1_867013.in = phi i32 [ %v1_867013, %dec_label_pc_8644 ], [ %arg3, %entry ]
  %storemerge.in12 = phi i32 [ %v1_8664, %dec_label_pc_8644 ], [ %arg2, %entry ]
  %stack_var_-24.011 = phi i8* [ %v5_865c, %dec_label_pc_8644 ], [ %arg1, %entry ]
  %v1_867013 = add i32 %v1_867013.in, -1
  %storemerge = inttoptr i32 %storemerge.in12 to i8*
  %v2_8648 = load i8, i8* %storemerge, align 1
  %v4_864c = ptrtoint i8* %stack_var_-24.011 to i32
  store i8 %v2_8648, i8* %stack_var_-24.011, align 1
  %v1_8658 = add i32 %v4_864c, 1
  %v5_865c = inttoptr i32 %v1_8658 to i8*
  %v1_8664 = add i32 %storemerge.in12, 1
  %v3_867c = icmp eq i32 %v1_867013, 0
  br i1 %v3_867c, label %dec_label_pc_8684, label %dec_label_pc_8644

dec_label_pc_8684:                                ; preds = %dec_label_pc_8644, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %storemerge.in12, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
}

define i32 @util_strcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_8694 = load i32, i32* @fp, align 4
  %v1_86ac = inttoptr i32 %arg2 to i8*
  %v2_86ac = call i32 @util_strlen(i8* %v1_86ac)
  %v1_86bc = add i32 %v2_86ac, 1
  %v3_86cc = inttoptr i32 %arg1 to i8*
  %v4_86cc = call i32 @util_memcpy(i8* %v3_86cc, i32 %arg2, i32 %v1_86bc)
  store i32 %v3_8694, i32* @fp, align 4
  ret i32 %v2_86ac
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_86f0 = ptrtoint i32* %stack_var_-24 to i32
  %v0_86f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8700 = icmp eq i32 %v0_86f4, 0
  br i1 %v2_8700, label %dec_label_pc_8734, label %dec_label_pc_8708

dec_label_pc_8708:                                ; preds = %entry
  %v1_870c = inttoptr i32 %v0_86f4 to i32*
  %v2_870c = load i32, i32* %v1_870c, align 4
  %v1_8718 = trunc i32 %arg2 to i8
  %v3_8718 = inttoptr i32 %v2_870c to i8*
  store i8 %v1_8718, i8* %v3_8718, align 1
  %v2_8720 = load i32, i32* %v1_870c, align 4
  %v1_8724 = add i32 %v2_8720, 1
  store i32 %v1_8724, i32* %v1_870c, align 4
  %v1_8750.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8748

dec_label_pc_8734:                                ; preds = %entry
  store i32 %v2_86f0, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v2_8744 = call i32 @__GI___libc_write(i32 1, i32 %v2_86f0)
  store i32 %v2_8744, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8748

dec_label_pc_8748:                                ; preds = %dec_label_pc_8708, %dec_label_pc_8734
  %v1_8750 = phi i32 [ %v1_8750.pre, %dec_label_pc_8708 ], [ %v2_8744, %dec_label_pc_8734 ]
  ret i32 %v1_8750

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8748, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_8758 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8810, label %dec_label_pc_8790

dec_label_pc_8790:                                ; preds = %entry
  %v2_87c020 = load i8, i8* %arg2, align 1
  %v2_87c422 = icmp eq i8 %v2_87c020, 0
  br i1 %v2_87c422, label %dec_label_pc_87cc, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_8790, %dec_label_pc_87a4
  %v4_87bc24 = phi i32 [ %v1_87b4, %dec_label_pc_87a4 ], [ %tmp, %dec_label_pc_8790 ]
  %stack_var_-40.023 = phi i32 [ %v1_87a8, %dec_label_pc_87a4 ], [ 0, %dec_label_pc_8790 ]
  %v1_87a8 = add i32 %stack_var_-40.023, 1
  %v1_87b4 = add i32 %v4_87bc24, 1
  %v5_87b8 = inttoptr i32 %v1_87b4 to i8*
  %v2_87c0 = load i8, i8* %v5_87b8, align 1
  %v2_87c4 = icmp eq i8 %v2_87c0, 0
  br i1 %v2_87c4, label %dec_label_pc_87cc, label %dec_label_pc_87a4

dec_label_pc_87cc:                                ; preds = %dec_label_pc_87a4, %dec_label_pc_8790
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8790 ], [ %v1_87a8, %dec_label_pc_87a4 ]
  %v5_87d8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_87d8, label %dec_label_pc_87e8, label %dec_label_pc_87f8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87cc
  %v2_87f0 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_87f8

dec_label_pc_87f8:                                ; preds = %dec_label_pc_87cc, %dec_label_pc_87e8
  %storemerge4 = phi i32 [ %v2_87f0, %dec_label_pc_87e8 ], [ 0, %dec_label_pc_87cc ]
  %v1_87fc = and i32 %arg4, 2
  %v2_8800 = icmp eq i32 %v1_87fc, 0
  br i1 %v2_8800, label %dec_label_pc_8810, label %dec_label_pc_8808

dec_label_pc_8808:                                ; preds = %dec_label_pc_87f8
  br label %dec_label_pc_8810

dec_label_pc_8810:                                ; preds = %dec_label_pc_87f8, %entry, %dec_label_pc_8808
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_87f8 ], [ %storemerge4, %dec_label_pc_8808 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_87f8 ], [ 48, %dec_label_pc_8808 ]
  %v1_8814 = urem i32 %arg4, 2
  %v2_8818 = icmp eq i32 %v1_8814, 0
  br i1 %v2_8818, label %dec_label_pc_8848.preheader, label %dec_label_pc_8884.preheader

dec_label_pc_8848.preheader:                      ; preds = %dec_label_pc_8810
  %v5_885017 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_885017, label %dec_label_pc_8824.lr.ph, label %dec_label_pc_8884.preheader

dec_label_pc_8824.lr.ph:                          ; preds = %dec_label_pc_8848.preheader
  %v2_882c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8824.lr.ph, %dec_label_pc_8824
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8824.lr.ph ], [ %v1_8840, %dec_label_pc_8824 ]
  %v3_882c = call i32 @printchar(i32* %v2_882c, i32 %stack_var_-44.0)
  %v3_8830 = load i32, i32* %stack_var_-48, align 4
  %v1_8834 = add i32 %v3_8830, 1
  store i32 %v1_8834, i32* %stack_var_-48, align 4
  %v1_8840 = add nsw i32 %stack_var_-28.118, -1
  %v5_8850 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_8850, label %dec_label_pc_8824, label %dec_label_pc_8884.preheader

dec_label_pc_8884.preheader:                      ; preds = %dec_label_pc_8824, %dec_label_pc_8848.preheader, %dec_label_pc_8810
  %v3_88c828 = phi i32 [ 0, %dec_label_pc_8810 ], [ 0, %dec_label_pc_8848.preheader ], [ %v1_8834, %dec_label_pc_8824 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8810 ], [ %stack_var_-28.0, %dec_label_pc_8848.preheader ], [ 0, %dec_label_pc_8824 ]
  %v2_888810 = load i8, i8* %arg2, align 1
  %v2_888c12 = icmp eq i8 %v2_888810, 0
  br i1 %v2_888c12, label %dec_label_pc_88bc.preheader, label %dec_label_pc_8858.lr.ph

dec_label_pc_8858.lr.ph:                          ; preds = %dec_label_pc_8884.preheader
  %v2_8868 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8858

dec_label_pc_8858:                                ; preds = %dec_label_pc_8858.lr.ph, %dec_label_pc_8858
  %v4_888414 = phi i32 [ %tmp, %dec_label_pc_8858.lr.ph ], [ %v1_887c, %dec_label_pc_8858 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8858.lr.ph ], [ %v5_8880, %dec_label_pc_8858 ]
  %v2_885c = load i8, i8* %stack_var_-24.013, align 1
  %v3_885c = zext i8 %v2_885c to i32
  %v3_8868 = call i32 @printchar(i32* %v2_8868, i32 %v3_885c)
  %v3_886c = load i32, i32* %stack_var_-48, align 4
  %v1_8870 = add i32 %v3_886c, 1
  store i32 %v1_8870, i32* %stack_var_-48, align 4
  %v1_887c = add i32 %v4_888414, 1
  %v5_8880 = inttoptr i32 %v1_887c to i8*
  %v2_8888 = load i8, i8* %v5_8880, align 1
  %v2_888c = icmp eq i8 %v2_8888, 0
  br i1 %v2_888c, label %dec_label_pc_88bc.preheader, label %dec_label_pc_8858

dec_label_pc_88bc.preheader:                      ; preds = %dec_label_pc_8858, %dec_label_pc_8884.preheader
  %v3_88c827 = phi i32 [ %v3_88c828, %dec_label_pc_8884.preheader ], [ %v1_8870, %dec_label_pc_8858 ]
  %v5_88c47 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_88c47, label %dec_label_pc_8898.lr.ph, label %dec_label_pc_88c8

dec_label_pc_8898.lr.ph:                          ; preds = %dec_label_pc_88bc.preheader
  %v2_88a0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_8898.lr.ph, %dec_label_pc_8898
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8898.lr.ph ], [ %v1_88b4, %dec_label_pc_8898 ]
  %v3_88a0 = call i32 @printchar(i32* %v2_88a0, i32 %stack_var_-44.0)
  %v3_88a4 = load i32, i32* %stack_var_-48, align 4
  %v1_88a8 = add i32 %v3_88a4, 1
  store i32 %v1_88a8, i32* %stack_var_-48, align 4
  %v1_88b4 = add nsw i32 %stack_var_-28.38, -1
  %v5_88c4 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_88c4, label %dec_label_pc_8898, label %dec_label_pc_88c8

dec_label_pc_88c8:                                ; preds = %dec_label_pc_8898, %dec_label_pc_88bc.preheader
  %v3_88c8 = phi i32 [ %v3_88c827, %dec_label_pc_88bc.preheader ], [ %v1_88a8, %dec_label_pc_8898 ]
  store i32 %v3_8758, i32* @fp, align 4
  ret i32 %v3_88c8

; uselistorder directives
  uselistorder i32 %v1_887c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_87b4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8898, { 1, 0 }
  uselistorder label %dec_label_pc_8858, { 1, 0 }
  uselistorder label %dec_label_pc_8824, { 1, 0 }
  uselistorder label %dec_label_pc_8810, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87f8, { 1, 0 }
  uselistorder label %dec_label_pc_87a4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_88e0 = load i32, i32* @fp, align 4
  store i32 35048, i32* %stack_var_-4, align 4
  %v2_88e4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e4, i32* @fp, align 4
  %v1_8918 = icmp slt i32 %arg2, 0
  %v2_8918 = icmp eq i32 %arg2, 0
  br i1 %v2_8918, label %dec_label_pc_8920, label %dec_label_pc_8954

dec_label_pc_8920:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8944 = bitcast i32* %stack_var_-28 to i8*
  %v6_8944 = call i32 @prints(i32 %arg1, i8* %v5_8944, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_8ab4

dec_label_pc_8954:                                ; preds = %entry
  %v2_8958 = icmp eq i32 %arg4, 0
  br i1 %v2_8958, label %dec_label_pc_898c, label %dec_label_pc_8960

dec_label_pc_8960:                                ; preds = %dec_label_pc_8954
  %v7_8964 = icmp eq i32 %arg3, 10
  br i1 %v7_8964, label %dec_label_pc_896c, label %dec_label_pc_898c

dec_label_pc_896c:                                ; preds = %dec_label_pc_8960
  br i1 %v1_8918, label %dec_label_pc_8978, label %dec_label_pc_898c

dec_label_pc_8978:                                ; preds = %dec_label_pc_896c
  %v1_8984 = sub i32 0, %arg2
  br label %dec_label_pc_898c

dec_label_pc_898c:                                ; preds = %dec_label_pc_896c, %dec_label_pc_8960, %dec_label_pc_8954, %dec_label_pc_8978
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_8954 ], [ %v1_8984, %dec_label_pc_8978 ], [ %arg2, %dec_label_pc_896c ], [ %arg2, %dec_label_pc_8960 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8978 ], [ 0, %dec_label_pc_896c ], [ 0, %dec_label_pc_8960 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_8a204 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_8a204, label %dec_label_pc_8a28, label %dec_label_pc_89a8.lr.ph

dec_label_pc_89a8.lr.ph:                          ; preds = %dec_label_pc_898c
  %v1_89d0 = add i32 %arg7, -58
  br label %dec_label_pc_89a8

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89a8.lr.ph, %dec_label_pc_89e0
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_89a8.lr.ph ], [ %v2_89b4, %dec_label_pc_89e0 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_89a8.lr.ph ], [ %v5_89e8, %dec_label_pc_89e0 ]
  %v2_89b4 = udiv i32 %stack_var_-52.16, %arg3
  %v3_89b4 = urem i32 %stack_var_-52.16, %arg3
  %v7_89c8 = icmp slt i32 %v3_89b4, 10
  br i1 %v7_89c8, label %dec_label_pc_89e0, label %dec_label_pc_89cc

dec_label_pc_89cc:                                ; preds = %dec_label_pc_89a8
  %v2_89d8 = add i32 %v3_89b4, %v1_89d0
  br label %dec_label_pc_89e0

dec_label_pc_89e0:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89cc
  %stack_var_-64.0 = phi i32 [ %v3_89b4, %dec_label_pc_89a8 ], [ %v2_89d8, %dec_label_pc_89cc ]
  %v4_89e0 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_89e4 = add i32 %v4_89e0, -1
  %v5_89e8 = inttoptr i32 %v1_89e4 to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8a00 = trunc i32 %fold to i8
  store i8 %v1_8a00, i8* %v5_89e8, align 1
  %v2_8a20 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8a20, label %dec_label_pc_8a28, label %dec_label_pc_89a8

dec_label_pc_8a28:                                ; preds = %dec_label_pc_89e0, %dec_label_pc_898c
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_898c ], [ %v5_89e8, %dec_label_pc_89e0 ]
  %v2_8a2c = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a90, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a28
  %v3_8a34 = load i32, i32* %stack_var_0, align 4
  %v2_8a38 = icmp eq i32 %v3_8a34, 0
  br i1 %v2_8a38, label %dec_label_pc_8a78, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a34
  %v1_8a44 = and i32 %arg6, 2
  %v2_8a48 = icmp eq i32 %v1_8a44, 0
  br i1 %v2_8a48, label %dec_label_pc_8a78, label %dec_label_pc_8a50

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v2_8a58 = inttoptr i32 %arg1 to i32*
  %v3_8a58 = call i32 @printchar(i32* %v2_8a58, i32 45)
  %v3_8a68 = load i32, i32* %stack_var_0, align 4
  %v1_8a6c = add i32 %v3_8a68, -1
  store i32 %v1_8a6c, i32* %stack_var_0, align 4
  br label %dec_label_pc_8a90

dec_label_pc_8a78:                                ; preds = %dec_label_pc_8a40, %dec_label_pc_8a34
  %v4_8a78 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_8a7c = add i32 %v4_8a78, -1
  %v5_8a80 = inttoptr i32 %v1_8a7c to i8*
  store i8 45, i8* %v5_8a80, align 1
  br label %dec_label_pc_8a90

dec_label_pc_8a90:                                ; preds = %dec_label_pc_8a28, %dec_label_pc_8a50, %dec_label_pc_8a78
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8a28 ], [ %v5_8a80, %dec_label_pc_8a78 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_8a50 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8a28 ], [ 0, %dec_label_pc_8a78 ], [ 1, %dec_label_pc_8a50 ]
  %v3_8a98 = load i32, i32* %stack_var_0, align 4
  %v6_8aa0 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_8a98, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8aac = add i32 %v6_8aa0, %stack_var_-56.0
  br label %dec_label_pc_8ab4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8920, %dec_label_pc_8a90
  %storemerge2 = phi i32 [ %v2_8aac, %dec_label_pc_8a90 ], [ %v6_8944, %dec_label_pc_8920 ]
  store i32 %v3_88e0, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_89e8, { 0, 2, 1 }
  uselistorder i32 %v3_89b4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8ab4, { 1, 0 }
  uselistorder label %dec_label_pc_8a90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_89e0, { 1, 0 }
  uselistorder label %dec_label_pc_89a8, { 1, 0 }
  uselistorder label %dec_label_pc_898c, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35540, i32* %stack_var_-4, align 4
  %v2_8ad0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8ad0, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8e7c29 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8e8031 = icmp eq i8 %v2_8e7c29, 0
  br i1 %v2_8e8031, label %dec_label_pc_8e88, label %dec_label_pc_8af0.lr.ph

dec_label_pc_8af0.lr.ph:                          ; preds = %entry
  %v5_8e34 = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8af0

dec_label_pc_8af0:                                ; preds = %dec_label_pc_8af0.lr.ph, %dec_label_pc_8e6c
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8af0.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8e6c ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8af0.lr.ph ], [ %v1_8e70, %dec_label_pc_8e6c ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8af0.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8e6c ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8af0.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8e6c ]
  %v2_8af4 = load i8, i8* %stack_var_-32.435, align 1
  %v7_8af8 = icmp eq i8 %v2_8af4, 37
  br i1 %v7_8af8, label %dec_label_pc_8b00, label %dec_label_pc_8e4c

dec_label_pc_8b00:                                ; preds = %dec_label_pc_8af0
  %v1_8b04 = add i32 %stack_var_-32.4.in34, 1
  %v5_8b08 = inttoptr i32 %v1_8b04 to i8*
  %v2_8b20 = load i8, i8* %v5_8b08, align 1
  %v2_8b24 = icmp eq i8 %v2_8b20, 0
  br i1 %v2_8b24, label %dec_label_pc_8e88, label %dec_label_pc_8b2c

dec_label_pc_8b2c:                                ; preds = %dec_label_pc_8b00
  %v2_8b30 = load i8, i8* %v5_8b08, align 1
  %v7_8b34 = icmp eq i8 %v2_8b30, 37
  br i1 %v7_8b34, label %dec_label_pc_8e4c, label %dec_label_pc_8b3c

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8b2c
  %v2_8b40 = load i8, i8* %v5_8b08, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 45
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8b7c.preheader

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.4.in34, 2
  %v5_8b54 = inttoptr i32 %v1_8b50 to i8*
  br label %dec_label_pc_8b7c.preheader

dec_label_pc_8b7c.preheader:                      ; preds = %dec_label_pc_8b4c, %dec_label_pc_8b3c
  %stack_var_-32.0.ph = phi i8* [ %v5_8b08, %dec_label_pc_8b3c ], [ %v5_8b54, %dec_label_pc_8b4c ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8b3c ], [ 1, %dec_label_pc_8b4c ]
  %v4_8b7c2 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_8b803 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_8b847 = icmp eq i8 %v2_8b803, 48
  br i1 %v7_8b847, label %dec_label_pc_8b64, label %dec_label_pc_8bc8.preheader

dec_label_pc_8b64:                                ; preds = %dec_label_pc_8b7c.preheader, %dec_label_pc_8b64
  %v4_8b7c9 = phi i32 [ %v1_8b68, %dec_label_pc_8b64 ], [ %v4_8b7c2, %dec_label_pc_8b7c.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_8b74, %dec_label_pc_8b64 ], [ %stack_var_-48.0.ph, %dec_label_pc_8b7c.preheader ]
  %v1_8b68 = add i32 %v4_8b7c9, 1
  %v5_8b6c = inttoptr i32 %v1_8b68 to i8*
  %v1_8b74 = or i32 %stack_var_-48.08, 2
  %v2_8b80 = load i8, i8* %v5_8b6c, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 48
  br i1 %v7_8b84, label %dec_label_pc_8b64, label %dec_label_pc_8bc8.preheader

dec_label_pc_8bc8.preheader:                      ; preds = %dec_label_pc_8b64, %dec_label_pc_8b7c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_8b7c.preheader ], [ %v1_8b74, %dec_label_pc_8b64 ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_8b7c.preheader ], [ %v5_8b6c, %dec_label_pc_8b64 ]
  %v4_8bc811 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8bcc12 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8bcc12, 48
  br i1 %tmp60, label %dec_label_pc_8be8, label %dec_label_pc_8bd8

dec_label_pc_8b90:                                ; preds = %dec_label_pc_8bd8
  %v2_8b9c = mul i32 %stack_var_-52.019, 10
  %v2_8ba8 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8ba8 = zext i8 %v2_8ba8 to i32
  %v1_8bac = add i32 %v2_8b9c, -48
  %v2_8bb4 = add i32 %v1_8bac, %v3_8ba8
  %v1_8bc0 = add i32 %v4_8bc821, 1
  %v5_8bc4 = inttoptr i32 %v1_8bc0 to i8*
  %v2_8bcc = load i8, i8* %v5_8bc4, align 1
  %tmp61 = icmp ult i8 %v2_8bcc, 48
  br i1 %tmp61, label %dec_label_pc_8be8, label %dec_label_pc_8bd8

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8bc8.preheader, %dec_label_pc_8b90
  %v4_8bc821 = phi i32 [ %v1_8bc0, %dec_label_pc_8b90 ], [ %v4_8bc811, %dec_label_pc_8bc8.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8bc4, %dec_label_pc_8b90 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8bc8.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8bb4, %dec_label_pc_8b90 ], [ 0, %dec_label_pc_8bc8.preheader ]
  %v2_8bdc = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8bdc, 58
  br i1 %tmp62, label %dec_label_pc_8b90, label %dec_label_pc_8be8

dec_label_pc_8be8:                                ; preds = %dec_label_pc_8b90, %dec_label_pc_8bd8, %dec_label_pc_8bc8.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8bc8.preheader ], [ %v2_8bb4, %dec_label_pc_8b90 ], [ %stack_var_-52.019, %dec_label_pc_8bd8 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8bc8.preheader ], [ %v5_8bc4, %dec_label_pc_8b90 ], [ %stack_var_-32.120, %dec_label_pc_8bd8 ]
  %v2_8bec = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8bf0 = icmp eq i8 %v2_8bec, 115
  br i1 %v7_8bf0, label %dec_label_pc_8bf8, label %dec_label_pc_8c5c

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8be8
  %v1_8bfc = add i32 %stack_var_-36.133, 4
  %v1_8c08 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c08 = load i32, i32* %v1_8c08, align 4
  %v2_8c14 = icmp eq i32 %v2_8c08, 0
  br i1 %v2_8c14, label %dec_label_pc_8c28, label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8bf8
  %v5_8c20 = inttoptr i32 %v2_8c08 to i8*
  br label %dec_label_pc_8c30

dec_label_pc_8c28:                                ; preds = %dec_label_pc_8bf8
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c1c, %dec_label_pc_8c28
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a50.42, i32 0, i32 0), %dec_label_pc_8c28 ], [ %v5_8c20, %dec_label_pc_8c1c ]
  %v7_8c44 = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8c50 = add i32 %v7_8c44, %stack_var_-44.132
  br label %dec_label_pc_8e6c

dec_label_pc_8c5c:                                ; preds = %dec_label_pc_8be8
  %v2_8c60 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c64 = icmp eq i8 %v2_8c60, 100
  br i1 %v7_8c64, label %dec_label_pc_8c6c, label %dec_label_pc_8cc0

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c5c
  %v1_8c70 = add i32 %stack_var_-36.133, 4
  %v1_8c7c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c7c = load i32, i32* %v1_8c7c, align 4
  %v7_8ca8 = call i32 @printi(i32 %tmp, i32 %v2_8c7c, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8cb4 = add i32 %v7_8ca8, %stack_var_-44.132
  br label %dec_label_pc_8e6c

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8c5c
  %v2_8cc4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8cc8 = icmp eq i8 %v2_8cc4, 120
  br i1 %v7_8cc8, label %dec_label_pc_8cd0, label %dec_label_pc_8d24

dec_label_pc_8cd0:                                ; preds = %dec_label_pc_8cc0
  %v1_8cd4 = add i32 %stack_var_-36.133, 4
  %v1_8ce0 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ce0 = load i32, i32* %v1_8ce0, align 4
  %v7_8d0c = call i32 @printi(i32 %tmp, i32 %v2_8ce0, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8d18 = add i32 %v7_8d0c, %stack_var_-44.132
  br label %dec_label_pc_8e6c

dec_label_pc_8d24:                                ; preds = %dec_label_pc_8cc0
  %v2_8d28 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8d2c = icmp eq i8 %v2_8d28, 88
  br i1 %v7_8d2c, label %dec_label_pc_8d34, label %dec_label_pc_8d88

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d24
  %v1_8d38 = add i32 %stack_var_-36.133, 4
  %v1_8d44 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8d44 = load i32, i32* %v1_8d44, align 4
  %v7_8d70 = call i32 @printi(i32 %tmp, i32 %v2_8d44, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8d7c = add i32 %v7_8d70, %stack_var_-44.132
  br label %dec_label_pc_8e6c

dec_label_pc_8d88:                                ; preds = %dec_label_pc_8d24
  %v2_8d8c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8d90 = icmp eq i8 %v2_8d8c, 117
  br i1 %v7_8d90, label %dec_label_pc_8d98, label %dec_label_pc_8dec

dec_label_pc_8d98:                                ; preds = %dec_label_pc_8d88
  %v1_8d9c = add i32 %stack_var_-36.133, 4
  %v1_8da8 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8da8 = load i32, i32* %v1_8da8, align 4
  %v7_8dd4 = call i32 @printi(i32 %tmp, i32 %v2_8da8, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8de0 = add i32 %v7_8dd4, %stack_var_-44.132
  br label %dec_label_pc_8e6c

dec_label_pc_8dec:                                ; preds = %dec_label_pc_8d88
  %v2_8df0 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8df4 = icmp eq i8 %v2_8df0, 99
  br i1 %v7_8df4, label %dec_label_pc_8dfc, label %dec_label_pc_8e6c

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8dec
  %v1_8e00 = add i32 %stack_var_-36.133, 4
  %v1_8e0c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8e0c = load i32, i32* %v1_8e0c, align 4
  %v1_8e10 = urem i32 %v2_8e0c, 256
  store i32 %v1_8e10, i32* %stack_var_-18, align 4
  %v6_8e34 = call i32 @prints(i32 %tmp, i8* %v5_8e34, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8e00)
  %v2_8e40 = add i32 %v6_8e34, %stack_var_-44.132
  br label %dec_label_pc_8e6c

dec_label_pc_8e4c:                                ; preds = %dec_label_pc_8af0, %dec_label_pc_8b2c
  %stack_var_-32.2 = phi i8* [ %v5_8b08, %dec_label_pc_8b2c ], [ %stack_var_-32.435, %dec_label_pc_8af0 ]
  %v2_8e50 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8e50 = zext i8 %v2_8e50 to i32
  %v3_8e5c = call i32 @printchar(i32* %arg1, i32 %v3_8e50)
  %v1_8e64 = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8e6c

dec_label_pc_8e6c:                                ; preds = %dec_label_pc_8dec, %dec_label_pc_8dfc, %dec_label_pc_8d98, %dec_label_pc_8d34, %dec_label_pc_8cd0, %dec_label_pc_8c6c, %dec_label_pc_8c30, %dec_label_pc_8e4c
  %stack_var_-44.0 = phi i32 [ %v1_8e64, %dec_label_pc_8e4c ], [ %v2_8c50, %dec_label_pc_8c30 ], [ %v2_8cb4, %dec_label_pc_8c6c ], [ %v2_8d18, %dec_label_pc_8cd0 ], [ %v2_8d7c, %dec_label_pc_8d34 ], [ %v2_8de0, %dec_label_pc_8d98 ], [ %v2_8e40, %dec_label_pc_8dfc ], [ %stack_var_-44.132, %dec_label_pc_8dec ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8e4c ], [ %v1_8bfc, %dec_label_pc_8c30 ], [ %v1_8c70, %dec_label_pc_8c6c ], [ %v1_8cd4, %dec_label_pc_8cd0 ], [ %v1_8d38, %dec_label_pc_8d34 ], [ %v1_8d9c, %dec_label_pc_8d98 ], [ %v1_8e00, %dec_label_pc_8dfc ], [ %stack_var_-36.133, %dec_label_pc_8dec ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8e4c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c30 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c6c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8cd0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8d34 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8d98 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8dfc ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8dec ]
  %v4_8e6c = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8e70 = add i32 %v4_8e6c, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8e70 to i8*
  %v2_8e7c = load i8, i8* %stack_var_-32.4, align 1
  %v2_8e80 = icmp eq i8 %v2_8e7c, 0
  br i1 %v2_8e80, label %dec_label_pc_8e88, label %dec_label_pc_8af0

dec_label_pc_8e88:                                ; preds = %dec_label_pc_8b00, %dec_label_pc_8e6c, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8b00 ], [ %stack_var_-44.0, %dec_label_pc_8e6c ]
  %v2_8e8c = icmp eq i32* %arg1, null
  br i1 %v2_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8e88
  %v2_8e98 = load i32, i32* %arg1, align 4
  %v3_8ea0 = inttoptr i32 %v2_8e98 to i8*
  store i8 0, i8* %v3_8ea0, align 1
  br label %dec_label_pc_8ea4

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e88, %dec_label_pc_8e94
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8b68, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8b08, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8ea4, { 1, 0 }
  uselistorder label %dec_label_pc_8e88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8e6c, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8e4c, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8be8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8bd8, { 1, 0 }
  uselistorder label %dec_label_pc_8b64, { 1, 0 }
  uselistorder label %dec_label_pc_8af0, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8ebc = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8ec4 = load i32, i32* @fp, align 4
  %v10_8ec4 = load i32, i32* @lr, align 4
  store i32 36556, i32* %stack_var_-16, align 4
  %v2_8ec8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8ec8, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8ed4 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8ee0 = ptrtoint i32* %stack_var_-44 to i32
  %v14_8eec = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8ed4, i32 %v2_8ee0, i32 %arg1, i32 %v2_8ed4, i32 %v3_8ec4, i32 %v1_8ebc, i32 %v10_8ec4, i32 36556, i32 %arg2, i32 %arg3, i32 %arg4)
  ret i32 %v14_8eec

; uselistorder directives
  uselistorder i32 %v2_8ed4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_8f24 = call i32 @strlen(i8* %arg1)
  %v2_8f64.pre = load i32, i32* @global_var_2236c, align 4
  br label %dec_label_pc_8f44

dec_label_pc_8f44:                                ; preds = %dec_label_pc_8f44, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8f3c, %dec_label_pc_8f44 ]
  %v2_8f50 = add i32 %stack_var_-24.0, %tmp
  %v1_8f54 = inttoptr i32 %v2_8f50 to i8*
  %v2_8f54 = load i8, i8* %v1_8f54, align 1
  %v3_8f54 = zext i8 %v2_8f54 to i32
  %v2_8f58 = mul nuw nsw i32 %v3_8f54, 2
  %v2_8f68 = add i32 %v2_8f58, %v2_8f64.pre
  %v1_8f6c = inttoptr i32 %v2_8f68 to i16*
  %v2_8f6c = load i16, i16* %v1_8f6c, align 2
  %v1_8f70 = and i16 %v2_8f6c, 32
  %v2_8f74 = icmp eq i16 %v1_8f70, 0
  %v1_8f3c = add i32 %stack_var_-24.0, 1
  br i1 %v2_8f74, label %dec_label_pc_8f8c.preheader, label %dec_label_pc_8f44

dec_label_pc_8f8c.preheader:                      ; preds = %dec_label_pc_8f44
  %v1_8f2c = add i32 %v3_8f24, -1
  %v5_8f9810 = icmp slt i32 %v1_8f2c, %stack_var_-24.0
  br i1 %v5_8f9810, label %dec_label_pc_901c.preheader, label %dec_label_pc_8f9c

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f9c
  %v1_8f84 = add i32 %stack_var_-20.011, -1
  %v5_8f98 = icmp slt i32 %v1_8f84, %stack_var_-24.0
  br i1 %v5_8f98, label %dec_label_pc_901c.preheader, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f8c.preheader, %dec_label_pc_8f80
  %stack_var_-20.011 = phi i32 [ %v1_8f84, %dec_label_pc_8f80 ], [ %v1_8f2c, %dec_label_pc_8f8c.preheader ]
  %v2_8fa8 = add i32 %stack_var_-20.011, %tmp
  %v1_8fac = inttoptr i32 %v2_8fa8 to i8*
  %v2_8fac = load i8, i8* %v1_8fac, align 1
  %v3_8fac = zext i8 %v2_8fac to i32
  %v2_8fb0 = mul nuw nsw i32 %v3_8fac, 2
  %v2_8fc0 = add i32 %v2_8fb0, %v2_8f64.pre
  %v1_8fc4 = inttoptr i32 %v2_8fc0 to i16*
  %v2_8fc4 = load i16, i16* %v1_8fc4, align 2
  %v1_8fc8 = and i16 %v2_8fc4, 32
  %v2_8fcc = icmp eq i16 %v1_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_901c.preheader, label %dec_label_pc_8f80

dec_label_pc_901c.preheader:                      ; preds = %dec_label_pc_8f80, %dec_label_pc_8f9c, %dec_label_pc_8f8c.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8f2c, %dec_label_pc_8f8c.preheader ], [ %v1_8f84, %dec_label_pc_8f80 ], [ %stack_var_-20.011, %dec_label_pc_8f9c ]
  br label %dec_label_pc_901c

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_901c
  %v2_9004 = add i32 %storemerge1, %tmp
  %v1_9008 = inttoptr i32 %v2_9004 to i8*
  %v2_9008 = load i8, i8* %v1_9008, align 1
  %v3_900c = inttoptr i32 %v2_9040 to i8*
  store i8 %v2_9008, i8* %v3_900c, align 1
  %v1_9014 = add i32 %storemerge1, 1
  br label %dec_label_pc_901c

dec_label_pc_901c:                                ; preds = %dec_label_pc_901c.preheader, %dec_label_pc_8fe0
  %storemerge1 = phi i32 [ %v1_9014, %dec_label_pc_8fe0 ], [ %stack_var_-24.0, %dec_label_pc_901c.preheader ]
  %v7_9028 = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_9034 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_9040 = add i32 %v2_9034, %tmp
  br i1 %v7_9028, label %dec_label_pc_902c, label %dec_label_pc_8fe0

dec_label_pc_902c:                                ; preds = %dec_label_pc_901c
  %v3_9048 = inttoptr i32 %v2_9040 to i8*
  store i8 0, i8* %v3_9048, align 1
  ret i32 %v3_8f24

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8f2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_901c, { 1, 0 }
  uselistorder label %dec_label_pc_901c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8f9c, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_907c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_907c, i32* %arg2, align 4
  %v3_9094 = icmp eq i32 %v1_907c, -1
  %. = zext i1 %v3_9094 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9118.lr.ph:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_90c8 = load i32, i32* @fp, align 4
  store i32 %v3_90c8, i32* %stack_var_-16, align 4
  %v5_90f0 = call i32 @__GI_memset(i8* %arg2, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9104 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %dec_label_pc_9118.lr.ph, %dec_label_pc_9118
  %storemerge426 = phi i32 [ 0, %dec_label_pc_9118.lr.ph ], [ %v1_912c, %dec_label_pc_9118 ]
  %v5_9124 = mul nuw nsw i32 %storemerge426, 4
  %v6_9124 = add i32 %v5_9124, %v2_9104
  %v7_9124 = inttoptr i32 %v6_9124 to i32*
  store i32 0, i32* %v7_9124, align 4
  %v1_912c = add nuw nsw i32 %storemerge426, 1
  %tmp51 = icmp ult i32 %v1_912c, 32
  br i1 %tmp51, label %dec_label_pc_9118, label %dec_label_pc_9140

dec_label_pc_9140:                                ; preds = %dec_label_pc_9118
  %v13_90c8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9144 = udiv i32 %arg1, 32
  %v3_9150 = mul nuw nsw i32 %v3_9144, 4
  %v2_9158 = add nsw i32 %v3_9150, -160
  %v2_915c = add i32 %v2_9158, %v13_90c8
  %v1_9160 = inttoptr i32 %v2_915c to i32*
  %v2_9160 = load i32, i32* %v1_9160, align 4
  %v1_9168 = urem i32 %arg1, 32
  %v6_9170 = shl i32 1, %v1_9168
  %v2_9174 = or i32 %v2_9160, %v6_9170
  store i32 %v2_9174, i32* %v1_9160, align 4
  %v1_9194 = add i32 %arg1, 1
  %v2_91a0 = ptrtoint i32* %stack_var_-184 to i32
  %v5_91b4 = call i32 @__libc_select(i32 %v1_9194, i32 %v2_9104, i32 0, i32 %v2_9104, i32 %v2_91a0)
  %v5_91c8 = icmp sgt i32 %v5_91b4, 0
  br i1 %v5_91c8, label %dec_label_pc_9348.preheader, label %dec_label_pc_92b4.preheader

dec_label_pc_92b4.preheader:                      ; preds = %dec_label_pc_9140
  %v7_92bc22 = icmp slt i32 %tmp32, 10
  br i1 %v7_92bc22, label %dec_label_pc_91f4.lr.ph, label %dec_label_pc_9348.preheader

dec_label_pc_91f4.lr.ph:                          ; preds = %dec_label_pc_92b4.preheader, %dec_label_pc_92a8
  %stack_var_-44.023 = phi i32 [ %v1_92ac, %dec_label_pc_92a8 ], [ %tmp32, %dec_label_pc_92b4.preheader ]
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_91f4.lr.ph, %dec_label_pc_91f4
  %storemerge514 = phi i32 [ 0, %dec_label_pc_91f4.lr.ph ], [ %v1_9208, %dec_label_pc_91f4 ]
  %v5_9200 = mul nuw nsw i32 %storemerge514, 4
  %v6_9200 = add i32 %v5_9200, %v2_9104
  %v7_9200 = inttoptr i32 %v6_9200 to i32*
  store i32 0, i32* %v7_9200, align 4
  %v1_9208 = add nuw nsw i32 %storemerge514, 1
  %tmp52 = icmp ult i32 %v1_9208, 32
  br i1 %tmp52, label %dec_label_pc_91f4, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %dec_label_pc_91f4
  %v2_923c = load i32, i32* %v1_9160, align 4
  %v2_9250 = or i32 %v2_923c, %v6_9170
  store i32 %v2_9250, i32* %v1_9160, align 4
  %v5_9290 = call i32 @__libc_select(i32 %v1_9194, i32 %v2_9104, i32 0, i32 %v2_9104, i32 %v2_91a0)
  %v5_92a4 = icmp sgt i32 %v5_9290, 0
  br i1 %v5_92a4, label %dec_label_pc_9348.preheader, label %dec_label_pc_92a8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_921c
  %v1_92ac = add nsw i32 %stack_var_-44.023, 1
  %v7_92bc = icmp slt i32 %v1_92ac, 10
  br i1 %v7_92bc, label %dec_label_pc_91f4.lr.ph, label %dec_label_pc_9348.preheader

dec_label_pc_9348.preheader:                      ; preds = %dec_label_pc_92a8, %dec_label_pc_921c, %dec_label_pc_92b4.preheader, %dec_label_pc_9140
  %v2_92dc = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_935056 = icmp sgt i32 %arg3, 1
  %v2_936858 = icmp eq i1 %not.v7_935056, false
  br i1 %v2_936858, label %dec_label_pc_9370, label %dec_label_pc_92d4

dec_label_pc_92d4:                                ; preds = %dec_label_pc_9348.preheader, %dec_label_pc_933c
  %v1_934c61.in = phi i32 [ %v1_934c61, %dec_label_pc_933c ], [ %arg3, %dec_label_pc_9348.preheader ]
  %stack_var_-40.060 = phi i8* [ %v5_932c, %dec_label_pc_933c ], [ %arg2, %dec_label_pc_9348.preheader ]
  %stack_var_-36.059 = phi i32 [ %v1_9340, %dec_label_pc_933c ], [ 0, %dec_label_pc_9348.preheader ]
  %v1_934c61 = add i32 %v1_934c61.in, -1
  %v2_92d8 = load i32, i32* @global_var_225a0.47, align 4
  %v5_92f0 = call i32 @__libc_recv(i32 %v2_92d8, i32 %v2_92dc, i32 1, i32 0, i32 %v1_934c61)
  %v7_92f8 = icmp eq i32 %v5_92f0, 1
  br i1 %v7_92f8, label %dec_label_pc_9318, label %dec_label_pc_9300

dec_label_pc_9300:                                ; preds = %dec_label_pc_92d4
  store i8 0, i8* %stack_var_-40.060, align 1
  br label %dec_label_pc_9384

dec_label_pc_9318:                                ; preds = %dec_label_pc_92d4
  %v3_9318 = load i8, i8* %stack_var_-185, align 1
  %v4_931c = ptrtoint i8* %stack_var_-40.060 to i32
  store i8 %v3_9318, i8* %stack_var_-40.060, align 1
  %v1_9328 = add i32 %v4_931c, 1
  %v5_932c = inttoptr i32 %v1_9328 to i8*
  %v3_9330 = load i8, i8* %stack_var_-185, align 1
  %v7_9334 = icmp eq i8 %v3_9330, 10
  br i1 %v7_9334, label %dec_label_pc_9370, label %dec_label_pc_933c

dec_label_pc_933c:                                ; preds = %dec_label_pc_9318
  %v1_9340 = add i32 %stack_var_-36.059, 1
  %not.v7_9350 = icmp sgt i32 %v1_934c61, 1
  %v2_9368 = icmp eq i1 %not.v7_9350, false
  br i1 %v2_9368, label %dec_label_pc_9370, label %dec_label_pc_92d4

dec_label_pc_9370:                                ; preds = %dec_label_pc_9318, %dec_label_pc_933c, %dec_label_pc_9348.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9348.preheader ], [ %v1_9340, %dec_label_pc_933c ], [ %stack_var_-36.059, %dec_label_pc_9318 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9348.preheader ], [ %v5_932c, %dec_label_pc_933c ], [ %v5_932c, %dec_label_pc_9318 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9300, %dec_label_pc_9370
  %storemerge = phi i32 [ -1, %dec_label_pc_9300 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9370 ]
  %v2_9390 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9390, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_934c61, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.060, { 1, 2, 0 }
  uselistorder i32 %v1_92ac, { 1, 0 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %storemerge426, { 1, 0 }
  uselistorder i32 %v2_9104, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9384, { 1, 0 }
  uselistorder label %dec_label_pc_9370, { 1, 0, 2 }
  uselistorder label %dec_label_pc_92d4, { 1, 0 }
  uselistorder label %dec_label_pc_91f4, { 1, 0 }
  uselistorder label %dec_label_pc_91f4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9118, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_93a0 = load i32, i32* @fp, align 4
  store i32 %v3_93a0, i32* %stack_var_-16, align 4
  %v13_93a0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_93c8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_93d8 = or i32 %v2_93c8, 2048
  store i32 %v1_93d8, i32* @r3, align 4
  store i32 %v1_93d8, i32* @r2, align 4
  %v2_93ec = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9400 = urem i32 %arg3, 65536
  %v1_9408 = call i32 @__GI_htons(i32 %v3_9400)
  %v3_9428 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9430 = icmp eq i32 %v3_9428, 0
  br i1 %v2_9430, label %dec_label_pc_9444, label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %entry
  br label %dec_label_pc_95fc

dec_label_pc_9444:                                ; preds = %entry
  %v3_9458 = bitcast i32* %stack_var_-40 to i8*
  %v4_9458 = call i32 @__GI_memset(i8* %v3_9458, i32 0, i32 8)
  %v2_945c = ptrtoint i32* %stack_var_-48 to i32
  %v3_946c = call i32 @__libc_connect(i32 %arg1, i32 %v2_945c, i32 16)
  store i32 %v3_946c, i32* @r3, align 4
  %v1_947c = icmp slt i32 %v3_946c, 0
  br i1 %v1_947c, label %dec_label_pc_9484, label %dec_label_pc_95c0

dec_label_pc_9484:                                ; preds = %dec_label_pc_9444
  %v0_9484 = call i32 @__GI___errno_location()
  %v1_948c = inttoptr i32 %v0_9484 to i32*
  %v2_948c = load i32, i32* %v1_948c, align 4
  %v7_9490 = icmp eq i32 %v2_948c, 115
  br i1 %v7_9490, label %dec_label_pc_94bc.lr.ph, label %dec_label_pc_95b4

dec_label_pc_94bc.lr.ph:                          ; preds = %dec_label_pc_9484
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_94a8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94bc.lr.ph, %dec_label_pc_94bc
  %storemerge14 = phi i32 [ 0, %dec_label_pc_94bc.lr.ph ], [ %v1_94d0, %dec_label_pc_94bc ]
  %v5_94c8 = mul nuw nsw i32 %storemerge14, 4
  %v6_94c8 = add i32 %v5_94c8, %v2_94a8
  %v7_94c8 = inttoptr i32 %v6_94c8 to i32*
  store i32 0, i32* %v7_94c8, align 4
  %v1_94d0 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_94d0, 32
  br i1 %tmp28, label %dec_label_pc_94bc, label %dec_label_pc_94e4

dec_label_pc_94e4:                                ; preds = %dec_label_pc_94bc
  %v3_94e8 = udiv i32 %arg1, 32
  %v3_94f4 = mul nuw nsw i32 %v3_94e8, 4
  %v2_94fc = add nsw i32 %v3_94f4, -160
  %v2_9500 = add i32 %v2_94fc, %v13_93a0
  %v1_9504 = inttoptr i32 %v2_9500 to i32*
  %v2_9504 = load i32, i32* %v1_9504, align 4
  %v1_950c = urem i32 %arg1, 32
  %v6_9514 = shl i32 1, %v1_950c
  %v2_9518 = or i32 %v2_9504, %v6_9514
  store i32 %v2_9518, i32* %v1_9504, align 4
  %v1_9538 = add i32 %arg1, 1
  %v2_9540 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9558 = call i32 @__libc_select(i32 %v1_9538, i32 0, i32 %v2_94a8, i32 0, i32 %v2_9540)
  %tmp29 = icmp slt i32 %v5_9558, 1
  br i1 %tmp29, label %dec_label_pc_95a8, label %dec_label_pc_9568

dec_label_pc_9568:                                ; preds = %dec_label_pc_94e4
  store i32 4, i32* %stack_var_-188, align 4
  %v2_9570 = ptrtoint i32* %stack_var_-192 to i32
  %v2_9574 = ptrtoint i32* %stack_var_-188 to i32
  %v5_958c = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_9570, i32 %v2_9574)
  %v3_9590 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_9590, i32* @r3, align 4
  %v2_9594 = icmp eq i32 %v3_9590, 0
  br i1 %v2_9594, label %dec_label_pc_95c0, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %dec_label_pc_9568
  br label %dec_label_pc_95fc

dec_label_pc_95a8:                                ; preds = %dec_label_pc_94e4
  br label %dec_label_pc_95fc

dec_label_pc_95b4:                                ; preds = %dec_label_pc_9484
  br label %dec_label_pc_95fc

dec_label_pc_95c0:                                ; preds = %dec_label_pc_9444, %dec_label_pc_9568
  store i32 0, i32* @r2, align 4
  %v2_95cc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_95dc = and i32 %v2_95cc, -2049
  store i32 %v1_95dc, i32* @r3, align 4
  store i32 %v1_95dc, i32* @r2, align 4
  %v2_95f0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_95fc

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95b4, %dec_label_pc_95a8, %dec_label_pc_959c, %dec_label_pc_9438, %dec_label_pc_95c0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_95a8 ], [ 1, %dec_label_pc_95c0 ], [ 0, %dec_label_pc_959c ], [ 0, %dec_label_pc_95b4 ], [ 0, %dec_label_pc_9438 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_94a8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_95fc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_95c0, { 1, 0 }
  uselistorder label %dec_label_pc_94bc, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_9614 = load i32, i32* @r4, align 4
  %v6_9614 = load i32, i32* @r5, align 4
  %v9_9614 = load i32, i32* @r6, align 4
  %v12_9614 = load i32, i32* @fp, align 4
  store i32 38428, i32* %stack_var_-4, align 4
  %v2_9618 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9618, i32* @fp, align 4
  %v0_9620 = call i32 @__libc_fork()
  %v2_9630 = icmp eq i32 %v0_9620, 0
  br i1 %v2_9630, label %dec_label_pc_979c, label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %entry
  %v2_9648 = load i32, i32* @global_var_22598.49, align 4
  %v5_9648 = load i32, i32* @global_var_2259c.50, align 4
  %v2_9654 = add i32 %v2_9648, 1
  %v3_9654 = icmp eq i32 %v2_9654, 0
  %v4_9658 = zext i1 %v3_9654 to i32
  %v5_9658 = add i32 %v4_9658, %v5_9648
  store i32 %v2_9654, i32* @global_var_22598.49, align 4
  store i32 %v5_9658, i32* @global_var_2259c.50, align 4
  %v2_9674 = add i32 %v2_9648, 2
  %v3_9674 = icmp eq i32 %v2_9654, -1
  %v4_9678 = zext i1 %v3_9674 to i32
  %v5_9678 = add i32 %v5_9658, %v4_9678
  %v3_967c = udiv i32 %v2_9674, 1073741824
  %v3_9680 = mul i32 %v5_9678, 4
  %v2_9684 = or i32 %v3_9680, %v3_967c
  store i32 %v2_9684, i32* @r4, align 4
  %v3_9688 = mul i32 %v2_9674, 4
  %v1_9690 = call i32 @malloc(i32 %v3_9688)
  br label %dec_label_pc_96e8

dec_label_pc_96a8:                                ; preds = %dec_label_pc_96e8, %dec_label_pc_9734
  %v3_96ac = mul i32 %storemerge2, 4
  %v2_96b8 = add i32 %v3_96ac, %v1_9690
  %v2_96cc = load i32, i32* @global_var_2527c.52, align 4
  %v2_96d0 = add i32 %v2_96cc, %v3_96ac
  %v1_96d4 = inttoptr i32 %v2_96d0 to i32*
  %v2_96d4 = load i32, i32* %v1_96d4, align 4
  %v2_96d8 = inttoptr i32 %v2_96b8 to i32*
  store i32 %v2_96d4, i32* %v2_96d8, align 4
  %v1_96e0 = add i32 %storemerge2, 1
  br label %dec_label_pc_96e8

dec_label_pc_96e8:                                ; preds = %dec_label_pc_9644, %dec_label_pc_96a8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_9644 ], [ %v1_96e0, %dec_label_pc_96a8 ]
  %v2_9700 = load i32, i32* @global_var_22598.49, align 4
  %v5_9700 = load i32, i32* @global_var_2259c.50, align 4
  %v2_9714 = add i32 %v2_9700, -1
  %v3_9714 = icmp ne i32 %v2_9700, 0
  %v3_9718 = add i32 %v5_9700, -1
  %v5_9718 = sext i1 %v3_9714 to i32
  %v9_972c = icmp eq i32 %v3_9718, %v5_9718
  br i1 %v9_972c, label %dec_label_pc_9734, label %dec_label_pc_96a8

dec_label_pc_9734:                                ; preds = %dec_label_pc_96e8
  store i32 %v2_9714, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_9714, %storemerge2
  br i1 %tmp, label %dec_label_pc_96a8, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9734
  store i32 %v5_9700, i32* @r4, align 4
  %v3_975c = mul i32 %v2_9700, 4
  %v1_9760 = add i32 %v1_9690, -4
  %v2_976c = add i32 %v1_9760, %v3_975c
  %v2_9774 = inttoptr i32 %v2_976c to i32*
  store i32 %v0_9620, i32* %v2_9774, align 4
  %v2_977c = load i32, i32* @global_var_2527c.52, align 4
  store i32 %v2_977c, i32* @r0, align 4
  %v0_9784 = call i32 @free()
  store i32 %v1_9690, i32* @global_var_2527c.52, align 4
  br label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %entry, %dec_label_pc_9754
  store i32 %v3_9614, i32* @r4, align 4
  store i32 %v6_9614, i32* @r5, align 4
  store i32 %v9_9614, i32* @r6, align 4
  store i32 %v12_9614, i32* @fp, align 4
  ret i32 %v0_9620

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_96ac, { 1, 0 }
  uselistorder i32 %v1_9690, { 2, 0, 1 }
  uselistorder i32 %v2_9654, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_979c, { 1, 0 }
  uselistorder label %dec_label_pc_96e8, { 1, 0 }
  uselistorder label %dec_label_pc_96a8, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_97bc = load i32, i32* @fp, align 4
  store i32 %v3_97bc, i32* %stack_var_-16, align 4
  store i32 38852, i32* %stack_var_-4, align 4
  %v2_97c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97c0, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-104, align 4
  %v8_97e0 = icmp sgt i32 %arg4, 4096
  br i1 %v8_97e0, label %dec_label_pc_9974, label %dec_label_pc_97e4

dec_label_pc_97e4:                                ; preds = %entry
  %v13_97bc = ptrtoint i32* %stack_var_-16 to i32
  %v3_97f0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_9800 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_9814 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9820 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_9820, i32* @r0, align 4
  %v2_982c = call i32 @bzero(i32 %v2_9820, i32 16)
  %v1_9834 = add i32 %v1_9814, 16
  %v2_9834 = inttoptr i32 %v1_9834 to i32*
  %v3_9834 = load i32, i32* %v2_9834, align 4
  %v1_9838 = inttoptr i32 %v3_9834 to i32*
  %v2_9838 = load i32, i32* %v1_9838, align 4
  %v1_9840 = add i32 %v1_9814, 12
  %v2_9840 = inttoptr i32 %v1_9840 to i32*
  %v3_9840 = load i32, i32* %v2_9840, align 4
  store i32 %v3_9840, i32* @r2, align 4
  %v2_984c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_984c, i32* @r3, align 4
  %v4_9858 = call i32 @bcopy(i32 %v2_9838, i32 %v2_984c, i32 %v3_9840, i32 %v2_984c)
  %v1_9860 = add i32 %v1_9814, 8
  %v2_9860 = inttoptr i32 %v1_9860 to i32*
  %v3_9860 = load i32, i32* %v2_9860, align 4
  %v3_9868 = urem i32 %v3_9860, 65536
  store i32 %v3_9868, i32* %stack_var_-56, align 4
  %v2_98c4 = ptrtoint i32* %stack_var_-88 to i32
  %v2_98d0 = bitcast i32* %stack_var_-88 to i8*
  %v2_9938 = add i32 %v2_9800, %arg3
  %v2_98e0 = add i32 %v13_97bc, -72
  br label %dec_label_pc_9888

dec_label_pc_9888:                                ; preds = %dec_label_pc_9964, %dec_label_pc_97e4
  %storemerge1 = phi i32 [ 0, %dec_label_pc_97e4 ], [ %v1_9968, %dec_label_pc_9964 ]
  %tmp = icmp ult i32 %storemerge1, 50
  br i1 %tmp, label %dec_label_pc_9964, label %dec_label_pc_9894

dec_label_pc_9894:                                ; preds = %dec_label_pc_9888
  %v2_9898 = call i32 @__GI_time(i32* null)
  %v1_98a4 = call i32 @srand(i32 %v2_9898)
  %v1_98a8 = call i32 @rand_init(i32 %v1_98a4)
  %v0_98ac = call i32 @rand_next()
  %v1_98b4 = mul i32 %v0_98ac, 4
  %v3_98b8 = and i32 %v1_98b4, 12
  %v1_98bc = add nuw nsw i32 %v3_98b8, 12
  %v3_98d0 = call i32 @rand_alphastr(i8* %v2_98d0, i32 %v1_98bc)
  %v2_98e4 = add i32 %v2_98e0, %v1_98bc
  %v3_98ec = inttoptr i32 %v2_98e4 to i8*
  store i8 0, i8* %v3_98ec, align 4
  %v3_98f8 = load i32, i32* %stack_var_-104, align 4
  %v5_990c = call i32 @__libc_send(i32 %v3_97f0, i32 %v2_98c4, i32 %v3_98f8, i32 0, i32 %v2_98c4)
  %v3_9920 = call i32 @__libc_connect(i32 %v3_97f0, i32 %v2_9820, i32 16)
  %v2_9928 = call i32 @__GI_time(i32* null)
  store i32 %v2_9928, i32* @r1, align 4
  %v5_9940 = icmp slt i32 %v2_9928, %v2_9938
  br i1 %v5_9940, label %dec_label_pc_995c, label %dec_label_pc_9944

dec_label_pc_9944:                                ; preds = %dec_label_pc_9894
  %v1_9948 = call i32 @__GI___libc_close(i32 %v3_97f0)
  store i32 %v2_98c4, i32* @r0, align 4
  %v0_9950 = call i32 @free()
  %v1_9958 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_995c

dec_label_pc_995c:                                ; preds = %dec_label_pc_9894, %dec_label_pc_9944
  br label %dec_label_pc_9964

dec_label_pc_9964:                                ; preds = %dec_label_pc_9888, %dec_label_pc_995c
  %stack_var_-28.0 = phi i32 [ %storemerge1, %dec_label_pc_9888 ], [ 0, %dec_label_pc_995c ]
  %v1_9968 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_9888

dec_label_pc_9974:                                ; preds = %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v2_9820, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9964, { 1, 0 }
  uselistorder label %dec_label_pc_995c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v6_9984 = load i32, i32* @fp, align 4
  store i32 39308, i32* %stack_var_-4, align 4
  %v2_9988 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9988, i32* @fp, align 4
  %v2_999c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i32]* @global_var_18a58.54 to i32), i32* @r1, align 4
  %v2_99a8 = inttoptr i32 %v2_999c to i8*
  %v3_99a8 = call i32 @__GI_strcoll(i8* %v2_99a8, i32 ptrtoint ([6 x i32]* @global_var_18a58.54 to i32))
  %v2_99b0 = icmp eq i32 %v3_99a8, 0
  br i1 %v2_99b0, label %dec_label_pc_99b8, label %dec_label_pc_9adc

dec_label_pc_99b8:                                ; preds = %entry
  %v7_99c0 = icmp slt i32 %arg1, 5
  br i1 %v7_99c0, label %dec_label_pc_9bf4, label %dec_label_pc_99c4

dec_label_pc_99c4:                                ; preds = %dec_label_pc_99b8
  %v1_99c8 = add i32 %tmp, 4
  %v1_99cc = inttoptr i32 %v1_99c8 to i32*
  %v2_99cc = load i32, i32* %v1_99cc, align 4
  %v1_99d8 = add i32 %tmp, 8
  %v1_99dc = inttoptr i32 %v1_99d8 to i32*
  %v2_99dc = load i32, i32* %v1_99dc, align 4
  store i32 %v2_99dc, i32* @r0, align 4
  %v1_99e4 = call i32 @atol(i32 %v2_99dc)
  %v1_99f4 = add i32 %tmp, 12
  %v1_99f8 = inttoptr i32 %v1_99f4 to i32*
  %v2_99f8 = load i32, i32* %v1_99f8, align 4
  store i32 %v2_99f8, i32* @r0, align 4
  %v1_9a00 = call i32 @atol(i32 %v2_99f8)
  %v1_9a10 = add i32 %tmp, 16
  %v1_9a14 = inttoptr i32 %v1_9a10 to i32*
  %v2_9a14 = load i32, i32* %v1_9a14, align 4
  store i32 %v2_9a14, i32* @r0, align 4
  %v1_9a1c = call i32 @atol(i32 %v2_9a14)
  store i32 %v2_99cc, i32* @r0, align 4
  %v2_9a34 = call i32 @__GI_strchr(i32 %v2_99cc, i32 44)
  %v2_9a3c = icmp eq i32 %v2_9a34, 0
  br i1 %v2_9a3c, label %dec_label_pc_9ab0, label %dec_label_pc_9a44

dec_label_pc_9a44:                                ; preds = %dec_label_pc_99c4
  %v2_9a50 = call i32 @__GI_strtok(i32 %v2_99cc, i32 ptrtoint ([5 x i32]* @global_var_18a5c.56 to i32))
  %v2_9aa46 = icmp eq i32 %v2_9a50, 0
  br i1 %v2_9aa46, label %dec_label_pc_9adc, label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a44, %dec_label_pc_9a8c
  %storemerge47 = phi i32 [ %v2_9a94, %dec_label_pc_9a8c ], [ %v2_9a50, %dec_label_pc_9a44 ]
  %v0_9a60 = call i32 @listFork()
  %v2_9a68 = icmp eq i32 %v0_9a60, 0
  br i1 %v2_9a68, label %dec_label_pc_9a70, label %dec_label_pc_9a8c

dec_label_pc_9a70:                                ; preds = %dec_label_pc_9a60
  %v4_9a80 = call i32 @sendSTD(i32 %storemerge47, i32 %v1_99e4, i32 %v1_9a00, i32 %v1_9a1c)
  %v1_9a88 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_9a8c

dec_label_pc_9a8c:                                ; preds = %dec_label_pc_9a60, %dec_label_pc_9a70
  %v2_9a94 = call i32 @__GI_strtok(i32 0, i32 ptrtoint ([5 x i32]* @global_var_18a5c.56 to i32))
  %v2_9aa4 = icmp eq i32 %v2_9a94, 0
  br i1 %v2_9aa4, label %dec_label_pc_9adc, label %dec_label_pc_9a60

dec_label_pc_9ab0:                                ; preds = %dec_label_pc_99c4
  %v0_9ab0 = call i32 @listFork()
  %v2_9ab8 = icmp eq i32 %v0_9ab0, 0
  br i1 %v2_9ab8, label %dec_label_pc_9ac0, label %dec_label_pc_9bf4

dec_label_pc_9ac0:                                ; preds = %dec_label_pc_9ab0
  %v4_9ad0 = call i32 @sendSTD(i32 %v2_99cc, i32 %v1_99e4, i32 %v1_9a00, i32 %v1_9a1c)
  %v1_9ad8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_9adc

dec_label_pc_9adc:                                ; preds = %dec_label_pc_9a8c, %dec_label_pc_9a44, %entry, %dec_label_pc_9ac0
  %v2_9ae0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i32]* @global_var_18a60.58 to i32), i32* @r1, align 4
  %v2_9aec = inttoptr i32 %v2_9ae0 to i8*
  %v3_9aec = call i32 @__GI_strcoll(i8* %v2_9aec, i32 ptrtoint ([4 x i32]* @global_var_18a60.58 to i32))
  %v2_9af4 = icmp eq i32 %v3_9aec, 0
  br i1 %v2_9af4, label %dec_label_pc_9afc, label %dec_label_pc_9bf4

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9adc
  br label %dec_label_pc_9ba0

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9ba0, %dec_label_pc_9bd4
  %v3_9b14 = mul i32 %v3_9be8, 4
  %v2_9b20 = load i32, i32* @global_var_2527c.52, align 4
  %v2_9b24 = add i32 %v2_9b20, %v3_9b14
  %v1_9b28 = inttoptr i32 %v2_9b24 to i32*
  %v2_9b28 = load i32, i32* %v1_9b28, align 4
  %v2_9b2c = icmp eq i32 %v2_9b28, 0
  br i1 %v2_9b2c, label %dec_label_pc_9b94, label %dec_label_pc_9b34

dec_label_pc_9b34:                                ; preds = %dec_label_pc_9b10
  %v2_9b4c = load i32, i32* %v1_9b28, align 4
  %v0_9b50 = call i32 @__getpid()
  %v9_9b58 = icmp eq i32 %v2_9b4c, %v0_9b50
  br i1 %v9_9b58, label %dec_label_pc_9b94, label %dec_label_pc_9b60

dec_label_pc_9b60:                                ; preds = %dec_label_pc_9b34
  %v2_9b70 = load i32, i32* @global_var_2527c.52, align 4
  %v2_9b74 = add i32 %v2_9b70, %v3_9b14
  %v1_9b78 = inttoptr i32 %v2_9b74 to i32*
  %v2_9b78 = load i32, i32* %v1_9b78, align 4
  %v3_9b84 = call i32 @kill(i32 %v2_9b78, i32 9, i32 %v3_9b14)
  %v1_9b8c = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9b94

dec_label_pc_9b94:                                ; preds = %dec_label_pc_9b34, %dec_label_pc_9b10, %dec_label_pc_9b60
  %v1_9bfc9 = phi i32 [ %v1_9bfc10, %dec_label_pc_9b10 ], [ %v0_9b50, %dec_label_pc_9b34 ], [ %v3_9b84, %dec_label_pc_9b60 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.1, %dec_label_pc_9b10 ], [ %stack_var_-32.1, %dec_label_pc_9b34 ], [ %v1_9b8c, %dec_label_pc_9b60 ]
  %v1_9b98 = add i32 %v3_9be8, 1
  br label %dec_label_pc_9ba0

dec_label_pc_9ba0:                                ; preds = %dec_label_pc_9afc, %dec_label_pc_9b94
  %v1_9bfc10 = phi i32 [ 0, %dec_label_pc_9afc ], [ %v1_9bfc9, %dec_label_pc_9b94 ]
  %stack_var_-32.1 = phi i32 [ 0, %dec_label_pc_9afc ], [ %stack_var_-32.0, %dec_label_pc_9b94 ]
  %v3_9be8 = phi i32 [ 0, %dec_label_pc_9afc ], [ %v1_9b98, %dec_label_pc_9b94 ]
  %v5_9bb8 = load i32, i32* @global_var_2259c.50, align 4
  %v9_9bcc = icmp eq i32 %v5_9bb8, 0
  br i1 %v9_9bcc, label %dec_label_pc_9bd4, label %dec_label_pc_9b10

dec_label_pc_9bd4:                                ; preds = %dec_label_pc_9ba0
  %v2_9bb8 = load i32, i32* @global_var_22598.49, align 4
  %tmp30 = icmp ugt i32 %v2_9bb8, %v3_9be8
  br i1 %tmp30, label %dec_label_pc_9b10, label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bd4, %dec_label_pc_9ab0, %dec_label_pc_9adc, %dec_label_pc_99b8
  %v1_9bfc = phi i32 [ %v0_9ab0, %dec_label_pc_9ab0 ], [ %v3_9aec, %dec_label_pc_9adc ], [ 0, %dec_label_pc_99b8 ], [ %v1_9bfc10, %dec_label_pc_9bd4 ]
  store i32 %v6_9984, i32* @fp, align 4
  ret i32 %v1_9bfc

; uselistorder directives
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v3_9b14, { 0, 2, 1 }
  uselistorder i32 %v2_9a94, { 1, 0 }
  uselistorder i32 %v1_9a1c, { 1, 0 }
  uselistorder i32 %v1_9a00, { 1, 0 }
  uselistorder i32 %v1_99e4, { 1, 0 }
  uselistorder i32 %v2_99cc, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ()* @listFork, { 1, 0 }
  uselistorder label %dec_label_pc_9bf4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_9ba0, { 1, 0 }
  uselistorder label %dec_label_pc_9b94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9b10, { 1, 0 }
  uselistorder label %dec_label_pc_9adc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9a8c, { 1, 0 }
  uselistorder label %dec_label_pc_9a60, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c18 = load i32, i32* @fp, align 4
  store i32 39968, i32* %stack_var_-4, align 4
  %v2_9c1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c1c, i32* @fp, align 4
  %v2_9c30 = ptrtoint i32* %stack_var_-4116 to i32
  %v3_9c40 = bitcast i32* %stack_var_-4116 to i8*
  %v4_9c40 = call i32 @__GI_memset(i8* %v3_9c40, i32 0, i32 4096)
  %v2_9c48 = load i32, i32* @global_var_225a0.47, align 4
  %v2_9c4c = icmp eq i32 %v2_9c48, 0
  br i1 %v2_9c4c, label %dec_label_pc_9c70, label %dec_label_pc_9c54

dec_label_pc_9c54:                                ; preds = %entry
  %v1_9c60 = call i32 @__GI___libc_close(i32 %v2_9c48)
  store i32 0, i32* @global_var_225a0.47, align 4
  br label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %entry, %dec_label_pc_9c54
  %v2_9c74 = load i32, i32* @global_var_22364.63, align 4
  %v2_9c78 = icmp eq i32 %v2_9c74, 0
  br i1 %v2_9c78, label %dec_label_pc_9ca4, label %dec_label_pc_9c90

dec_label_pc_9c90:                                ; preds = %dec_label_pc_9c70
  %v1_9c98 = add i32 %v2_9c74, 1
  br label %dec_label_pc_9ca4

dec_label_pc_9ca4:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9c90
  %storemerge1 = phi i32 [ %v1_9c98, %dec_label_pc_9c90 ], [ 0, %dec_label_pc_9c70 ]
  store i32 %storemerge1, i32* @global_var_22364.63, align 4
  %v4_9cbc = mul i32 %storemerge1, 4
  %v5_9cbc = add i32 %v4_9cbc, ptrtoint ([15 x i8]** @global_var_22360.66 to i32)
  %v6_9cbc = inttoptr i32 %v5_9cbc to i32*
  %v7_9cbc = load i32, i32* %v6_9cbc, align 4
  store i32 %v7_9cbc, i32* @r1, align 4
  %v3_9cc8 = call i32 @strcpy(i8* %v3_9c40, i32 %v7_9cbc)
  store i32 %v2_9c30, i32* @r0, align 4
  %v2_9cec = call i32 @__GI_strchr(i32 %v2_9c30, i32 58)
  %v2_9cf4 = icmp eq i32 %v2_9cec, 0
  br i1 %v2_9cf4, label %dec_label_pc_9d54, label %dec_label_pc_9cfc

dec_label_pc_9cfc:                                ; preds = %dec_label_pc_9ca4
  store i32 %v2_9c30, i32* @r0, align 4
  %v2_9d10 = call i32 @__GI_strchr(i32 %v2_9c30, i32 58)
  %v1_9d18 = add i32 %v2_9d10, 1
  store i32 %v1_9d18, i32* @r0, align 4
  %v1_9d20 = call i32 @atol(i32 %v1_9d18)
  store i32 %v2_9c30, i32* @r0, align 4
  %v2_9d40 = call i32 @__GI_strchr(i32 %v2_9c30, i32 58)
  %v3_9d50 = inttoptr i32 %v2_9d40 to i8*
  store i8 0, i8* %v3_9d50, align 1
  br label %dec_label_pc_9d54

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9ca4, %dec_label_pc_9cfc
  %stack_var_-20.0 = phi i32 [ 445, %dec_label_pc_9ca4 ], [ %v1_9d20, %dec_label_pc_9cfc ]
  %v3_9d60 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9d60, i32* @global_var_225a0.47, align 4
  %v4_9d94 = call i32 @connectTimeout(i32 %v3_9d60, i32 %v2_9c30, i32 %stack_var_-20.0, i32 30)
  %v2_9d9c = icmp eq i32 %v4_9d94, 0
  %. = zext i1 %v2_9d9c to i32
  store i32 %v3_9c18, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_9c30, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9d54, { 1, 0 }
  uselistorder label %dec_label_pc_9ca4, { 1, 0 }
  uselistorder label %dec_label_pc_9c70, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40432, i32* %stack_var_-4, align 4
  %v2_9dec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9dec, i32* @fp, align 4
  %v2_9e00 = ptrtoint i32* %stack_var_-24 to i32
  %v1_9e28 = bitcast i8** %argv to i32*
  %v2_9e28 = load i32, i32* %v1_9e28, align 4
  %v3_9e30 = call i32 @unlink(i32 %v2_9e28, i32 %v2_9e00, i32 %v2_9e00)
  %v1_9e34 = call i32 @rand_init(i32 %v3_9e30)
  %v0_9e38 = call i32 @rand_next()
  %v1_9e40 = mul i32 %v0_9e38, 4
  %v3_9e44 = and i32 %v1_9e40, 12
  %v1_9e48 = add nuw nsw i32 %v3_9e44, 12
  %v2_9e50 = ptrtoint i32* %stack_var_-112 to i32
  %v2_9e5c = bitcast i32* %stack_var_-112 to i8*
  %v3_9e5c = call i32 @rand_alphastr(i8* %v2_9e5c, i32 %v1_9e48)
  %v2_9e6c = add i32 %v2_9e00, -88
  %v2_9e70 = add i32 %v2_9e6c, %v1_9e48
  %v3_9e78 = inttoptr i32 %v2_9e70 to i8*
  store i8 0, i8* %v3_9e78, align 4
  %v2_9e8c = load i32, i32* %v1_9e28, align 4
  %v3_9e9c = call i32 @util_strcpy(i32 %v2_9e8c, i32 %v2_9e50, i32 %v2_9e50)
  %v0_9ea0 = call i32 @rand_next()
  %v1_9eac = zext i32 %v0_9ea0 to i64
  %v4_9eac = mul nuw i64 %v1_9eac, 2863311531
  %v3_9eb06 = udiv i64 %v4_9eac, 17179869184
  %v2_9ec48 = mul nuw nsw i64 %v3_9eb06, 2
  %v2_9ec4 = trunc i64 %v2_9ec48 to i32
  %v3_9ec810 = mul nuw nsw i64 %v3_9eb06, 8
  %v3_9ec8 = trunc i64 %v3_9ec810 to i32
  %v2_9ecc53 = sub i32 %v2_9ec4, %v3_9ec8
  %v2_9ed0 = add i32 %v2_9ecc53, %v0_9ea0
  %v3_9ee4 = mul i32 %v2_9ed0, 4
  %v1_9ee8 = add i32 %v3_9ee4, 12
  %v6_9efc = call i32 @rand_alphastr(i8* %v2_9e5c, i32 %v1_9ee8)
  %v2_9f10 = add i32 %v2_9e6c, %v1_9ee8
  %v3_9f10 = inttoptr i32 %v2_9f10 to i8*
  store i8 0, i8* %v3_9f10, align 4
  %v5_9f28 = call i32 @prctl(i32 15, i32 %v2_9e50, i32 %v2_9f10, i32 %v2_9e50)
  %v2_9f30 = call i32 @__GI_time(i32* null)
  store i32 %v2_9f30, i32* @r4, align 4
  %v0_9f38 = call i32 @__getpid()
  %v0_9f40 = load i32, i32* @r4, align 4
  %v2_9f40 = xor i32 %v0_9f40, %v0_9f38
  %v1_9f48 = call i32 @srand(i32 %v2_9f40)
  %v1_9f4c = call i32 @rand_init(i32 %v1_9f48)
  %v0_9f50 = call i32 @__libc_fork()
  %v2_9f60 = icmp eq i32 %v0_9f50, 0
  br i1 %v2_9f60, label %dec_label_pc_9f90, label %dec_label_pc_9f84

dec_label_pc_9f84:                                ; preds = %entry
  %v2_9f68 = ptrtoint i32* %stack_var_-148 to i32
  %v3_9f78 = call i32 @__libc_waitpid(i32 %v0_9f50, i32 %v2_9f68, i32 0)
  %v1_9f80 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9fb0

dec_label_pc_9f90:                                ; preds = %entry
  %v0_9f90 = call i32 @__libc_fork()
  %v2_9fa0 = icmp eq i32 %v0_9f90, 0
  br i1 %v2_9fa0, label %dec_label_pc_9fb0, label %dec_label_pc_9fa8

dec_label_pc_9fa8:                                ; preds = %dec_label_pc_9f90
  %v1_9fac = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9fb0

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9f84, %dec_label_pc_9f90, %dec_label_pc_9fa8
  %v1_9fb4 = call i32 @chdir(i32 ptrtoint ([3 x i32]* @global_var_18a64.69 to i32))
  %v2_9fc0 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_a648 = ptrtoint i32* %stack_var_-4284 to i32
  %v4_a658 = bitcast i32* %stack_var_-4284 to i8*
  %v1_a378 = or i32 %v2_a648, 1
  %v5_a37c = inttoptr i32 %v1_a378 to i8*
  %v2_a608 = add i32 %v2_9e00, -164
  br label %dec_label_pc_9fc4

dec_label_pc_9fc4:                                ; preds = %dec_label_pc_9fc4, %dec_label_pc_a638, %dec_label_pc_9fb0
  %v0_9fc4 = call i32 @initConnection()
  %v2_9fcc = icmp eq i32 %v0_9fc4, 0
  br i1 %v2_9fcc, label %dec_label_pc_9fd4, label %dec_label_pc_9fc4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_9fc4
  br label %dec_label_pc_a638

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_a2b0, %dec_label_pc_a254
  %v3_9ff8 = mul i32 %v3_a2a4, 4
  %v2_a004 = load i32, i32* @global_var_2527c.52, align 4
  %v2_a008 = add i32 %v2_a004, %v3_9ff8
  %v1_a00c = inttoptr i32 %v2_a008 to i32*
  %v2_a00c = load i32, i32* %v1_a00c, align 4
  %v3_a01c = call i32 @__libc_waitpid(i32 %v2_a00c, i32 0, i32 1)
  %tmp98 = icmp slt i32 %v3_a01c, 1
  br i1 %tmp98, label %dec_label_pc_a248, label %dec_label_pc_a080

dec_label_pc_a03c:                                ; preds = %dec_label_pc_a0dc, %dec_label_pc_a080
  %v2_a040 = load i32, i32* @global_var_2527c.52, align 4
  %v3_a04c = mul i32 %v1_a030, 4
  %v1_a044 = add i32 %v3_a04c, -4
  %v2_a050 = add i32 %v1_a044, %v2_a040
  %v2_a068 = add i32 %v2_a040, %v3_a04c
  %v1_a06c = inttoptr i32 %v2_a068 to i32*
  %v2_a06c = load i32, i32* %v1_a06c, align 4
  %v2_a070 = inttoptr i32 %v2_a050 to i32*
  store i32 %v2_a06c, i32* %v2_a070, align 4
  br label %dec_label_pc_a080

dec_label_pc_a080:                                ; preds = %dec_label_pc_9ff4, %dec_label_pc_a03c
  %v3_a02c.sink = phi i32 [ %v1_a030, %dec_label_pc_a03c ], [ %v3_a2a4, %dec_label_pc_9ff4 ]
  %v1_a030 = add i32 %v3_a02c.sink, 1
  %v2_a09c = load i32, i32* @global_var_22598.49, align 4
  %v5_a09c = load i32, i32* @global_var_2259c.50, align 4
  %tmp99 = icmp ugt i32 %v5_a09c, %v1_a030
  br i1 %tmp99, label %dec_label_pc_a03c, label %dec_label_pc_a0c4

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a080
  %v9_a0d4 = icmp eq i32 %v5_a09c, %v1_a030
  br i1 %v9_a0d4, label %dec_label_pc_a0dc, label %dec_label_pc_a0f4

dec_label_pc_a0dc:                                ; preds = %dec_label_pc_a0c4
  %v9_a0ec = icmp eq i32 %v2_a09c, 0
  br i1 %v9_a0ec, label %dec_label_pc_a0f4, label %dec_label_pc_a03c

dec_label_pc_a0f4:                                ; preds = %dec_label_pc_a0dc, %dec_label_pc_a0c4
  %v2_a0f8 = load i32, i32* @global_var_2527c.52, align 4
  %v3_a104 = mul i32 %v1_a030, 4
  %v1_a0fc = add i32 %v3_a104, -4
  %v2_a108 = add i32 %v1_a0fc, %v2_a0f8
  %v2_a110 = inttoptr i32 %v2_a108 to i32*
  store i32 0, i32* %v2_a110, align 4
  %v2_a118 = load i32, i32* @global_var_22598.49, align 4
  %v5_a118 = load i32, i32* @global_var_2259c.50, align 4
  %v2_a124 = add i32 %v2_a118, -1
  %v3_a124 = icmp ne i32 %v2_a118, 0
  %v3_a128 = add i32 %v5_a118, -1
  %v4_a128 = zext i1 %v3_a124 to i32
  %v5_a128 = add i32 %v3_a128, %v4_a128
  store i32 %v2_a124, i32* @global_var_22598.49, align 4
  store i32 %v5_a128, i32* @global_var_2259c.50, align 4
  %v3_a144 = icmp eq i32 %v2_a118, 0
  %v4_a148 = zext i1 %v3_a144 to i32
  %v5_a148 = add i32 %v5_a128, %v4_a148
  %v3_a14c = udiv i32 %v2_a118, 1073741824
  %v3_a150 = mul i32 %v5_a148, 4
  %v2_a154 = or i32 %v3_a150, %v3_a14c
  store i32 %v2_a154, i32* @r4, align 4
  %v3_a158 = mul i32 %v2_a118, 4
  %v1_a160 = call i32 @malloc(i32 %v3_a158)
  br label %dec_label_pc_a1b8

dec_label_pc_a178:                                ; preds = %dec_label_pc_a214, %dec_label_pc_a1b8
  %v3_a17c = mul i32 %v3_a208, 4
  %v2_a188 = add i32 %v3_a17c, %v1_a160
  %v2_a19c = load i32, i32* @global_var_2527c.52, align 4
  %v2_a1a0 = add i32 %v2_a19c, %v3_a17c
  %v1_a1a4 = inttoptr i32 %v2_a1a0 to i32*
  %v2_a1a4 = load i32, i32* %v1_a1a4, align 4
  %v2_a1a8 = inttoptr i32 %v2_a188 to i32*
  store i32 %v2_a1a4, i32* %v2_a1a8, align 4
  %v1_a1b0 = add i32 %v3_a208, 1
  br label %dec_label_pc_a1b8

dec_label_pc_a1b8:                                ; preds = %dec_label_pc_a0f4, %dec_label_pc_a178
  %v3_a208 = phi i32 [ 0, %dec_label_pc_a0f4 ], [ %v1_a1b0, %dec_label_pc_a178 ]
  %v2_a1d4 = load i32, i32* @global_var_22598.49, align 4
  %v5_a1d4 = load i32, i32* @global_var_2259c.50, align 4
  %tmp101 = icmp ugt i32 %v5_a1d4, %v3_a208
  br i1 %tmp101, label %dec_label_pc_a178, label %dec_label_pc_a1fc

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1b8
  %v9_a20c = icmp eq i32 %v5_a1d4, %v3_a208
  br i1 %v9_a20c, label %dec_label_pc_a214, label %dec_label_pc_a22c

dec_label_pc_a214:                                ; preds = %dec_label_pc_a1fc
  %v9_a224 = icmp eq i32 %v2_a1d4, 0
  br i1 %v9_a224, label %dec_label_pc_a22c, label %dec_label_pc_a178

dec_label_pc_a22c:                                ; preds = %dec_label_pc_a214, %dec_label_pc_a1fc
  %v2_a230 = load i32, i32* @global_var_2527c.52, align 4
  store i32 %v2_a230, i32* @r0, align 4
  %v0_a238 = call i32 @free()
  store i32 %v1_a160, i32* @global_var_2527c.52, align 4
  br label %dec_label_pc_a248

dec_label_pc_a248:                                ; preds = %dec_label_pc_9ff4, %dec_label_pc_a22c
  %v1_a24c = add i32 %v3_a2a4, 1
  br label %dec_label_pc_a254

dec_label_pc_a254:                                ; preds = %dec_label_pc_a638, %dec_label_pc_a248
  %v3_a2a4 = phi i32 [ %v1_a24c, %dec_label_pc_a248 ], [ 0, %dec_label_pc_a638 ]
  %v3_a25c = ashr i32 %v3_a2a4, 31
  %v2_a270 = load i32, i32* @global_var_22598.49, align 4
  %v5_a270 = load i32, i32* @global_var_2259c.50, align 4
  %v3_a290 = icmp uge i32 %v5_a270, %v3_a2a4
  %v9_a290 = icmp eq i32 %v5_a270, %v3_a2a4
  %v2_a294 = xor i1 %v9_a290, true
  %v3_a294 = and i1 %v3_a290, %v2_a294
  br i1 %v3_a294, label %dec_label_pc_9ff4, label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a254
  br i1 %v9_a290, label %dec_label_pc_a2b0, label %dec_label_pc_a2c8

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a298
  %tmp = icmp ugt i32 %v2_a270, %v3_a25c
  br i1 %tmp, label %dec_label_pc_9ff4, label %dec_label_pc_a2c8

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a2b0
  %v2_a2dc = add i32 %v5_a658, %v2_a648
  %v3_a2e4 = inttoptr i32 %v2_a2dc to i8*
  store i8 0, i8* %v3_a2e4, align 1
  %v2_a2f8 = call i32 @trim(i8* %v4_a658)
  %v2_a310 = load i8, i8* %v4_a658, align 4
  %v7_a314 = icmp eq i8 %v2_a310, 46
  br i1 %v7_a314, label %dec_label_pc_a338, label %dec_label_pc_a638

dec_label_pc_a338:                                ; preds = %dec_label_pc_a2c8, %dec_label_pc_a348
  %v3_a31c.sink = phi i8* [ %storemerge13, %dec_label_pc_a348 ], [ %v4_a658, %dec_label_pc_a2c8 ]
  %v4_a31c = ptrtoint i8* %v3_a31c.sink to i32
  %v1_a320 = add i32 %v4_a31c, 1
  %storemerge13 = inttoptr i32 %v1_a320 to i8*
  %v2_a33c = load i8, i8* %storemerge13, align 1
  %v7_a340 = icmp eq i8 %v2_a33c, 32
  br i1 %v7_a340, label %dec_label_pc_a358, label %dec_label_pc_a348

dec_label_pc_a348:                                ; preds = %dec_label_pc_a338
  %v2_a34c = load i8, i8* %storemerge13, align 1
  %v2_a350 = icmp eq i8 %v2_a34c, 0
  br i1 %v2_a350, label %dec_label_pc_a358, label %dec_label_pc_a338

dec_label_pc_a358:                                ; preds = %dec_label_pc_a348, %dec_label_pc_a338
  %v2_a35c = load i8, i8* %storemerge13, align 1
  %v2_a360 = icmp eq i8 %v2_a35c, 0
  br i1 %v2_a360, label %dec_label_pc_a638, label %dec_label_pc_a368

dec_label_pc_a368:                                ; preds = %dec_label_pc_a358
  store i8 0, i8* %storemerge13, align 1
  %v3_a388 = call i32 @strlen(i8* %v5_a37c)
  %v2_a398 = add i32 %v3_a388, %v2_a648
  %v1_a39c = add i32 %v2_a398, 2
  %v5_a3a0 = inttoptr i32 %v1_a39c to i8*
  %v1_a3d0 = add i32 %v2_a398, 1
  br label %dec_label_pc_a3cc

dec_label_pc_a3a8:                                ; preds = %dec_label_pc_a3f4, %dec_label_pc_a3cc
  %v3_a3b8 = call i32 @strlen(i8* %v5_a3a0)
  %v2_a3c0 = add i32 %v1_a3d0, %v3_a3b8
  %v3_a3c8 = inttoptr i32 %v2_a3c0 to i8*
  store i8 0, i8* %v3_a3c8, align 1
  br label %dec_label_pc_a3cc

dec_label_pc_a3cc:                                ; preds = %dec_label_pc_a368, %dec_label_pc_a3a8
  %v3_a3dc = call i32 @strlen(i8* %v5_a3a0)
  %v2_a3e4 = add i32 %v1_a3d0, %v3_a3dc
  %v1_a3e8 = inttoptr i32 %v2_a3e4 to i8*
  %v2_a3e8 = load i8, i8* %v1_a3e8, align 1
  %v7_a3ec = icmp eq i8 %v2_a3e8, 10
  br i1 %v7_a3ec, label %dec_label_pc_a3a8, label %dec_label_pc_a3f4

dec_label_pc_a3f4:                                ; preds = %dec_label_pc_a3cc
  store i32 %v1_a3d0, i32* @r4, align 4
  %v3_a404 = call i32 @strlen(i8* %v5_a3a0)
  %v0_a40c = load i32, i32* @r4, align 4
  %v2_a40c = add i32 %v0_a40c, %v3_a404
  %v1_a410 = inttoptr i32 %v2_a40c to i8*
  %v2_a410 = load i8, i8* %v1_a410, align 1
  %v7_a414 = icmp eq i8 %v2_a410, 13
  br i1 %v7_a414, label %dec_label_pc_a3a8, label %dec_label_pc_a41c

dec_label_pc_a41c:                                ; preds = %dec_label_pc_a3f4
  %v2_a43824 = load i8, i8* %v5_a3a0, align 1
  %v7_a43c28 = icmp eq i8 %v2_a43824, 32
  br i1 %v7_a43c28, label %dec_label_pc_a454, label %dec_label_pc_a444

dec_label_pc_a428:                                ; preds = %dec_label_pc_a444
  %v1_a42c = add i32 %v4_a43430, 1
  %v5_a430 = inttoptr i32 %v1_a42c to i8*
  %v2_a438 = load i8, i8* %v5_a430, align 1
  %v7_a43c = icmp eq i8 %v2_a438, 32
  br i1 %v7_a43c, label %dec_label_pc_a454, label %dec_label_pc_a444

dec_label_pc_a444:                                ; preds = %dec_label_pc_a41c, %dec_label_pc_a428
  %v4_a43430 = phi i32 [ %v1_a42c, %dec_label_pc_a428 ], [ %v1_a39c, %dec_label_pc_a41c ]
  %stack_var_-60.029 = phi i8* [ %v5_a430, %dec_label_pc_a428 ], [ %v5_a3a0, %dec_label_pc_a41c ]
  %v2_a448 = load i8, i8* %stack_var_-60.029, align 1
  %v2_a44c = icmp eq i8 %v2_a448, 0
  br i1 %v2_a44c, label %dec_label_pc_a454, label %dec_label_pc_a428

dec_label_pc_a454:                                ; preds = %dec_label_pc_a428, %dec_label_pc_a444, %dec_label_pc_a41c
  %stack_var_-60.0.lcssa = phi i8* [ %v5_a3a0, %dec_label_pc_a41c ], [ %v5_a430, %dec_label_pc_a428 ], [ %stack_var_-60.029, %dec_label_pc_a444 ]
  %v4_a434.lcssa = phi i32 [ %v1_a39c, %dec_label_pc_a41c ], [ %v1_a42c, %dec_label_pc_a428 ], [ %v4_a43430, %dec_label_pc_a444 ]
  store i8 0, i8* %stack_var_-60.0.lcssa, align 1
  %v1_a464 = add i32 %v4_a434.lcssa, 1
  %v2_a4a835 = load i8, i8* %v5_a3a0, align 1
  %v2_a4ac37 = icmp eq i8 %v2_a4a835, 0
  br i1 %v2_a4ac37, label %dec_label_pc_a4b4, label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a454, %dec_label_pc_a478
  %storemerge1239 = phi i8* [ %storemerge12, %dec_label_pc_a478 ], [ %v5_a3a0, %dec_label_pc_a454 ]
  %storemerge1938 = phi i32 [ %v1_a49c, %dec_label_pc_a478 ], [ %v1_a39c, %dec_label_pc_a454 ]
  %v2_a47c = load i8, i8* %storemerge1239, align 1
  %v3_a47c = zext i8 %v2_a47c to i32
  %v1_a484 = call i32 @__GI_toupper(i32 %v3_a47c)
  %v1_a494 = trunc i32 %v1_a484 to i8
  store i8 %v1_a494, i8* %storemerge1239, align 1
  %v1_a49c = add i32 %storemerge1938, 1
  %storemerge12 = inttoptr i32 %v1_a49c to i8*
  %v2_a4a8 = load i8, i8* %storemerge12, align 1
  %v2_a4ac = icmp eq i8 %v2_a4a8, 0
  br i1 %v2_a4ac, label %dec_label_pc_a4b4, label %dec_label_pc_a478

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_a478, %dec_label_pc_a454
  %v2_a4c8 = call i32 @__GI_strtok(i32 %v1_a464, i32 ptrtoint (i32* @global_var_18a68.73 to i32))
  store i32 %v1_a39c, i32* %stack_var_-188, align 4
  %v2_a5c042 = icmp eq i32 %v2_a4c8, 0
  br i1 %v2_a5c042, label %dec_label_pc_a5c8, label %dec_label_pc_a4e0

dec_label_pc_a4e0:                                ; preds = %dec_label_pc_a4b4, %dec_label_pc_a5a8
  %stack_var_-32.045.in = phi i32 [ %v2_a5b0, %dec_label_pc_a5a8 ], [ %v2_a4c8, %dec_label_pc_a4b4 ]
  %stack_var_-36.143 = phi i32 [ %stack_var_-36.0, %dec_label_pc_a5a8 ], [ 1, %dec_label_pc_a4b4 ]
  %stack_var_-32.045 = inttoptr i32 %stack_var_-32.045.in to i8*
  %v2_a4e4 = load i8, i8* %stack_var_-32.045, align 1
  %v7_a4e8 = icmp eq i8 %v2_a4e4, 10
  br i1 %v7_a4e8, label %dec_label_pc_a5a8, label %dec_label_pc_a4f0

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a4e0
  store i32 %stack_var_-36.143, i32* @r4, align 4
  %v3_a4fc = call i32 @strlen(i8* nonnull %stack_var_-32.045)
  %v1_a504 = add i32 %v3_a4fc, 1
  %v1_a50c = call i32 @malloc(i32 %v1_a504)
  %v0_a51c = load i32, i32* @r4, align 4
  %v3_a51c = mul i32 %v0_a51c, 4
  %v2_a528 = add i32 %v2_a608, %v3_a51c
  %v2_a52c = inttoptr i32 %v2_a528 to i32*
  store i32 %v1_a50c, i32* %v2_a52c, align 4
  %v3_a538 = mul i32 %stack_var_-36.143, 4
  %v2_a544 = add i32 %v2_a608, %v3_a538
  %v1_a548 = inttoptr i32 %v2_a544 to i32*
  %v2_a548 = load i32, i32* %v1_a548, align 4
  store i32 %v2_a548, i32* @r4, align 4
  %v3_a554 = call i32 @strlen(i8* nonnull %stack_var_-32.045)
  %v1_a55c = add i32 %v3_a554, 1
  %v0_a560 = load i32, i32* @r4, align 4
  %v3_a56c = inttoptr i32 %v0_a560 to i8*
  %v4_a56c = call i32 @__GI_memset(i8* %v3_a56c, i32 0, i32 %v1_a55c)
  %v2_a588 = load i32, i32* %v1_a548, align 4
  store i32 %stack_var_-32.045.in, i32* @r1, align 4
  %v3_a598 = inttoptr i32 %v2_a588 to i8*
  %v4_a598 = call i32 @strcpy(i8* %v3_a598, i32 %stack_var_-32.045.in)
  %v1_a5a0 = add i32 %stack_var_-36.143, 1
  br label %dec_label_pc_a5a8

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_a4e0, %dec_label_pc_a4f0
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.143, %dec_label_pc_a4e0 ], [ %v1_a5a0, %dec_label_pc_a4f0 ]
  %v2_a5b0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_18a68.73 to i32))
  %v2_a5c0 = icmp eq i32 %v2_a5b0, 0
  br i1 %v2_a5c0, label %dec_label_pc_a5c8, label %dec_label_pc_a4e0

dec_label_pc_a5c8:                                ; preds = %dec_label_pc_a5a8, %dec_label_pc_a4b4
  %stack_var_-36.1.lcssa = phi i32 [ 1, %dec_label_pc_a4b4 ], [ %stack_var_-36.0, %dec_label_pc_a5a8 ]
  %v3_a5d4 = call i32 @processCmd(i32 %stack_var_-36.1.lcssa, i32* nonnull %stack_var_-188)
  %v7_a5e0 = icmp slt i32 %stack_var_-36.1.lcssa, 2
  br i1 %v7_a5e0, label %dec_label_pc_a638, label %dec_label_pc_a5f8.lr.ph

dec_label_pc_a5f8.lr.ph:                          ; preds = %dec_label_pc_a5c8
  br label %dec_label_pc_a5f8

dec_label_pc_a5f8:                                ; preds = %dec_label_pc_a5f8.lr.ph, %dec_label_pc_a5f8
  %storemerge20113 = phi i32 [ 1, %dec_label_pc_a5f8.lr.ph ], [ %v1_a620, %dec_label_pc_a5f8 ]
  %v3_a600 = mul i32 %storemerge20113, 4
  %v2_a60c = add i32 %v2_a608, %v3_a600
  %v1_a610 = inttoptr i32 %v2_a60c to i32*
  %v2_a610 = load i32, i32* %v1_a610, align 4
  store i32 %v2_a610, i32* @r0, align 4
  %v0_a618 = call i32 @free()
  %v1_a620 = add nuw nsw i32 %storemerge20113, 1
  %v5_a634 = icmp slt i32 %v1_a620, %stack_var_-36.1.lcssa
  br i1 %v5_a634, label %dec_label_pc_a5f8, label %dec_label_pc_a638

dec_label_pc_a638:                                ; preds = %dec_label_pc_a5f8, %dec_label_pc_a2c8, %dec_label_pc_a5c8, %dec_label_pc_a358, %dec_label_pc_9fd4
  %v2_a63c = load i32, i32* @global_var_225a0.47, align 4
  %v5_a658 = call i32 @recvLine(i32 %v2_a63c, i8* %v4_a658, i32 4096, i32 %v2_a648)
  %v3_a668 = icmp eq i32 %v5_a658, -1
  br i1 %v3_a668, label %dec_label_pc_9fc4, label %dec_label_pc_a254

; uselistorder directives
  uselistorder i32 %v5_a658, { 1, 0 }
  uselistorder i32 %stack_var_-36.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_a5b0, { 1, 0 }
  uselistorder i8* %stack_var_-32.045, { 2, 1, 0 }
  uselistorder i32 %stack_var_-36.143, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v1_a49c, { 1, 0 }
  uselistorder i8* %storemerge1239, { 1, 0 }
  uselistorder i32 %v1_a3d0, { 2, 1, 0 }
  uselistorder i8* %v5_a3a0, { 0, 3, 2, 1, 4, 5, 7, 6 }
  uselistorder i32 %v1_a39c, { 3, 0, 2, 1, 4 }
  uselistorder i8* %storemerge13, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_a290, { 1, 0 }
  uselistorder i32 %v3_a2a4, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_a1d4, { 1, 0 }
  uselistorder i32 %v3_a208, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a17c, { 1, 0 }
  uselistorder i32 %v1_a160, { 1, 0 }
  uselistorder i32 %v5_a09c, { 1, 0 }
  uselistorder i32 %v1_a030, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_a04c, { 1, 0 }
  uselistorder i32 %v2_a040, { 1, 0 }
  uselistorder i32 %v2_a608, { 2, 0, 1 }
  uselistorder i8* %v4_a658, { 3, 0, 1, 2 }
  uselistorder i32 %v2_a648, { 3, 0, 1, 2 }
  uselistorder i32 %v2_9e50, { 0, 1, 3, 2 }
  uselistorder i32 %v2_9e00, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_225a0.47, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_22598.49, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2527c.52, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder i32 ()* @__getpid, { 2, 1, 0 }
  uselistorder i32 ()* @rand_next, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @rand_init, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a638, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_a5f8, { 1, 0 }
  uselistorder label %dec_label_pc_a5a8, { 1, 0 }
  uselistorder label %dec_label_pc_a4e0, { 1, 0 }
  uselistorder label %dec_label_pc_a478, { 1, 0 }
  uselistorder label %dec_label_pc_a454, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a444, { 1, 0 }
  uselistorder label %dec_label_pc_a3cc, { 1, 0 }
  uselistorder label %dec_label_pc_a338, { 1, 0 }
  uselistorder label %dec_label_pc_a2c8, { 1, 0 }
  uselistorder label %dec_label_pc_a248, { 1, 0 }
  uselistorder label %dec_label_pc_a1b8, { 1, 0 }
  uselistorder label %dec_label_pc_a080, { 1, 0 }
  uselistorder label %dec_label_pc_9fc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9fb0, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_a68c = load i32, i32* @r1, align 4
  %v1_a68c = add i32 %v0_a68c, -1
  store i32 %v1_a68c, i32* %r2.global-to-local, align 4
  %v2_a68c = icmp eq i32 %v0_a68c, 0
  %v7_a68c = icmp eq i32 %v0_a68c, 1
  %v0_a690 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_a68c, i32 %v0_a690)
  br i1 %v2_a68c, label %dec_label_pc_a774, label %dec_label_pc_a698

dec_label_pc_a698:                                ; preds = %entry
  %v0_a698 = load i32, i32* %r0.global-to-local, align 4
  %v1_a698 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_a698, %v1_a698
  br i1 %tmp, label %dec_label_pc_a6a0, label %dec_label_pc_a72c

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a698
  %v1_a6a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_a6a0 = and i32 %v1_a6a0, %v1_a698
  %v4_a6a0 = icmp eq i32 %v2_a6a0, 0
  br i1 %v4_a6a0, label %dec_label_pc_a738, label %dec_label_pc_a6a8

dec_label_pc_a6a8:                                ; preds = %dec_label_pc_a6a0
  %v3_a6a8 = icmp ult i32 %v1_a698, 536870912
  br i1 %v3_a6a8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_a6a8
  %v4_a6ac = mul i32 %v1_a698, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_a6a8, %.thread
  %v0_a6cc.pr36.ph = phi i32 [ %v4_a6ac, %.thread ], [ %v1_a698, %dec_label_pc_a6a8 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_a6a8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_a6cc.pr36 = phi i32 [ %v4_a6c0, %bb81 ], [ %v0_a6cc.pr36.ph, %.preheader.preheader ]
  %v1_a6c4 = phi i32 [ %v4_a6c4, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_a6b8 = icmp ugt i32 %v0_a6cc.pr36, 268435455
  br i1 %v2_a6b8, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_a6ccthread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_a6bc = icmp ult i32 %v0_a6cc.pr36, %v0_a698
  br i1 %v4_a6bc, label %bb80, label %dec_label_pc_a6ccthread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_a6c0 = and i32 %v0_a6cc.pr36, 268435456
  %v3_a6c0 = icmp eq i32 %v2_a6c0, 0
  %v4_a6c0 = mul i32 %v0_a6cc.pr36, 16
  br i1 %v3_a6c0, label %bb81, label %dec_label_pc_a6cc.loopexit

bb81:                                             ; preds = %bb80
  %v2_a6c4 = and i32 %v1_a6c4, 268435456
  %v3_a6c4 = icmp eq i32 %v2_a6c4, 0
  %v4_a6c4 = mul i32 %v1_a6c4, 16
  br i1 %v3_a6c4, label %.preheader, label %dec_label_pc_a6ccthread-pre-split.loopexit.loopexit

dec_label_pc_a6ccthread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_a6d848.ph = phi i32 [ %v1_a6c4, %bb ], [ %v4_a6c4, %bb81 ]
  %v0_a6cc.pr38.ph = phi i32 [ %v0_a6cc.pr36, %bb ], [ %v4_a6c0, %bb81 ]
  br label %dec_label_pc_a6ccthread-pre-split.loopexit

dec_label_pc_a6ccthread-pre-split.loopexit:       ; preds = %dec_label_pc_a6ccthread-pre-split.loopexit.loopexit, %.thread2
  %v1_a6d848 = phi i32 [ %v1_a6c4, %.thread2 ], [ %v1_a6d848.ph, %dec_label_pc_a6ccthread-pre-split.loopexit.loopexit ]
  %v0_a6cc.pr38 = phi i32 [ %v0_a6cc.pr36, %.thread2 ], [ %v0_a6cc.pr38.ph, %dec_label_pc_a6ccthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_a6ccthread-pre-split

dec_label_pc_a6ccthread-pre-split:                ; preds = %dec_label_pc_a6ccthread-pre-split.loopexit, %bb83
  %v1_a6d846 = phi i32 [ %v1_a6d848, %dec_label_pc_a6ccthread-pre-split.loopexit ], [ %v3_a6d8, %bb83 ]
  %v0_a6cc.pr = phi i32 [ %v0_a6cc.pr38, %dec_label_pc_a6ccthread-pre-split.loopexit ], [ %v3_a6d4, %bb83 ]
  br label %dec_label_pc_a6cc

dec_label_pc_a6cc.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_a6cc

dec_label_pc_a6cc:                                ; preds = %dec_label_pc_a6cc.loopexit, %dec_label_pc_a6ccthread-pre-split
  %v1_a6d8 = phi i32 [ %v1_a6d846, %dec_label_pc_a6ccthread-pre-split ], [ %v1_a6c4, %dec_label_pc_a6cc.loopexit ]
  %v1_a6d4 = phi i32 [ %v0_a6cc.pr, %dec_label_pc_a6ccthread-pre-split ], [ %v4_a6c0, %dec_label_pc_a6cc.loopexit ]
  %v2_a6cc = icmp slt i32 %v1_a6d4, 0
  br i1 %v2_a6cc, label %dec_label_pc_a6e0, label %bb82

bb82:                                             ; preds = %dec_label_pc_a6cc
  %v4_a6d0 = icmp ult i32 %v1_a6d4, %v0_a698
  br i1 %v4_a6d0, label %bb83, label %dec_label_pc_a6e0

bb83:                                             ; preds = %bb82
  %v3_a6d4 = mul i32 %v1_a6d4, 2
  %v2_a6d8 = icmp slt i32 %v1_a6d8, 0
  %v3_a6d8 = mul i32 %v1_a6d8, 2
  br i1 %v2_a6d8, label %dec_label_pc_a6e0, label %dec_label_pc_a6ccthread-pre-split

dec_label_pc_a6e0:                                ; preds = %bb82, %dec_label_pc_a6cc, %bb83
  %v2_a6ec59 = phi i32 [ %v3_a6d8, %bb83 ], [ %v1_a6d8, %bb82 ], [ %v1_a6d8, %dec_label_pc_a6cc ]
  %v1_a6e451 = phi i32 [ %v3_a6d4, %bb83 ], [ %v1_a6d4, %bb82 ], [ %v1_a6d4, %dec_label_pc_a6cc ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_a6e4

dec_label_pc_a6e4:                                ; preds = %.thread11, %dec_label_pc_a6e0
  %v1_a718 = phi i32 [ %v4_a718, %.thread11 ], [ %v2_a6ec59, %dec_label_pc_a6e0 ]
  %v1_a6ec = phi i32 [ %v0_a724, %.thread11 ], [ 0, %dec_label_pc_a6e0 ]
  %v1_a71c = phi i32 [ %v4_a71c, %.thread11 ], [ %v1_a6e451, %dec_label_pc_a6e0 ]
  %v1_a6e8 = phi i32 [ %v0_a714, %.thread11 ], [ %v0_a698, %dec_label_pc_a6e0 ]
  %v3_a6e4 = icmp ult i32 %v1_a6e8, %v1_a71c
  br i1 %v3_a6e4, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_a6e4
  %v3_a6e8 = sub i32 %v1_a6e8, %v1_a71c
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  %v3_a6ec = or i32 %v1_a6ec, %v1_a718
  store i32 %v3_a6ec, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_a6e4, %bb84
  %v1_a6f4 = phi i32 [ %v1_a6e8, %dec_label_pc_a6e4 ], [ %v3_a6e8, %bb84 ]
  %v1_a6f8 = phi i32 [ %v1_a6ec, %dec_label_pc_a6e4 ], [ %v3_a6ec, %bb84 ]
  %v4_a6f0 = udiv i32 %v1_a71c, 2
  %v6_a6f0 = icmp ult i32 %v1_a6f4, %v4_a6f0
  br i1 %v6_a6f0, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_a6f4 = urem i32 %v1_a71c, 2
  %v4_a6f4 = icmp eq i32 %v3_a6f4, 0
  %v6_a6f4 = sub i32 %v1_a6f4, %v4_a6f0
  store i32 %v6_a6f4, i32* %r0.global-to-local, align 4
  br i1 %v4_a6f4, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_a6f8 = udiv i32 %v1_a718, 2
  %v6_a6f8 = or i32 %v1_a6f8, %v5_a6f8
  store i32 %v6_a6f8, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_a700 = phi i32 [ %v6_a6f4, %bb85 ], [ %v1_a6f4, %.thread7 ], [ %v6_a6f4, %bb86 ]
  %v1_a704 = phi i32 [ %v1_a6f8, %bb85 ], [ %v1_a6f8, %.thread7 ], [ %v6_a6f8, %bb86 ]
  %v4_a6fc = udiv i32 %v1_a71c, 4
  %v6_a6fc = icmp ult i32 %v1_a700, %v4_a6fc
  br i1 %v6_a6fc, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_a700 = and i32 %v1_a71c, 2
  %v4_a700 = icmp eq i32 %v3_a700, 0
  %v6_a700 = sub i32 %v1_a700, %v4_a6fc
  store i32 %v6_a700, i32* %r0.global-to-local, align 4
  br i1 %v4_a700, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_a704 = udiv i32 %v1_a718, 4
  %v6_a704 = or i32 %v1_a704, %v5_a704
  store i32 %v6_a704, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_a70c = phi i32 [ %v6_a700, %bb87 ], [ %v1_a700, %.thread8 ], [ %v6_a700, %bb88 ]
  %v1_a710 = phi i32 [ %v1_a704, %bb87 ], [ %v1_a704, %.thread8 ], [ %v6_a704, %bb88 ]
  %v4_a708 = udiv i32 %v1_a71c, 8
  %v6_a708 = icmp ult i32 %v1_a70c, %v4_a708
  br i1 %v6_a708, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_a70c = and i32 %v1_a71c, 4
  %v4_a70c = icmp eq i32 %v3_a70c, 0
  %v6_a70c = sub i32 %v1_a70c, %v4_a708
  store i32 %v6_a70c, i32* %r0.global-to-local, align 4
  br i1 %v4_a70c, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_a710 = udiv i32 %v1_a718, 8
  %v6_a710 = or i32 %v1_a710, %v5_a710
  store i32 %v6_a710, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_a724 = phi i32 [ %v1_a710, %bb89 ], [ %v1_a710, %.thread9 ], [ %v6_a710, %bb90 ]
  %v0_a714 = phi i32 [ %v6_a70c, %bb89 ], [ %v1_a70c, %.thread9 ], [ %v6_a70c, %bb90 ]
  %v2_a714 = icmp eq i32 %v0_a714, 0
  br i1 %v2_a714, label %dec_label_pc_a724, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_a718, 16
  br i1 %tmp138, label %dec_label_pc_a724, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_a718 = udiv i32 %v1_a718, 16
  %v4_a71c = udiv i32 %v1_a71c, 16
  br label %dec_label_pc_a6e4

dec_label_pc_a724:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_a724, i32* %r0.global-to-local, align 4
  ret i32 %v0_a724

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a698
  %v9_a698 = icmp eq i32 %v0_a698, %v1_a698
  %. = zext i1 %v9_a698 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_a738:                                ; preds = %dec_label_pc_a6a0
  %v2_a738 = icmp ugt i32 %v1_a698, 65535
  br i1 %v2_a738, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_a738
  %v2_a73c = and i32 %v1_a698, 32768
  %v3_a73c = icmp eq i32 %v2_a73c, 0
  %v4_a73c = udiv i32 %v1_a698, 65536
  br i1 %v3_a73c, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_a738
  %v0_a74865 = phi i32 [ %v1_a698, %dec_label_pc_a738 ], [ %v4_a73c, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_a74c = phi i32 [ %v0_a74865, %.thread16 ], [ %v4_a73c, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_a748 = icmp ugt i32 %v1_a74c, 255
  br i1 %v2_a748, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_a74c = and i32 %v1_a74c, 128
  %v3_a74c = icmp eq i32 %v2_a74c, 0
  %v4_a74c = udiv i32 %v1_a74c, 256
  br i1 %v3_a74c, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_a750 = or i32 %storemerge, 8
  store i32 %v2_a750, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_a75c = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_a750, %bb98 ]
  %v1_a758 = phi i32 [ %v1_a74c, %bb96 ], [ %v4_a74c, %bb97 ], [ %v4_a74c, %bb98 ]
  %v2_a754 = icmp ugt i32 %v1_a758, 15
  br i1 %v2_a754, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_a758 = and i32 %v1_a758, 8
  %v3_a758 = icmp eq i32 %v2_a758, 0
  %v4_a758 = udiv i32 %v1_a758, 16
  br i1 %v3_a758, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_a75c = add nsw i32 %v1_a75c, 4
  store i32 %v2_a75c, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_a764 = phi i32 [ %v1_a75c, %.thread17 ], [ %v1_a75c, %bb99 ], [ %v2_a75c, %bb100 ]
  %v5_a768 = phi i32 [ %v1_a758, %.thread17 ], [ %v4_a758, %bb99 ], [ %v4_a758, %bb100 ]
  %v2_a760 = icmp ugt i32 %v5_a768, 3
  %v7_a760 = icmp eq i32 %v5_a768, 4
  %v2_a764 = xor i1 %v7_a760, true
  %v3_a764 = and i1 %v2_a760, %v2_a764
  br i1 %v3_a764, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_a764 = add nsw i32 %v4_a764, 3
  store i32 %v5_a764, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_a768 = phi i32 [ %v4_a764, %.thread18 ], [ %v5_a764, %bb101 ]
  %v2_a768 = xor i1 %v2_a760, true
  %v3_a768 = or i1 %v7_a760, %v2_a768
  br i1 %v3_a768, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_a768 = udiv i32 %v5_a768, 2
  %v9_a768 = add i32 %v4_a768, %v8_a768
  store i32 %v9_a768, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_a76c = phi i32 [ %v4_a768, %bb102 ], [ %v9_a768, %bb103 ]
  %v6_a76c = lshr i32 %v0_a698, %v1_a76c
  store i32 %v6_a76c, i32* %r0.global-to-local, align 4
  ret i32 %v6_a76c

dec_label_pc_a774:                                ; preds = %entry
  %v0_a778 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_a768, { 1, 0 }
  uselistorder i1 %v7_a760, { 1, 0 }
  uselistorder i32 %v4_a758, { 1, 0 }
  uselistorder i32 %v1_a758, { 1, 0, 2, 3 }
  uselistorder i32 %v2_a750, { 1, 0 }
  uselistorder i32 %v4_a74c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a74c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_a73c, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_a714, { 1, 0 }
  uselistorder i32 %v0_a724, { 1, 0, 2 }
  uselistorder i32 %v4_a708, { 1, 0 }
  uselistorder i32 %v1_a710, { 1, 2, 0 }
  uselistorder i32 %v4_a6fc, { 1, 0 }
  uselistorder i32 %v1_a704, { 1, 2, 0 }
  uselistorder i32 %v4_a6f0, { 1, 0 }
  uselistorder i32 %v1_a6f8, { 1, 2, 0 }
  uselistorder i32 %v1_a71c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_a6ec, { 1, 0 }
  uselistorder i32 %v1_a718, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_a6d8, { 1, 0 }
  uselistorder i32 %v3_a6d4, { 1, 0 }
  uselistorder i32 %v1_a6d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_a6d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_a6c4, { 1, 0 }
  uselistorder i32 %v4_a6c0, { 2, 1, 0 }
  uselistorder i32 %v1_a6c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_a6cc.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_a698, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_a698, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_a68c, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_a724, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_a6e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a6ccthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_a78c = udiv i32 %arg1, %arg2
  ret i32 %v2_a78c
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_a7a8 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_a7a8
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_a7c4 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_a7c4, 2
  br i1 %tmp, label %dec_label_pc_a800, label %dec_label_pc_a7dc

dec_label_pc_a7dc:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_a834, label %dec_label_pc_a7f0

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_a7dc
  %v0_a7f4 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_a828

dec_label_pc_a800:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_a81c, label %dec_label_pc_a834

dec_label_pc_a81c:                                ; preds = %dec_label_pc_a800
  %v0_a820 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_a828

dec_label_pc_a828:                                ; preds = %dec_label_pc_a7f0, %dec_label_pc_a81c
  %storemerge2 = phi i32 [ %v0_a7f4, %dec_label_pc_a7f0 ], [ %v0_a820, %dec_label_pc_a81c ]
  %storemerge.in = load i16, i16* @global_var_22308.76, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_a828 = load i32, i32* %r2.global-to-local, align 4
  %v1_a828 = sub i32 0, %v0_a828
  store i32 %v1_a828, i32* %r2.global-to-local, align 4
  %v3_a82c = add i32 %storemerge, %storemerge2
  %v4_a82c = inttoptr i32 %v3_a82c to i32*
  store i32 %v1_a828, i32* %v4_a82c, align 4
  br label %dec_label_pc_a834

dec_label_pc_a834:                                ; preds = %dec_label_pc_a7dc, %dec_label_pc_a800, %dec_label_pc_a828
  %storemerge1 = phi i32 [ -1, %dec_label_pc_a828 ], [ %arg1, %dec_label_pc_a800 ], [ %arg1, %dec_label_pc_a7dc ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_a834, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a828, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_a84c = load i32, i32* @r2, align 4
  %v3_a850 = load i32, i32* @r4, align 4
  store i32 %v3_a850, i32* %stack_var_-32, align 4
  %v6_a850 = load i32, i32* @r5, align 4
  %v12_a850 = load i32, i32* @r7, align 4
  %v4_a860 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_a86c = icmp eq i32 %v4_a860, 0
  %v0_a874 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a874, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_a84c, i32* @r4, align 4
  br i1 %v2_a86c, label %dec_label_pc_a890, label %dec_label_pc_a884

dec_label_pc_a884:                                ; preds = %entry
  %v7_a884 = icmp eq i32 %arg2, 7
  br i1 %v7_a884, label %dec_label_pc_a8d0, label %bb

bb:                                               ; preds = %dec_label_pc_a884
  %v8_a888 = icmp eq i32 %arg2, 14
  br i1 %v8_a888, label %dec_label_pc_a8d0, label %dec_label_pc_a890

dec_label_pc_a890:                                ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_a874, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_a874, -4095
  br i1 %tmp, label %dec_label_pc_a8c8, label %dec_label_pc_a8b0

dec_label_pc_a8b0:                                ; preds = %dec_label_pc_a890
  %v0_a8b4 = call i32 @__aeabi_read_tp()
  %v3_a8b8 = load i16, i16* @global_var_22308.76, align 2
  %v4_a8b8 = sext i16 %v3_a8b8 to i32
  %v0_a8bc = load i32, i32* @r2, align 4
  %v1_a8bc = sub i32 0, %v0_a8bc
  store i32 %v1_a8bc, i32* @r2, align 4
  %v3_a8c0 = add i32 %v4_a8b8, %v0_a8b4
  %v4_a8c0 = inttoptr i32 %v3_a8c0 to i32*
  store i32 %v1_a8bc, i32* %v4_a8c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a8c8

dec_label_pc_a8c8:                                ; preds = %dec_label_pc_a890, %dec_label_pc_a8b0
  %v0_a8c8 = phi i32 [ %v0_a874, %dec_label_pc_a890 ], [ -1, %dec_label_pc_a8b0 ]
  br label %dec_label_pc_a91c

dec_label_pc_a8d0:                                ; preds = %dec_label_pc_a884, %bb
  %v0_a8d0 = call i32 @__libc_enable_asynccancel()
  %v0_a8d4 = load i32, i32* @r7, align 4
  store i32 %v0_a8d4, i32* @r1, align 4
  store i32 %v0_a8d0, i32* %r6.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @r5, align 4
  store i32 %v0_a8e0, i32* %r0.global-to-local, align 4
  store i32 %v0_a8e0, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_a8e0, -4095
  br i1 %tmp15, label %dec_label_pc_a910, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8d0
  %v1_a8fc = sub i32 0, %v0_a8e0
  %v0_a900 = call i32 @__aeabi_read_tp()
  store i32 %v0_a900, i32* %r0.global-to-local, align 4
  %v3_a904 = load i16, i16* @global_var_22308.76, align 2
  %v4_a904 = sext i16 %v3_a904 to i32
  %v3_a908 = add i32 %v4_a904, %v0_a900
  %v4_a908 = inttoptr i32 %v3_a908 to i32*
  store i32 %v1_a8fc, i32* %v4_a908, align 4
  store i32 -1, i32* @r2, align 4
  %v0_a910.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_a910

dec_label_pc_a910:                                ; preds = %dec_label_pc_a8d0, %dec_label_pc_a8f8
  %v0_a914 = phi i32 [ %v0_a8e0, %dec_label_pc_a8d0 ], [ -1, %dec_label_pc_a8f8 ]
  %v0_a910 = phi i32 [ %v0_a8d0, %dec_label_pc_a8d0 ], [ %v0_a910.pre, %dec_label_pc_a8f8 ]
  store i32 %v0_a910, i32* %r0.global-to-local, align 4
  store i32 %v0_a914, i32* @r7, align 4
  %v1_a918 = call i32 @__libc_disable_asynccancel(i32 %v0_a910)
  store i32 %v1_a918, i32* %r0.global-to-local, align 4
  %v0_a91c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a91c

dec_label_pc_a91c:                                ; preds = %dec_label_pc_a8c8, %dec_label_pc_a910
  %v0_a91c = phi i32 [ %v0_a8c8, %dec_label_pc_a8c8 ], [ %v0_a91c.pre, %dec_label_pc_a910 ]
  store i32 %v0_a91c, i32* %r0.global-to-local, align 4
  %v2_a924 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_a924, i32* @r4, align 4
  store i32 %v6_a850, i32* @r5, align 4
  store i32 %v12_a850, i32* @r7, align 4
  ret i32 %v0_a91c

; uselistorder directives
  uselistorder i32 %v0_a91c, { 1, 0 }
  uselistorder i32 %v0_a910, { 1, 0 }
  uselistorder i32 %v0_a8e0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_a874, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_a91c, { 1, 0 }
  uselistorder label %dec_label_pc_a910, { 1, 0 }
  uselistorder label %dec_label_pc_a8d0, { 1, 0 }
  uselistorder label %dec_label_pc_a8c8, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a94c

dec_label_pc_a94c:                                ; preds = %dec_label_pc_a978, %dec_label_pc_a98c, %entry
  %v0_a94c = phi i32 [ %arg1, %entry ], [ %v0_a94c.pre.pre, %dec_label_pc_a98c ], [ %v0_a978, %dec_label_pc_a978 ]
  store i32 %v0_a94c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_a94c, -4095
  br i1 %tmp, label %dec_label_pc_a978, label %dec_label_pc_a968

dec_label_pc_a968:                                ; preds = %dec_label_pc_a94c
  %v0_a968 = call i32 @__aeabi_read_tp()
  %v0_a96c = load i32, i32* %r2.global-to-local, align 4
  %v1_a96c = sub i32 0, %v0_a96c
  store i32 %v1_a96c, i32* %r2.global-to-local, align 4
  %v3_a970 = load i16, i16* @global_var_22308.76, align 2
  %v4_a970 = sext i16 %v3_a970 to i32
  %v3_a974 = add i32 %v4_a970, %v0_a968
  %v4_a974 = inttoptr i32 %v3_a974 to i32*
  store i32 %v1_a96c, i32* %v4_a974, align 4
  %v0_a978.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a978

dec_label_pc_a978:                                ; preds = %dec_label_pc_a94c, %dec_label_pc_a968
  %v0_a978 = phi i32 [ %v0_a94c, %dec_label_pc_a94c ], [ %v0_a978.pre, %dec_label_pc_a968 ]
  store i32 %v0_a978, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_a978, -4095
  br i1 %tmp4, label %dec_label_pc_a94c, label %dec_label_pc_a98c

dec_label_pc_a98c:                                ; preds = %dec_label_pc_a978
  %v0_a98c = call i32 @__aeabi_read_tp()
  %v0_a990 = load i32, i32* %r2.global-to-local, align 4
  %v1_a990 = sub i32 0, %v0_a990
  store i32 %v1_a990, i32* %r2.global-to-local, align 4
  %v3_a994 = load i16, i16* @global_var_22308.76, align 2
  %v4_a994 = sext i16 %v3_a994 to i32
  %v3_a998 = add i32 %v4_a994, %v0_a98c
  %v4_a998 = inttoptr i32 %v3_a998 to i32*
  store i32 %v1_a990, i32* %v4_a998, align 4
  %v0_a94c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a94c

; uselistorder directives
  uselistorder i32 %v0_a978, { 0, 2, 1 }
  uselistorder i32 %v0_a94c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a978, { 1, 0 }
  uselistorder label %dec_label_pc_a94c, { 1, 0, 2 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_a9a8 = load i32, i32* @r7, align 4
  store i32 %v3_a9a8, i32* %stack_var_-8, align 4
  %v0_a9b4 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_a9b4, -4095
  br i1 %tmp, label %dec_label_pc_a9d4, label %dec_label_pc_a9bc

dec_label_pc_a9bc:                                ; preds = %entry
  %v1_a9c0 = sub i32 0, %v0_a9b4
  %v3_a9c4 = load i16, i16* @global_var_22308.76, align 2
  %v4_a9c4 = sext i16 %v3_a9c4 to i32
  %v0_a9c8 = call i32 @__aeabi_read_tp()
  %v3_a9cc = add i32 %v4_a9c4, %v0_a9c8
  %v4_a9cc = inttoptr i32 %v3_a9cc to i32*
  store i32 %v1_a9c0, i32* %v4_a9cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_a9d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a9d4

dec_label_pc_a9d4:                                ; preds = %entry, %dec_label_pc_a9bc
  %v1_a9d8 = phi i32 [ %v0_a9b4, %entry ], [ -1, %dec_label_pc_a9bc ]
  %v2_a9d4 = phi i32 [ %v3_a9a8, %entry ], [ %v2_a9d4.pre, %dec_label_pc_a9bc ]
  store i32 %v2_a9d4, i32* @r7, align 4
  ret i32 %v1_a9d8

; uselistorder directives
  uselistorder i32 %v0_a9b4, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9d4, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_a9f0 = load i32, i32* @r0, align 4
  ret i32 %v1_a9f0
}

define i32 @kill(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_a9f4 = load i32, i32* @r7, align 4
  store i32 %v3_a9f4, i32* %stack_var_-8, align 4
  %v0_aa00 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_aa00, -4095
  br i1 %tmp, label %dec_label_pc_aa20, label %dec_label_pc_aa08

dec_label_pc_aa08:                                ; preds = %entry
  %v1_aa0c = sub i32 0, %v0_aa00
  %v3_aa10 = load i16, i16* @global_var_22308.76, align 2
  %v4_aa10 = sext i16 %v3_aa10 to i32
  %v0_aa14 = call i32 @__aeabi_read_tp()
  %v3_aa18 = add i32 %v4_aa10, %v0_aa14
  %v4_aa18 = inttoptr i32 %v3_aa18 to i32*
  store i32 %v1_aa0c, i32* %v4_aa18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_aa20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_aa20

dec_label_pc_aa20:                                ; preds = %entry, %dec_label_pc_aa08
  %v1_aa24 = phi i32 [ %v0_aa00, %entry ], [ -1, %dec_label_pc_aa08 ]
  %v2_aa20 = phi i32 [ %v3_a9f4, %entry ], [ %v2_aa20.pre, %dec_label_pc_aa08 ]
  store i32 %v2_aa20, i32* @r7, align 4
  ret i32 %v1_aa24

; uselistorder directives
  uselistorder i32 %v0_aa00, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa20, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_aa64, label %dec_label_pc_aa4c

dec_label_pc_aa4c:                                ; preds = %entry
  %v0_aa50 = call i32 @__aeabi_read_tp()
  %v3_aa54 = load i16, i16* @global_var_22308.76, align 2
  %v4_aa54 = sext i16 %v3_aa54 to i32
  %v0_aa58 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa58 = sub i32 0, %v0_aa58
  store i32 %v1_aa58, i32* %r2.global-to-local, align 4
  %v3_aa5c = add i32 %v4_aa54, %v0_aa50
  %v4_aa5c = inttoptr i32 %v3_aa5c to i32*
  store i32 %v1_aa58, i32* %v4_aa5c, align 4
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %entry, %dec_label_pc_aa4c
  %v1_aa68 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_aa4c ]
  ret i32 %v1_aa68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aa64, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_aa70 = load i32, i32* @r4, align 4
  store i32 %v3_aa70, i32* %stack_var_-12, align 4
  %v0_aa80 = load i32, i32* @r0, align 4
  store i32 %v0_aa80, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_aa80, -4095
  br i1 %tmp, label %dec_label_pc_aaa8, label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %entry
  %v0_aa94 = call i32 @__aeabi_read_tp()
  %v3_aa98 = load i16, i16* @global_var_22308.76, align 2
  %v4_aa98 = sext i16 %v3_aa98 to i32
  %v0_aa9c = load i32, i32* %r2.global-to-local, align 4
  %v1_aa9c = sub i32 0, %v0_aa9c
  store i32 %v1_aa9c, i32* %r2.global-to-local, align 4
  %v3_aaa0 = add i32 %v4_aa98, %v0_aa94
  %v4_aaa0 = inttoptr i32 %v3_aaa0 to i32*
  store i32 %v1_aa9c, i32* %v4_aaa0, align 4
  %v2_aaa8.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_aaa8

dec_label_pc_aaa8:                                ; preds = %entry, %dec_label_pc_aa90
  %v1_aaac = phi i32 [ %v0_aa80, %entry ], [ -1, %dec_label_pc_aa90 ]
  %v2_aaa8 = phi i32 [ %v3_aa70, %entry ], [ %v2_aaa8.pre, %dec_label_pc_aa90 ]
  store i32 %v2_aaa8, i32* @r4, align 4
  ret i32 %v1_aaac

; uselistorder directives
  uselistorder i32 %v0_aa80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aaa8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_aab4 = load i32, i32* @r4, align 4
  store i32 %v3_aab4, i32* %stack_var_-28, align 4
  %v6_aab4 = load i32, i32* @r5, align 4
  %v9_aab4 = load i32, i32* @r6, align 4
  %v12_aab4 = load i32, i32* @r7, align 4
  %v15_aab4 = load i32, i32* @r8, align 4
  %v18_aab4 = load i32, i32* @sl, align 4
  %v21_aab4 = load i32, i32* @lr, align 4
  %v4_aac4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_aacc = icmp eq i32 %v4_aac4, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_aacc, label %dec_label_pc_aae8, label %entry.dec_label_pc_aaf4_crit_edge

entry.dec_label_pc_aaf4_crit_edge:                ; preds = %entry
  br label %dec_label_pc_aaf4

dec_label_pc_aae8:                                ; preds = %entry
  store i32 %v3_aab4, i32* @r4, align 4
  store i32 %v9_aab4, i32* @r6, align 4
  store i32 %v12_aab4, i32* @r7, align 4
  store i32 %v15_aab4, i32* @r8, align 4
  store i32 %v18_aab4, i32* %sl.global-to-local, align 4
  %v0_aaf0 = call i32 @__syscall_select()
  br label %dec_label_pc_aaf4

dec_label_pc_aaf4:                                ; preds = %entry.dec_label_pc_aaf4_crit_edge, %dec_label_pc_aae8
  %v0_aaf4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_aaf4, i32* @r5, align 4
  %v0_ab08 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_ab08, i32* @r0, align 4
  %v0_ab10 = call i32 @__syscall_select()
  store i32 %v0_ab10, i32* @r4, align 4
  %v0_ab18 = load i32, i32* @r5, align 4
  %v1_ab1c = call i32 @__libc_disable_asynccancel(i32 %v0_ab18)
  %v0_ab20 = load i32, i32* @r4, align 4
  %v2_ab28 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_ab28, i32* @r4, align 4
  store i32 %v6_aab4, i32* @r5, align 4
  store i32 %v9_aab4, i32* @r6, align 4
  store i32 %v12_aab4, i32* @r7, align 4
  store i32 %v15_aab4, i32* @r8, align 4
  store i32 %v18_aab4, i32* @sl, align 4
  store i32 %v21_aab4, i32* @lr, align 4
  ret i32 %v0_ab20

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aaf4, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_ab3c = ptrtoint i32* %stack_var_-16 to i32
  %v2_ab4c = call i32 @gettimeofday(i32 %v2_ab3c, i32 0)
  %v2_ab50 = load i32, i32* %stack_var_-16, align 4
  %v2_ab54 = icmp eq i32* %arg1, null
  br i1 %v2_ab54, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_ab50, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_ab50

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ab68 = load i32, i32* @r7, align 4
  store i32 %v3_ab68, i32* %stack_var_-8, align 4
  %v0_ab74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ab74, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ab74, -4095
  br i1 %tmp, label %dec_label_pc_ab9c, label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %entry
  %v0_ab88 = call i32 @__aeabi_read_tp()
  %v3_ab8c = load i16, i16* @global_var_22308.76, align 2
  %v4_ab8c = sext i16 %v3_ab8c to i32
  %v0_ab90 = load i32, i32* %r2.global-to-local, align 4
  %v1_ab90 = sub i32 0, %v0_ab90
  store i32 %v1_ab90, i32* %r2.global-to-local, align 4
  %v3_ab94 = add i32 %v4_ab8c, %v0_ab88
  %v4_ab94 = inttoptr i32 %v3_ab94 to i32*
  store i32 %v1_ab90, i32* %v4_ab94, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ab9c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %entry, %dec_label_pc_ab84
  %v1_aba0 = phi i32 [ %v0_ab74, %entry ], [ -1, %dec_label_pc_ab84 ]
  %v2_ab9c = phi i32 [ %v3_ab68, %entry ], [ %v2_ab9c.pre, %dec_label_pc_ab84 ]
  store i32 %v2_ab9c, i32* @r7, align 4
  ret i32 %v1_aba0

; uselistorder directives
  uselistorder i32 %v0_ab74, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab9c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_abac = load i32, i32* @r4, align 4
  store i32 %v3_abac, i32* %stack_var_-20, align 4
  %v6_abac = load i32, i32* @r5, align 4
  %v9_abac = load i32, i32* @r6, align 4
  %v12_abac = load i32, i32* @r7, align 4
  %v4_abb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_abbc = icmp eq i32 %v4_abb8, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_abbc, label %dec_label_pc_abd4, label %dec_label_pc_abe4

dec_label_pc_abd4:                                ; preds = %entry
  %v4_abd8 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  br label %dec_label_pc_ac0c

dec_label_pc_abe4:                                ; preds = %entry
  %v0_abe4 = call i32 @__libc_enable_asynccancel()
  %v0_abe8 = load i32, i32* @r6, align 4
  store i32 %v0_abe4, i32* @r4, align 4
  %v0_abf0 = load i32, i32* @r7, align 4
  %v0_abf4 = load i32, i32* @r5, align 4
  %v4_abfc = call i32 @wait4(i32 %v0_abf4, i32 %v0_abe8, i32 %v0_abf0, i32 0)
  store i32 %v4_abfc, i32* @r5, align 4
  %v0_ac04 = load i32, i32* @r4, align 4
  %v1_ac08 = call i32 @__libc_disable_asynccancel(i32 %v0_ac04)
  %v0_ac0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ac0c

dec_label_pc_ac0c:                                ; preds = %dec_label_pc_abd4, %dec_label_pc_abe4
  %v0_ac0c = phi i32 [ %v4_abd8, %dec_label_pc_abd4 ], [ %v0_ac0c.pre, %dec_label_pc_abe4 ]
  %v2_ac14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ac14, i32* @r4, align 4
  store i32 %v6_abac, i32* @r5, align 4
  store i32 %v9_abac, i32* @r6, align 4
  store i32 %v12_abac, i32* @r7, align 4
  ret i32 %v0_ac0c

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_ac0c, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ac28 = add i32 %arg1, 128
  %v2_ac2c = icmp ugt i32 %v1_ac28, 383
  %v0_ac34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_ac2c, i32 %v0_ac34)
  %v4_ac3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 204) to i32*), align 4
  %v2_ac40 = mul i32 %arg1, 2
  %v2_ac44 = add i32 %v4_ac3c, %v2_ac40
  %v3_ac44 = inttoptr i32 %v2_ac44 to i16*
  %v4_ac44 = load i16, i16* %v3_ac44, align 2
  %v6_ac44 = sext i16 %v4_ac44 to i32
  ret i32 %v6_ac44
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_ac54 = load i32, i32* @lr, align 4
  %v0_ac5c = call i32 @__aeabi_read_tp()
  %v3_ac60 = load i16, i16* @global_var_22308.76, align 2
  %v4_ac60 = sext i16 %v3_ac60 to i32
  %v2_ac64 = add i32 %v4_ac60, %v0_ac5c
  store i32 %v0_ac54, i32* @lr, align 4
  ret i32 %v2_ac64
}

define i32 @clock() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_ac78 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_ac78, i32* @r0, align 4
  %v1_ac80 = call i32 @times(i32 %v2_ac78)
  %v2_ac84 = load i32, i32* %stack_var_-24, align 4
  %v2_ac88 = add i32 %v2_ac84, %tmp
  %v2_ac90 = mul i32 %v2_ac88, 10000
  %v1_ac94 = and i32 %v2_ac90, 2147483632
  ret i32 %v1_ac94

; uselistorder directives
  uselistorder i32 %v2_ac78, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1) local_unnamed_addr {
dec_label_pc_aca4:
  %v0_aca4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_aca4, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_aca4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_aca4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_acbc = inttoptr i32 %arg2 to i8*
  %v3_acbc = call i32 @_memcpy(i8* %v2_acbc, i32 %arg1)
  ret i32 %v3_acbc
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_acc8 = load i32, i32* @r0, align 4
  %v3_acc8 = inttoptr i32 %v0_acc8 to i8*
  %v4_acc8 = call i32 @__GI_memset(i8* %v3_acc8, i32 0, i32 %arg1)
  ret i32 %v4_acc8
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_acd0 = load i32, i32* @r0, align 4
  %v1_acd0 = load i32, i32* @r1, align 4
  %v2_acd0 = inttoptr i32 %v0_acd0 to i8*
  %v3_acd0 = call i32 @_memcpy(i8* %v2_acd0, i32 %v1_acd0)
  ret i32 %v3_acd0
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_ace4 = icmp eq i32 %arg3, 8
  store i1 %v8_ace4, i1* %cpsr_z.global-to-local, align 1
  %v5_ace8 = icmp slt i32 %arg3, 8
  br i1 %v5_ace8, label %dec_label_pc_ad48, label %dec_label_pc_acec

dec_label_pc_acec:                                ; preds = %entry
  %v4_acec = mul i32 %arg2, 256
  %v5_acec = or i32 %v4_acec, %arg2
  %v4_acf0 = mul i32 %v5_acec, 65536
  %v5_acf0 = or i32 %v4_acf0, %v5_acec
  store i32 %v5_acf0, i32* @r1, align 4
  %v1_acf457 = urem i32 %tmp, 4
  %v2_acf458 = icmp eq i32 %v1_acf457, 0
  store i1 %v2_acf458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_acf458, label %dec_label_pc_ad04, label %bb

bb:                                               ; preds = %dec_label_pc_acec, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_acec ]
  %v3_acf859 = phi i32 [ %v6_acf8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_acec ]
  %v4_acf8 = inttoptr i32 %v3_acf859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_acf8, align 1
  %v5_acf8 = load i32, i32* @r3, align 4
  %v6_acf8 = add i32 %v5_acf8, 1
  store i32 %v6_acf8, i32* @r3, align 4
  %v0_acfc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ad08.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_acfc.pr, label %dec_label_pc_ad04, label %.thread

.thread:                                          ; preds = %bb
  %v2_acfc = add i32 %v0_ad08.pr.pre, -1
  store i32 %v2_acfc, i32* @r2, align 4
  %v1_acf4 = urem i32 %v6_acf8, 4
  %v2_acf4 = icmp eq i32 %v1_acf4, 0
  store i1 %v2_acf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acf4, label %dec_label_pc_ad04, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_acf8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_acf8.pre to i8
  br label %bb

dec_label_pc_ad04:                                ; preds = %.thread, %bb, %dec_label_pc_acec
  %v0_ad1028 = phi i32 [ %tmp, %dec_label_pc_acec ], [ %v6_acf8, %bb ], [ %v6_acf8, %.thread ]
  %v0_ad08.pr = phi i32 [ %arg3, %dec_label_pc_acec ], [ %v0_ad08.pr.pre, %bb ], [ %v2_acfc, %.thread ]
  %v0_ad04 = load i32, i32* @r1, align 4
  store i32 %v0_ad04, i32* @ip, align 4
  %v8_ad0810 = icmp eq i32 %v0_ad08.pr, 8
  store i1 %v8_ad0810, i1* %cpsr_z.global-to-local, align 1
  %v5_ad0c11 = icmp slt i32 %v0_ad08.pr, 8
  br i1 %v5_ad0c11, label %dec_label_pc_ad48, label %dec_label_pc_ad10.preheader

dec_label_pc_ad10.preheader:                      ; preds = %dec_label_pc_ad04
  %v1_ad1046 = inttoptr i32 %v0_ad1028 to i32*
  store i32 %v0_ad04, i32* %v1_ad1046, align 4
  %v3_ad1047 = add i32 %v0_ad1028, 4
  %v4_ad1048 = inttoptr i32 %v3_ad1047 to i32*
  %v5_ad1049 = load i32, i32* @ip, align 4
  store i32 %v5_ad1049, i32* %v4_ad1048, align 4
  %v6_ad1050 = add i32 %v0_ad1028, 8
  store i32 %v6_ad1050, i32* @r3, align 4
  %v0_ad1451 = load i32, i32* @r2, align 4
  %v1_ad1452 = add i32 %v0_ad1451, -8
  store i32 %v1_ad1452, i32* @r2, align 4
  %v5_ad1c53 = icmp slt i32 %v1_ad1452, 8
  br i1 %v5_ad1c53, label %dec_label_pc_ad10.dec_label_pc_ad48.loopexit_crit_edge, label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_ad10.preheader, %dec_label_pc_ad08.dec_label_pc_ad10_crit_edge
  %v6_ad1055 = phi i32 [ %v6_ad10, %dec_label_pc_ad08.dec_label_pc_ad10_crit_edge ], [ %v6_ad1050, %dec_label_pc_ad10.preheader ]
  %v0_ad1054 = phi i32 [ %v12_ad3c, %dec_label_pc_ad08.dec_label_pc_ad10_crit_edge ], [ %v0_ad1028, %dec_label_pc_ad10.preheader ]
  %v1_ad20 = inttoptr i32 %v6_ad1055 to i32*
  %v2_ad20 = load i32, i32* @r1, align 4
  store i32 %v2_ad20, i32* %v1_ad20, align 4
  %v3_ad20 = add i32 %v0_ad1054, 12
  %v4_ad20 = inttoptr i32 %v3_ad20 to i32*
  %v5_ad20 = load i32, i32* @ip, align 4
  store i32 %v5_ad20, i32* %v4_ad20, align 4
  %v6_ad20 = add i32 %v0_ad1054, 16
  store i32 %v6_ad20, i32* @r3, align 4
  %v0_ad24 = load i32, i32* @r2, align 4
  %v1_ad24 = add i32 %v0_ad24, -8
  store i32 %v1_ad24, i32* @r2, align 4
  %v5_ad2c = icmp slt i32 %v1_ad24, 8
  br i1 %v5_ad2c, label %dec_label_pc_ad20.dec_label_pc_ad48.loopexit_crit_edge, label %dec_label_pc_ad30

dec_label_pc_ad30:                                ; preds = %dec_label_pc_ad20
  %v1_ad30 = inttoptr i32 %v6_ad20 to i32*
  %v2_ad30 = load i32, i32* @r1, align 4
  store i32 %v2_ad30, i32* %v1_ad30, align 4
  %v3_ad30 = add i32 %v0_ad1054, 20
  %v4_ad30 = inttoptr i32 %v3_ad30 to i32*
  %v5_ad30 = load i32, i32* @ip, align 4
  store i32 %v5_ad30, i32* %v4_ad30, align 4
  %v6_ad30 = add i32 %v0_ad1054, 24
  store i32 %v6_ad30, i32* @r3, align 4
  %v0_ad34 = load i32, i32* @r2, align 4
  %v1_ad34 = add i32 %v0_ad34, -8
  store i32 %v1_ad34, i32* @r2, align 4
  %v5_ad3c = icmp slt i32 %v1_ad34, 8
  br i1 %v5_ad3c, label %dec_label_pc_ad30.dec_label_pc_ad48.loopexit_crit_edge, label %dec_label_pc_ad08

dec_label_pc_ad08:                                ; preds = %dec_label_pc_ad30
  %v7_ad3c = inttoptr i32 %v6_ad30 to i32*
  %v8_ad3c = load i32, i32* @r1, align 4
  store i32 %v8_ad3c, i32* %v7_ad3c, align 4
  %v9_ad3c = add i32 %v0_ad1054, 28
  %v10_ad3c = inttoptr i32 %v9_ad3c to i32*
  %v11_ad3c = load i32, i32* @ip, align 4
  store i32 %v11_ad3c, i32* %v10_ad3c, align 4
  %v12_ad3c = add i32 %v0_ad1054, 32
  store i32 %v12_ad3c, i32* @r3, align 4
  %v6_ad40 = load i32, i32* @r2, align 4
  %v7_ad40 = add i32 %v6_ad40, -8
  store i32 %v7_ad40, i32* @r2, align 4
  %v5_ad0c = icmp slt i32 %v7_ad40, 8
  br i1 %v5_ad0c, label %dec_label_pc_ad08.dec_label_pc_ad48.loopexit_crit_edge, label %dec_label_pc_ad08.dec_label_pc_ad10_crit_edge

dec_label_pc_ad08.dec_label_pc_ad10_crit_edge:    ; preds = %dec_label_pc_ad08
  %v2_ad10.pre = load i32, i32* @r1, align 4
  %v1_ad10 = inttoptr i32 %v12_ad3c to i32*
  store i32 %v2_ad10.pre, i32* %v1_ad10, align 4
  %v3_ad10 = add i32 %v0_ad1054, 36
  %v4_ad10 = inttoptr i32 %v3_ad10 to i32*
  %v5_ad10 = load i32, i32* @ip, align 4
  store i32 %v5_ad10, i32* %v4_ad10, align 4
  %v6_ad10 = add i32 %v0_ad1054, 40
  store i32 %v6_ad10, i32* @r3, align 4
  %v0_ad14 = load i32, i32* @r2, align 4
  %v1_ad14 = add i32 %v0_ad14, -8
  store i32 %v1_ad14, i32* @r2, align 4
  %v5_ad1c = icmp slt i32 %v1_ad14, 8
  br i1 %v5_ad1c, label %dec_label_pc_ad10.dec_label_pc_ad48.loopexit_crit_edge, label %dec_label_pc_ad20

dec_label_pc_ad08.dec_label_pc_ad48.loopexit_crit_edge: ; preds = %dec_label_pc_ad08
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad48

dec_label_pc_ad10.dec_label_pc_ad48.loopexit_crit_edge: ; preds = %dec_label_pc_ad08.dec_label_pc_ad10_crit_edge, %dec_label_pc_ad10.preheader
  %v1_ad14.lcssa = phi i32 [ %v1_ad1452, %dec_label_pc_ad10.preheader ], [ %v1_ad14, %dec_label_pc_ad08.dec_label_pc_ad10_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad48

dec_label_pc_ad20.dec_label_pc_ad48.loopexit_crit_edge: ; preds = %dec_label_pc_ad20
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad48

dec_label_pc_ad30.dec_label_pc_ad48.loopexit_crit_edge: ; preds = %dec_label_pc_ad30
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ad48

dec_label_pc_ad48:                                ; preds = %dec_label_pc_ad04, %dec_label_pc_ad08.dec_label_pc_ad48.loopexit_crit_edge, %dec_label_pc_ad10.dec_label_pc_ad48.loopexit_crit_edge, %dec_label_pc_ad20.dec_label_pc_ad48.loopexit_crit_edge, %dec_label_pc_ad30.dec_label_pc_ad48.loopexit_crit_edge, %entry
  %v0_ad50 = phi i32 [ %arg3, %entry ], [ %v1_ad34, %dec_label_pc_ad30.dec_label_pc_ad48.loopexit_crit_edge ], [ %v1_ad24, %dec_label_pc_ad20.dec_label_pc_ad48.loopexit_crit_edge ], [ %v1_ad14.lcssa, %dec_label_pc_ad10.dec_label_pc_ad48.loopexit_crit_edge ], [ %v7_ad40, %dec_label_pc_ad08.dec_label_pc_ad48.loopexit_crit_edge ], [ %v0_ad08.pr, %dec_label_pc_ad04 ]
  %v2_ad48 = icmp eq i32 %v0_ad50, 0
  store i1 %v2_ad48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ad48, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_ad48
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_ad48
  %v1_ad50 = sub i32 7, %v0_ad50
  store i32 %v1_ad50, i32* @r2, align 4
  %v3_ad54 = mul i32 %v1_ad50, 4
  %v4_ad54 = add i32 %v3_ad54, ptrtoint (i32* @global_var_ad5c.98 to i32)
  call void @__pseudo_branch(i32 %v4_ad54)
  %v0_ad5c = load i32, i32* @r1, align 4
  %v1_ad5c = trunc i32 %v0_ad5c to i8
  %v2_ad5c = load i32, i32* @r3, align 4
  %v3_ad5c = inttoptr i32 %v2_ad5c to i8*
  store i8 %v1_ad5c, i8* %v3_ad5c, align 1
  %v4_ad5c = load i32, i32* @r3, align 4
  %v5_ad5c = add i32 %v4_ad5c, 1
  store i32 %v5_ad5c, i32* %r3.global-to-local, align 4
  %v0_ad60 = load i32, i32* @r1, align 4
  %v1_ad60 = trunc i32 %v0_ad60 to i8
  %v3_ad60 = inttoptr i32 %v5_ad5c to i8*
  store i8 %v1_ad60, i8* %v3_ad60, align 1
  %v4_ad60 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad60 = add i32 %v4_ad60, 1
  store i32 %v5_ad60, i32* %r3.global-to-local, align 4
  %v0_ad64 = load i32, i32* @r1, align 4
  %v1_ad64 = trunc i32 %v0_ad64 to i8
  %v3_ad64 = inttoptr i32 %v5_ad60 to i8*
  store i8 %v1_ad64, i8* %v3_ad64, align 1
  %v4_ad64 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad64 = add i32 %v4_ad64, 1
  store i32 %v5_ad64, i32* %r3.global-to-local, align 4
  %v0_ad68 = load i32, i32* @r1, align 4
  %v1_ad68 = trunc i32 %v0_ad68 to i8
  %v3_ad68 = inttoptr i32 %v5_ad64 to i8*
  store i8 %v1_ad68, i8* %v3_ad68, align 1
  %v4_ad68 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad68 = add i32 %v4_ad68, 1
  store i32 %v5_ad68, i32* %r3.global-to-local, align 4
  %v0_ad6c = load i32, i32* @r1, align 4
  %v1_ad6c = trunc i32 %v0_ad6c to i8
  %v3_ad6c = inttoptr i32 %v5_ad68 to i8*
  store i8 %v1_ad6c, i8* %v3_ad6c, align 1
  %v4_ad6c = load i32, i32* %r3.global-to-local, align 4
  %v5_ad6c = add i32 %v4_ad6c, 1
  store i32 %v5_ad6c, i32* %r3.global-to-local, align 4
  %v0_ad70 = load i32, i32* @r1, align 4
  %v1_ad70 = trunc i32 %v0_ad70 to i8
  %v3_ad70 = inttoptr i32 %v5_ad6c to i8*
  store i8 %v1_ad70, i8* %v3_ad70, align 1
  %v4_ad70 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad70 = add i32 %v4_ad70, 1
  store i32 %v5_ad70, i32* %r3.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r1, align 4
  %v1_ad74 = trunc i32 %v0_ad74 to i8
  %v3_ad74 = inttoptr i32 %v5_ad70 to i8*
  store i8 %v1_ad74, i8* %v3_ad74, align 1
  %v4_ad74 = load i32, i32* %r3.global-to-local, align 4
  %v5_ad74 = add i32 %v4_ad74, 1
  store i32 %v5_ad74, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_ad10, { 1, 0 }
  uselistorder i32 %v12_ad3c, { 1, 2, 0 }
  uselistorder i32 %v0_ad1054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_ad08.pr, { 0, 2, 1 }
  uselistorder i32 %v6_acf8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_acec, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 5, 9, 8, 0, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ad48, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_ad20, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_ad84.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_ad84 = phi i32 [ %v0_ad84.pre, %bb ], [ %v5_ad84, %bb3 ]
  %v0_ad80 = phi i32 [ %tmp, %bb ], [ %v5_ad80, %bb3 ]
  %v1_ad80 = inttoptr i32 %v0_ad80 to i8*
  %v2_ad80 = load i8, i8* %v1_ad80, align 1
  %v1_ad84 = inttoptr i32 %v0_ad84 to i8*
  %v2_ad84 = load i8, i8* %v1_ad84, align 1
  %v3_ad84 = zext i8 %v2_ad84 to i32
  %v2_ad88 = icmp eq i8 %v2_ad80, 0
  br i1 %v2_ad88, label %.dec_label_pc_ad94_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_ad84 = add i32 %v0_ad84, 1
  %v5_ad80 = add i32 %v0_ad80, 1
  %v3_ad80 = zext i8 %v2_ad80 to i32
  %v10_ad8c = icmp eq i8 %v2_ad80, %v2_ad84
  br i1 %v10_ad8c, label %entry, label %dec_label_pc_ad94

.dec_label_pc_ad94_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_ad94

dec_label_pc_ad94:                                ; preds = %bb3, %.dec_label_pc_ad94_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_ad94_crit_edge ], [ %v3_ad80, %bb3 ]
  %v2_ad94.pre-phi = sub nsw i32 %.pn, %v3_ad84
  ret i32 %v2_ad94.pre-phi

; uselistorder directives
  uselistorder i8 %v2_ad80, { 0, 2, 1 }
  uselistorder i32 %v0_ad80, { 1, 0 }
  uselistorder i32 %v0_ad84, { 1, 0 }
  uselistorder label %dec_label_pc_ad94, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_ae04 = urem i32 %arg1, 256
  %v0_ae243 = load i32, i32* @r0, align 4
  %v1_ae244 = urem i32 %v0_ae243, 4
  %v2_ae245 = icmp eq i32 %v1_ae244, 0
  br i1 %v2_ae245, label %dec_label_pc_ae2c, label %dec_label_pc_ae0c

dec_label_pc_ae0c:                                ; preds = %entry, %dec_label_pc_ae20
  %v0_ae20 = phi i32 [ %v1_ae20, %dec_label_pc_ae20 ], [ %v0_ae243, %entry ]
  %v1_ae0c = inttoptr i32 %v0_ae20 to i8*
  %v2_ae0c = load i8, i8* %v1_ae0c, align 1
  %v3_ae0c = zext i8 %v2_ae0c to i32
  store i32 %v3_ae0c, i32* @r3, align 4
  %v9_ae10 = icmp eq i32 %v3_ae0c, %v1_ae04
  br i1 %v9_ae10, label %dec_label_pc_aee0, label %dec_label_pc_ae18

dec_label_pc_ae18:                                ; preds = %dec_label_pc_ae0c
  %v2_ae18 = icmp eq i8 %v2_ae0c, 0
  br i1 %v2_ae18, label %dec_label_pc_aedc, label %dec_label_pc_ae20

dec_label_pc_ae20:                                ; preds = %dec_label_pc_ae18
  %v1_ae20 = add i32 %v0_ae20, 1
  %v1_ae24 = urem i32 %v1_ae20, 4
  %v2_ae24 = icmp eq i32 %v1_ae24, 0
  br i1 %v2_ae24, label %dec_label_pc_ae2c, label %dec_label_pc_ae0c

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_ae20, %entry
  %v0_ae30 = phi i32 [ %v0_ae243, %entry ], [ %v1_ae20, %dec_label_pc_ae20 ]
  %v4_ae2c = mul nuw nsw i32 %v1_ae04, 256
  %v5_ae2c = or i32 %v4_ae2c, %v1_ae04
  %v4_ae34 = mul i32 %v5_ae2c, 65536
  %v5_ae34 = or i32 %v4_ae34, %v5_ae2c
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_ae74, %dec_label_pc_ae2c
  %v0_ae9c = phi i32 [ %v0_ae30, %dec_label_pc_ae2c ], [ %v4_ae38, %dec_label_pc_ae74 ], [ %v4_ae38, %dec_label_pc_aed4 ]
  %v1_ae38 = inttoptr i32 %v0_ae9c to i32*
  %v2_ae38 = load i32, i32* %v1_ae38, align 4
  %v4_ae38 = add i32 %v0_ae9c, 4
  %v2_ae40 = xor i32 %v2_ae38, %v5_ae34
  %v2_ae44 = add i32 %v2_ae40, 2130640639
  store i32 %v2_ae44, i32* @ip, align 4
  %v2_ae4c = add i32 %v2_ae38, 2130640639
  %v1_ae50 = sub i32 -1, %v2_ae38
  %v2_ae54 = xor i32 %v2_ae4c, %v1_ae50
  %v2_ae60 = and i32 %v2_ae54, -2130640640
  store i32 %v2_ae60, i32* @r1, align 4
  %v2_ae68 = icmp eq i32 %v2_ae60, 0
  br i1 %v2_ae68, label %dec_label_pc_ae74, label %dec_label_pc_ae7c

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae38
  %v1_ae5c = sub i32 -1, %v2_ae40
  %v2_ae64 = xor i32 %v2_ae44, %v1_ae5c
  %v2_ae6c = and i32 %v2_ae64, -2130640640
  %v2_ae74 = icmp eq i32 %v2_ae6c, 0
  br i1 %v2_ae74, label %dec_label_pc_ae38, label %dec_label_pc_ae7c

dec_label_pc_ae7c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae74
  %v2_ae7c = inttoptr i32 %v0_ae9c to i8*
  %v3_ae7c = load i8, i8* %v2_ae7c, align 1
  %v4_ae7c = zext i8 %v3_ae7c to i32
  store i32 %v4_ae7c, i32* @r3, align 4
  %v9_ae80 = icmp eq i32 %v4_ae7c, %v1_ae04
  br i1 %v9_ae80, label %dec_label_pc_aee0, label %dec_label_pc_ae8c

dec_label_pc_ae8c:                                ; preds = %dec_label_pc_ae7c
  %v2_ae8c = icmp eq i8 %v3_ae7c, 0
  br i1 %v2_ae8c, label %dec_label_pc_aedc, label %dec_label_pc_ae94

dec_label_pc_ae94:                                ; preds = %dec_label_pc_ae8c
  %v1_ae94 = add i32 %v0_ae9c, 1
  %v2_ae94 = inttoptr i32 %v1_ae94 to i8*
  %v3_ae94 = load i8, i8* %v2_ae94, align 1
  %v4_ae94 = zext i8 %v3_ae94 to i32
  store i32 %v4_ae94, i32* @r3, align 4
  %v9_ae98 = icmp eq i32 %v4_ae94, %v1_ae04
  br i1 %v9_ae98, label %dec_label_pc_aee0, label %dec_label_pc_aea4

dec_label_pc_aea4:                                ; preds = %dec_label_pc_ae94
  %v2_aea4 = icmp eq i8 %v3_ae94, 0
  br i1 %v2_aea4, label %dec_label_pc_aedc, label %dec_label_pc_aeac

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea4
  %v1_aeac = add i32 %v0_ae9c, 2
  %v2_aeac = inttoptr i32 %v1_aeac to i8*
  %v3_aeac = load i8, i8* %v2_aeac, align 1
  %v4_aeac = zext i8 %v3_aeac to i32
  store i32 %v4_aeac, i32* @r3, align 4
  %v9_aeb0 = icmp eq i32 %v4_aeac, %v1_ae04
  br i1 %v9_aeb0, label %dec_label_pc_aee0, label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aeac
  %v2_aebc = icmp eq i8 %v3_aeac, 0
  br i1 %v2_aebc, label %dec_label_pc_aedc, label %dec_label_pc_aec4

dec_label_pc_aec4:                                ; preds = %dec_label_pc_aebc
  %v1_aec4 = add i32 %v0_ae9c, 3
  %v2_aec4 = inttoptr i32 %v1_aec4 to i8*
  %v3_aec4 = load i8, i8* %v2_aec4, align 1
  %v4_aec4 = zext i8 %v3_aec4 to i32
  store i32 %v4_aec4, i32* @r3, align 4
  %v9_aec8 = icmp eq i32 %v4_aec4, %v1_ae04
  br i1 %v9_aec8, label %dec_label_pc_aee0, label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aec4
  %v2_aed4 = icmp eq i8 %v3_aec4, 0
  br i1 %v2_aed4, label %dec_label_pc_aedc, label %dec_label_pc_ae38

dec_label_pc_aedc:                                ; preds = %dec_label_pc_ae18, %dec_label_pc_aed4, %dec_label_pc_aebc, %dec_label_pc_aea4, %dec_label_pc_ae8c
  br label %dec_label_pc_aee0

dec_label_pc_aee0:                                ; preds = %dec_label_pc_ae0c, %dec_label_pc_aec4, %dec_label_pc_aeac, %dec_label_pc_ae94, %dec_label_pc_ae7c, %dec_label_pc_aedc
  %v1_aee4 = phi i32 [ 0, %dec_label_pc_aedc ], [ %v1_aec4, %dec_label_pc_aec4 ], [ %v1_aeac, %dec_label_pc_aeac ], [ %v1_ae94, %dec_label_pc_ae94 ], [ %v0_ae9c, %dec_label_pc_ae7c ], [ %v0_ae20, %dec_label_pc_ae0c ]
  ret i32 %v1_aee4

; uselistorder directives
  uselistorder i32 %v4_ae38, { 1, 0 }
  uselistorder i32 %v2_ae38, { 0, 2, 1 }
  uselistorder i32 %v0_ae9c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_ae2c, { 1, 0 }
  uselistorder i32 %v1_ae20, { 1, 0, 2 }
  uselistorder i32 %v0_ae243, { 2, 1, 0 }
  uselistorder i32 %v1_ae04, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_aee0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_aedc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_ae7c, { 1, 0 }
  uselistorder label %dec_label_pc_ae0c, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_af001 = load i32, i32* @r1, align 4
  %v1_af002 = inttoptr i32 %v0_af001 to i8*
  %v2_af003 = load i8, i8* %v1_af002, align 1
  %v2_af045 = icmp eq i8 %v2_af003, 0
  store i1 %v2_af045, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_af003, i8* %arg1, align 1
  br i1 %v2_af045, label %dec_label_pc_af10, label %dec_label_pc_aef8

dec_label_pc_aef8:                                ; preds = %entry, %dec_label_pc_aef8
  %v0_aef8 = load i32, i32* @r1, align 4
  %v1_aef8 = add i32 %v0_aef8, 1
  store i32 %v1_aef8, i32* @r1, align 4
  %v0_aefc = load i32, i32* %r2.global-to-local, align 4
  %v1_aefc = add i32 %v0_aefc, 1
  store i32 %v1_aefc, i32* %r2.global-to-local, align 4
  %v1_af00 = inttoptr i32 %v1_aef8 to i8*
  %v2_af00 = load i8, i8* %v1_af00, align 1
  %v2_af04 = icmp eq i8 %v2_af00, 0
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  %v3_af08 = inttoptr i32 %v1_aefc to i8*
  store i8 %v2_af00, i8* %v3_af08, align 1
  %v0_af0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_af0c, label %dec_label_pc_af10, label %dec_label_pc_aef8

dec_label_pc_af10:                                ; preds = %dec_label_pc_aef8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aef8, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 784), i32* @r2, align 4
  %v0_af2c = call i32 @strtok_r()
  ret i32 %v0_af2c
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_af44 = udiv i32 %arg1, 256
  %v1_af48 = mul i32 %arg1, 256
  %v4_af4c = and i32 %v1_af48, 65280
  %v5_af4c = or i32 %v4_af4c, %v3_af44
  ret i32 %v5_af4c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_af6c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_af6c
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_af74 = udiv i32 %arg1, 256
  %v1_af78 = mul i32 %arg1, 256
  %v4_af7c = and i32 %v1_af78, 65280
  %v5_af7c = or i32 %v4_af7c, %v3_af74
  ret i32 %v5_af7c
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_af9c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_af9c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_afac = ptrtoint i32* %stack_var_-12 to i32
  %v0_afb0 = load i32, i32* @r0, align 4
  %v2_afb0 = inttoptr i32 %v0_afb0 to i8*
  %v3_afb0 = call i32 @inet_aton(i8* %v2_afb0, i32 %v2_afac)
  %v2_afb4 = icmp eq i32 %v3_afb0, 0
  %v4_afb8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_afb4, i32 -1, i32 %v4_afb8
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_afd8 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_afd8
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v3_afe8 = load i32, i32* @r4, align 4
  %v0_b004 = load i32, i32* @r0, align 4
  %v3_b008 = load i32, i32* @global_var_222c4.104, align 4
  %v0_b00c = call i32 @__aeabi_read_tp()
  %v2_b014 = add i32 %v3_b008, %v0_b00c
  store i32 %v2_b014, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 788), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 1228), i32* @r2, align 4
  %v1_b034 = call i32 @gethostbyname2_r(i32 %v0_b004)
  store i32 %v3_afe8, i32* @r4, align 4
  ret i32 %tmp5
}

define i32 @function_b050(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b050:
  %v0_b050 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b050, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b050
  %v2_b050 = load i32, i32* @r4, align 4
  %v8_b050 = shl i32 %v2_b050, %arg2
  %v9_b050 = and i32 %v8_b050, %arg1
  %v2_b054 = load i32, i32* @ip, align 4
  %v5_b054 = sdiv i32 %v2_b054, 512
  %v6_b054 = and i32 %v9_b050, %v5_b054
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b050, %bb
  %v7_b054 = phi i32 [ %arg1, %dec_label_pc_b050 ], [ %v6_b054, %bb ]
  ret i32 %v7_b054

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b058 = load i32, i32* @r7, align 4
  store i32 %v3_b058, i32* %stack_var_-8, align 4
  %v0_b064 = load i32, i32* @r0, align 4
  store i32 %v0_b064, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b064, -4095
  br i1 %tmp, label %dec_label_pc_b08c, label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %entry
  %v0_b078 = call i32 @__aeabi_read_tp()
  %v3_b07c = load i16, i16* @global_var_22308.76, align 2
  %v4_b07c = sext i16 %v3_b07c to i32
  %v0_b080 = load i32, i32* %r2.global-to-local, align 4
  %v1_b080 = sub i32 0, %v0_b080
  store i32 %v1_b080, i32* %r2.global-to-local, align 4
  %v3_b084 = add i32 %v4_b07c, %v0_b078
  %v4_b084 = inttoptr i32 %v3_b084 to i32*
  store i32 %v1_b080, i32* %v4_b084, align 4
  %v2_b08c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b08c

dec_label_pc_b08c:                                ; preds = %entry, %dec_label_pc_b074
  %v1_b090 = phi i32 [ %v0_b064, %entry ], [ -1, %dec_label_pc_b074 ]
  %v2_b08c = phi i32 [ %v3_b058, %entry ], [ %v2_b08c.pre, %dec_label_pc_b074 ]
  store i32 %v2_b08c, i32* @r7, align 4
  ret i32 %v1_b090

; uselistorder directives
  uselistorder i32 %v0_b064, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b08c, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b094:
  %v0_b094 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b094, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b094
  %v2_b094 = load i32, i32* @fp, align 4
  %v8_b094 = shl i32 %v2_b094, %arg2
  %v9_b094 = and i32 %v8_b094, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b094, %bb
  %v7_b098 = phi i32 [ %arg1, %dec_label_pc_b094 ], [ %v9_b094, %bb ]
  ret i32 %v7_b098

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_b0a0 = load i32, i32* @r4, align 4
  store i32 %v3_b0a0, i32* %stack_var_-20, align 4
  %v6_b0a0 = load i32, i32* @r5, align 4
  %v9_b0a0 = load i32, i32* @r6, align 4
  %v12_b0a0 = load i32, i32* @r7, align 4
  %v4_b0ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_b0b0 = icmp eq i32 %v4_b0ac, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_b0b0, label %dec_label_pc_b0c8, label %entry.dec_label_pc_b0d4_crit_edge

entry.dec_label_pc_b0d4_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b0d4

dec_label_pc_b0c8:                                ; preds = %entry
  store i32 %v3_b0a0, i32* @r4, align 4
  store i32 %v9_b0a0, i32* @r6, align 4
  store i32 %v12_b0a0, i32* @r7, align 4
  %v0_b0d0 = call i32 @__sys_connect()
  br label %dec_label_pc_b0d4

dec_label_pc_b0d4:                                ; preds = %entry.dec_label_pc_b0d4_crit_edge, %dec_label_pc_b0c8
  %v0_b0d4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b0d4, i32* @r5, align 4
  %v0_b0e4 = load i32, i32* @r4, align 4
  store i32 %v0_b0e4, i32* @r0, align 4
  %v0_b0e8 = call i32 @__sys_connect()
  store i32 %v0_b0e8, i32* @r4, align 4
  %v0_b0f0 = load i32, i32* @r5, align 4
  %v1_b0f4 = call i32 @__libc_disable_asynccancel(i32 %v0_b0f0)
  %v0_b0f8 = load i32, i32* @r4, align 4
  %v2_b100 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_b100, i32* @r4, align 4
  store i32 %v6_b0a0, i32* @r5, align 4
  store i32 %v9_b0a0, i32* @r6, align 4
  store i32 %v12_b0a0, i32* @r7, align 4
  ret i32 %v0_b0f8

; uselistorder directives
  uselistorder label %dec_label_pc_b0d4, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_b110 = load i32, i32* @r4, align 4
  store i32 %v3_b110, i32* %stack_var_-12, align 4
  %v0_b120 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b120, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b120, -4095
  br i1 %tmp, label %dec_label_pc_b148, label %dec_label_pc_b130

dec_label_pc_b130:                                ; preds = %entry
  %v0_b134 = call i32 @__aeabi_read_tp()
  %v3_b138 = load i16, i16* @global_var_22308.76, align 2
  %v4_b138 = sext i16 %v3_b138 to i32
  %v0_b13c = load i32, i32* %r2.global-to-local, align 4
  %v1_b13c = sub i32 0, %v0_b13c
  store i32 %v1_b13c, i32* %r2.global-to-local, align 4
  %v3_b140 = add i32 %v4_b138, %v0_b134
  %v4_b140 = inttoptr i32 %v3_b140 to i32*
  store i32 %v1_b13c, i32* %v4_b140, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_b148.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_b148

dec_label_pc_b148:                                ; preds = %entry, %dec_label_pc_b130
  %v1_b14c = phi i32 [ %v0_b120, %entry ], [ -1, %dec_label_pc_b130 ]
  %v2_b148 = phi i32 [ %v3_b110, %entry ], [ %v2_b148.pre, %dec_label_pc_b130 ]
  store i32 %v2_b148, i32* @r4, align 4
  ret i32 %v1_b14c

; uselistorder directives
  uselistorder i32 %v0_b120, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b148, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b150:
  %v0_b150 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b150, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b150
  %v2_b150 = load i32, i32* @r7, align 4
  %v5_b150 = udiv i32 %v2_b150, 4
  %v6_b150 = and i32 %v5_b150, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b150, %bb
  %v7_b154 = phi i32 [ %arg1, %dec_label_pc_b150 ], [ %v6_b150, %bb ]
  ret i32 %v7_b154

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b158 = load i32, i32* @r7, align 4
  store i32 %v3_b158, i32* %stack_var_-8, align 4
  %v0_b164 = load i32, i32* @r0, align 4
  store i32 %v0_b164, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b164, -4095
  br i1 %tmp, label %dec_label_pc_b18c, label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %entry
  %v0_b178 = call i32 @__aeabi_read_tp()
  %v3_b17c = load i16, i16* @global_var_22308.76, align 2
  %v4_b17c = sext i16 %v3_b17c to i32
  %v0_b180 = load i32, i32* %r2.global-to-local, align 4
  %v1_b180 = sub i32 0, %v0_b180
  store i32 %v1_b180, i32* %r2.global-to-local, align 4
  %v3_b184 = add i32 %v4_b17c, %v0_b178
  %v4_b184 = inttoptr i32 %v3_b184 to i32*
  store i32 %v1_b180, i32* %v4_b184, align 4
  %v2_b18c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b18c

dec_label_pc_b18c:                                ; preds = %entry, %dec_label_pc_b174
  %v1_b190 = phi i32 [ %v0_b164, %entry ], [ -1, %dec_label_pc_b174 ]
  %v2_b18c = phi i32 [ %v3_b158, %entry ], [ %v2_b18c.pre, %dec_label_pc_b174 ]
  store i32 %v2_b18c, i32* @r7, align 4
  ret i32 %v1_b190

; uselistorder directives
  uselistorder i32 %v0_b164, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b18c, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b194:
  %v0_b194 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b194, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b194
  %v5_b194 = udiv i32 %arg3, 4
  %v6_b194 = and i32 %v5_b194, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b194, %bb
  %v7_b198 = phi i32 [ %arg1, %dec_label_pc_b194 ], [ %v6_b194, %bb ]
  ret i32 %v7_b198

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_b1a0 = load i32, i32* @r4, align 4
  store i32 %v3_b1a0, i32* %stack_var_-24, align 4
  %v6_b1a0 = load i32, i32* @r5, align 4
  %v9_b1a0 = load i32, i32* @r6, align 4
  %v12_b1a0 = load i32, i32* @r7, align 4
  %v15_b1a0 = load i32, i32* @r8, align 4
  %v18_b1a0 = load i32, i32* @lr, align 4
  %v4_b1ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_b1b0 = icmp eq i32 %v4_b1ac, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_b1b0, label %dec_label_pc_b1c8, label %entry.dec_label_pc_b1d0_crit_edge

entry.dec_label_pc_b1d0_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b1d0

dec_label_pc_b1c8:                                ; preds = %entry
  store i32 %v3_b1a0, i32* @r4, align 4
  store i32 %v9_b1a0, i32* @r6, align 4
  store i32 %v12_b1a0, i32* @r7, align 4
  store i32 %v15_b1a0, i32* @r8, align 4
  %v0_b1cc = call i32 @__sys_recv()
  br label %dec_label_pc_b1d0

dec_label_pc_b1d0:                                ; preds = %entry.dec_label_pc_b1d0_crit_edge, %dec_label_pc_b1c8
  %v0_b1d0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b1d0, i32* @r5, align 4
  %v0_b1e4 = load i32, i32* @r4, align 4
  store i32 %v0_b1e4, i32* @r0, align 4
  %v0_b1e8 = call i32 @__sys_recv()
  store i32 %v0_b1e8, i32* @r4, align 4
  %v0_b1f0 = load i32, i32* @r5, align 4
  %v1_b1f4 = call i32 @__libc_disable_asynccancel(i32 %v0_b1f0)
  %v0_b1f8 = load i32, i32* @r4, align 4
  %v2_b1fc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_b1fc, i32* @r4, align 4
  store i32 %v6_b1a0, i32* @r5, align 4
  store i32 %v9_b1a0, i32* @r6, align 4
  store i32 %v12_b1a0, i32* @r7, align 4
  store i32 %v15_b1a0, i32* @r8, align 4
  store i32 %v18_b1a0, i32* @lr, align 4
  ret i32 %v0_b1f8

; uselistorder directives
  uselistorder label %dec_label_pc_b1d0, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b20c = load i32, i32* @r7, align 4
  store i32 %v3_b20c, i32* %stack_var_-8, align 4
  %v0_b218 = load i32, i32* @r0, align 4
  store i32 %v0_b218, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b218, -4095
  br i1 %tmp, label %dec_label_pc_b240, label %dec_label_pc_b228

dec_label_pc_b228:                                ; preds = %entry
  %v0_b22c = call i32 @__aeabi_read_tp()
  %v3_b230 = load i16, i16* @global_var_22308.76, align 2
  %v4_b230 = sext i16 %v3_b230 to i32
  %v0_b234 = load i32, i32* %r2.global-to-local, align 4
  %v1_b234 = sub i32 0, %v0_b234
  store i32 %v1_b234, i32* %r2.global-to-local, align 4
  %v3_b238 = add i32 %v4_b230, %v0_b22c
  %v4_b238 = inttoptr i32 %v3_b238 to i32*
  store i32 %v1_b234, i32* %v4_b238, align 4
  %v2_b240.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b240

dec_label_pc_b240:                                ; preds = %entry, %dec_label_pc_b228
  %v1_b244 = phi i32 [ %v0_b218, %entry ], [ -1, %dec_label_pc_b228 ]
  %v2_b240 = phi i32 [ %v3_b20c, %entry ], [ %v2_b240.pre, %dec_label_pc_b228 ]
  store i32 %v2_b240, i32* @r7, align 4
  ret i32 %v1_b244

; uselistorder directives
  uselistorder i32 %v0_b218, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b240, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_b248:
  %v0_b248 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b248, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b248
  %tmp = ptrtoint i64* %arg2 to i32
  %v6_b248 = udiv i32 %tmp, 4
  %v7_b248 = and i32 %v6_b248, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b248, %bb
  %v12_b24c = phi i32 [ %arg1, %dec_label_pc_b248 ], [ %v7_b248, %bb ]
  ret i32 %v12_b24c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_b254 = load i32, i32* @r4, align 4
  store i32 %v3_b254, i32* %stack_var_-24, align 4
  %v6_b254 = load i32, i32* @r5, align 4
  %v9_b254 = load i32, i32* @r6, align 4
  %v12_b254 = load i32, i32* @r7, align 4
  %v15_b254 = load i32, i32* @r8, align 4
  %v18_b254 = load i32, i32* @lr, align 4
  %v4_b260 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_b264 = icmp eq i32 %v4_b260, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_b264, label %dec_label_pc_b27c, label %entry.dec_label_pc_b284_crit_edge

entry.dec_label_pc_b284_crit_edge:                ; preds = %entry
  br label %dec_label_pc_b284

dec_label_pc_b27c:                                ; preds = %entry
  store i32 %v3_b254, i32* @r4, align 4
  store i32 %v9_b254, i32* @r6, align 4
  store i32 %v12_b254, i32* @r7, align 4
  store i32 %v15_b254, i32* @r8, align 4
  %v0_b280 = call i32 @__sys_send()
  br label %dec_label_pc_b284

dec_label_pc_b284:                                ; preds = %entry.dec_label_pc_b284_crit_edge, %dec_label_pc_b27c
  %v0_b284 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_b284, i32* @r5, align 4
  %v0_b298 = load i32, i32* @r4, align 4
  store i32 %v0_b298, i32* @r0, align 4
  %v0_b29c = call i32 @__sys_send()
  store i32 %v0_b29c, i32* @r4, align 4
  %v0_b2a4 = load i32, i32* @r5, align 4
  %v1_b2a8 = call i32 @__libc_disable_asynccancel(i32 %v0_b2a4)
  %v0_b2ac = load i32, i32* @r4, align 4
  %v2_b2b0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_b2b0, i32* @r4, align 4
  store i32 %v6_b254, i32* @r5, align 4
  store i32 %v9_b254, i32* @r6, align 4
  store i32 %v12_b254, i32* @r7, align 4
  store i32 %v15_b254, i32* @r8, align 4
  store i32 %v18_b254, i32* @lr, align 4
  ret i32 %v0_b2ac

; uselistorder directives
  uselistorder label %dec_label_pc_b284, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_b2c0 = load i32, i32* @r7, align 4
  store i32 %v3_b2c0, i32* %stack_var_-8, align 4
  %v0_b2cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b2cc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_b2cc, -4095
  br i1 %tmp, label %dec_label_pc_b2f4, label %dec_label_pc_b2dc

dec_label_pc_b2dc:                                ; preds = %entry
  %v0_b2e0 = call i32 @__aeabi_read_tp()
  %v3_b2e4 = load i16, i16* @global_var_22308.76, align 2
  %v4_b2e4 = sext i16 %v3_b2e4 to i32
  %v0_b2e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2e8 = sub i32 0, %v0_b2e8
  store i32 %v1_b2e8, i32* %r2.global-to-local, align 4
  %v3_b2ec = add i32 %v4_b2e4, %v0_b2e0
  %v4_b2ec = inttoptr i32 %v3_b2ec to i32*
  store i32 %v1_b2e8, i32* %v4_b2ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_b2f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b2f4

dec_label_pc_b2f4:                                ; preds = %entry, %dec_label_pc_b2dc
  %v1_b2f8 = phi i32 [ %v0_b2cc, %entry ], [ -1, %dec_label_pc_b2dc ]
  %v2_b2f4 = phi i32 [ %v3_b2c0, %entry ], [ %v2_b2f4.pre, %dec_label_pc_b2dc ]
  store i32 %v2_b2f4, i32* @r7, align 4
  ret i32 %v1_b2f8

; uselistorder directives
  uselistorder i32 %v0_b2cc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b2f4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b2fc:
  %v0_b2fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b2fc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_b2fc
  %v2_b2fc = load i32, i32* @sb, align 4
  %v8_b2fc = shl i32 %v2_b2fc, %arg2
  %v9_b2fc = and i32 %v8_b2fc, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b2fc, %bb
  %v10_b300 = phi i32 [ %arg1, %dec_label_pc_b2fc ], [ %v9_b2fc, %bb ]
  ret i32 %v10_b300

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_b304 = load i32, i32* @r4, align 4
  store i32 %v3_b304, i32* %stack_var_-16, align 4
  %v6_b304 = load i32, i32* @r5, align 4
  %v9_b304 = load i32, i32* @r6, align 4
  %v7_b30c = icmp eq i32 %arg2, -1
  br i1 %v7_b30c, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_b314 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_b330

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_b338

dec_label_pc_b330:                                ; preds = %bb
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  %v7_b334 = icmp slt i32 %arg1, 65
  br i1 %v7_b334, label %dec_label_pc_b354, label %dec_label_pc_b338

dec_label_pc_b338:                                ; preds = %.thread16, %dec_label_pc_b330
  %v0_b33c = call i32 @__aeabi_read_tp()
  %v3_b340 = load i16, i16* @global_var_22308.76, align 2
  %v4_b340 = sext i16 %v3_b340 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_b34c = add i32 %v4_b340, %v0_b33c
  %v4_b34c = inttoptr i32 %v3_b34c to i32*
  store i32 22, i32* %v4_b34c, align 4
  %v0_b3ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_b354:                                ; preds = %dec_label_pc_b330
  %v2_b354 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_b354, i32* @r4, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_b35c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v2_b36c = call i32 @__sigaddset(i32 %v2_b35c, i32 %arg1)
  %v0_b374 = load i32, i32* @r5, align 4
  store i32 %v0_b374, i32* %r1.global-to-local, align 4
  %v0_b378 = load i32, i32* @r6, align 4
  %v2_b378 = add i32 %v0_b378, 12248
  %v2_b37c = call i32 @__GI___sigismember(i32 %v2_b378, i32 %v0_b374)
  store i32 %v2_b354, i32* %r1.global-to-local, align 4
  %v0_b390 = load i32, i32* @r5, align 4
  %v3_b39c = call i32 @__libc_sigaction(i32 %v0_b390, i32 %v2_b354, i32 %v2_b314)
  %v1_b3a0 = icmp slt i32 %v3_b39c, 0
  br i1 %v1_b3a0, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_b354
  %v5_b3a4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_b3a4, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_b354
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_b338, %bb32
  %v0_b3ac = phi i32 [ %v5_b3a4, %bb31 ], [ %v0_b3ac.pre, %dec_label_pc_b338 ], [ -1, %bb32 ]
  %v2_b3b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_b3b4, i32* @r4, align 4
  store i32 %v6_b304, i32* @r5, align 4
  store i32 %v9_b304, i32* @r6, align 4
  ret i32 %v0_b3ac

; uselistorder directives
  uselistorder i32 %v2_b354, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b338, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_b3c8 = add i32 %arg2, -1
  %v3_b3cc = udiv i32 %v1_b3c8, 32
  %v4_b3d0 = mul nuw nsw i32 %v3_b3cc, 4
  %v5_b3d0 = add i32 %v4_b3d0, %arg1
  %v6_b3d0 = inttoptr i32 %v5_b3d0 to i32*
  %v7_b3d0 = load i32, i32* %v6_b3d0, align 4
  %v1_b3d4 = urem i32 %v1_b3c8, 32
  %v7_b3dc = shl i32 1, %v1_b3d4
  %v8_b3dc = and i32 %v7_b3d0, %v7_b3dc
  %v10_b3dc = icmp ne i32 %v8_b3dc, 0
  %. = zext i1 %v10_b3dc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_b3c8, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_b3ec = add i32 %arg2, -1
  %v3_b3f0 = udiv i32 %v1_b3ec, 32
  %v4_b3f4 = mul nuw nsw i32 %v3_b3f0, 4
  %v5_b3f4 = add i32 %v4_b3f4, %arg1
  %v6_b3f4 = inttoptr i32 %v5_b3f4 to i32*
  %v7_b3f4 = load i32, i32* %v6_b3f4, align 4
  %v1_b3f8 = urem i32 %v1_b3ec, 32
  %v7_b400 = shl i32 1, %v1_b3f8
  %v8_b400 = or i32 %v7_b3f4, %v7_b400
  store i32 %v8_b400, i32* %v6_b3f4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_b3ec, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_b410 = add i32 %arg2, -1
  %v3_b414 = udiv i32 %v1_b410, 32
  %v4_b418 = mul nuw nsw i32 %v3_b414, 4
  %v5_b418 = add i32 %v4_b418, %arg1
  %v6_b418 = inttoptr i32 %v5_b418 to i32*
  %v7_b418 = load i32, i32* %v6_b418, align 4
  %v1_b41c = urem i32 %v1_b410, 32
  %tmp = shl i32 -1, %v1_b41c
  %v8_b424 = add i32 %tmp, -1
  %v9_b424 = and i32 %v7_b418, %v8_b424
  store i32 %v9_b424, i32* %v6_b418, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_b410, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_b434 = udiv i32 %arg1, 256
  store i32 %v3_b434, i32* %r1.global-to-local, align 4
  %v2_b438 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_b438, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_b444 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_b438, i32 %v0_b444)
  %v0_b448 = load i32, i32* %r1.global-to-local, align 4
  %v1_b448 = add i32 %v0_b448, 1048320
  %v3_b44c = udiv i32 %v1_b448, 65536
  %v1_b450 = and i32 %v3_b44c, 8
  %v6_b454 = shl i32 %v0_b448, %v1_b450
  %v1_b458 = add i32 %v6_b454, 520192
  %v3_b45c = udiv i32 %v1_b458, 65536
  %v1_b460 = and i32 %v3_b45c, 4
  %v6_b464 = shl i32 %v6_b454, %v1_b460
  %v1_b468 = add i32 %v6_b464, 245760
  %v3_b46c = udiv i32 %v1_b468, 65536
  %v1_b470 = and i32 %v3_b46c, 2
  %v6_b474 = shl i32 %v6_b464, %v1_b470
  store i32 %v6_b474, i32* %r1.global-to-local, align 4
  %v1_b478 = sub nsw i32 13, %v1_b450
  %v2_b47c = sub nsw i32 %v1_b478, %v1_b460
  %v3_b480 = udiv i32 %v6_b474, 32768
  %v4_b480 = sub nuw nsw i32 -1, %v3_b480
  %v4_b484 = udiv i32 %v6_b474, 16384
  %v5_b484 = and i32 %v4_b484, %v4_b480
  %v2_b488 = sub nsw i32 %v2_b47c, %v1_b470
  %v2_b48c = add nsw i32 %v2_b488, %v5_b484
  %v1_b490 = add nsw i32 %v2_b48c, 6
  %v0_b494 = load i32, i32* %ip.global-to-local, align 4
  %v6_b494 = lshr i32 %v0_b494, %v1_b490
  %v3_b498 = mul nsw i32 %v2_b48c, 4
  %v1_b49c = add nsw i32 %v3_b498, 32
  %v1_b4a0 = urem i32 %v6_b494, 4
  %v2_b4a4 = or i32 %v1_b4a0, %v1_b49c
  ret i32 %v2_b4a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_b4ac = load i32, i32* @r4, align 4
  %v6_b4ac = load i32, i32* @r5, align 4
  %v9_b4ac = load i32, i32* @r6, align 4
  %v12_b4ac = load i32, i32* @r7, align 4
  %v15_b4ac = load i32, i32* @r8, align 4
  %v18_b4ac = load i32, i32* @sb, align 4
  %v21_b4ac = load i32, i32* @sl, align 4
  %v24_b4ac = load i32, i32* @fp, align 4
  %v27_b4ac = load i32, i32* @lr, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  %v4_b4c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 116) to i32*), align 4
  store i32 %v4_b4c0, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_b4cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 72) to i32*), align 4
  store i32 %v4_b4cc, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_b4c0, i32* %r2.global-to-local, align 4
  %v2_b4d8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_b4d8, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  %v4_b4e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  store i32 %v4_b4e4, i32* %ip.global-to-local, align 4
  store i32 46320, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_b4e4)
  %v0_b4f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b4f0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r1, align 4
  %v4_b4fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 16) to i32*), align 4
  store i32 %v4_b4fc, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_b508.133 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_b4fc)
  %v0_b508 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_b508, -32
  br i1 %tmp, label %dec_label_pc_b52c, label %dec_label_pc_b510

dec_label_pc_b510:                                ; preds = %entry
  store i32 93672, i32* %r2.global-to-local, align 4
  %v0_b514 = call i32 @__aeabi_read_tp()
  store i32 %v0_b514, i32* %r0.global-to-local, align 4
  %v3_b518 = load i16, i16* @global_var_22308.76, align 2
  %v4_b518 = sext i16 %v3_b518 to i32
  store i32 %v4_b518, i32* @r2, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_b524 = add i32 %v4_b518, %v0_b514
  %v4_b524 = inttoptr i32 %v3_b524 to i32*
  store i32 12, i32* %v4_b524, align 4
  br label %dec_label_pc_bdb0

dec_label_pc_b52c:                                ; preds = %entry
  %v1_b52c = add i32 %v0_b508, 11
  store i32 %v1_b52c, i32* %r0.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v2_b538 = icmp ugt i32 %v1_b52c, 14
  %v7_b538 = icmp eq i32 %v1_b52c, 15
  %v2_b53c = xor i1 %v7_b538, true
  %v3_b53c = and i1 %v2_b538, %v2_b53c
  br i1 %v3_b53c, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_b52c
  %v5_b53c = and i32 %v1_b52c, -8
  store i32 %v5_b53c, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_b52c, %bb
  %v4_b540 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_b540, i32* @r0, align 4
  %v1_b544 = inttoptr i32 %v4_b540 to i32*
  %v2_b544 = load i32, i32* %v1_b544, align 4
  store i32 %v2_b544, i32* @r4, align 4
  %v2_b548 = xor i1 %v2_b538, true
  %v3_b548 = or i1 %v7_b538, %v2_b548
  br i1 %v3_b548, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_b54c = urem i32 %v2_b544, 2
  %v2_b54c = icmp eq i32 %v1_b54c, 0
  br i1 %v2_b54c, label %dec_label_pc_b554, label %dec_label_pc_b564

dec_label_pc_b554:                                ; preds = %bb140
  %v2_b554 = icmp eq i32 %v2_b544, 0
  br i1 %v2_b554, label %dec_label_pc_b55c, label %dec_label_pc_b940

dec_label_pc_b55c:                                ; preds = %dec_label_pc_b554
  %v0_b55c = call i32 @__malloc_consolidate()
  store i32 %v0_b55c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b940

dec_label_pc_b564:                                ; preds = %bb140
  %v0_b564 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_b564, %v2_b544
  br i1 %tmp201, label %dec_label_pc_b58c, label %dec_label_pc_b56c

dec_label_pc_b56c:                                ; preds = %dec_label_pc_b564
  %v1_b56c = add i32 %v4_b540, -4
  store i32 %v1_b56c, i32* %r1.global-to-local, align 4
  %v3_b570 = udiv i32 %v0_b564, 8
  store i32 %v3_b570, i32* %r2.global-to-local, align 4
  %v4_b574 = mul nuw i32 %v3_b570, 4
  %v5_b574 = add i32 %v4_b574, %v1_b56c
  %v6_b574 = inttoptr i32 %v5_b574 to i32*
  %v7_b574 = load i32, i32* %v6_b574, align 4
  store i32 %v7_b574, i32* %r0.global-to-local, align 4
  %v2_b578 = icmp eq i32 %v7_b574, 0
  br i1 %v2_b578, label %dec_label_pc_b58c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b56c
  %v2_b57c = add i32 %v7_b574, 8
  %v3_b57c = inttoptr i32 %v2_b57c to i32*
  %v4_b57c = load i32, i32* %v3_b57c, align 4
  store i32 %v4_b57c, i32* %r3.global-to-local, align 4
  store i32 %v2_b57c, i32* %r0.global-to-local, align 4
  store i32 %v2_b57c, i32* %r4.global-to-local, align 4
  store i32 %v4_b57c, i32* %v6_b574, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b58c:                                ; preds = %dec_label_pc_b56c, %dec_label_pc_b564
  %tmp202 = icmp ugt i32 %v0_b564, 255
  br i1 %tmp202, label %dec_label_pc_b5dc, label %dec_label_pc_b594

dec_label_pc_b594:                                ; preds = %dec_label_pc_b58c
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_b59c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  %v3_b5a0 = udiv i32 %v0_b564, 8
  store i32 %v3_b5a0, i32* @r7, align 4
  %v4_b5a4 = mul nuw i32 %v3_b5a0, 8
  %v5_b5a4 = add i32 %v4_b59c, %v4_b5a4
  store i32 %v5_b5a4, i32* %r3.global-to-local, align 4
  %v1_b5a8 = add i32 %v5_b5a4, 44
  store i32 %v1_b5a8, i32* %ip.global-to-local, align 4
  %v1_b5ac = add i32 %v5_b5a4, 56
  %v2_b5ac = inttoptr i32 %v1_b5ac to i32*
  %v3_b5ac = load i32, i32* %v2_b5ac, align 4
  store i32 %v3_b5ac, i32* %r0.global-to-local, align 4
  %v9_b5b0 = icmp eq i32 %v3_b5ac, %v1_b5a8
  br i1 %v9_b5b0, label %dec_label_pc_b73c, label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b594
  %v2_b5b8 = add i32 %v3_b5ac, %v0_b564
  store i32 %v2_b5b8, i32* %r3.global-to-local, align 4
  %v1_b5bc = add i32 %v2_b5b8, 4
  %v2_b5bc = inttoptr i32 %v1_b5bc to i32*
  %v3_b5bc = load i32, i32* %v2_b5bc, align 4
  store i32 %v3_b5bc, i32* %r2.global-to-local, align 4
  %v1_b5c0 = add i32 %v3_b5ac, 12
  %v2_b5c0 = inttoptr i32 %v1_b5c0 to i32*
  %v3_b5c0 = load i32, i32* %v2_b5c0, align 4
  store i32 %v3_b5c0, i32* %r1.global-to-local, align 4
  %v1_b5c4 = or i32 %v3_b5bc, 1
  store i32 %v1_b5c4, i32* %r2.global-to-local, align 4
  %v1_b5c8 = add i32 %v3_b5ac, 8
  store i32 %v1_b5c8, i32* %r4.global-to-local, align 4
  store i32 %v1_b5c4, i32* %v2_b5bc, align 4
  %v0_b5d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b5d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_b5d0 = add i32 %v1_b5d0, 8
  %v3_b5d0 = inttoptr i32 %v2_b5d0 to i32*
  store i32 %v0_b5d0, i32* %v3_b5d0, align 4
  %v0_b5d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b5d4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5d4 = add i32 %v1_b5d4, 12
  %v3_b5d4 = inttoptr i32 %v2_b5d4 to i32*
  store i32 %v0_b5d4, i32* %v3_b5d4, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b58c
  store i32 %v0_b564, i32* %r0.global-to-local, align 4
  %v1_b5e0 = call i32 @__malloc_largebin_index(i32 %v0_b564)
  store i32 %v1_b5e0, i32* %r0.global-to-local, align 4
  %v0_b5e4 = load i32, i32* @r4, align 4
  %v1_b5e4 = and i32 %v0_b5e4, 2
  %v2_b5e4 = icmp eq i32 %v1_b5e4, 0
  store i32 %v1_b5e0, i32* @r7, align 4
  br i1 %v2_b5e4, label %dec_label_pc_b73c, label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5dc
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  %v4_b5f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_b5f8, i32* @r0, align 4
  %v0_b5fc = call i32 @__malloc_consolidate()
  store i32 %v0_b5fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b73c

dec_label_pc_b604:                                ; preds = %dec_label_pc_b750
  %v1_b604 = add i32 %v3_b750, 4
  %v2_b604 = inttoptr i32 %v1_b604 to i32*
  %v3_b604 = load i32, i32* %v2_b604, align 4
  store i32 %v3_b604, i32* %r3.global-to-local, align 4
  %v0_b608 = load i32, i32* @sl, align 4
  %v1_b60c = and i32 %v3_b604, -4
  store i32 %v1_b60c, i32* %r4.global-to-local, align 4
  %v1_b610 = add i32 %v3_b750, 12
  %v2_b610 = inttoptr i32 %v1_b610 to i32*
  %v3_b610 = load i32, i32* %v2_b610, align 4
  store i32 %v3_b610, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_b608, 255
  br i1 %tmp203, label %dec_label_pc_b66c, label %dec_label_pc_b618

dec_label_pc_b618:                                ; preds = %dec_label_pc_b604
  %v9_b618 = icmp eq i32 %v3_b610, %v0_b670
  br i1 %v9_b618, label %dec_label_pc_b620, label %dec_label_pc_b66c

dec_label_pc_b620:                                ; preds = %dec_label_pc_b618
  %v0_b620 = load i32, i32* @sb, align 4
  %v1_b620 = add i32 %v0_b620, 48
  %v2_b620 = inttoptr i32 %v1_b620 to i32*
  %v3_b620 = load i32, i32* %v2_b620, align 4
  store i32 %v3_b620, i32* %r3.global-to-local, align 4
  %v9_b624 = icmp eq i32 %v3_b750, %v3_b620
  br i1 %v9_b624, label %dec_label_pc_b62c, label %dec_label_pc_b66c

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b620
  %v1_b62c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_b60c, %v1_b62c
  br i1 %tmp204, label %dec_label_pc_b634, label %dec_label_pc_b66c

dec_label_pc_b634:                                ; preds = %dec_label_pc_b62c
  %v2_b634 = sub i32 %v1_b60c, %v0_b608
  store i32 %v2_b634, i32* %r2.global-to-local, align 4
  %v2_b638 = add i32 %v0_b608, %v3_b750
  store i32 %v2_b638, i32* %r3.global-to-local, align 4
  %v1_b63c = or i32 %v0_b608, 1
  store i32 %v1_b63c, i32* %r0.global-to-local, align 4
  %v1_b640 = or i32 %v2_b634, 1
  store i32 %v1_b640, i32* %r1.global-to-local, align 4
  %v1_b644 = add i32 %v3_b750, 8
  store i32 %v1_b644, i32* %r4.global-to-local, align 4
  %v2_b648 = add i32 %v0_b670, 8
  %v3_b648 = inttoptr i32 %v2_b648 to i32*
  store i32 %v2_b638, i32* %v3_b648, align 4
  %v0_b64c = load i32, i32* %r3.global-to-local, align 4
  %v1_b64c = load i32, i32* %ip.global-to-local, align 4
  %v2_b64c = add i32 %v1_b64c, 12
  %v3_b64c = inttoptr i32 %v2_b64c to i32*
  store i32 %v0_b64c, i32* %v3_b64c, align 4
  %v0_b650 = load i32, i32* %r0.global-to-local, align 4
  %v1_b650 = load i32, i32* @r6, align 4
  %v2_b650 = add i32 %v1_b650, 4
  %v3_b650 = inttoptr i32 %v2_b650 to i32*
  store i32 %v0_b650, i32* %v3_b650, align 4
  %v0_b654 = load i32, i32* %r3.global-to-local, align 4
  %v1_b654 = load i32, i32* @sb, align 4
  %v2_b654 = add i32 %v1_b654, 48
  %v3_b654 = inttoptr i32 %v2_b654 to i32*
  store i32 %v0_b654, i32* %v3_b654, align 4
  %v0_b658 = load i32, i32* %r2.global-to-local, align 4
  %v1_b658 = load i32, i32* %r3.global-to-local, align 4
  %v3_b658 = add i32 %v1_b658, %v0_b658
  %v4_b658 = inttoptr i32 %v3_b658 to i32*
  store i32 %v0_b658, i32* %v4_b658, align 4
  %v0_b65c = load i32, i32* %r1.global-to-local, align 4
  %v1_b65c = load i32, i32* %r3.global-to-local, align 4
  %v2_b65c = add i32 %v1_b65c, 4
  %v3_b65c = inttoptr i32 %v2_b65c to i32*
  store i32 %v0_b65c, i32* %v3_b65c, align 4
  %v0_b660 = load i32, i32* %ip.global-to-local, align 4
  %v1_b660 = load i32, i32* %r3.global-to-local, align 4
  %v2_b660 = add i32 %v1_b660, 12
  %v3_b660 = inttoptr i32 %v2_b660 to i32*
  store i32 %v0_b660, i32* %v3_b660, align 4
  %v0_b664 = load i32, i32* %ip.global-to-local, align 4
  %v1_b664 = load i32, i32* %r3.global-to-local, align 4
  %v2_b664 = add i32 %v1_b664, 8
  %v3_b664 = inttoptr i32 %v2_b664 to i32*
  store i32 %v0_b664, i32* %v3_b664, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b66c:                                ; preds = %dec_label_pc_b62c, %dec_label_pc_b620, %dec_label_pc_b618, %dec_label_pc_b604
  %v9_b66c = icmp eq i32 %v1_b60c, %v0_b608
  %v2_b670 = add i32 %v3_b610, 8
  %v3_b670 = inttoptr i32 %v2_b670 to i32*
  store i32 %v0_b670, i32* %v3_b670, align 4
  %v0_b674 = load i32, i32* %ip.global-to-local, align 4
  %v1_b674 = load i32, i32* %r5.global-to-local, align 4
  %v2_b674 = add i32 %v1_b674, 12
  %v3_b674 = inttoptr i32 %v2_b674 to i32*
  store i32 %v0_b674, i32* %v3_b674, align 4
  br i1 %v9_b66c, label %dec_label_pc_b7cc.loopexit, label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b66c
  %v0_b688 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_b688, 255
  br i1 %tmp205, label %dec_label_pc_b6ac, label %dec_label_pc_b690

dec_label_pc_b690:                                ; preds = %dec_label_pc_b688
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v1_b694 = load i32, i32* %r8.global-to-local, align 4
  %v2_b694 = add i32 %v1_b694, ptrtoint (i32* @global_var_222a8.80 to i32)
  %v3_b694 = inttoptr i32 %v2_b694 to i32*
  %v4_b694 = load i32, i32* %v3_b694, align 4
  %v3_b698 = udiv i32 %v0_b688, 8
  store i32 %v3_b698, i32* %r0.global-to-local, align 4
  %v4_b69c = mul nuw i32 %v3_b698, 8
  %v5_b69c = add i32 %v4_b694, %v4_b69c
  store i32 %v5_b69c, i32* %r3.global-to-local, align 4
  %v1_b6a0 = add i32 %v5_b69c, 44
  store i32 %v1_b6a0, i32* %ip.global-to-local, align 4
  %v1_b6a4 = add i32 %v5_b69c, 52
  %v2_b6a4 = inttoptr i32 %v1_b6a4 to i32*
  %v3_b6a4 = load i32, i32* %v2_b6a4, align 4
  store i32 %v3_b6a4, i32* @lr, align 4
  br label %dec_label_pc_b704

dec_label_pc_b6ac:                                ; preds = %dec_label_pc_b688
  store i32 %v0_b688, i32* %r0.global-to-local, align 4
  %v1_b6b0 = call i32 @__malloc_largebin_index(i32 %v0_b688)
  store i32 %v1_b6b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  %v1_b6b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_b6b8 = add i32 %v1_b6b8, ptrtoint (i32* @global_var_222a8.80 to i32)
  %v3_b6b8 = inttoptr i32 %v2_b6b8 to i32*
  %v4_b6b8 = load i32, i32* %v3_b6b8, align 4
  %v4_b6bc = mul i32 %v1_b6b0, 8
  %v5_b6bc = add i32 %v4_b6b8, %v4_b6bc
  store i32 %v5_b6bc, i32* %r3.global-to-local, align 4
  %v1_b6c0 = add i32 %v5_b6bc, 44
  store i32 %v1_b6c0, i32* %ip.global-to-local, align 4
  %v1_b6c4 = add i32 %v5_b6bc, 52
  %v2_b6c4 = inttoptr i32 %v1_b6c4 to i32*
  %v3_b6c4 = load i32, i32* %v2_b6c4, align 4
  store i32 %v3_b6c4, i32* @lr, align 4
  %v9_b6c8 = icmp eq i32 %v3_b6c4, %v1_b6c0
  br i1 %v9_b6c8, label %dec_label_pc_b704, label %dec_label_pc_b6d0

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b6ac
  %v1_b6d0 = add i32 %v5_b6bc, 56
  %v2_b6d0 = inttoptr i32 %v1_b6d0 to i32*
  %v3_b6d0 = load i32, i32* %v2_b6d0, align 4
  store i32 %v3_b6d0, i32* %r1.global-to-local, align 4
  %v1_b6d4 = add i32 %v3_b6d0, 4
  %v2_b6d4 = inttoptr i32 %v1_b6d4 to i32*
  %v3_b6d4 = load i32, i32* %v2_b6d4, align 4
  store i32 %v3_b6d4, i32* %r3.global-to-local, align 4
  %v0_b6d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b6d8 = icmp ult i32 %v0_b6d8, %v3_b6d4
  br i1 %v3_b6d8, label %.thread, label %dec_label_pc_b6f4.preheader

.thread:                                          ; preds = %dec_label_pc_b6d0
  store i32 %v1_b6c0, i32* @lr, align 4
  store i32 %v3_b6d0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b704

dec_label_pc_b6f4.preheader:                      ; preds = %dec_label_pc_b6d0
  %v2_b6e0 = or i32 %v0_b6d8, 1
  store i32 %v2_b6e0, i32* %r2.global-to-local, align 4
  %v1_b6f4179 = add i32 %v3_b6c4, 4
  %v2_b6f4180 = inttoptr i32 %v1_b6f4179 to i32*
  %v3_b6f4181 = load i32, i32* %v2_b6f4180, align 4
  store i32 %v3_b6f4181, i32* %r3.global-to-local, align 4
  %v3_b6f8183 = icmp ult i32 %v2_b6e0, %v3_b6f4181
  br i1 %v3_b6f8183, label %dec_label_pc_b6f0, label %dec_label_pc_b700

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b6f4.preheader, %dec_label_pc_b6f0
  %v0_b700184 = phi i32 [ %v3_b6f0, %dec_label_pc_b6f0 ], [ %v3_b6c4, %dec_label_pc_b6f4.preheader ]
  %v1_b6f0 = add i32 %v0_b700184, 8
  %v2_b6f0 = inttoptr i32 %v1_b6f0 to i32*
  %v3_b6f0 = load i32, i32* %v2_b6f0, align 4
  store i32 %v3_b6f0, i32* @lr, align 4
  %v1_b6f4 = add i32 %v3_b6f0, 4
  %v2_b6f4 = inttoptr i32 %v1_b6f4 to i32*
  %v3_b6f4 = load i32, i32* %v2_b6f4, align 4
  store i32 %v3_b6f4, i32* %r3.global-to-local, align 4
  %v3_b6f8 = icmp ult i32 %v2_b6e0, %v3_b6f4
  br i1 %v3_b6f8, label %dec_label_pc_b6f0, label %dec_label_pc_b700

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b6f4.preheader
  %v0_b700.lcssa = phi i32 [ %v3_b6c4, %dec_label_pc_b6f4.preheader ], [ %v3_b6f0, %dec_label_pc_b6f0 ]
  %v1_b700 = add i32 %v0_b700.lcssa, 12
  %v2_b700 = inttoptr i32 %v1_b700 to i32*
  %v3_b700 = load i32, i32* %v2_b700, align 4
  store i32 %v3_b700, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b704

dec_label_pc_b704:                                ; preds = %.thread, %dec_label_pc_b6ac, %dec_label_pc_b690, %dec_label_pc_b700
  %v0_b724 = phi i32 [ %v1_b6c0, %dec_label_pc_b6ac ], [ %v1_b6a0, %dec_label_pc_b690 ], [ %v3_b700, %dec_label_pc_b700 ], [ %v3_b6d0, %.thread ]
  %v0_b718 = phi i32 [ %v1_b6b0, %dec_label_pc_b6ac ], [ %v3_b698, %dec_label_pc_b690 ], [ %v1_b6b0, %dec_label_pc_b700 ], [ %v1_b6b0, %.thread ]
  %v1_b708 = phi i32 [ %v1_b6b8, %dec_label_pc_b6ac ], [ %v1_b694, %dec_label_pc_b690 ], [ %v1_b6b8, %dec_label_pc_b700 ], [ %v1_b6b8, %.thread ]
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v2_b708 = add i32 %v1_b708, ptrtoint (i32* @global_var_222a8.80 to i32)
  %v3_b708 = inttoptr i32 %v2_b708 to i32*
  %v4_b708 = load i32, i32* %v3_b708, align 4
  %v3_b70c = sdiv i32 %v0_b718, 32
  store i32 %v3_b70c, i32* %r3.global-to-local, align 4
  %v4_b710 = mul nsw i32 %v3_b70c, 4
  %v5_b710 = add i32 %v4_b708, %v4_b710
  store i32 %v5_b710, i32* %r1.global-to-local, align 4
  %v1_b714 = add i32 %v5_b710, 820
  %v2_b714 = inttoptr i32 %v1_b714 to i32*
  %v3_b714 = load i32, i32* %v2_b714, align 4
  %v1_b718 = urem i32 %v0_b718, 32
  store i32 %v1_b718, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_b720 = shl i32 1, %v1_b718
  %v8_b720 = or i32 %v3_b714, %v7_b720
  store i32 %v8_b720, i32* %r3.global-to-local, align 4
  %v1_b724 = load i32, i32* @r6, align 4
  %v2_b724 = add i32 %v1_b724, 12
  %v3_b724 = inttoptr i32 %v2_b724 to i32*
  store i32 %v0_b724, i32* %v3_b724, align 4
  %v0_b728 = load i32, i32* @lr, align 4
  %v1_b728 = load i32, i32* @r6, align 4
  %v2_b728 = add i32 %v1_b728, 8
  %v3_b728 = inttoptr i32 %v2_b728 to i32*
  store i32 %v0_b728, i32* %v3_b728, align 4
  %v0_b72c = load i32, i32* %r3.global-to-local, align 4
  %v1_b72c = load i32, i32* %r1.global-to-local, align 4
  %v2_b72c = add i32 %v1_b72c, 820
  %v3_b72c = inttoptr i32 %v2_b72c to i32*
  store i32 %v0_b72c, i32* %v3_b72c, align 4
  %v0_b730 = load i32, i32* @r6, align 4
  %v1_b730 = load i32, i32* @lr, align 4
  %v2_b730 = add i32 %v1_b730, 12
  %v3_b730 = inttoptr i32 %v2_b730 to i32*
  store i32 %v0_b730, i32* %v3_b730, align 4
  %v0_b734 = load i32, i32* @r6, align 4
  %v1_b734 = load i32, i32* %ip.global-to-local, align 4
  %v2_b734 = add i32 %v1_b734, 8
  %v3_b734 = inttoptr i32 %v2_b734 to i32*
  store i32 %v0_b734, i32* %v3_b734, align 4
  %v0_b750.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_b750

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b594, %dec_label_pc_b5f0
  store i32 68, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  %v4_b744 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_b744, i32* @sb, align 4
  %v0_b748 = load i32, i32* @sl, align 4
  %v1_b748 = add i32 %v0_b748, 16
  store i32 %v1_b748, i32* @fp, align 4
  %v1_b74c = add i32 %v4_b744, 52
  store i32 %v1_b74c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_b750

dec_label_pc_b750:                                ; preds = %dec_label_pc_b704, %dec_label_pc_b73c
  %v0_b670 = phi i32 [ %v0_b750.pre, %dec_label_pc_b704 ], [ %v1_b74c, %dec_label_pc_b73c ]
  %v1_b750 = add i32 %v0_b670, 12
  %v2_b750 = inttoptr i32 %v1_b750 to i32*
  %v3_b750 = load i32, i32* %v2_b750, align 4
  store i32 %v3_b750, i32* @r6, align 4
  %v9_b754 = icmp eq i32 %v3_b750, %v0_b670
  br i1 %v9_b754, label %dec_label_pc_b75c, label %dec_label_pc_b604

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b750
  %v0_b75c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_b75c, 256
  %v0_b814.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_b75c.dec_label_pc_b814_crit_edge, label %dec_label_pc_b764

dec_label_pc_b75c.dec_label_pc_b814_crit_edge:    ; preds = %dec_label_pc_b75c
  %.pre200 = mul i32 %v0_b814.pre, 8
  br label %dec_label_pc_b814

dec_label_pc_b764:                                ; preds = %dec_label_pc_b75c
  %v4_b764 = mul i32 %v0_b814.pre, 8
  %v5_b764 = add i32 %v4_b764, %v0_b670
  store i32 %v5_b764, i32* %r3.global-to-local, align 4
  %v1_b768 = add i32 %v5_b764, -8
  store i32 %v1_b768, i32* %r1.global-to-local, align 4
  %v1_b76c = add i32 %v5_b764, 4
  %v2_b76c = inttoptr i32 %v1_b76c to i32*
  %storemerge.pre = load i32, i32* %v2_b76c, align 4
  br label %dec_label_pc_b80c

dec_label_pc_b774:                                ; preds = %dec_label_pc_b80c
  %v1_b774 = add i32 %v1_b79c, 4
  %v2_b774 = inttoptr i32 %v1_b774 to i32*
  %v3_b774 = load i32, i32* %v2_b774, align 4
  store i32 %v3_b774, i32* %r3.global-to-local, align 4
  %v1_b778 = and i32 %v3_b774, -4
  store i32 %v1_b778, i32* %r2.global-to-local, align 4
  %v3_b77c = icmp ult i32 %v1_b778, %v0_b75c
  %v1_b780 = add i32 %v1_b79c, 12
  %v2_b780 = inttoptr i32 %v1_b780 to i32*
  %v3_b780 = load i32, i32* %v2_b780, align 4
  store i32 %v3_b780, i32* %r0.global-to-local, align 4
  br i1 %v3_b77c, label %dec_label_pc_b80c, label %dec_label_pc_b788

dec_label_pc_b788:                                ; preds = %dec_label_pc_b774
  %v1_b788 = add i32 %v1_b79c, 8
  %v2_b788 = inttoptr i32 %v1_b788 to i32*
  %v3_b788 = load i32, i32* %v2_b788, align 4
  store i32 %v3_b788, i32* %r1.global-to-local, align 4
  %v1_b78c = add i32 %v3_b788, 12
  %v2_b78c = inttoptr i32 %v1_b78c to i32*
  %v3_b78c = load i32, i32* %v2_b78c, align 4
  store i32 %v3_b78c, i32* %r3.global-to-local, align 4
  %v9_b790 = icmp eq i32 %v3_b78c, %v1_b79c
  br i1 %v9_b790, label %dec_label_pc_b798, label %dec_label_pc_b7a4

dec_label_pc_b798:                                ; preds = %dec_label_pc_b788
  %v1_b798 = add i32 %v3_b780, 8
  %v2_b798 = inttoptr i32 %v1_b798 to i32*
  %v3_b798 = load i32, i32* %v2_b798, align 4
  store i32 %v3_b798, i32* %r3.global-to-local, align 4
  %v9_b79c = icmp eq i32 %v3_b798, %v1_b79c
  br i1 %v9_b79c, label %dec_label_pc_b7a8, label %dec_label_pc_b7a4

dec_label_pc_b7a4:                                ; preds = %dec_label_pc_b788, %dec_label_pc_b798
  %v0_b7a4 = call i32 @abort()
  store i32 %v0_b7a4, i32* %r0.global-to-local, align 4
  %v0_b7a8.pre = load i32, i32* @sl, align 4
  %v1_b7a8.pre = load i32, i32* @r2, align 4
  %v0_b7b0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_b7a8

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b798, %dec_label_pc_b7a4
  %v1_b7b0 = phi i32 [ %v3_b780, %dec_label_pc_b798 ], [ %v0_b7a4, %dec_label_pc_b7a4 ]
  %v0_b7b0 = phi i32 [ %v3_b788, %dec_label_pc_b798 ], [ %v0_b7b0.pre, %dec_label_pc_b7a4 ]
  %v1_b7a8 = phi i32 [ %v1_b778, %dec_label_pc_b798 ], [ %v1_b7a8.pre, %dec_label_pc_b7a4 ]
  %v0_b7a8 = phi i32 [ %v0_b75c, %dec_label_pc_b798 ], [ %v0_b7a8.pre, %dec_label_pc_b7a4 ]
  %v2_b7a8 = sub i32 %v1_b7a8, %v0_b7a8
  store i32 %v2_b7a8, i32* %lr.global-to-local, align 4
  %v2_b7b0 = add i32 %v1_b7b0, 8
  %v3_b7b0 = inttoptr i32 %v2_b7b0 to i32*
  store i32 %v0_b7b0, i32* %v3_b7b0, align 4
  %v0_b7b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_b7b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_b7b4 = add i32 %v1_b7b4, 12
  %v3_b7b4 = inttoptr i32 %v2_b7b4 to i32*
  store i32 %v0_b7b4, i32* %v3_b7b4, align 4
  %v0_b7b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b7b8 = add i32 %v0_b7b8, 8
  store i32 %v1_b7b8, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_b7a8, 15
  br i1 %tmp207, label %dec_label_pc_b7d8, label %dec_label_pc_b7c0

dec_label_pc_b7c0:                                ; preds = %dec_label_pc_b7a8
  %v1_b7c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b7c0 = add i32 %v1_b7c0, %v0_b7b8
  store i32 %v2_b7c0, i32* %r2.global-to-local, align 4
  %v1_b7c4 = add i32 %v2_b7c0, 4
  %v2_b7c4 = inttoptr i32 %v1_b7c4 to i32*
  %v3_b7c4 = load i32, i32* %v2_b7c4, align 4
  store i32 %v3_b7c4, i32* %r3.global-to-local, align 4
  store i32 %v1_b7b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b7cc

dec_label_pc_b7cc.loopexit:                       ; preds = %dec_label_pc_b66c
  %v1_b678 = load i32, i32* @r6, align 4
  %v2_b678 = load i32, i32* @sl, align 4
  %v3_b678 = add i32 %v2_b678, %v1_b678
  store i32 %v3_b678, i32* %r2.global-to-local, align 4
  %v2_b67c = add i32 %v3_b678, 4
  %v3_b67c = inttoptr i32 %v2_b67c to i32*
  %v4_b67c = load i32, i32* %v3_b67c, align 4
  store i32 %v4_b67c, i32* %r3.global-to-local, align 4
  %v2_b680 = add i32 %v1_b678, 8
  store i32 %v2_b680, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b7cc

dec_label_pc_b7cc:                                ; preds = %.dec_label_pc_b7cc_crit_edge, %dec_label_pc_b7cc.loopexit, %dec_label_pc_b7c0
  %v1_b7d0 = phi i32 [ %v4_b8f4, %.dec_label_pc_b7cc_crit_edge ], [ %v3_b678, %dec_label_pc_b7cc.loopexit ], [ %v2_b7c0, %dec_label_pc_b7c0 ]
  %v0_b7cc = phi i32 [ %v7_b8f4, %.dec_label_pc_b7cc_crit_edge ], [ %v4_b67c, %dec_label_pc_b7cc.loopexit ], [ %v3_b7c4, %dec_label_pc_b7c0 ]
  %v1_b7cc = or i32 %v0_b7cc, 1
  store i32 %v1_b7cc, i32* %r3.global-to-local, align 4
  %v2_b7d0 = add i32 %v1_b7d0, 4
  %v3_b7d0 = inttoptr i32 %v2_b7d0 to i32*
  store i32 %v1_b7cc, i32* %v3_b7d0, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b7d8:                                ; preds = %dec_label_pc_b7a8
  %v1_b7d8 = load i32, i32* @sl, align 4
  %v2_b7d8 = add i32 %v1_b7d8, %v0_b7b8
  store i32 %v2_b7d8, i32* %r2.global-to-local, align 4
  %v1_b7dc = or i32 %v1_b7d8, 1
  store i32 %v1_b7dc, i32* %r3.global-to-local, align 4
  %v0_b7e0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7e0 = or i32 %v0_b7e0, 1
  store i32 %v1_b7e0, i32* %r1.global-to-local, align 4
  store i32 %v1_b7b8, i32* %r4.global-to-local, align 4
  %v2_b7e8 = add i32 %v0_b7b8, 4
  %v3_b7e8 = inttoptr i32 %v2_b7e8 to i32*
  store i32 %v1_b7dc, i32* %v3_b7e8, align 4
  %v0_b7ec = load i32, i32* %r2.global-to-local, align 4
  %v1_b7ec = load i32, i32* @r6, align 4
  %v2_b7ec = add i32 %v1_b7ec, 8
  %v3_b7ec = inttoptr i32 %v2_b7ec to i32*
  store i32 %v0_b7ec, i32* %v3_b7ec, align 4
  %v0_b7f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b7f0 = load i32, i32* @r6, align 4
  %v2_b7f0 = add i32 %v1_b7f0, 12
  %v3_b7f0 = inttoptr i32 %v2_b7f0 to i32*
  store i32 %v0_b7f0, i32* %v3_b7f0, align 4
  %v0_b7f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7f4 = load i32, i32* %r2.global-to-local, align 4
  %v3_b7f4 = add i32 %v1_b7f4, %v0_b7f4
  %v4_b7f4 = inttoptr i32 %v3_b7f4 to i32*
  store i32 %v0_b7f4, i32* %v4_b7f4, align 4
  %v0_b7f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b7f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_b7f8 = add i32 %v1_b7f8, 4
  %v3_b7f8 = inttoptr i32 %v2_b7f8 to i32*
  store i32 %v0_b7f8, i32* %v3_b7f8, align 4
  %v0_b7fc = load i32, i32* @r6, align 4
  %v1_b7fc = load i32, i32* %r2.global-to-local, align 4
  %v2_b7fc = add i32 %v1_b7fc, 12
  %v3_b7fc = inttoptr i32 %v2_b7fc to i32*
  store i32 %v0_b7fc, i32* %v3_b7fc, align 4
  %v0_b800 = load i32, i32* @r6, align 4
  %v1_b800 = load i32, i32* %r2.global-to-local, align 4
  %v2_b800 = add i32 %v1_b800, 8
  %v3_b800 = inttoptr i32 %v2_b800 to i32*
  store i32 %v0_b800, i32* %v3_b800, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b774, %dec_label_pc_b764
  %v1_b79c = phi i32 [ %storemerge.pre, %dec_label_pc_b764 ], [ %v3_b780, %dec_label_pc_b774 ]
  store i32 %v1_b79c, i32* %ip.global-to-local, align 4
  %v9_b80c = icmp eq i32 %v1_b79c, %v1_b768
  br i1 %v9_b80c, label %dec_label_pc_b814.loopexit, label %dec_label_pc_b774

dec_label_pc_b814.loopexit:                       ; preds = %dec_label_pc_b80c
  br label %dec_label_pc_b814

dec_label_pc_b814:                                ; preds = %dec_label_pc_b75c.dec_label_pc_b814_crit_edge, %dec_label_pc_b814.loopexit
  %v4_b844.pre-phi = phi i32 [ %.pre200, %dec_label_pc_b75c.dec_label_pc_b814_crit_edge ], [ %v4_b764, %dec_label_pc_b814.loopexit ]
  %v1_b814 = add i32 %v0_b814.pre, 1
  store i32 %v1_b814, i32* %r2.global-to-local, align 4
  %v1_b818 = urem i32 %v1_b814, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r0.global-to-local, align 4
  %v6_b824 = shl i32 1, %v1_b818
  store i32 %v6_b824, i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_b82c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_b82c, i32* %r3.global-to-local, align 4
  %v3_b830 = udiv i32 %v1_b814, 32
  store i32 %v3_b830, i32* @r5, align 4
  %v4_b834 = mul nuw nsw i32 %v3_b830, 4
  %v5_b834 = add i32 %v4_b82c, %v4_b834
  store i32 %v5_b834, i32* %r2.global-to-local, align 4
  %v1_b838 = add i32 %v5_b834, 820
  %v2_b838 = inttoptr i32 %v1_b838 to i32*
  %v3_b838 = load i32, i32* %v2_b838, align 4
  store i32 %v3_b838, i32* @r4, align 4
  %v1_b83c = add i32 %v4_b82c, 52
  store i32 %v1_b83c, i32* %r3.global-to-local, align 4
  store i32 68, i32* @r8, align 4
  %v5_b844 = add i32 %v1_b83c, %v4_b844.pre-phi
  store i32 %v5_b844, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b848

dec_label_pc_b848:                                ; preds = %dec_label_pc_b8b0, %dec_label_pc_b814
  %v1_b850 = phi i32 [ %v1_b850.pre, %dec_label_pc_b8b0 ], [ %v3_b838, %dec_label_pc_b814 ]
  %v0_b850 = phi i32 [ %v0_b848.pre, %dec_label_pc_b8b0 ], [ %v6_b824, %dec_label_pc_b814 ]
  %v1_b848 = sub i32 1, %v0_b850
  %v2_b848 = icmp ult i32 %v0_b850, 2
  %v1_b848. = select i1 %v2_b848, i32 %v1_b848, i32 0
  store i32 %v1_b848., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_b850, %v1_b850
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_b848
  %v5_b854 = or i32 %v1_b848., 1
  store i32 %v5_b854, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b860.preheader

bb142:                                            ; preds = %dec_label_pc_b848
  %v2_b858 = icmp eq i32 %v1_b848., 0
  br i1 %v2_b858, label %.dec_label_pc_b89c.preheader_crit_edge, label %dec_label_pc_b860.preheader

.dec_label_pc_b89c.preheader_crit_edge:           ; preds = %bb142
  %v0_b89454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b89c.preheader

dec_label_pc_b860.preheader:                      ; preds = %bb142, %.thread12
  %v0_b860.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b860.preheader, %dec_label_pc_b86c
  %v0_b860 = phi i32 [ %v0_b860.pre, %dec_label_pc_b860.preheader ], [ %v1_b860, %dec_label_pc_b86c ]
  %v1_b860 = add i32 %v0_b860, 1
  store i32 %v1_b860, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_b860, 2
  br i1 %tmp208, label %dec_label_pc_b940.loopexit, label %dec_label_pc_b86c

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b860
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r3.global-to-local, align 4
  %v1_b870 = load i32, i32* @r8, align 4
  %v2_b870 = add i32 %v1_b870, ptrtoint (i32* @global_var_222a8.80 to i32)
  %v3_b870 = inttoptr i32 %v2_b870 to i32*
  %v4_b870 = load i32, i32* %v3_b870, align 4
  store i32 %v4_b870, i32* %r2.global-to-local, align 4
  %v4_b874 = mul i32 %v1_b860, 4
  %v5_b874 = add i32 %v4_b870, %v4_b874
  store i32 %v5_b874, i32* %r3.global-to-local, align 4
  %v1_b878 = add i32 %v5_b874, 820
  %v2_b878 = inttoptr i32 %v1_b878 to i32*
  %v3_b878 = load i32, i32* %v2_b878, align 4
  store i32 %v3_b878, i32* @r4, align 4
  %v2_b87c = icmp eq i32 %v3_b878, 0
  br i1 %v2_b87c, label %dec_label_pc_b860, label %dec_label_pc_b884

dec_label_pc_b884:                                ; preds = %dec_label_pc_b86c
  %v4_b884 = mul i32 %v1_b860, 256
  %v5_b884 = add i32 %v4_b870, %v4_b884
  store i32 %v5_b884, i32* %r3.global-to-local, align 4
  %v1_b888 = add i32 %v5_b884, 44
  store i32 %v1_b888, i32* %r0.global-to-local, align 4
  %v0_b88c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_b88c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b89c.preheader

dec_label_pc_b89c.preheader:                      ; preds = %.dec_label_pc_b89c.preheader_crit_edge, %dec_label_pc_b884
  %v0_b89454 = phi i32 [ %v1_b888, %dec_label_pc_b884 ], [ %v0_b89454.pre, %.dec_label_pc_b89c.preheader_crit_edge ]
  %v0_b8b8 = phi i32 [ %v3_b878, %dec_label_pc_b884 ], [ %v1_b850, %.dec_label_pc_b89c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_b88c, %dec_label_pc_b884 ], [ %v0_b850, %.dec_label_pc_b89c.preheader_crit_edge ]
  %v2_b89c51 = and i32 %ip.promoted, %v0_b8b8
  %v4_b89c53 = icmp eq i32 %v2_b89c51, 0
  br i1 %v4_b89c53, label %dec_label_pc_b894, label %dec_label_pc_b8a4

dec_label_pc_b894:                                ; preds = %dec_label_pc_b89c.preheader, %dec_label_pc_b894
  %v2_b89856 = phi i32 [ %v2_b898, %dec_label_pc_b894 ], [ %ip.promoted, %dec_label_pc_b89c.preheader ]
  %v0_b89455 = phi i32 [ %v1_b894, %dec_label_pc_b894 ], [ %v0_b89454, %dec_label_pc_b89c.preheader ]
  %v1_b894 = add i32 %v0_b89455, 8
  %v2_b898 = mul i32 %v2_b89856, 2
  %v2_b89c = and i32 %v2_b898, %v0_b8b8
  %v4_b89c = icmp eq i32 %v2_b89c, 0
  br i1 %v4_b89c, label %dec_label_pc_b894, label %dec_label_pc_b89c.dec_label_pc_b8a4_crit_edge

dec_label_pc_b89c.dec_label_pc_b8a4_crit_edge:    ; preds = %dec_label_pc_b894
  store i32 %v1_b894, i32* %r0.global-to-local, align 4
  store i32 %v2_b898, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b8a4

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b89c.dec_label_pc_b8a4_crit_edge, %dec_label_pc_b89c.preheader
  %v0_b8c4 = phi i32 [ %v2_b898, %dec_label_pc_b89c.dec_label_pc_b8a4_crit_edge ], [ %ip.promoted, %dec_label_pc_b89c.preheader ]
  %v0_b8e8 = phi i32 [ %v1_b894, %dec_label_pc_b89c.dec_label_pc_b8a4_crit_edge ], [ %v0_b89454, %dec_label_pc_b89c.preheader ]
  %v1_b8a4 = add i32 %v0_b8e8, 12
  %v2_b8a4 = inttoptr i32 %v1_b8a4 to i32*
  %v3_b8a4 = load i32, i32* %v2_b8a4, align 4
  store i32 %v3_b8a4, i32* @lr, align 4
  %v9_b8a8 = icmp eq i32 %v3_b8a4, %v0_b8e8
  br i1 %v9_b8a8, label %dec_label_pc_b8b0, label %dec_label_pc_b8d0

dec_label_pc_b8b0:                                ; preds = %dec_label_pc_b8a4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r0.global-to-local, align 4
  %v1_b8b4 = load i32, i32* @r8, align 4
  %v2_b8b4 = add i32 %v1_b8b4, ptrtoint (i32* @global_var_222a8.80 to i32)
  %v3_b8b4 = inttoptr i32 %v2_b8b4 to i32*
  %v4_b8b4 = load i32, i32* %v3_b8b4, align 4
  %v2_b8b8 = sub i32 -1, %v0_b8c4
  %v3_b8b8 = and i32 %v0_b8b8, %v2_b8b8
  store i32 %v3_b8b8, i32* @r4, align 4
  %v1_b8bc = load i32, i32* @r5, align 4
  %v4_b8bc = mul i32 %v1_b8bc, 4
  %v5_b8bc = add i32 %v4_b8bc, %v4_b8b4
  store i32 %v5_b8bc, i32* %r3.global-to-local, align 4
  %v1_b8c0 = add i32 %v0_b8e8, 8
  store i32 %v1_b8c0, i32* %r0.global-to-local, align 4
  %v2_b8c4 = mul i32 %v0_b8c4, 2
  store i32 %v2_b8c4, i32* %ip.global-to-local, align 4
  %v2_b8c8 = add i32 %v5_b8bc, 820
  %v3_b8c8 = inttoptr i32 %v2_b8c8 to i32*
  store i32 %v3_b8b8, i32* %v3_b8c8, align 4
  %v0_b848.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_b850.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b848

dec_label_pc_b8d0:                                ; preds = %dec_label_pc_b8a4
  %v1_b8d0 = add i32 %v3_b8a4, 4
  %v2_b8d0 = inttoptr i32 %v1_b8d0 to i32*
  %v3_b8d0 = load i32, i32* %v2_b8d0, align 4
  store i32 %v3_b8d0, i32* %r3.global-to-local, align 4
  %v1_b8d4 = and i32 %v3_b8d0, -4
  store i32 %v1_b8d4, i32* %r2.global-to-local, align 4
  %v0_b8d8 = load i32, i32* @sl, align 4
  %v2_b8d8 = sub i32 %v1_b8d4, %v0_b8d8
  store i32 %v2_b8d8, i32* %ip.global-to-local, align 4
  %v1_b8dc = add i32 %v3_b8a4, 12
  %v2_b8dc = inttoptr i32 %v1_b8dc to i32*
  %v3_b8dc = load i32, i32* %v2_b8dc, align 4
  store i32 %v3_b8dc, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_b8d8, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_b8d0
  %v6_b8e4 = add i32 %v1_b8d4, %v3_b8a4
  store i32 %v6_b8e4, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_b8d0, %bb143
  %v2_b8e8 = add i32 %v3_b8dc, 8
  %v3_b8e8 = inttoptr i32 %v2_b8e8 to i32*
  store i32 %v0_b8e8, i32* %v3_b8e8, align 4
  %v0_b8ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b8ec = load i32, i32* %r0.global-to-local, align 4
  %v2_b8ec = add i32 %v1_b8ec, 12
  %v3_b8ec = inttoptr i32 %v2_b8ec to i32*
  store i32 %v0_b8ec, i32* %v3_b8ec, align 4
  %v4_b8f0 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_b7cc_crit_edge, label %dec_label_pc_b8fc

.dec_label_pc_b7cc_crit_edge:                     ; preds = %bb144
  %v5_b8f0 = add i32 %v4_b8f0, 8
  store i32 %v5_b8f0, i32* %r4.global-to-local, align 4
  %v4_b8f4 = load i32, i32* %r2.global-to-local, align 4
  %v5_b8f4 = add i32 %v4_b8f4, 4
  %v6_b8f4 = inttoptr i32 %v5_b8f4 to i32*
  %v7_b8f4 = load i32, i32* %v6_b8f4, align 4
  store i32 %v7_b8f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b7cc

dec_label_pc_b8fc:                                ; preds = %bb144
  %v1_b8fc = load i32, i32* @sl, align 4
  %v2_b8fc = add i32 %v1_b8fc, %v4_b8f0
  store i32 %v2_b8fc, i32* %r1.global-to-local, align 4
  %v1_b904 = load i32, i32* @r6, align 4
  %v2_b904 = add i32 %v1_b904, 8
  %v3_b904 = inttoptr i32 %v2_b904 to i32*
  store i32 %v2_b8fc, i32* %v3_b904, align 4
  %v0_b908 = load i32, i32* %r1.global-to-local, align 4
  %v1_b908 = load i32, i32* @r6, align 4
  %v2_b908 = add i32 %v1_b908, 12
  %v3_b908 = inttoptr i32 %v2_b908 to i32*
  store i32 %v0_b908, i32* %v3_b908, align 4
  %v0_b90c = load i32, i32* @r6, align 4
  %v1_b90c = load i32, i32* %r1.global-to-local, align 4
  %v2_b90c = add i32 %v1_b90c, 8
  %v3_b90c = inttoptr i32 %v2_b90c to i32*
  store i32 %v0_b90c, i32* %v3_b90c, align 4
  %v0_b910 = load i32, i32* @r6, align 4
  %v1_b910 = load i32, i32* %r1.global-to-local, align 4
  %v2_b910 = add i32 %v1_b910, 12
  %v3_b910 = inttoptr i32 %v2_b910 to i32*
  store i32 %v0_b910, i32* %v3_b910, align 4
  %tmp210 = icmp ult i32 %v1_b8fc, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_b8fc
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v8_b91c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v8_b91c, i32* %r3.global-to-local, align 4
  %v4_b920 = load i32, i32* %r1.global-to-local, align 4
  %v6_b920 = add i32 %v8_b91c, 48
  %v7_b920 = inttoptr i32 %v6_b920 to i32*
  store i32 %v4_b920, i32* %v7_b920, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_b8fc, %bb145
  %v0_b924 = load i32, i32* @sl, align 4
  %v1_b924 = or i32 %v0_b924, 1
  store i32 %v1_b924, i32* %r2.global-to-local, align 4
  %v0_b928 = load i32, i32* %ip.global-to-local, align 4
  %v1_b928 = or i32 %v0_b928, 1
  store i32 %v1_b928, i32* %r3.global-to-local, align 4
  %v0_b92c = load i32, i32* @lr, align 4
  %v1_b92c = add i32 %v0_b92c, 8
  store i32 %v1_b92c, i32* %r4.global-to-local, align 4
  %v2_b930 = add i32 %v0_b92c, 4
  %v3_b930 = inttoptr i32 %v2_b930 to i32*
  store i32 %v1_b924, i32* %v3_b930, align 4
  %v0_b934 = load i32, i32* %ip.global-to-local, align 4
  %v1_b934 = load i32, i32* %r1.global-to-local, align 4
  %v3_b934 = add i32 %v1_b934, %v0_b934
  %v4_b934 = inttoptr i32 %v3_b934 to i32*
  store i32 %v0_b934, i32* %v4_b934, align 4
  %v0_b938 = load i32, i32* %r3.global-to-local, align 4
  %v1_b938 = load i32, i32* %r1.global-to-local, align 4
  %v2_b938 = add i32 %v1_b938, 4
  %v3_b938 = inttoptr i32 %v2_b938 to i32*
  store i32 %v0_b938, i32* %v3_b938, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b940.loopexit:                       ; preds = %dec_label_pc_b860
  br label %dec_label_pc_b940

dec_label_pc_b940:                                ; preds = %dec_label_pc_b940.loopexit, %dec_label_pc_b554, %dec_label_pc_b55c
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  %v4_b948 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_b948, i32* @r0, align 4
  %v1_b94c = add i32 %v4_b948, 44
  %v2_b94c = inttoptr i32 %v1_b94c to i32*
  %v3_b94c = load i32, i32* %v2_b94c, align 4
  store i32 %v3_b94c, i32* %ip.global-to-local, align 4
  %v1_b950 = add i32 %v3_b94c, 4
  %v2_b950 = inttoptr i32 %v1_b950 to i32*
  %v3_b950 = load i32, i32* %v2_b950, align 4
  %v0_b954 = load i32, i32* @sl, align 4
  %v1_b954 = add i32 %v0_b954, 16
  store i32 %v1_b954, i32* %r1.global-to-local, align 4
  %v1_b958 = and i32 %v3_b950, -4
  store i32 %v1_b958, i32* %r3.global-to-local, align 4
  %v3_b95c = icmp ult i32 %v1_b958, %v1_b954
  br i1 %v3_b95c, label %dec_label_pc_b98c, label %dec_label_pc_b968

dec_label_pc_b968:                                ; preds = %dec_label_pc_b940
  %v2_b968 = sub i32 %v1_b958, %v0_b954
  %v2_b96c = add i32 %v0_b954, %v3_b94c
  store i32 %v2_b96c, i32* %r1.global-to-local, align 4
  %v1_b970 = or i32 %v2_b968, 1
  store i32 %v1_b970, i32* %r3.global-to-local, align 4
  %v1_b974 = or i32 %v0_b954, 1
  store i32 %v1_b974, i32* %r2.global-to-local, align 4
  %v1_b978 = add i32 %v3_b94c, 8
  store i32 %v1_b978, i32* %r4.global-to-local, align 4
  store i32 %v1_b974, i32* %v2_b950, align 4
  %v0_b980 = load i32, i32* %r1.global-to-local, align 4
  %v1_b980 = load i32, i32* @r0, align 4
  %v2_b980 = add i32 %v1_b980, 44
  %v3_b980 = inttoptr i32 %v2_b980 to i32*
  store i32 %v0_b980, i32* %v3_b980, align 4
  %v0_b984 = load i32, i32* %r3.global-to-local, align 4
  %v1_b984 = load i32, i32* %r1.global-to-local, align 4
  %v2_b984 = add i32 %v1_b984, 4
  %v3_b984 = inttoptr i32 %v2_b984 to i32*
  store i32 %v0_b984, i32* %v3_b984, align 4
  br label %dec_label_pc_bd94

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b940
  %v1_b98c = inttoptr i32 %v4_b948 to i32*
  %v2_b98c = load i32, i32* %v1_b98c, align 4
  store i32 %v2_b98c, i32* %r3.global-to-local, align 4
  %v1_b990 = and i32 %v2_b98c, 2
  store i32 %v1_b990, i32* %ip.global-to-local, align 4
  %v2_b990 = icmp eq i32 %v1_b990, 0
  %v1_b994 = add i32 %v4_b948, 860
  %v2_b994 = inttoptr i32 %v1_b994 to i32*
  %v3_b994 = load i32, i32* %v2_b994, align 4
  store i32 %v3_b994, i32* %r1.global-to-local, align 4
  br i1 %v2_b990, label %dec_label_pc_b9ac, label %dec_label_pc_b99c

dec_label_pc_b99c:                                ; preds = %dec_label_pc_b98c
  %v0_b99c = call i32 @__malloc_consolidate()
  %v0_b9a0 = load i32, i32* @sl, align 4
  %v1_b9a0 = add i32 %v0_b9a0, -7
  store i32 %v1_b9a0, i32* %r0.global-to-local, align 4
  %v1_b9a4 = call i32 @malloc(i32 %v1_b9a0)
  store i32 %v1_b9a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd90

dec_label_pc_b9ac:                                ; preds = %dec_label_pc_b98c
  %v1_b9ac = add i32 %v4_b948, 844
  %v2_b9ac = inttoptr i32 %v1_b9ac to i32*
  %v3_b9ac = load i32, i32* %v2_b9ac, align 4
  store i32 %v3_b9ac, i32* %r3.global-to-local, align 4
  %v3_b9b0 = icmp ult i32 %v0_b954, %v3_b9ac
  %v1_b9b4 = add i32 %v3_b994, -1
  store i32 %v1_b9b4, i32* %sb.global-to-local, align 4
  br i1 %v3_b9b0, label %dec_label_pc_ba88, label %dec_label_pc_b9bc

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b9ac
  %v1_b9bc = add i32 %v4_b948, 852
  %v2_b9bc = inttoptr i32 %v1_b9bc to i32*
  %v3_b9bc = load i32, i32* %v2_b9bc, align 4
  store i32 %v3_b9bc, i32* %r2.global-to-local, align 4
  %v1_b9c0 = add i32 %v4_b948, 848
  %v2_b9c0 = inttoptr i32 %v1_b9c0 to i32*
  %v3_b9c0 = load i32, i32* %v2_b9c0, align 4
  store i32 %v3_b9c0, i32* %r3.global-to-local, align 4
  %v6_b9c8 = icmp slt i32 %v3_b9c0, %v3_b9bc
  br i1 %v6_b9c8, label %dec_label_pc_b9cc, label %dec_label_pc_ba88

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9bc
  %v1_b9cc = add i32 %v0_b954, 10
  %v2_b9d0 = add i32 %v1_b9cc, %v3_b994
  store i32 %v2_b9d0, i32* %r3.global-to-local, align 4
  %v2_b9d4 = sub i32 0, %v3_b994
  %v3_b9d4 = and i32 %v2_b9d0, %v2_b9d4
  store i32 %v3_b9d4, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_b9d4, %v0_b954
  br i1 %tmp211, label %dec_label_pc_b9e0, label %dec_label_pc_ba88

dec_label_pc_b9e0:                                ; preds = %dec_label_pc_b9cc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_b9d4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_b9f8 = call i32 @mmap(i32 0, i32 %v3_b9d4, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_b9f8, i32* %r0.global-to-local, align 4
  %v7_b9fc = icmp eq i32 %v6_b9f8, -1
  br i1 %v7_b9fc, label %dec_label_pc_b9e0.dec_label_pc_ba88_crit_edge, label %dec_label_pc_ba04

dec_label_pc_b9e0.dec_label_pc_ba88_crit_edge:    ; preds = %dec_label_pc_b9e0
  %v1_baac.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_ba88

dec_label_pc_ba04:                                ; preds = %dec_label_pc_b9e0
  %v1_ba04 = urem i32 %v6_b9f8, 8
  store i32 %v1_ba04, i32* %r2.global-to-local, align 4
  %v2_ba04 = icmp eq i32 %v1_ba04, 0
  br i1 %v2_ba04, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_ba04
  %v2_ba08 = sub nsw i32 8, %v1_ba04
  store i32 %v2_ba08, i32* %r3.global-to-local, align 4
  %v2_ba0c = load i32, i32* @r4, align 4
  %v3_ba0c = sub i32 %v2_ba0c, %v2_ba08
  %v3_ba10 = add i32 %v2_ba08, %v6_b9f8
  store i32 %v3_ba10, i32* %lr.global-to-local, align 4
  %v2_ba18 = or i32 %v3_ba0c, 2
  store i32 %v2_ba18, i32* %r2.global-to-local, align 4
  %v5_ba20 = inttoptr i32 %v3_ba10 to i32*
  store i32 %v2_ba08, i32* %v5_ba20, align 4
  %v1_ba24 = load i32, i32* %r2.global-to-local, align 4
  %v2_ba24 = load i32, i32* %lr.global-to-local, align 4
  %v3_ba24 = add i32 %v2_ba24, 4
  %v4_ba24 = inttoptr i32 %v3_ba24 to i32*
  store i32 %v1_ba24, i32* %v4_ba24, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_ba04
  store i32 %v6_b9f8, i32* %lr.global-to-local, align 4
  %v1_ba1c47 = load i32, i32* @r4, align 4
  %v2_ba1c48 = or i32 %v1_ba1c47, 2
  store i32 %v2_ba1c48, i32* %r3.global-to-local, align 4
  %v3_ba28 = inttoptr i32 %v6_b9f8 to i32*
  store i32 0, i32* %v3_ba28, align 4
  %v1_ba2c = load i32, i32* %r3.global-to-local, align 4
  %v2_ba2c = load i32, i32* %lr.global-to-local, align 4
  %v3_ba2c = add i32 %v2_ba2c, 4
  %v4_ba2c = inttoptr i32 %v3_ba2c to i32*
  store i32 %v1_ba2c, i32* %v4_ba2c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_ba38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_ba38, i32* %ip.global-to-local, align 4
  %v1_ba3c = add i32 %v4_ba38, 848
  %v2_ba3c = inttoptr i32 %v1_ba3c to i32*
  %v3_ba3c = load i32, i32* %v2_ba3c, align 4
  store i32 %v3_ba3c, i32* %r3.global-to-local, align 4
  %v1_ba40 = add i32 %v4_ba38, 856
  %v2_ba40 = inttoptr i32 %v1_ba40 to i32*
  %v3_ba40 = load i32, i32* %v2_ba40, align 4
  store i32 %v3_ba40, i32* %r2.global-to-local, align 4
  %v1_ba44 = add i32 %v3_ba3c, 1
  store i32 %v1_ba44, i32* %r3.global-to-local, align 4
  %v7_ba4c = icmp sgt i32 %v1_ba44, %v3_ba40
  br i1 %v7_ba4c, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_ba44, i32* %v2_ba40, align 4
  %v0_ba50.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_ba50.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_ba50 = phi i32 [ %v4_ba38, %.thread27 ], [ %v1_ba50.pre, %bb147 ]
  %v0_ba50 = phi i32 [ %v1_ba44, %.thread27 ], [ %v0_ba50.pre, %bb147 ]
  %v2_ba50 = add i32 %v1_ba50, 848
  %v3_ba50 = inttoptr i32 %v2_ba50 to i32*
  store i32 %v0_ba50, i32* %v3_ba50, align 4
  %v0_ba54 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba54 = add i32 %v0_ba54, 868
  %v2_ba54 = inttoptr i32 %v1_ba54 to i32*
  %v3_ba54 = load i32, i32* %v2_ba54, align 4
  store i32 %v3_ba54, i32* %r3.global-to-local, align 4
  %v1_ba58 = add i32 %v0_ba54, 880
  %v2_ba58 = inttoptr i32 %v1_ba58 to i32*
  %v3_ba58 = load i32, i32* %v2_ba58, align 4
  store i32 %v3_ba58, i32* %r2.global-to-local, align 4
  %v0_ba5c = load i32, i32* @r4, align 4
  %v2_ba5c = add i32 %v0_ba5c, %v3_ba54
  store i32 %v2_ba5c, i32* %r1.global-to-local, align 4
  %v1_ba60 = add i32 %v0_ba54, 872
  %v2_ba60 = inttoptr i32 %v1_ba60 to i32*
  %v3_ba60 = load i32, i32* %v2_ba60, align 4
  store i32 %v3_ba60, i32* %r3.global-to-local, align 4
  %v1_ba68 = add i32 %v0_ba54, 884
  %v2_ba68 = inttoptr i32 %v1_ba68 to i32*
  %v3_ba68 = load i32, i32* %v2_ba68, align 4
  store i32 %v3_ba68, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_ba5c, %v3_ba58
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_ba5c, i32* %v2_ba58, align 4
  %v0_ba70.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_ba70.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_ba70 = phi i32 [ %v0_ba54, %bb148 ], [ %v1_ba70.pre, %bb149 ]
  %v0_ba70 = phi i32 [ %v2_ba5c, %bb148 ], [ %v0_ba70.pre, %bb149 ]
  %v2_ba70 = add i32 %v1_ba70, 868
  %v3_ba70 = inttoptr i32 %v2_ba70 to i32*
  store i32 %v0_ba70, i32* %v3_ba70, align 4
  %v0_ba74 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba74 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba74 = add i32 %v1_ba74, %v0_ba74
  store i32 %v2_ba74, i32* %r1.global-to-local, align 4
  %v1_ba78 = load i32, i32* %r2.global-to-local, align 4
  %v0_ba7c = load i32, i32* %lr.global-to-local, align 4
  %v1_ba7c = add i32 %v0_ba7c, 8
  store i32 %v1_ba7c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_ba74, %v1_ba78
  br i1 %tmp213, label %bb151, label %dec_label_pc_bd90

bb151:                                            ; preds = %bb150
  %v5_ba80 = load i32, i32* %ip.global-to-local, align 4
  %v6_ba80 = add i32 %v5_ba80, 884
  %v7_ba80 = inttoptr i32 %v6_ba80 to i32*
  store i32 %v2_ba74, i32* %v7_ba80, align 4
  br label %dec_label_pc_bd90

dec_label_pc_ba88:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_b9ac, %dec_label_pc_b9e0.dec_label_pc_ba88_crit_edge, %dec_label_pc_b9bc
  %v1_baac = phi i32 [ %v1_baac.pre, %dec_label_pc_b9e0.dec_label_pc_ba88_crit_edge ], [ %v0_b954, %dec_label_pc_b9bc ], [ %v0_b954, %dec_label_pc_b9ac ], [ %v0_b954, %dec_label_pc_b9cc ]
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  %v4_ba90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_ba90, i32* %r3.global-to-local, align 4
  %v1_ba94 = add i32 %v4_ba90, 44
  %v2_ba94 = inttoptr i32 %v1_ba94 to i32*
  %v3_ba94 = load i32, i32* %v2_ba94, align 4
  store i32 %v3_ba94, i32* %r0.global-to-local, align 4
  %v1_ba98 = add i32 %v4_ba90, 864
  %v2_ba98 = inttoptr i32 %v1_ba98 to i32*
  %v3_ba98 = load i32, i32* %v2_ba98, align 4
  store i32 %v3_ba98, i32* %r2.global-to-local, align 4
  %v1_ba9c = add i32 %v4_ba90, 840
  %v2_ba9c = inttoptr i32 %v1_ba9c to i32*
  %v3_ba9c = load i32, i32* %v2_ba9c, align 4
  store i32 %v3_ba9c, i32* %r3.global-to-local, align 4
  %v1_baa0 = add i32 %v3_ba94, 4
  %v2_baa0 = inttoptr i32 %v1_baa0 to i32*
  %v3_baa0 = load i32, i32* %v2_baa0, align 4
  store i32 %v3_baa0, i32* %r1.global-to-local, align 4
  %v1_baa8 = urem i32 %v3_ba98, 2
  %v2_baa8 = icmp eq i32 %v1_baa8, 0
  %v1_baa4 = add i32 %v1_baac, 16
  %v2_baac = add i32 %v1_baa4, %v3_ba9c
  store i32 %v2_baac, i32* %r3.global-to-local, align 4
  %v1_bab0 = and i32 %v3_baa0, -4
  store i32 %v1_bab0, i32* @r8, align 4
  br i1 %v2_baa8, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_ba88
  %v3_bab4 = sub i32 %v2_baac, %v1_bab0
  store i32 %v3_bab4, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_ba88, %bb152
  %v0_bab8 = phi i32 [ %v2_baac, %dec_label_pc_ba88 ], [ %v3_bab4, %bb152 ]
  %v1_bab8 = load i32, i32* %sb.global-to-local, align 4
  %v2_bab8 = add i32 %v1_bab8, %v0_bab8
  store i32 %v2_bab8, i32* %r3.global-to-local, align 4
  %v1_babc = sub i32 -1, %v1_bab8
  store i32 %v1_babc, i32* %fp.global-to-local, align 4
  %v2_bac0 = and i32 %v2_bab8, %v1_babc
  store i32 %v2_bac0, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_bac0, 1
  br i1 %tmp154, label %dec_label_pc_bae4, label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %bb153
  store i32 %v2_bac0, i32* %r0.global-to-local, align 4
  %v1_bad4 = call i32 @__GI_sbrk(i32 %v2_bac0)
  store i32 %v1_bad4, i32* %r0.global-to-local, align 4
  %v3_bad8 = icmp eq i32 %v1_bad4, -1
  store i32 %v1_bad4, i32* @r4, align 4
  br i1 %v3_bad8, label %dec_label_pc_bae4, label %dec_label_pc_bb50

dec_label_pc_bae4:                                ; preds = %dec_label_pc_bad0, %bb153
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  %v4_baec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_baec, i32* %r6.global-to-local, align 4
  %v1_baf0 = add i32 %v4_baec, 864
  %v2_baf0 = inttoptr i32 %v1_baf0 to i32*
  %v3_baf0 = load i32, i32* %v2_baf0, align 4
  store i32 %v3_baf0, i32* %r3.global-to-local, align 4
  %v1_baf4 = urem i32 %v3_baf0, 2
  %v2_baf4 = icmp eq i32 %v1_baf4, 0
  br i1 %v2_baf4, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_bae4
  %v1_baf8 = load i32, i32* @r8, align 4
  %v2_baf8 = load i32, i32* %sb.global-to-local, align 4
  %v3_baf8 = add i32 %v2_baf8, %v1_baf8
  %v2_bafc = load i32, i32* @r5, align 4
  %v3_bafc = add i32 %v3_baf8, %v2_bafc
  store i32 %v3_bafc, i32* %r3.global-to-local, align 4
  %v2_bb00 = load i32, i32* %fp.global-to-local, align 4
  %v3_bb00 = and i32 %v2_bb00, %v3_bafc
  store i32 %v3_bb00, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_bae4
  %v0_bb04.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_bb04 = phi i32 [ %v0_bb04.pr, %.thread29thread-pre-split ], [ %v3_bb00, %bb155 ]
  %v2_bb04 = icmp ugt i32 %v0_bb04, 1048575
  br i1 %v2_bb04, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_bb1c = phi i32 [ %v0_bb04, %.thread29 ], [ 1048576, %bb156 ]
  %v1_bb0c = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_bb1c, %v1_bb0c
  br i1 %tmp214, label %dec_label_pc_bb14, label %dec_label_pc_bd78

dec_label_pc_bb14:                                ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_bb1c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_bb30 = call i32 @mmap(i32 0, i32 %v0_bb1c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_bb30, i32* %r0.global-to-local, align 4
  %v3_bb34 = icmp eq i32 %v6_bb30, -1
  %v8_bb34 = icmp eq i32 %v6_bb30, -1
  store i32 %v6_bb30, i32* @r4, align 4
  br i1 %v8_bb34, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_bb14
  %v1_bb3c = load i32, i32* %r6.global-to-local, align 4
  %v2_bb3c = add i32 %v1_bb3c, 864
  %v3_bb3c = inttoptr i32 %v2_bb3c to i32*
  %v4_bb3c = load i32, i32* %v3_bb3c, align 4
  %v2_bb40 = load i32, i32* @r5, align 4
  %v3_bb40 = add i32 %v2_bb40, %v6_bb30
  store i32 %v3_bb40, i32* %r0.global-to-local, align 4
  %v2_bb44 = and i32 %v4_bb3c, -2
  store i32 %v2_bb44, i32* %r3.global-to-local, align 4
  store i32 %v2_bb44, i32* %v3_bb3c, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_bb14, %bb158
  br i1 %v3_bb34, label %dec_label_pc_bb50, label %dec_label_pc_bb54

dec_label_pc_bb50:                                ; preds = %.thread32, %dec_label_pc_bad0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb54

dec_label_pc_bb54:                                ; preds = %.thread32, %dec_label_pc_bb50
  %v0_bb54 = load i32, i32* @r4, align 4
  %v7_bb54 = icmp eq i32 %v0_bb54, -1
  br i1 %v7_bb54, label %dec_label_pc_bd78, label %dec_label_pc_bb5c

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb54
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v4_bb64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_bb64, i32* %ip.global-to-local, align 4
  store i32 %v3_ba94, i32* %r2.global-to-local, align 4
  %v1_bb6c = add i32 %v4_bb64, 872
  %v2_bb6c = inttoptr i32 %v1_bb6c to i32*
  %v3_bb6c = load i32, i32* %v2_bb6c, align 4
  %v1_bb70 = load i32, i32* @r8, align 4
  %v2_bb70 = add i32 %v1_bb70, %v3_ba94
  store i32 %v2_bb70, i32* %r1.global-to-local, align 4
  %v0_bb74 = load i32, i32* @r5, align 4
  %v2_bb74 = add i32 %v0_bb74, %v3_bb6c
  store i32 %v2_bb74, i32* %r3.global-to-local, align 4
  %v9_bb78 = icmp eq i32 %v0_bb54, %v2_bb70
  br i1 %v9_bb78, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_bb5c
  store i32 %v2_bb74, i32* %v2_bb6c, align 4
  br label %dec_label_pc_bb94

bb159:                                            ; preds = %dec_label_pc_bb5c
  %v1_bb7c = load i32, i32* %r0.global-to-local, align 4
  %v8_bb7c = icmp eq i32 %v1_bb7c, -1
  store i32 %v2_bb74, i32* %v2_bb6c, align 4
  br i1 %v8_bb7c, label %.thread34, label %dec_label_pc_bb94

.thread34:                                        ; preds = %bb159
  %v1_bb84 = load i32, i32* @r5, align 4
  %v2_bb84 = load i32, i32* @r8, align 4
  %v3_bb84 = add i32 %v2_bb84, %v1_bb84
  %v2_bb88 = or i32 %v3_bb84, 1
  store i32 %v2_bb88, i32* %r3.global-to-local, align 4
  %v2_bb8c = load i32, i32* %r2.global-to-local, align 4
  %v3_bb8c = add i32 %v2_bb8c, 4
  %v4_bb8c = inttoptr i32 %v3_bb8c to i32*
  store i32 %v2_bb88, i32* %v4_bb8c, align 4
  br label %dec_label_pc_bd0c

dec_label_pc_bb94:                                ; preds = %bb159, %.thread122
  %v0_bb98.pr = load i32, i32* @r8, align 4
  %v0_bb94 = load i32, i32* %ip.global-to-local, align 4
  %v1_bb94 = add i32 %v0_bb94, 864
  %v2_bb94 = inttoptr i32 %v1_bb94 to i32*
  %v3_bb94 = load i32, i32* %v2_bb94, align 4
  store i32 %v3_bb94, i32* %r2.global-to-local, align 4
  %v2_bb98 = icmp eq i32 %v0_bb98.pr, 0
  br i1 %v2_bb98, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_bb94
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_bb94
  %v2_bba0 = urem i32 %v3_bb94, 2
  store i32 %v2_bba0, i32* %r3.global-to-local, align 4
  %v2_bba4 = icmp eq i32 %v2_bba0, 0
  br i1 %v2_bba4, label %.thread40, label %dec_label_pc_bbac

dec_label_pc_bbac:                                ; preds = %.thread36
  %v0_bbac = load i32, i32* @r4, align 4
  %v1_bbac = load i32, i32* %r1.global-to-local, align 4
  %v3_bbac = icmp ult i32 %v0_bbac, %v1_bbac
  br i1 %v3_bbac, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_bbac
  %v2_bbb0 = and i32 %v3_bb94, -2
  store i32 %v2_bbb0, i32* %r3.global-to-local, align 4
  store i32 %v2_bbb0, i32* %v2_bb94, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_bbac, %.thread37, %.thread36, %bb160
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  %v4_bbc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_bbc0, i32* @r7, align 4
  %v1_bbc4 = add i32 %v4_bbc0, 864
  %v2_bbc4 = inttoptr i32 %v1_bbc4 to i32*
  %v3_bbc4 = load i32, i32* %v2_bbc4, align 4
  store i32 %v3_bbc4, i32* %r3.global-to-local, align 4
  %v1_bbc8 = urem i32 %v3_bbc4, 2
  store i32 %v1_bbc8, i32* @r6, align 4
  %v2_bbc8 = icmp eq i32 %v1_bbc8, 0
  br i1 %v2_bbc8, label %dec_label_pc_bc5c, label %dec_label_pc_bbd0

dec_label_pc_bbd0:                                ; preds = %.thread40
  %v0_bbd0 = load i32, i32* @r8, align 4
  %v2_bbd0 = icmp eq i32 %v0_bbd0, 0
  br i1 %v2_bbd0, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_bbd0
  %v2_bbd4 = add i32 %v4_bbc0, 872
  %v3_bbd4 = inttoptr i32 %v2_bbd4 to i32*
  %v4_bbd4 = load i32, i32* %v3_bbd4, align 4
  store i32 %v4_bbd4, i32* %r2.global-to-local, align 4
  %v1_bbd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bbd8 = load i32, i32* @r4, align 4
  %v3_bbd8 = sub i32 %v2_bbd8, %v1_bbd8
  %v3_bbdc = add i32 %v3_bbd8, %v4_bbd4
  store i32 %v3_bbdc, i32* %r3.global-to-local, align 4
  store i32 %v3_bbdc, i32* %v3_bbd4, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_bbd0, %bb161
  %v0_bbe4 = load i32, i32* @r4, align 4
  %v1_bbe4 = urem i32 %v0_bbe4, 8
  store i32 %v1_bbe4, i32* %r3.global-to-local, align 4
  %v2_bbe4 = icmp eq i32 %v1_bbe4, 0
  br i1 %v2_bbe4, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_bbe8 = sub nsw i32 8, %v1_bbe4
  store i32 %v2_bbe8, i32* %r3.global-to-local, align 4
  %v3_bbec = add i32 %v2_bbe8, %v0_bbe4
  store i32 %v3_bbec, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_bbf4 = phi i32 [ 0, %.thread43 ], [ %v2_bbe8, %bb162 ]
  %v1_bbf0 = load i32, i32* @r5, align 4
  %v2_bbf0 = add i32 %v1_bbf0, %v0_bbe4
  store i32 %v2_bbf0, i32* @r6, align 4
  %v1_bbf4 = load i32, i32* @r8, align 4
  %v2_bbf4 = add i32 %v2_bbf0, %v0_bbf4
  %v2_bbf8 = add i32 %v2_bbf4, %v1_bbf4
  store i32 %v2_bbf8, i32* %r1.global-to-local, align 4
  %v1_bbfc = load i32, i32* %sb.global-to-local, align 4
  %v2_bbfc = add i32 %v1_bbfc, %v2_bbf8
  %v1_bc00 = load i32, i32* %fp.global-to-local, align 4
  %v2_bc00 = and i32 %v1_bc00, %v2_bbfc
  store i32 %v2_bc00, i32* %r2.global-to-local, align 4
  %v2_bc04 = sub i32 0, %v2_bbf0
  store i32 %v2_bc04, i32* %r3.global-to-local, align 4
  %v2_bc08 = sub i32 %v2_bc00, %v2_bbf0
  store i32 %v2_bc08, i32* @r5, align 4
  store i32 %v2_bc08, i32* %r0.global-to-local, align 4
  br i1 %v2_bbe4, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_bbe4, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_bc14 = call i32 @__GI_sbrk(i32 %v2_bc08)
  store i32 %v1_bc14, i32* %r0.global-to-local, align 4
  %v3_bc18 = icmp eq i32 %v1_bc14, -1
  br i1 %v3_bc18, label %dec_label_pc_bc20, label %dec_label_pc_bc30

dec_label_pc_bc20:                                ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bc24 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_bc24, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_bc88

dec_label_pc_bc30:                                ; preds = %bb164
  %v1_bc30 = load i32, i32* @r4, align 4
  %v3_bc30 = icmp ult i32 %v1_bc14, %v1_bc30
  br i1 %v3_bc30, label %dec_label_pc_bc38, label %dec_label_pc_bc88

dec_label_pc_bc38:                                ; preds = %dec_label_pc_bc30
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r0.global-to-local, align 4
  %v4_bc40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_bc40, i32* %r2.global-to-local, align 4
  %v1_bc44 = add i32 %v4_bc40, 864
  %v2_bc44 = inttoptr i32 %v1_bc44 to i32*
  %v3_bc44 = load i32, i32* %v2_bc44, align 4
  %v0_bc48 = load i32, i32* @r6, align 4
  store i32 %v0_bc48, i32* %r0.global-to-local, align 4
  %v1_bc4c = and i32 %v3_bc44, -2
  store i32 %v1_bc4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_bc4c, i32* %v2_bc44, align 4
  br label %dec_label_pc_bc88

dec_label_pc_bc5c:                                ; preds = %.thread40
  %v0_bc5c = load i32, i32* %r0.global-to-local, align 4
  %v3_bc5c = icmp eq i32 %v0_bc5c, -1
  br i1 %v3_bc5c, label %dec_label_pc_bc64, label %dec_label_pc_bc80

dec_label_pc_bc64:                                ; preds = %dec_label_pc_bc5c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bc68 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_bc68, i32* %r0.global-to-local, align 4
  %v0_bc6c = load i32, i32* @r7, align 4
  %v1_bc6c = add i32 %v0_bc6c, 872
  %v2_bc6c = inttoptr i32 %v1_bc6c to i32*
  %v3_bc6c = load i32, i32* %v2_bc6c, align 4
  store i32 %v3_bc6c, i32* %r2.global-to-local, align 4
  %v0_bc70 = load i32, i32* @r4, align 4
  %v0_bc74 = load i32, i32* @r5, align 4
  %v2_bc70 = add i32 %v3_bc6c, %v1_bc68
  %v2_bc74 = sub i32 %v2_bc70, %v0_bc70
  %v2_bc78 = sub i32 %v2_bc74, %v0_bc74
  store i32 %v2_bc78, i32* %r3.global-to-local, align 4
  store i32 %v2_bc78, i32* %v2_bc6c, align 4
  %v0_bc84.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_bc80

dec_label_pc_bc80:                                ; preds = %dec_label_pc_bc5c, %dec_label_pc_bc64
  %v0_bc84 = phi i32 [ 0, %dec_label_pc_bc5c ], [ %v0_bc84.pre, %dec_label_pc_bc64 ]
  %v0_bc80 = load i32, i32* @r4, align 4
  store i32 %v0_bc80, i32* @r7, align 4
  store i32 %v0_bc84, i32* @r5, align 4
  br label %dec_label_pc_bc88

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc30, %dec_label_pc_bc38, %dec_label_pc_bc20, %dec_label_pc_bc80
  %v0_bc88 = load i32, i32* %r0.global-to-local, align 4
  %v7_bc88 = icmp eq i32 %v0_bc88, -1
  br i1 %v7_bc88, label %dec_label_pc_bd0c, label %dec_label_pc_bc90

dec_label_pc_bc90:                                ; preds = %dec_label_pc_bc88
  %v1_bc90 = load i32, i32* @r5, align 4
  %v2_bc90 = add i32 %v1_bc90, %v0_bc88
  %v0_bc94 = load i32, i32* @r7, align 4
  %v2_bc94 = sub i32 %v2_bc90, %v0_bc94
  %v1_bc98 = or i32 %v2_bc94, 1
  %v2_bc9c = add i32 %v0_bc94, 4
  %v3_bc9c = inttoptr i32 %v2_bc9c to i32*
  store i32 %v1_bc98, i32* %v3_bc9c, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_bca8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_bca8, i32* @r6, align 4
  %v1_bcac = add i32 %v4_bca8, 872
  %v2_bcac = inttoptr i32 %v1_bcac to i32*
  %v3_bcac = load i32, i32* %v2_bcac, align 4
  %v0_bcb0 = load i32, i32* @r8, align 4
  %v2_bcb0 = icmp eq i32 %v0_bcb0, 0
  %v0_bcb4 = load i32, i32* @r5, align 4
  %v2_bcb4 = add i32 %v0_bcb4, %v3_bcac
  store i32 %v2_bcb4, i32* %r3.global-to-local, align 4
  store i32 %v2_bcb4, i32* %v2_bcac, align 4
  %v0_bcbc = load i32, i32* @r7, align 4
  %v1_bcbc = load i32, i32* @r6, align 4
  %v2_bcbc = add i32 %v1_bcbc, 44
  %v3_bcbc = inttoptr i32 %v2_bcbc to i32*
  store i32 %v0_bcbc, i32* %v3_bcbc, align 4
  br i1 %v2_bcb0, label %dec_label_pc_bd0c, label %dec_label_pc_bcc4

dec_label_pc_bcc4:                                ; preds = %dec_label_pc_bc90
  %v0_bcc8 = load i32, i32* @r8, align 4
  %v1_bcc8 = add i32 %v0_bcc8, -12
  %v1_bccc = and i32 %v1_bcc8, -8
  store i32 %v3_ba94, i32* %ip.global-to-local, align 4
  %v2_bcd4 = add i32 %v1_bccc, %v3_ba94
  store i32 %v2_bcd4, i32* %r1.global-to-local, align 4
  %v2_bcd8 = icmp ugt i32 %v1_bccc, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_bce0 = or i32 %v1_bccc, 1
  store i32 %v1_bce0, i32* %r3.global-to-local, align 4
  store i32 %v1_bce0, i32* %v2_baa0, align 4
  %v0_bce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bce8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bce8 = add i32 %v1_bce8, 8
  %v3_bce8 = inttoptr i32 %v2_bce8 to i32*
  store i32 %v0_bce8, i32* %v3_bce8, align 4
  %v0_bcec = load i32, i32* %r2.global-to-local, align 4
  %v1_bcec = load i32, i32* %r1.global-to-local, align 4
  %v2_bcec = add i32 %v1_bcec, 4
  %v3_bcec = inttoptr i32 %v2_bcec to i32*
  store i32 %v0_bcec, i32* %v3_bcec, align 4
  br i1 %v2_bcd8, label %dec_label_pc_bcf4, label %dec_label_pc_bd0c

dec_label_pc_bcf4:                                ; preds = %dec_label_pc_bcc4
  %v0_bcf4 = load i32, i32* @r6, align 4
  %v1_bcf4 = add i32 %v0_bcf4, 836
  %v2_bcf4 = inttoptr i32 %v1_bcf4 to i32*
  %v3_bcf4 = load i32, i32* %v2_bcf4, align 4
  store i32 %v3_bcf4, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_bcfc = load i32, i32* %ip.global-to-local, align 4
  %v1_bcfc = add i32 %v0_bcfc, 8
  store i32 %v1_bcfc, i32* @r0, align 4
  store i32 -1, i32* %v2_bcf4, align 4
  %v0_bd04 = call i32 @free()
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v0_bd08 = load i32, i32* @r4, align 4
  %v1_bd08 = load i32, i32* @r6, align 4
  %v2_bd08 = add i32 %v1_bd08, 836
  %v3_bd08 = inttoptr i32 %v2_bd08 to i32*
  store i32 %v0_bd08, i32* %v3_bd08, align 4
  br label %dec_label_pc_bd0c

dec_label_pc_bd0c:                                ; preds = %.thread34, %dec_label_pc_bcc4, %dec_label_pc_bc90, %dec_label_pc_bc88, %dec_label_pc_bcf4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r0.global-to-local, align 4
  %v4_bd14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_bd14, i32* %lr.global-to-local, align 4
  %v1_bd18 = add i32 %v4_bd14, 872
  store i32 %v1_bd18, i32* %r1.global-to-local, align 4
  %v1_bd1c = inttoptr i32 %v1_bd18 to i32*
  %v2_bd1c = load i32, i32* %v1_bd1c, align 4
  store i32 %v2_bd1c, i32* %r1.global-to-local, align 4
  %v3_bd1c = add i32 %v4_bd14, 876
  %v4_bd1c = inttoptr i32 %v3_bd1c to i32*
  %v5_bd1c = load i32, i32* %v4_bd1c, align 4
  store i32 %v5_bd1c, i32* %r3.global-to-local, align 4
  %v1_bd24 = add i32 %v4_bd14, 868
  %v2_bd24 = inttoptr i32 %v1_bd24 to i32*
  %v3_bd24 = load i32, i32* %v2_bd24, align 4
  store i32 %v3_bd24, i32* %r3.global-to-local, align 4
  %v1_bd28 = add i32 %v4_bd14, 884
  %v2_bd28 = inttoptr i32 %v1_bd28 to i32*
  %v3_bd28 = load i32, i32* %v2_bd28, align 4
  store i32 %v3_bd28, i32* %r2.global-to-local, align 4
  %v2_bd2c = add i32 %v3_bd24, %v2_bd1c
  store i32 %v2_bd2c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_bd1c, %v5_bd1c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_bd0c
  store i32 %v2_bd1c, i32* %v4_bd1c, align 4
  %v0_bd34.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_bd34.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_bd0c, %bb165
  %v1_bd34 = phi i32 [ %v3_bd28, %dec_label_pc_bd0c ], [ %v1_bd34.pre, %bb165 ]
  %v4_bd38 = phi i32 [ %v2_bd2c, %dec_label_pc_bd0c ], [ %v0_bd34.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_bd38, %v1_bd34
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_bd38 = load i32, i32* %lr.global-to-local, align 4
  %v6_bd38 = add i32 %v5_bd38, 884
  %v7_bd38 = inttoptr i32 %v6_bd38 to i32*
  store i32 %v4_bd38, i32* %v7_bd38, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_bd3c = load i32, i32* %lr.global-to-local, align 4
  %v1_bd3c = add i32 %v0_bd3c, 44
  %v2_bd3c = inttoptr i32 %v1_bd3c to i32*
  %v3_bd3c = load i32, i32* %v2_bd3c, align 4
  store i32 %v3_bd3c, i32* %ip.global-to-local, align 4
  %v1_bd40 = add i32 %v3_bd3c, 4
  %v2_bd40 = inttoptr i32 %v1_bd40 to i32*
  %v3_bd40 = load i32, i32* %v2_bd40, align 4
  store i32 %v1_b954, i32* %r1.global-to-local, align 4
  %v1_bd48 = and i32 %v3_bd40, -4
  store i32 %v1_bd48, i32* %r3.global-to-local, align 4
  %v3_bd4c = icmp ult i32 %v1_bd48, %v1_b954
  br i1 %v3_bd4c, label %dec_label_pc_bd78, label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %bb168
  %v0_bd54 = load i32, i32* @sl, align 4
  %v2_bd54 = sub i32 %v1_bd48, %v0_bd54
  %v2_bd58 = add i32 %v0_bd54, %v3_bd3c
  store i32 %v2_bd58, i32* %r1.global-to-local, align 4
  %v1_bd5c = or i32 %v2_bd54, 1
  store i32 %v1_bd5c, i32* %r3.global-to-local, align 4
  %v1_bd60 = or i32 %v0_bd54, 1
  store i32 %v1_bd60, i32* %r2.global-to-local, align 4
  %v1_bd64 = add i32 %v3_bd3c, 8
  store i32 %v1_bd64, i32* %r0.global-to-local, align 4
  store i32 %v1_bd60, i32* %v2_bd40, align 4
  %v0_bd6c = load i32, i32* %r1.global-to-local, align 4
  %v1_bd6c = load i32, i32* %lr.global-to-local, align 4
  %v2_bd6c = add i32 %v1_bd6c, 44
  %v3_bd6c = inttoptr i32 %v2_bd6c to i32*
  store i32 %v0_bd6c, i32* %v3_bd6c, align 4
  %v0_bd70 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd70 = load i32, i32* %r1.global-to-local, align 4
  %v2_bd70 = add i32 %v1_bd70, 4
  %v3_bd70 = inttoptr i32 %v2_bd70 to i32*
  store i32 %v0_bd70, i32* %v3_bd70, align 4
  br label %dec_label_pc_bd90

dec_label_pc_bd78:                                ; preds = %bb157, %bb168, %dec_label_pc_bb54
  store i32 91520, i32* %r3.global-to-local, align 4
  %v0_bd7c = call i32 @__aeabi_read_tp()
  %v3_bd80 = load i16, i16* @global_var_22308.76, align 2
  %v4_bd80 = sext i16 %v3_bd80 to i32
  store i32 %v4_bd80, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_bd88 = add i32 %v4_bd80, %v0_bd7c
  %v4_bd88 = inttoptr i32 %v3_bd88 to i32*
  store i32 12, i32* %v4_bd88, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd90

dec_label_pc_bd90:                                ; preds = %bb151, %bb150, %dec_label_pc_bd54, %dec_label_pc_b99c, %dec_label_pc_bd78
  %v0_bd90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_bd90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bd94

dec_label_pc_bd94:                                ; preds = %.thread1, %dec_label_pc_b968, %.thread121, %dec_label_pc_b7d8, %dec_label_pc_b7cc, %dec_label_pc_b634, %dec_label_pc_b5b8, %dec_label_pc_bd90
  store i32 %v2_b4d8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r2, align 4
  %v4_bda4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 48) to i32*), align 4
  store i32 %v4_bda4, i32* @ip, align 4
  store i32 48560, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_bda4)
  br label %dec_label_pc_bdb0

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_b510, %dec_label_pc_bd94
  %v0_bdb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_bdb0, i32* %r0.global-to-local, align 4
  store i32 %v3_b4ac, i32* @r4, align 4
  store i32 %v6_b4ac, i32* @r5, align 4
  store i32 %v9_b4ac, i32* @r6, align 4
  store i32 %v12_b4ac, i32* @r7, align 4
  store i32 %v15_b4ac, i32* @r8, align 4
  store i32 %v18_b4ac, i32* @sb, align 4
  store i32 %v21_b4ac, i32* @sl, align 4
  store i32 %v24_b4ac, i32* @fp, align 4
  store i32 %v27_b4ac, i32* @lr, align 4
  ret i32 %v0_bdb0

; uselistorder directives
  uselistorder i32 %v0_bd54, { 1, 0, 2 }
  uselistorder i32 %v3_bd3c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_bd38, { 1, 0 }
  uselistorder i32 %v2_bd1c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_bd14, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_bccc, { 1, 2, 0 }
  uselistorder i32 %v0_bc94, { 1, 0 }
  uselistorder i32 %v0_bc88, { 1, 0 }
  uselistorder i32 %v2_bc78, { 1, 0 }
  uselistorder i32 %v2_bc08, { 2, 1, 0 }
  uselistorder i32 %v2_bbf0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_bbe8, { 1, 0, 2 }
  uselistorder i32 %v1_bbe4, { 2, 1, 0 }
  uselistorder i32 %v0_bbe4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_bbc8, { 1, 0 }
  uselistorder i32 %v2_bba0, { 1, 0 }
  uselistorder i32 %v3_bb94, { 1, 0, 2 }
  uselistorder i32 %v2_bb74, { 1, 0, 2 }
  uselistorder i32* %v2_bb6c, { 1, 0, 2 }
  uselistorder i32 %v0_bb54, { 1, 0 }
  uselistorder i32 %v6_bb30, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_bb1c, { 2, 1, 0 }
  uselistorder i32 %v0_bb04, { 1, 0 }
  uselistorder i32 %v2_bac0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_babc, { 1, 0 }
  uselistorder i32 %v3_ba94, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_ba74, { 1, 0, 2 }
  uselistorder i32 %v2_ba5c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_ba04, { 2, 1, 0 }
  uselistorder i32 %v6_b9f8, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_b9d4, { 2, 1, 0, 3 }
  uselistorder i32 %v3_b994, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b954, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_b94c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_b948, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_b934, { 1, 0 }
  uselistorder i32 %v7_b8f4, { 1, 0 }
  uselistorder i32 %v4_b8f4, { 1, 0 }
  uselistorder i32 %v0_b8c4, { 1, 0 }
  uselistorder i32 %v2_b898, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_b89454, { 1, 0 }
  uselistorder i32 %v1_b860, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_b848., { 1, 2, 0 }
  uselistorder i32 %v0_b850, { 0, 1, 3, 2 }
  uselistorder i32 %v1_b850, { 1, 0 }
  uselistorder i32 %v3_b830, { 1, 0 }
  uselistorder i32 %v4_b82c, { 1, 0, 2 }
  uselistorder i32 %v1_b79c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_b7f4, { 1, 0 }
  uselistorder i32 %v1_b7d8, { 1, 0 }
  uselistorder i32 %v1_b678, { 1, 0 }
  uselistorder i32 %v0_b7b8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_b780, { 2, 0, 1, 3 }
  uselistorder i32 %v0_b814.pre, { 1, 2, 0 }
  uselistorder i32 %v0_b75c, { 2, 1, 0 }
  uselistorder i32 %v3_b750, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_b670, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_b718, { 1, 0 }
  uselistorder i32 %v3_b70c, { 1, 0 }
  uselistorder i32 %v0_b718, { 1, 0 }
  uselistorder i32 %v3_b6f0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_b6e0, { 1, 0, 2 }
  uselistorder i32 %v3_b698, { 2, 1, 0 }
  uselistorder i32 %v0_b688, { 3, 2, 1, 0 }
  uselistorder i32 %v0_b658, { 1, 0 }
  uselistorder i32 %v1_b60c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_b608, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_b5ac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_b5a0, { 1, 0 }
  uselistorder i32 %v3_b570, { 1, 0 }
  uselistorder i32 %v0_b564, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_b544, { 0, 2, 1, 3 }
  uselistorder i1 %v7_b538, { 1, 0 }
  uselistorder i32 %v0_b508, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 1, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_bdb0, { 1, 0 }
  uselistorder label %dec_label_pc_bd94, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_bd90, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_bd78, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_bd0c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bc88, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_bc80, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_bb54, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_ba88, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_b940, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b89c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b860, { 1, 0 }
  uselistorder label %dec_label_pc_b814, { 1, 0 }
  uselistorder label %dec_label_pc_b7a8, { 1, 0 }
  uselistorder label %dec_label_pc_b7a4, { 1, 0 }
  uselistorder label %dec_label_pc_b750, { 1, 0 }
  uselistorder label %dec_label_pc_b73c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b704, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_b6f0, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_bdc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_bdc4:
  %v0_bdc4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_bdc4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_bdc4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_bdc4, %bb
  %v10_bde0 = phi i32 [ %arg1, %dec_label_pc_bdc4 ], [ 0, %bb ]
  ret i32 %v10_bde0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_bde4 = add i32 %arg2, 44
  %v2_bde4 = inttoptr i32 %v1_bde4 to i32*
  %v3_bde4 = load i32, i32* %v2_bde4, align 4
  %v3_bde8 = load i32, i32* @r4, align 4
  store i32 %v3_bde8, i32* %stack_var_-20, align 4
  %v12_bde8 = load i32, i32* @r7, align 4
  %v1_bdec = add i32 %v3_bde4, 4
  %v2_bdec = inttoptr i32 %v1_bdec to i32*
  %v3_bdec = load i32, i32* %v2_bdec, align 4
  %v1_bdf0 = add i32 %arg2, 860
  %v2_bdf0 = inttoptr i32 %v1_bdf0 to i32*
  %v3_bdf0 = load i32, i32* %v2_bdf0, align 4
  store i32 %v3_bdf0, i32* @r4, align 4
  %v1_bdf4 = and i32 %v3_bdec, -4
  store i32 %v1_bdf4, i32* @r6, align 4
  %v1_bdf8 = add i32 %v1_bdf4, -17
  %v2_bdfc = add i32 %v1_bdf8, %v3_bdf0
  store i32 %arg2, i32* @r5, align 4
  %v2_be08 = sub i32 %v2_bdfc, %arg1
  store i32 %v3_bdf0, i32* %r1.global-to-local, align 4
  %v2_be10 = udiv i32 %v2_be08, %v3_bdf0
  %v1_be14 = add i32 %v2_be10, -1
  store i32 %v1_be14, i32* %r0.global-to-local, align 4
  %v2_be18 = mul i32 %v1_be14, %v3_bdf0
  store i32 %v2_be18, i32* @r7, align 4
  %v2_be1c = icmp eq i32 %v2_be18, 0
  store i1 %v2_be1c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_be18, 1
  br i1 %tmp8, label %dec_label_pc_be84, label %dec_label_pc_be24

dec_label_pc_be24:                                ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_be28 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_be28, i32* %r0.global-to-local, align 4
  %v0_be2c = load i32, i32* @r5, align 4
  %v1_be2c = add i32 %v0_be2c, 44
  %v2_be2c = inttoptr i32 %v1_be2c to i32*
  %v3_be2c = load i32, i32* %v2_be2c, align 4
  %v0_be30 = load i32, i32* @r6, align 4
  %v2_be30 = add i32 %v0_be30, %v3_be2c
  %v9_be34 = icmp eq i32 %v1_be28, %v2_be30
  store i1 %v9_be34, i1* @cpsr_z, align 1
  store i32 %v1_be28, i32* @r4, align 4
  br i1 %v9_be34, label %dec_label_pc_be40, label %dec_label_pc_be84

dec_label_pc_be40:                                ; preds = %dec_label_pc_be24
  %v0_be40 = load i32, i32* @r7, align 4
  %v1_be40 = sub i32 0, %v0_be40
  store i32 %v1_be40, i32* %r0.global-to-local, align 4
  %v1_be44 = call i32 @__GI_sbrk(i32 %v1_be40)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_be4c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_be4c, i32* %r0.global-to-local, align 4
  %v7_be50 = icmp eq i32 %v1_be4c, -1
  store i1 %v7_be50, i1* @cpsr_z, align 1
  br i1 %v7_be50, label %dec_label_pc_be84, label %dec_label_pc_be58

dec_label_pc_be58:                                ; preds = %dec_label_pc_be40
  %v0_be58 = load i32, i32* @r4, align 4
  %v2_be58 = sub i32 %v0_be58, %v1_be4c
  store i32 %v2_be58, i32* %r0.global-to-local, align 4
  %v9_be58 = icmp eq i32 %v0_be58, %v1_be4c
  store i1 %v9_be58, i1* @cpsr_z, align 1
  br i1 %v9_be58, label %dec_label_pc_be84, label %dec_label_pc_be60

dec_label_pc_be60:                                ; preds = %dec_label_pc_be58
  %v0_be60 = load i32, i32* @r5, align 4
  %v1_be60 = add i32 %v0_be60, 872
  %v2_be60 = inttoptr i32 %v1_be60 to i32*
  %v3_be60 = load i32, i32* %v2_be60, align 4
  %v1_be64 = load i32, i32* @r6, align 4
  %v2_be64 = sub i32 %v1_be64, %v2_be58
  %v1_be68 = add i32 %v0_be60, 44
  %v2_be68 = inttoptr i32 %v1_be68 to i32*
  %v3_be68 = load i32, i32* %v2_be68, align 4
  store i32 %v3_be68, i32* %r1.global-to-local, align 4
  %v2_be6c = sub i32 %v3_be60, %v2_be58
  %v1_be70 = or i32 %v2_be64, 1
  store i32 %v1_be70, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_be6c, i32* %v2_be60, align 4
  %v0_be7c = load i32, i32* @r2, align 4
  %v1_be7c = load i32, i32* %r1.global-to-local, align 4
  %v2_be7c = add i32 %v1_be7c, 4
  %v3_be7c = inttoptr i32 %v2_be7c to i32*
  store i32 %v0_be7c, i32* %v3_be7c, align 4
  %v1_be90.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_be88

dec_label_pc_be84:                                ; preds = %dec_label_pc_be24, %dec_label_pc_be58, %dec_label_pc_be40, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_be88

dec_label_pc_be88:                                ; preds = %dec_label_pc_be60, %dec_label_pc_be84
  %v1_be90 = phi i32 [ %v1_be90.pre, %dec_label_pc_be60 ], [ 0, %dec_label_pc_be84 ]
  %v2_be8c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_be8c, i32* @r4, align 4
  store i32 %v12_bde8, i32* @r7, align 4
  ret i32 %v1_be90

; uselistorder directives
  uselistorder i1 %v7_be50, { 1, 0 }
  uselistorder i32 %v1_be4c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_bdf0, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_be88, { 1, 0 }
  uselistorder label %dec_label_pc_be84, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_be94 = load i32, i32* @r4, align 4
  store i32 %v3_be94, i32* %stack_var_-36, align 4
  %v0_be98 = load i32, i32* @r0, align 4
  %v1_be98 = inttoptr i32 %v0_be98 to i32*
  %v2_be98 = load i32, i32* %v1_be98, align 4
  store i32 %v2_be98, i32* %r3.global-to-local, align 4
  %v2_be9c = icmp eq i32 %v2_be98, 0
  store i32 %v0_be98, i32* @r4, align 4
  br i1 %v2_be9c, label %dec_label_pc_bfd4.preheader, label %dec_label_pc_beb0

dec_label_pc_bfd4.preheader:                      ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_bfdc25 = add i32 %v0_be98, 52
  store i32 %v1_bfdc25, i32* %r3.global-to-local, align 4
  %v2_bfe426 = add i32 %v0_be98, 60
  %v3_bfe427 = inttoptr i32 %v2_bfe426 to i32*
  store i32 %v1_bfdc25, i32* %v3_bfe427, align 4
  %v0_bfe828 = load i32, i32* %r3.global-to-local, align 4
  %v2_bfe829 = add i32 %v0_bfe828, 12
  %v3_bfe830 = inttoptr i32 %v2_bfe829 to i32*
  store i32 %v0_bfe828, i32* %v3_bfe830, align 4
  br label %dec_label_pc_bfd4.dec_label_pc_bfd4_crit_edge

dec_label_pc_beb0:                                ; preds = %entry
  %v1_beb0 = and i32 %v2_be98, -3
  %v3_beb4 = udiv i32 %v2_be98, 8
  store i32 %v3_beb4, i32* %r2.global-to-local, align 4
  store i32 %v1_beb0, i32* %v1_be98, align 4
  %v0_bebc = load i32, i32* @r0, align 4
  %v1_bebc = add i32 %v0_bebc, -4
  store i32 %v1_bebc, i32* %r3.global-to-local, align 4
  %v1_bec0 = load i32, i32* %r2.global-to-local, align 4
  %v4_bec0 = mul i32 %v1_bec0, 4
  %v5_bec0 = add i32 %v4_bec0, %v1_bebc
  store i32 %v5_bec0, i32* %sb.global-to-local, align 4
  %v1_bec4 = add i32 %v0_bebc, 52
  store i32 %v1_bec4, i32* %r7.global-to-local, align 4
  %v1_bec8 = add i32 %v0_bebc, 4
  store i32 %v1_bec8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_bed0

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bfcc, %dec_label_pc_beb0
  %v1_bfc410 = phi i32 [ %v1_bfc4, %dec_label_pc_bfcc ], [ %v5_bec0, %dec_label_pc_beb0 ]
  %v1_bedc = phi i32 [ %v1_bfcc, %dec_label_pc_bfcc ], [ %v1_bec8, %dec_label_pc_beb0 ]
  %v1_bed0 = inttoptr i32 %v1_bedc to i32*
  %v2_bed0 = load i32, i32* %v1_bed0, align 4
  store i32 %v2_bed0, i32* %r1.global-to-local, align 4
  %v2_bed4 = icmp eq i32 %v2_bed0, 0
  br i1 %v2_bed4, label %dec_label_pc_bfc4, label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_bed0
  %v0_bedc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_bedc, i32* %v1_bed0, align 4
  %v0_bee0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bee0

dec_label_pc_bee0:                                ; preds = %dec_label_pc_bfb8, %dec_label_pc_bedc
  %v0_befc = phi i32 [ %v0_bfb8, %dec_label_pc_bfb8 ], [ %v0_bee0.pre, %dec_label_pc_bedc ]
  %v1_bee0 = add i32 %v0_befc, 4
  %v2_bee0 = inttoptr i32 %v1_bee0 to i32*
  %v3_bee0 = load i32, i32* %v2_bee0, align 4
  store i32 %v3_bee0, i32* %r3.global-to-local, align 4
  %v1_bee4 = and i32 %v3_bee0, -2
  store i32 %v1_bee4, i32* %lr.global-to-local, align 4
  %v2_bee8 = add i32 %v1_bee4, %v0_befc
  store i32 %v2_bee8, i32* @r0, align 4
  %v1_beec = urem i32 %v3_bee0, 2
  %v2_beec = icmp eq i32 %v1_beec, 0
  %v1_bef0 = add i32 %v0_befc, 8
  %v2_bef0 = inttoptr i32 %v1_bef0 to i32*
  %v3_bef0 = load i32, i32* %v2_bef0, align 4
  store i32 %v3_bef0, i32* %sl.global-to-local, align 4
  %v1_bef4 = add i32 %v2_bee8, 4
  %v2_bef4 = inttoptr i32 %v1_bef4 to i32*
  %v3_bef4 = load i32, i32* %v2_bef4, align 4
  store i32 %v3_bef4, i32* %r8.global-to-local, align 4
  br i1 %v2_beec, label %dec_label_pc_befc, label %dec_label_pc_bf30

dec_label_pc_befc:                                ; preds = %dec_label_pc_bee0
  %v1_befc = inttoptr i32 %v0_befc to i32*
  %v2_befc = load i32, i32* %v1_befc, align 4
  store i32 %v2_befc, i32* %r5.global-to-local, align 4
  %v2_bf00 = sub i32 %v0_befc, %v2_befc
  store i32 %v2_bf00, i32* %r3.global-to-local, align 4
  %v1_bf04 = add i32 %v2_bf00, 8
  %v2_bf04 = inttoptr i32 %v1_bf04 to i32*
  %v3_bf04 = load i32, i32* %v2_bf04, align 4
  store i32 %v3_bf04, i32* %ip.global-to-local, align 4
  %v1_bf08 = add i32 %v3_bf04, 12
  %v2_bf08 = inttoptr i32 %v1_bf08 to i32*
  %v3_bf08 = load i32, i32* %v2_bf08, align 4
  store i32 %v3_bf08, i32* %r1.global-to-local, align 4
  %v9_bf0c = icmp eq i32 %v3_bf08, %v2_bf00
  %v1_bf10 = add i32 %v2_bf00, 12
  %v2_bf10 = inttoptr i32 %v1_bf10 to i32*
  %v3_bf10 = load i32, i32* %v2_bf10, align 4
  store i32 %v3_bf10, i32* %r2.global-to-local, align 4
  br i1 %v9_bf0c, label %dec_label_pc_bf18, label %dec_label_pc_bf74

dec_label_pc_bf18:                                ; preds = %dec_label_pc_befc
  %v1_bf18 = add i32 %v3_bf10, 8
  %v2_bf18 = inttoptr i32 %v1_bf18 to i32*
  %v3_bf18 = load i32, i32* %v2_bf18, align 4
  store i32 %v3_bf18, i32* %r3.global-to-local, align 4
  %v9_bf1c = icmp eq i32 %v3_bf18, %v2_bf00
  br i1 %v9_bf1c, label %dec_label_pc_bf24, label %dec_label_pc_bf74

dec_label_pc_bf24:                                ; preds = %dec_label_pc_bf18
  store i32 %v3_bf04, i32* %v2_bf18, align 4
  %v0_bf28 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf28 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf28 = add i32 %v1_bf28, 12
  %v3_bf28 = inttoptr i32 %v2_bf28 to i32*
  store i32 %v0_bf28, i32* %v3_bf28, align 4
  %v0_bf2c = load i32, i32* %lr.global-to-local, align 4
  %v1_bf2c = load i32, i32* %r5.global-to-local, align 4
  %v2_bf2c = add i32 %v1_bf2c, %v0_bf2c
  store i32 %v2_bf2c, i32* %lr.global-to-local, align 4
  %v0_bf34.pre = load i32, i32* @r0, align 4
  %v0_bf38.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_bf30

dec_label_pc_bf30:                                ; preds = %dec_label_pc_bee0, %dec_label_pc_bf24
  %v0_bfa8 = phi i32 [ %v1_bee4, %dec_label_pc_bee0 ], [ %v2_bf2c, %dec_label_pc_bf24 ]
  %v0_bf38 = phi i32 [ %v3_bef4, %dec_label_pc_bee0 ], [ %v0_bf38.pre, %dec_label_pc_bf24 ]
  %v1_bf4c = phi i32 [ %v2_bee8, %dec_label_pc_bee0 ], [ %v0_bf34.pre, %dec_label_pc_bf24 ]
  %v0_bf30 = load i32, i32* @r4, align 4
  %v1_bf30 = add i32 %v0_bf30, 44
  %v2_bf30 = inttoptr i32 %v1_bf30 to i32*
  %v3_bf30 = load i32, i32* %v2_bf30, align 4
  store i32 %v3_bf30, i32* %r3.global-to-local, align 4
  %v9_bf34 = icmp eq i32 %v1_bf4c, %v3_bf30
  %v1_bf38 = and i32 %v0_bf38, -4
  store i32 %v1_bf38, i32* %r5.global-to-local, align 4
  br i1 %v9_bf34, label %dec_label_pc_bfa8, label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf30
  %v2_bf40 = add i32 %v1_bf4c, %v1_bf38
  store i32 %v2_bf40, i32* %r3.global-to-local, align 4
  %v1_bf44 = add i32 %v2_bf40, 4
  %v2_bf44 = inttoptr i32 %v1_bf44 to i32*
  %v3_bf44 = load i32, i32* %v2_bf44, align 4
  store i32 %v3_bf44, i32* %r3.global-to-local, align 4
  %v1_bf48 = urem i32 %v3_bf44, 2
  %v2_bf48 = icmp eq i32 %v1_bf48, 0
  %v2_bf4c = add i32 %v1_bf4c, 4
  %v3_bf4c = inttoptr i32 %v2_bf4c to i32*
  store i32 %v1_bf38, i32* %v3_bf4c, align 4
  br i1 %v2_bf48, label %dec_label_pc_bf54, label %dec_label_pc_bf40.dec_label_pc_bf84_crit_edge

dec_label_pc_bf40.dec_label_pc_bf84_crit_edge:    ; preds = %dec_label_pc_bf40
  %v0_bf88.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_bf84

dec_label_pc_bf54:                                ; preds = %dec_label_pc_bf40
  %v0_bf54 = load i32, i32* @r0, align 4
  %v1_bf54 = add i32 %v0_bf54, 8
  %v2_bf54 = inttoptr i32 %v1_bf54 to i32*
  %v3_bf54 = load i32, i32* %v2_bf54, align 4
  store i32 %v3_bf54, i32* %ip.global-to-local, align 4
  %v1_bf58 = add i32 %v3_bf54, 12
  %v2_bf58 = inttoptr i32 %v1_bf58 to i32*
  %v3_bf58 = load i32, i32* %v2_bf58, align 4
  store i32 %v3_bf58, i32* %r3.global-to-local, align 4
  %v9_bf5c = icmp eq i32 %v3_bf58, %v0_bf54
  %v1_bf60 = add i32 %v0_bf54, 12
  %v2_bf60 = inttoptr i32 %v1_bf60 to i32*
  %v3_bf60 = load i32, i32* %v2_bf60, align 4
  store i32 %v3_bf60, i32* %r2.global-to-local, align 4
  br i1 %v9_bf5c, label %dec_label_pc_bf68, label %dec_label_pc_bf74

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf54
  %v1_bf68 = add i32 %v3_bf60, 8
  %v2_bf68 = inttoptr i32 %v1_bf68 to i32*
  %v3_bf68 = load i32, i32* %v2_bf68, align 4
  store i32 %v3_bf68, i32* %r3.global-to-local, align 4
  %v9_bf6c = icmp eq i32 %v3_bf68, %v0_bf54
  br i1 %v9_bf6c, label %dec_label_pc_bf78, label %dec_label_pc_bf74

dec_label_pc_bf74:                                ; preds = %dec_label_pc_bf54, %dec_label_pc_bf18, %dec_label_pc_befc, %dec_label_pc_bf68
  %v0_bf74 = call i32 @abort()
  store i32 %v0_bf74, i32* @r0, align 4
  %v0_bf78.pre = load i32, i32* @ip, align 4
  %v1_bf78.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_bf78

dec_label_pc_bf78:                                ; preds = %dec_label_pc_bf68, %dec_label_pc_bf74
  %v1_bf78 = phi i32 [ %v3_bf60, %dec_label_pc_bf68 ], [ %v1_bf78.pre, %dec_label_pc_bf74 ]
  %v0_bf78 = phi i32 [ %v3_bf54, %dec_label_pc_bf68 ], [ %v0_bf78.pre, %dec_label_pc_bf74 ]
  %v2_bf78 = add i32 %v1_bf78, 8
  %v3_bf78 = inttoptr i32 %v2_bf78 to i32*
  store i32 %v0_bf78, i32* %v3_bf78, align 4
  %v0_bf7c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf7c = load i32, i32* %ip.global-to-local, align 4
  %v2_bf7c = add i32 %v1_bf7c, 12
  %v3_bf7c = inttoptr i32 %v2_bf7c to i32*
  store i32 %v0_bf7c, i32* %v3_bf7c, align 4
  %v0_bf80 = load i32, i32* %lr.global-to-local, align 4
  %v1_bf80 = load i32, i32* %r5.global-to-local, align 4
  %v2_bf80 = add i32 %v1_bf80, %v0_bf80
  store i32 %v2_bf80, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf40.dec_label_pc_bf84_crit_edge, %dec_label_pc_bf78
  %v0_bf88 = phi i32 [ %v0_bf88.pre, %dec_label_pc_bf40.dec_label_pc_bf84_crit_edge ], [ %v2_bf80, %dec_label_pc_bf78 ]
  %v0_bf84 = load i32, i32* %r7.global-to-local, align 4
  %v1_bf84 = add i32 %v0_bf84, 8
  %v2_bf84 = inttoptr i32 %v1_bf84 to i32*
  %v3_bf84 = load i32, i32* %v2_bf84, align 4
  store i32 %v3_bf84, i32* %r2.global-to-local, align 4
  %v1_bf88 = or i32 %v0_bf88, 1
  store i32 %v1_bf88, i32* %r3.global-to-local, align 4
  %v0_bf8c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_bf8c, i32* %v2_bf84, align 4
  %v0_bf90 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf90 = load i32, i32* %r2.global-to-local, align 4
  %v2_bf90 = add i32 %v1_bf90, 12
  %v3_bf90 = inttoptr i32 %v2_bf90 to i32*
  store i32 %v0_bf90, i32* %v3_bf90, align 4
  %v0_bf94 = load i32, i32* %lr.global-to-local, align 4
  %v1_bf94 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf94 = add i32 %v1_bf94, %v0_bf94
  %v4_bf94 = inttoptr i32 %v3_bf94 to i32*
  store i32 %v0_bf94, i32* %v4_bf94, align 4
  %v0_bf98 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf98 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf98 = add i32 %v1_bf98, 4
  %v3_bf98 = inttoptr i32 %v2_bf98 to i32*
  store i32 %v0_bf98, i32* %v3_bf98, align 4
  %v0_bf9c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf9c = load i32, i32* %r1.global-to-local, align 4
  %v2_bf9c = add i32 %v1_bf9c, 8
  %v3_bf9c = inttoptr i32 %v2_bf9c to i32*
  store i32 %v0_bf9c, i32* %v3_bf9c, align 4
  %v0_bfa0 = load i32, i32* %r7.global-to-local, align 4
  %v1_bfa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_bfa0 = add i32 %v1_bfa0, 12
  %v3_bfa0 = inttoptr i32 %v2_bfa0 to i32*
  store i32 %v0_bfa0, i32* %v3_bfa0, align 4
  br label %dec_label_pc_bfb8

dec_label_pc_bfa8:                                ; preds = %dec_label_pc_bf30
  %v2_bfa8 = add i32 %v1_bf38, %v0_bfa8
  %v1_bfac = or i32 %v2_bfa8, 1
  store i32 %v1_bfac, i32* %r3.global-to-local, align 4
  %v1_bfb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_bfb0 = add i32 %v1_bfb0, 4
  %v3_bfb0 = inttoptr i32 %v2_bfb0 to i32*
  store i32 %v1_bfac, i32* %v3_bfb0, align 4
  %v0_bfb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bfb4 = load i32, i32* @r4, align 4
  %v2_bfb4 = add i32 %v1_bfb4, 44
  %v3_bfb4 = inttoptr i32 %v2_bfb4 to i32*
  store i32 %v0_bfb4, i32* %v3_bfb4, align 4
  br label %dec_label_pc_bfb8

dec_label_pc_bfb8:                                ; preds = %dec_label_pc_bf84, %dec_label_pc_bfa8
  %v0_bfb8 = load i32, i32* %sl.global-to-local, align 4
  %v2_bfb8 = icmp eq i32 %v0_bfb8, 0
  store i32 %v0_bfb8, i32* %r1.global-to-local, align 4
  br i1 %v2_bfb8, label %dec_label_pc_bfc4.loopexit, label %dec_label_pc_bee0

dec_label_pc_bfc4.loopexit:                       ; preds = %dec_label_pc_bfb8
  %v0_bfc4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_bfc4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bfc4.loopexit, %dec_label_pc_bed0
  %v1_bfc4 = phi i32 [ %v1_bfc4.pre, %dec_label_pc_bfc4.loopexit ], [ %v1_bfc410, %dec_label_pc_bed0 ]
  %v0_bfcc = phi i32 [ %v0_bfc4.pre, %dec_label_pc_bfc4.loopexit ], [ %v1_bedc, %dec_label_pc_bed0 ]
  %v9_bfc4 = icmp eq i32 %v0_bfcc, %v1_bfc4
  br i1 %v9_bfc4, label %dec_label_pc_c03c, label %dec_label_pc_bfcc

dec_label_pc_bfcc:                                ; preds = %dec_label_pc_bfc4
  %v1_bfcc = add i32 %v0_bfcc, 4
  store i32 %v1_bfcc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_bed0

dec_label_pc_bfd4.dec_label_pc_bfd4_crit_edge:    ; preds = %dec_label_pc_bfd4.preheader, %dec_label_pc_bfd4.dec_label_pc_bfd4_crit_edge
  %v0_bfd4.pre = load i32, i32* @r4, align 4
  %v1_bfd4.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_bfd4 = mul i32 %v1_bfd4.pre, 8
  %v5_bfd4 = add i32 %v4_bfd4, %v0_bfd4.pre
  %v1_bfd8 = add i32 %v1_bfd4.pre, 1
  store i32 %v1_bfd8, i32* %r2.global-to-local, align 4
  %v1_bfdc = add i32 %v5_bfd4, 44
  store i32 %v1_bfdc, i32* %r3.global-to-local, align 4
  %v2_bfe4 = add i32 %v5_bfd4, 52
  %v3_bfe4 = inttoptr i32 %v2_bfe4 to i32*
  store i32 %v1_bfdc, i32* %v3_bfe4, align 4
  %v0_bfe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_bfe8 = add i32 %v0_bfe8, 12
  %v3_bfe8 = inttoptr i32 %v2_bfe8 to i32*
  store i32 %v0_bfe8, i32* %v3_bfe8, align 4
  %v7_bfec = icmp sgt i32 %v1_bfd8, 95
  br i1 %v7_bfec, label %dec_label_pc_bff0, label %dec_label_pc_bfd4.dec_label_pc_bfd4_crit_edge

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bfd4.dec_label_pc_bfd4_crit_edge
  %v0_bff0 = load i32, i32* @r4, align 4
  %v1_bff0 = inttoptr i32 %v0_bff0 to i32*
  %v2_bff0 = load i32, i32* %v1_bff0, align 4
  store i32 %v2_bff0, i32* %r2.global-to-local, align 4
  %v1_bff4 = add i32 %v0_bff0, 864
  %v2_bff4 = inttoptr i32 %v1_bff4 to i32*
  %v3_bff4 = load i32, i32* %v2_bff4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_bffc = urem i32 %v2_bff0, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_c004 = or i32 %v3_bff4, 1
  store i32 %v1_c004, i32* %r1.global-to-local, align 4
  %v1_c008 = or i32 %v1_bffc, 72
  store i32 %v1_c008, i32* %r2.global-to-local, align 4
  %v1_c00c = add i32 %v0_bff0, 52
  store i32 %v1_c00c, i32* %ip.global-to-local, align 4
  %v2_c010 = add i32 %v0_bff0, 840
  %v3_c010 = inttoptr i32 %v2_c010 to i32*
  store i32 0, i32* %v3_c010, align 4
  %v0_c014 = load i32, i32* %r3.global-to-local, align 4
  %v1_c014 = add i32 %v0_c014, 65536
  store i32 %v1_c014, i32* %r3.global-to-local, align 4
  %v0_c018 = load i32, i32* %r0.global-to-local, align 4
  %v1_c018 = load i32, i32* @r4, align 4
  %v2_c018 = add i32 %v1_c018, 836
  %v3_c018 = inttoptr i32 %v2_c018 to i32*
  store i32 %v0_c018, i32* %v3_c018, align 4
  %v0_c01c = load i32, i32* %r0.global-to-local, align 4
  %v1_c01c = load i32, i32* @r4, align 4
  %v2_c01c = add i32 %v1_c01c, 844
  %v3_c01c = inttoptr i32 %v2_c01c to i32*
  store i32 %v0_c01c, i32* %v3_c01c, align 4
  %v1_c020 = load i32, i32* @r4, align 4
  %v2_c020 = add i32 %v1_c020, 852
  %v3_c020 = inttoptr i32 %v2_c020 to i32*
  store i32 %v1_c014, i32* %v3_c020, align 4
  %v1_c024 = load i32, i32* @r4, align 4
  %v2_c024 = add i32 %v1_c024, 864
  %v3_c024 = inttoptr i32 %v2_c024 to i32*
  store i32 %v1_c004, i32* %v3_c024, align 4
  %v1_c028 = load i32, i32* @r4, align 4
  %v2_c028 = inttoptr i32 %v1_c028 to i32*
  store i32 %v1_c008, i32* %v2_c028, align 4
  %v0_c02c = load i32, i32* %ip.global-to-local, align 4
  %v1_c02c = load i32, i32* @r4, align 4
  %v2_c02c = add i32 %v1_c02c, 44
  %v3_c02c = inttoptr i32 %v2_c02c to i32*
  store i32 %v0_c02c, i32* %v3_c02c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_c034 = call i32 @sysconf(i32 30, i32 %v1_c004, i32 %v1_c008, i32 %v1_c014)
  store i32 %v4_c034, i32* @r0, align 4
  %v1_c038 = load i32, i32* @r4, align 4
  %v2_c038 = add i32 %v1_c038, 860
  %v3_c038 = inttoptr i32 %v2_c038 to i32*
  store i32 %v4_c034, i32* %v3_c038, align 4
  br label %dec_label_pc_c03c

dec_label_pc_c03c:                                ; preds = %dec_label_pc_bfc4, %dec_label_pc_bff0
  %v2_c040 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_c040, i32* @r4, align 4
  %v1_c044 = load i32, i32* @r0, align 4
  ret i32 %v1_c044

; uselistorder directives
  uselistorder i32 %v0_bff0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bfe8, { 1, 0 }
  uselistorder i32 %v1_bfcc, { 1, 0 }
  uselistorder i32 %v0_bfb8, { 0, 2, 1 }
  uselistorder i32 %v0_bf94, { 1, 0 }
  uselistorder i32 %v1_bee4, { 1, 0, 2 }
  uselistorder i32 %v0_befc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_bebc, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_c03c, { 1, 0 }
  uselistorder label %dec_label_pc_bfd4.dec_label_pc_bfd4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_bfb8, { 1, 0 }
  uselistorder label %dec_label_pc_bf84, { 1, 0 }
  uselistorder label %dec_label_pc_bf78, { 1, 0 }
  uselistorder label %dec_label_pc_bf74, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_bf30, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c048 = load i32, i32* @r4, align 4
  %v6_c048 = load i32, i32* @r5, align 4
  %v9_c048 = load i32, i32* @r6, align 4
  %v12_c048 = load i32, i32* @r7, align 4
  %v18_c048 = load i32, i32* @lr, align 4
  %v0_c050 = load i32, i32* @r0, align 4
  store i32 %v0_c050, i32* @r6, align 4
  %v2_c050 = icmp eq i32 %v0_c050, 0
  %v2_c054 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r7, align 4
  br i1 %v2_c050, label %dec_label_pc_c25c, label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %entry
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_c064 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 116) to i32*), align 4
  store i32 %v4_c064, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_c064, i32* %r2.global-to-local, align 4
  %v4_c070 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 72) to i32*), align 4
  store i32 %v4_c070, i32* %r1.global-to-local, align 4
  store i32 %v2_c054, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_c07c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  store i32 %v4_c07c, i32* %ip.global-to-local, align 4
  store i32 49288, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_c07c)
  %v0_c088 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c088, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_c090 = load i32, i32* @r7, align 4
  %v2_c090 = add i32 %v0_c090, 16
  %v3_c090 = inttoptr i32 %v2_c090 to i32*
  %v4_c090 = load i32, i32* %v3_c090, align 4
  store i32 %v4_c090, i32* %ip.global-to-local, align 4
  store i32 49308, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_c090)
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c0a0 = load i32, i32* @r7, align 4
  %v2_c0a0 = add i32 %v0_c0a0, 68
  %v3_c0a0 = inttoptr i32 %v2_c0a0 to i32*
  %v4_c0a0 = load i32, i32* %v3_c0a0, align 4
  store i32 %v4_c0a0, i32* @lr, align 4
  %v0_c0a4 = load i32, i32* @r6, align 4
  %v1_c0a4 = add i32 %v0_c0a4, -4
  %v2_c0a4 = inttoptr i32 %v1_c0a4 to i32*
  %v3_c0a4 = load i32, i32* %v2_c0a4, align 4
  store i32 %v3_c0a4, i32* %r2.global-to-local, align 4
  %v1_c0a8 = inttoptr i32 %v4_c0a0 to i32*
  %v2_c0a8 = load i32, i32* %v1_c0a8, align 4
  store i32 %v2_c0a8, i32* %r3.global-to-local, align 4
  %v1_c0ac = and i32 %v3_c0a4, -4
  store i32 %v1_c0ac, i32* %ip.global-to-local, align 4
  %v1_c0b0 = add i32 %v0_c0a4, -8
  store i32 %v1_c0b0, i32* @r5, align 4
  store i32 %v1_c0b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_c0ac, %v2_c0a8
  br i1 %tmp, label %dec_label_pc_c0e0, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c060
  %v1_c0c0 = or i32 %v2_c0a8, 3
  store i32 %v1_c0c0, i32* %r3.global-to-local, align 4
  store i32 %v1_c0c0, i32* %v1_c0a8, align 4
  %v3_c0c4 = load i32, i32* @lr, align 4
  %v4_c0c4 = add i32 %v3_c0c4, -8
  store i32 %v4_c0c4, i32* %lr.global-to-local, align 4
  %v0_c0c8 = load i32, i32* %ip.global-to-local, align 4
  %v3_c0c8 = udiv i32 %v0_c0c8, 8
  store i32 %v3_c0c8, i32* %r1.global-to-local, align 4
  %v1_c0cc = add i32 %v3_c0c4, -4
  store i32 %v1_c0cc, i32* @r2, align 4
  %v4_c0d0 = mul nuw i32 %v3_c0c8, 4
  %v5_c0d0 = add i32 %v4_c0d0, %v1_c0cc
  %v6_c0d0 = inttoptr i32 %v5_c0d0 to i32*
  %v7_c0d0 = load i32, i32* %v6_c0d0, align 4
  store i32 %v7_c0d0, i32* %r3.global-to-local, align 4
  %v1_c0d4 = load i32, i32* @r5, align 4
  %v2_c0d4 = add i32 %v1_c0d4, 8
  %v3_c0d4 = inttoptr i32 %v2_c0d4 to i32*
  store i32 %v7_c0d0, i32* %v3_c0d4, align 4
  %v0_c0d8 = load i32, i32* @r5, align 4
  %v1_c0d8 = load i32, i32* @r2, align 4
  %v2_c0d8 = load i32, i32* %r1.global-to-local, align 4
  %v5_c0d8 = mul i32 %v2_c0d8, 4
  %v6_c0d8 = add i32 %v5_c0d8, %v1_c0d8
  %v7_c0d8 = inttoptr i32 %v6_c0d8 to i32*
  store i32 %v0_c0d8, i32* %v7_c0d8, align 4
  br label %dec_label_pc_c244

dec_label_pc_c0e0:                                ; preds = %dec_label_pc_c060
  %v1_c0e0 = and i32 %v3_c0a4, 2
  %v2_c0e0 = icmp eq i32 %v1_c0e0, 0
  br i1 %v2_c0e0, label %dec_label_pc_c0e8, label %dec_label_pc_c21c

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c0e0
  %v1_c0e8 = or i32 %v2_c0a8, 1
  store i32 %v1_c0e8, i32* %r3.global-to-local, align 4
  store i32 %v1_c0e8, i32* %v1_c0a8, align 4
  %v0_c0f0 = load i32, i32* @r6, align 4
  %v1_c0f0 = add i32 %v0_c0f0, -4
  %v2_c0f0 = inttoptr i32 %v1_c0f0 to i32*
  %v3_c0f0 = load i32, i32* %v2_c0f0, align 4
  store i32 %v3_c0f0, i32* %r3.global-to-local, align 4
  %v0_c0f4 = load i32, i32* @r5, align 4
  %v1_c0f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_c0f4 = add i32 %v1_c0f4, %v0_c0f4
  store i32 %v2_c0f4, i32* %lr.global-to-local, align 4
  %v1_c0f8 = urem i32 %v3_c0f0, 2
  %v2_c0f8 = icmp eq i32 %v1_c0f8, 0
  %v1_c0fc = add i32 %v2_c0f4, 4
  %v2_c0fc = inttoptr i32 %v1_c0fc to i32*
  %v3_c0fc = load i32, i32* %v2_c0fc, align 4
  store i32 %v3_c0fc, i32* %r8.global-to-local, align 4
  br i1 %v2_c0f8, label %dec_label_pc_c104, label %dec_label_pc_c138

dec_label_pc_c104:                                ; preds = %dec_label_pc_c0e8
  %v1_c104 = add i32 %v0_c0f0, -8
  %v2_c104 = inttoptr i32 %v1_c104 to i32*
  %v3_c104 = load i32, i32* %v2_c104, align 4
  store i32 %v3_c104, i32* %r1.global-to-local, align 4
  %v2_c108 = sub i32 %v0_c0f4, %v3_c104
  store i32 %v2_c108, i32* %r3.global-to-local, align 4
  %v1_c10c = add i32 %v2_c108, 8
  %v2_c10c = inttoptr i32 %v1_c10c to i32*
  %v3_c10c = load i32, i32* %v2_c10c, align 4
  store i32 %v3_c10c, i32* %r2.global-to-local, align 4
  %v1_c110 = add i32 %v3_c10c, 12
  %v2_c110 = inttoptr i32 %v1_c110 to i32*
  %v3_c110 = load i32, i32* %v2_c110, align 4
  store i32 %v3_c110, i32* %r4.global-to-local, align 4
  %v9_c114 = icmp eq i32 %v3_c110, %v2_c108
  %v1_c118 = add i32 %v2_c108, 12
  %v2_c118 = inttoptr i32 %v1_c118 to i32*
  %v3_c118 = load i32, i32* %v2_c118, align 4
  store i32 %v3_c118, i32* %r0.global-to-local, align 4
  br i1 %v9_c114, label %dec_label_pc_c120, label %dec_label_pc_c184

dec_label_pc_c120:                                ; preds = %dec_label_pc_c104
  %v1_c120 = add i32 %v3_c118, 8
  %v2_c120 = inttoptr i32 %v1_c120 to i32*
  %v3_c120 = load i32, i32* %v2_c120, align 4
  store i32 %v3_c120, i32* %r3.global-to-local, align 4
  %v9_c124 = icmp eq i32 %v3_c120, %v2_c108
  br i1 %v9_c124, label %dec_label_pc_c12c, label %dec_label_pc_c184

dec_label_pc_c12c:                                ; preds = %dec_label_pc_c120
  store i32 %v3_c10c, i32* %v2_c120, align 4
  %v0_c130 = load i32, i32* %r0.global-to-local, align 4
  %v1_c130 = load i32, i32* %r2.global-to-local, align 4
  %v2_c130 = add i32 %v1_c130, 12
  %v3_c130 = inttoptr i32 %v2_c130 to i32*
  store i32 %v0_c130, i32* %v3_c130, align 4
  %v0_c134 = load i32, i32* %ip.global-to-local, align 4
  %v1_c134 = load i32, i32* %r1.global-to-local, align 4
  %v2_c134 = add i32 %v1_c134, %v0_c134
  store i32 %v2_c134, i32* %ip.global-to-local, align 4
  %v0_c144.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_c148.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_c138

dec_label_pc_c138:                                ; preds = %dec_label_pc_c0e8, %dec_label_pc_c12c
  %v0_c1c4 = phi i32 [ %v1_c0f4, %dec_label_pc_c0e8 ], [ %v2_c134, %dec_label_pc_c12c ]
  %v0_c148 = phi i32 [ %v3_c0fc, %dec_label_pc_c0e8 ], [ %v0_c148.pre, %dec_label_pc_c12c ]
  %v1_c15c = phi i32 [ %v2_c0f4, %dec_label_pc_c0e8 ], [ %v0_c144.pre, %dec_label_pc_c12c ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c13c = load i32, i32* @r7, align 4
  %v2_c13c = add i32 %v0_c13c, 68
  %v3_c13c = inttoptr i32 %v2_c13c to i32*
  %v4_c13c = load i32, i32* %v3_c13c, align 4
  store i32 %v4_c13c, i32* @r2, align 4
  %v1_c140 = add i32 %v4_c13c, 44
  %v2_c140 = inttoptr i32 %v1_c140 to i32*
  %v3_c140 = load i32, i32* %v2_c140, align 4
  store i32 %v3_c140, i32* %r3.global-to-local, align 4
  %v9_c144 = icmp eq i32 %v1_c15c, %v3_c140
  %v1_c148 = and i32 %v0_c148, -4
  store i32 %v1_c148, i32* %r0.global-to-local, align 4
  br i1 %v9_c144, label %dec_label_pc_c1c4, label %dec_label_pc_c150

dec_label_pc_c150:                                ; preds = %dec_label_pc_c138
  %v2_c150 = add i32 %v1_c15c, %v1_c148
  store i32 %v2_c150, i32* %r3.global-to-local, align 4
  %v1_c154 = add i32 %v2_c150, 4
  %v2_c154 = inttoptr i32 %v1_c154 to i32*
  %v3_c154 = load i32, i32* %v2_c154, align 4
  store i32 %v3_c154, i32* %r3.global-to-local, align 4
  %v1_c158 = urem i32 %v3_c154, 2
  %v2_c158 = icmp eq i32 %v1_c158, 0
  %v2_c15c = add i32 %v1_c15c, 4
  %v3_c15c = inttoptr i32 %v2_c15c to i32*
  store i32 %v1_c148, i32* %v3_c15c, align 4
  br i1 %v2_c158, label %dec_label_pc_c164, label %dec_label_pc_c150.dec_label_pc_c194_crit_edge

dec_label_pc_c150.dec_label_pc_c194_crit_edge:    ; preds = %dec_label_pc_c150
  %v0_c1a4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c194

dec_label_pc_c164:                                ; preds = %dec_label_pc_c150
  %v0_c164 = load i32, i32* %lr.global-to-local, align 4
  %v1_c164 = add i32 %v0_c164, 8
  %v2_c164 = inttoptr i32 %v1_c164 to i32*
  %v3_c164 = load i32, i32* %v2_c164, align 4
  store i32 %v3_c164, i32* %r1.global-to-local, align 4
  %v1_c168 = add i32 %v3_c164, 12
  %v2_c168 = inttoptr i32 %v1_c168 to i32*
  %v3_c168 = load i32, i32* %v2_c168, align 4
  store i32 %v3_c168, i32* %r3.global-to-local, align 4
  %v9_c16c = icmp eq i32 %v3_c168, %v0_c164
  %v1_c170 = add i32 %v0_c164, 12
  %v2_c170 = inttoptr i32 %v1_c170 to i32*
  %v3_c170 = load i32, i32* %v2_c170, align 4
  store i32 %v3_c170, i32* %r2.global-to-local, align 4
  br i1 %v9_c16c, label %dec_label_pc_c178, label %dec_label_pc_c184

dec_label_pc_c178:                                ; preds = %dec_label_pc_c164
  %v1_c178 = add i32 %v3_c170, 8
  %v2_c178 = inttoptr i32 %v1_c178 to i32*
  %v3_c178 = load i32, i32* %v2_c178, align 4
  store i32 %v3_c178, i32* %r3.global-to-local, align 4
  %v9_c17c = icmp eq i32 %v3_c178, %v0_c164
  br i1 %v9_c17c, label %dec_label_pc_c188, label %dec_label_pc_c184

dec_label_pc_c184:                                ; preds = %dec_label_pc_c164, %dec_label_pc_c120, %dec_label_pc_c104, %dec_label_pc_c178
  %v0_c184 = call i32 @abort()
  store i32 %v0_c184, i32* %r0.global-to-local, align 4
  %v0_c188.pre = load i32, i32* @r1, align 4
  %v1_c188.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_c188

dec_label_pc_c188:                                ; preds = %dec_label_pc_c178, %dec_label_pc_c184
  %v1_c188 = phi i32 [ %v3_c170, %dec_label_pc_c178 ], [ %v1_c188.pre, %dec_label_pc_c184 ]
  %v0_c188 = phi i32 [ %v3_c164, %dec_label_pc_c178 ], [ %v0_c188.pre, %dec_label_pc_c184 ]
  %v2_c188 = add i32 %v1_c188, 8
  %v3_c188 = inttoptr i32 %v2_c188 to i32*
  store i32 %v0_c188, i32* %v3_c188, align 4
  %v0_c18c = load i32, i32* %r2.global-to-local, align 4
  %v1_c18c = load i32, i32* %r1.global-to-local, align 4
  %v2_c18c = add i32 %v1_c18c, 12
  %v3_c18c = inttoptr i32 %v2_c18c to i32*
  store i32 %v0_c18c, i32* %v3_c18c, align 4
  %v0_c190 = load i32, i32* %ip.global-to-local, align 4
  %v1_c190 = load i32, i32* %r0.global-to-local, align 4
  %v2_c190 = add i32 %v1_c190, %v0_c190
  store i32 %v2_c190, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c194

dec_label_pc_c194:                                ; preds = %dec_label_pc_c150.dec_label_pc_c194_crit_edge, %dec_label_pc_c188
  %v0_c1a4 = phi i32 [ %v0_c1a4.pre, %dec_label_pc_c150.dec_label_pc_c194_crit_edge ], [ %v2_c190, %dec_label_pc_c188 ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c198 = load i32, i32* @r7, align 4
  %v2_c198 = add i32 %v0_c198, 68
  %v3_c198 = inttoptr i32 %v2_c198 to i32*
  %v4_c198 = load i32, i32* %v3_c198, align 4
  %v1_c19c = add i32 %v4_c198, 52
  store i32 %v1_c19c, i32* %r3.global-to-local, align 4
  %v1_c1a0 = add i32 %v4_c198, 60
  %v2_c1a0 = inttoptr i32 %v1_c1a0 to i32*
  %v3_c1a0 = load i32, i32* %v2_c1a0, align 4
  store i32 %v3_c1a0, i32* %r1.global-to-local, align 4
  %v1_c1a4 = or i32 %v0_c1a4, 1
  store i32 %v1_c1a4, i32* @r2, align 4
  %v1_c1a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_c1a8 = add i32 %v1_c1a8, 12
  %v3_c1a8 = inttoptr i32 %v2_c1a8 to i32*
  store i32 %v1_c19c, i32* %v3_c1a8, align 4
  %v0_c1ac = load i32, i32* %r1.global-to-local, align 4
  %v1_c1ac = load i32, i32* %r4.global-to-local, align 4
  %v2_c1ac = add i32 %v1_c1ac, 8
  %v3_c1ac = inttoptr i32 %v2_c1ac to i32*
  store i32 %v0_c1ac, i32* %v3_c1ac, align 4
  %v0_c1b0 = load i32, i32* @r2, align 4
  %v1_c1b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c1b0 = add i32 %v1_c1b0, 4
  %v3_c1b0 = inttoptr i32 %v2_c1b0 to i32*
  store i32 %v0_c1b0, i32* %v3_c1b0, align 4
  %v0_c1b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c1b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c1b4 = add i32 %v1_c1b4, %v0_c1b4
  %v4_c1b4 = inttoptr i32 %v3_c1b4 to i32*
  store i32 %v0_c1b4, i32* %v4_c1b4, align 4
  %v0_c1b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c1b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_c1b8 = add i32 %v1_c1b8, 12
  %v3_c1b8 = inttoptr i32 %v2_c1b8 to i32*
  store i32 %v0_c1b8, i32* %v3_c1b8, align 4
  %v0_c1bc = load i32, i32* %r4.global-to-local, align 4
  %v1_c1bc = load i32, i32* %r3.global-to-local, align 4
  %v2_c1bc = add i32 %v1_c1bc, 8
  %v3_c1bc = inttoptr i32 %v2_c1bc to i32*
  store i32 %v0_c1bc, i32* %v3_c1bc, align 4
  br label %dec_label_pc_c1d4

dec_label_pc_c1c4:                                ; preds = %dec_label_pc_c138
  %v2_c1c4 = add i32 %v1_c148, %v0_c1c4
  store i32 %v2_c1c4, i32* %ip.global-to-local, align 4
  %v1_c1c8 = or i32 %v2_c1c4, 1
  store i32 %v1_c1c8, i32* %r3.global-to-local, align 4
  %v0_c1cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c1cc, i32* %v2_c140, align 4
  %v0_c1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c1d0 = add i32 %v1_c1d0, 4
  %v3_c1d0 = inttoptr i32 %v2_c1d0 to i32*
  store i32 %v0_c1d0, i32* %v3_c1d0, align 4
  br label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c1c4
  %v0_c1d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_c1d8 = icmp ult i32 %v0_c1d4, 131070
  br i1 %v3_c1d8, label %dec_label_pc_c244, label %dec_label_pc_c1dc

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d4
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_c1e0 = load i32, i32* @r7, align 4
  %v2_c1e0 = add i32 %v0_c1e0, 68
  %v3_c1e0 = inttoptr i32 %v2_c1e0 to i32*
  %v4_c1e0 = load i32, i32* %v3_c1e0, align 4
  store i32 %v4_c1e0, i32* @r4, align 4
  %v1_c1e4 = inttoptr i32 %v4_c1e0 to i32*
  %v2_c1e4 = load i32, i32* %v1_c1e4, align 4
  store i32 %v2_c1e4, i32* %r3.global-to-local, align 4
  %v1_c1e8 = and i32 %v2_c1e4, 2
  %v2_c1e8 = icmp eq i32 %v1_c1e8, 0
  br i1 %v2_c1e8, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_c1dc
  store i32 %v4_c1e0, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_c1dc, %bb
  %v1_c1f0 = xor i1 %v2_c1e8, true
  call void @__pseudo_cond_branch(i1 %v1_c1f0, i32 ptrtoint (i32* @global_var_be94.144 to i32))
  %v0_c1f4 = load i32, i32* @r4, align 4
  %v1_c1f4 = add i32 %v0_c1f4, 44
  %v2_c1f4 = inttoptr i32 %v1_c1f4 to i32*
  %v3_c1f4 = load i32, i32* %v2_c1f4, align 4
  store i32 %v3_c1f4, i32* %r3.global-to-local, align 4
  %v1_c1f8 = add i32 %v3_c1f4, 4
  %v2_c1f8 = inttoptr i32 %v1_c1f8 to i32*
  %v3_c1f8 = load i32, i32* %v2_c1f8, align 4
  store i32 %v3_c1f8, i32* %r3.global-to-local, align 4
  %v1_c1fc = add i32 %v0_c1f4, 836
  %v2_c1fc = inttoptr i32 %v1_c1fc to i32*
  %v3_c1fc = load i32, i32* %v2_c1fc, align 4
  store i32 %v3_c1fc, i32* @r2, align 4
  %v1_c200 = and i32 %v3_c1f8, -4
  store i32 %v1_c200, i32* %r3.global-to-local, align 4
  %v3_c204 = icmp ult i32 %v1_c200, %v3_c1fc
  br i1 %v3_c204, label %dec_label_pc_c244, label %dec_label_pc_c20c

dec_label_pc_c20c:                                ; preds = %bb16
  store i32 %v0_c1f4, i32* %r1.global-to-local, align 4
  %v1_c210 = add i32 %v0_c1f4, 840
  %v2_c210 = inttoptr i32 %v1_c210 to i32*
  %v3_c210 = load i32, i32* %v2_c210, align 4
  store i32 %v3_c210, i32* %r0.global-to-local, align 4
  %v2_c214 = call i32 @__malloc_trim(i32 %v3_c210, i32 %v0_c1f4)
  store i32 %v2_c214, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c244

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c0e0
  %v2_c21c = inttoptr i32 %v1_c0b0 to i32*
  %v3_c21c = load i32, i32* %v2_c21c, align 4
  store i32 %v3_c21c, i32* %r0.global-to-local, align 4
  %v1_c220 = add i32 %v4_c0a0, 848
  %v2_c220 = inttoptr i32 %v1_c220 to i32*
  %v3_c220 = load i32, i32* %v2_c220, align 4
  store i32 %v3_c220, i32* %r2.global-to-local, align 4
  %v1_c224 = add i32 %v4_c0a0, 868
  %v2_c224 = inttoptr i32 %v1_c224 to i32*
  %v3_c224 = load i32, i32* %v2_c224, align 4
  %v2_c228 = add i32 %v3_c21c, %v1_c0ac
  store i32 %v2_c228, i32* %r1.global-to-local, align 4
  %v1_c22c = add i32 %v3_c220, -1
  store i32 %v1_c22c, i32* %r2.global-to-local, align 4
  %v2_c230 = sub i32 %v3_c224, %v2_c228
  store i32 %v2_c230, i32* %r3.global-to-local, align 4
  store i32 %v2_c230, i32* %v2_c224, align 4
  %v1_c238 = load i32, i32* @lr, align 4
  %v2_c238 = add i32 %v1_c238, 848
  %v3_c238 = inttoptr i32 %v2_c238 to i32*
  store i32 %v1_c22c, i32* %v3_c238, align 4
  %v0_c23c = load i32, i32* %r0.global-to-local, align 4
  %v1_c23c = load i32, i32* @r5, align 4
  %v2_c23c = sub i32 %v1_c23c, %v0_c23c
  store i32 %v2_c23c, i32* %r0.global-to-local, align 4
  %v4_c240 = call i32 @munmap(i32 %v2_c23c, i32 %v2_c228, i32 %v1_c22c, i32 %v2_c230)
  store i32 %v4_c240, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c244

dec_label_pc_c244:                                ; preds = %bb16, %dec_label_pc_c1d4, %dec_label_pc_c20c, %dec_label_pc_c0c0, %dec_label_pc_c21c
  store i32 %v2_c054, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  %v0_c250 = load i32, i32* @r7, align 4
  %v2_c250 = add i32 %v0_c250, 48
  %v3_c250 = inttoptr i32 %v2_c250 to i32*
  %v4_c250 = load i32, i32* %v3_c250, align 4
  store i32 %v4_c250, i32* @ip, align 4
  store i32 49756, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_c250)
  br label %dec_label_pc_c25c

dec_label_pc_c25c:                                ; preds = %entry, %dec_label_pc_c244
  store i32 %v3_c048, i32* @r4, align 4
  store i32 %v6_c048, i32* @r5, align 4
  store i32 %v9_c048, i32* @r6, align 4
  store i32 %v12_c048, i32* @r7, align 4
  store i32 %v18_c048, i32* @lr, align 4
  ret i32 %v2_c054

; uselistorder directives
  uselistorder i32 %v0_c1f4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_c1b4, { 1, 0 }
  uselistorder i32 %v1_c0f4, { 1, 0 }
  uselistorder i32 %v0_c0f4, { 1, 0 }
  uselistorder i32 %v3_c0c8, { 1, 0 }
  uselistorder i32 %v1_c0ac, { 1, 0, 2 }
  uselistorder i32 %v2_c0a8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_c0a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c050, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_c25c, { 1, 0 }
  uselistorder label %dec_label_pc_c244, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_c1d4, { 1, 0 }
  uselistorder label %dec_label_pc_c194, { 1, 0 }
  uselistorder label %dec_label_pc_c188, { 1, 0 }
  uselistorder label %dec_label_pc_c184, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c138, { 1, 0 }
}

define i32 @function_c26c(i32 %arg1) local_unnamed_addr {
dec_label_pc_c26c:
  %v0_c26c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c26c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c26c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c26c, %bb
  %v10_c280 = phi i32 [ %arg1, %dec_label_pc_c26c ], [ 0, %bb ]
  ret i32 %v10_c280

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_c284 = load i32, i32* @r4, align 4
  store i32 %v3_c284, i32* %stack_var_-12, align 4
  %v6_c284 = load i32, i32* @r5, align 4
  %v4_c294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_c294, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_c294, i32* @r0, align 4
  %v0_c2a4 = call i32 @__malloc_consolidate()
  %v0_c2a8 = load i32, i32* @r4, align 4
  %v0_c2ac = load i32, i32* @r5, align 4
  %v2_c2b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_c2b4, i32* @r4, align 4
  store i32 %v6_c284, i32* @r5, align 4
  %v2_c2b8 = call i32 @__malloc_trim(i32 %v0_c2a8, i32 %v0_c2ac)
  %v0_c2bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c2bc, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_c2c0 = phi i32 [ %v2_c2b8, %entry ], [ 0, %bb ]
  ret i32 %v4_c2c0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  %v4_c2dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 16) to i32*), align 4
  store i32 49896, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_c2dc)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_c304 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_c30c = load i32, i32* @r5, align 4
  %v2_c30c = add i32 %v0_c30c, 1248
  %v3_c30c = inttoptr i32 %v2_c30c to i32*
  %v4_c30c = load i32, i32* %v3_c30c, align 4
  %v2_c310 = icmp eq i32 %v4_c30c, 0
  br i1 %v2_c310, label %dec_label_pc_c318, label %dec_label_pc_c358

dec_label_pc_c318:                                ; preds = %entry
  store i32 1, i32* %v3_c30c, align 4
  br label %dec_label_pc_c320

dec_label_pc_c320:                                ; preds = %dec_label_pc_c368, %dec_label_pc_c318
  %v0_c324 = load i32, i32* @r5, align 4
  %v2_c324 = add i32 %v0_c324, 232
  store i32 %v2_c324, i32* @r4, align 4
  %v2_c330 = add i32 %v0_c324, 72
  %v3_c330 = inttoptr i32 %v2_c330 to i32*
  %v4_c330 = load i32, i32* %v3_c330, align 4
  call void @__pseudo_branch(i32 %v4_c330)
  %v1_c340 = call i32 @__GI_raise(i32 6)
  %v0_c34c = load i32, i32* @r5, align 4
  %v2_c34c = add i32 %v0_c34c, 16
  %v3_c34c = inttoptr i32 %v2_c34c to i32*
  %v4_c34c = load i32, i32* %v3_c34c, align 4
  store i32 50008, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_c34c)
  %v0_c35c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c358

dec_label_pc_c358:                                ; preds = %entry, %dec_label_pc_c320
  %v1_c370 = phi i32 [ %v0_c30c, %entry ], [ %v0_c35c.pre, %dec_label_pc_c320 ]
  %v2_c35c = add i32 %v1_c370, 1248
  %v3_c35c = inttoptr i32 %v2_c35c to i32*
  %v4_c35c = load i32, i32* %v3_c35c, align 4
  %v7_c360 = icmp eq i32 %v4_c35c, 1
  br i1 %v7_c360, label %dec_label_pc_c368, label %dec_label_pc_c3a4

dec_label_pc_c368:                                ; preds = %dec_label_pc_c358
  %v2_c368 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_c368, i32* @r4, align 4
  store i32 2, i32* %v3_c35c, align 4
  %v3_c380 = bitcast i32* %stack_var_-28 to i8*
  %v4_c380 = call i32 @__GI_memset(i8* %v3_c380, i32 0, i32 20)
  %v3_c39c = call i32 @__libc_sigaction(i32 6, i32 %v2_c368, i32 0)
  br label %dec_label_pc_c320

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c358
  %v7_c3a4 = icmp eq i32 %v4_c35c, 2
  br i1 %v7_c3a4, label %dec_label_pc_c3ac, label %dec_label_pc_c3b8

dec_label_pc_c3ac:                                ; preds = %dec_label_pc_c3a4
  store i32 3, i32* %v3_c35c, align 4
  %v0_c3b4 = call i32 @abort()
  %v0_c3b8.pre = load i32, i32* @r5, align 4
  %v1_c3b8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_c3b8

dec_label_pc_c3b8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3ac
  %v3_c3c4 = phi i32 [ 1248, %dec_label_pc_c3a4 ], [ %v1_c3b8.pre, %dec_label_pc_c3ac ]
  %v2_c3c4 = phi i32 [ %v1_c370, %dec_label_pc_c3a4 ], [ %v0_c3b8.pre, %dec_label_pc_c3ac ]
  %v2_c3b8 = add i32 %v2_c3c4, %v3_c3c4
  %v3_c3b8 = inttoptr i32 %v2_c3b8 to i32*
  %v4_c3b8 = load i32, i32* %v3_c3b8, align 4
  %v7_c3bc = icmp eq i32 %v4_c3b8, 3
  br i1 %v7_c3bc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_c3b8
  store i32 4, i32* %v3_c3b8, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_c3b8, %bb
  call void @__pseudo_cond_branch(i1 %v7_c3bc, i32 ptrtoint (i32* @global_var_a940.153 to i32))
  br label %dec_label_pc_c3d0

dec_label_pc_c3d0:                                ; preds = %dec_label_pc_c3d0, %.thread2
  %v0_c3d0 = call i32 @abort()
  br label %dec_label_pc_c3d0

; uselistorder directives
  uselistorder i32* %v3_c35c, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_c3b8, { 1, 0 }
  uselistorder label %dec_label_pc_c358, { 1, 0 }
}

define i32 @function_c3dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_c3dc:
  %v0_c3dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c3dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_c3dc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_c3dc, %bb
  %v4_c3e8 = phi i32 [ %arg1, %dec_label_pc_c3dc ], [ 0, %bb ]
  ret i32 %v4_c3e8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @random(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  %v4_c41c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c41c)
  %v0_c430 = load i32, i32* @r4, align 4
  %v2_c430 = add i32 %v0_c430, 16
  %v3_c430 = inttoptr i32 %v2_c430 to i32*
  %v4_c430 = load i32, i32* %v3_c430, align 4
  call void @__pseudo_branch(i32 %v4_c430)
  %v2_c440 = ptrtoint i32* %stack_var_-20 to i32
  %v0_c444 = load i32, i32* @r4, align 4
  %v2_c444 = add i32 %v0_c444, 408
  %v2_c448 = inttoptr i32 %v2_c444 to i32*
  %v3_c448 = call i32 @__GI_random_r(i32* %v2_c448, i32 %v2_c440)
  %v0_c458 = load i32, i32* @r4, align 4
  %v2_c458 = add i32 %v0_c458, 48
  %v3_c458 = inttoptr i32 %v2_c458 to i32*
  %v4_c458 = load i32, i32* %v3_c458, align 4
  call void @__pseudo_branch(i32 %v4_c458)
  %v3_c464 = load i32, i32* %stack_var_-20, align 4
  ret i32 %v3_c464
}

define i32 @function_c478(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c478:
  %v0_c478 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c478, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c478
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c478, %bb
  %v10_c48c = phi i32 [ %arg1, %dec_label_pc_c478 ], [ 0, %bb ]
  ret i32 %v10_c48c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_c4c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c4c0)
  %v0_c4d4 = load i32, i32* @r6, align 4
  %v2_c4d4 = add i32 %v0_c4d4, 16
  %v3_c4d4 = inttoptr i32 %v2_c4d4 to i32*
  %v4_c4d4 = load i32, i32* %v3_c4d4, align 4
  call void @__pseudo_branch(i32 %v4_c4d4)
  %v0_c4e4 = load i32, i32* @r6, align 4
  %v2_c4e4 = add i32 %v0_c4e4, 408
  %v0_c4ec = load i32, i32* @r5, align 4
  %v1_c4f0 = add i32 %v0_c4e4, 416
  %v2_c4f0 = inttoptr i32 %v1_c4f0 to i32*
  %v3_c4f0 = load i32, i32* %v2_c4f0, align 4
  store i32 %v3_c4f0, i32* @r4, align 4
  %v2_c4f4 = inttoptr i32 %v2_c4e4 to i32*
  %v3_c4f4 = call i32 @setstate_r(i32 %v0_c4ec, i32* %v2_c4f4)
  %v1_c4fc = icmp slt i32 %v3_c4f4, 0
  %v3_c50c = load i32, i32* @r4, align 4
  %v4_c50c = add i32 %v3_c50c, -4
  %storemerge = select i1 %v1_c4fc, i32 0, i32 %v4_c50c
  %v0_c510 = load i32, i32* @r6, align 4
  %v2_c510 = add i32 %v0_c510, 48
  %v3_c510 = inttoptr i32 %v2_c510 to i32*
  %v4_c510 = load i32, i32* %v3_c510, align 4
  call void @__pseudo_branch(i32 %v4_c510)
  ret i32 %storemerge
}

define i32 @function_c530(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c530:
  %v0_c530 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c530, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c530
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c530, %bb
  %v10_c544 = phi i32 [ %arg1, %dec_label_pc_c530 ], [ 0, %bb ]
  ret i32 %v10_c544

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_c580 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c580)
  %v0_c594 = load i32, i32* @r4, align 4
  %v2_c594 = add i32 %v0_c594, 16
  %v3_c594 = inttoptr i32 %v2_c594 to i32*
  %v4_c594 = load i32, i32* %v3_c594, align 4
  call void @__pseudo_branch(i32 %v4_c594)
  %v0_c5a4 = load i32, i32* @r6, align 4
  %v0_c5a8 = load i32, i32* @r4, align 4
  %v2_c5a8 = add i32 %v0_c5a8, 408
  %v0_c5ac = load i32, i32* @r7, align 4
  %v0_c5b0 = load i32, i32* @sl, align 4
  store i32 %v0_c5b0, i32* @r0, align 4
  %v1_c5b4 = add i32 %v0_c5a8, 416
  %v2_c5b4 = inttoptr i32 %v1_c5b4 to i32*
  %v3_c5b4 = load i32, i32* %v2_c5b4, align 4
  store i32 %v3_c5b4, i32* @r5, align 4
  %v4_c5b8 = inttoptr i32 %v0_c5b0 to i32*
  %v5_c5b8 = call i32 @__GI_initstate_r(i32* %v4_c5b8, i32 %v0_c5a4, i32 %v0_c5ac, i32 %v2_c5a8)
  %v0_c5c8 = load i32, i32* @r4, align 4
  %v2_c5c8 = add i32 %v0_c5c8, 48
  %v3_c5c8 = inttoptr i32 %v2_c5c8 to i32*
  %v4_c5c8 = load i32, i32* %v3_c5c8, align 4
  call void @__pseudo_branch(i32 %v4_c5c8)
  %v0_c5d4 = load i32, i32* @r5, align 4
  %v1_c5d4 = add i32 %v0_c5d4, -4
  ret i32 %v1_c5d4
}

define i32 @function_c5f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c5f0:
  %v0_c5f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c5f0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c5f0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c5f0, %bb
  %v10_c604 = phi i32 [ %arg1, %dec_label_pc_c5f0 ], [ 0, %bb ]
  ret i32 %v10_c604

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_c608 = load i32, i32* @r4, align 4
  %v6_c608 = load i32, i32* @r5, align 4
  %v9_c608 = load i32, i32* @r6, align 4
  %v15_c608 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  %v2_c61c = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 256), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_c638 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_c638)
  %v0_c64c = load i32, i32* @r4, align 4
  %v2_c64c = add i32 %v0_c64c, 16
  %v3_c64c = inttoptr i32 %v2_c64c to i32*
  %v4_c64c = load i32, i32* %v3_c64c, align 4
  call void @__pseudo_branch(i32 %v4_c64c)
  %v0_c65c = load i32, i32* @r6, align 4
  store i32 %v0_c65c, i32* @r0, align 4
  %v0_c660 = load i32, i32* @r4, align 4
  %v2_c660 = add i32 %v0_c660, 408
  %v2_c664 = inttoptr i32 %v0_c65c to i32*
  %v3_c664 = call i32 @srandom_r(i32* %v2_c664, i32 %v2_c660)
  %v0_c678 = load i32, i32* @r4, align 4
  %v2_c678 = add i32 %v0_c678, 48
  %v3_c678 = inttoptr i32 %v2_c678 to i32*
  %v4_c678 = load i32, i32* %v3_c678, align 4
  call void @__pseudo_branch(i32 %v4_c678)
  store i32 %v3_c608, i32* @r4, align 4
  store i32 %v6_c608, i32* @r5, align 4
  store i32 %v9_c608, i32* @r6, align 4
  store i32 %v15_c608, i32* @lr, align 4
  ret i32 %v2_c61c
}

define i32 @function_c694(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c694:
  %v0_c694 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c694, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_c694
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_c694, %bb
  %v10_c6a8 = phi i32 [ %arg1, %dec_label_pc_c694 ], [ 0, %bb ]
  ret i32 %v10_c6a8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_c6ac = load i32, i32* @r4, align 4
  store i32 %v3_c6ac, i32* %stack_var_-8, align 4
  %v1_c6b0 = add i32 %tmp, 12
  %v2_c6b0 = inttoptr i32 %v1_c6b0 to i8*
  %v3_c6b0 = load i8, i8* %v2_c6b0, align 1
  %v4_c6b0 = sext i8 %v3_c6b0 to i32
  store i32 %v4_c6b0, i32* %r3.global-to-local, align 4
  %v2_c6b4 = icmp eq i8 %v3_c6b0, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_c6c0 = add i32 %tmp, 8
  %v2_c6c0 = inttoptr i32 %v1_c6c0 to i32*
  %v3_c6c0 = load i32, i32* %v2_c6c0, align 4
  store i32 %v3_c6c0, i32* %lr.global-to-local, align 4
  br i1 %v2_c6b4, label %dec_label_pc_c6c8, label %dec_label_pc_c6ec

dec_label_pc_c6c8:                                ; preds = %entry
  %v1_c6c8 = inttoptr i32 %v3_c6c0 to i32*
  %v2_c6c8 = load i32, i32* %v1_c6c8, align 4
  store i32 %v2_c6c8, i32* %r2.global-to-local, align 4
  %v2_c6d0 = mul i32 %v2_c6c8, 1103515245
  %v1_c6d8 = add i32 %v2_c6d0, 12345
  %tmp6 = bitcast i32 %v1_c6d8 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_c6dc = bitcast float %tmp7 to i32
  store i32 %v1_c6dc, i32* %r3.global-to-local, align 4
  store i32 %v1_c6dc, i32* %v1_c6c8, align 4
  %v0_c6e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c6e4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_c6e4, i32* %v2_c6e4, align 4
  br label %dec_label_pc_c72c

dec_label_pc_c6ec:                                ; preds = %entry
  %v2_c6ec = load i32, i32* %arg1, align 4
  store i32 %v2_c6ec, i32* %r2.global-to-local, align 4
  %v1_c6f0 = add i32 %tmp, 4
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i32*
  %v3_c6f0 = load i32, i32* %v2_c6f0, align 4
  store i32 %v3_c6f0, i32* %r0.global-to-local, align 4
  %v1_c6f4 = inttoptr i32 %v2_c6ec to i32*
  %v2_c6f4 = load i32, i32* %v1_c6f4, align 4
  store i32 %v2_c6f4, i32* %r1.global-to-local, align 4
  %v1_c6f8 = inttoptr i32 %v3_c6f0 to i32*
  %v2_c6f8 = load i32, i32* %v1_c6f8, align 4
  %v4_c6f8 = add i32 %v3_c6f0, 4
  store i32 %v4_c6f8, i32* %r0.global-to-local, align 4
  %v2_c6fc = add i32 %v2_c6f8, %v2_c6f4
  store i32 %v2_c6fc, i32* %r3.global-to-local, align 4
  store i32 %v2_c6fc, i32* %v1_c6f4, align 4
  %v3_c700 = load i32, i32* %r2.global-to-local, align 4
  %v4_c700 = add i32 %v3_c700, 4
  store i32 %v4_c700, i32* %r2.global-to-local, align 4
  %v0_c704 = load i32, i32* %ip.global-to-local, align 4
  %v1_c704 = add i32 %v0_c704, 16
  %v2_c704 = inttoptr i32 %v1_c704 to i32*
  %v3_c704 = load i32, i32* %v2_c704, align 4
  store i32 %v3_c704, i32* %r1.global-to-local, align 4
  %v0_c708 = load i32, i32* %r3.global-to-local, align 4
  %v3_c708 = udiv i32 %v0_c708, 2
  store i32 %v3_c708, i32* %r3.global-to-local, align 4
  %v3_c70c = icmp ult i32 %v4_c700, %v3_c704
  %v1_c710 = load i32, i32* %r4.global-to-local, align 4
  %v2_c710 = inttoptr i32 %v1_c710 to i32*
  store i32 %v3_c708, i32* %v2_c710, align 4
  br i1 %v3_c70c, label %dec_label_pc_c71c, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_c6ec
  %v1_c714 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_c714, i32* %r2.global-to-local, align 4
  %v0_c724.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6ec
  %v0_c71c = load i32, i32* %r0.global-to-local, align 4
  %v1_c71c = load i32, i32* %r1.global-to-local, align 4
  %v3_c71c = icmp ult i32 %v0_c71c, %v1_c71c
  br i1 %v3_c71c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_c71c
  %v1_c720 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_c720, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_c71c, %._crit_edge, %bb
  %v0_c724 = phi i32 [ %v0_c724.pre, %._crit_edge ], [ %v0_c71c, %dec_label_pc_c71c ], [ %v1_c720, %bb ]
  %v1_c724 = load i32, i32* %ip.global-to-local, align 4
  %v2_c724 = add i32 %v1_c724, 4
  %v3_c724 = inttoptr i32 %v2_c724 to i32*
  store i32 %v0_c724, i32* %v3_c724, align 4
  %v0_c728 = load i32, i32* %r2.global-to-local, align 4
  %v1_c728 = load i32, i32* %ip.global-to-local, align 4
  %v2_c728 = inttoptr i32 %v1_c728 to i32*
  store i32 %v0_c728, i32* %v2_c728, align 4
  br label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c6c8, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c730 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_c730, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_c708, { 1, 0 }
  uselistorder i32 %v1_c6dc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_c72c, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_c73c = load i32, i32* @r4, align 4
  store i32 %v3_c73c, i32* %stack_var_-36, align 4
  %v1_c740 = add i32 %tmp, 12
  %v2_c740 = inttoptr i32 %v1_c740 to i8*
  %v3_c740 = load i8, i8* %v2_c740, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_c750 = load i8, i8* %v2_c740, align 1
  %tmp33 = icmp ugt i8 %v3_c740, 4
  br i1 %tmp33, label %.dec_label_pc_c7fc_crit_edge, label %dec_label_pc_c75c

.dec_label_pc_c7fc_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_c7fc

dec_label_pc_c75c:                                ; preds = %entry
  %v0_c75c = load i32, i32* @r0, align 4
  %v2_c75c = icmp eq i32 %v0_c75c, 0
  %v1_c760 = add i32 %tmp, 8
  %v2_c760 = inttoptr i32 %v1_c760 to i32*
  %v3_c760 = load i32, i32* %v2_c760, align 4
  store i32 %v3_c760, i32* %r6.global-to-local, align 4
  br i1 %v2_c75c, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_c75c
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_c75c, %bb
  %v0_c76c = phi i32 [ %v0_c75c, %dec_label_pc_c75c ], [ 1, %bb ]
  %v2_c768 = icmp eq i8 %v3_c750, 0
  %v2_c76c = inttoptr i32 %v3_c760 to i32*
  store i32 %v0_c76c, i32* %v2_c76c, align 4
  br i1 %v2_c768, label %dec_label_pc_c7f8, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %bb23
  %v1_c774 = add i32 %tmp, 13
  %v2_c774 = inttoptr i32 %v1_c774 to i8*
  %v3_c774 = load i8, i8* %v2_c774, align 1
  %v4_c774 = sext i8 %v3_c774 to i32
  store i32 %v4_c774, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_c780 = load i32, i32* @r0, align 4
  store i32 %v0_c780, i32* %r4.global-to-local, align 4
  %v0_c784 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_c784, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_c7c425 = icmp sgt i8 %v3_c774, 1
  br i1 %v5_c7c425, label %dec_label_pc_c790, label %dec_label_pc_c7c8

dec_label_pc_c790:                                ; preds = %dec_label_pc_c774, %dec_label_pc_c790.dec_label_pc_c790_crit_edge
  %v1_c7a4 = phi i32 [ %v1_c7a4.pre, %dec_label_pc_c790.dec_label_pc_c790_crit_edge ], [ 2836, %dec_label_pc_c774 ]
  %v1_c798 = phi i32 [ %v1_c798.pre, %dec_label_pc_c790.dec_label_pc_c790_crit_edge ], [ 16807, %dec_label_pc_c774 ]
  %v0_c79427 = phi i32 [ %v0_c7b8.pre, %dec_label_pc_c790.dec_label_pc_c790_crit_edge ], [ %v0_c780, %dec_label_pc_c774 ]
  %v1_c7b026 = phi i32 [ %v5_c7b0, %dec_label_pc_c790.dec_label_pc_c790_crit_edge ], [ %v0_c784, %dec_label_pc_c774 ]
  %v3_c790 = urem i32 %v0_c79427, 127773
  %v2_c798 = mul i32 %v1_c798, %v3_c790
  %v2_c7a0 = sdiv i32 %v0_c79427, 127773
  %v2_c7a4 = mul i32 %v1_c7a4, %v2_c7a0
  %v2_c7a8 = sub i32 %v2_c798, %v2_c7a4
  %v8_c7a8 = icmp slt i32 %v2_c7a8, 0
  %v2_c7ac = add i32 %v2_c7a8, 2147483647
  %v2_c7ac.v2_c7a8 = select i1 %v8_c7a8, i32 %v2_c7ac, i32 %v2_c7a8
  store i32 %v2_c7ac.v2_c7a8, i32* %r4.global-to-local, align 4
  %v2_c7b0 = add i32 %v1_c7b026, 4
  %v3_c7b0 = inttoptr i32 %v2_c7b0 to i32*
  store i32 %v2_c7ac.v2_c7a8, i32* %v3_c7b0, align 4
  %v4_c7b0 = load i32, i32* %r8.global-to-local, align 4
  %v5_c7b0 = add i32 %v4_c7b0, 4
  store i32 %v5_c7b0, i32* %r8.global-to-local, align 4
  %v0_c7b4.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_c7b4.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_c7b8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_c7c0 = add i32 %v0_c7b4.pre, 1
  store i32 %v1_c7c0, i32* %r7.global-to-local, align 4
  %v5_c7c4 = icmp slt i32 %v0_c7b4.pre, %v1_c7b4.pre
  br i1 %v5_c7c4, label %dec_label_pc_c790.dec_label_pc_c790_crit_edge, label %dec_label_pc_c7b4.dec_label_pc_c7c8_crit_edge

dec_label_pc_c790.dec_label_pc_c790_crit_edge:    ; preds = %dec_label_pc_c790
  %v1_c798.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_c7a4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c790

dec_label_pc_c7b4.dec_label_pc_c7c8_crit_edge:    ; preds = %dec_label_pc_c790
  %v0_c7d8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c7b4.dec_label_pc_c7c8_crit_edge, %dec_label_pc_c774
  %v0_c7d8 = phi i32 [ %v0_c7d8.pre, %dec_label_pc_c7b4.dec_label_pc_c7c8_crit_edge ], [ %v0_c784, %dec_label_pc_c774 ]
  %v0_c7cc.lcssa = phi i32 [ %v1_c7b4.pre, %dec_label_pc_c7b4.dec_label_pc_c7c8_crit_edge ], [ %v4_c774, %dec_label_pc_c774 ]
  %v2_c7cc = mul i32 %v0_c7cc.lcssa, 10
  store i32 %v2_c7cc, i32* @r4, align 4
  %v0_c7d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_c7d0 = add i32 %v0_c7d0, 14
  %v2_c7d0 = inttoptr i32 %v1_c7d0 to i8*
  %v3_c7d0 = load i8, i8* %v2_c7d0, align 1
  %v4_c7d0 = sext i8 %v3_c7d0 to i32
  %v2_c7d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_c7d4, i32* %r7.global-to-local, align 4
  %v4_c7d8 = mul nsw i32 %v4_c7d0, 4
  %v5_c7d8 = add i32 %v0_c7d8, %v4_c7d8
  %v1_c7dc = inttoptr i32 %v0_c7d0 to i32*
  store i32 %v5_c7d8, i32* %v1_c7dc, align 4
  %v3_c7dc = add i32 %v0_c7d0, 4
  %v4_c7dc = inttoptr i32 %v3_c7dc to i32*
  %v5_c7dc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_c7dc, i32* %v4_c7dc, align 4
  br label %dec_label_pc_c7e8

dec_label_pc_c7e4:                                ; preds = %dec_label_pc_c7e8
  %v0_c7ec = load i32, i32* %r5.global-to-local, align 4
  %v2_c7e4 = inttoptr i32 %v0_c7ec to i32*
  %v3_c7e4 = call i32 @__GI_random_r(i32* %v2_c7e4, i32 %v2_c7d4)
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7c8, %dec_label_pc_c7e4
  %v0_c7e8 = load i32, i32* @r4, align 4
  %v1_c7e8 = add i32 %v0_c7e8, -1
  store i32 %v1_c7e8, i32* @r4, align 4
  %v6_c7e8 = icmp slt i32 %v1_c7e8, 0
  br i1 %v6_c7e8, label %dec_label_pc_c7f8, label %dec_label_pc_c7e4

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c7e8, %bb23
  %v2_c800.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_c7fc

dec_label_pc_c7fc:                                ; preds = %.dec_label_pc_c7fc_crit_edge, %dec_label_pc_c7f8
  %v2_c800 = phi i32 [ %v3_c73c, %.dec_label_pc_c7fc_crit_edge ], [ %v2_c800.pre, %dec_label_pc_c7f8 ]
  %v1_c804 = phi i32 [ -1, %.dec_label_pc_c7fc_crit_edge ], [ 0, %dec_label_pc_c7f8 ]
  store i32 %v2_c800, i32* @r4, align 4
  ret i32 %v1_c804

; uselistorder directives
  uselistorder i32 %v1_c7e8, { 1, 0 }
  uselistorder i32 %v0_c7d0, { 1, 0, 2 }
  uselistorder i32 %v0_c7b4.pre, { 1, 0 }
  uselistorder i32 %v5_c7b0, { 1, 0 }
  uselistorder i32 %v0_c79427, { 1, 0 }
  uselistorder i32 %v0_c784, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_c7fc, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c790, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c808:
  %v0_c808 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c808, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_c808
  %v2_c808 = load i32, i32* @r7, align 4
  %v5_c808 = udiv i32 %v2_c808, 8
  %v6_c808 = and i32 %v5_c808, %arg1
  %v3_c80c = load i32, i32* @fp, align 4
  %v8_c80c = shl i32 %v6_c808, %v3_c80c
  %v9_c80c = and i32 %v8_c80c, %arg1
  %v2_c810 = load i32, i32* @sp, align 4
  %v8_c810 = shl i32 %v2_c810, %arg3
  %v9_c810 = and i32 %v8_c810, %arg2
  call void @__pseudo_branch(i32 %v9_c810)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_c808, %bb
  %v10_c810 = phi i32 [ %arg1, %dec_label_pc_c808 ], [ %v9_c80c, %bb ]
  ret i32 %v10_c810

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_c814 = load i32, i32* @r4, align 4
  %v6_c814 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_c844, label %dec_label_pc_c834

dec_label_pc_c834:                                ; preds = %entry
  %v2_c834 = icmp ugt i32 %arg2, 254
  %v7_c834 = icmp eq i32 %arg2, 255
  %v2_c838 = xor i1 %v7_c834, true
  %v3_c838 = and i1 %v2_c834, %v2_c838
  br i1 %v3_c838, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_c834
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_c834, %bb
  %v1_c8707 = phi i32 [ %v3_c814, %dec_label_pc_c834 ], [ 4, %bb ]
  %v2_c83c = xor i1 %v2_c834, true
  %v3_c83c = or i1 %v7_c834, %v2_c83c
  br i1 %v3_c83c, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_c844:                                ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_c85c, label %dec_label_pc_c84c

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c844
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_c8cc

.thread10:                                        ; preds = %dec_label_pc_c84c
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c844
  %v2_c85c = icmp ugt i32 %arg2, 62
  %v7_c85c = icmp eq i32 %arg2, 63
  %v2_c860 = xor i1 %v7_c85c, true
  %v3_c860 = and i1 %v2_c85c, %v2_c860
  br i1 %v3_c860, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_c85c
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_c85c, %bb23
  %v1_c8706 = phi i32 [ %v3_c814, %dec_label_pc_c85c ], [ 2, %bb23 ]
  %v2_c864 = xor i1 %v2_c85c, true
  %v3_c864 = or i1 %v7_c85c, %v2_c864
  br i1 %v3_c864, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_c87c = phi i32 [ 3, %bb22 ], [ %v1_c8707, %bb21 ], [ %v1_c8706, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37436), i32* %r3.global-to-local, align 4
  %v4_c870 = mul i32 %v1_c87c, 4
  %v5_c870 = add i32 %v4_c870, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37436)
  store i32 %v5_c870, i32* %r2.global-to-local, align 4
  %v1_c874 = add i32 %v4_c870, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37416)
  %v2_c874 = inttoptr i32 %v1_c874 to i32*
  %v3_c874 = load i32, i32* %v2_c874, align 4
  store i32 %v3_c874, i32* %r1.global-to-local, align 4
  %v1_c878 = add i32 %tmp, 4
  store i32 %v1_c878, i32* @r6, align 4
  %v6_c87c = inttoptr i32 %v5_c870 to i32*
  %v7_c87c = load i32, i32* %v6_c87c, align 4
  store i32 %v7_c87c, i32* %r2.global-to-local, align 4
  %v4_c880 = mul i32 %v3_c874, 4
  %v5_c880 = add i32 %v4_c880, %v1_c878
  store i32 %v5_c880, i32* %r3.global-to-local, align 4
  %v2_c884 = add i32 %arg3, 16
  %v3_c884 = inttoptr i32 %v2_c884 to i32*
  store i32 %v5_c880, i32* %v3_c884, align 4
  %v0_c888 = load i32, i32* %r2.global-to-local, align 4
  %v1_c888 = trunc i32 %v0_c888 to i8
  %v2_c888 = load i32, i32* @r5, align 4
  %v3_c888 = add i32 %v2_c888, 14
  %v4_c888 = inttoptr i32 %v3_c888 to i8*
  store i8 %v1_c888, i8* %v4_c888, align 1
  %v0_c88c = load i32, i32* %r1.global-to-local, align 4
  %v1_c88c = trunc i32 %v0_c88c to i8
  %v2_c88c = load i32, i32* @r5, align 4
  %v3_c88c = add i32 %v2_c88c, 13
  %v4_c88c = inttoptr i32 %v3_c88c to i8*
  store i8 %v1_c88c, i8* %v4_c88c, align 1
  %v0_c890 = load i32, i32* @r4, align 4
  %v1_c890 = trunc i32 %v0_c890 to i8
  %v2_c890 = load i32, i32* @r5, align 4
  %v3_c890 = add i32 %v2_c890, 12
  %v4_c890 = inttoptr i32 %v3_c890 to i8*
  store i8 %v1_c890, i8* %v4_c890, align 1
  %v0_c894 = load i32, i32* @r6, align 4
  %v1_c894 = load i32, i32* @r5, align 4
  %v2_c894 = add i32 %v1_c894, 8
  %v3_c894 = inttoptr i32 %v2_c894 to i32*
  store i32 %v0_c894, i32* %v3_c894, align 4
  %v0_c898 = load i32, i32* @r5, align 4
  store i32 %v0_c898, i32* %r1.global-to-local, align 4
  %v0_c89c = load i32, i32* @r0, align 4
  %v2_c89c = inttoptr i32 %v0_c89c to i32*
  %v3_c89c = call i32 @srandom_r(i32* %v2_c89c, i32 %v0_c898)
  store i32 %v3_c89c, i32* %r0.global-to-local, align 4
  %v0_c8a0 = load i32, i32* @r4, align 4
  %v2_c8a0 = icmp eq i32 %v0_c8a0, 0
  br i1 %v2_c8a0, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_c8bc12 = load i32, i32* @r7, align 4
  %v2_c8bc13 = inttoptr i32 %v1_c8bc12 to i32*
  store i32 0, i32* %v2_c8bc13, align 4
  %v1_c8c0 = load i32, i32* @r4, align 4
  store i32 %v1_c8c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8f0

.thread4:                                         ; preds = %bb26
  %v1_c8a4 = load i32, i32* @r5, align 4
  %v2_c8a4 = add i32 %v1_c8a4, 4
  %v3_c8a4 = inttoptr i32 %v2_c8a4 to i32*
  %v4_c8a4 = load i32, i32* %v3_c8a4, align 4
  %v1_c8a8 = load i32, i32* @r6, align 4
  %v3_c8a8 = sub i32 %v4_c8a4, %v1_c8a8
  %v4_c8ac = sdiv i32 %v3_c8a8, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_c8b4 = mul i32 %v4_c8ac, 5
  %v5_c8b4 = add i32 %v4_c8b4, %v0_c8a0
  store i32 %v5_c8b4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c8bc = load i32, i32* @r7, align 4
  %v2_c8bc = inttoptr i32 %v1_c8bc to i32*
  store i32 0, i32* %v2_c8bc, align 4
  %v1_c8c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c8c4 = load i32, i32* @r7, align 4
  %v3_c8c4 = inttoptr i32 %v2_c8c4 to i32*
  store i32 %v1_c8c4, i32* %v3_c8c4, align 4
  %v1_c8f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8f0

dec_label_pc_c8cc:                                ; preds = %dec_label_pc_c84c
  store i32 88620, i32* %r3.global-to-local, align 4
  %v0_c8d0 = call i32 @__aeabi_read_tp()
  %v3_c8d4 = load i16, i16* @global_var_22308.76, align 2
  %v4_c8d4 = sext i16 %v3_c8d4 to i32
  store i32 22, i32* %r2.global-to-local, align 4
  %v3_c8dc = add i32 %v4_c8d4, %v0_c8d0
  %v4_c8dc = inttoptr i32 %v3_c8dc to i32*
  store i32 22, i32* %v4_c8dc, align 4
  store i32 %v4_c8d4, i32* %r3.global-to-local, align 4
  %v0_c8e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_c8e8, i32* %v4_c8dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8f0

dec_label_pc_c8f0:                                ; preds = %bb27, %.thread4, %dec_label_pc_c8cc
  %v1_c8f8 = phi i32 [ %v1_c8f8.pre, %.thread4 ], [ %v1_c8c0, %bb27 ], [ -1, %dec_label_pc_c8cc ]
  store i32 %v3_c814, i32* @r4, align 4
  store i32 %v6_c814, i32* @r5, align 4
  ret i32 %v1_c8f8

; uselistorder directives
  uselistorder i32 %v4_c8d4, { 1, 0 }
  uselistorder i1 %v7_c85c, { 1, 0 }
  uselistorder i1 %v7_c834, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_c8f0, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_c90c = load i32, i32* @r4, align 4
  store i32 %v3_c90c, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_c914 = add i32 %tmp, 12
  %v2_c914 = inttoptr i32 %v1_c914 to i8*
  %v3_c914 = load i8, i8* %v2_c914, align 1
  %v4_c914 = zext i8 %v3_c914 to i32
  store i32 %v4_c914, i32* %r1.global-to-local, align 4
  %v2_c918 = icmp eq i8 %v3_c914, 0
  store i1 %v2_c918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c918, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_c92012 = add i32 %arg1, 4
  store i32 %v1_c92012, i32* %r6.global-to-local, align 4
  %v1_c92413 = add i32 %tmp, 8
  %v2_c92414 = inttoptr i32 %v1_c92413 to i32*
  %v3_c92415 = load i32, i32* %v2_c92414, align 4
  store i32 %v3_c92415, i32* %r0.global-to-local, align 4
  %v3_c940 = add i32 %v3_c92415, -4
  %v4_c940 = inttoptr i32 %v3_c940 to i32*
  store i32 %v4_c914, i32* %v4_c940, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_c91c = add i32 %tmp, 4
  %v3_c91c = inttoptr i32 %v2_c91c to i32*
  %v4_c91c = load i32, i32* %v3_c91c, align 4
  %v1_c920 = add i32 %arg1, 4
  store i32 %v1_c920, i32* %r6.global-to-local, align 4
  %v1_c924 = add i32 %tmp, 8
  %v2_c924 = inttoptr i32 %v1_c924 to i32*
  %v3_c924 = load i32, i32* %v2_c924, align 4
  store i32 %v3_c924, i32* %r0.global-to-local, align 4
  %v3_c92c = sub i32 %v4_c91c, %v3_c924
  %v4_c930 = sdiv i32 %v3_c92c, 4
  %v4_c934 = sext i8 %v3_c914 to i32
  store i32 %v4_c934, i32* %r1.global-to-local, align 4
  %v4_c93c = mul i32 %v4_c930, 5
  %v5_c93c = add i32 %v4_c93c, %v4_c934
  %v3_c944 = add i32 %v3_c924, -4
  %v4_c944 = inttoptr i32 %v3_c944 to i32*
  store i32 %v5_c93c, i32* %v4_c944, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_c948 = load i32, i32* %r6.global-to-local, align 4
  %v1_c948 = add i32 %v0_c948, -4
  %v2_c948 = inttoptr i32 %v1_c948 to i32*
  %v3_c948 = load i32, i32* %v2_c948, align 4
  store i32 %v3_c948, i32* %r8.global-to-local, align 4
  %v2_c954 = udiv i32 %v3_c948, 5
  %v3_c954 = urem i32 %v3_c948, 5
  store i32 %v2_c954, i32* %r0.global-to-local, align 4
  store i32 %v3_c954, i32* %r1.global-to-local, align 4
  %v2_c95c = icmp ugt i32 %v3_c954, 3
  %v7_c95c = icmp eq i32 %v3_c954, 4
  store i1 %v7_c95c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r5.global-to-local, align 4
  %v2_c964 = xor i1 %v7_c95c, true
  %v3_c964 = and i1 %v2_c95c, %v2_c964
  br i1 %v3_c964, label %dec_label_pc_c9cc, label %dec_label_pc_c968

dec_label_pc_c968:                                ; preds = %bb
  %v4_c970 = mul nuw nsw i32 %v3_c954, 4
  %v5_c970 = add i32 %v4_c970, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37436)
  %v1_c974 = add i32 %v4_c970, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37416)
  %v2_c974 = inttoptr i32 %v1_c974 to i32*
  %v3_c974 = load i32, i32* %v2_c974, align 4
  store i32 %v3_c974, i32* %r5.global-to-local, align 4
  %v6_c978 = inttoptr i32 %v5_c970 to i32*
  %v7_c978 = load i32, i32* %v6_c978, align 4
  store i32 %v7_c978, i32* %r7.global-to-local, align 4
  %v2_c97c = icmp eq i32 %v3_c954, 0
  store i1 %v2_c97c, i1* %cpsr_z.global-to-local, align 1
  %v1_c980 = trunc i32 %v3_c974 to i8
  %v2_c980 = load i32, i32* %r4.global-to-local, align 4
  %v3_c980 = add i32 %v2_c980, 13
  %v4_c980 = inttoptr i32 %v3_c980 to i8*
  store i8 %v1_c980, i8* %v4_c980, align 1
  %v0_c984 = load i32, i32* %r7.global-to-local, align 4
  %v1_c984 = trunc i32 %v0_c984 to i8
  %v2_c984 = load i32, i32* %r4.global-to-local, align 4
  %v3_c984 = add i32 %v2_c984, 14
  %v4_c984 = inttoptr i32 %v3_c984 to i8*
  store i8 %v1_c984, i8* %v4_c984, align 1
  %v0_c988 = load i32, i32* %r1.global-to-local, align 4
  %v1_c988 = trunc i32 %v0_c988 to i8
  %v2_c988 = load i32, i32* %r4.global-to-local, align 4
  %v3_c988 = add i32 %v2_c988, 12
  %v4_c988 = inttoptr i32 %v3_c988 to i8*
  store i8 %v1_c988, i8* %v4_c988, align 1
  %v0_c98c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c98c, label %dec_label_pc_c9b8, label %dec_label_pc_c990

dec_label_pc_c990:                                ; preds = %dec_label_pc_c968
  %v0_c994 = load i32, i32* %r8.global-to-local, align 4
  %v2_c998 = sdiv i32 %v0_c994, 5
  store i32 %v2_c998, i32* %r0.global-to-local, align 4
  %v0_c99c = load i32, i32* %r6.global-to-local, align 4
  %v4_c99c = mul i32 %v2_c998, 4
  %v5_c99c = add i32 %v4_c99c, %v0_c99c
  %v1_c9a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9a0 = add i32 %v1_c9a0, 4
  %v3_c9a0 = inttoptr i32 %v2_c9a0 to i32*
  store i32 %v5_c99c, i32* %v3_c9a0, align 4
  %v0_c9a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_c9a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_c9a4 = add i32 %v1_c9a4, %v0_c9a4
  %v0_c9a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_c9ac = udiv i32 %v2_c9a4, %v0_c9a8
  %v3_c9ac = urem i32 %v2_c9a4, %v0_c9a8
  store i32 %v2_c9ac, i32* %r0.global-to-local, align 4
  %v0_c9b0 = load i32, i32* %r6.global-to-local, align 4
  %v4_c9b0 = mul i32 %v3_c9ac, 4
  %v5_c9b0 = add i32 %v0_c9b0, %v4_c9b0
  store i32 %v5_c9b0, i32* %r1.global-to-local, align 4
  %v1_c9b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9b4 = inttoptr i32 %v1_c9b4 to i32*
  store i32 %v5_c9b0, i32* %v2_c9b4, align 4
  br label %dec_label_pc_c9b8

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c968, %dec_label_pc_c990
  %v0_c9b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_c9b8 = load i32, i32* %r5.global-to-local, align 4
  %v4_c9b8 = mul i32 %v1_c9b8, 4
  %v5_c9b8 = add i32 %v4_c9b8, %v0_c9b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c9c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9c0 = add i32 %v1_c9c0, 16
  %v3_c9c0 = inttoptr i32 %v2_c9c0 to i32*
  store i32 %v5_c9b8, i32* %v3_c9c0, align 4
  %v0_c9c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_c9c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c9c4 = add i32 %v1_c9c4, 8
  %v3_c9c4 = inttoptr i32 %v2_c9c4 to i32*
  store i32 %v0_c9c4, i32* %v3_c9c4, align 4
  %v1_c9e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9e4

dec_label_pc_c9cc:                                ; preds = %bb
  %v0_c9d0 = call i32 @__aeabi_read_tp()
  %v3_c9d4 = load i16, i16* @global_var_22308.76, align 2
  %v4_c9d4 = sext i16 %v3_c9d4 to i32
  %v3_c9dc = add i32 %v4_c9d4, %v0_c9d0
  %v4_c9dc = inttoptr i32 %v3_c9dc to i32*
  store i32 22, i32* %v4_c9dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9e4

dec_label_pc_c9e4:                                ; preds = %dec_label_pc_c9b8, %dec_label_pc_c9cc
  %v1_c9e8 = phi i32 [ %v1_c9e8.pre, %dec_label_pc_c9b8 ], [ -1, %dec_label_pc_c9cc ]
  %v2_c9e4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_c9e4, i32* @r4, align 4
  ret i32 %v1_c9e8

; uselistorder directives
  uselistorder i32 %v0_c9a8, { 1, 0 }
  uselistorder i32 %v2_c9a4, { 1, 0 }
  uselistorder i32 %v3_c948, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 1, 2, 3, 4, 9, 5, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37436), { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c9e4, { 1, 0 }
  uselistorder label %dec_label_pc_c9b8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_ca08 = call i32 @strtol()
  ret i32 %v0_ca08
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_ca24 = call i32 @_stdlib_strto_l()
  ret i32 %v0_ca24
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  %v0_ca48 = load i32, i32* @r1, align 4
  store i32 %v0_ca48, i32* %sb.global-to-local, align 4
  %v0_ca4c = load i32, i32* @r2, align 4
  store i32 %v0_ca4c, i32* %r5.global-to-local, align 4
  %v0_ca50 = load i32, i32* @r0, align 4
  store i32 %v0_ca50, i32* %r4.global-to-local, align 4
  %v0_ca54 = load i32, i32* @r3, align 4
  br label %dec_label_pc_ca60

dec_label_pc_ca5c:                                ; preds = %dec_label_pc_ca60
  %v1_ca5c = add i32 %v0_ca98, 1
  store i32 %v1_ca5c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca60

dec_label_pc_ca60:                                ; preds = %entry, %dec_label_pc_ca5c
  %v0_ca98 = phi i32 [ %v0_ca50, %entry ], [ %v1_ca5c, %dec_label_pc_ca5c ]
  %v1_ca60 = inttoptr i32 %v0_ca98 to i8*
  %v2_ca60 = load i8, i8* %v1_ca60, align 1
  %v3_ca60 = zext i8 %v2_ca60 to i32
  store i32 %v3_ca60, i32* %r1.global-to-local, align 4
  %v4_ca64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 196) to i32*), align 4
  %v2_ca68 = mul nuw nsw i32 %v3_ca60, 2
  %v2_ca6c = add i32 %v2_ca68, %v4_ca64
  %v3_ca6c = inttoptr i32 %v2_ca6c to i16*
  %v4_ca6c = load i16, i16* %v3_ca6c, align 2
  %v1_ca70 = and i16 %v4_ca6c, 32
  %v2_ca70 = icmp eq i16 %v1_ca70, 0
  br i1 %v2_ca70, label %dec_label_pc_ca78, label %dec_label_pc_ca5c

dec_label_pc_ca78:                                ; preds = %dec_label_pc_ca60
  %v7_ca78 = icmp eq i8 %v2_ca60, 43
  br i1 %v7_ca78, label %dec_label_pc_ca98, label %dec_label_pc_ca80

dec_label_pc_ca80:                                ; preds = %dec_label_pc_ca78
  %v7_ca80 = icmp eq i8 %v2_ca60, 45
  br i1 %v7_ca80, label %dec_label_pc_ca98, label %bb

bb:                                               ; preds = %dec_label_pc_ca80
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ca9c

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca78, %dec_label_pc_ca80
  %storemerge47 = phi i32 [ 1, %dec_label_pc_ca80 ], [ 0, %dec_label_pc_ca78 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_ca98 = add i32 %v0_ca98, 1
  store i32 %v1_ca98, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ca9c

dec_label_pc_ca9c:                                ; preds = %bb, %dec_label_pc_ca98
  %v0_cabc = phi i32 [ %v0_ca98, %bb ], [ %v1_ca98, %dec_label_pc_ca98 ]
  %v1_ca9c = and i32 %v0_ca4c, -17
  %v3_ca9c = icmp eq i32 %v1_ca9c, 0
  br i1 %v3_ca9c, label %dec_label_pc_caa8, label %bb60

bb60:                                             ; preds = %dec_label_pc_ca9c
  br label %bb64

dec_label_pc_caa8:                                ; preds = %dec_label_pc_ca9c
  %v1_caa8 = inttoptr i32 %v0_cabc to i8*
  %v2_caa8 = load i8, i8* %v1_caa8, align 1
  %v7_caac = icmp eq i8 %v2_caa8, 48
  %v1_cab0 = add i32 %v0_ca4c, 10
  store i32 %v1_cab0, i32* %r5.global-to-local, align 4
  br i1 %v7_caac, label %dec_label_pc_cabc, label %bb61

bb61:                                             ; preds = %dec_label_pc_caa8
  br label %.thread8

dec_label_pc_cabc:                                ; preds = %dec_label_pc_caa8
  %v1_cabc = add i32 %v0_cabc, 1
  %v2_cabc = inttoptr i32 %v1_cabc to i8*
  %v3_cabc = load i8, i8* %v2_cabc, align 1
  %v4_cabc = zext i8 %v3_cabc to i32
  store i32 %v1_cabc, i32* %r4.global-to-local, align 4
  %v1_cac0 = or i32 %v4_cabc, 32
  %v7_cac4 = icmp eq i32 %v1_cac0, 120
  %v1_cac8 = add i32 %v0_ca4c, 8
  store i32 %v1_cac8, i32* %r5.global-to-local, align 4
  br i1 %v7_cac4, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_cabc
  %v3_cad4 = mul i32 %v1_cac8, 2
  store i32 %v3_cad4, i32* %r5.global-to-local, align 4
  %v2_cad8 = add i32 %v0_cabc, 2
  store i32 %v2_cad8, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_cabc, %bb61, %bb62
  %v1_cbac30 = phi i32 [ %v0_ca50, %bb61 ], [ %v1_cabc, %bb62 ], [ %v1_cabc, %dec_label_pc_cabc ]
  %v0_cb2821 = phi i32 [ %v0_cabc, %bb61 ], [ %v2_cad8, %bb62 ], [ %v1_cabc, %dec_label_pc_cabc ]
  %v0_cadc = phi i32 [ %v1_cab0, %bb61 ], [ %v3_cad4, %bb62 ], [ %v1_cac8, %dec_label_pc_cabc ]
  %v5_cae0 = icmp slt i32 %v0_cadc, 16
  br i1 %v5_cae0, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_cbac29 = phi i32 [ %v0_ca50, %bb60 ], [ %v1_cbac30, %.thread8 ], [ %v1_cbac30, %bb63 ]
  %v0_cb2820 = phi i32 [ %v0_cabc, %bb60 ], [ %v0_cb2821, %.thread8 ], [ %v0_cb2821, %bb63 ]
  %v0_cb08 = phi i32 [ %v0_ca4c, %bb60 ], [ %v0_cadc, %.thread8 ], [ 16, %bb63 ]
  %v1_cae4 = add i32 %v0_cb08, -2
  %tmp = icmp ugt i32 %v1_cae4, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_caf4

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cba8

dec_label_pc_caf4:                                ; preds = %bb64
  %v2_cafc = udiv i32 -1, %v0_cb08
  %v3_cafc = urem i32 -1, %v0_cb08
  store i32 %v0_cb08, i32* %r1.global-to-local, align 4
  %v1_cb0c = urem i32 %v3_cafc, 256
  store i32 %v1_cb0c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_cafc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cb28

dec_label_pc_cb24:                                ; preds = %bb71, %dec_label_pc_cb84
  %v0_cb24 = phi i32 [ %v1_cb6444, %bb71 ], [ %v0_cb24.pre, %dec_label_pc_cb84 ]
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb24
  %v1_cbac27 = phi i32 [ %v1_cbac29, %dec_label_pc_caf4 ], [ %v0_cb24, %dec_label_pc_cb24 ]
  %v0_cb64 = phi i32 [ %v0_cb2820, %dec_label_pc_caf4 ], [ %v0_cb24, %dec_label_pc_cb24 ]
  %v1_cb28 = inttoptr i32 %v0_cb64 to i8*
  %v2_cb28 = load i8, i8* %v1_cb28, align 1
  %v3_cb28 = zext i8 %v2_cb28 to i32
  %v1_cb2c = add nsw i32 %v3_cb28, -48
  %v1_cb30 = urem i32 %v1_cb2c, 256
  store i32 %v1_cb30, i32* %r1.global-to-local, align 4
  %v1_cb38 = or i32 %v3_cb28, 32
  %tmp79 = icmp ult i32 %v1_cb30, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_cb40

dec_label_pc_cb40:                                ; preds = %dec_label_pc_cb28
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_cb38, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_cb40
  %v1_cb44 = add nsw i32 %v1_cb38, -87
  %v5_cb4c = urem i32 %v1_cb44, 256
  store i32 %v5_cb4c, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_cb28, %dec_label_pc_cb40, %bb65
  %v3_cb7c = phi i32 [ %v1_cb30, %dec_label_pc_cb28 ], [ 40, %dec_label_pc_cb40 ], [ %v5_cb4c, %bb65 ]
  %v1_cb50 = load i32, i32* %r5.global-to-local, align 4
  %v6_cb54 = icmp slt i32 %v3_cb7c, %v1_cb50
  br i1 %v6_cb54, label %dec_label_pc_cb58, label %dec_label_pc_cba8.loopexit

dec_label_pc_cb58:                                ; preds = %bb66
  %v0_cb58 = load i32, i32* %ip.global-to-local, align 4
  %v1_cb58 = load i32, i32* %r8.global-to-local, align 4
  %v9_cb58 = icmp eq i32 %v0_cb58, %v1_cb58
  br i1 %v9_cb58, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_cb58
  %v1_cb6440 = add i32 %v0_cb64, 1
  store i32 %v1_cb6440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb6c

bb67:                                             ; preds = %dec_label_pc_cb58
  %v3_cb58 = icmp ult i32 %v0_cb58, %v1_cb58
  %v1_cb64 = add i32 %v0_cb64, 1
  store i32 %v1_cb64, i32* %r4.global-to-local, align 4
  br i1 %v3_cb58, label %dec_label_pc_cb6c, label %dec_label_pc_cb84

dec_label_pc_cb6c:                                ; preds = %bb67, %.thread39
  %v1_cb6444 = phi i32 [ %v1_cb6440, %.thread39 ], [ %v1_cb64, %bb67 ]
  %v4_cb742443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_cb6c = load i32, i32* %sl.global-to-local, align 4
  %v3_cb6c = icmp uge i32 %v3_cb7c, %v1_cb6c
  %v9_cb6c = icmp eq i32 %v3_cb7c, %v1_cb6c
  %v2_cb70 = xor i1 %v3_cb6c, true
  %v3_cb70 = or i1 %v9_cb6c, %v2_cb70
  br i1 %v3_cb70, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_cb6c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_cb6c, %bb68
  %v4_cb74 = phi i32 [ %v4_cb742443, %dec_label_pc_cb6c ], [ 0, %bb68 ]
  %v2_cb74 = xor i1 %v9_cb6c, true
  %v3_cb74 = and i1 %v3_cb6c, %v2_cb74
  br i1 %v3_cb74, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_cb74 = urem i32 %v4_cb74, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_cb78 = phi i32 [ %v5_cb74, %bb70 ], [ %v4_cb74, %bb69 ]
  %v2_cb78 = icmp eq i32 %v0_cb78, 0
  br i1 %v2_cb78, label %bb71, label %dec_label_pc_cb84

bb71:                                             ; preds = %thread-pre-split
  %v4_cb7c = mul i32 %v0_cb58, %v1_cb50
  %v5_cb7c = add i32 %v4_cb7c, %v3_cb7c
  store i32 %v5_cb7c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cb24

dec_label_pc_cb84:                                ; preds = %bb67, %thread-pre-split
  %v0_cb8c = call i32 @__aeabi_read_tp()
  %v0_cb90 = load i32, i32* %r7.global-to-local, align 4
  %v2_cb90 = and i32 %v0_ca54, %v0_cb90
  store i32 %v2_cb90, i32* %r7.global-to-local, align 4
  %v0_cb94 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_cb94, i32* %ip.global-to-local, align 4
  %v3_cb98 = load i16, i16* @global_var_22308.76, align 2
  %v4_cb98 = sext i16 %v3_cb98 to i32
  %v3_cba0 = add i32 %v4_cb98, %v0_cb8c
  %v4_cba0 = inttoptr i32 %v3_cba0 to i32*
  store i32 34, i32* %v4_cba0, align 4
  %v0_cb24.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cb24

dec_label_pc_cba8.loopexit:                       ; preds = %bb66
  %v0_cba8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_cba8

dec_label_pc_cba8:                                ; preds = %.thread, %dec_label_pc_cba8.loopexit
  %v1_cbac = phi i32 [ %v1_cbac27, %dec_label_pc_cba8.loopexit ], [ %v1_cbac29, %.thread ]
  %v2_cbac = phi i32 [ %v0_cba8.pre, %dec_label_pc_cba8.loopexit ], [ %v0_ca48, %.thread ]
  %v2_cba8 = icmp eq i32 %v2_cbac, 0
  br i1 %v2_cba8, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_cba8
  %v3_cbac = inttoptr i32 %v2_cbac to i32*
  store i32 %v1_cbac, i32* %v3_cbac, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_cba8, %bb72
  %v0_cbb4 = load i32, i32* %r7.global-to-local, align 4
  %v2_cbb4 = icmp eq i32 %v0_cbb4, 0
  %. = select i1 %v2_cbb4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_cbc0 = icmp eq i32 %v0_ca54, 0
  %v0_cbec.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_cbc0, label %dec_label_pc_cbe4, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_cbec.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_cbcc, label %dec_label_pc_cbe4

dec_label_pc_cbcc:                                ; preds = %bb76
  %v0_cbd0 = call i32 @__aeabi_read_tp()
  %v3_cbd4 = load i16, i16* @global_var_22308.76, align 2
  %v4_cbd4 = sext i16 %v3_cbd4 to i32
  %v3_cbdc = add i32 %v4_cbd4, %v0_cbd0
  %v4_cbdc = inttoptr i32 %v3_cbdc to i32*
  store i32 34, i32* %v4_cbdc, align 4
  %v0_cbe0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_cbe0, i32* %ip.global-to-local, align 4
  %v0_cbe4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cbe4

dec_label_pc_cbe4:                                ; preds = %bb76, %bb73, %dec_label_pc_cbcc
  %v0_cbec.pre = phi i32 [ %v0_cbec.pre.pre, %bb76 ], [ %v0_cbe0, %dec_label_pc_cbcc ], [ %v0_cbec.pre.pre, %bb73 ]
  %v0_cbe4 = phi i32 [ %v0_cbb4, %bb76 ], [ %v0_cbe4.pre, %dec_label_pc_cbcc ], [ %v0_cbb4, %bb73 ]
  %v2_cbe4 = icmp eq i32 %v0_cbe4, 0
  br i1 %v2_cbe4, label %dec_label_pc_cbe4._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_cbe4
  %v2_cbe8 = sub i32 0, %v0_cbec.pre
  store i32 %v2_cbe8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_cbe4._crit_edge

dec_label_pc_cbe4._crit_edge:                     ; preds = %dec_label_pc_cbe4, %bb77
  %v0_cbec = phi i32 [ %v2_cbe8, %bb77 ], [ %v0_cbec.pre, %dec_label_pc_cbe4 ]
  ret i32 %v0_cbec

; uselistorder directives
  uselistorder i32 %v0_cbec.pre, { 1, 0 }
  uselistorder i32 %v0_cbec.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_cb74, { 1, 0 }
  uselistorder i1 %v3_cb6c, { 1, 0 }
  uselistorder i32 %v1_cb6c, { 1, 0 }
  uselistorder i32 %v5_cb4c, { 1, 0 }
  uselistorder i32 %v1_cb38, { 1, 0 }
  uselistorder i32 %v1_cb30, { 2, 0, 1 }
  uselistorder i32 %v0_cb64, { 1, 0, 2 }
  uselistorder i32 %v0_cb24, { 1, 0 }
  uselistorder i32 %v3_cad4, { 1, 0 }
  uselistorder i32 %v1_cac8, { 1, 0, 2 }
  uselistorder i32 %v0_cabc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_ca98, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ca54, { 1, 0 }
  uselistorder i32 %v0_ca50, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ca4c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_cbe4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_cbe4, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_cba8, { 1, 0 }
  uselistorder label %dec_label_pc_cb84, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_cb24, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca9c, { 1, 0 }
  uselistorder label %dec_label_pc_ca98, { 1, 0 }
  uselistorder label %dec_label_pc_ca60, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  %v4_cc18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 148) to i32*), align 4
  store i32 %v4_cc18, i32* @r4, align 4
  %v2_cc20 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_cc38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_cc38)
  %v0_cc4c = load i32, i32* @r5, align 4
  %v2_cc4c = add i32 %v0_cc4c, 16
  %v3_cc4c = inttoptr i32 %v2_cc4c to i32*
  %v4_cc4c = load i32, i32* %v3_cc4c, align 4
  call void @__pseudo_branch(i32 %v4_cc4c)
  %v0_cc5c = load i32, i32* @r5, align 4
  %v2_cc5c = add i32 %v0_cc5c, 1252
  %v3_cc5c = inttoptr i32 %v2_cc5c to i32*
  %v4_cc5c = load i32, i32* %v3_cc5c, align 4
  %v2_cc64 = icmp eq i32 %v4_cc5c, 0
  br i1 %v2_cc64, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_cc70 = xor i1 %v2_cc64, true
  call void @__pseudo_cond_branch(i1 %v2_cc70, i32 %v4_cc5c)
  store i32 %v2_cc20, i32* @r0, align 4
  %v0_cc80 = load i32, i32* @r5, align 4
  %v2_cc80 = add i32 %v0_cc80, 48
  %v3_cc80 = inttoptr i32 %v2_cc80 to i32*
  %v4_cc80 = load i32, i32* %v3_cc80, align 4
  call void @__pseudo_branch(i32 %v4_cc80)
  %v0_cc8c = call i32 @__GI___uClibc_fini()
  %v0_cc94 = load i32, i32* @r5, align 4
  %v2_cc94 = add i32 %v0_cc94, -76452
  %v2_cc9c = icmp eq i32 %v2_cc94, 0
  br i1 %v2_cc9c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_cca4 = xor i1 %v2_cc9c, true
  call void @__pseudo_cond_branch(i1 %v2_cca4, i32 %v2_cc94)
  %v0_cca8 = load i32, i32* @r6, align 4
  %v1_ccac = call i32 @__GI__exit(i32 %v0_cca8)
  %v0_ccb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ccb0, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_ccb0 = load i32, i32* @r1, align 4
  %v5_ccb0 = mul i32 %v4_cc80, 8192
  %v6_ccb0 = and i32 %v1_ccb0, %v5_ccb0
  store i32 %v6_ccb0, i32* @r5, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_ccc8 = phi i32 [ %v1_ccac, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_ccc8

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 3, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37396), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_ccf0 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37396))
  store i32 %v1_ccf0, i32* @r6, align 4
  %v2_ccf4 = icmp eq i32 %v1_ccf0, 0
  br i1 %v2_ccf4, label %dec_label_pc_cd74, label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %entry
  store i32 196, i32* @sl, align 4
  %v0_cd04 = load i32, i32* @r4, align 4
  %v2_cd04 = add i32 %v0_cd04, -37384
  store i32 %v2_cd04, i32* @r8, align 4
  %v2_cd08 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_cd08, i32* @r7, align 4
  br label %bb18

dec_label_pc_cd10:                                ; preds = %bb18
  %v3_cd10 = load i32, i32* %stack_var_-36, align 4
  %v1_cd14 = inttoptr i32 %v3_cd10 to i32*
  %v2_cd14 = load i32, i32* %v1_cd14, align 4
  %v1_cd18 = inttoptr i32 %v2_cd14 to i8*
  %v2_cd18 = load i8, i8* %v1_cd18, align 1
  %v7_cd1c = icmp eq i8 %v2_cd18, 99
  br i1 %v7_cd1c, label %dec_label_pc_cd24, label %.backedge3

dec_label_pc_cd24:                                ; preds = %dec_label_pc_cd10
  %v1_cd24 = add i32 %v2_cd14, 1
  %v2_cd24 = inttoptr i32 %v1_cd24 to i8*
  %v3_cd24 = load i8, i8* %v2_cd24, align 1
  %v7_cd28 = icmp eq i8 %v3_cd24, 112
  br i1 %v7_cd28, label %dec_label_pc_cd30, label %.backedge3

dec_label_pc_cd30:                                ; preds = %dec_label_pc_cd24
  %v1_cd30 = add i32 %v2_cd14, 2
  %v2_cd30 = inttoptr i32 %v1_cd30 to i8*
  %v3_cd30 = load i8, i8* %v2_cd30, align 1
  %v7_cd34 = icmp eq i8 %v3_cd30, 117
  br i1 %v7_cd34, label %dec_label_pc_cd3c, label %.backedge3

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  %v1_cd3c = add i32 %v2_cd14, 3
  %v2_cd3c = inttoptr i32 %v1_cd3c to i8*
  %v3_cd3c = load i8, i8* %v2_cd3c, align 1
  %v4_cd3c = zext i8 %v3_cd3c to i32
  %v0_cd40 = load i32, i32* @r4, align 4
  %v1_cd40 = load i32, i32* @sl, align 4
  %v2_cd40 = add i32 %v1_cd40, %v0_cd40
  %v3_cd40 = inttoptr i32 %v2_cd40 to i32*
  %v4_cd40 = load i32, i32* %v3_cd40, align 4
  %v2_cd44 = mul nuw nsw i32 %v4_cd3c, 2
  %v2_cd48 = add i32 %v4_cd40, %v2_cd44
  %v3_cd48 = inttoptr i32 %v2_cd48 to i16*
  %v4_cd48 = load i16, i16* %v3_cd48, align 2
  %v1_cd4c = and i16 %v4_cd48, 8
  %v2_cd4c = icmp eq i16 %v1_cd4c, 0
  br i1 %v2_cd4c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_cd3c
  %v1_cd50 = load i32, i32* @r5, align 4
  %v2_cd50 = add i32 %v1_cd50, 1
  store i32 %v2_cd50, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_cd3c, %dec_label_pc_cd10, %dec_label_pc_cd24, %dec_label_pc_cd30
  %v0_cd54.pre = load i32, i32* @r6, align 4
  %v0_cd60.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_ccfc
  %v0_cd60 = phi i32 [ %v0_cd60.pre, %.backedge3 ], [ %v2_cd04, %dec_label_pc_ccfc ]
  %v0_cd54 = phi i32 [ %v0_cd54.pre, %.backedge3 ], [ %v1_ccf0, %dec_label_pc_ccfc ]
  %v4_cd64 = inttoptr i32 %v0_cd54 to i32*
  %v5_cd64 = call i32 @__GI_config_read(i32* %v4_cd64, i32 %v2_cd08, i32 258, i32 %v0_cd60)
  %v2_cd68 = icmp eq i32 %v5_cd64, 0
  br i1 %v2_cd68, label %dec_label_pc_cdd8, label %dec_label_pc_cd10

dec_label_pc_cd74:                                ; preds = %entry
  %v0_cd78 = load i32, i32* @r4, align 4
  %v2_cd78 = add i32 %v0_cd78, -37380
  store i32 %v2_cd78, i32* @r0, align 4
  %v1_cd7c = call i32 @__GI_config_open(i32 %v2_cd78)
  store i32 %v1_cd7c, i32* @r6, align 4
  %v2_cd80 = icmp eq i32 %v1_cd7c, 0
  br i1 %v2_cd80, label %bb19, label %dec_label_pc_cd8c

bb19:                                             ; preds = %dec_label_pc_cd74
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_cdd8

dec_label_pc_cd8c:                                ; preds = %dec_label_pc_cd74
  %v0_cd90 = load i32, i32* @r4, align 4
  %v2_cd90 = add i32 %v0_cd90, -37364
  store i32 %v2_cd90, i32* @r8, align 4
  %v2_cd98 = add i32 %v0_cd90, -37328
  store i32 %v2_cd98, i32* @r7, align 4
  %v2_cd9c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_cd9c, i32* @r4, align 4
  br label %bb21

dec_label_pc_cda4:                                ; preds = %bb21
  %v0_cdd0 = load i32, i32* @r8, align 4
  %v3_cda4 = load i32, i32* %stack_var_-36, align 4
  %v1_cda8 = inttoptr i32 %v3_cda4 to i32*
  %v2_cda8 = load i32, i32* %v1_cda8, align 4
  store i32 %v2_cda8, i32* @r1, align 4
  %v2_cdac = inttoptr i32 %v0_cdd0 to i8*
  %v3_cdac = call i32 @__GI_strcoll(i8* %v2_cdac, i32 %v2_cda8)
  %v2_cdb0 = icmp eq i32 %v3_cdac, 0
  br i1 %v2_cdb0, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_cda4
  %v1_cdb4 = load i32, i32* @r5, align 4
  %v2_cdb4 = add i32 %v1_cdb4, 1
  store i32 %v2_cdb4, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_cda4
  %v0_cdc0.pre = load i32, i32* @r7, align 4
  %v0_cdc4.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_cd8c
  %v0_cdc4 = phi i32 [ %v0_cdc4.pre, %.backedge ], [ %v1_cd7c, %dec_label_pc_cd8c ]
  %v0_cdc0 = phi i32 [ %v0_cdc0.pre, %.backedge ], [ %v2_cd98, %dec_label_pc_cd8c ]
  %v4_cdc8 = inttoptr i32 %v0_cdc4 to i32*
  %v5_cdc8 = call i32 @__GI_config_read(i32* %v4_cdc8, i32 %v2_cd9c, i32 459266, i32 %v0_cdc0)
  %v2_cdcc = icmp eq i32 %v5_cdc8, 0
  br i1 %v2_cdcc, label %dec_label_pc_cdd8, label %dec_label_pc_cda4

dec_label_pc_cdd8:                                ; preds = %bb18, %bb21, %bb19
  %v0_cdd8 = load i32, i32* @r6, align 4
  %v1_cddc = inttoptr i32 %v0_cdd8 to i32*
  %v2_cddc = call i32 @__GI_config_close(i32* %v1_cddc)
  %v0_cde0 = load i32, i32* @r5, align 4
  %v2_cde0 = icmp eq i32 %v0_cde0, 0
  %.v0_cde0 = select i1 %v2_cde0, i32 1, i32 %v0_cde0
  ret i32 %.v0_cde0

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_cdd8, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_d20c

bb:                                               ; preds = %entry
  %v7_ce30 = mul i32 %arg1, 4
  %v8_ce30 = add i32 %v7_ce30, ptrtoint (i32* @global_var_ce38.217 to i32)
  call void @__pseudo_branch(i32 %v8_ce30)
  br label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %bb, %entry
  %v0_d210 = call i32 @__aeabi_read_tp()
  %v3_d214 = load i16, i16* @global_var_22308.76, align 2
  %v4_d214 = sext i16 %v3_d214 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_d220 = add i32 %v4_d214, %v0_d210
  %v4_d220 = inttoptr i32 %v3_d220 to i32*
  store i32 22, i32* %v4_d220, align 4
  %v0_d404 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_d404

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 13148, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r8.global-to-local, align 4
  %v4_d53016 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13148) to i32*), align 4
  store i32 %v4_d53016, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d53418 = icmp eq i32 %v4_d53016, 0
  br i1 %v2_d53418, label %dec_label_pc_d53c, label %dec_label_pc_d460

dec_label_pc_d460:                                ; preds = %entry, %dec_label_pc_d530.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_d46c = load i32, i32* %r7.global-to-local, align 4
  %v1_d46c = add i32 %v0_d46c, 20
  %v2_d46c = inttoptr i32 %v1_d46c to i32*
  %v3_d46c = load i32, i32* %v2_d46c, align 4
  store i32 %v3_d46c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d470 = icmp eq i32 %v3_d46c, 0
  store i32 %v3_d46c, i32* %r4.global-to-local, align 4
  %v1_d478 = add i32 %v3_d46c, 1
  store i32 %v1_d478, i32* %r1.global-to-local, align 4
  br i1 %v2_d470, label %dec_label_pc_d530.backedge, label %dec_label_pc_d480

dec_label_pc_d530.backedge:                       ; preds = %dec_label_pc_d460, %dec_label_pc_d4ac
  %v0_d530 = load i32, i32* %r8.global-to-local, align 4
  %v1_d530 = load i32, i32* %r5.global-to-local, align 4
  %v2_d530 = add i32 %v1_d530, %v0_d530
  %v3_d530 = inttoptr i32 %v2_d530 to i32*
  %v4_d530 = load i32, i32* %v3_d530, align 4
  store i32 %v4_d530, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d534 = icmp eq i32 %v4_d530, 0
  br i1 %v2_d534, label %dec_label_pc_d53c, label %dec_label_pc_d460

dec_label_pc_d480:                                ; preds = %dec_label_pc_d460
  %v0_d480 = load i32, i32* %r8.global-to-local, align 4
  %v1_d480 = load i32, i32* %r5.global-to-local, align 4
  %v2_d480 = add i32 %v1_d480, %v0_d480
  %v3_d480 = inttoptr i32 %v2_d480 to i32*
  %v4_d480 = load i32, i32* %v3_d480, align 4
  %v1_d484 = add i32 %v4_d480, 20
  store i32 %v1_d484, i32* %r2.global-to-local, align 4
  %v1_d488132 = inttoptr i32 %v1_d484 to i32*
  %v2_d488133 = load i32, i32* %v1_d488132, align 4
  store i32 %v2_d488133, i32* %r3.global-to-local, align 4
  %v3_d48c135 = icmp uge i32 %v2_d488133, %v3_d46c
  store i1 %v3_d48c135, i1* %cpsr_c.global-to-local, align 1
  %v9_d48c141 = icmp eq i32 %v2_d488133, %v3_d46c
  br i1 %v9_d48c141, label %dec_label_pc_d494, label %dec_label_pc_d4ac

dec_label_pc_d494:                                ; preds = %dec_label_pc_d480, %dec_label_pc_d494.dec_label_pc_d488_crit_edge
  %v0_d494142 = phi i32 [ %v1_d48c.pre, %dec_label_pc_d494.dec_label_pc_d488_crit_edge ], [ %v3_d46c, %dec_label_pc_d480 ]
  store i32 %v0_d494142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d4a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d4a4, label %dec_label_pc_d4a8, label %dec_label_pc_d494.dec_label_pc_d488_crit_edge

dec_label_pc_d494.dec_label_pc_d488_crit_edge:    ; preds = %dec_label_pc_d494
  %v0_d488.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d48c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d488 = inttoptr i32 %v0_d488.pre to i32*
  %v2_d488 = load i32, i32* %v1_d488, align 4
  store i32 %v2_d488, i32* %r3.global-to-local, align 4
  %v3_d48c = icmp uge i32 %v2_d488, %v1_d48c.pre
  store i1 %v3_d48c, i1* %cpsr_c.global-to-local, align 1
  %v9_d48c = icmp eq i32 %v2_d488, %v1_d48c.pre
  br i1 %v9_d48c, label %dec_label_pc_d494, label %dec_label_pc_d4ac

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d494
  %v0_d4a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d4a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d480, %dec_label_pc_d494.dec_label_pc_d488_crit_edge, %dec_label_pc_d4a8
  %v0_d4ac = phi i32 [ %v0_d4a8, %dec_label_pc_d4a8 ], [ %v2_d488133, %dec_label_pc_d480 ], [ %v2_d488, %dec_label_pc_d494.dec_label_pc_d488_crit_edge ]
  %v1_d4ac = phi i32 [ %v0_d4a8, %dec_label_pc_d4a8 ], [ %v3_d46c, %dec_label_pc_d480 ], [ %v1_d48c.pre, %dec_label_pc_d494.dec_label_pc_d488_crit_edge ]
  %v3_d4ac = icmp uge i32 %v0_d4ac, %v1_d4ac
  store i1 %v3_d4ac, i1* %cpsr_c.global-to-local, align 1
  %v9_d4ac = icmp eq i32 %v0_d4ac, %v1_d4ac
  br i1 %v9_d4ac, label %dec_label_pc_d4b4, label %dec_label_pc_d530.backedge

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d4ac
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_d4c8 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d520, %dec_label_pc_d4b4
  %v0_d4b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_d4b8 = add i32 %v0_d4b8, 4
  %v2_d4b8 = inttoptr i32 %v1_d4b8 to i32*
  %v3_d4b8 = load i32, i32* %v2_d4b8, align 4
  store i32 %v3_d4b8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d4bc = icmp eq i32 %v3_d4b8, 0
  br i1 %v2_d4bc, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_d4b8
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_d4b8, %bb
  %v2_d4c4 = xor i1 %v2_d4bc, true
  call void @__pseudo_cond_branch(i1 %v2_d4c4, i32 %v3_d4b8)
  %v0_d4cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_d4cc, i32* %stack_var_-88, align 4
  %v1_d4d0 = inttoptr i32 %v0_d4cc to i32*
  %v2_d4d0 = load i32, i32* %v1_d4d0, align 4
  store i32 %v2_d4d0, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d4d4 = icmp eq i32 %v2_d4d0, 0
  store i32 %v2_d4c8, i32* %r5.global-to-local, align 4
  br i1 %v2_d4d4, label %dec_label_pc_d540.loopexit, label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %bb72
  %v1_d4e8 = add i32 %v2_d4d0, 20
  store i32 %v1_d4e8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d4ec

dec_label_pc_d4ec:                                ; preds = %dec_label_pc_d520.dec_label_pc_d4ec_crit_edge, %dec_label_pc_d4e8
  %v0_d4f0 = phi i32 [ %v0_d4f0.pre, %dec_label_pc_d520.dec_label_pc_d4ec_crit_edge ], [ %v1_d4e8, %dec_label_pc_d4e8 ]
  %v0_d4ec = phi i32 [ %v0_d4ec.pre, %dec_label_pc_d520.dec_label_pc_d4ec_crit_edge ], [ %v2_d4d0, %dec_label_pc_d4e8 ]
  %v1_d4ec = add i32 %v0_d4ec, 20
  %v2_d4ec = inttoptr i32 %v1_d4ec to i32*
  %v3_d4ec = load i32, i32* %v2_d4ec, align 4
  store i32 %v0_d4f0, i32* %r2.global-to-local, align 4
  store i32 %v3_d4ec, i32* %r4.global-to-local, align 4
  %v1_d4f8 = add i32 %v3_d4ec, 1
  store i32 %v1_d4f8, i32* %r1.global-to-local, align 4
  %v1_d4fc119 = inttoptr i32 %v0_d4f0 to i32*
  %v2_d4fc120 = load i32, i32* %v1_d4fc119, align 4
  store i32 %v2_d4fc120, i32* %r3.global-to-local, align 4
  %v3_d500122 = icmp uge i32 %v2_d4fc120, %v3_d4ec
  store i1 %v3_d500122, i1* %cpsr_c.global-to-local, align 1
  %v9_d500128 = icmp eq i32 %v2_d4fc120, %v3_d4ec
  br i1 %v9_d500128, label %dec_label_pc_d508, label %dec_label_pc_d520

dec_label_pc_d508:                                ; preds = %dec_label_pc_d4ec, %dec_label_pc_d508.dec_label_pc_d4fc_crit_edge
  %v0_d508129 = phi i32 [ %v1_d500.pre, %dec_label_pc_d508.dec_label_pc_d4fc_crit_edge ], [ %v3_d4ec, %dec_label_pc_d4ec ]
  store i32 %v0_d508129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d518 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d518, label %dec_label_pc_d51c, label %dec_label_pc_d508.dec_label_pc_d4fc_crit_edge

dec_label_pc_d508.dec_label_pc_d4fc_crit_edge:    ; preds = %dec_label_pc_d508
  %v0_d4fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d500.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d4fc = inttoptr i32 %v0_d4fc.pre to i32*
  %v2_d4fc = load i32, i32* %v1_d4fc, align 4
  store i32 %v2_d4fc, i32* %r3.global-to-local, align 4
  %v3_d500 = icmp uge i32 %v2_d4fc, %v1_d500.pre
  store i1 %v3_d500, i1* %cpsr_c.global-to-local, align 1
  %v9_d500 = icmp eq i32 %v2_d4fc, %v1_d500.pre
  br i1 %v9_d500, label %dec_label_pc_d508, label %dec_label_pc_d520

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d508
  %v0_d51c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d51c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d520

dec_label_pc_d520:                                ; preds = %dec_label_pc_d4ec, %dec_label_pc_d508.dec_label_pc_d4fc_crit_edge, %dec_label_pc_d51c
  %v0_d520 = phi i32 [ %v0_d51c, %dec_label_pc_d51c ], [ %v2_d4fc120, %dec_label_pc_d4ec ], [ %v2_d4fc, %dec_label_pc_d508.dec_label_pc_d4fc_crit_edge ]
  %v1_d520 = phi i32 [ %v0_d51c, %dec_label_pc_d51c ], [ %v3_d4ec, %dec_label_pc_d4ec ], [ %v1_d500.pre, %dec_label_pc_d508.dec_label_pc_d4fc_crit_edge ]
  %v3_d520 = icmp uge i32 %v0_d520, %v1_d520
  store i1 %v3_d520, i1* %cpsr_c.global-to-local, align 1
  %v9_d520 = icmp eq i32 %v0_d520, %v1_d520
  store i32 %v2_d4c8, i32* %r4.global-to-local, align 4
  br i1 %v9_d520, label %dec_label_pc_d4b8, label %dec_label_pc_d520.dec_label_pc_d4ec_crit_edge

dec_label_pc_d520.dec_label_pc_d4ec_crit_edge:    ; preds = %dec_label_pc_d520
  %v0_d4ec.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_d4f0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d4ec

dec_label_pc_d53c:                                ; preds = %dec_label_pc_d530.backedge, %entry
  %v0_d54431 = phi i32 [ ptrtoint (i32* @global_var_222a8.80 to i32), %entry ], [ %v0_d530, %dec_label_pc_d530.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d540

dec_label_pc_d540.loopexit:                       ; preds = %bb72
  store i32 %v2_d4c8, i32* %r6.global-to-local, align 4
  %v0_d544.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_d540

dec_label_pc_d540:                                ; preds = %dec_label_pc_d540.loopexit, %dec_label_pc_d53c
  %v0_d544 = phi i32 [ %v0_d544.pre, %dec_label_pc_d540.loopexit ], [ %v0_d54431, %dec_label_pc_d53c ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d544 = add i32 %v0_d544, 160
  %v3_d544 = inttoptr i32 %v2_d544 to i32*
  %v4_d544 = load i32, i32* %v3_d544, align 4
  store i32 %v4_d544, i32* %r7.global-to-local, align 4
  %v0_d548 = call i32 @__aeabi_read_tp()
  store i32 %v0_d548, i32* %r0.global-to-local, align 4
  %v1_d54c = add i32 %v4_d544, 8
  %v2_d54c = inttoptr i32 %v1_d54c to i32*
  %v3_d54c = load i32, i32* %v2_d54c, align 4
  store i32 %v3_d54c, i32* %r3.global-to-local, align 4
  %v1_d550 = add i32 %v0_d548, -1168
  store i32 %v1_d550, i32* %r5.global-to-local, align 4
  %v3_d554 = icmp uge i32 %v3_d54c, %v1_d550
  store i1 %v3_d554, i1* %cpsr_c.global-to-local, align 1
  %v9_d554 = icmp eq i32 %v3_d54c, %v1_d550
  br i1 %v9_d554, label %dec_label_pc_d6bc, label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d540
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d544, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_d568112 = inttoptr i32 %v4_d544 to i32*
  %v2_d568113 = load i32, i32* %v1_d568112, align 4
  store i32 %v2_d568113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d56c115 = icmp eq i32 %v2_d568113, 0
  br i1 %v9_d56c115, label %dec_label_pc_d574, label %dec_label_pc_d58c

dec_label_pc_d574:                                ; preds = %dec_label_pc_d55c, %dec_label_pc_d574.dec_label_pc_d568_crit_edge
  %v0_d574116 = phi i32 [ %v1_d56c.pre, %dec_label_pc_d574.dec_label_pc_d568_crit_edge ], [ 0, %dec_label_pc_d55c ]
  store i32 %v0_d574116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d584 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d584, label %dec_label_pc_d588, label %dec_label_pc_d574.dec_label_pc_d568_crit_edge

dec_label_pc_d574.dec_label_pc_d568_crit_edge:    ; preds = %dec_label_pc_d574
  %v0_d568.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d56c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d568 = inttoptr i32 %v0_d568.pre to i32*
  %v2_d568 = load i32, i32* %v1_d568, align 4
  store i32 %v2_d568, i32* %r3.global-to-local, align 4
  %v3_d56c = icmp uge i32 %v2_d568, %v1_d56c.pre
  store i1 %v3_d56c, i1* %cpsr_c.global-to-local, align 1
  %v9_d56c = icmp eq i32 %v2_d568, %v1_d56c.pre
  br i1 %v9_d56c, label %dec_label_pc_d574, label %dec_label_pc_d58c

dec_label_pc_d588:                                ; preds = %dec_label_pc_d574
  %v0_d588 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d588, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d58c

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d55c, %dec_label_pc_d574.dec_label_pc_d568_crit_edge, %dec_label_pc_d588
  %v0_d58c = phi i32 [ %v0_d588, %dec_label_pc_d588 ], [ %v2_d568113, %dec_label_pc_d55c ], [ %v2_d568, %dec_label_pc_d574.dec_label_pc_d568_crit_edge ]
  %v1_d58c = phi i32 [ %v0_d588, %dec_label_pc_d588 ], [ 0, %dec_label_pc_d55c ], [ %v1_d56c.pre, %dec_label_pc_d574.dec_label_pc_d568_crit_edge ]
  %v3_d58c = icmp uge i32 %v0_d58c, %v1_d58c
  store i1 %v3_d58c, i1* %cpsr_c.global-to-local, align 1
  %v9_d58c = icmp eq i32 %v0_d58c, %v1_d58c
  br i1 %v9_d58c, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_d58c
  %v1_d590 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_d590, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_d58c, %bb73
  %v1_d594 = xor i1 %v9_d58c, true
  call void @__pseudo_cond_branch(i1 %v1_d594, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_d598 = load i32, i32* %r5.global-to-local, align 4
  %v1_d598 = load i32, i32* %r7.global-to-local, align 4
  %v2_d598 = add i32 %v1_d598, 8
  %v3_d598 = inttoptr i32 %v2_d598 to i32*
  store i32 %v0_d598, i32* %v3_d598, align 4
  br label %dec_label_pc_d6bc

dec_label_pc_d6bc:                                ; preds = %bb74, %dec_label_pc_d540
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_d5a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_d5a0 = add i32 %v0_d5a0, 160
  %v3_d5a0 = inttoptr i32 %v2_d5a0 to i32*
  %v4_d5a0 = load i32, i32* %v3_d5a0, align 4
  store i32 %v4_d5a0, i32* %r2.global-to-local, align 4
  %v1_d5a4 = add i32 %v4_d5a0, 4
  %v2_d5a4 = inttoptr i32 %v1_d5a4 to i32*
  %v3_d5a4 = load i32, i32* %v2_d5a4, align 4
  %v1_d5a8 = add i32 %v3_d5a4, 1
  store i32 %v1_d5a8, i32* %r3.global-to-local, align 4
  store i32 %v1_d5a8, i32* %v2_d5a4, align 4
  %v0_d5b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_d5b0 = add i32 %v0_d5b0, 108
  %v2_d5b0 = inttoptr i32 %v1_d5b0 to i32*
  %v3_d5b0 = load i32, i32* %v2_d5b0, align 4
  store i32 %v3_d5b0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_d5b8 = sub i32 0, %v3_d5b0
  store i32 %v1_d5b8, i32* %v2_d5b0, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_d5cc = load i32, i32* %r5.global-to-local, align 4
  %v1_d5cc = add i32 %v0_d5cc, 104
  store i32 %v1_d5cc, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_d6c0.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d6c0 = add i32 %v0_d5cc, 108
  %v3_d6c0 = inttoptr i32 %v2_d6c0 to i32*
  store i32 %v0_d6c0.pre, i32* %v3_d6c0, align 4
  %v0_d6c4 = load i32, i32* %r8.global-to-local, align 4
  %v1_d6c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_d6c4 = add i32 %v1_d6c4, %v0_d6c4
  %v3_d6c4 = inttoptr i32 %v2_d6c4 to i32*
  %v4_d6c4 = load i32, i32* %v3_d6c4, align 4
  store i32 %v4_d6c4, i32* %r0.global-to-local, align 4
  %v1_d6c8 = add i32 %v4_d6c4, 4
  %v2_d6c8 = inttoptr i32 %v1_d6c8 to i32*
  %v3_d6c8 = load i32, i32* %v2_d6c8, align 4
  %v1_d6cc = add i32 %v3_d6c8, -1
  store i32 %v1_d6cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d6d0 = icmp eq i32 %v1_d6cc, 0
  store i32 %v1_d6cc, i32* %v2_d6c8, align 4
  br i1 %v2_d6d0, label %dec_label_pc_d6dc, label %dec_label_pc_d7ccthread-pre-split

dec_label_pc_d6dc:                                ; preds = %dec_label_pc_d6bc
  %v0_d6dc = load i32, i32* %r3.global-to-local, align 4
  %v1_d6dc = load i32, i32* %r0.global-to-local, align 4
  %v2_d6dc = add i32 %v1_d6dc, 8
  %v3_d6dc = inttoptr i32 %v2_d6dc to i32*
  store i32 %v0_d6dc, i32* %v3_d6dc, align 4
  %v0_d6e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d6e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d6e4

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d714.dec_label_pc_d6e4_crit_edge, %dec_label_pc_d6dc
  %v0_d6e4 = phi i32 [ %v0_d6e4.pre, %dec_label_pc_d714.dec_label_pc_d6e4_crit_edge ], [ %v0_d6e0, %dec_label_pc_d6dc ]
  %v1_d6e4 = inttoptr i32 %v0_d6e4 to i32*
  %v2_d6e4 = load i32, i32* %v1_d6e4, align 4
  store i32 %v2_d6e4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d6e4, i32* %r2.global-to-local, align 4
  %v2_d6f0100 = load i32, i32* %v1_d6e4, align 4
  store i32 %v2_d6f0100, i32* %r3.global-to-local, align 4
  %v3_d6f4102 = icmp uge i32 %v2_d6f0100, %v2_d6e4
  store i1 %v3_d6f4102, i1* %cpsr_c.global-to-local, align 1
  %v9_d6f4108 = icmp eq i32 %v2_d6f0100, %v2_d6e4
  br i1 %v9_d6f4108, label %dec_label_pc_d6fc, label %dec_label_pc_d714

dec_label_pc_d6fc:                                ; preds = %dec_label_pc_d6e4, %dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge
  %v0_d6fc109 = phi i32 [ %v1_d6f4.pre, %dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge ], [ %v2_d6e4, %dec_label_pc_d6e4 ]
  store i32 %v0_d6fc109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d70c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d70c, label %dec_label_pc_d710, label %dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge

dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge:    ; preds = %dec_label_pc_d6fc
  %v0_d6f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d6f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d6f0 = inttoptr i32 %v0_d6f0.pre to i32*
  %v2_d6f0 = load i32, i32* %v1_d6f0, align 4
  store i32 %v2_d6f0, i32* %r3.global-to-local, align 4
  %v3_d6f4 = icmp uge i32 %v2_d6f0, %v1_d6f4.pre
  store i1 %v3_d6f4, i1* %cpsr_c.global-to-local, align 1
  %v9_d6f4 = icmp eq i32 %v2_d6f0, %v1_d6f4.pre
  br i1 %v9_d6f4, label %dec_label_pc_d6fc, label %dec_label_pc_d714

dec_label_pc_d710:                                ; preds = %dec_label_pc_d6fc
  %v0_d710 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d714

dec_label_pc_d714:                                ; preds = %dec_label_pc_d6e4, %dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge, %dec_label_pc_d710
  %v0_d71c = phi i32 [ %v0_d710, %dec_label_pc_d710 ], [ %v2_d6f0100, %dec_label_pc_d6e4 ], [ %v2_d6f0, %dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge ]
  %v1_d714 = phi i32 [ %v0_d710, %dec_label_pc_d710 ], [ %v2_d6e4, %dec_label_pc_d6e4 ], [ %v1_d6f4.pre, %dec_label_pc_d6fc.dec_label_pc_d6f0_crit_edge ]
  %v3_d714 = icmp uge i32 %v0_d71c, %v1_d714
  store i1 %v3_d714, i1* %cpsr_c.global-to-local, align 1
  %v9_d714 = icmp eq i32 %v0_d71c, %v1_d714
  br i1 %v9_d714, label %dec_label_pc_d71c, label %dec_label_pc_d714.dec_label_pc_d6e4_crit_edge

dec_label_pc_d714.dec_label_pc_d6e4_crit_edge:    ; preds = %dec_label_pc_d714
  %v0_d6e4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d6e4

dec_label_pc_d71c:                                ; preds = %dec_label_pc_d714
  %v2_d71c = icmp ne i32 %v1_d714, 0
  store i1 %v2_d71c, i1* %cpsr_c.global-to-local, align 1
  %v7_d720 = icmp slt i32 %v1_d714, 2
  br i1 %v7_d720, label %dec_label_pc_d7ccthread-pre-split, label %dec_label_pc_d724

dec_label_pc_d724:                                ; preds = %dec_label_pc_d71c
  %v0_d724 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_d724, i32* %r0.global-to-local, align 4
  %v0_d728 = load i32, i32* %r1.global-to-local, align 4
  %v1_d728 = add i32 %v0_d728, 129
  store i32 %v1_d728, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d7ccthread-pre-split

dec_label_pc_d740:                                ; preds = %dec_label_pc_d7ccthread-pre-split, %dec_label_pc_d7c8
  %v0_d740 = phi i32 [ %v3_d7c8, %dec_label_pc_d7c8 ], [ %v0_d7cc.pr, %dec_label_pc_d7ccthread-pre-split ]
  %v1_d740 = inttoptr i32 %v0_d740 to i32*
  %v2_d740 = load i32, i32* %v1_d740, align 4
  store i32 %v2_d740, i32* %r3.global-to-local, align 4
  %v1_d744 = add i32 %v2_d740, 8
  %v2_d744 = inttoptr i32 %v1_d744 to i32*
  %v3_d744 = load i32, i32* %v2_d744, align 4
  store i32 %v3_d744, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d748 = icmp eq i32 %v3_d744, 0
  br i1 %v2_d748, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_d740
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_d740, %bb75
  %v2_d750 = xor i1 %v2_d748, true
  call void @__pseudo_cond_branch(i1 %v2_d750, i32 %v3_d744)
  %v0_d754 = load i32, i32* %r6.global-to-local, align 4
  %v1_d754 = inttoptr i32 %v0_d754 to i32*
  %v2_d754 = load i32, i32* %v1_d754, align 4
  store i32 %v2_d754, i32* %r5.global-to-local, align 4
  %v1_d758 = add i32 %v2_d754, 20
  store i32 %v1_d758, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d75c

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d790.dec_label_pc_d75c_crit_edge, %bb76
  %v0_d760 = phi i32 [ %v0_d760.pre, %dec_label_pc_d790.dec_label_pc_d75c_crit_edge ], [ %v1_d758, %bb76 ]
  %v0_d75c = phi i32 [ %v0_d75c.pre, %dec_label_pc_d790.dec_label_pc_d75c_crit_edge ], [ %v2_d754, %bb76 ]
  %v1_d75c = add i32 %v0_d75c, 20
  %v2_d75c = inttoptr i32 %v1_d75c to i32*
  %v3_d75c = load i32, i32* %v2_d75c, align 4
  store i32 %v0_d760, i32* %r2.global-to-local, align 4
  store i32 %v3_d75c, i32* %r4.global-to-local, align 4
  %v1_d768 = add i32 %v3_d75c, -1
  store i32 %v1_d768, i32* %r1.global-to-local, align 4
  %v1_d76c87 = inttoptr i32 %v0_d760 to i32*
  %v2_d76c88 = load i32, i32* %v1_d76c87, align 4
  store i32 %v2_d76c88, i32* %r3.global-to-local, align 4
  %v3_d77090 = icmp uge i32 %v2_d76c88, %v3_d75c
  store i1 %v3_d77090, i1* %cpsr_c.global-to-local, align 1
  %v9_d77096 = icmp eq i32 %v2_d76c88, %v3_d75c
  br i1 %v9_d77096, label %dec_label_pc_d778, label %dec_label_pc_d790

dec_label_pc_d778:                                ; preds = %dec_label_pc_d75c, %dec_label_pc_d778.dec_label_pc_d76c_crit_edge
  %v0_d77897 = phi i32 [ %v1_d770.pre, %dec_label_pc_d778.dec_label_pc_d76c_crit_edge ], [ %v3_d75c, %dec_label_pc_d75c ]
  store i32 %v0_d77897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d788 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d788, label %dec_label_pc_d78c, label %dec_label_pc_d778.dec_label_pc_d76c_crit_edge

dec_label_pc_d778.dec_label_pc_d76c_crit_edge:    ; preds = %dec_label_pc_d778
  %v0_d76c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d770.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d76c = inttoptr i32 %v0_d76c.pre to i32*
  %v2_d76c = load i32, i32* %v1_d76c, align 4
  store i32 %v2_d76c, i32* %r3.global-to-local, align 4
  %v3_d770 = icmp uge i32 %v2_d76c, %v1_d770.pre
  store i1 %v3_d770, i1* %cpsr_c.global-to-local, align 1
  %v9_d770 = icmp eq i32 %v2_d76c, %v1_d770.pre
  br i1 %v9_d770, label %dec_label_pc_d778, label %dec_label_pc_d790

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d778
  %v0_d78c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d78c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d790

dec_label_pc_d790:                                ; preds = %dec_label_pc_d75c, %dec_label_pc_d778.dec_label_pc_d76c_crit_edge, %dec_label_pc_d78c
  %v0_d79c = phi i32 [ %v0_d78c, %dec_label_pc_d78c ], [ %v2_d76c88, %dec_label_pc_d75c ], [ %v2_d76c, %dec_label_pc_d778.dec_label_pc_d76c_crit_edge ]
  %v1_d790 = phi i32 [ %v0_d78c, %dec_label_pc_d78c ], [ %v3_d75c, %dec_label_pc_d75c ], [ %v1_d770.pre, %dec_label_pc_d778.dec_label_pc_d76c_crit_edge ]
  %v3_d790 = icmp uge i32 %v0_d79c, %v1_d790
  store i1 %v3_d790, i1* %cpsr_c.global-to-local, align 1
  %v9_d790 = icmp eq i32 %v0_d79c, %v1_d790
  store i32 %v0_d79c, i32* %r2.global-to-local, align 4
  br i1 %v9_d790, label %dec_label_pc_d79c, label %dec_label_pc_d790.dec_label_pc_d75c_crit_edge

dec_label_pc_d790.dec_label_pc_d75c_crit_edge:    ; preds = %dec_label_pc_d790
  %v0_d75c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_d760.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d75c

dec_label_pc_d79c:                                ; preds = %dec_label_pc_d790
  %v2_d79c = icmp ne i32 %v1_d790, 0
  store i1 %v2_d79c, i1* %cpsr_c.global-to-local, align 1
  %v7_d79c = icmp eq i32 %v1_d790, 1
  %v0_d7a4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_d79c, label %dec_label_pc_d7a4, label %dec_label_pc_d7c8

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d79c
  %v1_d7a4 = inttoptr i32 %v0_d7a4 to i32*
  %v2_d7a4 = load i32, i32* %v1_d7a4, align 4
  store i32 %v2_d7a4, i32* %r1.global-to-local, align 4
  %v1_d7a8 = add i32 %v2_d7a4, 24
  %v2_d7a8 = inttoptr i32 %v1_d7a8 to i32*
  %v3_d7a8 = load i32, i32* %v2_d7a8, align 4
  store i32 %v3_d7a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d7ac = icmp eq i32 %v3_d7a8, 0
  br i1 %v2_d7ac, label %dec_label_pc_d7c8, label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d7a4
  %v1_d7b4 = add i32 %v2_d7a4, 20
  %v2_d7b4 = inttoptr i32 %v1_d7b4 to i32*
  %v3_d7b4 = load i32, i32* %v2_d7b4, align 4
  store i32 %v3_d7b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d7c8

dec_label_pc_d7c8:                                ; preds = %dec_label_pc_d79c, %dec_label_pc_d7b4, %dec_label_pc_d7a4
  %v1_d7c8 = add i32 %v0_d7a4, 4
  %v2_d7c8 = inttoptr i32 %v1_d7c8 to i32*
  %v3_d7c8 = load i32, i32* %v2_d7c8, align 4
  store i32 %v3_d7c8, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d7cc = icmp eq i32 %v3_d7c8, 0
  br i1 %v2_d7cc, label %dec_label_pc_d7d4, label %dec_label_pc_d740

dec_label_pc_d7ccthread-pre-split:                ; preds = %dec_label_pc_d724, %dec_label_pc_d71c, %dec_label_pc_d6bc
  %v0_d7cc.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d7cc11 = icmp eq i32 %v0_d7cc.pr, 0
  br i1 %v2_d7cc11, label %dec_label_pc_d7d4, label %dec_label_pc_d740

dec_label_pc_d7d4:                                ; preds = %dec_label_pc_d7c8, %dec_label_pc_d7ccthread-pre-split
  %v0_d7d4.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_d7d4.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_d7d4.pre

; uselistorder directives
  uselistorder i32 %v0_d7cc.pr, { 1, 0 }
  uselistorder i32 %v3_d7c8, { 1, 2, 0 }
  uselistorder i32 %v1_d790, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d78c, { 1, 0, 2 }
  uselistorder i32 %v1_d770.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d710, { 1, 0, 2 }
  uselistorder i32 %v1_d6f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d6e4, { 1, 0 }
  uselistorder i32 %v0_d588, { 1, 0, 2 }
  uselistorder i32 %v1_d56c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_d544, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d51c, { 1, 0, 2 }
  uselistorder i32 %v1_d500.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_d4c8, { 1, 0, 2 }
  uselistorder i32 %v0_d4a8, { 1, 0, 2 }
  uselistorder i32 %v1_d48c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_d46c, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 4, 5, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 8, 7, 1, 9, 10, 11, 12, 14, 13, 0, 15, 16, 17, 18, 19, 20, 21, 23, 22, 2, 24, 25, 26, 28, 27, 34, 29, 30, 32, 31, 3, 33 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 13, 7, 8, 9, 11, 10, 1, 12, 14, 15, 17, 16, 0, 18, 19, 21, 20, 2, 22, 23, 25, 24, 5, 26, 27, 28, 30, 29, 6, 32, 31, 4 }
  uselistorder label %dec_label_pc_d7d4, { 1, 0 }
  uselistorder label %dec_label_pc_d7c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d790, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d778, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_d714, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d6fc, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_d58c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d574, { 1, 0 }
  uselistorder label %dec_label_pc_d520, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d508, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_d4ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d494, { 1, 0 }
  uselistorder label %dec_label_pc_d530.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d460, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_d80c = load i32, i32* @r4, align 4
  store i32 %v3_d80c, i32* %stack_var_-16, align 4
  %v0_d810 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d810, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d814

dec_label_pc_d814:                                ; preds = %dec_label_pc_d894.dec_label_pc_d814_crit_edge, %entry
  %v0_d818 = phi i32 [ %v0_d818.pre, %dec_label_pc_d894.dec_label_pc_d814_crit_edge ], [ %v0_d810, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_d818, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_d82017 = inttoptr i32 %v0_d818 to i32*
  %v2_d82018 = load i32, i32* %v1_d82017, align 4
  %v3_d82420 = icmp ne i32 %v2_d82018, 0
  store i1 %v3_d82420, i1* %cpsr_c.global-to-local, align 1
  %v9_d82426 = icmp eq i32 %v2_d82018, 1
  br i1 %v9_d82426, label %dec_label_pc_d82c, label %dec_label_pc_d844

dec_label_pc_d82c:                                ; preds = %dec_label_pc_d814, %dec_label_pc_d82c.dec_label_pc_d820_crit_edge
  %v0_d82c27 = phi i32 [ %v1_d824.pre, %dec_label_pc_d82c.dec_label_pc_d820_crit_edge ], [ 1, %dec_label_pc_d814 ]
  store i32 %v0_d82c27, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d83c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d83c, label %dec_label_pc_d840, label %dec_label_pc_d82c.dec_label_pc_d820_crit_edge

dec_label_pc_d82c.dec_label_pc_d820_crit_edge:    ; preds = %dec_label_pc_d82c
  %v0_d820.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d824.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d820 = inttoptr i32 %v0_d820.pre to i32*
  %v2_d820 = load i32, i32* %v1_d820, align 4
  %v3_d824 = icmp uge i32 %v2_d820, %v1_d824.pre
  store i1 %v3_d824, i1* %cpsr_c.global-to-local, align 1
  %v9_d824 = icmp eq i32 %v2_d820, %v1_d824.pre
  br i1 %v9_d824, label %dec_label_pc_d82c, label %dec_label_pc_d844

dec_label_pc_d840:                                ; preds = %dec_label_pc_d82c
  %v0_d840 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d844

dec_label_pc_d844:                                ; preds = %dec_label_pc_d814, %dec_label_pc_d82c.dec_label_pc_d820_crit_edge, %dec_label_pc_d840
  %v0_d844 = phi i32 [ %v0_d840, %dec_label_pc_d840 ], [ %v2_d82018, %dec_label_pc_d814 ], [ %v2_d820, %dec_label_pc_d82c.dec_label_pc_d820_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d844 = icmp eq i32 %v0_d844, 0
  %v0_d868.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_d844, label %dec_label_pc_d864, label %dec_label_pc_d84c

dec_label_pc_d84c:                                ; preds = %dec_label_pc_d844
  store i32 %v0_d868.pre, i32* %r0.global-to-local, align 4
  %v0_d850 = load i32, i32* %r1.global-to-local, align 4
  %v1_d850 = add i32 %v0_d850, 126
  store i32 %v1_d850, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d864

dec_label_pc_d864:                                ; preds = %dec_label_pc_d844, %dec_label_pc_d84c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_d868.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_d87028 = inttoptr i32 %v0_d868.pre to i32*
  %v2_d87029 = load i32, i32* %v1_d87028, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d87436 = icmp eq i32 %v2_d87029, 0
  br i1 %v9_d87436, label %dec_label_pc_d87c, label %dec_label_pc_d894

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d864, %dec_label_pc_d87c.dec_label_pc_d870_crit_edge
  %v0_d87c37 = phi i32 [ %v1_d874.pre, %dec_label_pc_d87c.dec_label_pc_d870_crit_edge ], [ 0, %dec_label_pc_d864 ]
  store i32 %v0_d87c37, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d88c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d88c, label %dec_label_pc_d890, label %dec_label_pc_d87c.dec_label_pc_d870_crit_edge

dec_label_pc_d87c.dec_label_pc_d870_crit_edge:    ; preds = %dec_label_pc_d87c
  %v0_d870.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d874.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_d870 = inttoptr i32 %v0_d870.pre to i32*
  %v2_d870 = load i32, i32* %v1_d870, align 4
  %v3_d874 = icmp uge i32 %v2_d870, %v1_d874.pre
  store i1 %v3_d874, i1* %cpsr_c.global-to-local, align 1
  %v9_d874 = icmp eq i32 %v2_d870, %v1_d874.pre
  br i1 %v9_d874, label %dec_label_pc_d87c, label %dec_label_pc_d894

dec_label_pc_d890:                                ; preds = %dec_label_pc_d87c
  %v0_d890 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d894

dec_label_pc_d894:                                ; preds = %dec_label_pc_d864, %dec_label_pc_d87c.dec_label_pc_d870_crit_edge, %dec_label_pc_d890
  %v0_d894 = phi i32 [ %v0_d890, %dec_label_pc_d890 ], [ %v2_d87029, %dec_label_pc_d864 ], [ %v2_d870, %dec_label_pc_d87c.dec_label_pc_d870_crit_edge ]
  %v1_d894 = phi i32 [ %v0_d890, %dec_label_pc_d890 ], [ 0, %dec_label_pc_d864 ], [ %v1_d874.pre, %dec_label_pc_d87c.dec_label_pc_d870_crit_edge ]
  %v3_d894 = icmp uge i32 %v0_d894, %v1_d894
  store i1 %v3_d894, i1* %cpsr_c.global-to-local, align 1
  %v9_d894 = icmp eq i32 %v0_d894, %v1_d894
  br i1 %v9_d894, label %dec_label_pc_d89c, label %dec_label_pc_d894.dec_label_pc_d814_crit_edge

dec_label_pc_d894.dec_label_pc_d814_crit_edge:    ; preds = %dec_label_pc_d894
  %v0_d818.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d814

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d894
  %v2_d89c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_d89c, i32* %r4.global-to-local, align 4
  %v1_d8a0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_d8a0

; uselistorder directives
  uselistorder i32 %v0_d890, { 1, 0 }
  uselistorder i32 %v1_d874.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d824.pre, { 2, 1, 0 }
  uselistorder i32 %v2_d82018, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_d894, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d87c, { 1, 0 }
  uselistorder label %dec_label_pc_d864, { 1, 0 }
  uselistorder label %dec_label_pc_d844, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d82c, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d8a4 = load i32, i32* @r4, align 4
  store i32 %v3_d8a4, i32* %stack_var_-24, align 4
  store i32 13148, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r5.global-to-local, align 4
  %v0_d8b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d8b4, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13148), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8f0.dec_label_pc_d8bc_crit_edge, %entry
  %v0_d8c0 = phi i32 [ %v0_d8c0.pre, %dec_label_pc_d8f0.dec_label_pc_d8bc_crit_edge ], [ %v0_d8b4, %entry ]
  %v1_d8bc = phi i32 [ %v1_d8bc.pre, %dec_label_pc_d8f0.dec_label_pc_d8bc_crit_edge ], [ 13148, %entry ]
  %v0_d8bc = phi i32 [ %v0_d8bc.pre, %dec_label_pc_d8f0.dec_label_pc_d8bc_crit_edge ], [ ptrtoint (i32* @global_var_222a8.80 to i32), %entry ]
  %v2_d8bc = add i32 %v0_d8bc, %v1_d8bc
  %v3_d8bc = inttoptr i32 %v2_d8bc to i32*
  %v4_d8bc = load i32, i32* %v3_d8bc, align 4
  store i32 %v4_d8bc, i32* %r4.global-to-local, align 4
  %v2_d8c4 = inttoptr i32 %v0_d8c0 to i32*
  store i32 %v4_d8bc, i32* %v2_d8c4, align 4
  %v0_d8c8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_d8c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d8cc

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d8d8.dec_label_pc_d8cc_crit_edge, %dec_label_pc_d8bc
  %v0_d8cc = phi i32 [ %v0_d8cc.pre, %dec_label_pc_d8d8.dec_label_pc_d8cc_crit_edge ], [ %v0_d8c8, %dec_label_pc_d8bc ]
  %v1_d8cc = inttoptr i32 %v0_d8cc to i32*
  %v2_d8cc = load i32, i32* %v1_d8cc, align 4
  %v1_d8d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8d0 = icmp uge i32 %v2_d8cc, %v1_d8d0
  store i1 %v3_d8d0, i1* %cpsr_c.global-to-local, align 1
  %v9_d8d0 = icmp eq i32 %v2_d8cc, %v1_d8d0
  br i1 %v9_d8d0, label %dec_label_pc_d8d8, label %dec_label_pc_d8f0

dec_label_pc_d8d8:                                ; preds = %dec_label_pc_d8cc
  store i32 %v2_d8cc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d8e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d8e8, label %dec_label_pc_d8ec, label %dec_label_pc_d8d8.dec_label_pc_d8cc_crit_edge

dec_label_pc_d8d8.dec_label_pc_d8cc_crit_edge:    ; preds = %dec_label_pc_d8d8
  %v0_d8cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d8cc

dec_label_pc_d8ec:                                ; preds = %dec_label_pc_d8d8
  %v0_d8ec = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d8f0

dec_label_pc_d8f0:                                ; preds = %dec_label_pc_d8cc, %dec_label_pc_d8ec
  %v0_d8f0 = phi i32 [ %v0_d8ec, %dec_label_pc_d8ec ], [ %v2_d8cc, %dec_label_pc_d8cc ]
  %v1_d8f0 = phi i32 [ %v0_d8ec, %dec_label_pc_d8ec ], [ %v1_d8d0, %dec_label_pc_d8cc ]
  %v3_d8f0 = icmp uge i32 %v0_d8f0, %v1_d8f0
  store i1 %v3_d8f0, i1* %cpsr_c.global-to-local, align 1
  %v9_d8f0 = icmp eq i32 %v0_d8f0, %v1_d8f0
  br i1 %v9_d8f0, label %dec_label_pc_d8f8, label %dec_label_pc_d8f0.dec_label_pc_d8bc_crit_edge

dec_label_pc_d8f0.dec_label_pc_d8bc_crit_edge:    ; preds = %dec_label_pc_d8f0
  %v0_d8bc.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_d8bc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_d8c0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d8bc

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8f0
  %v2_d8f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d8f8, i32* %r4.global-to-local, align 4
  %v1_d8fc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_d8fc

; uselistorder directives
  uselistorder i32 %v0_d8ec, { 1, 0 }
  uselistorder i32 %v1_d8d0, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13148), { 1, 0 }
  uselistorder i32 13148, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_d8f0, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_d908 = load i32, i32* @r4, align 4
  %v12_d908 = load i32, i32* @r7, align 4
  %v15_d908 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 1256), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_d928 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d928, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 1256), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_d93c72 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 1256) to i32*), align 4
  store i32 %v2_d93c72, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d94074 = icmp eq i32 %v2_d93c72, 0
  br i1 %v9_d94074, label %dec_label_pc_d948, label %dec_label_pc_d960

dec_label_pc_d948:                                ; preds = %entry, %dec_label_pc_d948.dec_label_pc_d93c_crit_edge
  %v0_d94875 = phi i32 [ %v1_d940.pre, %dec_label_pc_d948.dec_label_pc_d93c_crit_edge ], [ 0, %entry ]
  store i32 %v0_d94875, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d958 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d958, label %dec_label_pc_d95c, label %dec_label_pc_d948.dec_label_pc_d93c_crit_edge

dec_label_pc_d948.dec_label_pc_d93c_crit_edge:    ; preds = %dec_label_pc_d948
  %v0_d93c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d940.pre = load i32, i32* @r4, align 4
  %v1_d93c = inttoptr i32 %v0_d93c.pre to i32*
  %v2_d93c = load i32, i32* %v1_d93c, align 4
  store i32 %v2_d93c, i32* %r3.global-to-local, align 4
  %v3_d940 = icmp uge i32 %v2_d93c, %v1_d940.pre
  store i1 %v3_d940, i1* %cpsr_c.global-to-local, align 1
  %v9_d940 = icmp eq i32 %v2_d93c, %v1_d940.pre
  br i1 %v9_d940, label %dec_label_pc_d948, label %dec_label_pc_d960

dec_label_pc_d95c:                                ; preds = %dec_label_pc_d948
  %v0_d95c = load i32, i32* @r4, align 4
  store i32 %v0_d95c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d960

dec_label_pc_d960:                                ; preds = %entry, %dec_label_pc_d948.dec_label_pc_d93c_crit_edge, %dec_label_pc_d95c
  %v0_d960 = phi i32 [ %v0_d95c, %dec_label_pc_d95c ], [ %v2_d93c72, %entry ], [ %v2_d93c, %dec_label_pc_d948.dec_label_pc_d93c_crit_edge ]
  %v1_d960 = phi i32 [ %v0_d95c, %dec_label_pc_d95c ], [ 0, %entry ], [ %v1_d940.pre, %dec_label_pc_d948.dec_label_pc_d93c_crit_edge ]
  %v3_d960 = icmp uge i32 %v0_d960, %v1_d960
  store i1 %v3_d960, i1* %cpsr_c.global-to-local, align 1
  %v9_d960 = icmp eq i32 %v0_d960, %v1_d960
  br i1 %v9_d960, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_d960
  %v1_d964 = load i32, i32* @r5, align 4
  store i32 %v1_d964, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_d960, %bb
  store i32 55660, i32* @lr, align 4
  %v1_d968 = xor i1 %v9_d960, true
  call void @__pseudo_cond_branch(i1 %v1_d968, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  store i32 1260, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_d974 = load i32, i32* @r6, align 4
  %v2_d974 = add i32 %v0_d974, 1260
  %v0_d978.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_d978.pre, 48
  br label %dec_label_pc_d978

dec_label_pc_d978:                                ; preds = %dec_label_pc_d99c, %bb48
  %v0_d99c = phi i32 [ %v2_d99c, %dec_label_pc_d99c ], [ %v2_d974, %bb48 ]
  store i32 %v0_d978.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_d980, label %dec_label_pc_d99c

dec_label_pc_d980:                                ; preds = %dec_label_pc_d978, %dec_label_pc_d990
  %v0_d990 = phi i32 [ %v1_d990, %dec_label_pc_d990 ], [ %v0_d978.pre, %dec_label_pc_d978 ]
  %v3_d980 = mul i32 %v0_d990, 28
  %v4_d980 = add i32 %v3_d980, %v0_d99c
  store i32 %v4_d980, i32* %r3.global-to-local, align 4
  %v1_d984 = add i32 %v4_d980, 24
  %v2_d984 = inttoptr i32 %v1_d984 to i32*
  %v3_d984 = load i32, i32* %v2_d984, align 4
  store i32 %v3_d984, i32* %r3.global-to-local, align 4
  %v2_d988 = icmp eq i32 %v3_d984, 0
  br i1 %v2_d988, label %dec_label_pc_d9d8.loopexit, label %dec_label_pc_d990

dec_label_pc_d990:                                ; preds = %dec_label_pc_d980
  %v1_d990 = add nuw nsw i32 %v0_d990, 1
  store i32 %v1_d990, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_d990, 48
  br i1 %tmp50, label %dec_label_pc_d980, label %dec_label_pc_d99c

dec_label_pc_d99c:                                ; preds = %dec_label_pc_d990, %dec_label_pc_d978
  %v1_d99c = inttoptr i32 %v0_d99c to i32*
  %v2_d99c = load i32, i32* %v1_d99c, align 4
  store i32 %v2_d99c, i32* @r7, align 4
  %v2_d9a0 = icmp eq i32 %v2_d99c, 0
  br i1 %v2_d9a0, label %dec_label_pc_d9a8, label %dec_label_pc_d978

dec_label_pc_d9a8:                                ; preds = %dec_label_pc_d99c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_d9b0 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_d9b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d9b4 = icmp eq i32 %v2_d9b0, 0
  br i1 %v2_d9b4, label %bb51, label %dec_label_pc_d9c0

bb51:                                             ; preds = %dec_label_pc_d9a8
  %v1_d9b8 = load i32, i32* @r7, align 4
  store i32 %v1_d9b8, i32* @r5, align 4
  br label %dec_label_pc_da08

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d9a8
  store i32 1260, i32* %r2.global-to-local, align 4
  %v0_d9c4 = load i32, i32* @r6, align 4
  %v2_d9c4 = add i32 %v0_d9c4, 1260
  %v3_d9c4 = inttoptr i32 %v2_d9c4 to i32*
  %v4_d9c4 = load i32, i32* %v3_d9c4, align 4
  store i32 %v4_d9c4, i32* %r3.global-to-local, align 4
  store i32 %v2_d9b0, i32* @r7, align 4
  %v2_d9cc = inttoptr i32 %v2_d9b0 to i32*
  store i32 %v4_d9c4, i32* %v2_d9cc, align 4
  %v0_d9d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_d9d0 = load i32, i32* @r6, align 4
  %v2_d9d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d9d0 = add i32 %v2_d9d0, %v1_d9d0
  %v4_d9d0 = inttoptr i32 %v3_d9d0 to i32*
  store i32 %v0_d9d0, i32* %v4_d9d0, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_d9dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d9d8

dec_label_pc_d9d8.loopexit:                       ; preds = %dec_label_pc_d980
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_d9d8

dec_label_pc_d9d8:                                ; preds = %dec_label_pc_d9d8.loopexit, %dec_label_pc_d9c0
  %v2_d9dc = phi i32 [ %v0_d99c, %dec_label_pc_d9d8.loopexit ], [ %v2_d9dc.pre, %dec_label_pc_d9c0 ]
  %v0_d9dc = phi i32 [ %v0_d990, %dec_label_pc_d9d8.loopexit ], [ 47, %dec_label_pc_d9c0 ]
  %v3_d9dc = mul i32 %v0_d9dc, 28
  %v4_d9dc = add i32 %v3_d9dc, %v2_d9dc
  store i32 %v4_d9dc, i32* %r3.global-to-local, align 4
  %v2_d9e4 = add i32 %v4_d9dc, 24
  %v3_d9e4 = inttoptr i32 %v2_d9e4 to i32*
  store i32 1, i32* %v3_d9e4, align 4
  %v0_d9e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d9e8 = add i32 %v0_d9e8, 4
  store i32 %v1_d9e8, i32* @r5, align 4
  %v2_d9e8 = icmp ugt i32 %v0_d9e8, -5
  store i1 %v2_d9e8, i1* %cpsr_c.global-to-local, align 1
  %v7_d9e8 = icmp eq i32 %v1_d9e8, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d9f0 = add i32 %v0_d9e8, 28
  %v3_d9f0 = inttoptr i32 %v2_d9f0 to i32*
  store i32 0, i32* %v3_d9f0, align 4
  br i1 %v7_d9e8, label %dec_label_pc_da08, label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d9d8
  %v0_d9f8 = load i32, i32* @r5, align 4
  %v1_d9f8 = add i32 %v0_d9f8, 4
  %v2_d9f8 = inttoptr i32 %v1_d9f8 to i32*
  %v3_d9f8 = load i32, i32* @r8, align 4
  store i32 %v3_d9f8, i32* %v2_d9f8, align 4
  %v4_d9f8 = add i32 %v0_d9f8, 8
  %v5_d9f8 = inttoptr i32 %v4_d9f8 to i32*
  %v6_d9f8 = load i32, i32* @sb, align 4
  store i32 %v6_d9f8, i32* %v5_d9f8, align 4
  %v7_d9f8 = add i32 %v0_d9f8, 12
  %v8_d9f8 = inttoptr i32 %v7_d9f8 to i32*
  %v9_d9f8 = load i32, i32* @fp, align 4
  store i32 %v9_d9f8, i32* %v8_d9f8, align 4
  %v0_d9fc = load i32, i32* @sl, align 4
  %v1_d9fc = load i32, i32* @r5, align 4
  %v2_d9fc = add i32 %v1_d9fc, 16
  %v3_d9fc = inttoptr i32 %v2_d9fc to i32*
  store i32 %v0_d9fc, i32* %v3_d9fc, align 4
  %v0_da00 = load i32, i32* @r5, align 4
  store i32 %v0_da00, i32* %r0.global-to-local, align 4
  %v1_da04 = inttoptr i32 %v0_da00 to i32*
  %v2_da04 = call i32 @__linkin_atfork(i32* %v1_da04)
  store i32 %v2_da04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_da08

dec_label_pc_da08:                                ; preds = %bb51, %dec_label_pc_d9d8, %dec_label_pc_d9f8
  store i32 1256, i32* %r7.global-to-local, align 4
  %v0_da0c = load i32, i32* @r6, align 4
  %v2_da0c = add i32 %v0_da0c, 1256
  store i32 %v2_da0c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_da10

dec_label_pc_da10:                                ; preds = %dec_label_pc_da40.dec_label_pc_da10_crit_edge, %dec_label_pc_da08
  %v0_da18 = phi i32 [ %v0_da18.pre, %dec_label_pc_da40.dec_label_pc_da10_crit_edge ], [ %v2_da0c, %dec_label_pc_da08 ]
  %v1_da10 = phi i32 [ %v1_da10.pre, %dec_label_pc_da40.dec_label_pc_da10_crit_edge ], [ 1256, %dec_label_pc_da08 ]
  %v0_da10 = phi i32 [ %v0_da10.pre, %dec_label_pc_da40.dec_label_pc_da10_crit_edge ], [ %v0_da0c, %dec_label_pc_da08 ]
  %v2_da10 = add i32 %v0_da10, %v1_da10
  %v3_da10 = inttoptr i32 %v2_da10 to i32*
  %v4_da10 = load i32, i32* %v3_da10, align 4
  store i32 %v4_da10, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_da18, i32* %r2.global-to-local, align 4
  %v1_da1c60 = inttoptr i32 %v0_da18 to i32*
  %v2_da1c61 = load i32, i32* %v1_da1c60, align 4
  store i32 %v2_da1c61, i32* %r3.global-to-local, align 4
  %v3_da2063 = icmp uge i32 %v2_da1c61, %v4_da10
  store i1 %v3_da2063, i1* %cpsr_c.global-to-local, align 1
  %v9_da2069 = icmp eq i32 %v2_da1c61, %v4_da10
  br i1 %v9_da2069, label %dec_label_pc_da28, label %dec_label_pc_da40

dec_label_pc_da28:                                ; preds = %dec_label_pc_da10, %dec_label_pc_da28.dec_label_pc_da1c_crit_edge
  %v0_da2870 = phi i32 [ %v1_da20.pre, %dec_label_pc_da28.dec_label_pc_da1c_crit_edge ], [ %v4_da10, %dec_label_pc_da10 ]
  store i32 %v0_da2870, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_da38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_da38, label %dec_label_pc_da3c, label %dec_label_pc_da28.dec_label_pc_da1c_crit_edge

dec_label_pc_da28.dec_label_pc_da1c_crit_edge:    ; preds = %dec_label_pc_da28
  %v0_da1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_da20.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_da1c = inttoptr i32 %v0_da1c.pre to i32*
  %v2_da1c = load i32, i32* %v1_da1c, align 4
  store i32 %v2_da1c, i32* %r3.global-to-local, align 4
  %v3_da20 = icmp uge i32 %v2_da1c, %v1_da20.pre
  store i1 %v3_da20, i1* %cpsr_c.global-to-local, align 1
  %v9_da20 = icmp eq i32 %v2_da1c, %v1_da20.pre
  br i1 %v9_da20, label %dec_label_pc_da28, label %dec_label_pc_da40

dec_label_pc_da3c:                                ; preds = %dec_label_pc_da28
  %v0_da3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_da3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_da40

dec_label_pc_da40:                                ; preds = %dec_label_pc_da10, %dec_label_pc_da28.dec_label_pc_da1c_crit_edge, %dec_label_pc_da3c
  %v0_da48 = phi i32 [ %v0_da3c, %dec_label_pc_da3c ], [ %v2_da1c61, %dec_label_pc_da10 ], [ %v2_da1c, %dec_label_pc_da28.dec_label_pc_da1c_crit_edge ]
  %v1_da40 = phi i32 [ %v0_da3c, %dec_label_pc_da3c ], [ %v4_da10, %dec_label_pc_da10 ], [ %v1_da20.pre, %dec_label_pc_da28.dec_label_pc_da1c_crit_edge ]
  %v3_da40 = icmp uge i32 %v0_da48, %v1_da40
  store i1 %v3_da40, i1* %cpsr_c.global-to-local, align 1
  %v9_da40 = icmp eq i32 %v0_da48, %v1_da40
  br i1 %v9_da40, label %dec_label_pc_da48, label %dec_label_pc_da40.dec_label_pc_da10_crit_edge

dec_label_pc_da40.dec_label_pc_da10_crit_edge:    ; preds = %dec_label_pc_da40
  %v0_da10.pre = load i32, i32* @r6, align 4
  %v1_da10.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_da18.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_da10

dec_label_pc_da48:                                ; preds = %dec_label_pc_da40
  %v2_da48 = icmp ne i32 %v1_da40, 0
  store i1 %v2_da48, i1* %cpsr_c.global-to-local, align 1
  %v7_da4c = icmp slt i32 %v1_da40, 2
  br i1 %v7_da4c, label %dec_label_pc_da68, label %dec_label_pc_da50

dec_label_pc_da50:                                ; preds = %dec_label_pc_da48
  %v0_da50 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_da50, i32* %r0.global-to-local, align 4
  %v0_da54 = load i32, i32* %r1.global-to-local, align 4
  %v1_da54 = add i32 %v0_da54, 129
  store i32 %v1_da54, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_da68

dec_label_pc_da68:                                ; preds = %dec_label_pc_da50, %dec_label_pc_da48
  %v0_da68 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_da68 = icmp eq i32 %v0_da68, 0
  %. = select i1 %v2_da68, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_d908, i32* %r4.global-to-local, align 4
  store i32 %v12_d908, i32* %r7.global-to-local, align 4
  store i32 %v15_d908, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_da3c, { 1, 0, 2 }
  uselistorder i32 %v1_da20.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_d9b0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_d99c, { 1, 2, 0 }
  uselistorder i32 %v1_d990, { 1, 2, 0 }
  uselistorder i32 %v0_d990, { 0, 2, 1 }
  uselistorder i32 %v0_d99c, { 0, 2, 1 }
  uselistorder i32 %v0_d978.pre, { 0, 2, 1 }
  uselistorder i32 %v0_d95c, { 1, 0, 2 }
  uselistorder i32 %v1_d940.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 5, 12, 13, 6, 0, 7, 1, 8, 9, 10, 11 }
  uselistorder i32 1260, { 0, 2, 1, 3 }
  uselistorder i32 1256, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_da40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_da28, { 1, 0 }
  uselistorder label %dec_label_pc_da08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d980, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_d960, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d948, { 1, 0 }
}

define i32 @function_da84(i32 %arg1) local_unnamed_addr {
dec_label_pc_da84:
  %v0_da84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_da84, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_da84
  %v2_da84 = load i32, i32* @r8, align 4
  %v3_da84 = udiv i32 %v2_da84, 512
  %v4_da84 = mul i32 %v2_da84, 8388608
  %v5_da84 = or i32 %v3_da84, %v4_da84
  %v8_da84 = and i32 %v5_da84, %arg1
  %v2_da88 = load i32, i32* @ip, align 4
  %v3_da88 = udiv i32 %v2_da88, 512
  %v4_da88 = mul i32 %v2_da88, 8388608
  %v5_da88 = or i32 %v3_da88, %v4_da88
  %v8_da88 = and i32 %v8_da84, %v5_da88
  %v2_da8c = load i32, i32* @r4, align 4
  %v5_da8c = sdiv i32 %v2_da8c, 1024
  %v6_da8c = and i32 %v8_da88, %v5_da8c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_da84, %bb
  %v7_da8c = phi i32 [ %arg1, %dec_label_pc_da84 ], [ %v6_da8c, %bb ]
  ret i32 %v7_da8c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_da90 = load i32, i32* @r7, align 4
  store i32 %v3_da90, i32* %stack_var_-8, align 4
  %v0_da94 = call i32 @__aeabi_read_tp()
  store i32 %v0_da94, i32* %r0.global-to-local, align 4
  %v1_da98 = add i32 %v0_da94, -1060
  %v2_da98 = inttoptr i32 %v1_da98 to i32*
  %v3_da98 = load i32, i32* %v2_da98, align 4
  %tmp7 = icmp slt i32 %v3_da98, 1
  br i1 %tmp7, label %dec_label_pc_daa8, label %dec_label_pc_dacc

dec_label_pc_daa8:                                ; preds = %entry
  %v2_da9c = icmp eq i32 %v3_da98, 0
  br i1 %v2_da9c, label %dec_label_pc_daac, label %dec_label_pc_dab8

dec_label_pc_daac:                                ; preds = %dec_label_pc_daa8
  %v1_daac = add i32 %v0_da94, -1064
  %v2_daac = inttoptr i32 %v1_daac to i32*
  %v3_daac = load i32, i32* %v2_daac, align 4
  store i32 %v3_daac, i32* %r0.global-to-local, align 4
  %v2_dab0 = icmp eq i32 %v3_daac, 0
  br i1 %v2_dab0, label %bb, label %bb8

dec_label_pc_dab8:                                ; preds = %dec_label_pc_daa8
  br label %bb8

bb:                                               ; preds = %dec_label_pc_daac
  store i32 0, i32* %v2_daac, align 4
  %v0_dac8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_dab8, %dec_label_pc_daac, %bb
  %v0_dac8 = phi i32 [ %v3_daac, %dec_label_pc_daac ], [ %v0_da94, %dec_label_pc_dab8 ], [ %v0_dac8.pre, %bb ]
  br label %dec_label_pc_dacc

dec_label_pc_dacc:                                ; preds = %entry, %bb8
  %v0_dacc = phi i32 [ %v3_da98, %entry ], [ %v0_dac8, %bb8 ]
  store i32 %v0_dacc, i32* %r0.global-to-local, align 4
  %v2_dad0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dad0, i32* @r7, align 4
  ret i32 %v0_dacc

; uselistorder directives
  uselistorder i32 %v0_dacc, { 1, 0 }
  uselistorder i32 %v3_da98, { 1, 2, 0 }
  uselistorder label %dec_label_pc_dacc, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_dad8 = load i32, i32* @r4, align 4
  store i32 %v3_dad8, i32* %stack_var_-20, align 4
  %v0_dae0 = call i32 @__aeabi_read_tp()
  store i32 %v0_dae0, i32* %r0.global-to-local, align 4
  %v1_dae4 = add i32 %v0_dae0, -1064
  %v2_dae4 = inttoptr i32 %v1_dae4 to i32*
  %v3_dae4 = load i32, i32* %v2_dae4, align 4
  store i32 %v3_dae4, i32* %r4.global-to-local, align 4
  %v2_dae8 = icmp eq i32 %v3_dae4, 0
  %v1_daf0 = add i32 %v0_dae0, -1060
  %v2_daf0 = inttoptr i32 %v1_daf0 to i32*
  %v3_daf0 = load i32, i32* %v2_daf0, align 4
  store i32 %v3_daf0, i32* %r0.global-to-local, align 4
  br i1 %v2_dae8, label %dec_label_pc_daf8, label %dec_label_pc_db0c

dec_label_pc_daf8:                                ; preds = %entry
  store i32 %v3_daf0, i32* %r4.global-to-local, align 4
  store i32 %v3_daf0, i32* %v2_dae4, align 4
  %v0_db34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_db0c:                                ; preds = %entry
  %v5_db10 = icmp sgt i32 %v3_daf0, 0
  br i1 %v5_db10, label %bb28, label %dec_label_pc_db14

dec_label_pc_db14:                                ; preds = %dec_label_pc_db0c
  %tmp = bitcast i32 %v3_daf0 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_db14 = bitcast float %tmp30 to i32
  %v2_db18 = icmp eq i32 %v1_db14, 0
  br i1 %v2_db18, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_db14
  store i32 %v3_dae4, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_db14
  %v2_db20 = sub i32 0, %v3_daf0
  store i32 %v2_db20, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_db0c, %dec_label_pc_daf8, %.thread
  %v0_db38 = phi i32 [ %v3_daf0, %dec_label_pc_db0c ], [ %v0_db34.pre, %dec_label_pc_daf8 ], [ %v3_dae4, %bb ], [ %v2_db20, %.thread ]
  store i32 %v0_db38, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_db38, -4095
  br i1 %tmp31, label %dec_label_pc_db5c, label %dec_label_pc_db44

dec_label_pc_db44:                                ; preds = %bb28
  %v0_db48 = call i32 @__aeabi_read_tp()
  %v3_db4c = load i16, i16* @global_var_22308.76, align 2
  %v4_db4c = sext i16 %v3_db4c to i32
  %v0_db50 = load i32, i32* %r2.global-to-local, align 4
  %v1_db50 = sub i32 0, %v0_db50
  store i32 %v1_db50, i32* %r2.global-to-local, align 4
  %v3_db54 = add i32 %v4_db4c, %v0_db48
  %v4_db54 = inttoptr i32 %v3_db54 to i32*
  store i32 %v1_db50, i32* %v4_db54, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_db5c

dec_label_pc_db5c:                                ; preds = %bb28, %dec_label_pc_db44
  %v0_db60 = phi i32 [ %v0_db38, %bb28 ], [ -1, %dec_label_pc_db44 ]
  %v3_db5c = icmp eq i32 %v0_db60, -1
  store i32 %v0_db60, i32* %r5.global-to-local, align 4
  br i1 %v3_db5c, label %dec_label_pc_db68, label %dec_label_pc_dbb0

dec_label_pc_db68:                                ; preds = %dec_label_pc_db5c
  %v0_db6c = call i32 @__aeabi_read_tp()
  store i32 %v0_db6c, i32* %r0.global-to-local, align 4
  %v3_db70 = load i16, i16* @global_var_22308.76, align 2
  %v4_db70 = sext i16 %v3_db70 to i32
  %v2_db74 = add i32 %v4_db70, %v0_db6c
  %v3_db74 = inttoptr i32 %v2_db74 to i32*
  %v4_db74 = load i32, i32* %v3_db74, align 4
  %v7_db78 = icmp eq i32 %v4_db74, 38
  br i1 %v7_db78, label %dec_label_pc_db84, label %dec_label_pc_db68.dec_label_pc_dbb0_crit_edge

dec_label_pc_db68.dec_label_pc_dbb0_crit_edge:    ; preds = %dec_label_pc_db68
  %v0_dbb0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dbb0

dec_label_pc_db84:                                ; preds = %dec_label_pc_db68
  %v0_db84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_db84, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_db84, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_db84
  %v5_db9c = sub i32 0, %v0_db84
  store i32 %v5_db9c, i32* %r2.global-to-local, align 4
  %v7_dba0 = load i32, i32* inttoptr (i32 140040 to i32*), align 8
  %v4_dba4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_dba4, i32* %r0.global-to-local, align 4
  %v7_dba8 = add i32 %v7_dba0, %v0_db6c
  %v8_dba8 = inttoptr i32 %v7_dba8 to i32*
  store i32 %v5_db9c, i32* %v8_dba8, align 4
  %v0_dbac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_db84, %bb29
  %v0_dbac = phi i32 [ %v0_dbac.pre, %bb29 ], [ %v0_db84, %dec_label_pc_db84 ]
  store i32 %v0_dbac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dbb0

dec_label_pc_dbb0:                                ; preds = %dec_label_pc_db68.dec_label_pc_dbb0_crit_edge, %dec_label_pc_db5c, %.thread22
  %v0_dbb0 = phi i32 [ %v0_dbb0.pre, %dec_label_pc_db68.dec_label_pc_dbb0_crit_edge ], [ %v0_db60, %dec_label_pc_db5c ], [ %v0_dbac, %.thread22 ]
  store i32 %v0_dbb0, i32* %r0.global-to-local, align 4
  %v2_dbb4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_dbb4, i32* @r4, align 4
  ret i32 %v0_dbb0

; uselistorder directives
  uselistorder i32 %v0_dbb0, { 1, 0 }
  uselistorder i32 %v0_db84, { 1, 2, 0, 3 }
  uselistorder i32 %v0_db38, { 2, 0, 1 }
  uselistorder i32 %v3_daf0, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_dbb0, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_db5c, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_dbe4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_dbe4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_dbe4 = load i32, i32* @r0, align 4
  ret i32 %v2_dbe4

bb1:                                              ; preds = %entry
  %v0_dbe8 = call i32 @__syscall_error()
  ret i32 %v0_dbe8
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dbf4 = load i32, i32* @global_var_25608.250, align 4
  %v2_dbf8 = icmp eq i32 %v3_dbf4, 0
  store i1 %v2_dbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dbf8, label %dec_label_pc_dc00, label %entry.dec_label_pc_dc1c_crit_edge

entry.dec_label_pc_dc1c_crit_edge:                ; preds = %entry
  %v3_dc1c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dc1c

dec_label_pc_dc00:                                ; preds = %entry
  %v0_dc00 = load i32, i32* @r7, align 4
  store i32 %v0_dc00, i32* @ip, align 4
  %v0_dc10 = load i32, i32* @r0, align 4
  %v2_dc10 = icmp ugt i32 %v0_dc10, -4097
  %v7_dc10 = icmp eq i32 %v0_dc10, -4096
  store i1 %v7_dc10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dc10, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_dc1c, %bb8, %bb9, %dec_label_pc_dc00
  %merge2 = phi i32 [ %v0_dc10, %dec_label_pc_dc00 ], [ %v0_dc40, %dec_label_pc_dc1c ], [ %v0_dc50, %bb8 ], [ %v0_dc50, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_dc00
  %v0_dc18 = call i32 @__syscall_error()
  br label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %entry.dec_label_pc_dc1c_crit_edge, %bb7
  %v3_dc1c = phi i32 [ %v3_dc1c.pre, %entry.dec_label_pc_dc1c_crit_edge ], [ %v0_dc18, %bb7 ]
  %v9_dc1c = load i32, i32* @r7, align 4
  store i32 %v9_dc1c, i32* %stack_var_-8, align 4
  %v12_dc1c = load i32, i32* @lr, align 4
  %v0_dc20 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_dc20, i32* @ip, align 4
  store i32 %v3_dc1c, i32* @r7, align 4
  %v1_dc3c = call i32 @__libc_disable_asynccancel(i32 %v0_dc20)
  %v0_dc40 = load i32, i32* @r7, align 4
  store i32 %v0_dc40, i32* @r0, align 4
  %v2_dc44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dc44, i32* @r7, align 4
  store i32 %v12_dc1c, i32* @lr, align 4
  %v2_dc48 = icmp ugt i32 %v0_dc40, -4097
  %v7_dc48 = icmp eq i32 %v0_dc40, -4096
  store i1 %v7_dc48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dc48, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_dc1c
  %v0_dc50 = call i32 @__syscall_error()
  %v0_dc60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dc60, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_dc60 = load i32, i32* @r1, align 4
  %v2_dc60 = load i32, i32* @ip, align 4
  %v3_dc60 = load i32, i32* @sb, align 4
  %v4_dc60 = lshr i32 %v2_dc60, %v3_dc60
  %v5_dc60 = sub i32 32, %v3_dc60
  %v6_dc60 = shl i32 %v2_dc60, %v5_dc60
  %v7_dc60 = or i32 %v6_dc60, %v4_dc60
  %v9_dc60 = and i32 %v7_dc60, %v1_dc60
  store i32 %v9_dc60, i32* @r7, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_dc50, { 1, 0 }
  uselistorder i32 %v0_dc40, { 0, 2, 3, 1 }
  uselistorder i32 %v0_dc10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dc1c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_dc74 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_dc74, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_dc74 = load i32, i32* @r0, align 4
  ret i32 %v2_dc74

bb1:                                              ; preds = %entry
  %v0_dc78 = call i32 @__syscall_error()
  ret i32 %v0_dc78
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_dc84 = load i32, i32* @global_var_25608.250, align 4
  %v2_dc88 = icmp eq i32 %v3_dc84, 0
  br i1 %v2_dc88, label %dec_label_pc_dc90, label %entry.dec_label_pc_dcac_crit_edge

entry.dec_label_pc_dcac_crit_edge:                ; preds = %entry
  %v3_dcac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dcac

dec_label_pc_dc90:                                ; preds = %entry
  %v0_dc90 = load i32, i32* @r7, align 4
  store i32 %v0_dc90, i32* @ip, align 4
  %v0_dca0 = load i32, i32* @r0, align 4
  %v2_dca0 = icmp ugt i32 %v0_dca0, -4097
  br i1 %v2_dca0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_dcac, %dec_label_pc_dc90
  %merge = phi i32 [ %v0_dca0, %dec_label_pc_dc90 ], [ %v0_dcd0, %dec_label_pc_dcac ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_dc90
  %v0_dca8 = call i32 @__syscall_error()
  br label %dec_label_pc_dcac

dec_label_pc_dcac:                                ; preds = %entry.dec_label_pc_dcac_crit_edge, %bb8
  %v3_dcac = phi i32 [ %v3_dcac.pre, %entry.dec_label_pc_dcac_crit_edge ], [ %v0_dca8, %bb8 ]
  store i32 %v3_dcac, i32* %stack_var_-24, align 4
  %v12_dcac = load i32, i32* @r3, align 4
  %v15_dcac = load i32, i32* @r7, align 4
  store i32 %v15_dcac, i32* %stack_var_-8, align 4
  %v18_dcac = load i32, i32* @lr, align 4
  %v0_dcb0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_dcb0, i32* @ip, align 4
  %v2_dcb8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v12_dcac, i32* @r3, align 4
  store i32 %v2_dcb8, i32* @r7, align 4
  %v1_dccc = call i32 @__libc_disable_asynccancel(i32 %v0_dcb0)
  %v0_dcd0 = load i32, i32* @r7, align 4
  store i32 %v0_dcd0, i32* @r0, align 4
  %v2_dcd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_dcd4, i32* @r7, align 4
  store i32 %v18_dcac, i32* @lr, align 4
  %v2_dcd8 = icmp ugt i32 %v0_dcd0, -4097
  br i1 %v2_dcd8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_dcac
  %v0_dce0 = call i32 @__syscall_error()
  ret i32 %v0_dce0

; uselistorder directives
  uselistorder i32 %v0_dcd0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_dcac, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_dcf0 = load i32, i32* %r0.global-to-local, align 4
  %v1_dcf0 = and i32 %v0_dcf0, 2
  %v2_dcf0 = icmp eq i32 %v1_dcf0, 0
  %v3_dcf4 = load i32, i32* @r4, align 4
  store i32 %v3_dcf4, i32* %stack_var_-16, align 4
  br i1 %v2_dcf0, label %dec_label_pc_dcfc, label %dec_label_pc_dd70

dec_label_pc_dcfc:                                ; preds = %entry
  %v0_dcfc = call i32 @__aeabi_read_tp()
  store i32 %v0_dcfc, i32* %r0.global-to-local, align 4
  %v1_dd00 = add i32 %v0_dcfc, -1036
  %v2_dd00 = inttoptr i32 %v1_dd00 to i32*
  %v3_dd00 = load i32, i32* %v2_dd00, align 4
  %v1_dd04 = add i32 %v0_dcfc, -1168
  store i32 %v1_dd04, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dd3c.dec_label_pc_dd08_crit_edge, %dec_label_pc_dcfc
  %v0_dd14 = phi i32 [ %v0_dd14.pre, %dec_label_pc_dd3c.dec_label_pc_dd08_crit_edge ], [ %v1_dd04, %dec_label_pc_dcfc ]
  %v0_dd08 = phi i32 [ %v0_dd3c, %dec_label_pc_dd3c.dec_label_pc_dd08_crit_edge ], [ %v3_dd00, %dec_label_pc_dcfc ]
  %v1_dd08 = and i32 %v0_dd08, -3
  store i32 %v1_dd08, i32* %r7.global-to-local, align 4
  store i32 %v0_dd08, i32* %r4.global-to-local, align 4
  store i32 %v1_dd08, i32* @r1, align 4
  %v1_dd14 = add i32 %v0_dd14, 132
  store i32 %v1_dd14, i32* @r2, align 4
  %v1_dd1823 = inttoptr i32 %v1_dd14 to i32*
  %v2_dd1824 = load i32, i32* %v1_dd1823, align 4
  %v3_dd1c26 = icmp uge i32 %v2_dd1824, %v0_dd08
  store i1 %v3_dd1c26, i1* %cpsr_c.global-to-local, align 1
  %v9_dd1c32 = icmp eq i32 %v2_dd1824, %v0_dd08
  br i1 %v9_dd1c32, label %dec_label_pc_dd24, label %dec_label_pc_dd3c

dec_label_pc_dd24:                                ; preds = %dec_label_pc_dd08, %dec_label_pc_dd24.dec_label_pc_dd18_crit_edge
  %v0_dd2433 = phi i32 [ %v1_dd1c.pre, %dec_label_pc_dd24.dec_label_pc_dd18_crit_edge ], [ %v0_dd08, %dec_label_pc_dd08 ]
  store i32 %v0_dd2433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_dd34 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_dd34, label %dec_label_pc_dd38, label %dec_label_pc_dd24.dec_label_pc_dd18_crit_edge

dec_label_pc_dd24.dec_label_pc_dd18_crit_edge:    ; preds = %dec_label_pc_dd24
  %v0_dd18.pre = load i32, i32* @r2, align 4
  %v1_dd1c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_dd18 = inttoptr i32 %v0_dd18.pre to i32*
  %v2_dd18 = load i32, i32* %v1_dd18, align 4
  %v3_dd1c = icmp uge i32 %v2_dd18, %v1_dd1c.pre
  store i1 %v3_dd1c, i1* %cpsr_c.global-to-local, align 1
  %v9_dd1c = icmp eq i32 %v2_dd18, %v1_dd1c.pre
  br i1 %v9_dd1c, label %dec_label_pc_dd24, label %dec_label_pc_dd3c

dec_label_pc_dd38:                                ; preds = %dec_label_pc_dd24
  %v0_dd38 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_dd3c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dd08, %dec_label_pc_dd24.dec_label_pc_dd18_crit_edge, %dec_label_pc_dd38
  %v0_dd3c = phi i32 [ %v0_dd38, %dec_label_pc_dd38 ], [ %v2_dd1824, %dec_label_pc_dd08 ], [ %v2_dd18, %dec_label_pc_dd24.dec_label_pc_dd18_crit_edge ]
  %v1_dd3c = phi i32 [ %v0_dd38, %dec_label_pc_dd38 ], [ %v0_dd08, %dec_label_pc_dd08 ], [ %v1_dd1c.pre, %dec_label_pc_dd24.dec_label_pc_dd18_crit_edge ]
  %v3_dd3c = icmp uge i32 %v0_dd3c, %v1_dd3c
  store i1 %v3_dd3c, i1* %cpsr_c.global-to-local, align 1
  %v9_dd3c = icmp eq i32 %v0_dd3c, %v1_dd3c
  br i1 %v9_dd3c, label %dec_label_pc_dd64.preheader, label %dec_label_pc_dd3c.dec_label_pc_dd08_crit_edge

dec_label_pc_dd3c.dec_label_pc_dd08_crit_edge:    ; preds = %dec_label_pc_dd3c
  %v0_dd14.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dd08

dec_label_pc_dd64.preheader:                      ; preds = %dec_label_pc_dd3c
  %v0_dd641 = load i32, i32* %r7.global-to-local, align 4
  %v1_dd642 = and i32 %v0_dd641, 12
  store i32 %v1_dd642, i32* @r3, align 4
  %v2_dd683 = icmp ugt i32 %v1_dd642, 3
  store i1 %v2_dd683, i1* %cpsr_c.global-to-local, align 1
  %v7_dd685 = icmp eq i32 %v1_dd642, 4
  br i1 %v7_dd685, label %dec_label_pc_dd48.lr.ph, label %dec_label_pc_dd64.preheader.dec_label_pc_dd70.loopexit_crit_edge

dec_label_pc_dd64.preheader.dec_label_pc_dd70.loopexit_crit_edge: ; preds = %dec_label_pc_dd64.preheader
  %v1_dd74.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dd70.loopexit

dec_label_pc_dd48.lr.ph:                          ; preds = %dec_label_pc_dd64.preheader
  %v0_dd4c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_dd4c = add i32 %v0_dd4c.pre, 132
  %v2_dd60 = inttoptr i32 %v1_dd4c to i32*
  br label %dec_label_pc_dd48

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd48.lr.ph, %dec_label_pc_dd48
  %v0_dd48 = phi i32 [ %v0_dd641, %dec_label_pc_dd48.lr.ph ], [ %v3_dd60, %dec_label_pc_dd48 ]
  store i32 %v0_dd48, i32* @r2, align 4
  store i32 %v1_dd4c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_dd60 = load i32, i32* %v2_dd60, align 4
  store i32 %v3_dd60, i32* %r7.global-to-local, align 4
  %v1_dd64 = and i32 %v3_dd60, 12
  store i32 %v1_dd64, i32* @r3, align 4
  %v7_dd68 = icmp eq i32 %v1_dd64, 4
  br i1 %v7_dd68, label %dec_label_pc_dd48, label %dec_label_pc_dd64.dec_label_pc_dd70.loopexit_crit_edge

dec_label_pc_dd64.dec_label_pc_dd70.loopexit_crit_edge: ; preds = %dec_label_pc_dd48
  %v2_dd68 = icmp ugt i32 %v1_dd64, 3
  store i1 %v2_dd68, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_dd70.loopexit

dec_label_pc_dd70.loopexit:                       ; preds = %dec_label_pc_dd64.preheader.dec_label_pc_dd70.loopexit_crit_edge, %dec_label_pc_dd64.dec_label_pc_dd70.loopexit_crit_edge
  %v1_dd74.pre = phi i32 [ %v1_dd74.pre.pre, %dec_label_pc_dd64.preheader.dec_label_pc_dd70.loopexit_crit_edge ], [ %v1_dd4c, %dec_label_pc_dd64.dec_label_pc_dd70.loopexit_crit_edge ]
  %v2_dd70.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_dd70

dec_label_pc_dd70:                                ; preds = %dec_label_pc_dd70.loopexit, %entry
  %v1_dd74 = phi i32 [ %v1_dd74.pre, %dec_label_pc_dd70.loopexit ], [ %v0_dcf0, %entry ]
  %v2_dd70 = phi i32 [ %v2_dd70.pre, %dec_label_pc_dd70.loopexit ], [ %v3_dcf4, %entry ]
  store i32 %v2_dd70, i32* @r4, align 4
  ret i32 %v1_dd74

; uselistorder directives
  uselistorder i32 %v3_dd60, { 1, 2, 0 }
  uselistorder i32 %v1_dd4c, { 0, 2, 1 }
  uselistorder i32 %v0_dd38, { 1, 0 }
  uselistorder i32 %v1_dd1c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_dd08, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_dd70.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_dd48, { 1, 0 }
  uselistorder label %dec_label_pc_dd3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dd24, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_dd78 = load i32, i32* @r4, align 4
  store i32 %v3_dd78, i32* %stack_var_-24, align 4
  store i32 83220, i32* %r8.global-to-local, align 4
  %v0_dd80 = call i32 @__aeabi_read_tp()
  %v1_dd84 = add i32 %v0_dd80, -1036
  %v2_dd84 = inttoptr i32 %v1_dd84 to i32*
  %v3_dd84 = load i32, i32* %v2_dd84, align 4
  store i32 %v3_dd84, i32* %r6.global-to-local, align 4
  %v1_dd88 = add i32 %v0_dd80, -1168
  store i32 %v1_dd88, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r8.global-to-local, align 4
  %v1_dd9047 = or i32 %v3_dd84, 2
  store i32 %v1_dd9047, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_dd9450 = icmp eq i32 %v1_dd9047, %v3_dd84
  br i1 %v9_dd9450, label %dec_label_pc_de40, label %dec_label_pc_dd9c

dec_label_pc_dd9c:                                ; preds = %entry, %bb.dec_label_pc_dd9c_crit_edge
  %v0_dda0 = phi i32 [ %v0_dda0.pre, %bb.dec_label_pc_dd9c_crit_edge ], [ %v1_dd88, %entry ]
  %v1_dd9052 = phi i32 [ %v1_dd90, %bb.dec_label_pc_dd9c_crit_edge ], [ %v1_dd9047, %entry ]
  %v0_dda451 = phi i32 [ %v1_ddd0, %bb.dec_label_pc_dd9c_crit_edge ], [ %v3_dd84, %entry ]
  store i32 %v1_dd9052, i32* @r1, align 4
  %v1_dda0 = add i32 %v0_dda0, 132
  store i32 %v1_dda0, i32* %r2.global-to-local, align 4
  store i32 %v0_dda451, i32* %r4.global-to-local, align 4
  %v1_dda835 = inttoptr i32 %v1_dda0 to i32*
  %v2_dda836 = load i32, i32* %v1_dda835, align 4
  store i32 %v2_dda836, i32* @r3, align 4
  %v3_ddac38 = icmp uge i32 %v2_dda836, %v0_dda451
  store i1 %v3_ddac38, i1* %cpsr_c.global-to-local, align 1
  %v9_ddac44 = icmp eq i32 %v2_dda836, %v0_dda451
  br i1 %v9_ddac44, label %dec_label_pc_ddb4, label %dec_label_pc_ddcc

dec_label_pc_ddb4:                                ; preds = %dec_label_pc_dd9c, %dec_label_pc_ddb4.dec_label_pc_dda8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_ddc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ddc4, label %dec_label_pc_ddc8, label %dec_label_pc_ddb4.dec_label_pc_dda8_crit_edge

dec_label_pc_ddb4.dec_label_pc_dda8_crit_edge:    ; preds = %dec_label_pc_ddb4
  %v0_dda8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ddac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_dda8 = inttoptr i32 %v0_dda8.pre to i32*
  %v2_dda8 = load i32, i32* %v1_dda8, align 4
  store i32 %v2_dda8, i32* @r3, align 4
  %v3_ddac = icmp uge i32 %v2_dda8, %v1_ddac.pre
  store i1 %v3_ddac, i1* %cpsr_c.global-to-local, align 1
  %v9_ddac = icmp eq i32 %v2_dda8, %v1_ddac.pre
  br i1 %v9_ddac, label %dec_label_pc_ddb4, label %dec_label_pc_ddcc

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_ddb4
  %v0_ddc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ddc8, i32* @r3, align 4
  br label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_dd9c, %dec_label_pc_ddb4.dec_label_pc_dda8_crit_edge, %dec_label_pc_ddc8
  %v1_ddd0 = phi i32 [ %v0_ddc8, %dec_label_pc_ddc8 ], [ %v2_dda836, %dec_label_pc_dd9c ], [ %v2_dda8, %dec_label_pc_ddb4.dec_label_pc_dda8_crit_edge ]
  %v1_ddcc = load i32, i32* %r6.global-to-local, align 4
  %v3_ddcc = icmp uge i32 %v1_ddd0, %v1_ddcc
  store i1 %v3_ddcc, i1* %cpsr_c.global-to-local, align 1
  %v9_ddcc = icmp eq i32 %v1_ddd0, %v1_ddcc
  br i1 %v9_ddcc, label %dec_label_pc_ddd8, label %bb

bb:                                               ; preds = %dec_label_pc_ddcc
  store i32 %v1_ddd0, i32* %r6.global-to-local, align 4
  %v1_dd90 = or i32 %v1_ddd0, 2
  store i32 %v1_dd90, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_dd94 = icmp eq i32 %v1_dd90, %v1_ddd0
  br i1 %v9_dd94, label %dec_label_pc_de40, label %bb.dec_label_pc_dd9c_crit_edge

bb.dec_label_pc_dd9c_crit_edge:                   ; preds = %bb
  %v0_dda0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_dd9c

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddcc
  %v0_ddd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ddd8 = and i32 %v0_ddd8, -69
  store i32 %v1_ddd8, i32* @r3, align 4
  %v2_dddc = icmp ugt i32 %v1_ddd8, 9
  store i1 %v2_dddc, i1* %cpsr_c.global-to-local, align 1
  %v7_dddc = icmp eq i32 %v1_ddd8, 10
  br i1 %v7_dddc, label %dec_label_pc_dde4, label %dec_label_pc_de40

dec_label_pc_dde4:                                ; preds = %dec_label_pc_ddd8
  %v1_dde8 = load i32, i32* %r7.global-to-local, align 4
  %v2_dde8 = add i32 %v1_dde8, 544
  %v3_dde8 = inttoptr i32 %v2_dde8 to i32*
  store i32 -1, i32* %v3_dde8, align 4
  %v0_ddec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ddec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ddf0

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_de24.dec_label_pc_ddf0_crit_edge, %dec_label_pc_dde4
  %v0_ddf4 = phi i32 [ %v0_ddf4.pre, %dec_label_pc_de24.dec_label_pc_ddf0_crit_edge ], [ %v0_ddec, %dec_label_pc_dde4 ]
  %v0_ddf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_ddf0 = add i32 %v0_ddf0, 132
  %v2_ddf0 = inttoptr i32 %v1_ddf0 to i32*
  %v3_ddf0 = load i32, i32* %v2_ddf0, align 4
  store i32 %v0_ddf4, i32* %r2.global-to-local, align 4
  store i32 %v3_ddf0, i32* %r4.global-to-local, align 4
  %v1_ddfc = or i32 %v3_ddf0, 16
  store i32 %v1_ddfc, i32* @r1, align 4
  %v1_de0023 = inttoptr i32 %v0_ddf4 to i32*
  %v2_de0024 = load i32, i32* %v1_de0023, align 4
  %v3_de0426 = icmp uge i32 %v2_de0024, %v3_ddf0
  store i1 %v3_de0426, i1* %cpsr_c.global-to-local, align 1
  %v9_de0432 = icmp eq i32 %v2_de0024, %v3_ddf0
  br i1 %v9_de0432, label %dec_label_pc_de0c, label %dec_label_pc_de24

dec_label_pc_de0c:                                ; preds = %dec_label_pc_ddf0, %dec_label_pc_de0c.dec_label_pc_de00_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_de1c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_de1c, label %dec_label_pc_de20, label %dec_label_pc_de0c.dec_label_pc_de00_crit_edge

dec_label_pc_de0c.dec_label_pc_de00_crit_edge:    ; preds = %dec_label_pc_de0c
  %v0_de00.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_de04.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_de00 = inttoptr i32 %v0_de00.pre to i32*
  %v2_de00 = load i32, i32* %v1_de00, align 4
  %v3_de04 = icmp uge i32 %v2_de00, %v1_de04.pre
  store i1 %v3_de04, i1* %cpsr_c.global-to-local, align 1
  %v9_de04 = icmp eq i32 %v2_de00, %v1_de04.pre
  br i1 %v9_de04, label %dec_label_pc_de0c, label %dec_label_pc_de24

dec_label_pc_de20:                                ; preds = %dec_label_pc_de0c
  %v0_de20 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_de24

dec_label_pc_de24:                                ; preds = %dec_label_pc_ddf0, %dec_label_pc_de0c.dec_label_pc_de00_crit_edge, %dec_label_pc_de20
  %v0_de24 = phi i32 [ %v0_de20, %dec_label_pc_de20 ], [ %v2_de0024, %dec_label_pc_ddf0 ], [ %v2_de00, %dec_label_pc_de0c.dec_label_pc_de00_crit_edge ]
  %v1_de24 = phi i32 [ %v0_de20, %dec_label_pc_de20 ], [ %v3_ddf0, %dec_label_pc_ddf0 ], [ %v1_de04.pre, %dec_label_pc_de0c.dec_label_pc_de00_crit_edge ]
  %v3_de24 = icmp uge i32 %v0_de24, %v1_de24
  store i1 %v3_de24, i1* %cpsr_c.global-to-local, align 1
  %v9_de24 = icmp eq i32 %v0_de24, %v1_de24
  br i1 %v9_de24, label %dec_label_pc_de2c, label %dec_label_pc_de24.dec_label_pc_ddf0_crit_edge

dec_label_pc_de24.dec_label_pc_ddf0_crit_edge:    ; preds = %dec_label_pc_de24
  %v0_ddf4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ddf0

dec_label_pc_de2c:                                ; preds = %dec_label_pc_de24
  store i32 124, i32* @r3, align 4
  %v0_de34 = load i32, i32* %r8.global-to-local, align 4
  %v2_de34 = add i32 %v0_de34, 124
  %v3_de34 = inttoptr i32 %v2_de34 to i32*
  %v4_de34 = load i32, i32* %v3_de34, align 4
  store i32 %v4_de34, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_de34)
  %v0_de40.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_de40

dec_label_pc_de40:                                ; preds = %entry, %bb, %dec_label_pc_ddd8, %dec_label_pc_de2c
  %v0_de40 = phi i32 [ %v1_ddd0, %dec_label_pc_ddd8 ], [ %v0_de40.pre, %dec_label_pc_de2c ], [ %v3_dd84, %entry ], [ %v1_ddd0, %bb ]
  %v2_de44 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_de44, i32* @r4, align 4
  ret i32 %v0_de40

; uselistorder directives
  uselistorder i32 %v0_de20, { 1, 0 }
  uselistorder i32 %v1_de04.pre, { 0, 2, 1 }
  uselistorder i32 %v1_dd90, { 1, 2, 0 }
  uselistorder i32 %v1_ddcc, { 1, 0 }
  uselistorder i32 %v1_ddd0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_ddac.pre, { 1, 0 }
  uselistorder i32 %v0_dda451, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder label %dec_label_pc_de40, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_de24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_de0c, { 1, 0 }
  uselistorder label %dec_label_pc_ddcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ddb4, { 1, 0 }
  uselistorder label %dec_label_pc_dd9c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_de64 = add i32 %tmp, 4
  %v4_de64 = inttoptr i32 %v3_de64 to i32*
  store i32 %arg3, i32* %v4_de64, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_de70 = icmp eq i32 %arg2, 0
  br i1 %v2_de70, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_de7c = add i32 %tmp, 4
  %v3_de7c = inttoptr i32 %v2_de7c to i32*
  %v4_de7c = load i32, i32* %v3_de7c, align 4
  store i32 %v4_de7c, i32* %r0.global-to-local, align 4
  %v3_de80 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_de80, %bb ], [ undef, %entry ]
  %v2_de88 = xor i1 %v2_de70, true
  call void @__pseudo_cond_branch(i1 %v2_de88, i32 %.02)
  %v1_de94 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_de94

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_debc.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_de98 = load i32, i32* @r4, align 4
  store i32 %v3_de98, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_debc

dec_label_pc_debc:                                ; preds = %dec_label_pc_debc.dec_label_pc_debc_crit_edge, %dec_label_pc_debc.lr.ph
  %v1_debc = phi i32 [ %v1_dec8, %dec_label_pc_debc.dec_label_pc_debc_crit_edge ], [ 0, %dec_label_pc_debc.lr.ph ]
  %v0_debc = phi i32 [ %v0_debc.pre, %dec_label_pc_debc.dec_label_pc_debc_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -8), %dec_label_pc_debc.lr.ph ]
  %v4_debc = mul i32 %v1_debc, 4
  %v5_debc = add i32 %v4_debc, %v0_debc
  %v6_debc = inttoptr i32 %v5_debc to i32*
  %v7_debc = load i32, i32* %v6_debc, align 4
  call void @__pseudo_branch(i32 %v7_debc)
  %v0_dec8 = load i32, i32* %r4.global-to-local, align 4
  %v1_dec8 = add i32 %v0_dec8, -1
  store i32 %v1_dec8, i32* %r4.global-to-local, align 4
  %v2_dec8 = icmp eq i32 %v0_dec8, 0
  br i1 %v2_dec8, label %dec_label_pc_ded0, label %dec_label_pc_debc.dec_label_pc_debc_crit_edge

dec_label_pc_debc.dec_label_pc_debc_crit_edge:    ; preds = %dec_label_pc_debc
  %v0_debc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_debc

dec_label_pc_ded0:                                ; preds = %dec_label_pc_debc
  %v0_ded4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_ded4 = add i32 %v0_ded4.pre, 2620
  %v3_ded4 = inttoptr i32 %v2_ded4 to i32*
  %v4_ded4 = load i32, i32* %v3_ded4, align 4
  %v2_ded8 = icmp eq i32 %v4_ded4, 0
  br i1 %v2_ded8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_ded0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_ded0, %bb
  %v2_dee0 = xor i1 %v2_ded8, true
  call void @__pseudo_cond_branch(i1 %v2_dee0, i32 %v4_ded4)
  %v0_dee8 = load i32, i32* %r5.global-to-local, align 4
  %v2_dee8 = add i32 %v0_dee8, 2624
  %v3_dee8 = inttoptr i32 %v2_dee8 to i32*
  %v4_dee8 = load i32, i32* %v3_dee8, align 4
  %v2_deec = icmp eq i32 %v4_dee8, 0
  br i1 %v2_deec, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_def4 = xor i1 %v2_deec, true
  call void @__pseudo_cond_branch(i1 %v2_def4, i32 %v4_dee8)
  %v2_def8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_def8, i32* %r4.global-to-local, align 4
  %v1_defc = load i32, i32* @r0, align 4
  ret i32 %v1_defc

; uselistorder directives
  uselistorder i32 %v1_dec8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_df14 = load i32, i32* @r4, align 4
  %v6_df14 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_df28 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_df30 = icmp eq i32 %v2_df28, -1
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r3, align 4
  br i1 %v3_df30, label %dec_label_pc_df3c, label %dec_label_pc_df54

dec_label_pc_df3c:                                ; preds = %entry
  %v0_df40 = load i32, i32* @r5, align 4
  %v2_df48 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37300), i32 %v0_df40)
  %v1_df4c = load i32, i32* @r4, align 4
  %v1_df50 = icmp ne i32 %v2_df48, %v1_df4c
  call void @__pseudo_cond_branch(i1 %v1_df50, i32 ptrtoint (i32* @global_var_c2c4.261 to i32))
  br label %dec_label_pc_df54

dec_label_pc_df54:                                ; preds = %entry, %dec_label_pc_df3c
  %v1_df5c = phi i32 [ %v2_df28, %entry ], [ %v2_df48, %dec_label_pc_df3c ]
  store i32 %v3_df14, i32* @r4, align 4
  store i32 %v6_df14, i32* @r5, align 4
  ret i32 %v1_df5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_df54, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_df68 = load i32, i32* @r4, align 4
  store i32 %v3_df68, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r4.global-to-local, align 4
  %v4_df78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 156) to i32*), align 4
  %v1_df7c = inttoptr i32 %v4_df78 to i32*
  %v2_df7c = load i32, i32* %v1_df7c, align 4
  %v2_df80 = icmp eq i32 %v2_df7c, 0
  br i1 %v2_df80, label %dec_label_pc_df88, label %dec_label_pc_dfac

dec_label_pc_df88:                                ; preds = %entry
  store i32 4096, i32* %v1_df7c, align 4
  %v0_df90 = call i32 @__pthread_initialize_minimal()
  %v0_df98 = load i32, i32* %r4.global-to-local, align 4
  %v2_df98 = add i32 %v0_df98, -76580
  %v2_dfa0 = icmp eq i32 %v2_df98, 0
  br i1 %v2_dfa0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_df88
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_df88, %bb
  %v2_dfa8 = xor i1 %v2_dfa0, true
  call void @__pseudo_cond_branch(i1 %v2_dfa8, i32 %v2_df98)
  %v2_dfac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_dfac

dec_label_pc_dfac:                                ; preds = %entry, %bb4
  %v2_dfac = phi i32 [ %v2_dfac.pre, %bb4 ], [ %v3_df68, %entry ]
  %.0 = phi i32 [ %v0_df90, %bb4 ], [ undef, %entry ]
  store i32 %v2_dfac, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfac, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_142c8.266 to i32), i32* %r4.global-to-local, align 4
  %v1_dfcc = add i32 %tmp, 4
  store i32 %v1_dfcc, i32* %ip.global-to-local, align 4
  %v2_dfd0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r4.global-to-local, align 4
  %v3_dfdc = mul i32 %arg2, 4
  store i32 %v3_dfdc, i32* @r7, align 4
  %v4_dfe4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 24) to i32*), align 4
  store i32 %v4_dfe4, i32* %r1.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v2_dfec = add i32 %v1_dfcc, %v3_dfdc
  store i32 %v2_dfec, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %stack_var_-416, align 4
  %v4_dff4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 60) to i32*), align 4
  store i32 %v4_dff4, i32* %r4.global-to-local, align 4
  %v3_dff8 = icmp uge i32 %v2_dfec, %v2_dfd0
  store i1 %v3_dff8, i1* %cpsr_c.global-to-local, align 1
  %v9_dff8 = icmp eq i32 %v2_dfec, %v2_dfd0
  store i1 %v9_dff8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_e000 = inttoptr i32 %v4_dff4 to i32*
  store i32 %v2_dfec, i32* %v2_e000, align 4
  br i1 %v9_dff8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_e008 = load i32, i32* %r2.global-to-local, align 4
  %v1_e008 = load i32, i32* %r1.global-to-local, align 4
  %v2_e008 = inttoptr i32 %v1_e008 to i32*
  store i32 %v0_e008, i32* %v2_e008, align 4
  %v2_e00c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e00c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2624, i32* %r2.global-to-local, align 4
  %v0_e018 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e018, i32* @r6, align 4
  br i1 %v9_dff8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_e02053 = add i32 %v2_e00c, 2624
  %v4_e02054 = inttoptr i32 %v3_e02053 to i32*
  store i32 %arg6, i32* %v4_e02054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_e01c = load i32, i32* %ip.global-to-local, align 4
  %v2_e01c = load i32, i32* @r7, align 4
  %v3_e01c = add i32 %v2_e01c, %v1_e01c
  store i32 %v3_e01c, i32* %r3.global-to-local, align 4
  %v3_e02050 = add i32 %v2_e00c, 2624
  %v4_e02051 = inttoptr i32 %v3_e02050 to i32*
  store i32 %arg6, i32* %v4_e02051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_e02c = load i32, i32* %r3.global-to-local, align 4
  %v2_e02c = load i32, i32* %r4.global-to-local, align 4
  %v3_e02c = inttoptr i32 %v2_e02c to i32*
  store i32 %v1_e02c, i32* %v3_e02c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_e030 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_e030, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_e038 = bitcast i32* %stack_var_-120 to i8*
  %v4_e038 = call i32 @__GI_memset(i8* %v3_e038, i32 0, i32 120)
  store i32 %v4_e038, i32* %r0.global-to-local, align 4
  %v0_e03c = load i32, i32* %r4.global-to-local, align 4
  %v1_e03c = inttoptr i32 %v0_e03c to i32*
  %v2_e03c = load i32, i32* %v1_e03c, align 4
  br label %dec_label_pc_e048

dec_label_pc_e048:                                ; preds = %dec_label_pc_e048, %bb77
  %storemerge = phi i32 [ %v2_e03c, %bb77 ], [ %v1_e054, %dec_label_pc_e048 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_e048 = inttoptr i32 %storemerge to i32*
  %v2_e048 = load i32, i32* %v1_e048, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e04c = icmp eq i32 %v2_e048, 0
  %v1_e054 = add i32 %storemerge, 4
  br i1 %v2_e04c, label %dec_label_pc_e054, label %dec_label_pc_e048

dec_label_pc_e054:                                ; preds = %dec_label_pc_e048
  store i32 %v1_e054, i32* @r4, align 4
  store i32 %v2_e030, i32* @r5, align 4
  %v1_e07830 = inttoptr i32 %v1_e054 to i32*
  %v2_e07831 = load i32, i32* %v1_e07830, align 4
  store i32 %v2_e07831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e07c33 = icmp eq i32 %v2_e07831, 0
  store i1 %v2_e07c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e07c33, label %dec_label_pc_e084, label %dec_label_pc_e060

dec_label_pc_e060:                                ; preds = %dec_label_pc_e054, %dec_label_pc_e078
  %v4_e068 = phi i32 [ %v1_e074, %dec_label_pc_e078 ], [ %v1_e054, %dec_label_pc_e054 ]
  %v5_e064 = phi i32 [ %v2_e078, %dec_label_pc_e078 ], [ %v2_e07831, %dec_label_pc_e054 ]
  %v2_e060 = icmp ugt i32 %v5_e064, 13
  store i1 %v2_e060, i1* %cpsr_c.global-to-local, align 1
  %v7_e060 = icmp eq i32 %v5_e064, 14
  store i1 %v7_e060, i1* %cpsr_z.global-to-local, align 1
  %v2_e064 = xor i1 %v2_e060, true
  %v3_e064 = or i1 %v7_e060, %v2_e064
  br i1 %v3_e064, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_e060
  %v4_e064 = load i32, i32* @r5, align 4
  %v6_e064 = and i32 %v5_e064, 536870912
  %v7_e064 = icmp ne i32 %v6_e064, 0
  store i1 %v7_e064, i1* %cpsr_c.global-to-local, align 1
  %v8_e064 = mul i32 %v5_e064, 8
  %v9_e064 = add i32 %v4_e064, %v8_e064
  store i32 %v9_e064, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_e060, %bb78
  %v1_e070 = phi i1 [ %v2_e060, %dec_label_pc_e060 ], [ %v7_e064, %bb78 ]
  %v2_e068 = xor i1 %v1_e070, true
  %v3_e068 = or i1 %v7_e060, %v2_e068
  br i1 %v3_e068, label %bb80, label %dec_label_pc_e078

bb80:                                             ; preds = %bb79
  store i32 %v4_e068, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e078

dec_label_pc_e078:                                ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_e068, i32 ptrtoint (i32* @global_var_acd0.270 to i32))
  %v0_e074 = load i32, i32* @r4, align 4
  %v1_e074 = add i32 %v0_e074, 8
  store i32 %v1_e074, i32* @r4, align 4
  %v1_e078 = inttoptr i32 %v1_e074 to i32*
  %v2_e078 = load i32, i32* %v1_e078, align 4
  store i32 %v2_e078, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e07c = icmp eq i32 %v2_e078, 0
  store i1 %v2_e07c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e07c, label %dec_label_pc_e084, label %dec_label_pc_e060

dec_label_pc_e084:                                ; preds = %dec_label_pc_e078, %dec_label_pc_e054
  store i32 %v2_e030, i32* %r0.global-to-local, align 4
  %v1_e088 = call i32 @_dl_aux_init(i32 %v2_e030)
  store i32 %v1_e088, i32* %r0.global-to-local, align 4
  %v1_e08c = call i32 @__GI___uClibc_init(i32 %v1_e088)
  store i32 %v1_e08c, i32* @r0, align 4
  store i32 156, i32* %r3.global-to-local, align 4
  %v2_e094 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e094, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_e09c = add i32 %v2_e094, 156
  %v3_e09c = inttoptr i32 %v2_e09c to i32*
  %v4_e09c = load i32, i32* %v3_e09c, align 4
  store i32 %v4_e09c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e0a4 = icmp eq i32 %tmp66, 0
  store i1 %v2_e0a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e0a4, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_e084
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_e084, %bb81
  %v0_e0b0 = phi i32 [ %tmp66, %dec_label_pc_e084 ], [ 4096, %bb81 ]
  %v3_e0ac = icmp eq i32 %tmp65, -1
  store i1 %v3_e0ac, i1* %cpsr_c.global-to-local, align 1
  %v8_e0ac = icmp eq i32 %tmp65, -1
  store i1 %v8_e0ac, i1* %cpsr_z.global-to-local, align 1
  %v2_e0b0 = inttoptr i32 %v4_e09c to i32*
  store i32 %v0_e0b0, i32* %v2_e0b0, align 4
  br i1 %v3_e0ac, label %dec_label_pc_e0b8, label %dec_label_pc_e0e0

dec_label_pc_e0b8:                                ; preds = %bb82
  %v0_e0b8 = call i32 @getuid()
  store i32 %v0_e0b8, i32* @r0, align 4
  store i32 %v0_e0b8, i32* %r4.global-to-local, align 4
  %v0_e0c0 = call i32 @geteuid()
  store i32 %v0_e0c0, i32* @r0, align 4
  %v3_e0c4 = icmp uge i32 %v0_e0b8, %v0_e0c0
  store i1 %v3_e0c4, i1* %cpsr_c.global-to-local, align 1
  %v9_e0c4 = icmp eq i32 %v0_e0b8, %v0_e0c0
  store i1 %v9_e0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0c4, label %dec_label_pc_e0cc, label %dec_label_pc_e108

dec_label_pc_e0cc:                                ; preds = %dec_label_pc_e0b8
  %v1_e0cc = call i32 @getgid(i32 %v0_e0c0)
  store i32 %v1_e0cc, i32* @r0, align 4
  store i32 %v1_e0cc, i32* %r4.global-to-local, align 4
  %v0_e0d4 = call i32 @getegid()
  store i32 %v0_e0d4, i32* %r0.global-to-local, align 4
  %v3_e0d8 = icmp uge i32 %v1_e0cc, %v0_e0d4
  store i1 %v3_e0d8, i1* %cpsr_c.global-to-local, align 1
  %v9_e0d8 = icmp eq i32 %v1_e0cc, %v0_e0d4
  store i1 %v9_e0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0d8, label %dec_label_pc_e0e0, label %dec_label_pc_e108

dec_label_pc_e0e0:                                ; preds = %dec_label_pc_e0cc, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_e0ac, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_e0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e0ac, label %dec_label_pc_e130, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0e0
  store i32 %tmp64, i32* @r3, align 4
  %v3_e0f0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_e0f0, i1* %cpsr_c.global-to-local, align 1
  %v9_e0f0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_e0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e0f0, label %dec_label_pc_e0f8, label %dec_label_pc_e108

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e0ec
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_e100 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_e100, i1* %cpsr_c.global-to-local, align 1
  %v9_e100 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_e100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e100, label %dec_label_pc_e130, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %dec_label_pc_e0ec, %dec_label_pc_e0cc, %dec_label_pc_e0b8, %dec_label_pc_e0f8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_e114 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_e11c = load i32, i32* @r4, align 4
  store i32 %v0_e11c, i32* %r1.global-to-local, align 4
  %v2_e120 = call i32 @__check_one_fd(i32 1, i32 %v0_e11c)
  %v0_e124 = load i32, i32* @r4, align 4
  store i32 %v0_e124, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_e12c = call i32 @__check_one_fd(i32 2, i32 %v0_e124)
  store i32 %v2_e12c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e130

dec_label_pc_e130:                                ; preds = %dec_label_pc_e0f8, %dec_label_pc_e0e0, %dec_label_pc_e108
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 452, i32* %r3.global-to-local, align 4
  %v2_e138 = load i32, i32* %arg3, align 4
  store i32 %v2_e138, i32* %r2.global-to-local, align 4
  %v2_e13c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e13c, i32* %r1.global-to-local, align 4
  %v3_e140 = add i32 %v2_e13c, 452
  %v4_e140 = inttoptr i32 %v3_e140 to i32*
  store i32 %v2_e138, i32* %v4_e140, align 4
  %v0_e144 = load i32, i32* %r0.global-to-local, align 4
  %v1_e144 = inttoptr i32 %v0_e144 to i32*
  %v2_e144 = load i32, i32* %v1_e144, align 4
  store i32 %v2_e144, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e148 = icmp eq i32 %v2_e144, 0
  store i1 %v2_e148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e148, label %bb84, label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e130
  store i32 172, i32* %r3.global-to-local, align 4
  %v0_e154 = load i32, i32* %r1.global-to-local, align 4
  %v2_e154 = add i32 %v0_e154, 172
  %v3_e154 = inttoptr i32 %v2_e154 to i32*
  %v4_e154 = load i32, i32* %v3_e154, align 4
  store i32 %v4_e154, i32* %r3.global-to-local, align 4
  %v2_e158 = inttoptr i32 %v4_e154 to i32*
  store i32 %v2_e144, i32* %v2_e158, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_e160 = load i32, i32* %r0.global-to-local, align 4
  %v1_e160 = inttoptr i32 %v0_e160 to i32*
  %v2_e160 = load i32, i32* %v1_e160, align 4
  store i32 %v2_e160, i32* %r0.global-to-local, align 4
  %v4_e164 = call i32 @__GI_strrchr(i32 %v2_e160, i32 47, i32 %v2_e138, i32 %v4_e154)
  store i32 %v4_e164, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_e16c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e16c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e170 = icmp eq i32 %v4_e164, 0
  store i1 %v2_e170, i1* %cpsr_z.global-to-local, align 1
  %v2_e174 = add i32 %v2_e16c, 104
  %v3_e174 = inttoptr i32 %v2_e174 to i32*
  %v4_e174 = load i32, i32* %v3_e174, align 4
  store i32 %v4_e174, i32* %r2.global-to-local, align 4
  br i1 %v2_e170, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_e150
  %v2_e17c58 = inttoptr i32 %v4_e174 to i32*
  store i32 0, i32* %v2_e17c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_e150
  %v2_e178 = add i32 %v4_e164, 1
  store i32 %v2_e178, i32* %r3.global-to-local, align 4
  %v2_e17c = inttoptr i32 %v4_e174 to i32*
  store i32 %v4_e164, i32* %v2_e17c, align 4
  %v1_e180 = load i32, i32* %r3.global-to-local, align 4
  %v2_e180 = load i32, i32* %r2.global-to-local, align 4
  %v3_e180 = inttoptr i32 %v2_e180 to i32*
  store i32 %v1_e180, i32* %v3_e180, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_e130
  %v2_e190 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e190, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_e19c = add i32 %v2_e190, -12
  store i32 %v2_e19c, i32* %r5.global-to-local, align 4
  store i32 2620, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_e1ac = add i32 %v2_e190, 2620
  %v4_e1ac = inttoptr i32 %v3_e1ac to i32*
  store i32 %arg5, i32* %v4_e1ac, align 4
  %v0_e1c418 = load i32, i32* %r4.global-to-local, align 4
  %v1_e1c419 = load i32, i32* %r7.global-to-local, align 4
  %v3_e1c421 = icmp uge i32 %v0_e1c418, %v1_e1c419
  store i1 %v3_e1c421, i1* %cpsr_c.global-to-local, align 1
  %v9_e1c427 = icmp eq i32 %v0_e1c418, %v1_e1c419
  store i1 %v9_e1c427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e1c421, label %dec_label_pc_e1f8.lr.ph, label %dec_label_pc_e1b4

dec_label_pc_e1b4:                                ; preds = %bb84, %dec_label_pc_e1b4
  %v1_e1b4 = phi i32 [ %v1_e1c0, %dec_label_pc_e1b4 ], [ %v0_e1c418, %bb84 ]
  %v0_e1b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e1b4 = and i32 %v1_e1b4, 1073741824
  %v3_e1b4 = icmp ne i32 %v2_e1b4, 0
  store i1 %v3_e1b4, i1* %cpsr_c.global-to-local, align 1
  %v4_e1b4 = mul i32 %v1_e1b4, 4
  %v5_e1b4 = add i32 %v4_e1b4, %v0_e1b4
  %v6_e1b4 = inttoptr i32 %v5_e1b4 to i32*
  %v7_e1b4 = load i32, i32* %v6_e1b4, align 4
  store i32 %v7_e1b4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_e1b4)
  %v0_e1c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_e1c0 = add i32 %v0_e1c0, 1
  store i32 %v1_e1c0, i32* %r4.global-to-local, align 4
  %v1_e1c4 = load i32, i32* %r7.global-to-local, align 4
  %v3_e1c4 = icmp uge i32 %v1_e1c0, %v1_e1c4
  store i1 %v3_e1c4, i1* %cpsr_c.global-to-local, align 1
  %v9_e1c4 = icmp eq i32 %v1_e1c0, %v1_e1c4
  store i1 %v9_e1c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e1c4, label %dec_label_pc_e1f8.lr.ph, label %dec_label_pc_e1b4

dec_label_pc_e1f8.lr.ph:                          ; preds = %dec_label_pc_e1b4, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e1cc = icmp eq i32 %v0_e018, 0
  store i1 %v2_e1cc, i1* %cpsr_z.global-to-local, align 1
  %v2_e1d4 = xor i1 %v2_e1cc, true
  call void @__pseudo_cond_branch(i1 %v2_e1d4, i32 %v0_e018)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_e1e0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_e1ec = add i32 %v2_e1e0, -12
  store i32 %v2_e1ec, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e1f8

dec_label_pc_e1f8:                                ; preds = %dec_label_pc_e1f8.dec_label_pc_e1f8_crit_edge, %dec_label_pc_e1f8.lr.ph
  %v1_e1f8 = phi i32 [ %v1_e204, %dec_label_pc_e1f8.dec_label_pc_e1f8_crit_edge ], [ 0, %dec_label_pc_e1f8.lr.ph ]
  %v0_e1f8 = phi i32 [ %v0_e1f8.pre, %dec_label_pc_e1f8.dec_label_pc_e1f8_crit_edge ], [ %v2_e1ec, %dec_label_pc_e1f8.lr.ph ]
  %v2_e1f8 = and i32 %v1_e1f8, 1073741824
  %v3_e1f8 = icmp ne i32 %v2_e1f8, 0
  store i1 %v3_e1f8, i1* %cpsr_c.global-to-local, align 1
  %v4_e1f8 = mul i32 %v1_e1f8, 4
  %v5_e1f8 = add i32 %v4_e1f8, %v0_e1f8
  %v6_e1f8 = inttoptr i32 %v5_e1f8 to i32*
  %v7_e1f8 = load i32, i32* %v6_e1f8, align 4
  store i32 %v7_e1f8, i32* %ip.global-to-local, align 4
  store i32 57860, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_e1f8)
  %v0_e204 = load i32, i32* @r4, align 4
  %v1_e204 = add i32 %v0_e204, 1
  store i32 %v1_e204, i32* @r4, align 4
  %v1_e208 = load i32, i32* @r7, align 4
  %v3_e208 = icmp uge i32 %v1_e204, %v1_e208
  store i1 %v3_e208, i1* %cpsr_c.global-to-local, align 1
  %v9_e208 = icmp eq i32 %v1_e204, %v1_e208
  store i1 %v9_e208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e208, label %dec_label_pc_e210, label %dec_label_pc_e1f8.dec_label_pc_e1f8_crit_edge

dec_label_pc_e1f8.dec_label_pc_e1f8_crit_edge:    ; preds = %dec_label_pc_e1f8
  %v0_e1f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e1f8

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1f8
  %v2_e214.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e214.pre, i32* %r0.global-to-local, align 4
  %v2_e218 = add i32 %v2_e214.pre, -95828
  store i32 %v2_e218, i32* %r2.global-to-local, align 4
  store i32 %v2_e218, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e220 = icmp eq i32 %v2_e218, 0
  store i1 %v2_e220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e220, label %dec_label_pc_e238, label %dec_label_pc_e228

dec_label_pc_e228:                                ; preds = %dec_label_pc_e210
  store i32 57904, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_e218)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e234 = load i32, i32* %r0.global-to-local, align 4
  %v2_e234 = inttoptr i32 %v1_e234 to i32*
  store i32 0, i32* %v2_e234, align 4
  %v2_e23c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_e238

dec_label_pc_e238:                                ; preds = %dec_label_pc_e210, %dec_label_pc_e228
  %v2_e23c = phi i32 [ %v2_e214.pre, %dec_label_pc_e210 ], [ %v2_e23c.pre, %dec_label_pc_e228 ]
  store i32 136, i32* %r3.global-to-local, align 4
  store i32 %v2_e23c, i32* %r1.global-to-local, align 4
  %v2_e240 = add i32 %v2_e23c, 136
  %v3_e240 = inttoptr i32 %v2_e240 to i32*
  %v4_e240 = load i32, i32* %v3_e240, align 4
  store i32 %v4_e240, i32* %r2.global-to-local, align 4
  store i32 %v4_e240, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e248 = icmp eq i32 %v4_e240, 0
  store i1 %v2_e248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e248, label %dec_label_pc_e260, label %dec_label_pc_e250

dec_label_pc_e250:                                ; preds = %dec_label_pc_e238
  store i32 57944, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_e240)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e25c = load i32, i32* %r0.global-to-local, align 4
  %v2_e25c = inttoptr i32 %v1_e25c to i32*
  store i32 0, i32* %v2_e25c, align 4
  br label %dec_label_pc_e260

dec_label_pc_e260:                                ; preds = %dec_label_pc_e238, %dec_label_pc_e250
  %v2_e260 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_e260, i32* @r0, align 4
  %v1_e264 = call i32 @_setjmp(i32 %v2_e260)
  store i32 %v1_e264, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e268 = icmp eq i32 %v1_e264, 0
  store i1 %v2_e268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e268, label %dec_label_pc_e270, label %dec_label_pc_e2bc

dec_label_pc_e270:                                ; preds = %dec_label_pc_e260
  %v0_e270 = call i32 @__aeabi_read_tp()
  store i32 %v0_e270, i32* %r0.global-to-local, align 4
  %v1_e274 = add i32 %v0_e270, -1168
  store i32 %v1_e274, i32* %r2.global-to-local, align 4
  %v2_e27c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e27c, i32* %r4.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_e288 = add i32 %v2_e27c, 60
  %v3_e288 = inttoptr i32 %v2_e288 to i32*
  %v4_e288 = load i32, i32* %v3_e288, align 4
  store i32 %v4_e288, i32* %ip.global-to-local, align 4
  store i32 %v2_e260, i32* %r3.global-to-local, align 4
  %v2_e298 = add i32 %v0_e270, -1040
  %v3_e298 = inttoptr i32 %v2_e298 to i32*
  store i32 %v2_e260, i32* %v3_e298, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_e2a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e2a4 = inttoptr i32 %v0_e2a4 to i32*
  %v2_e2a4 = load i32, i32* %v1_e2a4, align 4
  store i32 %v2_e2a4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_e2b4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e358

dec_label_pc_e2bc:                                ; preds = %dec_label_pc_e260
  store i32 44, i32* %r3.global-to-local, align 4
  %v2_e2c0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_e2c0, i32* %ip.global-to-local, align 4
  %v2_e2c4 = add i32 %v2_e2c0, 44
  %v3_e2c4 = inttoptr i32 %v2_e2c4 to i32*
  %v4_e2c4 = load i32, i32* %v3_e2c4, align 4
  store i32 %v4_e2c4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_e2c4)
  store i32 128, i32* %r3.global-to-local, align 4
  %v2_e2d4 = load i32, i32* %stack_var_-416, align 4
  %v2_e2d8 = add i32 %v2_e2d4, 128
  %v3_e2d8 = inttoptr i32 %v2_e2d8 to i32*
  %v4_e2d8 = load i32, i32* %v3_e2d8, align 4
  store i32 %v4_e2d8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e2dc

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e310.dec_label_pc_e2dc_crit_edge, %dec_label_pc_e2bc
  %v0_e2dc = phi i32 [ %v0_e2dc.pre, %dec_label_pc_e310.dec_label_pc_e2dc_crit_edge ], [ %v4_e2d8, %dec_label_pc_e2bc ]
  %v1_e2dc = inttoptr i32 %v0_e2dc to i32*
  %v2_e2dc = load i32, i32* %v1_e2dc, align 4
  store i32 %v0_e2dc, i32* %r2.global-to-local, align 4
  store i32 %v2_e2dc, i32* %r4.global-to-local, align 4
  %v1_e2e8 = add i32 %v2_e2dc, -1
  store i32 %v1_e2e8, i32* %r1.global-to-local, align 4
  %v2_e2ec89 = load i32, i32* %v1_e2dc, align 4
  store i32 %v2_e2ec89, i32* %r3.global-to-local, align 4
  %v3_e2f091 = icmp uge i32 %v2_e2ec89, %v2_e2dc
  store i1 %v3_e2f091, i1* %cpsr_c.global-to-local, align 1
  %v9_e2f097 = icmp eq i32 %v2_e2ec89, %v2_e2dc
  store i1 %v9_e2f097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2f097, label %dec_label_pc_e2f8, label %dec_label_pc_e310

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2dc, %dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge
  %v0_e2f898 = phi i32 [ %v1_e2f0.pre, %dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge ], [ %v2_e2dc, %dec_label_pc_e2dc ]
  store i32 %v0_e2f898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_e308 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_e308, label %dec_label_pc_e30c, label %dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge

dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge:    ; preds = %dec_label_pc_e2f8
  %v0_e2ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_e2f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_e2ec = inttoptr i32 %v0_e2ec.pre to i32*
  %v2_e2ec = load i32, i32* %v1_e2ec, align 4
  store i32 %v2_e2ec, i32* %r3.global-to-local, align 4
  %v3_e2f0 = icmp uge i32 %v2_e2ec, %v1_e2f0.pre
  store i1 %v3_e2f0, i1* %cpsr_c.global-to-local, align 1
  %v9_e2f0 = icmp eq i32 %v2_e2ec, %v1_e2f0.pre
  store i1 %v9_e2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2f0, label %dec_label_pc_e2f8, label %dec_label_pc_e310

dec_label_pc_e30c:                                ; preds = %dec_label_pc_e2f8
  %v0_e30c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e30c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e310

dec_label_pc_e310:                                ; preds = %dec_label_pc_e2dc, %dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge, %dec_label_pc_e30c
  %v0_e318 = phi i32 [ %v0_e30c, %dec_label_pc_e30c ], [ %v2_e2ec89, %dec_label_pc_e2dc ], [ %v2_e2ec, %dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge ]
  %v1_e310 = phi i32 [ %v0_e30c, %dec_label_pc_e30c ], [ %v2_e2dc, %dec_label_pc_e2dc ], [ %v1_e2f0.pre, %dec_label_pc_e2f8.dec_label_pc_e2ec_crit_edge ]
  %v3_e310 = icmp uge i32 %v0_e318, %v1_e310
  store i1 %v3_e310, i1* %cpsr_c.global-to-local, align 1
  %v9_e310 = icmp eq i32 %v0_e318, %v1_e310
  store i1 %v9_e310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e310, label %dec_label_pc_e318, label %dec_label_pc_e310.dec_label_pc_e2dc_crit_edge

dec_label_pc_e310.dec_label_pc_e2dc_crit_edge:    ; preds = %dec_label_pc_e310
  %v0_e2dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e2dc

dec_label_pc_e318:                                ; preds = %dec_label_pc_e310
  %v2_e318 = icmp ne i32 %v1_e310, 0
  store i1 %v2_e318, i1* %cpsr_c.global-to-local, align 1
  %v7_e318 = icmp eq i32 %v1_e310, 1
  store i1 %v7_e318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e318, label %dec_label_pc_e358, label %dec_label_pc_e320

dec_label_pc_e320:                                ; preds = %dec_label_pc_e318
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e358

dec_label_pc_e358:                                ; preds = %dec_label_pc_e318, %dec_label_pc_e320, %dec_label_pc_e270
  %storemerge2 = phi i32 [ %v0_e2b4, %dec_label_pc_e270 ], [ 0, %dec_label_pc_e320 ], [ 0, %dec_label_pc_e318 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_e35c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_e35c, i32* %r0.global-to-local, align 4
  %v0_e360 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e360, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_e358
  %v1_e360 = load i32, i32* %r1.global-to-local, align 4
  %v2_e360 = load i32, i32* @r8, align 4
  %v5_e360 = sdiv i32 %v2_e360, 32
  %v6_e360 = and i32 %v5_e360, %v1_e360
  store i32 %v6_e360, i32* %r4.global-to-local, align 4
  %v8_e364 = shl i32 %v2_e360, %v1_e35c
  %v9_e364 = and i32 %v8_e364, %v1_e35c
  %v2_e368 = load i32, i32* %ip.global-to-local, align 4
  %v8_e368 = lshr i32 %v2_e368, %v9_e364
  %v9_e368 = and i32 %v8_e368, %v9_e364
  %v5_e36c = sdiv i32 %v9_e368, 1048576
  %v6_e36c = and i32 %v5_e36c, %v9_e368
  %v3_e370 = mul i32 %v6_e36c, %v2_e368
  %v2_e374 = load i32, i32* %r2.global-to-local, align 4
  %v5_e378 = sdiv i32 %v6_e360, 8
  %v5_e37c = udiv i32 %v2_e368, 2
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v6_e378 = and i32 %v5_e37c, %v5_e378
  %v6_e37c = and i32 %v6_e378, %v2_e374
  %v4_e380 = and i32 %v6_e37c, %v3_e370
  store i32 %v4_e380, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_e358, %bb85
  %v5_e380 = phi i32 [ %v1_e35c, %dec_label_pc_e358 ], [ %v4_e380, %bb85 ]
  ret i32 %v5_e380

; uselistorder directives
  uselistorder i32 %v9_e368, { 1, 0 }
  uselistorder i32 %v2_e360, { 1, 0 }
  uselistorder i32 %v1_e35c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_e310, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e30c, { 1, 0, 2 }
  uselistorder i32 %v1_e2f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_e2dc, { 1, 0 }
  uselistorder i32 %v2_e23c, { 1, 0 }
  uselistorder i32 %v2_e214.pre, { 2, 0, 1 }
  uselistorder i32 %v1_e208, { 1, 0 }
  uselistorder i32 %v1_e204, { 3, 2, 1, 0 }
  uselistorder i32 %v1_e1f8, { 1, 0 }
  uselistorder i32 %v1_e1c4, { 1, 0 }
  uselistorder i32 %v1_e1c0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e1b4, { 1, 0 }
  uselistorder i32 %v2_e190, { 1, 0, 2 }
  uselistorder i32 %v4_e174, { 1, 0, 2 }
  uselistorder i32 %v4_e164, { 1, 0, 2, 3 }
  uselistorder i1 %v8_e0ac, { 1, 2, 0 }
  uselistorder i32 %v2_e078, { 1, 2, 0 }
  uselistorder i32 %v1_e074, { 1, 2, 0 }
  uselistorder i1 %v2_e060, { 1, 0, 2 }
  uselistorder i32 %v5_e064, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e030, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e018, { 1, 0, 2 }
  uselistorder i32 %v2_e00c, { 1, 0, 2 }
  uselistorder i32 %v3_dfdc, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 5, 6, 7, 8, 9, 11, 10, 14, 15, 16, 3, 12, 13, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 3, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 0, 10, 11, 12, 14, 13, 1, 15, 17, 16, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 3, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 2624, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_e358, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e310, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e2f8, { 1, 0 }
  uselistorder label %dec_label_pc_e260, { 1, 0 }
  uselistorder label %dec_label_pc_e238, { 1, 0 }
  uselistorder label %dec_label_pc_e1b4, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e130, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e108, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_e078, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_e060, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e3ac = load i32, i32* @r4, align 4
  store i32 %v3_e3ac, i32* %stack_var_-16, align 4
  %v3_e3b8 = urem i32 %arg4, 4096
  %v2_e3bc = icmp eq i32 %v3_e3b8, 0
  br i1 %v2_e3bc, label %dec_label_pc_e3e0, label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %entry
  %v0_e3c8 = call i32 @__aeabi_read_tp()
  store i32 %v0_e3c8, i32* %r0.global-to-local, align 4
  %v3_e3cc = load i16, i16* @global_var_22308.76, align 2
  %v4_e3cc = sext i16 %v3_e3cc to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_e3d8 = add i32 %v4_e3cc, %v0_e3c8
  %v4_e3d8 = inttoptr i32 %v3_e3d8 to i32*
  store i32 22, i32* %v4_e3d8, align 4
  %v0_e414.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e414

dec_label_pc_e3e0:                                ; preds = %entry
  %v0_e3f0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e3f0, -4095
  br i1 %tmp, label %dec_label_pc_e410, label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3e0
  %v1_e3fc = sub i32 0, %v0_e3f0
  %v3_e400 = load i16, i16* @global_var_22308.76, align 2
  %v4_e400 = sext i16 %v3_e400 to i32
  %v0_e404 = call i32 @__aeabi_read_tp()
  %v3_e408 = add i32 %v4_e400, %v0_e404
  %v4_e408 = inttoptr i32 %v3_e408 to i32*
  store i32 %v1_e3fc, i32* %v4_e408, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e410

dec_label_pc_e410:                                ; preds = %dec_label_pc_e3e0, %dec_label_pc_e3f8
  %v0_e410 = phi i32 [ %v0_e3f0, %dec_label_pc_e3e0 ], [ -1, %dec_label_pc_e3f8 ]
  store i32 %v0_e410, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e414

dec_label_pc_e414:                                ; preds = %dec_label_pc_e3c4, %dec_label_pc_e410
  %v0_e414 = phi i32 [ %v0_e414.pre, %dec_label_pc_e3c4 ], [ %v0_e410, %dec_label_pc_e410 ]
  store i32 %v0_e414, i32* %r0.global-to-local, align 4
  %v2_e418 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e418, i32* @r4, align 4
  ret i32 %v0_e414

; uselistorder directives
  uselistorder i32 %v0_e414, { 1, 0 }
  uselistorder i32 %v0_e3f0, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_e414, { 1, 0 }
  uselistorder label %dec_label_pc_e410, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_e428 = load i32, i32* @lr, align 4
  store i32 %v0_e428, i32* %stack_var_-4, align 4
  %v0_e430 = load i32, i32* @r0, align 4
  %v3_e434 = load i16, i16* @global_var_22308.76, align 2
  %v4_e434 = sext i16 %v3_e434 to i32
  store i32 %v4_e434, i32* @r2, align 4
  %v0_e438 = call i32 @__aeabi_read_tp()
  %v1_e43c = sub i32 0, %v0_e430
  store i32 %v1_e43c, i32* @r3, align 4
  %v2_e440 = load i32, i32* @r2, align 4
  %v3_e440 = add i32 %v2_e440, %v0_e438
  %v4_e440 = inttoptr i32 %v3_e440 to i32*
  store i32 %v1_e43c, i32* %v4_e440, align 4
  %v2_e448 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_e448, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v6_e454 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_e45c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_e45c, label %dec_label_pc_e4b0, label %dec_label_pc_e474

dec_label_pc_e474:                                ; preds = %entry
  %v1_e474 = add i32 %arg2, 4
  %v2_e474 = inttoptr i32 %v1_e474 to i32*
  %v3_e474 = load i32, i32* %v2_e474, align 4
  store i32 %v3_e474, i32* @r3, align 4
  %v1_e478 = and i32 %v3_e474, 67108864
  %v2_e478 = icmp eq i32 %v1_e478, 0
  br i1 %v2_e478, label %dec_label_pc_e480, label %dec_label_pc_e4b0

dec_label_pc_e480:                                ; preds = %dec_label_pc_e474
  store i32 20, i32* @r2, align 4
  %v2_e484 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e484, i32* @r0, align 4
  %v0_e488 = call i32 @memcpy()
  %v0_e4b0.pre = load i32, i32* @r5, align 4
  %v0_e4b8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4b0

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e474, %entry, %dec_label_pc_e480
  %v0_e4b8 = phi i32 [ %arg3, %dec_label_pc_e474 ], [ %arg3, %entry ], [ %v0_e4b8.pre, %dec_label_pc_e480 ]
  %v0_e4b4 = phi i32 [ %arg2, %dec_label_pc_e474 ], [ 0, %entry ], [ %v2_e484, %dec_label_pc_e480 ]
  %v0_e4b0 = phi i32 [ %arg1, %dec_label_pc_e474 ], [ %arg1, %entry ], [ %v0_e4b0.pre, %dec_label_pc_e480 ]
  %v4_e4c0 = call i32 @__syscall_rt_sigaction(i32 %v0_e4b0, i32 %v0_e4b4, i32 %v0_e4b8, i32 8)
  store i32 %v6_e454, i32* @r5, align 4
  ret i32 %v4_e4c0

; uselistorder directives
  uselistorder label %dec_label_pc_e4b0, { 2, 0, 1 }
}

define i32 @function_e4d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_e4d4:
  %v0_e4d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e4d4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e4d4
  %v3_e4d4 = mul i32 %arg1, %arg1
  %v2_e4d8 = load i32, i32* @r4, align 4
  %v4_e4d8 = mul i32 %v2_e4d8, 2
  %v5_e4d8 = and i32 %v4_e4d8, %v3_e4d4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e4d4, %bb
  %v6_e4d8 = phi i32 [ %arg1, %dec_label_pc_e4d4 ], [ %v5_e4d8, %bb ]
  ret i32 %v6_e4d8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_e4e0 = call i32 @__sigsetjmp()
  ret i32 %v0_e4e0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e510 = load i32, i32* @r7, align 4
  store i32 %v3_e510, i32* %stack_var_-8, align 4
  %v0_e51c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e51c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e51c, -4095
  br i1 %tmp, label %dec_label_pc_e544, label %dec_label_pc_e52c

dec_label_pc_e52c:                                ; preds = %entry
  %v0_e530 = call i32 @__aeabi_read_tp()
  %v3_e534 = load i16, i16* @global_var_22308.76, align 2
  %v4_e534 = sext i16 %v3_e534 to i32
  %v0_e538 = load i32, i32* %r2.global-to-local, align 4
  %v1_e538 = sub i32 0, %v0_e538
  store i32 %v1_e538, i32* %r2.global-to-local, align 4
  %v3_e53c = add i32 %v4_e534, %v0_e530
  %v4_e53c = inttoptr i32 %v3_e53c to i32*
  store i32 %v1_e538, i32* %v4_e53c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e544.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %entry, %dec_label_pc_e52c
  %v1_e548 = phi i32 [ %v0_e51c, %entry ], [ -1, %dec_label_pc_e52c ]
  %v2_e544 = phi i32 [ %v3_e510, %entry ], [ %v2_e544.pre, %dec_label_pc_e52c ]
  store i32 %v2_e544, i32* @r7, align 4
  ret i32 %v1_e548

; uselistorder directives
  uselistorder i32 %v0_e51c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e544, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_e554 = ptrtoint i32* %stack_var_-16 to i32
  %v2_e560 = call i32 @getrlimit(i32 7, i32 %v2_e554)
  %v1_e564 = icmp slt i32 %v2_e560, 0
  %v5_e568 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_e564, i32 256, i32 %v5_e568
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_e58c = load i32, i32* @r0, align 4
  ret i32 %v1_e58c
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_e5a0 = load i32, i32* @r0, align 4
  ret i32 %v1_e5a0
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e5b4 = load i32, i32* @r0, align 4
  ret i32 %v1_e5b4
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_e5c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 156) to i32*), align 4
  %v1_e5c8 = inttoptr i32 %v4_e5c4 to i32*
  %v2_e5c8 = load i32, i32* %v1_e5c8, align 4
  %v2_e5cc = icmp eq i32 %v2_e5c8, 0
  br i1 %v2_e5cc, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_e5d4 = phi i32 [ %v2_e5c8, %entry ], [ 4096, %bb ]
  ret i32 %v1_e5d4

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_e60c, label %dec_label_pc_e5f4

dec_label_pc_e5f4:                                ; preds = %entry
  %v1_e5f8 = sub i32 0, %arg1
  %v3_e5fc = load i16, i16* @global_var_22308.76, align 2
  %v4_e5fc = sext i16 %v3_e5fc to i32
  %v0_e600 = call i32 @__aeabi_read_tp()
  %v3_e604 = add i32 %v4_e5fc, %v0_e600
  %v4_e604 = inttoptr i32 %v3_e604 to i32*
  store i32 %v1_e5f8, i32* %v4_e604, align 4
  br label %dec_label_pc_e60c

dec_label_pc_e60c:                                ; preds = %entry, %dec_label_pc_e5f4
  %v1_e610 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_e5f4 ]
  ret i32 %v1_e610

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e60c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e618 = load i32, i32* @r7, align 4
  store i32 %v3_e618, i32* %stack_var_-8, align 4
  %v0_e624 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e624, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e624, -4095
  br i1 %tmp, label %dec_label_pc_e64c, label %dec_label_pc_e634

dec_label_pc_e634:                                ; preds = %entry
  %v0_e638 = call i32 @__aeabi_read_tp()
  %v3_e63c = load i16, i16* @global_var_22308.76, align 2
  %v4_e63c = sext i16 %v3_e63c to i32
  %v0_e640 = load i32, i32* %r2.global-to-local, align 4
  %v1_e640 = sub i32 0, %v0_e640
  store i32 %v1_e640, i32* %r2.global-to-local, align 4
  %v3_e644 = add i32 %v4_e63c, %v0_e638
  %v4_e644 = inttoptr i32 %v3_e644 to i32*
  store i32 %v1_e640, i32* %v4_e644, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e64c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e64c:                                ; preds = %entry, %dec_label_pc_e634
  %v1_e650 = phi i32 [ %v0_e624, %entry ], [ -1, %dec_label_pc_e634 ]
  %v2_e64c = phi i32 [ %v3_e618, %entry ], [ %v2_e64c.pre, %dec_label_pc_e634 ]
  store i32 %v2_e64c, i32* @r7, align 4
  ret i32 %v1_e650

; uselistorder directives
  uselistorder i32 %v0_e624, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e64c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_e668 = load i32, i32* @r0, align 4
  ret i32 %v1_e668
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e66c = load i32, i32* @r7, align 4
  store i32 %v3_e66c, i32* %stack_var_-8, align 4
  %v0_e678 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e678, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_e678, -4095
  br i1 %tmp, label %dec_label_pc_e6a0, label %dec_label_pc_e688

dec_label_pc_e688:                                ; preds = %entry
  %v0_e68c = call i32 @__aeabi_read_tp()
  %v3_e690 = load i16, i16* @global_var_22308.76, align 2
  %v4_e690 = sext i16 %v3_e690 to i32
  %v0_e694 = load i32, i32* @r2, align 4
  %v1_e694 = sub i32 0, %v0_e694
  store i32 %v1_e694, i32* @r2, align 4
  %v3_e698 = add i32 %v4_e690, %v0_e68c
  %v4_e698 = inttoptr i32 %v3_e698 to i32*
  store i32 %v1_e694, i32* %v4_e698, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e6a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e6a0

dec_label_pc_e6a0:                                ; preds = %entry, %dec_label_pc_e688
  %v1_e6a4 = phi i32 [ %v0_e678, %entry ], [ -1, %dec_label_pc_e688 ]
  %v2_e6a0 = phi i32 [ %v3_e66c, %entry ], [ %v2_e6a0.pre, %dec_label_pc_e688 ]
  store i32 %v2_e6a0, i32* @r7, align 4
  ret i32 %v1_e6a4

; uselistorder directives
  uselistorder i32 %v0_e678, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e6a0, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e6ac = load i32, i32* @r4, align 4
  store i32 %v3_e6ac, i32* %stack_var_-16, align 4
  store i32 12192, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r4.global-to-local, align 4
  %v4_e6bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 12192) to i32*), align 4
  %v2_e6c0 = icmp eq i32 %v4_e6bc, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_e6c0, label %dec_label_pc_e6cc, label %dec_label_pc_e6dc

dec_label_pc_e6cc:                                ; preds = %entry
  %v1_e6d0 = call i32 @__GI_brk(i32 0)
  %v1_e6d4 = icmp slt i32 %v1_e6d0, 0
  br i1 %v1_e6d4, label %dec_label_pc_e700, label %dec_label_pc_e6dcthread-pre-split

dec_label_pc_e6dcthread-pre-split:                ; preds = %dec_label_pc_e6cc
  %v0_e6e0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_e6dc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_e6dc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e6dc

dec_label_pc_e6dc:                                ; preds = %dec_label_pc_e6dcthread-pre-split, %entry
  %v1_e6dc = phi i32 [ %v1_e6dc.pre, %dec_label_pc_e6dcthread-pre-split ], [ 12192, %entry ]
  %v0_e6dc = phi i32 [ %v0_e6dc.pre, %dec_label_pc_e6dcthread-pre-split ], [ ptrtoint (i32* @global_var_222a8.80 to i32), %entry ]
  %v1_e6f0 = phi i32 [ %v0_e6e0.pr, %dec_label_pc_e6dcthread-pre-split ], [ %arg1, %entry ]
  %v2_e6dc = add i32 %v0_e6dc, %v1_e6dc
  %v3_e6dc = inttoptr i32 %v2_e6dc to i32*
  %v4_e6dc = load i32, i32* %v3_e6dc, align 4
  %v2_e6e0 = icmp eq i32 %v1_e6f0, 0
  store i32 %v4_e6dc, i32* %r4.global-to-local, align 4
  br i1 %v2_e6e0, label %dec_label_pc_e704, label %dec_label_pc_e6ec

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e6dc
  %v2_e6f0 = add i32 %v4_e6dc, %v1_e6f0
  %v1_e6f4 = call i32 @__GI_brk(i32 %v2_e6f0)
  %v1_e6f8 = icmp slt i32 %v1_e6f4, 0
  br i1 %v1_e6f8, label %dec_label_pc_e700, label %dec_label_pc_e6ec.dec_label_pc_e704_crit_edge

dec_label_pc_e6ec.dec_label_pc_e704_crit_edge:    ; preds = %dec_label_pc_e6ec
  %v0_e704.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e704

dec_label_pc_e700:                                ; preds = %dec_label_pc_e6ec, %dec_label_pc_e6cc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e704

dec_label_pc_e704:                                ; preds = %dec_label_pc_e6dc, %dec_label_pc_e6ec.dec_label_pc_e704_crit_edge, %dec_label_pc_e700
  %v0_e704 = phi i32 [ %v0_e704.pre, %dec_label_pc_e6ec.dec_label_pc_e704_crit_edge ], [ -1, %dec_label_pc_e700 ], [ %v4_e6dc, %dec_label_pc_e6dc ]
  %v2_e708 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e708, i32* @r4, align 4
  ret i32 %v0_e704

; uselistorder directives
  uselistorder i32 %v4_e6dc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_e704, { 2, 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_e71c = icmp eq i32* %arg2, null
  br i1 %v2_e71c, label %dec_label_pc_e760, label %dec_label_pc_e730

dec_label_pc_e730:                                ; preds = %entry
  %v2_e730 = load i32, i32* %arg2, align 4
  %v1_e734 = icmp slt i32 %v2_e730, 0
  br i1 %v1_e734, label %dec_label_pc_e748, label %dec_label_pc_e73c

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e730
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_e73c = load i32, i32* %.pre3, align 4
  %v1_e740 = urem i32 %v3_e73c, 2
  %v2_e740 = icmp eq i32 %v1_e740, 0
  br i1 %v2_e740, label %dec_label_pc_e760, label %dec_label_pc_e748

dec_label_pc_e748:                                ; preds = %dec_label_pc_e730, %dec_label_pc_e73c
  %v2_e748 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_e748 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_e760

dec_label_pc_e760:                                ; preds = %entry, %dec_label_pc_e73c, %dec_label_pc_e748
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_e794, label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e760
  %v1_e780 = sub i32 0, %arg1
  %v3_e784 = load i16, i16* @global_var_22308.76, align 2
  %v4_e784 = sext i16 %v3_e784 to i32
  %v0_e788 = call i32 @__aeabi_read_tp()
  %v3_e78c = add i32 %v4_e784, %v0_e788
  %v4_e78c = inttoptr i32 %v3_e78c to i32*
  store i32 %v1_e780, i32* %v4_e78c, align 4
  br label %dec_label_pc_e794

dec_label_pc_e794:                                ; preds = %dec_label_pc_e760, %dec_label_pc_e77c
  %v1_e79c = phi i32 [ %arg1, %dec_label_pc_e760 ], [ -1, %dec_label_pc_e77c ]
  ret i32 %v1_e79c

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e794, { 1, 0 }
  uselistorder label %dec_label_pc_e760, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e748, { 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e7b4 = load i32, i32* @r0, align 4
  ret i32 %v1_e7b4
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_e7e4, label %dec_label_pc_e7cc

dec_label_pc_e7cc:                                ; preds = %entry
  %v1_e7d0 = sub i32 0, %arg1
  %v3_e7d4 = load i16, i16* @global_var_22308.76, align 2
  %v4_e7d4 = sext i16 %v3_e7d4 to i32
  %v0_e7d8 = call i32 @__aeabi_read_tp()
  %v3_e7dc = add i32 %v4_e7d4, %v0_e7d8
  %v4_e7dc = inttoptr i32 %v3_e7dc to i32*
  store i32 %v1_e7d0, i32* %v4_e7dc, align 4
  br label %dec_label_pc_e7e4

dec_label_pc_e7e4:                                ; preds = %entry, %dec_label_pc_e7cc
  %v1_e7e8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_e7cc ]
  ret i32 %v1_e7e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e7e4, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_e7f4 = load i32, i32* %arg1, align 4
  store i32 %v2_e7f4, i32* %r3.global-to-local, align 4
  %v3_e7fc = icmp eq i32 %v2_e7f4, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  br i1 %v3_e7fc, label %dec_label_pc_e810, label %dec_label_pc_e82c

dec_label_pc_e810:                                ; preds = %entry
  store i32 80616, i32* %r2.global-to-local, align 4
  %v0_e814 = call i32 @__aeabi_read_tp()
  %v3_e818 = load i16, i16* @global_var_22308.76, align 2
  %v4_e818 = sext i16 %v3_e818 to i32
  store i32 %v4_e818, i32* %r2.global-to-local, align 4
  %v0_e81c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e81c, i32* %r1.global-to-local, align 4
  %v1_e820 = add i32 %v0_e81c, 10
  store i32 %v1_e820, i32* %r3.global-to-local, align 4
  %v3_e824 = add i32 %v4_e818, %v0_e814
  %v4_e824 = inttoptr i32 %v3_e824 to i32*
  store i32 %v1_e820, i32* %v4_e824, align 4
  %v0_e8d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e8d4

dec_label_pc_e82c:                                ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v1_e830 = add i32 %tmp, 24
  store i32 %v1_e830, i32* %r2.global-to-local, align 4
  %v4_e838 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 72) to i32*), align 4
  store i32 %v4_e838, i32* %r1.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_e844 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_e844)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_e85c = load i32, i32* @r6, align 4
  %v2_e85c = add i32 %v0_e85c, 16
  %v3_e85c = inttoptr i32 %v2_e85c to i32*
  %v4_e85c = load i32, i32* %v3_e85c, align 4
  call void @__pseudo_branch(i32 %v4_e85c)
  %v0_e868 = load i32, i32* @r7, align 4
  %v1_e868 = inttoptr i32 %v0_e868 to i32*
  %v2_e868 = load i32, i32* %v1_e868, align 4
  store i32 %v2_e868, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_e878 = load i32, i32* @r8, align 4
  store i32 %v0_e878, i32* %v1_e868, align 4
  %v0_e87c = load i32, i32* @r6, align 4
  %v1_e87c = load i32, i32* %r3.global-to-local, align 4
  %v2_e87c = add i32 %v1_e87c, %v0_e87c
  %v3_e87c = inttoptr i32 %v2_e87c to i32*
  %v4_e87c = load i32, i32* %v3_e87c, align 4
  store i32 ptrtoint (i32* @global_var_e888.310 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_e87c)
  %v0_e888 = load i32, i32* @r7, align 4
  %v1_e888 = add i32 %v0_e888, 12
  %v2_e888 = inttoptr i32 %v1_e888 to i32*
  %v3_e888 = load i32, i32* %v2_e888, align 4
  store i32 %v3_e888, i32* @r0, align 4
  %v0_e88c = call i32 @free()
  %v0_e890 = load i32, i32* @r7, align 4
  store i32 %v0_e890, i32* @r0, align 4
  %v0_e894 = call i32 @free()
  %v0_e89c = load i32, i32* @r4, align 4
  store i32 %v0_e89c, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_e89c, -4095
  br i1 %tmp11, label %dec_label_pc_e8d0, label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e82c
  store i32 80448, i32* %r3.global-to-local, align 4
  %v0_e8bc = call i32 @__aeabi_read_tp()
  %v3_e8c0 = load i16, i16* @global_var_22308.76, align 2
  %v4_e8c0 = sext i16 %v3_e8c0 to i32
  store i32 %v4_e8c0, i32* %r3.global-to-local, align 4
  %v0_e8c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e8c4 = sub i32 0, %v0_e8c4
  store i32 %v1_e8c4, i32* %r2.global-to-local, align 4
  %v3_e8c8 = add i32 %v4_e8c0, %v0_e8bc
  %v4_e8c8 = inttoptr i32 %v3_e8c8 to i32*
  store i32 %v1_e8c4, i32* %v4_e8c8, align 4
  %v0_e8cc = load i32, i32* @r8, align 4
  br label %dec_label_pc_e8d0

dec_label_pc_e8d0:                                ; preds = %dec_label_pc_e82c, %dec_label_pc_e8b8
  %v0_e8d0 = phi i32 [ %v0_e89c, %dec_label_pc_e82c ], [ %v0_e8cc, %dec_label_pc_e8b8 ]
  store i32 %v0_e8d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e8d4

dec_label_pc_e8d4:                                ; preds = %dec_label_pc_e810, %dec_label_pc_e8d0
  %v0_e8d4 = phi i32 [ %v0_e8d4.pre, %dec_label_pc_e810 ], [ %v0_e8d0, %dec_label_pc_e8d0 ]
  ret i32 %v0_e8d4

; uselistorder directives
  uselistorder i32 %v0_e89c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e8d4, { 1, 0 }
  uselistorder label %dec_label_pc_e8d0, { 1, 0 }
}

define i32 @function_e8ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8ec:
  %v0_e8ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e8ec, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_e8ec
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_e8ec, %bb
  %v7_e8fc = phi i32 [ %arg1, %dec_label_pc_e8ec ], [ 0, %bb ]
  ret i32 %v7_e8fc

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_e900 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_e914 = call i32 @malloc(i32 48)
  %v2_e91c = icmp eq i32 %v1_e914, 0
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  br i1 %v2_e91c, label %bb, label %dec_label_pc_e92c

bb:                                               ; preds = %entry
  br label %dec_label_pc_e9b8

dec_label_pc_e92c:                                ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e930 = load i32, i32* @r4, align 4
  %v2_e930 = icmp ugt i32 %v0_e930, 511
  %v2_e934 = add i32 %v1_e914, 4
  %v3_e934 = inttoptr i32 %v2_e934 to i32*
  store i32 0, i32* %v3_e934, align 4
  %v0_e938 = load i32, i32* %r3.global-to-local, align 4
  %v2_e938 = add i32 %v1_e914, 16
  %v3_e938 = inttoptr i32 %v2_e938 to i32*
  store i32 %v0_e938, i32* %v3_e938, align 4
  %v0_e93c = load i32, i32* %r3.global-to-local, align 4
  %v2_e93c = add i32 %v1_e914, 8
  %v3_e93c = inttoptr i32 %v2_e93c to i32*
  store i32 %v0_e93c, i32* %v3_e93c, align 4
  br i1 %v2_e930, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_e92c
  %v0_e9442 = load i32, i32* @r4, align 4
  %v2_e9443 = add i32 %v1_e914, 20
  %v3_e9444 = inttoptr i32 %v2_e9443 to i32*
  store i32 %v0_e9442, i32* %v3_e9444, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_e92c
  %v1_e940 = load i32, i32* %r3.global-to-local, align 4
  %v2_e940 = add i32 %v1_e940, 512
  store i32 %v2_e940, i32* %r3.global-to-local, align 4
  %v0_e944 = load i32, i32* @r4, align 4
  %v2_e944 = add i32 %v1_e914, 20
  %v3_e944 = inttoptr i32 %v2_e944 to i32*
  store i32 %v0_e944, i32* %v3_e944, align 4
  %v1_e948 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_e948, i32* %v3_e944, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_e914, i32* @r5, align 4
  %v0_e950 = load i32, i32* @r7, align 4
  %v2_e950 = inttoptr i32 %v1_e914 to i32*
  store i32 %v0_e950, i32* %v2_e950, align 4
  %v0_e954 = load i32, i32* @r5, align 4
  %v1_e954 = add i32 %v0_e954, 20
  %v2_e954 = inttoptr i32 %v1_e954 to i32*
  %v3_e954 = load i32, i32* %v2_e954, align 4
  store i32 %v3_e954, i32* %r1.global-to-local, align 4
  %v2_e95c = call i32 @calloc(i32 1, i32 %v3_e954)
  %v2_e960 = icmp eq i32 %v2_e95c, 0
  store i32 %v2_e95c, i32* @r4, align 4
  %v1_e968 = load i32, i32* @r5, align 4
  %v2_e968 = add i32 %v1_e968, 12
  %v3_e968 = inttoptr i32 %v2_e968 to i32*
  store i32 %v2_e95c, i32* %v3_e968, align 4
  br i1 %v2_e960, label %dec_label_pc_e970, label %dec_label_pc_e980

dec_label_pc_e970:                                ; preds = %bb17
  %v0_e970 = load i32, i32* @r5, align 4
  store i32 %v0_e970, i32* @r0, align 4
  %v0_e974 = call i32 @free()
  %v0_e978 = load i32, i32* @r4, align 4
  br label %dec_label_pc_e9b8

dec_label_pc_e980:                                ; preds = %bb17
  %v0_e984 = load i32, i32* @r6, align 4
  %v2_e984 = add i32 %v0_e984, -37288
  store i32 %v2_e984, i32* %r3.global-to-local, align 4
  %v1_e98c = inttoptr i32 %v2_e984 to i32*
  %v2_e98c = load i32, i32* %v1_e98c, align 4
  %v3_e98c = add i32 %v0_e984, -37284
  %v4_e98c = inttoptr i32 %v3_e98c to i32*
  %v5_e98c = load i32, i32* %v4_e98c, align 4
  store i32 %v5_e98c, i32* %r1.global-to-local, align 4
  %v6_e98c = add i32 %v0_e984, -37280
  %v7_e98c = inttoptr i32 %v6_e98c to i32*
  %v8_e98c = load i32, i32* %v7_e98c, align 4
  store i32 %v8_e98c, i32* %r2.global-to-local, align 4
  %v9_e98c = add i32 %v0_e984, -37276
  %v10_e98c = inttoptr i32 %v9_e98c to i32*
  %v11_e98c = load i32, i32* %v10_e98c, align 4
  store i32 %v11_e98c, i32* %r3.global-to-local, align 4
  %v12_e98c = add i32 %v0_e984, -37272
  %v1_e998 = inttoptr i32 %v12_e98c to i32*
  %v2_e998 = load i32, i32* %v1_e998, align 4
  %v3_e998 = add i32 %v0_e984, -37268
  %v4_e998 = inttoptr i32 %v3_e998 to i32*
  %v5_e998 = load i32, i32* %v4_e998, align 4
  store i32 %v2_e998, i32* %stack_var_-32, align 4
  store i32 %v5_e98c, i32* %r1.global-to-local, align 4
  store i32 %v8_e98c, i32* %r2.global-to-local, align 4
  store i32 %v11_e98c, i32* %r3.global-to-local, align 4
  %v0_e9a8 = load i32, i32* @r5, align 4
  %v1_e9a8 = add i32 %v0_e9a8, 24
  %v1_e9ac = inttoptr i32 %v1_e9a8 to i32*
  store i32 %v2_e98c, i32* %v1_e9ac, align 4
  %v3_e9ac = add i32 %v0_e9a8, 28
  %v4_e9ac = inttoptr i32 %v3_e9ac to i32*
  %v5_e9ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_e9ac, i32* %v4_e9ac, align 4
  %v6_e9ac = add i32 %v0_e9a8, 32
  %v7_e9ac = inttoptr i32 %v6_e9ac to i32*
  %v8_e9ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_e9ac, i32* %v7_e9ac, align 4
  %v9_e9ac = add i32 %v0_e9a8, 36
  %v10_e9ac = inttoptr i32 %v9_e9ac to i32*
  %v11_e9ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_e9ac, i32* %v10_e9ac, align 4
  %v12_e9ac = add i32 %v0_e9a8, 40
  %v2_e9b0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_e998, i32* %r1.global-to-local, align 4
  %v1_e9b4 = inttoptr i32 %v12_e9ac to i32*
  store i32 %v2_e9b0, i32* %v1_e9b4, align 4
  %v3_e9b4 = add i32 %v0_e9a8, 44
  %v4_e9b4 = inttoptr i32 %v3_e9b4 to i32*
  %v5_e9b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_e9b4, i32* %v4_e9b4, align 4
  %v0_e9b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e9b8

dec_label_pc_e9b8:                                ; preds = %bb, %dec_label_pc_e970, %dec_label_pc_e980
  %v0_e9b8 = phi i32 [ 0, %bb ], [ %v0_e978, %dec_label_pc_e970 ], [ %v0_e9b8.pre, %dec_label_pc_e980 ]
  store i32 %v12_e900, i32* @r7, align 4
  ret i32 %v0_e9b8

; uselistorder directives
  uselistorder i32 %v2_e95c, { 1, 0, 2 }
  uselistorder i32 %v1_e914, { 2, 1, 6, 0, 4, 5, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_e9b8, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_e9d8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_ea08, label %dec_label_pc_e9f0

dec_label_pc_e9f0:                                ; preds = %entry
  %v0_e9f4 = call i32 @__aeabi_read_tp()
  %v3_e9f8 = load i16, i16* @global_var_22308.76, align 2
  %v4_e9f8 = sext i16 %v3_e9f8 to i32
  %v0_e9fc = load i32, i32* %r2.global-to-local, align 4
  %v1_e9fc = sub i32 0, %v0_e9fc
  store i32 %v1_e9fc, i32* %r2.global-to-local, align 4
  %v3_ea00 = add i32 %v4_e9f8, %v0_e9f4
  %v4_ea00 = inttoptr i32 %v3_ea00 to i32*
  store i32 %v1_e9fc, i32* %v4_ea00, align 4
  br label %dec_label_pc_ea2c

dec_label_pc_ea08:                                ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_ea08 = icmp slt i32 %arg1, 0
  br i1 %v1_ea08, label %dec_label_pc_ea2c, label %dec_label_pc_ea10

dec_label_pc_ea10:                                ; preds = %dec_label_pc_ea08
  store i32 %v2_e9d8, i32* @r1, align 4
  %v0_ea14 = call i32 @fstat()
  %v1_ea18 = icmp slt i32 %v0_ea14, 0
  br i1 %v1_ea18, label %dec_label_pc_ea20, label %dec_label_pc_ea34

dec_label_pc_ea20:                                ; preds = %dec_label_pc_ea10
  br label %dec_label_pc_ea2c

dec_label_pc_ea2c:                                ; preds = %dec_label_pc_ea20, %dec_label_pc_ea08, %dec_label_pc_e9f0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ea78

dec_label_pc_ea34:                                ; preds = %dec_label_pc_ea10
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_ea3c = load i32, i32* @r7, align 4
  %v3_ea40 = call i32 @__GI___fcntl_nocancel(i32 %v0_ea3c, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_ea48 = load i32, i32* @r7, align 4
  %v2_ea4c = call i32 @fd_to_DIR(i32 %v0_ea48, i32 %tmp)
  store i32 %v2_ea4c, i32* %r1.global-to-local, align 4
  %v2_ea50 = icmp eq i32 %v2_ea4c, 0
  br i1 %v2_ea50, label %dec_label_pc_ea58, label %dec_label_pc_ea78

dec_label_pc_ea58:                                ; preds = %dec_label_pc_ea34
  %v0_ea68 = call i32 @__aeabi_read_tp()
  %v3_ea6c = load i16, i16* @global_var_22308.76, align 2
  %v4_ea6c = sext i16 %v3_ea6c to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_ea74 = add i32 %v4_ea6c, %v0_ea68
  %v4_ea74 = inttoptr i32 %v3_ea74 to i32*
  store i32 12, i32* %v4_ea74, align 4
  %v0_ea78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ea78

dec_label_pc_ea78:                                ; preds = %dec_label_pc_ea34, %dec_label_pc_ea2c, %dec_label_pc_ea58
  %v0_ea78 = phi i32 [ %v2_ea4c, %dec_label_pc_ea34 ], [ 0, %dec_label_pc_ea2c ], [ %v0_ea78.pre, %dec_label_pc_ea58 ]
  ret i32 %v0_ea78

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_ea78, { 2, 0, 1 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea88:
  %v0_ea88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ea88, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_ea88
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_ea88, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_ea98 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_ea98, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_eaa4 = call i32 @fstat()
  store i32 %v0_eaa4, i32* @r5, align 4
  %v2_eaa8 = icmp eq i32 %v0_eaa4, 0
  br i1 %v2_eaa8, label %dec_label_pc_eab0, label %dec_label_pc_eb28

dec_label_pc_eab0:                                ; preds = %entry
  %v1_eab4 = and i32 %tmp4, 61440
  store i32 %v1_eab4, i32* @r3, align 4
  %v7_eab8 = icmp eq i32 %v1_eab4, 16384
  br i1 %v7_eab8, label %dec_label_pc_ead8, label %dec_label_pc_eac0

dec_label_pc_eac0:                                ; preds = %dec_label_pc_eab0
  %v0_eac4 = call i32 @__aeabi_read_tp()
  %v3_eac8 = load i16, i16* @global_var_22308.76, align 2
  %v0_eacc = load i32, i32* @r5, align 4
  store i32 %v0_eacc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb0c

dec_label_pc_ead8:                                ; preds = %dec_label_pc_eab0
  %v0_ead8 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_eae0 = call i32 @__libc_fcntl(i32 %v0_ead8, i32 3)
  %v7_eae4 = icmp eq i32 %v2_eae0, -1
  br i1 %v7_eae4, label %dec_label_pc_eb28, label %dec_label_pc_eaec

dec_label_pc_eaec:                                ; preds = %dec_label_pc_ead8
  %v1_eaec = urem i32 %v2_eae0, 4
  store i32 %v1_eaec, i32* %r3.global-to-local, align 4
  %v7_eaf0 = icmp eq i32 %v1_eaec, 1
  br i1 %v7_eaf0, label %dec_label_pc_eaf8, label %dec_label_pc_eb14

dec_label_pc_eaf8:                                ; preds = %dec_label_pc_eaec
  %v0_eafc = call i32 @__aeabi_read_tp()
  %v3_eb00 = load i16, i16* @global_var_22308.76, align 2
  %v0_eb04 = load i32, i32* @r5, align 4
  store i32 %v0_eb04, i32* %r1.global-to-local, align 4
  %v0_eb08 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb08 = add i32 %v0_eb08, 21
  br label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eac0, %dec_label_pc_eaf8
  %v2_eb0c.in = phi i16 [ %v3_eac8, %dec_label_pc_eac0 ], [ %v3_eb00, %dec_label_pc_eaf8 ]
  %v1_eb0c = phi i32 [ %v0_eac4, %dec_label_pc_eac0 ], [ %v0_eafc, %dec_label_pc_eaf8 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_eac0 ], [ %v1_eb08, %dec_label_pc_eaf8 ]
  %v2_eb0c = sext i16 %v2_eb0c.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_eb0c = add i32 %v1_eb0c, %v2_eb0c
  %v4_eb0c = inttoptr i32 %v3_eb0c to i32*
  store i32 %storemerge, i32* %v4_eb0c, align 4
  %v0_eb2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb2c

dec_label_pc_eb14:                                ; preds = %dec_label_pc_eaec
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_eb18 = load i32, i32* @r4, align 4
  %v2_eb1c = call i32 @fd_to_DIR(i32 %v0_eb18, i32 %tmp)
  store i32 %v2_eb1c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb2c

dec_label_pc_eb28:                                ; preds = %entry, %dec_label_pc_ead8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eb2c

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_eb14, %dec_label_pc_eb0c, %dec_label_pc_eb28
  %v0_eb2c = phi i32 [ %v2_eb1c, %dec_label_pc_eb14 ], [ %v0_eb2c.pre, %dec_label_pc_eb0c ], [ 0, %dec_label_pc_eb28 ]
  ret i32 %v0_eb2c

; uselistorder directives
  uselistorder i32 %v1_eaec, { 1, 0 }
  uselistorder i32 %v2_eae0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_eb2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eb28, { 1, 0 }
  uselistorder label %dec_label_pc_eb0c, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  %v1_eb58 = add i32 %tmp, 24
  store i32 %v1_eb58, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_eb70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  store i32 %v4_eb70, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_eb70)
  %v0_eb84 = load i32, i32* @r6, align 4
  %v2_eb84 = add i32 %v0_eb84, 16
  %v3_eb84 = inttoptr i32 %v2_eb84 to i32*
  %v4_eb84 = load i32, i32* %v3_eb84, align 4
  store i32 %v4_eb84, i32* %ip.global-to-local, align 4
  store i32 60304, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_eb84)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_eb94

dec_label_pc_eb94:                                ; preds = %dec_label_pc_ebc4, %entry
  %v0_eb94 = load i32, i32* @r5, align 4
  %v1_eb94 = add i32 %v0_eb94, 4
  %v2_eb94 = inttoptr i32 %v1_eb94 to i32*
  %v3_eb94 = load i32, i32* %v2_eb94, align 4
  %v4_eb94 = add i32 %v0_eb94, 8
  %v5_eb94 = inttoptr i32 %v4_eb94 to i32*
  %v6_eb94 = load i32, i32* %v5_eb94, align 4
  %tmp10 = icmp ugt i32 %v6_eb94, %v3_eb94
  br i1 %tmp10, label %dec_label_pc_ebc4, label %dec_label_pc_eba0

dec_label_pc_eba0:                                ; preds = %dec_label_pc_eb94
  %v1_eba0 = inttoptr i32 %v0_eb94 to i32*
  %v2_eba0 = load i32, i32* %v1_eba0, align 4
  %v1_eba4 = add i32 %v0_eb94, 12
  %v2_eba4 = inttoptr i32 %v1_eba4 to i32*
  %v3_eba4 = load i32, i32* %v2_eba4, align 4
  %v1_eba8 = add i32 %v0_eb94, 20
  %v2_eba8 = inttoptr i32 %v1_eba8 to i32*
  %v3_eba8 = load i32, i32* %v2_eba8, align 4
  %v4_ebac = inttoptr i32 %v3_eba4 to i32*
  %v5_ebac = call i32 @__getdents64(i32 %v2_eba0, i32* %v4_ebac, i32 %v3_eba8, i32 %v6_eb94)
  %tmp9 = icmp slt i32 %v5_ebac, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_ebbc

.thread:                                          ; preds = %dec_label_pc_eba0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_ebf4

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_eba0
  %v1_ebbc = load i32, i32* @r5, align 4
  %v2_ebbc = add i32 %v1_ebbc, 8
  %v3_ebbc = inttoptr i32 %v2_ebbc to i32*
  store i32 %v5_ebac, i32* %v3_ebbc, align 4
  %v0_ebc0 = load i32, i32* @r7, align 4
  %v1_ebc0 = load i32, i32* @r5, align 4
  %v2_ebc0 = add i32 %v1_ebc0, 4
  %v3_ebc0 = inttoptr i32 %v2_ebc0 to i32*
  store i32 %v0_ebc0, i32* %v3_ebc0, align 4
  %v0_ebc4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ebc4

dec_label_pc_ebc4:                                ; preds = %dec_label_pc_eb94, %dec_label_pc_ebbc
  %v1_ebe8 = phi i32 [ %v0_eb94, %dec_label_pc_eb94 ], [ %v0_ebc4.pre, %dec_label_pc_ebbc ]
  %v1_ebc4 = add i32 %v1_ebe8, 4
  %v2_ebc4 = inttoptr i32 %v1_ebc4 to i32*
  %v3_ebc4 = load i32, i32* %v2_ebc4, align 4
  %v1_ebc8 = add i32 %v1_ebe8, 12
  %v2_ebc8 = inttoptr i32 %v1_ebc8 to i32*
  %v3_ebc8 = load i32, i32* %v2_ebc8, align 4
  %v2_ebcc = add i32 %v3_ebc8, %v3_ebc4
  store i32 %v2_ebcc, i32* @r4, align 4
  %v3_ebd0 = inttoptr i32 %v2_ebcc to i32*
  %v4_ebd0 = load i32, i32* %v3_ebd0, align 4
  %v1_ebd4 = add i32 %v2_ebcc, 4
  %v2_ebd4 = inttoptr i32 %v1_ebd4 to i32*
  %v3_ebd4 = load i32, i32* %v2_ebd4, align 4
  %v1_ebd8 = add i32 %v2_ebcc, 16
  %v2_ebd8 = inttoptr i32 %v1_ebd8 to i16*
  %v3_ebd8 = load i16, i16* %v2_ebd8, align 2
  %v4_ebd8 = zext i16 %v3_ebd8 to i32
  %v1_ebdc = add i32 %v2_ebcc, 8
  %v2_ebdc = inttoptr i32 %v1_ebdc to i32*
  %v3_ebdc = load i32, i32* %v2_ebdc, align 4
  store i32 %v3_ebdc, i32* %ip.global-to-local, align 4
  %v2_ebe0 = add i32 %v4_ebd8, %v3_ebc4
  %v2_ebe4 = or i32 %v3_ebd4, %v4_ebd0
  %v4_ebe4 = icmp eq i32 %v2_ebe4, 0
  store i32 %v2_ebe0, i32* %v2_ebc4, align 4
  %v0_ebec = load i32, i32* %ip.global-to-local, align 4
  %v1_ebec = load i32, i32* @r5, align 4
  %v2_ebec = add i32 %v1_ebec, 16
  %v3_ebec = inttoptr i32 %v2_ebec to i32*
  store i32 %v0_ebec, i32* %v3_ebec, align 4
  br i1 %v4_ebe4, label %dec_label_pc_eb94, label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebc4, %.thread
  %v0_ec00 = load i32, i32* @r6, align 4
  %v2_ec00 = add i32 %v0_ec00, 48
  %v3_ec00 = inttoptr i32 %v2_ec00 to i32*
  %v4_ec00 = load i32, i32* %v3_ec00, align 4
  store i32 %v4_ec00, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ec00)
  %v0_ec0c = load i32, i32* @r4, align 4
  ret i32 %v0_ec0c

; uselistorder directives
  uselistorder i32 %v2_ebcc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_ebe8, { 1, 0 }
  uselistorder i32 %v6_eb94, { 1, 0 }
  uselistorder i32 %v0_eb94, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_ebc4, { 1, 0 }
}

define i32 @function_ec20(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec20:
  %v0_ec20 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ec20, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_ec20
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ec20, %bb
  %v10_ec2c = phi i32 [ %arg1, %dec_label_pc_ec20 ], [ 0, %bb ]
  ret i32 %v10_ec2c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_ec30 = load i32, i32* @r4, align 4
  %v6_ec30 = load i32, i32* @r5, align 4
  %v9_ec30 = load i32, i32* @r6, align 4
  %v12_ec30 = load i32, i32* @r7, align 4
  %v15_ec30 = load i32, i32* @r8, align 4
  %v18_ec30 = load i32, i32* @sb, align 4
  %v21_ec30 = load i32, i32* @sl, align 4
  %v24_ec30 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_ec34 = icmp eq i32* %arg1, null
  store i1 %v2_ec34, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_ec34, label %dec_label_pc_ef44, label %dec_label_pc_ec4c

dec_label_pc_ec4c:                                ; preds = %entry
  %v1_ec4c = urem i32 %arg3, 256
  store i32 %v1_ec4c, i32* @sb, align 4
  %v1_ec50 = udiv i32 %arg3, 256
  %v3_ec54 = urem i32 %v1_ec50, 256
  %v3_ec58 = mul nuw nsw i32 %v1_ec4c, 4
  %v1_ec60 = or i32 %v3_ec58, 1
  %v1_ec6c = and i32 %arg3, 131072
  %v1_ec70 = add nsw i32 %v1_ec4c, -1
  %v1_ec7c = and i32 %arg3, 262144
  store i32 %v1_ec7c, i32* %r2.global-to-local, align 4
  %v1_ec80 = and i32 %arg3, 65536
  store i32 %v1_ec80, i32* %r3.global-to-local, align 4
  store i32 %v1_ec80, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_ec90 = add i32 %arg4, 1
  store i32 %v1_ec90, i32* @sl, align 4
  %v2_ee08 = icmp eq i32 %v1_ec6c, 0
  %v1_ee60 = inttoptr i32 %arg2 to i32*
  %v2_ee78 = icmp eq i32 %v1_ec7c, 0
  br label %dec_label_pc_ec94

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec94.backedge, %dec_label_pc_ec4c
  %v2_ecb0 = phi i32 [ %v0_ec94.pre, %dec_label_pc_ec94.backedge ], [ %tmp, %dec_label_pc_ec4c ]
  %v1_ec94 = add i32 %v2_ecb0, 4
  %v2_ec94 = inttoptr i32 %v1_ec94 to i32*
  %v3_ec94 = load i32, i32* %v2_ec94, align 4
  store i32 %v3_ec94, i32* %r3.global-to-local, align 4
  %v2_ec98 = icmp eq i32 %v3_ec94, 0
  store i1 %v2_ec98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec98, label %dec_label_pc_eca0, label %dec_label_pc_ece8

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec94
  %v1_eca0 = add i32 %v2_ecb0, 16
  %v2_eca0 = inttoptr i32 %v1_eca0 to i32*
  %v3_eca0 = load i32, i32* %v2_eca0, align 4
  store i32 %v3_eca0, i32* %r3.global-to-local, align 4
  %v2_eca4 = icmp eq i32 %v3_eca0, 0
  store i1 %v2_eca4, i1* %cpsr_z.global-to-local, align 1
  %v1_eca8 = add i32 %v2_ecb0, 8
  %v2_eca8 = inttoptr i32 %v1_eca8 to i32*
  %v3_eca8 = load i32, i32* %v2_eca8, align 4
  store i32 %v3_eca8, i32* %r3.global-to-local, align 4
  br i1 %v2_eca4, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_eca0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_eca0, align 4
  %v0_ecb4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_eca0, %bb
  %v0_ecb4 = phi i32 [ %v0_ecb4.pre, %bb ], [ %v3_eca8, %dec_label_pc_eca0 ]
  %v2_ecb4 = icmp eq i32 %v0_ecb4, 0
  store i1 %v2_ecb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ecb4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_ec60, i32* %r3.global-to-local, align 4
  %v2_ecbc = load i32, i32* @r5, align 4
  %v3_ecbc = add i32 %v2_ecbc, 8
  %v4_ecbc = inttoptr i32 %v3_ecbc to i32*
  store i32 %v1_ec60, i32* %v4_ecbc, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_ecc0 = load i32, i32* @r5, align 4
  %v1_ecc0 = add i32 %v0_ecc0, 16
  %v2_ecc0 = inttoptr i32 %v1_ecc0 to i32*
  %v3_ecc0 = load i32, i32* %v2_ecc0, align 4
  store i32 %v3_ecc0, i32* %r0.global-to-local, align 4
  %v1_ecc4 = add i32 %v0_ecc0, 8
  %v2_ecc4 = inttoptr i32 %v1_ecc4 to i32*
  %v3_ecc4 = load i32, i32* %v2_ecc4, align 4
  store i32 %v3_ecc4, i32* %r3.global-to-local, align 4
  %v2_ecc8 = add i32 %v3_ecc4, %v3_ecc0
  store i32 %v2_ecc8, i32* %r0.global-to-local, align 4
  %v1_eccc = call i32 @malloc(i32 %v2_ecc8)
  store i32 %v1_eccc, i32* %r0.global-to-local, align 4
  %v2_ecd0 = icmp eq i32 %v1_eccc, 0
  store i1 %v2_ecd0, i1* %cpsr_z.global-to-local, align 1
  %v1_ecd4 = load i32, i32* @r5, align 4
  %v2_ecd4 = add i32 %v1_ecd4, 4
  %v3_ecd4 = inttoptr i32 %v2_ecd4 to i32*
  store i32 %v1_eccc, i32* %v3_ecd4, align 4
  br i1 %v2_ecd0, label %dec_label_pc_ef44, label %dec_label_pc_ecdc

dec_label_pc_ecdc:                                ; preds = %.thread
  %v0_ecdc = load i32, i32* @r5, align 4
  %v1_ecdc = add i32 %v0_ecdc, 20
  %v2_ecdc = inttoptr i32 %v1_ecdc to i32*
  %v3_ecdc = load i32, i32* %v2_ecdc, align 4
  %v1_ece0 = or i32 %v3_ecdc, 1
  store i32 %v1_ece0, i32* %r3.global-to-local, align 4
  store i32 %v1_ece0, i32* %v2_ecdc, align 4
  %v0_ece8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ec94, %dec_label_pc_ecdc
  %v1_ecf0 = phi i32 [ %v2_ecb0, %dec_label_pc_ec94 ], [ %v0_ece8.pre, %dec_label_pc_ecdc ]
  %v1_ece8 = add i32 %v1_ecf0, 4
  %v2_ece8 = inttoptr i32 %v1_ece8 to i32*
  %v3_ece8 = load i32, i32* %v2_ece8, align 4
  store i32 %v3_ece8, i32* %r2.global-to-local, align 4
  %v4_ece8 = add i32 %v1_ecf0, 8
  %v5_ece8 = inttoptr i32 %v4_ece8 to i32*
  %v6_ece8 = load i32, i32* %v5_ece8, align 4
  %v2_ecec = add i32 %v6_ece8, %v3_ece8
  store i32 %v2_ecec, i32* %r3.global-to-local, align 4
  %v2_ecf0 = add i32 %v1_ecf0, 12
  %v3_ecf0 = inttoptr i32 %v2_ecf0 to i32*
  store i32 %v2_ecec, i32* %v3_ecf0, align 4
  %v0_ecf4 = load i32, i32* @fp, align 4
  store i32 %v0_ecf4, i32* @r6, align 4
  br label %dec_label_pc_ecf8

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_ed84, %dec_label_pc_ed70, %dec_label_pc_ece8
  %v0_ed00 = phi i32 [ %v0_ecf4, %dec_label_pc_ece8 ], [ %v1_ed70, %dec_label_pc_ed70 ], [ %v0_ed00.pre.pre, %dec_label_pc_ed84 ]
  %v0_ecf8 = load i32, i32* @r5, align 4
  %v1_ecf8 = add i32 %v0_ecf8, 12
  store i32 %v1_ecf8, i32* %r0.global-to-local, align 4
  %v1_ecfc = inttoptr i32 %v1_ecf8 to i32*
  %v2_ecfc = load i32, i32* %v1_ecfc, align 4
  store i32 %v2_ecfc, i32* %r0.global-to-local, align 4
  %v3_ecfc = add i32 %v0_ecf8, 16
  %v4_ecfc = inttoptr i32 %v3_ecfc to i32*
  %v5_ecfc = load i32, i32* %v4_ecfc, align 4
  %v2_ed00 = add i32 %v2_ecfc, %v0_ed00
  store i32 %v2_ed00, i32* %r0.global-to-local, align 4
  %v2_ed04 = sub i32 %v5_ecfc, %v0_ed00
  %v1_ed08 = inttoptr i32 %v0_ecf8 to i32*
  %v2_ed08 = load i32, i32* %v1_ed08, align 4
  store i32 %v2_ed08, i32* %r2.global-to-local, align 4
  %v3_ed0c = call i32 @fgets(i32 %v2_ed00, i32 %v2_ed04, i32 %v2_ed08)
  store i32 %v3_ed0c, i32* %r0.global-to-local, align 4
  store i32 %v3_ed0c, i32* %r4.global-to-local, align 4
  %v2_ed10 = icmp eq i32 %v3_ed0c, 0
  store i1 %v2_ed10, i1* %cpsr_z.global-to-local, align 1
  %v0_ed18 = load i32, i32* @r5, align 4
  %v1_ed18 = add i32 %v0_ed18, 12
  br i1 %v2_ed10, label %dec_label_pc_ed18, label %dec_label_pc_ed30

dec_label_pc_ed18:                                ; preds = %dec_label_pc_ecf8
  store i32 %v1_ed18, i32* %r0.global-to-local, align 4
  %v1_ed1c = inttoptr i32 %v1_ed18 to i32*
  %v2_ed1c = load i32, i32* %v1_ed1c, align 4
  store i32 %v2_ed1c, i32* %r0.global-to-local, align 4
  %v3_ed1c = add i32 %v0_ed18, 16
  %v4_ed1c = inttoptr i32 %v3_ed1c to i32*
  %v5_ed1c = load i32, i32* %v4_ed1c, align 4
  store i32 %v5_ed1c, i32* %r2.global-to-local, align 4
  %v3_ed24 = inttoptr i32 %v2_ed1c to i8*
  %v4_ed24 = call i32 @__GI_memset(i8* %v3_ed24, i32 0, i32 %v5_ed1c)
  store i32 %v4_ed24, i32* %r0.global-to-local, align 4
  %v0_ed28 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ef48

dec_label_pc_ed30:                                ; preds = %dec_label_pc_ecf8
  %v2_ed30 = inttoptr i32 %v1_ed18 to i32*
  %v3_ed30 = load i32, i32* %v2_ed30, align 4
  store i32 %v3_ed30, i32* @r4, align 4
  %v1_ed34 = load i32, i32* @r6, align 4
  %v2_ed34 = add i32 %v1_ed34, %v3_ed30
  %v3_ed34 = inttoptr i32 %v2_ed34 to i8*
  store i32 %v2_ed34, i32* %r0.global-to-local, align 4
  %v3_ed38 = call i32 @strlen(i8* %v3_ed34)
  %v0_ed40 = load i32, i32* @r6, align 4
  %v2_ed40 = add i32 %v0_ed40, %v3_ed38
  store i32 %v2_ed40, i32* @r6, align 4
  %v0_ed44 = load i32, i32* @r4, align 4
  store i32 %v0_ed44, i32* @r0, align 4
  %v2_ed48 = call i32 @__GI_strchr(i32 %v0_ed44, i32 10)
  store i32 %v2_ed48, i32* %r0.global-to-local, align 4
  %v2_ed4c = icmp eq i32 %v2_ed48, 0
  store i1 %v2_ed4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed4c, label %dec_label_pc_ed78, label %dec_label_pc_ed54

dec_label_pc_ed54:                                ; preds = %dec_label_pc_ed30
  %v1_ed54 = inttoptr i32 %v2_ed48 to i8*
  %v2_ed54 = load i8, i8* %v1_ed54, align 1
  %v3_ed54 = zext i8 %v2_ed54 to i32
  %v1_ed58 = add nuw nsw i32 %v3_ed54, 255
  %v1_ed5c = urem i32 %v1_ed58, 256
  store i32 %v1_ed5c, i32* %r3.global-to-local, align 4
  %v7_ed60 = icmp eq i32 %v1_ed5c, 92
  store i1 %v7_ed60, i1* %cpsr_z.global-to-local, align 1
  %v1_ed64 = trunc i32 %v1_ed58 to i8
  store i8 %v1_ed64, i8* %v1_ed54, align 1
  %v0_ed68 = load i32, i32* @r6, align 4
  %v1_ed68 = add i32 %v0_ed68, -1
  store i32 %v1_ed68, i32* @r6, align 4
  %v0_ed6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ed6c, label %dec_label_pc_ed70, label %dec_label_pc_edfc

dec_label_pc_ed70:                                ; preds = %dec_label_pc_ed54
  %v1_ed70 = add i32 %v0_ed68, -2
  store i32 %v1_ed70, i32* @r6, align 4
  br label %dec_label_pc_ecf8

dec_label_pc_ed78:                                ; preds = %dec_label_pc_ed30
  %v0_ed78 = load i32, i32* @r5, align 4
  %v1_ed78 = add i32 %v0_ed78, 20
  %v2_ed78 = inttoptr i32 %v1_ed78 to i32*
  %v3_ed78 = load i32, i32* %v2_ed78, align 4
  store i32 %v3_ed78, i32* %r3.global-to-local, align 4
  %v2_ed7c = icmp eq i32 %v3_ed78, 0
  store i1 %v2_ed7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed7c, label %dec_label_pc_edb4, label %dec_label_pc_ed84

dec_label_pc_ed84:                                ; preds = %dec_label_pc_ed78
  %v1_ed84 = add i32 %v0_ed78, 16
  %v2_ed84 = inttoptr i32 %v1_ed84 to i32*
  %v3_ed84 = load i32, i32* %v2_ed84, align 4
  store i32 %v3_ed84, i32* %r3.global-to-local, align 4
  %v1_ed88 = add i32 %v0_ed78, 8
  %v2_ed88 = inttoptr i32 %v1_ed88 to i32*
  %v3_ed88 = load i32, i32* %v2_ed88, align 4
  %v1_ed8c = add i32 %v3_ed84, 4096
  store i32 %v1_ed8c, i32* %r3.global-to-local, align 4
  %v2_ed90 = add i32 %v3_ed88, %v1_ed8c
  store i32 %v1_ed8c, i32* %v2_ed84, align 4
  %v0_ed98 = load i32, i32* @r5, align 4
  %v1_ed98 = add i32 %v0_ed98, 4
  %v2_ed98 = inttoptr i32 %v1_ed98 to i32*
  %v3_ed98 = load i32, i32* %v2_ed98, align 4
  store i32 %v3_ed98, i32* %r0.global-to-local, align 4
  %v2_ed9c = inttoptr i32 %v3_ed98 to i32*
  %v3_ed9c = call i32 @realloc(i32* %v2_ed9c, i32 %v2_ed90)
  store i32 %v3_ed9c, i32* %r0.global-to-local, align 4
  %v0_eda0 = load i32, i32* @r5, align 4
  %v1_eda0 = add i32 %v0_eda0, 8
  %v2_eda0 = inttoptr i32 %v1_eda0 to i32*
  %v3_eda0 = load i32, i32* %v2_eda0, align 4
  %v2_eda4 = add i32 %v3_eda0, %v3_ed9c
  store i32 %v2_eda4, i32* %r3.global-to-local, align 4
  %v2_eda8 = add i32 %v0_eda0, 12
  %v3_eda8 = inttoptr i32 %v2_eda8 to i32*
  store i32 %v2_eda4, i32* %v3_eda8, align 4
  %v1_edac = load i32, i32* @r5, align 4
  %v2_edac = add i32 %v1_edac, 4
  %v3_edac = inttoptr i32 %v2_edac to i32*
  store i32 %v3_ed9c, i32* %v3_edac, align 4
  %v0_ed00.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ecf8

dec_label_pc_edb4:                                ; preds = %dec_label_pc_ed78, %.dec_label_pc_edb4_crit_edge
  %v0_edb4 = phi i32 [ %v0_edb4.pre, %.dec_label_pc_edb4_crit_edge ], [ %v0_ed78, %dec_label_pc_ed78 ]
  %v1_edb4 = inttoptr i32 %v0_edb4 to i32*
  %v2_edb4 = load i32, i32* %v1_edb4, align 4
  store i32 %v2_edb4, i32* @r1, align 4
  %v1_edb8 = add i32 %v2_edb4, 52
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  store i32 %v3_edb8, i32* %r3.global-to-local, align 4
  %v2_edbc = icmp eq i32 %v3_edb8, 0
  store i1 %v2_edbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edbc, label %dec_label_pc_ede8, label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_edb4
  %v1_edc4 = add i32 %v2_edb4, 16
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  %v3_edc4 = load i32, i32* %v2_edc4, align 4
  store i32 %v3_edc4, i32* %r2.global-to-local, align 4
  %v1_edc8 = add i32 %v2_edb4, 24
  %v2_edc8 = inttoptr i32 %v1_edc8 to i32*
  %v3_edc8 = load i32, i32* %v2_edc8, align 4
  store i32 %v3_edc8, i32* %r3.global-to-local, align 4
  %v3_edcc = icmp ult i32 %v3_edc4, %v3_edc8
  %v9_edcc = icmp eq i32 %v3_edc4, %v3_edc8
  store i1 %v9_edcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_edcc, label %dec_label_pc_edf0thread-pre-split, label %dec_label_pc_eddc

dec_label_pc_eddc:                                ; preds = %dec_label_pc_edc4
  store i32 %v2_edb4, i32* %r0.global-to-local, align 4
  %v1_ede0 = inttoptr i32 %v2_edb4 to i16*
  %v2_ede0 = call i32 @getc_unlocked(i16* %v1_ede0)
  store i32 %v2_ede0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_edf0

dec_label_pc_ede8:                                ; preds = %dec_label_pc_edb4
  store i32 %v2_edb4, i32* %r0.global-to-local, align 4
  %v1_edec = call i32 @__GI_fgetc(i32 %v2_edb4)
  store i32 %v1_edec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_edf0

dec_label_pc_edf0thread-pre-split:                ; preds = %dec_label_pc_edc4
  %v2_edd0 = inttoptr i32 %v3_edc4 to i8*
  %v3_edd0 = load i8, i8* %v2_edd0, align 1
  %v4_edd0 = zext i8 %v3_edd0 to i32
  store i32 %v4_edd0, i32* %r0.global-to-local, align 4
  %v6_edd0 = add i32 %v3_edc4, 1
  store i32 %v6_edd0, i32* %r2.global-to-local, align 4
  store i32 %v6_edd0, i32* %v2_edc4, align 4
  %v0_edf0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_edf0

dec_label_pc_edf0:                                ; preds = %dec_label_pc_edf0thread-pre-split, %dec_label_pc_eddc, %dec_label_pc_ede8
  %v1_edf4 = phi i32 [ %v0_edf0.pr, %dec_label_pc_edf0thread-pre-split ], [ %v2_ede0, %dec_label_pc_eddc ], [ %v1_edec, %dec_label_pc_ede8 ]
  %v7_edf0 = icmp eq i32 %v1_edf4, 10
  store i1 %v7_edf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_edf0, label %dec_label_pc_edfc.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_edf0
  %v8_edf4 = icmp eq i32 %v1_edf4, -1
  store i1 %v8_edf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_edf4, label %dec_label_pc_edfc.loopexit, label %.dec_label_pc_edb4_crit_edge

.dec_label_pc_edb4_crit_edge:                     ; preds = %bb66
  %v0_edb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_edb4

dec_label_pc_edfc.loopexit:                       ; preds = %bb66, %dec_label_pc_edf0
  %v0_edfc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_edfc

dec_label_pc_edfc:                                ; preds = %dec_label_pc_ed54, %dec_label_pc_edfc.loopexit
  %v0_edfc = phi i32 [ %v0_edfc.pre, %dec_label_pc_edfc.loopexit ], [ %v1_ed68, %dec_label_pc_ed54 ]
  %v7_edfc = icmp eq i32 %v0_edfc, -1
  store i1 %v7_edfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_edfc, label %dec_label_pc_ef44, label %dec_label_pc_ee04

dec_label_pc_ee04:                                ; preds = %dec_label_pc_edfc
  store i32 %v1_ec6c, i32* %r3.global-to-local, align 4
  store i1 %v2_ee08, i1* %cpsr_z.global-to-local, align 1
  %v0_ee0c = load i32, i32* @r5, align 4
  %v1_ee0c = add i32 %v0_ee0c, 12
  %v2_ee0c = inttoptr i32 %v1_ee0c to i32*
  %v3_ee0c = load i32, i32* %v2_ee0c, align 4
  store i32 %v3_ee0c, i32* @r4, align 4
  br i1 %v2_ee08, label %dec_label_pc_ee24, label %dec_label_pc_ee14

dec_label_pc_ee14:                                ; preds = %dec_label_pc_ee04
  store i32 %v3_ee0c, i32* @r0, align 4
  %v1_ee1c = inttoptr i32 %v3_ee0c to i8*
  %v2_ee1c = call i32 @__GI_strspn(i8* %v1_ee1c)
  store i32 %v2_ee1c, i32* %r0.global-to-local, align 4
  %v0_ee20 = load i32, i32* @r4, align 4
  %v2_ee20 = add i32 %v0_ee20, %v2_ee1c
  store i32 %v2_ee20, i32* @r4, align 4
  br label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %dec_label_pc_ee04, %dec_label_pc_ee14
  %v0_ee24 = phi i32 [ %v3_ee0c, %dec_label_pc_ee04 ], [ %v2_ee20, %dec_label_pc_ee14 ]
  %v1_ee24 = inttoptr i32 %v0_ee24 to i8*
  %v2_ee24 = load i8, i8* %v1_ee24, align 1
  %v3_ee24 = zext i8 %v2_ee24 to i32
  store i32 %v3_ee24, i32* %r2.global-to-local, align 4
  %v2_ee28 = icmp eq i8 %v2_ee24, 0
  store i1 %v2_ee28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee28, label %dec_label_pc_ec94.backedge, label %dec_label_pc_ee30

dec_label_pc_ec94.backedge:                       ; preds = %dec_label_pc_ee24, %dec_label_pc_ee30, %dec_label_pc_ef3c
  %v0_ec94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ec94

dec_label_pc_ee30:                                ; preds = %dec_label_pc_ee24
  %v0_ee30 = load i32, i32* @r7, align 4
  %v1_ee30 = inttoptr i32 %v0_ee30 to i8*
  %v2_ee30 = load i8, i8* %v1_ee30, align 1
  %v3_ee30 = zext i8 %v2_ee30 to i32
  store i32 %v3_ee30, i32* %r3.global-to-local, align 4
  %v9_ee34 = icmp eq i8 %v2_ee30, %v2_ee24
  store i1 %v9_ee34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ee34, label %dec_label_pc_ec94.backedge, label %dec_label_pc_ee3c

dec_label_pc_ee3c:                                ; preds = %dec_label_pc_ee30
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_ee40 = load i32, i32* @r5, align 4
  %v1_ee40 = add i32 %v0_ee40, 4
  %v2_ee40 = inttoptr i32 %v1_ee40 to i32*
  %v3_ee40 = load i32, i32* %v2_ee40, align 4
  store i32 %v3_ee40, i32* %r0.global-to-local, align 4
  %v0_ee44 = load i32, i32* @fp, align 4
  store i32 %v3_ee40, i32* %v1_ee60, align 4
  store i32 %v3_ec58, i32* %r2.global-to-local, align 4
  %v3_ee50 = inttoptr i32 %v3_ee40 to i8*
  %v4_ee50 = call i32 @__GI_memset(i8* %v3_ee50, i32 %v0_ee44, i32 %v3_ec58)
  store i32 %v4_ee50, i32* %r0.global-to-local, align 4
  %v0_ee54 = load i32, i32* @fp, align 4
  store i32 %v0_ee54, i32* @r6, align 4
  %v0_ef1412 = load i32, i32* @r4, align 4
  %v1_ef1413 = inttoptr i32 %v0_ef1412 to i8*
  %v2_ef1414 = load i8, i8* %v1_ef1413, align 1
  %v3_ef1415 = zext i8 %v2_ef1414 to i32
  store i32 %v3_ef1415, i32* %r2.global-to-local, align 4
  %v2_ef1816 = icmp eq i8 %v2_ef1414, 0
  store i1 %v2_ef1816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef1816, label %dec_label_pc_ef30, label %dec_label_pc_ef20

dec_label_pc_ee5c:                                ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_ee60 = load i32, i32* %v1_ee60, align 4
  store i32 %v2_ee60, i32* %r3.global-to-local, align 4
  store i32 %v1_ec70, i32* %r2.global-to-local, align 4
  %v9_ee68 = icmp eq i32 %v2_ee6c, %v1_ec70
  store i1 %v9_ee68, i1* %cpsr_z.global-to-local, align 1
  %v5_ee6c = mul i32 %v2_ee6c, 4
  %v6_ee6c = add i32 %v2_ee60, %v5_ee6c
  %v7_ee6c = inttoptr i32 %v6_ee6c to i32*
  store i32 %v0_ee6c, i32* %v7_ee6c, align 4
  br i1 %v9_ee68, label %dec_label_pc_ee74, label %dec_label_pc_ee80

dec_label_pc_ee74:                                ; preds = %dec_label_pc_ee5c
  store i32 %v1_ec7c, i32* %r3.global-to-local, align 4
  store i1 %v2_ee78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee78, label %dec_label_pc_ee80, label %dec_label_pc_eea0

dec_label_pc_ee80:                                ; preds = %dec_label_pc_ee74, %dec_label_pc_ee5c
  %v0_ee80 = load i32, i32* @r7, align 4
  %v1_ee80 = inttoptr i32 %v0_ee80 to i8*
  %v2_ee80 = load i8, i8* %v1_ee80, align 1
  %v3_ee80 = zext i8 %v2_ee80 to i32
  store i32 %v3_ee80, i32* %r3.global-to-local, align 4
  %v2_ee84 = icmp eq i8 %v2_ee80, 0
  store i1 %v2_ee84, i1* %cpsr_z.global-to-local, align 1
  %v0_ee88 = load i32, i32* @r4, align 4
  store i32 %v0_ee88, i32* @r0, align 4
  %v1_ee8c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_ee84, i32 %v1_ee8c, i32 %v0_ee80
  store i32 %storemerge, i32* @r1, align 4
  %v0_ee94 = call i32 @strcspn()
  store i32 %v0_ee94, i32* %r0.global-to-local, align 4
  %v0_ee98 = load i32, i32* @r4, align 4
  %v2_ee98 = add i32 %v0_ee98, %v0_ee94
  store i32 %v2_ee98, i32* @r4, align 4
  br label %dec_label_pc_eed8

dec_label_pc_eea0:                                ; preds = %dec_label_pc_ee74
  %v0_eea0 = load i32, i32* @r4, align 4
  store i32 %v0_eea0, i32* @r0, align 4
  %v0_eea4 = load i32, i32* @r7, align 4
  %v1_eea4 = inttoptr i32 %v0_eea4 to i8*
  %v2_eea4 = load i8, i8* %v1_eea4, align 1
  %v3_eea4 = zext i8 %v2_eea4 to i32
  %v5_eea8 = call i32 @__GI_strchrnul(i32 %v0_eea0, i32 %v3_eea4, i32 %v1_ec70, i32 %v1_ec7c)
  store i32 %v5_eea8, i32* %r0.global-to-local, align 4
  store i32 %v1_ec6c, i32* %r2.global-to-local, align 4
  store i1 %v2_ee08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_eea8, i32* @r4, align 4
  br i1 %v2_ee08, label %dec_label_pc_eed8, label %dec_label_pc_eec4

dec_label_pc_eec0:                                ; preds = %dec_label_pc_eec4
  %v1_eec0 = add i32 %v0_eed8.pre, -1
  store i32 %v1_eec0, i32* @r4, align 4
  br label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_eea0, %dec_label_pc_eec0
  %v0_eec4 = phi i32 [ %v1_eec0, %dec_label_pc_eec0 ], [ %v5_eea8, %dec_label_pc_eea0 ]
  %v1_eec4 = add i32 %v0_eec4, -1
  %v2_eec4 = inttoptr i32 %v1_eec4 to i8*
  %v3_eec4 = load i8, i8* %v2_eec4, align 1
  %v4_eec4 = zext i8 %v3_eec4 to i32
  %v0_eec8 = load i32, i32* @sl, align 4
  store i32 %v0_eec8, i32* @r0, align 4
  %v2_eecc = call i32 @__GI_strchr(i32 %v0_eec8, i32 %v4_eec4)
  store i32 %v2_eecc, i32* %r0.global-to-local, align 4
  %v2_eed0 = icmp eq i32 %v2_eecc, 0
  store i1 %v2_eed0, i1* %cpsr_z.global-to-local, align 1
  %v0_eed8.pre = load i32, i32* @r4, align 4
  br i1 %v2_eed0, label %dec_label_pc_eed8, label %dec_label_pc_eec0

dec_label_pc_eed8:                                ; preds = %dec_label_pc_eec4, %dec_label_pc_eea0, %dec_label_pc_ee80
  %v3_eee4 = phi i32 [ %v5_eea8, %dec_label_pc_eea0 ], [ %v2_ee98, %dec_label_pc_ee80 ], [ %v0_eed8.pre, %dec_label_pc_eec4 ]
  %v1_eed8 = inttoptr i32 %v3_eee4 to i8*
  %v2_eed8 = load i8, i8* %v1_eed8, align 1
  %v3_eed8 = zext i8 %v2_eed8 to i32
  store i32 %v3_eed8, i32* %r2.global-to-local, align 4
  %v0_eedc = load i32, i32* @r7, align 4
  %v1_eedc = inttoptr i32 %v0_eedc to i8*
  %v2_eedc = load i8, i8* %v1_eedc, align 1
  %v3_eedc = zext i8 %v2_eedc to i32
  store i32 %v3_eedc, i32* %r3.global-to-local, align 4
  %v9_eee0 = icmp eq i8 %v2_eedc, %v2_eed8
  store i1 %v9_eee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_eee0, label %bb69, label %dec_label_pc_eeec

bb69:                                             ; preds = %dec_label_pc_eed8
  %v1_eee4 = load i32, i32* @fp, align 4
  %v2_eee4 = trunc i32 %v1_eee4 to i8
  store i8 %v2_eee4, i8* %v1_eed8, align 1
  %v0_eee8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_eee8.pr, label %bb71, label %.dec_label_pc_eeec_crit_edge

.dec_label_pc_eeec_crit_edge:                     ; preds = %bb69
  %v0_eeec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_eeec

dec_label_pc_eeec:                                ; preds = %.dec_label_pc_eeec_crit_edge, %dec_label_pc_eed8
  %v0_eeec = phi i32 [ %v0_eeec.pre, %.dec_label_pc_eeec_crit_edge ], [ %v3_eed8, %dec_label_pc_eed8 ]
  %v2_eeec = icmp eq i32 %v0_eeec, 0
  store i1 %v2_eeec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eeec, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_eeec
  %v1_eef0 = load i32, i32* @fp, align 4
  %v2_eef0 = trunc i32 %v1_eef0 to i8
  %v3_eef0 = load i32, i32* @r4, align 4
  %v4_eef0 = inttoptr i32 %v3_eef0 to i8*
  store i8 %v2_eef0, i8* %v4_eef0, align 1
  %v5_eef0 = load i32, i32* @r4, align 4
  %v6_eef0 = add i32 %v5_eef0, 1
  store i32 %v6_eef0, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_eeec, %bb70
  %v2_eef4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_eef4, i32* %r3.global-to-local, align 4
  %v2_eef8 = icmp eq i32 %v2_eef4, 0
  store i1 %v2_eef8, i1* %cpsr_z.global-to-local, align 1
  %v0_ef14.pre = load i32, i32* @r4, align 4
  br i1 %v2_eef8, label %dec_label_pc_ef10, label %dec_label_pc_ef00

dec_label_pc_ef00:                                ; preds = %bb71
  store i32 %v0_ef14.pre, i32* @r0, align 4
  %v1_ef08 = inttoptr i32 %v0_ef14.pre to i8*
  %v2_ef08 = call i32 @__GI_strspn(i8* %v1_ef08)
  store i32 %v2_ef08, i32* %r0.global-to-local, align 4
  %v0_ef0c = load i32, i32* @r4, align 4
  %v2_ef0c = add i32 %v0_ef0c, %v2_ef08
  store i32 %v2_ef0c, i32* @r4, align 4
  br label %dec_label_pc_ef10

dec_label_pc_ef10:                                ; preds = %bb71, %dec_label_pc_ef00
  %v0_ef14 = phi i32 [ %v2_ef0c, %dec_label_pc_ef00 ], [ %v0_ef14.pre, %bb71 ]
  %v0_ef10 = load i32, i32* @r6, align 4
  %v1_ef10 = add i32 %v0_ef10, 1
  store i32 %v1_ef10, i32* @r6, align 4
  %v1_ef14 = inttoptr i32 %v0_ef14 to i8*
  %v2_ef14 = load i8, i8* %v1_ef14, align 1
  %v3_ef14 = zext i8 %v2_ef14 to i32
  store i32 %v3_ef14, i32* %r2.global-to-local, align 4
  %v2_ef18 = icmp eq i8 %v2_ef14, 0
  store i1 %v2_ef18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef18, label %dec_label_pc_ef30, label %dec_label_pc_ef20

dec_label_pc_ef20:                                ; preds = %dec_label_pc_ee3c, %dec_label_pc_ef10
  %v0_ee6c = phi i32 [ %v0_ef14, %dec_label_pc_ef10 ], [ %v0_ef1412, %dec_label_pc_ee3c ]
  %v2_ee6c = phi i32 [ %v1_ef10, %dec_label_pc_ef10 ], [ %v0_ee54, %dec_label_pc_ee3c ]
  %v1_ef24 = phi i32 [ %v3_ef14, %dec_label_pc_ef10 ], [ %v3_ef1415, %dec_label_pc_ee3c ]
  %v0_ef20 = load i32, i32* @r7, align 4
  %v1_ef20 = inttoptr i32 %v0_ef20 to i8*
  %v2_ef20 = load i8, i8* %v1_ef20, align 1
  %v3_ef20 = zext i8 %v2_ef20 to i32
  store i32 %v3_ef20, i32* %r3.global-to-local, align 4
  %v9_ef24 = icmp eq i32 %v3_ef20, %v1_ef24
  store i1 %v9_ef24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ef24, label %dec_label_pc_ef30, label %bb72

bb72:                                             ; preds = %dec_label_pc_ef20
  %v2_ef28 = load i32, i32* @sb, align 4
  %v3_ef28 = sub i32 %v2_ee6c, %v2_ef28
  %v5_ef28 = xor i32 %v2_ef28, %v2_ee6c
  %v6_ef28 = xor i32 %v3_ef28, %v2_ee6c
  %v7_ef28 = and i32 %v6_ef28, %v5_ef28
  %v8_ef28 = icmp slt i32 %v7_ef28, 0
  %v9_ef28 = icmp slt i32 %v3_ef28, 0
  %v10_ef28 = icmp eq i32 %v2_ee6c, %v2_ef28
  store i1 %v10_ef28, i1* %cpsr_z.global-to-local, align 1
  %v2_ef2c = xor i1 %v9_ef28, %v8_ef28
  br i1 %v2_ef2c, label %dec_label_pc_ee5c, label %dec_label_pc_ef30

dec_label_pc_ef30:                                ; preds = %dec_label_pc_ef20, %dec_label_pc_ef10, %bb72, %dec_label_pc_ee3c
  %v0_ef34 = phi i32 [ %v0_ee54, %dec_label_pc_ee3c ], [ %v2_ee6c, %dec_label_pc_ef20 ], [ %v1_ef10, %dec_label_pc_ef10 ], [ %v2_ee6c, %bb72 ]
  store i32 %v3_ec54, i32* %r2.global-to-local, align 4
  %v9_ef34 = icmp eq i32 %v0_ef34, %v3_ec54
  store i1 %v9_ef34, i1* %cpsr_z.global-to-local, align 1
  %v6_ef38 = icmp slt i32 %v0_ef34, %v3_ec54
  br i1 %v6_ef38, label %dec_label_pc_ef3c, label %dec_label_pc_ef48

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ef30
  %v0_ef3c = load i32, i32* @r8, align 4
  %v1_ef3c = and i32 %v0_ef3c, 1048576
  %v2_ef3c = icmp eq i32 %v1_ef3c, 0
  store i1 %v2_ef3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef3c, label %dec_label_pc_ec94.backedge, label %dec_label_pc_ef44

dec_label_pc_ef44:                                ; preds = %dec_label_pc_ef3c, %dec_label_pc_edfc, %.thread, %entry
  br label %dec_label_pc_ef48

dec_label_pc_ef48:                                ; preds = %dec_label_pc_ef30, %dec_label_pc_ed18, %dec_label_pc_ef44
  %v0_ef48 = phi i32 [ %v0_ed28, %dec_label_pc_ed18 ], [ 0, %dec_label_pc_ef44 ], [ %v0_ef34, %dec_label_pc_ef30 ]
  store i32 %v0_ef48, i32* %r0.global-to-local, align 4
  store i32 %v3_ec30, i32* @r4, align 4
  store i32 %v6_ec30, i32* @r5, align 4
  store i32 %v9_ec30, i32* @r6, align 4
  store i32 %v12_ec30, i32* @r7, align 4
  store i32 %v15_ec30, i32* @r8, align 4
  store i32 %v18_ec30, i32* @sb, align 4
  store i32 %v21_ec30, i32* @sl, align 4
  store i32 %v24_ec30, i32* @fp, align 4
  ret i32 %v0_ef48

; uselistorder directives
  uselistorder i32 %v0_ef48, { 1, 0 }
  uselistorder i32 %v0_ef34, { 0, 2, 1 }
  uselistorder i32 %v3_ef28, { 1, 0 }
  uselistorder i32 %v2_ef28, { 1, 0, 2 }
  uselistorder i32 %v2_ee6c, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_ef14.pre, { 0, 2, 1 }
  uselistorder i32 %v5_eea8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ee54, { 1, 0, 2 }
  uselistorder i1 %v9_ee34, { 1, 0 }
  uselistorder i32 %v3_ee0c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_edfc, { 1, 0 }
  uselistorder i1 %v8_edf4, { 1, 0 }
  uselistorder i32 %v3_edc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_edb4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v3_ed9c, { 1, 0, 2 }
  uselistorder i32 %v1_ed8c, { 1, 0, 2 }
  uselistorder i32 %v0_ed78, { 0, 2, 1, 3 }
  uselistorder i32 %v1_ed70, { 1, 0 }
  uselistorder i32 %v1_ed5c, { 1, 0 }
  uselistorder i32 %v1_ed58, { 1, 0 }
  uselistorder i32 %v2_ed34, { 1, 0 }
  uselistorder i32 %v1_ed18, { 2, 0, 1 }
  uselistorder i32 %v0_ed00, { 1, 0 }
  uselistorder i32 %v1_ecf0, { 0, 2, 1 }
  uselistorder i32* %v1_ee60, { 1, 0 }
  uselistorder i1 %v2_ee08, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ec7c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_ec70, { 2, 1, 0 }
  uselistorder i32 %v3_ec58, { 1, 2, 0 }
  uselistorder i32 %v3_ec54, { 2, 1, 0 }
  uselistorder i32 %v1_ec4c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 10, 11, 9, 8, 13, 12, 15, 14, 16, 17, 20, 18, 19, 24, 21, 22, 23, 27, 25, 26, 28 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ef48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef30, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ef20, { 1, 0 }
  uselistorder label %dec_label_pc_ef10, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_eec4, { 1, 0 }
  uselistorder label %dec_label_pc_ec94.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ee24, { 1, 0 }
  uselistorder label %dec_label_pc_edfc, { 1, 0 }
  uselistorder label %dec_label_pc_edf0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_edb4, { 1, 0 }
  uselistorder label %dec_label_pc_ece8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_ef5c = icmp eq i32* %arg1, null
  br i1 %v2_ef5c, label %dec_label_pc_ef84, label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %entry
  %v2_ef64 = load i32, i32* %arg1, align 4
  %v1_ef68 = inttoptr i32 %v2_ef64 to i16*
  %v2_ef68 = call i32 @__GI_fclose(i16* %v1_ef68)
  %v0_ef6c = load i32, i32* @r4, align 4
  %v1_ef6c = add i32 %v0_ef6c, 20
  %v2_ef6c = inttoptr i32 %v1_ef6c to i32*
  %v3_ef6c = load i32, i32* %v2_ef6c, align 4
  %v2_ef70 = icmp eq i32 %v3_ef6c, 0
  br i1 %v2_ef70, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_ef64
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_ef64, %bb
  store i32 61308, i32* @lr, align 4
  %v1_ef78 = xor i1 %v2_ef70, true
  call void @__pseudo_cond_branch(i1 %v1_ef78, i32 ptrtoint (i32* @global_var_c048.324 to i32))
  %v0_ef7c = load i32, i32* @r4, align 4
  store i32 %v0_ef7c, i32* @r0, align 4
  %v0_ef80 = call i32 @free()
  br label %dec_label_pc_ef84

dec_label_pc_ef84:                                ; preds = %entry, %bb6
  %v1_ef88 = phi i32 [ 0, %entry ], [ %v0_ef80, %bb6 ]
  ret i32 %v1_ef88

; uselistorder directives
  uselistorder label %dec_label_pc_ef84, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ef98 = load i32, i32* @r4, align 4
  store i32 %v3_ef98, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37204), i32* @r1, align 4
  %v0_efa0 = load i32, i32* @r0, align 4
  %v2_efa0 = load i32, i32* @r2, align 4
  %v4_efa0 = call i32 @__GI_fopen(i32 %v0_efa0, i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37204), i32 %v2_efa0, i32 ptrtoint (i32* @global_var_222a8.80 to i32))
  store i32 %v4_efa0, i32* %r0.global-to-local, align 4
  store i32 %v4_efa0, i32* @r4, align 4
  %v2_efa4 = icmp eq i32 %v4_efa0, 0
  br i1 %v2_efa4, label %bb, label %dec_label_pc_efb0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_efb0:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_efb8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_efb8, i32* %r0.global-to-local, align 4
  %v2_efbc = icmp eq i32 %v2_efb8, 0
  br i1 %v2_efbc, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_efb0
  %v1_efc0 = load i32, i32* @r4, align 4
  %v3_efc0 = inttoptr i32 %v2_efb8 to i32*
  store i32 %v1_efc0, i32* %v3_efc0, align 4
  %v1_efc8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_efb0, %bb4
  %v1_efc8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_efb0 ], [ %v1_efc8.pre, %bb4 ]
  %v2_efc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_efc4, i32* @r4, align 4
  ret i32 %v1_efc8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37204), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_efd4 = load i32, i32* @r4, align 4
  store i32 %v3_efd4, i32* %stack_var_-36, align 4
  %v6_efd4 = load i32, i32* @r5, align 4
  %v9_efd4 = load i32, i32* @r6, align 4
  %v12_efd4 = load i32, i32* @r7, align 4
  %v15_efd4 = load i32, i32* @r8, align 4
  %v18_efd4 = load i32, i32* @sb, align 4
  %v27_efd4 = load i32, i32* @lr, align 4
  %v2_efd8 = add i32 %tmp, 52
  %v3_efd8 = inttoptr i32 %v2_efd8 to i32*
  %v4_efd8 = load i32, i32* %v3_efd8, align 4
  store i32 %v4_efd8, i32* @sb, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efe0 = icmp eq i32 %v4_efd8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r8, align 4
  br i1 %v2_efe0, label %dec_label_pc_eff4, label %dec_label_pc_f058

dec_label_pc_eff4:                                ; preds = %entry
  %v0_eff4 = call i32 @__aeabi_read_tp()
  store i32 %v0_eff4, i32* %r0.global-to-local, align 4
  %v0_eff8 = load i32, i32* @r5, align 4
  %v1_eff8 = add i32 %v0_eff8, 64
  %v2_eff8 = inttoptr i32 %v1_eff8 to i32*
  %v3_eff8 = load i32, i32* %v2_eff8, align 4
  store i32 %v3_eff8, i32* %r3.global-to-local, align 4
  %v1_effc = add i32 %v0_eff4, -1168
  store i32 %v1_effc, i32* @r6, align 4
  %v3_f000 = icmp uge i32 %v3_eff8, %v1_effc
  store i1 %v3_f000, i1* %cpsr_c.global-to-local, align 1
  %v9_f000 = icmp eq i32 %v3_eff8, %v1_effc
  br i1 %v9_f000, label %dec_label_pc_f04c, label %dec_label_pc_f008

dec_label_pc_f008:                                ; preds = %dec_label_pc_eff4
  %v1_f008 = add i32 %v0_eff8, 56
  store i32 %v1_f008, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_f008, i32* %r2.global-to-local, align 4
  %v0_f014 = load i32, i32* @sb, align 4
  store i32 %v0_f014, i32* @r4, align 4
  %v1_f018115 = inttoptr i32 %v1_f008 to i32*
  %v2_f018116 = load i32, i32* %v1_f018115, align 4
  store i32 %v2_f018116, i32* %r3.global-to-local, align 4
  %v3_f01c118 = icmp uge i32 %v2_f018116, %v0_f014
  store i1 %v3_f01c118, i1* %cpsr_c.global-to-local, align 1
  %v9_f01c124 = icmp eq i32 %v2_f018116, %v0_f014
  br i1 %v9_f01c124, label %dec_label_pc_f024, label %dec_label_pc_f03c

dec_label_pc_f024:                                ; preds = %dec_label_pc_f008, %dec_label_pc_f024.dec_label_pc_f018_crit_edge
  %v0_f024125 = phi i32 [ %v1_f01c.pre, %dec_label_pc_f024.dec_label_pc_f018_crit_edge ], [ %v0_f014, %dec_label_pc_f008 ]
  store i32 %v0_f024125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f034 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f034, label %dec_label_pc_f038, label %dec_label_pc_f024.dec_label_pc_f018_crit_edge

dec_label_pc_f024.dec_label_pc_f018_crit_edge:    ; preds = %dec_label_pc_f024
  %v0_f018.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f01c.pre = load i32, i32* @r4, align 4
  %v1_f018 = inttoptr i32 %v0_f018.pre to i32*
  %v2_f018 = load i32, i32* %v1_f018, align 4
  store i32 %v2_f018, i32* %r3.global-to-local, align 4
  %v3_f01c = icmp uge i32 %v2_f018, %v1_f01c.pre
  store i1 %v3_f01c, i1* %cpsr_c.global-to-local, align 1
  %v9_f01c = icmp eq i32 %v2_f018, %v1_f01c.pre
  br i1 %v9_f01c, label %dec_label_pc_f024, label %dec_label_pc_f03c

dec_label_pc_f038:                                ; preds = %dec_label_pc_f024
  %v0_f038 = load i32, i32* @r4, align 4
  store i32 %v0_f038, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f03c

dec_label_pc_f03c:                                ; preds = %dec_label_pc_f008, %dec_label_pc_f024.dec_label_pc_f018_crit_edge, %dec_label_pc_f038
  %v0_f03c = phi i32 [ %v0_f038, %dec_label_pc_f038 ], [ %v2_f018116, %dec_label_pc_f008 ], [ %v2_f018, %dec_label_pc_f024.dec_label_pc_f018_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f03c = icmp eq i32 %v0_f03c, 0
  br i1 %v2_f03c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_f03c
  %v1_f040 = load i32, i32* @r7, align 4
  store i32 %v1_f040, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_f03c, %bb
  %v1_f044 = xor i1 %v2_f03c, true
  call void @__pseudo_cond_branch(i1 %v1_f044, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_f048 = load i32, i32* @r6, align 4
  %v1_f048 = load i32, i32* @r5, align 4
  %v2_f048 = add i32 %v1_f048, 64
  %v3_f048 = inttoptr i32 %v2_f048 to i32*
  store i32 %v0_f048, i32* %v3_f048, align 4
  %v0_f04c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f04c

dec_label_pc_f04c:                                ; preds = %dec_label_pc_eff4, %bb41
  %v0_f04c = phi i32 [ %v0_eff8, %dec_label_pc_eff4 ], [ %v0_f04c.pre, %bb41 ]
  %v1_f04c = add i32 %v0_f04c, 60
  %v2_f04c = inttoptr i32 %v1_f04c to i32*
  %v3_f04c = load i32, i32* %v2_f04c, align 4
  %v1_f050 = add i32 %v3_f04c, 1
  store i32 %v1_f050, i32* %r3.global-to-local, align 4
  store i32 %v1_f050, i32* %v2_f04c, align 4
  %v0_f058.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f058

dec_label_pc_f058:                                ; preds = %entry, %dec_label_pc_f04c
  %v1_f060 = phi i32 [ %tmp, %entry ], [ %v0_f058.pre, %dec_label_pc_f04c ]
  %v1_f058 = inttoptr i32 %v1_f060 to i16*
  %v2_f058 = load i16, i16* %v1_f058, align 2
  %v3_f058 = zext i16 %v2_f058 to i32
  store i32 %v3_f058, i32* %r3.global-to-local, align 4
  %v1_f05c = and i32 %v3_f058, 64
  %v2_f05c = icmp eq i32 %v1_f05c, 0
  br i1 %v2_f05c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_f058
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_f058, %bb42
  %storemerge = phi i32 [ %v1_f060, %bb42 ], [ %v1_f05c, %dec_label_pc_f058 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 61544, i32* @lr, align 4
  %v1_f064 = xor i1 %v2_f05c, true
  call void @__pseudo_cond_branch(i1 %v1_f064, i32 ptrtoint (i32* @global_var_fea8.328 to i32))
  %v0_f068 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f068, i32* %fp.global-to-local, align 4
  %v0_f06c = load i32, i32* @r5, align 4
  %v1_f06c = add i32 %v0_f06c, 4
  %v2_f06c = inttoptr i32 %v1_f06c to i32*
  %v3_f06c = load i32, i32* %v2_f06c, align 4
  store i32 %v3_f06c, i32* %r0.global-to-local, align 4
  %v1_f070 = call i32 @__GI___libc_close(i32 %v3_f06c)
  store i32 %v1_f070, i32* %r0.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f078 = load i32, i32* @r8, align 4
  %v2_f078 = add i32 %v0_f078, 168
  %v3_f078 = inttoptr i32 %v2_f078 to i32*
  %v4_f078 = load i32, i32* %v3_f078, align 4
  store i32 %v4_f078, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_f07c = icmp slt i32 %v1_f070, 0
  br i1 %v1_f07c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_f084 = add i32 %v4_f078, 8
  %v2_f084 = inttoptr i32 %v1_f084 to i32*
  %v3_f084 = load i32, i32* %v2_f084, align 4
  store i32 %v3_f084, i32* %r3.global-to-local, align 4
  %v0_f088 = call i32 @__aeabi_read_tp()
  store i32 %v0_f088, i32* %r0.global-to-local, align 4
  %v1_f08c = add i32 %v0_f088, -1168
  store i32 %v1_f08c, i32* %sl.global-to-local, align 4
  %v0_f090 = load i32, i32* %r3.global-to-local, align 4
  %v3_f090 = icmp uge i32 %v0_f090, %v1_f08c
  store i1 %v3_f090, i1* %cpsr_c.global-to-local, align 1
  %v9_f090 = icmp eq i32 %v0_f090, %v1_f08c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f098 = load i32, i32* @r5, align 4
  %v2_f098 = add i32 %v1_f098, 4
  %v3_f098 = inttoptr i32 %v2_f098 to i32*
  store i32 -1, i32* %v3_f098, align 4
  br i1 %v9_f090, label %dec_label_pc_f0e0, label %dec_label_pc_f0a0

dec_label_pc_f0a0:                                ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_f0a4 = load i32, i32* @r7, align 4
  store i32 %v0_f0a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_f0ac108 = inttoptr i32 %v0_f0a4 to i32*
  %v2_f0ac109 = load i32, i32* %v1_f0ac108, align 4
  store i32 %v2_f0ac109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_f0b0111 = icmp eq i32 %v2_f0ac109, 0
  br i1 %v9_f0b0111, label %dec_label_pc_f0b8, label %dec_label_pc_f0d0

dec_label_pc_f0b8:                                ; preds = %dec_label_pc_f0a0, %dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge
  %v0_f0b8112 = phi i32 [ %v1_f0b0.pre, %dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge ], [ 0, %dec_label_pc_f0a0 ]
  store i32 %v0_f0b8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f0c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f0c8, label %dec_label_pc_f0cc, label %dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge

dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge:    ; preds = %dec_label_pc_f0b8
  %v0_f0ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f0b0.pre = load i32, i32* @r4, align 4
  %v1_f0ac = inttoptr i32 %v0_f0ac.pre to i32*
  %v2_f0ac = load i32, i32* %v1_f0ac, align 4
  store i32 %v2_f0ac, i32* %r3.global-to-local, align 4
  %v3_f0b0 = icmp uge i32 %v2_f0ac, %v1_f0b0.pre
  store i1 %v3_f0b0, i1* %cpsr_c.global-to-local, align 1
  %v9_f0b0 = icmp eq i32 %v2_f0ac, %v1_f0b0.pre
  br i1 %v9_f0b0, label %dec_label_pc_f0b8, label %dec_label_pc_f0d0

dec_label_pc_f0cc:                                ; preds = %dec_label_pc_f0b8
  %v0_f0cc = load i32, i32* @r4, align 4
  store i32 %v0_f0cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f0d0

dec_label_pc_f0d0:                                ; preds = %dec_label_pc_f0a0, %dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge, %dec_label_pc_f0cc
  %v0_f0d0 = phi i32 [ %v0_f0cc, %dec_label_pc_f0cc ], [ %v2_f0ac109, %dec_label_pc_f0a0 ], [ %v2_f0ac, %dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge ]
  %v1_f0d0 = phi i32 [ %v0_f0cc, %dec_label_pc_f0cc ], [ 0, %dec_label_pc_f0a0 ], [ %v1_f0b0.pre, %dec_label_pc_f0b8.dec_label_pc_f0ac_crit_edge ]
  %v3_f0d0 = icmp uge i32 %v0_f0d0, %v1_f0d0
  store i1 %v3_f0d0, i1* %cpsr_c.global-to-local, align 1
  %v9_f0d0 = icmp eq i32 %v0_f0d0, %v1_f0d0
  br i1 %v9_f0d0, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_f0d0
  %v1_f0d4 = load i32, i32* @r7, align 4
  store i32 %v1_f0d4, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_f0d0, %bb46
  %v1_f0d8 = xor i1 %v9_f0d0, true
  call void @__pseudo_cond_branch(i1 %v1_f0d8, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_f0dc = load i32, i32* %sl.global-to-local, align 4
  %v1_f0dc = load i32, i32* @r7, align 4
  %v2_f0dc = add i32 %v1_f0dc, 8
  %v3_f0dc = inttoptr i32 %v2_f0dc to i32*
  store i32 %v0_f0dc, i32* %v3_f0dc, align 4
  br label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %bb45, %bb47
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f0e4 = load i32, i32* @r8, align 4
  %v2_f0e4 = add i32 %v0_f0e4, 168
  %v3_f0e4 = inttoptr i32 %v2_f0e4 to i32*
  %v4_f0e4 = load i32, i32* %v3_f0e4, align 4
  store i32 %v4_f0e4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_f0ec = add i32 %v0_f0e4, 12
  %v3_f0ec = inttoptr i32 %v2_f0ec to i32*
  %v4_f0ec = load i32, i32* %v3_f0ec, align 4
  store i32 %v4_f0ec, i32* %r2.global-to-local, align 4
  %v1_f0f0 = add i32 %v4_f0e4, 4
  %v2_f0f0 = inttoptr i32 %v1_f0f0 to i32*
  %v3_f0f0 = load i32, i32* %v2_f0f0, align 4
  store i32 %v3_f0f0, i32* %r1.global-to-local, align 4
  %v1_f0f4 = inttoptr i32 %v4_f0ec to i32*
  %v2_f0f4 = load i32, i32* %v1_f0f4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0f8 = icmp eq i32 %v3_f0f0, 0
  %v1_f0fc = add i32 %v2_f0f4, 1
  store i32 %v1_f0fc, i32* %r3.global-to-local, align 4
  store i32 %v1_f0fc, i32* %v1_f0f4, align 4
  br i1 %v2_f0f8, label %dec_label_pc_f108, label %dec_label_pc_f168

dec_label_pc_f108:                                ; preds = %dec_label_pc_f0e0
  %v0_f108 = load i32, i32* %r1.global-to-local, align 4
  %v1_f108 = load i32, i32* %r0.global-to-local, align 4
  %v2_f108 = add i32 %v1_f108, 8
  %v3_f108 = inttoptr i32 %v2_f108 to i32*
  store i32 %v0_f108, i32* %v3_f108, align 4
  %v0_f10c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f10c, i32* @r7, align 4
  br label %dec_label_pc_f110

dec_label_pc_f110:                                ; preds = %dec_label_pc_f140.dec_label_pc_f110_crit_edge, %dec_label_pc_f108
  %v0_f110 = phi i32 [ %v0_f110.pre, %dec_label_pc_f140.dec_label_pc_f110_crit_edge ], [ %v0_f10c, %dec_label_pc_f108 ]
  %v1_f110 = inttoptr i32 %v0_f110 to i32*
  %v2_f110 = load i32, i32* %v1_f110, align 4
  store i32 %v2_f110, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_f110, i32* %r2.global-to-local, align 4
  %v2_f11c96 = load i32, i32* %v1_f110, align 4
  store i32 %v2_f11c96, i32* %r3.global-to-local, align 4
  %v3_f12098 = icmp uge i32 %v2_f11c96, %v2_f110
  store i1 %v3_f12098, i1* %cpsr_c.global-to-local, align 1
  %v9_f120104 = icmp eq i32 %v2_f11c96, %v2_f110
  br i1 %v9_f120104, label %dec_label_pc_f128, label %dec_label_pc_f140

dec_label_pc_f128:                                ; preds = %dec_label_pc_f110, %dec_label_pc_f128.dec_label_pc_f11c_crit_edge
  %v0_f128105 = phi i32 [ %v1_f120.pre, %dec_label_pc_f128.dec_label_pc_f11c_crit_edge ], [ %v2_f110, %dec_label_pc_f110 ]
  store i32 %v0_f128105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f138 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f138, label %dec_label_pc_f13c, label %dec_label_pc_f128.dec_label_pc_f11c_crit_edge

dec_label_pc_f128.dec_label_pc_f11c_crit_edge:    ; preds = %dec_label_pc_f128
  %v0_f11c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f120.pre = load i32, i32* @r4, align 4
  %v1_f11c = inttoptr i32 %v0_f11c.pre to i32*
  %v2_f11c = load i32, i32* %v1_f11c, align 4
  store i32 %v2_f11c, i32* %r3.global-to-local, align 4
  %v3_f120 = icmp uge i32 %v2_f11c, %v1_f120.pre
  store i1 %v3_f120, i1* %cpsr_c.global-to-local, align 1
  %v9_f120 = icmp eq i32 %v2_f11c, %v1_f120.pre
  br i1 %v9_f120, label %dec_label_pc_f128, label %dec_label_pc_f140

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f128
  %v0_f13c = load i32, i32* @r4, align 4
  store i32 %v0_f13c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f140

dec_label_pc_f140:                                ; preds = %dec_label_pc_f110, %dec_label_pc_f128.dec_label_pc_f11c_crit_edge, %dec_label_pc_f13c
  %v0_f148 = phi i32 [ %v0_f13c, %dec_label_pc_f13c ], [ %v2_f11c96, %dec_label_pc_f110 ], [ %v2_f11c, %dec_label_pc_f128.dec_label_pc_f11c_crit_edge ]
  %v1_f140 = phi i32 [ %v0_f13c, %dec_label_pc_f13c ], [ %v2_f110, %dec_label_pc_f110 ], [ %v1_f120.pre, %dec_label_pc_f128.dec_label_pc_f11c_crit_edge ]
  %v3_f140 = icmp uge i32 %v0_f148, %v1_f140
  store i1 %v3_f140, i1* %cpsr_c.global-to-local, align 1
  %v9_f140 = icmp eq i32 %v0_f148, %v1_f140
  br i1 %v9_f140, label %dec_label_pc_f148, label %dec_label_pc_f140.dec_label_pc_f110_crit_edge

dec_label_pc_f140.dec_label_pc_f110_crit_edge:    ; preds = %dec_label_pc_f140
  %v0_f110.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f110

dec_label_pc_f148:                                ; preds = %dec_label_pc_f140
  %v2_f148 = icmp ne i32 %v1_f140, 0
  store i1 %v2_f148, i1* %cpsr_c.global-to-local, align 1
  %v7_f14c = icmp slt i32 %v1_f140, 2
  br i1 %v7_f14c, label %dec_label_pc_f168, label %dec_label_pc_f150

dec_label_pc_f150:                                ; preds = %dec_label_pc_f148
  %v0_f150 = load i32, i32* @r7, align 4
  store i32 %v0_f150, i32* %r0.global-to-local, align 4
  %v0_f154 = load i32, i32* %r1.global-to-local, align 4
  %v1_f154 = add i32 %v0_f154, 129
  store i32 %v1_f154, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f168

dec_label_pc_f168:                                ; preds = %dec_label_pc_f0e0, %dec_label_pc_f150, %dec_label_pc_f148
  %v0_f168 = load i32, i32* @r5, align 4
  %v1_f168 = inttoptr i32 %v0_f168 to i16*
  %v2_f168 = load i16, i16* %v1_f168, align 2
  %v3_f168 = zext i16 %v2_f168 to i32
  %v1_f16c = and i32 %v3_f168, 24576
  %v1_f170 = or i32 %v1_f16c, 48
  store i32 %v1_f170, i32* %r3.global-to-local, align 4
  %v0_f174 = load i32, i32* @sb, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f174 = icmp eq i32 %v0_f174, 0
  %v1_f178 = trunc i32 %v1_f170 to i16
  store i16 %v1_f178, i16* %v1_f168, align 2
  br i1 %v2_f174, label %dec_label_pc_f180, label %dec_label_pc_f1f4

dec_label_pc_f180:                                ; preds = %dec_label_pc_f168
  %v0_f180 = load i32, i32* @r5, align 4
  %v1_f180 = add i32 %v0_f180, 60
  %v2_f180 = inttoptr i32 %v1_f180 to i32*
  %v3_f180 = load i32, i32* %v2_f180, align 4
  %v1_f184 = add i32 %v3_f180, -1
  store i32 %v1_f184, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f188 = icmp eq i32 %v1_f184, 0
  store i32 %v1_f184, i32* %v2_f180, align 4
  br i1 %v2_f188, label %dec_label_pc_f194, label %dec_label_pc_f1f4

dec_label_pc_f194:                                ; preds = %dec_label_pc_f180
  %v0_f194 = load i32, i32* %r3.global-to-local, align 4
  %v1_f194 = load i32, i32* @r5, align 4
  %v2_f194 = add i32 %v1_f194, 64
  %v3_f194 = inttoptr i32 %v2_f194 to i32*
  store i32 %v0_f194, i32* %v3_f194, align 4
  %v0_f198 = load i32, i32* @r5, align 4
  %v1_f198 = add i32 %v0_f198, 56
  store i32 %v1_f198, i32* @r6, align 4
  br label %dec_label_pc_f19c

dec_label_pc_f19c:                                ; preds = %dec_label_pc_f1cc.dec_label_pc_f19c_crit_edge, %dec_label_pc_f194
  %v0_f1a4 = phi i32 [ %v0_f1a4.pre, %dec_label_pc_f1cc.dec_label_pc_f19c_crit_edge ], [ %v1_f198, %dec_label_pc_f194 ]
  %v0_f19c = phi i32 [ %v0_f19c.pre, %dec_label_pc_f1cc.dec_label_pc_f19c_crit_edge ], [ %v0_f198, %dec_label_pc_f194 ]
  %v1_f19c = add i32 %v0_f19c, 56
  %v2_f19c = inttoptr i32 %v1_f19c to i32*
  %v3_f19c = load i32, i32* %v2_f19c, align 4
  store i32 %v3_f19c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_f1a4, i32* %r2.global-to-local, align 4
  %v1_f1a882 = inttoptr i32 %v0_f1a4 to i32*
  %v2_f1a883 = load i32, i32* %v1_f1a882, align 4
  store i32 %v2_f1a883, i32* %r3.global-to-local, align 4
  %v3_f1ac85 = icmp uge i32 %v2_f1a883, %v3_f19c
  store i1 %v3_f1ac85, i1* %cpsr_c.global-to-local, align 1
  %v9_f1ac91 = icmp eq i32 %v2_f1a883, %v3_f19c
  br i1 %v9_f1ac91, label %dec_label_pc_f1b4, label %dec_label_pc_f1cc

dec_label_pc_f1b4:                                ; preds = %dec_label_pc_f19c, %dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge
  %v0_f1b492 = phi i32 [ %v1_f1ac.pre, %dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge ], [ %v3_f19c, %dec_label_pc_f19c ]
  store i32 %v0_f1b492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f1c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f1c4, label %dec_label_pc_f1c8, label %dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge

dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge:    ; preds = %dec_label_pc_f1b4
  %v0_f1a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f1ac.pre = load i32, i32* @r4, align 4
  %v1_f1a8 = inttoptr i32 %v0_f1a8.pre to i32*
  %v2_f1a8 = load i32, i32* %v1_f1a8, align 4
  store i32 %v2_f1a8, i32* %r3.global-to-local, align 4
  %v3_f1ac = icmp uge i32 %v2_f1a8, %v1_f1ac.pre
  store i1 %v3_f1ac, i1* %cpsr_c.global-to-local, align 1
  %v9_f1ac = icmp eq i32 %v2_f1a8, %v1_f1ac.pre
  br i1 %v9_f1ac, label %dec_label_pc_f1b4, label %dec_label_pc_f1cc

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f1b4
  %v0_f1c8 = load i32, i32* @r4, align 4
  store i32 %v0_f1c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f1cc

dec_label_pc_f1cc:                                ; preds = %dec_label_pc_f19c, %dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge, %dec_label_pc_f1c8
  %v0_f1d4 = phi i32 [ %v0_f1c8, %dec_label_pc_f1c8 ], [ %v2_f1a883, %dec_label_pc_f19c ], [ %v2_f1a8, %dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge ]
  %v1_f1cc = phi i32 [ %v0_f1c8, %dec_label_pc_f1c8 ], [ %v3_f19c, %dec_label_pc_f19c ], [ %v1_f1ac.pre, %dec_label_pc_f1b4.dec_label_pc_f1a8_crit_edge ]
  %v3_f1cc = icmp uge i32 %v0_f1d4, %v1_f1cc
  store i1 %v3_f1cc, i1* %cpsr_c.global-to-local, align 1
  %v9_f1cc = icmp eq i32 %v0_f1d4, %v1_f1cc
  br i1 %v9_f1cc, label %dec_label_pc_f1d4, label %dec_label_pc_f1cc.dec_label_pc_f19c_crit_edge

dec_label_pc_f1cc.dec_label_pc_f19c_crit_edge:    ; preds = %dec_label_pc_f1cc
  %v0_f19c.pre = load i32, i32* @r5, align 4
  %v0_f1a4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f19c

dec_label_pc_f1d4:                                ; preds = %dec_label_pc_f1cc
  %v2_f1d4 = icmp ne i32 %v1_f1cc, 0
  store i1 %v2_f1d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d8 = icmp slt i32 %v1_f1cc, 2
  br i1 %v7_f1d8, label %dec_label_pc_f1f4, label %dec_label_pc_f1dc

dec_label_pc_f1dc:                                ; preds = %dec_label_pc_f1d4
  %v0_f1dc = load i32, i32* @r5, align 4
  %v1_f1dc = add i32 %v0_f1dc, 56
  store i32 %v1_f1dc, i32* %r0.global-to-local, align 4
  %v0_f1e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_f1e0 = add i32 %v0_f1e0, 129
  store i32 %v1_f1e0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f180, %dec_label_pc_f168, %dec_label_pc_f1dc, %dec_label_pc_f1d4
  %v0_f1f4 = load i32, i32* @r5, align 4
  %v1_f1f4 = inttoptr i32 %v0_f1f4 to i16*
  %v2_f1f4 = load i16, i16* %v1_f1f4, align 2
  %v3_f1f4 = zext i16 %v2_f1f4 to i32
  store i32 %v3_f1f4, i32* %r3.global-to-local, align 4
  %v1_f1f8 = and i32 %v3_f1f4, 16384
  %v2_f1f8 = icmp eq i32 %v1_f1f8, 0
  br i1 %v2_f1f8, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_f1f4
  %v2_f1fc = add i32 %v0_f1f4, 8
  %v3_f1fc = inttoptr i32 %v2_f1fc to i32*
  %v4_f1fc = load i32, i32* %v3_f1fc, align 4
  store i32 %v4_f1fc, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_f1f4, %bb48
  %v1_f200 = xor i1 %v2_f1f8, true
  call void @__pseudo_cond_branch(i1 %v1_f200, i32 ptrtoint (i32* @global_var_c048.324 to i32))
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f208 = load i32, i32* @r8, align 4
  %v2_f208 = add i32 %v0_f208, 168
  %v3_f208 = inttoptr i32 %v2_f208 to i32*
  %v4_f208 = load i32, i32* %v3_f208, align 4
  store i32 %v4_f208, i32* @r5, align 4
  %v1_f20c = add i32 %v4_f208, 8
  %v2_f20c = inttoptr i32 %v1_f20c to i32*
  %v3_f20c = load i32, i32* %v2_f20c, align 4
  store i32 %v3_f20c, i32* %r3.global-to-local, align 4
  %v1_f210 = load i32, i32* %sl.global-to-local, align 4
  %v3_f210 = icmp uge i32 %v3_f20c, %v1_f210
  store i1 %v3_f210, i1* %cpsr_c.global-to-local, align 1
  %v9_f210 = icmp eq i32 %v3_f20c, %v1_f210
  br i1 %v9_f210, label %dec_label_pc_f258, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_f208, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_f22475 = inttoptr i32 %v4_f208 to i32*
  %v2_f22476 = load i32, i32* %v1_f22475, align 4
  store i32 %v2_f22476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_f22878 = icmp eq i32 %v2_f22476, 0
  br i1 %v9_f22878, label %dec_label_pc_f230, label %dec_label_pc_f248

dec_label_pc_f230:                                ; preds = %dec_label_pc_f218, %dec_label_pc_f230.dec_label_pc_f224_crit_edge
  %v0_f23079 = phi i32 [ %v1_f228.pre, %dec_label_pc_f230.dec_label_pc_f224_crit_edge ], [ 0, %dec_label_pc_f218 ]
  store i32 %v0_f23079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f240 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f240, label %dec_label_pc_f244, label %dec_label_pc_f230.dec_label_pc_f224_crit_edge

dec_label_pc_f230.dec_label_pc_f224_crit_edge:    ; preds = %dec_label_pc_f230
  %v0_f224.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f228.pre = load i32, i32* @r4, align 4
  %v1_f224 = inttoptr i32 %v0_f224.pre to i32*
  %v2_f224 = load i32, i32* %v1_f224, align 4
  store i32 %v2_f224, i32* %r3.global-to-local, align 4
  %v3_f228 = icmp uge i32 %v2_f224, %v1_f228.pre
  store i1 %v3_f228, i1* %cpsr_c.global-to-local, align 1
  %v9_f228 = icmp eq i32 %v2_f224, %v1_f228.pre
  br i1 %v9_f228, label %dec_label_pc_f230, label %dec_label_pc_f248

dec_label_pc_f244:                                ; preds = %dec_label_pc_f230
  %v0_f244 = load i32, i32* @r4, align 4
  store i32 %v0_f244, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f248

dec_label_pc_f248:                                ; preds = %dec_label_pc_f218, %dec_label_pc_f230.dec_label_pc_f224_crit_edge, %dec_label_pc_f244
  %v0_f248 = phi i32 [ %v0_f244, %dec_label_pc_f244 ], [ %v2_f22476, %dec_label_pc_f218 ], [ %v2_f224, %dec_label_pc_f230.dec_label_pc_f224_crit_edge ]
  %v1_f248 = phi i32 [ %v0_f244, %dec_label_pc_f244 ], [ 0, %dec_label_pc_f218 ], [ %v1_f228.pre, %dec_label_pc_f230.dec_label_pc_f224_crit_edge ]
  %v3_f248 = icmp uge i32 %v0_f248, %v1_f248
  store i1 %v3_f248, i1* %cpsr_c.global-to-local, align 1
  %v9_f248 = icmp eq i32 %v0_f248, %v1_f248
  br i1 %v9_f248, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_f248
  %v1_f24c = load i32, i32* @r5, align 4
  store i32 %v1_f24c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_f248, %bb50
  %v1_f250 = xor i1 %v9_f248, true
  call void @__pseudo_cond_branch(i1 %v1_f250, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_f254 = load i32, i32* %sl.global-to-local, align 4
  %v1_f254 = load i32, i32* @r5, align 4
  %v2_f254 = add i32 %v1_f254, 8
  %v3_f254 = inttoptr i32 %v2_f254 to i32*
  store i32 %v0_f254, i32* %v3_f254, align 4
  %v0_f25c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_f258

dec_label_pc_f258:                                ; preds = %bb49, %bb51
  %v0_f25c = phi i32 [ %v0_f208, %bb49 ], [ %v0_f25c.pre, %bb51 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_f25c = add i32 %v0_f25c, 88
  %v3_f25c = inttoptr i32 %v2_f25c to i32*
  %v4_f25c = load i32, i32* %v3_f25c, align 4
  store i32 %v4_f25c, i32* %r2.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_f264 = add i32 %v0_f25c, 168
  %v3_f264 = inttoptr i32 %v2_f264 to i32*
  %v4_f264 = load i32, i32* %v3_f264, align 4
  store i32 %v4_f264, i32* %r0.global-to-local, align 4
  %v1_f268 = inttoptr i32 %v4_f25c to i32*
  %v2_f268 = load i32, i32* %v1_f268, align 4
  store i32 %v2_f268, i32* %r3.global-to-local, align 4
  %v1_f26c = add i32 %v4_f264, 4
  %v2_f26c = inttoptr i32 %v1_f26c to i32*
  %v3_f26c = load i32, i32* %v2_f26c, align 4
  store i32 %v3_f26c, i32* %r1.global-to-local, align 4
  %v1_f270 = add i32 %v2_f268, 1
  store i32 %v1_f270, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f274 = icmp eq i32 %v3_f26c, 0
  store i32 %v1_f270, i32* %v1_f268, align 4
  br i1 %v2_f274, label %dec_label_pc_f280, label %dec_label_pc_f2e0

dec_label_pc_f280:                                ; preds = %dec_label_pc_f258
  %v0_f280 = load i32, i32* %r1.global-to-local, align 4
  %v1_f280 = load i32, i32* %r0.global-to-local, align 4
  %v2_f280 = add i32 %v1_f280, 8
  %v3_f280 = inttoptr i32 %v2_f280 to i32*
  store i32 %v0_f280, i32* %v3_f280, align 4
  %v0_f284 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f284, i32* @r5, align 4
  br label %dec_label_pc_f288

dec_label_pc_f288:                                ; preds = %dec_label_pc_f2b8.dec_label_pc_f288_crit_edge, %dec_label_pc_f280
  %v0_f288 = phi i32 [ %v0_f288.pre, %dec_label_pc_f2b8.dec_label_pc_f288_crit_edge ], [ %v0_f284, %dec_label_pc_f280 ]
  %v1_f288 = inttoptr i32 %v0_f288 to i32*
  %v2_f288 = load i32, i32* %v1_f288, align 4
  store i32 %v2_f288, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_f288, i32* %r2.global-to-local, align 4
  %v2_f29464 = load i32, i32* %v1_f288, align 4
  store i32 %v2_f29464, i32* %r3.global-to-local, align 4
  %v3_f29866 = icmp uge i32 %v2_f29464, %v2_f288
  store i1 %v3_f29866, i1* %cpsr_c.global-to-local, align 1
  %v9_f29872 = icmp eq i32 %v2_f29464, %v2_f288
  br i1 %v9_f29872, label %dec_label_pc_f2a0, label %dec_label_pc_f2b8

dec_label_pc_f2a0:                                ; preds = %dec_label_pc_f288, %dec_label_pc_f2a0.dec_label_pc_f294_crit_edge
  %v0_f2a073 = phi i32 [ %v1_f298.pre, %dec_label_pc_f2a0.dec_label_pc_f294_crit_edge ], [ %v2_f288, %dec_label_pc_f288 ]
  store i32 %v0_f2a073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f2b0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f2b0, label %dec_label_pc_f2b4, label %dec_label_pc_f2a0.dec_label_pc_f294_crit_edge

dec_label_pc_f2a0.dec_label_pc_f294_crit_edge:    ; preds = %dec_label_pc_f2a0
  %v0_f294.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f298.pre = load i32, i32* @r4, align 4
  %v1_f294 = inttoptr i32 %v0_f294.pre to i32*
  %v2_f294 = load i32, i32* %v1_f294, align 4
  store i32 %v2_f294, i32* %r3.global-to-local, align 4
  %v3_f298 = icmp uge i32 %v2_f294, %v1_f298.pre
  store i1 %v3_f298, i1* %cpsr_c.global-to-local, align 1
  %v9_f298 = icmp eq i32 %v2_f294, %v1_f298.pre
  br i1 %v9_f298, label %dec_label_pc_f2a0, label %dec_label_pc_f2b8

dec_label_pc_f2b4:                                ; preds = %dec_label_pc_f2a0
  %v0_f2b4 = load i32, i32* @r4, align 4
  store i32 %v0_f2b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f288, %dec_label_pc_f2a0.dec_label_pc_f294_crit_edge, %dec_label_pc_f2b4
  %v0_f2c0 = phi i32 [ %v0_f2b4, %dec_label_pc_f2b4 ], [ %v2_f29464, %dec_label_pc_f288 ], [ %v2_f294, %dec_label_pc_f2a0.dec_label_pc_f294_crit_edge ]
  %v1_f2b8 = phi i32 [ %v0_f2b4, %dec_label_pc_f2b4 ], [ %v2_f288, %dec_label_pc_f288 ], [ %v1_f298.pre, %dec_label_pc_f2a0.dec_label_pc_f294_crit_edge ]
  %v3_f2b8 = icmp uge i32 %v0_f2c0, %v1_f2b8
  store i1 %v3_f2b8, i1* %cpsr_c.global-to-local, align 1
  %v9_f2b8 = icmp eq i32 %v0_f2c0, %v1_f2b8
  br i1 %v9_f2b8, label %dec_label_pc_f2c0, label %dec_label_pc_f2b8.dec_label_pc_f288_crit_edge

dec_label_pc_f2b8.dec_label_pc_f288_crit_edge:    ; preds = %dec_label_pc_f2b8
  %v0_f288.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f288

dec_label_pc_f2c0:                                ; preds = %dec_label_pc_f2b8
  %v2_f2c0 = icmp ne i32 %v1_f2b8, 0
  store i1 %v2_f2c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2c4 = icmp slt i32 %v1_f2b8, 2
  br i1 %v7_f2c4, label %dec_label_pc_f2e0, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %dec_label_pc_f2c0
  %v0_f2c8 = load i32, i32* @r5, align 4
  store i32 %v0_f2c8, i32* %r0.global-to-local, align 4
  %v0_f2cc = load i32, i32* %r1.global-to-local, align 4
  %v1_f2cc = add i32 %v0_f2cc, 129
  store i32 %v1_f2cc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f2e0

dec_label_pc_f2e0:                                ; preds = %dec_label_pc_f258, %dec_label_pc_f2c8, %dec_label_pc_f2c0
  %v0_f2e0 = call i32 @_stdio_openlist_dec_use()
  %v0_f2e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_f2e4, i32* %r0.global-to-local, align 4
  %v2_f2ec = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f2ec, i32* @r4, align 4
  store i32 %v6_efd4, i32* @r5, align 4
  store i32 %v9_efd4, i32* @r6, align 4
  store i32 %v12_efd4, i32* @r7, align 4
  store i32 %v15_efd4, i32* @r8, align 4
  store i32 %v18_efd4, i32* @sb, align 4
  store i32 %v27_efd4, i32* @lr, align 4
  ret i32 %v0_f2e4

; uselistorder directives
  uselistorder i32 %v0_f2b4, { 1, 0, 2 }
  uselistorder i32 %v1_f298.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f288, { 1, 0 }
  uselistorder i32 %v0_f25c, { 1, 0 }
  uselistorder i32 %v0_f244, { 1, 0, 2 }
  uselistorder i32 %v1_f228.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_f210, { 1, 0 }
  uselistorder i32 %v0_f1c8, { 1, 0, 2 }
  uselistorder i32 %v1_f1ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f13c, { 1, 0, 2 }
  uselistorder i32 %v1_f120.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f110, { 1, 0 }
  uselistorder i32 %v0_f0cc, { 1, 0, 2 }
  uselistorder i32 %v1_f0b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f090, { 1, 0 }
  uselistorder i32 %v1_f01c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 5, 45, 7, 8, 9, 10, 11, 13, 12, 2, 14, 17, 15, 16, 18, 20, 19, 0, 21, 22, 23, 24, 25, 27, 26, 1, 28, 29, 30, 31, 33, 32, 46, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 6, 8, 7, 1, 9, 10, 11, 34, 35, 12, 13, 14, 16, 15, 0, 17, 18, 19, 20, 22, 21, 2, 23, 24, 26, 25, 3, 27, 28, 29, 31, 30, 4, 32, 33 }
  uselistorder label %dec_label_pc_f2e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f2b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f2a0, { 1, 0 }
  uselistorder label %dec_label_pc_f258, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_f248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f230, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_f1f4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_f1cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f1b4, { 1, 0 }
  uselistorder label %dec_label_pc_f168, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f128, { 1, 0 }
  uselistorder label %dec_label_pc_f0e0, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_f0d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f0b8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_f058, { 1, 0 }
  uselistorder label %dec_label_pc_f04c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_f03c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f024, { 1, 0 }
}

define i32 @function_f2f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f2f8:
  %v0_f2f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f2f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_f2f8
  %v2_f2f8 = load i32, i32* @r8, align 4
  %v5_f2f8 = udiv i32 %v2_f2f8, 2
  %v6_f2f8 = and i32 %v5_f2f8, %arg1
  %v2_f2fc = load i32, i32* @ip, align 4
  %v3_f2fc = and i32 %v6_f2f8, %v2_f2fc
  %v8_f300 = ashr i32 %v2_f2f8, %v3_f2fc
  %v9_f300 = and i32 %v8_f300, %v3_f2fc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f2f8, %bb
  %v10_f300 = phi i32 [ %arg1, %dec_label_pc_f2f8 ], [ %v9_f300, %bb ]
  ret i32 %v10_f300

; uselistorder directives
  uselistorder i32 %v2_f2f8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_f314 = call i32 @_stdio_fopen()
  ret i32 %v0_f314
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_f324 = load i32, i32* @r4, align 4
  store i32 %v3_f324, i32* %stack_var_-24, align 4
  %v6_f324 = load i32, i32* @r5, align 4
  %v9_f324 = load i32, i32* @r6, align 4
  %v12_f324 = load i32, i32* @r7, align 4
  %v15_f324 = load i32, i32* @r8, align 4
  %v0_f328 = load i32, i32* @r1, align 4
  %v1_f328 = inttoptr i32 %v0_f328 to i8*
  %v2_f328 = load i8, i8* %v1_f328, align 1
  %v3_f328 = zext i8 %v2_f328 to i32
  store i32 %v3_f328, i32* @ip, align 4
  %v2_f330 = icmp ugt i8 %v2_f328, 113
  store i1 %v2_f330, i1* %cpsr_c.global-to-local, align 1
  %v7_f330 = icmp eq i8 %v2_f328, 114
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r8, align 4
  %v0_f33c = load i32, i32* @r0, align 4
  store i32 %v0_f33c, i32* @r7, align 4
  %v0_f340 = load i32, i32* @r2, align 4
  store i32 %v0_f340, i32* @r5, align 4
  %v0_f344 = load i32, i32* @r3, align 4
  store i32 %v0_f344, i32* @r6, align 4
  br i1 %v7_f330, label %dec_label_pc_f398, label %dec_label_pc_f34c

dec_label_pc_f34c:                                ; preds = %entry
  %v2_f34c = icmp ugt i8 %v2_f328, 118
  store i1 %v2_f34c, i1* %cpsr_c.global-to-local, align 1
  %v7_f34c = icmp eq i8 %v2_f328, 119
  br i1 %v7_f34c, label %bb, label %dec_label_pc_f358

bb:                                               ; preds = %dec_label_pc_f34c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_f39c

dec_label_pc_f358:                                ; preds = %dec_label_pc_f34c
  %v2_f358 = icmp ugt i8 %v2_f328, 96
  store i1 %v2_f358, i1* %cpsr_c.global-to-local, align 1
  %v7_f358 = icmp eq i8 %v2_f328, 97
  br i1 %v7_f358, label %bb49, label %dec_label_pc_f364

bb49:                                             ; preds = %dec_label_pc_f358
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_f39c

dec_label_pc_f364:                                ; preds = %dec_label_pc_f358, %dec_label_pc_f434, %dec_label_pc_f408
  store i32 77716, i32* %r2.global-to-local, align 4
  %v0_f368 = call i32 @__aeabi_read_tp()
  store i32 %v0_f368, i32* %r0.global-to-local, align 4
  %v3_f36c = load i16, i16* @global_var_22308.76, align 2
  %v4_f36c = sext i16 %v3_f36c to i32
  store i32 %v4_f36c, i32* @r2, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_f374 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f374 = icmp eq i32 %v0_f374, 0
  %v3_f378 = add i32 %v4_f36c, %v0_f368
  %v4_f378 = inttoptr i32 %v3_f378 to i32*
  store i32 22, i32* %v4_f378, align 4
  br i1 %v2_f374, label %dec_label_pc_f73c, label %dec_label_pc_f380

dec_label_pc_f380:                                ; preds = %dec_label_pc_f458._crit_edge, %dec_label_pc_f364
  %v0_f380 = load i32, i32* @r5, align 4
  %v1_f380 = inttoptr i32 %v0_f380 to i16*
  %v2_f380 = load i16, i16* %v1_f380, align 2
  %v3_f380 = zext i16 %v2_f380 to i32
  store i32 %v3_f380, i32* %r3.global-to-local, align 4
  %v1_f384 = and i32 %v3_f380, 8192
  %v2_f384 = icmp eq i32 %v1_f384, 0
  br i1 %v2_f384, label %dec_label_pc_f73c, label %dec_label_pc_f38c

dec_label_pc_f38c:                                ; preds = %dec_label_pc_f380
  store i32 %v0_f380, i32* @r0, align 4
  %v0_f390 = call i32 @free()
  store i32 %v0_f390, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f73c

dec_label_pc_f398:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_f39c

dec_label_pc_f39c:                                ; preds = %bb, %bb49, %dec_label_pc_f398
  %v1_f3b4 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_f398 ]
  %v1_f39c = add i32 %v0_f328, 1
  %v2_f39c = inttoptr i32 %v1_f39c to i8*
  %v3_f39c = load i8, i8* %v2_f39c, align 1
  %v2_f3a0 = icmp ugt i8 %v3_f39c, 97
  store i1 %v2_f3a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3a0 = icmp eq i8 %v3_f39c, 98
  %v1_f39c.v0_f328 = select i1 %v7_f3a0, i32 %v1_f39c, i32 %v0_f328
  store i32 %v1_f39c.v0_f328, i32* %r3.global-to-local, align 4
  %v1_f3ac = add i32 %v1_f39c.v0_f328, 1
  %v2_f3ac = inttoptr i32 %v1_f3ac to i8*
  %v3_f3ac = load i8, i8* %v2_f3ac, align 1
  %v4_f3ac = zext i8 %v3_f3ac to i32
  store i32 %v4_f3ac, i32* @r3, align 4
  %v2_f3b0 = icmp ugt i8 %v3_f3ac, 42
  store i1 %v2_f3b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3b0 = icmp eq i8 %v3_f3ac, 43
  br i1 %v7_f3b0, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_f39c
  store i32 %v1_f3b4, i32* @r3, align 4
  %v2_f3b8 = add nuw nsw i32 %v1_f3b4, 1
  store i32 %v2_f3b8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_f39c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3bc = icmp eq i32 %v0_f340, 0
  br i1 %v2_f3bc, label %dec_label_pc_f3c4, label %dec_label_pc_f400

dec_label_pc_f3c4:                                ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_f3c8 = call i32 @malloc(i32 68)
  store i32 %v1_f3c8, i32* %r0.global-to-local, align 4
  store i32 %v1_f3c8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_f3cc = icmp eq i32 %v1_f3c8, 0
  br i1 %v3_f3cc, label %dec_label_pc_f740, label %dec_label_pc_f3d4

dec_label_pc_f3d4:                                ; preds = %dec_label_pc_f3c4
  %v0_f3d8 = load i32, i32* @r8, align 4
  %v2_f3d8 = add i32 %v0_f3d8, -37264
  store i32 %v2_f3d8, i32* %r3.global-to-local, align 4
  %v1_f3dc = inttoptr i32 %v2_f3d8 to i32*
  %v2_f3dc = load i32, i32* %v1_f3dc, align 4
  store i32 %v2_f3dc, i32* %r0.global-to-local, align 4
  %v3_f3dc = add i32 %v0_f3d8, -37260
  %v4_f3dc = inttoptr i32 %v3_f3dc to i32*
  %v5_f3dc = load i32, i32* %v4_f3dc, align 4
  store i32 %v5_f3dc, i32* @r1, align 4
  %v6_f3dc = add i32 %v0_f3d8, -37256
  %v7_f3dc = inttoptr i32 %v6_f3dc to i32*
  %v8_f3dc = load i32, i32* %v7_f3dc, align 4
  store i32 %v8_f3dc, i32* %r2.global-to-local, align 4
  %v2_f3e8 = add i32 %v1_f3c8, 8
  %v3_f3e8 = inttoptr i32 %v2_f3e8 to i32*
  store i32 0, i32* %v3_f3e8, align 4
  store i32 8192, i32* @ip, align 4
  %v2_f3f0 = load i32, i32* @r5, align 4
  %v3_f3f0 = inttoptr i32 %v2_f3f0 to i16*
  store i16 8192, i16* %v3_f3f0, align 2
  %v2_f3f4 = load i32, i32* %r0.global-to-local, align 4
  %v0_f3f8 = load i32, i32* @r5, align 4
  %v1_f3f8 = add i32 %v0_f3f8, 56
  store i32 %v1_f3f8, i32* @r3, align 4
  %v1_f3fc = inttoptr i32 %v1_f3f8 to i32*
  store i32 %v2_f3f4, i32* %v1_f3fc, align 4
  %v3_f3fc = add i32 %v0_f3f8, 60
  %v4_f3fc = inttoptr i32 %v3_f3fc to i32*
  %v5_f3fc = load i32, i32* @r1, align 4
  store i32 %v5_f3fc, i32* %v4_f3fc, align 4
  %v6_f3fc = add i32 %v0_f3f8, 64
  %v7_f3fc = inttoptr i32 %v6_f3fc to i32*
  %v8_f3fc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f3fc, i32* %v7_f3fc, align 4
  %v0_f400.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f400

dec_label_pc_f400:                                ; preds = %.thread3, %dec_label_pc_f3d4
  %v0_f458 = phi i32 [ %v0_f344, %.thread3 ], [ %v0_f400.pre, %dec_label_pc_f3d4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_f400 = icmp slt i32 %v0_f458, 0
  br i1 %v1_f400, label %dec_label_pc_f458, label %dec_label_pc_f408

dec_label_pc_f408:                                ; preds = %dec_label_pc_f400
  %v0_f40c = load i32, i32* @r4, align 4
  %v2_f40c = and i32 %v0_f40c, 131075
  %v1_f410 = add nuw nsw i32 %v2_f40c, 1
  store i32 %v1_f410, i32* %r2.global-to-local, align 4
  %v0_f414 = load i32, i32* @r7, align 4
  %v1_f414 = add i32 %v0_f414, 1
  %v2_f418 = and i32 %v1_f414, %v1_f410
  store i32 %v2_f418, i32* %r3.global-to-local, align 4
  %v3_f41c = icmp uge i32 %v2_f418, %v1_f410
  store i1 %v3_f41c, i1* %cpsr_c.global-to-local, align 1
  %v9_f41c = icmp eq i32 %v2_f418, %v1_f410
  %v1_f420 = load i32, i32* @r5, align 4
  %v2_f420 = add i32 %v1_f420, 4
  %v3_f420 = inttoptr i32 %v2_f420 to i32*
  store i32 %v0_f458, i32* %v3_f420, align 4
  br i1 %v9_f41c, label %dec_label_pc_f428, label %dec_label_pc_f364

dec_label_pc_f428:                                ; preds = %dec_label_pc_f408
  %v0_f428 = load i32, i32* @r4, align 4
  %v1_f428 = load i32, i32* @r7, align 4
  %v2_f428 = sub i32 -1, %v1_f428
  %v3_f428 = and i32 %v0_f428, %v2_f428
  store i32 %v3_f428, i32* @r3, align 4
  %v1_f42c = and i32 %v3_f428, 1024
  %v2_f42c = icmp eq i32 %v1_f42c, 0
  br i1 %v2_f42c, label %dec_label_pc_f44c, label %dec_label_pc_f434

dec_label_pc_f434:                                ; preds = %dec_label_pc_f428
  %v0_f434 = load i32, i32* @r6, align 4
  store i32 %v0_f434, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_f440 = call i32 @__libc_fcntl(i32 %v0_f434, i32 4)
  store i32 %v2_f440, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f444 = icmp eq i32 %v2_f440, 0
  br i1 %v2_f444, label %dec_label_pc_f434.dec_label_pc_f44c_crit_edge, label %dec_label_pc_f364

dec_label_pc_f434.dec_label_pc_f44c_crit_edge:    ; preds = %dec_label_pc_f434
  %v0_f44c.pre = load i32, i32* @r7, align 4
  %v0_f450.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f44c

dec_label_pc_f44c:                                ; preds = %dec_label_pc_f434.dec_label_pc_f44c_crit_edge, %dec_label_pc_f428
  %v0_f450 = phi i32 [ %v0_f450.pre, %dec_label_pc_f434.dec_label_pc_f44c_crit_edge ], [ %v0_f428, %dec_label_pc_f428 ]
  %v0_f44c = phi i32 [ %v0_f44c.pre, %dec_label_pc_f434.dec_label_pc_f44c_crit_edge ], [ %v1_f428, %dec_label_pc_f428 ]
  %v1_f44c = and i32 %v0_f44c, 131072
  store i32 %v1_f44c, i32* %r3.global-to-local, align 4
  %v2_f450 = or i32 %v1_f44c, %v0_f450
  store i32 %v2_f450, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f47c

dec_label_pc_f458:                                ; preds = %dec_label_pc_f400
  %v2_f458 = icmp eq i32 %v0_f458, -1
  store i1 %v2_f458, i1* %cpsr_c.global-to-local, align 1
  %v7_f458 = icmp eq i32 %v0_f458, -1
  %v0_f464.pre = load i32, i32* @r4, align 4
  br i1 %v7_f458, label %dec_label_pc_f458._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_f458
  %v2_f45c = or i32 %v0_f464.pre, 131072
  store i32 %v2_f45c, i32* @r4, align 4
  br label %dec_label_pc_f458._crit_edge

dec_label_pc_f458._crit_edge:                     ; preds = %dec_label_pc_f458, %bb53
  %v0_f464 = phi i32 [ %v2_f45c, %bb53 ], [ %v0_f464.pre, %dec_label_pc_f458 ]
  %v0_f460 = load i32, i32* @r7, align 4
  store i32 %v0_f460, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_f46c = call i32 @__libc_open(i32 %v0_f460, i32 %v0_f464)
  store i32 %v2_f46c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_f470 = icmp slt i32 %v2_f46c, 0
  %v1_f474 = load i32, i32* @r5, align 4
  %v2_f474 = add i32 %v1_f474, 4
  %v3_f474 = inttoptr i32 %v2_f474 to i32*
  store i32 %v2_f46c, i32* %v3_f474, align 4
  br i1 %v1_f470, label %dec_label_pc_f380, label %.dec_label_pc_f47c_crit_edge

.dec_label_pc_f47c_crit_edge:                     ; preds = %dec_label_pc_f458._crit_edge
  %v0_f480.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f47c

dec_label_pc_f47c:                                ; preds = %.dec_label_pc_f47c_crit_edge, %dec_label_pc_f44c
  %v0_f498 = phi i32 [ %v0_f480.pre, %.dec_label_pc_f47c_crit_edge ], [ %v2_f450, %dec_label_pc_f44c ]
  %v0_f47c = load i32, i32* @r5, align 4
  %v1_f47c = inttoptr i32 %v0_f47c to i16*
  %v2_f47c = load i16, i16* %v1_f47c, align 2
  %v3_f47c = zext i16 %v2_f47c to i32
  %v1_f480 = urem i32 %v0_f498, 4
  %v1_f484 = and i32 %v0_f498, 1024
  %v1_f488 = and i32 %v3_f47c, 8192
  %v1_f48c = add nuw nsw i32 %v1_f480, 1
  %v2_f490 = or i32 %v1_f488, %v1_f484
  store i32 %v2_f490, i32* %r3.global-to-local, align 4
  %v1_f494 = xor i32 %v1_f48c, 3
  %v1_f498 = and i32 %v0_f498, 131072
  store i32 %v1_f498, i32* %r2.global-to-local, align 4
  %v2_f498 = icmp eq i32 %v1_f498, 0
  %v1_f49c = add i32 %v0_f47c, 4
  %v2_f49c = inttoptr i32 %v1_f49c to i32*
  %v3_f49c = load i32, i32* %v2_f49c, align 4
  store i32 %v3_f49c, i32* @r4, align 4
  br i1 %v2_f498, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_f47c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_f47c, %bb54
  %v0_f4a8 = phi i32 [ 0, %dec_label_pc_f47c ], [ 32768, %bb54 ]
  %v4_f4a4 = mul nuw nsw i32 %v1_f494, 16
  %v5_f4a4 = or i32 %v2_f490, %v4_f4a4
  store i32 %v5_f4a4, i32* %r3.global-to-local, align 4
  %v2_f4a8 = or i32 %v0_f4a8, %v5_f4a4
  store i32 %v2_f4a8, i32* %r2.global-to-local, align 4
  %v2_f4ac = icmp ugt i32 %v3_f49c, 2147483646
  store i1 %v2_f4ac, i1* %cpsr_c.global-to-local, align 1
  %v8_f4ac = icmp eq i32 %v3_f49c, 2147483647
  %v1_f4b0 = trunc i32 %v2_f4a8 to i16
  store i16 %v1_f4b0, i16* %v1_f47c, align 2
  br i1 %v8_f4ac, label %dec_label_pc_f4f0, label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %bb55
  store i32 77376, i32* %r3.global-to-local, align 4
  %v0_f4bc = call i32 @__aeabi_read_tp()
  %v3_f4c0 = load i16, i16* @global_var_22308.76, align 2
  %v4_f4c0 = sext i16 %v3_f4c0 to i32
  store i32 %v4_f4c0, i32* @r3, align 4
  store i32 %v0_f4bc, i32* @r6, align 4
  %v0_f4c8 = load i32, i32* @r4, align 4
  store i32 %v0_f4c8, i32* @r0, align 4
  %v2_f4cc = add i32 %v4_f4c0, %v0_f4bc
  %v3_f4cc = inttoptr i32 %v2_f4cc to i32*
  %v4_f4cc = load i32, i32* %v3_f4cc, align 4
  store i32 %v4_f4cc, i32* @r4, align 4
  %v1_f4d0 = call i32 @isatty(i32 %v0_f4c8)
  store i32 %v1_f4d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4d4 = icmp eq i32 %v1_f4d0, 0
  br i1 %v2_f4d4, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_f4b8
  %v1_f4d8 = load i32, i32* @r5, align 4
  %v2_f4d8 = inttoptr i32 %v1_f4d8 to i16*
  %v3_f4d8 = load i16, i16* %v2_f4d8, align 2
  %v4_f4d8 = zext i16 %v3_f4d8 to i32
  %v2_f4dc = or i32 %v4_f4d8, 256
  store i32 %v2_f4dc, i32* %r3.global-to-local, align 4
  %v2_f4e0 = trunc i32 %v2_f4dc to i16
  store i16 %v2_f4e0, i16* %v2_f4d8, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_f4b8, %bb56
  %v3_f4e8 = load i16, i16* @global_var_22308.76, align 2
  %v4_f4e8 = sext i16 %v3_f4e8 to i32
  store i32 %v4_f4e8, i32* %r3.global-to-local, align 4
  %v0_f4ec = load i32, i32* @r4, align 4
  %v1_f4ec = load i32, i32* @r6, align 4
  %v3_f4ec = add i32 %v1_f4ec, %v4_f4e8
  %v4_f4ec = inttoptr i32 %v3_f4ec to i32*
  store i32 %v0_f4ec, i32* %v4_f4ec, align 4
  br label %dec_label_pc_f4f0

dec_label_pc_f4f0:                                ; preds = %bb55, %.thread5
  %v0_f4f0 = load i32, i32* @r5, align 4
  %v1_f4f0 = add i32 %v0_f4f0, 8
  %v2_f4f0 = inttoptr i32 %v1_f4f0 to i32*
  %v3_f4f0 = load i32, i32* %v2_f4f0, align 4
  store i32 %v3_f4f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4f4 = icmp eq i32 %v3_f4f0, 0
  br i1 %v2_f4f4, label %dec_label_pc_f4fc, label %bb57

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f4f0
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_f500 = call i32 @malloc(i32 4096)
  store i32 %v1_f500, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f504 = icmp eq i32 %v1_f500, 0
  %v1_f514.pre = load i32, i32* @r5, align 4
  br i1 %v2_f504, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_f4fc
  %v2_f508 = inttoptr i32 %v1_f514.pre to i16*
  %v3_f508 = load i16, i16* %v2_f508, align 2
  %v4_f508 = zext i16 %v3_f508 to i32
  %v2_f50c = add i32 %v1_f500, 4096
  store i32 %v2_f50c, i32* %r2.global-to-local, align 4
  %v2_f510 = or i32 %v4_f508, 16384
  store i32 %v2_f510, i32* %r3.global-to-local, align 4
  %v2_f514 = add i32 %v1_f514.pre, 8
  %v3_f514 = inttoptr i32 %v2_f514 to i32*
  store i32 %v1_f500, i32* %v3_f514, align 4
  %v1_f518 = load i32, i32* %r2.global-to-local, align 4
  %v2_f518 = load i32, i32* @r5, align 4
  %v3_f518 = add i32 %v2_f518, 12
  %v4_f518 = inttoptr i32 %v3_f518 to i32*
  store i32 %v1_f518, i32* %v4_f518, align 4
  %v1_f51c = load i32, i32* %r3.global-to-local, align 4
  %v2_f51c = trunc i32 %v1_f51c to i16
  %v3_f51c = load i32, i32* @r5, align 4
  %v4_f51c = inttoptr i32 %v3_f51c to i16*
  store i16 %v2_f51c, i16* %v4_f51c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_f4fc
  %v2_f51437 = add i32 %v1_f514.pre, 8
  %v3_f51438 = inttoptr i32 %v2_f51437 to i32*
  store i32 0, i32* %v3_f51438, align 4
  %v2_f520 = load i32, i32* @r5, align 4
  %v3_f520 = add i32 %v2_f520, 12
  %v4_f520 = inttoptr i32 %v3_f520 to i32*
  store i32 0, i32* %v4_f520, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_f4f0, %.thread9
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_f52c = load i32, i32* @r8, align 4
  %v2_f52c = add i32 %v0_f52c, 100
  %v3_f52c = inttoptr i32 %v2_f52c to i32*
  %v4_f52c = load i32, i32* %v3_f52c, align 4
  store i32 %v4_f52c, i32* %r3.global-to-local, align 4
  %v2_f530 = load i32, i32* @r5, align 4
  %v3_f530 = add i32 %v2_f530, 2
  %v4_f530 = inttoptr i32 %v3_f530 to i8*
  store i8 0, i8* %v4_f530, align 1
  %v0_f534 = load i32, i32* @r5, align 4
  %v1_f534 = inttoptr i32 %v0_f534 to i16*
  %v2_f534 = load i16, i16* %v1_f534, align 2
  %v3_f534 = zext i16 %v2_f534 to i32
  store i32 %v3_f534, i32* @r2, align 4
  %v0_f538 = load i32, i32* %r3.global-to-local, align 4
  %v1_f538 = inttoptr i32 %v0_f538 to i32*
  %v2_f538 = load i32, i32* %v1_f538, align 4
  store i32 %v2_f538, i32* @r1, align 4
  %v1_f53c = add i32 %v0_f534, 8
  %v2_f53c = inttoptr i32 %v1_f53c to i32*
  %v3_f53c = load i32, i32* %v2_f53c, align 4
  store i32 %v3_f53c, i32* %r3.global-to-local, align 4
  %v1_f540 = and i32 %v3_f534, 8192
  %v2_f540 = icmp eq i32 %v1_f540, 0
  %v2_f544 = add i32 %v0_f534, 20
  %v3_f544 = inttoptr i32 %v2_f544 to i32*
  store i32 %v3_f53c, i32* %v3_f544, align 4
  %v0_f548 = load i32, i32* @r1, align 4
  %v1_f548 = load i32, i32* @r5, align 4
  %v2_f548 = add i32 %v1_f548, 52
  %v3_f548 = inttoptr i32 %v2_f548 to i32*
  store i32 %v0_f548, i32* %v3_f548, align 4
  %v0_f54c = load i32, i32* %r3.global-to-local, align 4
  %v1_f54c = load i32, i32* @r5, align 4
  %v2_f54c = add i32 %v1_f54c, 24
  %v3_f54c = inttoptr i32 %v2_f54c to i32*
  store i32 %v0_f54c, i32* %v3_f54c, align 4
  %v0_f550 = load i32, i32* %r3.global-to-local, align 4
  %v1_f550 = load i32, i32* @r5, align 4
  %v2_f550 = add i32 %v1_f550, 28
  %v3_f550 = inttoptr i32 %v2_f550 to i32*
  store i32 %v0_f550, i32* %v3_f550, align 4
  %v0_f554 = load i32, i32* %r3.global-to-local, align 4
  %v1_f554 = load i32, i32* @r5, align 4
  %v2_f554 = add i32 %v1_f554, 16
  %v3_f554 = inttoptr i32 %v2_f554 to i32*
  store i32 %v0_f554, i32* %v3_f554, align 4
  %v0_f558 = load i32, i32* %r4.global-to-local, align 4
  %v1_f558 = load i32, i32* @r5, align 4
  %v2_f558 = add i32 %v1_f558, 44
  %v3_f558 = inttoptr i32 %v2_f558 to i32*
  store i32 %v0_f558, i32* %v3_f558, align 4
  br i1 %v2_f540, label %dec_label_pc_f740, label %dec_label_pc_f560

dec_label_pc_f560:                                ; preds = %bb57
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f564 = load i32, i32* @r8, align 4
  %v2_f564 = add i32 %v0_f564, 168
  %v3_f564 = inttoptr i32 %v2_f564 to i32*
  %v4_f564 = load i32, i32* %v3_f564, align 4
  store i32 %v4_f564, i32* %r7.global-to-local, align 4
  %v0_f568 = call i32 @__aeabi_read_tp()
  store i32 %v0_f568, i32* %r0.global-to-local, align 4
  %v1_f56c = add i32 %v4_f564, 8
  %v2_f56c = inttoptr i32 %v1_f56c to i32*
  %v3_f56c = load i32, i32* %v2_f56c, align 4
  store i32 %v3_f56c, i32* %r3.global-to-local, align 4
  %v1_f570 = add i32 %v0_f568, -1168
  store i32 %v1_f570, i32* %r6.global-to-local, align 4
  %v3_f574 = icmp uge i32 %v3_f56c, %v1_f570
  store i1 %v3_f574, i1* %cpsr_c.global-to-local, align 1
  %v9_f574 = icmp eq i32 %v3_f56c, %v1_f570
  br i1 %v9_f574, label %dec_label_pc_f5b8, label %dec_label_pc_f57c

dec_label_pc_f57c:                                ; preds = %dec_label_pc_f560
  store i32 %v4_f564, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f584

dec_label_pc_f584:                                ; preds = %dec_label_pc_f590.dec_label_pc_f584_crit_edge, %dec_label_pc_f57c
  %v0_f584 = phi i32 [ %v0_f584.pre, %dec_label_pc_f590.dec_label_pc_f584_crit_edge ], [ %v4_f564, %dec_label_pc_f57c ]
  %v1_f584 = inttoptr i32 %v0_f584 to i32*
  %v2_f584 = load i32, i32* %v1_f584, align 4
  store i32 %v2_f584, i32* %r3.global-to-local, align 4
  %v1_f588 = load i32, i32* %r4.global-to-local, align 4
  %v3_f588 = icmp uge i32 %v2_f584, %v1_f588
  store i1 %v3_f588, i1* %cpsr_c.global-to-local, align 1
  %v9_f588 = icmp eq i32 %v2_f584, %v1_f588
  br i1 %v9_f588, label %dec_label_pc_f590, label %dec_label_pc_f5a8

dec_label_pc_f590:                                ; preds = %dec_label_pc_f584
  store i32 %v2_f584, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f5a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f5a0, label %dec_label_pc_f5a4, label %dec_label_pc_f590.dec_label_pc_f584_crit_edge

dec_label_pc_f590.dec_label_pc_f584_crit_edge:    ; preds = %dec_label_pc_f590
  %v0_f584.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f584

dec_label_pc_f5a4:                                ; preds = %dec_label_pc_f590
  %v0_f5a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f5a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f5a8

dec_label_pc_f5a8:                                ; preds = %dec_label_pc_f584, %dec_label_pc_f5a4
  %v0_f5a8 = phi i32 [ %v0_f5a4, %dec_label_pc_f5a4 ], [ %v2_f584, %dec_label_pc_f584 ]
  %v1_f5a8 = phi i32 [ %v0_f5a4, %dec_label_pc_f5a4 ], [ %v1_f588, %dec_label_pc_f584 ]
  %v3_f5a8 = icmp uge i32 %v0_f5a8, %v1_f5a8
  store i1 %v3_f5a8, i1* %cpsr_c.global-to-local, align 1
  %v9_f5a8 = icmp eq i32 %v0_f5a8, %v1_f5a8
  br i1 %v9_f5a8, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_f5a8
  %v1_f5ac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_f5ac, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_f5a8, %bb58
  %v1_f5b0 = xor i1 %v9_f5a8, true
  call void @__pseudo_cond_branch(i1 %v1_f5b0, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_f5b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f5b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_f5b4 = add i32 %v1_f5b4, 8
  %v3_f5b4 = inttoptr i32 %v2_f5b4 to i32*
  store i32 %v0_f5b4, i32* %v3_f5b4, align 4
  %v1_f5d4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f5b8

dec_label_pc_f5b8:                                ; preds = %dec_label_pc_f560, %bb59
  %v1_f5d4 = phi i32 [ %v3_f56c, %dec_label_pc_f560 ], [ %v1_f5d4.pre, %bb59 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f5bc = load i32, i32* @r8, align 4
  %v2_f5bc = add i32 %v0_f5bc, 168
  %v3_f5bc = inttoptr i32 %v2_f5bc to i32*
  %v4_f5bc = load i32, i32* %v3_f5bc, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_f5c4 = add i32 %v0_f5bc, 160
  %v3_f5c4 = inttoptr i32 %v2_f5c4 to i32*
  %v4_f5c4 = load i32, i32* %v3_f5c4, align 4
  store i32 %v4_f5c4, i32* %r7.global-to-local, align 4
  %v1_f5c8 = add i32 %v4_f5bc, 4
  %v2_f5c8 = inttoptr i32 %v1_f5c8 to i32*
  %v3_f5c8 = load i32, i32* %v2_f5c8, align 4
  store i32 %v3_f5c8, i32* %r3.global-to-local, align 4
  %v1_f5cc = add i32 %v4_f5c4, 8
  %v2_f5cc = inttoptr i32 %v1_f5cc to i32*
  %v3_f5cc = load i32, i32* %v2_f5cc, align 4
  store i32 %v3_f5cc, i32* %r2.global-to-local, align 4
  %v1_f5d0 = add i32 %v3_f5c8, 1
  store i32 %v1_f5d0, i32* %r3.global-to-local, align 4
  %v3_f5d4 = icmp uge i32 %v3_f5cc, %v1_f5d4
  store i1 %v3_f5d4, i1* %cpsr_c.global-to-local, align 1
  %v9_f5d4 = icmp eq i32 %v3_f5cc, %v1_f5d4
  store i32 %v1_f5d0, i32* %v2_f5c8, align 4
  br i1 %v9_f5d4, label %dec_label_pc_f620, label %dec_label_pc_f5e0

dec_label_pc_f5e0:                                ; preds = %dec_label_pc_f5b8
  %v0_f5e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f5e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_f5ec95 = inttoptr i32 %v0_f5e4 to i32*
  %v2_f5ec96 = load i32, i32* %v1_f5ec95, align 4
  store i32 %v2_f5ec96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_f5f098 = icmp eq i32 %v2_f5ec96, 0
  br i1 %v9_f5f098, label %dec_label_pc_f5f8, label %dec_label_pc_f610

dec_label_pc_f5f8:                                ; preds = %dec_label_pc_f5e0, %dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge
  %v0_f5f899 = phi i32 [ %v1_f5f0.pre, %dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge ], [ 0, %dec_label_pc_f5e0 ]
  store i32 %v0_f5f899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f608 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f608, label %dec_label_pc_f60c, label %dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge

dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge:    ; preds = %dec_label_pc_f5f8
  %v0_f5ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f5f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f5ec = inttoptr i32 %v0_f5ec.pre to i32*
  %v2_f5ec = load i32, i32* %v1_f5ec, align 4
  store i32 %v2_f5ec, i32* %r3.global-to-local, align 4
  %v3_f5f0 = icmp uge i32 %v2_f5ec, %v1_f5f0.pre
  store i1 %v3_f5f0, i1* %cpsr_c.global-to-local, align 1
  %v9_f5f0 = icmp eq i32 %v2_f5ec, %v1_f5f0.pre
  br i1 %v9_f5f0, label %dec_label_pc_f5f8, label %dec_label_pc_f610

dec_label_pc_f60c:                                ; preds = %dec_label_pc_f5f8
  %v0_f60c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f60c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %dec_label_pc_f5e0, %dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge, %dec_label_pc_f60c
  %v0_f610 = phi i32 [ %v0_f60c, %dec_label_pc_f60c ], [ %v2_f5ec96, %dec_label_pc_f5e0 ], [ %v2_f5ec, %dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge ]
  %v1_f610 = phi i32 [ %v0_f60c, %dec_label_pc_f60c ], [ 0, %dec_label_pc_f5e0 ], [ %v1_f5f0.pre, %dec_label_pc_f5f8.dec_label_pc_f5ec_crit_edge ]
  %v3_f610 = icmp uge i32 %v0_f610, %v1_f610
  store i1 %v3_f610, i1* %cpsr_c.global-to-local, align 1
  %v9_f610 = icmp eq i32 %v0_f610, %v1_f610
  br i1 %v9_f610, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_f610
  %v1_f614 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_f614, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_f610, %bb60
  %v1_f618 = xor i1 %v9_f610, true
  call void @__pseudo_cond_branch(i1 %v1_f618, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_f61c = load i32, i32* %r6.global-to-local, align 4
  %v1_f61c = load i32, i32* %r7.global-to-local, align 4
  %v2_f61c = add i32 %v1_f61c, 8
  %v3_f61c = inttoptr i32 %v2_f61c to i32*
  store i32 %v0_f61c, i32* %v3_f61c, align 4
  br label %dec_label_pc_f620

dec_label_pc_f620:                                ; preds = %dec_label_pc_f5b8, %bb61
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_f624 = load i32, i32* @r8, align 4
  %v2_f624 = add i32 %v0_f624, 160
  %v3_f624 = inttoptr i32 %v2_f624 to i32*
  %v4_f624 = load i32, i32* %v3_f624, align 4
  store i32 %v4_f624, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_f62c = add i32 %v0_f624, 84
  %v3_f62c = inttoptr i32 %v2_f62c to i32*
  %v4_f62c = load i32, i32* %v3_f62c, align 4
  store i32 %v4_f62c, i32* @r1, align 4
  %v1_f630 = add i32 %v4_f624, 4
  %v2_f630 = inttoptr i32 %v1_f630 to i32*
  %v3_f630 = load i32, i32* %v2_f630, align 4
  store i32 %v3_f630, i32* %r3.global-to-local, align 4
  %v1_f634 = inttoptr i32 %v4_f62c to i32*
  %v2_f634 = load i32, i32* %v1_f634, align 4
  store i32 %v2_f634, i32* @r2, align 4
  %v1_f638 = add i32 %v3_f630, 1
  store i32 %v1_f638, i32* %r3.global-to-local, align 4
  store i32 %v1_f638, i32* %v2_f630, align 4
  %v0_f640 = load i32, i32* @r2, align 4
  %v1_f640 = load i32, i32* @r5, align 4
  %v2_f640 = add i32 %v1_f640, 32
  %v3_f640 = inttoptr i32 %v2_f640 to i32*
  store i32 %v0_f640, i32* %v3_f640, align 4
  %v0_f644 = load i32, i32* %r0.global-to-local, align 4
  %v1_f644 = add i32 %v0_f644, 4
  %v2_f644 = inttoptr i32 %v1_f644 to i32*
  %v3_f644 = load i32, i32* %v2_f644, align 4
  %v1_f648 = add i32 %v3_f644, -1
  store i32 %v1_f648, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f64c = icmp eq i32 %v1_f648, 0
  %v0_f650 = load i32, i32* @r5, align 4
  %v1_f650 = load i32, i32* @r1, align 4
  %v2_f650 = inttoptr i32 %v1_f650 to i32*
  store i32 %v0_f650, i32* %v2_f650, align 4
  %v0_f654 = load i32, i32* %r3.global-to-local, align 4
  %v1_f654 = load i32, i32* %r0.global-to-local, align 4
  %v2_f654 = add i32 %v1_f654, 4
  %v3_f654 = inttoptr i32 %v2_f654 to i32*
  store i32 %v0_f654, i32* %v3_f654, align 4
  br i1 %v2_f64c, label %dec_label_pc_f65c, label %dec_label_pc_f6bc

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f620
  %v0_f65c = load i32, i32* %r3.global-to-local, align 4
  %v1_f65c = load i32, i32* %r0.global-to-local, align 4
  %v2_f65c = add i32 %v1_f65c, 8
  %v3_f65c = inttoptr i32 %v2_f65c to i32*
  store i32 %v0_f65c, i32* %v3_f65c, align 4
  %v0_f660 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f660, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f664

dec_label_pc_f664:                                ; preds = %dec_label_pc_f694.dec_label_pc_f664_crit_edge, %dec_label_pc_f65c
  %v0_f664 = phi i32 [ %v0_f664.pre, %dec_label_pc_f694.dec_label_pc_f664_crit_edge ], [ %v0_f660, %dec_label_pc_f65c ]
  %v1_f664 = inttoptr i32 %v0_f664 to i32*
  %v2_f664 = load i32, i32* %v1_f664, align 4
  store i32 %v2_f664, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_f664, i32* @r2, align 4
  %v2_f67083 = load i32, i32* %v1_f664, align 4
  store i32 %v2_f67083, i32* %r3.global-to-local, align 4
  %v3_f67485 = icmp uge i32 %v2_f67083, %v2_f664
  store i1 %v3_f67485, i1* %cpsr_c.global-to-local, align 1
  %v9_f67491 = icmp eq i32 %v2_f67083, %v2_f664
  br i1 %v9_f67491, label %dec_label_pc_f67c, label %dec_label_pc_f694

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f664, %dec_label_pc_f67c.dec_label_pc_f670_crit_edge
  %v0_f67c92 = phi i32 [ %v1_f674.pre, %dec_label_pc_f67c.dec_label_pc_f670_crit_edge ], [ %v2_f664, %dec_label_pc_f664 ]
  store i32 %v0_f67c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f68c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f68c, label %dec_label_pc_f690, label %dec_label_pc_f67c.dec_label_pc_f670_crit_edge

dec_label_pc_f67c.dec_label_pc_f670_crit_edge:    ; preds = %dec_label_pc_f67c
  %v0_f670.pre = load i32, i32* @r2, align 4
  %v1_f674.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f670 = inttoptr i32 %v0_f670.pre to i32*
  %v2_f670 = load i32, i32* %v1_f670, align 4
  store i32 %v2_f670, i32* %r3.global-to-local, align 4
  %v3_f674 = icmp uge i32 %v2_f670, %v1_f674.pre
  store i1 %v3_f674, i1* %cpsr_c.global-to-local, align 1
  %v9_f674 = icmp eq i32 %v2_f670, %v1_f674.pre
  br i1 %v9_f674, label %dec_label_pc_f67c, label %dec_label_pc_f694

dec_label_pc_f690:                                ; preds = %dec_label_pc_f67c
  %v0_f690 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f690, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f694

dec_label_pc_f694:                                ; preds = %dec_label_pc_f664, %dec_label_pc_f67c.dec_label_pc_f670_crit_edge, %dec_label_pc_f690
  %v0_f69c = phi i32 [ %v0_f690, %dec_label_pc_f690 ], [ %v2_f67083, %dec_label_pc_f664 ], [ %v2_f670, %dec_label_pc_f67c.dec_label_pc_f670_crit_edge ]
  %v1_f694 = phi i32 [ %v0_f690, %dec_label_pc_f690 ], [ %v2_f664, %dec_label_pc_f664 ], [ %v1_f674.pre, %dec_label_pc_f67c.dec_label_pc_f670_crit_edge ]
  %v3_f694 = icmp uge i32 %v0_f69c, %v1_f694
  store i1 %v3_f694, i1* %cpsr_c.global-to-local, align 1
  %v9_f694 = icmp eq i32 %v0_f69c, %v1_f694
  br i1 %v9_f694, label %dec_label_pc_f69c, label %dec_label_pc_f694.dec_label_pc_f664_crit_edge

dec_label_pc_f694.dec_label_pc_f664_crit_edge:    ; preds = %dec_label_pc_f694
  %v0_f664.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f664

dec_label_pc_f69c:                                ; preds = %dec_label_pc_f694
  %v2_f69c = icmp ne i32 %v1_f694, 0
  store i1 %v2_f69c, i1* %cpsr_c.global-to-local, align 1
  %v7_f6a0 = icmp slt i32 %v1_f694, 2
  br i1 %v7_f6a0, label %dec_label_pc_f6bc, label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f69c
  %v0_f6a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f6a4, i32* %r0.global-to-local, align 4
  %v0_f6a8 = load i32, i32* @r1, align 4
  %v1_f6a8 = add i32 %v0_f6a8, 129
  store i32 %v1_f6a8, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f6bc

dec_label_pc_f6bc:                                ; preds = %dec_label_pc_f620, %dec_label_pc_f6a4, %dec_label_pc_f69c
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_f6c0 = load i32, i32* @r8, align 4
  %v2_f6c0 = add i32 %v0_f6c0, 168
  %v3_f6c0 = inttoptr i32 %v2_f6c0 to i32*
  %v4_f6c0 = load i32, i32* %v3_f6c0, align 4
  store i32 %v4_f6c0, i32* %r0.global-to-local, align 4
  %v1_f6c4 = add i32 %v4_f6c0, 4
  %v2_f6c4 = inttoptr i32 %v1_f6c4 to i32*
  %v3_f6c4 = load i32, i32* %v2_f6c4, align 4
  %v1_f6c8 = add i32 %v3_f6c4, -1
  store i32 %v1_f6c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6cc = icmp eq i32 %v1_f6c8, 0
  store i32 %v1_f6c8, i32* %v2_f6c4, align 4
  br i1 %v2_f6cc, label %dec_label_pc_f6d8, label %dec_label_pc_f740

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6bc
  %v0_f6d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_f6d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_f6d8 = add i32 %v1_f6d8, 8
  %v3_f6d8 = inttoptr i32 %v2_f6d8 to i32*
  store i32 %v0_f6d8, i32* %v3_f6d8, align 4
  %v0_f6dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f6dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f6e0

dec_label_pc_f6e0:                                ; preds = %dec_label_pc_f710.dec_label_pc_f6e0_crit_edge, %dec_label_pc_f6d8
  %v0_f6e0 = phi i32 [ %v0_f6e0.pre, %dec_label_pc_f710.dec_label_pc_f6e0_crit_edge ], [ %v0_f6dc, %dec_label_pc_f6d8 ]
  %v1_f6e0 = inttoptr i32 %v0_f6e0 to i32*
  %v2_f6e0 = load i32, i32* %v1_f6e0, align 4
  store i32 %v2_f6e0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_f6e0, i32* @r2, align 4
  %v2_f6ec71 = load i32, i32* %v1_f6e0, align 4
  store i32 %v2_f6ec71, i32* %r3.global-to-local, align 4
  %v3_f6f073 = icmp uge i32 %v2_f6ec71, %v2_f6e0
  store i1 %v3_f6f073, i1* %cpsr_c.global-to-local, align 1
  %v9_f6f079 = icmp eq i32 %v2_f6ec71, %v2_f6e0
  br i1 %v9_f6f079, label %dec_label_pc_f6f8, label %dec_label_pc_f710

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f6e0, %dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge
  %v0_f6f880 = phi i32 [ %v1_f6f0.pre, %dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge ], [ %v2_f6e0, %dec_label_pc_f6e0 ]
  store i32 %v0_f6f880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f708 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f708, label %dec_label_pc_f70c, label %dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge

dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge:    ; preds = %dec_label_pc_f6f8
  %v0_f6ec.pre = load i32, i32* @r2, align 4
  %v1_f6f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f6ec = inttoptr i32 %v0_f6ec.pre to i32*
  %v2_f6ec = load i32, i32* %v1_f6ec, align 4
  store i32 %v2_f6ec, i32* %r3.global-to-local, align 4
  %v3_f6f0 = icmp uge i32 %v2_f6ec, %v1_f6f0.pre
  store i1 %v3_f6f0, i1* %cpsr_c.global-to-local, align 1
  %v9_f6f0 = icmp eq i32 %v2_f6ec, %v1_f6f0.pre
  br i1 %v9_f6f0, label %dec_label_pc_f6f8, label %dec_label_pc_f710

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f6f8
  %v0_f70c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f70c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f710

dec_label_pc_f710:                                ; preds = %dec_label_pc_f6e0, %dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge, %dec_label_pc_f70c
  %v0_f718 = phi i32 [ %v0_f70c, %dec_label_pc_f70c ], [ %v2_f6ec71, %dec_label_pc_f6e0 ], [ %v2_f6ec, %dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge ]
  %v1_f710 = phi i32 [ %v0_f70c, %dec_label_pc_f70c ], [ %v2_f6e0, %dec_label_pc_f6e0 ], [ %v1_f6f0.pre, %dec_label_pc_f6f8.dec_label_pc_f6ec_crit_edge ]
  %v3_f710 = icmp uge i32 %v0_f718, %v1_f710
  store i1 %v3_f710, i1* %cpsr_c.global-to-local, align 1
  %v9_f710 = icmp eq i32 %v0_f718, %v1_f710
  br i1 %v9_f710, label %dec_label_pc_f718, label %dec_label_pc_f710.dec_label_pc_f6e0_crit_edge

dec_label_pc_f710.dec_label_pc_f6e0_crit_edge:    ; preds = %dec_label_pc_f710
  %v0_f6e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f6e0

dec_label_pc_f718:                                ; preds = %dec_label_pc_f710
  %v2_f718 = icmp ne i32 %v1_f710, 0
  store i1 %v2_f718, i1* %cpsr_c.global-to-local, align 1
  %v7_f71c = icmp slt i32 %v1_f710, 2
  br i1 %v7_f71c, label %dec_label_pc_f740, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %dec_label_pc_f718
  %v0_f720 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f720, i32* %r0.global-to-local, align 4
  %v0_f724 = load i32, i32* @r1, align 4
  %v1_f724 = add i32 %v0_f724, 129
  store i32 %v1_f724, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f740

dec_label_pc_f73c:                                ; preds = %dec_label_pc_f380, %dec_label_pc_f364, %dec_label_pc_f38c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %dec_label_pc_f6bc, %bb57, %dec_label_pc_f3c4, %dec_label_pc_f718, %dec_label_pc_f720, %dec_label_pc_f73c
  %v0_f740 = load i32, i32* @r5, align 4
  store i32 %v0_f740, i32* %r0.global-to-local, align 4
  %v2_f748 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_f748, i32* @r4, align 4
  store i32 %v6_f324, i32* @r5, align 4
  store i32 %v9_f324, i32* @r6, align 4
  store i32 %v12_f324, i32* @r7, align 4
  store i32 %v15_f324, i32* @r8, align 4
  ret i32 %v0_f740

; uselistorder directives
  uselistorder i32 %v0_f70c, { 1, 0, 2 }
  uselistorder i32 %v1_f6f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f6e0, { 1, 0 }
  uselistorder i32 %v0_f690, { 1, 0, 2 }
  uselistorder i32 %v1_f674.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f664, { 1, 0 }
  uselistorder i32 %v0_f60c, { 1, 0, 2 }
  uselistorder i32 %v1_f5f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f5a4, { 1, 0, 2 }
  uselistorder i32 %v1_f588, { 0, 2, 1 }
  uselistorder i32 %v4_f564, { 2, 1, 0, 3 }
  uselistorder i32 %v1_f514.pre, { 2, 1, 0 }
  uselistorder i32 %v0_f498, { 1, 2, 0 }
  uselistorder i32 %v1_f428, { 1, 0 }
  uselistorder i32 %v0_f428, { 1, 0 }
  uselistorder i32 %v1_f410, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f3b4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 3, 5, 4, 6, 7, 9, 8, 10, 12, 11, 13, 14, 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 6, 5, 7, 9, 8, 10, 12, 11, 13, 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 25, 26, 28, 27, 1, 29, 30, 31, 32, 33, 35, 34, 53, 37, 36, 38, 39, 40, 41, 42, 43, 45, 44, 2, 46, 47, 48, 49, 50, 51, 52, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 0, 1, 3, 2, 4, 6, 5, 10, 7, 8, 9, 12, 11, 13, 14 }
  uselistorder i1* %cpsr_c.global-to-local, { 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 1, 30, 31, 33, 32, 0, 34, 35, 36, 37, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 0 }
  uselistorder i32 131072, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 5, 6, 0, 4, 3, 2, 1 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_f740, { 5, 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f73c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f710, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f6f8, { 1, 0 }
  uselistorder label %dec_label_pc_f6bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f694, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f67c, { 1, 0 }
  uselistorder label %dec_label_pc_f620, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_f610, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f5f8, { 1, 0 }
  uselistorder label %dec_label_pc_f5b8, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_f5a8, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f4f0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_f458._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f400, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_f39c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f364, { 1, 2, 0 }
}

define i32 @function_f754(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f754:
  %v0_f754 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f754, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_f754
  %v5_f754 = sdiv i32 %arg2, 16
  %v6_f754 = and i32 %v5_f754, %arg1
  %v5_f758 = sdiv i32 %arg2, 256
  %v6_f758 = and i32 %v6_f754, %v5_f758
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f754, %bb
  %v3_f75c = phi i32 [ %arg1, %dec_label_pc_f754 ], [ %v6_f758, %bb ]
  ret i32 %v3_f75c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_f78c = call i32 @__aeabi_read_tp()
  %v3_f790 = load i16, i16* @global_var_22308.76, align 2
  %v4_f790 = sext i16 %v3_f790 to i32
  store i32 %v4_f790, i32* @r3, align 4
  store i32 %v0_f78c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_f79c = add i32 %v4_f790, %v0_f78c
  %v3_f79c = inttoptr i32 %v2_f79c to i32*
  %v4_f79c = load i32, i32* %v3_f79c, align 4
  store i32 %v4_f79c, i32* @r6, align 4
  %v1_f7a0 = call i32 @isatty(i32 0)
  %v2_f7a8 = icmp eq i32 %v1_f7a0, 0
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  br i1 %v2_f7a8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_f7b4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 492) to i16*), align 4
  %v7_f7b4 = zext i16 %v5_f7b4 to i32
  %v2_f7b8 = xor i32 %v7_f7b4, 256
  store i32 %v2_f7b8, i32* @r3, align 4
  %v2_f7bc = trunc i32 %v2_f7b8 to i16
  store i16 %v2_f7bc, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 492) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_f7c4 = call i32 @isatty(i32 1)
  %v2_f7c8 = icmp eq i32 %v1_f7c4, 0
  br i1 %v2_f7c8, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_f7d0 = load i32, i32* @r4, align 4
  %v2_f7d4 = add i32 %v1_f7d0, 560
  %v3_f7d4 = inttoptr i32 %v2_f7d4 to i16*
  %v4_f7d4 = load i16, i16* %v3_f7d4, align 2
  %v2_f7d8 = xor i16 %v4_f7d4, 256
  store i16 %v2_f7d8, i16* %v3_f7d4, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_f7e4 = load i16, i16* @global_var_22308.76, align 2
  %v4_f7e4 = sext i16 %v3_f7e4 to i32
  %v0_f7e8 = load i32, i32* @r6, align 4
  %v1_f7e8 = load i32, i32* @r5, align 4
  %v3_f7e8 = add i32 %v1_f7e8, %v4_f7e4
  %v4_f7e8 = inttoptr i32 %v3_f7e8 to i32*
  store i32 %v0_f7e8, i32* %v4_f7e8, align 4
  ret i32 %v1_f7c4

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_f804 = load i32, i32* @r4, align 4
  store i32 %v3_f804, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37228), i32* %r3.global-to-local, align 4
  %v2_f818 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37228) to i32*), align 4
  store i32 %v2_f818, i32* %r0.global-to-local, align 4
  %v5_f818 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37224) to i32*), align 4
  store i32 %v5_f818, i32* %r1.global-to-local, align 4
  %v8_f818 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37220) to i32*), align 4
  %v2_f820 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_f820, i32* %r3.global-to-local, align 4
  store i32 %v2_f818, i32* %stack_var_-44, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v4_f82c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 160) to i32*), align 4
  store i32 %v2_f818, i32* %r0.global-to-local, align 4
  store i32 %v5_f818, i32* %r1.global-to-local, align 4
  store i32 %v8_f818, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37240), i32* %r3.global-to-local, align 4
  %v1_f83c = inttoptr i32 %v4_f82c to i32*
  store i32 %v2_f818, i32* %v1_f83c, align 4
  %v3_f83c = add i32 %v4_f82c, 4
  %v4_f83c = inttoptr i32 %v3_f83c to i32*
  %v5_f83c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_f83c, i32* %v4_f83c, align 4
  %v6_f83c = add i32 %v4_f82c, 8
  %v7_f83c = inttoptr i32 %v6_f83c to i32*
  %v8_f83c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f83c, i32* %v7_f83c, align 4
  %v0_f840 = load i32, i32* %r3.global-to-local, align 4
  %v1_f840 = inttoptr i32 %v0_f840 to i32*
  %v2_f840 = load i32, i32* %v1_f840, align 4
  store i32 %v2_f840, i32* %r0.global-to-local, align 4
  %v3_f840 = add i32 %v0_f840, 4
  %v4_f840 = inttoptr i32 %v3_f840 to i32*
  %v5_f840 = load i32, i32* %v4_f840, align 4
  store i32 %v5_f840, i32* %r1.global-to-local, align 4
  %v6_f840 = add i32 %v0_f840, 8
  %v7_f840 = inttoptr i32 %v6_f840 to i32*
  %v8_f840 = load i32, i32* %v7_f840, align 4
  %v2_f844 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_f844, i32* %r3.global-to-local, align 4
  store i32 %v2_f840, i32* %stack_var_-56, align 4
  store i32 84, i32* %r2.global-to-local, align 4
  %v0_f850 = load i32, i32* %r7.global-to-local, align 4
  %v2_f850 = add i32 %v0_f850, 84
  %v3_f850 = inttoptr i32 %v2_f850 to i32*
  %v4_f850 = load i32, i32* %v3_f850, align 4
  store i32 %v4_f850, i32* %r1.global-to-local, align 4
  store i32 168, i32* %r2.global-to-local, align 4
  %v1_f858 = inttoptr i32 %v4_f850 to i32*
  %v2_f858 = load i32, i32* %v1_f858, align 4
  store i32 %v2_f858, i32* %r5.global-to-local, align 4
  %v2_f85c = add i32 %v0_f850, 168
  %v3_f85c = inttoptr i32 %v2_f85c to i32*
  %v4_f85c = load i32, i32* %v3_f85c, align 4
  store i32 %v2_f840, i32* %r0.global-to-local, align 4
  store i32 %v5_f840, i32* %r1.global-to-local, align 4
  store i32 %v8_f840, i32* %r2.global-to-local, align 4
  store i32 -37252, i32* %r3.global-to-local, align 4
  %v2_f86c = add i32 %v0_f850, -37252
  store i32 %v2_f86c, i32* %sl.global-to-local, align 4
  %v1_f870 = inttoptr i32 %v4_f85c to i32*
  store i32 %v2_f840, i32* %v1_f870, align 4
  %v3_f870 = add i32 %v4_f85c, 4
  %v4_f870 = inttoptr i32 %v3_f870 to i32*
  %v5_f870 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_f870, i32* %v4_f870, align 4
  %v6_f870 = add i32 %v4_f85c, 8
  %v7_f870 = inttoptr i32 %v6_f870 to i32*
  %v8_f870 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f870, i32* %v7_f870, align 4
  %v0_f900.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f90016 = icmp eq i32 %v0_f900.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_f90818 = add i32 %v0_f900.pr, 56
  store i32 %v1_f90818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_f90016, label %dec_label_pc_f914, label %dec_label_pc_f878

dec_label_pc_f878:                                ; preds = %entry, %.thread10
  %v0_f878 = phi i32 [ %v3_f8fc, %.thread10 ], [ %v0_f900.pr, %entry ]
  %v1_f878 = add i32 %v0_f878, 64
  %v2_f878 = inttoptr i32 %v1_f878 to i32*
  %v3_f878 = load i32, i32* %v2_f878, align 4
  store i32 %v3_f878, i32* %r3.global-to-local, align 4
  %v0_f87c = call i32 @__aeabi_read_tp()
  store i32 %v0_f87c, i32* %r0.global-to-local, align 4
  %v1_f880 = add i32 %v0_f87c, -1168
  store i32 %v1_f880, i32* %r6.global-to-local, align 4
  %v3_f884 = icmp uge i32 %v3_f878, %v1_f880
  store i1 %v3_f884, i1* %cpsr_c.global-to-local, align 1
  %v9_f884 = icmp eq i32 %v3_f878, %v1_f880
  br i1 %v9_f884, label %.thread1, label %dec_label_pc_f898

.thread1:                                         ; preds = %dec_label_pc_f878
  %v1_f888 = load i32, i32* %r5.global-to-local, align 4
  %v2_f888 = add i32 %v1_f888, 60
  %v3_f888 = inttoptr i32 %v2_f888 to i32*
  %v4_f888 = load i32, i32* %v3_f888, align 4
  %v2_f88c = add i32 %v4_f888, 1
  store i32 %v2_f88c, i32* %r3.global-to-local, align 4
  store i32 %v2_f88c, i32* %v3_f888, align 4
  br label %.thread10

dec_label_pc_f898:                                ; preds = %dec_label_pc_f878, %dec_label_pc_f8a4
  %v0_f898 = load i32, i32* %r2.global-to-local, align 4
  %v1_f898 = inttoptr i32 %v0_f898 to i32*
  %v2_f898 = load i32, i32* %v1_f898, align 4
  store i32 %v2_f898, i32* %r3.global-to-local, align 4
  %v1_f89c = load i32, i32* %r4.global-to-local, align 4
  %v3_f89c = icmp uge i32 %v2_f898, %v1_f89c
  store i1 %v3_f89c, i1* %cpsr_c.global-to-local, align 1
  %v9_f89c = icmp eq i32 %v2_f898, %v1_f89c
  br i1 %v9_f89c, label %dec_label_pc_f8a4, label %dec_label_pc_f8bc

dec_label_pc_f8a4:                                ; preds = %dec_label_pc_f898
  store i32 %v2_f898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_f8b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f8b4, label %dec_label_pc_f8b8, label %dec_label_pc_f898

dec_label_pc_f8b8:                                ; preds = %dec_label_pc_f8a4
  %v0_f8b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f8b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f8bc

dec_label_pc_f8bc:                                ; preds = %dec_label_pc_f898, %dec_label_pc_f8b8
  %v0_f8bc = phi i32 [ %v0_f8b8, %dec_label_pc_f8b8 ], [ %v2_f898, %dec_label_pc_f898 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8bc = icmp eq i32 %v0_f8bc, 0
  %v2_f8c8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_f8bc, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_f8bc
  %v1_f8c8 = load i32, i32* %r6.global-to-local, align 4
  %v3_f8c8 = add i32 %v2_f8c8.pre, 64
  %v4_f8c8 = inttoptr i32 %v3_f8c8 to i32*
  store i32 %v1_f8c8, i32* %v4_f8c8, align 4
  %v1_f8cc = load i32, i32* %r1.global-to-local, align 4
  %v2_f8cc = load i32, i32* %r5.global-to-local, align 4
  %v3_f8cc = add i32 %v2_f8cc, 60
  %v4_f8cc = inttoptr i32 %v3_f8cc to i32*
  store i32 %v1_f8cc, i32* %v4_f8cc, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_f8bc
  %v2_f8c0 = add i32 %v2_f8c8.pre, 8
  %v3_f8c0 = inttoptr i32 %v2_f8c0 to i32*
  %v4_f8c0 = load i32, i32* %v3_f8c0, align 4
  store i32 %v4_f8c0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_f8d0 = add i32 %v2_f8c8.pre, 20
  %v4_f8d0 = inttoptr i32 %v3_f8d0 to i32*
  store i32 %v4_f8c0, i32* %v4_f8d0, align 4
  %v1_f8d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_f8d4 = trunc i32 %v1_f8d4 to i16
  %v3_f8d4 = load i32, i32* %r5.global-to-local, align 4
  %v4_f8d4 = inttoptr i32 %v3_f8d4 to i16*
  store i16 %v2_f8d4, i16* %v4_f8d4, align 2
  %v1_f8d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8d8 = load i32, i32* %r5.global-to-local, align 4
  %v3_f8d8 = add i32 %v2_f8d8, 24
  %v4_f8d8 = inttoptr i32 %v3_f8d8 to i32*
  store i32 %v1_f8d8, i32* %v4_f8d8, align 4
  %v1_f8dc = load i32, i32* %r3.global-to-local, align 4
  %v2_f8dc = load i32, i32* %r5.global-to-local, align 4
  %v3_f8dc = add i32 %v2_f8dc, 28
  %v4_f8dc = inttoptr i32 %v3_f8dc to i32*
  store i32 %v1_f8dc, i32* %v4_f8dc, align 4
  %v1_f8e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8e0 = load i32, i32* %r5.global-to-local, align 4
  %v3_f8e0 = add i32 %v2_f8e0, 16
  %v4_f8e0 = inttoptr i32 %v3_f8e0 to i32*
  store i32 %v1_f8e0, i32* %v4_f8e0, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_f8e4 = load i32, i32* %sl.global-to-local, align 4
  %v1_f8e4 = inttoptr i32 %v0_f8e4 to i32*
  %v2_f8e4 = load i32, i32* %v1_f8e4, align 4
  store i32 %v2_f8e4, i32* %r0.global-to-local, align 4
  %v3_f8e4 = add i32 %v0_f8e4, 4
  %v4_f8e4 = inttoptr i32 %v3_f8e4 to i32*
  %v5_f8e4 = load i32, i32* %v4_f8e4, align 4
  store i32 %v5_f8e4, i32* %r1.global-to-local, align 4
  %v6_f8e4 = add i32 %v0_f8e4, 8
  %v7_f8e4 = inttoptr i32 %v6_f8e4 to i32*
  %v8_f8e4 = load i32, i32* %v7_f8e4, align 4
  store i32 %v8_f8e4, i32* %r2.global-to-local, align 4
  %v1_f8ec = load i32, i32* %r5.global-to-local, align 4
  %v2_f8ec = add i32 %v1_f8ec, 52
  %v3_f8ec = inttoptr i32 %v2_f8ec to i32*
  store i32 1, i32* %v3_f8ec, align 4
  %v0_f8f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_f8f0 = add i32 %v0_f8f0, 56
  store i32 %v1_f8f0, i32* %r3.global-to-local, align 4
  %v2_f8f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f8f8 = inttoptr i32 %v1_f8f0 to i32*
  store i32 %v2_f8f4, i32* %v1_f8f8, align 4
  %v3_f8f8 = add i32 %v0_f8f0, 60
  %v4_f8f8 = inttoptr i32 %v3_f8f8 to i32*
  %v5_f8f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_f8f8, i32* %v4_f8f8, align 4
  %v6_f8f8 = add i32 %v0_f8f0, 64
  %v7_f8f8 = inttoptr i32 %v6_f8f8 to i32*
  %v8_f8f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_f8f8, i32* %v7_f8f8, align 4
  %v0_f8fc = load i32, i32* %r5.global-to-local, align 4
  %v1_f8fc = add i32 %v0_f8fc, 32
  %v2_f8fc = inttoptr i32 %v1_f8fc to i32*
  %v3_f8fc = load i32, i32* %v2_f8fc, align 4
  store i32 %v3_f8fc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f900 = icmp eq i32 %v3_f8fc, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_f908 = add i32 %v3_f8fc, 56
  store i32 %v1_f908, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_f900, label %dec_label_pc_f914, label %dec_label_pc_f878

dec_label_pc_f914:                                ; preds = %.thread10, %entry
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_f918 = load i32, i32* %r7.global-to-local, align 4
  %v2_f918 = add i32 %v0_f918, 84
  %v3_f918 = inttoptr i32 %v2_f918 to i32*
  %v4_f918 = load i32, i32* %v3_f918, align 4
  store i32 %v4_f918, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_f918 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f93814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_f93814, label %dec_label_pc_f940, label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %dec_label_pc_f914, %dec_label_pc_f938
  %v1_f92c = phi i32 [ %storemerge, %dec_label_pc_f938 ], [ %storemerge12, %dec_label_pc_f914 ]
  %v1_f924 = inttoptr i32 %v1_f92c to i16*
  %v2_f924 = load i16, i16* %v1_f924, align 2
  %v3_f924 = zext i16 %v2_f924 to i32
  store i32 %v3_f924, i32* %r3.global-to-local, align 4
  %v1_f928 = and i32 %v3_f924, 64
  %v2_f928 = icmp eq i32 %v1_f928, 0
  br i1 %v2_f928, label %dec_label_pc_f938, label %bb39

bb39:                                             ; preds = %dec_label_pc_f924
  store i32 %v1_f92c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f938

dec_label_pc_f938:                                ; preds = %dec_label_pc_f924, %bb39
  %v1_f930 = xor i1 %v2_f928, true
  call void @__pseudo_cond_branch(i1 %v1_f930, i32 ptrtoint (i32* @global_var_f968.357 to i32))
  %v0_f934 = load i32, i32* %r4.global-to-local, align 4
  %v1_f934 = add i32 %v0_f934, 32
  %storemerge.in = inttoptr i32 %v1_f934 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f938 = icmp eq i32 %storemerge, 0
  br i1 %v2_f938, label %dec_label_pc_f940, label %dec_label_pc_f924

dec_label_pc_f940:                                ; preds = %dec_label_pc_f938, %dec_label_pc_f914
  %v2_f944 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_f944, i32* %r4.global-to-local, align 4
  %v1_f948 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f948

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_f8fc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f89c, { 1, 0 }
  uselistorder i32 %v4_f85c, { 2, 1, 0 }
  uselistorder i32 %v4_f82c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_f938, { 1, 0 }
  uselistorder label %dec_label_pc_f924, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f8bc, { 1, 0 }
  uselistorder label %dec_label_pc_f898, { 1, 0 }
  uselistorder label %dec_label_pc_f878, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f968 = load i32, i32* @r4, align 4
  store i32 %v3_f968, i32* %stack_var_-8, align 4
  %v0_f96c = load i32, i32* @r0, align 4
  %v1_f96c = add i32 %v0_f96c, 8
  %v2_f96c = inttoptr i32 %v1_f96c to i32*
  %v3_f96c = load i32, i32* %v2_f96c, align 4
  store i32 %v3_f96c, i32* @r1, align 4
  %v1_f970 = add i32 %v0_f96c, 16
  %v2_f970 = inttoptr i32 %v1_f970 to i32*
  %v3_f970 = load i32, i32* %v2_f970, align 4
  %v9_f974 = icmp eq i32 %v3_f970, %v3_f96c
  store i32 %v0_f96c, i32* %r4.global-to-local, align 4
  br i1 %v9_f974, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_f96c, i32* %v2_f970, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_f980 = xor i1 %v9_f974, true
  call void @__pseudo_cond_branch(i1 %v1_f980, i32 ptrtoint (i32* @global_var_11e04.358 to i32))
  %v0_f984 = load i32, i32* %r4.global-to-local, align 4
  %v1_f984 = add i32 %v0_f984, 8
  %v2_f984 = inttoptr i32 %v1_f984 to i32*
  %v3_f984 = load i32, i32* %v2_f984, align 4
  store i32 %v3_f984, i32* @r3, align 4
  %v1_f988 = add i32 %v0_f984, 16
  %v2_f988 = inttoptr i32 %v1_f988 to i32*
  %v3_f988 = load i32, i32* %v2_f988, align 4
  %v2_f98c = sub i32 %v3_f988, %v3_f984
  %v2_f990 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f990, i32* @r4, align 4
  ret i32 %v2_f98c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f998 = load i32, i32* @r4, align 4
  store i32 %v3_f998, i32* %stack_var_-20, align 4
  %v6_f998 = load i32, i32* @r5, align 4
  %v9_f998 = load i32, i32* @r6, align 4
  %v12_f998 = load i32, i32* @r7, align 4
  %v15_f998 = load i32, i32* @lr, align 4
  %v1_f99c = add i32 %arg1, 52
  %v2_f99c = inttoptr i32 %v1_f99c to i32*
  %v3_f99c = load i32, i32* %v2_f99c, align 4
  store i32 %v3_f99c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9a0 = icmp eq i32 %v3_f99c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_f9a0, label %dec_label_pc_f9d4, label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %entry
  %v1_f9b0 = add i32 %arg1, 16
  %v2_f9b0 = inttoptr i32 %v1_f9b0 to i32*
  %v3_f9b0 = load i32, i32* %v2_f9b0, align 4
  store i32 %v3_f9b0, i32* %r2.global-to-local, align 4
  %v1_f9b4 = add i32 %arg1, 24
  %v2_f9b4 = inttoptr i32 %v1_f9b4 to i32*
  %v3_f9b4 = load i32, i32* %v2_f9b4, align 4
  store i32 %v3_f9b4, i32* %r3.global-to-local, align 4
  %v3_f9b8 = icmp uge i32 %v3_f9b0, %v3_f9b4
  store i1 %v3_f9b8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_f9b8, label %dec_label_pc_f9c8, label %.thread

.thread:                                          ; preds = %dec_label_pc_f9b0
  %v2_f9bc = inttoptr i32 %v3_f9b0 to i8*
  %v3_f9bc = load i8, i8* %v2_f9bc, align 1
  %v4_f9bc = zext i8 %v3_f9bc to i32
  store i32 %v4_f9bc, i32* %r5.global-to-local, align 4
  %v6_f9bc = add i32 %v3_f9b0, 1
  store i32 %v6_f9bc, i32* %r2.global-to-local, align 4
  store i32 %v6_f9bc, i32* %v2_f9b0, align 4
  br label %dec_label_pc_facc

dec_label_pc_f9c8:                                ; preds = %dec_label_pc_f9b0
  %v1_f9c8 = inttoptr i32 %arg1 to i16*
  %v2_f9c8 = call i32 @getc_unlocked(i16* %v1_f9c8)
  store i32 %v2_f9c8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_facc

dec_label_pc_f9d4:                                ; preds = %entry
  %v0_f9d4 = call i32 @__aeabi_read_tp()
  %v0_f9d8 = load i32, i32* @r7, align 4
  %v1_f9d8 = add i32 %v0_f9d8, 64
  %v2_f9d8 = inttoptr i32 %v1_f9d8 to i32*
  %v3_f9d8 = load i32, i32* %v2_f9d8, align 4
  store i32 %v3_f9d8, i32* %r3.global-to-local, align 4
  %v1_f9dc = add i32 %v0_f9d4, -1168
  store i32 %v1_f9dc, i32* @r6, align 4
  %v3_f9e0 = icmp uge i32 %v3_f9d8, %v1_f9dc
  store i1 %v3_f9e0, i1* %cpsr_c.global-to-local, align 1
  %v9_f9e0 = icmp eq i32 %v3_f9d8, %v1_f9dc
  br i1 %v9_f9e0, label %dec_label_pc_fa28, label %dec_label_pc_f9e8

dec_label_pc_f9e8:                                ; preds = %dec_label_pc_f9d4
  %v1_f9e8 = add i32 %v0_f9d8, 56
  store i32 %v1_f9e8, i32* @r5, align 4
  store i32 %v1_f9e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9f4

dec_label_pc_f9f4:                                ; preds = %dec_label_pc_fa00.dec_label_pc_f9f4_crit_edge, %dec_label_pc_f9e8
  %v0_f9f4 = phi i32 [ %v0_f9f4.pre, %dec_label_pc_fa00.dec_label_pc_f9f4_crit_edge ], [ %v1_f9e8, %dec_label_pc_f9e8 ]
  %v1_f9f4 = inttoptr i32 %v0_f9f4 to i32*
  %v2_f9f4 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_f9f4, i32* %r3.global-to-local, align 4
  %v1_f9f8 = load i32, i32* @r4, align 4
  %v3_f9f8 = icmp uge i32 %v2_f9f4, %v1_f9f8
  store i1 %v3_f9f8, i1* %cpsr_c.global-to-local, align 1
  %v9_f9f8 = icmp eq i32 %v2_f9f4, %v1_f9f8
  br i1 %v9_f9f8, label %dec_label_pc_fa00, label %dec_label_pc_fa18

dec_label_pc_fa00:                                ; preds = %dec_label_pc_f9f4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fa10 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fa10, label %dec_label_pc_fa14, label %dec_label_pc_fa00.dec_label_pc_f9f4_crit_edge

dec_label_pc_fa00.dec_label_pc_f9f4_crit_edge:    ; preds = %dec_label_pc_fa00
  %v0_f9f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f9f4

dec_label_pc_fa14:                                ; preds = %dec_label_pc_fa00
  %v0_fa14 = load i32, i32* @r4, align 4
  store i32 %v0_fa14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f9f4, %dec_label_pc_fa14
  %v0_fa18 = phi i32 [ %v0_fa14, %dec_label_pc_fa14 ], [ %v2_f9f4, %dec_label_pc_f9f4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa18 = icmp eq i32 %v0_fa18, 0
  br i1 %v2_fa18, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_fa18
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_fa18, %bb
  store i32 64036, i32* @lr, align 4
  %v1_fa20 = xor i1 %v2_fa18, true
  call void @__pseudo_cond_branch(i1 %v1_fa20, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_fa24 = load i32, i32* @r6, align 4
  %v1_fa24 = load i32, i32* @r7, align 4
  %v2_fa24 = add i32 %v1_fa24, 64
  %v3_fa24 = inttoptr i32 %v2_fa24 to i32*
  store i32 %v0_fa24, i32* %v3_fa24, align 4
  %v0_fa28.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fa28

dec_label_pc_fa28:                                ; preds = %dec_label_pc_f9d4, %bb18
  %v1_fa38 = phi i32 [ %v0_f9d8, %dec_label_pc_f9d4 ], [ %v0_fa28.pre, %bb18 ]
  %v1_fa28 = add i32 %v1_fa38, 60
  %v2_fa28 = inttoptr i32 %v1_fa28 to i32*
  %v3_fa28 = load i32, i32* %v2_fa28, align 4
  store i32 %v3_fa28, i32* %r2.global-to-local, align 4
  %v1_fa2c = add i32 %v1_fa38, 16
  %v2_fa2c = inttoptr i32 %v1_fa2c to i32*
  %v3_fa2c = load i32, i32* %v2_fa2c, align 4
  store i32 %v3_fa2c, i32* @r1, align 4
  %v1_fa30 = add i32 %v1_fa38, 24
  %v2_fa30 = inttoptr i32 %v1_fa30 to i32*
  %v3_fa30 = load i32, i32* %v2_fa30, align 4
  store i32 %v3_fa30, i32* %r3.global-to-local, align 4
  %v1_fa34 = add i32 %v3_fa28, 1
  store i32 %v1_fa34, i32* %r2.global-to-local, align 4
  store i32 %v1_fa34, i32* %v2_fa28, align 4
  %v0_fa3c = load i32, i32* @r1, align 4
  %v1_fa3c = load i32, i32* %r3.global-to-local, align 4
  %v3_fa3c = icmp uge i32 %v0_fa3c, %v1_fa3c
  store i1 %v3_fa3c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_fa3c, label %dec_label_pc_fa4c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_fa28
  %v2_fa40 = inttoptr i32 %v0_fa3c to i8*
  %v3_fa40 = load i8, i8* %v2_fa40, align 1
  %v4_fa40 = zext i8 %v3_fa40 to i32
  store i32 %v4_fa40, i32* %r5.global-to-local, align 4
  %v6_fa40 = add i32 %v0_fa3c, 1
  store i32 %v6_fa40, i32* @r1, align 4
  %v2_fa44 = load i32, i32* @r7, align 4
  %v3_fa44 = add i32 %v2_fa44, 16
  %v4_fa44 = inttoptr i32 %v3_fa44 to i32*
  store i32 %v6_fa40, i32* %v4_fa44, align 4
  br label %dec_label_pc_fa58

dec_label_pc_fa4c:                                ; preds = %dec_label_pc_fa28
  %v0_fa4c = load i32, i32* @r7, align 4
  %v1_fa50 = inttoptr i32 %v0_fa4c to i16*
  %v2_fa50 = call i32 @getc_unlocked(i16* %v1_fa50)
  store i32 %v2_fa50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %.thread2, %dec_label_pc_fa4c
  %v0_fa58 = load i32, i32* @r7, align 4
  %v1_fa58 = add i32 %v0_fa58, 60
  %v2_fa58 = inttoptr i32 %v1_fa58 to i32*
  %v3_fa58 = load i32, i32* %v2_fa58, align 4
  %v1_fa5c = add i32 %v3_fa58, -1
  store i32 %v1_fa5c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa60 = icmp eq i32 %v1_fa5c, 0
  store i32 %v1_fa5c, i32* %v2_fa58, align 4
  br i1 %v2_fa60, label %dec_label_pc_fa6c, label %dec_label_pc_facc

dec_label_pc_fa6c:                                ; preds = %dec_label_pc_fa58
  %v0_fa6c = load i32, i32* %r3.global-to-local, align 4
  %v1_fa6c = load i32, i32* @r7, align 4
  %v2_fa6c = add i32 %v1_fa6c, 64
  %v3_fa6c = inttoptr i32 %v2_fa6c to i32*
  store i32 %v0_fa6c, i32* %v3_fa6c, align 4
  %v0_fa70 = load i32, i32* @r7, align 4
  %v1_fa70 = add i32 %v0_fa70, 56
  store i32 %v1_fa70, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %dec_label_pc_faa4.dec_label_pc_fa74_crit_edge, %dec_label_pc_fa6c
  %v0_fa7c = phi i32 [ %v0_fa7c.pre, %dec_label_pc_faa4.dec_label_pc_fa74_crit_edge ], [ %v1_fa70, %dec_label_pc_fa6c ]
  %v0_fa74 = phi i32 [ %v0_fa74.pre, %dec_label_pc_faa4.dec_label_pc_fa74_crit_edge ], [ %v0_fa70, %dec_label_pc_fa6c ]
  %v1_fa74 = add i32 %v0_fa74, 56
  %v2_fa74 = inttoptr i32 %v1_fa74 to i32*
  %v3_fa74 = load i32, i32* %v2_fa74, align 4
  store i32 %v3_fa74, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_fa7c, i32* %r2.global-to-local, align 4
  %v1_fa8022 = inttoptr i32 %v0_fa7c to i32*
  %v2_fa8023 = load i32, i32* %v1_fa8022, align 4
  store i32 %v2_fa8023, i32* %r3.global-to-local, align 4
  %v3_fa8425 = icmp uge i32 %v2_fa8023, %v3_fa74
  store i1 %v3_fa8425, i1* %cpsr_c.global-to-local, align 1
  %v9_fa8431 = icmp eq i32 %v2_fa8023, %v3_fa74
  br i1 %v9_fa8431, label %dec_label_pc_fa8c, label %dec_label_pc_faa4

dec_label_pc_fa8c:                                ; preds = %dec_label_pc_fa74, %dec_label_pc_fa8c.dec_label_pc_fa80_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fa9c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fa9c, label %dec_label_pc_faa0, label %dec_label_pc_fa8c.dec_label_pc_fa80_crit_edge

dec_label_pc_fa8c.dec_label_pc_fa80_crit_edge:    ; preds = %dec_label_pc_fa8c
  %v0_fa80.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fa84.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fa80 = inttoptr i32 %v0_fa80.pre to i32*
  %v2_fa80 = load i32, i32* %v1_fa80, align 4
  store i32 %v2_fa80, i32* %r3.global-to-local, align 4
  %v3_fa84 = icmp uge i32 %v2_fa80, %v1_fa84.pre
  store i1 %v3_fa84, i1* %cpsr_c.global-to-local, align 1
  %v9_fa84 = icmp eq i32 %v2_fa80, %v1_fa84.pre
  br i1 %v9_fa84, label %dec_label_pc_fa8c, label %dec_label_pc_faa4

dec_label_pc_faa0:                                ; preds = %dec_label_pc_fa8c
  %v0_faa0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_faa0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_faa4

dec_label_pc_faa4:                                ; preds = %dec_label_pc_fa74, %dec_label_pc_fa8c.dec_label_pc_fa80_crit_edge, %dec_label_pc_faa0
  %v0_faac = phi i32 [ %v0_faa0, %dec_label_pc_faa0 ], [ %v2_fa8023, %dec_label_pc_fa74 ], [ %v2_fa80, %dec_label_pc_fa8c.dec_label_pc_fa80_crit_edge ]
  %v1_faa4 = phi i32 [ %v0_faa0, %dec_label_pc_faa0 ], [ %v3_fa74, %dec_label_pc_fa74 ], [ %v1_fa84.pre, %dec_label_pc_fa8c.dec_label_pc_fa80_crit_edge ]
  %v3_faa4 = icmp uge i32 %v0_faac, %v1_faa4
  store i1 %v3_faa4, i1* %cpsr_c.global-to-local, align 1
  %v9_faa4 = icmp eq i32 %v0_faac, %v1_faa4
  br i1 %v9_faa4, label %dec_label_pc_faac, label %dec_label_pc_faa4.dec_label_pc_fa74_crit_edge

dec_label_pc_faa4.dec_label_pc_fa74_crit_edge:    ; preds = %dec_label_pc_faa4
  %v0_fa74.pre = load i32, i32* @r7, align 4
  %v0_fa7c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fa74

dec_label_pc_faac:                                ; preds = %dec_label_pc_faa4
  %v2_faac = icmp ne i32 %v1_faa4, 0
  store i1 %v2_faac, i1* %cpsr_c.global-to-local, align 1
  %v7_fab0 = icmp slt i32 %v1_faa4, 2
  br i1 %v7_fab0, label %dec_label_pc_facc, label %dec_label_pc_fab4

dec_label_pc_fab4:                                ; preds = %dec_label_pc_faac
  %v0_fab8 = load i32, i32* @r1, align 4
  %v1_fab8 = add i32 %v0_fab8, 129
  store i32 %v1_fab8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %.thread, %dec_label_pc_fa58, %dec_label_pc_fab4, %dec_label_pc_faac, %dec_label_pc_f9c8
  %v0_facc = load i32, i32* %r5.global-to-local, align 4
  %v2_fad4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fad4, i32* @r4, align 4
  store i32 %v6_f998, i32* @r5, align 4
  store i32 %v9_f998, i32* @r6, align 4
  store i32 %v12_f998, i32* @r7, align 4
  store i32 %v15_f998, i32* @lr, align 4
  ret i32 %v0_facc

; uselistorder directives
  uselistorder i32 %v0_faa0, { 1, 0, 2 }
  uselistorder i32 %v1_fa84.pre, { 0, 2, 1 }
  uselistorder i32 %v0_fa3c, { 1, 0, 2 }
  uselistorder i32 %v1_fa38, { 0, 2, 1 }
  uselistorder i32 %v1_f9f8, { 1, 0 }
  uselistorder i32 %v3_f9b0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_facc, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_faa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fa8c, { 1, 0 }
  uselistorder label %dec_label_pc_fa58, { 1, 0 }
  uselistorder label %dec_label_pc_fa28, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_fa18, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fadc = load i32, i32* @r4, align 4
  store i32 %v3_fadc, i32* %stack_var_-32, align 4
  %v6_fadc = load i32, i32* @r5, align 4
  %v9_fadc = load i32, i32* @r6, align 4
  %v12_fadc = load i32, i32* @r7, align 4
  %v15_fadc = load i32, i32* @r8, align 4
  %v24_fadc = load i32, i32* @lr, align 4
  %v1_fae0 = add i32 %arg3, 52
  %v2_fae0 = inttoptr i32 %v1_fae0 to i32*
  %v3_fae0 = load i32, i32* %v2_fae0, align 4
  store i32 %v3_fae0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fae4 = icmp eq i32 %v3_fae0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_fae4, label %dec_label_pc_faf8, label %dec_label_pc_fb5c

dec_label_pc_faf8:                                ; preds = %entry
  %v0_faf8 = call i32 @__aeabi_read_tp()
  %v1_fafc = add i32 %arg3, 64
  %v2_fafc = inttoptr i32 %v1_fafc to i32*
  %v3_fafc = load i32, i32* %v2_fafc, align 4
  store i32 %v3_fafc, i32* %r3.global-to-local, align 4
  %v1_fb00 = add i32 %v0_faf8, -1168
  store i32 %v1_fb00, i32* @r8, align 4
  %v3_fb04 = icmp uge i32 %v3_fafc, %v1_fb00
  store i1 %v3_fb04, i1* %cpsr_c.global-to-local, align 1
  %v9_fb04 = icmp eq i32 %v3_fafc, %v1_fb00
  br i1 %v9_fb04, label %dec_label_pc_fb50, label %dec_label_pc_fb0c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_faf8
  %v1_fb0c = add i32 %arg3, 56
  store i32 %v1_fb0c, i32* @r5, align 4
  store i32 %v1_fb0c, i32* %r2.global-to-local, align 4
  %v0_fb18 = load i32, i32* @r6, align 4
  store i32 %v0_fb18, i32* @r4, align 4
  %v1_fb1c36 = inttoptr i32 %v1_fb0c to i32*
  %v2_fb1c37 = load i32, i32* %v1_fb1c36, align 4
  store i32 %v2_fb1c37, i32* %r3.global-to-local, align 4
  %v3_fb2039 = icmp uge i32 %v2_fb1c37, %v0_fb18
  store i1 %v3_fb2039, i1* %cpsr_c.global-to-local, align 1
  %v9_fb2045 = icmp eq i32 %v2_fb1c37, %v0_fb18
  br i1 %v9_fb2045, label %dec_label_pc_fb28, label %dec_label_pc_fb40

dec_label_pc_fb28:                                ; preds = %dec_label_pc_fb0c, %dec_label_pc_fb28.dec_label_pc_fb1c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fb38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fb38, label %dec_label_pc_fb3c, label %dec_label_pc_fb28.dec_label_pc_fb1c_crit_edge

dec_label_pc_fb28.dec_label_pc_fb1c_crit_edge:    ; preds = %dec_label_pc_fb28
  %v0_fb1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fb20.pre = load i32, i32* @r4, align 4
  %v1_fb1c = inttoptr i32 %v0_fb1c.pre to i32*
  %v2_fb1c = load i32, i32* %v1_fb1c, align 4
  store i32 %v2_fb1c, i32* %r3.global-to-local, align 4
  %v3_fb20 = icmp uge i32 %v2_fb1c, %v1_fb20.pre
  store i1 %v3_fb20, i1* %cpsr_c.global-to-local, align 1
  %v9_fb20 = icmp eq i32 %v2_fb1c, %v1_fb20.pre
  br i1 %v9_fb20, label %dec_label_pc_fb28, label %dec_label_pc_fb40

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_fb28
  %v0_fb3c = load i32, i32* @r4, align 4
  store i32 %v0_fb3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fb40

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fb0c, %dec_label_pc_fb28.dec_label_pc_fb1c_crit_edge, %dec_label_pc_fb3c
  %v0_fb40 = phi i32 [ %v0_fb3c, %dec_label_pc_fb3c ], [ %v2_fb1c37, %dec_label_pc_fb0c ], [ %v2_fb1c, %dec_label_pc_fb28.dec_label_pc_fb1c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb40 = icmp eq i32 %v0_fb40, 0
  br i1 %v2_fb40, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_fb40
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_fb40, %bb
  store i32 64332, i32* @lr, align 4
  %v1_fb48 = xor i1 %v2_fb40, true
  call void @__pseudo_cond_branch(i1 %v1_fb48, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_fb4c = load i32, i32* @r8, align 4
  %v1_fb4c = load i32, i32* @r7, align 4
  %v2_fb4c = add i32 %v1_fb4c, 64
  %v3_fb4c = inttoptr i32 %v2_fb4c to i32*
  store i32 %v0_fb4c, i32* %v3_fb4c, align 4
  br label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_faf8, %bb20
  %v0_fb50 = load i32, i32* @r7, align 4
  %v1_fb50 = add i32 %v0_fb50, 60
  %v2_fb50 = inttoptr i32 %v1_fb50 to i32*
  %v3_fb50 = load i32, i32* %v2_fb50, align 4
  %v1_fb54 = add i32 %v3_fb50, 1
  store i32 %v1_fb54, i32* %r3.global-to-local, align 4
  store i32 %v1_fb54, i32* %v2_fb50, align 4
  %v0_fb5c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_fb60.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_fb64.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %entry, %dec_label_pc_fb50
  %v0_fb64 = phi i32 [ %arg3, %entry ], [ %v0_fb64.pre, %dec_label_pc_fb50 ]
  %v0_fb60 = phi i32 [ %arg2, %entry ], [ %v0_fb60.pre, %dec_label_pc_fb50 ]
  %v0_fb5c = phi i32 [ %arg1, %entry ], [ %v0_fb5c.pre, %dec_label_pc_fb50 ]
  store i32 %v0_fb64, i32* %r2.global-to-local, align 4
  %v3_fb68 = inttoptr i32 %v0_fb5c to i8*
  %v4_fb68 = call i32 @__GI_fgets_unlocked(i8* %v3_fb68, i32 %v0_fb60, i32 %v0_fb64)
  %v0_fb6c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb6c = icmp eq i32 %v0_fb6c, 0
  store i32 %v4_fb68, i32* %r8.global-to-local, align 4
  br i1 %v2_fb6c, label %dec_label_pc_fb78, label %dec_label_pc_fbec

dec_label_pc_fb78:                                ; preds = %dec_label_pc_fb5c
  %v0_fb78 = load i32, i32* @r7, align 4
  %v1_fb78 = add i32 %v0_fb78, 60
  %v2_fb78 = inttoptr i32 %v1_fb78 to i32*
  %v3_fb78 = load i32, i32* %v2_fb78, align 4
  %v1_fb7c = add i32 %v3_fb78, -1
  store i32 %v1_fb7c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb80 = icmp eq i32 %v1_fb7c, 0
  store i32 %v1_fb7c, i32* %v2_fb78, align 4
  br i1 %v2_fb80, label %dec_label_pc_fb8c, label %dec_label_pc_fbec

dec_label_pc_fb8c:                                ; preds = %dec_label_pc_fb78
  %v0_fb8c = load i32, i32* %r3.global-to-local, align 4
  %v1_fb8c = load i32, i32* @r7, align 4
  %v2_fb8c = add i32 %v1_fb8c, 64
  %v3_fb8c = inttoptr i32 %v2_fb8c to i32*
  store i32 %v0_fb8c, i32* %v3_fb8c, align 4
  %v0_fb90 = load i32, i32* @r7, align 4
  %v1_fb90 = add i32 %v0_fb90, 56
  store i32 %v1_fb90, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fb94

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fbc4.dec_label_pc_fb94_crit_edge, %dec_label_pc_fb8c
  %v0_fb9c = phi i32 [ %v0_fb9c.pre, %dec_label_pc_fbc4.dec_label_pc_fb94_crit_edge ], [ %v1_fb90, %dec_label_pc_fb8c ]
  %v0_fb94 = phi i32 [ %v0_fb94.pre, %dec_label_pc_fbc4.dec_label_pc_fb94_crit_edge ], [ %v0_fb90, %dec_label_pc_fb8c ]
  %v1_fb94 = add i32 %v0_fb94, 56
  %v2_fb94 = inttoptr i32 %v1_fb94 to i32*
  %v3_fb94 = load i32, i32* %v2_fb94, align 4
  store i32 %v3_fb94, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_fb9c, i32* %r2.global-to-local, align 4
  %v1_fba024 = inttoptr i32 %v0_fb9c to i32*
  %v2_fba025 = load i32, i32* %v1_fba024, align 4
  store i32 %v2_fba025, i32* %r3.global-to-local, align 4
  %v3_fba427 = icmp uge i32 %v2_fba025, %v3_fb94
  store i1 %v3_fba427, i1* %cpsr_c.global-to-local, align 1
  %v9_fba433 = icmp eq i32 %v2_fba025, %v3_fb94
  br i1 %v9_fba433, label %dec_label_pc_fbac, label %dec_label_pc_fbc4

dec_label_pc_fbac:                                ; preds = %dec_label_pc_fb94, %dec_label_pc_fbac.dec_label_pc_fba0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fbbc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fbbc, label %dec_label_pc_fbc0, label %dec_label_pc_fbac.dec_label_pc_fba0_crit_edge

dec_label_pc_fbac.dec_label_pc_fba0_crit_edge:    ; preds = %dec_label_pc_fbac
  %v0_fba0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fba4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fba0 = inttoptr i32 %v0_fba0.pre to i32*
  %v2_fba0 = load i32, i32* %v1_fba0, align 4
  store i32 %v2_fba0, i32* %r3.global-to-local, align 4
  %v3_fba4 = icmp uge i32 %v2_fba0, %v1_fba4.pre
  store i1 %v3_fba4, i1* %cpsr_c.global-to-local, align 1
  %v9_fba4 = icmp eq i32 %v2_fba0, %v1_fba4.pre
  br i1 %v9_fba4, label %dec_label_pc_fbac, label %dec_label_pc_fbc4

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fbac
  %v0_fbc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fbc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fbc4

dec_label_pc_fbc4:                                ; preds = %dec_label_pc_fb94, %dec_label_pc_fbac.dec_label_pc_fba0_crit_edge, %dec_label_pc_fbc0
  %v0_fbcc = phi i32 [ %v0_fbc0, %dec_label_pc_fbc0 ], [ %v2_fba025, %dec_label_pc_fb94 ], [ %v2_fba0, %dec_label_pc_fbac.dec_label_pc_fba0_crit_edge ]
  %v1_fbc4 = phi i32 [ %v0_fbc0, %dec_label_pc_fbc0 ], [ %v3_fb94, %dec_label_pc_fb94 ], [ %v1_fba4.pre, %dec_label_pc_fbac.dec_label_pc_fba0_crit_edge ]
  %v3_fbc4 = icmp uge i32 %v0_fbcc, %v1_fbc4
  store i1 %v3_fbc4, i1* %cpsr_c.global-to-local, align 1
  %v9_fbc4 = icmp eq i32 %v0_fbcc, %v1_fbc4
  br i1 %v9_fbc4, label %dec_label_pc_fbcc, label %dec_label_pc_fbc4.dec_label_pc_fb94_crit_edge

dec_label_pc_fbc4.dec_label_pc_fb94_crit_edge:    ; preds = %dec_label_pc_fbc4
  %v0_fb94.pre = load i32, i32* @r7, align 4
  %v0_fb9c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fb94

dec_label_pc_fbcc:                                ; preds = %dec_label_pc_fbc4
  %v2_fbcc = icmp ne i32 %v1_fbc4, 0
  store i1 %v2_fbcc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbd0 = icmp slt i32 %v1_fbc4, 2
  br i1 %v7_fbd0, label %dec_label_pc_fbec, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fbcc
  %v0_fbd8 = load i32, i32* @r1, align 4
  %v1_fbd8 = add i32 %v0_fbd8, 129
  store i32 %v1_fbd8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fbec

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fb78, %dec_label_pc_fb5c, %dec_label_pc_fbd4, %dec_label_pc_fbcc
  %v0_fbec = load i32, i32* %r8.global-to-local, align 4
  %v2_fbf0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fbf0, i32* @r4, align 4
  store i32 %v6_fadc, i32* @r5, align 4
  store i32 %v9_fadc, i32* @r6, align 4
  store i32 %v12_fadc, i32* @r7, align 4
  store i32 %v15_fadc, i32* @r8, align 4
  store i32 %v24_fadc, i32* @lr, align 4
  ret i32 %v0_fbec

; uselistorder directives
  uselistorder i32 %v0_fbc0, { 1, 0, 2 }
  uselistorder i32 %v1_fba4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_fb64, { 1, 0 }
  uselistorder i32 %v1_fb20.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 11, 10, 1, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_fbec, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_fbc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fbac, { 1, 0 }
  uselistorder label %dec_label_pc_fb5c, { 1, 0 }
  uselistorder label %dec_label_pc_fb50, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_fb40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fb28, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fbf8 = load i32, i32* @r4, align 4
  store i32 %v3_fbf8, i32* %stack_var_-20, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r5.global-to-local, align 4
  %v4_fc08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 168) to i32*), align 4
  store i32 %v4_fc08, i32* %r7.global-to-local, align 4
  %v0_fc0c = call i32 @__aeabi_read_tp()
  store i32 %v0_fc0c, i32* %r0.global-to-local, align 4
  %v1_fc10 = add i32 %v4_fc08, 8
  %v2_fc10 = inttoptr i32 %v1_fc10 to i32*
  %v3_fc10 = load i32, i32* %v2_fc10, align 4
  store i32 %v3_fc10, i32* %r3.global-to-local, align 4
  %v1_fc14 = add i32 %v0_fc0c, -1168
  store i32 %v1_fc14, i32* %r6.global-to-local, align 4
  %v3_fc18 = icmp uge i32 %v3_fc10, %v1_fc14
  store i1 %v3_fc18, i1* %cpsr_c.global-to-local, align 1
  %v9_fc18 = icmp eq i32 %v3_fc10, %v1_fc14
  br i1 %v9_fc18, label %dec_label_pc_fc64, label %dec_label_pc_fc24

dec_label_pc_fc24:                                ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_fc08, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_fc3093 = inttoptr i32 %v4_fc08 to i32*
  %v2_fc3094 = load i32, i32* %v1_fc3093, align 4
  store i32 %v2_fc3094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_fc3496 = icmp eq i32 %v2_fc3094, 0
  br i1 %v9_fc3496, label %dec_label_pc_fc3c, label %dec_label_pc_fc54

dec_label_pc_fc3c:                                ; preds = %dec_label_pc_fc24, %dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge
  %v0_fc3c97 = phi i32 [ %v1_fc34.pre, %dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge ], [ 0, %dec_label_pc_fc24 ]
  store i32 %v0_fc3c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fc4c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fc4c, label %dec_label_pc_fc50, label %dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge

dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge:    ; preds = %dec_label_pc_fc3c
  %v0_fc30.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fc34.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fc30 = inttoptr i32 %v0_fc30.pre to i32*
  %v2_fc30 = load i32, i32* %v1_fc30, align 4
  store i32 %v2_fc30, i32* %r3.global-to-local, align 4
  %v3_fc34 = icmp uge i32 %v2_fc30, %v1_fc34.pre
  store i1 %v3_fc34, i1* %cpsr_c.global-to-local, align 1
  %v9_fc34 = icmp eq i32 %v2_fc30, %v1_fc34.pre
  br i1 %v9_fc34, label %dec_label_pc_fc3c, label %dec_label_pc_fc54

dec_label_pc_fc50:                                ; preds = %dec_label_pc_fc3c
  %v0_fc50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fc50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc54

dec_label_pc_fc54:                                ; preds = %dec_label_pc_fc24, %dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge, %dec_label_pc_fc50
  %v0_fc54 = phi i32 [ %v0_fc50, %dec_label_pc_fc50 ], [ %v2_fc3094, %dec_label_pc_fc24 ], [ %v2_fc30, %dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge ]
  %v1_fc54 = phi i32 [ %v0_fc50, %dec_label_pc_fc50 ], [ 0, %dec_label_pc_fc24 ], [ %v1_fc34.pre, %dec_label_pc_fc3c.dec_label_pc_fc30_crit_edge ]
  %v3_fc54 = icmp uge i32 %v0_fc54, %v1_fc54
  store i1 %v3_fc54, i1* %cpsr_c.global-to-local, align 1
  %v9_fc54 = icmp eq i32 %v0_fc54, %v1_fc54
  br i1 %v9_fc54, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_fc54
  %v1_fc58 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_fc58, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_fc54, %bb
  %v1_fc5c = xor i1 %v9_fc54, true
  call void @__pseudo_cond_branch(i1 %v1_fc5c, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_fc60 = load i32, i32* %r6.global-to-local, align 4
  %v1_fc60 = load i32, i32* %r7.global-to-local, align 4
  %v2_fc60 = add i32 %v1_fc60, 8
  %v3_fc60 = inttoptr i32 %v2_fc60 to i32*
  store i32 %v0_fc60, i32* %v3_fc60, align 4
  br label %dec_label_pc_fc64

dec_label_pc_fc64:                                ; preds = %entry, %bb45
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_fc68 = load i32, i32* %r5.global-to-local, align 4
  %v2_fc68 = add i32 %v0_fc68, 168
  %v3_fc68 = inttoptr i32 %v2_fc68 to i32*
  %v4_fc68 = load i32, i32* %v3_fc68, align 4
  store i32 %v4_fc68, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_fc70 = add i32 %v0_fc68, 12
  %v3_fc70 = inttoptr i32 %v2_fc70 to i32*
  %v4_fc70 = load i32, i32* %v3_fc70, align 4
  store i32 %v4_fc70, i32* %r3.global-to-local, align 4
  %v1_fc74 = inttoptr i32 %v4_fc70 to i32*
  %v2_fc74 = load i32, i32* %v1_fc74, align 4
  store i32 %v2_fc74, i32* %r1.global-to-local, align 4
  %v1_fc78 = add i32 %v4_fc68, 4
  %v2_fc78 = inttoptr i32 %v1_fc78 to i32*
  %v3_fc78 = load i32, i32* %v2_fc78, align 4
  %v2_fc7c = icmp ne i32 %v2_fc74, 0
  store i1 %v2_fc7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc7c = icmp eq i32 %v2_fc74, 1
  %v1_fc80 = add i32 %v3_fc78, 1
  store i32 %v1_fc80, i32* %r3.global-to-local, align 4
  store i32 %v1_fc80, i32* %v2_fc78, align 4
  br i1 %v7_fc7c, label %dec_label_pc_fc8c, label %dec_label_pc_fdf0

dec_label_pc_fc8c:                                ; preds = %dec_label_pc_fc64
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_fc90 = load i32, i32* %r5.global-to-local, align 4
  %v2_fc90 = add i32 %v0_fc90, 88
  %v3_fc90 = inttoptr i32 %v2_fc90 to i32*
  %v4_fc90 = load i32, i32* %v3_fc90, align 4
  store i32 %v4_fc90, i32* %r3.global-to-local, align 4
  %v1_fc94 = inttoptr i32 %v4_fc90 to i32*
  %v2_fc94 = load i32, i32* %v1_fc94, align 4
  store i32 %v2_fc94, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_fc94, 1
  br i1 %tmp46, label %dec_label_pc_fdf0, label %dec_label_pc_fca0

dec_label_pc_fca0:                                ; preds = %dec_label_pc_fc8c
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_fca4 = add i32 %v0_fc90, 160
  %v3_fca4 = inttoptr i32 %v2_fca4 to i32*
  %v4_fca4 = load i32, i32* %v3_fca4, align 4
  store i32 %v4_fca4, i32* %r7.global-to-local, align 4
  %v1_fca8 = add i32 %v4_fca4, 8
  %v2_fca8 = inttoptr i32 %v1_fca8 to i32*
  %v3_fca8 = load i32, i32* %v2_fca8, align 4
  store i32 %v3_fca8, i32* %r3.global-to-local, align 4
  %v1_fcac = load i32, i32* %r6.global-to-local, align 4
  %v3_fcac = icmp uge i32 %v3_fca8, %v1_fcac
  store i1 %v3_fcac, i1* %cpsr_c.global-to-local, align 1
  %v9_fcac = icmp eq i32 %v3_fca8, %v1_fcac
  br i1 %v9_fcac, label %dec_label_pc_fcf0, label %dec_label_pc_fcb4

dec_label_pc_fcb4:                                ; preds = %dec_label_pc_fca0
  store i32 %v4_fca4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_fcbc86 = inttoptr i32 %v4_fca4 to i32*
  %v2_fcbc87 = load i32, i32* %v1_fcbc86, align 4
  store i32 %v2_fcbc87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_fcc089 = icmp eq i32 %v2_fcbc87, 0
  br i1 %v9_fcc089, label %dec_label_pc_fcc8, label %dec_label_pc_fce0

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fcb4, %dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge
  %v0_fcc890 = phi i32 [ %v1_fcc0.pre, %dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge ], [ 0, %dec_label_pc_fcb4 ]
  store i32 %v0_fcc890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fcd8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fcd8, label %dec_label_pc_fcdc, label %dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge

dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge:    ; preds = %dec_label_pc_fcc8
  %v0_fcbc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fcc0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fcbc = inttoptr i32 %v0_fcbc.pre to i32*
  %v2_fcbc = load i32, i32* %v1_fcbc, align 4
  store i32 %v2_fcbc, i32* %r3.global-to-local, align 4
  %v3_fcc0 = icmp uge i32 %v2_fcbc, %v1_fcc0.pre
  store i1 %v3_fcc0, i1* %cpsr_c.global-to-local, align 1
  %v9_fcc0 = icmp eq i32 %v2_fcbc, %v1_fcc0.pre
  br i1 %v9_fcc0, label %dec_label_pc_fcc8, label %dec_label_pc_fce0

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fcc8
  %v0_fcdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fcdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fce0

dec_label_pc_fce0:                                ; preds = %dec_label_pc_fcb4, %dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge, %dec_label_pc_fcdc
  %v0_fce0 = phi i32 [ %v0_fcdc, %dec_label_pc_fcdc ], [ %v2_fcbc87, %dec_label_pc_fcb4 ], [ %v2_fcbc, %dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge ]
  %v1_fce0 = phi i32 [ %v0_fcdc, %dec_label_pc_fcdc ], [ 0, %dec_label_pc_fcb4 ], [ %v1_fcc0.pre, %dec_label_pc_fcc8.dec_label_pc_fcbc_crit_edge ]
  %v3_fce0 = icmp uge i32 %v0_fce0, %v1_fce0
  store i1 %v3_fce0, i1* %cpsr_c.global-to-local, align 1
  %v9_fce0 = icmp eq i32 %v0_fce0, %v1_fce0
  br i1 %v9_fce0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_fce0
  %v1_fce4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_fce4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_fce0, %bb47
  %v1_fce8 = xor i1 %v9_fce0, true
  call void @__pseudo_cond_branch(i1 %v1_fce8, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_fcec = load i32, i32* %r6.global-to-local, align 4
  %v1_fcec = load i32, i32* %r7.global-to-local, align 4
  %v2_fcec = add i32 %v1_fcec, 8
  %v3_fcec = inttoptr i32 %v2_fcec to i32*
  store i32 %v0_fcec, i32* %v3_fcec, align 4
  %v0_fcf8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fcf0

dec_label_pc_fcf0:                                ; preds = %dec_label_pc_fca0, %bb48
  %v0_fcf8 = phi i32 [ %v0_fc90, %dec_label_pc_fca0 ], [ %v0_fcf8.pre, %bb48 ]
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r1.global-to-local, align 4
  %v2_fcf8 = add i32 %v0_fcf8, 160
  %v3_fcf8 = inttoptr i32 %v2_fcf8 to i32*
  %v4_fcf8 = load i32, i32* %v3_fcf8, align 4
  store i32 %v4_fcf8, i32* %r0.global-to-local, align 4
  %v2_fcfc = add i32 %v0_fcf8, 84
  %v3_fcfc = inttoptr i32 %v2_fcfc to i32*
  %v4_fcfc = load i32, i32* %v3_fcfc, align 4
  store i32 %v4_fcfc, i32* %r2.global-to-local, align 4
  %v1_fd00 = add i32 %v4_fcf8, 4
  %v2_fd00 = inttoptr i32 %v1_fd00 to i32*
  %v3_fd00 = load i32, i32* %v2_fd00, align 4
  store i32 %v3_fd00, i32* %r3.global-to-local, align 4
  %v1_fd04 = inttoptr i32 %v4_fcfc to i32*
  %v2_fd04 = load i32, i32* %v1_fd04, align 4
  store i32 %v2_fd04, i32* %r2.global-to-local, align 4
  %v1_fd08 = add i32 %v3_fd00, 1
  store i32 %v1_fd08, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_fd08, i32* %v2_fd00, align 4
  %v0_fd58.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd5811 = icmp eq i32 %v0_fd58.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_fd5811, label %dec_label_pc_fd64, label %dec_label_pc_fd1c

dec_label_pc_fd1c:                                ; preds = %dec_label_pc_fcf0, %dec_label_pc_fd54
  %v0_fd402 = phi i32 [ %v0_fd54, %dec_label_pc_fd54 ], [ %v0_fd58.pr, %dec_label_pc_fcf0 ]
  %v1_fd1c = inttoptr i32 %v0_fd402 to i16*
  %v2_fd1c = load i16, i16* %v1_fd1c, align 2
  %v3_fd1c = zext i16 %v2_fd1c to i32
  store i32 %v3_fd1c, i32* %r3.global-to-local, align 4
  %v2_fd20 = and i32 %v3_fd1c, 32816
  store i32 %v2_fd20, i32* %r1.global-to-local, align 4
  %v2_fd24 = icmp ugt i32 %v2_fd20, 47
  store i1 %v2_fd24, i1* %cpsr_c.global-to-local, align 1
  %v7_fd24 = icmp eq i32 %v2_fd20, 48
  %v1_fd28 = add i32 %v0_fd402, 32
  %v2_fd28 = inttoptr i32 %v1_fd28 to i32*
  %v3_fd28 = load i32, i32* %v2_fd28, align 4
  store i32 %v3_fd28, i32* %r4.global-to-local, align 4
  br i1 %v7_fd24, label %dec_label_pc_fd34, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_fd1c
  store i32 %v0_fd402, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fd54

dec_label_pc_fd34:                                ; preds = %dec_label_pc_fd1c
  %v0_fd34 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd34 = icmp eq i32 %v0_fd34, 0
  br i1 %v2_fd34, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_fd34
  %v1_fd38 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd38 = load i32, i32* %r7.global-to-local, align 4
  %v3_fd38 = add i32 %v2_fd38, %v1_fd38
  %v4_fd38 = inttoptr i32 %v3_fd38 to i32*
  %v5_fd38 = load i32, i32* %v4_fd38, align 4
  store i32 %v5_fd38, i32* %r3.global-to-local, align 4
  %v3_fd3c = inttoptr i32 %v5_fd38 to i32*
  store i32 %v3_fd28, i32* %v3_fd3c, align 4
  %v0_fd40 = load i32, i32* %r2.global-to-local, align 4
  %v1_fd40 = inttoptr i32 %v0_fd40 to i16*
  %v2_fd40 = load i16, i16* %v1_fd40, align 2
  %v3_fd40 = zext i16 %v2_fd40 to i32
  store i32 %v3_fd40, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_fd34
  %v2_fd408 = load i16, i16* %v1_fd1c, align 2
  %v3_fd409 = zext i16 %v2_fd408 to i32
  store i32 %v3_fd409, i32* %r3.global-to-local, align 4
  %v3_fd44 = add i32 %v0_fd34, 32
  %v4_fd44 = inttoptr i32 %v3_fd44 to i32*
  store i32 %v3_fd28, i32* %v4_fd44, align 4
  %v0_fd48.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_fd48 = phi i32 [ %v3_fd40, %.thread ], [ %v0_fd48.pre, %bb49 ]
  %v1_fd48 = and i32 %v0_fd48, 8192
  %v2_fd48 = icmp eq i32 %v1_fd48, 0
  br i1 %v2_fd48, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_fd4c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_fd4c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_fd50 = xor i1 %v2_fd48, true
  call void @__pseudo_cond_branch(i1 %v1_fd50, i32 ptrtoint (i32* @global_var_c048.324 to i32))
  %v0_fd54.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fd54

dec_label_pc_fd54:                                ; preds = %.thread38, %bb52
  %v0_fd54 = phi i32 [ %v0_fd54.pre, %bb52 ], [ %v3_fd28, %.thread38 ]
  store i32 %v0_fd54, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd58 = icmp eq i32 %v0_fd54, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_fd58, label %dec_label_pc_fd64, label %dec_label_pc_fd1c

dec_label_pc_fd64:                                ; preds = %dec_label_pc_fd54, %dec_label_pc_fcf0
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_fd68 = load i32, i32* %r5.global-to-local, align 4
  %v2_fd68 = add i32 %v0_fd68, 160
  %v3_fd68 = inttoptr i32 %v2_fd68 to i32*
  %v4_fd68 = load i32, i32* %v3_fd68, align 4
  store i32 %v4_fd68, i32* %r0.global-to-local, align 4
  %v1_fd6c = add i32 %v4_fd68, 4
  %v2_fd6c = inttoptr i32 %v1_fd6c to i32*
  %v3_fd6c = load i32, i32* %v2_fd6c, align 4
  %v1_fd70 = add i32 %v3_fd6c, -1
  store i32 %v1_fd70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd74 = icmp eq i32 %v1_fd70, 0
  store i32 %v1_fd70, i32* %v2_fd6c, align 4
  br i1 %v2_fd74, label %dec_label_pc_fd80, label %dec_label_pc_fde0

dec_label_pc_fd80:                                ; preds = %dec_label_pc_fd64
  %v0_fd80 = load i32, i32* %r3.global-to-local, align 4
  %v1_fd80 = load i32, i32* %r0.global-to-local, align 4
  %v2_fd80 = add i32 %v1_fd80, 8
  %v3_fd80 = inttoptr i32 %v2_fd80 to i32*
  store i32 %v0_fd80, i32* %v3_fd80, align 4
  %v0_fd84 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fd84, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fd88

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fdb8.dec_label_pc_fd88_crit_edge, %dec_label_pc_fd80
  %v0_fd88 = phi i32 [ %v0_fd88.pre, %dec_label_pc_fdb8.dec_label_pc_fd88_crit_edge ], [ %v0_fd84, %dec_label_pc_fd80 ]
  %v1_fd88 = inttoptr i32 %v0_fd88 to i32*
  %v2_fd88 = load i32, i32* %v1_fd88, align 4
  store i32 %v2_fd88, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_fd88, i32* %r2.global-to-local, align 4
  %v2_fd9474 = load i32, i32* %v1_fd88, align 4
  store i32 %v2_fd9474, i32* %r3.global-to-local, align 4
  %v3_fd9876 = icmp uge i32 %v2_fd9474, %v2_fd88
  store i1 %v3_fd9876, i1* %cpsr_c.global-to-local, align 1
  %v9_fd9882 = icmp eq i32 %v2_fd9474, %v2_fd88
  br i1 %v9_fd9882, label %dec_label_pc_fda0, label %dec_label_pc_fdb8

dec_label_pc_fda0:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fda0.dec_label_pc_fd94_crit_edge
  %v0_fda083 = phi i32 [ %v1_fd98.pre, %dec_label_pc_fda0.dec_label_pc_fd94_crit_edge ], [ %v2_fd88, %dec_label_pc_fd88 ]
  store i32 %v0_fda083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fdb0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fdb0, label %dec_label_pc_fdb4, label %dec_label_pc_fda0.dec_label_pc_fd94_crit_edge

dec_label_pc_fda0.dec_label_pc_fd94_crit_edge:    ; preds = %dec_label_pc_fda0
  %v0_fd94.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fd98.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fd94 = inttoptr i32 %v0_fd94.pre to i32*
  %v2_fd94 = load i32, i32* %v1_fd94, align 4
  store i32 %v2_fd94, i32* %r3.global-to-local, align 4
  %v3_fd98 = icmp uge i32 %v2_fd94, %v1_fd98.pre
  store i1 %v3_fd98, i1* %cpsr_c.global-to-local, align 1
  %v9_fd98 = icmp eq i32 %v2_fd94, %v1_fd98.pre
  br i1 %v9_fd98, label %dec_label_pc_fda0, label %dec_label_pc_fdb8

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fda0
  %v0_fdb4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fdb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fda0.dec_label_pc_fd94_crit_edge, %dec_label_pc_fdb4
  %v0_fdc0 = phi i32 [ %v0_fdb4, %dec_label_pc_fdb4 ], [ %v2_fd9474, %dec_label_pc_fd88 ], [ %v2_fd94, %dec_label_pc_fda0.dec_label_pc_fd94_crit_edge ]
  %v1_fdb8 = phi i32 [ %v0_fdb4, %dec_label_pc_fdb4 ], [ %v2_fd88, %dec_label_pc_fd88 ], [ %v1_fd98.pre, %dec_label_pc_fda0.dec_label_pc_fd94_crit_edge ]
  %v3_fdb8 = icmp uge i32 %v0_fdc0, %v1_fdb8
  store i1 %v3_fdb8, i1* %cpsr_c.global-to-local, align 1
  %v9_fdb8 = icmp eq i32 %v0_fdc0, %v1_fdb8
  br i1 %v9_fdb8, label %dec_label_pc_fdc0, label %dec_label_pc_fdb8.dec_label_pc_fd88_crit_edge

dec_label_pc_fdb8.dec_label_pc_fd88_crit_edge:    ; preds = %dec_label_pc_fdb8
  %v0_fd88.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fd88

dec_label_pc_fdc0:                                ; preds = %dec_label_pc_fdb8
  %v2_fdc0 = icmp ne i32 %v1_fdb8, 0
  store i1 %v2_fdc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc4 = icmp slt i32 %v1_fdb8, 2
  br i1 %v7_fdc4, label %dec_label_pc_fde0, label %dec_label_pc_fdc8

dec_label_pc_fdc8:                                ; preds = %dec_label_pc_fdc0
  %v0_fdc8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_fdc8, i32* %r0.global-to-local, align 4
  %v0_fdcc = load i32, i32* %r1.global-to-local, align 4
  %v1_fdcc = add i32 %v0_fdcc, 129
  store i32 %v1_fdcc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fde0

dec_label_pc_fde0:                                ; preds = %dec_label_pc_fd64, %dec_label_pc_fdc8, %dec_label_pc_fdc0
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_fde4 = load i32, i32* %r5.global-to-local, align 4
  %v2_fde4 = add i32 %v0_fde4, 88
  %v3_fde4 = inttoptr i32 %v2_fde4 to i32*
  %v4_fde4 = load i32, i32* %v3_fde4, align 4
  store i32 %v4_fde4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fdec = inttoptr i32 %v4_fde4 to i32*
  store i32 0, i32* %v2_fdec, align 4
  br label %dec_label_pc_fdf0

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_fc64, %dec_label_pc_fc8c, %dec_label_pc_fde0
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_fdf4 = load i32, i32* %r5.global-to-local, align 4
  %v2_fdf4 = add i32 %v0_fdf4, 168
  %v3_fdf4 = inttoptr i32 %v2_fdf4 to i32*
  %v4_fdf4 = load i32, i32* %v3_fdf4, align 4
  store i32 %v4_fdf4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_fdfc = add i32 %v0_fdf4, 12
  %v3_fdfc = inttoptr i32 %v2_fdfc to i32*
  %v4_fdfc = load i32, i32* %v3_fdfc, align 4
  store i32 %v4_fdfc, i32* %r1.global-to-local, align 4
  %v1_fe00 = add i32 %v4_fdf4, 4
  %v2_fe00 = inttoptr i32 %v1_fe00 to i32*
  %v3_fe00 = load i32, i32* %v2_fe00, align 4
  store i32 %v3_fe00, i32* %r2.global-to-local, align 4
  %v1_fe04 = inttoptr i32 %v4_fdfc to i32*
  %v2_fe04 = load i32, i32* %v1_fe04, align 4
  %v1_fe08 = add i32 %v3_fe00, -1
  store i32 %v1_fe08, i32* %r2.global-to-local, align 4
  %v1_fe0c = add i32 %v2_fe04, -1
  store i32 %v1_fe0c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe10 = icmp eq i32 %v1_fe08, 0
  store i32 %v1_fe0c, i32* %v1_fe04, align 4
  %v0_fe18 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe18 = load i32, i32* %r0.global-to-local, align 4
  %v2_fe18 = add i32 %v1_fe18, 4
  %v3_fe18 = inttoptr i32 %v2_fe18 to i32*
  store i32 %v0_fe18, i32* %v3_fe18, align 4
  br i1 %v2_fe10, label %dec_label_pc_fe20, label %dec_label_pc_fe80

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fdf0
  %v0_fe20 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe20 = load i32, i32* %r0.global-to-local, align 4
  %v2_fe20 = add i32 %v1_fe20, 8
  %v3_fe20 = inttoptr i32 %v2_fe20 to i32*
  store i32 %v0_fe20, i32* %v3_fe20, align 4
  %v0_fe24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fe24, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe28

dec_label_pc_fe28:                                ; preds = %dec_label_pc_fe58.dec_label_pc_fe28_crit_edge, %dec_label_pc_fe20
  %v0_fe28 = phi i32 [ %v0_fe28.pre, %dec_label_pc_fe58.dec_label_pc_fe28_crit_edge ], [ %v0_fe24, %dec_label_pc_fe20 ]
  %v1_fe28 = inttoptr i32 %v0_fe28 to i32*
  %v2_fe28 = load i32, i32* %v1_fe28, align 4
  store i32 %v2_fe28, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_fe28, i32* %r2.global-to-local, align 4
  %v2_fe3462 = load i32, i32* %v1_fe28, align 4
  store i32 %v2_fe3462, i32* %r3.global-to-local, align 4
  %v3_fe3864 = icmp uge i32 %v2_fe3462, %v2_fe28
  store i1 %v3_fe3864, i1* %cpsr_c.global-to-local, align 1
  %v9_fe3870 = icmp eq i32 %v2_fe3462, %v2_fe28
  br i1 %v9_fe3870, label %dec_label_pc_fe40, label %dec_label_pc_fe58

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe28, %dec_label_pc_fe40.dec_label_pc_fe34_crit_edge
  %v0_fe4071 = phi i32 [ %v1_fe38.pre, %dec_label_pc_fe40.dec_label_pc_fe34_crit_edge ], [ %v2_fe28, %dec_label_pc_fe28 ]
  store i32 %v0_fe4071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_fe50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_fe50, label %dec_label_pc_fe54, label %dec_label_pc_fe40.dec_label_pc_fe34_crit_edge

dec_label_pc_fe40.dec_label_pc_fe34_crit_edge:    ; preds = %dec_label_pc_fe40
  %v0_fe34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fe38.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_fe34 = inttoptr i32 %v0_fe34.pre to i32*
  %v2_fe34 = load i32, i32* %v1_fe34, align 4
  store i32 %v2_fe34, i32* %r3.global-to-local, align 4
  %v3_fe38 = icmp uge i32 %v2_fe34, %v1_fe38.pre
  store i1 %v3_fe38, i1* %cpsr_c.global-to-local, align 1
  %v9_fe38 = icmp eq i32 %v2_fe34, %v1_fe38.pre
  br i1 %v9_fe38, label %dec_label_pc_fe40, label %dec_label_pc_fe58

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe40
  %v0_fe54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fe54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fe58

dec_label_pc_fe58:                                ; preds = %dec_label_pc_fe28, %dec_label_pc_fe40.dec_label_pc_fe34_crit_edge, %dec_label_pc_fe54
  %v0_fe60 = phi i32 [ %v0_fe54, %dec_label_pc_fe54 ], [ %v2_fe3462, %dec_label_pc_fe28 ], [ %v2_fe34, %dec_label_pc_fe40.dec_label_pc_fe34_crit_edge ]
  %v1_fe58 = phi i32 [ %v0_fe54, %dec_label_pc_fe54 ], [ %v2_fe28, %dec_label_pc_fe28 ], [ %v1_fe38.pre, %dec_label_pc_fe40.dec_label_pc_fe34_crit_edge ]
  %v3_fe58 = icmp uge i32 %v0_fe60, %v1_fe58
  store i1 %v3_fe58, i1* %cpsr_c.global-to-local, align 1
  %v9_fe58 = icmp eq i32 %v0_fe60, %v1_fe58
  br i1 %v9_fe58, label %dec_label_pc_fe60, label %dec_label_pc_fe58.dec_label_pc_fe28_crit_edge

dec_label_pc_fe58.dec_label_pc_fe28_crit_edge:    ; preds = %dec_label_pc_fe58
  %v0_fe28.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe28

dec_label_pc_fe60:                                ; preds = %dec_label_pc_fe58
  %v2_fe60 = icmp ne i32 %v1_fe58, 0
  store i1 %v2_fe60, i1* %cpsr_c.global-to-local, align 1
  %v7_fe64 = icmp slt i32 %v1_fe58, 2
  br i1 %v7_fe64, label %dec_label_pc_fe80, label %dec_label_pc_fe68

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe60
  %v0_fe68 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_fe68, i32* %r0.global-to-local, align 4
  %v0_fe6c = load i32, i32* %r1.global-to-local, align 4
  %v1_fe6c = add i32 %v0_fe6c, 129
  store i32 %v1_fe6c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fe80

dec_label_pc_fe80:                                ; preds = %dec_label_pc_fdf0, %dec_label_pc_fe68, %dec_label_pc_fe60
  %v2_fe84 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fe84, i32* %r4.global-to-local, align 4
  %v1_fe88 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_fe88

; uselistorder directives
  uselistorder i32 %v0_fe54, { 1, 0, 2 }
  uselistorder i32 %v1_fe38.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_fe28, { 1, 0 }
  uselistorder i32 %v0_fdb4, { 1, 0, 2 }
  uselistorder i32 %v1_fd98.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_fd88, { 1, 0 }
  uselistorder i32 %v0_fd54, { 2, 1, 0 }
  uselistorder i32 %v0_fcf8, { 1, 0 }
  uselistorder i32 %v0_fcdc, { 1, 0, 2 }
  uselistorder i32 %v1_fcc0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_fcac, { 1, 0 }
  uselistorder i32 %v0_fc50, { 1, 0, 2 }
  uselistorder i32 %v1_fc34.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_fc08, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 43, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 15, 16, 17, 41, 42, 18, 19, 20, 21, 22, 23, 24, 26, 25, 0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 44, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 6, 5, 1, 7, 8, 9, 11, 10, 0, 12, 15, 13, 14, 2, 16, 17, 26, 27, 18, 19, 20, 21, 22, 24, 25, 23 }
  uselistorder i32 8192, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 47, { 2, 1, 4, 0, 3 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fe80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fe58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fe40, { 1, 0 }
  uselistorder label %dec_label_pc_fdf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fde0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fdb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fda0, { 1, 0 }
  uselistorder label %dec_label_pc_fd54, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_fd1c, { 1, 0 }
  uselistorder label %dec_label_pc_fcf0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_fce0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fcc8, { 1, 0 }
  uselistorder label %dec_label_pc_fc64, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_fc54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fc3c, { 1, 0 }
}

define i32 @function_fe90(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe90:
  %v0_fe90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fe90, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_fe90
  %v2_fe90 = load i32, i32* @r8, align 4
  %v5_fe90 = udiv i32 %v2_fe90, 2
  %v6_fe90 = and i32 %v5_fe90, %arg1
  %v2_fe94 = load i32, i32* @ip, align 4
  %v3_fe94 = and i32 %v6_fe90, %v2_fe94
  %v8_fe98 = ashr i32 %v2_fe90, %v3_fe94
  %v9_fe98 = and i32 %v8_fe98, %v3_fe94
  %v5_fe9c = udiv i32 %v9_fe98, 2
  %v6_fe9c = and i32 %v5_fe9c, %v9_fe98
  %v2_fea0 = load i32, i32* @r4, align 4
  %v8_fea0 = ashr i32 %v2_fea0, %v6_fe9c
  %v9_fea0 = and i32 %v8_fea0, %v6_fe9c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fe90, %bb
  %v10_fea4 = phi i32 [ %arg1, %dec_label_pc_fe90 ], [ %v9_fea0, %bb ]
  ret i32 %v10_fea4

; uselistorder directives
  uselistorder i32 %v9_fe98, { 1, 0 }
  uselistorder i32 %v2_fe90, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v6_fea8 = load i32, i32* @r5, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  %v4_feb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 84) to i32*), align 4
  store i32 %v4_feb8, i32* %r3.global-to-local, align 4
  %v4_febc = icmp uge i32 %tmp, %v4_feb8
  store i1 %v4_febc, i1* %cpsr_c.global-to-local, align 1
  %v10_febc = icmp eq i32 %tmp, %v4_feb8
  br i1 %v10_febc, label %bb, label %dec_label_pc_fed4

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_fee4

dec_label_pc_fed4:                                ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_fed8 = icmp eq i16* %arg1, null
  br i1 %v3_fed8, label %dec_label_pc_fee4, label %dec_label_pc_101f8

dec_label_pc_fee4:                                ; preds = %bb, %dec_label_pc_fed4
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_fed4 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v4_fee8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 168) to i32*), align 4
  store i32 %v4_fee8, i32* %r5.global-to-local, align 4
  %v0_feec = call i32 @__aeabi_read_tp()
  store i32 %v0_feec, i32* %r0.global-to-local, align 4
  %v1_fef0 = add i32 %v4_fee8, 8
  %v2_fef0 = inttoptr i32 %v1_fef0 to i32*
  %v3_fef0 = load i32, i32* %v2_fef0, align 4
  store i32 %v3_fef0, i32* %r3.global-to-local, align 4
  %v1_fef4 = add i32 %v0_feec, -1168
  store i32 %v1_fef4, i32* %r8.global-to-local, align 4
  %v3_fef8 = icmp uge i32 %v3_fef0, %v1_fef4
  store i1 %v3_fef8, i1* %cpsr_c.global-to-local, align 1
  %v9_fef8 = icmp eq i32 %v3_fef0, %v1_fef4
  br i1 %v9_fef8, label %dec_label_pc_ff40, label %dec_label_pc_ff00

dec_label_pc_ff00:                                ; preds = %dec_label_pc_fee4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_fee8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_ff0c143 = inttoptr i32 %v4_fee8 to i32*
  %v2_ff0c144 = load i32, i32* %v1_ff0c143, align 4
  store i32 %v2_ff0c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_ff10146 = icmp eq i32 %v2_ff0c144, 0
  br i1 %v9_ff10146, label %dec_label_pc_ff18, label %dec_label_pc_ff30

dec_label_pc_ff18:                                ; preds = %dec_label_pc_ff00, %dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge
  %v0_ff18147 = phi i32 [ %v1_ff10.pre, %dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge ], [ 0, %dec_label_pc_ff00 ]
  store i32 %v0_ff18147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ff28 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ff28, label %dec_label_pc_ff2c, label %dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge

dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge:    ; preds = %dec_label_pc_ff18
  %v0_ff0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ff10.pre = load i32, i32* @r4, align 4
  %v1_ff0c = inttoptr i32 %v0_ff0c.pre to i32*
  %v2_ff0c = load i32, i32* %v1_ff0c, align 4
  store i32 %v2_ff0c, i32* %r3.global-to-local, align 4
  %v3_ff10 = icmp uge i32 %v2_ff0c, %v1_ff10.pre
  store i1 %v3_ff10, i1* %cpsr_c.global-to-local, align 1
  %v9_ff10 = icmp eq i32 %v2_ff0c, %v1_ff10.pre
  br i1 %v9_ff10, label %dec_label_pc_ff18, label %dec_label_pc_ff30

dec_label_pc_ff2c:                                ; preds = %dec_label_pc_ff18
  %v0_ff2c = load i32, i32* @r4, align 4
  store i32 %v0_ff2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %dec_label_pc_ff00, %dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge, %dec_label_pc_ff2c
  %v0_ff30 = phi i32 [ %v0_ff2c, %dec_label_pc_ff2c ], [ %v2_ff0c144, %dec_label_pc_ff00 ], [ %v2_ff0c, %dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge ]
  %v1_ff30 = phi i32 [ %v0_ff2c, %dec_label_pc_ff2c ], [ 0, %dec_label_pc_ff00 ], [ %v1_ff10.pre, %dec_label_pc_ff18.dec_label_pc_ff0c_crit_edge ]
  %v3_ff30 = icmp uge i32 %v0_ff30, %v1_ff30
  store i1 %v3_ff30, i1* %cpsr_c.global-to-local, align 1
  %v9_ff30 = icmp eq i32 %v0_ff30, %v1_ff30
  br i1 %v9_ff30, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_ff30
  %v1_ff34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_ff34, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_ff30, %bb65
  %v1_ff38 = xor i1 %v9_ff30, true
  call void @__pseudo_cond_branch(i1 %v1_ff38, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_ff3c = load i32, i32* %r8.global-to-local, align 4
  %v1_ff3c = load i32, i32* %r5.global-to-local, align 4
  %v2_ff3c = add i32 %v1_ff3c, 8
  %v3_ff3c = inttoptr i32 %v2_ff3c to i32*
  store i32 %v0_ff3c, i32* %v3_ff3c, align 4
  br label %dec_label_pc_ff40

dec_label_pc_ff40:                                ; preds = %dec_label_pc_fee4, %bb66
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_ff44 = load i32, i32* @r6, align 4
  %v2_ff44 = add i32 %v0_ff44, 168
  %v3_ff44 = inttoptr i32 %v2_ff44 to i32*
  %v4_ff44 = load i32, i32* %v3_ff44, align 4
  store i32 %v4_ff44, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_ff4c = add i32 %v0_ff44, 12
  %v3_ff4c = inttoptr i32 %v2_ff4c to i32*
  %v4_ff4c = load i32, i32* %v3_ff4c, align 4
  store i32 %v4_ff4c, i32* %r2.global-to-local, align 4
  %v1_ff50 = add i32 %v4_ff44, 4
  %v2_ff50 = inttoptr i32 %v1_ff50 to i32*
  %v3_ff50 = load i32, i32* %v2_ff50, align 4
  store i32 %v3_ff50, i32* %r1.global-to-local, align 4
  %v1_ff54 = inttoptr i32 %v4_ff4c to i32*
  %v2_ff54 = load i32, i32* %v1_ff54, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff58 = icmp eq i32 %v3_ff50, 0
  %v1_ff5c = add i32 %v2_ff54, 1
  store i32 %v1_ff5c, i32* %r3.global-to-local, align 4
  store i32 %v1_ff5c, i32* %v1_ff54, align 4
  br i1 %v2_ff58, label %dec_label_pc_ff68, label %dec_label_pc_ffc8

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff40
  %v0_ff68 = load i32, i32* %r1.global-to-local, align 4
  %v1_ff68 = load i32, i32* %r0.global-to-local, align 4
  %v2_ff68 = add i32 %v1_ff68, 8
  %v3_ff68 = inttoptr i32 %v2_ff68 to i32*
  store i32 %v0_ff68, i32* %v3_ff68, align 4
  %v0_ff6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ff6c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ff70

dec_label_pc_ff70:                                ; preds = %dec_label_pc_ffa0.dec_label_pc_ff70_crit_edge, %dec_label_pc_ff68
  %v0_ff70 = phi i32 [ %v0_ff70.pre, %dec_label_pc_ffa0.dec_label_pc_ff70_crit_edge ], [ %v0_ff6c, %dec_label_pc_ff68 ]
  %v1_ff70 = inttoptr i32 %v0_ff70 to i32*
  %v2_ff70 = load i32, i32* %v1_ff70, align 4
  store i32 %v2_ff70, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_ff70, i32* %r2.global-to-local, align 4
  %v2_ff7c131 = load i32, i32* %v1_ff70, align 4
  store i32 %v2_ff7c131, i32* %r3.global-to-local, align 4
  %v3_ff80133 = icmp uge i32 %v2_ff7c131, %v2_ff70
  store i1 %v3_ff80133, i1* %cpsr_c.global-to-local, align 1
  %v9_ff80139 = icmp eq i32 %v2_ff7c131, %v2_ff70
  br i1 %v9_ff80139, label %dec_label_pc_ff88, label %dec_label_pc_ffa0

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff70, %dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge
  %v0_ff88140 = phi i32 [ %v1_ff80.pre, %dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge ], [ %v2_ff70, %dec_label_pc_ff70 ]
  store i32 %v0_ff88140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ff98 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ff98, label %dec_label_pc_ff9c, label %dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge

dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge:    ; preds = %dec_label_pc_ff88
  %v0_ff7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ff80.pre = load i32, i32* @r4, align 4
  %v1_ff7c = inttoptr i32 %v0_ff7c.pre to i32*
  %v2_ff7c = load i32, i32* %v1_ff7c, align 4
  store i32 %v2_ff7c, i32* %r3.global-to-local, align 4
  %v3_ff80 = icmp uge i32 %v2_ff7c, %v1_ff80.pre
  store i1 %v3_ff80, i1* %cpsr_c.global-to-local, align 1
  %v9_ff80 = icmp eq i32 %v2_ff7c, %v1_ff80.pre
  br i1 %v9_ff80, label %dec_label_pc_ff88, label %dec_label_pc_ffa0

dec_label_pc_ff9c:                                ; preds = %dec_label_pc_ff88
  %v0_ff9c = load i32, i32* @r4, align 4
  store i32 %v0_ff9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ffa0

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff70, %dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge, %dec_label_pc_ff9c
  %v0_ffa8 = phi i32 [ %v0_ff9c, %dec_label_pc_ff9c ], [ %v2_ff7c131, %dec_label_pc_ff70 ], [ %v2_ff7c, %dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge ]
  %v1_ffa0 = phi i32 [ %v0_ff9c, %dec_label_pc_ff9c ], [ %v2_ff70, %dec_label_pc_ff70 ], [ %v1_ff80.pre, %dec_label_pc_ff88.dec_label_pc_ff7c_crit_edge ]
  %v3_ffa0 = icmp uge i32 %v0_ffa8, %v1_ffa0
  store i1 %v3_ffa0, i1* %cpsr_c.global-to-local, align 1
  %v9_ffa0 = icmp eq i32 %v0_ffa8, %v1_ffa0
  br i1 %v9_ffa0, label %dec_label_pc_ffa8, label %dec_label_pc_ffa0.dec_label_pc_ff70_crit_edge

dec_label_pc_ffa0.dec_label_pc_ff70_crit_edge:    ; preds = %dec_label_pc_ffa0
  %v0_ff70.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ff70

dec_label_pc_ffa8:                                ; preds = %dec_label_pc_ffa0
  %v2_ffa8 = icmp ne i32 %v1_ffa0, 0
  store i1 %v2_ffa8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffac = icmp slt i32 %v1_ffa0, 2
  br i1 %v7_ffac, label %dec_label_pc_ffc8, label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ffa8
  %v0_ffb0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_ffb0, i32* %r0.global-to-local, align 4
  %v0_ffb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_ffb4 = add i32 %v0_ffb4, 129
  store i32 %v1_ffb4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ffc8

dec_label_pc_ffc8:                                ; preds = %dec_label_pc_ff40, %dec_label_pc_ffb0, %dec_label_pc_ffa8
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_ffcc = load i32, i32* @r6, align 4
  %v2_ffcc = add i32 %v0_ffcc, 160
  %v3_ffcc = inttoptr i32 %v2_ffcc to i32*
  %v4_ffcc = load i32, i32* %v3_ffcc, align 4
  store i32 %v4_ffcc, i32* %r5.global-to-local, align 4
  %v1_ffd0 = add i32 %v4_ffcc, 8
  %v2_ffd0 = inttoptr i32 %v1_ffd0 to i32*
  %v3_ffd0 = load i32, i32* %v2_ffd0, align 4
  store i32 %v3_ffd0, i32* %r3.global-to-local, align 4
  %v1_ffd4 = load i32, i32* %r8.global-to-local, align 4
  %v3_ffd4 = icmp uge i32 %v3_ffd0, %v1_ffd4
  store i1 %v3_ffd4, i1* %cpsr_c.global-to-local, align 1
  %v9_ffd4 = icmp eq i32 %v3_ffd0, %v1_ffd4
  br i1 %v9_ffd4, label %dec_label_pc_1001c, label %dec_label_pc_ffdc

dec_label_pc_ffdc:                                ; preds = %dec_label_pc_ffc8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_ffcc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_ffe8123 = inttoptr i32 %v4_ffcc to i32*
  %v2_ffe8124 = load i32, i32* %v1_ffe8123, align 4
  store i32 %v2_ffe8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_ffec126 = icmp eq i32 %v2_ffe8124, 0
  br i1 %v9_ffec126, label %dec_label_pc_fff4, label %dec_label_pc_1000c

dec_label_pc_fff4:                                ; preds = %dec_label_pc_ffdc, %dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge
  %v0_fff4127 = phi i32 [ %v1_ffec.pre, %dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge ], [ 0, %dec_label_pc_ffdc ]
  store i32 %v0_fff4127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10004 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10004, label %dec_label_pc_10008, label %dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge

dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge:    ; preds = %dec_label_pc_fff4
  %v0_ffe8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ffec.pre = load i32, i32* @r4, align 4
  %v1_ffe8 = inttoptr i32 %v0_ffe8.pre to i32*
  %v2_ffe8 = load i32, i32* %v1_ffe8, align 4
  store i32 %v2_ffe8, i32* %r3.global-to-local, align 4
  %v3_ffec = icmp uge i32 %v2_ffe8, %v1_ffec.pre
  store i1 %v3_ffec, i1* %cpsr_c.global-to-local, align 1
  %v9_ffec = icmp eq i32 %v2_ffe8, %v1_ffec.pre
  br i1 %v9_ffec, label %dec_label_pc_fff4, label %dec_label_pc_1000c

dec_label_pc_10008:                               ; preds = %dec_label_pc_fff4
  %v0_10008 = load i32, i32* @r4, align 4
  store i32 %v0_10008, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c

dec_label_pc_1000c:                               ; preds = %dec_label_pc_ffdc, %dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge, %dec_label_pc_10008
  %v0_1000c = phi i32 [ %v0_10008, %dec_label_pc_10008 ], [ %v2_ffe8124, %dec_label_pc_ffdc ], [ %v2_ffe8, %dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge ]
  %v1_1000c = phi i32 [ %v0_10008, %dec_label_pc_10008 ], [ 0, %dec_label_pc_ffdc ], [ %v1_ffec.pre, %dec_label_pc_fff4.dec_label_pc_ffe8_crit_edge ]
  %v3_1000c = icmp uge i32 %v0_1000c, %v1_1000c
  store i1 %v3_1000c, i1* %cpsr_c.global-to-local, align 1
  %v9_1000c = icmp eq i32 %v0_1000c, %v1_1000c
  br i1 %v9_1000c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_1000c
  %v1_10010 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_10010, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_1000c, %bb67
  %v1_10014 = xor i1 %v9_1000c, true
  call void @__pseudo_cond_branch(i1 %v1_10014, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_10018 = load i32, i32* %r8.global-to-local, align 4
  %v1_10018 = load i32, i32* %r5.global-to-local, align 4
  %v2_10018 = add i32 %v1_10018, 8
  %v3_10018 = inttoptr i32 %v2_10018 to i32*
  store i32 %v0_10018, i32* %v3_10018, align 4
  %v0_10020.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %dec_label_pc_ffc8, %bb68
  %v0_1002c = phi i32 [ %v0_ffcc, %dec_label_pc_ffc8 ], [ %v0_10020.pre, %bb68 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_10020 = add i32 %v0_1002c, 160
  %v3_10020 = inttoptr i32 %v2_10020 to i32*
  %v4_10020 = load i32, i32* %v3_10020, align 4
  store i32 %v4_10020, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v1_10028 = add i32 %v4_10020, 4
  %v2_10028 = inttoptr i32 %v1_10028 to i32*
  %v3_10028 = load i32, i32* %v2_10028, align 4
  store i32 %v3_10028, i32* %r1.global-to-local, align 4
  %v2_1002c = add i32 %v0_1002c, 84
  %v3_1002c = inttoptr i32 %v2_1002c to i32*
  %v4_1002c = load i32, i32* %v3_1002c, align 4
  store i32 %v4_1002c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10030 = icmp eq i32 %v3_10028, 0
  %v1_10034 = inttoptr i32 %v4_1002c to i32*
  %v2_10034 = load i32, i32* %v1_10034, align 4
  store i32 %v2_10034, i32* @r5, align 4
  br i1 %v2_10030, label %dec_label_pc_1003c, label %dec_label_pc_1009c

dec_label_pc_1003c:                               ; preds = %dec_label_pc_1001c
  %v2_1003c = add i32 %v4_10020, 8
  %v3_1003c = inttoptr i32 %v2_1003c to i32*
  store i32 0, i32* %v3_1003c, align 4
  %v0_10040 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10040, i32* @r7, align 4
  br label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %dec_label_pc_10074.dec_label_pc_10044_crit_edge, %dec_label_pc_1003c
  %v0_10044 = phi i32 [ %v0_10044.pre, %dec_label_pc_10074.dec_label_pc_10044_crit_edge ], [ %v0_10040, %dec_label_pc_1003c ]
  %v1_10044 = inttoptr i32 %v0_10044 to i32*
  %v2_10044 = load i32, i32* %v1_10044, align 4
  store i32 %v2_10044, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10044, i32* %r2.global-to-local, align 4
  %v2_10050111 = load i32, i32* %v1_10044, align 4
  store i32 %v2_10050111, i32* %r3.global-to-local, align 4
  %v3_10054113 = icmp uge i32 %v2_10050111, %v2_10044
  store i1 %v3_10054113, i1* %cpsr_c.global-to-local, align 1
  %v9_10054119 = icmp eq i32 %v2_10050111, %v2_10044
  br i1 %v9_10054119, label %dec_label_pc_1005c, label %dec_label_pc_10074

dec_label_pc_1005c:                               ; preds = %dec_label_pc_10044, %dec_label_pc_1005c.dec_label_pc_10050_crit_edge
  %v0_1005c120 = phi i32 [ %v1_10054.pre, %dec_label_pc_1005c.dec_label_pc_10050_crit_edge ], [ %v2_10044, %dec_label_pc_10044 ]
  store i32 %v0_1005c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1006c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1006c, label %dec_label_pc_10070, label %dec_label_pc_1005c.dec_label_pc_10050_crit_edge

dec_label_pc_1005c.dec_label_pc_10050_crit_edge:  ; preds = %dec_label_pc_1005c
  %v0_10050.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10054.pre = load i32, i32* @r4, align 4
  %v1_10050 = inttoptr i32 %v0_10050.pre to i32*
  %v2_10050 = load i32, i32* %v1_10050, align 4
  store i32 %v2_10050, i32* %r3.global-to-local, align 4
  %v3_10054 = icmp uge i32 %v2_10050, %v1_10054.pre
  store i1 %v3_10054, i1* %cpsr_c.global-to-local, align 1
  %v9_10054 = icmp eq i32 %v2_10050, %v1_10054.pre
  br i1 %v9_10054, label %dec_label_pc_1005c, label %dec_label_pc_10074

dec_label_pc_10070:                               ; preds = %dec_label_pc_1005c
  %v0_10070 = load i32, i32* @r4, align 4
  store i32 %v0_10070, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10074

dec_label_pc_10074:                               ; preds = %dec_label_pc_10044, %dec_label_pc_1005c.dec_label_pc_10050_crit_edge, %dec_label_pc_10070
  %v0_1007c = phi i32 [ %v0_10070, %dec_label_pc_10070 ], [ %v2_10050111, %dec_label_pc_10044 ], [ %v2_10050, %dec_label_pc_1005c.dec_label_pc_10050_crit_edge ]
  %v1_10074 = phi i32 [ %v0_10070, %dec_label_pc_10070 ], [ %v2_10044, %dec_label_pc_10044 ], [ %v1_10054.pre, %dec_label_pc_1005c.dec_label_pc_10050_crit_edge ]
  %v3_10074 = icmp uge i32 %v0_1007c, %v1_10074
  store i1 %v3_10074, i1* %cpsr_c.global-to-local, align 1
  %v9_10074 = icmp eq i32 %v0_1007c, %v1_10074
  br i1 %v9_10074, label %dec_label_pc_1007c, label %dec_label_pc_10074.dec_label_pc_10044_crit_edge

dec_label_pc_10074.dec_label_pc_10044_crit_edge:  ; preds = %dec_label_pc_10074
  %v0_10044.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10044

dec_label_pc_1007c:                               ; preds = %dec_label_pc_10074
  %v2_1007c = icmp ne i32 %v1_10074, 0
  store i1 %v2_1007c, i1* %cpsr_c.global-to-local, align 1
  %v7_10080 = icmp slt i32 %v1_10074, 2
  br i1 %v7_10080, label %dec_label_pc_1009cthread-pre-split, label %dec_label_pc_10084

dec_label_pc_10084:                               ; preds = %dec_label_pc_1007c
  %v0_10084 = load i32, i32* @r7, align 4
  store i32 %v0_10084, i32* %r0.global-to-local, align 4
  %v0_10088 = load i32, i32* %r1.global-to-local, align 4
  %v1_10088 = add i32 %v0_10088, 129
  store i32 %v1_10088, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1009cthread-pre-split

dec_label_pc_1009cthread-pre-split:               ; preds = %dec_label_pc_1007c, %dec_label_pc_10084
  %v0_101e8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1009c

dec_label_pc_1009c:                               ; preds = %dec_label_pc_1009cthread-pre-split, %dec_label_pc_1001c
  %v0_101e8.pr = phi i32 [ %v0_101e8.pr.pr, %dec_label_pc_1009cthread-pre-split ], [ %v2_10034, %dec_label_pc_1001c ]
  store i32 100, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101e818 = icmp eq i32 %v0_101e8.pr, 0
  br i1 %v2_101e818, label %dec_label_pc_101f0, label %dec_label_pc_100ac

dec_label_pc_100ac:                               ; preds = %dec_label_pc_1009c, %dec_label_pc_101e4
  %v0_100d4 = phi i32 [ %v3_101e4, %dec_label_pc_101e4 ], [ %v0_101e8.pr, %dec_label_pc_1009c ]
  %v1_100ac = inttoptr i32 %v0_100d4 to i16*
  %v2_100ac = load i16, i16* %v1_100ac, align 2
  %v3_100ac = zext i16 %v2_100ac to i32
  store i32 %v3_100ac, i32* %r3.global-to-local, align 4
  %v1_100b0 = and i32 %v3_100ac, 64
  %v2_100b0 = icmp eq i32 %v1_100b0, 0
  br i1 %v2_100b0, label %dec_label_pc_101e4, label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_100ac
  %v0_100b8 = load i32, i32* @r6, align 4
  %v1_100b8 = load i32, i32* %sb.global-to-local, align 4
  %v2_100b8 = add i32 %v1_100b8, %v0_100b8
  %v3_100b8 = inttoptr i32 %v2_100b8 to i32*
  %v4_100b8 = load i32, i32* %v3_100b8, align 4
  store i32 %v4_100b8, i32* %r3.global-to-local, align 4
  %v1_100bc = inttoptr i32 %v4_100b8 to i32*
  %v2_100bc = load i32, i32* %v1_100bc, align 4
  store i32 %v2_100bc, i32* %r3.global-to-local, align 4
  %v2_100c0 = icmp ugt i32 %v2_100bc, 1
  store i1 %v2_100c0, i1* %cpsr_c.global-to-local, align 1
  %v7_100c0 = icmp eq i32 %v2_100bc, 2
  br i1 %v7_100c0, label %dec_label_pc_10124, label %dec_label_pc_100c8

dec_label_pc_100c8:                               ; preds = %dec_label_pc_100b8
  %v1_100c8 = add i32 %v0_100d4, 64
  %v2_100c8 = inttoptr i32 %v1_100c8 to i32*
  %v3_100c8 = load i32, i32* %v2_100c8, align 4
  store i32 %v3_100c8, i32* %r3.global-to-local, align 4
  %v1_100cc = load i32, i32* %r8.global-to-local, align 4
  %v3_100cc = icmp uge i32 %v3_100c8, %v1_100cc
  store i1 %v3_100cc, i1* %cpsr_c.global-to-local, align 1
  %v9_100cc = icmp eq i32 %v3_100c8, %v1_100cc
  br i1 %v9_100cc, label %dec_label_pc_10118, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100c8
  %v1_100d4 = add i32 %v0_100d4, 56
  store i32 %v1_100d4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_100d4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_100e486 = inttoptr i32 %v1_100d4 to i32*
  %v2_100e487 = load i32, i32* %v1_100e486, align 4
  store i32 %v2_100e487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_100e894 = icmp eq i32 %v2_100e487, 0
  br i1 %v9_100e894, label %dec_label_pc_100f0, label %dec_label_pc_10108

dec_label_pc_100f0:                               ; preds = %dec_label_pc_100d4, %dec_label_pc_100f0.dec_label_pc_100e4_crit_edge
  %v0_100f095 = phi i32 [ %v1_100e8.pre, %dec_label_pc_100f0.dec_label_pc_100e4_crit_edge ], [ 0, %dec_label_pc_100d4 ]
  store i32 %v0_100f095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10100 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10100, label %dec_label_pc_10104, label %dec_label_pc_100f0.dec_label_pc_100e4_crit_edge

dec_label_pc_100f0.dec_label_pc_100e4_crit_edge:  ; preds = %dec_label_pc_100f0
  %v0_100e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_100e8.pre = load i32, i32* @r4, align 4
  %v1_100e4 = inttoptr i32 %v0_100e4.pre to i32*
  %v2_100e4 = load i32, i32* %v1_100e4, align 4
  store i32 %v2_100e4, i32* %r3.global-to-local, align 4
  %v3_100e8 = icmp uge i32 %v2_100e4, %v1_100e8.pre
  store i1 %v3_100e8, i1* %cpsr_c.global-to-local, align 1
  %v9_100e8 = icmp eq i32 %v2_100e4, %v1_100e8.pre
  br i1 %v9_100e8, label %dec_label_pc_100f0, label %dec_label_pc_10108

dec_label_pc_10104:                               ; preds = %dec_label_pc_100f0
  %v0_10104 = load i32, i32* @r4, align 4
  store i32 %v0_10104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10108

dec_label_pc_10108:                               ; preds = %dec_label_pc_100d4, %dec_label_pc_100f0.dec_label_pc_100e4_crit_edge, %dec_label_pc_10104
  %v0_10108 = phi i32 [ %v0_10104, %dec_label_pc_10104 ], [ %v2_100e487, %dec_label_pc_100d4 ], [ %v2_100e4, %dec_label_pc_100f0.dec_label_pc_100e4_crit_edge ]
  %v1_10108 = phi i32 [ %v0_10104, %dec_label_pc_10104 ], [ 0, %dec_label_pc_100d4 ], [ %v1_100e8.pre, %dec_label_pc_100f0.dec_label_pc_100e4_crit_edge ]
  %v3_10108 = icmp uge i32 %v0_10108, %v1_10108
  store i1 %v3_10108, i1* %cpsr_c.global-to-local, align 1
  %v9_10108 = icmp eq i32 %v0_10108, %v1_10108
  br i1 %v9_10108, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_10108
  %v1_1010c = load i32, i32* @r7, align 4
  store i32 %v1_1010c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_10108, %bb69
  %v1_10110 = xor i1 %v9_10108, true
  call void @__pseudo_cond_branch(i1 %v1_10110, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_10114 = load i32, i32* %r8.global-to-local, align 4
  %v1_10114 = load i32, i32* @r5, align 4
  %v2_10114 = add i32 %v1_10114, 64
  %v3_10114 = inttoptr i32 %v2_10114 to i32*
  store i32 %v0_10114, i32* %v3_10114, align 4
  %v0_10118.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10118

dec_label_pc_10118:                               ; preds = %dec_label_pc_100c8, %bb70
  %v0_10118 = phi i32 [ %v0_100d4, %dec_label_pc_100c8 ], [ %v0_10118.pre, %bb70 ]
  %v1_10118 = add i32 %v0_10118, 60
  %v2_10118 = inttoptr i32 %v1_10118 to i32*
  %v3_10118 = load i32, i32* %v2_10118, align 4
  %v1_1011c = add i32 %v3_10118, 1
  store i32 %v1_1011c, i32* %r3.global-to-local, align 4
  store i32 %v1_1011c, i32* %v2_10118, align 4
  %v0_10124.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10124

dec_label_pc_10124:                               ; preds = %dec_label_pc_100b8, %dec_label_pc_10118
  %v0_1013c = phi i32 [ %v0_100d4, %dec_label_pc_100b8 ], [ %v0_10124.pre, %dec_label_pc_10118 ]
  %v1_10124 = inttoptr i32 %v0_1013c to i16*
  %v2_10124 = load i16, i16* %v1_10124, align 2
  %v3_10124 = zext i16 %v2_10124 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1012c = or i32 %v3_10124, %stack_var_-44.1
  %v1_10130 = xor i32 %v2_1012c, 320
  store i32 %v1_10130, i32* %r3.global-to-local, align 4
  %v1_10134 = and i32 %v1_10130, 832
  %v2_10134 = icmp eq i32 %v1_10134, 0
  br i1 %v2_10134, label %dec_label_pc_1013c, label %bb71

dec_label_pc_1013c:                               ; preds = %dec_label_pc_10124
  store i32 %v0_1013c, i32* @r0, align 4
  %v0_10140 = call i32 @__stdio_wcommit()
  store i32 %v0_10140, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10144 = icmp eq i32 %v0_10140, 0
  br i1 %v2_10144, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_1013c
  %v1_10148 = load i32, i32* @r5, align 4
  %v2_10148 = inttoptr i32 %v1_10148 to i16*
  %v3_10148 = load i16, i16* %v2_10148, align 2
  %v4_10148 = zext i16 %v3_10148 to i32
  store i32 %v4_10148, i32* %r3.global-to-local, align 4
  %v2_1014c = add i32 %v1_10148, 8
  %v3_1014c = inttoptr i32 %v2_1014c to i32*
  %v4_1014c = load i32, i32* %v3_1014c, align 4
  store i32 %v4_1014c, i32* %r2.global-to-local, align 4
  %v2_10150 = and i32 %v4_10148, 65471
  store i32 %v2_10150, i32* %r3.global-to-local, align 4
  %v3_10154 = add i32 %v1_10148, 28
  %v4_10154 = inttoptr i32 %v3_10154 to i32*
  store i32 %v4_1014c, i32* %v4_10154, align 4
  %v1_10158 = load i32, i32* %r3.global-to-local, align 4
  %v2_10158 = trunc i32 %v1_10158 to i16
  %v3_10158 = load i32, i32* @r5, align 4
  %v4_10158 = inttoptr i32 %v3_10158 to i16*
  store i16 %v2_10158, i16* %v4_10158, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_1013c
  %v1_1015c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_1015c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_10124, %.thread7
  %v0_10160 = load i32, i32* @r6, align 4
  %v1_10160 = load i32, i32* %sb.global-to-local, align 4
  %v2_10160 = add i32 %v1_10160, %v0_10160
  %v3_10160 = inttoptr i32 %v2_10160 to i32*
  %v4_10160 = load i32, i32* %v3_10160, align 4
  store i32 %v4_10160, i32* %r3.global-to-local, align 4
  %v1_10164 = inttoptr i32 %v4_10160 to i32*
  %v2_10164 = load i32, i32* %v1_10164, align 4
  store i32 %v2_10164, i32* %r3.global-to-local, align 4
  %v2_10168 = icmp ugt i32 %v2_10164, 1
  store i1 %v2_10168, i1* %cpsr_c.global-to-local, align 1
  %v7_10168 = icmp eq i32 %v2_10164, 2
  br i1 %v7_10168, label %dec_label_pc_101e4, label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %bb71
  %v0_10170 = load i32, i32* @r5, align 4
  %v1_10170 = add i32 %v0_10170, 60
  %v2_10170 = inttoptr i32 %v1_10170 to i32*
  %v3_10170 = load i32, i32* %v2_10170, align 4
  %v1_10174 = add i32 %v3_10170, -1
  store i32 %v1_10174, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10178 = icmp eq i32 %v1_10174, 0
  store i32 %v1_10174, i32* %v2_10170, align 4
  br i1 %v2_10178, label %dec_label_pc_10184, label %dec_label_pc_101e4

dec_label_pc_10184:                               ; preds = %dec_label_pc_10170
  %v0_10184 = load i32, i32* %r3.global-to-local, align 4
  %v1_10184 = load i32, i32* @r5, align 4
  %v2_10184 = add i32 %v1_10184, 64
  %v3_10184 = inttoptr i32 %v2_10184 to i32*
  store i32 %v0_10184, i32* %v3_10184, align 4
  %v0_10188 = load i32, i32* @r5, align 4
  %v1_10188 = add i32 %v0_10188, 56
  store i32 %v1_10188, i32* @r7, align 4
  br label %dec_label_pc_1018c

dec_label_pc_1018c:                               ; preds = %dec_label_pc_101bc.dec_label_pc_1018c_crit_edge, %dec_label_pc_10184
  %v0_10194 = phi i32 [ %v0_10194.pre, %dec_label_pc_101bc.dec_label_pc_1018c_crit_edge ], [ %v1_10188, %dec_label_pc_10184 ]
  %v0_1018c = phi i32 [ %v0_1018c.pre, %dec_label_pc_101bc.dec_label_pc_1018c_crit_edge ], [ %v0_10188, %dec_label_pc_10184 ]
  %v1_1018c = add i32 %v0_1018c, 56
  %v2_1018c = inttoptr i32 %v1_1018c to i32*
  %v3_1018c = load i32, i32* %v2_1018c, align 4
  store i32 %v3_1018c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10194, i32* %r2.global-to-local, align 4
  %v1_1019897 = inttoptr i32 %v0_10194 to i32*
  %v2_1019898 = load i32, i32* %v1_1019897, align 4
  store i32 %v2_1019898, i32* %r3.global-to-local, align 4
  %v3_1019c100 = icmp uge i32 %v2_1019898, %v3_1018c
  store i1 %v3_1019c100, i1* %cpsr_c.global-to-local, align 1
  %v9_1019c106 = icmp eq i32 %v2_1019898, %v3_1018c
  br i1 %v9_1019c106, label %dec_label_pc_101a4, label %dec_label_pc_101bc

dec_label_pc_101a4:                               ; preds = %dec_label_pc_1018c, %dec_label_pc_101a4.dec_label_pc_10198_crit_edge
  %v0_101a4107 = phi i32 [ %v1_1019c.pre, %dec_label_pc_101a4.dec_label_pc_10198_crit_edge ], [ %v3_1018c, %dec_label_pc_1018c ]
  store i32 %v0_101a4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_101b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_101b4, label %dec_label_pc_101b8, label %dec_label_pc_101a4.dec_label_pc_10198_crit_edge

dec_label_pc_101a4.dec_label_pc_10198_crit_edge:  ; preds = %dec_label_pc_101a4
  %v0_10198.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1019c.pre = load i32, i32* @r4, align 4
  %v1_10198 = inttoptr i32 %v0_10198.pre to i32*
  %v2_10198 = load i32, i32* %v1_10198, align 4
  store i32 %v2_10198, i32* %r3.global-to-local, align 4
  %v3_1019c = icmp uge i32 %v2_10198, %v1_1019c.pre
  store i1 %v3_1019c, i1* %cpsr_c.global-to-local, align 1
  %v9_1019c = icmp eq i32 %v2_10198, %v1_1019c.pre
  br i1 %v9_1019c, label %dec_label_pc_101a4, label %dec_label_pc_101bc

dec_label_pc_101b8:                               ; preds = %dec_label_pc_101a4
  %v0_101b8 = load i32, i32* @r4, align 4
  store i32 %v0_101b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_101bc

dec_label_pc_101bc:                               ; preds = %dec_label_pc_1018c, %dec_label_pc_101a4.dec_label_pc_10198_crit_edge, %dec_label_pc_101b8
  %v0_101c4 = phi i32 [ %v0_101b8, %dec_label_pc_101b8 ], [ %v2_1019898, %dec_label_pc_1018c ], [ %v2_10198, %dec_label_pc_101a4.dec_label_pc_10198_crit_edge ]
  %v1_101bc = phi i32 [ %v0_101b8, %dec_label_pc_101b8 ], [ %v3_1018c, %dec_label_pc_1018c ], [ %v1_1019c.pre, %dec_label_pc_101a4.dec_label_pc_10198_crit_edge ]
  %v3_101bc = icmp uge i32 %v0_101c4, %v1_101bc
  store i1 %v3_101bc, i1* %cpsr_c.global-to-local, align 1
  %v9_101bc = icmp eq i32 %v0_101c4, %v1_101bc
  br i1 %v9_101bc, label %dec_label_pc_101c4, label %dec_label_pc_101bc.dec_label_pc_1018c_crit_edge

dec_label_pc_101bc.dec_label_pc_1018c_crit_edge:  ; preds = %dec_label_pc_101bc
  %v0_1018c.pre = load i32, i32* @r5, align 4
  %v0_10194.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1018c

dec_label_pc_101c4:                               ; preds = %dec_label_pc_101bc
  %v2_101c4 = icmp ne i32 %v1_101bc, 0
  store i1 %v2_101c4, i1* %cpsr_c.global-to-local, align 1
  %v7_101c8 = icmp slt i32 %v1_101bc, 2
  br i1 %v7_101c8, label %dec_label_pc_101e4, label %dec_label_pc_101cc

dec_label_pc_101cc:                               ; preds = %dec_label_pc_101c4
  %v0_101cc = load i32, i32* @r5, align 4
  %v1_101cc = add i32 %v0_101cc, 56
  store i32 %v1_101cc, i32* %r0.global-to-local, align 4
  %v0_101d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_101d0 = add i32 %v0_101d0, 129
  store i32 %v1_101d0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_101e4

dec_label_pc_101e4:                               ; preds = %dec_label_pc_10170, %dec_label_pc_101cc, %dec_label_pc_101c4, %bb71, %dec_label_pc_100ac
  %v0_101e4 = load i32, i32* @r5, align 4
  %v1_101e4 = add i32 %v0_101e4, 32
  %v2_101e4 = inttoptr i32 %v1_101e4 to i32*
  %v3_101e4 = load i32, i32* %v2_101e4, align 4
  store i32 %v3_101e4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101e8 = icmp eq i32 %v3_101e4, 0
  br i1 %v2_101e8, label %dec_label_pc_101f0, label %dec_label_pc_100ac

dec_label_pc_101f0:                               ; preds = %dec_label_pc_101e4, %dec_label_pc_1009c
  %v0_101f0 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_101f0, i32* %r0.global-to-local, align 4
  %v0_1022c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_101f8:                               ; preds = %dec_label_pc_fed4
  %v3_101f8 = load i16, i16* %arg1, align 2
  %v4_101f8 = zext i16 %v3_101f8 to i32
  %v1_101fc = and i32 %v4_101f8, 64
  store i32 %v1_101fc, i32* %r3.global-to-local, align 4
  %v2_101fc = icmp eq i32 %v1_101fc, 0
  br i1 %v2_101fc, label %bb72, label %dec_label_pc_10208

bb72:                                             ; preds = %dec_label_pc_101f8
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_10208:                               ; preds = %dec_label_pc_101f8
  %v0_10208 = call i32 @__stdio_wcommit()
  store i32 %v0_10208, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1020c = icmp eq i32 %v0_10208, 0
  br i1 %v2_1020c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_10208
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_10208
  %v1_10210 = load i32, i32* @r4, align 4
  %v2_10210 = inttoptr i32 %v1_10210 to i16*
  %v3_10210 = load i16, i16* %v2_10210, align 2
  %v4_10210 = zext i16 %v3_10210 to i32
  store i32 %v4_10210, i32* %r3.global-to-local, align 4
  %v2_10214 = add i32 %v1_10210, 8
  %v3_10214 = inttoptr i32 %v2_10214 to i32*
  %v4_10214 = load i32, i32* %v3_10214, align 4
  store i32 %v4_10214, i32* %r2.global-to-local, align 4
  %v2_10218 = and i32 %v4_10210, 65471
  store i32 %v2_10218, i32* %r3.global-to-local, align 4
  %v2_1021c = trunc i32 %v2_10218 to i16
  store i16 %v2_1021c, i16* %v2_10210, align 2
  %v1_10220 = load i32, i32* %r2.global-to-local, align 4
  %v2_10220 = load i32, i32* @r4, align 4
  %v3_10220 = add i32 %v2_10220, 28
  %v4_10220 = inttoptr i32 %v3_10220 to i32*
  store i32 %v1_10220, i32* %v4_10220, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_101f0, %.thread14
  %v0_1022c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_1022c.pre, %dec_label_pc_101f0 ], [ 0, %.thread14 ]
  store i32 %v0_1022c, i32* %r0.global-to-local, align 4
  store i32 %v6_fea8, i32* %r5.global-to-local, align 4
  ret i32 %v0_1022c

; uselistorder directives
  uselistorder i32 %v0_1022c, { 1, 0 }
  uselistorder i32 %v3_101e4, { 1, 2, 0 }
  uselistorder i32 %v0_101b8, { 1, 0, 2 }
  uselistorder i32 %v1_1019c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10104, { 1, 0, 2 }
  uselistorder i32 %v1_100e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100cc, { 1, 0 }
  uselistorder i32 %v0_10070, { 1, 0, 2 }
  uselistorder i32 %v1_10054.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10044, { 1, 0 }
  uselistorder i32 %v0_10008, { 1, 0, 2 }
  uselistorder i32 %v1_ffec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_ffd4, { 1, 0 }
  uselistorder i32 %v0_ff9c, { 1, 0, 2 }
  uselistorder i32 %v1_ff80.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_ff70, { 1, 0 }
  uselistorder i32 %v0_ff2c, { 1, 0, 2 }
  uselistorder i32 %v1_ff10.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_fee8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 9, 8, 55, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 29, 28, 0, 30, 31, 32, 33, 35, 34, 54, 36, 37, 38, 39, 41, 40, 2, 42, 43, 44, 45, 47, 46, 1, 48, 49, 52, 50, 51 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 17, 6, 7, 8, 39, 40, 9, 10, 11, 12, 14, 13, 2, 15, 16, 3, 18, 19, 20, 37, 38, 21, 22, 24, 23, 0, 25, 26, 27, 29, 28, 1, 30, 31, 33, 32, 4, 34, 35, 36 }
  uselistorder i32 168, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_101e4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_101bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_101a4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10124, { 1, 0 }
  uselistorder label %dec_label_pc_10118, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_10108, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100f0, { 1, 0 }
  uselistorder label %dec_label_pc_100ac, { 1, 0 }
  uselistorder label %dec_label_pc_1009cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10074, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1005c, { 1, 0 }
  uselistorder label %dec_label_pc_1001c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_1000c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fff4, { 1, 0 }
  uselistorder label %dec_label_pc_ffc8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ffa0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff88, { 1, 0 }
  uselistorder label %dec_label_pc_ff40, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_ff30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff18, { 1, 0 }
  uselistorder label %dec_label_pc_fee4, { 1, 0 }
}

define i32 @function_10240(i32 %arg1) local_unnamed_addr {
dec_label_pc_10240:
  %v0_10240 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10240, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_10240
  %v2_10240 = load i32, i32* @r4, align 4
  %v8_10240 = ashr i32 %v2_10240, %arg1
  %v9_10240 = and i32 %v8_10240, %arg1
  %v2_10244 = load i32, i32* @r8, align 4
  %v5_10244 = udiv i32 %v2_10244, 2
  %v6_10244 = and i32 %v9_10240, %v5_10244
  %v2_10248 = load i32, i32* @ip, align 4
  %v3_10248 = and i32 %v6_10244, %v2_10248
  %v5_1024c = udiv i32 %v3_10248, 2
  %v6_1024c = and i32 %v3_10248, %v2_10240
  %v4_10250 = and i32 %v6_1024c, %v5_1024c
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_10240, %bb
  %v5_10250 = phi i32 [ %arg1, %dec_label_pc_10240 ], [ %v4_10250, %bb ]
  ret i32 %v5_10250

; uselistorder directives
  uselistorder i32 %v3_10248, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_10254 = load i32, i32* @r4, align 4
  store i32 %v3_10254, i32* %stack_var_-12, align 4
  %v6_10254 = load i32, i32* @r5, align 4
  %v9_10254 = load i32, i32* @lr, align 4
  %v0_10258 = load i32, i32* @r0, align 4
  %v1_10258 = add i32 %v0_10258, 16
  %v2_10258 = inttoptr i32 %v1_10258 to i32*
  %v3_10258 = load i32, i32* %v2_10258, align 4
  store i32 %v3_10258, i32* %r2.global-to-local, align 4
  %v1_1025c = add i32 %v0_10258, 24
  %v2_1025c = inttoptr i32 %v1_1025c to i32*
  %v3_1025c = load i32, i32* %v2_1025c, align 4
  %v3_10260 = icmp ult i32 %v3_10258, %v3_1025c
  store i32 %v0_10258, i32* @r4, align 4
  br i1 %v3_10260, label %bb, label %dec_label_pc_10280

bb:                                               ; preds = %entry
  %v2_1026c = inttoptr i32 %v3_10258 to i8*
  %v3_1026c = load i8, i8* %v2_1026c, align 1
  %v4_1026c = zext i8 %v3_1026c to i32
  store i32 %v4_1026c, i32* %r0.global-to-local, align 4
  %v6_1026c = add i32 %v3_10258, 1
  store i32 %v6_1026c, i32* %r2.global-to-local, align 4
  store i32 %v6_1026c, i32* %v2_10258, align 4
  br label %dec_label_pc_1036c

dec_label_pc_10280:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  %v1_10280 = inttoptr i32 %v0_10258 to i16*
  %v2_10280 = load i16, i16* %v1_10280, align 2
  %v3_10280 = zext i16 %v2_10280 to i32
  %v1_10284 = and i32 %v3_10280, 131
  %tmp25 = icmp ugt i32 %v1_10284, 128
  br i1 %tmp25, label %dec_label_pc_102a0, label %dec_label_pc_10290

dec_label_pc_10290:                               ; preds = %dec_label_pc_10280
  store i32 128, i32* @r1, align 4
  %v0_10294 = call i32 @__stdio_trans2r_o()
  store i32 %v0_10294, i32* %r0.global-to-local, align 4
  %v2_10298 = icmp eq i32 %v0_10294, 0
  br i1 %v2_10298, label %dec_label_pc_10290.dec_label_pc_102a0_crit_edge, label %dec_label_pc_10368

dec_label_pc_10290.dec_label_pc_102a0_crit_edge:  ; preds = %dec_label_pc_10290
  %v0_102a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_102a0

dec_label_pc_102a0:                               ; preds = %dec_label_pc_10290.dec_label_pc_102a0_crit_edge, %dec_label_pc_10280
  %v2_102e0 = phi i32 [ %v0_102a0.pre, %dec_label_pc_10290.dec_label_pc_102a0_crit_edge ], [ %v0_10258, %dec_label_pc_10280 ]
  %v1_102a0 = inttoptr i32 %v2_102e0 to i16*
  %v2_102a0 = load i16, i16* %v1_102a0, align 2
  %v3_102a0 = zext i16 %v2_102a0 to i32
  store i32 %v3_102a0, i32* %r2.global-to-local, align 4
  %v1_102a4 = and i32 %v3_102a0, 2
  %v2_102a4 = icmp eq i32 %v1_102a4, 0
  br i1 %v2_102a4, label %dec_label_pc_102d0, label %dec_label_pc_102ac

dec_label_pc_102ac:                               ; preds = %dec_label_pc_102a0
  %tmp26 = urem i16 %v2_102a0, 2
  %v1_102ac = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_102ac
  %v4_102b0 = and i32 %tmp22, 4
  %v5_102b0 = add i32 %v4_102b0, %v2_102e0
  %v1_102b4 = add i32 %v5_102b0, 36
  %v2_102b4 = inttoptr i32 %v1_102b4 to i8*
  %v3_102b4 = load i8, i8* %v2_102b4, align 1
  %v4_102b4 = zext i8 %v3_102b4 to i32
  %v1_102b8 = add nsw i32 %v3_102a0, -1
  store i32 %v1_102b8, i32* %r2.global-to-local, align 4
  store i32 %v4_102b4, i32* %r0.global-to-local, align 4
  %v2_102c4 = add i32 %v2_102e0, 40
  %v3_102c4 = inttoptr i32 %v2_102c4 to i32*
  store i32 0, i32* %v3_102c4, align 4
  %v0_102c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_102c8 = trunc i32 %v0_102c8 to i16
  %v2_102c8 = load i32, i32* @r4, align 4
  %v3_102c8 = inttoptr i32 %v2_102c8 to i16*
  store i16 %v1_102c8, i16* %v3_102c8, align 2
  br label %dec_label_pc_1036c

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102a0
  %v1_102d0 = add i32 %v2_102e0, 16
  %v1_102d4 = inttoptr i32 %v1_102d0 to i32*
  %v2_102d4 = load i32, i32* %v1_102d4, align 4
  store i32 %v2_102d4, i32* @r1, align 4
  %v3_102d4 = add i32 %v2_102e0, 20
  %v4_102d4 = inttoptr i32 %v3_102d4 to i32*
  %v5_102d4 = load i32, i32* %v4_102d4, align 4
  %v9_102d8 = icmp eq i32 %v5_102d4, %v2_102d4
  br i1 %v9_102d8, label %dec_label_pc_102e8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_102d0
  %v2_102dc = inttoptr i32 %v2_102d4 to i8*
  %v3_102dc = load i8, i8* %v2_102dc, align 1
  %v4_102dc = zext i8 %v3_102dc to i32
  store i32 %v4_102dc, i32* %r0.global-to-local, align 4
  %v6_102dc = add i32 %v2_102d4, 1
  store i32 %v6_102dc, i32* @r1, align 4
  store i32 %v6_102dc, i32* %v1_102d4, align 4
  br label %dec_label_pc_1036c

dec_label_pc_102e8:                               ; preds = %dec_label_pc_102d0
  %v1_102e8 = add i32 %v2_102e0, 4
  %v2_102e8 = inttoptr i32 %v1_102e8 to i32*
  %v3_102e8 = load i32, i32* %v2_102e8, align 4
  %v7_102ec = icmp eq i32 %v3_102e8, -2
  br i1 %v7_102ec, label %.thread7, label %dec_label_pc_10300

.thread7:                                         ; preds = %dec_label_pc_102e8
  %v2_102f0 = or i16 %v2_102a0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_102f0, i16* %v1_102a0, align 2
  br label %dec_label_pc_1036c

dec_label_pc_10300:                               ; preds = %dec_label_pc_102e8
  %v1_10300 = and i32 %v3_102a0, 768
  %v2_10300 = icmp eq i32 %v1_10300, 0
  br i1 %v2_10300, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_10300
  %v1_10308 = load i32, i32* @r5, align 4
  %v3_10308 = add i32 %v1_10308, 84
  %v4_10308 = inttoptr i32 %v3_10308 to i32*
  %v5_10308 = load i32, i32* %v4_10308, align 4
  store i32 %v5_10308, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_10300, %bb23
  store i32 66320, i32* @lr, align 4
  %v1_1030c = xor i1 %v2_10300, true
  call void @__pseudo_cond_branch(i1 %v1_1030c, i32 ptrtoint (i32* @global_var_fea8.328 to i32))
  %v0_10310 = load i32, i32* @r4, align 4
  %v1_10310 = add i32 %v0_10310, 8
  store i32 %v1_10310, i32* %r2.global-to-local, align 4
  %v1_10314 = inttoptr i32 %v1_10310 to i32*
  %v2_10314 = load i32, i32* %v1_10314, align 4
  store i32 %v2_10314, i32* %r2.global-to-local, align 4
  %v3_10314 = add i32 %v0_10310, 12
  %v4_10314 = inttoptr i32 %v3_10314 to i32*
  %v5_10314 = load i32, i32* %v4_10314, align 4
  %v9_10318 = icmp eq i32 %v5_10314, %v2_10314
  br i1 %v9_10318, label %dec_label_pc_1034c, label %dec_label_pc_10320

dec_label_pc_10320:                               ; preds = %.thread9
  %v2_10320 = add i32 %v0_10310, 24
  %v3_10320 = inttoptr i32 %v2_10320 to i32*
  store i32 %v2_10314, i32* %v3_10320, align 4
  %v0_10324 = load i32, i32* @r4, align 4
  store i32 %v0_10324, i32* %r0.global-to-local, align 4
  %v2_10328 = call i32 @__stdio_rfill(i32 %v0_10324)
  store i32 %v2_10328, i32* %r0.global-to-local, align 4
  %v2_1032c = icmp eq i32 %v2_10328, 0
  br i1 %v2_1032c, label %dec_label_pc_10368, label %dec_label_pc_10334

dec_label_pc_10334:                               ; preds = %dec_label_pc_10320
  %v0_10334 = load i32, i32* @r4, align 4
  %v1_10334 = add i32 %v0_10334, 20
  %v2_10334 = inttoptr i32 %v1_10334 to i32*
  %v3_10334 = load i32, i32* %v2_10334, align 4
  %v2_10338 = add i32 %v0_10334, 24
  %v3_10338 = inttoptr i32 %v2_10338 to i32*
  store i32 %v3_10334, i32* %v3_10338, align 4
  %v0_1033c = load i32, i32* @r4, align 4
  %v1_1033c = add i32 %v0_1033c, 16
  %v2_1033c = inttoptr i32 %v1_1033c to i32*
  %v3_1033c = load i32, i32* %v2_1033c, align 4
  %v1_10340 = inttoptr i32 %v3_1033c to i8*
  %v2_10340 = load i8, i8* %v1_10340, align 1
  %v3_10340 = zext i8 %v2_10340 to i32
  store i32 %v3_10340, i32* %r0.global-to-local, align 4
  %v5_10340 = add i32 %v3_1033c, 1
  store i32 %v5_10340, i32* %v2_1033c, align 4
  br label %dec_label_pc_1036c

dec_label_pc_1034c:                               ; preds = %.thread9
  %v1_1034c = inttoptr i32 %v0_10310 to i16*
  store i32 %v0_10310, i32* %r0.global-to-local, align 4
  %v2_10350 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_10350, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10358 = call i32 @__stdio_READ(i16* %v1_1034c, i32 %v2_10350, i32 1)
  store i32 %v5_10358, i32* %r0.global-to-local, align 4
  %v2_1035c = icmp eq i32 %v5_10358, 0
  br i1 %v2_1035c, label %dec_label_pc_10368, label %bb24

bb24:                                             ; preds = %dec_label_pc_1034c
  %v4_10360 = load i8, i8* %stack_var_-17, align 1
  %v5_10360 = sext i8 %v4_10360 to i32
  store i32 %v5_10360, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1036c

dec_label_pc_10368:                               ; preds = %dec_label_pc_1034c, %dec_label_pc_10290, %dec_label_pc_10320
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1036c

dec_label_pc_1036c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_10334, %dec_label_pc_102ac, %dec_label_pc_10368
  %v2_10370 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10370, i32* @r4, align 4
  store i32 %v6_10254, i32* @r5, align 4
  store i32 %v9_10254, i32* @lr, align 4
  %v1_10374 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10374

; uselistorder directives
  uselistorder i32 %v2_102d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_102e0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_10258, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_1036c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_10368, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_10380 = load i32, i32* @r6, align 4
  %v12_10380 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10384 = icmp eq i32 %arg2, 0
  store i1 %v2_10384, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1040c, label %dec_label_pc_103f4.preheader

dec_label_pc_103f4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_103f42 = add i32 %arg2, -1
  store i32 %v1_103f42, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_103f48 = icmp eq i32 %arg2, 1
  store i1 %v7_103f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103f48, label %dec_label_pc_103fc, label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %dec_label_pc_103f4.preheader, %dec_label_pc_103f4.backedge.dec_label_pc_103a0_crit_edge
  %v0_103c4 = phi i32 [ %v0_103a0.pre, %dec_label_pc_103f4.backedge.dec_label_pc_103a0_crit_edge ], [ %arg3, %dec_label_pc_103f4.preheader ]
  %v1_103a0 = add i32 %v0_103c4, 16
  %v2_103a0 = inttoptr i32 %v1_103a0 to i32*
  %v3_103a0 = load i32, i32* %v2_103a0, align 4
  store i32 %v3_103a0, i32* %r2.global-to-local, align 4
  %v1_103a4 = add i32 %v0_103c4, 24
  %v2_103a4 = inttoptr i32 %v1_103a4 to i32*
  %v3_103a4 = load i32, i32* %v2_103a4, align 4
  store i32 %v3_103a4, i32* %r3.global-to-local, align 4
  %v3_103a8 = icmp uge i32 %v3_103a0, %v3_103a4
  store i1 %v3_103a8, i1* %cpsr_c.global-to-local, align 1
  %v9_103a8 = icmp eq i32 %v3_103a0, %v3_103a4
  store i1 %v9_103a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_103a8, label %dec_label_pc_103c4, label %dec_label_pc_103b0

dec_label_pc_103b0:                               ; preds = %dec_label_pc_103a0
  %v1_103b0 = inttoptr i32 %v3_103a0 to i8*
  %v2_103b0 = load i8, i8* %v1_103b0, align 1
  %v3_103b0 = zext i8 %v2_103b0 to i32
  store i32 %v3_103b0, i32* %r3.global-to-local, align 4
  %v5_103b0 = add i32 %v3_103a0, 1
  store i32 %v5_103b0, i32* %r2.global-to-local, align 4
  %v2_103b4 = load i32, i32* @r5, align 4
  %v3_103b4 = inttoptr i32 %v2_103b4 to i8*
  store i8 %v2_103b0, i8* %v3_103b4, align 1
  %v4_103b4 = load i32, i32* @r5, align 4
  %v5_103b4 = add i32 %v4_103b4, 1
  store i32 %v5_103b4, i32* @r5, align 4
  %v0_103b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_103b8 = icmp ugt i32 %v0_103b8, 9
  store i1 %v2_103b8, i1* %cpsr_c.global-to-local, align 1
  %v7_103b8 = icmp eq i32 %v0_103b8, 10
  store i1 %v7_103b8, i1* %cpsr_z.global-to-local, align 1
  %v0_103bc = load i32, i32* %r2.global-to-local, align 4
  %v1_103bc = load i32, i32* @r4, align 4
  %v2_103bc = add i32 %v1_103bc, 16
  %v3_103bc = inttoptr i32 %v2_103bc to i32*
  store i32 %v0_103bc, i32* %v3_103bc, align 4
  br i1 %v7_103b8, label %dec_label_pc_103fc, label %dec_label_pc_103f4.backedge

dec_label_pc_103c4:                               ; preds = %dec_label_pc_103a0
  %v1_103c4 = inttoptr i32 %v0_103c4 to i16*
  %v3_103c8 = call i32 @getc_unlocked(i16* %v1_103c4)
  %v3_103cc = icmp eq i32 %v3_103c8, -1
  store i1 %v3_103cc, i1* %cpsr_c.global-to-local, align 1
  %v8_103cc = icmp eq i32 %v3_103c8, -1
  store i1 %v8_103cc, i1* %cpsr_z.global-to-local, align 1
  %v1_103d0 = urem i32 %v3_103c8, 256
  store i32 %v1_103d0, i32* %r3.global-to-local, align 4
  br i1 %v3_103cc, label %dec_label_pc_103d8, label %dec_label_pc_103f0

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103c4
  %v0_103d8 = load i32, i32* @r4, align 4
  %v1_103d8 = inttoptr i32 %v0_103d8 to i16*
  %v2_103d8 = load i16, i16* %v1_103d8, align 2
  %v3_103d8 = zext i16 %v2_103d8 to i32
  store i32 %v3_103d8, i32* %r3.global-to-local, align 4
  %v1_103dc = and i32 %v3_103d8, 8
  %v2_103dc = icmp eq i32 %v1_103dc, 0
  store i1 %v2_103dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103dc, label %dec_label_pc_103fc, label %dec_label_pc_1040c

dec_label_pc_103f0:                               ; preds = %dec_label_pc_103c4
  %v1_103e8 = trunc i32 %v3_103c8 to i8
  %v2_103e8 = load i32, i32* @r5, align 4
  %v3_103e8 = inttoptr i32 %v2_103e8 to i8*
  store i8 %v1_103e8, i8* %v3_103e8, align 1
  %v4_103e8 = load i32, i32* @r5, align 4
  %v5_103e8 = add i32 %v4_103e8, 1
  store i32 %v5_103e8, i32* @r5, align 4
  %v0_103ec = load i32, i32* %r3.global-to-local, align 4
  %v2_103ec = icmp ugt i32 %v0_103ec, 9
  store i1 %v2_103ec, i1* %cpsr_c.global-to-local, align 1
  %v7_103ec = icmp eq i32 %v0_103ec, 10
  store i1 %v7_103ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103ec, label %dec_label_pc_103fc, label %dec_label_pc_103f4.backedge

dec_label_pc_103f4.backedge:                      ; preds = %dec_label_pc_103f0, %dec_label_pc_103b0
  %v0_103f4 = load i32, i32* @r6, align 4
  %v1_103f4 = add i32 %v0_103f4, -1
  store i32 %v1_103f4, i32* @r6, align 4
  %v2_103f4 = icmp ne i32 %v0_103f4, 0
  store i1 %v2_103f4, i1* %cpsr_c.global-to-local, align 1
  %v7_103f4 = icmp eq i32 %v0_103f4, 1
  store i1 %v7_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103f4, label %dec_label_pc_103fc, label %dec_label_pc_103f4.backedge.dec_label_pc_103a0_crit_edge

dec_label_pc_103f4.backedge.dec_label_pc_103a0_crit_edge: ; preds = %dec_label_pc_103f4.backedge
  %v0_103a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_103a0

dec_label_pc_103fc:                               ; preds = %dec_label_pc_103f0, %dec_label_pc_103f4.backedge, %dec_label_pc_103b0, %dec_label_pc_103f4.preheader, %dec_label_pc_103d8
  %v0_103fc = load i32, i32* @r5, align 4
  %v1_103fc = load i32, i32* @r7, align 4
  %v3_103fc = icmp uge i32 %v0_103fc, %v1_103fc
  store i1 %v3_103fc, i1* %cpsr_c.global-to-local, align 1
  %v9_103fc = icmp eq i32 %v0_103fc, %v1_103fc
  store i1 %v9_103fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10400 = xor i1 %v9_103fc, true
  %v3_10400 = and i1 %v3_103fc, %v2_10400
  br i1 %v3_10400, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_103fc
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_10404 = inttoptr i32 %v0_103fc to i8*
  store i8 0, i8* %v7_10404, align 1
  %v0_10408.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10408.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_103fc, %bb
  %v1_10408 = phi i1 [ %v1_10408.pre, %bb ], [ %v9_103fc, %dec_label_pc_103fc ]
  %v0_10408 = phi i1 [ %v0_10408.pre, %bb ], [ %v3_103fc, %dec_label_pc_103fc ]
  %v2_10408 = xor i1 %v1_10408, true
  %v3_10408 = and i1 %v0_10408, %v2_10408
  br i1 %v3_10408, label %.dec_label_pc_10410_crit_edge, label %dec_label_pc_1040c

.dec_label_pc_10410_crit_edge:                    ; preds = %.thread14
  %v0_10410.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10410

dec_label_pc_1040c:                               ; preds = %entry, %dec_label_pc_103d8, %.thread14
  br label %dec_label_pc_10410

dec_label_pc_10410:                               ; preds = %.dec_label_pc_10410_crit_edge, %dec_label_pc_1040c
  %v0_10410 = phi i32 [ %v0_10410.pre, %.dec_label_pc_10410_crit_edge ], [ 0, %dec_label_pc_1040c ]
  store i32 %v9_10380, i32* @r6, align 4
  store i32 %v12_10380, i32* @r7, align 4
  ret i32 %v0_10410

; uselistorder directives
  uselistorder i1 %v9_103fc, { 1, 0, 2 }
  uselistorder i32 %v1_103fc, { 1, 0 }
  uselistorder i32 %v0_103fc, { 0, 2, 1 }
  uselistorder i32 %v0_103f4, { 2, 0, 1 }
  uselistorder i32 %v0_103ec, { 1, 0 }
  uselistorder i32 %v3_103c8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_103b8, { 1, 0 }
  uselistorder i32 %v3_103a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_103c4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 (i16*)* @getc_unlocked, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10410, { 1, 0 }
  uselistorder label %dec_label_pc_1040c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_103fc, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_103a0, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_10420 = load i32, i32* @r1, align 4
  %v1_10420 = load i32, i32* %r0.global-to-local, align 4
  %v2_10420 = sub i32 %v0_10420, %v1_10420
  %v3_10420 = icmp ult i32 %v0_10420, %v1_10420
  %v4_10420 = xor i32 %v1_10420, %v0_10420
  %v5_10420 = xor i32 %v2_10420, %v0_10420
  %v6_10420 = and i32 %v5_10420, %v4_10420
  %v7_10420 = icmp slt i32 %v6_10420, 0
  store i1 %v7_10420, i1* %cpsr_v.global-to-local, align 1
  %v8_10420 = icmp slt i32 %v2_10420, 0
  store i1 %v8_10420, i1* %cpsr_n.global-to-local, align 1
  %v9_10420 = icmp eq i32 %v0_10420, %v1_10420
  store i1 %v9_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10420, label %dec_label_pc_10674, label %dec_label_pc_10428

dec_label_pc_10428:                               ; preds = %entry
  br i1 %v9_10420, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_10428
  %merge = phi i32 [ %v0_10420, %dec_label_pc_10428 ], [ %v2_10708, %bb150 ], [ %v11_10724, %bb153 ], [ %v7_10724, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_10428
  %v5_1042c = inttoptr i32 %v1_10420 to i8*
  store i8* %v5_1042c, i8** %stack_var_-8, align 4
  %v8_1042c = load i32, i32* @lr, align 4
  %v0_10430 = load i32, i32* @r2, align 4
  %v2_10430 = add i32 %v0_10430, -4
  store i32 %v2_10430, i32* %r2.global-to-local, align 4
  %v4_10430 = sub i32 3, %v0_10430
  %v5_10430 = and i32 %v4_10430, %v0_10430
  %v6_10430 = icmp slt i32 %v5_10430, 0
  store i1 %v6_10430, i1* %cpsr_v.global-to-local, align 1
  %v7_10430 = icmp slt i32 %v2_10430, 0
  store i1 %v7_10430, i1* %cpsr_n.global-to-local, align 1
  %v8_10430 = icmp eq i32 %v0_10430, 4
  store i1 %v8_10430, i1* %cpsr_z.global-to-local, align 1
  %v5_10434 = icmp slt i32 %v0_10430, 4
  br i1 %v5_10434, label %bb140, label %dec_label_pc_10438

dec_label_pc_10438:                               ; preds = %bb
  %v1_10438 = urem i32 %v1_10420, 4
  store i32 %v1_10438, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10438 = icmp eq i32 %v1_10438, 0
  store i1 %v2_10438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10438, label %dec_label_pc_10440, label %dec_label_pc_104ec

dec_label_pc_10440:                               ; preds = %dec_label_pc_10438
  %v1_10440 = urem i32 %v0_10420, 4
  store i32 %v1_10440, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10440 = icmp eq i32 %v1_10440, 0
  store i1 %v2_10440, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_10420 to i2
  br i1 %v2_10440, label %dec_label_pc_10448, label %dec_label_pc_1051c

dec_label_pc_10448:                               ; preds = %dec_label_pc_10440, %dec_label_pc_10514
  %v0_1046093 = phi i32 [ %v1_10420, %dec_label_pc_10440 ], [ %v0_1063c76, %dec_label_pc_10514 ]
  %v0_1045c92 = phi i32 [ %v0_10420, %dec_label_pc_10440 ], [ %v0_10514, %dec_label_pc_10514 ]
  %v0_10448 = phi i32 [ %v2_10430, %dec_label_pc_10440 ], [ %v2_1050c, %dec_label_pc_10514 ]
  %v1_10448 = add i32 %v0_10448, -8
  store i32 %v1_10448, i32* %r2.global-to-local, align 4
  %v3_10448 = sub i32 7, %v0_10448
  %v4_10448 = and i32 %v3_10448, %v0_10448
  %v5_10448 = icmp slt i32 %v4_10448, 0
  store i1 %v5_10448, i1* %cpsr_v.global-to-local, align 1
  %v6_10448 = icmp slt i32 %v1_10448, 0
  store i1 %v6_10448, i1* %cpsr_n.global-to-local, align 1
  %v7_10448 = icmp eq i32 %v0_10448, 8
  store i1 %v7_10448, i1* %cpsr_z.global-to-local, align 1
  %v2_1044c = xor i1 %v6_10448, %v5_10448
  br i1 %v2_1044c, label %dec_label_pc_1049c, label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %dec_label_pc_10448
  %v1_10450 = add i32 %v0_10448, -28
  store i32 %v1_10450, i32* %r2.global-to-local, align 4
  %v3_10450 = sub i32 27, %v0_10448
  %v4_10450 = and i32 %v3_10450, %v1_10448
  %v5_10450 = icmp slt i32 %v4_10450, 0
  store i1 %v5_10450, i1* %cpsr_v.global-to-local, align 1
  %v6_10450 = icmp slt i32 %v1_10450, 0
  store i1 %v6_10450, i1* %cpsr_n.global-to-local, align 1
  %v7_10450 = icmp eq i32 %v1_10448, 20
  store i1 %v7_10450, i1* %cpsr_z.global-to-local, align 1
  %v2_10454 = xor i1 %v6_10450, %v5_10450
  br i1 %v2_10454, label %dec_label_pc_10488, label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %dec_label_pc_10450
  %v0_10458 = load i32, i32* @r4, align 4
  store i32 %v0_10458, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1045c

dec_label_pc_1045c:                               ; preds = %dec_label_pc_1045c.dec_label_pc_1045c_crit_edge, %dec_label_pc_10458
  %v0_10460 = phi i32 [ %v12_10468, %dec_label_pc_1045c.dec_label_pc_1045c_crit_edge ], [ %v0_1046093, %dec_label_pc_10458 ]
  %v0_1045c = phi i32 [ %v0_1045c.pre, %dec_label_pc_1045c.dec_label_pc_1045c_crit_edge ], [ %v0_1045c92, %dec_label_pc_10458 ]
  %v1_1045c = inttoptr i32 %v0_1045c to i32*
  %v2_1045c = load i32, i32* %v1_1045c, align 4
  %v3_1045c = add i32 %v0_1045c, 4
  %v4_1045c = inttoptr i32 %v3_1045c to i32*
  %v5_1045c = load i32, i32* %v4_1045c, align 4
  store i32 %v5_1045c, i32* %r4.global-to-local, align 4
  %v6_1045c = add i32 %v0_1045c, 8
  %v7_1045c = inttoptr i32 %v6_1045c to i32*
  %v8_1045c = load i32, i32* %v7_1045c, align 4
  store i32 %v8_1045c, i32* %ip.global-to-local, align 4
  %v9_1045c = add i32 %v0_1045c, 12
  %v10_1045c = inttoptr i32 %v9_1045c to i32*
  %v11_1045c = load i32, i32* %v10_1045c, align 4
  store i32 %v11_1045c, i32* %lr.global-to-local, align 4
  %v12_1045c = add i32 %v0_1045c, 16
  store i32 %v12_1045c, i32* %r1.global-to-local, align 4
  %v1_10460 = inttoptr i32 %v0_10460 to i32*
  store i32 %v2_1045c, i32* %v1_10460, align 4
  %v3_10460 = add i32 %v0_10460, 4
  %v4_10460 = inttoptr i32 %v3_10460 to i32*
  %v5_10460 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10460, i32* %v4_10460, align 4
  %v6_10460 = add i32 %v0_10460, 8
  %v7_10460 = inttoptr i32 %v6_10460 to i32*
  %v8_10460 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_10460, i32* %v7_10460, align 4
  %v9_10460 = add i32 %v0_10460, 12
  %v10_10460 = inttoptr i32 %v9_10460 to i32*
  %v11_10460 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_10460, i32* %v10_10460, align 4
  %v12_10460 = add i32 %v0_10460, 16
  store i32 %v12_10460, i32* %r0.global-to-local, align 4
  %v0_10464 = load i32, i32* %r1.global-to-local, align 4
  %v1_10464 = inttoptr i32 %v0_10464 to i32*
  %v2_10464 = load i32, i32* %v1_10464, align 4
  store i32 %v2_10464, i32* @r3, align 4
  %v3_10464 = add i32 %v0_10464, 4
  %v4_10464 = inttoptr i32 %v3_10464 to i32*
  %v5_10464 = load i32, i32* %v4_10464, align 4
  store i32 %v5_10464, i32* %r4.global-to-local, align 4
  %v6_10464 = add i32 %v0_10464, 8
  %v7_10464 = inttoptr i32 %v6_10464 to i32*
  %v8_10464 = load i32, i32* %v7_10464, align 4
  store i32 %v8_10464, i32* @ip, align 4
  %v9_10464 = add i32 %v0_10464, 12
  %v10_10464 = inttoptr i32 %v9_10464 to i32*
  %v11_10464 = load i32, i32* %v10_10464, align 4
  store i32 %v11_10464, i32* %lr.global-to-local, align 4
  %v12_10464 = add i32 %v0_10464, 16
  store i32 %v12_10464, i32* @r1, align 4
  %v1_10468 = inttoptr i32 %v12_10460 to i32*
  store i32 %v2_10464, i32* %v1_10468, align 4
  %v3_10468 = add i32 %v0_10460, 20
  %v4_10468 = inttoptr i32 %v3_10468 to i32*
  %v5_10468 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10468, i32* %v4_10468, align 4
  %v6_10468 = add i32 %v0_10460, 24
  %v7_10468 = inttoptr i32 %v6_10468 to i32*
  %v8_10468 = load i32, i32* @ip, align 4
  store i32 %v8_10468, i32* %v7_10468, align 4
  %v9_10468 = add i32 %v0_10460, 28
  %v10_10468 = inttoptr i32 %v9_10468 to i32*
  %v11_10468 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_10468, i32* %v10_10468, align 4
  %v12_10468 = add i32 %v0_10460, 32
  store i32 %v12_10468, i32* %r0.global-to-local, align 4
  %v0_1046c = load i32, i32* %r2.global-to-local, align 4
  %v1_1046c = add i32 %v0_1046c, -32
  store i32 %v1_1046c, i32* %r2.global-to-local, align 4
  %v3_1046c = sub i32 31, %v0_1046c
  %v4_1046c = and i32 %v3_1046c, %v0_1046c
  %v5_1046c = icmp slt i32 %v4_1046c, 0
  %v6_1046c = icmp slt i32 %v1_1046c, 0
  %v2_10470 = xor i1 %v6_1046c, %v5_1046c
  br i1 %v2_10470, label %dec_label_pc_10474, label %dec_label_pc_1045c.dec_label_pc_1045c_crit_edge

dec_label_pc_1045c.dec_label_pc_1045c_crit_edge:  ; preds = %dec_label_pc_1045c
  %v0_1045c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1045c

dec_label_pc_10474:                               ; preds = %dec_label_pc_1045c
  %v1_10474 = add i32 %v0_1046c, -16
  %v3_10474 = add i32 %v0_1046c, 2147483616
  %v4_10474 = and i32 %v1_10474, %v3_10474
  %v5_10474 = icmp slt i32 %v4_10474, 0
  store i1 %v5_10474, i1* %cpsr_v.global-to-local, align 1
  %v6_10474 = icmp slt i32 %v1_10474, 0
  store i1 %v6_10474, i1* %cpsr_n.global-to-local, align 1
  %v7_10474 = icmp eq i32 %v1_10474, 0
  store i1 %v7_10474, i1* %cpsr_z.global-to-local, align 1
  %v2_10478 = xor i1 %v6_10474, %v5_10474
  br i1 %v2_10478, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_10474
  %v3_10478 = load i32, i32* @r1, align 4
  %v4_10478 = inttoptr i32 %v3_10478 to i32*
  %v5_10478 = load i32, i32* %v4_10478, align 4
  store i32 %v5_10478, i32* @r3, align 4
  %v6_10478 = add i32 %v3_10478, 4
  %v7_10478 = inttoptr i32 %v6_10478 to i32*
  %v8_10478 = load i32, i32* %v7_10478, align 4
  store i32 %v8_10478, i32* %r4.global-to-local, align 4
  %v9_10478 = add i32 %v3_10478, 8
  %v10_10478 = inttoptr i32 %v9_10478 to i32*
  %v11_10478 = load i32, i32* %v10_10478, align 4
  store i32 %v11_10478, i32* @ip, align 4
  %v12_10478 = add i32 %v3_10478, 12
  %v13_10478 = inttoptr i32 %v12_10478 to i32*
  %v14_10478 = load i32, i32* %v13_10478, align 4
  store i32 %v14_10478, i32* %lr.global-to-local, align 4
  %v15_10478 = add i32 %v3_10478, 16
  store i32 %v15_10478, i32* @r1, align 4
  %v4_1047c = inttoptr i32 %v12_10468 to i32*
  store i32 %v5_10478, i32* %v4_1047c, align 4
  %v6_1047c = add i32 %v0_10460, 36
  %v7_1047c = inttoptr i32 %v6_1047c to i32*
  %v8_1047c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1047c, i32* %v7_1047c, align 4
  %v9_1047c = add i32 %v0_10460, 40
  %v10_1047c = inttoptr i32 %v9_1047c to i32*
  %v11_1047c = load i32, i32* @ip, align 4
  store i32 %v11_1047c, i32* %v10_1047c, align 4
  %v12_1047c = add i32 %v0_10460, 44
  %v13_1047c = inttoptr i32 %v12_1047c to i32*
  %v14_1047c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1047c, i32* %v13_1047c, align 4
  %v15_1047c = add i32 %v0_10460, 48
  store i32 %v15_1047c, i32* %r0.global-to-local, align 4
  %v3_10480 = load i32, i32* %r2.global-to-local, align 4
  %v4_10480 = add i32 %v3_10480, -16
  store i32 %v4_10480, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_10474, %bb136
  %v3_10490101110 = phi i32 [ %v15_1047c, %bb136 ], [ %v12_10468, %dec_label_pc_10474 ]
  %v0_10488.pre = phi i32 [ %v4_10480, %bb136 ], [ %v1_1046c, %dec_label_pc_10474 ]
  %v2_10484 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10484, i32* @r4, align 4
  br label %dec_label_pc_10488

dec_label_pc_10488:                               ; preds = %dec_label_pc_10450, %bb137
  %v3_10490100 = phi i32 [ %v0_1046093, %dec_label_pc_10450 ], [ %v3_10490101110, %bb137 ]
  %v0_10488 = phi i32 [ %v1_10450, %dec_label_pc_10450 ], [ %v0_10488.pre, %bb137 ]
  %v1_10488 = add i32 %v0_10488, 20
  store i32 %v1_10488, i32* %r2.global-to-local, align 4
  %v3_10488 = sub i32 0, %v0_10488
  %v4_10488 = and i32 %v1_10488, %v3_10488
  %v5_10488 = icmp slt i32 %v4_10488, 0
  store i1 %v5_10488, i1* %cpsr_v.global-to-local, align 1
  %v6_10488 = icmp slt i32 %v1_10488, 0
  store i1 %v6_10488, i1* %cpsr_n.global-to-local, align 1
  %v7_10488 = icmp eq i32 %v1_10488, 0
  store i1 %v7_10488, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1048c

dec_label_pc_1048c:                               ; preds = %.thread114, %dec_label_pc_10488
  %v0_1049c.pre157 = phi i32 [ %v0_1049c.pre, %.thread114 ], [ %v1_10488, %dec_label_pc_10488 ]
  %v3_10490 = phi i32 [ %v3_1049098115, %.thread114 ], [ %v3_10490100, %dec_label_pc_10488 ]
  %v1_10494 = phi i1 [ %v1_10498, %.thread114 ], [ %v5_10488, %dec_label_pc_10488 ]
  %v0_10494 = phi i1 [ %v0_10498, %.thread114 ], [ %v6_10488, %dec_label_pc_10488 ]
  %v2_1048c = xor i1 %v1_10494, %v0_10494
  br i1 %v2_1048c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_1048c
  %v3_1048c = load i32, i32* @r1, align 4
  %v4_1048c = inttoptr i32 %v3_1048c to i32*
  %v5_1048c = load i32, i32* %v4_1048c, align 4
  store i32 %v5_1048c, i32* @r3, align 4
  %v6_1048c = add i32 %v3_1048c, 4
  %v7_1048c = inttoptr i32 %v6_1048c to i32*
  %v8_1048c = load i32, i32* %v7_1048c, align 4
  store i32 %v8_1048c, i32* @ip, align 4
  %v9_1048c = add i32 %v3_1048c, 8
  %v10_1048c = inttoptr i32 %v9_1048c to i32*
  %v11_1048c = load i32, i32* %v10_1048c, align 4
  store i32 %v11_1048c, i32* %lr.global-to-local, align 4
  %v12_1048c = add i32 %v3_1048c, 12
  store i32 %v12_1048c, i32* @r1, align 4
  %v4_10490 = inttoptr i32 %v3_10490 to i32*
  store i32 %v5_1048c, i32* %v4_10490, align 4
  %v6_10490 = add i32 %v3_10490, 4
  %v7_10490 = inttoptr i32 %v6_10490 to i32*
  %v8_10490 = load i32, i32* @ip, align 4
  store i32 %v8_10490, i32* %v7_10490, align 4
  %v9_10490 = add i32 %v3_10490, 8
  %v10_10490 = inttoptr i32 %v9_10490 to i32*
  %v11_10490 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_10490, i32* %v10_10490, align 4
  %v12_10490 = add i32 %v3_10490, 12
  store i32 %v12_10490, i32* %r0.global-to-local, align 4
  %v3_10494 = load i32, i32* %r2.global-to-local, align 4
  %v4_10494 = add i32 %v3_10494, -12
  store i32 %v4_10494, i32* %r2.global-to-local, align 4
  %v6_10494 = sub i32 11, %v3_10494
  %v7_10494 = and i32 %v6_10494, %v3_10494
  %v8_10494 = icmp slt i32 %v7_10494, 0
  store i1 %v8_10494, i1* %cpsr_v.global-to-local, align 1
  %v9_10494 = icmp slt i32 %v4_10494, 0
  store i1 %v9_10494, i1* %cpsr_n.global-to-local, align 1
  %v10_10494 = icmp eq i32 %v3_10494, 12
  store i1 %v10_10494, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_1048c, %bb138
  %v0_1049c.pre = phi i32 [ %v4_10494, %bb138 ], [ %v0_1049c.pre157, %dec_label_pc_1048c ]
  %v3_1049098115 = phi i32 [ %v12_10490, %bb138 ], [ %v3_10490, %dec_label_pc_1048c ]
  %v1_10498 = phi i1 [ %v8_10494, %bb138 ], [ %v1_10494, %dec_label_pc_1048c ]
  %v0_10498 = phi i1 [ %v9_10494, %bb138 ], [ %v0_10494, %dec_label_pc_1048c ]
  %v2_10498 = xor i1 %v1_10498, %v0_10498
  br i1 %v2_10498, label %dec_label_pc_1049c, label %dec_label_pc_1048c

dec_label_pc_1049c:                               ; preds = %.thread114, %dec_label_pc_10448
  %v4_104ac = phi i32 [ %v0_1046093, %dec_label_pc_10448 ], [ %v3_1049098115, %.thread114 ]
  %v0_1049c = phi i32 [ %v1_10448, %dec_label_pc_10448 ], [ %v0_1049c.pre, %.thread114 ]
  %v1_1049c = add i32 %v0_1049c, 8
  store i32 %v1_1049c, i32* %r2.global-to-local, align 4
  %v3_1049c = sub i32 0, %v0_1049c
  %v4_1049c = and i32 %v1_1049c, %v3_1049c
  %v5_1049c = icmp slt i32 %v4_1049c, 0
  store i1 %v5_1049c, i1* %cpsr_v.global-to-local, align 1
  %v6_1049c = icmp slt i32 %v1_1049c, 0
  store i1 %v6_1049c, i1* %cpsr_n.global-to-local, align 1
  %v7_1049c = icmp eq i32 %v1_1049c, 0
  store i1 %v7_1049c, i1* %cpsr_z.global-to-local, align 1
  %v2_104a0 = xor i1 %v6_1049c, %v5_1049c
  br i1 %v2_104a0, label %bb140, label %dec_label_pc_104a4

dec_label_pc_104a4:                               ; preds = %dec_label_pc_1049c
  %v1_104a4 = add i32 %v0_1049c, 4
  store i32 %v1_104a4, i32* %r2.global-to-local, align 4
  %v3_104a4 = sub i32 -5, %v0_1049c
  %v4_104a4 = and i32 %v3_104a4, %v1_1049c
  %v5_104a4 = icmp slt i32 %v4_104a4, 0
  store i1 %v5_104a4, i1* %cpsr_v.global-to-local, align 1
  %v6_104a4 = icmp slt i32 %v1_104a4, 0
  store i1 %v6_104a4, i1* %cpsr_n.global-to-local, align 1
  %v7_104a4 = icmp eq i32 %v1_1049c, 4
  store i1 %v7_104a4, i1* %cpsr_z.global-to-local, align 1
  %v2_104a8 = xor i1 %v6_104a4, %v5_104a4
  %v3_104a8 = load i32, i32* @r1, align 4
  %v4_104a8 = inttoptr i32 %v3_104a8 to i32*
  %v5_104a8 = load i32, i32* %v4_104a8, align 4
  store i32 %v5_104a8, i32* @r3, align 4
  %v7_104a8 = add i32 %v3_104a8, 4
  br i1 %v2_104a8, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_104a4
  store i32 %v7_104a8, i32* @r1, align 4
  %v5_104ac = inttoptr i32 %v4_104ac to i32*
  store i32 %v5_104a8, i32* %v5_104ac, align 4
  %v6_104ac = load i32, i32* %r0.global-to-local, align 4
  %v7_104ac = add i32 %v6_104ac, 4
  store i32 %v7_104ac, i32* %r0.global-to-local, align 4
  %v0_104bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_104a4
  %v7_104b0 = inttoptr i32 %v7_104a8 to i32*
  %v8_104b0 = load i32, i32* %v7_104b0, align 4
  store i32 %v8_104b0, i32* @ip, align 4
  %v9_104b0 = add i32 %v3_104a8, 8
  store i32 %v9_104b0, i32* @r1, align 4
  %v4_104b4 = inttoptr i32 %v4_104ac to i32*
  store i32 %v5_104a8, i32* %v4_104b4, align 4
  %v6_104b4 = add i32 %v4_104ac, 4
  %v7_104b4 = inttoptr i32 %v6_104b4 to i32*
  %v8_104b4 = load i32, i32* @ip, align 4
  store i32 %v8_104b4, i32* %v7_104b4, align 4
  %v9_104b4 = add i32 %v4_104ac, 8
  store i32 %v9_104b4, i32* %r0.global-to-local, align 4
  %v3_104b8 = load i32, i32* %r2.global-to-local, align 4
  %v4_104b8 = add i32 %v3_104b8, -4
  store i32 %v4_104b8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_1049c, %bb, %dec_label_pc_1066c, %dec_label_pc_10600, %dec_label_pc_10594, %bb139
  %v0_104bc = phi i32 [ %v0_104bc.pre, %.thread121 ], [ %v2_1050c, %.thread127 ], [ %v1_1049c, %dec_label_pc_1049c ], [ %v2_10430, %bb ], [ %v0_104bc60, %dec_label_pc_1066c ], [ %v0_104bc59, %dec_label_pc_10600 ], [ %v0_104bc58, %dec_label_pc_10594 ], [ %v4_104b8, %bb139 ]
  %v1_104bc = add i32 %v0_104bc, 4
  store i32 %v1_104bc, i32* %r2.global-to-local, align 4
  %v3_104bc = sub i32 0, %v0_104bc
  %v4_104bc = and i32 %v1_104bc, %v3_104bc
  %v5_104bc = icmp slt i32 %v4_104bc, 0
  store i1 %v5_104bc, i1* %cpsr_v.global-to-local, align 1
  %v6_104bc = icmp slt i32 %v1_104bc, 0
  store i1 %v6_104bc, i1* %cpsr_n.global-to-local, align 1
  %v7_104bc = icmp eq i32 %v1_104bc, 0
  store i1 %v7_104bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104bc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_104c4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_104c0 = load i8*, i8** %stack_var_-8, align 4
  %v4_104c0 = ptrtoint i8* %v3_104c0 to i32
  store i32 %v4_104c0, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_104c4 = phi i32 [ %v0_104c4.pre, %bb140.bb142_crit_edge ], [ %v8_1042c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_104bc, i32 %v0_104c4)
  %v0_104c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_104c8 = add i32 %v0_104c8, -2
  %v3_104c8 = sub i32 1, %v0_104c8
  %v4_104c8 = and i32 %v3_104c8, %v0_104c8
  %v5_104c8 = icmp slt i32 %v4_104c8, 0
  store i1 %v5_104c8, i1* %cpsr_v.global-to-local, align 1
  %v6_104c8 = icmp slt i32 %v1_104c8, 0
  store i1 %v6_104c8, i1* %cpsr_n.global-to-local, align 1
  %v7_104c8 = icmp eq i32 %v0_104c8, 2
  store i1 %v7_104c8, i1* %cpsr_z.global-to-local, align 1
  %v0_104cc = load i32, i32* @r1, align 4
  %v1_104cc = inttoptr i32 %v0_104cc to i8*
  %v2_104cc = load i8, i8* %v1_104cc, align 1
  %v5_104cc = add i32 %v0_104cc, 1
  store i32 %v5_104cc, i32* %r1.global-to-local, align 4
  %v2_104d0 = load i32, i32* %r0.global-to-local, align 4
  %v3_104d0 = inttoptr i32 %v2_104d0 to i8*
  store i8 %v2_104cc, i8* %v3_104d0, align 1
  %v4_104d0 = load i32, i32* %r0.global-to-local, align 4
  %v5_104d0 = add i32 %v4_104d0, 1
  store i32 %v5_104d0, i32* %r0.global-to-local, align 4
  %v0_104d4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_104d4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_104d4 = xor i1 %v0_104d4, %v1_104d4
  br i1 %v2_104d4, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_104d4 = load i32, i32* %r1.global-to-local, align 4
  %v4_104d4 = inttoptr i32 %v3_104d4 to i8*
  %v5_104d4 = load i8, i8* %v4_104d4, align 1
  %v8_104d4 = add i32 %v3_104d4, 1
  store i32 %v8_104d4, i32* %r1.global-to-local, align 4
  %v6_104d8 = inttoptr i32 %v5_104d0 to i8*
  store i8 %v5_104d4, i8* %v6_104d8, align 1
  %v7_104d8 = load i32, i32* %r0.global-to-local, align 4
  %v8_104d8 = add i32 %v7_104d8, 1
  store i32 %v8_104d8, i32* %r0.global-to-local, align 4
  %v1_104dc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_104dc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_104e0 = phi i32 [ %v8_104d8, %bb143 ], [ %v5_104d0, %bb142 ]
  %v2_104e0 = phi i1 [ %v2_104dc.pre, %bb143 ], [ %v1_104d4, %bb142 ]
  %v1_104e0 = phi i1 [ %v1_104dc.pre, %bb143 ], [ %v0_104d4, %bb142 ]
  %v0_104dc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_104dc = xor i1 %v2_104e0, %v1_104e0
  %v4_104dc = or i1 %v0_104dc, %v3_104dc
  br i1 %v4_104dc, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_104dc = load i32, i32* %r1.global-to-local, align 4
  %v6_104dc = inttoptr i32 %v5_104dc to i8*
  %v7_104dc = load i8, i8* %v6_104dc, align 1
  %v10_104dc = add i32 %v5_104dc, 1
  store i32 %v10_104dc, i32* %r1.global-to-local, align 4
  %v8_104e0 = inttoptr i32 %v7_104e0 to i8*
  store i8 %v7_104dc, i8* %v8_104e0, align 1
  %v9_104e0 = load i32, i32* %r0.global-to-local, align 4
  %v10_104e0 = add i32 %v9_104e0, 1
  store i32 %v10_104e0, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_104e4 = load i8*, i8** %stack_var_-8, align 4
  %v3_104e4 = ptrtoint i8* %v2_104e4 to i32
  store i32 %v3_104e4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1042c)
  %v0_104ec.pre = load i32, i32* @ip, align 4
  %v0_104f4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_104f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_104ec

dec_label_pc_104ec:                               ; preds = %dec_label_pc_10438, %.thread125
  %v2_104f8 = phi i32 [ %v1_10420, %dec_label_pc_10438 ], [ %v2_104f8.pre, %.thread125 ]
  %v0_104f4 = phi i32 [ %v0_10420, %dec_label_pc_10438 ], [ %v0_104f4.pre, %.thread125 ]
  %v0_104ec = phi i32 [ %v1_10438, %dec_label_pc_10438 ], [ %v0_104ec.pre, %.thread125 ]
  %v1_104ec = sub i32 4, %v0_104ec
  store i32 %v1_104ec, i32* @ip, align 4
  %v1_104f0 = add i32 %v1_104ec, -2
  %v3_104f0 = sub i32 1, %v1_104ec
  %v4_104f0 = and i32 %v3_104f0, %v1_104ec
  %v5_104f0 = icmp slt i32 %v4_104f0, 0
  store i1 %v5_104f0, i1* %cpsr_v.global-to-local, align 1
  %v6_104f0 = icmp slt i32 %v1_104f0, 0
  store i1 %v6_104f0, i1* %cpsr_n.global-to-local, align 1
  %v7_104f0 = icmp eq i32 %v1_104ec, 2
  store i1 %v7_104f0, i1* %cpsr_z.global-to-local, align 1
  %v1_104f4 = inttoptr i32 %v0_104f4 to i8*
  %v2_104f4 = load i8, i8* %v1_104f4, align 1
  %v3_104f4 = zext i8 %v2_104f4 to i32
  store i32 %v3_104f4, i32* @r3, align 4
  %v5_104f4 = add i32 %v0_104f4, 1
  store i32 %v5_104f4, i32* @r1, align 4
  %v3_104f8 = inttoptr i32 %v2_104f8 to i8*
  store i8 %v2_104f4, i8* %v3_104f8, align 1
  %v4_104f8 = load i32, i32* %r0.global-to-local, align 4
  %v5_104f8 = add i32 %v4_104f8, 1
  store i32 %v5_104f8, i32* %r0.global-to-local, align 4
  %v0_104fc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_104fc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_104fc = xor i1 %v0_104fc, %v1_104fc
  br i1 %v2_104fc, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_104ec
  %v3_104fc = load i32, i32* @r1, align 4
  %v4_104fc = inttoptr i32 %v3_104fc to i8*
  %v5_104fc = load i8, i8* %v4_104fc, align 1
  %v6_104fc = zext i8 %v5_104fc to i32
  store i32 %v6_104fc, i32* @r3, align 4
  %v8_104fc = add i32 %v3_104fc, 1
  store i32 %v8_104fc, i32* @r1, align 4
  %v6_10500 = inttoptr i32 %v5_104f8 to i8*
  store i8 %v5_104fc, i8* %v6_10500, align 1
  %v7_10500 = load i32, i32* %r0.global-to-local, align 4
  %v8_10500 = add i32 %v7_10500, 1
  store i32 %v8_10500, i32* %r0.global-to-local, align 4
  %v1_10504.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_10504.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_104ec, %bb145
  %v7_10508 = phi i32 [ %v8_10500, %bb145 ], [ %v5_104f8, %dec_label_pc_104ec ]
  %v2_10508 = phi i1 [ %v2_10504.pre, %bb145 ], [ %v1_104fc, %dec_label_pc_104ec ]
  %v1_10508 = phi i1 [ %v1_10504.pre, %bb145 ], [ %v0_104fc, %dec_label_pc_104ec ]
  %v0_10504 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_10504 = xor i1 %v2_10508, %v1_10508
  %v4_10504 = or i1 %v0_10504, %v3_10504
  br i1 %v4_10504, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_10504 = load i32, i32* @r1, align 4
  %v6_10504 = inttoptr i32 %v5_10504 to i8*
  %v7_10504 = load i8, i8* %v6_10504, align 1
  %v8_10504 = zext i8 %v7_10504 to i32
  store i32 %v8_10504, i32* @r3, align 4
  %v10_10504 = add i32 %v5_10504, 1
  store i32 %v10_10504, i32* @r1, align 4
  %v8_10508 = inttoptr i32 %v7_10508 to i8*
  store i8 %v7_10504, i8* %v8_10508, align 1
  %v9_10508 = load i32, i32* %r0.global-to-local, align 4
  %v10_10508 = add i32 %v9_10508, 1
  store i32 %v10_10508, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1063c76 = phi i32 [ %v10_10508, %bb146 ], [ %v7_10508, %.thread126 ]
  %v0_1050c = load i32, i32* %r2.global-to-local, align 4
  %v1_1050c = load i32, i32* @ip, align 4
  %v2_1050c = sub i32 %v0_1050c, %v1_1050c
  store i32 %v2_1050c, i32* %r2.global-to-local, align 4
  %v4_1050c = xor i32 %v1_1050c, %v0_1050c
  %v5_1050c = xor i32 %v2_1050c, %v0_1050c
  %v6_1050c = and i32 %v5_1050c, %v4_1050c
  %v7_1050c = icmp slt i32 %v6_1050c, 0
  store i1 %v7_1050c, i1* %cpsr_v.global-to-local, align 1
  %v8_1050c = icmp slt i32 %v2_1050c, 0
  store i1 %v8_1050c, i1* %cpsr_n.global-to-local, align 1
  %v9_1050c = icmp eq i32 %v0_1050c, %v1_1050c
  store i1 %v9_1050c, i1* %cpsr_z.global-to-local, align 1
  %v2_10510 = xor i1 %v8_1050c, %v7_1050c
  br i1 %v2_10510, label %bb140, label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %.thread127
  %v0_10514 = load i32, i32* @r1, align 4
  %v1_10514 = urem i32 %v0_10514, 4
  store i32 %v1_10514, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10514 = icmp eq i32 %v1_10514, 0
  store i1 %v2_10514, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_10514 to i2
  br i1 %v2_10514, label %dec_label_pc_10448, label %dec_label_pc_1051c

dec_label_pc_1051c:                               ; preds = %dec_label_pc_10440, %dec_label_pc_10514
  %v0_1063c75 = phi i32 [ %v1_10420, %dec_label_pc_10440 ], [ %v0_1063c76, %dec_label_pc_10514 ]
  %v0_105a4 = phi i32 [ %v2_10430, %dec_label_pc_10440 ], [ %v2_1050c, %dec_label_pc_10514 ]
  %v0_10524.off0 = phi i2 [ %extract.t, %dec_label_pc_10440 ], [ %extract.t130, %dec_label_pc_10514 ]
  %v0_1051c = phi i32 [ %v0_10420, %dec_label_pc_10440 ], [ %v0_10514, %dec_label_pc_10514 ]
  %v1_1051c = and i32 %v0_1051c, -4
  store i32 %v1_1051c, i32* %r1.global-to-local, align 4
  %v1_10520 = inttoptr i32 %v1_1051c to i32*
  %v2_10520 = load i32, i32* %v1_10520, align 4
  store i32 %v2_10520, i32* %lr.global-to-local, align 4
  %v4_10520 = add i32 %v1_1051c, 4
  store i32 %v4_10520, i32* %r1.global-to-local, align 4
  %v1_1059c = add i32 %v0_105a4, -12
  %v3_1059c = sub i32 11, %v0_105a4
  %v4_1059c = and i32 %v3_1059c, %v0_105a4
  %v5_1059c = icmp slt i32 %v4_1059c, 0
  store i1 %v5_1059c, i1* %cpsr_v.global-to-local, align 1
  %v6_1059c = icmp slt i32 %v1_1059c, 0
  store i1 %v6_1059c, i1* %cpsr_n.global-to-local, align 1
  %v7_1059c = icmp eq i32 %v0_105a4, 12
  store i1 %v7_1059c, i1* %cpsr_z.global-to-local, align 1
  %v2_105a0 = xor i1 %v6_1059c, %v5_1059c
  switch i2 %v0_10524.off0, label %dec_label_pc_10530 [
    i2 -1, label %dec_label_pc_10608
    i2 -2, label %dec_label_pc_1059c
  ]

dec_label_pc_10530:                               ; preds = %dec_label_pc_1051c
  br i1 %v2_105a0, label %dec_label_pc_1057c, label %dec_label_pc_10538

dec_label_pc_10538:                               ; preds = %dec_label_pc_10530
  store i32 %v1_1059c, i32* %r2.global-to-local, align 4
  %v3_1053c = load i32, i32* @r4, align 4
  store i32 %v3_1053c, i32* %stack_var_-16, align 4
  %v6_1053c = load i32, i32* @r5, align 4
  store i32 %v6_1053c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_10540

dec_label_pc_10540:                               ; preds = %dec_label_pc_10540.dec_label_pc_10540_crit_edge, %dec_label_pc_10538
  %v0_10564 = phi i32 [ %v12_10564, %dec_label_pc_10540.dec_label_pc_10540_crit_edge ], [ %v0_1063c75, %dec_label_pc_10538 ]
  %v0_10544 = phi i32 [ %v0_10544.pre, %dec_label_pc_10540.dec_label_pc_10540_crit_edge ], [ %v4_10520, %dec_label_pc_10538 ]
  %v0_10540 = phi i32 [ %v0_10540.pre, %dec_label_pc_10540.dec_label_pc_10540_crit_edge ], [ %v2_10520, %dec_label_pc_10538 ]
  %v3_10540 = udiv i32 %v0_10540, 256
  %v1_10544 = inttoptr i32 %v0_10544 to i32*
  %v2_10544 = load i32, i32* %v1_10544, align 4
  store i32 %v2_10544, i32* %r4.global-to-local, align 4
  %v3_10544 = add i32 %v0_10544, 4
  %v4_10544 = inttoptr i32 %v3_10544 to i32*
  %v5_10544 = load i32, i32* %v4_10544, align 4
  store i32 %v5_10544, i32* %r5.global-to-local, align 4
  %v6_10544 = add i32 %v0_10544, 8
  %v7_10544 = inttoptr i32 %v6_10544 to i32*
  %v8_10544 = load i32, i32* %v7_10544, align 4
  store i32 %v8_10544, i32* %ip.global-to-local, align 4
  %v9_10544 = add i32 %v0_10544, 12
  %v10_10544 = inttoptr i32 %v9_10544 to i32*
  %v11_10544 = load i32, i32* %v10_10544, align 4
  store i32 %v11_10544, i32* %lr.global-to-local, align 4
  %v12_10544 = add i32 %v0_10544, 16
  store i32 %v12_10544, i32* %r1.global-to-local, align 4
  %v4_10548 = mul i32 %v2_10544, 16777216
  %v5_10548 = or i32 %v4_10548, %v3_10540
  store i32 %v5_10548, i32* @r3, align 4
  %v3_1054c = udiv i32 %v2_10544, 256
  %v4_10550 = mul i32 %v5_10544, 16777216
  %v5_10550 = or i32 %v4_10550, %v3_1054c
  store i32 %v5_10550, i32* %r4.global-to-local, align 4
  %v3_10554 = udiv i32 %v5_10544, 256
  %v4_10558 = mul i32 %v8_10544, 16777216
  %v5_10558 = or i32 %v4_10558, %v3_10554
  store i32 %v5_10558, i32* %r5.global-to-local, align 4
  %v3_1055c = udiv i32 %v8_10544, 256
  %v4_10560 = mul i32 %v11_10544, 16777216
  %v5_10560 = or i32 %v4_10560, %v3_1055c
  store i32 %v5_10560, i32* @ip, align 4
  %v1_10564 = inttoptr i32 %v0_10564 to i32*
  store i32 %v5_10548, i32* %v1_10564, align 4
  %v3_10564 = add i32 %v0_10564, 4
  %v4_10564 = inttoptr i32 %v3_10564 to i32*
  %v5_10564 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10564, i32* %v4_10564, align 4
  %v6_10564 = add i32 %v0_10564, 8
  %v7_10564 = inttoptr i32 %v6_10564 to i32*
  %v8_10564 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_10564, i32* %v7_10564, align 4
  %v9_10564 = add i32 %v0_10564, 12
  %v10_10564 = inttoptr i32 %v9_10564 to i32*
  %v11_10564 = load i32, i32* @ip, align 4
  store i32 %v11_10564, i32* %v10_10564, align 4
  %v12_10564 = add i32 %v0_10564, 16
  store i32 %v12_10564, i32* %r0.global-to-local, align 4
  %v0_10568 = load i32, i32* %r2.global-to-local, align 4
  %v1_10568 = add i32 %v0_10568, -16
  store i32 %v1_10568, i32* %r2.global-to-local, align 4
  %v3_10568 = sub i32 15, %v0_10568
  %v4_10568 = and i32 %v3_10568, %v0_10568
  %v5_10568 = icmp slt i32 %v4_10568, 0
  %v6_10568 = icmp slt i32 %v1_10568, 0
  %v2_1056c = xor i1 %v6_10568, %v5_10568
  br i1 %v2_1056c, label %dec_label_pc_10570, label %dec_label_pc_10540.dec_label_pc_10540_crit_edge

dec_label_pc_10540.dec_label_pc_10540_crit_edge:  ; preds = %dec_label_pc_10540
  %v0_10540.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10544.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10540

dec_label_pc_10570:                               ; preds = %dec_label_pc_10540
  %v2_10570 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10570, i32* @r4, align 4
  %v5_10570 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_10570, i32* @r5, align 4
  %v1_10574 = add i32 %v0_10568, -4
  store i32 %v1_10574, i32* %r2.global-to-local, align 4
  %v3_10574 = add i32 %v0_10568, 2147483632
  %v4_10574 = and i32 %v1_10574, %v3_10574
  %v5_10574 = icmp slt i32 %v4_10574, 0
  store i1 %v5_10574, i1* %cpsr_v.global-to-local, align 1
  %v6_10574 = icmp slt i32 %v1_10574, 0
  store i1 %v6_10574, i1* %cpsr_n.global-to-local, align 1
  %v7_10574 = icmp eq i32 %v1_10574, 0
  store i1 %v7_10574, i1* %cpsr_z.global-to-local, align 1
  %v2_10578 = xor i1 %v6_10574, %v5_10574
  br i1 %v2_10578, label %dec_label_pc_10594, label %dec_label_pc_1057c

dec_label_pc_1057c:                               ; preds = %dec_label_pc_10570, %dec_label_pc_10530, %dec_label_pc_1057c
  %v1_10588 = phi i32 [ %v4_10588, %dec_label_pc_1057c ], [ %v12_10564, %dec_label_pc_10570 ], [ %v0_1063c75, %dec_label_pc_10530 ]
  %v0_1057c = load i32, i32* %lr.global-to-local, align 4
  %v3_1057c = udiv i32 %v0_1057c, 256
  store i32 %v3_1057c, i32* %ip.global-to-local, align 4
  %v0_10580 = load i32, i32* %r1.global-to-local, align 4
  %v1_10580 = inttoptr i32 %v0_10580 to i32*
  %v2_10580 = load i32, i32* %v1_10580, align 4
  store i32 %v2_10580, i32* %lr.global-to-local, align 4
  %v4_10580 = add i32 %v0_10580, 4
  store i32 %v4_10580, i32* %r1.global-to-local, align 4
  %v4_10584 = mul i32 %v2_10580, 16777216
  %v5_10584 = or i32 %v4_10584, %v3_1057c
  store i32 %v5_10584, i32* @ip, align 4
  %v2_10588 = inttoptr i32 %v1_10588 to i32*
  store i32 %v5_10584, i32* %v2_10588, align 4
  %v3_10588 = load i32, i32* %r0.global-to-local, align 4
  %v4_10588 = add i32 %v3_10588, 4
  store i32 %v4_10588, i32* %r0.global-to-local, align 4
  %v0_1058c = load i32, i32* %r2.global-to-local, align 4
  %v1_1058c = add i32 %v0_1058c, -4
  store i32 %v1_1058c, i32* %r2.global-to-local, align 4
  %v3_1058c = sub i32 3, %v0_1058c
  %v4_1058c = and i32 %v3_1058c, %v0_1058c
  %v5_1058c = icmp slt i32 %v4_1058c, 0
  %v6_1058c = icmp slt i32 %v1_1058c, 0
  %v2_10590 = xor i1 %v6_1058c, %v5_1058c
  br i1 %v2_10590, label %dec_label_pc_10594.loopexit, label %dec_label_pc_1057c

dec_label_pc_10594.loopexit:                      ; preds = %dec_label_pc_1057c
  %v7_1058c = icmp eq i32 %v0_1058c, 4
  store i1 %v5_1058c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1058c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1058c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_10594.loopexit, %dec_label_pc_10570
  %v0_104bc58 = phi i32 [ %v1_1058c, %dec_label_pc_10594.loopexit ], [ %v1_10574, %dec_label_pc_10570 ]
  %v0_10594 = load i32, i32* %r1.global-to-local, align 4
  %v1_10594 = add i32 %v0_10594, -3
  store i32 %v1_10594, i32* @r1, align 4
  br label %bb140

dec_label_pc_1059c:                               ; preds = %dec_label_pc_1051c
  br i1 %v2_105a0, label %dec_label_pc_105e8, label %dec_label_pc_105a4

dec_label_pc_105a4:                               ; preds = %dec_label_pc_1059c
  store i32 %v1_1059c, i32* %r2.global-to-local, align 4
  %v3_105a8 = load i32, i32* @r4, align 4
  store i32 %v3_105a8, i32* %stack_var_-16, align 4
  %v6_105a8 = load i32, i32* @r5, align 4
  store i32 %v6_105a8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_105ac

dec_label_pc_105ac:                               ; preds = %dec_label_pc_105ac.dec_label_pc_105ac_crit_edge, %dec_label_pc_105a4
  %v0_105d0 = phi i32 [ %v12_105d0, %dec_label_pc_105ac.dec_label_pc_105ac_crit_edge ], [ %v0_1063c75, %dec_label_pc_105a4 ]
  %v0_105b0 = phi i32 [ %v0_105b0.pre, %dec_label_pc_105ac.dec_label_pc_105ac_crit_edge ], [ %v4_10520, %dec_label_pc_105a4 ]
  %v0_105ac = phi i32 [ %v0_105ac.pre, %dec_label_pc_105ac.dec_label_pc_105ac_crit_edge ], [ %v2_10520, %dec_label_pc_105a4 ]
  %v3_105ac = udiv i32 %v0_105ac, 65536
  %v1_105b0 = inttoptr i32 %v0_105b0 to i32*
  %v2_105b0 = load i32, i32* %v1_105b0, align 4
  store i32 %v2_105b0, i32* %r4.global-to-local, align 4
  %v3_105b0 = add i32 %v0_105b0, 4
  %v4_105b0 = inttoptr i32 %v3_105b0 to i32*
  %v5_105b0 = load i32, i32* %v4_105b0, align 4
  store i32 %v5_105b0, i32* %r5.global-to-local, align 4
  %v6_105b0 = add i32 %v0_105b0, 8
  %v7_105b0 = inttoptr i32 %v6_105b0 to i32*
  %v8_105b0 = load i32, i32* %v7_105b0, align 4
  store i32 %v8_105b0, i32* %ip.global-to-local, align 4
  %v9_105b0 = add i32 %v0_105b0, 12
  %v10_105b0 = inttoptr i32 %v9_105b0 to i32*
  %v11_105b0 = load i32, i32* %v10_105b0, align 4
  store i32 %v11_105b0, i32* %lr.global-to-local, align 4
  %v12_105b0 = add i32 %v0_105b0, 16
  store i32 %v12_105b0, i32* %r1.global-to-local, align 4
  %v4_105b4 = mul i32 %v2_105b0, 65536
  %v5_105b4 = or i32 %v4_105b4, %v3_105ac
  store i32 %v5_105b4, i32* @r3, align 4
  %v3_105b8 = udiv i32 %v2_105b0, 65536
  %v4_105bc = mul i32 %v5_105b0, 65536
  %v5_105bc = or i32 %v4_105bc, %v3_105b8
  store i32 %v5_105bc, i32* %r4.global-to-local, align 4
  %v3_105c0 = udiv i32 %v5_105b0, 65536
  %v4_105c4 = mul i32 %v8_105b0, 65536
  %v5_105c4 = or i32 %v4_105c4, %v3_105c0
  store i32 %v5_105c4, i32* %r5.global-to-local, align 4
  %v3_105c8 = udiv i32 %v8_105b0, 65536
  %v4_105cc = mul i32 %v11_105b0, 65536
  %v5_105cc = or i32 %v4_105cc, %v3_105c8
  store i32 %v5_105cc, i32* @ip, align 4
  %v1_105d0 = inttoptr i32 %v0_105d0 to i32*
  store i32 %v5_105b4, i32* %v1_105d0, align 4
  %v3_105d0 = add i32 %v0_105d0, 4
  %v4_105d0 = inttoptr i32 %v3_105d0 to i32*
  %v5_105d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_105d0, i32* %v4_105d0, align 4
  %v6_105d0 = add i32 %v0_105d0, 8
  %v7_105d0 = inttoptr i32 %v6_105d0 to i32*
  %v8_105d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_105d0, i32* %v7_105d0, align 4
  %v9_105d0 = add i32 %v0_105d0, 12
  %v10_105d0 = inttoptr i32 %v9_105d0 to i32*
  %v11_105d0 = load i32, i32* @ip, align 4
  store i32 %v11_105d0, i32* %v10_105d0, align 4
  %v12_105d0 = add i32 %v0_105d0, 16
  store i32 %v12_105d0, i32* %r0.global-to-local, align 4
  %v0_105d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_105d4 = add i32 %v0_105d4, -16
  store i32 %v1_105d4, i32* %r2.global-to-local, align 4
  %v3_105d4 = sub i32 15, %v0_105d4
  %v4_105d4 = and i32 %v3_105d4, %v0_105d4
  %v5_105d4 = icmp slt i32 %v4_105d4, 0
  %v6_105d4 = icmp slt i32 %v1_105d4, 0
  %v2_105d8 = xor i1 %v6_105d4, %v5_105d4
  br i1 %v2_105d8, label %dec_label_pc_105dc, label %dec_label_pc_105ac.dec_label_pc_105ac_crit_edge

dec_label_pc_105ac.dec_label_pc_105ac_crit_edge:  ; preds = %dec_label_pc_105ac
  %v0_105ac.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_105b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_105ac

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105ac
  %v2_105dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_105dc, i32* @r4, align 4
  %v5_105dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_105dc, i32* @r5, align 4
  %v1_105e0 = add i32 %v0_105d4, -4
  store i32 %v1_105e0, i32* %r2.global-to-local, align 4
  %v3_105e0 = add i32 %v0_105d4, 2147483632
  %v4_105e0 = and i32 %v1_105e0, %v3_105e0
  %v5_105e0 = icmp slt i32 %v4_105e0, 0
  store i1 %v5_105e0, i1* %cpsr_v.global-to-local, align 1
  %v6_105e0 = icmp slt i32 %v1_105e0, 0
  store i1 %v6_105e0, i1* %cpsr_n.global-to-local, align 1
  %v7_105e0 = icmp eq i32 %v1_105e0, 0
  store i1 %v7_105e0, i1* %cpsr_z.global-to-local, align 1
  %v2_105e4 = xor i1 %v6_105e0, %v5_105e0
  br i1 %v2_105e4, label %dec_label_pc_10600, label %dec_label_pc_105e8

dec_label_pc_105e8:                               ; preds = %dec_label_pc_105dc, %dec_label_pc_1059c, %dec_label_pc_105e8
  %v1_105f4 = phi i32 [ %v4_105f4, %dec_label_pc_105e8 ], [ %v12_105d0, %dec_label_pc_105dc ], [ %v0_1063c75, %dec_label_pc_1059c ]
  %v0_105e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_105e8 = udiv i32 %v0_105e8, 65536
  store i32 %v3_105e8, i32* %ip.global-to-local, align 4
  %v0_105ec = load i32, i32* %r1.global-to-local, align 4
  %v1_105ec = inttoptr i32 %v0_105ec to i32*
  %v2_105ec = load i32, i32* %v1_105ec, align 4
  store i32 %v2_105ec, i32* %lr.global-to-local, align 4
  %v4_105ec = add i32 %v0_105ec, 4
  store i32 %v4_105ec, i32* %r1.global-to-local, align 4
  %v4_105f0 = mul i32 %v2_105ec, 65536
  %v5_105f0 = or i32 %v4_105f0, %v3_105e8
  store i32 %v5_105f0, i32* @ip, align 4
  %v2_105f4 = inttoptr i32 %v1_105f4 to i32*
  store i32 %v5_105f0, i32* %v2_105f4, align 4
  %v3_105f4 = load i32, i32* %r0.global-to-local, align 4
  %v4_105f4 = add i32 %v3_105f4, 4
  store i32 %v4_105f4, i32* %r0.global-to-local, align 4
  %v0_105f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_105f8 = add i32 %v0_105f8, -4
  store i32 %v1_105f8, i32* %r2.global-to-local, align 4
  %v3_105f8 = sub i32 3, %v0_105f8
  %v4_105f8 = and i32 %v3_105f8, %v0_105f8
  %v5_105f8 = icmp slt i32 %v4_105f8, 0
  %v6_105f8 = icmp slt i32 %v1_105f8, 0
  %v2_105fc = xor i1 %v6_105f8, %v5_105f8
  br i1 %v2_105fc, label %dec_label_pc_10600.loopexit, label %dec_label_pc_105e8

dec_label_pc_10600.loopexit:                      ; preds = %dec_label_pc_105e8
  %v7_105f8 = icmp eq i32 %v0_105f8, 4
  store i1 %v5_105f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_105f8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_105f8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10600

dec_label_pc_10600:                               ; preds = %dec_label_pc_10600.loopexit, %dec_label_pc_105dc
  %v0_104bc59 = phi i32 [ %v1_105f8, %dec_label_pc_10600.loopexit ], [ %v1_105e0, %dec_label_pc_105dc ]
  %v0_10600 = load i32, i32* %r1.global-to-local, align 4
  %v1_10600 = add i32 %v0_10600, -2
  store i32 %v1_10600, i32* @r1, align 4
  br label %bb140

dec_label_pc_10608:                               ; preds = %dec_label_pc_1051c
  br i1 %v2_105a0, label %dec_label_pc_10654, label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_10608
  store i32 %v1_1059c, i32* %r2.global-to-local, align 4
  %v3_10614 = load i32, i32* @r4, align 4
  store i32 %v3_10614, i32* %stack_var_-16, align 4
  %v6_10614 = load i32, i32* @r5, align 4
  store i32 %v6_10614, i32* %stack_var_-12, align 4
  br label %dec_label_pc_10618

dec_label_pc_10618:                               ; preds = %dec_label_pc_10618.dec_label_pc_10618_crit_edge, %dec_label_pc_10610
  %v0_1063c = phi i32 [ %v12_1063c, %dec_label_pc_10618.dec_label_pc_10618_crit_edge ], [ %v0_1063c75, %dec_label_pc_10610 ]
  %v0_1061c = phi i32 [ %v0_1061c.pre, %dec_label_pc_10618.dec_label_pc_10618_crit_edge ], [ %v4_10520, %dec_label_pc_10610 ]
  %v0_10618 = phi i32 [ %v0_10618.pre, %dec_label_pc_10618.dec_label_pc_10618_crit_edge ], [ %v2_10520, %dec_label_pc_10610 ]
  %v3_10618 = udiv i32 %v0_10618, 16777216
  %v1_1061c = inttoptr i32 %v0_1061c to i32*
  %v2_1061c = load i32, i32* %v1_1061c, align 4
  store i32 %v2_1061c, i32* %r4.global-to-local, align 4
  %v3_1061c = add i32 %v0_1061c, 4
  %v4_1061c = inttoptr i32 %v3_1061c to i32*
  %v5_1061c = load i32, i32* %v4_1061c, align 4
  store i32 %v5_1061c, i32* %r5.global-to-local, align 4
  %v6_1061c = add i32 %v0_1061c, 8
  %v7_1061c = inttoptr i32 %v6_1061c to i32*
  %v8_1061c = load i32, i32* %v7_1061c, align 4
  store i32 %v8_1061c, i32* %ip.global-to-local, align 4
  %v9_1061c = add i32 %v0_1061c, 12
  %v10_1061c = inttoptr i32 %v9_1061c to i32*
  %v11_1061c = load i32, i32* %v10_1061c, align 4
  store i32 %v11_1061c, i32* %lr.global-to-local, align 4
  %v12_1061c = add i32 %v0_1061c, 16
  store i32 %v12_1061c, i32* %r1.global-to-local, align 4
  %v4_10620 = mul i32 %v2_1061c, 256
  %v5_10620 = or i32 %v4_10620, %v3_10618
  store i32 %v5_10620, i32* @r3, align 4
  %v3_10624 = udiv i32 %v2_1061c, 16777216
  %v4_10628 = mul i32 %v5_1061c, 256
  %v5_10628 = or i32 %v4_10628, %v3_10624
  store i32 %v5_10628, i32* %r4.global-to-local, align 4
  %v3_1062c = udiv i32 %v5_1061c, 16777216
  %v4_10630 = mul i32 %v8_1061c, 256
  %v5_10630 = or i32 %v4_10630, %v3_1062c
  store i32 %v5_10630, i32* %r5.global-to-local, align 4
  %v3_10634 = udiv i32 %v8_1061c, 16777216
  %v4_10638 = mul i32 %v11_1061c, 256
  %v5_10638 = or i32 %v4_10638, %v3_10634
  store i32 %v5_10638, i32* @ip, align 4
  %v1_1063c = inttoptr i32 %v0_1063c to i32*
  store i32 %v5_10620, i32* %v1_1063c, align 4
  %v3_1063c = add i32 %v0_1063c, 4
  %v4_1063c = inttoptr i32 %v3_1063c to i32*
  %v5_1063c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1063c, i32* %v4_1063c, align 4
  %v6_1063c = add i32 %v0_1063c, 8
  %v7_1063c = inttoptr i32 %v6_1063c to i32*
  %v8_1063c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1063c, i32* %v7_1063c, align 4
  %v9_1063c = add i32 %v0_1063c, 12
  %v10_1063c = inttoptr i32 %v9_1063c to i32*
  %v11_1063c = load i32, i32* @ip, align 4
  store i32 %v11_1063c, i32* %v10_1063c, align 4
  %v12_1063c = add i32 %v0_1063c, 16
  store i32 %v12_1063c, i32* %r0.global-to-local, align 4
  %v0_10640 = load i32, i32* %r2.global-to-local, align 4
  %v1_10640 = add i32 %v0_10640, -16
  store i32 %v1_10640, i32* %r2.global-to-local, align 4
  %v3_10640 = sub i32 15, %v0_10640
  %v4_10640 = and i32 %v3_10640, %v0_10640
  %v5_10640 = icmp slt i32 %v4_10640, 0
  %v6_10640 = icmp slt i32 %v1_10640, 0
  %v2_10644 = xor i1 %v6_10640, %v5_10640
  br i1 %v2_10644, label %dec_label_pc_10648, label %dec_label_pc_10618.dec_label_pc_10618_crit_edge

dec_label_pc_10618.dec_label_pc_10618_crit_edge:  ; preds = %dec_label_pc_10618
  %v0_10618.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1061c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10618

dec_label_pc_10648:                               ; preds = %dec_label_pc_10618
  %v2_10648 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10648, i32* @r4, align 4
  %v5_10648 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_10648, i32* @r5, align 4
  %v1_1064c = add i32 %v0_10640, -4
  store i32 %v1_1064c, i32* %r2.global-to-local, align 4
  %v3_1064c = add i32 %v0_10640, 2147483632
  %v4_1064c = and i32 %v1_1064c, %v3_1064c
  %v5_1064c = icmp slt i32 %v4_1064c, 0
  store i1 %v5_1064c, i1* %cpsr_v.global-to-local, align 1
  %v6_1064c = icmp slt i32 %v1_1064c, 0
  store i1 %v6_1064c, i1* %cpsr_n.global-to-local, align 1
  %v7_1064c = icmp eq i32 %v1_1064c, 0
  store i1 %v7_1064c, i1* %cpsr_z.global-to-local, align 1
  %v2_10650 = xor i1 %v6_1064c, %v5_1064c
  br i1 %v2_10650, label %dec_label_pc_1066c, label %dec_label_pc_10654

dec_label_pc_10654:                               ; preds = %dec_label_pc_10648, %dec_label_pc_10608, %dec_label_pc_10654
  %v1_10660 = phi i32 [ %v4_10660, %dec_label_pc_10654 ], [ %v12_1063c, %dec_label_pc_10648 ], [ %v0_1063c75, %dec_label_pc_10608 ]
  %v0_10654 = load i32, i32* %lr.global-to-local, align 4
  %v3_10654 = udiv i32 %v0_10654, 16777216
  store i32 %v3_10654, i32* %ip.global-to-local, align 4
  %v0_10658 = load i32, i32* %r1.global-to-local, align 4
  %v1_10658 = inttoptr i32 %v0_10658 to i32*
  %v2_10658 = load i32, i32* %v1_10658, align 4
  store i32 %v2_10658, i32* %lr.global-to-local, align 4
  %v4_10658 = add i32 %v0_10658, 4
  store i32 %v4_10658, i32* %r1.global-to-local, align 4
  %v4_1065c = mul i32 %v2_10658, 256
  %v5_1065c = or i32 %v4_1065c, %v3_10654
  store i32 %v5_1065c, i32* @ip, align 4
  %v2_10660 = inttoptr i32 %v1_10660 to i32*
  store i32 %v5_1065c, i32* %v2_10660, align 4
  %v3_10660 = load i32, i32* %r0.global-to-local, align 4
  %v4_10660 = add i32 %v3_10660, 4
  store i32 %v4_10660, i32* %r0.global-to-local, align 4
  %v0_10664 = load i32, i32* %r2.global-to-local, align 4
  %v1_10664 = add i32 %v0_10664, -4
  store i32 %v1_10664, i32* %r2.global-to-local, align 4
  %v3_10664 = sub i32 3, %v0_10664
  %v4_10664 = and i32 %v3_10664, %v0_10664
  %v5_10664 = icmp slt i32 %v4_10664, 0
  %v6_10664 = icmp slt i32 %v1_10664, 0
  %v2_10668 = xor i1 %v6_10664, %v5_10664
  br i1 %v2_10668, label %dec_label_pc_1066c.loopexit, label %dec_label_pc_10654

dec_label_pc_1066c.loopexit:                      ; preds = %dec_label_pc_10654
  %v7_10664 = icmp eq i32 %v0_10664, 4
  store i1 %v5_10664, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_10664, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_10664, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1066c

dec_label_pc_1066c:                               ; preds = %dec_label_pc_1066c.loopexit, %dec_label_pc_10648
  %v0_104bc60 = phi i32 [ %v1_10664, %dec_label_pc_1066c.loopexit ], [ %v1_1064c, %dec_label_pc_10648 ]
  %v0_1066c = load i32, i32* %r1.global-to-local, align 4
  %v1_1066c = add i32 %v0_1066c, -1
  store i32 %v1_1066c, i32* @r1, align 4
  br label %bb140

dec_label_pc_10674:                               ; preds = %entry
  %v1_10674 = load i32, i32* @r2, align 4
  %v2_10674 = add i32 %v1_10674, %v0_10420
  store i32 %v2_10674, i32* @r1, align 4
  %v2_10678 = add i32 %v1_10674, %v1_10420
  store i32 %v2_10678, i32* %r0.global-to-local, align 4
  %v2_1067c = add i32 %v1_10674, -4
  store i32 %v2_1067c, i32* %r2.global-to-local, align 4
  %v4_1067c = sub i32 3, %v1_10674
  %v5_1067c = and i32 %v4_1067c, %v1_10674
  %v6_1067c = icmp slt i32 %v5_1067c, 0
  store i1 %v6_1067c, i1* %cpsr_v.global-to-local, align 1
  %v7_1067c = icmp slt i32 %v2_1067c, 0
  store i1 %v7_1067c, i1* %cpsr_n.global-to-local, align 1
  %v8_1067c = icmp eq i32 %v1_10674, 4
  store i1 %v8_1067c, i1* %cpsr_z.global-to-local, align 1
  %v5_10680 = icmp slt i32 %v1_10674, 4
  br i1 %v5_10680, label %bb150, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %dec_label_pc_10674
  %v1_10684 = urem i32 %v2_10678, 4
  store i32 %v1_10684, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10684 = icmp eq i32 %v1_10684, 0
  store i1 %v2_10684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10684, label %dec_label_pc_1068c, label %dec_label_pc_1072c

dec_label_pc_1068c:                               ; preds = %dec_label_pc_10684
  %v1_1068c = urem i32 %v2_10674, 4
  store i32 %v1_1068c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1068c = icmp eq i32 %v1_1068c, 0
  store i1 %v2_1068c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1068c, label %dec_label_pc_10694, label %dec_label_pc_10758

dec_label_pc_10694:                               ; preds = %dec_label_pc_1068c, %dec_label_pc_10750
  %v0_106ac36 = phi i32 [ %v2_10678, %dec_label_pc_1068c ], [ %v0_107a019, %dec_label_pc_10750 ]
  %v0_106a835 = phi i32 [ %v2_10674, %dec_label_pc_1068c ], [ %v0_10750, %dec_label_pc_10750 ]
  %v0_10694 = phi i32 [ %v2_1067c, %dec_label_pc_1068c ], [ %v2_10748, %dec_label_pc_10750 ]
  %v2_10694 = add i32 %v0_10694, -8
  store i32 %v2_10694, i32* %r2.global-to-local, align 4
  %v4_10694 = sub i32 7, %v0_10694
  %v5_10694 = and i32 %v4_10694, %v0_10694
  %v6_10694 = icmp slt i32 %v5_10694, 0
  store i1 %v6_10694, i1* %cpsr_v.global-to-local, align 1
  %v7_10694 = icmp slt i32 %v2_10694, 0
  store i1 %v7_10694, i1* %cpsr_n.global-to-local, align 1
  %v8_10694 = icmp eq i32 %v0_10694, 8
  store i1 %v8_10694, i1* %cpsr_z.global-to-local, align 1
  %v5_10698 = icmp slt i32 %v0_10694, 8
  br i1 %v5_10698, label %dec_label_pc_106e4, label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %dec_label_pc_10694
  %v3_1069c = load i32, i32* @r4, align 4
  %v5_1069c = inttoptr i32 %v3_1069c to i8*
  store i8* %v5_1069c, i8** %stack_var_-8, align 4
  %v8_1069c = load i32, i32* @lr, align 4
  %v2_106a0 = add i32 %v0_10694, -28
  store i32 %v2_106a0, i32* %r2.global-to-local, align 4
  %v4_106a0 = sub i32 27, %v0_10694
  %v5_106a0 = and i32 %v4_106a0, %v2_10694
  %v6_106a0 = icmp slt i32 %v5_106a0, 0
  store i1 %v6_106a0, i1* %cpsr_v.global-to-local, align 1
  %v7_106a0 = icmp slt i32 %v2_106a0, 0
  store i1 %v7_106a0, i1* %cpsr_n.global-to-local, align 1
  %v8_106a0 = icmp eq i32 %v2_10694, 20
  store i1 %v8_106a0, i1* %cpsr_z.global-to-local, align 1
  %v5_106a4 = icmp slt i32 %v2_10694, 20
  br i1 %v5_106a4, label %dec_label_pc_106c0, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_1069c, %dec_label_pc_106a8.dec_label_pc_106a8_crit_edge
  %v0_106ac = phi i32 [ %v1_106b4, %dec_label_pc_106a8.dec_label_pc_106a8_crit_edge ], [ %v0_106ac36, %dec_label_pc_1069c ]
  %v0_106a8 = phi i32 [ %v0_106a8.pre, %dec_label_pc_106a8.dec_label_pc_106a8_crit_edge ], [ %v0_106a835, %dec_label_pc_1069c ]
  %v1_106a8 = add i32 %v0_106a8, -4
  %v2_106a8 = inttoptr i32 %v1_106a8 to i32*
  %v3_106a8 = load i32, i32* %v2_106a8, align 4
  %v4_106a8 = add i32 %v0_106a8, -8
  %v5_106a8 = inttoptr i32 %v4_106a8 to i32*
  %v6_106a8 = load i32, i32* %v5_106a8, align 4
  store i32 %v6_106a8, i32* %r4.global-to-local, align 4
  %v7_106a8 = add i32 %v0_106a8, -12
  %v8_106a8 = inttoptr i32 %v7_106a8 to i32*
  %v9_106a8 = load i32, i32* %v8_106a8, align 4
  store i32 %v9_106a8, i32* %ip.global-to-local, align 4
  %v10_106a8 = add i32 %v0_106a8, -16
  %v11_106a8 = inttoptr i32 %v10_106a8 to i32*
  %v12_106a8 = load i32, i32* %v11_106a8, align 4
  store i32 %v12_106a8, i32* %lr.global-to-local, align 4
  store i32 %v10_106a8, i32* %r1.global-to-local, align 4
  %v1_106ac = add i32 %v0_106ac, -16
  %v2_106ac = inttoptr i32 %v1_106ac to i32*
  store i32 %v3_106a8, i32* %v2_106ac, align 4
  %v4_106ac = add i32 %v0_106ac, -12
  %v5_106ac = inttoptr i32 %v4_106ac to i32*
  %v6_106ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_106ac, i32* %v5_106ac, align 4
  %v7_106ac = add i32 %v0_106ac, -8
  %v8_106ac = inttoptr i32 %v7_106ac to i32*
  %v9_106ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_106ac, i32* %v8_106ac, align 4
  %v10_106ac = add i32 %v0_106ac, -4
  %v11_106ac = inttoptr i32 %v10_106ac to i32*
  %v12_106ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_106ac, i32* %v11_106ac, align 4
  store i32 %v1_106ac, i32* %r0.global-to-local, align 4
  %v0_106b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_106b0 = add i32 %v0_106b0, -4
  %v2_106b0 = inttoptr i32 %v1_106b0 to i32*
  %v3_106b0 = load i32, i32* %v2_106b0, align 4
  store i32 %v3_106b0, i32* @r3, align 4
  %v4_106b0 = add i32 %v0_106b0, -8
  %v5_106b0 = inttoptr i32 %v4_106b0 to i32*
  %v6_106b0 = load i32, i32* %v5_106b0, align 4
  store i32 %v6_106b0, i32* %r4.global-to-local, align 4
  %v7_106b0 = add i32 %v0_106b0, -12
  %v8_106b0 = inttoptr i32 %v7_106b0 to i32*
  %v9_106b0 = load i32, i32* %v8_106b0, align 4
  store i32 %v9_106b0, i32* @ip, align 4
  %v10_106b0 = add i32 %v0_106b0, -16
  %v11_106b0 = inttoptr i32 %v10_106b0 to i32*
  %v12_106b0 = load i32, i32* %v11_106b0, align 4
  store i32 %v12_106b0, i32* %lr.global-to-local, align 4
  store i32 %v10_106b0, i32* @r1, align 4
  %v1_106b4 = add i32 %v0_106ac, -32
  %v2_106b4 = inttoptr i32 %v1_106b4 to i32*
  store i32 %v3_106b0, i32* %v2_106b4, align 4
  %v4_106b4 = add i32 %v0_106ac, -28
  %v5_106b4 = inttoptr i32 %v4_106b4 to i32*
  %v6_106b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_106b4, i32* %v5_106b4, align 4
  %v7_106b4 = add i32 %v0_106ac, -24
  %v8_106b4 = inttoptr i32 %v7_106b4 to i32*
  %v9_106b4 = load i32, i32* @ip, align 4
  store i32 %v9_106b4, i32* %v8_106b4, align 4
  %v10_106b4 = add i32 %v0_106ac, -20
  %v11_106b4 = inttoptr i32 %v10_106b4 to i32*
  %v12_106b4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_106b4, i32* %v11_106b4, align 4
  store i32 %v1_106b4, i32* %r0.global-to-local, align 4
  %v0_106b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_106b8 = add i32 %v0_106b8, -32
  store i32 %v2_106b8, i32* %r2.global-to-local, align 4
  %v6_106bc = icmp slt i32 %v0_106b8, 32
  br i1 %v6_106bc, label %dec_label_pc_106c0.loopexit, label %dec_label_pc_106a8.dec_label_pc_106a8_crit_edge

dec_label_pc_106a8.dec_label_pc_106a8_crit_edge:  ; preds = %dec_label_pc_106a8
  %v0_106a8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_106a8

dec_label_pc_106c0.loopexit:                      ; preds = %dec_label_pc_106a8
  %v4_106b8 = sub i32 31, %v0_106b8
  %v5_106b8 = and i32 %v4_106b8, %v0_106b8
  %v6_106b8 = icmp slt i32 %v5_106b8, 0
  %v7_106b8 = icmp slt i32 %v2_106b8, 0
  store i1 %v6_106b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_106b8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106c0

dec_label_pc_106c0:                               ; preds = %dec_label_pc_106c0.loopexit, %dec_label_pc_1069c
  %v6_106c8 = phi i32 [ %v1_106b4, %dec_label_pc_106c0.loopexit ], [ %v0_106ac36, %dec_label_pc_1069c ]
  %v0_106d0.pr = phi i32 [ %v2_106b8, %dec_label_pc_106c0.loopexit ], [ %v2_106a0, %dec_label_pc_1069c ]
  %v4_106c0 = add i32 %v0_106d0.pr, 16
  %v6_106c0 = sub i32 0, %v0_106d0.pr
  %v7_106c0 = and i32 %v4_106c0, %v6_106c0
  %v8_106c0 = icmp slt i32 %v7_106c0, 0
  store i1 %v8_106c0, i1* %cpsr_v.global-to-local, align 1
  %v9_106c0 = icmp slt i32 %v4_106c0, 0
  store i1 %v9_106c0, i1* %cpsr_n.global-to-local, align 1
  %v10_106c0 = icmp eq i32 %v4_106c0, 0
  store i1 %v10_106c0, i1* %cpsr_z.global-to-local, align 1
  %v5_106c4 = icmp slt i32 %v0_106d0.pr, -16
  br i1 %v5_106c4, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_106c0
  %v6_106c4 = load i32, i32* @r1, align 4
  %v7_106c4 = add i32 %v6_106c4, -4
  %v8_106c4 = inttoptr i32 %v7_106c4 to i32*
  %v9_106c4 = load i32, i32* %v8_106c4, align 4
  store i32 %v9_106c4, i32* @r3, align 4
  %v10_106c4 = add i32 %v6_106c4, -8
  %v11_106c4 = inttoptr i32 %v10_106c4 to i32*
  %v12_106c4 = load i32, i32* %v11_106c4, align 4
  store i32 %v12_106c4, i32* %r4.global-to-local, align 4
  %v13_106c4 = add i32 %v6_106c4, -12
  %v14_106c4 = inttoptr i32 %v13_106c4 to i32*
  %v15_106c4 = load i32, i32* %v14_106c4, align 4
  store i32 %v15_106c4, i32* @ip, align 4
  %v16_106c4 = add i32 %v6_106c4, -16
  %v17_106c4 = inttoptr i32 %v16_106c4 to i32*
  %v18_106c4 = load i32, i32* %v17_106c4, align 4
  store i32 %v18_106c4, i32* %lr.global-to-local, align 4
  store i32 %v16_106c4, i32* @r1, align 4
  %v7_106c8 = add i32 %v6_106c8, -16
  %v8_106c8 = inttoptr i32 %v7_106c8 to i32*
  store i32 %v9_106c4, i32* %v8_106c8, align 4
  %v10_106c8 = add i32 %v6_106c8, -12
  %v11_106c8 = inttoptr i32 %v10_106c8 to i32*
  %v12_106c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_106c8, i32* %v11_106c8, align 4
  %v13_106c8 = add i32 %v6_106c8, -8
  %v14_106c8 = inttoptr i32 %v13_106c8 to i32*
  %v15_106c8 = load i32, i32* @ip, align 4
  store i32 %v15_106c8, i32* %v14_106c8, align 4
  %v16_106c8 = add i32 %v6_106c8, -4
  %v17_106c8 = inttoptr i32 %v16_106c8 to i32*
  %v18_106c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_106c8, i32* %v17_106c8, align 4
  store i32 %v7_106c8, i32* %r0.global-to-local, align 4
  %v6_106cc = load i32, i32* %r2.global-to-local, align 4
  %v7_106cc = add i32 %v6_106cc, -16
  store i32 %v7_106cc, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_106c0, %bb147
  %v6_106d8 = phi i32 [ %v7_106c8, %bb147 ], [ %v6_106c8, %dec_label_pc_106c0 ]
  %v0_106d0 = phi i32 [ %v7_106cc, %bb147 ], [ %v0_106d0.pr, %dec_label_pc_106c0 ]
  %v4_106d0 = add i32 %v0_106d0, 20
  store i32 %v4_106d0, i32* %r2.global-to-local, align 4
  %v6_106d0 = sub i32 0, %v0_106d0
  %v7_106d0 = and i32 %v4_106d0, %v6_106d0
  %v8_106d0 = icmp slt i32 %v7_106d0, 0
  store i1 %v8_106d0, i1* %cpsr_v.global-to-local, align 1
  %v9_106d0 = icmp slt i32 %v4_106d0, 0
  store i1 %v9_106d0, i1* %cpsr_n.global-to-local, align 1
  %v10_106d0 = icmp eq i32 %v4_106d0, 0
  store i1 %v10_106d0, i1* %cpsr_z.global-to-local, align 1
  %v5_106d4 = icmp slt i32 %v0_106d0, -20
  br i1 %v5_106d4, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_106d4 = load i32, i32* @r1, align 4
  %v7_106d4 = add i32 %v6_106d4, -4
  %v8_106d4 = inttoptr i32 %v7_106d4 to i32*
  %v9_106d4 = load i32, i32* %v8_106d4, align 4
  store i32 %v9_106d4, i32* @r3, align 4
  %v10_106d4 = add i32 %v6_106d4, -8
  %v11_106d4 = inttoptr i32 %v10_106d4 to i32*
  %v12_106d4 = load i32, i32* %v11_106d4, align 4
  store i32 %v12_106d4, i32* @ip, align 4
  %v13_106d4 = add i32 %v6_106d4, -12
  %v14_106d4 = inttoptr i32 %v13_106d4 to i32*
  %v15_106d4 = load i32, i32* %v14_106d4, align 4
  store i32 %v15_106d4, i32* %lr.global-to-local, align 4
  store i32 %v13_106d4, i32* @r1, align 4
  %v7_106d8 = add i32 %v6_106d8, -12
  %v8_106d8 = inttoptr i32 %v7_106d8 to i32*
  store i32 %v9_106d4, i32* %v8_106d8, align 4
  %v10_106d8 = add i32 %v6_106d8, -8
  %v11_106d8 = inttoptr i32 %v10_106d8 to i32*
  %v12_106d8 = load i32, i32* @ip, align 4
  store i32 %v12_106d8, i32* %v11_106d8, align 4
  %v13_106d8 = add i32 %v6_106d8, -4
  %v14_106d8 = inttoptr i32 %v13_106d8 to i32*
  %v15_106d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_106d8, i32* %v14_106d8, align 4
  store i32 %v7_106d8, i32* %r0.global-to-local, align 4
  %v6_106dc = load i32, i32* %r2.global-to-local, align 4
  %v7_106dc = add i32 %v6_106dc, -12
  store i32 %v7_106dc, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_106fc44 = phi i32 [ %v6_106d8, %.thread1 ], [ %v7_106d8, %bb148 ]
  %v0_106e442 = phi i32 [ %v4_106d0, %.thread1 ], [ %v7_106dc, %bb148 ]
  %v2_106e0 = load i8*, i8** %stack_var_-8, align 4
  %v3_106e0 = ptrtoint i8* %v2_106e0 to i32
  store i32 %v3_106e0, i32* @r4, align 4
  store i32 %v8_1069c, i32* @lr, align 4
  br label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10694, %.thread3
  %v7_106f4 = phi i32 [ %v0_106ac36, %dec_label_pc_10694 ], [ %v6_106fc44, %.thread3 ]
  %v0_106e4 = phi i32 [ %v2_10694, %dec_label_pc_10694 ], [ %v0_106e442, %.thread3 ]
  %v2_106e4 = add i32 %v0_106e4, 8
  store i32 %v2_106e4, i32* %r2.global-to-local, align 4
  %v4_106e4 = sub i32 0, %v0_106e4
  %v5_106e4 = and i32 %v2_106e4, %v4_106e4
  %v6_106e4 = icmp slt i32 %v5_106e4, 0
  store i1 %v6_106e4, i1* %cpsr_v.global-to-local, align 1
  %v7_106e4 = icmp slt i32 %v2_106e4, 0
  store i1 %v7_106e4, i1* %cpsr_n.global-to-local, align 1
  %v8_106e4 = icmp eq i32 %v2_106e4, 0
  store i1 %v8_106e4, i1* %cpsr_z.global-to-local, align 1
  %v5_106e8 = icmp slt i32 %v0_106e4, -8
  br i1 %v5_106e8, label %bb150, label %dec_label_pc_106ec

dec_label_pc_106ec:                               ; preds = %dec_label_pc_106e4
  %v6_106ec = add i32 %v0_106e4, 4
  store i32 %v6_106ec, i32* %r2.global-to-local, align 4
  %v8_106ec = sub i32 -5, %v0_106e4
  %v9_106ec = and i32 %v8_106ec, %v2_106e4
  %v10_106ec = icmp slt i32 %v9_106ec, 0
  store i1 %v10_106ec, i1* %cpsr_v.global-to-local, align 1
  %v11_106ec = icmp slt i32 %v6_106ec, 0
  store i1 %v11_106ec, i1* %cpsr_n.global-to-local, align 1
  %v12_106ec = icmp eq i32 %v2_106e4, 4
  store i1 %v12_106ec, i1* %cpsr_z.global-to-local, align 1
  %v5_106f0 = icmp slt i32 %v2_106e4, 4
  %v6_106f0 = load i32, i32* @r1, align 4
  %v7_106f0 = add i32 %v6_106f0, -4
  %v8_106f0 = inttoptr i32 %v7_106f0 to i32*
  %v9_106f0 = load i32, i32* %v8_106f0, align 4
  store i32 %v9_106f0, i32* @r3, align 4
  br i1 %v5_106f0, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_106ec
  store i32 %v7_106f0, i32* @r1, align 4
  %v8_106f4 = add i32 %v7_106f4, -4
  %v9_106f4 = inttoptr i32 %v8_106f4 to i32*
  store i32 %v9_106f0, i32* %v9_106f4, align 4
  %v10_106f4 = load i32, i32* %r0.global-to-local, align 4
  %v11_106f4 = add i32 %v10_106f4, -4
  store i32 %v11_106f4, i32* %r0.global-to-local, align 4
  %v0_10704.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_106ec
  %v10_106f8 = add i32 %v6_106f0, -8
  %v11_106f8 = inttoptr i32 %v10_106f8 to i32*
  %v12_106f8 = load i32, i32* %v11_106f8, align 4
  store i32 %v12_106f8, i32* @ip, align 4
  store i32 %v10_106f8, i32* @r1, align 4
  %v7_106fc = add i32 %v7_106f4, -8
  %v8_106fc = inttoptr i32 %v7_106fc to i32*
  store i32 %v9_106f0, i32* %v8_106fc, align 4
  %v10_106fc = add i32 %v7_106f4, -4
  %v11_106fc = inttoptr i32 %v10_106fc to i32*
  %v12_106fc = load i32, i32* @ip, align 4
  store i32 %v12_106fc, i32* %v11_106fc, align 4
  store i32 %v7_106fc, i32* %r0.global-to-local, align 4
  %v6_10700 = load i32, i32* %r2.global-to-local, align 4
  %v7_10700 = add i32 %v6_10700, -4
  store i32 %v7_10700, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %.thread13, %dec_label_pc_106e4, %dec_label_pc_10674, %dec_label_pc_108a8, %dec_label_pc_1083c, %dec_label_pc_107d0, %bb149
  %v2_10708 = phi i32 [ %v11_106f4, %.thread7 ], [ %v0_107a019, %.thread13 ], [ %v7_106f4, %dec_label_pc_106e4 ], [ %v2_10678, %dec_label_pc_10674 ], [ %v2_1071452, %dec_label_pc_108a8 ], [ %v2_1071451, %dec_label_pc_1083c ], [ %v2_1071450, %dec_label_pc_107d0 ], [ %v7_106fc, %bb149 ]
  %v0_10704 = phi i32 [ %v0_10704.pre, %.thread7 ], [ %v2_10748, %.thread13 ], [ %v2_106e4, %dec_label_pc_106e4 ], [ %v2_1067c, %dec_label_pc_10674 ], [ %v0_1070448, %dec_label_pc_108a8 ], [ %v0_1070447, %dec_label_pc_1083c ], [ %v0_1070446, %dec_label_pc_107d0 ], [ %v7_10700, %bb149 ]
  %v1_10704 = add i32 %v0_10704, 4
  store i32 %v1_10704, i32* @r2, align 4
  %v3_10704 = sub i32 0, %v0_10704
  %v4_10704 = and i32 %v1_10704, %v3_10704
  %v5_10704 = icmp slt i32 %v4_10704, 0
  store i1 %v5_10704, i1* %cpsr_v.global-to-local, align 1
  %v6_10704 = icmp slt i32 %v1_10704, 0
  store i1 %v6_10704, i1* %cpsr_n.global-to-local, align 1
  %v7_10704 = icmp eq i32 %v1_10704, 0
  store i1 %v7_10704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10704, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1070c = add i32 %v0_10704, 2
  %v3_1070c = sub i32 -3, %v0_10704
  %v4_1070c = and i32 %v3_1070c, %v1_10704
  %v5_1070c = icmp slt i32 %v4_1070c, 0
  store i1 %v5_1070c, i1* %cpsr_v.global-to-local, align 1
  %v6_1070c = icmp slt i32 %v1_1070c, 0
  store i1 %v6_1070c, i1* %cpsr_n.global-to-local, align 1
  %v7_1070c = icmp eq i32 %v1_10704, 2
  store i1 %v7_1070c, i1* %cpsr_z.global-to-local, align 1
  %v0_10710 = load i32, i32* @r1, align 4
  %v1_10710 = add i32 %v0_10710, -1
  %v2_10710 = inttoptr i32 %v1_10710 to i8*
  %v3_10710 = load i8, i8* %v2_10710, align 1
  %v4_10710 = zext i8 %v3_10710 to i32
  store i32 %v4_10710, i32* @r3, align 4
  store i32 %v1_10710, i32* @r1, align 4
  %v3_10714 = add i32 %v2_10708, -1
  %v4_10714 = inttoptr i32 %v3_10714 to i8*
  store i8 %v3_10710, i8* %v4_10714, align 1
  %v5_10714 = load i32, i32* %r0.global-to-local, align 4
  %v6_10714 = add i32 %v5_10714, -1
  store i32 %v6_10714, i32* %r0.global-to-local, align 4
  %v0_10718 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_10718 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_10718 = xor i1 %v0_10718, %v1_10718
  br i1 %v2_10718, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_10718 = load i32, i32* @r1, align 4
  %v4_10718 = add i32 %v3_10718, -1
  %v5_10718 = inttoptr i32 %v4_10718 to i8*
  %v6_10718 = load i8, i8* %v5_10718, align 1
  %v7_10718 = zext i8 %v6_10718 to i32
  store i32 %v7_10718, i32* @r3, align 4
  store i32 %v4_10718, i32* @r1, align 4
  %v6_1071c = add i32 %v5_10714, -2
  %v7_1071c = inttoptr i32 %v6_1071c to i8*
  store i8 %v6_10718, i8* %v7_1071c, align 1
  %v8_1071c = load i32, i32* %r0.global-to-local, align 4
  %v9_1071c = add i32 %v8_1071c, -1
  store i32 %v9_1071c, i32* %r0.global-to-local, align 4
  %v1_10720.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_10720.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_10724 = phi i32 [ %v9_1071c, %bb152 ], [ %v6_10714, %bb151 ]
  %v2_10724 = phi i1 [ %v2_10720.pre, %bb152 ], [ %v1_10718, %bb151 ]
  %v1_10724 = phi i1 [ %v1_10720.pre, %bb152 ], [ %v0_10718, %bb151 ]
  %v0_10720 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_10720 = xor i1 %v2_10724, %v1_10724
  %v4_10720 = or i1 %v0_10720, %v3_10720
  br i1 %v4_10720, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_10720 = load i32, i32* @r1, align 4
  %v6_10720 = add i32 %v5_10720, -1
  %v7_10720 = inttoptr i32 %v6_10720 to i8*
  %v8_10720 = load i8, i8* %v7_10720, align 1
  %v9_10720 = zext i8 %v8_10720 to i32
  store i32 %v9_10720, i32* @r3, align 4
  store i32 %v6_10720, i32* @r1, align 4
  %v8_10724 = add i32 %v7_10724, -1
  %v9_10724 = inttoptr i32 %v8_10724 to i8*
  store i8 %v8_10720, i8* %v9_10724, align 1
  %v10_10724 = load i32, i32* %r0.global-to-local, align 4
  %v11_10724 = add i32 %v10_10724, -1
  store i32 %v11_10724, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1072c:                               ; preds = %dec_label_pc_10684
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1072c = icmp eq i32 %v1_10684, 1
  store i1 %v8_1072c, i1* %cpsr_n.global-to-local, align 1
  %v9_1072c = icmp eq i32 %v1_10684, 2
  store i1 %v9_1072c, i1* %cpsr_z.global-to-local, align 1
  %v1_10730 = add i32 %v2_10674, -1
  %v2_10730 = inttoptr i32 %v1_10730 to i8*
  %v3_10730 = load i8, i8* %v2_10730, align 1
  %v4_10730 = zext i8 %v3_10730 to i32
  store i32 %v4_10730, i32* @r3, align 4
  store i32 %v1_10730, i32* @r1, align 4
  %v3_10734 = add i32 %v2_10678, -1
  %v4_10734 = inttoptr i32 %v3_10734 to i8*
  store i8 %v3_10730, i8* %v4_10734, align 1
  %v5_10734 = load i32, i32* %r0.global-to-local, align 4
  %v6_10734 = add i32 %v5_10734, -1
  store i32 %v6_10734, i32* %r0.global-to-local, align 4
  br i1 %v8_1072c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1072c
  %v6_10738 = load i32, i32* @r1, align 4
  %v7_10738 = add i32 %v6_10738, -1
  %v8_10738 = inttoptr i32 %v7_10738 to i8*
  %v9_10738 = load i8, i8* %v8_10738, align 1
  %v10_10738 = zext i8 %v9_10738 to i32
  store i32 %v10_10738, i32* @r3, align 4
  store i32 %v7_10738, i32* @r1, align 4
  %v9_1073c = add i32 %v5_10734, -2
  %v10_1073c = inttoptr i32 %v9_1073c to i8*
  store i8 %v9_10738, i8* %v10_1073c, align 1
  %v11_1073c = load i32, i32* %r0.global-to-local, align 4
  %v12_1073c = add i32 %v11_1073c, -1
  store i32 %v12_1073c, i32* %r0.global-to-local, align 4
  br i1 %v9_1072c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_10740 = load i32, i32* @r1, align 4
  %v9_10740 = add i32 %v8_10740, -1
  %v10_10740 = inttoptr i32 %v9_10740 to i8*
  %v11_10740 = load i8, i8* %v10_10740, align 1
  %v12_10740 = zext i8 %v11_10740 to i32
  store i32 %v12_10740, i32* @r3, align 4
  store i32 %v9_10740, i32* @r1, align 4
  %v11_10744 = add i32 %v11_1073c, -2
  %v12_10744 = inttoptr i32 %v11_10744 to i8*
  store i8 %v11_10740, i8* %v12_10744, align 1
  %v13_10744 = load i32, i32* %r0.global-to-local, align 4
  %v14_10744 = add i32 %v13_10744, -1
  store i32 %v14_10744, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1072c, %bb155
  %v0_107a019 = phi i32 [ %v12_1073c, %bb154 ], [ %v6_10734, %dec_label_pc_1072c ], [ %v14_10744, %bb155 ]
  %v0_10748 = load i32, i32* %r2.global-to-local, align 4
  %v1_10748 = load i32, i32* @ip, align 4
  %v2_10748 = sub i32 %v0_10748, %v1_10748
  store i32 %v2_10748, i32* %r2.global-to-local, align 4
  %v4_10748 = xor i32 %v1_10748, %v0_10748
  %v5_10748 = xor i32 %v2_10748, %v0_10748
  %v6_10748 = and i32 %v5_10748, %v4_10748
  %v7_10748 = icmp slt i32 %v6_10748, 0
  store i1 %v7_10748, i1* %cpsr_v.global-to-local, align 1
  %v8_10748 = icmp slt i32 %v2_10748, 0
  store i1 %v8_10748, i1* %cpsr_n.global-to-local, align 1
  %v9_10748 = icmp eq i32 %v0_10748, %v1_10748
  store i1 %v9_10748, i1* %cpsr_z.global-to-local, align 1
  %v5_1074c = icmp slt i32 %v0_10748, %v1_10748
  br i1 %v5_1074c, label %bb150, label %dec_label_pc_10750

dec_label_pc_10750:                               ; preds = %.thread13
  %v0_10750 = load i32, i32* @r1, align 4
  %v1_10750 = urem i32 %v0_10750, 4
  store i32 %v1_10750, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_10750 = icmp eq i32 %v1_10750, 0
  store i1 %v2_10750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10750, label %dec_label_pc_10694, label %dec_label_pc_10758

dec_label_pc_10758:                               ; preds = %dec_label_pc_1068c, %dec_label_pc_10750
  %v0_107a018 = phi i32 [ %v2_10678, %dec_label_pc_1068c ], [ %v0_107a019, %dec_label_pc_10750 ]
  %v0_1084c = phi i32 [ %v2_1067c, %dec_label_pc_1068c ], [ %v2_10748, %dec_label_pc_10750 ]
  %v0_10758 = phi i32 [ %v2_10674, %dec_label_pc_1068c ], [ %v0_10750, %dec_label_pc_10750 ]
  %v0_10760 = phi i32 [ %v1_1068c, %dec_label_pc_1068c ], [ %v1_10750, %dec_label_pc_10750 ]
  %v1_10758 = and i32 %v0_10758, -4
  store i32 %v1_10758, i32* %r1.global-to-local, align 4
  %v1_1075c = inttoptr i32 %v1_10758 to i32*
  %v2_1075c = load i32, i32* %v1_1075c, align 4
  store i32 %v2_1075c, i32* @r3, align 4
  %v7_10760 = icmp ult i32 %v0_10760, 2
  %v2_10844 = add i32 %v0_1084c, -12
  %v4_10844 = sub i32 11, %v0_1084c
  %v5_10844 = and i32 %v4_10844, %v0_1084c
  %v6_10844 = icmp slt i32 %v5_10844, 0
  store i1 %v6_10844, i1* %cpsr_v.global-to-local, align 1
  %v7_10844 = icmp slt i32 %v2_10844, 0
  store i1 %v7_10844, i1* %cpsr_n.global-to-local, align 1
  %v8_10844 = icmp eq i32 %v0_1084c, 12
  store i1 %v8_10844, i1* %cpsr_z.global-to-local, align 1
  %v5_10848 = icmp slt i32 %v0_1084c, 12
  br i1 %v7_10760, label %dec_label_pc_10844, label %dec_label_pc_10768

dec_label_pc_10768:                               ; preds = %dec_label_pc_10758
  %v8_10760 = icmp eq i32 %v0_10760, 2
  br i1 %v8_10760, label %dec_label_pc_107d8, label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10768
  br i1 %v5_10848, label %dec_label_pc_107b8, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %dec_label_pc_1076c
  store i32 %v2_10844, i32* %r2.global-to-local, align 4
  %v3_10778 = load i32, i32* @r4, align 4
  store i32 %v3_10778, i32* %stack_var_-12, align 4
  %v6_10778 = load i32, i32* @r5, align 4
  %v8_10778 = inttoptr i32 %v6_10778 to i8*
  store i8* %v8_10778, i8** %stack_var_-8, align 4
  %v11_10778 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1077c

dec_label_pc_1077c:                               ; preds = %dec_label_pc_1077c.dec_label_pc_1077c_crit_edge, %dec_label_pc_10774
  %v0_107a0 = phi i32 [ %v1_107a0, %dec_label_pc_1077c.dec_label_pc_1077c_crit_edge ], [ %v0_107a018, %dec_label_pc_10774 ]
  %v0_10780 = phi i32 [ %v0_10780.pre, %dec_label_pc_1077c.dec_label_pc_1077c_crit_edge ], [ %v1_10758, %dec_label_pc_10774 ]
  %v0_1077c = phi i32 [ %v0_1077c.pre, %dec_label_pc_1077c.dec_label_pc_1077c_crit_edge ], [ %v2_1075c, %dec_label_pc_10774 ]
  %v3_1077c = mul i32 %v0_1077c, 256
  store i32 %v3_1077c, i32* %lr.global-to-local, align 4
  %v1_10780 = add i32 %v0_10780, -4
  %v2_10780 = inttoptr i32 %v1_10780 to i32*
  %v3_10780 = load i32, i32* %v2_10780, align 4
  store i32 %v3_10780, i32* @r3, align 4
  %v4_10780 = add i32 %v0_10780, -8
  %v5_10780 = inttoptr i32 %v4_10780 to i32*
  %v6_10780 = load i32, i32* %v5_10780, align 4
  store i32 %v6_10780, i32* %r4.global-to-local, align 4
  %v7_10780 = add i32 %v0_10780, -12
  %v8_10780 = inttoptr i32 %v7_10780 to i32*
  %v9_10780 = load i32, i32* %v8_10780, align 4
  store i32 %v9_10780, i32* %r5.global-to-local, align 4
  %v10_10780 = add i32 %v0_10780, -16
  %v11_10780 = inttoptr i32 %v10_10780 to i32*
  %v12_10780 = load i32, i32* %v11_10780, align 4
  store i32 %v10_10780, i32* %r1.global-to-local, align 4
  %v4_10784 = udiv i32 %v12_10780, 16777216
  %v5_10784 = or i32 %v4_10784, %v3_1077c
  store i32 %v5_10784, i32* %lr.global-to-local, align 4
  %v3_10788 = mul i32 %v12_10780, 256
  %v4_1078c = udiv i32 %v9_10780, 16777216
  %v5_1078c = or i32 %v3_10788, %v4_1078c
  store i32 %v5_1078c, i32* @ip, align 4
  %v3_10790 = mul i32 %v9_10780, 256
  %v4_10794 = udiv i32 %v6_10780, 16777216
  %v5_10794 = or i32 %v3_10790, %v4_10794
  store i32 %v5_10794, i32* %r5.global-to-local, align 4
  %v3_10798 = mul i32 %v6_10780, 256
  %v4_1079c = udiv i32 %v3_10780, 16777216
  %v5_1079c = or i32 %v3_10798, %v4_1079c
  store i32 %v5_1079c, i32* %r4.global-to-local, align 4
  %v1_107a0 = add i32 %v0_107a0, -16
  %v2_107a0 = inttoptr i32 %v1_107a0 to i32*
  store i32 %v5_1079c, i32* %v2_107a0, align 4
  %v4_107a0 = add i32 %v0_107a0, -12
  %v5_107a0 = inttoptr i32 %v4_107a0 to i32*
  %v6_107a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_107a0, i32* %v5_107a0, align 4
  %v7_107a0 = add i32 %v0_107a0, -8
  %v8_107a0 = inttoptr i32 %v7_107a0 to i32*
  %v9_107a0 = load i32, i32* @ip, align 4
  store i32 %v9_107a0, i32* %v8_107a0, align 4
  %v10_107a0 = add i32 %v0_107a0, -4
  %v11_107a0 = inttoptr i32 %v10_107a0 to i32*
  %v12_107a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_107a0, i32* %v11_107a0, align 4
  store i32 %v1_107a0, i32* %r0.global-to-local, align 4
  %v0_107a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_107a4 = add i32 %v0_107a4, -16
  store i32 %v2_107a4, i32* %r2.global-to-local, align 4
  %v6_107a8 = icmp slt i32 %v0_107a4, 16
  br i1 %v6_107a8, label %dec_label_pc_107ac, label %dec_label_pc_1077c.dec_label_pc_1077c_crit_edge

dec_label_pc_1077c.dec_label_pc_1077c_crit_edge:  ; preds = %dec_label_pc_1077c
  %v0_1077c.pre = load i32, i32* @r3, align 4
  %v0_10780.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1077c

dec_label_pc_107ac:                               ; preds = %dec_label_pc_1077c
  %v2_107ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_107ac, i32* @r4, align 4
  %v5_107ac = load i8*, i8** %stack_var_-8, align 4
  %v6_107ac = ptrtoint i8* %v5_107ac to i32
  store i32 %v6_107ac, i32* @r5, align 4
  store i32 %v11_10778, i32* @lr, align 4
  %v2_107b0 = add i32 %v0_107a4, -4
  store i32 %v2_107b0, i32* %r2.global-to-local, align 4
  %v4_107b0 = add i32 %v0_107a4, 2147483632
  %v5_107b0 = and i32 %v2_107b0, %v4_107b0
  %v6_107b0 = icmp slt i32 %v5_107b0, 0
  store i1 %v6_107b0, i1* %cpsr_v.global-to-local, align 1
  %v7_107b0 = icmp slt i32 %v2_107b0, 0
  store i1 %v7_107b0, i1* %cpsr_n.global-to-local, align 1
  %v8_107b0 = icmp eq i32 %v2_107b0, 0
  store i1 %v8_107b0, i1* %cpsr_z.global-to-local, align 1
  %v5_107b4 = icmp slt i32 %v2_107a4, -12
  br i1 %v5_107b4, label %dec_label_pc_107d0, label %dec_label_pc_107b8

dec_label_pc_107b8:                               ; preds = %dec_label_pc_107ac, %dec_label_pc_1076c, %dec_label_pc_107b8
  %v1_107c4 = phi i32 [ %v5_107c4, %dec_label_pc_107b8 ], [ %v1_107a0, %dec_label_pc_107ac ], [ %v0_107a018, %dec_label_pc_1076c ]
  %v0_107b8 = load i32, i32* @r3, align 4
  %v3_107b8 = mul i32 %v0_107b8, 256
  store i32 %v3_107b8, i32* %ip.global-to-local, align 4
  %v0_107bc = load i32, i32* %r1.global-to-local, align 4
  %v1_107bc = add i32 %v0_107bc, -4
  %v2_107bc = inttoptr i32 %v1_107bc to i32*
  %v3_107bc = load i32, i32* %v2_107bc, align 4
  store i32 %v3_107bc, i32* @r3, align 4
  store i32 %v1_107bc, i32* %r1.global-to-local, align 4
  %v4_107c0 = udiv i32 %v3_107bc, 16777216
  %v5_107c0 = or i32 %v4_107c0, %v3_107b8
  store i32 %v5_107c0, i32* @ip, align 4
  %v2_107c4 = add i32 %v1_107c4, -4
  %v3_107c4 = inttoptr i32 %v2_107c4 to i32*
  store i32 %v5_107c0, i32* %v3_107c4, align 4
  %v4_107c4 = load i32, i32* %r0.global-to-local, align 4
  %v5_107c4 = add i32 %v4_107c4, -4
  store i32 %v5_107c4, i32* %r0.global-to-local, align 4
  %v0_107c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_107c8 = add i32 %v0_107c8, -4
  store i32 %v2_107c8, i32* %r2.global-to-local, align 4
  %v6_107cc = icmp slt i32 %v0_107c8, 4
  br i1 %v6_107cc, label %dec_label_pc_107d0.loopexit, label %dec_label_pc_107b8

dec_label_pc_107d0.loopexit:                      ; preds = %dec_label_pc_107b8
  %v4_107c8 = sub i32 3, %v0_107c8
  %v5_107c8 = and i32 %v4_107c8, %v0_107c8
  %v6_107c8 = icmp slt i32 %v5_107c8, 0
  %v7_107c8 = icmp slt i32 %v2_107c8, 0
  store i1 %v6_107c8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_107c8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107d0

dec_label_pc_107d0:                               ; preds = %dec_label_pc_107d0.loopexit, %dec_label_pc_107ac
  %v2_1071450 = phi i32 [ %v5_107c4, %dec_label_pc_107d0.loopexit ], [ %v1_107a0, %dec_label_pc_107ac ]
  %v0_1070446 = phi i32 [ %v2_107c8, %dec_label_pc_107d0.loopexit ], [ %v2_107b0, %dec_label_pc_107ac ]
  %v0_107d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_107d0 = add i32 %v0_107d0, 3
  store i32 %v1_107d0, i32* @r1, align 4
  br label %bb150

dec_label_pc_107d8:                               ; preds = %dec_label_pc_10768
  br i1 %v5_10848, label %dec_label_pc_10824, label %dec_label_pc_107e0

dec_label_pc_107e0:                               ; preds = %dec_label_pc_107d8
  store i32 %v2_10844, i32* %r2.global-to-local, align 4
  %v3_107e4 = load i32, i32* @r4, align 4
  store i32 %v3_107e4, i32* %stack_var_-12, align 4
  %v6_107e4 = load i32, i32* @r5, align 4
  %v8_107e4 = inttoptr i32 %v6_107e4 to i8*
  store i8* %v8_107e4, i8** %stack_var_-8, align 4
  %v11_107e4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107e8.dec_label_pc_107e8_crit_edge, %dec_label_pc_107e0
  %v0_1080c = phi i32 [ %v1_1080c, %dec_label_pc_107e8.dec_label_pc_107e8_crit_edge ], [ %v0_107a018, %dec_label_pc_107e0 ]
  %v0_107ec = phi i32 [ %v0_107ec.pre, %dec_label_pc_107e8.dec_label_pc_107e8_crit_edge ], [ %v1_10758, %dec_label_pc_107e0 ]
  %v0_107e8 = phi i32 [ %v0_107e8.pre, %dec_label_pc_107e8.dec_label_pc_107e8_crit_edge ], [ %v2_1075c, %dec_label_pc_107e0 ]
  %v3_107e8 = mul i32 %v0_107e8, 65536
  store i32 %v3_107e8, i32* %lr.global-to-local, align 4
  %v1_107ec = add i32 %v0_107ec, -4
  %v2_107ec = inttoptr i32 %v1_107ec to i32*
  %v3_107ec = load i32, i32* %v2_107ec, align 4
  store i32 %v3_107ec, i32* @r3, align 4
  %v4_107ec = add i32 %v0_107ec, -8
  %v5_107ec = inttoptr i32 %v4_107ec to i32*
  %v6_107ec = load i32, i32* %v5_107ec, align 4
  store i32 %v6_107ec, i32* %r4.global-to-local, align 4
  %v7_107ec = add i32 %v0_107ec, -12
  %v8_107ec = inttoptr i32 %v7_107ec to i32*
  %v9_107ec = load i32, i32* %v8_107ec, align 4
  store i32 %v9_107ec, i32* %r5.global-to-local, align 4
  %v10_107ec = add i32 %v0_107ec, -16
  %v11_107ec = inttoptr i32 %v10_107ec to i32*
  %v12_107ec = load i32, i32* %v11_107ec, align 4
  store i32 %v10_107ec, i32* %r1.global-to-local, align 4
  %v4_107f0 = udiv i32 %v12_107ec, 65536
  %v5_107f0 = or i32 %v4_107f0, %v3_107e8
  store i32 %v5_107f0, i32* %lr.global-to-local, align 4
  %v3_107f4 = mul i32 %v12_107ec, 65536
  %v4_107f8 = udiv i32 %v9_107ec, 65536
  %v5_107f8 = or i32 %v3_107f4, %v4_107f8
  store i32 %v5_107f8, i32* @ip, align 4
  %v3_107fc = mul i32 %v9_107ec, 65536
  %v4_10800 = udiv i32 %v6_107ec, 65536
  %v5_10800 = or i32 %v3_107fc, %v4_10800
  store i32 %v5_10800, i32* %r5.global-to-local, align 4
  %v3_10804 = mul i32 %v6_107ec, 65536
  %v4_10808 = udiv i32 %v3_107ec, 65536
  %v5_10808 = or i32 %v3_10804, %v4_10808
  store i32 %v5_10808, i32* %r4.global-to-local, align 4
  %v1_1080c = add i32 %v0_1080c, -16
  %v2_1080c = inttoptr i32 %v1_1080c to i32*
  store i32 %v5_10808, i32* %v2_1080c, align 4
  %v4_1080c = add i32 %v0_1080c, -12
  %v5_1080c = inttoptr i32 %v4_1080c to i32*
  %v6_1080c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1080c, i32* %v5_1080c, align 4
  %v7_1080c = add i32 %v0_1080c, -8
  %v8_1080c = inttoptr i32 %v7_1080c to i32*
  %v9_1080c = load i32, i32* @ip, align 4
  store i32 %v9_1080c, i32* %v8_1080c, align 4
  %v10_1080c = add i32 %v0_1080c, -4
  %v11_1080c = inttoptr i32 %v10_1080c to i32*
  %v12_1080c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1080c, i32* %v11_1080c, align 4
  store i32 %v1_1080c, i32* %r0.global-to-local, align 4
  %v0_10810 = load i32, i32* %r2.global-to-local, align 4
  %v2_10810 = add i32 %v0_10810, -16
  store i32 %v2_10810, i32* %r2.global-to-local, align 4
  %v6_10814 = icmp slt i32 %v0_10810, 16
  br i1 %v6_10814, label %dec_label_pc_10818, label %dec_label_pc_107e8.dec_label_pc_107e8_crit_edge

dec_label_pc_107e8.dec_label_pc_107e8_crit_edge:  ; preds = %dec_label_pc_107e8
  %v0_107e8.pre = load i32, i32* @r3, align 4
  %v0_107ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_107e8

dec_label_pc_10818:                               ; preds = %dec_label_pc_107e8
  %v2_10818 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10818, i32* @r4, align 4
  %v5_10818 = load i8*, i8** %stack_var_-8, align 4
  %v6_10818 = ptrtoint i8* %v5_10818 to i32
  store i32 %v6_10818, i32* @r5, align 4
  store i32 %v11_107e4, i32* @lr, align 4
  %v2_1081c = add i32 %v0_10810, -4
  store i32 %v2_1081c, i32* %r2.global-to-local, align 4
  %v4_1081c = add i32 %v0_10810, 2147483632
  %v5_1081c = and i32 %v2_1081c, %v4_1081c
  %v6_1081c = icmp slt i32 %v5_1081c, 0
  store i1 %v6_1081c, i1* %cpsr_v.global-to-local, align 1
  %v7_1081c = icmp slt i32 %v2_1081c, 0
  store i1 %v7_1081c, i1* %cpsr_n.global-to-local, align 1
  %v8_1081c = icmp eq i32 %v2_1081c, 0
  store i1 %v8_1081c, i1* %cpsr_z.global-to-local, align 1
  %v5_10820 = icmp slt i32 %v2_10810, -12
  br i1 %v5_10820, label %dec_label_pc_1083c, label %dec_label_pc_10824

dec_label_pc_10824:                               ; preds = %dec_label_pc_10818, %dec_label_pc_107d8, %dec_label_pc_10824
  %v1_10830 = phi i32 [ %v5_10830, %dec_label_pc_10824 ], [ %v1_1080c, %dec_label_pc_10818 ], [ %v0_107a018, %dec_label_pc_107d8 ]
  %v0_10824 = load i32, i32* @r3, align 4
  %v3_10824 = mul i32 %v0_10824, 65536
  store i32 %v3_10824, i32* %ip.global-to-local, align 4
  %v0_10828 = load i32, i32* %r1.global-to-local, align 4
  %v1_10828 = add i32 %v0_10828, -4
  %v2_10828 = inttoptr i32 %v1_10828 to i32*
  %v3_10828 = load i32, i32* %v2_10828, align 4
  store i32 %v3_10828, i32* @r3, align 4
  store i32 %v1_10828, i32* %r1.global-to-local, align 4
  %v4_1082c = udiv i32 %v3_10828, 65536
  %v5_1082c = or i32 %v4_1082c, %v3_10824
  store i32 %v5_1082c, i32* @ip, align 4
  %v2_10830 = add i32 %v1_10830, -4
  %v3_10830 = inttoptr i32 %v2_10830 to i32*
  store i32 %v5_1082c, i32* %v3_10830, align 4
  %v4_10830 = load i32, i32* %r0.global-to-local, align 4
  %v5_10830 = add i32 %v4_10830, -4
  store i32 %v5_10830, i32* %r0.global-to-local, align 4
  %v0_10834 = load i32, i32* %r2.global-to-local, align 4
  %v2_10834 = add i32 %v0_10834, -4
  store i32 %v2_10834, i32* %r2.global-to-local, align 4
  %v6_10838 = icmp slt i32 %v0_10834, 4
  br i1 %v6_10838, label %dec_label_pc_1083c.loopexit, label %dec_label_pc_10824

dec_label_pc_1083c.loopexit:                      ; preds = %dec_label_pc_10824
  %v4_10834 = sub i32 3, %v0_10834
  %v5_10834 = and i32 %v4_10834, %v0_10834
  %v6_10834 = icmp slt i32 %v5_10834, 0
  %v7_10834 = icmp slt i32 %v2_10834, 0
  store i1 %v6_10834, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_10834, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1083c

dec_label_pc_1083c:                               ; preds = %dec_label_pc_1083c.loopexit, %dec_label_pc_10818
  %v2_1071451 = phi i32 [ %v5_10830, %dec_label_pc_1083c.loopexit ], [ %v1_1080c, %dec_label_pc_10818 ]
  %v0_1070447 = phi i32 [ %v2_10834, %dec_label_pc_1083c.loopexit ], [ %v2_1081c, %dec_label_pc_10818 ]
  %v0_1083c = load i32, i32* %r1.global-to-local, align 4
  %v1_1083c = add i32 %v0_1083c, 2
  store i32 %v1_1083c, i32* @r1, align 4
  br label %bb150

dec_label_pc_10844:                               ; preds = %dec_label_pc_10758
  br i1 %v5_10848, label %dec_label_pc_10890, label %dec_label_pc_1084c

dec_label_pc_1084c:                               ; preds = %dec_label_pc_10844
  store i32 %v2_10844, i32* %r2.global-to-local, align 4
  %v3_10850 = load i32, i32* @r4, align 4
  store i32 %v3_10850, i32* %stack_var_-12, align 4
  %v6_10850 = load i32, i32* @r5, align 4
  %v8_10850 = inttoptr i32 %v6_10850 to i8*
  store i8* %v8_10850, i8** %stack_var_-8, align 4
  %v11_10850 = load i32, i32* @lr, align 4
  br label %dec_label_pc_10854

dec_label_pc_10854:                               ; preds = %dec_label_pc_10854.dec_label_pc_10854_crit_edge, %dec_label_pc_1084c
  %v0_10878 = phi i32 [ %v1_10878, %dec_label_pc_10854.dec_label_pc_10854_crit_edge ], [ %v0_107a018, %dec_label_pc_1084c ]
  %v0_10858 = phi i32 [ %v0_10858.pre, %dec_label_pc_10854.dec_label_pc_10854_crit_edge ], [ %v1_10758, %dec_label_pc_1084c ]
  %v0_10854 = phi i32 [ %v0_10854.pre, %dec_label_pc_10854.dec_label_pc_10854_crit_edge ], [ %v2_1075c, %dec_label_pc_1084c ]
  %v3_10854 = mul i32 %v0_10854, 16777216
  store i32 %v3_10854, i32* %lr.global-to-local, align 4
  %v1_10858 = add i32 %v0_10858, -4
  %v2_10858 = inttoptr i32 %v1_10858 to i32*
  %v3_10858 = load i32, i32* %v2_10858, align 4
  store i32 %v3_10858, i32* @r3, align 4
  %v4_10858 = add i32 %v0_10858, -8
  %v5_10858 = inttoptr i32 %v4_10858 to i32*
  %v6_10858 = load i32, i32* %v5_10858, align 4
  store i32 %v6_10858, i32* %r4.global-to-local, align 4
  %v7_10858 = add i32 %v0_10858, -12
  %v8_10858 = inttoptr i32 %v7_10858 to i32*
  %v9_10858 = load i32, i32* %v8_10858, align 4
  store i32 %v9_10858, i32* %r5.global-to-local, align 4
  %v10_10858 = add i32 %v0_10858, -16
  %v11_10858 = inttoptr i32 %v10_10858 to i32*
  %v12_10858 = load i32, i32* %v11_10858, align 4
  store i32 %v10_10858, i32* %r1.global-to-local, align 4
  %v4_1085c = udiv i32 %v12_10858, 256
  %v5_1085c = or i32 %v4_1085c, %v3_10854
  store i32 %v5_1085c, i32* %lr.global-to-local, align 4
  %v3_10860 = mul i32 %v12_10858, 16777216
  %v4_10864 = udiv i32 %v9_10858, 256
  %v5_10864 = or i32 %v3_10860, %v4_10864
  store i32 %v5_10864, i32* @ip, align 4
  %v3_10868 = mul i32 %v9_10858, 16777216
  %v4_1086c = udiv i32 %v6_10858, 256
  %v5_1086c = or i32 %v3_10868, %v4_1086c
  store i32 %v5_1086c, i32* %r5.global-to-local, align 4
  %v3_10870 = mul i32 %v6_10858, 16777216
  %v4_10874 = udiv i32 %v3_10858, 256
  %v5_10874 = or i32 %v3_10870, %v4_10874
  store i32 %v5_10874, i32* %r4.global-to-local, align 4
  %v1_10878 = add i32 %v0_10878, -16
  %v2_10878 = inttoptr i32 %v1_10878 to i32*
  store i32 %v5_10874, i32* %v2_10878, align 4
  %v4_10878 = add i32 %v0_10878, -12
  %v5_10878 = inttoptr i32 %v4_10878 to i32*
  %v6_10878 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_10878, i32* %v5_10878, align 4
  %v7_10878 = add i32 %v0_10878, -8
  %v8_10878 = inttoptr i32 %v7_10878 to i32*
  %v9_10878 = load i32, i32* @ip, align 4
  store i32 %v9_10878, i32* %v8_10878, align 4
  %v10_10878 = add i32 %v0_10878, -4
  %v11_10878 = inttoptr i32 %v10_10878 to i32*
  %v12_10878 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_10878, i32* %v11_10878, align 4
  store i32 %v1_10878, i32* %r0.global-to-local, align 4
  %v0_1087c = load i32, i32* %r2.global-to-local, align 4
  %v2_1087c = add i32 %v0_1087c, -16
  store i32 %v2_1087c, i32* %r2.global-to-local, align 4
  %v6_10880 = icmp slt i32 %v0_1087c, 16
  br i1 %v6_10880, label %dec_label_pc_10884, label %dec_label_pc_10854.dec_label_pc_10854_crit_edge

dec_label_pc_10854.dec_label_pc_10854_crit_edge:  ; preds = %dec_label_pc_10854
  %v0_10854.pre = load i32, i32* @r3, align 4
  %v0_10858.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10854

dec_label_pc_10884:                               ; preds = %dec_label_pc_10854
  %v2_10884 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10884, i32* @r4, align 4
  %v5_10884 = load i8*, i8** %stack_var_-8, align 4
  %v6_10884 = ptrtoint i8* %v5_10884 to i32
  store i32 %v6_10884, i32* @r5, align 4
  store i32 %v11_10850, i32* @lr, align 4
  %v2_10888 = add i32 %v0_1087c, -4
  store i32 %v2_10888, i32* %r2.global-to-local, align 4
  %v4_10888 = add i32 %v0_1087c, 2147483632
  %v5_10888 = and i32 %v2_10888, %v4_10888
  %v6_10888 = icmp slt i32 %v5_10888, 0
  store i1 %v6_10888, i1* %cpsr_v.global-to-local, align 1
  %v7_10888 = icmp slt i32 %v2_10888, 0
  store i1 %v7_10888, i1* %cpsr_n.global-to-local, align 1
  %v8_10888 = icmp eq i32 %v2_10888, 0
  store i1 %v8_10888, i1* %cpsr_z.global-to-local, align 1
  %v5_1088c = icmp slt i32 %v2_1087c, -12
  br i1 %v5_1088c, label %dec_label_pc_108a8, label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %dec_label_pc_10884, %dec_label_pc_10844, %dec_label_pc_10890
  %v1_1089c = phi i32 [ %v5_1089c, %dec_label_pc_10890 ], [ %v1_10878, %dec_label_pc_10884 ], [ %v0_107a018, %dec_label_pc_10844 ]
  %v0_10890 = load i32, i32* @r3, align 4
  %v3_10890 = mul i32 %v0_10890, 16777216
  store i32 %v3_10890, i32* %ip.global-to-local, align 4
  %v0_10894 = load i32, i32* %r1.global-to-local, align 4
  %v1_10894 = add i32 %v0_10894, -4
  %v2_10894 = inttoptr i32 %v1_10894 to i32*
  %v3_10894 = load i32, i32* %v2_10894, align 4
  store i32 %v3_10894, i32* @r3, align 4
  store i32 %v1_10894, i32* %r1.global-to-local, align 4
  %v4_10898 = udiv i32 %v3_10894, 256
  %v5_10898 = or i32 %v4_10898, %v3_10890
  store i32 %v5_10898, i32* @ip, align 4
  %v2_1089c = add i32 %v1_1089c, -4
  %v3_1089c = inttoptr i32 %v2_1089c to i32*
  store i32 %v5_10898, i32* %v3_1089c, align 4
  %v4_1089c = load i32, i32* %r0.global-to-local, align 4
  %v5_1089c = add i32 %v4_1089c, -4
  store i32 %v5_1089c, i32* %r0.global-to-local, align 4
  %v0_108a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_108a0 = add i32 %v0_108a0, -4
  store i32 %v2_108a0, i32* %r2.global-to-local, align 4
  %v6_108a4 = icmp slt i32 %v0_108a0, 4
  br i1 %v6_108a4, label %dec_label_pc_108a8.loopexit, label %dec_label_pc_10890

dec_label_pc_108a8.loopexit:                      ; preds = %dec_label_pc_10890
  %v4_108a0 = sub i32 3, %v0_108a0
  %v5_108a0 = and i32 %v4_108a0, %v0_108a0
  %v6_108a0 = icmp slt i32 %v5_108a0, 0
  %v7_108a0 = icmp slt i32 %v2_108a0, 0
  store i1 %v6_108a0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_108a0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_108a8

dec_label_pc_108a8:                               ; preds = %dec_label_pc_108a8.loopexit, %dec_label_pc_10884
  %v2_1071452 = phi i32 [ %v5_1089c, %dec_label_pc_108a8.loopexit ], [ %v1_10878, %dec_label_pc_10884 ]
  %v0_1070448 = phi i32 [ %v2_108a0, %dec_label_pc_108a8.loopexit ], [ %v2_10888, %dec_label_pc_10884 ]
  %v0_108a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_108a8 = add i32 %v0_108a8, 1
  store i32 %v1_108a8, i32* @r1, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1089c, { 0, 2, 1 }
  uselistorder i32 %v3_10890, { 1, 0 }
  uselistorder i32 %v2_10888, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10878, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_10858, { 1, 0 }
  uselistorder i32 %v3_10854, { 1, 0 }
  uselistorder i32 %v0_10858, { 3, 2, 1, 0 }
  uselistorder i32 %v0_10878, { 3, 2, 1, 0 }
  uselistorder i32 %v5_10830, { 0, 2, 1 }
  uselistorder i32 %v3_10824, { 1, 0 }
  uselistorder i32 %v2_1081c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1080c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_107ec, { 1, 0 }
  uselistorder i32 %v3_107e8, { 1, 0 }
  uselistorder i32 %v0_107ec, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1080c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_107c4, { 0, 2, 1 }
  uselistorder i32 %v3_107b8, { 1, 0 }
  uselistorder i32 %v2_107b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_107a0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_10780, { 1, 0 }
  uselistorder i32 %v3_1077c, { 1, 0 }
  uselistorder i32 %v0_10780, { 3, 2, 1, 0 }
  uselistorder i32 %v0_107a0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_10848, { 2, 0, 1 }
  uselistorder i32 %v0_10760, { 1, 0 }
  uselistorder i32 %v0_1084c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_107a018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_10750, { 2, 1, 0 }
  uselistorder i32 %v0_10750, { 2, 0, 1 }
  uselistorder i32 %v2_10748, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_10748, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10748, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_107a019, { 2, 1, 0 }
  uselistorder i32 %v11_10724, { 1, 0 }
  uselistorder i32 %v7_10724, { 1, 0 }
  uselistorder i32 %v1_10704, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_10704, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10708, { 1, 0 }
  uselistorder i32 %v7_106fc, { 0, 2, 1 }
  uselistorder i32 %v10_106f8, { 1, 0 }
  uselistorder i32 %v9_106f0, { 1, 0, 2 }
  uselistorder i32 %v6_106ec, { 1, 0 }
  uselistorder i32 %v2_106e4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_106e4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_106f4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_106d8, { 0, 2, 1 }
  uselistorder i32 %v13_106d4, { 1, 0 }
  uselistorder i32 %v4_106d0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_106d0, { 2, 0, 1 }
  uselistorder i32 %v6_106d8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_106c8, { 0, 2, 1 }
  uselistorder i32 %v16_106c4, { 1, 0 }
  uselistorder i32 %v4_106c0, { 1, 2, 0 }
  uselistorder i32 %v0_106d0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_106c8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_106b4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_106b0, { 1, 0 }
  uselistorder i32 %v1_106ac, { 1, 0 }
  uselistorder i32 %v10_106a8, { 1, 0 }
  uselistorder i32 %v0_106a8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_106ac, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_106a0, { 0, 2, 1 }
  uselistorder i32 %v2_10694, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_10694, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_106ac36, { 1, 2, 0 }
  uselistorder i32 %v1_1068c, { 2, 1, 0 }
  uselistorder i32 %v1_10684, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1067c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_10678, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_10674, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_10674, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_10664, { 0, 2, 1 }
  uselistorder i32 %v4_10660, { 1, 0 }
  uselistorder i32 %v3_10654, { 1, 0 }
  uselistorder i32 %v1_1064c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10640, { 1, 0 }
  uselistorder i32 %v12_1063c, { 0, 2, 1 }
  uselistorder i32 %v8_1061c, { 1, 0, 2 }
  uselistorder i32 %v5_1061c, { 1, 0, 2 }
  uselistorder i32 %v2_1061c, { 1, 0, 2 }
  uselistorder i32 %v0_1061c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1063c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_105f8, { 0, 2, 1 }
  uselistorder i32 %v4_105f4, { 1, 0 }
  uselistorder i32 %v3_105e8, { 1, 0 }
  uselistorder i32 %v1_105e0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_105d4, { 1, 0 }
  uselistorder i32 %v12_105d0, { 0, 2, 1 }
  uselistorder i32 %v8_105b0, { 1, 0, 2 }
  uselistorder i32 %v5_105b0, { 1, 0, 2 }
  uselistorder i32 %v2_105b0, { 1, 0, 2 }
  uselistorder i32 %v0_105b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_105d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1058c, { 0, 2, 1 }
  uselistorder i32 %v4_10588, { 1, 0 }
  uselistorder i32 %v3_1057c, { 1, 0 }
  uselistorder i32 %v1_10574, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10568, { 1, 0 }
  uselistorder i32 %v12_10564, { 0, 2, 1 }
  uselistorder i32 %v8_10544, { 1, 0, 2 }
  uselistorder i32 %v5_10544, { 1, 0, 2 }
  uselistorder i32 %v2_10544, { 1, 0, 2 }
  uselistorder i32 %v0_10544, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10564, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_105a0, { 0, 2, 1 }
  uselistorder i32 %v1_1059c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_10520, { 2, 0, 1, 3 }
  uselistorder i32 %v2_10520, { 2, 0, 1, 3 }
  uselistorder i32 %v0_105a4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1063c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_10514, { 1, 0 }
  uselistorder i32 %v0_10514, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1050c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1050c, { 1, 0, 2 }
  uselistorder i32 %v0_1050c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1063c76, { 1, 0 }
  uselistorder i32 %v1_104ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_104f4, { 1, 0 }
  uselistorder i32 %v0_104c8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_104bc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_104a8, { 1, 0, 2 }
  uselistorder i32 %v1_104a4, { 1, 0 }
  uselistorder i32 %v1_1049c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1049c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10494, { 0, 2, 1 }
  uselistorder i32 %v3_10494, { 3, 0, 1, 2 }
  uselistorder i1 %v0_10494, { 1, 0 }
  uselistorder i1 %v1_10494, { 1, 0 }
  uselistorder i32 %v3_10490, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_10488, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_10474, { 1, 2, 0 }
  uselistorder i32 %v1_1046c, { 0, 2, 1 }
  uselistorder i32 %v12_10468, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1045c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10460, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_10450, { 0, 2, 1 }
  uselistorder i32 %v1_10448, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10448, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_10440, { 1, 0 }
  uselistorder i32 %v1_10438, { 2, 1, 0 }
  uselistorder i32 %v2_10430, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_10430, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1042c, { 1, 0 }
  uselistorder i32 %v2_10420, { 1, 0 }
  uselistorder i32 %v1_10420, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_10420, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 35, 67, 36, 37, 38, 39, 40, 68, 41, 42, 43, 44, 45, 69, 46, 47, 48, 49, 50, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 20, 18, 30, 19, 21, 23, 22, 31, 24, 25, 28, 26, 32, 27, 29, 33, 34, 37, 35, 38, 36, 39, 40, 41, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 24, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 11, 12, 27, 13, 15, 14, 16, 17, 28, 18, 19, 29, 20, 21, 22, 23, 30, 31, 39, 32, 33, 40, 34, 35, 41, 36, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 5, 2, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 43, 17, 18, 19, 20, 21, 47, 22, 45, 23, 46, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 4, 2, 6, 3, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 41, 18, 19, 20, 44, 21, 0, 22, 43, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 4, 2, 6, 3, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 47, 19, 20, 21, 22, 23, 50, 24, 0, 25, 49, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10890, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10824, { 2, 0, 1 }
  uselistorder label %dec_label_pc_107b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10758, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_106e4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_106a8, { 1, 0 }
  uselistorder label %dec_label_pc_10694, { 1, 0 }
  uselistorder label %dec_label_pc_10654, { 2, 0, 1 }
  uselistorder label %dec_label_pc_105e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1057c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1051c, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_104ec, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_10488, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_10448, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_108b4 = urem i32 %arg1, 256
  %v0_108d42 = load i32, i32* @r0, align 4
  %v1_108d43 = urem i32 %v0_108d42, 4
  %v2_108d44 = icmp eq i32 %v1_108d43, 0
  br i1 %v2_108d44, label %dec_label_pc_108dc, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %entry, %dec_label_pc_108d0
  %v0_108d0 = phi i32 [ %v1_108d0, %dec_label_pc_108d0 ], [ %v0_108d42, %entry ]
  %v1_108bc = inttoptr i32 %v0_108d0 to i8*
  %v2_108bc = load i8, i8* %v1_108bc, align 1
  %v3_108bc = zext i8 %v2_108bc to i32
  %v9_108c0 = icmp eq i32 %v3_108bc, %v1_108b4
  br i1 %v9_108c0, label %dec_label_pc_1098c, label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108bc
  %v2_108c8 = icmp eq i8 %v2_108bc, 0
  br i1 %v2_108c8, label %dec_label_pc_1098c, label %dec_label_pc_108d0

dec_label_pc_108d0:                               ; preds = %dec_label_pc_108c8
  %v1_108d0 = add i32 %v0_108d0, 1
  %v1_108d4 = urem i32 %v1_108d0, 4
  %v2_108d4 = icmp eq i32 %v1_108d4, 0
  br i1 %v2_108d4, label %dec_label_pc_108dc, label %dec_label_pc_108bc

dec_label_pc_108dc:                               ; preds = %dec_label_pc_108d0, %entry
  %v0_108e0 = phi i32 [ %v0_108d42, %entry ], [ %v1_108d0, %dec_label_pc_108d0 ]
  %v4_108dc = mul nuw nsw i32 %v1_108b4, 256
  %v5_108dc = or i32 %v4_108dc, %v1_108b4
  %v4_108e4 = mul i32 %v5_108dc, 65536
  %v5_108e4 = or i32 %v4_108e4, %v5_108dc
  br label %dec_label_pc_108e8

dec_label_pc_108e8:                               ; preds = %dec_label_pc_10984, %dec_label_pc_10924, %dec_label_pc_108dc
  %v0_1094c = phi i32 [ %v0_108e0, %dec_label_pc_108dc ], [ %v4_108e8, %dec_label_pc_10924 ], [ %v4_108e8, %dec_label_pc_10984 ]
  %v1_108e8 = inttoptr i32 %v0_1094c to i32*
  %v2_108e8 = load i32, i32* %v1_108e8, align 4
  %v4_108e8 = add i32 %v0_1094c, 4
  %v2_108f0 = xor i32 %v2_108e8, %v5_108e4
  %v2_108f4 = add i32 %v2_108f0, 2130640639
  store i32 %v2_108f4, i32* @ip, align 4
  %v2_108fc = add i32 %v2_108e8, 2130640639
  %v1_10900 = sub i32 -1, %v2_108e8
  %v2_10904 = xor i32 %v2_108fc, %v1_10900
  %v2_10910 = and i32 %v2_10904, -2130640640
  store i32 %v2_10910, i32* @r1, align 4
  %v2_10918 = icmp eq i32 %v2_10910, 0
  br i1 %v2_10918, label %dec_label_pc_10924, label %dec_label_pc_1092c

dec_label_pc_10924:                               ; preds = %dec_label_pc_108e8
  %v1_1090c = sub i32 -1, %v2_108f0
  %v2_10914 = xor i32 %v2_108f4, %v1_1090c
  %v2_1091c = and i32 %v2_10914, -2130640640
  %v2_10924 = icmp eq i32 %v2_1091c, 0
  br i1 %v2_10924, label %dec_label_pc_108e8, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_108e8, %dec_label_pc_10924
  %v2_1092c = inttoptr i32 %v0_1094c to i8*
  %v3_1092c = load i8, i8* %v2_1092c, align 1
  %v4_1092c = zext i8 %v3_1092c to i32
  %v9_10930 = icmp eq i32 %v4_1092c, %v1_108b4
  br i1 %v9_10930, label %dec_label_pc_1098c, label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %dec_label_pc_1092c
  %v2_1093c = icmp eq i8 %v3_1092c, 0
  br i1 %v2_1093c, label %dec_label_pc_1098c, label %dec_label_pc_10944

dec_label_pc_10944:                               ; preds = %dec_label_pc_1093c
  %v1_10944 = add i32 %v0_1094c, 1
  %v2_10944 = inttoptr i32 %v1_10944 to i8*
  %v3_10944 = load i8, i8* %v2_10944, align 1
  %v4_10944 = zext i8 %v3_10944 to i32
  %v9_10948 = icmp eq i32 %v4_10944, %v1_108b4
  br i1 %v9_10948, label %dec_label_pc_1098c, label %dec_label_pc_10954

dec_label_pc_10954:                               ; preds = %dec_label_pc_10944
  %v2_10954 = icmp eq i8 %v3_10944, 0
  br i1 %v2_10954, label %dec_label_pc_1098c, label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_10954
  %v1_1095c = add i32 %v0_1094c, 2
  %v2_1095c = inttoptr i32 %v1_1095c to i8*
  %v3_1095c = load i8, i8* %v2_1095c, align 1
  %v4_1095c = zext i8 %v3_1095c to i32
  %v9_10960 = icmp eq i32 %v4_1095c, %v1_108b4
  br i1 %v9_10960, label %dec_label_pc_1098c, label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %dec_label_pc_1095c
  %v2_1096c = icmp eq i8 %v3_1095c, 0
  br i1 %v2_1096c, label %dec_label_pc_1098c, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1096c
  %v1_10974 = add i32 %v0_1094c, 3
  %v2_10974 = inttoptr i32 %v1_10974 to i8*
  %v3_10974 = load i8, i8* %v2_10974, align 1
  %v4_10974 = zext i8 %v3_10974 to i32
  %v9_10978 = icmp eq i32 %v4_10974, %v1_108b4
  br i1 %v9_10978, label %dec_label_pc_1098c, label %dec_label_pc_10984

dec_label_pc_10984:                               ; preds = %dec_label_pc_10974
  %v2_10984 = icmp eq i8 %v3_10974, 0
  br i1 %v2_10984, label %dec_label_pc_1098c, label %dec_label_pc_108e8

dec_label_pc_1098c:                               ; preds = %dec_label_pc_108c8, %dec_label_pc_108bc, %dec_label_pc_10984, %dec_label_pc_10974, %dec_label_pc_1096c, %dec_label_pc_1095c, %dec_label_pc_10954, %dec_label_pc_10944, %dec_label_pc_1093c, %dec_label_pc_1092c
  %v1_10990 = phi i32 [ %v1_10974, %dec_label_pc_10984 ], [ %v1_10974, %dec_label_pc_10974 ], [ %v1_1095c, %dec_label_pc_1096c ], [ %v1_1095c, %dec_label_pc_1095c ], [ %v1_10944, %dec_label_pc_10954 ], [ %v1_10944, %dec_label_pc_10944 ], [ %v0_1094c, %dec_label_pc_1093c ], [ %v0_1094c, %dec_label_pc_1092c ], [ %v0_108d0, %dec_label_pc_108bc ], [ %v0_108d0, %dec_label_pc_108c8 ]
  ret i32 %v1_10990

; uselistorder directives
  uselistorder i32 %v4_108e8, { 1, 0 }
  uselistorder i32 %v2_108e8, { 0, 2, 1 }
  uselistorder i32 %v0_1094c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_108dc, { 1, 0 }
  uselistorder i32 %v1_108d0, { 1, 0, 2 }
  uselistorder i32 %v0_108d42, { 2, 1, 0 }
  uselistorder i32 %v1_108b4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1098c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1092c, { 1, 0 }
  uselistorder label %dec_label_pc_108bc, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1099c = load i32, i32* @r4, align 4
  store i32 %v3_1099c, i32* %stack_var_-16, align 4
  %v6_1099c = load i32, i32* @r5, align 4
  %v9_1099c = load i32, i32* @r6, align 4
  %v0_109a0 = load i32, i32* @r0, align 4
  %v0_109a4 = load i32, i32* @r1, align 4
  store i32 %v0_109a4, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_109c08 = inttoptr i32 %v0_109a0 to i8*
  %v2_109c09 = load i8, i8* %v1_109c08, align 1
  %v3_109c010 = zext i8 %v2_109c09 to i32
  store i32 %v3_109c010, i32* @r1, align 4
  %v2_109c411 = icmp eq i8 %v2_109c09, 0
  store i32 %v0_109a4, i32* @r0, align 4
  %v1_109cc12 = add i32 %v0_109a0, 1
  store i32 %v1_109cc12, i32* @r4, align 4
  br i1 %v2_109c411, label %dec_label_pc_109d4, label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %entry, %dec_label_pc_109bc
  %v3_109c014 = phi i32 [ %v3_109c0, %dec_label_pc_109bc ], [ %v3_109c010, %entry ]
  %v0_109c813 = phi i32 [ %v0_109c8.pre, %dec_label_pc_109bc ], [ %v0_109a4, %entry ]
  %v2_109b0 = call i32 @__GI_strchr(i32 %v0_109c813, i32 %v3_109c014)
  %v2_109b4 = icmp eq i32 %v2_109b0, 0
  %v0_109bc = load i32, i32* @r5, align 4
  br i1 %v2_109b4, label %dec_label_pc_109bc, label %dec_label_pc_109d4

dec_label_pc_109bc:                               ; preds = %dec_label_pc_109b0
  %v1_109bc = add i32 %v0_109bc, 1
  %v0_109c0.pre = load i32, i32* @r4, align 4
  %v0_109c8.pre = load i32, i32* @r6, align 4
  store i32 %v1_109bc, i32* @r5, align 4
  %v1_109c0 = inttoptr i32 %v0_109c0.pre to i8*
  %v2_109c0 = load i8, i8* %v1_109c0, align 1
  %v3_109c0 = zext i8 %v2_109c0 to i32
  store i32 %v3_109c0, i32* @r1, align 4
  %v2_109c4 = icmp eq i8 %v2_109c0, 0
  store i32 %v0_109c8.pre, i32* @r0, align 4
  %v1_109cc = add i32 %v0_109c0.pre, 1
  store i32 %v1_109cc, i32* @r4, align 4
  br i1 %v2_109c4, label %dec_label_pc_109d4, label %dec_label_pc_109b0

dec_label_pc_109d4:                               ; preds = %dec_label_pc_109bc, %dec_label_pc_109b0, %entry
  %v0_109d4 = phi i32 [ 0, %entry ], [ %v0_109bc, %dec_label_pc_109b0 ], [ %v1_109bc, %dec_label_pc_109bc ]
  %v2_109d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_109d8, i32* @r4, align 4
  store i32 %v6_1099c, i32* @r5, align 4
  store i32 %v9_1099c, i32* @r6, align 4
  ret i32 %v0_109d4

; uselistorder directives
  uselistorder i32 %v3_109c0, { 1, 0 }
  uselistorder i32 %v0_109c8.pre, { 1, 0 }
  uselistorder i32 %v0_109c0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_109b0, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_109e4 = urem i32 %arg2, 256
  store i32 %v1_109e4, i32* @r4, align 4
  %v2_109e4 = icmp eq i32 %v1_109e4, 0
  br i1 %v2_109e4, label %dec_label_pc_109f8, label %dec_label_pc_10a0c.preheader

dec_label_pc_10a0c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_10a143 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_109e4)
  %v2_10a185 = icmp eq i32 %v2_10a143, 0
  br i1 %v2_10a185, label %dec_label_pc_10a20, label %dec_label_pc_10a04

dec_label_pc_109f8:                               ; preds = %entry
  %v2_109fc = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_10a24

dec_label_pc_10a04:                               ; preds = %dec_label_pc_10a0c.preheader, %dec_label_pc_10a04
  %v2_10a146 = phi i32 [ %v2_10a14, %dec_label_pc_10a04 ], [ %v2_10a143, %dec_label_pc_10a0c.preheader ]
  store i32 %v2_10a146, i32* @r5, align 4
  %v1_10a08 = add i32 %v2_10a146, 1
  store i32 %v1_10a08, i32* @r0, align 4
  %v0_10a10 = load i32, i32* @r4, align 4
  %v2_10a14 = call i32 @__GI_strchr(i32 %v1_10a08, i32 %v0_10a10)
  %v2_10a18 = icmp eq i32 %v2_10a14, 0
  br i1 %v2_10a18, label %dec_label_pc_10a20, label %dec_label_pc_10a04

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10a04, %dec_label_pc_10a0c.preheader
  %v0_10a20 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_109f8, %dec_label_pc_10a20
  %storemerge = phi i32 [ %v2_109fc, %dec_label_pc_109f8 ], [ %v0_10a20, %dec_label_pc_10a20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10a14, { 1, 0 }
  uselistorder i32 %v1_10a08, { 1, 0 }
  uselistorder i32 %v1_109e4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10a24, { 1, 0 }
  uselistorder label %dec_label_pc_10a04, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_10a602 = load i32, i32* @r0, align 4
  %v1_10a603 = inttoptr i32 %v0_10a602 to i8*
  %v2_10a604 = load i8, i8* %v1_10a603, align 1
  %v3_10a605 = zext i8 %v2_10a604 to i32
  store i32 %v3_10a605, i32* @ip, align 4
  %v2_10a646 = icmp eq i8 %v2_10a604, 0
  br i1 %v2_10a646, label %dec_label_pc_10a70, label %dec_label_pc_10a44.preheader

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_10a44
  %v3_10a44 = zext i8 %v2_10a44 to i32
  %v1_10a4c = add i32 %v0_10a4c, 1
  %v9_10a3c = icmp eq i32 %v0_10a3c10, %v3_10a44
  br i1 %v9_10a3c, label %dec_label_pc_10a58, label %dec_label_pc_10a44

dec_label_pc_10a44:                               ; preds = %dec_label_pc_10a44.preheader, %dec_label_pc_10a3c
  %v0_10a4c = phi i32 [ %tmp, %dec_label_pc_10a44.preheader ], [ %v1_10a4c, %dec_label_pc_10a3c ]
  %v1_10a44 = inttoptr i32 %v0_10a4c to i8*
  %v2_10a44 = load i8, i8* %v1_10a44, align 1
  %v2_10a48 = icmp eq i8 %v2_10a44, 0
  br i1 %v2_10a48, label %dec_label_pc_10a70, label %dec_label_pc_10a3c

dec_label_pc_10a58:                               ; preds = %dec_label_pc_10a3c
  %v1_10a58 = add i32 %v0_10a58, 1
  %v1_10a5c = add i32 %v0_10a5c, 1
  %v1_10a60 = inttoptr i32 %v1_10a5c to i8*
  %v2_10a60 = load i8, i8* %v1_10a60, align 1
  %v3_10a60 = zext i8 %v2_10a60 to i32
  store i32 %v3_10a60, i32* @ip, align 4
  %v2_10a64 = icmp eq i8 %v2_10a60, 0
  br i1 %v2_10a64, label %dec_label_pc_10a70, label %dec_label_pc_10a44.preheader

dec_label_pc_10a44.preheader:                     ; preds = %entry, %dec_label_pc_10a58
  %v0_10a5c = phi i32 [ %v1_10a5c, %dec_label_pc_10a58 ], [ %v0_10a602, %entry ]
  %v0_10a58 = phi i32 [ %v1_10a58, %dec_label_pc_10a58 ], [ 0, %entry ]
  %v0_10a3c10 = phi i32 [ %v3_10a60, %dec_label_pc_10a58 ], [ %v3_10a605, %entry ]
  br label %dec_label_pc_10a44

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a58, %dec_label_pc_10a44, %entry
  %v0_10a70 = phi i32 [ 0, %entry ], [ %v0_10a58, %dec_label_pc_10a44 ], [ %v1_10a58, %dec_label_pc_10a58 ]
  ret i32 %v0_10a70

; uselistorder directives
  uselistorder i32 %v0_10a4c, { 1, 0 }
  uselistorder label %dec_label_pc_10a44.preheader, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10a7c = load i32, i32* @r4, align 4
  store i32 %v3_10a7c, i32* %stack_var_-16, align 4
  %v0_10a80 = load i32, i32* @r0, align 4
  store i32 %v0_10a80, i32* %r4.global-to-local, align 4
  %v2_10a80 = icmp eq i32 %v0_10a80, 0
  %v1_10a84 = load i32, i32* @r2, align 4
  br i1 %v2_10a80, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_10a84 = inttoptr i32 %v1_10a84 to i32*
  %v3_10a84 = load i32, i32* %v2_10a84, align 4
  store i32 %v3_10a84, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_10a88 = phi i32 [ %v3_10a84, %bb ], [ %v0_10a80, %entry ]
  store i32 %v0_10a88, i32* @r0, align 4
  store i32 %v1_10a84, i32* %r5.global-to-local, align 4
  %v0_10a90 = load i32, i32* @r1, align 4
  store i32 %v0_10a90, i32* %r6.global-to-local, align 4
  %v1_10a94 = inttoptr i32 %v0_10a88 to i8*
  %v2_10a94 = call i32 @__GI_strspn(i8* %v1_10a94)
  %v0_10a98 = load i32, i32* %r4.global-to-local, align 4
  %v2_10a98 = add i32 %v0_10a98, %v2_10a94
  %v3_10a98 = inttoptr i32 %v2_10a98 to i8*
  %v4_10a98 = load i8, i8* %v3_10a98, align 1
  %v6_10a98 = zext i8 %v4_10a98 to i32
  store i32 %v6_10a98, i32* %r3.global-to-local, align 4
  store i32 %v2_10a98, i32* @r4, align 4
  %v2_10aa0 = icmp eq i8 %v4_10a98, 0
  br i1 %v2_10aa0, label %bb8, label %dec_label_pc_10aac

bb8:                                              ; preds = %entry._crit_edge
  %v2_10aa4 = load i32, i32* %r5.global-to-local, align 4
  %v3_10aa4 = inttoptr i32 %v2_10aa4 to i32*
  store i32 %v2_10a98, i32* %v3_10aa4, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10aac:                               ; preds = %entry._crit_edge
  %v0_10aac = load i32, i32* %r6.global-to-local, align 4
  %v3_10ab4 = call i32 @__GI_strpbrk(i8* %v3_10a98, i32 %v0_10aac)
  %v3_10ab8 = icmp eq i32 %v3_10ab4, 0
  br i1 %v3_10ab8, label %dec_label_pc_10ac0, label %dec_label_pc_10ad8

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_10aac
  %v0_10ac4 = load i32, i32* @r4, align 4
  store i32 %v0_10ac4, i32* @r0, align 4
  %v2_10ac8 = call i32 @rawmemchr(i32 %v0_10ac4, i32 0)
  %v0_10acc = load i32, i32* @r4, align 4
  store i32 %v0_10acc, i32* %r3.global-to-local, align 4
  %v1_10ad0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10ad0 = inttoptr i32 %v1_10ad0 to i32*
  store i32 %v2_10ac8, i32* %v2_10ad0, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10ad8:                               ; preds = %dec_label_pc_10aac
  %v4_10ab4 = inttoptr i32 %v3_10ab4 to i8*
  store i8 0, i8* %v4_10ab4, align 1
  %v7_10adc = add i32 %v3_10ab4, 1
  %v1_10ae0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10ae0 = inttoptr i32 %v1_10ae0 to i32*
  store i32 %v7_10adc, i32* %v2_10ae0, align 4
  %v0_10ae4 = load i32, i32* @r4, align 4
  store i32 %v0_10ae4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %bb8, %dec_label_pc_10ac0, %dec_label_pc_10ad8
  %v0_10ae8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10aec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10aec, i32* @r4, align 4
  ret i32 %v0_10ae8

; uselistorder directives
  uselistorder i32 %v3_10ab4, { 0, 2, 1 }
  uselistorder i32 %v0_10a88, { 1, 0 }
  uselistorder i32 %v0_10a80, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10ae8, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b20

dec_label_pc_10afc:                               ; preds = %dec_label_pc_10b0c
  %v3_10b0c = zext i8 %v2_10b0c to i32
  %v1_10b14 = add i32 %v0_10b14, 1
  %v1_10afc = load i32, i32* %r0.global-to-local, align 4
  %v9_10afc = icmp eq i32 %v3_10b0c, %v1_10afc
  br i1 %v9_10afc, label %dec_label_pc_10b04, label %dec_label_pc_10b0c

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10afc
  %v0_10b04 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10b04, i32* %r0.global-to-local, align 4
  ret i32 %v0_10b04

dec_label_pc_10b0c:                               ; preds = %dec_label_pc_10afc, %dec_label_pc_10b20
  %v0_10b14 = phi i32 [ %v1_10b14, %dec_label_pc_10afc ], [ %arg2, %dec_label_pc_10b20 ]
  %v1_10b0c = inttoptr i32 %v0_10b14 to i8*
  %v2_10b0c = load i8, i8* %v1_10b0c, align 1
  %v2_10b10 = icmp eq i8 %v2_10b0c, 0
  br i1 %v2_10b10, label %dec_label_pc_10b1c, label %dec_label_pc_10afc

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10b0c
  %v0_10b1c = load i32, i32* %r2.global-to-local, align 4
  %v1_10b1c = add i32 %v0_10b1c, 1
  br label %dec_label_pc_10b20

dec_label_pc_10b20:                               ; preds = %entry, %dec_label_pc_10b1c
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_10b1c, %dec_label_pc_10b1c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_10b20 = inttoptr i32 %storemerge to i8*
  %v2_10b20 = load i8, i8* %v1_10b20, align 1
  %v3_10b20 = zext i8 %v2_10b20 to i32
  store i32 %v3_10b20, i32* %r0.global-to-local, align 4
  %v2_10b24 = icmp eq i8 %v2_10b20, 0
  %v0_10b28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10b24, i32 %v0_10b28)
  br label %dec_label_pc_10b0c

; uselistorder directives
  uselistorder i32 %v0_10b14, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10b20, { 1, 0 }
  uselistorder label %dec_label_pc_10b0c, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_10b3c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10b3c, i32* @r1, align 4
  %v0_10b40 = call i32 @__GI_tcgetattr()
  %v1_10b44 = sub i32 1, %v0_10b40
  %v2_10b44 = icmp ult i32 %v0_10b40, 2
  br i1 %v2_10b44, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_10b54 = phi i32 [ %v1_10b44, %entry ], [ 0, %bb ]
  ret i32 %v1_10b54

; uselistorder directives
  uselistorder i32 %v0_10b40, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_10b58 = load i32, i32* @r4, align 4
  %v6_10b58 = load i32, i32* @r5, align 4
  %v9_10b58 = load i32, i32* @r6, align 4
  %v2_10b60 = ptrtoint i32* %stack_var_-52 to i32
  %v0_10b64 = load i32, i32* @r1, align 4
  store i32 %v0_10b64, i32* @r4, align 4
  store i32 %v2_10b60, i32* @r2, align 4
  store i32 21505, i32* @r1, align 4
  %v0_10b70 = call i32 @ioctl()
  store i32 %v0_10b70, i32* %r0.global-to-local, align 4
  store i32 %v0_10b70, i32* @r5, align 4
  %v2_10b74 = icmp eq i32 %v0_10b70, 0
  br i1 %v2_10b74, label %dec_label_pc_10b7c, label %dec_label_pc_10bc0

dec_label_pc_10b7c:                               ; preds = %entry
  %v4_10b88 = zext i8 %tmp to i32
  store i32 %v4_10b88, i32* @ip, align 4
  %v3_10b8c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10b8c, i32* @r3, align 4
  %v1_10b90 = load i32, i32* @r4, align 4
  %v2_10b90 = add i32 %v1_10b90, 4
  %v3_10b90 = inttoptr i32 %v2_10b90 to i32*
  %v0_10b94 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b94 = load i32, i32* @r4, align 4
  %v2_10b94 = add i32 %v1_10b94, 8
  %v3_10b94 = inttoptr i32 %v2_10b94 to i32*
  store i32 %v0_10b94, i32* %v3_10b94, align 4
  %v0_10b98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10b98 = load i32, i32* @r4, align 4
  %v2_10b98 = add i32 %v1_10b98, 12
  %v3_10b98 = inttoptr i32 %v2_10b98 to i32*
  store i32 %v0_10b98, i32* %v3_10b98, align 4
  %v2_10b9c = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_10b9c, i32* @r1, align 4
  %v1_10ba4 = load i32, i32* @r4, align 4
  %v2_10ba4 = inttoptr i32 %v1_10ba4 to i32*
  store i32 %v3_10b8c, i32* %v2_10ba4, align 4
  %v0_10ba8 = load i32, i32* @ip, align 4
  %v1_10ba8 = trunc i32 %v0_10ba8 to i8
  %v2_10ba8 = load i32, i32* @r4, align 4
  %v3_10ba8 = add i32 %v2_10ba8, 16
  %v4_10ba8 = inttoptr i32 %v3_10ba8 to i8*
  store i8 %v1_10ba8, i8* %v4_10ba8, align 1
  %v0_10bac = load i32, i32* @r4, align 4
  %v1_10bac = add i32 %v0_10bac, 17
  store i32 %v1_10bac, i32* %r0.global-to-local, align 4
  %v4_10bb0 = call i32 @__GI_mempcpy(i32 %v1_10bac, i32 %v2_10b9c, i32 19, i32 %v3_10b8c)
  store i32 %v4_10bb0, i32* %r0.global-to-local, align 4
  %v0_10bb4 = load i32, i32* @r5, align 4
  store i32 %v0_10bb4, i32* %r1.global-to-local, align 4
  %v3_10bbc = inttoptr i32 %v4_10bb0 to i8*
  %v4_10bbc = call i32 @__GI_memset(i8* %v3_10bbc, i32 %v0_10bb4, i32 13)
  store i32 %v4_10bbc, i32* %r0.global-to-local, align 4
  %v0_10bc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10bc0

dec_label_pc_10bc0:                               ; preds = %entry, %dec_label_pc_10b7c
  %v0_10bc0 = phi i32 [ %v0_10b70, %entry ], [ %v0_10bc0.pre, %dec_label_pc_10b7c ]
  store i32 %v0_10bc0, i32* %r0.global-to-local, align 4
  store i32 %v3_10b58, i32* @r4, align 4
  store i32 %v6_10b58, i32* @r5, align 4
  store i32 %v9_10b58, i32* @r6, align 4
  ret i32 %v0_10bc0

; uselistorder directives
  uselistorder i32 %v0_10bc0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_10bc0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_10bd4 = load i32, i32* @r4, align 4
  store i32 %v3_10bd4, i32* %stack_var_-28, align 4
  %v0_10bdc = load i32, i32* %r0.global-to-local, align 4
  %v2_10bdc = icmp eq i32 %v0_10bdc, 0
  br i1 %v2_10bdc, label %dec_label_pc_10cb8, label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %entry
  br label %dec_label_pc_10c04

dec_label_pc_10c04:                               ; preds = %dec_label_pc_10bec, %dec_label_pc_10c7c
  %v1_10c7c = phi i32 [ 0, %dec_label_pc_10bec ], [ %v5_10c7c, %dec_label_pc_10c7c ]
  %v0_10c80 = phi i32 [ 1, %dec_label_pc_10bec ], [ %v1_10c80, %dec_label_pc_10c7c ]
  %v0_10c04 = phi i32 [ %v0_10bdc, %dec_label_pc_10bec ], [ %v0_10c0412, %dec_label_pc_10c7c ]
  %v1_10c04 = inttoptr i32 %v0_10c04 to i8*
  %v2_10c04 = load i8, i8* %v1_10c04, align 1
  %v3_10c04 = zext i8 %v2_10c04 to i32
  %v4_10c08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 196) to i32*), align 4
  %v2_10c0c = mul nuw nsw i32 %v3_10c04, 2
  %v2_10c10 = add i32 %v2_10c0c, %v4_10c08
  %v3_10c10 = inttoptr i32 %v2_10c10 to i16*
  %v4_10c10 = load i16, i16* %v3_10c10, align 2
  %v1_10c14 = and i16 %v4_10c10, 8
  %v2_10c14 = icmp eq i16 %v1_10c14, 0
  br i1 %v2_10c14, label %dec_label_pc_10cb8, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10c04
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10c3c

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c3c
  %v2_10c24 = mul i32 %v0_10c7c, 10
  %v1_10c28 = add i32 %v2_10c24, -48
  %v2_10c2c = add i32 %v3_10c3c, %v1_10c28
  store i32 %v2_10c2c, i32* @ip, align 4
  %v8_10c34 = icmp sgt i32 %v2_10c2c, 255
  br i1 %v8_10c34, label %dec_label_pc_10cb8, label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c24
  %v1_10c38 = add i32 %v0_10c6c, 1
  store i32 %v1_10c38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c3c

dec_label_pc_10c3c:                               ; preds = %dec_label_pc_10c1c, %dec_label_pc_10c38
  %v0_10c7c = phi i32 [ 0, %dec_label_pc_10c1c ], [ %v2_10c2c, %dec_label_pc_10c38 ]
  %v0_10c6c = phi i32 [ %v0_10c04, %dec_label_pc_10c1c ], [ %v1_10c38, %dec_label_pc_10c38 ]
  %v1_10c3c = inttoptr i32 %v0_10c6c to i8*
  %v2_10c3c = load i8, i8* %v1_10c3c, align 1
  %v3_10c3c = zext i8 %v2_10c3c to i32
  %v2_10c40 = mul nuw nsw i32 %v3_10c3c, 2
  %v2_10c44 = add i32 %v2_10c40, %v4_10c08
  %v3_10c44 = inttoptr i32 %v2_10c44 to i16*
  %v4_10c44 = load i16, i16* %v3_10c44, align 2
  %v6_10c44 = zext i16 %v4_10c44 to i32
  %v1_10c48 = and i32 %v6_10c44, 8
  %v2_10c48 = icmp eq i32 %v1_10c48, 0
  br i1 %v2_10c48, label %dec_label_pc_10c50, label %dec_label_pc_10c24

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c3c
  %v7_10c50 = icmp eq i32 %v0_10c80, 4
  br i1 %v7_10c50, label %dec_label_pc_10c68, label %dec_label_pc_10c58

dec_label_pc_10c58:                               ; preds = %dec_label_pc_10c50
  %v7_10c58 = icmp eq i8 %v2_10c3c, 46
  br i1 %v7_10c58, label %dec_label_pc_10c60, label %dec_label_pc_10cb8

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c58
  %v1_10c60 = add i32 %v0_10c6c, 1
  store i32 %v1_10c60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c7c

dec_label_pc_10c68:                               ; preds = %dec_label_pc_10c50
  %v2_10c68 = icmp eq i8 %v2_10c3c, 0
  %v1_10c6c = add i32 %v0_10c6c, 1
  store i32 %v1_10c6c, i32* %r0.global-to-local, align 4
  br i1 %v2_10c68, label %dec_label_pc_10c7c, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c68
  %v1_10c74 = and i32 %v6_10c44, 32
  %v2_10c74 = icmp eq i32 %v1_10c74, 0
  br i1 %v2_10c74, label %dec_label_pc_10cb8, label %dec_label_pc_10c7c

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c74, %dec_label_pc_10c68, %dec_label_pc_10c60
  %v0_10c0412 = phi i32 [ %v1_10c6c, %dec_label_pc_10c74 ], [ %v1_10c6c, %dec_label_pc_10c68 ], [ %v1_10c60, %dec_label_pc_10c60 ]
  %v4_10c7c = mul i32 %v1_10c7c, 256
  %v5_10c7c = or i32 %v0_10c7c, %v4_10c7c
  %v1_10c80 = add nuw nsw i32 %v0_10c80, 1
  %v7_10c88 = icmp slt i32 %v1_10c80, 5
  br i1 %v7_10c88, label %dec_label_pc_10c04, label %dec_label_pc_10c8c

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10c7c
  %v2_10c8c = icmp eq i32 %arg2, 0
  br i1 %v2_10c8c, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_10c8c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cbc

bb:                                               ; preds = %dec_label_pc_10c8c
  %v4_10c90 = udiv i32 %v5_10c7c, 16777216
  %v2_10c94 = udiv i32 %v5_10c7c, 256
  %v5_10c98 = and i32 %v2_10c94, 65280
  %v2_10c9c = and i32 %v5_10c7c, 65280
  %v5_10ca0 = mul nuw nsw i32 %v2_10c9c, 256
  %v5_10ca4 = mul i32 %v0_10c7c, 16777216
  %v6_10c98 = or i32 %v4_10c90, %v5_10ca4
  %v6_10ca0 = or i32 %v6_10c98, %v5_10c98
  %v6_10ca4 = or i32 %v6_10ca0, %v5_10ca0
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10cb0 = inttoptr i32 %arg2 to i32*
  store i32 %v6_10ca4, i32* %v3_10cb0, align 4
  %v2_10cbc.pre = load i32, i32* %stack_var_-28, align 4
  %v1_10cc0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cbc

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10c58, %dec_label_pc_10c74, %dec_label_pc_10c04, %dec_label_pc_10c24, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_10cb8
  %v1_10cc0 = phi i32 [ %v1_10cc0.pre, %bb ], [ 0, %dec_label_pc_10cb8 ], [ 1, %.thread7.thread ]
  %v2_10cbc = phi i32 [ %v2_10cbc.pre, %bb ], [ %v3_10bd4, %dec_label_pc_10cb8 ], [ %v3_10bd4, %.thread7.thread ]
  store i32 %v2_10cbc, i32* @r4, align 4
  ret i32 %v1_10cc0

; uselistorder directives
  uselistorder i32 %v1_10c80, { 1, 0 }
  uselistorder i32 %v5_10c7c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10c6c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 8, 5, 6, 7, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10cbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10cb8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10c04, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp24, i32* %stack_var_0, align 4
  %v6_10ccc = load i32, i32* @r5, align 4
  %v9_10ccc = load i32, i32* @r6, align 4
  %v12_10ccc = load i32, i32* @r7, align 4
  %v15_10ccc = load i32, i32* @r8, align 4
  %v18_10ccc = load i32, i32* @sb, align 4
  %v24_10ccc = load i32, i32* @fp, align 4
  %v0_10cd0 = load i32, i32* @r1, align 4
  %v7_10cd0 = icmp eq i32 %v0_10cd0, 2
  store i32 %arg1, i32* @sb, align 4
  %v0_10cdc = load i32, i32* @r2, align 4
  store i32 %v0_10cdc, i32* @r7, align 4
  %v0_10ce0 = load i32, i32* @r3, align 4
  store i32 %v0_10ce0, i32* @r8, align 4
  br i1 %v7_10cd0, label %dec_label_pc_10cec, label %dec_label_pc_10d0c

dec_label_pc_10cec:                               ; preds = %entry
  store i32 %tmp12, i32* @ip, align 4
  store i32 %v0_10cdc, i32* @r1, align 4
  store i32 %v0_10ce0, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v0_10d04 = call i32 @gethostbyname_r()
  store i32 %v0_10d04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10d0c:                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  %v7_10d14 = icmp eq i32 %v0_10cd0, 10
  %v2_10d18 = inttoptr i32 %tmp12 to i32*
  store i32 0, i32* %v2_10d18, align 4
  br i1 %v7_10d14, label %dec_label_pc_10d20, label %dec_label_pc_10f7c

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d0c
  %v1_10d20 = load i32, i32* @sl, align 4
  %v9_10d20 = icmp eq i32 %v1_10d20, %arg1
  br i1 %v9_10d20, label %dec_label_pc_10f7c, label %dec_label_pc_10d28

dec_label_pc_10d28:                               ; preds = %dec_label_pc_10d20
  %v0_10d30 = call i32 @__aeabi_read_tp()
  store i32 %v0_10d30, i32* %r0.global-to-local, align 4
  %v3_10d34 = load i16, i16* @global_var_22308.76, align 2
  %v4_10d34 = sext i16 %v3_10d34 to i32
  store i32 %v4_10d34, i32* @r5, align 4
  store i32 %tmp12, i32* @lr, align 4
  %v2_10d44 = add i32 %v4_10d34, %v0_10d30
  %v3_10d44 = inttoptr i32 %v2_10d44 to i32*
  %v4_10d44 = load i32, i32* %v3_10d44, align 4
  store i32 %v4_10d44, i32* @r4, align 4
  store i32 %v0_10d30, i32* @r6, align 4
  %v0_10d4c = load i32, i32* @sl, align 4
  store i32 %v0_10d4c, i32* %v3_10d44, align 4
  %v0_10d50 = load i32, i32* @sb, align 4
  store i32 %v0_10d50, i32* %r0.global-to-local, align 4
  %v1_10d5c = call i32 @__get_hosts_byname_r(i32 %v0_10d50)
  store i32 %v1_10d5c, i32* %r0.global-to-local, align 4
  %v2_10d60 = icmp eq i32 %v1_10d5c, 0
  br i1 %v2_10d60, label %.thread1, label %dec_label_pc_10d74

.thread1:                                         ; preds = %dec_label_pc_10d28
  %v4_10d68 = load i16, i16* @global_var_22308.76, align 2
  %v5_10d68 = sext i16 %v4_10d68 to i32
  store i32 %v5_10d68, i32* %r3.global-to-local, align 4
  %v1_10d6c = load i32, i32* @r4, align 4
  %v2_10d6c = load i32, i32* @r6, align 4
  %v4_10d6c = add i32 %v2_10d6c, %v5_10d68
  %v5_10d6c = inttoptr i32 %v4_10d6c to i32*
  store i32 %v1_10d6c, i32* %v5_10d6c, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d28
  %v0_10d74 = load i32, i32* @fp, align 4
  %v1_10d74 = inttoptr i32 %v0_10d74 to i32*
  %v2_10d74 = load i32, i32* %v1_10d74, align 4
  store i32 %v2_10d74, i32* %r3.global-to-local, align 4
  %v7_10d78 = icmp eq i32 %v2_10d74, 1
  br i1 %v7_10d78, label %dec_label_pc_10d94, label %dec_label_pc_10d80

dec_label_pc_10d80:                               ; preds = %dec_label_pc_10d74
  %v7_10d80 = icmp eq i32 %v2_10d74, 4
  br i1 %v7_10d80, label %dec_label_pc_10db8, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d80
  %v3_10d88 = icmp eq i32 %v2_10d74, -1
  br i1 %v3_10d88, label %dec_label_pc_10da4, label %dec_label_pc_10f80

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d74
  %v7_10d94 = icmp eq i32 %v1_10d5c, 2
  br i1 %v7_10d94, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_10d94
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_10dbc

.thread3:                                         ; preds = %dec_label_pc_10d94
  store i32 1, i32* @r6, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10da4:                               ; preds = %dec_label_pc_10d88
  %v3_10da8 = load i16, i16* @global_var_22308.76, align 2
  %v4_10da8 = sext i16 %v3_10da8 to i32
  store i32 %v4_10da8, i32* %r3.global-to-local, align 4
  %v0_10dac = load i32, i32* @r6, align 4
  %v2_10dac = add i32 %v0_10dac, %v4_10da8
  %v3_10dac = inttoptr i32 %v2_10dac to i32*
  %v4_10dac = load i32, i32* %v3_10dac, align 4
  store i32 %v4_10dac, i32* %r3.global-to-local, align 4
  %v7_10db0 = icmp eq i32 %v4_10dac, 2
  br i1 %v7_10db0, label %dec_label_pc_10db8, label %dec_label_pc_10f80

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10da4, %dec_label_pc_10d80
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %bb, %.thread3, %dec_label_pc_10db8
  %v3_10dbc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_10dbc, i32* %r0.global-to-local, align 4
  %v0_10dc0 = load i32, i32* @r8, align 4
  %v1_10dc0 = sub i32 0, %v0_10dc0
  %v1_10dc4 = urem i32 %v1_10dc0, 4
  store i32 %v1_10dc4, i32* %r1.global-to-local, align 4
  %v2_10dcc = sub i32 %v3_10dbc, %v1_10dc4
  store i32 %v2_10dcc, i32* %r2.global-to-local, align 4
  %v3_10dd0 = load i16, i16* @global_var_22308.76, align 2
  %v4_10dd0 = sext i16 %v3_10dd0 to i32
  store i32 %v4_10dd0, i32* %r3.global-to-local, align 4
  %v0_10dd4 = call i32 @__aeabi_read_tp()
  store i32 %v0_10dd4, i32* %r0.global-to-local, align 4
  %v1_10dd8 = add i32 %v2_10dcc, -24
  store i32 %v1_10dd8, i32* @sl, align 4
  %v0_10ddc = load i32, i32* @r4, align 4
  %v3_10ddc = add i32 %v4_10dd0, %v0_10dd4
  %v4_10ddc = inttoptr i32 %v3_10ddc to i32*
  store i32 %v0_10ddc, i32* %v4_10ddc, align 4
  %v0_10de0 = load i32, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10de8 = load i32, i32* @fp, align 4
  %v2_10de8 = inttoptr i32 %v1_10de8 to i32*
  store i32 -1, i32* %v2_10de8, align 4
  %v7_10dec = icmp sgt i32 %v0_10de0, 255
  br i1 %v7_10dec, label %dec_label_pc_10df4, label %bb27

bb27:                                             ; preds = %dec_label_pc_10dbc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10dbc
  %v0_10df4 = load i32, i32* @r8, align 4
  %v1_10df4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10df4 = add i32 %v1_10df4, %v0_10df4
  store i32 %v2_10df4, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_10dfc = add i32 %v2_10df4, 16
  store i32 %v1_10dfc, i32* %r2.global-to-local, align 4
  %v1_10e00 = add i32 %v2_10df4, 24
  store i32 %v1_10e00, i32* @r5, align 4
  %v3_10e08 = inttoptr i32 %v1_10dfc to i32*
  store i32 %v2_10df4, i32* %v3_10e08, align 4
  %v0_10e0c = load i32, i32* @sb, align 4
  store i32 %v0_10e0c, i32* @r1, align 4
  %v0_10e10 = load i32, i32* @r4, align 4
  %v1_10e10 = load i32, i32* %r2.global-to-local, align 4
  %v2_10e10 = add i32 %v1_10e10, 4
  %v3_10e10 = inttoptr i32 %v2_10e10 to i32*
  store i32 %v0_10e10, i32* %v3_10e10, align 4
  %v0_10e14 = load i32, i32* @r5, align 4
  store i32 %v0_10e14, i32* %r0.global-to-local, align 4
  %v0_10e18 = load i32, i32* @sl, align 4
  store i32 %v0_10e18, i32* %r2.global-to-local, align 4
  %v3_10e1c = call i32 @strncpy(i32 %v0_10e14, i32 %v0_10e0c, i32 %v0_10e18)
  %v0_10e20 = load i32, i32* @r4, align 4
  %v1_10e20 = trunc i32 %v0_10e20 to i8
  %v2_10e20 = load i32, i32* @r5, align 4
  %v3_10e20 = load i32, i32* @sl, align 4
  %v4_10e20 = add i32 %v3_10e20, %v2_10e20
  %v5_10e20 = inttoptr i32 %v4_10e20 to i8*
  store i8 %v1_10e20, i8* %v5_10e20, align 1
  %v0_10e24 = load i32, i32* @sb, align 4
  store i32 %v0_10e24, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10e2c = load i32, i32* @r8, align 4
  store i32 %v0_10e2c, i32* %r2.global-to-local, align 4
  %v3_10e30 = inttoptr i32 %v0_10e24 to i8*
  %v4_10e30 = call i32 @inet_pton(i32 10, i8* %v3_10e30, i32 %v0_10e2c)
  store i32 %v4_10e30, i32* %r0.global-to-local, align 4
  %v1_10e34 = load i32, i32* @r4, align 4
  %v9_10e34 = icmp eq i32 %v4_10e30, %v1_10e34
  br i1 %v9_10e34, label %dec_label_pc_10e6c, label %dec_label_pc_10e3c

dec_label_pc_10e3c:                               ; preds = %dec_label_pc_10df4
  store i32 %v1_10dfc, i32* @ip, align 4
  %v0_10e44 = load i32, i32* @r7, align 4
  store i32 %v0_10e44, i32* %v2_10d18, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_10e4c = load i32, i32* @r7, align 4
  %v2_10e4c = add i32 %v1_10e4c, 8
  %v3_10e4c = inttoptr i32 %v2_10e4c to i32*
  store i32 10, i32* %v3_10e4c, align 4
  %v0_10e50 = load i32, i32* @r4, align 4
  store i32 %v0_10e50, i32* %r0.global-to-local, align 4
  %v0_10e54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e54 = add i32 %v0_10e54, 6
  store i32 %v1_10e54, i32* %r3.global-to-local, align 4
  %v1_10e58 = load i32, i32* @r7, align 4
  %v2_10e58 = add i32 %v1_10e58, 12
  %v3_10e58 = inttoptr i32 %v2_10e58 to i32*
  store i32 %v1_10e54, i32* %v3_10e58, align 4
  %v0_10e5c = load i32, i32* @r5, align 4
  %v1_10e5c = load i32, i32* @r7, align 4
  %v2_10e5c = inttoptr i32 %v1_10e5c to i32*
  store i32 %v0_10e5c, i32* %v2_10e5c, align 4
  %v0_10e60 = load i32, i32* @ip, align 4
  %v1_10e60 = load i32, i32* @r7, align 4
  %v2_10e60 = add i32 %v1_10e60, 16
  %v3_10e60 = inttoptr i32 %v2_10e60 to i32*
  store i32 %v0_10e60, i32* %v3_10e60, align 4
  %v0_10e64 = load i32, i32* @r4, align 4
  %v1_10e64 = load i32, i32* @fp, align 4
  %v2_10e64 = inttoptr i32 %v1_10e64 to i32*
  store i32 %v0_10e64, i32* %v2_10e64, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10df4
  %v0_10e6c = load i32, i32* @r6, align 4
  %v2_10e6c = icmp eq i32 %v0_10e6c, 0
  br i1 %v2_10e6c, label %dec_label_pc_10e74, label %dec_label_pc_10f6c

dec_label_pc_10e74:                               ; preds = %dec_label_pc_10e6c
  %v2_10e74 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_10e74, i32* @r4, align 4
  store i32 %v2_10e74, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v3_10e84 = bitcast i32* %stack_var_-84 to i8*
  %v4_10e84 = call i32 @__GI_memset(i8* %v3_10e84, i32 0, i32 40)
  store i32 %v4_10e84, i32* %r0.global-to-local, align 4
  %v2_10e8c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10e8c, i32* @sb, align 4
  %v7_10ecc = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_10e90

dec_label_pc_10e90:                               ; preds = %dec_label_pc_10ee4, %dec_label_pc_10e74
  store i32 %v2_10e8c, i32* %r2.global-to-local, align 4
  store i32 %v2_10e74, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_10e9c = load i32, i32* @r5, align 4
  store i32 %v0_10e9c, i32* %r0.global-to-local, align 4
  %v4_10ea0 = inttoptr i32 %v0_10e9c to i8*
  %v5_10ea0 = call i32 @__dns_lookup(i8* %v4_10ea0, i32 28, i32 %v2_10e8c, i32 %v2_10e74)
  store i32 %v5_10ea0, i32* @r4, align 4
  %v1_10ea4 = icmp slt i32 %v5_10ea0, 0
  %v0_10ea8 = load i32, i32* @sl, align 4
  store i32 %v0_10ea8, i32* %r2.global-to-local, align 4
  %v0_10eac = load i32, i32* @r6, align 4
  %v1_10eac = add i32 %v0_10eac, 1
  store i32 %v1_10eac, i32* @r6, align 4
  %v0_10eb0 = load i32, i32* @r5, align 4
  store i32 %v0_10eb0, i32* %r0.global-to-local, align 4
  br i1 %v1_10ea4, label %dec_label_pc_10f6c, label %dec_label_pc_10eb8

dec_label_pc_10eb8:                               ; preds = %dec_label_pc_10e90
  %v3_10eb8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10eb8, i32* @r1, align 4
  %v3_10ebc = call i32 @strncpy(i32 %v0_10eb0, i32 %v3_10eb8, i32 %v0_10ea8)
  %v3_10ec0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10ec0, i32* @r0, align 4
  %v0_10ec4 = call i32 @free()
  store i32 %v0_10ec4, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r1.global-to-local, align 4
  %v0_10ed0 = load i32, i32* @r4, align 4
  store i32 %v0_10ed0, i32* %r2.global-to-local, align 4
  %v0_10ed4 = load i32, i32* @r5, align 4
  store i32 %v0_10ed4, i32* @r3, align 4
  br i1 %v7_10ecc, label %dec_label_pc_10edc, label %dec_label_pc_10f14

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10eb8
  %v0_10edc = load i32, i32* @r6, align 4
  %v8_10ee0 = icmp sgt i32 %v0_10edc, 5
  br i1 %v8_10ee0, label %dec_label_pc_10f08, label %dec_label_pc_10ee4

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_10edc
  store i32 %tmp6, i32* @r1, align 4
  %v3_10ee8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10ee8, i32* %r0.global-to-local, align 4
  %v0_10eec = load i32, i32* @sl, align 4
  %v5_10ef0 = call i32 @__decode_dotted(i32 %v3_10ee8, i32 %tmp6, i32 %v0_10ed0, i32 %v0_10ed4, i32 %v0_10eec)
  store i32 %v5_10ef0, i32* @r4, align 4
  %v3_10ef8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10ef8, i32* @r0, align 4
  %v0_10efc = call i32 @free()
  store i32 %v0_10efc, i32* %r0.global-to-local, align 4
  %v0_10f00 = load i32, i32* @r4, align 4
  %v1_10f00 = icmp slt i32 %v0_10f00, 0
  br i1 %v1_10f00, label %dec_label_pc_10f08, label %dec_label_pc_10e90

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10ee4, %dec_label_pc_10edc
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f74

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10eb8
  %v7_10f14 = icmp eq i32 %tmp7, 28
  br i1 %v7_10f14, label %dec_label_pc_10f1c, label %dec_label_pc_10f64

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10f14
  store i32 16, i32* @r2, align 4
  %v0_10f24 = load i32, i32* @r8, align 4
  store i32 %v0_10f24, i32* @r0, align 4
  %v0_10f28 = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_10dfc, i32* @lr, align 4
  %v1_10f34 = load i32, i32* @r7, align 4
  %v2_10f34 = add i32 %v1_10f34, 8
  %v3_10f34 = inttoptr i32 %v2_10f34 to i32*
  store i32 10, i32* %v3_10f34, align 4
  %v0_10f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f38 = add i32 %v0_10f38, 6
  store i32 %v1_10f38, i32* %r3.global-to-local, align 4
  %v1_10f3c = load i32, i32* @r7, align 4
  %v2_10f3c = add i32 %v1_10f3c, 12
  %v3_10f3c = inttoptr i32 %v2_10f3c to i32*
  store i32 %v1_10f38, i32* %v3_10f3c, align 4
  %v3_10f40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10f40, i32* @r0, align 4
  %v0_10f44 = load i32, i32* @r5, align 4
  %v1_10f44 = load i32, i32* @r7, align 4
  %v2_10f44 = inttoptr i32 %v1_10f44 to i32*
  store i32 %v0_10f44, i32* %v2_10f44, align 4
  %v0_10f48 = load i32, i32* @lr, align 4
  %v1_10f48 = load i32, i32* @r7, align 4
  %v2_10f48 = add i32 %v1_10f48, 16
  %v3_10f48 = inttoptr i32 %v2_10f48 to i32*
  store i32 %v0_10f48, i32* %v3_10f48, align 4
  %v0_10f4c = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10f5c = load i32, i32* @r7, align 4
  store i32 %v0_10f5c, i32* %v2_10d18, align 4
  %v0_10f74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f74

dec_label_pc_10f64:                               ; preds = %dec_label_pc_10f14
  %v3_10f64 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10f64, i32* @r0, align 4
  %v0_10f68 = call i32 @free()
  store i32 %v0_10f68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10e90, %dec_label_pc_10e6c, %dec_label_pc_10f64
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f1c, %dec_label_pc_10f08, %dec_label_pc_10f6c
  %v0_10f74 = phi i32 [ %v0_10f74.pre, %dec_label_pc_10f1c ], [ 3, %dec_label_pc_10f08 ], [ 1, %dec_label_pc_10f6c ]
  %v1_10f74 = load i32, i32* @fp, align 4
  %v2_10f74 = inttoptr i32 %v1_10f74 to i32*
  store i32 %v0_10f74, i32* %v2_10f74, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10f7c:                               ; preds = %dec_label_pc_10d0c, %dec_label_pc_10d20
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %.thread1, %bb27, %dec_label_pc_10da4, %dec_label_pc_10d88, %dec_label_pc_10cec, %dec_label_pc_10f74, %dec_label_pc_10e3c, %dec_label_pc_10f7c
  store i32 %v6_10ccc, i32* @r5, align 4
  store i32 %v9_10ccc, i32* @r6, align 4
  store i32 %v12_10ccc, i32* @r7, align 4
  store i32 %v15_10ccc, i32* @r8, align 4
  store i32 %v18_10ccc, i32* @sb, align 4
  store i32 %v24_10ccc, i32* @fp, align 4
  %v1_10f88 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10f88

; uselistorder directives
  uselistorder i32 %v2_10e74, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10dfc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10dc4, { 1, 0 }
  uselistorder i32 %v0_10d30, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp12, { 3, 2, 0, 1 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 0, 1, 2, 3, 9 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 21, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 23, 20, 22, 1, 0, 2, 3, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder label %dec_label_pc_10f80, { 7, 5, 6, 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10f74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10dbc, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_10fa0 = load i32, i32* @r4, align 4
  %v6_10fa0 = load i32, i32* @r5, align 4
  %v9_10fa0 = load i32, i32* @r6, align 4
  %v12_10fa0 = load i32, i32* @lr, align 4
  %v2_10fa8 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_10fb8 = mul i32 %arg2, %arg1
  store i32 %v2_10fb8, i32* @r6, align 4
  br i1 %v2_10fa8, label %dec_label_pc_10ff0, label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_10fc8 = udiv i32 %v2_10fb8, %arg1
  %v9_10fcc = icmp eq i32 %v2_10fc8, %arg2
  br i1 %v9_10fcc, label %dec_label_pc_10ff0, label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fc0
  %v0_10fd8 = call i32 @__aeabi_read_tp()
  %v3_10fdc = load i16, i16* @global_var_22308.76, align 2
  %v4_10fdc = sext i16 %v3_10fdc to i32
  store i32 %v4_10fdc, i32* @r2, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10fe8 = add i32 %v4_10fdc, %v0_10fd8
  %v4_10fe8 = inttoptr i32 %v3_10fe8 to i32*
  store i32 12, i32* %v4_10fe8, align 4
  br label %dec_label_pc_110b4

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10fc0, %entry
  %v4_10ff4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 116) to i32*), align 4
  store i32 %v4_10ff4, i32* @r4, align 4
  %v4_1100c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  store i32 %v4_1100c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1100c)
  %v0_11020 = load i32, i32* @r5, align 4
  %v2_11020 = add i32 %v0_11020, 16
  %v3_11020 = inttoptr i32 %v2_11020 to i32*
  %v4_11020 = load i32, i32* %v3_11020, align 4
  store i32 %v4_11020, i32* %ip.global-to-local, align 4
  store i32 69676, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11020)
  %v0_1102c = load i32, i32* @r6, align 4
  %v1_11030 = call i32 @malloc(i32 %v0_1102c)
  store i32 %v1_11030, i32* %r4.global-to-local, align 4
  %v2_11034 = icmp eq i32 %v1_11030, 0
  br i1 %v2_11034, label %.thread, label %dec_label_pc_1103c

dec_label_pc_1103c:                               ; preds = %dec_label_pc_10ff0
  %v1_1103c = add i32 %v1_11030, -4
  %v2_1103c = inttoptr i32 %v1_1103c to i32*
  %v3_1103c = load i32, i32* %v2_1103c, align 4
  %v1_11040 = and i32 %v3_1103c, 2
  %v2_11040 = icmp eq i32 %v1_11040, 0
  br i1 %v2_11040, label %dec_label_pc_11048, label %.thread

dec_label_pc_11048:                               ; preds = %dec_label_pc_1103c
  %v1_110486 = add i32 %v3_1103c, -4
  %v1_1104c = and i32 %v1_110486, -4
  store i32 %v1_1104c, i32* @r2, align 4
  %v3_11050 = udiv i32 %v1_1104c, 4
  store i32 %v3_11050, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1104c, 36
  %v2_11058 = icmp ult i32 %v1_1104c, 33
  %v3_11058 = or i1 %tmp, %v2_11058
  br i1 %v3_11058, label %dec_label_pc_11064, label %dec_label_pc_1105c

dec_label_pc_1105c:                               ; preds = %dec_label_pc_11048
  %v3_1105c = inttoptr i32 %v1_11030 to i8*
  %v4_1105c = call i32 @__GI_memset(i8* %v3_1105c, i32 0, i32 %v1_1104c)
  br label %.thread

dec_label_pc_11064:                               ; preds = %dec_label_pc_11048
  %tmp7 = icmp eq i32 %v1_1104c, 16
  %v2_11068 = inttoptr i32 %v1_11030 to i32*
  store i32 0, i32* %v2_11068, align 4
  %v1_1106c = load i32, i32* %r4.global-to-local, align 4
  %v2_1106c = add i32 %v1_1106c, 4
  %v3_1106c = inttoptr i32 %v2_1106c to i32*
  store i32 0, i32* %v3_1106c, align 4
  %v1_11070 = load i32, i32* %r4.global-to-local, align 4
  %v2_11070 = add i32 %v1_11070, 8
  %v3_11070 = inttoptr i32 %v2_11070 to i32*
  store i32 0, i32* %v3_11070, align 4
  %v2_11074 = icmp ult i32 %v1_1104c, 13
  %v3_11074 = or i1 %tmp7, %v2_11074
  br i1 %v3_11074, label %.thread, label %dec_label_pc_11078

dec_label_pc_11078:                               ; preds = %dec_label_pc_11064
  %v0_11078 = load i32, i32* %ip.global-to-local, align 4
  %v1_1107c = load i32, i32* %r4.global-to-local, align 4
  %v2_1107c = add i32 %v1_1107c, 12
  %v3_1107c = inttoptr i32 %v2_1107c to i32*
  store i32 0, i32* %v3_1107c, align 4
  %v1_11080 = load i32, i32* %r4.global-to-local, align 4
  %v2_11080 = add i32 %v1_11080, 16
  %v3_11080 = inttoptr i32 %v2_11080 to i32*
  store i32 0, i32* %v3_11080, align 4
  %tmp8 = icmp ult i32 %v0_11078, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_11088

dec_label_pc_11088:                               ; preds = %dec_label_pc_11078
  %v0_11088 = load i32, i32* %ip.global-to-local, align 4
  %v7_11088 = icmp eq i32 %v0_11088, 9
  %v1_1108c = load i32, i32* %r4.global-to-local, align 4
  %v2_1108c = add i32 %v1_1108c, 20
  %v3_1108c = inttoptr i32 %v2_1108c to i32*
  store i32 0, i32* %v3_1108c, align 4
  %v1_11090 = load i32, i32* %r4.global-to-local, align 4
  %v2_11090 = add i32 %v1_11090, 24
  %v3_11090 = inttoptr i32 %v2_11090 to i32*
  store i32 0, i32* %v3_11090, align 4
  br i1 %v7_11088, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11088
  %v2_11094 = load i32, i32* %r4.global-to-local, align 4
  %v3_11094 = add i32 %v2_11094, 32
  %v4_11094 = inttoptr i32 %v3_11094 to i32*
  store i32 0, i32* %v4_11094, align 4
  %v2_11098 = load i32, i32* %r4.global-to-local, align 4
  %v3_11098 = add i32 %v2_11098, 28
  %v4_11098 = inttoptr i32 %v3_11098 to i32*
  store i32 0, i32* %v4_11098, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11088, %dec_label_pc_1103c, %dec_label_pc_11078, %dec_label_pc_11064, %dec_label_pc_10ff0, %dec_label_pc_1105c, %bb
  store i32 1, i32* @r1, align 4
  %v0_110a8 = load i32, i32* @r5, align 4
  %v2_110a8 = add i32 %v0_110a8, 48
  %v3_110a8 = inttoptr i32 %v2_110a8 to i32*
  %v4_110a8 = load i32, i32* %v3_110a8, align 4
  store i32 %v4_110a8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_110a8)
  br label %dec_label_pc_110b4

dec_label_pc_110b4:                               ; preds = %dec_label_pc_10fd4, %.thread
  %v0_110b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_10fa0, i32* @r4, align 4
  store i32 %v6_10fa0, i32* @r5, align 4
  store i32 %v9_10fa0, i32* @r6, align 4
  store i32 %v12_10fa0, i32* @lr, align 4
  ret i32 %v0_110b4

; uselistorder directives
  uselistorder i32 %v1_1104c, { 0, 6, 3, 1, 5, 4, 2 }
  uselistorder i32 %v1_11030, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_110b4, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_110cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_110cc:
  %v0_110cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_110cc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_110cc
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_110cc, %bb
  %v10_110dc = phi i32 [ %arg1, %dec_label_pc_110cc ], [ 0, %bb ]
  ret i32 %v10_110dc

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_110e0 = load i32, i32* @r4, align 4
  %v6_110e0 = load i32, i32* @r5, align 4
  %v9_110e0 = load i32, i32* @r6, align 4
  %v12_110e0 = load i32, i32* @r7, align 4
  %v15_110e0 = load i32, i32* @r8, align 4
  %v18_110e0 = load i32, i32* @sb, align 4
  %v21_110e0 = load i32, i32* @sl, align 4
  %v24_110e0 = load i32, i32* @fp, align 4
  %v27_110e0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_110ec = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_110ec, label %dec_label_pc_11100, label %dec_label_pc_11110

dec_label_pc_11100:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_11104 = call i32 @malloc(i32 %arg2)
  store i32 %v1_11104, i32* %r0.global-to-local, align 4
  store i32 %v1_11104, i32* @r4, align 4
  br label %dec_label_pc_11470

dec_label_pc_11110:                               ; preds = %entry
  %v2_11110 = icmp eq i32 %arg2, 0
  br i1 %v2_11110, label %dec_label_pc_11118, label %dec_label_pc_11124

dec_label_pc_11118:                               ; preds = %dec_label_pc_11110
  %v0_11118 = call i32 @free()
  store i32 %v0_11118, i32* %r0.global-to-local, align 4
  %v0_1111c = load i32, i32* @r6, align 4
  store i32 %v0_1111c, i32* @r4, align 4
  br label %dec_label_pc_11470

dec_label_pc_11124:                               ; preds = %dec_label_pc_11110
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_1112c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 116) to i32*), align 4
  store i32 %v4_1112c, i32* @r4, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_1112c, i32* %r2.global-to-local, align 4
  %v4_11138 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 72) to i32*), align 4
  store i32 %v4_11138, i32* %r1.global-to-local, align 4
  %v2_1113c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1113c, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_11144 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11144)
  %v0_11150 = load i32, i32* @r4, align 4
  store i32 %v0_11150, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  %v4_1115c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 16) to i32*), align 4
  store i32 %v4_1115c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_11168.398 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1115c)
  %v0_11168 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_11168, -32
  br i1 %tmp36, label %dec_label_pc_1118c, label %dec_label_pc_11170

dec_label_pc_11170:                               ; preds = %dec_label_pc_11124
  store i32 70024, i32* %r2.global-to-local, align 4
  %v0_11174 = call i32 @__aeabi_read_tp()
  store i32 %v0_11174, i32* %r0.global-to-local, align 4
  %v3_11178 = load i16, i16* @global_var_22308.76, align 2
  %v4_11178 = sext i16 %v3_11178 to i32
  store i32 %v4_11178, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_11184 = add i32 %v4_11178, %v0_11174
  %v4_11184 = inttoptr i32 %v3_11184 to i32*
  store i32 12, i32* %v4_11184, align 4
  br label %dec_label_pc_11470

dec_label_pc_1118c:                               ; preds = %dec_label_pc_11124
  %v1_1118c = add i32 %v0_11168, 11
  store i32 %v1_1118c, i32* %r0.global-to-local, align 4
  %v0_11190 = load i32, i32* @r5, align 4
  %v1_11190 = add i32 %v0_11190, -4
  %v2_11190 = inttoptr i32 %v1_11190 to i32*
  %v3_11190 = load i32, i32* %v2_11190, align 4
  store i32 %v3_11190, i32* %r2.global-to-local, align 4
  %v2_11194 = icmp ugt i32 %v1_1118c, 14
  %v7_11194 = icmp eq i32 %v1_1118c, 15
  %v2_11198 = xor i1 %v2_11194, true
  %v3_11198 = or i1 %v7_11194, %v2_11198
  br i1 %v3_11198, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1118c
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1118c, %bb
  %v2_1119c = xor i1 %v7_11194, true
  %v3_1119c = and i1 %v2_11194, %v2_1119c
  br i1 %v3_1119c, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1119c = and i32 %v1_1118c, -8
  store i32 %v5_1119c, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_111a0 = and i32 %v3_11190, 2
  %v2_111a0 = icmp eq i32 %v1_111a0, 0
  %v1_111a4 = add i32 %v0_11190, -8
  store i32 %v1_111a4, i32* @sl, align 4
  %v1_111a8 = and i32 %v3_11190, -4
  store i32 %v1_111a8, i32* @r6, align 4
  br i1 %v2_111a0, label %dec_label_pc_111b0, label %dec_label_pc_11388

dec_label_pc_111b0:                               ; preds = %bb29
  %v1_111b0 = load i32, i32* @sb, align 4
  %v3_111b0 = icmp ult i32 %v1_111a8, %v1_111b0
  br i1 %v3_111b0, label %dec_label_pc_111bc, label %bb30

bb30:                                             ; preds = %dec_label_pc_111b0
  store i32 %v1_111a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11320

dec_label_pc_111bc:                               ; preds = %dec_label_pc_111b0
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_111c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_111c4, i32* %r0.global-to-local, align 4
  %v1_111c8 = add i32 %v4_111c4, 44
  %v2_111c8 = inttoptr i32 %v1_111c8 to i32*
  %v3_111c8 = load i32, i32* %v2_111c8, align 4
  store i32 %v3_111c8, i32* %r3.global-to-local, align 4
  %v2_111cc = add i32 %v1_111a8, %v1_111a4
  store i32 %v2_111cc, i32* @r4, align 4
  %v9_111d0 = icmp eq i32 %v2_111cc, %v3_111c8
  %v1_111d4 = add i32 %v2_111cc, 4
  %v2_111d4 = inttoptr i32 %v1_111d4 to i32*
  %v3_111d4 = load i32, i32* %v2_111d4, align 4
  store i32 %v3_111d4, i32* %r1.global-to-local, align 4
  br i1 %v9_111d0, label %dec_label_pc_111dc, label %dec_label_pc_11218

dec_label_pc_111dc:                               ; preds = %dec_label_pc_111bc
  %v1_111dc = and i32 %v3_111d4, -4
  %v2_111e0 = add i32 %v1_111dc, %v1_111a8
  store i32 %v2_111e0, i32* %r1.global-to-local, align 4
  %v1_111e4 = add i32 %v1_111b0, 16
  store i32 %v1_111e4, i32* %r3.global-to-local, align 4
  %v3_111e8 = icmp ult i32 %v2_111e0, %v1_111e4
  br i1 %v3_111e8, label %dec_label_pc_1126c, label %dec_label_pc_111f0

dec_label_pc_111f0:                               ; preds = %dec_label_pc_111dc
  %v2_111f0 = sub i32 %v2_111e0, %v1_111b0
  %v1_111f4 = urem i32 %v3_11190, 2
  %v2_111f8 = add i32 %v1_111b0, %v1_111a4
  store i32 %v2_111f8, i32* %r1.global-to-local, align 4
  %v2_111fc = or i32 %v1_111b0, %v1_111f4
  store i32 %v2_111fc, i32* %r2.global-to-local, align 4
  %v1_11200 = or i32 %v2_111f0, 1
  store i32 %v1_11200, i32* %r3.global-to-local, align 4
  store i32 %v0_11190, i32* @r4, align 4
  store i32 %v2_111fc, i32* %v2_11190, align 4
  %v0_1120c = load i32, i32* %r1.global-to-local, align 4
  %v1_1120c = load i32, i32* %r0.global-to-local, align 4
  %v2_1120c = add i32 %v1_1120c, 44
  %v3_1120c = inttoptr i32 %v2_1120c to i32*
  store i32 %v0_1120c, i32* %v3_1120c, align 4
  %v0_11210 = load i32, i32* %r3.global-to-local, align 4
  %v1_11210 = load i32, i32* %r1.global-to-local, align 4
  %v2_11210 = add i32 %v1_11210, 4
  %v3_11210 = inttoptr i32 %v2_11210 to i32*
  store i32 %v0_11210, i32* %v3_11210, align 4
  br label %dec_label_pc_11454

dec_label_pc_11218:                               ; preds = %dec_label_pc_111bc
  %v1_11218 = and i32 %v3_111d4, -2
  %v2_1121c = add i32 %v1_11218, %v2_111cc
  store i32 %v2_1121c, i32* %r3.global-to-local, align 4
  %v1_11220 = add i32 %v2_1121c, 4
  %v2_11220 = inttoptr i32 %v1_11220 to i32*
  %v3_11220 = load i32, i32* %v2_11220, align 4
  store i32 %v3_11220, i32* %r3.global-to-local, align 4
  %v1_11224 = urem i32 %v3_11220, 2
  %v2_11224 = icmp eq i32 %v1_11224, 0
  br i1 %v2_11224, label %dec_label_pc_1122c, label %dec_label_pc_1126c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_11218
  %v1_1122c = and i32 %v3_111d4, -4
  store i32 %v1_1122c, i32* %r3.global-to-local, align 4
  %v2_11230 = add i32 %v1_1122c, %v1_111a8
  store i32 %v2_11230, i32* %r0.global-to-local, align 4
  %v3_11234 = icmp ult i32 %v2_11230, %v1_111b0
  br i1 %v3_11234, label %dec_label_pc_1126c, label %dec_label_pc_1123c

dec_label_pc_1123c:                               ; preds = %dec_label_pc_1122c
  %v1_1123c = add i32 %v1_111a8, %v0_11190
  %v2_1123c = inttoptr i32 %v1_1123c to i32*
  %v3_1123c = load i32, i32* %v2_1123c, align 4
  store i32 %v3_1123c, i32* %r1.global-to-local, align 4
  %v1_11240 = add i32 %v3_1123c, 12
  %v2_11240 = inttoptr i32 %v1_11240 to i32*
  %v3_11240 = load i32, i32* %v2_11240, align 4
  store i32 %v3_11240, i32* %r3.global-to-local, align 4
  %v9_11244 = icmp eq i32 %v3_11240, %v2_111cc
  %v1_11248 = add i32 %v2_111cc, 12
  %v2_11248 = inttoptr i32 %v1_11248 to i32*
  %v3_11248 = load i32, i32* %v2_11248, align 4
  store i32 %v3_11248, i32* %r2.global-to-local, align 4
  br i1 %v9_11244, label %dec_label_pc_11250, label %dec_label_pc_1125c

dec_label_pc_11250:                               ; preds = %dec_label_pc_1123c
  %v1_11250 = add i32 %v3_11248, 8
  %v2_11250 = inttoptr i32 %v1_11250 to i32*
  %v3_11250 = load i32, i32* %v2_11250, align 4
  store i32 %v3_11250, i32* %r3.global-to-local, align 4
  %v9_11254 = icmp eq i32 %v3_11250, %v2_111cc
  br i1 %v9_11254, label %dec_label_pc_11260, label %dec_label_pc_1125c

dec_label_pc_1125c:                               ; preds = %dec_label_pc_1123c, %dec_label_pc_11250
  %v0_1125c = call i32 @abort()
  store i32 %v0_1125c, i32* %r0.global-to-local, align 4
  %v0_11260.pre = load i32, i32* @r1, align 4
  %v1_11260.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11260

dec_label_pc_11260:                               ; preds = %dec_label_pc_11250, %dec_label_pc_1125c
  %v1_11260 = phi i32 [ %v3_11248, %dec_label_pc_11250 ], [ %v1_11260.pre, %dec_label_pc_1125c ]
  %v0_11260 = phi i32 [ %v3_1123c, %dec_label_pc_11250 ], [ %v0_11260.pre, %dec_label_pc_1125c ]
  %v2_11260 = add i32 %v1_11260, 8
  %v3_11260 = inttoptr i32 %v2_11260 to i32*
  store i32 %v0_11260, i32* %v3_11260, align 4
  %v0_11264 = load i32, i32* %r2.global-to-local, align 4
  %v1_11264 = load i32, i32* %r1.global-to-local, align 4
  %v2_11264 = add i32 %v1_11264, 12
  %v3_11264 = inttoptr i32 %v2_11264 to i32*
  store i32 %v0_11264, i32* %v3_11264, align 4
  %v1_11320.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11320

dec_label_pc_1126c:                               ; preds = %dec_label_pc_111dc, %dec_label_pc_1122c, %dec_label_pc_11218
  %v1_1126c = add i32 %v1_111b0, -7
  store i32 %v1_1126c, i32* %r0.global-to-local, align 4
  %v1_11270 = call i32 @malloc(i32 %v1_1126c)
  store i32 %v1_11270, i32* @r0, align 4
  store i32 %v1_11270, i32* %r1.global-to-local, align 4
  %v2_11274 = icmp eq i32 %v1_11270, 0
  br i1 %v2_11274, label %bb31, label %dec_label_pc_11280

bb31:                                             ; preds = %dec_label_pc_1126c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11454

dec_label_pc_11280:                               ; preds = %dec_label_pc_1126c
  %v1_11288.pre = load i32, i32* @r4, align 4
  %v1_11280 = add i32 %v1_11270, -4
  %v2_11280 = inttoptr i32 %v1_11280 to i32*
  %v3_11280 = load i32, i32* %v2_11280, align 4
  store i32 %v3_11280, i32* @r3, align 4
  %v1_11284 = add i32 %v1_11270, -8
  store i32 %v1_11284, i32* @r7, align 4
  %v9_11288 = icmp eq i32 %v1_11284, %v1_11288.pre
  br i1 %v9_11288, label %.thread2, label %dec_label_pc_11298

.thread2:                                         ; preds = %dec_label_pc_11280
  %v2_1128c = and i32 %v3_11280, -4
  store i32 %v2_1128c, i32* %r3.global-to-local, align 4
  %v2_11290 = load i32, i32* @r6, align 4
  %v3_11290 = add i32 %v2_11290, %v2_1128c
  store i32 %v3_11290, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11320

dec_label_pc_11298:                               ; preds = %dec_label_pc_11280
  %v0_11298 = load i32, i32* @r6, align 4
  %v1_11298 = add i32 %v0_11298, -4
  store i32 %v1_11298, i32* @r2, align 4
  %v3_1129c = udiv i32 %v1_11298, 4
  store i32 %v3_1129c, i32* @ip, align 4
  %tmp37 = and i32 %v1_11298, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_112a4 = icmp ult i32 %v1_11298, 36
  %v3_112a4 = or i1 %tmp38, %v2_112a4
  %v0_112b4 = load i32, i32* @r5, align 4
  br i1 %v3_112a4, label %dec_label_pc_112b4, label %dec_label_pc_112a8

dec_label_pc_112a8:                               ; preds = %dec_label_pc_11298
  store i32 %v0_112b4, i32* @r1, align 4
  %v0_112ac = call i32 @memcpy()
  store i32 %v0_112ac, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_112b4:                               ; preds = %dec_label_pc_11298
  %v1_112b4 = inttoptr i32 %v0_112b4 to i32*
  %v2_112b4 = load i32, i32* %v1_112b4, align 4
  store i32 %v2_112b4, i32* %r3.global-to-local, align 4
  %v2_112b8 = inttoptr i32 %v1_11270 to i32*
  store i32 %v2_112b4, i32* %v2_112b8, align 4
  %v0_112bc = load i32, i32* @r5, align 4
  %v1_112bc = add i32 %v0_112bc, 4
  %v2_112bc = inttoptr i32 %v1_112bc to i32*
  %v3_112bc = load i32, i32* %v2_112bc, align 4
  store i32 %v3_112bc, i32* %r3.global-to-local, align 4
  %v1_112c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_112c0 = add i32 %v1_112c0, 4
  %v3_112c0 = inttoptr i32 %v2_112c0 to i32*
  store i32 %v3_112bc, i32* %v3_112c0, align 4
  %v0_112c4 = load i32, i32* @r5, align 4
  %v1_112c4 = add i32 %v0_112c4, 8
  %v2_112c4 = inttoptr i32 %v1_112c4 to i32*
  %v3_112c4 = load i32, i32* %v2_112c4, align 4
  store i32 %v3_112c4, i32* %r3.global-to-local, align 4
  %v0_112c8 = load i32, i32* @ip, align 4
  %v1_112cc = load i32, i32* %r1.global-to-local, align 4
  %v2_112cc = add i32 %v1_112cc, 8
  %v3_112cc = inttoptr i32 %v2_112cc to i32*
  store i32 %v3_112c4, i32* %v3_112cc, align 4
  %tmp39 = icmp ult i32 %v0_112c8, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %dec_label_pc_112b4
  %v0_112d4 = load i32, i32* @r5, align 4
  %v1_112d4 = add i32 %v0_112d4, 12
  %v2_112d4 = inttoptr i32 %v1_112d4 to i32*
  %v3_112d4 = load i32, i32* %v2_112d4, align 4
  store i32 %v3_112d4, i32* %r3.global-to-local, align 4
  %v1_112d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_112d8 = add i32 %v1_112d8, 12
  %v3_112d8 = inttoptr i32 %v2_112d8 to i32*
  store i32 %v3_112d4, i32* %v3_112d8, align 4
  %v0_112dc = load i32, i32* @r5, align 4
  %v1_112dc = add i32 %v0_112dc, 16
  %v2_112dc = inttoptr i32 %v1_112dc to i32*
  %v3_112dc = load i32, i32* %v2_112dc, align 4
  store i32 %v3_112dc, i32* %r3.global-to-local, align 4
  %v0_112e0 = load i32, i32* @ip, align 4
  %v1_112e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_112e4 = add i32 %v1_112e4, 16
  %v3_112e4 = inttoptr i32 %v2_112e4 to i32*
  store i32 %v3_112dc, i32* %v3_112e4, align 4
  %tmp40 = icmp ult i32 %v0_112e0, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112d4
  %v0_112ec = load i32, i32* @r5, align 4
  %v1_112ec = add i32 %v0_112ec, 20
  %v2_112ec = inttoptr i32 %v1_112ec to i32*
  %v3_112ec = load i32, i32* %v2_112ec, align 4
  store i32 %v3_112ec, i32* %r3.global-to-local, align 4
  %v1_112f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_112f0 = add i32 %v1_112f0, 20
  %v3_112f0 = inttoptr i32 %v2_112f0 to i32*
  store i32 %v3_112ec, i32* %v3_112f0, align 4
  %v0_112f4 = load i32, i32* @r5, align 4
  %v1_112f4 = add i32 %v0_112f4, 24
  %v2_112f4 = inttoptr i32 %v1_112f4 to i32*
  %v3_112f4 = load i32, i32* %v2_112f4, align 4
  store i32 %v3_112f4, i32* %r3.global-to-local, align 4
  %v1_112f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_112f8 = add i32 %v1_112f8, 24
  %v3_112f8 = inttoptr i32 %v2_112f8 to i32*
  store i32 %v3_112f4, i32* %v3_112f8, align 4
  %v0_112fc = load i32, i32* @ip, align 4
  %v7_112fc = icmp eq i32 %v0_112fc, 9
  br i1 %v7_112fc, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_112ec
  %v1_11300 = load i32, i32* @r5, align 4
  %v2_11300 = add i32 %v1_11300, 28
  %v3_11300 = inttoptr i32 %v2_11300 to i32*
  %v4_11300 = load i32, i32* %v3_11300, align 4
  store i32 %v4_11300, i32* %r3.global-to-local, align 4
  %v2_11304 = load i32, i32* %r1.global-to-local, align 4
  %v3_11304 = add i32 %v2_11304, 28
  %v4_11304 = inttoptr i32 %v3_11304 to i32*
  store i32 %v4_11300, i32* %v4_11304, align 4
  %v1_11308 = load i32, i32* @r5, align 4
  %v2_11308 = add i32 %v1_11308, 32
  %v3_11308 = inttoptr i32 %v2_11308 to i32*
  %v4_11308 = load i32, i32* %v3_11308, align 4
  store i32 %v4_11308, i32* %r3.global-to-local, align 4
  %v2_1130c = load i32, i32* %r1.global-to-local, align 4
  %v3_1130c = add i32 %v2_1130c, 32
  %v4_1130c = inttoptr i32 %v3_1130c to i32*
  store i32 %v4_11308, i32* %v4_1130c, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_112ec, %dec_label_pc_112d4, %dec_label_pc_112b4, %dec_label_pc_112a8, %bb32
  %v0_11310 = load i32, i32* @r5, align 4
  store i32 %v0_11310, i32* @r0, align 4
  %v0_11314 = call i32 @free()
  store i32 %v0_11314, i32* %r0.global-to-local, align 4
  %v0_11318 = load i32, i32* @r7, align 4
  %v1_11318 = add i32 %v0_11318, 8
  store i32 %v1_11318, i32* @r4, align 4
  br label %dec_label_pc_11454

dec_label_pc_11320:                               ; preds = %bb30, %.thread2, %dec_label_pc_11260
  %v0_11334 = phi i32 [ %v3_11290, %.thread2 ], [ %v1_111a8, %bb30 ], [ %v1_11320.pre, %dec_label_pc_11260 ]
  %v0_11320 = load i32, i32* @sb, align 4
  %v2_11320 = sub i32 %v0_11334, %v0_11320
  store i32 %v2_11320, i32* %r1.global-to-local, align 4
  %v0_11328 = load i32, i32* @sl, align 4
  %v1_11328 = add i32 %v0_11328, 4
  %v2_11328 = inttoptr i32 %v1_11328 to i32*
  %v3_11328 = load i32, i32* %v2_11328, align 4
  %tmp41 = icmp ugt i32 %v2_11320, 15
  %v1_11350 = urem i32 %v3_11328, 2
  store i32 %v1_11350, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_11350, label %dec_label_pc_11330

dec_label_pc_11330:                               ; preds = %dec_label_pc_11320
  %v2_11334 = or i32 %v1_11350, %v0_11334
  store i32 %v2_11334, i32* %r3.global-to-local, align 4
  store i32 %v2_11334, i32* %v2_11328, align 4
  %v0_1133c = load i32, i32* @sl, align 4
  %v1_1133c = load i32, i32* %r0.global-to-local, align 4
  %v2_1133c = add i32 %v1_1133c, %v0_1133c
  store i32 %v2_1133c, i32* %r2.global-to-local, align 4
  %v1_11340 = add i32 %v2_1133c, 4
  %v2_11340 = inttoptr i32 %v1_11340 to i32*
  %v3_11340 = load i32, i32* %v2_11340, align 4
  %v1_11344 = or i32 %v3_11340, 1
  store i32 %v1_11344, i32* %r3.global-to-local, align 4
  store i32 %v1_11344, i32* %v2_11340, align 4
  br label %dec_label_pc_11380

dec_label_pc_11350:                               ; preds = %dec_label_pc_11320
  %v2_11354 = add i32 %v0_11328, %v0_11320
  store i32 %v2_11354, i32* %r0.global-to-local, align 4
  %v2_11358 = or i32 %v1_11350, %v0_11320
  store i32 %v2_11358, i32* %r3.global-to-local, align 4
  %v1_1135c = or i32 %v2_11320, 1
  store i32 %v1_1135c, i32* %r2.global-to-local, align 4
  store i32 %v2_11358, i32* %v2_11328, align 4
  %v0_11364 = load i32, i32* %r2.global-to-local, align 4
  %v1_11364 = load i32, i32* %r0.global-to-local, align 4
  %v2_11364 = add i32 %v1_11364, 4
  %v3_11364 = inttoptr i32 %v2_11364 to i32*
  store i32 %v0_11364, i32* %v3_11364, align 4
  %v0_11368 = load i32, i32* %r0.global-to-local, align 4
  %v1_11368 = load i32, i32* %r1.global-to-local, align 4
  %v2_11368 = add i32 %v1_11368, %v0_11368
  store i32 %v2_11368, i32* %r2.global-to-local, align 4
  %v1_1136c = add i32 %v2_11368, 4
  %v2_1136c = inttoptr i32 %v1_1136c to i32*
  %v3_1136c = load i32, i32* %v2_1136c, align 4
  %v1_11370 = or i32 %v3_1136c, 1
  store i32 %v1_11370, i32* %r3.global-to-local, align 4
  store i32 %v1_11370, i32* %v2_1136c, align 4
  %v0_11378 = load i32, i32* %r0.global-to-local, align 4
  %v1_11378 = add i32 %v0_11378, 8
  store i32 %v1_11378, i32* @r0, align 4
  %v0_1137c = call i32 @free()
  store i32 %v0_1137c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %dec_label_pc_11330, %dec_label_pc_11350
  %v0_11380 = load i32, i32* @sl, align 4
  %v1_11380 = add i32 %v0_11380, 8
  store i32 %v1_11380, i32* @r4, align 4
  br label %dec_label_pc_11454

dec_label_pc_11388:                               ; preds = %bb29
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r1.global-to-local, align 4
  %v4_11390 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), align 4
  store i32 %v4_11390, i32* @r8, align 4
  %v2_11394 = inttoptr i32 %v1_111a4 to i32*
  %v3_11394 = load i32, i32* %v2_11394, align 4
  store i32 %v3_11394, i32* @r4, align 4
  %v1_11398 = add i32 %v4_11390, 860
  %v2_11398 = inttoptr i32 %v1_11398 to i32*
  %v3_11398 = load i32, i32* %v2_11398, align 4
  %v1_1139c = add i32 %v3_11394, 4
  %v1_113a0 = add i32 %v3_11398, -1
  store i32 %v1_113a0, i32* %r2.global-to-local, align 4
  %v2_113a4 = add i32 %v1_1139c, %v1_113a0
  %v1_113a8 = load i32, i32* @sb, align 4
  %v2_113a8 = add i32 %v2_113a4, %v1_113a8
  store i32 %v2_113a8, i32* %r3.global-to-local, align 4
  %v2_113ac = sub i32 0, %v3_11398
  %v3_113ac = and i32 %v2_113a8, %v2_113ac
  store i32 %v3_113ac, i32* @r7, align 4
  %v2_113b0 = sub i32 %v3_113ac, %v3_11394
  store i32 %v2_113b0, i32* @fp, align 4
  %v9_113b4 = icmp eq i32 %v1_111a8, %v2_113b0
  br i1 %v9_113b4, label %dec_label_pc_11428, label %dec_label_pc_113bc

dec_label_pc_113bc:                               ; preds = %dec_label_pc_11388
  %v2_113bc = sub i32 %v1_111a4, %v3_11394
  store i32 %v2_113bc, i32* %r0.global-to-local, align 4
  %v2_113c0 = add i32 %v3_11394, %v1_111a8
  store i32 %v2_113c0, i32* %r1.global-to-local, align 4
  store i32 %v3_113ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_113cc = call i32 @mremap(i32 %v2_113bc, i32 %v2_113c0, i32 %v3_113ac, i32 1)
  store i32 %v4_113cc, i32* %r0.global-to-local, align 4
  %v7_113d0 = icmp eq i32 %v4_113cc, -1
  br i1 %v7_113d0, label %dec_label_pc_1141c, label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113bc
  %v1_113d8 = load i32, i32* @r4, align 4
  %v2_113d8 = add i32 %v1_113d8, %v4_113cc
  store i32 %v2_113d8, i32* %r0.global-to-local, align 4
  %v0_113dc = load i32, i32* @fp, align 4
  %v1_113dc = or i32 %v0_113dc, 2
  store i32 %v1_113dc, i32* %r3.global-to-local, align 4
  %v2_113e0 = add i32 %v2_113d8, 4
  %v3_113e0 = inttoptr i32 %v2_113e0 to i32*
  store i32 %v1_113dc, i32* %v3_113e0, align 4
  %v0_113e4 = load i32, i32* @r8, align 4
  %v1_113e4 = add i32 %v0_113e4, 868
  %v2_113e4 = inttoptr i32 %v1_113e4 to i32*
  %v3_113e4 = load i32, i32* %v2_113e4, align 4
  store i32 %v3_113e4, i32* %r3.global-to-local, align 4
  %v1_113e8 = add i32 %v0_113e4, 880
  %v2_113e8 = inttoptr i32 %v1_113e8 to i32*
  %v3_113e8 = load i32, i32* %v2_113e8, align 4
  store i32 %v3_113e8, i32* %r2.global-to-local, align 4
  %v0_113ec = load i32, i32* @r6, align 4
  %v2_113ec = sub i32 %v3_113e4, %v0_113ec
  store i32 %v2_113ec, i32* %r3.global-to-local, align 4
  %v1_113f0 = load i32, i32* @r7, align 4
  %v2_113f0 = add i32 %v1_113f0, %v2_113ec
  store i32 %v2_113f0, i32* %r1.global-to-local, align 4
  %v1_113f4 = add i32 %v0_113e4, 872
  %v2_113f4 = inttoptr i32 %v1_113f4 to i32*
  %v3_113f4 = load i32, i32* %v2_113f4, align 4
  store i32 %v3_113f4, i32* %r3.global-to-local, align 4
  %v1_113fc = add i32 %v0_113e4, 884
  %v2_113fc = inttoptr i32 %v1_113fc to i32*
  %v3_113fc = load i32, i32* %v2_113fc, align 4
  store i32 %v3_113fc, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_113f0, %v3_113e8
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_113d8
  store i32 %v2_113f0, i32* %v2_113e8, align 4
  %v0_11404.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11404.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_113d8, %bb33
  %v1_11404 = phi i32 [ %v0_113e4, %dec_label_pc_113d8 ], [ %v1_11404.pre, %bb33 ]
  %v0_11404 = phi i32 [ %v2_113f0, %dec_label_pc_113d8 ], [ %v0_11404.pre, %bb33 ]
  %v2_11404 = add i32 %v1_11404, 868
  %v3_11404 = inttoptr i32 %v2_11404 to i32*
  store i32 %v0_11404, i32* %v3_11404, align 4
  %v0_11408 = load i32, i32* %r1.global-to-local, align 4
  %v1_11408 = load i32, i32* %r3.global-to-local, align 4
  %v2_11408 = add i32 %v1_11408, %v0_11408
  store i32 %v2_11408, i32* %r1.global-to-local, align 4
  %v1_1140c = load i32, i32* %r2.global-to-local, align 4
  %v0_11410 = load i32, i32* %r0.global-to-local, align 4
  %v1_11410 = add i32 %v0_11410, 8
  store i32 %v1_11410, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_11408, %v1_1140c
  br i1 %tmp43, label %bb35, label %dec_label_pc_11454

bb35:                                             ; preds = %bb34
  %v5_11414 = load i32, i32* @r8, align 4
  %v6_11414 = add i32 %v5_11414, 884
  %v7_11414 = inttoptr i32 %v6_11414 to i32*
  store i32 %v2_11408, i32* %v7_11414, align 4
  br label %dec_label_pc_11454

dec_label_pc_1141c:                               ; preds = %dec_label_pc_113bc
  %v0_1141c = load i32, i32* @sb, align 4
  %v1_1141c = add i32 %v0_1141c, 4
  store i32 %v1_1141c, i32* %r3.global-to-local, align 4
  %v0_11420 = load i32, i32* @r6, align 4
  %v3_11420 = icmp ult i32 %v0_11420, %v1_1141c
  br i1 %v3_11420, label %dec_label_pc_11430, label %dec_label_pc_1141c.dec_label_pc_11428_crit_edge

dec_label_pc_1141c.dec_label_pc_11428_crit_edge:  ; preds = %dec_label_pc_1141c
  %v0_11428.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11428

dec_label_pc_11428:                               ; preds = %dec_label_pc_1141c.dec_label_pc_11428_crit_edge, %dec_label_pc_11388
  %v0_11428 = phi i32 [ %v0_11428.pre, %dec_label_pc_1141c.dec_label_pc_11428_crit_edge ], [ %v0_11190, %dec_label_pc_11388 ]
  store i32 %v0_11428, i32* @r4, align 4
  br label %dec_label_pc_11454

dec_label_pc_11430:                               ; preds = %dec_label_pc_1141c
  %v1_11430 = add i32 %v0_1141c, -7
  store i32 %v1_11430, i32* %r0.global-to-local, align 4
  %v1_11434 = call i32 @malloc(i32 %v1_11430)
  store i32 %v1_11434, i32* @r0, align 4
  store i32 %v1_11434, i32* @r4, align 4
  %v2_11438 = icmp eq i32 %v1_11434, 0
  br i1 %v2_11438, label %dec_label_pc_11454, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_11430
  %v0_11440 = load i32, i32* @r6, align 4
  %v1_11440 = add i32 %v0_11440, -8
  store i32 %v1_11440, i32* @r2, align 4
  %v0_11444 = load i32, i32* @r5, align 4
  store i32 %v0_11444, i32* @r1, align 4
  %v0_11448 = call i32 @memcpy()
  %v0_1144c = load i32, i32* @r5, align 4
  store i32 %v0_1144c, i32* @r0, align 4
  %v0_11450 = call i32 @free()
  store i32 %v0_11450, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11454

dec_label_pc_11454:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_11430, %dec_label_pc_11428, %dec_label_pc_11380, %.thread6, %dec_label_pc_111f0, %dec_label_pc_11440
  store i32 %v2_1113c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v4_11464 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 48) to i32*), align 4
  store i32 %v4_11464, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11464)
  br label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11170, %dec_label_pc_11118, %dec_label_pc_11100, %dec_label_pc_11454
  %v0_11470 = load i32, i32* @r4, align 4
  store i32 %v0_11470, i32* %r0.global-to-local, align 4
  store i32 %v3_110e0, i32* @r4, align 4
  store i32 %v6_110e0, i32* @r5, align 4
  store i32 %v9_110e0, i32* @r6, align 4
  store i32 %v12_110e0, i32* @r7, align 4
  store i32 %v15_110e0, i32* @r8, align 4
  store i32 %v18_110e0, i32* @sb, align 4
  store i32 %v21_110e0, i32* @sl, align 4
  store i32 %v24_110e0, i32* @fp, align 4
  store i32 %v27_110e0, i32* @lr, align 4
  ret i32 %v0_11470

; uselistorder directives
  uselistorder i32 %v2_11408, { 1, 0, 2 }
  uselistorder i32 %v2_113f0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_113cc, { 1, 0, 2 }
  uselistorder i32 %v3_113ac, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11350, { 2, 1, 0 }
  uselistorder i32 %v2_11320, { 1, 0, 2 }
  uselistorder i32 %v0_112b4, { 1, 0 }
  uselistorder i32 %v1_11270, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_111d4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_111cc, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_111b0, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_111a8, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_111a4, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_11194, { 1, 0 }
  uselistorder i32 %v0_11190, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_11168, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 22, 13, 15, 14, 16, 23, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 68) to i32*), { 3, 2, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 16) to i32*), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 72) to i32*), { 2, 0, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 116) to i32*), { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_11470, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11454, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_11380, { 1, 0 }
  uselistorder label %dec_label_pc_11320, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1126c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11260, { 1, 0 }
  uselistorder label %dec_label_pc_1125c, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_11484(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11484:
  %v0_11484 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11484, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_11484
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_11484, %bb
  %v10_114a0 = phi i32 [ %arg1, %dec_label_pc_11484 ], [ 0, %bb ]
  ret i32 %v10_114a0

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_114b4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_114b4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_114b4 = load i32, i32* @r0, align 4
  ret i32 %v2_114b4

bb1:                                              ; preds = %entry
  %v0_114b8 = call i32 @__syscall_error()
  ret i32 %v0_114b8
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_114c4 = load i32, i32* @global_var_25608.250, align 4
  %v2_114c8 = icmp eq i32 %v3_114c4, 0
  br i1 %v2_114c8, label %dec_label_pc_114d0, label %entry.dec_label_pc_114ec_crit_edge

entry.dec_label_pc_114ec_crit_edge:               ; preds = %entry
  %v3_114ec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_114ec

dec_label_pc_114d0:                               ; preds = %entry
  %v0_114d0 = load i32, i32* @r7, align 4
  store i32 %v0_114d0, i32* @ip, align 4
  %v0_114e0 = load i32, i32* @r0, align 4
  %v2_114e0 = icmp ugt i32 %v0_114e0, -4097
  br i1 %v2_114e0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_114ec, %dec_label_pc_114d0
  %merge = phi i32 [ %v0_114e0, %dec_label_pc_114d0 ], [ %v0_11510, %dec_label_pc_114ec ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_114d0
  %v0_114e8 = call i32 @__syscall_error()
  br label %dec_label_pc_114ec

dec_label_pc_114ec:                               ; preds = %entry.dec_label_pc_114ec_crit_edge, %bb8
  %v3_114ec = phi i32 [ %v3_114ec.pre, %entry.dec_label_pc_114ec_crit_edge ], [ %v0_114e8, %bb8 ]
  store i32 %v3_114ec, i32* %stack_var_-24, align 4
  %v9_114ec = load i32, i32* @r2, align 4
  %v12_114ec = load i32, i32* @r3, align 4
  %v15_114ec = load i32, i32* @r7, align 4
  store i32 %v15_114ec, i32* %stack_var_-8, align 4
  %v18_114ec = load i32, i32* @lr, align 4
  %v0_114f0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_114f0, i32* @ip, align 4
  %v2_114f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_114ec, i32* @r2, align 4
  store i32 %v12_114ec, i32* @r3, align 4
  store i32 %v2_114f8, i32* @r7, align 4
  %v1_1150c = call i32 @__libc_disable_asynccancel(i32 %v0_114f0)
  %v0_11510 = load i32, i32* @r7, align 4
  store i32 %v0_11510, i32* @r0, align 4
  %v2_11514 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11514, i32* @r7, align 4
  store i32 %v18_114ec, i32* @lr, align 4
  %v2_11518 = icmp ugt i32 %v0_11510, -4097
  br i1 %v2_11518, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_114ec
  %v0_11520 = call i32 @__syscall_error()
  ret i32 %v0_11520

; uselistorder directives
  uselistorder i32 %v0_11510, { 1, 2, 0 }
  uselistorder label %dec_label_pc_114ec, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v3_1153c = load i32, i32* @r4, align 4
  store i32 %v3_1153c, i32* %stack_var_-16, align 4
  %v4_11540 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 80) to i32*), align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_11548 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 64) to i32*), align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_11550 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 40) to i32*), align 4
  store i32 %v4_11550, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v1_11558 = inttoptr i32 %v4_11540 to i32*
  %v2_11558 = load i32, i32* %v1_11558, align 4
  %v4_1155c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 56) to i32*), align 4
  store i32 %v4_1155c, i32* %lr.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v1_11564 = add i32 %v2_11558, 15
  %v4_11568 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 152) to i32*), align 4
  store i32 %v4_11568, i32* @ip, align 4
  %v1_1156c = load i32, i32* @r0, align 4
  %v2_1156c = add i32 %v1_1156c, %v1_11564
  %v1_11570 = inttoptr i32 %v4_11548 to i32*
  %v2_11570 = load i32, i32* %v1_11570, align 4
  store i32 %v2_11570, i32* %r3.global-to-local, align 4
  %v1_11574 = and i32 %v2_1156c, -16
  store i32 %v1_11574, i32* %v1_11558, align 4
  %v0_1157c = load i32, i32* @r0, align 4
  %v1_1157c = load i32, i32* %r4.global-to-local, align 4
  %v2_1157c = inttoptr i32 %v1_1157c to i32*
  store i32 %v0_1157c, i32* %v2_1157c, align 4
  %v0_11580 = load i32, i32* @r1, align 4
  %v1_11580 = load i32, i32* %lr.global-to-local, align 4
  %v2_11580 = inttoptr i32 %v1_11580 to i32*
  store i32 %v0_11580, i32* %v2_11580, align 4
  %v0_11584 = load i32, i32* %r3.global-to-local, align 4
  %v1_11584 = load i32, i32* @ip, align 4
  %v2_11584 = inttoptr i32 %v1_11584 to i32*
  store i32 %v0_11584, i32* %v2_11584, align 4
  %v2_11588 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11588, i32* %r4.global-to-local, align 4
  %v1_1158c = load i32, i32* @r0, align 4
  ret i32 %v1_1158c
}

define i32 @function_11594(i32 %arg1) local_unnamed_addr {
dec_label_pc_11594:
  %v0_11594 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11594, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11594
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11594, %bb
  %v4_115a4 = phi i32 [ %arg1, %dec_label_pc_11594 ], [ 0, %bb ]
  ret i32 %v4_115a4

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r3.global-to-local, align 4
  %v4_115b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 92) to i32*), align 4
  store i32 %v4_115b8, i32* @lr, align 4
  %v4_115c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 64) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 11364) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 11364), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_115e4 = inttoptr i32 %v4_115c4 to i32*
  store i32 1, i32* %v2_115e4, align 4
  %v0_115e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_115e8 = load i32, i32* @lr, align 4
  %v2_115e8 = inttoptr i32 %v1_115e8 to i32*
  store i32 %v0_115e8, i32* %v2_115e8, align 4
  %v0_115ec = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_11604(i32 %arg1) local_unnamed_addr {
dec_label_pc_11604:
  %v0_11604 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11604, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11604
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11604, %bb
  %v9_1160c = phi i32 [ %arg1, %dec_label_pc_11604 ], [ 0, %bb ]
  ret i32 %v9_1160c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_11618 = call i32 @__aeabi_read_tp()
  %v1_1161c = inttoptr i32 %v0_11618 to i32*
  %v2_1161c = load i32, i32* %v1_1161c, align 4
  %v1_11620 = add i32 %arg1, 4
  %v2_11620 = inttoptr i32 %v1_11620 to i32*
  %v3_11620 = load i32, i32* %v2_11620, align 4
  %v1_11624 = add i32 %v2_1161c, 8
  %v2_11624 = inttoptr i32 %v1_11624 to i32*
  %v3_11624 = load i32, i32* %v2_11624, align 4
  %v2_11628 = add i32 %v3_11624, %v3_11620
  ret i32 %v2_11628
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11634 = load i32, i32* @r4, align 4
  store i32 %v3_11634, i32* %stack_var_-36, align 4
  %v6_11634 = load i32, i32* @r5, align 4
  %v15_11634 = load i32, i32* @r8, align 4
  %v18_11634 = load i32, i32* @sb, align 4
  %v21_11634 = load i32, i32* @sl, align 4
  %v24_11634 = load i32, i32* @fp, align 4
  %v27_11634 = load i32, i32* @lr, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %sl.global-to-local, align 4
  %v4_11644 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 112) to i32*), align 4
  store i32 %v4_11644, i32* %r3.global-to-local, align 4
  %v1_11648 = inttoptr i32 %v4_11644 to i32*
  %v2_11648 = load i32, i32* %v1_11648, align 4
  store i32 %v2_11648, i32* %r2.global-to-local, align 4
  %v2_1164c = icmp eq i32 %v2_11648, 0
  %v0_11654 = load i32, i32* %r0.global-to-local, align 4
  %v0_11658 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11658, i32* %ip.global-to-local, align 4
  br i1 %v2_1164c, label %dec_label_pc_11820, label %dec_label_pc_11660

dec_label_pc_11660:                               ; preds = %entry
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_11664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 164) to i32*), align 4
  store i32 %v4_11664, i32* @lr, align 4
  store i32 %v2_11648, i32* %r1.global-to-local, align 4
  %v1_116ac = inttoptr i32 %v4_11664 to i32*
  %v2_116ac61 = load i32, i32* %v1_116ac, align 4
  %v4_116b062 = mul i32 %v2_116ac61, 32
  %v5_116b063 = add i32 %v4_116b062, %v2_11648
  store i32 %v5_116b063, i32* %r3.global-to-local, align 4
  %v3_116b465 = icmp ult i32 %v2_11648, %v5_116b063
  br i1 %v3_116b465, label %dec_label_pc_11670, label %dec_label_pc_11820.loopexit

dec_label_pc_11670:                               ; preds = %dec_label_pc_11660, %dec_label_pc_116a8
  %v0_1168866 = phi i32 [ %v1_116a8, %dec_label_pc_116a8 ], [ %v2_11648, %dec_label_pc_11660 ]
  %v1_11670 = inttoptr i32 %v0_1168866 to i32*
  %v2_11670 = load i32, i32* %v1_11670, align 4
  store i32 %v2_11670, i32* %r3.global-to-local, align 4
  %v7_11674 = icmp eq i32 %v2_11670, 7
  br i1 %v7_11674, label %dec_label_pc_1167c, label %dec_label_pc_116a8

dec_label_pc_1167c:                               ; preds = %dec_label_pc_11670
  %v1_1167c = add i32 %v0_1168866, 20
  %v2_1167c = inttoptr i32 %v1_1167c to i32*
  %v3_1167c = load i32, i32* %v2_1167c, align 4
  store i32 %v3_1167c, i32* %r3.global-to-local, align 4
  %v1_11680 = add i32 %v0_1168866, 28
  %v2_11680 = inttoptr i32 %v1_11680 to i32*
  %v3_11680 = load i32, i32* %v2_11680, align 4
  store i32 %v3_11680, i32* @r6, align 4
  %v1_11688 = add i32 %v0_1168866, 16
  %v2_11688 = inttoptr i32 %v1_11688 to i32*
  %v3_11688 = load i32, i32* %v2_11688, align 4
  store i32 %v3_11688, i32* %r3.global-to-local, align 4
  %v1_1168c = add i32 %v0_1168866, 8
  %v2_1168c = inttoptr i32 %v1_1168c to i32*
  %v3_1168c = load i32, i32* %v2_1168c, align 4
  store i32 %v3_1168c, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_11680, %v0_11658
  %v0_11658.v3_11680 = select i1 %tmp78, i32 %v0_11658, i32 %v3_11680
  store i32 %v0_11658.v3_11680, i32* %fp.global-to-local, align 4
  %v2_116c4 = icmp eq i32 %v3_11680, 0
  br i1 %v2_116c4, label %dec_label_pc_116ec, label %bb

dec_label_pc_116a8:                               ; preds = %dec_label_pc_11670
  %v1_116a8 = add i32 %v0_1168866, 32
  store i32 %v1_116a8, i32* %r1.global-to-local, align 4
  %v2_116ac = load i32, i32* %v1_116ac, align 4
  %v4_116b0 = mul i32 %v2_116ac, 32
  %v5_116b0 = add i32 %v4_116b0, %v2_11648
  store i32 %v5_116b0, i32* %r3.global-to-local, align 4
  %v3_116b4 = icmp ult i32 %v1_116a8, %v5_116b0
  br i1 %v3_116b4, label %dec_label_pc_11670, label %dec_label_pc_116ac.dec_label_pc_11820.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_1167c
  %v2_116c8 = add i32 %v3_11680, -1
  br label %dec_label_pc_116f0

dec_label_pc_116ec:                               ; preds = %dec_label_pc_1167c, %dec_label_pc_11820
  %v0_11700.pre = phi i32 [ %v0_11700.pre.pre, %dec_label_pc_11820 ], [ ptrtoint (i32* @global_var_222a8.80 to i32), %dec_label_pc_1167c ]
  %v1_116f0.pre = phi i32 [ %v1_116f0.pre.pre, %dec_label_pc_11820 ], [ %v0_11654, %dec_label_pc_1167c ]
  %v1_1171425 = phi i32 [ %v0_11828, %dec_label_pc_11820 ], [ %v0_11658.v3_11680, %dec_label_pc_1167c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_11820 ], [ %v3_1167c, %dec_label_pc_1167c ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_11820 ], [ %v3_11688, %dec_label_pc_1167c ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_11820 ], [ %v3_1168c, %dec_label_pc_1167c ]
  br label %dec_label_pc_116f0

dec_label_pc_116f0:                               ; preds = %bb, %dec_label_pc_116ec
  %storemerge80 = phi i32 [ %v2_116c8, %bb ], [ 0, %dec_label_pc_116ec ]
  %v0_116f0 = phi i32 [ %v2_116c8, %bb ], [ 0, %dec_label_pc_116ec ]
  %storemerge = phi i32 [ %v3_11680, %bb ], [ 1, %dec_label_pc_116ec ]
  %storemerge79 = phi i32 [ %v3_11680, %bb ], [ 1, %dec_label_pc_116ec ]
  %v0_11700 = phi i32 [ ptrtoint (i32* @global_var_222a8.80 to i32), %bb ], [ %v0_11700.pre, %dec_label_pc_116ec ]
  %v1_116f0 = phi i32 [ %v0_11654, %bb ], [ %v1_116f0.pre, %dec_label_pc_116ec ]
  %v1_11714 = phi i32 [ %v0_11658.v3_11680, %bb ], [ %v1_1171425, %dec_label_pc_116ec ]
  %stack_var_-52.3 = phi i32 [ %v3_1167c, %bb ], [ %stack_var_-52.0, %dec_label_pc_116ec ]
  %stack_var_-48.3 = phi i32 [ %v3_11688, %bb ], [ %stack_var_-48.0, %dec_label_pc_116ec ]
  %stack_var_-44.3 = phi i32 [ %v3_1168c, %bb ], [ %stack_var_-44.0, %dec_label_pc_116ec ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_116f0 = add i32 %v1_116f0, %v0_116f0
  %v2_116f4 = udiv i32 %v2_116f0, %storemerge
  store i32 %v2_116f4, i32* %r0.global-to-local, align 4
  %v2_116f8 = mul i32 %v2_116f4, %storemerge
  store i32 %v2_116f8, i32* %sb.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_11700 = add i32 %v0_11700, 80
  %v3_11700 = inttoptr i32 %v2_11700 to i32*
  %v4_11700 = load i32, i32* %v3_11700, align 4
  store i32 %v4_11700, i32* %r3.global-to-local, align 4
  %v1_11704 = inttoptr i32 %v4_11700 to i32*
  %v2_11704 = load i32, i32* %v1_11704, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_1170c = add i32 %v1_11714, 1168
  %v2_11710 = add i32 %v1_1170c, %stack_var_-52.3
  %v2_11714 = add i32 %v2_11710, %v2_116f8
  %v2_11718 = add i32 %v2_11714, %v2_11704
  store i32 %v2_11718, i32* %r0.global-to-local, align 4
  %v1_1171c = call i32 @__GI_sbrk(i32 %v2_11718)
  %v1_11720 = load i32, i32* %fp.global-to-local, align 4
  %v1_11728 = sub i32 0, %v1_11720
  store i32 10852, i32* %r4.global-to-local, align 4
  %v2_11720 = add i32 %v1_1171c, 1167
  %v1_11730 = add i32 %v2_11720, %v1_11720
  %v2_11734 = and i32 %v1_11730, %v1_11728
  store i32 %v2_11734, i32* @r5, align 4
  %v1_1173c = load i32, i32* %sl.global-to-local, align 4
  %v3_1173c = add i32 %v1_1173c, 10852
  %v4_1173c = inttoptr i32 %v3_1173c to i32*
  store i32 62, i32* %v4_1173c, align 4
  %v0_11744 = load i32, i32* @r5, align 4
  %v1_11744 = load i32, i32* %sb.global-to-local, align 4
  %v2_11744 = add i32 %v1_11744, %v0_11744
  store i32 %v2_11744, i32* @ip, align 4
  %v0_11748 = load i32, i32* %sl.global-to-local, align 4
  %v1_11748 = load i32, i32* %r4.global-to-local, align 4
  %v2_11748 = add i32 %v1_11748, %v0_11748
  store i32 %v2_11748, i32* %r4.global-to-local, align 4
  %v2_1174c = add i32 %v0_11748, 12140
  store i32 %v2_1174c, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_11744, i32* @r0, align 4
  %v2_11760 = add i32 %v2_11748, 16
  %v3_11760 = inttoptr i32 %v2_11760 to i32*
  store i32 %v2_11744, i32* %v3_11760, align 4
  %v0_11764 = load i32, i32* %sb.global-to-local, align 4
  %v1_11764 = load i32, i32* %r8.global-to-local, align 4
  %v2_11764 = add i32 %v1_11764, 40
  %v3_11764 = inttoptr i32 %v2_11764 to i32*
  store i32 %v0_11764, i32* %v3_11764, align 4
  %v0_11768 = load i32, i32* @r3, align 4
  %v1_11768 = trunc i32 %v0_11768 to i8
  %v2_11768 = load i32, i32* %r4.global-to-local, align 4
  %v3_11768 = add i32 %v2_11768, 20
  %v4_11768 = inttoptr i32 %v3_11768 to i8*
  store i8 %v1_11768, i8* %v4_11768, align 1
  %v0_1176c = load i32, i32* %r4.global-to-local, align 4
  %v1_1176c = add i32 %v0_1176c, 8
  store i32 %v1_1176c, i32* @r4, align 4
  %v0_11770 = call i32 @memcpy()
  %v0_11778 = load i32, i32* @r4, align 4
  %v1_11778 = load i32, i32* @r5, align 4
  %v2_11778 = inttoptr i32 %v1_11778 to i32*
  store i32 %v0_11778, i32* %v2_11778, align 4
  %v0_1177c = load i32, i32* @r5, align 4
  store i32 %v0_1177c, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_1177c, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_c2c4.261 to i32))
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_11790 = load i32, i32* %sl.global-to-local, align 4
  %v2_11790 = add i32 %v0_11790, 92
  %v3_11790 = inttoptr i32 %v2_11790 to i32*
  %v4_11790 = load i32, i32* %v3_11790, align 4
  store i32 %v4_11790, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 11364, i32* %r1.global-to-local, align 4
  %v2_1179c = add i32 %v0_11790, 64
  %v3_1179c = inttoptr i32 %v2_1179c to i32*
  %v4_1179c = load i32, i32* %v3_1179c, align 4
  store i32 %v4_1179c, i32* %r0.global-to-local, align 4
  %v3_117a4 = add i32 %v0_11790, 11364
  %v4_117a4 = inttoptr i32 %v3_117a4 to i32*
  store i32 64, i32* %v4_117a4, align 4
  %v1_117ac = load i32, i32* %r8.global-to-local, align 4
  %v2_117ac = add i32 %v1_117ac, 20
  %v3_117ac = inttoptr i32 %v2_117ac to i32*
  store i32 %stack_var_-44.3, i32* %v3_117ac, align 4
  %v1_117b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_117b4 = add i32 %v1_117b4, 24
  %v3_117b4 = inttoptr i32 %v2_117b4 to i32*
  store i32 %stack_var_-48.3, i32* %v3_117b4, align 4
  %v1_117bc = load i32, i32* %r0.global-to-local, align 4
  %v2_117bc = inttoptr i32 %v1_117bc to i32*
  store i32 1, i32* %v2_117bc, align 4
  %v1_117c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_117c4 = add i32 %v1_117c4, 28
  %v3_117c4 = inttoptr i32 %v2_117c4 to i32*
  store i32 %stack_var_-52.3, i32* %v3_117c4, align 4
  %v0_117cc = load i32, i32* @r6, align 4
  %v2_117cc = icmp eq i32 %v0_117cc, 0
  %v1_117d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_117d0 = add i32 %v1_117d0, 44
  %v3_117d0 = inttoptr i32 %v2_117d0 to i32*
  store i32 1, i32* %v3_117d0, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_117d8 = load i32, i32* %sl.global-to-local, align 4
  %v1_117d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_117d8 = add i32 %v1_117d8, %v0_117d8
  store i32 %v2_117d8, i32* %r2.global-to-local, align 4
  %v1_117dc = load i32, i32* @r6, align 4
  br i1 %v2_117cc, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_116f0
  store i32 %v1_117dc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_117e834 = load i32, i32* %r8.global-to-local, align 4
  %v2_117e835 = add i32 %v1_117e834, 32
  %v3_117e836 = inttoptr i32 %v2_117e835 to i32*
  store i32 %v1_117dc, i32* %v3_117e836, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_116f0
  %v2_117e0 = add i32 %v1_117dc, -1
  store i32 %v2_117e0, i32* %r0.global-to-local, align 4
  %v1_117e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_117e8 = add i32 %v1_117e8, 32
  %v3_117e8 = inttoptr i32 %v2_117e8 to i32*
  store i32 %v1_117dc, i32* %v3_117e8, align 4
  %v1_117ec = load i32, i32* @r6, align 4
  store i32 %v1_117ec, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_117f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_117f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_117f0 = add i32 %v1_117f0, 28
  %v3_117f0 = inttoptr i32 %v2_117f0 to i32*
  store i32 %v0_117f0, i32* %v3_117f0, align 4
  %v0_117f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_117f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_117f4 = inttoptr i32 %v1_117f4 to i32*
  store i32 %v0_117f4, i32* %v2_117f4, align 4
  %v0_117f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_117f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_117f8 = add i32 %v1_117f8, %v0_117f8
  store i32 %v2_117f8, i32* %r0.global-to-local, align 4
  %v1_117fc = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_117cc, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_11804.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_11804 = phi i32 [ %v0_11804.pre, %._crit_edge ], [ %v1_117fc, %bb54 ]
  %v2_11800 = udiv i32 %v2_117f8, %v1_117fc
  %v2_11804 = load i32, i32* %sb.global-to-local, align 4
  %v3_11804 = mul i32 %v2_11800, %v0_11804
  %v4_11804 = add i32 %v2_11804, %v3_11804
  store i32 %v4_11804, i32* @r0, align 4
  %v0_11808 = load i32, i32* %fp.global-to-local, align 4
  %v2_11808 = icmp ult i32 %v0_11808, 16
  %v0_11808. = select i1 %v2_11808, i32 16, i32 %v0_11808
  store i32 %v0_11808., i32* @r1, align 4
  %v2_11818 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11818, i32* @r4, align 4
  store i32 %v6_11634, i32* @r5, align 4
  store i32 %v15_11634, i32* %r8.global-to-local, align 4
  store i32 %v18_11634, i32* %sb.global-to-local, align 4
  store i32 %v21_11634, i32* %sl.global-to-local, align 4
  store i32 %v24_11634, i32* %fp.global-to-local, align 4
  store i32 %v27_11634, i32* @lr, align 4
  %v0_1181c = call i32 @init_static_tls()
  store i32 %v0_1181c, i32* %r0.global-to-local, align 4
  %v0_11828.pre = load i32, i32* @ip, align 4
  %v1_116f0.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_11700.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11820

dec_label_pc_116ac.dec_label_pc_11820.loopexit_crit_edge: ; preds = %dec_label_pc_116a8
  br label %dec_label_pc_11820.loopexit

dec_label_pc_11820.loopexit:                      ; preds = %dec_label_pc_116ac.dec_label_pc_11820.loopexit_crit_edge, %dec_label_pc_11660
  br label %dec_label_pc_11820

dec_label_pc_11820:                               ; preds = %dec_label_pc_11820.loopexit, %entry, %bb55
  %v0_11700.pre.pre = phi i32 [ ptrtoint (i32* @global_var_222a8.80 to i32), %dec_label_pc_11820.loopexit ], [ ptrtoint (i32* @global_var_222a8.80 to i32), %entry ], [ %v0_11700.pre.pre.pre, %bb55 ]
  %v1_116f0.pre.pre = phi i32 [ %v0_11654, %dec_label_pc_11820.loopexit ], [ %v0_11654, %entry ], [ %v1_116f0.pre.pre.pre, %bb55 ]
  %v0_11828 = phi i32 [ %v0_11658, %dec_label_pc_11820.loopexit ], [ %v0_11658, %entry ], [ %v0_11828.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_11828, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_116ec

; uselistorder directives
  uselistorder i32 %v0_11828, { 1, 0 }
  uselistorder i32 %v1_117dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11748, { 1, 0 }
  uselistorder i32 %v2_11744, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_116a8, { 2, 1, 0 }
  uselistorder i32 %v3_11680, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_1168866, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_116ac, { 1, 0 }
  uselistorder i32 %v0_11658, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_11654, { 1, 2, 0, 3 }
  uselistorder i32 %v2_11648, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 11364, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_11820, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_116f0, { 1, 0 }
  uselistorder label %dec_label_pc_116ec, { 1, 0 }
  uselistorder label %dec_label_pc_11670, { 1, 0 }
}

define i32 @function_11840(i32 %arg1) local_unnamed_addr {
dec_label_pc_11840:
  %v0_11840 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11840, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_11840
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11840, %bb
  %v9_11860 = phi i32 [ %arg1, %dec_label_pc_11840 ], [ 0, %bb ]
  ret i32 %v9_11860

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_1186c = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_1186c
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v4_1187c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 164) to i32*), align 4
  %v4_11884 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 112) to i32*), align 4
  store i32 %v4_11884, i32* %r1.global-to-local, align 4
  %v1_11888 = add i32 %arg1, 44
  %v2_11888 = inttoptr i32 %v1_11888 to i32*
  %v3_11888 = load i32, i32* %v2_11888, align 4
  %v1_1188c = add i32 %arg1, 28
  %v2_1188c = inttoptr i32 %v1_1188c to i32*
  %v3_1188c = load i32, i32* %v2_1188c, align 4
  store i32 %v3_1188c, i32* %r2.global-to-local, align 4
  %v2_11890 = inttoptr i32 %v4_1187c to i32*
  store i32 %v3_11888, i32* %v2_11890, align 4
  %v0_11894 = load i32, i32* %r2.global-to-local, align 4
  %v1_11894 = load i32, i32* %r1.global-to-local, align 4
  %v2_11894 = inttoptr i32 %v1_11894 to i32*
  store i32 %v0_11894, i32* %v2_11894, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 164) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_118a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_118a0:
  %v0_118a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_118a0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_118a0
  %v2_118a0 = load i32, i32* @r4, align 4
  %v5_118a0 = udiv i32 %v2_118a0, 2
  %v6_118a0 = and i32 %v5_118a0, %arg1
  %v5_118a4 = sub nsw i32 32, %v6_118a0
  %v6_118a4 = shl i32 %v6_118a0, %v5_118a4
  %v9_118a4 = and i32 %v6_118a4, %v6_118a0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_118a0, %bb
  %v10_118a4 = phi i32 [ %arg1, %dec_label_pc_118a0 ], [ %v9_118a4, %bb ]
  ret i32 %v10_118a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_118b0 = add i32 %arg1, 40
  store i32 %v1_118b0, i32* %r2.global-to-local, align 4
  %v1_118b4 = inttoptr i32 %v1_118b0 to i32*
  %v2_118b4 = load i32, i32* %v1_118b4, align 4
  store i32 %v2_118b4, i32* %r2.global-to-local, align 4
  %v3_118b4 = add i32 %arg1, 44
  %v4_118b4 = inttoptr i32 %v3_118b4 to i32*
  %v5_118b4 = load i32, i32* %v4_118b4, align 4
  store i32 %v5_118b4, i32* %r3.global-to-local, align 4
  %v0_118b8 = call i32 @__aeabi_read_tp()
  %v1_118bc = inttoptr i32 %v0_118b8 to i32*
  %v2_118bc = load i32, i32* %v1_118bc, align 4
  store i32 %v2_118bc, i32* %r1.global-to-local, align 4
  %v3_118c0 = mul i32 %v5_118b4, 8
  store i32 %v3_118c0, i32* %r3.global-to-local, align 4
  %v1_118c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_118c4 = add i32 %v1_118c4, %v0_118b8
  %v3_118c8 = add i32 %v3_118c0, %v2_118bc
  %v4_118c8 = inttoptr i32 %v3_118c8 to i32*
  store i32 %v2_118c4, i32* %v4_118c8, align 4
  %v0_118cc = load i32, i32* %r3.global-to-local, align 4
  %v1_118cc = load i32, i32* %r1.global-to-local, align 4
  %v2_118cc = add i32 %v1_118cc, %v0_118cc
  store i32 %v2_118cc, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_118d4 = add i32 %v2_118cc, 4
  %v5_118d4 = inttoptr i32 %v4_118d4 to i8*
  store i8 1, i8* %v5_118d4, align 1
  %v0_118d8 = load i32, i32* @r4, align 4
  %v1_118d8 = add i32 %v0_118d8, 20
  store i32 %v1_118d8, i32* %r1.global-to-local, align 4
  %v1_118dc = inttoptr i32 %v1_118d8 to i32*
  %v2_118dc = load i32, i32* %v1_118dc, align 4
  store i32 %v2_118dc, i32* @r1, align 4
  %v3_118dc = add i32 %v0_118d8, 24
  %v4_118dc = inttoptr i32 %v3_118dc to i32*
  %v5_118dc = load i32, i32* %v4_118dc, align 4
  store i32 %v5_118dc, i32* %r2.global-to-local, align 4
  %v5_118e0 = call i32 @__GI_mempcpy(i32 %v2_118c4, i32 %v2_118dc, i32 %v5_118dc, i32 1)
  %v0_118e4 = load i32, i32* @r4, align 4
  %v1_118e4 = add i32 %v0_118e4, 28
  store i32 %v1_118e4, i32* %r3.global-to-local, align 4
  %v1_118e8 = inttoptr i32 %v1_118e4 to i32*
  %v2_118e8 = load i32, i32* %v1_118e8, align 4
  store i32 %v2_118e8, i32* %r2.global-to-local, align 4
  %v3_118e8 = add i32 %v0_118e4, 24
  %v4_118e8 = inttoptr i32 %v3_118e8 to i32*
  %v5_118e8 = load i32, i32* %v4_118e8, align 4
  store i32 %v5_118e8, i32* %r3.global-to-local, align 4
  %v2_118ec = sub i32 %v5_118e8, %v2_118e8
  store i32 %v2_118ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_118f4 = inttoptr i32 %v5_118e0 to i8*
  %v4_118f4 = call i32 @__GI_memset(i8* %v3_118f4, i32 0, i32 %v2_118ec)
  ret i32 %v4_118f4

; uselistorder directives
  uselistorder i32 %v3_118c0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_11944:
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 12192) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_11958 = load i32, i32* @r0, align 4
  %v1_1195c = inttoptr i32 %v0_11958 to i32*
  %v2_1195c = load i32, i32* @r4, align 4
  store i32 %v2_1195c, i32* %v1_1195c, align 4
  %v3_1195c = add i32 %v0_11958, 4
  %v4_1195c = inttoptr i32 %v3_1195c to i32*
  %v5_1195c = load i32, i32* @r5, align 4
  store i32 %v5_1195c, i32* %v4_1195c, align 4
  %v6_1195c = add i32 %v0_11958, 8
  %v7_1195c = inttoptr i32 %v6_1195c to i32*
  %v8_1195c = load i32, i32* @r6, align 4
  store i32 %v8_1195c, i32* %v7_1195c, align 4
  %v9_1195c = add i32 %v0_11958, 12
  %v10_1195c = inttoptr i32 %v9_1195c to i32*
  %v11_1195c = load i32, i32* @r7, align 4
  store i32 %v11_1195c, i32* %v10_1195c, align 4
  %v12_1195c = add i32 %v0_11958, 16
  %v13_1195c = inttoptr i32 %v12_1195c to i32*
  %v14_1195c = load i32, i32* @r8, align 4
  store i32 %v14_1195c, i32* %v13_1195c, align 4
  %v15_1195c = add i32 %v0_11958, 20
  %v16_1195c = inttoptr i32 %v15_1195c to i32*
  %v17_1195c = load i32, i32* @sb, align 4
  store i32 %v17_1195c, i32* %v16_1195c, align 4
  %v18_1195c = add i32 %v0_11958, 24
  %v19_1195c = inttoptr i32 %v18_1195c to i32*
  %v20_1195c = load i32, i32* @sl, align 4
  store i32 %v20_1195c, i32* %v19_1195c, align 4
  %v21_1195c = add i32 %v0_11958, 28
  %v22_1195c = inttoptr i32 %v21_1195c to i32*
  %v23_1195c = load i32, i32* @fp, align 4
  store i32 %v23_1195c, i32* %v22_1195c, align 4
  %v24_1195c = add i32 %v0_11958, 32
  %v25_1195c = inttoptr i32 %v24_1195c to i32*
  %v27_1195c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_1195c, i32* %v25_1195c, align 4
  %v28_1195c = add i32 %v0_11958, 36
  %v29_1195c = inttoptr i32 %v28_1195c to i32*
  %v30_1195c = load i32, i32* @lr, align 4
  store i32 %v30_1195c, i32* %v29_1195c, align 4
  %v0_11960 = call i32 @__sigjmp_save()
  ret i32 %v0_11960

; uselistorder directives
  uselistorder i32 %v0_11958, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1196c = load i32, i32* @r1, align 4
  store i32 %v0_1196c, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_1197c = load i32, i32* @r0, align 4
  store i32 %v0_1197c, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1197c, -4095
  br i1 %tmp, label %dec_label_pc_119a4, label %dec_label_pc_11988

dec_label_pc_11988:                               ; preds = %entry
  %v0_1198c = call i32 @__aeabi_read_tp()
  %v3_11990 = load i16, i16* @global_var_22308.76, align 2
  %v4_11990 = sext i16 %v3_11990 to i32
  store i32 %v4_11990, i32* @r3, align 4
  %v0_11994 = load i32, i32* @r2, align 4
  %v1_11994 = sub i32 0, %v0_11994
  store i32 %v1_11994, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_1199c = add i32 %v4_11990, %v0_1198c
  %v4_1199c = inttoptr i32 %v3_1199c to i32*
  store i32 %v1_11994, i32* %v4_1199c, align 4
  br label %dec_label_pc_119b4

dec_label_pc_119a4:                               ; preds = %entry
  store i32 %v0_1197c, i32* %r7.global-to-local, align 4
  %v2_119a4 = icmp eq i32 %v0_1197c, 0
  br i1 %v2_119a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_119a4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_119a4, %bb
  call void @__pseudo_cond_branch(i1 %v2_119a4, i32 ptrtoint (i32* @global_var_11bb8.430 to i32))
  br label %dec_label_pc_119b4

dec_label_pc_119b4:                               ; preds = %dec_label_pc_11988, %.thread
  %v0_119b4 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_119b4

; uselistorder directives
  uselistorder i32 %v0_1197c, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_119b4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @ioctl() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_119c8 = load i32, i32* @r1, align 4
  %v9_119c8 = load i32, i32* @r3, align 4
  store i32 %v9_119c8, i32* %stack_var_-4, align 4
  %v3_119cc = load i32, i32* @r4, align 4
  store i32 %v3_119cc, i32* %stack_var_-32, align 4
  %v12_119cc = load i32, i32* @r7, align 4
  %v4_119dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_119e4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_119e4, i32* @r3, align 4
  %v2_119e8 = icmp eq i32 %v4_119dc, 0
  %v0_119f0 = load i32, i32* @r0, align 4
  store i32 %v0_119f0, i32* @r4, align 4
  store i32 %v3_119c8, i32* @r5, align 4
  br i1 %v2_119e8, label %dec_label_pc_11a00, label %dec_label_pc_11a38

dec_label_pc_11a00:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_119f0, -4095
  br i1 %tmp, label %dec_label_pc_11a30, label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_11a00
  %v1_11a1c = sub i32 0, %v0_119f0
  %v3_11a20 = load i16, i16* @global_var_22308.76, align 2
  %v4_11a20 = sext i16 %v3_11a20 to i32
  store i32 %v4_11a20, i32* @r3, align 4
  %v0_11a24 = call i32 @__aeabi_read_tp()
  %v2_11a28 = load i32, i32* @r3, align 4
  %v3_11a28 = add i32 %v2_11a28, %v0_11a24
  %v4_11a28 = inttoptr i32 %v3_11a28 to i32*
  store i32 %v1_11a1c, i32* %v4_11a28, align 4
  br label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %dec_label_pc_11a00, %dec_label_pc_11a18
  %v0_11a30 = phi i32 [ %v0_119f0, %dec_label_pc_11a00 ], [ -1, %dec_label_pc_11a18 ]
  br label %dec_label_pc_11a84

dec_label_pc_11a38:                               ; preds = %entry
  %v0_11a38 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11a38, i32* %r6.global-to-local, align 4
  %v0_11a48 = load i32, i32* @r4, align 4
  %tmp15 = icmp ult i32 %v0_11a48, -4095
  br i1 %tmp15, label %dec_label_pc_11a78, label %dec_label_pc_11a60

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a38
  %v1_11a64 = sub i32 0, %v0_11a48
  %v3_11a68 = load i16, i16* @global_var_22308.76, align 2
  %v4_11a68 = sext i16 %v3_11a68 to i32
  store i32 %v4_11a68, i32* @r3, align 4
  %v0_11a6c = call i32 @__aeabi_read_tp()
  %v2_11a70 = load i32, i32* @r3, align 4
  %v3_11a70 = add i32 %v2_11a70, %v0_11a6c
  %v4_11a70 = inttoptr i32 %v3_11a70 to i32*
  store i32 %v1_11a64, i32* %v4_11a70, align 4
  %v0_11a78.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a38, %dec_label_pc_11a60
  %v0_11a7c = phi i32 [ %v0_11a48, %dec_label_pc_11a38 ], [ -1, %dec_label_pc_11a60 ]
  %v0_11a78 = phi i32 [ %v0_11a38, %dec_label_pc_11a38 ], [ %v0_11a78.pre, %dec_label_pc_11a60 ]
  store i32 %v0_11a7c, i32* @r7, align 4
  %v1_11a80 = call i32 @__libc_disable_asynccancel(i32 %v0_11a78)
  %v0_11a84.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11a84

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a30, %dec_label_pc_11a78
  %v0_11a84 = phi i32 [ %v0_11a30, %dec_label_pc_11a30 ], [ %v0_11a84.pre, %dec_label_pc_11a78 ]
  %v2_11a8c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11a8c, i32* @r4, align 4
  store i32 %v12_119cc, i32* @r7, align 4
  ret i32 %v0_11a84

; uselistorder directives
  uselistorder i32 %v0_11a48, { 1, 2, 0 }
  uselistorder i32 %v0_119f0, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_11a84, { 1, 0 }
  uselistorder label %dec_label_pc_11a78, { 1, 0 }
  uselistorder label %dec_label_pc_11a30, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11aa8 = load i32, i32* @r4, align 4
  store i32 %v3_11aa8, i32* %stack_var_-12, align 4
  %v0_11ab8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ab8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ab8, -4095
  br i1 %tmp, label %dec_label_pc_11ae0, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %entry
  %v0_11acc = call i32 @__aeabi_read_tp()
  %v3_11ad0 = load i16, i16* @global_var_22308.76, align 2
  %v4_11ad0 = sext i16 %v3_11ad0 to i32
  %v0_11ad4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ad4 = sub i32 0, %v0_11ad4
  store i32 %v1_11ad4, i32* %r2.global-to-local, align 4
  %v3_11ad8 = add i32 %v4_11ad0, %v0_11acc
  %v4_11ad8 = inttoptr i32 %v3_11ad8 to i32*
  store i32 %v1_11ad4, i32* %v4_11ad8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11ae0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11ae0

dec_label_pc_11ae0:                               ; preds = %entry, %dec_label_pc_11ac8
  %v1_11ae4 = phi i32 [ %v0_11ab8, %entry ], [ -1, %dec_label_pc_11ac8 ]
  %v2_11ae0 = phi i32 [ %v3_11aa8, %entry ], [ %v2_11ae0.pre, %dec_label_pc_11ac8 ]
  store i32 %v2_11ae0, i32* @r4, align 4
  ret i32 %v1_11ae4

; uselistorder directives
  uselistorder i32 %v0_11ab8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ae0, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11aec = load i32, i32* @r4, align 4
  store i32 %v3_11aec, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_11b04 = inttoptr i32 %arg2 to i8*
  %v4_11b04 = call i32 @__GI_memset(i8* %v3_11b04, i32 0, i32 104)
  %v2_11b08 = load i32, i32* %arg1, align 4
  store i32 %v2_11b08, i32* %r3.global-to-local, align 4
  %v3_11b08 = add i32 %tmp, 4
  %v4_11b08 = inttoptr i32 %v3_11b08 to i32*
  %v5_11b08 = load i32, i32* %v4_11b08, align 4
  store i32 %v5_11b08, i32* %r4.global-to-local, align 4
  %v0_11b0c = load i32, i32* %r5.global-to-local, align 4
  %v1_11b0c = inttoptr i32 %v0_11b0c to i32*
  store i32 %v2_11b08, i32* %v1_11b0c, align 4
  %v3_11b0c = add i32 %v0_11b0c, 4
  %v4_11b0c = inttoptr i32 %v3_11b0c to i32*
  %v5_11b0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11b0c, i32* %v4_11b0c, align 4
  %v0_11b10 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b10 = add i32 %v0_11b10, 12
  %v2_11b10 = inttoptr i32 %v1_11b10 to i32*
  %v3_11b10 = load i32, i32* %v2_11b10, align 4
  %v1_11b14 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b14 = add i32 %v1_11b14, 12
  %v3_11b14 = inttoptr i32 %v2_11b14 to i32*
  store i32 %v3_11b10, i32* %v3_11b14, align 4
  %v0_11b18 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b18 = add i32 %v0_11b18, 96
  store i32 %v1_11b18, i32* %r3.global-to-local, align 4
  %v1_11b1c = inttoptr i32 %v1_11b18 to i32*
  %v2_11b1c = load i32, i32* %v1_11b1c, align 4
  store i32 %v2_11b1c, i32* %r3.global-to-local, align 4
  %v3_11b1c = add i32 %v0_11b18, 100
  %v4_11b1c = inttoptr i32 %v3_11b1c to i32*
  %v5_11b1c = load i32, i32* %v4_11b1c, align 4
  store i32 %v5_11b1c, i32* %r4.global-to-local, align 4
  %v1_11b20 = add i32 %v0_11b18, 56
  %v2_11b20 = inttoptr i32 %v1_11b20 to i32*
  %v3_11b20 = load i32, i32* %v2_11b20, align 4
  store i32 %v3_11b20, i32* %r2.global-to-local, align 4
  %v1_11b24 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b24 = add i32 %v1_11b24, 96
  %v3_11b24 = inttoptr i32 %v2_11b24 to i32*
  store i32 %v2_11b1c, i32* %v3_11b24, align 4
  %v0_11b28 = load i32, i32* %r4.global-to-local, align 4
  %v1_11b28 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b28 = add i32 %v1_11b28, 100
  %v3_11b28 = inttoptr i32 %v2_11b28 to i32*
  store i32 %v0_11b28, i32* %v3_11b28, align 4
  %v0_11b2c = load i32, i32* %r6.global-to-local, align 4
  %v1_11b2c = add i32 %v0_11b2c, 24
  store i32 %v1_11b2c, i32* %ip.global-to-local, align 4
  %v1_11b30 = inttoptr i32 %v1_11b2c to i32*
  %v2_11b30 = load i32, i32* %v1_11b30, align 4
  store i32 %v2_11b30, i32* %ip.global-to-local, align 4
  %v3_11b30 = add i32 %v0_11b2c, 28
  %v4_11b30 = inttoptr i32 %v3_11b30 to i32*
  %v5_11b30 = load i32, i32* %v4_11b30, align 4
  store i32 %v5_11b30, i32* %lr.global-to-local, align 4
  %v0_11b34 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b34 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b34 = add i32 %v1_11b34, 56
  %v3_11b34 = inttoptr i32 %v2_11b34 to i32*
  store i32 %v0_11b34, i32* %v3_11b34, align 4
  %v0_11b38 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b38 = add i32 %v0_11b38, 72
  store i32 %v1_11b38, i32* %r3.global-to-local, align 4
  %v1_11b3c = add i32 %v0_11b38, 32
  store i32 %v1_11b3c, i32* %r7.global-to-local, align 4
  %v1_11b40 = inttoptr i32 %v1_11b3c to i32*
  %v2_11b40 = load i32, i32* %v1_11b40, align 4
  store i32 %v2_11b40, i32* %r7.global-to-local, align 4
  %v3_11b40 = add i32 %v0_11b38, 36
  %v4_11b40 = inttoptr i32 %v3_11b40 to i32*
  %v5_11b40 = load i32, i32* %v4_11b40, align 4
  store i32 %v5_11b40, i32* %r8.global-to-local, align 4
  %v1_11b44 = inttoptr i32 %v1_11b38 to i32*
  %v2_11b44 = load i32, i32* %v1_11b44, align 4
  %v3_11b44 = add i32 %v0_11b38, 76
  %v4_11b44 = inttoptr i32 %v3_11b44 to i32*
  %v5_11b44 = load i32, i32* %v4_11b44, align 4
  store i32 %v5_11b44, i32* %r1.global-to-local, align 4
  %v0_11b48 = load i32, i32* %r5.global-to-local, align 4
  %v1_11b48 = add i32 %v0_11b48, 72
  %v1_11b4c = inttoptr i32 %v1_11b48 to i32*
  store i32 %v2_11b44, i32* %v1_11b4c, align 4
  %v3_11b4c = add i32 %v0_11b48, 76
  %v4_11b4c = inttoptr i32 %v3_11b4c to i32*
  %v5_11b4c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11b4c, i32* %v4_11b4c, align 4
  %v0_11b50 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b50 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b50 = add i32 %v1_11b50, 32
  %v3_11b50 = inttoptr i32 %v2_11b50 to i32*
  store i32 %v0_11b50, i32* %v3_11b50, align 4
  %v0_11b54 = load i32, i32* %r8.global-to-local, align 4
  %v1_11b54 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b54 = add i32 %v1_11b54, 36
  %v3_11b54 = inttoptr i32 %v2_11b54 to i32*
  store i32 %v0_11b54, i32* %v3_11b54, align 4
  %v0_11b58 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b58 = add i32 %v0_11b58, 80
  store i32 %v1_11b58, i32* %r3.global-to-local, align 4
  %v1_11b5c = add i32 %v0_11b58, 48
  store i32 %v1_11b5c, i32* %r7.global-to-local, align 4
  %v1_11b60 = inttoptr i32 %v1_11b5c to i32*
  %v2_11b60 = load i32, i32* %v1_11b60, align 4
  store i32 %v2_11b60, i32* %r7.global-to-local, align 4
  %v3_11b60 = add i32 %v0_11b58, 52
  %v4_11b60 = inttoptr i32 %v3_11b60 to i32*
  %v5_11b60 = load i32, i32* %v4_11b60, align 4
  store i32 %v5_11b60, i32* %r8.global-to-local, align 4
  %v1_11b64 = inttoptr i32 %v1_11b58 to i32*
  %v2_11b64 = load i32, i32* %v1_11b64, align 4
  %v3_11b64 = add i32 %v0_11b58, 84
  %v4_11b64 = inttoptr i32 %v3_11b64 to i32*
  %v5_11b64 = load i32, i32* %v4_11b64, align 4
  store i32 %v5_11b64, i32* %r1.global-to-local, align 4
  %v1_11b68 = add i32 %v0_11b58, 16
  %v2_11b68 = inttoptr i32 %v1_11b68 to i32*
  %v3_11b68 = load i32, i32* %v2_11b68, align 4
  store i32 %v3_11b68, i32* %r2.global-to-local, align 4
  %v0_11b6c = load i32, i32* %r5.global-to-local, align 4
  %v1_11b6c = add i32 %v0_11b6c, 80
  %v1_11b70 = inttoptr i32 %v1_11b6c to i32*
  store i32 %v2_11b64, i32* %v1_11b70, align 4
  %v3_11b70 = add i32 %v0_11b6c, 84
  %v4_11b70 = inttoptr i32 %v3_11b70 to i32*
  %v5_11b70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11b70, i32* %v4_11b70, align 4
  %v0_11b74 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b74 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b74 = add i32 %v1_11b74, 48
  %v3_11b74 = inttoptr i32 %v2_11b74 to i32*
  store i32 %v0_11b74, i32* %v3_11b74, align 4
  %v0_11b78 = load i32, i32* %r8.global-to-local, align 4
  %v1_11b78 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b78 = add i32 %v1_11b78, 52
  %v3_11b78 = inttoptr i32 %v2_11b78 to i32*
  store i32 %v0_11b78, i32* %v3_11b78, align 4
  %v0_11b7c = load i32, i32* %r2.global-to-local, align 4
  %v1_11b7c = load i32, i32* %r5.global-to-local, align 4
  %v2_11b7c = add i32 %v1_11b7c, 16
  %v3_11b7c = inttoptr i32 %v2_11b7c to i32*
  store i32 %v0_11b7c, i32* %v3_11b7c, align 4
  %v0_11b80 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b80 = add i32 %v0_11b80, 88
  store i32 %v1_11b80, i32* %r3.global-to-local, align 4
  %v1_11b84 = add i32 %v0_11b80, 20
  %v2_11b84 = inttoptr i32 %v1_11b84 to i32*
  %v3_11b84 = load i32, i32* %v2_11b84, align 4
  store i32 %v3_11b84, i32* %r2.global-to-local, align 4
  %v1_11b88 = inttoptr i32 %v1_11b80 to i32*
  %v2_11b88 = load i32, i32* %v1_11b88, align 4
  %v3_11b88 = add i32 %v0_11b80, 92
  %v4_11b88 = inttoptr i32 %v3_11b88 to i32*
  %v5_11b88 = load i32, i32* %v4_11b88, align 4
  store i32 %v5_11b88, i32* %r1.global-to-local, align 4
  %v1_11b8c = add i32 %v0_11b80, 64
  store i32 %v1_11b8c, i32* %r6.global-to-local, align 4
  %v1_11b90 = inttoptr i32 %v1_11b8c to i32*
  %v2_11b90 = load i32, i32* %v1_11b90, align 4
  store i32 %v2_11b90, i32* %r6.global-to-local, align 4
  %v3_11b90 = add i32 %v0_11b80, 68
  %v4_11b90 = inttoptr i32 %v3_11b90 to i32*
  %v5_11b90 = load i32, i32* %v4_11b90, align 4
  store i32 %v5_11b90, i32* %r7.global-to-local, align 4
  %v0_11b94 = load i32, i32* %r5.global-to-local, align 4
  %v1_11b94 = add i32 %v0_11b94, 88
  store i32 %v1_11b94, i32* %r3.global-to-local, align 4
  %v2_11b98 = add i32 %v0_11b94, 20
  %v3_11b98 = inttoptr i32 %v2_11b98 to i32*
  store i32 %v3_11b84, i32* %v3_11b98, align 4
  %v0_11b9c = load i32, i32* %ip.global-to-local, align 4
  %v1_11b9c = load i32, i32* %r5.global-to-local, align 4
  %v2_11b9c = add i32 %v1_11b9c, 24
  %v3_11b9c = inttoptr i32 %v2_11b9c to i32*
  store i32 %v0_11b9c, i32* %v3_11b9c, align 4
  %v0_11ba0 = load i32, i32* %lr.global-to-local, align 4
  %v1_11ba0 = load i32, i32* %r5.global-to-local, align 4
  %v2_11ba0 = add i32 %v1_11ba0, 28
  %v3_11ba0 = inttoptr i32 %v2_11ba0 to i32*
  store i32 %v0_11ba0, i32* %v3_11ba0, align 4
  %v0_11ba4 = load i32, i32* %r6.global-to-local, align 4
  %v1_11ba4 = load i32, i32* %r5.global-to-local, align 4
  %v2_11ba4 = add i32 %v1_11ba4, 64
  %v3_11ba4 = inttoptr i32 %v2_11ba4 to i32*
  store i32 %v0_11ba4, i32* %v3_11ba4, align 4
  %v0_11ba8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ba8 = load i32, i32* %r5.global-to-local, align 4
  %v2_11ba8 = add i32 %v1_11ba8, 68
  %v3_11ba8 = inttoptr i32 %v2_11ba8 to i32*
  store i32 %v0_11ba8, i32* %v3_11ba8, align 4
  %v0_11bac = load i32, i32* %r3.global-to-local, align 4
  %v1_11bac = inttoptr i32 %v0_11bac to i32*
  store i32 %v2_11b88, i32* %v1_11bac, align 4
  %v3_11bac = add i32 %v0_11bac, 4
  %v4_11bac = inttoptr i32 %v3_11bac to i32*
  %v5_11bac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11bac, i32* %v4_11bac, align 4
  %v2_11bb0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11bb0, i32* %r4.global-to-local, align 4
  ret i32 %v2_11b88

; uselistorder directives
  uselistorder i32 %v0_11b80, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_11b58, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11bb8 = load i32, i32* @r4, align 4
  store i32 %v3_11bb8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_11bd0 = inttoptr i32 %arg2 to i8*
  %v4_11bd0 = call i32 @__GI_memset(i8* %v3_11bd0, i32 0, i32 88)
  %v2_11bd4 = load i32, i32* %arg1, align 4
  %v3_11bd4 = add i32 %tmp, 4
  %v4_11bd4 = inttoptr i32 %v3_11bd4 to i32*
  %v5_11bd4 = load i32, i32* %v4_11bd4, align 4
  store i32 %v5_11bd4, i32* %r4.global-to-local, align 4
  %v0_11bd8 = load i32, i32* %r6.global-to-local, align 4
  %v1_11bd8 = inttoptr i32 %v0_11bd8 to i32*
  store i32 %v2_11bd4, i32* %v1_11bd8, align 4
  %v3_11bd8 = add i32 %v0_11bd8, 4
  %v4_11bd8 = inttoptr i32 %v3_11bd8 to i32*
  %v5_11bd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11bd8, i32* %v4_11bd8, align 4
  %v0_11bdc = load i32, i32* %r5.global-to-local, align 4
  %v1_11bdc = add i32 %v0_11bdc, 32
  %v1_11be0 = inttoptr i32 %v1_11bdc to i32*
  %v2_11be0 = load i32, i32* %v1_11be0, align 4
  %v3_11be0 = add i32 %v0_11bdc, 36
  %v4_11be0 = inttoptr i32 %v3_11be0 to i32*
  %v5_11be0 = load i32, i32* %v4_11be0, align 4
  store i32 %v5_11be0, i32* %r4.global-to-local, align 4
  %v1_11be4 = add i32 %v0_11bdc, 96
  %v2_11be4 = inttoptr i32 %v1_11be4 to i32*
  %v3_11be4 = load i32, i32* %v2_11be4, align 4
  store i32 %v3_11be4, i32* %r2.global-to-local, align 4
  %v1_11be8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11be8 = add i32 %v1_11be8, 32
  %v3_11be8 = inttoptr i32 %v2_11be8 to i32*
  store i32 %v2_11be0, i32* %v3_11be8, align 4
  %v0_11bec = load i32, i32* %r4.global-to-local, align 4
  %v1_11bec = load i32, i32* %r6.global-to-local, align 4
  %v2_11bec = add i32 %v1_11bec, 36
  %v3_11bec = inttoptr i32 %v2_11bec to i32*
  store i32 %v0_11bec, i32* %v3_11bec, align 4
  %v0_11bf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_11bf0 = load i32, i32* %r6.global-to-local, align 4
  %v2_11bf0 = add i32 %v1_11bf0, 12
  %v3_11bf0 = inttoptr i32 %v2_11bf0 to i32*
  store i32 %v0_11bf0, i32* %v3_11bf0, align 4
  %v0_11bf4 = load i32, i32* %r5.global-to-local, align 4
  %v1_11bf4 = add i32 %v0_11bf4, 48
  %v2_11bf4 = inttoptr i32 %v1_11bf4 to i32*
  %v3_11bf4 = load i32, i32* %v2_11bf4, align 4
  %v1_11bf8 = add i32 %v0_11bf4, 24
  store i32 %v1_11bf8, i32* %ip.global-to-local, align 4
  %v1_11bfc = inttoptr i32 %v1_11bf8 to i32*
  %v2_11bfc = load i32, i32* %v1_11bfc, align 4
  store i32 %v2_11bfc, i32* %ip.global-to-local, align 4
  %v3_11bfc = add i32 %v0_11bf4, 28
  %v4_11bfc = inttoptr i32 %v3_11bfc to i32*
  %v5_11bfc = load i32, i32* %v4_11bfc, align 4
  store i32 %v5_11bfc, i32* %lr.global-to-local, align 4
  %v1_11c00 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c00 = add i32 %v1_11c00, 44
  %v3_11c00 = inttoptr i32 %v2_11c00 to i32*
  store i32 %v3_11bf4, i32* %v3_11c00, align 4
  %v0_11c04 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c04 = add i32 %v0_11c04, 64
  %v2_11c04 = inttoptr i32 %v1_11c04 to i32*
  %v3_11c04 = load i32, i32* %v2_11c04, align 4
  %v1_11c08 = add i32 %v0_11c04, 56
  %v2_11c08 = inttoptr i32 %v1_11c08 to i32*
  %v3_11c08 = load i32, i32* %v2_11c08, align 4
  store i32 %v3_11c08, i32* %r2.global-to-local, align 4
  %v1_11c0c = load i32, i32* %r6.global-to-local, align 4
  %v2_11c0c = add i32 %v1_11c0c, 52
  %v3_11c0c = inttoptr i32 %v2_11c0c to i32*
  store i32 %v3_11c04, i32* %v3_11c0c, align 4
  %v0_11c10 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c10 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c10 = add i32 %v1_11c10, 48
  %v3_11c10 = inttoptr i32 %v2_11c10 to i32*
  store i32 %v0_11c10, i32* %v3_11c10, align 4
  %v0_11c14 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c14 = add i32 %v0_11c14, 72
  %v1_11c18 = inttoptr i32 %v1_11c14 to i32*
  %v2_11c18 = load i32, i32* %v1_11c18, align 4
  %v3_11c18 = add i32 %v0_11c14, 76
  %v4_11c18 = inttoptr i32 %v3_11c18 to i32*
  %v5_11c18 = load i32, i32* %v4_11c18, align 4
  store i32 %v5_11c18, i32* %r1.global-to-local, align 4
  %v0_11c1c = load i32, i32* %r6.global-to-local, align 4
  %v1_11c1c = add i32 %v0_11c1c, 56
  %v1_11c20 = inttoptr i32 %v1_11c1c to i32*
  store i32 %v2_11c18, i32* %v1_11c20, align 4
  %v3_11c20 = add i32 %v0_11c1c, 60
  %v4_11c20 = inttoptr i32 %v3_11c20 to i32*
  %v5_11c20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c20, i32* %v4_11c20, align 4
  %v0_11c24 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c24 = add i32 %v0_11c24, 80
  %v1_11c28 = inttoptr i32 %v1_11c24 to i32*
  %v2_11c28 = load i32, i32* %v1_11c28, align 4
  %v3_11c28 = add i32 %v0_11c24, 84
  %v4_11c28 = inttoptr i32 %v3_11c28 to i32*
  %v5_11c28 = load i32, i32* %v4_11c28, align 4
  store i32 %v5_11c28, i32* %r1.global-to-local, align 4
  %v0_11c2c = load i32, i32* %r6.global-to-local, align 4
  %v1_11c2c = add i32 %v0_11c2c, 64
  %v1_11c30 = inttoptr i32 %v1_11c2c to i32*
  store i32 %v2_11c28, i32* %v1_11c30, align 4
  %v3_11c30 = add i32 %v0_11c2c, 68
  %v4_11c30 = inttoptr i32 %v3_11c30 to i32*
  %v5_11c30 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c30, i32* %v4_11c30, align 4
  %v0_11c34 = load i32, i32* %r5.global-to-local, align 4
  %v1_11c34 = add i32 %v0_11c34, 16
  %v2_11c34 = inttoptr i32 %v1_11c34 to i32*
  %v3_11c34 = load i32, i32* %v2_11c34, align 4
  %v1_11c38 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c38 = add i32 %v1_11c38, 16
  %v3_11c38 = inttoptr i32 %v2_11c38 to i32*
  store i32 %v3_11c34, i32* %v3_11c38, align 4
  %v0_11c3c = load i32, i32* %r5.global-to-local, align 4
  %v1_11c3c = add i32 %v0_11c3c, 88
  %v1_11c40 = add i32 %v0_11c3c, 20
  %v2_11c40 = inttoptr i32 %v1_11c40 to i32*
  %v3_11c40 = load i32, i32* %v2_11c40, align 4
  store i32 %v3_11c40, i32* %r2.global-to-local, align 4
  %v1_11c44 = inttoptr i32 %v1_11c3c to i32*
  %v2_11c44 = load i32, i32* %v1_11c44, align 4
  %v3_11c44 = add i32 %v0_11c3c, 92
  %v4_11c44 = inttoptr i32 %v3_11c44 to i32*
  %v5_11c44 = load i32, i32* %v4_11c44, align 4
  store i32 %v5_11c44, i32* %r1.global-to-local, align 4
  %v0_11c48 = load i32, i32* %r6.global-to-local, align 4
  %v1_11c48 = add i32 %v0_11c48, 72
  %v1_11c4c = inttoptr i32 %v1_11c48 to i32*
  store i32 %v2_11c44, i32* %v1_11c4c, align 4
  %v3_11c4c = add i32 %v0_11c48, 76
  %v4_11c4c = inttoptr i32 %v3_11c4c to i32*
  %v5_11c4c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11c4c, i32* %v4_11c4c, align 4
  %v0_11c50 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c50 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c50 = add i32 %v1_11c50, 20
  %v3_11c50 = inttoptr i32 %v2_11c50 to i32*
  store i32 %v0_11c50, i32* %v3_11c50, align 4
  %v0_11c54 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c54 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c54 = add i32 %v1_11c54, 24
  %v3_11c54 = inttoptr i32 %v2_11c54 to i32*
  store i32 %v0_11c54, i32* %v3_11c54, align 4
  %v0_11c58 = load i32, i32* %lr.global-to-local, align 4
  %v1_11c58 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c58 = add i32 %v1_11c58, 28
  %v3_11c58 = inttoptr i32 %v2_11c58 to i32*
  store i32 %v0_11c58, i32* %v3_11c58, align 4
  %v2_11c5c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11c5c, i32* %r4.global-to-local, align 4
  ret i32 %v2_11c44

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_11c68 = load i32, i32* @r5, align 4
  %v12_11c68 = load i32, i32* @r7, align 4
  %v1_11c6c = add i32 %arg3, 14
  %v2_11c74 = ptrtoint i32* %stack_var_-72 to i32
  %v1_11c78 = and i32 %v1_11c6c, -8
  %v2_11c7c = sub i32 %v2_11c74, %v1_11c78
  %v1_11c80 = add i32 %v2_11c7c, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_11cc4, label %dec_label_pc_11ca8

dec_label_pc_11ca8:                               ; preds = %entry
  %v1_11cac = sub i32 0, %arg1
  %v3_11cb0 = load i16, i16* @global_var_22308.76, align 2
  %v4_11cb0 = sext i16 %v3_11cb0 to i32
  %v0_11cb4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_11cbc = add i32 %v4_11cb0, %v0_11cb4
  %v4_11cbc = inttoptr i32 %v3_11cbc to i32*
  store i32 %v1_11cac, i32* %v4_11cbc, align 4
  br label %dec_label_pc_11d94

dec_label_pc_11cc4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_11d94, label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cc4
  %v2_11ccc = add i32 %v1_11c80, %arg1
  store i32 %v2_11ccc, i32* %r1.global-to-local, align 4
  %v2_11cd0 = add i32 %tmp, %arg3
  store i32 %v1_11c80, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11d7c

dec_label_pc_11cec:                               ; preds = %dec_label_pc_11d7c
  %v1_11cec = add i32 %v0_11d4c, 16
  %v2_11cec = inttoptr i32 %v1_11cec to i16*
  %v3_11cec = load i16, i16* %v2_11cec, align 2
  %v4_11cec = zext i16 %v3_11cec to i32
  %v1_11cf0 = add nsw i32 %v4_11cec, -19
  store i32 %v1_11cf0, i32* @r2, align 4
  %v1_11cf4 = add nuw nsw i32 %v4_11cec, 7
  %v1_11cf8 = and i32 %v1_11cf4, 131064
  store i32 %v1_11cf8, i32* @ip, align 4
  %v2_11d00 = add i32 %v1_11cf8, %v0_11d54
  store i32 %v2_11d00, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_11d00, %v2_11cd0
  br i1 %tmp24, label %dec_label_pc_11d0c, label %dec_label_pc_11d48

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11cec
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_11d14 = load i32, i32* %r8.global-to-local, align 4
  %v0_11d18 = load i32, i32* %sb.global-to-local, align 4
  %v1_11d1c = load i32, i32* @sp, align 4
  %v2_11d1c = inttoptr i32 %v1_11d1c to i32*
  store i32 0, i32* %v2_11d1c, align 4
  %v4_11d20 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_11d14, i32 %v0_11d18)
  %v0_11d24 = load i32, i32* @r5, align 4
  %v1_11d24 = load i32, i32* %sl.global-to-local, align 4
  %v9_11d24 = icmp eq i32 %v0_11d24, %v1_11d24
  br i1 %v9_11d24, label %dec_label_pc_11d2c, label %dec_label_pc_11d90

dec_label_pc_11d2c:                               ; preds = %dec_label_pc_11d0c
  %v0_11d30 = call i32 @__aeabi_read_tp()
  %v3_11d34 = load i16, i16* @global_var_22308.76, align 2
  %v4_11d34 = sext i16 %v3_11d34 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_11d40 = add i32 %v4_11d34, %v0_11d30
  %v4_11d40 = inttoptr i32 %v3_11d40 to i32*
  store i32 22, i32* %v4_11d40, align 4
  br label %dec_label_pc_11d94

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11cec
  %v1_11d48 = inttoptr i32 %v0_11d4c to i32*
  %v2_11d48 = load i32, i32* %v1_11d48, align 4
  %v3_11d48 = add i32 %v0_11d4c, 4
  %v4_11d48 = inttoptr i32 %v3_11d48 to i32*
  %v5_11d48 = load i32, i32* %v4_11d48, align 4
  store i32 %v5_11d48, i32* @r4, align 4
  %v1_11d4c = add i32 %v0_11d4c, 8
  store i32 %v1_11d4c, i32* %r8.global-to-local, align 4
  %v1_11d50 = inttoptr i32 %v1_11d4c to i32*
  %v2_11d50 = load i32, i32* %v1_11d50, align 4
  store i32 %v2_11d50, i32* %r8.global-to-local, align 4
  %v3_11d50 = add i32 %v0_11d4c, 12
  %v4_11d50 = inttoptr i32 %v3_11d50 to i32*
  %v5_11d50 = load i32, i32* %v4_11d50, align 4
  store i32 %v5_11d50, i32* %sb.global-to-local, align 4
  %v1_11d54 = inttoptr i32 %v0_11d54 to i32*
  store i32 %v2_11d48, i32* %v1_11d54, align 4
  %v3_11d54 = add i32 %v0_11d54, 4
  %v4_11d54 = inttoptr i32 %v3_11d54 to i32*
  %v5_11d54 = load i32, i32* @r4, align 4
  store i32 %v5_11d54, i32* %v4_11d54, align 4
  %v0_11d58 = load i32, i32* %r8.global-to-local, align 4
  %v1_11d58 = load i32, i32* @r5, align 4
  %v2_11d58 = add i32 %v1_11d58, 8
  %v3_11d58 = inttoptr i32 %v2_11d58 to i32*
  store i32 %v0_11d58, i32* %v3_11d58, align 4
  %v0_11d5c = load i32, i32* %sb.global-to-local, align 4
  %v1_11d5c = load i32, i32* @r5, align 4
  %v2_11d5c = add i32 %v1_11d5c, 12
  %v3_11d5c = inttoptr i32 %v2_11d5c to i32*
  store i32 %v0_11d5c, i32* %v3_11d5c, align 4
  %v0_11d60 = load i32, i32* @ip, align 4
  %v1_11d60 = trunc i32 %v0_11d60 to i16
  %v2_11d60 = load i32, i32* @r5, align 4
  %v3_11d60 = add i32 %v2_11d60, 16
  %v4_11d60 = inttoptr i32 %v3_11d60 to i16*
  store i16 %v1_11d60, i16* %v4_11d60, align 2
  %v0_11d64 = load i32, i32* @r7, align 4
  %v1_11d64 = add i32 %v0_11d64, 18
  %v2_11d64 = inttoptr i32 %v1_11d64 to i8*
  %v3_11d64 = load i8, i8* %v2_11d64, align 1
  %v4_11d64 = zext i8 %v3_11d64 to i32
  store i32 %v4_11d64, i32* @r3, align 4
  %v2_11d68 = load i32, i32* @r5, align 4
  %v3_11d68 = add i32 %v2_11d68, 18
  %v4_11d68 = inttoptr i32 %v3_11d68 to i8*
  store i8 %v3_11d64, i8* %v4_11d68, align 1
  %v0_11d6c = call i32 @memcpy()
  %v0_11d70 = load i32, i32* @r7, align 4
  %v1_11d70 = add i32 %v0_11d70, 16
  %v2_11d70 = inttoptr i32 %v1_11d70 to i16*
  %v3_11d70 = load i16, i16* %v2_11d70, align 2
  %v4_11d70 = zext i16 %v3_11d70 to i32
  %v0_11d74 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11d74, i32* @r5, align 4
  %v2_11d78 = add i32 %v4_11d70, %v0_11d70
  store i32 %v2_11d78, i32* @r7, align 4
  br label %dec_label_pc_11d7c

dec_label_pc_11d7c:                               ; preds = %dec_label_pc_11ccc, %dec_label_pc_11d48
  %v0_11d54 = phi i32 [ %tmp, %dec_label_pc_11ccc ], [ %v0_11d74, %dec_label_pc_11d48 ]
  %v0_11d4c = phi i32 [ %v1_11c80, %dec_label_pc_11ccc ], [ %v2_11d78, %dec_label_pc_11d48 ]
  %v3_11d80 = icmp ult i32 %v0_11d4c, %v2_11ccc
  %v1_11d84 = add i32 %v0_11d54, 19
  store i32 %v1_11d84, i32* @r0, align 4
  %v1_11d88 = add i32 %v0_11d4c, 19
  store i32 %v1_11d88, i32* @r1, align 4
  br i1 %v3_11d80, label %dec_label_pc_11cec, label %dec_label_pc_11d90.loopexit

dec_label_pc_11d90.loopexit:                      ; preds = %dec_label_pc_11d7c
  %v0_11d90.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11d90

dec_label_pc_11d90:                               ; preds = %dec_label_pc_11d90.loopexit, %dec_label_pc_11d0c
  %v1_11d90 = phi i32 [ %v0_11d54, %dec_label_pc_11d90.loopexit ], [ %v0_11d24, %dec_label_pc_11d0c ]
  %v0_11d90 = phi i32 [ %v0_11d90.pre, %dec_label_pc_11d90.loopexit ], [ %v1_11d24, %dec_label_pc_11d0c ]
  %v2_11d90 = sub i32 %v1_11d90, %v0_11d90
  store i32 %v2_11d90, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11d94

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11cc4, %dec_label_pc_11d2c, %dec_label_pc_11ca8, %dec_label_pc_11d90
  %v0_11d94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_11c68, i32* @r5, align 4
  store i32 %v12_11c68, i32* @r7, align 4
  ret i32 %v0_11d94

; uselistorder directives
  uselistorder i32 %v0_11d4c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_11d54, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_11c80, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %arg1, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_11d94, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11d7c, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11dac = load i32, i32* @r4, align 4
  store i32 %v3_11dac, i32* %stack_var_-12, align 4
  %v0_11db0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11db0 = inttoptr i32 %v0_11db0 to i16*
  %v2_11db0 = load i16, i16* %v1_11db0, align 2
  %v3_11db0 = zext i16 %v2_11db0 to i32
  store i32 %v3_11db0, i32* @r3, align 4
  %v1_11db4 = and i32 %v3_11db0, 4
  store i32 %v1_11db4, i32* @r5, align 4
  %v2_11db4 = icmp eq i32 %v1_11db4, 0
  store i32 %v0_11db0, i32* @r4, align 4
  br i1 %v2_11db4, label %dec_label_pc_11dc8, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_11dc8:                               ; preds = %entry
  %v1_11dc8 = icmp slt i32 %arg2, 0
  br i1 %v1_11dc8, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_11dc8
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_11dc8, %bb18
  %v1_11dd0 = add i32 %v0_11db0, 4
  %v2_11dd0 = inttoptr i32 %v1_11dd0 to i32*
  %v3_11dd0 = load i32, i32* %v2_11dd0, align 4
  store i32 %v3_11dd0, i32* %r0.global-to-local, align 4
  %v1_11dd4 = call i32 @__libc_read(i32 %v3_11dd0)
  store i32 %v1_11dd4, i32* %r0.global-to-local, align 4
  %v5_11ddc = icmp sgt i32 %v1_11dd4, 0
  br i1 %v5_11ddc, label %.thread7, label %dec_label_pc_11de0

dec_label_pc_11de0:                               ; preds = %bb19
  %v2_11dd8 = icmp eq i32 %v1_11dd4, 0
  %v0_11de0 = load i32, i32* @r4, align 4
  %v1_11de0 = inttoptr i32 %v0_11de0 to i16*
  %v2_11de0 = load i16, i16* %v1_11de0, align 2
  br i1 %v2_11dd8, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_11de0
  %v2_11de4 = or i16 %v2_11de0, 4
  store i16 %v2_11de4, i16* %v1_11de0, align 2
  %v1_11e00.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_11de0
  %v2_11de8 = or i16 %v2_11de0, 8
  store i16 %v2_11de8, i16* %v1_11de0, align 2
  %v1_11df4 = load i32, i32* @r5, align 4
  store i32 %v1_11df4, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_11e00 = phi i32 [ %v1_11e00.pre, %bb20 ], [ 0, %bb ], [ %v1_11dd4, %bb19 ], [ %v1_11df4, %bb21 ]
  %v2_11dfc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11dfc, i32* @r4, align 4
  ret i32 %v1_11e00

; uselistorder directives
  uselistorder i16 %v2_11de0, { 1, 0 }
  uselistorder i32 %v1_11dd4, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v15_11e04 = load i32, i32* @r8, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_11ec82 = icmp eq i32 %arg3, 0
  store i1 %v2_11ec82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ec82, label %dec_label_pc_11ed0, label %dec_label_pc_11e20

dec_label_pc_11e20:                               ; preds = %entry, %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge
  %v0_11e2c = phi i32 [ %v0_11e2c.pre, %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge ], [ %tmp, %entry ]
  %v0_11e28 = phi i32 [ %v5_11e38, %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge ], [ %arg2, %entry ]
  %v3_11e20 = phi i32 [ %v3_11e20.pre, %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge ], [ 2147483647, %entry ]
  %v0_11e24.in = phi i32 [ %v5_11e3c, %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge ], [ %arg3, %entry ]
  %v3_11e24 = phi i32 [ %v5_11e3c, %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge ], [ %arg3, %entry ]
  %v0_11e24 = icmp slt i32 %v0_11e24.in, 0
  %storemerge = select i1 %v0_11e24, i32 %v3_11e20, i32 %v3_11e24
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_11e28, i32* %r1.global-to-local, align 4
  %v1_11e2c = add i32 %v0_11e2c, 4
  %v2_11e2c = inttoptr i32 %v1_11e2c to i32*
  %v3_11e2c = load i32, i32* %v2_11e2c, align 4
  %v3_11e30 = call i32 @__GI___libc_write(i32 %v3_11e2c, i32 %v0_11e28)
  %v1_11e34 = icmp slt i32 %v3_11e30, 0
  %v2_11e34 = icmp eq i32 %v3_11e30, 0
  store i1 %v2_11e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11e34, label %dec_label_pc_11e44, label %dec_label_pc_11ec8thread-pre-split

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e20
  %v0_11e44 = load i32, i32* @r4, align 4
  %v1_11e44 = inttoptr i32 %v0_11e44 to i16*
  %v2_11e44 = load i16, i16* %v1_11e44, align 2
  %v1_11e48 = or i16 %v2_11e44, 8
  store i16 %v1_11e48, i16* %v1_11e44, align 2
  store i32 66728, i32* %r3.global-to-local, align 4
  %v0_11e54 = call i32 @__aeabi_read_tp()
  %v3_11e58 = load i16, i16* @global_var_22308.76, align 2
  %v4_11e58 = sext i16 %v3_11e58 to i32
  store i32 %v4_11e58, i32* %r3.global-to-local, align 4
  %v2_11e5c = add i32 %v4_11e58, %v0_11e54
  %v3_11e5c = inttoptr i32 %v2_11e5c to i32*
  %v4_11e5c = load i32, i32* %v3_11e5c, align 4
  store i32 %v4_11e5c, i32* %r3.global-to-local, align 4
  %v7_11e60 = icmp eq i32 %v4_11e5c, 4
  store i1 %v7_11e60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e60, label %dec_label_pc_11e6c, label %bb21

bb21:                                             ; preds = %dec_label_pc_11e44
  %v8_11e64 = icmp eq i32 %v4_11e5c, 11
  store i1 %v8_11e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11e64, label %dec_label_pc_11e6c, label %dec_label_pc_11ed0

dec_label_pc_11e6c:                               ; preds = %dec_label_pc_11e44, %bb21
  %v0_11e6c = load i32, i32* @r4, align 4
  %v1_11e6c = add i32 %v0_11e6c, 8
  store i32 %v1_11e6c, i32* %r2.global-to-local, align 4
  %v1_11e70 = inttoptr i32 %v1_11e6c to i32*
  %v2_11e70 = load i32, i32* %v1_11e70, align 4
  store i32 %v2_11e70, i32* %r2.global-to-local, align 4
  %v3_11e70 = add i32 %v0_11e6c, 12
  %v4_11e70 = inttoptr i32 %v3_11e70 to i32*
  %v5_11e70 = load i32, i32* %v4_11e70, align 4
  store i32 %v5_11e70, i32* %r3.global-to-local, align 4
  %v2_11e74 = sub i32 %v5_11e70, %v2_11e70
  store i32 %v2_11e74, i32* %r1.global-to-local, align 4
  %v9_11e74 = icmp eq i32 %v5_11e70, %v2_11e70
  store i1 %v9_11e74, i1* %cpsr_z.global-to-local, align 1
  %v0_11ec0.pre = load i32, i32* @r5, align 4
  br i1 %v9_11e74, label %dec_label_pc_11ec0, label %dec_label_pc_11e7c

dec_label_pc_11e7c:                               ; preds = %dec_label_pc_11e6c
  %v3_11e7c = icmp ult i32 %v2_11e74, %v0_11ec0.pre
  %v9_11e7c = icmp eq i32 %v2_11e74, %v0_11ec0.pre
  store i1 %v9_11e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11e7c, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_11e7c
  store i32 %v0_11ec0.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_11e7c, %bb22, %dec_label_pc_11ea4
  %v2_11e90 = phi i32 [ %v1_11ea8, %dec_label_pc_11ea4 ], [ %v2_11e70, %bb22 ], [ %v2_11e70, %dec_label_pc_11e7c ]
  %v0_11e84 = load i32, i32* @r6, align 4
  %v1_11e84 = inttoptr i32 %v0_11e84 to i8*
  %v2_11e84 = load i8, i8* %v1_11e84, align 1
  %v3_11e84 = zext i8 %v2_11e84 to i32
  store i32 %v3_11e84, i32* %r3.global-to-local, align 4
  %v7_11e88 = icmp eq i8 %v2_11e84, 10
  store i1 %v7_11e88, i1* %cpsr_z.global-to-local, align 1
  %v1_11e8c = add i32 %v0_11e84, 1
  store i32 %v1_11e8c, i32* @r6, align 4
  %v3_11e90 = inttoptr i32 %v2_11e90 to i8*
  store i8 %v2_11e84, i8* %v3_11e90, align 1
  %v0_11e94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e94, label %dec_label_pc_11e98, label %dec_label_pc_11ea4

dec_label_pc_11e98:                               ; preds = %.preheader
  %v0_11e98 = load i32, i32* @r4, align 4
  %v1_11e98 = inttoptr i32 %v0_11e98 to i16*
  %v2_11e98 = load i16, i16* %v1_11e98, align 2
  %v3_11e98 = zext i16 %v2_11e98 to i32
  store i32 %v3_11e98, i32* %r3.global-to-local, align 4
  %v1_11e9c = and i32 %v3_11e98, 256
  %v2_11e9c = icmp eq i32 %v1_11e9c, 0
  store i1 %v2_11e9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e9c, label %dec_label_pc_11ea4, label %dec_label_pc_11e98.dec_label_pc_11eb0_crit_edge

dec_label_pc_11e98.dec_label_pc_11eb0_crit_edge:  ; preds = %dec_label_pc_11e98
  %v0_11eb4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11eb0

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11e98, %.preheader
  %v0_11ea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11ea4 = add i32 %v0_11ea4, -1
  store i32 %v1_11ea4, i32* %r1.global-to-local, align 4
  %v7_11ea4 = icmp eq i32 %v0_11ea4, 1
  store i1 %v7_11ea4, i1* %cpsr_z.global-to-local, align 1
  %v0_11ea8 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ea8 = add i32 %v0_11ea8, 1
  store i32 %v1_11ea8, i32* %r2.global-to-local, align 4
  br i1 %v7_11ea4, label %dec_label_pc_11ea4.dec_label_pc_11eb0_crit_edge, label %.preheader

dec_label_pc_11ea4.dec_label_pc_11eb0_crit_edge:  ; preds = %dec_label_pc_11ea4
  %v0_11eb0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11e98.dec_label_pc_11eb0_crit_edge, %dec_label_pc_11ea4.dec_label_pc_11eb0_crit_edge
  %v0_11eb4 = phi i32 [ %v1_11ea8, %dec_label_pc_11ea4.dec_label_pc_11eb0_crit_edge ], [ %v0_11eb4.pre, %dec_label_pc_11e98.dec_label_pc_11eb0_crit_edge ]
  %v0_11eb0 = phi i32 [ %v0_11eb0.pre, %dec_label_pc_11ea4.dec_label_pc_11eb0_crit_edge ], [ %v0_11e98, %dec_label_pc_11e98.dec_label_pc_11eb0_crit_edge ]
  %v1_11eb0 = add i32 %v0_11eb0, 8
  %v2_11eb0 = inttoptr i32 %v1_11eb0 to i32*
  %v3_11eb0 = load i32, i32* %v2_11eb0, align 4
  store i32 %v3_11eb0, i32* %r3.global-to-local, align 4
  %v2_11eb4 = add i32 %v0_11eb0, 16
  %v3_11eb4 = inttoptr i32 %v2_11eb4 to i32*
  store i32 %v0_11eb4, i32* %v3_11eb4, align 4
  %v0_11eb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_11eb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_11eb8 = sub i32 %v1_11eb8, %v0_11eb8
  store i32 %v2_11eb8, i32* %r3.global-to-local, align 4
  %v1_11ebc = load i32, i32* @r5, align 4
  %v2_11ebc = sub i32 %v1_11ebc, %v2_11eb8
  br label %dec_label_pc_11ec0

dec_label_pc_11ec0:                               ; preds = %dec_label_pc_11e6c, %dec_label_pc_11eb0
  %v0_11ec0 = phi i32 [ %v2_11ebc, %dec_label_pc_11eb0 ], [ %v0_11ec0.pre, %dec_label_pc_11e6c ]
  %v1_11ec0 = load i32, i32* @r7, align 4
  %v2_11ec0 = sub i32 %v1_11ec0, %v0_11ec0
  store i32 %v2_11ec0, i32* @r7, align 4
  br label %dec_label_pc_11ed0

dec_label_pc_11ec8thread-pre-split:               ; preds = %dec_label_pc_11e20
  %v3_11e38 = load i32, i32* @r6, align 4
  %v5_11e38 = add i32 %v3_11e38, %v3_11e30
  store i32 %v5_11e38, i32* @r6, align 4
  %v4_11e3c = load i32, i32* @r5, align 4
  %v5_11e3c = sub i32 %v4_11e3c, %v3_11e30
  store i32 %v5_11e3c, i32* @r5, align 4
  %v2_11ec8 = icmp eq i32 %v5_11e3c, 0
  store i1 %v2_11ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ec8, label %dec_label_pc_11ed0, label %dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge

dec_label_pc_11ec8thread-pre-split.dec_label_pc_11e20_crit_edge: ; preds = %dec_label_pc_11ec8thread-pre-split
  %v3_11e20.pre = load i32, i32* @r8, align 4
  %v0_11e2c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11e20

dec_label_pc_11ed0:                               ; preds = %dec_label_pc_11ec8thread-pre-split, %entry, %bb21, %dec_label_pc_11ec0
  %v0_11ed0 = load i32, i32* @r7, align 4
  store i32 %v15_11e04, i32* @r8, align 4
  ret i32 %v0_11ed0

; uselistorder directives
  uselistorder i32 %v5_11e3c, { 1, 3, 0, 2 }
  uselistorder i32 %v5_11e38, { 1, 0 }
  uselistorder i32 %v0_11eb0, { 1, 0 }
  uselistorder i32 %v1_11ea8, { 0, 2, 1 }
  uselistorder i32 %v0_11ea4, { 1, 0 }
  uselistorder i32 %v0_11ec0.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_11e70, { 1, 0, 2 }
  uselistorder i32 %v2_11e70, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_11e30, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11e28, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_11ed0, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_11ec0, { 1, 0 }
  uselistorder label %dec_label_pc_11eb0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11e6c, { 1, 0 }
  uselistorder label %dec_label_pc_11e20, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ee0 = load i32, i32* @r4, align 4
  store i32 %v3_11ee0, i32* %stack_var_-8, align 4
  %v1_11ee4 = add i32 %arg1, 8
  %v1_11ee8 = inttoptr i32 %v1_11ee4 to i32*
  %v2_11ee8 = load i32, i32* %v1_11ee8, align 4
  store i32 %v2_11ee8, i32* @r1, align 4
  %v3_11ee8 = add i32 %arg1, 12
  %v4_11ee8 = inttoptr i32 %v3_11ee8 to i32*
  %v5_11ee8 = load i32, i32* %v4_11ee8, align 4
  %v2_11eec = sub i32 %v5_11ee8, %v2_11ee8
  store i32 %v2_11eec, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_11ef4 = inttoptr i32 %arg1 to i16*
  %v4_11ef4 = call i32 @__stdio_READ(i16* %v3_11ef4, i32 %v2_11ee8, i32 %v2_11eec)
  %v0_11ef8 = load i32, i32* @r4, align 4
  %v1_11ef8 = add i32 %v0_11ef8, 8
  %v2_11ef8 = inttoptr i32 %v1_11ef8 to i32*
  %v3_11ef8 = load i32, i32* %v2_11ef8, align 4
  store i32 %v3_11ef8, i32* %r2.global-to-local, align 4
  %v2_11efc = add i32 %v3_11ef8, %v4_11ef4
  %v2_11f00 = add i32 %v0_11ef8, 20
  %v3_11f00 = inttoptr i32 %v2_11f00 to i32*
  store i32 %v2_11efc, i32* %v3_11f00, align 4
  %v0_11f04 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f04 = load i32, i32* @r4, align 4
  %v2_11f04 = add i32 %v1_11f04, 16
  %v3_11f04 = inttoptr i32 %v2_11f04 to i32*
  store i32 %v0_11f04, i32* %v3_11f04, align 4
  %v2_11f08 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11f08, i32* @r4, align 4
  ret i32 %v4_11ef4

; uselistorder directives
  uselistorder i32 %v4_11ef4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11f10 = load i32, i32* @r4, align 4
  store i32 %v3_11f10, i32* %stack_var_-12, align 4
  %v0_11f14 = load i32, i32* @r0, align 4
  %v1_11f14 = inttoptr i32 %v0_11f14 to i16*
  %v2_11f14 = load i16, i16* %v1_11f14, align 2
  %v3_11f14 = zext i16 %v2_11f14 to i32
  store i32 %v3_11f14, i32* %r3.global-to-local, align 4
  %v0_11f18 = load i32, i32* @r1, align 4
  %v2_11f18 = and i32 %v0_11f18, %v3_11f14
  %v4_11f18 = icmp eq i32 %v2_11f18, 0
  store i32 %v0_11f14, i32* @r4, align 4
  br i1 %v4_11f18, label %dec_label_pc_11f28, label %dec_label_pc_11f38

dec_label_pc_11f28:                               ; preds = %entry
  %v1_11f28 = and i32 %v3_11f14, 2176
  %v2_11f28 = icmp eq i32 %v1_11f28, 0
  br i1 %v2_11f28, label %dec_label_pc_11f30, label %dec_label_pc_11f44

dec_label_pc_11f30:                               ; preds = %dec_label_pc_11f28
  %v2_11f30 = or i32 %v0_11f18, %v3_11f14
  store i32 %v2_11f30, i32* %r3.global-to-local, align 4
  %v1_11f34 = trunc i32 %v2_11f30 to i16
  store i16 %v1_11f34, i16* %v1_11f14, align 2
  %v0_11f38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11f38

dec_label_pc_11f38:                               ; preds = %entry, %dec_label_pc_11f30
  %v0_11f38 = phi i32 [ %v0_11f14, %entry ], [ %v0_11f38.pre, %dec_label_pc_11f30 ]
  %v1_11f38 = inttoptr i32 %v0_11f38 to i16*
  %v2_11f38 = load i16, i16* %v1_11f38, align 2
  %v3_11f38 = zext i16 %v2_11f38 to i32
  store i32 %v3_11f38, i32* %r3.global-to-local, align 4
  %v1_11f3c = and i32 %v3_11f38, 16
  store i32 %v1_11f3c, i32* %r5.global-to-local, align 4
  %v2_11f3c = icmp eq i32 %v1_11f3c, 0
  br i1 %v2_11f3c, label %dec_label_pc_11f6c, label %dec_label_pc_11f44

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11f28, %dec_label_pc_11f38
  store i32 66484, i32* %r3.global-to-local, align 4
  %v0_11f48 = call i32 @__aeabi_read_tp()
  store i32 %v0_11f48, i32* %r0.global-to-local, align 4
  %v3_11f4c = load i16, i16* @global_var_22308.76, align 2
  %v4_11f4c = sext i16 %v3_11f4c to i32
  store i32 %v4_11f4c, i32* %r3.global-to-local, align 4
  %v3_11f54 = add i32 %v4_11f4c, %v0_11f48
  %v4_11f54 = inttoptr i32 %v3_11f54 to i32*
  store i32 9, i32* %v4_11f54, align 4
  br label %dec_label_pc_11f58

dec_label_pc_11f58:                               ; preds = %dec_label_pc_11f74, %dec_label_pc_11f44
  %v0_11f58 = load i32, i32* @r4, align 4
  %v1_11f58 = inttoptr i32 %v0_11f58 to i16*
  %v2_11f58 = load i16, i16* %v1_11f58, align 2
  %v3_11f58 = zext i16 %v2_11f58 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_11f60 = or i32 %v3_11f58, 8
  store i32 %v1_11f60, i32* %r3.global-to-local, align 4
  %v1_11f64 = trunc i32 %v1_11f60 to i16
  store i16 %v1_11f64, i16* %v1_11f58, align 2
  %v1_11fac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11fa4

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f38
  %v1_11f6c = and i32 %v3_11f38, 64
  %v2_11f6c = icmp eq i32 %v1_11f6c, 0
  br i1 %v2_11f6c, label %dec_label_pc_11f94, label %dec_label_pc_11f74

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11f6c
  %v0_11f74 = call i32 @__stdio_wcommit()
  store i32 %v0_11f74, i32* %r0.global-to-local, align 4
  %v2_11f78 = icmp eq i32 %v0_11f74, 0
  br i1 %v2_11f78, label %dec_label_pc_11f80, label %dec_label_pc_11f58

dec_label_pc_11f80:                               ; preds = %dec_label_pc_11f74
  %v0_11f80 = load i32, i32* @r4, align 4
  %v1_11f80 = inttoptr i32 %v0_11f80 to i16*
  %v2_11f80 = load i16, i16* %v1_11f80, align 2
  %v3_11f80 = zext i16 %v2_11f80 to i32
  store i32 %v3_11f80, i32* %r3.global-to-local, align 4
  %v1_11f84 = add i32 %v0_11f80, 8
  %v2_11f84 = inttoptr i32 %v1_11f84 to i32*
  %v3_11f84 = load i32, i32* %v2_11f84, align 4
  %v1_11f88 = and i32 %v3_11f80, 65471
  store i32 %v1_11f88, i32* %r3.global-to-local, align 4
  %v2_11f8c = add i32 %v0_11f80, 28
  %v3_11f8c = inttoptr i32 %v2_11f8c to i32*
  store i32 %v3_11f84, i32* %v3_11f8c, align 4
  %v0_11f90 = load i32, i32* %r3.global-to-local, align 4
  %v1_11f90 = trunc i32 %v0_11f90 to i16
  %v2_11f90 = load i32, i32* @r4, align 4
  %v3_11f90 = inttoptr i32 %v2_11f90 to i16*
  store i16 %v1_11f90, i16* %v3_11f90, align 2
  %v0_11f94.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11f94

dec_label_pc_11f94:                               ; preds = %dec_label_pc_11f6c, %dec_label_pc_11f80
  %v2_11f9c = phi i32 [ %v0_11f38, %dec_label_pc_11f6c ], [ %v0_11f94.pre, %dec_label_pc_11f80 ]
  %v1_11f94 = inttoptr i32 %v2_11f9c to i16*
  %v2_11f94 = load i16, i16* %v1_11f94, align 2
  %v3_11f94 = zext i16 %v2_11f94 to i32
  %v1_11f98 = or i32 %v3_11f94, 1
  store i32 %v1_11f98, i32* %r3.global-to-local, align 4
  %v1_11f9c = trunc i32 %v1_11f98 to i16
  store i16 %v1_11f9c, i16* %v1_11f94, align 2
  %v0_11fa0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11fa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11fa4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f58, %dec_label_pc_11f94
  %v1_11fac = phi i32 [ %v1_11fac.pre, %dec_label_pc_11f58 ], [ %v0_11fa0, %dec_label_pc_11f94 ]
  %v2_11fa8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11fa8, i32* @r4, align 4
  ret i32 %v1_11fac

; uselistorder directives
  uselistorder i32 %v3_11f14, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11fa4, { 1, 0 }
  uselistorder label %dec_label_pc_11f94, { 1, 0 }
  uselistorder label %dec_label_pc_11f44, { 1, 0 }
  uselistorder label %dec_label_pc_11f38, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_11fb4 = load i32, i32* @r4, align 4
  %v6_11fb4 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_11fc4 = call i32 @memcpy()
  %v0_11fc8 = load i32, i32* @r5, align 4
  %v1_11fc8 = load i32, i32* @r4, align 4
  %v2_11fc8 = add i32 %v1_11fc8, %v0_11fc8
  store i32 %v3_11fb4, i32* @r4, align 4
  store i32 %v6_11fb4, i32* @r5, align 4
  ret i32 %v2_11fc8
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_11fdc = urem i32 %arg1, 256
  %v0_11ff42 = load i32, i32* @r0, align 4
  %v1_11ff43 = urem i32 %v0_11ff42, 4
  %v2_11ff44 = icmp eq i32 %v1_11ff43, 0
  br i1 %v2_11ff44, label %dec_label_pc_11ffc, label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %entry, %dec_label_pc_11ff0
  %v0_11ff0 = phi i32 [ %v1_11ff0, %dec_label_pc_11ff0 ], [ %v0_11ff42, %entry ]
  %v1_11fe4 = inttoptr i32 %v0_11ff0 to i8*
  %v2_11fe4 = load i8, i8* %v1_11fe4, align 1
  %v3_11fe4 = zext i8 %v2_11fe4 to i32
  %v9_11fe8 = icmp eq i32 %v3_11fe4, %v1_11fdc
  br i1 %v9_11fe8, label %dec_label_pc_12078, label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11fe4
  %v1_11ff0 = add i32 %v0_11ff0, 1
  %v1_11ff4 = urem i32 %v1_11ff0, 4
  %v2_11ff4 = icmp eq i32 %v1_11ff4, 0
  br i1 %v2_11ff4, label %dec_label_pc_11ffc, label %dec_label_pc_11fe4

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11ff0, %entry
  %v0_12000 = phi i32 [ %v0_11ff42, %entry ], [ %v1_11ff0, %dec_label_pc_11ff0 ]
  %v4_11ffc = mul nuw nsw i32 %v1_11fdc, 256
  %v5_11ffc = or i32 %v4_11ffc, %v1_11fdc
  %v4_12004 = mul i32 %v5_11ffc, 65536
  %v5_12004 = or i32 %v4_12004, %v5_11ffc
  br label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %dec_label_pc_12068, %dec_label_pc_12008, %dec_label_pc_11ffc
  %v0_1204c = phi i32 [ %v0_12000, %dec_label_pc_11ffc ], [ %v4_12008, %dec_label_pc_12008 ], [ %v4_12008, %dec_label_pc_12068 ]
  %v1_12008 = inttoptr i32 %v0_1204c to i32*
  %v2_12008 = load i32, i32* %v1_12008, align 4
  %v4_12008 = add i32 %v0_1204c, 4
  %v2_12010 = xor i32 %v2_12008, %v5_12004
  %v2_12014 = add i32 %v2_12010, 2130640639
  %v1_1201c = sub i32 -1, %v2_12010
  %v2_12020 = xor i32 %v2_12014, %v1_1201c
  %v2_12024 = and i32 %v2_12020, -2130640640
  %v2_12028 = icmp eq i32 %v2_12024, 0
  br i1 %v2_12028, label %dec_label_pc_12008, label %dec_label_pc_12030

dec_label_pc_12030:                               ; preds = %dec_label_pc_12008
  %v2_12030 = inttoptr i32 %v0_1204c to i8*
  %v3_12030 = load i8, i8* %v2_12030, align 1
  %v4_12030 = zext i8 %v3_12030 to i32
  %v9_12038 = icmp eq i32 %v4_12030, %v1_11fdc
  %v1_1203c = add i32 %v0_1204c, 3
  br i1 %v9_12038, label %dec_label_pc_12078, label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %dec_label_pc_12030
  %v1_12044 = add i32 %v0_1204c, 1
  %v2_12044 = inttoptr i32 %v1_12044 to i8*
  %v3_12044 = load i8, i8* %v2_12044, align 1
  %v4_12044 = zext i8 %v3_12044 to i32
  %v9_12048 = icmp eq i32 %v4_12044, %v1_11fdc
  br i1 %v9_12048, label %bb, label %dec_label_pc_12058

bb:                                               ; preds = %dec_label_pc_12044
  br label %dec_label_pc_12078

dec_label_pc_12058:                               ; preds = %dec_label_pc_12044
  %v1_12058 = add i32 %v0_1204c, 2
  %v2_12058 = inttoptr i32 %v1_12058 to i8*
  %v3_12058 = load i8, i8* %v2_12058, align 1
  %v4_12058 = zext i8 %v3_12058 to i32
  %v9_1205c = icmp eq i32 %v4_12058, %v1_11fdc
  br i1 %v9_1205c, label %dec_label_pc_12078, label %dec_label_pc_12068

dec_label_pc_12068:                               ; preds = %dec_label_pc_12058
  %v2_12068 = inttoptr i32 %v1_1203c to i8*
  %v3_12068 = load i8, i8* %v2_12068, align 1
  %v4_12068 = zext i8 %v3_12068 to i32
  %v9_1206c = icmp eq i32 %v4_12068, %v1_11fdc
  br i1 %v9_1206c, label %dec_label_pc_12074, label %dec_label_pc_12008

dec_label_pc_12074:                               ; preds = %dec_label_pc_12068
  br label %dec_label_pc_12078

dec_label_pc_12078:                               ; preds = %dec_label_pc_11fe4, %dec_label_pc_12058, %dec_label_pc_12030, %bb, %dec_label_pc_12074
  %v1_1207c = phi i32 [ %v1_1203c, %dec_label_pc_12074 ], [ %v1_12044, %bb ], [ %v1_12058, %dec_label_pc_12058 ], [ %v0_1204c, %dec_label_pc_12030 ], [ %v0_11ff0, %dec_label_pc_11fe4 ]
  ret i32 %v1_1207c

; uselistorder directives
  uselistorder i32 %v4_12008, { 1, 0 }
  uselistorder i32 %v0_1204c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_11ffc, { 1, 0 }
  uselistorder i32 %v1_11ff0, { 1, 0, 2 }
  uselistorder i32 %v0_11ff42, { 2, 1, 0 }
  uselistorder i32 %v1_11fdc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12078, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_11fe4, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_12088 = icmp eq i32 %arg2, 3
  store i1 %v7_12088, i1* %cpsr_z.global-to-local, align 1
  %v0_1208c = load i32, i32* @lr, align 4
  store i32 %v0_1208c, i32* %stack_var_-4, align 4
  %v1_12090 = add i32 %arg1, -1
  store i32 %v1_12090, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1210c, label %dec_label_pc_12098

dec_label_pc_12098:                               ; preds = %entry
  %v3_12098 = udiv i32 %arg2, 4
  store i32 %v3_12098, i32* %lr.global-to-local, align 4
  %v0_1209c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_120e8, %dec_label_pc_12098
  %v2_120a4 = phi i32 [ %v6_120dc, %dec_label_pc_120e8 ], [ %v1_12090, %dec_label_pc_12098 ]
  %v0_1209c = phi i32 [ %v1_120ec, %dec_label_pc_120e8 ], [ %v0_1209c.pre, %dec_label_pc_12098 ]
  %v1_1209c = inttoptr i32 %v0_1209c to i8*
  %v2_1209c = load i8, i8* %v1_1209c, align 1
  %v3_1209c = zext i8 %v2_1209c to i32
  store i32 %v3_1209c, i32* %r3.global-to-local, align 4
  %v2_120a0 = icmp eq i8 %v2_1209c, 0
  store i1 %v2_120a0, i1* %cpsr_z.global-to-local, align 1
  %v3_120a4 = add i32 %v2_120a4, 1
  %v4_120a4 = inttoptr i32 %v3_120a4 to i8*
  store i8 %v2_1209c, i8* %v4_120a4, align 1
  %v5_120a4 = load i32, i32* @ip, align 4
  %v6_120a4 = add i32 %v5_120a4, 1
  store i32 %v6_120a4, i32* @ip, align 4
  %v0_120a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120a8, label %dec_label_pc_120f8, label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %dec_label_pc_1209c
  %v0_120ac = load i32, i32* @r1, align 4
  %v1_120ac = add i32 %v0_120ac, 1
  %v2_120ac = inttoptr i32 %v1_120ac to i8*
  %v3_120ac = load i8, i8* %v2_120ac, align 1
  %v4_120ac = zext i8 %v3_120ac to i32
  store i32 %v4_120ac, i32* %r3.global-to-local, align 4
  %v2_120b0 = icmp eq i8 %v3_120ac, 0
  store i1 %v2_120b0, i1* %cpsr_z.global-to-local, align 1
  %v3_120b4 = add i32 %v5_120a4, 2
  %v4_120b4 = inttoptr i32 %v3_120b4 to i8*
  store i8 %v3_120ac, i8* %v4_120b4, align 1
  %v5_120b4 = load i32, i32* @ip, align 4
  %v6_120b4 = add i32 %v5_120b4, 1
  store i32 %v6_120b4, i32* @ip, align 4
  %v0_120b8 = load i32, i32* @r1, align 4
  %v1_120b8 = add i32 %v0_120b8, 1
  store i32 %v1_120b8, i32* %r1.global-to-local, align 4
  %v0_120bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120bc, label %dec_label_pc_120f8, label %dec_label_pc_120c0

dec_label_pc_120c0:                               ; preds = %dec_label_pc_120ac
  %v1_120c0 = add i32 %v0_120b8, 2
  %v2_120c0 = inttoptr i32 %v1_120c0 to i8*
  %v3_120c0 = load i8, i8* %v2_120c0, align 1
  %v4_120c0 = zext i8 %v3_120c0 to i32
  store i32 %v4_120c0, i32* %r3.global-to-local, align 4
  %v2_120c4 = icmp eq i8 %v3_120c0, 0
  store i1 %v2_120c4, i1* %cpsr_z.global-to-local, align 1
  %v3_120c8 = add i32 %v5_120b4, 2
  %v4_120c8 = inttoptr i32 %v3_120c8 to i8*
  store i8 %v3_120c0, i8* %v4_120c8, align 1
  %v5_120c8 = load i32, i32* @ip, align 4
  %v6_120c8 = add i32 %v5_120c8, 1
  store i32 %v6_120c8, i32* @ip, align 4
  %v0_120cc = load i32, i32* %r1.global-to-local, align 4
  %v1_120cc = add i32 %v0_120cc, 1
  store i32 %v1_120cc, i32* %r1.global-to-local, align 4
  %v0_120d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120d0, label %dec_label_pc_120f8, label %dec_label_pc_120d4

dec_label_pc_120d4:                               ; preds = %dec_label_pc_120c0
  %v1_120d4 = add i32 %v0_120cc, 2
  %v2_120d4 = inttoptr i32 %v1_120d4 to i8*
  %v3_120d4 = load i8, i8* %v2_120d4, align 1
  %v4_120d4 = zext i8 %v3_120d4 to i32
  store i32 %v4_120d4, i32* %r3.global-to-local, align 4
  %v2_120d8 = icmp eq i8 %v3_120d4, 0
  store i1 %v2_120d8, i1* %cpsr_z.global-to-local, align 1
  %v3_120dc = add i32 %v5_120c8, 2
  %v4_120dc = inttoptr i32 %v3_120dc to i8*
  store i8 %v3_120d4, i8* %v4_120dc, align 1
  %v5_120dc = load i32, i32* @ip, align 4
  %v6_120dc = add i32 %v5_120dc, 1
  store i32 %v6_120dc, i32* @ip, align 4
  %v0_120e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_120e0 = add i32 %v0_120e0, 1
  store i32 %v1_120e0, i32* %r1.global-to-local, align 4
  %v0_120e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_120e4, label %dec_label_pc_120f8, label %dec_label_pc_120e8

dec_label_pc_120e8:                               ; preds = %dec_label_pc_120d4
  %v0_120e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_120e8 = add i32 %v0_120e8, -1
  store i32 %v1_120e8, i32* %lr.global-to-local, align 4
  %v7_120e8 = icmp eq i32 %v0_120e8, 1
  store i1 %v7_120e8, i1* %cpsr_z.global-to-local, align 1
  %v1_120ec = add i32 %v0_120e0, 2
  store i32 %v1_120ec, i32* @r1, align 4
  br i1 %v7_120e8, label %dec_label_pc_1210c, label %dec_label_pc_1209c

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120d4, %dec_label_pc_120c0, %dec_label_pc_120ac, %dec_label_pc_1209c
  %v1_120f8 = phi i32 [ %v6_120dc, %dec_label_pc_120d4 ], [ %v6_120c8, %dec_label_pc_120c0 ], [ %v6_120b4, %dec_label_pc_120ac ], [ %v6_120a4, %dec_label_pc_1209c ]
  %v2_120f81 = sub i32 %arg1, %v1_120f8
  %v2_120fc = add i32 %v2_120f81, %arg2
  %v1_12100 = add i32 %v2_120fc, -1
  store i32 %v1_12100, i32* %r3.global-to-local, align 4
  %v7_12100 = icmp eq i32 %v2_120fc, 1
  store i1 %v7_12100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12100, label %dec_label_pc_1213c, label %dec_label_pc_1212c

dec_label_pc_1210c:                               ; preds = %dec_label_pc_120e8, %entry
  %v2_1211c7 = phi i32 [ %v1_12090, %entry ], [ %v6_120dc, %dec_label_pc_120e8 ]
  %v1_1210c = urem i32 %arg2, 4
  store i32 %v1_1210c, i32* %r3.global-to-local, align 4
  %v2_1210c = icmp eq i32 %v1_1210c, 0
  store i1 %v2_1210c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1210c, label %dec_label_pc_1213c, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_1210c, %dec_label_pc_12124.dec_label_pc_12114_crit_edge
  %v2_1211c = phi i32 [ %v6_1211c, %dec_label_pc_12124.dec_label_pc_12114_crit_edge ], [ %v2_1211c7, %dec_label_pc_1210c ]
  %v0_12118 = phi i32 [ %v0_12118.pre, %dec_label_pc_12124.dec_label_pc_12114_crit_edge ], [ %v1_1210c, %dec_label_pc_1210c ]
  %v0_12114 = load i32, i32* @r1, align 4
  %v1_12114 = inttoptr i32 %v0_12114 to i8*
  %v2_12114 = load i8, i8* %v1_12114, align 1
  %v3_12114 = zext i8 %v2_12114 to i32
  store i32 %v3_12114, i32* %r2.global-to-local, align 4
  %v5_12114 = add i32 %v0_12114, 1
  store i32 %v5_12114, i32* @r1, align 4
  %v1_12118 = add i32 %v0_12118, -1
  store i32 %v1_12118, i32* %r3.global-to-local, align 4
  %v7_12118 = icmp eq i32 %v0_12118, 1
  store i1 %v7_12118, i1* %cpsr_z.global-to-local, align 1
  %v3_1211c = add i32 %v2_1211c, 1
  %v4_1211c = inttoptr i32 %v3_1211c to i8*
  store i8 %v2_12114, i8* %v4_1211c, align 1
  %v5_1211c = load i32, i32* @ip, align 4
  %v6_1211c = add i32 %v5_1211c, 1
  store i32 %v6_1211c, i32* @ip, align 4
  %v0_12120 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12120, label %dec_label_pc_1213c, label %dec_label_pc_12124

dec_label_pc_12124:                               ; preds = %dec_label_pc_12114
  %v0_12124 = load i32, i32* %r2.global-to-local, align 4
  %v2_12124 = icmp eq i32 %v0_12124, 0
  store i1 %v2_12124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12124, label %dec_label_pc_1212c, label %dec_label_pc_12124.dec_label_pc_12114_crit_edge

dec_label_pc_12124.dec_label_pc_12114_crit_edge:  ; preds = %dec_label_pc_12124
  %v0_12118.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12114

dec_label_pc_1212c:                               ; preds = %dec_label_pc_12124, %dec_label_pc_120f8
  %v2_1213410 = phi i32 [ %v1_120f8, %dec_label_pc_120f8 ], [ %v6_1211c, %dec_label_pc_12124 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %dec_label_pc_12130.dec_label_pc_12130_crit_edge, %dec_label_pc_1212c
  %v2_12134 = phi i32 [ %v6_12134, %dec_label_pc_12130.dec_label_pc_12130_crit_edge ], [ %v2_1213410, %dec_label_pc_1212c ]
  %v0_12134.off0 = phi i8 [ %extract.t, %dec_label_pc_12130.dec_label_pc_12130_crit_edge ], [ 0, %dec_label_pc_1212c ]
  %v0_12130 = load i32, i32* %r3.global-to-local, align 4
  %v1_12130 = add i32 %v0_12130, -1
  store i32 %v1_12130, i32* %r3.global-to-local, align 4
  %v7_12130 = icmp eq i32 %v0_12130, 1
  store i1 %v7_12130, i1* %cpsr_z.global-to-local, align 1
  %v3_12134 = add i32 %v2_12134, 1
  %v4_12134 = inttoptr i32 %v3_12134 to i8*
  store i8 %v0_12134.off0, i8* %v4_12134, align 1
  %v5_12134 = load i32, i32* @ip, align 4
  %v6_12134 = add i32 %v5_12134, 1
  store i32 %v6_12134, i32* @ip, align 4
  %v0_12138 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12138, label %dec_label_pc_1213c, label %dec_label_pc_12130.dec_label_pc_12130_crit_edge

dec_label_pc_12130.dec_label_pc_12130_crit_edge:  ; preds = %dec_label_pc_12130
  %v0_12134.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_12134.pre to i8
  br label %dec_label_pc_12130

dec_label_pc_1213c:                               ; preds = %dec_label_pc_12114, %dec_label_pc_12130, %dec_label_pc_120f8, %dec_label_pc_1210c
  %v2_1213c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1213c, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_12134, { 1, 0 }
  uselistorder i32 %v0_12130, { 1, 0 }
  uselistorder i32 %v6_1211c, { 0, 2, 1 }
  uselistorder i32 %v1_1210c, { 2, 1, 0 }
  uselistorder i32 %v2_120fc, { 1, 0 }
  uselistorder i32 %v1_120ec, { 1, 0 }
  uselistorder i32 %v0_120e8, { 1, 0 }
  uselistorder i32 %v6_120dc, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1213c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_12114, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12144 = load i32, i32* @r4, align 4
  %v6_12144 = load i32, i32* @r5, align 4
  %v15_12144 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1215c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1215c, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_121d41 = load i32, i32* @r0, align 4
  %v1_121d42 = inttoptr i32 %v0_121d41 to i8*
  %v2_121d43 = load i8, i8* %v1_121d42, align 1
  %v3_121d44 = zext i8 %v2_121d43 to i32
  store i32 %v3_121d44, i32* @r3, align 4
  %v2_121d85 = icmp eq i8 %v2_121d43, 0
  store i1 %v2_121d85, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_121d85, label %dec_label_pc_121e4, label %dec_label_pc_12174

dec_label_pc_12174:                               ; preds = %entry, %dec_label_pc_121d4.backedge
  %v0_12178 = phi i32 [ %v0_121d4, %dec_label_pc_121d4.backedge ], [ %v0_121d41, %entry ]
  %v0_121b0 = phi i32 [ %v3_121d4, %dec_label_pc_121d4.backedge ], [ %v3_121d44, %entry ]
  %v2_12184.in = phi i32 [ %v3_121d4, %dec_label_pc_121d4.backedge ], [ %v3_121d44, %entry ]
  %v2_12184 = add nsw i32 %v2_12184.in, -48
  %v2_12174 = icmp ugt i32 %v2_12184, 8
  %v7_12174 = icmp eq i32 %v2_12184, 9
  store i1 %v7_12174, i1* %cpsr_z.global-to-local, align 1
  %v1_12178 = add i32 %v0_12178, 1
  store i32 %v1_12178, i32* %r0.global-to-local, align 4
  %v2_1217c = xor i1 %v7_12174, true
  %v3_1217c = and i1 %v2_12174, %v2_1217c
  br i1 %v3_1217c, label %dec_label_pc_121b0, label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_12174
  %v0_12180 = load i32, i32* @r1, align 4
  %v1_12180 = inttoptr i32 %v0_12180 to i8*
  %v2_12180 = load i8, i8* %v1_12180, align 1
  %v3_12180 = zext i8 %v2_12180 to i32
  %v0_12184 = load i32, i32* %r7.global-to-local, align 4
  %v3_12184 = mul i32 %v0_12184, %v3_12180
  %v4_12184 = add i32 %v3_12184, %v2_12184
  store i32 %v4_12184, i32* @r3, align 4
  %v2_12188 = icmp ugt i32 %v4_12184, 254
  %v7_12188 = icmp eq i32 %v4_12184, 255
  store i1 %v7_12188, i1* %cpsr_z.global-to-local, align 1
  %v2_1218c = xor i1 %v7_12188, true
  %v3_1218c = and i1 %v2_12188, %v2_1218c
  br i1 %v3_1218c, label %dec_label_pc_12208, label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_12180
  %v0_12190 = load i32, i32* @lr, align 4
  %v2_12190 = icmp eq i32 %v0_12190, 0
  store i1 %v2_12190, i1* %cpsr_z.global-to-local, align 1
  %v1_12194 = trunc i32 %v4_12184 to i8
  store i8 %v1_12194, i8* %v1_12180, align 1
  %v0_12198 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12198, label %dec_label_pc_1219c, label %dec_label_pc_121d4.backedge

dec_label_pc_1219c:                               ; preds = %dec_label_pc_12190
  %v0_1219c = load i32, i32* @ip, align 4
  %v1_1219c = add i32 %v0_1219c, 1
  store i32 %v1_1219c, i32* @ip, align 4
  %v7_121a0 = icmp eq i32 %v1_1219c, 4
  store i1 %v7_121a0, i1* %cpsr_z.global-to-local, align 1
  %v0_121a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_121a4, i32* @lr, align 4
  %v8_121a8 = icmp sgt i32 %v1_1219c, 4
  br i1 %v8_121a8, label %dec_label_pc_12208, label %dec_label_pc_121d4.backedge

dec_label_pc_121b0:                               ; preds = %dec_label_pc_12174
  %v7_121b0 = icmp eq i32 %v0_121b0, 46
  %v1_121b8 = load i32, i32* @lr, align 4
  %v2_121b8 = urem i32 %v1_121b8, 2
  %storemerge12 = select i1 %v7_121b0, i32 %v2_121b8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_121bc = icmp eq i32 %storemerge12, 0
  store i1 %v2_121bc, i1* %cpsr_z.global-to-local, align 1
  %v0_121c0 = load i32, i32* @r5, align 4
  store i32 %v0_121c0, i32* @lr, align 4
  br i1 %v2_121bc, label %dec_label_pc_12208, label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %dec_label_pc_121b0
  %v0_121c8 = load i32, i32* @ip, align 4
  %v7_121c8 = icmp eq i32 %v0_121c8, 4
  store i1 %v7_121c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121c8, label %dec_label_pc_12208, label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121c8
  %v1_121d0 = trunc i32 %v0_121c0 to i8
  %v2_121d0 = load i32, i32* @r1, align 4
  %v3_121d0 = add i32 %v2_121d0, 1
  %v4_121d0 = inttoptr i32 %v3_121d0 to i8*
  store i8 %v1_121d0, i8* %v4_121d0, align 1
  %v5_121d0 = load i32, i32* @r1, align 4
  %v6_121d0 = add i32 %v5_121d0, 1
  store i32 %v6_121d0, i32* @r1, align 4
  br label %dec_label_pc_121d4.backedge

dec_label_pc_121d4.backedge:                      ; preds = %dec_label_pc_121d0, %dec_label_pc_12190, %dec_label_pc_1219c
  %v0_121d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_121d4 = inttoptr i32 %v0_121d4 to i8*
  %v2_121d4 = load i8, i8* %v1_121d4, align 1
  %v3_121d4 = zext i8 %v2_121d4 to i32
  store i32 %v3_121d4, i32* @r3, align 4
  %v2_121d8 = icmp eq i8 %v2_121d4, 0
  store i1 %v2_121d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_121d8, label %dec_label_pc_121d4.dec_label_pc_121e4_crit_edge, label %dec_label_pc_12174

dec_label_pc_121d4.dec_label_pc_121e4_crit_edge:  ; preds = %dec_label_pc_121d4.backedge
  %v0_121e4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_121e4

dec_label_pc_121e4:                               ; preds = %dec_label_pc_121d4.dec_label_pc_121e4_crit_edge, %entry
  %v0_121e4 = phi i32 [ %v0_121e4.pre, %dec_label_pc_121d4.dec_label_pc_121e4_crit_edge ], [ 0, %entry ]
  %v7_121e4 = icmp eq i32 %v0_121e4, 3
  store i1 %v7_121e4, i1* %cpsr_z.global-to-local, align 1
  %v7_121e8 = icmp slt i32 %v0_121e4, 4
  br i1 %v7_121e8, label %dec_label_pc_12208, label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %dec_label_pc_121e4
  %v0_121ec = load i32, i32* @r4, align 4
  store i32 %v0_121ec, i32* @r0, align 4
  store i32 %v2_1215c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_121f8 = call i32 @memcpy()
  br label %dec_label_pc_12208

dec_label_pc_12208:                               ; preds = %dec_label_pc_12180, %dec_label_pc_1219c, %dec_label_pc_121b0, %dec_label_pc_121c8, %dec_label_pc_121e4, %dec_label_pc_121ec
  %storemerge = phi i32 [ 1, %dec_label_pc_121ec ], [ 0, %dec_label_pc_121e4 ], [ 0, %dec_label_pc_121c8 ], [ 0, %dec_label_pc_121b0 ], [ 0, %dec_label_pc_1219c ], [ 0, %dec_label_pc_12180 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_12144, i32* @r4, align 4
  store i32 %v6_12144, i32* @r5, align 4
  store i32 %v15_12144, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_121e4, { 1, 0 }
  uselistorder i32 %v3_121d4, { 2, 1, 0 }
  uselistorder i32 %v0_121d4, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_12184, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_12208, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_121d4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12174, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_12214 = load i32, i32* @r4, align 4
  %v6_12214 = load i32, i32* @r5, align 4
  %v9_12214 = load i32, i32* @r6, align 4
  %v12_12214 = load i32, i32* @r7, align 4
  %v27_12214 = load i32, i32* @lr, align 4
  %v7_12220 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_12220, label %dec_label_pc_12240, label %dec_label_pc_12234

dec_label_pc_12234:                               ; preds = %entry
  %v7_12234 = icmp eq i32 %arg1, 10
  br i1 %v7_12234, label %dec_label_pc_12250, label %dec_label_pc_12408

dec_label_pc_12240:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  %v3_12248 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_12420

dec_label_pc_12250:                               ; preds = %dec_label_pc_12234
  %v2_12250 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1225c = bitcast i32* %stack_var_-56 to i8*
  %v4_1225c = call i32 @__GI_memset(i8* %v3_1225c, i32 0, i32 16)
  %v0_12260 = load i32, i32* @r5, align 4
  %v1_12260 = inttoptr i32 %v0_12260 to i8*
  %v2_12260 = load i8, i8* %v1_12260, align 1
  %v3_12260 = zext i8 %v2_12260 to i32
  store i32 %v3_12260, i32* %r3.global-to-local, align 4
  %v7_12264 = icmp eq i8 %v2_12260, 58
  store i32 %v4_1225c, i32* @r6, align 4
  %v2_1226c = add i32 %v4_1225c, 16
  store i32 %v2_1226c, i32* %r8.global-to-local, align 4
  br i1 %v7_12264, label %dec_label_pc_12274, label %dec_label_pc_12280

dec_label_pc_12274:                               ; preds = %dec_label_pc_12250
  %v1_12274 = add i32 %v0_12260, 1
  %v2_12274 = inttoptr i32 %v1_12274 to i8*
  %v3_12274 = load i8, i8* %v2_12274, align 1
  %v4_12274 = zext i8 %v3_12274 to i32
  store i32 %v4_12274, i32* %r3.global-to-local, align 4
  store i32 %v1_12274, i32* @r5, align 4
  %v7_12278 = icmp eq i8 %v3_12274, 58
  br i1 %v7_12278, label %dec_label_pc_12280, label %dec_label_pc_12400

dec_label_pc_12280:                               ; preds = %dec_label_pc_12274, %dec_label_pc_12250
  %v0_1228c = phi i32 [ %v1_12274, %dec_label_pc_12274 ], [ %v0_12260, %dec_label_pc_12250 ]
  store i32 -37196, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_12288 = load i32, i32* @r4, align 4
  %v2_12288 = add i32 %v0_12288, -37196
  store i32 %v0_1228c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_12288, i32* %stack_var_-64, align 4
  %v1_123643 = inttoptr i32 %v0_1228c to i8*
  %v2_123644 = load i8, i8* %v1_123643, align 1
  %v3_123645 = zext i8 %v2_123644 to i32
  store i32 %v3_123645, i32* @r4, align 4
  %v2_123686 = icmp eq i8 %v2_123644, 0
  br i1 %v2_123686, label %dec_label_pc_12370.thread, label %dec_label_pc_122a0

dec_label_pc_12370.thread:                        ; preds = %dec_label_pc_12280
  store i32 %v4_1225c, i32* @r4, align 4
  br label %dec_label_pc_1239c

dec_label_pc_122a0:                               ; preds = %dec_label_pc_12280, %dec_label_pc_12364.backedge.dec_label_pc_122a0_crit_edge
  %v0_122a4 = phi i32 [ %v3_12364, %dec_label_pc_12364.backedge.dec_label_pc_122a0_crit_edge ], [ %v3_123645, %dec_label_pc_12280 ]
  %v2_122a0 = phi i32 [ %v2_122a0.pre, %dec_label_pc_12364.backedge.dec_label_pc_122a0_crit_edge ], [ %v2_12288, %dec_label_pc_12280 ]
  store i32 %v2_122a0, i32* @r0, align 4
  %v1_122a4 = or i32 %v0_122a4, 32
  %v2_122a8 = call i32 @__GI_strchr(i32 %v2_122a0, i32 %v1_122a4)
  %v2_122ac = icmp eq i32 %v2_122a8, 0
  %v0_122b0 = load i32, i32* @r5, align 4
  %v1_122b0 = add i32 %v0_122b0, 1
  store i32 %v1_122b0, i32* @r5, align 4
  br i1 %v2_122ac, label %dec_label_pc_122d4, label %dec_label_pc_122b8

dec_label_pc_122b8:                               ; preds = %dec_label_pc_122a0
  %v2_122b8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_122b8, i32* %r2.global-to-local, align 4
  %v2_122bc = sub i32 %v2_122a8, %v2_122b8
  %v1_122c0 = load i32, i32* @r7, align 4
  %v4_122c0 = mul i32 %v1_122c0, 16
  %v5_122c0 = or i32 %v4_122c0, %v2_122bc
  store i32 %v5_122c0, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_122c0, 65536
  br i1 %tmp36, label %dec_label_pc_12360, label %dec_label_pc_12400

dec_label_pc_122d4:                               ; preds = %dec_label_pc_122a0
  %v0_122d4 = load i32, i32* @r4, align 4
  %v7_122d4 = icmp eq i32 %v0_122d4, 58
  br i1 %v7_122d4, label %dec_label_pc_122dc, label %dec_label_pc_12334

dec_label_pc_122dc:                               ; preds = %dec_label_pc_122d4
  %v0_122dc = load i32, i32* %sb.global-to-local, align 4
  %v2_122dc = icmp eq i32 %v0_122dc, 0
  br i1 %v2_122dc, label %dec_label_pc_122e4, label %dec_label_pc_122f8

dec_label_pc_122e4:                               ; preds = %dec_label_pc_122dc
  %v0_122e4 = load i32, i32* %fp.global-to-local, align 4
  %v2_122e4 = icmp eq i32 %v0_122e4, 0
  br i1 %v2_122e4, label %dec_label_pc_122ec, label %dec_label_pc_12400

dec_label_pc_122ec:                               ; preds = %dec_label_pc_122e4
  %v0_122ec = load i32, i32* @r6, align 4
  store i32 %v0_122ec, i32* %fp.global-to-local, align 4
  store i32 %v1_122b0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12364.backedge

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122dc
  %v1_122f8 = inttoptr i32 %v1_122b0 to i8*
  %v2_122f8 = load i8, i8* %v1_122f8, align 1
  %v3_122f8 = zext i8 %v2_122f8 to i32
  store i32 %v3_122f8, i32* %r3.global-to-local, align 4
  %v2_122fc = icmp eq i8 %v2_122f8, 0
  br i1 %v2_122fc, label %dec_label_pc_12400, label %dec_label_pc_12304

dec_label_pc_12304:                               ; preds = %dec_label_pc_122f8
  %v0_12304 = load i32, i32* @r6, align 4
  %v1_12304 = add i32 %v0_12304, 2
  store i32 %v1_12304, i32* %r3.global-to-local, align 4
  %v1_12308 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_12304, %v1_12308
  br i1 %tmp37, label %dec_label_pc_12400, label %dec_label_pc_12310

dec_label_pc_12310:                               ; preds = %dec_label_pc_12304
  %v0_12310 = load i32, i32* @r7, align 4
  %v3_12310 = udiv i32 %v0_12310, 256
  store i32 %v3_12310, i32* %r2.global-to-local, align 4
  store i32 %v0_12304, i32* %r3.global-to-local, align 4
  %v1_12318 = trunc i32 %v3_12310 to i8
  %v3_12318 = inttoptr i32 %v0_12304 to i8*
  store i8 %v1_12318, i8* %v3_12318, align 1
  %v4_12318 = load i32, i32* %r3.global-to-local, align 4
  %v5_12318 = add i32 %v4_12318, 1
  store i32 %v5_12318, i32* @r3, align 4
  %v0_1231c = load i32, i32* @r7, align 4
  %v1_1231c = trunc i32 %v0_1231c to i8
  %v2_1231c = load i32, i32* @r6, align 4
  %v3_1231c = add i32 %v2_1231c, 1
  %v4_1231c = inttoptr i32 %v3_1231c to i8*
  store i8 %v1_1231c, i8* %v4_1231c, align 1
  store i32 0, i32* @r7, align 4
  %v0_12324 = load i32, i32* @r3, align 4
  %v1_12324 = add i32 %v0_12324, 1
  store i32 %v1_12324, i32* @r6, align 4
  %v0_12328 = load i32, i32* @r5, align 4
  store i32 %v0_12328, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12364.backedge

dec_label_pc_12334:                               ; preds = %dec_label_pc_122d4
  %v7_12334 = icmp eq i32 %v0_122d4, 46
  br i1 %v7_12334, label %dec_label_pc_1233c, label %dec_label_pc_12400

dec_label_pc_1233c:                               ; preds = %dec_label_pc_12334
  %v0_1233c = load i32, i32* @r6, align 4
  %v1_1233c = add i32 %v0_1233c, 4
  store i32 %v1_1233c, i32* @r4, align 4
  %v1_12340 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1233c, %v1_12340
  br i1 %tmp38, label %dec_label_pc_12400, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_1233c
  %v0_12348 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_12348, i32* @r0, align 4
  %v3_12350 = call i32 @inet_pton4(i32 %v0_12348, i32 %v0_1233c)
  %v5_12358 = icmp sgt i32 %v3_12350, 0
  br i1 %v5_12358, label %dec_label_pc_12348.dec_label_pc_1239c_crit_edge, label %dec_label_pc_12400

dec_label_pc_12348.dec_label_pc_1239c_crit_edge:  ; preds = %dec_label_pc_12348
  %v0_123e0.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1239c

dec_label_pc_12360:                               ; preds = %dec_label_pc_122b8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12364.backedge

dec_label_pc_12364.backedge:                      ; preds = %dec_label_pc_12360, %dec_label_pc_122ec, %dec_label_pc_12310
  %v0_12364 = phi i32 [ %v1_122b0, %dec_label_pc_12360 ], [ %v1_122b0, %dec_label_pc_122ec ], [ %v0_12328, %dec_label_pc_12310 ]
  %v0_1237012 = phi i32 [ 1, %dec_label_pc_12360 ], [ 0, %dec_label_pc_122ec ], [ 0, %dec_label_pc_12310 ]
  %v1_12364 = inttoptr i32 %v0_12364 to i8*
  %v2_12364 = load i8, i8* %v1_12364, align 1
  %v3_12364 = zext i8 %v2_12364 to i32
  store i32 %v3_12364, i32* @r4, align 4
  %v2_12368 = icmp eq i8 %v2_12364, 0
  br i1 %v2_12368, label %dec_label_pc_12370, label %dec_label_pc_12364.backedge.dec_label_pc_122a0_crit_edge

dec_label_pc_12364.backedge.dec_label_pc_122a0_crit_edge: ; preds = %dec_label_pc_12364.backedge
  %v2_122a0.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_122a0

dec_label_pc_12370:                               ; preds = %dec_label_pc_12364.backedge
  %v0_12374.pre = load i32, i32* @r6, align 4
  %v2_12370 = icmp eq i32 %v0_1237012, 0
  store i32 %v0_12374.pre, i32* @r4, align 4
  br i1 %v2_12370, label %dec_label_pc_1239c, label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12370
  %v1_1237c = add i32 %v0_12374.pre, 2
  store i32 %v1_1237c, i32* %r3.global-to-local, align 4
  %v1_12380 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1237c, %v1_12380
  br i1 %tmp39, label %dec_label_pc_12400, label %dec_label_pc_12388

dec_label_pc_12388:                               ; preds = %dec_label_pc_1237c
  store i32 %v0_12374.pre, i32* %r3.global-to-local, align 4
  %v0_1238c = load i32, i32* @r7, align 4
  %v3_1238c = udiv i32 %v0_1238c, 256
  store i32 %v3_1238c, i32* %r2.global-to-local, align 4
  %v1_12390 = trunc i32 %v3_1238c to i8
  %v3_12390 = inttoptr i32 %v0_12374.pre to i8*
  store i8 %v1_12390, i8* %v3_12390, align 1
  %v4_12390 = load i32, i32* %r3.global-to-local, align 4
  %v5_12390 = add i32 %v4_12390, 1
  store i32 %v5_12390, i32* @r3, align 4
  %v0_12394 = load i32, i32* @r7, align 4
  %v1_12394 = trunc i32 %v0_12394 to i8
  %v2_12394 = load i32, i32* @r6, align 4
  %v3_12394 = add i32 %v2_12394, 1
  %v4_12394 = inttoptr i32 %v3_12394 to i8*
  store i8 %v1_12394, i8* %v4_12394, align 1
  %v0_12398 = load i32, i32* @r3, align 4
  %v1_12398 = add i32 %v0_12398, 1
  store i32 %v1_12398, i32* @r4, align 4
  br label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %dec_label_pc_12348.dec_label_pc_1239c_crit_edge, %dec_label_pc_12370.thread, %dec_label_pc_12370, %dec_label_pc_12388
  %v0_123e0.pre = phi i32 [ %v0_123e0.pre.pre, %dec_label_pc_12348.dec_label_pc_1239c_crit_edge ], [ %v4_1225c, %dec_label_pc_12370.thread ], [ %v0_12374.pre, %dec_label_pc_12370 ], [ %v1_12398, %dec_label_pc_12388 ]
  %v0_1239c = load i32, i32* %fp.global-to-local, align 4
  %v2_1239c = icmp eq i32 %v0_1239c, 0
  %v1_123e0.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1239c, label %dec_label_pc_123e0, label %dec_label_pc_123a4

dec_label_pc_123a4:                               ; preds = %dec_label_pc_1239c
  %v9_123a4 = icmp eq i32 %v0_123e0.pre, %v1_123e0.pre
  %v2_123a8 = sub i32 %v0_123e0.pre, %v0_1239c
  store i32 %v2_123a8, i32* @ip, align 4
  br i1 %v9_123a4, label %dec_label_pc_12400, label %dec_label_pc_123c8.preheader

dec_label_pc_123c8.preheader:                     ; preds = %dec_label_pc_123a4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_123c8

dec_label_pc_123bc:                               ; preds = %dec_label_pc_123c8
  %v2_123d0 = sub i32 %v0_123dc, %v0_123d4
  %v0_123bc = load i32, i32* %fp.global-to-local, align 4
  %v2_123bc = add i32 %v0_123bc, %v2_123cc
  %v3_123bc = inttoptr i32 %v2_123bc to i8*
  %v4_123bc = load i8, i8* %v3_123bc, align 1
  %v6_123bc = zext i8 %v4_123bc to i32
  store i32 %v6_123bc, i32* @r3, align 4
  %v3_123c0 = inttoptr i32 %v2_123d0 to i8*
  store i8 %v4_123bc, i8* %v3_123c0, align 1
  %v0_123c4 = load i32, i32* @lr, align 4
  %v1_123c4 = trunc i32 %v0_123c4 to i8
  %v2_123c4 = load i32, i32* %fp.global-to-local, align 4
  %v3_123c4 = load i32, i32* @r1, align 4
  %v4_123c4 = add i32 %v3_123c4, %v2_123c4
  %v5_123c4 = inttoptr i32 %v4_123c4 to i8*
  store i8 %v1_123c4, i8* %v5_123c4, align 1
  %v0_123c8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_123c8.pre = load i32, i32* @ip, align 4
  %v1_123d0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %dec_label_pc_123c8.preheader, %dec_label_pc_123bc
  %v0_123dc = phi i32 [ %v1_123e0.pre, %dec_label_pc_123c8.preheader ], [ %v1_123d0.pre, %dec_label_pc_123bc ]
  %v1_123cc = phi i32 [ %v2_123a8, %dec_label_pc_123c8.preheader ], [ %v1_123c8.pre, %dec_label_pc_123bc ]
  %v0_123d4 = phi i32 [ 1, %dec_label_pc_123c8.preheader ], [ %v0_123c8.pre, %dec_label_pc_123bc ]
  %v2_123c8 = sub i32 %v0_123d4, %v1_123cc
  %v4_123c8 = xor i32 %v0_123d4, %v1_123cc
  %v5_123c8 = xor i32 %v2_123c8, %v0_123d4
  %v6_123c8 = and i32 %v5_123c8, %v4_123c8
  %v7_123c8 = icmp slt i32 %v6_123c8, 0
  %v8_123c8 = icmp slt i32 %v2_123c8, 0
  %v9_123c8 = icmp eq i32 %v0_123d4, %v1_123cc
  %v2_123cc = sub i32 %v1_123cc, %v0_123d4
  store i32 %v2_123cc, i32* @r1, align 4
  %v1_123d4 = add i32 %v0_123d4, 1
  store i32 %v1_123d4, i32* %r2.global-to-local, align 4
  %v3_123d8 = xor i1 %v8_123c8, %v7_123c8
  %v4_123d8 = or i1 %v9_123c8, %v3_123d8
  br i1 %v4_123d8, label %dec_label_pc_123bc, label %dec_label_pc_123dc

dec_label_pc_123dc:                               ; preds = %dec_label_pc_123c8
  store i32 %v0_123dc, i32* @r4, align 4
  br label %dec_label_pc_123e0

dec_label_pc_123e0:                               ; preds = %dec_label_pc_1239c, %dec_label_pc_123dc
  %v0_123e0 = phi i32 [ %v0_123dc, %dec_label_pc_123dc ], [ %v0_123e0.pre, %dec_label_pc_1239c ]
  %v1_123e0 = phi i32 [ %v0_123dc, %dec_label_pc_123dc ], [ %v1_123e0.pre, %dec_label_pc_1239c ]
  %v9_123e0 = icmp eq i32 %v0_123e0, %v1_123e0
  br i1 %v9_123e0, label %dec_label_pc_123e8, label %dec_label_pc_12400

dec_label_pc_123e8:                               ; preds = %dec_label_pc_123e0
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_12250, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_123f4 = call i32 @memcpy()
  br label %dec_label_pc_12420

dec_label_pc_12400:                               ; preds = %dec_label_pc_122b8, %dec_label_pc_122e4, %dec_label_pc_12304, %dec_label_pc_122f8, %dec_label_pc_123a4, %dec_label_pc_12348, %dec_label_pc_12334, %dec_label_pc_123e0, %dec_label_pc_12274, %dec_label_pc_1237c, %dec_label_pc_1233c
  br label %dec_label_pc_12420

dec_label_pc_12408:                               ; preds = %dec_label_pc_12234
  store i32 65264, i32* %r3.global-to-local, align 4
  %v0_1240c = call i32 @__aeabi_read_tp()
  %v3_12410 = load i16, i16* @global_var_22308.76, align 2
  %v4_12410 = sext i16 %v3_12410 to i32
  store i32 %v4_12410, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r2.global-to-local, align 4
  %v3_12418 = add i32 %v4_12410, %v0_1240c
  %v4_12418 = inttoptr i32 %v3_12418 to i32*
  store i32 97, i32* %v4_12418, align 4
  br label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %dec_label_pc_12400, %dec_label_pc_123e8, %dec_label_pc_12240, %dec_label_pc_12408
  %v1_12428 = phi i32 [ 0, %dec_label_pc_12400 ], [ 1, %dec_label_pc_123e8 ], [ %v3_12248, %dec_label_pc_12240 ], [ -1, %dec_label_pc_12408 ]
  store i32 %v3_12214, i32* @r4, align 4
  store i32 %v6_12214, i32* @r5, align 4
  store i32 %v9_12214, i32* @r6, align 4
  store i32 %v12_12214, i32* @r7, align 4
  store i32 %v27_12214, i32* @lr, align 4
  ret i32 %v1_12428

; uselistorder directives
  uselistorder i32 %v2_123cc, { 1, 0 }
  uselistorder i32 %v2_123c8, { 1, 0 }
  uselistorder i32 %v0_123d4, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_123cc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_123dc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_123e0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_123e0.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1238c, { 1, 0 }
  uselistorder i32 %v0_12374.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_12364, { 1, 0 }
  uselistorder i32 %v3_12310, { 1, 0 }
  uselistorder i32 %v0_12304, { 1, 0, 2 }
  uselistorder i32 %v1_122b0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_122a0, { 1, 0 }
  uselistorder i32 %v0_1228c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_12420, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12400, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_123e0, { 1, 0 }
  uselistorder label %dec_label_pc_123c8, { 1, 0 }
  uselistorder label %dec_label_pc_1239c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12364.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_122a0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_12514 = ptrtoint i32* %stack_var_-40 to i32
  %v2_124f4 = add i32 %v2_12514, -17
  br label %dec_label_pc_12514

dec_label_pc_12464:                               ; preds = %dec_label_pc_12514
  %v0_12464 = load i32, i32* %fp.global-to-local, align 4
  %v2_12464 = add i32 %v0_12464, %v1_12464
  %v3_12464 = inttoptr i32 %v2_12464 to i8*
  %v4_12464 = load i8, i8* %v3_12464, align 1
  %v6_12464 = zext i8 %v4_12464 to i32
  store i32 %v6_12464, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_12464, 100
  %v2_1246c = zext i8 %div4 to i32
  store i32 %v2_1246c, i32* %r0.global-to-local, align 4
  %v1_12470 = or i8 %div4, 48
  %v3_12474 = add i32 %v2_12524, -17
  %v4_12474 = inttoptr i32 %v3_12474 to i8*
  store i8 %v1_12470, i8* %v4_12474, align 1
  %v0_12478 = load i32, i32* %r5.global-to-local, align 4
  %v1_12478 = add i32 %v0_12478, -17
  %v2_12478 = inttoptr i32 %v1_12478 to i8*
  %v3_12478 = load i8, i8* %v2_12478, align 1
  %v0_1247c = load i32, i32* %r6.global-to-local, align 4
  %v1_1247c = add i32 %v0_1247c, 1
  store i32 %v1_1247c, i32* %r6.global-to-local, align 4
  %v7_12484 = icmp eq i8 %v3_12478, 48
  %v0_1248c = load i32, i32* %r4.global-to-local, align 4
  %v0_12494 = load i32, i32* %fp.global-to-local, align 4
  %v1_12494 = load i32, i32* %sl.global-to-local, align 4
  %v2_12494 = add i32 %v1_12494, %v0_12494
  store i32 %v2_12494, i32* %sb.global-to-local, align 4
  %v2_1249c = udiv i32 %v0_1248c, 10
  %v1_124a4 = urem i32 %v2_1249c, 256
  %v2_124a8 = udiv i32 %v1_124a4, 10
  %v3_124a8 = urem i32 %v1_124a4, 10
  store i32 %v2_124a8, i32* %r0.global-to-local, align 4
  %v1_124ac = or i32 %v3_124a8, 48
  store i32 %v1_124ac, i32* %r1.global-to-local, align 4
  br i1 %v7_12484, label %dec_label_pc_1249c, label %dec_label_pc_124c4

dec_label_pc_1249c:                               ; preds = %dec_label_pc_12464
  %v7_124b4 = icmp eq i32 %v1_124ac, 48
  br i1 %v7_124b4, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1249c
  store i32 %v1_1247c, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1249c, %bb
  %v1_124bc = trunc i32 %v1_124ac to i8
  store i8 %v1_124bc, i8* %v2_12478, align 1
  %v0_124f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_124e0

dec_label_pc_124c4:                               ; preds = %dec_label_pc_12464
  %v2_12490 = add i32 %v1_1247c, %v2_12514
  %v1_124d8 = trunc i32 %v1_124ac to i8
  %v3_124d8 = add i32 %v2_12490, -17
  %v4_124d8 = inttoptr i32 %v3_124d8 to i8*
  store i8 %v1_124d8, i8* %v4_124d8, align 1
  %v0_124dc = load i32, i32* %r6.global-to-local, align 4
  %v1_124dc = add i32 %v0_124dc, 1
  store i32 %v1_124dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_124e0

dec_label_pc_124e0:                               ; preds = %bb18, %dec_label_pc_124c4
  %v0_124f0 = phi i32 [ %v0_124f0.pre, %bb18 ], [ %v1_124dc, %dec_label_pc_124c4 ]
  %v0_124e0 = load i32, i32* %sb.global-to-local, align 4
  %v1_124e0 = inttoptr i32 %v0_124e0 to i8*
  %v2_124e0 = load i8, i8* %v1_124e0, align 1
  %tmp19 = urem i8 %v2_124e0, 10
  %v3_124e8 = zext i8 %tmp19 to i32
  store i32 %v2_12514, i32* %ip.global-to-local, align 4
  %v1_124f0 = add i32 %v0_124f0, 1
  store i32 %v1_124f0, i32* %r0.global-to-local, align 4
  %v1_124f8 = or i32 %v3_124e8, 48
  store i32 %v1_124f8, i32* %r1.global-to-local, align 4
  %v1_124fc = trunc i32 %v1_124f8 to i8
  %v3_124fc = add i32 %v2_124f4, %v0_124f0
  %v4_124fc = inttoptr i32 %v3_124fc to i8*
  store i8 %v1_124fc, i8* %v4_124fc, align 1
  %v0_12500 = load i32, i32* %ip.global-to-local, align 4
  %v1_12500 = load i32, i32* %r0.global-to-local, align 4
  %v2_12500 = add i32 %v1_12500, %v0_12500
  %v3_12508 = add i32 %v2_12500, -17
  %v4_12508 = inttoptr i32 %v3_12508 to i8*
  store i8 46, i8* %v4_12508, align 1
  %v0_1250c = load i32, i32* %r0.global-to-local, align 4
  %v1_1250c = add i32 %v0_1250c, 1
  store i32 %v1_1250c, i32* %r6.global-to-local, align 4
  %v0_12510 = load i32, i32* %sl.global-to-local, align 4
  %v1_12510 = add i32 %v0_12510, 1
  store i32 %v1_12510, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_12514

dec_label_pc_12514:                               ; preds = %entry, %dec_label_pc_124e0
  %v0_12520 = phi i32 [ 0, %entry ], [ %v1_1250c, %dec_label_pc_124e0 ]
  %v1_12464 = phi i32 [ 0, %entry ], [ %v1_12510, %dec_label_pc_124e0 ]
  store i32 %v2_12514, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_12520, i32* %r7.global-to-local, align 4
  %v2_12524 = add i32 %v0_12520, %v2_12514
  store i32 %v2_12524, i32* %r5.global-to-local, align 4
  %v7_12528 = icmp sgt i32 %v1_12464, 3
  br i1 %v7_12528, label %dec_label_pc_1252c, label %dec_label_pc_12464

dec_label_pc_1252c:                               ; preds = %dec_label_pc_12514
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12530 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_12530, i32* %r4.global-to-local, align 4
  %v3_12534 = add i32 %v2_12524, -18
  %v4_12534 = inttoptr i32 %v3_12534 to i8*
  store i8 0, i8* %v4_12534, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_12530, i32* %r0.global-to-local, align 4
  %v3_1253c = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1253c, i32* %r0.global-to-local, align 4
  %v2_12540 = load i32, i32* %stack_var_-72, align 4
  %tmp = icmp ugt i32 %v3_1253c, %v2_12540
  br i1 %tmp, label %dec_label_pc_1254c, label %dec_label_pc_12568

dec_label_pc_1254c:                               ; preds = %dec_label_pc_1252c
  %v0_12550 = call i32 @__aeabi_read_tp()
  store i32 %v0_12550, i32* %r0.global-to-local, align 4
  %v3_12554 = load i16, i16* @global_var_22308.76, align 2
  %v4_12554 = sext i16 %v3_12554 to i32
  %v0_1255c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1255c, i32* %r1.global-to-local, align 4
  %v3_12560 = add i32 %v4_12554, %v0_12550
  %v4_12560 = inttoptr i32 %v3_12560 to i32*
  store i32 28, i32* %v4_12560, align 4
  %v0_12578.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12578

dec_label_pc_12568:                               ; preds = %dec_label_pc_1252c
  store i32 %v2_12530, i32* @r1, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_12570 = inttoptr i32 %arg2 to i8*
  %v3_12570 = call i32 @strcpy(i8* %v2_12570, i32 %v2_12530)
  store i32 %v3_12570, i32* %r0.global-to-local, align 4
  store i32 %v3_12570, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12578

dec_label_pc_12578:                               ; preds = %dec_label_pc_1254c, %dec_label_pc_12568
  %v0_12578 = phi i32 [ %v0_12578.pre, %dec_label_pc_1254c ], [ %v3_12570, %dec_label_pc_12568 ]
  store i32 %v0_12578, i32* %r0.global-to-local, align 4
  ret i32 %v0_12578

; uselistorder directives
  uselistorder i32 %v0_12578, { 1, 0 }
  uselistorder i32 %v2_12530, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12524, { 0, 2, 1 }
  uselistorder i32 %v1_12464, { 1, 0 }
  uselistorder i32 %v1_124f8, { 1, 0 }
  uselistorder i32 %v1_124ac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12514, { 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12578, { 1, 0 }
  uselistorder label %dec_label_pc_12514, { 1, 0 }
  uselistorder label %dec_label_pc_124e0, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1258c = load i32, i32* @r5, align 4
  %v7_12598 = icmp eq i32 %arg1, 2
  store i1 %v7_12598, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_12598, label %dec_label_pc_125bc, label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %entry
  %v7_125b0 = icmp eq i32 %arg1, 10
  store i1 %v7_125b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125b0, label %dec_label_pc_125d0, label %dec_label_pc_127ec

dec_label_pc_125bc:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_125c8 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_127e4

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125b0
  %v2_125d0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_125d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_125dc = bitcast i32* %stack_var_-72 to i8*
  %v4_125dc = call i32 @__GI_memset(i8* %v3_125dc, i32 0, i32 32)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12600 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_125e4

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125e4.dec_label_pc_125e4_crit_edge, %dec_label_pc_125d0
  %v0_125fc = phi i32 [ %v0_125e4.pre, %dec_label_pc_125e4.dec_label_pc_125e4_crit_edge ], [ 0, %dec_label_pc_125d0 ]
  %v1_125e4 = load i32, i32* @r8, align 4
  %v2_125e4 = add i32 %v1_125e4, %v0_125fc
  %v3_125e8 = inttoptr i32 %v2_125e4 to i8*
  %v4_125e8 = load i8, i8* %v3_125e8, align 1
  %v6_125e8 = zext i8 %v4_125e8 to i32
  store i32 %v6_125e8, i32* %r1.global-to-local, align 4
  %v1_125ec = add i32 %v2_125e4, 1
  %v2_125ec = inttoptr i32 %v1_125ec to i8*
  %v3_125ec = load i8, i8* %v2_125ec, align 1
  %v4_125ec = zext i8 %v3_125ec to i32
  %tmp74 = icmp slt i32 %v0_125fc, 0
  %v4_125f0 = zext i1 %tmp74 to i32
  %v5_125f0 = add i32 %v4_125f0, %v0_125fc
  %v4_125f4 = mul nuw nsw i32 %v6_125e8, 256
  %v5_125f4 = or i32 %v4_125ec, %v4_125f4
  %v3_125f8 = sdiv i32 %v5_125f0, 2
  %v1_125fc = add i32 %v0_125fc, 2
  store i32 %v1_125fc, i32* %r0.global-to-local, align 4
  store i32 %v2_12600, i32* %r1.global-to-local, align 4
  %v4_12604 = mul i32 %v3_125f8, 4
  %v5_12604 = add i32 %v4_12604, %v2_12600
  %v7_12608 = icmp eq i32 %v1_125fc, 15
  store i1 %v7_12608, i1* %cpsr_z.global-to-local, align 1
  %v2_1260c = add i32 %v5_12604, -32
  %v3_1260c = inttoptr i32 %v2_1260c to i32*
  store i32 %v5_125f4, i32* %v3_1260c, align 4
  %v7_12610 = icmp sgt i32 %v1_125fc, 15
  br i1 %v7_12610, label %dec_label_pc_12614, label %dec_label_pc_125e4.dec_label_pc_125e4_crit_edge

dec_label_pc_125e4.dec_label_pc_125e4_crit_edge:  ; preds = %dec_label_pc_125e4
  %v0_125e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125e4

dec_label_pc_12614:                               ; preds = %dec_label_pc_125e4
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1262c

dec_label_pc_1262c:                               ; preds = %dec_label_pc_12614, %dec_label_pc_12678
  %v0_1266c = phi i32 [ -1, %dec_label_pc_12614 ], [ %v0_126a0, %dec_label_pc_12678 ]
  %v0_1265c = phi i32 [ -1, %dec_label_pc_12614 ], [ %v0_1268c, %dec_label_pc_12678 ]
  %v0_12640 = phi i32 [ -1, %dec_label_pc_12614 ], [ %v0_126407, %dec_label_pc_12678 ]
  %v0_12678 = phi i32 [ 0, %dec_label_pc_12614 ], [ %v1_12678, %dec_label_pc_12678 ]
  %v4_12630 = mul nuw nsw i32 %v0_12678, 4
  %v5_12630 = add i32 %v4_12630, %v2_12600
  %v1_12634 = add i32 %v5_12630, -32
  %v2_12634 = inttoptr i32 %v1_12634 to i32*
  %v3_12634 = load i32, i32* %v2_12634, align 4
  %v2_12638 = icmp eq i32 %v3_12634, 0
  %v7_12640 = icmp eq i32 %v0_12640, -1
  br i1 %v2_12638, label %dec_label_pc_12640, label %dec_label_pc_12654

dec_label_pc_12640:                               ; preds = %dec_label_pc_1262c
  br i1 %v7_12640, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12640
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_12678

.thread:                                          ; preds = %dec_label_pc_12640
  %v1_1264c.pre = load i32, i32* @r4, align 4
  %v2_1264c = add i32 %v1_1264c.pre, 1
  store i32 %v2_1264c, i32* @r4, align 4
  br label %dec_label_pc_12678

dec_label_pc_12654:                               ; preds = %dec_label_pc_1262c
  br i1 %v7_12640, label %dec_label_pc_12678, label %dec_label_pc_1265c

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12654
  %v7_1265c = icmp eq i32 %v0_1265c, -1
  %v0_12670.pre = load i32, i32* @r4, align 4
  %v1_12664 = load i32, i32* @r7, align 4
  %v7_12668 = icmp sgt i32 %v0_12670.pre, %v1_12664
  %or.cond = or i1 %v7_1265c, %v7_12668
  br i1 %or.cond, label %dec_label_pc_1266c, label %dec_label_pc_12674

dec_label_pc_1266c:                               ; preds = %dec_label_pc_1265c
  store i32 %v0_1266c, i32* @r6, align 4
  store i32 %v0_12670.pre, i32* @r7, align 4
  br label %dec_label_pc_12674

dec_label_pc_12674:                               ; preds = %dec_label_pc_1265c, %dec_label_pc_1266c
  %v0_1265c12 = phi i32 [ %v0_1266c, %dec_label_pc_1266c ], [ %v0_1265c, %dec_label_pc_1265c ]
  br label %dec_label_pc_12678

dec_label_pc_12678:                               ; preds = %bb, %.thread, %dec_label_pc_12654, %dec_label_pc_12674
  %v0_126a0 = phi i32 [ %v0_1266c, %.thread ], [ %v0_12678, %bb ], [ %v0_1266c, %dec_label_pc_12654 ], [ -1, %dec_label_pc_12674 ]
  %v0_126407 = phi i32 [ %v0_12640, %.thread ], [ %v0_12678, %bb ], [ -1, %dec_label_pc_12654 ], [ -1, %dec_label_pc_12674 ]
  %v0_1268c = phi i32 [ %v0_1265c, %.thread ], [ %v0_1265c, %bb ], [ %v0_1265c, %dec_label_pc_12654 ], [ %v0_1265c12, %dec_label_pc_12674 ]
  %v1_12678 = add nuw nsw i32 %v0_12678, 1
  store i32 %v1_12678, i32* %r1.global-to-local, align 4
  %v7_12680 = icmp slt i32 %v1_12678, 8
  br i1 %v7_12680, label %dec_label_pc_1262c, label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %dec_label_pc_12678
  %v7_12684 = icmp eq i32 %v0_126a0, -1
  store i1 %v7_12684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12684, label %dec_label_pc_12684.dec_label_pc_126a4_crit_edge, label %dec_label_pc_1268c

dec_label_pc_12684.dec_label_pc_126a4_crit_edge:  ; preds = %dec_label_pc_12684
  %v1_126c8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_126a4

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12684
  %v7_1268c = icmp eq i32 %v0_1268c, -1
  store i1 %v7_1268c, i1* %cpsr_z.global-to-local, align 1
  %v0_1269c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1268c, label %dec_label_pc_1269c, label %dec_label_pc_12694

dec_label_pc_12694:                               ; preds = %dec_label_pc_1268c
  %v1_12694 = load i32, i32* @r7, align 4
  %v9_12694 = icmp eq i32 %v0_1269c.pre, %v1_12694
  store i1 %v9_12694, i1* %cpsr_z.global-to-local, align 1
  %v7_12698 = icmp sgt i32 %v0_1269c.pre, %v1_12694
  br i1 %v7_12698, label %dec_label_pc_1269c, label %dec_label_pc_126a4

dec_label_pc_1269c:                               ; preds = %dec_label_pc_1268c, %dec_label_pc_12694
  store i32 %v0_1269c.pre, i32* @r7, align 4
  store i32 %v0_126a0, i32* @r6, align 4
  br label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %dec_label_pc_12684.dec_label_pc_126a4_crit_edge, %dec_label_pc_12694, %dec_label_pc_1269c
  %v1_126c8.pre = phi i32 [ %v1_12694, %dec_label_pc_12694 ], [ %v1_126c8.pre.pre, %dec_label_pc_12684.dec_label_pc_126a4_crit_edge ], [ %v0_1269c.pre, %dec_label_pc_1269c ]
  %v0_126a4 = phi i32 [ %v0_1268c, %dec_label_pc_12694 ], [ %v0_1268c, %dec_label_pc_12684.dec_label_pc_126a4_crit_edge ], [ %v0_126a0, %dec_label_pc_1269c ]
  %v7_126a4 = icmp eq i32 %v0_126a4, -1
  store i1 %v7_126a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_126a4, label %dec_label_pc_126a4._crit_edge, label %dec_label_pc_126ac

dec_label_pc_126ac:                               ; preds = %dec_label_pc_126a4
  %v7_126ac = icmp eq i32 %v1_126c8.pre, 1
  store i1 %v7_126ac, i1* %cpsr_z.global-to-local, align 1
  %v7_126b0 = icmp slt i32 %v1_126c8.pre, 2
  br i1 %v7_126b0, label %bb54, label %dec_label_pc_126a4._crit_edge

bb54:                                             ; preds = %dec_label_pc_126ac
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_126a4._crit_edge

dec_label_pc_126a4._crit_edge:                    ; preds = %dec_label_pc_126a4, %dec_label_pc_126ac, %bb54
  %v0_126c8 = phi i32 [ %v0_126a4, %dec_label_pc_126ac ], [ -1, %bb54 ], [ %v0_126a4, %dec_label_pc_126a4 ]
  %v2_126b8 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_126b8, i32* @r4, align 4
  %v0_126bc = load i32, i32* @r5, align 4
  %v2_126bc = add i32 %v0_126bc, -37200
  store i32 %v2_126bc, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_126c8 = add i32 %v0_126c8, %v1_126c8.pre
  store i32 %v2_126c8, i32* @sl, align 4
  %v9_12728 = icmp eq i32 %tmp, 65535
  %v7_126d068 = icmp eq i32 %v0_126c8, -1
  store i1 %v7_126d068, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_126d0

dec_label_pc_126d0:                               ; preds = %dec_label_pc_126a4._crit_edge, %dec_label_pc_12780
  %v7_126d072 = phi i1 [ %v7_126d068, %dec_label_pc_126a4._crit_edge ], [ %v7_126d0, %dec_label_pc_12780 ]
  %v0_126fc71 = phi i32 [ 0, %dec_label_pc_126a4._crit_edge ], [ %v1_12780, %dec_label_pc_12780 ]
  %v1_126e870 = phi i32 [ %v0_126c8, %dec_label_pc_126a4._crit_edge ], [ %v0_126d0.pre, %dec_label_pc_12780 ]
  %v2_1270069 = phi i32 [ %v2_126b8, %dec_label_pc_126a4._crit_edge ], [ %v3_126ec29, %dec_label_pc_12780 ]
  br i1 %v7_126d072, label %dec_label_pc_126f4, label %dec_label_pc_126d8

dec_label_pc_126d8:                               ; preds = %dec_label_pc_126d0
  %v9_126d8 = icmp eq i32 %v0_126fc71, %v1_126e870
  store i1 %v9_126d8, i1* %cpsr_z.global-to-local, align 1
  %v5_126dc = icmp slt i32 %v0_126fc71, %v1_126e870
  br i1 %v5_126dc, label %dec_label_pc_126f4, label %dec_label_pc_126e0

dec_label_pc_126e0:                               ; preds = %dec_label_pc_126d8
  %v1_126e0 = load i32, i32* @sl, align 4
  %v9_126e0 = icmp eq i32 %v0_126fc71, %v1_126e0
  store i1 %v9_126e0, i1* %cpsr_z.global-to-local, align 1
  %v6_126e4 = icmp slt i32 %v0_126fc71, %v1_126e0
  br i1 %v6_126e4, label %dec_label_pc_126e8, label %dec_label_pc_126f4

dec_label_pc_126e8:                               ; preds = %dec_label_pc_126e0
  store i1 %v9_126d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_126d8, label %bb56, label %dec_label_pc_12780

bb56:                                             ; preds = %dec_label_pc_126e8
  %v1_126ec = load i32, i32* @sb, align 4
  %v2_126ec = trunc i32 %v1_126ec to i8
  %v4_126ec = inttoptr i32 %v2_1270069 to i8*
  store i8 %v2_126ec, i8* %v4_126ec, align 1
  %v5_126ec = load i32, i32* @r4, align 4
  %v6_126ec = add i32 %v5_126ec, 1
  store i32 %v6_126ec, i32* @r4, align 4
  br label %dec_label_pc_12780

dec_label_pc_126f4:                               ; preds = %dec_label_pc_126e0, %dec_label_pc_126d8, %dec_label_pc_126d0
  %v2_126f4 = icmp eq i32 %v0_126fc71, 0
  store i1 %v2_126f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_126f4, label %dec_label_pc_12764, label %dec_label_pc_126fc

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126f4
  %v7_126fc = icmp eq i32 %v0_126fc71, 6
  store i1 %v7_126fc, i1* %cpsr_z.global-to-local, align 1
  %v0_12700 = load i32, i32* @sb, align 4
  %v1_12700 = trunc i32 %v0_12700 to i8
  %v3_12700 = inttoptr i32 %v2_1270069 to i8*
  store i8 %v1_12700, i8* %v3_12700, align 1
  %v4_12700 = load i32, i32* @r4, align 4
  %v5_12700 = add i32 %v4_12700, 1
  store i32 %v5_12700, i32* @r4, align 4
  %v0_12704 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12704, label %dec_label_pc_12708, label %dec_label_pc_12764

dec_label_pc_12708:                               ; preds = %dec_label_pc_126fc
  %v0_12708 = load i32, i32* @r6, align 4
  %v2_12708 = icmp eq i32 %v0_12708, 0
  store i1 %v2_12708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12708, label %dec_label_pc_12710, label %dec_label_pc_12764

dec_label_pc_12710:                               ; preds = %dec_label_pc_12708
  %v0_12710 = load i32, i32* @r7, align 4
  %v7_12710 = icmp eq i32 %v0_12710, 6
  store i1 %v7_12710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12710, label %dec_label_pc_12730, label %dec_label_pc_12718

dec_label_pc_12718:                               ; preds = %dec_label_pc_12710
  %v7_12718 = icmp eq i32 %v0_12710, 5
  store i1 %v7_12718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12718, label %dec_label_pc_12720, label %dec_label_pc_12764

dec_label_pc_12720:                               ; preds = %dec_label_pc_12718
  store i32 65535, i32* %r1.global-to-local, align 4
  store i1 %v9_12728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12728, label %dec_label_pc_12730, label %dec_label_pc_12764

dec_label_pc_12730:                               ; preds = %dec_label_pc_12720, %dec_label_pc_12710
  %v2_12734 = sub i32 %v2_12600, %v5_12700
  store i32 %v5_12700, i32* %r1.global-to-local, align 4
  %v0_1273c = load i32, i32* @r8, align 4
  %v1_1273c = add i32 %v0_1273c, 12
  store i32 %v1_1273c, i32* %r0.global-to-local, align 4
  %v1_12740 = add i32 %v2_12734, -32
  %v3_12744 = call i32 @inet_ntop4(i32 %v1_1273c, i32 %v5_12700, i32 %v1_12740)
  store i32 %v3_12744, i32* %r0.global-to-local, align 4
  %v2_12748 = icmp eq i32 %v3_12744, 0
  store i1 %v2_12748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12748, label %bb57, label %dec_label_pc_12754

bb57:                                             ; preds = %dec_label_pc_12730
  %v1_1274c = load i32, i32* @r6, align 4
  store i32 %v1_1274c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12804

dec_label_pc_12754:                               ; preds = %dec_label_pc_12730
  %v0_12754 = load i32, i32* @r4, align 4
  %v1_12754 = inttoptr i32 %v0_12754 to i8*
  store i32 %v0_12754, i32* %r0.global-to-local, align 4
  %v3_12758 = call i32 @strlen(i8* %v1_12754)
  store i32 %v3_12758, i32* %r0.global-to-local, align 4
  %v0_1275c = load i32, i32* @r4, align 4
  %v2_1275c = add i32 %v0_1275c, %v3_12758
  store i32 %v2_1275c, i32* @r4, align 4
  %v0_12794.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12794

dec_label_pc_12764:                               ; preds = %dec_label_pc_12720, %dec_label_pc_12718, %dec_label_pc_12708, %dec_label_pc_126fc, %dec_label_pc_126f4
  %v0_1276c = phi i32 [ %v5_12700, %dec_label_pc_12720 ], [ %v5_12700, %dec_label_pc_12718 ], [ %v5_12700, %dec_label_pc_12708 ], [ %v5_12700, %dec_label_pc_126fc ], [ %v2_1270069, %dec_label_pc_126f4 ]
  store i32 %v2_12600, i32* @lr, align 4
  %v1_12768 = load i32, i32* @r5, align 4
  %v4_12768 = mul i32 %v1_12768, 4
  %v5_12768 = add i32 %v4_12768, %v2_12600
  store i32 %v0_1276c, i32* @r0, align 4
  %v1_12770 = add i32 %v5_12768, -32
  %v2_12770 = inttoptr i32 %v1_12770 to i32*
  %v3_12770 = load i32, i32* %v2_12770, align 4
  %v0_12774 = load i32, i32* @fp, align 4
  store i32 %v0_12774, i32* %r1.global-to-local, align 4
  %v4_12778 = call i32 @sprintf(i32 %v0_1276c, i32 %v0_12774, i32 %v3_12770, i32 %v5_12768)
  store i32 %v4_12778, i32* %r0.global-to-local, align 4
  %v0_1277c = load i32, i32* @r4, align 4
  %v2_1277c = add i32 %v0_1277c, %v4_12778
  store i32 %v2_1277c, i32* @r4, align 4
  br label %dec_label_pc_12780

dec_label_pc_12780:                               ; preds = %bb56, %dec_label_pc_126e8, %dec_label_pc_12764
  %v3_126ec29 = phi i32 [ %v6_126ec, %bb56 ], [ %v2_1270069, %dec_label_pc_126e8 ], [ %v2_1277c, %dec_label_pc_12764 ]
  %v0_12780 = load i32, i32* @r5, align 4
  %v1_12780 = add i32 %v0_12780, 1
  store i32 %v1_12780, i32* @r5, align 4
  %v0_126d0.pre = load i32, i32* @r6, align 4
  %v7_12788 = icmp slt i32 %v1_12780, 8
  %v7_126d0 = icmp eq i32 %v0_126d0.pre, -1
  store i1 %v7_126d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12788, label %dec_label_pc_126d0, label %dec_label_pc_1278c

dec_label_pc_1278c:                               ; preds = %dec_label_pc_12780
  br i1 %v7_126d0, label %.thread2, label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_1278c, %dec_label_pc_12754
  %v3_127a0 = phi i32 [ %v3_126ec29, %dec_label_pc_1278c ], [ %v2_1275c, %dec_label_pc_12754 ]
  %v0_12794 = phi i32 [ %v0_126d0.pre, %dec_label_pc_1278c ], [ %v0_12794.pre, %dec_label_pc_12754 ]
  %v1_12794 = load i32, i32* @r7, align 4
  %v2_12794 = add i32 %v1_12794, %v0_12794
  %v7_12798 = icmp eq i32 %v2_12794, 8
  store i1 %v7_12798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12798, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_12794
  %v4_127a0 = inttoptr i32 %v3_127a0 to i8*
  store i8 58, i8* %v4_127a0, align 1
  %v5_127a0 = load i32, i32* @r4, align 4
  %v6_127a0 = add i32 %v5_127a0, 1
  store i32 %v6_127a0, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12794, %dec_label_pc_1278c, %bb58
  %v2_127a8 = phi i32 [ %v3_127a0, %dec_label_pc_12794 ], [ %v3_126ec29, %dec_label_pc_1278c ], [ %v6_127a0, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_127a8 = inttoptr i32 %v2_127a8 to i8*
  store i8 0, i8* %v3_127a8, align 1
  %v4_127a8 = load i32, i32* @r4, align 4
  %v5_127a8 = add i32 %v4_127a8, 1
  store i32 %v2_126b8, i32* @r1, align 4
  %v2_127b0 = load i32, i32* %stack_var_-128, align 4
  %v2_127b4 = sub i32 %v5_127a8, %v2_126b8
  %v9_127b8 = icmp eq i32 %v2_127b4, %v2_127b0
  store i1 %v9_127b8, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_127b4, %v2_127b0
  br i1 %tmp75, label %dec_label_pc_127c0, label %dec_label_pc_127dc

dec_label_pc_127c0:                               ; preds = %.thread2
  %v0_127c4 = call i32 @__aeabi_read_tp()
  store i32 %v0_127c4, i32* %r0.global-to-local, align 4
  %v3_127c8 = load i16, i16* @global_var_22308.76, align 2
  %v4_127c8 = sext i16 %v3_127c8 to i32
  %v0_127d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_127d0, i32* %r1.global-to-local, align 4
  %v3_127d4 = add i32 %v4_127c8, %v0_127c4
  %v4_127d4 = inttoptr i32 %v3_127d4 to i32*
  store i32 28, i32* %v4_127d4, align 4
  %v0_12804.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12804

dec_label_pc_127dc:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_127e0 = inttoptr i32 %arg3 to i8*
  %v3_127e0 = call i32 @strcpy(i8* %v2_127e0, i32 %v2_126b8)
  br label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_125bc, %dec_label_pc_127dc
  %storemerge = phi i32 [ %v3_125c8, %dec_label_pc_125bc ], [ %v3_127e0, %dec_label_pc_127dc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12804

dec_label_pc_127ec:                               ; preds = %dec_label_pc_125b0
  %v0_127f0 = call i32 @__aeabi_read_tp()
  store i32 %v0_127f0, i32* %r0.global-to-local, align 4
  %v3_127f4 = load i16, i16* @global_var_22308.76, align 2
  %v4_127f4 = sext i16 %v3_127f4 to i32
  %v3_127fc = add i32 %v4_127f4, %v0_127f0
  %v4_127fc = inttoptr i32 %v3_127fc to i32*
  store i32 97, i32* %v4_127fc, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %bb57, %dec_label_pc_127e4, %dec_label_pc_127c0, %dec_label_pc_127ec
  %v0_12804 = phi i32 [ %v1_1274c, %bb57 ], [ %storemerge, %dec_label_pc_127e4 ], [ %v0_12804.pre, %dec_label_pc_127c0 ], [ 0, %dec_label_pc_127ec ]
  store i32 %v0_12804, i32* %r0.global-to-local, align 4
  store i32 %v6_1258c, i32* %r5.global-to-local, align 4
  ret i32 %v0_12804

; uselistorder directives
  uselistorder i32 %v0_12804, { 1, 0 }
  uselistorder i1 %v7_126d0, { 2, 0, 1 }
  uselistorder i32 %v0_126d0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_12780, { 0, 2, 1 }
  uselistorder i32 %v0_1276c, { 1, 0 }
  uselistorder i32 %v0_12754, { 1, 0 }
  uselistorder i32 %v5_12700, { 3, 4, 5, 6, 2, 1, 0, 7 }
  uselistorder i1 %v9_126d8, { 1, 0, 2 }
  uselistorder i32 %v2_1270069, { 0, 3, 2, 1 }
  uselistorder i32 %v0_126fc71, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_126d068, { 1, 0 }
  uselistorder i32 %v2_126b8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_126c8, { 1, 0, 2 }
  uselistorder i1 %v7_126a4, { 1, 0 }
  uselistorder i32 %v0_126a4, { 1, 2, 0 }
  uselistorder i32 %v1_126c8.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1269c.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1268c, { 1, 0 }
  uselistorder i1 %v7_12684, { 1, 0 }
  uselistorder i32 %v1_12678, { 1, 2, 0 }
  uselistorder i32 %v0_1268c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_126a0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_12640, { 1, 0 }
  uselistorder i32 %v0_12678, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1265c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1266c, { 3, 1, 0, 2 }
  uselistorder i32 %v1_125fc, { 1, 0, 2 }
  uselistorder i32 %v2_125e4, { 1, 0 }
  uselistorder i32 %v0_125fc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_12600, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 6, 8, 7, 13, 9, 10, 11, 12, 14, 15, 16, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 15, 16, 17, 18, 19, 2, 20, 21, 22 }
  uselistorder i8 58, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_12804, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_127e4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126d0, { 1, 0 }
  uselistorder label %dec_label_pc_126a4._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_126a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1269c, { 1, 0 }
  uselistorder label %dec_label_pc_12678, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12674, { 1, 0 }
  uselistorder label %dec_label_pc_1262c, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_12828 = load i32, i32* @r5, align 4
  %v0_1282c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1282c, i32* %sl.global-to-local, align 4
  %v2_1282c = icmp eq i32 %v0_1282c, 0
  br i1 %v2_1282c, label %.thread30, label %dec_label_pc_12854.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_12914

dec_label_pc_12854.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_128544 = load i32, i32* @r1, align 4
  %v6_1285814 = icmp slt i32 %v0_128544, %arg2
  br i1 %v6_1285814, label %dec_label_pc_1285c.preheader, label %dec_label_pc_12914

dec_label_pc_1285c.preheader:                     ; preds = %dec_label_pc_12854.preheader
  %v2_1285c51 = add i32 %v0_1282c, %v0_128544
  %v3_1285c52 = inttoptr i32 %v2_1285c51 to i8*
  %v4_1285c53 = load i8, i8* %v3_1285c52, align 1
  %v6_1285c54 = zext i8 %v4_1285c53 to i32
  store i32 %v6_1285c54, i32* @r4, align 4
  %v2_1286055 = icmp eq i8 %v4_1285c53, 0
  br i1 %v2_1286055, label %bb49, label %dec_label_pc_12868

dec_label_pc_12850:                               ; preds = %bb48, %bb44
  %v1_12854 = phi i32 [ %v1_12854.pre, %bb48 ], [ %v1_1288059, %bb44 ]
  %v0_12854 = phi i32 [ %v0_12854.pre, %bb48 ], [ %v5_12898, %bb44 ]
  %v0_12850 = phi i32 [ %v0_12850.pre, %bb48 ], [ %v0_1289c60, %bb44 ]
  store i32 %v0_12850, i32* %r0.global-to-local, align 4
  %v6_12858 = icmp slt i32 %v0_12854, %v1_12854
  br i1 %v6_12858, label %dec_label_pc_12850.dec_label_pc_1285c_crit_edge, label %dec_label_pc_12914

dec_label_pc_12850.dec_label_pc_1285c_crit_edge:  ; preds = %dec_label_pc_12850
  %v0_1285c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1285c = add i32 %v0_1285c.pre, %v0_12854
  %v3_1285c = inttoptr i32 %v2_1285c to i8*
  %v4_1285c = load i8, i8* %v3_1285c, align 1
  %v6_1285c = zext i8 %v4_1285c to i32
  store i32 %v6_1285c, i32* @r4, align 4
  %v2_12860 = icmp eq i8 %v4_1285c, 0
  %v0_12900 = load i32, i32* @ip, align 4
  %v2_12900 = icmp eq i32 %v0_12900, 0
  br i1 %v2_12860, label %dec_label_pc_12900, label %dec_label_pc_12868

dec_label_pc_12868:                               ; preds = %dec_label_pc_1285c.preheader, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge
  %v2_1290066 = phi i1 [ %v2_12900, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ false, %dec_label_pc_1285c.preheader ]
  %v0_1290064 = phi i32 [ %v0_12900, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ 1, %dec_label_pc_1285c.preheader ]
  %v6_1285c63 = phi i32 [ %v6_1285c, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ %v6_1285c54, %dec_label_pc_1285c.preheader ]
  %v0_1288862 = phi i32 [ %v0_1285c.pre, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ %v0_1282c, %dec_label_pc_1285c.preheader ]
  %v0_1287861 = phi i32 [ %v0_12854, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ %v0_128544, %dec_label_pc_1285c.preheader ]
  %v0_1289c60 = phi i32 [ %v0_12850, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ 0, %dec_label_pc_1285c.preheader ]
  %v1_1288059 = phi i32 [ %v1_12854, %dec_label_pc_12850.dec_label_pc_1285c_crit_edge ], [ %arg2, %dec_label_pc_1285c.preheader ]
  %v1_1286c = and i32 %v6_1285c63, 192
  br i1 %v2_1290066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_12868
  %v1_12870 = load i32, i32* %r8.global-to-local, align 4
  %v2_12870 = add i32 %v1_12870, 1
  store i32 %v2_12870, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_12868, %bb
  %v2_12874 = icmp eq i32 %v1_1286c, 192
  %v1_12878 = add i32 %v0_1287861, 1
  store i32 %v1_12878, i32* @r1, align 4
  br i1 %v2_12874, label %dec_label_pc_12880, label %dec_label_pc_128a8

dec_label_pc_12880:                               ; preds = %bb42
  %v6_12884 = icmp slt i32 %v1_12878, %v1_1288059
  br i1 %v6_12884, label %dec_label_pc_12888, label %dec_label_pc_12914

dec_label_pc_12888:                               ; preds = %dec_label_pc_12880
  %v2_12888 = add i32 %v1_12878, %v0_1288862
  %v3_12888 = inttoptr i32 %v2_12888 to i8*
  %v4_12888 = load i8, i8* %v3_12888, align 1
  %v6_12888 = zext i8 %v4_12888 to i32
  %v1_12890 = urem i32 %v6_1285c63, 64
  br i1 %v2_1290066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_12888
  %v1_12894 = load i32, i32* %r8.global-to-local, align 4
  %v2_12894 = add i32 %v1_12894, 1
  store i32 %v2_12894, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_12888, %bb43
  %v4_12898 = mul nuw nsw i32 %v1_12890, 256
  %v5_12898 = or i32 %v6_12888, %v4_12898
  store i32 %v5_12898, i32* @r1, align 4
  store i32 %v0_1289c60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12850

dec_label_pc_128a8:                               ; preds = %bb42
  %v2_128a8 = add i32 %v6_1285c63, %v0_1289c60
  store i32 %v2_128a8, i32* %r6.global-to-local, align 4
  %v3_128ac = load i32, i32* %stack_var_0, align 4
  store i32 %v3_128ac, i32* @r3, align 4
  %v1_128b0 = add i32 %v2_128a8, 1
  store i32 %v1_128b0, i32* %r7.global-to-local, align 4
  %v3_128b4 = icmp ult i32 %v1_128b0, %v3_128ac
  br i1 %v3_128b4, label %dec_label_pc_128bc, label %dec_label_pc_12914

dec_label_pc_128bc:                               ; preds = %dec_label_pc_128a8
  %v2_128bc = add i32 %v6_1285c63, %v1_12878
  store i32 %v2_128bc, i32* @r5, align 4
  %v3_128c0 = icmp ult i32 %v2_128bc, %v1_1288059
  br i1 %v3_128c0, label %dec_label_pc_128c8, label %dec_label_pc_12914

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128bc
  %v2_128c8 = add i32 %v1_12878, %v0_1288862
  store i32 %v2_128c8, i32* @r1, align 4
  %v0_128cc = load i32, i32* %sb.global-to-local, align 4
  %v2_128cc = add i32 %v0_128cc, %v0_1289c60
  store i32 %v2_128cc, i32* @r0, align 4
  store i32 %v6_1285c63, i32* @r2, align 4
  %v0_128d8 = call i32 @memcpy()
  store i32 %v0_128d8, i32* %r0.global-to-local, align 4
  store i32 %v0_1290064, i32* @ip, align 4
  %v0_128e0 = load i32, i32* %sl.global-to-local, align 4
  %v1_128e0 = load i32, i32* @r5, align 4
  %v2_128e0 = add i32 %v1_128e0, %v0_128e0
  %v3_128e0 = inttoptr i32 %v2_128e0 to i8*
  %v4_128e0 = load i8, i8* %v3_128e0, align 1
  br i1 %v2_1290066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_128c8
  %v1_128e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_128e8 = load i32, i32* @r4, align 4
  %v3_128e8 = add i32 %v2_128e8, %v1_128e8
  store i32 %v3_128e8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_128c8, %bb45
  %v2_128ec = icmp eq i8 %v4_128e0, 0
  br i1 %v2_128ec, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_128f8.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_128e0, i32* @r1, align 4
  %v2_128f8 = load i32, i32* %sb.global-to-local, align 4
  %v3_128f8 = load i32, i32* %r6.global-to-local, align 4
  %v4_128f8 = add i32 %v3_128f8, %v2_128f8
  %v5_128f8 = inttoptr i32 %v4_128f8 to i8*
  store i8 %v0_128f8.off0, i8* %v5_128f8, align 1
  %v0_12850.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_12854.pre = load i32, i32* @r1, align 4
  %v1_12854.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_12850

dec_label_pc_12900:                               ; preds = %dec_label_pc_12850.dec_label_pc_1285c_crit_edge
  %v0_12908.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_12900, label %dec_label_pc_12914, label %bb49

bb49:                                             ; preds = %dec_label_pc_1285c.preheader, %dec_label_pc_12900
  %v0_12908.pre69 = phi i32 [ %v0_12908.pre.pre, %dec_label_pc_12900 ], [ 0, %dec_label_pc_1285c.preheader ]
  %v2_12904 = add i32 %v0_12908.pre69, 1
  store i32 %v2_12904, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_12914

dec_label_pc_12914:                               ; preds = %dec_label_pc_128bc, %dec_label_pc_128a8, %dec_label_pc_12880, %dec_label_pc_12850, %dec_label_pc_12900, %dec_label_pc_12854.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_12904, %bb49 ], [ -1, %dec_label_pc_12854.preheader ], [ %v0_12908.pre.pre, %dec_label_pc_12900 ], [ -1, %dec_label_pc_128a8 ], [ -1, %dec_label_pc_128bc ], [ -1, %dec_label_pc_12850 ], [ -1, %dec_label_pc_12880 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_12828, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_12908.pre.pre, { 1, 0 }
  uselistorder i32 %v1_128e0, { 1, 0 }
  uselistorder i32 %v5_12898, { 1, 0 }
  uselistorder i32 %v1_12878, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1289c60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1285c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1290066, { 1, 2, 0 }
  uselistorder i32 %v0_1282c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_12914, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_12868, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %tmp163 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp176 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_12920 = load i32, i32* @r4, align 4
  %v6_12920 = load i32, i32* @r5, align 4
  %v9_12920 = load i32, i32* @r6, align 4
  %v12_12920 = load i32, i32* @r7, align 4
  %v15_12920 = load i32, i32* @r8, align 4
  %v18_12920 = load i32, i32* @sb, align 4
  %v21_12920 = load i32, i32* @sl, align 4
  %v24_12920 = load i32, i32* @fp, align 4
  %v27_12920 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @sb, align 4
  %v0_12934 = load i32, i32* %r1.global-to-local, align 4
  %v1_1293c = call i32 @malloc(i32 512)
  store i32 %v1_1293c, i32* @sl, align 4
  %v0_12944 = load i32, i32* @r4, align 4
  %v1_12944 = inttoptr i32 %v0_12944 to i8*
  %v3_12948 = call i32 @strlen(i8* %v1_12944)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_12954 = icmp ugt i32 %v3_12948, 893
  store i1 %v3_12954, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r8, align 4
  %tmp288 = icmp ugt i32 %v3_12948, 894
  br i1 %tmp288, label %.thread134, label %dec_label_pc_12974

.thread134:                                       ; preds = %entry
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13098

dec_label_pc_12974:                               ; preds = %entry
  store i32 %v3_12948, i32* %r2.global-to-local, align 4
  %v1_12978 = add i32 %v3_12948, 130
  %v1_1297c = call i32 @malloc(i32 %v1_12978)
  store i32 %v1_1297c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12980 = icmp eq i32 %v1_1297c, 0
  br i1 %v2_12980, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_12974
  %v1_12984 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_12984 = icmp eq i32 %v1_12984, 0
  br i1 %v3_12984, label %bb217, label %dec_label_pc_12998

.thread6:                                         ; preds = %dec_label_pc_12974
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13090

bb217:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13090

dec_label_pc_12998:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_12998 = load i32, i32* @r4, align 4
  %v1_12998 = inttoptr i32 %v0_12998 to i8*
  %v2_12998 = load i8, i8* %v1_12998, align 1
  %v3_12998 = zext i8 %v2_12998 to i32
  store i32 %v3_12998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1299c = icmp eq i8 %v2_12998, 0
  br i1 %v2_1299c, label %dec_label_pc_13090, label %dec_label_pc_129a4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_12998
  %v2_129a8 = add i32 %v0_12998, %v3_12948
  store i32 %v2_129a8, i32* %r3.global-to-local, align 4
  %v1_129ac = add i32 %v2_129a8, -1
  %v2_129ac = inttoptr i32 %v1_129ac to i8*
  %v3_129ac = load i8, i8* %v2_129ac, align 1
  %v4_129ac = zext i8 %v3_129ac to i32
  store i32 %v4_129ac, i32* @r3, align 4
  store i32 %v3_12948, i32* @r2, align 4
  store i32 %v0_12998, i32* @r1, align 4
  %v0_129bc = call i32 @memcpy()
  store i32 13212, i32* %r3.global-to-local, align 4
  store i32 12196, i32* %r1.global-to-local, align 4
  store i32 703, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v2_12a34 = ptrtoint i32* %stack_var_-76 to i32
  %v2_12b44 = ptrtoint i16* %stack_var_-104 to i32
  %v2_12b6c = ptrtoint i32* %stack_var_-192 to i32
  %v3_12b8c = bitcast i32* %stack_var_-192 to i8*
  %v2_12c40 = ptrtoint i32* %stack_var_-48 to i32
  %v2_12cd8 = icmp eq i32 %tmp165, 0
  %v1_12ce4 = add i32 %tmp164, -2
  %v2_12ce8 = icmp ne i32 %v1_12ce4, 0
  %tmp218 = icmp slt i32 %tmp163, 1
  %v2_12de4 = ptrtoint i32* %stack_var_-448 to i32
  %v2_12de8 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1303c57 = icmp sgt i32 %tmp163, 0
  %v2_12f64 = icmp ne i32 %v0_12934, 0
  %v7_12f64 = icmp eq i32 %v0_12934, 1
  %v1_12e4c = bitcast i32* %stack_var_-448 to i8*
  %v2_12f00 = icmp eq i32 %tmp148, 0
  %v2_12cf4 = icmp ugt i8 %v3_129ac, 45
  %v7_12cf4 = icmp eq i8 %v3_129ac, 46
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_12a88 = add i32 %v1_1297c, %v3_12948
  %v5_12a88 = inttoptr i32 %v4_12a88 to i8*
  %v1_12ce4.cmp = icmp ugt i32 %v1_12ce4, 1
  %v2_12d24 = icmp eq i32 %tmp164, 0
  %v3_12f68 = icmp ugt i32 %v0_12934, 27
  %v8_12f68 = icmp eq i32 %v0_12934, 28
  br label %dec_label_pc_12a18

dec_label_pc_12a18:                               ; preds = %dec_label_pc_13078, %dec_label_pc_129a4
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_129a4 ], [ %v1_1307c, %dec_label_pc_13078 ]
  %stack_var_-464.0 = phi i32 [ %tmp176, %dec_label_pc_129a4 ], [ %v3_12b24, %dec_label_pc_13078 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_129a4 ], [ %stack_var_-468.2, %dec_label_pc_13078 ]
  %v1_12a20 = phi i32 [ -1, %dec_label_pc_129a4 ], [ %v3_12bf8, %dec_label_pc_13078 ]
  store i32 %v1_12a20, i32* %r3.global-to-local, align 4
  %v2_12a1c = icmp eq i32 %v1_12a20, -1
  store i1 %v2_12a1c, i1* %cpsr_c.global-to-local, align 1
  %v7_12a1c = icmp eq i32 %v1_12a20, -1
  br i1 %v7_12a1c, label %bb220, label %bb219

bb219:                                            ; preds = %dec_label_pc_12a18
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_12a18, %bb219
  %v1_12a24 = xor i1 %v7_12a1c, true
  call void @__pseudo_cond_branch(i1 %v1_12a24, i32 ptrtoint (i32* @global_var_dbf0.463 to i32))
  %v0_12a30 = load i32, i32* @r8, align 4
  %v2_12a30 = add i32 %v0_12a30, 76
  %v3_12a30 = inttoptr i32 %v2_12a30 to i32*
  %v4_12a30 = load i32, i32* %v3_12a30, align 4
  store i32 %v4_12a30, i32* @r4, align 4
  store i32 %v2_12a34, i32* @r5, align 4
  %v2_12a38 = add i32 %v0_12a30, 72
  %v3_12a38 = inttoptr i32 %v2_12a38 to i32*
  %v4_12a38 = load i32, i32* %v3_12a38, align 4
  store i32 %v4_12a38, i32* %r1.global-to-local, align 4
  store i32 %v4_12a30, i32* %r2.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_12a48 = add i32 %v0_12a30, 120
  %v3_12a48 = inttoptr i32 %v2_12a48 to i32*
  %v4_12a48 = load i32, i32* %v3_12a48, align 4
  call void @__pseudo_branch(i32 %v4_12a48)
  %v0_12a5c = load i32, i32* @r8, align 4
  %v2_12a5c = add i32 %v0_12a5c, 16
  %v3_12a5c = inttoptr i32 %v2_12a5c to i32*
  %v4_12a5c = load i32, i32* %v3_12a5c, align 4
  store i32 76392, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12a5c)
  %v0_12a68 = call i32 @__open_nameservers()
  %v0_12a70 = load i32, i32* @r8, align 4
  %v2_12a70 = add i32 %v0_12a70, 13212
  %v3_12a70 = inttoptr i32 %v2_12a70 to i32*
  %v4_12a70 = load i32, i32* %v3_12a70, align 4
  store i32 %v1_1297c, i32* %r1.global-to-local, align 4
  store i32 %v3_12948, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v0_12a80 = load i32, i32* @r7, align 4
  %v3_12a80 = icmp uge i32 %v0_12a80, %v4_12a70
  store i1 %v3_12a80, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_12a88, align 1
  %v0_12a8c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12a8c, label %dec_label_pc_12ab0, label %dec_label_pc_12a90

dec_label_pc_12a90:                               ; preds = %bb220
  store i32 46, i32* %r3.global-to-local, align 4
  %v2_12a94 = load i32, i32* %r1.global-to-local, align 4
  %v3_12a94 = load i32, i32* %r2.global-to-local, align 4
  %v4_12a94 = add i32 %v3_12a94, %v2_12a94
  %v5_12a94 = inttoptr i32 %v4_12a94 to i8*
  store i8 46, i8* %v5_12a94, align 1
  %v0_12a9c = load i32, i32* @r8, align 4
  %v2_12a9c = add i32 %v0_12a9c, 13200
  %v3_12a9c = inttoptr i32 %v2_12a9c to i32*
  %v4_12a9c = load i32, i32* %v3_12a9c, align 4
  store i32 %v4_12a9c, i32* %r3.global-to-local, align 4
  %v0_12aa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_12aa0 = add i32 %v0_12aa0, 1
  %v1_12aa4 = load i32, i32* %r2.global-to-local, align 4
  %v2_12aa4 = add i32 %v1_12aa0, %v1_12aa4
  %v1_12aa8 = load i32, i32* @r7, align 4
  %v2_12aa8 = and i32 %v1_12aa8, 1073741824
  %v3_12aa8 = icmp ne i32 %v2_12aa8, 0
  store i1 %v3_12aa8, i1* %cpsr_c.global-to-local, align 1
  %v4_12aa8 = mul i32 %v1_12aa8, 4
  %v5_12aa8 = add i32 %v4_12aa8, %v4_12a9c
  %v6_12aa8 = inttoptr i32 %v5_12aa8 to i32*
  %v7_12aa8 = load i32, i32* %v6_12aa8, align 4
  store i32 %v7_12aa8, i32* @r1, align 4
  %v2_12aac = inttoptr i32 %v2_12aa4 to i8*
  %v3_12aac = call i32 @strcpy(i8* %v2_12aac, i32 %v7_12aa8)
  br label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %bb220, %dec_label_pc_12a90
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12ab4 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_12ab4, label %dec_label_pc_12abc, label %dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge

dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge:  ; preds = %dec_label_pc_12ab0
  %v0_12af4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12abc:                               ; preds = %dec_label_pc_12ab0
  store i32 13208, i32* %r3.global-to-local, align 4
  store i32 703, i32* %r1.global-to-local, align 4
  %v0_12ac4 = load i32, i32* @r8, align 4
  %v2_12ac4 = add i32 %v0_12ac4, 13208
  %v3_12ac4 = inttoptr i32 %v2_12ac4 to i32*
  %v4_12ac4 = load i32, i32* %v3_12ac4, align 4
  store i32 %v4_12ac4, i32* %r2.global-to-local, align 4
  %v2_12ac8 = add i32 %v0_12ac4, 703
  %v3_12ac8 = inttoptr i32 %v2_12ac8 to i8*
  %v4_12ac8 = load i8, i8* %v3_12ac8, align 1
  %v6_12ac8 = zext i8 %v4_12ac8 to i32
  %v2_12acc = mul i32 %v6_12ac8, %v4_12ac4
  store i32 700, i32* %r2.global-to-local, align 4
  store i32 12196, i32* %r3.global-to-local, align 4
  %v2_12adc = add i32 %v0_12ac4, 700
  %v3_12adc = inttoptr i32 %v2_12adc to i16*
  %v4_12adc = load i16, i16* %v3_12adc, align 2
  %v6_12adc = zext i16 %v4_12adc to i32
  store i32 %v6_12adc, i32* %r2.global-to-local, align 4
  %v2_12ae0 = add i32 %v0_12ac4, 12196
  %v3_12ae0 = inttoptr i32 %v2_12ae0 to i32*
  %v4_12ae0 = load i32, i32* %v3_12ae0, align 4
  store i32 %v4_12ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge, %dec_label_pc_12abc
  %v2_12b30 = phi i32 [ %v0_12ac4, %dec_label_pc_12abc ], [ %v0_12af4.pre, %dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_12adc, %dec_label_pc_12abc ], [ %stack_var_-464.0, %dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_12ae0, %dec_label_pc_12abc ], [ %stack_var_-468.0, %dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_12acc, %dec_label_pc_12abc ], [ %stack_var_-476.0, %dec_label_pc_12ab0.dec_label_pc_12aec_crit_edge ]
  store i32 13208, i32* %r3.global-to-local, align 4
  %v2_12af4 = add i32 %v2_12b30, 13208
  %v3_12af4 = inttoptr i32 %v2_12af4 to i32*
  %v4_12af4 = load i32, i32* %v3_12af4, align 4
  store i32 %v4_12af4, i32* %r2.global-to-local, align 4
  store i32 13204, i32* %r3.global-to-local, align 4
  %v3_12afc = icmp uge i32 %stack_var_-468.1, %v4_12af4
  store i1 %v3_12afc, i1* %cpsr_c.global-to-local, align 1
  %v2_12b00 = add i32 %v2_12b30, 13204
  %v3_12b00 = inttoptr i32 %v2_12b00 to i32*
  %v4_12b00 = load i32, i32* %v3_12b00, align 4
  store i32 %v4_12b00, i32* %r3.global-to-local, align 4
  br i1 %v3_12afc, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_12aec
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_12aec, %bb221
  %v0_12b0c = phi i32 [ %stack_var_-468.1, %dec_label_pc_12aec ], [ 0, %bb221 ]
  %v3_12b0c = mul i32 %v0_12b0c, 28
  %v4_12b0c = add i32 %v3_12b0c, %v4_12b00
  store i32 %v4_12b0c, i32* %r3.global-to-local, align 4
  %v1_12b18 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_12b24 = urem i32 %v1_12b18, 65536
  store i32 12196, i32* %r1.global-to-local, align 4
  %v1_12b30 = trunc i32 %v1_12b18 to i16
  %v4_12b30 = add i32 %v2_12b30, 700
  %v5_12b30 = inttoptr i32 %v4_12b30 to i16*
  store i16 %v1_12b30, i16* %v5_12b30, align 2
  store i32 %v0_12b0c, i32* %r2.global-to-local, align 4
  %v1_12b38 = load i32, i32* @r8, align 4
  %v2_12b38 = load i32, i32* %r1.global-to-local, align 4
  %v3_12b38 = add i32 %v2_12b38, %v1_12b38
  %v4_12b38 = inttoptr i32 %v3_12b38 to i32*
  store i32 %v0_12b0c, i32* %v4_12b38, align 4
  %v0_12b3c = load i32, i32* %r3.global-to-local, align 4
  %v1_12b40 = inttoptr i32 %v0_12b3c to i32*
  %v2_12b40 = load i32, i32* %v1_12b40, align 4
  %v3_12b40 = add i32 %v0_12b3c, 4
  %v4_12b40 = inttoptr i32 %v3_12b40 to i32*
  %v5_12b40 = load i32, i32* %v4_12b40, align 4
  store i32 %v5_12b40, i32* %r1.global-to-local, align 4
  %v6_12b40 = add i32 %v0_12b3c, 8
  %v7_12b40 = inttoptr i32 %v6_12b40 to i32*
  %v8_12b40 = load i32, i32* %v7_12b40, align 4
  store i32 %v8_12b40, i32* %r2.global-to-local, align 4
  %v9_12b40 = add i32 %v0_12b3c, 12
  %v10_12b40 = inttoptr i32 %v9_12b40 to i32*
  %v11_12b40 = load i32, i32* %v10_12b40, align 4
  store i32 %v11_12b40, i32* %r3.global-to-local, align 4
  %v4_12b48 = trunc i32 %v2_12b40 to i16
  store i16 %v4_12b48, i16* %stack_var_-104, align 2
  %v3_12b4c = add i32 %v0_12b3c, 20
  %v4_12b4c = inttoptr i32 %v3_12b4c to i32*
  %v5_12b4c = load i32, i32* %v4_12b4c, align 4
  store i32 %v5_12b4c, i32* %r1.global-to-local, align 4
  %v6_12b4c = add i32 %v0_12b3c, 24
  %v7_12b4c = inttoptr i32 %v6_12b4c to i32*
  %v8_12b4c = load i32, i32* %v7_12b4c, align 4
  store i32 %v8_12b4c, i32* %r2.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12b60 = load i32, i32* @r8, align 4
  %v2_12b60 = add i32 %v0_12b60, 48
  %v3_12b60 = inttoptr i32 %v2_12b60 to i32*
  %v4_12b60 = load i32, i32* %v3_12b60, align 4
  store i32 76652, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12b60)
  store i32 %v2_12b6c, i32* @r6, align 4
  %v0_12b70 = load i32, i32* @fp, align 4
  store i32 %v0_12b70, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v0_12b78 = load i32, i32* @sl, align 4
  %v3_12b7c = inttoptr i32 %v0_12b78 to i8*
  %v4_12b7c = call i32 @__GI_memset(i8* %v3_12b7c, i32 %v0_12b70, i32 512)
  %v0_12b80 = load i32, i32* @fp, align 4
  store i32 %v0_12b80, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v4_12b8c = call i32 @__GI_memset(i8* %v3_12b8c, i32 %v0_12b80, i32 48)
  store i32 %v3_12b24, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_12b9c = load i32, i32* @sl, align 4
  store i32 %v0_12b9c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 %v3_12b24, i32* %stack_var_-192, align 4
  %v6_12bb0 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_12b9c, i32 512, i32 %v3_12b24, i32 %v3_12b24)
  store i32 %v6_12bb0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12bb4 = icmp slt i32 %v6_12bb0, 0
  br i1 %v1_12bb4, label %dec_label_pc_13090, label %dec_label_pc_12bbc

dec_label_pc_12bbc:                               ; preds = %bb222
  store i32 %v0_12934, i32* @ip, align 4
  store i32 %v1_1297c, i32* @r5, align 4
  %v0_12bcc = load i32, i32* @sl, align 4
  %v2_12bcc = add i32 %v0_12bcc, %v6_12bb0
  store i32 %v2_12bcc, i32* %r1.global-to-local, align 4
  %v1_12bd0 = sub i32 512, %v6_12bb0
  store i32 %v1_12bd0, i32* %r2.global-to-local, align 4
  store i32 %v1_1297c, i32* %stack_var_-60, align 4
  %v4_12bdc = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_12bcc, i32 %v1_12bd0)
  store i32 %v4_12bdc, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12be0 = icmp slt i32 %v4_12bdc, 0
  br i1 %v1_12be0, label %dec_label_pc_13090, label %dec_label_pc_12be8

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12bbc
  %v3_12bec = load i16, i16* %stack_var_-104, align 2
  %v4_12bec = sext i16 %v3_12bec to i32
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_12bf8 = call i32 @socket(i32 %v4_12bec, i32 2, i32 17)
  store i32 %v3_12bf8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12bfc = icmp slt i32 %v3_12bf8, 0
  br i1 %v1_12bfc, label %dec_label_pc_13068, label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12be8
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_12b44, i32* %r1.global-to-local, align 4
  %v3_12c10 = call i32 @__libc_connect(i32 %v3_12bf8, i32 %v2_12b44, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12c14 = icmp slt i32 %v3_12c10, 0
  br i1 %v1_12c14, label %dec_label_pc_13068, label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12c08
  %v0_12c1c = load i32, i32* @r5, align 4
  %v1_12c1c = load i32, i32* @r4, align 4
  %v2_12c1c = add i32 %v1_12c1c, %v0_12c1c
  store i32 %v2_12c1c, i32* %r2.global-to-local, align 4
  %v0_12c20 = load i32, i32* @fp, align 4
  store i32 %v0_12c20, i32* %r3.global-to-local, align 4
  %v0_12c28 = load i32, i32* @sl, align 4
  store i32 %v0_12c28, i32* %r1.global-to-local, align 4
  %v5_12c2c = call i32 @__libc_send(i32 %v3_12bf8, i32 %v0_12c28, i32 %v2_12c1c, i32 %v0_12c20, i32 ptrtoint (i32* @0 to i32))
  store i32 702, i32* %r3.global-to-local, align 4
  %v0_12c34 = load i32, i32* @r8, align 4
  %v2_12c34 = add i32 %v0_12c34, 702
  %v3_12c34 = inttoptr i32 %v2_12c34 to i8*
  %v4_12c34 = load i8, i8* %v3_12c34, align 1
  %v6_12c34 = zext i8 %v4_12c34 to i32
  store i32 %v6_12c34, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_12c3c = mul nuw nsw i32 %v6_12c34, 1000
  store i32 %v2_12c3c, i32* @r4, align 4
  store i32 %v2_12c40, i32* @r5, align 4
  br label %dec_label_pc_12c44

dec_label_pc_12c44:                               ; preds = %thread-pre-split, %dec_label_pc_12c1c
  %v0_12c54 = phi i32 [ %v1_12c90, %thread-pre-split ], [ %v2_12c3c, %dec_label_pc_12c1c ]
  store i32 %v3_12bf8, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v0_12c54, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v8_12c64 = call i32 @__GI_poll(i32 %v2_12c40, i32 1, i32 %v0_12c54, i32 1, i32 %v3_12bf8, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_12c6c = load i32, i32* @sl, align 4
  store i32 %v0_12c6c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp223 = icmp slt i32 %v8_12c64, 1
  br i1 %tmp223, label %dec_label_pc_13068, label %dec_label_pc_12c80

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c44
  %v5_12c80 = call i32 @__libc_recv(i32 %v3_12bf8, i32 %v0_12c6c, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_12c84 = icmp ugt i32 %v5_12c80, 10
  store i1 %v2_12c84, i1* %cpsr_c.global-to-local, align 1
  %v8_12c8c = icmp sgt i32 %v5_12c80, 11
  br i1 %v8_12c8c, label %dec_label_pc_12cb8, label %dec_label_pc_12c90

dec_label_pc_12c90:                               ; preds = %dec_label_pc_12cb8, %dec_label_pc_12cd4, %dec_label_pc_12c80
  %v0_12c90 = load i32, i32* @r4, align 4
  %v1_12c90 = add i32 %v0_12c90, -1000
  store i32 %v1_12c90, i32* @r4, align 4
  %v7_12c90 = icmp eq i32 %v0_12c90, 1000
  %tmp286 = zext i1 %v7_12c90 to i32
  %. = xor i32 %tmp286, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12ca0 = icmp slt i32 %v5_12c80, 0
  br i1 %v1_12ca0, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12c90
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_13068

thread-pre-split:                                 ; preds = %dec_label_pc_12c90
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_12c90, label %dec_label_pc_13068, label %dec_label_pc_12c44

dec_label_pc_12cb8:                               ; preds = %dec_label_pc_12c80
  %v0_12cb8 = load i32, i32* @sl, align 4
  store i32 %v2_12b6c, i32* %r1.global-to-local, align 4
  %v2_12cc0 = inttoptr i32 %v0_12cb8 to i8*
  %v3_12cc0 = call i32 @__decode_header(i8* %v2_12cc0, i32 %v2_12b6c)
  %v3_12cc4 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_12cc4, i32* %r3.global-to-local, align 4
  %v3_12ccc = icmp uge i32 %v3_12cc4, %v3_12b24
  store i1 %v3_12ccc, i1* %cpsr_c.global-to-local, align 1
  %v9_12ccc = icmp eq i32 %v3_12cc4, %v3_12b24
  br i1 %v9_12ccc, label %dec_label_pc_12cd4, label %dec_label_pc_12c90

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12cb8
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12cd8, label %dec_label_pc_12c90, label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12cd4
  store i32 %tmp164, i32* %r2.global-to-local, align 4
  store i32 %v1_12ce4, i32* %r3.global-to-local, align 4
  store i1 %v2_12ce8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_12ce4.cmp, label %dec_label_pc_12d24, label %dec_label_pc_12cf0

dec_label_pc_12cf0:                               ; preds = %dec_label_pc_12ce0
  store i32 %v4_129ac, i32* @r1, align 4
  store i1 %v2_12cf4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_12cf4, label %dec_label_pc_12d10, label %dec_label_pc_12cfc

dec_label_pc_12cfc:                               ; preds = %dec_label_pc_12cf0
  store i32 %v4_12a70, i32* %r2.global-to-local, align 4
  %v1_12d00 = add i32 %v4_12a70, -1
  store i32 %v1_12d00, i32* %r3.global-to-local, align 4
  %v0_12d04 = load i32, i32* @r7, align 4
  %v3_12d04 = icmp uge i32 %v0_12d04, %v1_12d00
  store i1 %v3_12d04, i1* %cpsr_c.global-to-local, align 1
  %v5_12d08 = icmp slt i32 %v0_12d04, %v1_12d00
  br i1 %v5_12d08, label %.thread8, label %dec_label_pc_12d10

.thread8:                                         ; preds = %dec_label_pc_12cfc
  %v7_12d08 = add i32 %v0_12d04, 1
  br label %dec_label_pc_13078

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12cfc, %dec_label_pc_12cf0
  store i32 62884, i32* %r3.global-to-local, align 4
  %v0_12d14 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12d54

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12ce0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12d24, label %dec_label_pc_12d2c, label %dec_label_pc_13068

dec_label_pc_12d2c:                               ; preds = %dec_label_pc_12d24
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp218, label %dec_label_pc_12d44, label %dec_label_pc_12d5c

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d2c
  store i32 62832, i32* %r3.global-to-local, align 4
  %v0_12d48 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d10, %dec_label_pc_12d44
  %storemerge3 = phi i32 [ %v0_12d14, %dec_label_pc_12d10 ], [ %v0_12d48, %dec_label_pc_12d44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_12d10 ], [ 4, %dec_label_pc_12d44 ]
  %storemerge2 = load i32, i32* @global_var_222c4.104, align 4
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_12d54 = add i32 %storemerge2, %storemerge3
  %v4_12d54 = inttoptr i32 %v3_12d54 to i32*
  store i32 %storemerge, i32* %v4_12d54, align 4
  br label %dec_label_pc_130b8

dec_label_pc_12d5c:                               ; preds = %dec_label_pc_12d2c
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_12d60.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @r7, align 4
  %v2_12d60 = add i32 %v0_12d60.pre, 12
  store i32 %v2_12d60, i32* @r4, align 4
  %v3_12d60 = icmp ugt i32 %v0_12d60.pre, -13
  store i1 %v3_12d60, i1* %cpsr_c.global-to-local, align 1
  %v9_12d60 = icmp eq i32 %v2_12d60, 0
  br i1 %v9_12d60, label %dec_label_pc_13068, label %dec_label_pc_12d68

dec_label_pc_12d68:                               ; preds = %dec_label_pc_12d5c
  %v2_12d70 = add i32 %v5_12c80, -12
  store i32 %v2_12d70, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_12d70, 1
  br i1 %tmp227, label %dec_label_pc_13068, label %dec_label_pc_12d7c

dec_label_pc_12d74thread-pre-split:               ; preds = %dec_label_pc_12d98
  %v2_12da416 = add i32 %v2_12d88, -1
  store i32 %v2_12da416, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_12da416, 1
  br i1 %tmp228, label %dec_label_pc_13068, label %dec_label_pc_12d7c

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_12d68, %dec_label_pc_12d74thread-pre-split
  %v1_12da0 = phi i32 [ %v2_12da416, %dec_label_pc_12d74thread-pre-split ], [ %v2_12d70, %dec_label_pc_12d68 ]
  %v0_12d7c = phi i32 [ %v2_12d90, %dec_label_pc_12d74thread-pre-split ], [ %v2_12d60, %dec_label_pc_12d68 ]
  %v1_12d7c = inttoptr i32 %v0_12d7c to i8*
  %v2_12d7c = load i8, i8* %v1_12d7c, align 1
  %v3_12d7c = zext i8 %v2_12d7c to i32
  store i32 %v3_12d7c, i32* %r3.global-to-local, align 4
  %v5_12d7c = add i32 %v0_12d7c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12d80 = icmp eq i8 %v2_12d7c, 0
  store i32 %v5_12d7c, i32* %r2.global-to-local, align 4
  %v2_12d88 = sub i32 %v1_12da0, %v3_12d7c
  store i32 %v2_12d88, i32* @lr, align 4
  %v2_12d90 = add i32 %v3_12d7c, %v5_12d7c
  br i1 %v2_12d80, label %dec_label_pc_12dac, label %dec_label_pc_12d98

dec_label_pc_12d98:                               ; preds = %dec_label_pc_12d7c
  %v1_12d8c = and i32 %v3_12d7c, 192
  %v2_12d98 = icmp eq i32 %v1_12d8c, 192
  store i1 %v2_12d98, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12d98, label %.thread10, label %dec_label_pc_12d74thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_12d98
  %v2_12d9c = add i32 %v0_12d7c, 2
  store i32 %v2_12d9c, i32* %r2.global-to-local, align 4
  %v2_12da0 = add i32 %v1_12da0, -2
  store i32 %v2_12da0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d7c, %.thread10
  %v1_12db8 = phi i32 [ %v2_12d9c, %.thread10 ], [ %v5_12d7c, %dec_label_pc_12d7c ]
  %v0_12dac = phi i32 [ %v2_12da0, %.thread10 ], [ %v1_12da0, %dec_label_pc_12d7c ]
  %v1_12dac = add i32 %v0_12dac, -3
  %v2_12dac = icmp ugt i32 %v0_12dac, 2
  store i1 %v2_12dac, i1* %cpsr_c.global-to-local, align 1
  %v3_12dac = sub i32 2, %v0_12dac
  %v4_12dac = and i32 %v3_12dac, %v0_12dac
  %v5_12dac = icmp slt i32 %v4_12dac, 0
  %v6_12dac = icmp slt i32 %v1_12dac, 0
  %v7_12dac = icmp eq i32 %v0_12dac, 3
  %v3_12db0 = xor i1 %v6_12dac, %v5_12dac
  %v4_12db0 = or i1 %v7_12dac, %v3_12db0
  br i1 %v4_12db0, label %dec_label_pc_13068, label %dec_label_pc_12db4

dec_label_pc_12db4:                               ; preds = %dec_label_pc_12dac
  %v1_12db4 = sub i32 -8, %v0_12d60.pre
  %v2_12db8 = add i32 %v1_12db8, %v1_12db4
  store i32 %v2_12db8, i32* %r3.global-to-local, align 4
  %v3_12db8 = icmp ult i32 %v2_12db8, %v1_12db4
  store i1 %v3_12db8, i1* %cpsr_c.global-to-local, align 1
  %v8_12db8 = icmp slt i32 %v2_12db8, 0
  br i1 %v8_12db8, label %dec_label_pc_13068, label %dec_label_pc_12ddc

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12db4
  %v2_12dc4 = add i32 %v2_12db8, 12
  store i32 1, i32* @r1, align 4
  store i32 %v2_12de8, i32* @r5, align 4
  %v1_12dfc = load i32, i32* @sb, align 4
  %v2_12dfc = inttoptr i32 %v1_12dfc to i32*
  store i32 0, i32* %v2_12dfc, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1303c57, label %dec_label_pc_12e04, label %dec_label_pc_13040

dec_label_pc_12e04:                               ; preds = %dec_label_pc_12ddc, %dec_label_pc_13018
  %stack_var_-460.365 = phi i32 [ %v2_13020, %dec_label_pc_13018 ], [ %v2_12dc4, %dec_label_pc_12ddc ]
  %stack_var_-452.062 = phi i32 [ %v1_13024, %dec_label_pc_13018 ], [ 0, %dec_label_pc_12ddc ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_13018 ], [ 1, %dec_label_pc_12ddc ]
  %v0_12e04 = load i32, i32* @sl, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v5_12c80, i32* %r2.global-to-local, align 4
  store i32 %v2_12de4, i32* %r3.global-to-local, align 4
  store i32 256, i32* @r7, align 4
  %v5_12e1c = call i32 @__decode_dotted(i32 %v0_12e04, i32 %stack_var_-460.365, i32 %v5_12c80, i32 %v2_12de4, i32 256)
  store i32 %v5_12e1c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12e20 = icmp slt i32 %v5_12e1c, 0
  br i1 %v1_12e20, label %dec_label_pc_12ef0, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e04
  %v1_12e30 = add i32 %v5_12e1c, 10
  store i32 %v1_12e30, i32* @fp, align 4
  %v2_12e34 = sub i32 %v5_12c80, %stack_var_-460.365
  %v2_12e38 = sub i32 %v2_12e34, %v1_12e30
  store i32 %v2_12e38, i32* %r3.global-to-local, align 4
  %v3_12e38 = icmp uge i32 %v2_12e34, %v1_12e30
  store i1 %v3_12e38, i1* %cpsr_c.global-to-local, align 1
  %v8_12e38 = icmp slt i32 %v2_12e38, 0
  br i1 %v8_12e38, label %dec_label_pc_12ee8.thread, label %dec_label_pc_12e48

dec_label_pc_12ee8.thread:                        ; preds = %dec_label_pc_12e28
  store i32 %v2_12e38, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_12ef0

dec_label_pc_12e48:                               ; preds = %dec_label_pc_12e28
  %v2_12e4c = call i32 @__GI_strdup(i8* %v1_12e4c)
  %v0_12e54 = load i32, i32* @r4, align 4
  %v2_12e54 = add i32 %v0_12e54, %stack_var_-460.365
  %v0_12e58 = load i32, i32* @sl, align 4
  %v2_12e58 = add i32 %v0_12e58, %v2_12e54
  store i32 %v2_12e58, i32* %r1.global-to-local, align 4
  %v1_12e5c = add i32 %v2_12e58, 2
  %v1_12e60 = add i32 %v2_12e58, 4
  store i32 %v1_12e60, i32* %r3.global-to-local, align 4
  %v1_12e64 = add i32 %v2_12e58, 5
  %v2_12e64 = inttoptr i32 %v1_12e64 to i8*
  %v3_12e64 = load i8, i8* %v2_12e64, align 1
  %v4_12e64 = zext i8 %v3_12e64 to i32
  %v2_12e68 = inttoptr i32 %v1_12e60 to i8*
  %v3_12e68 = load i8, i8* %v2_12e68, align 1
  %v4_12e68 = zext i8 %v3_12e68 to i32
  %v1_12e6c = add i32 %v2_12e58, 8
  %v2_12e6c = inttoptr i32 %v1_12e6c to i8*
  %v3_12e6c = load i8, i8* %v2_12e6c, align 1
  %v4_12e6c = zext i8 %v3_12e6c to i32
  %v1_12e70 = add i32 %v2_12e58, 7
  %v2_12e70 = inttoptr i32 %v1_12e70 to i8*
  %v3_12e70 = load i8, i8* %v2_12e70, align 1
  %v4_12e70 = zext i8 %v3_12e70 to i32
  store i32 %v4_12e70, i32* %r2.global-to-local, align 4
  %v1_12e78 = add i32 %v2_12e58, 6
  %v2_12e78 = inttoptr i32 %v1_12e78 to i8*
  %v3_12e78 = load i8, i8* %v2_12e78, align 1
  %v4_12e78 = zext i8 %v3_12e78 to i32
  store i32 %v4_12e78, i32* %r3.global-to-local, align 4
  %v1_12e7c = add i32 %v2_12e58, 9
  %v2_12e7c = inttoptr i32 %v1_12e7c to i8*
  %v3_12e7c = load i8, i8* %v2_12e7c, align 1
  %v4_12e7c = zext i8 %v3_12e7c to i32
  %v3_12e84 = inttoptr i32 %v2_12e58 to i8*
  %v4_12e84 = load i8, i8* %v3_12e84, align 1
  %v6_12e84 = zext i8 %v4_12e84 to i32
  %v1_12e88 = add i32 %v2_12e58, 3
  %v2_12e88 = inttoptr i32 %v1_12e88 to i8*
  %v3_12e88 = load i8, i8* %v2_12e88, align 1
  %v4_12e88 = zext i8 %v3_12e88 to i32
  store i32 %v4_12e88, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_12e8c = mul nuw i32 %v4_12e68, 16777216
  %v5_12e8c = or i32 %v4_12e70, %v4_12e8c
  store i32 %v5_12e8c, i32* %r2.global-to-local, align 4
  %v2_12e90 = inttoptr i32 %v1_12e5c to i8*
  %v3_12e90 = load i8, i8* %v2_12e90, align 1
  %v4_12e90 = zext i8 %v3_12e90 to i32
  %v1_12e94 = add i32 %v2_12e58, 1
  %v2_12e94 = inttoptr i32 %v1_12e94 to i8*
  %v3_12e94 = load i8, i8* %v2_12e94, align 1
  %v4_12e94 = zext i8 %v3_12e94 to i32
  %v4_12e98 = mul nuw nsw i32 %v4_12e6c, 256
  %v5_12e98 = or i32 %v4_12e7c, %v4_12e98
  store i32 %v5_12e98, i32* @r6, align 4
  store i32 %v4_12e64, i32* @r7, align 4
  %v4_12ea0 = mul nuw nsw i32 %v6_12e84, 256
  %v5_12ea0 = or i32 %v4_12e94, %v4_12ea0
  store i32 %v5_12ea0, i32* @lr, align 4
  %v4_12ea4 = mul nuw nsw i32 %v4_12e90, 256
  %v5_12ea4 = or i32 %v4_12ea4, %v4_12e88
  store i32 %v5_12ea4, i32* %r3.global-to-local, align 4
  store i32 %v2_12e38, i32* @r5, align 4
  %v4_12eb0 = mul nuw nsw i32 %v4_12e64, 65536
  %v5_12eb0 = or i32 %v5_12e8c, %v4_12eb0
  %v4_12eb4 = mul nuw nsw i32 %v4_12e78, 256
  %v5_12eb4 = or i32 %v5_12eb0, %v4_12eb4
  store i32 %v5_12eb4, i32* %r2.global-to-local, align 4
  %v1_12eb8 = add i32 %v2_12e58, 10
  store i32 %v1_12eb8, i32* @r1, align 4
  %v1_12ebc = add i32 %v2_12e54, 10
  store i32 %v1_12ebc, i32* @r4, align 4
  %v2_12ec0 = sub i32 %v2_12e38, %v5_12e98
  %v3_12ec0 = icmp uge i32 %v2_12e38, %v5_12e98
  store i1 %v3_12ec0, i1* %cpsr_c.global-to-local, align 1
  %tmp230 = sub i32 0, %v2_12ec0
  %v6_12ec0 = and i32 %v2_12e38, %tmp230
  %v7_12ec0 = icmp slt i32 %v6_12ec0, 0
  %v8_12ec0 = icmp slt i32 %v2_12ec0, 0
  store i32 %v2_12e4c, i32* %stack_var_-144, align 4
  %v2_12ee0 = xor i1 %v8_12ec0, %v7_12ec0
  br i1 %v2_12ee0, label %dec_label_pc_12ef0, label %dec_label_pc_12ee8

dec_label_pc_12ee8:                               ; preds = %dec_label_pc_12e48
  %v0_12ee4 = load i32, i32* @fp, align 4
  %v2_12ee4 = add i32 %v0_12ee4, %v5_12e98
  store i32 %v2_12ee4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_12ee8 = icmp slt i32 %v2_12ee4, 0
  br i1 %v1_12ee8, label %dec_label_pc_12ef0, label %dec_label_pc_12f0c

dec_label_pc_12ef0:                               ; preds = %dec_label_pc_12ee8, %dec_label_pc_12e48, %dec_label_pc_12e04, %dec_label_pc_12ee8.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12ef4 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_12ef4, label %dec_label_pc_13068, label %dec_label_pc_12efc

dec_label_pc_12efc:                               ; preds = %dec_label_pc_12ef0
  store i32 %tmp148, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_12f00, label %dec_label_pc_13068, label %dec_label_pc_13040

dec_label_pc_12f0c:                               ; preds = %dec_label_pc_12ee8
  store i32 %stack_var_-480.261, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12f10 = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_12f10, label %dec_label_pc_12fc0, label %dec_label_pc_12f18

dec_label_pc_12f18:                               ; preds = %dec_label_pc_12f0c
  %v0_12f18 = load i32, i32* @sb, align 4
  %v1_12f18 = add i32 %v0_12f18, 28
  %v2_12f18 = inttoptr i32 %v1_12f18 to i32*
  %v3_12f18 = load i32, i32* %v2_12f18, align 4
  store i32 %v3_12f18, i32* @r3, align 4
  %v1_12f1c = add i32 %v0_12f18, 32
  %v2_12f1c = inttoptr i32 %v1_12f1c to i32*
  %v3_12f1c = load i32, i32* %v2_12f1c, align 4
  store i32 %v3_12f1c, i32* %r2.global-to-local, align 4
  %v1_12f20 = add i32 %v0_12f18, 36
  %v2_12f20 = inttoptr i32 %v1_12f20 to i32*
  %v3_12f20 = load i32, i32* %v2_12f20, align 4
  store i32 %v3_12f20, i32* %r1.global-to-local, align 4
  %v1_12f24 = inttoptr i32 %v0_12f18 to i32*
  %v2_12f24 = load i32, i32* %v1_12f24, align 4
  store i32 %v2_12f24, i32* @r0, align 4
  %v0_12f34 = call i32 @free()
  store i32 40, i32* @r2, align 4
  %v0_12f3c = load i32, i32* @sb, align 4
  store i32 %v0_12f3c, i32* @r0, align 4
  store i32 %v2_12de8, i32* @r1, align 4
  %v0_12f44 = call i32 @memcpy()
  %v0_12f48 = load i32, i32* @sb, align 4
  %v1_12f48 = add i32 %v0_12f48, 4
  %v2_12f48 = inttoptr i32 %v1_12f48 to i32*
  %v3_12f48 = load i32, i32* %v2_12f48, align 4
  store i32 %v3_12f48, i32* %r2.global-to-local, align 4
  %v2_12f4c = icmp ugt i32 %v3_12f48, 23
  store i1 %v2_12f4c, i1* %cpsr_c.global-to-local, align 1
  %v7_12f4c = icmp eq i32 %v3_12f48, 24
  br i1 %v7_12f4c, label %dec_label_pc_12f70, label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %dec_label_pc_12f18
  %v1_12f54 = add i32 %v0_12f48, 28
  %v2_12f54 = inttoptr i32 %v1_12f54 to i32*
  %v3_12f54 = load i32, i32* %v2_12f54, align 4
  store i32 %v3_12f54, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12f58 = icmp eq i32 %v3_12f54, 0
  br i1 %v2_12f58, label %dec_label_pc_13040, label %dec_label_pc_12f60

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f54
  store i1 %v2_12f64, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_12f64, label %dec_label_pc_12f70, label %bb231

bb231:                                            ; preds = %dec_label_pc_12f60
  store i1 %v3_12f68, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_12f68, label %dec_label_pc_12f70, label %dec_label_pc_13040

dec_label_pc_12f70:                               ; preds = %dec_label_pc_12f60, %bb231, %dec_label_pc_12f18
  store i32 %v0_12934, i32* %r1.global-to-local, align 4
  %v3_12f74 = icmp uge i32 %v3_12f48, %v0_12934
  store i1 %v3_12f74, i1* %cpsr_c.global-to-local, align 1
  %v9_12f74 = icmp eq i32 %v3_12f48, %v0_12934
  br i1 %v9_12f74, label %dec_label_pc_12f84, label %bb232

bb232:                                            ; preds = %dec_label_pc_12f70
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13018

dec_label_pc_12f84:                               ; preds = %dec_label_pc_12f70
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_12f8c = add i32 %v0_12f48, 16
  %v2_12f8c = inttoptr i32 %v1_12f8c to i32*
  %v3_12f8c = load i32, i32* %v2_12f8c, align 4
  %v2_12f90 = sub i32 %tmp163, %stack_var_-452.062
  %v1_12f94 = add i32 %v2_12f90, -1
  store i32 %v1_12f94, i32* %r3.global-to-local, align 4
  %v1_12f98 = add i32 %v3_12f8c, 4
  store i32 %v1_12f98, i32* %r2.global-to-local, align 4
  %v2_12f9c = mul i32 %v1_12f98, %v1_12f94
  store i32 %v2_12f9c, i32* @r1, align 4
  %v1_12fa0 = add i32 %v0_12f48, 32
  %v2_12fa0 = inttoptr i32 %v1_12fa0 to i32*
  %v3_12fa0 = load i32, i32* %v2_12fa0, align 4
  store i32 %v3_12fa0, i32* %r2.global-to-local, align 4
  %v3_12fa4 = icmp uge i32 %v2_12f9c, %v3_12fa0
  store i1 %v3_12fa4, i1* %cpsr_c.global-to-local, align 1
  %v2_12fa8 = add i32 %v0_12f48, 36
  %v3_12fa8 = inttoptr i32 %v2_12fa8 to i32*
  store i32 %v1_12f94, i32* %v3_12fa8, align 4
  %tmp289 = icmp ugt i32 %v2_12f9c, %v3_12fa0
  br i1 %tmp289, label %dec_label_pc_13040, label %dec_label_pc_12fb0

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12f84
  store i32 0, i32* @r7, align 4
  %v1_12fb8 = load i32, i32* @sb, align 4
  %v2_12fb8 = add i32 %v1_12fb8, 36
  %v3_12fb8 = inttoptr i32 %v2_12fb8 to i32*
  store i32 0, i32* %v3_12fb8, align 4
  br label %dec_label_pc_13018

dec_label_pc_12fc0:                               ; preds = %dec_label_pc_12f0c
  store i32 %v2_12e4c, i32* @r0, align 4
  %v0_12fc4 = call i32 @free()
  store i32 %v5_12ea0, i32* %r3.global-to-local, align 4
  store i32 %v0_12934, i32* @ip, align 4
  %v3_12fd0 = icmp uge i32 %v5_12ea0, %v0_12934
  store i1 %v3_12fd0, i1* %cpsr_c.global-to-local, align 1
  %v9_12fd0 = icmp eq i32 %v5_12ea0, %v0_12934
  br i1 %v9_12fd0, label %dec_label_pc_12fd8, label %dec_label_pc_13018

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12fc0
  %v0_12fd8 = load i32, i32* @sb, align 4
  %v1_12fd8 = add i32 %v0_12fd8, 16
  %v2_12fd8 = inttoptr i32 %v1_12fd8 to i32*
  %v3_12fd8 = load i32, i32* %v2_12fd8, align 4
  store i32 %v3_12fd8, i32* %r1.global-to-local, align 4
  store i32 %v5_12e98, i32* %r3.global-to-local, align 4
  %v3_12fe0 = icmp uge i32 %v3_12fd8, %v5_12e98
  store i1 %v3_12fe0, i1* %cpsr_c.global-to-local, align 1
  %v9_12fe0 = icmp eq i32 %v3_12fd8, %v5_12e98
  br i1 %v9_12fe0, label %dec_label_pc_12ff4, label %dec_label_pc_12fe8

dec_label_pc_12fe8:                               ; preds = %dec_label_pc_12fd8
  %v1_12fe8 = inttoptr i32 %v0_12fd8 to i32*
  %v2_12fe8 = load i32, i32* %v1_12fe8, align 4
  store i32 %v2_12fe8, i32* @r0, align 4
  %v0_12fec = call i32 @free()
  br label %dec_label_pc_13068

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12fd8
  %v1_12ff4 = add i32 %v0_12fd8, 36
  %v2_12ff4 = inttoptr i32 %v1_12ff4 to i32*
  %v3_12ff4 = load i32, i32* %v2_12ff4, align 4
  store i32 %v3_12ff4, i32* %r2.global-to-local, align 4
  %v1_12ff8 = add i32 %v0_12fd8, 28
  %v2_12ff8 = inttoptr i32 %v1_12ff8 to i32*
  %v3_12ff8 = load i32, i32* %v2_12ff8, align 4
  store i32 %v3_12ff8, i32* @r3, align 4
  %v3_12ffc = mul i32 %v3_12ff4, %v5_12e98
  %v4_12ffc = add i32 %v3_12ff8, %v3_12ffc
  store i32 %v4_12ffc, i32* @r0, align 4
  store i32 %v5_12e98, i32* @r2, align 4
  store i32 %v1_12eb8, i32* @r1, align 4
  %v0_13008 = call i32 @memcpy()
  %v0_1300c = load i32, i32* @sb, align 4
  %v1_1300c = add i32 %v0_1300c, 36
  %v2_1300c = inttoptr i32 %v1_1300c to i32*
  %v3_1300c = load i32, i32* %v2_1300c, align 4
  %v1_13010 = add i32 %v3_1300c, 1
  store i32 %v1_13010, i32* %r3.global-to-local, align 4
  store i32 %v1_13010, i32* %v2_1300c, align 4
  br label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %bb232, %dec_label_pc_12fc0, %dec_label_pc_12fb0, %dec_label_pc_12ff4
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_12ff4 ], [ 0, %dec_label_pc_12fc0 ], [ 0, %dec_label_pc_12fb0 ], [ 1, %bb232 ]
  %v1_13020 = load i32, i32* @r4, align 4
  %v2_13020 = add i32 %v1_13020, %stack_var_-460.365
  %v1_13024 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_13024, i32* @r1, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %v1_13024, i32* %r2.global-to-local, align 4
  %v3_13038 = icmp uge i32 %v1_13024, %tmp163
  store i1 %v3_13038, i1* %cpsr_c.global-to-local, align 1
  %v5_1303c = icmp slt i32 %v1_13024, %tmp163
  br i1 %v5_1303c, label %dec_label_pc_12e04, label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_12efc, %dec_label_pc_12ddc, %dec_label_pc_13018, %dec_label_pc_12f54, %dec_label_pc_12f84, %bb231
  %v1_13044 = call i32 @__GI___libc_close(i32 %v3_12bf8)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1304c = icmp eq i32 %arg3, 0
  br i1 %v2_1304c, label %.thread22, label %bb234

bb234:                                            ; preds = %dec_label_pc_13040
  %v1_13054 = load i32, i32* @sl, align 4
  %v3_13050 = inttoptr i32 %arg3 to i32*
  store i32 %v1_13054, i32* %v3_13050, align 4
  br label %bb235

.thread22:                                        ; preds = %dec_label_pc_13040
  br label %bb235

bb235:                                            ; preds = %bb234, %.thread22
  store i32 ptrtoint (i32* @global_var_1305c.470 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1304c, i32 ptrtoint (i32* @global_var_c048.324 to i32))
  store i32 %v1_1297c, i32* @r0, align 4
  %v0_13060 = call i32 @free()
  br label %dec_label_pc_130d8

dec_label_pc_13068:                               ; preds = %thread-pre-split, %dec_label_pc_12c44, %dec_label_pc_12db4, %dec_label_pc_12dac, %dec_label_pc_12d5c, %dec_label_pc_12d68, %dec_label_pc_12d74thread-pre-split, %thread-pre-split.thread, %dec_label_pc_12d24, %dec_label_pc_12efc, %dec_label_pc_12ef0, %dec_label_pc_12c08, %dec_label_pc_12be8, %dec_label_pc_12fe8
  %v1_1306c = add i32 %v0_12b0c, 1
  store i32 %v1_1306c, i32* @r5, align 4
  br label %dec_label_pc_13078

dec_label_pc_13078:                               ; preds = %.thread8, %dec_label_pc_13068
  %storemerge23 = phi i32 [ -1, %dec_label_pc_13068 ], [ %v7_12d08, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_1306c, %dec_label_pc_13068 ], [ %v0_12b0c, %.thread8 ]
  store i32 %storemerge23, i32* @r7, align 4
  %v1_1307c = add i32 %stack_var_-476.1, -1
  store i32 %v1_1307c, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp236 = icmp slt i32 %v1_1307c, 1
  br i1 %tmp236, label %dec_label_pc_13098, label %dec_label_pc_12a18

dec_label_pc_13090:                               ; preds = %dec_label_pc_12bbc, %bb222, %bb217, %.thread6, %dec_label_pc_12998
  br label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_13078, %.thread134, %dec_label_pc_13090
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_13090 ], [ -1, %.thread134 ], [ %v3_12bf8, %dec_label_pc_13078 ]
  %stack_var_-472.1 = phi i32 [ %v1_1297c, %dec_label_pc_13090 ], [ 0, %.thread134 ], [ %v1_1297c, %dec_label_pc_13078 ]
  store i32 61976, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-488.2, i32* @r1, align 4
  %v0_130a0 = call i32 @__aeabi_read_tp()
  %v3_130a4 = load i32, i32* @global_var_222c4.104, align 4
  store i32 %v3_130a4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_130ac = load i32, i32* @r1, align 4
  %v2_130ac = icmp eq i32 %v0_130ac, -1
  store i1 %v2_130ac, i1* %cpsr_c.global-to-local, align 1
  %v7_130ac = icmp eq i32 %v0_130ac, -1
  %v3_130b0 = add i32 %v3_130a4, %v0_130a0
  %v4_130b0 = inttoptr i32 %v3_130b0 to i32*
  store i32 -1, i32* %v4_130b0, align 4
  br i1 %v7_130ac, label %dec_label_pc_130c0, label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_13098, %dec_label_pc_12d54
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_13098 ], [ %v3_12bf8, %dec_label_pc_12d54 ]
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_13098 ], [ %v1_1297c, %dec_label_pc_12d54 ]
  %v1_130bc = call i32 @__GI___libc_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %dec_label_pc_13098, %dec_label_pc_130b8
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_13098 ], [ %stack_var_-472.2, %dec_label_pc_130b8 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_130c4 = call i32 @free()
  %v0_130c8 = load i32, i32* @sl, align 4
  store i32 %v0_130c8, i32* @r0, align 4
  %v0_130cc = call i32 @free()
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_130d8

dec_label_pc_130d8:                               ; preds = %bb235, %dec_label_pc_130c0
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_130c0 ], [ %v5_12c80, %bb235 ]
  store i32 %v3_12920, i32* @r4, align 4
  store i32 %v6_12920, i32* @r5, align 4
  store i32 %v9_12920, i32* @r6, align 4
  store i32 %v12_12920, i32* @r7, align 4
  store i32 %v15_12920, i32* @r8, align 4
  store i32 %v18_12920, i32* @sb, align 4
  store i32 %v21_12920, i32* @sl, align 4
  store i32 %v24_12920, i32* @fp, align 4
  store i32 %v27_12920, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1307c, { 1, 2, 0 }
  uselistorder i32 %v1_13024, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_12fd8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_12f94, { 1, 0, 2 }
  uselistorder i32 %v0_12f18, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12ec0, { 1, 0 }
  uselistorder i32 %v5_12e98, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_12e58, { 4, 5, 0, 6, 7, 1, 2, 3, 8, 9, 10, 11 }
  uselistorder i32 %v2_12e54, { 1, 0 }
  uselistorder i32 %v2_12e38, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_12e34, { 1, 0 }
  uselistorder i32 %v1_12e30, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v0_12dac, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_12d88, { 1, 0 }
  uselistorder i32 %v3_12d7c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12d7c, { 0, 2, 1 }
  uselistorder i32 %v2_12d70, { 0, 2, 1 }
  uselistorder i1 %v7_12c90, { 1, 0 }
  uselistorder i32 %v1_12c90, { 1, 0 }
  uselistorder i32 %v0_12c90, { 1, 0 }
  uselistorder i32 %v5_12c80, { 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32 %v0_12c54, { 1, 0 }
  uselistorder i32 %v3_12bf8, { 1, 0, 2, 6, 7, 5, 4, 8, 9, 10, 3 }
  uselistorder i32 %v6_12bb0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12b3c, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_12b24, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v1_12b18, { 1, 0 }
  uselistorder i32 %v0_12b0c, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_12ac4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_12a30, { 1, 0, 2 }
  uselistorder i1 %v7_12a1c, { 1, 0 }
  uselistorder i32 %v1_12a20, { 0, 2, 1 }
  uselistorder i32 %v2_12de4, { 1, 0 }
  uselistorder i32 %v1_12ce4, { 2, 0, 1 }
  uselistorder i32 %v2_12b6c, { 1, 0, 2 }
  uselistorder i32 %v2_12b44, { 1, 0 }
  uselistorder i32 %v0_12998, { 1, 0, 2 }
  uselistorder i32 %v1_1297c, { 5, 0, 2, 4, 3, 6, 7, 1, 8, 9 }
  uselistorder i32 %v3_12948, { 6, 1, 3, 2, 4, 5, 0, 7 }
  uselistorder i32 %v0_12934, { 9, 8, 7, 6, 5, 4, 10, 0, 1, 3, 2 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp164, { 1, 0, 2 }
  uselistorder i32 %tmp163, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 18, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 19, 20, 1, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 55, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 55, 19, 20, 1, 22, 23, 24, 25, 26, 0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 54, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32)* @__GI___libc_close, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_send, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 2, 0 }
  uselistorder i32 120, { 0, 2, 3, 4, 5, 10, 9, 8, 6, 1, 7 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i32 12196, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_130d8, { 1, 0 }
  uselistorder label %dec_label_pc_130c0, { 1, 0 }
  uselistorder label %dec_label_pc_13098, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13090, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_13078, { 1, 0 }
  uselistorder label %dec_label_pc_13068, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_13040, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_13018, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12f70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ef0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_12e04, { 1, 0 }
  uselistorder label %dec_label_pc_12dac, { 1, 0 }
  uselistorder label %dec_label_pc_12d7c, { 1, 0 }
  uselistorder label %dec_label_pc_12d54, { 1, 0 }
  uselistorder label %dec_label_pc_12c90, { 1, 0, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_12aec, { 1, 0 }
  uselistorder label %dec_label_pc_12ab0, { 1, 0 }
  uselistorder label %bb220, { 1, 0 }
}

define i32 @"$d"(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_130e8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_130e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130e8, label %.thread, label %.thread13

.thread:                                          ; preds = %dec_label_pc_130e8
  %v2_130e8 = load i32, i32* @lr, align 4
  %v4_130e8 = lshr i32 %v2_130e8, %arg2
  %v5_130e8 = sub i32 32, %arg2
  %v6_130e8 = shl i32 %v2_130e8, %v5_130e8
  %v7_130e8 = or i32 %v6_130e8, %v4_130e8
  %v9_130e8 = and i32 %v7_130e8, %tmp
  store i32 %v9_130e8, i32* %r0.global-to-local, align 4
  %v2_130ec = load i32, i32* @r4, align 4
  %v5_130ec = sdiv i32 %v2_130ec, 262144
  %v6_130ec = and i32 %v5_130ec, %v9_130e8
  call void @__pseudo_branch(i32 %v6_130ec)
  %v0_130f0.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130f0.pr.pr, label %bb, label %.thread..thread13_crit_edge

.thread..thread13_crit_edge:                      ; preds = %.thread
  %v8_13120.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread13

bb:                                               ; preds = %.thread
  %v2_130f4 = load i32, i32* @ip, align 4
  %v3_13100 = mul i32 %arg2, %arg2
  %v3_13104 = mul i32 %v3_13100, %v2_130f4
  store i32 %v3_13104, i32* %r0.global-to-local, align 4
  %v2_13108 = trunc i32 %v3_13104 to i16
  %v4_13108 = inttoptr i32 %v3_13104 to i16*
  store i16 %v2_13108, i16* %v4_13108, align 2
  %v5_13108 = load i32, i32* @ip, align 4
  %v6_13108 = load i32, i32* %r0.global-to-local, align 4
  %v7_13108 = sub i32 %v6_13108, %v5_13108
  %v2_13110 = trunc i32 %v7_13108 to i16
  %v4_13110 = inttoptr i32 %v7_13108 to i16*
  store i16 %v2_13110, i16* %v4_13110, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %.thread..thread13_crit_edge, %dec_label_pc_130e8
  %v8_13120 = phi i32 [ %v8_13120.pre, %.thread..thread13_crit_edge ], [ %tmp, %dec_label_pc_130e8 ]
  ret i32 %v8_13120

; uselistorder directives
  uselistorder i32 %v7_13108, { 1, 0 }
  uselistorder i32 %v3_13104, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 196, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13188 = load i32, i32* @r4, align 4
  store i32 %v3_13188, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  store i32 196, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_13198.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_131989 = inttoptr i32 %v0_13198.pre to i8*
  %v2_1319810 = load i8, i8* %v1_131989, align 1
  %v2_1319c12 = icmp eq i8 %v2_1319810, 0
  store i1 %v2_1319c12, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1319c12, label %dec_label_pc_131cc, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %entry, %bb8.dec_label_pc_131a8_crit_edge
  %v1_131a8 = phi i32 [ %v1_131a8.pre, %bb8.dec_label_pc_131a8_crit_edge ], [ 196, %entry ]
  %v0_131a8 = phi i32 [ %v0_131a8.pre, %bb8.dec_label_pc_131a8_crit_edge ], [ ptrtoint (i32* @global_var_222a8.80 to i32), %entry ]
  %v2_1319816 = phi i8 [ %v2_13198, %bb8.dec_label_pc_131a8_crit_edge ], [ %v2_1319810, %entry ]
  %v2_131a017.in.in = phi i8 [ %v2_13198, %bb8.dec_label_pc_131a8_crit_edge ], [ %v2_1319810, %entry ]
  %v1_1319815 = phi i8* [ %v1_13198, %bb8.dec_label_pc_131a8_crit_edge ], [ %v1_131989, %entry ]
  %v2_131c014 = phi i32 [ %v2_131c4, %bb8.dec_label_pc_131a8_crit_edge ], [ %v0_13198.pre, %entry ]
  %v2_131a017.in = zext i8 %v2_131a017.in.in to i32
  %v2_131a017 = mul nuw nsw i32 %v2_131a017.in, 2
  %v2_131a8 = add i32 %v1_131a8, %v0_131a8
  %v3_131a8 = inttoptr i32 %v2_131a8 to i32*
  %v4_131a8 = load i32, i32* %v3_131a8, align 4
  %v2_131ac = add i32 %v4_131a8, %v2_131a017
  %v3_131ac = inttoptr i32 %v2_131ac to i16*
  %v4_131ac = load i16, i16* %v3_131ac, align 2
  %v1_131b0 = and i16 %v4_131ac, 32
  %v2_131b0 = icmp eq i16 %v1_131b0, 0
  store i1 %v2_131b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_131b0, label %dec_label_pc_131cc, label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131a8
  %v7_131b8 = icmp eq i8 %v2_1319816, 35
  br i1 %v7_131b8, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_131b8
  %v8_131bc = icmp eq i8 %v2_1319816, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_131b8, %bb
  %storemerge = phi i1 [ %v8_131bc, %bb ], [ %v7_131b8, %dec_label_pc_131b8 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_131c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_131c0 = trunc i32 %v0_131c0 to i8
  store i8 %v1_131c0, i8* %v1_1319815, align 1
  %v0_131c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_131d0.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_131c4, label %dec_label_pc_131cc, label %bb8

bb8:                                              ; preds = %bb7
  %v2_131c4 = add i32 %v1_131d0.pre, 1
  store i32 %v2_131c4, i32* %r0.global-to-local, align 4
  %v1_13198 = inttoptr i32 %v2_131c4 to i8*
  %v2_13198 = load i8, i8* %v1_13198, align 1
  %v2_1319c = icmp eq i8 %v2_13198, 0
  store i1 %v2_1319c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1319c, label %dec_label_pc_131cc, label %bb8.dec_label_pc_131a8_crit_edge

bb8.dec_label_pc_131a8_crit_edge:                 ; preds = %bb8
  %v0_131a8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_131a8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_131a8

dec_label_pc_131cc:                               ; preds = %bb8, %dec_label_pc_131a8, %bb7, %entry
  %v1_131d0 = phi i32 [ %v0_13198.pre, %entry ], [ %v1_131d0.pre, %bb7 ], [ %v2_131c014, %dec_label_pc_131a8 ], [ %v2_131c4, %bb8 ]
  %v2_131cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_131cc, i32* @r4, align 4
  ret i32 %v1_131d0

; uselistorder directives
  uselistorder i8 %v2_13198, { 2, 1, 0 }
  uselistorder i8* %v1_13198, { 1, 0 }
  uselistorder i32 %v2_131c4, { 0, 2, 3, 1 }
  uselistorder i1 %v2_131b0, { 1, 0 }
  uselistorder i8 %v2_1319816, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_131cc, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_131a8, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_131dc = load i32, i32* @r4, align 4
  store i32 %v3_131dc, i32* %stack_var_-36, align 4
  %v12_131dc = load i32, i32* @r7, align 4
  %v15_131dc = load i32, i32* @r8, align 4
  %v18_131dc = load i32, i32* @sb, align 4
  %v21_131dc = load i32, i32* @sl, align 4
  %v27_131dc = load i32, i32* @lr, align 4
  store i32 13196, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  %v4_131ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13196) to i32*), align 4
  store i32 %v4_131ec, i32* @r4, align 4
  %v2_131f0 = icmp eq i32 %v4_131ec, 0
  br i1 %v2_131f0, label %dec_label_pc_131fc, label %dec_label_pc_1322c

dec_label_pc_131fc:                               ; preds = %entry
  %v2_13200 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_13200, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37176), i32* %r0.global-to-local, align 4
  %v2_13208 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37176), i32 %v2_13200)
  store i32 %v2_13208, i32* %r0.global-to-local, align 4
  %v2_1320c = icmp eq i32 %v2_13208, 0
  %v1_13210 = load i32, i32* @r4, align 4
  %.v1_13210 = select i1 %v2_1320c, i32 %tmp38, i32 %v1_13210
  store i32 12224, i32* %r1.global-to-local, align 4
  store i32 %.v1_13210, i32* %r2.global-to-local, align 4
  %v0_1321c = load i32, i32* @r5, align 4
  %v2_1321c = add i32 %v0_1321c, 12224
  %v3_1321c = inttoptr i32 %v2_1321c to i32*
  %v4_1321c = load i32, i32* %v3_1321c, align 4
  store i32 %v4_1321c, i32* %r3.global-to-local, align 4
  %v9_13220 = icmp eq i32 %v4_1321c, %.v1_13210
  br i1 %v9_13220, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_131fc
  store i32 %.v1_13210, i32* %v3_1321c, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_131fc, %bb
  store i32 78380, i32* @lr, align 4
  %v1_13228 = xor i1 %v9_13220, true
  call void @__pseudo_cond_branch(i1 %v1_13228, i32 ptrtoint (i32* @global_var_13638.480 to i32))
  %v0_13230.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1322c

dec_label_pc_1322c:                               ; preds = %entry, %bb58
  %v2_13244 = phi i32 [ ptrtoint (i32* @global_var_222a8.80 to i32), %entry ], [ %v0_13230.pre, %bb58 ]
  store i32 13208, i32* %r3.global-to-local, align 4
  %v2_13230 = add i32 %v2_13244, 13208
  %v3_13230 = inttoptr i32 %v2_13230 to i32*
  %v4_13230 = load i32, i32* %v3_13230, align 4
  store i32 %v4_13230, i32* %r3.global-to-local, align 4
  %v2_13234 = icmp eq i32 %v4_13230, 0
  br i1 %v2_13234, label %dec_label_pc_1323c, label %dec_label_pc_135d0

dec_label_pc_1323c:                               ; preds = %dec_label_pc_1322c
  %v4_13244 = add i32 %v2_13244, 702
  %v5_13244 = inttoptr i32 %v4_13244 to i8*
  store i8 5, i8* %v5_13244, align 1
  store i32 -37176, i32* %r0.global-to-local, align 4
  store i32 703, i32* %r3.global-to-local, align 4
  store i32 -37204, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_13258 = load i32, i32* @r5, align 4
  %v5_13258 = add i32 %v3_13258, 703
  %v6_13258 = inttoptr i32 %v5_13258 to i8*
  store i8 3, i8* %v6_13258, align 1
  %v0_1325c = load i32, i32* @r5, align 4
  %v1_1325c = load i32, i32* %r0.global-to-local, align 4
  %v2_1325c = add i32 %v1_1325c, %v0_1325c
  store i32 %v2_1325c, i32* @r0, align 4
  %v1_13260 = load i32, i32* %r1.global-to-local, align 4
  %v2_13260 = add i32 %v1_13260, %v0_1325c
  store i32 %v2_13260, i32* @r1, align 4
  %v5_13264 = call i32 @__GI_fopen(i32 %v2_1325c, i32 %v2_13260, i32 3, i32 703)
  store i32 %v5_13264, i32* %r0.global-to-local, align 4
  store i32 %v5_13264, i32* @fp, align 4
  %v2_13268 = icmp eq i32 %v5_13264, 0
  br i1 %v2_13268, label %dec_label_pc_134f4, label %dec_label_pc_1349c

dec_label_pc_13274:                               ; preds = %dec_label_pc_1349c, %dec_label_pc_134d0.backedge
  store i32 %v2_134d0, i32* %r0.global-to-local, align 4
  %v2_13278 = call i32 @skip_and_NUL_space(i8* %v1_13278)
  store i32 %v2_13278, i32* %r0.global-to-local, align 4
  store i32 %v2_13278, i32* @r4, align 4
  %v0_13280 = call i32 @skip_nospace()
  store i32 %v0_13280, i32* %r0.global-to-local, align 4
  %v1_13284 = inttoptr i32 %v0_13280 to i8*
  %v2_13284 = call i32 @skip_and_NUL_space(i8* %v1_13284)
  store i32 %v2_134a0, i32* @r1, align 4
  store i32 %v2_13284, i32* @r7, align 4
  %v0_13290 = load i32, i32* @r4, align 4
  store i32 %v0_13290, i32* %r0.global-to-local, align 4
  %v2_13294 = inttoptr i32 %v0_13290 to i8*
  %v3_13294 = call i32 @__GI_strcoll(i8* %v2_13294, i32 %v2_134a0)
  store i32 %v3_13294, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_13294, 16777216
  %v1_13298 = sdiv i32 %sext, 16777216
  store i32 %v1_13298, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_132a0, label %dec_label_pc_1335c

dec_label_pc_132a0:                               ; preds = %dec_label_pc_13274
  %v0_132a0 = load i32, i32* @r7, align 4
  store i32 %v0_132a0, i32* %r0.global-to-local, align 4
  %v0_132a4 = call i32 @skip_nospace()
  %v1_132a4 = inttoptr i32 %v0_132a4 to i8*
  store i32 %v2_132a8, i32* @r4, align 4
  %v0_132ac = load i32, i32* @r6, align 4
  %v1_132ac = trunc i32 %v0_132ac to i8
  store i8 %v1_132ac, i8* %v1_132a4, align 1
  %v0_132b0 = load i32, i32* @r6, align 4
  store i32 %v0_132b0, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_132a8, i32* %r0.global-to-local, align 4
  %v4_132bc = call i32 @__GI_memset(i8* %v3_132bc, i32 %v0_132b0, i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_132c4 = load i32, i32* @r7, align 4
  store i32 %v0_132c4, i32* %r1.global-to-local, align 4
  store i32 %v2_132c8, i32* %r2.global-to-local, align 4
  %v3_132cc = inttoptr i32 %v0_132c4 to i8*
  %v4_132cc = call i32 @inet_pton(i32 10, i8* %v3_132cc, i32 %v2_132c8)
  store i32 %v4_132cc, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_132cc, 1
  br i1 %tmp59, label %dec_label_pc_132dc, label %dec_label_pc_132f8

dec_label_pc_132dc:                               ; preds = %dec_label_pc_132a0
  %v0_132dc = load i32, i32* @r7, align 4
  store i32 %v0_132dc, i32* %r1.global-to-local, align 4
  store i32 %v2_132e0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_132e8 = inttoptr i32 %v0_132dc to i8*
  %v4_132e8 = call i32 @inet_pton(i32 2, i8* %v3_132e8, i32 %v2_132e0)
  store i32 %v4_132e8, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_132e8, 1
  br i1 %tmp60, label %dec_label_pc_134d0.backedge, label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132dc, %dec_label_pc_132a0
  %v0_132fc.off0 = phi i16 [ 10, %dec_label_pc_132a0 ], [ 2, %dec_label_pc_132dc ]
  store i32 %v2_132f8, i32* %r2.global-to-local, align 4
  store i16 %v0_132fc.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 13208, i32* @r7, align 4
  %v0_1330c = load i32, i32* @r5, align 4
  %v2_1330c = add i32 %v0_1330c, 13208
  %v3_1330c = inttoptr i32 %v2_1330c to i32*
  %v4_1330c = load i32, i32* %v3_1330c, align 4
  store i32 13204, i32* @sl, align 4
  %v1_13314 = add i32 %v4_1330c, 1
  store i32 %v1_13314, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1331c = mul i32 %v1_13314, 28
  store i32 %v2_1331c, i32* %r1.global-to-local, align 4
  %v2_13320 = add i32 %v0_1330c, 13204
  %v3_13320 = inttoptr i32 %v2_13320 to i32*
  %v4_13320 = load i32, i32* %v3_13320, align 4
  store i32 %v4_13320, i32* %r0.global-to-local, align 4
  %v2_13324 = inttoptr i32 %v4_13320 to i32*
  %v3_13324 = call i32 @realloc(i32* %v2_13324, i32 %v2_1331c)
  store i32 %v3_13324, i32* %r0.global-to-local, align 4
  store i32 %v3_13324, i32* @r6, align 4
  %v2_13328 = icmp eq i32 %v3_13324, 0
  br i1 %v2_13328, label %dec_label_pc_134d0.backedge, label %dec_label_pc_13330

dec_label_pc_13330:                               ; preds = %dec_label_pc_132f8
  %v0_13330 = load i32, i32* @r5, align 4
  %v1_13330 = load i32, i32* @r7, align 4
  %v2_13330 = add i32 %v1_13330, %v0_13330
  %v3_13330 = inttoptr i32 %v2_13330 to i32*
  %v4_13330 = load i32, i32* %v3_13330, align 4
  store i32 %v4_13330, i32* %r4.global-to-local, align 4
  %v1_13334 = load i32, i32* @r8, align 4
  %v3_13334 = mul i32 %v1_13334, %v4_13330
  %v4_13334 = add i32 %v3_13334, %v3_13324
  store i32 %v4_13334, i32* %lr.global-to-local, align 4
  %v2_1333c = load i16, i16* %stack_var_-68, align 2
  %v3_1333c = sext i16 %v2_1333c to i32
  store i32 %v3_1333c, i32* %r0.global-to-local, align 4
  %v6_1333c = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1333c, i32* %r1.global-to-local, align 4
  %v9_1333c = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1333c, i32* %r2.global-to-local, align 4
  %v2_13340 = load i32, i32* @sl, align 4
  %v3_13340 = add i32 %v2_13340, %v0_13330
  %v4_13340 = inttoptr i32 %v3_13340 to i32*
  store i32 %v3_13324, i32* %v4_13340, align 4
  %v0_13344 = load i32, i32* %lr.global-to-local, align 4
  %v1_13344 = inttoptr i32 %v0_13344 to i32*
  %v2_13344 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_13344, i32* %v1_13344, align 4
  %v3_13344 = add i32 %v0_13344, 4
  %v4_13344 = inttoptr i32 %v3_13344 to i32*
  %v5_13344 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13344, i32* %v4_13344, align 4
  %v6_13344 = add i32 %v0_13344, 8
  %v7_13344 = inttoptr i32 %v6_13344 to i32*
  %v8_13344 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13344, i32* %v7_13344, align 4
  %v9_13344 = add i32 %v0_13344, 12
  %v10_13344 = inttoptr i32 %v9_13344 to i32*
  %v11_13344 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_13344, i32* %v10_13344, align 4
  %v12_13344 = add i32 %v0_13344, 16
  store i32 %v12_13344, i32* @lr, align 4
  %v2_13348 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_13348, i32* %r0.global-to-local, align 4
  %v0_1334c = load i32, i32* %r4.global-to-local, align 4
  %v1_1334c = add i32 %v0_1334c, 1
  store i32 %v1_1334c, i32* %r4.global-to-local, align 4
  %v1_13350 = inttoptr i32 %v12_13344 to i32*
  store i32 %v2_13348, i32* %v1_13350, align 4
  %v3_13350 = add i32 %v0_13344, 20
  %v4_13350 = inttoptr i32 %v3_13350 to i32*
  %v5_13350 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13350, i32* %v4_13350, align 4
  %v6_13350 = add i32 %v0_13344, 24
  %v7_13350 = inttoptr i32 %v6_13350 to i32*
  %v8_13350 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13350, i32* %v7_13350, align 4
  %v0_13354 = load i32, i32* %r4.global-to-local, align 4
  %v1_13354 = load i32, i32* @r5, align 4
  %v2_13354 = load i32, i32* @r7, align 4
  %v3_13354 = add i32 %v2_13354, %v1_13354
  %v4_13354 = inttoptr i32 %v3_13354 to i32*
  store i32 %v0_13354, i32* %v4_13354, align 4
  br label %dec_label_pc_134d0.backedge

dec_label_pc_134d0.backedge:                      ; preds = %dec_label_pc_133f8, %dec_label_pc_133e8, %dec_label_pc_133b4, %dec_label_pc_13330, %dec_label_pc_13488, %dec_label_pc_132dc, %dec_label_pc_132f8, %dec_label_pc_13430, %dec_label_pc_13438, %dec_label_pc_1341c, %dec_label_pc_1346c
  %v0_134dc.pre = load i32, i32* @fp, align 4
  store i32 %v2_134d0, i32* @r4, align 4
  store i32 %v2_134d0, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_134dc.pre, i32* %r2.global-to-local, align 4
  %v3_134e0 = call i32 @fgets(i32 %v2_134d0, i32 128, i32 %v0_134dc.pre)
  store i32 %v3_134e0, i32* %r0.global-to-local, align 4
  %v2_134e4 = icmp eq i32 %v3_134e0, 0
  br i1 %v2_134e4, label %dec_label_pc_134ec, label %dec_label_pc_13274

dec_label_pc_1335c:                               ; preds = %dec_label_pc_13274
  %v0_1335c = load i32, i32* @r4, align 4
  store i32 %v0_1335c, i32* %r0.global-to-local, align 4
  store i32 %v2_134ac, i32* @r1, align 4
  %v2_13364 = inttoptr i32 %v0_1335c to i8*
  %v3_13364 = call i32 @__GI_strcoll(i8* %v2_13364, i32 %v2_134ac)
  store i32 %v3_13364, i32* %r0.global-to-local, align 4
  %v2_13368 = icmp eq i32 %v3_13364, 0
  br i1 %v2_13368, label %dec_label_pc_1339c, label %dec_label_pc_13370

dec_label_pc_13370:                               ; preds = %dec_label_pc_1335c
  %v0_13370 = load i32, i32* @r4, align 4
  store i32 %v0_13370, i32* %r0.global-to-local, align 4
  store i32 %v2_134b8, i32* @r1, align 4
  %v2_13378 = inttoptr i32 %v0_13370 to i8*
  %v3_13378 = call i32 @__GI_strcoll(i8* %v2_13378, i32 %v2_134b8)
  store i32 %v3_13378, i32* %r0.global-to-local, align 4
  %v2_1337c = icmp eq i32 %v3_13378, 0
  br i1 %v2_1337c, label %dec_label_pc_1339c, label %dec_label_pc_1341c

dec_label_pc_13388:                               ; preds = %dec_label_pc_1339c, %dec_label_pc_13388.dec_label_pc_13388_crit_edge
  %v2_1338c = phi i32 [ %v1_133a0, %dec_label_pc_13388.dec_label_pc_13388_crit_edge ], [ %v1_133a010, %dec_label_pc_1339c ]
  %v0_1338c = phi i32 [ %v1_133a8, %dec_label_pc_13388.dec_label_pc_13388_crit_edge ], [ %v1_133a817, %dec_label_pc_1339c ]
  %v1_13388 = phi i32 [ %v1_13388.pre, %dec_label_pc_13388.dec_label_pc_13388_crit_edge ], [ 13200, %dec_label_pc_1339c ]
  %v1_1338c = phi i32 [ %v0_133a0, %dec_label_pc_13388.dec_label_pc_13388_crit_edge ], [ %v0_133a09, %dec_label_pc_1339c ]
  %v2_13388 = add i32 %v1_1338c, %v1_13388
  %v3_13388 = inttoptr i32 %v2_13388 to i32*
  %v4_13388 = load i32, i32* %v3_13388, align 4
  store i32 %v4_13388, i32* %r3.global-to-local, align 4
  %v3_1338c = add i32 %v1_1338c, %v2_1338c
  %v4_1338c = inttoptr i32 %v3_1338c to i32*
  store i32 %v0_1338c, i32* %v4_1338c, align 4
  %v0_13390 = load i32, i32* %r3.global-to-local, align 4
  %v1_13390 = load i32, i32* %r2.global-to-local, align 4
  %v4_13390 = mul i32 %v1_13390, 4
  %v5_13390 = add i32 %v4_13390, %v0_13390
  %v6_13390 = inttoptr i32 %v5_13390 to i32*
  %v7_13390 = load i32, i32* %v6_13390, align 4
  store i32 %v7_13390, i32* @r0, align 4
  %v0_13394 = call i32 @free()
  store i32 %v0_13394, i32* %r0.global-to-local, align 4
  %v0_133a0 = load i32, i32* @r5, align 4
  %v1_133a0 = load i32, i32* @sb, align 4
  %v2_133a0 = add i32 %v1_133a0, %v0_133a0
  %v3_133a0 = inttoptr i32 %v2_133a0 to i32*
  %v4_133a0 = load i32, i32* %v3_133a0, align 4
  store i32 %v4_133a0, i32* %r3.global-to-local, align 4
  %v2_133a4 = icmp eq i32 %v4_133a0, 0
  %v1_133a8 = add i32 %v4_133a0, -1
  store i32 %v1_133a8, i32* %r2.global-to-local, align 4
  br i1 %v2_133a4, label %dec_label_pc_133b0, label %dec_label_pc_13388.dec_label_pc_13388_crit_edge

dec_label_pc_13388.dec_label_pc_13388_crit_edge:  ; preds = %dec_label_pc_13388
  %v1_13388.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13388

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13370, %dec_label_pc_1335c
  store i32 13200, i32* @r4, align 4
  %v0_133a09 = load i32, i32* @r5, align 4
  %v1_133a010 = load i32, i32* @sb, align 4
  %v2_133a011 = add i32 %v1_133a010, %v0_133a09
  %v3_133a012 = inttoptr i32 %v2_133a011 to i32*
  %v4_133a013 = load i32, i32* %v3_133a012, align 4
  store i32 %v4_133a013, i32* %r3.global-to-local, align 4
  %v2_133a415 = icmp eq i32 %v4_133a013, 0
  %v1_133a817 = add i32 %v4_133a013, -1
  store i32 %v1_133a817, i32* %r2.global-to-local, align 4
  br i1 %v2_133a415, label %dec_label_pc_133b0, label %dec_label_pc_13388

dec_label_pc_133b0:                               ; preds = %dec_label_pc_13388, %dec_label_pc_1339c
  store i32 13200, i32* @r6, align 4
  br label %dec_label_pc_133b4

dec_label_pc_133b4:                               ; preds = %dec_label_pc_133f8, %dec_label_pc_133b0
  %v0_133b4 = load i32, i32* @r7, align 4
  store i32 %v0_133b4, i32* %r0.global-to-local, align 4
  %v0_133b8 = call i32 @skip_nospace()
  store i32 %v0_133b8, i32* %r0.global-to-local, align 4
  %v1_133bc = inttoptr i32 %v0_133b8 to i8*
  %v2_133bc = call i32 @skip_and_NUL_space(i8* %v1_133bc)
  store i32 %v2_133bc, i32* %r0.global-to-local, align 4
  %v0_133c0 = load i32, i32* @r5, align 4
  %v1_133c0 = load i32, i32* @sb, align 4
  %v2_133c0 = add i32 %v1_133c0, %v0_133c0
  %v3_133c0 = inttoptr i32 %v2_133c0 to i32*
  %v4_133c0 = load i32, i32* %v3_133c0, align 4
  store i32 %v2_133bc, i32* @r4, align 4
  %tmp69 = mul i32 %v4_133c0, 4
  %v3_133cc = add i32 %tmp69, 4
  store i32 %v3_133cc, i32* %r1.global-to-local, align 4
  %v1_133d0 = load i32, i32* @r6, align 4
  %v2_133d0 = add i32 %v1_133d0, %v0_133c0
  %v3_133d0 = inttoptr i32 %v2_133d0 to i32*
  %v4_133d0 = load i32, i32* %v3_133d0, align 4
  store i32 %v4_133d0, i32* %r0.global-to-local, align 4
  %v2_133d4 = inttoptr i32 %v4_133d0 to i32*
  %v3_133d4 = call i32 @realloc(i32* %v2_133d4, i32 %v3_133cc)
  store i32 %v3_133d4, i32* %r3.global-to-local, align 4
  %v2_133d8 = icmp eq i32 %v3_133d4, 0
  %v0_133dc = load i32, i32* @r7, align 4
  store i32 %v0_133dc, i32* %r0.global-to-local, align 4
  %v0_133e0 = load i32, i32* @r4, align 4
  store i32 %v0_133e0, i32* @r7, align 4
  br i1 %v2_133d8, label %dec_label_pc_134d0.backedge, label %dec_label_pc_133e8

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133b4
  %v1_133e8 = load i32, i32* @r5, align 4
  %v2_133e8 = load i32, i32* @r6, align 4
  %v3_133e8 = add i32 %v2_133e8, %v1_133e8
  %v4_133e8 = inttoptr i32 %v3_133e8 to i32*
  store i32 %v3_133d4, i32* %v4_133e8, align 4
  %v1_133ec = inttoptr i32 %v0_133dc to i8*
  %v2_133ec = call i32 @__GI_strdup(i8* %v1_133ec)
  store i32 %v2_133ec, i32* %r0.global-to-local, align 4
  %v2_133f0 = icmp eq i32 %v2_133ec, 0
  br i1 %v2_133f0, label %dec_label_pc_134d0.backedge, label %dec_label_pc_133f8

dec_label_pc_133f8:                               ; preds = %dec_label_pc_133e8
  %v0_133f8 = load i32, i32* @r5, align 4
  %v1_133f8 = load i32, i32* @sb, align 4
  %v2_133f8 = add i32 %v1_133f8, %v0_133f8
  %v3_133f8 = inttoptr i32 %v2_133f8 to i32*
  %v4_133f8 = load i32, i32* %v3_133f8, align 4
  store i32 %v4_133f8, i32* %r3.global-to-local, align 4
  %v1_133fc = load i32, i32* @r6, align 4
  %v2_133fc = add i32 %v1_133fc, %v0_133f8
  %v3_133fc = inttoptr i32 %v2_133fc to i32*
  %v4_133fc = load i32, i32* %v3_133fc, align 4
  store i32 %v4_133fc, i32* %r2.global-to-local, align 4
  %v1_13400 = add i32 %v4_133f8, 1
  store i32 %v1_13400, i32* %r1.global-to-local, align 4
  %v5_13404 = mul i32 %v4_133f8, 4
  %v6_13404 = add i32 %v4_133fc, %v5_13404
  %v7_13404 = inttoptr i32 %v6_13404 to i32*
  store i32 %v2_133ec, i32* %v7_13404, align 4
  %v0_13408 = load i32, i32* %r1.global-to-local, align 4
  %v1_13408 = load i32, i32* @r5, align 4
  %v2_13408 = load i32, i32* @sb, align 4
  %v3_13408 = add i32 %v2_13408, %v1_13408
  %v4_13408 = inttoptr i32 %v3_13408 to i32*
  store i32 %v0_13408, i32* %v4_13408, align 4
  %v0_1340c = load i32, i32* @r4, align 4
  %v1_1340c = inttoptr i32 %v0_1340c to i8*
  %v2_1340c = load i8, i8* %v1_1340c, align 1
  %v3_1340c = zext i8 %v2_1340c to i32
  store i32 %v3_1340c, i32* %r3.global-to-local, align 4
  %v2_13410 = icmp eq i8 %v2_1340c, 0
  br i1 %v2_13410, label %dec_label_pc_134d0.backedge, label %dec_label_pc_133b4

dec_label_pc_1341c:                               ; preds = %dec_label_pc_13370
  %v0_1341c = load i32, i32* @r4, align 4
  store i32 %v0_1341c, i32* %r0.global-to-local, align 4
  %v2_13420 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_13420, i32* @r1, align 4
  %v2_13424 = inttoptr i32 %v0_1341c to i8*
  %v3_13424 = call i32 @__GI_strcoll(i8* %v2_13424, i32 %v2_13420)
  store i32 %v3_13424, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_13424, 16777216
  %v1_13428 = sdiv i32 %sext2, 16777216
  store i32 %v1_13428, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_13430, label %dec_label_pc_134d0.backedge

dec_label_pc_13430:                               ; preds = %dec_label_pc_1341c
  %v0_13430 = load i32, i32* @r7, align 4
  %v2_13430 = icmp eq i32 %v0_13430, 0
  br i1 %v2_13430, label %dec_label_pc_134d0.backedge, label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_13430
  store i32 %v0_13430, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_13440 = call i32 @__GI_strchr(i32 %v0_13430, i32 58)
  store i32 %v2_13440, i32* %r0.global-to-local, align 4
  store i32 %v2_13440, i32* @r6, align 4
  %v3_13444 = icmp eq i32 %v2_13440, 0
  br i1 %v3_13444, label %dec_label_pc_134d0.backedge, label %dec_label_pc_1344c

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13438
  store i32 -37120, i32* %r1.global-to-local, align 4
  %v0_13450 = load i32, i32* @r4, align 4
  %v1_13450 = trunc i32 %v0_13450 to i8
  %v3_13450 = inttoptr i32 %v2_13440 to i8*
  store i8 %v1_13450, i8* %v3_13450, align 1
  %v0_13454 = load i32, i32* @r5, align 4
  %v1_13454 = load i32, i32* %r1.global-to-local, align 4
  %v2_13454 = add i32 %v1_13454, %v0_13454
  store i32 %v2_13454, i32* @r1, align 4
  %v0_13458 = load i32, i32* @r7, align 4
  store i32 %v0_13458, i32* %r0.global-to-local, align 4
  %v2_1345c = inttoptr i32 %v0_13458 to i8*
  %v3_1345c = call i32 @__GI_strcoll(i8* %v2_1345c, i32 %v2_13454)
  store i32 %v3_1345c, i32* %r0.global-to-local, align 4
  %v2_13460 = icmp eq i32 %v3_1345c, 0
  br i1 %v2_13460, label %dec_label_pc_13488, label %dec_label_pc_1346c

dec_label_pc_1346c:                               ; preds = %dec_label_pc_1344c
  %v0_13470 = load i32, i32* @r7, align 4
  store i32 %v0_13470, i32* %r0.global-to-local, align 4
  %v0_13474 = load i32, i32* @r5, align 4
  %v2_13474 = add i32 %v0_13474, -37112
  store i32 %v2_13474, i32* @r1, align 4
  %v2_13478 = inttoptr i32 %v0_13470 to i8*
  %v3_13478 = call i32 @__GI_strcoll(i8* %v2_13478, i32 %v2_13474)
  store i32 %v3_13478, i32* %r0.global-to-local, align 4
  %v2_1347c = icmp eq i32 %v3_13478, 0
  br i1 %v2_1347c, label %dec_label_pc_13488, label %dec_label_pc_134d0.backedge

dec_label_pc_13488:                               ; preds = %dec_label_pc_1346c, %dec_label_pc_1344c
  %storemerge = phi i32 [ 702, %dec_label_pc_1344c ], [ 703, %dec_label_pc_1346c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_13488 = load i32, i32* @r6, align 4
  %v1_13488 = add i32 %v0_13488, 1
  store i32 %v1_13488, i32* @r0, align 4
  %v0_1348c = load i32, i32* @r5, align 4
  %v2_1348c = add i32 %v0_1348c, %storemerge
  store i32 %v2_1348c, i32* @r4, align 4
  %v1_13490 = call i32 @atol(i32 %v1_13488)
  %v2_13490 = trunc i32 %v1_13490 to i8
  store i32 %v1_13490, i32* %r0.global-to-local, align 4
  %v3_13494 = load i32, i32* @r4, align 4
  %v4_13494 = inttoptr i32 %v3_13494 to i8*
  store i8 %v2_13490, i8* %v4_13494, align 1
  br label %dec_label_pc_134d0.backedge

dec_label_pc_1349c:                               ; preds = %dec_label_pc_1323c
  %v0_134a0 = load i32, i32* @r5, align 4
  %v2_134a0 = add i32 %v0_134a0, -37156
  %v2_134ac = add i32 %v0_134a0, -37144
  %v2_134b8 = add i32 %v0_134a0, -37136
  %v2_134c4 = add i32 %v0_134a0, -37128
  store i32 %v2_134c4, i32* %r3.global-to-local, align 4
  store i32 13212, i32* @sb, align 4
  store i32 %v2_134c4, i32* %stack_var_-560, align 4
  %v2_134d0 = ptrtoint i32* %stack_var_-288 to i32
  %v1_13278 = bitcast i32* %stack_var_-288 to i8*
  %v2_132a8 = ptrtoint i16* %stack_var_-68 to i32
  %v3_132bc = bitcast i16* %stack_var_-68 to i8*
  %v2_132c8 = ptrtoint i32* %stack_var_-60 to i32
  %v2_132e0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_132f8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_134d0, i32* @r4, align 4
  store i32 %v2_134d0, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v5_13264, i32* %r2.global-to-local, align 4
  %v3_134e066 = call i32 @fgets(i32 %v2_134d0, i32 128, i32 %v5_13264)
  store i32 %v3_134e066, i32* %r0.global-to-local, align 4
  %v2_134e468 = icmp eq i32 %v3_134e066, 0
  br i1 %v2_134e468, label %dec_label_pc_134ec, label %dec_label_pc_13274

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134d0.backedge, %dec_label_pc_1349c
  %v0_134ec = load i32, i32* @fp, align 4
  store i32 %v0_134ec, i32* %r0.global-to-local, align 4
  %v1_134f0 = inttoptr i32 %v0_134ec to i16*
  %v2_134f0 = call i32 @__GI_fclose(i16* %v1_134f0)
  store i32 %v2_134f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134f4

dec_label_pc_134f4:                               ; preds = %dec_label_pc_1323c, %dec_label_pc_134ec
  store i32 13208, i32* %r3.global-to-local, align 4
  %v0_134f8 = load i32, i32* @r5, align 4
  %v2_134f8 = add i32 %v0_134f8, 13208
  %v3_134f8 = inttoptr i32 %v2_134f8 to i32*
  %v4_134f8 = load i32, i32* %v3_134f8, align 4
  store i32 %v4_134f8, i32* %r3.global-to-local, align 4
  %v2_134fc = icmp eq i32 %v4_134f8, 0
  br i1 %v2_134fc, label %dec_label_pc_13504, label %dec_label_pc_13540

dec_label_pc_13504:                               ; preds = %dec_label_pc_134f4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_13508 = call i32 @malloc(i32 28)
  store i32 %v1_13508, i32* %r0.global-to-local, align 4
  store i32 -37100, i32* %r3.global-to-local, align 4
  store i32 13204, i32* %r2.global-to-local, align 4
  %v2_13514 = icmp eq i32 %v1_13508, 0
  %v1_13518 = load i32, i32* @r5, align 4
  br i1 %v2_13514, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_13504
  %v3_13518 = add i32 %v1_13518, -37100
  store i32 %v3_13518, i32* %r3.global-to-local, align 4
  %v3_1351c28 = add i32 %v1_13518, 13204
  %v4_1351c29 = inttoptr i32 %v3_1351c28 to i32*
  store i32 0, i32* %v4_1351c29, align 4
  %v1_13520 = load i32, i32* %r3.global-to-local, align 4
  %v2_13520 = load i32, i32* @r5, align 4
  %v3_13520 = load i32, i32* %r2.global-to-local, align 4
  %v4_13520 = add i32 %v3_13520, %v2_13520
  %v5_13520 = inttoptr i32 %v4_13520 to i32*
  store i32 %v1_13520, i32* %v5_13520, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_13504
  %v3_1351c = add i32 %v1_13518, 13204
  %v4_1351c = inttoptr i32 %v3_1351c to i32*
  store i32 %v1_13508, i32* %v4_1351c, align 4
  %v1_13524 = load i32, i32* @r5, align 4
  %v2_13524 = load i32, i32* %r3.global-to-local, align 4
  %v3_13524 = add i32 %v2_13524, %v1_13524
  store i32 %v3_13524, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 79152, i32* @lr, align 4
  %v1_1352c = xor i1 %v2_13514, true
  call void @__pseudo_cond_branch(i1 %v1_1352c, i32 ptrtoint (i32* @global_var_acd0.270 to i32))
  store i32 13208, i32* %r2.global-to-local, align 4
  %v0_13534 = load i32, i32* @r5, align 4
  %v2_13534 = add i32 %v0_13534, 13208
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  %v4_13534 = load i32, i32* %v3_13534, align 4
  %v1_13538 = add i32 %v4_13534, 1
  store i32 %v1_13538, i32* %r3.global-to-local, align 4
  store i32 %v1_13538, i32* %v3_13534, align 4
  %v0_13544.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13540

dec_label_pc_13540:                               ; preds = %dec_label_pc_134f4, %.thread4
  %v0_13544 = phi i32 [ %v0_134f8, %dec_label_pc_134f4 ], [ %v0_13544.pre, %.thread4 ]
  store i32 13212, i32* @r7, align 4
  %v2_13544 = add i32 %v0_13544, 13212
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  %v4_13544 = load i32, i32* %v3_13544, align 4
  store i32 %v4_13544, i32* @r4, align 4
  %v2_13548 = icmp eq i32 %v4_13544, 0
  br i1 %v2_13548, label %dec_label_pc_13550, label %dec_label_pc_135d0

dec_label_pc_13550:                               ; preds = %dec_label_pc_13540
  %v2_13550 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_13550, i32* @r6, align 4
  store i32 %v2_13550, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1355c = call i32 @__GI_gethostname(i32 %v2_13550, i32 255)
  store i32 %v2_1355c, i32* %r0.global-to-local, align 4
  %v2_13560 = icmp eq i32 %v2_1355c, 0
  br i1 %v2_13560, label %dec_label_pc_1356c, label %dec_label_pc_135d0

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13550
  store i32 %v2_13550, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_13574 = call i32 @__GI_strchr(i32 %v2_13550, i32 46)
  store i32 %v2_13574, i32* %r0.global-to-local, align 4
  %v2_13578 = icmp eq i32 %v2_13574, 0
  br i1 %v2_13578, label %dec_label_pc_135d0, label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_1356c
  %v1_13580 = add i32 %v2_13574, 1
  %v2_13580 = inttoptr i32 %v1_13580 to i8*
  %v3_13580 = load i8, i8* %v2_13580, align 1
  %v4_13580 = zext i8 %v3_13580 to i32
  store i32 %v4_13580, i32* %r3.global-to-local, align 4
  %v2_13584 = icmp eq i8 %v3_13580, 0
  store i32 %v1_13580, i32* %r0.global-to-local, align 4
  br i1 %v2_13584, label %dec_label_pc_135d0, label %dec_label_pc_13590

dec_label_pc_13590:                               ; preds = %dec_label_pc_13580
  %v2_13590 = call i32 @__GI_strdup(i8* %v2_13580)
  store i32 %v2_13590, i32* %r0.global-to-local, align 4
  store i32 %v2_13590, i32* @r4, align 4
  %v2_13594 = icmp eq i32 %v2_13590, 0
  br i1 %v2_13594, label %dec_label_pc_135d0, label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13590
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_135a0 = call i32 @malloc(i32 4)
  store i32 %v1_135a0, i32* %r0.global-to-local, align 4
  store i32 13200, i32* %r3.global-to-local, align 4
  %v2_135a8 = icmp eq i32 %v1_135a0, 0
  %v1_135ac = load i32, i32* @r5, align 4
  %v3_135ac = add i32 %v1_135ac, 13200
  %v4_135ac = inttoptr i32 %v3_135ac to i32*
  store i32 %v1_135a0, i32* %v4_135ac, align 4
  br i1 %v2_135a8, label %dec_label_pc_135b4, label %dec_label_pc_135c0

dec_label_pc_135b4:                               ; preds = %dec_label_pc_1359c
  %v0_135b4 = load i32, i32* @r4, align 4
  store i32 %v0_135b4, i32* @r0, align 4
  %v0_135b8 = call i32 @free()
  store i32 %v0_135b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135d0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_1359c
  %v0_135c0 = load i32, i32* @r5, align 4
  %v1_135c0 = load i32, i32* @r7, align 4
  %v2_135c0 = add i32 %v1_135c0, %v0_135c0
  %v3_135c0 = inttoptr i32 %v2_135c0 to i32*
  %v4_135c0 = load i32, i32* %v3_135c0, align 4
  %v1_135c4 = add i32 %v4_135c0, 1
  store i32 %v1_135c4, i32* %r3.global-to-local, align 4
  %v0_135c8 = load i32, i32* @r4, align 4
  %v2_135c8 = inttoptr i32 %v1_135a0 to i32*
  store i32 %v0_135c8, i32* %v2_135c8, align 4
  %v0_135cc = load i32, i32* %r3.global-to-local, align 4
  %v1_135cc = load i32, i32* @r5, align 4
  %v2_135cc = load i32, i32* @r7, align 4
  %v3_135cc = add i32 %v2_135cc, %v1_135cc
  %v4_135cc = inttoptr i32 %v3_135cc to i32*
  store i32 %v0_135cc, i32* %v4_135cc, align 4
  br label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_13550, %dec_label_pc_13540, %dec_label_pc_1322c, %dec_label_pc_13590, %dec_label_pc_13580, %dec_label_pc_1356c, %dec_label_pc_135b4, %dec_label_pc_135c0
  store i32 13196, i32* %r3.global-to-local, align 4
  %v0_135d4 = load i32, i32* @r5, align 4
  %v2_135d4 = add i32 %v0_135d4, 13196
  %v3_135d4 = inttoptr i32 %v2_135d4 to i32*
  %v4_135d4 = load i32, i32* %v3_135d4, align 4
  store i32 %v4_135d4, i32* %r0.global-to-local, align 4
  %v2_135d8 = icmp eq i32 %v4_135d4, 0
  br i1 %v2_135d8, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_135d0
  store i32 79332, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_135d0, %bb64
  %v2_135e0 = xor i1 %v2_135d8, true
  call void @__pseudo_cond_branch(i1 %v2_135e0, i32 %v4_135d4)
  %v2_135e8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_135e8, i32* %r4.global-to-local, align 4
  store i32 %v12_131dc, i32* @r7, align 4
  store i32 %v15_131dc, i32* @r8, align 4
  store i32 %v18_131dc, i32* @sb, align 4
  store i32 %v21_131dc, i32* @sl, align 4
  store i32 %v27_131dc, i32* %lr.global-to-local, align 4
  ret i32 %v4_135d4

; uselistorder directives
  uselistorder i32 %v1_135a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13550, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_132e0, { 1, 0 }
  uselistorder i32 %v2_132c8, { 1, 0 }
  uselistorder i32 %v2_132a8, { 1, 0 }
  uselistorder i32 %v2_134d0, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_134a0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13490, { 1, 0 }
  uselistorder i32 %v0_13430, { 1, 0, 2 }
  uselistorder i32 %v1_133a817, { 1, 0 }
  uselistorder i32 %v1_133a010, { 1, 0 }
  uselistorder i32 %v0_133a09, { 1, 0 }
  uselistorder i32 %v1_133a8, { 1, 0 }
  uselistorder i32 %v3_13324, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 28, 27, 13, 14, 15, 0, 18, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 17, 5, 0, 7, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 20, 3, 4, 5, 6, 7, 8, 21, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 53, 54, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 56, 55, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 50, 48, 49, 52, 51 }
  uselistorder i32 (i16*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 5, 4, 6, 1, 2, 3 }
  uselistorder i32 (i32*, i32)* @realloc, { 1, 2, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 -37204, { 1, 0 }
  uselistorder i32 703, { 0, 2, 4, 5, 1, 3, 6 }
  uselistorder i32 -37176, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37176), { 1, 0 }
  uselistorder i32 13196, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_135d0, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_13540, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_134f4, { 1, 0 }
  uselistorder label %dec_label_pc_134ec, { 1, 0 }
  uselistorder label %dec_label_pc_133b0, { 1, 0 }
  uselistorder label %dec_label_pc_134d0.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1322c, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13638 = load i32, i32* @r4, align 4
  store i32 %v3_13638, i32* %stack_var_-20, align 4
  store i32 13204, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r5, align 4
  store i32 -37100, i32* %r3.global-to-local, align 4
  %v4_1364c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13204) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37100), i32* %r3.global-to-local, align 4
  store i32 79456, i32* @lr, align 4
  %v1_1365c = icmp ne i32 %v4_1364c, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37100)
  call void @__pseudo_cond_branch(i1 %v1_1365c, i32 ptrtoint (i32* @global_var_c048.324 to i32))
  store i32 13208, i32* %r3.global-to-local, align 4
  store i32 13212, i32* @r7, align 4
  store i32 13200, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_13670 = load i32, i32* @r5, align 4
  %v3_13670 = add i32 %v1_13670, 13208
  %v4_13670 = inttoptr i32 %v3_13670 to i32*
  store i32 0, i32* %v4_13670, align 4
  %v0_13674 = load i32, i32* %r2.global-to-local, align 4
  %v1_13674 = load i32, i32* @r5, align 4
  %v2_13674 = load i32, i32* %r4.global-to-local, align 4
  %v3_13674 = add i32 %v2_13674, %v1_13674
  %v4_13674 = inttoptr i32 %v3_13674 to i32*
  store i32 %v0_13674, i32* %v4_13674, align 4
  br label %dec_label_pc_1368c

dec_label_pc_1367c:                               ; preds = %dec_label_pc_1368c
  store i32 %v4_136a0, i32* %r3.global-to-local, align 4
  store i32 %v1_13694, i32* %v3_1368c, align 4
  %v0_13684 = load i32, i32* %r3.global-to-local, align 4
  %v1_13684 = load i32, i32* %r2.global-to-local, align 4
  %v4_13684 = mul i32 %v1_13684, 4
  %v5_13684 = add i32 %v4_13684, %v0_13684
  %v6_13684 = inttoptr i32 %v5_13684 to i32*
  %v7_13684 = load i32, i32* %v6_13684, align 4
  store i32 %v7_13684, i32* @r0, align 4
  %v0_13688 = call i32 @free()
  br label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %entry, %dec_label_pc_1367c
  %v0_1368c = load i32, i32* @r5, align 4
  %v1_1368c = load i32, i32* @r7, align 4
  %v2_1368c = add i32 %v1_1368c, %v0_1368c
  %v3_1368c = inttoptr i32 %v2_1368c to i32*
  %v4_1368c = load i32, i32* %v3_1368c, align 4
  store i32 %v4_1368c, i32* @r4, align 4
  %v2_13690 = icmp eq i32 %v4_1368c, 0
  %v1_13694 = add i32 %v4_1368c, -1
  store i32 %v1_13694, i32* %r2.global-to-local, align 4
  %v0_13698 = load i32, i32* @r6, align 4
  store i32 %v0_13698, i32* %r3.global-to-local, align 4
  %v2_136a0 = add i32 %v0_13698, %v0_1368c
  %v3_136a0 = inttoptr i32 %v2_136a0 to i32*
  %v4_136a0 = load i32, i32* %v3_136a0, align 4
  br i1 %v2_13690, label %dec_label_pc_136a0, label %dec_label_pc_1367c

dec_label_pc_136a0:                               ; preds = %dec_label_pc_1368c
  store i32 %v4_136a0, i32* @r0, align 4
  %v0_136a4 = call i32 @free()
  %v0_136a8 = load i32, i32* @r4, align 4
  %v1_136a8 = load i32, i32* @r5, align 4
  %v2_136a8 = load i32, i32* @r6, align 4
  %v3_136a8 = add i32 %v2_136a8, %v1_136a8
  %v4_136a8 = inttoptr i32 %v3_136a8 to i32*
  store i32 %v0_136a8, i32* %v4_136a8, align 4
  %v2_136b0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_136b0, i32* %r4.global-to-local, align 4
  ret i32 %v0_136a4

; uselistorder directives
  uselistorder i32 %v4_136a0, { 1, 0 }
  uselistorder i32 %v1_13694, { 1, 0 }
  uselistorder i32* %v3_1368c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 13200, { 3, 1, 6, 4, 5, 0, 2 }
  uselistorder i32 13212, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 13208, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -37100, { 1, 2, 0, 3 }
  uselistorder i32 13204, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1368c, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1) local_unnamed_addr {
entry:
  %v0_136d0 = load i32, i32* @lr, align 4
  %v0_136dc = load i32, i32* @r1, align 4
  store i32 %v0_136dc, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %v0_136dc, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1370c = call i32 @__read_etc_hosts_r()
  store i32 %v0_136d0, i32* @lr, align 4
  ret i32 %v0_1370c
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp28, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_13724 = load i32, i32* @r1, align 4
  store i32 %v0_13724, i32* @r7, align 4
  store i32 %tmp28, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_13730 = load i32, i32* @r0, align 4
  store i32 %v0_13730, i32* @fp, align 4
  %v2_13730 = icmp eq i32 %v0_13730, 0
  %v2_13734 = inttoptr i32 %tmp28 to i32*
  store i32 0, i32* %v2_13734, align 4
  %v0_13738 = load i32, i32* @r2, align 4
  %v0_1373c = load i32, i32* @r3, align 4
  store i32 %v0_1373c, i32* @r6, align 4
  br i1 %v2_13730, label %bb, label %dec_label_pc_13748

bb:                                               ; preds = %entry
  %v1_13740 = load i32, i32* @r5, align 4
  %v2_13740 = add i32 %v1_13740, 22
  store i32 %v2_13740, i32* @r5, align 4
  br label %dec_label_pc_13a38

dec_label_pc_13748:                               ; preds = %entry
  store i32 60328, i32* %r3.global-to-local, align 4
  store i32 60324, i32* %r2.global-to-local, align 4
  %v0_13750 = call i32 @__aeabi_read_tp()
  store i32 %v0_13750, i32* %r0.global-to-local, align 4
  %v3_13758 = load i16, i16* @global_var_22308.76, align 2
  %v4_13758 = sext i16 %v3_13758 to i32
  store i32 %v4_13758, i32* %r3.global-to-local, align 4
  store i32 %v4_13758, i32* %r2.global-to-local, align 4
  %v2_13760 = add i32 %v4_13758, %v0_13750
  %v3_13760 = inttoptr i32 %v2_13760 to i32*
  %v4_13760 = load i32, i32* %v3_13760, align 4
  store i32 %v4_13760, i32* @r8, align 4
  %v0_13764 = load i32, i32* @r5, align 4
  store i32 %v0_13764, i32* %v3_13760, align 4
  store i32 %v0_13750, i32* @r4, align 4
  store i32 2, i32* @r1, align 4
  %v0_13778 = load i32, i32* @fp, align 4
  store i32 %v0_13778, i32* %r0.global-to-local, align 4
  %v0_1377c = load i32, i32* @r7, align 4
  store i32 %v0_1377c, i32* %r2.global-to-local, align 4
  store i32 %v0_13738, i32* %r3.global-to-local, align 4
  %v1_1378c = call i32 @__get_hosts_byname_r(i32 %v0_13778)
  store i32 %v1_1378c, i32* %r0.global-to-local, align 4
  store i32 %v1_1378c, i32* @r5, align 4
  %v2_13790 = icmp eq i32 %v1_1378c, 0
  br i1 %v2_13790, label %.thread4, label %dec_label_pc_137a4

.thread4:                                         ; preds = %dec_label_pc_13748
  store i32 60264, i32* %r3.global-to-local, align 4
  %v4_13798 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_137a0.504 to i32), i32 60264) to i32*), align 4
  store i32 %v4_13798, i32* %r3.global-to-local, align 4
  %v1_1379c = load i32, i32* @r8, align 4
  %v2_1379c = load i32, i32* @r4, align 4
  %v4_1379c = add i32 %v2_1379c, %v4_13798
  %v5_1379c = inttoptr i32 %v4_1379c to i32*
  store i32 %v1_1379c, i32* %v5_1379c, align 4
  br label %dec_label_pc_13a38

dec_label_pc_137a4:                               ; preds = %dec_label_pc_13748
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  %v1_137a8 = inttoptr i32 %tmp17 to i32*
  %v2_137a8 = load i32, i32* %v1_137a8, align 4
  store i32 %v2_137a8, i32* %r3.global-to-local, align 4
  %v7_137ac = icmp eq i32 %v2_137a8, 1
  br i1 %v7_137ac, label %dec_label_pc_137c8, label %dec_label_pc_137b4

dec_label_pc_137b4:                               ; preds = %dec_label_pc_137a4
  %v7_137b4 = icmp eq i32 %v2_137a8, 4
  br i1 %v7_137b4, label %dec_label_pc_137f0, label %dec_label_pc_137bc

dec_label_pc_137bc:                               ; preds = %dec_label_pc_137b4
  %v3_137bc = icmp eq i32 %v2_137a8, -1
  br i1 %v3_137bc, label %dec_label_pc_137dc, label %dec_label_pc_13a38

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137a4
  %v7_137c8 = icmp eq i32 %v1_1378c, 2
  br i1 %v7_137c8, label %.thread6, label %bb33

bb33:                                             ; preds = %dec_label_pc_137c8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_137f8

.thread6:                                         ; preds = %dec_label_pc_137c8
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_137f8

dec_label_pc_137dc:                               ; preds = %dec_label_pc_137bc
  %v3_137e0 = load i16, i16* @global_var_22308.76, align 2
  %v4_137e0 = sext i16 %v3_137e0 to i32
  store i32 %v4_137e0, i32* %r3.global-to-local, align 4
  %v0_137e4 = load i32, i32* @r4, align 4
  %v2_137e4 = add i32 %v0_137e4, %v4_137e0
  %v3_137e4 = inttoptr i32 %v2_137e4 to i32*
  %v4_137e4 = load i32, i32* %v3_137e4, align 4
  store i32 %v4_137e4, i32* %r3.global-to-local, align 4
  %v7_137e8 = icmp eq i32 %v4_137e4, 2
  br i1 %v7_137e8, label %dec_label_pc_137f0, label %dec_label_pc_13a38

dec_label_pc_137f0:                               ; preds = %dec_label_pc_137dc, %dec_label_pc_137b4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_137f8

dec_label_pc_137f8:                               ; preds = %.thread6, %bb33, %dec_label_pc_137f0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_137f0 ], [ 0, %bb33 ], [ 1, %.thread6 ]
  store i32 60160, i32* %r3.global-to-local, align 4
  %v0_137fc = call i32 @__aeabi_read_tp()
  %v3_13800 = load i16, i16* @global_var_22308.76, align 2
  %v4_13800 = sext i16 %v3_13800 to i32
  store i32 %tmp17, i32* @ip, align 4
  %v0_13808 = load i32, i32* @r8, align 4
  %v3_13808 = add i32 %v4_13800, %v0_137fc
  %v4_13808 = inttoptr i32 %v3_13808 to i32*
  store i32 %v0_13808, i32* %v4_13808, align 4
  store i32 -1, i32* @r3, align 4
  %v1_13814 = load i32, i32* @ip, align 4
  %v2_13814 = inttoptr i32 %v1_13814 to i32*
  store i32 -1, i32* %v2_13814, align 4
  %v0_13818 = load i32, i32* @fp, align 4
  %v1_13818 = inttoptr i32 %v0_13818 to i8*
  store i32 %v0_13818, i32* %r0.global-to-local, align 4
  %v3_1381c = call i32 @strlen(i8* %v1_13818)
  store i32 %v3_1381c, i32* %r0.global-to-local, align 4
  %v1_13820 = add i32 %v3_1381c, 1
  store i32 %v1_13820, i32* @r4, align 4
  %v0_13824 = load i32, i32* @r6, align 4
  %v7_13828 = icmp sgt i32 %v0_13824, %v1_13820
  br i1 %v7_13828, label %dec_label_pc_1382c, label %dec_label_pc_13a34

dec_label_pc_1382c:                               ; preds = %dec_label_pc_137f8
  %v0_1382c = load i32, i32* @fp, align 4
  store i32 %v0_1382c, i32* @r1, align 4
  store i32 %v1_13820, i32* @r2, align 4
  store i32 %v0_13738, i32* @r0, align 4
  %v0_13838 = call i32 @memcpy()
  store i32 %v0_13838, i32* %r0.global-to-local, align 4
  %v1_13840 = load i32, i32* @r4, align 4
  %v2_13840 = add i32 %v1_13840, %v0_13738
  store i32 %v2_13840, i32* %r1.global-to-local, align 4
  %v1_13844 = sub i32 0, %v2_13840
  %v1_13848 = load i32, i32* @r6, align 4
  %v2_13848 = sub i32 %v1_13848, %v1_13840
  store i32 %v2_13848, i32* %r2.global-to-local, align 4
  %v1_1384c = urem i32 %v1_13844, 4
  store i32 %v1_1384c, i32* %r3.global-to-local, align 4
  %v2_13850 = sub i32 %v2_13848, %v1_1384c
  store i32 %v2_13850, i32* @sl, align 4
  %v1_13854 = add i32 %v2_13850, -8
  store i32 %v1_13854, i32* @r5, align 4
  %v7_1385c = icmp slt i32 %v1_13854, 256
  br i1 %v7_1385c, label %dec_label_pc_13a34, label %dec_label_pc_13860

dec_label_pc_13860:                               ; preds = %dec_label_pc_1382c
  %v2_13860 = add i32 %v1_1384c, %v2_13840
  store i32 %v2_13860, i32* @sb, align 4
  store i32 %v0_13738, i32* @ip, align 4
  %v1_13868 = add i32 %v2_13860, 8
  store i32 %v1_13868, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_13870 = add i32 %v2_13860, 16
  store i32 %v1_13870, i32* @r8, align 4
  %v4_13874 = inttoptr i32 %v2_13860 to i32*
  store i32 %v0_13738, i32* %v4_13874, align 4
  %v0_13878 = load i32, i32* @fp, align 4
  store i32 %v0_13878, i32* %r0.global-to-local, align 4
  %v0_1387c = load i32, i32* @r4, align 4
  %v1_1387c = load i32, i32* @sb, align 4
  %v2_1387c = add i32 %v1_1387c, 4
  %v3_1387c = inttoptr i32 %v2_1387c to i32*
  store i32 %v0_1387c, i32* %v3_1387c, align 4
  %v0_13880 = load i32, i32* @r8, align 4
  store i32 %v0_13880, i32* %r1.global-to-local, align 4
  %v2_13884 = inttoptr i32 %v0_13878 to i8*
  %v3_13884 = call i32 @inet_aton(i8* %v2_13884, i32 %v0_13880)
  store i32 %v3_13884, i32* %r0.global-to-local, align 4
  %v1_13888 = load i32, i32* @r4, align 4
  %v9_13888 = icmp eq i32 %v3_13884, %v1_13888
  br i1 %v9_13888, label %dec_label_pc_138cc, label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %dec_label_pc_13860
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_13894 = load i32, i32* @r7, align 4
  %v2_13894 = add i32 %v1_13894, 8
  %v3_13894 = inttoptr i32 %v2_13894 to i32*
  store i32 2, i32* %v3_13894, align 4
  %v0_13898 = load i32, i32* %r3.global-to-local, align 4
  %v2_13898 = mul i32 %v0_13898, 2
  %v1_1389c = load i32, i32* @r7, align 4
  %v2_1389c = add i32 %v1_1389c, 12
  %v3_1389c = inttoptr i32 %v2_1389c to i32*
  store i32 %v2_13898, i32* %v3_1389c, align 4
  %v3_138a0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_138a0, i32* %r1.global-to-local, align 4
  store i32 %v0_13738, i32* %r2.global-to-local, align 4
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %v0_138ac = load i32, i32* @r4, align 4
  store i32 %v0_138ac, i32* @r5, align 4
  %v0_138b0 = load i32, i32* @r8, align 4
  %v1_138b0 = load i32, i32* @sb, align 4
  %v2_138b0 = add i32 %v1_138b0, 8
  %v3_138b0 = inttoptr i32 %v2_138b0 to i32*
  store i32 %v0_138b0, i32* %v3_138b0, align 4
  %v0_138b4 = load i32, i32* @r7, align 4
  %v1_138b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_138b4 = inttoptr i32 %v1_138b4 to i32*
  store i32 %v0_138b4, i32* %v2_138b4, align 4
  %v0_138b8 = load i32, i32* @r7, align 4
  %v1_138b8 = inttoptr i32 %v0_138b8 to i32*
  %v2_138b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_138b8, i32* %v1_138b8, align 4
  %v3_138b8 = add i32 %v0_138b8, 4
  %v4_138b8 = inttoptr i32 %v3_138b8 to i32*
  %v5_138b8 = load i32, i32* @sb, align 4
  store i32 %v5_138b8, i32* %v4_138b8, align 4
  %v0_138bc = load i32, i32* @r6, align 4
  %v1_138bc = load i32, i32* @r7, align 4
  %v2_138bc = add i32 %v1_138bc, 16
  %v3_138bc = inttoptr i32 %v2_138bc to i32*
  store i32 %v0_138bc, i32* %v3_138bc, align 4
  %v0_138c0 = load i32, i32* @r4, align 4
  %v1_138c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_138c0 = inttoptr i32 %v1_138c0 to i32*
  store i32 %v0_138c0, i32* %v2_138c0, align 4
  %v0_138c4 = load i32, i32* @r4, align 4
  %v1_138c4 = load i32, i32* @r6, align 4
  %v2_138c4 = add i32 %v1_138c4, 4
  %v3_138c4 = inttoptr i32 %v2_138c4 to i32*
  store i32 %v0_138c4, i32* %v3_138c4, align 4
  br label %dec_label_pc_13a38

dec_label_pc_138cc:                               ; preds = %dec_label_pc_13860
  store i32 %storemerge2, i32* @ip, align 4
  %v2_138d0 = icmp eq i32 %storemerge2, 0
  br i1 %v2_138d0, label %dec_label_pc_138d8, label %dec_label_pc_13908

dec_label_pc_138d8:                               ; preds = %dec_label_pc_138cc
  %v0_138e4 = load i32, i32* @fp, align 4
  store i32 %v0_138e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_138ec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_138ec, i32* %r2.global-to-local, align 4
  %v2_138f0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_138f0, i32* %r3.global-to-local, align 4
  %v7_138fc = inttoptr i32 %v0_138e4 to i8*
  %v8_138fc = call i32 @__dns_lookup(i8* %v7_138fc, i32 1, i32 %v2_138ec, i32 %v2_138f0)
  store i32 %v8_138fc, i32* %r0.global-to-local, align 4
  %v1_13900 = icmp slt i32 %v8_138fc, 0
  br i1 %v1_13900, label %dec_label_pc_13908, label %dec_label_pc_1391c

dec_label_pc_13908:                               ; preds = %dec_label_pc_138d8, %dec_label_pc_138cc
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_137a8, align 4
  br label %dec_label_pc_13a38

dec_label_pc_1391c:                               ; preds = %dec_label_pc_138d8
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v7_13920 = icmp eq i32 %tmp10, 1
  br i1 %v7_13920, label %dec_label_pc_13928, label %dec_label_pc_13a00

dec_label_pc_13928:                               ; preds = %dec_label_pc_1391c
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_13940 = load i32, i32* @r5, align 4
  %v2_13940 = add i32 %v0_13940, -12
  store i32 %v2_13940, i32* @r8, align 4
  %v8_13940 = icmp slt i32 %v2_13940, 0
  br i1 %v8_13940, label %bb35, label %dec_label_pc_1394c

bb35:                                             ; preds = %dec_label_pc_13928
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_13a20

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13928
  %v0_1394c = load i32, i32* @r6, align 4
  store i32 %v0_1394c, i32* @r1, align 4
  %v2_13950 = add i32 %v0_1394c, 12
  store i32 %v2_13950, i32* @r0, align 4
  %v2_13954 = call i32 @memmove(i32 %v2_13950, i32 %v0_1394c)
  %v0_13958 = load i32, i32* @sb, align 4
  %v1_13958 = add i32 %v0_13958, 4
  store i32 %v1_13958, i32* @r3, align 4
  %v1_1395c = load i32, i32* @r4, align 4
  %v2_1395c = add i32 %v1_1395c, %v1_13958
  store i32 %v2_1395c, i32* @r5, align 4
  store i32 %v2_1395c, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1396c = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13978.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13978

dec_label_pc_13978:                               ; preds = %dec_label_pc_1394c, %dec_label_pc_13978
  %v0_13978 = phi i32 [ %v0_13978.pre, %dec_label_pc_1394c ], [ %v1_1397c, %dec_label_pc_13978 ]
  %v1_13978 = load i32, i32* @r6, align 4
  %v7_13978 = inttoptr i32 %v1_13978 to i32*
  store i32 %v0_13978, i32* %v7_13978, align 4
  %v0_1397c = load i32, i32* @r5, align 4
  %v1_1397c = add i32 %v0_1397c, 4
  store i32 %v1_1397c, i32* @r5, align 4
  %v0_13980 = load i32, i32* %r0.global-to-local, align 4
  %v1_13980 = add i32 %v0_13980, 1
  store i32 %v1_13980, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_13988 = icmp eq i32 %v1_13980, 0
  br i1 %v9_13988, label %dec_label_pc_13978, label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13978
  %v3_13990 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_13990, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13998 = icmp eq i32 %v3_13990, 0
  %v1_1399c = load i32, i32* @r6, align 4
  %v5_1399c = mul i32 %v1_13980, 4
  %v6_1399c = add i32 %v1_1399c, %v5_1399c
  %v7_1399c = inttoptr i32 %v6_1399c to i32*
  store i32 0, i32* %v7_1399c, align 4
  br i1 %v2_13998, label %dec_label_pc_139cc, label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %dec_label_pc_13990
  %v0_139a4 = load i32, i32* @r4, align 4
  %v1_139a4 = inttoptr i32 %v0_139a4 to i8*
  store i32 %v0_139a4, i32* %r0.global-to-local, align 4
  %v3_139a8 = call i32 @strlen(i8* %v1_139a4)
  store i32 %v3_139a8, i32* %r0.global-to-local, align 4
  %v0_139ac = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_139ac, %v3_139a8
  br i1 %tmp, label %dec_label_pc_139b4, label %dec_label_pc_139cc

dec_label_pc_139b4:                               ; preds = %dec_label_pc_139a4
  %v0_139b4 = load i32, i32* @r4, align 4
  store i32 %v0_139b4, i32* @r1, align 4
  %v0_139b8 = load i32, i32* @r5, align 4
  store i32 %v0_139b8, i32* %r0.global-to-local, align 4
  %v2_139bc = inttoptr i32 %v0_139b8 to i8*
  %v3_139bc = call i32 @strcpy(i8* %v2_139bc, i32 %v0_139b4)
  store i32 %v3_139bc, i32* %r0.global-to-local, align 4
  %v0_139c0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139a4, %dec_label_pc_13990, %dec_label_pc_139b4
  %storemerge1 = phi i32 [ %v0_139c0, %dec_label_pc_139b4 ], [ %v0_13738, %dec_label_pc_139a4 ], [ %v0_13738, %dec_label_pc_13990 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  %v3_139cc = load i32, i32* %stack_var_0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_139d4 = load i32, i32* @r7, align 4
  %v2_139d4 = inttoptr i32 %v3_139cc to i32*
  store i32 %v0_139d4, i32* %v2_139d4, align 4
  store i32 %tmp17, i32* @ip, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_139e0 = load i32, i32* @r7, align 4
  %v2_139e0 = add i32 %v1_139e0, 8
  %v3_139e0 = inttoptr i32 %v2_139e0 to i32*
  store i32 2, i32* %v3_139e0, align 4
  %v0_139e4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_139e4, i32* @r5, align 4
  %v0_139e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_139e8 = mul i32 %v0_139e8, 2
  store i32 %v2_139e8, i32* %r2.global-to-local, align 4
  %v1_139ec = load i32, i32* @r7, align 4
  %v2_139ec = add i32 %v1_139ec, 12
  %v3_139ec = inttoptr i32 %v2_139ec to i32*
  store i32 %v2_139e8, i32* %v3_139ec, align 4
  %v0_139f0 = load i32, i32* @r7, align 4
  %v1_139f0 = inttoptr i32 %v0_139f0 to i32*
  %v2_139f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_139f0, i32* %v1_139f0, align 4
  %v3_139f0 = add i32 %v0_139f0, 4
  %v4_139f0 = inttoptr i32 %v3_139f0 to i32*
  %v5_139f0 = load i32, i32* @sb, align 4
  store i32 %v5_139f0, i32* %v4_139f0, align 4
  %v0_139f4 = load i32, i32* @r6, align 4
  %v1_139f4 = load i32, i32* @r7, align 4
  %v2_139f4 = add i32 %v1_139f4, 16
  %v3_139f4 = inttoptr i32 %v2_139f4 to i32*
  store i32 %v0_139f4, i32* %v3_139f4, align 4
  %v0_139f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_139f8 = load i32, i32* @ip, align 4
  %v2_139f8 = inttoptr i32 %v1_139f8 to i32*
  store i32 %v0_139f8, i32* %v2_139f8, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a00:                               ; preds = %dec_label_pc_1391c
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_137a8, align 4
  store i32 %v0_137fc, i32* @ip, align 4
  %v3_13a14 = load i32, i32* @global_var_222c4.104, align 4
  store i32 %v3_13a14, i32* %r3.global-to-local, align 4
  %v0_13a18 = load i32, i32* %r2.global-to-local, align 4
  %v3_13a18 = add i32 %v3_13a14, %v0_137fc
  %v4_13a18 = inttoptr i32 %v3_13a18 to i32*
  store i32 %v0_13a18, i32* %v4_13a18, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %bb35, %dec_label_pc_139cc, %dec_label_pc_13a00
  %v3_13a20 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_13a20, i32* @r0, align 4
  %v0_13a24 = call i32 @free()
  %v3_13a28 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13a28, i32* @r0, align 4
  %v0_13a2c = call i32 @free()
  store i32 %v0_13a2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a38

dec_label_pc_13a34:                               ; preds = %dec_label_pc_137f8, %dec_label_pc_1382c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_13a38

dec_label_pc_13a38:                               ; preds = %bb, %.thread4, %dec_label_pc_137dc, %dec_label_pc_137bc, %dec_label_pc_13a20, %dec_label_pc_13908, %dec_label_pc_13890, %dec_label_pc_13a34
  %v0_13a38 = load i32, i32* @r5, align 4
  store i32 %v0_13a38, i32* %r0.global-to-local, align 4
  ret i32 %v0_13a38

; uselistorder directives
  uselistorder i32 %v2_139e8, { 1, 0 }
  uselistorder i32 %v0_139a4, { 1, 0 }
  uselistorder i32 %v1_13980, { 0, 2, 1 }
  uselistorder i32 %v1_1397c, { 1, 0 }
  uselistorder i32 %v0_1394c, { 1, 0, 2 }
  uselistorder i32 %v2_13940, { 1, 0 }
  uselistorder i32 %v1_1384c, { 2, 1, 0 }
  uselistorder i32 %v1_13840, { 1, 0 }
  uselistorder i32 %v0_13818, { 1, 0 }
  uselistorder i32 %v0_137fc, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_137a8, { 1, 0, 2 }
  uselistorder i32 %v0_13750, { 1, 0, 2 }
  uselistorder i32 %v0_13738, { 1, 2, 3, 5, 4, 0, 6, 7 }
  uselistorder i32 %v0_13730, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32 %tmp17, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 23, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 5, 4, 7, 6, 8, 19, 20, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 23, 22, 21, 20, 19, 18, 12, 11, 10, 9, 8, 7, 17, 16, 15, 14, 3, 2, 1, 0, 13, 24, 29, 28, 27, 5, 26, 25, 6, 4 }
  uselistorder i32* @global_var_222c4.104, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_13a38, { 7, 4, 5, 6, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_13a34, { 1, 0 }
  uselistorder label %dec_label_pc_13a20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_139cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13978, { 1, 0 }
  uselistorder label %dec_label_pc_137f8, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13a60 = load i32, i32* @r1, align 4
  %v2_13a60 = icmp eq i32 %v0_13a60, 0
  %v3_13a64 = load i32, i32* @r4, align 4
  store i32 %v3_13a64, i32* %stack_var_-8, align 4
  %v0_13a68 = load i32, i32* @r0, align 4
  store i32 %v0_13a68, i32* %r4.global-to-local, align 4
  br i1 %v2_13a60, label %dec_label_pc_13a8c, label %dec_label_pc_13a70

dec_label_pc_13a70:                               ; preds = %entry
  %v1_13a78 = add i32 %v0_13a68, 260
  %v4_13a7c = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_13a78)
  %v2_13a80 = icmp eq i32 %v4_13a7c, 0
  br i1 %v2_13a80, label %dec_label_pc_13a90, label %dec_label_pc_13a8c

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_13a70, %entry
  br label %dec_label_pc_13a90

dec_label_pc_13a90:                               ; preds = %dec_label_pc_13a70, %dec_label_pc_13a8c
  %storemerge = phi i32 [ 0, %dec_label_pc_13a8c ], [ 1, %dec_label_pc_13a70 ]
  %v1_13a94 = load i32, i32* %r4.global-to-local, align 4
  %v2_13a94 = add i32 %v1_13a94, 256
  %v3_13a94 = inttoptr i32 %v2_13a94 to i32*
  store i32 %storemerge, i32* %v3_13a94, align 4
  %v2_13a98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13a98, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_13a90, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_13ab4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_13ab4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_13ab4 = load i32, i32* @r0, align 4
  ret i32 %v2_13ab4

bb1:                                              ; preds = %entry
  %v0_13ab8 = call i32 @__syscall_error()
  ret i32 %v0_13ab8
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13ac4 = load i32, i32* @global_var_25608.250, align 4
  %v2_13ac8 = icmp eq i32 %v3_13ac4, 0
  br i1 %v2_13ac8, label %dec_label_pc_13ad0, label %entry.dec_label_pc_13aec_crit_edge

entry.dec_label_pc_13aec_crit_edge:               ; preds = %entry
  %v3_13aec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13aec

dec_label_pc_13ad0:                               ; preds = %entry
  %v0_13ad0 = load i32, i32* @r7, align 4
  store i32 %v0_13ad0, i32* @ip, align 4
  %v0_13ae0 = load i32, i32* @r0, align 4
  %v2_13ae0 = icmp ugt i32 %v0_13ae0, -4097
  br i1 %v2_13ae0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_13aec, %dec_label_pc_13ad0
  %merge = phi i32 [ %v0_13ae0, %dec_label_pc_13ad0 ], [ %v0_13b10, %dec_label_pc_13aec ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_13ad0
  %v0_13ae8 = call i32 @__syscall_error()
  br label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %entry.dec_label_pc_13aec_crit_edge, %bb8
  %v3_13aec = phi i32 [ %v3_13aec.pre, %entry.dec_label_pc_13aec_crit_edge ], [ %v0_13ae8, %bb8 ]
  store i32 %v3_13aec, i32* %stack_var_-24, align 4
  %v6_13aec = load i32, i32* @r1, align 4
  %v15_13aec = load i32, i32* @r7, align 4
  store i32 %v15_13aec, i32* %stack_var_-8, align 4
  %v18_13aec = load i32, i32* @lr, align 4
  %v0_13af0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13af0, i32* @ip, align 4
  %v2_13af8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v6_13aec, i32* @r1, align 4
  store i32 %v2_13af8, i32* @r7, align 4
  %v1_13b0c = call i32 @__libc_disable_asynccancel(i32 %v0_13af0)
  %v0_13b10 = load i32, i32* @r7, align 4
  store i32 %v0_13b10, i32* @r0, align 4
  %v2_13b14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13b14, i32* @r7, align 4
  store i32 %v18_13aec, i32* @lr, align 4
  %v2_13b18 = icmp ugt i32 %v0_13b10, -4097
  br i1 %v2_13b18, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_13aec
  %v0_13b20 = call i32 @__syscall_error()
  ret i32 %v0_13b20

; uselistorder directives
  uselistorder i32 %v0_13b10, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 8, 7, 11, 1, 0, 6, 3, 2, 10, 5, 4, 9 }
  uselistorder label %dec_label_pc_13aec, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_13b3c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_13b48 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13b48, i32* %r5.global-to-local, align 4
  %v1_13b4c = call i32 @uname(i32 %v2_13b3c)
  %v7_13b50 = icmp eq i32 %v1_13b4c, -1
  br i1 %v7_13b50, label %bb, label %dec_label_pc_13b5c

bb:                                               ; preds = %entry
  store i32 %v1_13b4c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13b5c:                               ; preds = %entry
  %v2_13b5c = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_13b64 = call i32 @strlen(i8* %tmp10)
  %v1_13b68 = add i32 %v3_13b64, 1
  %v1_13b6c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13b68, %v1_13b6c
  br i1 %tmp, label %dec_label_pc_13b74, label %dec_label_pc_13b90

dec_label_pc_13b74:                               ; preds = %dec_label_pc_13b5c
  %v0_13b78 = call i32 @__aeabi_read_tp()
  %v3_13b7c = load i16, i16* @global_var_22308.76, align 2
  %v4_13b7c = sext i16 %v3_13b7c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13b88 = add i32 %v4_13b7c, %v0_13b78
  %v4_13b88 = inttoptr i32 %v3_13b88 to i32*
  store i32 22, i32* %v4_13b88, align 4
  %v0_13ba0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13b90:                               ; preds = %dec_label_pc_13b5c
  store i32 %v2_13b5c, i32* @r1, align 4
  %v0_13b94 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b98 = inttoptr i32 %v0_13b94 to i8*
  %v3_13b98 = call i32 @strcpy(i8* %v2_13b98, i32 %v2_13b5c)
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13ba0:                               ; preds = %bb, %dec_label_pc_13b74, %dec_label_pc_13b90
  %v0_13ba0 = phi i32 [ %v1_13b4c, %bb ], [ %v0_13ba0.pre, %dec_label_pc_13b74 ], [ 0, %dec_label_pc_13b90 ]
  ret i32 %v0_13ba0

; uselistorder directives
  uselistorder i32 %v2_13b5c, { 1, 0 }
  uselistorder i32 %v1_13b4c, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_13ba0, { 2, 1, 0 }
}

define i32 @__syscall_poll() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bb4 = load i32, i32* @r7, align 4
  store i32 %v3_13bb4, i32* %stack_var_-8, align 4
  %v0_13bc0 = load i32, i32* @r0, align 4
  store i32 %v0_13bc0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13bc0, -4095
  br i1 %tmp, label %dec_label_pc_13be8, label %dec_label_pc_13bd0

dec_label_pc_13bd0:                               ; preds = %entry
  %v0_13bd4 = call i32 @__aeabi_read_tp()
  %v3_13bd8 = load i16, i16* @global_var_22308.76, align 2
  %v4_13bd8 = sext i16 %v3_13bd8 to i32
  %v0_13bdc = load i32, i32* %r2.global-to-local, align 4
  %v1_13bdc = sub i32 0, %v0_13bdc
  store i32 %v1_13bdc, i32* %r2.global-to-local, align 4
  %v3_13be0 = add i32 %v4_13bd8, %v0_13bd4
  %v4_13be0 = inttoptr i32 %v3_13be0 to i32*
  store i32 %v1_13bdc, i32* %v4_13be0, align 4
  %v2_13be8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %entry, %dec_label_pc_13bd0
  %v1_13bec = phi i32 [ %v0_13bc0, %entry ], [ -1, %dec_label_pc_13bd0 ]
  %v2_13be8 = phi i32 [ %v3_13bb4, %entry ], [ %v2_13be8.pre, %dec_label_pc_13bd0 ]
  store i32 %v2_13be8, i32* @r7, align 4
  ret i32 %v1_13bec

; uselistorder directives
  uselistorder i32 %v0_13bc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13be8, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13bf8 = load i32, i32* @r4, align 4
  store i32 %v3_13bf8, i32* %stack_var_-20, align 4
  %v6_13bf8 = load i32, i32* @r5, align 4
  %v9_13bf8 = load i32, i32* @r6, align 4
  %v12_13bf8 = load i32, i32* @r7, align 4
  %v4_13c04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13152) to i32*), align 4
  %v2_13c08 = icmp eq i32 %v4_13c04, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_13c08, label %dec_label_pc_13c20, label %entry.dec_label_pc_13c2c_crit_edge

entry.dec_label_pc_13c2c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13c2c

dec_label_pc_13c20:                               ; preds = %entry
  store i32 %v3_13bf8, i32* @r4, align 4
  store i32 %v9_13bf8, i32* @r6, align 4
  store i32 %v12_13bf8, i32* @r7, align 4
  %v0_13c28 = call i32 @__syscall_poll()
  br label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %entry.dec_label_pc_13c2c_crit_edge, %dec_label_pc_13c20
  %v0_13c2c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13c2c, i32* @r5, align 4
  %v0_13c3c = load i32, i32* @r4, align 4
  store i32 %v0_13c3c, i32* @r0, align 4
  %v0_13c40 = call i32 @__syscall_poll()
  store i32 %v0_13c40, i32* @r4, align 4
  %v0_13c48 = load i32, i32* @r5, align 4
  %v1_13c4c = call i32 @__libc_disable_asynccancel(i32 %v0_13c48)
  %v0_13c50 = load i32, i32* @r4, align 4
  %v2_13c58 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13c58, i32* @r4, align 4
  store i32 %v6_13bf8, i32* @r5, align 4
  store i32 %v9_13bf8, i32* @r6, align 4
  store i32 %v12_13bf8, i32* @r7, align 4
  ret i32 %v0_13c50

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 10, 9, 2, 1, 3, 8, 7, 5, 6, 11, 4, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 10, 9, 2, 1, 3, 8, 7, 5, 6, 11, 4, 0 }
  uselistorder label %dec_label_pc_13c2c, { 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 195, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13ca8, label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %entry
  %v0_13c90 = call i32 @__aeabi_read_tp()
  %v3_13c94 = load i16, i16* @global_var_22308.76, align 2
  %v4_13c94 = sext i16 %v3_13c94 to i32
  %v0_13c98 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c98 = sub i32 0, %v0_13c98
  store i32 %v1_13c98, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_13ca0 = add i32 %v4_13c94, %v0_13c90
  %v4_13ca0 = inttoptr i32 %v3_13ca0 to i32*
  store i32 %v1_13c98, i32* %v4_13ca0, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13ca8:                               ; preds = %entry
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v2_13ca8 = icmp eq i32 %arg1, 0
  br i1 %v2_13ca8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13ca8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13ca8, %bb
  call void @__pseudo_cond_branch(i1 %v2_13ca8, i32 ptrtoint (i32* @global_var_11bb8.430 to i32))
  br label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %dec_label_pc_13c8c, %.thread
  %v0_13cb8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_13cb8

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13cb8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ccc = load i32, i32* @r7, align 4
  store i32 %v3_13ccc, i32* %stack_var_-8, align 4
  %v0_13cd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13cd8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13cd8, -4095
  br i1 %tmp, label %dec_label_pc_13d00, label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %entry
  %v0_13cec = call i32 @__aeabi_read_tp()
  %v3_13cf0 = load i16, i16* @global_var_22308.76, align 2
  %v4_13cf0 = sext i16 %v3_13cf0 to i32
  %v0_13cf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13cf4 = sub i32 0, %v0_13cf4
  store i32 %v1_13cf4, i32* %r2.global-to-local, align 4
  %v3_13cf8 = add i32 %v4_13cf0, %v0_13cec
  %v4_13cf8 = inttoptr i32 %v3_13cf8 to i32*
  store i32 %v1_13cf4, i32* %v4_13cf8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13d00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13d00

dec_label_pc_13d00:                               ; preds = %entry, %dec_label_pc_13ce8
  %v1_13d04 = phi i32 [ %v0_13cd8, %entry ], [ -1, %dec_label_pc_13ce8 ]
  %v2_13d00 = phi i32 [ %v3_13ccc, %entry ], [ %v2_13d00.pre, %dec_label_pc_13ce8 ]
  store i32 %v2_13d00, i32* @r7, align 4
  ret i32 %v1_13d04

; uselistorder directives
  uselistorder i32 %v0_13cd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d00, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_13d54, label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %entry
  %v0_13d3c = call i32 @__aeabi_read_tp()
  %v3_13d40 = load i16, i16* @global_var_22308.76, align 2
  %v4_13d40 = sext i16 %v3_13d40 to i32
  %v0_13d44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d44 = sub i32 0, %v0_13d44
  store i32 %v1_13d44, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13d4c = add i32 %v4_13d40, %v0_13d3c
  %v4_13d4c = inttoptr i32 %v3_13d4c to i32*
  store i32 %v1_13d44, i32* %v4_13d4c, align 4
  %v0_13d5c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d54:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_13d54 = icmp eq i32 %arg1, 0
  br i1 %v2_13d54, label %dec_label_pc_13d68, label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d54, %dec_label_pc_13d38
  %v0_13d5c = phi i32 [ %arg1, %dec_label_pc_13d54 ], [ %v0_13d5c.pre, %dec_label_pc_13d38 ]
  %v3_13d60 = ashr i32 %v0_13d5c, 31
  br label %dec_label_pc_13d6c

dec_label_pc_13d68:                               ; preds = %dec_label_pc_13d54
  br label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d5c, %dec_label_pc_13d68
  %v1_13d74 = phi i32 [ %v0_13d5c, %dec_label_pc_13d5c ], [ %tmp8, %dec_label_pc_13d68 ]
  %storemerge = phi i32 [ %v3_13d60, %dec_label_pc_13d5c ], [ %tmp, %dec_label_pc_13d68 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_13d74

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13d6c, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_13d88 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_13d88, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_13d9c = call i32 @__GI_vsnprintf()
  ret i32 %v0_13d9c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %v3_13db0 = load i32, i32* @r4, align 4
  %v6_13db0 = load i32, i32* @r5, align 4
  %v9_13db0 = load i32, i32* @r6, align 4
  %v2_13dc4 = ptrtoint i32* %stack_var_-96 to i32
  %v0_13dc8 = load i32, i32* @r0, align 4
  store i32 %v0_13dc8, i32* @r4, align 4
  %v0_13dcc = load i32, i32* @r2, align 4
  %v0_13dd0 = load i32, i32* @r1, align 4
  store i32 %v0_13dd0, i32* @r5, align 4
  %v1_13de8 = sub i32 -1, %v0_13dc8
  store i32 %v1_13de8, i32* @lr, align 4
  %v0_13dec = load i32, i32* @r3, align 4
  store i32 %v0_13dec, i32* @r2, align 4
  %v3_13df4 = icmp ult i32 %v0_13dd0, %v1_13de8
  br i1 %v3_13df4, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_13de8, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_13e04 = phi i32 [ %v0_13dd0, %entry ], [ %v1_13de8, %bb ]
  %v2_13e04 = add i32 %v1_13e04, %v0_13dc8
  store i32 %v2_13e04, i32* @ip, align 4
  store i32 0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_13e44 = inttoptr i32 %v0_13dcc to i8*
  %v3_13e44 = call i32 @_vfprintf_internal(i32 %v2_13dc4, i8* %v2_13e44)
  %v0_13e48 = load i32, i32* @r5, align 4
  %v1_13e48 = load i32, i32* @r6, align 4
  %v9_13e48 = icmp eq i32 %v0_13e48, %v1_13e48
  br i1 %v9_13e48, label %dec_label_pc_13e6c, label %dec_label_pc_13e50

dec_label_pc_13e50:                               ; preds = %bb26
  %v9_13e58 = icmp eq i32 %v1_13e04, 0
  br i1 %v9_13e58, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_13e50
  %v2_13e5c = add i32 %v0_13dc8, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_13e50, %bb27
  %v1_13e60 = phi i32 [ %v2_13e04, %dec_label_pc_13e50 ], [ %v2_13e5c, %bb27 ]
  %v1_13e60.v0_13e3c = select i1 %v9_13e58, i32 %v1_13e60, i32 %v0_13dc8
  %stack_var_-80.0 = inttoptr i32 %v1_13e60.v0_13e3c to i8*
  %v1_13e68 = trunc i32 %v1_13e48 to i8
  store i8 %v1_13e68, i8* %stack_var_-80.0, align 1
  br label %dec_label_pc_13e6c

dec_label_pc_13e6c:                               ; preds = %bb26, %bb28
  store i32 %v3_13db0, i32* @r4, align 4
  store i32 %v6_13db0, i32* @r5, align 4
  store i32 %v9_13db0, i32* @r6, align 4
  ret i32 %v3_13e44

; uselistorder directives
  uselistorder i1 %v9_13e58, { 1, 0 }
  uselistorder i32 %v1_13e04, { 1, 0 }
  uselistorder i32 %v1_13de8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13dc8, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_13e6c, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_13e80 = load i32, i32* @r4, align 4
  %v6_13e80 = load i32, i32* @r5, align 4
  %v9_13e80 = load i32, i32* @r6, align 4
  %v12_13e80 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_13e8c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_13e8c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_13ea42 = icmp eq i32 %arg3, 0
  br i1 %v2_13ea42, label %dec_label_pc_13ec4, label %dec_label_pc_13eb8

dec_label_pc_13ea0:                               ; preds = %dec_label_pc_13eb8
  %v1_13ea0 = add i32 %v0_13ea0, -1
  store i32 %v1_13ea0, i32* @r4, align 4
  %v2_13ea4 = icmp eq i32 %v1_13ea0, 0
  %v0_13eb0 = load i32, i32* @r7, align 4
  br i1 %v2_13ea4, label %dec_label_pc_13ec4.loopexit, label %dec_label_pc_13eb8

dec_label_pc_13eb8:                               ; preds = %entry, %dec_label_pc_13ea0
  %v0_13eb04 = phi i32 [ %v0_13eb0, %dec_label_pc_13ea0 ], [ %arg1, %entry ]
  %v3_13eb8 = inttoptr i32 %v0_13eb04 to i16*
  %v4_13eb8 = call i32 @__stdio_fwrite(i32 %v10_13e8c, i32 1, i16* %v3_13eb8)
  %v7_13ebc = icmp eq i32 %v4_13eb8, 1
  %v0_13ea0 = load i32, i32* @r4, align 4
  br i1 %v7_13ebc, label %dec_label_pc_13ea0, label %dec_label_pc_13ec4.loopexit

dec_label_pc_13ec4.loopexit:                      ; preds = %dec_label_pc_13ea0, %dec_label_pc_13eb8
  %v0_13ec4.ph = phi i32 [ %v0_13ea0, %dec_label_pc_13eb8 ], [ 0, %dec_label_pc_13ea0 ]
  %v1_13ec4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ec4

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13ec4.loopexit, %entry
  %v1_13ec4 = phi i32 [ 0, %entry ], [ %v1_13ec4.pre, %dec_label_pc_13ec4.loopexit ]
  %v0_13ec4 = phi i32 [ 0, %entry ], [ %v0_13ec4.ph, %dec_label_pc_13ec4.loopexit ]
  %v2_13ec4 = sub i32 %v1_13ec4, %v0_13ec4
  store i32 %v3_13e80, i32* @r4, align 4
  store i32 %v6_13e80, i32* @r5, align 4
  store i32 %v9_13e80, i32* @r6, align 4
  store i32 %v12_13e80, i32* @r7, align 4
  ret i32 %v2_13ec4

; uselistorder directives
  uselistorder i32 %v1_13ea0, { 1, 0 }
  uselistorder label %dec_label_pc_13ec4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_13eb8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13ed4 = load i32, i32* @r4, align 4
  store i32 %v3_13ed4, i32* %stack_var_-24, align 4
  %v6_13ed4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_13edc = and i32 %arg2, 128
  %v2_13edc = icmp eq i32 %v1_13edc, 0
  %v0_13ee0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13ee0, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_13edc, label %dec_label_pc_13f30thread-pre-split, label %dec_label_pc_13ef4

dec_label_pc_13ef4:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13ef8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_13ef8, i32* %r0.global-to-local, align 4
  %v1_13efc = load i32, i32* %r4.global-to-local, align 4
  %v2_13efc = sub i32 %v1_13efc, %v3_13ef8
  store i32 %v2_13efc, i32* @r4, align 4
  store i32 %v3_13ef8, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_13efc, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_13f10

.thread:                                          ; preds = %dec_label_pc_13ef4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f2c

dec_label_pc_13f10:                               ; preds = %dec_label_pc_13ef4
  %v0_13f10 = load i32, i32* @r5, align 4
  %v1_13f10 = urem i32 %v0_13f10, 128
  %v0_13f14 = load i32, i32* @r8, align 4
  store i32 %v0_13f14, i32* %r0.global-to-local, align 4
  %v3_13f1c = trunc i32 %v1_13f10 to i8
  %v4_13f1c = call i32 @_charpad(i32 %v0_13f14, i8 %v3_13f1c, i32 %v2_13efc)
  store i32 %v4_13f1c, i32* %r0.global-to-local, align 4
  %v1_13f20 = load i32, i32* @r4, align 4
  %v9_13f20 = icmp eq i32 %v4_13f1c, %v1_13f20
  store i32 %v4_13f1c, i32* %r5.global-to-local, align 4
  br i1 %v9_13f20, label %dec_label_pc_13f10.dec_label_pc_13f2c_crit_edge, label %dec_label_pc_13f4c

dec_label_pc_13f10.dec_label_pc_13f2c_crit_edge:  ; preds = %dec_label_pc_13f10
  %v0_13f2c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13f2c

dec_label_pc_13f2c:                               ; preds = %.thread, %dec_label_pc_13f10.dec_label_pc_13f2c_crit_edge
  %v0_13f2c = phi i32 [ %v0_13f2c.pre, %dec_label_pc_13f10.dec_label_pc_13f2c_crit_edge ], [ %v3_13ef8, %.thread ]
  store i32 %v0_13f2c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f30

dec_label_pc_13f30thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f30thread-pre-split, %dec_label_pc_13f2c
  %v5_13f3c = phi i32 [ %arg3, %dec_label_pc_13f30thread-pre-split ], [ %v0_13f2c, %dec_label_pc_13f2c ]
  %tmp14 = icmp slt i32 %v5_13f3c, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_13f30
  br label %bb15

bb:                                               ; preds = %dec_label_pc_13f30
  %v5_13f38 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_13f38, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_15750.519 to i32))
  %v0_13f48 = load i32, i32* %r5.global-to-local, align 4
  %v2_13f48 = add i32 %storemerge, %v0_13f48
  store i32 %v2_13f48, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f10, %bb15
  %v0_13f4c = phi i32 [ %v4_13f1c, %dec_label_pc_13f10 ], [ %v2_13f48, %bb15 ]
  store i32 %v0_13f4c, i32* %r0.global-to-local, align 4
  %v2_13f50 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13f50, i32* %r4.global-to-local, align 4
  store i32 %v6_13ed4, i32* %r5.global-to-local, align 4
  ret i32 %v0_13f4c

; uselistorder directives
  uselistorder i32 %v0_13f4c, { 1, 0 }
  uselistorder i32 %v0_13f2c, { 1, 0 }
  uselistorder i32 %v2_13efc, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13f4c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13f2c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_2()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_2()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_13f58 = load i32, i32* @r5, align 4
  %v9_13f58 = load i32, i32* @r6, align 4
  %v12_13f58 = load i32, i32* @r7, align 4
  %v15_13f58 = load i32, i32* @r8, align 4
  %v18_13f58 = load i32, i32* @sb, align 4
  %v21_13f58 = load i32, i32* @sl, align 4
  %v24_13f58 = load i32, i32* @fp, align 4
  %v2_13f60 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_13f60, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_13f60, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13f70 = load i32, i32* @r2, align 4
  store i32 %v0_13f70, i32* @r5, align 4
  %v2_13f74 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_13f74, i32* %r0.global-to-local, align 4
  %v1_13f7c = icmp slt i32 %v2_13f74, 0
  br i1 %v1_13f7c, label %dec_label_pc_13f8c, label %dec_label_pc_13fc0

dec_label_pc_13f8c:                               ; preds = %entry
  %v3_13f8c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_13f8c, i32* @r4, align 4
  %v1_13f90 = inttoptr i32 %v3_13f8c to i8*
  store i32 %v3_13f8c, i32* %r0.global-to-local, align 4
  %v3_13f94 = call i32 @strlen(i8* %v1_13f90)
  store i32 %v3_13f94, i32* %r0.global-to-local, align 4
  %v2_13f98 = icmp eq i32 %v3_13f94, 0
  br i1 %v2_13f98, label %bb, label %dec_label_pc_13fa8

bb:                                               ; preds = %dec_label_pc_13f8c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14618

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f8c
  %v0_13fa8 = load i32, i32* @r4, align 4
  store i32 %v0_13fa8, i32* %r0.global-to-local, align 4
  %v0_13fac = load i32, i32* @fp, align 4
  store i32 %v0_13fac, i32* %r2.global-to-local, align 4
  %v3_13fb0 = inttoptr i32 %v0_13fac to i16*
  %v4_13fb0 = call i32 @__stdio_fwrite(i32 %v0_13fa8, i32 %v3_13f94, i16* %v3_13fb0)
  store i32 %v4_13fb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14618

dec_label_pc_13fc0:                               ; preds = %entry
  %v0_13fc0 = load i32, i32* @r5, align 4
  store i32 %v2_13f60, i32* %r0.global-to-local, align 4
  %v2_13fc8 = call i32 @_ppfs_prepargs(i32 %v2_13f60, i32 %v0_13fc0)
  store i32 %v2_13fc8, i32* %r0.global-to-local, align 4
  %v0_14010 = load i32, i32* @r4, align 4
  store i32 %v0_14010, i32* %r2.global-to-local, align 4
  %v1_14094 = bitcast i32* %stack_var_-352 to i8*
  %v4_140a4 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_140b0 = ptrtoint i32* %stack_var_-272 to i32
  %v2_140c8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_140e4 = icmp eq i32 %tmp104, 0
  %v2_14428 = ptrtoint i32* %stack_var_-200 to i32
  %v2_14468 = ptrtoint i32* %stack_var_-348 to i32
  %v2_1446c = ptrtoint i32* %stack_var_-72 to i32
  %v2_14318 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14324 = ptrtoint i32* %stack_var_-52 to i32
  %v7_14180 = zext i8 %tmp102 to i32
  %v2_141b8 = ptrtoint i32* %stack_var_-73 to i32
  %v1_141c0 = bitcast i32* %stack_var_-73 to i8*
  %v2_141c8 = icmp ugt i32 %tmp104, 4
  %v7_141c8 = icmp eq i32 %tmp104, 5
  %v7_140ac = ptrtoint i32* %stack_var_-280 to i32
  %v5_140dc195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_142ec = icmp ugt i32 %tmp104, 16
  %v7_142ec = icmp eq i32 %tmp104, 17
  %v2_142f0 = xor i1 %v7_142ec, true
  %v3_142f0 = and i1 %v2_142ec, %v2_142f0
  %v2_14374 = icmp ugt i32 %tmp104, 18
  %v7_14374 = icmp eq i32 %tmp104, 19
  %v2_14378 = xor i1 %v7_14374, true
  %v3_14378 = and i1 %v2_14374, %v2_14378
  %v7_14410 = icmp eq i32 %tmp104, 20
  %v1_14128 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37045)
  %v2_14128 = inttoptr i32 %v1_14128 to i8*
  %v2_14154 = xor i1 %v7_141c8, true
  %v3_14154 = and i1 %v2_141c8, %v2_14154
  %v7_14188 = icmp eq i32 %tmp104, 1
  %v2_141d0 = xor i1 %v2_141c8, true
  %v3_141d0 = or i1 %v7_141c8, %v2_141d0
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_14238 = icmp eq i32 %tmp104, 3
  %v11_14244 = icmp eq i32 %tmp104, 4
  %v9_140b4 = mul nuw nsw i32 %v4_140a4, 8
  %v10_140b4 = add i32 %v7_140ac, %v9_140b4
  br label %dec_label_pc_14014.outer

dec_label_pc_14014.outer:                         ; preds = %dec_label_pc_145fc, %dec_label_pc_13fc0
  %v0_1401445 = phi i32 [ %v3_145fc, %dec_label_pc_145fc ], [ %v0_14010, %dec_label_pc_13fc0 ]
  %v0_14148 = phi i32 [ %stack_var_-336.4, %dec_label_pc_145fc ], [ %tmp103, %dec_label_pc_13fc0 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_145fc ], [ 0, %dec_label_pc_13fc0 ]
  br label %dec_label_pc_14014.outer36

dec_label_pc_14014.outer36:                       ; preds = %dec_label_pc_14014.outer, %dec_label_pc_14608
  %v0_1401444 = phi i32 [ %v0_1401445, %dec_label_pc_14014.outer ], [ %v1_14608, %dec_label_pc_14608 ]
  %v5_14040 = phi i32 [ %v0_1401445, %dec_label_pc_14014.outer ], [ %v1_14070, %dec_label_pc_14608 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_14014.outer ], [ %v1_144e8, %dec_label_pc_14608 ]
  %v1_14014188 = inttoptr i32 %v0_1401444 to i8*
  %v2_14014189 = load i8, i8* %v1_14014188, align 1
  %v2_14018191 = icmp eq i8 %v2_14014189, 0
  br i1 %v2_14018191, label %dec_label_pc_14030, label %bb138

bb138:                                            ; preds = %dec_label_pc_14014.outer36, %.thread6
  %v2_14014193 = phi i8 [ %v2_14014, %.thread6 ], [ %v2_14014189, %dec_label_pc_14014.outer36 ]
  %v1_14028192 = phi i32 [ %v2_14028, %.thread6 ], [ %v0_1401444, %dec_label_pc_14014.outer36 ]
  %v8_1401c = icmp eq i8 %v2_14014193, 37
  br i1 %v8_1401c, label %dec_label_pc_14030, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14028 = add i32 %v1_14028192, 1
  store i32 %v2_14028, i32* @r4, align 4
  %v1_14014 = inttoptr i32 %v2_14028 to i8*
  %v2_14014 = load i8, i8* %v1_14014, align 1
  %v2_14018 = icmp eq i8 %v2_14014, 0
  br i1 %v2_14018, label %dec_label_pc_14030, label %bb138

dec_label_pc_14030:                               ; preds = %bb138, %.thread6, %dec_label_pc_14014.outer36
  %v1_14028.lcssa = phi i32 [ %v0_1401444, %dec_label_pc_14014.outer36 ], [ %v2_14028, %.thread6 ], [ %v1_14028192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14030 = sub i32 %v1_14028.lcssa, %v5_14040
  %v9_14030 = icmp eq i32 %v1_14028.lcssa, %v5_14040
  br i1 %v9_14030, label %dec_label_pc_14064, label %dec_label_pc_14038

dec_label_pc_14038:                               ; preds = %dec_label_pc_14030
  store i32 %v2_14030, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_14030, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_14038
  store i32 %v5_14040, i32* %r0.global-to-local, align 4
  %v5_14048 = load i32, i32* @fp, align 4
  store i32 %v5_14048, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_14038, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_14038 ]
  store i32 82000, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_15750.519 to i32))
  %v0_14050 = load i32, i32* %r0.global-to-local, align 4
  %v1_14050 = load i32, i32* @r5, align 4
  %v9_14050 = icmp eq i32 %v0_14050, %v1_14050
  br i1 %v9_14050, label %dec_label_pc_14058, label %dec_label_pc_14610

dec_label_pc_14058:                               ; preds = %bb142
  %v2_1405c = add i32 %v0_14050, %stack_var_-356.1.ph37
  %v0_14064.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %dec_label_pc_14030, %dec_label_pc_14058
  %v0_14078 = phi i32 [ %v5_14040, %dec_label_pc_14030 ], [ %v0_14064.pre, %dec_label_pc_14058 ]
  %v1_144e8 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_14030 ], [ %v2_1405c, %dec_label_pc_14058 ]
  %v1_14064 = inttoptr i32 %v0_14078 to i8*
  %v2_14064 = load i8, i8* %v1_14064, align 1
  %v2_14068 = icmp eq i8 %v2_14064, 0
  br i1 %v2_14068, label %dec_label_pc_14618, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14064
  %v1_14070 = add i32 %v0_14078, 1
  %v2_14070 = inttoptr i32 %v1_14070 to i8*
  %v3_14070 = load i8, i8* %v2_14070, align 1
  %v7_14074 = icmp eq i8 %v3_14070, 37
  store i32 %v1_14070, i32* %r2.global-to-local, align 4
  br i1 %v7_14074, label %dec_label_pc_14608, label %dec_label_pc_14080

dec_label_pc_14080:                               ; preds = %dec_label_pc_14070
  store i32 %v2_13f60, i32* @r4, align 4
  store i32 %v2_13f60, i32* %r0.global-to-local, align 4
  store i32 %v1_14070, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_14094 = call i32 @_ppfs_parsespec(i8* %v1_14094)
  store i32 %v2_13f60, i32* @r0, align 4
  %v0_1409c = call i32 @_ppfs_setargs()
  store i32 %v0_1409c, i32* %r0.global-to-local, align 4
  store i32 %v4_140a4, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_14080
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_14080, %bb145
  %storemerge = phi i32 [ %v10_140b4, %bb145 ], [ %v7_140b0, %dec_label_pc_14080 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_140dc195, label %dec_label_pc_140c0, label %dec_label_pc_140e0

dec_label_pc_140c0:                               ; preds = %bb146, %dec_label_pc_140c0
  %v5_140cc197 = phi i32 [ %v5_140cc, %dec_label_pc_140c0 ], [ %v2_140c8, %bb146 ]
  %v0_140c0196 = phi i32 [ %v1_140c4, %dec_label_pc_140c0 ], [ %storemerge, %bb146 ]
  %v2_140c0 = add i32 %v5_140cc197, -32
  %v3_140c0 = inttoptr i32 %v2_140c0 to i32*
  store i32 %v0_140c0196, i32* %v3_140c0, align 4
  %v0_140c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_140c4 = add i32 %v0_140c4, 8
  store i32 %v1_140c4, i32* %r0.global-to-local, align 4
  %v1_140cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_140cc = mul i32 %v1_140cc.pre, 4
  %v5_140cc = add i32 %v4_140cc, %v2_140c8
  %v1_140d8 = add i32 %v1_140cc.pre, 1
  store i32 %v1_140d8, i32* %r2.global-to-local, align 4
  %v5_140dc = icmp slt i32 %v1_140cc.pre, %tmp105
  br i1 %v5_140dc, label %dec_label_pc_140c0, label %dec_label_pc_140e0

dec_label_pc_140e0:                               ; preds = %dec_label_pc_140c0, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_140e4, label %dec_label_pc_140ec, label %dec_label_pc_14110

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140e0
  %v3_140ec = load i32, i32* %stack_var_-72, align 4
  %v1_140f8 = inttoptr i32 %v3_140ec to i32*
  %v2_140f8 = load i32, i32* %v1_140f8, align 4
  store i32 %v2_140f8, i32* %r0.global-to-local, align 4
  %v1_140fc = and i32 %v0_14148, 3840
  store i32 %v1_144e8, i32* %r2.global-to-local, align 4
  %v3_14104 = ashr i32 %v1_144e8, 31
  %v4_14108 = inttoptr i32 %v2_140f8 to i16*
  %v5_14108 = call i32 @_store_inttype(i16* %v4_14108, i32 %v1_140fc, i32 %v1_144e8, i32 %v3_14104)
  store i32 %v5_14108, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145fc

dec_label_pc_14110:                               ; preds = %dec_label_pc_140e0
  br i1 %tmp207, label %dec_label_pc_142ac, label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_14110
  %v3_14128 = load i8, i8* %v2_14128, align 1
  %v4_14128 = zext i8 %v3_14128 to i32
  %v7_1412c = icmp eq i8 %v3_14128, 10
  br i1 %v7_1412c, label %dec_label_pc_14138, label %bb147

bb147:                                            ; preds = %dec_label_pc_14118
  br label %bb151

dec_label_pc_14138:                               ; preds = %dec_label_pc_14118
  %v1_14148 = and i32 %v0_14148, 64
  %v2_14148 = icmp eq i32 %v1_14148, 0
  br i1 %v2_14148, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_14138
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_14138, %bb150
  br i1 %v3_14154, label %.thread, label %dec_label_pc_1415c

.thread:                                          ; preds = %bb151
  %v5_14154 = sub nsw i32 0, %v4_14128
  br label %dec_label_pc_14174

dec_label_pc_1415c:                               ; preds = %bb151
  br i1 %v7_14238, label %bb152, label %dec_label_pc_14168

bb152:                                            ; preds = %dec_label_pc_1415c
  br label %dec_label_pc_14174

dec_label_pc_14168:                               ; preds = %dec_label_pc_1415c
  br i1 %v7_14188, label %dec_label_pc_14178, label %dec_label_pc_14174

dec_label_pc_14174:                               ; preds = %.thread, %bb152, %dec_label_pc_14168
  %v0_141a081 = phi i32 [ %v5_14154, %.thread ], [ %v4_14128, %bb152 ], [ %v4_14128, %dec_label_pc_14168 ]
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14168, %dec_label_pc_14174
  %v0_141a080 = phi i32 [ %v0_141a081, %dec_label_pc_14174 ], [ %v4_14128, %dec_label_pc_14168 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_14174 ], [ 6, %dec_label_pc_14168 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_14178 = load i32, i32* %stack_var_-348, align 4
  %v1_1417c = icmp slt i32 %v3_14178, 0
  %v7_14180. = select i1 %v1_1417c, i32 %v7_14180, i32 32
  store i32 %v7_14180., i32* @sb, align 4
  br i1 %v7_14188, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_14178
  store i32 %v2_140c8, i32* %r2.global-to-local, align 4
  %v2_14190 = load i32, i32* @ip, align 4
  %v5_14190 = mul i32 %v2_14190, 4
  %v6_14190 = add i32 %v5_14190, %v2_140c8
  %v2_14194 = add i32 %v6_14190, -276
  %v3_14194 = inttoptr i32 %v2_14194 to i32*
  %v4_14194 = load i32, i32* %v3_14194, align 4
  %v2_1419c = and i32 %v4_14194, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_14178, %.thread15
  %storemerge93 = phi i32 [ %v2_1419c, %.thread15 ], [ 1024, %dec_label_pc_14178 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_141a080, i32* @r2, align 4
  %v3_141a4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_141a4, i32* @r1, align 4
  %v0_141a8 = call i32 @_load_inttype()
  store i32 %v0_141a8, i32* @r2, align 4
  %v0_141b4 = load i32, i32* @r1, align 4
  store i32 %v0_141b4, i32* @r3, align 4
  store i32 %v2_141b8, i32* %r0.global-to-local, align 4
  %v2_141c0 = call i32 @_uintmaxtostr(i8* %v1_141c0)
  store i32 %v2_141c0, i32* %r0.global-to-local, align 4
  store i32 %v2_141c0, i32* @r4, align 4
  br i1 %v3_141d0, label %bb160, label %dec_label_pc_141d4

dec_label_pc_141d4:                               ; preds = %bb157
  %v3_141c0 = inttoptr i32 %v2_141c0 to i8*
  %v3_141d4 = load i8, i8* %v3_141c0, align 1
  %v7_141d8 = icmp eq i8 %v3_141d4, 45
  %v2_141e0 = or i32 %v0_14148, 2
  %v2_141e0.stack_var_-336.0 = select i1 %v7_141d8, i32 %v2_141e0, i32 %v0_14148
  br i1 %v7_141d8, label %.thread17, label %dec_label_pc_141f4

.thread17:                                        ; preds = %dec_label_pc_141d4
  %v3_141e4 = add i32 %v2_141c0, 1
  store i32 %v3_141e4, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141d4
  %v1_141f4 = and i32 %v2_141e0.stack_var_-336.0, 2
  %v2_141f4 = icmp eq i32 %v1_141f4, 0
  br i1 %v2_141f4, label %dec_label_pc_14200, label %bb158

bb158:                                            ; preds = %dec_label_pc_141f4
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_14200:                               ; preds = %dec_label_pc_141f4
  %v1_14200 = urem i32 %v2_141e0.stack_var_-336.0, 2
  %v2_14200 = icmp eq i32 %v1_14200, 0
  br i1 %v2_14200, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_14200
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_14200, %bb159
  %v0_1425c = phi i32 [ %v2_141c0, %bb157 ], [ %v3_141e4, %.thread17 ], [ %v2_141c0, %dec_label_pc_14200 ], [ %v2_141c0, %bb159 ], [ %v2_141c0, %bb158 ]
  %v0_14218 = phi i32 [ %v0_14148, %bb157 ], [ %v2_141e0, %.thread17 ], [ %v0_14148, %dec_label_pc_14200 ], [ %v0_14148, %bb159 ], [ %v0_14148, %bb158 ]
  %v3_14208 = load i32, i32* %stack_var_-348, align 4
  %v1_14210 = icmp slt i32 %v3_14208, 0
  br i1 %v1_14210, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_14208, %bb160 ]
  %v0_14240 = phi i32 [ 1, %bb161 ], [ %v3_14208, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_14218 = and i32 %v0_14218, 16
  %v2_14218 = icmp eq i32 %v1_14218, 0
  %v2_14224 = sub i32 %v2_141b8, %v0_1425c
  store i32 %v2_14224, i32* @r5, align 4
  br i1 %v2_14218, label %bb169, label %dec_label_pc_1422c

dec_label_pc_1422c:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_1422c
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_1422c, %bb163
  br i1 %v7_14238, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_14240, %v2_14224
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_14244, label %dec_label_pc_1424c, label %bb169

dec_label_pc_1424c:                               ; preds = %bb167
  %v1_1424c = inttoptr i32 %v0_1425c to i8*
  %v2_1424c = load i8, i8* %v1_1424c, align 1
  %v7_14250 = icmp eq i8 %v2_1424c, 48
  br i1 %v7_14250, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_1424c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_1424c
  %v2_14258 = add i32 %v2_14224, 1
  store i32 %v2_14258, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_1429c = phi i32 [ %v0_14240, %bb167 ], [ %v0_14240, %bb162 ], [ 1, %bb168 ], [ %v2_14258, %.thread24 ], [ %v0_14240, %bb166 ]
  %v1_1425c = inttoptr i32 %v0_1425c to i8*
  %v2_1425c = load i8, i8* %v1_1425c, align 1
  %v7_14260 = icmp eq i8 %v2_1425c, 48
  br i1 %v7_14260, label %dec_label_pc_14268, label %dec_label_pc_14298

dec_label_pc_14268:                               ; preds = %bb169
  %v0_1426c = load i32, i32* @r6, align 4
  %v7_14270 = icmp slt i32 %v0_1426c, 6
  br i1 %v7_14270, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_14268
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_14268, %bb170
  br i1 %v7_14188, label %.thread27, label %dec_label_pc_1428c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37072), i32* @r4, align 4
  br label %dec_label_pc_142a4

dec_label_pc_1428c:                               ; preds = %bb171
  %v2_1428c = icmp eq i32 %v5_1429c, 0
  br i1 %v2_1428c, label %bb172, label %dec_label_pc_14298

bb172:                                            ; preds = %dec_label_pc_1428c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_142a4

dec_label_pc_14298:                               ; preds = %dec_label_pc_1428c, %bb169
  %v2_14298 = sub i32 %v5_1429c, %v2_14224
  %tmp211 = icmp ugt i32 %v5_1429c, %v2_14224
  br i1 %tmp211, label %.thread85, label %dec_label_pc_142a4

.thread85:                                        ; preds = %dec_label_pc_14298
  store i32 %v2_14298, i32* @r8, align 4
  br label %dec_label_pc_144b8thread-pre-split

dec_label_pc_142a4:                               ; preds = %dec_label_pc_14298, %.thread27, %bb172
  %v1_144bc.pre205 = phi i32 [ %v2_14224, %dec_label_pc_14298 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_144b8thread-pre-split

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14110
  br i1 %tmp208, label %dec_label_pc_142ec, label %dec_label_pc_142b4

dec_label_pc_142b4:                               ; preds = %dec_label_pc_142ac
  %v3_142c4 = load i32, i32* %stack_var_-72, align 4
  %v0_142c8 = load i32, i32* @fp, align 4
  store i32 %v0_142c8, i32* %r0.global-to-local, align 4
  %v1_142cc = inttoptr i32 %v3_142c4 to i32*
  %v2_142cc = load i32, i32* %v1_142cc, align 4
  store i32 %v2_142cc, i32* %r2.global-to-local, align 4
  %v3_142cc = add i32 %v3_142c4, 4
  %v4_142cc = inttoptr i32 %v3_142cc to i32*
  %v5_142cc = load i32, i32* %v4_142cc, align 4
  %v8_142d0 = call i32 @_fpmaxtostr(i32 %v0_142c8, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -58324) to i64) to double), i32 %v2_142cc, i32 %v5_142cc, i32 %v2_14468, i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -58324))
  store i32 %v8_142d0, i32* %r0.global-to-local, align 4
  %v1_142d4 = icmp slt i32 %v8_142d0, 0
  br i1 %v1_142d4, label %dec_label_pc_14610, label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142b4
  %v2_142e0 = add i32 %v8_142d0, %v1_144e8
  store i32 %v2_142e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_145fc

dec_label_pc_142ec:                               ; preds = %dec_label_pc_142ac
  br i1 %v3_142f0, label %dec_label_pc_14374, label %dec_label_pc_142f4

dec_label_pc_142f4:                               ; preds = %dec_label_pc_142ec
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_142fc = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_142fc, i32* %r0.global-to-local, align 4
  br i1 %v7_142ec, label %dec_label_pc_14304, label %dec_label_pc_1433c

dec_label_pc_14304:                               ; preds = %dec_label_pc_142f4
  %v1_14304 = inttoptr i32 %v3_142fc to i32*
  %v2_14304 = load i32, i32* %v1_14304, align 4
  %v9_14308 = icmp eq i32 %v2_14304, 0
  store i32 %v2_14304, i32* %stack_var_-44, align 4
  br i1 %v9_14308, label %dec_label_pc_143b4, label %dec_label_pc_14314

dec_label_pc_14314:                               ; preds = %dec_label_pc_14304
  %v3_14314 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_14318, i32* @r0, align 4
  %v4_1431c = ashr i32 %v3_14314, 31
  %v5_1431c = or i32 %v4_1431c, %v3_14314
  store i32 %v5_1431c, i32* %r2.global-to-local, align 4
  store i32 %v2_14318, i32* @r1, align 4
  %v6_14328 = call i32 @__GI_wcsrtombs(i32 %v2_14318, i32 %v2_14318, i32 %v5_1431c, i32 %v2_14324, i32 0, i32 %v2_14304)
  store i32 %v6_14328, i32* %r0.global-to-local, align 4
  %v3_1432c = icmp eq i32 %v6_14328, -1
  store i32 %v6_14328, i32* @r5, align 4
  br i1 %v3_1432c, label %dec_label_pc_14610, label %dec_label_pc_144a8

dec_label_pc_1433c:                               ; preds = %dec_label_pc_142f4
  store i32 %v2_14428, i32* %r7.global-to-local, align 4
  %v1_14340 = inttoptr i32 %v3_142fc to i32*
  %v2_14340 = load i32, i32* %v1_14340, align 4
  store i32 %v2_14324, i32* %r2.global-to-local, align 4
  store i32 %v2_14428, i32* %r0.global-to-local, align 4
  %v5_1434c = call i32 @__GI_wcrtomb(i32 %v2_14428, i32 %v2_14340, i32 %v2_14324, i32 %tmp105, i32 0)
  store i32 %v5_1434c, i32* %r0.global-to-local, align 4
  %v7_14350 = icmp eq i32 %v5_1434c, -1
  store i32 %v5_1434c, i32* @r5, align 4
  br i1 %v7_14350, label %dec_label_pc_14610, label %dec_label_pc_1435c

dec_label_pc_1435c:                               ; preds = %dec_label_pc_1433c
  %v0_1435c = load i32, i32* @sl, align 4
  store i32 %v0_1435c, i32* @r8, align 4
  store i32 %v2_14428, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_1436c = trunc i32 %v0_1435c to i8
  %v2_1436c = load i32, i32* %r7.global-to-local, align 4
  %v4_1436c = add i32 %v2_1436c, %v5_1434c
  %v5_1436c = inttoptr i32 %v4_1436c to i8*
  store i8 %v1_1436c, i8* %v5_1436c, align 1
  %v0_144bc.pre.pre = load i32, i32* @r8, align 4
  %v1_144bc.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_144b8thread-pre-split

dec_label_pc_14374:                               ; preds = %dec_label_pc_142ec
  br i1 %v3_14378, label %dec_label_pc_14410, label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %dec_label_pc_14374
  %v3_1437c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1437c, i32* %r0.global-to-local, align 4
  %v1_14384 = inttoptr i32 %v3_1437c to i32*
  %v2_14384 = load i32, i32* %v1_14384, align 4
  br i1 %v7_14374, label %dec_label_pc_14384, label %dec_label_pc_143e8

dec_label_pc_14384:                               ; preds = %dec_label_pc_1437c
  store i32 %v2_14384, i32* @r4, align 4
  %v2_14388 = icmp eq i32 %v2_14384, 0
  br i1 %v2_14388, label %dec_label_pc_143b4, label %dec_label_pc_14390

dec_label_pc_14390:                               ; preds = %dec_label_pc_14384, %dec_label_pc_14418
  %v0_14394 = phi i32 [ %v2_14384, %dec_label_pc_14384 ], [ %v4_14430, %dec_label_pc_14418 ]
  %v3_14390 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_14394, i32* %r0.global-to-local, align 4
  %v4_14398 = ashr i32 %v3_14390, 31
  %v5_14398 = or i32 %v4_14398, %v3_14390
  %v2_1439c = inttoptr i32 %v0_14394 to i8*
  %v3_1439c = call i32 @strnlen(i8* %v2_1439c, i32 %v5_14398)
  store i32 %v3_1439c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_1439c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_144b8

dec_label_pc_143b4:                               ; preds = %dec_label_pc_14384, %dec_label_pc_14304
  %v3_143b4 = load i32, i32* %stack_var_-348, align 4
  %v1_143b8 = icmp slt i32 %v3_143b4, 0
  br i1 %v1_143b8, label %dec_label_pc_143d0, label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143b4
  %tmp212 = icmp ult i32 %v3_143b4, 6
  br i1 %tmp212, label %dec_label_pc_143d8, label %dec_label_pc_143d0

dec_label_pc_143d0:                               ; preds = %dec_label_pc_143c0, %dec_label_pc_143b4
  br label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143c0, %dec_label_pc_143d0
  %storemerge97 = phi i32 [ 6, %dec_label_pc_143d0 ], [ 0, %dec_label_pc_143c0 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37064), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_144b8

dec_label_pc_143e8:                               ; preds = %dec_label_pc_1437c
  store i32 %v2_14384, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_14428, i32* @r4, align 4
  store i32 %v2_14384, i32* %stack_var_-200, align 4
  br label %dec_label_pc_144b8thread-pre-split

dec_label_pc_14410:                               ; preds = %dec_label_pc_14374
  br i1 %v7_14410, label %dec_label_pc_14418, label %dec_label_pc_1443c

dec_label_pc_14418:                               ; preds = %dec_label_pc_14410
  %v0_1441c = call i32 @__aeabi_read_tp()
  store i32 %v0_1441c, i32* %r0.global-to-local, align 4
  %v3_14420 = load i16, i16* @global_var_22308.76, align 2
  %v4_14420 = sext i16 %v3_14420 to i32
  %v2_14424 = add i32 %v4_14420, %v0_1441c
  %v3_14424 = inttoptr i32 %v2_14424 to i32*
  %v4_14424 = load i32, i32* %v3_14424, align 4
  store i32 %v4_14424, i32* @r0, align 4
  %v0_1442c = load i32, i32* %r2.global-to-local, align 4
  %v1_1442c = add i32 %v0_1442c, 108
  store i32 %v1_1442c, i32* @r2, align 4
  %v4_14430 = call i32 @__GI___glibc_strerror_r(i32 %v4_14424, i32 %v2_14428, i32 %v1_1442c, i32 %v4_14420)
  store i32 %v4_14430, i32* %r0.global-to-local, align 4
  store i32 %v4_14430, i32* @r4, align 4
  br label %dec_label_pc_14390

dec_label_pc_1443c:                               ; preds = %dec_label_pc_14410
  %v4_14444 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 704) to i32*), align 4
  %v1_1444c = add i32 %v4_14444, 10
  store i32 %v1_1444c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14450

dec_label_pc_14450:                               ; preds = %dec_label_pc_14498, %dec_label_pc_1443c
  %v1_14460 = phi i32 [ %v1_14498, %dec_label_pc_14498 ], [ %v4_14444, %dec_label_pc_1443c ]
  %v1_14450 = inttoptr i32 %v1_14460 to i8*
  %v2_14450 = load i8, i8* %v1_14450, align 1
  %v3_14450 = zext i8 %v2_14450 to i32
  store i32 %v3_14450, i32* %r2.global-to-local, align 4
  %v9_14458 = icmp eq i32 %v3_14450, %tmp99
  br i1 %v9_14458, label %dec_label_pc_14460, label %dec_label_pc_14498

dec_label_pc_14460:                               ; preds = %dec_label_pc_14450
  %v2_14460 = sub i32 %v1_14460, %v4_14444
  %v0_14464 = load i32, i32* @fp, align 4
  store i32 %v0_14464, i32* %r0.global-to-local, align 4
  store i32 %v2_1446c, i32* %r2.global-to-local, align 4
  %v4_14474 = mul i32 %v2_14460, 4
  %v5_14474 = add i32 %v4_14474, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 13256)
  %v6_14474 = inttoptr i32 %v5_14474 to i32*
  %v7_14474 = load i32, i32* %v6_14474, align 4
  store i32 83072, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14474)
  %v0_14480 = load i32, i32* %r0.global-to-local, align 4
  %v1_14480 = icmp slt i32 %v0_14480, 0
  br i1 %v1_14480, label %dec_label_pc_14610, label %dec_label_pc_14488

dec_label_pc_14488:                               ; preds = %dec_label_pc_14460
  %v2_1448c = add i32 %v0_14480, %v1_144e8
  br label %dec_label_pc_145fc

dec_label_pc_14498:                               ; preds = %dec_label_pc_14450
  %v1_14498 = add i32 %v1_14460, 1
  %v3_1449c = icmp ult i32 %v1_14498, %v1_1444c
  br i1 %v3_1449c, label %dec_label_pc_14450, label %dec_label_pc_14610

dec_label_pc_144a8:                               ; preds = %dec_label_pc_14314
  %v0_144a8 = load i32, i32* @sl, align 4
  store i32 %v0_144a8, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_144a8, i32* @r4, align 4
  br label %dec_label_pc_144b8

dec_label_pc_144b8thread-pre-split:               ; preds = %.thread85, %dec_label_pc_142a4, %dec_label_pc_1435c, %dec_label_pc_143e8
  %v1_144bc.pre = phi i32 [ %v1_144bc.pre205, %dec_label_pc_142a4 ], [ %v1_144bc.pre.pre, %dec_label_pc_1435c ], [ 1, %dec_label_pc_143e8 ], [ %v2_14224, %.thread85 ]
  %v0_144bc.pre = phi i32 [ 0, %dec_label_pc_142a4 ], [ %v0_144bc.pre.pre, %dec_label_pc_1435c ], [ 0, %dec_label_pc_143e8 ], [ %v2_14298, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_14218, %dec_label_pc_142a4 ], [ %v0_14148, %dec_label_pc_1435c ], [ %v0_14148, %dec_label_pc_143e8 ], [ %v0_14218, %.thread85 ]
  %v0_144b8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_144b8

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144b8thread-pre-split, %dec_label_pc_143d8, %dec_label_pc_14390, %dec_label_pc_144a8
  %v1_144bc = phi i32 [ %v1_144bc.pre, %dec_label_pc_144b8thread-pre-split ], [ %storemerge97, %dec_label_pc_143d8 ], [ %v3_1439c, %dec_label_pc_14390 ], [ %v6_14328, %dec_label_pc_144a8 ]
  %v0_144bc = phi i32 [ %v0_144bc.pre, %dec_label_pc_144b8thread-pre-split ], [ 0, %dec_label_pc_143d8 ], [ 0, %dec_label_pc_14390 ], [ %v0_144a8, %dec_label_pc_144a8 ]
  %v0_144c4 = phi i32 [ %v0_144b8.pr, %dec_label_pc_144b8thread-pre-split ], [ 11, %dec_label_pc_143d8 ], [ 11, %dec_label_pc_14390 ], [ 11, %dec_label_pc_144a8 ]
  %v0_14504 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_144b8thread-pre-split ], [ %v0_14148, %dec_label_pc_143d8 ], [ %v0_14148, %dec_label_pc_14390 ], [ %v0_14148, %dec_label_pc_144a8 ]
  %v7_144b8 = icmp eq i32 %v0_144c4, 11
  %v2_144bc = add i32 %v1_144bc, %v0_144bc
  br i1 %v7_144b8, label %dec_label_pc_144d4, label %bb173

bb173:                                            ; preds = %dec_label_pc_144b8
  %v7_144cc = icmp sgt i32 %v0_144c4, 5
  %. = select i1 %v7_144cc, i32 2, i32 1
  %v2_144d0 = add i32 %v2_144bc, %.
  br label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_144b8, %bb173
  %v0_144e8 = phi i32 [ %v2_144bc, %dec_label_pc_144b8 ], [ %v2_144d0, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_144d8 = icmp uge i32 %tmp98, %v0_144e8
  %v9_144d8 = icmp eq i32 %tmp98, %v0_144e8
  %v2_144dc = xor i1 %v9_144d8, true
  %v3_144dc = and i1 %v3_144d8, %v2_144dc
  br i1 %v3_144dc, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_144d4
  %v2_144d8 = sub i32 %tmp98, %v0_144e8
  store i32 %v2_144d8, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_144d4, %bb174
  store i32 %v1_144e8, i32* %r2.global-to-local, align 4
  %v2_144e4 = xor i1 %v3_144d8, true
  %v3_144e4 = or i1 %v9_144d8, %v2_144e4
  br i1 %v3_144e4, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_144ec.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_144fc = phi i32 [ %v1_144ec.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_144e8 = add i32 %v0_144e8, %v1_144e8
  %v2_144ec = add i32 %v2_144e8, %v2_144fc
  %v0_144f8 = load i32, i32* @sb, align 4
  %v7_144f8 = icmp eq i32 %v0_144f8, 48
  br i1 %v7_144f8, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_144fc = add i32 %v2_144fc, %v0_144bc
  store i32 %v3_144fc, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_14514 = phi i32 [ %v2_144fc, %bb177 ], [ 0, %bb178 ]
  %v1_14504 = and i32 %v0_14504, 8
  store i32 %v1_14504, i32* @r7, align 4
  %v2_14504 = icmp eq i32 %v1_14504, 0
  br i1 %v2_14504, label %dec_label_pc_1450c, label %dec_label_pc_14528

dec_label_pc_1450c:                               ; preds = %.thread30
  %v0_1450c = load i32, i32* @fp, align 4
  store i32 %v0_1450c, i32* %r0.global-to-local, align 4
  store i32 %v0_14514, i32* %r2.global-to-local, align 4
  %v4_14518 = call i32 @_charpad(i32 %v0_1450c, i8 32, i32 %v0_14514)
  store i32 %v4_14518, i32* %r0.global-to-local, align 4
  %v1_1451c = load i32, i32* @sl, align 4
  %v9_1451c = icmp eq i32 %v4_14518, %v1_1451c
  br i1 %v9_1451c, label %dec_label_pc_14524, label %dec_label_pc_14610

dec_label_pc_14524:                               ; preds = %dec_label_pc_1450c
  %v0_14524 = load i32, i32* @r7, align 4
  store i32 %v0_14524, i32* @sl, align 4
  %v0_14530.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14528

dec_label_pc_14528:                               ; preds = %.thread30, %dec_label_pc_14524
  %v0_14530 = phi i32 [ %v0_144c4, %.thread30 ], [ %v0_14530.pre, %dec_label_pc_14524 ]
  %v0_1452c = load i32, i32* @fp, align 4
  %v2_14530 = add i32 %v0_14530, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -37056)
  store i32 %v2_14530, i32* %r0.global-to-local, align 4
  %v2_14534 = inttoptr i32 %v2_14530 to i8*
  %v3_14534 = call i32 @__GI_fputs_unlocked(i8* %v2_14534, i32 %v0_1452c)
  %v0_14538 = load i32, i32* @fp, align 4
  store i32 %v0_14538, i32* %r0.global-to-local, align 4
  %v0_14540 = load i32, i32* @r8, align 4
  store i32 %v0_14540, i32* %r2.global-to-local, align 4
  %v4_14544 = call i32 @_charpad(i32 %v0_14538, i8 48, i32 %v0_14540)
  store i32 %v4_14544, i32* %r0.global-to-local, align 4
  %v1_14548 = load i32, i32* @r8, align 4
  %v9_14548 = icmp eq i32 %v4_14544, %v1_14548
  br i1 %v9_14548, label %dec_label_pc_14550, label %dec_label_pc_14610

dec_label_pc_14550:                               ; preds = %dec_label_pc_14528
  %v3_14550 = load i32, i32* %stack_var_-44, align 4
  %v2_14554 = icmp eq i32 %v3_14550, 0
  br i1 %v2_14554, label %dec_label_pc_1455c, label %dec_label_pc_14580

dec_label_pc_1455c:                               ; preds = %dec_label_pc_14550
  %v0_1455c = load i32, i32* @r5, align 4
  %v2_1455c = icmp eq i32 %v0_1455c, 0
  br i1 %v2_1455c, label %dec_label_pc_145e4, label %dec_label_pc_14564

dec_label_pc_14564:                               ; preds = %dec_label_pc_1455c
  %v0_14564 = load i32, i32* @r4, align 4
  store i32 %v0_14564, i32* %r0.global-to-local, align 4
  %v0_1456c = load i32, i32* @fp, align 4
  store i32 %v0_1456c, i32* %r2.global-to-local, align 4
  %v3_14570 = inttoptr i32 %v0_1456c to i16*
  %v4_14570 = call i32 @__stdio_fwrite(i32 %v0_14564, i32 %v0_1455c, i16* %v3_14570)
  store i32 %v4_14570, i32* %r0.global-to-local, align 4
  %v1_14574 = load i32, i32* @r5, align 4
  %v9_14574 = icmp eq i32 %v4_14570, %v1_14574
  br i1 %v9_14574, label %dec_label_pc_145e4, label %dec_label_pc_14610

dec_label_pc_14580:                               ; preds = %dec_label_pc_14550
  store i32 %v2_14428, i32* @r6, align 4
  store i32 %v2_14318, i32* @r8, align 4
  store i32 %v2_14324, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_145d0.pr = load i32, i32* @r5, align 4
  %v2_145d041 = icmp eq i32 %v0_145d0.pr, 0
  store i32 %v2_14318, i32* @r1, align 4
  store i32 %v2_14428, i32* @r0, align 4
  br i1 %v2_145d041, label %dec_label_pc_145e4, label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %dec_label_pc_14580, %dec_label_pc_145cc
  %v1_1459c = phi i32 [ %v2_145cc, %dec_label_pc_145cc ], [ %v0_145d0.pr, %dec_label_pc_14580 ]
  %v2_14598 = icmp ult i32 %v1_1459c, 128
  %.v1_1459c = select i1 %v2_14598, i32 %v1_1459c, i32 128
  store i32 %.v1_1459c, i32* %r2.global-to-local, align 4
  %v6_145a4 = call i32 @__GI_wcsrtombs(i32 %v2_14428, i32 %v2_14318, i32 %.v1_1459c, i32 %v2_14324, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_145a4, i32* @r4, align 4
  %v2_145a8 = icmp eq i32 %v6_145a4, 0
  store i32 %v6_145a4, i32* %r0.global-to-local, align 4
  br i1 %v2_145a8, label %dec_label_pc_145cc, label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %dec_label_pc_14598
  store i32 %v2_14428, i32* %r0.global-to-local, align 4
  %v0_145bc = load i32, i32* @fp, align 4
  store i32 %v0_145bc, i32* %r2.global-to-local, align 4
  %v3_145c0 = inttoptr i32 %v0_145bc to i16*
  %v4_145c0 = call i32 @__stdio_fwrite(i32 %v2_14428, i32 %v6_145a4, i16* %v3_145c0)
  store i32 %v4_145c0, i32* %r0.global-to-local, align 4
  %v1_145c4 = load i32, i32* @r4, align 4
  %v9_145c4 = icmp eq i32 %v4_145c0, %v1_145c4
  br i1 %v9_145c4, label %dec_label_pc_145cc, label %dec_label_pc_14610

dec_label_pc_145cc:                               ; preds = %dec_label_pc_145b4, %dec_label_pc_14598
  %v0_145cc = phi i32 [ %v4_145c0, %dec_label_pc_145b4 ], [ 0, %dec_label_pc_14598 ]
  %v1_145cc = load i32, i32* @r5, align 4
  %v2_145cc = sub i32 %v1_145cc, %v0_145cc
  store i32 %v2_145cc, i32* @r5, align 4
  %v2_145d0 = icmp eq i32 %v2_145cc, 0
  store i32 %v2_14318, i32* @r1, align 4
  store i32 %v2_14428, i32* @r0, align 4
  br i1 %v2_145d0, label %dec_label_pc_145e4, label %dec_label_pc_14598

dec_label_pc_145e4:                               ; preds = %dec_label_pc_145cc, %dec_label_pc_14580, %dec_label_pc_14564, %dec_label_pc_1455c
  %v0_145e4 = load i32, i32* @fp, align 4
  store i32 %v0_145e4, i32* %r0.global-to-local, align 4
  %v0_145ec = load i32, i32* @sl, align 4
  store i32 %v0_145ec, i32* %r2.global-to-local, align 4
  %v4_145f0 = call i32 @_charpad(i32 %v0_145e4, i8 32, i32 %v0_145ec)
  store i32 %v4_145f0, i32* %r0.global-to-local, align 4
  %v1_145f4 = load i32, i32* @sl, align 4
  %v9_145f4 = icmp eq i32 %v4_145f0, %v1_145f4
  br i1 %v9_145f4, label %dec_label_pc_145fc, label %dec_label_pc_14610

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145e4, %dec_label_pc_14488, %dec_label_pc_142dc, %dec_label_pc_140ec
  %stack_var_-336.4 = phi i32 [ %v0_14148, %dec_label_pc_140ec ], [ %v0_14504, %dec_label_pc_145e4 ], [ %v0_14148, %dec_label_pc_14488 ], [ %v0_14148, %dec_label_pc_142dc ]
  %stack_var_-356.3 = phi i32 [ %v1_144e8, %dec_label_pc_140ec ], [ %v2_144ec, %dec_label_pc_145e4 ], [ %v2_1448c, %dec_label_pc_14488 ], [ %v2_142e0, %dec_label_pc_142dc ]
  %v3_145fc = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_145fc, i32* @r4, align 4
  store i32 %v3_145fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14014.outer

dec_label_pc_14608:                               ; preds = %dec_label_pc_14070
  %v1_14608 = add i32 %v0_14078, 2
  store i32 %v1_14608, i32* @r4, align 4
  br label %dec_label_pc_14014.outer36

dec_label_pc_14610:                               ; preds = %dec_label_pc_14498, %dec_label_pc_14314, %dec_label_pc_145e4, %dec_label_pc_14564, %dec_label_pc_14528, %dec_label_pc_1450c, %dec_label_pc_14460, %dec_label_pc_1433c, %dec_label_pc_142b4, %bb142, %dec_label_pc_145b4
  br label %dec_label_pc_14618

dec_label_pc_14618:                               ; preds = %dec_label_pc_14064, %bb, %dec_label_pc_13fa8, %dec_label_pc_14610
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_13fa8 ], [ -1, %dec_label_pc_14610 ], [ %v1_144e8, %dec_label_pc_14064 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_13f58, i32* @r5, align 4
  store i32 %v9_13f58, i32* @r6, align 4
  store i32 %v12_13f58, i32* @r7, align 4
  store i32 %v15_13f58, i32* @r8, align 4
  store i32 %v18_13f58, i32* @sb, align 4
  store i32 %v21_13f58, i32* @sl, align 4
  store i32 %v24_13f58, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_14608, { 1, 0 }
  uselistorder i32 %v3_145fc, { 1, 2, 0 }
  uselistorder i32 %v2_145cc, { 1, 2, 0 }
  uselistorder i32 %v0_14514, { 1, 0 }
  uselistorder i32 %v2_144fc, { 2, 0, 1 }
  uselistorder i1 %v9_144d8, { 1, 0 }
  uselistorder i32 %v2_144bc, { 1, 0 }
  uselistorder i32 %v0_14504, { 1, 0 }
  uselistorder i32 %v0_144bc, { 1, 0 }
  uselistorder i32 %v1_14498, { 1, 0 }
  uselistorder i32 %v1_14460, { 1, 0, 2 }
  uselistorder i32 %v4_14430, { 1, 2, 0 }
  uselistorder i32 %v4_14420, { 1, 0 }
  uselistorder i32 %v0_14394, { 1, 0 }
  uselistorder i32 %v2_14384, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_1434c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_142c4, { 1, 0 }
  uselistorder i32 %v2_14224, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_14240, { 1, 2, 3, 0 }
  uselistorder i32 %v2_141c0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14128, { 0, 2, 1, 3 }
  uselistorder i32 %v1_140cc.pre, { 1, 0, 2 }
  uselistorder i32 %v1_140c4, { 1, 0 }
  uselistorder i32 %v1_14070, { 0, 1, 3, 2 }
  uselistorder i32 %v1_144e8, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9 }
  uselistorder i32 %v2_14030, { 1, 0 }
  uselistorder i32 %v1_14028.lcssa, { 1, 0 }
  uselistorder i8 %v2_14014, { 1, 0 }
  uselistorder i32 %v2_14028, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_14040, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14148, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_14238, { 1, 0 }
  uselistorder i1 %v7_14188, { 1, 2, 0 }
  uselistorder i1 %v7_14374, { 1, 0 }
  uselistorder i1 %v7_142ec, { 1, 0 }
  uselistorder i1 %v7_141c8, { 1, 0 }
  uselistorder i32 %v2_14324, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14318, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_14428, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_140c8, { 1, 3, 2, 0 }
  uselistorder i32 %v4_140a4, { 1, 0 }
  uselistorder i32 %v2_13f60, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 21, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 22, 23, 29, 30, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 36, 37, 34, 35, 38, 39, 1, 48, 41, 40, 43, 42, 45, 44, 47, 46, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -58324), { 1, 0 }
  uselistorder i8 10, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 19, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_14618, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14610, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_14598, { 1, 0 }
  uselistorder label %dec_label_pc_14528, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_144d4, { 1, 0 }
  uselistorder label %dec_label_pc_144b8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_144b8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_143d8, { 1, 0 }
  uselistorder label %dec_label_pc_14390, { 1, 0 }
  uselistorder label %dec_label_pc_142a4, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
  uselistorder label %dec_label_pc_14174, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_140c0, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_14064, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_14030, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_14014.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_1464c = load i32, i32* @r4, align 4
  %v6_1464c = load i32, i32* @r5, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14658 = load i32, i32* @r1, align 4
  store i32 %v0_14658, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14664 = bitcast i32* %arg1 to i8*
  %v4_14664 = call i32 @__GI_memset(i8* %v3_14664, i32 0, i32 152)
  store i32 %v4_14664, i32* %r0.global-to-local, align 4
  %v0_14668 = load i32, i32* @r4, align 4
  %v1_14668 = add i32 %v0_14668, 24
  %v2_14668 = inttoptr i32 %v1_14668 to i32*
  %v3_14668 = load i32, i32* %v2_14668, align 4
  store i32 %v3_14668, i32* %r3.global-to-local, align 4
  %v0_1466c = load i32, i32* @r5, align 4
  %v2_1466c = inttoptr i32 %v0_14668 to i32*
  store i32 %v0_1466c, i32* %v2_1466c, align 4
  %v0_14670 = load i32, i32* %r3.global-to-local, align 4
  %v1_14670 = add i32 %v0_14670, -1
  %v1_14674 = load i32, i32* @r4, align 4
  %v2_14674 = add i32 %v1_14674, 24
  %v3_14674 = inttoptr i32 %v2_14674 to i32*
  store i32 %v1_14670, i32* %v3_14674, align 4
  %v0_14678 = load i32, i32* @r4, align 4
  %v1_14678 = add i32 %v0_14678, 40
  store i32 %v1_14678, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_1468821 = inttoptr i32 %v1_14678 to i32*
  store i32 8, i32* %v2_1468821, align 4
  %v3_1468822 = load i32, i32* %r2.global-to-local, align 4
  %v4_1468823 = add i32 %v3_1468822, 4
  store i32 %v4_1468823, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14684.dec_label_pc_14684_crit_edge

dec_label_pc_14684.dec_label_pc_14684_crit_edge:  ; preds = %entry, %dec_label_pc_14684.dec_label_pc_14684_crit_edge
  %v4_1468824 = phi i32 [ %v4_1468823, %entry ], [ %v4_14688, %dec_label_pc_14684.dec_label_pc_14684_crit_edge ]
  %v0_14684.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14688.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14684 = add i32 %v0_14684.pre, -1
  store i32 %v1_14684, i32* %r3.global-to-local, align 4
  %v7_14684 = icmp eq i32 %v0_14684.pre, 1
  %v2_14688 = inttoptr i32 %v4_1468824 to i32*
  store i32 %v0_14688.pre, i32* %v2_14688, align 4
  %v3_14688 = load i32, i32* %r2.global-to-local, align 4
  %v4_14688 = add i32 %v3_14688, 4
  store i32 %v4_14688, i32* %r2.global-to-local, align 4
  br i1 %v7_14684, label %dec_label_pc_14690, label %dec_label_pc_14684.dec_label_pc_14684_crit_edge

dec_label_pc_14690:                               ; preds = %dec_label_pc_14684.dec_label_pc_14684_crit_edge
  %v0_14690 = load i32, i32* @r5, align 4
  store i32 %v0_14690, i32* %r2.global-to-local, align 4
  %v1_146d02 = inttoptr i32 %v0_14690 to i8*
  %v2_146d03 = load i8, i8* %v1_146d02, align 1
  %v3_146d04 = zext i8 %v2_146d03 to i32
  store i32 %v3_146d04, i32* %r0.global-to-local, align 4
  %v2_146d45 = icmp eq i8 %v2_146d03, 0
  br i1 %v2_146d45, label %dec_label_pc_146dc, label %dec_label_pc_14698

dec_label_pc_14698:                               ; preds = %dec_label_pc_14690, %dec_label_pc_146d0.backedge
  %v0_146a0 = phi i32 [ %storemerge, %dec_label_pc_146d0.backedge ], [ %v0_14690, %dec_label_pc_14690 ]
  %v0_14698 = phi i32 [ %v3_146d0, %dec_label_pc_146d0.backedge ], [ %v3_146d04, %dec_label_pc_14690 ]
  %v7_14698 = icmp eq i32 %v0_14698, 37
  br i1 %v7_14698, label %dec_label_pc_146a0, label %dec_label_pc_146cc

dec_label_pc_146a0:                               ; preds = %dec_label_pc_14698
  %v1_146a0 = add i32 %v0_146a0, 1
  %v2_146a0 = inttoptr i32 %v1_146a0 to i8*
  %v3_146a0 = load i8, i8* %v2_146a0, align 1
  %v4_146a0 = zext i8 %v3_146a0 to i32
  store i32 %v4_146a0, i32* %r3.global-to-local, align 4
  store i32 %v1_146a0, i32* %r2.global-to-local, align 4
  %v7_146a4 = icmp eq i8 %v3_146a0, 37
  br i1 %v7_146a4, label %dec_label_pc_146cc, label %dec_label_pc_146ac

dec_label_pc_146ac:                               ; preds = %dec_label_pc_146a0
  %v1_146ac = load i32, i32* @r4, align 4
  %v2_146ac = inttoptr i32 %v1_146ac to i32*
  store i32 %v1_146a0, i32* %v2_146ac, align 4
  %v0_146b0 = load i32, i32* @r4, align 4
  store i32 %v0_146b0, i32* %r0.global-to-local, align 4
  %v1_146b4 = inttoptr i32 %v0_146b0 to i8*
  %v2_146b4 = call i32 @_ppfs_parsespec(i8* %v1_146b4)
  store i32 %v2_146b4, i32* %r0.global-to-local, align 4
  %v1_146b8 = icmp slt i32 %v2_146b4, 0
  br i1 %v1_146b8, label %dec_label_pc_146e0.loopexit, label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146ac
  %v0_146c4 = load i32, i32* @r4, align 4
  %v1_146c4 = inttoptr i32 %v0_146c4 to i32*
  %v2_146c4 = load i32, i32* %v1_146c4, align 4
  br label %dec_label_pc_146d0.backedge

dec_label_pc_146cc:                               ; preds = %dec_label_pc_14698, %dec_label_pc_146a0
  %v0_146cc = phi i32 [ %v0_146a0, %dec_label_pc_14698 ], [ %v1_146a0, %dec_label_pc_146a0 ]
  %v1_146cc = add i32 %v0_146cc, 1
  br label %dec_label_pc_146d0.backedge

dec_label_pc_146d0.backedge:                      ; preds = %dec_label_pc_146cc, %dec_label_pc_146c4
  %storemerge = phi i32 [ %v1_146cc, %dec_label_pc_146cc ], [ %v2_146c4, %dec_label_pc_146c4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_146d0 = inttoptr i32 %storemerge to i8*
  %v2_146d0 = load i8, i8* %v1_146d0, align 1
  %v3_146d0 = zext i8 %v2_146d0 to i32
  store i32 %v3_146d0, i32* %r0.global-to-local, align 4
  %v2_146d4 = icmp eq i8 %v2_146d0, 0
  br i1 %v2_146d4, label %dec_label_pc_146d0.dec_label_pc_146dc_crit_edge, label %dec_label_pc_14698

dec_label_pc_146d0.dec_label_pc_146dc_crit_edge:  ; preds = %dec_label_pc_146d0.backedge
  %v0_146dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_146dc

dec_label_pc_146dc:                               ; preds = %dec_label_pc_146d0.dec_label_pc_146dc_crit_edge, %dec_label_pc_14690
  %v0_146dc = phi i32 [ %v0_146dc.pre, %dec_label_pc_146d0.dec_label_pc_146dc_crit_edge ], [ %v0_14690, %dec_label_pc_14690 ]
  %v1_146dc = load i32, i32* @r4, align 4
  %v2_146dc = inttoptr i32 %v1_146dc to i32*
  store i32 %v0_146dc, i32* %v2_146dc, align 4
  %v1_146e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e0

dec_label_pc_146e0.loopexit:                      ; preds = %dec_label_pc_146ac
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e0

dec_label_pc_146e0:                               ; preds = %dec_label_pc_146e0.loopexit, %dec_label_pc_146dc
  %v1_146e8 = phi i32 [ -1, %dec_label_pc_146e0.loopexit ], [ %v1_146e8.pre, %dec_label_pc_146dc ]
  store i32 %v3_1464c, i32* @r4, align 4
  store i32 %v6_1464c, i32* @r5, align 4
  ret i32 %v1_146e8

; uselistorder directives
  uselistorder i32 %v3_146d0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14690, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14688, { 1, 0 }
  uselistorder i32 %v0_14684.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder i32 152, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_146cc, { 1, 0 }
  uselistorder label %dec_label_pc_14698, { 1, 0 }
  uselistorder label %dec_label_pc_14684.dec_label_pc_14684_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_146ec = load i32, i32* @r4, align 4
  store i32 %v3_146ec, i32* %stack_var_-12, align 4
  %v0_146f0 = load i32, i32* @r0, align 4
  %v1_146f0 = add i32 %v0_146f0, 24
  %v2_146f0 = inttoptr i32 %v1_146f0 to i32*
  %v3_146f0 = load i32, i32* %v2_146f0, align 4
  store i32 %v3_146f0, i32* %r5.global-to-local, align 4
  store i32 %v0_146f0, i32* @r4, align 4
  %v2_14700 = add i32 %v0_146f0, 76
  %v3_14700 = inttoptr i32 %v2_14700 to i32*
  store i32 %arg2, i32* %v3_14700, align 4
  %tmp5 = icmp slt i32 %v3_146f0, 1
  br i1 %tmp5, label %dec_label_pc_14724, label %dec_label_pc_14708

dec_label_pc_14708:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1470c = load i32, i32* @r0, align 4
  %v2_1470c = add i32 %v1_1470c, 8
  %v3_1470c = inttoptr i32 %v2_1470c to i32*
  store i32 0, i32* %v3_1470c, align 4
  %v0_14710 = load i32, i32* %r5.global-to-local, align 4
  %v1_14710 = load i32, i32* @r0, align 4
  %v2_14710 = add i32 %v1_14710, 28
  %v3_14710 = inttoptr i32 %v2_14710 to i32*
  store i32 %v0_14710, i32* %v3_14710, align 4
  %v0_14714 = load i32, i32* %r3.global-to-local, align 4
  %v1_14714 = load i32, i32* @r0, align 4
  %v2_14714 = add i32 %v1_14714, 24
  %v3_14714 = inttoptr i32 %v2_14714 to i32*
  store i32 %v0_14714, i32* %v3_14714, align 4
  %v0_14718 = load i32, i32* %r3.global-to-local, align 4
  %v1_14718 = load i32, i32* @r0, align 4
  %v2_14718 = add i32 %v1_14718, 4
  %v3_14718 = inttoptr i32 %v2_14718 to i32*
  store i32 %v0_14718, i32* %v3_14718, align 4
  %v0_1471c = call i32 @_ppfs_setargs()
  store i32 %v0_1471c, i32* @r0, align 4
  %v0_14720 = load i32, i32* %r5.global-to-local, align 4
  %v1_14720 = load i32, i32* @r4, align 4
  %v2_14720 = add i32 %v1_14720, 24
  %v3_14720 = inttoptr i32 %v2_14720 to i32*
  store i32 %v0_14720, i32* %v3_14720, align 4
  br label %dec_label_pc_14724

dec_label_pc_14724:                               ; preds = %entry, %dec_label_pc_14708
  %v2_14728 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14728, i32* @r4, align 4
  %v1_1472c = load i32, i32* @r0, align 4
  ret i32 %v1_1472c

; uselistorder directives
  uselistorder i32 %v0_146f0, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_14724, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14730 = load i32, i32* @r0, align 4
  %v1_14730 = add i32 %v0_14730, 24
  %v2_14730 = inttoptr i32 %v1_14730 to i32*
  %v3_14730 = load i32, i32* %v2_14730, align 4
  store i32 %v3_14730, i32* %r1.global-to-local, align 4
  %v2_14734 = icmp eq i32 %v3_14730, 0
  %v3_14738 = load i32, i32* @r4, align 4
  store i32 %v3_14738, i32* %stack_var_-8, align 4
  %v1_1473c = add i32 %v0_14730, 8
  %v2_1473c = inttoptr i32 %v1_1473c to i32*
  %v3_1473c = load i32, i32* %v2_1473c, align 4
  store i32 %v3_1473c, i32* %r3.global-to-local, align 4
  %v6_14744 = icmp eq i32 %v3_1473c, -2147483648
  br i1 %v2_14734, label %dec_label_pc_14744, label %dec_label_pc_1487c

dec_label_pc_14744:                               ; preds = %entry
  br i1 %v6_14744, label %dec_label_pc_1474c, label %dec_label_pc_14764

dec_label_pc_1474c:                               ; preds = %dec_label_pc_14744
  %v1_1474c = add i32 %v0_14730, 76
  %v2_1474c = inttoptr i32 %v1_1474c to i32*
  %v3_1474c = load i32, i32* %v2_1474c, align 4
  store i32 %v3_1474c, i32* %r3.global-to-local, align 4
  %v1_14750 = inttoptr i32 %v3_1474c to i32*
  %v2_14750 = load i32, i32* %v1_14750, align 4
  store i32 %v2_14750, i32* %r2.global-to-local, align 4
  %v1_14754 = add i32 %v3_1474c, 4
  store i32 %v1_14754, i32* %r3.global-to-local, align 4
  store i32 %v1_14754, i32* %v2_1474c, align 4
  %v0_1475c = load i32, i32* %r2.global-to-local, align 4
  %v1_1475c = load i32, i32* @r0, align 4
  %v2_1475c = add i32 %v1_1475c, 8
  %v3_1475c = inttoptr i32 %v2_1475c to i32*
  store i32 %v0_1475c, i32* %v3_1475c, align 4
  %v0_14760 = load i32, i32* %r2.global-to-local, align 4
  %v1_14760 = load i32, i32* @r0, align 4
  %v2_14760 = add i32 %v1_14760, 80
  %v3_14760 = inttoptr i32 %v2_14760 to i32*
  store i32 %v0_14760, i32* %v3_14760, align 4
  %v0_14764.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_14744, %dec_label_pc_1474c
  %v1_14780 = phi i32 [ %v0_14730, %dec_label_pc_14744 ], [ %v0_14764.pre, %dec_label_pc_1474c ]
  %v1_14764 = add i32 %v1_14780, 4
  %v2_14764 = inttoptr i32 %v1_14764 to i32*
  %v3_14764 = load i32, i32* %v2_14764, align 4
  store i32 %v3_14764, i32* %r3.global-to-local, align 4
  %v6_14768 = icmp eq i32 %v3_14764, -2147483648
  %v1_1476c = add i32 %v1_14780, 80
  store i32 %v1_1476c, i32* %ip.global-to-local, align 4
  br i1 %v6_14768, label %dec_label_pc_14774, label %dec_label_pc_1478c

dec_label_pc_14774:                               ; preds = %dec_label_pc_14764
  %v1_14774 = add i32 %v1_14780, 76
  %v2_14774 = inttoptr i32 %v1_14774 to i32*
  %v3_14774 = load i32, i32* %v2_14774, align 4
  store i32 %v3_14774, i32* %r3.global-to-local, align 4
  %v1_14778 = inttoptr i32 %v3_14774 to i32*
  %v2_14778 = load i32, i32* %v1_14778, align 4
  store i32 %v2_14778, i32* %r2.global-to-local, align 4
  %v1_1477c = add i32 %v3_14774, 4
  store i32 %v1_1477c, i32* %r3.global-to-local, align 4
  store i32 %v1_1477c, i32* %v2_14774, align 4
  %v0_14784 = load i32, i32* %r2.global-to-local, align 4
  %v1_14784 = load i32, i32* @r0, align 4
  %v2_14784 = add i32 %v1_14784, 4
  %v3_14784 = inttoptr i32 %v2_14784 to i32*
  store i32 %v0_14784, i32* %v3_14784, align 4
  %v0_14788 = load i32, i32* %r2.global-to-local, align 4
  %v1_14788 = load i32, i32* @r0, align 4
  %v2_14788 = add i32 %v1_14788, 80
  %v3_14788 = inttoptr i32 %v2_14788 to i32*
  store i32 %v0_14788, i32* %v3_14788, align 4
  %v0_1486c17.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14764, %dec_label_pc_14774
  %v0_1486c17 = phi i32 [ %v1_14780, %dec_label_pc_14764 ], [ %v0_1486c17.pre, %dec_label_pc_14774 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_14790 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14790, i32* %lr.global-to-local, align 4
  %v1_1486c18 = add i32 %v0_1486c17, 28
  %v2_1486c19 = inttoptr i32 %v1_1486c18 to i32*
  %v3_1486c20 = load i32, i32* %v2_1486c19, align 4
  store i32 %v3_1486c20, i32* %r3.global-to-local, align 4
  %v5_1487422 = icmp slt i32 %v0_14790, %v3_1486c20
  br i1 %v5_1487422, label %dec_label_pc_14798, label %dec_label_pc_14878.loopexit

dec_label_pc_14798:                               ; preds = %dec_label_pc_1478c, %dec_label_pc_1486c.backedge
  %v0_1486c24 = phi i32 [ %v0_1486c, %dec_label_pc_1486c.backedge ], [ %v0_1486c17, %dec_label_pc_1478c ]
  %v0_147a423 = phi i32 [ %v0_147a4.be, %dec_label_pc_1486c.backedge ], [ %v0_14790, %dec_label_pc_1478c ]
  %v4_14798 = mul i32 %v0_147a423, 4
  %v5_14798 = add i32 %v4_14798, %v0_1486c24
  store i32 %v5_14798, i32* %r3.global-to-local, align 4
  %v1_1479c = add i32 %v5_14798, 40
  %v2_1479c = inttoptr i32 %v1_1479c to i32*
  %v3_1479c = load i32, i32* %v2_1479c, align 4
  store i32 %v3_1479c, i32* %r3.global-to-local, align 4
  %v7_147a0 = icmp eq i32 %v3_1479c, 8
  %v1_147a4 = add i32 %v0_147a423, 1
  store i32 %v1_147a4, i32* %lr.global-to-local, align 4
  br i1 %v7_147a0, label %dec_label_pc_1486c.backedge, label %dec_label_pc_147ac

dec_label_pc_147ac:                               ; preds = %dec_label_pc_14798
  %v1_147ac = add i32 %v0_1486c24, 76
  %v2_147ac = inttoptr i32 %v1_147ac to i32*
  %v3_147ac = load i32, i32* %v2_147ac, align 4
  store i32 %v3_147ac, i32* %r1.global-to-local, align 4
  %v8_147b0 = icmp sgt i32 %v3_1479c, 8
  br i1 %v8_147b0, label %dec_label_pc_147d4, label %dec_label_pc_147b4

dec_label_pc_147b4:                               ; preds = %dec_label_pc_147ac
  %v7_147b4 = icmp eq i32 %v3_1479c, 2
  br i1 %v7_147b4, label %dec_label_pc_14824, label %dec_label_pc_147bc

dec_label_pc_147bc:                               ; preds = %dec_label_pc_147b4
  %v8_147bc = icmp sgt i32 %v3_1479c, 2
  br i1 %v8_147bc, label %dec_label_pc_147cc, label %dec_label_pc_147c0

dec_label_pc_147c0:                               ; preds = %dec_label_pc_147bc
  %v1_147c0 = icmp slt i32 %v3_1479c, 0
  br i1 %v1_147c0, label %dec_label_pc_14858, label %dec_label_pc_14824

dec_label_pc_147cc:                               ; preds = %dec_label_pc_147bc
  %v7_147cc = icmp eq i32 %v3_1479c, 7
  br i1 %v7_147cc, label %dec_label_pc_14838, label %dec_label_pc_14858

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147ac
  %v7_147d4 = icmp eq i32 %v3_1479c, 1024
  br i1 %v7_147d4, label %dec_label_pc_14824, label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147d4
  %v8_147dc = icmp sgt i32 %v3_1479c, 1024
  br i1 %v8_147dc, label %dec_label_pc_147f4, label %dec_label_pc_147e0

dec_label_pc_147e0:                               ; preds = %dec_label_pc_147dc
  switch i32 %v3_1479c, label %dec_label_pc_14858 [
    i32 256, label %dec_label_pc_14824
    i32 512, label %dec_label_pc_14824
  ]

dec_label_pc_147f4:                               ; preds = %dec_label_pc_147dc
  %v7_147f4 = icmp eq i32 %v3_1479c, 2048
  br i1 %v7_147f4, label %dec_label_pc_14808, label %dec_label_pc_14800

dec_label_pc_14800:                               ; preds = %dec_label_pc_147f4
  %v1_147fc = load i32, i32* %r4.global-to-local, align 4
  %v9_147fc = icmp eq i32 %v3_1479c, %v1_147fc
  br i1 %v9_147fc, label %dec_label_pc_14838, label %dec_label_pc_14858

dec_label_pc_14808:                               ; preds = %dec_label_pc_147f4
  %v1_14808 = add i32 %v3_147ac, 7
  %v1_1480c = and i32 %v1_14808, -8
  store i32 %v1_1480c, i32* %r3.global-to-local, align 4
  %v1_14810 = inttoptr i32 %v1_1480c to i32*
  %v2_14810 = load i32, i32* %v1_14810, align 8
  store i32 %v2_14810, i32* %r1.global-to-local, align 4
  %v3_14810 = or i32 %v1_1480c, 4
  %v4_14810 = inttoptr i32 %v3_14810 to i32*
  %v5_14810 = load i32, i32* %v4_14810, align 4
  store i32 %v5_14810, i32* %r2.global-to-local, align 4
  %v1_14814 = add i32 %v1_1480c, 8
  store i32 %v1_14814, i32* %r3.global-to-local, align 4
  store i32 %v1_14814, i32* %v2_147ac, align 4
  %v0_1481c = load i32, i32* %ip.global-to-local, align 4
  %v1_1481c = inttoptr i32 %v0_1481c to i32*
  %v2_1481c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_1481c, i32* %v1_1481c, align 4
  %v3_1481c = add i32 %v0_1481c, 4
  %v4_1481c = inttoptr i32 %v3_1481c to i32*
  %v5_1481c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1481c, i32* %v4_1481c, align 4
  br label %dec_label_pc_14868

dec_label_pc_14824:                               ; preds = %dec_label_pc_147e0, %dec_label_pc_147e0, %dec_label_pc_147c0, %dec_label_pc_147d4, %dec_label_pc_147b4
  %v1_14824 = inttoptr i32 %v3_147ac to i32*
  %v2_14824 = load i32, i32* %v1_14824, align 4
  store i32 %v2_14824, i32* %r2.global-to-local, align 4
  %v1_14828 = add i32 %v3_147ac, 4
  store i32 %v1_14828, i32* %r3.global-to-local, align 4
  store i32 %v1_14828, i32* %v2_147ac, align 4
  %v0_14830 = load i32, i32* %r2.global-to-local, align 4
  %v1_14830 = load i32, i32* %ip.global-to-local, align 4
  %v2_14830 = inttoptr i32 %v1_14830 to i32*
  store i32 %v0_14830, i32* %v2_14830, align 4
  br label %dec_label_pc_14868

dec_label_pc_14838:                               ; preds = %dec_label_pc_147cc, %dec_label_pc_14800
  %v3_14838 = load i32, i32* %v2_147ac, align 4
  %v1_1483c = add i32 %v3_14838, 7
  %v1_14840 = and i32 %v1_1483c, -8
  store i32 %v1_14840, i32* %r3.global-to-local, align 4
  %v1_14844 = inttoptr i32 %v1_14840 to i32*
  %v2_14844 = load i32, i32* %v1_14844, align 8
  store i32 %v2_14844, i32* %r1.global-to-local, align 4
  %v3_14844 = or i32 %v1_14840, 4
  %v4_14844 = inttoptr i32 %v3_14844 to i32*
  %v5_14844 = load i32, i32* %v4_14844, align 4
  store i32 %v5_14844, i32* %r2.global-to-local, align 4
  %v1_14848 = add i32 %v1_14840, 8
  store i32 %v1_14848, i32* %r3.global-to-local, align 4
  store i32 %v1_14848, i32* %v2_147ac, align 4
  %v0_14850 = load i32, i32* %ip.global-to-local, align 4
  %v1_14850 = inttoptr i32 %v0_14850 to i32*
  %v2_14850 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14850, i32* %v1_14850, align 4
  %v3_14850 = add i32 %v0_14850, 4
  %v4_14850 = inttoptr i32 %v3_14850 to i32*
  %v5_14850 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_14850, i32* %v4_14850, align 4
  br label %dec_label_pc_14868

dec_label_pc_14858:                               ; preds = %dec_label_pc_147e0, %dec_label_pc_147cc, %dec_label_pc_147c0, %dec_label_pc_14800
  %v1_14858 = add i32 %v3_147ac, 4
  store i32 %v1_14858, i32* %r3.global-to-local, align 4
  store i32 %v1_14858, i32* %v2_147ac, align 4
  %v0_14860 = load i32, i32* %r1.global-to-local, align 4
  %v1_14860 = inttoptr i32 %v0_14860 to i32*
  %v2_14860 = load i32, i32* %v1_14860, align 4
  store i32 %v2_14860, i32* %r3.global-to-local, align 4
  %v1_14864 = load i32, i32* %ip.global-to-local, align 4
  %v2_14864 = inttoptr i32 %v1_14864 to i32*
  store i32 %v2_14860, i32* %v2_14864, align 4
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %dec_label_pc_14838, %dec_label_pc_14824, %dec_label_pc_14808, %dec_label_pc_14858
  %v0_14868 = load i32, i32* %ip.global-to-local, align 4
  %v1_14868 = add i32 %v0_14868, 8
  store i32 %v1_14868, i32* %ip.global-to-local, align 4
  %v0_14870.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1486c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1486c.backedge

dec_label_pc_1486c.backedge:                      ; preds = %dec_label_pc_14868, %dec_label_pc_14798
  %v0_1486c = phi i32 [ %v0_1486c.pre, %dec_label_pc_14868 ], [ %v0_1486c24, %dec_label_pc_14798 ]
  %v0_147a4.be = phi i32 [ %v0_14870.pre.pre, %dec_label_pc_14868 ], [ %v1_147a4, %dec_label_pc_14798 ]
  %v1_1486c = add i32 %v0_1486c, 28
  %v2_1486c = inttoptr i32 %v1_1486c to i32*
  %v3_1486c = load i32, i32* %v2_1486c, align 4
  store i32 %v3_1486c, i32* %r3.global-to-local, align 4
  %v5_14874 = icmp slt i32 %v0_147a4.be, %v3_1486c
  br i1 %v5_14874, label %dec_label_pc_14798, label %dec_label_pc_1486c.dec_label_pc_14878.loopexit_crit_edge

dec_label_pc_1487c:                               ; preds = %entry
  br i1 %v6_14744, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1487c
  %v2_14880 = add i32 %v0_14730, 36
  %v3_14880 = inttoptr i32 %v2_14880 to i8*
  %v4_14880 = load i8, i8* %v3_14880, align 1
  %v5_14880 = zext i8 %v4_14880 to i32
  %v5_14884 = mul nuw nsw i32 %v5_14880, 8
  %v6_14884 = add i32 %v5_14884, %v0_14730
  store i32 %v6_14884, i32* %r3.global-to-local, align 4
  %v2_14888 = add i32 %v6_14884, 72
  %v3_14888 = inttoptr i32 %v2_14888 to i32*
  %v4_14888 = load i32, i32* %v3_14888, align 4
  store i32 %v4_14888, i32* %r3.global-to-local, align 4
  store i32 %v4_14888, i32* %v2_1473c, align 4
  %v0_14890.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1487c, %bb
  %v2_148a4 = phi i32 [ %v0_14890.pre, %bb ], [ %v0_14730, %dec_label_pc_1487c ]
  %v1_14890 = add i32 %v2_148a4, 4
  %v2_14890 = inttoptr i32 %v1_14890 to i32*
  %v3_14890 = load i32, i32* %v2_14890, align 4
  store i32 %v3_14890, i32* %r3.global-to-local, align 4
  %v6_14894 = icmp eq i32 %v3_14890, -2147483648
  br i1 %v6_14894, label %bb16, label %dec_label_pc_14878

bb16:                                             ; preds = %.thread1
  %v2_14898 = add i32 %v2_148a4, 37
  %v3_14898 = inttoptr i32 %v2_14898 to i8*
  %v4_14898 = load i8, i8* %v3_14898, align 1
  %v5_14898 = zext i8 %v4_14898 to i32
  %v5_1489c = mul nuw nsw i32 %v5_14898, 8
  %v6_1489c = add i32 %v5_1489c, %v2_148a4
  store i32 %v6_1489c, i32* %r3.global-to-local, align 4
  %v2_148a0 = add i32 %v6_1489c, 72
  %v3_148a0 = inttoptr i32 %v2_148a0 to i32*
  %v4_148a0 = load i32, i32* %v3_148a0, align 4
  store i32 %v4_148a0, i32* %r3.global-to-local, align 4
  store i32 %v4_148a0, i32* %v2_14890, align 4
  %v0_148a8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14878

dec_label_pc_1486c.dec_label_pc_14878.loopexit_crit_edge: ; preds = %dec_label_pc_1486c.backedge
  br label %dec_label_pc_14878.loopexit

dec_label_pc_14878.loopexit:                      ; preds = %dec_label_pc_1486c.dec_label_pc_14878.loopexit_crit_edge, %dec_label_pc_1478c
  %v0_1486c.lcssa = phi i32 [ %v0_1486c, %dec_label_pc_1486c.dec_label_pc_14878.loopexit_crit_edge ], [ %v0_1486c17, %dec_label_pc_1478c ]
  br label %dec_label_pc_14878

dec_label_pc_14878:                               ; preds = %dec_label_pc_14878.loopexit, %.thread1, %bb16
  %v1_148c8 = phi i32 [ %v0_1486c.lcssa, %dec_label_pc_14878.loopexit ], [ %v2_148a4, %.thread1 ], [ %v0_148a8.pre, %bb16 ]
  %v1_148a8 = add i32 %v1_148c8, 8
  %v2_148a8 = inttoptr i32 %v1_148a8 to i32*
  %v3_148a8 = load i32, i32* %v2_148a8, align 4
  store i32 %v3_148a8, i32* %r1.global-to-local, align 4
  %v1_148ac = icmp slt i32 %v3_148a8, 0
  br i1 %v1_148ac, label %dec_label_pc_148b4, label %dec_label_pc_148d4

dec_label_pc_148b4:                               ; preds = %dec_label_pc_14878
  %v1_148b4 = add i32 %v1_148c8, 16
  %v2_148b4 = inttoptr i32 %v1_148b4 to i32*
  %v3_148b4 = load i32, i32* %v2_148b4, align 4
  %v1_148bc = sub i32 0, %v3_148a8
  store i32 %v1_148bc, i32* %r1.global-to-local, align 4
  %v1_148b8 = and i32 %v3_148b4, -10
  %v1_148c0 = or i32 %v1_148b8, 8
  store i32 %v1_148c0, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_148c8 = add i32 %v1_148c8, 20
  %v3_148c8 = inttoptr i32 %v2_148c8 to i32*
  store i32 32, i32* %v3_148c8, align 4
  %v0_148cc = load i32, i32* %r1.global-to-local, align 4
  %v1_148cc = load i32, i32* @r0, align 4
  %v2_148cc = add i32 %v1_148cc, 8
  %v3_148cc = inttoptr i32 %v2_148cc to i32*
  store i32 %v0_148cc, i32* %v3_148cc, align 4
  %v0_148d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_148d0 = load i32, i32* @r0, align 4
  %v2_148d0 = add i32 %v1_148d0, 16
  %v3_148d0 = inttoptr i32 %v2_148d0 to i32*
  store i32 %v0_148d0, i32* %v3_148d0, align 4
  %v1_148d8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_14878, %dec_label_pc_148b4
  %v1_148d8 = phi i32 [ %v1_148c8, %dec_label_pc_14878 ], [ %v1_148d8.pre, %dec_label_pc_148b4 ]
  %v2_148d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_148d4, i32* @r4, align 4
  ret i32 %v1_148d8

; uselistorder directives
  uselistorder i32 %v2_148a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_147a4.be, { 1, 0 }
  uselistorder i32 %v0_1486c, { 1, 2, 0 }
  uselistorder i32 %v3_147ac, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_147ac, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_1479c, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_147a423, { 1, 0 }
  uselistorder i32 %v0_1486c24, { 0, 2, 1 }
  uselistorder i32 %v0_1486c17, { 2, 0, 1 }
  uselistorder i32 %v0_14730, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_148d4, { 1, 0 }
  uselistorder label %dec_label_pc_14878, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14858, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14838, { 1, 0 }
  uselistorder label %dec_label_pc_14824, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14798, { 1, 0 }
  uselistorder label %dec_label_pc_1478c, { 1, 0 }
  uselistorder label %dec_label_pc_14764, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_148fc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_148f8

dec_label_pc_148f8:                               ; preds = %dec_label_pc_14904, %entry
  %v0_148f8 = phi i32 [ %v1_148f8, %dec_label_pc_14904 ], [ add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -36950), %entry ]
  %v1_148f8 = add i32 %v0_148f8, -2
  %v2_148f8 = inttoptr i32 %v1_148f8 to i16*
  %v3_148f8 = load i16, i16* %v2_148f8, align 2
  %v4_148f8 = sext i16 %v3_148f8 to i32
  store i32 %v1_148f8, i32* @ip, align 4
  %v9_148fc = icmp eq i32 %v4_148f8, %v1_148fc.pre
  br i1 %v9_148fc, label %dec_label_pc_148f8.dec_label_pc_1490c_crit_edge, label %dec_label_pc_14904

dec_label_pc_148f8.dec_label_pc_1490c_crit_edge:  ; preds = %dec_label_pc_148f8
  br label %dec_label_pc_1490c

dec_label_pc_14904:                               ; preds = %dec_label_pc_148f8
  %tmp = icmp ugt i32 %v1_148f8, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -36974)
  br i1 %tmp, label %dec_label_pc_148f8, label %dec_label_pc_1490c.loopexit

dec_label_pc_1490c.loopexit:                      ; preds = %dec_label_pc_14904
  br label %dec_label_pc_1490c

dec_label_pc_1490c:                               ; preds = %dec_label_pc_1490c.loopexit, %dec_label_pc_148f8.dec_label_pc_1490c_crit_edge
  %v2_1491c.pre-phi = sub i32 %v1_148f8, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -36974)
  store i32 %v2_1491c.pre-phi, i32* @r2, align 4
  %v4_14920 = sdiv i32 %v2_1491c.pre-phi, 2
  %v5_14920 = add i32 %v4_14920, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -36950)
  %v6_14920 = inttoptr i32 %v5_14920 to i8*
  %v7_14920 = load i8, i8* %v6_14920, align 1
  %v9_14920 = zext i8 %v7_14920 to i32
  ret i32 %v9_14920

; uselistorder directives
  uselistorder i32 %v2_1491c.pre-phi, { 1, 0 }
  uselistorder i32 %v1_148f8, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -36974), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14934 = load i32, i32* @r4, align 4
  store i32 %v3_14934, i32* %stack_var_-36, align 4
  %v6_14934 = load i32, i32* @r5, align 4
  %v27_14934 = load i32, i32* @lr, align 4
  %v0_14938 = load i32, i32* %r0.global-to-local, align 4
  %v1_14938 = add i32 %v0_14938, 16
  %v2_14938 = inttoptr i32 %v1_14938 to i32*
  %v3_14938 = load i32, i32* %v2_14938, align 4
  %v1_14940 = and i32 %v3_14938, 128
  store i32 %v1_14940, i32* @r4, align 4
  %v2_14940 = icmp eq i32 %v1_14940, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_14938, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @lr, align 4
  %v1_14968 = add i32 %v0_14938, 24
  %v2_14968 = inttoptr i32 %v1_14968 to i32*
  %v3_14968 = load i32, i32* %v2_14968, align 4
  store i32 %v3_14968, i32* %fp.global-to-local, align 4
  br i1 %v2_14940, label %.dec_label_pc_149bc_crit_edge, label %dec_label_pc_14974

.dec_label_pc_149bc_crit_edge:                    ; preds = %entry
  %v2_1496c = inttoptr i32 %v0_14938 to i32*
  %v3_1496c = load i32, i32* %v2_1496c, align 4
  store i32 %v3_1496c, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_149bc

dec_label_pc_14974:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14984 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_14978

dec_label_pc_14978:                               ; preds = %dec_label_pc_149a8.dec_label_pc_14978_crit_edge, %dec_label_pc_14974
  %v1_14988 = phi i32 [ %v1_14998, %dec_label_pc_149a8.dec_label_pc_14978_crit_edge ], [ 0, %dec_label_pc_14974 ]
  %v0_14978 = phi i32 [ %v0_14978.pre, %dec_label_pc_149a8.dec_label_pc_14978_crit_edge ], [ %v0_14938, %dec_label_pc_14974 ]
  %v1_14978 = inttoptr i32 %v0_14978 to i32*
  %v2_14978 = load i32, i32* %v1_14978, align 4
  %v4_1497c = mul i32 %v1_14988, 4
  %v5_1497c = add i32 %v2_14978, %v4_1497c
  store i32 %v5_1497c, i32* %r3.global-to-local, align 4
  %v1_14980 = add i32 %v5_1497c, -4
  %v2_14980 = inttoptr i32 %v1_14980 to i8*
  %v3_14980 = load i8, i8* %v2_14980, align 1
  %v4_14980 = zext i8 %v3_14980 to i32
  store i32 %v4_14980, i32* %r1.global-to-local, align 4
  store i32 %v2_14984, i32* @ip, align 4
  %v2_14988 = add i32 %v1_14988, %v2_14984
  store i32 %v2_14988, i32* %r2.global-to-local, align 4
  %v3_1498c = add i32 %v2_14988, -72
  %v4_1498c = inttoptr i32 %v3_1498c to i8*
  store i8 %v3_14980, i8* %v4_1498c, align 1
  %v0_14990 = load i32, i32* %r3.global-to-local, align 4
  %v1_14990 = add i32 %v0_14990, -4
  %v2_14990 = inttoptr i32 %v1_14990 to i32*
  %v3_14990 = load i32, i32* %v2_14990, align 4
  store i32 %v3_14990, i32* %r3.global-to-local, align 4
  %v0_14994 = load i32, i32* %r1.global-to-local, align 4
  %v9_14994 = icmp eq i32 %v0_14994, %v3_14990
  %v0_14998 = load i32, i32* %r0.global-to-local, align 4
  %v1_14998 = add i32 %v0_14998, 1
  store i32 %v1_14998, i32* %r0.global-to-local, align 4
  br i1 %v9_14994, label %dec_label_pc_149a0, label %dec_label_pc_14e64

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14978
  %v2_149a0 = icmp eq i32 %v3_14990, 0
  br i1 %v2_149a0, label %dec_label_pc_149b0, label %dec_label_pc_149a8

dec_label_pc_149a8:                               ; preds = %dec_label_pc_149a0
  %tmp182 = icmp ult i32 %v1_14998, 32
  br i1 %tmp182, label %dec_label_pc_149a8.dec_label_pc_14978_crit_edge, label %dec_label_pc_149b0

dec_label_pc_149a8.dec_label_pc_14978_crit_edge:  ; preds = %dec_label_pc_149a8
  %v0_14978.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14978

dec_label_pc_149b0:                               ; preds = %dec_label_pc_149a8, %dec_label_pc_149a0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_149b8 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_149b8, i32* %r0.global-to-local, align 4
  %v0_149c8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_149bc

dec_label_pc_149bc:                               ; preds = %.dec_label_pc_149bc_crit_edge, %dec_label_pc_149b0
  %v3_149f0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_149bc_crit_edge ], [ %v2_14984, %dec_label_pc_149b0 ]
  %v0_149e864 = phi i32 [ %v3_1496c, %.dec_label_pc_149bc_crit_edge ], [ %v2_149b8, %dec_label_pc_149b0 ]
  %v0_149c8 = phi i32 [ ptrtoint (i32* @global_var_222a8.80 to i32), %.dec_label_pc_149bc_crit_edge ], [ %v0_149c8.pre, %dec_label_pc_149b0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 196, i32* %r2.global-to-local, align 4
  %v2_149c8 = add i32 %v0_149c8, -36912
  store i32 %v2_149c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_149dc = inttoptr i32 %v2_149c8 to i8*
  store i8* %v4_149dc, i8** %stack_var_-120, align 4
  br label %dec_label_pc_149e8

dec_label_pc_149e4:                               ; preds = %.thread20, %dec_label_pc_14b18
  %v0_149e4 = phi i32 [ %v2_14b90, %.thread20 ], [ %v0_14af476, %dec_label_pc_14b18 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_14b18 ]
  store i32 %v0_149e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149e8

dec_label_pc_149e8:                               ; preds = %dec_label_pc_149bc, %dec_label_pc_149e4
  %v1_149fc = phi i32 [ %v0_149e864, %dec_label_pc_149bc ], [ %v0_149e4, %dec_label_pc_149e4 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_149bc ], [ %stack_var_-44.0, %dec_label_pc_149e4 ]
  %v1_149e8 = inttoptr i32 %v1_149fc to i8*
  %v2_149e8 = load i8, i8* %v1_149e8, align 1
  %v3_149e8 = zext i8 %v2_149e8 to i32
  store i32 %v3_149e8, i32* %r3.global-to-local, align 4
  %v7_149ec = icmp eq i8 %v2_149e8, 42
  br i1 %v7_149ec, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_149e8
  store i32 %v1_149fc, i32* %r6.global-to-local, align 4
  %v0_14a00 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14a00, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14a48.preheader

bb:                                               ; preds = %dec_label_pc_149e8
  %v1_149f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_149f4 = load i32, i32* %sb.global-to-local, align 4
  %v4_149f4 = mul i32 %v2_149f4, %v1_149f4
  %v5_149f4 = add i32 %v4_149f4, %v3_149f0.pre-phi
  store i32 %v5_149f4, i32* %r3.global-to-local, align 4
  %v2_149fc = add i32 %v1_149fc, 1
  store i32 %v2_149fc, i32* %r6.global-to-local, align 4
  %v0_14a00111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14a00111, i32* %r1.global-to-local, align 4
  %v3_14a04 = add i32 %v5_149f4, -40
  %v4_14a04 = inttoptr i32 %v3_14a04 to i32*
  store i32 %v0_14a00111, i32* %v4_14a04, align 4
  %v0_14a4c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a48.preheader

dec_label_pc_14a48.preheader:                     ; preds = %.thread8, %bb
  %v0_14a4c.pre = phi i32 [ %v1_149fc, %.thread8 ], [ %v0_14a4c.pre.pre, %bb ]
  %v0_14a50.pre = load i32, i32* @lr, align 4
  %v2_14a50 = add i32 %v0_14a50.pre, 196
  %v3_14a50 = inttoptr i32 %v2_14a50 to i32*
  br label %dec_label_pc_14a48

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_14a48
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_14a10 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a10 = add i32 %v0_14a10, -214748363
  %tmp139 = sub i32 214748362, %v0_14a10
  %v6_14a10 = and i32 %tmp139, %v0_14a10
  %v7_14a10 = icmp slt i32 %v6_14a10, 0
  %v8_14a10 = icmp slt i32 %v2_14a10, 0
  %v9_14a10 = icmp eq i32 %v0_14a10, 214748363
  %v3_14a14 = xor i1 %v8_14a10, %v7_14a10
  %v4_14a14 = or i1 %v9_14a10, %v3_14a14
  br i1 %v4_14a14, label %dec_label_pc_14a2c, label %dec_label_pc_14a18

dec_label_pc_14a18:                               ; preds = %dec_label_pc_14a0c
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_14a1c = icmp eq i32 %v0_14a10, 214748364
  br i1 %v9_14a1c, label %dec_label_pc_14a24, label %dec_label_pc_14a44

dec_label_pc_14a24:                               ; preds = %dec_label_pc_14a18
  %v8_14a28 = icmp ugt i8 %v2_14a4c, 55
  br i1 %v8_14a28, label %dec_label_pc_14a44, label %dec_label_pc_14a2c

dec_label_pc_14a2c:                               ; preds = %dec_label_pc_14a24, %dec_label_pc_14a0c
  %v2_14a30 = mul i32 %v0_14a10, 10
  %v1_14a34 = add i32 %v2_14a30, -48
  store i32 %v1_14a34, i32* %r3.global-to-local, align 4
  %v2_14a38 = add i32 %v1_14a34, %v3_14a4c
  br label %dec_label_pc_14a44

dec_label_pc_14a44:                               ; preds = %dec_label_pc_14a24, %dec_label_pc_14a18, %dec_label_pc_14a2c
  %storemerge = phi i32 [ %v2_14a38, %dec_label_pc_14a2c ], [ 2147483647, %dec_label_pc_14a18 ], [ 2147483647, %dec_label_pc_14a24 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_14a44 = add i32 %v0_14acc, 1
  store i32 %v1_14a44, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a48

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a48.preheader, %dec_label_pc_14a44
  %v0_14acc = phi i32 [ %v0_14a4c.pre, %dec_label_pc_14a48.preheader ], [ %v1_14a44, %dec_label_pc_14a44 ]
  store i32 196, i32* %r2.global-to-local, align 4
  %v1_14a4c = inttoptr i32 %v0_14acc to i8*
  %v2_14a4c = load i8, i8* %v1_14a4c, align 1
  %v3_14a4c = zext i8 %v2_14a4c to i32
  store i32 %v3_14a4c, i32* @ip, align 4
  %v4_14a50 = load i32, i32* %v3_14a50, align 4
  store i32 %v4_14a50, i32* %r3.global-to-local, align 4
  %v2_14a54 = mul nuw nsw i32 %v3_14a4c, 2
  store i32 %v2_14a54, i32* %r2.global-to-local, align 4
  %v2_14a58 = add i32 %v2_14a54, %v4_14a50
  %v3_14a58 = inttoptr i32 %v2_14a58 to i16*
  %v4_14a58 = load i16, i16* %v3_14a58, align 2
  %v6_14a58 = zext i16 %v4_14a58 to i32
  store i32 %v6_14a58, i32* %r3.global-to-local, align 4
  %v1_14a5c = and i32 %v6_14a58, 8
  %v2_14a5c = icmp eq i32 %v1_14a5c, 0
  br i1 %v2_14a5c, label %dec_label_pc_14a64, label %dec_label_pc_14a0c

dec_label_pc_14a64:                               ; preds = %dec_label_pc_14a48
  %v0_14a64 = load i32, i32* %r0.global-to-local, align 4
  %v1_14a64 = add i32 %v0_14a64, -1
  %v2_14a64 = inttoptr i32 %v1_14a64 to i8*
  %v3_14a64 = load i8, i8* %v2_14a64, align 1
  %v4_14a64 = zext i8 %v3_14a64 to i32
  store i32 %v4_14a64, i32* %r3.global-to-local, align 4
  %v7_14a68 = icmp eq i8 %v3_14a64, 37
  br i1 %v7_14a68, label %dec_label_pc_14a70, label %dec_label_pc_14b30

dec_label_pc_14a70:                               ; preds = %dec_label_pc_14a64
  %v7_14a70 = icmp eq i8 %v2_14a4c, 36
  %. = zext i1 %v7_14a70 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_14a7c = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_14a7c, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_14a70
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14a70, %bb144
  %v0_14a84 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_14a70 ]
  %v2_14a84 = icmp eq i32 %v0_14a84, 0
  %v0_14ab8 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_14a84, label %dec_label_pc_14ab8, label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %thread-pre-split
  %v2_14ab8 = icmp eq i32 %v0_14ab8, 0
  %v1_14a90 = add i32 %v0_14acc, 1
  store i32 %v1_14a90, i32* %r0.global-to-local, align 4
  br i1 %v2_14ab8, label %dec_label_pc_14e64, label %dec_label_pc_14a98

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a8c
  %v2_14a98 = sub i32 %v0_14a7c, %v0_14ab8
  %v4_14a98 = xor i32 %v0_14ab8, %v0_14a7c
  %v5_14a98 = xor i32 %v2_14a98, %v0_14a7c
  %v6_14a98 = and i32 %v5_14a98, %v4_14a98
  %v7_14a98 = icmp slt i32 %v6_14a98, 0
  %v8_14a98 = icmp slt i32 %v2_14a98, 0
  %v9_14a98 = icmp eq i32 %v0_14a7c, %v0_14ab8
  %v3_14a9c = xor i1 %v8_14a98, %v7_14a98
  %v4_14a9c = or i1 %v9_14a98, %v3_14a9c
  br i1 %v4_14a9c, label %dec_label_pc_14aac, label %bb145

bb145:                                            ; preds = %dec_label_pc_14a98
  store i32 %v0_14a7c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14aac

dec_label_pc_14aa8:                               ; preds = %dec_label_pc_14acc, %dec_label_pc_14ad4
  %v0_14aa8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14aa8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14aac

dec_label_pc_14aac:                               ; preds = %bb145, %dec_label_pc_14a98, %dec_label_pc_14aa8
  %v0_14aac = phi i32 [ %v0_14a64, %dec_label_pc_14aa8 ], [ %v1_14a90, %dec_label_pc_14a98 ], [ %v1_14a90, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_14aa8 ], [ %v0_14a7c, %dec_label_pc_14a98 ], [ %v0_14a7c, %bb145 ]
  store i32 %v0_14aac, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_14ae8.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_14ae8 = ptrtoint i8* %v2_14ae8.pre to i32
  br label %dec_label_pc_14ae8

dec_label_pc_14ab8:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_14ab8, 1
  br i1 %tmp146, label %dec_label_pc_14acc, label %dec_label_pc_14ac0

dec_label_pc_14ac0:                               ; preds = %dec_label_pc_14ab8
  %v7_14ac0 = icmp eq i8 %v2_14a4c, 109
  br i1 %v7_14ac0, label %dec_label_pc_14b30, label %dec_label_pc_14e64

dec_label_pc_14acc:                               ; preds = %dec_label_pc_14ab8
  %tmp183 = icmp ugt i32 %v0_14acc, %v0_14a64
  br i1 %tmp183, label %dec_label_pc_14ad4, label %dec_label_pc_14aa8

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14acc
  %v1_14ad4 = inttoptr i32 %v0_14a64 to i8*
  %v2_14ad4 = load i8, i8* %v1_14ad4, align 1
  %v3_14ad4 = zext i8 %v2_14ad4 to i32
  store i32 %v3_14ad4, i32* %r3.global-to-local, align 4
  %v7_14ad8 = icmp eq i8 %v2_14ad4, 48
  br i1 %v7_14ad8, label %dec_label_pc_14aa8, label %bb147

bb147:                                            ; preds = %dec_label_pc_14ad4
  %v1_14adc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_14adc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14ae8.loopexit:                      ; preds = %dec_label_pc_14af0
  %v1_14afc = load i32, i32* @r4, align 4
  %v3_14afc = or i32 %v1_14afc, %v0_14b10
  store i32 %v3_14afc, i32* @r4, align 4
  %v2_14b00 = add i32 %v0_14af476, 1
  store i32 %v2_14b00, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %dec_label_pc_14ae8.loopexit, %dec_label_pc_14aac
  %v0_14af476 = phi i32 [ %v2_14b00, %dec_label_pc_14ae8.loopexit ], [ %v0_14aac, %dec_label_pc_14aac ]
  store i32 %v3_14ae8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14af4 = inttoptr i32 %v0_14af476 to i8*
  br label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14b08, %dec_label_pc_14ae8
  %v0_14b10 = phi i32 [ %v2_14b10, %dec_label_pc_14b08 ], [ 1, %dec_label_pc_14ae8 ]
  %v0_14af0 = phi i32 [ %v5_14af0, %dec_label_pc_14b08 ], [ %v3_14ae8, %dec_label_pc_14ae8 ]
  %v1_14af0 = inttoptr i32 %v0_14af0 to i8*
  %v2_14af0 = load i8, i8* %v1_14af0, align 1
  %v3_14af0 = zext i8 %v2_14af0 to i32
  store i32 %v3_14af0, i32* %r2.global-to-local, align 4
  %v5_14af0 = add i32 %v0_14af0, 1
  store i32 %v5_14af0, i32* %r0.global-to-local, align 4
  %v2_14af4 = load i8, i8* %v1_14af4, align 1
  %v3_14af4 = zext i8 %v2_14af4 to i32
  store i32 %v3_14af4, i32* %r3.global-to-local, align 4
  %v9_14af8 = icmp eq i8 %v2_14af4, %v2_14af0
  br i1 %v9_14af8, label %dec_label_pc_14ae8.loopexit, label %dec_label_pc_14b08

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14af0
  %v1_14b08 = inttoptr i32 %v5_14af0 to i8*
  %v2_14b08 = load i8, i8* %v1_14b08, align 1
  %v3_14b08 = zext i8 %v2_14b08 to i32
  store i32 %v3_14b08, i32* %r3.global-to-local, align 4
  %v2_14b0c = icmp eq i8 %v2_14b08, 0
  %v2_14b10 = mul i32 %v0_14b10, 2
  store i32 %v2_14b10, i32* %r1.global-to-local, align 4
  br i1 %v2_14b0c, label %dec_label_pc_14b18, label %dec_label_pc_14af0

dec_label_pc_14b18:                               ; preds = %dec_label_pc_14b08
  %v1_14b18 = add i32 %v0_14af476, -1
  %v2_14b18 = inttoptr i32 %v1_14b18 to i8*
  %v3_14b18 = load i8, i8* %v2_14b18, align 1
  %v7_14b1c = icmp eq i8 %v3_14b18, 37
  %v0_14b20 = load i32, i32* @r4, align 4
  %v1_14b20 = and i32 %v0_14b20, 10
  store i32 %v1_14b20, i32* %r3.global-to-local, align 4
  %v4_14b24 = udiv i32 %v1_14b20, 2
  %v5_14b24 = sub nuw nsw i32 -1, %v4_14b24
  %v6_14b24 = and i32 %v0_14b20, %v5_14b24
  store i32 %v6_14b24, i32* @r4, align 4
  br i1 %v7_14b1c, label %dec_label_pc_14b2c, label %dec_label_pc_149e4

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14b18
  %v0_14b2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14b2c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b30:                               ; preds = %bb147, %dec_label_pc_14a64, %dec_label_pc_14ac0, %dec_label_pc_14b2c
  %v1_14b70 = phi i32 [ %v0_14af476, %dec_label_pc_14b2c ], [ %v0_14acc, %bb147 ], [ %v0_14acc, %dec_label_pc_14ac0 ], [ %v0_14acc, %dec_label_pc_14a64 ]
  %v0_14b6c = phi i32 [ %v5_14af0, %dec_label_pc_14b2c ], [ %v0_14a64, %bb147 ], [ %v0_14a64, %dec_label_pc_14ac0 ], [ %v0_14a64, %dec_label_pc_14a64 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_14b2c ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_14ac0 ], [ %stack_var_-44.1, %dec_label_pc_14a64 ]
  %v1_14b30 = inttoptr i32 %v0_14b6c to i8*
  %v2_14b30 = load i8, i8* %v1_14b30, align 1
  %v3_14b30 = zext i8 %v2_14b30 to i32
  store i32 %v3_14b30, i32* %r3.global-to-local, align 4
  %v7_14b34 = icmp eq i8 %v2_14b30, 42
  br i1 %v7_14b34, label %dec_label_pc_14b3c, label %dec_label_pc_14b7c

dec_label_pc_14b3c:                               ; preds = %dec_label_pc_14b30
  %v0_14b3c = load i32, i32* %fp.global-to-local, align 4
  %v2_14b3c = icmp eq i32 %v0_14b3c, 0
  br i1 %v2_14b3c, label %dec_label_pc_14b6c, label %dec_label_pc_14b44

dec_label_pc_14b44:                               ; preds = %dec_label_pc_14b3c
  %v1_14b44 = inttoptr i32 %v1_14b70 to i8*
  %v2_14b44 = load i8, i8* %v1_14b44, align 1
  %v3_14b44 = zext i8 %v2_14b44 to i32
  store i32 %v3_14b44, i32* %r3.global-to-local, align 4
  %v7_14b48 = icmp eq i8 %v2_14b44, 36
  br i1 %v7_14b48, label %dec_label_pc_14b50, label %dec_label_pc_14e64

dec_label_pc_14b50:                               ; preds = %dec_label_pc_14b44
  %v0_14b50 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_14b50, 1
  br i1 %tmp148, label %dec_label_pc_14e64, label %dec_label_pc_14b58

dec_label_pc_14b58:                               ; preds = %dec_label_pc_14b50
  %v0_14b5c = load i32, i32* %r8.global-to-local, align 4
  %v1_14b5c = load i32, i32* %sb.global-to-local, align 4
  %v3_14b5c = mul i32 %v1_14b5c, %v0_14b5c
  %v4_14b5c = add i32 %v3_14b5c, %v3_149f0.pre-phi
  store i32 %v4_14b5c, i32* %r3.global-to-local, align 4
  %v1_14b60 = add i32 %v1_14b70, 1
  store i32 %v1_14b60, i32* %r6.global-to-local, align 4
  %v2_14b64 = add i32 %v4_14b5c, -12
  %v3_14b64 = inttoptr i32 %v2_14b64 to i32*
  store i32 %v0_14b50, i32* %v3_14b64, align 4
  br label %dec_label_pc_14b78

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14b3c
  %v1_14b6c = add i32 %v0_14b6c, 1
  store i32 %v1_14b6c, i32* %r3.global-to-local, align 4
  %v9_14b70 = icmp eq i32 %v1_14b6c, %v1_14b70
  br i1 %v9_14b70, label %dec_label_pc_14b78, label %dec_label_pc_14e64

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14b6c, %dec_label_pc_14b58
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14b7c

dec_label_pc_14b7c:                               ; preds = %dec_label_pc_14b30, %dec_label_pc_14b78
  %v0_14b7c = load i32, i32* %r8.global-to-local, align 4
  %v2_14b7c = icmp eq i32 %v0_14b7c, 0
  br i1 %v2_14b7c, label %dec_label_pc_14b88, label %dec_label_pc_14ba8.loopexit

dec_label_pc_14b88:                               ; preds = %dec_label_pc_14b7c
  %v0_14b88 = load i32, i32* %r6.global-to-local, align 4
  %v1_14b88 = inttoptr i32 %v0_14b88 to i8*
  %v2_14b88 = load i8, i8* %v1_14b88, align 1
  %v3_14b88 = zext i8 %v2_14b88 to i32
  store i32 %v3_14b88, i32* %r3.global-to-local, align 4
  %v7_14b8c = icmp eq i8 %v2_14b88, 46
  br i1 %v7_14b8c, label %.thread20, label %dec_label_pc_14ba0

.thread20:                                        ; preds = %dec_label_pc_14b88
  %v2_14b90 = add i32 %v0_14b88, 1
  store i32 %v2_14b90, i32* %r6.global-to-local, align 4
  %v1_14b94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_14b94, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_149e4

dec_label_pc_14ba0:                               ; preds = %dec_label_pc_14b88
  %v0_14ba0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14ba0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_14ba8

dec_label_pc_14ba8.loopexit:                      ; preds = %dec_label_pc_14b7c
  %v1_14b80 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_14b80, i32* @r5, align 4
  %v0_14bb4.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ba8

dec_label_pc_14ba8:                               ; preds = %dec_label_pc_14ba8.loopexit, %dec_label_pc_14ba0
  %v0_14bb4.pre = phi i32 [ %v0_14bb4.pre.pre, %dec_label_pc_14ba8.loopexit ], [ %v0_14b88, %dec_label_pc_14ba0 ]
  store i32 -37036, i32* %r3.global-to-local, align 4
  %v0_14bac = load i32, i32* @lr, align 4
  %v2_14bac = add i32 %v0_14bac, -37036
  store i32 %v2_14bac, i32* %r1.global-to-local, align 4
  %v1_14bb4 = inttoptr i32 %v0_14bb4.pre to i8*
  br label %dec_label_pc_14bb0

dec_label_pc_14bb0:                               ; preds = %dec_label_pc_14bc4, %dec_label_pc_14ba8
  %v0_14bc4 = phi i32 [ %v1_14bc4, %dec_label_pc_14bc4 ], [ %v2_14bac, %dec_label_pc_14ba8 ]
  %v1_14bb0 = inttoptr i32 %v0_14bc4 to i8*
  %v2_14bb0 = load i8, i8* %v1_14bb0, align 1
  %v3_14bb0 = zext i8 %v2_14bb0 to i32
  store i32 %v3_14bb0, i32* %r2.global-to-local, align 4
  %v2_14bb4 = load i8, i8* %v1_14bb4, align 1
  %v3_14bb4 = zext i8 %v2_14bb4 to i32
  store i32 %v3_14bb4, i32* %r3.global-to-local, align 4
  %v9_14bb8 = icmp eq i8 %v2_14bb4, %v2_14bb0
  br i1 %v9_14bb8, label %bb149, label %dec_label_pc_14bc4

bb149:                                            ; preds = %dec_label_pc_14bb0
  %v2_14bbc = add i32 %v0_14bb4.pre, 1
  store i32 %v2_14bbc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14bc4:                               ; preds = %dec_label_pc_14bb0
  %v1_14bc4 = add i32 %v0_14bc4, 1
  %v2_14bc4 = inttoptr i32 %v1_14bc4 to i8*
  %v3_14bc4 = load i8, i8* %v2_14bc4, align 1
  %v4_14bc4 = zext i8 %v3_14bc4 to i32
  store i32 %v4_14bc4, i32* %r3.global-to-local, align 4
  store i32 %v1_14bc4, i32* %r1.global-to-local, align 4
  %v2_14bc8 = icmp eq i8 %v3_14bc4, 0
  br i1 %v2_14bc8, label %dec_label_pc_14bd0, label %dec_label_pc_14bb0

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bc4, %bb149
  %v1_14bf4 = phi i32 [ %v2_14bbc, %bb149 ], [ %v0_14bb4.pre, %dec_label_pc_14bc4 ]
  %v1_14bf0 = phi i32 [ %v0_14bc4, %bb149 ], [ %v1_14bc4, %dec_label_pc_14bc4 ]
  %v2_14bd8 = sub i32 %v1_14bf0, %v2_14bac
  store i32 %v2_14bd8, i32* %r3.global-to-local, align 4
  %v8_14be0 = icmp sgt i32 %v2_14bd8, 1
  br i1 %v8_14be0, label %.thread24, label %dec_label_pc_14be4

dec_label_pc_14be4:                               ; preds = %dec_label_pc_14bd0
  %v1_14be4 = inttoptr i32 %v1_14bf4 to i8*
  %v2_14be4 = load i8, i8* %v1_14be4, align 1
  %v3_14be4 = zext i8 %v2_14be4 to i32
  store i32 %v3_14be4, i32* %r2.global-to-local, align 4
  %v1_14be8 = inttoptr i32 %v1_14bf0 to i8*
  %v2_14be8 = load i8, i8* %v1_14be8, align 1
  %v3_14be8 = zext i8 %v2_14be8 to i32
  store i32 %v3_14be8, i32* %r3.global-to-local, align 4
  %v9_14bec = icmp eq i8 %v2_14be4, %v2_14be8
  br i1 %v9_14bec, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_14be4
  %v2_14bf0 = add i32 %v1_14bf0, 9
  store i32 %v2_14bf0, i32* %r1.global-to-local, align 4
  %v2_14bf4 = add i32 %v1_14bf4, 1
  store i32 %v2_14bf4, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_14be4, %dec_label_pc_14bd0, %bb150
  %v0_14bfc = phi i32 [ %v1_14bf0, %dec_label_pc_14be4 ], [ %v1_14bf0, %dec_label_pc_14bd0 ], [ %v2_14bf0, %bb150 ]
  %v0_14bf8 = phi i32 [ %v1_14bf4, %dec_label_pc_14be4 ], [ %v1_14bf4, %dec_label_pc_14bd0 ], [ %v2_14bf4, %bb150 ]
  %v1_14bf8 = inttoptr i32 %v0_14bf8 to i8*
  %v2_14bf8 = load i8, i8* %v1_14bf8, align 1
  %v3_14bf8 = zext i8 %v2_14bf8 to i32
  store i32 %v3_14bf8, i32* %r2.global-to-local, align 4
  %v1_14bfc = add i32 %v0_14bfc, 9
  %v2_14bfc = inttoptr i32 %v1_14bfc to i8*
  %v3_14bfc = load i8, i8* %v2_14bfc, align 1
  %v4_14bfc = zext i8 %v3_14bfc to i32
  store i32 %v4_14bfc, i32* %r3.global-to-local, align 4
  %v2_14c00 = icmp eq i8 %v2_14bf8, 0
  %v3_14c04 = mul nuw nsw i32 %v4_14bfc, 256
  store i32 %v3_14c04, i32* @ip, align 4
  br i1 %v2_14c00, label %dec_label_pc_14e64, label %dec_label_pc_14c0c

dec_label_pc_14c0c:                               ; preds = %.thread24
  store i32 -36936, i32* %r3.global-to-local, align 4
  %v2_14c10 = add i32 %v0_14bac, -36936
  store i32 %v2_14c10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c14

dec_label_pc_14c14:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14c0c
  %v1_14c28 = phi i32 [ %v1_14c98, %dec_label_pc_14c98 ], [ %v2_14c10, %dec_label_pc_14c0c ]
  %v1_14c14 = inttoptr i32 %v1_14c28 to i8*
  %v2_14c14 = load i8, i8* %v1_14c14, align 1
  %v3_14c14 = zext i8 %v2_14c14 to i32
  store i32 %v3_14c14, i32* %r3.global-to-local, align 4
  %v9_14c18 = icmp eq i8 %v2_14c14, %v2_14bf8
  br i1 %v9_14c18, label %dec_label_pc_14c20, label %dec_label_pc_14c98

dec_label_pc_14c20:                               ; preds = %dec_label_pc_14c14
  store i32 %v2_14c10, i32* %r3.global-to-local, align 4
  %v2_14c28 = sub i32 %v1_14c28, %v2_14c10
  store i32 %v2_14c28, i32* %r1.global-to-local, align 4
  %v7_14c30 = icmp slt i32 %v2_14c28, 18
  br i1 %v7_14c30, label %bb152, label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14c20
  %v1_14c34 = and i32 %v3_14c04, 1024
  %v2_14c34 = icmp eq i32 %v1_14c34, 0
  br i1 %v2_14c34, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_14c34
  %v2_14c38 = add i32 %v2_14c28, -2
  store i32 %v2_14c38, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_14c20, %dec_label_pc_14c34, %bb151
  %v0_14c40 = phi i32 [ %v2_14c28, %dec_label_pc_14c20 ], [ %v2_14c28, %dec_label_pc_14c34 ], [ %v2_14c38, %bb151 ]
  store i32 -36984, i32* %r3.global-to-local, align 4
  %v1_14c40 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c40 = add i32 %v1_14c40, 32
  %v3_14c40 = inttoptr i32 %v2_14c40 to i32*
  store i32 %v0_14c40, i32* %v3_14c40, align 4
  %v0_14c44 = load i32, i32* @lr, align 4
  %v1_14c44 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c44 = add i32 %v1_14c44, %v0_14c44
  store i32 %v2_14c44, i32* %r3.global-to-local, align 4
  %v1_14c48 = add i32 %v2_14c44, -1
  store i32 %v1_14c48, i32* %r0.global-to-local, align 4
  %v0_14c50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14c4c

dec_label_pc_14c4c:                               ; preds = %dec_label_pc_14c4c, %bb152
  %v0_14c4c = phi i32 [ %v1_14c4c, %dec_label_pc_14c4c ], [ %v1_14c48, %bb152 ]
  %v1_14c4c = add i32 %v0_14c4c, 1
  %v2_14c4c = inttoptr i32 %v1_14c4c to i8*
  %v3_14c4c = load i8, i8* %v2_14c4c, align 1
  %v4_14c4c = zext i8 %v3_14c4c to i32
  store i32 %v4_14c4c, i32* %r3.global-to-local, align 4
  store i32 %v1_14c4c, i32* %r0.global-to-local, align 4
  %v8_14c54 = icmp sgt i32 %v0_14c50.pre, %v4_14c4c
  br i1 %v8_14c54, label %dec_label_pc_14c4c, label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c4c
  %v2_14c60.neg = sub i32 36984, %v0_14c44
  %v2_14c64 = add i32 %v2_14c60.neg, %v1_14c4c
  %v2_14c68 = mul i32 %v2_14c64, 2
  store i32 %v2_14c68, i32* %r2.global-to-local, align 4
  %v2_14c6c = add i32 %v0_14c44, -37000
  store i32 %v2_14c6c, i32* %r3.global-to-local, align 4
  %v2_14c70 = add i32 %v2_14c68, %v2_14c6c
  %v3_14c70 = inttoptr i32 %v2_14c70 to i16*
  %v4_14c70 = load i16, i16* %v3_14c70, align 2
  %v6_14c70 = sext i16 %v4_14c70 to i32
  store i32 %v6_14c70, i32* %r1.global-to-local, align 4
  %v2_14c78 = add i32 %v0_14c44, -37016
  store i32 %v2_14c78, i32* %r3.global-to-local, align 4
  %v2_14c7c = add i32 %v2_14c68, %v2_14c78
  %v3_14c7c = inttoptr i32 %v2_14c7c to i16*
  %v4_14c7c = load i16, i16* %v3_14c7c, align 2
  %v6_14c7c = sext i16 %v4_14c7c to i32
  %v1_14c80 = load i32, i32* @ip, align 4
  %v2_14c80 = or i32 %v1_14c80, %v6_14c70
  %v2_14c84 = and i32 %v2_14c80, %v6_14c7c
  store i32 %v2_14c84, i32* %r1.global-to-local, align 4
  store i32 -36936, i32* %r3.global-to-local, align 4
  %v2_14c8c = add i32 %v0_14c44, -36936
  store i32 %v2_14c8c, i32* %r0.global-to-local, align 4
  store i32 %v2_14c84, i32* %stack_var_-72, align 4
  %v0_14cb0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ca4

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14c14
  %v1_14c98 = add i32 %v1_14c28, 1
  %v2_14c98 = inttoptr i32 %v1_14c98 to i8*
  %v3_14c98 = load i8, i8* %v2_14c98, align 1
  %v4_14c98 = zext i8 %v3_14c98 to i32
  store i32 %v4_14c98, i32* %r3.global-to-local, align 4
  store i32 %v1_14c98, i32* %r0.global-to-local, align 4
  %v2_14c9c = icmp eq i8 %v3_14c98, 0
  br i1 %v2_14c9c, label %dec_label_pc_14ca4, label %dec_label_pc_14c14

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14c58
  %v0_14cb0 = phi i32 [ %v0_14cb0.pre, %dec_label_pc_14c58 ], [ %v0_14bf8, %dec_label_pc_14c98 ]
  %v0_14cac = phi i32 [ %v1_14c80, %dec_label_pc_14c58 ], [ %v3_14c04, %dec_label_pc_14c98 ]
  %v0_14ca4 = load i32, i32* @r4, align 4
  %v1_14ca4 = and i32 %v0_14ca4, 4
  %v1_14ca8 = and i32 %v0_14ca4, -5
  store i32 %v1_14ca8, i32* %r3.global-to-local, align 4
  %v1_14cac = and i32 %v0_14cac, 3840
  store i32 %v1_14cac, i32* %r2.global-to-local, align 4
  %v1_14cb0 = inttoptr i32 %v0_14cb0 to i8*
  %v2_14cb0 = load i8, i8* %v1_14cb0, align 1
  %v3_14cb0 = zext i8 %v2_14cb0 to i32
  store i32 %v3_14cb0, i32* %r1.global-to-local, align 4
  %v2_14cb4 = or i32 %v1_14ca8, %v1_14cac
  store i32 %v2_14cb4, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_14ca4, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_14cc0 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cc0 = add i32 %v1_14cc0, 20
  %v3_14cc0 = inttoptr i32 %v2_14cc0 to i32*
  store i32 %tmp181, i32* %v3_14cc0, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_14cc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14cc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cc8 = add i32 %v1_14cc8, 12
  %v3_14cc8 = inttoptr i32 %v2_14cc8 to i32*
  store i32 %v0_14cc8, i32* %v3_14cc8, align 4
  %v0_14ccc = load i32, i32* %r7.global-to-local, align 4
  %v1_14ccc = add i32 %v0_14ccc, 4
  %v2_14ccc = inttoptr i32 %v1_14ccc to i32*
  %v3_14ccc = load i32, i32* @r5, align 4
  store i32 %v3_14ccc, i32* %v2_14ccc, align 4
  %v4_14ccc = add i32 %v0_14ccc, 8
  %v5_14ccc = inttoptr i32 %v4_14ccc to i32*
  %v6_14ccc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_14ccc, i32* %v5_14ccc, align 4
  %v0_14cd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14cd0 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cd0 = add i32 %v1_14cd0, 16
  %v3_14cd0 = inttoptr i32 %v2_14cd0 to i32*
  store i32 %v0_14cd0, i32* %v3_14cd0, align 4
  %v0_14cd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14cd4 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cd4 = add i32 %v1_14cd4, 28
  %v3_14cd4 = inttoptr i32 %v2_14cd4 to i32*
  store i32 %v0_14cd4, i32* %v3_14cd4, align 4
  %v0_14cd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_14cd8 = inttoptr i32 %v0_14cd8 to i8*
  %v2_14cd8 = load i8, i8* %v1_14cd8, align 1
  %v3_14cd8 = zext i8 %v2_14cd8 to i32
  store i32 %v3_14cd8, i32* %r2.global-to-local, align 4
  %v2_14cdc = icmp eq i8 %v2_14cd8, 0
  br i1 %v2_14cdc, label %dec_label_pc_14ce4, label %dec_label_pc_14d68

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14ca4
  %v0_14ce4 = load i32, i32* %r6.global-to-local, align 4
  %v1_14ce4 = inttoptr i32 %v0_14ce4 to i8*
  %v2_14ce4 = load i8, i8* %v1_14ce4, align 1
  %v3_14ce4 = zext i8 %v2_14ce4 to i32
  store i32 %v3_14ce4, i32* %r3.global-to-local, align 4
  %v7_14ce8 = icmp eq i8 %v2_14ce4, 109
  br i1 %v7_14ce8, label %.thread28, label %dec_label_pc_14cfc

.thread28:                                        ; preds = %dec_label_pc_14ce4
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_14cf0 = load i32, i32* %r7.global-to-local, align 4
  %v3_14cf0 = add i32 %v2_14cf0, 32
  %v4_14cf0 = inttoptr i32 %v3_14cf0 to i32*
  store i32 20, i32* %v4_14cf0, align 4
  %v1_14cf4 = load i32, i32* %r2.global-to-local, align 4
  %v2_14cf4 = load i32, i32* %r7.global-to-local, align 4
  %v3_14cf4 = add i32 %v2_14cf4, 28
  %v4_14cf4 = inttoptr i32 %v3_14cf4 to i32*
  store i32 %v1_14cf4, i32* %v4_14cf4, align 4
  br label %dec_label_pc_14d68

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14ce4
  store i32 704, i32* %r3.global-to-local, align 4
  %v0_14d00 = load i32, i32* @lr, align 4
  %v2_14d00 = add i32 %v0_14d00, 704
  %v3_14d00 = inttoptr i32 %v2_14d00 to i32*
  %v4_14d00 = load i32, i32* %v3_14d00, align 4
  store i32 %v4_14d00, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_14d08 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d08 = add i32 %v1_14d08, 32
  %v3_14d08 = inttoptr i32 %v2_14d08 to i32*
  store i32 21, i32* %v3_14d08, align 4
  %v0_14d0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14d0c, i32* @ip, align 4
  %v1_14d10 = add i32 %v0_14d0c, 10
  store i32 %v1_14d10, i32* %r0.global-to-local, align 4
  %v0_14d18.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14d18 = inttoptr i32 %v0_14d18.pre to i8*
  br label %dec_label_pc_14d14

dec_label_pc_14d14:                               ; preds = %dec_label_pc_14d58, %dec_label_pc_14cfc
  %v1_14d24 = phi i32 [ %v1_14d58, %dec_label_pc_14d58 ], [ %v0_14d0c, %dec_label_pc_14cfc ]
  %v1_14d14 = inttoptr i32 %v1_14d24 to i8*
  %v2_14d14 = load i8, i8* %v1_14d14, align 1
  %v3_14d14 = zext i8 %v2_14d14 to i32
  store i32 %v3_14d14, i32* %r2.global-to-local, align 4
  %v2_14d18 = load i8, i8* %v1_14d18, align 1
  %v3_14d18 = zext i8 %v2_14d18 to i32
  store i32 %v3_14d18, i32* %r3.global-to-local, align 4
  %v9_14d1c = icmp eq i8 %v2_14d14, %v2_14d18
  br i1 %v9_14d1c, label %dec_label_pc_14d24, label %dec_label_pc_14d58

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14d14
  %v2_14d24 = sub i32 %v1_14d24, %v0_14d0c
  store i32 %v2_14d24, i32* %r3.global-to-local, align 4
  %v0_14d2c = load i32, i32* %r7.global-to-local, align 4
  %v1_14d2c = add i32 %v0_14d2c, 4
  store i32 %v1_14d2c, i32* %r0.global-to-local, align 4
  %v0_14d30 = load i32, i32* @lr, align 4
  %v2_14d30 = add i32 %v0_14d30, 13216
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_14d38 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_14d38, i32* %r2.global-to-local, align 4
  %v4_14d3c = mul i32 %v2_14d24, 4
  %v5_14d3c = add i32 %v2_14d30, %v4_14d3c
  %v6_14d3c = inttoptr i32 %v5_14d3c to i32*
  %v7_14d3c = load i32, i32* %v6_14d3c, align 4
  store i32 %v7_14d3c, i32* @ip, align 4
  store i32 85320, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14d3c)
  %v0_14d48 = load i32, i32* %r0.global-to-local, align 4
  %v1_14d4c = load i32, i32* %r7.global-to-local, align 4
  %v2_14d4c = add i32 %v1_14d4c, 28
  %v3_14d4c = inttoptr i32 %v2_14d4c to i32*
  store i32 %v0_14d48, i32* %v3_14d4c, align 4
  %v7_14d50 = icmp sgt i32 %v0_14d48, 5
  br i1 %v7_14d50, label %dec_label_pc_14e64, label %dec_label_pc_14d68

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d14
  %v1_14d58 = add i32 %v1_14d24, 1
  store i32 %v1_14d58, i32* %r1.global-to-local, align 4
  %v3_14d5c = icmp ult i32 %v1_14d58, %v1_14d10
  br i1 %v3_14d5c, label %dec_label_pc_14d14, label %dec_label_pc_14e64

dec_label_pc_14d68:                               ; preds = %.thread28, %dec_label_pc_14d24, %dec_label_pc_14ca4
  %v0_14d68 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_14d68, 1
  br i1 %tmp156, label %dec_label_pc_14e14, label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d68
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_14d88 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_14d74

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14dfc, %dec_label_pc_14d70
  %v9_14d94 = phi i32 [ 0, %dec_label_pc_14d70 ], [ %v1_14e00, %dec_label_pc_14dfc ]
  %v7_14d78 = icmp sgt i32 %v9_14d94, 2
  br i1 %v7_14d78, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_14d74
  store i32 %v9_14d88, i32* %r3.global-to-local, align 4
  %v10_14d94 = add i32 %v9_14d94, %v9_14d88
  store i32 %v10_14d94, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_14d74
  store i32 %v3_149f0.pre-phi, i32* @ip, align 4
  %v12_14d7c = mul i32 %v9_14d94, 4
  %v13_14d7c = add i32 %v12_14d7c, %v3_149f0.pre-phi
  store i32 %v13_14d7c, i32* %r3.global-to-local, align 4
  %v9_14d84 = add i32 %v13_14d7c, -12
  %v10_14d84 = inttoptr i32 %v9_14d84 to i8*
  %v11_14d84 = load i8, i8* %v10_14d84, align 4
  %v12_14d84 = zext i8 %v11_14d84 to i32
  store i32 %v12_14d84, i32* %r2.global-to-local, align 4
  %v9_14d8c = load i32, i32* %r7.global-to-local, align 4
  %v10_14d8c = add i32 %v9_14d8c, %v9_14d94
  store i32 %v10_14d8c, i32* %r3.global-to-local, align 4
  store i32 %v12_14d84, i32* %r1.global-to-local, align 4
  %v11_14d98 = add i32 %v10_14d8c, 36
  %v12_14d98 = inttoptr i32 %v11_14d98 to i8*
  store i8 %v11_14d84, i8* %v12_14d98, align 1
  %v0_14d9c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_14dbc = phi i32 [ %v10_14d94, %.thread38 ], [ %v0_14d9c.pre, %bb157 ]
  %v1_14d9c = load i32, i32* %fp.global-to-local, align 4
  %v2_14d9c = sub i32 %v0_14dbc, %v1_14d9c
  %v4_14d9c = xor i32 %v1_14d9c, %v0_14dbc
  %v5_14d9c = xor i32 %v2_14d9c, %v0_14dbc
  %v6_14d9c = and i32 %v5_14d9c, %v4_14d9c
  %v7_14d9c = icmp slt i32 %v6_14d9c, 0
  %v8_14d9c = icmp slt i32 %v2_14d9c, 0
  %v9_14d9c = icmp eq i32 %v0_14dbc, %v1_14d9c
  %v3_14da0 = xor i1 %v8_14d9c, %v7_14d9c
  %v4_14da0 = or i1 %v9_14d9c, %v3_14da0
  br i1 %v4_14da0, label %dec_label_pc_14db0, label %dec_label_pc_14da4

dec_label_pc_14da4:                               ; preds = %bb158
  %v1_14da4 = add i32 %v0_14dbc, -9
  %v3_14da4 = sub i32 8, %v0_14dbc
  %v4_14da4 = and i32 %v3_14da4, %v0_14dbc
  %v5_14da4 = icmp slt i32 %v4_14da4, 0
  %v6_14da4 = icmp slt i32 %v1_14da4, 0
  %v7_14da4 = icmp eq i32 %v0_14dbc, 9
  %v3_14da8 = xor i1 %v6_14da4, %v5_14da4
  %v4_14da8 = or i1 %v7_14da4, %v3_14da8
  br i1 %v4_14da8, label %dec_label_pc_14dac, label %dec_label_pc_14e64

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14da4
  store i32 %v0_14dbc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14db0

dec_label_pc_14db0:                               ; preds = %bb158, %dec_label_pc_14dac
  store i32 %v3_149f0.pre-phi, i32* @r2, align 4
  %v1_14db4 = load i32, i32* %r8.global-to-local, align 4
  %v4_14db4 = mul i32 %v1_14db4, 4
  %v5_14db4 = add i32 %v4_14db4, %v3_149f0.pre-phi
  store i32 %v5_14db4, i32* %sb.global-to-local, align 4
  %v1_14db8 = add i32 %v5_14db4, -40
  %v2_14db8 = inttoptr i32 %v1_14db8 to i32*
  %v3_14db8 = load i32, i32* %v2_14db8, align 4
  store i32 %v3_14db8, i32* %r5.global-to-local, align 4
  %v1_14dbc = add i32 %v0_14dbc, -1
  store i32 %v1_14dbc, i32* %r3.global-to-local, align 4
  %v0_14dc0 = load i32, i32* %r7.global-to-local, align 4
  %v4_14dc0 = mul i32 %v1_14dbc, 4
  %v5_14dc0 = add i32 %v0_14dc0, %v4_14dc0
  store i32 %v5_14dc0, i32* %sl.global-to-local, align 4
  %v7_14dc4 = icmp eq i32 %v3_14db8, 8
  %v1_14dc8 = add i32 %v5_14dc0, 40
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i32*
  %v3_14dc8 = load i32, i32* %v2_14dc8, align 4
  store i32 %v3_14dc8, i32* @r0, align 4
  br i1 %v7_14dc4, label %dec_label_pc_14dfc, label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14db0
  %v9_14dd0 = icmp eq i32 %v3_14dc8, %v3_14db8
  br i1 %v9_14dd0, label %dec_label_pc_14df4, label %bb159

bb159:                                            ; preds = %dec_label_pc_14dd0
  %v8_14dd4 = icmp eq i32 %v3_14dc8, 8
  br i1 %v8_14dd4, label %dec_label_pc_14df4, label %dec_label_pc_14ddc

dec_label_pc_14ddc:                               ; preds = %bb159
  %v0_14ddc = call i32 @_promoted_size()
  %v0_14de4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14de4, i32* @r0, align 4
  %v0_14de8 = call i32 @_promoted_size()
  store i32 %v0_14de8, i32* %r0.global-to-local, align 4
  %v8_14df0 = icmp sgt i32 %v0_14ddc, %v0_14de8
  br i1 %v8_14df0, label %dec_label_pc_14dfc, label %dec_label_pc_14ddc.dec_label_pc_14df4_crit_edge

dec_label_pc_14ddc.dec_label_pc_14df4_crit_edge:  ; preds = %dec_label_pc_14ddc
  %v0_14df4.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_14df8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14ddc.dec_label_pc_14df4_crit_edge, %dec_label_pc_14dd0, %bb159
  %v1_14df8 = phi i32 [ %v1_14df8.pre, %dec_label_pc_14ddc.dec_label_pc_14df4_crit_edge ], [ %v5_14dc0, %dec_label_pc_14dd0 ], [ %v5_14dc0, %bb159 ]
  %v0_14df4 = phi i32 [ %v0_14df4.pre, %dec_label_pc_14ddc.dec_label_pc_14df4_crit_edge ], [ %v5_14db4, %dec_label_pc_14dd0 ], [ %v5_14db4, %bb159 ]
  %v1_14df4 = add i32 %v0_14df4, -40
  %v2_14df4 = inttoptr i32 %v1_14df4 to i32*
  %v3_14df4 = load i32, i32* %v2_14df4, align 4
  store i32 %v3_14df4, i32* %r3.global-to-local, align 4
  %v2_14df8 = add i32 %v1_14df8, 40
  %v3_14df8 = inttoptr i32 %v2_14df8 to i32*
  store i32 %v3_14df4, i32* %v3_14df8, align 4
  br label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14ddc, %dec_label_pc_14db0, %dec_label_pc_14df4
  %v0_14dfc = load i32, i32* %r7.global-to-local, align 4
  %v1_14dfc = add i32 %v0_14dfc, 28
  %v2_14dfc = inttoptr i32 %v1_14dfc to i32*
  %v3_14dfc = load i32, i32* %v2_14dfc, align 4
  %v0_14e00 = load i32, i32* %r8.global-to-local, align 4
  %v1_14e00 = add i32 %v0_14e00, 1
  store i32 %v1_14e00, i32* %r8.global-to-local, align 4
  %v1_14e04 = add i32 %v3_14dfc, 2
  store i32 %v1_14e04, i32* %r3.global-to-local, align 4
  %v6_14e0c = icmp slt i32 %v1_14e00, %v1_14e04
  br i1 %v6_14e0c, label %dec_label_pc_14d74, label %dec_label_pc_14e30

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14d68
  %v0_14e14 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e14 = add i32 %v0_14e14, 28
  %v2_14e14 = inttoptr i32 %v1_14e14 to i32*
  %v3_14e14 = load i32, i32* %v2_14e14, align 4
  store i32 %v3_14e14, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_14e1c = add i32 %v0_14e14, 38
  %v4_14e1c = inttoptr i32 %v3_14e1c to i8*
  store i8 1, i8* %v4_14e1c, align 1
  %v0_14e20 = load i32, i32* %r2.global-to-local, align 4
  %v3_14e20 = mul i32 %v0_14e20, 4
  store i32 %v3_14e20, i32* @r2, align 4
  %v0_14e24 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e24 = add i32 %v0_14e24, 40
  store i32 %v1_14e24, i32* @r0, align 4
  %v2_14e28 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_14e28, i32* @r1, align 4
  %v0_14e2c = call i32 @memcpy()
  store i32 %v0_14e2c, i32* %r0.global-to-local, align 4
  %v0_14e30.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14e30

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14dfc, %dec_label_pc_14e14
  %v2_14e4c = phi i32 [ %v0_14e30.pre, %dec_label_pc_14e14 ], [ %v0_14dfc, %dec_label_pc_14dfc ]
  %v1_14e30 = add i32 %v2_14e4c, 16
  %v2_14e30 = inttoptr i32 %v1_14e30 to i32*
  %v3_14e30 = load i32, i32* %v2_14e30, align 4
  store i32 %v3_14e30, i32* %r3.global-to-local, align 4
  %v1_14e34 = and i32 %v3_14e30, 128
  %v2_14e34 = icmp eq i32 %v1_14e34, 0
  br i1 %v2_14e34, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_14e30
  %v3_14e38 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_14e38, i32* %r3.global-to-local, align 4
  %v2_14e3c = inttoptr i32 %v2_14e4c to i32*
  %v3_14e3c = load i32, i32* %v2_14e3c, align 4
  %v2_14e44.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_14e44 = sub i32 %v2_14e44.pre, %v3_14e38
  store i32 %v3_14e44, i32* %r3.global-to-local, align 4
  %v5_14e48 = mul i32 %v3_14e44, 4
  %v6_14e48 = add i32 %v5_14e48, %v3_14e3c
  store i32 %v6_14e48, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_14e30
  %v1_14e4045 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e4046 = add i32 %v1_14e4045, 1
  store i32 %v2_14e4046, i32* %r3.global-to-local, align 4
  %v3_14e4c = inttoptr i32 %v2_14e4c to i32*
  store i32 %v2_14e4046, i32* %v3_14e4c, align 4
  %v0_14e50.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_14e58 = phi i32 [ %v2_14e4c, %.thread48 ], [ %v0_14e50.pre, %.thread50 ]
  %v1_14e50 = add i32 %v1_14e58, 28
  %v2_14e50 = inttoptr i32 %v1_14e50 to i32*
  %v3_14e50 = load i32, i32* %v2_14e50, align 4
  store i32 %v3_14e50, i32* %r3.global-to-local, align 4
  %v1_14e54 = add i32 %v3_14e50, 2
  store i32 %v1_14e54, i32* %r0.global-to-local, align 4
  %v0_14e58 = load i32, i32* %fp.global-to-local, align 4
  %v2_14e58 = add i32 %v1_14e58, 24
  %v3_14e58 = inttoptr i32 %v2_14e58 to i32*
  store i32 %v0_14e58, i32* %v3_14e58, align 4
  br i1 %v2_14e34, label %dec_label_pc_14e68, label %bb161

bb161:                                            ; preds = %bb160
  %v1_14e5c = load i32, i32* @r2, align 4
  %v2_14e5c = load i32, i32* %r7.global-to-local, align 4
  %v3_14e5c = inttoptr i32 %v2_14e5c to i32*
  store i32 %v1_14e5c, i32* %v3_14e5c, align 4
  br label %dec_label_pc_14e68

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14d58, %dec_label_pc_14978, %dec_label_pc_14ac0, %dec_label_pc_14b6c, %dec_label_pc_14b44, %dec_label_pc_14b50, %dec_label_pc_14a8c, %dec_label_pc_14da4, %dec_label_pc_14d24, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e68

dec_label_pc_14e68:                               ; preds = %bb161, %bb160, %dec_label_pc_14e64
  %v2_14e6c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14e6c, i32* @r4, align 4
  store i32 %v6_14934, i32* @r5, align 4
  store i32 %v27_14934, i32* @lr, align 4
  %v1_14e70 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14e70

; uselistorder directives
  uselistorder i32 %v3_14e44, { 1, 0 }
  uselistorder i32 %v1_14e00, { 1, 2, 0 }
  uselistorder i32 %v2_14d9c, { 1, 0 }
  uselistorder i32 %v1_14d9c, { 1, 0, 2 }
  uselistorder i32 %v0_14dbc, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_14d94, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14d58, { 1, 2, 0 }
  uselistorder i32 %v0_14d48, { 1, 0 }
  uselistorder i32 %v1_14d24, { 1, 0, 2 }
  uselistorder i32 %v1_14c98, { 1, 2, 0 }
  uselistorder i32 %v1_14c80, { 1, 0 }
  uselistorder i32 %v2_14c68, { 2, 1, 0 }
  uselistorder i32 %v1_14c4c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14c44, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_14c28, { 1, 0, 2 }
  uselistorder i32 %v2_14c10, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14c04, { 2, 1, 0 }
  uselistorder i32 %v1_14bc4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14bb4.pre, { 0, 2, 1 }
  uselistorder i32 %v2_14b90, { 1, 0 }
  uselistorder i32 %v5_14af0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14af0, { 1, 0 }
  uselistorder i32 %v0_14af476, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_14a98, { 1, 0 }
  uselistorder i32 %v0_14ab8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_14a7c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_14a64, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_14a54, { 1, 0 }
  uselistorder i32 %v3_14a4c, { 0, 2, 1 }
  uselistorder i8 %v2_14a4c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14acc, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_14a10, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_149fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_149e4, { 1, 0 }
  uselistorder i32 %v3_149f0.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_14998, { 0, 2, 1 }
  uselistorder i32 %v2_14984, { 1, 0, 2 }
  uselistorder i32 %v0_14938, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 17, 18, 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20 }
  uselistorder i32* %r6.global-to-local, { 9, 15, 11, 13, 10, 0, 1, 12, 2, 14, 3, 4, 5, 6, 7, 8, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 60, 51, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 17, 46, 49, 50, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 26, 27, 25, 17, 28, 18, 19, 20, 29, 21, 30, 31, 22, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 704, { 1, 2, 0 }
  uselistorder i32 -5, { 3, 1, 0, 2 }
  uselistorder i32 -36936, { 0, 2, 1, 3 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1, 6 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 2147483647, { 3, 4, 1, 6, 7, 0, 2, 5 }
  uselistorder i32 196, { 2, 1, 4, 0, 5, 6, 7, 3 }
  uselistorder i32 -72, { 1, 0 }
  uselistorder label %dec_label_pc_14e68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e64, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_14e30, { 1, 0 }
  uselistorder label %dec_label_pc_14dfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14df4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14db0, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_14d68, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b7c, { 1, 0 }
  uselistorder label %dec_label_pc_14b30, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14aac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14aa8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_14a48, { 1, 0 }
  uselistorder label %dec_label_pc_14a44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a48.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_149e8, { 1, 0 }
  uselistorder label %dec_label_pc_149bc, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14ea4 = load i32, i32* @r4, align 4
  store i32 %v3_14ea4, i32* %stack_var_-16, align 4
  %v6_14ea4 = load i32, i32* @r5, align 4
  %v9_14ea4 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14eb0 = call i32 @strlen(i8* %arg1)
  store i32 %v3_14eb0, i32* @r6, align 4
  %v0_14eb8 = load i32, i32* @r5, align 4
  %v0_14ebc = load i32, i32* @r4, align 4
  %v5_14ec8 = inttoptr i32 %v0_14eb8 to i16*
  %v6_14ec8 = call i32 @__GI_fwrite_unlocked(i32 %v0_14ebc, i32 1, i32 %v3_14eb0, i16* %v5_14ec8)
  %v1_14ecc = load i32, i32* @r6, align 4
  %v9_14ecc = icmp eq i32 %v6_14ec8, %v1_14ecc
  br i1 %v9_14ecc, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_14ed8 = phi i32 [ %v6_14ec8, %entry ], [ -1, %bb ]
  %v2_14ed4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ed4, i32* @r4, align 4
  store i32 %v6_14ea4, i32* @r5, align 4
  store i32 %v9_14ea4, i32* @r6, align 4
  ret i32 %v1_14ed8

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v9_14edc = load i32, i32* @r6, align 4
  %v12_14edc = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_14ee4 = load i16, i16* %arg4, align 2
  %v1_14ee8 = and i16 %v3_14ee4, 192
  %v2_14eec = icmp eq i16 %v1_14ee8, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_14eec, label %dec_label_pc_14f18, label %dec_label_pc_14f04

dec_label_pc_14f04:                               ; preds = %entry
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_14f0c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_14f10 = icmp eq i32 %v4_14f0c, 0
  br i1 %v2_14f10, label %dec_label_pc_14f18thread-pre-split, label %dec_label_pc_14f80

dec_label_pc_14f18thread-pre-split:               ; preds = %dec_label_pc_14f04
  %v0_14f18.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_14f18

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f18thread-pre-split, %entry
  %v0_14f3c = phi i32 [ %v0_14f18.pr, %dec_label_pc_14f18thread-pre-split ], [ %arg2, %entry ]
  %v2_14f18 = icmp eq i32 %v0_14f3c, 0
  br i1 %v2_14f18, label %dec_label_pc_14f80, label %bb

bb:                                               ; preds = %dec_label_pc_14f18
  %v1_14f1c = load i32, i32* @r6, align 4
  %v3_14f1c = icmp eq i32 %v1_14f1c, 0
  br i1 %v3_14f1c, label %dec_label_pc_14f80, label %dec_label_pc_14f24

dec_label_pc_14f24:                               ; preds = %bb
  store i32 %v0_14f3c, i32* %r1.global-to-local, align 4
  %v2_14f2c = udiv i32 -1, %v0_14f3c
  %tmp9 = icmp ugt i32 %v1_14f1c, %v2_14f2c
  %v0_14f58 = load i32, i32* @r5, align 4
  %v1_14f58 = inttoptr i32 %v0_14f58 to i16*
  br i1 %tmp9, label %dec_label_pc_14f58, label %dec_label_pc_14f38

dec_label_pc_14f38:                               ; preds = %dec_label_pc_14f24
  %v2_14f3c = mul i32 %v1_14f1c, %v0_14f3c
  store i32 %v2_14f3c, i32* %r1.global-to-local, align 4
  %v0_14f40 = load i32, i32* @r7, align 4
  %v5_14f44 = call i32 @__stdio_fwrite(i32 %v0_14f40, i32 %v2_14f3c, i16* %v1_14f58)
  %v0_14f48 = load i32, i32* @r4, align 4
  %v2_14f4c = udiv i32 %v5_14f44, %v0_14f48
  store i32 %v2_14f4c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f84

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f24
  %v2_14f58 = load i16, i16* %v1_14f58, align 2
  %v1_14f5c = or i16 %v2_14f58, 8
  store i16 %v1_14f5c, i16* %v1_14f58, align 2
  %v0_14f68 = call i32 @__aeabi_read_tp()
  %v3_14f6c = load i16, i16* @global_var_22308.76, align 2
  %v4_14f6c = sext i16 %v3_14f6c to i32
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14f78 = add i32 %v4_14f6c, %v0_14f68
  %v4_14f78 = inttoptr i32 %v3_14f78 to i32*
  store i32 22, i32* %v4_14f78, align 4
  %v0_14f84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f84

dec_label_pc_14f80:                               ; preds = %dec_label_pc_14f18, %dec_label_pc_14f04, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f58, %dec_label_pc_14f38, %dec_label_pc_14f80
  %v0_14f84 = phi i32 [ %v0_14f84.pre, %dec_label_pc_14f58 ], [ %v2_14f4c, %dec_label_pc_14f38 ], [ 0, %dec_label_pc_14f80 ]
  store i32 %v9_14edc, i32* @r6, align 4
  store i32 %v12_14edc, i32* @r7, align 4
  ret i32 %v0_14f84

; uselistorder directives
  uselistorder i16* %v1_14f58, { 0, 2, 1 }
  uselistorder i32 %v1_14f1c, { 1, 0, 2 }
  uselistorder i32 %v0_14f3c, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_14f84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f80, { 2, 0, 1 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_14fa0 = load i32, i32* @r0, align 4
  %v1_14fa0 = load i32, i32* @r1, align 4
  %v2_14fa0 = inttoptr i32 %v0_14fa0 to i8*
  %v3_14fa0 = call i32 @_memcpy(i8* %v2_14fa0, i32 %v1_14fa0)
  ret i32 %v3_14fa0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_14fb0 = icmp eq i32 %arg2, 0
  br i1 %v2_14fb0, label %bb, label %dec_label_pc_14fc4

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_14fc4:                               ; preds = %entry
  %v2_14fc4 = add i32 %tmp, %arg2
  %v3_14fc4 = icmp ult i32 %v2_14fc4, %tmp
  br i1 %v3_14fc4, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_14fc4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14fc4, %bb19
  %v5_15064 = phi i32 [ %v2_14fc4, %dec_label_pc_14fc4 ], [ -1, %bb19 ]
  %v1_14fe44 = urem i32 %tmp, 4
  %v2_14fe45 = icmp eq i32 %v1_14fe44, 0
  br i1 %v2_14fe45, label %dec_label_pc_14fec, label %dec_label_pc_14fd4

dec_label_pc_14fd4:                               ; preds = %bb20, %dec_label_pc_14fe0
  %v0_14fe0 = phi i32 [ %v1_14fe0, %dec_label_pc_14fe0 ], [ %tmp, %bb20 ]
  %v1_14fd4 = inttoptr i32 %v0_14fe0 to i8*
  %v2_14fd4 = load i8, i8* %v1_14fd4, align 1
  %v2_14fd8 = icmp eq i8 %v2_14fd4, 0
  br i1 %v2_14fd8, label %dec_label_pc_15060, label %dec_label_pc_14fe0

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd4
  %v1_14fe0 = add i32 %v0_14fe0, 1
  %v1_14fe4 = urem i32 %v1_14fe0, 4
  %v2_14fe4 = icmp eq i32 %v1_14fe4, 0
  br i1 %v2_14fe4, label %dec_label_pc_14fec, label %dec_label_pc_14fd4

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fe0, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_14fe0, %dec_label_pc_14fe0 ]
  %v3_1505030 = icmp ult i32 %storemerge.lcssa, %v5_15064
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_1505030, label %dec_label_pc_14ff4, label %dec_label_pc_15060

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_1504c, %dec_label_pc_14fec
  %v0_1504437 = phi i32 [ %v4_14ff4, %dec_label_pc_1504c ], [ %storemerge.lcssa, %dec_label_pc_14fec ]
  %v1_14ff4 = inttoptr i32 %v0_1504437 to i32*
  %v2_14ff4 = load i32, i32* %v1_14ff4, align 4
  %v4_14ff4 = add i32 %v0_1504437, 4
  %v2_14ff8 = add i32 %v2_14ff4, -16843009
  %v2_14ffc = and i32 %v2_14ff8, -2139062144
  store i32 %v2_14ffc, i32* @ip, align 4
  %v2_15000 = icmp eq i32 %v2_14ffc, 0
  br i1 %v2_15000, label %dec_label_pc_1504c, label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_14ff4
  %v2_15008 = inttoptr i32 %v0_1504437 to i8*
  %v3_15008 = load i8, i8* %v2_15008, align 1
  %v2_1500c = icmp eq i8 %v3_15008, 0
  br i1 %v2_1500c, label %bb21, label %dec_label_pc_1501c

bb21:                                             ; preds = %dec_label_pc_15008
  br label %dec_label_pc_15060

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15008
  %v1_1501c = add i32 %v0_1504437, 1
  %v2_1501c = inttoptr i32 %v1_1501c to i8*
  %v3_1501c = load i8, i8* %v2_1501c, align 1
  %v2_15020 = icmp eq i8 %v3_1501c, 0
  br i1 %v2_15020, label %dec_label_pc_15060, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_1501c
  %v1_1502c = add i32 %v0_1504437, 2
  %v2_1502c = inttoptr i32 %v1_1502c to i8*
  %v3_1502c = load i8, i8* %v2_1502c, align 1
  %v2_15030 = icmp eq i8 %v3_1502c, 0
  br i1 %v2_15030, label %dec_label_pc_15060, label %dec_label_pc_1503c

dec_label_pc_1503c:                               ; preds = %dec_label_pc_1502c
  %v1_1503c = add i32 %v0_1504437, 3
  %v2_1503c = inttoptr i32 %v1_1503c to i8*
  %v3_1503c = load i8, i8* %v2_1503c, align 1
  %v2_15040 = icmp eq i8 %v3_1503c, 0
  br i1 %v2_15040, label %dec_label_pc_15060, label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_1503c, %dec_label_pc_14ff4
  %v3_15050 = icmp ult i32 %v4_14ff4, %v5_15064
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15050, label %dec_label_pc_14ff4, label %dec_label_pc_15060

dec_label_pc_15060:                               ; preds = %dec_label_pc_1504c, %dec_label_pc_14fec, %dec_label_pc_14fd4, %dec_label_pc_1501c, %dec_label_pc_1502c, %dec_label_pc_1503c, %bb21
  %v1_15060 = phi i32 [ %v0_1504437, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_14fec ], [ %v1_1501c, %dec_label_pc_1501c ], [ %v1_1502c, %dec_label_pc_1502c ], [ %v1_1503c, %dec_label_pc_1503c ], [ %v5_15064, %dec_label_pc_1504c ], [ %v0_14fe0, %dec_label_pc_14fd4 ]
  %v3_15060 = icmp uge i32 %v5_15064, %v1_15060
  %v9_15060 = icmp eq i32 %v5_15064, %v1_15060
  %v2_15064 = xor i1 %v3_15060, true
  %v3_15064 = or i1 %v9_15060, %v2_15064
  br i1 %v3_15064, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_15060
  %v6_15064 = sub i32 %v5_15064, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_15060, %bb22
  %v5_15068 = phi i32 [ %v1_15060, %dec_label_pc_15060 ], [ %v6_15064, %bb22 ]
  %v2_15068 = xor i1 %v9_15060, true
  %v3_15068 = and i1 %v3_15060, %v2_15068
  br i1 %v3_15068, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_15068 = sub i32 %v5_15068, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_15070 = phi i32 [ 0, %bb ], [ %v5_15068, %bb23 ], [ %v6_15068, %bb24 ]
  ret i32 %v1_15070

; uselistorder directives
  uselistorder i1 %v3_15060, { 1, 0 }
  uselistorder i32 %v4_14ff4, { 1, 0 }
  uselistorder i32 %v0_1504437, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14fe0, { 1, 0, 2 }
  uselistorder i32 %v5_15064, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_15060, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_14fd4, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15084 = call i32 @__xpg_strerror_r()
  %v0_15088 = load i32, i32* @r4, align 4
  ret i32 %v0_15088
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15094 = load i32, i32* @r4, align 4
  %v9_15094 = load i32, i32* @r6, align 4
  %v0_1509c = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r6, align 4
  store i32 %v0_1509c, i32* @ip, align 4
  %v0_150ac = load i32, i32* @r1, align 4
  store i32 %v0_150ac, i32* @r7, align 4
  %v0_150b0 = load i32, i32* @r2, align 4
  store i32 %v0_150b0, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1509c, 124
  br i1 %tmp, label %dec_label_pc_150e8, label %dec_label_pc_150b8

dec_label_pc_150b8:                               ; preds = %entry
  br label %dec_label_pc_150d0

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150d0
  br i1 %v2_150dc, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_150c4
  %v2_150c8 = add i32 %v1_150e0, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_150c4, %bb
  %v0_150d01 = phi i32 [ %v1_150e0, %dec_label_pc_150c4 ], [ %v2_150c8, %bb ]
  %v1_150cc = add i32 %v0_150cc, 1
  br label %dec_label_pc_150d0

dec_label_pc_150d0:                               ; preds = %dec_label_pc_150b8, %bb15
  %v1_150e0 = phi i32 [ %v0_1509c, %dec_label_pc_150b8 ], [ %v0_150d01, %bb15 ]
  %v0_150cc = phi i32 [ add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -36888), %dec_label_pc_150b8 ], [ %v1_150cc, %bb15 ]
  store i32 %v0_150cc, i32* @r5, align 4
  %v2_150d0 = icmp eq i32 %v1_150e0, 0
  %v1_150d4 = inttoptr i32 %v0_150cc to i8*
  %v2_150d4 = load i8, i8* %v1_150d4, align 1
  %v3_150d4 = zext i8 %v2_150d4 to i32
  store i32 %v3_150d4, i32* @r3, align 4
  %v2_150dc = icmp eq i8 %v2_150d4, 0
  br i1 %v2_150d0, label %dec_label_pc_150dc, label %dec_label_pc_150c4

dec_label_pc_150dc:                               ; preds = %dec_label_pc_150d0
  br i1 %v2_150dc, label %dec_label_pc_150e8, label %bb16

bb16:                                             ; preds = %dec_label_pc_150dc
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15124

dec_label_pc_150e8:                               ; preds = %dec_label_pc_150dc, %entry
  store i32 %v0_1509c, i32* @r2, align 4
  %v3_150f0 = ashr i32 %v0_1509c, 31
  store i32 %v3_150f0, i32* @r3, align 4
  %v6_15104 = bitcast i32* %stack_var_-25 to i8*
  %v7_15104 = call i32 @_uintmaxtostr(i8* %v6_15104)
  %v1_1510c = add i32 %v7_15104, -14
  store i32 %v1_1510c, i32* @r5, align 4
  %v0_15110 = load i32, i32* @r6, align 4
  %v2_15110 = add i32 %v0_15110, -36904
  store i32 %v2_15110, i32* @r1, align 4
  store i32 %v1_1510c, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_1511c = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15124.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %bb16, %dec_label_pc_150e8
  %v0_15124 = phi i32 [ %v0_150cc, %bb16 ], [ %v0_15124.pre, %dec_label_pc_150e8 ]
  %v1_15124 = inttoptr i32 %v0_15124 to i8*
  %v3_15128 = call i32 @strlen(i8* %v1_15124)
  %v0_1512c = load i32, i32* @r7, align 4
  %v2_1512c = icmp eq i32 %v0_1512c, 0
  br i1 %v2_1512c, label %bb17, label %dec_label_pc_15124._crit_edge

dec_label_pc_15124._crit_edge:                    ; preds = %dec_label_pc_15124
  %v1_15138.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_15124
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15124._crit_edge, %bb17
  %v1_15138 = phi i32 [ %v1_15138.pre, %dec_label_pc_15124._crit_edge ], [ 0, %bb17 ]
  %v1_15134 = add i32 %v3_15128, 1
  %v3_15138 = icmp uge i32 %v1_15134, %v1_15138
  %v9_15138 = icmp eq i32 %v1_15134, %v1_15138
  %v2_1513c = xor i1 %v3_15138, true
  %v3_1513c = or i1 %v9_15138, %v2_1513c
  br i1 %v3_1513c, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_15134, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_1514c = phi i32 [ %v1_15138, %bb18 ], [ %v1_15134, %bb19 ]
  %v2_15140 = xor i1 %v9_15138, true
  %v3_15140 = and i1 %v3_15138, %v2_15140
  br i1 %v3_15140, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_15144 = icmp eq i32 %v0_1514c, 0
  br i1 %v2_15144, label %dec_label_pc_15168, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %bb22
  store i32 %v0_1514c, i32* @r2, align 4
  %v0_15150 = load i32, i32* @r5, align 4
  store i32 %v0_15150, i32* @r1, align 4
  store i32 %v0_1512c, i32* @r0, align 4
  %v0_15158 = call i32 @memcpy()
  %v0_1515c = load i32, i32* @r4, align 4
  %v1_1515c = load i32, i32* @r7, align 4
  %v2_1515c = add i32 %v1_1515c, %v0_1515c
  %v3_15164 = add i32 %v2_1515c, -1
  %v4_15164 = inttoptr i32 %v3_15164 to i8*
  store i8 0, i8* %v4_15164, align 1
  br label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %bb22, %dec_label_pc_1514c
  %v0_15168 = load i32, i32* %r6.global-to-local, align 4
  %v2_15168 = icmp eq i32 %v0_15168, 0
  br i1 %v2_15168, label %dec_label_pc_15180, label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_15168
  %v0_15174 = call i32 @__aeabi_read_tp()
  %v3_15178 = load i16, i16* @global_var_22308.76, align 2
  %v4_15178 = sext i16 %v3_15178 to i32
  %v0_1517c = load i32, i32* %r6.global-to-local, align 4
  %v3_1517c = add i32 %v4_15178, %v0_15174
  %v4_1517c = inttoptr i32 %v3_1517c to i32*
  store i32 %v0_1517c, i32* %v4_1517c, align 4
  %v0_15180.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_15168, %dec_label_pc_15170
  %v0_15180 = phi i32 [ 0, %dec_label_pc_15168 ], [ %v0_15180.pre, %dec_label_pc_15170 ]
  store i32 %v3_15094, i32* @r4, align 4
  store i32 %v9_15094, i32* %r6.global-to-local, align 4
  ret i32 %v0_15180

; uselistorder directives
  uselistorder i1 %v3_15138, { 1, 0 }
  uselistorder i32 %v0_150cc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_150e0, { 1, 0, 2 }
  uselistorder i32 %v0_1509c, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 5, 3, 4, 1, 2, 6 }
  uselistorder label %dec_label_pc_15180, { 1, 0 }
  uselistorder label %dec_label_pc_15168, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_15124, { 1, 0 }
  uselistorder label %dec_label_pc_150d0, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_151a0 = load i32, i32* @r4, align 4
  store i32 %v3_151a0, i32* %stack_var_-16, align 4
  %v9_151a0 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_151a8 = call i32 @strlen(i8* %arg1)
  %v1_151ac = add i32 %v3_151a8, 1
  store i32 %v1_151ac, i32* @r4, align 4
  %v1_151b4 = call i32 @malloc(i32 %v1_151ac)
  store i32 %v1_151b4, i32* %r5.global-to-local, align 4
  %v2_151b8 = icmp eq i32 %v1_151b4, 0
  br i1 %v2_151b8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_151c4 = xor i1 %v2_151b8, true
  call void @__pseudo_cond_branch(i1 %v1_151c4, i32 ptrtoint (i32* @global_var_acd0.270 to i32))
  %v0_151c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_151cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_151cc, i32* @r4, align 4
  store i32 %v9_151a0, i32* @r6, align 4
  ret i32 %v0_151c8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 11, 10, 9, 3, 2, 8, 7, 6, 12, 5, 4, 13, 16, 1, 15, 14, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_151d8 = load i32, i32* @lr, align 4
  store i32 %v0_151d8, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_151e4 = icmp sgt i32 %arg3, 11
  br i1 %v7_151e4, label %dec_label_pc_151ec, label %dec_label_pc_152b8

dec_label_pc_151ec:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_151ec = add i32 %tmp, 1
  %v2_151ec = inttoptr i32 %v1_151ec to i8*
  %v3_151ec = load i8, i8* %v2_151ec, align 1
  store i8 %v3_151ec, i8* %tmp16, align 1
  %v0_151f4 = load i32, i32* @ip, align 4
  %v1_151f4 = inttoptr i32 %v0_151f4 to i32*
  %v2_151f4 = load i32, i32* %v1_151f4, align 4
  %v1_151f8 = trunc i32 %v2_151f4 to i8
  %v4_151f8 = add i32 %arg2, 1
  %v5_151f8 = inttoptr i32 %v4_151f8 to i8*
  store i8 %v1_151f8, i8* %v5_151f8, align 1
  %v0_151fc = load i32, i32* @ip, align 4
  %v1_151fc = add i32 %v0_151fc, 8
  %v2_151fc = inttoptr i32 %v1_151fc to i32*
  %v3_151fc = load i32, i32* %v2_151fc, align 4
  %v1_15200 = add i32 %v0_151fc, 20
  %v2_15200 = inttoptr i32 %v1_15200 to i32*
  %v3_15200 = load i32, i32* %v2_15200, align 4
  %v1_15204 = add i32 %v0_151fc, 4
  %v2_15204 = inttoptr i32 %v1_15204 to i32*
  %v3_15204 = load i32, i32* %v2_15204, align 4
  %v1_15208 = add i32 %v0_151fc, 12
  %v2_15208 = inttoptr i32 %v1_15208 to i32*
  %v3_15208 = load i32, i32* %v2_15208, align 4
  %v2_1520c = icmp eq i32 %v3_15200, 0
  br i1 %v2_1520c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_151ec
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_151ec, %bb
  %v0_1521c = phi i32 [ 0, %dec_label_pc_151ec ], [ 1, %bb ]
  %v1_15214 = urem i32 %v3_151fc, 16
  %v2_15218 = icmp eq i32 %v3_15204, 0
  %v4_1521c = mul nuw nsw i32 %v1_15214, 8
  %v5_1521c = or i32 %v0_1521c, %v4_1521c
  %v1_15220 = add i32 %v0_151fc, 16
  %v2_15220 = inttoptr i32 %v1_15220 to i32*
  %v3_15220 = load i32, i32* %v2_15220, align 4
  %. = select i1 %v2_15218, i32 0, i32 128
  %v2_1522c = icmp eq i32 %v3_15208, 0
  %storemerge11 = select i1 %v2_1522c, i32 0, i32 4
  %v2_15238 = or i32 %v5_1521c, %.
  %v2_1523c = icmp eq i32 %v3_15220, 0
  %.26 = select i1 %v2_1523c, i32 0, i32 2
  %v2_15248 = or i32 %v2_15238, %storemerge11
  %v2_1524c = or i32 %v2_15248, %.26
  %v1_15250 = trunc i32 %v2_1524c to i8
  %v2_15250 = load i32, i32* %lr.global-to-local, align 4
  %v3_15250 = add i32 %v2_15250, 2
  %v4_15250 = inttoptr i32 %v3_15250 to i8*
  store i8 %v1_15250, i8* %v4_15250, align 1
  %v0_15254 = load i32, i32* @ip, align 4
  %v1_15254 = add i32 %v0_15254, 24
  %v1_15258 = inttoptr i32 %v1_15254 to i32*
  %v2_15258 = load i32, i32* %v1_15258, align 4
  %v3_15258 = add i32 %v0_15254, 28
  %v4_15258 = inttoptr i32 %v3_15258 to i32*
  %v5_15258 = load i32, i32* %v4_15258, align 4
  %v2_1525c = icmp eq i32 %v2_15258, 0
  %v1_15260 = urem i32 %v5_15258, 16
  %v0_1526c = select i1 %v2_1525c, i32 0, i32 128
  %v2_1526c = or i32 %v1_15260, %v0_1526c
  %v1_15270 = trunc i32 %v2_1526c to i8
  %v2_15270 = load i32, i32* %lr.global-to-local, align 4
  %v3_15270 = add i32 %v2_15270, 3
  %v4_15270 = inttoptr i32 %v3_15270 to i8*
  store i8 %v1_15270, i8* %v4_15270, align 1
  %v0_15274 = load i32, i32* @ip, align 4
  %v1_15274 = add i32 %v0_15274, 33
  %v2_15274 = inttoptr i32 %v1_15274 to i8*
  %v3_15274 = load i8, i8* %v2_15274, align 1
  %v2_15278 = load i32, i32* %lr.global-to-local, align 4
  %v3_15278 = add i32 %v2_15278, 4
  %v4_15278 = inttoptr i32 %v3_15278 to i8*
  store i8 %v3_15274, i8* %v4_15278, align 1
  %v0_1527c = load i32, i32* @ip, align 4
  %v1_1527c = add i32 %v0_1527c, 32
  %v2_1527c = inttoptr i32 %v1_1527c to i32*
  %v3_1527c = load i32, i32* %v2_1527c, align 4
  %v1_15280 = trunc i32 %v3_1527c to i8
  %v2_15280 = load i32, i32* %lr.global-to-local, align 4
  %v3_15280 = add i32 %v2_15280, 5
  %v4_15280 = inttoptr i32 %v3_15280 to i8*
  store i8 %v1_15280, i8* %v4_15280, align 1
  %v0_15284 = load i32, i32* @ip, align 4
  %v1_15284 = add i32 %v0_15284, 37
  %v2_15284 = inttoptr i32 %v1_15284 to i8*
  %v3_15284 = load i8, i8* %v2_15284, align 1
  %v2_15288 = load i32, i32* %lr.global-to-local, align 4
  %v3_15288 = add i32 %v2_15288, 6
  %v4_15288 = inttoptr i32 %v3_15288 to i8*
  store i8 %v3_15284, i8* %v4_15288, align 1
  %v0_1528c = load i32, i32* @ip, align 4
  %v1_1528c = add i32 %v0_1528c, 36
  %v2_1528c = inttoptr i32 %v1_1528c to i32*
  %v3_1528c = load i32, i32* %v2_1528c, align 4
  %v1_15290 = trunc i32 %v3_1528c to i8
  %v2_15290 = load i32, i32* %lr.global-to-local, align 4
  %v3_15290 = add i32 %v2_15290, 7
  %v4_15290 = inttoptr i32 %v3_15290 to i8*
  store i8 %v1_15290, i8* %v4_15290, align 1
  %v0_15294 = load i32, i32* @ip, align 4
  %v1_15294 = add i32 %v0_15294, 41
  %v2_15294 = inttoptr i32 %v1_15294 to i8*
  %v3_15294 = load i8, i8* %v2_15294, align 1
  %v2_15298 = load i32, i32* %lr.global-to-local, align 4
  %v3_15298 = add i32 %v2_15298, 8
  %v4_15298 = inttoptr i32 %v3_15298 to i8*
  store i8 %v3_15294, i8* %v4_15298, align 1
  %v0_1529c = load i32, i32* @ip, align 4
  %v1_1529c = add i32 %v0_1529c, 40
  %v2_1529c = inttoptr i32 %v1_1529c to i32*
  %v3_1529c = load i32, i32* %v2_1529c, align 4
  %v1_152a0 = trunc i32 %v3_1529c to i8
  %v2_152a0 = load i32, i32* %lr.global-to-local, align 4
  %v3_152a0 = add i32 %v2_152a0, 9
  %v4_152a0 = inttoptr i32 %v3_152a0 to i8*
  store i8 %v1_152a0, i8* %v4_152a0, align 1
  %v0_152a4 = load i32, i32* @ip, align 4
  %v1_152a4 = add i32 %v0_152a4, 45
  %v2_152a4 = inttoptr i32 %v1_152a4 to i8*
  %v3_152a4 = load i8, i8* %v2_152a4, align 1
  %v2_152a8 = load i32, i32* %lr.global-to-local, align 4
  %v3_152a8 = add i32 %v2_152a8, 10
  %v4_152a8 = inttoptr i32 %v3_152a8 to i8*
  store i8 %v3_152a4, i8* %v4_152a8, align 1
  %v0_152ac = load i32, i32* @ip, align 4
  %v1_152ac = add i32 %v0_152ac, 44
  %v2_152ac = inttoptr i32 %v1_152ac to i32*
  %v3_152ac = load i32, i32* %v2_152ac, align 4
  %v1_152b0 = trunc i32 %v3_152ac to i8
  %v2_152b0 = load i32, i32* %lr.global-to-local, align 4
  %v3_152b0 = add i32 %v2_152b0, 11
  %v4_152b0 = inttoptr i32 %v3_152b0 to i8*
  store i8 %v1_152b0, i8* %v4_152b0, align 1
  %v2_152b8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_152b8

dec_label_pc_152b8:                               ; preds = %entry, %bb17
  %v2_152b8 = phi i32 [ %v2_152b8.pre, %bb17 ], [ %v0_151d8, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_152b8, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_151fc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 37, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_152b8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_152c0 = load i8, i8* %arg1, align 1
  %v4_152c0 = zext i8 %v3_152c0 to i32
  %v2_152c4 = add i32 %tmp, 1
  %v3_152c4 = inttoptr i32 %v2_152c4 to i8*
  %v4_152c4 = load i8, i8* %v3_152c4, align 1
  %v5_152c4 = zext i8 %v4_152c4 to i32
  %v4_152c8 = mul nuw nsw i32 %v4_152c0, 256
  %v5_152c8 = or i32 %v5_152c4, %v4_152c8
  %v2_152cc = inttoptr i32 %arg2 to i32*
  store i32 %v5_152c8, i32* %v2_152cc, align 4
  %v2_152d0 = add i32 %tmp, 2
  %v3_152d0 = inttoptr i32 %v2_152d0 to i8*
  %v4_152d0 = load i8, i8* %v3_152d0, align 1
  %tmp3 = icmp slt i8 %v4_152d0, 0
  %v3_152d4 = zext i1 %tmp3 to i32
  %v2_152d8 = add i32 %arg2, 4
  %v3_152d8 = inttoptr i32 %v2_152d8 to i32*
  store i32 %v3_152d4, i32* %v3_152d8, align 4
  %v4_152dc = load i8, i8* %v3_152d0, align 1
  %div = udiv i8 %v4_152dc, 8
  %tmp4 = urem i8 %div, 16
  %v1_152e4 = zext i8 %tmp4 to i32
  %v2_152e8 = add i32 %arg2, 8
  %v3_152e8 = inttoptr i32 %v2_152e8 to i32*
  store i32 %v1_152e4, i32* %v3_152e8, align 4
  %v4_152ec = load i8, i8* %v3_152d0, align 1
  %div1 = udiv i8 %v4_152ec, 4
  %tmp5 = urem i8 %div1, 2
  %v1_152f4 = zext i8 %tmp5 to i32
  %v2_152f8 = add i32 %arg2, 12
  %v3_152f8 = inttoptr i32 %v2_152f8 to i32*
  store i32 %v1_152f4, i32* %v3_152f8, align 4
  %v4_152fc = load i8, i8* %v3_152d0, align 1
  %div2 = udiv i8 %v4_152fc, 2
  %tmp6 = urem i8 %div2, 2
  %v1_15304 = zext i8 %tmp6 to i32
  %v2_15308 = add i32 %arg2, 16
  %v3_15308 = inttoptr i32 %v2_15308 to i32*
  store i32 %v1_15304, i32* %v3_15308, align 4
  %v4_1530c = load i8, i8* %v3_152d0, align 1
  %tmp7 = urem i8 %v4_1530c, 2
  %v1_15310 = zext i8 %tmp7 to i32
  %v2_15314 = add i32 %arg2, 20
  %v3_15314 = inttoptr i32 %v2_15314 to i32*
  store i32 %v1_15310, i32* %v3_15314, align 4
  %v2_15318 = add i32 %tmp, 3
  %v3_15318 = inttoptr i32 %v2_15318 to i8*
  %v4_15318 = load i8, i8* %v3_15318, align 1
  %tmp8 = icmp slt i8 %v4_15318, 0
  %v3_1531c = zext i1 %tmp8 to i32
  %v2_15320 = add i32 %arg2, 24
  %v3_15320 = inttoptr i32 %v2_15320 to i32*
  store i32 %v3_1531c, i32* %v3_15320, align 4
  %v4_15324 = load i8, i8* %v3_15318, align 1
  %tmp9 = urem i8 %v4_15324, 16
  %v1_15328 = zext i8 %tmp9 to i32
  %v2_1532c = add i32 %arg2, 28
  %v3_1532c = inttoptr i32 %v2_1532c to i32*
  store i32 %v1_15328, i32* %v3_1532c, align 4
  %v2_15330 = add i32 %tmp, 4
  %v3_15330 = inttoptr i32 %v2_15330 to i8*
  %v4_15330 = load i8, i8* %v3_15330, align 1
  %v5_15330 = zext i8 %v4_15330 to i32
  %v2_15334 = add i32 %tmp, 5
  %v3_15334 = inttoptr i32 %v2_15334 to i8*
  %v4_15334 = load i8, i8* %v3_15334, align 1
  %v5_15334 = zext i8 %v4_15334 to i32
  %v4_15338 = mul nuw nsw i32 %v5_15330, 256
  %v5_15338 = or i32 %v5_15334, %v4_15338
  %v2_1533c = add i32 %arg2, 32
  %v3_1533c = inttoptr i32 %v2_1533c to i32*
  store i32 %v5_15338, i32* %v3_1533c, align 4
  %v2_15340 = add i32 %tmp, 6
  %v3_15340 = inttoptr i32 %v2_15340 to i8*
  %v4_15340 = load i8, i8* %v3_15340, align 1
  %v5_15340 = zext i8 %v4_15340 to i32
  %v2_15344 = add i32 %tmp, 7
  %v3_15344 = inttoptr i32 %v2_15344 to i8*
  %v4_15344 = load i8, i8* %v3_15344, align 1
  %v5_15344 = zext i8 %v4_15344 to i32
  %v4_15348 = mul nuw nsw i32 %v5_15340, 256
  %v5_15348 = or i32 %v5_15344, %v4_15348
  %v2_1534c = add i32 %arg2, 36
  %v3_1534c = inttoptr i32 %v2_1534c to i32*
  store i32 %v5_15348, i32* %v3_1534c, align 4
  %v2_15350 = add i32 %tmp, 8
  %v3_15350 = inttoptr i32 %v2_15350 to i8*
  %v4_15350 = load i8, i8* %v3_15350, align 1
  %v5_15350 = zext i8 %v4_15350 to i32
  %v2_15354 = add i32 %tmp, 9
  %v3_15354 = inttoptr i32 %v2_15354 to i8*
  %v4_15354 = load i8, i8* %v3_15354, align 1
  %v5_15354 = zext i8 %v4_15354 to i32
  %v4_15358 = mul nuw nsw i32 %v5_15350, 256
  %v5_15358 = or i32 %v5_15354, %v4_15358
  %v2_1535c = add i32 %arg2, 40
  %v3_1535c = inttoptr i32 %v2_1535c to i32*
  store i32 %v5_15358, i32* %v3_1535c, align 4
  %v2_15360 = add i32 %tmp, 11
  %v3_15360 = inttoptr i32 %v2_15360 to i8*
  %v4_15360 = load i8, i8* %v3_15360, align 1
  %v5_15360 = zext i8 %v4_15360 to i32
  %v2_15364 = add i32 %tmp, 10
  %v3_15364 = inttoptr i32 %v2_15364 to i8*
  %v4_15364 = load i8, i8* %v3_15364, align 1
  %v5_15364 = zext i8 %v4_15364 to i32
  %v4_15368 = mul nuw nsw i32 %v5_15364, 256
  %v5_15368 = or i32 %v4_15368, %v5_15360
  %v2_1536c = add i32 %arg2, 44
  %v3_1536c = inttoptr i32 %v2_1536c to i32*
  store i32 %v5_15368, i32* %v3_1536c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 11, { 16, 17, 4, 9, 1, 2, 3, 10, 11, 12, 13, 14, 15, 0, 5, 19, 18, 6, 7, 8, 20 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5, 12 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15374 = load i32, i32* @r4, align 4
  store i32 %v3_15374, i32* %stack_var_-16, align 4
  %v9_15374 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1537c = load i32, i32* %arg1, align 4
  store i32 %v2_1537c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_15388 = inttoptr i32 %v2_1537c to i8*
  %v2_15388 = call i32 @__encode_dotted(i8* %v1_15388)
  store i32 %v2_15388, i32* %r0.global-to-local, align 4
  %v1_1538c = icmp slt i32 %v2_15388, 0
  br i1 %v1_1538c, label %dec_label_pc_153cc, label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %entry
  %v1_15394 = load i32, i32* @r5, align 4
  %v2_15394 = sub i32 %v1_15394, %v2_15388
  %v7_1539c = icmp slt i32 %v2_15394, 4
  br i1 %v7_1539c, label %bb, label %dec_label_pc_153a4

bb:                                               ; preds = %dec_label_pc_15394
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153cc

dec_label_pc_153a4:                               ; preds = %dec_label_pc_15394
  %v0_153a4 = load i32, i32* @r4, align 4
  %v1_153a4 = add i32 %v0_153a4, 5
  %v2_153a4 = inttoptr i32 %v1_153a4 to i8*
  %v3_153a4 = load i8, i8* %v2_153a4, align 1
  %v2_153a8 = load i32, i32* @r6, align 4
  %v4_153a8 = add i32 %v2_153a8, %v2_15388
  %v5_153a8 = inttoptr i32 %v4_153a8 to i8*
  store i8 %v3_153a4, i8* %v5_153a8, align 1
  %v0_153ac = load i32, i32* @r4, align 4
  %v1_153ac = add i32 %v0_153ac, 4
  %v2_153ac = inttoptr i32 %v1_153ac to i32*
  %v3_153ac = load i32, i32* %v2_153ac, align 4
  %v0_153b0 = load i32, i32* @r6, align 4
  %v1_153b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_153b0 = add i32 %v1_153b0, %v0_153b0
  store i32 %v2_153b0, i32* %r2.global-to-local, align 4
  %v1_153b4 = trunc i32 %v3_153ac to i8
  %v3_153b4 = add i32 %v2_153b0, 1
  %v4_153b4 = inttoptr i32 %v3_153b4 to i8*
  store i8 %v1_153b4, i8* %v4_153b4, align 1
  %v0_153b8 = load i32, i32* @r4, align 4
  %v1_153b8 = add i32 %v0_153b8, 9
  %v2_153b8 = inttoptr i32 %v1_153b8 to i8*
  %v3_153b8 = load i8, i8* %v2_153b8, align 1
  %v2_153bc = load i32, i32* %r2.global-to-local, align 4
  %v3_153bc = add i32 %v2_153bc, 2
  %v4_153bc = inttoptr i32 %v3_153bc to i8*
  store i8 %v3_153b8, i8* %v4_153bc, align 1
  %v0_153c0 = load i32, i32* @r4, align 4
  %v1_153c0 = add i32 %v0_153c0, 8
  %v2_153c0 = inttoptr i32 %v1_153c0 to i32*
  %v3_153c0 = load i32, i32* %v2_153c0, align 4
  %v1_153c4 = trunc i32 %v3_153c0 to i8
  %v2_153c4 = load i32, i32* %r2.global-to-local, align 4
  %v3_153c4 = add i32 %v2_153c4, 3
  %v4_153c4 = inttoptr i32 %v3_153c4 to i8*
  store i8 %v1_153c4, i8* %v4_153c4, align 1
  %v0_153c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_153c8 = add i32 %v0_153c8, 4
  store i32 %v1_153c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %bb, %entry, %dec_label_pc_153a4
  %v1_153d0 = phi i32 [ -1, %bb ], [ %v2_15388, %entry ], [ %v1_153c8, %dec_label_pc_153a4 ]
  %v2_153cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_153cc, i32* @r4, align 4
  store i32 %v9_15374, i32* @r6, align 4
  ret i32 %v1_153d0

; uselistorder directives
  uselistorder i32 %v2_15388, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_153cc, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33980), i32* @r0, align 4
  %v1_153ec = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33980))
  ret i32 %v1_153ec

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_15404 = load i32, i32* @r4, align 4
  %v9_15404 = load i32, i32* @r6, align 4
  %v12_15404 = load i32, i32* @r7, align 4
  %v15_15404 = load i32, i32* @r8, align 4
  %v18_15404 = load i32, i32* @sb, align 4
  %v24_15404 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* @r4, align 4
  %v2_15424 = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_15424, align 4
  %v0_15428 = load i32, i32* @r0, align 4
  store i32 %v0_15428, i32* @r6, align 4
  %v0_1542c = load i32, i32* @r1, align 4
  %v0_15430 = load i32, i32* @r2, align 4
  store i32 %v0_15430, i32* @r8, align 4
  %v0_15434 = load i32, i32* @r3, align 4
  store i32 %v0_15434, i32* @fp, align 4
  %v3_15438 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15438, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_15444

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_155fc

dec_label_pc_15444:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15448 = icmp eq i32 %v0_15428, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_15448, label %dec_label_pc_15454, label %dec_label_pc_1547c

dec_label_pc_15454:                               ; preds = %dec_label_pc_15444
  %v0_15454 = call i32 @__open_etc_hosts()
  store i32 %v0_15454, i32* @r6, align 4
  %v2_15458 = icmp eq i32 %v0_15454, 0
  br i1 %v2_15458, label %dec_label_pc_15460, label %dec_label_pc_1547c

dec_label_pc_15460:                               ; preds = %dec_label_pc_15454
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  store i32 52880, i32* %r3.global-to-local, align 4
  %v2_15468 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_15468, align 4
  %v0_1546c = call i32 @__aeabi_read_tp()
  %v3_15470 = load i16, i16* @global_var_22308.76, align 2
  %v4_15470 = sext i16 %v3_15470 to i32
  store i32 %v4_15470, i32* %r3.global-to-local, align 4
  %v2_15474 = add i32 %v4_15470, %v0_1546c
  %v3_15474 = inttoptr i32 %v2_15474 to i32*
  %v4_15474 = load i32, i32* %v3_15474, align 4
  store i32 %v4_15474, i32* @sb, align 4
  br label %dec_label_pc_155fc

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15454, %dec_label_pc_15444
  %v1_1549c = phi i32 [ %v0_15454, %dec_label_pc_15454 ], [ %v0_15428, %dec_label_pc_15444 ]
  %v0_15480 = load i32, i32* @r4, align 4
  %v2_15480 = add i32 %v0_15480, -33968
  store i32 %v2_15480, i32* @r4, align 4
  %v2_15484 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1549c = add i32 %v1_1549c, 8
  %v3_1549c = inttoptr i32 %v2_1549c to i32*
  store i32 48, i32* %v3_1549c, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_154a4 = load i32, i32* @r5, align 4
  %v1_154a4 = add i32 %v0_154a4, -48
  store i32 %v1_154a4, i32* %r1.global-to-local, align 4
  %v0_154a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_154a8 = add i32 %v0_154a8, 24
  store i32 %v1_154a8, i32* @ip, align 4
  %v0_154ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_154ac, i32* @sb, align 4
  %v0_154b0 = load i32, i32* @lr, align 4
  %v1_154b0 = add i32 %v0_154b0, 32
  store i32 %v1_154b0, i32* @sl, align 4
  %v1_154b4 = load i32, i32* @r6, align 4
  %v2_154b4 = add i32 %v1_154b4, 16
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  store i32 %v1_154a4, i32* %v3_154b4, align 4
  %v0_154b8 = load i32, i32* @r4, align 4
  %v0_154bc = load i32, i32* @ip, align 4
  store i32 %v0_154bc, i32* %stack_var_-64, align 4
  %v0_154c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_154c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_154c0 = inttoptr i32 %v1_154c0 to i32*
  store i32 %v0_154c0, i32* %v2_154c0, align 4
  %v0_154c4 = load i32, i32* @lr, align 4
  %v1_154c4 = load i32, i32* @r6, align 4
  %v2_154c4 = add i32 %v1_154c4, 4
  %v3_154c4 = inttoptr i32 %v2_154c4 to i32*
  store i32 %v0_154c4, i32* %v3_154c4, align 4
  %v2_154f4 = inttoptr i32 %v0_1542c to i8*
  br label %dec_label_pc_155d0

dec_label_pc_154cc:                               ; preds = %dec_label_pc_155d0
  %v3_154cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_154cc, i32* %r1.global-to-local, align 4
  %v0_154d0 = load i32, i32* @fp, align 4
  %v7_154d0 = icmp eq i32 %v0_154d0, 1
  %v1_154d4 = add i32 %v3_154cc, 4
  store i32 %v1_154d4, i32* @r5, align 4
  %v1_154d8 = load i32, i32* @r7, align 4
  %v2_154d8 = add i32 %v1_154d8, 4
  %v3_154d8 = inttoptr i32 %v2_154d8 to i32*
  store i32 %v1_154d4, i32* %v3_154d8, align 4
  br i1 %v7_154d0, label %dec_label_pc_155fc, label %dec_label_pc_154e0

dec_label_pc_154e0:                               ; preds = %dec_label_pc_154cc
  %v0_154e0 = load i32, i32* @fp, align 4
  %v7_154e0 = icmp eq i32 %v0_154e0, 2
  br i1 %v7_154e0, label %dec_label_pc_154ec, label %dec_label_pc_15520.preheader

dec_label_pc_15520.preheader:                     ; preds = %dec_label_pc_154e0
  br label %dec_label_pc_15504

dec_label_pc_154ec:                               ; preds = %dec_label_pc_154e0
  %v0_154ec = load i32, i32* %r1.global-to-local, align 4
  %v1_154ec = inttoptr i32 %v0_154ec to i32*
  %v2_154ec = load i32, i32* %v1_154ec, align 4
  store i32 %v2_154ec, i32* @r1, align 4
  %v3_154f4 = call i32 @__GI_strcoll(i8* %v2_154f4, i32 %v2_154ec)
  %v2_154f8 = icmp eq i32 %v3_154f4, 0
  br i1 %v2_154f8, label %dec_label_pc_15530, label %dec_label_pc_155d0

dec_label_pc_15504:                               ; preds = %dec_label_pc_15520.preheader, %dec_label_pc_15520.backedge
  %v0_1550c = phi i32 [ 0, %dec_label_pc_15520.preheader ], [ %v0_15520.be, %dec_label_pc_15520.backedge ]
  %v0_15504 = load i32, i32* @r5, align 4
  %v4_15504 = mul i32 %v0_1550c, 4
  %v5_15504 = add i32 %v4_15504, %v0_15504
  %v6_15504 = inttoptr i32 %v5_15504 to i32*
  %v7_15504 = load i32, i32* %v6_15504, align 4
  store i32 %v7_15504, i32* %r3.global-to-local, align 4
  store i32 %v7_15504, i32* %r1.global-to-local, align 4
  %v2_15508 = icmp eq i32 %v7_15504, 0
  %v1_1550c = add i32 %v0_1550c, 1
  store i32 %v1_1550c, i32* @r4, align 4
  br i1 %v2_15508, label %dec_label_pc_15520.backedge, label %dec_label_pc_15514

dec_label_pc_15520.backedge:                      ; preds = %dec_label_pc_15504, %dec_label_pc_15520thread-pre-split
  %v0_15520.be = phi i32 [ %v0_15520.pr, %dec_label_pc_15520thread-pre-split ], [ %v1_1550c, %dec_label_pc_15504 ]
  %v7_15528 = icmp sgt i32 %v0_15520.be, 3
  br i1 %v7_15528, label %dec_label_pc_155d0, label %dec_label_pc_15504

dec_label_pc_15514:                               ; preds = %dec_label_pc_15504
  %v3_15514 = call i32 @__GI_strcasecmp(i8* %v2_154f4, i32 %v7_15504)
  %v2_15518 = icmp eq i32 %v3_15514, 0
  br i1 %v2_15518, label %dec_label_pc_15530, label %dec_label_pc_15520thread-pre-split

dec_label_pc_15520thread-pre-split:               ; preds = %dec_label_pc_15514
  %v0_15520.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_15520.backedge

dec_label_pc_15530:                               ; preds = %dec_label_pc_15514, %dec_label_pc_154ec
  %v0_15530 = load i32, i32* @r5, align 4
  %v1_15530 = inttoptr i32 %v0_15530 to i32*
  %v2_15530 = load i32, i32* %v1_15530, align 4
  store i32 %v2_15530, i32* %r3.global-to-local, align 4
  %v4_15530 = add i32 %v0_15530, 4
  store i32 %v4_15530, i32* @r5, align 4
  %v2_15534 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_15534, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1553c = load i32, i32* @r7, align 4
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  store i32 %v2_15530, i32* %v2_1553c, align 4
  %v0_15540 = load i32, i32* @lr, align 4
  %v1_15540 = load i32, i32* @ip, align 4
  %v2_15540 = add i32 %v1_15540, 4
  %v3_15540 = inttoptr i32 %v2_15540 to i32*
  store i32 %v0_15540, i32* %v3_15540, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_15548 = load i32, i32* @r8, align 4
  %v7_15548 = icmp eq i32 %v0_15548, 2
  %v0_1554c = load i32, i32* @r5, align 4
  %v1_1554c = load i32, i32* @r7, align 4
  %v2_1554c = add i32 %v1_1554c, 4
  %v3_1554c = inttoptr i32 %v2_1554c to i32*
  store i32 %v0_1554c, i32* %v3_1554c, align 4
  %v0_15550 = load i32, i32* @ip, align 4
  %v1_15550 = load i32, i32* @r7, align 4
  %v2_15550 = add i32 %v1_15550, 16
  %v3_15550 = inttoptr i32 %v2_15550 to i32*
  store i32 %v0_15550, i32* %v3_15550, align 4
  %v0_15554 = load i32, i32* @sl, align 4
  %v1_15554 = load i32, i32* %r2.global-to-local, align 4
  %v2_15554 = add i32 %v1_15554, 24
  %v3_15554 = inttoptr i32 %v2_15554 to i32*
  store i32 %v0_15554, i32* %v3_15554, align 4
  br i1 %v7_15548, label %dec_label_pc_1555c, label %dec_label_pc_1558c

dec_label_pc_1555c:                               ; preds = %dec_label_pc_15530
  %v3_1555c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1555c, i32* %r3.global-to-local, align 4
  %v0_15560 = load i32, i32* @r8, align 4
  %v1_15564 = inttoptr i32 %v3_1555c to i32*
  %v2_15564 = load i32, i32* %v1_15564, align 4
  store i32 %v2_15564, i32* %r1.global-to-local, align 4
  %v0_15568 = load i32, i32* @sl, align 4
  store i32 %v0_15568, i32* %r2.global-to-local, align 4
  %v3_1556c = inttoptr i32 %v2_15564 to i8*
  %v4_1556c = call i32 @inet_pton(i32 %v0_15560, i8* %v3_1556c, i32 %v0_15568)
  %tmp23 = icmp slt i32 %v4_1556c, 1
  br i1 %tmp23, label %dec_label_pc_155cc, label %dec_label_pc_15578

dec_label_pc_15578:                               ; preds = %dec_label_pc_1555c
  %v0_1557c = load i32, i32* @r7, align 4
  %v2_1557c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1557c, i32* %v2_1557c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_15584 = load i32, i32* @r8, align 4
  %v1_15584 = load i32, i32* @r7, align 4
  %v2_15584 = add i32 %v1_15584, 8
  %v3_15584 = inttoptr i32 %v2_15584 to i32*
  store i32 %v0_15584, i32* %v3_15584, align 4
  %v0_155c4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_155c0

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15530
  %v0_1558c = load i32, i32* @r8, align 4
  %v7_1558c = icmp eq i32 %v0_1558c, 10
  br i1 %v7_1558c, label %dec_label_pc_15594, label %dec_label_pc_155cc

dec_label_pc_15594:                               ; preds = %dec_label_pc_1558c
  %v3_15594 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_15594, i32* %r3.global-to-local, align 4
  %v1_1559c = inttoptr i32 %v3_15594 to i32*
  %v2_1559c = load i32, i32* %v1_1559c, align 4
  store i32 %v2_1559c, i32* %r1.global-to-local, align 4
  %v0_155a0 = load i32, i32* @sl, align 4
  store i32 %v0_155a0, i32* %r2.global-to-local, align 4
  %v3_155a4 = inttoptr i32 %v2_1559c to i8*
  %v4_155a4 = call i32 @inet_pton(i32 10, i8* %v3_155a4, i32 %v0_155a0)
  %tmp24 = icmp slt i32 %v4_155a4, 1
  br i1 %tmp24, label %dec_label_pc_155cc, label %dec_label_pc_155b0

dec_label_pc_155b0:                               ; preds = %dec_label_pc_15594
  store i32 %tmp7, i32* @ip, align 4
  %v0_155b4 = load i32, i32* @r8, align 4
  %v1_155b4 = load i32, i32* @r7, align 4
  %v2_155b4 = add i32 %v1_155b4, 8
  %v3_155b4 = inttoptr i32 %v2_155b4 to i32*
  store i32 %v0_155b4, i32* %v3_155b4, align 4
  %v0_155b8 = load i32, i32* @r7, align 4
  %v1_155b8 = load i32, i32* @ip, align 4
  %v2_155b8 = inttoptr i32 %v1_155b8 to i32*
  store i32 %v0_155b8, i32* %v2_155b8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_15578, %dec_label_pc_155b0
  %v0_155c4 = phi i32 [ %v0_155c4.pre, %dec_label_pc_15578 ], [ 16, %dec_label_pc_155b0 ]
  store i32 0, i32* @sb, align 4
  %v1_155c4 = load i32, i32* @r7, align 4
  %v2_155c4 = add i32 %v1_155c4, 12
  %v3_155c4 = inttoptr i32 %v2_155c4 to i32*
  store i32 %v0_155c4, i32* %v3_155c4, align 4
  br label %dec_label_pc_155f4

dec_label_pc_155cc:                               ; preds = %dec_label_pc_1558c, %dec_label_pc_15594, %dec_label_pc_1555c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_155d0

dec_label_pc_155d0:                               ; preds = %dec_label_pc_15520.backedge, %dec_label_pc_154ec, %dec_label_pc_155cc, %dec_label_pc_1547c
  %v0_155d0 = load i32, i32* @r6, align 4
  store i32 %v2_15484, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_154b8, i32* %r3.global-to-local, align 4
  %v4_155e0 = inttoptr i32 %v0_155d0 to i32*
  %v5_155e0 = call i32 @__GI_config_read(i32* %v4_155e0, i32 %v2_15484, i32 459270, i32 %v0_154b8)
  %v2_155e4 = icmp eq i32 %v5_155e0, 0
  br i1 %v2_155e4, label %dec_label_pc_155ec, label %dec_label_pc_154cc

dec_label_pc_155ec:                               ; preds = %dec_label_pc_155d0
  %v0_155ec = load i32, i32* @fp, align 4
  %v7_155ec = icmp eq i32 %v0_155ec, 1
  br i1 %v7_155ec, label %dec_label_pc_155fc, label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %dec_label_pc_155ec, %dec_label_pc_155c0
  %v0_155f4 = load i32, i32* @r6, align 4
  %v1_155f8 = inttoptr i32 %v0_155f4 to i32*
  %v2_155f8 = call i32 @__GI_config_close(i32* %v1_155f8)
  br label %dec_label_pc_155fc

dec_label_pc_155fc:                               ; preds = %dec_label_pc_154cc, %.thread, %dec_label_pc_155ec, %dec_label_pc_15460, %dec_label_pc_155f4
  %v0_155fc = load i32, i32* @sb, align 4
  store i32 %v3_15404, i32* @r4, align 4
  store i32 %v9_15404, i32* @r6, align 4
  store i32 %v12_15404, i32* @r7, align 4
  store i32 %v15_15404, i32* @r8, align 4
  store i32 %v18_15404, i32* @sb, align 4
  store i32 %v24_15404, i32* @fp, align 4
  ret i32 %v0_155fc

; uselistorder directives
  uselistorder i32 %v0_15520.be, { 1, 0 }
  uselistorder i32 %v0_154b8, { 1, 0 }
  uselistorder i32 %v2_15484, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 3, 4, 5, 6, 7, 8, 9, 0, 1, 2 }
  uselistorder i32 -48, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 34, { 6, 5, 7, 8, 9, 1, 2, 0, 4, 10, 3, 11 }
  uselistorder i32* @fp, { 28, 29, 30, 31, 40, 41, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 42, 43, 44, 45, 46, 47, 48, 0, 53, 54, 55, 56, 57, 58, 59, 60, 61, 17, 18, 92, 93, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 32, 33, 34, 35, 36, 37, 38, 39, 19, 20, 1, 70, 72, 71, 73, 2, 21, 22, 23, 24, 25, 26, 27, 68, 69, 74, 75, 76, 77, 78, 79, 86, 87, 85, 80, 81, 82, 83, 84, 88, 89, 90, 91, 94, 3 }
  uselistorder label %dec_label_pc_155fc, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_155d0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_155cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_155c0, { 1, 0 }
  uselistorder label %dec_label_pc_15520.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15504, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_1561c = load i32, i32* @lr, align 4
  %v2_15620 = icmp eq i32 %arg1, 0
  br i1 %v2_15620, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_15628 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_15650 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_1563c = phi i32 [ %arg1, %.thread ], [ %v3_15628, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_15638 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_15638, i32* @ip, align 4
  %v2_15640 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_15638, i32* %stack_var_-16, align 4
  store i32 %v0_15650, i32* %stack_var_-12, align 4
  %v5_15658 = inttoptr i32 %v0_1563c to i8*
  %v6_15658 = call i32 @__GI_wcsnrtombs(i8* %v5_15658, i32 %v2_15640, i32 1, i32 16, i32 %arg3)
  %v2_1565c = icmp eq i32 %v6_15658, 0
  br i1 %v2_1565c, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_1566c = phi i32 [ %v6_15658, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_1561c, i32* @lr, align 4
  ret i32 %v1_1566c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_15684 = load i32, i32* @r0, align 4
  %v1_15684 = load i32, i32* @r1, align 4
  %v5_15684 = inttoptr i32 %v0_15684 to i8*
  %v6_15684 = call i32 @__GI_wcsnrtombs(i8* %v5_15684, i32 %v1_15684, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_15684

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15694 = load i32, i32* @r4, align 4
  store i32 %v3_15694, i32* %stack_var_-12, align 4
  %v10_15698 = icmp eq i32 %tmp, %arg2
  store i1 %v10_15698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_15698, label %dec_label_pc_156b0, label %bb

bb:                                               ; preds = %entry
  %v4_1569c = icmp eq i8* %arg1, null
  store i1 %v4_1569c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_1569c, label %dec_label_pc_156b0.thread, label %bb39

dec_label_pc_156b0.thread:                        ; preds = %bb
  %v2_156a0 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_156b0:                               ; preds = %entry
  %v2_156a01 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_156b0 = icmp eq i8* %arg1, null
  store i1 %v3_156b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_156b0, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_156b0
  store i32 %v2_156a01, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_156b0, %dec_label_pc_156b0.thread
  %storemerge20 = phi i32 [ %v2_156a01, %dec_label_pc_156b0 ], [ %v2_156a0, %dec_label_pc_156b0.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1571428 = phi i32 [ %v2_156a01, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_156c8 = load i32, i32* @r3, align 4
  %v3_156c8 = icmp uge i32 %v0_156c8, %arg3
  %arg3.v0_156c8 = select i1 %v3_156c8, i32 %arg3, i32 %v0_156c8
  store i32 %arg3.v0_156c8, i32* %r5.global-to-local, align 4
  %v1_156d4 = inttoptr i32 %arg2 to i32*
  %v2_156d4 = load i32, i32* %v1_156d4, align 4
  store i32 %v2_156d4, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_156c8, i32* %r0.global-to-local, align 4
  %v2_1572822 = icmp eq i32 %arg3.v0_156c8, 0
  store i1 %v2_1572822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1572822, label %dec_label_pc_15730, label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %.thread14.thread, %dec_label_pc_15720.dec_label_pc_156e0_crit_edge
  %v2_15714 = phi i32 [ %v2_15720, %dec_label_pc_15720.dec_label_pc_156e0_crit_edge ], [ %v2_1571428, %.thread14.thread ]
  %v0_156ec = phi i32 [ %v0_156e0.pre, %dec_label_pc_15720.dec_label_pc_156e0_crit_edge ], [ %v2_156d4, %.thread14.thread ]
  %v1_156e0 = inttoptr i32 %v0_156ec to i32*
  %v2_156e0 = load i32, i32* %v1_156e0, align 4
  %v7_156e4 = icmp eq i32 %v2_156e0, 127
  store i1 %v7_156e4, i1* %cpsr_z.global-to-local, align 1
  %v1_156e8 = urem i32 %v2_156e0, 256
  store i32 %v1_156e8, i32* @ip, align 4
  %v1_156ec = add i32 %v0_156ec, 4
  store i32 %v1_156ec, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_156e0, 128
  br i1 %tmp45, label %dec_label_pc_15710, label %dec_label_pc_156f4

dec_label_pc_156f4:                               ; preds = %dec_label_pc_156e0
  store i32 ptrtoint (i32* @global_var_cc04.196 to i32), i32* %r2.global-to-local, align 4
  %v0_156f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_156f8, i32* %r0.global-to-local, align 4
  %v3_156fc = load i16, i16* @global_var_22308.76, align 2
  %v4_156fc = sext i16 %v3_156fc to i32
  store i32 %v4_156fc, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_15708 = add i32 %v4_156fc, %v0_156f8
  %v4_15708 = inttoptr i32 %v3_15708 to i32*
  store i32 84, i32* %v4_15708, align 4
  %v0_1573c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1573c

dec_label_pc_15710:                               ; preds = %dec_label_pc_156e0
  %v2_15710 = icmp eq i32 %v1_156e8, 0
  store i1 %v2_15710, i1* %cpsr_z.global-to-local, align 1
  %v1_15714 = trunc i32 %v2_156e0 to i8
  %v3_15714 = inttoptr i32 %v2_15714 to i8*
  store i8 %v1_15714, i8* %v3_15714, align 1
  %v0_15718 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15718, label %.dec_label_pc_15730_crit_edge, label %dec_label_pc_15720

dec_label_pc_15720:                               ; preds = %dec_label_pc_15710
  %v0_15720 = load i32, i32* %lr.global-to-local, align 4
  %v1_15720 = load i32, i32* %r4.global-to-local, align 4
  %v2_15720 = add i32 %v1_15720, %v0_15720
  store i32 %v2_15720, i32* %lr.global-to-local, align 4
  %v0_15724 = load i32, i32* %r0.global-to-local, align 4
  %v1_15724 = add i32 %v0_15724, -1
  store i32 %v1_15724, i32* %r0.global-to-local, align 4
  %v2_15728 = icmp eq i32 %v1_15724, 0
  store i1 %v2_15728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15728, label %dec_label_pc_15730, label %dec_label_pc_15720.dec_label_pc_156e0_crit_edge

dec_label_pc_15720.dec_label_pc_156e0_crit_edge:  ; preds = %dec_label_pc_15720
  %v0_156e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156e0

.dec_label_pc_15730_crit_edge:                    ; preds = %dec_label_pc_15710
  %v1_15718 = load i32, i32* @ip, align 4
  store i32 %v1_15718, i32* %r2.global-to-local, align 4
  %v0_15730.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %dec_label_pc_15720, %.dec_label_pc_15730_crit_edge, %.thread14.thread
  %v0_15730 = phi i32 [ %v0_15730.pre, %.dec_label_pc_15730_crit_edge ], [ %v2_1571428, %.thread14.thread ], [ %v2_15720, %dec_label_pc_15720 ]
  %v1_15730 = load i32, i32* @sp, align 4
  %v9_15730 = icmp eq i32 %v0_15730, %v1_15730
  store i1 %v9_15730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15730, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15730
  %v1_15734 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15734, i32* %v1_156d4, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15730, %bb43
  %v0_15738 = load i32, i32* %r0.global-to-local, align 4
  %v1_15738 = load i32, i32* %r5.global-to-local, align 4
  %v2_15738 = sub i32 %v1_15738, %v0_15738
  store i32 %v2_15738, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1573c

dec_label_pc_1573c:                               ; preds = %dec_label_pc_156f4, %bb44
  %v0_1573c = phi i32 [ %v0_1573c.pre, %dec_label_pc_156f4 ], [ %v2_15738, %bb44 ]
  store i32 %v0_1573c, i32* %r0.global-to-local, align 4
  %v2_15744 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15744, i32* %r4.global-to-local, align 4
  ret i32 %v0_1573c

; uselistorder directives
  uselistorder i32 %v0_1573c, { 1, 0 }
  uselistorder i32 %v1_15724, { 1, 0 }
  uselistorder i32 %v2_15720, { 0, 2, 1 }
  uselistorder i32 %v1_156e8, { 1, 0 }
  uselistorder i32 %v2_156e0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1571428, { 1, 0 }
  uselistorder i32 %v2_156a01, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 4, 2, 3, 5, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 3, 5, 1, 6, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32* @sp, { 2, 3, 0, 1 }
  uselistorder i32 84, { 3, 4, 5, 0, 1, 6, 8, 7, 9, 2, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1573c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_15730, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156e0, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_15750 = load i32, i32* @r4, align 4
  store i32 %v3_15750, i32* %stack_var_-20, align 4
  %v6_15750 = load i32, i32* @r5, align 4
  %v9_15750 = load i32, i32* @r6, align 4
  %v12_15750 = load i32, i32* @r7, align 4
  %v3_15754 = load i16, i16* %arg3, align 2
  %v4_15754 = zext i16 %v3_15754 to i32
  store i32 %v4_15754, i32* @r3, align 4
  %v1_15758 = and i32 %v4_15754, 512
  store i32 %v1_15758, i32* @r4, align 4
  %v2_15758 = icmp eq i32 %v1_15758, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_15758, label %dec_label_pc_15770, label %dec_label_pc_1586c

dec_label_pc_15770:                               ; preds = %entry
  %v2_15770 = add i32 %tmp, 4
  %v3_15770 = inttoptr i32 %v2_15770 to i32*
  %v4_15770 = load i32, i32* %v3_15770, align 4
  %v2_15778 = add i32 %tmp, 16
  %v3_15778 = inttoptr i32 %v2_15778 to i32*
  %v4_15778 = load i32, i32* %v3_15778, align 4
  store i32 %v4_15778, i32* @r0, align 4
  %v2_1577c = add i32 %tmp, 12
  %v3_1577c = inttoptr i32 %v2_1577c to i32*
  %v4_1577c = load i32, i32* %v3_1577c, align 4
  store i32 %v4_1577c, i32* @r3, align 4
  %v4_15780 = icmp eq i32 %v4_15770, -2
  %v2_15784 = sub i32 %v4_1577c, %v4_15778
  br i1 %v4_15780, label %dec_label_pc_15784, label %dec_label_pc_157ac

dec_label_pc_15784:                               ; preds = %dec_label_pc_15770
  %v3_15788 = icmp ugt i32 %v2_15784, %arg2
  br i1 %v3_15788, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_15784
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_15784, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_15784, %dec_label_pc_15784 ]
  %v0_15790 = phi i32 [ %arg2, %bb ], [ %v2_15784, %dec_label_pc_15784 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_15790, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_15798 = call i32 @memcpy()
  %v0_1579c = load i32, i32* @r5, align 4
  %v1_1579c = add i32 %v0_1579c, 16
  %v2_1579c = inttoptr i32 %v1_1579c to i32*
  %v3_1579c = load i32, i32* %v2_1579c, align 4
  %v1_157a0 = load i32, i32* @r4, align 4
  %v2_157a0 = add i32 %v1_157a0, %v3_1579c
  store i32 %v2_157a0, i32* %v2_1579c, align 4
  br label %dec_label_pc_15880

dec_label_pc_157ac:                               ; preds = %dec_label_pc_15770
  store i32 %v2_15784, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_15784, %arg2
  br i1 %tmp18, label %dec_label_pc_1584c, label %dec_label_pc_157b8

dec_label_pc_157b8:                               ; preds = %dec_label_pc_157ac
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_157c0 = call i32 @memcpy()
  %v0_157c4 = load i32, i32* @r5, align 4
  %v1_157c4 = add i32 %v0_157c4, 16
  %v2_157c4 = inttoptr i32 %v1_157c4 to i32*
  %v3_157c4 = load i32, i32* %v2_157c4, align 4
  %v1_157c8 = inttoptr i32 %v0_157c4 to i16*
  %v2_157c8 = load i16, i16* %v1_157c8, align 2
  %v1_157cc = load i32, i32* @r6, align 4
  %v2_157cc = add i32 %v1_157cc, %v3_157c4
  %v1_157d0 = and i16 %v2_157c8, 256
  %v2_157d0 = icmp eq i16 %v1_157d0, 0
  store i32 %v2_157cc, i32* %v2_157c4, align 4
  br i1 %v2_157d0, label %dec_label_pc_15880, label %dec_label_pc_157dc

dec_label_pc_157dc:                               ; preds = %dec_label_pc_157b8
  %v0_157dc = load i32, i32* @r7, align 4
  %v0_157e4 = load i32, i32* @r6, align 4
  %v4_157e8 = call i32 @memrchr(i32 %v0_157dc, i32 10, i32 %v0_157e4, i32 %v2_157cc)
  %v2_157ec = icmp eq i32 %v4_157e8, 0
  br i1 %v2_157ec, label %dec_label_pc_15880, label %dec_label_pc_157f4

dec_label_pc_157f4:                               ; preds = %dec_label_pc_157dc
  %v0_157f4 = load i32, i32* @r5, align 4
  store i32 %v0_157f4, i32* @r0, align 4
  %v0_157f8 = call i32 @__stdio_wcommit()
  %v2_157fc = icmp eq i32 %v0_157f8, 0
  br i1 %v2_157fc, label %dec_label_pc_15880, label %dec_label_pc_15804

dec_label_pc_15804:                               ; preds = %dec_label_pc_157f4
  %v1_15804 = load i32, i32* @r6, align 4
  %v3_15804 = icmp uge i32 %v0_157f8, %v1_15804
  %v1_15804.v0_157f8 = select i1 %v3_15804, i32 %v1_15804, i32 %v0_157f8
  store i32 %v1_15804.v0_157f8, i32* @r4, align 4
  %v2_15810 = sub i32 %v1_15804, %v1_15804.v0_157f8
  %v0_15814 = load i32, i32* @r7, align 4
  %v2_15814 = add i32 %v0_15814, %v2_15810
  store i32 %v2_15814, i32* %r7.global-to-local, align 4
  store i32 %v2_15814, i32* @r0, align 4
  store i32 %v1_15804.v0_157f8, i32* @r2, align 4
  %v4_15824 = call i32 @__GI_memchr(i32 %v2_15814, i32 10, i32 %v1_15804.v0_157f8, i32 %v2_15810)
  %v2_15828 = icmp eq i32 %v4_15824, 0
  br i1 %v2_15828, label %dec_label_pc_15880, label %dec_label_pc_15830

dec_label_pc_15830:                               ; preds = %dec_label_pc_15804
  %v0_15830 = load i32, i32* @r5, align 4
  %v1_15830 = add i32 %v0_15830, 16
  %v2_15830 = inttoptr i32 %v1_15830 to i32*
  %v3_15830 = load i32, i32* %v2_15830, align 4
  %v0_15834 = load i32, i32* %r7.global-to-local, align 4
  %v1_15834 = load i32, i32* @r4, align 4
  %v2_15834 = sub i32 %v0_15834, %v4_15824
  %v2_15838 = add i32 %v2_15834, %v1_15834
  %v2_1583c = sub i32 %v3_15830, %v2_15838
  %v1_15840 = load i32, i32* @r6, align 4
  %v2_15840 = sub i32 %v1_15840, %v2_15838
  store i32 %v2_15840, i32* @r6, align 4
  store i32 %v2_1583c, i32* %v2_15830, align 4
  br label %dec_label_pc_15880

dec_label_pc_1584c:                               ; preds = %dec_label_pc_157ac
  %v2_1584c = add i32 %tmp, 8
  %v3_1584c = inttoptr i32 %v2_1584c to i32*
  %v4_1584c = load i32, i32* %v3_1584c, align 4
  store i32 %v4_1584c, i32* @r3, align 4
  %v9_15850 = icmp eq i32 %v4_15778, %v4_1584c
  br i1 %v9_15850, label %dec_label_pc_1586c, label %dec_label_pc_15858

dec_label_pc_15858:                               ; preds = %dec_label_pc_1584c
  store i32 %tmp, i32* @r0, align 4
  %v0_1585c = call i32 @__stdio_wcommit()
  %v2_15860 = icmp eq i32 %v0_1585c, 0
  br i1 %v2_15860, label %dec_label_pc_15858.dec_label_pc_1586c_crit_edge, label %bb15

dec_label_pc_15858.dec_label_pc_1586c_crit_edge:  ; preds = %dec_label_pc_15858
  %v0_1586c.pre = load i32, i32* @r6, align 4
  %v0_15870.pre = load i32, i32* @r5, align 4
  %v0_15874.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1586c

bb15:                                             ; preds = %dec_label_pc_15858
  %v1_15864 = load i32, i32* @r4, align 4
  store i32 %v1_15864, i32* @r6, align 4
  br label %dec_label_pc_15880

dec_label_pc_1586c:                               ; preds = %dec_label_pc_15858.dec_label_pc_1586c_crit_edge, %entry, %dec_label_pc_1584c
  %v0_15874 = phi i32 [ %v0_15874.pre, %dec_label_pc_15858.dec_label_pc_1586c_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1584c ]
  %v0_15870 = phi i32 [ %v0_15870.pre, %dec_label_pc_15858.dec_label_pc_1586c_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1584c ]
  %v0_1586c = phi i32 [ %v0_1586c.pre, %dec_label_pc_15858.dec_label_pc_1586c_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1584c ]
  %v1_15870 = inttoptr i32 %v0_15870 to i16*
  %v5_15878 = call i32 @__stdio_WRITE(i16* %v1_15870, i32 %v0_15874, i32 %v0_1586c)
  store i32 %v5_15878, i32* @r6, align 4
  br label %dec_label_pc_15880

dec_label_pc_15880:                               ; preds = %bb15, %dec_label_pc_15804, %dec_label_pc_157f4, %dec_label_pc_157dc, %dec_label_pc_157b8, %dec_label_pc_15830, %bb12, %dec_label_pc_1586c
  %v0_15880 = load i32, i32* @r6, align 4
  %v2_15888 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15888, i32* @r4, align 4
  store i32 %v6_15750, i32* @r5, align 4
  store i32 %v9_15750, i32* @r6, align 4
  store i32 %v12_15750, i32* @r7, align 4
  ret i32 %v0_15880

; uselistorder directives
  uselistorder i32 %v2_15838, { 1, 0 }
  uselistorder i32 %v2_15810, { 1, 0 }
  uselistorder i32 %v1_15804.v0_157f8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_15804, { 1, 0, 2 }
  uselistorder i32 %v2_15784, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15880, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1586c, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15890 = load i32, i32* @r4, align 4
  store i32 %v3_15890, i32* %stack_var_-8, align 4
  %v3_15894 = load i16, i16* %arg1, align 2
  %v4_15894 = zext i16 %v3_15894 to i32
  %v2_15898 = and i32 %v4_15894, %arg2
  %v4_15898 = icmp eq i32 %v2_15898, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_15898, label %dec_label_pc_158a4, label %dec_label_pc_158b4

dec_label_pc_158a4:                               ; preds = %entry
  %v1_158a4 = and i32 %v4_15894, 2176
  %v2_158a4 = icmp eq i32 %v1_158a4, 0
  br i1 %v2_158a4, label %dec_label_pc_158ac, label %dec_label_pc_158c0

dec_label_pc_158ac:                               ; preds = %dec_label_pc_158a4
  %v2_158ac = or i32 %v4_15894, %arg2
  %v1_158b0 = trunc i32 %v2_158ac to i16
  store i16 %v1_158b0, i16* %arg1, align 2
  %v0_158b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_158b4

dec_label_pc_158b4:                               ; preds = %entry, %dec_label_pc_158ac
  %v0_158f8 = phi i32 [ %tmp, %entry ], [ %v0_158b4.pre, %dec_label_pc_158ac ]
  %v1_158b4 = inttoptr i32 %v0_158f8 to i16*
  %v2_158b4 = load i16, i16* %v1_158b4, align 2
  %v3_158b4 = zext i16 %v2_158b4 to i32
  store i32 %v3_158b4, i32* @ip, align 4
  %v1_158b8 = and i32 %v3_158b4, 32
  %v2_158b8 = icmp eq i32 %v1_158b8, 0
  br i1 %v2_158b8, label %dec_label_pc_158e8, label %dec_label_pc_158c0

dec_label_pc_158c0:                               ; preds = %dec_label_pc_158a4, %dec_label_pc_158b4
  %v0_158c4 = call i32 @__aeabi_read_tp()
  store i32 %v0_158c4, i32* %r0.global-to-local, align 4
  %v3_158c8 = load i16, i16* @global_var_22308.76, align 2
  %v4_158c8 = sext i16 %v3_158c8 to i32
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_158d0 = add i32 %v4_158c8, %v0_158c4
  %v4_158d0 = inttoptr i32 %v3_158d0 to i32*
  store i32 9, i32* %v4_158d0, align 4
  br label %dec_label_pc_158d4

dec_label_pc_158d4:                               ; preds = %dec_label_pc_15910, %dec_label_pc_158c0
  %v0_158d4 = load i32, i32* @r4, align 4
  %v1_158d4 = inttoptr i32 %v0_158d4 to i16*
  %v2_158d4 = load i16, i16* %v1_158d4, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_158dc = or i16 %v2_158d4, 8
  store i16 %v1_158dc, i16* %v1_158d4, align 2
  br label %bb11

dec_label_pc_158e8:                               ; preds = %dec_label_pc_158b4
  %tmp14 = urem i16 %v2_158b4, 4
  %v2_158e8 = icmp eq i16 %tmp14, 0
  br i1 %v2_158e8, label %dec_label_pc_15944, label %dec_label_pc_158f0

dec_label_pc_158f0:                               ; preds = %dec_label_pc_158e8
  %v1_158f0 = and i32 %v3_158b4, 4
  store i32 %v1_158f0, i32* @r1, align 4
  %v2_158f0 = icmp eq i32 %v1_158f0, 0
  br i1 %v2_158f0, label %dec_label_pc_158f8, label %dec_label_pc_15928

dec_label_pc_158f8:                               ; preds = %dec_label_pc_158f0
  %v1_158f8 = add i32 %v0_158f8, 20
  %v2_158f8 = inttoptr i32 %v1_158f8 to i32*
  %v3_158f8 = load i32, i32* %v2_158f8, align 4
  store i32 %v3_158f8, i32* %r2.global-to-local, align 4
  %v1_158fc = add i32 %v0_158f8, 16
  %v2_158fc = inttoptr i32 %v1_158fc to i32*
  %v3_158fc = load i32, i32* %v2_158fc, align 4
  %v9_15900 = icmp eq i32 %v3_158f8, %v3_158fc
  br i1 %v9_15900, label %dec_label_pc_15908, label %dec_label_pc_15910

dec_label_pc_15908:                               ; preds = %dec_label_pc_158f8
  %v1_15908 = and i32 %v3_158b4, 2
  %v2_15908 = icmp eq i32 %v1_15908, 0
  br i1 %v2_15908, label %dec_label_pc_15928, label %dec_label_pc_15910

dec_label_pc_15910:                               ; preds = %dec_label_pc_158f8, %dec_label_pc_15908
  %v1_15910 = and i32 %v3_158b4, 1024
  %tmp12 = udiv i32 %v1_15910, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_1591c = call i32 @__GI_fseek()
  store i32 %v0_1591c, i32* %r0.global-to-local, align 4
  %v2_15920 = icmp eq i32 %v0_1591c, 0
  br i1 %v2_15920, label %.dec_label_pc_15928_crit_edge, label %dec_label_pc_158d4

.dec_label_pc_15928_crit_edge:                    ; preds = %dec_label_pc_15910
  %v0_15928.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15928

dec_label_pc_15928:                               ; preds = %.dec_label_pc_15928_crit_edge, %dec_label_pc_158f0, %dec_label_pc_15908
  %v2_15934 = phi i32 [ %v0_15928.pre, %.dec_label_pc_15928_crit_edge ], [ %v0_158f8, %dec_label_pc_158f0 ], [ %v0_158f8, %dec_label_pc_15908 ]
  %v1_15928 = inttoptr i32 %v2_15934 to i16*
  %v2_15928 = load i16, i16* %v1_15928, align 2
  %v1_1592c = add i32 %v2_15934, 8
  %v2_1592c = inttoptr i32 %v1_1592c to i32*
  %v3_1592c = load i32, i32* %v2_1592c, align 4
  store i32 %v3_1592c, i32* %r2.global-to-local, align 4
  %v1_15930 = and i16 %v2_15928, -4
  store i16 %v1_15930, i16* %v1_15928, align 2
  %v0_15938 = load i32, i32* %r2.global-to-local, align 4
  %v1_15938 = load i32, i32* @r4, align 4
  %v2_15938 = add i32 %v1_15938, 20
  %v3_15938 = inttoptr i32 %v2_15938 to i32*
  store i32 %v0_15938, i32* %v3_15938, align 4
  %v0_1593c = load i32, i32* %r2.global-to-local, align 4
  %v1_1593c = load i32, i32* @r4, align 4
  %v2_1593c = add i32 %v1_1593c, 24
  %v3_1593c = inttoptr i32 %v2_1593c to i32*
  store i32 %v0_1593c, i32* %v3_1593c, align 4
  %v0_15940 = load i32, i32* %r2.global-to-local, align 4
  %v1_15940 = load i32, i32* @r4, align 4
  %v2_15940 = add i32 %v1_15940, 16
  %v3_15940 = inttoptr i32 %v2_15940 to i32*
  store i32 %v0_15940, i32* %v3_15940, align 4
  %v0_15944.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15944

dec_label_pc_15944:                               ; preds = %dec_label_pc_158e8, %dec_label_pc_15928
  %v2_15950 = phi i32 [ %v0_158f8, %dec_label_pc_158e8 ], [ %v0_15944.pre, %dec_label_pc_15928 ]
  %v1_15944 = inttoptr i32 %v2_15950 to i16*
  %v2_15944 = load i16, i16* %v1_15944, align 2
  %v3_15944 = zext i16 %v2_15944 to i32
  %v1_15948 = or i16 %v2_15944, 64
  %v1_1594c = and i32 %v3_15944, 2816
  store i32 %v1_1594c, i32* %r0.global-to-local, align 4
  %v2_1594c = icmp eq i32 %v1_1594c, 0
  store i16 %v1_15948, i16* %v1_15944, align 2
  br i1 %v2_1594c, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_15944
  %v1_15954 = load i32, i32* @r4, align 4
  %v2_15954 = add i32 %v1_15954, 12
  %v3_15954 = inttoptr i32 %v2_15954 to i32*
  %v4_15954 = load i32, i32* %v3_15954, align 4
  %v3_15958 = add i32 %v1_15954, 28
  %v4_15958 = inttoptr i32 %v3_15958 to i32*
  store i32 %v4_15954, i32* %v4_15958, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_15944
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_158d4, %.thread1
  %v2_15960 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15960, i32* @r4, align 4
  %v1_15964 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15964

; uselistorder directives
  uselistorder i32 %v2_15934, { 1, 0 }
  uselistorder i32 %v0_158f8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_15894, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15944, { 1, 0 }
  uselistorder label %dec_label_pc_15928, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15910, { 1, 0 }
  uselistorder label %dec_label_pc_158c0, { 1, 0 }
  uselistorder label %dec_label_pc_158b4, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_1596c = load i32, i32* @r2, align 4
  %v1_1596c = icmp slt i32 %v0_1596c, 0
  %v0_15970 = load i32, i32* @r0, align 4
  %v1_15974 = and i32 %v0_15970, 2048
  %v2_159a8 = icmp eq i32 %v1_15974, 0
  br i1 %v1_1596c, label %dec_label_pc_159a8, label %dec_label_pc_1597c

dec_label_pc_1597c:                               ; preds = %entry
  br i1 %v2_159a8, label %dec_label_pc_15984, label %dec_label_pc_159b0

dec_label_pc_15984:                               ; preds = %dec_label_pc_1597c
  %v7_15984 = icmp eq i32 %v0_15970, 256
  %v0_15988 = load i32, i32* @r1, align 4
  %v1_15988 = inttoptr i32 %v0_15988 to i32*
  %v2_15988 = load i32, i32* %v1_15988, align 4
  %v2_1598c = urem i32 %v2_15988, 256
  %v2_1598c.v2_15988 = select i1 %v7_15984, i32 %v2_1598c, i32 %v2_15988
  br i1 %v7_15984, label %.thread, label %dec_label_pc_15994

dec_label_pc_15994:                               ; preds = %dec_label_pc_15984
  %v7_15994 = icmp eq i32 %v0_15970, 512
  br i1 %v7_15994, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15994
  %v4_1599c = urem i32 %v2_1598c.v2_15988, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15994, %dec_label_pc_15984, %bb
  %v1_159a4 = phi i32 [ %v2_15988, %dec_label_pc_15994 ], [ %v2_1598c, %dec_label_pc_15984 ], [ %v4_1599c, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_159a4

dec_label_pc_159a8:                               ; preds = %entry
  br i1 %v2_159a8, label %dec_label_pc_159b8, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_1597c, %dec_label_pc_159a8
  %v0_159b0 = load i32, i32* @r1, align 4
  %v1_159b0 = inttoptr i32 %v0_159b0 to i32*
  %v2_159b0 = load i32, i32* %v1_159b0, align 4
  %v3_159b0 = add i32 %v0_159b0, 4
  %v4_159b0 = inttoptr i32 %v3_159b0 to i32*
  %v5_159b0 = load i32, i32* %v4_159b0, align 4
  store i32 %v5_159b0, i32* @r1, align 4
  ret i32 %v2_159b0

dec_label_pc_159b8:                               ; preds = %dec_label_pc_159a8
  %v7_159b8 = icmp eq i32 %v0_15970, 256
  %v0_159bc = load i32, i32* @r1, align 4
  %v1_159bc = inttoptr i32 %v0_159bc to i32*
  %v2_159bc = load i32, i32* %v1_159bc, align 4
  br i1 %v7_159b8, label %.thread1, label %dec_label_pc_159cc

.thread1:                                         ; preds = %dec_label_pc_159b8
  %v4_159c0 = mul i32 %v2_159bc, 16777216
  %v4_159c4 = sdiv i32 %v4_159c0, 16777216
  br label %.thread3

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159b8
  %v7_159cc = icmp eq i32 %v0_15970, 512
  br i1 %v7_159cc, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_159cc
  %v4_159d0 = mul i32 %v2_159bc, 65536
  %v4_159d4 = sdiv i32 %v4_159d0, 65536
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %dec_label_pc_159cc, %bb9
  %v0_159d8 = phi i32 [ %v2_159bc, %dec_label_pc_159cc ], [ %v4_159c4, %.thread1 ], [ %v4_159d4, %bb9 ]
  %v3_159d8 = ashr i32 %v0_159d8, 31
  store i32 %v3_159d8, i32* @r1, align 4
  ret i32 %v0_159d8

; uselistorder directives
  uselistorder i32 %v0_159d8, { 1, 0 }
  uselistorder i32 %v2_159bc, { 2, 0, 1 }
  uselistorder i32 %v2_1598c, { 1, 0 }
  uselistorder i32 %v2_15988, { 1, 2, 0 }
  uselistorder i1 %v2_159a8, { 1, 0 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_159b0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_159e0 = icmp eq i32 %arg2, 256
  store i1 %v7_159e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159e0, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_159e4 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_159e4, i8* %tmp3, align 1
  %v1_159e8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_159e8 = phi i1 [ false, %entry ], [ %v1_159e8.pre, %bb ]
  %v0_159e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_159e8, i32 %v0_159e8)
  %v7_159ec = icmp eq i32 %arg2, 2048
  store i1 %v7_159ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159ec, label %dec_label_pc_159f4, label %dec_label_pc_159fc

dec_label_pc_159f4:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_159f4 = add i32 %tmp2, 4
  %v6_159f4 = inttoptr i32 %v5_159f4 to i32*
  store i32 %arg4, i32* %v6_159f4, align 4
  ret i32 %tmp2

dec_label_pc_159fc:                               ; preds = %bb4
  %v7_159fc = icmp eq i32 %arg2, 512
  store i1 %v7_159fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159fc, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_159fc
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_159fc
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 512, { 8, 9, 10, 11, 3, 6, 13, 14, 5, 15, 7, 16, 4, 12, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_15a18 = icmp slt i32 %tmp21, 0
  %v2_15a18 = icmp eq i32 %tmp21, 0
  store i1 %v2_15a18, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_15a20 = load i32, i32* @r2, align 4
  store i32 %v0_15a20, i32* %r5.global-to-local, align 4
  %v0_15a24 = load i32, i32* @r3, align 4
  store i32 %v0_15a24, i32* %r6.global-to-local, align 4
  br i1 %v1_15a18, label %dec_label_pc_15a2c, label %dec_label_pc_15a4c

dec_label_pc_15a2c:                               ; preds = %entry
  %v1_15a2c = icmp slt i32 %v0_15a24, 0
  %v2_15a2c = icmp eq i32 %v0_15a24, 0
  store i1 %v2_15a2c, i1* %cpsr_z.global-to-local, align 1
  %v1_15a30 = sub i32 0, %tmp21
  store i32 %v1_15a30, i32* %r7.global-to-local, align 4
  br i1 %v1_15a2c, label %dec_label_pc_15a38, label %dec_label_pc_15a4c

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a2c
  %v1_15a3c = sub i32 0, %v0_15a20
  store i32 %v1_15a3c, i32* %r5.global-to-local, align 4
  %v2_15a3c = icmp eq i32 %v0_15a20, 0
  %v2_15a40 = icmp eq i1 %v2_15a3c, false
  %v5_15a40 = sext i1 %v2_15a40 to i32
  %v6_15a40 = sub i32 %v5_15a40, %v0_15a24
  store i32 %v6_15a40, i32* %r6.global-to-local, align 4
  %v19_15a40 = icmp eq i32 %v6_15a40, 0
  store i1 %v19_15a40, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15a54

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_15a2c, %entry
  br label %dec_label_pc_15a54

dec_label_pc_15a54:                               ; preds = %dec_label_pc_15a38, %dec_label_pc_15a4c
  %storemerge = phi i8 [ 0, %dec_label_pc_15a4c ], [ 1, %dec_label_pc_15a38 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_15a5c = load i32, i32* %r7.global-to-local, align 4
  %v2_15a64 = udiv i32 -1, %v0_15a5c
  store i32 %v2_15a64, i32* %fp.global-to-local, align 4
  %v3_15a74 = urem i32 -1, %v0_15a5c
  %v1_15a78 = add i32 %v3_15a74, 1
  store i32 %v1_15a78, i32* %sb.global-to-local, align 4
  %v9_15a7c = icmp eq i32 %v1_15a78, %v0_15a5c
  store i1 %v9_15a7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a7c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15a54
  %v1_15a80 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_15a80, i32* %sb.global-to-local, align 4
  %v2_15a84 = add i32 %v2_15a64, 1
  store i32 %v2_15a84, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15a54, %bb
  %v0_15a88 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15a88, i32* %sl.global-to-local, align 4
  %v0_15a8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15a8c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15a90thread-pre-split:               ; preds = %bb25
  %v0_15a90.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_15a94.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_15a98.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a90thread-pre-split, %.thread
  %v0_15b14 = phi i32 [ %v0_15a98.pre, %dec_label_pc_15a90thread-pre-split ], [ %v0_15a5c, %.thread ]
  %v0_15b0c = phi i32 [ %v0_15a94.pre, %dec_label_pc_15a90thread-pre-split ], [ %v0_15a8c, %.thread ]
  %v0_15aa8 = phi i32 [ %v0_15a90.pr, %dec_label_pc_15a90thread-pre-split ], [ %v0_15a88, %.thread ]
  %v2_15a90 = icmp eq i32 %v0_15aa8, 0
  store i1 %v2_15a90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a90, label %dec_label_pc_15b08, label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %dec_label_pc_15a90
  %v2_15aa4 = udiv i32 %v0_15aa8, %v0_15b14
  %v3_15aa4 = urem i32 %v0_15aa8, %v0_15b14
  store i32 %v2_15aa4, i32* %sl.global-to-local, align 4
  %v2_15ac4 = udiv i32 %v0_15b0c, %v0_15b14
  %v3_15ac4 = urem i32 %v0_15b0c, %v0_15b14
  %v0_15ac8 = load i32, i32* %sb.global-to-local, align 4
  %v2_15ac8 = mul i32 %v0_15ac8, %v3_15aa4
  %v2_15ad0 = add i32 %v2_15ac8, %v3_15ac4
  store i32 %v2_15ad0, i32* %r5.global-to-local, align 4
  %v0_15adc = load i32, i32* %fp.global-to-local, align 4
  %v2_15adc = mul i32 %v0_15adc, %v3_15aa4
  %v2_15ae4 = add i32 %v2_15adc, %v2_15ac4
  %v2_15aec = udiv i32 %v2_15ad0, %v0_15b14
  %v2_15af4 = add i32 %v2_15ae4, %v2_15aec
  br label %dec_label_pc_15b20

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15a90
  %v2_15b08 = udiv i32 %v0_15b0c, %v0_15b14
  br label %dec_label_pc_15b20

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15aa0, %dec_label_pc_15b08
  %storemerge28 = phi i32 [ %v2_15b08, %dec_label_pc_15b08 ], [ %v2_15af4, %dec_label_pc_15aa0 ]
  %v0_15b3c = phi i32 [ %v2_15b08, %dec_label_pc_15b08 ], [ %v2_15af4, %dec_label_pc_15aa0 ]
  %v1_15b3c = phi i32 [ 0, %dec_label_pc_15b08 ], [ %v2_15aa4, %dec_label_pc_15aa0 ]
  %v2_15ad0.pn = phi i32 [ %v0_15b0c, %dec_label_pc_15b08 ], [ %v2_15ad0, %dec_label_pc_15aa0 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_15b28 = urem i32 %v2_15ad0.pn, %v0_15b14
  %v2_15b24 = icmp ugt i32 %v0_15b28, 8
  %v7_15b24 = icmp eq i32 %v0_15b28, 9
  store i1 %v7_15b24, i1* %cpsr_z.global-to-local, align 1
  %v1_15b2c = add i32 %v0_15b28, 48
  %v0_15b34 = load i32, i32* %r8.global-to-local, align 4
  %v1_15b34 = add i32 %v0_15b34, -1
  store i32 %v1_15b34, i32* %r8.global-to-local, align 4
  %v2_15b38 = xor i1 %v7_15b24, true
  %v3_15b38 = and i1 %v2_15b24, %v2_15b38
  %extract.t = trunc i32 %v1_15b2c to i8
  br i1 %v3_15b38, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_15b20
  %v2_15b28 = add i32 %v0_15b28, %tmp11
  %extract.t9 = trunc i32 %v2_15b28 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_15b20, %bb24
  %v0_15b40.off0 = phi i8 [ %extract.t, %dec_label_pc_15b20 ], [ %extract.t9, %bb24 ]
  %v2_15b3c = or i32 %v0_15b3c, %v1_15b3c
  %v4_15b3c = icmp eq i32 %v2_15b3c, 0
  store i1 %v4_15b3c, i1* %cpsr_z.global-to-local, align 1
  %v3_15b40 = inttoptr i32 %v1_15b34 to i8*
  store i8 %v0_15b40.off0, i8* %v3_15b40, align 1
  %v0_15b44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15b44, label %dec_label_pc_15b48, label %dec_label_pc_15a90thread-pre-split

dec_label_pc_15b48:                               ; preds = %bb25
  %v4_15b4810 = zext i8 %storemerge to i32
  store i32 %v4_15b4810, i32* @r3, align 4
  %v2_15b4c = icmp eq i8 %storemerge, 0
  store i1 %v2_15b4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b4c, label %dec_label_pc_15b48..thread2_crit_edge, label %bb26

dec_label_pc_15b48..thread2_crit_edge:            ; preds = %dec_label_pc_15b48
  %v0_15b58.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_15b48
  store i32 45, i32* @r3, align 4
  %v3_15b54 = load i32, i32* %r8.global-to-local, align 4
  %v4_15b54 = add i32 %v3_15b54, -1
  %v5_15b54 = inttoptr i32 %v4_15b54 to i8*
  store i8 45, i8* %v5_15b54, align 1
  %v6_15b54 = load i32, i32* %r8.global-to-local, align 4
  %v7_15b54 = add i32 %v6_15b54, -1
  store i32 %v7_15b54, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15b48..thread2_crit_edge, %bb26
  %v0_15b58 = phi i32 [ %v0_15b58.pre, %dec_label_pc_15b48..thread2_crit_edge ], [ %v7_15b54, %bb26 ]
  ret i32 %v0_15b58

; uselistorder directives
  uselistorder i32 %v0_15b28, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b14, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_15a20, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 1, 2, 3, 0, 4 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_15b20, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15a54, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_15b68 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_15b74 = add i32 %arg4, 8
  %v2_15b74 = inttoptr i32 %v1_15b74 to i8*
  %v3_15b74 = load i8, i8* %v2_15b74, align 1
  %v4_15b74 = zext i8 %v3_15b74 to i32
  store i32 %v4_15b74, i32* %sb.global-to-local, align 4
  %v1_15b78 = or i32 %v4_15b74, 32
  %v7_15b7c = icmp eq i32 %v1_15b78, 97
  store i1 %v7_15b7c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_15b94 = inttoptr i32 %arg4 to i32*
  %v2_15b94 = load i32, i32* %v1_15b94, align 4
  store i32 %v2_15b94, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_15b9c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15b9c, i32* %r6.global-to-local, align 4
  store i32 50912, i32* %ip.global-to-local, align 4
  br i1 %v7_15b7c, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_15ba4 = add nuw nsw i32 %v4_15b74, 6
  store i32 %v2_15ba4, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_15bb4 = phi i32 [ %v0_15b9c, %entry ], [ %v2_15ba4, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_15bac = add i32 %arg4, 12
  %v2_15bac = inttoptr i32 %v1_15bac to i32*
  %v3_15bac = load i32, i32* %v2_15bac, align 4
  store i32 %v3_15bac, i32* %r2.global-to-local, align 4
  %v1_15bb0 = add i32 %arg4, 4
  %v2_15bb0 = inttoptr i32 %v1_15bb0 to i32*
  %v3_15bb0 = load i32, i32* %v2_15bb0, align 4
  store i32 %v3_15bb0, i32* @lr, align 4
  br i1 %v7_15b7c, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_15bb4 = urem i32 %v1_15bb4, 256
  store i32 %v2_15bb4, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_15bb8 = icmp slt i32 %v2_15b94, 0
  %v2_15bb8 = icmp eq i32 %v2_15b94, 0
  store i1 %v2_15bb8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_15bb8, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_15bc8 = and i32 %v3_15bac, 2
  %v2_15bc8 = icmp eq i32 %v1_15bc8, 0
  store i1 %v2_15bc8, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_15bc8, label %dec_label_pc_15be0, label %dec_label_pc_15bec

dec_label_pc_15be0:                               ; preds = %bb205
  %v1_15be0 = urem i32 %v3_15bac, 2
  %v2_15be0 = icmp eq i32 %v1_15be0, 0
  store i1 %v2_15be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15be0, label %dec_label_pc_15bf0, label %dec_label_pc_15bec

dec_label_pc_15bec:                               ; preds = %dec_label_pc_15be0, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_15be0 ]
  %v0_15bec.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_15be0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_15bec.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_15bf0

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15be0, %dec_label_pc_15bec
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_15b9c, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_15b9c, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_15c0c = fptrunc double %arg2 to float
  %v2_15c0c = bitcast float %v1_15c0c to i32
  %v9_15c0c = call i32 @__aeabi_dcmpeq(i32 %v2_15c0c, i32 %v0_15b9c, i32 %v2_15c0c, i32 %v0_15b9c, i32 0)
  store i32 %v9_15c0c, i32* %r0.global-to-local, align 4
  %v2_15c10 = icmp eq i32 %v9_15c0c, 0
  store i1 %v2_15c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c10, label %bb207, label %dec_label_pc_15c20

bb207:                                            ; preds = %dec_label_pc_15bf0
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15cd4

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15bf0
  %v0_15c20 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15c20, i32* @r0, align 4
  %v0_15c24 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15c24, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_15c30 = call i32 @__aeabi_dcmpeq(i32 %v0_15c20, i32 %v0_15c24, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_15c30, i32* %r0.global-to-local, align 4
  %v2_15c34 = icmp eq i32 %v7_15c30, 0
  store i1 %v2_15c34, i1* %cpsr_z.global-to-local, align 1
  %v0_15c7c = load i32, i32* %r5.global-to-local, align 4
  %v1_15c7c = sext i32 %v0_15c7c to i64
  %v2_15c7c = bitcast i64 %v1_15c7c to double
  br i1 %v2_15c34, label %dec_label_pc_15c7c, label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15c20
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_15c4c = fdiv double 0.000000e+00, %v2_15c7c
  %v10_15c4c = fptrunc double %v9_15c4c to float
  %v11_15c4c = bitcast float %v10_15c4c to i32
  store i32 %v11_15c4c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_15c58 = call i32 @__aeabi_dcmplt(i32 %v11_15c4c, i32 1072693248, i32 0, i32 0)
  store i32 %v4_15c58, i32* %r0.global-to-local, align 4
  %v2_15c5c = icmp eq i32 %v4_15c58, 0
  store i1 %v2_15c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c5c, label %bb208, label %dec_label_pc_15c68

bb208:                                            ; preds = %dec_label_pc_15c3c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15c68:                               ; preds = %dec_label_pc_15c3c
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_15e48

dec_label_pc_15c7c:                               ; preds = %dec_label_pc_15c20
  store i32 %v0_15c7c, i32* @r0, align 4
  %v0_15c80 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15c80, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15c8c = fptrunc double %v2_15c7c to float
  %v2_15c8c = bitcast float %v1_15c8c to i32
  %v6_15c8c = call i32 @__aeabi_dcmplt(i32 %v2_15c8c, i32 %v0_15c80, i32 0, i32 0)
  store i32 %v6_15c8c, i32* %r0.global-to-local, align 4
  %v2_15c90 = icmp eq i32 %v6_15c8c, 0
  store i1 %v2_15c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c90, label %dec_label_pc_15c7c..thread9_crit_edge, label %bb209

dec_label_pc_15c7c..thread9_crit_edge:            ; preds = %dec_label_pc_15c7c
  %v0_15cb0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_15c7c
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_15c98 = load i32, i32* %r6.global-to-local, align 4
  %v2_15c98 = sub i32 0, %v1_15c98
  store i32 %v2_15c98, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_15c98, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15c7c..thread9_crit_edge, %bb209
  %v0_15cb0 = phi i32 [ %v0_15cb0.pre, %dec_label_pc_15c7c..thread9_crit_edge ], [ %v2_15c98, %bb209 ]
  %v0_15cac = load i32, i32* %r5.global-to-local, align 4
  %v1_15cac = sext i32 %v0_15cac to i64
  %v2_15cac = bitcast i64 %v1_15cac to double
  %v9_15cb4 = fmul double %v2_15cac, 0.000000e+00
  %v10_15cb4 = fptrunc double %v9_15cb4 to float
  %v11_15cb4 = bitcast float %v10_15cb4 to i32
  store i32 %v11_15cb4, i32* @r2, align 4
  store i32 %v0_15cb0, i32* %r3.global-to-local, align 4
  store i32 %v0_15cac, i32* @r0, align 4
  store i32 %v0_15cb0, i32* %r1.global-to-local, align 4
  %v7_15cc8 = call i32 @__aeabi_dcmpeq(i32 %v0_15cac, i32 %v0_15cb0, i32 %v11_15cb4, i32 %v0_15cb0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_15cc8, i32* %r0.global-to-local, align 4
  %v2_15ccc = icmp eq i32 %v7_15cc8, 0
  store i1 %v2_15ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ccc, label %dec_label_pc_15d20, label %.thread9.dec_label_pc_15cd4_crit_edge

.thread9.dec_label_pc_15cd4_crit_edge:            ; preds = %.thread9
  %v3_15cd4.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_15cd4

dec_label_pc_15cd4:                               ; preds = %bb207, %.thread9.dec_label_pc_15cd4_crit_edge
  %v3_15cd4 = phi i32 [ %v3_15cd4.pre, %.thread9.dec_label_pc_15cd4_crit_edge ], [ %arg4, %bb207 ]
  %v1_15c18.v0_15c045 = phi i32 [ 0, %.thread9.dec_label_pc_15cd4_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_15cd4, i32* %ip.global-to-local, align 4
  %v2_15cdc = add i32 %v3_15cd4, 16
  %v3_15cdc = inttoptr i32 %v2_15cdc to i32*
  store i32 32, i32* %v3_15cdc, align 4
  %v0_15ce4 = load i32, i32* %sb.global-to-local, align 4
  %v7_15ce4 = icmp eq i32 %v0_15ce4, 96
  store i1 %v7_15ce4, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_15ce4, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_15cd4
  %v5_15cf8 = or i32 %v1_15c18.v0_15c045, 4
  store i32 %v5_15cf8, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_15cd4, %bb210
  %v4_15cfc = phi i32 [ %v5_15cf8, %bb210 ], [ 3, %dec_label_pc_15cd4 ]
  %v4_15cfc.v1_15c18.v0_15c04 = select i1 %tmp274, i32 %v4_15cfc, i32 %v1_15c18.v0_15c045
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33960), i32* %r3.global-to-local, align 4
  %v2_15d10 = add i32 %v4_15cfc.v1_15c18.v0_15c04, add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33960)
  store i32 %v2_15d10, i32* %r2.global-to-local, align 4
  %v2_15d14 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_15d14, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1623c

dec_label_pc_15d20:                               ; preds = %.thread9
  %v0_15d20 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15d20, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_15d28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15d28, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_15d30 = call i32 @__aeabi_dcmplt(i32 %v0_15d28, i32 %v0_15d20, i32 0, i32 1100470148)
  store i32 %v6_15d30, i32* %r0.global-to-local, align 4
  %v2_15d34 = icmp eq i32 %v6_15d30, 0
  store i1 %v2_15d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d34, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_15d20
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_15d20, %bb211
  %v0_15d3c = phi i32 [ 0, %dec_label_pc_15d20 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33936), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33936), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_15d70 = icmp eq i32 %v0_15d3c, 0
  br label %dec_label_pc_15d60

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15df8.dec_label_pc_15d60_crit_edge, %bb212
  %v2_15d68 = phi i32 [ add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33936), %bb212 ], [ %v2_15d68.pre, %dec_label_pc_15df8.dec_label_pc_15d60_crit_edge ]
  %v0_15d64 = phi i32 [ 9, %bb212 ], [ %v0_15df8, %dec_label_pc_15df8.dec_label_pc_15d60_crit_edge ]
  %v2_15da8 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_15df8.dec_label_pc_15d60_crit_edge ]
  store i32 %v0_15d3c, i32* %r2.global-to-local, align 4
  %v1_15d64 = add i32 %v0_15d64, -1
  store i32 %v1_15d64, i32* %sl.global-to-local, align 4
  store i32 %v2_15d68, i32* @lr, align 4
  %v3_15d6c = mul i32 %v1_15d64, 8
  store i32 %v3_15d6c, i32* %r3.global-to-local, align 4
  store i1 %v2_15d70, i1* %cpsr_z.global-to-local, align 1
  %v0_15d74 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15d74, i32* %r0.global-to-local, align 4
  %v0_15d78 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15d78, i32* %r1.global-to-local, align 4
  %v2_15d7c = add i32 %v3_15d6c, %v2_15d68
  store i32 %v2_15d7c, i32* %ip.global-to-local, align 4
  %v1_15db8 = inttoptr i32 %v2_15d7c to i32*
  %v2_15db8 = load i32, i32* %v1_15db8, align 4
  %v3_15db8 = sext i32 %v2_15db8 to i64
  %v1_15dbc = sext i32 %v0_15d74 to i64
  %v2_15dbc = bitcast i64 %v1_15dbc to double
  br i1 %v2_15d70, label %dec_label_pc_15db8, label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d60
  %v8_15d88 = bitcast i64 %v3_15db8 to double
  %v9_15d88 = fmul double %v2_15dbc, %v8_15d88
  %v10_15d88 = fptrunc double %v9_15d88 to float
  %v11_15d88 = bitcast float %v10_15d88 to i32
  store i32 %v11_15d88, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_15d88, i32* %r7.global-to-local, align 4
  store i32 %v0_15d78, i32* %r8.global-to-local, align 4
  %v4_15d9c = call i32 @__aeabi_dcmplt(i32 %v11_15d88, i32 %v0_15d78, i32 0, i32 1104006501)
  store i32 %v4_15d9c, i32* %r0.global-to-local, align 4
  %v2_15da0 = icmp eq i32 %v4_15d9c, 0
  store i1 %v2_15da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15da0, label %dec_label_pc_15df8, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_15d84
  %v1_15da8 = load i32, i32* %r4.global-to-local, align 4
  %v3_15da8 = sub i32 %v2_15da8, %v1_15da8
  store i32 %v3_15da8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15df0

dec_label_pc_15db8:                               ; preds = %dec_label_pc_15d60
  store i32 %v0_15d78, i32* @r1, align 4
  %v8_15dc4 = bitcast i64 %v3_15db8 to double
  %v9_15dc4 = fdiv double %v2_15dbc, %v8_15dc4
  %v10_15dc4 = fptrunc double %v9_15dc4 to float
  %v11_15dc4 = bitcast float %v10_15dc4 to i32
  store i32 %v11_15dc4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_15dc4, i32* %r7.global-to-local, align 4
  store i32 %v0_15d78, i32* %r8.global-to-local, align 4
  %v4_15dd8 = call i32 @__aeabi_dcmpge(i32 %v11_15dc4, i32 %v0_15d78, i32 0, i32 1100470148)
  store i32 %v4_15dd8, i32* %r0.global-to-local, align 4
  %v2_15ddc = icmp eq i32 %v4_15dd8, 0
  store i1 %v2_15ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ddc, label %dec_label_pc_15df8, label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15db8
  %v1_15de8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15de8 = add i32 %v1_15de8, %v2_15da8
  store i32 %v2_15de8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15df0

dec_label_pc_15df0:                               ; preds = %.thread10, %dec_label_pc_15de4
  %stack_var_-192.2 = phi i32 [ %v2_15de8, %dec_label_pc_15de4 ], [ %v3_15da8, %.thread10 ]
  %v0_15df0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15df0, i32* %r5.global-to-local, align 4
  %v0_15df4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15df4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15df8

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15d84, %dec_label_pc_15db8, %dec_label_pc_15df0
  %stack_var_-192.3 = phi i32 [ %v2_15da8, %dec_label_pc_15db8 ], [ %stack_var_-192.2, %dec_label_pc_15df0 ], [ %v2_15da8, %dec_label_pc_15d84 ]
  %v0_15df8 = load i32, i32* %sl.global-to-local, align 4
  %v2_15df8 = icmp eq i32 %v0_15df8, 0
  store i1 %v2_15df8, i1* %cpsr_z.global-to-local, align 1
  %v0_15dfc = load i32, i32* %r4.global-to-local, align 4
  %v3_15dfc = sdiv i32 %v0_15dfc, 2
  store i32 %v3_15dfc, i32* %r4.global-to-local, align 4
  br i1 %v2_15df8, label %dec_label_pc_15e04, label %dec_label_pc_15df8.dec_label_pc_15d60_crit_edge

dec_label_pc_15df8.dec_label_pc_15d60_crit_edge:  ; preds = %dec_label_pc_15df8
  %v2_15d68.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_15d60

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15df8
  %v0_15e04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15e04, i32* @r0, align 4
  %v0_15e08 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15e08, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_15e14 = call i32 @__aeabi_dcmpge(i32 %v0_15e04, i32 %v0_15e08, i32 0, i32 1104006501)
  store i32 %v6_15e14, i32* %r0.global-to-local, align 4
  %v2_15e18 = icmp eq i32 %v6_15e14, 0
  store i1 %v2_15e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e18, label %dec_label_pc_15e48, label %dec_label_pc_15e20

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15e04
  %v0_15e20 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e20 = sext i32 %v0_15e20 to i64
  %v2_15e20 = bitcast i64 %v1_15e20 to double
  %v0_15e24 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15e24, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_15e30 = fdiv double %v2_15e20, 0.000000e+00
  %v10_15e30 = fptrunc double %v9_15e30 to float
  %v11_15e30 = bitcast float %v10_15e30 to i32
  store i32 %v11_15e30, i32* %r0.global-to-local, align 4
  store i32 %v11_15e30, i32* %r5.global-to-local, align 4
  %v1_15e40 = add i32 %stack_var_-192.3, 1
  store i32 %v1_15e40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e20, %bb208, %dec_label_pc_15e04, %dec_label_pc_15c68
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_15e04 ], [ -1, %dec_label_pc_15c68 ], [ -1, %bb208 ], [ %v1_15e40, %dec_label_pc_15e20 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15e4c = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_15e4c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15ec8, %dec_label_pc_15e48
  %v0_15e50 = load i32, i32* %r6.global-to-local, align 4
  %v0_15e54 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e58 = sext i32 %v0_15e54 to i64
  %v2_15e58 = bitcast i64 %v1_15e58 to double
  %v3_15e58 = fptoui double %v2_15e58 to i32
  store i32 %v3_15e58, i32* %r8.global-to-local, align 4
  store i32 %v3_15e58, i32* %r2.global-to-local, align 4
  store i32 %v0_15e50, i32* %r3.global-to-local, align 4
  store i32 %v0_15e54, i32* @r0, align 4
  store i32 %v0_15e50, i32* %r1.global-to-local, align 4
  %v6_15e74 = call i32 @__aeabi_dsub(i32 %v0_15e54, i32 %v0_15e50, i32 %v3_15e58, i32 %v0_15e50)
  %v7_15e74 = sext i32 %v6_15e74 to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_15e80 = bitcast i64 %v7_15e74 to double
  %v9_15e80 = fmul double %v3_15e80, 0.000000e+00
  %v10_15e80 = fptrunc double %v9_15e80 to float
  %v11_15e80 = bitcast float %v10_15e80 to i32
  store i32 %v11_15e80, i32* %r0.global-to-local, align 4
  %v0_15e84 = load i32, i32* %sl.global-to-local, align 4
  %v1_15e84 = add i32 %v0_15e84, 9
  store i32 %v1_15e84, i32* %sl.global-to-local, align 4
  store i32 %v11_15e80, i32* %r5.global-to-local, align 4
  store i32 %v0_15e50, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_15e94.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15e94

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e94.dec_label_pc_15e94_crit_edge, %dec_label_pc_15e50
  %v1_15ea8 = phi i32 [ %v1_15ea8.pre, %dec_label_pc_15e94.dec_label_pc_15e94_crit_edge ], [ %v1_15e84, %dec_label_pc_15e50 ]
  %v0_15ea0 = phi i32 [ %v0_15ebc, %dec_label_pc_15e94.dec_label_pc_15e94_crit_edge ], [ 0, %dec_label_pc_15e50 ]
  %v0_15eac = phi i32 [ %v2_15eb8, %dec_label_pc_15e94.dec_label_pc_15e94_crit_edge ], [ %v0_15e94.pre, %dec_label_pc_15e50 ]
  %v3_15e9c = urem i32 %v0_15eac, 10
  %v1_15ea0 = add i32 %v0_15ea0, 1
  store i32 %v1_15ea0, i32* %r7.global-to-local, align 4
  %v1_15ea4 = or i32 %v3_15e9c, 48
  store i32 %v1_15ea4, i32* %r2.global-to-local, align 4
  %v2_15ea8 = sub i32 %v1_15ea8, %v1_15ea0
  store i32 %v2_15ea8, i32* %r3.global-to-local, align 4
  store i32 %v0_15eac, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_15eb4 = trunc i32 %v1_15ea4 to i8
  %v3_15eb4 = inttoptr i32 %v2_15ea8 to i8*
  store i8 %v1_15eb4, i8* %v3_15eb4, align 1
  %v0_15eb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_15eb8 = load i32, i32* %r1.global-to-local, align 4
  %v2_15eb8 = udiv i32 %v0_15eb8, %v1_15eb8
  store i32 %v2_15eb8, i32* %r0.global-to-local, align 4
  %v0_15ebc = load i32, i32* %r7.global-to-local, align 4
  %v7_15ebc = icmp eq i32 %v0_15ebc, 8
  store i1 %v7_15ebc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_15eb8, i32* %r8.global-to-local, align 4
  %v7_15ec4 = icmp slt i32 %v0_15ebc, 9
  br i1 %v7_15ec4, label %dec_label_pc_15e94.dec_label_pc_15e94_crit_edge, label %dec_label_pc_15ec8

dec_label_pc_15e94.dec_label_pc_15e94_crit_edge:  ; preds = %dec_label_pc_15e94
  %v1_15ea8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15e94

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15e94
  %v0_15ec8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ec8 = add i32 %v0_15ec8, 1
  store i32 %v1_15ec8, i32* %r4.global-to-local, align 4
  %v7_15ecc = icmp eq i32 %v0_15ec8, 0
  store i1 %v7_15ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15ecc, label %dec_label_pc_15e50, label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15ec8
  %v0_15ed4 = load i32, i32* %sb.global-to-local, align 4
  %v7_15ed4 = icmp eq i32 %v0_15ed4, 96
  store i1 %v7_15ed4, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_15ed4, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_15ed4
  %v5_15ee4 = add i32 %v0_15ed4, 32
  store i32 %v5_15ee4, i32* %r3.global-to-local, align 4
  %v5_15ee8 = urem i32 %v5_15ee4, 256
  store i32 %v5_15ee8, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_15ed4
  %v4_15ee0.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_15ee0.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_15ee0126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_15f08 = phi i32 [ %v0_15ed4, %thread-pre-split ], [ %v5_15ee8, %bb213 ]
  %v7_15eec = icmp eq i32 %v0_15f08, 103
  %. = zext i1 %v7_15eec to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_15ef8 = load i32, i32* %fp.global-to-local, align 4
  %v2_15ef8 = icmp eq i32 %v0_15ef8, 0
  store i1 %v2_15ef8, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_15ef8, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_15f00 = icmp eq i1 %v7_15eec, false
  store i1 %v2_15f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15f00, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_15f04 = add i32 %v0_15ef8, -1
  store i32 %v2_15f04, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_15f18 = phi i32 [ %v0_15ef8, %.thread16 ], [ %v0_15ef8, %bb218 ], [ %v2_15f04, %bb219 ]
  %v7_15f08 = icmp eq i32 %v0_15f08, 102
  store i1 %v7_15f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f08, label %dec_label_pc_15f14, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_15f18, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15f3c

dec_label_pc_15f14:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_15f18 = add i32 %v0_15f18, %stack_var_-192.4
  store i32 %v2_15f18, i32* %ip.global-to-local, align 4
  %v8_15f1c = icmp eq i32 %v2_15f18, -1
  store i1 %v8_15f1c, i1* %cpsr_z.global-to-local, align 1
  %v6_15f20 = icmp slt i32 %v2_15f18, -1
  br i1 %v6_15f20, label %dec_label_pc_15f24, label %dec_label_pc_15f3c

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15f14
  %v2_15f24 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_15f24, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_15f30 = bitcast i32* %stack_var_-83 to i8*
  %v4_15f30 = call i32 @__GI_memset(i8* %v3_15f30, i32 48, i32 17)
  store i32 %v4_15f30, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15f3c

dec_label_pc_15f3c:                               ; preds = %bb221, %dec_label_pc_15f14, %dec_label_pc_15f24
  %v1_15f8092 = phi i32 [ %v4_15f30, %dec_label_pc_15f24 ], [ %v2_15eb8, %dec_label_pc_15f14 ], [ %v2_15eb8, %bb221 ]
  %v1_15f64 = phi i32 [ -1, %dec_label_pc_15f24 ], [ %v2_15f18, %dec_label_pc_15f14 ], [ %v0_15f18, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_15f24 ], [ %stack_var_-192.4, %dec_label_pc_15f14 ], [ %stack_var_-192.4, %bb221 ]
  %v1_15f40 = add i32 %v1_15f64, -16
  %v3_15f40 = sub i32 15, %v1_15f64
  %v4_15f40 = and i32 %v3_15f40, %v1_15f64
  %v5_15f40 = icmp slt i32 %v4_15f40, 0
  %v6_15f40 = icmp slt i32 %v1_15f40, 0
  %v7_15f40 = icmp eq i32 %v1_15f64, 16
  store i1 %v7_15f40, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_15f4c = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_15f4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_15f54 = xor i1 %v6_15f40, %v5_15f40
  %v4_15f54 = or i1 %v7_15f40, %v3_15f54
  br i1 %v4_15f54, label %dec_label_pc_15f60, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_15f3c
  %v7_15f54137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_15f54137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f3c
  %v2_15f60 = ptrtoint i32* %stack_var_-82 to i32
  %v2_15f64 = add i32 %v1_15f64, %v2_15f60
  store i32 %v2_15f64, i32* %r3.global-to-local, align 4
  %v1_15f68 = add i32 %v2_15f64, 2
  %v2_15f68 = inttoptr i32 %v1_15f68 to i8*
  %v3_15f68 = load i8, i8* %v2_15f68, align 1
  %v4_15f68 = zext i8 %v3_15f68 to i32
  store i32 %v4_15f68, i32* %r2.global-to-local, align 4
  store i32 %v1_15f68, i32* %r1.global-to-local, align 4
  %v2_15f70 = icmp ugt i8 %v3_15f68, 51
  %v7_15f70 = icmp eq i8 %v3_15f68, 52
  store i1 %v7_15f70, i1* %cpsr_z.global-to-local, align 1
  %v2_15f74 = xor i1 %v2_15f70, true
  %v3_15f74 = or i1 %v7_15f70, %v2_15f74
  br i1 %v3_15f74, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_15f60
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_15f60, %bb222
  %v1_15f8090 = phi i32 [ %v1_15f8092, %dec_label_pc_15f60 ], [ 0, %bb222 ]
  %v2_15f78 = xor i1 %v7_15f70, true
  %v3_15f78 = and i1 %v2_15f70, %v2_15f78
  br i1 %v3_15f78, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_15f7c = phi i32 [ %v0_15f7c.pre, %._crit_edge87 ], [ %v7_15f54137141, %.thread140 ], [ %v1_15f68, %bb223 ], [ %v1_15f68, %bb224 ]
  %v1_15f80 = phi i32 [ %v1_15f80.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_15f8090, %bb223 ], [ 1, %bb224 ]
  %v1_15f7c = add i32 %v0_15f7c, -1
  %v2_15f7c = inttoptr i32 %v1_15f7c to i8*
  %v3_15f7c = load i8, i8* %v2_15f7c, align 1
  %v4_15f7c = zext i8 %v3_15f7c to i32
  store i32 %v1_15f7c, i32* %r1.global-to-local, align 4
  %v2_15f80 = add i32 %v4_15f7c, %v1_15f80
  %v1_15f84 = urem i32 %v2_15f80, 256
  store i32 %v1_15f84, i32* %r3.global-to-local, align 4
  %v2_15f88 = icmp ugt i32 %v1_15f84, 56
  %v7_15f88 = icmp eq i32 %v1_15f84, 57
  store i1 %v7_15f88, i1* %cpsr_z.global-to-local, align 1
  %v2_15f8c = xor i1 %v2_15f88, true
  %v3_15f8c = or i1 %v7_15f88, %v2_15f8c
  br i1 %v3_15f8c, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_15f90 = xor i1 %v7_15f88, true
  %v3_15f90 = and i1 %v2_15f88, %v2_15f90
  br i1 %v3_15f90, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_15f98.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_15f98 = phi i32 [ %v1_15f98.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_15f94 = icmp eq i32 %v1_15f84, 48
  store i1 %v7_15f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f94, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_15f98 = or i32 %v1_15f98, 1
  store i32 %v2_15f98, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_15f9c = phi i32 [ 1, %bb229 ], [ %v1_15f98, %bb228 ]
  %v2_15f9c = icmp eq i32 %v0_15f9c, 0
  store i1 %v2_15f9c, i1* %cpsr_z.global-to-local, align 1
  %v1_15fa0 = trunc i32 %v2_15f80 to i8
  store i8 %v1_15fa0, i8* %v2_15f7c, align 1
  %v0_15fa4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fa4, label %dec_label_pc_15fa8, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_15f80.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_15f7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_15fa8:                               ; preds = %._crit_edge93
  store i32 %v2_15f4c, i32* %r2.global-to-local, align 4
  %v2_15fac = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_15fac, i32* %r3.global-to-local, align 4
  %v0_15fb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_15fb0 = icmp uge i32 %v0_15fb0, %v2_15fac
  %v9_15fb0 = icmp eq i32 %v0_15fb0, %v2_15fac
  store i1 %v9_15fb0, i1* %cpsr_z.global-to-local, align 1
  %v2_15fb4 = xor i1 %v3_15fb0, true
  %v3_15fb4 = or i1 %v9_15fb0, %v2_15fb4
  br i1 %v3_15fb4, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_15fa8
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_15fac, i32* %r2.global-to-local, align 4
  store i32 %v2_15fac, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_15fa8, %bb230
  %v2_15fd4 = phi i32 [ %v2_15fac, %bb230 ], [ %v0_15fb0, %dec_label_pc_15fa8 ]
  %v4_15fc8144 = phi i32 [ %v2_15fac, %bb230 ], [ %v2_15f4c, %dec_label_pc_15fa8 ]
  %v2_15fc0 = xor i1 %v9_15fb0, true
  %v3_15fc0 = and i1 %v3_15fb0, %v2_15fc0
  br i1 %v3_15fc0, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_15fb4, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_15fc4 = load i32, i32* @lr, align 4
  %v5_15fc4 = add i32 %v4_15fc4, 1
  store i32 %v5_15fc4, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_15fc0, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_15fc8 = add i32 %v4_15fc8144, 2
  store i32 %v5_15fc8, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15fd0 = load i32, i32* %sb.global-to-local, align 4
  %v7_15fd0 = icmp eq i32 %v0_15fd0, 103
  store i1 %v7_15fd0, i1* %cpsr_z.global-to-local, align 1
  %v3_15fd4 = add i32 %v2_15fd4, 1
  %v4_15fd4 = inttoptr i32 %v3_15fd4 to i8*
  store i8 0, i8* %v4_15fd4, align 1
  %v0_15fd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15fd8 = add i32 %v0_15fd8, 1
  store i32 %v1_15fd8, i32* %lr.global-to-local, align 4
  %v0_15fdc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fdc, label %dec_label_pc_15fe0, label %dec_label_pc_16008

dec_label_pc_15fe0:                               ; preds = %bb236
  %v0_15fe0 = load i32, i32* %r0.global-to-local, align 4
  %v1_15fe0 = load i32, i32* %ip.global-to-local, align 4
  %v2_15fe0 = sub i32 %v0_15fe0, %v1_15fe0
  %v4_15fe0 = xor i32 %v1_15fe0, %v0_15fe0
  %v5_15fe0 = xor i32 %v2_15fe0, %v0_15fe0
  %v6_15fe0 = and i32 %v5_15fe0, %v4_15fe0
  %v7_15fe0 = icmp slt i32 %v6_15fe0, 0
  %v8_15fe0 = icmp slt i32 %v2_15fe0, 0
  %v9_15fe0 = icmp eq i32 %v0_15fe0, %v1_15fe0
  %v3_15fe4 = xor i1 %v8_15fe0, %v7_15fe0
  %v4_15fe4 = or i1 %v9_15fe0, %v3_15fe4
  %.258 = zext i1 %v4_15fe4 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_15fec = add i32 %v0_15fe0, 4
  %v3_15fec = sub i32 0, %v0_15fe0
  %v4_15fec = and i32 %v1_15fec, %v3_15fec
  %v5_15fec = icmp slt i32 %v4_15fec, 0
  %v6_15fec = icmp slt i32 %v1_15fec, 0
  %v7_15fec = icmp eq i32 %v1_15fec, 0
  store i1 %v7_15fec, i1* %cpsr_z.global-to-local, align 1
  %v2_15ff0 = xor i1 %v6_15fec, %v5_15fec
  br i1 %v2_15ff0, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_15fe0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16324

bb239:                                            ; preds = %dec_label_pc_15fe0
  %v2_15ff4 = icmp eq i1 %v4_15fe4, false
  store i1 %v2_15ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ff4, label %dec_label_pc_16324, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_15ff8 = sub i32 %v1_15fe0, %v0_15fe0
  store i32 %v3_15ff8, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16014

dec_label_pc_16008:                               ; preds = %bb236
  %v0_16008 = load i32, i32* %sb.global-to-local, align 4
  %v7_16008 = icmp eq i32 %v0_16008, 102
  store i1 %v7_16008, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16008, i32* %r8.global-to-local, align 4
  br i1 %v7_16008, label %dec_label_pc_16008.dec_label_pc_16014_crit_edge, label %dec_label_pc_16024

dec_label_pc_16008.dec_label_pc_16014_crit_edge:  ; preds = %dec_label_pc_16008
  %v0_16014.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16014

dec_label_pc_16014:                               ; preds = %.thread24, %dec_label_pc_16008.dec_label_pc_16014_crit_edge
  %v0_16014 = phi i32 [ %v0_16014.pre, %dec_label_pc_16008.dec_label_pc_16014_crit_edge ], [ %v0_15fe0, %.thread24 ]
  %v1_16014 = icmp slt i32 %v0_16014, 0
  %v2_16014 = icmp eq i32 %v0_16014, 0
  store i1 %v2_16014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16014, label %bb240, label %dec_label_pc_16024

bb240:                                            ; preds = %dec_label_pc_16014
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1601c = load i32, i32* %r2.global-to-local, align 4
  %v6_1601c = add i32 %v5_1601c, -1
  %v7_1601c = inttoptr i32 %v6_1601c to i8*
  store i8 48, i8* %v7_1601c, align 1
  %v8_1601c = load i32, i32* %r2.global-to-local, align 4
  %v9_1601c = add i32 %v8_1601c, -1
  store i32 %v9_1601c, i32* %r2.global-to-local, align 4
  %v0_16020.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16054.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16024

dec_label_pc_16024:                               ; preds = %bb240, %dec_label_pc_16014, %dec_label_pc_16324, %dec_label_pc_16008
  %v1_16054 = phi i32 [ %v1_15fd8, %dec_label_pc_16008 ], [ %v1_15fd8, %dec_label_pc_16324 ], [ %v1_16054.pre.pre, %bb240 ], [ %v1_15fd8, %dec_label_pc_16014 ]
  %v1_160cc30 = phi i32 [ 0, %dec_label_pc_16008 ], [ 0, %dec_label_pc_16324 ], [ %v0_16020.pre, %bb240 ], [ %v0_16014, %dec_label_pc_16014 ]
  store i32 %v1_160cc30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_16030 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_16030, i32* %r3.global-to-local, align 4
  %v0_1603c = load i32, i32* %r2.global-to-local, align 4
  %v1_1603c = inttoptr i32 %v0_1603c to i8*
  %v2_1603c = load i8, i8* %v1_1603c, align 1
  %v3_1603c = zext i8 %v2_1603c to i32
  store i32 %v3_1603c, i32* %r3.global-to-local, align 4
  %v5_1603c = add i32 %v0_1603c, 1
  store i32 %v5_1603c, i32* %r2.global-to-local, align 4
  %v1_16040 = icmp slt i32 %v1_160cc30, 0
  %v2_16040 = icmp eq i32 %v1_160cc30, 0
  store i1 %v2_16040, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_1603c, i32* %r6.global-to-local, align 4
  store i32 %v3_1603c, i32* %stack_var_-42, align 4
  %v2_16054 = sub i32 %v1_16054, %v5_1603c
  store i32 %v2_16054, i32* %ip.global-to-local, align 4
  br i1 %v1_16040, label %.thread, label %dec_label_pc_16060

.thread:                                          ; preds = %dec_label_pc_16024
  %v5_16058 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_16058, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_160dc

dec_label_pc_16060:                               ; preds = %dec_label_pc_16024
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16064 = sub i32 %v1_160cc30, %v2_16054
  %v4_16064 = xor i32 %v2_16054, %v1_160cc30
  %v5_16064 = xor i32 %v2_16064, %v1_160cc30
  %v6_16064 = and i32 %v5_16064, %v4_16064
  %v7_16064 = icmp slt i32 %v6_16064, 0
  %v8_16064 = icmp slt i32 %v2_16064, 0
  %v9_16064 = icmp eq i32 %v1_160cc30, %v2_16054
  store i1 %v9_16064, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_16070 = xor i1 %v8_16064, %v7_16064
  br i1 %v2_16070, label %dec_label_pc_160bc, label %dec_label_pc_16074

dec_label_pc_16074:                               ; preds = %dec_label_pc_16060
  store i32 %v2_16064, i32* %r2.global-to-local, align 4
  %v2_16078 = icmp eq i32 %v2_16064, 0
  store i1 %v2_16078, i1* %cpsr_z.global-to-local, align 1
  %v2_1607c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1607c, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_16064, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_16090

.thread148:                                       ; preds = %dec_label_pc_16074
  %v7_16084 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_16084, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_16090:                               ; preds = %dec_label_pc_16074
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  %v2_160a0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_160a0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_160dc

dec_label_pc_160bc:                               ; preds = %dec_label_pc_16060
  store i1 %v2_16040, i1* %cpsr_z.global-to-local, align 1
  %v2_160c0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_160c0, i32* %lr.global-to-local, align 4
  br i1 %v2_16040, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_160bc
  %v3_160c8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_160c8, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_160bc
  %v3_160cc = sub i32 %v2_16054, %v1_160cc30
  store i32 %v3_160cc, i32* %ip.global-to-local, align 4
  %v3_160d063 = add i32 %v5_1603c, %v1_160cc30
  store i32 %v3_160d063, i32* %r6.global-to-local, align 4
  %v3_160d4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_160d4, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1611c265 = phi i32 [ %v3_160c8, %bb242 ], [ %v3_160d4, %bb243 ], [ %v7_16084, %.thread148 ]
  %v0_160f0102 = phi i32 [ %v2_16054, %bb242 ], [ %v3_160cc, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_160dc

dec_label_pc_160dc:                               ; preds = %.thread, %dec_label_pc_16090, %.thread34
  %v1_1611c = phi i32 [ %v2_160a0, %dec_label_pc_16090 ], [ %v1_1611c265, %.thread34 ], [ %v5_16058, %.thread ]
  %v0_16130109 = phi i32 [ -1, %dec_label_pc_16090 ], [ -1, %.thread34 ], [ %v1_160cc30, %.thread ]
  %v0_160f0 = phi i32 [ 0, %dec_label_pc_16090 ], [ %v0_160f0102, %.thread34 ], [ %v2_16054, %.thread ]
  %v3_160dc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_160dc, i32* %r2.global-to-local, align 4
  %v1_160e0 = add i32 %v3_160dc, 12
  %v2_160e0 = inttoptr i32 %v1_160e0 to i32*
  %v3_160e0 = load i32, i32* %v2_160e0, align 4
  %v1_160e4 = and i32 %v3_160e0, 16
  store i32 %v1_160e4, i32* %r4.global-to-local, align 4
  %v2_160e4 = icmp eq i32 %v1_160e4, 0
  %tmp270 = zext i1 %v2_160e4 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_160f0 = icmp eq i32 %v0_160f0, 0
  store i1 %v2_160f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160f0, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_160dc
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1610c

bb246:                                            ; preds = %dec_label_pc_160dc
  store i1 %v2_160e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160e4, label %dec_label_pc_16100, label %dec_label_pc_1610c

dec_label_pc_16100:                               ; preds = %bb246
  %v0_16100 = load i32, i32* %sb.global-to-local, align 4
  %v7_16100 = icmp eq i32 %v0_16100, 103
  store i1 %v7_16100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16100, label %dec_label_pc_16130, label %bb247

bb247:                                            ; preds = %dec_label_pc_16100
  %v1_16104 = load i32, i32* %fp.global-to-local, align 4
  %v3_16104 = icmp eq i32 %v1_16104, 0
  store i1 %v3_16104, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_16104, 1
  br i1 %tmp248, label %dec_label_pc_16130, label %dec_label_pc_1610c

dec_label_pc_1610c:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33960), i32* %r3.global-to-local, align 4
  %v2_1611c = inttoptr i32 %v1_1611c to i32*
  store i32 112, i32* %v2_1611c, align 4
  %v0_16120 = load i32, i32* %r3.global-to-local, align 4
  %v1_16120 = add i32 %v0_16120, 16
  store i32 %v1_16120, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_16128 = load i32, i32* %r7.global-to-local, align 4
  %v1_16128 = add i32 %v0_16128, 4
  %v2_16128 = inttoptr i32 %v1_16128 to i32*
  store i32 1, i32* %v2_16128, align 4
  %v4_16128 = add i32 %v0_16128, 8
  %v5_16128 = inttoptr i32 %v4_16128 to i32*
  %v6_16128 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16128, i32* %v5_16128, align 4
  %v0_1612c = load i32, i32* %r7.global-to-local, align 4
  %v1_1612c = add i32 %v0_1612c, 12
  store i32 %v1_1612c, i32* %r7.global-to-local, align 4
  %v0_16130.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16130

dec_label_pc_16130:                               ; preds = %dec_label_pc_16100, %bb247, %dec_label_pc_1610c
  %v1_16150 = phi i32 [ %v1_1611c, %bb247 ], [ %v1_1612c, %dec_label_pc_1610c ], [ %v1_1611c, %dec_label_pc_16100 ]
  %v0_16130 = phi i32 [ %v0_16130109, %bb247 ], [ %v0_16130.pre, %dec_label_pc_1610c ], [ %v0_16130109, %dec_label_pc_16100 ]
  %v1_16130 = add i32 %v0_16130, 1
  store i32 %v1_16130, i32* %lr.global-to-local, align 4
  %v6_16130 = icmp slt i32 %v1_16130, 0
  %v7_16130 = icmp eq i32 %v1_16130, 0
  store i1 %v7_16130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_16130, label %dec_label_pc_16138, label %dec_label_pc_1615c

dec_label_pc_16138:                               ; preds = %dec_label_pc_16130
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  %v1_16148 = sub i32 -1, %v0_16130
  store i32 %v1_16148, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_16150 = inttoptr i32 %v1_16150 to i32*
  store i32 176, i32* %v2_16150, align 4
  %v0_16154 = load i32, i32* %r7.global-to-local, align 4
  %v1_16154 = add i32 %v0_16154, 4
  %v2_16154 = inttoptr i32 %v1_16154 to i32*
  %v3_16154 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_16154, i32* %v2_16154, align 4
  %v4_16154 = add i32 %v0_16154, 8
  %v5_16154 = inttoptr i32 %v4_16154 to i32*
  %v6_16154 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_16154, i32* %v5_16154, align 4
  %v0_16158 = load i32, i32* %r7.global-to-local, align 4
  %v1_16158 = add i32 %v0_16158, 12
  store i32 %v1_16158, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %dec_label_pc_16130, %dec_label_pc_16138
  %v2_16164 = phi i32 [ %v1_16150, %dec_label_pc_16130 ], [ %v1_16158, %dec_label_pc_16138 ]
  %v0_1615c = load i32, i32* %ip.global-to-local, align 4
  %v2_1615c = icmp eq i32 %v0_1615c, 0
  store i1 %v2_1615c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1615c, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1615c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_16164 = inttoptr i32 %v2_16164 to i32*
  store i32 112, i32* %v3_16164, align 4
  %v1_16168 = load i32, i32* %r6.global-to-local, align 4
  %v2_16168 = load i32, i32* %r7.global-to-local, align 4
  %v3_16168 = add i32 %v2_16168, 8
  %v4_16168 = inttoptr i32 %v3_16168 to i32*
  store i32 %v1_16168, i32* %v4_16168, align 4
  %v1_1616c = load i32, i32* %ip.global-to-local, align 4
  %v2_1616c = load i32, i32* %r7.global-to-local, align 4
  %v3_1616c = add i32 %v2_1616c, 4
  %v4_1616c = inttoptr i32 %v3_1616c to i32*
  store i32 %v1_1616c, i32* %v4_1616c, align 4
  %v1_16170 = load i32, i32* %r7.global-to-local, align 4
  %v2_16170 = add i32 %v1_16170, 12
  store i32 %v2_16170, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1615c, %bb249
  %v1_161a8 = phi i32 [ %v2_16164, %dec_label_pc_1615c ], [ %v2_16170, %bb249 ]
  %v0_16174 = load i32, i32* %sb.global-to-local, align 4
  %v7_16174 = icmp eq i32 %v0_16174, 103
  store i1 %v7_16174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16174, label %dec_label_pc_1617c, label %dec_label_pc_16184

dec_label_pc_1617c:                               ; preds = %.thread46
  %v0_1617c = load i32, i32* %r4.global-to-local, align 4
  %v2_1617c = icmp eq i32 %v0_1617c, 0
  store i1 %v2_1617c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1617c, label %dec_label_pc_161b4, label %dec_label_pc_16184

dec_label_pc_16184:                               ; preds = %.thread46, %dec_label_pc_1617c
  %v0_16184 = load i32, i32* %lr.global-to-local, align 4
  %v1_16184 = load i32, i32* %ip.global-to-local, align 4
  %v2_16184 = sub i32 %v1_16184, %v0_16184
  store i32 %v2_16184, i32* %r1.global-to-local, align 4
  %v1_16188 = load i32, i32* %fp.global-to-local, align 4
  %v2_16188 = sub i32 %v2_16184, %v1_16188
  %v4_16188 = xor i32 %v1_16188, %v2_16184
  %v5_16188 = xor i32 %v2_16188, %v2_16184
  %v6_16188 = and i32 %v5_16188, %v4_16188
  %v7_16188 = icmp slt i32 %v6_16188, 0
  %v8_16188 = icmp slt i32 %v2_16188, 0
  %v9_16188 = icmp eq i32 %v2_16184, %v1_16188
  store i1 %v9_16188, i1* %cpsr_z.global-to-local, align 1
  %v2_1618c = xor i1 %v8_16188, %v7_16188
  br i1 %v2_1618c, label %dec_label_pc_16190, label %dec_label_pc_161b4

dec_label_pc_16190:                               ; preds = %dec_label_pc_16184
  %v2_1619c = sub i32 %v1_16188, %v2_16184
  store i32 %v2_1619c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_161a8 = inttoptr i32 %v1_161a8 to i32*
  store i32 176, i32* %v2_161a8, align 4
  %v0_161ac = load i32, i32* %r7.global-to-local, align 4
  %v1_161ac = add i32 %v0_161ac, 4
  %v2_161ac = inttoptr i32 %v1_161ac to i32*
  %v3_161ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_161ac, i32* %v2_161ac, align 4
  %v4_161ac = add i32 %v0_161ac, 8
  %v5_161ac = inttoptr i32 %v4_161ac to i32*
  %v6_161ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_161ac, i32* %v5_161ac, align 4
  %v0_161b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_161b0 = add i32 %v0_161b0, 12
  store i32 %v1_161b0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_161b4

dec_label_pc_161b4:                               ; preds = %dec_label_pc_16184, %dec_label_pc_1617c, %dec_label_pc_16190
  %v1_16248.pre.pre = phi i32 [ %v1_161a8, %dec_label_pc_16184 ], [ %v1_161a8, %dec_label_pc_1617c ], [ %v1_161b0, %dec_label_pc_16190 ]
  %v0_161b4 = load i32, i32* %r8.global-to-local, align 4
  %v7_161b4 = icmp eq i32 %v0_161b4, 102
  store i1 %v7_161b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_161b4, label %dec_label_pc_1623c, label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %dec_label_pc_161b4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_161c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_161c0 = icmp slt i32 %v0_161c0, 0
  %v2_161c0 = icmp eq i32 %v0_161c0, 0
  store i1 %v2_161c0, i1* %cpsr_z.global-to-local, align 1
  %v4_161c4 = select i1 %tmp275, i32 %v4_15ee0126130, i32 101
  store i32 %v4_161c4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_161d4 = sub i32 0, %v0_161c0
  %storemerge158 = select i1 %v1_161c0, i32 %v4_161d4, i32 %v0_161c0
  %tmp271 = ashr i32 %v0_161c0, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_161dc = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_161dc, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_161e4:                               ; preds = %dec_label_pc_16214, %dec_label_pc_161e4, %dec_label_pc_161bc
  %v2_161fc = phi i32 [ %v2_161dc, %dec_label_pc_161bc ], [ %v6_161fc, %dec_label_pc_161e4 ], [ %v6_161fc, %dec_label_pc_16214 ]
  %v0_161f4 = phi i32 [ %storemerge158, %dec_label_pc_161bc ], [ %v2_16200, %dec_label_pc_161e4 ], [ %v2_16200, %dec_label_pc_16214 ]
  %v3_161ec = urem i32 %v0_161f4, 10
  %v1_161f0 = or i32 %v3_161ec, 48
  store i32 %v1_161f0, i32* %r3.global-to-local, align 4
  store i32 %v0_161f4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_161fc = trunc i32 %v1_161f0 to i8
  %v3_161fc = add i32 %v2_161fc, -1
  %v4_161fc = inttoptr i32 %v3_161fc to i8*
  store i8 %v1_161fc, i8* %v4_161fc, align 1
  %v5_161fc = load i32, i32* %r6.global-to-local, align 4
  %v6_161fc = add i32 %v5_161fc, -1
  store i32 %v6_161fc, i32* %r6.global-to-local, align 4
  %v0_16200 = load i32, i32* %r0.global-to-local, align 4
  %v1_16200 = load i32, i32* %r1.global-to-local, align 4
  %v2_16200 = sdiv i32 %v0_16200, %v1_16200
  store i32 %v2_16200, i32* %r0.global-to-local, align 4
  %v0_16204 = load i32, i32* %r8.global-to-local, align 4
  %v1_16204 = add i32 %v0_16204, 1
  store i32 %v1_16204, i32* %r8.global-to-local, align 4
  %v7_16208 = icmp eq i32 %v1_16204, 3
  store i1 %v7_16208, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16200, i32* %r5.global-to-local, align 4
  br i1 %v7_16208, label %dec_label_pc_161e4, label %dec_label_pc_16214

dec_label_pc_16214:                               ; preds = %dec_label_pc_161e4
  %v2_16214 = icmp eq i32 %v2_16200, 0
  store i1 %v2_16214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16214, label %dec_label_pc_1621c, label %dec_label_pc_161e4

dec_label_pc_1621c:                               ; preds = %dec_label_pc_16214
  %v1_1621c = add i32 %v5_161fc, -2
  store i32 %v1_1621c, i32* %r3.global-to-local, align 4
  %v0_16220 = load i32, i32* %sl.global-to-local, align 4
  %v1_16220 = trunc i32 %v0_16220 to i8
  %v4_16220 = inttoptr i32 %v1_1621c to i8*
  store i8 %v1_16220, i8* %v4_16220, align 1
  %v0_16224 = load i32, i32* %r3.global-to-local, align 4
  %v1_16224 = add i32 %v0_16224, -1
  store i32 %v1_16224, i32* %r2.global-to-local, align 4
  %v0_16228 = load i32, i32* %r4.global-to-local, align 4
  %v1_16228 = trunc i32 %v0_16228 to i8
  %v4_16228 = inttoptr i32 %v1_16224 to i8*
  store i8 %v1_16228, i8* %v4_16228, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_16230 = load i32, i32* %r7.global-to-local, align 4
  %v1_16230 = inttoptr i32 %v0_16230 to i32*
  store i32 112, i32* %v1_16230, align 4
  %v3_16230 = add i32 %v0_16230, 4
  %v4_16230 = inttoptr i32 %v3_16230 to i32*
  %v5_16230 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_16230, i32* %v4_16230, align 4
  %v0_16234 = load i32, i32* %r2.global-to-local, align 4
  %v1_16234 = load i32, i32* %r7.global-to-local, align 4
  %v2_16234 = add i32 %v1_16234, 8
  %v3_16234 = inttoptr i32 %v2_16234 to i32*
  store i32 %v0_16234, i32* %v3_16234, align 4
  %v0_16238 = load i32, i32* %r7.global-to-local, align 4
  %v1_16238 = add i32 %v0_16238, 12
  store i32 %v1_16238, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1623c

dec_label_pc_1623c:                               ; preds = %dec_label_pc_161b4, %.thread124, %dec_label_pc_1621c
  %v1_16248.pre = phi i32 [ %v2_15d14, %.thread124 ], [ %v1_16238, %dec_label_pc_1621c ], [ %v1_16248.pre.pre, %dec_label_pc_161b4 ]
  %v2_1623c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1623c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16240

dec_label_pc_16240:                               ; preds = %dec_label_pc_16240, %dec_label_pc_1623c
  %v0_16240 = phi i32 [ %v2_1623c, %dec_label_pc_1623c ], [ %v4_16240, %dec_label_pc_16240 ]
  %stack_var_-188.0 = phi i32 [ %v3_15bb0, %dec_label_pc_1623c ], [ %v2_1624c, %dec_label_pc_16240 ]
  %v1_16240 = inttoptr i32 %v0_16240 to i32*
  %v2_16240 = load i32, i32* %v1_16240, align 4
  store i32 %v2_16240, i32* %r3.global-to-local, align 4
  %v4_16240 = add i32 %v0_16240, 12
  store i32 %v4_16240, i32* %r2.global-to-local, align 4
  %v3_16248 = icmp ult i32 %v4_16240, %v1_16248.pre
  %v2_1624c = sub i32 %stack_var_-188.0, %v2_16240
  store i32 %v2_1624c, i32* %ip.global-to-local, align 4
  br i1 %v3_16248, label %dec_label_pc_16240, label %dec_label_pc_16258

dec_label_pc_16258:                               ; preds = %dec_label_pc_16240
  %v3_16258 = load i8, i8* %stack_var_-46, align 1
  %v4_16258 = sext i8 %v3_16258 to i32
  store i32 %v4_16258, i32* %r3.global-to-local, align 4
  store i32 %v4_16258, i32* %r2.global-to-local, align 4
  %v2_1625c = icmp eq i8 %v3_16258, 0
  store i1 %v2_1625c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1625c, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_16258
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_16258, %bb253
  %v1_162bc = phi i32 [ %v4_16258, %dec_label_pc_16258 ], [ 1, %bb253 ]
  %v2_16264 = sub i32 %v2_1624c, %v1_162bc
  store i32 %v2_16264, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1626c = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1626c, i32* %r3.global-to-local, align 4
  %v2_16270 = icmp eq i32 %v2_16264, 0
  store i1 %v2_16270, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_16264, 1
  br i1 %tmp255, label %dec_label_pc_162d8, label %dec_label_pc_16284

dec_label_pc_16284:                               ; preds = %bb254
  %v3_16284 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16284, i32* %lr.global-to-local, align 4
  %v1_16288 = add i32 %v3_16284, 12
  %v2_16288 = inttoptr i32 %v1_16288 to i32*
  %v3_16288 = load i32, i32* %v2_16288, align 4
  store i32 %v3_16288, i32* %r3.global-to-local, align 4
  %v1_1628c = and i32 %v3_16288, 8
  %v2_1628c = icmp eq i32 %v1_1628c, 0
  store i1 %v2_1628c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1628c, label %dec_label_pc_162b0, label %dec_label_pc_16294

dec_label_pc_16294:                               ; preds = %dec_label_pc_16284
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33957), i32* %r3.global-to-local, align 4
  %v1_162a4 = add i32 %v1_16248.pre, 12
  store i32 %v1_162a4, i32* %r6.global-to-local, align 4
  %v1_162a8 = inttoptr i32 %v1_16248.pre to i32*
  store i32 160, i32* %v1_162a8, align 4
  %v3_162a8 = add i32 %v1_16248.pre, 4
  %v4_162a8 = inttoptr i32 %v3_162a8 to i32*
  %v5_162a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_162a8, i32* %v4_162a8, align 4
  %v6_162a8 = add i32 %v1_16248.pre, 8
  %v7_162a8 = inttoptr i32 %v6_162a8 to i32*
  %v8_162a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_162a8, i32* %v7_162a8, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162b0:                               ; preds = %dec_label_pc_16284
  store i32 %v3_16284, i32* %ip.global-to-local, align 4
  %v1_162b4 = add i32 %v3_16284, 16
  %v2_162b4 = inttoptr i32 %v1_162b4 to i32*
  %v3_162b4 = load i32, i32* %v2_162b4, align 4
  store i32 %v3_162b4, i32* %r3.global-to-local, align 4
  %v7_162b8 = icmp eq i32 %v3_162b4, 48
  store i1 %v7_162b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_162b8, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_162b0
  store i32 %v2_1624c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_162d8

.thread54.thread70:                               ; preds = %dec_label_pc_162b0
  %v4_162c4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_16248.pre, i32* %r6.global-to-local, align 4
  %v3_162cc = add i32 %v4_162c4, %v2_16264
  store i32 %v3_162cc, i32* %r3.global-to-local, align 4
  store i32 %v3_162cc, i32* %stack_var_-164, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162d8:                               ; preds = %bb256, %bb254
  store i32 %v1_16248.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %.thread54.thread70, %dec_label_pc_16294, %dec_label_pc_162d8
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_162e0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_162e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_162e4

dec_label_pc_162e4:                               ; preds = %dec_label_pc_1630c, %dec_label_pc_162dc
  %v0_162e4 = phi i32 [ %v1_16300, %dec_label_pc_1630c ], [ %v2_162e0, %dec_label_pc_162dc ]
  %v1_162e4 = inttoptr i32 %v0_162e4 to i32*
  %v2_162e4 = load i32, i32* %v1_162e4, align 4
  store i32 %v2_162e4, i32* %r1.global-to-local, align 4
  %v3_162e4 = add i32 %v0_162e4, 4
  %v4_162e4 = inttoptr i32 %v3_162e4 to i32*
  %v5_162e4 = load i32, i32* %v4_162e4, align 4
  store i32 %v5_162e4, i32* %r2.global-to-local, align 4
  %v6_162e4 = add i32 %v0_162e4, 8
  %v7_162e4 = inttoptr i32 %v6_162e4 to i32*
  %v8_162e4 = load i32, i32* %v7_162e4, align 4
  store i32 %v8_162e4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 90872, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_162f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_162f8 = add i32 %v0_162f8, 4
  %v2_162f8 = inttoptr i32 %v1_162f8 to i32*
  %v3_162f8 = load i32, i32* %v2_162f8, align 4
  store i32 %v3_162f8, i32* %r3.global-to-local, align 4
  %v0_162fc = load i32, i32* %r0.global-to-local, align 4
  %v9_162fc = icmp eq i32 %v0_162fc, %v3_162f8
  store i1 %v9_162fc, i1* %cpsr_z.global-to-local, align 1
  %v1_16300 = add i32 %v0_162f8, 12
  store i32 %v1_16300, i32* %r5.global-to-local, align 4
  br i1 %v9_162fc, label %dec_label_pc_1630c, label %bb257

bb257:                                            ; preds = %dec_label_pc_162e4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1632c

dec_label_pc_1630c:                               ; preds = %dec_label_pc_162e4
  %v0_16310.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1630c = load i32, i32* %r6.global-to-local, align 4
  %v3_1630c = icmp ult i32 %v1_16300, %v1_1630c
  %v9_1630c = icmp eq i32 %v1_16300, %v1_1630c
  store i1 %v9_1630c, i1* %cpsr_z.global-to-local, align 1
  %v2_16310 = add i32 %v0_16310.pre, %v3_162f8
  store i32 %v2_16310, i32* %r7.global-to-local, align 4
  br i1 %v3_1630c, label %dec_label_pc_162e4, label %dec_label_pc_1632c

dec_label_pc_16324:                               ; preds = %.thread21, %bb239
  %v0_16324 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16324, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16024

dec_label_pc_1632c:                               ; preds = %dec_label_pc_1630c, %bb257
  %v0_1632c = phi i32 [ -1, %bb257 ], [ %v2_16310, %dec_label_pc_1630c ]
  store i32 %v0_1632c, i32* %r0.global-to-local, align 4
  store i32 %v27_15b68, i32* @lr, align 4
  ret i32 %v0_1632c

; uselistorder directives
  uselistorder i32 %v0_1632c, { 1, 0 }
  uselistorder i32 %v1_1630c, { 1, 0 }
  uselistorder i32 %v1_16300, { 0, 1, 3, 2 }
  uselistorder i32 %v0_162e4, { 2, 1, 0 }
  uselistorder i32 %v3_16284, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1624c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_16240, { 1, 2, 0 }
  uselistorder i32 %v0_16240, { 1, 0 }
  uselistorder i32 %v1_16248.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_16200, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_161fc, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_161c0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_16188, { 1, 0 }
  uselistorder i32 %v1_16188, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16184, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_160e4, { 2, 1, 0 }
  uselistorder i32 %v2_16064, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_16054, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_16040, { 1, 0, 2 }
  uselistorder i32 %v5_1603c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_160cc30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_15ff4, { 1, 0 }
  uselistorder i32 %v1_15fec, { 1, 2, 0 }
  uselistorder i32 %v2_15fe0, { 1, 0 }
  uselistorder i32 %v1_15fe0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15fe0, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_15fb0, { 1, 0 }
  uselistorder i32 %v0_15fb0, { 0, 2, 1 }
  uselistorder i32 %v2_15fac, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_15f98, { 1, 0 }
  uselistorder i1 %v2_15f88, { 1, 0 }
  uselistorder i32 %v1_15f84, { 3, 2, 1, 0 }
  uselistorder i32 %v2_15f80, { 1, 0 }
  uselistorder i1 %v2_15f70, { 1, 0 }
  uselistorder i32 %v1_15f64, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_15f18, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15f18, { 1, 0, 2 }
  uselistorder i1 %v2_15f00, { 1, 0 }
  uselistorder i32 %v5_15ee8, { 1, 0 }
  uselistorder i32 %v0_15ed4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15ebc, { 1, 2, 0 }
  uselistorder i32 %v2_15eb8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15e50, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15df8, { 1, 0 }
  uselistorder double %v2_15dbc, { 1, 0 }
  uselistorder i64 %v3_15db8, { 1, 0 }
  uselistorder i32 %v0_15d78, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_15d6c, { 1, 0 }
  uselistorder i32 %v2_15da8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_15d3c, { 1, 0 }
  uselistorder i32 %v5_15cf8, { 1, 0 }
  uselistorder i32 %v1_15c18.v0_15c045, { 1, 0 }
  uselistorder i32 %v3_15cd4, { 1, 0 }
  uselistorder i32 %v0_15cb0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_15c98, { 2, 1, 0 }
  uselistorder i32 %v0_15c7c, { 1, 0 }
  uselistorder i32 %v0_15b9c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 10, 11, 12, 7, 13, 14, 8, 15, 9, 16, 17, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 42, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 40, 41, 63, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 64, 65, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 14, 15, 12, 16, 17, 18, 19, 36, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 4, 9, 10, 33, 35, 36, 34, 11, 12, 37, 13, 14, 38, 16, 15, 1, 17, 18, 0, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 112, { 2, 6, 0, 7, 3, 1, 8, 4, 5 }
  uselistorder i8 48, { 3, 5, 6, 7, 8, 9, 0, 10, 1, 2, 11, 4 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 2, 9, 10, 11, 12, 17, 8, 13, 14, 7, 18, 19, 5, 6, 21, 20, 0, 3, 4, 15, 16 }
  uselistorder i32 17, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33936), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 -33960), { 2, 1, 0 }
  uselistorder i32 96, { 1, 2, 5, 3, 4, 0 }
  uselistorder i8 45, { 1, 4, 2, 5, 3, 0, 6, 7 }
  uselistorder i32 45, { 2, 0, 3, 4, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 97, { 1, 0, 7, 5, 6, 8, 2, 3, 4 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_16324, { 1, 0 }
  uselistorder label %dec_label_pc_162dc, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1623c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_161b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16184, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1615c, { 1, 0 }
  uselistorder label %dec_label_pc_16130, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1610c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160dc, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16024, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16014, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_15f3c, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e48, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_15df8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15df0, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_15cd4, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15bf0, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16360 = urem i32 %arg1, 256
  %v0_1637c.pr = load i32, i32* @r2, align 4
  %v2_1637c15 = icmp eq i32 %v0_1637c.pr, 0
  %v0_16390.pre = load i32, i32* @r0, align 4
  br i1 %v2_1637c15, label %dec_label_pc_1638c, label %dec_label_pc_16384

dec_label_pc_16368:                               ; preds = %dec_label_pc_16384
  %v1_16368 = inttoptr i32 %v0_16378 to i8*
  %v2_16368 = load i8, i8* %v1_16368, align 1
  %v3_16368 = zext i8 %v2_16368 to i32
  %v9_1636c = icmp eq i32 %v3_16368, %v1_16360
  br i1 %v9_1636c, label %dec_label_pc_1643c, label %dec_label_pc_16374

dec_label_pc_16374:                               ; preds = %dec_label_pc_16368
  %v1_16374 = add i32 %v0_16374, -1
  %v1_16378 = add i32 %v0_16378, 1
  %v2_1637c = icmp eq i32 %v1_16374, 0
  br i1 %v2_1637c, label %dec_label_pc_1638c, label %dec_label_pc_16384

dec_label_pc_16384:                               ; preds = %entry, %dec_label_pc_16374
  %v0_16374 = phi i32 [ %v1_16374, %dec_label_pc_16374 ], [ %v0_1637c.pr, %entry ]
  %v0_16378 = phi i32 [ %v1_16378, %dec_label_pc_16374 ], [ %v0_16390.pre, %entry ]
  %v1_16384 = urem i32 %v0_16378, 4
  %v2_16384 = icmp eq i32 %v1_16384, 0
  br i1 %v2_16384, label %dec_label_pc_1638c, label %dec_label_pc_16368

dec_label_pc_1638c:                               ; preds = %dec_label_pc_16374, %dec_label_pc_16384, %entry
  %v0_1640822 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16374 ], [ %v0_16374, %dec_label_pc_16384 ]
  %v0_16390 = phi i32 [ %v0_16390.pre, %entry ], [ %v1_16378, %dec_label_pc_16374 ], [ %v0_16378, %dec_label_pc_16384 ]
  %v4_1638c = mul nuw nsw i32 %v1_16360, 256
  %v5_1638c = or i32 %v4_1638c, %v1_16360
  %v4_16394 = mul i32 %v5_1638c, 65536
  %v5_16394 = or i32 %v4_16394, %v5_1638c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1640822, 3
  br i1 %tmp, label %dec_label_pc_1639c, label %dec_label_pc_16430.preheader

dec_label_pc_1639c:                               ; preds = %dec_label_pc_1638c, %dec_label_pc_16408.backedge
  %v0_163b860 = phi i32 [ %v1_163b8, %dec_label_pc_16408.backedge ], [ %v0_1640822, %dec_label_pc_1638c ]
  %v0_163dc59 = phi i32 [ %v4_1639c, %dec_label_pc_16408.backedge ], [ %v0_16390, %dec_label_pc_1638c ]
  %v1_1639c = inttoptr i32 %v0_163dc59 to i32*
  %v2_1639c = load i32, i32* %v1_1639c, align 4
  %v4_1639c = add i32 %v0_163dc59, 4
  %v2_163a0 = xor i32 %v2_1639c, %v5_16394
  %v2_163a4 = add i32 %v2_163a0, 2130640639
  %v1_163a8 = sub i32 -1, %v2_163a0
  %v2_163ac = xor i32 %v2_163a4, %v1_163a8
  %v2_163b0 = and i32 %v2_163ac, -2130640640
  %v2_163b4 = icmp eq i32 %v2_163b0, 0
  %v1_163b8 = add i32 %v0_163b860, -4
  br i1 %v2_163b4, label %dec_label_pc_16408.backedge, label %dec_label_pc_163c0

dec_label_pc_16408.backedge:                      ; preds = %dec_label_pc_1639c, %dec_label_pc_163f8
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_163b8, 3
  br i1 %tmp73, label %dec_label_pc_1639c, label %dec_label_pc_16430.preheader

dec_label_pc_163c0:                               ; preds = %dec_label_pc_1639c
  %v2_163c0 = inttoptr i32 %v0_163dc59 to i8*
  %v3_163c0 = load i8, i8* %v2_163c0, align 1
  %v4_163c0 = zext i8 %v3_163c0 to i32
  %v9_163c8 = icmp eq i32 %v4_163c0, %v1_16360
  %v1_163cc = add i32 %v0_163dc59, 3
  store i32 %v1_163cc, i32* @ip, align 4
  br i1 %v9_163c8, label %dec_label_pc_1643c, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163c0
  %v1_163d4 = add i32 %v0_163dc59, 1
  %v2_163d4 = inttoptr i32 %v1_163d4 to i8*
  %v3_163d4 = load i8, i8* %v2_163d4, align 1
  %v4_163d4 = zext i8 %v3_163d4 to i32
  %v9_163d8 = icmp eq i32 %v4_163d4, %v1_16360
  br i1 %v9_163d8, label %bb, label %dec_label_pc_163e8

bb:                                               ; preds = %dec_label_pc_163d4
  br label %dec_label_pc_1643c

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163d4
  %v1_163e8 = add i32 %v0_163dc59, 2
  %v2_163e8 = inttoptr i32 %v1_163e8 to i8*
  %v3_163e8 = load i8, i8* %v2_163e8, align 1
  %v4_163e8 = zext i8 %v3_163e8 to i32
  %v9_163ec = icmp eq i32 %v4_163e8, %v1_16360
  br i1 %v9_163ec, label %dec_label_pc_1643c, label %dec_label_pc_163f8

dec_label_pc_163f8:                               ; preds = %dec_label_pc_163e8
  %v2_163f8 = inttoptr i32 %v1_163cc to i8*
  %v3_163f8 = load i8, i8* %v2_163f8, align 1
  %v4_163f8 = zext i8 %v3_163f8 to i32
  %v9_163fc = icmp eq i32 %v4_163f8, %v1_16360
  br i1 %v9_163fc, label %bb36, label %dec_label_pc_16408.backedge

bb36:                                             ; preds = %dec_label_pc_163f8
  br label %dec_label_pc_1643c

dec_label_pc_16430.preheader:                     ; preds = %dec_label_pc_16408.backedge, %dec_label_pc_1638c
  %v0_163dc.lcssa = phi i32 [ %v0_16390, %dec_label_pc_1638c ], [ %v4_1639c, %dec_label_pc_16408.backedge ]
  %v0_163b8.lcssa = phi i32 [ %v0_1640822, %dec_label_pc_1638c ], [ %v1_163b8, %dec_label_pc_16408.backedge ]
  %v2_164307 = icmp eq i32 %v0_163b8.lcssa, 0
  br i1 %v2_164307, label %dec_label_pc_16438, label %dec_label_pc_16420

dec_label_pc_16420:                               ; preds = %dec_label_pc_1642c, %dec_label_pc_16430.preheader
  %v0_16430.in = phi i32 [ %v0_16430, %dec_label_pc_1642c ], [ %v0_163b8.lcssa, %dec_label_pc_16430.preheader ]
  %v0_1642c = phi i32 [ %v1_1642c, %dec_label_pc_1642c ], [ %v0_163dc.lcssa, %dec_label_pc_16430.preheader ]
  %v0_16430 = add i32 %v0_16430.in, -1
  %v1_16420 = inttoptr i32 %v0_1642c to i8*
  %v2_16420 = load i8, i8* %v1_16420, align 1
  %v3_16420 = zext i8 %v2_16420 to i32
  %v9_16424 = icmp eq i32 %v3_16420, %v1_16360
  br i1 %v9_16424, label %dec_label_pc_1643c, label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16420
  %v1_1642c = add i32 %v0_1642c, 1
  %v2_16430 = icmp eq i32 %v0_16430, 0
  br i1 %v2_16430, label %dec_label_pc_16438, label %dec_label_pc_16420

dec_label_pc_16438:                               ; preds = %dec_label_pc_1642c, %dec_label_pc_16430.preheader
  br label %dec_label_pc_1643c

dec_label_pc_1643c:                               ; preds = %dec_label_pc_16368, %dec_label_pc_163e8, %dec_label_pc_163c0, %dec_label_pc_16420, %bb36, %bb, %dec_label_pc_16438
  %v1_16440 = phi i32 [ 0, %dec_label_pc_16438 ], [ %v1_163d4, %bb ], [ %v1_163cc, %bb36 ], [ %v0_1642c, %dec_label_pc_16420 ], [ %v1_163e8, %dec_label_pc_163e8 ], [ %v0_163dc59, %dec_label_pc_163c0 ], [ %v0_16378, %dec_label_pc_16368 ]
  ret i32 %v1_16440

; uselistorder directives
  uselistorder i32 %v1_163b8, { 1, 0, 2 }
  uselistorder i32 %v0_163dc59, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1638c, { 1, 0 }
  uselistorder i32 %v0_1640822, { 1, 2, 0 }
  uselistorder i32 %v0_16378, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16390.pre, { 1, 0 }
  uselistorder i32 %v1_16360, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1643c, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_16408.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1639c, { 1, 0 }
  uselistorder label %dec_label_pc_1638c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16384, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16450 = urem i32 %arg2, 256
  %v2_16454 = add i32 %arg3, %arg1
  %v2_1646c4 = icmp eq i32 %arg3, 0
  br i1 %v2_1646c4, label %dec_label_pc_1647c, label %dec_label_pc_16474

dec_label_pc_1645c:                               ; preds = %dec_label_pc_16474
  %v1_1645c = add i32 %v0_1645c, -1
  %v2_1645c = inttoptr i32 %v1_1645c to i8*
  %v3_1645c = load i8, i8* %v2_1645c, align 1
  %v4_1645c = zext i8 %v3_1645c to i32
  %v9_16460 = icmp eq i32 %v4_1645c, %v1_16450
  br i1 %v9_16460, label %dec_label_pc_1651c, label %dec_label_pc_16468

dec_label_pc_16468:                               ; preds = %dec_label_pc_1645c
  %v1_16468 = add i32 %v0_16468, -1
  %v2_1646c = icmp eq i32 %v1_16468, 0
  br i1 %v2_1646c, label %dec_label_pc_1647c, label %dec_label_pc_16474

dec_label_pc_16474:                               ; preds = %entry, %dec_label_pc_16468
  %v0_16468 = phi i32 [ %v1_16468, %dec_label_pc_16468 ], [ %arg3, %entry ]
  %v0_1645c = phi i32 [ %v1_1645c, %dec_label_pc_16468 ], [ %v2_16454, %entry ]
  %v1_16474 = urem i32 %v0_1645c, 4
  %v2_16474 = icmp eq i32 %v1_16474, 0
  br i1 %v2_16474, label %dec_label_pc_1647c, label %dec_label_pc_1645c

dec_label_pc_1647c:                               ; preds = %dec_label_pc_16468, %dec_label_pc_16474, %entry
  %v0_1650413 = phi i32 [ %v2_16454, %entry ], [ %v1_1645c, %dec_label_pc_16468 ], [ %v0_1645c, %dec_label_pc_16474 ]
  %v0_164f09 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16468 ], [ %v0_16468, %dec_label_pc_16474 ]
  %v4_1647c = mul nuw nsw i32 %v1_16450, 256
  %v5_1647c = or i32 %v4_1647c, %v1_16450
  %v4_16480 = mul i32 %v5_1647c, 65536
  %v5_16480 = or i32 %v4_16480, %v5_1647c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_164f09, 3
  br i1 %tmp, label %dec_label_pc_16488, label %dec_label_pc_16510

dec_label_pc_16488:                               ; preds = %dec_label_pc_1647c, %dec_label_pc_164f0.backedge
  %v0_164a440 = phi i32 [ %v1_164a4, %dec_label_pc_164f0.backedge ], [ %v0_164f09, %dec_label_pc_1647c ]
  %v0_1648839 = phi i32 [ %v1_16488, %dec_label_pc_164f0.backedge ], [ %v0_1650413, %dec_label_pc_1647c ]
  %v1_16488 = add i32 %v0_1648839, -4
  %v2_16488 = inttoptr i32 %v1_16488 to i32*
  %v3_16488 = load i32, i32* %v2_16488, align 4
  %v2_1648c = xor i32 %v3_16488, %v5_16480
  %v2_16490 = add i32 %v2_1648c, 2130640639
  store i32 %v2_16490, i32* @ip, align 4
  %v1_16494 = sub i32 -1, %v2_1648c
  %v2_16498 = xor i32 %v2_16490, %v1_16494
  %v2_1649c = and i32 %v2_16498, -2130640640
  %v2_164a0 = icmp eq i32 %v2_1649c, 0
  %v1_164a4 = add i32 %v0_164a440, -4
  br i1 %v2_164a0, label %dec_label_pc_164f0.backedge, label %dec_label_pc_164ac

dec_label_pc_164f0.backedge:                      ; preds = %dec_label_pc_16488, %dec_label_pc_164e4
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_164a4, 3
  br i1 %tmp46, label %dec_label_pc_16488, label %dec_label_pc_16510

dec_label_pc_164ac:                               ; preds = %dec_label_pc_16488
  %v1_164ac = add i32 %v0_1648839, -1
  %v2_164ac = inttoptr i32 %v1_164ac to i8*
  %v3_164ac = load i8, i8* %v2_164ac, align 1
  %v4_164ac = zext i8 %v3_164ac to i32
  %v9_164b0 = icmp eq i32 %v4_164ac, %v1_16450
  br i1 %v9_164b0, label %dec_label_pc_164dc, label %dec_label_pc_164bc

dec_label_pc_164bc:                               ; preds = %dec_label_pc_164ac
  %v1_164bc = add i32 %v0_1648839, -2
  %v2_164bc = inttoptr i32 %v1_164bc to i8*
  %v3_164bc = load i8, i8* %v2_164bc, align 1
  %v4_164bc = zext i8 %v3_164bc to i32
  %v9_164c0 = icmp eq i32 %v4_164bc, %v1_16450
  br i1 %v9_164c0, label %dec_label_pc_164dc, label %dec_label_pc_164cc

dec_label_pc_164cc:                               ; preds = %dec_label_pc_164bc
  %v1_164cc = add i32 %v0_1648839, -3
  %v2_164cc = inttoptr i32 %v1_164cc to i8*
  %v3_164cc = load i8, i8* %v2_164cc, align 1
  %v4_164cc = zext i8 %v3_164cc to i32
  %v9_164d0 = icmp eq i32 %v4_164cc, %v1_16450
  br i1 %v9_164d0, label %dec_label_pc_164dc, label %dec_label_pc_164e4

dec_label_pc_164dc:                               ; preds = %dec_label_pc_164cc, %dec_label_pc_164bc, %dec_label_pc_164ac
  %v0_164dc = phi i32 [ %v1_164cc, %dec_label_pc_164cc ], [ %v1_164bc, %dec_label_pc_164bc ], [ %v1_164ac, %dec_label_pc_164ac ]
  br label %dec_label_pc_1651c

dec_label_pc_164e4:                               ; preds = %dec_label_pc_164cc
  %v1_164e4 = inttoptr i32 %v1_16488 to i8*
  %v2_164e4 = load i8, i8* %v1_164e4, align 1
  %v3_164e4 = zext i8 %v2_164e4 to i32
  %v9_164e8 = icmp eq i32 %v3_164e4, %v1_16450
  br i1 %v9_164e8, label %dec_label_pc_1651c, label %dec_label_pc_164f0.backedge

dec_label_pc_16504:                               ; preds = %dec_label_pc_16510
  %v1_16510 = add i32 %v0_16510, -1
  %v1_16504 = add i32 %v0_16504, -1
  %v2_16504 = inttoptr i32 %v1_16504 to i8*
  %v3_16504 = load i8, i8* %v2_16504, align 1
  %v4_16504 = zext i8 %v3_16504 to i32
  %v9_16508 = icmp eq i32 %v4_16504, %v1_16450
  br i1 %v9_16508, label %dec_label_pc_1651c, label %dec_label_pc_16510

dec_label_pc_16510:                               ; preds = %dec_label_pc_1647c, %dec_label_pc_164f0.backedge, %dec_label_pc_16504
  %v0_16504 = phi i32 [ %v1_16504, %dec_label_pc_16504 ], [ %v0_1650413, %dec_label_pc_1647c ], [ %v1_16488, %dec_label_pc_164f0.backedge ]
  %v0_16510 = phi i32 [ %v1_16510, %dec_label_pc_16504 ], [ %v0_164f09, %dec_label_pc_1647c ], [ %v1_164a4, %dec_label_pc_164f0.backedge ]
  %v2_16510 = icmp eq i32 %v0_16510, 0
  br i1 %v2_16510, label %dec_label_pc_16518, label %dec_label_pc_16504

dec_label_pc_16518:                               ; preds = %dec_label_pc_16510
  br label %dec_label_pc_1651c

dec_label_pc_1651c:                               ; preds = %dec_label_pc_1645c, %dec_label_pc_164e4, %dec_label_pc_16504, %dec_label_pc_164dc, %dec_label_pc_16518
  %v1_16520 = phi i32 [ %v0_164dc, %dec_label_pc_164dc ], [ 0, %dec_label_pc_16518 ], [ %v1_16504, %dec_label_pc_16504 ], [ %v1_16488, %dec_label_pc_164e4 ], [ %v1_1645c, %dec_label_pc_1645c ]
  ret i32 %v1_16520

; uselistorder directives
  uselistorder i32 %v0_16510, { 1, 0 }
  uselistorder i32 %v1_164a4, { 1, 0, 2 }
  uselistorder i32 %v1_16488, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1648839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1647c, { 1, 0 }
  uselistorder i32 %v0_164f09, { 1, 2, 0 }
  uselistorder i32 %v0_1645c, { 1, 0, 2 }
  uselistorder i32 %v2_16454, { 1, 0 }
  uselistorder i32 %v1_16450, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 2130640639, { 6, 2, 0, 7, 3, 1, 8, 4, 9, 5, 10 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1651c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_16510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_164f0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_16488, { 1, 0 }
  uselistorder label %dec_label_pc_1647c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16474, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_16574, %entry
  %v1_1658c8 = phi i32 [ %v1_1658c9, %dec_label_pc_16574 ], [ 0, %entry ]
  %v0_1657c = phi i32 [ %v1_1657c, %dec_label_pc_16574 ], [ %arg2, %entry ]
  %v0_16580 = phi i32 [ %v1_16580, %dec_label_pc_16574 ], [ %tmp, %entry ]
  %v9_16548 = icmp eq i32 %v0_16580, %v0_1657c
  %.pre = inttoptr i32 %v0_16580 to i8*
  br i1 %v9_16548, label %dec_label_pc_16574, label %dec_label_pc_16550

dec_label_pc_16550:                               ; preds = %dec_label_pc_16548
  %v2_16550 = load i8, i8* %.pre, align 1
  %v3_16550 = zext i8 %v2_16550 to i32
  %v1_16554 = inttoptr i32 %v0_1657c to i8*
  %v2_16554 = load i8, i8* %v1_16554, align 1
  %v3_16554 = zext i8 %v2_16554 to i32
  %v4_16558 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 712) to i32*), align 4
  %v2_1655c = mul nuw nsw i32 %v3_16554, 2
  %v2_16560 = mul nuw nsw i32 %v3_16550, 2
  %v2_16564 = add i32 %v4_16558, %v2_1655c
  %v3_16564 = inttoptr i32 %v2_16564 to i16*
  %v4_16564 = load i16, i16* %v3_16564, align 2
  %v6_16564 = sext i16 %v4_16564 to i32
  %v2_16568 = add i32 %v4_16558, %v2_16560
  %v3_16568 = inttoptr i32 %v2_16568 to i16*
  %v4_16568 = load i16, i16* %v3_16568, align 2
  %v6_16568 = sext i16 %v4_16568 to i32
  %v2_1656c = sub nsw i32 %v6_16568, %v6_16564
  %v9_1656c = icmp eq i16 %v4_16568, %v4_16564
  br i1 %v9_1656c, label %dec_label_pc_16574, label %dec_label_pc_16588

dec_label_pc_16574:                               ; preds = %dec_label_pc_16548, %dec_label_pc_16550
  %v1_1658c9 = phi i32 [ %v2_1656c, %dec_label_pc_16550 ], [ %v1_1658c8, %dec_label_pc_16548 ]
  %v2_16574 = load i8, i8* %.pre, align 1
  %v2_16578 = icmp eq i8 %v2_16574, 0
  %v1_1657c = add i32 %v0_1657c, 1
  %v1_16580 = add i32 %v0_16580, 1
  store i32 %v1_16580, i32* @ip, align 4
  br i1 %v2_16578, label %dec_label_pc_16588, label %dec_label_pc_16548

dec_label_pc_16588:                               ; preds = %dec_label_pc_16574, %dec_label_pc_16550
  %v1_1658c = phi i32 [ %v1_1658c9, %dec_label_pc_16574 ], [ %v2_1656c, %dec_label_pc_16550 ]
  ret i32 %v1_1658c

; uselistorder directives
  uselistorder i32 %v1_16580, { 1, 0 }
  uselistorder i32 %v2_1656c, { 1, 0 }
  uselistorder i32 %v0_16580, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16574, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_16598 = load i32, i32* @r4, align 4
  store i32 %v3_16598, i32* %stack_var_-32, align 4
  %v6_16598 = load i32, i32* @r5, align 4
  %v9_16598 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_165a0 = load i32, i32* @r1, align 4
  store i32 %v0_165a0, i32* %r8.global-to-local, align 4
  %v0_165a4 = load i32, i32* @r2, align 4
  store i32 %v0_165a4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1660c23 = icmp slt i8* %arg1, null
  store i1 %v1_1660c23, i1* %cpsr_n.global-to-local, align 1
  %v2_1660c24 = icmp eq i8* %arg1, null
  store i1 %v2_1660c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1660c24, label %dec_label_pc_16624, label %dec_label_pc_16618

dec_label_pc_165b0:                               ; preds = %dec_label_pc_16618
  %v2_165b0 = call i32 @__GI_strchr(i32 %v0_165b026, i32 46)
  store i32 %v2_165b0, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165b4 = icmp slt i32 %v2_165b0, 0
  store i1 %v1_165b4, i1* %cpsr_n.global-to-local, align 1
  %v2_165b4 = icmp eq i32 %v2_165b0, 0
  store i1 %v2_165b4, i1* %cpsr_z.global-to-local, align 1
  %v0_165b8 = load i32, i32* @r4, align 4
  %v2_165b8 = sub i32 %v2_165b0, %v0_165b8
  store i32 %v2_165b8, i32* @r5, align 4
  br i1 %v2_165b4, label %dec_label_pc_165c0, label %dec_label_pc_165cc

dec_label_pc_165c0:                               ; preds = %dec_label_pc_165b0
  %v1_165c0 = inttoptr i32 %v0_165b8 to i8*
  %v3_165c4 = call i32 @strlen(i8* %v1_165c0)
  %sext = mul i32 %v3_165c4, 16777216
  %v1_165c8 = sdiv i32 %sext, 16777216
  store i32 %v1_165c8, i32* @r5, align 4
  %v0_165d8.pre = load i32, i32* @r4, align 4
  %v0_165e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165b0, %dec_label_pc_165c0
  %v0_165e8 = phi i32 [ %v2_165b0, %dec_label_pc_165b0 ], [ %v0_165e8.pre, %dec_label_pc_165c0 ]
  %v0_165d8 = phi i32 [ %v0_165b8, %dec_label_pc_165b0 ], [ %v0_165d8.pre, %dec_label_pc_165c0 ]
  %v0_165f8 = phi i32 [ %v2_165b8, %dec_label_pc_165b0 ], [ %v1_165c8, %dec_label_pc_165c0 ]
  %v0_165cc = load i32, i32* %sl.global-to-local, align 4
  %v1_165cc = add i32 %v0_165cc, 1
  store i32 %v1_165cc, i32* %r7.global-to-local, align 4
  %v1_165d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_165d0 = sub i32 %v1_165d0, %v0_165cc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_165d4 = icmp slt i32 %v0_165f8, 0
  store i1 %v1_165d4, i1* %cpsr_n.global-to-local, align 1
  %v2_165d4 = icmp eq i32 %v0_165f8, 0
  store i1 %v2_165d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_165d8, i32* @r1, align 4
  %v0_165dc = load i32, i32* %r8.global-to-local, align 4
  %v2_165dc = add i32 %v0_165dc, %v1_165cc
  store i32 %v2_165dc, i32* @r0, align 4
  store i32 %v0_165f8, i32* @r2, align 4
  %v1_165e4 = add i32 %v2_165d0, -1
  store i32 %v1_165e4, i32* @r3, align 4
  %v1_165e8 = add i32 %v0_165e8, 1
  store i32 %v1_165e8, i32* @r4, align 4
  br i1 %v2_165d4, label %dec_label_pc_16638, label %dec_label_pc_165f0

dec_label_pc_165f0:                               ; preds = %dec_label_pc_165cc
  %v2_165f0 = sub i32 %v0_165f8, %v1_165e4
  %v3_165f0 = icmp ult i32 %v0_165f8, %v1_165e4
  %v4_165f0 = xor i32 %v1_165e4, %v0_165f8
  %v5_165f0 = xor i32 %v2_165f0, %v0_165f8
  %v6_165f0 = and i32 %v5_165f0, %v4_165f0
  %v7_165f0 = icmp slt i32 %v6_165f0, 0
  store i1 %v7_165f0, i1* %cpsr_v.global-to-local, align 1
  %v8_165f0 = icmp slt i32 %v2_165f0, 0
  store i1 %v8_165f0, i1* %cpsr_n.global-to-local, align 1
  %v9_165f0 = icmp eq i32 %v0_165f8, %v1_165e4
  store i1 %v9_165f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_165f0, label %dec_label_pc_165f8, label %dec_label_pc_16638

dec_label_pc_165f8:                               ; preds = %dec_label_pc_165f0
  %v1_165f8 = trunc i32 %v0_165f8 to i8
  %v4_165f8 = add i32 %v0_165dc, %v0_165cc
  %v5_165f8 = inttoptr i32 %v4_165f8 to i8*
  store i8 %v1_165f8, i8* %v5_165f8, align 1
  %v0_165fc = call i32 @memcpy()
  store i32 %v0_165fc, i32* @r0, align 4
  %v0_16600 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16600 = icmp slt i32 %v0_16600, 0
  store i1 %v1_16600, i1* %cpsr_n.global-to-local, align 1
  %v2_16600 = icmp eq i32 %v0_16600, 0
  store i1 %v2_16600, i1* %cpsr_z.global-to-local, align 1
  %v0_16604 = load i32, i32* @r5, align 4
  %v1_16604 = load i32, i32* %r7.global-to-local, align 4
  %v2_16604 = add i32 %v1_16604, %v0_16604
  store i32 %v2_16604, i32* %sl.global-to-local, align 4
  br i1 %v2_16600, label %dec_label_pc_16624, label %dec_label_pc_165f8.dec_label_pc_1660c_crit_edge

dec_label_pc_165f8.dec_label_pc_1660c_crit_edge:  ; preds = %dec_label_pc_165f8
  %v0_1660c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1660c.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1660c = icmp slt i32 %v0_1660c.pre, 0
  store i1 %v1_1660c, i1* %cpsr_n.global-to-local, align 1
  %v2_1660c = icmp eq i32 %v0_1660c.pre, 0
  store i1 %v2_1660c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1660c, label %dec_label_pc_16624, label %dec_label_pc_16618

dec_label_pc_16618:                               ; preds = %entry, %dec_label_pc_165f8.dec_label_pc_1660c_crit_edge
  %v0_165b026 = phi i32 [ %v0_1660c.pre, %dec_label_pc_165f8.dec_label_pc_1660c_crit_edge ], [ %tmp, %entry ]
  %v5_1662c525 = phi i32 [ %v2_16604, %dec_label_pc_165f8.dec_label_pc_1660c_crit_edge ], [ 0, %entry ]
  %v1_16618 = inttoptr i32 %v0_165b026 to i8*
  %v2_16618 = load i8, i8* %v1_16618, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1661c = icmp eq i8 %v2_16618, 0
  store i1 %v2_1661c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1661c, label %dec_label_pc_16624, label %dec_label_pc_165b0

dec_label_pc_16624:                               ; preds = %dec_label_pc_165f8.dec_label_pc_1660c_crit_edge, %dec_label_pc_165f8, %dec_label_pc_16618, %entry
  %v8_16630 = phi i32 [ 0, %entry ], [ %v5_1662c525, %dec_label_pc_16618 ], [ %v2_16604, %dec_label_pc_165f8 ], [ %v2_16604, %dec_label_pc_165f8.dec_label_pc_1660c_crit_edge ]
  %v0_16624 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16624 = icmp slt i32 %v0_16624, 0
  store i1 %v1_16624, i1* %cpsr_n.global-to-local, align 1
  %v2_16624 = icmp eq i32 %v0_16624, 0
  store i1 %v2_16624, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_16624, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_16624
  %v6_1662c = add i32 %v8_16630, 1
  store i32 %v6_1662c, i32* @r0, align 4
  %v7_16630 = load i32, i32* %r8.global-to-local, align 4
  %v9_16630 = add i32 %v7_16630, %v8_16630
  %v10_16630 = inttoptr i32 %v9_16630 to i8*
  store i8 0, i8* %v10_16630, align 1
  %v0_16634.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_16634.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16634.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_16624, %bb
  %v2_16634 = phi i1 [ %v2_16634.pre, %bb ], [ false, %dec_label_pc_16624 ]
  %v1_16634 = phi i1 [ %v1_16634.pre, %bb ], [ %v1_16624, %dec_label_pc_16624 ]
  %v0_16634 = phi i1 [ %v0_16634.pre, %bb ], [ %v2_16624, %dec_label_pc_16624 ]
  %v3_16634 = xor i1 %v2_16634, %v1_16634
  %v4_16634 = or i1 %v0_16634, %v3_16634
  br i1 %v4_16634, label %dec_label_pc_16638, label %.dec_label_pc_1663c_crit_edge

.dec_label_pc_1663c_crit_edge:                    ; preds = %bb22
  %v1_16640.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1663c

dec_label_pc_16638:                               ; preds = %dec_label_pc_165f0, %dec_label_pc_165cc, %bb22
  br label %dec_label_pc_1663c

dec_label_pc_1663c:                               ; preds = %.dec_label_pc_1663c_crit_edge, %dec_label_pc_16638
  %v1_16640 = phi i32 [ %v1_16640.pre, %.dec_label_pc_1663c_crit_edge ], [ -1, %dec_label_pc_16638 ]
  %v2_1663c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1663c, i32* @r4, align 4
  store i32 %v6_16598, i32* @r5, align 4
  store i32 %v9_16598, i32* @r6, align 4
  ret i32 %v1_16640

; uselistorder directives
  uselistorder i32 %v0_16624, { 0, 2, 1 }
  uselistorder i32 %v0_1660c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16600, { 1, 0 }
  uselistorder i32 %v2_165f0, { 1, 0 }
  uselistorder i32 %v1_165e4, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_165f8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_165c8, { 1, 0 }
  uselistorder i1 %v2_1660c24, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 (i8*)* @strlen, { 9, 7, 18, 17, 16, 19, 6, 5, 4, 3, 2, 1, 8, 15, 14, 13, 11, 12, 10, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_1663c, { 1, 0 }
  uselistorder label %dec_label_pc_16638, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_16624, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16618, { 1, 0 }
  uselistorder label %dec_label_pc_165cc, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_16650 = load i32, i32* @r1, align 4
  store i32 %v0_16650, i32* @r2, align 4
  %v0_16658 = call i32 @__GI_fseeko64()
  ret i32 %v0_16658
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v3_16668 = load i32, i32* @r4, align 4
  %v6_16668 = load i32, i32* @r5, align 4
  %v12_16668 = load i32, i32* @r7, align 4
  %v2_1666c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp18, i32* %sl.global-to-local, align 4
  %v2_16674 = icmp ugt i32 %tmp18, 1
  store i1 %v2_16674, i1* %cpsr_c.global-to-local, align 1
  %v7_16674 = icmp eq i32 %tmp18, 2
  %v0_16678 = load i32, i32* @r0, align 4
  store i32 %v0_16678, i32* @r7, align 4
  %v2_1667c = xor i1 %v2_16674, true
  %v3_1667c = or i1 %v7_16674, %v2_1667c
  br i1 %v3_1667c, label %dec_label_pc_1669c, label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %entry
  store i32 48248, i32* %r2.global-to-local, align 4
  %v0_16684 = call i32 @__aeabi_read_tp()
  %v3_16688 = load i16, i16* @global_var_22308.76, align 2
  %v4_16688 = sext i16 %v3_16688 to i32
  store i32 %v4_16688, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v3_16694 = add i32 %v4_16688, %v0_16684
  %v4_16694 = inttoptr i32 %v3_16694 to i32*
  store i32 22, i32* %v4_16694, align 4
  br label %dec_label_pc_16814

dec_label_pc_1669c:                               ; preds = %entry
  %v1_1669c = add i32 %v0_16678, 52
  %v2_1669c = inttoptr i32 %v1_1669c to i32*
  %v3_1669c = load i32, i32* %v2_1669c, align 4
  store i32 %v3_1669c, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_166a0 = icmp eq i32 %v3_1669c, 0
  %v2_166a4 = load i32, i32* @r2, align 4
  store i32 %v2_166a4, i32* %stack_var_-40, align 4
  br i1 %v2_166a0, label %dec_label_pc_166ac, label %dec_label_pc_16710

dec_label_pc_166ac:                               ; preds = %dec_label_pc_1669c
  %v0_166ac = call i32 @__aeabi_read_tp()
  %v0_166b0 = load i32, i32* @r7, align 4
  %v1_166b0 = add i32 %v0_166b0, 64
  %v2_166b0 = inttoptr i32 %v1_166b0 to i32*
  %v3_166b0 = load i32, i32* %v2_166b0, align 4
  store i32 %v3_166b0, i32* %r3.global-to-local, align 4
  %v1_166b4 = add i32 %v0_166ac, -1168
  store i32 %v1_166b4, i32* %r6.global-to-local, align 4
  %v3_166b8 = icmp uge i32 %v3_166b0, %v1_166b4
  store i1 %v3_166b8, i1* %cpsr_c.global-to-local, align 1
  %v9_166b8 = icmp eq i32 %v3_166b0, %v1_166b4
  br i1 %v9_166b8, label %dec_label_pc_16704, label %dec_label_pc_166c0

dec_label_pc_166c0:                               ; preds = %dec_label_pc_166ac
  %v1_166c0 = add i32 %v0_166b0, 56
  store i32 %v1_166c0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_166c0, i32* %r2.global-to-local, align 4
  %v0_166cc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_166cc, i32* @r4, align 4
  %v1_166d037 = inttoptr i32 %v1_166c0 to i32*
  %v2_166d038 = load i32, i32* %v1_166d037, align 4
  store i32 %v2_166d038, i32* %r3.global-to-local, align 4
  %v3_166d440 = icmp uge i32 %v2_166d038, %v0_166cc
  store i1 %v3_166d440, i1* %cpsr_c.global-to-local, align 1
  %v9_166d446 = icmp eq i32 %v2_166d038, %v0_166cc
  br i1 %v9_166d446, label %dec_label_pc_166dc, label %dec_label_pc_166f4

dec_label_pc_166dc:                               ; preds = %dec_label_pc_166c0, %dec_label_pc_166dc.dec_label_pc_166d0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_166ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_166ec, label %dec_label_pc_166f0, label %dec_label_pc_166dc.dec_label_pc_166d0_crit_edge

dec_label_pc_166dc.dec_label_pc_166d0_crit_edge:  ; preds = %dec_label_pc_166dc
  %v0_166d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_166d4.pre = load i32, i32* @r4, align 4
  %v1_166d0 = inttoptr i32 %v0_166d0.pre to i32*
  %v2_166d0 = load i32, i32* %v1_166d0, align 4
  store i32 %v2_166d0, i32* %r3.global-to-local, align 4
  %v3_166d4 = icmp uge i32 %v2_166d0, %v1_166d4.pre
  store i1 %v3_166d4, i1* %cpsr_c.global-to-local, align 1
  %v9_166d4 = icmp eq i32 %v2_166d0, %v1_166d4.pre
  br i1 %v9_166d4, label %dec_label_pc_166dc, label %dec_label_pc_166f4

dec_label_pc_166f0:                               ; preds = %dec_label_pc_166dc
  %v0_166f0 = load i32, i32* @r4, align 4
  store i32 %v0_166f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_166f4

dec_label_pc_166f4:                               ; preds = %dec_label_pc_166c0, %dec_label_pc_166dc.dec_label_pc_166d0_crit_edge, %dec_label_pc_166f0
  %v0_166f4 = phi i32 [ %v0_166f0, %dec_label_pc_166f0 ], [ %v2_166d038, %dec_label_pc_166c0 ], [ %v2_166d0, %dec_label_pc_166dc.dec_label_pc_166d0_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_166f4 = icmp eq i32 %v0_166f4, 0
  br i1 %v2_166f4, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_166f4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_166f4, %bb
  store i32 91904, i32* @lr, align 4
  %v1_166fc = xor i1 %v2_166f4, true
  call void @__pseudo_cond_branch(i1 %v1_166fc, i32 ptrtoint (i32* @global_var_d80c.231 to i32))
  %v0_16700 = load i32, i32* %r6.global-to-local, align 4
  %v1_16700 = load i32, i32* @r7, align 4
  %v2_16700 = add i32 %v1_16700, 64
  %v3_16700 = inttoptr i32 %v2_16700 to i32*
  store i32 %v0_16700, i32* %v3_16700, align 4
  %v0_16704.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16704

dec_label_pc_16704:                               ; preds = %dec_label_pc_166ac, %bb21
  %v0_16704 = phi i32 [ %v0_166b0, %dec_label_pc_166ac ], [ %v0_16704.pre, %bb21 ]
  %v1_16704 = add i32 %v0_16704, 60
  %v2_16704 = inttoptr i32 %v1_16704 to i32*
  %v3_16704 = load i32, i32* %v2_16704, align 4
  %v1_16708 = add i32 %v3_16704, 1
  store i32 %v1_16708, i32* %r3.global-to-local, align 4
  store i32 %v1_16708, i32* %v2_16704, align 4
  %v0_16710.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16710

dec_label_pc_16710:                               ; preds = %dec_label_pc_1669c, %dec_label_pc_16704
  %v0_1671c = phi i32 [ %v0_16678, %dec_label_pc_1669c ], [ %v0_16710.pre, %dec_label_pc_16704 ]
  %v1_16710 = inttoptr i32 %v0_1671c to i16*
  %v2_16710 = load i16, i16* %v1_16710, align 2
  %v3_16710 = zext i16 %v2_16710 to i32
  store i32 %v3_16710, i32* %r3.global-to-local, align 4
  %v1_16714 = and i32 %v3_16710, 64
  %v2_16714 = icmp eq i32 %v1_16714, 0
  br i1 %v2_16714, label %dec_label_pc_1672c, label %dec_label_pc_1671c

dec_label_pc_1671c:                               ; preds = %dec_label_pc_16710
  store i32 %v0_1671c, i32* @r0, align 4
  %v0_16720 = call i32 @__stdio_wcommit()
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16724 = icmp eq i32 %v0_16720, 0
  br i1 %v2_16724, label %dec_label_pc_1672c, label %dec_label_pc_16794

dec_label_pc_1672c:                               ; preds = %dec_label_pc_1671c, %dec_label_pc_16710
  %v0_1672c = load i32, i32* %sl.global-to-local, align 4
  %v2_1672c = icmp ne i32 %v0_1672c, 0
  store i1 %v2_1672c, i1* %cpsr_c.global-to-local, align 1
  %v7_1672c = icmp eq i32 %v0_1672c, 1
  br i1 %v7_1672c, label %dec_label_pc_16734, label %dec_label_pc_16748

dec_label_pc_16734:                               ; preds = %dec_label_pc_1672c
  %v0_16734 = load i32, i32* @r7, align 4
  store i32 %v2_1666c, i32* %r1.global-to-local, align 4
  %v2_1673c = inttoptr i32 %v0_16734 to i16*
  %v3_1673c = call i32 @__stdio_adjust_position(i16* %v2_1673c, i32 %v2_1666c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16740 = icmp slt i32 %v3_1673c, 0
  br i1 %v1_16740, label %dec_label_pc_16794, label %dec_label_pc_16734.dec_label_pc_16748_crit_edge

dec_label_pc_16734.dec_label_pc_16748_crit_edge:  ; preds = %dec_label_pc_16734
  %v0_16748.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16748

dec_label_pc_16748:                               ; preds = %dec_label_pc_16734.dec_label_pc_16748_crit_edge, %dec_label_pc_1672c
  %v0_16748 = phi i32 [ %v0_16748.pre, %dec_label_pc_16734.dec_label_pc_16748_crit_edge ], [ %v0_1672c, %dec_label_pc_1672c ]
  store i32 %v0_16748, i32* %r2.global-to-local, align 4
  %v0_1674c = load i32, i32* @r7, align 4
  store i32 %v2_1666c, i32* %r1.global-to-local, align 4
  %v4_16754 = call i32 @__stdio_seek(i32 %v0_1674c, i32* nonnull %stack_var_-40, i32 %v0_16748)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16758 = icmp slt i32 %v4_16754, 0
  br i1 %v1_16758, label %dec_label_pc_16794, label %dec_label_pc_16760

dec_label_pc_16760:                               ; preds = %dec_label_pc_16748
  %v0_16760 = load i32, i32* @r7, align 4
  %v1_16760 = inttoptr i32 %v0_16760 to i16*
  %v2_16760 = load i16, i16* %v1_16760, align 2
  %v3_16760 = zext i16 %v2_16760 to i32
  store i32 %v3_16760, i32* %r3.global-to-local, align 4
  %v1_16764 = add i32 %v0_16760, 8
  %v2_16764 = inttoptr i32 %v1_16764 to i32*
  %v3_16764 = load i32, i32* %v2_16764, align 4
  store i32 %v3_16764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1676c = and i32 %v3_16760, 65464
  store i32 %v1_1676c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_16774 = trunc i32 %v1_1676c to i16
  store i16 %v1_16774, i16* %v1_16760, align 2
  %v0_16778 = load i32, i32* %r2.global-to-local, align 4
  %v1_16778 = load i32, i32* @r7, align 4
  %v2_16778 = add i32 %v1_16778, 28
  %v3_16778 = inttoptr i32 %v2_16778 to i32*
  store i32 %v0_16778, i32* %v3_16778, align 4
  %v0_1677c = load i32, i32* %r2.global-to-local, align 4
  %v1_1677c = load i32, i32* @r7, align 4
  %v2_1677c = add i32 %v1_1677c, 16
  %v3_1677c = inttoptr i32 %v2_1677c to i32*
  store i32 %v0_1677c, i32* %v3_1677c, align 4
  %v0_16780 = load i32, i32* %r2.global-to-local, align 4
  %v1_16780 = load i32, i32* @r7, align 4
  %v2_16780 = add i32 %v1_16780, 20
  %v3_16780 = inttoptr i32 %v2_16780 to i32*
  store i32 %v0_16780, i32* %v3_16780, align 4
  %v0_16784 = load i32, i32* %r2.global-to-local, align 4
  %v1_16784 = load i32, i32* @r7, align 4
  %v2_16784 = add i32 %v1_16784, 24
  %v3_16784 = inttoptr i32 %v2_16784 to i32*
  store i32 %v0_16784, i32* %v3_16784, align 4
  %v0_16788 = load i32, i32* %r1.global-to-local, align 4
  %v1_16788 = load i32, i32* @r7, align 4
  %v2_16788 = add i32 %v1_16788, 44
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  store i32 %v0_16788, i32* %v3_16788, align 4
  %v0_1678c = load i32, i32* %r1.global-to-local, align 4
  %v1_1678c = trunc i32 %v0_1678c to i8
  %v2_1678c = load i32, i32* @r7, align 4
  %v3_1678c = add i32 %v2_1678c, 2
  %v4_1678c = inttoptr i32 %v3_1678c to i8*
  store i8 %v1_1678c, i8* %v4_1678c, align 1
  br label %dec_label_pc_16798

dec_label_pc_16794:                               ; preds = %dec_label_pc_1671c, %dec_label_pc_16748, %dec_label_pc_16734
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16798

dec_label_pc_16798:                               ; preds = %dec_label_pc_16760, %dec_label_pc_16794
  %v0_16798 = load i32, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16798 = icmp eq i32 %v0_16798, 0
  br i1 %v2_16798, label %dec_label_pc_167a0, label %dec_label_pc_16814

dec_label_pc_167a0:                               ; preds = %dec_label_pc_16798
  %v0_167a0 = load i32, i32* @r7, align 4
  %v1_167a0 = add i32 %v0_167a0, 60
  %v2_167a0 = inttoptr i32 %v1_167a0 to i32*
  %v3_167a0 = load i32, i32* %v2_167a0, align 4
  %v1_167a4 = add i32 %v3_167a0, -1
  store i32 %v1_167a4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_167a8 = icmp eq i32 %v1_167a4, 0
  store i32 %v1_167a4, i32* %v2_167a0, align 4
  br i1 %v2_167a8, label %dec_label_pc_167b4, label %dec_label_pc_16814

dec_label_pc_167b4:                               ; preds = %dec_label_pc_167a0
  %v0_167b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_167b4 = load i32, i32* @r7, align 4
  %v2_167b4 = add i32 %v1_167b4, 64
  %v3_167b4 = inttoptr i32 %v2_167b4 to i32*
  store i32 %v0_167b4, i32* %v3_167b4, align 4
  %v0_167b8 = load i32, i32* @r7, align 4
  %v1_167b8 = add i32 %v0_167b8, 56
  store i32 %v1_167b8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_167bc

dec_label_pc_167bc:                               ; preds = %dec_label_pc_167ec.dec_label_pc_167bc_crit_edge, %dec_label_pc_167b4
  %v0_167c4 = phi i32 [ %v0_167c4.pre, %dec_label_pc_167ec.dec_label_pc_167bc_crit_edge ], [ %v1_167b8, %dec_label_pc_167b4 ]
  %v0_167bc = phi i32 [ %v0_167bc.pre, %dec_label_pc_167ec.dec_label_pc_167bc_crit_edge ], [ %v0_167b8, %dec_label_pc_167b4 ]
  %v1_167bc = add i32 %v0_167bc, 56
  %v2_167bc = inttoptr i32 %v1_167bc to i32*
  %v3_167bc = load i32, i32* %v2_167bc, align 4
  store i32 %v3_167bc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_167c4, i32* %r2.global-to-local, align 4
  %v1_167c825 = inttoptr i32 %v0_167c4 to i32*
  %v2_167c826 = load i32, i32* %v1_167c825, align 4
  store i32 %v2_167c826, i32* %r3.global-to-local, align 4
  %v3_167cc28 = icmp uge i32 %v2_167c826, %v3_167bc
  store i1 %v3_167cc28, i1* %cpsr_c.global-to-local, align 1
  %v9_167cc34 = icmp eq i32 %v2_167c826, %v3_167bc
  br i1 %v9_167cc34, label %dec_label_pc_167d4, label %dec_label_pc_167ec

dec_label_pc_167d4:                               ; preds = %dec_label_pc_167bc, %dec_label_pc_167d4.dec_label_pc_167c8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_167e4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_167e4, label %dec_label_pc_167e8, label %dec_label_pc_167d4.dec_label_pc_167c8_crit_edge

dec_label_pc_167d4.dec_label_pc_167c8_crit_edge:  ; preds = %dec_label_pc_167d4
  %v0_167c8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_167cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_167c8 = inttoptr i32 %v0_167c8.pre to i32*
  %v2_167c8 = load i32, i32* %v1_167c8, align 4
  store i32 %v2_167c8, i32* %r3.global-to-local, align 4
  %v3_167cc = icmp uge i32 %v2_167c8, %v1_167cc.pre
  store i1 %v3_167cc, i1* %cpsr_c.global-to-local, align 1
  %v9_167cc = icmp eq i32 %v2_167c8, %v1_167cc.pre
  br i1 %v9_167cc, label %dec_label_pc_167d4, label %dec_label_pc_167ec

dec_label_pc_167e8:                               ; preds = %dec_label_pc_167d4
  %v0_167e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_167e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167ec:                               ; preds = %dec_label_pc_167bc, %dec_label_pc_167d4.dec_label_pc_167c8_crit_edge, %dec_label_pc_167e8
  %v0_167f4 = phi i32 [ %v0_167e8, %dec_label_pc_167e8 ], [ %v2_167c826, %dec_label_pc_167bc ], [ %v2_167c8, %dec_label_pc_167d4.dec_label_pc_167c8_crit_edge ]
  %v1_167ec = phi i32 [ %v0_167e8, %dec_label_pc_167e8 ], [ %v3_167bc, %dec_label_pc_167bc ], [ %v1_167cc.pre, %dec_label_pc_167d4.dec_label_pc_167c8_crit_edge ]
  %v3_167ec = icmp uge i32 %v0_167f4, %v1_167ec
  store i1 %v3_167ec, i1* %cpsr_c.global-to-local, align 1
  %v9_167ec = icmp eq i32 %v0_167f4, %v1_167ec
  br i1 %v9_167ec, label %dec_label_pc_167f4, label %dec_label_pc_167ec.dec_label_pc_167bc_crit_edge

dec_label_pc_167ec.dec_label_pc_167bc_crit_edge:  ; preds = %dec_label_pc_167ec
  %v0_167bc.pre = load i32, i32* @r7, align 4
  %v0_167c4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_167bc

dec_label_pc_167f4:                               ; preds = %dec_label_pc_167ec
  %v2_167f4 = icmp ne i32 %v1_167ec, 0
  store i1 %v2_167f4, i1* %cpsr_c.global-to-local, align 1
  %v7_167f8 = icmp slt i32 %v1_167ec, 2
  br i1 %v7_167f8, label %dec_label_pc_16814, label %dec_label_pc_167fc

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167f4
  %v0_16800 = load i32, i32* %r1.global-to-local, align 4
  %v1_16800 = add i32 %v0_16800, 129
  store i32 %v1_16800, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16814

dec_label_pc_16814:                               ; preds = %dec_label_pc_167a0, %dec_label_pc_16798, %dec_label_pc_167fc, %dec_label_pc_167f4, %dec_label_pc_16680
  %v0_16814 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_16668, i32* @r4, align 4
  store i32 %v6_16668, i32* @r5, align 4
  store i32 %v12_16668, i32* @r7, align 4
  ret i32 %v0_16814

; uselistorder directives
  uselistorder i32 %v0_167e8, { 1, 0, 2 }
  uselistorder i32 %v1_167cc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16748, { 1, 0 }
  uselistorder i32 %v0_1672c, { 0, 2, 1 }
  uselistorder i32 %v1_166d4.pre, { 1, 0 }
  uselistorder i32 %v2_1666c, { 0, 2, 1 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 16, 4, 5, 6, 7, 8, 9, 10, 12, 11, 15, 13, 14 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 16, 17, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 11, 12, 13 }
  uselistorder i32 129, { 1, 0, 9, 10, 11, 7, 8, 12, 3, 13, 14, 4, 5, 6, 2, 15, 16 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 36, 37 }
  uselistorder i32 -61441, { 1, 2, 18, 19, 20, 21, 22, 23, 14, 15, 16, 17, 24, 25, 6, 7, 3, 26, 27, 28, 29, 8, 9, 10, 11, 12, 13, 0, 35, 4, 5, 30, 31, 32, 33, 34 }
  uselistorder i32 22, { 1, 10, 11, 2, 3, 13, 4, 15, 0, 14, 5, 6, 7, 8, 12, 9 }
  uselistorder label %dec_label_pc_16814, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_167ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_167d4, { 1, 0 }
  uselistorder label %dec_label_pc_16798, { 1, 0 }
  uselistorder label %dec_label_pc_16794, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16710, { 1, 0 }
  uselistorder label %dec_label_pc_16704, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_166f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_166dc, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16828 = load i32, i32* @r4, align 4
  store i32 %v3_16828, i32* %stack_var_-12, align 4
  %v3_1682c = load i16, i16* %arg1, align 2
  %v4_1682c = zext i16 %v3_1682c to i32
  store i32 %v4_1682c, i32* @ip, align 4
  %tmp16 = urem i16 %v3_1682c, 4
  %v1_16830 = zext i16 %tmp16 to i32
  store i32 %v1_16830, i32* %r2.global-to-local, align 4
  %v2_16830 = icmp eq i16 %tmp16, 0
  br i1 %v2_16830, label %bb, label %dec_label_pc_16840

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_16840:                               ; preds = %entry
  %v1_16840 = add nsw i32 %v1_16830, -1
  %v7_16840 = icmp eq i16 %tmp16, 1
  br i1 %v7_16840, label %bb13, label %dec_label_pc_16848

dec_label_pc_16848:                               ; preds = %dec_label_pc_16840
  %v1_16848 = and i32 %v4_1682c, 2048
  %v2_16848 = icmp eq i32 %v1_16848, 0
  br i1 %v2_16848, label %bb13, label %dec_label_pc_16850

dec_label_pc_16850:                               ; preds = %dec_label_pc_16848
  %v7_16850 = icmp eq i32 %v1_16840, 2
  br i1 %v7_16850, label %dec_label_pc_168dc, label %dec_label_pc_16858

dec_label_pc_16858:                               ; preds = %dec_label_pc_16850
  %v2_16858 = add i32 %tmp, 40
  %v3_16858 = inttoptr i32 %v2_16858 to i32*
  %v4_16858 = load i32, i32* %v3_16858, align 4
  store i32 %v4_16858, i32* %r3.global-to-local, align 4
  %v2_1685c = icmp eq i32 %v4_16858, 0
  br i1 %v2_1685c, label %dec_label_pc_16864, label %dec_label_pc_168dc

dec_label_pc_16864:                               ; preds = %dec_label_pc_16858
  %v2_16864 = add i32 %tmp, 44
  %v3_16864 = inttoptr i32 %v2_16864 to i32*
  %v4_16864 = load i32, i32* %v3_16864, align 4
  store i32 %v4_16864, i32* %r3.global-to-local, align 4
  %v2_16868 = add i32 %tmp, 3
  %v3_16868 = inttoptr i32 %v2_16868 to i8*
  %v4_16868 = load i8, i8* %v3_16868, align 1
  %v5_16868 = zext i8 %v4_16868 to i32
  store i32 %v5_16868, i32* %r2.global-to-local, align 4
  %v2_1686c = icmp eq i32 %v4_16864, 0
  br i1 %v2_1686c, label %.thread1, label %bb12

.thread1:                                         ; preds = %dec_label_pc_16864
  %v1_168743 = sub nsw i32 0, %v5_16868
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_16864
  %v3_16870 = add i32 %tmp, 2
  %v4_16870 = inttoptr i32 %v3_16870 to i8*
  %v5_16870 = load i8, i8* %v4_16870, align 1
  %v6_16870 = zext i8 %v5_16870 to i32
  store i32 %v6_16870, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_16870, %v5_16868
  %v3_16878 = sub nsw i32 0, %sum
  br label %bb13

bb13:                                             ; preds = %bb, %.thread1, %dec_label_pc_16848, %dec_label_pc_16840, %bb12
  %v1_1688c = phi i32 [ %v1_168743, %.thread1 ], [ %v1_16840, %dec_label_pc_16848 ], [ %v1_16840, %dec_label_pc_16840 ], [ 0, %bb ], [ %v3_16878, %bb12 ]
  %v1_1687c = and i32 %v4_1682c, 64
  %v2_1687c = icmp eq i32 %v1_1687c, 0
  %v2_16880 = add i32 %tmp, 16
  %v3_16880 = inttoptr i32 %v2_16880 to i32*
  %v4_16880 = load i32, i32* %v3_16880, align 4
  store i32 %v4_16880, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1687c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1688c = sub i32 %v1_1688c, %v4_16880
  store i32 %v2_1688c, i32* %r3.global-to-local, align 4
  %v1_16890 = inttoptr i32 %arg2 to i32*
  %v2_16890 = load i32, i32* %v1_16890, align 4
  store i32 %v2_16890, i32* %r0.global-to-local, align 4
  %v3_16890 = add i32 %arg2, 4
  %v4_16890 = inttoptr i32 %v3_16890 to i32*
  %v5_16890 = load i32, i32* %v4_16890, align 4
  %v2_16894 = add i32 %storemerge, %v2_1688c
  store i32 %v2_16894, i32* %r4.global-to-local, align 4
  %v2_16898 = sub i32 %v2_16890, %v2_16894
  store i32 %v2_16898, i32* %r2.global-to-local, align 4
  %v2_1689c = and i32 %v2_16894, 1073741824
  %v3_1689c = icmp ne i32 %v2_1689c, 0
  %v4_1689c = ashr i32 %v2_16894, 31
  %v6_1689c = icmp eq i1 %v3_1689c, false
  %v7_1689c = sub i32 %v5_16890, %v4_1689c
  %v9_1689c = sext i1 %v6_1689c to i32
  %v10_1689c = add i32 %v7_1689c, %v9_1689c
  store i32 %v10_1689c, i32* %r3.global-to-local, align 4
  %v2_168a0 = sub i32 %v10_1689c, %v5_16890
  %v4_168a0 = xor i32 %v10_1689c, %v5_16890
  %v5_168a0 = xor i32 %v2_168a0, %v10_1689c
  %v6_168a0 = and i32 %v5_168a0, %v4_168a0
  %v7_168a0 = icmp slt i32 %v6_168a0, 0
  %v8_168a0 = icmp slt i32 %v2_168a0, 0
  %v9_168a0 = icmp eq i32 %v10_1689c, %v5_16890
  store i32 %v2_16898, i32* %v1_16890, align 4
  %v5_168a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_168a4, i32* %v4_16890, align 4
  %v3_168a8 = xor i1 %v8_168a0, %v7_168a0
  %v4_168a8 = or i1 %v9_168a0, %v3_168a8
  br i1 %v4_168a8, label %dec_label_pc_168ac, label %dec_label_pc_168b8

dec_label_pc_168ac:                               ; preds = %bb13
  br i1 %v9_168a0, label %dec_label_pc_168b0, label %dec_label_pc_168bcthread-pre-split

dec_label_pc_168b0:                               ; preds = %dec_label_pc_168ac
  %v0_168b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_168b0 = load i32, i32* %r0.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_168b0, %v1_168b0
  br i1 %tmp17, label %dec_label_pc_168b8, label %dec_label_pc_168bcthread-pre-split

dec_label_pc_168b8:                               ; preds = %dec_label_pc_168b0, %bb13
  %v0_168b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_168b8 = sub i32 0, %v0_168b8
  store i32 %v1_168b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168bc

dec_label_pc_168bcthread-pre-split:               ; preds = %dec_label_pc_168b0, %dec_label_pc_168ac
  %v0_168bc.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168bc

dec_label_pc_168bc:                               ; preds = %dec_label_pc_168bcthread-pre-split, %dec_label_pc_168b8
  %v0_168bc = phi i32 [ %v0_168bc.pr, %dec_label_pc_168bcthread-pre-split ], [ %v1_168b8, %dec_label_pc_168b8 ]
  %v1_168bc = icmp slt i32 %v0_168bc, 0
  br i1 %v1_168bc, label %dec_label_pc_168c4, label %dec_label_pc_168e0

dec_label_pc_168c4:                               ; preds = %dec_label_pc_168bc
  store i32 47668, i32* %r3.global-to-local, align 4
  %v0_168c8 = call i32 @__aeabi_read_tp()
  store i32 %v0_168c8, i32* %r0.global-to-local, align 4
  %v3_168cc = load i16, i16* @global_var_22308.76, align 2
  %v4_168cc = sext i16 %v3_168cc to i32
  store i32 %v4_168cc, i32* %r3.global-to-local, align 4
  store i32 75, i32* %r2.global-to-local, align 4
  %v3_168d4 = add i32 %v4_168cc, %v0_168c8
  %v4_168d4 = inttoptr i32 %v3_168d4 to i32*
  store i32 75, i32* %v4_168d4, align 4
  %v0_168e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168e0

dec_label_pc_168dc:                               ; preds = %dec_label_pc_16858, %dec_label_pc_16850
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168e0

dec_label_pc_168e0:                               ; preds = %dec_label_pc_168bc, %dec_label_pc_168c4, %dec_label_pc_168dc
  %v0_168e0 = phi i32 [ %v0_168bc, %dec_label_pc_168bc ], [ %v0_168e0.pre, %dec_label_pc_168c4 ], [ -1, %dec_label_pc_168dc ]
  store i32 %v0_168e0, i32* %r0.global-to-local, align 4
  %v2_168e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_168e4, i32* @r4, align 4
  ret i32 %v0_168e0

; uselistorder directives
  uselistorder i32 %v0_168e0, { 1, 0 }
  uselistorder i1 %v9_168a0, { 1, 0 }
  uselistorder i32 %v2_168a0, { 1, 0 }
  uselistorder i32 %v10_1689c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_16890, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 8, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i16* @global_var_22308.76, { 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 96, 95, 94, 93, 92, 65, 91, 90, 89, 35, 63, 62, 61, 60, 59, 58, 44, 43, 42, 88, 87, 40, 41, 51, 50, 86, 85, 53, 14, 13, 82, 39, 38, 52, 64, 34, 33, 48, 49, 15, 66, 37, 36, 47, 46, 45, 57, 56, 84, 83, 81, 80, 79, 78, 72, 6, 29, 17, 77, 11, 12, 28, 27, 10, 5, 4, 9, 8, 7, 16, 26, 25, 55, 54, 75, 76, 24, 23, 71, 32, 31, 19, 22, 21, 30, 20, 70, 18, 69, 67, 68, 3, 2, 0, 1, 74, 73 }
  uselistorder i16 0, { 7, 8, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i16 4, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_168e0, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_168fc = load i32, i32* %arg2, align 4
  %v3_168fc = add i32 %tmp, 4
  %v4_168fc = inttoptr i32 %v3_168fc to i32*
  %v5_168fc = load i32, i32* %v4_168fc, align 4
  %v1_16900 = add i32 %arg1, 4
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_16908 = call i32 @__GI_lseek64(i32 %v3_16900, i32 %tmp, i32 %v2_168fc, i32 %v5_168fc)
  %v1_1690c = icmp slt i32* %arg2, null
  br i1 %v1_1690c, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_169145 = load i32, i32* @r4, align 4
  %v4_169146 = inttoptr i32 %v3_169145 to i32*
  store i32 %v4_16908, i32* %v4_169146, align 4
  %v6_169147 = add i32 %v3_169145, 4
  %v7_169148 = inttoptr i32 %v6_169147 to i32*
  store i32 %tmp, i32* %v7_169148, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_16908, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 7, 3, 0, 4, 5, 1, 8, 9, 10, 11, 6, 12 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_lseek64, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1692c = load i32, i32* @r1, align 4
  %v1_1692c = icmp slt i32 %v0_1692c, 0
  %v2_1692c = icmp eq i32 %v0_1692c, 0
  %v2_16930 = xor i32 %v0_1692c, %arg1
  br i1 %v2_1692c, label %dec_label_pc_16a44, label %dec_label_pc_16938

dec_label_pc_16938:                               ; preds = %entry
  br i1 %v1_1692c, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_16938
  %v2_16938 = sub i32 0, %v0_1692c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_16938, %bb
  %v1_16a04 = phi i32 [ %v2_16938, %bb ], [ %v0_1692c, %dec_label_pc_16938 ]
  %v1_1693c = add i32 %v1_16a04, -1
  %v7_1693c = icmp eq i32 %v1_16a04, 1
  br i1 %v7_1693c, label %dec_label_pc_169e4, label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %thread-pre-split
  %v1_16944 = icmp slt i32 %arg1, 0
  br i1 %v1_16944, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_16944
  %v2_16948 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_16944, %bb85
  %v0_16a38 = phi i32 [ %arg1, %dec_label_pc_16944 ], [ %v2_16948, %bb85 ]
  %v3_1694c = icmp uge i32 %v0_16a38, %v1_16a04
  %v9_1694c = icmp eq i32 %v0_16a38, %v1_16a04
  %v2_16950 = xor i1 %v3_1694c, true
  %v3_16950 = or i1 %v9_1694c, %v2_16950
  br i1 %v3_16950, label %dec_label_pc_169f0, label %dec_label_pc_16954

dec_label_pc_16954:                               ; preds = %bb86
  %v2_16954 = and i32 %v1_1693c, %v1_16a04
  %v4_16954 = icmp eq i32 %v2_16954, 0
  br i1 %v4_16954, label %dec_label_pc_16a00, label %dec_label_pc_1695c

dec_label_pc_1695c:                               ; preds = %dec_label_pc_16954
  %v3_1695c = icmp ult i32 %v1_16a04, 536870912
  br i1 %v3_1695c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1695c
  %v4_16960 = mul i32 %v1_16a04, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1695c, %.thread
  %v0_16980.pr40.ph = phi i32 [ %v4_16960, %.thread ], [ %v1_16a04, %dec_label_pc_1695c ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1695c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_16980.pr40 = phi i32 [ %v4_16974, %bb89 ], [ %v0_16980.pr40.ph, %.preheader.preheader ]
  %v1_16978 = phi i32 [ %v4_16978, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1696c = icmp ugt i32 %v0_16980.pr40, 268435455
  br i1 %v2_1696c, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_16980thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_16970 = icmp ult i32 %v0_16980.pr40, %v0_16a38
  br i1 %v4_16970, label %bb88, label %dec_label_pc_16980thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_16974 = and i32 %v0_16980.pr40, 268435456
  %v3_16974 = icmp eq i32 %v2_16974, 0
  %v4_16974 = mul i32 %v0_16980.pr40, 16
  br i1 %v3_16974, label %bb89, label %dec_label_pc_16980.loopexit

bb89:                                             ; preds = %bb88
  %v2_16978 = and i32 %v1_16978, 268435456
  %v3_16978 = icmp eq i32 %v2_16978, 0
  %v4_16978 = mul i32 %v1_16978, 16
  br i1 %v3_16978, label %.preheader, label %dec_label_pc_16980thread-pre-split.loopexit.loopexit

dec_label_pc_16980thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1698c52.ph = phi i32 [ %v1_16978, %bb87 ], [ %v4_16978, %bb89 ]
  %v0_16980.pr42.ph = phi i32 [ %v0_16980.pr40, %bb87 ], [ %v4_16974, %bb89 ]
  br label %dec_label_pc_16980thread-pre-split.loopexit

dec_label_pc_16980thread-pre-split.loopexit:      ; preds = %dec_label_pc_16980thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1698c52 = phi i32 [ %v1_16978, %.thread3 ], [ %v1_1698c52.ph, %dec_label_pc_16980thread-pre-split.loopexit.loopexit ]
  %v0_16980.pr42 = phi i32 [ %v0_16980.pr40, %.thread3 ], [ %v0_16980.pr42.ph, %dec_label_pc_16980thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_16980thread-pre-split

dec_label_pc_16980thread-pre-split:               ; preds = %dec_label_pc_16980thread-pre-split.loopexit, %bb91
  %v1_1698c50 = phi i32 [ %v1_1698c52, %dec_label_pc_16980thread-pre-split.loopexit ], [ %v3_1698c, %bb91 ]
  %v2_1698448 = phi i32 [ %v0_16a38, %dec_label_pc_16980thread-pre-split.loopexit ], [ %v2_16984, %bb91 ]
  %v0_16980.pr = phi i32 [ %v0_16980.pr42, %dec_label_pc_16980thread-pre-split.loopexit ], [ %v3_16988, %bb91 ]
  br label %dec_label_pc_16980

dec_label_pc_16980.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %dec_label_pc_16980.loopexit, %dec_label_pc_16980thread-pre-split
  %v1_1698c = phi i32 [ %v1_1698c50, %dec_label_pc_16980thread-pre-split ], [ %v1_16978, %dec_label_pc_16980.loopexit ]
  %v2_16984 = phi i32 [ %v2_1698448, %dec_label_pc_16980thread-pre-split ], [ %v0_16a38, %dec_label_pc_16980.loopexit ]
  %v1_16988 = phi i32 [ %v0_16980.pr, %dec_label_pc_16980thread-pre-split ], [ %v4_16974, %dec_label_pc_16980.loopexit ]
  %v2_16980 = icmp slt i32 %v1_16988, 0
  br i1 %v2_16980, label %dec_label_pc_16994, label %bb90

bb90:                                             ; preds = %dec_label_pc_16980
  %v4_16984 = icmp ult i32 %v1_16988, %v2_16984
  br i1 %v4_16984, label %bb91, label %dec_label_pc_16994

bb91:                                             ; preds = %bb90
  %v3_16988 = mul i32 %v1_16988, 2
  %v2_1698c = icmp slt i32 %v1_1698c, 0
  %v3_1698c = mul i32 %v1_1698c, 2
  br i1 %v2_1698c, label %dec_label_pc_16994, label %dec_label_pc_16980thread-pre-split

dec_label_pc_16994:                               ; preds = %bb90, %dec_label_pc_16980, %bb91
  %v2_169a063 = phi i32 [ %v3_1698c, %bb91 ], [ %v1_1698c, %bb90 ], [ %v1_1698c, %dec_label_pc_16980 ]
  %v1_1699855 = phi i32 [ %v3_16988, %bb91 ], [ %v1_16988, %bb90 ], [ %v1_16988, %dec_label_pc_16980 ]
  br label %dec_label_pc_16998

dec_label_pc_16998:                               ; preds = %.thread13, %dec_label_pc_16994
  %v1_169cc = phi i32 [ %v4_169cc, %.thread13 ], [ %v2_169a063, %dec_label_pc_16994 ]
  %v1_169a0 = phi i32 [ %v1_169dc, %.thread13 ], [ 0, %dec_label_pc_16994 ]
  %v1_169d0 = phi i32 [ %v4_169d0, %.thread13 ], [ %v1_1699855, %dec_label_pc_16994 ]
  %v1_1699c = phi i32 [ %v0_169c8, %.thread13 ], [ %v0_16a38, %dec_label_pc_16994 ]
  %v3_16998 = icmp ult i32 %v1_1699c, %v1_169d0
  br i1 %v3_16998, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_16998
  %v3_1699c = sub i32 %v1_1699c, %v1_169d0
  %v3_169a0 = or i32 %v1_169a0, %v1_169cc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16998, %bb92
  %v1_169a8 = phi i32 [ %v1_1699c, %dec_label_pc_16998 ], [ %v3_1699c, %bb92 ]
  %v1_169ac = phi i32 [ %v1_169a0, %dec_label_pc_16998 ], [ %v3_169a0, %bb92 ]
  %v4_169a4 = udiv i32 %v1_169d0, 2
  %v6_169a4 = icmp ult i32 %v1_169a8, %v4_169a4
  br i1 %v6_169a4, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_169a8 = urem i32 %v1_169d0, 2
  %v4_169a8 = icmp eq i32 %v3_169a8, 0
  %v6_169a8 = sub i32 %v1_169a8, %v4_169a4
  br i1 %v4_169a8, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_169ac = udiv i32 %v1_169cc, 2
  %v6_169ac = or i32 %v1_169ac, %v5_169ac
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_169b4 = phi i32 [ %v6_169a8, %bb93 ], [ %v1_169a8, %.thread8 ], [ %v6_169a8, %bb94 ]
  %v1_169b8 = phi i32 [ %v1_169ac, %bb93 ], [ %v1_169ac, %.thread8 ], [ %v6_169ac, %bb94 ]
  %v4_169b0 = udiv i32 %v1_169d0, 4
  %v6_169b0 = icmp ult i32 %v1_169b4, %v4_169b0
  br i1 %v6_169b0, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_169b4 = and i32 %v1_169d0, 2
  %v4_169b4 = icmp eq i32 %v3_169b4, 0
  %v6_169b4 = sub i32 %v1_169b4, %v4_169b0
  br i1 %v4_169b4, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_169b8 = udiv i32 %v1_169cc, 4
  %v6_169b8 = or i32 %v1_169b8, %v5_169b8
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_169c0 = phi i32 [ %v6_169b4, %bb95 ], [ %v1_169b4, %.thread9 ], [ %v6_169b4, %bb96 ]
  %v1_169c4 = phi i32 [ %v1_169b8, %bb95 ], [ %v1_169b8, %.thread9 ], [ %v6_169b8, %bb96 ]
  %v4_169bc = udiv i32 %v1_169d0, 8
  %v6_169bc = icmp ult i32 %v1_169c0, %v4_169bc
  br i1 %v6_169bc, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_169c0 = and i32 %v1_169d0, 4
  %v4_169c0 = icmp eq i32 %v3_169c0, 0
  %v6_169c0 = sub i32 %v1_169c0, %v4_169bc
  br i1 %v4_169c0, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_169c4 = udiv i32 %v1_169cc, 8
  %v6_169c4 = or i32 %v1_169c4, %v5_169c4
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_169dc = phi i32 [ %v1_169c4, %bb97 ], [ %v1_169c4, %.thread10 ], [ %v6_169c4, %bb98 ]
  %v0_169c8 = phi i32 [ %v6_169c0, %bb97 ], [ %v1_169c0, %.thread10 ], [ %v6_169c0, %bb98 ]
  %v2_169c8 = icmp eq i32 %v0_169c8, 0
  br i1 %v2_169c8, label %dec_label_pc_169d8, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_169cc, 16
  br i1 %tmp, label %dec_label_pc_169d8, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_169cc = udiv i32 %v1_169cc, 16
  %v4_169d0 = udiv i32 %v1_169d0, 16
  br label %dec_label_pc_16998

dec_label_pc_169d8:                               ; preds = %thread-pre-split12, %bb99
  %v1_169d8 = icmp slt i32 %v2_16930, 0
  br i1 %v1_169d8, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_169d8
  %v2_169dc = sub i32 0, %v1_169dc
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_169e4, %dec_label_pc_169d8, %bb100
  %v1_169e0 = phi i32 [ %v1_169dc, %dec_label_pc_169d8 ], [ %v2_169dc, %bb100 ], [ %arg1, %dec_label_pc_169e4 ], [ %v2_169e8, %bb101 ], [ %v1_169fc80, %bb103 ], [ %v2_169f8, %bb104 ]
  ret i32 %v1_169e0

dec_label_pc_169e4:                               ; preds = %thread-pre-split
  br i1 %v1_1692c, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_169e4
  %v2_169e8 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_169f0:                               ; preds = %bb86
  br i1 %v3_1694c, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_169f0
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_169f0, %bb102
  %v1_169fc80 = phi i32 [ %arg1, %dec_label_pc_169f0 ], [ 0, %bb102 ]
  br i1 %v9_1694c, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_169f4 = ashr i32 %v2_16930, 31
  %v2_169f8 = or i32 %v4_169f4, 1
  br label %.thread16

dec_label_pc_16a00:                               ; preds = %dec_label_pc_16954
  %v2_16a00 = icmp ugt i32 %v1_16a04, 65535
  br i1 %v2_16a00, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_16a00
  %v2_16a04 = and i32 %v1_16a04, 32768
  %v3_16a04 = icmp eq i32 %v2_16a04, 0
  %v4_16a04 = udiv i32 %v1_16a04, 65536
  br i1 %v3_16a04, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_16a00
  %v0_16a1070 = phi i32 [ %v1_16a04, %dec_label_pc_16a00 ], [ %v4_16a04, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_16a14 = phi i32 [ %v0_16a1070, %.thread19 ], [ %v4_16a04, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_16a10 = icmp ugt i32 %v1_16a14, 255
  br i1 %v2_16a10, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_16a14 = and i32 %v1_16a14, 128
  %v3_16a14 = icmp eq i32 %v2_16a14, 0
  %v4_16a14 = udiv i32 %v1_16a14, 256
  br i1 %v3_16a14, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_16a18 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_16a24 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_16a18, %bb108 ]
  %v1_16a20 = phi i32 [ %v1_16a14, %bb106 ], [ %v4_16a14, %bb107 ], [ %v4_16a14, %bb108 ]
  %v2_16a1c = icmp ugt i32 %v1_16a20, 15
  br i1 %v2_16a1c, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_16a20 = and i32 %v1_16a20, 8
  %v3_16a20 = icmp eq i32 %v2_16a20, 0
  %v4_16a20 = udiv i32 %v1_16a20, 16
  br i1 %v3_16a20, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_16a24 = add nsw i32 %v1_16a24, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_16a2c = phi i32 [ %v1_16a24, %.thread20 ], [ %v1_16a24, %bb109 ], [ %v2_16a24, %bb110 ]
  %v5_16a30 = phi i32 [ %v1_16a20, %.thread20 ], [ %v4_16a20, %bb109 ], [ %v4_16a20, %bb110 ]
  %v2_16a28 = icmp ugt i32 %v5_16a30, 3
  %v7_16a28 = icmp eq i32 %v5_16a30, 4
  %v2_16a2c = xor i1 %v7_16a28, true
  %v3_16a2c = and i1 %v2_16a28, %v2_16a2c
  br i1 %v3_16a2c, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_16a2c = add nsw i32 %v4_16a2c, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_16a30 = phi i32 [ %v4_16a2c, %.thread21 ], [ %v5_16a2c, %bb111 ]
  %v2_16a30 = xor i1 %v2_16a28, true
  %v3_16a30 = or i1 %v7_16a28, %v2_16a30
  br i1 %v3_16a30, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_16a30 = udiv i32 %v5_16a30, 2
  %v9_16a30 = add i32 %v4_16a30, %v8_16a30
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_16a38 = phi i32 [ %v4_16a30, %bb112 ], [ %v9_16a30, %bb113 ]
  %v1_16a34 = icmp slt i32 %v2_16930, 0
  %v6_16a38 = lshr i32 %v0_16a38, %v1_16a38
  %v2_16a3c = sub i32 0, %v6_16a38
  %v2_16a3c.v6_16a38 = select i1 %v1_16a34, i32 %v2_16a3c, i32 %v6_16a38
  ret i32 %v2_16a3c.v6_16a38

dec_label_pc_16a44:                               ; preds = %entry
  %v0_16a48 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_16a30, { 1, 0 }
  uselistorder i1 %v7_16a28, { 1, 0 }
  uselistorder i32 %v4_16a20, { 1, 0 }
  uselistorder i32 %v1_16a20, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16a14, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_16a14, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16a04, { 1, 0 }
  uselistorder i32 %v0_169c8, { 1, 0 }
  uselistorder i32 %v4_169bc, { 1, 0 }
  uselistorder i32 %v1_169c4, { 1, 2, 0 }
  uselistorder i32 %v4_169b0, { 1, 0 }
  uselistorder i32 %v1_169b8, { 1, 2, 0 }
  uselistorder i32 %v4_169a4, { 1, 0 }
  uselistorder i32 %v1_169ac, { 1, 2, 0 }
  uselistorder i32 %v1_169d0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_169a0, { 1, 0 }
  uselistorder i32 %v1_169cc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1698c, { 1, 0 }
  uselistorder i32 %v3_16988, { 1, 0 }
  uselistorder i32 %v1_16988, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_16984, { 1, 0 }
  uselistorder i32 %v1_1698c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16978, { 1, 0 }
  uselistorder i32 %v4_16974, { 2, 1, 0 }
  uselistorder i32 %v1_16978, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_16980.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1694c, { 1, 0 }
  uselistorder i32 %v1_16a04, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_16930, { 1, 0, 2 }
  uselistorder i32 %v0_1692c, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_169d8, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_16994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16980thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_16a5c = sdiv i32 %arg1, %arg2
  ret i32 %v2_16a5c
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_16a74 = bitcast i64 %tmp to double
  %v9_16a74 = fadd double %v8_16a74, %arg1
  %v10_16a74 = fptrunc double %v9_16a74 to float
  %v11_16a74 = bitcast float %v10_16a74 to i32
  ret i32 %v11_16a74
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_16a78 = load i32, i32* @r0, align 4
  ret i32 %v2_16a78
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16a7c = load i32, i32* @r4, align 4
  store i32 %v3_16a7c, i32* %stack_var_-12, align 4
  %v6_16a7c = load i32, i32* @r5, align 4
  %v9_16a7c = load i32, i32* @lr, align 4
  %v0_16a80 = load i32, i32* %r1.global-to-local, align 4
  %v2_16a80 = mul i32 %v0_16a80, 2
  store i32 %v2_16a80, i32* %r4.global-to-local, align 4
  %v0_16a84 = load i32, i32* %r3.global-to-local, align 4
  %v2_16a84 = mul i32 %v0_16a84, 2
  store i32 %v2_16a84, i32* %r5.global-to-local, align 4
  %v4_16a88 = icmp eq i32 %v2_16a84, %v2_16a80
  %v1_16a8c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_16a88, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_16a8c = load i32, i32* %r2.global-to-local, align 4
  %v5_16a8c = icmp eq i32 %v2_16a8c, %v1_16a8c
  br i1 %v5_16a8c, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_16a90 = or i32 %v1_16a8c, %v2_16a80
  %v5_16a90 = icmp eq i32 %v3_16a90, 0
  br i1 %v5_16a90, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_16a94 = load i32, i32* %r2.global-to-local, align 4
  %v3_16a94 = or i32 %v2_16a94, %v2_16a84
  %v5_16a94 = icmp eq i32 %v3_16a94, 0
  br i1 %v5_16a94, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_16a80.off = add i32 %v2_16a80, 4194303
  %tmp = icmp ult i32 %v2_16a80.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_16a84.off = add i32 %v2_16a84, 4194303
  %tmp17 = icmp ult i32 %v2_16a84.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_16aa0 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_16aa0, i32 ptrtoint (i32* @global_var_16cd8.576 to i32))
  %v0_16aa4 = load i32, i32* %r4.global-to-local, align 4
  %v3_16aa4 = udiv i32 %v0_16aa4, 2097152
  store i32 %v3_16aa4, i32* %r4.global-to-local, align 4
  %v1_16aa8 = load i32, i32* %r5.global-to-local, align 4
  %v4_16aa8 = udiv i32 %v1_16aa8, 2097152
  %v5_16aa8 = sub nsw i32 %v4_16aa8, %v3_16aa4
  %v5_16aac = icmp ult i32 %v4_16aa8, %v3_16aa4
  br i1 %v5_16aac, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_16aac = sub nsw i32 0, %v5_16aa8
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_16aac, %bb13 ], [ %v5_16aa8, %.thread3 ]
  %v0_16ad0 = phi i32 [ %v7_16aac, %bb13 ], [ %v5_16aa8, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_16ab0 = icmp ugt i32 %v4_16aa8, %v3_16aa4
  br i1 %v7_16ab0, label %dec_label_pc_16ab4, label %dec_label_pc_16ad0

dec_label_pc_16ab4:                               ; preds = %bb14
  %v2_16ab4 = add nsw i32 %v0_16ad0, %v3_16aa4
  store i32 %v2_16ab4, i32* %r4.global-to-local, align 4
  %v0_16ab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16ab8 = load i32, i32* %r2.global-to-local, align 4
  %v0_16abc = load i32, i32* %r1.global-to-local, align 4
  %v1_16abc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_16ab8, i32* %r0.global-to-local, align 4
  store i32 %v1_16abc, i32* %r1.global-to-local, align 4
  store i32 %v0_16ab8, i32* %r2.global-to-local, align 4
  store i32 %v0_16abc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %bb14, %dec_label_pc_16ab4
  %tmp18 = icmp ugt i32 %v0_16ad0, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_16ad0
  %v6_16ad4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_16ad4, i32* %r4.global-to-local, align 4
  store i32 %v6_16a7c, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16ad0, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_16a7c)
  %v0_16adc = load i32, i32* %r1.global-to-local, align 4
  %v3_16adc = icmp sgt i32 %v0_16adc, -1
  %v4_16ae8 = urem i32 %v0_16adc, 1048576
  %v5_16ae8 = or i32 %v4_16ae8, 1048576
  store i32 %v5_16ae8, i32* %r1.global-to-local, align 4
  br i1 %v3_16adc, label %dec_label_pc_16af8, label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %bb16
  %v0_16af0 = load i32, i32* %r0.global-to-local, align 4
  %v1_16af0 = sub i32 0, %v0_16af0
  store i32 %v1_16af0, i32* %r0.global-to-local, align 4
  %v2_16af0 = icmp eq i32 %v0_16af0, 0
  %v2_16af4 = icmp eq i1 %v2_16af0, false
  %v5_16af4 = sext i1 %v2_16af4 to i32
  %v6_16af4 = sub nsw i32 %v5_16af4, %v5_16ae8
  store i32 %v6_16af4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %bb16, %dec_label_pc_16af0
  %v0_16af8 = load i32, i32* %r3.global-to-local, align 4
  %v3_16af8 = icmp sgt i32 %v0_16af8, -1
  %v4_16b00 = urem i32 %v0_16af8, 1048576
  %v5_16b00 = or i32 %v4_16b00, 1048576
  store i32 %v5_16b00, i32* %r3.global-to-local, align 4
  br i1 %v3_16af8, label %dec_label_pc_16b10, label %dec_label_pc_16b08

dec_label_pc_16b08:                               ; preds = %dec_label_pc_16af8
  %v0_16b08 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b08 = sub i32 0, %v0_16b08
  store i32 %v1_16b08, i32* %r2.global-to-local, align 4
  %v2_16b08 = icmp eq i32 %v0_16b08, 0
  %v2_16b0c = icmp eq i1 %v2_16b08, false
  %v5_16b0c = sext i1 %v2_16b0c to i32
  %v6_16b0c = sub nsw i32 %v5_16b0c, %v5_16b00
  store i32 %v6_16b0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b10

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16af8, %dec_label_pc_16b08
  %v0_16b10 = load i32, i32* %r4.global-to-local, align 4
  %v1_16b10 = load i32, i32* %r5.global-to-local, align 4
  %v4_16b10 = icmp eq i32 %v1_16b10, %v0_16b10
  call void @__pseudo_cond_branch(i1 %v4_16b10, i32 ptrtoint (i32* @global_var_16cc0.577 to i32))
  %v1_16b14 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16b14

; uselistorder directives
  uselistorder i32 %v0_16af8, { 1, 0 }
  uselistorder i32 %v0_16adc, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_16aa8, { 2, 1, 0 }
  uselistorder i32 %v3_16aa4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16a8c, { 1, 0 }
  uselistorder i32 %v2_16a84, { 1, 3, 0, 2 }
  uselistorder i32 %v2_16a80, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_16b10, { 1, 0 }
  uselistorder label %dec_label_pc_16af8, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_16ad0, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16b18() local_unnamed_addr {
dec_label_pc_16b18:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_16b18 = load i32, i32* @r4, align 4
  %v1_16b18 = add i32 %v0_16b18, -1
  store i32 %v1_16b18, i32* @r4, align 4
  %v0_16b1c = load i32, i32* @r5, align 4
  %v1_16b1c = sub i32 32, %v0_16b1c
  store i32 %v1_16b1c, i32* @lr, align 4
  %v5_16b20 = icmp sgt i32 %v0_16b1c, 32
  br i1 %v5_16b20, label %dec_label_pc_16b3c, label %dec_label_pc_16b24

dec_label_pc_16b24:                               ; preds = %dec_label_pc_16b18
  %v0_16b24 = load i32, i32* @r2, align 4
  %v6_16b24 = shl i32 %v0_16b24, %v1_16b1c
  store i32 %v6_16b24, i32* %ip.global-to-local, align 4
  %v0_16b28 = load i32, i32* @r0, align 4
  %v3_16b28 = add i32 %v0_16b1c, -1
  %v4_16b28 = shl i32 1, %v3_16b28
  %v7_16b28 = lshr i32 %v0_16b24, %v0_16b1c
  %v8_16b28 = add i32 %v0_16b28, %v7_16b28
  %v9_16b28 = icmp ult i32 %v8_16b28, %v0_16b28
  %v0_16b2c = load i32, i32* @r1, align 4
  %v2_16b2c = zext i1 %v9_16b28 to i32
  %v3_16b2c = add i32 %v2_16b2c, %v0_16b2c
  %v1_16b30 = load i32, i32* @r3, align 4
  %v7_16b30 = shl i32 %v1_16b30, %v1_16b1c
  %v8_16b30 = add i32 %v7_16b30, %v8_16b28
  store i32 %v8_16b30, i32* %r0.global-to-local, align 4
  %v5_16b34 = and i32 %v1_16b30, %v4_16b28
  %v6_16b34 = icmp ne i32 %v5_16b34, 0
  %v7_16b34 = ashr i32 %v1_16b30, %v0_16b1c
  %v9_16b34 = add i32 %v3_16b2c, %v7_16b34
  %v10_16b34 = zext i1 %v6_16b34 to i32
  %v11_16b34 = add i32 %v10_16b34, %v9_16b34
  br label %dec_label_pc_16b58

dec_label_pc_16b3c:                               ; preds = %dec_label_pc_16b18
  %v1_16b3c = add i32 %v0_16b1c, -32
  %v1_16b40 = add i32 %v1_16b1c, 32
  store i32 %v1_16b40, i32* @lr, align 4
  %v0_16b48 = load i32, i32* @r3, align 4
  %v2_16b48 = add i32 %v1_16b1c, 31
  %v3_16b48 = lshr i32 -2147483648, %v2_16b48
  %v4_16b48 = and i32 %v0_16b48, %v3_16b48
  %v5_16b48 = icmp ne i32 %v4_16b48, 0
  %v6_16b48 = shl i32 %v0_16b48, %v1_16b40
  %v2_16b4c = or i32 %v6_16b48, 2
  %v2_16b4c.v6_16b48 = select i1 %v5_16b48, i32 %v2_16b4c, i32 %v6_16b48
  store i32 %v2_16b4c.v6_16b48, i32* %ip.global-to-local, align 4
  %v0_16b50 = load i32, i32* @r0, align 4
  %v7_16b50 = ashr i32 %v0_16b48, %v1_16b3c
  %v8_16b50 = add i32 %v0_16b50, %v7_16b50
  store i32 %v8_16b50, i32* %r0.global-to-local, align 4
  %v0_16b54 = load i32, i32* @r1, align 4
  %v2_16b54 = and i32 %v0_16b48, 1073741824
  %v3_16b54 = icmp ne i32 %v2_16b54, 0
  %v4_16b54 = ashr i32 %v0_16b48, 31
  %v6_16b54 = add i32 %v0_16b54, %v4_16b54
  %v7_16b54 = zext i1 %v3_16b54 to i32
  %v8_16b54 = add i32 %v6_16b54, %v7_16b54
  br label %dec_label_pc_16b58

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b24, %dec_label_pc_16b3c
  %storemerge = phi i32 [ %v11_16b34, %dec_label_pc_16b24 ], [ %v8_16b54, %dec_label_pc_16b3c ]
  %v0_16b58 = phi i32 [ %v11_16b34, %dec_label_pc_16b24 ], [ %v8_16b54, %dec_label_pc_16b3c ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_16b58 = and i32 %v0_16b58, -2147483648
  store i32 %v1_16b58, i32* @r5, align 4
  %v1_16b5c = icmp sgt i32 %v0_16b58, -1
  call void @__pseudo_cond_branch(i1 %v1_16b5c, i32 ptrtoint (i32* @global_var_16b6c.578 to i32))
  %v0_16b60 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b60 = sub i32 0, %v0_16b60
  store i32 %v1_16b60, i32* %ip.global-to-local, align 4
  %v2_16b60 = icmp eq i32 %v0_16b60, 0
  %v0_16b64 = load i32, i32* %r0.global-to-local, align 4
  %v2_16b64 = icmp eq i1 %v2_16b60, false
  %v5_16b64 = sext i1 %v2_16b64 to i32
  %v6_16b64 = sub i32 %v5_16b64, %v0_16b64
  store i32 %v6_16b64, i32* %r0.global-to-local, align 4
  %v7_16b64 = zext i1 %v2_16b64 to i32
  %v8_16b64 = icmp ne i32 %v6_16b64, %v7_16b64
  %v9_16b64 = icmp ne i32 %v0_16b64, -1
  %v10_16b64 = or i1 %v9_16b64, %v8_16b64
  %v11_16b64 = icmp ne i32 %v0_16b64, 0
  %v12_16b64 = select i1 %v2_16b64, i1 %v10_16b64, i1 %v11_16b64
  %v0_16b68 = load i32, i32* %r1.global-to-local, align 4
  %v5_16b68 = sext i1 %v12_16b64 to i32
  %v6_16b68 = sub i32 %v5_16b68, %v0_16b68
  store i32 %v6_16b68, i32* @r1, align 4
  ret i32 %v6_16b64

; uselistorder directives
  uselistorder i1 %v2_16b64, { 1, 2, 0 }
  uselistorder i32 %v0_16b64, { 1, 2, 0 }
  uselistorder i32 %v8_16b54, { 1, 0 }
  uselistorder i32 %v0_16b48, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_16b34, { 1, 0 }
  uselistorder i32 %v1_16b30, { 1, 0, 2 }
  uselistorder i32 %v0_16b28, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_16b58, { 1, 0 }
}

define i32 @function_16b6c(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16b6c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_16b6c = load i32, i32* %r1.global-to-local, align 4
  %v3_16b70 = icmp ult i32 %v0_16b6c, 1048574
  br i1 %v3_16b70, label %dec_label_pc_16bb4, label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %dec_label_pc_16b6c
  %v3_16b78 = icmp ult i32 %v0_16b6c, 2097150
  br i1 %v3_16b78, label %dec_label_pc_16b98, label %dec_label_pc_16b7c

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b74
  %v1_16b7c = urem i32 %v0_16b6c, 2
  %v2_16b7c = icmp ne i32 %v1_16b7c, 0
  %v3_16b7c = udiv i32 %v0_16b6c, 2
  store i32 %v3_16b7c, i32* %r1.global-to-local, align 4
  %v0_16b80 = load i32, i32* %r0.global-to-local, align 4
  %v3_16b80 = zext i1 %v2_16b7c to i32
  %v6_16b80 = zext i32 %v0_16b80 to i64
  %v7_16b80 = sub i32 33, %v0_16b80
  %v8_16b80 = zext i32 %v7_16b80 to i64
  %v9_16b80 = shl i64 %v6_16b80, %v8_16b80
  %v10_16b80 = sub i32 32, %v0_16b80
  %v11_16b80 = shl i32 %v3_16b80, %v10_16b80
  %v12_16b80 = zext i32 %v11_16b80 to i64
  %v14_16b80 = or i64 %v12_16b80, %v9_16b80
  %v15_16b80 = trunc i64 %v14_16b80 to i32
  %v16_16b80 = add i32 %v0_16b80, -1
  %v17_16b80 = shl i32 1, %v16_16b80
  %v18_16b80 = and i32 %v17_16b80, %v0_16b80
  %v19_16b80 = icmp ne i32 %v18_16b80, 0
  store i32 %v15_16b80, i32* %r0.global-to-local, align 4
  %v0_16b84 = load i32, i32* @ip, align 4
  %v3_16b84 = zext i1 %v19_16b80 to i32
  %v6_16b84 = zext i32 %v0_16b84 to i64
  %v7_16b84 = sub i32 33, %v0_16b84
  %v8_16b84 = zext i32 %v7_16b84 to i64
  %v9_16b84 = shl i64 %v6_16b84, %v8_16b84
  %v10_16b84 = sub i32 32, %v0_16b84
  %v11_16b84 = shl i32 %v3_16b84, %v10_16b84
  %v12_16b84 = zext i32 %v11_16b84 to i64
  %v14_16b84 = or i64 %v12_16b84, %v9_16b84
  %v15_16b84 = trunc i64 %v14_16b84 to i32
  store i32 %v15_16b84, i32* @ip, align 4
  %v0_16b88 = load i32, i32* @r4, align 4
  %v1_16b88 = add i32 %v0_16b88, 1
  store i32 %v1_16b88, i32* @r4, align 4
  %v3_16b8c = mul i32 %v1_16b88, 2097152
  %v2_16b90 = icmp ugt i32 %v3_16b8c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_16b90, i32 ptrtoint (i32* @global_var_16d48.579 to i32))
  br label %dec_label_pc_16b98

dec_label_pc_16b98:                               ; preds = %dec_label_pc_16bb4, %dec_label_pc_16b74, %dec_label_pc_16b7c
  %v0_16b98 = load i32, i32* @ip, align 4
  %v2_16b98 = icmp slt i32 %v0_16b98, 0
  %v6_16b98 = icmp eq i32 %v0_16b98, -2147483648
  %v1_16b9c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_16b98, label %bb, label %dec_label_pc_16b98._crit_edge

bb:                                               ; preds = %dec_label_pc_16b98
  %v2_16b9c = urem i32 %v1_16b9c, 2
  %v3_16b9c = icmp ne i32 %v2_16b9c, 0
  br label %dec_label_pc_16b98._crit_edge

dec_label_pc_16b98._crit_edge:                    ; preds = %dec_label_pc_16b98, %bb
  %v1_16ba0 = phi i1 [ %v3_16b9c, %bb ], [ %v2_16b98, %dec_label_pc_16b98 ]
  %v2_16ba0 = zext i1 %v1_16ba0 to i32
  %v3_16ba0 = add i32 %v2_16ba0, %v1_16b9c
  store i32 %v3_16ba0, i32* %r0.global-to-local, align 4
  %v0_16ba4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ba4 = load i32, i32* @r4, align 4
  %v2_16ba4 = and i32 %v1_16ba4, 4096
  %v3_16ba4 = icmp ne i32 %v2_16ba4, 0
  %v4_16ba4 = mul i32 %v1_16ba4, 1048576
  %v6_16ba4 = add i32 %v4_16ba4, %v0_16ba4
  %v7_16ba4 = zext i1 %v3_16ba4 to i32
  %v8_16ba4 = add i32 %v7_16ba4, %v6_16ba4
  %v1_16ba8 = load i32, i32* @r5, align 4
  %v2_16ba8 = or i32 %v1_16ba8, %v8_16ba4
  store i32 %v2_16ba8, i32* %r1.global-to-local, align 4
  ret i32 %v3_16ba0

dec_label_pc_16bb4:                               ; preds = %dec_label_pc_16b6c
  %v0_16bb4 = load i32, i32* @ip, align 4
  %v1_16bb4 = icmp slt i32 %v0_16bb4, 0
  %v2_16bb4 = mul i32 %v0_16bb4, 2
  store i32 %v2_16bb4, i32* @ip, align 4
  %v0_16bb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_16bb8 = mul i32 %v0_16bb8, 2
  %v4_16bb8 = zext i1 %v1_16bb4 to i32
  %v5_16bb8 = or i32 %v3_16bb8, %v4_16bb8
  store i32 %v5_16bb8, i32* %r0.global-to-local, align 4
  %v9_16bb8 = icmp ule i32 %v5_16bb8, %v0_16bb8
  %v10_16bb8 = icmp ult i32 %v3_16bb8, %v0_16bb8
  %v11_16bb8 = select i1 %v1_16bb4, i1 %v9_16bb8, i1 %v10_16bb8
  %v3_16bbc = mul i32 %v0_16b6c, 2
  %v4_16bbc = zext i1 %v11_16bb8 to i32
  %v5_16bbc = or i32 %v4_16bbc, %v3_16bbc
  store i32 %v5_16bbc, i32* %r1.global-to-local, align 4
  %v1_16bc0 = and i32 %v3_16bbc, 1048576
  %v2_16bc0 = icmp eq i32 %v1_16bc0, 0
  %v0_16bc4 = load i32, i32* @r4, align 4
  %v1_16bc4 = add i32 %v0_16bc4, -1
  store i32 %v1_16bc4, i32* @r4, align 4
  br i1 %v2_16bc0, label %bb7, label %dec_label_pc_16b98

bb7:                                              ; preds = %dec_label_pc_16bb4
  ret i32 %v5_16bb8

; uselistorder directives
  uselistorder i32 %v0_16bb8, { 1, 2, 0 }
  uselistorder i1 %v1_16bb4, { 1, 0 }
  uselistorder i32 %v1_16b9c, { 1, 0 }
  uselistorder i32 %v0_16b98, { 1, 0 }
  uselistorder i32 %v0_16b84, { 1, 0, 2 }
  uselistorder i32 %v0_16b80, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_16b98._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16b98, { 0, 2, 1 }
}

define i32 @function_16bcc() local_unnamed_addr {
dec_label_pc_16bcc:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_16bcc = load i32, i32* @r1, align 4
  %v2_16bcc = icmp eq i32 %v0_16bcc, 0
  br i1 %v2_16bcc, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_16bcc
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_16bcc
  %v1_16bd810 = load i32, i32* @r0, align 4
  store i32 %v1_16bd810, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_16c34 = phi i32 [ %v0_16bcc, %bb ], [ %v1_16bd810, %bb38 ]
  %v1_16bec = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_16be4 = icmp ugt i32 %v0_16c34, 65535
  br i1 %v2_16be4, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_16be8 = and i32 %v0_16c34, 32768
  %v3_16be8 = icmp eq i32 %v2_16be8, 0
  %v4_16be8 = udiv i32 %v0_16c34, 65536
  br i1 %v3_16be8, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_16bec = add nsw i32 %v1_16bec, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_16bf8 = phi i32 [ %v1_16bec, %.thread ], [ %v1_16bec, %bb39 ], [ %v2_16bec, %bb40 ]
  %v1_16bf4 = phi i32 [ %v0_16c34, %.thread ], [ %v4_16be8, %bb39 ], [ %v4_16be8, %bb40 ]
  %v2_16bf0 = icmp ugt i32 %v1_16bf4, 255
  br i1 %v2_16bf0, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_16bf4 = and i32 %v1_16bf4, 128
  %v3_16bf4 = icmp eq i32 %v2_16bf4, 0
  %v4_16bf4 = udiv i32 %v1_16bf4, 256
  br i1 %v3_16bf4, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_16bf8 = add nsw i32 %v1_16bf8, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_16c04 = phi i32 [ %v1_16bf8, %.thread3 ], [ %v1_16bf8, %bb41 ], [ %v2_16bf8, %bb42 ]
  %v1_16c00 = phi i32 [ %v1_16bf4, %.thread3 ], [ %v4_16bf4, %bb41 ], [ %v4_16bf4, %bb42 ]
  %v2_16bfc = icmp ugt i32 %v1_16c00, 15
  br i1 %v2_16bfc, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_16c00 = and i32 %v1_16c00, 8
  %v3_16c00 = icmp eq i32 %v2_16c00, 0
  %v4_16c00 = udiv i32 %v1_16c00, 16
  br i1 %v3_16c00, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_16c04 = add nsw i32 %v1_16c04, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_16c0c = phi i32 [ %v1_16c04, %.thread4 ], [ %v1_16c04, %bb43 ], [ %v2_16c04, %bb44 ]
  %v1_16c14 = phi i32 [ %v1_16c00, %.thread4 ], [ %v4_16c00, %bb43 ], [ %v4_16c00, %bb44 ]
  %v2_16c08 = icmp ugt i32 %v1_16c14, 3
  br i1 %v2_16c08, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_16c0c = add i32 %v1_16c0c, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_16c10 = udiv i32 %v1_16c14, 2
  %v6_16c10 = sub i32 %v1_16c0c, %v5_16c10
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_16c14 = phi i32 [ %v6_16c10, %.thread6 ], [ %v2_16c0c, %bb45 ]
  %v4_16c14 = udiv i32 %v1_16c14, 8
  %v5_16c14 = sub i32 %v0_16c14, %v4_16c14
  %v2_16c18 = add i32 %v5_16c14, -32
  %v4_16c18 = sub i32 31, %v5_16c14
  %v5_16c18 = and i32 %v4_16c18, %v5_16c14
  %v8_16c18 = icmp eq i32 %v5_16c14, 32
  %v6_16c1c = icmp slt i32 %v5_16c14, 32
  br i1 %v6_16c1c, label %dec_label_pc_16c20, label %dec_label_pc_16c40

dec_label_pc_16c20:                               ; preds = %bb46
  %v2_16c20 = add i32 %v5_16c14, -20
  %v7_16c24 = icmp sgt i32 %v2_16c18, -12
  br i1 %v7_16c24, label %dec_label_pc_16c28, label %dec_label_pc_16c3c

dec_label_pc_16c28:                               ; preds = %dec_label_pc_16c20
  %v1_16c2c = sub i32 32, %v5_16c14
  %v6_16c30 = shl i32 %v0_16c34, %v5_16c14
  store i32 %v6_16c30, i32* @r0, align 4
  %v6_16c34 = lshr i32 %v0_16c34, %v1_16c2c
  store i32 %v6_16c34, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16c20
  %v8_16c20 = icmp eq i32 %v2_16c20, 0
  %v4_16c20 = add i32 %v5_16c14, 2147483616
  %v5_16c20 = and i32 %v2_16c20, %v4_16c20
  br label %dec_label_pc_16c40

dec_label_pc_16c40:                               ; preds = %bb46, %dec_label_pc_16c3c
  %v1_16c4c.in = phi i32 [ %v2_16c18, %bb46 ], [ %v2_16c20, %dec_label_pc_16c3c ]
  %v6_16c4c = phi i32 [ %v2_16c18, %bb46 ], [ %v5_16c14, %dec_label_pc_16c3c ]
  %v2_16c4c.in = phi i32 [ %v5_16c18, %bb46 ], [ %v5_16c20, %dec_label_pc_16c3c ]
  %v0_16c4c = phi i1 [ %v8_16c18, %bb46 ], [ %v8_16c20, %dec_label_pc_16c3c ]
  %v1_16c4c = icmp slt i32 %v1_16c4c.in, 0
  %v2_16c4c = icmp slt i32 %v2_16c4c.in, 0
  %v3_16c40 = xor i1 %v2_16c4c, %v1_16c4c
  %v4_16c40 = or i1 %v0_16c4c, %v3_16c40
  br i1 %v4_16c40, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_16c40
  %v6_16c40 = sub i32 32, %v6_16c4c
  store i32 %v6_16c40, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_16c40, %bb47
  %v6_16c44 = shl i32 %v0_16c34, %v6_16c4c
  store i32 %v6_16c44, i32* %r1.global-to-local, align 4
  br i1 %v4_16c40, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_16c48 = load i32, i32* @r0, align 4
  %v7_16c48 = load i32, i32* @ip, align 4
  %v12_16c48 = lshr i32 %v6_16c48, %v7_16c48
  %v13_16c48 = or i32 %v12_16c48, %v6_16c44
  store i32 %v13_16c48, i32* %r1.global-to-local, align 4
  %v11_16c4c = shl i32 %v6_16c48, %v6_16c4c
  store i32 %v11_16c4c, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_16c28, %bb49
  %v6_16c54 = phi i32 [ %v6_16c34, %dec_label_pc_16c28 ], [ %v13_16c48, %bb49 ], [ %v6_16c44, %bb48 ]
  %v0_16c50 = load i32, i32* @r4, align 4
  %v2_16c50 = sub i32 %v0_16c50, %v5_16c14
  store i32 %v2_16c50, i32* %r4.global-to-local, align 4
  %v4_16c50 = xor i32 %v0_16c50, %v5_16c14
  %v5_16c50 = xor i32 %v2_16c50, %v0_16c50
  %v6_16c50 = and i32 %v5_16c50, %v4_16c50
  %v7_16c50 = icmp slt i32 %v6_16c50, 0
  %v8_16c50 = icmp slt i32 %v2_16c50, 0
  %v5_16c54 = icmp slt i32 %v0_16c50, %v5_16c14
  br i1 %v5_16c54, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_16c54 = mul i32 %v2_16c50, 1048576
  %v11_16c54 = add i32 %v10_16c54, %v6_16c54
  %v7_16c58 = load i32, i32* @r5, align 4
  %v8_16c58 = or i32 %v7_16c58, %v11_16c54
  store i32 %v8_16c58, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_16c60 = xor i1 %v8_16c50, %v7_16c50
  %v4_16c60 = xor i1 %v3_16c60, true
  call void @__pseudo_cond_branch(i1 %v4_16c60, i32 %tmp33)
  %v0_16c64 = load i32, i32* %r4.global-to-local, align 4
  %v2_16c68 = sub i32 -32, %v0_16c64
  store i32 %v2_16c68, i32* %r4.global-to-local, align 4
  %v6_16c6c = icmp sgt i32 %v0_16c64, -32
  br i1 %v6_16c6c, label %dec_label_pc_16c70, label %dec_label_pc_16cb0

dec_label_pc_16c70:                               ; preds = %.thread8
  %v1_16c70 = add i32 %v2_16c68, 12
  store i32 %v1_16c70, i32* %r4.global-to-local, align 4
  %v8_16c74 = icmp sgt i32 %v1_16c70, 0
  br i1 %v8_16c74, label %dec_label_pc_16c94, label %dec_label_pc_16c78

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c70
  %v1_16c78 = add i32 %v2_16c68, 32
  %v1_16c7c = sub i32 0, %v2_16c68
  %v0_16c80 = load i32, i32* @r0, align 4
  %v6_16c80 = lshr i32 %v0_16c80, %v1_16c78
  %v1_16c84 = load i32, i32* %r1.global-to-local, align 4
  %v7_16c84 = shl i32 %v1_16c84, %v1_16c7c
  %v8_16c84 = or i32 %v7_16c84, %v6_16c80
  %v0_16c88 = load i32, i32* @r5, align 4
  %v7_16c88 = lshr i32 %v1_16c84, %v1_16c78
  %v8_16c88 = or i32 %v0_16c88, %v7_16c88
  store i32 %v8_16c88, i32* %r1.global-to-local, align 4
  %v2_16c8c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16c8c, i32* %r4.global-to-local, align 4
  ret i32 %v8_16c84

dec_label_pc_16c94:                               ; preds = %dec_label_pc_16c70
  %v1_16c94 = sub i32 0, %v2_16c68
  %v1_16c98 = add i32 %v2_16c68, 32
  %v0_16c9c = load i32, i32* @r0, align 4
  %v6_16c9c = lshr i32 %v0_16c9c, %v1_16c98
  %v1_16ca0 = load i32, i32* %r1.global-to-local, align 4
  %v7_16ca0 = shl i32 %v1_16ca0, %v1_16c94
  %v8_16ca0 = or i32 %v7_16ca0, %v6_16c9c
  %v0_16ca4 = load i32, i32* @r5, align 4
  store i32 %v0_16ca4, i32* %r1.global-to-local, align 4
  %v2_16ca8 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16ca8, i32* %r4.global-to-local, align 4
  ret i32 %v8_16ca0

dec_label_pc_16cb0:                               ; preds = %.thread8
  %v0_16cb0 = load i32, i32* %r1.global-to-local, align 4
  %v6_16cb0 = lshr i32 %v0_16cb0, %v2_16c68
  %v0_16cb4 = load i32, i32* @r5, align 4
  store i32 %v0_16cb4, i32* %r1.global-to-local, align 4
  %v2_16cb8 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_16cb8, i32* %r4.global-to-local, align 4
  ret i32 %v6_16cb0

; uselistorder directives
  uselistorder i32 %v2_16c68, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_16c50, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16c50, { 2, 0, 1, 3 }
  uselistorder i32 %v6_16c44, { 1, 0, 2 }
  uselistorder i32 %v2_16c18, { 1, 0, 2 }
  uselistorder i32 %v5_16c14, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_16c00, { 1, 0 }
  uselistorder i32 %v1_16c00, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16bf4, { 1, 0 }
  uselistorder i32 %v1_16bf4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16be8, { 1, 0 }
  uselistorder i32 %v0_16c34, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 4, 28, 29, 1, 0, 5, 15, 16, 6, 18, 19, 7, 20, 21, 17, 14, 13, 12, 11, 10, 22, 23, 24, 25, 9, 2, 8, 3, 26, 27 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -4, { 10, 11, 47, 12, 48, 49, 50, 2, 13, 55, 56, 57, 58, 59, 60, 0, 1, 54, 21, 74, 75, 76, 6, 22, 23, 24, 77, 78, 79, 7, 25, 26, 27, 80, 81, 82, 8, 28, 29, 83, 20, 19, 84, 85, 86, 18, 17, 16, 15, 30, 31, 32, 33, 34, 5, 35, 3, 36, 4, 87, 14, 37, 51, 52, 53, 38, 39, 62, 63, 64, 9, 65, 66, 67, 40, 61, 68, 69, 70, 71, 72, 73, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -8, { 4, 33, 34, 5, 0, 35, 6, 7, 8, 36, 15, 16, 17, 18, 19, 20, 14, 13, 3, 12, 11, 10, 9, 21, 22, 23, 24, 25, 2, 37, 26, 27, 38, 28, 39, 32, 29, 30, 31, 1 }
  uselistorder i32 255, { 7, 8, 4, 11, 12, 3, 5, 6, 10, 0, 1, 2, 9 }
  uselistorder i32 -16, { 2, 3, 23, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 0 }
  uselistorder i32 65535, { 3, 4, 1, 0, 2, 5 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_16c40, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16cc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_16cc0:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_16cc0 = load i32, i32* @r4, align 4
  %v2_16cc0 = icmp eq i32 %v0_16cc0, 0
  %v1_16cc4 = xor i32 %arg3, 1048576
  store i32 %v1_16cc4, i32* @r3, align 4
  br i1 %v2_16cc0, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_16cc0
  %v1_16cc8 = load i32, i32* @r1, align 4
  %v2_16cc8 = xor i32 %v1_16cc8, 1048576
  store i32 %v2_16cc8, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_16cc0
  %v1_16cd0 = load i32, i32* @r5, align 4
  %v2_16cd0 = add i32 %v1_16cd0, -1
  store i32 %v2_16cd0, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_16cd4 = call i32 @function_16b18()
  store i32 %v0_16cd4, i32* %r0.global-to-local, align 4
  %v0_16cd8 = load i32, i32* @r4, align 4
  %v0_16cd8.off = add i32 %v0_16cd8, 4194303
  %tmp = icmp ult i32 %v0_16cd8.off, 2097152
  %v1_16d68 = load i32, i32* @r5, align 4
  %v1_16d68.off = add i32 %v1_16d68, 4194303
  %tmp44 = icmp ult i32 %v1_16d68.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_16ce4

dec_label_pc_16ce4:                               ; preds = %bb30
  %v4_16ce4 = icmp eq i32 %v1_16d68, %v0_16cd8
  br i1 %v4_16ce4, label %bb31, label %dec_label_pc_16cf0

bb31:                                             ; preds = %dec_label_pc_16ce4
  %v2_16ce8 = load i32, i32* @r2, align 4
  %v5_16ce8 = icmp eq i32 %v2_16ce8, %v0_16cd4
  br i1 %v5_16ce8, label %dec_label_pc_16d04, label %dec_label_pc_16cf0

dec_label_pc_16cf0:                               ; preds = %dec_label_pc_16ce4, %bb31
  %v2_16cf0 = or i32 %v0_16cd8, %v0_16cd4
  %v4_16cf0 = icmp eq i32 %v2_16cf0, 0
  br i1 %v4_16cf0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_16cf0
  %v1_16cf8 = load i32, i32* @r2, align 4
  store i32 %v1_16cf8, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_16cf0, %bb32
  %v1_16d00 = phi i32 [ %v0_16cd4, %dec_label_pc_16cf0 ], [ %v1_16cf8, %bb32 ]
  ret i32 %v1_16d00

dec_label_pc_16d04:                               ; preds = %bb31
  %v0_16d04 = load i32, i32* @r1, align 4
  %v1_16d04 = load i32, i32* @r3, align 4
  %v4_16d04 = icmp eq i32 %v1_16d04, %v0_16d04
  br i1 %v4_16d04, label %dec_label_pc_16d04..thread8_crit_edge, label %bb33

dec_label_pc_16d04..thread8_crit_edge:            ; preds = %dec_label_pc_16d04
  %v0_16d14.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_16d04
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16d04..thread8_crit_edge, %bb33
  %v0_16d14 = phi i32 [ %v0_16d14.pre, %dec_label_pc_16d04..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_16d14 = xor i1 %v4_16d04, true
  call void @__pseudo_cond_branch(i1 %v2_16d14, i32 %v0_16d14)
  %v0_16d18 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_16d18, 2097152
  br i1 %tmp45, label %dec_label_pc_16d20, label %dec_label_pc_16d34

dec_label_pc_16d20:                               ; preds = %.thread8
  %v0_16d20 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d20 = icmp slt i32 %v0_16d20, 0
  %v2_16d20 = mul i32 %v0_16d20, 2
  store i32 %v2_16d20, i32* %r0.global-to-local, align 4
  %v0_16d24 = load i32, i32* @r1, align 4
  %v3_16d24 = mul i32 %v0_16d24, 2
  %v4_16d24 = zext i1 %v1_16d20 to i32
  %v5_16d24 = or i32 %v3_16d24, %v4_16d24
  %v9_16d24 = icmp ule i32 %v5_16d24, %v0_16d24
  %v10_16d24 = icmp ult i32 %v3_16d24, %v0_16d24
  %v11_16d24 = select i1 %v1_16d20, i1 %v9_16d24, i1 %v10_16d24
  br i1 %v11_16d24, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_16d20
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_16d20, %bb34
  ret i32 %v2_16d20

dec_label_pc_16d34:                               ; preds = %.thread8
  %v2_16d34 = icmp ugt i32 %v0_16d18, -4194305
  br i1 %v2_16d34, label %dec_label_pc_16d34..thread9_crit_edge, label %bb36

dec_label_pc_16d34..thread9_crit_edge:            ; preds = %dec_label_pc_16d34
  %v0_16d40.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_16d34
  %v1_16d38 = load i32, i32* @r1, align 4
  %v2_16d38 = add i32 %v1_16d38, 1048576
  store i32 %v2_16d38, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16d34..thread9_crit_edge, %bb36
  %v0_16d40 = phi i32 [ %v0_16d40.pre, %dec_label_pc_16d34..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_16d40 = xor i1 %v2_16d34, true
  call void @__pseudo_cond_branch(i1 %v2_16d40, i32 %v0_16d40)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_16d74.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_16d74.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_16d60 = load i32, i32* @r3, align 4
  %v1_16d64 = load i32, i32* @r2, align 4
  store i32 %v1_16d64, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_16d7423 = phi i32 [ %v1_16d74.pre, %.thread14 ], [ %v1_16d60, %bb37 ]
  %v1_16d70 = phi i32 [ %v0_16cd4, %.thread14 ], [ %v1_16d64, %bb37 ]
  store i32 %v1_16d70, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_16d80 = phi i32 [ %v1_16d7423, %bb38 ], [ %v1_16d74.pre, %.thread11 ]
  %v1_16d88 = phi i32 [ %v1_16d70, %bb38 ], [ %v0_16cd4, %.thread11 ]
  %v4_16d74 = mul i32 %v1_16d80, 4096
  %v5_16d74 = or i32 %v4_16d74, %v1_16d88
  %v7_16d74 = icmp eq i32 %v5_16d74, 0
  br i1 %v7_16d74, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_16d78 = load i32, i32* @r2, align 4
  %v2_16d78 = load i32, i32* @r3, align 4
  %v5_16d78 = mul i32 %v2_16d78, 4096
  %v6_16d78 = or i32 %v5_16d78, %v1_16d78
  %v8_16d78 = icmp eq i32 %v6_16d78, 0
  br i1 %v8_16d78, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_16d7c = icmp eq i32 %v2_16d78, %v1_16d80
  br i1 %v5_16d7c, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_16d88

; uselistorder directives
  uselistorder i32 %v1_16d74.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16d24, { 1, 2, 0 }
  uselistorder i32 %v2_16d20, { 1, 0 }
  uselistorder i1 %v1_16d20, { 1, 0 }
  uselistorder i32 %v0_16d18, { 1, 0 }
  uselistorder i1 %v4_16d04, { 1, 0 }
  uselistorder i32 %v0_16cd8, { 2, 0, 1 }
  uselistorder i32 %v0_16cd4, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_16cf0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_16d8c = icmp eq i32 %arg1, 0
  br i1 %v2_16d8c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_16d94 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16d8c, i32 %v0_16d94)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_16dac = call i32 @function_16bcc()
  ret i32 %v0_16dac

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_16db0 = icmp eq i32 %arg1, 0
  br i1 %v2_16db0, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_16db8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16db0, i32 %v0_16db8)
  store i32 1074, i32* @r4, align 4
  %v1_16dc8 = and i32 %arg1, -2147483648
  store i32 %v1_16dc8, i32* @r5, align 4
  %v2_16dc8 = icmp eq i32 %v1_16dc8, 0
  br i1 %v2_16dc8, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_16dcc = sub i32 0, %arg1
  store i32 %v2_16dcc, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_16dd4 = call i32 @function_16bcc()
  ret i32 %v0_16dd4

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_16dd8 = mul i32 %arg1, 2
  store i32 %v2_16dd8, i32* %r2.global-to-local, align 4
  %v4_16dd8 = icmp eq i32 %v2_16dd8, 0
  %v1_16ddc = and i32 %v2_16dd8, 4
  %v2_16ddc = icmp ne i32 %v1_16ddc, 0
  %v3_16ddc = sdiv i32 %v2_16dd8, 8
  %v3_16de0 = zext i1 %v2_16ddc to i32
  %v6_16de0 = zext i32 %v3_16ddc to i64
  %v7_16de0 = sub nsw i32 33, %v3_16ddc
  %v8_16de0 = zext i32 %v7_16de0 to i64
  %v9_16de0 = shl i64 %v6_16de0, %v8_16de0
  %v10_16de0 = sub nsw i32 32, %v3_16ddc
  %v11_16de0 = shl i32 %v3_16de0, %v10_16de0
  %v12_16de0 = zext i32 %v11_16de0 to i64
  %v14_16de0 = or i64 %v12_16de0, %v9_16de0
  %v15_16de0 = trunc i64 %v14_16de0 to i32
  store i32 %v15_16de0, i32* %r1.global-to-local, align 4
  %v3_16de4 = mul i32 %arg1, 536870912
  store i32 %v3_16de4, i32* @r0, align 4
  br i1 %v4_16dd8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_16de8 = and i32 %v2_16dd8, -16777216
  store i32 %v2_16de8, i32* @r3, align 4
  %v4_16de8 = icmp eq i32 %v2_16de8, 0
  br i1 %v4_16de8, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_16dec = icmp ugt i32 %v2_16dd8, -16777217
  br i1 %v4_16dec, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_16df0 = xor i32 %v15_16de0, 939524096
  store i32 %v2_16df0, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_16df4 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_16df4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16df4, i32 %v0_16df4)
  %v0_16df8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16df8 = icmp eq i32 %v0_16df8, 0
  br i1 %v2_16df8, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_16dfc = load i32, i32* @r3, align 4
  %v4_16dfc = icmp eq i32 %v1_16dfc, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_16e00 = phi i1 [ true, %.thread1 ], [ %v4_16dfc, %bb9 ]
  %v0_16e00 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_16e00, i32 %v0_16e00)
  store i32 896, i32* @r4, align 4
  %v0_16e0c = load i32, i32* %r1.global-to-local, align 4
  %v1_16e0c = and i32 %v0_16e0c, -2147483648
  store i32 %v1_16e0c, i32* @r5, align 4
  %tmp = bitcast i32 %v0_16e0c to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_16e10 = bitcast float %tmp11 to i32
  store i32 %v1_16e10, i32* @r1, align 4
  %v0_16e14 = call i32 @function_16bcc()
  ret i32 %v0_16e14

; uselistorder directives
  uselistorder i32 %v3_16ddc, { 1, 2, 0 }
  uselistorder i32 %v2_16dd8, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_16bcc, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_16e18 = or i32 %arg2, %arg1
  %v4_16e18 = icmp eq i32 %v2_16e18, 0
  %v0_16e1c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_16e18, i32 %v0_16e1c)
  store i32 0, i32* @r5, align 4
  %v0_16e28 = call i32 @function_16e48()
  ret i32 %v0_16e28
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_16e2c = or i32 %arg2, %arg1
  %v4_16e2c = icmp eq i32 %v2_16e2c, 0
  %v0_16e30 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_16e2c, i32 %v0_16e30)
  %v1_16e3c = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_16e3c, i32 ptrtoint (i32* @global_var_16e48.580 to i32))
  %v1_16e40 = sub i32 0, %arg1
  ret i32 %v1_16e40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16e48() local_unnamed_addr {
dec_label_pc_16e48:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_16e50 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_16e50, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_16b6c.578 to i32))
  %tmp6 = icmp ult i32 %v0_16e50, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_16e48
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_16e48, %bb
  %v1_16e68 = phi i32 [ 3, %dec_label_pc_16e48 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_16e50, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_16e68 = add nuw nsw i32 %v1_16e68, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_16e6c = phi i32 [ %v1_16e68, %bb3 ], [ %v2_16e68, %bb4 ]
  %not. = icmp slt i32 %v0_16e50, 0
  %v4_16e6c = zext i1 %not. to i32
  %v5_16e6c = add nsw i32 %v0_16e6c, %v4_16e6c
  %v1_16e70 = sub nsw i32 32, %v5_16e6c
  %v0_16e74 = load i32, i32* @r0, align 4
  %v6_16e74 = shl i32 %v0_16e74, %v1_16e70
  store i32 %v6_16e74, i32* @ip, align 4
  %v6_16e78 = lshr i32 %v0_16e74, %v5_16e6c
  %v1_16e7c = load i32, i32* @r1, align 4
  %v7_16e7c = shl i32 %v1_16e7c, %v1_16e70
  %v8_16e7c = or i32 %v7_16e7c, %v6_16e78
  %v6_16e80 = lshr i32 %v1_16e7c, %v5_16e6c
  %v0_16e84 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e84 = add i32 %v0_16e84, %v5_16e6c
  store i32 %v2_16e84, i32* @r4, align 4
  %v4_16e88 = sext i32 %v8_16e7c to i64
  %v5_16e88 = call i32 @function_16b6c(i64 %v4_16e88, i32 %v6_16e80, i32 %v5_16e6c, i32 %v1_16e70)
  ret i32 %v5_16e88

; uselistorder directives
  uselistorder i32 %v5_16e6c, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16e8c = load i32, i32* @r4, align 4
  store i32 %v3_16e8c, i32* %stack_var_-16, align 4
  %v12_16e8c = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_16e98 = udiv i32 %arg2, 1048576
  %v5_16e98 = urem i32 %v4_16e98, 2048
  store i32 %v5_16e98, i32* %r4.global-to-local, align 4
  %v6_16e98 = icmp eq i32 %v5_16e98, 0
  br i1 %v6_16e98, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_16e9c = udiv i32 %arg4, 1048576
  %v6_16e9c = urem i32 %v5_16e9c, 2048
  store i32 %v6_16e9c, i32* @r5, align 4
  %v7_16e9c = icmp eq i32 %v6_16e9c, 0
  br i1 %v7_16e9c, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_16ea0 = icmp eq i32 %v5_16e98, 2047
  br i1 %v5_16ea0, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_16ea4 = icmp eq i32 %v6_16e9c, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_16ea8 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_16ea4, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_16eac.582 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_16ea8, i32 ptrtoint (i32* @global_var_17084.581 to i32))
  %v0_16eac = load i32, i32* %r4.global-to-local, align 4
  %v1_16eac = load i32, i32* @r5, align 4
  %v2_16eac = add i32 %v1_16eac, %v0_16eac
  store i32 %v2_16eac, i32* %r4.global-to-local, align 4
  %v2_16eb0 = xor i32 %arg4, %arg2
  %v1_16eb4 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_16eb4, -2097152
  %v5_16eb4 = add i32 %tmp51, -1
  %v6_16eb4 = and i32 %v5_16eb4, %arg2
  store i32 %v6_16eb4, i32* %r1.global-to-local, align 4
  %v6_16eb8 = and i32 %v5_16eb4, %arg4
  %v5_16ebc = mul i32 %arg2, 4096
  %v6_16ebc = or i32 %v5_16ebc, %tmp32
  %v8_16ebc = icmp eq i32 %v6_16ebc, 0
  br i1 %v8_16ebc, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_16ec45 = or i32 %v6_16eb4, 1048576
  store i32 %v1_16ec45, i32* %r1.global-to-local, align 4
  %v1_16ec87 = or i32 %v6_16eb8, 1048576
  br label %dec_label_pc_16f48

bb40:                                             ; preds = %.thread2
  %v6_16ec0 = mul i32 %arg4, 4096
  %v7_16ec0 = or i32 %v6_16ec0, %arg3
  %v9_16ec0 = icmp eq i32 %v7_16ec0, 0
  %v1_16ec4 = or i32 %v6_16eb4, 1048576
  store i32 %v1_16ec4, i32* %r1.global-to-local, align 4
  %v1_16ec8 = or i32 %v6_16eb8, 1048576
  br i1 %v9_16ec0, label %dec_label_pc_16f48, label %dec_label_pc_16ed0

dec_label_pc_16ed0:                               ; preds = %bb40
  %v6_16ed0 = mul nuw i64 %tmp, %arg1
  %v7_16ed0 = udiv i64 %v6_16ed0, 4294967296
  %v9_16ed0 = trunc i64 %v6_16ed0 to i32
  store i32 %v9_16ed0, i32* %ip.global-to-local, align 4
  %v7_16ed8 = zext i32 %v1_16ec4 to i64
  %v11_16ed8 = mul nuw nsw i64 %v7_16ed8, %tmp
  %v12_16ed8 = add i64 %v11_16ed8, %v7_16ed0
  %v1_16edc = and i32 %v2_16eb0, -2147483648
  %v10_16ee0 = zext i32 %v1_16ec8 to i64
  %v11_16ee0 = mul nuw i64 %v10_16ee0, %arg1
  %v12_16ee0 = add i64 %v12_16ed8, %v11_16ee0
  %v13_16ee0 = udiv i64 %v12_16ee0, 4294967296
  %v15_16ee0 = trunc i64 %v12_16ee0 to i32
  %v10_16ee8 = mul nuw i64 %v10_16ee0, %v7_16ed8
  %v11_16ee8 = add i64 %v13_16ee0, %v10_16ee8
  %v12_16ee8 = udiv i64 %v11_16ee8, 4294967296
  %v13_16ee8 = trunc i64 %v12_16ee8 to i32
  %v14_16ee8 = trunc i64 %v11_16ee8 to i32
  %v2_16eec = icmp eq i32 %v9_16ed0, 0
  br i1 %v2_16eec, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_16ed0
  %v2_16ef0 = or i32 %v15_16ee0, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_16ed0, %bb41
  %storemerge = phi i32 [ %v2_16ef0, %bb41 ], [ %v15_16ee0, %dec_label_pc_16ed0 ]
  %v0_16f04 = phi i32 [ %v2_16ef0, %bb41 ], [ %v15_16ee0, %dec_label_pc_16ed0 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_16ef4 = add i32 %v2_16eac, -255
  %v2_16ef8 = icmp ugt i32 %v13_16ee8, 511
  %v2_16efc = icmp eq i1 %v2_16ef8, false
  %v3_16efc = add i32 %v2_16eac, -1023
  %v5_16efc = sext i1 %v2_16efc to i32
  %v6_16efc = add i32 %v3_16efc, %v5_16efc
  store i32 %v6_16efc, i32* %r4.global-to-local, align 4
  %v3_16f00 = icmp ugt i32 %v1_16ef4, 768
  br i1 %v3_16f00, label %dec_label_pc_16f10, label %dec_label_pc_16f04

dec_label_pc_16f04:                               ; preds = %bb42
  %v1_16f04 = icmp slt i32 %v0_16f04, 0
  %v2_16f04 = mul i32 %v0_16f04, 2
  store i32 %v2_16f04, i32* %lr.global-to-local, align 4
  %v3_16f08 = mul i32 %v14_16ee8, 2
  %v4_16f08 = zext i1 %v1_16f04 to i32
  %v5_16f08 = or i32 %v4_16f08, %v3_16f08
  %v9_16f08 = icmp ule i32 %v5_16f08, %v14_16ee8
  %v10_16f08 = icmp ult i32 %v3_16f08, %v14_16ee8
  %v11_16f08 = select i1 %v1_16f04, i1 %v9_16f08, i1 %v10_16f08
  %v3_16f0c25 = mul nuw nsw i64 %v12_16ee8, 2
  %v3_16f0c = trunc i64 %v3_16f0c25 to i32
  %v4_16f0c = zext i1 %v11_16f08 to i32
  %v5_16f0c = or i32 %v4_16f0c, %v3_16f0c
  br label %dec_label_pc_16f10

dec_label_pc_16f10:                               ; preds = %bb42, %dec_label_pc_16f04
  %v0_16f20 = phi i32 [ %v0_16f04, %bb42 ], [ %v2_16f04, %dec_label_pc_16f04 ]
  %v0_16f18 = phi i32 [ %v14_16ee8, %bb42 ], [ %v5_16f08, %dec_label_pc_16f04 ]
  %v1_16f10 = phi i32 [ %v13_16ee8, %bb42 ], [ %v5_16f0c, %dec_label_pc_16f04 ]
  %v4_16f10 = mul i32 %v1_16f10, 2048
  %v4_16f14 = udiv i32 %v0_16f18, 2097152
  %v5_16f10 = or i32 %v4_16f14, %v1_16edc
  %v5_16f14 = or i32 %v5_16f10, %v4_16f10
  store i32 %v5_16f14, i32* %r1.global-to-local, align 4
  %v3_16f18 = mul i32 %v0_16f18, 2048
  %v4_16f1c = udiv i32 %v0_16f20, 2097152
  %v5_16f1c = or i32 %v3_16f18, %v4_16f1c
  store i32 %v5_16f1c, i32* %r0.global-to-local, align 4
  %v3_16f20 = mul i32 %v0_16f20, 2048
  store i32 %v3_16f20, i32* %lr.global-to-local, align 4
  %v1_16f24 = add i32 %v6_16efc, -253
  store i32 %v1_16f24, i32* %ip.global-to-local, align 4
  %v2_16f24 = icmp ugt i32 %v6_16efc, 252
  %v7_16f24 = icmp eq i32 %v6_16efc, 253
  %v2_16f28 = xor i1 %v7_16f24, true
  %v3_16f28 = and i1 %v2_16f24, %v2_16f28
  br i1 %v3_16f28, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_16f10
  %v6_16f28 = icmp ugt i32 %v1_16f24, 1791
  %v11_16f28 = icmp eq i32 %v1_16f24, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_16f10, %bb43
  %v1_16f2c = phi i1 [ %v7_16f24, %dec_label_pc_16f10 ], [ %v11_16f28, %bb43 ]
  %v0_16f2c = phi i1 [ %v2_16f24, %dec_label_pc_16f10 ], [ %v6_16f28, %bb43 ]
  %v2_16f2c = xor i1 %v1_16f2c, true
  %v3_16f2c = and i1 %v0_16f2c, %v2_16f2c
  call void @__pseudo_cond_branch(i1 %v3_16f2c, i32 ptrtoint (i32* @global_var_16f78.125 to i32))
  %v0_16f30 = load i32, i32* %lr.global-to-local, align 4
  %v2_16f30 = icmp slt i32 %v0_16f30, 0
  %v6_16f30 = icmp eq i32 %v0_16f30, -2147483648
  %v1_16f34 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_16f30, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_16f34 = urem i32 %v1_16f34, 2
  %v3_16f34 = icmp ne i32 %v2_16f34, 0
  %v4_16f34 = udiv i32 %v1_16f34, 2
  store i32 %v4_16f34, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_16f38 = phi i1 [ %v3_16f34, %bb45 ], [ %v2_16f30, %bb44 ]
  %v2_16f38 = zext i1 %v1_16f38 to i32
  %v3_16f38 = add i32 %v2_16f38, %v1_16f34
  store i32 %v3_16f38, i32* %r0.global-to-local, align 4
  %v0_16f3c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f3c = load i32, i32* %r4.global-to-local, align 4
  %v2_16f3c = and i32 %v1_16f3c, 4096
  %v3_16f3c = icmp ne i32 %v2_16f3c, 0
  %v4_16f3c = mul i32 %v1_16f3c, 1048576
  %v6_16f3c = add i32 %v4_16f3c, %v0_16f3c
  %v7_16f3c = zext i1 %v3_16f3c to i32
  %v8_16f3c = add i32 %v7_16f3c, %v6_16f3c
  store i32 %v8_16f3c, i32* %r1.global-to-local, align 4
  %v2_16f40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16f40, i32* %r4.global-to-local, align 4
  store i32 %v12_16e8c, i32* %lr.global-to-local, align 4
  ret i32 %v3_16f38

dec_label_pc_16f48:                               ; preds = %.thread3, %bb40
  %v1_16f54 = phi i32 [ %v1_16ec87, %.thread3 ], [ %v1_16ec8, %bb40 ]
  %v1_16f4c = phi i32 [ %v1_16ec45, %.thread3 ], [ %v1_16ec4, %bb40 ]
  %v1_16f48 = and i32 %v2_16eb0, -2147483648
  %v2_16f4c = or i32 %v1_16f4c, %v1_16f48
  %v4_16f501 = or i64 %tmp, %arg1
  %v4_16f50 = trunc i64 %v4_16f501 to i32
  store i32 %v4_16f50, i32* %r0.global-to-local, align 4
  %v2_16f54 = xor i32 %v2_16f4c, %v1_16f54
  store i32 %v2_16f54, i32* %r1.global-to-local, align 4
  %v4_16f58 = udiv i32 %v1_16eb4, 2
  %v5_16f58 = sub i32 %v2_16eac, %v4_16f58
  store i32 %v5_16f58, i32* %r4.global-to-local, align 4
  %v7_16f58 = sub i32 0, %v5_16f58
  %v8_16f58 = and i32 %v2_16eac, %v7_16f58
  %v11_16f58 = icmp eq i32 %v2_16eac, %v4_16f58
  %v7_16f5c = icmp sgt i32 %v2_16eac, %v4_16f58
  br i1 %v7_16f5c, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_16f48
  %v10_16f5c = sub i32 %v1_16eb4, %v5_16f58
  %v12_16f5c = xor i32 %v5_16f58, %v1_16eb4
  %v13_16f5c = xor i32 %v10_16f5c, %v1_16eb4
  %v14_16f5c = and i32 %v13_16f5c, %v12_16f5c
  %v17_16f5c = icmp eq i32 %v1_16eb4, %v5_16f58
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16f48, %bb46
  %v3_16f68.in = phi i32 [ %v8_16f58, %dec_label_pc_16f48 ], [ %v14_16f5c, %bb46 ]
  %v2_16f68.in = phi i32 [ %v5_16f58, %dec_label_pc_16f48 ], [ %v10_16f5c, %bb46 ]
  %v1_16f68 = phi i1 [ %v11_16f58, %dec_label_pc_16f48 ], [ %v17_16f5c, %bb46 ]
  %v2_16f68 = icmp slt i32 %v2_16f68.in, 0
  %v3_16f68 = icmp slt i32 %v3_16f68.in, 0
  %v3_16f60 = xor i1 %v3_16f68, %v2_16f68
  %v4_16f60 = or i1 %v1_16f68, %v3_16f60
  br i1 %v4_16f60, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_16f68.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_16f6030 = mul i32 %v5_16f58, 1048576
  %v10_16f6031 = or i32 %v2_16f54, %v9_16f6030
  store i32 %v10_16f6031, i32* %r1.global-to-local, align 4
  %v7_16f64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_16f64, i32* %r4.global-to-local, align 4
  store i32 %v12_16e8c, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_16f68 = phi i32 [ %v0_16f68.pre, %._crit_edge23 ], [ %v12_16e8c, %bb48 ]
  %v6_16f68 = xor i1 %v4_16f60, true
  call void @__pseudo_cond_branch(i1 %v6_16f68, i32 %v0_16f68)
  %v0_16f6c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f6c = or i32 %v0_16f6c, 1048576
  store i32 %v1_16f6c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_16f74 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f74 = add i32 %v0_16f74, -1
  store i32 %v1_16f74, i32* %r4.global-to-local, align 4
  ret i32 %v4_16f50

; uselistorder directives
  uselistorder i32 %v5_16f58, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_16f58, { 2, 1, 0 }
  uselistorder i32 %v1_16f34, { 2, 0, 1 }
  uselistorder i32 %v0_16f30, { 1, 0 }
  uselistorder i1 %v7_16f24, { 1, 0 }
  uselistorder i32 %v2_16f04, { 1, 0 }
  uselistorder i1 %v1_16f04, { 1, 0 }
  uselistorder i32 %v6_16efc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16f04, { 1, 0, 2 }
  uselistorder i32 %v14_16ee8, { 1, 3, 2, 0 }
  uselistorder i64 %v11_16ee8, { 1, 0 }
  uselistorder i64 %v12_16ee0, { 1, 0 }
  uselistorder i64 %v10_16ee0, { 1, 0 }
  uselistorder i64 %v7_16ed8, { 1, 0 }
  uselistorder i64 %v6_16ed0, { 1, 0 }
  uselistorder i32 %v6_16eb8, { 1, 0 }
  uselistorder i32 %v6_16eb4, { 1, 0, 2 }
  uselistorder i32 %v1_16eb4, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_16eac, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_16e9c, { 2, 1, 0 }
  uselistorder i32 %v5_16e98, { 2, 1, 0 }
  uselistorder i32 %v12_16e8c, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 10, 2, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16f48, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_16f10, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_16f78() local_unnamed_addr {
dec_label_pc_16f78:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_16f78 = load i1, i1* @cpsr_z, align 1
  %v1_16f78 = load i1, i1* @cpsr_n, align 1
  %v2_16f78 = load i1, i1* @cpsr_v, align 1
  %v3_16f78 = xor i1 %v1_16f78, %v2_16f78
  %v4_16f78 = or i1 %v0_16f78, %v3_16f78
  br i1 %v4_16f78, label %dec_label_pc_16f7c, label %dec_label_pc_170f4

dec_label_pc_16f7c:                               ; preds = %dec_label_pc_16f78
  %v0_16f7c = load i32, i32* @r4, align 4
  %v4_16f7c = add i32 %v0_16f7c, 54
  %v6_16f7c = sub i32 0, %v0_16f7c
  %v7_16f7c = and i32 %v4_16f7c, %v6_16f7c
  %v8_16f7c = icmp slt i32 %v7_16f7c, 0
  %v9_16f7c = icmp slt i32 %v4_16f7c, 0
  %v10_16f7c = icmp eq i32 %v4_16f7c, 0
  %v7_16f80 = icmp sgt i32 %v0_16f7c, -54
  br i1 %v7_16f80, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16f7c
  store i32 0, i32* @r0, align 4
  %v8_16f84 = load i32, i32* @r1, align 4
  %v9_16f84 = and i32 %v8_16f84, -2147483648
  store i32 %v9_16f84, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16f7c, %bb
  %v4_16f8c = xor i1 %v9_16f7c, %v8_16f7c
  %v5_16f8c = or i1 %v10_16f7c, %v4_16f8c
  call void @__pseudo_cond_branch(i1 %v5_16f8c, i32 %tmp7)
  %v0_16f90 = load i32, i32* @r4, align 4
  %v1_16f90 = sub i32 0, %v0_16f90
  %v2_16f94 = sub i32 -32, %v0_16f90
  %v4_16f94 = add i32 %v0_16f90, 31
  %v5_16f94 = and i32 %v4_16f94, %v1_16f90
  %v6_16f94 = icmp slt i32 %v5_16f94, 0
  store i1 %v6_16f94, i1* @cpsr_v, align 1
  %v6_16f98 = icmp slt i32 %v1_16f90, 32
  br i1 %v6_16f98, label %dec_label_pc_16f9c, label %dec_label_pc_17008

dec_label_pc_16f9c:                               ; preds = %.thread1
  %v1_16f9c = add i32 %v2_16f94, 12
  %v8_16fa0 = icmp sgt i32 %v1_16f9c, 0
  br i1 %v8_16fa0, label %dec_label_pc_16fd8, label %dec_label_pc_16fa4

dec_label_pc_16fa4:                               ; preds = %dec_label_pc_16f9c
  %v1_16fa4 = add i32 %v2_16f94, 32
  %v1_16fa8 = sub i32 0, %v2_16f94
  %v0_16fac = load i32, i32* @r0, align 4
  %v6_16fac = shl i32 %v0_16fac, %v1_16fa8
  %v2_16fb0 = add i32 %v2_16f94, 31
  %v3_16fb0 = shl i32 1, %v2_16fb0
  %v6_16fb0 = lshr i32 %v0_16fac, %v1_16fa4
  %v1_16fb4 = load i32, i32* @r1, align 4
  %v7_16fb4 = shl i32 %v1_16fb4, %v1_16fa8
  %v8_16fb4 = or i32 %v7_16fb4, %v6_16fb0
  %v1_16fb8 = and i32 %v1_16fb4, -2147483648
  %tmp = bitcast i32 %v1_16fb4 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_16fbc = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_16fac, 0
  %v4_16fc0 = zext i1 %tmp20 to i32
  %v5_16fc0 = add i32 %v8_16fb4, %v4_16fc0
  %v5_16fc4 = and i32 %v1_16fbc, %v3_16fb0
  %v6_16fc4 = icmp ne i32 %v5_16fc4, 0
  %v7_16fc4 = lshr i32 %v1_16fbc, %v1_16fa4
  %v9_16fc4 = add i32 %v7_16fc4, %v1_16fb8
  %v10_16fc4 = zext i1 %v6_16fc4 to i32
  %v11_16fc4 = add i32 %v9_16fc4, %v10_16fc4
  store i32 %v11_16fc4, i32* @r1, align 4
  %v19_16fc4 = add i32 %v11_16fc4, %v10_16fc4
  %v20_16fc4 = xor i32 %v19_16fc4, %v1_16fb4
  %v21_16fc4 = xor i32 %v19_16fc4, %v7_16fc4
  %v22_16fc4 = and i32 %v20_16fc4, %v21_16fc4
  %v23_16fc4 = icmp slt i32 %v22_16fc4, 0
  store i1 %v23_16fc4, i1* @cpsr_v, align 1
  %v3_16fc8 = mul i32 %v6_16fac, 2
  %v4_16fc8 = or i32 %v3_16fc8, %tmp7
  %v5_16fc8 = icmp slt i32 %v4_16fc8, 0
  store i1 %v5_16fc8, i1* @cpsr_n, align 1
  %v6_16fc8 = icmp eq i32 %v4_16fc8, 0
  store i1 %v6_16fc8, i1* @cpsr_z, align 1
  br i1 %v6_16fc8, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_16fa4
  %tmp21 = sext i1 %tmp20 to i32
  %v6_16fcc = add nsw i32 %tmp21, -1
  %v7_16fcc = and i32 %v5_16fc0, %v6_16fcc
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_16fa4, %bb13
  %v1_16fd4 = phi i32 [ %v5_16fc0, %dec_label_pc_16fa4 ], [ %v7_16fcc, %bb13 ]
  %v2_16fd0 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_16fd0, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_16fd4

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16f9c
  %v1_16fd8 = sub i32 0, %v2_16f94
  %v1_16fdc = add i32 %v2_16f94, 32
  %v0_16fe0 = load i32, i32* @r0, align 4
  %v6_16fe0 = shl i32 %v0_16fe0, %v1_16fd8
  %v6_16fe4 = lshr i32 %v0_16fe0, %v1_16fdc
  %v1_16fe8 = load i32, i32* @r1, align 4
  %v7_16fe8 = shl i32 %v1_16fe8, %v1_16fd8
  %v8_16fe8 = or i32 %v7_16fe8, %v6_16fe4
  %v1_16fec = and i32 %v1_16fe8, -2147483648
  %tmp22 = icmp slt i32 %v6_16fe0, 0
  %v4_16ff0 = zext i1 %tmp22 to i32
  %v5_16ff0 = add i32 %v8_16fe8, %v4_16ff0
  %v6_16ff0 = icmp ult i32 %v5_16ff0, %v8_16fe8
  %v2_16ff4 = zext i1 %v6_16ff0 to i32
  %v3_16ff4 = or i32 %v2_16ff4, %v1_16fec
  store i32 %v3_16ff4, i32* @r1, align 4
  %v9_16ff4 = add nsw i32 %v3_16ff4, %v2_16ff4
  %v10_16ff4 = sub i32 0, %v1_16fe8
  %v11_16ff4 = and i32 %v9_16ff4, %v10_16ff4
  %v12_16ff4 = icmp slt i32 %v11_16ff4, 0
  store i1 %v12_16ff4, i1* @cpsr_v, align 1
  %v3_16ff8 = mul i32 %v6_16fe0, 2
  %v4_16ff8 = or i32 %v3_16ff8, %tmp7
  %v5_16ff8 = icmp slt i32 %v4_16ff8, 0
  store i1 %v5_16ff8, i1* @cpsr_n, align 1
  %v6_16ff8 = icmp eq i32 %v4_16ff8, 0
  store i1 %v6_16ff8, i1* @cpsr_z, align 1
  br i1 %v6_16ff8, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_16fd8
  %tmp23 = sext i1 %tmp22 to i32
  %v6_16ffc = add nsw i32 %tmp23, -1
  %v7_16ffc = and i32 %v5_16ff0, %v6_16ffc
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16fd8, %bb15
  %v1_17004 = phi i32 [ %v5_16ff0, %dec_label_pc_16fd8 ], [ %v7_16ffc, %bb15 ]
  %v2_17000 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17000, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17004

dec_label_pc_17008:                               ; preds = %.thread1
  %v1_17008 = sub i32 32, %v2_16f94
  %v1_1700c = load i32, i32* @r0, align 4
  %v7_1700c = shl i32 %v1_1700c, %v1_17008
  %v8_1700c = or i32 %v7_1700c, %tmp7
  %v6_17010 = lshr i32 %v1_1700c, %v2_16f94
  %v1_17014 = load i32, i32* @r1, align 4
  %v7_17014 = shl i32 %v1_17014, %v1_17008
  %v8_17014 = or i32 %v7_17014, %v6_17010
  %v6_17018 = lshr i32 %v1_17014, %v2_16f94
  %v1_1701c = and i32 %v1_17014, -2147483648
  store i32 %v1_1701c, i32* @r1, align 4
  %v7_17020 = lshr i32 %v1_1701c, %v2_16f94
  %v8_17020 = sub i32 -1, %v7_17020
  %v9_17020 = and i32 %v6_17018, %v8_17020
  %tmp24 = icmp slt i32 %v8_17014, 0
  %v4_17024 = zext i1 %tmp24 to i32
  %v5_17024 = add i32 %v4_17024, %v9_17020
  %v3_17028 = mul i32 %v8_17014, 2
  %v4_17028 = or i32 %v8_1700c, %v3_17028
  %v5_17028 = icmp slt i32 %v4_17028, 0
  store i1 %v5_17028, i1* @cpsr_n, align 1
  %v6_17028 = icmp eq i32 %v4_17028, 0
  store i1 %v6_17028, i1* @cpsr_z, align 1
  br i1 %v6_17028, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_17008
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1702c = add nsw i32 %tmp25, -1
  %v7_1702c = and i32 %v5_17024, %v6_1702c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17008, %bb17
  %v1_17034 = phi i32 [ %v5_17024, %dec_label_pc_17008 ], [ %v7_1702c, %bb17 ]
  %v2_17030 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17030, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17034

dec_label_pc_170f4:                               ; preds = %dec_label_pc_16f78
  %v0_170f4 = load i32, i32* @r1, align 4
  %v1_170f4 = and i32 %v0_170f4, -2147483648
  %v1_170fc = or i32 %v1_170f4, 2146435072
  store i32 %v1_170fc, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_17024, { 1, 0 }
  uselistorder i32 %v5_16ff0, { 1, 0, 2 }
  uselistorder i32 %v8_16fe8, { 1, 0 }
  uselistorder i32 %v1_16fd8, { 1, 0 }
  uselistorder i32 %v5_16fc0, { 1, 0 }
  uselistorder i32 %v1_16fb4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16fa8, { 1, 0 }
  uselistorder i32 %v2_16f94, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_16f90, { 1, 0 }
  uselistorder i32 %v4_16f7c, { 1, 2, 0 }
  uselistorder i32 %v0_16f7c, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 12, 8, 13, 14, 0, 9, 2, 10, 1 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1710c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1710c:
  %v1_17110 = or i32 %arg1, 2146959360
  store i32 %v1_17110, i32* @r1, align 4
  %v1_17118 = load i32, i32* @r0, align 4
  ret i32 %v1_17118
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1711c = load i32, i32* @r4, align 4
  store i32 %v3_1711c, i32* %stack_var_-16, align 4
  %v6_1711c = load i32, i32* @r5, align 4
  %v9_1711c = load i32, i32* @r6, align 4
  %v12_1711c = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_17128 = load i32, i32* @r1, align 4
  %v4_17128 = udiv i32 %v1_17128, 1048576
  %v5_17128 = urem i32 %v4_17128, 2048
  store i32 %v5_17128, i32* @r4, align 4
  %v6_17128 = icmp eq i32 %v5_17128, 0
  br i1 %v6_17128, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1712c = udiv i32 %arg4, 1048576
  %v6_1712c = urem i32 %v5_1712c, 2048
  store i32 %v6_1712c, i32* %r5.global-to-local, align 4
  %v7_1712c = icmp eq i32 %v6_1712c, 0
  br i1 %v7_1712c, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_172b8

bb90:                                             ; preds = %bb
  %v5_17130 = icmp eq i32 %v5_17128, 2047
  br i1 %v5_17130, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1712c, %bb90 ]
  br label %dec_label_pc_172b8

bb91:                                             ; preds = %bb90
  %v5_17134 = icmp eq i32 %v6_1712c, 2047
  br i1 %v5_17134, label %dec_label_pc_172b8, label %dec_label_pc_1713c

dec_label_pc_1713c:                               ; preds = %bb91
  %v2_1713c = sub nsw i32 %v5_17128, %v6_1712c
  store i32 %v2_1713c, i32* %r4.global-to-local, align 4
  %v2_17140 = xor i32 %v1_17128, %arg4
  %v4_17144 = mul i32 %arg4, 4096
  %v5_17144 = or i32 %v4_17144, %arg3
  store i32 %v5_17144, i32* %r5.global-to-local, align 4
  %v7_17144 = icmp eq i32 %v5_17144, 0
  %v3_17148 = mul i32 %v1_17128, 4096
  store i32 %v3_17148, i32* %r1.global-to-local, align 4
  br i1 %v7_17144, label %dec_label_pc_17284, label %dec_label_pc_17150

dec_label_pc_17150:                               ; preds = %dec_label_pc_1713c
  %tmp92 = mul i32 %arg4, 256
  %v4_17158 = and i32 %tmp92, 268435200
  %v4_1715c = udiv i32 %arg3, 16777216
  %v5_17158 = or i32 %v4_1715c, %v4_17158
  %v5_1715c = or i32 %v5_17158, 268435456
  store i32 %v5_1715c, i32* %r3.global-to-local, align 4
  %v3_17160 = mul i32 %arg3, 256
  store i32 %v3_17160, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_17128, 256
  %v4_17164 = and i32 %tmp93, 268435200
  %v1_17168 = load i32, i32* @r0, align 4
  %v4_17168 = udiv i32 %v1_17168, 16777216
  %v5_17164 = or i32 %v4_17164, %v4_17168
  %v5_17168 = or i32 %v5_17164, 268435456
  store i32 %v5_17168, i32* %r5.global-to-local, align 4
  %v3_1716c = mul i32 %v1_17168, 256
  store i32 %v3_1716c, i32* %r6.global-to-local, align 4
  %v1_17170 = and i32 %v2_17140, -2147483648
  store i32 %v1_17170, i32* %r1.global-to-local, align 4
  %v3_17174 = icmp uge i32 %v5_17168, %v5_1715c
  %v9_17174 = icmp eq i32 %v5_17168, %v5_1715c
  br i1 %v9_17174, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_17150
  %v4_17178 = icmp uge i32 %v3_1716c, %v3_17160
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_17150, %bb94
  %v1_1717c = phi i1 [ %v3_17174, %dec_label_pc_17150 ], [ %v4_17178, %bb94 ]
  %v2_1717c = add nsw i32 %v2_1713c, 253
  %v3_1717c = zext i1 %v1_1717c to i32
  %v4_1717c = add nsw i32 %v2_1717c, %v3_1717c
  %v8_1717c = icmp ule i32 %v4_1717c, %v2_1713c
  %v9_1717c = icmp ugt i32 %v2_1713c, -254
  %v10_1717c = select i1 %v1_1717c, i1 %v8_1717c, i1 %v9_1717c
  %v1_17180 = add nsw i32 %v4_1717c, 768
  store i32 %v1_17180, i32* %r4.global-to-local, align 4
  br i1 %v10_1717c, label %dec_label_pc_17190, label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %bb95
  %v3_17188 = udiv i32 %v5_1715c, 2
  store i32 %v3_17188, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17190

dec_label_pc_17190:                               ; preds = %bb95, %dec_label_pc_17188
  %v0_17198 = phi i32 [ %v5_1715c, %bb95 ], [ %v3_17188, %dec_label_pc_17188 ]
  %v0_1719c = phi i32 [ %v3_17160, %bb95 ], [ 0, %dec_label_pc_17188 ]
  %v2_17190 = sub i32 %v3_1716c, %v0_1719c
  store i32 %v2_17190, i32* %r6.global-to-local, align 4
  %v3_17190 = icmp uge i32 %v3_1716c, %v0_1719c
  %v3_17194 = icmp eq i1 %v3_17190, false
  %v4_17194 = sub nsw i32 %v5_17168, %v0_17198
  %v6_17194 = sext i1 %v3_17194 to i32
  %v7_17194 = add nsw i32 %v6_17194, %v4_17194
  store i32 %v7_17194, i32* %r5.global-to-local, align 4
  %v3_17198 = udiv i32 %v0_17198, 2
  store i32 %v3_17198, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_171a8.outer

dec_label_pc_171a8.outer:                         ; preds = %dec_label_pc_17240, %dec_label_pc_17190
  %v1_17254.ph = phi i32 [ %v2_17240, %dec_label_pc_17240 ], [ %v1_17170, %dec_label_pc_17190 ]
  %v0_171ac.ph = phi i32 [ %v5_1721c, %dec_label_pc_17240 ], [ %v7_17194, %dec_label_pc_17190 ]
  %v1_171b0.ph = phi i32 [ %v3_17220, %dec_label_pc_17240 ], [ %v2_17190, %dec_label_pc_17190 ]
  %v5_1722817.ph = phi i32 [ %v5_17228, %dec_label_pc_17240 ], [ %v3_17198, %dec_label_pc_17190 ]
  %v3_1722c13.ph = phi i32 [ %v3_1722c, %dec_label_pc_17240 ], [ 0, %dec_label_pc_17190 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_17240 ], [ 1048576, %dec_label_pc_17190 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_17240 ], [ 524288, %dec_label_pc_17190 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_171a8

dec_label_pc_171a8:                               ; preds = %dec_label_pc_171a8.outer, %dec_label_pc_17218
  %v1_1720c59 = phi i32 [ %v2_17254, %dec_label_pc_17218 ], [ %storemerge133, %dec_label_pc_171a8.outer ]
  %v1_171b8 = phi i32 [ %v1_171b832, %dec_label_pc_17218 ], [ %storemerge133, %dec_label_pc_171a8.outer ]
  %v1_171d441 = phi i32 [ %v1_171d443, %dec_label_pc_17218 ], [ %storemerge133, %dec_label_pc_171a8.outer ]
  %v1_171f050 = phi i32 [ %v1_171f052, %dec_label_pc_17218 ], [ %storemerge133, %dec_label_pc_171a8.outer ]
  %v0_17230 = phi i32 [ %v3_17230, %dec_label_pc_17218 ], [ %storemerge, %dec_label_pc_171a8.outer ]
  %v0_171ac = phi i32 [ %v5_1721c, %dec_label_pc_17218 ], [ %v0_171ac.ph, %dec_label_pc_171a8.outer ]
  %v1_171b0 = phi i32 [ %v3_17220, %dec_label_pc_17218 ], [ %v1_171b0.ph, %dec_label_pc_171a8.outer ]
  %v5_1722817 = phi i32 [ %v5_17228, %dec_label_pc_17218 ], [ %v5_1722817.ph, %dec_label_pc_171a8.outer ]
  %v3_1722c13 = phi i32 [ %v3_1722c, %dec_label_pc_17218 ], [ %v3_1722c13.ph, %dec_label_pc_171a8.outer ]
  %v3_171a8 = icmp uge i32 %v1_171b0, %v3_1722c13
  %v3_171ac = icmp eq i1 %v3_171a8, false
  %v4_171ac = sub i32 %v0_171ac, %v5_1722817
  %v6_171ac = sext i1 %v3_171ac to i32
  %v7_171ac = add i32 %v6_171ac, %v4_171ac
  %v8_171ac = zext i1 %v3_171ac to i32
  %v9_171ac = sub i32 %v7_171ac, %v8_171ac
  %v10_171ac = icmp ult i32 %v0_171ac, %v9_171ac
  %v11_171ac = icmp ne i32 %v5_1722817, -1
  %v12_171ac = or i1 %v11_171ac, %v10_171ac
  %v13_171ac = icmp ult i32 %v0_171ac, %v5_1722817
  %v14_171ac = select i1 %v3_171ac, i1 %v12_171ac, i1 %v13_171ac
  br i1 %v14_171ac, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_171a8
  %v3_171b0 = sub i32 %v1_171b0, %v3_1722c13
  store i32 %v3_171b0, i32* %r6.global-to-local, align 4
  store i32 %v7_171ac, i32* %r5.global-to-local, align 4
  %v3_171b8 = or i32 %v1_171b8, %v0_17230
  store i32 %v3_171b8, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_171a8, %bb96
  %v1_1720c58 = phi i32 [ %v1_1720c59, %dec_label_pc_171a8 ], [ %v3_171b8, %bb96 ]
  %v1_171b835 = phi i32 [ %v1_171b8, %dec_label_pc_171a8 ], [ %v3_171b8, %bb96 ]
  %v1_171d4 = phi i32 [ %v1_171d441, %dec_label_pc_171a8 ], [ %v3_171b8, %bb96 ]
  %v1_171f049 = phi i32 [ %v1_171f050, %dec_label_pc_171a8 ], [ %v3_171b8, %bb96 ]
  %v0_171c8 = phi i32 [ %v0_171ac, %dec_label_pc_171a8 ], [ %v7_171ac, %bb96 ]
  %v1_171cc = phi i32 [ %v1_171b0, %dec_label_pc_171a8 ], [ %v3_171b0, %bb96 ]
  %v1_171bc = urem i32 %v5_1722817, 2
  %v2_171bc = icmp ne i32 %v1_171bc, 0
  %v3_171bc = udiv i32 %v5_1722817, 2
  %v3_171c0 = zext i1 %v2_171bc to i32
  %v6_171c0 = zext i32 %v3_1722c13 to i64
  %v7_171c0 = sub i32 33, %v3_1722c13
  %v8_171c0 = zext i32 %v7_171c0 to i64
  %v9_171c0 = shl i64 %v6_171c0, %v8_171c0
  %v10_171c0 = sub i32 32, %v3_1722c13
  %v11_171c0 = shl i32 %v3_171c0, %v10_171c0
  %v12_171c0 = zext i32 %v11_171c0 to i64
  %v14_171c0 = or i64 %v12_171c0, %v9_171c0
  %v15_171c0 = trunc i64 %v14_171c0 to i32
  %v3_171c4 = icmp uge i32 %v1_171cc, %v15_171c0
  %v3_171c8 = icmp eq i1 %v3_171c4, false
  %v4_171c8 = sub i32 %v0_171c8, %v3_171bc
  %v6_171c8 = sext i1 %v3_171c8 to i32
  %v7_171c8 = add i32 %v6_171c8, %v4_171c8
  %v13_171c8 = icmp ult i32 %v0_171c8, %v3_171bc
  %v14_171c8 = or i1 %v13_171c8, %v3_171c8
  br i1 %v14_171c8, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_171cc = sub i32 %v1_171cc, %v15_171c0
  store i32 %v3_171cc, i32* %r6.global-to-local, align 4
  store i32 %v7_171c8, i32* %r5.global-to-local, align 4
  %v5_171d4 = udiv i32 %v0_17230, 2
  %v6_171d4 = or i32 %v1_171d4, %v5_171d4
  store i32 %v6_171d4, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1720c57 = phi i32 [ %v1_1720c58, %.thread4 ], [ %v6_171d4, %bb97 ]
  %v1_171b834 = phi i32 [ %v1_171b835, %.thread4 ], [ %v6_171d4, %bb97 ]
  %v1_171d445 = phi i32 [ %v1_171d4, %.thread4 ], [ %v6_171d4, %bb97 ]
  %v1_171f0 = phi i32 [ %v1_171f049, %.thread4 ], [ %v6_171d4, %bb97 ]
  %v0_171e4 = phi i32 [ %v0_171c8, %.thread4 ], [ %v7_171c8, %bb97 ]
  %v1_171e8 = phi i32 [ %v1_171cc, %.thread4 ], [ %v3_171cc, %bb97 ]
  %v1_171d8 = urem i32 %v3_171bc, 2
  %v2_171d8 = icmp ne i32 %v1_171d8, 0
  %v3_171d8 = udiv i32 %v5_1722817, 4
  %v3_171dc = zext i1 %v2_171d8 to i32
  %v6_171dc = and i64 %v14_171c0, 4294967295
  %v7_171dc = sub i32 33, %v15_171c0
  %v8_171dc = zext i32 %v7_171dc to i64
  %v9_171dc = shl i64 %v6_171dc, %v8_171dc
  %v10_171dc = sub i32 32, %v15_171c0
  %v11_171dc = shl i32 %v3_171dc, %v10_171dc
  %v12_171dc = zext i32 %v11_171dc to i64
  %v14_171dc = or i64 %v12_171dc, %v9_171dc
  %v15_171dc = trunc i64 %v14_171dc to i32
  %v3_171e0 = icmp uge i32 %v1_171e8, %v15_171dc
  %v3_171e4 = icmp eq i1 %v3_171e0, false
  %v4_171e4 = sub i32 %v0_171e4, %v3_171d8
  %v6_171e4 = sext i1 %v3_171e4 to i32
  %v7_171e4 = add i32 %v6_171e4, %v4_171e4
  %v13_171e4 = icmp ult i32 %v0_171e4, %v3_171d8
  %v14_171e4 = or i1 %v13_171e4, %v3_171e4
  br i1 %v14_171e4, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_171e8 = sub i32 %v1_171e8, %v15_171dc
  store i32 %v3_171e8, i32* %r6.global-to-local, align 4
  store i32 %v7_171e4, i32* %r5.global-to-local, align 4
  %v5_171f0 = udiv i32 %v0_17230, 4
  %v6_171f0 = or i32 %v1_171f0, %v5_171f0
  store i32 %v6_171f0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1720c = phi i32 [ %v1_1720c57, %.thread6 ], [ %v6_171f0, %bb98 ]
  %v1_171b833 = phi i32 [ %v1_171b834, %.thread6 ], [ %v6_171f0, %bb98 ]
  %v1_171d444 = phi i32 [ %v1_171d445, %.thread6 ], [ %v6_171f0, %bb98 ]
  %v1_171f053 = phi i32 [ %v1_171f0, %.thread6 ], [ %v6_171f0, %bb98 ]
  %v0_17200 = phi i32 [ %v0_171e4, %.thread6 ], [ %v7_171e4, %bb98 ]
  %v1_17204 = phi i32 [ %v1_171e8, %.thread6 ], [ %v3_171e8, %bb98 ]
  %v1_171f4 = urem i32 %v3_171d8, 2
  %v2_171f4 = icmp ne i32 %v1_171f4, 0
  %v3_171f4 = udiv i32 %v5_1722817, 8
  %v3_171f8 = zext i1 %v2_171f4 to i32
  %v6_171f8 = and i64 %v14_171dc, 4294967295
  %v7_171f8 = sub i32 33, %v15_171dc
  %v8_171f8 = zext i32 %v7_171f8 to i64
  %v9_171f8 = shl i64 %v6_171f8, %v8_171f8
  %v10_171f8 = sub i32 32, %v15_171dc
  %v11_171f8 = shl i32 %v3_171f8, %v10_171f8
  %v12_171f8 = zext i32 %v11_171f8 to i64
  %v14_171f8 = or i64 %v12_171f8, %v9_171f8
  %v15_171f8 = trunc i64 %v14_171f8 to i32
  %v3_171fc = icmp uge i32 %v1_17204, %v15_171f8
  %v3_17200 = icmp eq i1 %v3_171fc, false
  %v4_17200 = sub i32 %v0_17200, %v3_171f4
  %v6_17200 = sext i1 %v3_17200 to i32
  %v7_17200 = add i32 %v6_17200, %v4_17200
  %v13_17200 = icmp ult i32 %v0_17200, %v3_171f4
  %v14_17200 = or i1 %v13_17200, %v3_17200
  br i1 %v14_17200, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_17204 = sub i32 %v1_17204, %v15_171f8
  store i32 %v3_17204, i32* %r6.global-to-local, align 4
  store i32 %v7_17200, i32* %r5.global-to-local, align 4
  %v5_1720c = udiv i32 %v0_17230, 8
  %v6_1720c = or i32 %v1_1720c, %v5_1720c
  store i32 %v6_1720c, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1721c = phi i32 [ %v1_17204, %.thread8 ], [ %v3_17204, %bb100 ]
  %v0_17218 = phi i32 [ %v0_17200, %.thread8 ], [ %v7_17200, %bb100 ]
  %v2_17254 = phi i32 [ %v1_1720c, %.thread8 ], [ %v6_1720c, %bb100 ]
  %v1_171b832 = phi i32 [ %v1_171b833, %.thread8 ], [ %v6_1720c, %bb100 ]
  %v1_171d443 = phi i32 [ %v1_171d444, %.thread8 ], [ %v6_1720c, %bb100 ]
  %v1_171f052 = phi i32 [ %v1_171f053, %.thread8 ], [ %v6_1720c, %bb100 ]
  %v2_17210 = or i32 %v0_17218, %v1_1721c
  %v4_17210 = icmp eq i32 %v2_17210, 0
  br i1 %v4_17210, label %dec_label_pc_17250, label %dec_label_pc_17218

dec_label_pc_17218:                               ; preds = %.thread10
  %v3_17218 = mul i32 %v0_17218, 16
  %v4_1721c = udiv i32 %v1_1721c, 268435456
  %v5_1721c = or i32 %v3_17218, %v4_1721c
  store i32 %v5_1721c, i32* %r5.global-to-local, align 4
  %v3_17220 = mul i32 %v1_1721c, 16
  store i32 %v3_17220, i32* %r6.global-to-local, align 4
  %v3_17224 = mul nuw i32 %v3_171f4, 8
  %v4_17228 = udiv i32 %v15_171f8, 536870912
  %v5_17228 = or i32 %v4_17228, %v3_17224
  %v3_1722c = mul i32 %v15_171f8, 8
  %v3_17230 = udiv i32 %v0_17230, 16
  store i32 %v3_17230, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17230, 16
  br i1 %tmp, label %dec_label_pc_17238, label %dec_label_pc_171a8

dec_label_pc_17238:                               ; preds = %dec_label_pc_17218
  %v1_17238 = and i32 %v1_17254.ph, 1048576
  %v2_17238 = icmp eq i32 %v1_17238, 0
  br i1 %v2_17238, label %dec_label_pc_17240, label %.thread11.loopexit

dec_label_pc_17240:                               ; preds = %dec_label_pc_17238
  %v2_17240 = or i32 %v2_17254, %v1_17254.ph
  store i32 %v2_17240, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_171a8.outer

dec_label_pc_17250:                               ; preds = %.thread10
  store i32 %v15_171f8, i32* %r2.global-to-local, align 4
  store i32 %v3_171f4, i32* %r3.global-to-local, align 4
  %v1_17250 = and i32 %v1_17254.ph, 1048576
  %v2_17250 = icmp eq i32 %v1_17250, 0
  br i1 %v2_17250, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_17250
  %v3_17254 = or i32 %v2_17254, %v1_17254.ph
  store i32 %v3_17254, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_17238
  store i32 %v3_1722c, i32* %r2.global-to-local, align 4
  store i32 %v5_17228, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_17250, %bb101
  %v1_1725c = add nsw i32 %v4_1717c, 515
  store i32 %v1_1725c, i32* %ip.global-to-local, align 4
  %v2_1725c = icmp ugt i32 %v1_17180, 252
  %v7_1725c = icmp eq i32 %v1_17180, 253
  %v2_17260 = xor i1 %v7_1725c, true
  %v3_17260 = and i1 %v2_1725c, %v2_17260
  br i1 %v3_17260, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_17260 = icmp ugt i32 %v1_1725c, 1791
  %v11_17260 = icmp eq i32 %v1_1725c, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_17264 = phi i1 [ %v7_1725c, %.thread11 ], [ %v11_17260, %bb102 ]
  %v0_17264 = phi i1 [ %v2_1725c, %.thread11 ], [ %v6_17260, %bb102 ]
  %v2_17264 = xor i1 %v1_17264, true
  %v3_17264 = and i1 %v0_17264, %v2_17264
  call void @__pseudo_cond_branch(i1 %v3_17264, i32 ptrtoint (i32* @global_var_16f78.125 to i32))
  %v0_17268 = load i32, i32* %r5.global-to-local, align 4
  %v1_17268 = load i32, i32* %r3.global-to-local, align 4
  %v2_17268 = sub i32 %v0_17268, %v1_17268
  store i32 %v2_17268, i32* %ip.global-to-local, align 4
  %v3_17268 = icmp uge i32 %v0_17268, %v1_17268
  %v9_17268 = icmp eq i32 %v0_17268, %v1_17268
  br i1 %v9_17268, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1726c = load i32, i32* %r6.global-to-local, align 4
  %v2_1726c = load i32, i32* %r2.global-to-local, align 4
  %v3_1726c = sub i32 %v1_1726c, %v2_1726c
  store i32 %v3_1726c, i32* %ip.global-to-local, align 4
  %v4_1726c = icmp uge i32 %v1_1726c, %v2_1726c
  %v10_1726c = icmp eq i32 %v1_1726c, %v2_1726c
  br i1 %v10_1726c, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_17270 = load i32, i32* %r0.global-to-local, align 4
  %v2_17270 = urem i32 %v1_17270, 2
  %v3_17270 = icmp ne i32 %v2_17270, 0
  %v4_17270 = udiv i32 %v1_17270, 2
  store i32 %v4_17270, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_17274 = phi i1 [ %v3_17268, %bb103 ], [ %v4_1726c, %bb104 ], [ %v3_17270, %bb105 ]
  %v0_17274 = load i32, i32* %r0.global-to-local, align 4
  %v2_17274 = zext i1 %v1_17274 to i32
  %v3_17274 = add i32 %v2_17274, %v0_17274
  store i32 %v3_17274, i32* %r0.global-to-local, align 4
  %v0_17278 = load i32, i32* %r1.global-to-local, align 4
  %v1_17278 = load i32, i32* %r4.global-to-local, align 4
  %v2_17278 = and i32 %v1_17278, 4096
  %v3_17278 = icmp ne i32 %v2_17278, 0
  %v4_17278 = mul i32 %v1_17278, 1048576
  %v6_17278 = add i32 %v4_17278, %v0_17278
  %v7_17278 = zext i1 %v3_17278 to i32
  %v8_17278 = add i32 %v7_17278, %v6_17278
  store i32 %v8_17278, i32* %r1.global-to-local, align 4
  %v2_1727c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1727c, i32* %r4.global-to-local, align 4
  store i32 %v6_1711c, i32* %r5.global-to-local, align 4
  store i32 %v9_1711c, i32* %r6.global-to-local, align 4
  ret i32 %v3_17274

dec_label_pc_17284:                               ; preds = %dec_label_pc_1713c
  %v1_17284 = and i32 %v2_17140, -2147483648
  %v4_17288 = urem i32 %v1_17128, 1048576
  %v5_17288 = or i32 %v1_17284, %v4_17288
  store i32 %v5_17288, i32* %r1.global-to-local, align 4
  %v6_1728c = add nsw i32 %v2_1713c, 1023
  store i32 %v6_1728c, i32* %r4.global-to-local, align 4
  %v8_1728c = sub nsw i32 0, %v2_1713c
  %v9_1728c = and i32 %v6_1728c, %v8_1728c
  %v11_1728c = icmp slt i32 %v2_1713c, -1023
  %v12_1728c = icmp eq i32 %v6_1728c, 0
  %v7_17290 = icmp sgt i32 %v2_1713c, -1023
  br i1 %v7_17290, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_17284
  %v10_17290 = sub nsw i32 1024, %v2_1713c
  store i32 %v10_17290, i32* %r5.global-to-local, align 4
  %v14_17290 = and i32 %v10_17290, %v6_1728c
  %v16_17290 = icmp slt i32 %v10_17290, 0
  %v17_17290 = icmp eq i32 %v6_1728c, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_17284, %bb106
  %v3_1729c.in = phi i32 [ %v9_1728c, %dec_label_pc_17284 ], [ %v14_17290, %bb106 ]
  %v2_1729c = phi i1 [ %v11_1728c, %dec_label_pc_17284 ], [ %v16_17290, %bb106 ]
  %v1_1729c = phi i1 [ %v12_1728c, %dec_label_pc_17284 ], [ %v17_17290, %bb106 ]
  %v3_1729c = icmp slt i32 %v3_1729c.in, 0
  %v3_17294 = xor i1 %v3_1729c, %v2_1729c
  %v4_17294 = or i1 %v1_1729c, %v3_17294
  br i1 %v4_17294, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1729484 = mul i32 %v6_1728c, 1048576
  %v10_1729485 = or i32 %v9_1729484, %v5_17288
  store i32 %v10_1729485, i32* %r1.global-to-local, align 4
  store i32 %v3_1711c, i32* %r4.global-to-local, align 4
  store i32 %v6_1711c, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1729c = phi i32 [ %v12_1711c, %bb108 ], [ %v1_17284, %bb107 ]
  %v6_1729c = xor i1 %v4_17294, true
  call void @__pseudo_cond_branch(i1 %v6_1729c, i32 %v0_1729c)
  %v0_172a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_172a0 = or i32 %v0_172a0, 1048576
  store i32 %v1_172a0, i32* @r1, align 4
  %v0_172a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_172a8 = add i32 %v0_172a8, -1
  store i32 %v1_172a8, i32* @r4, align 4
  %v3_172a8 = sub i32 0, %v0_172a8
  %v4_172a8 = and i32 %v0_172a8, %v3_172a8
  %v5_172a8 = icmp slt i32 %v4_172a8, 0
  store i1 %v5_172a8, i1* @cpsr_v, align 1
  %v6_172a8 = icmp slt i32 %v1_172a8, 0
  store i1 %v6_172a8, i1* @cpsr_n, align 1
  %v7_172a8 = icmp eq i32 %v0_172a8, 1
  store i1 %v7_172a8, i1* @cpsr_z, align 1
  %v0_172ac = call i32 @function_16f78()
  store i32 %v0_172ac, i32* @r0, align 4
  %v0_172b4 = call i32 @function_16f78()
  store i32 %v0_172b4, i32* @r0, align 4
  %v0_172b8.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_172bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_172b8

dec_label_pc_172b8:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_172b8.pre-phi = phi i32 [ %v5_1712c, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1712c, %bb91 ], [ %v5_1712c, %.thread ]
  %v0_172bc = phi i32 [ %v5_17128, %.thread1 ], [ %v5_17128, %.thread2 ], [ %v5_17128, %bb91 ], [ %v0_172bc.pre, %.thread ]
  %v2_172c0 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_172b8.pre, %.thread ]
  %v5_172b8 = and i32 %v2_172c0, %v4_172b8.pre-phi
  store i32 %v5_172b8, i32* @r5, align 4
  %v4_172bc = icmp eq i32 %v2_172c0, %v0_172bc
  br i1 %v4_172bc, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_172b8
  %v5_172c0 = icmp eq i32 %v5_172b8, %v2_172c0
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_172b8, %bb109
  %v0_172c4 = phi i1 [ false, %dec_label_pc_172b8 ], [ %v5_172c0, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_172c4, i32 ptrtoint (i32* @global_var_1710c.583 to i32))
  %v0_172c8 = load i32, i32* @r4, align 4
  %v1_172c8 = load i32, i32* %ip.global-to-local, align 4
  %v4_172c8 = icmp eq i32 %v1_172c8, %v0_172c8
  br i1 %v4_172c8, label %dec_label_pc_172d0, label %dec_label_pc_172ec

dec_label_pc_172d0:                               ; preds = %bb110
  %v0_172d0 = load i32, i32* @r0, align 4
  %v1_172d0 = load i32, i32* @r1, align 4
  %v4_172d0 = mul i32 %v1_172d0, 4096
  %v5_172d0 = or i32 %v4_172d0, %v0_172d0
  store i32 %v5_172d0, i32* %r4.global-to-local, align 4
  %v1_172d4 = icmp ne i32 %v5_172d0, 0
  call void @__pseudo_cond_branch(i1 %v1_172d4, i32 ptrtoint (i32* @global_var_1710c.583 to i32))
  %v0_172d8 = load i32, i32* @r5, align 4
  %v1_172d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_172dc = icmp ne i32 %v1_172d8, %v0_172d8
  call void @__pseudo_cond_branch(i1 %v1_172dc, i32 ptrtoint (i32* @global_var_170f0.584 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_172e8 = call i32 @function_1710c(i32 %arg3, i32 %arg4)
  store i32 %v2_172e8, i32* @r0, align 4
  %v1_172ec.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172ec:                               ; preds = %bb110, %dec_label_pc_172d0
  %v1_172ec = phi i32 [ %v1_172c8, %bb110 ], [ %v1_172ec.pre, %dec_label_pc_172d0 ]
  %v0_172ec = load i32, i32* @r5, align 4
  %v4_172ec = icmp eq i32 %v0_172ec, %v1_172ec
  br i1 %v4_172ec, label %dec_label_pc_172f4, label %dec_label_pc_172ec.dec_label_pc_17308_crit_edge

dec_label_pc_172ec.dec_label_pc_17308_crit_edge:  ; preds = %dec_label_pc_172ec
  %v0_17308.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_17308

dec_label_pc_172f4:                               ; preds = %dec_label_pc_172ec
  %v4_172f4 = mul i32 %arg4, 4096
  %v5_172f4 = or i32 %v4_172f4, %arg3
  store i32 %v5_172f4, i32* %r5.global-to-local, align 4
  %v7_172f4 = icmp eq i32 %v5_172f4, 0
  call void @__pseudo_cond_branch(i1 %v7_172f4, i32 ptrtoint (i32* @global_var_170a0.585 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_17304 = call i32 @function_1710c(i32 %arg3, i32 %arg4)
  store i32 %v2_17304, i32* @r0, align 4
  br label %dec_label_pc_17308

dec_label_pc_17308:                               ; preds = %dec_label_pc_172ec.dec_label_pc_17308_crit_edge, %dec_label_pc_172f4
  %v0_17308 = phi i32 [ %v0_17308.pre, %dec_label_pc_172ec.dec_label_pc_17308_crit_edge ], [ %v2_17304, %dec_label_pc_172f4 ]
  %v1_17308 = load i32, i32* @r1, align 4
  %v3_17308 = mul i32 %v1_17308, 2
  %v4_17308 = or i32 %v3_17308, %v0_17308
  store i32 %v4_17308, i32* %r6.global-to-local, align 4
  %v6_17308 = icmp eq i32 %v4_17308, 0
  br i1 %v6_17308, label %dec_label_pc_17308._crit_edge, label %bb111

dec_label_pc_17308._crit_edge:                    ; preds = %dec_label_pc_17308
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_17308
  %v4_1730c = mul i32 %arg4, 2
  %v5_1730c = or i32 %v4_1730c, %arg3
  store i32 %v5_1730c, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1730c, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_17308._crit_edge, %bb111
  %v4_1731c.pre-phi = phi i32 [ %.pre80, %dec_label_pc_17308._crit_edge ], [ %v5_1730c, %bb111 ]
  %v0_17310 = phi i1 [ false, %dec_label_pc_17308._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_17310, i32 ptrtoint (i32* @global_var_17038.586 to i32))
  %v0_17314 = load i32, i32* @r0, align 4
  %v1_17314 = load i32, i32* @r1, align 4
  %v3_17314 = mul i32 %v1_17314, 2
  %v4_17314 = or i32 %v3_17314, %v0_17314
  store i32 %v4_17314, i32* %r4.global-to-local, align 4
  %v1_17318 = icmp ne i32 %v4_17314, 0
  call void @__pseudo_cond_branch(i1 %v1_17318, i32 ptrtoint (i32* @global_var_170f0.584 to i32))
  store i32 %v4_1731c.pre-phi, i32* %r5.global-to-local, align 4
  %v1_17320 = icmp ne i32 %v4_1731c.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_17320, i32 ptrtoint (i32* @global_var_170a0.585 to i32))
  %v0_17324 = load i32, i32* @r0, align 4
  %v1_17324 = load i32, i32* @r1, align 4
  %v2_17324 = call i32 @function_1710c(i32 %v0_17324, i32 %v1_17324)
  store i32 %v2_17324, i32* %r0.global-to-local, align 4
  ret i32 %v2_17324

; uselistorder directives
  uselistorder i32 %v5_1730c, { 1, 0, 2 }
  uselistorder i32 %v1_172c8, { 1, 0 }
  uselistorder i32 %v1_172a8, { 1, 0 }
  uselistorder i32 %v0_172a8, { 3, 1, 0, 2 }
  uselistorder i32 %v10_17290, { 2, 0, 1 }
  uselistorder i32 %v6_1728c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_17284, { 1, 0 }
  uselistorder i32 %v2_1726c, { 1, 0, 2 }
  uselistorder i32 %v1_1726c, { 1, 0, 2 }
  uselistorder i32 %v1_17268, { 1, 0, 2 }
  uselistorder i32 %v0_17268, { 1, 0, 2 }
  uselistorder i1 %v7_1725c, { 1, 0 }
  uselistorder i32 %v2_17240, { 1, 0 }
  uselistorder i32 %v3_1722c, { 2, 1, 0 }
  uselistorder i32 %v3_17220, { 0, 2, 1 }
  uselistorder i32 %v5_1721c, { 2, 0, 1 }
  uselistorder i32 %v6_1720c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_171f8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_171f4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_17200, { 0, 2, 1 }
  uselistorder i32 %v1_1720c, { 1, 0 }
  uselistorder i32 %v6_171f0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_171dc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_171d8, { 0, 2, 1 }
  uselistorder i32 %v0_171e4, { 0, 2, 1 }
  uselistorder i32 %v1_171f0, { 1, 0 }
  uselistorder i32 %v6_171d4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_171c0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_171c8, { 0, 2, 1 }
  uselistorder i32 %v1_171d4, { 1, 0 }
  uselistorder i32 %v3_171b8, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_171ac, { 1, 2, 0 }
  uselistorder i32 %v3_1722c13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1722817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_171ac, { 0, 3, 2, 1 }
  uselistorder i32 %v1_171b8, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_17254.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_17198, { 1, 0 }
  uselistorder i32 %v0_1719c, { 1, 0 }
  uselistorder i32 %v3_17188, { 1, 0 }
  uselistorder i1 %v1_1717c, { 1, 0 }
  uselistorder i32 %v3_1716c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_17168, { 3, 2, 1, 0 }
  uselistorder i32 %v3_17160, { 2, 1, 0 }
  uselistorder i32 %v5_1715c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1713c, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1712c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1712c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_17128, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_17128, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1711c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 9, 10, 2, 3, 6, 4, 5, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 9, 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %ip.global-to-local, { 8, 5, 6, 7, 0, 1, 2, 3, 4, 10, 9 }
  uselistorder i32 (i32, i32)* @function_1710c, { 2, 1, 0 }
  uselistorder i32 ()* @function_16f78, { 1, 0 }
  uselistorder i32 1024, { 3, 0, 5, 6, 4, 7, 2, 8, 9, 10, 1 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 33, { 2, 3, 4, 1, 5, 6, 7, 0 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 1048576, { 21, 0, 1, 2, 22, 23, 14, 3, 4, 5, 24, 6, 7, 25, 26, 17, 18, 8, 9, 27, 28, 29, 20, 30, 10, 15, 11, 19, 12, 31, 13, 16, 32 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 7, 6, 4, 9, 8, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_17308, { 1, 0 }
  uselistorder label %dec_label_pc_172ec, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_172b8, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_171a8, { 1, 0 }
  uselistorder label %dec_label_pc_17190, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1732c = call i32 @function_1733c()
  ret i32 %v0_1732c
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_17334 = call i32 @function_1733c()
  ret i32 %v0_17334

; uselistorder directives
  uselistorder i32 ()* @function_1733c, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_17338 = load i32, i32* @r0, align 4
  ret i32 %v0_17338
}

define i32 @function_1733c() local_unnamed_addr {
dec_label_pc_1733c:
  %v0_1733c = load i32, i32* @ip, align 4
  %v0_17340 = load i32, i32* @r1, align 4
  %v2_17340 = mul i32 %v0_17340, 2
  %v2_17340.off = add i32 %v2_17340, 4194303
  %tmp = icmp ult i32 %v2_17340.off, 2097152
  %v0_17348 = load i32, i32* @r3, align 4
  %v2_17348 = mul i32 %v0_17348, 2
  br i1 %tmp, label %dec_label_pc_17398, label %bb

bb:                                               ; preds = %dec_label_pc_1733c
  %v2_17348.off = add i32 %v2_17348, 4194303
  %tmp21 = icmp ult i32 %v2_17348.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1738c, label %dec_label_pc_17354

dec_label_pc_17354:                               ; preds = %dec_label_pc_173a0, %dec_label_pc_173ac, %bb
  %v0_17354 = load i32, i32* @r0, align 4
  %v4_17354 = or i32 %v0_17354, %v2_17340
  %v6_17354 = icmp eq i32 %v4_17354, 0
  br i1 %v6_17354, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_17354
  %v1_17358 = load i32, i32* @r2, align 4
  %v5_17358 = or i32 %v1_17358, %v2_17348
  %v7_17358 = icmp eq i32 %v5_17358, 0
  br i1 %v7_17358, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_17354, %bb10
  %v5_1735c = icmp eq i32 %v0_17348, %v0_17340
  br i1 %v5_1735c, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_17360.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_17360 = phi i32 [ %v2_17360.pre, %.thread..thread1_crit_edge ], [ %v1_17358, %bb10 ]
  %v5_17360 = icmp eq i32 %v2_17360, %v0_17354
  br i1 %v5_17360, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_17368 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_17368 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17368, i32 %v0_17368)
  %v0_1736c = load i32, i32* @r0, align 4
  %v0_17370 = load i32, i32* @r1, align 4
  %v1_17370 = load i32, i32* @r3, align 4
  %v2_17370 = xor i32 %v1_17370, %v0_17370
  %v3_17370 = icmp slt i32 %v2_17370, 0
  br i1 %v3_17370, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_17374 = icmp eq i32 %v0_17370, %v1_17370
  br i1 %v10_17374, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_17378 = load i32, i32* @r2, align 4
  %v4_17378 = icmp ult i32 %v0_1736c, %v2_17378
  br i1 %v4_17378, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_17374 = icmp ult i32 %v0_17370, %v1_17370
  br i1 %v4_17374, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_17370, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1737c = and i32 %v1_17370, 1073741824
  %v3_1737c = icmp eq i32 %v2_1737c, 0
  %v4_1737c = ashr i32 %v1_17370, 31
  br i1 %v3_1737c, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_17380.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1737c, %bb15 ]
  %v5_17380 = sub nsw i32 -1, %v4_17380.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_17384 = phi i32 [ %v4_1737c, %bb15 ], [ %v5_17380, %.thread3 ]
  %v1_17384 = or i32 %v0_17384, 1
  ret i32 %v1_17384

dec_label_pc_1738c:                               ; preds = %bb
  br label %dec_label_pc_173a0

dec_label_pc_17398:                               ; preds = %dec_label_pc_1733c
  %v0_17398 = load i32, i32* @r0, align 4
  %v4_17398 = mul i32 %v0_17340, 4096
  %v5_17398 = or i32 %v0_17398, %v4_17398
  %v7_17398 = icmp eq i32 %v5_17398, 0
  br i1 %v7_17398, label %dec_label_pc_17398.dec_label_pc_173a0_crit_edge, label %dec_label_pc_173b4

dec_label_pc_17398.dec_label_pc_173a0_crit_edge:  ; preds = %dec_label_pc_17398
  %v2_17348.off20 = add i32 %v2_17348, 4194303
  %tmp22 = icmp ult i32 %v2_17348.off20, 2097152
  br label %dec_label_pc_173a0

dec_label_pc_173a0:                               ; preds = %dec_label_pc_17398.dec_label_pc_173a0_crit_edge, %dec_label_pc_1738c
  %v3_173a4.pre-phi = phi i1 [ %tmp22, %dec_label_pc_17398.dec_label_pc_173a0_crit_edge ], [ true, %dec_label_pc_1738c ]
  br i1 %v3_173a4.pre-phi, label %dec_label_pc_173ac, label %dec_label_pc_17354

dec_label_pc_173ac:                               ; preds = %dec_label_pc_173a0
  %v0_173ac = load i32, i32* @r2, align 4
  %v4_173ac = mul i32 %v0_17348, 4096
  %v5_173ac = or i32 %v0_173ac, %v4_173ac
  %v7_173ac = icmp eq i32 %v5_173ac, 0
  br i1 %v7_173ac, label %dec_label_pc_17354, label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17398, %dec_label_pc_173ac
  ret i32 %v0_1733c

; uselistorder directives
  uselistorder i32 %v4_1737c, { 1, 0 }
  uselistorder i32 %v1_17370, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_17370, { 2, 1, 0 }
  uselistorder i32 %v1_17358, { 1, 0 }
  uselistorder i32 %v2_17348, { 0, 2, 1 }
  uselistorder i32 %v0_17348, { 1, 0, 2 }
  uselistorder i32 %v2_17340, { 1, 0 }
  uselistorder i32 %v0_17340, { 1, 0, 2 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 19, 11, 1, 12, 13, 14, 15, 16, 17, 7, 8, 0, 18 }
  uselistorder label %dec_label_pc_173b4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17354, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_173bc = load i32, i32* @r0, align 4
  %v0_173c0 = load i32, i32* @r2, align 4
  store i32 %v0_173c0, i32* @r0, align 4
  store i32 %v0_173bc, i32* @r2, align 4
  %v0_173d4 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_173d4
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_173d8 = load i32, i32* @r0, align 4
  %v1_173dc = sext i32 %v3_173d8 to i64
  %v2_173dc = bitcast i64 %v1_173dc to double
  %v3_173dc = load i32, i32* @r2, align 4
  %v4_173dc = sext i32 %v3_173dc to i64
  %v5_173dc = bitcast i64 %v4_173dc to double
  %v7_173dc = fcmp oeq double %v2_173dc, %v5_173dc
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_173dc = fcmp ule double %v2_173dc, %v5_173dc
  %not.v7_173dc = xor i1 %v7_173dc, true
  %v1_173e0 = and i1 %not.v6_173dc, %not.v7_173dc
  store i1 %v7_173dc, i1* @cpsr_z, align 1
  br i1 %v1_173e0, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_173dc, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_173d8

; uselistorder directives
  uselistorder i1 %v7_173dc, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_173f4 = call i32 @__aeabi_cdcmple()
  %v0_173f8 = load i1, i1* @cpsr_z, align 1
  %.v0_173f4. = zext i1 %v0_173f8 to i32
  ret i32 %.v0_173f4.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1740c = call i32 @__aeabi_cdcmple()
  %v0_17410 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17410 to i32
  %.v0_1740c. = xor i32 %tmp2, 1
  ret i32 %.v0_1740c.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_17424 = call i32 @__aeabi_cdcmple()
  %v0_17428 = load i1, i1* @cpsr_z, align 1
  %v1_17428 = load i1, i1* @cpsr_c, align 1
  %v2_17428 = xor i1 %v1_17428, true
  %v3_17428 = or i1 %v0_17428, %v2_17428
  %.v0_17424 = select i1 %v3_17428, i32 1, i32 %v0_17424
  %v2_1742c = xor i1 %v0_17428, true
  %v3_1742c = and i1 %v1_17428, %v2_1742c
  %..v0_17424 = select i1 %v3_1742c, i32 0, i32 %.v0_17424
  ret i32 %..v0_17424

; uselistorder directives
  uselistorder i1 %v1_17428, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_17438 = load i32, i32* @lr, align 4
  store i32 %v0_17438, i32* %stack_var_-8, align 4
  %v0_1743c = call i32 @__aeabi_cdrcmple()
  %v0_17440 = load i1, i1* @cpsr_z, align 1
  %v1_17440 = load i1, i1* @cpsr_c, align 1
  %v2_17440 = xor i1 %v1_17440, true
  %v3_17440 = or i1 %v0_17440, %v2_17440
  %.v0_1743c = select i1 %v3_17440, i32 1, i32 %v0_1743c
  %v2_17444 = xor i1 %v0_17440, true
  %v3_17444 = and i1 %v1_17440, %v2_17444
  %..v0_1743c = select i1 %v3_17444, i32 0, i32 %.v0_1743c
  %v2_17448 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17448, i32* @lr, align 4
  ret i32 %..v0_1743c

; uselistorder directives
  uselistorder i1 %v1_17440, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_17454 = call i32 @__aeabi_cdrcmple()
  %v0_17458 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17458 to i32
  %.v0_17454. = xor i32 %tmp2, 1
  ret i32 %.v0_17454.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 0, 3, 1, 4, 5, 6, 2, 7, 8, 9 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_17468 = icmp slt i32 %arg2, 0
  %v2_17468 = mul i32 %arg2, 2
  br i1 %v1_17468, label %dec_label_pc_1749c, label %dec_label_pc_17470

dec_label_pc_17470:                               ; preds = %entry
  %v1_17470 = add i32 %v2_17468, 2097152
  %v2_17470 = icmp ugt i32 %v2_17468, -2097153
  br i1 %v2_17470, label %dec_label_pc_174a4, label %dec_label_pc_17478

dec_label_pc_17478:                               ; preds = %dec_label_pc_17470
  %v6_17470 = icmp slt i32 %v1_17470, 0
  br i1 %v6_17470, label %dec_label_pc_1747c, label %dec_label_pc_1749c

dec_label_pc_1747c:                               ; preds = %dec_label_pc_17478
  %v4_17480 = sdiv i32 %v1_17470, 2097152
  %v5_17480 = sub nsw i32 -993, %v4_17480
  %v11_17480 = icmp slt i32 %v5_17480, 0
  br i1 %v11_17480, label %dec_label_pc_174ac, label %dec_label_pc_17488

dec_label_pc_17488:                               ; preds = %dec_label_pc_1747c
  %v3_17488 = mul i32 %arg2, 2048
  %v4_17490 = udiv i32 %arg1, 2097152
  %v1_1748c = or i32 %v4_17490, %v3_17488
  %v5_17490 = or i32 %v1_1748c, -2147483648
  %v6_17494 = lshr i32 %v5_17490, %v5_17480
  ret i32 %v6_17494

dec_label_pc_1749c:                               ; preds = %dec_label_pc_17478, %entry
  ret i32 0

dec_label_pc_174a4:                               ; preds = %dec_label_pc_17470
  %v4_174a4 = mul i32 %arg2, 4096
  %v5_174a4 = or i32 %v4_174a4, %arg1
  %v7_174a4 = icmp eq i32 %v5_174a4, 0
  br i1 %v7_174a4, label %dec_label_pc_174ac, label %dec_label_pc_174b4

dec_label_pc_174ac:                               ; preds = %dec_label_pc_174a4, %dec_label_pc_1747c
  ret i32 -1

dec_label_pc_174b4:                               ; preds = %dec_label_pc_174a4
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_174bc = icmp eq i32 %regclass, 0
  br i1 %v2_174bc, label %dec_label_pc_174c4, label %dec_label_pc_174f4

dec_label_pc_174c4:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_174c4
  %v6_174c8 = icmp eq i32 %representation, 0
  br i1 %v6_174c8, label %dec_label_pc_174d8, label %bb8

.thread3:                                         ; preds = %dec_label_pc_174c4
  br label %dec_label_pc_17500

bb8:                                              ; preds = %bb
  br label %dec_label_pc_17500

dec_label_pc_174d8:                               ; preds = %bb
  %v3_174d8 = mul i32 %regno, 4
  %v2_174dc = add i32 %v3_174d8, %context
  %v1_174e0 = add i32 %v2_174dc, 4
  %v2_174e0 = inttoptr i32 %v1_174e0 to i32*
  %v3_174e0 = load i32, i32* %v2_174e0, align 4
  %v2_174ec = bitcast i8* %valuep to i32*
  store i32 %v3_174e0, i32* %v2_174ec, align 4
  ret i32 0

dec_label_pc_174f4:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_174f4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_174f4, %bb9
  %v0_174fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_174fc)
  br label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_17500, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_17508 = icmp eq i32 %regclass, 0
  br i1 %v2_17508, label %dec_label_pc_17510, label %dec_label_pc_17540

dec_label_pc_17510:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17510
  %v6_17514 = icmp eq i32 %representation, 0
  br i1 %v6_17514, label %dec_label_pc_17524, label %bb8

.thread3:                                         ; preds = %dec_label_pc_17510
  br label %dec_label_pc_1754c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1754c

dec_label_pc_17524:                               ; preds = %bb
  %v3_17528 = mul i32 %regno, 4
  %v1_1752c = bitcast i8* %valuep to i32*
  %v2_1752c = load i32, i32* %v1_1752c, align 4
  %v2_17530 = add i32 %v3_17528, %context
  %v2_17538 = add i32 %v2_17530, 4
  %v3_17538 = inttoptr i32 %v2_17538 to i32*
  store i32 %v2_1752c, i32* %v3_17538, align 4
  ret i32 0

dec_label_pc_17540:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_17540
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17540, %bb9
  %v0_17548 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_17548)
  br label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_1754c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_17554 = add i32 %context, 68
  %v2_17554 = inttoptr i32 %v1_17554 to i32*
  %v3_17554 = load i32, i32* %v2_17554, align 4
  ret i32 %v3_17554

; uselistorder directives
  uselistorder i32 68, { 32, 0, 30, 1, 2, 3, 4, 31, 6, 10, 7, 11, 8, 12, 9, 13, 21, 22, 20, 23, 24, 25, 26, 27, 28, 15, 16, 17, 18, 14, 19, 5, 29 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_17564 = add i32 %exc, 8
  %v2_17564 = inttoptr i32 %v1_17564 to i32*
  %v3_17564 = load i32, i32* %v2_17564, align 4
  %v2_17568 = icmp eq i32 %v3_17564, 0
  br i1 %v2_17568, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_1757c = xor i1 %v2_17568, true
  call void @__pseudo_cond_branch(i1 %v2_1757c, i32 %v3_17564)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_17594 = call i32 @abort()
  ret i32 %v0_17594
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_175a0 = call i32 @abort()
  ret i32 %v0_175a0
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_175a4 = load i32, i32* @r4, align 4
  store i32 %v3_175a4, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r5.global-to-local, align 4
  %v4_175b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 140) to i32*), align 4
  %v2_175b8 = icmp eq i32 %v4_175b4, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_175c4 = add i32 %return_address, -2
  store i32 %v1_175c4, i32* %r4.global-to-local, align 4
  br i1 %v2_175b8, label %dec_label_pc_175fc, label %dec_label_pc_175cc

dec_label_pc_175cc:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_175b4)
  %v2_175dc = icmp eq i32 %v1_175c4, 0
  br i1 %v2_175dc, label %.thread, label %dec_label_pc_1761cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_175cc
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_175e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_175e4 = add i32 %v2_175e4, 16
  %v4_175e4 = inttoptr i32 %v3_175e4 to i32*
  store i32 0, i32* %v4_175e4, align 4
  br label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %.thread, %.thread10, %dec_label_pc_17794, %dec_label_pc_17780, %dec_label_pc_1775c, %dec_label_pc_17734, %dec_label_pc_17634
  %v0_175ec = load i32, i32* %r2.global-to-local, align 4
  %v2_175f4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_175f4, i32* @r4, align 4
  ret i32 %v0_175ec

dec_label_pc_175fc:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_17604 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 20) to i32*), align 4
  %v4_17608 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 52) to i32*), align 4
  store i32 %v4_17608, i32* %r2.global-to-local, align 4
  %v2_1760c = sub i32 %v4_17604, %v4_17608
  %v3_17610 = sdiv i32 %v2_1760c, 8
  store i32 %v3_17610, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1761c

dec_label_pc_1761cthread-pre-split:               ; preds = %dec_label_pc_175cc
  %v3_1761c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1761c

dec_label_pc_1761c:                               ; preds = %dec_label_pc_1761cthread-pre-split, %dec_label_pc_175fc
  %v0_17660.pre = phi i32 [ %v1_175c4, %dec_label_pc_1761cthread-pre-split ], [ %v4_17608, %dec_label_pc_175fc ]
  %v1_17624 = phi i32 [ %v3_1761c.pr, %dec_label_pc_1761cthread-pre-split ], [ %v3_17610, %dec_label_pc_175fc ]
  %v2_17620 = icmp eq i32 %v1_17624, 0
  br i1 %v2_17620, label %dec_label_pc_17634, label %dec_label_pc_17650.preheader

dec_label_pc_17650.preheader:                     ; preds = %dec_label_pc_1761c
  %v2_17624 = add i32 %v1_17624, -1
  %v1_17680 = add i32 %v0_17660.pre, 8
  br label %dec_label_pc_17650.outer

dec_label_pc_17634.loopexit:                      ; preds = %dec_label_pc_176ac
  br label %dec_label_pc_17634

dec_label_pc_17634:                               ; preds = %dec_label_pc_17634.loopexit, %dec_label_pc_1761c, %dec_label_pc_17778
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1763c = load i32, i32* %r6.global-to-local, align 4
  %v2_1763c = add i32 %v1_1763c, 16
  %v3_1763c = inttoptr i32 %v2_1763c to i32*
  store i32 0, i32* %v3_1763c, align 4
  br label %dec_label_pc_175ec

dec_label_pc_17644:                               ; preds = %dec_label_pc_176a0
  %v3_17644 = icmp ult i32 %storemerge40, %v0_176a4
  br i1 %v3_17644, label %dec_label_pc_1764c, label %dec_label_pc_176bc

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17644
  %v1_1764c = add nsw i32 %v3_17658, 1
  br label %dec_label_pc_17650.outer

dec_label_pc_17650.outer:                         ; preds = %dec_label_pc_1764c, %dec_label_pc_17650.preheader
  %v1_176ac.ph = phi i32 [ %v1_1764c, %dec_label_pc_1764c ], [ 0, %dec_label_pc_17650.preheader ]
  %v0_17650.ph = phi i32 [ %v0_17650, %dec_label_pc_1764c ], [ %v2_17624, %dec_label_pc_17650.preheader ]
  br label %dec_label_pc_17650

dec_label_pc_17650:                               ; preds = %dec_label_pc_17650.outer, %dec_label_pc_176b4
  %v0_17650 = phi i32 [ %v1_176b4, %dec_label_pc_176b4 ], [ %v0_17650.ph, %dec_label_pc_17650.outer ]
  %v2_17650 = add i32 %v0_17650, %v1_176ac.ph
  %tmp = icmp slt i32 %v2_17650, 0
  %v4_17654 = zext i1 %tmp to i32
  %v5_17654 = add i32 %v4_17654, %v2_17650
  %v3_17658 = sdiv i32 %v5_17654, 2
  %v3_1765c = mul i32 %v3_17658, 8
  store i32 %v3_1765c, i32* @ip, align 4
  %v2_17660 = add i32 %v3_1765c, %v0_17660.pre
  %v3_17660 = inttoptr i32 %v2_17660 to i32*
  %v4_17660 = load i32, i32* %v3_17660, align 4
  %v1_17664 = and i32 %v4_17660, 1073741824
  %v2_17664 = icmp eq i32 %v1_17664, 0
  %v2_17668 = or i32 %v4_17660, -2147483648
  %tmp79 = bitcast i32 %v4_17660 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1766c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_17664, i32 %v2_1766c, i32 %v2_17668
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_17670 = icmp eq i32 %v2_17624, %v3_17658
  store i32 %v2_17660, i32* %r7.global-to-local, align 4
  br i1 %v9_17670, label %dec_label_pc_176a0, label %dec_label_pc_17680

dec_label_pc_17680:                               ; preds = %dec_label_pc_17650
  %v2_17684 = add i32 %v3_1765c, %v1_17680
  %v3_17684 = inttoptr i32 %v2_17684 to i32*
  %v4_17684 = load i32, i32* %v3_17684, align 4
  %v1_1768c = and i32 %v4_17684, 1073741824
  %v2_1768c = icmp eq i32 %v1_1768c, 0
  %v2_17690 = or i32 %v4_17684, -2147483648
  %tmp81 = bitcast i32 %v4_17684 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_17694 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_1768c, i32 %v2_17694, i32 %v2_17690
  %v1_17698 = add i32 %v2_17684, -1
  %v2_1769c = add i32 %storemerge39, %v1_17698
  br label %dec_label_pc_176a0

dec_label_pc_176a0:                               ; preds = %dec_label_pc_17650, %dec_label_pc_17680
  %storemerge40 = phi i32 [ %v2_1769c, %dec_label_pc_17680 ], [ -1, %dec_label_pc_17650 ]
  %v2_176a0 = add i32 %storemerge, %v2_17660
  %v0_176a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_176a4 = icmp ult i32 %v0_176a4, %v2_176a0
  br i1 %v3_176a4, label %dec_label_pc_176ac, label %dec_label_pc_17644

dec_label_pc_176ac:                               ; preds = %dec_label_pc_176a0
  %v9_176ac = icmp eq i32 %v3_17658, %v1_176ac.ph
  br i1 %v9_176ac, label %dec_label_pc_17634.loopexit, label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176ac
  %v1_176b4 = add nsw i32 %v3_17658, -1
  br label %dec_label_pc_17650

dec_label_pc_176bc:                               ; preds = %dec_label_pc_17644
  %v2_176bc = load i32, i32* %v3_17660, align 4
  %v1_176c0 = and i32 %v2_176bc, 1073741824
  %v2_176c0 = icmp eq i32 %v1_176c0, 0
  %v2_176c4 = or i32 %v2_176bc, -2147483648
  %tmp83 = bitcast i32 %v2_176bc to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_176c8 = bitcast float %tmp84 to i32
  %v0_176cc = select i1 %v2_176c0, i32 %v2_176c8, i32 %v2_176c4
  %v2_176cc = add i32 %v0_176cc, %v2_17660
  %v1_176d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_176d0 = add i32 %v1_176d0, 72
  %v3_176d0 = inttoptr i32 %v2_176d0 to i32*
  store i32 %v2_176cc, i32* %v3_176d0, align 4
  %v0_176d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_176d4 = add i32 %v0_176d4, 4
  %v2_176d4 = inttoptr i32 %v1_176d4 to i32*
  %v3_176d4 = load i32, i32* %v2_176d4, align 4
  %v7_176d8 = icmp eq i32 %v3_176d4, 1
  br i1 %v7_176d8, label %.thread10, label %dec_label_pc_176ec

.thread10:                                        ; preds = %dec_label_pc_176bc
  %v1_176d8 = add i32 %v3_176d4, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_176e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_176e4 = add i32 %v2_176e4, 16
  %v4_176e4 = inttoptr i32 %v3_176e4 to i32*
  store i32 %v1_176d8, i32* %v4_176e4, align 4
  br label %dec_label_pc_175ec

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176bc
  %v1_176ec = icmp slt i32 %v3_176d4, 0
  br i1 %v1_176ec, label %.thread38, label %dec_label_pc_17704

.thread38:                                        ; preds = %dec_label_pc_176ec
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_176f8 = load i32, i32* %r6.global-to-local, align 4
  %v5_176f8 = add i32 %v4_176f8, 76
  %v6_176f8 = inttoptr i32 %v5_176f8 to i32*
  store i32 %v1_176d4, i32* %v6_176f8, align 4
  %v3_176fc = load i32, i32* %r2.global-to-local, align 4
  %v4_176fc = load i32, i32* %r6.global-to-local, align 4
  %v5_176fc = add i32 %v4_176fc, 80
  %v6_176fc = inttoptr i32 %v5_176fc to i32*
  store i32 %v3_176fc, i32* %v6_176fc, align 4
  br label %dec_label_pc_17724

dec_label_pc_17704:                               ; preds = %dec_label_pc_176ec
  %v1_17704 = and i32 %v3_176d4, 1073741824
  %v2_17704 = icmp eq i32 %v1_17704, 0
  %v2_17708 = or i32 %v3_176d4, -2147483648
  %tmp85 = bitcast i32 %v3_176d4 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1770c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_17704, i32 %v2_1770c, i32 %v2_17708
  %v1_17710 = add i32 %storemerge42, 4
  %v2_17714 = add i32 %v1_17710, %v0_176d4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1771c = load i32, i32* %r6.global-to-local, align 4
  %v2_1771c = add i32 %v1_1771c, 76
  %v3_1771c = inttoptr i32 %v2_1771c to i32*
  store i32 %v2_17714, i32* %v3_1771c, align 4
  %v0_17720 = load i32, i32* %r2.global-to-local, align 4
  %v1_17720 = load i32, i32* %r6.global-to-local, align 4
  %v2_17720 = add i32 %v1_17720, 80
  %v3_17720 = inttoptr i32 %v2_17720 to i32*
  store i32 %v0_17720, i32* %v3_17720, align 4
  br label %dec_label_pc_17724

dec_label_pc_17724:                               ; preds = %.thread38, %dec_label_pc_17704
  %v0_17724 = load i32, i32* %r6.global-to-local, align 4
  %v1_17724 = add i32 %v0_17724, 76
  %v2_17724 = inttoptr i32 %v1_17724 to i32*
  %v3_17724 = load i32, i32* %v2_17724, align 4
  store i32 %v3_17724, i32* %r2.global-to-local, align 4
  %v1_17728 = inttoptr i32 %v3_17724 to i32*
  %v2_17728 = load i32, i32* %v1_17728, align 4
  %v1_1772c = icmp slt i32 %v2_17728, 0
  br i1 %v1_1772c, label %dec_label_pc_17750, label %dec_label_pc_17734

dec_label_pc_17734:                               ; preds = %dec_label_pc_17724
  %v1_17734 = and i32 %v2_17728, 1073741824
  %v2_17734 = icmp eq i32 %v1_17734, 0
  %v2_17738 = or i32 %v2_17728, -2147483648
  %tmp87 = bitcast i32 %v2_17728 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1773c = bitcast float %tmp88 to i32
  %v0_17740 = select i1 %v2_17734, i32 %v2_1773c, i32 %v2_17738
  %v2_17740 = add i32 %v0_17740, %v3_17724
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_17748 = add i32 %v0_17724, 16
  %v3_17748 = inttoptr i32 %v2_17748 to i32*
  store i32 %v2_17740, i32* %v3_17748, align 4
  br label %dec_label_pc_175ec

dec_label_pc_17750:                               ; preds = %dec_label_pc_17724
  %v3_17750 = udiv i32 %v2_17728, 16777216
  %v1_17754 = urem i32 %v3_17750, 16
  %v2_17754 = icmp eq i32 %v1_17754, 0
  br i1 %v2_17754, label %dec_label_pc_1775c, label %dec_label_pc_17770

dec_label_pc_1775c:                               ; preds = %dec_label_pc_17750
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17764 = load i32, i32* %r5.global-to-local, align 4
  %v2_17764 = add i32 %v0_17764, -41272
  %v2_17768 = add i32 %v0_17724, 16
  %v3_17768 = inttoptr i32 %v2_17768 to i32*
  store i32 %v2_17764, i32* %v3_17768, align 4
  br label %dec_label_pc_175ec

dec_label_pc_17770:                               ; preds = %dec_label_pc_17750
  %v7_17770 = icmp eq i32 %v1_17754, 1
  br i1 %v7_17770, label %dec_label_pc_17794, label %dec_label_pc_17778

dec_label_pc_17778:                               ; preds = %dec_label_pc_17770
  %v7_17778 = icmp eq i32 %v1_17754, 2
  br i1 %v7_17778, label %dec_label_pc_17780, label %dec_label_pc_17634

dec_label_pc_17780:                               ; preds = %dec_label_pc_17778
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_17788 = load i32, i32* %r5.global-to-local, align 4
  %v2_17788 = add i32 %v0_17788, -41288
  %v2_1778c = add i32 %v0_17724, 16
  %v3_1778c = inttoptr i32 %v2_1778c to i32*
  store i32 %v2_17788, i32* %v3_1778c, align 4
  br label %dec_label_pc_175ec

dec_label_pc_17794:                               ; preds = %dec_label_pc_17770
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1779c = load i32, i32* %r5.global-to-local, align 4
  %v2_1779c = add i32 %v0_1779c, -41280
  %v2_177a0 = add i32 %v0_17724, 16
  %v3_177a0 = inttoptr i32 %v2_177a0 to i32*
  store i32 %v2_1779c, i32* %v3_177a0, align 4
  br label %dec_label_pc_175ec

; uselistorder directives
  uselistorder i32 %v1_17754, { 2, 1, 0 }
  uselistorder i32 %v0_17724, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_176d4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_176a4, { 1, 0 }
  uselistorder i32 %v3_1765c, { 2, 1, 0 }
  uselistorder i32 %v3_17658, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_17650, { 1, 0 }
  uselistorder i32 %v0_17650, { 1, 0 }
  uselistorder i32 %v2_17624, { 1, 0 }
  uselistorder i32 %v0_17660.pre, { 1, 0 }
  uselistorder i32 %v3_17610, { 1, 0 }
  uselistorder i32 %v1_175c4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder label %dec_label_pc_17724, { 1, 0 }
  uselistorder label %dec_label_pc_176a0, { 1, 0 }
  uselistorder label %dec_label_pc_17650, { 1, 0 }
  uselistorder label %dec_label_pc_17634, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175ec, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_177ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_177ac:
  %v0_177ac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_177ac, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_177ac
  %v2_177ac = load i32, i32* @ip, align 4
  %v4_177ac = mul i32 %v2_177ac, 2
  %v5_177ac = and i32 %v4_177ac, %arg1
  %v2_177b0 = load i32, i32* @r4, align 4
  %v8_177b0 = shl i32 %v2_177b0, %v5_177ac
  %v9_177b0 = and i32 %v8_177b0, %v5_177ac
  %v8_177b4 = lshr i32 %v2_177b0, %v9_177b0
  %v9_177b4 = and i32 %v8_177b4, %v9_177b0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_177ac, %bb
  %v10_177b4 = phi i32 [ %arg1, %dec_label_pc_177ac ], [ %v9_177b4, %bb ]
  ret i32 %v10_177b4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_177c8 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_177dc = inttoptr i32 %v1_177c8 to i32*
  %v2_177dc = load i32, i32* %v1_177dc, align 4
  store i32 %v2_177dc, i32* %r0.global-to-local, align 4
  %v12_177dc = add i32 %entry_vrs, 20
  %v1_177e8 = inttoptr i32 %v12_177dc to i32*
  %v2_177e8 = load i32, i32* %v1_177e8, align 4
  store i32 %v2_177e8, i32* %r0.global-to-local, align 4
  %v12_177e8 = add i32 %entry_vrs, 36
  %v1_177f0 = inttoptr i32 %v12_177e8 to i32*
  %v2_177f0 = load i32, i32* %v1_177f0, align 4
  store i32 %v2_177f0, i32* %r0.global-to-local, align 4
  %v12_177f0 = add i32 %entry_vrs, 52
  store i32 %v12_177f0, i32* @ip, align 4
  %v13_177f4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_177f4, i32* @lr, align 4
  %v1_177f8 = inttoptr i32 %v12_177f0 to i32*
  %v2_177f8 = load i32, i32* %v1_177f8, align 4
  store i32 %v2_177f8, i32* %r0.global-to-local, align 4
  %v9_177f8 = add i32 %entry_vrs, 64
  %v10_177f8 = inttoptr i32 %v9_177f8 to i32*
  %v11_177f8 = load i32, i32* %v10_177f8, align 4
  store i32 0, i32* @r4, align 4
  %v1_17800 = add i32 %ucbp, 12
  %v2_17800 = inttoptr i32 %v1_17800 to i32*
  %v3_17800 = load i32, i32* %v2_17800, align 4
  store i32 %v2_177f8, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_17818 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_177f8)
  store i32 %v2_17818, i32* %r0.global-to-local, align 4
  %v0_1781c = load i32, i32* @r6, align 4
  %v1_1781c = load i32, i32* @r4, align 4
  %v9_1781c = icmp eq i32 %v0_1781c, %v1_1781c
  store i32 %v2_17818, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1781c, label %dec_label_pc_17830, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1783c

dec_label_pc_17830:                               ; preds = %entry
  store i32 %v0_1781c, i32* @r4, align 4
  br label %dec_label_pc_17838

dec_label_pc_17838:                               ; preds = %dec_label_pc_17900, %dec_label_pc_17830
  br label %dec_label_pc_1783c

dec_label_pc_1783c:                               ; preds = %.thread, %dec_label_pc_17838
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_17838 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1783c = icmp eq i32 %v2_17818, 0
  br i1 %v2_1783c, label %dec_label_pc_178b4, label %.thread2.dec_label_pc_17850_crit_edge

.thread2.dec_label_pc_17850_crit_edge:            ; preds = %dec_label_pc_1783c
  br label %dec_label_pc_17850

dec_label_pc_17850:                               ; preds = %.thread2.dec_label_pc_17850_crit_edge, %dec_label_pc_178b4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_17860 = load i32, i32* @r5, align 4
  store i32 %v0_17860, i32* @r3, align 4
  store i32 96368, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_17800)
  br i1 false, label %dec_label_pc_17878, label %dec_label_pc_178a0

dec_label_pc_17878:                               ; preds = %dec_label_pc_17850
  br i1 undef, label %dec_label_pc_17880, label %dec_label_pc_178a4

dec_label_pc_17880:                               ; preds = %dec_label_pc_17878
  br i1 undef, label %dec_label_pc_17900, label %dec_label_pc_17898

dec_label_pc_17898:                               ; preds = %dec_label_pc_17880
  br i1 undef, label %dec_label_pc_178f8, label %dec_label_pc_178a0

dec_label_pc_178a0:                               ; preds = %dec_label_pc_17850, %dec_label_pc_17898
  br label %dec_label_pc_178a4

dec_label_pc_178a4:                               ; preds = %dec_label_pc_17878, %dec_label_pc_178a0
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_178b4:                               ; preds = %dec_label_pc_1783c
  store i32 %v11_177f8, i32* @r3, align 4
  %v2_178b8 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_178b8, i32* @r4, align 4
  %v1_178bc = load i32, i32* @r5, align 4
  %v2_178bc = add i32 %v1_178bc, 20
  %v3_178bc = inttoptr i32 %v2_178bc to i32*
  store i32 %v11_177f8, i32* %v3_178bc, align 4
  store i32 %v2_178b8, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_178cc = call i32 @memcpy()
  %v0_178d4 = load i32, i32* @r6, align 4
  store i32 %v0_178d4, i32* %r0.global-to-local, align 4
  %v0_178d8 = load i32, i32* @r5, align 4
  %v1_178dc = add i32 %v0_178d8, 16
  %v2_178dc = inttoptr i32 %v1_178dc to i32*
  %v3_178dc = load i32, i32* %v2_178dc, align 4
  store i32 %v3_178dc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_178dc)
  %v0_178ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_178ec, i32* @r4, align 4
  br label %dec_label_pc_17850

dec_label_pc_178f8:                               ; preds = %dec_label_pc_17898
  br label %dec_label_pc_17900

dec_label_pc_17900:                               ; preds = %dec_label_pc_17880, %dec_label_pc_178f8
  br label %dec_label_pc_17838

; uselistorder directives
  uselistorder i32 %v11_177f8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 8, 9, 10, 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ()* @memcpy, { 0, 16, 22, 21, 20, 19, 18, 15, 14, 11, 10, 9, 8, 7, 6, 3, 17, 2, 13, 12, 5, 1, 4 }
  uselistorder i32* @r3, { 105, 106, 16, 17, 14, 15, 18, 19, 9, 20, 21, 22, 23, 50, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 51, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 3, 87, 7, 60, 46, 62, 63, 64, 65, 66, 67, 48, 49, 43, 107, 108, 109, 110, 59, 89, 90, 91, 68, 117, 118, 4, 119, 120, 121, 5, 122, 123, 124, 6, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 0, 143, 144, 145, 146, 61, 44, 45, 69, 70, 71, 72, 73, 74, 75, 47, 147, 111, 154, 155, 156, 148, 149, 150, 151, 152, 1, 153, 8, 101, 102, 57, 58, 94, 95, 96, 92, 112, 113, 114, 115, 116, 11, 12, 13, 160, 157, 158, 159, 2, 161, 162, 163, 93, 97, 98, 99, 100, 10, 103, 104 }
  uselistorder i32 10, { 1, 25, 7, 26, 8, 9, 10, 3, 32, 34, 35, 27, 28, 11, 29, 12, 38, 41, 42, 43, 24, 30, 14, 13, 4, 45, 44, 15, 46, 16, 47, 17, 48, 49, 2, 39, 40, 33, 6, 31, 52, 0, 36, 37, 18, 50, 19, 5, 21, 22, 20, 23, 51 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_17900, { 1, 0 }
  uselistorder label %dec_label_pc_178a4, { 1, 0 }
  uselistorder label %dec_label_pc_178a0, { 1, 0 }
  uselistorder label %dec_label_pc_17850, { 1, 0 }
  uselistorder label %dec_label_pc_1783c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_17914 = add i32 %ucbp, 12
  %v3_17914 = inttoptr i32 %v2_17914 to i32*
  store i32 %stop_fn, i32* %v3_17914, align 4
  %v3_17918 = add i32 %ucbp, 24
  %v4_17918 = inttoptr i32 %v3_17918 to i32*
  store i32 %tmp, i32* %v4_17918, align 4
  %v1_1791c = add i32 %entry_vrs, 60
  %v2_1791c = inttoptr i32 %v1_1791c to i32*
  %v3_1791c = load i32, i32* %v2_1791c, align 4
  %v2_17924 = add i32 %entry_vrs, 64
  %v3_17924 = inttoptr i32 %v2_17924 to i32*
  store i32 %v3_1791c, i32* %v3_17924, align 4
  %v3_1792c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1792c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_179446 = add i32 %vrs, 64
  %v2_179447 = inttoptr i32 %v1_179446 to i32*
  %v3_179448 = load i32, i32* %v2_179447, align 4
  %v2_179489 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_179448)
  store i32 %v2_179489, i32* %r0.global-to-local, align 4
  %v2_1794c11 = icmp eq i32 %v2_179489, 0
  br i1 %v2_1794c11, label %dec_label_pc_17954, label %dec_label_pc_17984

dec_label_pc_17954:                               ; preds = %entry, %dec_label_pc_17954.dec_label_pc_17940_crit_edge
  %v0_17954 = load i32, i32* @r5, align 4
  %v1_17954 = add i32 %v0_17954, 64
  %v2_17954 = inttoptr i32 %v1_17954 to i32*
  %v3_17954 = load i32, i32* %v2_17954, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1795c = load i32, i32* @r4, align 4
  %v2_1795c = add i32 %v1_1795c, 20
  %v3_1795c = inttoptr i32 %v2_1795c to i32*
  store i32 %v3_17954, i32* %v3_1795c, align 4
  %v0_17960 = load i32, i32* @r4, align 4
  %v1_17968 = add i32 %v0_17960, 16
  %v2_17968 = inttoptr i32 %v1_17968 to i32*
  %v3_17968 = load i32, i32* %v2_17968, align 4
  call void @__pseudo_branch(i32 %v3_17968)
  %v0_17974 = load i32, i32* %r0.global-to-local, align 4
  %v7_17974 = icmp eq i32 %v0_17974, 8
  br i1 %v7_17974, label %dec_label_pc_17954.dec_label_pc_17940_crit_edge, label %dec_label_pc_1797c

dec_label_pc_17954.dec_label_pc_17940_crit_edge:  ; preds = %dec_label_pc_17954
  %v0_17940.pre = load i32, i32* @r4, align 4
  %v0_17944.pre = load i32, i32* @r5, align 4
  store i32 %v0_17940.pre, i32* %r0.global-to-local, align 4
  %v1_17944 = add i32 %v0_17944.pre, 64
  %v2_17944 = inttoptr i32 %v1_17944 to i32*
  %v3_17944 = load i32, i32* %v2_17944, align 4
  %v2_17948 = call i32 @get_eit_entry(i32 %v0_17940.pre, i32 %v3_17944)
  store i32 %v2_17948, i32* %r0.global-to-local, align 4
  %v2_1794c = icmp eq i32 %v2_17948, 0
  br i1 %v2_1794c, label %dec_label_pc_17954, label %dec_label_pc_17984

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17954
  %v7_1797c = icmp eq i32 %v0_17974, 7
  br i1 %v7_1797c, label %dec_label_pc_17988, label %dec_label_pc_17984

dec_label_pc_17984:                               ; preds = %entry, %dec_label_pc_17954.dec_label_pc_17940_crit_edge, %dec_label_pc_1797c
  %v0_17984 = call i32 @abort()
  store i32 %v0_17984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_1797c, %dec_label_pc_17984
  %v0_17988 = load i32, i32* @r5, align 4
  %v1_17988 = add i32 %v0_17988, 4
  store i32 %v1_17988, i32* %r0.global-to-local, align 4
  %v1_1798c = inttoptr i32 %v1_17988 to i32*
  %v2_1798c = call i32 @__restore_core_regs(i32* %v1_1798c)
  store i32 %v2_1798c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 1, 2, 0 }
  uselistorder label %dec_label_pc_17988, { 1, 0 }
  uselistorder label %dec_label_pc_17984, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17954, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_17990 = add i32 %ucbp, 20
  %v2_17990 = inttoptr i32 %v1_17990 to i32*
  %v3_17990 = load i32, i32* %v2_17990, align 4
  %v1_17998 = load i32, i32* %r1.global-to-local, align 4
  %v2_17998 = add i32 %v1_17998, 64
  %v3_17998 = inttoptr i32 %v2_17998 to i32*
  store i32 %v3_17990, i32* %v3_17998, align 4
  %v1_1799c = add i32 %ucbp, 12
  %v2_1799c = inttoptr i32 %v1_1799c to i32*
  %v3_1799c = load i32, i32* %v2_1799c, align 4
  %v2_179a0 = icmp eq i32 %v3_1799c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_179ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_179ac, i32* @r5, align 4
  br i1 %v2_179a0, label %dec_label_pc_179b4, label %dec_label_pc_179f0

dec_label_pc_179b4:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_179c0 = add i32 %ucbp, 16
  %v2_179c0 = inttoptr i32 %v1_179c0 to i32*
  %v3_179c0 = load i32, i32* %v2_179c0, align 4
  call void @__pseudo_branch(i32 %v3_179c0)
  br i1 false, label %dec_label_pc_179e8, label %dec_label_pc_179d4

dec_label_pc_179d4:                               ; preds = %dec_label_pc_179b4
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_c2c4.261 to i32))
  %v0_179dc = load i32, i32* @r4, align 4
  %v0_179e0 = load i32, i32* @r5, align 4
  store i32 %v0_179e0, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_179dc, i32 %v0_179e0)
  br label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %dec_label_pc_179b4, %dec_label_pc_179d4
  %v0_179e8 = load i32, i32* @r5, align 4
  %v1_179e8 = add i32 %v0_179e8, 4
  %v1_179ec = inttoptr i32 %v1_179e8 to i32*
  %v2_179ec = call i32 @__restore_core_regs(i32* %v1_179ec)
  %v1_179f4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_179f0

dec_label_pc_179f0:                               ; preds = %entry, %dec_label_pc_179e8
  %v1_179f4 = phi i32 [ %v0_179ac, %entry ], [ %v1_179f4.pre, %dec_label_pc_179e8 ]
  %v3_179f4 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_179f4, i32 1)
  %v0_179f8 = call i32 @abort()
  ret i32 %v0_179f8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 2, 1, 6, 5, 10, 4, 3, 9, 8, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 74, 75, 76, 77, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 7, 5, 6, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 37, 0, 46, 47, 48, 49, 66, 67, 68, 39, 78, 42, 80, 62, 59, 60, 61, 55, 56, 57, 63, 44, 58, 38, 64, 65, 50, 51, 52, 53, 54, 43, 85, 89, 88, 87, 81, 82, 1, 40, 69, 70, 71, 83, 84, 86, 72, 73, 41, 79, 2, 3, 4 }
  uselistorder i1 true, { 0, 3, 4, 5, 6, 7, 1, 136, 2, 117, 8, 9, 10, 11, 12, 13, 109, 110, 118, 119, 111, 14, 15, 16, 112, 113, 114, 120, 17, 18, 19, 137, 138, 139, 140, 141, 20, 142, 143, 21, 132, 24, 25, 26, 27, 22, 23, 133, 28, 134, 29, 30, 31, 32, 33, 34, 35, 107, 36, 37, 38, 39, 108, 42, 41, 40, 145, 146, 147, 148, 149, 150, 151, 115, 152, 153, 154, 124, 155, 156, 157, 158, 116, 159, 160, 161, 162, 163, 164, 165, 43, 166, 144, 167, 44, 45, 46, 47, 48, 49, 121, 168, 50, 169, 170, 171, 172, 51, 97, 125, 173, 52, 96, 174, 53, 95, 175, 176, 177, 178, 54, 179, 126, 55, 99, 180, 56, 98, 181, 182, 57, 183, 184, 185, 58, 186, 187, 59, 188, 60, 128, 189, 190, 127, 191, 192, 61, 100, 62, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 64, 102, 65, 203, 204, 205, 66, 101, 206, 67, 63, 207, 208, 68, 209, 210, 211, 69, 212, 213, 214, 215, 216, 70, 71, 129, 72, 73, 74, 75, 135, 103, 217, 123, 218, 122, 76, 104, 105, 219, 131, 220, 221, 78, 222, 223, 79, 106, 225, 77, 226, 224, 227, 130, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_179f0, { 1, 0 }
  uselistorder label %dec_label_pc_179e8, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_179fc = load i32, i32* @r4, align 4
  store i32 %v3_179fc, i32* %stack_var_-16, align 4
  %v6_179fc = load i32, i32* @r5, align 4
  %v9_179fc = load i32, i32* @r6, align 4
  %v12_179fc = load i32, i32* @lr, align 4
  %v1_17a00 = add i32 %entry_vrs, 60
  %v2_17a00 = inttoptr i32 %v1_17a00 to i32*
  %v3_17a00 = load i32, i32* %v2_17a00, align 4
  %v2_17a04 = add i32 %entry_vrs, 64
  %v3_17a04 = inttoptr i32 %v2_17a04 to i32*
  store i32 %v3_17a00, i32* %v3_17a04, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_17a34 = load i32, i32* %v3_17a04, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_17a4c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_17a34)
  %v2_17a50 = icmp eq i32 %v2_17a4c, 0
  br i1 %v2_17a50, label %dec_label_pc_17a58, label %dec_label_pc_17a8c

dec_label_pc_17a58:                               ; preds = %entry
  %v0_17a58 = load i32, i32* @r5, align 4
  %v1_17a60 = add i32 %v0_17a58, 16
  %v2_17a60 = inttoptr i32 %v1_17a60 to i32*
  %v3_17a60 = load i32, i32* %v2_17a60, align 4
  call void @__pseudo_branch(i32 %v3_17a60)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17a78 = load i32, i32* %saved_vrs_-320, align 4
  %v1_17a7c = urem i32 %v2_17a78, 2
  %v2_17a7c = icmp eq i32 %v1_17a7c, 0
  br i1 %v2_17a7c, label %dec_label_pc_17a9c, label %dec_label_pc_17a84

dec_label_pc_17a84:                               ; preds = %dec_label_pc_17a58, %dec_label_pc_17a9c
  %v0_17a84 = phi i1 [ false, %dec_label_pc_17a58 ], [ %phitmp, %dec_label_pc_17a9c ]
  br i1 %v0_17a84, label %dec_label_pc_17aa8, label %dec_label_pc_17a8c

dec_label_pc_17a8c:                               ; preds = %entry, %dec_label_pc_17a84
  %v2_17a94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17a94, i32* @r4, align 4
  store i32 %v6_179fc, i32* @r5, align 4
  store i32 %v9_179fc, i32* @r6, align 4
  store i32 %v12_179fc, i32* @lr, align 4
  ret i32 9

dec_label_pc_17a9c:                               ; preds = %dec_label_pc_17a58
  %v2_17a9c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_17a9c, i32* @r0, align 4
  %v1_17aa0 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_17a9c)
  %v0_17a84.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_17a84.pre, 6
  br label %dec_label_pc_17a84

dec_label_pc_17aa8:                               ; preds = %dec_label_pc_17a84
  %v0_17aa8 = load i32, i32* @r5, align 4
  %v0_17aac = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_17aa8, i32 %v0_17aac)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17a8c, { 1, 0 }
  uselistorder label %dec_label_pc_17a84, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_17ab4 = add i32 %ucbp, 12
  %v2_17ab4 = inttoptr i32 %v1_17ab4 to i32*
  %v3_17ab4 = load i32, i32* %v2_17ab4, align 4
  %v2_17ab8 = icmp eq i32 %v3_17ab4, 0
  br i1 %v2_17ab8, label %dec_label_pc_17ac0, label %dec_label_pc_17ac4

dec_label_pc_17ac0:                               ; preds = %entry
  %v2_17ac0 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_17ac4

dec_label_pc_17ac4:                               ; preds = %entry, %dec_label_pc_17ac0
  %v1_17ac4 = add i32 %entry_vrs, 60
  %v2_17ac4 = inttoptr i32 %v1_17ac4 to i32*
  %v3_17ac4 = load i32, i32* %v2_17ac4, align 4
  %v2_17acc = add i32 %entry_vrs, 64
  %v3_17acc = inttoptr i32 %v2_17acc to i32*
  store i32 %v3_17ac4, i32* %v3_17acc, align 4
  %v3_17ad0 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_17ad0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_17ac4, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_17b30

bb:                                               ; preds = %entry
  %v7_17ae8 = mul i32 %regclass, 4
  %v8_17ae8 = add i32 %v7_17ae8, ptrtoint (i32* @global_var_17af0.596 to i32)
  call void @__pseudo_branch(i32 %v8_17ae8)
  br label %dec_label_pc_17b30

dec_label_pc_17b30:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_17c18 = load i32, i32* @r4, align 4
  %v6_17c18 = load i32, i32* @r5, align 4
  %v2_17c28 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_17c30 = add i32 %ucbp, 76
  %v2_17c30 = inttoptr i32 %v1_17c30 to i32*
  %v3_17c30 = load i32, i32* %v2_17c30, align 4
  %v1_17c3c = inttoptr i32 %v3_17c30 to i32*
  %v2_17c3c = load i32, i32* %v1_17c3c, align 4
  store i32 %v2_17c3c, i32* @lr, align 4
  %v4_17c3c = add i32 %v3_17c30, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_17c48 = urem i32 %state, 4
  store i32 %v1_17c48, i32* %r2.global-to-local, align 4
  %v1_17c4c = and i32 %state, 8
  store i32 %v1_17c4c, i32* %r0.global-to-local, align 4
  %v4_17c5c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_17c3c, i32* %v4_17c5c, align 8
  br i1 %v2_17c28, label %dec_label_pc_17c6c, label %dec_label_pc_17f48

dec_label_pc_17c6c:                               ; preds = %entry
  %v3_17c6c = mul i32 %v2_17c3c, 256
  store i32 %v3_17c6c, i32* %v4_17c5c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17f48, %dec_label_pc_17c6c
  %v0_17ca8647090 = phi i32 [ %v2_17f60, %dec_label_pc_17f48 ], [ %v4_17c3c, %dec_label_pc_17c6c ]
  store i32 %v1_17c48, i32* %r2.global-to-local, align 4
  %v1_17c88 = add i32 %ucbp, 80
  %v2_17c88 = inttoptr i32 %v1_17c88 to i32*
  %v3_17c88 = load i32, i32* %v2_17c88, align 4
  %v7_17c8c = icmp eq i32 %v1_17c48, 2
  br i1 %v7_17c8c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_17c84
  %v2_17c90 = add i32 %ucbp, 56
  %v3_17c90 = inttoptr i32 %v2_17c90 to i32*
  %v4_17c90 = load i32, i32* %v3_17c90, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17c84, %bb
  %v0_17ca86470 = phi i32 [ %v0_17ca8647090, %dec_label_pc_17c84 ], [ %v4_17c90, %bb ]
  %v1_17c94 = urem i32 %v3_17c88, 2
  %v2_17c94 = icmp eq i32 %v1_17c94, 0
  br i1 %v2_17c94, label %dec_label_pc_17ca8.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_17d68

dec_label_pc_17ca8.preheader:                     ; preds = %bb148
  %v1_17ca86571 = inttoptr i32 %v0_17ca86470 to i32*
  %v2_17ca86672 = load i32, i32* %v1_17ca86571, align 4
  %v2_17cac6874 = icmp eq i32 %v2_17ca86672, 0
  br i1 %v2_17cac6874, label %dec_label_pc_17d68, label %dec_label_pc_17cb4.preheader.lr.ph.lr.ph

dec_label_pc_17cb4.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_17ca8.preheader
  %v7_17cb8 = icmp eq i32 %id, 2
  %v2_17d44 = icmp eq i32 %v1_17c48, 0
  %v2_17f10 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_17e2c = icmp eq i32 %v1_17c4c, 0
  br label %dec_label_pc_17cb4.preheader.lr.ph

dec_label_pc_17cb4.preheader.lr.ph:               ; preds = %dec_label_pc_17cb4.preheader.lr.ph.lr.ph, %dec_label_pc_17f7c
  %v1_17cc496 = phi i32 [ %v2_17ca86672, %dec_label_pc_17cb4.preheader.lr.ph.lr.ph ], [ %v2_17ca866, %dec_label_pc_17f7c ]
  %v1_17cc093 = phi i32 [ %v0_17ca86470, %dec_label_pc_17cb4.preheader.lr.ph.lr.ph ], [ %v2_17f80, %dec_label_pc_17f7c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_17cb4.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_17f7c ]
  br label %dec_label_pc_17cb4.preheader

dec_label_pc_17cb4.preheader:                     ; preds = %dec_label_pc_17cb4.preheader.lr.ph, %dec_label_pc_17f40
  %v1_17cc495 = phi i32 [ %v1_17cc496, %dec_label_pc_17cb4.preheader.lr.ph ], [ %v2_17ca8, %dec_label_pc_17f40 ]
  %v1_17cc092 = phi i32 [ %v1_17cc093, %dec_label_pc_17cb4.preheader.lr.ph ], [ %v1_17f40, %dec_label_pc_17f40 ]
  br label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17cb4.preheader, %dec_label_pc_17d58
  %v1_17cc4 = phi i32 [ %v1_17cc495, %dec_label_pc_17cb4.preheader ], [ %v2_17d5c, %dec_label_pc_17d58 ]
  %v1_17cd8 = phi i32 [ %v1_17cc092, %dec_label_pc_17cb4.preheader ], [ %v1_17d58, %dec_label_pc_17d58 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_17cb8, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_17cb4
  %v2_17cbc = add i32 %v1_17cd8, 4
  %v3_17cbc = inttoptr i32 %v2_17cbc to i32*
  %v4_17cbc = load i32, i32* %v3_17cbc, align 4
  store i32 %v4_17cbc, i32* @r5, align 4
  store i32 %v1_17cc4, i32* @r6, align 4
  %v0_17cc8109 = load i32, i32* @r8, align 4
  %v1_17cc8110 = add i32 %v0_17cc8109, 72
  %v2_17cc8111 = inttoptr i32 %v1_17cc8110 to i32*
  %v3_17cc8112 = load i32, i32* %v2_17cc8111, align 4
  store i32 %v3_17cc8112, i32* @lr, align 4
  %v2_17cd4 = add i32 %v1_17cd8, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_17cb4
  %v2_17cc0 = add i32 %v1_17cd8, 2
  %v3_17cc0 = inttoptr i32 %v2_17cc0 to i16*
  %v4_17cc0 = load i16, i16* %v3_17cc0, align 2
  %v5_17cc0 = zext i16 %v4_17cc0 to i32
  store i32 %v5_17cc0, i32* @r5, align 4
  %v0_17cc8 = load i32, i32* @r8, align 4
  %v1_17cc8 = add i32 %v0_17cc8, 72
  %v2_17cc8 = inttoptr i32 %v1_17cc8 to i32*
  %v3_17cc8 = load i32, i32* %v2_17cc8, align 4
  store i32 %v3_17cc8, i32* @lr, align 4
  %v2_17cd0 = inttoptr i32 %v1_17cd8 to i16*
  %v3_17cd0 = load i16, i16* %v2_17cd0, align 2
  %v4_17cd0 = zext i16 %v3_17cd0 to i32
  store i32 %v4_17cd0, i32* @r6, align 4
  %v2_17cd8 = add i32 %v1_17cd8, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_17cd8, %.thread16 ], [ %v2_17cd4, %bb151 ]
  %v3_17cc8115 = phi i32 [ %v3_17cc8, %.thread16 ], [ %v3_17cc8112, %bb151 ]
  %v0_17ce0113 = phi i32 [ %v5_17cc0, %.thread16 ], [ %v4_17cbc, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_17ce0 = and i32 %v0_17ce0113, -2
  %v2_17ce4 = add i32 %v1_17ce0, %v3_17cc8115
  store i32 %v2_17ce4, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_17cf4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17cf4, i32* %r0.global-to-local, align 4
  %v5_17d00 = call i32 @_Unwind_VRS_Get(i32 %v0_17cf4, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17d00, i32* %r0.global-to-local, align 4
  %v3_17d04 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_17d04, i32* %r2.global-to-local, align 4
  %v0_17d08 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_17d08, %v3_17d04
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_17d14

._crit_edge:                                      ; preds = %bb152
  %v0_17d2c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_17d14:                               ; preds = %bb152
  %v0_17d14 = load i32, i32* @r6, align 4
  %v1_17d14 = and i32 %v0_17d14, -2
  %v2_17d18 = add i32 %v1_17d14, %v0_17d08
  %v3_17d1c = icmp ult i32 %v3_17d04, %v2_17d18
  br i1 %v3_17d1c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_17d14
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_17d14
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_17d2c = phi i32 [ %v0_17d2c.pre, %._crit_edge ], [ %v0_17d14, %bb153 ], [ %v0_17d14, %.thread20 ]
  %v0_17ed4 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_17d28 = load i32, i32* @r5, align 4
  %v1_17d2c = urem i32 %v0_17d2c, 2
  %v1_17d28 = mul i32 %v0_17d28, 2
  %v3_17d30 = and i32 %v1_17d28, 2
  %v4_17d30 = or i32 %v3_17d30, %v1_17d2c
  store i32 %v4_17d30, i32* %r2.global-to-local, align 4
  %v7_17d34 = icmp eq i32 %v4_17d30, 1
  br i1 %v7_17d34, label %dec_label_pc_17ec8, label %dec_label_pc_17d3c

dec_label_pc_17d3c:                               ; preds = %bb154
  %v2_17d34 = icmp eq i32 %v4_17d30, 0
  br i1 %v2_17d34, label %dec_label_pc_17d40, label %dec_label_pc_17df0

dec_label_pc_17d40:                               ; preds = %dec_label_pc_17d3c
  store i32 %v1_17c48, i32* %r2.global-to-local, align 4
  br i1 %v2_17d44, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_17d40
  %v0_17d58119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_17d58

bb155:                                            ; preds = %dec_label_pc_17d40
  %v2_17d50 = icmp eq i32 %v0_17ed4, 0
  %v0_17d58 = load i32, i32* @r7, align 4
  br i1 %v2_17d50, label %dec_label_pc_17d58, label %dec_label_pc_180d0

dec_label_pc_17d58:                               ; preds = %.thread, %bb155
  %v0_17d58120 = phi i32 [ %v0_17d58119, %.thread ], [ %v0_17d58, %bb155 ]
  %v1_17d58 = add i32 %v0_17d58120, 4
  %v1_17d5c = inttoptr i32 %v1_17d58 to i32*
  %v2_17d5c = load i32, i32* %v1_17d5c, align 4
  %v2_17d60 = icmp eq i32 %v2_17d5c, 0
  br i1 %v2_17d60, label %dec_label_pc_17d68, label %dec_label_pc_17cb4

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17f7c, %dec_label_pc_17f40, %dec_label_pc_17d58, %dec_label_pc_17ca8.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_17ca8.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17d58 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17f40 ], [ %stack_var_-76.4, %dec_label_pc_17f7c ]
  %v0_17d68 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17d68, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_17d70 = call i32 @__gnu_unwind_execute(i32 %v0_17d68, %anon_struct_13* %tmp156)
  store i32 %v4_17d70, i32* %r0.global-to-local, align 4
  store i32 %v4_17d70, i32* %r5.global-to-local, align 4
  %v2_17d74 = icmp eq i32 %v4_17d70, 0
  br i1 %v2_17d74, label %dec_label_pc_17d7c, label %dec_label_pc_17df8

dec_label_pc_17d7c:                               ; preds = %dec_label_pc_17d68
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_17d80 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_17d80, label %bb157, label %dec_label_pc_17d8c

bb157:                                            ; preds = %dec_label_pc_17d7c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_17d8c:                               ; preds = %dec_label_pc_17d7c
  %v2_17d8c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_17d8c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_17d9c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17d9c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_17da4 = call i32 @_Unwind_VRS_Get(i32 %v0_17d9c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_17da8 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_17d9c, i32* %r0.global-to-local, align 4
  %v5_17dbc = call i32 @_Unwind_VRS_Set(i32 %v0_17d9c, i32 %v0_17da8, i32 14, i32 %v0_17da8, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17dbc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32* %r2.global-to-local, align 4
  %v4_17dc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 36) to i32*), align 4
  %v0_17dcc = load i32, i32* %r5.global-to-local, align 4
  %v0_17dd0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17dd0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_17dc8, i32* %stack_var_-48, align 4
  %v5_17de4 = call i32 @_Unwind_VRS_Set(i32 %v0_17dd0, i32 %v0_17dcc, i32 15, i32 %v0_17dcc, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_17df0:                               ; preds = %dec_label_pc_17d3c
  %v7_17df0 = icmp eq i32 %v4_17d30, 2
  br i1 %v7_17df0, label %dec_label_pc_17e08, label %dec_label_pc_17df8

dec_label_pc_17df8:                               ; preds = %dec_label_pc_17df0, %dec_label_pc_17edc, %dec_label_pc_17d68, %dec_label_pc_180d0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_17dfc:                               ; preds = %bb157, %dec_label_pc_18108, %dec_label_pc_18098, %bb166, %dec_label_pc_17d8c, %dec_label_pc_17df8
  %v1_17e04 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_18108 ], [ %v1_17e04.pre, %dec_label_pc_18098 ], [ 7, %bb166 ], [ 7, %dec_label_pc_17d8c ], [ 9, %dec_label_pc_17df8 ]
  store i32 %v3_17c18, i32* %r4.global-to-local, align 4
  store i32 %v6_17c18, i32* %r5.global-to-local, align 4
  ret i32 %v1_17e04

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17df0
  store i32 %v1_17c48, i32* %r2.global-to-local, align 4
  %v0_17e0c = load i32, i32* @r7, align 4
  %v1_17e0c = inttoptr i32 %v0_17e0c to i32*
  %v2_17e0c = load i32, i32* %v1_17e0c, align 4
  %tmp206 = bitcast i32 %v2_17e0c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_17e14 = bitcast float %tmp207 to i32
  store i32 %v1_17e14, i32* @sl, align 4
  br i1 %v2_17d44, label %dec_label_pc_17e1c, label %dec_label_pc_17f88

dec_label_pc_17e1c:                               ; preds = %dec_label_pc_17e08
  %v2_17e1c = icmp eq i32 %v0_17ed4, 0
  br i1 %v2_17e1c, label %dec_label_pc_17f70, label %dec_label_pc_17e24

dec_label_pc_17e24:                               ; preds = %dec_label_pc_17e1c
  %v2_17e28 = icmp eq i32 %v1_17e14, 0
  br i1 %v2_17e28, label %dec_label_pc_17e34.thread, label %bb159

dec_label_pc_17e34.thread:                        ; preds = %dec_label_pc_17e24
  br label %dec_label_pc_18098

bb159:                                            ; preds = %dec_label_pc_17e24
  br i1 %v3_17e2c, label %dec_label_pc_17e3c, label %dec_label_pc_17f70

dec_label_pc_17e3c:                               ; preds = %bb159
  %v1_17e3c = add i32 %v0_17e0c, 4
  store i32 %v1_17e3c, i32* @r6, align 4
  store i32 108, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_17e4c = load i32, i32* @r8, align 4
  %v1_17e4c = add i32 %v0_17e4c, 88
  store i32 %v1_17e4c, i32* %sb.global-to-local, align 4
  store i32 %v1_17e3c, i32* @r4, align 4
  br label %dec_label_pc_17e70

dec_label_pc_17e60:                               ; preds = %bb161
  %v1_17e60 = add i32 %v0_17e60, 1
  store i32 %v1_17e60, i32* @r5, align 4
  %v1_17e64 = load i32, i32* @sl, align 4
  %v9_17e64 = icmp eq i32 %v1_17e60, %v1_17e64
  %v0_17e68 = load i32, i32* @r4, align 4
  %v1_17e68 = add i32 %v0_17e68, 4
  store i32 %v1_17e68, i32* @r4, align 4
  br i1 %v9_17e64, label %dec_label_pc_18098, label %dec_label_pc_17e60.dec_label_pc_17e70_crit_edge

dec_label_pc_17e60.dec_label_pc_17e70_crit_edge:  ; preds = %dec_label_pc_17e60
  %v0_17e7c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e60.dec_label_pc_17e70_crit_edge, %dec_label_pc_17e3c
  %v0_17e7c = phi i32 [ %v0_17e7c.pre, %dec_label_pc_17e60.dec_label_pc_17e70_crit_edge ], [ %v1_17e4c, %dec_label_pc_17e3c ]
  %v1_17e80 = phi i32 [ %v1_17e68, %dec_label_pc_17e60.dec_label_pc_17e70_crit_edge ], [ %v1_17e3c, %dec_label_pc_17e3c ]
  %v1_17e70 = inttoptr i32 %v1_17e80 to i32*
  %v2_17e70 = load i32, i32* %v1_17e70, align 4
  %v2_17e74 = icmp eq i32 %v2_17e70, 0
  store i32 %v0_17e7c, i32* %forced_unwind_-44, align 4
  br i1 %v2_17e74, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_17e70
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_17e70, %bb160
  %v0_17e84 = load i32, i32* @r8, align 4
  store i32 %v0_17e84, i32* %r0.global-to-local, align 4
  store i32 %v2_17f10, i32* %r2.global-to-local, align 4
  %v4_17e94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 108) to i32*), align 4
  store i32 97952, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17e94)
  %v0_17ea0 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ea0 = icmp eq i32 %v0_17ea0, 0
  %v0_17e60 = load i32, i32* @r5, align 4
  br i1 %v2_17ea0, label %dec_label_pc_17e60, label %dec_label_pc_17ea8

dec_label_pc_17ea8:                               ; preds = %bb161
  %v1_17ea8 = load i32, i32* @sl, align 4
  %v9_17ea8 = icmp eq i32 %v0_17e60, %v1_17ea8
  br i1 %v9_17ea8, label %dec_label_pc_18098, label %dec_label_pc_17eb0

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17ea8
  %v0_17eb0 = load i32, i32* @r7, align 4
  %v1_17eb0 = inttoptr i32 %v0_17eb0 to i32*
  %v2_17eb0 = load i32, i32* %v1_17eb0, align 4
  %v1_17eb4 = icmp slt i32 %v2_17eb0, 0
  %v0_17ebc.pre = load i32, i32* @r6, align 4
  br i1 %v1_17eb4, label %dec_label_pc_17ebc, label %dec_label_pc_17f7c

dec_label_pc_17ebc:                               ; preds = %dec_label_pc_17eb0, %dec_label_pc_17f74
  %v0_17ebc = phi i32 [ %storemerge, %dec_label_pc_17f74 ], [ %v0_17ebc.pre, %dec_label_pc_17eb0 ]
  store i32 %v0_17ebc, i32* %r0.global-to-local, align 4
  %v1_17ec0 = add i32 %v0_17ebc, 4
  store i32 %v1_17ec0, i32* @r6, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17ec8:                               ; preds = %bb154
  store i32 %v1_17c48, i32* %r2.global-to-local, align 4
  br i1 %v2_17d44, label %dec_label_pc_17ed4, label %dec_label_pc_17fc0

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17ec8
  %v2_17ed4 = icmp eq i32 %v0_17ed4, 0
  br i1 %v2_17ed4, label %dec_label_pc_17f40, label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %dec_label_pc_17ed4
  %v0_17edc = load i32, i32* @r7, align 4
  %v1_17edc = add i32 %v0_17edc, 4
  %v2_17edc = inttoptr i32 %v1_17edc to i32*
  %v3_17edc = load i32, i32* %v2_17edc, align 4
  %v7_17ee0 = icmp eq i32 %v3_17edc, -2
  store i32 %v1_17edc, i32* %r2.global-to-local, align 4
  br i1 %v7_17ee0, label %dec_label_pc_17df8, label %dec_label_pc_17eec

dec_label_pc_17eec:                               ; preds = %dec_label_pc_17edc
  %v0_17eec = load i32, i32* @r8, align 4
  %v1_17eec = add i32 %v0_17eec, 88
  %v7_17ef0 = icmp eq i32 %v3_17edc, -1
  store i32 %v1_17eec, i32* %forced_unwind_-44, align 4
  br i1 %v7_17ef0, label %dec_label_pc_17f34, label %dec_label_pc_17efc

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17eec
  %v2_17f00 = icmp eq i32 %v3_17edc, 0
  br i1 %v2_17f00, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_17efc
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_17efc, %bb162
  store i32 %v0_17eec, i32* %r0.global-to-local, align 4
  store i32 %v2_17f10, i32* %r2.global-to-local, align 4
  %v4_17f1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 108) to i32*), align 4
  store i32 98088, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17f1c)
  %v0_17f28 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f28 = icmp eq i32 %v0_17f28, 0
  br i1 %v2_17f28, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_17f34.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_17f34

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_17f40

dec_label_pc_17f34:                               ; preds = %.thread25, %dec_label_pc_17eec
  %v3_17f34 = phi i32 [ %v3_17f34.pr, %.thread25 ], [ %v1_17eec, %dec_label_pc_17eec ]
  %v2_17f38 = icmp eq i32 %v3_17f34, 0
  br i1 %v2_17f38, label %dec_label_pc_17f40, label %dec_label_pc_18098

dec_label_pc_17f40:                               ; preds = %bb164, %dec_label_pc_17fec, %dec_label_pc_17fc0, %dec_label_pc_17f34, %dec_label_pc_17ed4
  %v0_17f40 = load i32, i32* @r7, align 4
  %v1_17f40 = add i32 %v0_17f40, 8
  %v1_17ca8 = inttoptr i32 %v1_17f40 to i32*
  %v2_17ca8 = load i32, i32* %v1_17ca8, align 4
  %v2_17cac = icmp eq i32 %v2_17ca8, 0
  br i1 %v2_17cac, label %dec_label_pc_17d68, label %dec_label_pc_17cb4.preheader

dec_label_pc_17f48:                               ; preds = %entry
  %v3_17f48 = udiv i32 %v2_17c3c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_17f58 = mul nuw nsw i32 %v3_17f48, 4
  %v3_17f5c = mul i32 %v2_17c3c, 65536
  %v2_17f60 = add i32 %v6_17f58, %v4_17c3c
  store i32 %v3_17f5c, i32* %v4_17c5c, align 8
  br label %dec_label_pc_17c84

dec_label_pc_17f70:                               ; preds = %bb159, %dec_label_pc_17e1c
  %v1_17f70 = add i32 %v0_17e0c, 4
  br label %dec_label_pc_17f74

dec_label_pc_17f74:                               ; preds = %dec_label_pc_17fb4, %dec_label_pc_17f70
  %v0_17f74 = phi i32 [ %v2_17fb4, %dec_label_pc_17fb4 ], [ %v2_17e0c, %dec_label_pc_17f70 ]
  %storemerge = phi i32 [ %v4_17fb4, %dec_label_pc_17fb4 ], [ %v1_17f70, %dec_label_pc_17f70 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_17f74 = icmp slt i32 %v0_17f74, 0
  br i1 %v1_17f74, label %dec_label_pc_17ebc, label %dec_label_pc_17f7c

dec_label_pc_17f7c:                               ; preds = %dec_label_pc_17eb0, %dec_label_pc_17f74, %dec_label_pc_18088, %dec_label_pc_17ebc
  %v0_17f80 = phi i32 [ %v1_17ec0, %dec_label_pc_17ebc ], [ %storemerge, %dec_label_pc_17f74 ], [ %v1_1808c, %dec_label_pc_18088 ], [ %v0_17ebc.pre, %dec_label_pc_17eb0 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_17ebc ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17f74 ], [ %v1_18088, %dec_label_pc_18088 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17eb0 ]
  %v0_17f7c = load i32, i32* @sl, align 4
  %v3_17f7c = mul i32 %v0_17f7c, 4
  %v2_17f80 = add i32 %v3_17f7c, %v0_17f80
  %v1_17ca865 = inttoptr i32 %v2_17f80 to i32*
  %v2_17ca866 = load i32, i32* %v1_17ca865, align 4
  %v2_17cac68 = icmp eq i32 %v2_17ca866, 0
  br i1 %v2_17cac68, label %dec_label_pc_17d68, label %dec_label_pc_17cb4.preheader.lr.ph

dec_label_pc_17f88:                               ; preds = %dec_label_pc_17e08
  %v0_17f98 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17f98, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_17fa0 = load i32, i32* @r8, align 4
  %v1_17fa0 = add i32 %v0_17fa0, 32
  %v2_17fa0 = inttoptr i32 %v1_17fa0 to i32*
  %v3_17fa0 = load i32, i32* %v2_17fa0, align 4
  store i32 %v3_17fa0, i32* @r4, align 4
  %v5_17fa4 = call i32 @_Unwind_VRS_Get(i32 %v0_17f98, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17fa4, i32* %r0.global-to-local, align 4
  %v3_17fa8 = load i32, i32* %stack_var_-48, align 4
  %v0_17fac = load i32, i32* @r4, align 4
  %v9_17fac = icmp eq i32 %v0_17fac, %v3_17fa8
  br i1 %v9_17fac, label %dec_label_pc_18054, label %dec_label_pc_17f88.dec_label_pc_17fb4_crit_edge

dec_label_pc_17f88.dec_label_pc_17fb4_crit_edge:  ; preds = %dec_label_pc_17f88
  %v0_17fb4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17fb4

dec_label_pc_17fb4:                               ; preds = %dec_label_pc_17f88.dec_label_pc_17fb4_crit_edge, %dec_label_pc_18054
  %v0_17fb4 = phi i32 [ %v0_17fb4.pre, %dec_label_pc_17f88.dec_label_pc_17fb4_crit_edge ], [ %v1_18058, %dec_label_pc_18054 ]
  %v1_17fb4 = inttoptr i32 %v0_17fb4 to i32*
  %v2_17fb4 = load i32, i32* %v1_17fb4, align 4
  %v4_17fb4 = add i32 %v0_17fb4, 4
  store i32 %v4_17fb4, i32* @r7, align 4
  br label %dec_label_pc_17f74

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17ec8
  %v0_17fd0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17fd0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_17fd8 = load i32, i32* @r8, align 4
  %v1_17fd8 = add i32 %v0_17fd8, 32
  %v2_17fd8 = inttoptr i32 %v1_17fd8 to i32*
  %v3_17fd8 = load i32, i32* %v2_17fd8, align 4
  store i32 %v3_17fd8, i32* @r4, align 4
  %v5_17fdc = call i32 @_Unwind_VRS_Get(i32 %v0_17fd0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17fdc, i32* %r0.global-to-local, align 4
  %v3_17fe0 = load i32, i32* %stack_var_-48, align 4
  %v0_17fe4 = load i32, i32* @r4, align 4
  %v9_17fe4 = icmp eq i32 %v0_17fe4, %v3_17fe0
  br i1 %v9_17fe4, label %dec_label_pc_17fec, label %dec_label_pc_17f40

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fc0
  %v0_17fec = load i32, i32* @r8, align 4
  %v1_17fec = add i32 %v0_17fec, 40
  %v2_17fec = inttoptr i32 %v1_17fec to i32*
  %v3_17fec = load i32, i32* %v2_17fec, align 4
  %v1_17ff0 = load i32, i32* @r7, align 4
  %v9_17ff0 = icmp eq i32 %v3_17fec, %v1_17ff0
  br i1 %v9_17ff0, label %dec_label_pc_17ff8, label %dec_label_pc_17f40

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17fec
  %v1_17ff8 = inttoptr i32 %v3_17fec to i32*
  %v2_17ff8 = load i32, i32* %v1_17ff8, align 4
  %v1_17ffc = and i32 %v2_17ff8, 1073741824
  %v2_17ffc = icmp eq i32 %v1_17ffc, 0
  br i1 %v2_17ffc, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_17ff8
  %v2_18000 = or i32 %v2_17ff8, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_17ff8
  %tmp208 = bitcast i32 %v2_17ff8 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_18004 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_18008 = phi i32 [ %v2_18138, %.thread28 ], [ %v2_18138, %bb169 ], [ %v3_17fec, %bb165 ], [ %v3_17fec, %.thread26 ]
  %v0_18008 = phi i32 [ %v2_18148, %.thread28 ], [ %v2_18144, %bb169 ], [ %v2_18000, %bb165 ], [ %v2_18004, %.thread26 ]
  %v2_18008 = add i32 %v0_18008, %v1_18008
  store i32 %v2_18008, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18020 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18020, i32* %r0.global-to-local, align 4
  %v5_18028 = call i32 @_Unwind_VRS_Set(i32 %v0_18020, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_18020, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18040 = load i32, i32* @r8, align 4
  store i32 %v0_18040, i32* %stack_var_-48, align 4
  %v5_18048 = call i32 @_Unwind_VRS_Set(i32 %v0_18020, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_18054:                               ; preds = %dec_label_pc_17f88
  %v0_18054 = load i32, i32* @r8, align 4
  %v1_18054 = add i32 %v0_18054, 40
  %v2_18054 = inttoptr i32 %v1_18054 to i32*
  %v3_18054 = load i32, i32* %v2_18054, align 4
  %v1_18058 = load i32, i32* @r7, align 4
  %v9_18058 = icmp eq i32 %v3_18054, %v1_18058
  br i1 %v9_18058, label %dec_label_pc_18060, label %dec_label_pc_17fb4

dec_label_pc_18060:                               ; preds = %dec_label_pc_18054
  %v1_18064 = add i32 %v3_18054, 4
  store i32 %v1_18064, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1806c = add i32 %v0_18054, 44
  %v3_1806c = inttoptr i32 %v2_1806c to i32*
  store i32 0, i32* %v3_1806c, align 4
  %v0_18070 = load i32, i32* %r2.global-to-local, align 4
  %v1_18070 = load i32, i32* @r8, align 4
  %v2_18070 = add i32 %v1_18070, 48
  %v3_18070 = inttoptr i32 %v2_18070 to i32*
  store i32 %v0_18070, i32* %v3_18070, align 4
  %v0_18074 = load i32, i32* @sl, align 4
  %v1_18074 = load i32, i32* @r8, align 4
  %v2_18074 = add i32 %v1_18074, 40
  %v3_18074 = inttoptr i32 %v2_18074 to i32*
  store i32 %v0_18074, i32* %v3_18074, align 4
  %v0_18078 = load i32, i32* %r0.global-to-local, align 4
  %v1_18078 = load i32, i32* @r8, align 4
  %v2_18078 = add i32 %v1_18078, 52
  %v3_18078 = inttoptr i32 %v2_18078 to i32*
  store i32 %v0_18078, i32* %v3_18078, align 4
  %v0_1807c = load i32, i32* @r7, align 4
  %v1_1807c = inttoptr i32 %v0_1807c to i32*
  %v2_1807c = load i32, i32* %v1_1807c, align 4
  %v1_18080 = icmp slt i32 %v2_1807c, 0
  br i1 %v1_18080, label %dec_label_pc_18088, label %dec_label_pc_18134

dec_label_pc_18088:                               ; preds = %dec_label_pc_18060
  %v0_18088 = load i32, i32* %r2.global-to-local, align 4
  %v1_18088 = add i32 %v0_18088, -3
  store i32 %v1_18088, i32* %r2.global-to-local, align 4
  %v0_1808c = load i32, i32* %r0.global-to-local, align 4
  %v1_1808c = add i32 %v0_1808c, 4
  store i32 %v1_1808c, i32* @r6, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_18098:                               ; preds = %dec_label_pc_17ea8, %dec_label_pc_17f34, %dec_label_pc_17e60, %dec_label_pc_17e34.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_180a8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_180a8, i32* %r0.global-to-local, align 4
  %v5_180b0 = call i32 @_Unwind_VRS_Get(i32 %v0_180a8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_180b4 = load i32, i32* @r7, align 4
  %v1_180b4 = load i32, i32* @r8, align 4
  %v2_180b4 = add i32 %v1_180b4, 40
  %v3_180b4 = inttoptr i32 %v2_180b4 to i32*
  store i32 %v0_180b4, i32* %v3_180b4, align 4
  %v3_180b8 = load i32, i32* %stack_var_-48, align 4
  %v3_180bc = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_180bc, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_180c4 = load i32, i32* @r8, align 4
  %v2_180c4 = add i32 %v1_180c4, 32
  %v3_180c4 = inttoptr i32 %v2_180c4 to i32*
  store i32 %v3_180b8, i32* %v3_180c4, align 4
  %v0_180c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_180c8 = load i32, i32* @r8, align 4
  %v2_180c8 = add i32 %v1_180c8, 36
  %v3_180c8 = inttoptr i32 %v2_180c8 to i32*
  store i32 %v0_180c8, i32* %v3_180c8, align 4
  %v1_17e04.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_180d0:                               ; preds = %bb155
  %v1_180d0 = inttoptr i32 %v0_17d58 to i32*
  %v2_180d0 = load i32, i32* %v1_180d0, align 4
  %v1_180d4 = add i32 %v0_17d58, 4
  %v1_180d8 = and i32 %v2_180d0, 1073741824
  %v2_180d8 = icmp eq i32 %v1_180d8, 0
  %v2_180dc = or i32 %v2_180d0, -2147483648
  %tmp210 = bitcast i32 %v2_180d0 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_180e0 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_180d8, i32 %v2_180e0, i32 %v2_180dc
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_180e4 = load i32, i32* @r8, align 4
  %v2_180e4 = add i32 %v1_180e4, 56
  %v3_180e4 = inttoptr i32 %v2_180e4 to i32*
  store i32 %v1_180d4, i32* %v3_180e4, align 4
  %v0_180e8 = load i32, i32* @r8, align 4
  store i32 %v0_180e8, i32* %r0.global-to-local, align 4
  %v4_180f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 32) to i32*), align 4
  store i32 98560, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_180f4)
  %v0_18100 = load i32, i32* %r0.global-to-local, align 4
  %v2_18100 = icmp eq i32 %v0_18100, 0
  br i1 %v2_18100, label %dec_label_pc_17df8, label %dec_label_pc_18108

dec_label_pc_18108:                               ; preds = %dec_label_pc_180d0
  %v0_18108 = load i32, i32* %r4.global-to-local, align 4
  %v1_18108 = load i32, i32* @r7, align 4
  %v2_18108 = add i32 %v1_18108, %v0_18108
  store i32 %v2_18108, i32* %stack_var_-48, align 4
  %v0_18118 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18118, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_18128 = call i32 @_Unwind_VRS_Set(i32 %v0_18118, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_18134:                               ; preds = %dec_label_pc_18060
  %v0_18134 = load i32, i32* @sl, align 4
  %v3_18134 = mul i32 %v0_18134, 4
  %v0_18138 = load i32, i32* %r0.global-to-local, align 4
  %v2_18138 = add i32 %v0_18138, %v3_18134
  %v3_18138 = inttoptr i32 %v2_18138 to i32*
  %v4_18138 = load i32, i32* %v3_18138, align 4
  %v1_1813c = and i32 %v4_18138, 1073741824
  %v2_1813c = icmp eq i32 %v1_1813c, 0
  br i1 %v2_1813c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_18134
  %v2_18144 = or i32 %v4_18138, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_18134
  %tmp212 = bitcast i32 %v4_18138 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_18148 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_18138, { 2, 1, 0 }
  uselistorder i32 %v1_1808c, { 1, 0 }
  uselistorder i32 %v1_18088, { 1, 0 }
  uselistorder i32 %v1_18058, { 1, 0 }
  uselistorder i32 %v0_18020, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17fec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17fb4, { 1, 0 }
  uselistorder i32 %v0_17fb4, { 1, 0 }
  uselistorder i32 %v2_17ca866, { 1, 0 }
  uselistorder i32 %v2_17f80, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_17ca8, { 1, 0 }
  uselistorder i32 %v1_17f40, { 1, 0 }
  uselistorder i32 %v3_17edc, { 2, 0, 1 }
  uselistorder i32 %v0_17ebc, { 1, 0 }
  uselistorder i32 %v0_17ebc.pre, { 1, 0 }
  uselistorder i32 %v1_17e14, { 1, 0 }
  uselistorder i32 %v2_17e0c, { 1, 0 }
  uselistorder i32 %v0_17d9c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_17d5c, { 1, 0 }
  uselistorder i32 %v1_17d58, { 1, 0 }
  uselistorder i32 %v0_17d58, { 1, 0, 2 }
  uselistorder i32 %v4_17d30, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17ed4, { 1, 2, 0 }
  uselistorder i32 %v0_17d08, { 1, 0 }
  uselistorder i32 %v3_17d04, { 1, 0, 2 }
  uselistorder i32 %v1_17cd8, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_17f10, { 1, 0 }
  uselistorder i1 %v2_17d44, { 1, 0, 2 }
  uselistorder i32 %v1_17c48, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 19, 0, 5, 9, 10, 14, 15, 3, 1, 6, 11, 2, 4, 12, 13, 16, 17, 7, 8, 18 }
  uselistorder i32 -3, { 2, 0, 3, 1, 4, 6, 5 }
  uselistorder i32 52, { 22, 2, 3, 1, 8, 13, 9, 5, 15, 11, 10, 16, 14, 12, 17, 18, 4, 19, 0, 20, 21, 6, 7 }
  uselistorder i32 48, { 48, 30, 9, 31, 32, 4, 10, 33, 11, 34, 12, 35, 13, 44, 6, 14, 1, 36, 15, 40, 41, 37, 38, 16, 17, 2, 43, 39, 42, 18, 19, 20, 5, 0, 21, 22, 23, 3, 24, 25, 26, 7, 27, 45, 46, 47, 28, 29, 8 }
  uselistorder i32 44, { 33, 6, 7, 8, 9, 10, 1, 34, 35, 11, 12, 0, 13, 2, 3, 4, 17, 18, 19, 20, 21, 22, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5 }
  uselistorder i32 -2147483648, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 18, 19, 20, 21, 2 }
  uselistorder i32 1073741824, { 8, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 65536, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 0, 12, 13, 15, 14, 20, 16, 21, 17, 22, 18, 23, 19, 24, 25, 26, 30, 27, 31, 28, 32, 29, 33, 42, 43, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_222a8.80 to i32), i32 108) to i32*), { 1, 0 }
  uselistorder i32 88, { 11, 12, 9, 0, 10, 7, 8, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_222a8.80 to i32), { 45, 8, 46, 47, 9, 10, 89, 119, 11, 16, 18, 13, 14, 17, 12, 15, 120, 121, 90, 19, 122, 20, 123, 92, 91, 53, 50, 51, 52, 49, 21, 56, 48, 93, 94, 124, 22, 23, 95, 125, 2, 126, 127, 128, 129, 130, 131, 132, 3, 4, 0, 5, 96, 97, 133, 24, 98, 134, 25, 26, 27, 28, 29, 58, 57, 59, 135, 136, 44, 99, 137, 100, 138, 30, 31, 101, 102, 103, 139, 32, 140, 141, 142, 60, 33, 143, 144, 145, 34, 104, 146, 147, 35, 36, 37, 148, 105, 149, 38, 150, 39, 151, 152, 106, 153, 40, 154, 6, 107, 155, 108, 156, 109, 157, 41, 158, 159, 42, 43, 111, 160, 161, 162, 163, 164, 165, 54, 84, 80, 78, 77, 79, 81, 82, 83, 76, 85, 71, 73, 72, 70, 69, 74, 75, 66, 65, 68, 67, 64, 63, 62, 61, 113, 86, 112, 87, 55, 88, 110, 114, 166, 7, 115, 116, 167, 117, 1, 118 }
  uselistorder i32 -2, { 0, 26, 27, 9, 10, 2, 3, 8, 12, 11, 20, 13, 14, 21, 5, 6, 4, 15, 16, 17, 1, 7, 18, 22, 23, 24, 25, 19 }
  uselistorder i32 80, { 10, 11, 12, 4, 5, 6, 9, 7, 8, 1, 2, 0, 3 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18098, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17fb4, { 1, 0 }
  uselistorder label %dec_label_pc_17f7c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_17f40, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_17ebc, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_17dfc, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_17df8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17d58, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_17cb4, { 1, 0 }
  uselistorder label %dec_label_pc_17cb4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17cb4.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_18154(i32 %arg1) local_unnamed_addr {
dec_label_pc_18154:
  %v0_18154 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18154, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18154
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18154, %bb
  %v4_1815c = phi i32 [ %arg1, %dec_label_pc_18154 ], [ 0, %bb ]
  ret i32 %v4_1815c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 43, 16, 17, 14, 18, 57, 58, 59, 60, 61, 62, 11, 12, 15, 63, 64, 65, 66, 13, 44, 39, 45, 46, 47, 48, 49, 6, 36, 5, 8, 67, 19, 9, 10, 20, 21, 40, 4, 34, 3, 24, 25, 26, 50, 22, 23, 51, 52, 53, 54, 55, 56, 41, 42, 27, 28, 31, 30, 29, 32, 33, 7, 38, 35, 37, 68, 69, 70, 71 }
  uselistorder i1* @cpsr_z, { 1, 2, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 49, 19, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 48, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18164 = load i32, i32* @r1, align 4
  %v2_18164 = load i32, i32* @r2, align 4
  %v4_18164 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_18164, i32 %v2_18164, i32 2)
  ret i32 %v4_18164
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1816c = load i32, i32* @r1, align 4
  %v2_1816c = load i32, i32* @r2, align 4
  %v4_1816c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1816c, i32 %v2_1816c, i32 1)
  ret i32 %v4_1816c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_18174 = load i32, i32* @r1, align 4
  %v2_18174 = load i32, i32* @r2, align 4
  %v4_18174 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_18174, i32 %v2_18174, i32 0)
  ret i32 %v4_18174

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 15, 16, 17, 131, 23, 24, 25, 26, 27, 3, 28, 29, 30, 31, 32, 33, 14, 34, 35, 36, 73, 74, 13, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 77, 18, 51, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 78, 79, 80, 81, 82, 101, 102, 103, 104, 105, 106, 19, 2, 87, 20, 67, 68, 69, 70, 132, 133, 134, 135, 85, 86, 4, 75, 76, 107, 108, 109, 88, 71, 138, 139, 140, 89, 5, 90, 91, 6, 92, 93, 94, 95, 96, 97, 98, 99, 100, 21, 112, 113, 114, 141, 136, 137, 150, 151, 152, 153, 142, 7, 143, 83, 84, 8, 117, 118, 119, 9, 120, 121, 122, 10, 115, 116, 123, 11, 124, 110, 72, 154, 161, 162, 155, 156, 157, 158, 159, 160, 0, 1, 163, 12, 22, 144, 145, 146, 147, 148, 149, 111, 125, 126, 127, 128, 129, 130 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1817c = add i32 %tmp, 56
  %v4_1817c = inttoptr i32 %v3_1817c to i32*
  %v5_1817c = load i32, i32* %v4_1817c, align 4
  %v6_1817c = add i32 %tmp, 60
  %v7_1817c = inttoptr i32 %v6_1817c to i32*
  %v8_1817c = load i32, i32* %v7_1817c, align 4
  %v2_18188 = load i32, i32* %arg1, align 4
  %v3_18188 = add i32 %tmp, 4
  %v4_18188 = inttoptr i32 %v3_18188 to i32*
  %v5_18188 = load i32, i32* %v4_18188, align 4
  store i32 %v5_18188, i32* @r1, align 4
  %v12_18188 = add i32 %tmp, 16
  %v13_18188 = inttoptr i32 %v12_18188 to i32*
  %v14_18188 = load i32, i32* %v13_18188, align 4
  store i32 %v14_18188, i32* @r4, align 4
  %v15_18188 = add i32 %tmp, 20
  %v16_18188 = inttoptr i32 %v15_18188 to i32*
  %v17_18188 = load i32, i32* %v16_18188, align 4
  store i32 %v17_18188, i32* @r5, align 4
  %v18_18188 = add i32 %tmp, 24
  %v19_18188 = inttoptr i32 %v18_18188 to i32*
  %v20_18188 = load i32, i32* %v19_18188, align 4
  store i32 %v20_18188, i32* @r6, align 4
  %v21_18188 = add i32 %tmp, 28
  %v22_18188 = inttoptr i32 %v21_18188 to i32*
  %v23_18188 = load i32, i32* %v22_18188, align 4
  store i32 %v23_18188, i32* @r7, align 4
  %v24_18188 = add i32 %tmp, 32
  %v25_18188 = inttoptr i32 %v24_18188 to i32*
  %v26_18188 = load i32, i32* %v25_18188, align 4
  store i32 %v26_18188, i32* @r8, align 4
  %v27_18188 = add i32 %tmp, 36
  %v28_18188 = inttoptr i32 %v27_18188 to i32*
  %v29_18188 = load i32, i32* %v28_18188, align 4
  store i32 %v29_18188, i32* @sb, align 4
  %v30_18188 = add i32 %tmp, 40
  %v31_18188 = inttoptr i32 %v30_18188 to i32*
  %v32_18188 = load i32, i32* %v31_18188, align 4
  store i32 %v32_18188, i32* @sl, align 4
  store i32 %v8_1817c, i32* @ip, align 4
  store i32 %v5_1817c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1817c)
  ret i32 %v2_18188

; uselistorder directives
  uselistorder i32 %v8_1817c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 143, 144, 145, 10, 146, 23, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 58, 59, 33, 32, 0, 34, 35, 1, 36, 37, 38, 39, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 40, 42, 41, 2, 44, 45, 46, 47, 48, 49, 50, 51, 43, 52, 53, 54, 55, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 11, 12, 103, 104, 105, 106, 108, 109, 107, 110, 4, 111, 5, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 56, 57, 6, 149, 147, 148, 150, 151, 92, 93, 94, 95, 96, 97, 69, 129, 130, 131, 138, 139, 99, 100, 65, 9, 66, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 7, 186, 187, 188, 189, 190, 191, 192, 193, 194, 13, 14, 101, 102, 15, 195, 196, 140, 141, 16, 132, 133, 17, 135, 8, 136, 137, 18, 134, 152, 200, 197, 198, 199, 3, 201, 142, 19 }
  uselistorder i32 40, { 24, 20, 21, 22, 23, 7, 14, 15, 8, 9, 10, 11, 12, 18, 13, 25, 2, 4, 5, 19, 1, 17, 6, 3, 16, 0 }
  uselistorder i32* @sb, { 78, 18, 19, 20, 21, 26, 27, 28, 29, 5, 6, 7, 8, 9, 10, 11, 0, 12, 30, 31, 32, 33, 34, 35, 36, 54, 42, 43, 44, 1, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 13, 14, 15, 79, 80, 46, 47, 48, 49, 50, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 37, 38, 39, 40, 41, 22, 23, 24, 25, 2, 16, 17, 73, 76, 74, 75, 77, 3, 4 }
  uselistorder i32 36, { 23, 22, 6, 4, 13, 14, 10, 11, 17, 18, 19, 20, 21, 15, 7, 12, 8, 24, 0, 1, 2, 5, 16, 9, 3 }
  uselistorder i32* @r8, { 153, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 3, 152, 40, 41, 42, 43, 44, 45, 50, 51, 19, 20, 21, 22, 23, 24, 25, 2, 26, 0, 27, 28, 29, 30, 13, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 73, 90, 91, 92, 93, 94, 95, 4, 96, 97, 98, 99, 100, 101, 31, 32, 33, 74, 1, 75, 76, 154, 155, 68, 69, 5, 70, 71, 72, 102, 103, 104, 105, 106, 107, 108, 109, 9, 10, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 11, 61, 6, 62, 63, 64, 65, 66, 46, 47, 48, 49, 34, 35, 36, 156, 12, 37, 38, 39, 15, 16, 7, 17, 114, 115, 116, 117, 118, 8, 119, 120, 121, 122, 123, 124, 125, 126, 110, 111, 112, 113, 127, 128, 129, 130, 131, 132, 133, 134, 18 }
  uselistorder i32 32, { 98, 31, 95, 96, 97, 50, 51, 52, 53, 24, 25, 33, 48, 49, 27, 28, 54, 26, 34, 55, 56, 57, 58, 32, 59, 60, 38, 18, 61, 62, 76, 78, 79, 63, 64, 17, 65, 0, 39, 66, 67, 68, 69, 70, 71, 19, 45, 90, 91, 40, 92, 80, 81, 72, 73, 99, 46, 100, 23, 44, 101, 16, 84, 85, 77, 94, 35, 29, 88, 86, 87, 74, 75, 89, 41, 1, 47, 82, 83, 42, 2, 3, 5, 4, 93, 7, 6, 9, 8, 11, 10, 30, 13, 12, 20, 21, 15, 14, 22, 36, 37, 43 }
  uselistorder i32 28, { 51, 17, 18, 33, 4, 19, 20, 21, 22, 23, 24, 25, 0, 26, 7, 35, 5, 38, 6, 39, 44, 46, 47, 8, 48, 9, 45, 10, 11, 40, 34, 12, 27, 13, 52, 28, 53, 54, 55, 56, 36, 37, 32, 49, 14, 50, 1, 41, 42, 29, 43, 15, 30, 16, 2, 31, 3 }
  uselistorder i32 24, { 48, 47, 9, 10, 27, 31, 33, 34, 11, 12, 13, 14, 15, 16, 17, 18, 0, 44, 4, 35, 36, 19, 20, 49, 5, 6, 50, 37, 38, 32, 45, 1, 42, 39, 40, 41, 28, 29, 21, 43, 7, 30, 22, 23, 24, 3, 8, 25, 26, 46, 2 }
  uselistorder i32 20, { 51, 49, 50, 52, 2, 6, 11, 7, 0, 15, 16, 17, 33, 34, 8, 18, 19, 20, 21, 3, 9, 39, 35, 36, 22, 23, 53, 24, 54, 55, 56, 37, 38, 32, 57, 10, 58, 59, 4, 60, 40, 12, 25, 41, 29, 30, 31, 26, 13, 27, 28, 1, 61, 42, 43, 44, 45, 46, 47, 48, 14, 5 }
  uselistorder i32* @r1, { 235, 20, 21, 22, 4, 236, 58, 59, 19, 60, 61, 62, 63, 64, 23, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 54, 55, 24, 56, 57, 76, 5, 77, 78, 79, 80, 81, 82, 83, 18, 84, 85, 86, 87, 124, 25, 88, 125, 126, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 26, 127, 141, 27, 28, 100, 101, 102, 29, 39, 103, 104, 105, 15, 106, 107, 108, 30, 109, 110, 142, 143, 144, 237, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 162, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 6, 206, 207, 208, 209, 16, 111, 112, 210, 212, 211, 31, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 7, 163, 164, 115, 173, 117, 113, 2, 239, 114, 238, 242, 36, 160, 161, 8, 138, 139, 224, 225, 226, 227, 228, 174, 175, 176, 177, 121, 32, 128, 1, 129, 130, 37, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 10, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 9, 285, 286, 38, 33, 165, 167, 168, 169, 170, 171, 172, 131, 132, 133, 134, 135, 136, 166, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 152, 140, 3, 137, 34, 116, 118, 287, 35, 289, 290, 291, 292, 45, 53, 288, 153, 154, 231, 11, 232, 12, 233, 229, 41, 202, 203, 17, 243, 42, 13, 46, 47, 48, 49, 50, 51, 52, 14, 295, 296, 297, 298, 0, 299, 43, 40, 293, 294, 240, 241, 44, 119, 120, 122, 123, 230, 234 }
  uselistorder i32 60, { 2, 22, 23, 24, 10, 11, 3, 18, 19, 20, 21, 14, 15, 4, 12, 13, 5, 16, 17, 6, 7, 1, 8, 9, 0 }
  uselistorder i32 56, { 3, 31, 32, 7, 8, 9, 6, 17, 18, 10, 11, 1, 4, 23, 24, 25, 26, 27, 28, 29, 14, 15, 16, 13, 12, 2, 30, 19, 20, 21, 22, 0, 5 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18198 = load i32, i32* @r0, align 4
  ret i32 %v1_18198
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_181a0 = load i32, i32* @r0, align 4
  ret i32 %v1_181a0
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_181b4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_181b8 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_181b4, i32 0)
  ret i32 %v2_181b8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_181d8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_181dc = call i32 @__gnu_Unwind_Resume(i32 %v2_181d8, i32 0)
  ret i32 %v2_181dc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_181fc = ptrtoint i32* %stack_var_-68 to i32
  %v2_18200 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_181fc, i32 0)
  ret i32 %v2_18200

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_18220 = ptrtoint i32* %stack_var_-68 to i32
  %v6_18224 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_18220, i32 %arg2, i8* %arg3, i32 %v2_18220)
  ret i32 %v6_18224

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_18250 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_18258 = add i32 %tmp1, 76
  %v2_18258 = inttoptr i32 %v1_18258 to i32*
  %v3_18258 = load i32, i32* %v2_18258, align 4
  %v1_1825c = add i32 %v3_18258, 7
  %v2_1825c = inttoptr i32 %v1_1825c to i8*
  %v3_1825c = load i8, i8* %v2_1825c, align 1
  %v4_1825c = zext i8 %v3_1825c to i32
  %v1_18260 = add i32 %v3_18258, 8
  %v3_18264 = mul nuw nsw i32 %v4_1825c, 4
  %v2_18268 = add i32 %v3_18264, %v1_18260
  %v3_18268 = inttoptr i32 %v2_18268 to i8*
  ret i8* %v3_18268
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_18278 = load i32, i32* @r6, align 4
  %v21_18278 = load i32, i32* @lr, align 4
  %v0_1827c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1827c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1828c

dec_label_pc_1828c:                               ; preds = %dec_label_pc_1828c.backedge, %entry
  %v3_18298 = phi i32 [ %v0_1828c.pre, %dec_label_pc_1828c.backedge ], [ %tmp, %entry ]
  %v1_1828c = add i32 %v3_18298, 8
  %v2_1828c = inttoptr i32 %v1_1828c to i8*
  %v3_1828c = load i8, i8* %v2_1828c, align 1
  %v4_1828c = zext i8 %v3_1828c to i32
  store i32 %v4_1828c, i32* %r3.global-to-local, align 4
  %v2_18290 = icmp eq i8 %v3_1828c, 0
  store i1 %v2_18290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18290, label %dec_label_pc_182a0, label %.thread

.thread:                                          ; preds = %dec_label_pc_1828c
  %v2_18294 = add nsw i32 %v4_1828c, -1
  store i32 %v2_18294, i32* %r3.global-to-local, align 4
  %v2_18298 = trunc i32 %v2_18294 to i8
  store i8 %v2_18298, i8* %v2_1828c, align 1
  %v0_1829c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1829c.pr.pr, label %.thread.dec_label_pc_182a0_crit_edge, label %dec_label_pc_182c8

.thread.dec_label_pc_182a0_crit_edge:             ; preds = %.thread
  %v0_182a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_182a0

dec_label_pc_182a0:                               ; preds = %.thread.dec_label_pc_182a0_crit_edge, %dec_label_pc_1828c
  %v0_182a0 = phi i32 [ %v0_182a0.pre, %.thread.dec_label_pc_182a0_crit_edge ], [ %v3_18298, %dec_label_pc_1828c ]
  %v1_182a0 = add i32 %v0_182a0, 9
  %v2_182a0 = inttoptr i32 %v1_182a0 to i8*
  %v3_182a0 = load i8, i8* %v2_182a0, align 1
  %v4_182a0 = zext i8 %v3_182a0 to i32
  store i32 %v4_182a0, i32* %r3.global-to-local, align 4
  %v2_182a4 = icmp eq i8 %v3_182a0, 0
  store i1 %v2_182a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182a4, label %dec_label_pc_183a8, label %dec_label_pc_182ac

dec_label_pc_182ac:                               ; preds = %dec_label_pc_1839c, %dec_label_pc_182a0
  %v2_182b0 = phi i32 [ %v0_1839c, %dec_label_pc_1839c ], [ %v0_182a0, %dec_label_pc_182a0 ]
  %v0_182ac = phi i32 [ %v4_1839c, %dec_label_pc_1839c ], [ %v4_182a0, %dec_label_pc_182a0 ]
  %v1_182ac = add nsw i32 %v0_182ac, -1
  store i32 %v1_182ac, i32* %r3.global-to-local, align 4
  %v1_182b0 = trunc i32 %v1_182ac to i8
  %v3_182b0 = add i32 %v2_182b0, 9
  %v4_182b0 = inttoptr i32 %v3_182b0 to i8*
  store i8 %v1_182b0, i8* %v4_182b0, align 1
  %v0_182b4 = load i32, i32* @r5, align 4
  %v1_182b4 = add i32 %v0_182b4, 4
  %v2_182b4 = inttoptr i32 %v1_182b4 to i32*
  %v3_182b4 = load i32, i32* %v2_182b4, align 4
  store i32 %v3_182b4, i32* %r2.global-to-local, align 4
  %v1_182b8 = inttoptr i32 %v3_182b4 to i32*
  %v2_182b8 = load i32, i32* %v1_182b8, align 4
  store i32 %v2_182b8, i32* %r0.global-to-local, align 4
  %v4_182b8 = add i32 %v3_182b4, 4
  store i32 %v4_182b8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_182c0 = inttoptr i32 %v0_182b4 to i32*
  store i32 %v2_182b8, i32* %v1_182c0, align 4
  %v5_182c0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_182c0, i32* %v2_182b4, align 4
  %v0_182c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_182c4 = trunc i32 %v0_182c4 to i8
  %v2_182c4 = load i32, i32* @r5, align 4
  %v3_182c4 = add i32 %v2_182c4, 8
  %v4_182c4 = inttoptr i32 %v3_182c4 to i8*
  store i8 %v1_182c4, i8* %v4_182c4, align 1
  br label %dec_label_pc_182c8

dec_label_pc_182c8:                               ; preds = %.thread, %dec_label_pc_182ac, %.thread6
  %v0_182c8 = load i32, i32* @r5, align 4
  %v1_182c8 = inttoptr i32 %v0_182c8 to i32*
  %v2_182c8 = load i32, i32* %v1_182c8, align 4
  %v3_182cc = udiv i32 %v2_182c8, 16777216
  store i32 %v3_182cc, i32* @r4, align 4
  store i32 %v3_182cc, i32* %ip.global-to-local, align 4
  %v3_182d4 = mul i32 %v2_182c8, 256
  store i32 %v3_182d4, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_182c8, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_182d4, i32* %v1_182c8, align 4
  br i1 %tmp183, label %dec_label_pc_183a8, label %dec_label_pc_182e4

dec_label_pc_182e4:                               ; preds = %dec_label_pc_182c8
  %v0_182e4 = load i32, i32* @r4, align 4
  %v1_182e4 = and i32 %v0_182e4, 128
  store i32 %v1_182e4, i32* %r1.global-to-local, align 4
  %v2_182e4 = icmp eq i32 %v1_182e4, 0
  store i1 %v2_182e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182e4, label %dec_label_pc_183c0, label %dec_label_pc_182ec

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182e4
  %v1_182ec = and i32 %v0_182e4, 240
  store i32 %v1_182ec, i32* @r6, align 4
  %v7_182f0 = icmp eq i32 %v1_182ec, 128
  store i1 %v7_182f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_182f0, label %dec_label_pc_182f8, label %dec_label_pc_1841c

dec_label_pc_182f8:                               ; preds = %dec_label_pc_182ec
  %v0_182f8 = load i32, i32* @r5, align 4
  %v1_182f8 = add i32 %v0_182f8, 8
  %v2_182f8 = inttoptr i32 %v1_182f8 to i8*
  %v3_182f8 = load i8, i8* %v2_182f8, align 1
  %v4_182f8 = zext i8 %v3_182f8 to i32
  store i32 %v4_182f8, i32* %r3.global-to-local, align 4
  %v2_182fc = icmp eq i8 %v3_182f8, 0
  store i1 %v2_182fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182fc, label %dec_label_pc_1830c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_182f8
  %v2_18300 = add nsw i32 %v4_182f8, -1
  store i32 %v2_18300, i32* %r3.global-to-local, align 4
  %v2_18304 = trunc i32 %v2_18300 to i8
  store i8 %v2_18304, i8* %v2_182f8, align 1
  %v0_18308.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18308.pr.pr, label %.thread3.dec_label_pc_1830c_crit_edge, label %dec_label_pc_1833c

.thread3.dec_label_pc_1830c_crit_edge:            ; preds = %.thread3
  %v0_1830c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1830c

dec_label_pc_1830c:                               ; preds = %.thread3.dec_label_pc_1830c_crit_edge, %dec_label_pc_182f8
  %v2_18320 = phi i32 [ %v0_1830c.pre, %.thread3.dec_label_pc_1830c_crit_edge ], [ %v0_182f8, %dec_label_pc_182f8 ]
  %v1_1830c = add i32 %v2_18320, 9
  %v2_1830c = inttoptr i32 %v1_1830c to i8*
  %v3_1830c = load i8, i8* %v2_1830c, align 1
  %v4_1830c = zext i8 %v3_1830c to i32
  store i32 %v4_1830c, i32* %r3.global-to-local, align 4
  %v2_18310 = icmp eq i8 %v3_1830c, 0
  store i1 %v2_18310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18310, label %dec_label_pc_1834c, label %dec_label_pc_1831c

dec_label_pc_1831c:                               ; preds = %dec_label_pc_1830c
  %v1_1831c = add nsw i32 %v4_1830c, -1
  store i32 %v1_1831c, i32* %r3.global-to-local, align 4
  %v1_18320 = trunc i32 %v1_1831c to i8
  store i8 %v1_18320, i8* %v2_1830c, align 1
  %v0_18324 = load i32, i32* @r5, align 4
  %v1_18324 = add i32 %v0_18324, 4
  %v2_18324 = inttoptr i32 %v1_18324 to i32*
  %v3_18324 = load i32, i32* %v2_18324, align 4
  store i32 %v3_18324, i32* %r2.global-to-local, align 4
  %v1_18328 = inttoptr i32 %v3_18324 to i32*
  %v2_18328 = load i32, i32* %v1_18328, align 4
  store i32 %v2_18328, i32* %r0.global-to-local, align 4
  %v4_18328 = add i32 %v3_18324, 4
  store i32 %v4_18328, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18328, i32* %v2_18324, align 4
  %v0_18334 = load i32, i32* %r3.global-to-local, align 4
  %v1_18334 = trunc i32 %v0_18334 to i8
  %v2_18334 = load i32, i32* @r5, align 4
  %v3_18334 = add i32 %v2_18334, 8
  %v4_18334 = inttoptr i32 %v3_18334 to i8*
  store i8 %v1_18334, i8* %v4_18334, align 1
  %v0_18338 = load i32, i32* %r0.global-to-local, align 4
  %v1_18338 = load i32, i32* @r5, align 4
  %v2_18338 = inttoptr i32 %v1_18338 to i32*
  store i32 %v0_18338, i32* %v2_18338, align 4
  br label %dec_label_pc_1833c

dec_label_pc_1833c:                               ; preds = %.thread3, %dec_label_pc_1831c
  %v0_1833c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1833c, i32* %r3.global-to-local, align 4
  %v3_18340 = mul i32 %v0_1833c, 256
  store i32 %v3_18340, i32* %r0.global-to-local, align 4
  %v1_18344 = load i32, i32* @r5, align 4
  %v2_18344 = inttoptr i32 %v1_18344 to i32*
  store i32 %v3_18340, i32* %v2_18344, align 4
  %v0_18348 = load i32, i32* %r3.global-to-local, align 4
  %v3_18348 = udiv i32 %v0_18348, 16777216
  br label %dec_label_pc_1834c

dec_label_pc_1834c:                               ; preds = %dec_label_pc_1830c, %dec_label_pc_1833c
  %storemerge133 = phi i32 [ %v3_18348, %dec_label_pc_1833c ], [ 176, %dec_label_pc_1830c ]
  %v1_1834c = load i32, i32* %ip.global-to-local, align 4
  %v4_1834c = mul i32 %v1_1834c, 256
  %v5_1834c = or i32 %v4_1834c, %storemerge133
  store i32 %v5_1834c, i32* %r2.global-to-local, align 4
  %v7_18350 = icmp eq i32 %v5_1834c, 32768
  store i1 %v7_18350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18350, label %dec_label_pc_1855c, label %dec_label_pc_18358

dec_label_pc_18358:                               ; preds = %dec_label_pc_1834c
  %v3_18358 = mul i32 %v5_1834c, 16
  store i32 %v3_18358, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18368 = and i32 %v3_18358, 65520
  store i32 %v3_18368, i32* %r2.global-to-local, align 4
  %v0_1836c = load i32, i32* @r7, align 4
  store i32 %v0_1836c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_18374 = call i32 @_Unwind_VRS_Pop(i32 %v0_1836c, i32 %v3_18368, i32 0, i32 0)
  store i32 %v4_18374, i32* %r0.global-to-local, align 4
  %v2_18378 = icmp eq i32 %v4_18374, 0
  store i1 %v2_18378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18378, label %dec_label_pc_18380, label %dec_label_pc_1855c

dec_label_pc_18380:                               ; preds = %dec_label_pc_18358
  %v0_18380 = load i32, i32* @r5, align 4
  %v1_18380 = add i32 %v0_18380, 8
  %v2_18380 = inttoptr i32 %v1_18380 to i8*
  %v3_18380 = load i8, i8* %v2_18380, align 1
  %v4_18380 = zext i8 %v3_18380 to i32
  store i32 %v4_18380, i32* %r3.global-to-local, align 4
  %v0_18384 = load i32, i32* @r4, align 4
  %v1_18384 = and i32 %v0_18384, 32768
  %v2_18384 = icmp eq i32 %v1_18384, 0
  store i1 %v2_18384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18384, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_18380
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18380, %bb147
  %v2_1838c = icmp eq i8 %v3_18380, 0
  store i1 %v2_1838c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1838c, label %dec_label_pc_1839c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_18390 = add nsw i32 %v4_18380, -1
  store i32 %v2_18390, i32* %r3.global-to-local, align 4
  %v2_18394 = trunc i32 %v2_18390 to i8
  store i8 %v2_18394, i8* %v2_18380, align 1
  %v0_18398.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18398.pr.pr, label %.thread6.dec_label_pc_1839c_crit_edge, label %dec_label_pc_182c8

.thread6.dec_label_pc_1839c_crit_edge:            ; preds = %.thread6
  %v0_1839c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1839c

dec_label_pc_1839c:                               ; preds = %bb148, %.thread6.dec_label_pc_1839c_crit_edge
  %v0_1839c = phi i32 [ %v0_1839c.pre, %.thread6.dec_label_pc_1839c_crit_edge ], [ %v0_18380, %bb148 ]
  %v1_1839c = add i32 %v0_1839c, 9
  %v2_1839c = inttoptr i32 %v1_1839c to i8*
  %v3_1839c = load i8, i8* %v2_1839c, align 1
  %v4_1839c = zext i8 %v3_1839c to i32
  store i32 %v4_1839c, i32* %r3.global-to-local, align 4
  %v2_183a0 = icmp eq i8 %v3_1839c, 0
  store i1 %v2_183a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183a0, label %dec_label_pc_183a8, label %dec_label_pc_182ac

dec_label_pc_183a8:                               ; preds = %dec_label_pc_1839c, %dec_label_pc_182a0, %dec_label_pc_182c8
  %v0_183a8 = load i32, i32* @sl, align 4
  %v2_183a8 = icmp eq i32 %v0_183a8, 0
  store i1 %v2_183a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_183a8, label %dec_label_pc_18470, label %bb149

bb149:                                            ; preds = %dec_label_pc_183a8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %bb149, %dec_label_pc_18924, %dec_label_pc_187c4, %dec_label_pc_185e8, %dec_label_pc_185a0, %dec_label_pc_1855c, %dec_label_pc_18470
  %v1_183bc = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_18924 ], [ 9, %dec_label_pc_187c4 ], [ 9, %dec_label_pc_185e8 ], [ 9, %dec_label_pc_185a0 ], [ 9, %dec_label_pc_1855c ], [ %v0_184a4, %dec_label_pc_18470 ]
  store i32 %v9_18278, i32* %r6.global-to-local, align 4
  store i32 %v21_18278, i32* @lr, align 4
  ret i32 %v1_183bc

dec_label_pc_183c0:                               ; preds = %dec_label_pc_182e4
  %v1_183c0 = mul i32 %v0_182e4, 4
  %v3_183c4 = and i32 %v1_183c0, 252
  store i32 %v3_183c4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_183d0 = load i32, i32* @r7, align 4
  store i32 %v0_183d0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_183d8 = add nuw nsw i32 %v3_183c4, 4
  store i32 %v1_183d8, i32* %r6.global-to-local, align 4
  %v5_183e0 = call i32 @_Unwind_VRS_Get(i32 %v0_183d0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_183e4 = load i32, i32* @r4, align 4
  %v1_183e4 = and i32 %v0_183e4, 64
  %v2_183e4 = icmp eq i32 %v1_183e4, 0
  store i1 %v2_183e4, i1* %cpsr_z.global-to-local, align 1
  %v4_183ec = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_183f8 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_183f8
  %storemerge160.p = select i1 %v2_183e4, i32 %v2_183f8, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_183ec
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_18414 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18414, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1828c.backedge

dec_label_pc_1828c.backedge:                      ; preds = %dec_label_pc_183c0, %dec_label_pc_1843c, %dec_label_pc_188c0, %dec_label_pc_1858c, %dec_label_pc_185c4, %dec_label_pc_18544, %dec_label_pc_187b0
  %v0_1828c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1828c

dec_label_pc_1841c:                               ; preds = %dec_label_pc_182ec
  %v7_1841c = icmp eq i32 %v1_182ec, 144
  store i1 %v7_1841c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1841c, label %dec_label_pc_18424, label %dec_label_pc_18564

dec_label_pc_18424:                               ; preds = %dec_label_pc_1841c
  %v1_18424 = urem i32 %v0_182e4, 16
  store i32 %v1_18424, i32* %r2.global-to-local, align 4
  %v2_18428 = icmp eq i32 %v1_18424, 15
  store i1 %v2_18428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18428, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_18424
  %v8_1842c = icmp eq i32 %v1_18424, 13
  store i1 %v8_1842c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1842c, label %bb154, label %dec_label_pc_1843c

.thread21:                                        ; preds = %dec_label_pc_18424
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1855c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1855c

dec_label_pc_1843c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18448 = load i32, i32* @r7, align 4
  store i32 %v0_18448, i32* %r0.global-to-local, align 4
  %v5_18450 = call i32 @_Unwind_VRS_Get(i32 %v0_18448, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18458 = load i32, i32* @r7, align 4
  store i32 %v0_18458, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_18468 = call i32 @_Unwind_VRS_Set(i32 %v0_18458, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18468, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1828c.backedge

dec_label_pc_18470:                               ; preds = %dec_label_pc_183a8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18480 = load i32, i32* @r7, align 4
  store i32 %v0_18480, i32* %r0.global-to-local, align 4
  %v7_18488 = call i32 @_Unwind_VRS_Get(i32 %v0_18480, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1848c = load i32, i32* @r7, align 4
  store i32 %v0_1848c, i32* %r0.global-to-local, align 4
  %v0_18490 = load i32, i32* @sl, align 4
  store i32 %v0_18490, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_18490, i32* %r3.global-to-local, align 4
  %v5_184a0 = call i32 @_Unwind_VRS_Set(i32 %v0_1848c, i32 %v0_18490, i32 15, i32 %v0_18490, i8* bitcast (i32* @0 to i8*))
  %v0_184a4 = load i32, i32* @sl, align 4
  store i32 %v0_184a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_184ac:                               ; preds = %dec_label_pc_186a0
  %v7_184ac = icmp eq i32 %v0_186a0, 199
  store i1 %v7_184ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184ac, label %dec_label_pc_18780, label %dec_label_pc_184b4

dec_label_pc_184b4:                               ; preds = %dec_label_pc_184ac
  %v1_184b4 = and i32 %v0_182e4, 248
  store i32 %v1_184b4, i32* %r3.global-to-local, align 4
  %v7_184b8 = icmp eq i32 %v1_184b4, 192
  store i1 %v7_184b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184b8, label %.thread24, label %dec_label_pc_184d0

.thread24:                                        ; preds = %dec_label_pc_184b4
  %v2_184bc = urem i32 %v0_182e4, 16
  %v2_184c0 = add nuw nsw i32 %v2_184bc, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_184c8 = or i32 %v2_184c0, 655360
  store i32 %v2_184c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_184d0:                               ; preds = %dec_label_pc_184b4
  %v7_184d0 = icmp eq i32 %v0_186a0, 200
  store i1 %v7_184d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184d0, label %dec_label_pc_18714, label %dec_label_pc_184d8

dec_label_pc_184d8:                               ; preds = %dec_label_pc_184d0
  %v7_184d8 = icmp eq i32 %v0_186a0, 201
  store i1 %v7_184d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184d8, label %dec_label_pc_184e0, label %dec_label_pc_1855c

dec_label_pc_184e0:                               ; preds = %dec_label_pc_184d8
  %v0_184e0 = load i32, i32* @r5, align 4
  %v1_184e0 = add i32 %v0_184e0, 8
  %v2_184e0 = inttoptr i32 %v1_184e0 to i8*
  %v3_184e0 = load i8, i8* %v2_184e0, align 1
  %v4_184e0 = zext i8 %v3_184e0 to i32
  store i32 %v4_184e0, i32* %r3.global-to-local, align 4
  %v2_184e4 = icmp eq i8 %v3_184e0, 0
  store i1 %v2_184e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_184e4, label %dec_label_pc_184f4, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_184e0
  %v2_184e8 = add nsw i32 %v4_184e0, -1
  store i32 %v2_184e8, i32* %r3.global-to-local, align 4
  %v2_184ec = trunc i32 %v2_184e8 to i8
  store i8 %v2_184ec, i8* %v2_184e0, align 1
  %v0_184f0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_184f0.pr.pr, label %.thread26.dec_label_pc_184f4_crit_edge, label %dec_label_pc_18528

.thread26.dec_label_pc_184f4_crit_edge:           ; preds = %.thread26
  %v0_184f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_184f4

dec_label_pc_184f4:                               ; preds = %.thread26.dec_label_pc_184f4_crit_edge, %dec_label_pc_184e0
  %v2_1850c = phi i32 [ %v0_184f4.pre, %.thread26.dec_label_pc_184f4_crit_edge ], [ %v0_184e0, %dec_label_pc_184e0 ]
  %v1_184f4 = add i32 %v2_1850c, 9
  %v2_184f4 = inttoptr i32 %v1_184f4 to i8*
  %v3_184f4 = load i8, i8* %v2_184f4, align 1
  %v4_184f4 = zext i8 %v3_184f4 to i32
  store i32 %v4_184f4, i32* %r3.global-to-local, align 4
  %v2_184f8 = icmp eq i8 %v3_184f4, 0
  store i1 %v2_184f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_184f8, label %dec_label_pc_18544, label %dec_label_pc_18508

dec_label_pc_18508:                               ; preds = %dec_label_pc_184f4
  %v1_18508 = add nsw i32 %v4_184f4, -1
  store i32 %v1_18508, i32* %r3.global-to-local, align 4
  %v1_1850c = trunc i32 %v1_18508 to i8
  store i8 %v1_1850c, i8* %v2_184f4, align 1
  %v0_18510 = load i32, i32* @r5, align 4
  %v1_18510 = add i32 %v0_18510, 4
  %v2_18510 = inttoptr i32 %v1_18510 to i32*
  %v3_18510 = load i32, i32* %v2_18510, align 4
  store i32 %v3_18510, i32* %r2.global-to-local, align 4
  %v1_18514 = inttoptr i32 %v3_18510 to i32*
  %v2_18514 = load i32, i32* %v1_18514, align 4
  store i32 %v2_18514, i32* %r0.global-to-local, align 4
  %v4_18514 = add i32 %v3_18510, 4
  store i32 %v4_18514, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18514, i32* %v2_18510, align 4
  %v0_18520 = load i32, i32* %r3.global-to-local, align 4
  %v1_18520 = trunc i32 %v0_18520 to i8
  %v2_18520 = load i32, i32* @r5, align 4
  %v3_18520 = add i32 %v2_18520, 8
  %v4_18520 = inttoptr i32 %v3_18520 to i8*
  store i8 %v1_18520, i8* %v4_18520, align 1
  %v0_18524 = load i32, i32* %r0.global-to-local, align 4
  %v1_18524 = load i32, i32* @r5, align 4
  %v2_18524 = inttoptr i32 %v1_18524 to i32*
  store i32 %v0_18524, i32* %v2_18524, align 4
  br label %dec_label_pc_18528

dec_label_pc_18528:                               ; preds = %.thread26, %dec_label_pc_18508
  %v0_18528 = load i32, i32* %r0.global-to-local, align 4
  %v3_18528 = udiv i32 %v0_18528, 16777216
  %v1_1852c = urem i32 %v3_18528, 16
  %v3_18530 = mul i32 %v0_18528, 256
  %v1_18534 = add nuw nsw i32 %v1_1852c, 1
  store i32 %v1_18534, i32* %r1.global-to-local, align 4
  %v1_18538 = and i32 %v3_18528, 240
  store i32 %v1_18538, i32* %r3.global-to-local, align 4
  %v1_1853c = load i32, i32* @r5, align 4
  %v2_1853c = inttoptr i32 %v1_1853c to i32*
  store i32 %v3_18530, i32* %v2_1853c, align 4
  %v0_18540 = load i32, i32* %r1.global-to-local, align 4
  %v1_18540 = load i32, i32* %r3.global-to-local, align 4
  %v4_18540 = mul i32 %v1_18540, 4096
  %v5_18540 = or i32 %v4_18540, %v0_18540
  br label %dec_label_pc_18544

dec_label_pc_18544:                               ; preds = %dec_label_pc_184f4, %dec_label_pc_18528
  %storemerge = phi i32 [ %v5_18540, %dec_label_pc_18528 ], [ 720897, %dec_label_pc_184f4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_18544 = load i32, i32* @r7, align 4
  store i32 %v0_18544, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_18550 = call i32 @_Unwind_VRS_Pop(i32 %v0_18544, i32 1, i32 5, i32 5)
  store i32 %v4_18550, i32* %r0.global-to-local, align 4
  %v2_18554 = icmp eq i32 %v4_18550, 0
  store i1 %v2_18554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18554, label %dec_label_pc_1828c.backedge, label %dec_label_pc_1855c

dec_label_pc_1855c:                               ; preds = %dec_label_pc_187a8, %dec_label_pc_184d8, %dec_label_pc_185b8, %dec_label_pc_1895c, %dec_label_pc_1892c, %dec_label_pc_18908, %dec_label_pc_18794, %dec_label_pc_18544, %dec_label_pc_18358, %dec_label_pc_1834c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_18564:                               ; preds = %dec_label_pc_1841c
  %v7_18564 = icmp eq i32 %v1_182ec, 160
  store i1 %v7_18564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18564, label %dec_label_pc_1856c, label %dec_label_pc_185a8

dec_label_pc_1856c:                               ; preds = %dec_label_pc_18564
  %v0_1856c = load i32, i32* %ip.global-to-local, align 4
  %v1_1856c = urem i32 %v0_1856c, 8
  %v1_18570 = xor i32 %v1_1856c, 7
  store i32 %v1_18570, i32* %r3.global-to-local, align 4
  %v6_18578 = lshr i32 4080, %v1_18570
  %v1_1857c = and i32 %v0_182e4, 8
  %v2_1857c = icmp eq i32 %v1_1857c, 0
  store i1 %v2_1857c, i1* %cpsr_z.global-to-local, align 1
  %v1_18580 = and i32 %v6_18578, 4080
  %tmp155 = mul nuw nsw i32 %v1_1857c, 2048
  %tmp156 = or i32 %v1_18580, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_1858c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1891c.dec_label_pc_1858c_crit_edge, %bb157, %dec_label_pc_18778, %dec_label_pc_1870c, %dec_label_pc_1866c, %dec_label_pc_1856c
  %v2_18594 = phi i32 [ %v2_18690, %.thread44 ], [ %v2_18698, %bb157 ], [ %v2_18594.pre, %dec_label_pc_1891c.dec_label_pc_1858c_crit_edge ], [ %v2_184c8, %.thread24 ], [ %storemerge130, %dec_label_pc_18778 ], [ %storemerge131, %dec_label_pc_1870c ], [ %storemerge132, %dec_label_pc_1866c ], [ %tmp156, %dec_label_pc_1856c ]
  %v0_18590 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1891c.dec_label_pc_1858c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_18778 ], [ 3, %dec_label_pc_1870c ], [ 1, %dec_label_pc_1866c ], [ 0, %dec_label_pc_1856c ]
  %v0_1858c = load i32, i32* @r7, align 4
  store i32 %v0_1858c, i32* %r0.global-to-local, align 4
  store i32 %v0_18590, i32* %r3.global-to-local, align 4
  %v4_18594 = call i32 @_Unwind_VRS_Pop(i32 %v0_1858c, i32 %v0_18590, i32 %v2_18594, i32 %v0_18590)
  store i32 %v4_18594, i32* %r0.global-to-local, align 4
  %v2_18598 = icmp eq i32 %v4_18594, 0
  store i1 %v2_18598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18598, label %dec_label_pc_1828c.backedge, label %dec_label_pc_185a0

dec_label_pc_185a0:                               ; preds = %dec_label_pc_1858c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_185a8:                               ; preds = %dec_label_pc_18564
  %v7_185a8 = icmp eq i32 %v1_182ec, 176
  store i1 %v7_185a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185a8, label %dec_label_pc_185f0, label %dec_label_pc_185b0

dec_label_pc_185b0:                               ; preds = %dec_label_pc_185a8
  %v7_185b0 = icmp eq i32 %v1_182ec, 192
  store i1 %v7_185b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185b0, label %dec_label_pc_186a0, label %dec_label_pc_185b8

dec_label_pc_185b8:                               ; preds = %dec_label_pc_185b0
  %v1_185b8 = and i32 %v0_182e4, 248
  store i32 %v1_185b8, i32* %r3.global-to-local, align 4
  %v7_185bc = icmp eq i32 %v1_185b8, 208
  store i1 %v7_185bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185bc, label %dec_label_pc_185c4, label %dec_label_pc_1855c

dec_label_pc_185c4:                               ; preds = %dec_label_pc_185b8
  %v1_185c4 = urem i32 %v0_182e4, 8
  %v1_185c8 = add nuw nsw i32 %v1_185c4, 1
  %v1_185cc = or i32 %v1_185c8, 524288
  store i32 %v1_185cc, i32* %r2.global-to-local, align 4
  %v0_185d0 = load i32, i32* @r7, align 4
  store i32 %v0_185d0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_185dc = call i32 @_Unwind_VRS_Pop(i32 %v0_185d0, i32 1, i32 %v1_185cc, i32 5)
  store i32 %v4_185dc, i32* %r0.global-to-local, align 4
  %v2_185e0 = icmp eq i32 %v4_185dc, 0
  store i1 %v2_185e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_185e0, label %dec_label_pc_1828c.backedge, label %dec_label_pc_185e8

dec_label_pc_185e8:                               ; preds = %dec_label_pc_185c4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_185f0:                               ; preds = %dec_label_pc_185a8
  %v0_185f0 = load i32, i32* %ip.global-to-local, align 4
  %v7_185f0 = icmp eq i32 %v0_185f0, 177
  store i1 %v7_185f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185f0, label %dec_label_pc_188f4, label %dec_label_pc_185f8

dec_label_pc_185f8:                               ; preds = %dec_label_pc_185f0
  %v7_185f8 = icmp eq i32 %v0_185f0, 178
  store i1 %v7_185f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_185f8, label %dec_label_pc_187cc, label %dec_label_pc_18600

dec_label_pc_18600:                               ; preds = %dec_label_pc_185f8
  %v7_18600 = icmp eq i32 %v0_185f0, 179
  store i1 %v7_18600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18600, label %dec_label_pc_18608, label %dec_label_pc_18674

dec_label_pc_18608:                               ; preds = %dec_label_pc_18600
  %v0_18608 = load i32, i32* @r5, align 4
  %v1_18608 = add i32 %v0_18608, 8
  %v2_18608 = inttoptr i32 %v1_18608 to i8*
  %v3_18608 = load i8, i8* %v2_18608, align 1
  %v4_18608 = zext i8 %v3_18608 to i32
  store i32 %v4_18608, i32* %r3.global-to-local, align 4
  %v2_1860c = icmp eq i8 %v3_18608, 0
  store i1 %v2_1860c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1860c, label %dec_label_pc_1861c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_18608
  %v2_18610 = add nsw i32 %v4_18608, -1
  store i32 %v2_18610, i32* %r3.global-to-local, align 4
  %v2_18614 = trunc i32 %v2_18610 to i8
  store i8 %v2_18614, i8* %v2_18608, align 1
  %v0_18618.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18618.pr.pr, label %.thread30.dec_label_pc_1861c_crit_edge, label %dec_label_pc_18650

.thread30.dec_label_pc_1861c_crit_edge:           ; preds = %.thread30
  %v0_1861c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %.thread30.dec_label_pc_1861c_crit_edge, %dec_label_pc_18608
  %v2_18634 = phi i32 [ %v0_1861c.pre, %.thread30.dec_label_pc_1861c_crit_edge ], [ %v0_18608, %dec_label_pc_18608 ]
  %v1_1861c = add i32 %v2_18634, 9
  %v2_1861c = inttoptr i32 %v1_1861c to i8*
  %v3_1861c = load i8, i8* %v2_1861c, align 1
  %v4_1861c = zext i8 %v3_1861c to i32
  store i32 %v4_1861c, i32* %r3.global-to-local, align 4
  %v2_18620 = icmp eq i8 %v3_1861c, 0
  store i1 %v2_18620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18620, label %dec_label_pc_1866c, label %dec_label_pc_18630

dec_label_pc_18630:                               ; preds = %dec_label_pc_1861c
  %v1_18630 = add nsw i32 %v4_1861c, -1
  store i32 %v1_18630, i32* %r3.global-to-local, align 4
  %v1_18634 = trunc i32 %v1_18630 to i8
  store i8 %v1_18634, i8* %v2_1861c, align 1
  %v0_18638 = load i32, i32* @r5, align 4
  %v1_18638 = add i32 %v0_18638, 4
  %v2_18638 = inttoptr i32 %v1_18638 to i32*
  %v3_18638 = load i32, i32* %v2_18638, align 4
  store i32 %v3_18638, i32* %r2.global-to-local, align 4
  %v1_1863c = inttoptr i32 %v3_18638 to i32*
  %v2_1863c = load i32, i32* %v1_1863c, align 4
  store i32 %v2_1863c, i32* %r0.global-to-local, align 4
  %v4_1863c = add i32 %v3_18638, 4
  store i32 %v4_1863c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1863c, i32* %v2_18638, align 4
  %v0_18648 = load i32, i32* %r3.global-to-local, align 4
  %v1_18648 = trunc i32 %v0_18648 to i8
  %v2_18648 = load i32, i32* @r5, align 4
  %v3_18648 = add i32 %v2_18648, 8
  %v4_18648 = inttoptr i32 %v3_18648 to i8*
  store i8 %v1_18648, i8* %v4_18648, align 1
  %v0_1864c = load i32, i32* %r0.global-to-local, align 4
  %v1_1864c = load i32, i32* @r5, align 4
  %v2_1864c = inttoptr i32 %v1_1864c to i32*
  store i32 %v0_1864c, i32* %v2_1864c, align 4
  br label %dec_label_pc_18650

dec_label_pc_18650:                               ; preds = %.thread30, %dec_label_pc_18630
  %v0_18650 = load i32, i32* %r0.global-to-local, align 4
  %v3_18650 = udiv i32 %v0_18650, 16777216
  %v1_18654 = urem i32 %v3_18650, 16
  %v3_18658 = mul i32 %v0_18650, 256
  store i32 %v3_18658, i32* %r0.global-to-local, align 4
  %v1_1865c = add nuw nsw i32 %v1_18654, 1
  store i32 %v1_1865c, i32* %r2.global-to-local, align 4
  %v1_18660 = and i32 %v3_18650, 240
  store i32 %v1_18660, i32* %r3.global-to-local, align 4
  %v1_18664 = load i32, i32* @r5, align 4
  %v2_18664 = inttoptr i32 %v1_18664 to i32*
  store i32 %v3_18658, i32* %v2_18664, align 4
  %v0_18668 = load i32, i32* %r2.global-to-local, align 4
  %v1_18668 = load i32, i32* %r3.global-to-local, align 4
  %v4_18668 = mul i32 %v1_18668, 4096
  %v5_18668 = or i32 %v4_18668, %v0_18668
  br label %dec_label_pc_1866c

dec_label_pc_1866c:                               ; preds = %dec_label_pc_1861c, %dec_label_pc_18650
  %storemerge132 = phi i32 [ %v5_18668, %dec_label_pc_18650 ], [ 720897, %dec_label_pc_1861c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_18674:                               ; preds = %dec_label_pc_18600
  %v1_18674 = and i32 %v0_182e4, 252
  store i32 %v1_18674, i32* %r3.global-to-local, align 4
  %v7_18678 = icmp eq i32 %v1_18674, 180
  store i1 %v7_18678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18678, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_18674
  %v2_1867c = urem i32 %v0_182e4, 4
  %v2_18684 = add nuw nsw i32 %v2_1867c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_18690 = or i32 %v2_18684, 262144
  store i32 %v2_18690, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1858c

bb157:                                            ; preds = %dec_label_pc_18674
  %v2_18680 = urem i32 %v0_185f0, 8
  %v2_18688 = add nuw nsw i32 %v2_18680, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_18698 = or i32 %v2_18688, 524288
  store i32 %v2_18698, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_186a0:                               ; preds = %dec_label_pc_185b0
  %v0_186a0 = load i32, i32* %ip.global-to-local, align 4
  %v7_186a0 = icmp eq i32 %v0_186a0, 198
  store i1 %v7_186a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_186a0, label %dec_label_pc_186a8, label %dec_label_pc_184ac

dec_label_pc_186a8:                               ; preds = %dec_label_pc_186a0
  %v0_186a8 = load i32, i32* @r5, align 4
  %v1_186a8 = add i32 %v0_186a8, 8
  %v2_186a8 = inttoptr i32 %v1_186a8 to i8*
  %v3_186a8 = load i8, i8* %v2_186a8, align 1
  %v4_186a8 = zext i8 %v3_186a8 to i32
  store i32 %v4_186a8, i32* %r3.global-to-local, align 4
  %v2_186ac = icmp eq i8 %v3_186a8, 0
  store i1 %v2_186ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186ac, label %dec_label_pc_186bc, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_186a8
  %v2_186b0 = add nsw i32 %v4_186a8, -1
  store i32 %v2_186b0, i32* %r3.global-to-local, align 4
  %v2_186b4 = trunc i32 %v2_186b0 to i8
  store i8 %v2_186b4, i8* %v2_186a8, align 1
  %v0_186b8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_186b8.pr.pr, label %.thread48.dec_label_pc_186bc_crit_edge, label %dec_label_pc_186f0

.thread48.dec_label_pc_186bc_crit_edge:           ; preds = %.thread48
  %v0_186bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %.thread48.dec_label_pc_186bc_crit_edge, %dec_label_pc_186a8
  %v2_186d4 = phi i32 [ %v0_186bc.pre, %.thread48.dec_label_pc_186bc_crit_edge ], [ %v0_186a8, %dec_label_pc_186a8 ]
  %v1_186bc = add i32 %v2_186d4, 9
  %v2_186bc = inttoptr i32 %v1_186bc to i8*
  %v3_186bc = load i8, i8* %v2_186bc, align 1
  %v4_186bc = zext i8 %v3_186bc to i32
  store i32 %v4_186bc, i32* %r3.global-to-local, align 4
  %v2_186c0 = icmp eq i8 %v3_186bc, 0
  store i1 %v2_186c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186c0, label %dec_label_pc_1870c, label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_186bc
  %v1_186d0 = add nsw i32 %v4_186bc, -1
  store i32 %v1_186d0, i32* %r3.global-to-local, align 4
  %v1_186d4 = trunc i32 %v1_186d0 to i8
  store i8 %v1_186d4, i8* %v2_186bc, align 1
  %v0_186d8 = load i32, i32* @r5, align 4
  %v1_186d8 = add i32 %v0_186d8, 4
  %v2_186d8 = inttoptr i32 %v1_186d8 to i32*
  %v3_186d8 = load i32, i32* %v2_186d8, align 4
  store i32 %v3_186d8, i32* %r2.global-to-local, align 4
  %v1_186dc = inttoptr i32 %v3_186d8 to i32*
  %v2_186dc = load i32, i32* %v1_186dc, align 4
  store i32 %v2_186dc, i32* %r0.global-to-local, align 4
  %v4_186dc = add i32 %v3_186d8, 4
  store i32 %v4_186dc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_186dc, i32* %v2_186d8, align 4
  %v0_186e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_186e8 = trunc i32 %v0_186e8 to i8
  %v2_186e8 = load i32, i32* @r5, align 4
  %v3_186e8 = add i32 %v2_186e8, 8
  %v4_186e8 = inttoptr i32 %v3_186e8 to i8*
  store i8 %v1_186e8, i8* %v4_186e8, align 1
  %v0_186ec = load i32, i32* %r0.global-to-local, align 4
  %v1_186ec = load i32, i32* @r5, align 4
  %v2_186ec = inttoptr i32 %v1_186ec to i32*
  store i32 %v0_186ec, i32* %v2_186ec, align 4
  br label %dec_label_pc_186f0

dec_label_pc_186f0:                               ; preds = %.thread48, %dec_label_pc_186d0
  %v0_186f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_186f0 = udiv i32 %v0_186f0, 16777216
  %v1_186f4 = urem i32 %v3_186f0, 16
  %v3_186f8 = mul i32 %v0_186f0, 256
  store i32 %v3_186f8, i32* %r0.global-to-local, align 4
  %v1_186fc = add nuw nsw i32 %v1_186f4, 1
  store i32 %v1_186fc, i32* %r2.global-to-local, align 4
  %v1_18700 = and i32 %v3_186f0, 240
  store i32 %v1_18700, i32* %r3.global-to-local, align 4
  %v1_18704 = load i32, i32* @r5, align 4
  %v2_18704 = inttoptr i32 %v1_18704 to i32*
  store i32 %v3_186f8, i32* %v2_18704, align 4
  %v0_18708 = load i32, i32* %r2.global-to-local, align 4
  %v1_18708 = load i32, i32* %r3.global-to-local, align 4
  %v4_18708 = mul i32 %v1_18708, 4096
  %v5_18708 = or i32 %v4_18708, %v0_18708
  br label %dec_label_pc_1870c

dec_label_pc_1870c:                               ; preds = %dec_label_pc_186bc, %dec_label_pc_186f0
  %storemerge131 = phi i32 [ %v5_18708, %dec_label_pc_186f0 ], [ 720897, %dec_label_pc_186bc ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_18714:                               ; preds = %dec_label_pc_184d0
  %v0_18714 = load i32, i32* @r5, align 4
  %v1_18714 = add i32 %v0_18714, 8
  %v2_18714 = inttoptr i32 %v1_18714 to i8*
  %v3_18714 = load i8, i8* %v2_18714, align 1
  %v4_18714 = zext i8 %v3_18714 to i32
  store i32 %v4_18714, i32* %r3.global-to-local, align 4
  %v2_18718 = icmp eq i8 %v3_18714, 0
  store i1 %v2_18718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18718, label %dec_label_pc_18728, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_18714
  %v2_1871c = add nsw i32 %v4_18714, -1
  store i32 %v2_1871c, i32* %r3.global-to-local, align 4
  %v2_18720 = trunc i32 %v2_1871c to i8
  store i8 %v2_18720, i8* %v2_18714, align 1
  %v0_18724.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18724.pr.pr, label %.thread52.dec_label_pc_18728_crit_edge, label %dec_label_pc_1875c

.thread52.dec_label_pc_18728_crit_edge:           ; preds = %.thread52
  %v0_18728.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18728

dec_label_pc_18728:                               ; preds = %.thread52.dec_label_pc_18728_crit_edge, %dec_label_pc_18714
  %v2_18740 = phi i32 [ %v0_18728.pre, %.thread52.dec_label_pc_18728_crit_edge ], [ %v0_18714, %dec_label_pc_18714 ]
  %v1_18728 = add i32 %v2_18740, 9
  %v2_18728 = inttoptr i32 %v1_18728 to i8*
  %v3_18728 = load i8, i8* %v2_18728, align 1
  %v4_18728 = zext i8 %v3_18728 to i32
  store i32 %v4_18728, i32* %r3.global-to-local, align 4
  %v2_1872c = icmp eq i8 %v3_18728, 0
  store i1 %v2_1872c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1872c, label %dec_label_pc_18778, label %dec_label_pc_1873c

dec_label_pc_1873c:                               ; preds = %dec_label_pc_18728
  %v1_1873c = add nsw i32 %v4_18728, -1
  store i32 %v1_1873c, i32* %r3.global-to-local, align 4
  %v1_18740 = trunc i32 %v1_1873c to i8
  store i8 %v1_18740, i8* %v2_18728, align 1
  %v0_18744 = load i32, i32* @r5, align 4
  %v1_18744 = add i32 %v0_18744, 4
  %v2_18744 = inttoptr i32 %v1_18744 to i32*
  %v3_18744 = load i32, i32* %v2_18744, align 4
  store i32 %v3_18744, i32* %r2.global-to-local, align 4
  %v1_18748 = inttoptr i32 %v3_18744 to i32*
  %v2_18748 = load i32, i32* %v1_18748, align 4
  store i32 %v2_18748, i32* %r0.global-to-local, align 4
  %v4_18748 = add i32 %v3_18744, 4
  store i32 %v4_18748, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18748, i32* %v2_18744, align 4
  %v0_18754 = load i32, i32* %r3.global-to-local, align 4
  %v1_18754 = trunc i32 %v0_18754 to i8
  %v2_18754 = load i32, i32* @r5, align 4
  %v3_18754 = add i32 %v2_18754, 8
  %v4_18754 = inttoptr i32 %v3_18754 to i8*
  store i8 %v1_18754, i8* %v4_18754, align 1
  %v0_18758 = load i32, i32* %r0.global-to-local, align 4
  %v1_18758 = load i32, i32* @r5, align 4
  %v2_18758 = inttoptr i32 %v1_18758 to i32*
  store i32 %v0_18758, i32* %v2_18758, align 4
  br label %dec_label_pc_1875c

dec_label_pc_1875c:                               ; preds = %.thread52, %dec_label_pc_1873c
  %v0_1875c = load i32, i32* %r0.global-to-local, align 4
  %v3_1875c = udiv i32 %v0_1875c, 16777216
  %v1_18760 = urem i32 %v3_1875c, 16
  %v3_18764 = mul i32 %v0_1875c, 256
  store i32 %v3_18764, i32* %r0.global-to-local, align 4
  %v1_18768 = add nuw nsw i32 %v1_18760, 1
  store i32 %v1_18768, i32* %r2.global-to-local, align 4
  %v1_1876c = and i32 %v3_1875c, 240
  store i32 %v1_1876c, i32* %r3.global-to-local, align 4
  %v1_18770 = load i32, i32* @r5, align 4
  %v2_18770 = inttoptr i32 %v1_18770 to i32*
  store i32 %v3_18764, i32* %v2_18770, align 4
  %v0_18774 = load i32, i32* %r2.global-to-local, align 4
  %v1_18774 = load i32, i32* %r3.global-to-local, align 4
  %v4_18774 = mul i32 %v1_18774, 4096
  %v5_18774 = or i32 %v4_18774, %v0_18774
  br label %dec_label_pc_18778

dec_label_pc_18778:                               ; preds = %dec_label_pc_18728, %dec_label_pc_1875c
  %storemerge130 = phi i32 [ %v5_18774, %dec_label_pc_1875c ], [ 720897, %dec_label_pc_18728 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_18780:                               ; preds = %dec_label_pc_184ac
  %v0_18780 = load i32, i32* @r5, align 4
  %v1_18780 = add i32 %v0_18780, 8
  %v2_18780 = inttoptr i32 %v1_18780 to i8*
  %v3_18780 = load i8, i8* %v2_18780, align 1
  %v4_18780 = zext i8 %v3_18780 to i32
  store i32 %v4_18780, i32* %r3.global-to-local, align 4
  %v2_18784 = icmp eq i8 %v3_18780, 0
  store i1 %v2_18784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18784, label %dec_label_pc_1892c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_18780
  %v2_18788 = add nsw i32 %v4_18780, -1
  store i32 %v2_18788, i32* %r3.global-to-local, align 4
  %v2_1878c = trunc i32 %v2_18788 to i8
  store i8 %v2_1878c, i8* %v2_18780, align 1
  %v0_18790.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18790.pr.pr, label %.thread56.dec_label_pc_1892c_crit_edge, label %dec_label_pc_18794

.thread56.dec_label_pc_1892c_crit_edge:           ; preds = %.thread56
  %v0_1892c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1892c

dec_label_pc_18794:                               ; preds = %.thread56, %dec_label_pc_18938
  %v0_18794 = load i32, i32* %r0.global-to-local, align 4
  %v3_18794 = udiv i32 %v0_18794, 16777216
  store i32 %v3_18794, i32* %r3.global-to-local, align 4
  store i32 %v3_18794, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_18794, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1879c = mul i32 %v0_18794, 256
  store i32 %v3_1879c, i32* %r0.global-to-local, align 4
  %v1_187a0 = load i32, i32* @r5, align 4
  %v2_187a0 = inttoptr i32 %v1_187a0 to i32*
  store i32 %v3_1879c, i32* %v2_187a0, align 4
  br i1 %tmp184, label %dec_label_pc_1855c, label %dec_label_pc_187a8

dec_label_pc_187a8:                               ; preds = %dec_label_pc_18794
  %v0_187a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_187a8 = and i32 %v0_187a8, 240
  store i32 %v1_187a8, i32* %r3.global-to-local, align 4
  %v2_187a8 = icmp eq i32 %v1_187a8, 0
  store i1 %v2_187a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187a8, label %dec_label_pc_187b0, label %dec_label_pc_1855c

dec_label_pc_187b0:                               ; preds = %dec_label_pc_187a8
  %v0_187b0 = load i32, i32* @r7, align 4
  store i32 %v0_187b0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_187b8 = load i32, i32* %r2.global-to-local, align 4
  %v4_187b8 = call i32 @_Unwind_VRS_Pop(i32 %v0_187b0, i32 4, i32 %v2_187b8, i32 0)
  store i32 %v4_187b8, i32* %r0.global-to-local, align 4
  %v2_187bc = icmp eq i32 %v4_187b8, 0
  store i1 %v2_187bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187bc, label %dec_label_pc_1828c.backedge, label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %dec_label_pc_187b0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_187cc:                               ; preds = %dec_label_pc_185f8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_187d8 = load i32, i32* @r7, align 4
  store i32 %v0_187d8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_187e4 = call i32 @_Unwind_VRS_Get(i32 %v0_187d8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_187e4, i32* %r0.global-to-local, align 4
  %v0_187e8 = load i32, i32* @r5, align 4
  %v1_187e8 = add i32 %v0_187e8, 8
  %v2_187e8 = inttoptr i32 %v1_187e8 to i8*
  %v3_187e8 = load i8, i8* %v2_187e8, align 1
  %v4_187e8 = zext i8 %v3_187e8 to i32
  store i32 %v4_187e8, i32* %r1.global-to-local, align 4
  %v2_187ec = icmp eq i8 %v3_187e8, 0
  store i1 %v2_187ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187ec, label %dec_label_pc_187fc, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_187cc
  %v2_187f0 = add nsw i32 %v4_187e8, -1
  store i32 %v2_187f0, i32* %r3.global-to-local, align 4
  %v2_187f4 = trunc i32 %v2_187f0 to i8
  store i8 %v2_187f4, i8* %v2_187e8, align 1
  %v0_187f8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_187f8.pr.pr, label %.thread58.dec_label_pc_187fc_crit_edge, label %dec_label_pc_18828

.thread58.dec_label_pc_187fc_crit_edge:           ; preds = %.thread58
  %v0_187fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_187fc

dec_label_pc_187fc:                               ; preds = %.thread58.dec_label_pc_187fc_crit_edge, %dec_label_pc_187cc
  %v2_18810 = phi i32 [ %v0_187fc.pre, %.thread58.dec_label_pc_187fc_crit_edge ], [ %v0_187e8, %dec_label_pc_187cc ]
  %v1_187fc = add i32 %v2_18810, 9
  %v2_187fc = inttoptr i32 %v1_187fc to i8*
  %v3_187fc = load i8, i8* %v2_187fc, align 1
  %v4_187fc = zext i8 %v3_187fc to i32
  store i32 %v4_187fc, i32* %r3.global-to-local, align 4
  %v2_18800 = icmp eq i8 %v3_187fc, 0
  store i1 %v2_18800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18800, label %bb158, label %dec_label_pc_1880c

bb158:                                            ; preds = %dec_label_pc_187fc
  %v1_18804 = load i32, i32* @r6, align 4
  store i32 %v1_18804, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18850

dec_label_pc_1880c:                               ; preds = %dec_label_pc_187fc
  %v1_1880c = add nsw i32 %v4_187fc, -1
  store i32 %v1_1880c, i32* %r3.global-to-local, align 4
  %v1_18810 = trunc i32 %v1_1880c to i8
  store i8 %v1_18810, i8* %v2_187fc, align 1
  %v0_18814 = load i32, i32* @r5, align 4
  %v1_18814 = add i32 %v0_18814, 4
  %v2_18814 = inttoptr i32 %v1_18814 to i32*
  %v3_18814 = load i32, i32* %v2_18814, align 4
  store i32 %v3_18814, i32* %r2.global-to-local, align 4
  %v1_18818 = inttoptr i32 %v3_18814 to i32*
  %v2_18818 = load i32, i32* %v1_18818, align 4
  store i32 %v2_18818, i32* %r0.global-to-local, align 4
  %v4_18818 = add i32 %v3_18814, 4
  store i32 %v4_18818, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_18820 = inttoptr i32 %v0_18814 to i32*
  store i32 %v2_18818, i32* %v1_18820, align 4
  %v5_18820 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_18820, i32* %v2_18814, align 4
  %v0_18824 = load i32, i32* %r3.global-to-local, align 4
  %v1_18824 = trunc i32 %v0_18824 to i8
  %v2_18824 = load i32, i32* @r5, align 4
  %v3_18824 = add i32 %v2_18824, 8
  %v4_18824 = inttoptr i32 %v3_18824 to i8*
  store i8 %v1_18824, i8* %v4_18824, align 1
  br label %dec_label_pc_18828

dec_label_pc_18828:                               ; preds = %.thread58, %dec_label_pc_1880c
  %v0_18828 = load i32, i32* @r5, align 4
  %v1_18828 = inttoptr i32 %v0_18828 to i32*
  %v2_18828 = load i32, i32* %v1_18828, align 4
  store i32 %v2_18828, i32* %r3.global-to-local, align 4
  %v3_1882c = mul i32 %v2_18828, 256
  store i32 %v3_1882c, i32* %r0.global-to-local, align 4
  %v3_18830 = udiv i32 %v2_18828, 16777216
  store i32 %v3_18830, i32* %r2.global-to-local, align 4
  store i32 %v3_1882c, i32* %v1_18828, align 4
  %v0_18838 = load i32, i32* %r2.global-to-local, align 4
  %v1_18838 = and i32 %v0_18838, 128
  %v2_18838 = icmp eq i32 %v1_18838, 0
  store i1 %v2_18838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18838, label %.thread129, label %dec_label_pc_1884c

.thread129:                                       ; preds = %dec_label_pc_18828
  %v4_1883c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1883c, i32* %ip.global-to-local, align 4
  %v1_18840 = urem i32 %v0_18838, 256
  store i32 %v1_18840, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_188c0

dec_label_pc_1884c:                               ; preds = %dec_label_pc_18828
  %v1_1884063 = urem i32 %v0_18838, 256
  store i32 %v1_1884063, i32* %r2.global-to-local, align 4
  %v0_1884c = load i32, i32* @r5, align 4
  %v1_1884c = add i32 %v0_1884c, 8
  %v2_1884c = inttoptr i32 %v1_1884c to i8*
  %v3_1884c = load i8, i8* %v2_1884c, align 1
  %v4_1884c = zext i8 %v3_1884c to i32
  store i32 %v4_1884c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18850

dec_label_pc_18850:                               ; preds = %bb158, %dec_label_pc_1884c
  %v3_1887099 = phi i32 [ %v2_18810, %bb158 ], [ %v0_1884c, %dec_label_pc_1884c ]
  %v0_1885892 = phi i32 [ %v1_18804, %bb158 ], [ %v1_1884063, %dec_label_pc_1884c ]
  %v3_18850 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_18850, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18858

dec_label_pc_18858:                               ; preds = %dec_label_pc_18858.backedge, %dec_label_pc_18850
  %v3_18870 = phi i32 [ %v3_18870100, %dec_label_pc_18858.backedge ], [ %v3_1887099, %dec_label_pc_18850 ]
  %v0_1886c = phi i32 [ %v2_1885c.pre, %dec_label_pc_18858.backedge ], [ 2, %dec_label_pc_18850 ]
  %v0_1885c = phi i32 [ %v0_1885c.pre, %dec_label_pc_18858.backedge ], [ %v3_18850, %dec_label_pc_18850 ]
  %v0_18858 = phi i32 [ %v0_1885895, %dec_label_pc_18858.backedge ], [ %v0_1885892, %dec_label_pc_18850 ]
  %v1_18858 = urem i32 %v0_18858, 128
  %v7_1885c = shl i32 %v1_18858, %v0_1886c
  %v8_1885c = add i32 %v7_1885c, %v0_1885c
  store i32 %v8_1885c, i32* %ip.global-to-local, align 4
  %v0_18860 = load i32, i32* %r1.global-to-local, align 4
  %v2_18860 = icmp eq i32 %v0_18860, 0
  store i1 %v2_18860, i1* %cpsr_z.global-to-local, align 1
  %v1_18864 = add i32 %v0_18860, -1
  store i32 %v1_18864, i32* %r3.global-to-local, align 4
  store i32 %v8_1885c, i32* %stack_var_-36, align 4
  %v1_1886c = add i32 %v0_1886c, 7
  store i32 %v1_1886c, i32* @lr, align 4
  br i1 %v2_18860, label %dec_label_pc_18878, label %bb159

bb159:                                            ; preds = %dec_label_pc_18858
  %v2_18870 = trunc i32 %v1_18864 to i8
  %v4_18870 = add i32 %v3_18870, 8
  %v5_18870 = inttoptr i32 %v4_18870 to i8*
  store i8 %v2_18870, i8* %v5_18870, align 1
  %v0_18874.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18874.pr, label %.dec_label_pc_18878_crit_edge, label %dec_label_pc_188a4

.dec_label_pc_18878_crit_edge:                    ; preds = %bb159
  %v0_18878.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18878

dec_label_pc_18878:                               ; preds = %.dec_label_pc_18878_crit_edge, %dec_label_pc_18858
  %v2_18890 = phi i32 [ %v0_18878.pre, %.dec_label_pc_18878_crit_edge ], [ %v3_18870, %dec_label_pc_18858 ]
  %v1_18878 = add i32 %v2_18890, 9
  %v2_18878 = inttoptr i32 %v1_18878 to i8*
  %v3_18878 = load i8, i8* %v2_18878, align 1
  %v4_18878 = zext i8 %v3_18878 to i32
  store i32 %v4_18878, i32* %r3.global-to-local, align 4
  %v2_1887c = icmp eq i8 %v3_18878, 0
  store i1 %v2_1887c, i1* %cpsr_z.global-to-local, align 1
  %v1_18880 = add nsw i32 %v4_18878, -1
  store i32 %v1_18880, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1887c, label %dec_label_pc_18858.backedge, label %dec_label_pc_1888c

dec_label_pc_1888c:                               ; preds = %dec_label_pc_18878
  %v1_1888c = add i32 %v2_18890, 4
  %v2_1888c = inttoptr i32 %v1_1888c to i32*
  %v3_1888c = load i32, i32* %v2_1888c, align 4
  store i32 %v3_1888c, i32* %r2.global-to-local, align 4
  %v1_18890 = trunc i32 %v1_18880 to i8
  store i8 %v1_18890, i8* %v2_18878, align 1
  %v0_18894 = load i32, i32* %r2.global-to-local, align 4
  %v1_18894 = inttoptr i32 %v0_18894 to i32*
  %v2_18894 = load i32, i32* %v1_18894, align 4
  store i32 %v2_18894, i32* %r0.global-to-local, align 4
  %v4_18894 = add i32 %v0_18894, 4
  store i32 %v4_18894, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1889c = load i32, i32* @r5, align 4
  %v3_1889c = add i32 %v2_1889c, 8
  %v4_1889c = inttoptr i32 %v3_1889c to i8*
  store i8 3, i8* %v4_1889c, align 1
  %v0_188a0 = load i32, i32* @r5, align 4
  %v1_188a0 = inttoptr i32 %v0_188a0 to i32*
  %v2_188a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_188a0, i32* %v1_188a0, align 4
  %v3_188a0 = add i32 %v0_188a0, 4
  %v4_188a0 = inttoptr i32 %v3_188a0 to i32*
  %v5_188a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_188a0, i32* %v4_188a0, align 4
  br label %dec_label_pc_188a4

dec_label_pc_188a4:                               ; preds = %bb159, %dec_label_pc_1888c
  %v0_188a4 = load i32, i32* @r5, align 4
  %v1_188a4 = inttoptr i32 %v0_188a4 to i32*
  %v2_188a4 = load i32, i32* %v1_188a4, align 4
  store i32 %v2_188a4, i32* %r3.global-to-local, align 4
  %v3_188a8 = udiv i32 %v2_188a4, 16777216
  store i32 %v3_188a8, i32* %r2.global-to-local, align 4
  %v1_188ac = and i32 %v3_188a8, 128
  %v2_188ac = icmp eq i32 %v1_188ac, 0
  store i1 %v2_188ac, i1* %cpsr_z.global-to-local, align 1
  %v3_188b0 = mul i32 %v2_188a4, 256
  store i32 %v3_188b0, i32* %r0.global-to-local, align 4
  store i32 %v3_188b0, i32* %v1_188a4, align 4
  %v0_188b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_188b8 = urem i32 %v0_188b8, 256
  store i32 %v1_188b8, i32* %r2.global-to-local, align 4
  br i1 %v2_188ac, label %dec_label_pc_188c0.loopexit, label %dec_label_pc_188ec

dec_label_pc_188c0.loopexit:                      ; preds = %dec_label_pc_188a4
  %v0_188c4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_188c8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_188c0

dec_label_pc_188c0:                               ; preds = %dec_label_pc_188c0.loopexit, %.thread129
  %v2_188c8 = phi i32 [ 2, %.thread129 ], [ %v2_188c8.pre, %dec_label_pc_188c0.loopexit ]
  %v0_188c4 = phi i32 [ %v4_1883c, %.thread129 ], [ %v0_188c4.pre, %dec_label_pc_188c0.loopexit ]
  %v0_188c0 = phi i32 [ %v1_18840, %.thread129 ], [ %v1_188b8, %dec_label_pc_188c0.loopexit ]
  %v1_188c0 = urem i32 %v0_188c0, 128
  %v1_188c4 = add i32 %v0_188c4, 516
  %v7_188c8 = shl i32 %v1_188c0, %v2_188c8
  %v8_188c8 = add i32 %v1_188c4, %v7_188c8
  store i32 %v8_188c8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_188d0 = load i32, i32* @r7, align 4
  store i32 %v0_188d0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_188c8, i32* %stack_var_-36, align 4
  %v5_188e4 = call i32 @_Unwind_VRS_Set(i32 %v0_188d0, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_188e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1828c.backedge

dec_label_pc_188ec:                               ; preds = %dec_label_pc_188a4
  %v0_188ec = load i32, i32* @r5, align 4
  %v1_188ec = add i32 %v0_188ec, 8
  %v2_188ec = inttoptr i32 %v1_188ec to i8*
  %v3_188ec = load i8, i8* %v2_188ec, align 1
  %v4_188ec = zext i8 %v3_188ec to i32
  store i32 %v4_188ec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18858.backedge

dec_label_pc_18858.backedge:                      ; preds = %dec_label_pc_188ec, %dec_label_pc_18878
  %v3_18870100 = phi i32 [ %v0_188ec, %dec_label_pc_188ec ], [ %v2_18890, %dec_label_pc_18878 ]
  %v0_1885895 = phi i32 [ %v1_188b8, %dec_label_pc_188ec ], [ 176, %dec_label_pc_18878 ]
  %v0_1885c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1885c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_18858

dec_label_pc_188f4:                               ; preds = %dec_label_pc_185f0
  %v0_188f4 = load i32, i32* @r5, align 4
  %v1_188f4 = add i32 %v0_188f4, 8
  %v2_188f4 = inttoptr i32 %v1_188f4 to i8*
  %v3_188f4 = load i8, i8* %v2_188f4, align 1
  %v4_188f4 = zext i8 %v3_188f4 to i32
  store i32 %v4_188f4, i32* %r3.global-to-local, align 4
  %v2_188f8 = icmp eq i8 %v3_188f4, 0
  store i1 %v2_188f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_188f8, label %dec_label_pc_1895c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_188f4
  %v2_188fc = add nsw i32 %v4_188f4, -1
  store i32 %v2_188fc, i32* %r3.global-to-local, align 4
  %v2_18900 = trunc i32 %v2_188fc to i8
  store i8 %v2_18900, i8* %v2_188f4, align 1
  %v0_18904.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18904.pr.pr, label %.thread66.dec_label_pc_1895c_crit_edge, label %dec_label_pc_18908

.thread66.dec_label_pc_1895c_crit_edge:           ; preds = %.thread66
  %v0_1895c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1895c

dec_label_pc_18908:                               ; preds = %.thread66, %dec_label_pc_18968
  %v0_18908 = load i32, i32* %r0.global-to-local, align 4
  %v3_18908 = udiv i32 %v0_18908, 16777216
  store i32 %v3_18908, i32* %r3.global-to-local, align 4
  store i32 %v3_18908, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_18908, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_18910 = mul i32 %v0_18908, 256
  store i32 %v3_18910, i32* %r0.global-to-local, align 4
  %v1_18914 = load i32, i32* @r5, align 4
  %v2_18914 = inttoptr i32 %v1_18914 to i32*
  store i32 %v3_18910, i32* %v2_18914, align 4
  br i1 %tmp185, label %dec_label_pc_1855c, label %dec_label_pc_1891c

dec_label_pc_1891c:                               ; preds = %dec_label_pc_18908
  %v0_1891c = load i32, i32* %r3.global-to-local, align 4
  %v1_1891c = and i32 %v0_1891c, 240
  store i32 %v1_1891c, i32* %r1.global-to-local, align 4
  %v2_1891c = icmp eq i32 %v1_1891c, 0
  store i1 %v2_1891c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1891c, label %dec_label_pc_1891c.dec_label_pc_1858c_crit_edge, label %dec_label_pc_18924

dec_label_pc_1891c.dec_label_pc_1858c_crit_edge:  ; preds = %dec_label_pc_1891c
  %v2_18594.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1858c

dec_label_pc_18924:                               ; preds = %dec_label_pc_1891c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183b4

dec_label_pc_1892c:                               ; preds = %.thread56.dec_label_pc_1892c_crit_edge, %dec_label_pc_18780
  %v2_1893c = phi i32 [ %v0_1892c.pre, %.thread56.dec_label_pc_1892c_crit_edge ], [ %v0_18780, %dec_label_pc_18780 ]
  %v1_1892c = add i32 %v2_1893c, 9
  %v2_1892c = inttoptr i32 %v1_1892c to i8*
  %v3_1892c = load i8, i8* %v2_1892c, align 1
  %v4_1892c = zext i8 %v3_1892c to i32
  store i32 %v4_1892c, i32* %r3.global-to-local, align 4
  %v2_18930 = icmp eq i8 %v3_1892c, 0
  store i1 %v2_18930, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18930, label %dec_label_pc_1855c, label %dec_label_pc_18938

dec_label_pc_18938:                               ; preds = %dec_label_pc_1892c
  %v1_18938 = add nsw i32 %v4_1892c, -1
  store i32 %v1_18938, i32* %r3.global-to-local, align 4
  %v1_1893c = trunc i32 %v1_18938 to i8
  store i8 %v1_1893c, i8* %v2_1892c, align 1
  %v0_18940 = load i32, i32* @r5, align 4
  %v1_18940 = add i32 %v0_18940, 4
  %v2_18940 = inttoptr i32 %v1_18940 to i32*
  %v3_18940 = load i32, i32* %v2_18940, align 4
  store i32 %v3_18940, i32* %r2.global-to-local, align 4
  %v1_18944 = inttoptr i32 %v3_18940 to i32*
  %v2_18944 = load i32, i32* %v1_18944, align 4
  store i32 %v2_18944, i32* %r0.global-to-local, align 4
  %v4_18944 = add i32 %v3_18940, 4
  store i32 %v4_18944, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18944, i32* %v2_18940, align 4
  %v0_18950 = load i32, i32* %r3.global-to-local, align 4
  %v1_18950 = trunc i32 %v0_18950 to i8
  %v2_18950 = load i32, i32* @r5, align 4
  %v3_18950 = add i32 %v2_18950, 8
  %v4_18950 = inttoptr i32 %v3_18950 to i8*
  store i8 %v1_18950, i8* %v4_18950, align 1
  %v0_18954 = load i32, i32* %r0.global-to-local, align 4
  %v1_18954 = load i32, i32* @r5, align 4
  %v2_18954 = inttoptr i32 %v1_18954 to i32*
  store i32 %v0_18954, i32* %v2_18954, align 4
  br label %dec_label_pc_18794

dec_label_pc_1895c:                               ; preds = %.thread66.dec_label_pc_1895c_crit_edge, %dec_label_pc_188f4
  %v2_1896c = phi i32 [ %v0_1895c.pre, %.thread66.dec_label_pc_1895c_crit_edge ], [ %v0_188f4, %dec_label_pc_188f4 ]
  %v1_1895c = add i32 %v2_1896c, 9
  %v2_1895c = inttoptr i32 %v1_1895c to i8*
  %v3_1895c = load i8, i8* %v2_1895c, align 1
  %v4_1895c = zext i8 %v3_1895c to i32
  store i32 %v4_1895c, i32* %r3.global-to-local, align 4
  %v2_18960 = icmp eq i8 %v3_1895c, 0
  store i1 %v2_18960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18960, label %dec_label_pc_1855c, label %dec_label_pc_18968

dec_label_pc_18968:                               ; preds = %dec_label_pc_1895c
  %v1_18968 = add nsw i32 %v4_1895c, -1
  store i32 %v1_18968, i32* %r3.global-to-local, align 4
  %v1_1896c = trunc i32 %v1_18968 to i8
  store i8 %v1_1896c, i8* %v2_1895c, align 1
  %v0_18970 = load i32, i32* @r5, align 4
  %v1_18970 = add i32 %v0_18970, 4
  %v2_18970 = inttoptr i32 %v1_18970 to i32*
  %v3_18970 = load i32, i32* %v2_18970, align 4
  store i32 %v3_18970, i32* %r2.global-to-local, align 4
  %v1_18974 = inttoptr i32 %v3_18970 to i32*
  %v2_18974 = load i32, i32* %v1_18974, align 4
  store i32 %v2_18974, i32* %r0.global-to-local, align 4
  %v4_18974 = add i32 %v3_18970, 4
  store i32 %v4_18974, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18974, i32* %v2_18970, align 4
  %v0_18980 = load i32, i32* %r3.global-to-local, align 4
  %v1_18980 = trunc i32 %v0_18980 to i8
  %v2_18980 = load i32, i32* @r5, align 4
  %v3_18980 = add i32 %v2_18980, 8
  %v4_18980 = inttoptr i32 %v3_18980 to i8*
  store i8 %v1_18980, i8* %v4_18980, align 1
  %v0_18984 = load i32, i32* %r0.global-to-local, align 4
  %v1_18984 = load i32, i32* @r5, align 4
  %v2_18984 = inttoptr i32 %v1_18984 to i32*
  store i32 %v0_18984, i32* %v2_18984, align 4
  br label %dec_label_pc_18908

; uselistorder directives
  uselistorder i32 %v3_18910, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_18908, { 1, 0 }
  uselistorder i32 %v0_18908, { 1, 0, 2 }
  uselistorder i32 %v1_188b8, { 1, 2, 0 }
  uselistorder i32 %v3_188b0, { 1, 0 }
  uselistorder i32 %v3_188a8, { 1, 0 }
  uselistorder i32 %v2_18890, { 2, 0, 1 }
  uselistorder i32 %v1_1884063, { 1, 0 }
  uselistorder i32 %v1_18840, { 1, 0 }
  uselistorder i32 %v3_1882c, { 1, 0 }
  uselistorder i32 %v2_18828, { 1, 0, 2 }
  uselistorder i32 %v3_1879c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_18794, { 1, 0 }
  uselistorder i32 %v0_18794, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_18764, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_186f8, { 1, 0 }
  uselistorder i32 %v0_186a0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_18698, { 1, 0 }
  uselistorder i32 %v2_18690, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_18658, { 1, 0 }
  uselistorder i32 %v0_18590, { 2, 1, 0 }
  uselistorder i32 %v1_18570, { 1, 0 }
  uselistorder i32 %v0_184a4, { 1, 0 }
  uselistorder i32 %v0_18490, { 1, 0, 2, 3 }
  uselistorder i1 %v2_18428, { 1, 0 }
  uselistorder i32 %v1_18424, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_183c4, { 1, 0 }
  uselistorder i32 %v4_1839c, { 1, 0 }
  uselistorder i1 %v2_1838c, { 1, 0 }
  uselistorder i32 %v3_18358, { 1, 0 }
  uselistorder i32 %v3_18340, { 1, 0 }
  uselistorder i32 %v0_182e4, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_182d4, { 1, 0 }
  uselistorder i32 %v3_182cc, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 1, 2, 39, 40, 42, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 262144, { 3, 0, 1, 2 }
  uselistorder i32 524288, { 2, 3, 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder i32 2, { 108, 130, 245, 246, 247, 116, 115, 142, 143, 248, 249, 114, 6, 7, 250, 251, 8, 252, 0, 9, 10, 253, 11, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 180, 46, 47, 48, 173, 49, 50, 51, 52, 53, 181, 182, 144, 183, 184, 54, 55, 117, 185, 112, 186, 187, 56, 57, 188, 189, 201, 202, 203, 205, 206, 207, 113, 118, 190, 191, 140, 58, 59, 60, 61, 62, 141, 192, 136, 135, 63, 193, 194, 195, 208, 64, 145, 209, 210, 65, 146, 211, 212, 213, 214, 147, 217, 3, 222, 174, 175, 119, 148, 223, 149, 196, 66, 197, 224, 225, 226, 67, 120, 121, 137, 122, 138, 123, 124, 68, 215, 69, 70, 71, 216, 204, 227, 228, 229, 230, 72, 73, 176, 125, 254, 255, 133, 256, 257, 126, 258, 259, 220, 74, 75, 150, 218, 219, 151, 152, 76, 77, 153, 154, 155, 156, 157, 158, 221, 78, 159, 160, 161, 162, 198, 79, 80, 81, 163, 260, 164, 109, 262, 165, 232, 233, 234, 166, 82, 179, 83, 127, 84, 85, 131, 199, 110, 86, 261, 132, 235, 87, 88, 236, 89, 90, 111, 91, 92, 93, 94, 134, 237, 238, 95, 96, 4, 177, 239, 97, 240, 231, 128, 98, 5, 99, 178, 100, 101, 102, 103, 104, 167, 200, 168, 169, 170, 129, 171, 105, 106, 243, 139, 241, 107, 242, 244, 172 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 9 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 19, 8, 18, 20, 21, 5, 6, 7, 22, 23, 16, 17, 12, 13, 14, 0, 4, 15, 24, 1, 2, 10, 11, 9, 3, 26, 25 }
  uselistorder i32 160, { 24, 0, 1, 23, 3, 5, 4, 6, 7, 10, 8, 11, 9, 12, 2, 13, 14, 16, 15, 17, 20, 18, 21, 19, 22 }
  uselistorder i32 5, { 6, 5, 11, 12, 30, 0, 31, 1, 2, 25, 26, 27, 9, 20, 10, 4, 21, 22, 13, 23, 3, 14, 28, 15, 16, 18, 17, 7, 8, 24, 29, 19 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 23, 9, 10, 24, 11, 12, 13, 14, 25, 27, 19, 28, 26, 16, 15, 17, 29, 18, 20, 21, 22 }
  uselistorder i32 192, { 5, 4, 0, 2, 1, 3 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 10, 1, 11, 5, 6, 2, 13, 8, 7, 9, 3, 4, 12 }
  uselistorder i32 15, { 3, 22, 10, 8, 23, 7, 24, 4, 25, 5, 26, 6, 27, 12, 13, 14, 0, 9, 19, 28, 1, 20, 15, 16, 17, 2, 21, 18, 11 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 42, 43, 44, 45, 47, 46, 1, 48, 2, 12, 13, 14, 15, 16, 17, 3, 41, 0, 32, 26, 27, 18, 19, 5, 6, 7, 8, 4, 9, 33, 34, 35, 36, 37, 38, 39, 40, 23, 24, 25, 20, 10, 21, 22, 11, 28, 29, 30, 31 }
  uselistorder i32 13, { 5, 17, 10, 18, 4, 19, 20, 3, 2, 6, 21, 9, 22, 8, 23, 7, 24, 0, 11, 13, 15, 14, 16, 1, 12 }
  uselistorder i32 252, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 9, 10, 11, 12, 13, 14, 15, 161, 158, 159, 160, 162, 163, 164, 165, 16, 166, 167, 168, 169, 0, 1, 5, 19, 17, 18, 20, 21, 36, 22, 23, 6, 24, 25, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 42, 86, 39, 107, 108, 116, 118, 26, 119, 27, 87, 88, 89, 90, 91, 92, 72, 122, 123, 47, 124, 126, 143, 144, 41, 145, 28, 146, 48, 147, 131, 132, 133, 97, 98, 99, 120, 121, 93, 94, 170, 49, 2, 3, 171, 172, 95, 127, 128, 129, 130, 50, 117, 7, 51, 148, 149, 150, 151, 141, 43, 44, 45, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 139, 140, 134, 137, 138, 109, 110, 111, 135, 136, 96, 29, 142, 30, 112, 113, 52, 53, 114, 115, 100, 101, 54, 102, 55, 56, 184, 103, 57, 40, 125, 46, 105, 104, 152, 58, 59, 60, 61, 62, 64, 65, 154, 155, 4, 156, 157, 63, 66, 38, 31, 37, 32, 33, 8, 34, 35, 106, 67, 153, 68, 69, 70, 71 }
  uselistorder i32 32768, { 7, 8, 3, 4, 1, 6, 2, 9, 0, 5 }
  uselistorder i32 176, { 1, 8, 9, 0, 3, 5, 4, 6, 2, 7 }
  uselistorder i32 240, { 7, 8, 9, 10, 12, 11, 13, 1, 2, 3, 4, 14, 0, 5, 6 }
  uselistorder i32 128, { 5, 26, 6, 27, 28, 29, 16, 17, 0, 10, 11, 12, 20, 21, 22, 1, 2, 7, 19, 8, 9, 13, 25, 24, 3, 14, 15, 30, 4, 23, 18 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 3, { 62, 63, 64, 65, 66, 67, 68, 71, 5, 6, 69, 70, 72, 73, 74, 40, 13, 26, 49, 27, 41, 0, 1, 42, 2, 3, 43, 7, 22, 44, 18, 50, 51, 52, 9, 45, 4, 17, 54, 10, 55, 19, 56, 57, 48, 14, 58, 11, 28, 29, 76, 30, 31, 32, 33, 34, 35, 53, 23, 46, 36, 16, 39, 37, 8, 47, 77, 15, 59, 21, 60, 20, 61, 12, 75, 38, 24, 25 }
  uselistorder i32 9, { 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 41, 4, 5, 6, 7, 8, 46, 47, 48, 49, 9, 50, 0, 1, 2, 3, 51, 52, 11, 18, 10, 19, 20, 12, 21, 27, 28, 29, 22, 23, 24, 25, 31, 32, 13, 30, 26, 15, 16, 17, 14 }
  uselistorder i32 -1, { 166, 167, 165, 168, 169, 170, 164, 163, 171, 162, 172, 161, 173, 160, 174, 159, 158, 175, 157, 176, 156, 0, 138, 178, 179, 61, 180, 177, 1, 34, 277, 181, 182, 37, 38, 35, 36, 183, 39, 2, 184, 185, 186, 187, 3, 188, 189, 4, 5, 190, 77, 278, 191, 192, 279, 280, 78, 193, 281, 194, 75, 40, 195, 282, 6, 41, 196, 79, 283, 198, 284, 285, 76, 66, 67, 286, 287, 288, 289, 290, 134, 80, 291, 135, 7, 197, 68, 69, 199, 292, 293, 294, 200, 139, 140, 295, 201, 296, 297, 141, 142, 324, 81, 325, 126, 298, 202, 82, 143, 83, 299, 203, 204, 300, 301, 42, 302, 303, 70, 304, 205, 206, 125, 136, 127, 8, 207, 305, 208, 209, 43, 306, 309, 84, 326, 327, 85, 328, 9, 144, 329, 210, 211, 123, 212, 137, 339, 86, 10, 213, 340, 71, 72, 214, 128, 215, 129, 216, 11, 217, 133, 132, 341, 342, 343, 55, 56, 57, 58, 60, 73, 12, 13, 64, 307, 14, 15, 16, 88, 91, 87, 120, 121, 92, 90, 89, 308, 93, 218, 219, 220, 221, 222, 44, 334, 223, 310, 311, 312, 313, 94, 333, 96, 95, 314, 225, 224, 17, 226, 344, 145, 345, 227, 45, 46, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 228, 229, 18, 230, 124, 335, 337, 231, 97, 130, 232, 336, 233, 234, 235, 236, 237, 238, 239, 19, 240, 47, 338, 241, 146, 330, 331, 323, 242, 21, 20, 243, 244, 22, 315, 245, 98, 99, 65, 355, 100, 347, 101, 354, 102, 103, 371, 23, 104, 348, 349, 246, 24, 247, 248, 249, 147, 250, 131, 372, 251, 252, 350, 332, 149, 148, 105, 317, 106, 316, 63, 253, 254, 25, 255, 150, 351, 29, 256, 257, 28, 30, 352, 27, 258, 259, 48, 26, 260, 49, 50, 51, 52, 261, 262, 263, 59, 318, 319, 31, 107, 346, 108, 109, 110, 353, 111, 62, 53, 54, 264, 112, 320, 113, 114, 115, 322, 116, 321, 118, 373, 117, 374, 74, 265, 266, 119, 151, 122, 152, 153, 154, 32, 267, 268, 269, 270, 271, 272, 273, 274, 33, 275, 276, 155 }
  uselistorder i8 0, { 40, 47, 41, 42, 43, 44, 48, 49, 50, 53, 54, 45, 46, 51, 52, 55, 8, 56, 57, 58, 59, 6, 60, 61, 62, 26, 27, 64, 65, 63, 0, 1, 66, 39, 68, 69, 70, 71, 67, 73, 72, 9, 74, 75, 76, 29, 77, 78, 2, 80, 79, 81, 3, 82, 28, 83, 10, 11, 84, 4, 85, 86, 88, 87, 30, 89, 31, 12, 90, 91, 92, 93, 13, 95, 94, 96, 97, 99, 98, 32, 100, 5, 14, 15, 16, 17, 18, 7, 101, 103, 102, 33, 104, 105, 19, 106, 107, 34, 20, 21, 22, 23, 24, 25, 109, 35, 110, 111, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 120, 122, 124, 125, 123, 36, 126, 127, 38, 128, 37, 129, 130 }
  uselistorder i32 8, { 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 0, 275, 276, 1, 277, 2, 273, 274, 278, 279, 280, 281, 282, 258, 283, 45, 44, 284, 285, 286, 3, 287, 4, 288, 5, 6, 7, 8, 9, 10, 72, 73, 40, 11, 12, 29, 13, 36, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 14, 49, 88, 48, 89, 90, 74, 91, 92, 129, 130, 137, 139, 140, 141, 142, 15, 143, 93, 94, 75, 95, 96, 97, 98, 37, 99, 63, 64, 100, 101, 102, 50, 103, 104, 105, 106, 32, 33, 107, 108, 109, 65, 144, 145, 146, 147, 155, 41, 199, 110, 57, 58, 76, 164, 165, 166, 167, 168, 169, 117, 118, 119, 289, 16, 59, 290, 291, 111, 156, 157, 158, 159, 160, 161, 162, 163, 138, 200, 201, 257, 188, 292, 51, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 170, 171, 172, 179, 182, 183, 184, 185, 186, 187, 173, 174, 175, 176, 177, 178, 180, 181, 112, 113, 114, 115, 116, 189, 190, 191, 192, 193, 194, 195, 38, 196, 197, 198, 148, 149, 150, 151, 152, 153, 154, 131, 132, 133, 134, 135, 136, 120, 121, 122, 123, 60, 17, 310, 311, 66, 124, 205, 206, 207, 208, 42, 126, 127, 39, 125, 18, 203, 202, 209, 210, 211, 212, 213, 214, 215, 216, 19, 67, 217, 218, 219, 220, 221, 222, 223, 224, 20, 225, 226, 227, 228, 21, 229, 230, 22, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 248, 241, 242, 243, 244, 68, 31, 245, 246, 247, 69, 70, 23, 249, 250, 251, 252, 254, 255, 71, 24, 256, 25, 253, 54, 55, 52, 53, 34, 35, 46, 47, 56, 312, 61, 77, 43, 26, 27, 30, 28, 128, 204, 62 }
  uselistorder i32* @sl, { 87, 88, 89, 90, 91, 98, 92, 93, 94, 95, 96, 97, 25, 26, 27, 33, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 19, 20, 99, 100, 37, 38, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 28, 29, 30, 31, 32, 21, 22, 4, 5, 23, 24, 68, 69, 70, 2, 71, 72, 73, 74, 75, 76, 78, 3, 77, 80, 79, 81, 82, 83, 84, 85, 86, 6 }
  uselistorder i32* @r5, { 499, 500, 501, 502, 503, 504, 505, 10, 506, 507, 508, 509, 510, 11, 511, 512, 513, 514, 12, 515, 516, 15, 517, 518, 519, 520, 521, 16, 522, 523, 524, 525, 526, 14, 527, 533, 534, 535, 536, 13, 537, 528, 529, 530, 531, 17, 532, 19, 8, 538, 539, 540, 541, 542, 9, 543, 544, 545, 546, 18, 547, 566, 549, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 20, 564, 565, 567, 568, 569, 570, 68, 69, 70, 71, 72, 73, 74, 75, 76, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 208, 209, 210, 211, 212, 92, 0, 93, 94, 95, 96, 97, 98, 213, 214, 215, 216, 217, 239, 245, 246, 247, 99, 21, 100, 52, 101, 102, 103, 104, 105, 106, 107, 108, 110, 109, 111, 112, 22, 113, 114, 115, 116, 117, 118, 119, 49, 120, 121, 125, 5, 126, 1, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 54, 55, 56, 122, 123, 124, 137, 138, 139, 140, 141, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 2, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 23, 282, 283, 284, 285, 286, 363, 305, 306, 307, 308, 309, 310, 311, 48, 312, 313, 314, 331, 400, 401, 24, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 25, 416, 415, 50, 417, 418, 419, 420, 421, 142, 143, 144, 145, 146, 147, 148, 422, 423, 424, 425, 426, 427, 432, 433, 428, 429, 430, 431, 364, 365, 366, 367, 333, 334, 332, 26, 335, 336, 337, 151, 152, 153, 154, 155, 156, 157, 158, 159, 368, 571, 3, 572, 573, 574, 575, 576, 577, 315, 316, 317, 27, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 240, 241, 242, 243, 244, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 369, 28, 370, 371, 372, 578, 579, 580, 218, 53, 219, 4, 220, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 338, 339, 340, 341, 356, 357, 358, 359, 342, 354, 51, 355, 343, 344, 345, 29, 346, 347, 348, 349, 350, 30, 31, 351, 6, 352, 353, 360, 361, 362, 221, 222, 223, 149, 150, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 32, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 287, 288, 33, 289, 290, 291, 292, 293, 294, 34, 295, 296, 297, 298, 299, 300, 35, 36, 301, 302, 303, 304, 224, 225, 39, 226, 37, 227, 228, 229, 230, 231, 232, 38, 233, 234, 235, 236, 237, 238, 160, 40, 161, 162, 163, 164, 165, 166, 167, 41, 168, 169, 170, 171, 172, 593, 42, 594, 595, 43, 602, 615, 616, 603, 608, 613, 614, 173, 174, 175, 176, 177, 178, 179, 180, 57, 58, 59, 60, 61, 62, 63, 596, 597, 598, 599, 600, 601, 181, 182, 183, 184, 185, 186, 187, 188, 189, 445, 446, 447, 190, 191, 192, 193, 44, 45, 604, 605, 606, 607, 194, 195, 196, 197, 452, 453, 457, 458, 459, 460, 461, 454, 455, 456, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 7, 475, 476, 477, 478, 479, 46, 480, 481, 482, 483, 198, 199, 200, 201, 202, 448, 449, 450, 451, 491, 492, 493, 494, 487, 488, 489, 490, 203, 47, 204, 205, 206, 207, 495, 496, 497, 498, 609, 610, 611, 612, 484, 485, 486, 64 }
  uselistorder i32* @r7, { 334, 335, 336, 338, 339, 337, 340, 341, 342, 343, 2, 344, 345, 346, 358, 347, 348, 349, 350, 351, 352, 7, 353, 354, 355, 356, 357, 5, 3, 359, 34, 8, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 9, 10, 47, 48, 49, 50, 51, 0, 52, 53, 54, 55, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 143, 144, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 29, 30, 66, 67, 68, 69, 145, 146, 147, 150, 151, 152, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 202, 203, 204, 235, 236, 25, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 72, 73, 74, 75, 1, 76, 4, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 205, 206, 207, 208, 77, 78, 79, 80, 81, 82, 226, 11, 227, 228, 360, 361, 362, 363, 364, 365, 194, 195, 196, 197, 198, 199, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 209, 12, 210, 216, 217, 13, 211, 212, 213, 214, 14, 215, 218, 15, 219, 220, 221, 16, 222, 223, 224, 225, 125, 17, 126, 127, 128, 129, 130, 18, 131, 132, 133, 134, 229, 230, 19, 231, 232, 233, 234, 176, 177, 20, 178, 179, 180, 181, 182, 183, 184, 185, 135, 139, 136, 137, 138, 140, 141, 142, 83, 84, 89, 90, 91, 85, 86, 87, 88, 92, 93, 94, 95, 283, 284, 330, 331, 366, 367, 368, 369, 375, 376, 325, 326, 327, 328, 329, 26, 270, 271, 272, 273, 274, 332, 333, 21, 96, 97, 98, 99, 22, 31, 32, 100, 101, 6, 102, 27, 103, 104, 285, 286, 291, 292, 293, 294, 295, 296, 297, 287, 288, 289, 290, 298, 299, 300, 301, 302, 303, 304, 305, 23, 306, 307, 308, 275, 276, 277, 280, 281, 282, 278, 279, 315, 318, 319, 320, 316, 317, 28, 309, 312, 313, 314, 310, 311, 105, 106, 107, 108, 109, 110, 321, 322, 323, 324, 113, 114, 111, 112, 370, 24, 371, 372, 373, 374, 33 }
  uselistorder i32* @lr, { 5, 0, 146, 147, 148, 149, 157, 150, 151, 152, 153, 3, 154, 155, 156, 158, 159, 160, 161, 14, 15, 16, 17, 18, 9, 10, 11, 12, 13, 19, 1, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 54, 55, 59, 60, 61, 65, 66, 67, 34, 35, 36, 37, 38, 39, 6, 7, 40, 41, 42, 43, 44, 68, 69, 70, 71, 72, 73, 74, 78, 89, 90, 82, 8, 91, 92, 93, 94, 95, 96, 97, 45, 98, 99, 100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 110, 162, 163, 165, 166, 46, 47, 167, 168, 79, 80, 81, 62, 63, 64, 111, 112, 113, 52, 171, 172, 173, 174, 175, 176, 177, 178, 179, 83, 84, 85, 86, 87, 88, 56, 57, 58, 75, 76, 77, 53, 48, 49, 169, 170, 180, 181, 182, 185, 143, 144, 114, 115, 50, 116, 117, 183, 184, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 4, 132, 133, 135, 136, 134, 118, 119, 139, 140, 137, 138, 51, 141, 142, 164, 145 }
  uselistorder i32* @r6, { 312, 313, 314, 325, 315, 27, 316, 4, 317, 318, 5, 319, 320, 321, 322, 323, 324, 326, 1, 327, 328, 34, 35, 36, 37, 120, 121, 6, 122, 123, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 124, 125, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 8, 26, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 2, 77, 78, 9, 29, 62, 0, 63, 64, 79, 80, 81, 82, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 202, 203, 204, 232, 233, 234, 235, 11, 10, 83, 84, 85, 86, 87, 88, 236, 237, 12, 238, 239, 240, 241, 242, 243, 244, 207, 208, 205, 206, 209, 329, 330, 13, 331, 332, 333, 334, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 147, 148, 149, 150, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 224, 225, 126, 14, 127, 128, 210, 216, 217, 24, 218, 211, 212, 15, 213, 214, 215, 219, 220, 221, 222, 223, 129, 130, 131, 132, 89, 90, 226, 227, 228, 229, 16, 230, 231, 179, 17, 180, 181, 182, 183, 133, 28, 134, 25, 18, 19, 135, 136, 137, 138, 139, 140, 141, 142, 91, 92, 93, 94, 95, 96, 97, 98, 337, 20, 99, 100, 101, 102, 103, 30, 21, 31, 22, 32, 335, 336, 104, 105, 106, 257, 258, 259, 260, 107, 108, 109, 110, 111, 112, 265, 269, 270, 271, 272, 266, 267, 268, 273, 274, 275, 276, 277, 23, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 295, 289, 290, 291, 292, 294, 296, 113, 114, 3, 115, 261, 262, 263, 264, 304, 305, 306, 307, 300, 301, 302, 303, 116, 117, 118, 119, 308, 309, 310, 311, 297, 298, 299, 33 }
  uselistorder label %dec_label_pc_18908, { 1, 0 }
  uselistorder label %dec_label_pc_188a4, { 1, 0 }
  uselistorder label %dec_label_pc_18850, { 1, 0 }
  uselistorder label %dec_label_pc_18828, { 1, 0 }
  uselistorder label %dec_label_pc_18794, { 1, 0 }
  uselistorder label %dec_label_pc_18778, { 1, 0 }
  uselistorder label %dec_label_pc_1875c, { 1, 0 }
  uselistorder label %dec_label_pc_1870c, { 1, 0 }
  uselistorder label %dec_label_pc_186f0, { 1, 0 }
  uselistorder label %dec_label_pc_1866c, { 1, 0 }
  uselistorder label %dec_label_pc_18650, { 1, 0 }
  uselistorder label %dec_label_pc_1858c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1855c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_18544, { 1, 0 }
  uselistorder label %dec_label_pc_18528, { 1, 0 }
  uselistorder label %dec_label_pc_1828c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_183b4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_183a8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1839c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1834c, { 1, 0 }
  uselistorder label %dec_label_pc_1833c, { 1, 0 }
  uselistorder label %dec_label_pc_182c8, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_18990 = add i32 %ucbp, 76
  %v2_18990 = inttoptr i32 %v1_18990 to i32*
  %v3_18990 = load i32, i32* %v2_18990, align 4
  %v1_18994 = add i32 %v3_18990, 4
  %v2_18994 = inttoptr i32 %v1_18994 to i32*
  %v3_18994 = load i32, i32* %v2_18994, align 4
  %v3_1899c = mul i32 %v3_18994, 256
  %v4_189a4 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1899c, i32* %v4_189a4, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_189c4 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_189c4

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 105, 31, 106, 107, 32, 108, 33, 34, 35, 36, 37, 38, 39, 99, 114, 101, 40, 41, 42, 43, 102, 113, 44, 45, 46, 47, 48, 49, 50, 110, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 100, 111, 109, 78, 112, 79, 81, 80, 82, 98, 83, 84, 85, 103, 0, 104, 1, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97 }
  uselistorder i32 4, { 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 96, 385, 386, 387, 388, 389, 5, 392, 393, 390, 391, 394, 6, 395, 396, 397, 398, 7, 415, 8, 399, 400, 401, 402, 403, 9, 404, 10, 405, 406, 407, 408, 409, 410, 411, 11, 412, 114, 413, 414, 416, 417, 418, 419, 12, 420, 13, 14, 15, 162, 232, 233, 163, 16, 17, 82, 168, 169, 170, 18, 171, 19, 172, 173, 174, 175, 176, 177, 178, 179, 180, 81, 181, 182, 183, 184, 185, 186, 234, 235, 236, 237, 115, 238, 239, 247, 249, 250, 97, 251, 252, 253, 80, 254, 187, 20, 21, 116, 22, 117, 118, 119, 120, 188, 189, 23, 190, 121, 191, 192, 193, 99, 194, 195, 98, 122, 196, 197, 198, 199, 200, 201, 70, 123, 202, 204, 124, 125, 203, 164, 257, 126, 258, 259, 260, 261, 262, 263, 24, 264, 127, 100, 265, 128, 0, 1, 129, 270, 304, 305, 101, 102, 306, 130, 131, 132, 133, 307, 308, 104, 309, 103, 310, 25, 26, 2, 230, 27, 28, 283, 284, 285, 286, 214, 215, 255, 256, 205, 206, 207, 421, 208, 209, 271, 272, 273, 274, 275, 276, 277, 278, 279, 29, 280, 281, 282, 248, 30, 311, 31, 312, 367, 295, 240, 32, 33, 95, 90, 91, 34, 425, 92, 426, 85, 35, 36, 93, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 37, 444, 445, 446, 447, 448, 449, 84, 450, 451, 452, 453, 454, 455, 38, 39, 94, 456, 294, 105, 292, 293, 287, 288, 289, 290, 291, 210, 211, 212, 213, 296, 297, 298, 299, 300, 301, 40, 302, 106, 303, 266, 267, 268, 269, 134, 241, 242, 243, 244, 245, 246, 41, 216, 217, 218, 219, 42, 220, 86, 457, 135, 107, 136, 459, 43, 460, 137, 166, 167, 458, 89, 221, 222, 320, 321, 322, 323, 138, 139, 140, 226, 141, 142, 227, 44, 228, 229, 83, 45, 223, 143, 224, 144, 87, 225, 317, 145, 318, 319, 313, 314, 315, 316, 88, 326, 327, 328, 329, 330, 331, 146, 147, 46, 332, 333, 334, 335, 336, 337, 338, 339, 148, 324, 325, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 149, 150, 151, 354, 355, 358, 361, 356, 357, 108, 152, 359, 71, 360, 362, 363, 364, 366, 153, 48, 47, 365, 154, 155, 156, 49, 50, 51, 424, 52, 53, 157, 72, 54, 55, 422, 423, 165, 56, 57, 73, 74, 75, 58, 59, 60, 76, 61, 62, 63, 64, 158, 65, 231, 66, 77, 67, 68, 69, 110, 109, 111, 78, 159, 112, 160, 79, 161, 368, 369, 370, 371, 372, 373, 3, 4, 374, 113 }
  uselistorder i32 76, { 9, 10, 11, 12, 13, 14, 5, 6, 7, 8, 0, 2, 3, 4, 1 }
  uselistorder i32 1, { 738, 1382, 1383, 643, 1387, 1388, 1389, 1390, 663, 1391, 1392, 592, 618, 664, 1384, 1385, 1386, 1393, 644, 1394, 739, 327, 332, 330, 328, 333, 329, 331, 740, 741, 742, 743, 665, 666, 1395, 1396, 576, 746, 745, 744, 158, 160, 159, 161, 163, 162, 749, 748, 747, 417, 667, 668, 259, 1397, 59, 1398, 752, 751, 750, 346, 1399, 1400, 1401, 1402, 754, 753, 37, 39, 40, 38, 41, 648, 660, 755, 661, 649, 1013, 1012, 1014, 756, 219, 221, 220, 226, 225, 223, 224, 222, 1015, 757, 1016, 758, 337, 339, 335, 336, 338, 429, 248, 247, 619, 180, 759, 430, 431, 1017, 1018, 173, 172, 1019, 503, 504, 505, 760, 267, 268, 263, 264, 265, 266, 1126, 569, 1127, 761, 148, 149, 151, 150, 1020, 1021, 1022, 1023, 997, 762, 438, 435, 436, 433, 432, 440, 437, 434, 439, 1128, 669, 1129, 1130, 763, 86, 87, 88, 85, 91, 89, 90, 1131, 1132, 1024, 602, 1025, 603, 620, 1026, 1027, 1028, 670, 1029, 590, 621, 584, 604, 1030, 671, 1031, 1032, 1033, 0, 1034, 577, 1035, 570, 1036, 672, 1037, 1038, 1039, 622, 1040, 776, 775, 774, 773, 772, 771, 770, 769, 768, 767, 766, 765, 730, 764, 43, 51, 42, 44, 55, 47, 45, 56, 46, 52, 53, 49, 48, 50, 54, 1041, 1042, 166, 164, 169, 171, 167, 168, 165, 170, 84, 585, 777, 175, 174, 778, 113, 1043, 780, 779, 147, 143, 142, 141, 144, 145, 146, 623, 656, 783, 782, 781, 1133, 673, 674, 1134, 1135, 1151, 786, 785, 784, 444, 443, 441, 442, 1154, 787, 152, 153, 1155, 624, 1156, 1157, 788, 70, 1158, 789, 20, 1044, 1045, 790, 445, 605, 1046, 25, 675, 791, 645, 1047, 1048, 677, 1049, 1050, 1051, 1052, 1053, 678, 1054, 1055, 1056, 1057, 1058, 679, 1060, 626, 625, 1059, 676, 1061, 1062, 680, 1063, 1064, 1065, 796, 731, 795, 794, 793, 792, 29, 27, 28, 31, 36, 26, 35, 32, 34, 33, 30, 1066, 797, 447, 450, 449, 451, 446, 448, 606, 798, 218, 217, 1067, 1068, 1069, 184, 182, 181, 183, 647, 578, 1071, 1072, 593, 1073, 1074, 1, 2, 1075, 1077, 579, 1078, 682, 1079, 594, 1076, 681, 808, 807, 806, 805, 804, 803, 802, 801, 800, 799, 285, 287, 286, 683, 607, 809, 81, 82, 83, 1070, 657, 732, 810, 811, 229, 230, 812, 427, 426, 371, 370, 813, 814, 452, 1159, 816, 815, 139, 138, 137, 818, 817, 587, 819, 453, 684, 1160, 1161, 1162, 685, 1163, 658, 1164, 1165, 595, 1166, 1167, 822, 821, 820, 457, 454, 455, 456, 823, 460, 459, 458, 1168, 1169, 1170, 1185, 1186, 1187, 1194, 686, 687, 832, 831, 830, 829, 737, 828, 827, 826, 825, 824, 462, 465, 463, 464, 466, 461, 1197, 833, 403, 400, 402, 404, 401, 428, 650, 1237, 1238, 641, 1239, 1240, 1242, 571, 1243, 1244, 688, 637, 636, 690, 1245, 586, 608, 691, 692, 693, 1246, 1247, 1248, 1249, 1250, 1253, 3, 1241, 689, 1254, 646, 839, 733, 838, 837, 836, 835, 834, 305, 303, 304, 306, 1255, 1256, 1257, 1258, 1259, 572, 1260, 840, 238, 235, 237, 234, 233, 239, 236, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 627, 1088, 1089, 844, 843, 842, 841, 240, 241, 242, 243, 1090, 1091, 1092, 1093, 1094, 847, 846, 845, 275, 270, 273, 277, 272, 271, 274, 269, 278, 276, 628, 1261, 629, 1262, 1263, 1264, 1265, 4, 1266, 1267, 1268, 1269, 1270, 1271, 849, 848, 322, 321, 324, 325, 326, 323, 662, 1272, 1273, 1274, 1275, 1276, 850, 357, 356, 358, 355, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 851, 349, 347, 348, 350, 351, 609, 1120, 1198, 852, 467, 468, 469, 853, 246, 1199, 1200, 1201, 176, 179, 177, 178, 854, 114, 855, 119, 116, 117, 115, 118, 856, 98, 97, 94, 95, 96, 92, 93, 857, 99, 100, 107, 108, 103, 104, 105, 106, 101, 102, 858, 374, 373, 860, 859, 470, 471, 861, 651, 1095, 411, 412, 410, 186, 185, 1403, 630, 694, 1404, 6, 5, 862, 213, 208, 206, 207, 214, 211, 212, 209, 210, 205, 695, 227, 863, 560, 561, 559, 865, 864, 1188, 696, 1189, 1190, 1191, 1192, 1193, 866, 110, 111, 109, 112, 1152, 280, 279, 631, 1295, 1296, 1297, 1298, 869, 868, 867, 282, 284, 281, 283, 596, 642, 597, 1353, 1354, 1355, 1356, 632, 870, 140, 872, 871, 562, 563, 1226, 873, 1121, 1122, 154, 155, 1123, 874, 473, 474, 475, 472, 1136, 1137, 1138, 1406, 1140, 1139, 580, 875, 610, 1141, 1408, 611, 1409, 1410, 1411, 1412, 1413, 1414, 998, 1415, 1416, 1417, 1418, 1419, 1420, 999, 734, 877, 876, 127, 131, 133, 129, 128, 130, 132, 136, 134, 135, 1223, 1202, 1221, 1222, 638, 612, 21, 22, 23, 24, 697, 1203, 1204, 1219, 1220, 878, 735, 18, 19, 1211, 1000, 1212, 1213, 1001, 1214, 1215, 1216, 1217, 1218, 15, 9, 10, 12, 17, 13, 11, 14, 8, 16, 1205, 1206, 1207, 698, 1208, 1209, 1210, 879, 479, 483, 480, 476, 484, 477, 478, 481, 482, 1224, 1225, 880, 365, 364, 361, 360, 359, 363, 362, 366, 1142, 1143, 1144, 1145, 881, 298, 299, 297, 300, 301, 302, 882, 485, 1097, 699, 1096, 639, 885, 884, 883, 488, 494, 486, 490, 489, 493, 491, 492, 495, 487, 700, 1098, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 613, 886, 498, 496, 497, 502, 501, 499, 500, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 887, 381, 387, 384, 382, 385, 383, 386, 701, 1153, 888, 334, 1146, 1147, 1148, 1149, 1150, 702, 889, 187, 188, 189, 191, 190, 703, 192, 1099, 890, 380, 379, 704, 1100, 891, 375, 376, 705, 892, 345, 343, 344, 1101, 255, 254, 253, 893, 251, 249, 250, 894, 228, 895, 245, 244, 896, 897, 232, 231, 898, 413, 899, 900, 256, 257, 1421, 1422, 1423, 706, 1424, 1425, 707, 1426, 903, 902, 901, 71, 73, 79, 72, 77, 76, 80, 78, 74, 75, 904, 252, 708, 905, 506, 507, 508, 296, 906, 515, 513, 514, 512, 509, 510, 511, 907, 407, 408, 406, 409, 405, 909, 908, 910, 260, 911, 292, 294, 293, 295, 614, 912, 516, 1102, 709, 710, 1103, 1104, 1105, 419, 420, 418, 422, 423, 421, 425, 424, 913, 311, 314, 312, 313, 310, 309, 307, 308, 573, 581, 1302, 914, 318, 315, 316, 317, 319, 320, 1303, 1304, 1305, 1306, 1307, 1308, 915, 518, 517, 525, 524, 519, 526, 522, 528, 520, 521, 527, 523, 354, 588, 1009, 1010, 1011, 916, 917, 598, 1180, 599, 1181, 1182, 589, 1183, 530, 535, 529, 532, 534, 533, 537, 536, 531, 1184, 918, 64, 62, 69, 63, 68, 67, 65, 66, 600, 1106, 390, 389, 388, 391, 1299, 633, 1300, 920, 919, 396, 394, 393, 392, 398, 399, 397, 395, 921, 124, 126, 122, 120, 121, 123, 125, 922, 923, 1427, 634, 711, 925, 924, 926, 1309, 1312, 1313, 1314, 927, 538, 543, 544, 542, 541, 545, 539, 540, 1315, 1316, 1317, 1318, 928, 550, 556, 549, 555, 554, 548, 558, 557, 552, 546, 551, 547, 553, 1310, 1311, 712, 929, 353, 352, 1319, 1320, 1321, 1322, 1323, 1324, 652, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 714, 1333, 1334, 1335, 1336, 1337, 713, 1338, 1339, 1340, 1341, 1342, 930, 195, 197, 193, 196, 201, 203, 200, 202, 204, 198, 199, 194, 378, 377, 715, 716, 591, 934, 933, 932, 931, 291, 935, 369, 368, 936, 937, 564, 938, 939, 565, 940, 216, 215, 941, 942, 566, 943, 1251, 1252, 60, 61, 615, 1407, 1196, 1195, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1428, 57, 58, 944, 945, 946, 341, 340, 947, 948, 342, 949, 567, 416, 950, 367, 951, 372, 415, 414, 952, 288, 289, 290, 574, 1405, 262, 261, 1107, 582, 601, 1108, 1109, 1110, 575, 1111, 1112, 1113, 653, 1114, 1115, 1116, 1117, 717, 718, 654, 719, 958, 957, 956, 955, 954, 953, 720, 1118, 1119, 960, 959, 1124, 1125, 961, 1301, 967, 966, 965, 964, 963, 962, 1343, 721, 968, 659, 722, 723, 1344, 724, 1345, 976, 975, 974, 973, 972, 971, 970, 969, 635, 1346, 1347, 1348, 725, 583, 1349, 1350, 1351, 726, 1352, 979, 978, 977, 736, 1357, 1358, 983, 982, 981, 980, 1359, 1360, 727, 1370, 1371, 640, 1372, 985, 984, 655, 7, 989, 988, 987, 986, 617, 1361, 1362, 1363, 616, 1364, 1368, 1369, 728, 990, 729, 1365, 1366, 1367, 991, 258, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 993, 992, 156, 1381, 994, 157, 995, 996, 568 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_189f0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_189f8 = add i32 %tmp1, 72
  %v2_189f8 = inttoptr i32 %v1_189f8 to i32*
  %v3_189f8 = load i32, i32* %v2_189f8, align 4
  ret i32 %v3_189f8

; uselistorder directives
  uselistorder i32 72, { 15, 16, 0, 17, 8, 9, 1, 12, 13, 10, 11, 2, 3, 5, 6, 14, 4, 7 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 14, 13, 16, 15, 136, 137, 138, 139, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 75, 12, 76, 51, 78, 7, 9, 10, 79, 80, 2, 0, 1, 90, 52, 18, 19, 55, 20, 77, 53, 54, 140, 81, 82, 83, 84, 85, 21, 86, 74, 22, 91, 92, 87, 17, 141, 142, 143, 144, 145, 147, 148, 146, 149, 150, 151, 152, 153, 154, 155, 23, 24, 25, 26, 28, 27, 29, 88, 89, 30, 31, 69, 70, 71, 72, 73, 56, 57, 32, 58, 59, 60, 156, 11, 4, 61, 63, 64, 62, 94, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 3, 33, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 125, 126, 127, 128, 129, 130, 131, 133, 134, 34, 135, 8, 65, 66, 5, 67, 95, 6, 96, 35 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_18a0c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_18a0c)
  %v31_18a14 = load i32, i32* @r0, align 4
  ret i32 %v31_18a14

; uselistorder directives
  uselistorder i32* @r0, { 28, 29, 30, 300, 301, 123, 117, 118, 119, 120, 121, 122, 31, 26, 124, 97, 125, 5, 98, 126, 127, 96, 99, 128, 32, 27, 129, 130, 131, 132, 114, 33, 115, 116, 34, 35, 133, 134, 135, 136, 137, 138, 25, 139, 140, 36, 141, 142, 6, 202, 204, 101, 203, 2, 7, 143, 144, 93, 94, 145, 146, 147, 95, 148, 149, 150, 37, 151, 152, 153, 154, 38, 215, 214, 155, 156, 157, 71, 158, 159, 160, 8, 9, 161, 162, 10, 12, 0, 1, 163, 164, 11, 165, 166, 167, 40, 100, 168, 169, 170, 171, 172, 39, 173, 18, 174, 175, 4, 176, 177, 216, 41, 217, 218, 219, 13, 42, 43, 302, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 104, 255, 178, 256, 257, 258, 260, 259, 19, 20, 44, 238, 182, 242, 183, 303, 306, 307, 179, 62, 304, 305, 308, 310, 14, 63, 64, 235, 102, 236, 237, 103, 65, 261, 262, 263, 264, 265, 66, 195, 196, 197, 21, 311, 22, 70, 206, 3, 207, 23, 241, 45, 240, 46, 239, 180, 181, 243, 244, 245, 47, 205, 208, 209, 210, 211, 212, 213, 48, 49, 184, 185, 186, 50, 51, 52, 53, 54, 312, 309, 314, 108, 109, 110, 111, 55, 296, 297, 15, 56, 57, 266, 267, 16, 58, 59, 112, 113, 313, 231, 60, 268, 269, 270, 271, 187, 188, 278, 61, 105, 106, 279, 17, 280, 281, 282, 283, 284, 285, 286, 287, 272, 77, 273, 291, 68, 292, 289, 69, 290, 274, 67, 73, 24, 72, 74, 299, 293, 75, 294, 76, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 275, 276, 277, 288, 295, 298, 107, 78, 79, 80, 81, 82, 83, 84, 92, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder void (i32)* @__pseudo_branch, { 16, 100, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 17, 18, 19, 20, 21, 0, 71, 72, 73, 52, 53, 54, 43, 44, 45, 104, 59, 60, 61, 62, 63, 64, 55, 56, 57, 58, 65, 66, 41, 42, 22, 67, 68, 69, 70, 46, 47, 48, 49, 50, 51, 23, 24, 25, 26, 27, 28, 105, 110, 111, 112, 113, 114, 115, 116, 106, 120, 121, 122, 123, 29, 30, 31, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 108, 109, 1, 74, 75, 76, 32, 33, 34, 35, 36, 37, 38, 39, 40, 117, 118, 119, 86, 87, 88, 89, 90, 91, 124, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 92 }
  uselistorder i32 0, { 425, 424, 484, 485, 1463, 429, 428, 486, 1464, 1465, 1466, 1467, 363, 362, 487, 1468, 1469, 240, 1470, 1472, 1473, 164, 165, 1474, 1475, 1471, 97, 98, 99, 100, 2, 1, 3, 0, 229, 228, 230, 231, 232, 1476, 426, 427, 155, 145, 1477, 1478, 234, 235, 233, 236, 1479, 1480, 1481, 1482, 239, 238, 237, 1483, 1484, 1485, 415, 414, 488, 430, 489, 431, 490, 432, 491, 492, 493, 166, 1486, 446, 445, 1487, 1488, 444, 443, 1489, 494, 441, 442, 439, 440, 438, 437, 1490, 436, 435, 434, 433, 368, 1491, 1507, 1492, 243, 1493, 1494, 1495, 1496, 1497, 1498, 245, 1500, 1501, 241, 242, 1502, 1503, 140, 167, 1504, 1505, 613, 101, 102, 416, 417, 244, 1499, 1506, 367, 1508, 495, 496, 1509, 448, 447, 246, 1510, 1511, 247, 1512, 1513, 1514, 122, 497, 498, 1515, 248, 1516, 1517, 1518, 249, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 36, 141, 499, 1529, 250, 1530, 1531, 1532, 4, 1533, 1534, 5, 1535, 1536, 6, 691, 7, 692, 693, 614, 479, 480, 694, 695, 696, 697, 698, 699, 700, 9, 10, 11, 701, 702, 8, 703, 704, 615, 12, 705, 706, 37, 616, 707, 708, 709, 710, 711, 712, 713, 714, 118, 117, 251, 252, 253, 715, 716, 717, 13, 718, 719, 38, 720, 721, 722, 39, 40, 220, 723, 724, 725, 726, 41, 221, 500, 727, 728, 729, 730, 731, 732, 42, 733, 15, 14, 43, 617, 734, 619, 618, 735, 736, 737, 738, 739, 16, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 620, 690, 740, 741, 742, 743, 744, 17, 745, 621, 746, 747, 748, 749, 222, 223, 501, 750, 751, 19, 18, 752, 753, 754, 755, 756, 757, 758, 622, 623, 759, 625, 760, 761, 626, 627, 762, 763, 624, 764, 628, 765, 629, 766, 767, 768, 769, 20, 1054, 1055, 1056, 1057, 156, 1058, 254, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 255, 630, 633, 631, 632, 1066, 1067, 1068, 1069, 1070, 1071, 157, 770, 771, 772, 773, 774, 775, 256, 119, 410, 776, 777, 778, 779, 634, 780, 781, 782, 502, 783, 784, 785, 635, 786, 787, 788, 789, 1072, 1073, 55, 56, 1082, 1083, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 257, 168, 636, 790, 57, 169, 791, 792, 369, 170, 637, 371, 793, 58, 142, 794, 795, 370, 796, 797, 798, 799, 800, 259, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 172, 171, 260, 261, 813, 814, 815, 816, 817, 818, 173, 174, 819, 820, 821, 822, 823, 824, 44, 825, 826, 827, 828, 829, 59, 262, 830, 175, 504, 831, 832, 833, 834, 835, 505, 263, 836, 837, 838, 839, 454, 840, 841, 842, 453, 843, 844, 452, 845, 846, 258, 847, 503, 848, 265, 849, 45, 850, 449, 418, 851, 852, 853, 506, 507, 854, 855, 856, 450, 451, 857, 858, 859, 264, 860, 861, 862, 863, 864, 865, 866, 21, 867, 868, 869, 638, 870, 871, 872, 873, 874, 875, 877, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 892, 372, 894, 895, 176, 896, 1091, 1086, 1087, 1088, 1089, 267, 1090, 266, 1118, 268, 1125, 1126, 1127, 146, 1128, 147, 1129, 148, 1130, 149, 1131, 269, 1132, 1133, 270, 897, 898, 272, 899, 900, 271, 901, 273, 902, 903, 373, 904, 274, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 177, 915, 916, 917, 918, 920, 921, 919, 922, 178, 923, 926, 924, 925, 275, 508, 927, 928, 929, 276, 277, 930, 931, 932, 933, 934, 935, 509, 936, 937, 510, 938, 940, 278, 939, 374, 364, 941, 942, 944, 179, 945, 280, 946, 106, 107, 104, 105, 947, 511, 158, 150, 948, 949, 950, 283, 281, 282, 512, 951, 952, 953, 103, 279, 954, 955, 956, 957, 958, 959, 960, 961, 962, 513, 159, 406, 120, 963, 964, 965, 22, 284, 669, 670, 162, 108, 143, 943, 375, 224, 966, 989, 990, 1134, 1136, 1137, 1139, 1138, 285, 1140, 1141, 23, 160, 1537, 514, 1538, 1142, 286, 1143, 1144, 288, 289, 123, 124, 1145, 287, 1146, 1147, 1148, 1149, 180, 181, 1150, 1151, 1152, 290, 1153, 1154, 419, 1155, 1156, 515, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 109, 1164, 1165, 125, 1193, 1194, 1195, 1196, 1197, 1198, 376, 1199, 1200, 1201, 1211, 1202, 1272, 1301, 1302, 1303, 1210, 516, 182, 1304, 455, 408, 409, 517, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 46, 1313, 1314, 60, 377, 420, 1315, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 291, 1327, 639, 1328, 1319, 1308, 640, 365, 641, 1320, 1329, 1330, 1331, 61, 1333, 62, 1332, 183, 1334, 1335, 292, 967, 968, 969, 970, 971, 126, 972, 973, 293, 974, 47, 294, 975, 518, 976, 977, 411, 295, 296, 519, 520, 298, 1336, 1337, 1338, 1339, 1340, 299, 297, 521, 522, 1341, 1342, 1343, 1344, 300, 523, 1345, 524, 63, 64, 65, 66, 481, 301, 1346, 151, 1347, 303, 302, 525, 526, 1348, 1349, 1350, 1042, 1043, 378, 1212, 1213, 1214, 1215, 1216, 1220, 1217, 1218, 1219, 24, 379, 110, 1221, 527, 1222, 1223, 1224, 456, 457, 991, 992, 528, 1135, 529, 978, 1203, 1273, 1274, 1275, 998, 999, 25, 530, 979, 184, 531, 1539, 1540, 1541, 26, 27, 185, 186, 187, 1556, 1557, 188, 28, 980, 189, 1559, 190, 1204, 532, 304, 1205, 1206, 1207, 1208, 1209, 191, 314, 308, 313, 312, 305, 306, 309, 307, 311, 310, 1119, 1120, 1121, 1122, 533, 1351, 1352, 1353, 315, 316, 1354, 1355, 1356, 1357, 1358, 1359, 317, 1360, 192, 1442, 1443, 1444, 1445, 319, 318, 320, 1446, 1276, 321, 322, 1044, 1045, 144, 67, 1560, 111, 380, 1564, 1565, 68, 1092, 127, 1093, 1094, 1095, 381, 1566, 1567, 1568, 1569, 1570, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1571, 1572, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 48, 1591, 1592, 1593, 1594, 1595, 49, 1596, 1597, 1598, 50, 1599, 1600, 1601, 51, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1626, 1627, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 52, 1645, 1646, 1647, 1648, 1649, 53, 1650, 1651, 1652, 1653, 1654, 54, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 323, 1225, 642, 1226, 1265, 1227, 1228, 1262, 534, 535, 1263, 1264, 193, 194, 327, 1229, 325, 1230, 1251, 1244, 643, 1245, 1246, 1247, 1248, 69, 70, 130, 1249, 1250, 382, 1252, 1253, 644, 1254, 324, 1255, 71, 72, 129, 1256, 1257, 645, 1258, 1259, 73, 74, 128, 1260, 326, 1261, 1231, 646, 1232, 1233, 536, 1234, 1235, 647, 1236, 1237, 1240, 1238, 1239, 383, 1241, 75, 76, 132, 1242, 648, 77, 78, 131, 1243, 1266, 649, 1267, 1268, 1269, 1270, 1271, 1096, 650, 1097, 1098, 1099, 1100, 982, 981, 386, 984, 985, 983, 384, 385, 986, 987, 537, 988, 1277, 1278, 651, 1279, 1280, 1281, 652, 1282, 1283, 79, 80, 133, 1284, 1285, 1286, 112, 113, 1287, 1288, 1289, 328, 1290, 1291, 1292, 1293, 1294, 538, 1295, 1296, 1297, 1298, 1299, 1300, 1166, 653, 1167, 1168, 81, 82, 135, 1169, 1170, 1171, 654, 1172, 1173, 1174, 1175, 655, 1176, 1177, 83, 84, 134, 1178, 1179, 1180, 1181, 1182, 329, 331, 1123, 330, 1124, 332, 1085, 195, 1101, 1106, 1107, 1102, 1103, 1104, 1109, 1110, 1111, 333, 1112, 1113, 1114, 1115, 1116, 1105, 1108, 1117, 196, 993, 994, 995, 334, 996, 997, 335, 1000, 1004, 1005, 1006, 1007, 336, 1001, 337, 1002, 1003, 197, 1008, 1028, 1670, 1671, 1672, 1542, 1543, 1544, 338, 1545, 1369, 1460, 1010, 1009, 1011, 1673, 1674, 339, 1675, 1676, 1558, 1370, 1371, 412, 413, 539, 1681, 659, 1682, 540, 1683, 1684, 541, 1685, 1686, 657, 340, 388, 1687, 658, 1688, 542, 114, 1689, 1690, 543, 1703, 1704, 1707, 656, 387, 1708, 458, 199, 198, 1705, 1706, 1677, 1678, 660, 341, 366, 671, 29, 30, 1699, 1448, 1361, 1691, 1692, 1693, 1694, 544, 1695, 200, 1461, 1462, 152, 1012, 1013, 661, 1014, 545, 1015, 1016, 1017, 1018, 1019, 85, 86, 136, 1020, 87, 88, 137, 1372, 1373, 121, 390, 1377, 1374, 1375, 662, 1376, 1378, 663, 1379, 1380, 1381, 1382, 89, 90, 138, 1383, 342, 1384, 1385, 1386, 1388, 1387, 389, 672, 674, 673, 343, 675, 676, 677, 546, 678, 201, 1679, 1680, 1183, 1184, 1185, 1186, 1187, 1188, 345, 202, 1189, 1190, 1191, 153, 344, 1192, 1024, 1025, 547, 1021, 203, 1022, 204, 1023, 346, 1363, 1364, 1365, 31, 1362, 205, 206, 207, 154, 1026, 208, 209, 549, 550, 1698, 548, 210, 211, 1394, 1395, 1396, 1397, 1398, 347, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 348, 1389, 551, 1390, 1391, 552, 1392, 1393, 212, 1406, 1407, 352, 350, 351, 1408, 1409, 358, 357, 226, 349, 1410, 1411, 1412, 1413, 1414, 1415, 422, 421, 459, 553, 1416, 1417, 1418, 115, 1419, 354, 353, 355, 356, 225, 1420, 1421, 391, 1422, 1423, 163, 1424, 1425, 1426, 1427, 1428, 32, 33, 1029, 1030, 116, 1366, 1368, 1367, 1439, 1438, 1430, 1432, 1431, 1447, 213, 1561, 1562, 1563, 392, 34, 1709, 1710, 139, 554, 555, 359, 1031, 1032, 556, 1441, 1440, 1033, 1046, 1034, 1696, 1697, 1700, 1701, 1702, 1027, 35, 1546, 1547, 1548, 161, 1549, 1550, 1551, 1552, 1553, 360, 1554, 664, 667, 665, 666, 1555, 668, 423, 561, 562, 393, 91, 460, 557, 227, 558, 559, 461, 560, 1035, 563, 1036, 564, 565, 1037, 1038, 566, 1039, 482, 1040, 567, 1041, 568, 214, 462, 569, 463, 361, 1047, 1048, 570, 1049, 1051, 571, 572, 1050, 394, 1052, 1053, 464, 574, 575, 573, 576, 578, 577, 579, 1429, 465, 466, 467, 468, 1433, 1434, 582, 580, 581, 395, 1435, 583, 1436, 1437, 92, 589, 93, 588, 584, 587, 397, 590, 585, 586, 396, 591, 469, 215, 592, 593, 594, 595, 596, 1459, 216, 94, 407, 398, 472, 473, 1449, 1450, 1451, 399, 470, 471, 474, 1452, 1453, 475, 1454, 1455, 401, 95, 217, 218, 400, 1457, 1458, 483, 219, 96, 597, 1456, 598, 402, 599, 600, 404, 403, 601, 405, 1711, 476, 679, 477, 478, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726 }
  uselistorder i32* @r4, { 84, 664, 665, 666, 667, 668, 686, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 13, 683, 684, 685, 687, 688, 689, 690, 691, 65, 692, 693, 88, 14, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 85, 86, 87, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 10, 115, 116, 117, 118, 119, 15, 120, 121, 291, 17, 292, 16, 293, 294, 295, 122, 123, 18, 124, 125, 126, 19, 127, 20, 128, 129, 130, 131, 132, 8, 133, 0, 134, 135, 136, 1, 296, 59, 300, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 137, 138, 139, 140, 21, 141, 142, 143, 144, 145, 60, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 22, 193, 194, 195, 196, 197, 73, 74, 75, 180, 181, 63, 55, 182, 198, 199, 200, 350, 351, 352, 353, 354, 355, 356, 694, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 5, 394, 395, 396, 397, 398, 399, 400, 401, 402, 23, 403, 404, 482, 425, 426, 427, 513, 514, 515, 428, 429, 66, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 6, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 24, 26, 214, 25, 215, 536, 537, 538, 539, 542, 2, 540, 541, 11, 56, 543, 548, 549, 544, 545, 546, 547, 483, 484, 485, 486, 430, 27, 431, 432, 433, 28, 434, 435, 436, 437, 438, 439, 440, 3, 29, 441, 442, 443, 444, 445, 446, 447, 448, 223, 224, 349, 216, 405, 406, 487, 488, 489, 490, 695, 217, 218, 219, 67, 697, 698, 699, 9, 702, 696, 407, 408, 409, 410, 411, 412, 413, 414, 415, 30, 416, 417, 418, 419, 420, 421, 422, 423, 424, 330, 331, 332, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 661, 662, 491, 492, 493, 494, 495, 496, 497, 498, 499, 285, 286, 287, 288, 289, 290, 703, 704, 301, 302, 31, 7, 303, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 32, 449, 476, 477, 450, 451, 452, 453, 454, 473, 33, 474, 475, 68, 455, 456, 458, 34, 459, 462, 35, 463, 464, 36, 465, 466, 37, 467, 468, 38, 469, 470, 39, 471, 61, 472, 69, 457, 478, 479, 40, 480, 481, 304, 305, 306, 307, 308, 460, 461, 220, 221, 222, 500, 501, 502, 503, 504, 41, 505, 42, 43, 506, 507, 508, 509, 510, 511, 512, 380, 381, 44, 382, 383, 45, 384, 385, 46, 386, 387, 47, 388, 389, 48, 390, 391, 49, 392, 393, 333, 334, 335, 336, 297, 298, 299, 309, 310, 311, 50, 312, 313, 314, 51, 315, 316, 317, 318, 319, 320, 57, 321, 322, 323, 324, 325, 326, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 12, 235, 236, 237, 238, 700, 701, 70, 721, 587, 588, 64, 724, 58, 725, 726, 727, 743, 745, 746, 747, 744, 728, 733, 741, 742, 722, 734, 735, 736, 737, 729, 730, 71, 52, 239, 53, 240, 241, 242, 589, 76, 77, 78, 79, 80, 81, 723, 257, 258, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 564, 567, 568, 569, 570, 565, 566, 571, 572, 573, 574, 575, 576, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 731, 732, 265, 266, 267, 268, 590, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 54, 608, 609, 610, 611, 591, 592, 593, 594, 595, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 62, 625, 626, 4, 627, 628, 629, 630, 631, 632, 269, 270, 271, 577, 578, 579, 580, 581, 582, 583, 646, 647, 648, 649, 650, 651, 652, 637, 638, 639, 640, 641, 642, 643, 644, 645, 72, 584, 585, 586, 272, 273, 274, 275, 653, 654, 655, 658, 659, 660, 656, 657, 738, 739, 740, 276, 277, 278, 279, 280, 281, 282, 283, 284, 633, 634, 635, 636, 82, 83, 663 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i8** @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
