source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1da28.5 = global i32 0
@global_var_1da38.6 = global i32* @global_var_1da28.5
@global_var_1db94.12 = global i32 0
@global_var_e100.18 = constant i32 -382906384
@global_var_1dbb0.23 = global i32 0
@global_var_8314.24 = constant i32 -352321546
@global_var_13844.25 = constant i32 -481296384
@global_var_a4c4.31 = constant i32 -382906384
@global_var_a988.33 = constant i32 -382906384
@global_var_89d8.35 = constant i32 -382906384
@global_var_c96c.37 = constant i32 -382906384
@global_var_c1f8.39 = constant i32 -382906384
@global_var_b998.41 = constant i32 -382906384
@global_var_9da8.44 = constant i32 -382906384
@global_var_962c.46 = constant i32 -382906384
@global_var_1dc4c.49 = global i32 0
@global_var_15484.61 = constant i32 47
@global_var_1dc54.63 = global i32 0
@global_var_1dbb4.65 = global i32 0
@global_var_1dc50.67 = global i32 0
@global_var_a400.68 = constant i32 -444268532
@global_var_e800.69 = constant i32 57256
@global_var_dfc0.72 = constant i32 -382910448
@global_var_1da44.74 = global i32 75216
@global_var_15488.76 = constant [15 x i8] c"185.55.218.173\00"
@global_var_1dc5c.79 = local_unnamed_addr global i32 0
@global_var_1dc5b.80 = local_unnamed_addr global i32 0
@global_var_1dc5a.81 = local_unnamed_addr global i32 0
@global_var_1dbb8.83 = global i32 0
@global_var_dfa8.84 = constant i32 -442556408
@global_var_1dc59.88 = local_unnamed_addr global i32 0
@global_var_15498.92 = constant i32 10
@global_var_1da3c.94 = global i32 -1
@global_var_1da40.96 = global i32 -1
@global_var_12c1c.99 = constant i32 -382910448
@global_var_125d0.100 = constant i32 -382910224
@global_var_1549c.102 = constant i32 16777216
@global_var_1dbc0.104 = global i32 0
@global_var_1dbcc.106 = global i32 0
@global_var_1dbc4.108 = global i32 0
@global_var_1dbc8.110 = global i32 0
@global_var_1dc04.124 = global i32 0
@global_var_1dbd0.126 = global i32 0
@global_var_1dbfc.128 = global i32 0
@global_var_1dc70.133 = global i32 0
@global_var_1dc68.137 = global i32 0
@global_var_1dc6c.139 = global i32 0
@global_var_1dbd7.142 = local_unnamed_addr global i32 0
@global_var_1dbd6.143 = local_unnamed_addr global i32 0
@global_var_1dbe8.145 = global i32 0
@global_var_1dbd9.147 = local_unnamed_addr global i32 0
@global_var_1dbdd.148 = local_unnamed_addr global i32 0
@global_var_1dbdc.149 = local_unnamed_addr global i32 0
@global_var_1dbe9.150 = local_unnamed_addr global i32 0
@global_var_1dbea.151 = local_unnamed_addr global i32 0
@global_var_1dbeb.152 = local_unnamed_addr global i32 0
@global_var_1dbd8.153 = local_unnamed_addr global i32 0
@global_var_1dbf7.155 = local_unnamed_addr global i32 0
@global_var_15544.157 = constant [6 x i8] c"3!1' \00"
@global_var_1554c.159 = constant [5 x i8] c"eeee\00"
@global_var_1dbf6.160 = local_unnamed_addr global i32 0
@global_var_15554.162 = constant [6 x i8] c"efg`a\00"
@global_var_1555c.164 = constant [7 x i8] c"efg`ab\00"
@global_var_154d8.166 = constant i32 0
@global_var_154a4.168 = constant [5 x i8] c"!'1&\00"
@global_var_154ac.170 = constant [8 x i8] c"0125!8 \00"
@global_var_154b4.172 = constant i32 943467547
@global_var_154c0.174 = constant i32 322070023
@global_var_154cc.176 = constant [7 x i8] c"5: '8%\00"
@global_var_154d4.178 = constant [5 x i8] c"&;; \00"
@global_var_154dc.180 = constant [6 x i8] c"\22=.,\22\00"
@global_var_154e4.182 = constant [6 x i8] c".8,,z\00"
@global_var_154ec.184 = constant [9 x i8] c"<!: acam\00"
@global_var_154f8.186 = constant [5 x i8] c"5:?;\00"
@global_var_15500.188 = constant [4 x i8] c"a!$\00"
@global_var_15504.190 = constant [7 x i8] c",7gaee\00"
@global_var_1550c.192 = constant [8 x i8] c"'!$$;& \00"
@global_var_15514.194 = constant [7 x i8] c"93gadd\00"
@global_var_1551c.196 = constant [7 x i8] c"91&8=:\00"
@global_var_15524.198 = constant [6 x i8] c"509=:\00"
@global_var_1552c.200 = constant [7 x i8] c"x65fg`\00"
@global_var_15534.202 = constant [8 x i8] c"5%!5&=;\00"
@global_var_1553c.204 = constant [4 x i8] c"6=:\00"
@global_var_1dbe0.205 = local_unnamed_addr global i32 0
@global_var_1dbe4.207 = local_unnamed_addr global i32 0
@global_var_1dbde.208 = local_unnamed_addr global i32 0
@global_var_1dbdf.209 = local_unnamed_addr global i32 0
@global_var_1dbec.211 = local_unnamed_addr global i32 0
@global_var_1dbf8.212 = local_unnamed_addr global i32 0
@global_var_1dbf9.213 = local_unnamed_addr global i32 0
@global_var_15540.223 = constant [3 x i8] c"\0D\0A\00"
@global_var_1556c.225 = constant i32 2096127
@global_var_15563.227 = constant i32 2095871
@global_var_1dc78.230 = global i32 0
@global_var_1da48.233 = global i32 -555811921
@global_var_15570.238 = constant [3 x i8] c"RS\00"
@global_var_1dc80.239 = local_unnamed_addr global i32 0
@global_var_1dc84.240 = local_unnamed_addr global i32 0
@global_var_1dc85.241 = local_unnamed_addr global i32 0
@global_var_15574.243 = constant [3 x i8] c"DR\00"
@global_var_1dc88.244 = local_unnamed_addr global i32 0
@global_var_1dc8c.245 = local_unnamed_addr global i32 0
@global_var_1dc8d.246 = local_unnamed_addr global i32 0
@global_var_15578.248 = constant i32 102040347
@global_var_1dc94.249 = local_unnamed_addr global i32 0
@global_var_1dc90.250 = local_unnamed_addr global i32 0
@global_var_1dc95.251 = local_unnamed_addr global i32 0
@global_var_15590.253 = constant [7 x i8] c"'<188T\00"
@global_var_1dc98.254 = local_unnamed_addr global i32 0
@global_var_1dc9c.255 = local_unnamed_addr global i32 0
@global_var_1dc9d.256 = local_unnamed_addr global i32 0
@global_var_15598.258 = constant [8 x i8] c"1:5681T\00"
@global_var_1dca0.259 = local_unnamed_addr global i32 0
@global_var_1dca4.260 = local_unnamed_addr global i32 0
@global_var_1dca5.261 = local_unnamed_addr global i32 0
@global_var_155a0.263 = constant [8 x i8] c"'-' 19T\00"
@global_var_1dca8.264 = local_unnamed_addr global i32 0
@global_var_1dcac.265 = local_unnamed_addr global i32 0
@global_var_1dcad.266 = local_unnamed_addr global i32 0
@global_var_155a8.268 = constant [4 x i8] c"'<T\00"
@global_var_1dcb4.269 = local_unnamed_addr global i32 0
@global_var_1dcb0.270 = local_unnamed_addr global i32 0
@global_var_1dcb5.271 = local_unnamed_addr global i32 0
@global_var_155ac.273 = constant i32 977090171
@global_var_1dcbc.274 = local_unnamed_addr global i32 0
@global_var_1dcb8.275 = local_unnamed_addr global i32 0
@global_var_1dcbd.276 = local_unnamed_addr global i32 0
@global_var_155c0.278 = constant i32 102040347
@global_var_1dcc4.279 = local_unnamed_addr global i32 0
@global_var_1dcc0.280 = local_unnamed_addr global i32 0
@global_var_1dcc5.281 = local_unnamed_addr global i32 0
@global_var_155dc.283 = constant [10 x i8] c":7;&&17 T\00"
@global_var_1dccc.284 = local_unnamed_addr global i32 0
@global_var_1dcc8.285 = local_unnamed_addr global i32 0
@global_var_1dccd.286 = local_unnamed_addr global i32 0
@global_var_155e8.288 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_1dcd0.289 = local_unnamed_addr global i32 0
@global_var_1dcd4.290 = local_unnamed_addr global i32 0
@global_var_1dcd5.291 = local_unnamed_addr global i32 0
@global_var_155fc.293 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_1dcdc.294 = local_unnamed_addr global i32 0
@global_var_1dcd8.295 = local_unnamed_addr global i32 0
@global_var_1dcdd.296 = local_unnamed_addr global i32 0
@global_var_15614.298 = constant [8 x i8] c"{$&;7{T\00"
@global_var_1dce0.299 = local_unnamed_addr global i32 0
@global_var_1dce4.300 = local_unnamed_addr global i32 0
@global_var_1dce5.301 = local_unnamed_addr global i32 0
@global_var_1561c.303 = constant [6 x i8] c"{1,1T\00"
@global_var_1dcec.304 = local_unnamed_addr global i32 0
@global_var_1dce8.305 = local_unnamed_addr global i32 0
@global_var_1dced.306 = local_unnamed_addr global i32 0
@global_var_15624.308 = constant [5 x i8] c"{20T\00"
@global_var_1dcf4.309 = local_unnamed_addr global i32 0
@global_var_1dcf0.310 = local_unnamed_addr global i32 0
@global_var_1dcf5.311 = local_unnamed_addr global i32 0
@global_var_1562c.313 = constant [7 x i8] c"{95$'T\00"
@global_var_1dcf8.314 = local_unnamed_addr global i32 0
@global_var_1dcfc.315 = local_unnamed_addr global i32 0
@global_var_1dcfd.316 = local_unnamed_addr global i32 0
@global_var_15634.318 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_1dd00.319 = local_unnamed_addr global i32 0
@global_var_1dd04.320 = local_unnamed_addr global i32 0
@global_var_1dd05.321 = local_unnamed_addr global i32 0
@global_var_15644.323 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_1dd60.324 = local_unnamed_addr global i32 0
@global_var_1dd64.325 = local_unnamed_addr global i32 0
@global_var_1dd65.326 = local_unnamed_addr global i32 0
@global_var_15650.328 = constant [8 x i8] c"z5:=91T\00"
@global_var_1dd68.329 = local_unnamed_addr global i32 0
@global_var_1dd6c.330 = local_unnamed_addr global i32 0
@global_var_1dd6d.331 = local_unnamed_addr global i32 0
@global_var_15658.333 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_1dd08.334 = local_unnamed_addr global i32 0
@global_var_1dd0c.335 = local_unnamed_addr global i32 0
@global_var_1dd0d.336 = local_unnamed_addr global i32 0
@global_var_1566c.338 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1dd10.339 = local_unnamed_addr global i32 0
@global_var_1dd14.340 = local_unnamed_addr global i32 0
@global_var_1dd15.341 = local_unnamed_addr global i32 0
@global_var_156f4.343 = constant i32 557516544
@global_var_1dd1c.344 = local_unnamed_addr global i32 0
@global_var_1dd18.345 = local_unnamed_addr global i32 0
@global_var_1dd1d.346 = local_unnamed_addr global i32 0
@global_var_15678.348 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1dd24.349 = local_unnamed_addr global i32 0
@global_var_1dd20.350 = local_unnamed_addr global i32 0
@global_var_1dd25.351 = local_unnamed_addr global i32 0
@global_var_1568c.353 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_1dd2c.354 = local_unnamed_addr global i32 0
@global_var_1dd28.355 = local_unnamed_addr global i32 0
@global_var_1dd2d.356 = local_unnamed_addr global i32 0
@global_var_1569c.358 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_1dd30.359 = local_unnamed_addr global i32 0
@global_var_1dd34.360 = local_unnamed_addr global i32 0
@global_var_1dd35.361 = local_unnamed_addr global i32 0
@global_var_156ac.363 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_1dd3c.364 = local_unnamed_addr global i32 0
@global_var_1dd38.365 = local_unnamed_addr global i32 0
@global_var_1dd3d.366 = local_unnamed_addr global i32 0
@global_var_156c0.368 = constant [9 x i8] c"$662*7!E\00"
@global_var_1dd40.369 = local_unnamed_addr global i32 0
@global_var_1dd44.370 = local_unnamed_addr global i32 0
@global_var_1dd45.371 = local_unnamed_addr global i32 0
@global_var_156cc.373 = constant [6 x i8] c";3=:T\00"
@global_var_1dd4c.374 = local_unnamed_addr global i32 0
@global_var_1dd48.375 = local_unnamed_addr global i32 0
@global_var_1dd4d.376 = local_unnamed_addr global i32 0
@global_var_156d4.378 = constant [7 x i8] c"1: 1&T\00"
@global_var_1dd50.379 = local_unnamed_addr global i32 0
@global_var_1dd54.380 = local_unnamed_addr global i32 0
@global_var_1dd55.381 = local_unnamed_addr global i32 0
@global_var_156dc.383 = constant [24 x i8] c"m!efg``l!ef`5!le`0`,edT\00"
@global_var_1dd5d.384 = local_unnamed_addr global i32 0
@global_var_1dd58.385 = local_unnamed_addr global i32 0
@global_var_1dd5c.386 = local_unnamed_addr global i32 0
@global_var_1422c.389 = constant i32 -476053504
@global_var_12fec.393 = constant i32 -443219956
@global_var_13158.398 = constant i32 -376111092
@global_var_1dc40.401 = global i32 0
@global_var_132cc.403 = constant i32 -456978431
@global_var_1dd70.405 = global i32 0
@global_var_1dc08.407 = global i32 0
@global_var_1db48.410 = global i32 256
@global_var_1da4c.411 = global i32* @global_var_1db48.410
@global_var_1dc30.414 = global i32 0
@global_var_1ddf0.416 = global i32 0
@global_var_149e0.417 = constant i32 -382910416
@global_var_13250.418 = constant i32 -509595648
@global_var_138c4.425 = constant i32 -442564520
@global_var_1db54.431 = global i32 0
@global_var_12e98.433 = constant i32 -481230848
@global_var_1dc20.435 = global i32 0
@global_var_14630.437 = constant i32 -509587456
@global_var_15818.439 = constant i32 33554944
@global_var_1db8c.440 = global i32* @global_var_15818.439
@global_var_1db6c.443 = global i32 0
@global_var_1dc24.447 = local_unnamed_addr global i32 0
@global_var_13fe4.449 = constant i32 -352321419
@global_var_1da1c.453 = global i32 -1
@global_var_1dc34.456 = global i32 0
@global_var_1dc38.458 = local_unnamed_addr global i32 0
@global_var_14218.459 = constant i32 -390234096
@global_var_1570c.461 = constant [10 x i8] c"/dev/null\00"
@global_var_1dc3c.463 = global i32 0
@global_var_1dc28.468 = local_unnamed_addr global i32 0
@global_var_1dc2c.470 = global i32 0
@global_var_13230.472 = constant i32 -369096958
@global_var_1db84 = external local_unnamed_addr global i32
@global_var_131f0.482 = constant i32 -442564608
@global_var_144e0.484 = constant i32 -335544664
@global_var_145fc.487 = constant i32 -275775369
@global_var_14d74.488 = constant i32 -382910352
@global_var_1dc48.490 = global i32 0
@global_var_1de08.493 = global i32 0
@global_var_1de0c.495 = global i32 0
@global_var_1da20.498 = global i32 0
@global_var_1db90.3 = external global i8*
@global_var_1dbac.21 = external global i8*
@global_var_1dbad.29 = global i8 0
@global_var_1dc58.78 = external global i8*
@global_var_1dbbc.98 = external global i8*
@global_var_1dc00.130 = external global i8*
@global_var_1dc01.131 = local_unnamed_addr global i8 0
@global_var_1dbd4.141 = external global i8*
@global_var_1dbf4.146 = local_unnamed_addr global i8 0
@global_var_1dbf5.154 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  %v1_80a4 = call i32 @function_15434(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1db90.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1db90.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb8, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb8:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1da38.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1da38.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb9, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1da38.6 to i32), %bb8 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb8 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1da38.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %.loopexit, %bb8
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1db90.3 to i32), %bb8 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1da38.6, { 1, 0 }
  uselistorder i8** @global_var_1db90.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 121388 to i32*), align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 121388

bb2:                                              ; preds = %.thread
  ret i32 121388

; uselistorder directives
  uselistorder i32 121388, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_142cc(i32 ptrtoint (i32* @global_var_e100.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 87152, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_13c94()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_81cc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_81cc = urem i32 %arg1, 256
  %v2_81d0 = icmp eq i32 %v1_81cc, 0
  %v1_81d8 = urem i32 %arg3, 256
  br i1 %v2_81d0, label %dec_label_pc_821c, label %dec_label_pc_81e4

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81cc
  %v0_81e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e4 = add i32 %v0_81e4, 4
  %v2_81e4 = inttoptr i32 %v1_81e4 to i8*
  %v3_81e4 = load i8, i8* %v2_81e4, align 1
  %v4_81e4 = zext i8 %v3_81e4 to i32
  %v9_81e8 = icmp eq i32 %v4_81e4, %v1_81d8
  br i1 %v9_81e8, label %dec_label_pc_8224, label %dec_label_pc_820c.preheader

dec_label_pc_820c.preheader:                      ; preds = %dec_label_pc_81e4
  br label %dec_label_pc_820c

dec_label_pc_81fc:                                ; preds = %dec_label_pc_820c
  %v1_81fc = add i32 %v0_8204.in, 12
  %v2_81fc = inttoptr i32 %v1_81fc to i8*
  %v3_81fc = load i8, i8* %v2_81fc, align 1
  %v4_81fc = zext i8 %v3_81fc to i32
  %v9_8200 = icmp eq i32 %v4_81fc, %v1_81d8
  br i1 %v9_8200, label %dec_label_pc_8224, label %dec_label_pc_820c

dec_label_pc_820c:                                ; preds = %dec_label_pc_820c.preheader, %dec_label_pc_81fc
  %v0_8204.in = phi i32 [ %v0_81e4, %dec_label_pc_820c.preheader ], [ %v0_8204, %dec_label_pc_81fc ]
  %v0_820c = phi i32 [ 0, %dec_label_pc_820c.preheader ], [ %v1_820c, %dec_label_pc_81fc ]
  %v0_8204 = add i32 %v0_8204.in, 8
  %v1_820c = add i32 %v0_820c, 1
  %v9_8210 = icmp eq i32 %v1_820c, %v1_81cc
  store i32 %v0_8204, i32* %r1.global-to-local, align 4
  br i1 %v9_8210, label %dec_label_pc_821c, label %dec_label_pc_81fc

dec_label_pc_821c:                                ; preds = %dec_label_pc_820c, %dec_label_pc_81cc
  ret i32 %arg4

dec_label_pc_8224:                                ; preds = %dec_label_pc_81fc, %dec_label_pc_81e4
  %v0_8224 = phi i32 [ %v0_81e4, %dec_label_pc_81e4 ], [ %v0_8204, %dec_label_pc_81fc ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  ret i32 %v2_8224

; uselistorder directives
  uselistorder i32 %v1_820c, { 1, 0 }
  uselistorder i32 %v0_8204, { 1, 0, 2 }
  uselistorder i32 %v0_8204.in, { 1, 0 }
  uselistorder i32 %v0_81e4, { 1, 0, 2 }
  uselistorder i32 %v1_81d8, { 1, 0 }
  uselistorder i32 %v1_81cc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_820c, { 1, 0 }
}

define i32 @function_8230(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8230:
  store i32 %arg1, i32* @r6, align 4
  %v1_823c = urem i32 %arg2, 256
  store i32 %v1_823c, i32* @r7, align 4
  %v0_8248 = call i32 @function_12c48()
  %v7_824c = icmp eq i32 %v0_8248, -1
  %tmp23 = icmp slt i32 %v0_8248, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_8230
  br label %bb25

bb24:                                             ; preds = %dec_label_pc_8230
  %. = zext i1 %v7_824c to i32
  store i32 %., i32* @r5, align 4
  %v2_8264 = icmp eq i1 %v7_824c, false
  br i1 %v2_8264, label %bb26, label %bb25

bb25:                                             ; preds = %.thread2, %bb24
  ret i32 %v0_8248

bb26:                                             ; preds = %bb24
  %v0_826c = call i32 @function_12c48()
  %v7_8270 = icmp eq i32 %v0_826c, -1
  store i32 %v0_826c, i32* @r4, align 4
  br i1 %v7_8270, label %dec_label_pc_82a0, label %dec_label_pc_827c

dec_label_pc_827c:                                ; preds = %bb26
  %v2_827c = icmp eq i32 %v0_826c, 0
  br i1 %v2_827c, label %dec_label_pc_8284, label %dec_label_pc_82a8

dec_label_pc_8284:                                ; preds = %dec_label_pc_827c
  %v0_8284 = load i32, i32* @r6, align 4
  %v1_8288 = call i32 @function_1401c(i32 %v0_8284)
  %v0_828c = call i32 @function_12ca0()
  %v2_8294 = call i32 @function_12d1c(i32 %v0_828c, i32 9)
  %v0_8298 = load i32, i32* @r4, align 4
  %v1_829c = call i32 @function_13f88(i32 %v0_8298)
  br label %dec_label_pc_82a0

dec_label_pc_82a0:                                ; preds = %bb26, %dec_label_pc_8284
  %v0_82a0 = load i32, i32* @r5, align 4
  %v1_82a4 = call i32 @function_13f88(i32 %v0_82a0)
  br label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_827c, %dec_label_pc_82a0
  %v2_82ac = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_82ac = zext i8 %v2_82ac to i32
  %v2_82b0 = icmp eq i8 %v2_82ac, 0
  br i1 %v2_82b0, label %dec_label_pc_82f4, label %dec_label_pc_82b8

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82a8
  %v2_82bc = load i32, i32* @global_var_1dbb0.23, align 4
  %v1_82c0 = inttoptr i32 %v2_82bc to i32*
  %v2_82c0 = load i32, i32* %v1_82c0, align 4
  store i32 %v2_82c0, i32* @ip, align 4
  %v1_82c4 = add i32 %v2_82c0, 4
  %v2_82c4 = inttoptr i32 %v1_82c4 to i8*
  %v3_82c4 = load i8, i8* %v2_82c4, align 1
  %v4_82c4 = zext i8 %v3_82c4 to i32
  %v1_82c8 = load i32, i32* @r7, align 4
  %v9_82c8 = icmp eq i32 %v4_82c4, %v1_82c8
  br i1 %v9_82c8, label %dec_label_pc_82fc, label %dec_label_pc_82e8.preheader

dec_label_pc_82e8.preheader:                      ; preds = %dec_label_pc_82b8
  %v1_82cc = load i32, i32* @r5, align 4
  br label %dec_label_pc_82e8

dec_label_pc_82d8:                                ; preds = %dec_label_pc_82e8
  %v4_82d8 = mul i32 %v1_82e8, 4
  %v5_82d8 = add i32 %v4_82d8, %v2_82bc
  %v6_82d8 = inttoptr i32 %v5_82d8 to i32*
  %v7_82d8 = load i32, i32* %v6_82d8, align 4
  store i32 %v7_82d8, i32* @ip, align 4
  %v1_82dc = add i32 %v7_82d8, 4
  %v2_82dc = inttoptr i32 %v1_82dc to i8*
  %v3_82dc = load i8, i8* %v2_82dc, align 1
  %v4_82dc = zext i8 %v3_82dc to i32
  %v9_82e0 = icmp eq i32 %v4_82dc, %v1_82c8
  br i1 %v9_82e0, label %dec_label_pc_82fc, label %dec_label_pc_82e8

dec_label_pc_82e8:                                ; preds = %dec_label_pc_82e8.preheader, %dec_label_pc_82d8
  %v0_82e8 = phi i32 [ %v1_82cc, %dec_label_pc_82e8.preheader ], [ %v1_82e8, %dec_label_pc_82d8 ]
  %v1_82e8 = add i32 %v0_82e8, 1
  %v9_82ec = icmp eq i32 %v1_82e8, %v3_82ac
  br i1 %v9_82ec, label %dec_label_pc_82f4, label %dec_label_pc_82d8

dec_label_pc_82f4:                                ; preds = %dec_label_pc_82e8, %dec_label_pc_82a8, %dec_label_pc_82fc
  %v1_82f8 = call i32 @function_13f88(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %dec_label_pc_82d8, %dec_label_pc_82b8, %dec_label_pc_82f4
  %v0_8310 = phi i32 [ %v2_82c0, %dec_label_pc_82b8 ], [ %v0_8310.pre, %dec_label_pc_82f4 ], [ %v7_82d8, %dec_label_pc_82d8 ]
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f4

; uselistorder directives
  uselistorder i32 %v1_82e8, { 2, 0, 1 }
  uselistorder i32 %v0_826c, { 1, 2, 0 }
  uselistorder i1 %v7_824c, { 1, 0 }
  uselistorder i32 %v0_8248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82e8, { 1, 0 }
  uselistorder label %dec_label_pc_82a8, { 1, 0 }
  uselistorder label %dec_label_pc_82a0, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @function_8320(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8320:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8320 = load i32, i32* @r4, align 4
  %v6_8320 = load i32, i32* @r5, align 4
  %v9_8320 = load i32, i32* @r6, align 4
  %v12_8320 = load i32, i32* @r7, align 4
  %v15_8320 = load i32, i32* @r8, align 4
  %v18_8320 = load i32, i32* @sb, align 4
  %v21_8320 = load i32, i32* @sl, align 4
  %v27_8320 = load i32, i32* @lr, align 4
  %v7_8324 = icmp eq i32 %arg2, 3
  store i1 %v7_8324, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  %v0_8330 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8330, i32* @r4, align 4
  %tmp33 = icmp ult i32 %arg2, 4
  br i1 %tmp33, label %dec_label_pc_8344, label %dec_label_pc_8338

dec_label_pc_8338:                                ; preds = %dec_label_pc_8320
  %v7_8338 = icmp eq i32 %arg2, 4
  store i1 %v7_8338, i1* %cpsr_z.global-to-local, align 1
  %v1_833c = inttoptr i32 %v0_8330 to i32*
  %v2_833c = load i32, i32* %v1_833c, align 4
  store i32 %v2_833c, i32* @sl, align 4
  br i1 %v7_8338, label %dec_label_pc_8344, label %dec_label_pc_834c

dec_label_pc_8344:                                ; preds = %dec_label_pc_8368, %.dec_label_pc_8344_crit_edge, %dec_label_pc_8338, %dec_label_pc_835c, %dec_label_pc_834c, %dec_label_pc_8320
  %v29_8348 = phi i32 [ %v29_8348.pre, %.dec_label_pc_8344_crit_edge ], [ %v0_8330, %dec_label_pc_8368 ], [ %v0_8330, %dec_label_pc_8338 ], [ %v0_8330, %dec_label_pc_835c ], [ %v0_8330, %dec_label_pc_834c ], [ %v0_8330, %dec_label_pc_8320 ]
  store i32 %v6_8320, i32* @r5, align 4
  store i32 %v9_8320, i32* @r6, align 4
  store i32 %v12_8320, i32* @r7, align 4
  store i32 %v18_8320, i32* @sb, align 4
  store i32 %v21_8320, i32* @sl, align 4
  ret i32 %v29_8348

dec_label_pc_834c:                                ; preds = %dec_label_pc_8338
  %v7_834c = icmp eq i32 %arg2, 5
  store i1 %v7_834c, i1* %cpsr_z.global-to-local, align 1
  %v1_8350 = add i32 %v0_8330, 4
  %v2_8350 = inttoptr i32 %v1_8350 to i8*
  %v3_8350 = load i8, i8* %v2_8350, align 1
  %v4_8350 = zext i8 %v3_8350 to i32
  store i32 %v4_8350, i32* %r1.global-to-local, align 4
  br i1 %v7_834c, label %dec_label_pc_8344, label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_834c
  %v1_835c = add i32 %v0_8330, 5
  %v2_835c = inttoptr i32 %v1_835c to i8*
  %v3_835c = load i8, i8* %v2_835c, align 1
  %v4_835c = zext i8 %v3_835c to i32
  store i32 %v4_835c, i32* @r7, align 4
  %v2_8360 = icmp eq i8 %v3_835c, 0
  store i1 %v2_8360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8360, label %dec_label_pc_8344, label %dec_label_pc_8368

dec_label_pc_8368:                                ; preds = %dec_label_pc_835c
  %v3_8368 = mul nuw nsw i32 %v4_835c, 4
  store i32 %v3_8368, i32* @sb, align 4
  %v1_836c = add i32 %arg2, -6
  store i32 %v1_836c, i32* @r6, align 4
  %v2_8370 = mul nuw nsw i32 %v4_835c, 5
  store i32 %v2_8370, i32* @r8, align 4
  %v3_8374 = icmp ult i32 %v1_836c, %v2_8370
  %v9_8374 = icmp eq i32 %v1_836c, %v2_8370
  store i1 %v9_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8374, label %dec_label_pc_8344, label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_8368
  store i32 %v4_835c, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_8384 = call i32 @function_137ec(i32 %v4_835c, i32 24)
  store i32 %v2_8384, i32* %r0.global-to-local, align 4
  %v0_8388 = load i32, i32* @r7, align 4
  %v2_8388 = icmp eq i32 %v0_8388, 0
  store i1 %v2_8388, i1* %cpsr_z.global-to-local, align 1
  %v0_8390 = load i32, i32* @r4, align 4
  %v1_8390 = add i32 %v0_8390, 6
  store i32 %v1_8390, i32* %fp.global-to-local, align 4
  %tmp27 = icmp slt i32 %v0_8388, 1
  br i1 %tmp27, label %dec_label_pc_83e8thread-pre-split, label %dec_label_pc_8398

dec_label_pc_8398:                                ; preds = %dec_label_pc_837c
  store i32 %v2_8384, i32* %r1.global-to-local, align 4
  %v1_839c = load i32, i32* @r8, align 4
  %v2_839c = add i32 %v1_839c, %v0_8390
  store i32 %v2_839c, i32* %ip.global-to-local, align 4
  store i32 %v0_8390, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_83ac

dec_label_pc_83ac:                                ; preds = %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge, %dec_label_pc_8398
  %v2_83bc = phi i32 [ %v1_83d0, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v2_8384, %dec_label_pc_8398 ]
  %v1_83b8 = phi i32 [ %v1_83b8.pre, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v2_839c, %dec_label_pc_8398 ]
  %v0_83b4 = phi i32 [ %v0_83ac.pre, %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge ], [ %v0_8390, %dec_label_pc_8398 ]
  %v1_83ac = add i32 %v0_83b4, 10
  %v2_83ac = inttoptr i32 %v1_83ac to i8*
  %v3_83ac = load i8, i8* %v2_83ac, align 1
  %v1_83b0 = add i32 %v0_83b4, 6
  %v2_83b0 = inttoptr i32 %v1_83b0 to i32*
  %v3_83b0 = load i32, i32* %v2_83b0, align 4
  store i32 %v3_83b0, i32* %r2.global-to-local, align 4
  %v1_83b4 = add i32 %v0_83b4, 5
  store i32 %v1_83b4, i32* %r0.global-to-local, align 4
  %v9_83b8 = icmp eq i32 %v1_83b4, %v1_83b8
  store i1 %v9_83b8, i1* %cpsr_z.global-to-local, align 1
  %v3_83bc = add i32 %v2_83bc, 20
  %v4_83bc = inttoptr i32 %v3_83bc to i8*
  store i8 %v3_83ac, i8* %v4_83bc, align 1
  %v0_83c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_83c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_83c0 = add i32 %v1_83c0, 4
  %v3_83c0 = inttoptr i32 %v2_83c0 to i32*
  store i32 %v0_83c0, i32* %v3_83c0, align 4
  %v0_83c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_83c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v0_83c4, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r4, align 4
  %v1_83c8 = trunc i32 %v0_83c8 to i8
  %v2_83c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_83c8 = inttoptr i32 %v2_83c8 to i8*
  store i8 %v1_83c8, i8* %v3_83c8, align 1
  %v0_83cc = load i32, i32* @lr, align 4
  %v1_83cc = trunc i32 %v0_83cc to i8
  %v2_83cc = load i32, i32* %r1.global-to-local, align 4
  %v3_83cc = add i32 %v2_83cc, 1
  %v4_83cc = inttoptr i32 %v3_83cc to i8*
  store i8 %v1_83cc, i8* %v4_83cc, align 1
  %v0_83d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_83d0 = add i32 %v0_83d0, 24
  store i32 %v1_83d0, i32* %r1.global-to-local, align 4
  %v0_83d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83d4, label %dec_label_pc_83d8, label %dec_label_pc_83ac.dec_label_pc_83ac_crit_edge

dec_label_pc_83ac.dec_label_pc_83ac_crit_edge:    ; preds = %dec_label_pc_83ac
  %v0_83ac.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_83b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_83ac

dec_label_pc_83d8:                                ; preds = %dec_label_pc_83ac
  %v0_83d8 = load i32, i32* @sb, align 4
  %v1_83d8 = load i32, i32* @r7, align 4
  %v1_83dc = load i32, i32* @r5, align 4
  %sum = add i32 %v1_83d8, %v0_83d8
  %v2_83dc = sub i32 %v1_83dc, %sum
  %v0_83e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83e0 = add i32 %v0_83e0, 6
  store i32 %v1_83e0, i32* %fp.global-to-local, align 4
  %v1_83e4 = add i32 %v2_83dc, -6
  store i32 %v1_83e4, i32* @r6, align 4
  br label %dec_label_pc_83e8

dec_label_pc_83e8thread-pre-split:                ; preds = %dec_label_pc_837c
  %v0_83e8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_83e8

dec_label_pc_83e8:                                ; preds = %dec_label_pc_83e8thread-pre-split, %dec_label_pc_83d8
  %v0_83f4 = phi i32 [ %v1_8390, %dec_label_pc_83e8thread-pre-split ], [ %v1_83e0, %dec_label_pc_83d8 ]
  %v1_83ec = phi i32 [ %v0_83e8.pr, %dec_label_pc_83e8thread-pre-split ], [ %v1_83e4, %dec_label_pc_83d8 ]
  %v2_83e8 = icmp eq i32 %v1_83ec, 0
  store i1 %v2_83e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83e8, label %dec_label_pc_8520, label %dec_label_pc_83f4

dec_label_pc_83f4:                                ; preds = %dec_label_pc_83e8
  %v1_83f4 = inttoptr i32 %v0_83f4 to i8*
  %v2_83f4 = load i8, i8* %v1_83f4, align 1
  %v3_83f4 = zext i8 %v2_83f4 to i32
  store i32 %v3_83f4, i32* @sb, align 4
  %v2_83f8 = icmp eq i8 %v2_83f4, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84d8, label %dec_label_pc_8408

dec_label_pc_8408:                                ; preds = %dec_label_pc_83f4
  store i32 %v3_83f4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8410 = call i32 @function_137ec(i32 %v3_83f4, i32 8)
  store i32 %v2_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @sb, align 4
  %v2_8414 = icmp eq i32 %v0_8414, 0
  store i1 %v2_8414, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp slt i32 %v0_8414, 1
  br i1 %tmp28, label %dec_label_pc_84d8, label %dec_label_pc_8424

dec_label_pc_8424:                                ; preds = %dec_label_pc_8408
  %v0_8424 = load i32, i32* @r6, align 4
  %v1_8424 = add i32 %v0_8424, -1
  store i32 %v1_8424, i32* %r2.global-to-local, align 4
  %v7_8424 = icmp eq i32 %v0_8424, 1
  store i1 %v7_8424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8424, label %dec_label_pc_8520, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8424
  %v0_842c = load i32, i32* %fp.global-to-local, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v1_8430 = add i32 %v0_8424, -2
  store i32 %v1_8430, i32* %r2.global-to-local, align 4
  %v7_8430 = icmp eq i32 %v1_8424, 1
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_8410, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* %fp.global-to-local, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r0.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_8520, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* %r2.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, -1
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r0.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_8520, label %dec_label_pc_8454

dec_label_pc_8454:                                ; preds = %dec_label_pc_8440
  store i32 %v2_8410, i32* @r5, align 4
  %v1_845c = add i32 %v2_8410, 8
  %v1_8460 = add i32 %v0_8438, 3
  store i32 %v1_8460, i32* @r6, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_84a4

dec_label_pc_8470:                                ; preds = %dec_label_pc_84a4
  %v0_8470 = load i32, i32* @r8, align 4
  %v1_8470 = load i32, i32* @r4, align 4
  %v2_8470 = sub i32 %v0_8470, %v1_8470
  store i32 %v2_8470, i32* %r2.global-to-local, align 4
  %v9_8470 = icmp eq i32 %v0_8470, %v1_8470
  store i1 %v9_8470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8470, label %dec_label_pc_8520, label %dec_label_pc_8478

dec_label_pc_8478:                                ; preds = %dec_label_pc_8470
  %v1_8478 = load i32, i32* @r6, align 4
  %v2_8478 = add i32 %v1_8478, %v1_8470
  %v3_8478 = inttoptr i32 %v2_8478 to i8*
  %v4_8478 = load i8, i8* %v3_8478, align 1
  store i32 %v2_8478, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v2_8470, -1
  store i32 %v1_8480, i32* %r2.global-to-local, align 4
  %v7_8480 = icmp eq i32 %v2_8470, 1
  store i1 %v7_8480, i1* %cpsr_z.global-to-local, align 1
  %v3_8484 = add i32 %v2_8484, 4
  %v4_8484 = inttoptr i32 %v3_8484 to i8*
  store i8 %v4_8478, i8* %v4_8484, align 1
  %v0_8488 = load i32, i32* %r0.global-to-local, align 4
  %v0_848c = load i32, i32* %r2.global-to-local, align 4
  %v1_848c = add i32 %v0_848c, -1
  store i32 %v1_848c, i32* @r8, align 4
  %v1_8490 = add i32 %v0_8488, 2
  store i32 %v1_8490, i32* @r6, align 4
  %v0_8494 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8494, label %dec_label_pc_8520, label %dec_label_pc_8498

dec_label_pc_8498:                                ; preds = %dec_label_pc_8478
  %v1_8488 = add i32 %v0_8488, 1
  %v2_8498 = inttoptr i32 %v1_8488 to i8*
  %v3_8498 = load i8, i8* %v2_8498, align 1
  %v4_8498 = zext i8 %v3_8498 to i32
  store i32 %v4_8498, i32* @r4, align 4
  %v2_849c = sub i32 %v1_848c, %v4_8498
  %tmp30 = sub i32 0, %v2_849c
  %v6_849c = and i32 %v1_848c, %tmp30
  %v7_849c = icmp slt i32 %v6_849c, 0
  %v8_849c = icmp slt i32 %v2_849c, 0
  %v9_849c = icmp eq i32 %v1_848c, %v4_8498
  store i1 %v9_849c, i1* %cpsr_z.global-to-local, align 1
  %v2_84a0 = xor i1 %v8_849c, %v7_849c
  br i1 %v2_84a0, label %dec_label_pc_8520, label %dec_label_pc_84a4

dec_label_pc_84a4:                                ; preds = %dec_label_pc_8498, %dec_label_pc_8454
  %v0_84a8 = phi i32 [ %v4_8440, %dec_label_pc_8454 ], [ %v4_8498, %dec_label_pc_8498 ]
  %v2_8484 = phi i32 [ %v1_845c, %dec_label_pc_8454 ], [ %v1_84c8, %dec_label_pc_8498 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a8 = add nuw nsw i32 %v0_84a8, 1
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84ac = call i32 @function_137ec(i32 %v1_84a8, i32 1)
  store i32 %v2_84ac, i32* %r0.global-to-local, align 4
  %v0_84b0 = load i32, i32* @r6, align 4
  store i32 %v0_84b0, i32* %r1.global-to-local, align 4
  %v1_84b4 = load i32, i32* @r5, align 4
  %v2_84b4 = inttoptr i32 %v1_84b4 to i32*
  store i32 %v2_84ac, i32* %v2_84b4, align 4
  %v0_84b8 = load i32, i32* @r4, align 4
  store i32 %v0_84b8, i32* %r2.global-to-local, align 4
  %v3_84bc = call i32 @function_12394(i32 %v2_84ac, i32 %v0_84b0, i32 %v0_84b8)
  store i32 %v3_84bc, i32* %r0.global-to-local, align 4
  store i32 %v2_8484, i32* @r5, align 4
  %v0_84c4 = load i32, i32* %fp.global-to-local, align 4
  %v1_84c4 = add i32 %v0_84c4, 1
  store i32 %v1_84c4, i32* %fp.global-to-local, align 4
  %v1_84c8 = add i32 %v2_8484, 8
  store i32 %v1_84c8, i32* %ip.global-to-local, align 4
  %v1_84cc = load i32, i32* @sb, align 4
  %v9_84cc = icmp eq i32 %v1_84c4, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8470

dec_label_pc_84d8:                                ; preds = %dec_label_pc_84a4, %dec_label_pc_8408, %dec_label_pc_83f4
  %stack_var_-48.1 = phi i32 [ %v3_83f4, %dec_label_pc_83f4 ], [ %v0_8414, %dec_label_pc_8408 ], [ %v0_8414, %dec_label_pc_84a4 ]
  %stack_var_-52.2 = phi i32 [ %v3_83f4, %dec_label_pc_83f4 ], [ %v2_8410, %dec_label_pc_8408 ], [ %v2_8410, %dec_label_pc_84a4 ]
  %v0_84d8 = call i32 @function_131f0()
  %v0_84dc = load i32, i32* @sl, align 4
  store i32 %stack_var_-48.1, i32* %ip.global-to-local, align 4
  %v3_84e8 = mul i32 %v0_84dc, 16777216
  %v1_84dc = mul i32 %v0_84dc, 256
  %v4_84ec = and i32 %v1_84dc, 16711680
  %v5_84ec = or i32 %v4_84ec, %v3_84e8
  store i32 %v5_84ec, i32* %r1.global-to-local, align 4
  %v1_84e4 = udiv i32 %v0_84dc, 256
  %v3_84f0 = and i32 %v1_84e4, 65280
  store i32 %v3_84f0, i32* %r2.global-to-local, align 4
  %v2_84f8 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84f8, align 4
  %v0_84fc = load i32, i32* %r2.global-to-local, align 4
  %v1_84fc = load i32, i32* @sl, align 4
  %v4_84fc = udiv i32 %v1_84fc, 16777216
  %v5_84fc = or i32 %v4_84fc, %v0_84fc
  %v0_8500 = load i32, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-52.2, i32* @ip, align 4
  %v1_8508 = load i32, i32* %r1.global-to-local, align 4
  %v2_8508 = or i32 %v5_84fc, %v1_8508
  store i32 %v2_8508, i32* %r0.global-to-local, align 4
  store i32 %v4_8350, i32* %r1.global-to-local, align 4
  %v0_8514 = load i32, i32* @r7, align 4
  store i32 %v0_8514, i32* %r2.global-to-local, align 4
  %v6_851c = trunc i32 %v0_8500 to i8
  %v7_851c = call i32 @function_8230(i32 %v2_8508, i32 %v4_8350, i32 %v0_8514, i32 %v2_8384, i8 %v6_851c, i32 %stack_var_-52.2)
  store i32 %v7_851c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8498, %dec_label_pc_8478, %dec_label_pc_8470, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8424, %dec_label_pc_83e8, %dec_label_pc_84d8
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_83e8 ], [ %stack_var_-52.2, %dec_label_pc_84d8 ], [ %v2_8410, %dec_label_pc_8424 ], [ %v2_8410, %dec_label_pc_842c ], [ %v2_8410, %dec_label_pc_8440 ], [ %v2_8410, %dec_label_pc_8470 ], [ %v2_8410, %dec_label_pc_8478 ], [ %v2_8410, %dec_label_pc_8498 ]
  store i32 %v2_8384, i32* %r1.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v2_8384, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8524, label %bb31, label %bb

bb:                                               ; preds = %dec_label_pc_8520
  store i32 %v2_8384, i32* %r0.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_8520, %bb
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_13844.25 to i32))
  %v2_8534 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_8534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8534, label %.dec_label_pc_8344_crit_edge, label %dec_label_pc_853c

.dec_label_pc_8344_crit_edge:                     ; preds = %bb31
  %v29_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8344

dec_label_pc_853c:                                ; preds = %bb31
  %v0_853c = load i32, i32* @sb, align 4
  %v2_853c = icmp eq i32 %v0_853c, 0
  store i1 %v2_853c, i1* %cpsr_z.global-to-local, align 1
  %tmp32 = icmp slt i32 %v0_853c, 1
  br i1 %tmp32, label %dec_label_pc_8564, label %dec_label_pc_8544

dec_label_pc_8544:                                ; preds = %dec_label_pc_853c
  br label %dec_label_pc_8548

dec_label_pc_8548:                                ; preds = %dec_label_pc_8548, %dec_label_pc_8544
  %v0_8554 = phi i32 [ %v1_8554, %dec_label_pc_8548 ], [ 0, %dec_label_pc_8544 ]
  store i32 %stack_var_-52.3, i32* %ip.global-to-local, align 4
  %v4_854c = mul i32 %v0_8554, 8
  %v5_854c = add i32 %v4_854c, %stack_var_-52.3
  %v6_854c = inttoptr i32 %v5_854c to i32*
  %v7_854c = load i32, i32* %v6_854c, align 4
  store i32 %v7_854c, i32* %r0.global-to-local, align 4
  %v2_8550 = icmp eq i32 %v7_854c, 0
  store i1 %v2_8550, i1* %cpsr_z.global-to-local, align 1
  %v1_8554 = add i32 %v0_8554, 1
  %v1_8558 = xor i1 %v2_8550, true
  call void @__pseudo_cond_branch(i1 %v1_8558, i32 ptrtoint (i32* @global_var_13844.25 to i32))
  %v0_855c = load i32, i32* @sb, align 4
  %v9_855c = icmp eq i32 %v0_855c, %v1_8554
  store i1 %v9_855c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_855c, label %dec_label_pc_8564, label %dec_label_pc_8548

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548, %dec_label_pc_853c
  store i32 %stack_var_-52.3, i32* @r0, align 4
  store i32 %v3_8320, i32* @r4, align 4
  store i32 %v6_8320, i32* @r5, align 4
  store i32 %v9_8320, i32* @r6, align 4
  store i32 %v12_8320, i32* @r7, align 4
  store i32 %v15_8320, i32* @r8, align 4
  store i32 %v18_8320, i32* @sb, align 4
  store i32 %v21_8320, i32* @sl, align 4
  store i32 %v27_8320, i32* @lr, align 4
  %v0_8570 = call i32 @function_13844()
  store i32 %v0_8570, i32* %r0.global-to-local, align 4
  ret i32 %v0_8570

; uselistorder directives
  uselistorder i32 %stack_var_-52.3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_84dc, { 2, 0, 1 }
  uselistorder i32 %stack_var_-52.2, { 1, 0, 2 }
  uselistorder i32 %v1_84c8, { 1, 0 }
  uselistorder i32 %v2_8484, { 2, 1, 0 }
  uselistorder i32 %v2_849c, { 1, 0 }
  uselistorder i32 %v4_8498, { 0, 2, 1, 3 }
  uselistorder i32 %v1_848c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8488, { 1, 0 }
  uselistorder i32 %v0_8424, { 0, 2, 1 }
  uselistorder i32 %v0_8414, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8410, { 0, 1, 2, 8, 7, 6, 3, 5, 9, 10, 4, 11 }
  uselistorder i32 %v3_83f4, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_83d0, { 1, 0 }
  uselistorder i32 %v0_83b4, { 0, 2, 1 }
  uselistorder i32 %v0_8390, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8384, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder i32 %v2_8370, { 2, 1, 0 }
  uselistorder i32 %v4_835c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_8350, { 1, 0, 2 }
  uselistorder i32 %v0_8330, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 3, 20, 4, 2, 5, 8, 12, 9, 6, 7, 10, 11, 18, 13, 15, 14, 16, 17, 21, 19, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4, 6 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_8520, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8344, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_8574(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8574:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8574 = urem i32 %arg1, 256
  %v2_8578 = icmp eq i32 %v1_8574, 0
  %v3_857c = load i32, i32* @r4, align 4
  br i1 %v2_8578, label %dec_label_pc_85c4, label %dec_label_pc_8588

dec_label_pc_8588:                                ; preds = %dec_label_pc_8574
  %v0_8588 = load i32, i32* %r1.global-to-local, align 4
  %v1_8588 = add i32 %v0_8588, 4
  %v2_8588 = inttoptr i32 %v1_8588 to i8*
  %v3_8588 = load i8, i8* %v2_8588, align 1
  %v4_8588 = zext i8 %v3_8588 to i32
  %v1_858c = urem i32 %arg3, 256
  %v9_8590 = icmp eq i32 %v4_8588, %v1_858c
  br i1 %v9_8590, label %dec_label_pc_85cc, label %dec_label_pc_85b4.preheader

dec_label_pc_85b4.preheader:                      ; preds = %dec_label_pc_8588
  br label %dec_label_pc_85b4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_85b4
  %v1_85a4 = add i32 %v0_85ac.in, 12
  %v2_85a4 = inttoptr i32 %v1_85a4 to i8*
  %v3_85a4 = load i8, i8* %v2_85a4, align 1
  %v4_85a4 = zext i8 %v3_85a4 to i32
  %v9_85a8 = icmp eq i32 %v1_858c, %v4_85a4
  br i1 %v9_85a8, label %dec_label_pc_85cc, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85b4.preheader, %dec_label_pc_85a4
  %v0_85ac.in = phi i32 [ %v0_8588, %dec_label_pc_85b4.preheader ], [ %v0_85ac, %dec_label_pc_85a4 ]
  %v0_85b4 = phi i32 [ 0, %dec_label_pc_85b4.preheader ], [ %v1_85b4, %dec_label_pc_85a4 ]
  %v0_85ac = add i32 %v0_85ac.in, 8
  %v1_85b4 = add i32 %v0_85b4, 1
  %v9_85b8 = icmp eq i32 %v1_8574, %v1_85b4
  store i32 %v0_85ac, i32* %r1.global-to-local, align 4
  br i1 %v9_85b8, label %dec_label_pc_85c4, label %dec_label_pc_85a4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b4, %dec_label_pc_85cc, %dec_label_pc_8574
  store i32 %v3_857c, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85a4, %dec_label_pc_8588
  %v0_85cc = phi i32 [ %v0_8588, %dec_label_pc_8588 ], [ %v0_85ac, %dec_label_pc_85a4 ]
  %v1_85cc = inttoptr i32 %v0_85cc to i32*
  %v2_85cc = load i32, i32* %v1_85cc, align 4
  store i32 %v2_85cc, i32* @r0, align 4
  %v2_85d0 = icmp eq i32 %v2_85cc, 0
  br i1 %v2_85d0, label %dec_label_pc_85c4, label %dec_label_pc_85d8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85cc
  store i32 %v3_857c, i32* @r4, align 4
  %v1_85dc = call i32 @function_1330c(i32 %v2_85cc)
  ret i32 %v1_85dc

; uselistorder directives
  uselistorder i32 %v1_85b4, { 1, 0 }
  uselistorder i32 %v0_85ac, { 1, 0, 2 }
  uselistorder i32 %v0_85ac.in, { 1, 0 }
  uselistorder i32 %v1_858c, { 1, 0 }
  uselistorder i32 %v0_8588, { 1, 0, 2 }
  uselistorder i32 %v3_857c, { 1, 0 }
  uselistorder i32 %v1_8574, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_85c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_85b4, { 1, 0 }
}

define i32 @function_85e0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_85e0:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_85e0 = urem i32 %arg1, 256
  %v2_85e4 = icmp eq i32 %v1_85e0, 0
  %v3_85e8 = load i32, i32* @r4, align 4
  %v6_85e8 = load i32, i32* @lr, align 4
  br i1 %v2_85e4, label %dec_label_pc_8630, label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_85e0
  %v0_85f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_85f4 = add i32 %v0_85f4, 4
  %v2_85f4 = inttoptr i32 %v1_85f4 to i8*
  %v3_85f4 = load i8, i8* %v2_85f4, align 1
  %v4_85f4 = zext i8 %v3_85f4 to i32
  %v1_85f8 = urem i32 %arg3, 256
  %v9_85fc = icmp eq i32 %v4_85f4, %v1_85f8
  br i1 %v9_85fc, label %dec_label_pc_8638, label %dec_label_pc_8620.preheader

dec_label_pc_8620.preheader:                      ; preds = %dec_label_pc_85f4
  br label %dec_label_pc_8620

dec_label_pc_8610:                                ; preds = %dec_label_pc_8620
  %v1_8610 = add i32 %v0_8618.in, 12
  %v2_8610 = inttoptr i32 %v1_8610 to i8*
  %v3_8610 = load i8, i8* %v2_8610, align 1
  %v4_8610 = zext i8 %v3_8610 to i32
  %v9_8614 = icmp eq i32 %v1_85f8, %v4_8610
  br i1 %v9_8614, label %dec_label_pc_8638, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_8620.preheader, %dec_label_pc_8610
  %v0_8618.in = phi i32 [ %v0_85f4, %dec_label_pc_8620.preheader ], [ %v0_8618, %dec_label_pc_8610 ]
  %v0_8620 = phi i32 [ 0, %dec_label_pc_8620.preheader ], [ %v1_8620, %dec_label_pc_8610 ]
  %v0_8618 = add i32 %v0_8618.in, 8
  %v1_8620 = add i32 %v0_8620, 1
  store i32 %v1_8620, i32* @lr, align 4
  %v9_8624 = icmp eq i32 %v1_85e0, %v1_8620
  store i32 %v0_8618, i32* %r1.global-to-local, align 4
  br i1 %v9_8624, label %dec_label_pc_8630, label %dec_label_pc_8610

dec_label_pc_8630:                                ; preds = %dec_label_pc_8620, %dec_label_pc_8638, %dec_label_pc_85e0
  store i32 %v3_85e8, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_8638:                                ; preds = %dec_label_pc_8610, %dec_label_pc_85f4
  %v0_8638 = phi i32 [ %v0_85f4, %dec_label_pc_85f4 ], [ %v0_8618, %dec_label_pc_8610 ]
  %v1_8638 = inttoptr i32 %v0_8638 to i32*
  %v2_8638 = load i32, i32* %v1_8638, align 4
  %v2_863c = icmp eq i32 %v2_8638, 0
  br i1 %v2_863c, label %dec_label_pc_8630, label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8638
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_85e8, i32* @r4, align 4
  store i32 %v6_85e8, i32* @lr, align 4
  %v2_864c = inttoptr i32 %v2_8638 to i8*
  %v3_864c = call i32 @function_12444(i8* %v2_864c, i32 10)
  ret i32 %v3_864c

; uselistorder directives
  uselistorder i32 %v1_8620, { 1, 2, 0 }
  uselistorder i32 %v0_8618, { 1, 0, 2 }
  uselistorder i32 %v0_8618.in, { 1, 0 }
  uselistorder i32 %v1_85f8, { 1, 0 }
  uselistorder i32 %v0_85f4, { 1, 0, 2 }
  uselistorder i32 %v3_85e8, { 1, 0 }
  uselistorder i32 %v1_85e0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8630, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8620, { 1, 0 }
}

define i32 @function_8650(i32 %arg1) local_unnamed_addr {
dec_label_pc_8650:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8650 = load i32, i32* @r4, align 4
  store i32 %v3_8650, i32* %stack_var_-24, align 4
  %v6_8650 = load i32, i32* @r5, align 4
  %v9_8650 = load i32, i32* @r6, align 4
  %v12_8650 = load i32, i32* @r7, align 4
  %v15_8650 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_865c = call i32 @function_137ec(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1dbac.21 to i32), i32* @r4, align 4
  %v2_8664 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8664 = zext i8 %v2_8664 to i32
  store i32 ptrtoint (i32* @global_var_1dbb0.23 to i32), i32* @r6, align 4
  store i32 36768, i32* %r2.global-to-local, align 4
  store i32 %v2_865c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8678 = mul nuw nsw i32 %v3_8664, 4
  store i32 %v3_8678, i32* %r1.global-to-local, align 4
  %v2_867c = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_8680 = inttoptr i32 %v2_865c to i32*
  store i32 36768, i32* %v2_8680, align 4
  %v3_8684 = load i32, i32* @r5, align 4
  %v4_8684 = add i32 %v3_8684, 4
  %v5_8684 = inttoptr i32 %v4_8684 to i8*
  store i8 0, i8* %v5_8684, align 1
  %v0_8688 = load i32, i32* %r1.global-to-local, align 4
  %v1_8688 = add i32 %v0_8688, 4
  store i32 %v1_8688, i32* %r1.global-to-local, align 4
  %v5_868c = call i32 @function_13934(i32 %v2_867c, i32 %v1_8688, i32 36768, i32 0)
  %v2_8690 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8690 = zext i8 %v2_8690 to i32
  store i32 %v3_8690, i32* %r3.global-to-local, align 4
  store i32 %v5_868c, i32* %ip.global-to-local, align 4
  %v0_8698 = load i32, i32* @r5, align 4
  %v5_8698 = mul nuw nsw i32 %v3_8690, 4
  %v6_8698 = add i32 %v5_8698, %v5_868c
  %v7_8698 = inttoptr i32 %v6_8698 to i32*
  store i32 %v0_8698, i32* %v7_8698, align 4
  store i32 ptrtoint (i8* @global_var_1dbad.29 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v3_86a8 = load i32, i32* @r4, align 4
  %v4_86a8 = inttoptr i32 %v3_86a8 to i8*
  store i8 ptrtoint (i8* @global_var_1dbad.29 to i8), i8* %v4_86a8, align 1
  %v0_86ac = load i32, i32* %ip.global-to-local, align 4
  %v1_86ac = load i32, i32* @r6, align 4
  %v2_86ac = inttoptr i32 %v1_86ac to i32*
  store i32 %v0_86ac, i32* %v2_86ac, align 4
  %v2_86b0 = call i32 @function_137ec(i32 1, i32 8)
  %v2_86b4 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_86b4 = zext i8 %v2_86b4 to i32
  store i32 ptrtoint (i32* @global_var_a4c4.31 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_86b0, i32* @r5, align 4
  %v3_86c4 = mul nuw nsw i32 %v3_86b4, 4
  store i32 %v3_86c4, i32* %r1.global-to-local, align 4
  %v2_86c8 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_86cc = inttoptr i32 %v2_86b0 to i32*
  store i32 ptrtoint (i32* @global_var_a4c4.31 to i32), i32* %v2_86cc, align 4
  %v0_86d0 = load i32, i32* @r8, align 4
  %v1_86d0 = trunc i32 %v0_86d0 to i8
  %v2_86d0 = load i32, i32* @r5, align 4
  %v3_86d0 = add i32 %v2_86d0, 4
  %v4_86d0 = inttoptr i32 %v3_86d0 to i8*
  store i8 %v1_86d0, i8* %v4_86d0, align 1
  %v0_86d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_86d4 = add i32 %v0_86d4, 4
  store i32 %v1_86d4, i32* %r1.global-to-local, align 4
  %v5_86d8 = call i32 @function_13934(i32 %v2_86c8, i32 %v1_86d4, i32 sext (i8 ptrtoint (i8* @global_var_1dbad.29 to i8) to i32), i32 ptrtoint (i32* @global_var_a4c4.31 to i32))
  %v2_86dc = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_86dc = zext i8 %v2_86dc to i32
  store i32 %v3_86dc, i32* %r3.global-to-local, align 4
  store i32 %v5_86d8, i32* %ip.global-to-local, align 4
  %v0_86e4 = load i32, i32* @r5, align 4
  %v5_86e4 = mul nuw nsw i32 %v3_86dc, 4
  %v6_86e4 = add i32 %v5_86e4, %v5_86d8
  %v7_86e4 = inttoptr i32 %v6_86e4 to i32*
  store i32 %v0_86e4, i32* %v7_86e4, align 4
  %v0_86e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_86e8 = load i32, i32* @r8, align 4
  %v2_86e8 = add i32 %v1_86e8, %v0_86e8
  store i32 %v2_86e8, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_86f4 = load i32, i32* @r6, align 4
  %v2_86f4 = inttoptr i32 %v1_86f4 to i32*
  store i32 %v0_86f4, i32* %v2_86f4, align 4
  %v0_86f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86f8 = trunc i32 %v0_86f8 to i8
  %v2_86f8 = load i32, i32* @r4, align 4
  %v3_86f8 = inttoptr i32 %v2_86f8 to i8*
  store i8 %v1_86f8, i8* %v3_86f8, align 1
  %v2_86fc = call i32 @function_137ec(i32 %v1_86e8, i32 8)
  %v2_8700 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8700 = zext i8 %v2_8700 to i32
  store i32 ptrtoint (i32* @global_var_a988.33 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86fc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_8710 = mul nuw nsw i32 %v3_8700, 4
  store i32 %v3_8710, i32* %r1.global-to-local, align 4
  %v2_8714 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_8718 = inttoptr i32 %v2_86fc to i32*
  store i32 ptrtoint (i32* @global_var_a988.33 to i32), i32* %v2_8718, align 4
  %v3_871c = load i32, i32* @r5, align 4
  %v4_871c = add i32 %v3_871c, 4
  %v5_871c = inttoptr i32 %v4_871c to i8*
  store i8 2, i8* %v5_871c, align 1
  %v0_8720 = load i32, i32* %r1.global-to-local, align 4
  %v1_8720 = add i32 %v0_8720, 4
  store i32 %v1_8720, i32* %r1.global-to-local, align 4
  %v5_8724 = call i32 @function_13934(i32 %v2_8714, i32 %v1_8720, i32 ptrtoint (i32* @global_var_a988.33 to i32), i32 2)
  %v2_8728 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8728 = zext i8 %v2_8728 to i32
  store i32 %v3_8728, i32* %r3.global-to-local, align 4
  store i32 %v5_8724, i32* %ip.global-to-local, align 4
  %v1_8730 = load i32, i32* @r8, align 4
  %v2_8730 = add i32 %v1_8730, %v3_8728
  %v3_8730 = trunc i32 %v2_8730 to i8
  store i32 %v2_8730, i32* %r2.global-to-local, align 4
  %v0_8734 = load i32, i32* @r5, align 4
  %v5_8734 = mul nuw nsw i32 %v3_8728, 4
  %v6_8734 = add i32 %v5_8734, %v5_8724
  %v7_8734 = inttoptr i32 %v6_8734 to i32*
  store i32 %v0_8734, i32* %v7_8734, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_873c = load i32, i32* @r8, align 4
  %v3_8740 = load i32, i32* @r4, align 4
  %v4_8740 = inttoptr i32 %v3_8740 to i8*
  store i8 %v3_8730, i8* %v4_8740, align 1
  %v0_8744 = load i32, i32* %ip.global-to-local, align 4
  %v1_8744 = load i32, i32* @r6, align 4
  %v2_8744 = inttoptr i32 %v1_8744 to i32*
  store i32 %v0_8744, i32* %v2_8744, align 4
  %v2_8748 = call i32 @function_137ec(i32 %v0_873c, i32 8)
  %v2_874c = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_874c = zext i8 %v2_874c to i32
  store i32 ptrtoint (i32* @global_var_89d8.35 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8748, i32* @r5, align 4
  %v3_875c = mul nuw nsw i32 %v3_874c, 4
  store i32 %v3_875c, i32* %r1.global-to-local, align 4
  %v2_8760 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_8764 = inttoptr i32 %v2_8748 to i32*
  store i32 ptrtoint (i32* @global_var_89d8.35 to i32), i32* %v2_8764, align 4
  %v0_8768 = load i32, i32* @r7, align 4
  %v1_8768 = trunc i32 %v0_8768 to i8
  %v2_8768 = load i32, i32* @r5, align 4
  %v3_8768 = add i32 %v2_8768, 4
  %v4_8768 = inttoptr i32 %v3_8768 to i8*
  store i8 %v1_8768, i8* %v4_8768, align 1
  %v0_876c = load i32, i32* %r1.global-to-local, align 4
  %v1_876c = add i32 %v0_876c, 4
  store i32 %v1_876c, i32* %r1.global-to-local, align 4
  %v5_8770 = call i32 @function_13934(i32 %v2_8760, i32 %v1_876c, i32 %v2_8730, i32 ptrtoint (i32* @global_var_89d8.35 to i32))
  %v2_8774 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8774 = zext i8 %v2_8774 to i32
  store i32 %v3_8774, i32* %r3.global-to-local, align 4
  store i32 %v5_8770, i32* %ip.global-to-local, align 4
  %v0_877c = load i32, i32* @r5, align 4
  %v5_877c = mul nuw nsw i32 %v3_8774, 4
  %v6_877c = add i32 %v5_877c, %v5_8770
  %v7_877c = inttoptr i32 %v6_877c to i32*
  store i32 %v0_877c, i32* %v7_877c, align 4
  %v0_8780 = load i32, i32* %r3.global-to-local, align 4
  %v1_8780 = load i32, i32* @r8, align 4
  %v2_8780 = add i32 %v1_8780, %v0_8780
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  %v0_8784 = load i32, i32* @r7, align 4
  store i32 %v0_8784, i32* %r1.global-to-local, align 4
  %v0_878c = load i32, i32* %ip.global-to-local, align 4
  %v1_878c = load i32, i32* @r6, align 4
  %v2_878c = inttoptr i32 %v1_878c to i32*
  store i32 %v0_878c, i32* %v2_878c, align 4
  %v0_8790 = load i32, i32* %r2.global-to-local, align 4
  %v1_8790 = trunc i32 %v0_8790 to i8
  %v2_8790 = load i32, i32* @r4, align 4
  %v3_8790 = inttoptr i32 %v2_8790 to i8*
  store i8 %v1_8790, i8* %v3_8790, align 1
  %v2_8794 = call i32 @function_137ec(i32 %v1_8780, i32 %v0_8784)
  %v2_8798 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8798 = zext i8 %v2_8798 to i32
  store i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8794, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_87a8 = mul nuw nsw i32 %v3_8798, 4
  store i32 %v3_87a8, i32* %r1.global-to-local, align 4
  %v2_87ac = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_87b0 = inttoptr i32 %v2_8794 to i32*
  store i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32* %v2_87b0, align 4
  %v3_87b4 = load i32, i32* @r5, align 4
  %v4_87b4 = add i32 %v3_87b4, 4
  %v5_87b4 = inttoptr i32 %v4_87b4 to i8*
  store i8 3, i8* %v5_87b4, align 1
  %v0_87b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_87b8 = add i32 %v0_87b8, 4
  store i32 %v1_87b8, i32* %r1.global-to-local, align 4
  %v5_87bc = call i32 @function_13934(i32 %v2_87ac, i32 %v1_87b8, i32 ptrtoint (i32* @global_var_c96c.37 to i32), i32 3)
  %v2_87c0 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_87c0 = zext i8 %v2_87c0 to i32
  store i32 %v3_87c0, i32* %r3.global-to-local, align 4
  store i32 %v5_87bc, i32* %ip.global-to-local, align 4
  %v0_87c8 = load i32, i32* @r5, align 4
  %v5_87c8 = mul nuw nsw i32 %v3_87c0, 4
  %v6_87c8 = add i32 %v5_87c8, %v5_87bc
  %v7_87c8 = inttoptr i32 %v6_87c8 to i32*
  store i32 %v0_87c8, i32* %v7_87c8, align 4
  %v0_87cc = load i32, i32* %r3.global-to-local, align 4
  %v1_87cc = load i32, i32* @r8, align 4
  %v2_87cc = add i32 %v1_87cc, %v0_87cc
  store i32 %v2_87cc, i32* %r2.global-to-local, align 4
  %v0_87d0 = load i32, i32* @r7, align 4
  store i32 %v0_87d0, i32* %r1.global-to-local, align 4
  %v0_87d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_87d8 = load i32, i32* @r6, align 4
  %v2_87d8 = inttoptr i32 %v1_87d8 to i32*
  store i32 %v0_87d8, i32* %v2_87d8, align 4
  %v0_87dc = load i32, i32* %r2.global-to-local, align 4
  %v1_87dc = trunc i32 %v0_87dc to i8
  %v2_87dc = load i32, i32* @r4, align 4
  %v3_87dc = inttoptr i32 %v2_87dc to i8*
  store i8 %v1_87dc, i8* %v3_87dc, align 1
  %v2_87e0 = call i32 @function_137ec(i32 %v1_87cc, i32 %v0_87d0)
  %v2_87e4 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_87e4 = zext i8 %v2_87e4 to i32
  store i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87e0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_87f4 = mul nuw nsw i32 %v3_87e4, 4
  store i32 %v3_87f4, i32* %r1.global-to-local, align 4
  %v2_87f8 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_87fc = inttoptr i32 %v2_87e0 to i32*
  store i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32* %v2_87fc, align 4
  %v3_8800 = load i32, i32* @r5, align 4
  %v4_8800 = add i32 %v3_8800, 4
  %v5_8800 = inttoptr i32 %v4_8800 to i8*
  store i8 4, i8* %v5_8800, align 1
  %v0_8804 = load i32, i32* %r1.global-to-local, align 4
  %v1_8804 = add i32 %v0_8804, 4
  store i32 %v1_8804, i32* %r1.global-to-local, align 4
  %v5_8808 = call i32 @function_13934(i32 %v2_87f8, i32 %v1_8804, i32 ptrtoint (i32* @global_var_c1f8.39 to i32), i32 4)
  %v2_880c = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_880c = zext i8 %v2_880c to i32
  store i32 %v3_880c, i32* %r3.global-to-local, align 4
  store i32 %v5_8808, i32* %ip.global-to-local, align 4
  %v0_8814 = load i32, i32* @r5, align 4
  %v5_8814 = mul nuw nsw i32 %v3_880c, 4
  %v6_8814 = add i32 %v5_8814, %v5_8808
  %v7_8814 = inttoptr i32 %v6_8814 to i32*
  store i32 %v0_8814, i32* %v7_8814, align 4
  %v0_8818 = load i32, i32* %r3.global-to-local, align 4
  %v1_8818 = load i32, i32* @r8, align 4
  %v2_8818 = add i32 %v1_8818, %v0_8818
  store i32 %v2_8818, i32* %r2.global-to-local, align 4
  %v0_881c = load i32, i32* @r7, align 4
  store i32 %v0_881c, i32* %r1.global-to-local, align 4
  %v0_8824 = load i32, i32* %ip.global-to-local, align 4
  %v1_8824 = load i32, i32* @r6, align 4
  %v2_8824 = inttoptr i32 %v1_8824 to i32*
  store i32 %v0_8824, i32* %v2_8824, align 4
  %v0_8828 = load i32, i32* %r2.global-to-local, align 4
  %v1_8828 = trunc i32 %v0_8828 to i8
  %v2_8828 = load i32, i32* @r4, align 4
  %v3_8828 = inttoptr i32 %v2_8828 to i8*
  store i8 %v1_8828, i8* %v3_8828, align 1
  %v2_882c = call i32 @function_137ec(i32 %v1_8818, i32 %v0_881c)
  %v2_8830 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8830 = zext i8 %v2_8830 to i32
  store i32 ptrtoint (i32* @global_var_b998.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_882c, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_8840 = mul nuw nsw i32 %v3_8830, 4
  store i32 %v3_8840, i32* %r1.global-to-local, align 4
  %v2_8844 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_8848 = inttoptr i32 %v2_882c to i32*
  store i32 ptrtoint (i32* @global_var_b998.41 to i32), i32* %v2_8848, align 4
  %v3_884c = load i32, i32* @r5, align 4
  %v4_884c = add i32 %v3_884c, 4
  %v5_884c = inttoptr i32 %v4_884c to i8*
  store i8 5, i8* %v5_884c, align 1
  %v0_8850 = load i32, i32* %r1.global-to-local, align 4
  %v1_8850 = add i32 %v0_8850, 4
  store i32 %v1_8850, i32* %r1.global-to-local, align 4
  %v5_8854 = call i32 @function_13934(i32 %v2_8844, i32 %v1_8850, i32 ptrtoint (i32* @global_var_b998.41 to i32), i32 5)
  %v2_8858 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8858 = zext i8 %v2_8858 to i32
  store i32 %v3_8858, i32* %r3.global-to-local, align 4
  store i32 %v5_8854, i32* %ip.global-to-local, align 4
  %v0_8860 = load i32, i32* @r5, align 4
  %v5_8860 = mul nuw nsw i32 %v3_8858, 4
  %v6_8860 = add i32 %v5_8860, %v5_8854
  %v7_8860 = inttoptr i32 %v6_8860 to i32*
  store i32 %v0_8860, i32* %v7_8860, align 4
  %v0_8864 = load i32, i32* %r3.global-to-local, align 4
  %v1_8864 = load i32, i32* @r8, align 4
  %v2_8864 = add i32 %v1_8864, %v0_8864
  store i32 %v2_8864, i32* %r2.global-to-local, align 4
  %v0_8868 = load i32, i32* @r7, align 4
  store i32 %v0_8868, i32* %r1.global-to-local, align 4
  %v0_8870 = load i32, i32* %ip.global-to-local, align 4
  %v1_8870 = load i32, i32* @r6, align 4
  %v2_8870 = inttoptr i32 %v1_8870 to i32*
  store i32 %v0_8870, i32* %v2_8870, align 4
  %v0_8874 = load i32, i32* %r2.global-to-local, align 4
  %v1_8874 = trunc i32 %v0_8874 to i8
  %v2_8874 = load i32, i32* @r4, align 4
  %v3_8874 = inttoptr i32 %v2_8874 to i8*
  store i8 %v1_8874, i8* %v3_8874, align 1
  %v2_8878 = call i32 @function_137ec(i32 %v1_8864, i32 %v0_8868)
  %v2_887c = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_887c = zext i8 %v2_887c to i32
  store i32 45368, i32* %r2.global-to-local, align 4
  store i32 %v2_8878, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_888c = mul nuw nsw i32 %v3_887c, 4
  store i32 %v3_888c, i32* %r1.global-to-local, align 4
  %v2_8890 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_8894 = inttoptr i32 %v2_8878 to i32*
  store i32 45368, i32* %v2_8894, align 4
  %v3_8898 = load i32, i32* @r5, align 4
  %v4_8898 = add i32 %v3_8898, 4
  %v5_8898 = inttoptr i32 %v4_8898 to i8*
  store i8 10, i8* %v5_8898, align 1
  %v0_889c = load i32, i32* %r1.global-to-local, align 4
  %v1_889c = add i32 %v0_889c, 4
  store i32 %v1_889c, i32* %r1.global-to-local, align 4
  %v5_88a0 = call i32 @function_13934(i32 %v2_8890, i32 %v1_889c, i32 45368, i32 10)
  %v2_88a4 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_88a4 = zext i8 %v2_88a4 to i32
  store i32 %v3_88a4, i32* %r3.global-to-local, align 4
  store i32 %v5_88a0, i32* %ip.global-to-local, align 4
  %v0_88ac = load i32, i32* @r5, align 4
  %v5_88ac = mul nuw nsw i32 %v3_88a4, 4
  %v6_88ac = add i32 %v5_88ac, %v5_88a0
  %v7_88ac = inttoptr i32 %v6_88ac to i32*
  store i32 %v0_88ac, i32* %v7_88ac, align 4
  %v0_88b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88b0 = load i32, i32* @r8, align 4
  %v2_88b0 = add i32 %v1_88b0, %v0_88b0
  store i32 %v2_88b0, i32* %r2.global-to-local, align 4
  %v0_88b4 = load i32, i32* @r7, align 4
  store i32 %v0_88b4, i32* %r1.global-to-local, align 4
  %v0_88bc = load i32, i32* %ip.global-to-local, align 4
  %v1_88bc = load i32, i32* @r6, align 4
  %v2_88bc = inttoptr i32 %v1_88bc to i32*
  store i32 %v0_88bc, i32* %v2_88bc, align 4
  %v0_88c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_88c0 = trunc i32 %v0_88c0 to i8
  %v2_88c0 = load i32, i32* @r4, align 4
  %v3_88c0 = inttoptr i32 %v2_88c0 to i8*
  store i8 %v1_88c0, i8* %v3_88c0, align 1
  %v2_88c4 = call i32 @function_137ec(i32 %v1_88b0, i32 %v0_88b4)
  %v2_88c8 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_88c8 = zext i8 %v2_88c8 to i32
  store i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88c4, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_88d8 = mul nuw nsw i32 %v3_88c8, 4
  store i32 %v3_88d8, i32* %r1.global-to-local, align 4
  %v2_88dc = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_88e0 = inttoptr i32 %v2_88c4 to i32*
  store i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32* %v2_88e0, align 4
  %v3_88e4 = load i32, i32* @r5, align 4
  %v4_88e4 = add i32 %v3_88e4, 4
  %v5_88e4 = inttoptr i32 %v4_88e4 to i8*
  store i8 6, i8* %v5_88e4, align 1
  %v0_88e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_88e8 = add i32 %v0_88e8, 4
  store i32 %v1_88e8, i32* %r1.global-to-local, align 4
  %v5_88ec = call i32 @function_13934(i32 %v2_88dc, i32 %v1_88e8, i32 ptrtoint (i32* @global_var_9da8.44 to i32), i32 6)
  %v2_88f0 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_88f0 = zext i8 %v2_88f0 to i32
  store i32 %v3_88f0, i32* %r3.global-to-local, align 4
  store i32 %v5_88ec, i32* %ip.global-to-local, align 4
  %v0_88f8 = load i32, i32* @r5, align 4
  %v5_88f8 = mul nuw nsw i32 %v3_88f0, 4
  %v6_88f8 = add i32 %v5_88f8, %v5_88ec
  %v7_88f8 = inttoptr i32 %v6_88f8 to i32*
  store i32 %v0_88f8, i32* %v7_88f8, align 4
  %v0_88fc = load i32, i32* %r3.global-to-local, align 4
  %v1_88fc = load i32, i32* @r8, align 4
  %v2_88fc = add i32 %v1_88fc, %v0_88fc
  store i32 %v2_88fc, i32* %r2.global-to-local, align 4
  %v0_8900 = load i32, i32* @r7, align 4
  store i32 %v0_8900, i32* %r1.global-to-local, align 4
  %v0_8908 = load i32, i32* %ip.global-to-local, align 4
  %v1_8908 = load i32, i32* @r6, align 4
  %v2_8908 = inttoptr i32 %v1_8908 to i32*
  store i32 %v0_8908, i32* %v2_8908, align 4
  %v0_890c = load i32, i32* %r2.global-to-local, align 4
  %v1_890c = trunc i32 %v0_890c to i8
  %v2_890c = load i32, i32* @r4, align 4
  %v3_890c = inttoptr i32 %v2_890c to i8*
  store i8 %v1_890c, i8* %v3_890c, align 1
  %v2_8910 = call i32 @function_137ec(i32 %v1_88fc, i32 %v0_8900)
  %v2_8914 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8914 = zext i8 %v2_8914 to i32
  store i32 ptrtoint (i32* @global_var_962c.46 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8910, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_8924 = mul nuw nsw i32 %v3_8914, 4
  store i32 %v3_8924, i32* %r1.global-to-local, align 4
  %v2_8928 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_892c = inttoptr i32 %v2_8910 to i32*
  store i32 ptrtoint (i32* @global_var_962c.46 to i32), i32* %v2_892c, align 4
  %v3_8930 = load i32, i32* @r5, align 4
  %v4_8930 = add i32 %v3_8930, 4
  %v5_8930 = inttoptr i32 %v4_8930 to i8*
  store i8 7, i8* %v5_8930, align 1
  %v0_8934 = load i32, i32* %r1.global-to-local, align 4
  %v1_8934 = add i32 %v0_8934, 4
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v5_8938 = call i32 @function_13934(i32 %v2_8928, i32 %v1_8934, i32 ptrtoint (i32* @global_var_962c.46 to i32), i32 7)
  %v2_893c = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_893c = zext i8 %v2_893c to i32
  store i32 %v3_893c, i32* %r3.global-to-local, align 4
  store i32 %v5_8938, i32* %ip.global-to-local, align 4
  %v0_8944 = load i32, i32* @r5, align 4
  %v5_8944 = mul nuw nsw i32 %v3_893c, 4
  %v6_8944 = add i32 %v5_8944, %v5_8938
  %v7_8944 = inttoptr i32 %v6_8944 to i32*
  store i32 %v0_8944, i32* %v7_8944, align 4
  %v0_8948 = load i32, i32* %r3.global-to-local, align 4
  %v1_8948 = load i32, i32* @r8, align 4
  %v2_8948 = add i32 %v1_8948, %v0_8948
  store i32 %v2_8948, i32* %r2.global-to-local, align 4
  %v0_894c = load i32, i32* @r7, align 4
  store i32 %v0_894c, i32* %r1.global-to-local, align 4
  %v1_8954 = trunc i32 %v2_8948 to i8
  %v2_8954 = load i32, i32* @r4, align 4
  %v3_8954 = inttoptr i32 %v2_8954 to i8*
  store i8 %v1_8954, i8* %v3_8954, align 1
  %v0_8958 = load i32, i32* %ip.global-to-local, align 4
  %v1_8958 = load i32, i32* @r6, align 4
  %v2_8958 = inttoptr i32 %v1_8958 to i32*
  store i32 %v0_8958, i32* %v2_8958, align 4
  %v2_895c = call i32 @function_137ec(i32 %v1_8948, i32 %v0_894c)
  %v2_8960 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8960 = zext i8 %v2_8960 to i32
  store i32 36028, i32* %r2.global-to-local, align 4
  store i32 %v2_895c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v3_8970 = mul nuw nsw i32 %v3_8960, 4
  store i32 %v3_8970, i32* %r1.global-to-local, align 4
  %v2_8974 = load i32, i32* @global_var_1dbb0.23, align 4
  %v2_8978 = inttoptr i32 %v2_895c to i32*
  store i32 36028, i32* %v2_8978, align 4
  %v3_897c = load i32, i32* @r5, align 4
  %v4_897c = add i32 %v3_897c, 4
  %v5_897c = inttoptr i32 %v4_897c to i8*
  store i8 9, i8* %v5_897c, align 1
  %v0_8980 = load i32, i32* %r1.global-to-local, align 4
  %v1_8980 = add i32 %v0_8980, 4
  store i32 %v1_8980, i32* %r1.global-to-local, align 4
  %v5_8984 = call i32 @function_13934(i32 %v2_8974, i32 %v1_8980, i32 36028, i32 9)
  %v2_8988 = load i8, i8* bitcast (i8** @global_var_1dbac.21 to i8*), align 4
  %v3_8988 = zext i8 %v2_8988 to i32
  store i32 %v3_8988, i32* %r3.global-to-local, align 4
  %v1_898c = load i32, i32* @r6, align 4
  %v2_898c = inttoptr i32 %v1_898c to i32*
  store i32 %v5_8984, i32* %v2_898c, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8990 = load i32, i32* %r3.global-to-local, align 4
  %v5_8990 = mul i32 %v2_8990, 4
  %v6_8990 = add i32 %v5_8990, %v5_8984
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 %v0_8990, i32* %v7_8990, align 4
  %v0_8994 = load i32, i32* %r3.global-to-local, align 4
  %v1_8994 = load i32, i32* @r8, align 4
  %v2_8994 = add i32 %v1_8994, %v0_8994
  store i32 %v2_8994, i32* %r2.global-to-local, align 4
  %v1_899c = trunc i32 %v2_8994 to i8
  %v2_899c = load i32, i32* @r4, align 4
  %v3_899c = inttoptr i32 %v2_899c to i8*
  store i8 %v1_899c, i8* %v3_899c, align 1
  %v2_89a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_89a0, i32* @r4, align 4
  store i32 %v6_8650, i32* @r5, align 4
  store i32 %v9_8650, i32* @r6, align 4
  store i32 %v12_8650, i32* @r7, align 4
  store i32 %v15_8650, i32* @r8, align 4
  ret i32 %v1_8994

; uselistorder directives
  uselistorder i32 %v1_8994, { 1, 0 }
  uselistorder i32 %v1_8948, { 1, 0 }
  uselistorder i32 %v1_88fc, { 1, 0 }
  uselistorder i32 %v1_88b0, { 1, 0 }
  uselistorder i32 %v1_8864, { 1, 0 }
  uselistorder i32 %v1_8818, { 1, 0 }
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_8780, { 1, 0 }
  uselistorder i32 %v2_8730, { 0, 2, 1 }
  uselistorder i32 %v3_8728, { 1, 0, 2 }
  uselistorder i32 %v1_86e8, { 1, 0 }
  uselistorder i32* @global_var_1dbb0.23, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i8* bitcast (i8** @global_var_1dbac.21 to i8*), { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_89d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_89d8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v24_89d8 = load i32, i32* @fp, align 4
  %v1_89dc = urem i32 %arg1, 256
  store i32 %v1_89dc, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_89f4 = urem i32 %arg3, 256
  store i32 %v1_89f4, i32* @r4, align 4
  %v2_89f8 = call i32 @function_137ec(i32 %v1_89dc, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_89f8, i32* @sl, align 4
  %v0_8a04 = load i32, i32* @r7, align 4
  %v2_8a08 = call i32 @function_137ec(i32 %v0_8a04, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_8a14 = load i32, i32* @r6, align 4
  store i32 %v0_8a14, i32* %r1.global-to-local, align 4
  store i32 %v2_8a08, i32* @sb, align 4
  %v0_8a24 = load i32, i32* @r4, align 4
  %v4_8a28 = inttoptr i32 %v0_8a14 to i32*
  %v5_8a28 = call i32 @function_85e0(i32 %v0_8a24, i32* %v4_8a28, i32 7, i32 65535)
  %v3_8a30 = urem i32 %v5_8a28, 65536
  %v0_8a34 = load i32, i32* @r6, align 4
  store i32 %v0_8a34, i32* %r1.global-to-local, align 4
  %v0_8a3c = load i32, i32* @r5, align 4
  %v0_8a40 = load i32, i32* @r4, align 4
  %v5_8a48 = inttoptr i32 %v0_8a34 to i32*
  %v6_8a48 = call i32 @function_85e0(i32 %v0_8a40, i32* %v5_8a48, i32 6, i32 %v0_8a3c)
  %v0_8a4c = load i32, i32* @r6, align 4
  store i32 %v0_8a4c, i32* %r1.global-to-local, align 4
  %v3_8a50 = mul i32 %v6_8a48, 65536
  store i32 %v3_8a50, i32* %fp.global-to-local, align 4
  %v0_8a5c = load i32, i32* @r4, align 4
  %v4_8a60 = inttoptr i32 %v0_8a4c to i32*
  %v5_8a60 = call i32 @function_85e0(i32 %v0_8a5c, i32* %v4_8a60, i32 0, i32 512)
  %v0_8a6c = load i32, i32* @r6, align 4
  store i32 %v0_8a6c, i32* %r1.global-to-local, align 4
  %v0_8a70 = load i32, i32* @r4, align 4
  %v3_8a78 = urem i32 %v5_8a60, 65536
  store i32 %v3_8a78, i32* @r6, align 4
  %v4_8a7c = inttoptr i32 %v0_8a6c to i32*
  %v5_8a7c = call i32 @function_85e0(i32 %v0_8a70, i32* %v4_8a7c, i32 1, i32 1)
  %v0_8a80 = load i32, i32* %fp.global-to-local, align 4
  %v3_8a80 = udiv i32 %v0_8a80, 65536
  %v1_8a88 = load i32, i32* @r5, align 4
  %v9_8a88 = icmp eq i32 %v3_8a80, %v1_8a88
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_8a88, label %dec_label_pc_8ab0, label %bb

bb:                                               ; preds = %dec_label_pc_89d8
  %v2_8a9c = mul nuw nsw i32 %v3_8a80, 256
  %v4_8aa0 = and i32 %v2_8a9c, 65280
  %v1_8aa4 = urem i32 %v5_8a7c, 256
  store i32 %v1_8aa4, i32* @r8, align 4
  %v5_8aa8 = udiv i32 %v0_8a80, 16777216
  %v6_8aa8 = or i32 %v4_8aa0, %v5_8aa8
  br label %dec_label_pc_8abc

dec_label_pc_8ab0:                                ; preds = %dec_label_pc_89d8
  %v1_8aa47 = urem i32 %v5_8a7c, 256
  store i32 %v1_8aa47, i32* @r8, align 4
  %v0_8ab0 = call i32 @function_e82c()
  %v3_8ab8 = urem i32 %v0_8ab0, 65536
  br label %dec_label_pc_8abc

dec_label_pc_8abc:                                ; preds = %bb, %dec_label_pc_8ab0
  %storemerge17 = phi i32 [ %v6_8aa8, %bb ], [ %v3_8ab8, %dec_label_pc_8ab0 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_8abc = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_8abc, 1
  br i1 %tmp41, label %dec_label_pc_8c64.preheader, label %dec_label_pc_8ac4

dec_label_pc_8c64.preheader:                      ; preds = %dec_label_pc_8bc0, %dec_label_pc_8abc
  %storemerge3.in12.ph = phi i32 [ %v0_8abc, %dec_label_pc_8abc ], [ %v1_8b18, %dec_label_pc_8bc0 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_8c2c, label %dec_label_pc_8c30.lr.ph

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8abc
  store i32 %v3_8a30, i32* %r1.global-to-local, align 4
  %v3_8ac8 = udiv i32 %v5_8a28, 256
  %v5_8ad4 = trunc i32 %v3_8ac8 to i8
  store i32 %arg2, i32* @r5, align 4
  %v3_8aec = udiv i32 %v5_8a28, 65536
  store i32 %v3_8aec, i32* @r4, align 4
  %v4_8afc = trunc i32 %v3_8aec to i8
  store i8 %v4_8afc, i8* %stack_var_-80, align 1
  %v3_8c0c = icmp eq i32 %v3_8a30, 65535
  %v2_8b34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_8b64 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_8bf0

dec_label_pc_8b04:                                ; preds = %dec_label_pc_8bf0
  %v2_8b04 = load i8, i8* %stack_var_-80, align 1
  %v3_8b04 = sext i8 %v2_8b04 to i32
  store i32 %v3_8b04, i32* %r1.global-to-local, align 4
  store i32 %v3_8ac8, i32* @r4, align 4
  %v2_8b08 = load i32, i32* @r5, align 4
  %v3_8b08 = add i32 %v2_8b08, 2
  %v4_8b08 = inttoptr i32 %v3_8b08 to i8*
  store i8 %v5_8ad4, i8* %v4_8b08, align 1
  %v0_8b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_8b0c = trunc i32 %v0_8b0c to i8
  %v2_8b0c = load i32, i32* @r5, align 4
  %v3_8b0c = add i32 %v2_8b0c, 3
  %v4_8b0c = inttoptr i32 %v3_8b0c to i8*
  store i8 %v1_8b0c, i8* %v4_8b0c, align 1
  br label %dec_label_pc_8b10

dec_label_pc_8b10:                                ; preds = %dec_label_pc_8c18, %dec_label_pc_8b04
  %v1_8b18 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8b28 = call i32 @function_13500(i32 2, i32 2, i32 17)
  store i32 %stack_var_-60.0, i32* @r4, align 4
  %v7_8b30 = icmp eq i32 %v3_8b28, -1
  store i32 %v2_8b34, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v2_8b44 = load i32, i32* @sb, align 4
  %v3_8b44 = add i32 %v2_8b44, %stack_var_-60.0
  %v4_8b44 = inttoptr i32 %v3_8b44 to i32*
  store i32 %v3_8b28, i32* %v4_8b44, align 4
  br i1 %v7_8b30, label %dec_label_pc_8c70, label %dec_label_pc_8b4c

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b10
  store i32 2, i32* %stack_var_-52, align 4
  %v4_8b64 = call i32 @function_13330(i32 %v3_8b28, %sockaddr* %v3_8b64, i32 16)
  %v0_8b68 = load i32, i32* @r5, align 4
  %v1_8b68 = add i32 %v0_8b68, 20
  %v2_8b68 = inttoptr i32 %v1_8b68 to i8*
  %v3_8b68 = load i8, i8* %v2_8b68, align 1
  %tmp = icmp ugt i8 %v3_8b68, 31
  br i1 %tmp, label %dec_label_pc_8bc0, label %dec_label_pc_8b74

dec_label_pc_8b74:                                ; preds = %dec_label_pc_8b4c
  %v1_8b74 = add i32 %v0_8b68, 16
  %v2_8b74 = inttoptr i32 %v1_8b74 to i32*
  %v3_8b74 = load i32, i32* %v2_8b74, align 4
  store i32 %v3_8b74, i32* @r4, align 4
  %v0_8b78 = call i32 @function_e82c()
  %v0_8b7c = load i32, i32* @r4, align 4
  %v1_8b80 = and i32 %v0_8b7c, 65280
  %v3_8b88 = mul i32 %v0_8b7c, 16777216
  %v4_8b8c = mul nuw nsw i32 %v1_8b80, 256
  %v5_8b8c = or i32 %v4_8b8c, %v3_8b88
  store i32 %v5_8b8c, i32* %r1.global-to-local, align 4
  %v0_8b94 = load i32, i32* @r5, align 4
  %v1_8b94 = add i32 %v0_8b94, 20
  %v2_8b94 = inttoptr i32 %v1_8b94 to i8*
  %v3_8b94 = load i8, i8* %v2_8b94, align 1
  %v4_8b94 = zext i8 %v3_8b94 to i32
  %v2_8b98 = call i32 @llvm.bswap.i32(i32 %v0_8b7c)
  %v7_8b9c = lshr i32 %v0_8b78, %v4_8b94
  %v8_8b9c = add i32 %v7_8b9c, %v2_8b98
  %v3_8ba8 = mul i32 %v8_8b9c, 16777216
  %v1_8bac = and i32 %v8_8b9c, 65280
  %v4_8bb0 = mul nuw nsw i32 %v1_8bac, 256
  %v5_8bb0 = or i32 %v4_8bb0, %v3_8ba8
  store i32 %v5_8bb0, i32* %r1.global-to-local, align 4
  %v2_8bb8 = call i32 @llvm.bswap.i32(i32 %v8_8b9c)
  %v2_8bbc = add i32 %v0_8b94, 4
  %v3_8bbc = inttoptr i32 %v2_8bbc to i32*
  store i32 %v2_8bb8, i32* %v3_8bbc, align 4
  %v0_8bcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8bc0

dec_label_pc_8bc0:                                ; preds = %dec_label_pc_8b4c, %dec_label_pc_8b74
  %v0_8bcc = phi i32 [ %v0_8b68, %dec_label_pc_8b4c ], [ %v0_8bcc.pre, %dec_label_pc_8b74 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_8bc8 = load i32, i32* @sb, align 4
  %v2_8bc8 = add i32 %v1_8bc8, %stack_var_-60.0
  %v3_8bc8 = inttoptr i32 %v2_8bc8 to i32*
  %v4_8bc8 = load i32, i32* %v3_8bc8, align 4
  store i32 %v0_8bcc, i32* %r1.global-to-local, align 4
  %v3_8bd0 = inttoptr i32 %v0_8bcc to %sockaddr*
  %v4_8bd0 = call i32 @function_1335c(i32 %v4_8bc8, %sockaddr* %v3_8bd0, i32 16)
  %v1_8bdc = add i32 %stack_var_-60.0, 4
  %v1_8be0 = load i32, i32* @r7, align 4
  %v9_8be0 = icmp eq i32 %v1_8b18, %v1_8be0
  %v0_8be8 = load i32, i32* @r5, align 4
  %v1_8be8 = add i32 %v0_8be8, 24
  store i32 %v1_8be8, i32* @r5, align 4
  br i1 %v9_8be0, label %dec_label_pc_8c64.preheader, label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8bc0, %dec_label_pc_8ac4
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8ac4 ], [ %v1_8bdc, %dec_label_pc_8bc0 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8ac4 ], [ %v1_8b18, %dec_label_pc_8bc0 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8bfc = call i32 @function_137ec(i32 65535, i32 1)
  store i32 %v3_8a30, i32* %r1.global-to-local, align 4
  %v2_8c10 = load i32, i32* @sl, align 4
  %v3_8c10 = add i32 %v2_8c10, %stack_var_-60.0
  %v4_8c10 = inttoptr i32 %v3_8c10 to i32*
  store i32 %v2_8bfc, i32* %v4_8c10, align 4
  br i1 %v3_8c0c, label %dec_label_pc_8c18, label %dec_label_pc_8b04

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bf0
  %v0_8c18 = call i32 @function_e82c()
  %v1_8c18 = trunc i32 %v0_8c18 to i8
  %v4_8c1c = sdiv i32 %v0_8c18, 256
  %v1_8c20 = trunc i32 %v4_8c1c to i8
  %v2_8c20 = load i32, i32* @r5, align 4
  %v3_8c20 = add i32 %v2_8c20, 3
  %v4_8c20 = inttoptr i32 %v3_8c20 to i8*
  store i8 %v1_8c20, i8* %v4_8c20, align 1
  %v3_8c24 = load i32, i32* @r5, align 4
  %v4_8c24 = add i32 %v3_8c24, 2
  %v5_8c24 = inttoptr i32 %v4_8c24 to i8*
  store i8 %v1_8c18, i8* %v5_8c24, align 1
  br label %dec_label_pc_8b10

dec_label_pc_8c2c:                                ; preds = %dec_label_pc_8c64.loopexit, %dec_label_pc_8c64.preheader, %dec_label_pc_8c68.loopexit, %dec_label_pc_8c2c
  br label %dec_label_pc_8c2c

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c30.lr.ph, %dec_label_pc_8c68.loopexit
  %v0_8c30 = load i32, i32* @r8, align 4
  %v2_8c30 = icmp eq i32 %v0_8c30, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_8c30, label %dec_label_pc_8c38, label %dec_label_pc_8c78

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8c30
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8c40

dec_label_pc_8c40:                                ; preds = %dec_label_pc_8c40, %dec_label_pc_8c38
  %v0_8c48 = phi i32 [ %v1_8c48, %dec_label_pc_8c40 ], [ 0, %dec_label_pc_8c38 ]
  %v0_8c40 = phi i32 [ %v1_8c5c, %dec_label_pc_8c40 ], [ 0, %dec_label_pc_8c38 ]
  %v1_8c40 = load i32, i32* @sb, align 4
  %v2_8c40 = add i32 %v1_8c40, %v0_8c40
  %v3_8c40 = inttoptr i32 %v2_8c40 to i32*
  %v4_8c40 = load i32, i32* %v3_8c40, align 4
  %v1_8c44 = load i32, i32* @sl, align 4
  %v2_8c44 = add i32 %v1_8c44, %v0_8c40
  %v3_8c44 = inttoptr i32 %v2_8c44 to i32*
  %v4_8c44 = load i32, i32* %v3_8c44, align 4
  store i32 %v4_8c44, i32* %r1.global-to-local, align 4
  %v1_8c48 = add i32 %v0_8c48, 1
  %v0_8c4c = load i32, i32* @r6, align 4
  %v4_8c54 = inttoptr i32 %v4_8c44 to i32*
  %v5_8c54 = call i32 @function_13470(i32 %v4_8c40, i32* %v4_8c54, i32 %v0_8c4c, i32 16384)
  %v1_8c58 = load i32, i32* @r7, align 4
  %v9_8c58 = icmp eq i32 %v1_8c48, %v1_8c58
  %v0_8c5c = load i32, i32* @r4, align 4
  %v1_8c5c = add i32 %v0_8c5c, 4
  store i32 %v1_8c5c, i32* @r4, align 4
  br i1 %v9_8c58, label %dec_label_pc_8c64.loopexit, label %dec_label_pc_8c40

dec_label_pc_8c64.loopexit:                       ; preds = %dec_label_pc_8c40
  %tmp4247 = icmp slt i32 %v1_8c48, 1
  br i1 %tmp4247, label %dec_label_pc_8c2c, label %dec_label_pc_8c30.lr.ph

dec_label_pc_8c30.lr.ph:                          ; preds = %dec_label_pc_8c64.preheader, %dec_label_pc_8c64.loopexit
  br label %dec_label_pc_8c30

dec_label_pc_8c68.loopexit:                       ; preds = %dec_label_pc_8c80
  %tmp42 = icmp slt i32 %v0_8ca8, 1
  br i1 %tmp42, label %dec_label_pc_8c2c, label %dec_label_pc_8c30

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8b10
  store i32 %v24_89d8, i32* %fp.global-to-local, align 4
  ret i32 %v3_8b28

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c30
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8c80

dec_label_pc_8c80:                                ; preds = %dec_label_pc_8c80, %dec_label_pc_8c78
  %v0_8c80 = phi i32 [ %v1_8cac, %dec_label_pc_8c80 ], [ 0, %dec_label_pc_8c78 ]
  %v1_8c80 = load i32, i32* @sl, align 4
  %v2_8c80 = add i32 %v1_8c80, %v0_8c80
  %v3_8c80 = inttoptr i32 %v2_8c80 to i32*
  %v4_8c80 = load i32, i32* %v3_8c80, align 4
  store i32 %v4_8c80, i32* @r4, align 4
  %v0_8c84 = load i32, i32* @r6, align 4
  store i32 %v0_8c84, i32* @r1, align 4
  %v1_8c8c = inttoptr i32 %v4_8c80 to i8*
  %v2_8c8c = call i32 @function_e9ac(i8* %v1_8c8c)
  %v0_8c90 = load i32, i32* @r5, align 4
  %v1_8c90 = add i32 %v0_8c90, 1
  store i32 %v1_8c90, i32* @r5, align 4
  %v0_8c94 = load i32, i32* @fp, align 4
  %v1_8c94 = load i32, i32* @sb, align 4
  %v2_8c94 = add i32 %v1_8c94, %v0_8c94
  %v3_8c94 = inttoptr i32 %v2_8c94 to i32*
  %v4_8c94 = load i32, i32* %v3_8c94, align 4
  %v0_8c98 = load i32, i32* @r4, align 4
  store i32 %v0_8c98, i32* %r1.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r6, align 4
  %v4_8ca4 = inttoptr i32 %v0_8c98 to i32*
  %v5_8ca4 = call i32 @function_13470(i32 %v4_8c94, i32* %v4_8ca4, i32 %v0_8c9c, i32 16384)
  %v0_8ca8 = load i32, i32* @r5, align 4
  %v1_8ca8 = load i32, i32* @r7, align 4
  %v9_8ca8 = icmp eq i32 %v0_8ca8, %v1_8ca8
  %v0_8cac = load i32, i32* @fp, align 4
  %v1_8cac = add i32 %v0_8cac, 4
  store i32 %v1_8cac, i32* @fp, align 4
  br i1 %v9_8ca8, label %dec_label_pc_8c68.loopexit, label %dec_label_pc_8c80

; uselistorder directives
  uselistorder i32 %v1_8cac, { 1, 0 }
  uselistorder i32 %v0_8ca8, { 1, 0 }
  uselistorder i32 %v1_8c5c, { 1, 0 }
  uselistorder i32 %v1_8c48, { 2, 0, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_8bcc, { 1, 0 }
  uselistorder i32 %v8_8b9c, { 1, 2, 0 }
  uselistorder i32 %v0_8b7c, { 1, 0, 2 }
  uselistorder i32 %v3_8b28, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8b18, { 1, 2, 0 }
  uselistorder i32 %v3_8aec, { 1, 0 }
  uselistorder i32 %v3_8ac8, { 1, 0 }
  uselistorder i32 %v3_8a30, { 0, 2, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_8c30.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8c2c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8abc, { 1, 0 }
}

define i32 @function_8cbc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8cbc:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v24_8cbc = load i32, i32* @fp, align 4
  %v1_8cc0 = urem i32 %arg1, 256
  store i32 %v1_8cc0, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_8cd8 = urem i32 %arg3, 256
  store i32 %v1_8cd8, i32* @r4, align 4
  %v2_8cdc = call i32 @function_137ec(i32 %v1_8cc0, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_8cdc, i32* @sl, align 4
  %v0_8ce8 = load i32, i32* @r7, align 4
  %v2_8cec = call i32 @function_137ec(i32 %v0_8ce8, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_8cf8 = load i32, i32* @r6, align 4
  store i32 %v0_8cf8, i32* %r1.global-to-local, align 4
  store i32 %v2_8cec, i32* @sb, align 4
  %v0_8d08 = load i32, i32* @r4, align 4
  %v4_8d0c = inttoptr i32 %v0_8cf8 to i32*
  %v5_8d0c = call i32 @function_85e0(i32 %v0_8d08, i32* %v4_8d0c, i32 7, i32 65535)
  %v3_8d14 = urem i32 %v5_8d0c, 65536
  %v0_8d18 = load i32, i32* @r6, align 4
  store i32 %v0_8d18, i32* %r1.global-to-local, align 4
  %v0_8d20 = load i32, i32* @r5, align 4
  %v0_8d24 = load i32, i32* @r4, align 4
  %v5_8d2c = inttoptr i32 %v0_8d18 to i32*
  %v6_8d2c = call i32 @function_85e0(i32 %v0_8d24, i32* %v5_8d2c, i32 6, i32 %v0_8d20)
  %v0_8d30 = load i32, i32* @r6, align 4
  store i32 %v0_8d30, i32* %r1.global-to-local, align 4
  %v3_8d34 = mul i32 %v6_8d2c, 65536
  store i32 %v3_8d34, i32* %fp.global-to-local, align 4
  %v0_8d40 = load i32, i32* @r4, align 4
  %v4_8d44 = inttoptr i32 %v0_8d30 to i32*
  %v5_8d44 = call i32 @function_85e0(i32 %v0_8d40, i32* %v4_8d44, i32 0, i32 1024)
  %v0_8d50 = load i32, i32* @r6, align 4
  store i32 %v0_8d50, i32* %r1.global-to-local, align 4
  %v0_8d54 = load i32, i32* @r4, align 4
  %v3_8d5c = urem i32 %v5_8d44, 65536
  store i32 %v3_8d5c, i32* @r6, align 4
  %v4_8d60 = inttoptr i32 %v0_8d50 to i32*
  %v5_8d60 = call i32 @function_85e0(i32 %v0_8d54, i32* %v4_8d60, i32 1, i32 1)
  %v0_8d64 = load i32, i32* %fp.global-to-local, align 4
  %v3_8d64 = udiv i32 %v0_8d64, 65536
  %v1_8d6c = load i32, i32* @r5, align 4
  %v9_8d6c = icmp eq i32 %v3_8d64, %v1_8d6c
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_8d6c, label %dec_label_pc_8d94, label %bb

bb:                                               ; preds = %dec_label_pc_8cbc
  %v2_8d80 = mul nuw nsw i32 %v3_8d64, 256
  %v4_8d84 = and i32 %v2_8d80, 65280
  %v1_8d88 = urem i32 %v5_8d60, 256
  store i32 %v1_8d88, i32* @r8, align 4
  %v5_8d8c = udiv i32 %v0_8d64, 16777216
  %v6_8d8c = or i32 %v4_8d84, %v5_8d8c
  br label %dec_label_pc_8da0

dec_label_pc_8d94:                                ; preds = %dec_label_pc_8cbc
  %v1_8d887 = urem i32 %v5_8d60, 256
  store i32 %v1_8d887, i32* @r8, align 4
  %v0_8d94 = call i32 @function_e82c()
  %v3_8d9c = urem i32 %v0_8d94, 65536
  br label %dec_label_pc_8da0

dec_label_pc_8da0:                                ; preds = %bb, %dec_label_pc_8d94
  %storemerge17 = phi i32 [ %v6_8d8c, %bb ], [ %v3_8d9c, %dec_label_pc_8d94 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_8da0 = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_8da0, 1
  br i1 %tmp41, label %dec_label_pc_8f48.preheader, label %dec_label_pc_8da8

dec_label_pc_8f48.preheader:                      ; preds = %dec_label_pc_8ea4, %dec_label_pc_8da0
  %storemerge3.in12.ph = phi i32 [ %v0_8da0, %dec_label_pc_8da0 ], [ %v1_8dfc, %dec_label_pc_8ea4 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_8f10, label %dec_label_pc_8f14.lr.ph

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8da0
  store i32 %v3_8d14, i32* %r1.global-to-local, align 4
  %v3_8dac = udiv i32 %v5_8d0c, 256
  %v5_8db8 = trunc i32 %v3_8dac to i8
  store i32 %arg2, i32* @r5, align 4
  %v3_8dd0 = udiv i32 %v5_8d0c, 65536
  store i32 %v3_8dd0, i32* @r4, align 4
  %v4_8de0 = trunc i32 %v3_8dd0 to i8
  store i8 %v4_8de0, i8* %stack_var_-80, align 1
  %v3_8ef0 = icmp eq i32 %v3_8d14, 65535
  %v2_8e18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_8e48 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_8ed4

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8ed4
  %v2_8de8 = load i8, i8* %stack_var_-80, align 1
  %v3_8de8 = sext i8 %v2_8de8 to i32
  store i32 %v3_8de8, i32* %r1.global-to-local, align 4
  store i32 %v3_8dac, i32* @r4, align 4
  %v2_8dec = load i32, i32* @r5, align 4
  %v3_8dec = add i32 %v2_8dec, 2
  %v4_8dec = inttoptr i32 %v3_8dec to i8*
  store i8 %v5_8db8, i8* %v4_8dec, align 1
  %v0_8df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_8df0 = trunc i32 %v0_8df0 to i8
  %v2_8df0 = load i32, i32* @r5, align 4
  %v3_8df0 = add i32 %v2_8df0, 3
  %v4_8df0 = inttoptr i32 %v3_8df0 to i8*
  store i8 %v1_8df0, i8* %v4_8df0, align 1
  br label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8efc, %dec_label_pc_8de8
  %v1_8dfc = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8e0c = call i32 @function_13500(i32 2, i32 2, i32 0)
  store i32 %stack_var_-60.0, i32* @r4, align 4
  %v7_8e14 = icmp eq i32 %v3_8e0c, -1
  store i32 %v2_8e18, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v2_8e28 = load i32, i32* @sb, align 4
  %v3_8e28 = add i32 %v2_8e28, %stack_var_-60.0
  %v4_8e28 = inttoptr i32 %v3_8e28 to i32*
  store i32 %v3_8e0c, i32* %v4_8e28, align 4
  br i1 %v7_8e14, label %dec_label_pc_8f54, label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %dec_label_pc_8df4
  store i32 2, i32* %stack_var_-52, align 4
  %v4_8e48 = call i32 @function_13330(i32 %v3_8e0c, %sockaddr* %v3_8e48, i32 16)
  %v0_8e4c = load i32, i32* @r5, align 4
  %v1_8e4c = add i32 %v0_8e4c, 20
  %v2_8e4c = inttoptr i32 %v1_8e4c to i8*
  %v3_8e4c = load i8, i8* %v2_8e4c, align 1
  %tmp = icmp ugt i8 %v3_8e4c, 31
  br i1 %tmp, label %dec_label_pc_8ea4, label %dec_label_pc_8e58

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e30
  %v1_8e58 = add i32 %v0_8e4c, 16
  %v2_8e58 = inttoptr i32 %v1_8e58 to i32*
  %v3_8e58 = load i32, i32* %v2_8e58, align 4
  store i32 %v3_8e58, i32* @r4, align 4
  %v0_8e5c = call i32 @function_e82c()
  %v0_8e60 = load i32, i32* @r4, align 4
  %v1_8e64 = and i32 %v0_8e60, 65280
  %v3_8e6c = mul i32 %v0_8e60, 16777216
  %v4_8e70 = mul nuw nsw i32 %v1_8e64, 256
  %v5_8e70 = or i32 %v4_8e70, %v3_8e6c
  store i32 %v5_8e70, i32* %r1.global-to-local, align 4
  %v0_8e78 = load i32, i32* @r5, align 4
  %v1_8e78 = add i32 %v0_8e78, 20
  %v2_8e78 = inttoptr i32 %v1_8e78 to i8*
  %v3_8e78 = load i8, i8* %v2_8e78, align 1
  %v4_8e78 = zext i8 %v3_8e78 to i32
  %v2_8e7c = call i32 @llvm.bswap.i32(i32 %v0_8e60)
  %v7_8e80 = lshr i32 %v0_8e5c, %v4_8e78
  %v8_8e80 = add i32 %v7_8e80, %v2_8e7c
  %v3_8e8c = mul i32 %v8_8e80, 16777216
  %v1_8e90 = and i32 %v8_8e80, 65280
  %v4_8e94 = mul nuw nsw i32 %v1_8e90, 256
  %v5_8e94 = or i32 %v4_8e94, %v3_8e8c
  store i32 %v5_8e94, i32* %r1.global-to-local, align 4
  %v2_8e9c = call i32 @llvm.bswap.i32(i32 %v8_8e80)
  %v2_8ea0 = add i32 %v0_8e78, 4
  %v3_8ea0 = inttoptr i32 %v2_8ea0 to i32*
  store i32 %v2_8e9c, i32* %v3_8ea0, align 4
  %v0_8eb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8ea4

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e30, %dec_label_pc_8e58
  %v0_8eb0 = phi i32 [ %v0_8e4c, %dec_label_pc_8e30 ], [ %v0_8eb0.pre, %dec_label_pc_8e58 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_8eac = load i32, i32* @sb, align 4
  %v2_8eac = add i32 %v1_8eac, %stack_var_-60.0
  %v3_8eac = inttoptr i32 %v2_8eac to i32*
  %v4_8eac = load i32, i32* %v3_8eac, align 4
  store i32 %v0_8eb0, i32* %r1.global-to-local, align 4
  %v3_8eb4 = inttoptr i32 %v0_8eb0 to %sockaddr*
  %v4_8eb4 = call i32 @function_1335c(i32 %v4_8eac, %sockaddr* %v3_8eb4, i32 16)
  %v1_8ec0 = add i32 %stack_var_-60.0, 4
  %v1_8ec4 = load i32, i32* @r7, align 4
  %v9_8ec4 = icmp eq i32 %v1_8dfc, %v1_8ec4
  %v0_8ecc = load i32, i32* @r5, align 4
  %v1_8ecc = add i32 %v0_8ecc, 24
  store i32 %v1_8ecc, i32* @r5, align 4
  br i1 %v9_8ec4, label %dec_label_pc_8f48.preheader, label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8ea4, %dec_label_pc_8da8
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8da8 ], [ %v1_8ec0, %dec_label_pc_8ea4 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8da8 ], [ %v1_8dfc, %dec_label_pc_8ea4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8ee0 = call i32 @function_137ec(i32 65535, i32 1)
  store i32 %v3_8d14, i32* %r1.global-to-local, align 4
  %v2_8ef4 = load i32, i32* @sl, align 4
  %v3_8ef4 = add i32 %v2_8ef4, %stack_var_-60.0
  %v4_8ef4 = inttoptr i32 %v3_8ef4 to i32*
  store i32 %v2_8ee0, i32* %v4_8ef4, align 4
  br i1 %v3_8ef0, label %dec_label_pc_8efc, label %dec_label_pc_8de8

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ed4
  %v0_8efc = call i32 @function_e82c()
  %v1_8efc = trunc i32 %v0_8efc to i8
  %v4_8f00 = sdiv i32 %v0_8efc, 256
  %v1_8f04 = trunc i32 %v4_8f00 to i8
  %v2_8f04 = load i32, i32* @r5, align 4
  %v3_8f04 = add i32 %v2_8f04, 3
  %v4_8f04 = inttoptr i32 %v3_8f04 to i8*
  store i8 %v1_8f04, i8* %v4_8f04, align 1
  %v3_8f08 = load i32, i32* @r5, align 4
  %v4_8f08 = add i32 %v3_8f08, 2
  %v5_8f08 = inttoptr i32 %v4_8f08 to i8*
  store i8 %v1_8efc, i8* %v5_8f08, align 1
  br label %dec_label_pc_8df4

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8f48.loopexit, %dec_label_pc_8f48.preheader, %dec_label_pc_8f4c.loopexit, %dec_label_pc_8f10
  br label %dec_label_pc_8f10

dec_label_pc_8f14:                                ; preds = %dec_label_pc_8f14.lr.ph, %dec_label_pc_8f4c.loopexit
  %v0_8f14 = load i32, i32* @r8, align 4
  %v2_8f14 = icmp eq i32 %v0_8f14, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_8f14, label %dec_label_pc_8f1c, label %dec_label_pc_8f5c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8f14
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8f24

dec_label_pc_8f24:                                ; preds = %dec_label_pc_8f24, %dec_label_pc_8f1c
  %v0_8f2c = phi i32 [ %v1_8f2c, %dec_label_pc_8f24 ], [ 0, %dec_label_pc_8f1c ]
  %v0_8f24 = phi i32 [ %v1_8f40, %dec_label_pc_8f24 ], [ 0, %dec_label_pc_8f1c ]
  %v1_8f24 = load i32, i32* @sb, align 4
  %v2_8f24 = add i32 %v1_8f24, %v0_8f24
  %v3_8f24 = inttoptr i32 %v2_8f24 to i32*
  %v4_8f24 = load i32, i32* %v3_8f24, align 4
  %v1_8f28 = load i32, i32* @sl, align 4
  %v2_8f28 = add i32 %v1_8f28, %v0_8f24
  %v3_8f28 = inttoptr i32 %v2_8f28 to i32*
  %v4_8f28 = load i32, i32* %v3_8f28, align 4
  store i32 %v4_8f28, i32* %r1.global-to-local, align 4
  %v1_8f2c = add i32 %v0_8f2c, 1
  %v0_8f30 = load i32, i32* @r6, align 4
  %v4_8f38 = inttoptr i32 %v4_8f28 to i32*
  %v5_8f38 = call i32 @function_13470(i32 %v4_8f24, i32* %v4_8f38, i32 %v0_8f30, i32 16384)
  %v1_8f3c = load i32, i32* @r7, align 4
  %v9_8f3c = icmp eq i32 %v1_8f2c, %v1_8f3c
  %v0_8f40 = load i32, i32* @r4, align 4
  %v1_8f40 = add i32 %v0_8f40, 4
  store i32 %v1_8f40, i32* @r4, align 4
  br i1 %v9_8f3c, label %dec_label_pc_8f48.loopexit, label %dec_label_pc_8f24

dec_label_pc_8f48.loopexit:                       ; preds = %dec_label_pc_8f24
  %tmp4247 = icmp slt i32 %v1_8f2c, 1
  br i1 %tmp4247, label %dec_label_pc_8f10, label %dec_label_pc_8f14.lr.ph

dec_label_pc_8f14.lr.ph:                          ; preds = %dec_label_pc_8f48.preheader, %dec_label_pc_8f48.loopexit
  br label %dec_label_pc_8f14

dec_label_pc_8f4c.loopexit:                       ; preds = %dec_label_pc_8f64
  %tmp42 = icmp slt i32 %v0_8f8c, 1
  br i1 %tmp42, label %dec_label_pc_8f10, label %dec_label_pc_8f14

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8df4
  store i32 %v24_8cbc, i32* %fp.global-to-local, align 4
  ret i32 %v3_8e0c

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f14
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8f64

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8f64, %dec_label_pc_8f5c
  %v0_8f64 = phi i32 [ %v1_8f90, %dec_label_pc_8f64 ], [ 0, %dec_label_pc_8f5c ]
  %v1_8f64 = load i32, i32* @sl, align 4
  %v2_8f64 = add i32 %v1_8f64, %v0_8f64
  %v3_8f64 = inttoptr i32 %v2_8f64 to i32*
  %v4_8f64 = load i32, i32* %v3_8f64, align 4
  store i32 %v4_8f64, i32* @r4, align 4
  %v0_8f68 = load i32, i32* @r6, align 4
  store i32 %v0_8f68, i32* @r1, align 4
  %v1_8f70 = inttoptr i32 %v4_8f64 to i8*
  %v2_8f70 = call i32 @function_e9ac(i8* %v1_8f70)
  %v0_8f74 = load i32, i32* @r5, align 4
  %v1_8f74 = add i32 %v0_8f74, 1
  store i32 %v1_8f74, i32* @r5, align 4
  %v0_8f78 = load i32, i32* @fp, align 4
  %v1_8f78 = load i32, i32* @sb, align 4
  %v2_8f78 = add i32 %v1_8f78, %v0_8f78
  %v3_8f78 = inttoptr i32 %v2_8f78 to i32*
  %v4_8f78 = load i32, i32* %v3_8f78, align 4
  %v0_8f7c = load i32, i32* @r4, align 4
  store i32 %v0_8f7c, i32* %r1.global-to-local, align 4
  %v0_8f80 = load i32, i32* @r6, align 4
  %v4_8f88 = inttoptr i32 %v0_8f7c to i32*
  %v5_8f88 = call i32 @function_13470(i32 %v4_8f78, i32* %v4_8f88, i32 %v0_8f80, i32 16384)
  %v0_8f8c = load i32, i32* @r5, align 4
  %v1_8f8c = load i32, i32* @r7, align 4
  %v9_8f8c = icmp eq i32 %v0_8f8c, %v1_8f8c
  %v0_8f90 = load i32, i32* @fp, align 4
  %v1_8f90 = add i32 %v0_8f90, 4
  store i32 %v1_8f90, i32* @fp, align 4
  br i1 %v9_8f8c, label %dec_label_pc_8f4c.loopexit, label %dec_label_pc_8f64

; uselistorder directives
  uselistorder i32 %v1_8f90, { 1, 0 }
  uselistorder i32 %v0_8f8c, { 1, 0 }
  uselistorder i32 %v1_8f40, { 1, 0 }
  uselistorder i32 %v1_8f2c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_8eb0, { 1, 0 }
  uselistorder i32 %v8_8e80, { 1, 2, 0 }
  uselistorder i32 %v0_8e60, { 1, 0, 2 }
  uselistorder i32 %v3_8e0c, { 1, 3, 2, 0 }
  uselistorder i32 %v1_8dfc, { 1, 2, 0 }
  uselistorder i32 %v3_8dd0, { 1, 0 }
  uselistorder i32 %v3_8dac, { 1, 0 }
  uselistorder i32 %v3_8d14, { 0, 2, 1 }
  uselistorder i32 %v1_8cc0, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_8f14.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8f14, { 1, 0 }
  uselistorder label %dec_label_pc_8f10, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8ea4, { 1, 0 }
  uselistorder label %dec_label_pc_8da0, { 1, 0 }
}

define i32 @function_8fa0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8fa0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v18_8fa0 = load i32, i32* @sb, align 4
  %v24_8fa0 = load i32, i32* @fp, align 4
  %v1_8fa4 = urem i32 %arg1, 256
  store i32 %v1_8fa4, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_8fa4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_8fbc = urem i32 %arg3, 256
  store i32 %v1_8fbc, i32* @r4, align 4
  %v2_8fc0 = call i32 @function_137ec(i32 %v1_8fa4, i32 4)
  %v0_8fc4 = load i32, i32* @r5, align 4
  store i32 %v0_8fc4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8fd4 = load i32, i32* @r4, align 4
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  %v5_8fd8 = inttoptr i32 %v0_8fc4 to i32*
  %v6_8fd8 = call i32 @function_85e0(i32 %v0_8fd4, i32* %v5_8fd8, i32 2, i32 0)
  %v1_8fe4 = urem i32 %v6_8fd8, 256
  store i32 %v1_8fe4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8ff0 = load i32, i32* @r5, align 4
  store i32 %v0_8ff0, i32* %r1.global-to-local, align 4
  %v0_8ff4 = load i32, i32* @r4, align 4
  store i32 %v0_8ff4, i32* %r0.global-to-local, align 4
  %v5_8ff8 = trunc i32 %v6_8fd8 to i8
  %v6_8ffc = inttoptr i32 %v0_8ff0 to i32*
  %v7_8ffc = call i32 @function_85e0(i32 %v0_8ff4, i32* %v6_8ffc, i32 3, i32 65535)
  %v0_9000 = load i32, i32* @r5, align 4
  store i32 %v0_9000, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_8ffc, i32* %fp.global-to-local, align 4
  %v0_9010 = load i32, i32* @r4, align 4
  store i32 %v0_9010, i32* %r0.global-to-local, align 4
  %v4_9014 = inttoptr i32 %v0_9000 to i32*
  %v5_9014 = call i32 @function_85e0(i32 %v0_9010, i32* %v4_9014, i32 4, i32 64)
  %v1_901c = urem i32 %v5_9014, 256
  store i32 %v1_901c, i32* %ip.global-to-local, align 4
  %v0_9020 = load i32, i32* @r5, align 4
  store i32 %v0_9020, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_902c = load i32, i32* @r4, align 4
  store i32 %v0_902c, i32* %r0.global-to-local, align 4
  %v5_9030 = trunc i32 %v5_9014 to i8
  %v6_9034 = inttoptr i32 %v0_9020 to i32*
  %v7_9034 = call i32 @function_85e0(i32 %v0_902c, i32* %v6_9034, i32 5, i32 0)
  %v1_9040 = urem i32 %v7_9034, 256
  store i32 %v1_9040, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_904c = load i32, i32* @r5, align 4
  store i32 %v0_904c, i32* %r1.global-to-local, align 4
  %v0_9050 = load i32, i32* @r4, align 4
  store i32 %v0_9050, i32* %r0.global-to-local, align 4
  %v5_9058 = inttoptr i32 %v0_904c to i32*
  %v6_9058 = call i32 @function_85e0(i32 %v0_9050, i32* %v5_9058, i32 6, i32 65535)
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9058, i32* @r7, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  store i32 %v0_9070, i32* %r0.global-to-local, align 4
  %v4_9074 = inttoptr i32 %v0_9060 to i32*
  %v5_9074 = call i32 @function_85e0(i32 %v0_9070, i32* %v4_9074, i32 7, i32 65535)
  %v0_9078 = load i32, i32* @r5, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9074, i32* %sb.global-to-local, align 4
  %v0_9088 = load i32, i32* @r4, align 4
  store i32 %v0_9088, i32* %r0.global-to-local, align 4
  %v4_908c = inttoptr i32 %v0_9078 to i32*
  %v5_908c = call i32 @function_85e0(i32 %v0_9088, i32* %v4_908c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9098 = load i32, i32* @r5, align 4
  store i32 %v0_9098, i32* %r1.global-to-local, align 4
  store i32 %v5_908c, i32* @r6, align 4
  %v0_90a0 = load i32, i32* @r4, align 4
  store i32 %v0_90a0, i32* %r0.global-to-local, align 4
  %v4_90a4 = inttoptr i32 %v0_9098 to i32*
  %v5_90a4 = call i32 @function_85e0(i32 %v0_90a0, i32* %v4_90a4, i32 1, i32 1)
  %v2_90b0 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_90b0, i32* %r3.global-to-local, align 4
  %v1_90b4 = urem i32 %v5_90a4, 256
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  %v0_90b8 = load i32, i32* @r5, align 4
  store i32 %v0_90b8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_90c0 = load i32, i32* @r4, align 4
  store i32 %v0_90c0, i32* %r0.global-to-local, align 4
  %v5_90c8 = inttoptr i32 %v0_90b8 to i32*
  %v6_90c8 = call i32 @function_85e0(i32 %v0_90c0, i32* %v5_90c8, i32 25, i32 %v2_90b0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_90dc = call i32 @function_13500(i32 2, i32 3, i32 17)
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v7_90e0 = icmp eq i32 %v3_90dc, -1
  store i1 %v7_90e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e0, label %dec_label_pc_9508, label %dec_label_pc_90ec

dec_label_pc_90ec:                                ; preds = %dec_label_pc_8fa0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_90f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_90f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9108 = call i32 @function_134d0(i32 %v3_90dc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9108, i32* %r0.global-to-local, align 4
  %v7_910c = icmp eq i32 %v6_9108, -1
  store i1 %v7_910c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_910c, label %dec_label_pc_9500, label %dec_label_pc_9114

dec_label_pc_9114:                                ; preds = %dec_label_pc_90ec
  %v0_9114 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9120 = urem i32 %v0_9114, 65536
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  %v3_9124 = icmp ugt i32 %v3_9120, 1459
  %v9_9124 = icmp eq i32 %v3_9120, 1460
  store i1 %v9_9124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9124, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9114
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9114, %bb
  %v0_912c = phi i32 [ %v3_9120, %dec_label_pc_9114 ], [ 1460, %bb ]
  %v0_9130 = load i32, i32* %fp.global-to-local, align 4
  %v3_9130 = mul i32 %v0_9130, 65536
  store i32 %v3_9130, i32* %r0.global-to-local, align 4
  %v3_9134 = urem i32 %v0_9130, 65536
  store i32 %v3_9134, i32* %r2.global-to-local, align 4
  %v0_9138 = load i32, i32* @sl, align 4
  %v2_9138 = icmp eq i32 %v0_9138, 0
  store i1 %v2_9138, i1* %cpsr_z.global-to-local, align 1
  %v0_913c = load i32, i32* %sb.global-to-local, align 4
  %v0_9140 = load i32, i32* @r7, align 4
  %tmp72 = icmp slt i32 %v0_9138, 1
  br i1 %tmp72, label %bb73, label %bb74

bb73:                                             ; preds = %bb71
  store i32 %v0_912c, i32* %r2.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %bb71, %bb73
  %v5_9168 = phi i32 [ %v3_9134, %bb71 ], [ %v0_912c, %bb73 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9150 = urem i32 %v0_9140, 65536
  store i32 %v3_9150, i32* %r3.global-to-local, align 4
  %v3_9154 = urem i32 %v0_913c, 65536
  store i32 %v3_9154, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %tmp72, label %.thread, label %dec_label_pc_9170

.thread:                                          ; preds = %bb74
  %v6_9164 = add nsw i32 %v5_9168, 28
  store i32 %v6_9164, i32* @fp, align 4
  %v6_9168 = add nsw i32 %v5_9168, 8
  store i32 %v6_9168, i32* @sb, align 4
  br label %dec_label_pc_92e4

dec_label_pc_9170:                                ; preds = %bb74
  %v1_9174 = add nuw nsw i32 %v0_912c, 28
  store i32 %v1_9174, i32* @fp, align 4
  %tmp75 = mul nuw nsw i32 %v1_9174, 256
  %v1_9180 = and i32 %tmp75, 65280
  %tmp76 = udiv i32 %v0_9130, 256
  %v3_9184 = urem i32 %tmp76, 256
  %v2_9198 = icmp eq i32 %v1_9040, 0
  store i1 %v2_9198, i1* %cpsr_z.global-to-local, align 1
  %v1_919c = urem i32 %v0_9130, 256
  %v1_91a4 = add nuw nsw i32 %v0_912c, 8
  store i32 %v1_91a4, i32* @sb, align 4
  %v1_91ac = urem i32 %v0_9140, 256
  %v1_91b0 = urem i32 %v0_913c, 256
  store i32 %v1_91b0, i32* %ip.global-to-local, align 4
  store i32 %v1_9180, i32* %r3.global-to-local, align 4
  %tmp77 = mul nuw nsw i32 %v1_91a4, 256
  %v4_91bc = mul nuw nsw i32 %v1_919c, 256
  %v5_91bc = or i32 %v4_91bc, %v3_9184
  store i32 %v5_91bc, i32* %r0.global-to-local, align 4
  %v3_91c0 = mul nuw nsw i32 %v1_91ac, 256
  store i32 %v3_91c0, i32* %r2.global-to-local, align 4
  %tmp78 = udiv i32 %v0_913c, 256
  %v3_91c4 = urem i32 %tmp78, 256
  %v1_91c8 = and i32 %tmp77, 65280
  store i32 %v1_91c8, i32* %r1.global-to-local, align 4
  %tmp79 = udiv i32 %v1_9174, 256
  %v4_91cc = urem i32 %tmp79, 256
  %v5_91cc = or i32 %v4_91cc, %v1_9180
  store i32 %v5_91cc, i32* @lr, align 4
  %tmp80 = udiv i32 %v0_9140, 256
  %v4_91d0 = urem i32 %tmp80, 256
  %v5_91d0 = or i32 %v4_91d0, %v3_91c0
  store i32 %v5_91d0, i32* @r4, align 4
  %v5_91d4 = trunc i32 %tmp79 to i8
  %v5_91d8 = trunc i32 %tmp76 to i8
  %v4_91dc = mul nuw nsw i32 %v1_91b0, 256
  %v5_91dc = or i32 %v4_91dc, %v3_91c4
  store i32 %v5_91dc, i32* @r5, align 4
  %tmp81 = udiv i32 %v1_91a4, 256
  %v4_91e0 = urem i32 %tmp81, 256
  %v5_91e0 = or i32 %v4_91e0, %v1_91c8
  store i32 %v5_91e0, i32* @r7, align 4
  br i1 %v2_9198, label %dec_label_pc_91e8, label %dec_label_pc_9510

dec_label_pc_91e8:                                ; preds = %dec_label_pc_9170
  %v3_91e836 = udiv i32 %v1_9180, 256
  store i32 %v3_91e836, i32* %ip.global-to-local, align 4
  store i32 %v1_919c, i32* %r0.global-to-local, align 4
  store i32 %v1_91ac, i32* %r1.global-to-local, align 4
  store i32 %v1_91b0, i32* %r2.global-to-local, align 4
  %v3_91f837 = udiv i32 %v1_91c8, 256
  store i32 %v3_91f837, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_925c = sext i8 %v5_8ff8 to i32
  %v4_929c = sext i8 %v5_91d8 to i32
  %sext15 = mul i32 %v0_9130, 16777216
  %v4_92a0 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v0_9140, 16777216
  %v4_92b8 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_91a4, 16777216
  %v4_92bc = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_913c, 16777216
  %v4_92c0 = sdiv i32 %sext18, 16777216
  %v1_92a8 = trunc i32 %v1_9174 to i8
  %v1_92c8 = trunc i32 %v4_92bc to i8
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_9214, %dec_label_pc_91e8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9220 = call i32 @function_137ec(i32 1510, i32 1)
  store i32 %v2_9220, i32* %r0.global-to-local, align 4
  store i32 %v2_8fc0, i32* %ip.global-to-local, align 4
  %v3_9228 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9228, i32* %r2.global-to-local, align 4
  %v2_922c = load i32, i32* @r6, align 4
  %v5_922c = mul i32 %v2_922c, 4
  %v6_922c = add i32 %v5_922c, %v2_8fc0
  %v7_922c = inttoptr i32 %v6_922c to i32*
  store i32 %v2_9220, i32* %v7_922c, align 4
  %v0_9230 = load i32, i32* %ip.global-to-local, align 4
  %v1_9230 = load i32, i32* %r2.global-to-local, align 4
  %v4_9230 = mul i32 %v1_9230, 4
  %v5_9230 = add i32 %v4_9230, %v0_9230
  %v6_9230 = inttoptr i32 %v5_9230 to i32*
  %v7_9230 = load i32, i32* %v6_9230, align 4
  store i32 %v7_9230, i32* %r1.global-to-local, align 4
  %v1_9234 = inttoptr i32 %v7_9230 to i8*
  %v2_9234 = load i8, i8* %v1_9234, align 1
  %tmp = urem i8 %v2_9234, 16
  %v1_9238 = zext i8 %tmp to i32
  %v1_923c = or i32 %v1_9238, 64
  store i32 %v1_923c, i32* %r3.global-to-local, align 4
  %v1_9240 = trunc i32 %v1_923c to i8
  store i8 %v1_9240, i8* %v1_9234, align 1
  %v0_9244 = load i32, i32* %r1.global-to-local, align 4
  %v1_9244 = inttoptr i32 %v0_9244 to i8*
  %v2_9244 = load i8, i8* %v1_9244, align 1
  %v3_9244 = zext i8 %v2_9244 to i32
  %v1_9248 = and i32 %v3_9244, 240
  %v1_924c = or i32 %v1_9248, 5
  store i32 %v1_924c, i32* %r2.global-to-local, align 4
  %v3_9254 = add i32 %v0_9244, 9
  %v4_9254 = inttoptr i32 %v3_9254 to i8*
  store i8 17, i8* %v4_9254, align 1
  %v0_9258 = load i32, i32* %r2.global-to-local, align 4
  %v1_9258 = trunc i32 %v0_9258 to i8
  %v2_9258 = load i32, i32* %r1.global-to-local, align 4
  %v3_9258 = inttoptr i32 %v2_9258 to i8*
  store i8 %v1_9258, i8* %v3_9258, align 1
  store i32 %v4_925c, i32* %r0.global-to-local, align 4
  %v2_9260 = load i32, i32* %r1.global-to-local, align 4
  %v3_9260 = add i32 %v2_9260, 1
  %v4_9260 = inttoptr i32 %v3_9260 to i8*
  store i8 %v5_8ff8, i8* %v4_9260, align 1
  %v2_9268 = load i32, i32* %r1.global-to-local, align 4
  %v3_9268 = add i32 %v2_9268, 8
  %v4_9268 = inttoptr i32 %v3_9268 to i8*
  store i8 %v5_9030, i8* %v4_9268, align 1
  %v3_926c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_926c, i32* %r2.global-to-local, align 4
  store i32 %v6_90c8, i32* %ip.global-to-local, align 4
  %v3_9274 = mul i32 %v3_926c, 32
  store i32 %v3_9274, i32* %r3.global-to-local, align 4
  %v1_9278 = load i32, i32* %r1.global-to-local, align 4
  %v2_9278 = add i32 %v1_9278, 12
  %v3_9278 = inttoptr i32 %v2_9278 to i32*
  store i32 %v6_90c8, i32* %v3_9278, align 4
  %v0_927c = load i32, i32* %r3.global-to-local, align 4
  %v1_927c = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_927c, -8
  %v5_927c = add i32 %v0_927c, %tmp83
  %v1_9280 = load i32, i32* @r8, align 4
  %v2_9280 = add i32 %v5_927c, %v1_9280
  store i32 %v2_9280, i32* %r3.global-to-local, align 4
  %v1_9284 = add i32 %v2_9280, 16
  %v2_9284 = inttoptr i32 %v1_9284 to i32*
  %v3_9284 = load i32, i32* %v2_9284, align 4
  %v1_9288 = load i32, i32* %r1.global-to-local, align 4
  %v2_9288 = add i32 %v1_9288, 16
  %v3_9288 = inttoptr i32 %v2_9288 to i32*
  store i32 %v3_9284, i32* %v3_9288, align 4
  %v0_9290 = load i32, i32* %r2.global-to-local, align 4
  %v1_9290 = add i32 %v0_9290, 1
  store i32 %v1_9290, i32* @r6, align 4
  %v2_9294 = load i32, i32* %r1.global-to-local, align 4
  %v3_9294 = add i32 %v2_9294, 2
  %v4_9294 = inttoptr i32 %v3_9294 to i8*
  store i8 %v5_91d4, i8* %v4_9294, align 1
  store i32 %v4_929c, i32* %ip.global-to-local, align 4
  store i32 %v4_92a0, i32* %r0.global-to-local, align 4
  %v0_92a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_92a4 = add i32 %v0_92a4, 20
  store i32 %v1_92a4, i32* %r3.global-to-local, align 4
  %v3_92a8 = add i32 %v0_92a4, 3
  %v4_92a8 = inttoptr i32 %v3_92a8 to i8*
  store i8 %v1_92a8, i8* %v4_92a8, align 1
  %v0_92ac = load i32, i32* %ip.global-to-local, align 4
  %v1_92ac = trunc i32 %v0_92ac to i8
  %v2_92ac = load i32, i32* %r1.global-to-local, align 4
  %v3_92ac = add i32 %v2_92ac, 4
  %v4_92ac = inttoptr i32 %v3_92ac to i8*
  store i8 %v1_92ac, i8* %v4_92ac, align 1
  %v0_92b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_92b0 = trunc i32 %v0_92b0 to i8
  %v2_92b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_92b0 = add i32 %v2_92b0, 5
  %v4_92b0 = inttoptr i32 %v3_92b0 to i8*
  store i8 %v1_92b0, i8* %v4_92b0, align 1
  %v0_92b4 = load i32, i32* @r4, align 4
  %v1_92b4 = trunc i32 %v0_92b4 to i8
  %v2_92b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_92b4 = add i32 %v2_92b4, 20
  %v4_92b4 = inttoptr i32 %v3_92b4 to i8*
  store i8 %v1_92b4, i8* %v4_92b4, align 1
  store i32 %v4_92b8, i32* %r2.global-to-local, align 4
  store i32 %v4_92bc, i32* %r1.global-to-local, align 4
  store i32 %v4_92c0, i32* %ip.global-to-local, align 4
  %v0_92c4 = load i32, i32* @r6, align 4
  %v1_92c4 = load i32, i32* @sl, align 4
  %v9_92c4 = icmp eq i32 %v0_92c4, %v1_92c4
  store i1 %v9_92c4, i1* %cpsr_z.global-to-local, align 1
  %v2_92c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_92c8 = add i32 %v2_92c8, 5
  %v4_92c8 = inttoptr i32 %v3_92c8 to i8*
  store i8 %v1_92c8, i8* %v4_92c8, align 1
  %v0_92cc = load i32, i32* %r2.global-to-local, align 4
  %v1_92cc = trunc i32 %v0_92cc to i8
  %v2_92cc = load i32, i32* %r3.global-to-local, align 4
  %v3_92cc = add i32 %v2_92cc, 1
  %v4_92cc = inttoptr i32 %v3_92cc to i8*
  store i8 %v1_92cc, i8* %v4_92cc, align 1
  %v0_92d0 = load i32, i32* @r5, align 4
  %v1_92d0 = trunc i32 %v0_92d0 to i8
  %v2_92d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d0 = add i32 %v2_92d0, 2
  %v4_92d0 = inttoptr i32 %v3_92d0 to i8*
  store i8 %v1_92d0, i8* %v4_92d0, align 1
  %v0_92d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_92d4 = trunc i32 %v0_92d4 to i8
  %v2_92d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d4 = add i32 %v2_92d4, 3
  %v4_92d4 = inttoptr i32 %v3_92d4 to i8*
  store i8 %v1_92d4, i8* %v4_92d4, align 1
  %v0_92d8 = load i32, i32* @r7, align 4
  %v1_92d8 = trunc i32 %v0_92d8 to i8
  %v2_92d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_92d8 = add i32 %v2_92d8, 4
  %v4_92d8 = inttoptr i32 %v3_92d8 to i8*
  store i8 %v1_92d8, i8* %v4_92d8, align 1
  %v0_92dc = load i32, i32* @r6, align 4
  store i32 %v0_92dc, i32* %stack_var_-40, align 4
  %v5_92e0 = icmp slt i32 %v0_92c4, %v1_92c4
  br i1 %v5_92e0, label %dec_label_pc_9214, label %dec_label_pc_92e4

dec_label_pc_92e4:                                ; preds = %dec_label_pc_9544, %dec_label_pc_9214, %.thread
  %v0_92e4 = load i32, i32* @sl, align 4
  %v2_92e4 = icmp eq i32 %v0_92e4, 0
  store i1 %v2_92e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9490 = icmp eq i32 %v3_9134, 65535
  %v2_935c = icmp eq i32 %v1_90b4, 0
  %v2_9324 = icmp eq i32 %v6_90c8, -1
  %v7_9324 = icmp eq i32 %v6_90c8, -1
  br label %dec_label_pc_92ec.outer

dec_label_pc_92ec.outer:                          ; preds = %dec_label_pc_940c, %dec_label_pc_92e4
  %v1_92ec.ph.in = phi i32 [ %v1_9400, %dec_label_pc_940c ], [ %v0_92e4, %dec_label_pc_92e4 ]
  %v0_92ec.ph = phi i1 [ %v2_940c, %dec_label_pc_940c ], [ %v2_92e4, %dec_label_pc_92e4 ]
  %v1_92ec.ph = icmp slt i32 %v1_92ec.ph.in, 0
  %v4_92ec = or i1 %v1_92ec.ph, %v0_92ec.ph
  br label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92ec.outer, %dec_label_pc_92ec
  br i1 %v4_92ec, label %dec_label_pc_92ec, label %dec_label_pc_92f0

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92ec
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_92fc

dec_label_pc_92fc:                                ; preds = %dec_label_pc_9364, %dec_label_pc_92f0
  %v1_9310 = phi i32 [ %v1_93fc, %dec_label_pc_9364 ], [ 0, %dec_label_pc_92f0 ]
  %v5_9300 = mul i32 %v1_9310, 24
  %v1_9304 = load i32, i32* @r8, align 4
  %v2_9304 = add i32 %v1_9304, %v5_9300
  store i32 %v2_9304, i32* %r3.global-to-local, align 4
  store i32 %v2_8fc0, i32* %ip.global-to-local, align 4
  %v1_930c = add i32 %v2_9304, 20
  %v2_930c = inttoptr i32 %v1_930c to i8*
  %v3_930c = load i8, i8* %v2_930c, align 1
  %v4_930c = zext i8 %v3_930c to i32
  store i32 %v4_930c, i32* %r2.global-to-local, align 4
  %v4_9310 = mul i32 %v1_9310, 4
  %v5_9310 = add i32 %v4_9310, %v2_8fc0
  %v6_9310 = inttoptr i32 %v5_9310 to i32*
  %v7_9310 = load i32, i32* %v6_9310, align 4
  store i32 %v7_9310, i32* @r5, align 4
  %v7_9314 = icmp eq i8 %v3_930c, 31
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  %v1_9318 = add i32 %v7_9310, 20
  store i32 %v1_9318, i32* @r6, align 4
  %tmp84 = icmp ult i8 %v3_930c, 32
  br i1 %tmp84, label %dec_label_pc_9418, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_92fc
  store i32 %v6_90c8, i32* %r0.global-to-local, align 4
  store i1 %v7_9324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9324, label %dec_label_pc_9480, label %dec_label_pc_932c

dec_label_pc_932c:                                ; preds = %dec_label_pc_9418, %dec_label_pc_9320
  store i32 %v3_9134, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9490, label %dec_label_pc_949c, label %dec_label_pc_9340

dec_label_pc_9340:                                ; preds = %dec_label_pc_9480.dec_label_pc_9340_crit_edge, %dec_label_pc_932c
  %v1_9344 = phi i32 [ %v1_9344.pre, %dec_label_pc_9480.dec_label_pc_9340_crit_edge ], [ 65535, %dec_label_pc_932c ]
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v9_9344 = icmp eq i32 %v3_9150, %v1_9344
  store i1 %v9_9344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9344, label %dec_label_pc_94b8, label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %dec_label_pc_949c.dec_label_pc_934c_crit_edge, %dec_label_pc_9340
  %v1_9350 = phi i32 [ %v1_9350.pre, %dec_label_pc_949c.dec_label_pc_934c_crit_edge ], [ %v1_9344, %dec_label_pc_9340 ]
  store i32 %v3_9154, i32* %r3.global-to-local, align 4
  %v9_9350 = icmp eq i32 %v3_9154, %v1_9350
  store i1 %v9_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9350, label %dec_label_pc_94d4, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_934c
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  store i1 %v2_935c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_935c, label %dec_label_pc_9364, label %dec_label_pc_94f0

dec_label_pc_9364:                                ; preds = %dec_label_pc_9358, %dec_label_pc_94d4, %dec_label_pc_94f0
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9368 = load i32, i32* @r7, align 4
  %v1_9368 = trunc i32 %v0_9368 to i8
  %v2_9368 = load i32, i32* @r5, align 4
  %v3_9368 = add i32 %v2_9368, 10
  %v4_9368 = inttoptr i32 %v3_9368 to i8*
  store i8 %v1_9368, i8* %v4_9368, align 1
  %v0_936c = load i32, i32* @r7, align 4
  %v1_936c = trunc i32 %v0_936c to i8
  %v2_936c = load i32, i32* @r5, align 4
  %v3_936c = add i32 %v2_936c, 11
  %v4_936c = inttoptr i32 %v3_936c to i8*
  store i8 %v1_936c, i8* %v4_936c, align 1
  %v0_9370 = load i32, i32* @r5, align 4
  store i32 %v0_9370, i32* @r0, align 4
  %v2_9374 = call i32 @function_d0b8(i32 %v0_9370, i32 20)
  %v3_9374 = trunc i32 %v2_9374 to i8
  store i32 %v2_9374, i32* %r0.global-to-local, align 4
  %v4_9378 = sdiv i32 %v2_9374, 256
  store i32 %v4_9378, i32* %r3.global-to-local, align 4
  %v1_937c = trunc i32 %v4_9378 to i8
  %v2_937c = load i32, i32* @r5, align 4
  %v3_937c = add i32 %v2_937c, 11
  %v4_937c = inttoptr i32 %v3_937c to i8*
  store i8 %v1_937c, i8* %v4_937c, align 1
  %v3_9380 = load i32, i32* @r5, align 4
  %v4_9380 = add i32 %v3_9380, 10
  %v5_9380 = inttoptr i32 %v4_9380 to i8*
  store i8 %v3_9374, i8* %v5_9380, align 1
  %v0_9384 = load i32, i32* @r7, align 4
  %v1_9384 = trunc i32 %v0_9384 to i8
  %v2_9384 = load i32, i32* @r6, align 4
  %v3_9384 = add i32 %v2_9384, 6
  %v4_9384 = inttoptr i32 %v3_9384 to i8*
  store i8 %v1_9384, i8* %v4_9384, align 1
  %v0_9388 = load i32, i32* @r7, align 4
  %v1_9388 = trunc i32 %v0_9388 to i8
  %v2_9388 = load i32, i32* @r6, align 4
  %v3_9388 = add i32 %v2_9388, 7
  %v4_9388 = inttoptr i32 %v3_9388 to i8*
  store i8 %v1_9388, i8* %v4_9388, align 1
  %v0_938c = load i32, i32* @r5, align 4
  %v1_938c = add i32 %v0_938c, 24
  %v2_938c = inttoptr i32 %v1_938c to i8*
  %v3_938c = load i8, i8* %v2_938c, align 1
  %v4_938c = zext i8 %v3_938c to i32
  store i32 %v4_938c, i32* %r3.global-to-local, align 4
  %v1_9390 = add i32 %v0_938c, 25
  %v2_9390 = inttoptr i32 %v1_9390 to i8*
  %v3_9390 = load i8, i8* %v2_9390, align 1
  %v4_9390 = zext i8 %v3_9390 to i32
  %v0_9394 = load i32, i32* @r6, align 4
  store i32 %v0_9394, i32* @r1, align 4
  %v4_9398 = mul nuw nsw i32 %v4_9390, 256
  %v5_9398 = or i32 %v4_9398, %v4_938c
  store i32 %v5_9398, i32* %r2.global-to-local, align 4
  store i32 %v0_938c, i32* %r0.global-to-local, align 4
  %v0_93a0 = load i32, i32* @sb, align 4
  store i32 %v0_93a0, i32* %r3.global-to-local, align 4
  %v4_93a4 = call i32 @function_d114(i32 %v0_938c, i32 %v0_9394, i32 %v5_9398, i32 %v0_93a0)
  %v5_93a4 = trunc i32 %v4_93a4 to i8
  store i32 %v4_93a4, i32* %r0.global-to-local, align 4
  %v4_93a838 = udiv i32 %v4_93a4, 256
  %v1_93ac = trunc i32 %v4_93a838 to i8
  %v2_93ac = load i32, i32* @r6, align 4
  %v3_93ac = add i32 %v2_93ac, 7
  %v4_93ac = inttoptr i32 %v3_93ac to i8*
  store i8 %v1_93ac, i8* %v4_93ac, align 1
  %v3_93b0 = load i32, i32* @r6, align 4
  %v4_93b0 = add i32 %v3_93b0, 6
  %v5_93b0 = inttoptr i32 %v4_93b0 to i8*
  store i8 %v5_93a4, i8* %v5_93b0, align 1
  %v3_93b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_93b4, i32* %r3.global-to-local, align 4
  %v0_93b8 = load i32, i32* @r5, align 4
  %v1_93b8 = add i32 %v0_93b8, 20
  %v2_93b8 = inttoptr i32 %v1_93b8 to i32*
  %v3_93b8 = load i32, i32* %v2_93b8, align 4
  %v3_93c0 = udiv i32 %v3_93b8, 65536
  store i32 %v3_93c0, i32* %r2.global-to-local, align 4
  %v5_93c4 = mul i32 %v3_93b4, 24
  %v1_93c8 = load i32, i32* @r8, align 4
  %v2_93c8 = add i32 %v1_93c8, %v5_93c4
  store i32 %v2_93c8, i32* %ip.global-to-local, align 4
  %v3_93cc35 = udiv i32 %v3_93b8, 16777216
  %v1_93d0 = trunc i32 %v3_93cc35 to i8
  %v3_93d0 = add i32 %v2_93c8, 3
  %v4_93d0 = inttoptr i32 %v3_93d0 to i8*
  store i8 %v1_93d0, i8* %v4_93d0, align 1
  %v0_93d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_93d4 = trunc i32 %v0_93d4 to i8
  %v2_93d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_93d4 = add i32 %v2_93d4, 2
  %v4_93d4 = inttoptr i32 %v3_93d4 to i8*
  store i8 %v1_93d4, i8* %v4_93d4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_93dc = load i32, i32* @r5, align 4
  store i32 %v0_93dc, i32* %r1.global-to-local, align 4
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v0_93e4 = load i32, i32* @fp, align 4
  store i32 %v0_93e4, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_93ec = load i32, i32* %ip.global-to-local, align 4
  %v6_93f4 = inttoptr i32 %v0_93dc to i32*
  %v7_93f4 = call i32 @function_1349c(i32 %v3_90dc, i32* %v6_93f4, i32 %v0_93e4, i32 16384, i32 %v0_93ec, i32 16)
  %v3_93f8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_93f8, i32* %r3.global-to-local, align 4
  %v1_93fc = add i32 %v3_93f8, 1
  store i32 %v1_93fc, i32* %r0.global-to-local, align 4
  %v1_9400 = load i32, i32* @sl, align 4
  %v9_9400 = icmp eq i32 %v1_93fc, %v1_9400
  store i1 %v9_9400, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_93fc, i32* %stack_var_-40, align 4
  %v5_9408 = icmp slt i32 %v1_93fc, %v1_9400
  br i1 %v5_9408, label %dec_label_pc_92fc, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_9364
  %v2_940c = icmp eq i32 %v1_9400, 0
  store i1 %v2_940c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_92ec.outer

dec_label_pc_9418:                                ; preds = %dec_label_pc_92fc
  %v1_9418 = add i32 %v2_9304, 16
  %v2_9418 = inttoptr i32 %v1_9418 to i32*
  %v3_9418 = load i32, i32* %v2_9418, align 4
  %v0_941c = call i32 @function_e82c()
  store i32 %v0_941c, i32* %r0.global-to-local, align 4
  %v3_9420 = load i32, i32* %stack_var_-40, align 4
  %v5_9428 = mul i32 %v3_9420, 24
  %v1_9430 = load i32, i32* @r8, align 4
  %v2_9430 = add i32 %v1_9430, %v5_9428
  store i32 %v2_9430, i32* %r1.global-to-local, align 4
  %v1_9434 = and i32 %v3_9418, 65280
  store i32 %v1_9434, i32* %r3.global-to-local, align 4
  %v1_942c = udiv i32 %v3_9418, 256
  %v3_9438 = and i32 %v1_942c, 65280
  store i32 %v3_9438, i32* %r2.global-to-local, align 4
  %v3_943c = mul i32 %v3_9418, 16777216
  store i32 %v3_943c, i32* %ip.global-to-local, align 4
  %v1_9440 = add i32 %v2_9430, 20
  %v2_9440 = inttoptr i32 %v1_9440 to i8*
  %v3_9440 = load i8, i8* %v2_9440, align 1
  %v4_9440 = zext i8 %v3_9440 to i32
  %v4_9444 = mul nuw nsw i32 %v1_9434, 256
  %v5_9444 = or i32 %v4_9444, %v3_943c
  store i32 %v5_9444, i32* %ip.global-to-local, align 4
  %v2_944c = call i32 @llvm.bswap.i32(i32 %v3_9418)
  %v7_9450 = lshr i32 %v0_941c, %v4_9440
  %v8_9450 = add i32 %v7_9450, %v2_944c
  store i32 %v8_9450, i32* %r2.global-to-local, align 4
  %v3_945c = mul i32 %v8_9450, 16777216
  %v1_9454 = mul i32 %v8_9450, 256
  %v4_9460 = and i32 %v1_9454, 16711680
  %v5_9460 = or i32 %v4_9460, %v3_945c
  store i32 %v5_9460, i32* %r1.global-to-local, align 4
  store i32 %v6_90c8, i32* %r0.global-to-local, align 4
  %v2_9470 = call i32 @llvm.bswap.i32(i32 %v8_9450)
  store i32 %v2_9470, i32* %r3.global-to-local, align 4
  store i1 %v7_9324, i1* %cpsr_z.global-to-local, align 1
  %v1_9478 = load i32, i32* @r5, align 4
  %v2_9478 = add i32 %v1_9478, 16
  %v3_9478 = inttoptr i32 %v2_9478 to i32*
  store i32 %v2_9470, i32* %v3_9478, align 4
  br i1 %v2_9324, label %dec_label_pc_9480, label %dec_label_pc_932c

dec_label_pc_9480:                                ; preds = %dec_label_pc_9418, %dec_label_pc_9320
  %v0_9480 = call i32 @function_e82c()
  store i32 %v0_9480, i32* %r0.global-to-local, align 4
  store i32 %v3_9134, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9490, i1* %cpsr_z.global-to-local, align 1
  %v1_9494 = load i32, i32* @r5, align 4
  %v2_9494 = add i32 %v1_9494, 12
  %v3_9494 = inttoptr i32 %v2_9494 to i32*
  store i32 %v0_9480, i32* %v3_9494, align 4
  br i1 %v3_9490, label %dec_label_pc_949c, label %dec_label_pc_9480.dec_label_pc_9340_crit_edge

dec_label_pc_9480.dec_label_pc_9340_crit_edge:    ; preds = %dec_label_pc_9480
  %v1_9344.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9340

dec_label_pc_949c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_932c
  %v0_949c = call i32 @function_e82c()
  %v1_949c = trunc i32 %v0_949c to i8
  store i32 %v0_949c, i32* %r0.global-to-local, align 4
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v4_94a4 = sdiv i32 %v0_949c, 256
  store i32 %v4_94a4, i32* %r3.global-to-local, align 4
  %v1_94a8 = load i32, i32* @r4, align 4
  %v9_94a8 = icmp eq i32 %v3_9150, %v1_94a8
  store i1 %v9_94a8, i1* %cpsr_z.global-to-local, align 1
  %v1_94ac = trunc i32 %v4_94a4 to i8
  %v2_94ac = load i32, i32* @r5, align 4
  %v3_94ac = add i32 %v2_94ac, 5
  %v4_94ac = inttoptr i32 %v3_94ac to i8*
  store i8 %v1_94ac, i8* %v4_94ac, align 1
  %v3_94b0 = load i32, i32* @r5, align 4
  %v4_94b0 = add i32 %v3_94b0, 4
  %v5_94b0 = inttoptr i32 %v4_94b0 to i8*
  store i8 %v1_949c, i8* %v5_94b0, align 1
  %v0_94b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_94b4, label %dec_label_pc_94b8, label %dec_label_pc_949c.dec_label_pc_934c_crit_edge

dec_label_pc_949c.dec_label_pc_934c_crit_edge:    ; preds = %dec_label_pc_949c
  %v1_9350.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_934c

dec_label_pc_94b8:                                ; preds = %dec_label_pc_949c, %dec_label_pc_9340
  %v0_94b8 = call i32 @function_e82c()
  %v1_94b8 = trunc i32 %v0_94b8 to i8
  store i32 %v0_94b8, i32* %r0.global-to-local, align 4
  %v4_94bc = sdiv i32 %v0_94b8, 256
  store i32 %v4_94bc, i32* %r3.global-to-local, align 4
  %v3_94c0 = load i32, i32* @r5, align 4
  %v4_94c0 = add i32 %v3_94c0, 20
  %v5_94c0 = inttoptr i32 %v4_94c0 to i8*
  store i8 %v1_94b8, i8* %v5_94c0, align 1
  %v0_94c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_94c4 = trunc i32 %v0_94c4 to i8
  %v2_94c4 = load i32, i32* @r6, align 4
  %v3_94c4 = add i32 %v2_94c4, 1
  %v4_94c4 = inttoptr i32 %v3_94c4 to i8*
  store i8 %v1_94c4, i8* %v4_94c4, align 1
  store i32 %v3_9154, i32* %r3.global-to-local, align 4
  %v1_94cc = load i32, i32* @r4, align 4
  %v9_94cc = icmp eq i32 %v3_9154, %v1_94cc
  store i1 %v9_94cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_94cc, label %dec_label_pc_94d4, label %dec_label_pc_9358

dec_label_pc_94d4:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_934c
  %v0_94d4 = call i32 @function_e82c()
  %v1_94d4 = trunc i32 %v0_94d4 to i8
  store i32 %v0_94d4, i32* %r0.global-to-local, align 4
  store i32 %v1_90b4, i32* %ip.global-to-local, align 4
  %v4_94dc = sdiv i32 %v0_94d4, 256
  store i32 %v4_94dc, i32* %r3.global-to-local, align 4
  store i1 %v2_935c, i1* %cpsr_z.global-to-local, align 1
  %v1_94e4 = trunc i32 %v4_94dc to i8
  %v2_94e4 = load i32, i32* @r6, align 4
  %v3_94e4 = add i32 %v2_94e4, 3
  %v4_94e4 = inttoptr i32 %v3_94e4 to i8*
  store i8 %v1_94e4, i8* %v4_94e4, align 1
  %v3_94e8 = load i32, i32* @r6, align 4
  %v4_94e8 = add i32 %v3_94e8, 2
  %v5_94e8 = inttoptr i32 %v4_94e8 to i8*
  store i8 %v1_94d4, i8* %v5_94e8, align 1
  %v0_94ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_94ec, label %dec_label_pc_9364, label %dec_label_pc_94f0

dec_label_pc_94f0:                                ; preds = %dec_label_pc_9358, %dec_label_pc_94d4
  %v0_94f0 = load i32, i32* @r5, align 4
  %v1_94f0 = add i32 %v0_94f0, 28
  store i32 %v1_94f0, i32* %r0.global-to-local, align 4
  store i32 %v0_912c, i32* @r1, align 4
  %v1_94f8 = inttoptr i32 %v1_94f0 to i8*
  %v2_94f8 = call i32 @function_e9ac(i8* %v1_94f8)
  store i32 %v2_94f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9364

dec_label_pc_9500:                                ; preds = %dec_label_pc_90ec
  store i32 %v3_90dc, i32* %r0.global-to-local, align 4
  %v1_9504 = call i32 @function_12c1c(i32 %v3_90dc)
  store i32 %v1_9504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_8fa0, %dec_label_pc_9500
  %v29_950c = phi i32 [ %v3_90dc, %dec_label_pc_8fa0 ], [ %v1_9504, %dec_label_pc_9500 ]
  store i32 %v18_8fa0, i32* %sb.global-to-local, align 4
  store i32 %v24_8fa0, i32* %fp.global-to-local, align 4
  ret i32 %v29_950c

dec_label_pc_9510:                                ; preds = %dec_label_pc_9170
  %v3_9514 = sext i8 %v5_91d4 to i32
  %v7_9514 = sext i8 %v5_91d8 to i32
  %v3_9518 = sdiv i32 %v3_9514, 256
  store i32 %v3_9518, i32* %r0.global-to-local, align 4
  %v3_951c = sdiv i32 %v7_9514, 256
  store i32 %v3_951c, i32* %r1.global-to-local, align 4
  store i32 %v1_91ac, i32* %r2.global-to-local, align 4
  store i32 %v1_91b0, i32* %r3.global-to-local, align 4
  %v3_952834 = udiv i32 %v1_91c8, 256
  store i32 %v3_952834, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  %v4_9594 = sext i8 %v5_9030 to i32
  %sext11 = mul i32 %v1_91a4, 16777216
  %v4_95ec = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v0_9140, 16777216
  %v4_95f0 = sdiv i32 %sext12, 16777216
  %sext13 = mul i32 %v0_913c, 16777216
  %v4_960c = sdiv i32 %sext13, 16777216
  %v1_95f8 = trunc i32 %v3_951c to i8
  %v1_9614 = trunc i32 %v4_960c to i8
  br label %dec_label_pc_9544

dec_label_pc_9544:                                ; preds = %dec_label_pc_9544, %dec_label_pc_9510
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9550 = call i32 @function_137ec(i32 1510, i32 1)
  store i32 %v2_9550, i32* %r0.global-to-local, align 4
  store i32 %v2_8fc0, i32* %r1.global-to-local, align 4
  %v3_9558 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9558, i32* %r2.global-to-local, align 4
  %v2_955c = load i32, i32* @r6, align 4
  %v5_955c = mul i32 %v2_955c, 4
  %v6_955c = add i32 %v5_955c, %v2_8fc0
  %v7_955c = inttoptr i32 %v6_955c to i32*
  store i32 %v2_9550, i32* %v7_955c, align 4
  %v0_9560 = load i32, i32* %r1.global-to-local, align 4
  %v1_9560 = load i32, i32* %r2.global-to-local, align 4
  %v4_9560 = mul i32 %v1_9560, 4
  %v5_9560 = add i32 %v4_9560, %v0_9560
  %v6_9560 = inttoptr i32 %v5_9560 to i32*
  %v7_9560 = load i32, i32* %v6_9560, align 4
  store i32 %v7_9560, i32* %r1.global-to-local, align 4
  %v1_9564 = inttoptr i32 %v7_9560 to i8*
  %v2_9564 = load i8, i8* %v1_9564, align 1
  %tmp85 = urem i8 %v2_9564, 16
  %v1_9568 = zext i8 %tmp85 to i32
  %v1_956c = or i32 %v1_9568, 64
  store i32 %v1_956c, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_956c to i8
  store i8 %v1_9570, i8* %v1_9564, align 1
  %v0_9574 = load i32, i32* %r1.global-to-local, align 4
  %v1_9574 = inttoptr i32 %v0_9574 to i8*
  %v2_9574 = load i8, i8* %v1_9574, align 1
  %v3_9574 = zext i8 %v2_9574 to i32
  %v1_9578 = and i32 %v3_9574, 240
  %v1_957c = or i32 %v1_9578, 5
  store i32 %v1_957c, i32* %r2.global-to-local, align 4
  %v3_9584 = add i32 %v0_9574, 9
  %v4_9584 = inttoptr i32 %v3_9584 to i8*
  store i8 17, i8* %v4_9584, align 1
  %v0_9588 = load i32, i32* %r2.global-to-local, align 4
  %v1_9588 = trunc i32 %v0_9588 to i8
  %v2_9588 = load i32, i32* %r1.global-to-local, align 4
  %v3_9588 = inttoptr i32 %v2_9588 to i8*
  store i8 %v1_9588, i8* %v3_9588, align 1
  %v2_9590 = load i32, i32* %r1.global-to-local, align 4
  %v3_9590 = add i32 %v2_9590, 1
  %v4_9590 = inttoptr i32 %v3_9590 to i8*
  store i8 %v5_8ff8, i8* %v4_9590, align 1
  store i32 %v4_9594, i32* %r0.global-to-local, align 4
  %v2_9598 = load i32, i32* %r1.global-to-local, align 4
  %v3_9598 = add i32 %v2_9598, 8
  %v4_9598 = inttoptr i32 %v3_9598 to i8*
  store i8 %v5_9030, i8* %v4_9598, align 1
  %v3_959c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_959c, i32* %r2.global-to-local, align 4
  store i32 %v6_90c8, i32* %ip.global-to-local, align 4
  %v3_95a4 = mul i32 %v3_959c, 32
  store i32 %v3_95a4, i32* %r3.global-to-local, align 4
  %v1_95a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_95a8 = add i32 %v1_95a8, 12
  %v3_95a8 = inttoptr i32 %v2_95a8 to i32*
  store i32 %v6_90c8, i32* %v3_95a8, align 4
  %v0_95ac = load i32, i32* %r3.global-to-local, align 4
  %v1_95ac = load i32, i32* %r2.global-to-local, align 4
  %tmp86 = mul i32 %v1_95ac, -8
  %v5_95ac = add i32 %v0_95ac, %tmp86
  %v1_95b0 = load i32, i32* @r8, align 4
  %v2_95b0 = add i32 %v5_95ac, %v1_95b0
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v1_95b4 = add i32 %v2_95b0, 16
  %v2_95b4 = inttoptr i32 %v1_95b4 to i32*
  %v3_95b4 = load i32, i32* %v2_95b4, align 4
  store i32 %v3_95b4, i32* %ip.global-to-local, align 4
  %v1_95b8 = add i32 %v1_95ac, 1
  store i32 %v1_95b8, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_95c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_95c4 = add i32 %v2_95c4, 6
  %v4_95c4 = inttoptr i32 %v3_95c4 to i8*
  store i8 64, i8* %v4_95c4, align 1
  %v0_95c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_95c8 = trunc i32 %v0_95c8 to i8
  %v2_95c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_95c8 = add i32 %v2_95c8, 7
  %v4_95c8 = inttoptr i32 %v3_95c8 to i8*
  store i8 %v1_95c8, i8* %v4_95c8, align 1
  %v0_95cc = load i32, i32* %ip.global-to-local, align 4
  %v1_95cc = load i32, i32* %r1.global-to-local, align 4
  %v2_95cc = add i32 %v1_95cc, 16
  %v3_95cc = inttoptr i32 %v2_95cc to i32*
  store i32 %v0_95cc, i32* %v3_95cc, align 4
  store i32 %v3_9518, i32* %r3.global-to-local, align 4
  store i32 %v7_9514, i32* %ip.global-to-local, align 4
  %v2_95dc = load i32, i32* %r1.global-to-local, align 4
  %v3_95dc = add i32 %v2_95dc, 2
  %v4_95dc = inttoptr i32 %v3_95dc to i8*
  store i8 %v5_91d4, i8* %v4_95dc, align 1
  %v0_95e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95e0 = trunc i32 %v0_95e0 to i8
  %v2_95e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_95e0 = add i32 %v2_95e0, 3
  %v4_95e0 = inttoptr i32 %v3_95e0 to i8*
  store i8 %v1_95e0, i8* %v4_95e0, align 1
  %v0_95e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_95e4 = trunc i32 %v0_95e4 to i8
  %v2_95e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_95e4 = add i32 %v2_95e4, 4
  %v4_95e4 = inttoptr i32 %v3_95e4 to i8*
  store i8 %v1_95e4, i8* %v4_95e4, align 1
  store i32 %v3_951c, i32* %r2.global-to-local, align 4
  store i32 %v4_95ec, i32* %r3.global-to-local, align 4
  store i32 %v4_95f0, i32* %ip.global-to-local, align 4
  %v0_95f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_95f4 = add i32 %v0_95f4, 20
  store i32 %v1_95f4, i32* %r0.global-to-local, align 4
  %v3_95f8 = add i32 %v0_95f4, 5
  %v4_95f8 = inttoptr i32 %v3_95f8 to i8*
  store i8 %v1_95f8, i8* %v4_95f8, align 1
  %v0_95fc = load i32, i32* @r4, align 4
  %v1_95fc = trunc i32 %v0_95fc to i8
  %v2_95fc = load i32, i32* %r1.global-to-local, align 4
  %v3_95fc = add i32 %v2_95fc, 20
  %v4_95fc = inttoptr i32 %v3_95fc to i8*
  store i8 %v1_95fc, i8* %v4_95fc, align 1
  %v0_9600 = load i32, i32* %r3.global-to-local, align 4
  %v1_9600 = trunc i32 %v0_9600 to i8
  %v2_9600 = load i32, i32* %r0.global-to-local, align 4
  %v3_9600 = add i32 %v2_9600, 5
  %v4_9600 = inttoptr i32 %v3_9600 to i8*
  store i8 %v1_9600, i8* %v4_9600, align 1
  %v0_9604 = load i32, i32* %ip.global-to-local, align 4
  %v1_9604 = trunc i32 %v0_9604 to i8
  %v2_9604 = load i32, i32* %r0.global-to-local, align 4
  %v3_9604 = add i32 %v2_9604, 1
  %v4_9604 = inttoptr i32 %v3_9604 to i8*
  store i8 %v1_9604, i8* %v4_9604, align 1
  %v0_9608 = load i32, i32* @r5, align 4
  %v1_9608 = trunc i32 %v0_9608 to i8
  %v2_9608 = load i32, i32* %r0.global-to-local, align 4
  %v3_9608 = add i32 %v2_9608, 2
  %v4_9608 = inttoptr i32 %v3_9608 to i8*
  store i8 %v1_9608, i8* %v4_9608, align 1
  store i32 %v4_960c, i32* %r1.global-to-local, align 4
  %v0_9610 = load i32, i32* @r6, align 4
  %v1_9610 = load i32, i32* @sl, align 4
  %v9_9610 = icmp eq i32 %v0_9610, %v1_9610
  store i1 %v9_9610, i1* %cpsr_z.global-to-local, align 1
  %v2_9614 = load i32, i32* %r0.global-to-local, align 4
  %v3_9614 = add i32 %v2_9614, 3
  %v4_9614 = inttoptr i32 %v3_9614 to i8*
  store i8 %v1_9614, i8* %v4_9614, align 1
  %v0_9618 = load i32, i32* @r7, align 4
  %v1_9618 = trunc i32 %v0_9618 to i8
  %v2_9618 = load i32, i32* %r0.global-to-local, align 4
  %v3_9618 = add i32 %v2_9618, 4
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 %v1_9618, i8* %v4_9618, align 1
  %v0_961c = load i32, i32* @r6, align 4
  store i32 %v0_961c, i32* %stack_var_-40, align 4
  %v5_9620 = icmp slt i32 %v0_9610, %v1_9610
  br i1 %v5_9620, label %dec_label_pc_9544, label %dec_label_pc_92e4

; uselistorder directives
  uselistorder i32 %v1_95ac, { 1, 0 }
  uselistorder i32 %v3_951c, { 2, 1, 0 }
  uselistorder i32 %v3_9518, { 1, 0 }
  uselistorder i32 %v7_9514, { 1, 0 }
  uselistorder i32 %v4_94dc, { 1, 0 }
  uselistorder i32 %v0_94d4, { 0, 2, 1 }
  uselistorder i32 %v0_94b8, { 0, 2, 1 }
  uselistorder i32 %v4_94a4, { 1, 0 }
  uselistorder i32 %v0_949c, { 0, 2, 1 }
  uselistorder i32 %v2_9470, { 1, 0 }
  uselistorder i32 %v8_9450, { 2, 0, 1, 3 }
  uselistorder i32 %v3_943c, { 1, 0 }
  uselistorder i32 %v3_9418, { 1, 3, 2, 0 }
  uselistorder i1 %v2_940c, { 1, 0 }
  uselistorder i32 %v1_9400, { 1, 2, 3, 0 }
  uselistorder i32 %v1_93fc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_93a4, { 0, 2, 1 }
  uselistorder i32 %v0_938c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_9378, { 1, 0 }
  uselistorder i32 %v2_9374, { 0, 2, 1 }
  uselistorder i1 %v7_9324, { 2, 1, 0 }
  uselistorder i1 %v3_9490, { 1, 0, 2, 3 }
  uselistorder i8 %v5_91d4, { 0, 2, 1 }
  uselistorder i32 %v3_91c0, { 1, 0 }
  uselistorder i32 %v1_91b0, { 2, 3, 0, 1 }
  uselistorder i32 %v1_91ac, { 1, 2, 0 }
  uselistorder i32 %v1_91a4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_919c, { 1, 0 }
  uselistorder i32 %v1_9174, { 2, 1, 0, 3 }
  uselistorder i32 %v3_9154, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v3_9134, { 2, 1, 4, 3, 0 }
  uselistorder i32 %v0_9130, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_912c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v3_9120, { 3, 1, 2, 0 }
  uselistorder i1 %v7_910c, { 1, 0 }
  uselistorder i1 %v7_90e0, { 1, 0 }
  uselistorder i32 %v3_90dc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_90c8, { 2, 1, 7, 5, 0, 6, 4, 3 }
  uselistorder i32 %v1_90b4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_9040, { 1, 0 }
  uselistorder i8 %v5_9030, { 1, 0, 2 }
  uselistorder i32 %v5_9014, { 1, 0 }
  uselistorder i8 %v5_8ff8, { 0, 2, 1 }
  uselistorder i32 %v6_8fd8, { 1, 0 }
  uselistorder i32 %v2_8fc0, { 0, 3, 1, 5, 2, 4 }
  uselistorder i32 %v1_8fa4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 14, 13 }
  uselistorder i32* %r3.global-to-local, { 43, 44, 45, 46, 47, 48, 49, 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r2.global-to-local, { 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 37, 38, 50, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 40, 41, 42, 43, 44, 45, 46, 48, 47, 1, 3, 2, 5, 4, 6, 7, 8, 10, 9, 12, 11, 13, 15, 14, 21, 16, 17, 18, 19, 20, 26, 22, 23, 24, 25, 39, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %ip.global-to-local, { 24, 25, 26, 27, 28, 29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i1* %cpsr_z.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_9508, { 1, 0 }
  uselistorder label %dec_label_pc_94f0, { 1, 0 }
  uselistorder label %dec_label_pc_9364, { 2, 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
}

define i32 @function_962c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_962c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_962c = load i32, i32* @r4, align 4
  %v15_962c = load i32, i32* @r8, align 4
  %v21_962c = load i32, i32* @sl, align 4
  %v1_9630 = urem i32 %arg1, 256
  store i32 %v1_9630, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_9630, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9648 = urem i32 %arg3, 256
  store i32 %v1_9648, i32* @r4, align 4
  %v2_964c = call i32 @function_137ec(i32 %v1_9630, i32 4)
  %v0_9650 = load i32, i32* @r5, align 4
  store i32 %v0_9650, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9660 = load i32, i32* @r4, align 4
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  %v5_9664 = inttoptr i32 %v0_9650 to i32*
  %v6_9664 = call i32 @function_85e0(i32 %v0_9660, i32* %v5_9664, i32 2, i32 0)
  %v1_9670 = urem i32 %v6_9664, 256
  store i32 %v1_9670, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* @r5, align 4
  store i32 %v0_967c, i32* %r1.global-to-local, align 4
  %v0_9680 = load i32, i32* @r4, align 4
  store i32 %v0_9680, i32* %r0.global-to-local, align 4
  %v5_9684 = trunc i32 %v6_9664 to i8
  %v6_9688 = inttoptr i32 %v0_967c to i32*
  %v7_9688 = call i32 @function_85e0(i32 %v0_9680, i32* %v6_9688, i32 3, i32 65535)
  %v0_968c = load i32, i32* @r5, align 4
  store i32 %v0_968c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9688, i32* @r7, align 4
  %v0_969c = load i32, i32* @r4, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v4_96a0 = inttoptr i32 %v0_968c to i32*
  %v5_96a0 = call i32 @function_85e0(i32 %v0_969c, i32* %v4_96a0, i32 4, i32 64)
  %v1_96a8 = urem i32 %v5_96a0, 256
  store i32 %v1_96a8, i32* %ip.global-to-local, align 4
  %v0_96ac = load i32, i32* @r5, align 4
  store i32 %v0_96ac, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96b8 = load i32, i32* @r4, align 4
  store i32 %v0_96b8, i32* %r0.global-to-local, align 4
  %v5_96bc = trunc i32 %v5_96a0 to i8
  %v6_96c0 = inttoptr i32 %v0_96ac to i32*
  %v7_96c0 = call i32 @function_85e0(i32 %v0_96b8, i32* %v6_96c0, i32 5, i32 1)
  %v1_96cc = urem i32 %v7_96c0, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_96d8 = load i32, i32* @r5, align 4
  store i32 %v0_96d8, i32* %r1.global-to-local, align 4
  %v0_96dc = load i32, i32* @r4, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e4 = inttoptr i32 %v0_96d8 to i32*
  %v6_96e4 = call i32 @function_85e0(i32 %v0_96dc, i32* %v5_96e4, i32 6, i32 65535)
  %v0_96ec = load i32, i32* @r5, align 4
  store i32 %v0_96ec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_96e4, i32* @sl, align 4
  %v0_96fc = load i32, i32* @r4, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v4_9700 = inttoptr i32 %v0_96ec to i32*
  %v5_9700 = call i32 @function_85e0(i32 %v0_96fc, i32* %v4_9700, i32 7, i32 65535)
  %v0_9704 = load i32, i32* @r5, align 4
  store i32 %v0_9704, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9700, i32* @r8, align 4
  %v0_9714 = load i32, i32* @r4, align 4
  store i32 %v0_9714, i32* %r0.global-to-local, align 4
  %v4_9718 = inttoptr i32 %v0_9704 to i32*
  %v5_9718 = call i32 @function_85e0(i32 %v0_9714, i32* %v4_9718, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9728 = load i32, i32* @r5, align 4
  store i32 %v0_9728, i32* %r1.global-to-local, align 4
  %v0_972c = load i32, i32* @r4, align 4
  store i32 %v0_972c, i32* %r0.global-to-local, align 4
  %v4_9730 = inttoptr i32 %v0_9728 to i32*
  %v5_9730 = call i32 @function_85e0(i32 %v0_972c, i32* %v4_9730, i32 1, i32 1)
  %v1_9738 = urem i32 %v5_9730, 256
  store i32 %v1_9738, i32* %ip.global-to-local, align 4
  %v0_973c = load i32, i32* @r5, align 4
  store i32 %v0_973c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9748 = load i32, i32* @r4, align 4
  store i32 %v0_9748, i32* %r0.global-to-local, align 4
  %v5_9750 = inttoptr i32 %v0_973c to i32*
  %v6_9750 = call i32 @function_85e0(i32 %v0_9748, i32* %v5_9750, i32 19, i32 0)
  %v0_9758 = load i32, i32* @r5, align 4
  store i32 %v0_9758, i32* %r1.global-to-local, align 4
  %v2_975c = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_975c, i32* %r3.global-to-local, align 4
  store i32 %v6_9750, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9768 = load i32, i32* @r4, align 4
  store i32 %v0_9768, i32* %r0.global-to-local, align 4
  %v4_976c = inttoptr i32 %v0_9758 to i32*
  %v5_976c = call i32 @function_85e0(i32 %v0_9768, i32* %v4_976c, i32 25, i32 %v2_975c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9780 = call i32 @function_13500(i32 2, i32 3, i32 6)
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v7_9784 = icmp eq i32 %v3_9780, -1
  store i1 %v7_9784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9784, label %dec_label_pc_9c68, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_962c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9798 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9798, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_97ac = call i32 @function_134d0(i32 %v3_9780, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_97ac, i32* %r0.global-to-local, align 4
  %v7_97b0 = icmp eq i32 %v6_97ac, -1
  store i1 %v7_97b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97b0, label %dec_label_pc_9c60, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790
  %v0_97b8 = load i32, i32* @sl, align 4
  %v3_97b8 = mul i32 %v0_97b8, 65536
  store i32 %v3_97b8, i32* %sl.global-to-local, align 4
  %v0_97bc = load i32, i32* @r8, align 4
  %v3_97bc = mul i32 %v0_97bc, 65536
  store i32 %v3_97bc, i32* %r8.global-to-local, align 4
  %v0_97c4 = load i32, i32* @r7, align 4
  %v3_97c4 = mul i32 %v0_97c4, 65536
  %v0_97c8 = load i32, i32* @r6, align 4
  %v1_97c8 = urem i32 %v0_97c8, 256
  store i32 0, i32* %stack_var_-40, align 4
  %v3_97d0 = urem i32 %v0_97c4, 65536
  store i32 %v3_97d0, i32* %r2.global-to-local, align 4
  %v3_97d4 = urem i32 %v0_97b8, 65536
  store i32 %v3_97d4, i32* %r3.global-to-local, align 4
  %v3_97d8 = urem i32 %v0_97bc, 65536
  store i32 %v3_97d8, i32* %r1.global-to-local, align 4
  %v0_97dc = load i32, i32* @fp, align 4
  %v2_97dc = icmp eq i32 %v0_97dc, 0
  store i1 %v2_97dc, i1* %cpsr_z.global-to-local, align 1
  %tmp88 = icmp slt i32 %v0_97dc, 1
  br i1 %tmp88, label %dec_label_pc_9d88, label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %dec_label_pc_97b8
  %v3_9800 = mul i32 %v5_9718, 65536
  %v0_97c4.not = or i32 %v0_97c4, -65536
  %v1_9808 = xor i32 %v0_97c4.not, 65535
  %v1_9810 = add i32 %v3_9800, 4325376
  %v1_9814 = urem i32 %v0_97b8, 256
  %v3_981c = udiv i32 %v1_9810, 256
  %v1_9820 = add i32 %v3_9800, 524288
  %v1_9828 = add i32 %v3_9800, 1835008
  %v1_982c = urem i32 %v0_97bc, 256
  %v1_9830 = and i32 %v3_981c, 65280
  store i32 %v1_9830, i32* %r0.global-to-local, align 4
  %v3_9838 = udiv i32 %v1_9828, 256
  %tmp89 = mul nsw i32 %v1_9808, 256
  %v1_9850 = and i32 %v3_9838, 65280
  store i32 %v1_9850, i32* %ip.global-to-local, align 4
  %v1_9854 = and i32 %tmp89, 65280
  store i32 %v1_9854, i32* @lr, align 4
  %tmp91 = udiv i32 %v1_9808, 256
  %v4_9840 = sdiv i32 %v1_9810, 16777216
  %v5_9870 = trunc i32 %tmp91 to i8
  %v3_987c = mul nuw nsw i32 %v1_9814, 256
  %v3_9884 = ashr i32 %v1_9810, 31
  %v3_9888 = mul nuw nsw i32 %v1_982c, 256
  store i32 %v3_9888, i32* @r5, align 4
  %tmp92 = udiv i32 %v0_97b8, 256
  %v4_988c = urem i32 %tmp92, 256
  %v5_988c = or i32 %v4_988c, %v3_987c
  store i32 %v5_988c, i32* @r7, align 4
  %v3_9890 = udiv i32 %v1_9820, 256
  %tmp93 = udiv i32 %v0_97bc, 256
  %v4_9894 = urem i32 %tmp93, 256
  %v5_9894 = or i32 %v4_9894, %v3_9888
  store i32 %v5_9894, i32* %sl.global-to-local, align 4
  %v5_9898 = trunc i32 %v3_9884 to i8
  %v3_98a0 = sdiv i32 %v3_97c4, 16777216
  %v7_98a0 = sdiv i32 %v1_9828, 16777216
  %v1_98a4 = and i32 %v3_9890, 65280
  store i32 %v1_98a4, i32* @r6, align 4
  %v3_98a8 = ashr i32 %v3_97c4, 31
  %v3_98ac = ashr i32 %v1_9828, 31
  %v3_98b0 = udiv i32 %v1_9808, 65536
  %v4_98b4 = udiv i32 %v1_9820, 16777216
  %v5_98b4 = or i32 %v4_98b4, %v1_98a4
  store i32 %v5_98b4, i32* %r8.global-to-local, align 4
  store i32 %v1_9814, i32* %r1.global-to-local, align 4
  store i32 %v1_982c, i32* %r2.global-to-local, align 4
  %v3_98cc37 = udiv i32 %v1_98a4, 256
  store i32 %v3_98cc37, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_992c = sext i8 %v5_96bc to i32
  %v2_9a2c = icmp eq i32 %v1_97c8, 0
  %sext16 = mul i32 %v0_97b8, 16777216
  %v4_9a40 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_9820, 256
  %v4_9a54 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_97bc, 16777216
  %v4_9a5c = sdiv i32 %sext18, 16777216
  %v1_9a64 = trunc i32 %v4_9a54 to i8
  br label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %bb105, %dec_label_pc_97fc
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_98ec = call i32 @function_137ec(i32 1510, i32 4)
  store i32 %v2_98ec, i32* %r0.global-to-local, align 4
  store i32 %v2_964c, i32* %r1.global-to-local, align 4
  %v3_98f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_98f4, i32* %r3.global-to-local, align 4
  %v2_98f8 = load i32, i32* @r4, align 4
  %v5_98f8 = mul i32 %v2_98f8, 4
  %v6_98f8 = add i32 %v5_98f8, %v2_964c
  %v7_98f8 = inttoptr i32 %v6_98f8 to i32*
  store i32 %v2_98ec, i32* %v7_98f8, align 4
  %v0_98fc = load i32, i32* %r1.global-to-local, align 4
  %v1_98fc = load i32, i32* %r3.global-to-local, align 4
  %v4_98fc = mul i32 %v1_98fc, 4
  %v5_98fc = add i32 %v4_98fc, %v0_98fc
  %v6_98fc = inttoptr i32 %v5_98fc to i32*
  %v7_98fc = load i32, i32* %v6_98fc, align 4
  store i32 %v7_98fc, i32* %r4.global-to-local, align 4
  %v1_9900 = inttoptr i32 %v7_98fc to i8*
  %v2_9900 = load i8, i8* %v1_9900, align 1
  %tmp = urem i8 %v2_9900, 16
  %v1_9904 = zext i8 %tmp to i32
  %v1_9908 = or i32 %v1_9904, 64
  store i32 %v1_9908, i32* %r2.global-to-local, align 4
  %v1_990c = trunc i32 %v1_9908 to i8
  store i8 %v1_990c, i8* %v1_9900, align 1
  %v0_9910 = load i32, i32* %r4.global-to-local, align 4
  %v1_9910 = inttoptr i32 %v0_9910 to i8*
  %v2_9910 = load i8, i8* %v1_9910, align 1
  %v1_9914 = and i8 %v2_9910, -16
  %v1_9918 = or i8 %v1_9914, 5
  store i32 %v1_96cc, i32* %r2.global-to-local, align 4
  store i8 %v1_9918, i8* %v1_9910, align 1
  %v2_9928 = load i32, i32* %r4.global-to-local, align 4
  %v3_9928 = add i32 %v2_9928, 1
  %v4_9928 = inttoptr i32 %v3_9928 to i8*
  store i8 %v5_9684, i8* %v4_9928, align 1
  store i32 %v4_992c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9934 = load i32, i32* %r4.global-to-local, align 4
  %v3_9934 = add i32 %v2_9934, 8
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 %v5_96bc, i8* %v4_9934, align 1
  %v0_9938 = load i32, i32* %r2.global-to-local, align 4
  %v1_9938 = load i32, i32* %ip.global-to-local, align 4
  %v9_9938 = icmp eq i32 %v0_9938, %v1_9938
  store i1 %v9_9938, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9884, i32* %r3.global-to-local, align 4
  store i32 %v4_9840, i32* %r2.global-to-local, align 4
  %v2_9944 = load i32, i32* %r4.global-to-local, align 4
  %v3_9944 = add i32 %v2_9944, 3
  %v4_9944 = inttoptr i32 %v3_9944 to i8*
  store i8 %v5_9898, i8* %v4_9944, align 1
  %v0_9948 = load i32, i32* %r2.global-to-local, align 4
  %v1_9948 = trunc i32 %v0_9948 to i8
  %v2_9948 = load i32, i32* %r4.global-to-local, align 4
  %v3_9948 = add i32 %v2_9948, 2
  %v4_9948 = inttoptr i32 %v3_9948 to i8*
  store i8 %v1_9948, i8* %v4_9948, align 1
  %v0_994c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_994c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_98e0
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %extract.t114 = trunc i32 %v3_98a8 to i8
  br label %bb94

bb:                                               ; preds = %dec_label_pc_98e0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %v3_9954 = load i32, i32* %r4.global-to-local, align 4
  %v4_9954 = add i32 %v3_9954, 6
  %v5_9954 = inttoptr i32 %v4_9954 to i8*
  store i8 64, i8* %v5_9954, align 1
  %v0_995c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t115 = trunc i32 %v0_995c.pre to i8
  br label %bb94

bb94:                                             ; preds = %.thread, %bb
  %v3_98a8.sink.off0 = phi i8 [ %extract.t114, %.thread ], [ %extract.t115, %bb ]
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_995c = load i32, i32* %r4.global-to-local, align 4
  %v3_995c = add i32 %v2_995c, 5
  %v4_995c = inttoptr i32 %v3_995c to i8*
  store i8 %v3_98a8.sink.off0, i8* %v4_995c, align 1
  store i32 %v3_98a0, i32* %r1.global-to-local, align 4
  %v0_9964 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9964, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_9964 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_9964, i32* %r2.global-to-local, align 4
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  %v0_9968 = load i32, i32* %r3.global-to-local, align 4
  %v1_9968 = trunc i32 %v0_9968 to i8
  %v2_9968 = load i32, i32* %r4.global-to-local, align 4
  %v3_9968 = add i32 %v2_9968, 9
  %v4_9968 = inttoptr i32 %v3_9968 to i8*
  store i8 %v1_9968, i8* %v4_9968, align 1
  %v0_996c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_996c, label %bb98, label %bb97

bb97:                                             ; preds = %bb96
  %v1_996c = load i32, i32* %r2.global-to-local, align 4
  %v2_996c = trunc i32 %v1_996c to i8
  %v3_996c = load i32, i32* %r4.global-to-local, align 4
  %v4_996c = add i32 %v3_996c, 7
  %v5_996c = inttoptr i32 %v4_996c to i8*
  store i8 %v2_996c, i8* %v5_996c, align 1
  br label %bb98

bb98:                                             ; preds = %bb96, %bb97
  %v3_9970 = load i32, i32* %stack_var_-40, align 4
  %v5_9978 = mul i32 %v3_9970, 24
  store i32 %v5_9978, i32* %r3.global-to-local, align 4
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  %v1_9980 = load i32, i32* %r4.global-to-local, align 4
  %v2_9980 = add i32 %v1_9980, 12
  %v3_9980 = inttoptr i32 %v2_9980 to i32*
  store i32 %v5_976c, i32* %v3_9980, align 4
  %v0_9984 = load i32, i32* %r3.global-to-local, align 4
  %v1_9984 = load i32, i32* @sb, align 4
  %v2_9984 = add i32 %v1_9984, %v0_9984
  store i32 %v2_9984, i32* %r3.global-to-local, align 4
  %v1_9988 = add i32 %v2_9984, 16
  %v2_9988 = inttoptr i32 %v1_9988 to i32*
  %v3_9988 = load i32, i32* %v2_9988, align 4
  store i32 %v3_9988, i32* %r2.global-to-local, align 4
  %v0_998c = load i32, i32* %r1.global-to-local, align 4
  %v1_998c = trunc i32 %v0_998c to i8
  %v2_998c = load i32, i32* %r4.global-to-local, align 4
  %v3_998c = add i32 %v2_998c, 4
  %v4_998c = inttoptr i32 %v3_998c to i8*
  store i8 %v1_998c, i8* %v4_998c, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_9994 = load i32, i32* %r4.global-to-local, align 4
  %v1_9994 = add i32 %v0_9994, 20
  store i32 %v1_9994, i32* %r1.global-to-local, align 4
  %v3_9998 = add i32 %v0_9994, 22
  %v4_9998 = inttoptr i32 %v3_9998 to i8*
  store i8 101, i8* %v4_9998, align 1
  %v0_999c = load i32, i32* %r2.global-to-local, align 4
  %v1_999c = load i32, i32* %r4.global-to-local, align 4
  %v2_999c = add i32 %v1_999c, 16
  %v3_999c = inttoptr i32 %v2_999c to i32*
  store i32 %v0_999c, i32* %v3_999c, align 4
  %v0_99a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_99a0 = add i32 %v0_99a0, 24
  store i32 %v1_99a0, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_99a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99a8 = add i32 %v0_99a8, -93
  store i32 %v1_99a8, i32* %r3.global-to-local, align 4
  %v2_99ac = load i32, i32* %r1.global-to-local, align 4
  %v3_99ac = add i32 %v2_99ac, 3
  %v4_99ac = inttoptr i32 %v3_99ac to i8*
  store i8 88, i8* %v4_99ac, align 1
  %v0_99b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_99b0 = trunc i32 %v0_99b0 to i8
  %v2_99b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_99b0 = add i32 %v2_99b0, 12
  %v4_99b0 = inttoptr i32 %v3_99b0 to i8*
  store i8 %v1_99b0, i8* %v4_99b0, align 1
  %v0_99b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_99b4 = trunc i32 %v0_99b4 to i8
  %v2_99b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_99b4 = add i32 %v2_99b4, 13
  %v4_99b4 = inttoptr i32 %v3_99b4 to i8*
  store i8 %v1_99b4, i8* %v4_99b4, align 1
  %v0_99b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99b8 = add i32 %v0_99b8, 38
  %v2_99b8 = inttoptr i32 %v1_99b8 to i8*
  %v3_99b8 = load i8, i8* %v2_99b8, align 1
  %tmp116 = urem i8 %v3_99b8, 16
  %v1_99bc = zext i8 %tmp116 to i32
  %v1_99c0 = or i32 %v1_99bc, 64
  store i32 %v1_99c0, i32* %r3.global-to-local, align 4
  %v1_99c4 = trunc i32 %v1_99c0 to i8
  store i8 %v1_99c4, i8* %v2_99b8, align 1
  %v0_99c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99c8 = add i32 %v0_99c8, 38
  %v2_99c8 = inttoptr i32 %v1_99c8 to i8*
  %v3_99c8 = load i8, i8* %v2_99c8, align 1
  %v1_99cc = and i8 %v3_99c8, -16
  %v1_99d0 = or i8 %v1_99cc, 5
  store i8 %v1_99d0, i8* %v2_99c8, align 1
  %v0_99dc = load i32, i32* %r4.global-to-local, align 4
  %v1_99dc = add i32 %v0_99dc, 38
  store i32 %v1_99dc, i32* @r5, align 4
  %v3_99e0 = add i32 %v0_99dc, 39
  %v4_99e0 = inttoptr i32 %v3_99e0 to i8*
  store i8 %v5_9684, i8* %v4_99e0, align 1
  store i32 %v7_98a0, i32* %r1.global-to-local, align 4
  store i32 %tmp91, i32* %r3.global-to-local, align 4
  store i32 %v3_98ac, i32* %r2.global-to-local, align 4
  %v2_99f0 = load i32, i32* @r5, align 4
  %v3_99f0 = add i32 %v2_99f0, 4
  %v4_99f0 = inttoptr i32 %v3_99f0 to i8*
  store i8 %v5_9870, i8* %v4_99f0, align 1
  %v0_99f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_99f4 = trunc i32 %v0_99f4 to i8
  %v2_99f4 = load i32, i32* @r5, align 4
  %v3_99f4 = add i32 %v2_99f4, 2
  %v4_99f4 = inttoptr i32 %v3_99f4 to i8*
  store i8 %v1_99f4, i8* %v4_99f4, align 1
  %v0_99f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_99f8, label %bb100, label %bb99

bb99:                                             ; preds = %bb98
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb100

bb100:                                            ; preds = %bb98, %bb99
  store i32 %v3_98b0, i32* %r1.global-to-local, align 4
  %v0_9a00 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a00 = trunc i32 %v0_9a00 to i8
  %v2_9a00 = load i32, i32* @r5, align 4
  %v3_9a00 = add i32 %v2_9a00, 3
  %v4_9a00 = inttoptr i32 %v3_9a00 to i8*
  store i8 %v1_9a00, i8* %v4_9a00, align 1
  store i32 %v4_992c, i32* %r2.global-to-local, align 4
  %v0_9a08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a08, label %bb102, label %bb101

bb101:                                            ; preds = %bb100
  %v1_9a08 = load i32, i32* %r3.global-to-local, align 4
  %v2_9a08 = trunc i32 %v1_9a08 to i8
  %v3_9a08 = load i32, i32* @r5, align 4
  %v4_9a08 = add i32 %v3_9a08, 6
  %v5_9a08 = inttoptr i32 %v4_9a08 to i8*
  store i8 %v2_9a08, i8* %v5_9a08, align 1
  br label %bb102

bb102:                                            ; preds = %bb100, %bb101
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9a10 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a10 = trunc i32 %v0_9a10 to i8
  %v2_9a10 = load i32, i32* @r5, align 4
  %v3_9a10 = add i32 %v2_9a10, 5
  %v4_9a10 = inttoptr i32 %v3_9a10 to i8*
  store i8 %v1_9a10, i8* %v4_9a10, align 1
  %v0_9a14 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a14 = trunc i32 %v0_9a14 to i8
  %v2_9a14 = load i32, i32* @r5, align 4
  %v3_9a14 = add i32 %v2_9a14, 8
  %v4_9a14 = inttoptr i32 %v3_9a14 to i8*
  store i8 %v1_9a14, i8* %v4_9a14, align 1
  %v0_9a18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a18, label %bb104, label %bb103

bb103:                                            ; preds = %bb102
  %v1_9a18 = load i32, i32* %ip.global-to-local, align 4
  %v2_9a18 = trunc i32 %v1_9a18 to i8
  %v3_9a18 = load i32, i32* @r5, align 4
  %v4_9a18 = add i32 %v3_9a18, 7
  %v5_9a18 = inttoptr i32 %v4_9a18 to i8*
  store i8 %v2_9a18, i8* %v5_9a18, align 1
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v0_9a1c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a1c = trunc i32 %v0_9a1c to i8
  %v2_9a1c = load i32, i32* @r5, align 4
  %v3_9a1c = add i32 %v2_9a1c, 9
  %v4_9a1c = inttoptr i32 %v3_9a1c to i8*
  store i8 %v1_9a1c, i8* %v4_9a1c, align 1
  %v0_9a20 = call i32 @function_e82c()
  store i32 %v0_9a20, i32* %r0.global-to-local, align 4
  store i32 %v1_97c8, i32* %r1.global-to-local, align 4
  store i1 %v2_9a2c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a30 = sub i32 1023, %v0_9a20
  store i32 %v1_9a30, i32* %r3.global-to-local, align 4
  br i1 %v2_9a2c, label %.thread21, label %.thread22

.thread21:                                        ; preds = %bb104
  %v2_9a38 = load i32, i32* @r5, align 4
  %v3_9a38 = add i32 %v2_9a38, 16
  %v4_9a38 = inttoptr i32 %v3_9a38 to i32*
  store i32 %v1_9a30, i32* %v4_9a38, align 4
  br label %bb105

.thread22:                                        ; preds = %bb104
  %v1_9a34 = load i32, i32* %r4.global-to-local, align 4
  %v2_9a34 = add i32 %v1_9a34, 16
  %v3_9a34 = inttoptr i32 %v2_9a34 to i32*
  %v4_9a34 = load i32, i32* %v3_9a34, align 4
  store i32 %v4_9a34, i32* %r3.global-to-local, align 4
  %v2_9a3c = load i32, i32* @r5, align 4
  %v3_9a3c = add i32 %v2_9a3c, 16
  %v4_9a3c = inttoptr i32 %v3_9a3c to i32*
  store i32 %v4_9a34, i32* %v4_9a3c, align 4
  br label %bb105

bb105:                                            ; preds = %.thread21, %.thread22
  store i32 %v4_9a40, i32* %r3.global-to-local, align 4
  %v0_9a44 = load i32, i32* %r4.global-to-local, align 4
  %v1_9a44 = add i32 %v0_9a44, 58
  store i32 %v1_9a44, i32* @r6, align 4
  %v1_9a48 = load i32, i32* @r5, align 4
  %v2_9a48 = add i32 %v1_9a48, 12
  %v3_9a48 = inttoptr i32 %v2_9a48 to i32*
  store i32 %v0_9a20, i32* %v3_9a48, align 4
  %v0_9a4c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a4c = trunc i32 %v0_9a4c to i8
  %v2_9a4c = load i32, i32* @r6, align 4
  %v3_9a4c = add i32 %v2_9a4c, 1
  %v4_9a4c = inttoptr i32 %v3_9a4c to i8*
  store i8 %v1_9a4c, i8* %v4_9a4c, align 1
  %v3_9a50 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9a50, i32* %r3.global-to-local, align 4
  store i32 %v4_9a54, i32* %r2.global-to-local, align 4
  %v1_9a58 = add i32 %v3_9a50, 1
  store i32 %v1_9a58, i32* @r4, align 4
  store i32 %v4_9a5c, i32* %r1.global-to-local, align 4
  %v1_9a60 = load i32, i32* @fp, align 4
  %v9_9a60 = icmp eq i32 %v1_9a58, %v1_9a60
  store i1 %v9_9a60, i1* %cpsr_z.global-to-local, align 1
  %v2_9a64 = load i32, i32* @r6, align 4
  %v3_9a64 = add i32 %v2_9a64, 5
  %v4_9a64 = inttoptr i32 %v3_9a64 to i8*
  store i8 %v1_9a64, i8* %v4_9a64, align 1
  %v0_9a68 = load i32, i32* @r7, align 4
  %v1_9a68 = trunc i32 %v0_9a68 to i8
  %v2_9a68 = load i32, i32* @r6, align 4
  %v3_9a68 = inttoptr i32 %v2_9a68 to i8*
  store i8 %v1_9a68, i8* %v3_9a68, align 1
  %v0_9a6c = load i32, i32* %sl.global-to-local, align 4
  %v1_9a6c = trunc i32 %v0_9a6c to i8
  %v2_9a6c = load i32, i32* @r6, align 4
  %v3_9a6c = add i32 %v2_9a6c, 2
  %v4_9a6c = inttoptr i32 %v3_9a6c to i8*
  store i8 %v1_9a6c, i8* %v4_9a6c, align 1
  %v0_9a70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a70 = trunc i32 %v0_9a70 to i8
  %v2_9a70 = load i32, i32* @r6, align 4
  %v3_9a70 = add i32 %v2_9a70, 3
  %v4_9a70 = inttoptr i32 %v3_9a70 to i8*
  store i8 %v1_9a70, i8* %v4_9a70, align 1
  %v0_9a74 = load i32, i32* %r8.global-to-local, align 4
  %v1_9a74 = trunc i32 %v0_9a74 to i8
  %v2_9a74 = load i32, i32* @r6, align 4
  %v3_9a74 = add i32 %v2_9a74, 4
  %v4_9a74 = inttoptr i32 %v3_9a74 to i8*
  store i8 %v1_9a74, i8* %v4_9a74, align 1
  %v0_9a78 = load i32, i32* @r4, align 4
  store i32 %v0_9a78, i32* %stack_var_-40, align 4
  %v5_9a7c = icmp slt i32 %v1_9a58, %v1_9a60
  br i1 %v5_9a7c, label %dec_label_pc_98e0, label %dec_label_pc_9a80

dec_label_pc_9a80:                                ; preds = %bb105
  %v1_9a88 = add i32 %v5_9718, 8
  store i32 %v1_9a88, i32* %r2.global-to-local, align 4
  %v1_9a8c = add i32 %v5_9718, 66
  store i32 %v1_9a8c, i32* %r3.global-to-local, align 4
  %v0_9a98.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_9a98.preheader

dec_label_pc_9a98.preheader:                      ; preds = %dec_label_pc_9a80, %dec_label_pc_9d88
  %v0_9a98.pre = phi i32 [ %v0_9a98.pre.pre, %dec_label_pc_9a80 ], [ %v0_97dc, %dec_label_pc_9d88 ]
  %stack_var_-160.0.ph = phi i32 [ %v1_9a8c, %dec_label_pc_9a80 ], [ %v1_9d94, %dec_label_pc_9d88 ]
  %stack_var_-156.0.ph = phi i32 [ %v1_9a88, %dec_label_pc_9a80 ], [ %v1_9d90, %dec_label_pc_9d88 ]
  %v3_9ce8 = icmp eq i32 %v3_97d0, 65535
  %v2_9d58 = icmp eq i32 %v1_97c8, 0
  %v2_9b3c = ptrtoint i32* %stack_var_-44 to i32
  %v2_9b54 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9b64 = ptrtoint i32* %stack_var_-52 to i32
  %v2_9b70 = ptrtoint i32* %stack_var_-50 to i32
  %v2_9b84 = icmp eq i32 %v1_9738, 0
  %v2_9ae0 = icmp eq i32 %v5_976c, -1
  %v7_9ae0 = icmp eq i32 %v5_976c, -1
  br label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9a98.preheader
  %v0_9a98 = phi i32 [ %v0_9a98.pre, %dec_label_pc_9a98.preheader ], [ %v1_9c50, %dec_label_pc_9b8c ]
  %v2_9a98 = icmp eq i32 %v0_9a98, 0
  store i1 %v2_9a98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp106 = icmp slt i32 %v0_9a98, 1
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9aa0, %dec_label_pc_9a98
  br i1 %tmp106, label %dec_label_pc_9aa0, label %dec_label_pc_9aa4

dec_label_pc_9aa4:                                ; preds = %dec_label_pc_9aa0
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_9ab0

dec_label_pc_9ab0:                                ; preds = %dec_label_pc_9b8c, %dec_label_pc_9aa4
  %v1_9ac4 = phi i32 [ %v1_9c4c, %dec_label_pc_9b8c ], [ 0, %dec_label_pc_9aa4 ]
  %v5_9ab4 = mul i32 %v1_9ac4, 24
  %v1_9ab8 = load i32, i32* @sb, align 4
  %v2_9ab8 = add i32 %v1_9ab8, %v5_9ab4
  store i32 %v2_9ab8, i32* %r3.global-to-local, align 4
  store i32 %v2_964c, i32* %r1.global-to-local, align 4
  %v1_9ac0 = add i32 %v2_9ab8, 20
  %v2_9ac0 = inttoptr i32 %v1_9ac0 to i8*
  %v3_9ac0 = load i8, i8* %v2_9ac0, align 1
  %v4_9ac0 = zext i8 %v3_9ac0 to i32
  store i32 %v4_9ac0, i32* %r2.global-to-local, align 4
  %v4_9ac4 = mul i32 %v1_9ac4, 4
  %v5_9ac4 = add i32 %v4_9ac4, %v2_964c
  %v6_9ac4 = inttoptr i32 %v5_9ac4 to i32*
  %v7_9ac4 = load i32, i32* %v6_9ac4, align 4
  store i32 %v7_9ac4, i32* @r5, align 4
  %v7_9ac8 = icmp eq i8 %v3_9ac0, 31
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v1_9acc = add i32 %v7_9ac4, 24
  store i32 %v1_9acc, i32* @r8, align 4
  %v1_9ad0 = add i32 %v7_9ac4, 38
  store i32 %v1_9ad0, i32* @r6, align 4
  %v1_9ad4 = add i32 %v7_9ac4, 58
  store i32 %v1_9ad4, i32* @r7, align 4
  %tmp117 = icmp ult i8 %v3_9ac0, 32
  br i1 %tmp117, label %dec_label_pc_9c70, label %dec_label_pc_9adc

dec_label_pc_9adc:                                ; preds = %dec_label_pc_9ab0
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  store i1 %v7_9ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ae0, label %dec_label_pc_9cd8, label %dec_label_pc_9ae8

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9adc
  store i32 %v3_97d0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9ce8, label %dec_label_pc_9cf4, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge, %dec_label_pc_9ae8
  %v1_9b00 = phi i32 [ %v1_9b00.pre, %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge ], [ 65535, %dec_label_pc_9ae8 ]
  store i32 %v3_97d4, i32* %r1.global-to-local, align 4
  %v9_9b00 = icmp eq i32 %v3_97d4, %v1_9b00
  store i1 %v9_9b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b00, label %dec_label_pc_9d2c, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge, %dec_label_pc_9afc
  %v1_9b0c = phi i32 [ %v1_9b0c.pre, %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge ], [ %v1_9b00, %dec_label_pc_9afc ]
  store i32 %v3_97d8, i32* %r2.global-to-local, align 4
  %v9_9b0c = icmp eq i32 %v3_97d8, %v1_9b0c
  store i1 %v9_9b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b0c, label %dec_label_pc_9d48, label %dec_label_pc_9b14

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9d2c, %dec_label_pc_9b08
  store i32 %v1_97c8, i32* %r3.global-to-local, align 4
  store i1 %v2_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d58, label %dec_label_pc_9d6c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9b14
  %v1_9b1c = load i32, i32* @r5, align 4
  %v2_9b1c = add i32 %v1_9b1c, 16
  %v3_9b1c = inttoptr i32 %v2_9b1c to i32*
  %v4_9b1c = load i32, i32* %v3_9b1c, align 4
  store i32 %v4_9b1c, i32* %r3.global-to-local, align 4
  %v2_9b20 = load i32, i32* @r6, align 4
  %v3_9b20 = add i32 %v2_9b20, 16
  %v4_9b20 = inttoptr i32 %v3_9b20 to i32*
  store i32 %v4_9b1c, i32* %v4_9b20, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9b28:                                ; preds = %bb109, %.thread23, %dec_label_pc_9d6c
  %v0_9b28 = call i32 @function_e82c()
  store i32 %v0_9b28, i32* %r0.global-to-local, align 4
  store i32 %v0_9b28, i32* %stack_var_-44, align 4
  %v0_9b30 = call i32 @function_e82c()
  store i32 %v0_9b30, i32* %r0.global-to-local, align 4
  store i32 %v0_9b30, i32* %stack_var_-48, align 4
  %v0_9b38 = call i32 @function_e82c()
  store i32 %v2_9b3c, i32* %r1.global-to-local, align 4
  store i32 %v0_9b38, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_9b48 = load i32, i32* @r8, align 4
  store i32 %v0_9b48, i32* %r0.global-to-local, align 4
  %v3_9b4c = call i32 @function_12394(i32 %v0_9b48, i32 %v2_9b3c, i32 4)
  %v0_9b50 = load i32, i32* @r8, align 4
  %v1_9b50 = add i32 %v0_9b50, 6
  store i32 %v1_9b50, i32* %r0.global-to-local, align 4
  store i32 %v2_9b54, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9b5c = call i32 @function_12394(i32 %v1_9b50, i32 %v2_9b54, i32 4)
  %v0_9b60 = load i32, i32* @r8, align 4
  %v1_9b60 = add i32 %v0_9b60, 4
  store i32 %v1_9b60, i32* %r0.global-to-local, align 4
  store i32 %v2_9b64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b6c = call i32 @function_12394(i32 %v1_9b60, i32 %v2_9b64, i32 2)
  store i32 %v2_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* @r8, align 4
  %v1_9b74 = add i32 %v0_9b74, 10
  store i32 %v1_9b74, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b7c = call i32 @function_12394(i32 %v1_9b74, i32 %v2_9b70, i32 2)
  store i32 %v3_9b7c, i32* %r0.global-to-local, align 4
  store i32 %v1_9738, i32* %r1.global-to-local, align 4
  store i1 %v2_9b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b84, label %dec_label_pc_9b8c, label %dec_label_pc_9d78

dec_label_pc_9b8c:                                ; preds = %dec_label_pc_9b28, %dec_label_pc_9d78
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9b90 = load i32, i32* @sl, align 4
  %v1_9b90 = trunc i32 %v0_9b90 to i8
  %v2_9b90 = load i32, i32* @r5, align 4
  %v3_9b90 = add i32 %v2_9b90, 10
  %v4_9b90 = inttoptr i32 %v3_9b90 to i8*
  store i8 %v1_9b90, i8* %v4_9b90, align 1
  %v0_9b94 = load i32, i32* @sl, align 4
  %v1_9b94 = trunc i32 %v0_9b94 to i8
  %v2_9b94 = load i32, i32* @r5, align 4
  %v3_9b94 = add i32 %v2_9b94, 11
  %v4_9b94 = inttoptr i32 %v3_9b94 to i8*
  store i8 %v1_9b94, i8* %v4_9b94, align 1
  %v0_9b98 = load i32, i32* @r5, align 4
  store i32 %v0_9b98, i32* @r0, align 4
  %v2_9b9c = call i32 @function_d0b8(i32 %v0_9b98, i32 20)
  %v3_9b9c = trunc i32 %v2_9b9c to i8
  %v4_9ba0 = sdiv i32 %v2_9b9c, 256
  store i32 %v4_9ba0, i32* %r3.global-to-local, align 4
  %v1_9ba4 = trunc i32 %v4_9ba0 to i8
  %v2_9ba4 = load i32, i32* @r5, align 4
  %v3_9ba4 = add i32 %v2_9ba4, 11
  %v4_9ba4 = inttoptr i32 %v3_9ba4 to i8*
  store i8 %v1_9ba4, i8* %v4_9ba4, align 1
  %v3_9ba8 = load i32, i32* @r5, align 4
  %v4_9ba8 = add i32 %v3_9ba8, 10
  %v5_9ba8 = inttoptr i32 %v4_9ba8 to i8*
  store i8 %v3_9b9c, i8* %v5_9ba8, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @sl, align 4
  %v1_9bb0 = trunc i32 %v0_9bb0 to i8
  %v2_9bb0 = load i32, i32* @r6, align 4
  %v3_9bb0 = add i32 %v2_9bb0, 10
  %v4_9bb0 = inttoptr i32 %v3_9bb0 to i8*
  store i8 %v1_9bb0, i8* %v4_9bb0, align 1
  %v0_9bb4 = load i32, i32* @sl, align 4
  %v1_9bb4 = trunc i32 %v0_9bb4 to i8
  %v2_9bb4 = load i32, i32* @r6, align 4
  %v3_9bb4 = add i32 %v2_9bb4, 11
  %v4_9bb4 = inttoptr i32 %v3_9bb4 to i8*
  store i8 %v1_9bb4, i8* %v4_9bb4, align 1
  %v0_9bb8 = load i32, i32* @r6, align 4
  store i32 %v0_9bb8, i32* @r0, align 4
  %v2_9bbc = call i32 @function_d0b8(i32 %v0_9bb8, i32 20)
  %v3_9bbc = trunc i32 %v2_9bbc to i8
  store i32 %v2_9bbc, i32* %r0.global-to-local, align 4
  %v4_9bc0 = sdiv i32 %v2_9bbc, 256
  store i32 %v4_9bc0, i32* %r3.global-to-local, align 4
  %v3_9bc4 = load i32, i32* @r6, align 4
  %v4_9bc4 = add i32 %v3_9bc4, 10
  %v5_9bc4 = inttoptr i32 %v4_9bc4 to i8*
  store i8 %v3_9bbc, i8* %v5_9bc4, align 1
  %v0_9bc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bc8 = trunc i32 %v0_9bc8 to i8
  %v2_9bc8 = load i32, i32* @r6, align 4
  %v3_9bc8 = add i32 %v2_9bc8, 11
  %v4_9bc8 = inttoptr i32 %v3_9bc8 to i8*
  store i8 %v1_9bc8, i8* %v4_9bc8, align 1
  %v0_9bcc = load i32, i32* @r7, align 4
  %v1_9bcc = add i32 %v0_9bcc, 4
  %v2_9bcc = inttoptr i32 %v1_9bcc to i8*
  %v3_9bcc = load i8, i8* %v2_9bcc, align 1
  %v4_9bcc = zext i8 %v3_9bcc to i32
  store i32 %v4_9bcc, i32* %r3.global-to-local, align 4
  %v1_9bd0 = add i32 %v0_9bcc, 5
  %v2_9bd0 = inttoptr i32 %v1_9bd0 to i8*
  %v3_9bd0 = load i8, i8* %v2_9bd0, align 1
  %v4_9bd0 = zext i8 %v3_9bd0 to i32
  store i32 %v0_9bcc, i32* @r1, align 4
  %v4_9bd8 = mul nuw nsw i32 %v4_9bd0, 256
  %v5_9bd8 = or i32 %v4_9bd8, %v4_9bcc
  store i32 %v5_9bd8, i32* %r2.global-to-local, align 4
  %v0_9bdc = load i32, i32* @sl, align 4
  %v1_9bdc = trunc i32 %v0_9bdc to i8
  %v3_9bdc = add i32 %v0_9bcc, 6
  %v4_9bdc = inttoptr i32 %v3_9bdc to i8*
  store i8 %v1_9bdc, i8* %v4_9bdc, align 1
  store i32 %stack_var_-156.0.ph, i32* %r3.global-to-local, align 4
  %v0_9be4 = load i32, i32* @sl, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v2_9be4 = load i32, i32* @r7, align 4
  %v3_9be4 = add i32 %v2_9be4, 7
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v0_9be8 = load i32, i32* @r6, align 4
  store i32 %v0_9be8, i32* %r0.global-to-local, align 4
  %v4_9bec = call i32 @function_d114(i32 %v0_9be8, i32 %v0_9bcc, i32 %v5_9bd8, i32 %stack_var_-156.0.ph)
  %v5_9bec = trunc i32 %v4_9bec to i8
  store i32 %v4_9bec, i32* %r0.global-to-local, align 4
  %v3_9bf0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9bf0, i32* %r3.global-to-local, align 4
  %v3_9bf4 = mul i32 %v3_9bf0, 32
  store i32 %v3_9bf4, i32* %r2.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @r5, align 4
  %v1_9bf8 = add i32 %v0_9bf8, 16
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  %v3_9bf8 = load i32, i32* %v2_9bf8, align 4
  store i32 %v3_9bf8, i32* %r1.global-to-local, align 4
  %v5_9bfc = mul i32 %v3_9bf0, 24
  store i32 %v5_9bfc, i32* %r2.global-to-local, align 4
  %v4_9c0042 = udiv i32 %v4_9bec, 256
  %v1_9c04 = trunc i32 %v4_9c0042 to i8
  %v2_9c04 = load i32, i32* @r7, align 4
  %v3_9c04 = add i32 %v2_9c04, 7
  %v4_9c04 = inttoptr i32 %v3_9c04 to i8*
  store i8 %v1_9c04, i8* %v4_9c04, align 1
  %v0_9c08 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c08 = load i32, i32* @sb, align 4
  %v2_9c08 = add i32 %v1_9c08, %v0_9c08
  store i32 %v2_9c08, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_9c10 = load i32, i32* @r7, align 4
  %v4_9c10 = add i32 %v3_9c10, 6
  %v5_9c10 = inttoptr i32 %v4_9c10 to i8*
  store i8 %v5_9bec, i8* %v5_9c10, align 1
  %v0_9c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c14 = load i32, i32* %lr.global-to-local, align 4
  %v2_9c14 = add i32 %v1_9c14, 4
  %v3_9c14 = inttoptr i32 %v2_9c14 to i32*
  store i32 %v0_9c14, i32* %v3_9c14, align 4
  %v0_9c18 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c18 = trunc i32 %v0_9c18 to i8
  %v2_9c18 = load i32, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i32, i32* @sb, align 4
  %v4_9c18 = add i32 %v3_9c18, %v2_9c18
  %v5_9c18 = inttoptr i32 %v4_9c18 to i8*
  store i8 %v1_9c18, i8* %v5_9c18, align 1
  %v0_9c1c = load i32, i32* @sl, align 4
  %v1_9c1c = trunc i32 %v0_9c1c to i8
  %v2_9c1c = load i32, i32* %lr.global-to-local, align 4
  %v3_9c1c = add i32 %v2_9c1c, 2
  %v4_9c1c = inttoptr i32 %v3_9c1c to i8*
  store i8 %v1_9c1c, i8* %v4_9c1c, align 1
  %v0_9c20 = load i32, i32* @sl, align 4
  %v1_9c20 = trunc i32 %v0_9c20 to i8
  %v2_9c20 = load i32, i32* %lr.global-to-local, align 4
  %v3_9c20 = add i32 %v2_9c20, 1
  %v4_9c20 = inttoptr i32 %v3_9c20 to i8*
  store i8 %v1_9c20, i8* %v4_9c20, align 1
  %v0_9c24 = load i32, i32* @sl, align 4
  %v1_9c24 = trunc i32 %v0_9c24 to i8
  %v2_9c24 = load i32, i32* %lr.global-to-local, align 4
  %v3_9c24 = add i32 %v2_9c24, 3
  %v4_9c24 = inttoptr i32 %v3_9c24 to i8*
  store i8 %v1_9c24, i8* %v4_9c24, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9c30 = load i32, i32* @r5, align 4
  store i32 %v0_9c30, i32* %r1.global-to-local, align 4
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-160.0.ph, i32* %r2.global-to-local, align 4
  %v0_9c3c = load i32, i32* %lr.global-to-local, align 4
  %v6_9c44 = inttoptr i32 %v0_9c30 to i32*
  %v7_9c44 = call i32 @function_1349c(i32 %v3_9780, i32* %v6_9c44, i32 %stack_var_-160.0.ph, i32 16384, i32 %v0_9c3c, i32 16)
  %v3_9c48 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9c48, i32* %r3.global-to-local, align 4
  %v1_9c4c = add i32 %v3_9c48, 1
  store i32 %v1_9c4c, i32* %r0.global-to-local, align 4
  %v1_9c50 = load i32, i32* @fp, align 4
  %v9_9c50 = icmp eq i32 %v1_9c4c, %v1_9c50
  store i1 %v9_9c50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c4c, i32* %stack_var_-40, align 4
  %v6_9c58 = icmp slt i32 %v1_9c4c, %v1_9c50
  br i1 %v6_9c58, label %dec_label_pc_9ab0, label %dec_label_pc_9a98

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9790
  store i32 %v3_9780, i32* %r0.global-to-local, align 4
  %v1_9c64 = call i32 @function_12c1c(i32 %v3_9780)
  store i32 %v1_9c64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_962c, %dec_label_pc_9c60
  %v29_9c6c = phi i32 [ %v3_9780, %dec_label_pc_962c ], [ %v1_9c64, %dec_label_pc_9c60 ]
  store i32 %v3_962c, i32* %r4.global-to-local, align 4
  store i32 %v15_962c, i32* %r8.global-to-local, align 4
  store i32 %v21_962c, i32* %sl.global-to-local, align 4
  ret i32 %v29_9c6c

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9ab0
  %v1_9c70 = add i32 %v2_9ab8, 16
  %v2_9c70 = inttoptr i32 %v1_9c70 to i32*
  %v3_9c70 = load i32, i32* %v2_9c70, align 4
  store i32 %v3_9c70, i32* %r4.global-to-local, align 4
  %v0_9c74 = call i32 @function_e82c()
  store i32 %v0_9c74, i32* %r0.global-to-local, align 4
  %v3_9c78 = load i32, i32* %stack_var_-40, align 4
  %v5_9c80 = mul i32 %v3_9c78, 24
  %v0_9c84 = load i32, i32* %r4.global-to-local, align 4
  %v1_9c88 = load i32, i32* @sb, align 4
  %v2_9c88 = add i32 %v1_9c88, %v5_9c80
  store i32 %v2_9c88, i32* %r1.global-to-local, align 4
  %v1_9c8c = and i32 %v0_9c84, 65280
  store i32 %v1_9c8c, i32* %r3.global-to-local, align 4
  %v1_9c84 = udiv i32 %v0_9c84, 256
  %v3_9c90 = and i32 %v1_9c84, 65280
  store i32 %v3_9c90, i32* %r2.global-to-local, align 4
  %v3_9c94 = mul i32 %v0_9c84, 16777216
  store i32 %v3_9c94, i32* %ip.global-to-local, align 4
  %v1_9c98 = add i32 %v2_9c88, 20
  %v2_9c98 = inttoptr i32 %v1_9c98 to i8*
  %v3_9c98 = load i8, i8* %v2_9c98, align 1
  %v4_9c98 = zext i8 %v3_9c98 to i32
  store i32 %v4_9c98, i32* %lr.global-to-local, align 4
  %v4_9c9c = mul nuw nsw i32 %v1_9c8c, 256
  %v5_9c9c = or i32 %v4_9c9c, %v3_9c94
  store i32 %v5_9c9c, i32* %ip.global-to-local, align 4
  %v2_9ca4 = call i32 @llvm.bswap.i32(i32 %v0_9c84)
  %v7_9ca8 = lshr i32 %v0_9c74, %v4_9c98
  %v8_9ca8 = add i32 %v7_9ca8, %v2_9ca4
  %v3_9cb4 = mul i32 %v8_9ca8, 16777216
  %v1_9cb8 = and i32 %v8_9ca8, 65280
  store i32 %v1_9cb8, i32* %r0.global-to-local, align 4
  store i32 %v5_976c, i32* %r2.global-to-local, align 4
  %v4_9cc4 = mul nuw nsw i32 %v1_9cb8, 256
  %v5_9cc4 = or i32 %v4_9cc4, %v3_9cb4
  store i32 %v5_9cc4, i32* %r1.global-to-local, align 4
  %v2_9cc8 = call i32 @llvm.bswap.i32(i32 %v8_9ca8)
  store i32 %v2_9cc8, i32* %r3.global-to-local, align 4
  store i1 %v7_9ae0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cd0 = load i32, i32* @r5, align 4
  %v2_9cd0 = add i32 %v1_9cd0, 16
  %v3_9cd0 = inttoptr i32 %v2_9cd0 to i32*
  store i32 %v2_9cc8, i32* %v3_9cd0, align 4
  br i1 %v2_9ae0, label %dec_label_pc_9cd8, label %dec_label_pc_9ae8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9adc
  %v0_9cd8 = call i32 @function_e82c()
  store i32 %v0_9cd8, i32* %r0.global-to-local, align 4
  store i32 %v3_97d0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ce8, i1* %cpsr_z.global-to-local, align 1
  %v1_9cec = load i32, i32* @r5, align 4
  %v2_9cec = add i32 %v1_9cec, 12
  %v3_9cec = inttoptr i32 %v2_9cec to i32*
  store i32 %v0_9cd8, i32* %v3_9cec, align 4
  br i1 %v3_9ce8, label %dec_label_pc_9cf4, label %dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge

dec_label_pc_9cd8.dec_label_pc_9afc_crit_edge:    ; preds = %dec_label_pc_9cd8
  %v1_9b00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9afc

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9cd8, %dec_label_pc_9ae8
  %v0_9cf4 = call i32 @function_e82c()
  %v3_9cfc = urem i32 %v0_9cf4, 65536
  store i32 %v3_9cfc, i32* %r0.global-to-local, align 4
  %v1_9d04 = sub nsw i32 999, %v3_9cfc
  store i32 %v1_9d04, i32* %r2.global-to-local, align 4
  %v3_9d08 = sdiv i32 %v1_9d04, 256
  store i32 %v3_9d08, i32* %r1.global-to-local, align 4
  %v3_9d0c39 = udiv i32 %v3_9cfc, 256
  store i32 %v3_9d0c39, i32* %r3.global-to-local, align 4
  %v1_9d10 = trunc i32 %v3_9d0c39 to i8
  %v2_9d10 = load i32, i32* @r5, align 4
  %v3_9d10 = add i32 %v2_9d10, 5
  %v4_9d10 = inttoptr i32 %v3_9d10 to i8*
  store i8 %v1_9d10, i8* %v4_9d10, align 1
  %v0_9d14 = load i32, i32* %r0.global-to-local, align 4
  %v1_9d14 = trunc i32 %v0_9d14 to i8
  %v2_9d14 = load i32, i32* @r5, align 4
  %v3_9d14 = add i32 %v2_9d14, 4
  %v4_9d14 = inttoptr i32 %v3_9d14 to i8*
  store i8 %v1_9d14, i8* %v4_9d14, align 1
  %v0_9d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d18 = trunc i32 %v0_9d18 to i8
  %v2_9d18 = load i32, i32* @r6, align 4
  %v3_9d18 = add i32 %v2_9d18, 5
  %v4_9d18 = inttoptr i32 %v3_9d18 to i8*
  store i8 %v1_9d18, i8* %v4_9d18, align 1
  store i32 %v3_97d4, i32* %r1.global-to-local, align 4
  %v1_9d20 = load i32, i32* @r4, align 4
  %v9_9d20 = icmp eq i32 %v3_97d4, %v1_9d20
  store i1 %v9_9d20, i1* %cpsr_z.global-to-local, align 1
  %v0_9d24 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d24 = trunc i32 %v0_9d24 to i8
  %v2_9d24 = load i32, i32* @r6, align 4
  %v3_9d24 = add i32 %v2_9d24, 4
  %v4_9d24 = inttoptr i32 %v3_9d24 to i8*
  store i8 %v1_9d24, i8* %v4_9d24, align 1
  %v0_9d28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d28, label %dec_label_pc_9d2c, label %dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge

dec_label_pc_9cf4.dec_label_pc_9b08_crit_edge:    ; preds = %dec_label_pc_9cf4
  %v1_9b0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9b08

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9cf4, %dec_label_pc_9afc
  %v0_9d2c = call i32 @function_e82c()
  %v1_9d2c = trunc i32 %v0_9d2c to i8
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v3_97d8, i32* %r2.global-to-local, align 4
  %v4_9d34 = sdiv i32 %v0_9d2c, 256
  store i32 %v4_9d34, i32* %r3.global-to-local, align 4
  %v1_9d38 = load i32, i32* @r4, align 4
  %v9_9d38 = icmp eq i32 %v3_97d8, %v1_9d38
  store i1 %v9_9d38, i1* %cpsr_z.global-to-local, align 1
  %v3_9d3c = load i32, i32* @r5, align 4
  %v4_9d3c = add i32 %v3_9d3c, 58
  %v5_9d3c = inttoptr i32 %v4_9d3c to i8*
  store i8 %v1_9d2c, i8* %v5_9d3c, align 1
  %v0_9d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d40 = trunc i32 %v0_9d40 to i8
  %v2_9d40 = load i32, i32* @r7, align 4
  %v3_9d40 = add i32 %v2_9d40, 1
  %v4_9d40 = inttoptr i32 %v3_9d40 to i8*
  store i8 %v1_9d40, i8* %v4_9d40, align 1
  %v0_9d44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d44, label %dec_label_pc_9d48, label %dec_label_pc_9b14

dec_label_pc_9d48:                                ; preds = %dec_label_pc_9d2c, %dec_label_pc_9b08
  %v0_9d48 = call i32 @function_e82c()
  %v1_9d48 = trunc i32 %v0_9d48 to i8
  store i32 %v0_9d48, i32* %r0.global-to-local, align 4
  %v4_9d4c43 = udiv i32 %v0_9d48, 256
  %v1_9d50 = trunc i32 %v4_9d4c43 to i8
  %v2_9d50 = load i32, i32* @r7, align 4
  %v3_9d50 = add i32 %v2_9d50, 3
  %v4_9d50 = inttoptr i32 %v3_9d50 to i8*
  store i8 %v1_9d50, i8* %v4_9d50, align 1
  store i32 %v1_97c8, i32* %r3.global-to-local, align 4
  store i1 %v2_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d58, label %bb108, label %bb107

bb107:                                            ; preds = %dec_label_pc_9d48
  %v1_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v1_9d5c, 16
  %v3_9d5c = inttoptr i32 %v2_9d5c to i32*
  %v4_9d5c = load i32, i32* %v3_9d5c, align 4
  store i32 %v4_9d5c, i32* %r3.global-to-local, align 4
  br label %bb108

bb108:                                            ; preds = %dec_label_pc_9d48, %bb107
  %v3_9d60 = load i32, i32* @r7, align 4
  %v4_9d60 = add i32 %v3_9d60, 2
  %v5_9d60 = inttoptr i32 %v4_9d60 to i8*
  store i8 %v1_9d48, i8* %v5_9d60, align 1
  %v0_9d64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d64, label %dec_label_pc_9d6c, label %bb109

bb109:                                            ; preds = %bb108
  %v1_9d64 = load i32, i32* %r3.global-to-local, align 4
  %v2_9d64 = load i32, i32* @r6, align 4
  %v3_9d64 = add i32 %v2_9d64, 16
  %v4_9d64 = inttoptr i32 %v3_9d64 to i32*
  store i32 %v1_9d64, i32* %v4_9d64, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9b14, %bb108
  %v0_9d6c = call i32 @function_e82c()
  store i32 %v0_9d6c, i32* %r0.global-to-local, align 4
  %v1_9d70 = load i32, i32* @r6, align 4
  %v2_9d70 = add i32 %v1_9d70, 16
  %v3_9d70 = inttoptr i32 %v2_9d70 to i32*
  store i32 %v0_9d6c, i32* %v3_9d70, align 4
  br label %dec_label_pc_9b28

dec_label_pc_9d78:                                ; preds = %dec_label_pc_9b28
  %v0_9d78 = load i32, i32* @r7, align 4
  %v1_9d78 = add i32 %v0_9d78, 8
  store i32 %v1_9d78, i32* %r0.global-to-local, align 4
  store i32 %v5_9718, i32* @r1, align 4
  %v1_9d80 = inttoptr i32 %v1_9d78 to i8*
  %v2_9d80 = call i32 @function_e9ac(i8* %v1_9d80)
  store i32 %v2_9d80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9b8c

dec_label_pc_9d88:                                ; preds = %dec_label_pc_97b8
  %v1_9d90 = add i32 %v5_9718, 8
  store i32 %v1_9d90, i32* %r1.global-to-local, align 4
  %v1_9d94 = add i32 %v5_9718, 66
  store i32 %v1_9d94, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9a98.preheader

; uselistorder directives
  uselistorder i32 %v1_9d94, { 1, 0 }
  uselistorder i32 %v1_9d90, { 1, 0 }
  uselistorder i32 %v0_9d48, { 0, 2, 1 }
  uselistorder i32 %v0_9d2c, { 0, 2, 1 }
  uselistorder i32 %v3_9cfc, { 0, 2, 1 }
  uselistorder i32 %v2_9cc8, { 1, 0 }
  uselistorder i32 %v8_9ca8, { 1, 2, 0 }
  uselistorder i32 %v3_9c94, { 1, 0 }
  uselistorder i32 %v0_9c84, { 2, 0, 1, 3 }
  uselistorder i32 %v1_9c50, { 1, 2, 0 }
  uselistorder i32 %v1_9c4c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_9bf0, { 1, 0, 2 }
  uselistorder i32 %v4_9bec, { 0, 2, 1 }
  uselistorder i32 %v0_9bcc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_9bbc, { 0, 2, 1 }
  uselistorder i32 %v4_9ba0, { 1, 0 }
  uselistorder i32 %v7_9ac4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9a98, { 1, 0 }
  uselistorder i1 %v7_9ae0, { 2, 1, 0 }
  uselistorder i1 %v2_9d58, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9ce8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9a20, { 1, 0, 2 }
  uselistorder i32 %v3_98a8, { 1, 0, 2 }
  uselistorder i32 %v3_9888, { 1, 0 }
  uselistorder i32 %tmp91, { 1, 0 }
  uselistorder i32 %v1_982c, { 1, 0 }
  uselistorder i32 %v1_9828, { 2, 1, 0 }
  uselistorder i32 %v1_9814, { 1, 0 }
  uselistorder i32 %v1_9810, { 2, 1, 0 }
  uselistorder i32 %v1_9808, { 0, 2, 1 }
  uselistorder i32 %v3_9800, { 2, 1, 0 }
  uselistorder i32 %v0_97dc, { 1, 0, 2 }
  uselistorder i32 %v3_97d0, { 2, 1, 3, 0 }
  uselistorder i32 %v1_97c8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v3_97c4, { 1, 0 }
  uselistorder i32 %v0_97c4, { 2, 1, 0 }
  uselistorder i32 %v0_97bc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_97b8, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_97b0, { 1, 0 }
  uselistorder i1 %v7_9784, { 1, 0 }
  uselistorder i32 %v3_9780, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_976c, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_9738, { 1, 2, 0 }
  uselistorder i32 %v5_9718, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_96cc, { 1, 0 }
  uselistorder i8 %v5_96bc, { 1, 0 }
  uselistorder i32 %v5_96a0, { 1, 0 }
  uselistorder i32 %v6_9664, { 1, 0 }
  uselistorder i32 %v2_964c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_9630, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %sl.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r8.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 7, 8, 5, 6, 10, 9, 34, 1, 35, 36, 37, 33, 38, 39, 41, 40, 42, 43, 44, 45, 46, 11, 15, 12, 13, 14, 18, 16, 17, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 22, 23, 24, 25, 26, 27, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_9d6c, { 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %dec_label_pc_9c68, { 1, 0 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %dec_label_pc_9b28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9a98.preheader, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
}

define i32 @function_9da8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_9da8 = load i32, i32* @r4, align 4
  %v15_9da8 = load i32, i32* @r8, align 4
  %v1_9dac = urem i32 %arg1, 256
  store i32 %v1_9dac, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_9dac, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_9dc4 = urem i32 %arg3, 256
  store i32 %v1_9dc4, i32* @r4, align 4
  %v2_9dc8 = call i32 @function_137ec(i32 %v1_9dac, i32 4)
  %v0_9dcc = load i32, i32* @r5, align 4
  store i32 %v0_9dcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9ddc = load i32, i32* @r4, align 4
  store i32 %v0_9ddc, i32* %r0.global-to-local, align 4
  %v5_9de0 = inttoptr i32 %v0_9dcc to i32*
  %v6_9de0 = call i32 @function_85e0(i32 %v0_9ddc, i32* %v5_9de0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9df8 = load i32, i32* @r5, align 4
  store i32 %v0_9df8, i32* %r1.global-to-local, align 4
  %v0_9dfc = load i32, i32* @r4, align 4
  store i32 %v0_9dfc, i32* %r0.global-to-local, align 4
  %v5_9e00 = trunc i32 %v6_9de0 to i8
  %v6_9e04 = inttoptr i32 %v0_9df8 to i32*
  %v7_9e04 = call i32 @function_85e0(i32 %v0_9dfc, i32* %v6_9e04, i32 3, i32 65535)
  %v0_9e08 = load i32, i32* @r5, align 4
  store i32 %v0_9e08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9e04, i32* @r7, align 4
  %v0_9e18 = load i32, i32* @r4, align 4
  store i32 %v0_9e18, i32* %r0.global-to-local, align 4
  %v4_9e1c = inttoptr i32 %v0_9e08 to i32*
  %v5_9e1c = call i32 @function_85e0(i32 %v0_9e18, i32* %v4_9e1c, i32 4, i32 64)
  %v0_9e28 = load i32, i32* @r5, align 4
  store i32 %v0_9e28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r4, align 4
  store i32 %v0_9e34, i32* %r0.global-to-local, align 4
  %v5_9e38 = trunc i32 %v5_9e1c to i8
  %v6_9e3c = inttoptr i32 %v0_9e28 to i32*
  %v7_9e3c = call i32 @function_85e0(i32 %v0_9e34, i32* %v6_9e3c, i32 5, i32 1)
  %v1_9e48 = urem i32 %v7_9e3c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* @r5, align 4
  store i32 %v0_9e54, i32* %r1.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r4, align 4
  store i32 %v0_9e58, i32* %r0.global-to-local, align 4
  %v5_9e60 = inttoptr i32 %v0_9e54 to i32*
  %v6_9e60 = call i32 @function_85e0(i32 %v0_9e58, i32* %v5_9e60, i32 6, i32 65535)
  %v0_9e68 = load i32, i32* @r5, align 4
  store i32 %v0_9e68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9e60, i32* @sl, align 4
  %v0_9e78 = load i32, i32* @r4, align 4
  store i32 %v0_9e78, i32* %r0.global-to-local, align 4
  %v4_9e7c = inttoptr i32 %v0_9e68 to i32*
  %v5_9e7c = call i32 @function_85e0(i32 %v0_9e78, i32* %v4_9e7c, i32 7, i32 65535)
  %v0_9e80 = load i32, i32* @r5, align 4
  store i32 %v0_9e80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9e7c, i32* @r8, align 4
  %v0_9e90 = load i32, i32* @r4, align 4
  store i32 %v0_9e90, i32* %r0.global-to-local, align 4
  %v4_9e94 = inttoptr i32 %v0_9e80 to i32*
  %v5_9e94 = call i32 @function_85e0(i32 %v0_9e90, i32* %v4_9e94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9ea4 = load i32, i32* @r5, align 4
  store i32 %v0_9ea4, i32* %r1.global-to-local, align 4
  %v0_9ea8 = load i32, i32* @r4, align 4
  store i32 %v0_9ea8, i32* %r0.global-to-local, align 4
  %v4_9eac = inttoptr i32 %v0_9ea4 to i32*
  %v5_9eac = call i32 @function_85e0(i32 %v0_9ea8, i32* %v4_9eac, i32 1, i32 1)
  %v1_9eb4 = urem i32 %v5_9eac, 256
  %v0_9eb8 = load i32, i32* @r5, align 4
  store i32 %v0_9eb8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r4, align 4
  store i32 %v0_9ec4, i32* %r0.global-to-local, align 4
  %v5_9ecc = inttoptr i32 %v0_9eb8 to i32*
  %v6_9ecc = call i32 @function_85e0(i32 %v0_9ec4, i32* %v5_9ecc, i32 19, i32 0)
  %v0_9ed4 = load i32, i32* @r5, align 4
  store i32 %v0_9ed4, i32* %r1.global-to-local, align 4
  %v2_9ed8 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_9ed8, i32* %r3.global-to-local, align 4
  store i32 %v6_9ecc, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9ee4 = load i32, i32* @r4, align 4
  store i32 %v0_9ee4, i32* %r0.global-to-local, align 4
  %v4_9ee8 = inttoptr i32 %v0_9ed4 to i32*
  %v5_9ee8 = call i32 @function_85e0(i32 %v0_9ee4, i32* %v4_9ee8, i32 25, i32 %v2_9ed8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9efc = call i32 @function_13500(i32 2, i32 3, i32 6)
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  %v7_9f00 = icmp eq i32 %v3_9efc, -1
  store i1 %v7_9f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f00, label %dec_label_pc_a380, label %dec_label_pc_9f0c

dec_label_pc_9f0c:                                ; preds = %dec_label_pc_9da8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9f14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9f14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_9f28 = call i32 @function_134d0(i32 %v3_9efc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_9f28, i32* %r0.global-to-local, align 4
  %v7_9f2c = icmp eq i32 %v6_9f28, -1
  store i1 %v7_9f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f2c, label %dec_label_pc_a378, label %dec_label_pc_9f34

dec_label_pc_9f34:                                ; preds = %dec_label_pc_9f0c
  %v0_9f34 = load i32, i32* @sl, align 4
  %v0_9f40 = load i32, i32* @r8, align 4
  %v3_9f40 = mul i32 %v0_9f40, 65536
  store i32 %v3_9f40, i32* %r8.global-to-local, align 4
  %v0_9f44 = load i32, i32* @r7, align 4
  %v0_9f48 = load i32, i32* @r6, align 4
  %v1_9f48 = urem i32 %v0_9f48, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9f50 = urem i32 %v0_9f34, 65536
  store i32 %v3_9f50, i32* %r2.global-to-local, align 4
  %v3_9f54 = urem i32 %v0_9f40, 65536
  store i32 %v3_9f54, i32* %r3.global-to-local, align 4
  %v0_9f58 = load i32, i32* @fp, align 4
  %v2_9f58 = icmp eq i32 %v0_9f58, 0
  store i1 %v2_9f58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %v3_9f68 = urem i32 %v0_9f44, 65536
  store i32 %v3_9f68, i32* @sl, align 4
  %tmp84 = icmp slt i32 %v0_9f58, 1
  br i1 %tmp84, label %dec_label_pc_a4a4, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f34
  %v3_9f7c = mul i32 %v5_9e94, 65536
  %v1_9f80 = add i32 %v3_9f7c, 3407872
  %v3_9f88 = udiv i32 %v1_9f80, 256
  %v0_9f44.not = or i32 %v0_9f44, -65536
  %v1_9f98 = xor i32 %v0_9f44.not, 65535
  %v1_9f9c = urem i32 %v0_9f40, 256
  %tmp85 = mul nsw i32 %v1_9f98, 256
  %v1_9fb4 = and i32 %v3_9f88, 65280
  %v1_9fb8 = add i32 %v3_9f7c, 524288
  %v4_9fbc = udiv i32 %v1_9f80, 16777216
  %v5_9fbc = or i32 %v1_9fb4, %v4_9fbc
  store i32 %v5_9fbc, i32* %r0.global-to-local, align 4
  %v1_9fc0 = add i32 %v3_9f7c, 1835008
  %v1_9fc8 = and i32 %tmp85, 65280
  store i32 %v1_9fc8, i32* @lr, align 4
  %tmp86 = udiv i32 %v1_9f98, 256
  %tmp87 = udiv i32 %v0_9f44, 256
  %v5_9fdc = trunc i32 %tmp86 to i8
  %tmp88 = udiv i32 %v0_9f34, 256
  %sext29 = mul i32 %tmp87, 16777216
  %v4_9ffc = sdiv i32 %sext29, 16777216
  %v3_a008 = mul nuw nsw i32 %v1_9f9c, 256
  store i32 %v3_a008, i32* @r5, align 4
  %v3_a00c = udiv i32 %v1_9fb8, 256
  %tmp89 = udiv i32 %v0_9f40, 256
  %v4_a014 = urem i32 %tmp89, 256
  %v5_a014 = or i32 %v4_a014, %v3_a008
  store i32 %v5_a014, i32* @r7, align 4
  %v3_a018 = ashr i32 %sext29, 31
  %v3_a024 = sdiv i32 %v1_9fc0, 16777216
  %v1_a028 = and i32 %v3_a00c, 65280
  store i32 %v1_a028, i32* @r6, align 4
  %sext30 = mul i32 %tmp88, 16777216
  %v4_a030 = sdiv i32 %sext30, 16777216
  %v3_a034 = ashr i32 %v1_9fc0, 31
  %v3_a038 = udiv i32 %v1_9f98, 65536
  %v4_a03c = udiv i32 %v1_9fb8, 16777216
  %v5_a03c = or i32 %v1_a028, %v4_a03c
  store i32 %v5_a03c, i32* %r8.global-to-local, align 4
  %v3_a048 = ashr i32 %sext30, 31
  store i32 %v3_a048, i32* %r1.global-to-local, align 4
  store i32 %v1_9f9c, i32* %r2.global-to-local, align 4
  %v3_a05041 = udiv i32 %v1_a028, 256
  store i32 %v3_a05041, i32* %r3.global-to-local, align 4
  %v5_a058 = trunc i32 %v3_a048 to i8
  store i32 0, i32* @r4, align 4
  %v4_a0b4 = sext i8 %v5_9e38 to i32
  %sext = mul i32 %v1_9f80, 256
  %v4_a0bc = sdiv i32 %sext, 16777216
  %sext16 = mul nuw i32 %v4_9fbc, 16777216
  %v4_a0cc = sdiv i32 %sext16, 16777216
  %v2_a1a0 = icmp eq i32 %v1_9f48, 0
  %sext20 = mul i32 %v1_9fb8, 256
  %v4_a1c0 = sdiv i32 %sext20, 16777216
  %sext21 = mul i32 %v0_9f40, 16777216
  %v7_a1d8 = sdiv i32 %sext21, 16777216
  %v1_a0c8 = trunc i32 %v4_a0bc to i8
  br label %dec_label_pc_a068

dec_label_pc_a068:                                ; preds = %bb96, %dec_label_pc_9f78
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a074 = call i32 @function_137ec(i32 1510, i32 4)
  store i32 %v2_a074, i32* %r0.global-to-local, align 4
  store i32 %v2_9dc8, i32* %r1.global-to-local, align 4
  %v3_a07c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a07c, i32* %r3.global-to-local, align 4
  %v2_a080 = load i32, i32* @r4, align 4
  %v5_a080 = mul i32 %v2_a080, 4
  %v6_a080 = add i32 %v5_a080, %v2_9dc8
  %v7_a080 = inttoptr i32 %v6_a080 to i32*
  store i32 %v2_a074, i32* %v7_a080, align 4
  %v0_a084 = load i32, i32* %r1.global-to-local, align 4
  %v1_a084 = load i32, i32* %r3.global-to-local, align 4
  %v4_a084 = mul i32 %v1_a084, 4
  %v5_a084 = add i32 %v4_a084, %v0_a084
  %v6_a084 = inttoptr i32 %v5_a084 to i32*
  %v7_a084 = load i32, i32* %v6_a084, align 4
  store i32 %v7_a084, i32* %r4.global-to-local, align 4
  %v1_a088 = inttoptr i32 %v7_a084 to i8*
  %v2_a088 = load i8, i8* %v1_a088, align 1
  %tmp = urem i8 %v2_a088, 16
  %v1_a08c = zext i8 %tmp to i32
  %v1_a090 = or i32 %v1_a08c, 64
  store i32 %v1_a090, i32* %r2.global-to-local, align 4
  %v1_a094 = trunc i32 %v1_a090 to i8
  store i8 %v1_a094, i8* %v1_a088, align 1
  %v0_a098 = load i32, i32* %r4.global-to-local, align 4
  %v1_a098 = inttoptr i32 %v0_a098 to i8*
  %v2_a098 = load i8, i8* %v1_a098, align 1
  %v1_a09c = and i8 %v2_a098, -16
  %v1_a0a0 = or i8 %v1_a09c, 5
  store i32 %v1_9e48, i32* %r2.global-to-local, align 4
  store i8 %v1_a0a0, i8* %v1_a098, align 1
  %v2_a0b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0b0 = add i32 %v2_a0b0, 1
  %v4_a0b0 = inttoptr i32 %v3_a0b0 to i8*
  store i8 %v5_9e00, i8* %v4_a0b0, align 1
  store i32 %v4_a0b4, i32* %r1.global-to-local, align 4
  %v2_a0b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0b8 = add i32 %v2_a0b8, 8
  %v4_a0b8 = inttoptr i32 %v3_a0b8 to i8*
  store i8 %v5_9e38, i8* %v4_a0b8, align 1
  store i32 %v4_a0bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a0c4 = load i32, i32* %r2.global-to-local, align 4
  %v9_a0c4 = icmp eq i32 %v0_a0c4, 0
  store i1 %v9_a0c4, i1* %cpsr_z.global-to-local, align 1
  %v2_a0c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0c8 = add i32 %v2_a0c8, 3
  %v4_a0c8 = inttoptr i32 %v3_a0c8 to i8*
  store i8 %v1_a0c8, i8* %v4_a0c8, align 1
  store i32 %v4_a0cc, i32* %r2.global-to-local, align 4
  %v0_a0d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0d0, label %.thread23, label %.thread

.thread:                                          ; preds = %dec_label_pc_a068
  %v1_a0d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_a0d0, i32* %r3.global-to-local, align 4
  %v2_a0d4 = trunc i32 %v1_a0d0 to i8
  %v3_a0d4 = load i32, i32* %r4.global-to-local, align 4
  %v4_a0d4 = add i32 %v3_a0d4, 7
  %v5_a0d4 = inttoptr i32 %v4_a0d4 to i8*
  store i8 %v2_a0d4, i8* %v5_a0d4, align 1
  %v0_a0d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0d8.pr.pr, label %.thread23, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a0dc = load i32, i32* %r4.global-to-local, align 4
  %v4_a0dc = add i32 %v3_a0dc, 6
  %v5_a0dc = inttoptr i32 %v4_a0dc to i8*
  store i8 64, i8* %v5_a0dc, align 1
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_a068, %.thread, %bb
  %v0_a0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0e0 = trunc i32 %v0_a0e0 to i8
  %v2_a0e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0e0 = add i32 %v2_a0e0, 2
  %v4_a0e0 = inttoptr i32 %v3_a0e0 to i8*
  store i8 %v1_a0e0, i8* %v4_a0e0, align 1
  store i32 %v3_a018, i32* %r2.global-to-local, align 4
  store i32 %v4_9ffc, i32* %r1.global-to-local, align 4
  %v2_a0f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f0 = add i32 %v2_a0f0, 9
  %v4_a0f0 = inttoptr i32 %v3_a0f0 to i8*
  store i8 47, i8* %v4_a0f0, align 1
  %v0_a0f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0f4 = trunc i32 %v0_a0f4 to i8
  %v2_a0f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f4 = add i32 %v2_a0f4, 5
  %v4_a0f4 = inttoptr i32 %v3_a0f4 to i8*
  store i8 %v1_a0f4, i8* %v4_a0f4, align 1
  %v3_a0f8 = load i32, i32* %stack_var_-40, align 4
  %v5_a100 = mul i32 %v3_a0f8, 24
  store i32 %v5_a100, i32* %r3.global-to-local, align 4
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  %v1_a108 = load i32, i32* %r4.global-to-local, align 4
  %v2_a108 = add i32 %v1_a108, 12
  %v3_a108 = inttoptr i32 %v2_a108 to i32*
  store i32 %v5_9ee8, i32* %v3_a108, align 4
  %v0_a10c = load i32, i32* %r3.global-to-local, align 4
  %v1_a10c = load i32, i32* @sb, align 4
  %v2_a10c = add i32 %v1_a10c, %v0_a10c
  store i32 %v2_a10c, i32* %r3.global-to-local, align 4
  %v0_a110 = load i32, i32* %r1.global-to-local, align 4
  %v1_a110 = trunc i32 %v0_a110 to i8
  %v2_a110 = load i32, i32* %r4.global-to-local, align 4
  %v3_a110 = add i32 %v2_a110, 4
  %v4_a110 = inttoptr i32 %v3_a110 to i8*
  store i8 %v1_a110, i8* %v4_a110, align 1
  %v0_a114 = load i32, i32* %r3.global-to-local, align 4
  %v1_a114 = add i32 %v0_a114, 16
  %v2_a114 = inttoptr i32 %v1_a114 to i32*
  %v3_a114 = load i32, i32* %v2_a114, align 4
  store i32 %v3_a114, i32* %r2.global-to-local, align 4
  %v0_a118 = load i32, i32* %r4.global-to-local, align 4
  %v1_a118 = add i32 %v0_a118, 20
  store i32 %v1_a118, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_a120 = load i32, i32* %r0.global-to-local, align 4
  %v1_a120 = trunc i32 %v0_a120 to i8
  %v3_a120 = add i32 %v0_a118, 23
  %v4_a120 = inttoptr i32 %v3_a120 to i8*
  store i8 %v1_a120, i8* %v4_a120, align 1
  %v0_a124 = load i32, i32* %r3.global-to-local, align 4
  %v1_a124 = trunc i32 %v0_a124 to i8
  %v2_a124 = load i32, i32* %r1.global-to-local, align 4
  %v3_a124 = add i32 %v2_a124, 2
  %v4_a124 = inttoptr i32 %v3_a124 to i8*
  store i8 %v1_a124, i8* %v4_a124, align 1
  %v0_a128 = load i32, i32* %r4.global-to-local, align 4
  %v1_a128 = add i32 %v0_a128, 24
  %v2_a128 = inttoptr i32 %v1_a128 to i8*
  %v3_a128 = load i8, i8* %v2_a128, align 1
  %tmp104 = urem i8 %v3_a128, 16
  %v1_a12c = zext i8 %tmp104 to i32
  %v1_a130 = or i32 %v1_a12c, 64
  store i32 %v1_a130, i32* %r3.global-to-local, align 4
  %v1_a134 = trunc i32 %v1_a130 to i8
  store i8 %v1_a134, i8* %v2_a128, align 1
  %v0_a138 = load i32, i32* %r2.global-to-local, align 4
  %v1_a138 = load i32, i32* %r4.global-to-local, align 4
  %v2_a138 = add i32 %v1_a138, 16
  %v3_a138 = inttoptr i32 %v2_a138 to i32*
  store i32 %v0_a138, i32* %v3_a138, align 4
  %v0_a13c = load i32, i32* %r4.global-to-local, align 4
  %v1_a13c = add i32 %v0_a13c, 24
  %v2_a13c = inttoptr i32 %v1_a13c to i8*
  %v3_a13c = load i8, i8* %v2_a13c, align 1
  %v1_a140 = and i8 %v3_a13c, -16
  %v1_a144 = or i8 %v1_a140, 5
  store i8 %v1_a144, i8* %v2_a13c, align 1
  %v0_a150 = load i32, i32* %r4.global-to-local, align 4
  %v1_a150 = add i32 %v0_a150, 24
  store i32 %v1_a150, i32* @r5, align 4
  %v3_a154 = add i32 %v0_a150, 25
  %v4_a154 = inttoptr i32 %v3_a154 to i8*
  store i8 %v5_9e00, i8* %v4_a154, align 1
  store i32 %v3_a024, i32* %r1.global-to-local, align 4
  store i32 %tmp86, i32* %r3.global-to-local, align 4
  store i32 %v3_a034, i32* %r2.global-to-local, align 4
  %v2_a164 = load i32, i32* @r5, align 4
  %v3_a164 = add i32 %v2_a164, 4
  %v4_a164 = inttoptr i32 %v3_a164 to i8*
  store i8 %v5_9fdc, i8* %v4_a164, align 1
  %v0_a168 = load i32, i32* %r1.global-to-local, align 4
  %v1_a168 = trunc i32 %v0_a168 to i8
  %v2_a168 = load i32, i32* @r5, align 4
  %v3_a168 = add i32 %v2_a168, 2
  %v4_a168 = inttoptr i32 %v3_a168 to i8*
  store i8 %v1_a168, i8* %v4_a168, align 1
  %v0_a16c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a16c, label %bb91, label %bb90

bb90:                                             ; preds = %.thread23
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb91

bb91:                                             ; preds = %.thread23, %bb90
  store i32 %v3_a038, i32* %r1.global-to-local, align 4
  %v0_a174 = load i32, i32* %r2.global-to-local, align 4
  %v1_a174 = trunc i32 %v0_a174 to i8
  %v2_a174 = load i32, i32* @r5, align 4
  %v3_a174 = add i32 %v2_a174, 3
  %v4_a174 = inttoptr i32 %v3_a174 to i8*
  store i8 %v1_a174, i8* %v4_a174, align 1
  store i32 %v4_a0b4, i32* %r2.global-to-local, align 4
  %v0_a17c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a17c, label %bb93, label %bb92

bb92:                                             ; preds = %bb91
  %v1_a17c = load i32, i32* %r3.global-to-local, align 4
  %v2_a17c = trunc i32 %v1_a17c to i8
  %v3_a17c = load i32, i32* @r5, align 4
  %v4_a17c = add i32 %v3_a17c, 6
  %v5_a17c = inttoptr i32 %v4_a17c to i8*
  store i8 %v2_a17c, i8* %v5_a17c, align 1
  br label %bb93

bb93:                                             ; preds = %bb91, %bb92
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_a184 = load i32, i32* %r1.global-to-local, align 4
  %v1_a184 = trunc i32 %v0_a184 to i8
  %v2_a184 = load i32, i32* @r5, align 4
  %v3_a184 = add i32 %v2_a184, 5
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v1_a184, i8* %v4_a184, align 1
  %v0_a188 = load i32, i32* %r2.global-to-local, align 4
  %v1_a188 = trunc i32 %v0_a188 to i8
  %v2_a188 = load i32, i32* @r5, align 4
  %v3_a188 = add i32 %v2_a188, 8
  %v4_a188 = inttoptr i32 %v3_a188 to i8*
  store i8 %v1_a188, i8* %v4_a188, align 1
  %v0_a18c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a18c, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v1_a18c = load i32, i32* %r0.global-to-local, align 4
  %v2_a18c = trunc i32 %v1_a18c to i8
  %v3_a18c = load i32, i32* @r5, align 4
  %v4_a18c = add i32 %v3_a18c, 7
  %v5_a18c = inttoptr i32 %v4_a18c to i8*
  store i8 %v2_a18c, i8* %v5_a18c, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %v0_a190 = load i32, i32* %r3.global-to-local, align 4
  %v1_a190 = trunc i32 %v0_a190 to i8
  %v2_a190 = load i32, i32* @r5, align 4
  %v3_a190 = add i32 %v2_a190, 9
  %v4_a190 = inttoptr i32 %v3_a190 to i8*
  store i8 %v1_a190, i8* %v4_a190, align 1
  %v0_a194 = call i32 @function_e82c()
  store i32 %v0_a194, i32* %r0.global-to-local, align 4
  store i32 %v1_9f48, i32* %r1.global-to-local, align 4
  store i1 %v2_a1a0, i1* %cpsr_z.global-to-local, align 1
  %v1_a1a4 = sub i32 1023, %v0_a194
  store i32 %v1_a1a4, i32* %r3.global-to-local, align 4
  br i1 %v2_a1a0, label %.thread24, label %.thread25

.thread24:                                        ; preds = %bb95
  %v2_a1ac = load i32, i32* @r5, align 4
  %v3_a1ac = add i32 %v2_a1ac, 16
  %v4_a1ac = inttoptr i32 %v3_a1ac to i32*
  store i32 %v1_a1a4, i32* %v4_a1ac, align 4
  br label %bb96

.thread25:                                        ; preds = %bb95
  %v1_a1a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_a1a8 = add i32 %v1_a1a8, 16
  %v3_a1a8 = inttoptr i32 %v2_a1a8 to i32*
  %v4_a1a8 = load i32, i32* %v3_a1a8, align 4
  store i32 %v4_a1a8, i32* %r3.global-to-local, align 4
  %v2_a1b0 = load i32, i32* @r5, align 4
  %v3_a1b0 = add i32 %v2_a1b0, 16
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i32*
  store i32 %v4_a1a8, i32* %v4_a1b0, align 4
  br label %bb96

bb96:                                             ; preds = %.thread24, %.thread25
  store i32 %v4_a030, i32* %r3.global-to-local, align 4
  %v0_a1b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 44
  store i32 %v1_a1b8, i32* @r6, align 4
  %v1_a1bc = load i32, i32* @r5, align 4
  %v2_a1bc = add i32 %v1_a1bc, 12
  %v3_a1bc = inttoptr i32 %v2_a1bc to i32*
  store i32 %v0_a194, i32* %v3_a1bc, align 4
  store i32 %v4_a1c0, i32* %r2.global-to-local, align 4
  %v0_a1c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1c4 = trunc i32 %v0_a1c4 to i8
  %v2_a1c4 = load i32, i32* @r6, align 4
  %v3_a1c4 = inttoptr i32 %v2_a1c4 to i8*
  store i8 %v1_a1c4, i8* %v3_a1c4, align 1
  %v3_a1c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a1c8, i32* %r3.global-to-local, align 4
  %v0_a1cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a1cc = trunc i32 %v0_a1cc to i8
  %v2_a1cc = load i32, i32* @r6, align 4
  %v3_a1cc = add i32 %v2_a1cc, 5
  %v4_a1cc = inttoptr i32 %v3_a1cc to i8*
  store i8 %v1_a1cc, i8* %v4_a1cc, align 1
  %v0_a1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d0 = add i32 %v0_a1d0, 1
  store i32 %v1_a1d0, i32* @r4, align 4
  store i32 %v3_a048, i32* %r1.global-to-local, align 4
  store i32 %v7_a1d8, i32* %r2.global-to-local, align 4
  %v1_a1dc = load i32, i32* @fp, align 4
  %v9_a1dc = icmp eq i32 %v1_a1d0, %v1_a1dc
  store i1 %v9_a1dc, i1* %cpsr_z.global-to-local, align 1
  %v2_a1e0 = load i32, i32* @r6, align 4
  %v3_a1e0 = add i32 %v2_a1e0, 1
  %v4_a1e0 = inttoptr i32 %v3_a1e0 to i8*
  store i8 %v5_a058, i8* %v4_a1e0, align 1
  %v0_a1e4 = load i32, i32* @r7, align 4
  %v1_a1e4 = trunc i32 %v0_a1e4 to i8
  %v2_a1e4 = load i32, i32* @r6, align 4
  %v3_a1e4 = add i32 %v2_a1e4, 2
  %v4_a1e4 = inttoptr i32 %v3_a1e4 to i8*
  store i8 %v1_a1e4, i8* %v4_a1e4, align 1
  %v0_a1e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1e8 = trunc i32 %v0_a1e8 to i8
  %v2_a1e8 = load i32, i32* @r6, align 4
  %v3_a1e8 = add i32 %v2_a1e8, 3
  %v4_a1e8 = inttoptr i32 %v3_a1e8 to i8*
  store i8 %v1_a1e8, i8* %v4_a1e8, align 1
  %v0_a1ec = load i32, i32* %r8.global-to-local, align 4
  %v1_a1ec = trunc i32 %v0_a1ec to i8
  %v2_a1ec = load i32, i32* @r6, align 4
  %v3_a1ec = add i32 %v2_a1ec, 4
  %v4_a1ec = inttoptr i32 %v3_a1ec to i8*
  store i8 %v1_a1ec, i8* %v4_a1ec, align 1
  %v0_a1f0 = load i32, i32* @r4, align 4
  store i32 %v0_a1f0, i32* %stack_var_-40, align 4
  %v5_a1f4 = icmp slt i32 %v1_a1d0, %v1_a1dc
  br i1 %v5_a1f4, label %dec_label_pc_a068, label %dec_label_pc_a1f8

dec_label_pc_a1f8:                                ; preds = %bb96
  %v1_a200 = add i32 %v5_9e94, 8
  store i32 %v1_a200, i32* %r3.global-to-local, align 4
  %v1_a204 = add i32 %v5_9e94, 52
  store i32 %v1_a204, i32* %r1.global-to-local, align 4
  %v0_a210.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_a210.preheader

dec_label_pc_a210.preheader:                      ; preds = %dec_label_pc_a1f8, %dec_label_pc_a4a4
  %v0_a210.pre = phi i32 [ %v0_a210.pre.pre, %dec_label_pc_a1f8 ], [ %v0_9f58, %dec_label_pc_a4a4 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_a204, %dec_label_pc_a1f8 ], [ %v1_a4b0, %dec_label_pc_a4a4 ]
  %stack_var_-152.0.ph = phi i32 [ %v1_a200, %dec_label_pc_a1f8 ], [ %v1_a4ac, %dec_label_pc_a4a4 ]
  %v2_a488 = icmp eq i32 %v1_9eb4, 0
  %v2_a288 = icmp eq i32 %v1_9f48, 0
  %v2_a254 = icmp eq i32 %v5_9ee8, -1
  %v7_a254 = icmp eq i32 %v5_9ee8, -1
  br label %dec_label_pc_a210

dec_label_pc_a210:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a210.preheader
  %v0_a210 = phi i32 [ %v0_a210.pre, %dec_label_pc_a210.preheader ], [ %v1_a368, %dec_label_pc_a2a4 ]
  %v2_a210 = icmp eq i32 %v0_a210, 0
  store i1 %v2_a210, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_a210, 1
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a218, %dec_label_pc_a210
  br i1 %tmp97, label %dec_label_pc_a218, label %dec_label_pc_a21c

dec_label_pc_a21c:                                ; preds = %dec_label_pc_a218
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_a228

dec_label_pc_a228:                                ; preds = %dec_label_pc_a2a4, %dec_label_pc_a21c
  %v1_a23c = phi i32 [ %v1_a364, %dec_label_pc_a2a4 ], [ 0, %dec_label_pc_a21c ]
  %v5_a22c = mul i32 %v1_a23c, 24
  %v1_a230 = load i32, i32* @sb, align 4
  %v2_a230 = add i32 %v1_a230, %v5_a22c
  store i32 %v2_a230, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc8, i32* %r1.global-to-local, align 4
  %v1_a238 = add i32 %v2_a230, 20
  %v2_a238 = inttoptr i32 %v1_a238 to i8*
  %v3_a238 = load i8, i8* %v2_a238, align 1
  %v4_a238 = zext i8 %v3_a238 to i32
  store i32 %v4_a238, i32* %r2.global-to-local, align 4
  %v4_a23c = mul i32 %v1_a23c, 4
  %v5_a23c = add i32 %v4_a23c, %v2_9dc8
  %v6_a23c = inttoptr i32 %v5_a23c to i32*
  %v7_a23c = load i32, i32* %v6_a23c, align 4
  store i32 %v7_a23c, i32* @r5, align 4
  %v7_a240 = icmp eq i8 %v3_a238, 31
  store i1 %v7_a240, i1* %cpsr_z.global-to-local, align 1
  %v1_a244 = add i32 %v7_a23c, 24
  store i32 %v1_a244, i32* @r6, align 4
  %v1_a248 = add i32 %v7_a23c, 44
  store i32 %v1_a248, i32* @r7, align 4
  %tmp105 = icmp ult i8 %v3_a238, 32
  br i1 %tmp105, label %dec_label_pc_a388, label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a228
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  store i1 %v7_a254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a254, label %dec_label_pc_a3f0, label %dec_label_pc_a25c

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a250
  store i32 65535, i32* @r4, align 4
  %v0_a264 = load i32, i32* @sl, align 4
  %v9_a264 = icmp eq i32 %v0_a264, 65535
  store i1 %v9_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a264, label %dec_label_pc_a408, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge, %dec_label_pc_a25c
  %v1_a270 = phi i32 [ %v1_a270.pre, %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge ], [ 65535, %dec_label_pc_a25c ]
  store i32 %v3_9f50, i32* %r3.global-to-local, align 4
  %v9_a270 = icmp eq i32 %v3_9f50, %v1_a270
  store i1 %v9_a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a270, label %dec_label_pc_a440, label %dec_label_pc_a278

dec_label_pc_a278:                                ; preds = %dec_label_pc_a408.dec_label_pc_a278_crit_edge, %dec_label_pc_a26c
  %v1_a27c = phi i32 [ %v1_a27c.pre, %dec_label_pc_a408.dec_label_pc_a278_crit_edge ], [ %v1_a270, %dec_label_pc_a26c ]
  store i32 %v3_9f54, i32* %r1.global-to-local, align 4
  %v9_a27c = icmp eq i32 %v3_9f54, %v1_a27c
  store i1 %v9_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a27c, label %dec_label_pc_a45c, label %dec_label_pc_a284

dec_label_pc_a284:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a278
  store i32 %v1_9f48, i32* %r2.global-to-local, align 4
  store i1 %v2_a288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a288, label %dec_label_pc_a480, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_a284
  %v1_a28c = load i32, i32* @r5, align 4
  %v2_a28c = add i32 %v1_a28c, 16
  %v3_a28c = inttoptr i32 %v2_a28c to i32*
  %v4_a28c = load i32, i32* %v3_a28c, align 4
  store i32 %v4_a28c, i32* %r3.global-to-local, align 4
  %v2_a290 = load i32, i32* @r6, align 4
  %v3_a290 = add i32 %v2_a290, 16
  %v4_a290 = inttoptr i32 %v3_a290 to i32*
  store i32 %v4_a28c, i32* %v4_a290, align 4
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %bb102, %.thread26
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a488, label %dec_label_pc_a2a4, label %dec_label_pc_a494

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a480, %dec_label_pc_a494
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2a8 = load i32, i32* @r8, align 4
  %v1_a2a8 = trunc i32 %v0_a2a8 to i8
  %v2_a2a8 = load i32, i32* @r5, align 4
  %v3_a2a8 = add i32 %v2_a2a8, 10
  %v4_a2a8 = inttoptr i32 %v3_a2a8 to i8*
  store i8 %v1_a2a8, i8* %v4_a2a8, align 1
  %v0_a2ac = load i32, i32* @r8, align 4
  %v1_a2ac = trunc i32 %v0_a2ac to i8
  %v2_a2ac = load i32, i32* @r5, align 4
  %v3_a2ac = add i32 %v2_a2ac, 11
  %v4_a2ac = inttoptr i32 %v3_a2ac to i8*
  store i8 %v1_a2ac, i8* %v4_a2ac, align 1
  %v0_a2b0 = load i32, i32* @r5, align 4
  store i32 %v0_a2b0, i32* @r0, align 4
  %v2_a2b4 = call i32 @function_d0b8(i32 %v0_a2b0, i32 20)
  %v3_a2b4 = trunc i32 %v2_a2b4 to i8
  %v4_a2b8 = sdiv i32 %v2_a2b4, 256
  store i32 %v4_a2b8, i32* %r3.global-to-local, align 4
  %v1_a2bc = trunc i32 %v4_a2b8 to i8
  %v2_a2bc = load i32, i32* @r5, align 4
  %v3_a2bc = add i32 %v2_a2bc, 11
  %v4_a2bc = inttoptr i32 %v3_a2bc to i8*
  store i8 %v1_a2bc, i8* %v4_a2bc, align 1
  %v3_a2c0 = load i32, i32* @r5, align 4
  %v4_a2c0 = add i32 %v3_a2c0, 10
  %v5_a2c0 = inttoptr i32 %v4_a2c0 to i8*
  store i8 %v3_a2b4, i8* %v5_a2c0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2c8 = load i32, i32* @r8, align 4
  %v1_a2c8 = trunc i32 %v0_a2c8 to i8
  %v2_a2c8 = load i32, i32* @r6, align 4
  %v3_a2c8 = add i32 %v2_a2c8, 10
  %v4_a2c8 = inttoptr i32 %v3_a2c8 to i8*
  store i8 %v1_a2c8, i8* %v4_a2c8, align 1
  %v0_a2cc = load i32, i32* @r8, align 4
  %v1_a2cc = trunc i32 %v0_a2cc to i8
  %v2_a2cc = load i32, i32* @r6, align 4
  %v3_a2cc = add i32 %v2_a2cc, 11
  %v4_a2cc = inttoptr i32 %v3_a2cc to i8*
  store i8 %v1_a2cc, i8* %v4_a2cc, align 1
  %v0_a2d0 = load i32, i32* @r6, align 4
  store i32 %v0_a2d0, i32* @r0, align 4
  %v2_a2d4 = call i32 @function_d0b8(i32 %v0_a2d0, i32 20)
  %v3_a2d4 = trunc i32 %v2_a2d4 to i8
  store i32 %v2_a2d4, i32* %r0.global-to-local, align 4
  %v4_a2d8 = sdiv i32 %v2_a2d4, 256
  store i32 %v4_a2d8, i32* %r3.global-to-local, align 4
  %v3_a2dc = load i32, i32* @r6, align 4
  %v4_a2dc = add i32 %v3_a2dc, 10
  %v5_a2dc = inttoptr i32 %v4_a2dc to i8*
  store i8 %v3_a2d4, i8* %v5_a2dc, align 1
  %v0_a2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a2e0 = trunc i32 %v0_a2e0 to i8
  %v2_a2e0 = load i32, i32* @r6, align 4
  %v3_a2e0 = add i32 %v2_a2e0, 11
  %v4_a2e0 = inttoptr i32 %v3_a2e0 to i8*
  store i8 %v1_a2e0, i8* %v4_a2e0, align 1
  %v0_a2e4 = load i32, i32* @r7, align 4
  %v1_a2e4 = add i32 %v0_a2e4, 4
  %v2_a2e4 = inttoptr i32 %v1_a2e4 to i8*
  %v3_a2e4 = load i8, i8* %v2_a2e4, align 1
  %v4_a2e4 = zext i8 %v3_a2e4 to i32
  store i32 %v4_a2e4, i32* %r3.global-to-local, align 4
  %v1_a2e8 = add i32 %v0_a2e4, 5
  %v2_a2e8 = inttoptr i32 %v1_a2e8 to i8*
  %v3_a2e8 = load i8, i8* %v2_a2e8, align 1
  %v4_a2e8 = zext i8 %v3_a2e8 to i32
  store i32 %v0_a2e4, i32* @r1, align 4
  %v4_a2f0 = mul nuw nsw i32 %v4_a2e8, 256
  %v5_a2f0 = or i32 %v4_a2f0, %v4_a2e4
  store i32 %v5_a2f0, i32* %r2.global-to-local, align 4
  %v0_a2f4 = load i32, i32* @r8, align 4
  %v1_a2f4 = trunc i32 %v0_a2f4 to i8
  %v3_a2f4 = add i32 %v0_a2e4, 6
  %v4_a2f4 = inttoptr i32 %v3_a2f4 to i8*
  store i8 %v1_a2f4, i8* %v4_a2f4, align 1
  store i32 %stack_var_-152.0.ph, i32* %r3.global-to-local, align 4
  %v0_a2fc = load i32, i32* @r8, align 4
  %v1_a2fc = trunc i32 %v0_a2fc to i8
  %v2_a2fc = load i32, i32* @r7, align 4
  %v3_a2fc = add i32 %v2_a2fc, 7
  %v4_a2fc = inttoptr i32 %v3_a2fc to i8*
  store i8 %v1_a2fc, i8* %v4_a2fc, align 1
  %v0_a300 = load i32, i32* @r6, align 4
  store i32 %v0_a300, i32* %r0.global-to-local, align 4
  %v4_a304 = call i32 @function_d114(i32 %v0_a300, i32 %v0_a2e4, i32 %v5_a2f0, i32 %stack_var_-152.0.ph)
  %v5_a304 = trunc i32 %v4_a304 to i8
  store i32 %v4_a304, i32* %r0.global-to-local, align 4
  %v3_a308 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a308, i32* %r3.global-to-local, align 4
  %v3_a30c = mul i32 %v3_a308, 32
  store i32 %v3_a30c, i32* %r2.global-to-local, align 4
  %v0_a310 = load i32, i32* @r5, align 4
  %v1_a310 = add i32 %v0_a310, 16
  %v2_a310 = inttoptr i32 %v1_a310 to i32*
  %v3_a310 = load i32, i32* %v2_a310, align 4
  store i32 %v3_a310, i32* %r1.global-to-local, align 4
  %v5_a314 = mul i32 %v3_a308, 24
  store i32 %v5_a314, i32* %r2.global-to-local, align 4
  %v4_a31842 = udiv i32 %v4_a304, 256
  %v1_a31c = trunc i32 %v4_a31842 to i8
  %v2_a31c = load i32, i32* @r7, align 4
  %v3_a31c = add i32 %v2_a31c, 7
  %v4_a31c = inttoptr i32 %v3_a31c to i8*
  store i8 %v1_a31c, i8* %v4_a31c, align 1
  %v0_a320 = load i32, i32* %r2.global-to-local, align 4
  %v1_a320 = load i32, i32* @sb, align 4
  %v2_a320 = add i32 %v1_a320, %v0_a320
  store i32 %v2_a320, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_a328 = load i32, i32* @r7, align 4
  %v4_a328 = add i32 %v3_a328, 6
  %v5_a328 = inttoptr i32 %v4_a328 to i8*
  store i8 %v5_a304, i8* %v5_a328, align 1
  %v0_a32c = load i32, i32* %r1.global-to-local, align 4
  %v1_a32c = load i32, i32* %lr.global-to-local, align 4
  %v2_a32c = add i32 %v1_a32c, 4
  %v3_a32c = inttoptr i32 %v2_a32c to i32*
  store i32 %v0_a32c, i32* %v3_a32c, align 4
  %v0_a330 = load i32, i32* %r3.global-to-local, align 4
  %v1_a330 = trunc i32 %v0_a330 to i8
  %v2_a330 = load i32, i32* %r2.global-to-local, align 4
  %v3_a330 = load i32, i32* @sb, align 4
  %v4_a330 = add i32 %v3_a330, %v2_a330
  %v5_a330 = inttoptr i32 %v4_a330 to i8*
  store i8 %v1_a330, i8* %v5_a330, align 1
  %v0_a334 = load i32, i32* @r8, align 4
  %v1_a334 = trunc i32 %v0_a334 to i8
  %v2_a334 = load i32, i32* %lr.global-to-local, align 4
  %v3_a334 = add i32 %v2_a334, 2
  %v4_a334 = inttoptr i32 %v3_a334 to i8*
  store i8 %v1_a334, i8* %v4_a334, align 1
  %v0_a338 = load i32, i32* @r8, align 4
  %v1_a338 = trunc i32 %v0_a338 to i8
  %v2_a338 = load i32, i32* %lr.global-to-local, align 4
  %v3_a338 = add i32 %v2_a338, 1
  %v4_a338 = inttoptr i32 %v3_a338 to i8*
  store i8 %v1_a338, i8* %v4_a338, align 1
  %v0_a33c = load i32, i32* @r8, align 4
  %v1_a33c = trunc i32 %v0_a33c to i8
  %v2_a33c = load i32, i32* %lr.global-to-local, align 4
  %v3_a33c = add i32 %v2_a33c, 3
  %v4_a33c = inttoptr i32 %v3_a33c to i8*
  store i8 %v1_a33c, i8* %v4_a33c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a348 = load i32, i32* @r5, align 4
  store i32 %v0_a348, i32* %r1.global-to-local, align 4
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-120.0.ph, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* %lr.global-to-local, align 4
  %v6_a35c = inttoptr i32 %v0_a348 to i32*
  %v7_a35c = call i32 @function_1349c(i32 %v3_9efc, i32* %v6_a35c, i32 %stack_var_-120.0.ph, i32 16384, i32 %v0_a354, i32 16)
  %v3_a360 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a360, i32* %r3.global-to-local, align 4
  %v1_a364 = add i32 %v3_a360, 1
  store i32 %v1_a364, i32* %r0.global-to-local, align 4
  %v1_a368 = load i32, i32* @fp, align 4
  %v9_a368 = icmp eq i32 %v1_a364, %v1_a368
  store i1 %v9_a368, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a364, i32* %stack_var_-40, align 4
  %v6_a370 = icmp slt i32 %v1_a364, %v1_a368
  br i1 %v6_a370, label %dec_label_pc_a228, label %dec_label_pc_a210

dec_label_pc_a378:                                ; preds = %dec_label_pc_9f0c
  store i32 %v3_9efc, i32* %r0.global-to-local, align 4
  %v1_a37c = call i32 @function_12c1c(i32 %v3_9efc)
  store i32 %v1_a37c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a380

dec_label_pc_a380:                                ; preds = %dec_label_pc_9da8, %dec_label_pc_a378
  %v29_a384 = phi i32 [ %v3_9efc, %dec_label_pc_9da8 ], [ %v1_a37c, %dec_label_pc_a378 ]
  store i32 %v3_9da8, i32* %r4.global-to-local, align 4
  store i32 %v15_9da8, i32* %r8.global-to-local, align 4
  ret i32 %v29_a384

dec_label_pc_a388:                                ; preds = %dec_label_pc_a228
  %v1_a388 = add i32 %v2_a230, 16
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  %v3_a388 = load i32, i32* %v2_a388, align 4
  store i32 %v3_a388, i32* %r4.global-to-local, align 4
  %v0_a38c = call i32 @function_e82c()
  store i32 %v0_a38c, i32* %r0.global-to-local, align 4
  %v3_a390 = load i32, i32* %stack_var_-40, align 4
  %v5_a398 = mul i32 %v3_a390, 24
  %v0_a39c = load i32, i32* %r4.global-to-local, align 4
  %v1_a3a0 = load i32, i32* @sb, align 4
  %v2_a3a0 = add i32 %v1_a3a0, %v5_a398
  store i32 %v2_a3a0, i32* %r1.global-to-local, align 4
  %v1_a3a4 = and i32 %v0_a39c, 65280
  store i32 %v1_a3a4, i32* %r3.global-to-local, align 4
  %v1_a39c = udiv i32 %v0_a39c, 256
  %v3_a3a8 = and i32 %v1_a39c, 65280
  store i32 %v3_a3a8, i32* %r2.global-to-local, align 4
  %v1_a3b0 = add i32 %v2_a3a0, 20
  %v2_a3b0 = inttoptr i32 %v1_a3b0 to i8*
  %v3_a3b0 = load i8, i8* %v2_a3b0, align 1
  %v4_a3b0 = zext i8 %v3_a3b0 to i32
  store i32 %v4_a3b0, i32* %lr.global-to-local, align 4
  %v2_a3bc = call i32 @llvm.bswap.i32(i32 %v0_a39c)
  %v7_a3c0 = lshr i32 %v0_a38c, %v4_a3b0
  %v8_a3c0 = add i32 %v7_a3c0, %v2_a3bc
  %v3_a3cc = mul i32 %v8_a3c0, 16777216
  %v1_a3d0 = and i32 %v8_a3c0, 65280
  store i32 %v1_a3d0, i32* %r0.global-to-local, align 4
  store i32 %v5_9ee8, i32* %r2.global-to-local, align 4
  %v4_a3dc = mul nuw nsw i32 %v1_a3d0, 256
  %v5_a3dc = or i32 %v4_a3dc, %v3_a3cc
  store i32 %v5_a3dc, i32* %r1.global-to-local, align 4
  %v2_a3e0 = call i32 @llvm.bswap.i32(i32 %v8_a3c0)
  store i32 %v2_a3e0, i32* %r3.global-to-local, align 4
  store i1 %v7_a254, i1* %cpsr_z.global-to-local, align 1
  %v1_a3e8 = load i32, i32* @r5, align 4
  %v2_a3e8 = add i32 %v1_a3e8, 16
  %v3_a3e8 = inttoptr i32 %v2_a3e8 to i32*
  store i32 %v2_a3e0, i32* %v3_a3e8, align 4
  br i1 %v2_a254, label %dec_label_pc_a3f0, label %dec_label_pc_a25c

dec_label_pc_a3f0:                                ; preds = %dec_label_pc_a388, %dec_label_pc_a250
  %v0_a3f0 = call i32 @function_e82c()
  store i32 %v0_a3f0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_a3fc = load i32, i32* @sl, align 4
  %v9_a3fc = icmp eq i32 %v0_a3fc, 65535
  store i1 %v9_a3fc, i1* %cpsr_z.global-to-local, align 1
  %v1_a400 = load i32, i32* @r5, align 4
  %v2_a400 = add i32 %v1_a400, 12
  %v3_a400 = inttoptr i32 %v2_a400 to i32*
  store i32 %v0_a3f0, i32* %v3_a400, align 4
  br i1 %v9_a3fc, label %dec_label_pc_a408, label %dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge

dec_label_pc_a3f0.dec_label_pc_a26c_crit_edge:    ; preds = %dec_label_pc_a3f0
  %v1_a270.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a26c

dec_label_pc_a408:                                ; preds = %dec_label_pc_a3f0, %dec_label_pc_a25c
  %v0_a408 = call i32 @function_e82c()
  %v3_a410 = urem i32 %v0_a408, 65536
  store i32 %v3_a410, i32* %r0.global-to-local, align 4
  %v3_a41415 = udiv i32 %v0_a408, 256
  %v1_a418 = trunc i32 %v3_a41415 to i8
  %v2_a418 = load i32, i32* @r5, align 4
  %v3_a418 = add i32 %v2_a418, 5
  %v4_a418 = inttoptr i32 %v3_a418 to i8*
  store i8 %v1_a418, i8* %v4_a418, align 1
  %v0_a41c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v3_9f50, i32* %r3.global-to-local, align 4
  %v1_a424 = sub i32 999, %v0_a41c
  store i32 %v1_a424, i32* %r2.global-to-local, align 4
  %v3_a428 = sdiv i32 %v1_a424, 256
  store i32 %v3_a428, i32* %r1.global-to-local, align 4
  %v1_a42c = load i32, i32* @r4, align 4
  %v9_a42c = icmp eq i32 %v3_9f50, %v1_a42c
  store i1 %v9_a42c, i1* %cpsr_z.global-to-local, align 1
  %v1_a430 = trunc i32 %v0_a41c to i8
  %v2_a430 = load i32, i32* @r5, align 4
  %v3_a430 = add i32 %v2_a430, 4
  %v4_a430 = inttoptr i32 %v3_a430 to i8*
  store i8 %v1_a430, i8* %v4_a430, align 1
  %v0_a434 = load i32, i32* %r1.global-to-local, align 4
  %v1_a434 = trunc i32 %v0_a434 to i8
  %v2_a434 = load i32, i32* @r6, align 4
  %v3_a434 = add i32 %v2_a434, 5
  %v4_a434 = inttoptr i32 %v3_a434 to i8*
  store i8 %v1_a434, i8* %v4_a434, align 1
  %v0_a438 = load i32, i32* %r2.global-to-local, align 4
  %v1_a438 = trunc i32 %v0_a438 to i8
  %v2_a438 = load i32, i32* @r6, align 4
  %v3_a438 = add i32 %v2_a438, 4
  %v4_a438 = inttoptr i32 %v3_a438 to i8*
  store i8 %v1_a438, i8* %v4_a438, align 1
  %v0_a43c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a43c, label %dec_label_pc_a440, label %dec_label_pc_a408.dec_label_pc_a278_crit_edge

dec_label_pc_a408.dec_label_pc_a278_crit_edge:    ; preds = %dec_label_pc_a408
  %v1_a27c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a278

dec_label_pc_a440:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a26c
  %v0_a440 = call i32 @function_e82c()
  %v1_a440 = trunc i32 %v0_a440 to i8
  store i32 %v0_a440, i32* %r0.global-to-local, align 4
  store i32 %v3_9f54, i32* %r1.global-to-local, align 4
  %v4_a448 = sdiv i32 %v0_a440, 256
  store i32 %v4_a448, i32* %r3.global-to-local, align 4
  %v1_a44c = load i32, i32* @r4, align 4
  %v9_a44c = icmp eq i32 %v3_9f54, %v1_a44c
  store i1 %v9_a44c, i1* %cpsr_z.global-to-local, align 1
  %v3_a450 = load i32, i32* @r5, align 4
  %v4_a450 = add i32 %v3_a450, 44
  %v5_a450 = inttoptr i32 %v4_a450 to i8*
  store i8 %v1_a440, i8* %v5_a450, align 1
  %v0_a454 = load i32, i32* %r3.global-to-local, align 4
  %v1_a454 = trunc i32 %v0_a454 to i8
  %v2_a454 = load i32, i32* @r7, align 4
  %v3_a454 = add i32 %v2_a454, 1
  %v4_a454 = inttoptr i32 %v3_a454 to i8*
  store i8 %v1_a454, i8* %v4_a454, align 1
  %v0_a458 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a458, label %dec_label_pc_a45c, label %dec_label_pc_a284

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a278
  %v0_a45c = call i32 @function_e82c()
  %v1_a45c = trunc i32 %v0_a45c to i8
  store i32 %v0_a45c, i32* %r0.global-to-local, align 4
  store i32 %v1_9f48, i32* %r2.global-to-local, align 4
  %v4_a464 = sdiv i32 %v0_a45c, 256
  store i32 %v4_a464, i32* %r3.global-to-local, align 4
  store i1 %v2_a288, i1* %cpsr_z.global-to-local, align 1
  %v1_a46c = trunc i32 %v4_a464 to i8
  %v2_a46c = load i32, i32* @r7, align 4
  %v3_a46c = add i32 %v2_a46c, 3
  %v4_a46c = inttoptr i32 %v3_a46c to i8*
  store i8 %v1_a46c, i8* %v4_a46c, align 1
  %v0_a470 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a470, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_a45c
  %v1_a470 = load i32, i32* @r5, align 4
  %v2_a470 = add i32 %v1_a470, 16
  %v3_a470 = inttoptr i32 %v2_a470 to i32*
  %v4_a470 = load i32, i32* %v3_a470, align 4
  store i32 %v4_a470, i32* %r3.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_a45c, %bb100
  %v3_a474 = load i32, i32* @r7, align 4
  %v4_a474 = add i32 %v3_a474, 2
  %v5_a474 = inttoptr i32 %v4_a474 to i8*
  store i8 %v1_a45c, i8* %v5_a474, align 1
  %v0_a478 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a478, label %dec_label_pc_a480, label %bb102

bb102:                                            ; preds = %bb101
  %v1_a478 = load i32, i32* %r3.global-to-local, align 4
  %v2_a478 = load i32, i32* @r6, align 4
  %v3_a478 = add i32 %v2_a478, 16
  %v4_a478 = inttoptr i32 %v3_a478 to i32*
  store i32 %v1_a478, i32* %v4_a478, align 4
  br label %dec_label_pc_a298

dec_label_pc_a480:                                ; preds = %dec_label_pc_a284, %bb101
  %v0_a480 = call i32 @function_e82c()
  store i32 %v0_a480, i32* %r0.global-to-local, align 4
  store i32 %v1_9eb4, i32* %r3.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  %v1_a48c = load i32, i32* @r6, align 4
  %v2_a48c = add i32 %v1_a48c, 16
  %v3_a48c = inttoptr i32 %v2_a48c to i32*
  store i32 %v0_a480, i32* %v3_a48c, align 4
  br i1 %v2_a488, label %dec_label_pc_a2a4, label %dec_label_pc_a494

dec_label_pc_a494:                                ; preds = %dec_label_pc_a298, %dec_label_pc_a480
  %v0_a494 = load i32, i32* @r7, align 4
  %v1_a494 = add i32 %v0_a494, 8
  store i32 %v1_a494, i32* %r0.global-to-local, align 4
  store i32 %v5_9e94, i32* @r1, align 4
  %v1_a49c = inttoptr i32 %v1_a494 to i8*
  %v2_a49c = call i32 @function_e9ac(i8* %v1_a49c)
  store i32 %v2_a49c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a2a4

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_9f34
  %v1_a4ac = add i32 %v5_9e94, 8
  store i32 %v1_a4ac, i32* %r2.global-to-local, align 4
  %v1_a4b0 = add i32 %v5_9e94, 52
  store i32 %v1_a4b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a210.preheader

; uselistorder directives
  uselistorder i32 %v1_a4b0, { 1, 0 }
  uselistorder i32 %v1_a4ac, { 1, 0 }
  uselistorder i32 %v4_a464, { 1, 0 }
  uselistorder i32 %v0_a45c, { 0, 2, 1 }
  uselistorder i32 %v0_a440, { 0, 2, 1 }
  uselistorder i32 %v2_a3e0, { 1, 0 }
  uselistorder i32 %v8_a3c0, { 1, 2, 0 }
  uselistorder i32 %v0_a39c, { 1, 0, 2 }
  uselistorder i32 %v1_a368, { 1, 2, 0 }
  uselistorder i32 %v1_a364, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_a308, { 1, 0, 2 }
  uselistorder i32 %v4_a304, { 0, 2, 1 }
  uselistorder i32 %v0_a2e4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_a2d4, { 0, 2, 1 }
  uselistorder i32 %v4_a2b8, { 1, 0 }
  uselistorder i32 %v7_a23c, { 1, 0, 2 }
  uselistorder i32 %v0_a210, { 1, 0 }
  uselistorder i1 %v7_a254, { 2, 1, 0 }
  uselistorder i1 %v2_a488, { 2, 3, 1, 0 }
  uselistorder i32 %v1_a1d0, { 1, 0, 2 }
  uselistorder i32 %v0_a194, { 1, 0, 2 }
  uselistorder i32 %v3_a048, { 0, 2, 1 }
  uselistorder i32 %v3_a008, { 1, 0 }
  uselistorder i32 %tmp86, { 1, 0 }
  uselistorder i32 %v1_9fc0, { 1, 0 }
  uselistorder i32 %v1_9f9c, { 1, 0 }
  uselistorder i32 %v1_9f98, { 0, 2, 1 }
  uselistorder i32 %v3_9f7c, { 2, 1, 0 }
  uselistorder i32 %v0_9f58, { 1, 0, 2 }
  uselistorder i32 %v1_9f48, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_9f44, { 0, 2, 1 }
  uselistorder i32 %v0_9f40, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_9f2c, { 1, 0 }
  uselistorder i1 %v7_9f00, { 1, 0 }
  uselistorder i32 %v3_9efc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_9ee8, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_9eb4, { 1, 0, 2 }
  uselistorder i32 %v5_9e94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_9e38, { 1, 0 }
  uselistorder i32 %v2_9dc8, { 0, 3, 1, 2 }
  uselistorder i32 %v1_9dac, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 18, 23, 19, 20, 21, 22, 26, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 21, 25, 26, 27, 28, 29 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
  uselistorder label %dec_label_pc_a480, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %dec_label_pc_a380, { 1, 0 }
  uselistorder label %dec_label_pc_a2a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a210.preheader, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %.thread23, { 2, 1, 0 }
}

define i32 @function_a4c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a4c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a4c4 = load i32, i32* @r4, align 4
  %v12_a4c4 = load i32, i32* @r7, align 4
  %v1_a4c8 = urem i32 %arg1, 256
  store i32 %v1_a4c8, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @sl, align 4
  %v1_a4dc = urem i32 %arg3, 256
  store i32 %v1_a4dc, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_a4e4 = call i32 @function_137ec(i32 %v1_a4c8, i32 4)
  %v0_a4e8 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a4f4 = load i32, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a4fc = inttoptr i32 %v0_a4e8 to i32*
  %v6_a4fc = call i32 @function_85e0(i32 %v0_a4f4, i32* %v5_a4fc, i32 2, i32 0)
  %v1_a508 = urem i32 %v6_a4fc, 256
  store i32 %v1_a508, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a514 = load i32, i32* @r4, align 4
  %v0_a518 = load i32, i32* @r5, align 4
  %v5_a51c = trunc i32 %v6_a4fc to i8
  %v6_a520 = inttoptr i32 %v0_a518 to i32*
  %v7_a520 = call i32 @function_85e0(i32 %v0_a514, i32* %v6_a520, i32 3, i32 65535)
  %v0_a524 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a520, i32* @r7, align 4
  %v0_a534 = load i32, i32* @r4, align 4
  %v4_a538 = inttoptr i32 %v0_a524 to i32*
  %v5_a538 = call i32 @function_85e0(i32 %v0_a534, i32* %v4_a538, i32 4, i32 64)
  %v1_a540 = urem i32 %v5_a538, 256
  store i32 %v1_a540, i32* %ip.global-to-local, align 4
  %v0_a544 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a550 = load i32, i32* @r4, align 4
  %v5_a554 = trunc i32 %v5_a538 to i8
  %v6_a558 = inttoptr i32 %v0_a544 to i32*
  %v7_a558 = call i32 @function_85e0(i32 %v0_a550, i32* %v6_a558, i32 5, i32 0)
  %v1_a564 = urem i32 %v7_a558, 256
  store i32 %v1_a564, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a570 = load i32, i32* @r4, align 4
  %v0_a574 = load i32, i32* @r5, align 4
  %v5_a57c = inttoptr i32 %v0_a574 to i32*
  %v6_a57c = call i32 @function_85e0(i32 %v0_a570, i32* %v5_a57c, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a58c = load i32, i32* @r5, align 4
  store i32 %v6_a57c, i32* @r6, align 4
  %v0_a594 = load i32, i32* @r4, align 4
  %v4_a598 = inttoptr i32 %v0_a58c to i32*
  %v5_a598 = call i32 @function_85e0(i32 %v0_a594, i32* %v4_a598, i32 7, i32 27015)
  store i32 %v5_a598, i32* @r4, align 4
  %v1_a5a4 = call i32 @function_11d4c(i32 20)
  %v3_a5b0 = call i32 @function_11c68(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v3_a5b0, i32* %r8.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_a5c4 = call i32 @function_13500(i32 2, i32 3, i32 17)
  %v7_a5c8 = icmp eq i32 %v3_a5c4, -1
  store i1 %v7_a5c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a5c4, i32* %fp.global-to-local, align 4
  br i1 %v7_a5c8, label %dec_label_pc_a97c, label %dec_label_pc_a5d4

dec_label_pc_a5d4:                                ; preds = %dec_label_pc_a4c4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_a5dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_a5dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_a5f0 = call i32 @function_134d0(i32 %v3_a5c4, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v7_a5f4 = icmp eq i32 %v6_a5f0, -1
  store i1 %v7_a5f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5f4, label %dec_label_pc_a974, label %dec_label_pc_a5fc

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_a5d4
  %v0_a5fc = load i32, i32* @r4, align 4
  %v3_a5fc = mul i32 %v0_a5fc, 65536
  store i32 %v3_a5fc, i32* @lr, align 4
  %v0_a600 = load i32, i32* @r7, align 4
  %v0_a604 = load i32, i32* @r6, align 4
  %v3_a604 = mul i32 %v0_a604, 65536
  store i32 %v3_a604, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_a60c = urem i32 %v0_a600, 65536
  %v3_a610 = urem i32 %v0_a604, 65536
  store i32 %v3_a610, i32* %r2.global-to-local, align 4
  %v3_a614 = urem i32 %v0_a5fc, 65536
  store i32 %v3_a614, i32* %r3.global-to-local, align 4
  %v0_a618 = load i32, i32* %sb.global-to-local, align 4
  %v2_a618 = icmp eq i32 %v0_a618, 0
  store i1 %v2_a618, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp50 = icmp slt i32 %v0_a618, 1
  br i1 %tmp50, label %dec_label_pc_a79c, label %dec_label_pc_a630

dec_label_pc_a630:                                ; preds = %dec_label_pc_a5fc
  %v1_a634 = urem i32 %v0_a5fc, 256
  %v1_a638 = urem i32 %v0_a604, 256
  %v1_a63c = urem i32 %v0_a600, 256
  %v3_a640 = mul nuw nsw i32 %v1_a638, 256
  %v3_a644 = mul nuw nsw i32 %v1_a634, 256
  %tmp51 = udiv i32 %v0_a600, 256
  %v3_a648 = urem i32 %tmp51, 256
  %v4_a64c = mul nuw nsw i32 %v1_a63c, 256
  %v5_a64c = or i32 %v4_a64c, %v3_a648
  store i32 %v5_a64c, i32* @r7, align 4
  %tmp52 = udiv i32 %v0_a5fc, 256
  %v4_a650 = urem i32 %tmp52, 256
  %v5_a650 = or i32 %v4_a650, %v3_a644
  store i32 %v5_a650, i32* @r5, align 4
  %tmp53 = udiv i32 %v0_a604, 256
  %v4_a654 = urem i32 %tmp53, 256
  %v5_a654 = or i32 %v4_a654, %v3_a640
  store i32 %v5_a654, i32* @r6, align 4
  store i32 %v1_a638, i32* %r2.global-to-local, align 4
  store i32 %v1_a634, i32* %r3.global-to-local, align 4
  %v2_a6d0 = icmp eq i32 %v1_a564, 0
  %v4_a6d4 = sext i8 %v5_a554 to i32
  %sext = mul i32 %v0_a600, 16777216
  %v4_a6f0 = sdiv i32 %sext, 16777216
  %sext6 = mul i32 %v0_a604, 16777216
  %v4_a74c = sdiv i32 %sext6, 16777216
  %sext7 = mul i32 %v0_a5fc, 16777216
  %v4_a76c = sdiv i32 %sext7, 16777216
  br label %dec_label_pc_a670

dec_label_pc_a670:                                ; preds = %bb57, %dec_label_pc_a630
  %v2_a678 = call i32 @function_137ec(i32 128, i32 1)
  store i32 %v2_a4e4, i32* %r2.global-to-local, align 4
  %v3_a680 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a680, i32* %r3.global-to-local, align 4
  %v2_a684 = load i32, i32* @r4, align 4
  %v5_a684 = mul i32 %v2_a684, 4
  %v6_a684 = add i32 %v5_a684, %v2_a4e4
  %v7_a684 = inttoptr i32 %v6_a684 to i32*
  store i32 %v2_a678, i32* %v7_a684, align 4
  %v0_a688 = load i32, i32* %r2.global-to-local, align 4
  %v1_a688 = load i32, i32* %r3.global-to-local, align 4
  %v4_a688 = mul i32 %v1_a688, 4
  %v5_a688 = add i32 %v4_a688, %v0_a688
  %v6_a688 = inttoptr i32 %v5_a688 to i32*
  %v7_a688 = load i32, i32* %v6_a688, align 4
  store i32 %v7_a688, i32* @lr, align 4
  %v1_a68c = inttoptr i32 %v7_a688 to i8*
  %v2_a68c = load i8, i8* %v1_a68c, align 1
  %tmp = urem i8 %v2_a68c, 16
  %v1_a690 = zext i8 %tmp to i32
  %v1_a694 = or i32 %v1_a690, 64
  store i32 %v1_a694, i32* %r3.global-to-local, align 4
  %v1_a698 = trunc i32 %v1_a694 to i8
  store i8 %v1_a698, i8* %v1_a68c, align 1
  %v0_a69c = load i32, i32* @lr, align 4
  %v1_a69c = inttoptr i32 %v0_a69c to i8*
  %v2_a69c = load i8, i8* %v1_a69c, align 1
  %v1_a6a0 = and i8 %v2_a69c, -16
  %v1_a6a4 = or i8 %v1_a6a0, 5
  store i8 %v1_a6a4, i8* %v1_a69c, align 1
  %v2_a6b0 = load i32, i32* @lr, align 4
  %v3_a6b0 = add i32 %v2_a6b0, 1
  %v4_a6b0 = inttoptr i32 %v3_a6b0 to i8*
  store i8 %v5_a51c, i8* %v4_a6b0, align 1
  %v3_a6b4 = load i32, i32* %stack_var_-44, align 4
  %v1_a6b8 = add i32 %v3_a6b4, 32
  %tmp54 = mul i32 %v1_a6b8, 256
  %v1_a6c4 = and i32 %tmp54, 65280
  %tmp55 = udiv i32 %v1_a6b8, 256
  %v4_a6c8 = urem i32 %tmp55, 256
  %v5_a6c8 = or i32 %v4_a6c8, %v1_a6c4
  store i32 %v5_a6c8, i32* %r2.global-to-local, align 4
  store i1 %v2_a6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_a6d4, i32* %r3.global-to-local, align 4
  %v2_a6d8 = load i32, i32* @lr, align 4
  %v3_a6d8 = add i32 %v2_a6d8, 8
  %v4_a6d8 = inttoptr i32 %v3_a6d8 to i8*
  store i8 %v5_a554, i8* %v4_a6d8, align 1
  %v0_a6dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a6dc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a670
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a6e0 = load i32, i32* @lr, align 4
  %v4_a6e0 = add i32 %v3_a6e0, 6
  %v5_a6e0 = inttoptr i32 %v4_a6e0 to i8*
  store i8 64, i8* %v5_a6e0, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a670, %bb
  %v0_a6e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v0_a6e4 to i8
  %v2_a6e4 = load i32, i32* @lr, align 4
  %v3_a6e4 = add i32 %v2_a6e4, 2
  %v4_a6e4 = inttoptr i32 %v3_a6e4 to i8*
  store i8 %v1_a6e4, i8* %v4_a6e4, align 1
  %v0_a6e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_a6e8 = sdiv i32 %v0_a6e8, 256
  store i32 %v3_a6e8, i32* %ip.global-to-local, align 4
  store i32 %v4_a6f0, i32* %r2.global-to-local, align 4
  %v2_a6f4 = load i32, i32* @lr, align 4
  %v3_a6f4 = add i32 %v2_a6f4, 9
  %v4_a6f4 = inttoptr i32 %v3_a6f4 to i8*
  store i8 17, i8* %v4_a6f4, align 1
  store i32 ptrtoint (i32* @global_var_1dc4c.49 to i32), i32* %r3.global-to-local, align 4
  %v0_a6fc = load i32, i32* %r2.global-to-local, align 4
  %v1_a6fc = trunc i32 %v0_a6fc to i8
  %v2_a6fc = load i32, i32* @lr, align 4
  %v3_a6fc = add i32 %v2_a6fc, 5
  %v4_a6fc = inttoptr i32 %v3_a6fc to i8*
  store i8 %v1_a6fc, i8* %v4_a6fc, align 1
  %v0_a700 = load i32, i32* %ip.global-to-local, align 4
  %v1_a700 = trunc i32 %v0_a700 to i8
  %v2_a700 = load i32, i32* @lr, align 4
  %v3_a700 = add i32 %v2_a700, 3
  %v4_a700 = inttoptr i32 %v3_a700 to i8*
  store i8 %v1_a700, i8* %v4_a700, align 1
  %v0_a704 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a704, label %.thread8, label %bb56

.thread8:                                         ; preds = %.thread
  %v3_a7089 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a7089, i32* %ip.global-to-local, align 4
  br label %bb57

bb56:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a708 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a708, i32* %ip.global-to-local, align 4
  %v3_a70c = load i32, i32* @lr, align 4
  %v4_a70c = add i32 %v3_a70c, 7
  %v5_a70c = inttoptr i32 %v4_a70c to i8*
  store i8 0, i8* %v5_a70c, align 1
  %v0_a714.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %bb56
  %v0_a714 = phi i32 [ %v3_a7089, %.thread8 ], [ %v0_a714.pre, %bb56 ]
  %v2_a710 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_a710, i32* %r2.global-to-local, align 4
  %v3_a714 = mul i32 %v0_a714, 32
  store i32 %v3_a714, i32* %r3.global-to-local, align 4
  %v1_a718 = load i32, i32* @lr, align 4
  %v2_a718 = add i32 %v1_a718, 12
  %v3_a718 = inttoptr i32 %v2_a718 to i32*
  store i32 %v2_a710, i32* %v3_a718, align 4
  %v0_a71c = load i32, i32* %r3.global-to-local, align 4
  %v1_a71c = load i32, i32* %ip.global-to-local, align 4
  %tmp60 = mul i32 %v1_a71c, -8
  %v5_a71c = add i32 %v0_a71c, %tmp60
  %v1_a720 = load i32, i32* @sl, align 4
  %v2_a720 = add i32 %v5_a71c, %v1_a720
  store i32 %v2_a720, i32* %r3.global-to-local, align 4
  %v1_a724 = add i32 %v2_a720, 16
  %v2_a724 = inttoptr i32 %v1_a724 to i32*
  %v3_a724 = load i32, i32* %v2_a724, align 4
  %v1_a728 = load i32, i32* @lr, align 4
  %v2_a728 = add i32 %v1_a728, 16
  %v3_a728 = inttoptr i32 %v2_a728 to i32*
  store i32 %v3_a724, i32* %v3_a728, align 4
  %v3_a72c = load i32, i32* %stack_var_-44, align 4
  %v1_a730 = add i32 %v3_a72c, 12
  %tmp58 = mul i32 %v1_a730, 256
  %v1_a740 = and i32 %tmp58, 65280
  %tmp59 = udiv i32 %v1_a730, 256
  %v4_a744 = urem i32 %tmp59, 256
  %v5_a744 = or i32 %v4_a744, %v1_a740
  store i32 %v5_a744, i32* %ip.global-to-local, align 4
  %v1_a748 = load i32, i32* @lr, align 4
  %v2_a748 = add i32 %v1_a748, 28
  %v3_a748 = inttoptr i32 %v2_a748 to i32*
  store i32 -1, i32* %v3_a748, align 4
  store i32 %v4_a74c, i32* %r2.global-to-local, align 4
  %v0_a750 = load i32, i32* @lr, align 4
  %v1_a750 = add i32 %v0_a750, 20
  store i32 %v1_a750, i32* %r4.global-to-local, align 4
  %v0_a754 = load i32, i32* %ip.global-to-local, align 4
  %v3_a754 = sdiv i32 %v0_a754, 256
  store i32 %v3_a754, i32* %r3.global-to-local, align 4
  %v0_a758 = load i32, i32* @r7, align 4
  %v1_a758 = trunc i32 %v0_a758 to i8
  %v3_a758 = add i32 %v0_a750, 4
  %v4_a758 = inttoptr i32 %v3_a758 to i8*
  store i8 %v1_a758, i8* %v4_a758, align 1
  %v0_a75c = load i32, i32* @r6, align 4
  %v1_a75c = trunc i32 %v0_a75c to i8
  %v2_a75c = load i32, i32* @lr, align 4
  %v3_a75c = add i32 %v2_a75c, 20
  %v4_a75c = inttoptr i32 %v3_a75c to i8*
  store i8 %v1_a75c, i8* %v4_a75c, align 1
  %v0_a760 = load i32, i32* %r3.global-to-local, align 4
  %v1_a760 = trunc i32 %v0_a760 to i8
  %v2_a760 = load i32, i32* %r4.global-to-local, align 4
  %v3_a760 = add i32 %v2_a760, 5
  %v4_a760 = inttoptr i32 %v3_a760 to i8*
  store i8 %v1_a760, i8* %v4_a760, align 1
  %v0_a764 = load i32, i32* @r5, align 4
  %v1_a764 = trunc i32 %v0_a764 to i8
  %v2_a764 = load i32, i32* %r4.global-to-local, align 4
  %v3_a764 = add i32 %v2_a764, 2
  %v4_a764 = inttoptr i32 %v3_a764 to i8*
  store i8 %v1_a764, i8* %v4_a764, align 1
  %v0_a768 = load i32, i32* %r2.global-to-local, align 4
  %v1_a768 = trunc i32 %v0_a768 to i8
  %v2_a768 = load i32, i32* %r4.global-to-local, align 4
  %v3_a768 = add i32 %v2_a768, 1
  %v4_a768 = inttoptr i32 %v3_a768 to i8*
  store i8 %v1_a768, i8* %v4_a768, align 1
  store i32 %v4_a76c, i32* %r3.global-to-local, align 4
  %v0_a770 = load i32, i32* %ip.global-to-local, align 4
  %v1_a770 = trunc i32 %v0_a770 to i8
  %v2_a770 = load i32, i32* %r4.global-to-local, align 4
  %v3_a770 = add i32 %v2_a770, 4
  %v4_a770 = inttoptr i32 %v3_a770 to i8*
  store i8 %v1_a770, i8* %v4_a770, align 1
  %v0_a774 = load i32, i32* %r3.global-to-local, align 4
  %v1_a774 = trunc i32 %v0_a774 to i8
  %v2_a774 = load i32, i32* %r4.global-to-local, align 4
  %v3_a774 = add i32 %v2_a774, 3
  %v4_a774 = inttoptr i32 %v3_a774 to i8*
  store i8 %v1_a774, i8* %v4_a774, align 1
  %v0_a778 = load i32, i32* %r8.global-to-local, align 4
  %v0_a77c = load i32, i32* @lr, align 4
  %v1_a77c = add i32 %v0_a77c, 32
  %v3_a780 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a780, i32* %r2.global-to-local, align 4
  %v3_a784 = call i32 @function_12394(i32 %v1_a77c, i32 %v0_a778, i32 %v3_a780)
  %v3_a788 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a788, i32* %r3.global-to-local, align 4
  %v1_a78c = add i32 %v3_a788, 1
  store i32 %v1_a78c, i32* @r4, align 4
  %v1_a790 = load i32, i32* %sb.global-to-local, align 4
  %v9_a790 = icmp eq i32 %v1_a78c, %v1_a790
  store i1 %v9_a790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a78c, i32* %stack_var_-40, align 4
  %v5_a798 = icmp slt i32 %v1_a78c, %v1_a790
  br i1 %v5_a798, label %dec_label_pc_a670, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %bb57, %dec_label_pc_a5fc
  %v0_a79c = phi i32 [ %v0_a618, %dec_label_pc_a5fc ], [ %v1_a790, %bb57 ]
  %v2_a79c = icmp eq i32 %v0_a79c, 0
  store i1 %v2_a79c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a7e4 = icmp eq i32 %v3_a60c, 65535
  br label %dec_label_pc_a7a4.outer

dec_label_pc_a7a4.outer:                          ; preds = %dec_label_pc_a8b4, %dec_label_pc_a79c
  %v1_a7a4.ph.in = phi i32 [ %v1_a8a8, %dec_label_pc_a8b4 ], [ %v0_a79c, %dec_label_pc_a79c ]
  %v0_a7a4.ph = phi i1 [ %v2_a8b4, %dec_label_pc_a8b4 ], [ %v2_a79c, %dec_label_pc_a79c ]
  %v1_a7a4.ph = icmp slt i32 %v1_a7a4.ph.in, 0
  %v4_a7a4 = or i1 %v1_a7a4.ph, %v0_a7a4.ph
  br label %dec_label_pc_a7a4

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a7a4.outer, %dec_label_pc_a7a4
  br i1 %v4_a7a4, label %dec_label_pc_a7a4, label %dec_label_pc_a7a8

dec_label_pc_a7a8:                                ; preds = %dec_label_pc_a7a4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a804, %dec_label_pc_a7a8
  %v1_a7c8 = phi i32 [ %v1_a8a4, %dec_label_pc_a804 ], [ 0, %dec_label_pc_a7a8 ]
  %v5_a7b8 = mul i32 %v1_a7c8, 24
  %v1_a7bc = load i32, i32* @sl, align 4
  %v2_a7bc = add i32 %v1_a7bc, %v5_a7b8
  store i32 %v2_a7bc, i32* %r3.global-to-local, align 4
  %v1_a7c4 = add i32 %v2_a7bc, 20
  %v2_a7c4 = inttoptr i32 %v1_a7c4 to i8*
  %v3_a7c4 = load i8, i8* %v2_a7c4, align 1
  %v4_a7c4 = zext i8 %v3_a7c4 to i32
  store i32 %v4_a7c4, i32* %r2.global-to-local, align 4
  %v4_a7c8 = mul i32 %v1_a7c8, 4
  %v5_a7c8 = add i32 %v4_a7c8, %v2_a4e4
  %v6_a7c8 = inttoptr i32 %v5_a7c8 to i32*
  %v7_a7c8 = load i32, i32* %v6_a7c8, align 4
  store i32 %v7_a7c8, i32* @r5, align 4
  %v7_a7d0 = icmp eq i8 %v3_a7c4, 31
  store i1 %v7_a7d0, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_a7d8 = add i32 %v7_a7c8, 20
  store i32 %v1_a7d8, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_a7c4, 32
  br i1 %tmp61, label %dec_label_pc_a8c0, label %dec_label_pc_a7e0

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7b4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  store i1 %v3_a7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a7e4, label %dec_label_pc_a928, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge, %dec_label_pc_a7e0
  %v1_a7f0 = phi i32 [ %v1_a7f0.pre, %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge ], [ 65535, %dec_label_pc_a7e0 ]
  store i32 %v3_a610, i32* %r3.global-to-local, align 4
  %v9_a7f0 = icmp eq i32 %v3_a610, %v1_a7f0
  store i1 %v9_a7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7f0, label %dec_label_pc_a944, label %dec_label_pc_a7f8

dec_label_pc_a7f8:                                ; preds = %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge, %dec_label_pc_a7ec
  %v1_a7fc = phi i32 [ %v1_a7fc.pre, %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge ], [ %v1_a7f0, %dec_label_pc_a7ec ]
  %v9_a7fc = icmp eq i32 %v3_a614, %v1_a7fc
  store i1 %v9_a7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a7fc, label %dec_label_pc_a960, label %dec_label_pc_a804

dec_label_pc_a804:                                ; preds = %dec_label_pc_a944, %dec_label_pc_a7f8, %dec_label_pc_a960
  %v0_a808 = load i32, i32* %r8.global-to-local, align 4
  %v1_a808 = trunc i32 %v0_a808 to i8
  %v2_a808 = load i32, i32* @r5, align 4
  %v3_a808 = add i32 %v2_a808, 10
  %v4_a808 = inttoptr i32 %v3_a808 to i8*
  store i8 %v1_a808, i8* %v4_a808, align 1
  %v0_a80c = load i32, i32* %r8.global-to-local, align 4
  %v1_a80c = trunc i32 %v0_a80c to i8
  %v2_a80c = load i32, i32* @r5, align 4
  %v3_a80c = add i32 %v2_a80c, 11
  %v4_a80c = inttoptr i32 %v3_a80c to i8*
  store i8 %v1_a80c, i8* %v4_a80c, align 1
  %v0_a810 = load i32, i32* @r5, align 4
  store i32 %v0_a810, i32* @r0, align 4
  %v2_a814 = call i32 @function_d0b8(i32 %v0_a810, i32 20)
  %v3_a814 = trunc i32 %v2_a814 to i8
  %v4_a818 = sdiv i32 %v2_a814, 256
  store i32 %v4_a818, i32* %r3.global-to-local, align 4
  %v1_a81c = trunc i32 %v4_a818 to i8
  %v2_a81c = load i32, i32* @r5, align 4
  %v3_a81c = add i32 %v2_a81c, 11
  %v4_a81c = inttoptr i32 %v3_a81c to i8*
  store i8 %v1_a81c, i8* %v4_a81c, align 1
  %v3_a820 = load i32, i32* @r5, align 4
  %v4_a820 = add i32 %v3_a820, 10
  %v5_a820 = inttoptr i32 %v4_a820 to i8*
  store i8 %v3_a814, i8* %v5_a820, align 1
  %v0_a824 = load i32, i32* %r8.global-to-local, align 4
  %v1_a824 = trunc i32 %v0_a824 to i8
  %v2_a824 = load i32, i32* @r6, align 4
  %v3_a824 = add i32 %v2_a824, 6
  %v4_a824 = inttoptr i32 %v3_a824 to i8*
  store i8 %v1_a824, i8* %v4_a824, align 1
  %v0_a828 = load i32, i32* %r8.global-to-local, align 4
  %v1_a828 = trunc i32 %v0_a828 to i8
  %v2_a828 = load i32, i32* @r6, align 4
  %v3_a828 = add i32 %v2_a828, 7
  %v4_a828 = inttoptr i32 %v3_a828 to i8*
  store i8 %v1_a828, i8* %v4_a828, align 1
  %v0_a82c = load i32, i32* @r5, align 4
  %v1_a82c = add i32 %v0_a82c, 24
  %v2_a82c = inttoptr i32 %v1_a82c to i8*
  %v3_a82c = load i8, i8* %v2_a82c, align 1
  %v4_a82c = zext i8 %v3_a82c to i32
  store i32 %v4_a82c, i32* %r3.global-to-local, align 4
  %v1_a830 = add i32 %v0_a82c, 25
  %v2_a830 = inttoptr i32 %v1_a830 to i8*
  %v3_a830 = load i8, i8* %v2_a830, align 1
  %v4_a830 = zext i8 %v3_a830 to i32
  %v4_a834 = mul nuw nsw i32 %v4_a830, 256
  %v5_a834 = or i32 %v4_a834, %v4_a82c
  store i32 %v5_a834, i32* %r2.global-to-local, align 4
  %v3_a838 = load i32, i32* %stack_var_-44, align 4
  %v0_a83c = load i32, i32* @r6, align 4
  store i32 %v0_a83c, i32* @r1, align 4
  %v1_a840 = add i32 %v3_a838, 12
  store i32 %v1_a840, i32* %r3.global-to-local, align 4
  %v4_a848 = call i32 @function_d114(i32 %v0_a82c, i32 %v0_a83c, i32 %v5_a834, i32 %v1_a840)
  %v5_a848 = trunc i32 %v4_a848 to i8
  %v4_a84c24 = udiv i32 %v4_a848, 256
  %v1_a850 = trunc i32 %v4_a84c24 to i8
  %v2_a850 = load i32, i32* @r6, align 4
  %v3_a850 = add i32 %v2_a850, 7
  %v4_a850 = inttoptr i32 %v3_a850 to i8*
  store i8 %v1_a850, i8* %v4_a850, align 1
  %v3_a854 = load i32, i32* @r6, align 4
  %v4_a854 = add i32 %v3_a854, 6
  %v5_a854 = inttoptr i32 %v4_a854 to i8*
  store i8 %v5_a848, i8* %v5_a854, align 1
  %v3_a858 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a858, i32* %r3.global-to-local, align 4
  %v0_a85c = load i32, i32* @r5, align 4
  %v1_a85c = add i32 %v0_a85c, 20
  %v2_a85c = inttoptr i32 %v1_a85c to i32*
  %v3_a85c = load i32, i32* %v2_a85c, align 4
  %v5_a864 = mul i32 %v3_a858, 24
  %v1_a868 = load i32, i32* @sl, align 4
  %v2_a868 = add i32 %v1_a868, %v5_a864
  store i32 %v2_a868, i32* %ip.global-to-local, align 4
  %v3_a86c = udiv i32 %v3_a85c, 65536
  store i32 %v3_a86c, i32* %r2.global-to-local, align 4
  %v1_a870 = trunc i32 %v3_a86c to i8
  %v3_a870 = add i32 %v2_a868, 2
  %v4_a870 = inttoptr i32 %v3_a870 to i8*
  store i8 %v1_a870, i8* %v4_a870, align 1
  %v0_a874 = load i32, i32* %r2.global-to-local, align 4
  %v3_a87425 = udiv i32 %v0_a874, 256
  %v3_a878 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a878, i32* %r2.global-to-local, align 4
  %v1_a87c = trunc i32 %v3_a87425 to i8
  %v2_a87c = load i32, i32* %ip.global-to-local, align 4
  %v3_a87c = add i32 %v2_a87c, 3
  %v4_a87c = inttoptr i32 %v3_a87c to i8*
  store i8 %v1_a87c, i8* %v4_a87c, align 1
  %v0_a880 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a888 = load i32, i32* %r2.global-to-local, align 4
  %v1_a888 = add i32 %v0_a888, 32
  store i32 %v1_a888, i32* %r2.global-to-local, align 4
  %v0_a88c = load i32, i32* %fp.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_a894 = load i32, i32* %ip.global-to-local, align 4
  %v6_a89c = inttoptr i32 %v0_a880 to i32*
  %v7_a89c = call i32 @function_1349c(i32 %v0_a88c, i32* %v6_a89c, i32 %v1_a888, i32 16384, i32 %v0_a894, i32 16)
  %v3_a8a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a8a0, i32* %r3.global-to-local, align 4
  %v1_a8a4 = add i32 %v3_a8a0, 1
  %v1_a8a8 = load i32, i32* %sb.global-to-local, align 4
  %v9_a8a8 = icmp eq i32 %v1_a8a4, %v1_a8a8
  store i1 %v9_a8a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a8a4, i32* %stack_var_-40, align 4
  %v5_a8b0 = icmp slt i32 %v1_a8a4, %v1_a8a8
  br i1 %v5_a8b0, label %dec_label_pc_a7b4, label %dec_label_pc_a8b4

dec_label_pc_a8b4:                                ; preds = %dec_label_pc_a804
  %v2_a8b4 = icmp eq i32 %v1_a8a8, 0
  store i1 %v2_a8b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a7a4.outer

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a7b4
  %v1_a8c0 = add i32 %v2_a7bc, 16
  %v2_a8c0 = inttoptr i32 %v1_a8c0 to i32*
  %v3_a8c0 = load i32, i32* %v2_a8c0, align 4
  store i32 %v3_a8c0, i32* @r4, align 4
  %v0_a8c4 = call i32 @function_e82c()
  %v3_a8c8 = load i32, i32* %stack_var_-40, align 4
  %v5_a8d0 = mul i32 %v3_a8c8, 24
  %v0_a8d4 = load i32, i32* @r4, align 4
  %v1_a8d8 = and i32 %v0_a8d4, 65280
  store i32 %v1_a8d8, i32* %r3.global-to-local, align 4
  %v1_a8d4 = udiv i32 %v0_a8d4, 256
  %v3_a8dc = and i32 %v1_a8d4, 65280
  store i32 %v3_a8dc, i32* %r2.global-to-local, align 4
  %v1_a8e0 = load i32, i32* @sl, align 4
  %v2_a8e0 = add i32 %v1_a8e0, %v5_a8d0
  store i32 %v2_a8e0, i32* %ip.global-to-local, align 4
  %v1_a8ec = add i32 %v2_a8e0, 20
  %v2_a8ec = inttoptr i32 %v1_a8ec to i8*
  %v3_a8ec = load i8, i8* %v2_a8ec, align 1
  %v4_a8ec = zext i8 %v3_a8ec to i32
  %v2_a8f4 = call i32 @llvm.bswap.i32(i32 %v0_a8d4)
  %v7_a8f8 = lshr i32 %v0_a8c4, %v4_a8ec
  %v8_a8f8 = add i32 %v7_a8f8, %v2_a8f4
  store i32 %v3_a60c, i32* %r2.global-to-local, align 4
  %v2_a918 = call i32 @llvm.bswap.i32(i32 %v8_a8f8)
  store i32 %v2_a918, i32* %r3.global-to-local, align 4
  %v1_a91c = load i32, i32* %r7.global-to-local, align 4
  %v9_a91c = icmp eq i32 %v3_a60c, %v1_a91c
  store i1 %v9_a91c, i1* %cpsr_z.global-to-local, align 1
  %v1_a920 = load i32, i32* @r5, align 4
  %v2_a920 = add i32 %v1_a920, 16
  %v3_a920 = inttoptr i32 %v2_a920 to i32*
  store i32 %v2_a918, i32* %v3_a920, align 4
  br i1 %v9_a91c, label %dec_label_pc_a928, label %dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge

dec_label_pc_a8c0.dec_label_pc_a7ec_crit_edge:    ; preds = %dec_label_pc_a8c0
  %v1_a7f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_a7ec

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8c0, %dec_label_pc_a7e0
  %v0_a928 = call i32 @function_e82c()
  %v1_a928 = trunc i32 %v0_a928 to i8
  %v4_a92c26 = udiv i32 %v0_a928, 256
  %v1_a930 = trunc i32 %v4_a92c26 to i8
  %v2_a930 = load i32, i32* @r5, align 4
  %v3_a930 = add i32 %v2_a930, 5
  %v4_a930 = inttoptr i32 %v3_a930 to i8*
  store i8 %v1_a930, i8* %v4_a930, align 1
  store i32 %v3_a610, i32* %r3.global-to-local, align 4
  %v1_a938 = load i32, i32* %r7.global-to-local, align 4
  %v9_a938 = icmp eq i32 %v3_a610, %v1_a938
  store i1 %v9_a938, i1* %cpsr_z.global-to-local, align 1
  %v3_a93c = load i32, i32* @r5, align 4
  %v4_a93c = add i32 %v3_a93c, 4
  %v5_a93c = inttoptr i32 %v4_a93c to i8*
  store i8 %v1_a928, i8* %v5_a93c, align 1
  %v0_a940 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a940, label %dec_label_pc_a944, label %dec_label_pc_a928.dec_label_pc_a7f8_crit_edge

dec_label_pc_a928.dec_label_pc_a7f8_crit_edge:    ; preds = %dec_label_pc_a928
  %v1_a7fc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_a7f8

dec_label_pc_a944:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a7ec
  %v0_a944 = call i32 @function_e82c()
  %v1_a944 = trunc i32 %v0_a944 to i8
  %v4_a94c = sdiv i32 %v0_a944, 256
  store i32 %v4_a94c, i32* %r3.global-to-local, align 4
  %v1_a950 = load i32, i32* %r7.global-to-local, align 4
  %v9_a950 = icmp eq i32 %v3_a614, %v1_a950
  store i1 %v9_a950, i1* %cpsr_z.global-to-local, align 1
  %v3_a954 = load i32, i32* @r5, align 4
  %v4_a954 = add i32 %v3_a954, 20
  %v5_a954 = inttoptr i32 %v4_a954 to i8*
  store i8 %v1_a944, i8* %v5_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v1_a958 = trunc i32 %v0_a958 to i8
  %v2_a958 = load i32, i32* @r6, align 4
  %v3_a958 = add i32 %v2_a958, 1
  %v4_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v1_a958, i8* %v4_a958, align 1
  %v0_a95c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a95c, label %dec_label_pc_a960, label %dec_label_pc_a804

dec_label_pc_a960:                                ; preds = %dec_label_pc_a944, %dec_label_pc_a7f8
  %v0_a960 = call i32 @function_e82c()
  %v1_a960 = trunc i32 %v0_a960 to i8
  %v4_a964 = sdiv i32 %v0_a960, 256
  store i32 %v4_a964, i32* %r3.global-to-local, align 4
  %v1_a968 = trunc i32 %v4_a964 to i8
  %v2_a968 = load i32, i32* @r6, align 4
  %v3_a968 = add i32 %v2_a968, 3
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  %v3_a96c = load i32, i32* @r6, align 4
  %v4_a96c = add i32 %v3_a96c, 2
  %v5_a96c = inttoptr i32 %v4_a96c to i8*
  store i8 %v1_a960, i8* %v5_a96c, align 1
  br label %dec_label_pc_a804

dec_label_pc_a974:                                ; preds = %dec_label_pc_a5d4
  %v0_a974 = load i32, i32* %fp.global-to-local, align 4
  %v1_a978 = call i32 @function_12c1c(i32 %v0_a974)
  br label %dec_label_pc_a97c

dec_label_pc_a97c:                                ; preds = %dec_label_pc_a4c4, %dec_label_pc_a974
  %v29_a980 = phi i32 [ %v3_a5c4, %dec_label_pc_a4c4 ], [ %v1_a978, %dec_label_pc_a974 ]
  store i32 %v3_a4c4, i32* %r4.global-to-local, align 4
  store i32 %v12_a4c4, i32* %r7.global-to-local, align 4
  ret i32 %v29_a980

; uselistorder directives
  uselistorder i32 %v4_a964, { 1, 0 }
  uselistorder i32 %v2_a918, { 1, 0 }
  uselistorder i32 %v0_a8d4, { 1, 0, 2 }
  uselistorder i1 %v2_a8b4, { 1, 0 }
  uselistorder i32 %v1_a8a8, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a8a4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_a86c, { 1, 0 }
  uselistorder i32 %v4_a818, { 1, 0 }
  uselistorder i1 %v3_a7e4, { 1, 0 }
  uselistorder i32 %v1_a78c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a730, { 1, 0 }
  uselistorder i32 %v1_a6b8, { 1, 0 }
  uselistorder i32 %v1_a638, { 1, 0 }
  uselistorder i32 %v1_a634, { 1, 0 }
  uselistorder i32 %v0_a604, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a5fc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_a5f4, { 1, 0 }
  uselistorder i1 %v7_a5c8, { 1, 0 }
  uselistorder i32 %v3_a5c4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a564, { 1, 0 }
  uselistorder i8 %v5_a554, { 1, 0 }
  uselistorder i32 %v5_a538, { 1, 0 }
  uselistorder i32 %v6_a4fc, { 1, 0 }
  uselistorder i32 %v1_a4c8, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 13, 12 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 5, 3, 1, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 0, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_a97c, { 1, 0 }
  uselistorder label %dec_label_pc_a804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a7a4, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a988(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a988:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_a988 = load i32, i32* @r4, align 4
  %v15_a988 = load i32, i32* @r8, align 4
  %v18_a988 = load i32, i32* @sb, align 4
  %v21_a988 = load i32, i32* @sl, align 4
  %v24_a988 = load i32, i32* @fp, align 4
  %v1_a994 = urem i32 %arg1, 256
  store i32 %v1_a994, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a9a0 = urem i32 %arg3, 256
  store i32 %v1_a9a0, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_a9ac = call i32 @function_137ec(i32 %v1_a994, i32 4)
  %v0_a9b0 = load i32, i32* @r5, align 4
  store i32 %v0_a9b0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a9bc = load i32, i32* @r4, align 4
  store i32 %v0_a9bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a9c4 = inttoptr i32 %v0_a9b0 to i32*
  %v6_a9c4 = call i32 @function_85e0(i32 %v0_a9bc, i32* %v5_a9c4, i32 2, i32 0)
  %v1_a9d0 = urem i32 %v6_a9c4, 256
  store i32 %v1_a9d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a9dc = load i32, i32* @r4, align 4
  store i32 %v0_a9dc, i32* %r0.global-to-local, align 4
  %v0_a9e0 = load i32, i32* @r5, align 4
  store i32 %v0_a9e0, i32* %r1.global-to-local, align 4
  %v5_a9e4 = trunc i32 %v6_a9c4 to i8
  %v6_a9e8 = inttoptr i32 %v0_a9e0 to i32*
  %v7_a9e8 = call i32 @function_85e0(i32 %v0_a9dc, i32* %v6_a9e8, i32 3, i32 65535)
  %v0_a9ec = load i32, i32* @r5, align 4
  store i32 %v0_a9ec, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_a9f8, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_aa00 = inttoptr i32 %v0_a9ec to i32*
  %v6_aa00 = call i32 @function_85e0(i32 %v0_a9f8, i32* %v5_aa00, i32 4, i32 64)
  %v1_aa08 = urem i32 %v6_aa00, 256
  store i32 %v1_aa08, i32* %ip.global-to-local, align 4
  %v0_aa0c = load i32, i32* @r5, align 4
  store i32 %v0_aa0c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aa18 = load i32, i32* @r4, align 4
  store i32 %v0_aa18, i32* %r0.global-to-local, align 4
  %v6_aa20 = inttoptr i32 %v0_aa0c to i32*
  %v7_aa20 = call i32 @function_85e0(i32 %v0_aa18, i32* %v6_aa20, i32 5, i32 0)
  %v1_aa2c = urem i32 %v7_aa20, 256
  store i32 %v1_aa2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aa38 = load i32, i32* @r4, align 4
  store i32 %v0_aa38, i32* %r0.global-to-local, align 4
  %v0_aa3c = load i32, i32* @r5, align 4
  store i32 %v0_aa3c, i32* %r1.global-to-local, align 4
  %v5_aa44 = inttoptr i32 %v0_aa3c to i32*
  %v6_aa44 = call i32 @function_85e0(i32 %v0_aa38, i32* %v5_aa44, i32 6, i32 65535)
  %v0_aa48 = load i32, i32* @r5, align 4
  store i32 %v0_aa48, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 %v6_aa44, i32* %fp.global-to-local, align 4
  %v0_aa58 = load i32, i32* @r4, align 4
  store i32 %v0_aa58, i32* %r0.global-to-local, align 4
  %v4_aa5c = inttoptr i32 %v0_aa48 to i32*
  %v5_aa5c = call i32 @function_85e0(i32 %v0_aa58, i32* %v4_aa5c, i32 7, i32 53)
  %v0_aa64 = load i32, i32* @r5, align 4
  store i32 %v0_aa64, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v5_aa5c, i32* %sb.global-to-local, align 4
  %v0_aa74 = load i32, i32* @r4, align 4
  store i32 %v0_aa74, i32* %r0.global-to-local, align 4
  %v4_aa78 = inttoptr i32 %v0_aa64 to i32*
  %v5_aa78 = call i32 @function_85e0(i32 %v0_aa74, i32* %v4_aa78, i32 9, i32 65535)
  %v0_aa7c = load i32, i32* @r5, align 4
  store i32 %v0_aa7c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_aa78, i32* @sl, align 4
  %v0_aa8c = load i32, i32* @r4, align 4
  store i32 %v0_aa8c, i32* %r0.global-to-local, align 4
  %v4_aa90 = inttoptr i32 %v0_aa7c to i32*
  %v5_aa90 = call i32 @function_85e0(i32 %v0_aa8c, i32* %v4_aa90, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aa9c = load i32, i32* @r5, align 4
  store i32 %v0_aa9c, i32* %r1.global-to-local, align 4
  store i32 %v5_aa90, i32* %r8.global-to-local, align 4
  %v0_aaa4 = load i32, i32* @r4, align 4
  store i32 %v0_aaa4, i32* %r0.global-to-local, align 4
  %v4_aaa8 = inttoptr i32 %v0_aa9c to i32*
  %v5_aaa8 = call i32 @function_81cc(i32 %v0_aaa4, i32* %v4_aaa8, i32 8, i32 0)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_aab4 = call i32 @function_11d4c(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_aac0 = call i32 @function_11c68(i32 21, i32* null)
  store i32 %v3_aac0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_aac8 = inttoptr i32 %v3_aac0 to i8*
  %v3_aac8 = call i32 @function_12d48(i8* %v2_aac8, i32 0)
  store i32 %v3_aac8, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_aad4 = call i32 @function_11c94(i32 21)
  store i32 %v1_aad4, i32* %r0.global-to-local, align 4
  %v0_aad8 = load i32, i32* @r4, align 4
  %v1_aad8 = icmp slt i32 %v0_aad8, 0
  %v2_aad8 = icmp eq i32 %v0_aad8, 0
  store i1 %v2_aad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_aad8, label %dec_label_pc_b0a4, label %dec_label_pc_aae0

dec_label_pc_aae0:                                ; preds = %dec_label_pc_a988
  %v2_aae4 = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_aae4, i32* @r6, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_aae4, i32* %r1.global-to-local, align 4
  store i32 %v0_aad8, i32* %r0.global-to-local, align 4
  %v4_aaf4 = call i32 @function_12de4(i32 %v0_aad8, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_aaf4, i32* @r5, align 4
  %v0_aafc = load i32, i32* @r4, align 4
  store i32 %v0_aafc, i32* %r0.global-to-local, align 4
  %v1_ab00 = call i32 @function_12c1c(i32 %v0_aafc)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ab08 = call i32 @function_11d4c(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_ab14 = call i32 @function_11c68(i32 22, i32* null)
  %v0_ab18 = load i32, i32* @r5, align 4
  store i32 %v0_ab18, i32* @r1, align 4
  store i32 %v3_ab14, i32* %r2.global-to-local, align 4
  store i32 %v2_aae4, i32* %r0.global-to-local, align 4
  %v3_ab24 = bitcast i32* %stack_var_-2120 to i8*
  %v4_ab24 = call i32 @function_1266c(i8* %v3_ab24, i32 %v0_ab18, i32 %v3_ab14)
  store i32 %v4_ab24, i32* @r4, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ab30 = call i32 @function_11c94(i32 22)
  store i32 %v1_ab30, i32* %r0.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r4, align 4
  %v7_ab34 = icmp eq i32 %v0_ab34, -1
  store i1 %v7_ab34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab34, label %dec_label_pc_b0a4, label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_aae0
  %v0_ab3c = load i32, i32* @r5, align 4
  %v9_ab3c = icmp eq i32 %v0_ab3c, %v0_ab34
  store i1 %v9_ab3c, i1* %cpsr_z.global-to-local, align 1
  %v7_ab40 = icmp sgt i32 %v0_ab3c, %v0_ab34
  br i1 %v7_ab40, label %dec_label_pc_ab44, label %dec_label_pc_b0a4

dec_label_pc_ab44:                                ; preds = %dec_label_pc_ab3c
  store i32 %v0_ab3c, i32* %r3.global-to-local, align 4
  store i32 %v0_ab34, i32* %r2.global-to-local, align 4
  %v0_ab54 = load i32, i32* @r6, align 4
  %v2_ab54 = add i32 %v0_ab54, %v0_ab34
  store i32 %v2_ab54, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_ab5c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ab5c, i32* @r7, align 4
  %v1_ab8c = add i32 %v0_ab3c, -1
  br label %dec_label_pc_ab84

dec_label_pc_ab68:                                ; preds = %dec_label_pc_abac, %bb138
  %v9_ab68 = icmp eq i32 %v0_ab74, %v1_ab8c
  store i1 %v9_ab68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab68, label %dec_label_pc_abb8, label %dec_label_pc_ab70

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab9c, %dec_label_pc_ab68, %bb
  %v0_aba842 = phi i32 [ %v0_aba8, %dec_label_pc_ab9c ], [ %v0_aba843, %dec_label_pc_ab68 ], [ %v0_aba8, %bb ]
  %v0_ab8838 = phi i32 [ 0, %dec_label_pc_ab9c ], [ %v0_ab8839, %dec_label_pc_ab68 ], [ 0, %bb ]
  store i32 %v0_ab3c, i32* %r0.global-to-local, align 4
  %v1_ab74 = add i32 %v0_ab74, 1
  store i32 %v1_ab74, i32* %r2.global-to-local, align 4
  %v9_ab78 = icmp eq i32 %v0_ab3c, %v1_ab74
  store i1 %v9_ab78, i1* %cpsr_z.global-to-local, align 1
  %v1_ab7c = add i32 %v0_ab7c, 1
  store i32 %v1_ab7c, i32* @r7, align 4
  br i1 %v9_ab78, label %dec_label_pc_b0a4, label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab44
  %v0_ab7c = phi i32 [ %v1_ab7c, %dec_label_pc_ab70 ], [ %v2_ab5c, %dec_label_pc_ab44 ]
  %v0_ab74 = phi i32 [ %v1_ab74, %dec_label_pc_ab70 ], [ %v0_ab34, %dec_label_pc_ab44 ]
  %v0_aba8 = phi i32 [ %v0_aba842, %dec_label_pc_ab70 ], [ 0, %dec_label_pc_ab44 ]
  %v0_ab88 = phi i32 [ %v0_ab8838, %dec_label_pc_ab70 ], [ 0, %dec_label_pc_ab44 ]
  %v0_ab90 = phi i32 [ %v1_ab90, %dec_label_pc_ab70 ], [ %v2_ab54, %dec_label_pc_ab44 ]
  %v1_ab84 = inttoptr i32 %v0_ab90 to i8*
  %v2_ab84 = load i8, i8* %v1_ab84, align 1
  %v3_ab84 = zext i8 %v2_ab84 to i32
  store i32 %v3_ab84, i32* %r3.global-to-local, align 4
  %v2_ab88 = icmp eq i32 %v0_ab88, 0
  store i1 %v2_ab88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ab8c, i32* %ip.global-to-local, align 4
  %v1_ab90 = add i32 %v0_ab90, 1
  store i32 %v1_ab90, i32* %r1.global-to-local, align 4
  %v1_ab94 = add nsw i32 %v3_ab84, -48
  store i32 %v1_ab94, i32* %r0.global-to-local, align 4
  br i1 %v2_ab88, label %dec_label_pc_ab9c, label %dec_label_pc_abac

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab84
  %v7_ab9c = icmp eq i8 %v2_ab84, 9
  store i1 %v7_ab9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab9c, label %dec_label_pc_ab70, label %bb

bb:                                               ; preds = %dec_label_pc_ab9c
  %v8_aba0 = icmp eq i8 %v2_ab84, 32
  store i1 %v8_aba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_aba0, label %dec_label_pc_ab70, label %dec_label_pc_aba8

dec_label_pc_aba8:                                ; preds = %bb
  %v1_aba8 = add i32 %v0_aba8, 1
  store i32 %v1_aba8, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_abac

dec_label_pc_abac:                                ; preds = %dec_label_pc_ab84, %dec_label_pc_aba8
  %v0_aba843 = phi i32 [ %v0_aba8, %dec_label_pc_ab84 ], [ %v1_aba8, %dec_label_pc_aba8 ]
  %v0_ab8839 = phi i32 [ %v0_ab88, %dec_label_pc_ab84 ], [ %v1_aba8, %dec_label_pc_aba8 ]
  %v7_abac = icmp eq i8 %v2_ab84, 46
  store i1 %v7_abac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_abac, label %dec_label_pc_ab68, label %bb138

bb138:                                            ; preds = %dec_label_pc_abac
  %v8_abb0 = icmp eq i32 %v1_ab94, 9
  store i1 %v8_abb0, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_ab94, 10
  br i1 %tmp, label %dec_label_pc_ab68, label %dec_label_pc_abb8

dec_label_pc_abb8:                                ; preds = %dec_label_pc_ab68, %bb138
  %v0_ab74.lcssa = phi i32 [ %v1_ab8c, %dec_label_pc_ab68 ], [ %v0_ab74, %bb138 ]
  %v2_abbc = sub i32 %v0_ab74.lcssa, %v0_ab34
  store i32 %v2_abbc, i32* %r2.global-to-local, align 4
  store i32 %v2_ab54, i32* %r1.global-to-local, align 4
  store i32 %v2_ab5c, i32* %r0.global-to-local, align 4
  %v3_abc8 = call i32 @function_12394(i32 %v2_ab5c, i32 %v2_ab54, i32 %v2_abbc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ab5c, i32* @r0, align 4
  %v2_abd8 = load i32, i32* @r7, align 4
  %v3_abd8 = inttoptr i32 %v2_abd8 to i8*
  store i8 0, i8* %v3_abd8, align 1
  %v1_abdc = call i32 @function_1330c(i32 %v2_ab5c)
  store i32 %v1_abdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_abe420:                              ; preds = %dec_label_pc_b0a4
  unreachable

dec_label_pc_abe4:                                ; preds = %dec_label_pc_b11c, %dec_label_pc_b10c, %dec_label_pc_b100, %dec_label_pc_b0ec, %dec_label_pc_abb8
  %v29_b0e874 = phi i32 [ %v1_b0a8, %dec_label_pc_b11c ], [ %v1_b0a8, %dec_label_pc_b10c ], [ %v1_b0a8, %dec_label_pc_b100 ], [ %v1_b0a8, %dec_label_pc_b0ec ], [ %v1_abdc, %dec_label_pc_abb8 ]
  %stack_var_-2176.0 = phi i32 [ 33686020, %dec_label_pc_b11c ], [ 104859200, %dec_label_pc_b10c ], [ 707416650, %dec_label_pc_b100 ], [ 134744072, %dec_label_pc_b0ec ], [ %v1_abdc, %dec_label_pc_abb8 ]
  store i32 %v5_aaa8, i32* %ip.global-to-local, align 4
  %v2_abe8 = icmp eq i32 %v5_aaa8, 0
  store i1 %v2_abe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_abe8, label %dec_label_pc_b0e0, label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %dec_label_pc_abe4
  store i32 %v5_aaa8, i32* %r0.global-to-local, align 4
  %v1_abf4 = inttoptr i32 %v5_aaa8 to i8*
  %v2_abf4 = call i32 @function_12318(i8* %v1_abf4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ac08 = call i32 @function_13500(i32 2, i32 3, i32 17)
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v7_ac0c = icmp eq i32 %v3_ac08, -1
  store i1 %v7_ac0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac0c, label %dec_label_pc_b0e0, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_abf0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ac24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ac24, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_ac38 = call i32 @function_134d0(i32 %v3_ac08, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_ac38, i32* %r0.global-to-local, align 4
  %v7_ac3c = icmp eq i32 %v6_ac38, -1
  store i1 %v7_ac3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac3c, label %dec_label_pc_b0d8, label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac18
  store i32 %v1_a994, i32* %r0.global-to-local, align 4
  %v3_ac4c = mul i32 %v7_a9e8, 65536
  store i32 %v3_ac4c, i32* %lr.global-to-local, align 4
  %v0_ac50 = load i32, i32* @sl, align 4
  %v3_ac50 = mul i32 %v0_ac50, 65536
  store i32 %v3_ac50, i32* %sl.global-to-local, align 4
  %v0_ac54 = load i32, i32* %r8.global-to-local, align 4
  %v0_ac58 = load i32, i32* %fp.global-to-local, align 4
  %v0_ac5c = load i32, i32* %sb.global-to-local, align 4
  %v3_ac5c = mul i32 %v0_ac5c, 65536
  store i32 %v3_ac5c, i32* %sb.global-to-local, align 4
  %v5_ac60 = trunc i32 %v0_ac54 to i8
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ac68 = urem i32 %v7_a9e8, 65536
  store i32 %v3_ac68, i32* %r2.global-to-local, align 4
  %v3_ac6c = urem i32 %v0_ac58, 65536
  store i32 %v3_ac6c, i32* %r3.global-to-local, align 4
  %v3_ac70 = urem i32 %v0_ac5c, 65536
  store i32 %v3_ac70, i32* %r4.global-to-local, align 4
  %v3_ac74 = urem i32 %v0_ac50, 65536
  store i32 %v3_ac74, i32* %r8.global-to-local, align 4
  %v2_ac78 = icmp eq i32 %v1_a994, 0
  store i1 %v2_ac78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_ac78, label %dec_label_pc_b0c8, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac44
  %v4_aca0 = sext i8 %v5_ac60 to i32
  %v2_aca4 = add i32 %v4_aca0, %v2_abf4
  store i32 %v2_aca4, i32* @fp, align 4
  %v3_aca8 = mul i32 %v2_aca4, 65536
  %v1_acac = add i32 %v3_aca8, 1769472
  store i32 %v1_acac, i32* @r6, align 4
  %v1_acb0 = add i32 %v3_aca8, 3080192
  %v1_acc4 = urem i32 %v0_ac50, 256
  %v3_acd4 = udiv i32 %v1_acac, 256
  %v1_acd8 = urem i32 %v7_a9e8, 256
  %v1_acdc = and i32 %v3_acd4, 65280
  %v1_ace0 = urem i32 %v0_ac5c, 256
  %v3_ace4 = mul nuw nsw i32 %v1_acc4, 256
  %v1_acec = urem i32 %v0_ac58, 256
  %v3_acf0 = mul nuw nsw i32 %v1_ace0, 256
  %tmp139 = udiv i32 %v0_ac50, 256
  %v4_acf4 = urem i32 %tmp139, 256
  %v5_acf4 = or i32 %v4_acf4, %v3_ace4
  store i32 %v5_acf4, i32* %r8.global-to-local, align 4
  %v4_acf8 = udiv i32 %v1_acac, 16777216
  %v5_acf8 = or i32 %v1_acdc, %v4_acf8
  store i32 %v5_acf8, i32* %sl.global-to-local, align 4
  %tmp140 = udiv i32 %v0_ac58, 256
  %v3_ad04 = urem i32 %tmp140, 256
  %v4_ad08 = sdiv i32 %v1_acb0, 16777216
  %tmp141 = udiv i32 %v7_a9e8, 256
  %v4_ad10 = mul nuw nsw i32 %v1_acec, 256
  %v5_ad10 = or i32 %v4_ad10, %v3_ad04
  store i32 %v5_ad10, i32* @r5, align 4
  %tmp142 = udiv i32 %v0_ac5c, 256
  %v4_ad14 = urem i32 %tmp142, 256
  %v5_ad14 = or i32 %v4_ad14, %v3_acf0
  store i32 %v5_ad14, i32* %sb.global-to-local, align 4
  store i32 %v1_acd8, i32* %r0.global-to-local, align 4
  %v1_ad20 = add i32 %v2_abf4, 1
  store i32 %v1_ad20, i32* @r7, align 4
  %v3_ad24 = ashr i32 %v1_acb0, 31
  store i32 %v3_ad24, i32* @lr, align 4
  store i32 %v1_acec, i32* %r1.global-to-local, align 4
  store i32 %v1_ace0, i32* %r2.global-to-local, align 4
  %v3_ad3075 = udiv i32 %v1_acdc, 256
  store i32 %v3_ad3075, i32* %r3.global-to-local, align 4
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_ad94 = sext i8 %v5_a9e4 to i32
  %sext13 = mul i32 %v6_aa00, 16777216
  %v4_adac = sdiv i32 %sext13, 16777216
  %sext14 = mul i32 %tmp141, 16777216
  %v4_adc0 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %v7_a9e8, 16777216
  %v4_adc4 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v1_acac, 256
  %v4_adf4 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v0_ac5c, 16777216
  %v4_adf8 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_ac58, 16777216
  %v4_ae1c = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_ac50, 16777216
  %v4_ae28 = sdiv i32 %sext19, 16777216
  %v1_ada4 = trunc i32 %v4_ad08 to i8
  %extract.t = trunc i32 %v3_ad24 to i8
  br label %dec_label_pc_ad54

dec_label_pc_ad54:                                ; preds = %dec_label_pc_aebc, %dec_label_pc_ac9c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_ad5c = call i32 @function_137ec(i32 600, i32 1)
  store i32 %v2_ad5c, i32* %r0.global-to-local, align 4
  store i32 %v2_a9ac, i32* %lr.global-to-local, align 4
  %v3_ad64 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ad64, i32* %r3.global-to-local, align 4
  %v2_ad68 = load i32, i32* @r4, align 4
  %v5_ad68 = mul i32 %v2_ad68, 4
  %v6_ad68 = add i32 %v5_ad68, %v2_a9ac
  %v7_ad68 = inttoptr i32 %v6_ad68 to i32*
  store i32 %v2_ad5c, i32* %v7_ad68, align 4
  %v0_ad6c = load i32, i32* %lr.global-to-local, align 4
  %v1_ad6c = load i32, i32* %r3.global-to-local, align 4
  %v4_ad6c = mul i32 %v1_ad6c, 4
  %v5_ad6c = add i32 %v4_ad6c, %v0_ad6c
  %v6_ad6c = inttoptr i32 %v5_ad6c to i32*
  %v7_ad6c = load i32, i32* %v6_ad6c, align 4
  store i32 %v7_ad6c, i32* %r1.global-to-local, align 4
  %v1_ad70 = inttoptr i32 %v7_ad6c to i8*
  %v2_ad70 = load i8, i8* %v1_ad70, align 1
  %tmp154 = urem i8 %v2_ad70, 16
  %v1_ad74 = zext i8 %tmp154 to i32
  %v1_ad78 = or i32 %v1_ad74, 64
  store i32 %v1_ad78, i32* %r2.global-to-local, align 4
  %v1_ad7c = trunc i32 %v1_ad78 to i8
  store i8 %v1_ad7c, i8* %v1_ad70, align 1
  %v0_ad80 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad80 = inttoptr i32 %v0_ad80 to i8*
  %v2_ad80 = load i8, i8* %v1_ad80, align 1
  %v1_ad84 = and i8 %v2_ad80, -16
  %v1_ad88 = or i8 %v1_ad84, 5
  store i32 %v1_aa2c, i32* %r0.global-to-local, align 4
  store i8 %v1_ad88, i8* %v1_ad80, align 1
  store i32 %v4_ad94, i32* %r2.global-to-local, align 4
  %v2_ad98 = load i32, i32* %r1.global-to-local, align 4
  %v3_ad98 = add i32 %v2_ad98, 1
  %v4_ad98 = inttoptr i32 %v3_ad98 to i8*
  store i8 %v5_a9e4, i8* %v4_ad98, align 1
  store i32 %v4_ad08, i32* %r3.global-to-local, align 4
  %v0_ada0 = load i32, i32* %r0.global-to-local, align 4
  %v2_ada0 = icmp eq i32 %v0_ada0, 0
  store i1 %v2_ada0, i1* %cpsr_z.global-to-local, align 1
  %v2_ada4 = load i32, i32* %r1.global-to-local, align 4
  %v3_ada4 = add i32 %v2_ada4, 2
  %v4_ada4 = inttoptr i32 %v3_ada4 to i8*
  store i8 %v1_ada4, i8* %v4_ada4, align 1
  store i32 %v3_ad24, i32* %r4.global-to-local, align 4
  store i32 %v4_adac, i32* %r0.global-to-local, align 4
  %v0_adb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_adb0, label %.thread21, label %bb143

bb143:                                            ; preds = %dec_label_pc_ad54
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_adb4 = load i32, i32* %r1.global-to-local, align 4
  %v4_adb4 = add i32 %v3_adb4, 6
  %v5_adb4 = inttoptr i32 %v4_adb4 to i8*
  store i8 64, i8* %v5_adb4, align 1
  %v0_adbc.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t76 = trunc i32 %v0_adbc.pre to i8
  br label %.thread21

.thread21:                                        ; preds = %dec_label_pc_ad54, %bb143
  %v0_adbc.off0 = phi i8 [ %extract.t, %dec_label_pc_ad54 ], [ %extract.t76, %bb143 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_adbc = load i32, i32* %r1.global-to-local, align 4
  %v3_adbc = add i32 %v2_adbc, 3
  %v4_adbc = inttoptr i32 %v3_adbc to i8*
  store i8 %v0_adbc.off0, i8* %v4_adbc, align 1
  store i32 %v4_adc0, i32* %ip.global-to-local, align 4
  store i32 %v4_adc4, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc4c.49 to i32), i32* %r4.global-to-local, align 4
  %v0_adcc = load i32, i32* %r0.global-to-local, align 4
  %v1_adcc = trunc i32 %v0_adcc to i8
  %v2_adcc = load i32, i32* %r1.global-to-local, align 4
  %v3_adcc = add i32 %v2_adcc, 8
  %v4_adcc = inttoptr i32 %v3_adcc to i8*
  store i8 %v1_adcc, i8* %v4_adcc, align 1
  %v0_add0 = load i32, i32* %r3.global-to-local, align 4
  %v1_add0 = trunc i32 %v0_add0 to i8
  %v2_add0 = load i32, i32* %r1.global-to-local, align 4
  %v3_add0 = add i32 %v2_add0, 9
  %v4_add0 = inttoptr i32 %v3_add0 to i8*
  store i8 %v1_add0, i8* %v4_add0, align 1
  %v0_add4 = load i32, i32* %lr.global-to-local, align 4
  %v1_add4 = trunc i32 %v0_add4 to i8
  %v2_add4 = load i32, i32* %r1.global-to-local, align 4
  %v3_add4 = add i32 %v2_add4, 5
  %v4_add4 = inttoptr i32 %v3_add4 to i8*
  store i8 %v1_add4, i8* %v4_add4, align 1
  %v0_add8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_add8, label %.thread22, label %bb144

.thread22:                                        ; preds = %.thread21
  %v2_addc23 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_addc23, i32* %r3.global-to-local, align 4
  store i32 %v4_aca0, i32* %lr.global-to-local, align 4
  br label %bb145

bb144:                                            ; preds = %.thread21
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_addc = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_addc, i32* %r3.global-to-local, align 4
  store i32 %v4_aca0, i32* %lr.global-to-local, align 4
  %v3_ade4 = load i32, i32* %r1.global-to-local, align 4
  %v4_ade4 = add i32 %v3_ade4, 7
  %v5_ade4 = inttoptr i32 %v4_ade4 to i8*
  store i8 0, i8* %v5_ade4, align 1
  %v0_adec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_adf0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb145

bb145:                                            ; preds = %.thread22, %bb144
  %v0_adf0 = phi i32 [ %v2_addc23, %.thread22 ], [ %v0_adf0.pre, %bb144 ]
  %v0_adec = phi i32 [ %v4_aca0, %.thread22 ], [ %v0_adec.pre, %bb144 ]
  %v0_ade8 = load i32, i32* %r1.global-to-local, align 4
  %v1_ade8 = add i32 %v0_adec, 41
  %v2_adec = add i32 %v1_ade8, %v0_ade8
  store i32 %v2_adec, i32* %r4.global-to-local, align 4
  %v2_adf0 = add i32 %v0_ade8, 12
  %v3_adf0 = inttoptr i32 %v2_adf0 to i32*
  store i32 %v0_adf0, i32* %v3_adf0, align 4
  store i32 %v4_adf4, i32* %r2.global-to-local, align 4
  store i32 %v4_adf8, i32* %r3.global-to-local, align 4
  %v0_adfc = load i32, i32* %r1.global-to-local, align 4
  %v1_adfc = add i32 %v0_adfc, 20
  store i32 %v1_adfc, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* %ip.global-to-local, align 4
  %v1_ae00 = trunc i32 %v0_ae00 to i8
  %v3_ae00 = add i32 %v0_adfc, 4
  %v4_ae00 = inttoptr i32 %v3_ae00 to i8*
  store i8 %v1_ae00, i8* %v4_ae00, align 1
  %v0_ae04 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae04 = trunc i32 %v0_ae04 to i8
  %v2_ae04 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae04 = add i32 %v2_ae04, 5
  %v4_ae04 = inttoptr i32 %v3_ae04 to i8*
  store i8 %v1_ae04, i8* %v4_ae04, align 1
  %v0_ae08 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae08 = trunc i32 %v0_ae08 to i8
  %v2_ae08 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae08 = add i32 %v2_ae08, 3
  %v4_ae08 = inttoptr i32 %v3_ae08 to i8*
  store i8 %v1_ae08, i8* %v4_ae08, align 1
  %v0_ae0c = load i32, i32* %sb.global-to-local, align 4
  %v1_ae0c = trunc i32 %v0_ae0c to i8
  %v2_ae0c = load i32, i32* %r0.global-to-local, align 4
  %v3_ae0c = add i32 %v2_ae0c, 2
  %v4_ae0c = inttoptr i32 %v3_ae0c to i8*
  store i8 %v1_ae0c, i8* %v4_ae0c, align 1
  %v0_ae10 = load i32, i32* %sl.global-to-local, align 4
  %v1_ae10 = trunc i32 %v0_ae10 to i8
  %v2_ae10 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae10 = add i32 %v2_ae10, 4
  %v4_ae10 = inttoptr i32 %v3_ae10 to i8*
  store i8 %v1_ae10, i8* %v4_ae10, align 1
  %v0_ae14 = load i32, i32* @r5, align 4
  %v1_ae14 = trunc i32 %v0_ae14 to i8
  %v2_ae14 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae14 = add i32 %v2_ae14, 20
  %v4_ae14 = inttoptr i32 %v3_ae14 to i8*
  store i8 %v1_ae14, i8* %v4_ae14, align 1
  store i32 %v4_ae1c, i32* %r2.global-to-local, align 4
  %v1_ae20 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae20 = add i32 %v1_ae20, 16
  %v3_ae20 = inttoptr i32 %v2_ae20 to i32*
  store i32 %stack_var_-2176.0, i32* %v3_ae20, align 4
  %v0_ae24 = load i32, i32* %r2.global-to-local, align 4
  %v1_ae24 = trunc i32 %v0_ae24 to i8
  %v2_ae24 = load i32, i32* %r0.global-to-local, align 4
  %v3_ae24 = add i32 %v2_ae24, 1
  %v4_ae24 = inttoptr i32 %v3_ae24 to i8*
  store i8 %v1_ae24, i8* %v4_ae24, align 1
  store i32 %v4_ae28, i32* %lr.global-to-local, align 4
  store i32 %v4_aca0, i32* %r0.global-to-local, align 4
  %v0_ae30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ae30 = add i32 %v0_ae30, 28
  store i32 %v1_ae30, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* %r8.global-to-local, align 4
  %v1_ae3c = trunc i32 %v0_ae3c to i8
  %v4_ae3c = inttoptr i32 %v1_ae30 to i8*
  store i8 %v1_ae3c, i8* %v4_ae3c, align 1
  %v0_ae40 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae40 = trunc i32 %v0_ae40 to i8
  %v2_ae40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae40 = add i32 %v2_ae40, 5
  %v4_ae40 = inttoptr i32 %v3_ae40 to i8*
  store i8 %v1_ae40, i8* %v4_ae40, align 1
  %v0_ae44 = load i32, i32* %lr.global-to-local, align 4
  %v1_ae44 = trunc i32 %v0_ae44 to i8
  %v2_ae44 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae44 = add i32 %v2_ae44, 1
  %v4_ae44 = inttoptr i32 %v3_ae44 to i8*
  store i8 %v1_ae44, i8* %v4_ae44, align 1
  %v0_ae48 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae48 = trunc i32 %v0_ae48 to i8
  %v2_ae48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae48 = add i32 %v2_ae48, 2
  %v4_ae48 = inttoptr i32 %v3_ae48 to i8*
  store i8 %v1_ae48, i8* %v4_ae48, align 1
  %v0_ae4c = load i32, i32* @r6, align 4
  %v1_ae4c = trunc i32 %v0_ae4c to i8
  %v2_ae4c = load i32, i32* %ip.global-to-local, align 4
  %v3_ae4c = add i32 %v2_ae4c, 3
  %v4_ae4c = inttoptr i32 %v3_ae4c to i8*
  store i8 %v1_ae4c, i8* %v4_ae4c, align 1
  %v0_ae50 = load i32, i32* @r6, align 4
  %v1_ae50 = trunc i32 %v0_ae50 to i8
  %v2_ae50 = load i32, i32* %ip.global-to-local, align 4
  %v3_ae50 = add i32 %v2_ae50, 4
  %v4_ae50 = inttoptr i32 %v3_ae50 to i8*
  store i8 %v1_ae50, i8* %v4_ae50, align 1
  %v0_ae54 = load i32, i32* %r0.global-to-local, align 4
  %v1_ae54 = trunc i32 %v0_ae54 to i8
  %v2_ae54 = load i32, i32* %r1.global-to-local, align 4
  %v3_ae54 = add i32 %v2_ae54, 40
  %v4_ae54 = inttoptr i32 %v3_ae54 to i8*
  store i8 %v1_ae54, i8* %v4_ae54, align 1
  store i32 %v5_aaa8, i32* %r1.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r7, align 4
  store i32 %v0_ae5c, i32* %r2.global-to-local, align 4
  %v0_ae60 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae60 = add i32 %v0_ae60, 1
  store i32 %v1_ae60, i32* %r0.global-to-local, align 4
  %v3_ae64 = call i32 @function_12394(i32 %v1_ae60, i32 %v5_aaa8, i32 %v0_ae5c)
  store i32 %v3_ae64, i32* %r0.global-to-local, align 4
  store i32 %v2_abf4, i32* %r1.global-to-local, align 4
  %v1_ae6c = load i32, i32* @r6, align 4
  %v9_ae6c = icmp eq i32 %v2_abf4, %v1_ae6c
  store i1 %v9_ae6c, i1* %cpsr_z.global-to-local, align 1
  %v7_ae70 = icmp sgt i32 %v2_abf4, %v1_ae6c
  store i32 %v1_ae6c, i32* %lr.global-to-local, align 4
  %v0_ae80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ae80, i32* %r2.global-to-local, align 4
  %extract.t78 = trunc i32 %v1_ae6c to i8
  br i1 %v7_ae70, label %dec_label_pc_ae7c, label %dec_label_pc_aebc

dec_label_pc_ae7c:                                ; preds = %bb145
  store i32 %v1_ae6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ae88

dec_label_pc_ae88:                                ; preds = %bb148, %dec_label_pc_ae7c
  %v0_aea485151 = phi i32 [ %v0_aea485152, %bb148 ], [ %v1_ae6c, %dec_label_pc_ae7c ]
  %v1_ae9833 = phi i32 [ %v1_aea891, %bb148 ], [ %v1_ae6c, %dec_label_pc_ae7c ]
  %v1_ae94.off0 = phi i8 [ %v1_ae9456.off0, %bb148 ], [ %extract.t78, %dec_label_pc_ae7c ]
  %v0_ae9832 = phi i32 [ %v0_ae98325488, %bb148 ], [ %v0_ae80, %dec_label_pc_ae7c ]
  store i32 %v5_aaa8, i32* %ip.global-to-local, align 4
  %v2_ae8c = add i32 %v1_ae9833, %v5_aaa8
  %v3_ae8c = inttoptr i32 %v2_ae8c to i8*
  %v4_ae8c = load i8, i8* %v3_ae8c, align 1
  %v6_ae8c = zext i8 %v4_ae8c to i32
  store i32 %v6_ae8c, i32* %r3.global-to-local, align 4
  %v7_ae90 = icmp eq i8 %v4_ae8c, 46
  store i1 %v7_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ae90, label %bb146, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_ae88
  %v2_ae9834 = add i32 %v1_ae9833, %v0_ae9832
  store i32 %v2_ae9834, i32* %r0.global-to-local, align 4
  br label %.thread35

bb146:                                            ; preds = %dec_label_pc_ae88
  %v3_ae94 = load i32, i32* %r2.global-to-local, align 4
  %v4_ae94 = inttoptr i32 %v3_ae94 to i8*
  store i8 %v1_ae94.off0, i8* %v4_ae94, align 1
  %v0_ae9c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ae98 = load i32, i32* %r4.global-to-local, align 4
  %v1_ae98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ae98 = add i32 %v1_ae98, %v0_ae98
  store i32 %v2_ae98, i32* %r0.global-to-local, align 4
  br i1 %v0_ae9c.pr, label %bb147, label %bb146..thread35_crit_edge

bb146..thread35_crit_edge:                        ; preds = %bb146
  %v0_aea485.pre = load i32, i32* %lr.global-to-local, align 4
  br label %.thread35

bb147:                                            ; preds = %bb146
  %v2_ae9c = add i32 %v2_ae98, 1
  store i32 %v2_ae9c, i32* %r2.global-to-local, align 4
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v0_aea4 = load i32, i32* %lr.global-to-local, align 4
  %v1_aea4 = add i32 %v0_aea4, 1
  store i32 %v1_aea4, i32* %ip.global-to-local, align 4
  %v1_aea8 = add i32 %v1_ae98, 1
  store i32 %v1_aea8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb148

.thread35:                                        ; preds = %bb146..thread35_crit_edge, %.thread31
  %v0_aea485 = phi i32 [ %v0_aea485.pre, %bb146..thread35_crit_edge ], [ %v0_aea485151, %.thread31 ]
  %v0_aea8.ph = phi i32 [ %v1_ae98, %bb146..thread35_crit_edge ], [ %v1_ae9833, %.thread31 ]
  %v0_ae983254.ph = phi i32 [ %v0_ae98, %bb146..thread35_crit_edge ], [ %v0_ae9832, %.thread31 ]
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v1_aea486 = add i32 %v0_aea485, 1
  store i32 %v1_aea486, i32* %ip.global-to-local, align 4
  %v1_aea887 = add i32 %v0_aea8.ph, 1
  store i32 %v1_aea887, i32* %r1.global-to-local, align 4
  %v2_aeb0 = urem i32 %v1_aea486, 256
  store i32 %v2_aeb0, i32* %lr.global-to-local, align 4
  %extract.t81 = trunc i32 %v1_aea486 to i8
  br label %bb148

bb148:                                            ; preds = %bb147, %.thread35
  %v0_aea485152 = phi i32 [ 0, %bb147 ], [ %v2_aeb0, %.thread35 ]
  %v1_aea891 = phi i32 [ %v1_aea8, %bb147 ], [ %v1_aea887, %.thread35 ]
  %v0_ae98325488 = phi i32 [ %v0_ae98, %bb147 ], [ %v0_ae983254.ph, %.thread35 ]
  %v1_ae9456.off0 = phi i8 [ 0, %bb147 ], [ %extract.t81, %.thread35 ]
  %v9_aeb4 = icmp eq i32 %v2_abf4, %v1_aea891
  store i1 %v9_aeb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aeb4, label %dec_label_pc_aebc.loopexit, label %dec_label_pc_ae88

dec_label_pc_aebc.loopexit:                       ; preds = %bb148
  %v2_aebc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aebc.loopexit, %bb145
  %v2_aebc = phi i32 [ %v2_aebc.pre, %dec_label_pc_aebc.loopexit ], [ %v0_ae80, %bb145 ]
  %v0_aebc.off0 = phi i8 [ %v1_ae9456.off0, %dec_label_pc_aebc.loopexit ], [ %extract.t78, %bb145 ]
  %v3_aebc = inttoptr i32 %v2_aebc to i8*
  store i8 %v0_aebc.off0, i8* %v3_aebc, align 1
  %v3_aec0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_abf4, i32* %r1.global-to-local, align 4
  %v0_aec8 = load i32, i32* %r4.global-to-local, align 4
  %v2_aec8 = add i32 %v0_aec8, %v2_abf4
  store i32 %v2_aec8, i32* %r3.global-to-local, align 4
  %v1_aecc = add i32 %v3_aec0, 1
  store i32 %v1_aecc, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* @lr, align 4
  %v9_aedc = icmp eq i32 %v1_a994, %v1_aecc
  store i1 %v9_aedc, i1* %cpsr_z.global-to-local, align 1
  %v1_aee0 = add i32 %v2_aec8, 2
  store i32 %v1_aee0, i32* %r2.global-to-local, align 4
  %v4_aee4 = inttoptr i32 %v1_aee0 to i8*
  store i8 0, i8* %v4_aee4, align 1
  %v0_aee8 = load i32, i32* @lr, align 4
  %v1_aee8 = trunc i32 %v0_aee8 to i8
  %v2_aee8 = load i32, i32* %r2.global-to-local, align 4
  %v3_aee8 = add i32 %v2_aee8, 3
  %v4_aee8 = inttoptr i32 %v3_aee8 to i8*
  store i8 %v1_aee8, i8* %v4_aee8, align 1
  %v0_aeec = load i32, i32* @lr, align 4
  %v1_aeec = trunc i32 %v0_aeec to i8
  %v2_aeec = load i32, i32* %r2.global-to-local, align 4
  %v3_aeec = add i32 %v2_aeec, 1
  %v4_aeec = inttoptr i32 %v3_aeec to i8*
  store i8 %v1_aeec, i8* %v4_aeec, align 1
  %v0_aef0 = load i32, i32* %ip.global-to-local, align 4
  %v1_aef0 = trunc i32 %v0_aef0 to i8
  %v2_aef0 = load i32, i32* %r2.global-to-local, align 4
  %v3_aef0 = add i32 %v2_aef0, 2
  %v4_aef0 = inttoptr i32 %v3_aef0 to i8*
  store i8 %v1_aef0, i8* %v4_aef0, align 1
  %v0_aef4 = load i32, i32* @r4, align 4
  store i32 %v0_aef4, i32* %stack_var_-40, align 4
  %v8_aef8 = icmp sgt i32 %v1_a994, %v1_aecc
  br i1 %v8_aef8, label %dec_label_pc_ad54, label %dec_label_pc_aefc

dec_label_pc_aefc:                                ; preds = %dec_label_pc_aebc, %dec_label_pc_b0c8
  %v4_af6c.pre-phi = phi i32 [ %v4_b0cc, %dec_label_pc_b0c8 ], [ %v4_aca0, %dec_label_pc_aebc ]
  store i32 %v1_a994, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_ac78, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_af08, %dec_label_pc_b02c, %dec_label_pc_aefc
  br i1 %v2_ac78, label %dec_label_pc_af08, label %dec_label_pc_af0c

dec_label_pc_af0c:                                ; preds = %dec_label_pc_af08
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r6, align 4
  %v0_af1c = load i32, i32* @fp, align 4
  %v1_af1c = add i32 %v0_af1c, 27
  store i32 %v1_af1c, i32* @sb, align 4
  %v1_af20 = add i32 %v0_af1c, 47
  store i32 %v1_af20, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af68.dec_label_pc_af28_crit_edge, %dec_label_pc_af0c
  %v1_af48 = phi i32 [ %v1_af34.pre, %dec_label_pc_af68.dec_label_pc_af28_crit_edge ], [ 65535, %dec_label_pc_af0c ]
  %v1_af30 = phi i32 [ %v1_b018, %dec_label_pc_af68.dec_label_pc_af28_crit_edge ], [ 0, %dec_label_pc_af0c ]
  store i32 %v2_a9ac, i32* %r3.global-to-local, align 4
  store i32 %v3_ac68, i32* %r8.global-to-local, align 4
  %v4_af30 = mul i32 %v1_af30, 4
  %v5_af30 = add i32 %v4_af30, %v2_a9ac
  %v6_af30 = inttoptr i32 %v5_af30 to i32*
  %v7_af30 = load i32, i32* %v6_af30, align 4
  store i32 %v7_af30, i32* @r4, align 4
  %v9_af34 = icmp eq i32 %v3_ac68, %v1_af48
  store i1 %v9_af34, i1* %cpsr_z.global-to-local, align 1
  %v1_af38 = add i32 %v7_af30, 20
  store i32 %v1_af38, i32* @r5, align 4
  %v1_af3c = add i32 %v7_af30, 28
  store i32 %v1_af3c, i32* @r8, align 4
  br i1 %v9_af34, label %dec_label_pc_b03c, label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af28
  store i32 %v3_ac6c, i32* %ip.global-to-local, align 4
  %v9_af48 = icmp eq i32 %v3_ac6c, %v1_af48
  store i1 %v9_af48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af48, label %dec_label_pc_b058, label %dec_label_pc_af50

dec_label_pc_af50:                                ; preds = %dec_label_pc_b03c.dec_label_pc_af50_crit_edge, %dec_label_pc_af44
  %v1_af54 = phi i32 [ %v1_af54.pre, %dec_label_pc_b03c.dec_label_pc_af50_crit_edge ], [ %v1_af48, %dec_label_pc_af44 ]
  store i32 %v3_ac70, i32* %lr.global-to-local, align 4
  %v9_af54 = icmp eq i32 %v3_ac70, %v1_af54
  store i1 %v9_af54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af54, label %dec_label_pc_b074, label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %dec_label_pc_b058.dec_label_pc_af5c_crit_edge, %dec_label_pc_af50
  %v1_af60 = phi i32 [ %v1_af60.pre, %dec_label_pc_b058.dec_label_pc_af5c_crit_edge ], [ %v1_af54, %dec_label_pc_af50 ]
  store i32 %v3_ac74, i32* %r0.global-to-local, align 4
  %v9_af60 = icmp eq i32 %v3_ac74, %v1_af60
  store i1 %v9_af60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af60, label %dec_label_pc_b090, label %dec_label_pc_af68

dec_label_pc_af68:                                ; preds = %dec_label_pc_b074, %dec_label_pc_af5c, %dec_label_pc_b090
  %v0_af68 = load i32, i32* @r4, align 4
  %v1_af68 = add i32 %v0_af68, 41
  store i32 %v1_af68, i32* %r0.global-to-local, align 4
  store i32 %v4_af6c.pre-phi, i32* %r1.global-to-local, align 4
  %v2_af70 = call i32 @function_e8e0(i32 %v1_af68, i32 %v4_af6c.pre-phi)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_af78 = load i32, i32* @r7, align 4
  %v1_af78 = trunc i32 %v0_af78 to i8
  %v2_af78 = load i32, i32* @r4, align 4
  %v3_af78 = add i32 %v2_af78, 10
  %v4_af78 = inttoptr i32 %v3_af78 to i8*
  store i8 %v1_af78, i8* %v4_af78, align 1
  %v0_af7c = load i32, i32* @r7, align 4
  %v1_af7c = trunc i32 %v0_af7c to i8
  %v2_af7c = load i32, i32* @r4, align 4
  %v3_af7c = add i32 %v2_af7c, 11
  %v4_af7c = inttoptr i32 %v3_af7c to i8*
  store i8 %v1_af7c, i8* %v4_af7c, align 1
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* @r0, align 4
  %v2_af84 = call i32 @function_d0b8(i32 %v0_af80, i32 20)
  %v3_af84 = trunc i32 %v2_af84 to i8
  store i32 %v2_af84, i32* %r0.global-to-local, align 4
  %v4_af88 = sdiv i32 %v2_af84, 256
  store i32 %v4_af88, i32* %r3.global-to-local, align 4
  %v1_af8c = trunc i32 %v4_af88 to i8
  %v2_af8c = load i32, i32* @r4, align 4
  %v3_af8c = add i32 %v2_af8c, 11
  %v4_af8c = inttoptr i32 %v3_af8c to i8*
  store i8 %v1_af8c, i8* %v4_af8c, align 1
  %v3_af90 = load i32, i32* @r4, align 4
  %v4_af90 = add i32 %v3_af90, 10
  %v5_af90 = inttoptr i32 %v4_af90 to i8*
  store i8 %v3_af84, i8* %v5_af90, align 1
  %v0_af94 = load i32, i32* @r7, align 4
  %v1_af94 = trunc i32 %v0_af94 to i8
  %v2_af94 = load i32, i32* @r5, align 4
  %v3_af94 = add i32 %v2_af94, 6
  %v4_af94 = inttoptr i32 %v3_af94 to i8*
  store i8 %v1_af94, i8* %v4_af94, align 1
  %v0_af98 = load i32, i32* @r7, align 4
  %v1_af98 = trunc i32 %v0_af98 to i8
  %v2_af98 = load i32, i32* @r5, align 4
  %v3_af98 = add i32 %v2_af98, 7
  %v4_af98 = inttoptr i32 %v3_af98 to i8*
  store i8 %v1_af98, i8* %v4_af98, align 1
  %v0_af9c = load i32, i32* @r4, align 4
  %v1_af9c = add i32 %v0_af9c, 24
  %v2_af9c = inttoptr i32 %v1_af9c to i8*
  %v3_af9c = load i8, i8* %v2_af9c, align 1
  %v4_af9c = zext i8 %v3_af9c to i32
  store i32 %v4_af9c, i32* %r3.global-to-local, align 4
  %v1_afa0 = add i32 %v0_af9c, 25
  %v2_afa0 = inttoptr i32 %v1_afa0 to i8*
  %v3_afa0 = load i8, i8* %v2_afa0, align 1
  %v4_afa0 = zext i8 %v3_afa0 to i32
  %v0_afa4 = load i32, i32* @r5, align 4
  store i32 %v0_afa4, i32* @r1, align 4
  %v4_afa8 = mul nuw nsw i32 %v4_afa0, 256
  %v5_afa8 = or i32 %v4_afa8, %v4_af9c
  store i32 %v5_afa8, i32* %r2.global-to-local, align 4
  store i32 %v0_af9c, i32* %r0.global-to-local, align 4
  %v0_afb0 = load i32, i32* @sb, align 4
  store i32 %v0_afb0, i32* %r3.global-to-local, align 4
  %v4_afb4 = call i32 @function_d114(i32 %v0_af9c, i32 %v0_afa4, i32 %v5_afa8, i32 %v0_afb0)
  %v5_afb4 = trunc i32 %v4_afb4 to i8
  store i32 %v4_afb4, i32* %r0.global-to-local, align 4
  %v3_afb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-2176.0, i32* %r2.global-to-local, align 4
  %v5_afc8 = mul i32 %v3_afb8, 24
  %v2_afcc = add i32 %v5_afc8, %arg2
  store i32 %v2_afcc, i32* %lr.global-to-local, align 4
  %v4_afd0 = sdiv i32 %v4_afb4, 256
  store i32 %v4_afd0, i32* %r3.global-to-local, align 4
  %v3_afd4 = load i32, i32* @r5, align 4
  %v4_afd4 = add i32 %v3_afd4, 6
  %v5_afd4 = inttoptr i32 %v4_afd4 to i8*
  store i8 %v5_afb4, i8* %v5_afd4, align 1
  %v0_afd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_afd8 = trunc i32 %v0_afd8 to i8
  %v2_afd8 = load i32, i32* @r5, align 4
  %v3_afd8 = add i32 %v2_afd8, 7
  %v4_afd8 = inttoptr i32 %v3_afd8 to i8*
  store i8 %v1_afd8, i8* %v4_afd8, align 1
  %v0_afdc = load i32, i32* %r2.global-to-local, align 4
  %v1_afdc = load i32, i32* %lr.global-to-local, align 4
  %v2_afdc = add i32 %v1_afdc, 4
  %v3_afdc = inttoptr i32 %v2_afdc to i32*
  store i32 %v0_afdc, i32* %v3_afdc, align 4
  %v0_afe0 = load i32, i32* @r4, align 4
  %v1_afe0 = add i32 %v0_afe0, 20
  %v2_afe0 = inttoptr i32 %v1_afe0 to i32*
  %v3_afe0 = load i32, i32* %v2_afe0, align 4
  %v3_afe4 = udiv i32 %v3_afe0, 65536
  store i32 %v3_afe4, i32* %r3.global-to-local, align 4
  %v3_afe812 = udiv i32 %v3_afe0, 16777216
  %v1_afec = trunc i32 %v3_afe812 to i8
  %v2_afec = load i32, i32* %lr.global-to-local, align 4
  %v3_afec = add i32 %v2_afec, 3
  %v4_afec = inttoptr i32 %v3_afec to i8*
  store i8 %v1_afec, i8* %v4_afec, align 1
  %v0_aff0 = load i32, i32* %r3.global-to-local, align 4
  %v1_aff0 = trunc i32 %v0_aff0 to i8
  %v2_aff0 = load i32, i32* %lr.global-to-local, align 4
  %v3_aff0 = add i32 %v2_aff0, 2
  %v4_aff0 = inttoptr i32 %v3_aff0 to i8*
  store i8 %v1_aff0, i8* %v4_aff0, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_affc = load i32, i32* @r4, align 4
  store i32 %v0_affc, i32* %r1.global-to-local, align 4
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v0_b004 = load i32, i32* @sl, align 4
  store i32 %v0_b004, i32* %r2.global-to-local, align 4
  %v0_b008 = load i32, i32* %lr.global-to-local, align 4
  %v6_b010 = inttoptr i32 %v0_affc to i32*
  %v7_b010 = call i32 @function_1349c(i32 %v3_ac08, i32* %v6_b010, i32 %v0_b004, i32 16384, i32 %v0_b008, i32 16)
  %v3_b014 = load i32, i32* %stack_var_-40, align 4
  %v1_b018 = add i32 %v3_b014, 1
  store i32 %v1_b018, i32* %r0.global-to-local, align 4
  store i32 %v1_a994, i32* %r3.global-to-local, align 4
  %v9_b020 = icmp eq i32 %v1_a994, %v1_b018
  store i1 %v9_b020, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b018, i32* %stack_var_-40, align 4
  %v8_b028 = icmp sgt i32 %v1_a994, %v1_b018
  br i1 %v8_b028, label %dec_label_pc_af68.dec_label_pc_af28_crit_edge, label %dec_label_pc_b02c

dec_label_pc_af68.dec_label_pc_af28_crit_edge:    ; preds = %dec_label_pc_af68
  %v1_af34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af28

dec_label_pc_b02c:                                ; preds = %dec_label_pc_af68
  store i32 %v1_a994, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_af08

dec_label_pc_b03c:                                ; preds = %dec_label_pc_af28
  %v0_b03c = call i32 @function_e82c()
  %v1_b03c = trunc i32 %v0_b03c to i8
  store i32 %v0_b03c, i32* %r0.global-to-local, align 4
  store i32 %v3_ac6c, i32* %ip.global-to-local, align 4
  %v4_b044 = sdiv i32 %v0_b03c, 256
  store i32 %v4_b044, i32* %r3.global-to-local, align 4
  %v1_b048 = load i32, i32* @r6, align 4
  %v9_b048 = icmp eq i32 %v3_ac6c, %v1_b048
  store i1 %v9_b048, i1* %cpsr_z.global-to-local, align 1
  %v1_b04c = trunc i32 %v4_b044 to i8
  %v2_b04c = load i32, i32* @r4, align 4
  %v3_b04c = add i32 %v2_b04c, 5
  %v4_b04c = inttoptr i32 %v3_b04c to i8*
  store i8 %v1_b04c, i8* %v4_b04c, align 1
  %v3_b050 = load i32, i32* @r4, align 4
  %v4_b050 = add i32 %v3_b050, 4
  %v5_b050 = inttoptr i32 %v4_b050 to i8*
  store i8 %v1_b03c, i8* %v5_b050, align 1
  %v0_b054 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b054, label %dec_label_pc_b058, label %dec_label_pc_b03c.dec_label_pc_af50_crit_edge

dec_label_pc_b03c.dec_label_pc_af50_crit_edge:    ; preds = %dec_label_pc_b03c
  %v1_af54.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af50

dec_label_pc_b058:                                ; preds = %dec_label_pc_b03c, %dec_label_pc_af44
  %v0_b058 = call i32 @function_e82c()
  %v1_b058 = trunc i32 %v0_b058 to i8
  store i32 %v0_b058, i32* %r0.global-to-local, align 4
  store i32 %v3_ac70, i32* %lr.global-to-local, align 4
  %v4_b060 = sdiv i32 %v0_b058, 256
  store i32 %v4_b060, i32* %r3.global-to-local, align 4
  %v1_b064 = load i32, i32* @r6, align 4
  %v9_b064 = icmp eq i32 %v3_ac70, %v1_b064
  store i1 %v9_b064, i1* %cpsr_z.global-to-local, align 1
  %v3_b068 = load i32, i32* @r4, align 4
  %v4_b068 = add i32 %v3_b068, 20
  %v5_b068 = inttoptr i32 %v4_b068 to i8*
  store i8 %v1_b058, i8* %v5_b068, align 1
  %v0_b06c = load i32, i32* %r3.global-to-local, align 4
  %v1_b06c = trunc i32 %v0_b06c to i8
  %v2_b06c = load i32, i32* @r5, align 4
  %v3_b06c = add i32 %v2_b06c, 1
  %v4_b06c = inttoptr i32 %v3_b06c to i8*
  store i8 %v1_b06c, i8* %v4_b06c, align 1
  %v0_b070 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b070, label %dec_label_pc_b074, label %dec_label_pc_b058.dec_label_pc_af5c_crit_edge

dec_label_pc_b058.dec_label_pc_af5c_crit_edge:    ; preds = %dec_label_pc_b058
  %v1_af60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_af5c

dec_label_pc_b074:                                ; preds = %dec_label_pc_b058, %dec_label_pc_af50
  %v0_b074 = call i32 @function_e82c()
  %v1_b074 = trunc i32 %v0_b074 to i8
  %v4_b078 = sdiv i32 %v0_b074, 256
  store i32 %v4_b078, i32* %r3.global-to-local, align 4
  %v3_b07c = load i32, i32* @r5, align 4
  %v4_b07c = add i32 %v3_b07c, 2
  %v5_b07c = inttoptr i32 %v4_b07c to i8*
  store i8 %v1_b074, i8* %v5_b07c, align 1
  store i32 %v3_ac74, i32* %r0.global-to-local, align 4
  %v1_b084 = load i32, i32* @r6, align 4
  %v9_b084 = icmp eq i32 %v3_ac74, %v1_b084
  store i1 %v9_b084, i1* %cpsr_z.global-to-local, align 1
  %v0_b088 = load i32, i32* %r3.global-to-local, align 4
  %v1_b088 = trunc i32 %v0_b088 to i8
  %v2_b088 = load i32, i32* @r5, align 4
  %v3_b088 = add i32 %v2_b088, 3
  %v4_b088 = inttoptr i32 %v3_b088 to i8*
  store i8 %v1_b088, i8* %v4_b088, align 1
  %v0_b08c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b08c, label %dec_label_pc_b090, label %dec_label_pc_af68

dec_label_pc_b090:                                ; preds = %dec_label_pc_b074, %dec_label_pc_af5c
  %v0_b090 = call i32 @function_e82c()
  %v1_b090 = trunc i32 %v0_b090 to i8
  store i32 %v0_b090, i32* %r0.global-to-local, align 4
  %v4_b094 = sdiv i32 %v0_b090, 256
  store i32 %v4_b094, i32* %r3.global-to-local, align 4
  %v3_b098 = load i32, i32* @r4, align 4
  %v4_b098 = add i32 %v3_b098, 28
  %v5_b098 = inttoptr i32 %v4_b098 to i8*
  store i8 %v1_b090, i8* %v5_b098, align 1
  %v0_b09c = load i32, i32* %r3.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i8
  %v2_b09c = load i32, i32* @r8, align 4
  %v3_b09c = add i32 %v2_b09c, 1
  %v4_b09c = inttoptr i32 %v3_b09c to i8*
  store i8 %v1_b09c, i8* %v4_b09c, align 1
  br label %dec_label_pc_af68

dec_label_pc_b0a4:                                ; preds = %dec_label_pc_ab70, %dec_label_pc_ab3c, %dec_label_pc_aae0, %dec_label_pc_a988
  %v0_b0a4 = call i32 @function_e82c()
  %v1_b0a8 = urem i32 %v0_b0a4, 4
  store i32 %v1_b0a8, i32* %r0.global-to-local, align 4
  %v2_b0ac = icmp eq i32 %v1_b0a8, 3
  store i1 %v2_b0ac, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_b0a4 to i2
  switch i2 %trunc, label %dec_label_pc_abe420 [
    i2 0, label %dec_label_pc_b0ec
    i2 1, label %dec_label_pc_b100
    i2 -2, label %dec_label_pc_b10c
    i2 -1, label %dec_label_pc_b11c
  ]

dec_label_pc_b0c8:                                ; preds = %dec_label_pc_ac44
  store i32 %v2_abf4, i32* %r0.global-to-local, align 4
  %v4_b0cc = sext i8 %v5_ac60 to i32
  store i32 %v4_b0cc, i32* %r1.global-to-local, align 4
  %v2_b0d0 = add i32 %v4_b0cc, %v2_abf4
  store i32 %v2_b0d0, i32* @fp, align 4
  br label %dec_label_pc_aefc

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_ac18
  store i32 %v3_ac08, i32* %r0.global-to-local, align 4
  %v1_b0dc = call i32 @function_12c1c(i32 %v3_ac08)
  store i32 %v1_b0dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_abf0, %dec_label_pc_abe4, %dec_label_pc_b0d8
  %v29_b0e8 = phi i32 [ %v3_ac08, %dec_label_pc_abf0 ], [ %v29_b0e874, %dec_label_pc_abe4 ], [ %v1_b0dc, %dec_label_pc_b0d8 ]
  store i32 %v3_a988, i32* %r4.global-to-local, align 4
  store i32 %v15_a988, i32* %r8.global-to-local, align 4
  store i32 %v18_a988, i32* %sb.global-to-local, align 4
  store i32 %v21_a988, i32* %sl.global-to-local, align 4
  store i32 %v24_a988, i32* %fp.global-to-local, align 4
  ret i32 %v29_b0e8

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0a4
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b100:                                ; preds = %dec_label_pc_b0a4
  store i32 707416650, i32* @r4, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0a4
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_abe4

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b0a4
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_abe4

; uselistorder directives
  uselistorder i32 %v4_b0cc, { 0, 2, 1 }
  uselistorder i32 %v1_b0a8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_b0a4, { 1, 0 }
  uselistorder i32 %v0_b090, { 0, 2, 1 }
  uselistorder i32 %v0_b058, { 0, 2, 1 }
  uselistorder i32 %v4_b044, { 1, 0 }
  uselistorder i32 %v0_b03c, { 0, 2, 1 }
  uselistorder i32 %v1_b018, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_afb4, { 0, 2, 1 }
  uselistorder i32 %v0_af9c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_af88, { 1, 0 }
  uselistorder i32 %v2_af84, { 0, 2, 1 }
  uselistorder i32 %v7_af30, { 1, 0, 2 }
  uselistorder i32 %v4_af6c.pre-phi, { 1, 0 }
  uselistorder i32 %v2_aeb0, { 1, 0 }
  uselistorder i32 %v1_aea486, { 1, 0, 2 }
  uselistorder i32 %v1_ae98, { 2, 1, 0 }
  uselistorder i32 %v0_ae98, { 1, 2, 0 }
  uselistorder i32 %v0_ae9832, { 1, 0 }
  uselistorder i32 %v1_ae9833, { 2, 0, 1 }
  uselistorder i8 %extract.t78, { 1, 0 }
  uselistorder i32 %v1_ae6c, { 2, 0, 4, 1, 3, 5, 6 }
  uselistorder i32 %v0_ade8, { 1, 0 }
  uselistorder i32 %v3_ad24, { 1, 0, 2 }
  uselistorder i32 %v1_acec, { 1, 0 }
  uselistorder i32 %v1_ace0, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_acb0, { 1, 0 }
  uselistorder i32 %v3_aca8, { 1, 0 }
  uselistorder i32 %v4_aca0, { 0, 4, 2, 5, 3, 1 }
  uselistorder i8 %v5_ac60, { 1, 0 }
  uselistorder i32 %v0_ac5c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_ac50, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ac3c, { 1, 0 }
  uselistorder i1 %v7_ac0c, { 1, 0 }
  uselistorder i32 %v3_ac08, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_abf4, { 0, 11, 1, 6, 4, 3, 7, 10, 9, 8, 5, 2 }
  uselistorder i32 %stack_var_-2176.0, { 1, 0 }
  uselistorder i32 %v1_abdc, { 1, 0, 2 }
  uselistorder i1 %v7_abac, { 1, 0 }
  uselistorder i32 %v1_aba8, { 1, 0, 2 }
  uselistorder i1 %v8_aba0, { 1, 0 }
  uselistorder i1 %v7_ab9c, { 1, 0 }
  uselistorder i32 %v1_ab90, { 1, 0 }
  uselistorder i8 %v2_ab84, { 2, 0, 1, 3 }
  uselistorder i32 %v0_ab88, { 1, 0 }
  uselistorder i32 %v0_aba8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_ab74, { 0, 2, 1 }
  uselistorder i32 %v1_ab8c, { 0, 2, 1 }
  uselistorder i32 %v2_ab5c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_ab54, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ab3c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i1 %v7_ab34, { 1, 0 }
  uselistorder i32 %v0_ab34, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder i32 %v0_aad8, { 1, 0, 3, 2 }
  uselistorder i32 %v5_aaa8, { 0, 3, 5, 4, 2, 1, 7, 6 }
  uselistorder i32 %v1_aa2c, { 1, 0 }
  uselistorder i32 %v7_a9e8, { 0, 1, 2, 4, 3 }
  uselistorder i8 %v5_a9e4, { 1, 0 }
  uselistorder i32 %v6_a9c4, { 1, 0 }
  uselistorder i32 %v2_a9ac, { 0, 3, 1, 2 }
  uselistorder i32 %v1_a994, { 7, 4, 5, 6, 3, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 13, 8, 12, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 46, 45, 47, 49, 48, 51, 50, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 7, 6, 8, 10, 9, 11, 13, 12, 14, 15, 16, 17, 29, 18, 19, 1, 34, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 38, 35, 36, 37, 39, 41, 40, 42, 68, 43, 45, 44, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 29, 26, 33, 34, 35 }
  uselistorder i32 134744072, { 1, 0 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 33686020, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aefc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %dec_label_pc_abb8, { 1, 0 }
  uselistorder label %dec_label_pc_abac, { 1, 0 }
  uselistorder label %dec_label_pc_ab70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab68, { 1, 0 }
}

define i32 @function_b138(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b138:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp30 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_b13c = urem i32 %arg1, 256
  store i32 %v1_b13c, i32* @fp, align 4
  store i32 %v1_b13c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b154 = urem i32 %arg3, 256
  store i32 %v1_b154, i32* @r4, align 4
  %v2_b158 = call i32 @function_137ec(i32 %v1_b13c, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b164 = load i32, i32* @fp, align 4
  store i32 %v0_b164, i32* %r0.global-to-local, align 4
  %v2_b168 = call i32 @function_137ec(i32 %v0_b164, i32 4)
  %v0_b16c = load i32, i32* @r5, align 4
  store i32 %v0_b16c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b17c = load i32, i32* @r4, align 4
  store i32 %v0_b17c, i32* %r0.global-to-local, align 4
  %v5_b180 = inttoptr i32 %v0_b16c to i32*
  %v6_b180 = call i32 @function_85e0(i32 %v0_b17c, i32* %v5_b180, i32 2, i32 0)
  %v1_b18c = urem i32 %v6_b180, 256
  store i32 %v1_b18c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b198 = load i32, i32* @r5, align 4
  store i32 %v0_b198, i32* %r1.global-to-local, align 4
  %v0_b19c = load i32, i32* @r4, align 4
  store i32 %v0_b19c, i32* %r0.global-to-local, align 4
  %v6_b1a4 = inttoptr i32 %v0_b198 to i32*
  %v7_b1a4 = call i32 @function_85e0(i32 %v0_b19c, i32* %v6_b1a4, i32 3, i32 65535)
  %v0_b1a8 = load i32, i32* @r5, align 4
  store i32 %v0_b1a8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b1a4, i32* @r6, align 4
  %v0_b1b8 = load i32, i32* @r4, align 4
  store i32 %v0_b1b8, i32* %r0.global-to-local, align 4
  %v4_b1bc = inttoptr i32 %v0_b1a8 to i32*
  %v5_b1bc = call i32 @function_85e0(i32 %v0_b1b8, i32* %v4_b1bc, i32 4, i32 64)
  %v1_b1c4 = urem i32 %v5_b1bc, 256
  store i32 %v1_b1c4, i32* %ip.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @r5, align 4
  store i32 %v0_b1c8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b1d4 = load i32, i32* @r4, align 4
  store i32 %v0_b1d4, i32* %r0.global-to-local, align 4
  %v6_b1dc = inttoptr i32 %v0_b1c8 to i32*
  %v7_b1dc = call i32 @function_85e0(i32 %v0_b1d4, i32* %v6_b1dc, i32 5, i32 1)
  %v1_b1e8 = urem i32 %v7_b1dc, 256
  store i32 %v1_b1e8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b1f0 = load i32, i32* @r5, align 4
  store i32 %v0_b1f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b1f8 = load i32, i32* @r4, align 4
  store i32 %v0_b1f8, i32* %r0.global-to-local, align 4
  %v5_b200 = inttoptr i32 %v0_b1f0 to i32*
  %v6_b200 = call i32 @function_85e0(i32 %v0_b1f8, i32* %v5_b200, i32 7, i32 65535)
  %v0_b204 = load i32, i32* @r5, align 4
  store i32 %v0_b204, i32* %r1.global-to-local, align 4
  %v3_b208 = mul i32 %v6_b200, 65536
  store i32 %v3_b208, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b214 = load i32, i32* @r4, align 4
  store i32 %v0_b214, i32* %r0.global-to-local, align 4
  %v4_b218 = inttoptr i32 %v0_b204 to i32*
  %v5_b218 = call i32 @function_85e0(i32 %v0_b214, i32* %v4_b218, i32 11, i32 1)
  %v1_b220 = urem i32 %v5_b218, 256
  store i32 %v1_b220, i32* %ip.global-to-local, align 4
  %v0_b224 = load i32, i32* @r5, align 4
  store i32 %v0_b224, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b230 = load i32, i32* @r4, align 4
  store i32 %v0_b230, i32* %r0.global-to-local, align 4
  %v5_b238 = inttoptr i32 %v0_b224 to i32*
  %v6_b238 = call i32 @function_85e0(i32 %v0_b230, i32* %v5_b238, i32 12, i32 1)
  %v1_b240 = urem i32 %v6_b238, 256
  store i32 %v1_b240, i32* %ip.global-to-local, align 4
  %v0_b244 = load i32, i32* @r5, align 4
  store i32 %v0_b244, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b250 = load i32, i32* @r4, align 4
  store i32 %v0_b250, i32* %r0.global-to-local, align 4
  %v5_b258 = inttoptr i32 %v0_b244 to i32*
  %v6_b258 = call i32 @function_85e0(i32 %v0_b250, i32* %v5_b258, i32 13, i32 1)
  %v1_b260 = urem i32 %v6_b258, 256
  store i32 %v1_b260, i32* %ip.global-to-local, align 4
  %v0_b264 = load i32, i32* @r5, align 4
  store i32 %v0_b264, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b270 = load i32, i32* @r4, align 4
  store i32 %v0_b270, i32* %r0.global-to-local, align 4
  %v5_b278 = inttoptr i32 %v0_b264 to i32*
  %v6_b278 = call i32 @function_85e0(i32 %v0_b270, i32* %v5_b278, i32 14, i32 1)
  %v1_b280 = urem i32 %v6_b278, 256
  store i32 %v1_b280, i32* %ip.global-to-local, align 4
  %v0_b284 = load i32, i32* @r5, align 4
  store i32 %v0_b284, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b290 = load i32, i32* @r4, align 4
  store i32 %v0_b290, i32* %r0.global-to-local, align 4
  %v5_b298 = inttoptr i32 %v0_b284 to i32*
  %v6_b298 = call i32 @function_85e0(i32 %v0_b290, i32* %v5_b298, i32 15, i32 1)
  %v1_b2a0 = urem i32 %v6_b298, 256
  store i32 %v1_b2a0, i32* %ip.global-to-local, align 4
  %v0_b2a4 = load i32, i32* @r5, align 4
  store i32 %v0_b2a4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b2b0 = load i32, i32* @r4, align 4
  store i32 %v0_b2b0, i32* %r0.global-to-local, align 4
  %v5_b2b8 = inttoptr i32 %v0_b2a4 to i32*
  %v6_b2b8 = call i32 @function_85e0(i32 %v0_b2b0, i32* %v5_b2b8, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_b2b8, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r5, align 4
  store i32 %v0_b2c8, i32* %r1.global-to-local, align 4
  %v0_b2cc = load i32, i32* @r4, align 4
  store i32 %v0_b2cc, i32* %r0.global-to-local, align 4
  %v1_b2d0 = urem i32 %v6_b2b8, 256
  store i32 %v1_b2d0, i32* @r8, align 4
  %v4_b2d4 = inttoptr i32 %v0_b2c8 to i32*
  %v5_b2d4 = call i32 @function_85e0(i32 %v0_b2cc, i32* %v4_b2d4, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b2e0 = load i32, i32* @r5, align 4
  store i32 %v0_b2e0, i32* %r1.global-to-local, align 4
  store i32 %v5_b2d4, i32* @sb, align 4
  %v0_b2e8 = load i32, i32* @r4, align 4
  store i32 %v0_b2e8, i32* %r0.global-to-local, align 4
  %v4_b2ec = inttoptr i32 %v0_b2e0 to i32*
  %v5_b2ec = call i32 @function_85e0(i32 %v0_b2e8, i32* %v4_b2ec, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_b2f8 = urem i32 %v5_b2ec, 256
  store i32 %v1_b2f8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b308 = call i32 @function_13500(i32 2, i32 3, i32 6)
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v0_b30c = load i32, i32* @r7, align 4
  %v3_b30c = udiv i32 %v0_b30c, 65536
  store i32 %v3_b30c, i32* %r1.global-to-local, align 4
  %v7_b310 = icmp eq i32 %v3_b308, -1
  store i1 %v7_b310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b310, label %dec_label_pc_b56c, label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b138
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b328 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b328, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_b33c = call i32 @function_134d0(i32 %v3_b308, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_b33c, i32* %r0.global-to-local, align 4
  %v7_b340 = icmp eq i32 %v6_b33c, -1
  store i1 %v7_b340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b340, label %dec_label_pc_b564, label %dec_label_pc_b348

dec_label_pc_b348:                                ; preds = %dec_label_pc_b320
  %v0_b348 = load i32, i32* @fp, align 4
  %v2_b348 = icmp eq i32 %v0_b348, 0
  store i1 %v2_b348, i1* %cpsr_z.global-to-local, align 1
  %v0_b34c = load i32, i32* @r6, align 4
  %v3_b34c = mul i32 %v0_b34c, 65536
  store i32 %v3_b34c, i32* %r0.global-to-local, align 4
  %v3_b350 = urem i32 %v0_b34c, 65536
  store i32 %v3_b350, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_b348, 1
  br i1 %tmp72, label %.thread18, label %dec_label_pc_b374.preheader

.thread18:                                        ; preds = %dec_label_pc_b348
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_b7f8

dec_label_pc_b374.preheader:                      ; preds = %dec_label_pc_b348
  %v5_b358 = load i32, i32* @r7, align 4
  %v8_b358 = udiv i32 %v5_b358, 16777216
  %tmp73 = udiv i32 %v0_b34c, 256
  %v8_b35c = urem i32 %tmp73, 256
  store i32 %v8_b35c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_b460 = icmp ugt i32 %v0_b30c, -65537
  %v2_b484 = ptrtoint i32* %stack_var_-60 to i32
  %v3_b490 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_b4c0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_b4c4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_b4c8 = ptrtoint i32* %stack_var_-332 to i32
  %v4_b514 = zext i8 %tmp31 to i32
  %v4_b518 = zext i8 %tmp30 to i32
  %v4_b524 = mul nuw nsw i32 %v4_b518, 256
  %v4_b534 = zext i8 %tmp to i32
  %v1_b538 = and i32 %v4_b534, 18
  %v2_b53c = icmp eq i32 %v1_b538, 18
  %v1_b470 = mul nuw nsw i32 %v3_b30c, 256
  %v4_b474 = and i32 %v1_b470, 65280
  %v5_b474 = or i32 %v8_b358, %v4_b474
  %v3_b47893 = udiv i32 %v4_b474, 256
  %v1_b47c = trunc i32 %v3_b47893 to i8
  %v1_b640 = mul i32 %v0_b34c, 256
  %v4_b648 = and i32 %v1_b640, 65280
  %sext = mul i32 %v6_b180, 16777216
  %v4_b658 = sdiv i32 %sext, 16777216
  %sext5 = mul i32 %v5_b1bc, 16777216
  %v4_b67c = sdiv i32 %sext5, 16777216
  %v5_b524 = or i32 %v4_b514, %v4_b524
  %v1_b544 = and i32 %v4_b534, 5
  %v2_b544 = icmp eq i32 %v1_b544, 0
  %v1_b480 = trunc i32 %v8_b358 to i8
  %v5_b648 = or i32 %v8_b35c, %v4_b648
  %v1_b668 = trunc i32 %v4_b658 to i8
  %v1_b748 = urem i32 %v5_b218, 2
  %tmp94 = sub nsw i32 0, %v1_b748
  %v4_b750 = and i32 %tmp94, 32
  %v1_b760 = urem i32 %v6_b238, 2
  %tmp95 = sub nsw i32 0, %v1_b760
  %v4_b768 = and i32 %tmp95, 16
  %v1_b778 = urem i32 %v6_b258, 2
  %tmp96 = sub nsw i32 0, %v1_b778
  %v4_b780 = and i32 %tmp96, 8
  %v1_b790 = urem i32 %v6_b278, 2
  %tmp97 = sub nsw i32 0, %v1_b790
  %v4_b798 = and i32 %tmp97, 4
  %v1_b7a8 = urem i32 %v6_b298, 2
  %tmp98 = sub nsw i32 0, %v1_b7a8
  %v3_b7b0 = and i32 %tmp98, 2
  br label %dec_label_pc_b374

dec_label_pc_b374:                                ; preds = %dec_label_pc_b7e4, %dec_label_pc_b54c, %dec_label_pc_b374.preheader
  store i32 %v8_b35c, i32* %r3.global-to-local, align 4
  %v0_b380 = load i32, i32* @sb, align 4
  %v1_b380 = add i32 %v0_b380, 40
  store i32 %v1_b380, i32* @sl, align 4
  br label %dec_label_pc_b384

dec_label_pc_b384:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b374
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b390 = call i32 @function_13500(i32 2, i32 1, i32 0)
  store i32 %v3_b390, i32* %r0.global-to-local, align 4
  %v7_b394 = icmp eq i32 %v3_b390, -1
  store i1 %v7_b394, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b390, i32* @r7, align 4
  br i1 %v7_b394, label %dec_label_pc_b7e4, label %dec_label_pc_b3a0

dec_label_pc_b3a0:                                ; preds = %dec_label_pc_b384
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b3a8 = call i32 @function_12b58(i32 %v3_b390, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b3b0 = or i32 %v2_b3a8, 2048
  store i32 %v1_b3b0, i32* @r2, align 4
  %v0_b3b4 = load i32, i32* @r7, align 4
  store i32 %v0_b3b4, i32* %r0.global-to-local, align 4
  %v2_b3b8 = call i32 @function_12b58(i32 %v0_b3b4, i32 4)
  store i32 %v2_b3b8, i32* %r0.global-to-local, align 4
  %v3_b3bc = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_b3cc = mul i32 %v3_b3bc, 24
  store i32 %v5_b3cc, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_b3dc = add i32 %v5_b3cc, %arg2
  store i32 %v2_b3dc, i32* %r2.global-to-local, align 4
  %v1_b3e0 = add i32 %v2_b3dc, 20
  %v2_b3e0 = inttoptr i32 %v1_b3e0 to i8*
  %v3_b3e0 = load i8, i8* %v2_b3e0, align 1
  %v4_b3e0 = zext i8 %v3_b3e0 to i32
  store i32 %v4_b3e0, i32* %r3.global-to-local, align 4
  %v2_b3e4 = icmp ugt i8 %v3_b3e0, 30
  %v7_b3e4 = icmp eq i8 %v3_b3e0, 31
  store i1 %v7_b3e4, i1* %cpsr_z.global-to-local, align 1
  %v2_b3e8 = xor i1 %v7_b3e4, true
  %v3_b3e8 = and i1 %v2_b3e4, %v2_b3e8
  %v5_b3e8 = add i32 %v2_b3dc, 16
  %v6_b3e8 = inttoptr i32 %v5_b3e8 to i32*
  %v7_b3e8 = load i32, i32* %v6_b3e8, align 4
  br i1 %v3_b3e8, label %dec_label_pc_b454, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3a0
  store i32 %v7_b3e8, i32* @r4, align 4
  %v0_b3f8 = call i32 @function_e82c()
  store i32 %v0_b3f8, i32* %r0.global-to-local, align 4
  %v3_b3fc = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_b408 = mul i32 %v3_b3fc, 24
  %v0_b40c = load i32, i32* @r4, align 4
  %v2_b410 = add i32 %v5_b408, %arg2
  store i32 %v2_b410, i32* %r1.global-to-local, align 4
  %v1_b414 = and i32 %v0_b40c, 65280
  store i32 %v1_b414, i32* %r3.global-to-local, align 4
  %v1_b40c = udiv i32 %v0_b40c, 256
  %v3_b418 = and i32 %v1_b40c, 65280
  store i32 %v3_b418, i32* %r2.global-to-local, align 4
  %v3_b41c = mul i32 %v0_b40c, 16777216
  store i32 %v3_b41c, i32* %ip.global-to-local, align 4
  %v1_b420 = add i32 %v2_b410, 20
  %v2_b420 = inttoptr i32 %v1_b420 to i8*
  %v3_b420 = load i8, i8* %v2_b420, align 1
  %v4_b420 = zext i8 %v3_b420 to i32
  store i32 %v4_b420, i32* %lr.global-to-local, align 4
  %v4_b424 = mul nuw nsw i32 %v1_b414, 256
  %v5_b424 = or i32 %v4_b424, %v3_b41c
  store i32 %v5_b424, i32* %ip.global-to-local, align 4
  %v2_b42c = call i32 @llvm.bswap.i32(i32 %v0_b40c)
  %v7_b430 = lshr i32 %v0_b3f8, %v4_b420
  %v8_b430 = add i32 %v7_b430, %v2_b42c
  store i32 %v8_b430, i32* %r2.global-to-local, align 4
  %v3_b43c = mul i32 %v8_b430, 16777216
  %v1_b440 = and i32 %v8_b430, 65280
  store i32 %v1_b440, i32* %r0.global-to-local, align 4
  %v4_b444 = mul nuw nsw i32 %v1_b440, 256
  %v5_b444 = or i32 %v4_b444, %v3_b43c
  store i32 %v5_b444, i32* %r1.global-to-local, align 4
  %v2_b44c = call i32 @llvm.bswap.i32(i32 %v8_b430)
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b3a0, %dec_label_pc_b3f4
  %storemerge25 = phi i32 [ %v2_b44c, %dec_label_pc_b3f4 ], [ %v7_b3e8, %dec_label_pc_b3a0 ]
  store i32 %v3_b30c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b460, label %dec_label_pc_b574, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b454
  store i32 %v8_b358, i32* %ip.global-to-local, align 4
  store i32 %v5_b474, i32* %r3.global-to-local, align 4
  store i32 %v3_b47893, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b574, %dec_label_pc_b468
  %stack_var_-57.0 = phi i8 [ %v1_b57c, %dec_label_pc_b574 ], [ %v1_b47c, %dec_label_pc_b468 ]
  %storemerge = phi i8 [ %v1_b574, %dec_label_pc_b574 ], [ %v1_b480, %dec_label_pc_b468 ]
  store i32 %v2_b484, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b48c = load i32, i32* @r7, align 4
  store i32 %v0_b48c, i32* %r0.global-to-local, align 4
  %v4_b490 = call i32 @function_1335c(i32 %v0_b48c, %sockaddr* nonnull %v3_b490, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b498 = call i32 @function_12eec(i32* null)
  store i32 %v2_b498, i32* %r0.global-to-local, align 4
  store i32 %v2_b498, i32* @r4, align 4
  %v9_b4f8 = icmp eq i32 %tmp32, %storemerge25
  %v4_b51c = zext i8 %storemerge to i32
  %v4_b520 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_b4f8 to i32
  %v9_b50c = icmp eq i1 %v9_b4f8, false
  %v4_b528 = mul nuw nsw i32 %v4_b520, 256
  %v5_b528 = or i32 %v4_b528, %v4_b51c
  %v9_b52c = icmp eq i32 %v5_b528, %v5_b524
  br label %dec_label_pc_b4b4

dec_label_pc_b4a4:                                ; preds = %.thread23, %dec_label_pc_b514, %dec_label_pc_b544, %bb75
  %v2_b4a4 = call i32 @function_12eec(i32* null)
  %v0_b4a8 = load i32, i32* @r4, align 4
  %v2_b4a8 = sub i32 %v2_b4a4, %v0_b4a8
  store i32 %v2_b4a8, i32* %r0.global-to-local, align 4
  %v7_b4ac = icmp eq i32 %v2_b4a8, 10
  store i1 %v7_b4ac, i1* %cpsr_z.global-to-local, align 1
  %v8_b4b0 = icmp sgt i32 %v2_b4a8, 10
  br i1 %v8_b4b0, label %dec_label_pc_b558, label %dec_label_pc_b4b4

dec_label_pc_b4b4:                                ; preds = %dec_label_pc_b4a4, %dec_label_pc_b484
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_b4c0, i32* %lr.global-to-local, align 4
  store i32 %v2_b4c4, i32* %ip.global-to-local, align 4
  store i32 %v2_b4c8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v7_b4dc = call i32 @function_1343c(i32 %v3_b308, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_b4c0, i32 %v2_b4c4)
  store i32 %v7_b4dc, i32* %r2.global-to-local, align 4
  %v7_b4e4 = icmp eq i32 %v7_b4dc, -1
  store i1 %v7_b4e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b4e4, label %dec_label_pc_b56c, label %dec_label_pc_b4f0

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b4b4
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_b504 = icmp eq i32 %v7_b4dc, 40
  store i1 %v7_b504, i1* %cpsr_z.global-to-local, align 1
  %tmp99 = icmp ult i32 %v7_b4dc, 41
  br i1 %tmp99, label %.thread23, label %bb75

.thread23:                                        ; preds = %dec_label_pc_b4f0
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b4a4

bb75:                                             ; preds = %dec_label_pc_b4f0
  store i1 %v9_b50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b50c, label %dec_label_pc_b4a4, label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %bb75
  store i32 %v4_b518, i32* %r1.global-to-local, align 4
  store i32 %v4_b51c, i32* %ip.global-to-local, align 4
  store i32 %v4_b520, i32* %r2.global-to-local, align 4
  store i32 %v5_b524, i32* %r3.global-to-local, align 4
  store i32 %v5_b528, i32* @r5, align 4
  store i1 %v9_b52c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b52c, label %dec_label_pc_b534, label %dec_label_pc_b4a4

dec_label_pc_b534:                                ; preds = %dec_label_pc_b514
  store i32 %v4_b534, i32* %r2.global-to-local, align 4
  store i32 %v1_b538, i32* %r3.global-to-local, align 4
  store i1 %v2_b53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b53c, label %dec_label_pc_b588, label %dec_label_pc_b544

dec_label_pc_b544:                                ; preds = %dec_label_pc_b534
  store i1 %v2_b544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b544, label %dec_label_pc_b4a4, label %dec_label_pc_b54c

dec_label_pc_b54c:                                ; preds = %dec_label_pc_b544
  %v0_b54c = load i32, i32* @r7, align 4
  store i32 %v0_b54c, i32* %r0.global-to-local, align 4
  %v1_b550 = call i32 @function_12c1c(i32 %v0_b54c)
  store i32 %v1_b550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b374

dec_label_pc_b558:                                ; preds = %dec_label_pc_b4a4
  %v0_b558 = load i32, i32* @r7, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v1_b55c = call i32 @function_12c1c(i32 %v0_b558)
  store i32 %v1_b55c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b384

dec_label_pc_b564:                                ; preds = %dec_label_pc_b320
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v1_b568 = call i32 @function_12c1c(i32 %v3_b308)
  store i32 %v1_b568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b56c

dec_label_pc_b56c:                                ; preds = %dec_label_pc_b4b4, %dec_label_pc_b138, %dec_label_pc_b564
  %v29_b570 = phi i32 [ %v3_b308, %dec_label_pc_b138 ], [ %v1_b568, %dec_label_pc_b564 ], [ 0, %dec_label_pc_b4b4 ]
  ret i32 %v29_b570

dec_label_pc_b574:                                ; preds = %dec_label_pc_b454
  %v0_b574 = call i32 @function_e82c()
  %v1_b574 = trunc i32 %v0_b574 to i8
  store i32 %v0_b574, i32* %r0.global-to-local, align 4
  %v4_b578 = sdiv i32 %v0_b574, 256
  store i32 %v4_b578, i32* %r3.global-to-local, align 4
  %v1_b57c = trunc i32 %v4_b578 to i8
  br label %dec_label_pc_b484

dec_label_pc_b588:                                ; preds = %dec_label_pc_b534
  %v3_b588 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b588, i32* @r4, align 4
  store i32 %v2_b158, i32* %r2.global-to-local, align 4
  %v3_b590 = mul i32 %v3_b588, 16
  store i32 %v3_b590, i32* %ip.global-to-local, align 4
  %v3_b594 = add i32 %v3_b590, %v2_b158
  %v4_b594 = inttoptr i32 %v3_b594 to i32*
  store i32 %storemerge25, i32* %v4_b594, align 4
  %v0_b598 = load i32, i32* @r6, align 4
  %v1_b598 = add i32 %v0_b598, 4
  %v2_b598 = inttoptr i32 %v1_b598 to i32*
  %v3_b598 = load i32, i32* %v2_b598, align 4
  store i32 %v3_b598, i32* %r0.global-to-local, align 4
  %v1_b5a0 = and i32 %v3_b598, 65280
  store i32 %v1_b5a0, i32* %r1.global-to-local, align 4
  store i32 %v2_b158, i32* %lr.global-to-local, align 4
  %v3_b5a8 = mul i32 %v3_b598, 16777216
  %v4_b5b0 = mul nuw nsw i32 %v1_b5a0, 256
  %v5_b5b0 = or i32 %v4_b5b0, %v3_b5a8
  store i32 %v5_b5b0, i32* %r2.global-to-local, align 4
  %v1_b5b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5b8 = add i32 %v1_b5b8, %v2_b158
  store i32 %v2_b5b8, i32* %ip.global-to-local, align 4
  %v2_b5bc = call i32 @llvm.bswap.i32(i32 %v3_b598)
  store i32 %v2_b5bc, i32* %r3.global-to-local, align 4
  %v2_b5c0 = add i32 %v2_b5b8, 4
  %v3_b5c0 = inttoptr i32 %v2_b5c0 to i32*
  store i32 %v2_b5bc, i32* %v3_b5c0, align 4
  %v0_b5c4 = load i32, i32* @r6, align 4
  %v1_b5c4 = add i32 %v0_b5c4, 8
  %v2_b5c4 = inttoptr i32 %v1_b5c4 to i32*
  %v3_b5c4 = load i32, i32* %v2_b5c4, align 4
  store i32 %v3_b5c4, i32* %r0.global-to-local, align 4
  %v1_b5cc = and i32 %v3_b5c4, 65280
  store i32 %v1_b5cc, i32* %r1.global-to-local, align 4
  %v3_b5d0 = mul i32 %v3_b5c4, 16777216
  %v4_b5d8 = mul nuw nsw i32 %v1_b5cc, 256
  %v5_b5d8 = or i32 %v4_b5d8, %v3_b5d0
  store i32 %v5_b5d8, i32* %r2.global-to-local, align 4
  %v2_b5e0 = call i32 @llvm.bswap.i32(i32 %v3_b5c4)
  store i32 %v2_b5e0, i32* %r3.global-to-local, align 4
  %v1_b5e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b5e4 = add i32 %v1_b5e4, 8
  %v3_b5e4 = inttoptr i32 %v2_b5e4 to i32*
  store i32 %v2_b5e0, i32* %v3_b5e4, align 4
  %v0_b5e8 = load i32, i32* @r6, align 4
  %v1_b5e8 = inttoptr i32 %v0_b5e8 to i32*
  %v2_b5e8 = load i32, i32* %v1_b5e8, align 4
  %v3_b5ec = udiv i32 %v2_b5e8, 65536
  store i32 %v3_b5ec, i32* %r2.global-to-local, align 4
  %v3_b5f03 = udiv i32 %v2_b5e8, 16777216
  store i32 %v3_b5f03, i32* %r1.global-to-local, align 4
  %v0_b5f4 = load i32, i32* @r5, align 4
  %v3_b5f4 = sdiv i32 %v0_b5f4, 256
  store i32 %v3_b5f4, i32* %r3.global-to-local, align 4
  %v1_b5f8 = trunc i32 %v3_b5f4 to i8
  %v2_b5f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_b5f8 = add i32 %v2_b5f8, 15
  %v4_b5f8 = inttoptr i32 %v3_b5f8 to i8*
  store i8 %v1_b5f8, i8* %v4_b5f8, align 1
  %v0_b5fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b5fc = trunc i32 %v0_b5fc to i8
  %v2_b5fc = load i32, i32* %ip.global-to-local, align 4
  %v3_b5fc = add i32 %v2_b5fc, 13
  %v4_b5fc = inttoptr i32 %v3_b5fc to i8*
  store i8 %v1_b5fc, i8* %v4_b5fc, align 1
  %v0_b600 = load i32, i32* %r2.global-to-local, align 4
  %v1_b600 = trunc i32 %v0_b600 to i8
  %v2_b600 = load i32, i32* %ip.global-to-local, align 4
  %v3_b600 = add i32 %v2_b600, 12
  %v4_b600 = inttoptr i32 %v3_b600 to i8*
  store i8 %v1_b600, i8* %v4_b600, align 1
  %v0_b604 = load i32, i32* @r5, align 4
  %v1_b604 = trunc i32 %v0_b604 to i8
  %v2_b604 = load i32, i32* %ip.global-to-local, align 4
  %v3_b604 = add i32 %v2_b604, 14
  %v4_b604 = inttoptr i32 %v3_b604 to i8*
  store i8 %v1_b604, i8* %v4_b604, align 1
  %v0_b608 = load i32, i32* @sl, align 4
  store i32 %v0_b608, i32* %r0.global-to-local, align 4
  %v1_b60c = call i32 @function_13698(i32 %v0_b608)
  store i32 %v1_b60c, i32* %r0.global-to-local, align 4
  store i32 %v2_b168, i32* %r1.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b614, i32* %r2.global-to-local, align 4
  %v2_b618 = load i32, i32* @r4, align 4
  %v5_b618 = mul i32 %v2_b618, 4
  %v6_b618 = add i32 %v5_b618, %v2_b168
  %v7_b618 = inttoptr i32 %v6_b618 to i32*
  store i32 %v1_b60c, i32* %v7_b618, align 4
  %v0_b61c = load i32, i32* %r1.global-to-local, align 4
  %v1_b61c = load i32, i32* %r2.global-to-local, align 4
  %v4_b61c = mul i32 %v1_b61c, 4
  %v5_b61c = add i32 %v4_b61c, %v0_b61c
  %v6_b61c = inttoptr i32 %v5_b61c to i32*
  %v7_b61c = load i32, i32* %v6_b61c, align 4
  store i32 %v7_b61c, i32* @r4, align 4
  %v1_b620 = inttoptr i32 %v7_b61c to i8*
  %v2_b620 = load i8, i8* %v1_b620, align 1
  %tmp100 = urem i8 %v2_b620, 16
  %v1_b624 = zext i8 %tmp100 to i32
  %v1_b628 = or i32 %v1_b624, 64
  store i32 %v1_b628, i32* %r3.global-to-local, align 4
  %v1_b62c = trunc i32 %v1_b628 to i8
  store i8 %v1_b62c, i8* %v1_b620, align 1
  %v0_b630 = load i32, i32* @r4, align 4
  %v1_b630 = inttoptr i32 %v0_b630 to i8*
  %v2_b630 = load i8, i8* %v1_b630, align 1
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v1_b63c = and i8 %v2_b630, -16
  %v1_b644 = or i8 %v1_b63c, 5
  store i32 %v5_b648, i32* %r0.global-to-local, align 4
  %v0_b64c = load i32, i32* @sl, align 4
  %v3_b64c = mul i32 %v0_b64c, 65536
  store i32 %v3_b64c, i32* %r2.global-to-local, align 4
  store i32 %v1_b1e8, i32* %lr.global-to-local, align 4
  store i8 %v1_b644, i8* %v1_b630, align 1
  store i32 %v4_b658, i32* %r1.global-to-local, align 4
  %v0_b65c = load i32, i32* %r2.global-to-local, align 4
  %v3_b65c = udiv i32 %v0_b65c, 65536
  %v1_b660 = urem i32 %v3_b65c, 256
  store i32 %v1_b660, i32* %r3.global-to-local, align 4
  %v3_b664 = udiv i32 %v0_b65c, 16777216
  store i32 %v3_b664, i32* %r2.global-to-local, align 4
  %v2_b668 = load i32, i32* @r4, align 4
  %v3_b668 = add i32 %v2_b668, 1
  %v4_b668 = inttoptr i32 %v3_b668 to i8*
  store i8 %v1_b668, i8* %v4_b668, align 1
  %v0_b66c = load i32, i32* %r2.global-to-local, align 4
  %v1_b66c = load i32, i32* %r3.global-to-local, align 4
  %v4_b66c = mul i32 %v1_b66c, 256
  %v5_b66c = or i32 %v4_b66c, %v0_b66c
  store i32 %v5_b66c, i32* %r2.global-to-local, align 4
  %v1_b670 = trunc i32 %v0_b66c to i8
  %v2_b670 = load i32, i32* @r4, align 4
  %v3_b670 = add i32 %v2_b670, 2
  %v4_b670 = inttoptr i32 %v3_b670 to i8*
  store i8 %v1_b670, i8* %v4_b670, align 1
  %v0_b674 = load i32, i32* %lr.global-to-local, align 4
  %v2_b674 = icmp eq i32 %v0_b674, 0
  store i1 %v2_b674, i1* %cpsr_z.global-to-local, align 1
  %v0_b678 = load i32, i32* %r2.global-to-local, align 4
  %v3_b678 = sdiv i32 %v0_b678, 256
  store i32 %v3_b678, i32* %r3.global-to-local, align 4
  store i32 %v4_b67c, i32* %r2.global-to-local, align 4
  %v1_b680 = trunc i32 %v3_b678 to i8
  %v2_b680 = load i32, i32* @r4, align 4
  %v3_b680 = add i32 %v2_b680, 3
  %v4_b680 = inttoptr i32 %v3_b680 to i8*
  store i8 %v1_b680, i8* %v4_b680, align 1
  %v0_b684 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b684, label %bb77, label %bb76

bb76:                                             ; preds = %dec_label_pc_b588
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %dec_label_pc_b588, %bb76
  %v0_b688 = load i32, i32* %r2.global-to-local, align 4
  %v1_b688 = trunc i32 %v0_b688 to i8
  %v2_b688 = load i32, i32* @r4, align 4
  %v3_b688 = add i32 %v2_b688, 8
  %v4_b688 = inttoptr i32 %v3_b688 to i8*
  store i8 %v1_b688, i8* %v4_b688, align 1
  %v0_b68c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b68c, label %.thread6, label %bb78

bb78:                                             ; preds = %bb77
  %v1_b68c = load i32, i32* %r3.global-to-local, align 4
  %v2_b68c = trunc i32 %v1_b68c to i8
  %v3_b68c = load i32, i32* @r4, align 4
  %v4_b68c = add i32 %v3_b68c, 6
  %v5_b68c = inttoptr i32 %v4_b68c to i8*
  store i8 %v2_b68c, i8* %v5_b68c, align 1
  %v0_b690.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b690.pr, label %.thread6, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb77, %bb78, %bb79
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_b698 = load i32, i32* @r4, align 4
  %v3_b698 = add i32 %v2_b698, 9
  %v4_b698 = inttoptr i32 %v3_b698 to i8*
  store i8 6, i8* %v4_b698, align 1
  %v0_b69c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b69c, label %bb81, label %bb80

bb80:                                             ; preds = %.thread6
  %v1_b69c = load i32, i32* %r2.global-to-local, align 4
  %v2_b69c = trunc i32 %v1_b69c to i8
  %v3_b69c = load i32, i32* @r4, align 4
  %v4_b69c = add i32 %v3_b69c, 7
  %v5_b69c = inttoptr i32 %v4_b69c to i8*
  store i8 %v2_b69c, i8* %v5_b69c, align 1
  br label %bb81

bb81:                                             ; preds = %.thread6, %bb80
  %v2_b6a4 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_b6a4, i32* %r3.global-to-local, align 4
  %v0_b6a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_b6a8 = sdiv i32 %v0_b6a8, 256
  store i32 %v3_b6a8, i32* %ip.global-to-local, align 4
  %v1_b6ac = load i32, i32* @r4, align 4
  %v2_b6ac = add i32 %v1_b6ac, 12
  %v3_b6ac = inttoptr i32 %v2_b6ac to i32*
  store i32 %v2_b6a4, i32* %v3_b6ac, align 4
  %v0_b6b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6b0 = trunc i32 %v0_b6b0 to i8
  %v2_b6b0 = load i32, i32* @r4, align 4
  %v3_b6b0 = add i32 %v2_b6b0, 5
  %v4_b6b0 = inttoptr i32 %v3_b6b0 to i8*
  store i8 %v1_b6b0, i8* %v4_b6b0, align 1
  %v3_b6b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b6b4, i32* %r2.global-to-local, align 4
  store i32 %v2_b158, i32* %ip.global-to-local, align 4
  %v4_b6bc = mul i32 %v3_b6b4, 16
  %v5_b6bc = add i32 %v4_b6bc, %v2_b158
  %v6_b6bc = inttoptr i32 %v5_b6bc to i32*
  %v7_b6bc = load i32, i32* %v6_b6bc, align 4
  store i32 %v7_b6bc, i32* %r3.global-to-local, align 4
  %v0_b6c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b6c0 = trunc i32 %v0_b6c0 to i8
  %v2_b6c0 = load i32, i32* @r4, align 4
  %v3_b6c0 = add i32 %v2_b6c0, 4
  %v4_b6c0 = inttoptr i32 %v3_b6c0 to i8*
  store i8 %v1_b6c0, i8* %v4_b6c0, align 1
  %v0_b6c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b6c4 = load i32, i32* @r4, align 4
  %v2_b6c4 = add i32 %v1_b6c4, 16
  %v3_b6c4 = inttoptr i32 %v2_b6c4 to i32*
  store i32 %v0_b6c4, i32* %v3_b6c4, align 4
  %v0_b6c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_b6c8 = mul i32 %v0_b6c8, 16
  %v1_b6cc = load i32, i32* %ip.global-to-local, align 4
  %v2_b6cc = add i32 %v1_b6cc, %v3_b6c8
  store i32 %v2_b6cc, i32* %r2.global-to-local, align 4
  %v1_b6d0 = add i32 %v2_b6cc, 13
  %v2_b6d0 = inttoptr i32 %v1_b6d0 to i8*
  %v3_b6d0 = load i8, i8* %v2_b6d0, align 1
  %v4_b6d0 = zext i8 %v3_b6d0 to i32
  store i32 %v4_b6d0, i32* %r1.global-to-local, align 4
  %v1_b6d4 = add i32 %v2_b6cc, 12
  %v2_b6d4 = inttoptr i32 %v1_b6d4 to i8*
  %v3_b6d4 = load i8, i8* %v2_b6d4, align 1
  %v4_b6d4 = zext i8 %v3_b6d4 to i32
  %v4_b6d8 = mul nuw nsw i32 %v4_b6d0, 256
  %v5_b6d8 = or i32 %v4_b6d4, %v4_b6d8
  store i32 %v5_b6d8, i32* %r3.global-to-local, align 4
  %v2_b6dc = load i32, i32* @r4, align 4
  %v3_b6dc = add i32 %v2_b6dc, 20
  %v4_b6dc = inttoptr i32 %v3_b6dc to i8*
  store i8 %v3_b6d4, i8* %v4_b6dc, align 1
  %v0_b6e0 = load i32, i32* @r4, align 4
  %v1_b6e0 = add i32 %v0_b6e0, 20
  store i32 %v1_b6e0, i32* @r6, align 4
  %v0_b6e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b6e4 = sdiv i32 %v0_b6e4, 256
  store i32 %v3_b6e4, i32* %r3.global-to-local, align 4
  %v1_b6e8 = trunc i32 %v3_b6e4 to i8
  %v3_b6e8 = add i32 %v0_b6e0, 21
  %v4_b6e8 = inttoptr i32 %v3_b6e8 to i8*
  store i8 %v1_b6e8, i8* %v4_b6e8, align 1
  %v0_b6ec = load i32, i32* @r6, align 4
  %v1_b6ec = add i32 %v0_b6ec, 13
  %v2_b6ec = inttoptr i32 %v1_b6ec to i8*
  %v3_b6ec = load i8, i8* %v2_b6ec, align 1
  %v4_b6ec = zext i8 %v3_b6ec to i32
  store i32 %v4_b6ec, i32* %r3.global-to-local, align 4
  %v0_b6f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b6f0 = add i32 %v0_b6f0, 8
  %v2_b6f0 = inttoptr i32 %v1_b6f0 to i32*
  %v3_b6f0 = load i32, i32* %v2_b6f0, align 4
  store i32 %v3_b6f0, i32* %r1.global-to-local, align 4
  %v1_b6f4 = or i32 %v4_b6ec, 1
  store i32 %v1_b6f4, i32* %r3.global-to-local, align 4
  %v1_b6f8 = add i32 %v0_b6f0, 15
  %v2_b6f8 = inttoptr i32 %v1_b6f8 to i8*
  %v3_b6f8 = load i8, i8* %v2_b6f8, align 1
  %v4_b6f8 = zext i8 %v3_b6f8 to i32
  store i32 %v4_b6f8, i32* %ip.global-to-local, align 4
  %v1_b6fc = add i32 %v0_b6f0, 14
  %v2_b6fc = inttoptr i32 %v1_b6fc to i8*
  %v3_b6fc = load i8, i8* %v2_b6fc, align 1
  %v4_b6fc = zext i8 %v3_b6fc to i32
  store i32 %v4_b6fc, i32* %r0.global-to-local, align 4
  %v2_b700 = add i32 %v0_b6ec, 4
  %v3_b700 = inttoptr i32 %v2_b700 to i32*
  store i32 %v3_b6f0, i32* %v3_b700, align 4
  %v0_b704 = load i32, i32* %r2.global-to-local, align 4
  %v1_b704 = add i32 %v0_b704, 4
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* %lr.global-to-local, align 4
  %v0_b708 = load i32, i32* %r3.global-to-local, align 4
  %v1_b708 = trunc i32 %v0_b708 to i8
  %v2_b708 = load i32, i32* @r6, align 4
  %v3_b708 = add i32 %v2_b708, 13
  %v4_b708 = inttoptr i32 %v3_b708 to i8*
  store i8 %v1_b708, i8* %v4_b708, align 1
  %v0_b70c = load i32, i32* @r6, align 4
  %v1_b70c = add i32 %v0_b70c, 12
  %v2_b70c = inttoptr i32 %v1_b70c to i8*
  %v3_b70c = load i8, i8* %v2_b70c, align 1
  %v4_b70c = zext i8 %v3_b70c to i32
  store i32 %v4_b70c, i32* %r2.global-to-local, align 4
  %v1_b710 = add i32 %v0_b70c, 13
  %v2_b710 = inttoptr i32 %v1_b710 to i8*
  %v3_b710 = load i8, i8* %v2_b710, align 1
  %v4_b710 = zext i8 %v3_b710 to i32
  %v0_b714 = load i32, i32* %r0.global-to-local, align 4
  %v1_b714 = load i32, i32* %ip.global-to-local, align 4
  %v4_b714 = mul i32 %v1_b714, 256
  %v5_b714 = or i32 %v4_b714, %v0_b714
  store i32 %v5_b714, i32* %r0.global-to-local, align 4
  %tmp101 = urem i8 %v3_b70c, 16
  %v1_b718 = zext i8 %tmp101 to i32
  %v3_b71c = sdiv i32 %v5_b714, 256
  store i32 %v3_b71c, i32* %r1.global-to-local, align 4
  %v1_b720 = or i32 %v1_b718, 128
  store i32 %v1_b720, i32* %r2.global-to-local, align 4
  %v1_b724 = or i32 %v4_b710, 16
  store i32 %v1_b724, i32* %r3.global-to-local, align 4
  %v1_b728 = trunc i32 %v3_b71c to i8
  %v3_b728 = add i32 %v0_b70c, 3
  %v4_b728 = inttoptr i32 %v3_b728 to i8*
  store i8 %v1_b728, i8* %v4_b728, align 1
  %v0_b72c = load i32, i32* %lr.global-to-local, align 4
  %v1_b72c = load i32, i32* @r6, align 4
  %v2_b72c = add i32 %v1_b72c, 8
  %v3_b72c = inttoptr i32 %v2_b72c to i32*
  store i32 %v0_b72c, i32* %v3_b72c, align 4
  %v0_b730 = load i32, i32* %r2.global-to-local, align 4
  %v1_b730 = trunc i32 %v0_b730 to i8
  %v2_b730 = load i32, i32* @r6, align 4
  %v3_b730 = add i32 %v2_b730, 12
  %v4_b730 = inttoptr i32 %v3_b730 to i8*
  store i8 %v1_b730, i8* %v4_b730, align 1
  %v0_b734 = load i32, i32* %r3.global-to-local, align 4
  %v1_b734 = trunc i32 %v0_b734 to i8
  %v2_b734 = load i32, i32* @r6, align 4
  %v3_b734 = add i32 %v2_b734, 13
  %v4_b734 = inttoptr i32 %v3_b734 to i8*
  store i8 %v1_b734, i8* %v4_b734, align 1
  %v0_b738 = load i32, i32* %r0.global-to-local, align 4
  %v1_b738 = trunc i32 %v0_b738 to i8
  %v2_b738 = load i32, i32* @r6, align 4
  %v3_b738 = add i32 %v2_b738, 2
  %v4_b738 = inttoptr i32 %v3_b738 to i8*
  store i8 %v1_b738, i8* %v4_b738, align 1
  %v0_b73c = call i32 @function_e82c()
  %v1_b73c = trunc i32 %v0_b73c to i8
  store i32 %v0_b73c, i32* %r0.global-to-local, align 4
  store i32 %v1_b220, i32* %lr.global-to-local, align 4
  %v0_b744 = load i32, i32* @r6, align 4
  %v1_b744 = add i32 %v0_b744, 13
  %v2_b744 = inttoptr i32 %v1_b744 to i8*
  %v3_b744 = load i8, i8* %v2_b744, align 1
  %v4_b744 = zext i8 %v3_b744 to i32
  store i32 %v1_b748, i32* %r2.global-to-local, align 4
  %v1_b74c = and i32 %v4_b744, 223
  %v5_b750 = or i32 %v1_b74c, %v4_b750
  store i32 %v5_b750, i32* %r3.global-to-local, align 4
  %v1_b754 = trunc i32 %v5_b750 to i8
  store i8 %v1_b754, i8* %v2_b744, align 1
  store i32 %v1_b240, i32* %r1.global-to-local, align 4
  %v0_b75c = load i32, i32* @r6, align 4
  %v1_b75c = add i32 %v0_b75c, 13
  %v2_b75c = inttoptr i32 %v1_b75c to i8*
  %v3_b75c = load i8, i8* %v2_b75c, align 1
  %v4_b75c = zext i8 %v3_b75c to i32
  store i32 %v1_b760, i32* %r3.global-to-local, align 4
  %v1_b764 = and i32 %v4_b75c, 239
  %v5_b768 = or i32 %v1_b764, %v4_b768
  store i32 %v5_b768, i32* %r2.global-to-local, align 4
  %v1_b76c = trunc i32 %v5_b768 to i8
  store i8 %v1_b76c, i8* %v2_b75c, align 1
  store i32 %v1_b260, i32* %ip.global-to-local, align 4
  %v0_b774 = load i32, i32* @r6, align 4
  %v1_b774 = add i32 %v0_b774, 13
  %v2_b774 = inttoptr i32 %v1_b774 to i8*
  %v3_b774 = load i8, i8* %v2_b774, align 1
  %v4_b774 = zext i8 %v3_b774 to i32
  store i32 %v1_b778, i32* %r2.global-to-local, align 4
  %v1_b77c = and i32 %v4_b774, 247
  %v5_b780 = or i32 %v1_b77c, %v4_b780
  store i32 %v5_b780, i32* %r3.global-to-local, align 4
  %v1_b784 = trunc i32 %v5_b780 to i8
  store i8 %v1_b784, i8* %v2_b774, align 1
  %v0_b78c = load i32, i32* @r6, align 4
  %v1_b78c = add i32 %v0_b78c, 13
  %v2_b78c = inttoptr i32 %v1_b78c to i8*
  %v3_b78c = load i8, i8* %v2_b78c, align 1
  %v4_b78c = zext i8 %v3_b78c to i32
  store i32 %v1_b790, i32* %r3.global-to-local, align 4
  %v1_b794 = and i32 %v4_b78c, 251
  %v5_b798 = or i32 %v1_b794, %v4_b798
  store i32 %v5_b798, i32* %r2.global-to-local, align 4
  %v1_b79c = trunc i32 %v5_b798 to i8
  store i8 %v1_b79c, i8* %v2_b78c, align 1
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v0_b7a4 = load i32, i32* @r6, align 4
  %v1_b7a4 = add i32 %v0_b7a4, 13
  %v2_b7a4 = inttoptr i32 %v1_b7a4 to i8*
  %v3_b7a4 = load i8, i8* %v2_b7a4, align 1
  %v4_b7a4 = zext i8 %v3_b7a4 to i32
  store i32 %v1_b7a8, i32* %r2.global-to-local, align 4
  %v1_b7ac = and i32 %v4_b7a4, 253
  %v4_b7b0 = or i32 %v1_b7ac, %v3_b7b0
  store i32 %v4_b7b0, i32* %r3.global-to-local, align 4
  %v1_b7b4 = trunc i32 %v4_b7b0 to i8
  store i8 %v1_b7b4, i8* %v2_b7a4, align 1
  %v0_b7b8 = load i32, i32* @r6, align 4
  %v1_b7b8 = add i32 %v0_b7b8, 13
  %v2_b7b8 = inttoptr i32 %v1_b7b8 to i8*
  %v3_b7b8 = load i8, i8* %v2_b7b8, align 1
  %v4_b7b8 = zext i8 %v3_b7b8 to i32
  %v0_b7bc = load i32, i32* @r8, align 4
  %v1_b7bc = urem i32 %v0_b7bc, 2
  %v1_b7c0 = and i32 %v4_b7b8, 254
  store i32 %v1_b7c0, i32* %r2.global-to-local, align 4
  %v4_b7c427 = udiv i32 %v0_b73c, 256
  %v2_b7c8 = or i32 %v1_b7c0, %v1_b7bc
  store i32 %v2_b7c8, i32* %r3.global-to-local, align 4
  %v1_b7cc = trunc i32 %v4_b7c427 to i8
  %v3_b7cc = add i32 %v0_b7b8, 15
  %v4_b7cc = inttoptr i32 %v3_b7cc to i8*
  store i8 %v1_b7cc, i8* %v4_b7cc, align 1
  %v3_b7d0 = load i32, i32* @r6, align 4
  %v4_b7d0 = add i32 %v3_b7d0, 14
  %v5_b7d0 = inttoptr i32 %v4_b7d0 to i8*
  store i8 %v1_b73c, i8* %v5_b7d0, align 1
  %v0_b7d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7d4 = trunc i32 %v0_b7d4 to i8
  %v2_b7d4 = load i32, i32* @r6, align 4
  %v3_b7d4 = add i32 %v2_b7d4, 13
  %v4_b7d4 = inttoptr i32 %v3_b7d4 to i8*
  store i8 %v1_b7d4, i8* %v4_b7d4, align 1
  %v0_b7d8 = load i32, i32* @r4, align 4
  %v1_b7d8 = add i32 %v0_b7d8, 40
  store i32 %v1_b7d8, i32* %r0.global-to-local, align 4
  %v0_b7dc = load i32, i32* @sb, align 4
  store i32 %v0_b7dc, i32* @r1, align 4
  %v1_b7e0 = inttoptr i32 %v1_b7d8 to i8*
  %v2_b7e0 = call i32 @function_e9ac(i8* %v1_b7e0)
  store i32 %v2_b7e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7e4

dec_label_pc_b7e4:                                ; preds = %dec_label_pc_b384, %bb81
  %v3_b7e4 = load i32, i32* %stack_var_-40, align 4
  %v1_b7e8 = add i32 %v3_b7e4, 1
  store i32 %v1_b7e8, i32* %r3.global-to-local, align 4
  %v1_b7ec = load i32, i32* @fp, align 4
  %v9_b7ec = icmp eq i32 %v1_b7e8, %v1_b7ec
  store i1 %v9_b7ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b7e8, i32* %stack_var_-40, align 4
  %v5_b7f4 = icmp slt i32 %v1_b7e8, %v1_b7ec
  br i1 %v5_b7f4, label %dec_label_pc_b374, label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7e4, %.thread18
  %v0_b80012 = phi i32 [ %v0_b348, %.thread18 ], [ %v1_b7ec, %dec_label_pc_b7e4 ]
  %v0_b7f8 = load i32, i32* @sb, align 4
  %v1_b7f8 = add i32 %v0_b7f8, 40
  store i32 %v1_b7f8, i32* @sl, align 4
  %v1_b7fc = add i32 %v0_b7f8, 20
  store i32 %v1_b7fc, i32* @r7, align 4
  %v2_b84c = icmp eq i32 %v1_b2f8, 0
  %v6_b82c = inttoptr i32 %v2_b168 to i32*
  %v3_b834 = icmp eq i32 %v3_b350, 65535
  br label %dec_label_pc_b800

dec_label_pc_b800:                                ; preds = %dec_label_pc_b85c, %dec_label_pc_b7f8
  %v0_b800 = phi i32 [ %v1_b93c, %dec_label_pc_b85c ], [ %v0_b80012, %dec_label_pc_b7f8 ]
  %v2_b800 = icmp eq i32 %v0_b800, 0
  store i1 %v2_b800, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp82 = icmp slt i32 %v0_b800, 1
  br label %dec_label_pc_b808

dec_label_pc_b808:                                ; preds = %dec_label_pc_b808, %dec_label_pc_b800
  br i1 %tmp82, label %dec_label_pc_b808, label %dec_label_pc_b80c

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b808
  %v0_b80c = load i32, i32* @r7, align 4
  %tmp83 = mul i32 %v0_b80c, 256
  %v1_b814 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v0_b80c, 256
  %v4_b818 = urem i32 %tmp84, 256
  %v5_b818 = or i32 %v4_b818, %v1_b814
  store i32 %v5_b818, i32* @r8, align 4
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v7_b82c = load i32, i32* %v6_b82c, align 4
  store i32 %v7_b82c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b834, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_b840 = add i32 %v7_b82c, 20
  store i32 %v1_b840, i32* @r5, align 4
  br i1 %v3_b834, label %dec_label_pc_b968, label %dec_label_pc_b848

dec_label_pc_b848:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b80c
  %v0_b850 = phi i32 [ %v7_b954, %dec_label_pc_b948 ], [ %v7_b82c, %dec_label_pc_b80c ]
  store i32 %v1_b2f8, i32* %lr.global-to-local, align 4
  store i1 %v2_b84c, i1* %cpsr_z.global-to-local, align 1
  %v1_b850 = add i32 %v0_b850, 40
  store i32 %v1_b850, i32* %r0.global-to-local, align 4
  %v0_b854 = load i32, i32* @sb, align 4
  store i32 %v0_b854, i32* @r1, align 4
  br i1 %v2_b84c, label %dec_label_pc_b85c, label %dec_label_pc_b98c

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b968, %dec_label_pc_b98c
  %v2_b85c = phi i32 [ %v0_b850, %dec_label_pc_b848 ], [ %v0_b980, %dec_label_pc_b968 ], [ %v2_b85c.pre, %dec_label_pc_b98c ]
  %v0_b85c = load i32, i32* @r6, align 4
  %v1_b85c = trunc i32 %v0_b85c to i8
  %v3_b85c = add i32 %v2_b85c, 10
  %v4_b85c = inttoptr i32 %v3_b85c to i8*
  store i8 %v1_b85c, i8* %v4_b85c, align 1
  %v0_b860 = load i32, i32* @r6, align 4
  %v1_b860 = trunc i32 %v0_b860 to i8
  %v2_b860 = load i32, i32* @r4, align 4
  %v3_b860 = add i32 %v2_b860, 11
  %v4_b860 = inttoptr i32 %v3_b860 to i8*
  store i8 %v1_b860, i8* %v4_b860, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b868 = load i32, i32* @r4, align 4
  store i32 %v0_b868, i32* @r0, align 4
  %v2_b86c = call i32 @function_d0b8(i32 %v0_b868, i32 20)
  %v3_b86c = trunc i32 %v2_b86c to i8
  store i32 %v2_b86c, i32* %r0.global-to-local, align 4
  %v3_b870 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b158, i32* %r2.global-to-local, align 4
  %v3_b878 = mul i32 %v3_b870, 16
  %v2_b87c = add i32 %v3_b878, %v2_b158
  store i32 %v2_b87c, i32* %r1.global-to-local, align 4
  %v1_b880 = add i32 %v2_b87c, 4
  %v2_b880 = inttoptr i32 %v1_b880 to i32*
  %v3_b880 = load i32, i32* %v2_b880, align 4
  %v3_b884 = mul i32 %v3_b880, 65536
  store i32 %v3_b884, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b880, 256
  %v1_b88c = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b880, 256
  %v4_b890 = urem i32 %tmp86, 256
  %v5_b890 = or i32 %v4_b890, %v1_b88c
  store i32 %v5_b890, i32* %r2.global-to-local, align 4
  %v1_b894 = add i32 %v3_b880, 1
  store i32 %v1_b894, i32* %r3.global-to-local, align 4
  store i32 %v1_b894, i32* %v2_b880, align 4
  %v0_b89c = load i32, i32* %r2.global-to-local, align 4
  %v1_b89c = load i32, i32* @r5, align 4
  %v2_b89c = add i32 %v1_b89c, 4
  %v3_b89c = inttoptr i32 %v2_b89c to i32*
  store i32 %v0_b89c, i32* %v3_b89c, align 4
  %v0_b8a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b8a0 = add i32 %v0_b8a0, 8
  %v2_b8a0 = inttoptr i32 %v1_b8a0 to i32*
  %v3_b8a0 = load i32, i32* %v2_b8a0, align 4
  %tmp87 = mul i32 %v3_b8a0, 256
  %v1_b8ac = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_b8a0, 256
  %v4_b8b0 = urem i32 %tmp88, 256
  %v5_b8b0 = or i32 %v4_b8b0, %v1_b8ac
  store i32 %v5_b8b0, i32* %r2.global-to-local, align 4
  %v4_b8b428 = udiv i32 %v2_b86c, 256
  %v1_b8b8 = trunc i32 %v4_b8b428 to i8
  %v2_b8b8 = load i32, i32* @r4, align 4
  %v3_b8b8 = add i32 %v2_b8b8, 11
  %v4_b8b8 = inttoptr i32 %v3_b8b8 to i8*
  store i8 %v1_b8b8, i8* %v4_b8b8, align 1
  %v3_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v3_b8bc, 10
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 %v3_b86c, i8* %v5_b8bc, align 1
  %v0_b8c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8c0 = load i32, i32* @r5, align 4
  %v2_b8c0 = add i32 %v1_b8c0, 8
  %v3_b8c0 = inttoptr i32 %v2_b8c0 to i32*
  store i32 %v0_b8c0, i32* %v3_b8c0, align 4
  %v0_b8c4 = load i32, i32* @r5, align 4
  store i32 %v0_b8c4, i32* @r1, align 4
  %v0_b8c8 = load i32, i32* @r8, align 4
  store i32 %v0_b8c8, i32* %r2.global-to-local, align 4
  %v0_b8cc = load i32, i32* @r7, align 4
  store i32 %v0_b8cc, i32* %r3.global-to-local, align 4
  %v0_b8d0 = load i32, i32* @r4, align 4
  store i32 %v0_b8d0, i32* %r0.global-to-local, align 4
  %v0_b8d4 = load i32, i32* @r6, align 4
  %v1_b8d4 = trunc i32 %v0_b8d4 to i8
  %v3_b8d4 = add i32 %v0_b8c4, 16
  %v4_b8d4 = inttoptr i32 %v3_b8d4 to i8*
  store i8 %v1_b8d4, i8* %v4_b8d4, align 1
  %v0_b8d8 = load i32, i32* @r6, align 4
  %v1_b8d8 = trunc i32 %v0_b8d8 to i8
  %v2_b8d8 = load i32, i32* @r5, align 4
  %v3_b8d8 = add i32 %v2_b8d8, 17
  %v4_b8d8 = inttoptr i32 %v3_b8d8 to i8*
  store i8 %v1_b8d8, i8* %v4_b8d8, align 1
  %v4_b8dc = call i32 @function_d114(i32 %v0_b8d0, i32 %v0_b8c4, i32 %v0_b8c8, i32 %v0_b8cc)
  %v5_b8dc = trunc i32 %v4_b8dc to i8
  store i32 %v4_b8dc, i32* %r0.global-to-local, align 4
  %v4_b8e029 = udiv i32 %v4_b8dc, 256
  %v1_b8e4 = trunc i32 %v4_b8e029 to i8
  %v2_b8e4 = load i32, i32* @r5, align 4
  %v3_b8e4 = add i32 %v2_b8e4, 17
  %v4_b8e4 = inttoptr i32 %v3_b8e4 to i8*
  store i8 %v1_b8e4, i8* %v4_b8e4, align 1
  %v3_b8e8 = load i32, i32* @r5, align 4
  %v4_b8e8 = add i32 %v3_b8e8, 16
  %v5_b8e8 = inttoptr i32 %v4_b8e8 to i8*
  store i8 %v5_b8dc, i8* %v5_b8e8, align 1
  %v3_b8ec = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b8ec, i32* %r3.global-to-local, align 4
  %v0_b8f0 = load i32, i32* @r4, align 4
  %v1_b8f0 = add i32 %v0_b8f0, 20
  %v2_b8f0 = inttoptr i32 %v1_b8f0 to i32*
  %v3_b8f0 = load i32, i32* %v2_b8f0, align 4
  %v5_b8f8 = mul i32 %v3_b8ec, 24
  %v3_b900 = udiv i32 %v3_b8f0, 65536
  store i32 %v3_b900, i32* %r2.global-to-local, align 4
  %v2_b904 = add i32 %v5_b8f8, %arg2
  store i32 %v2_b904, i32* %ip.global-to-local, align 4
  %v3_b9084 = udiv i32 %v3_b8f0, 16777216
  %v1_b90c = trunc i32 %v3_b9084 to i8
  %v3_b90c = add i32 %v2_b904, 3
  %v4_b90c = inttoptr i32 %v3_b90c to i8*
  store i8 %v1_b90c, i8* %v4_b90c, align 1
  %v0_b910 = load i32, i32* %r2.global-to-local, align 4
  %v1_b910 = trunc i32 %v0_b910 to i8
  %v2_b910 = load i32, i32* %ip.global-to-local, align 4
  %v3_b910 = add i32 %v2_b910, 2
  %v4_b910 = inttoptr i32 %v3_b910 to i8*
  store i8 %v1_b910, i8* %v4_b910, align 1
  %v0_b914 = load i32, i32* @r4, align 4
  store i32 %v0_b914, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_b308, i32* %r0.global-to-local, align 4
  %v0_b920 = load i32, i32* @sl, align 4
  store i32 %v0_b920, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_b928 = load i32, i32* %ip.global-to-local, align 4
  %v6_b930 = inttoptr i32 %v0_b914 to i32*
  %v7_b930 = call i32 @function_1349c(i32 %v3_b308, i32* %v6_b930, i32 %v0_b920, i32 16384, i32 %v0_b928, i32 16)
  %v3_b934 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b934, i32* %r3.global-to-local, align 4
  %v1_b938 = add i32 %v3_b934, 1
  store i32 %v1_b938, i32* %r0.global-to-local, align 4
  %v1_b93c = load i32, i32* @fp, align 4
  %v9_b93c = icmp eq i32 %v1_b938, %v1_b93c
  store i1 %v9_b93c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b938, i32* %stack_var_-40, align 4
  %v6_b944 = icmp slt i32 %v1_b938, %v1_b93c
  br i1 %v6_b944, label %dec_label_pc_b948, label %dec_label_pc_b800

dec_label_pc_b948:                                ; preds = %dec_label_pc_b85c
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_b350, i32* %ip.global-to-local, align 4
  %v4_b954 = mul i32 %v1_b938, 4
  %v5_b954 = add i32 %v4_b954, %v2_b168
  %v6_b954 = inttoptr i32 %v5_b954 to i32*
  %v7_b954 = load i32, i32* %v6_b954, align 4
  store i32 %v7_b954, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_b834, i1* %cpsr_z.global-to-local, align 1
  %v1_b960 = add i32 %v7_b954, 20
  store i32 %v1_b960, i32* @r5, align 4
  br i1 %v3_b834, label %dec_label_pc_b968, label %dec_label_pc_b848

dec_label_pc_b968:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b80c
  %v0_b968 = call i32 @function_e82c()
  %v1_b968 = trunc i32 %v0_b968 to i8
  store i32 %v1_b2f8, i32* %lr.global-to-local, align 4
  %v4_b970 = sdiv i32 %v0_b968, 256
  store i32 %v4_b970, i32* %r3.global-to-local, align 4
  store i1 %v2_b84c, i1* %cpsr_z.global-to-local, align 1
  %v3_b978 = load i32, i32* @r4, align 4
  %v4_b978 = add i32 %v3_b978, 4
  %v5_b978 = inttoptr i32 %v4_b978 to i8*
  store i8 %v1_b968, i8* %v5_b978, align 1
  %v0_b97c = load i32, i32* %r3.global-to-local, align 4
  %v1_b97c = trunc i32 %v0_b97c to i8
  %v2_b97c = load i32, i32* @r4, align 4
  %v3_b97c = add i32 %v2_b97c, 5
  %v4_b97c = inttoptr i32 %v3_b97c to i8*
  store i8 %v1_b97c, i8* %v4_b97c, align 1
  %v0_b980 = load i32, i32* @r4, align 4
  %v1_b980 = add i32 %v0_b980, 40
  store i32 %v1_b980, i32* %r0.global-to-local, align 4
  %v0_b984 = load i32, i32* @sb, align 4
  store i32 %v0_b984, i32* @r1, align 4
  %v0_b988 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b988, label %dec_label_pc_b85c, label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b848, %dec_label_pc_b968
  %v0_b98c = phi i32 [ %v1_b850, %dec_label_pc_b848 ], [ %v1_b980, %dec_label_pc_b968 ]
  %v1_b98c = inttoptr i32 %v0_b98c to i8*
  %v2_b98c = call i32 @function_e9ac(i8* %v1_b98c)
  store i32 %v2_b98c, i32* %r0.global-to-local, align 4
  %v2_b85c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b85c

; uselistorder directives
  uselistorder i32 %v0_b980, { 1, 0 }
  uselistorder i32 %v7_b954, { 1, 2, 0 }
  uselistorder i32 %v1_b93c, { 1, 2, 0 }
  uselistorder i32 %v1_b938, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_b8dc, { 0, 2, 1 }
  uselistorder i32 %v0_b8c4, { 1, 0, 2 }
  uselistorder i32 %v3_b8a0, { 1, 0 }
  uselistorder i32 %v3_b880, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b86c, { 0, 2, 1 }
  uselistorder i32 %v0_b850, { 1, 0 }
  uselistorder i32 %v0_b80c, { 1, 0 }
  uselistorder i32 %v0_b800, { 1, 0 }
  uselistorder i1 %v3_b834, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b7e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b73c, { 0, 2, 1 }
  uselistorder i32 %v3_b71c, { 1, 0 }
  uselistorder i32 %v0_b6f0, { 1, 0, 2 }
  uselistorder i32 %v3_b6e4, { 1, 0 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i32 %v0_b66c, { 1, 0 }
  uselistorder i32 %v3_b5f4, { 1, 0 }
  uselistorder i32 %v2_b5e0, { 1, 0 }
  uselistorder i32 %v3_b5c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b5bc, { 1, 0 }
  uselistorder i32 %v3_b598, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b590, { 1, 0 }
  uselistorder i32 %v4_b578, { 1, 0 }
  uselistorder i32 %v0_b574, { 0, 2, 1 }
  uselistorder i1 %v7_b4e4, { 1, 0 }
  uselistorder i32 %v7_b4dc, { 0, 2, 1, 3 }
  uselistorder i32 %v5_b528, { 1, 0 }
  uselistorder i1 %v9_b50c, { 1, 0 }
  uselistorder i32 %v4_b520, { 1, 0 }
  uselistorder i32 %v4_b51c, { 1, 0 }
  uselistorder i32 %v8_b430, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b41c, { 1, 0 }
  uselistorder i32 %v0_b40c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_b394, { 1, 0 }
  uselistorder i32 %v3_b390, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b7a8, { 1, 0 }
  uselistorder i32 %v1_b790, { 1, 0 }
  uselistorder i32 %v1_b778, { 1, 0 }
  uselistorder i32 %v1_b760, { 1, 0 }
  uselistorder i32 %v1_b748, { 1, 0 }
  uselistorder i32 %v5_b524, { 1, 0 }
  uselistorder i32 %v3_b47893, { 1, 0 }
  uselistorder i1 %v2_b53c, { 1, 0 }
  uselistorder i32 %v1_b538, { 1, 0 }
  uselistorder i32 %v4_b534, { 2, 0, 1 }
  uselistorder i32 %v4_b518, { 1, 0 }
  uselistorder i1 %v3_b460, { 1, 0 }
  uselistorder i32 %v8_b35c, { 2, 1, 0 }
  uselistorder i32 %v8_b358, { 1, 2, 0 }
  uselistorder i32 %v3_b350, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_b34c, { 0, 1, 3, 2 }
  uselistorder i1 %v7_b340, { 1, 0 }
  uselistorder i1 %v7_b310, { 1, 0 }
  uselistorder i32 %v3_b30c, { 2, 0, 1 }
  uselistorder i32 %v3_b308, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_b2f8, { 1, 3, 2, 0 }
  uselistorder i32 %v1_b2a0, { 1, 0 }
  uselistorder i32 %v1_b260, { 1, 0 }
  uselistorder i32 %v1_b240, { 1, 0 }
  uselistorder i32 %v1_b220, { 1, 0 }
  uselistorder i32 %v1_b1e8, { 1, 0 }
  uselistorder i32 %v2_b168, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_b158, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_b13c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 6, 5, 10, 7, 8, 11, 9, 19, 12, 13, 14, 15, 16, 17, 18, 23, 20, 21, 22, 24, 26, 25, 28, 27, 31, 29, 32, 33, 30, 34, 36, 35, 37, 38, 40, 39, 44, 41, 42, 43, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 17, 26, 18, 19, 16, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_b98c, { 1, 0 }
  uselistorder label %dec_label_pc_b85c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b7e4, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %.thread6, { 2, 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %dec_label_pc_b56c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b4a4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b454, { 1, 0 }
}

define i32 @function_b998(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b998:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp30 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_b99c = urem i32 %arg1, 256
  store i32 %v1_b99c, i32* @fp, align 4
  store i32 %v1_b99c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b9b4 = urem i32 %arg3, 256
  store i32 %v1_b9b4, i32* @r4, align 4
  %v2_b9b8 = call i32 @function_137ec(i32 %v1_b99c, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b9c4 = load i32, i32* @fp, align 4
  store i32 %v0_b9c4, i32* %r0.global-to-local, align 4
  %v2_b9c8 = call i32 @function_137ec(i32 %v0_b9c4, i32 4)
  %v0_b9cc = load i32, i32* @r5, align 4
  store i32 %v0_b9cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* %r0.global-to-local, align 4
  %v5_b9e0 = inttoptr i32 %v0_b9cc to i32*
  %v6_b9e0 = call i32 @function_85e0(i32 %v0_b9dc, i32* %v5_b9e0, i32 2, i32 0)
  %v1_b9ec = urem i32 %v6_b9e0, 256
  store i32 %v1_b9ec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b9f8 = load i32, i32* @r5, align 4
  store i32 %v0_b9f8, i32* %r1.global-to-local, align 4
  %v0_b9fc = load i32, i32* @r4, align 4
  store i32 %v0_b9fc, i32* %r0.global-to-local, align 4
  %v6_ba04 = inttoptr i32 %v0_b9f8 to i32*
  %v7_ba04 = call i32 @function_85e0(i32 %v0_b9fc, i32* %v6_ba04, i32 3, i32 65535)
  %v0_ba08 = load i32, i32* @r5, align 4
  store i32 %v0_ba08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ba04, i32* @r6, align 4
  %v0_ba18 = load i32, i32* @r4, align 4
  store i32 %v0_ba18, i32* %r0.global-to-local, align 4
  %v4_ba1c = inttoptr i32 %v0_ba08 to i32*
  %v5_ba1c = call i32 @function_85e0(i32 %v0_ba18, i32* %v4_ba1c, i32 4, i32 64)
  %v1_ba24 = urem i32 %v5_ba1c, 256
  store i32 %v1_ba24, i32* %ip.global-to-local, align 4
  %v0_ba28 = load i32, i32* @r5, align 4
  store i32 %v0_ba28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ba34 = load i32, i32* @r4, align 4
  store i32 %v0_ba34, i32* %r0.global-to-local, align 4
  %v6_ba3c = inttoptr i32 %v0_ba28 to i32*
  %v7_ba3c = call i32 @function_85e0(i32 %v0_ba34, i32* %v6_ba3c, i32 5, i32 1)
  %v1_ba48 = urem i32 %v7_ba3c, 256
  store i32 %v1_ba48, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ba50 = load i32, i32* @r5, align 4
  store i32 %v0_ba50, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_ba58 = load i32, i32* @r4, align 4
  store i32 %v0_ba58, i32* %r0.global-to-local, align 4
  %v5_ba60 = inttoptr i32 %v0_ba50 to i32*
  %v6_ba60 = call i32 @function_85e0(i32 %v0_ba58, i32* %v5_ba60, i32 7, i32 65535)
  %v0_ba64 = load i32, i32* @r5, align 4
  store i32 %v0_ba64, i32* %r1.global-to-local, align 4
  %v3_ba68 = mul i32 %v6_ba60, 65536
  store i32 %v3_ba68, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ba74 = load i32, i32* @r4, align 4
  store i32 %v0_ba74, i32* %r0.global-to-local, align 4
  %v4_ba78 = inttoptr i32 %v0_ba64 to i32*
  %v5_ba78 = call i32 @function_85e0(i32 %v0_ba74, i32* %v4_ba78, i32 11, i32 0)
  %v1_ba80 = urem i32 %v5_ba78, 256
  store i32 %v1_ba80, i32* %ip.global-to-local, align 4
  %v0_ba84 = load i32, i32* @r5, align 4
  store i32 %v0_ba84, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ba90 = load i32, i32* @r4, align 4
  store i32 %v0_ba90, i32* %r0.global-to-local, align 4
  %v5_ba98 = inttoptr i32 %v0_ba84 to i32*
  %v6_ba98 = call i32 @function_85e0(i32 %v0_ba90, i32* %v5_ba98, i32 12, i32 1)
  %v1_baa0 = urem i32 %v6_ba98, 256
  store i32 %v1_baa0, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* @r5, align 4
  store i32 %v0_baa4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bab0 = load i32, i32* @r4, align 4
  store i32 %v0_bab0, i32* %r0.global-to-local, align 4
  %v5_bab8 = inttoptr i32 %v0_baa4 to i32*
  %v6_bab8 = call i32 @function_85e0(i32 %v0_bab0, i32* %v5_bab8, i32 13, i32 1)
  %v1_bac0 = urem i32 %v6_bab8, 256
  store i32 %v1_bac0, i32* %ip.global-to-local, align 4
  %v0_bac4 = load i32, i32* @r5, align 4
  store i32 %v0_bac4, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bad0 = load i32, i32* @r4, align 4
  store i32 %v0_bad0, i32* %r0.global-to-local, align 4
  %v5_bad8 = inttoptr i32 %v0_bac4 to i32*
  %v6_bad8 = call i32 @function_85e0(i32 %v0_bad0, i32* %v5_bad8, i32 14, i32 0)
  %v1_bae0 = urem i32 %v6_bad8, 256
  store i32 %v1_bae0, i32* %ip.global-to-local, align 4
  %v0_bae4 = load i32, i32* @r5, align 4
  store i32 %v0_bae4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_baf0 = load i32, i32* @r4, align 4
  store i32 %v0_baf0, i32* %r0.global-to-local, align 4
  %v5_baf8 = inttoptr i32 %v0_bae4 to i32*
  %v6_baf8 = call i32 @function_85e0(i32 %v0_baf0, i32* %v5_baf8, i32 15, i32 0)
  %v1_bb00 = urem i32 %v6_baf8, 256
  store i32 %v1_bb00, i32* %ip.global-to-local, align 4
  %v0_bb04 = load i32, i32* @r5, align 4
  store i32 %v0_bb04, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb10 = load i32, i32* @r4, align 4
  store i32 %v0_bb10, i32* %r0.global-to-local, align 4
  %v5_bb18 = inttoptr i32 %v0_bb04 to i32*
  %v6_bb18 = call i32 @function_85e0(i32 %v0_bb10, i32* %v5_bb18, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_bb18, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_bb28 = load i32, i32* @r5, align 4
  store i32 %v0_bb28, i32* %r1.global-to-local, align 4
  %v0_bb2c = load i32, i32* @r4, align 4
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v1_bb30 = urem i32 %v6_bb18, 256
  store i32 %v1_bb30, i32* @r8, align 4
  %v4_bb34 = inttoptr i32 %v0_bb28 to i32*
  %v5_bb34 = call i32 @function_85e0(i32 %v0_bb2c, i32* %v4_bb34, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bb40 = load i32, i32* @r5, align 4
  store i32 %v0_bb40, i32* %r1.global-to-local, align 4
  store i32 %v5_bb34, i32* @sb, align 4
  %v0_bb48 = load i32, i32* @r4, align 4
  store i32 %v0_bb48, i32* %r0.global-to-local, align 4
  %v4_bb4c = inttoptr i32 %v0_bb40 to i32*
  %v5_bb4c = call i32 @function_85e0(i32 %v0_bb48, i32* %v4_bb4c, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_bb58 = urem i32 %v5_bb4c, 256
  store i32 %v1_bb58, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bb68 = call i32 @function_13500(i32 2, i32 3, i32 6)
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v0_bb6c = load i32, i32* @r7, align 4
  %v3_bb6c = udiv i32 %v0_bb6c, 65536
  store i32 %v3_bb6c, i32* %r1.global-to-local, align 4
  %v7_bb70 = icmp eq i32 %v3_bb68, -1
  store i1 %v7_bb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb70, label %dec_label_pc_bdcc, label %dec_label_pc_bb80

dec_label_pc_bb80:                                ; preds = %dec_label_pc_b998
  store i32 1, i32* %stack_var_-40, align 4
  %v6_bb88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_bb88, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_bb9c = call i32 @function_134d0(i32 %v3_bb68, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v6_bb9c, i32* %r0.global-to-local, align 4
  %v7_bba0 = icmp eq i32 %v6_bb9c, -1
  store i1 %v7_bba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bba0, label %dec_label_pc_bdc4, label %dec_label_pc_bba8

dec_label_pc_bba8:                                ; preds = %dec_label_pc_bb80
  %v0_bba8 = load i32, i32* @fp, align 4
  %v2_bba8 = icmp eq i32 %v0_bba8, 0
  store i1 %v2_bba8, i1* %cpsr_z.global-to-local, align 1
  %v0_bbac = load i32, i32* @r6, align 4
  %v3_bbac = mul i32 %v0_bbac, 65536
  store i32 %v3_bbac, i32* %r0.global-to-local, align 4
  %v3_bbb0 = urem i32 %v0_bbac, 65536
  store i32 %v3_bbb0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp72 = icmp slt i32 %v0_bba8, 1
  br i1 %tmp72, label %.thread18, label %dec_label_pc_bbd4.preheader

.thread18:                                        ; preds = %dec_label_pc_bba8
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_c058

dec_label_pc_bbd4.preheader:                      ; preds = %dec_label_pc_bba8
  %v5_bbb8 = load i32, i32* @r7, align 4
  %v8_bbb8 = udiv i32 %v5_bbb8, 16777216
  %tmp73 = udiv i32 %v0_bbac, 256
  %v8_bbbc = urem i32 %tmp73, 256
  store i32 %v8_bbbc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_bcc0 = icmp ugt i32 %v0_bb6c, -65537
  %v2_bce4 = ptrtoint i32* %stack_var_-60 to i32
  %v3_bcf0 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_bd20 = ptrtoint i32* %stack_var_-76 to i32
  %v2_bd24 = ptrtoint i32* %stack_var_-44 to i32
  %v2_bd28 = ptrtoint i32* %stack_var_-332 to i32
  %v4_bd74 = zext i8 %tmp31 to i32
  %v4_bd78 = zext i8 %tmp30 to i32
  %v4_bd84 = mul nuw nsw i32 %v4_bd78, 256
  %v4_bd94 = zext i8 %tmp to i32
  %v1_bd98 = and i32 %v4_bd94, 18
  %v2_bd9c = icmp eq i32 %v1_bd98, 18
  %v1_bcd0 = mul nuw nsw i32 %v3_bb6c, 256
  %v4_bcd4 = and i32 %v1_bcd0, 65280
  %v5_bcd4 = or i32 %v8_bbb8, %v4_bcd4
  %v3_bcd893 = udiv i32 %v4_bcd4, 256
  %v1_bcdc = trunc i32 %v3_bcd893 to i8
  %v1_bea0 = mul i32 %v0_bbac, 256
  %v4_bea8 = and i32 %v1_bea0, 65280
  %sext = mul i32 %v6_b9e0, 16777216
  %v4_beb8 = sdiv i32 %sext, 16777216
  %sext5 = mul i32 %v5_ba1c, 16777216
  %v4_bedc = sdiv i32 %sext5, 16777216
  %v5_bd84 = or i32 %v4_bd74, %v4_bd84
  %v1_bda4 = and i32 %v4_bd94, 5
  %v2_bda4 = icmp eq i32 %v1_bda4, 0
  %v1_bce0 = trunc i32 %v8_bbb8 to i8
  %v5_bea8 = or i32 %v8_bbbc, %v4_bea8
  %v1_bec8 = trunc i32 %v4_beb8 to i8
  %v1_bfa8 = urem i32 %v5_ba78, 2
  %tmp94 = sub nsw i32 0, %v1_bfa8
  %v4_bfb0 = and i32 %tmp94, 32
  %v1_bfc0 = urem i32 %v6_ba98, 2
  %tmp95 = sub nsw i32 0, %v1_bfc0
  %v4_bfc8 = and i32 %tmp95, 16
  %v1_bfd8 = urem i32 %v6_bab8, 2
  %tmp96 = sub nsw i32 0, %v1_bfd8
  %v4_bfe0 = and i32 %tmp96, 8
  %v1_bff0 = urem i32 %v6_bad8, 2
  %tmp97 = sub nsw i32 0, %v1_bff0
  %v4_bff8 = and i32 %tmp97, 4
  %v1_c008 = urem i32 %v6_baf8, 2
  %tmp98 = sub nsw i32 0, %v1_c008
  %v3_c010 = and i32 %tmp98, 2
  br label %dec_label_pc_bbd4

dec_label_pc_bbd4:                                ; preds = %dec_label_pc_c044, %dec_label_pc_bdac, %dec_label_pc_bbd4.preheader
  store i32 %v8_bbbc, i32* %r3.global-to-local, align 4
  %v0_bbe0 = load i32, i32* @sb, align 4
  %v1_bbe0 = add i32 %v0_bbe0, 40
  store i32 %v1_bbe0, i32* @sl, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bdb8, %dec_label_pc_bbd4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_bbf0 = call i32 @function_13500(i32 2, i32 1, i32 0)
  store i32 %v3_bbf0, i32* %r0.global-to-local, align 4
  %v7_bbf4 = icmp eq i32 %v3_bbf0, -1
  store i1 %v7_bbf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_bbf0, i32* @r7, align 4
  br i1 %v7_bbf4, label %dec_label_pc_c044, label %dec_label_pc_bc00

dec_label_pc_bc00:                                ; preds = %dec_label_pc_bbe4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_bc08 = call i32 @function_12b58(i32 %v3_bbf0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_bc10 = or i32 %v2_bc08, 2048
  store i32 %v1_bc10, i32* @r2, align 4
  %v0_bc14 = load i32, i32* @r7, align 4
  store i32 %v0_bc14, i32* %r0.global-to-local, align 4
  %v2_bc18 = call i32 @function_12b58(i32 %v0_bc14, i32 4)
  store i32 %v2_bc18, i32* %r0.global-to-local, align 4
  %v3_bc1c = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_bc2c = mul i32 %v3_bc1c, 24
  store i32 %v5_bc2c, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_bc3c = add i32 %v5_bc2c, %arg2
  store i32 %v2_bc3c, i32* %r2.global-to-local, align 4
  %v1_bc40 = add i32 %v2_bc3c, 20
  %v2_bc40 = inttoptr i32 %v1_bc40 to i8*
  %v3_bc40 = load i8, i8* %v2_bc40, align 1
  %v4_bc40 = zext i8 %v3_bc40 to i32
  store i32 %v4_bc40, i32* %r3.global-to-local, align 4
  %v2_bc44 = icmp ugt i8 %v3_bc40, 30
  %v7_bc44 = icmp eq i8 %v3_bc40, 31
  store i1 %v7_bc44, i1* %cpsr_z.global-to-local, align 1
  %v2_bc48 = xor i1 %v7_bc44, true
  %v3_bc48 = and i1 %v2_bc44, %v2_bc48
  %v5_bc48 = add i32 %v2_bc3c, 16
  %v6_bc48 = inttoptr i32 %v5_bc48 to i32*
  %v7_bc48 = load i32, i32* %v6_bc48, align 4
  br i1 %v3_bc48, label %dec_label_pc_bcb4, label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc00
  store i32 %v7_bc48, i32* @r4, align 4
  %v0_bc58 = call i32 @function_e82c()
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v3_bc5c = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_bc68 = mul i32 %v3_bc5c, 24
  %v0_bc6c = load i32, i32* @r4, align 4
  %v2_bc70 = add i32 %v5_bc68, %arg2
  store i32 %v2_bc70, i32* %r1.global-to-local, align 4
  %v1_bc74 = and i32 %v0_bc6c, 65280
  store i32 %v1_bc74, i32* %r3.global-to-local, align 4
  %v1_bc6c = udiv i32 %v0_bc6c, 256
  %v3_bc78 = and i32 %v1_bc6c, 65280
  store i32 %v3_bc78, i32* %r2.global-to-local, align 4
  %v3_bc7c = mul i32 %v0_bc6c, 16777216
  store i32 %v3_bc7c, i32* %ip.global-to-local, align 4
  %v1_bc80 = add i32 %v2_bc70, 20
  %v2_bc80 = inttoptr i32 %v1_bc80 to i8*
  %v3_bc80 = load i8, i8* %v2_bc80, align 1
  %v4_bc80 = zext i8 %v3_bc80 to i32
  store i32 %v4_bc80, i32* %lr.global-to-local, align 4
  %v4_bc84 = mul nuw nsw i32 %v1_bc74, 256
  %v5_bc84 = or i32 %v4_bc84, %v3_bc7c
  store i32 %v5_bc84, i32* %ip.global-to-local, align 4
  %v2_bc8c = call i32 @llvm.bswap.i32(i32 %v0_bc6c)
  %v7_bc90 = lshr i32 %v0_bc58, %v4_bc80
  %v8_bc90 = add i32 %v7_bc90, %v2_bc8c
  store i32 %v8_bc90, i32* %r2.global-to-local, align 4
  %v3_bc9c = mul i32 %v8_bc90, 16777216
  %v1_bca0 = and i32 %v8_bc90, 65280
  store i32 %v1_bca0, i32* %r0.global-to-local, align 4
  %v4_bca4 = mul nuw nsw i32 %v1_bca0, 256
  %v5_bca4 = or i32 %v4_bca4, %v3_bc9c
  store i32 %v5_bca4, i32* %r1.global-to-local, align 4
  %v2_bcac = call i32 @llvm.bswap.i32(i32 %v8_bc90)
  br label %dec_label_pc_bcb4

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bc00, %dec_label_pc_bc54
  %storemerge25 = phi i32 [ %v2_bcac, %dec_label_pc_bc54 ], [ %v7_bc48, %dec_label_pc_bc00 ]
  store i32 %v3_bb6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_bcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bcc0, label %dec_label_pc_bdd4, label %dec_label_pc_bcc8

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcb4
  store i32 %v8_bbb8, i32* %ip.global-to-local, align 4
  store i32 %v5_bcd4, i32* %r3.global-to-local, align 4
  store i32 %v3_bcd893, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bce4

dec_label_pc_bce4:                                ; preds = %dec_label_pc_bdd4, %dec_label_pc_bcc8
  %stack_var_-57.0 = phi i8 [ %v1_bddc, %dec_label_pc_bdd4 ], [ %v1_bcdc, %dec_label_pc_bcc8 ]
  %storemerge = phi i8 [ %v1_bdd4, %dec_label_pc_bdd4 ], [ %v1_bce0, %dec_label_pc_bcc8 ]
  store i32 %v2_bce4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_bcec = load i32, i32* @r7, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v4_bcf0 = call i32 @function_1335c(i32 %v0_bcec, %sockaddr* nonnull %v3_bcf0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bcf8 = call i32 @function_12eec(i32* null)
  store i32 %v2_bcf8, i32* %r0.global-to-local, align 4
  store i32 %v2_bcf8, i32* @r4, align 4
  %v9_bd58 = icmp eq i32 %tmp32, %storemerge25
  %v4_bd7c = zext i8 %storemerge to i32
  %v4_bd80 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_bd58 to i32
  %v9_bd6c = icmp eq i1 %v9_bd58, false
  %v4_bd88 = mul nuw nsw i32 %v4_bd80, 256
  %v5_bd88 = or i32 %v4_bd88, %v4_bd7c
  %v9_bd8c = icmp eq i32 %v5_bd88, %v5_bd84
  br label %dec_label_pc_bd14

dec_label_pc_bd04:                                ; preds = %.thread23, %dec_label_pc_bd74, %dec_label_pc_bda4, %bb75
  %v2_bd04 = call i32 @function_12eec(i32* null)
  %v0_bd08 = load i32, i32* @r4, align 4
  %v2_bd08 = sub i32 %v2_bd04, %v0_bd08
  store i32 %v2_bd08, i32* %r0.global-to-local, align 4
  %v7_bd0c = icmp eq i32 %v2_bd08, 10
  store i1 %v7_bd0c, i1* %cpsr_z.global-to-local, align 1
  %v8_bd10 = icmp sgt i32 %v2_bd08, 10
  br i1 %v8_bd10, label %dec_label_pc_bdb8, label %dec_label_pc_bd14

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bd04, %dec_label_pc_bce4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_bd20, i32* %lr.global-to-local, align 4
  store i32 %v2_bd24, i32* %ip.global-to-local, align 4
  store i32 %v2_bd28, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v7_bd3c = call i32 @function_1343c(i32 %v3_bb68, i32* nonnull %stack_var_-332, i32 256, i32 16384, i32 %v2_bd20, i32 %v2_bd24)
  store i32 %v7_bd3c, i32* %r2.global-to-local, align 4
  %v7_bd44 = icmp eq i32 %v7_bd3c, -1
  store i1 %v7_bd44, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_bd44, label %dec_label_pc_bdcc, label %dec_label_pc_bd50

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd14
  store i32 %tmp32, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_bd64 = icmp eq i32 %v7_bd3c, 40
  store i1 %v7_bd64, i1* %cpsr_z.global-to-local, align 1
  %tmp99 = icmp ult i32 %v7_bd3c, 41
  br i1 %tmp99, label %.thread23, label %bb75

.thread23:                                        ; preds = %dec_label_pc_bd50
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_bd04

bb75:                                             ; preds = %dec_label_pc_bd50
  store i1 %v9_bd6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd6c, label %dec_label_pc_bd04, label %dec_label_pc_bd74

dec_label_pc_bd74:                                ; preds = %bb75
  store i32 %v4_bd78, i32* %r1.global-to-local, align 4
  store i32 %v4_bd7c, i32* %ip.global-to-local, align 4
  store i32 %v4_bd80, i32* %r2.global-to-local, align 4
  store i32 %v5_bd84, i32* %r3.global-to-local, align 4
  store i32 %v5_bd88, i32* @r5, align 4
  store i1 %v9_bd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd8c, label %dec_label_pc_bd94, label %dec_label_pc_bd04

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd74
  store i32 %v4_bd94, i32* %r2.global-to-local, align 4
  store i32 %v1_bd98, i32* %r3.global-to-local, align 4
  store i1 %v2_bd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd9c, label %dec_label_pc_bde8, label %dec_label_pc_bda4

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd94
  store i1 %v2_bda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bda4, label %dec_label_pc_bd04, label %dec_label_pc_bdac

dec_label_pc_bdac:                                ; preds = %dec_label_pc_bda4
  %v0_bdac = load i32, i32* @r7, align 4
  store i32 %v0_bdac, i32* %r0.global-to-local, align 4
  %v1_bdb0 = call i32 @function_12c1c(i32 %v0_bdac)
  store i32 %v1_bdb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbd4

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bd04
  %v0_bdb8 = load i32, i32* @r7, align 4
  store i32 %v0_bdb8, i32* %r0.global-to-local, align 4
  %v1_bdbc = call i32 @function_12c1c(i32 %v0_bdb8)
  store i32 %v1_bdbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bdc4:                                ; preds = %dec_label_pc_bb80
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v1_bdc8 = call i32 @function_12c1c(i32 %v3_bb68)
  store i32 %v1_bdc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bdcc

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bd14, %dec_label_pc_b998, %dec_label_pc_bdc4
  %v29_bdd0 = phi i32 [ %v3_bb68, %dec_label_pc_b998 ], [ %v1_bdc8, %dec_label_pc_bdc4 ], [ 0, %dec_label_pc_bd14 ]
  ret i32 %v29_bdd0

dec_label_pc_bdd4:                                ; preds = %dec_label_pc_bcb4
  %v0_bdd4 = call i32 @function_e82c()
  %v1_bdd4 = trunc i32 %v0_bdd4 to i8
  store i32 %v0_bdd4, i32* %r0.global-to-local, align 4
  %v4_bdd8 = sdiv i32 %v0_bdd4, 256
  store i32 %v4_bdd8, i32* %r3.global-to-local, align 4
  %v1_bddc = trunc i32 %v4_bdd8 to i8
  br label %dec_label_pc_bce4

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bd94
  %v3_bde8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bde8, i32* @r4, align 4
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v3_bdf0 = mul i32 %v3_bde8, 16
  store i32 %v3_bdf0, i32* %ip.global-to-local, align 4
  %v3_bdf4 = add i32 %v3_bdf0, %v2_b9b8
  %v4_bdf4 = inttoptr i32 %v3_bdf4 to i32*
  store i32 %storemerge25, i32* %v4_bdf4, align 4
  %v0_bdf8 = load i32, i32* @r6, align 4
  %v1_bdf8 = add i32 %v0_bdf8, 4
  %v2_bdf8 = inttoptr i32 %v1_bdf8 to i32*
  %v3_bdf8 = load i32, i32* %v2_bdf8, align 4
  store i32 %v3_bdf8, i32* %r0.global-to-local, align 4
  %v1_be00 = and i32 %v3_bdf8, 65280
  store i32 %v1_be00, i32* %r1.global-to-local, align 4
  store i32 %v2_b9b8, i32* %lr.global-to-local, align 4
  %v3_be08 = mul i32 %v3_bdf8, 16777216
  %v4_be10 = mul nuw nsw i32 %v1_be00, 256
  %v5_be10 = or i32 %v4_be10, %v3_be08
  store i32 %v5_be10, i32* %r2.global-to-local, align 4
  %v1_be18 = load i32, i32* %ip.global-to-local, align 4
  %v2_be18 = add i32 %v1_be18, %v2_b9b8
  store i32 %v2_be18, i32* %ip.global-to-local, align 4
  %v2_be1c = call i32 @llvm.bswap.i32(i32 %v3_bdf8)
  store i32 %v2_be1c, i32* %r3.global-to-local, align 4
  %v2_be20 = add i32 %v2_be18, 4
  %v3_be20 = inttoptr i32 %v2_be20 to i32*
  store i32 %v2_be1c, i32* %v3_be20, align 4
  %v0_be24 = load i32, i32* @r6, align 4
  %v1_be24 = add i32 %v0_be24, 8
  %v2_be24 = inttoptr i32 %v1_be24 to i32*
  %v3_be24 = load i32, i32* %v2_be24, align 4
  store i32 %v3_be24, i32* %r0.global-to-local, align 4
  %v1_be2c = and i32 %v3_be24, 65280
  store i32 %v1_be2c, i32* %r1.global-to-local, align 4
  %v3_be30 = mul i32 %v3_be24, 16777216
  %v4_be38 = mul nuw nsw i32 %v1_be2c, 256
  %v5_be38 = or i32 %v4_be38, %v3_be30
  store i32 %v5_be38, i32* %r2.global-to-local, align 4
  %v2_be40 = call i32 @llvm.bswap.i32(i32 %v3_be24)
  store i32 %v2_be40, i32* %r3.global-to-local, align 4
  %v1_be44 = load i32, i32* %ip.global-to-local, align 4
  %v2_be44 = add i32 %v1_be44, 8
  %v3_be44 = inttoptr i32 %v2_be44 to i32*
  store i32 %v2_be40, i32* %v3_be44, align 4
  %v0_be48 = load i32, i32* @r6, align 4
  %v1_be48 = inttoptr i32 %v0_be48 to i32*
  %v2_be48 = load i32, i32* %v1_be48, align 4
  %v3_be4c = udiv i32 %v2_be48, 65536
  store i32 %v3_be4c, i32* %r2.global-to-local, align 4
  %v3_be503 = udiv i32 %v2_be48, 16777216
  store i32 %v3_be503, i32* %r1.global-to-local, align 4
  %v0_be54 = load i32, i32* @r5, align 4
  %v3_be54 = sdiv i32 %v0_be54, 256
  store i32 %v3_be54, i32* %r3.global-to-local, align 4
  %v1_be58 = trunc i32 %v3_be54 to i8
  %v2_be58 = load i32, i32* %ip.global-to-local, align 4
  %v3_be58 = add i32 %v2_be58, 15
  %v4_be58 = inttoptr i32 %v3_be58 to i8*
  store i8 %v1_be58, i8* %v4_be58, align 1
  %v0_be5c = load i32, i32* %r1.global-to-local, align 4
  %v1_be5c = trunc i32 %v0_be5c to i8
  %v2_be5c = load i32, i32* %ip.global-to-local, align 4
  %v3_be5c = add i32 %v2_be5c, 13
  %v4_be5c = inttoptr i32 %v3_be5c to i8*
  store i8 %v1_be5c, i8* %v4_be5c, align 1
  %v0_be60 = load i32, i32* %r2.global-to-local, align 4
  %v1_be60 = trunc i32 %v0_be60 to i8
  %v2_be60 = load i32, i32* %ip.global-to-local, align 4
  %v3_be60 = add i32 %v2_be60, 12
  %v4_be60 = inttoptr i32 %v3_be60 to i8*
  store i8 %v1_be60, i8* %v4_be60, align 1
  %v0_be64 = load i32, i32* @r5, align 4
  %v1_be64 = trunc i32 %v0_be64 to i8
  %v2_be64 = load i32, i32* %ip.global-to-local, align 4
  %v3_be64 = add i32 %v2_be64, 14
  %v4_be64 = inttoptr i32 %v3_be64 to i8*
  store i8 %v1_be64, i8* %v4_be64, align 1
  %v0_be68 = load i32, i32* @sl, align 4
  store i32 %v0_be68, i32* %r0.global-to-local, align 4
  %v1_be6c = call i32 @function_13698(i32 %v0_be68)
  store i32 %v1_be6c, i32* %r0.global-to-local, align 4
  store i32 %v2_b9c8, i32* %r1.global-to-local, align 4
  %v3_be74 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_be74, i32* %r2.global-to-local, align 4
  %v2_be78 = load i32, i32* @r4, align 4
  %v5_be78 = mul i32 %v2_be78, 4
  %v6_be78 = add i32 %v5_be78, %v2_b9c8
  %v7_be78 = inttoptr i32 %v6_be78 to i32*
  store i32 %v1_be6c, i32* %v7_be78, align 4
  %v0_be7c = load i32, i32* %r1.global-to-local, align 4
  %v1_be7c = load i32, i32* %r2.global-to-local, align 4
  %v4_be7c = mul i32 %v1_be7c, 4
  %v5_be7c = add i32 %v4_be7c, %v0_be7c
  %v6_be7c = inttoptr i32 %v5_be7c to i32*
  %v7_be7c = load i32, i32* %v6_be7c, align 4
  store i32 %v7_be7c, i32* @r4, align 4
  %v1_be80 = inttoptr i32 %v7_be7c to i8*
  %v2_be80 = load i8, i8* %v1_be80, align 1
  %tmp100 = urem i8 %v2_be80, 16
  %v1_be84 = zext i8 %tmp100 to i32
  %v1_be88 = or i32 %v1_be84, 64
  store i32 %v1_be88, i32* %r3.global-to-local, align 4
  %v1_be8c = trunc i32 %v1_be88 to i8
  store i8 %v1_be8c, i8* %v1_be80, align 1
  %v0_be90 = load i32, i32* @r4, align 4
  %v1_be90 = inttoptr i32 %v0_be90 to i8*
  %v2_be90 = load i8, i8* %v1_be90, align 1
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v1_be9c = and i8 %v2_be90, -16
  %v1_bea4 = or i8 %v1_be9c, 5
  store i32 %v5_bea8, i32* %r0.global-to-local, align 4
  %v0_beac = load i32, i32* @sl, align 4
  %v3_beac = mul i32 %v0_beac, 65536
  store i32 %v3_beac, i32* %r2.global-to-local, align 4
  store i32 %v1_ba48, i32* %lr.global-to-local, align 4
  store i8 %v1_bea4, i8* %v1_be90, align 1
  store i32 %v4_beb8, i32* %r1.global-to-local, align 4
  %v0_bebc = load i32, i32* %r2.global-to-local, align 4
  %v3_bebc = udiv i32 %v0_bebc, 65536
  %v1_bec0 = urem i32 %v3_bebc, 256
  store i32 %v1_bec0, i32* %r3.global-to-local, align 4
  %v3_bec4 = udiv i32 %v0_bebc, 16777216
  store i32 %v3_bec4, i32* %r2.global-to-local, align 4
  %v2_bec8 = load i32, i32* @r4, align 4
  %v3_bec8 = add i32 %v2_bec8, 1
  %v4_bec8 = inttoptr i32 %v3_bec8 to i8*
  store i8 %v1_bec8, i8* %v4_bec8, align 1
  %v0_becc = load i32, i32* %r2.global-to-local, align 4
  %v1_becc = load i32, i32* %r3.global-to-local, align 4
  %v4_becc = mul i32 %v1_becc, 256
  %v5_becc = or i32 %v4_becc, %v0_becc
  store i32 %v5_becc, i32* %r2.global-to-local, align 4
  %v1_bed0 = trunc i32 %v0_becc to i8
  %v2_bed0 = load i32, i32* @r4, align 4
  %v3_bed0 = add i32 %v2_bed0, 2
  %v4_bed0 = inttoptr i32 %v3_bed0 to i8*
  store i8 %v1_bed0, i8* %v4_bed0, align 1
  %v0_bed4 = load i32, i32* %lr.global-to-local, align 4
  %v2_bed4 = icmp eq i32 %v0_bed4, 0
  store i1 %v2_bed4, i1* %cpsr_z.global-to-local, align 1
  %v0_bed8 = load i32, i32* %r2.global-to-local, align 4
  %v3_bed8 = sdiv i32 %v0_bed8, 256
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  store i32 %v4_bedc, i32* %r2.global-to-local, align 4
  %v1_bee0 = trunc i32 %v3_bed8 to i8
  %v2_bee0 = load i32, i32* @r4, align 4
  %v3_bee0 = add i32 %v2_bee0, 3
  %v4_bee0 = inttoptr i32 %v3_bee0 to i8*
  store i8 %v1_bee0, i8* %v4_bee0, align 1
  %v0_bee4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bee4, label %bb77, label %bb76

bb76:                                             ; preds = %dec_label_pc_bde8
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %dec_label_pc_bde8, %bb76
  %v0_bee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bee8 = trunc i32 %v0_bee8 to i8
  %v2_bee8 = load i32, i32* @r4, align 4
  %v3_bee8 = add i32 %v2_bee8, 8
  %v4_bee8 = inttoptr i32 %v3_bee8 to i8*
  store i8 %v1_bee8, i8* %v4_bee8, align 1
  %v0_beec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_beec, label %.thread6, label %bb78

bb78:                                             ; preds = %bb77
  %v1_beec = load i32, i32* %r3.global-to-local, align 4
  %v2_beec = trunc i32 %v1_beec to i8
  %v3_beec = load i32, i32* @r4, align 4
  %v4_beec = add i32 %v3_beec, 6
  %v5_beec = inttoptr i32 %v4_beec to i8*
  store i8 %v2_beec, i8* %v5_beec, align 1
  %v0_bef0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bef0.pr, label %.thread6, label %bb79

bb79:                                             ; preds = %bb78
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb77, %bb78, %bb79
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_bef8 = load i32, i32* @r4, align 4
  %v3_bef8 = add i32 %v2_bef8, 9
  %v4_bef8 = inttoptr i32 %v3_bef8 to i8*
  store i8 6, i8* %v4_bef8, align 1
  %v0_befc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_befc, label %bb81, label %bb80

bb80:                                             ; preds = %.thread6
  %v1_befc = load i32, i32* %r2.global-to-local, align 4
  %v2_befc = trunc i32 %v1_befc to i8
  %v3_befc = load i32, i32* @r4, align 4
  %v4_befc = add i32 %v3_befc, 7
  %v5_befc = inttoptr i32 %v4_befc to i8*
  store i8 %v2_befc, i8* %v5_befc, align 1
  br label %bb81

bb81:                                             ; preds = %.thread6, %bb80
  %v2_bf04 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_bf04, i32* %r3.global-to-local, align 4
  %v0_bf08 = load i32, i32* %r0.global-to-local, align 4
  %v3_bf08 = sdiv i32 %v0_bf08, 256
  store i32 %v3_bf08, i32* %ip.global-to-local, align 4
  %v1_bf0c = load i32, i32* @r4, align 4
  %v2_bf0c = add i32 %v1_bf0c, 12
  %v3_bf0c = inttoptr i32 %v2_bf0c to i32*
  store i32 %v2_bf04, i32* %v3_bf0c, align 4
  %v0_bf10 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf10 = trunc i32 %v0_bf10 to i8
  %v2_bf10 = load i32, i32* @r4, align 4
  %v3_bf10 = add i32 %v2_bf10, 5
  %v4_bf10 = inttoptr i32 %v3_bf10 to i8*
  store i8 %v1_bf10, i8* %v4_bf10, align 1
  %v3_bf14 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bf14, i32* %r2.global-to-local, align 4
  store i32 %v2_b9b8, i32* %ip.global-to-local, align 4
  %v4_bf1c = mul i32 %v3_bf14, 16
  %v5_bf1c = add i32 %v4_bf1c, %v2_b9b8
  %v6_bf1c = inttoptr i32 %v5_bf1c to i32*
  %v7_bf1c = load i32, i32* %v6_bf1c, align 4
  store i32 %v7_bf1c, i32* %r3.global-to-local, align 4
  %v0_bf20 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf20 = trunc i32 %v0_bf20 to i8
  %v2_bf20 = load i32, i32* @r4, align 4
  %v3_bf20 = add i32 %v2_bf20, 4
  %v4_bf20 = inttoptr i32 %v3_bf20 to i8*
  store i8 %v1_bf20, i8* %v4_bf20, align 1
  %v0_bf24 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf24 = load i32, i32* @r4, align 4
  %v2_bf24 = add i32 %v1_bf24, 16
  %v3_bf24 = inttoptr i32 %v2_bf24 to i32*
  store i32 %v0_bf24, i32* %v3_bf24, align 4
  %v0_bf28 = load i32, i32* %r2.global-to-local, align 4
  %v3_bf28 = mul i32 %v0_bf28, 16
  %v1_bf2c = load i32, i32* %ip.global-to-local, align 4
  %v2_bf2c = add i32 %v1_bf2c, %v3_bf28
  store i32 %v2_bf2c, i32* %r2.global-to-local, align 4
  %v1_bf30 = add i32 %v2_bf2c, 13
  %v2_bf30 = inttoptr i32 %v1_bf30 to i8*
  %v3_bf30 = load i8, i8* %v2_bf30, align 1
  %v4_bf30 = zext i8 %v3_bf30 to i32
  store i32 %v4_bf30, i32* %r1.global-to-local, align 4
  %v1_bf34 = add i32 %v2_bf2c, 12
  %v2_bf34 = inttoptr i32 %v1_bf34 to i8*
  %v3_bf34 = load i8, i8* %v2_bf34, align 1
  %v4_bf34 = zext i8 %v3_bf34 to i32
  %v4_bf38 = mul nuw nsw i32 %v4_bf30, 256
  %v5_bf38 = or i32 %v4_bf34, %v4_bf38
  store i32 %v5_bf38, i32* %r3.global-to-local, align 4
  %v2_bf3c = load i32, i32* @r4, align 4
  %v3_bf3c = add i32 %v2_bf3c, 20
  %v4_bf3c = inttoptr i32 %v3_bf3c to i8*
  store i8 %v3_bf34, i8* %v4_bf3c, align 1
  %v0_bf40 = load i32, i32* @r4, align 4
  %v1_bf40 = add i32 %v0_bf40, 20
  store i32 %v1_bf40, i32* @r6, align 4
  %v0_bf44 = load i32, i32* %r3.global-to-local, align 4
  %v3_bf44 = sdiv i32 %v0_bf44, 256
  store i32 %v3_bf44, i32* %r3.global-to-local, align 4
  %v1_bf48 = trunc i32 %v3_bf44 to i8
  %v3_bf48 = add i32 %v0_bf40, 21
  %v4_bf48 = inttoptr i32 %v3_bf48 to i8*
  store i8 %v1_bf48, i8* %v4_bf48, align 1
  %v0_bf4c = load i32, i32* @r6, align 4
  %v1_bf4c = add i32 %v0_bf4c, 13
  %v2_bf4c = inttoptr i32 %v1_bf4c to i8*
  %v3_bf4c = load i8, i8* %v2_bf4c, align 1
  %v4_bf4c = zext i8 %v3_bf4c to i32
  store i32 %v4_bf4c, i32* %r3.global-to-local, align 4
  %v0_bf50 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf50 = add i32 %v0_bf50, 8
  %v2_bf50 = inttoptr i32 %v1_bf50 to i32*
  %v3_bf50 = load i32, i32* %v2_bf50, align 4
  store i32 %v3_bf50, i32* %r1.global-to-local, align 4
  %v1_bf54 = or i32 %v4_bf4c, 1
  store i32 %v1_bf54, i32* %r3.global-to-local, align 4
  %v1_bf58 = add i32 %v0_bf50, 15
  %v2_bf58 = inttoptr i32 %v1_bf58 to i8*
  %v3_bf58 = load i8, i8* %v2_bf58, align 1
  %v4_bf58 = zext i8 %v3_bf58 to i32
  store i32 %v4_bf58, i32* %ip.global-to-local, align 4
  %v1_bf5c = add i32 %v0_bf50, 14
  %v2_bf5c = inttoptr i32 %v1_bf5c to i8*
  %v3_bf5c = load i8, i8* %v2_bf5c, align 1
  %v4_bf5c = zext i8 %v3_bf5c to i32
  store i32 %v4_bf5c, i32* %r0.global-to-local, align 4
  %v2_bf60 = add i32 %v0_bf4c, 4
  %v3_bf60 = inttoptr i32 %v2_bf60 to i32*
  store i32 %v3_bf50, i32* %v3_bf60, align 4
  %v0_bf64 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf64 = add i32 %v0_bf64, 4
  %v2_bf64 = inttoptr i32 %v1_bf64 to i32*
  %v3_bf64 = load i32, i32* %v2_bf64, align 4
  store i32 %v3_bf64, i32* %lr.global-to-local, align 4
  %v0_bf68 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf68 = trunc i32 %v0_bf68 to i8
  %v2_bf68 = load i32, i32* @r6, align 4
  %v3_bf68 = add i32 %v2_bf68, 13
  %v4_bf68 = inttoptr i32 %v3_bf68 to i8*
  store i8 %v1_bf68, i8* %v4_bf68, align 1
  %v0_bf6c = load i32, i32* @r6, align 4
  %v1_bf6c = add i32 %v0_bf6c, 12
  %v2_bf6c = inttoptr i32 %v1_bf6c to i8*
  %v3_bf6c = load i8, i8* %v2_bf6c, align 1
  %v4_bf6c = zext i8 %v3_bf6c to i32
  store i32 %v4_bf6c, i32* %r2.global-to-local, align 4
  %v1_bf70 = add i32 %v0_bf6c, 13
  %v2_bf70 = inttoptr i32 %v1_bf70 to i8*
  %v3_bf70 = load i8, i8* %v2_bf70, align 1
  %v4_bf70 = zext i8 %v3_bf70 to i32
  %v0_bf74 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf74 = load i32, i32* %ip.global-to-local, align 4
  %v4_bf74 = mul i32 %v1_bf74, 256
  %v5_bf74 = or i32 %v4_bf74, %v0_bf74
  store i32 %v5_bf74, i32* %r0.global-to-local, align 4
  %tmp101 = urem i8 %v3_bf6c, 16
  %v1_bf78 = zext i8 %tmp101 to i32
  %v3_bf7c = sdiv i32 %v5_bf74, 256
  store i32 %v3_bf7c, i32* %r1.global-to-local, align 4
  %v1_bf80 = or i32 %v1_bf78, 128
  store i32 %v1_bf80, i32* %r2.global-to-local, align 4
  %v1_bf84 = or i32 %v4_bf70, 16
  store i32 %v1_bf84, i32* %r3.global-to-local, align 4
  %v1_bf88 = trunc i32 %v3_bf7c to i8
  %v3_bf88 = add i32 %v0_bf6c, 3
  %v4_bf88 = inttoptr i32 %v3_bf88 to i8*
  store i8 %v1_bf88, i8* %v4_bf88, align 1
  %v0_bf8c = load i32, i32* %lr.global-to-local, align 4
  %v1_bf8c = load i32, i32* @r6, align 4
  %v2_bf8c = add i32 %v1_bf8c, 8
  %v3_bf8c = inttoptr i32 %v2_bf8c to i32*
  store i32 %v0_bf8c, i32* %v3_bf8c, align 4
  %v0_bf90 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf90 = trunc i32 %v0_bf90 to i8
  %v2_bf90 = load i32, i32* @r6, align 4
  %v3_bf90 = add i32 %v2_bf90, 12
  %v4_bf90 = inttoptr i32 %v3_bf90 to i8*
  store i8 %v1_bf90, i8* %v4_bf90, align 1
  %v0_bf94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf94 = trunc i32 %v0_bf94 to i8
  %v2_bf94 = load i32, i32* @r6, align 4
  %v3_bf94 = add i32 %v2_bf94, 13
  %v4_bf94 = inttoptr i32 %v3_bf94 to i8*
  store i8 %v1_bf94, i8* %v4_bf94, align 1
  %v0_bf98 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf98 = trunc i32 %v0_bf98 to i8
  %v2_bf98 = load i32, i32* @r6, align 4
  %v3_bf98 = add i32 %v2_bf98, 2
  %v4_bf98 = inttoptr i32 %v3_bf98 to i8*
  store i8 %v1_bf98, i8* %v4_bf98, align 1
  %v0_bf9c = call i32 @function_e82c()
  %v1_bf9c = trunc i32 %v0_bf9c to i8
  store i32 %v0_bf9c, i32* %r0.global-to-local, align 4
  store i32 %v1_ba80, i32* %lr.global-to-local, align 4
  %v0_bfa4 = load i32, i32* @r6, align 4
  %v1_bfa4 = add i32 %v0_bfa4, 13
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  store i32 %v1_bfa8, i32* %r2.global-to-local, align 4
  %v1_bfac = and i32 %v4_bfa4, 223
  %v5_bfb0 = or i32 %v1_bfac, %v4_bfb0
  store i32 %v5_bfb0, i32* %r3.global-to-local, align 4
  %v1_bfb4 = trunc i32 %v5_bfb0 to i8
  store i8 %v1_bfb4, i8* %v2_bfa4, align 1
  store i32 %v1_baa0, i32* %r1.global-to-local, align 4
  %v0_bfbc = load i32, i32* @r6, align 4
  %v1_bfbc = add i32 %v0_bfbc, 13
  %v2_bfbc = inttoptr i32 %v1_bfbc to i8*
  %v3_bfbc = load i8, i8* %v2_bfbc, align 1
  %v4_bfbc = zext i8 %v3_bfbc to i32
  store i32 %v1_bfc0, i32* %r3.global-to-local, align 4
  %v1_bfc4 = and i32 %v4_bfbc, 239
  %v5_bfc8 = or i32 %v1_bfc4, %v4_bfc8
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = trunc i32 %v5_bfc8 to i8
  store i8 %v1_bfcc, i8* %v2_bfbc, align 1
  store i32 %v1_bac0, i32* %ip.global-to-local, align 4
  %v0_bfd4 = load i32, i32* @r6, align 4
  %v1_bfd4 = add i32 %v0_bfd4, 13
  %v2_bfd4 = inttoptr i32 %v1_bfd4 to i8*
  %v3_bfd4 = load i8, i8* %v2_bfd4, align 1
  %v4_bfd4 = zext i8 %v3_bfd4 to i32
  store i32 %v1_bfd8, i32* %r2.global-to-local, align 4
  %v1_bfdc = and i32 %v4_bfd4, 247
  %v5_bfe0 = or i32 %v1_bfdc, %v4_bfe0
  store i32 %v5_bfe0, i32* %r3.global-to-local, align 4
  %v1_bfe4 = trunc i32 %v5_bfe0 to i8
  store i8 %v1_bfe4, i8* %v2_bfd4, align 1
  %v0_bfec = load i32, i32* @r6, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bff0, i32* %r3.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 251
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  store i32 %v1_bb00, i32* %r1.global-to-local, align 4
  %v0_c004 = load i32, i32* @r6, align 4
  %v1_c004 = add i32 %v0_c004, 13
  %v2_c004 = inttoptr i32 %v1_c004 to i8*
  %v3_c004 = load i8, i8* %v2_c004, align 1
  %v4_c004 = zext i8 %v3_c004 to i32
  store i32 %v1_c008, i32* %r2.global-to-local, align 4
  %v1_c00c = and i32 %v4_c004, 253
  %v4_c010 = or i32 %v1_c00c, %v3_c010
  store i32 %v4_c010, i32* %r3.global-to-local, align 4
  %v1_c014 = trunc i32 %v4_c010 to i8
  store i8 %v1_c014, i8* %v2_c004, align 1
  %v0_c018 = load i32, i32* @r6, align 4
  %v1_c018 = add i32 %v0_c018, 13
  %v2_c018 = inttoptr i32 %v1_c018 to i8*
  %v3_c018 = load i8, i8* %v2_c018, align 1
  %v4_c018 = zext i8 %v3_c018 to i32
  %v0_c01c = load i32, i32* @r8, align 4
  %v1_c01c = urem i32 %v0_c01c, 2
  %v1_c020 = and i32 %v4_c018, 254
  store i32 %v1_c020, i32* %r2.global-to-local, align 4
  %v4_c02427 = udiv i32 %v0_bf9c, 256
  %v2_c028 = or i32 %v1_c020, %v1_c01c
  store i32 %v2_c028, i32* %r3.global-to-local, align 4
  %v1_c02c = trunc i32 %v4_c02427 to i8
  %v3_c02c = add i32 %v0_c018, 15
  %v4_c02c = inttoptr i32 %v3_c02c to i8*
  store i8 %v1_c02c, i8* %v4_c02c, align 1
  %v3_c030 = load i32, i32* @r6, align 4
  %v4_c030 = add i32 %v3_c030, 14
  %v5_c030 = inttoptr i32 %v4_c030 to i8*
  store i8 %v1_bf9c, i8* %v5_c030, align 1
  %v0_c034 = load i32, i32* %r3.global-to-local, align 4
  %v1_c034 = trunc i32 %v0_c034 to i8
  %v2_c034 = load i32, i32* @r6, align 4
  %v3_c034 = add i32 %v2_c034, 13
  %v4_c034 = inttoptr i32 %v3_c034 to i8*
  store i8 %v1_c034, i8* %v4_c034, align 1
  %v0_c038 = load i32, i32* @r4, align 4
  %v1_c038 = add i32 %v0_c038, 40
  store i32 %v1_c038, i32* %r0.global-to-local, align 4
  %v0_c03c = load i32, i32* @sb, align 4
  store i32 %v0_c03c, i32* @r1, align 4
  %v1_c040 = inttoptr i32 %v1_c038 to i8*
  %v2_c040 = call i32 @function_e9ac(i8* %v1_c040)
  store i32 %v2_c040, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %dec_label_pc_bbe4, %bb81
  %v3_c044 = load i32, i32* %stack_var_-40, align 4
  %v1_c048 = add i32 %v3_c044, 1
  store i32 %v1_c048, i32* %r3.global-to-local, align 4
  %v1_c04c = load i32, i32* @fp, align 4
  %v9_c04c = icmp eq i32 %v1_c048, %v1_c04c
  store i1 %v9_c04c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c048, i32* %stack_var_-40, align 4
  %v5_c054 = icmp slt i32 %v1_c048, %v1_c04c
  br i1 %v5_c054, label %dec_label_pc_bbd4, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c044, %.thread18
  %v0_c06012 = phi i32 [ %v0_bba8, %.thread18 ], [ %v1_c04c, %dec_label_pc_c044 ]
  %v0_c058 = load i32, i32* @sb, align 4
  %v1_c058 = add i32 %v0_c058, 40
  store i32 %v1_c058, i32* @sl, align 4
  %v1_c05c = add i32 %v0_c058, 20
  store i32 %v1_c05c, i32* @r7, align 4
  %v2_c0ac = icmp eq i32 %v1_bb58, 0
  %v6_c08c = inttoptr i32 %v2_b9c8 to i32*
  %v3_c094 = icmp eq i32 %v3_bbb0, 65535
  br label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c0bc, %dec_label_pc_c058
  %v0_c060 = phi i32 [ %v1_c19c, %dec_label_pc_c0bc ], [ %v0_c06012, %dec_label_pc_c058 ]
  %v2_c060 = icmp eq i32 %v0_c060, 0
  store i1 %v2_c060, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp82 = icmp slt i32 %v0_c060, 1
  br label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c068, %dec_label_pc_c060
  br i1 %tmp82, label %dec_label_pc_c068, label %dec_label_pc_c06c

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c068
  %v0_c06c = load i32, i32* @r7, align 4
  %tmp83 = mul i32 %v0_c06c, 256
  %v1_c074 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v0_c06c, 256
  %v4_c078 = urem i32 %tmp84, 256
  %v5_c078 = or i32 %v4_c078, %v1_c074
  store i32 %v5_c078, i32* @r8, align 4
  store i32 %v2_b9c8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v7_c08c = load i32, i32* %v6_c08c, align 4
  store i32 %v7_c08c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c094, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_c0a0 = add i32 %v7_c08c, 20
  store i32 %v1_c0a0, i32* @r5, align 4
  br i1 %v3_c094, label %dec_label_pc_c1c8, label %dec_label_pc_c0a8

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c06c
  %v0_c0b0 = phi i32 [ %v7_c1b4, %dec_label_pc_c1a8 ], [ %v7_c08c, %dec_label_pc_c06c ]
  store i32 %v1_bb58, i32* %lr.global-to-local, align 4
  store i1 %v2_c0ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c0b0 = add i32 %v0_c0b0, 40
  store i32 %v1_c0b0, i32* %r0.global-to-local, align 4
  %v0_c0b4 = load i32, i32* @sb, align 4
  store i32 %v0_c0b4, i32* @r1, align 4
  br i1 %v2_c0ac, label %dec_label_pc_c0bc, label %dec_label_pc_c1ec

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c0a8, %dec_label_pc_c1c8, %dec_label_pc_c1ec
  %v2_c0bc = phi i32 [ %v0_c0b0, %dec_label_pc_c0a8 ], [ %v0_c1e0, %dec_label_pc_c1c8 ], [ %v2_c0bc.pre, %dec_label_pc_c1ec ]
  %v0_c0bc = load i32, i32* @r6, align 4
  %v1_c0bc = trunc i32 %v0_c0bc to i8
  %v3_c0bc = add i32 %v2_c0bc, 10
  %v4_c0bc = inttoptr i32 %v3_c0bc to i8*
  store i8 %v1_c0bc, i8* %v4_c0bc, align 1
  %v0_c0c0 = load i32, i32* @r6, align 4
  %v1_c0c0 = trunc i32 %v0_c0c0 to i8
  %v2_c0c0 = load i32, i32* @r4, align 4
  %v3_c0c0 = add i32 %v2_c0c0, 11
  %v4_c0c0 = inttoptr i32 %v3_c0c0 to i8*
  store i8 %v1_c0c0, i8* %v4_c0c0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r4, align 4
  store i32 %v0_c0c8, i32* @r0, align 4
  %v2_c0cc = call i32 @function_d0b8(i32 %v0_c0c8, i32 20)
  %v3_c0cc = trunc i32 %v2_c0cc to i8
  store i32 %v2_c0cc, i32* %r0.global-to-local, align 4
  %v3_c0d0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_b9b8, i32* %r2.global-to-local, align 4
  %v3_c0d8 = mul i32 %v3_c0d0, 16
  %v2_c0dc = add i32 %v3_c0d8, %v2_b9b8
  store i32 %v2_c0dc, i32* %r1.global-to-local, align 4
  %v1_c0e0 = add i32 %v2_c0dc, 4
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i32*
  %v3_c0e0 = load i32, i32* %v2_c0e0, align 4
  %v3_c0e4 = mul i32 %v3_c0e0, 65536
  store i32 %v3_c0e4, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_c0e0, 256
  %v1_c0ec = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_c0e0, 256
  %v4_c0f0 = urem i32 %tmp86, 256
  %v5_c0f0 = or i32 %v4_c0f0, %v1_c0ec
  store i32 %v5_c0f0, i32* %r2.global-to-local, align 4
  %v1_c0f4 = add i32 %v3_c0e0, 1
  store i32 %v1_c0f4, i32* %r3.global-to-local, align 4
  store i32 %v1_c0f4, i32* %v2_c0e0, align 4
  %v0_c0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_c0fc = load i32, i32* @r5, align 4
  %v2_c0fc = add i32 %v1_c0fc, 4
  %v3_c0fc = inttoptr i32 %v2_c0fc to i32*
  store i32 %v0_c0fc, i32* %v3_c0fc, align 4
  %v0_c100 = load i32, i32* %r1.global-to-local, align 4
  %v1_c100 = add i32 %v0_c100, 8
  %v2_c100 = inttoptr i32 %v1_c100 to i32*
  %v3_c100 = load i32, i32* %v2_c100, align 4
  %tmp87 = mul i32 %v3_c100, 256
  %v1_c10c = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_c100, 256
  %v4_c110 = urem i32 %tmp88, 256
  %v5_c110 = or i32 %v4_c110, %v1_c10c
  store i32 %v5_c110, i32* %r2.global-to-local, align 4
  %v4_c11428 = udiv i32 %v2_c0cc, 256
  %v1_c118 = trunc i32 %v4_c11428 to i8
  %v2_c118 = load i32, i32* @r4, align 4
  %v3_c118 = add i32 %v2_c118, 11
  %v4_c118 = inttoptr i32 %v3_c118 to i8*
  store i8 %v1_c118, i8* %v4_c118, align 1
  %v3_c11c = load i32, i32* @r4, align 4
  %v4_c11c = add i32 %v3_c11c, 10
  %v5_c11c = inttoptr i32 %v4_c11c to i8*
  store i8 %v3_c0cc, i8* %v5_c11c, align 1
  %v0_c120 = load i32, i32* %r2.global-to-local, align 4
  %v1_c120 = load i32, i32* @r5, align 4
  %v2_c120 = add i32 %v1_c120, 8
  %v3_c120 = inttoptr i32 %v2_c120 to i32*
  store i32 %v0_c120, i32* %v3_c120, align 4
  %v0_c124 = load i32, i32* @r5, align 4
  store i32 %v0_c124, i32* @r1, align 4
  %v0_c128 = load i32, i32* @r8, align 4
  store i32 %v0_c128, i32* %r2.global-to-local, align 4
  %v0_c12c = load i32, i32* @r7, align 4
  store i32 %v0_c12c, i32* %r3.global-to-local, align 4
  %v0_c130 = load i32, i32* @r4, align 4
  store i32 %v0_c130, i32* %r0.global-to-local, align 4
  %v0_c134 = load i32, i32* @r6, align 4
  %v1_c134 = trunc i32 %v0_c134 to i8
  %v3_c134 = add i32 %v0_c124, 16
  %v4_c134 = inttoptr i32 %v3_c134 to i8*
  store i8 %v1_c134, i8* %v4_c134, align 1
  %v0_c138 = load i32, i32* @r6, align 4
  %v1_c138 = trunc i32 %v0_c138 to i8
  %v2_c138 = load i32, i32* @r5, align 4
  %v3_c138 = add i32 %v2_c138, 17
  %v4_c138 = inttoptr i32 %v3_c138 to i8*
  store i8 %v1_c138, i8* %v4_c138, align 1
  %v4_c13c = call i32 @function_d114(i32 %v0_c130, i32 %v0_c124, i32 %v0_c128, i32 %v0_c12c)
  %v5_c13c = trunc i32 %v4_c13c to i8
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v4_c14029 = udiv i32 %v4_c13c, 256
  %v1_c144 = trunc i32 %v4_c14029 to i8
  %v2_c144 = load i32, i32* @r5, align 4
  %v3_c144 = add i32 %v2_c144, 17
  %v4_c144 = inttoptr i32 %v3_c144 to i8*
  store i8 %v1_c144, i8* %v4_c144, align 1
  %v3_c148 = load i32, i32* @r5, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i8*
  store i8 %v5_c13c, i8* %v5_c148, align 1
  %v3_c14c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c14c, i32* %r3.global-to-local, align 4
  %v0_c150 = load i32, i32* @r4, align 4
  %v1_c150 = add i32 %v0_c150, 20
  %v2_c150 = inttoptr i32 %v1_c150 to i32*
  %v3_c150 = load i32, i32* %v2_c150, align 4
  %v5_c158 = mul i32 %v3_c14c, 24
  %v3_c160 = udiv i32 %v3_c150, 65536
  store i32 %v3_c160, i32* %r2.global-to-local, align 4
  %v2_c164 = add i32 %v5_c158, %arg2
  store i32 %v2_c164, i32* %ip.global-to-local, align 4
  %v3_c1684 = udiv i32 %v3_c150, 16777216
  %v1_c16c = trunc i32 %v3_c1684 to i8
  %v3_c16c = add i32 %v2_c164, 3
  %v4_c16c = inttoptr i32 %v3_c16c to i8*
  store i8 %v1_c16c, i8* %v4_c16c, align 1
  %v0_c170 = load i32, i32* %r2.global-to-local, align 4
  %v1_c170 = trunc i32 %v0_c170 to i8
  %v2_c170 = load i32, i32* %ip.global-to-local, align 4
  %v3_c170 = add i32 %v2_c170, 2
  %v4_c170 = inttoptr i32 %v3_c170 to i8*
  store i8 %v1_c170, i8* %v4_c170, align 1
  %v0_c174 = load i32, i32* @r4, align 4
  store i32 %v0_c174, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb68, i32* %r0.global-to-local, align 4
  %v0_c180 = load i32, i32* @sl, align 4
  store i32 %v0_c180, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c188 = load i32, i32* %ip.global-to-local, align 4
  %v6_c190 = inttoptr i32 %v0_c174 to i32*
  %v7_c190 = call i32 @function_1349c(i32 %v3_bb68, i32* %v6_c190, i32 %v0_c180, i32 16384, i32 %v0_c188, i32 16)
  %v3_c194 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c194, i32* %r3.global-to-local, align 4
  %v1_c198 = add i32 %v3_c194, 1
  store i32 %v1_c198, i32* %r0.global-to-local, align 4
  %v1_c19c = load i32, i32* @fp, align 4
  %v9_c19c = icmp eq i32 %v1_c198, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c198, i32* %stack_var_-40, align 4
  %v6_c1a4 = icmp slt i32 %v1_c198, %v1_c19c
  br i1 %v6_c1a4, label %dec_label_pc_c1a8, label %dec_label_pc_c060

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c0bc
  store i32 %v2_b9c8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_bbb0, i32* %ip.global-to-local, align 4
  %v4_c1b4 = mul i32 %v1_c198, 4
  %v5_c1b4 = add i32 %v4_c1b4, %v2_b9c8
  %v6_c1b4 = inttoptr i32 %v5_c1b4 to i32*
  %v7_c1b4 = load i32, i32* %v6_c1b4, align 4
  store i32 %v7_c1b4, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c094, i1* %cpsr_z.global-to-local, align 1
  %v1_c1c0 = add i32 %v7_c1b4, 20
  store i32 %v1_c1c0, i32* @r5, align 4
  br i1 %v3_c094, label %dec_label_pc_c1c8, label %dec_label_pc_c0a8

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c06c
  %v0_c1c8 = call i32 @function_e82c()
  %v1_c1c8 = trunc i32 %v0_c1c8 to i8
  store i32 %v1_bb58, i32* %lr.global-to-local, align 4
  %v4_c1d0 = sdiv i32 %v0_c1c8, 256
  store i32 %v4_c1d0, i32* %r3.global-to-local, align 4
  store i1 %v2_c0ac, i1* %cpsr_z.global-to-local, align 1
  %v3_c1d8 = load i32, i32* @r4, align 4
  %v4_c1d8 = add i32 %v3_c1d8, 4
  %v5_c1d8 = inttoptr i32 %v4_c1d8 to i8*
  store i8 %v1_c1c8, i8* %v5_c1d8, align 1
  %v0_c1dc = load i32, i32* %r3.global-to-local, align 4
  %v1_c1dc = trunc i32 %v0_c1dc to i8
  %v2_c1dc = load i32, i32* @r4, align 4
  %v3_c1dc = add i32 %v2_c1dc, 5
  %v4_c1dc = inttoptr i32 %v3_c1dc to i8*
  store i8 %v1_c1dc, i8* %v4_c1dc, align 1
  %v0_c1e0 = load i32, i32* @r4, align 4
  %v1_c1e0 = add i32 %v0_c1e0, 40
  store i32 %v1_c1e0, i32* %r0.global-to-local, align 4
  %v0_c1e4 = load i32, i32* @sb, align 4
  store i32 %v0_c1e4, i32* @r1, align 4
  %v0_c1e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c1e8, label %dec_label_pc_c0bc, label %dec_label_pc_c1ec

dec_label_pc_c1ec:                                ; preds = %dec_label_pc_c0a8, %dec_label_pc_c1c8
  %v0_c1ec = phi i32 [ %v1_c0b0, %dec_label_pc_c0a8 ], [ %v1_c1e0, %dec_label_pc_c1c8 ]
  %v1_c1ec = inttoptr i32 %v0_c1ec to i8*
  %v2_c1ec = call i32 @function_e9ac(i8* %v1_c1ec)
  store i32 %v2_c1ec, i32* %r0.global-to-local, align 4
  %v2_c0bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0bc

; uselistorder directives
  uselistorder i32 %v0_c1e0, { 1, 0 }
  uselistorder i32 %v7_c1b4, { 1, 2, 0 }
  uselistorder i32 %v1_c19c, { 1, 2, 0 }
  uselistorder i32 %v1_c198, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_c13c, { 0, 2, 1 }
  uselistorder i32 %v0_c124, { 1, 0, 2 }
  uselistorder i32 %v3_c100, { 1, 0 }
  uselistorder i32 %v3_c0e0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_c0cc, { 0, 2, 1 }
  uselistorder i32 %v0_c0b0, { 1, 0 }
  uselistorder i32 %v0_c06c, { 1, 0 }
  uselistorder i32 %v0_c060, { 1, 0 }
  uselistorder i1 %v3_c094, { 2, 3, 1, 0 }
  uselistorder i32 %v1_c048, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bf9c, { 0, 2, 1 }
  uselistorder i32 %v3_bf7c, { 1, 0 }
  uselistorder i32 %v0_bf50, { 1, 0, 2 }
  uselistorder i32 %v3_bf44, { 1, 0 }
  uselistorder i32 %v3_bed8, { 1, 0 }
  uselistorder i32 %v0_becc, { 1, 0 }
  uselistorder i32 %v3_be54, { 1, 0 }
  uselistorder i32 %v2_be40, { 1, 0 }
  uselistorder i32 %v3_be24, { 1, 0, 2, 3 }
  uselistorder i32 %v2_be1c, { 1, 0 }
  uselistorder i32 %v3_bdf8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bdf0, { 1, 0 }
  uselistorder i32 %v4_bdd8, { 1, 0 }
  uselistorder i32 %v0_bdd4, { 0, 2, 1 }
  uselistorder i1 %v7_bd44, { 1, 0 }
  uselistorder i32 %v7_bd3c, { 0, 2, 1, 3 }
  uselistorder i32 %v5_bd88, { 1, 0 }
  uselistorder i1 %v9_bd6c, { 1, 0 }
  uselistorder i32 %v4_bd80, { 1, 0 }
  uselistorder i32 %v4_bd7c, { 1, 0 }
  uselistorder i32 %v8_bc90, { 1, 2, 0, 3 }
  uselistorder i32 %v3_bc7c, { 1, 0 }
  uselistorder i32 %v0_bc6c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_bbf4, { 1, 0 }
  uselistorder i32 %v3_bbf0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c008, { 1, 0 }
  uselistorder i32 %v1_bff0, { 1, 0 }
  uselistorder i32 %v1_bfd8, { 1, 0 }
  uselistorder i32 %v1_bfc0, { 1, 0 }
  uselistorder i32 %v1_bfa8, { 1, 0 }
  uselistorder i32 %v5_bd84, { 1, 0 }
  uselistorder i32 %v3_bcd893, { 1, 0 }
  uselistorder i1 %v2_bd9c, { 1, 0 }
  uselistorder i32 %v1_bd98, { 1, 0 }
  uselistorder i32 %v4_bd94, { 2, 0, 1 }
  uselistorder i32 %v4_bd78, { 1, 0 }
  uselistorder i1 %v3_bcc0, { 1, 0 }
  uselistorder i32 %v8_bbbc, { 2, 1, 0 }
  uselistorder i32 %v8_bbb8, { 1, 2, 0 }
  uselistorder i32 %v3_bbb0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_bbac, { 0, 1, 3, 2 }
  uselistorder i1 %v7_bba0, { 1, 0 }
  uselistorder i1 %v7_bb70, { 1, 0 }
  uselistorder i32 %v3_bb6c, { 2, 0, 1 }
  uselistorder i32 %v3_bb68, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_bb58, { 1, 3, 2, 0 }
  uselistorder i32 %v1_bb00, { 1, 0 }
  uselistorder i32 %v1_bac0, { 1, 0 }
  uselistorder i32 %v1_baa0, { 1, 0 }
  uselistorder i32 %v1_ba80, { 1, 0 }
  uselistorder i32 %v1_ba48, { 1, 0 }
  uselistorder i32 %v2_b9c8, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_b9b8, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_b99c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r2.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 41, 42, 43, 44, 45, 46, 47, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 37, 36, 38, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 53, 52, 54, 55, 57, 56, 61, 58, 59, 62, 60, 8, 1, 2, 3, 4, 5, 6, 7, 12, 9, 10, 11, 13, 15, 14, 17, 16, 20, 18, 21, 22, 19, 23, 25, 24, 26, 27, 29, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %lr.global-to-local, { 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %ip.global-to-local, { 31, 32, 33, 34, 35, 36, 37, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i1* %cpsr_z.global-to-local, { 19, 20, 21, 22, 23, 24, 25, 26, 0, 3, 1, 2, 4, 5, 6, 7, 9, 18, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_c1ec, { 1, 0 }
  uselistorder label %dec_label_pc_c0bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c044, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %.thread6, { 2, 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %dec_label_pc_bdcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bd04, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_bcb4, { 1, 0 }
}

define i32 @function_c1f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c1f8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_c1fc = urem i32 %arg1, 256
  store i32 %v1_c1fc, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c214 = urem i32 %arg3, 256
  store i32 %v1_c214, i32* @r4, align 4
  %v2_c218 = call i32 @function_137ec(i32 %v1_c1fc, i32 4)
  %v0_c21c = load i32, i32* @r5, align 4
  store i32 %v0_c21c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c22c = load i32, i32* @r4, align 4
  %v5_c230 = inttoptr i32 %v0_c21c to i32*
  %v6_c230 = call i32 @function_85e0(i32 %v0_c22c, i32* %v5_c230, i32 2, i32 0)
  %v1_c23c = urem i32 %v6_c230, 256
  store i32 %v1_c23c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c248 = load i32, i32* @r5, align 4
  store i32 %v0_c248, i32* %r1.global-to-local, align 4
  %v0_c24c = load i32, i32* @r4, align 4
  %v5_c250 = trunc i32 %v6_c230 to i8
  %v6_c254 = inttoptr i32 %v0_c248 to i32*
  %v7_c254 = call i32 @function_85e0(i32 %v0_c24c, i32* %v6_c254, i32 3, i32 65535)
  %v0_c258 = load i32, i32* @r5, align 4
  store i32 %v0_c258, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_c254, i32* @r8, align 4
  %v0_c268 = load i32, i32* @r4, align 4
  %v4_c26c = inttoptr i32 %v0_c258 to i32*
  %v5_c26c = call i32 @function_85e0(i32 %v0_c268, i32* %v4_c26c, i32 4, i32 64)
  %v1_c274 = urem i32 %v5_c26c, 256
  store i32 %v1_c274, i32* %ip.global-to-local, align 4
  %v0_c278 = load i32, i32* @r5, align 4
  store i32 %v0_c278, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c284 = load i32, i32* @r4, align 4
  %v6_c28c = inttoptr i32 %v0_c278 to i32*
  %v7_c28c = call i32 @function_85e0(i32 %v0_c284, i32* %v6_c28c, i32 5, i32 0)
  %v1_c298 = urem i32 %v7_c28c, 256
  store i32 %v1_c298, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c2a4 = load i32, i32* @r5, align 4
  store i32 %v0_c2a4, i32* %r1.global-to-local, align 4
  %v0_c2a8 = load i32, i32* @r4, align 4
  %v5_c2b0 = inttoptr i32 %v0_c2a4 to i32*
  %v6_c2b0 = call i32 @function_85e0(i32 %v0_c2a8, i32* %v5_c2b0, i32 6, i32 65535)
  %v0_c2b8 = load i32, i32* @r5, align 4
  store i32 %v0_c2b8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c2b0, i32* @r7, align 4
  %v0_c2c8 = load i32, i32* @r4, align 4
  %v4_c2cc = inttoptr i32 %v0_c2b8 to i32*
  %v5_c2cc = call i32 @function_85e0(i32 %v0_c2c8, i32* %v4_c2cc, i32 7, i32 65535)
  %v0_c2d4 = load i32, i32* @r5, align 4
  store i32 %v0_c2d4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c2cc, i32* @r6, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2d4 to i32*
  %v5_c2e8 = call i32 @function_85e0(i32 %v0_c2e4, i32* %v4_c2e8, i32 17, i32 65535)
  %v0_c2f4 = load i32, i32* @r5, align 4
  store i32 %v0_c2f4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_c300 = load i32, i32* @r4, align 4
  %v5_c304 = inttoptr i32 %v0_c2f4 to i32*
  %v6_c304 = call i32 @function_85e0(i32 %v0_c300, i32* %v5_c304, i32 18, i32 65535)
  %v0_c308 = load i32, i32* @r5, align 4
  store i32 %v0_c308, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c318 = load i32, i32* @r4, align 4
  %v5_c31c = inttoptr i32 %v0_c308 to i32*
  %v6_c31c = call i32 @function_85e0(i32 %v0_c318, i32* %v5_c31c, i32 11, i32 0)
  %v0_c320 = load i32, i32* @r5, align 4
  store i32 %v0_c320, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c330 = load i32, i32* @r4, align 4
  %v5_c334 = inttoptr i32 %v0_c320 to i32*
  %v6_c334 = call i32 @function_85e0(i32 %v0_c330, i32* %v5_c334, i32 12, i32 1)
  %v0_c338 = load i32, i32* @r5, align 4
  store i32 %v0_c338, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c348 = load i32, i32* @r4, align 4
  %v5_c34c = inttoptr i32 %v0_c338 to i32*
  %v6_c34c = call i32 @function_85e0(i32 %v0_c348, i32* %v5_c34c, i32 13, i32 0)
  %v0_c350 = load i32, i32* @r5, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r4, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @function_85e0(i32 %v0_c360, i32* %v5_c364, i32 14, i32 0)
  %v0_c368 = load i32, i32* @r5, align 4
  store i32 %v0_c368, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c378 = load i32, i32* @r4, align 4
  %v5_c37c = inttoptr i32 %v0_c368 to i32*
  %v6_c37c = call i32 @function_85e0(i32 %v0_c378, i32* %v5_c37c, i32 15, i32 0)
  %v0_c380 = load i32, i32* @r5, align 4
  store i32 %v0_c380, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c390 = load i32, i32* @r4, align 4
  %v5_c394 = inttoptr i32 %v0_c380 to i32*
  %v6_c394 = call i32 @function_85e0(i32 %v0_c390, i32* %v5_c394, i32 16, i32 0)
  %v0_c398 = load i32, i32* @r5, align 4
  store i32 %v0_c398, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_c3a8 = load i32, i32* @r4, align 4
  %v5_c3ac = inttoptr i32 %v0_c398 to i32*
  %v6_c3ac = call i32 @function_85e0(i32 %v0_c3a8, i32* %v5_c3ac, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c3bc = load i32, i32* @r5, align 4
  store i32 %v0_c3bc, i32* %r1.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r4, align 4
  %v4_c3c4 = inttoptr i32 %v0_c3bc to i32*
  %v5_c3c4 = call i32 @function_85e0(i32 %v0_c3c0, i32* %v4_c3c4, i32 1, i32 1)
  %v2_c3d0 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_c3d0, i32* %r3.global-to-local, align 4
  %v1_c3d4 = urem i32 %v5_c3c4, 256
  store i32 %v1_c3d4, i32* %ip.global-to-local, align 4
  %v0_c3d8 = load i32, i32* @r5, align 4
  store i32 %v0_c3d8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c3e0 = load i32, i32* @r4, align 4
  %v5_c3e8 = inttoptr i32 %v0_c3d8 to i32*
  %v6_c3e8 = call i32 @function_8574(i32 %v0_c3e0, i32* %v5_c3e8, i32 25, i32 %v2_c3d0, i32 %v1_c3d4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c3fc = call i32 @function_13500(i32 2, i32 3, i32 6)
  %v7_c400 = icmp eq i32 %v3_c3fc, -1
  store i1 %v7_c400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c400, label %dec_label_pc_c838, label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c1f8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c414 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c414, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_c428 = call i32 @function_134d0(i32 %v3_c3fc, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v7_c42c = icmp eq i32 %v6_c428, -1
  store i1 %v7_c42c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c42c, label %dec_label_pc_c830, label %dec_label_pc_c434

dec_label_pc_c434:                                ; preds = %dec_label_pc_c40c
  %v0_c434 = load i32, i32* @r8, align 4
  %v0_c438 = load i32, i32* @r7, align 4
  %v0_c43c = load i32, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c444 = urem i32 %v0_c434, 65536
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  %v3_c448 = urem i32 %v0_c438, 65536
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v3_c44c = urem i32 %v0_c43c, 65536
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v0_c450 = load i32, i32* @fp, align 4
  %v2_c450 = icmp eq i32 %v0_c450, 0
  store i1 %v2_c450, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp75 = icmp slt i32 %v0_c450, 1
  br i1 %tmp75, label %dec_label_pc_c950, label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c434
  %v1_c470 = add i32 %v6_c3ac, 40
  %tmp76 = mul i32 %v1_c470, 256
  %v1_c484 = urem i32 %v0_c438, 256
  %v1_c488 = and i32 %tmp76, 65280
  %v3_c48c = mul nuw nsw i32 %v1_c484, 256
  %v1_c494 = urem i32 %v0_c43c, 256
  %tmp77 = udiv i32 %v0_c43c, 256
  %v3_c498 = urem i32 %tmp77, 256
  %tmp78 = udiv i32 %v1_c470, 256
  %v4_c49c = urem i32 %tmp78, 256
  %v5_c49c = or i32 %v4_c49c, %v1_c488
  store i32 %v5_c49c, i32* @lr, align 4
  %tmp79 = udiv i32 %v0_c438, 256
  %v4_c4a0 = urem i32 %tmp79, 256
  %v5_c4a0 = or i32 %v4_c4a0, %v3_c48c
  store i32 %v5_c4a0, i32* @sl, align 4
  %v4_c4a4 = mul nuw nsw i32 %v1_c494, 256
  %v5_c4a4 = or i32 %v4_c4a4, %v3_c498
  store i32 %v5_c4a4, i32* @r6, align 4
  %tmp80 = udiv i32 %v0_c434, 256
  %v3_c4b4 = urem i32 %tmp80, 256
  %v1_c4b8 = urem i32 %v0_c434, 256
  %tmp81 = mul i32 %v5_c2e8, 256
  %v1_c4c0 = and i32 %tmp81, 65280
  %v1_c4c4 = urem i32 %v6_c31c, 2
  %v1_c4c8 = urem i32 %v6_c334, 2
  %v1_c4cc = urem i32 %v6_c34c, 2
  %tmp82 = udiv i32 %v5_c2e8, 256
  %v4_c4d0 = urem i32 %tmp82, 256
  %v5_c4d0 = or i32 %v4_c4d0, %v1_c4c0
  store i32 %v5_c4d0, i32* @r8, align 4
  %v1_c4f0 = urem i32 %v6_c364, 2
  %v1_c4f4 = urem i32 %v6_c37c, 2
  %v1_c4f8 = urem i32 %v6_c394, 2
  %v1_c4fc = urem i32 %v6_c34c, 256
  %v4_c500 = mul nuw nsw i32 %v1_c4b8, 256
  %v5_c500 = or i32 %v4_c500, %v3_c4b4
  store i32 %v5_c500, i32* @r5, align 4
  %v3_c51425 = udiv i32 %v1_c488, 256
  store i32 %v3_c51425, i32* %r3.global-to-local, align 4
  store i32 %v1_c4b8, i32* %ip.global-to-local, align 4
  store i32 %v1_c484, i32* %r1.global-to-local, align 4
  store i32 %v1_c494, i32* %r2.global-to-local, align 4
  %v5_c530 = trunc i32 %v0_c438 to i8
  store i32 0, i32* @r4, align 4
  %sext8 = mul i32 %v5_c26c, 16777216
  %v4_c58c = sdiv i32 %sext8, 16777216
  %sext9 = mul i32 %v0_c434, 16777216
  %v4_c598 = sdiv i32 %sext9, 16777216
  %sext10 = mul i32 %tmp78, 16777216
  %v4_c5ac = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %v1_c470, 16777216
  %v4_c5b0 = sdiv i32 %sext11, 16777216
  %tmp = sub nsw i32 0, %v1_c4c4
  %v4_c600 = and i32 %tmp, 32
  %tmp93 = sub nsw i32 0, %v1_c4c8
  %v4_c614 = and i32 %tmp93, 16
  %tmp94 = sub nsw i32 0, %v1_c4cc
  %v4_c628 = and i32 %tmp94, 8
  %tmp95 = sub nsw i32 0, %v1_c4f0
  %v4_c63c = and i32 %tmp95, 4
  %tmp96 = sub nsw i32 0, %v1_c4f4
  %v3_c650 = and i32 %tmp96, 2
  %sext12 = mul i32 %v0_c43c, 16777216
  %v7_c680 = sdiv i32 %sext12, 16777216
  %v1_c594 = trunc i32 %v4_c58c to i8
  %extract.t = trunc i32 %v4_c598 to i8
  %v3_c680 = sext i8 %v5_c530 to i32
  %v2_c6a4 = icmp eq i32 %v1_c4fc, 0
  br label %dec_label_pc_c53c

dec_label_pc_c53c:                                ; preds = %bb89, %dec_label_pc_c468
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c548 = call i32 @function_137ec(i32 1510, i32 1)
  store i32 %v2_c218, i32* %ip.global-to-local, align 4
  %v2_c554 = load i32, i32* @r4, align 4
  %v5_c554 = mul i32 %v2_c554, 4
  %v6_c554 = add i32 %v5_c554, %v2_c218
  %v7_c554 = inttoptr i32 %v6_c554 to i32*
  store i32 %v2_c548, i32* %v7_c554, align 4
  %v3_c558 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c558, i32* %r3.global-to-local, align 4
  %v0_c55c = load i32, i32* %ip.global-to-local, align 4
  %v4_c55c = mul i32 %v3_c558, 4
  %v5_c55c = add i32 %v0_c55c, %v4_c55c
  %v6_c55c = inttoptr i32 %v5_c55c to i32*
  %v7_c55c = load i32, i32* %v6_c55c, align 4
  store i32 %v7_c55c, i32* @r7, align 4
  %v1_c560 = inttoptr i32 %v7_c55c to i8*
  %v2_c560 = load i8, i8* %v1_c560, align 1
  %tmp97 = urem i8 %v2_c560, 16
  %v1_c564 = zext i8 %tmp97 to i32
  %v1_c568 = or i32 %v1_c564, 64
  store i32 %v1_c568, i32* %r2.global-to-local, align 4
  %v1_c56c = trunc i32 %v1_c568 to i8
  store i8 %v1_c56c, i8* %v1_c560, align 1
  %v0_c570 = load i32, i32* @r7, align 4
  %v1_c570 = inttoptr i32 %v0_c570 to i8*
  %v2_c570 = load i8, i8* %v1_c570, align 1
  %v1_c574 = and i8 %v2_c570, -16
  %v1_c578 = or i8 %v1_c574, 5
  store i32 %v1_c298, i32* %r1.global-to-local, align 4
  store i8 %v1_c578, i8* %v1_c570, align 1
  %v2_c588 = load i32, i32* @r7, align 4
  %v3_c588 = add i32 %v2_c588, 1
  %v4_c588 = inttoptr i32 %v3_c588 to i8*
  store i8 %v5_c250, i8* %v4_c588, align 1
  store i32 %v4_c58c, i32* %r3.global-to-local, align 4
  %v0_c590 = load i32, i32* %r1.global-to-local, align 4
  %v2_c590 = icmp eq i32 %v0_c590, 0
  store i1 %v2_c590, i1* %cpsr_z.global-to-local, align 1
  %v2_c594 = load i32, i32* @r7, align 4
  %v3_c594 = add i32 %v2_c594, 8
  %v4_c594 = inttoptr i32 %v3_c594 to i8*
  store i8 %v1_c594, i8* %v4_c594, align 1
  store i32 %v4_c598, i32* %r2.global-to-local, align 4
  %v0_c59c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c59c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c53c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c5a0 = load i32, i32* @r7, align 4
  %v4_c5a0 = add i32 %v3_c5a0, 6
  %v5_c5a0 = inttoptr i32 %v4_c5a0 to i8*
  store i8 64, i8* %v5_c5a0, align 1
  %v0_c5a8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t26 = trunc i32 %v0_c5a8.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c53c, %bb
  %v0_c5a8.off0 = phi i8 [ %extract.t, %dec_label_pc_c53c ], [ %extract.t26, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_c5a8 = load i32, i32* @r7, align 4
  %v3_c5a8 = add i32 %v2_c5a8, 5
  %v4_c5a8 = inttoptr i32 %v3_c5a8 to i8*
  store i8 %v0_c5a8.off0, i8* %v4_c5a8, align 1
  store i32 %v4_c5ac, i32* %ip.global-to-local, align 4
  store i32 %v4_c5b0, i32* %r1.global-to-local, align 4
  %v0_c5b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5b4, label %bb84, label %bb83

bb83:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %.thread, %bb83
  %v0_c5b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5b8 = trunc i32 %v0_c5b8 to i8
  %v2_c5b8 = load i32, i32* @r7, align 4
  %v3_c5b8 = add i32 %v2_c5b8, 9
  %v4_c5b8 = inttoptr i32 %v3_c5b8 to i8*
  store i8 %v1_c5b8, i8* %v4_c5b8, align 1
  %v0_c5bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5bc, label %bb86, label %bb85

bb85:                                             ; preds = %bb84
  %v1_c5bc = load i32, i32* %r2.global-to-local, align 4
  %v2_c5bc = trunc i32 %v1_c5bc to i8
  %v3_c5bc = load i32, i32* @r7, align 4
  %v4_c5bc = add i32 %v3_c5bc, 7
  %v5_c5bc = inttoptr i32 %v4_c5bc to i8*
  store i8 %v2_c5bc, i8* %v5_c5bc, align 1
  br label %bb86

bb86:                                             ; preds = %bb84, %bb85
  %v3_c5c0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c5c0, i32* %r2.global-to-local, align 4
  %v0_c5c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c5c4 = trunc i32 %v0_c5c4 to i8
  %v2_c5c4 = load i32, i32* @r7, align 4
  %v3_c5c4 = add i32 %v2_c5c4, 2
  %v4_c5c4 = inttoptr i32 %v3_c5c4 to i8*
  store i8 %v1_c5c4, i8* %v4_c5c4, align 1
  store i32 %v6_c3e8, i32* %ip.global-to-local, align 4
  %v0_c5cc = load i32, i32* %r2.global-to-local, align 4
  %v3_c5cc = mul i32 %v0_c5cc, 32
  store i32 %v3_c5cc, i32* %r3.global-to-local, align 4
  %v1_c5d0 = load i32, i32* @r7, align 4
  %v2_c5d0 = add i32 %v1_c5d0, 12
  %v3_c5d0 = inttoptr i32 %v2_c5d0 to i32*
  store i32 %v6_c3e8, i32* %v3_c5d0, align 4
  %v0_c5d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5d4 = load i32, i32* %r2.global-to-local, align 4
  %tmp98 = mul i32 %v1_c5d4, -8
  %v5_c5d4 = add i32 %v0_c5d4, %tmp98
  %v1_c5d8 = load i32, i32* @sb, align 4
  %v2_c5d8 = add i32 %v1_c5d8, %v5_c5d4
  store i32 %v2_c5d8, i32* %r3.global-to-local, align 4
  %v1_c5dc = add i32 %v2_c5d8, 16
  %v2_c5dc = inttoptr i32 %v1_c5dc to i32*
  %v3_c5dc = load i32, i32* %v2_c5dc, align 4
  store i32 %v3_c5dc, i32* %r2.global-to-local, align 4
  %v0_c5e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5e0 = trunc i32 %v0_c5e0 to i8
  %v2_c5e0 = load i32, i32* @r7, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 3
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v1_c5e0, i8* %v4_c5e0, align 1
  %v0_c5e4 = load i32, i32* @r5, align 4
  %v1_c5e4 = trunc i32 %v0_c5e4 to i8
  %v2_c5e4 = load i32, i32* @r7, align 4
  %v3_c5e4 = add i32 %v2_c5e4, 4
  %v4_c5e4 = inttoptr i32 %v3_c5e4 to i8*
  store i8 %v1_c5e4, i8* %v4_c5e4, align 1
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c5e8 = load i32, i32* @r7, align 4
  %v2_c5e8 = add i32 %v1_c5e8, 16
  %v3_c5e8 = inttoptr i32 %v2_c5e8 to i32*
  store i32 %v0_c5e8, i32* %v3_c5e8, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v1_c5ec = trunc i32 %v0_c5ec to i8
  %v2_c5ec = load i32, i32* @r7, align 4
  %v3_c5ec = add i32 %v2_c5ec, 20
  %v4_c5ec = inttoptr i32 %v3_c5ec to i8*
  store i8 %v1_c5ec, i8* %v4_c5ec, align 1
  %v0_c5f0 = load i32, i32* @r7, align 4
  %v1_c5f0 = add i32 %v0_c5f0, 20
  store i32 %v1_c5f0, i32* @r4, align 4
  %v1_c5f4 = add i32 %v0_c5f0, 33
  %v2_c5f4 = inttoptr i32 %v1_c5f4 to i8*
  %v3_c5f4 = load i8, i8* %v2_c5f4, align 1
  %v4_c5f4 = zext i8 %v3_c5f4 to i32
  store i32 %v1_c4c4, i32* %r1.global-to-local, align 4
  %v1_c5fc = and i32 %v4_c5f4, 223
  %v5_c600 = or i32 %v1_c5fc, %v4_c600
  store i32 %v5_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v5_c600 to i8
  store i8 %v1_c604, i8* %v2_c5f4, align 1
  %v0_c608 = load i32, i32* @r4, align 4
  %v1_c608 = add i32 %v0_c608, 13
  %v2_c608 = inttoptr i32 %v1_c608 to i8*
  %v3_c608 = load i8, i8* %v2_c608, align 1
  %v4_c608 = zext i8 %v3_c608 to i32
  store i32 %v1_c4c8, i32* %r3.global-to-local, align 4
  %v1_c610 = and i32 %v4_c608, 239
  %v5_c614 = or i32 %v1_c610, %v4_c614
  store i32 %v5_c614, i32* %r2.global-to-local, align 4
  %v1_c618 = trunc i32 %v5_c614 to i8
  store i8 %v1_c618, i8* %v2_c608, align 1
  %v0_c61c = load i32, i32* @r4, align 4
  %v1_c61c = add i32 %v0_c61c, 13
  %v2_c61c = inttoptr i32 %v1_c61c to i8*
  %v3_c61c = load i8, i8* %v2_c61c, align 1
  %v4_c61c = zext i8 %v3_c61c to i32
  store i32 %v1_c4cc, i32* %ip.global-to-local, align 4
  %v1_c624 = and i32 %v4_c61c, 247
  %v5_c628 = or i32 %v1_c624, %v4_c628
  store i32 %v5_c628, i32* %r3.global-to-local, align 4
  %v1_c62c = trunc i32 %v5_c628 to i8
  store i8 %v1_c62c, i8* %v2_c61c, align 1
  %v0_c630 = load i32, i32* @r4, align 4
  %v1_c630 = add i32 %v0_c630, 13
  %v2_c630 = inttoptr i32 %v1_c630 to i8*
  %v3_c630 = load i8, i8* %v2_c630, align 1
  %v4_c630 = zext i8 %v3_c630 to i32
  store i32 %v1_c4f0, i32* %r1.global-to-local, align 4
  %v1_c638 = and i32 %v4_c630, 251
  %v5_c63c = or i32 %v1_c638, %v4_c63c
  store i32 %v5_c63c, i32* %r2.global-to-local, align 4
  %v1_c640 = trunc i32 %v5_c63c to i8
  store i8 %v1_c640, i8* %v2_c630, align 1
  %v0_c644 = load i32, i32* @r4, align 4
  %v1_c644 = add i32 %v0_c644, 13
  %v2_c644 = inttoptr i32 %v1_c644 to i8*
  %v3_c644 = load i8, i8* %v2_c644, align 1
  %v4_c644 = zext i8 %v3_c644 to i32
  store i32 %v1_c4f4, i32* %r2.global-to-local, align 4
  %v1_c64c = and i32 %v4_c644, 253
  %v4_c650 = or i32 %v1_c64c, %v3_c650
  store i32 %v4_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = trunc i32 %v4_c650 to i8
  store i8 %v1_c654, i8* %v2_c644, align 1
  %v0_c658 = load i32, i32* @r4, align 4
  %v1_c658 = add i32 %v0_c658, 12
  %v2_c658 = inttoptr i32 %v1_c658 to i8*
  %v3_c658 = load i8, i8* %v2_c658, align 1
  %v4_c658 = zext i8 %v3_c658 to i32
  store i32 %v4_c658, i32* %r2.global-to-local, align 4
  %v1_c65c = add i32 %v0_c658, 13
  %v2_c65c = inttoptr i32 %v1_c65c to i8*
  %v3_c65c = load i8, i8* %v2_c65c, align 1
  %v4_c65c = zext i8 %v3_c65c to i32
  store i32 %v1_c4f8, i32* %ip.global-to-local, align 4
  %tmp99 = urem i8 %v3_c658, 16
  %v1_c664 = zext i8 %tmp99 to i32
  %v1_c668 = and i32 %v4_c65c, 254
  %v2_c66c = or i32 %v1_c668, %v1_c4f8
  store i32 %v2_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = or i32 %v1_c664, 80
  store i32 %v1_c670, i32* %r2.global-to-local, align 4
  %v1_c674 = trunc i32 %v2_c66c to i8
  store i8 %v1_c674, i8* %v2_c65c, align 1
  %v0_c678 = load i32, i32* %r2.global-to-local, align 4
  %v1_c678 = trunc i32 %v0_c678 to i8
  %v2_c678 = load i32, i32* @r4, align 4
  %v3_c678 = add i32 %v2_c678, 12
  %v4_c678 = inttoptr i32 %v3_c678 to i8*
  store i8 %v1_c678, i8* %v4_c678, align 1
  store i32 %v3_c680, i32* %r1.global-to-local, align 4
  store i32 %v7_c680, i32* %r2.global-to-local, align 4
  %v2_c684 = load i32, i32* @r4, align 4
  %v3_c684 = add i32 %v2_c684, 1
  %v4_c684 = inttoptr i32 %v3_c684 to i8*
  store i8 %v5_c530, i8* %v4_c684, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = trunc i32 %v0_c688 to i8
  %v2_c688 = load i32, i32* @r4, align 4
  %v3_c688 = add i32 %v2_c688, 3
  %v4_c688 = inttoptr i32 %v3_c688 to i8*
  store i8 %v1_c688, i8* %v4_c688, align 1
  %v0_c68c = load i32, i32* @r6, align 4
  %v1_c68c = trunc i32 %v0_c68c to i8
  %v2_c68c = load i32, i32* @r4, align 4
  %v3_c68c = add i32 %v2_c68c, 2
  %v4_c68c = inttoptr i32 %v3_c68c to i8*
  store i8 %v1_c68c, i8* %v4_c68c, align 1
  %v0_c690 = load i32, i32* @r8, align 4
  %v1_c690 = load i32, i32* @r4, align 4
  %v2_c690 = add i32 %v1_c690, 4
  %v3_c690 = inttoptr i32 %v2_c690 to i32*
  store i32 %v0_c690, i32* %v3_c690, align 4
  %v0_c694 = call i32 @function_e82c()
  store i32 %v1_c4fc, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_c694, 16777216
  %v1_c69c = sdiv i32 %sext, 16777216
  store i32 %v1_c69c, i32* %r2.global-to-local, align 4
  %v3_c6a0 = ashr i32 %sext, 31
  store i32 %v3_c6a0, i32* %r3.global-to-local, align 4
  store i1 %v2_c6a4, i1* %cpsr_z.global-to-local, align 1
  %v1_c6a8 = trunc i32 %v3_c6a0 to i8
  %v2_c6a8 = load i32, i32* @r4, align 4
  %v3_c6a8 = add i32 %v2_c6a8, 15
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i8*
  store i8 %v1_c6a8, i8* %v4_c6a8, align 1
  %v0_c6ac = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_c6b8.pre = load i32, i32* @r4, align 4
  br i1 %v0_c6ac, label %.thread13, label %bb87

bb87:                                             ; preds = %bb86
  %v2_c6ac = add i32 %v2_c6b8.pre, 13
  %v3_c6ac = inttoptr i32 %v2_c6ac to i8*
  %v4_c6ac = load i8, i8* %v3_c6ac, align 1
  %v5_c6ac = zext i8 %v4_c6ac to i32
  %v2_c6b0 = or i32 %v5_c6ac, 8
  store i32 %v2_c6b0, i32* %r3.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb86, %bb87
  store i32 %v6_c3ac, i32* @r1, align 4
  %v0_c6b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6b8 = trunc i32 %v0_c6b8 to i8
  %v3_c6b8 = add i32 %v2_c6b8.pre, 14
  %v4_c6b8 = inttoptr i32 %v3_c6b8 to i8*
  store i8 %v1_c6b8, i8* %v4_c6b8, align 1
  %v0_c6bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6bc, label %bb89, label %bb88

bb88:                                             ; preds = %.thread13
  %v1_c6bc = load i32, i32* %r3.global-to-local, align 4
  %v2_c6bc = trunc i32 %v1_c6bc to i8
  %v3_c6bc = load i32, i32* @r4, align 4
  %v4_c6bc = add i32 %v3_c6bc, 13
  %v5_c6bc = inttoptr i32 %v4_c6bc to i8*
  store i8 %v2_c6bc, i8* %v5_c6bc, align 1
  br label %bb89

bb89:                                             ; preds = %.thread13, %bb88
  %v0_c6c0 = load i32, i32* @r7, align 4
  %v1_c6c0 = add i32 %v0_c6c0, 40
  %v1_c6c4 = inttoptr i32 %v1_c6c0 to i8*
  %v2_c6c4 = call i32 @function_e9ac(i8* %v1_c6c4)
  %v3_c6c8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c6c8, i32* %r3.global-to-local, align 4
  %v1_c6cc = add i32 %v3_c6c8, 1
  store i32 %v1_c6cc, i32* @r4, align 4
  %v0_c6d0 = load i32, i32* @fp, align 4
  %v9_c6d0 = icmp eq i32 %v0_c6d0, %v1_c6cc
  store i1 %v9_c6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c6cc, i32* %stack_var_-40, align 4
  %v8_c6d8 = icmp sgt i32 %v0_c6d0, %v1_c6cc
  br i1 %v8_c6d8, label %dec_label_pc_c53c, label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %bb89
  store i32 %v6_c3ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c6e4.preheader

dec_label_pc_c6e4.preheader:                      ; preds = %dec_label_pc_c6dc, %dec_label_pc_c950
  %v0_c6e417 = phi i32 [ %v0_c6d0, %dec_label_pc_c6dc ], [ %v0_c450, %dec_label_pc_c950 ]
  %stack_var_-168.0.ph = phi i32 [ %v1_c470, %dec_label_pc_c6dc ], [ %v1_c958, %dec_label_pc_c950 ]
  %storemerge = add i32 %v6_c3ac, 20
  store i32 %storemerge, i32* @r8, align 4
  %v3_c89c = icmp eq i32 %v6_c3e8, -1
  %v8_c89c = icmp eq i32 %v6_c3e8, -1
  %v3_c8b8 = icmp eq i32 %v3_c444, 65535
  %v2_c934 = icmp eq i32 %v1_c3d4, 0
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c6e4.preheader
  %v0_c6e4 = phi i32 [ %v0_c6e417, %dec_label_pc_c6e4.preheader ], [ %v0_c820, %dec_label_pc_c78c ]
  %v2_c6e4 = icmp eq i32 %v0_c6e4, 0
  store i1 %v2_c6e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp90 = icmp slt i32 %v0_c6e4, 1
  br label %dec_label_pc_c6ec

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6ec, %dec_label_pc_c6e4
  br i1 %tmp90, label %dec_label_pc_c6ec, label %dec_label_pc_c6f0

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6ec
  %v0_c6f0 = load i32, i32* @r8, align 4
  %v3_c6f0 = mul i32 %v0_c6f0, 65536
  store i32 %v3_c6f0, i32* %r2.global-to-local, align 4
  %tmp91 = mul i32 %v0_c6f0, 256
  %v1_c6f8 = and i32 %tmp91, 65280
  store i32 %v1_c6f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %tmp92 = udiv i32 %v0_c6f0, 256
  %v4_c704 = urem i32 %tmp92, 256
  %v5_c704 = or i32 %v4_c704, %v1_c6f8
  store i32 %v5_c704, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_c70c

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c6f0
  %v1_c720 = phi i32 [ %v1_c81c, %dec_label_pc_c78c ], [ 0, %dec_label_pc_c6f0 ]
  %v5_c710 = mul i32 %v1_c720, 24
  %v1_c714 = load i32, i32* @sb, align 4
  %v2_c714 = add i32 %v1_c714, %v5_c710
  store i32 %v2_c714, i32* %r3.global-to-local, align 4
  store i32 %v2_c218, i32* %ip.global-to-local, align 4
  %v1_c71c = add i32 %v2_c714, 20
  %v2_c71c = inttoptr i32 %v1_c71c to i8*
  %v3_c71c = load i8, i8* %v2_c71c, align 1
  %v4_c71c = zext i8 %v3_c71c to i32
  store i32 %v4_c71c, i32* %r2.global-to-local, align 4
  %v4_c720 = mul i32 %v1_c720, 4
  %v5_c720 = add i32 %v4_c720, %v2_c218
  %v6_c720 = inttoptr i32 %v5_c720 to i32*
  %v7_c720 = load i32, i32* %v6_c720, align 4
  store i32 %v7_c720, i32* @r5, align 4
  %v7_c724 = icmp eq i8 %v3_c71c, 31
  store i1 %v7_c724, i1* %cpsr_z.global-to-local, align 1
  %v1_c728 = add i32 %v7_c720, 20
  store i32 %v1_c728, i32* @r6, align 4
  %tmp100 = icmp ult i8 %v3_c71c, 32
  br i1 %tmp100, label %dec_label_pc_c840, label %dec_label_pc_c730

dec_label_pc_c730:                                ; preds = %dec_label_pc_c70c
  store i32 %v6_c3e8, i32* %r1.global-to-local, align 4
  store i1 %v8_c89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c89c, label %dec_label_pc_c8a8, label %dec_label_pc_c73c

dec_label_pc_c73c:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c730
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c8b8, label %dec_label_pc_c8c4, label %dec_label_pc_c750

dec_label_pc_c750:                                ; preds = %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge, %dec_label_pc_c73c
  %v1_c754 = phi i32 [ %v1_c754.pre, %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge ], [ 65535, %dec_label_pc_c73c ]
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v9_c754 = icmp eq i32 %v3_c448, %v1_c754
  store i1 %v9_c754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c754, label %dec_label_pc_c8e0, label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge, %dec_label_pc_c750
  %v1_c760 = phi i32 [ %v1_c760.pre, %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge ], [ %v1_c754, %dec_label_pc_c750 ]
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v9_c760 = icmp eq i32 %v3_c44c, %v1_c760
  store i1 %v9_c760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c760, label %dec_label_pc_c8fc, label %dec_label_pc_c768

dec_label_pc_c768:                                ; preds = %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge, %dec_label_pc_c75c
  %v1_c76c = phi i32 [ %v1_c76c.pre, %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge ], [ %v1_c760, %dec_label_pc_c75c ]
  store i32 %v5_c2e8, i32* %r1.global-to-local, align 4
  %v9_c76c = icmp eq i32 %v5_c2e8, %v1_c76c
  store i1 %v9_c76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c76c, label %dec_label_pc_c918, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge, %dec_label_pc_c768
  %v1_c778 = phi i32 [ %v1_c778.pre, %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge ], [ %v1_c76c, %dec_label_pc_c768 ]
  store i32 %v6_c304, i32* %r2.global-to-local, align 4
  %v9_c778 = icmp eq i32 %v6_c304, %v1_c778
  store i1 %v9_c778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c778, label %dec_label_pc_c92c, label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c774
  store i32 %v1_c3d4, i32* %r3.global-to-local, align 4
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c934, label %dec_label_pc_c78c, label %dec_label_pc_c940

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c92c, %dec_label_pc_c940
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c790 = load i32, i32* @r7, align 4
  %v1_c790 = trunc i32 %v0_c790 to i8
  %v2_c790 = load i32, i32* @r5, align 4
  %v3_c790 = add i32 %v2_c790, 10
  %v4_c790 = inttoptr i32 %v3_c790 to i8*
  store i8 %v1_c790, i8* %v4_c790, align 1
  %v0_c794 = load i32, i32* @r7, align 4
  %v1_c794 = trunc i32 %v0_c794 to i8
  %v2_c794 = load i32, i32* @r5, align 4
  %v3_c794 = add i32 %v2_c794, 11
  %v4_c794 = inttoptr i32 %v3_c794 to i8*
  store i8 %v1_c794, i8* %v4_c794, align 1
  %v0_c798 = load i32, i32* @r5, align 4
  store i32 %v0_c798, i32* @r0, align 4
  %v2_c79c = call i32 @function_d0b8(i32 %v0_c798, i32 20)
  %v3_c79c = trunc i32 %v2_c79c to i8
  %v4_c7a028 = udiv i32 %v2_c79c, 256
  %v1_c7a4 = trunc i32 %v4_c7a028 to i8
  %v2_c7a4 = load i32, i32* @r5, align 4
  %v3_c7a4 = add i32 %v2_c7a4, 11
  %v4_c7a4 = inttoptr i32 %v3_c7a4 to i8*
  store i8 %v1_c7a4, i8* %v4_c7a4, align 1
  %v3_c7a8 = load i32, i32* @r5, align 4
  %v4_c7a8 = add i32 %v3_c7a8, 10
  %v5_c7a8 = inttoptr i32 %v4_c7a8 to i8*
  store i8 %v3_c79c, i8* %v5_c7a8, align 1
  %v0_c7ac = load i32, i32* @r6, align 4
  store i32 %v0_c7ac, i32* @r1, align 4
  %v0_c7b0 = load i32, i32* @sl, align 4
  store i32 %v0_c7b0, i32* %r2.global-to-local, align 4
  %v0_c7b4 = load i32, i32* @r8, align 4
  store i32 %v0_c7b4, i32* %r3.global-to-local, align 4
  %v0_c7b8 = load i32, i32* @r7, align 4
  %v1_c7b8 = trunc i32 %v0_c7b8 to i8
  %v3_c7b8 = add i32 %v0_c7ac, 16
  %v4_c7b8 = inttoptr i32 %v3_c7b8 to i8*
  store i8 %v1_c7b8, i8* %v4_c7b8, align 1
  %v0_c7bc = load i32, i32* @r7, align 4
  %v1_c7bc = trunc i32 %v0_c7bc to i8
  %v2_c7bc = load i32, i32* @r6, align 4
  %v3_c7bc = add i32 %v2_c7bc, 17
  %v4_c7bc = inttoptr i32 %v3_c7bc to i8*
  store i8 %v1_c7bc, i8* %v4_c7bc, align 1
  %v0_c7c0 = load i32, i32* @r5, align 4
  %v4_c7c4 = call i32 @function_d114(i32 %v0_c7c0, i32 %v0_c7ac, i32 %v0_c7b0, i32 %v0_c7b4)
  %v5_c7c4 = trunc i32 %v4_c7c4 to i8
  %v4_c7c829 = udiv i32 %v4_c7c4, 256
  %v1_c7cc = trunc i32 %v4_c7c829 to i8
  %v2_c7cc = load i32, i32* @r6, align 4
  %v3_c7cc = add i32 %v2_c7cc, 17
  %v4_c7cc = inttoptr i32 %v3_c7cc to i8*
  store i8 %v1_c7cc, i8* %v4_c7cc, align 1
  %v3_c7d0 = load i32, i32* @r6, align 4
  %v4_c7d0 = add i32 %v3_c7d0, 16
  %v5_c7d0 = inttoptr i32 %v4_c7d0 to i8*
  store i8 %v5_c7c4, i8* %v5_c7d0, align 1
  %v3_c7d4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c7d4, i32* %r3.global-to-local, align 4
  %v0_c7d8 = load i32, i32* @r5, align 4
  %v1_c7d8 = add i32 %v0_c7d8, 20
  %v2_c7d8 = inttoptr i32 %v1_c7d8 to i32*
  %v3_c7d8 = load i32, i32* %v2_c7d8, align 4
  %v3_c7e0 = udiv i32 %v3_c7d8, 65536
  store i32 %v3_c7e0, i32* %r2.global-to-local, align 4
  %v5_c7e4 = mul i32 %v3_c7d4, 24
  %v1_c7e8 = load i32, i32* @sb, align 4
  %v2_c7e8 = add i32 %v1_c7e8, %v5_c7e4
  store i32 %v2_c7e8, i32* %ip.global-to-local, align 4
  %v3_c7ec27 = udiv i32 %v3_c7d8, 16777216
  %v1_c7f0 = trunc i32 %v3_c7ec27 to i8
  %v3_c7f0 = add i32 %v2_c7e8, 3
  %v4_c7f0 = inttoptr i32 %v3_c7f0 to i8*
  store i8 %v1_c7f0, i8* %v4_c7f0, align 1
  %v0_c7f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7f4 = trunc i32 %v0_c7f4 to i8
  %v2_c7f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_c7f4 = add i32 %v2_c7f4, 2
  %v4_c7f4 = inttoptr i32 %v3_c7f4 to i8*
  store i8 %v1_c7f4, i8* %v4_c7f4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c7fc = load i32, i32* @r5, align 4
  store i32 %v0_c7fc, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-168.0.ph, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c80c = load i32, i32* %ip.global-to-local, align 4
  %v6_c814 = inttoptr i32 %v0_c7fc to i32*
  %v7_c814 = call i32 @function_1349c(i32 %v3_c3fc, i32* %v6_c814, i32 %stack_var_-168.0.ph, i32 16384, i32 %v0_c80c, i32 16)
  %v3_c818 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c818, i32* %r3.global-to-local, align 4
  %v1_c81c = add i32 %v3_c818, 1
  %v0_c820 = load i32, i32* @fp, align 4
  %v9_c820 = icmp eq i32 %v0_c820, %v1_c81c
  store i1 %v9_c820, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c81c, i32* %stack_var_-40, align 4
  %v7_c828 = icmp sgt i32 %v0_c820, %v1_c81c
  br i1 %v7_c828, label %dec_label_pc_c70c, label %dec_label_pc_c6e4

dec_label_pc_c830:                                ; preds = %dec_label_pc_c40c
  %v1_c834 = call i32 @function_12c1c(i32 %v3_c3fc)
  br label %dec_label_pc_c838

dec_label_pc_c838:                                ; preds = %dec_label_pc_c1f8, %dec_label_pc_c830
  %v29_c83c = phi i32 [ %v3_c3fc, %dec_label_pc_c1f8 ], [ %v1_c834, %dec_label_pc_c830 ]
  ret i32 %v29_c83c

dec_label_pc_c840:                                ; preds = %dec_label_pc_c70c
  %v1_c840 = add i32 %v2_c714, 16
  %v2_c840 = inttoptr i32 %v1_c840 to i32*
  %v3_c840 = load i32, i32* %v2_c840, align 4
  %v0_c844 = call i32 @function_e82c()
  %v3_c848 = load i32, i32* %stack_var_-40, align 4
  %v5_c850 = mul i32 %v3_c848, 24
  %v1_c858 = load i32, i32* @sb, align 4
  %v2_c858 = add i32 %v1_c858, %v5_c850
  store i32 %v2_c858, i32* %r1.global-to-local, align 4
  %v1_c85c = and i32 %v3_c840, 65280
  store i32 %v1_c85c, i32* %r3.global-to-local, align 4
  %v1_c854 = udiv i32 %v3_c840, 256
  %v3_c860 = and i32 %v1_c854, 65280
  store i32 %v3_c860, i32* %r2.global-to-local, align 4
  %v3_c864 = mul i32 %v3_c840, 16777216
  store i32 %v3_c864, i32* %ip.global-to-local, align 4
  %v1_c868 = add i32 %v2_c858, 20
  %v2_c868 = inttoptr i32 %v1_c868 to i8*
  %v3_c868 = load i8, i8* %v2_c868, align 1
  %v4_c868 = zext i8 %v3_c868 to i32
  %v4_c86c = mul nuw nsw i32 %v1_c85c, 256
  %v5_c86c = or i32 %v4_c86c, %v3_c864
  store i32 %v5_c86c, i32* %ip.global-to-local, align 4
  %v2_c874 = call i32 @llvm.bswap.i32(i32 %v3_c840)
  %v7_c878 = lshr i32 %v0_c844, %v4_c868
  %v8_c878 = add i32 %v7_c878, %v2_c874
  store i32 %v8_c878, i32* %r2.global-to-local, align 4
  %v2_c894 = call i32 @llvm.bswap.i32(i32 %v8_c878)
  store i32 %v2_c894, i32* %r3.global-to-local, align 4
  store i32 %v6_c3e8, i32* %r1.global-to-local, align 4
  store i1 %v8_c89c, i1* %cpsr_z.global-to-local, align 1
  %v1_c8a0 = load i32, i32* @r5, align 4
  %v2_c8a0 = add i32 %v1_c8a0, 16
  %v3_c8a0 = inttoptr i32 %v2_c8a0 to i32*
  store i32 %v2_c894, i32* %v3_c8a0, align 4
  br i1 %v3_c89c, label %dec_label_pc_c8a8, label %dec_label_pc_c73c

dec_label_pc_c8a8:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c730
  %v0_c8a8 = call i32 @function_e82c()
  store i32 %v3_c444, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c8b8, i1* %cpsr_z.global-to-local, align 1
  %v1_c8bc = load i32, i32* @r5, align 4
  %v2_c8bc = add i32 %v1_c8bc, 12
  %v3_c8bc = inttoptr i32 %v2_c8bc to i32*
  store i32 %v0_c8a8, i32* %v3_c8bc, align 4
  br i1 %v3_c8b8, label %dec_label_pc_c8c4, label %dec_label_pc_c8a8.dec_label_pc_c750_crit_edge

dec_label_pc_c8a8.dec_label_pc_c750_crit_edge:    ; preds = %dec_label_pc_c8a8
  %v1_c754.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c750

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8a8, %dec_label_pc_c73c
  %v0_c8c4 = call i32 @function_e82c()
  %v1_c8c4 = trunc i32 %v0_c8c4 to i8
  %v4_c8c830 = udiv i32 %v0_c8c4, 256
  %v1_c8cc = trunc i32 %v4_c8c830 to i8
  %v2_c8cc = load i32, i32* @r5, align 4
  %v3_c8cc = add i32 %v2_c8cc, 5
  %v4_c8cc = inttoptr i32 %v3_c8cc to i8*
  store i8 %v1_c8cc, i8* %v4_c8cc, align 1
  store i32 %v3_c448, i32* %r3.global-to-local, align 4
  %v1_c8d4 = load i32, i32* @r4, align 4
  %v9_c8d4 = icmp eq i32 %v3_c448, %v1_c8d4
  store i1 %v9_c8d4, i1* %cpsr_z.global-to-local, align 1
  %v3_c8d8 = load i32, i32* @r5, align 4
  %v4_c8d8 = add i32 %v3_c8d8, 4
  %v5_c8d8 = inttoptr i32 %v4_c8d8 to i8*
  store i8 %v1_c8c4, i8* %v5_c8d8, align 1
  %v0_c8dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c8dc, label %dec_label_pc_c8e0, label %dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge

dec_label_pc_c8c4.dec_label_pc_c75c_crit_edge:    ; preds = %dec_label_pc_c8c4
  %v1_c760.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c75c

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c750
  %v0_c8e0 = call i32 @function_e82c()
  %v1_c8e0 = trunc i32 %v0_c8e0 to i8
  store i32 %v3_c44c, i32* %ip.global-to-local, align 4
  %v4_c8e8 = sdiv i32 %v0_c8e0, 256
  store i32 %v4_c8e8, i32* %r3.global-to-local, align 4
  %v1_c8ec = load i32, i32* @r4, align 4
  %v9_c8ec = icmp eq i32 %v3_c44c, %v1_c8ec
  store i1 %v9_c8ec, i1* %cpsr_z.global-to-local, align 1
  %v3_c8f0 = load i32, i32* @r5, align 4
  %v4_c8f0 = add i32 %v3_c8f0, 20
  %v5_c8f0 = inttoptr i32 %v4_c8f0 to i8*
  store i8 %v1_c8e0, i8* %v5_c8f0, align 1
  %v0_c8f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c8f4 = trunc i32 %v0_c8f4 to i8
  %v2_c8f4 = load i32, i32* @r6, align 4
  %v3_c8f4 = add i32 %v2_c8f4, 1
  %v4_c8f4 = inttoptr i32 %v3_c8f4 to i8*
  store i8 %v1_c8f4, i8* %v4_c8f4, align 1
  %v0_c8f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c8f8, label %dec_label_pc_c8fc, label %dec_label_pc_c8e0.dec_label_pc_c768_crit_edge

dec_label_pc_c8e0.dec_label_pc_c768_crit_edge:    ; preds = %dec_label_pc_c8e0
  %v1_c76c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c768

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c75c
  %v0_c8fc = call i32 @function_e82c()
  %v1_c8fc = trunc i32 %v0_c8fc to i8
  store i32 %v5_c2e8, i32* %r1.global-to-local, align 4
  %v4_c904 = sdiv i32 %v0_c8fc, 256
  store i32 %v4_c904, i32* %r3.global-to-local, align 4
  %v1_c908 = load i32, i32* @r4, align 4
  %v9_c908 = icmp eq i32 %v5_c2e8, %v1_c908
  store i1 %v9_c908, i1* %cpsr_z.global-to-local, align 1
  %v1_c90c = trunc i32 %v4_c904 to i8
  %v2_c90c = load i32, i32* @r6, align 4
  %v3_c90c = add i32 %v2_c90c, 3
  %v4_c90c = inttoptr i32 %v3_c90c to i8*
  store i8 %v1_c90c, i8* %v4_c90c, align 1
  %v3_c910 = load i32, i32* @r6, align 4
  %v4_c910 = add i32 %v3_c910, 2
  %v5_c910 = inttoptr i32 %v4_c910 to i8*
  store i8 %v1_c8fc, i8* %v5_c910, align 1
  %v0_c914 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c914, label %dec_label_pc_c918, label %dec_label_pc_c8fc.dec_label_pc_c774_crit_edge

dec_label_pc_c8fc.dec_label_pc_c774_crit_edge:    ; preds = %dec_label_pc_c8fc
  %v1_c778.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c774

dec_label_pc_c918:                                ; preds = %dec_label_pc_c8fc, %dec_label_pc_c768
  %v0_c918 = call i32 @function_e82c()
  store i32 %v6_c304, i32* %r2.global-to-local, align 4
  %v1_c920 = load i32, i32* @r4, align 4
  %v9_c920 = icmp eq i32 %v6_c304, %v1_c920
  store i1 %v9_c920, i1* %cpsr_z.global-to-local, align 1
  %v1_c924 = load i32, i32* @r6, align 4
  %v2_c924 = add i32 %v1_c924, 4
  %v3_c924 = inttoptr i32 %v2_c924 to i32*
  store i32 %v0_c918, i32* %v3_c924, align 4
  br i1 %v9_c920, label %dec_label_pc_c92c, label %dec_label_pc_c780

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c774
  %v0_c92c = call i32 @function_e82c()
  store i32 %v1_c3d4, i32* %r3.global-to-local, align 4
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  %v1_c938 = load i32, i32* @r6, align 4
  %v2_c938 = add i32 %v1_c938, 8
  %v3_c938 = inttoptr i32 %v2_c938 to i32*
  store i32 %v0_c92c, i32* %v3_c938, align 4
  br i1 %v2_c934, label %dec_label_pc_c78c, label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c92c
  %v0_c940 = load i32, i32* @r5, align 4
  %v1_c940 = add i32 %v0_c940, 40
  store i32 %v6_c3ac, i32* @r1, align 4
  %v1_c948 = inttoptr i32 %v1_c940 to i8*
  %v2_c948 = call i32 @function_e9ac(i8* %v1_c948)
  br label %dec_label_pc_c78c

dec_label_pc_c950:                                ; preds = %dec_label_pc_c434
  store i32 %v6_c3ac, i32* %r3.global-to-local, align 4
  %v1_c958 = add i32 %v6_c3ac, 40
  store i32 %v1_c958, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c6e4.preheader

; uselistorder directives
  uselistorder i32 %v1_c958, { 1, 0 }
  uselistorder i32 %v4_c904, { 1, 0 }
  uselistorder i32 %v2_c894, { 1, 0 }
  uselistorder i32 %v3_c864, { 1, 0 }
  uselistorder i32 %v3_c840, { 1, 3, 2, 0 }
  uselistorder i32 %v0_c820, { 1, 2, 0 }
  uselistorder i32 %v1_c81c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_c7ac, { 1, 0, 2 }
  uselistorder i32 %v0_c6f0, { 2, 0, 1 }
  uselistorder i32 %v0_c6e4, { 1, 0 }
  uselistorder i1 %v2_c934, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c8b8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c6cc, { 1, 0, 2, 3 }
  uselistorder i8 %v5_c530, { 1, 0 }
  uselistorder i32 %v1_c4f8, { 1, 0 }
  uselistorder i32 %v1_c4f4, { 1, 0 }
  uselistorder i32 %v1_c4f0, { 1, 0 }
  uselistorder i32 %v1_c4cc, { 1, 0 }
  uselistorder i32 %v1_c4c8, { 1, 0 }
  uselistorder i32 %v1_c4c4, { 1, 0 }
  uselistorder i32 %v1_c4b8, { 1, 0 }
  uselistorder i32 %v1_c494, { 1, 0 }
  uselistorder i32 %v1_c484, { 1, 0 }
  uselistorder i32 %v1_c470, { 3, 0, 2, 1 }
  uselistorder i32 %v0_c450, { 1, 0, 2 }
  uselistorder i32 %v3_c444, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c438, { 3, 0, 1, 2 }
  uselistorder i32 %v0_c434, { 0, 2, 1, 3 }
  uselistorder i1 %v7_c42c, { 1, 0 }
  uselistorder i1 %v7_c400, { 1, 0 }
  uselistorder i32 %v3_c3fc, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_c3e8, { 4, 3, 0, 5, 1, 2 }
  uselistorder i32 %v1_c3d4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_c3ac, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32 %v6_c304, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c2e8, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v1_c298, { 1, 0 }
  uselistorder i32 %v6_c230, { 1, 0 }
  uselistorder i32 %v2_c218, { 0, 3, 1, 2 }
  uselistorder i32 %v1_c1fc, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32 (i8*)* @function_e9ac, { 0, 1, 6, 7, 2, 3, 4, 5, 8, 9, 10 }
  uselistorder label %dec_label_pc_c940, { 1, 0 }
  uselistorder label %dec_label_pc_c838, { 1, 0 }
  uselistorder label %dec_label_pc_c78c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c6e4.preheader, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c96c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c96c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c96c = load i32, i32* @r4, align 4
  %v12_c96c = load i32, i32* @r7, align 4
  %v1_c970 = urem i32 %arg1, 256
  store i32 %v1_c970, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_c970, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c988 = urem i32 %arg3, 256
  store i32 %v1_c988, i32* @r4, align 4
  %v2_c98c = call i32 @function_137ec(i32 %v1_c970, i32 4)
  %v0_c990 = load i32, i32* @r5, align 4
  store i32 %v0_c990, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c98c, i32* %fp.global-to-local, align 4
  %v0_c9a0 = load i32, i32* @r4, align 4
  store i32 %v0_c9a0, i32* %r0.global-to-local, align 4
  %v4_c9a4 = inttoptr i32 %v0_c990 to i32*
  %v5_c9a4 = call i32 @function_85e0(i32 %v0_c9a0, i32* %v4_c9a4, i32 2, i32 0)
  %v1_c9b0 = urem i32 %v5_c9a4, 256
  store i32 %v1_c9b0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c9bc = load i32, i32* @r5, align 4
  store i32 %v0_c9bc, i32* %r1.global-to-local, align 4
  %v0_c9c0 = load i32, i32* @r4, align 4
  store i32 %v0_c9c0, i32* %r0.global-to-local, align 4
  %v5_c9c4 = trunc i32 %v5_c9a4 to i8
  %v6_c9c8 = inttoptr i32 %v0_c9bc to i32*
  %v7_c9c8 = call i32 @function_85e0(i32 %v0_c9c0, i32* %v6_c9c8, i32 3, i32 65535)
  %v0_c9cc = load i32, i32* @r5, align 4
  store i32 %v0_c9cc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c9dc = load i32, i32* @r4, align 4
  store i32 %v0_c9dc, i32* %r0.global-to-local, align 4
  %v5_c9e0 = inttoptr i32 %v0_c9cc to i32*
  %v6_c9e0 = call i32 @function_85e0(i32 %v0_c9dc, i32* %v5_c9e0, i32 4, i32 64)
  %v1_c9e8 = urem i32 %v6_c9e0, 256
  store i32 %v1_c9e8, i32* %ip.global-to-local, align 4
  %v0_c9ec = load i32, i32* @r5, align 4
  store i32 %v0_c9ec, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c9f8 = load i32, i32* @r4, align 4
  store i32 %v0_c9f8, i32* %r0.global-to-local, align 4
  %v6_ca00 = inttoptr i32 %v0_c9ec to i32*
  %v7_ca00 = call i32 @function_85e0(i32 %v0_c9f8, i32* %v6_ca00, i32 5, i32 1)
  %v1_ca0c = urem i32 %v7_ca00, 256
  store i32 %v1_ca0c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ca18 = load i32, i32* @r5, align 4
  store i32 %v0_ca18, i32* %r1.global-to-local, align 4
  %v0_ca1c = load i32, i32* @r4, align 4
  store i32 %v0_ca1c, i32* %r0.global-to-local, align 4
  %v5_ca24 = inttoptr i32 %v0_ca18 to i32*
  %v6_ca24 = call i32 @function_85e0(i32 %v0_ca1c, i32* %v5_ca24, i32 6, i32 65535)
  %v0_ca2c = load i32, i32* @r5, align 4
  store i32 %v0_ca2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_ca24, i32* @r7, align 4
  %v0_ca3c = load i32, i32* @r4, align 4
  store i32 %v0_ca3c, i32* %r0.global-to-local, align 4
  %v4_ca40 = inttoptr i32 %v0_ca2c to i32*
  %v5_ca40 = call i32 @function_85e0(i32 %v0_ca3c, i32* %v4_ca40, i32 7, i32 65535)
  %v0_ca48 = load i32, i32* @r5, align 4
  store i32 %v0_ca48, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_ca40, i32* @r6, align 4
  %v0_ca58 = load i32, i32* @r4, align 4
  store i32 %v0_ca58, i32* %r0.global-to-local, align 4
  %v4_ca5c = inttoptr i32 %v0_ca48 to i32*
  %v5_ca5c = call i32 @function_85e0(i32 %v0_ca58, i32* %v4_ca5c, i32 17, i32 65535)
  %v0_ca60 = load i32, i32* @r5, align 4
  store i32 %v0_ca60, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ca70 = load i32, i32* @r4, align 4
  store i32 %v0_ca70, i32* %r0.global-to-local, align 4
  %v5_ca74 = inttoptr i32 %v0_ca60 to i32*
  %v6_ca74 = call i32 @function_85e0(i32 %v0_ca70, i32* %v5_ca74, i32 18, i32 0)
  %v0_ca78 = load i32, i32* @r5, align 4
  store i32 %v0_ca78, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ca88 = load i32, i32* @r4, align 4
  store i32 %v0_ca88, i32* %r0.global-to-local, align 4
  %v5_ca8c = inttoptr i32 %v0_ca78 to i32*
  %v6_ca8c = call i32 @function_85e0(i32 %v0_ca88, i32* %v5_ca8c, i32 11, i32 0)
  %v0_ca90 = load i32, i32* @r5, align 4
  store i32 %v0_ca90, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_caa0 = load i32, i32* @r4, align 4
  store i32 %v0_caa0, i32* %r0.global-to-local, align 4
  %v5_caa4 = inttoptr i32 %v0_ca90 to i32*
  %v6_caa4 = call i32 @function_85e0(i32 %v0_caa0, i32* %v5_caa4, i32 12, i32 0)
  %v0_caa8 = load i32, i32* @r5, align 4
  store i32 %v0_caa8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cab8 = load i32, i32* @r4, align 4
  store i32 %v0_cab8, i32* %r0.global-to-local, align 4
  %v5_cabc = inttoptr i32 %v0_caa8 to i32*
  %v6_cabc = call i32 @function_85e0(i32 %v0_cab8, i32* %v5_cabc, i32 13, i32 0)
  %v0_cac0 = load i32, i32* @r5, align 4
  store i32 %v0_cac0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cad0 = load i32, i32* @r4, align 4
  store i32 %v0_cad0, i32* %r0.global-to-local, align 4
  %v5_cad4 = inttoptr i32 %v0_cac0 to i32*
  %v6_cad4 = call i32 @function_85e0(i32 %v0_cad0, i32* %v5_cad4, i32 14, i32 0)
  %v0_cad8 = load i32, i32* @r5, align 4
  store i32 %v0_cad8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cae8 = load i32, i32* @r4, align 4
  store i32 %v0_cae8, i32* %r0.global-to-local, align 4
  %v5_caec = inttoptr i32 %v0_cad8 to i32*
  %v6_caec = call i32 @function_85e0(i32 %v0_cae8, i32* %v5_caec, i32 15, i32 1)
  %v0_caf0 = load i32, i32* @r5, align 4
  store i32 %v0_caf0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cb00 = load i32, i32* @r4, align 4
  store i32 %v0_cb00, i32* %r0.global-to-local, align 4
  %v5_cb04 = inttoptr i32 %v0_caf0 to i32*
  %v6_cb04 = call i32 @function_85e0(i32 %v0_cb00, i32* %v5_cb04, i32 16, i32 0)
  %v2_cb10 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_cb10, i32* %r3.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  store i32 %v0_cb14, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cb1c = load i32, i32* @r4, align 4
  store i32 %v0_cb1c, i32* %r0.global-to-local, align 4
  %v5_cb20 = inttoptr i32 %v0_cb14 to i32*
  %v6_cb20 = call i32 @function_8574(i32 %v0_cb1c, i32* %v5_cb20, i32 25, i32 %v2_cb10, i32 %v6_cb04)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cb34 = call i32 @function_13500(i32 2, i32 3, i32 6)
  store i32 %v3_cb34, i32* %r0.global-to-local, align 4
  %v7_cb38 = icmp eq i32 %v3_cb34, -1
  store i1 %v7_cb38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_cb34, i32* %sb.global-to-local, align 4
  br i1 %v7_cb38, label %dec_label_pc_d0ac, label %dec_label_pc_cb44

dec_label_pc_cb44:                                ; preds = %dec_label_pc_c96c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_cb4c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_cb4c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_cb60 = call i32 @function_134d0(i32 %v3_cb34, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_cb60, i32* %r0.global-to-local, align 4
  %v7_cb64 = icmp eq i32 %v6_cb60, -1
  store i1 %v7_cb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cb64, label %dec_label_pc_d0a4, label %dec_label_pc_cb6c

dec_label_pc_cb6c:                                ; preds = %dec_label_pc_cb44
  %v3_cb70 = mul i32 %v7_c9c8, 65536
  store i32 %v3_cb70, i32* %r4.global-to-local, align 4
  %v3_cb74 = urem i32 %v7_c9c8, 65536
  %v0_cb84 = load i32, i32* @r7, align 4
  %v3_cb84 = mul i32 %v0_cb84, 65536
  store i32 %v3_cb84, i32* %r0.global-to-local, align 4
  %v0_cb88 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_cb90 = urem i32 %v0_cb84, 65536
  store i32 %v3_cb90, i32* %ip.global-to-local, align 4
  %v3_cb94 = urem i32 %v0_cb88, 65536
  store i32 %v3_cb94, i32* %r2.global-to-local, align 4
  %v1_cb98 = urem i32 %v6_ca8c, 256
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  %v0_cb9c = load i32, i32* @sl, align 4
  %v2_cb9c = icmp eq i32 %v0_cb9c, 0
  store i1 %v2_cb9c, i1* %cpsr_z.global-to-local, align 1
  %tmp69 = icmp slt i32 %v0_cb9c, 1
  br i1 %tmp69, label %dec_label_pc_ce50, label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cb6c
  %v3_cbb8 = mul i32 %v5_ca5c, 65536
  store i32 %v3_cbb8, i32* @lr, align 4
  %v1_cbc8 = urem i32 %v0_cb88, 256
  %tmp70 = udiv i32 %v0_cb84, 256
  %v3_cbcc = urem i32 %tmp70, 256
  %v1_cbd0 = urem i32 %v0_cb84, 256
  %v4_cbd4 = mul nuw nsw i32 %v1_cbd0, 256
  %v5_cbd4 = or i32 %v4_cbd4, %v3_cbcc
  store i32 %v5_cbd4, i32* @r7, align 4
  %tmp71 = udiv i32 %v7_c9c8, 256
  %tmp72 = mul i32 %v5_ca5c, 256
  %v1_cbf0 = and i32 %tmp72, 65280
  %v1_cbf4 = urem i32 %v6_ca8c, 2
  %v3_cbf8 = mul nuw nsw i32 %v1_cbc8, 256
  store i32 %v3_cbf8, i32* %r1.global-to-local, align 4
  %v5_cbfc = trunc i32 %tmp71 to i8
  %tmp73 = udiv i32 %v0_cb88, 256
  %v4_cc00 = urem i32 %tmp73, 256
  %v5_cc00 = or i32 %v4_cc00, %v3_cbf8
  store i32 %v5_cc00, i32* @r6, align 4
  %v1_cc04 = urem i32 %v6_caa4, 2
  %v1_cc08 = urem i32 %v6_cabc, 2
  %tmp74 = udiv i32 %v5_ca5c, 256
  %v4_cc0c = urem i32 %tmp74, 256
  %v5_cc0c = or i32 %v4_cc0c, %v1_cbf0
  store i32 %v5_cc0c, i32* @r5, align 4
  %v1_cc2c = urem i32 %v6_cad4, 2
  %v1_cc30 = urem i32 %v6_caec, 2
  %v1_cc3c = urem i32 %v6_cb04, 2
  store i32 %v1_cc3c, i32* %r0.global-to-local, align 4
  %v3_cc40 = udiv i32 %v7_c9c8, 65536
  store i32 %v3_cc40, i32* %r2.global-to-local, align 4
  store i32 %v1_cbd0, i32* %r3.global-to-local, align 4
  store i32 %v1_cbc8, i32* %ip.global-to-local, align 4
  %v5_cc58 = trunc i32 %v0_cb88 to i8
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_c9e0, 16777216
  %v4_cca8 = sdiv i32 %sext, 16777216
  %tmp = sub nsw i32 0, %v1_cbf4
  %v4_cd1c = and i32 %tmp, 32
  %tmp78 = sub nsw i32 0, %v1_cc04
  %v4_cd30 = and i32 %tmp78, 16
  %tmp79 = sub nsw i32 0, %v1_cc08
  %v4_cd44 = and i32 %tmp79, 8
  %tmp80 = sub nsw i32 0, %v1_cc2c
  %v4_cd58 = and i32 %tmp80, 4
  %tmp81 = sub nsw i32 0, %v1_cc30
  %v3_cd6c = and i32 %tmp81, 2
  %v7_cd9c = sext i8 %v5_cc58 to i32
  %sext77 = mul i32 %v0_cb84, 16777216
  %v3_cd9c = sdiv i32 %sext77, 16777216
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %bb76, %dec_label_pc_cbb0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_cc68 = call i32 @function_137ec(i32 128, i32 1)
  store i32 %v2_cc68, i32* %r0.global-to-local, align 4
  %v3_cc6c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cc6c, i32* %r2.global-to-local, align 4
  %v1_cc70 = load i32, i32* %fp.global-to-local, align 4
  %v2_cc70 = load i32, i32* @r4, align 4
  %v5_cc70 = mul i32 %v2_cc70, 4
  %v6_cc70 = add i32 %v5_cc70, %v1_cc70
  %v7_cc70 = inttoptr i32 %v6_cc70 to i32*
  store i32 %v2_cc68, i32* %v7_cc70, align 4
  %v0_cc74 = load i32, i32* %fp.global-to-local, align 4
  %v1_cc74 = load i32, i32* %r2.global-to-local, align 4
  %v4_cc74 = mul i32 %v1_cc74, 4
  %v5_cc74 = add i32 %v4_cc74, %v0_cc74
  %v6_cc74 = inttoptr i32 %v5_cc74 to i32*
  %v7_cc74 = load i32, i32* %v6_cc74, align 4
  store i32 %v7_cc74, i32* %r4.global-to-local, align 4
  %v1_cc78 = inttoptr i32 %v7_cc74 to i8*
  %v2_cc78 = load i8, i8* %v1_cc78, align 1
  %tmp82 = urem i8 %v2_cc78, 16
  %v1_cc7c = zext i8 %tmp82 to i32
  %v1_cc80 = or i32 %v1_cc7c, 64
  store i32 %v1_cc80, i32* %r3.global-to-local, align 4
  %v1_cc84 = trunc i32 %v1_cc80 to i8
  store i8 %v1_cc84, i8* %v1_cc78, align 1
  %v0_cc88 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc88 = inttoptr i32 %v0_cc88 to i8*
  %v2_cc88 = load i8, i8* %v1_cc88, align 1
  %v1_cc8c = and i8 %v2_cc88, -16
  %v1_cc90 = or i8 %v1_cc8c, 5
  store i32 %v1_ca0c, i32* %r0.global-to-local, align 4
  store i8 %v1_cc90, i8* %v1_cc88, align 1
  %v2_cca0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cca0 = add i32 %v2_cca0, 1
  %v4_cca0 = inttoptr i32 %v3_cca0 to i8*
  store i8 %v5_c9c4, i8* %v4_cca0, align 1
  store i32 %v4_cca8, i32* %r2.global-to-local, align 4
  %v2_ccac = load i32, i32* %r4.global-to-local, align 4
  %v3_ccac = add i32 %v2_ccac, 4
  %v4_ccac = inttoptr i32 %v3_ccac to i8*
  store i8 %v5_cbfc, i8* %v4_ccac, align 1
  store i32 6, i32* %ip.global-to-local, align 4
  %v0_ccb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_ccb8 = icmp eq i32 %v0_ccb8, 0
  store i1 %v2_ccb8, i1* %cpsr_z.global-to-local, align 1
  %v2_ccbc = load i32, i32* %r4.global-to-local, align 4
  %v3_ccbc = add i32 %v2_ccbc, 3
  %v4_ccbc = inttoptr i32 %v3_ccbc to i8*
  store i8 60, i8* %v4_ccbc, align 1
  store i32 %v3_cc40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ccc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ccc8 = trunc i32 %v0_ccc8 to i8
  %v2_ccc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_ccc8 = add i32 %v2_ccc8, 8
  %v4_ccc8 = inttoptr i32 %v3_ccc8 to i8*
  store i8 %v1_ccc8, i8* %v4_ccc8, align 1
  %v0_cccc = load i32, i32* %ip.global-to-local, align 4
  %v1_cccc = trunc i32 %v0_cccc to i8
  %v2_cccc = load i32, i32* %r4.global-to-local, align 4
  %v3_cccc = add i32 %v2_cccc, 9
  %v4_cccc = inttoptr i32 %v3_cccc to i8*
  store i8 %v1_cccc, i8* %v4_cccc, align 1
  %v0_ccd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccd0 = trunc i32 %v0_ccd0 to i8
  %v2_ccd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_ccd0 = add i32 %v2_ccd0, 2
  %v4_ccd0 = inttoptr i32 %v3_ccd0 to i8*
  store i8 %v1_ccd0, i8* %v4_ccd0, align 1
  %v3_ccd4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ccd4, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ccd8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_cc60
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_ccdc = load i32, i32* %r4.global-to-local, align 4
  %v4_ccdc = add i32 %v3_ccdc, 6
  %v5_ccdc = inttoptr i32 %v4_ccdc to i8*
  store i8 64, i8* %v5_ccdc, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_cc60, %bb
  %v0_cce0 = load i32, i32* %r0.global-to-local, align 4
  %v1_cce0 = trunc i32 %v0_cce0 to i8
  %v2_cce0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cce0 = add i32 %v2_cce0, 5
  %v4_cce0 = inttoptr i32 %v3_cce0 to i8*
  store i8 %v1_cce0, i8* %v4_cce0, align 1
  %v0_cce4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cce4, label %.thread9, label %bb75

.thread9:                                         ; preds = %.thread
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  br label %bb76

bb75:                                             ; preds = %.thread
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  %v3_ccec = load i32, i32* %r4.global-to-local, align 4
  %v4_ccec = add i32 %v3_ccec, 7
  %v5_ccec = inttoptr i32 %v4_ccec to i8*
  store i8 0, i8* %v5_ccec, align 1
  %v0_ccf4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb76

bb76:                                             ; preds = %.thread9, %bb75
  %v0_ccf4 = phi i32 [ %v6_cb20, %.thread9 ], [ %v0_ccf4.pre, %bb75 ]
  %v0_ccf0 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccf0 = mul i32 %v0_ccf0, 32
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %v1_ccf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_ccf4 = add i32 %v1_ccf4, 12
  %v3_ccf4 = inttoptr i32 %v2_ccf4 to i32*
  store i32 %v0_ccf4, i32* %v3_ccf4, align 4
  %v0_ccf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccf8 = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_ccf8, -8
  %v5_ccf8 = add i32 %v0_ccf8, %tmp83
  %v1_ccfc = load i32, i32* @r8, align 4
  %v2_ccfc = add i32 %v1_ccfc, %v5_ccf8
  store i32 %v2_ccfc, i32* %r3.global-to-local, align 4
  %v1_cd00 = add i32 %v2_ccfc, 16
  %v2_cd00 = inttoptr i32 %v1_cd00 to i32*
  %v3_cd00 = load i32, i32* %v2_cd00, align 4
  store i32 %v3_cd00, i32* %r2.global-to-local, align 4
  %v0_cd04 = load i32, i32* @r7, align 4
  %v1_cd04 = trunc i32 %v0_cd04 to i8
  %v2_cd04 = load i32, i32* %r4.global-to-local, align 4
  %v3_cd04 = add i32 %v2_cd04, 20
  %v4_cd04 = inttoptr i32 %v3_cd04 to i8*
  store i8 %v1_cd04, i8* %v4_cd04, align 1
  %v0_cd08 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd08 = load i32, i32* %r4.global-to-local, align 4
  %v2_cd08 = add i32 %v1_cd08, 16
  %v3_cd08 = inttoptr i32 %v2_cd08 to i32*
  store i32 %v0_cd08, i32* %v3_cd08, align 4
  %v0_cd0c = load i32, i32* %r4.global-to-local, align 4
  %v1_cd0c = add i32 %v0_cd0c, 20
  store i32 %v1_cd0c, i32* %r1.global-to-local, align 4
  %v1_cd10 = add i32 %v0_cd0c, 33
  %v2_cd10 = inttoptr i32 %v1_cd10 to i8*
  %v3_cd10 = load i8, i8* %v2_cd10, align 1
  %v4_cd10 = zext i8 %v3_cd10 to i32
  store i32 %v1_cbf4, i32* %r2.global-to-local, align 4
  %v1_cd18 = and i32 %v4_cd10, 223
  %v5_cd1c = or i32 %v1_cd18, %v4_cd1c
  store i32 %v5_cd1c, i32* %r3.global-to-local, align 4
  %v1_cd20 = trunc i32 %v5_cd1c to i8
  store i8 %v1_cd20, i8* %v2_cd10, align 1
  %v0_cd24 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd24 = add i32 %v0_cd24, 13
  %v2_cd24 = inttoptr i32 %v1_cd24 to i8*
  %v3_cd24 = load i8, i8* %v2_cd24, align 1
  %v4_cd24 = zext i8 %v3_cd24 to i32
  store i32 %v1_cc04, i32* %r3.global-to-local, align 4
  %v1_cd2c = and i32 %v4_cd24, 239
  %v5_cd30 = or i32 %v1_cd2c, %v4_cd30
  store i32 %v5_cd30, i32* %r2.global-to-local, align 4
  %v1_cd34 = trunc i32 %v5_cd30 to i8
  store i8 %v1_cd34, i8* %v2_cd24, align 1
  %v0_cd38 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd38 = add i32 %v0_cd38, 13
  %v2_cd38 = inttoptr i32 %v1_cd38 to i8*
  %v3_cd38 = load i8, i8* %v2_cd38, align 1
  %v4_cd38 = zext i8 %v3_cd38 to i32
  store i32 %v1_cc08, i32* %ip.global-to-local, align 4
  %v1_cd40 = and i32 %v4_cd38, 247
  %v5_cd44 = or i32 %v1_cd40, %v4_cd44
  store i32 %v5_cd44, i32* %r3.global-to-local, align 4
  %v1_cd48 = trunc i32 %v5_cd44 to i8
  store i8 %v1_cd48, i8* %v2_cd38, align 1
  %v0_cd4c = load i32, i32* %r1.global-to-local, align 4
  %v1_cd4c = add i32 %v0_cd4c, 13
  %v2_cd4c = inttoptr i32 %v1_cd4c to i8*
  %v3_cd4c = load i8, i8* %v2_cd4c, align 1
  %v4_cd4c = zext i8 %v3_cd4c to i32
  store i32 %v1_cc2c, i32* %r0.global-to-local, align 4
  %v1_cd54 = and i32 %v4_cd4c, 251
  %v5_cd58 = or i32 %v1_cd54, %v4_cd58
  store i32 %v5_cd58, i32* %r2.global-to-local, align 4
  %v1_cd5c = trunc i32 %v5_cd58 to i8
  store i8 %v1_cd5c, i8* %v2_cd4c, align 1
  %v0_cd60 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd60 = add i32 %v0_cd60, 13
  %v2_cd60 = inttoptr i32 %v1_cd60 to i8*
  %v3_cd60 = load i8, i8* %v2_cd60, align 1
  %v4_cd60 = zext i8 %v3_cd60 to i32
  store i32 %v1_cc30, i32* %r2.global-to-local, align 4
  %v1_cd68 = and i32 %v4_cd60, 253
  %v4_cd6c = or i32 %v1_cd68, %v3_cd6c
  store i32 %v4_cd6c, i32* %r3.global-to-local, align 4
  %v1_cd70 = trunc i32 %v4_cd6c to i8
  store i8 %v1_cd70, i8* %v2_cd60, align 1
  %v0_cd74 = load i32, i32* %r1.global-to-local, align 4
  %v1_cd74 = add i32 %v0_cd74, 12
  %v2_cd74 = inttoptr i32 %v1_cd74 to i8*
  %v3_cd74 = load i8, i8* %v2_cd74, align 1
  %v4_cd74 = zext i8 %v3_cd74 to i32
  store i32 %v4_cd74, i32* %r2.global-to-local, align 4
  %v1_cd78 = add i32 %v0_cd74, 13
  %v2_cd78 = inttoptr i32 %v1_cd78 to i8*
  %v3_cd78 = load i8, i8* %v2_cd78, align 1
  %v4_cd78 = zext i8 %v3_cd78 to i32
  %tmp84 = urem i8 %v3_cd74, 16
  %v1_cd80 = zext i8 %tmp84 to i32
  %v1_cd84 = and i32 %v4_cd78, 254
  %v2_cd88 = or i32 %v1_cd84, %v1_cc3c
  %v1_cd8c = or i32 %v1_cd80, 160
  store i32 %v1_cd8c, i32* %r2.global-to-local, align 4
  %v1_cd90 = trunc i32 %v2_cd88 to i8
  store i8 %v1_cd90, i8* %v2_cd78, align 1
  %v0_cd94 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd94 = trunc i32 %v0_cd94 to i8
  %v2_cd94 = load i32, i32* %r1.global-to-local, align 4
  %v3_cd94 = add i32 %v2_cd94, 12
  %v4_cd94 = inttoptr i32 %v3_cd94 to i8*
  store i8 %v1_cd94, i8* %v4_cd94, align 1
  store i32 %v3_cd9c, i32* %r0.global-to-local, align 4
  store i32 %v7_cd9c, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_cda8 = load i32, i32* %r1.global-to-local, align 4
  %v3_cda8 = add i32 %v2_cda8, 3
  %v4_cda8 = inttoptr i32 %v3_cda8 to i8*
  store i8 %v5_cc58, i8* %v4_cda8, align 1
  %v0_cdac = load i32, i32* %r0.global-to-local, align 4
  %v1_cdac = trunc i32 %v0_cdac to i8
  %v2_cdac = load i32, i32* %r1.global-to-local, align 4
  %v3_cdac = add i32 %v2_cdac, 1
  %v4_cdac = inttoptr i32 %v3_cdac to i8*
  store i8 %v1_cdac, i8* %v4_cdac, align 1
  %v0_cdb0 = load i32, i32* @r6, align 4
  %v1_cdb0 = trunc i32 %v0_cdb0 to i8
  %v2_cdb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_cdb0 = add i32 %v2_cdb0, 2
  %v4_cdb0 = inttoptr i32 %v3_cdb0 to i8*
  store i8 %v1_cdb0, i8* %v4_cdb0, align 1
  %v0_cdb4 = load i32, i32* @r5, align 4
  %v1_cdb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_cdb4 = add i32 %v1_cdb4, 4
  %v3_cdb4 = inttoptr i32 %v2_cdb4 to i32*
  store i32 %v0_cdb4, i32* %v3_cdb4, align 4
  %v0_cdb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_cdb8 = trunc i32 %v0_cdb8 to i8
  %v2_cdb8 = load i32, i32* %r4.global-to-local, align 4
  %v3_cdb8 = add i32 %v2_cdb8, 41
  %v4_cdb8 = inttoptr i32 %v3_cdb8 to i8*
  store i8 %v1_cdb8, i8* %v4_cdb8, align 1
  %v0_cdbc = load i32, i32* %r3.global-to-local, align 4
  %v1_cdbc = trunc i32 %v0_cdbc to i8
  %v2_cdbc = load i32, i32* %r4.global-to-local, align 4
  %v3_cdbc = add i32 %v2_cdbc, 40
  %v4_cdbc = inttoptr i32 %v3_cdbc to i8*
  store i8 %v1_cdbc, i8* %v4_cdbc, align 1
  %v0_cdc0 = call i32 @function_e82c()
  %v1_cdc4 = mul i32 %v0_cdc0, 256
  %v1_cdc8 = and i32 %v1_cdc4, 3840
  %v1_cdcc = or i32 %v1_cdc8, 28672
  %v3_cdd4 = add nuw nsw i32 %v1_cdcc, 2048
  %v3_cde07 = udiv i32 %v3_cdd4, 256
  store i32 %v3_cde07, i32* %r1.global-to-local, align 4
  %v0_cde4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cde4 = add i32 %v0_cde4, 42
  store i32 %v1_cde4, i32* %r2.global-to-local, align 4
  %v4_cde8 = inttoptr i32 %v1_cde4 to i8*
  store i8 5, i8* %v4_cde8, align 1
  %v0_cdec = load i32, i32* %r1.global-to-local, align 4
  %v1_cdec = trunc i32 %v0_cdec to i8
  %v2_cdec = load i32, i32* %r2.global-to-local, align 4
  %v3_cdec = add i32 %v2_cdec, 1
  %v4_cdec = inttoptr i32 %v3_cdec to i8*
  store i8 %v1_cdec, i8* %v4_cdec, align 1
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_cdf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_cdf8 = add i32 %v2_cdf8, 47
  %v4_cdf8 = inttoptr i32 %v3_cdf8 to i8*
  store i8 10, i8* %v4_cdf8, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ce04 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce04 = trunc i32 %v0_ce04 to i8
  %v2_ce04 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce04 = add i32 %v2_ce04, 46
  %v4_ce04 = inttoptr i32 %v3_ce04 to i8*
  store i8 %v1_ce04, i8* %v4_ce04, align 1
  %v0_ce08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce08 = trunc i32 %v0_ce08 to i8
  %v2_ce08 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce08 = add i32 %v2_ce08, 45
  %v4_ce08 = inttoptr i32 %v3_ce08 to i8*
  store i8 %v1_ce08, i8* %v4_ce08, align 1
  %v0_ce0c = load i32, i32* %r0.global-to-local, align 4
  %v1_ce0c = trunc i32 %v0_ce0c to i8
  %v2_ce0c = load i32, i32* %r4.global-to-local, align 4
  %v3_ce0c = add i32 %v2_ce0c, 44
  %v4_ce0c = inttoptr i32 %v3_ce0c to i8*
  store i8 %v1_ce0c, i8* %v4_ce0c, align 1
  %v0_ce10 = call i32 @function_e82c()
  store i32 %v0_ce10, i32* %r0.global-to-local, align 4
  %v2_ce18 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce18 = add i32 %v2_ce18, 56
  %v4_ce18 = inttoptr i32 %v3_ce18 to i8*
  store i8 1, i8* %v4_ce18, align 1
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_ce28 = load i32, i32* %r4.global-to-local, align 4
  %v2_ce28 = add i32 %v1_ce28, 48
  %v3_ce28 = inttoptr i32 %v2_ce28 to i32*
  store i32 %v0_ce10, i32* %v3_ce28, align 4
  %v0_ce2c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce2c = trunc i32 %v0_ce2c to i8
  %v2_ce2c = load i32, i32* %r4.global-to-local, align 4
  %v3_ce2c = add i32 %v2_ce2c, 58
  %v4_ce2c = inttoptr i32 %v3_ce2c to i8*
  store i8 %v1_ce2c, i8* %v4_ce2c, align 1
  %v0_ce30 = load i32, i32* %r3.global-to-local, align 4
  %v1_ce30 = trunc i32 %v0_ce30 to i8
  %v2_ce30 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce30 = add i32 %v2_ce30, 59
  %v4_ce30 = inttoptr i32 %v3_ce30 to i8*
  store i8 %v1_ce30, i8* %v4_ce30, align 1
  %v0_ce34 = load i32, i32* %ip.global-to-local, align 4
  %v1_ce34 = load i32, i32* %r4.global-to-local, align 4
  %v2_ce34 = add i32 %v1_ce34, 52
  %v3_ce34 = inttoptr i32 %v2_ce34 to i32*
  store i32 %v0_ce34, i32* %v3_ce34, align 4
  %v0_ce38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce38 = trunc i32 %v0_ce38 to i8
  %v2_ce38 = load i32, i32* %r4.global-to-local, align 4
  %v3_ce38 = add i32 %v2_ce38, 57
  %v4_ce38 = inttoptr i32 %v3_ce38 to i8*
  store i8 %v1_ce38, i8* %v4_ce38, align 1
  %v3_ce3c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ce3c, i32* %r3.global-to-local, align 4
  %v1_ce40 = add i32 %v3_ce3c, 1
  store i32 %v1_ce40, i32* @r4, align 4
  %v0_ce44 = load i32, i32* @sl, align 4
  %v9_ce44 = icmp eq i32 %v0_ce44, %v1_ce40
  store i1 %v9_ce44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ce40, i32* %stack_var_-40, align 4
  %v8_ce4c = icmp sgt i32 %v0_ce44, %v1_ce40
  br i1 %v8_ce4c, label %dec_label_pc_cc60, label %dec_label_pc_ce50

dec_label_pc_ce50:                                ; preds = %bb76, %dec_label_pc_cb6c
  %v0_ce50 = phi i32 [ %v0_cb9c, %dec_label_pc_cb6c ], [ %v0_ce44, %bb76 ]
  %v2_ce50 = icmp eq i32 %v0_ce50, 0
  store i1 %v2_ce50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d008 = icmp eq i32 %v3_cb74, 65535
  %v2_d084 = icmp eq i32 %v1_cb98, 0
  %v2_ce8c = icmp eq i32 %v6_cb20, -1
  %v7_ce8c = icmp eq i32 %v6_cb20, -1
  br label %dec_label_pc_ce58.outer

dec_label_pc_ce58.outer:                          ; preds = %dec_label_pc_cf84, %dec_label_pc_ce50
  %v1_ce58.ph.in = phi i32 [ %v1_cf78, %dec_label_pc_cf84 ], [ %v0_ce50, %dec_label_pc_ce50 ]
  %v0_ce58.ph = phi i1 [ %v2_cf84, %dec_label_pc_cf84 ], [ %v2_ce50, %dec_label_pc_ce50 ]
  %v1_ce58.ph = icmp slt i32 %v1_ce58.ph.in, 0
  %v4_ce58 = or i1 %v1_ce58.ph, %v0_ce58.ph
  br label %dec_label_pc_ce58

dec_label_pc_ce58:                                ; preds = %dec_label_pc_ce58.outer, %dec_label_pc_ce58
  br i1 %v4_ce58, label %dec_label_pc_ce58, label %dec_label_pc_ce5c

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_ce58
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_cee4, %dec_label_pc_ce5c
  %v1_ce78 = phi i32 [ %v1_cf74, %dec_label_pc_cee4 ], [ 0, %dec_label_pc_ce5c ]
  %v5_ce6c = mul i32 %v1_ce78, 24
  %v1_ce70 = load i32, i32* @r8, align 4
  %v2_ce70 = add i32 %v1_ce70, %v5_ce6c
  store i32 %v2_ce70, i32* %r3.global-to-local, align 4
  %v1_ce74 = add i32 %v2_ce70, 20
  %v2_ce74 = inttoptr i32 %v1_ce74 to i8*
  %v3_ce74 = load i8, i8* %v2_ce74, align 1
  %v4_ce74 = zext i8 %v3_ce74 to i32
  store i32 %v4_ce74, i32* %r2.global-to-local, align 4
  %v0_ce78 = load i32, i32* %fp.global-to-local, align 4
  %v4_ce78 = mul i32 %v1_ce78, 4
  %v5_ce78 = add i32 %v0_ce78, %v4_ce78
  %v6_ce78 = inttoptr i32 %v5_ce78 to i32*
  %v7_ce78 = load i32, i32* %v6_ce78, align 4
  store i32 %v7_ce78, i32* @r5, align 4
  %v7_ce7c = icmp eq i8 %v3_ce74, 31
  store i1 %v7_ce7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ce80 = add i32 %v7_ce78, 20
  store i32 %v1_ce80, i32* @r6, align 4
  %tmp85 = icmp ult i8 %v3_ce74, 32
  br i1 %tmp85, label %dec_label_pc_cf90, label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce68
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  store i1 %v7_ce8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce8c, label %dec_label_pc_cff8, label %dec_label_pc_ce94

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_ce88
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d008, label %dec_label_pc_d014, label %dec_label_pc_cea8

dec_label_pc_cea8:                                ; preds = %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge, %dec_label_pc_ce94
  %v1_ceac = phi i32 [ %v1_ceac.pre, %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge ], [ 65535, %dec_label_pc_ce94 ]
  store i32 %v3_cb90, i32* %r3.global-to-local, align 4
  %v9_ceac = icmp eq i32 %v3_cb90, %v1_ceac
  store i1 %v9_ceac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceac, label %dec_label_pc_d030, label %dec_label_pc_ceb4

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge, %dec_label_pc_cea8
  %v1_ceb8 = phi i32 [ %v1_ceb8.pre, %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge ], [ %v1_ceac, %dec_label_pc_cea8 ]
  store i32 %v3_cb94, i32* %ip.global-to-local, align 4
  %v9_ceb8 = icmp eq i32 %v3_cb94, %v1_ceb8
  store i1 %v9_ceb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ceb8, label %dec_label_pc_d04c, label %dec_label_pc_cec0

dec_label_pc_cec0:                                ; preds = %dec_label_pc_d030.dec_label_pc_cec0_crit_edge, %dec_label_pc_ceb4
  %v1_cec4 = phi i32 [ %v1_cec4.pre, %dec_label_pc_d030.dec_label_pc_cec0_crit_edge ], [ %v1_ceb8, %dec_label_pc_ceb4 ]
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %v9_cec4 = icmp eq i32 %v5_ca5c, %v1_cec4
  store i1 %v9_cec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cec4, label %dec_label_pc_d068, label %dec_label_pc_cecc

dec_label_pc_cecc:                                ; preds = %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge, %dec_label_pc_cec0
  %v1_ced0 = phi i32 [ %v1_ced0.pre, %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge ], [ %v1_cec4, %dec_label_pc_cec0 ]
  store i32 %v6_ca74, i32* %r2.global-to-local, align 4
  %v9_ced0 = icmp eq i32 %v6_ca74, %v1_ced0
  store i1 %v9_ced0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ced0, label %dec_label_pc_d07c, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_d068, %dec_label_pc_cecc
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  store i1 %v2_d084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d084, label %dec_label_pc_cee4, label %dec_label_pc_d090

dec_label_pc_cee4:                                ; preds = %dec_label_pc_ced8, %dec_label_pc_d07c, %dec_label_pc_d090
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cee8 = load i32, i32* %r7.global-to-local, align 4
  %v1_cee8 = trunc i32 %v0_cee8 to i8
  %v2_cee8 = load i32, i32* @r5, align 4
  %v3_cee8 = add i32 %v2_cee8, 10
  %v4_cee8 = inttoptr i32 %v3_cee8 to i8*
  store i8 %v1_cee8, i8* %v4_cee8, align 1
  %v0_ceec = load i32, i32* %r7.global-to-local, align 4
  %v1_ceec = trunc i32 %v0_ceec to i8
  %v2_ceec = load i32, i32* @r5, align 4
  %v3_ceec = add i32 %v2_ceec, 11
  %v4_ceec = inttoptr i32 %v3_ceec to i8*
  store i8 %v1_ceec, i8* %v4_ceec, align 1
  %v0_cef0 = load i32, i32* @r5, align 4
  store i32 %v0_cef0, i32* @r0, align 4
  %v2_cef4 = call i32 @function_d0b8(i32 %v0_cef0, i32 20)
  %v3_cef4 = trunc i32 %v2_cef4 to i8
  %v4_cef827 = udiv i32 %v2_cef4, 256
  %v1_cefc = trunc i32 %v4_cef827 to i8
  %v2_cefc = load i32, i32* @r5, align 4
  %v3_cefc = add i32 %v2_cefc, 11
  %v4_cefc = inttoptr i32 %v3_cefc to i8*
  store i8 %v1_cefc, i8* %v4_cefc, align 1
  %v3_cf00 = load i32, i32* @r5, align 4
  %v4_cf00 = add i32 %v3_cf00, 10
  %v5_cf00 = inttoptr i32 %v4_cf00 to i8*
  store i8 %v3_cef4, i8* %v5_cf00, align 1
  %v0_cf04 = load i32, i32* @r6, align 4
  store i32 %v0_cf04, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_cf10 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf10 = trunc i32 %v0_cf10 to i8
  %v3_cf10 = add i32 %v0_cf04, 16
  %v4_cf10 = inttoptr i32 %v3_cf10 to i8*
  store i8 %v1_cf10, i8* %v4_cf10, align 1
  %v0_cf14 = load i32, i32* %r7.global-to-local, align 4
  %v1_cf14 = trunc i32 %v0_cf14 to i8
  %v2_cf14 = load i32, i32* @r6, align 4
  %v3_cf14 = add i32 %v2_cf14, 17
  %v4_cf14 = inttoptr i32 %v3_cf14 to i8*
  store i8 %v1_cf14, i8* %v4_cf14, align 1
  %v0_cf18 = load i32, i32* @r5, align 4
  store i32 %v0_cf18, i32* %r0.global-to-local, align 4
  %v4_cf1c = call i32 @function_d114(i32 %v0_cf18, i32 %v0_cf04, i32 10240, i32 40)
  %v5_cf1c = trunc i32 %v4_cf1c to i8
  store i32 %v4_cf1c, i32* %r0.global-to-local, align 4
  %v4_cf2028 = udiv i32 %v4_cf1c, 256
  %v1_cf24 = trunc i32 %v4_cf2028 to i8
  %v2_cf24 = load i32, i32* @r6, align 4
  %v3_cf24 = add i32 %v2_cf24, 17
  %v4_cf24 = inttoptr i32 %v3_cf24 to i8*
  store i8 %v1_cf24, i8* %v4_cf24, align 1
  %v3_cf28 = load i32, i32* @r6, align 4
  %v4_cf28 = add i32 %v3_cf28, 16
  %v5_cf28 = inttoptr i32 %v4_cf28 to i8*
  store i8 %v5_cf1c, i8* %v5_cf28, align 1
  %v3_cf2c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cf2c, i32* %r3.global-to-local, align 4
  %v0_cf30 = load i32, i32* @r5, align 4
  %v1_cf30 = add i32 %v0_cf30, 20
  %v2_cf30 = inttoptr i32 %v1_cf30 to i32*
  %v3_cf30 = load i32, i32* %v2_cf30, align 4
  %v3_cf38 = udiv i32 %v3_cf30, 65536
  store i32 %v3_cf38, i32* %r2.global-to-local, align 4
  %v5_cf3c = mul i32 %v3_cf2c, 24
  %v1_cf40 = load i32, i32* @r8, align 4
  %v2_cf40 = add i32 %v1_cf40, %v5_cf3c
  store i32 %v2_cf40, i32* %ip.global-to-local, align 4
  %v3_cf4426 = udiv i32 %v3_cf30, 16777216
  %v1_cf48 = trunc i32 %v3_cf4426 to i8
  %v3_cf48 = add i32 %v2_cf40, 3
  %v4_cf48 = inttoptr i32 %v3_cf48 to i8*
  store i8 %v1_cf48, i8* %v4_cf48, align 1
  %v0_cf4c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf4c = trunc i32 %v0_cf4c to i8
  %v2_cf4c = load i32, i32* %ip.global-to-local, align 4
  %v3_cf4c = add i32 %v2_cf4c, 2
  %v4_cf4c = inttoptr i32 %v3_cf4c to i8*
  store i8 %v1_cf4c, i8* %v4_cf4c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cf54 = load i32, i32* @r5, align 4
  store i32 %v0_cf54, i32* %r1.global-to-local, align 4
  %v0_cf58 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_cf58, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_cf64 = load i32, i32* %ip.global-to-local, align 4
  %v6_cf6c = inttoptr i32 %v0_cf54 to i32*
  %v7_cf6c = call i32 @function_1349c(i32 %v0_cf58, i32* %v6_cf6c, i32 60, i32 16384, i32 %v0_cf64, i32 16)
  %v3_cf70 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cf70, i32* %r3.global-to-local, align 4
  %v1_cf74 = add i32 %v3_cf70, 1
  store i32 %v1_cf74, i32* %r0.global-to-local, align 4
  %v1_cf78 = load i32, i32* @sl, align 4
  %v9_cf78 = icmp eq i32 %v1_cf74, %v1_cf78
  store i1 %v9_cf78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf74, i32* %stack_var_-40, align 4
  %v5_cf80 = icmp slt i32 %v1_cf74, %v1_cf78
  br i1 %v5_cf80, label %dec_label_pc_ce68, label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cee4
  %v2_cf84 = icmp eq i32 %v1_cf78, 0
  store i1 %v2_cf84, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce58.outer

dec_label_pc_cf90:                                ; preds = %dec_label_pc_ce68
  %v1_cf90 = add i32 %v2_ce70, 16
  %v2_cf90 = inttoptr i32 %v1_cf90 to i32*
  %v3_cf90 = load i32, i32* %v2_cf90, align 4
  store i32 %v3_cf90, i32* %r4.global-to-local, align 4
  %v0_cf94 = call i32 @function_e82c()
  store i32 %v0_cf94, i32* %r0.global-to-local, align 4
  %v3_cf98 = load i32, i32* %stack_var_-40, align 4
  %v5_cfa0 = mul i32 %v3_cf98, 24
  %v0_cfa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cfa8 = load i32, i32* @r8, align 4
  %v2_cfa8 = add i32 %v1_cfa8, %v5_cfa0
  store i32 %v2_cfa8, i32* %r1.global-to-local, align 4
  %v1_cfac = and i32 %v0_cfa4, 65280
  store i32 %v1_cfac, i32* %r3.global-to-local, align 4
  %v1_cfa4 = udiv i32 %v0_cfa4, 256
  %v3_cfb0 = and i32 %v1_cfa4, 65280
  store i32 %v3_cfb0, i32* %r2.global-to-local, align 4
  %v3_cfb4 = mul i32 %v0_cfa4, 16777216
  store i32 %v3_cfb4, i32* %ip.global-to-local, align 4
  %v1_cfb8 = add i32 %v2_cfa8, 20
  %v2_cfb8 = inttoptr i32 %v1_cfb8 to i8*
  %v3_cfb8 = load i8, i8* %v2_cfb8, align 1
  %v4_cfb8 = zext i8 %v3_cfb8 to i32
  %v4_cfbc = mul nuw nsw i32 %v1_cfac, 256
  %v5_cfbc = or i32 %v4_cfbc, %v3_cfb4
  store i32 %v5_cfbc, i32* %ip.global-to-local, align 4
  %v2_cfc4 = call i32 @llvm.bswap.i32(i32 %v0_cfa4)
  %v7_cfc8 = lshr i32 %v0_cf94, %v4_cfb8
  %v8_cfc8 = add i32 %v7_cfc8, %v2_cfc4
  store i32 %v8_cfc8, i32* %r2.global-to-local, align 4
  %v3_cfd4 = mul i32 %v8_cfc8, 16777216
  %v1_cfcc = mul i32 %v8_cfc8, 256
  %v4_cfd8 = and i32 %v1_cfcc, 16711680
  %v5_cfd8 = or i32 %v4_cfd8, %v3_cfd4
  store i32 %v5_cfd8, i32* %r1.global-to-local, align 4
  store i32 %v6_cb20, i32* %r0.global-to-local, align 4
  %v2_cfe8 = call i32 @llvm.bswap.i32(i32 %v8_cfc8)
  store i32 %v2_cfe8, i32* %r3.global-to-local, align 4
  store i1 %v7_ce8c, i1* %cpsr_z.global-to-local, align 1
  %v1_cff0 = load i32, i32* @r5, align 4
  %v2_cff0 = add i32 %v1_cff0, 16
  %v3_cff0 = inttoptr i32 %v2_cff0 to i32*
  store i32 %v2_cfe8, i32* %v3_cff0, align 4
  br i1 %v2_ce8c, label %dec_label_pc_cff8, label %dec_label_pc_ce94

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_ce88
  %v0_cff8 = call i32 @function_e82c()
  store i32 %v0_cff8, i32* %r0.global-to-local, align 4
  store i32 %v3_cb74, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d008, i1* %cpsr_z.global-to-local, align 1
  %v1_d00c = load i32, i32* @r5, align 4
  %v2_d00c = add i32 %v1_d00c, 12
  %v3_d00c = inttoptr i32 %v2_d00c to i32*
  store i32 %v0_cff8, i32* %v3_d00c, align 4
  br i1 %v3_d008, label %dec_label_pc_d014, label %dec_label_pc_cff8.dec_label_pc_cea8_crit_edge

dec_label_pc_cff8.dec_label_pc_cea8_crit_edge:    ; preds = %dec_label_pc_cff8
  %v1_ceac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cea8

dec_label_pc_d014:                                ; preds = %dec_label_pc_cff8, %dec_label_pc_ce94
  %v0_d014 = call i32 @function_e82c()
  %v1_d014 = trunc i32 %v0_d014 to i8
  store i32 %v0_d014, i32* %r0.global-to-local, align 4
  %v4_d01829 = udiv i32 %v0_d014, 256
  %v1_d01c = trunc i32 %v4_d01829 to i8
  %v2_d01c = load i32, i32* @r5, align 4
  %v3_d01c = add i32 %v2_d01c, 5
  %v4_d01c = inttoptr i32 %v3_d01c to i8*
  store i8 %v1_d01c, i8* %v4_d01c, align 1
  store i32 %v3_cb90, i32* %r3.global-to-local, align 4
  %v1_d024 = load i32, i32* @r4, align 4
  %v9_d024 = icmp eq i32 %v3_cb90, %v1_d024
  store i1 %v9_d024, i1* %cpsr_z.global-to-local, align 1
  %v3_d028 = load i32, i32* @r5, align 4
  %v4_d028 = add i32 %v3_d028, 4
  %v5_d028 = inttoptr i32 %v4_d028 to i8*
  store i8 %v1_d014, i8* %v5_d028, align 1
  %v0_d02c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d02c, label %dec_label_pc_d030, label %dec_label_pc_d014.dec_label_pc_ceb4_crit_edge

dec_label_pc_d014.dec_label_pc_ceb4_crit_edge:    ; preds = %dec_label_pc_d014
  %v1_ceb8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ceb4

dec_label_pc_d030:                                ; preds = %dec_label_pc_d014, %dec_label_pc_cea8
  %v0_d030 = call i32 @function_e82c()
  %v1_d030 = trunc i32 %v0_d030 to i8
  store i32 %v0_d030, i32* %r0.global-to-local, align 4
  store i32 %v3_cb94, i32* %ip.global-to-local, align 4
  %v4_d038 = sdiv i32 %v0_d030, 256
  store i32 %v4_d038, i32* %r3.global-to-local, align 4
  %v1_d03c = load i32, i32* @r4, align 4
  %v9_d03c = icmp eq i32 %v3_cb94, %v1_d03c
  store i1 %v9_d03c, i1* %cpsr_z.global-to-local, align 1
  %v3_d040 = load i32, i32* @r5, align 4
  %v4_d040 = add i32 %v3_d040, 20
  %v5_d040 = inttoptr i32 %v4_d040 to i8*
  store i8 %v1_d030, i8* %v5_d040, align 1
  %v0_d044 = load i32, i32* %r3.global-to-local, align 4
  %v1_d044 = trunc i32 %v0_d044 to i8
  %v2_d044 = load i32, i32* @r6, align 4
  %v3_d044 = add i32 %v2_d044, 1
  %v4_d044 = inttoptr i32 %v3_d044 to i8*
  store i8 %v1_d044, i8* %v4_d044, align 1
  %v0_d048 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d048, label %dec_label_pc_d04c, label %dec_label_pc_d030.dec_label_pc_cec0_crit_edge

dec_label_pc_d030.dec_label_pc_cec0_crit_edge:    ; preds = %dec_label_pc_d030
  %v1_cec4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cec0

dec_label_pc_d04c:                                ; preds = %dec_label_pc_d030, %dec_label_pc_ceb4
  %v0_d04c = call i32 @function_e82c()
  %v1_d04c = trunc i32 %v0_d04c to i8
  %v4_d050 = sdiv i32 %v0_d04c, 256
  store i32 %v4_d050, i32* %r3.global-to-local, align 4
  %v3_d054 = load i32, i32* @r6, align 4
  %v4_d054 = add i32 %v3_d054, 2
  %v5_d054 = inttoptr i32 %v4_d054 to i8*
  store i8 %v1_d04c, i8* %v5_d054, align 1
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %v1_d05c = load i32, i32* @r4, align 4
  %v9_d05c = icmp eq i32 %v5_ca5c, %v1_d05c
  store i1 %v9_d05c, i1* %cpsr_z.global-to-local, align 1
  %v0_d060 = load i32, i32* %r3.global-to-local, align 4
  %v1_d060 = trunc i32 %v0_d060 to i8
  %v2_d060 = load i32, i32* @r6, align 4
  %v3_d060 = add i32 %v2_d060, 3
  %v4_d060 = inttoptr i32 %v3_d060 to i8*
  store i8 %v1_d060, i8* %v4_d060, align 1
  %v0_d064 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d064, label %dec_label_pc_d068, label %dec_label_pc_d04c.dec_label_pc_cecc_crit_edge

dec_label_pc_d04c.dec_label_pc_cecc_crit_edge:    ; preds = %dec_label_pc_d04c
  %v1_ced0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cecc

dec_label_pc_d068:                                ; preds = %dec_label_pc_d04c, %dec_label_pc_cec0
  %v0_d068 = call i32 @function_e82c()
  store i32 %v0_d068, i32* %r0.global-to-local, align 4
  store i32 %v6_ca74, i32* %r2.global-to-local, align 4
  %v1_d070 = load i32, i32* @r4, align 4
  %v9_d070 = icmp eq i32 %v6_ca74, %v1_d070
  store i1 %v9_d070, i1* %cpsr_z.global-to-local, align 1
  %v1_d074 = load i32, i32* @r6, align 4
  %v2_d074 = add i32 %v1_d074, 4
  %v3_d074 = inttoptr i32 %v2_d074 to i32*
  store i32 %v0_d068, i32* %v3_d074, align 4
  br i1 %v9_d070, label %dec_label_pc_d07c, label %dec_label_pc_ced8

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d068, %dec_label_pc_cecc
  %v0_d07c = call i32 @function_e82c()
  store i32 %v0_d07c, i32* %r0.global-to-local, align 4
  store i32 %v1_cb98, i32* %r3.global-to-local, align 4
  store i1 %v2_d084, i1* %cpsr_z.global-to-local, align 1
  %v1_d088 = load i32, i32* @r6, align 4
  %v2_d088 = add i32 %v1_d088, 8
  %v3_d088 = inttoptr i32 %v2_d088 to i32*
  store i32 %v0_d07c, i32* %v3_d088, align 4
  br i1 %v2_d084, label %dec_label_pc_cee4, label %dec_label_pc_d090

dec_label_pc_d090:                                ; preds = %dec_label_pc_ced8, %dec_label_pc_d07c
  %v0_d090 = call i32 @function_e82c()
  %v1_d090 = trunc i32 %v0_d090 to i8
  store i32 %v0_d090, i32* %r0.global-to-local, align 4
  %v4_d094 = sdiv i32 %v0_d090, 256
  store i32 %v4_d094, i32* %r3.global-to-local, align 4
  %v1_d098 = trunc i32 %v4_d094 to i8
  %v2_d098 = load i32, i32* @r6, align 4
  %v3_d098 = add i32 %v2_d098, 19
  %v4_d098 = inttoptr i32 %v3_d098 to i8*
  store i8 %v1_d098, i8* %v4_d098, align 1
  %v3_d09c = load i32, i32* @r6, align 4
  %v4_d09c = add i32 %v3_d09c, 18
  %v5_d09c = inttoptr i32 %v4_d09c to i8*
  store i8 %v1_d090, i8* %v5_d09c, align 1
  br label %dec_label_pc_cee4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_cb44
  %v0_d0a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_d0a4, i32* %r0.global-to-local, align 4
  %v1_d0a8 = call i32 @function_12c1c(i32 %v0_d0a4)
  store i32 %v1_d0a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d0ac

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_c96c, %dec_label_pc_d0a4
  %v29_d0b0 = phi i32 [ %v3_cb34, %dec_label_pc_c96c ], [ %v1_d0a8, %dec_label_pc_d0a4 ]
  store i32 %v3_c96c, i32* %r4.global-to-local, align 4
  store i32 %v12_c96c, i32* %r7.global-to-local, align 4
  ret i32 %v29_d0b0

; uselistorder directives
  uselistorder i32 %v4_d094, { 1, 0 }
  uselistorder i32 %v0_d090, { 0, 2, 1 }
  uselistorder i32 %v0_d030, { 0, 2, 1 }
  uselistorder i32 %v0_d014, { 0, 2, 1 }
  uselistorder i32 %v2_cfe8, { 1, 0 }
  uselistorder i32 %v8_cfc8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_cfb4, { 1, 0 }
  uselistorder i32 %v0_cfa4, { 2, 0, 1, 3 }
  uselistorder i1 %v2_cf84, { 1, 0 }
  uselistorder i32 %v1_cf78, { 1, 2, 3, 0 }
  uselistorder i32 %v1_cf74, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_cf1c, { 0, 2, 1 }
  uselistorder i32 %v0_cf04, { 1, 0, 2 }
  uselistorder i1 %v7_ce8c, { 2, 1, 0 }
  uselistorder i1 %v2_d084, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d008, { 3, 2, 0, 1 }
  uselistorder i32 %v1_ce40, { 1, 0, 2, 3 }
  uselistorder i8 %v5_cc58, { 1, 0 }
  uselistorder i32 %v3_cc40, { 1, 0 }
  uselistorder i32 %v1_cc3c, { 1, 0 }
  uselistorder i32 %v1_cc30, { 1, 0 }
  uselistorder i32 %v1_cc2c, { 1, 0 }
  uselistorder i32 %v1_cc08, { 1, 0 }
  uselistorder i32 %v1_cc04, { 1, 0 }
  uselistorder i32 %v3_cbf8, { 1, 0 }
  uselistorder i32 %v1_cbf4, { 1, 0 }
  uselistorder i32 %v1_cbd0, { 1, 0 }
  uselistorder i32 %v1_cbc8, { 1, 0 }
  uselistorder i32 %v1_cb98, { 2, 1, 3, 0 }
  uselistorder i32 %v3_cb90, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_cb88, { 3, 0, 1, 2 }
  uselistorder i32 %v0_cb84, { 0, 2, 1, 4, 3 }
  uselistorder i1 %v7_cb64, { 1, 0 }
  uselistorder i1 %v7_cb38, { 1, 0 }
  uselistorder i32 %v3_cb34, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cb20, { 6, 4, 0, 5, 1, 3, 2 }
  uselistorder i32 %v6_ca74, { 3, 2, 1, 0 }
  uselistorder i32 %v5_ca5c, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %v1_ca0c, { 1, 0 }
  uselistorder i32 %v7_c9c8, { 0, 1, 3, 2 }
  uselistorder i32 %v5_c9a4, { 1, 0 }
  uselistorder i32 %v1_c970, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 29, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 7, 5, 8, 9, 11, 10, 13, 12, 14, 16, 15, 17, 18, 19, 22, 20, 21, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 35, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_85e0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106 }
  uselistorder label %dec_label_pc_d0ac, { 1, 0 }
  uselistorder label %dec_label_pc_d090, { 1, 0 }
  uselistorder label %dec_label_pc_cee4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ce58, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d0b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d0b8:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_d0e8, label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0b8
  %v0_d0c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_d0c8

dec_label_pc_d0c8:                                ; preds = %dec_label_pc_d0c8, %dec_label_pc_d0c4
  %v0_d0dc = phi i32 [ %v2_d0dc, %dec_label_pc_d0c8 ], [ 0, %dec_label_pc_d0c4 ]
  %v0_d0d0 = phi i32 [ %v1_d0d0, %dec_label_pc_d0c8 ], [ %arg1, %dec_label_pc_d0c4 ]
  %v0_d0e0 = phi i32 [ %v1_d0e0, %dec_label_pc_d0c8 ], [ %v0_d0c8.pre, %dec_label_pc_d0c4 ]
  %v1_d0c8 = inttoptr i32 %v0_d0e0 to i8*
  %v2_d0c8 = load i8, i8* %v1_d0c8, align 1
  %v3_d0c8 = zext i8 %v2_d0c8 to i32
  %v1_d0cc = add i32 %v0_d0e0, 1
  %v2_d0cc = inttoptr i32 %v1_d0cc to i8*
  %v3_d0cc = load i8, i8* %v2_d0cc, align 1
  %v4_d0cc = zext i8 %v3_d0cc to i32
  %v1_d0d0 = add i32 %v0_d0d0, -2
  %v4_d0d4 = mul nuw nsw i32 %v4_d0cc, 256
  %v5_d0d4 = or i32 %v4_d0d4, %v3_d0c8
  %v2_d0dc = add i32 %v5_d0d4, %v0_d0dc
  %v1_d0e0 = add i32 %v0_d0e0, 2
  store i32 %v1_d0e0, i32* @r0, align 4
  %v1_d0d0.cmp = icmp ugt i32 %v1_d0d0, 1
  br i1 %v1_d0d0.cmp, label %dec_label_pc_d0c8, label %dec_label_pc_d0e8

dec_label_pc_d0e8:                                ; preds = %dec_label_pc_d0c8, %dec_label_pc_d0b8
  %v1_d0f0 = phi i32 [ 0, %dec_label_pc_d0b8 ], [ %v2_d0dc, %dec_label_pc_d0c8 ]
  %v0_d0e8 = phi i32 [ %arg1, %dec_label_pc_d0b8 ], [ %v1_d0d0, %dec_label_pc_d0c8 ]
  %v7_d0e8 = icmp eq i32 %v0_d0e8, 1
  br i1 %v7_d0e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d0e8
  %v1_d0ec = load i32, i32* @r0, align 4
  %v2_d0ec = inttoptr i32 %v1_d0ec to i8*
  %v3_d0ec = load i8, i8* %v2_d0ec, align 1
  %v4_d0ec = zext i8 %v3_d0ec to i32
  %v3_d0f0 = add i32 %v1_d0f0, %v4_d0ec
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d0e8, %bb
  %v0_d0f4 = phi i32 [ %v1_d0f0, %dec_label_pc_d0e8 ], [ %v3_d0f0, %bb ]
  %v3_d0f8 = urem i32 %v0_d0f4, 65536
  %v4_d0fc = udiv i32 %v0_d0f4, 65536
  %v5_d0fc = add nuw nsw i32 %v4_d0fc, %v3_d0f8
  %v4_d100 = udiv i32 %v5_d0fc, 65536
  %v5_d100 = add nuw nsw i32 %v4_d100, %v5_d0fc
  %v1_d104 = urem i32 %v5_d100, 65536
  %v3_d10c = xor i32 %v1_d104, 65535
  ret i32 %v3_d10c

; uselistorder directives
  uselistorder i32 %v5_d0fc, { 1, 0 }
  uselistorder i32 %v1_d0e0, { 1, 0 }
  uselistorder i32 %v1_d0d0, { 1, 0, 2 }
  uselistorder i32 %v0_d0e0, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d114(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d114:
  %v3_d124 = urem i32 %arg2, 65536
  %v1_d128 = add i32 %arg1, 12
  %v1_d12c = inttoptr i32 %v1_d128 to i32*
  %v2_d12c = load i32, i32* %v1_d12c, align 4
  %v3_d12c = add i32 %arg1, 16
  %v4_d12c = inttoptr i32 %v3_d12c to i32*
  %v5_d12c = load i32, i32* %v4_d12c, align 4
  %v7_d130 = icmp sgt i32 %arg3, 1
  br i1 %v7_d130, label %dec_label_pc_d13c.preheader, label %dec_label_pc_d15c

dec_label_pc_d13c.preheader:                      ; preds = %dec_label_pc_d114
  %v0_d13c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d13c.preheader, %dec_label_pc_d13c
  %v0_d150 = phi i32 [ 0, %dec_label_pc_d13c.preheader ], [ %v2_d150, %dec_label_pc_d13c ]
  %v0_d144 = phi i32 [ %arg3, %dec_label_pc_d13c.preheader ], [ %v1_d144, %dec_label_pc_d13c ]
  %v0_d154 = phi i32 [ %v0_d13c.pre, %dec_label_pc_d13c.preheader ], [ %v1_d154, %dec_label_pc_d13c ]
  %v1_d13c = inttoptr i32 %v0_d154 to i8*
  %v2_d13c = load i8, i8* %v1_d13c, align 1
  %v3_d13c = zext i8 %v2_d13c to i32
  %v1_d140 = add i32 %v0_d154, 1
  %v2_d140 = inttoptr i32 %v1_d140 to i8*
  %v3_d140 = load i8, i8* %v2_d140, align 1
  %v4_d140 = zext i8 %v3_d140 to i32
  %v1_d144 = add nsw i32 %v0_d144, -2
  %v4_d148 = mul nuw nsw i32 %v4_d140, 256
  %v5_d148 = or i32 %v4_d148, %v3_d13c
  %v2_d150 = add i32 %v5_d148, %v0_d150
  %v1_d154 = add i32 %v0_d154, 2
  store i32 %v1_d154, i32* @r1, align 4
  %v8_d158 = icmp sgt i32 %v1_d144, 1
  br i1 %v8_d158, label %dec_label_pc_d13c, label %dec_label_pc_d15c

dec_label_pc_d15c:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d114
  %v1_d164 = phi i32 [ 0, %dec_label_pc_d114 ], [ %v2_d150, %dec_label_pc_d13c ]
  %v0_d15c = phi i32 [ %arg3, %dec_label_pc_d114 ], [ %v1_d144, %dec_label_pc_d13c ]
  %v7_d15c = icmp eq i32 %v0_d15c, 1
  br i1 %v7_d15c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d15c
  %v1_d160 = load i32, i32* @r1, align 4
  %v2_d160 = inttoptr i32 %v1_d160 to i8*
  %v3_d160 = load i8, i8* %v2_d160, align 1
  %v4_d160 = zext i8 %v3_d160 to i32
  %v3_d164 = add i32 %v4_d160, %v1_d164
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d15c, %bb
  %v0_d188 = phi i32 [ %v1_d164, %dec_label_pc_d15c ], [ %v3_d164, %bb ]
  %v3_d16c = urem i32 %v2_d12c, 65536
  %v1_d174 = add i32 %arg1, 9
  %v2_d174 = inttoptr i32 %v1_d174 to i8*
  %v3_d174 = load i8, i8* %v2_d174, align 1
  %v4_d174 = zext i8 %v3_d174 to i32
  %v3_d178 = urem i32 %v5_d12c, 65536
  %v4_d17c = udiv i32 %v2_d12c, 65536
  %v3_d184 = mul nuw nsw i32 %v4_d174, 256
  %v4_d188 = udiv i32 %v5_d12c, 65536
  %v5_d188 = add i32 %v0_d188, %v4_d188
  %v2_d18c = add i32 %v5_d188, %v3_d184
  %v5_d17c = add nuw nsw i32 %v3_d16c, %v3_d124
  %v2_d180 = add nuw nsw i32 %v5_d17c, %v4_d17c
  %v2_d190 = add nuw nsw i32 %v2_d180, %v3_d178
  %v2_d194 = add i32 %v2_d18c, %v2_d190
  %tmp = icmp ult i32 %v2_d194, 65536
  br i1 %tmp, label %dec_label_pc_d1b4, label %dec_label_pc_d1a0

dec_label_pc_d1a0:                                ; preds = %.thread, %dec_label_pc_d1a0
  %v2_d1a81 = phi i32 [ %v2_d1a8, %dec_label_pc_d1a0 ], [ %v2_d194, %.thread ]
  %v3_d1ac2.in = phi i32 [ %v2_d1a8, %dec_label_pc_d1a0 ], [ %v2_d194, %.thread ]
  %v3_d1ac2 = udiv i32 %v3_d1ac2.in, 65536
  %v3_d1a4 = urem i32 %v2_d1a81, 65536
  %v2_d1a8 = add nuw nsw i32 %v3_d1a4, %v3_d1ac2
  %tmp14 = icmp ult i32 %v2_d1a8, 65536
  br i1 %tmp14, label %dec_label_pc_d1b4.loopexit, label %dec_label_pc_d1a0

dec_label_pc_d1b4.loopexit:                       ; preds = %dec_label_pc_d1a0
  br label %dec_label_pc_d1b4

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1b4.loopexit, %.thread
  %v0_d1b4 = phi i32 [ %v2_d1a8, %dec_label_pc_d1b4.loopexit ], [ %v2_d194, %.thread ]
  %v1_d1b4 = urem i32 %v0_d1b4, 65536
  %v3_d1bc = xor i32 %v1_d1b4, 65535
  ret i32 %v3_d1bc

; uselistorder directives
  uselistorder i32 %v2_d1a8, { 2, 1, 3, 0 }
  uselistorder i32 %v2_d194, { 3, 0, 2, 1 }
  uselistorder i32 %v1_d164, { 1, 0 }
  uselistorder i32 %v1_d154, { 1, 0 }
  uselistorder i32 %v1_d144, { 0, 2, 1 }
  uselistorder i32 %v0_d154, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
}

define i32 @function_d1c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_d1c4:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d1c4 = load i32, i32* @r4, align 4
  store i32 %v3_d1c4, i32* %stack_var_-36, align 4
  %v6_d1c4 = load i32, i32* @r5, align 4
  %v9_d1c4 = load i32, i32* @r6, align 4
  %v12_d1c4 = load i32, i32* @r7, align 4
  %v15_d1c4 = load i32, i32* @r8, align 4
  %v18_d1c4 = load i32, i32* @sb, align 4
  %v21_d1c4 = load i32, i32* @sl, align 4
  %v24_d1c4 = load i32, i32* @fp, align 4
  %v2_d1d8 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_d1d8, i32* @sl, align 4
  %v3_d1e0 = mul i32 %arg1, 65536
  store i32 %v3_d1e0, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_d1ec = ptrtoint i32* %stack_var_-8773 to i32
  %v2_d1f8 = bitcast i32* %stack_var_-4677 to i8*
  %v3_d1f8 = call i32 @function_13250(i8* %v2_d1f8, i32 0)
  store i32 4096, i32* @r2, align 4
  %v2_d210 = bitcast i32* %stack_var_-8773 to i8*
  %v3_d210 = call i32 @function_13250(i8* %v2_d210, i32 0)
  %v2_d214 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_d214, i32* @r6, align 4
  store i32 513, i32* @r2, align 4
  %v3_d234 = call i32 @function_13250(i8* nonnull %stack_var_-581, i32 0)
  %v2_d238 = ptrtoint i8* %stack_var_-68 to i32
  %v1_d240 = load i32, i32* @r5, align 4
  %v4_d240 = udiv i32 %v1_d240, 16777216
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_d260 = trunc i32 %v4_d240 to i8
  %v4_d260 = call i32 @function_1277c(i8 %v3_d260, i32 16, i32 %v2_d238)
  %v2_d268 = call i32 @function_12318(i8* nonnull %stack_var_-68)
  %v7_d26c = icmp eq i32 %v2_d268, 2
  br i1 %v7_d26c, label %dec_label_pc_d734, label %dec_label_pc_d274

dec_label_pc_d274:                                ; preds = %dec_label_pc_d1c4, %dec_label_pc_d734
  %v1_d278 = call i32 @function_11d4c(i32 13)
  %v1_d280 = call i32 @function_11d4c(i32 14)
  %v1_d288 = call i32 @function_11d4c(i32 15)
  %v1_d290 = call i32 @function_11d4c(i32 17)
  %v0_d294 = load i32, i32* @r4, align 4
  %v2_d29c = inttoptr i32 %v0_d294 to i32*
  %v3_d29c = call i32 @function_11c68(i32 17, i32* %v2_d29c)
  %v0_d2a0 = load i32, i32* @r4, align 4
  %v2_d2a4 = inttoptr i32 %v3_d29c to i8*
  %v3_d2a4 = call i32 @function_12d48(i8* %v2_d2a4, i32 %v0_d2a0)
  %v7_d2a8 = icmp eq i32 %v3_d2a4, -1
  store i32 %v3_d2a4, i32* @r8, align 4
  br i1 %v7_d2a8, label %dec_label_pc_d6d0, label %dec_label_pc_d2b4.preheader

dec_label_pc_d2b4.preheader:                      ; preds = %dec_label_pc_d274
  %v4_d2c058 = call i32 @function_12570(i8* nonnull %stack_var_-581, i32 512, i32 %v3_d2a4)
  %v2_d2c460 = icmp eq i32 %v4_d2c058, 0
  br i1 %v2_d2c460, label %dec_label_pc_d454.loopexit, label %dec_label_pc_d2cc.lr.ph

dec_label_pc_d2cc.lr.ph:                          ; preds = %dec_label_pc_d2b4.preheader
  %v2_d314 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2cc.lr.ph, %dec_label_pc_d2b4.backedge
  %v3_d2d0 = load i8, i8* %stack_var_-581, align 1
  %v4_d2d0 = sext i8 %v3_d2d0 to i32
  %v2_d2d4 = icmp eq i8 %v3_d2d0, 0
  br i1 %v2_d2d4, label %bb126, label %bb

bb:                                               ; preds = %dec_label_pc_d2cc
  %v8_d2d8 = icmp eq i8 %v3_d2d0, 58
  br i1 %v8_d2d8, label %.thread6, label %dec_label_pc_d2ec

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_d304

bb126:                                            ; preds = %dec_label_pc_d2cc
  br label %dec_label_pc_d304

dec_label_pc_d2ec:                                ; preds = %bb
  %v1_d2f4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d2f0

dec_label_pc_d2f0:                                ; preds = %bb127, %dec_label_pc_d2ec
  %v0_d2f0 = phi i32 [ %v1_d2f0, %bb127 ], [ 0, %dec_label_pc_d2ec ]
  %v1_d2f0 = add i32 %v0_d2f0, 1
  %v2_d2f4 = add i32 %v1_d2f0, %v1_d2f4.pre
  %v3_d2f4 = inttoptr i32 %v2_d2f4 to i8*
  %v4_d2f4 = load i8, i8* %v3_d2f4, align 1
  %v6_d2f4 = zext i8 %v4_d2f4 to i32
  %v2_d2f8 = icmp eq i8 %v4_d2f4, 0
  br i1 %v2_d2f8, label %dec_label_pc_d304, label %bb127

bb127:                                            ; preds = %dec_label_pc_d2f0
  %v8_d2fc = icmp eq i8 %v4_d2f4, 58
  br i1 %v8_d2fc, label %dec_label_pc_d304, label %dec_label_pc_d2f0

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2f0, %bb127, %bb126, %.thread6
  %v1_d330 = phi i32 [ 0, %.thread6 ], [ 0, %bb126 ], [ %v1_d2f0, %bb127 ], [ %v1_d2f0, %dec_label_pc_d2f0 ]
  %v0_d304 = phi i32 [ %v4_d2d0, %.thread6 ], [ %v4_d2d0, %bb126 ], [ %v6_d2f4, %bb127 ], [ %v6_d2f4, %dec_label_pc_d2f0 ]
  %v2_d304 = icmp eq i32 %v0_d304, 0
  br i1 %v2_d304, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d30c

dec_label_pc_d2b4.backedge:                       ; preds = %dec_label_pc_d304, %dec_label_pc_d3dc, %dec_label_pc_d428, %dec_label_pc_d350
  %v0_d2bc = load i32, i32* @r8, align 4
  %v4_d2c0 = call i32 @function_12570(i8* nonnull %stack_var_-581, i32 512, i32 %v0_d2bc)
  %v2_d2c4 = icmp eq i32 %v4_d2c0, 0
  br i1 %v2_d2c4, label %dec_label_pc_d454.loopexit, label %dec_label_pc_d2cc

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d304
  %v1_d310 = add i32 %v1_d330, 2
  %v2_d318 = add i32 %v1_d310, %v2_d314
  %v1_d31c = add i32 %v2_d318, -545
  %v2_d31c = inttoptr i32 %v1_d31c to i8*
  %v3_d31c = load i8, i8* %v2_d31c, align 1
  %v2_d320 = icmp eq i8 %v3_d31c, 0
  br i1 %v2_d320, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_d30c
  %v8_d324 = icmp eq i8 %v3_d31c, 32
  br i1 %v8_d324, label %.thread10, label %dec_label_pc_d330

.thread10:                                        ; preds = %bb128
  store i32 %v1_d310, i32* @r5, align 4
  br label %dec_label_pc_d350

bb129:                                            ; preds = %dec_label_pc_d30c
  store i32 %v1_d310, i32* @r5, align 4
  br label %dec_label_pc_d350

dec_label_pc_d330:                                ; preds = %bb128
  %v0_d330 = load i32, i32* @r6, align 4
  %v2_d330 = add i32 %v0_d330, %v1_d330
  br label %dec_label_pc_d334

dec_label_pc_d334:                                ; preds = %bb130, %dec_label_pc_d330
  %v0_d34013 = phi i32 [ %v1_d340, %bb130 ], [ %v2_d330, %dec_label_pc_d330 ]
  %v1_d334 = add i32 %v0_d34013, 3
  %v2_d334 = inttoptr i32 %v1_d334 to i8*
  %v3_d334 = load i8, i8* %v2_d334, align 1
  %v2_d338 = icmp eq i8 %v3_d334, 0
  br i1 %v2_d338, label %.thread12, label %bb130

.thread12:                                        ; preds = %dec_label_pc_d334
  %v1_d34014 = add i32 %v0_d34013, 1
  br label %dec_label_pc_d348

bb130:                                            ; preds = %dec_label_pc_d334
  %v8_d33c = icmp eq i8 %v3_d334, 32
  %v1_d340 = add i32 %v0_d34013, 1
  br i1 %v8_d33c, label %dec_label_pc_d348, label %dec_label_pc_d334

dec_label_pc_d348:                                ; preds = %bb130, %.thread12
  %v1_d34015 = phi i32 [ %v1_d34014, %.thread12 ], [ %v1_d340, %bb130 ]
  %v2_d348 = sub i32 %v1_d34015, %v0_d330
  %v1_d34c = add i32 %v2_d348, 2
  store i32 %v1_d34c, i32* @r5, align 4
  br label %dec_label_pc_d350

dec_label_pc_d350:                                ; preds = %bb129, %.thread10, %dec_label_pc_d348
  %v1_d35c = phi i32 [ %v1_d310, %.thread10 ], [ %v1_d310, %bb129 ], [ %v1_d34c, %dec_label_pc_d348 ]
  %v0_d350 = load i32, i32* @r6, align 4
  %v2_d350 = add i32 %v0_d350, %v1_d310
  store i32 %v2_d350, i32* @r4, align 4
  %v2_d35c = add i32 %v1_d35c, %v2_d314
  store i32 0, i32* @r7, align 4
  %v3_d368 = add i32 %v2_d35c, -545
  %v4_d368 = inttoptr i32 %v3_d368 to i8*
  store i8 0, i8* %v4_d368, align 1
  %v1_d36c = inttoptr i32 %v2_d350 to i8*
  %v2_d36c = call i32 @function_12318(i8* %v1_d36c)
  store i32 %v2_d36c, i32* @r1, align 4
  %v0_d378 = load i32, i32* @r4, align 4
  %v3_d37c = inttoptr i32 %v0_d378 to i8*
  %v4_d37c = call i32 @function_1266c(i8* %v3_d37c, i32 %v2_d36c, i32 %v2_d238)
  %v7_d380 = icmp eq i32 %v4_d37c, -1
  br i1 %v7_d380, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d39c.preheader

dec_label_pc_d39c.preheader:                      ; preds = %dec_label_pc_d350
  %v1_d384 = load i32, i32* @r7, align 4
  %v1_d388 = load i32, i32* @r6, align 4
  %v2_d388 = load i32, i32* @r5, align 4
  %v3_d388 = add i32 %v2_d388, %v1_d388
  store i32 %v1_d384, i32* @lr, align 4
  store i32 %v1_d384, i32* @r4, align 4
  %v1_d39c50 = add i32 %v3_d388, 2
  %v2_d39c51 = inttoptr i32 %v1_d39c50 to i8*
  %v3_d39c52 = load i8, i8* %v2_d39c51, align 1
  %v2_d3a054 = icmp eq i8 %v3_d39c52, 0
  %v1_d3a456 = add i32 %v2_d388, 2
  br i1 %v2_d3a054, label %dec_label_pc_d3dc, label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d39c.preheader, %dec_label_pc_d39c.backedge
  %v0_d3dc86 = phi i32 [ %v0_d3dc85, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d3c4.pr = phi i32 [ %v0_d3c4.pr71, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d6e0 = phi i32 [ %v0_d6e074, %dec_label_pc_d39c.backedge ], [ %v1_d384, %dec_label_pc_d39c.preheader ]
  %v0_d3a482 = phi i32 [ %v1_d3a4, %dec_label_pc_d39c.backedge ], [ %v1_d3a456, %dec_label_pc_d39c.preheader ]
  %v0_d3d4 = phi i32 [ %v0_d39c, %dec_label_pc_d39c.backedge ], [ %v3_d388, %dec_label_pc_d39c.preheader ]
  %v1_d3b0.in = phi i8 [ %v3_d39c, %dec_label_pc_d39c.backedge ], [ %v3_d39c52, %dec_label_pc_d39c.preheader ]
  %v7_d3ac = icmp eq i8 %v1_d3b0.in, 9
  br i1 %v7_d3ac, label %.thread23, label %bb131

bb131:                                            ; preds = %dec_label_pc_d3ac
  %v8_d3b0 = icmp eq i8 %v1_d3b0.in, 32
  br i1 %v8_d3b0, label %.thread23.thread35, label %dec_label_pc_d3c4

.thread23.thread35:                               ; preds = %bb131
  br label %dec_label_pc_d3d0

.thread23:                                        ; preds = %dec_label_pc_d3ac
  br label %dec_label_pc_d3d0

dec_label_pc_d3c4:                                ; preds = %bb131
  %v7_d3c4 = icmp eq i32 %v0_d3c4.pr, 1
  br i1 %v7_d3c4, label %dec_label_pc_d6e0, label %dec_label_pc_d3cc

dec_label_pc_d3cc:                                ; preds = %dec_label_pc_d6e0, %dec_label_pc_d3c4
  %v0_d3d079 = phi i32 [ %v1_d6e0, %dec_label_pc_d6e0 ], [ %v0_d6e0, %dec_label_pc_d3c4 ]
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_d3cc
  %v0_d3d0 = phi i32 [ %v0_d6e0, %.thread23.thread35 ], [ %v0_d6e0, %.thread23 ], [ %v0_d3d079, %dec_label_pc_d3cc ]
  %v0_d3c4.pr72 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_d3cc ]
  %v7_d3d8 = icmp sgt i32 %v0_d3d0, 6
  br i1 %v7_d3d8, label %dec_label_pc_d3dc, label %dec_label_pc_d39c.backedge

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d39c.backedge, %dec_label_pc_d3d0, %dec_label_pc_d39c.preheader
  %v1_d42c = phi i32 [ %v1_d3a456, %dec_label_pc_d39c.preheader ], [ %v1_d3a4, %dec_label_pc_d39c.backedge ], [ %v0_d3a482, %dec_label_pc_d3d0 ]
  %v0_d3dc = phi i32 [ %v1_d384, %dec_label_pc_d39c.preheader ], [ %v0_d3dc85, %dec_label_pc_d39c.backedge ], [ %v0_d3dc86, %dec_label_pc_d3d0 ]
  %v2_d3dc = icmp eq i32 %v0_d3dc, 0
  br i1 %v2_d3dc, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d3e8

dec_label_pc_d3e8:                                ; preds = %dec_label_pc_d3dc
  %v2_d3f0 = add i32 %v1_d42c, %v2_d314
  %v1_d3f4 = add i32 %v2_d3f0, -545
  %v2_d3f4 = inttoptr i32 %v1_d3f4 to i8*
  %v3_d3f4 = load i8, i8* %v2_d3f4, align 1
  %v2_d3f8 = icmp eq i8 %v3_d3f4, 0
  br i1 %v2_d3f8, label %dec_label_pc_d428, label %bb132

bb132:                                            ; preds = %dec_label_pc_d3e8
  %v8_d3fc = icmp eq i8 %v3_d3f4, 32
  br i1 %v8_d3fc, label %dec_label_pc_d428, label %dec_label_pc_d404

dec_label_pc_d404:                                ; preds = %bb132
  %v2_d404 = add i32 %v1_d42c, %v1_d388
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %bb133, %dec_label_pc_d404
  %v0_d41428 = phi i32 [ %v1_d414, %bb133 ], [ %v1_d42c, %dec_label_pc_d404 ]
  %v0_d408 = phi i32 [ %v1_d408, %bb133 ], [ %v2_d404, %dec_label_pc_d404 ]
  %v1_d408 = add i32 %v0_d408, 1
  %v2_d408 = inttoptr i32 %v1_d408 to i8*
  %v3_d408 = load i8, i8* %v2_d408, align 1
  %v2_d40c = icmp eq i8 %v3_d408, 0
  br i1 %v2_d40c, label %.thread27, label %bb133

.thread27:                                        ; preds = %dec_label_pc_d408
  %v1_d41429 = add i32 %v0_d41428, 1
  br label %dec_label_pc_d41c

bb133:                                            ; preds = %dec_label_pc_d408
  %v8_d410 = icmp eq i8 %v3_d408, 32
  %v1_d414 = add i32 %v0_d41428, 1
  br i1 %v8_d410, label %dec_label_pc_d41c, label %dec_label_pc_d408

dec_label_pc_d41c:                                ; preds = %bb133, %.thread27
  %v1_d424 = phi i32 [ %v1_d41429, %.thread27 ], [ %v1_d414, %bb133 ]
  %v2_d424 = add i32 %v1_d424, %v2_d314
  br label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d3e8, %bb132, %dec_label_pc_d41c
  %v2_d434 = phi i32 [ %v2_d3f0, %dec_label_pc_d3e8 ], [ %v2_d3f0, %bb132 ], [ %v2_d424, %dec_label_pc_d41c ]
  %v2_d42c = add i32 %v1_d42c, %v1_d388
  store i32 %v2_d42c, i32* @r4, align 4
  %v3_d434 = add i32 %v2_d434, -545
  %v4_d434 = inttoptr i32 %v3_d434 to i8*
  store i8 0, i8* %v4_d434, align 1
  %v1_d438 = inttoptr i32 %v2_d42c to i8*
  %v2_d438 = call i32 @function_12318(i8* %v1_d438)
  %v8_d440 = icmp sgt i32 %v2_d438, 15
  br i1 %v8_d440, label %dec_label_pc_d2b4.backedge, label %dec_label_pc_d444

dec_label_pc_d444:                                ; preds = %dec_label_pc_d428
  %v0_d448 = load i32, i32* @r4, align 4
  %v2_d44c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_d44c, i32* @r0, align 4
  %v2_d450 = bitcast i32* %stack_var_-52 to i8*
  %v3_d450 = call i32 @function_12340(i8* %v2_d450, i32 %v0_d448)
  br label %dec_label_pc_d454

dec_label_pc_d454.loopexit:                       ; preds = %dec_label_pc_d2b4.backedge, %dec_label_pc_d2b4.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre95 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_d454

dec_label_pc_d454:                                ; preds = %dec_label_pc_d454.loopexit, %dec_label_pc_d444
  %v1_d464.pre-phi = phi i8* [ %.pre95, %dec_label_pc_d454.loopexit ], [ %v2_d450, %dec_label_pc_d444 ]
  %v2_d460.pre-phi = phi i32 [ %.pre, %dec_label_pc_d454.loopexit ], [ %v2_d44c, %dec_label_pc_d444 ]
  %v0_d454 = load i32, i32* @r8, align 4
  %v1_d458 = call i32 @function_12c1c(i32 %v0_d454)
  %v2_d464 = call i32 @function_12318(i8* %v1_d464.pre-phi)
  store i32 %v2_d464, i32* @r4, align 4
  %v2_d468 = icmp eq i32 %v2_d464, 0
  br i1 %v2_d468, label %dec_label_pc_d710, label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %dec_label_pc_d454
  %v3_d478 = call i32 @function_11c68(i32 13, i32* null)
  store i32 %v3_d478, i32* @r0, align 4
  %v1_d47c = call i32 @function_13024(i32 %v3_d478)
  store i32 %v1_d47c, i32* @r8, align 4
  %v2_d480 = icmp eq i32 %v1_d47c, 0
  br i1 %v2_d480, label %dec_label_pc_d6b0, label %dec_label_pc_d490.preheader

dec_label_pc_d490.preheader:                      ; preds = %dec_label_pc_d470
  store i32 0, i32* @r5, align 4
  %v1_d49445 = inttoptr i32 %v1_d47c to i32*
  %v2_d49446 = call i32 @function_13120(i32* %v1_d49445)
  %v2_d49848 = icmp eq i32 %v2_d49446, 0
  br i1 %v2_d49848, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0.preheader

dec_label_pc_d490.loopexit:                       ; preds = %dec_label_pc_d4a8, %dec_label_pc_d4bc, %dec_label_pc_d524
  %v0_d490 = load i32, i32* @r8, align 4
  %v1_d494 = inttoptr i32 %v0_d490 to i32*
  %v2_d494 = call i32 @function_13120(i32* %v1_d494)
  %v2_d498 = icmp eq i32 %v2_d494, 0
  br i1 %v2_d498, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0.preheader

dec_label_pc_d4a0.preheader:                      ; preds = %dec_label_pc_d490.preheader, %dec_label_pc_d490.loopexit
  %v0_d4a894 = phi i32 [ %v2_d494, %dec_label_pc_d490.loopexit ], [ %v2_d49446, %dec_label_pc_d490.preheader ]
  br label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d4a0.preheader, %dec_label_pc_d68c
  %v0_d4b4 = phi i32 [ %v0_d4a894, %dec_label_pc_d4a0.preheader ], [ %v2_d698, %dec_label_pc_d68c ]
  %v0_d4a0 = load i32, i32* @r5, align 4
  %v2_d4a0 = icmp eq i32 %v0_d4a0, 0
  br i1 %v2_d4a0, label %dec_label_pc_d4a8, label %dec_label_pc_d6a4

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d4a0
  %v1_d4a8 = add i32 %v0_d4b4, 11
  %v2_d4a8 = inttoptr i32 %v1_d4a8 to i8*
  %v3_d4a8 = load i8, i8* %v2_d4a8, align 1
  %v4_d4a8 = zext i8 %v3_d4a8 to i32
  %v1_d4ac = add nsw i32 %v4_d4a8, -48
  store i32 %v1_d4a8, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_d4ac, 9
  br i1 %tmp, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d4bc

dec_label_pc_d4bc:                                ; preds = %dec_label_pc_d4a8
  %v3_d4c4 = call i32 @function_11c68(i32 13, i32* null)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d4d0 = call i32 @function_12340(i8* %v2_d1f8, i32 %v3_d4c4)
  %v2_d4d8 = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d4dc = load i32, i32* @r7, align 4
  %v0_d4e0 = load i32, i32* @sl, align 4
  %v2_d4e0 = add i32 %v0_d4e0, %v2_d4d8
  store i32 %v2_d4e0, i32* @r0, align 4
  %v2_d4e4 = inttoptr i32 %v2_d4e0 to i8*
  %v3_d4e4 = call i32 @function_12340(i8* %v2_d4e4, i32 %v0_d4dc)
  %v2_d4ec = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d4f0 = load i32, i32* @r5, align 4
  store i32 %v2_d4ec, i32* @r4, align 4
  %v2_d4fc = inttoptr i32 %v0_d4f0 to i32*
  %v3_d4fc = call i32 @function_11c68(i32 14, i32* %v2_d4fc)
  %v0_d504 = load i32, i32* @sl, align 4
  %v1_d504 = load i32, i32* @r4, align 4
  %v2_d504 = add i32 %v1_d504, %v0_d504
  store i32 %v2_d504, i32* @r0, align 4
  %v2_d508 = inttoptr i32 %v2_d504 to i8*
  %v3_d508 = call i32 @function_12340(i8* %v2_d508, i32 %v3_d4fc)
  %v4_d518 = call i32 @function_12e10(i8* %v2_d1f8, i32 %v2_d1ec, i32 4096)
  %v7_d51c = icmp eq i32 %v4_d518, -1
  br i1 %v7_d51c, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d524

dec_label_pc_d524:                                ; preds = %dec_label_pc_d4bc
  %v0_d524 = load i32, i32* @r5, align 4
  %v2_d52c = inttoptr i32 %v0_d524 to i32*
  %v3_d52c = call i32 @function_11c68(i32 13, i32* %v2_d52c)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d538 = call i32 @function_12340(i8* %v2_d1f8, i32 %v3_d52c)
  %v2_d540 = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d544 = load i32, i32* @r7, align 4
  %v0_d548 = load i32, i32* @sl, align 4
  %v2_d548 = add i32 %v0_d548, %v2_d540
  store i32 %v2_d548, i32* @r0, align 4
  %v2_d54c = inttoptr i32 %v2_d548 to i8*
  %v3_d54c = call i32 @function_12340(i8* %v2_d54c, i32 %v0_d544)
  %v2_d554 = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d558 = load i32, i32* @r5, align 4
  store i32 %v2_d554, i32* @r4, align 4
  %v2_d564 = inttoptr i32 %v0_d558 to i32*
  %v3_d564 = call i32 @function_11c68(i32 15, i32* %v2_d564)
  %v0_d56c = load i32, i32* @sl, align 4
  %v1_d56c = load i32, i32* @r4, align 4
  %v2_d56c = add i32 %v1_d56c, %v0_d56c
  store i32 %v2_d56c, i32* @r0, align 4
  %v2_d570 = inttoptr i32 %v2_d56c to i8*
  %v3_d570 = call i32 @function_12340(i8* %v2_d570, i32 %v3_d564)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v1_d578 = call i32 @function_13024(i32 %v2_d1d8)
  store i32 %v1_d578, i32* @sb, align 4
  %v2_d57c = icmp eq i32 %v1_d578, 0
  br i1 %v2_d57c, label %dec_label_pc_d490.loopexit, label %dec_label_pc_d584.preheader

dec_label_pc_d584.preheader:                      ; preds = %dec_label_pc_d524
  %v1_d58840 = inttoptr i32 %v1_d578 to i32*
  %v2_d58841 = call i32 @function_13120(i32* %v1_d58840)
  store i32 %v2_d58841, i32* @r6, align 4
  %v2_d58c43 = icmp eq i32 %v2_d58841, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d58c43, label %dec_label_pc_d68c, label %dec_label_pc_d59cthread-pre-split

dec_label_pc_d584.loopexit:                       ; preds = %dec_label_pc_d5a4, %dec_label_pc_d63c
  %v0_d584 = load i32, i32* @sb, align 4
  %v1_d588 = inttoptr i32 %v0_d584 to i32*
  %v2_d588 = call i32 @function_13120(i32* %v1_d588)
  store i32 %v2_d588, i32* @r6, align 4
  %v2_d58c = icmp eq i32 %v2_d588, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d58c, label %dec_label_pc_d68c, label %dec_label_pc_d59cthread-pre-split

dec_label_pc_d59cthread-pre-split:                ; preds = %dec_label_pc_d584.preheader, %dec_label_pc_d584.loopexit
  %v0_d59c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_d59c

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d59cthread-pre-split, %dec_label_pc_d664
  %v0_d59c = phi i32 [ %v0_d59c.pr, %dec_label_pc_d59cthread-pre-split ], [ 1, %dec_label_pc_d664 ]
  %v2_d59c = icmp eq i32 %v0_d59c, 0
  br i1 %v2_d59c, label %dec_label_pc_d5a4, label %dec_label_pc_d68c

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d59c
  %v0_d5a4 = call i32 @function_123b8()
  %v0_d5a8 = load i32, i32* @r5, align 4
  %v2_d5b0 = inttoptr i32 %v0_d5a8 to i32*
  %v3_d5b0 = call i32 @function_11c68(i32 13, i32* %v2_d5b0)
  store i32 %v2_d1d8, i32* @r0, align 4
  %v3_d5bc = call i32 @function_12340(i8* %v2_d1f8, i32 %v3_d5b0)
  %v2_d5c4 = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d5c8 = load i32, i32* @r7, align 4
  %v0_d5cc = load i32, i32* @sl, align 4
  %v2_d5cc = add i32 %v0_d5cc, %v2_d5c4
  store i32 %v2_d5cc, i32* @r0, align 4
  %v2_d5d0 = inttoptr i32 %v2_d5cc to i8*
  %v3_d5d0 = call i32 @function_12340(i8* %v2_d5d0, i32 %v0_d5c8)
  %v2_d5d8 = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d5dc = load i32, i32* @r5, align 4
  store i32 %v2_d5d8, i32* @r4, align 4
  %v2_d5e8 = inttoptr i32 %v0_d5dc to i32*
  %v3_d5e8 = call i32 @function_11c68(i32 15, i32* %v2_d5e8)
  %v0_d5f0 = load i32, i32* @sl, align 4
  %v1_d5f0 = load i32, i32* @r4, align 4
  %v2_d5f0 = add i32 %v1_d5f0, %v0_d5f0
  store i32 %v2_d5f0, i32* @r0, align 4
  %v2_d5f4 = inttoptr i32 %v2_d5f0 to i8*
  %v3_d5f4 = call i32 @function_12340(i8* %v2_d5f4, i32 %v3_d5e8)
  %v2_d5fc = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d604 = load i32, i32* @sl, align 4
  %v2_d604 = add i32 %v0_d604, %v2_d5fc
  store i32 %v2_d604, i32* @r0, align 4
  %v2_d608 = inttoptr i32 %v2_d604 to i8*
  %v3_d608 = call i32 @function_12340(i8* %v2_d608, i32 ptrtoint (i32* @global_var_15484.61 to i32))
  %v2_d610 = call i32 @function_12318(i8* %v2_d1f8)
  %v0_d614 = load i32, i32* @r6, align 4
  %v1_d614 = add i32 %v0_d614, 11
  %v0_d618 = load i32, i32* @sl, align 4
  %v2_d618 = add i32 %v0_d618, %v2_d610
  store i32 %v2_d618, i32* @r0, align 4
  %v2_d61c = inttoptr i32 %v2_d618 to i8*
  %v3_d61c = call i32 @function_12340(i8* %v2_d61c, i32 %v1_d614)
  %v4_d62c = call i32 @function_12e10(i8* %v2_d1f8, i32 %v2_d1ec, i32 4096)
  %v7_d630 = icmp eq i32 %v4_d62c, -1
  br i1 %v7_d630, label %dec_label_pc_d584.loopexit, label %dec_label_pc_d63c

dec_label_pc_d63c:                                ; preds = %dec_label_pc_d5a4
  %v2_d63c = call i32 @function_12318(i8* %v2_d210)
  store i32 %v2_d63c, i32* @r1, align 4
  %v4_d650 = call i32 @function_1266c(i8* %v2_d210, i32 %v2_d63c, i32 %v2_d460.pre-phi)
  %v7_d654 = icmp eq i32 %v4_d650, -1
  br i1 %v7_d654, label %dec_label_pc_d584.loopexit, label %dec_label_pc_d664

dec_label_pc_d664:                                ; preds = %dec_label_pc_d63c
  %v0_d65c = load i32, i32* @r7, align 4
  %v2_d664 = inttoptr i32 %v0_d65c to i8*
  %v3_d664 = call i32 @function_12444(i8* %v2_d664, i32 10)
  %v2_d66c = call i32 @function_12d1c(i32 %v3_d664, i32 9)
  %v0_d670 = load i32, i32* @sb, align 4
  %v1_d674 = inttoptr i32 %v0_d670 to i32*
  %v2_d674 = call i32 @function_13120(i32* %v1_d674)
  store i32 %v2_d674, i32* @r6, align 4
  %v2_d678 = icmp eq i32 %v2_d674, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d1ec, i32* @r0, align 4
  br i1 %v2_d678, label %dec_label_pc_d68c, label %dec_label_pc_d59c

dec_label_pc_d68c:                                ; preds = %dec_label_pc_d584.loopexit, %dec_label_pc_d664, %dec_label_pc_d59c, %dec_label_pc_d584.preheader
  %v0_d68c = load i32, i32* @sb, align 4
  %v1_d690 = inttoptr i32 %v0_d68c to i32*
  %v2_d690 = call i32 @function_12f70(i32* %v1_d690)
  %v0_d694 = load i32, i32* @r8, align 4
  %v1_d698 = inttoptr i32 %v0_d694 to i32*
  %v2_d698 = call i32 @function_13120(i32* %v1_d698)
  %v2_d69c = icmp eq i32 %v2_d698, 0
  br i1 %v2_d69c, label %dec_label_pc_d6a4, label %dec_label_pc_d4a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d490.loopexit, %dec_label_pc_d68c, %dec_label_pc_d4a0, %dec_label_pc_d490.preheader
  %v0_d6a4 = load i32, i32* @r8, align 4
  %v1_d6a8 = inttoptr i32 %v0_d6a4 to i32*
  %v2_d6a8 = call i32 @function_12f70(i32* %v1_d6a8)
  %v0_d6ac = load i32, i32* @r5, align 4
  %v1_d6ac = urem i32 %v0_d6ac, 256
  br label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d470, %dec_label_pc_d6a4
  %storemerge = phi i32 [ %v1_d6ac, %dec_label_pc_d6a4 ], [ 0, %dec_label_pc_d470 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_d6b4 = call i32 @function_1401c(i32 1)
  %v1_d6bc = call i32 @function_11c94(i32 13)
  %v1_d6c4 = call i32 @function_11c94(i32 14)
  %v1_d6cc = call i32 @function_11c94(i32 15)
  br label %dec_label_pc_d6d0

dec_label_pc_d6d0:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d710, %dec_label_pc_d6b0
  %v0_d6d0 = load i32, i32* @r4, align 4
  %v2_d6dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d6dc, i32* @r4, align 4
  store i32 %v6_d1c4, i32* @r5, align 4
  store i32 %v9_d1c4, i32* @r6, align 4
  store i32 %v12_d1c4, i32* @r7, align 4
  store i32 %v15_d1c4, i32* @r8, align 4
  store i32 %v18_d1c4, i32* @sb, align 4
  store i32 %v21_d1c4, i32* @sl, align 4
  store i32 %v24_d1c4, i32* @fp, align 4
  ret i32 %v0_d6d0

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d3c4
  %v1_d6e0 = add i32 %v0_d6e0, 1
  store i32 %v1_d6e0, i32* @lr, align 4
  %v7_d6e4 = icmp eq i32 %v0_d6e0, 0
  br i1 %v7_d6e4, label %dec_label_pc_d6ec, label %dec_label_pc_d3cc

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d6e0
  %v1_d6ec = add i32 %v0_d3d4, 3
  %v2_d6ec = inttoptr i32 %v1_d6ec to i8*
  %v3_d6ec = load i8, i8* %v2_d6ec, align 1
  %v7_d6f0 = icmp eq i8 %v3_d6ec, 65
  br i1 %v7_d6f0, label %dec_label_pc_d700, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_d6ec
  br label %dec_label_pc_d39c.backedge

dec_label_pc_d700:                                ; preds = %dec_label_pc_d6ec
  store i32 %v1_d6e0, i32* @r4, align 4
  br label %dec_label_pc_d39c.backedge

dec_label_pc_d39c.backedge:                       ; preds = %.thread33, %dec_label_pc_d700, %dec_label_pc_d3d0
  %v0_d3dc85 = phi i32 [ %v1_d6e0, %dec_label_pc_d700 ], [ %v0_d3dc86, %dec_label_pc_d3d0 ], [ %v0_d3dc86, %.thread33 ]
  %v0_d6e074 = phi i32 [ %v1_d6e0, %dec_label_pc_d700 ], [ %v0_d3d0, %dec_label_pc_d3d0 ], [ %v1_d6e0, %.thread33 ]
  %v0_d3c4.pr71 = phi i32 [ 0, %dec_label_pc_d700 ], [ %v0_d3c4.pr72, %dec_label_pc_d3d0 ], [ 0, %.thread33 ]
  %v0_d39c = add i32 %v0_d3d4, 1
  %v1_d39c = add i32 %v0_d3d4, 3
  %v2_d39c = inttoptr i32 %v1_d39c to i8*
  %v3_d39c = load i8, i8* %v2_d39c, align 1
  %v2_d3a0 = icmp eq i8 %v3_d39c, 0
  %v1_d3a4 = add i32 %v0_d3a482, 1
  br i1 %v2_d3a0, label %dec_label_pc_d3dc, label %dec_label_pc_d3ac

dec_label_pc_d710:                                ; preds = %dec_label_pc_d454
  %v1_d714 = call i32 @function_11c94(i32 13)
  %v1_d71c = call i32 @function_11c94(i32 14)
  %v1_d724 = call i32 @function_11c94(i32 15)
  %v1_d72c = call i32 @function_11c94(i32 17)
  br label %dec_label_pc_d6d0

dec_label_pc_d734:                                ; preds = %dec_label_pc_d1c4
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_d274

; uselistorder directives
  uselistorder i32 %v1_d3a4, { 1, 0 }
  uselistorder i8 %v3_d39c, { 1, 0 }
  uselistorder i32 %v0_d3dc85, { 1, 0 }
  uselistorder i32 %v1_d6e0, { 4, 3, 0, 2, 5, 1 }
  uselistorder i32 %v2_d698, { 1, 0 }
  uselistorder i32 %v1_d408, { 1, 0 }
  uselistorder i32 %v0_d41428, { 1, 0 }
  uselistorder i32 %v1_d42c, { 0, 3, 1, 2 }
  uselistorder i32 %v0_d3d0, { 1, 0 }
  uselistorder i32 %v0_d3a482, { 1, 0 }
  uselistorder i32 %v0_d6e0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_d3dc86, { 1, 2, 0 }
  uselistorder i32 %v1_d3a456, { 1, 0 }
  uselistorder i32 %v2_d388, { 1, 0 }
  uselistorder i32 %v1_d384, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v0_d34013, { 1, 0, 2 }
  uselistorder i32 %v0_d330, { 1, 0 }
  uselistorder i32 %v1_d310, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_d2a4, { 1, 2, 0 }
  uselistorder i32 %v2_d1ec, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_d1d8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-581, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32)* @function_12444, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_12570, { 1, 0 }
  uselistorder label %dec_label_pc_d39c.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d6d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d6b0, { 1, 0 }
  uselistorder label %dec_label_pc_d6a4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d68c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d59c, { 1, 0 }
  uselistorder label %dec_label_pc_d59cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_d584.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0, { 1, 0 }
  uselistorder label %dec_label_pc_d4a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d490.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d428, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d3d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d3ac, { 1, 0 }
  uselistorder label %dec_label_pc_d350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d2b4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_d304, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d2cc, { 1, 0 }
  uselistorder label %dec_label_pc_d274, { 1, 0 }
}

define i32 @function_d760(i32 %arg1) local_unnamed_addr {
dec_label_pc_d760:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-260 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-4348 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d760 = load i32, i32* @r4, align 4
  store i32 %v3_d760, i32* %stack_var_-36, align 4
  %v6_d760 = load i32, i32* @r5, align 4
  %v9_d760 = load i32, i32* @r6, align 4
  %v12_d760 = load i32, i32* @r7, align 4
  %v15_d760 = load i32, i32* @r8, align 4
  %v18_d760 = load i32, i32* @sb, align 4
  %v21_d760 = load i32, i32* @sl, align 4
  %v24_d760 = load i32, i32* @fp, align 4
  %v2_d770 = call i32 @function_12eec(i32* null)
  store i32 %v2_d770, i32* @r7, align 4
  %v0_d778 = call i32 @function_12c48()
  %v7_d77c = icmp eq i32 %v0_d778, -1
  %. = zext i1 %v7_d77c to i32
  %tmp126 = icmp slt i32 %v0_d778, 1
  %storemerge86 = select i1 %tmp126, i32 %., i32 1
  store i32 %storemerge86, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1dc54.63 to i32), i32* %r3.global-to-local, align 4
  %v2_d798 = icmp eq i32 %storemerge86, 0
  store i32 %v0_d778, i32* @global_var_1dc54.63, align 4
  br i1 %v2_d798, label %dec_label_pc_d7b0, label %dec_label_pc_d7a4

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d7b0, %dec_label_pc_d760
  %v29_d7ac = phi i32 [ %v3_d858, %dec_label_pc_d7b0 ], [ %v0_d778, %dec_label_pc_d760 ], [ 0, %dec_label_pc_d8c4 ]
  %v2_d7ac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d7ac, i32* @r4, align 4
  store i32 %v6_d760, i32* @r5, align 4
  store i32 %v9_d760, i32* @r6, align 4
  store i32 %v12_d760, i32* @r7, align 4
  store i32 %v15_d760, i32* @r8, align 4
  store i32 %v18_d760, i32* @sb, align 4
  store i32 %v21_d760, i32* @sl, align 4
  store i32 %v24_d760, i32* @fp, align 4
  ret i32 %v29_d7ac

dec_label_pc_d7b0:                                ; preds = %dec_label_pc_d760
  %v1_d7b4 = call i32 @function_1401c(i32 5)
  %v1_d7bc = call i32 @function_13698(i32 4096)
  store i32 ptrtoint (i32* @global_var_1dbb4.65 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc50.67 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_d7bc, i32* %r2.global-to-local, align 4
  %v0_d7cc = load i32, i32* @r5, align 4
  %v1_d7cc = trunc i32 %v0_d7cc to i8
  %v3_d7cc = inttoptr i32 %v1_d7bc to i8*
  store i8 %v1_d7cc, i8* %v3_d7cc, align 1
  %v0_d7d4 = load i32, i32* @r5, align 4
  %v1_d7d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_d7d4 = inttoptr i32 %v1_d7d4 to i32*
  store i32 %v0_d7d4, i32* %v2_d7d4, align 4
  %v0_d7d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d7d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_d7d8 = inttoptr i32 %v1_d7d8 to i32*
  store i32 %v0_d7d8, i32* %v2_d7d8, align 4
  %v1_d7dc = call i32 @function_11d4c(i32 13)
  %v1_d7e4 = call i32 @function_11d4c(i32 14)
  %v0_d7e8 = load i32, i32* @r5, align 4
  store i32 %v0_d7e8, i32* %r1.global-to-local, align 4
  %v2_d7f0 = inttoptr i32 %v0_d7e8 to i32*
  %v3_d7f0 = call i32 @function_11c68(i32 13, i32* %v2_d7f0)
  %v2_d7fc = ptrtoint i32* %stack_var_-4348 to i32
  store i32 %v2_d7fc, i32* @fp, align 4
  store i32 %v3_d7f0, i32* %r1.global-to-local, align 4
  store i32 %v2_d7fc, i32* @r0, align 4
  %v2_d808 = bitcast i32* %stack_var_-4348 to i8*
  %v3_d808 = call i32 @function_12340(i8* %v2_d808, i32 %v3_d7f0)
  %v0_d80c = load i32, i32* @fp, align 4
  %v2_d80c = add i32 %v0_d80c, %v3_d808
  store i32 %v2_d80c, i32* @r4, align 4
  %v0_d810 = call i32 @function_12c74()
  %v2_d818 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_d818, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_d820 = trunc i32 %v0_d810 to i8
  %v4_d820 = call i32 @function_1277c(i8 %v3_d820, i32 10, i32 %v2_d818)
  store i32 %v4_d820, i32* %r1.global-to-local, align 4
  %v0_d828 = load i32, i32* @r4, align 4
  store i32 %v0_d828, i32* @r0, align 4
  %v2_d82c = inttoptr i32 %v0_d828 to i8*
  %v3_d82c = call i32 @function_12340(i8* %v2_d82c, i32 %v4_d820)
  %v0_d830 = load i32, i32* @r5, align 4
  store i32 %v0_d830, i32* %r1.global-to-local, align 4
  %v0_d834 = load i32, i32* @r4, align 4
  %v2_d834 = add i32 %v0_d834, %v3_d82c
  store i32 %v2_d834, i32* @r4, align 4
  %v2_d83c = inttoptr i32 %v0_d830 to i32*
  %v3_d83c = call i32 @function_11c68(i32 14, i32* %v2_d83c)
  store i32 %v3_d83c, i32* %r1.global-to-local, align 4
  %v0_d844 = load i32, i32* @r4, align 4
  store i32 %v0_d844, i32* @r0, align 4
  %v2_d848 = inttoptr i32 %v0_d844 to i8*
  %v3_d848 = call i32 @function_12340(i8* %v2_d848, i32 %v3_d83c)
  %v0_d84c = load i32, i32* @r5, align 4
  store i32 %v0_d84c, i32* %r1.global-to-local, align 4
  store i32 %v3_d848, i32* @r6, align 4
  %v3_d858 = call i32 @function_12d48(i8* %v2_d808, i32 %v0_d84c)
  %v7_d85c = icmp eq i32 %v3_d858, -1
  br i1 %v7_d85c, label %dec_label_pc_d7a4, label %dec_label_pc_d864

dec_label_pc_d864:                                ; preds = %dec_label_pc_d7b0
  %v1_d864 = call i32 @function_12c1c(i32 %v3_d858)
  %v1_d86c = call i32 @function_11c94(i32 13)
  %v1_d874 = call i32 @function_11c94(i32 14)
  store i32 ptrtoint (i32* @global_var_1dc50.67 to i32), i32* %r3.global-to-local, align 4
  %v2_d880 = load i32, i32* @global_var_1dc50.67, align 4
  store i32 %v2_d880, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v4_d88c = call i32 @function_12e10(i8* %v2_d808, i32 %v2_d880, i32 4095)
  %v7_d890 = icmp eq i32 %v4_d88c, -1
  br i1 %v7_d890, label %.thread2.thread, label %bb129

.thread2.thread:                                  ; preds = %dec_label_pc_d864
  %v0_d89c24 = load i32, i32* @r4, align 4
  %v1_d89c25 = load i32, i32* @r6, align 4
  %v2_d89c26 = add i32 %v1_d89c25, %v0_d89c24
  store i32 %v2_d89c26, i32* %r1.global-to-local, align 4
  br label %bb130

bb129:                                            ; preds = %dec_label_pc_d864
  %v3_d898 = load i32, i32* @global_var_1dc50.67, align 4
  store i32 %v3_d898, i32* %r3.global-to-local, align 4
  %v0_d89c = load i32, i32* @r4, align 4
  %v1_d89c = load i32, i32* @r6, align 4
  %v2_d89c = add i32 %v1_d89c, %v0_d89c
  store i32 %v2_d89c, i32* %r1.global-to-local, align 4
  %v1_d8a0 = load i32, i32* @r5, align 4
  %v2_d8a0 = trunc i32 %v1_d8a0 to i8
  %v5_d8a0 = add i32 %v3_d898, %v4_d88c
  %v6_d8a0 = inttoptr i32 %v5_d8a0 to i8*
  store i8 %v2_d8a0, i8* %v6_d8a0, align 1
  %v1_d8a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %.thread2.thread, %bb129
  %v1_d8a4 = phi i32 [ %v2_d89c26, %.thread2.thread ], [ %v1_d8a4.pre, %bb129 ]
  %v0_d8a4 = load i32, i32* @fp, align 4
  %v2_d8a4 = sub i32 %v1_d8a4, %v0_d8a4
  store i32 %v2_d8a4, i32* @r1, align 4
  store i32 %v2_d7fc, i32* @r0, align 4
  %v0_d8b0 = call i32 @function_123b8()
  %v0_d8b4 = load i32, i32* @r7, align 4
  store i32 %v0_d8b4, i32* @r8, align 4
  %v0_d8b8 = load i32, i32* @r5, align 4
  %v2_d8bc = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v2_d8bc, i32* @sl, align 4
  store i32 400, i32* @r5, align 4
  %v2_da54 = ptrtoint i32* %stack_var_-260 to i32
  %v2_dc4c = ptrtoint i32* %stack_var_-252 to i32
  %v2_dc50 = bitcast i32* %stack_var_-252 to i8*
  %v2_dc9c = ptrtoint i32* %stack_var_-188 to i32
  %v2_dca0 = bitcast i32* %stack_var_-188 to i8*
  %v2_ddfc = ptrtoint i32* %stack_var_-40 to i32
  %v2_de10 = ptrtoint i32* %stack_var_-44 to i32
  %v2_dd18 = ptrtoint i32* %stack_var_-36 to i32
  %v2_db68 = ptrtoint i32* %stack_var_-76 to i32
  %v3_db70 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v2_db30 = ptrtoint i32* %stack_var_-60 to i32
  %v3_db38 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v2_daf8 = ptrtoint i32* %stack_var_-108 to i32
  %v3_db00 = bitcast i32* %stack_var_-108 to %sockaddr*
  %v2_dac0 = ptrtoint i32* %stack_var_-92 to i32
  %v3_dac8 = bitcast i32* %stack_var_-92 to %sockaddr*
  br label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_dc10, %bb130
  %stack_var_-8448.0 = phi i32 [ %v0_d8b8, %bb130 ], [ %stack_var_-8448.3, %dec_label_pc_dc10 ]
  %v1_d8c8 = call i32 @function_11d4c(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d8d4 = call i32 @function_11c68(i32 13, i32* null)
  store i32 %v3_d8d4, i32* @r0, align 4
  %v1_d8d8 = call i32 @function_13024(i32 %v3_d8d4)
  store i32 %v1_d8d8, i32* @sb, align 4
  %v2_d8dc = icmp eq i32 %v1_d8d8, 0
  br i1 %v2_d8dc, label %dec_label_pc_d7a4, label %dec_label_pc_d8e4

dec_label_pc_d8e4:                                ; preds = %dec_label_pc_d8c4
  %v1_d8e8 = call i32 @function_11c94(i32 13)
  %v1_d8f4 = call i32 @function_d1c4(i32 58811)
  %v1_d900 = call i32 @function_d1c4(i32 50951)
  %v1_d90c = call i32 @function_d1c4(i32 14853)
  %v1_d918 = call i32 @function_d1c4(i32 14597)
  %v1_d924 = call i32 @function_d1c4(i32 add (i32 ptrtoint (i32* @global_var_a400.68 to i32), i32 1))
  %v1_d92c = call i32 @function_d1c4(i32 ptrtoint (i32* @global_var_e800.69 to i32))
  %v1_d938 = call i32 @function_d1c4(i32 39426)
  %v1_d944 = call i32 @function_d1c4(i32 35846)
  %v1_d950 = call i32 @function_d1c4(i32 47873)
  %v1_d95c = call i32 @function_d1c4(i32 add (i32 ptrtoint (i32* @global_var_e100.18 to i32), i32 16))
  %v1_d968 = call i32 @function_d1c4(i32 2842)
  %v1_d974 = call i32 @function_d1c4(i32 10522)
  %v1_d980 = call i32 @function_d1c4(i32 59139)
  %v1_d988 = call i32 @function_d1c4(i32 17664)
  %v1_d990 = call i32 @function_d1c4(i32 5376)
  %v1_d998 = call i32 @function_d1c4(i32 5120)
  %v1_d9a4 = call i32 @function_d1c4(i32 48132)
  %v1_d9b0 = call i32 @function_d1c4(i32 11010)
  %v1_d9bc = call i32 @function_d1c4(i32 48129)
  %v1_d9c8 = call i32 @function_d1c4(i32 19713)
  %v1_d9d0 = call i32 @function_d1c4(i32 56832)
  %v1_d9d8 = call i32 @function_d1c4(i32 28416)
  %v1_d9e4 = call i32 @function_d1c4(i32 39426)
  %v1_d9f0 = call i32 @function_d1c4(i32 2307)
  %v1_d9fc = call i32 @function_d1c4(i32 30723)
  %v1_da08 = call i32 @function_d1c4(i32 59139)
  %v1_da10 = call i32 @function_d1c4(i32 4)
  %v1_da18 = call i32 @function_d1c4(i32 8)
  %v1_da24 = call i32 @function_d1c4(i32 20486)
  %v1_da30 = call i32 @function_d1c4(i32 63248)
  %v1_da38 = call i32 @function_d1c4(i32 2816)
  %v1_da40 = call i32 @function_d1c4(i32 2560)
  store i32 %v2_da54, i32* %r1.global-to-local, align 4
  store i32 206, i32* %r3.global-to-local, align 4
  store i32 133, i32* %r2.global-to-local, align 4
  %v1_da94 = call i32 @function_d1c4(i32 5888)
  %v2_da98 = icmp eq i32 %v1_da94, 0
  br i1 %v2_da98, label %dec_label_pc_df28, label %dec_label_pc_daa0

dec_label_pc_daa0:                                ; preds = %dec_label_pc_df4c, %dec_label_pc_df3c, %dec_label_pc_df28, %dec_label_pc_d8e4, %dec_label_pc_df60
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_daac = call i32 @function_13500(i32 2, i32 1, i32 0)
  %v7_dab0 = icmp eq i32 %v3_daac, -1
  store i32 %v3_daac, i32* @r4, align 4
  br i1 %v7_dab0, label %dec_label_pc_dad8, label %dec_label_pc_dabc

dec_label_pc_dabc:                                ; preds = %dec_label_pc_daa0
  store i32 %v2_dac0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_dac8 = call i32 @function_13330(i32 %v3_daac, %sockaddr* %v3_dac8, i32 16)
  %v0_dacc = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_dad4 = call i32 @function_133e4(i32 %v0_dacc, i32 1)
  br label %dec_label_pc_dad8

dec_label_pc_dad8:                                ; preds = %dec_label_pc_daa0, %dec_label_pc_dabc
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_dae4 = call i32 @function_13500(i32 2, i32 1, i32 0)
  %v7_dae8 = icmp eq i32 %v3_dae4, -1
  store i32 %v3_dae4, i32* @r4, align 4
  br i1 %v7_dae8, label %dec_label_pc_db10, label %dec_label_pc_daf4

dec_label_pc_daf4:                                ; preds = %dec_label_pc_dad8
  store i32 %v2_daf8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_db00 = call i32 @function_13330(i32 %v3_dae4, %sockaddr* %v3_db00, i32 16)
  %v0_db04 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_db0c = call i32 @function_133e4(i32 %v0_db04, i32 1)
  br label %dec_label_pc_db10

dec_label_pc_db10:                                ; preds = %dec_label_pc_dad8, %dec_label_pc_daf4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_db1c = call i32 @function_13500(i32 2, i32 1, i32 0)
  %v7_db20 = icmp eq i32 %v3_db1c, -1
  store i32 %v3_db1c, i32* @r4, align 4
  br i1 %v7_db20, label %dec_label_pc_db48, label %dec_label_pc_db2c

dec_label_pc_db2c:                                ; preds = %dec_label_pc_db10
  store i32 %v2_db30, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_db38 = call i32 @function_13330(i32 %v3_db1c, %sockaddr* %v3_db38, i32 16)
  %v0_db3c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_db44 = call i32 @function_133e4(i32 %v0_db3c, i32 1)
  br label %dec_label_pc_db48

dec_label_pc_db48:                                ; preds = %dec_label_pc_db10, %dec_label_pc_db2c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_db54 = call i32 @function_13500(i32 2, i32 1, i32 0)
  %v7_db58 = icmp eq i32 %v3_db54, -1
  store i32 %v3_db54, i32* @r4, align 4
  br i1 %v7_db58, label %dec_label_pc_db80.preheader, label %dec_label_pc_db64

dec_label_pc_db64:                                ; preds = %dec_label_pc_db48
  store i32 %v2_db68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_db70 = call i32 @function_13330(i32 %v3_db54, %sockaddr* %v3_db70, i32 16)
  %v0_db74 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_db7c = call i32 @function_133e4(i32 %v0_db74, i32 1)
  br label %dec_label_pc_db80.preheader

dec_label_pc_db80.preheader:                      ; preds = %dec_label_pc_db64, %dec_label_pc_db48
  %v0_db8053 = load i32, i32* @sb, align 4
  %v1_db8454 = inttoptr i32 %v0_db8053 to i32*
  %v2_db8455 = call i32 @function_13120(i32* %v1_db8454)
  %v2_db8857 = icmp eq i32 %v2_db8455, 0
  br i1 %v2_db8857, label %dec_label_pc_dc10, label %dec_label_pc_db90.preheader

dec_label_pc_db90.preheader:                      ; preds = %dec_label_pc_db80.preheader, %dec_label_pc_db80.backedge
  %v0_db9066 = phi i32 [ %v2_db84, %dec_label_pc_db80.backedge ], [ %v2_db8455, %dec_label_pc_db80.preheader ]
  %stack_var_-8448.158 = phi i32 [ %stack_var_-8448.1.be, %dec_label_pc_db80.backedge ], [ %stack_var_-8448.0, %dec_label_pc_db80.preheader ]
  br label %dec_label_pc_db90

dec_label_pc_db90:                                ; preds = %dec_label_pc_db90.preheader, %dec_label_pc_dbf8
  %v0_dba0 = phi i32 [ %v2_dc04, %dec_label_pc_dbf8 ], [ %v0_db9066, %dec_label_pc_db90.preheader ]
  %stack_var_-8448.2 = phi i32 [ %v1_dbb4, %dec_label_pc_dbf8 ], [ %stack_var_-8448.158, %dec_label_pc_db90.preheader ]
  %v1_db90 = add i32 %v0_dba0, 11
  %v2_db90 = inttoptr i32 %v1_db90 to i8*
  %v3_db90 = load i8, i8* %v2_db90, align 1
  %v4_db90 = zext i8 %v3_db90 to i32
  %v1_db94 = add nsw i32 %v4_db90, -48
  store i32 %v1_db94, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_db94, 9
  br i1 %tmp, label %dec_label_pc_db80.backedge, label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_db90
  store i32 %v1_db90, i32* @r6, align 4
  %v2_dba8 = call i32 @function_13ddc(i8* %v2_db90)
  %v0_dbb0 = load i32, i32* @r5, align 4
  %v1_dbb4 = add i32 %stack_var_-8448.2, 1
  store i32 %v1_dbb4, i32* %r2.global-to-local, align 4
  store i32 %v2_dba8, i32* @r7, align 4
  %v5_dbc0 = icmp slt i32 %v0_dbb0, %v2_dba8
  %v2_dc20 = call i32 @function_12eec(i32* null)
  br i1 %v5_dbc0, label %dec_label_pc_dc1c, label %dec_label_pc_dbc4

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dba0
  %v0_dbcc = load i32, i32* @r8, align 4
  %v2_dbcc = sub i32 %v2_dc20, %v0_dbcc
  %v7_dbd4 = icmp slt i32 %v2_dbcc, 601
  br i1 %v7_dbd4, label %dec_label_pc_dbdc, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_dbc4
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_db80.backedge

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dbc4
  %v0_dbdc = load i32, i32* @r7, align 4
  %v7_dbe0 = icmp slt i32 %v0_dbdc, 401
  br i1 %v7_dbe0, label %dec_label_pc_db80.backedge, label %dec_label_pc_dbe4

dec_label_pc_dbe4:                                ; preds = %dec_label_pc_dbdc
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_dbec = call i32 @function_129a4(i32 %v1_dbb4, i32 10)
  %v2_dbf0 = icmp eq i32 %v2_dbec, 0
  br i1 %v2_dbf0, label %dec_label_pc_dbf8, label %dec_label_pc_db80.backedge

dec_label_pc_dbf8:                                ; preds = %dec_label_pc_dbe4
  %v1_dbfc = call i32 @function_1401c(i32 1)
  %v0_dc00 = load i32, i32* @sb, align 4
  %v1_dc04 = inttoptr i32 %v0_dc00 to i32*
  %v2_dc04 = call i32 @function_13120(i32* %v1_dc04)
  %v2_dc08 = icmp eq i32 %v2_dc04, 0
  br i1 %v2_dc08, label %dec_label_pc_dc10, label %dec_label_pc_db90

dec_label_pc_dc10:                                ; preds = %dec_label_pc_db80.backedge, %dec_label_pc_dbf8, %dec_label_pc_db80.preheader
  %stack_var_-8448.3 = phi i32 [ %stack_var_-8448.0, %dec_label_pc_db80.preheader ], [ %v1_dbb4, %dec_label_pc_dbf8 ], [ %stack_var_-8448.1.be, %dec_label_pc_db80.backedge ]
  %v0_dc10 = load i32, i32* @sb, align 4
  %v1_dc14 = inttoptr i32 %v0_dc10 to i32*
  %v2_dc14 = call i32 @function_12f70(i32* %v1_dc14)
  br label %dec_label_pc_d8c4

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dba0
  store i32 %v2_dc20, i32* %stack_var_-8452, align 4
  %v1_dc2c = call i32 @function_11d4c(i32 13)
  %v1_dc34 = call i32 @function_11d4c(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc40 = call i32 @function_11c68(i32 13, i32* null)
  store i32 %v3_dc40, i32* %r1.global-to-local, align 4
  store i32 %v2_dc4c, i32* @r0, align 4
  %v3_dc50 = call i32 @function_12340(i8* %v2_dc50, i32 %v3_dc40)
  store i32 %v2_dc4c, i32* %r3.global-to-local, align 4
  %v2_dc5c = add i32 %v3_dc50, %v2_dc4c
  store i32 %v2_dc5c, i32* %r5.global-to-local, align 4
  %v0_dc60 = load i32, i32* @r6, align 4
  store i32 %v0_dc60, i32* %r1.global-to-local, align 4
  store i32 %v2_dc5c, i32* @r0, align 4
  %v2_dc68 = inttoptr i32 %v2_dc5c to i8*
  %v3_dc68 = call i32 @function_12340(i8* %v2_dc68, i32 %v0_dc60)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc78 = call i32 @function_11c68(i32 14, i32* null)
  store i32 %v3_dc78, i32* %r1.global-to-local, align 4
  %v0_dc80 = load i32, i32* %r5.global-to-local, align 4
  %v2_dc80 = add i32 %v3_dc68, %v0_dc80
  store i32 %v2_dc80, i32* @r0, align 4
  %v2_dc84 = inttoptr i32 %v2_dc80 to i8*
  %v3_dc84 = call i32 @function_12340(i8* %v2_dc84, i32 %v3_dc78)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc90 = call i32 @function_11c68(i32 13, i32* null)
  store i32 %v3_dc90, i32* %r1.global-to-local, align 4
  store i32 %v2_dc9c, i32* @r0, align 4
  %v3_dca0 = call i32 @function_12340(i8* %v2_dca0, i32 %v3_dc90)
  %v2_dcac = add i32 %v3_dca0, %v2_dc9c
  store i32 %v2_dcac, i32* @r5, align 4
  store i32 %v2_dcac, i32* @r0, align 4
  %v0_dcb4 = load i32, i32* @r6, align 4
  store i32 %v0_dcb4, i32* %r1.global-to-local, align 4
  %v2_dcb8 = inttoptr i32 %v2_dcac to i8*
  %v3_dcb8 = call i32 @function_12340(i8* %v2_dcb8, i32 %v0_dcb4)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_dcb8, i32* @r4, align 4
  %v3_dcc8 = call i32 @function_11c68(i32 29, i32* null)
  store i32 %v3_dcc8, i32* %r1.global-to-local, align 4
  %v0_dcd0 = load i32, i32* @r5, align 4
  %v1_dcd0 = load i32, i32* @r4, align 4
  %v2_dcd0 = add i32 %v1_dcd0, %v0_dcd0
  store i32 %v2_dcd0, i32* @r0, align 4
  %v2_dcd4 = inttoptr i32 %v2_dcd0 to i8*
  %v3_dcd4 = call i32 @function_12340(i8* %v2_dcd4, i32 %v3_dcc8)
  %v1_dcdc = call i32 @function_11c94(i32 13)
  %v1_dce4 = call i32 @function_11c94(i32 14)
  store i32 4095, i32* %r2.global-to-local, align 4
  store i32 %v2_d7fc, i32* %r1.global-to-local, align 4
  %v4_dcfc = call i32 @function_12e10(i8* %v2_dc50, i32 %v2_d7fc, i32 4095)
  %v7_dd04 = icmp eq i32 %v4_dcfc, -1
  store i32 %v4_dcfc, i32* @r5, align 4
  store i32 -4312, i32* @r2, align 4
  br i1 %v7_dd04, label %dec_label_pc_ddcc, label %dec_label_pc_dd14

dec_label_pc_dd14:                                ; preds = %dec_label_pc_dc1c
  store i32 %v2_dd18, i32* %r1.global-to-local, align 4
  %v2_dd1c = add i32 %v4_dcfc, %v2_dd18
  store i32 %v2_dd1c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_dd24 = add i32 %v2_dd1c, -4312
  %v5_dd24 = inttoptr i32 %v4_dd24 to i8*
  store i8 0, i8* %v5_dd24, align 1
  %v1_dd2c = call i32 @function_11d4c(i32 30)
  %v0_dd30 = load i32, i32* @r4, align 4
  store i32 %v0_dd30, i32* %r1.global-to-local, align 4
  %v2_dd38 = inttoptr i32 %v0_dd30 to i32*
  %v3_dd38 = call i32 @function_11c68(i32 30, i32* %v2_dd38)
  %v0_dd3c = load i32, i32* @r5, align 4
  %v1_dd3c = add i32 %v0_dd3c, -1
  store i32 %v1_dd3c, i32* @r1, align 4
  store i32 %v3_dd38, i32* %r2.global-to-local, align 4
  %v4_dd48 = call i32 @function_1266c(i8* %v2_d808, i32 %v1_dd3c, i32 %v3_dd38)
  %v7_dd4c = icmp eq i32 %v4_dd48, -1
  br i1 %v7_dd4c, label %dec_label_pc_dd68, label %dec_label_pc_dd54

dec_label_pc_dd54:                                ; preds = %dec_label_pc_dd14
  %v2_dd58 = call i32 @function_12f18(i8* %v2_d808)
  %v0_dd5c = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_dd64 = call i32 @function_12d1c(i32 %v0_dd5c, i32 9)
  br label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd14, %dec_label_pc_dd54
  %v1_dd6c = call i32 @function_11c94(i32 30)
  %v0_dd70 = call i32 @function_12c74()
  %v0_dd74 = load i32, i32* @r7, align 4
  %v9_dd74 = icmp eq i32 %v0_dd74, %v0_dd70
  br i1 %v9_dd74, label %dec_label_pc_dda0, label %dec_label_pc_dd7c

dec_label_pc_dd7c:                                ; preds = %dec_label_pc_dd68
  %v0_dd7c = call i32 @function_12ca0()
  %v0_dd80 = load i32, i32* @r7, align 4
  %v9_dd80 = icmp eq i32 %v0_dd80, %v0_dd7c
  br i1 %v9_dd80, label %dec_label_pc_dda0, label %dec_label_pc_dd88

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd7c
  store i32 ptrtoint (i32* @global_var_1dc50.67 to i32), i32* %r2.global-to-local, align 4
  %v2_dd90 = load i32, i32* @global_var_1dc50.67, align 4
  store i32 %v2_dd90, i32* %r1.global-to-local, align 4
  %v4_dd94 = call i32 @function_126f8(i8* %v2_d808, i32 %v2_dd90, i32 ptrtoint (i32* @global_var_1dc50.67 to i32))
  %v2_dd98 = icmp eq i32 %v4_dd94, 0
  br i1 %v2_dd98, label %dec_label_pc_ddac, label %dec_label_pc_dd88.dec_label_pc_dda0_crit_edge

dec_label_pc_dd88.dec_label_pc_dda0_crit_edge:    ; preds = %dec_label_pc_dd88
  %v0_dda4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_dda0

dec_label_pc_dda0:                                ; preds = %dec_label_pc_dd88.dec_label_pc_dda0_crit_edge, %dec_label_pc_dd7c, %dec_label_pc_dd68
  %v0_dda4 = phi i32 [ %v0_dda4.pre, %dec_label_pc_dd88.dec_label_pc_dda0_crit_edge ], [ %v0_dd7c, %dec_label_pc_dd7c ], [ %v0_dd70, %dec_label_pc_dd68 ]
  %v2_dda0 = load i32, i32* %stack_var_-8452, align 4
  store i32 %v2_dda0, i32* @r8, align 4
  store i32 %v0_dda4, i32* @r5, align 4
  br label %dec_label_pc_db80.backedge

dec_label_pc_db80.backedge:                       ; preds = %dec_label_pc_dbe4, %dec_label_pc_dbdc, %dec_label_pc_db90, %dec_label_pc_dda0, %dec_label_pc_def4, %.thread8
  %stack_var_-8448.1.be = phi i32 [ %v1_dbb4, %dec_label_pc_def4 ], [ %v1_dbb4, %dec_label_pc_dda0 ], [ %v1_dbb4, %.thread8 ], [ %stack_var_-8448.2, %dec_label_pc_db90 ], [ %v1_dbb4, %dec_label_pc_dbdc ], [ %v1_dbb4, %dec_label_pc_dbe4 ]
  %v0_db80 = load i32, i32* @sb, align 4
  %v1_db84 = inttoptr i32 %v0_db80 to i32*
  %v2_db84 = call i32 @function_13120(i32* %v1_db84)
  %v2_db88 = icmp eq i32 %v2_db84, 0
  br i1 %v2_db88, label %dec_label_pc_dc10, label %dec_label_pc_db90.preheader

dec_label_pc_ddac:                                ; preds = %dec_label_pc_dd88
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ddb4 = call i32 @function_12d48(i8* %v2_d808, i32 0)
  %v7_ddb8 = icmp eq i32 %v3_ddb4, -1
  store i32 %v3_ddb4, i32* @r4, align 4
  br i1 %v7_ddb8, label %dec_label_pc_df8c, label %dec_label_pc_ddc4

dec_label_pc_ddc4:                                ; preds = %dec_label_pc_ddac, %dec_label_pc_df8c
  %v0_ddc4 = phi i32 [ %v3_ddb4, %dec_label_pc_ddac ], [ %v0_ddc4.pre, %dec_label_pc_df8c ]
  %v1_ddc8 = call i32 @function_12c1c(i32 %v0_ddc4)
  br label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_dc1c, %dec_label_pc_ddc4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ddd8 = call i32 @function_12d48(i8* %v2_dc50, i32 0)
  %v7_dddc = icmp eq i32 %v3_ddd8, -1
  store i32 %v3_ddd8, i32* %r8.global-to-local, align 4
  br i1 %v7_dddc, label %dec_label_pc_def4, label %dec_label_pc_dde8

dec_label_pc_dde8:                                ; preds = %dec_label_pc_ddcc
  %v1_ddec = call i32 @function_11d4c(i32 18)
  %v1_ddf4 = call i32 @function_11d4c(i32 19)
  store i32 %v2_ddfc, i32* %r1.global-to-local, align 4
  %v3_de04 = call i32 @function_11c68(i32 18, i32* nonnull %stack_var_-40)
  store i32 %v3_de04, i32* @r5, align 4
  store i32 %v2_de10, i32* %r1.global-to-local, align 4
  %v3_de18 = call i32 @function_11c68(i32 19, i32* nonnull %stack_var_-44)
  store i32 %v3_de18, i32* @r6, align 4
  br label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %dec_label_pc_de8c, %.thread22, %dec_label_pc_de54, %dec_label_pc_dde8
  %v0_de20 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_d8bc, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_de2c = call i32 @function_12de4(i32 %v0_de20, i32* nonnull %stack_var_-8444, i32 4096)
  %tmp131 = icmp slt i32 %v4_de2c, 1
  br i1 %tmp131, label %dec_label_pc_df70, label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %dec_label_pc_de20
  store i32 %v2_da54, i32* %r3.global-to-local, align 4
  %v3_de3c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_de3c, i32* @r4, align 4
  %v5_de44 = icmp slt i32 %v4_de2c, %v3_de3c
  br i1 %v5_de44, label %dec_label_pc_de54, label %dec_label_pc_dea8.lr.ph

dec_label_pc_dea8.lr.ph:                          ; preds = %dec_label_pc_de38
  %v1_dea036 = add i32 %v4_de2c, -1
  store i32 %v1_dea036, i32* %r1.global-to-local, align 4
  %v0_dea8.pre = load i32, i32* @r5, align 4
  %v1_deac.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_dea8

dec_label_pc_de54:                                ; preds = %dec_label_pc_dea0.backedge, %dec_label_pc_de38
  store i32 %v2_da54, i32* %r1.global-to-local, align 4
  %v3_de58 = load i32, i32* %stack_var_-44, align 4
  %v5_de60 = icmp slt i32 %v4_de2c, %v3_de58
  br i1 %v5_de60, label %dec_label_pc_de20, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_de54
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_de6c46 = icmp eq i32 %v4_de2c, 0
  br i1 %v2_de6c46, label %dec_label_pc_de20, label %dec_label_pc_de74.lr.ph

dec_label_pc_de74.lr.ph:                          ; preds = %.thread22
  %v0_de74.pre = load i32, i32* @r6, align 4
  %v1_de78.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_de74

dec_label_pc_de74:                                ; preds = %dec_label_pc_de8c, %dec_label_pc_de74.lr.ph
  %v0_de6c.in = phi i32 [ %v4_de2c, %dec_label_pc_de74.lr.ph ], [ %v0_de6c, %dec_label_pc_de8c ]
  %v0_de8c = phi i32 [ 0, %dec_label_pc_de74.lr.ph ], [ %v1_de8c, %dec_label_pc_de8c ]
  %v0_de80 = phi i32 [ 0, %dec_label_pc_de74.lr.ph ], [ %v1_de80., %dec_label_pc_de8c ]
  %v0_de6c = add i32 %v0_de6c.in, -1
  %v2_de74 = add i32 %v0_de80, %v0_de74.pre
  %v3_de74 = inttoptr i32 %v2_de74 to i8*
  %v4_de74 = load i8, i8* %v3_de74, align 1
  %v6_de74 = zext i8 %v4_de74 to i32
  store i32 %v6_de74, i32* %r2.global-to-local, align 4
  %v2_de78 = add i32 %v0_de8c, %v1_de78.pre
  %v3_de78 = inttoptr i32 %v2_de78 to i8*
  %v4_de78 = load i8, i8* %v3_de78, align 1
  %v6_de78 = zext i8 %v4_de78 to i32
  store i32 %v6_de78, i32* %r3.global-to-local, align 4
  %v9_de7c = icmp eq i8 %v4_de78, %v4_de74
  %v1_de80 = add i32 %v0_de80, 1
  %v1_de80. = select i1 %v9_de7c, i32 %v1_de80, i32 0
  store i32 %v1_de80., i32* %r1.global-to-local, align 4
  br i1 %v9_de7c, label %dec_label_pc_dec8, label %dec_label_pc_de8c

dec_label_pc_de8c:                                ; preds = %dec_label_pc_dec8, %dec_label_pc_de74
  %v1_de8c = add i32 %v0_de8c, 1
  %v2_de6c = icmp eq i32 %v0_de6c, 0
  br i1 %v2_de6c, label %dec_label_pc_de20, label %dec_label_pc_de74

dec_label_pc_de94:                                ; preds = %dec_label_pc_dea8
  %v9_de94 = icmp eq i32 %v3_de3c, %v1_deb4.
  br i1 %v9_de94, label %dec_label_pc_ded0, label %dec_label_pc_dea0.backedge

dec_label_pc_dea0.backedge:                       ; preds = %dec_label_pc_dea8, %dec_label_pc_de94
  %storemerge = add i32 %storemerge.in, 1
  %v1_dea0 = add i32 %v0_dea0, -1
  store i32 %v1_dea0, i32* %r1.global-to-local, align 4
  %v2_dea0 = icmp eq i32 %v0_dea0, 0
  br i1 %v2_dea0, label %dec_label_pc_de54, label %dec_label_pc_dea8

dec_label_pc_dea8:                                ; preds = %dec_label_pc_dea0.backedge, %dec_label_pc_dea8.lr.ph
  %v0_dea0 = phi i32 [ %v1_dea036, %dec_label_pc_dea8.lr.ph ], [ %v1_dea0, %dec_label_pc_dea0.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_dea8.lr.ph ], [ %storemerge, %dec_label_pc_dea0.backedge ]
  %v0_deb4 = phi i32 [ 0, %dec_label_pc_dea8.lr.ph ], [ %v1_deb4., %dec_label_pc_dea0.backedge ]
  %v2_dea8 = add i32 %v0_deb4, %v0_dea8.pre
  %v3_dea8 = inttoptr i32 %v2_dea8 to i8*
  %v4_dea8 = load i8, i8* %v3_dea8, align 1
  %v6_dea8 = zext i8 %v4_dea8 to i32
  store i32 %v6_dea8, i32* %r2.global-to-local, align 4
  %v2_deac = add i32 %storemerge.in, %v1_deac.pre
  %v3_deac = inttoptr i32 %v2_deac to i8*
  %v4_deac = load i8, i8* %v3_deac, align 1
  %v6_deac = zext i8 %v4_deac to i32
  store i32 %v6_deac, i32* %r3.global-to-local, align 4
  %v9_deb0 = icmp eq i8 %v4_deac, %v4_dea8
  %v1_deb4 = add i32 %v0_deb4, 1
  %v1_deb4. = select i1 %v9_deb0, i32 %v1_deb4, i32 0
  br i1 %v9_deb0, label %dec_label_pc_de94, label %dec_label_pc_dea0.backedge

dec_label_pc_dec8:                                ; preds = %dec_label_pc_de74
  %v9_dec8 = icmp eq i32 %v3_de58, %v1_de80.
  br i1 %v9_dec8, label %dec_label_pc_ded0, label %dec_label_pc_de8c

dec_label_pc_ded0:                                ; preds = %dec_label_pc_de94, %dec_label_pc_dec8
  %v1_ded4 = call i32 @function_11c94(i32 18)
  %v1_dedc = call i32 @function_11c94(i32 19)
  %v0_dee0 = load i32, i32* %r8.global-to-local, align 4
  %v1_dee4 = call i32 @function_12c1c(i32 %v0_dee0)
  %v0_dee8 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_def0 = call i32 @function_12d1c(i32 %v0_dee8, i32 9)
  br label %dec_label_pc_def4

dec_label_pc_def4:                                ; preds = %dec_label_pc_ddcc, %dec_label_pc_df70, %dec_label_pc_ded0
  store i32 64, i32* @r1, align 4
  store i32 %v2_dc4c, i32* @r0, align 4
  %v0_df00 = call i32 @function_123b8()
  store i32 %v2_dc9c, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_df10 = call i32 @function_123b8()
  %v1_df18 = call i32 @function_1401c(i32 1)
  %v2_df1c = load i32, i32* %stack_var_-8452, align 4
  store i32 %v2_df1c, i32* @r8, align 4
  %v0_df20 = load i32, i32* @r7, align 4
  store i32 %v0_df20, i32* @r5, align 4
  br label %dec_label_pc_db80.backedge

dec_label_pc_df28:                                ; preds = %dec_label_pc_d8e4
  %v1_df30 = call i32 @function_d1c4(i32 42448)
  %v2_df34 = icmp eq i32 %v1_df30, 0
  br i1 %v2_df34, label %dec_label_pc_df3c, label %dec_label_pc_daa0

dec_label_pc_df3c:                                ; preds = %dec_label_pc_df28
  %v1_df40 = call i32 @function_d1c4(i32 20480)
  %v2_df44 = icmp eq i32 %v1_df40, 0
  br i1 %v2_df44, label %dec_label_pc_df4c, label %dec_label_pc_daa0

dec_label_pc_df4c:                                ; preds = %dec_label_pc_df3c
  %v1_df54 = call i32 @function_d1c4(i32 34254)
  %v2_df58 = icmp eq i32 %v1_df54, 0
  br i1 %v2_df58, label %dec_label_pc_df60, label %dec_label_pc_daa0

dec_label_pc_df60:                                ; preds = %dec_label_pc_df4c
  %v1_df68 = call i32 @function_d1c4(i32 24465)
  br label %dec_label_pc_daa0

dec_label_pc_df70:                                ; preds = %dec_label_pc_de20
  %v1_df74 = call i32 @function_11c94(i32 18)
  %v1_df7c = call i32 @function_11c94(i32 19)
  %v0_df80 = load i32, i32* %r8.global-to-local, align 4
  %v1_df84 = call i32 @function_12c1c(i32 %v0_df80)
  br label %dec_label_pc_def4

dec_label_pc_df8c:                                ; preds = %dec_label_pc_ddac
  %v0_df8c = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_df94 = call i32 @function_12d1c(i32 %v0_df8c, i32 9)
  %v0_ddc4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ddc4

; uselistorder directives
  uselistorder i32 %v1_deb4., { 1, 0 }
  uselistorder i1 %v9_deb0, { 1, 0 }
  uselistorder i32 %v0_deb4, { 1, 0 }
  uselistorder i32 %v1_de80., { 1, 2, 0 }
  uselistorder i1 %v9_de7c, { 1, 0 }
  uselistorder i32 %v0_de80, { 1, 0 }
  uselistorder i32 %v0_de8c, { 1, 0 }
  uselistorder i32 %v3_ddd8, { 1, 0 }
  uselistorder i32 %v3_ddb4, { 1, 2, 0 }
  uselistorder i32 %v2_db84, { 1, 0 }
  uselistorder i32 %stack_var_-8448.1.be, { 1, 0 }
  uselistorder i32 %v4_dcfc, { 1, 2, 0 }
  uselistorder i32 %v2_dc04, { 1, 0 }
  uselistorder i32 %v1_dbb4, { 0, 1, 5, 4, 3, 2, 7, 8, 6 }
  uselistorder i32 %v3_db54, { 1, 2, 0 }
  uselistorder i32 %v3_db1c, { 1, 2, 0 }
  uselistorder i32 %v3_dae4, { 1, 2, 0 }
  uselistorder i32 %v3_daac, { 2, 1, 0 }
  uselistorder i32 %stack_var_-8448.0, { 1, 0 }
  uselistorder i32 %v2_dc9c, { 1, 0, 2 }
  uselistorder i32 %v2_dc4c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_d88c, { 1, 0 }
  uselistorder i32 %v3_d858, { 2, 0, 1 }
  uselistorder i8* %v2_d808, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 %v2_d7fc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %storemerge86, { 1, 0 }
  uselistorder i32 %v0_d778, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 8, 9, 10, 11, 3, 4, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 18, 4, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 33, 32, 34, 35, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 5, 6, 7, 19, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17 }
  uselistorder i32 (i8*, i32, i32)* @function_1266c, { 3, 0, 1, 2 }
  uselistorder i32 (i32*)* @function_12f70, { 2, 0, 1 }
  uselistorder i32 (i32*)* @function_13120, { 8, 7, 0, 3, 4, 5, 2, 6, 1 }
  uselistorder i32 (i32, i32)* @function_133e4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_d1c4, { 36, 35, 34, 33, 5, 4, 3, 2, 1, 0, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 (i32)* @function_13024, { 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_12e10, { 3, 0, 1, 2 }
  uselistorder i32* @global_var_1dc50.67, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_def4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ded0, { 1, 0 }
  uselistorder label %dec_label_pc_ddcc, { 1, 0 }
  uselistorder label %dec_label_pc_ddc4, { 1, 0 }
  uselistorder label %dec_label_pc_db80.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_dd68, { 1, 0 }
  uselistorder label %dec_label_pc_db90, { 1, 0 }
  uselistorder label %dec_label_pc_db90.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_db48, { 1, 0 }
  uselistorder label %dec_label_pc_db10, { 1, 0 }
  uselistorder label %dec_label_pc_dad8, { 1, 0 }
  uselistorder label %dec_label_pc_daa0, { 4, 0, 1, 2, 3 }
  uselistorder label %bb130, { 1, 0 }
}

define i32 @function_dfa8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dfa8:
  store i32 ptrtoint (i32* @global_var_dfc0.72 to i32), i32* @global_var_1da44.74, align 4
  ret i32 %arg1
}

define i32 @function_dfc0() local_unnamed_addr {
dec_label_pc_dfc0:
  %stack_var_-8 = alloca i32, align 4
  %v3_dfc0 = load i32, i32* @r4, align 4
  store i32 %v3_dfc0, i32* %stack_var_-8, align 4
  %v1_dfc8 = call i32 @function_11d4c(i32 1)
  store i32 ptrtoint ([15 x i8]* @global_var_15488.76 to i32), i32* @r0, align 4
  %v2_dfd0 = call i32 @function_1330c(i32 ptrtoint ([15 x i8]* @global_var_15488.76 to i32))
  store i32 %v2_dfd0, i32* @global_var_1dc5c.79, align 4
  %v3_dfe4 = call i32 @function_11c68(i32 1, i32* null)
  %v4_dfe4 = inttoptr i32 %v3_dfe4 to i8*
  %v2_dfe8 = add i32 %v3_dfe4, 1
  %v3_dfe8 = inttoptr i32 %v2_dfe8 to i8*
  %v4_dfe8 = load i8, i8* %v3_dfe8, align 1
  %v3_dfec = load i8, i8* %v4_dfe4, align 1
  store i8 %v4_dfe8, i8* bitcast (i32* @global_var_1dc5b.80 to i8*), align 4
  store i8 %v3_dfec, i8* bitcast (i32* @global_var_1dc5a.81 to i8*), align 4
  %v2_e004 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e004, i32* @r4, align 4
  %v1_e008 = call i32 @function_11c94(i32 1)
  %v0_e00c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e00c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dfc0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dfc0, %bb
  ret i32 %v1_e008

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_e014(i32 %arg1) local_unnamed_addr {
dec_label_pc_e014:
  %stack_var_-16 = alloca i32, align 4
  %v3_e014 = load i32, i32* @r4, align 4
  %v6_e014 = load i32, i32* @r5, align 4
  %v2_e018 = ptrtoint i32* %stack_var_-16 to i32
  %v0_e01c = call i32 @function_12c48()
  %v7_e020 = icmp eq i32 %v0_e01c, -1
  %. = zext i1 %v7_e020 to i32
  %tmp10 = icmp slt i32 %v0_e01c, 1
  %storemerge4 = select i1 %tmp10, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_e03c = icmp eq i32 %storemerge4, 0
  store i32 %v0_e01c, i32* @global_var_1dbb8.83, align 4
  br i1 %v2_e03c, label %dec_label_pc_e050, label %dec_label_pc_e048

dec_label_pc_e048:                                ; preds = %dec_label_pc_e014
  store i32 %v3_e014, i32* @r4, align 4
  store i32 %v6_e014, i32* @r5, align 4
  ret i32 %v0_e01c

dec_label_pc_e050:                                ; preds = %dec_label_pc_e014
  store i32 1, i32* %stack_var_-16, align 4
  %v1_e05c = call i32 @function_11d4c(i32 23)
  %v1_e064 = call i32 @function_11d4c(i32 24)
  %v0_e068 = load i32, i32* @r5, align 4
  %v2_e070 = inttoptr i32 %v0_e068 to i32*
  %v3_e070 = call i32 @function_11c68(i32 23, i32* %v2_e070)
  %v2_e078 = inttoptr i32 %v3_e070 to i8*
  %v3_e078 = call i32 @function_12d48(i8* %v2_e078, i32 2)
  %v7_e07c = icmp eq i32 %v3_e078, -1
  store i32 %v3_e078, i32* @r4, align 4
  br i1 %v7_e07c, label %dec_label_pc_e0c4, label %dec_label_pc_e088

dec_label_pc_e088:                                ; preds = %dec_label_pc_e0c4, %dec_label_pc_e050
  %v0_e094 = phi i32 [ %v4_e0d4, %dec_label_pc_e0c4 ], [ %v3_e078, %dec_label_pc_e050 ]
  %v3_e09c = call i32 @function_12ccc(i32 %v0_e094, i32 -2147199228, i32 %v2_e018)
  br label %dec_label_pc_e0a0

dec_label_pc_e0a0:                                ; preds = %dec_label_pc_e0a0, %dec_label_pc_e088
  %v0_e0ac = load i32, i32* @r4, align 4
  %v3_e0b4 = call i32 @function_12ccc(i32 %v0_e0ac, i32 -2147199227, i32 0)
  %v1_e0bc = call i32 @function_1401c(i32 10)
  br label %dec_label_pc_e0a0

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e050
  %v0_e0c4 = load i32, i32* @r5, align 4
  %v2_e0cc = inttoptr i32 %v0_e0c4 to i32*
  %v3_e0cc = call i32 @function_11c68(i32 24, i32* %v2_e0cc)
  %v3_e0d4 = inttoptr i32 %v3_e0cc to i8*
  %v4_e0d4 = call i32 @function_12d48(i8* %v3_e0d4, i32 2)
  %v3_e0d8 = icmp eq i32 %v4_e0d4, -1
  store i32 %v4_e0d4, i32* @r4, align 4
  br i1 %v3_e0d8, label %dec_label_pc_e0e4, label %dec_label_pc_e088

dec_label_pc_e0e4:                                ; preds = %dec_label_pc_e0c4
  %v1_e0e8 = call i32 @function_11c94(i32 23)
  %v1_e0f0 = call i32 @function_11c94(i32 24)
  %v0_e0f4 = load i32, i32* @r5, align 4
  %v1_e0f8 = call i32 @function_13f88(i32 %v0_e0f4)
  %v0_e0fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e0fc, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_e0e4
  %v6_e0fc = trunc i32 %v2_e018 to i16
  store i16 %v6_e0fc, i16* inttoptr (i32 2 to i16*), align 2
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_e0e4, %bb13
  ret i32 %v1_e0f8

; uselistorder directives
  uselistorder i32 %v4_e0d4, { 1, 2, 0 }
  uselistorder i32 %v3_e078, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_e01c, { 3, 1, 2, 0 }
  uselistorder i32 %v2_e018, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12ccc, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
}

define i32 @function_e100(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e100:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-38 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-380 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e100 = load i32, i32* @r4, align 4
  store i32 %v3_e100, i32* %stack_var_-36, align 4
  %v9_e100 = load i32, i32* @r6, align 4
  %v15_e100 = load i32, i32* @r8, align 4
  %v2_e10c = ptrtoint i32* %stack_var_-508 to i32
  store i32 %v2_e10c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_e10c, i32* @r0, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v1_e124 = call i32 @function_1355c(i32 %v2_e10c)
  store i32 %v2_e10c, i32* @r0, align 4
  %v2_e130 = call i32 @function_1352c(i32 %v2_e10c, i32 2)
  %v0_e134 = load i32, i32* @r5, align 4
  store i32 %v0_e134, i32* %r2.global-to-local, align 4
  %v3_e140 = bitcast i32* %stack_var_-508 to %_TYPEDEF_sigset_t*
  %v4_e140 = call i32 @function_12e98(i32 %v0_e134, %_TYPEDEF_sigset_t* %v3_e140, i32 %v0_e134)
  %v2_e14c = call i32 @function_13574(i32 17, i32 1)
  %v2_e158 = call i32 @function_13574(i32 5, i32 ptrtoint (i32* @global_var_dfa8.84 to i32))
  %v0_e15c = call i32 @function_125d0()
  store i32 %v0_e15c, i32* @global_var_1dc4c.49, align 4
  store i32 1494907824, i32* %r2.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dc5b.80 to i8*), align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* bitcast (i8** @global_var_1dc58.78 to i8*), align 4
  store i32 1494907824, i32* @global_var_1dc5c.79, align 4
  %v0_e184 = load i32, i32* @r5, align 4
  %v1_e184 = trunc i32 %v0_e184 to i8
  store i8 %v1_e184, i8* bitcast (i32* @global_var_1dc5a.81 to i8*), align 4
  store i8 %v1_e184, i8* bitcast (i32* @global_var_1dc59.88 to i8*), align 4
  %v6_e18c = call i32 @function_11e04(i32 %v0_e15c, i32 ptrtoint (i8** @global_var_1dc58.78 to i32), i32 1494907824, i32 2)
  store i32 ptrtoint (i32* @global_var_dfc0.72 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_dfc0.72 to i32), i32* @global_var_1da44.74, align 4
  %v1_e19c = call i32 @function_e884(i32 %v6_e18c)
  %v2_e1a4 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_e1a4, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_e1ac = call i32 @function_123b8()
  %v0_e1b0 = load i32, i32* @r6, align 4
  %v7_e1b0 = icmp eq i32 %v0_e1b0, 2
  br i1 %v7_e1b0, label %dec_label_pc_e2d8, label %dec_label_pc_e1b8

dec_label_pc_e1b8:                                ; preds = %dec_label_pc_e2d8, %dec_label_pc_e100, %dec_label_pc_e2e8
  %v0_e1b8 = call i32 @function_e82c()
  store i32 %v0_e1b8, i32* %r6.global-to-local, align 4
  %v0_e1c0 = load i32, i32* @r8, align 4
  %v1_e1c0 = inttoptr i32 %v0_e1c0 to i32*
  %v2_e1c0 = load i32, i32* %v1_e1c0, align 4
  %v1_e1c4 = inttoptr i32 %v2_e1c0 to i8*
  %v2_e1c4 = call i32 @function_12318(i8* %v1_e1c4)
  %v0_e1cc = load i32, i32* @r8, align 4
  %v1_e1cc = inttoptr i32 %v0_e1cc to i32*
  %v2_e1cc = load i32, i32* %v1_e1cc, align 4
  %v1_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v2_e1d0 = call i32 @function_12318(i8* %v1_e1d0)
  %v1_e1d4 = sub i32 20, %v2_e1c4
  store i32 %v2_e1d0, i32* @r5, align 4
  %v0_e1dc = load i32, i32* %r6.global-to-local, align 4
  %v2_e1e0 = call i32 @function_129a4(i32 %v0_e1dc, i32 %v1_e1d4)
  %v1_e1e8 = load i32, i32* @r5, align 4
  %v2_e1e8 = add i32 %v1_e1e8, %v2_e1e0
  store i32 %v2_e1e8, i32* @r4, align 4
  %v2_e1ec = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e1ec, i32* @r6, align 4
  %v2_e1f8 = call i32 @function_e8e0(i32 %v2_e1ec, i32 %v2_e1e8)
  %v2_e1fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e1fc, i32* %r2.global-to-local, align 4
  %v1_e200 = load i32, i32* @r4, align 4
  %v2_e200 = add i32 %v1_e200, %v2_e1fc
  store i32 %v2_e200, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_e20c = load i32, i32* @r8, align 4
  %v1_e20c = inttoptr i32 %v0_e20c to i32*
  %v2_e20c = load i32, i32* %v1_e20c, align 4
  store i32 %v2_e20c, i32* @r0, align 4
  %v3_e210 = add i32 %v2_e200, -56
  %v4_e210 = inttoptr i32 %v3_e210 to i8*
  store i8 0, i8* %v4_e210, align 1
  %v2_e214 = inttoptr i32 %v2_e20c to i8*
  %v3_e214 = call i32 @function_12340(i8* %v2_e214, i32 %v2_e1ec)
  store i32 32, i32* @r1, align 4
  store i32 %v2_e1ec, i32* @r0, align 4
  %v0_e220 = call i32 @function_123b8()
  %v0_e224 = call i32 @function_e82c()
  store i32 %v0_e224, i32* @r7, align 4
  %v0_e22c = load i32, i32* @r8, align 4
  %v1_e22c = inttoptr i32 %v0_e22c to i32*
  %v2_e22c = load i32, i32* %v1_e22c, align 4
  %v1_e230 = inttoptr i32 %v2_e22c to i8*
  %v2_e230 = call i32 @function_12318(i8* %v1_e230)
  %v0_e238 = load i32, i32* @r8, align 4
  %v1_e238 = inttoptr i32 %v0_e238 to i32*
  %v2_e238 = load i32, i32* %v1_e238, align 4
  %v1_e23c = inttoptr i32 %v2_e238 to i8*
  %v2_e23c = call i32 @function_12318(i8* %v1_e23c)
  %v1_e240 = sub i32 20, %v2_e230
  store i32 %v2_e23c, i32* @r5, align 4
  %v0_e248 = load i32, i32* @r7, align 4
  %v2_e24c = call i32 @function_129a4(i32 %v0_e248, i32 %v1_e240)
  %v1_e250 = load i32, i32* @r5, align 4
  %v2_e250 = add i32 %v1_e250, %v2_e24c
  store i32 %v2_e250, i32* @r4, align 4
  %v2_e25c = call i32 @function_e8e0(i32 %v2_e1ec, i32 %v2_e250)
  %v1_e264 = load i32, i32* @r4, align 4
  %v2_e264 = add i32 %v1_e264, %v2_e1fc
  store i32 %v2_e264, i32* @r3, align 4
  %v0_e268 = load i32, i32* @sb, align 4
  %v1_e268 = trunc i32 %v0_e268 to i8
  %v3_e268 = add i32 %v2_e264, -56
  %v4_e268 = inttoptr i32 %v3_e268 to i8*
  store i8 %v1_e268, i8* %v4_e268, align 1
  %v2_e274 = call i32 @function_12db4(i32 15, i32 %v2_e1ec)
  %v1_e27c = call i32 @function_11d4c(i32 3)
  %v3_e288 = call i32 @function_11c68(i32 3, i32* nonnull %stack_var_-52)
  %v3_e28c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e28c, i32* %r2.global-to-local, align 4
  %v3_e298 = inttoptr i32 %v3_e288 to i32*
  %v4_e298 = call i32 @function_12f44(i32 1, i32* %v3_e298, i32 %v3_e28c)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e2a8 = call i32 @function_12f44(i32 1, i32* nonnull @global_var_15498.92, i32 1)
  %v1_e2b0 = call i32 @function_11c94(i32 3)
  %v1_e2b4 = call i32 @function_8650(i32 %v1_e2b0)
  %v1_e2b8 = call i32 @function_d760(i32 %v1_e2b4)
  %v1_e2bc = call i32 @function_e014(i32 %v1_e2b8)
  %v0_e2c0 = call i32 @function_12c48()
  %v1_e2c4 = load i32, i32* @sb, align 4
  %v7_e2c8 = icmp sgt i32 %v0_e2c0, %v1_e2c4
  br i1 %v7_e2c8, label %dec_label_pc_e2cc, label %dec_label_pc_e314

dec_label_pc_e2cc:                                ; preds = %dec_label_pc_e1b8
  store i32 %v9_e100, i32* %r6.global-to-local, align 4
  store i32 %v15_e100, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e100
  %v0_e2d8 = load i32, i32* @r8, align 4
  %v1_e2d8 = add i32 %v0_e2d8, 4
  %v2_e2d8 = inttoptr i32 %v1_e2d8 to i32*
  %v3_e2d8 = load i32, i32* %v2_e2d8, align 4
  %v1_e2dc = inttoptr i32 %v3_e2d8 to i8*
  %v2_e2dc = call i32 @function_12318(i8* %v1_e2dc)
  %v8_e2e4 = icmp sgt i32 %v2_e2dc, 31
  br i1 %v8_e2e4, label %dec_label_pc_e1b8, label %dec_label_pc_e2e8

dec_label_pc_e2e8:                                ; preds = %dec_label_pc_e2d8
  %v0_e2ec = load i32, i32* @r8, align 4
  %v1_e2ec = add i32 %v0_e2ec, 4
  %v2_e2ec = inttoptr i32 %v1_e2ec to i32*
  %v3_e2ec = load i32, i32* %v2_e2ec, align 4
  store i32 %v2_e1a4, i32* @r0, align 4
  %v2_e2f4 = bitcast i32* %stack_var_-124 to i8*
  %v3_e2f4 = call i32 @function_12340(i8* %v2_e2f4, i32 %v3_e2ec)
  %v0_e2f8 = load i32, i32* @r8, align 4
  %v1_e2f8 = add i32 %v0_e2f8, 4
  %v2_e2f8 = inttoptr i32 %v1_e2f8 to i32*
  %v3_e2f8 = load i32, i32* %v2_e2f8, align 4
  %v1_e300 = inttoptr i32 %v3_e2f8 to i8*
  %v2_e300 = call i32 @function_12318(i8* %v1_e300)
  store i32 %v2_e300, i32* @r1, align 4
  store i32 %v3_e2f8, i32* @r0, align 4
  %v0_e30c = call i32 @function_123b8()
  br label %dec_label_pc_e1b8

dec_label_pc_e314:                                ; preds = %dec_label_pc_e1b8
  %v1_e314 = call i32 @function_12e6c(i32 %v0_e2c0)
  %v0_e318 = load i32, i32* @sb, align 4
  %v1_e31c = call i32 @function_12c1c(i32 %v0_e318)
  %v1_e324 = call i32 @function_12c1c(i32 1)
  %v1_e32c = call i32 @function_12c1c(i32 2)
  %v1_e330 = call i32 @function_8650(i32 %v1_e32c)
  %v1_e334 = call i32 @function_d760(i32 %v1_e330)
  %v1_e338 = call i32 @function_e014(i32 %v1_e334)
  %v1_e33c = call i32 @function_ed08(i32 %v1_e338)
  %v2_e344 = ptrtoint i32* %stack_var_-1532 to i32
  store i32 %v2_e344, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1da40.96 to i32), i32* @sl, align 4
  %v2_e35c = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_e35c, i32* @r6, align 4
  %v2_e360 = ptrtoint i32* %stack_var_-380 to i32
  store i32 %v2_e360, i32* @r7, align 4
  %v2_e430 = ptrtoint i32* %stack_var_-60 to i32
  %v4_e6e8 = bitcast i8** %stack_var_-38 to i32*
  %v2_e680 = ptrtoint i32* %stack_var_-44 to i32
  %v2_e684 = ptrtoint i32* %stack_var_-48 to i32
  %v1_e6f8 = bitcast i32* %stack_var_-124 to i8*
  br label %dec_label_pc_e364

dec_label_pc_e364:                                ; preds = %dec_label_pc_e364.backedge, %dec_label_pc_e314
  %v2_e36c43 = phi i32 [ %v2_e36c43.pre, %dec_label_pc_e364.backedge ], [ %v2_e35c, %dec_label_pc_e314 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_e36c45 = inttoptr i32 %v2_e36c43 to i32*
  store i32 0, i32* %v4_e36c45, align 4
  %v0_e37046 = load i32, i32* %r3.global-to-local, align 4
  %v1_e37047 = add i32 %v0_e37046, 4
  store i32 %v1_e37047, i32* %r3.global-to-local, align 4
  %v7_e37448 = icmp eq i32 %v1_e37047, 128
  br i1 %v7_e37448, label %dec_label_pc_e37c, label %dec_label_pc_e36c.dec_label_pc_e36c_crit_edge

dec_label_pc_e36c.dec_label_pc_e36c_crit_edge:    ; preds = %dec_label_pc_e364, %dec_label_pc_e36c.dec_label_pc_e36c_crit_edge
  %v1_e37049 = phi i32 [ %v1_e370, %dec_label_pc_e36c.dec_label_pc_e36c_crit_edge ], [ %v1_e37047, %dec_label_pc_e364 ]
  %v0_e36c.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_e36c = load i32, i32* @r6, align 4
  %v3_e36c = add i32 %v2_e36c, %v1_e37049
  %v4_e36c = inttoptr i32 %v3_e36c to i32*
  store i32 %v0_e36c.pre, i32* %v4_e36c, align 4
  %v0_e370 = load i32, i32* %r3.global-to-local, align 4
  %v1_e370 = add i32 %v0_e370, 4
  store i32 %v1_e370, i32* %r3.global-to-local, align 4
  %v7_e374 = icmp eq i32 %v1_e370, 128
  br i1 %v7_e374, label %dec_label_pc_e37c, label %dec_label_pc_e36c.dec_label_pc_e36c_crit_edge

dec_label_pc_e37c:                                ; preds = %dec_label_pc_e36c.dec_label_pc_e36c_crit_edge, %dec_label_pc_e364
  %v0_e37c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e37c, i32* %r3.global-to-local, align 4
  store i32 %v0_e37c, i32* @r4, align 4
  %v2_e38450 = load i32, i32* @r7, align 4
  %v3_e38451 = add i32 %v2_e38450, %v0_e37c
  %v4_e38452 = inttoptr i32 %v3_e38451 to i32*
  store i32 %v0_e37c, i32* %v4_e38452, align 4
  %v0_e38853 = load i32, i32* %r3.global-to-local, align 4
  %v1_e38854 = add i32 %v0_e38853, 4
  store i32 %v1_e38854, i32* %r3.global-to-local, align 4
  %v7_e38c55 = icmp eq i32 %v1_e38854, 128
  br i1 %v7_e38c55, label %dec_label_pc_e394, label %dec_label_pc_e384.dec_label_pc_e384_crit_edge

dec_label_pc_e384.dec_label_pc_e384_crit_edge:    ; preds = %dec_label_pc_e37c, %dec_label_pc_e384.dec_label_pc_e384_crit_edge
  %v1_e38856 = phi i32 [ %v1_e388, %dec_label_pc_e384.dec_label_pc_e384_crit_edge ], [ %v1_e38854, %dec_label_pc_e37c ]
  %v0_e384.pre = load i32, i32* @r4, align 4
  %v2_e384 = load i32, i32* @r7, align 4
  %v3_e384 = add i32 %v2_e384, %v1_e38856
  %v4_e384 = inttoptr i32 %v3_e384 to i32*
  store i32 %v0_e384.pre, i32* %v4_e384, align 4
  %v0_e388 = load i32, i32* %r3.global-to-local, align 4
  %v1_e388 = add i32 %v0_e388, 4
  store i32 %v1_e388, i32* %r3.global-to-local, align 4
  %v7_e38c = icmp eq i32 %v1_e388, 128
  br i1 %v7_e38c, label %dec_label_pc_e394, label %dec_label_pc_e384.dec_label_pc_e384_crit_edge

dec_label_pc_e394:                                ; preds = %dec_label_pc_e384.dec_label_pc_e384_crit_edge, %dec_label_pc_e37c
  %v2_e394 = load i32, i32* @global_var_1da3c.94, align 4
  %v7_e398 = icmp eq i32 %v2_e394, -1
  br i1 %v7_e398, label %dec_label_pc_e3c4, label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %dec_label_pc_e394
  %v3_e3a0 = udiv i32 %v2_e394, 32
  %v3_e3a4 = mul nuw nsw i32 %v3_e3a0, 4
  %v2_e3ac = add i32 %v3_e3a4, %v2_e1fc
  store i32 %v2_e3ac, i32* %r3.global-to-local, align 4
  %v1_e3b0 = add i32 %v2_e3ac, -216
  %v2_e3b0 = inttoptr i32 %v1_e3b0 to i32*
  %v3_e3b0 = load i32, i32* %v2_e3b0, align 4
  %v1_e3b4 = urem i32 %v2_e394, 32
  %v7_e3bc = shl i32 1, %v1_e3b4
  %v8_e3bc = or i32 %v3_e3b0, %v7_e3bc
  store i32 %v8_e3bc, i32* %r2.global-to-local, align 4
  store i32 %v8_e3bc, i32* %v2_e3b0, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %dec_label_pc_e394, %dec_label_pc_e3a0
  %v2_e3c4 = load i32, i32* @global_var_1da40.96, align 4
  store i32 %v2_e3c4, i32* %r3.global-to-local, align 4
  %v7_e3c8 = icmp eq i32 %v2_e3c4, -1
  store i32 ptrtoint (i32* @global_var_1da40.96 to i32), i32* %r8.global-to-local, align 4
  br i1 %v7_e3c8, label %dec_label_pc_e600, label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e600, %dec_label_pc_e3c4, %.thread
  store i32 ptrtoint (i8** @global_var_1dbbc.98 to i32), i32* %r2.global-to-local, align 4
  %v2_e3d8 = load i8, i8* bitcast (i8** @global_var_1dbbc.98 to i8*), align 4
  %v2_e3dc = icmp eq i8 %v2_e3d8, 0
  %v2_e4e4 = load i32, i32* @global_var_1da40.96, align 4
  %v3_e4e8 = udiv i32 %v2_e4e4, 32
  store i32 %v3_e4e8, i32* %r3.global-to-local, align 4
  br i1 %v2_e3dc, label %dec_label_pc_e4e4, label %dec_label_pc_e3e4

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3d4
  %v3_e3ec = mul nuw nsw i32 %v3_e4e8, 4
  %v2_e3f4 = add i32 %v3_e3ec, %v2_e1fc
  store i32 %v2_e3f4, i32* %r3.global-to-local, align 4
  %v1_e3f8 = add i32 %v2_e3f4, -344
  %v2_e3f8 = inttoptr i32 %v1_e3f8 to i32*
  %v3_e3f8 = load i32, i32* %v2_e3f8, align 4
  %v1_e3fc = urem i32 %v2_e4e4, 32
  %v7_e404 = shl i32 1, %v1_e3fc
  %v8_e404 = or i32 %v3_e3f8, %v7_e404
  store i32 %v8_e404, i32* %r2.global-to-local, align 4
  store i32 %v8_e404, i32* %v2_e3f8, align 4
  br label %dec_label_pc_e40c

dec_label_pc_e40c:                                ; preds = %dec_label_pc_e4e4, %dec_label_pc_e3e4
  %v2_e40c = load i32, i32* @global_var_1da3c.94, align 4
  %v2_e410 = load i32, i32* @global_var_1da40.96, align 4
  store i32 %v2_e410, i32* %r3.global-to-local, align 4
  %v5_e41c = icmp slt i32 %v2_e40c, %v2_e410
  br i1 %v5_e41c, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_e40c
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_e40c, %bb
  %v0_e434 = phi i32 [ %v2_e40c, %dec_label_pc_e40c ], [ %v2_e410, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e434 = add i32 %v0_e434, 1
  store i32 %v2_e360, i32* %r2.global-to-local, align 4
  %v5_e448 = call i32 @function_12e3c(i32 %v1_e434, i32 %v2_e35c, i32 %v2_e360, i32 0, i32 %v2_e430)
  %v8_e44c = icmp eq i32 %v5_e448, -1
  store i32 %v5_e448, i32* %r3.global-to-local, align 4
  br i1 %v8_e44c, label %dec_label_pc_e364.backedge, label %dec_label_pc_e458

dec_label_pc_e458:                                ; preds = %bb40
  %v6_e448 = trunc i32 %v5_e448 to i8
  %v3_e458 = icmp eq i8 %v6_e448, 0
  br i1 %v3_e458, label %dec_label_pc_e460, label %dec_label_pc_e480

dec_label_pc_e460:                                ; preds = %dec_label_pc_e458
  %v0_e460 = load i32, i32* @sb, align 4
  %v6_e46c = inttoptr i32 %v5_e448 to i8*
  store i8* %v6_e46c, i8** %stack_var_-38, align 4
  %v2_e470 = call i32 @function_12a70(i32 %v0_e460, i32 6)
  %v2_e474 = icmp eq i32 %v2_e470, 0
  %v0_e478 = load i32, i32* @sb, align 4
  %v1_e478 = add i32 %v0_e478, 1
  store i32 %v1_e478, i32* @sb, align 4
  br i1 %v2_e474, label %dec_label_pc_e6d0, label %dec_label_pc_e480

dec_label_pc_e480:                                ; preds = %dec_label_pc_e458, %dec_label_pc_e460, %dec_label_pc_e6d0
  store i32 ptrtoint (i8** @global_var_1dbbc.98 to i32), i32* %r2.global-to-local, align 4
  %v2_e484 = load i8, i8* bitcast (i8** @global_var_1dbbc.98 to i8*), align 4
  %v3_e484 = zext i8 %v2_e484 to i32
  store i32 %v3_e484, i32* @r4, align 4
  %v2_e488 = icmp eq i8 %v2_e484, 0
  %v2_e510 = load i32, i32* @global_var_1da40.96, align 4
  br i1 %v2_e488, label %dec_label_pc_e510, label %dec_label_pc_e490

dec_label_pc_e490:                                ; preds = %dec_label_pc_e480
  %v3_e494 = udiv i32 %v2_e510, 32
  %v3_e49c = mul nuw nsw i32 %v3_e494, 4
  %v2_e4a0 = add i32 %v3_e49c, %v2_e1fc
  store i32 %v2_e4a0, i32* %r3.global-to-local, align 4
  %v1_e4a4 = add i32 %v2_e4a0, -344
  %v2_e4a4 = inttoptr i32 %v1_e4a4 to i32*
  %v3_e4a4 = load i32, i32* %v2_e4a4, align 4
  %v1_e4a8 = urem i32 %v2_e510, 32
  %v6_e4ac = lshr i32 %v3_e4a4, %v1_e4a8
  store i32 %v6_e4ac, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1dbbc.98 to i32), i32* %r3.global-to-local, align 4
  %v1_e4b8 = urem i32 %v6_e4ac, 2
  %v2_e4b8 = icmp eq i32 %v1_e4b8, 0
  store i8 0, i8* bitcast (i8** @global_var_1dbbc.98 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1da40.96 to i32), i32* @r4, align 4
  br i1 %v2_e4b8, label %dec_label_pc_e4c8, label %dec_label_pc_e670

dec_label_pc_e4c8:                                ; preds = %dec_label_pc_e490
  store i32 58576, i32* @lr, align 4
  %v1_e4cc = icmp ne i32 %v2_e510, -1
  call void @__pseudo_cond_branch(i1 %v1_e4cc, i32 ptrtoint (i32* @global_var_12c1c.99 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e4d4 = load i32, i32* @r4, align 4
  %v2_e4d4 = inttoptr i32 %v1_e4d4 to i32*
  store i32 -1, i32* %v2_e4d4, align 4
  %v1_e4dc = call i32 @function_1401c(i32 1)
  br label %dec_label_pc_e364.backedge

dec_label_pc_e364.backedge:                       ; preds = %dec_label_pc_e4c8, %dec_label_pc_e5dc, %dec_label_pc_e6a8, %dec_label_pc_e744, %dec_label_pc_e770, %dec_label_pc_e78c, %dec_label_pc_e7f4, %bb40, %dec_label_pc_e510, %dec_label_pc_e520, %dec_label_pc_e6f0, %bb42, %dec_label_pc_e7a0, %dec_label_pc_e75c
  %v2_e36c43.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e364

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e3d4
  store i32 %v2_e1fc, i32* %r2.global-to-local, align 4
  %v3_e4f0 = mul nuw nsw i32 %v3_e4e8, 4
  %v2_e4f4 = add i32 %v3_e4f0, %v2_e1fc
  store i32 %v2_e4f4, i32* %r3.global-to-local, align 4
  %v1_e4f8 = add i32 %v2_e4f4, -216
  %v2_e4f8 = inttoptr i32 %v1_e4f8 to i32*
  %v3_e4f8 = load i32, i32* %v2_e4f8, align 4
  %v1_e4fc = urem i32 %v2_e4e4, 32
  %v7_e504 = shl i32 1, %v1_e4fc
  %v8_e504 = or i32 %v3_e4f8, %v7_e504
  store i32 %v8_e504, i32* %r2.global-to-local, align 4
  store i32 %v8_e504, i32* %v2_e4f8, align 4
  br label %dec_label_pc_e40c

dec_label_pc_e510:                                ; preds = %dec_label_pc_e480
  %v7_e514 = icmp eq i32 %v2_e510, -1
  store i32 ptrtoint (i32* @global_var_1da40.96 to i32), i32* @r8, align 4
  br i1 %v7_e514, label %dec_label_pc_e364.backedge, label %dec_label_pc_e520

dec_label_pc_e520:                                ; preds = %dec_label_pc_e510
  %v3_e520 = udiv i32 %v2_e510, 32
  %v3_e524 = mul nuw nsw i32 %v3_e520, 4
  %v2_e52c = add i32 %v3_e524, %v2_e1fc
  store i32 %v2_e52c, i32* %r3.global-to-local, align 4
  %v1_e530 = add i32 %v2_e52c, -216
  %v2_e530 = inttoptr i32 %v1_e530 to i32*
  %v3_e530 = load i32, i32* %v2_e530, align 4
  %v1_e534 = urem i32 %v2_e510, 32
  %v6_e538 = lshr i32 %v3_e530, %v1_e534
  store i32 %v6_e538, i32* %r2.global-to-local, align 4
  %v1_e53c = urem i32 %v6_e538, 2
  %v2_e53c = icmp eq i32 %v1_e53c, 0
  br i1 %v2_e53c, label %dec_label_pc_e364.backedge, label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %dec_label_pc_e520
  %v6_e544 = inttoptr i32 %v3_e484 to i8*
  store i8* %v6_e544, i8** %stack_var_-38, align 4
  %v0_e54c = call i32 @function_131f0()
  %v0_e550 = load i32, i32* @r4, align 4
  %v2_e550 = inttoptr i32 %v0_e54c to i32*
  store i32 %v0_e550, i32* %v2_e550, align 4
  store i32 %v0_e54c, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e564 = load i32, i32* @global_var_1da40.96, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_e570 = call i32 @function_13410(i32 %v2_e564, i32* %v4_e6e8, i32 2, i32 16386)
  %v7_e574 = icmp eq i32 %v5_e570, -1
  br i1 %v7_e574, label %dec_label_pc_e75c, label %dec_label_pc_e57c

dec_label_pc_e57c:                                ; preds = %dec_label_pc_e544
  %v2_e57c = icmp eq i32 %v5_e570, 0
  br i1 %v2_e57c, label %dec_label_pc_e5dc, label %dec_label_pc_e584

dec_label_pc_e584:                                ; preds = %dec_label_pc_e57c
  %v3_e584 = load i8*, i8** %stack_var_-38, align 4
  %v4_e584 = ptrtoint i8* %v3_e584 to i32
  store i32 %v3_e484, i32* %r3.global-to-local, align 4
  %v4_e58c = mul nuw nsw i32 %v3_e484, 256
  %v5_e58c = or i32 %v4_e584, %v4_e58c
  store i32 %v5_e58c, i32* %r2.global-to-local, align 4
  %v7_e58c = icmp eq i32 %v5_e58c, 0
  br i1 %v7_e58c, label %dec_label_pc_e770, label %dec_label_pc_e594

dec_label_pc_e594:                                ; preds = %dec_label_pc_e584
  %v1_e594 = mul i32 %v4_e584, 256
  %v3_e598 = and i32 %v1_e594, 65280
  %v4_e59c = udiv i32 %v5_e58c, 256
  %v5_e59c = or i32 %v3_e598, %v4_e59c
  %v6_e59c = trunc i32 %v4_e59c to i8
  store i32 %v5_e59c, i32* %r2.global-to-local, align 4
  %v4_e5a0 = udiv i32 %v5_e58c, 65536
  store i32 %v4_e5a0, i32* %r3.global-to-local, align 4
  %v3_e5a4 = icmp slt i8 %v6_e59c, 0
  %v7_e5ac = inttoptr i32 %v4_e59c to i8*
  store i8* %v7_e5ac, i8** %stack_var_-38, align 4
  br i1 %v3_e5a4, label %dec_label_pc_e78c, label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e594
  %v0_e5b4 = load i32, i32* @r4, align 4
  %v1_e5b4 = load i32, i32* @r5, align 4
  %v2_e5b4 = inttoptr i32 %v1_e5b4 to i32*
  store i32 %v0_e5b4, i32* %v2_e5b4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e5c0 = load i32, i32* @global_var_1da40.96, align 4
  %v9_e5c8 = call i32 @function_13410(i32 %v2_e5c0, i32* nonnull %stack_var_-1532, i32 %v4_e59c, i32 16386)
  %v7_e5cc = icmp eq i32 %v9_e5c8, -1
  br i1 %v7_e5cc, label %dec_label_pc_e75c, label %dec_label_pc_e5d4

dec_label_pc_e5d4:                                ; preds = %dec_label_pc_e5b4
  %v2_e5d4 = icmp eq i32 %v9_e5c8, 0
  br i1 %v2_e5d4, label %dec_label_pc_e5dc, label %dec_label_pc_e7a0

dec_label_pc_e5dc:                                ; preds = %bb42, %dec_label_pc_e5d4, %dec_label_pc_e57c
  %v2_e5dc = load i32, i32* @global_var_1da40.96, align 4
  store i32 58856, i32* @lr, align 4
  %v1_e5e4 = icmp ne i32 %v2_e5dc, -1
  call void @__pseudo_cond_branch(i1 %v1_e5e4, i32 ptrtoint (i32* @global_var_12c1c.99 to i32))
  store i32 ptrtoint (i32* @global_var_1da40.96 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1da40.96, align 4
  %v1_e5f8 = call i32 @function_1401c(i32 1)
  br label %dec_label_pc_e364.backedge

dec_label_pc_e600:                                ; preds = %dec_label_pc_e3c4
  %v0_e608 = load i32, i32* @r4, align 4
  store i32 %v0_e608, i32* %r2.global-to-local, align 4
  %v3_e60c = call i32 @function_13500(i32 2, i32 1, i32 %v0_e608)
  %v7_e610 = icmp eq i32 %v3_e60c, -1
  store i32 %v3_e60c, i32* @r5, align 4
  %v1_e618 = load i32, i32* %r8.global-to-local, align 4
  %v2_e618 = inttoptr i32 %v1_e618 to i32*
  store i32 %v3_e60c, i32* %v2_e618, align 4
  br i1 %v7_e610, label %dec_label_pc_e3d4, label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e600
  %v0_e620 = load i32, i32* @r4, align 4
  store i32 %v0_e620, i32* @r2, align 4
  %v2_e628 = call i32 @function_12b58(i32 %v3_e60c, i32 3)
  %v1_e630 = or i32 %v2_e628, 2048
  store i32 %v1_e630, i32* @r2, align 4
  %v0_e634 = load i32, i32* @r5, align 4
  %v2_e638 = call i32 @function_12b58(i32 %v0_e634, i32 4)
  store i32 ptrtoint (i32* @global_var_1da44.74 to i32), i32* %r2.global-to-local, align 4
  %v2_e640 = load i32, i32* @global_var_1da44.74, align 4
  store i32 %v2_e640, i32* %r3.global-to-local, align 4
  %v2_e644 = icmp eq i32 %v2_e640, 0
  br i1 %v2_e644, label %.thread, label %bb41

bb41:                                             ; preds = %dec_label_pc_e620
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_125d0.100 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e620, %bb41
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e658 = load i32, i32* @global_var_1da40.96, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1dbbc.98 to i8*), align 4
  %v5_e668 = call i32 @function_1335c(i32 %v2_e658, %sockaddr* bitcast (i8** @global_var_1dc58.78 to %sockaddr*), i32 16)
  br label %dec_label_pc_e3d4

dec_label_pc_e670:                                ; preds = %dec_label_pc_e490
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v2_e680, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-48, align 4
  %v6_e698 = call i32 @function_133b4(i32 %v2_e510, i32 1, i32 4, i32* nonnull %stack_var_-44, i32 %v2_e684)
  %v3_e69c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e69c, i32* %r3.global-to-local, align 4
  %v2_e6a0 = icmp eq i32 %v3_e69c, 0
  br i1 %v2_e6a0, label %dec_label_pc_e6f0, label %dec_label_pc_e6a8

dec_label_pc_e6a8:                                ; preds = %dec_label_pc_e670
  %v2_e6a8 = load i32, i32* @global_var_1da40.96, align 4
  %v1_e6ac = call i32 @function_12c1c(i32 %v2_e6a8)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e6b4 = load i32, i32* @r4, align 4
  %v2_e6b4 = inttoptr i32 %v1_e6b4 to i32*
  store i32 -1, i32* %v2_e6b4, align 4
  %v0_e6b8 = call i32 @function_e82c()
  %v2_e6c0 = call i32 @function_129a4(i32 %v0_e6b8, i32 10)
  %v1_e6c4 = add i32 %v2_e6c0, 1
  %v1_e6c8 = call i32 @function_1401c(i32 %v1_e6c4)
  br label %dec_label_pc_e364.backedge

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e460
  %v2_e6d8 = load i32, i32* @global_var_1da40.96, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e6e8 = call i32 @function_13470(i32 %v2_e6d8, i32* nonnull %v4_e6e8, i32 2, i32 16384)
  br label %dec_label_pc_e480

dec_label_pc_e6f0:                                ; preds = %dec_label_pc_e670
  %v2_e6f8 = call i32 @function_12318(i8* %v1_e6f8)
  %sext = mul i32 %v2_e6f8, 16777216
  %v1_e6fc = sdiv i32 %sext, 16777216
  %v7_e6fc = inttoptr i32 %v1_e6fc to i8*
  store i8* %v7_e6fc, i8** %stack_var_-38, align 4
  %v0_e700 = call i32 @function_125d0()
  store i32 %v0_e700, i32* @global_var_1dc4c.49, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e714 = load i32, i32* @r5, align 4
  store i32 %v0_e714, i32* %r2.global-to-local, align 4
  %v2_e718 = load i32, i32* @global_var_1da40.96, align 4
  %v5_e71c = call i32 @function_13470(i32 %v2_e718, i32* nonnull @global_var_1549c.102, i32 %v0_e714, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_e728 = load i32, i32* @global_var_1da40.96, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e734 = call i32 @function_13470(i32 %v2_e728, i32* %v4_e6e8, i32 1, i32 16384)
  %v3_e738 = load i8*, i8** %stack_var_-38, align 4
  %v4_e738 = ptrtoint i8* %v3_e738 to i32
  store i32 %v4_e738, i32* %r2.global-to-local, align 4
  %v3_e73c = icmp eq i8* %v3_e738, null
  br i1 %v3_e73c, label %dec_label_pc_e364.backedge, label %dec_label_pc_e744

dec_label_pc_e744:                                ; preds = %dec_label_pc_e6f0
  %v2_e748 = load i32, i32* @global_var_1da40.96, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_e754 = call i32 @function_13470(i32 %v2_e748, i32* nonnull %stack_var_-124, i32 %v4_e738, i32 16384)
  br label %dec_label_pc_e364.backedge

dec_label_pc_e75c:                                ; preds = %dec_label_pc_e5b4, %dec_label_pc_e544
  %v0_e75c = load i32, i32* @r5, align 4
  %v1_e75c = inttoptr i32 %v0_e75c to i32*
  %v2_e75c = load i32, i32* %v1_e75c, align 4
  store i32 %v2_e75c, i32* %r3.global-to-local, align 4
  %v7_e760 = icmp eq i32 %v2_e75c, 4
  br i1 %v7_e760, label %dec_label_pc_e364.backedge, label %bb42

bb42:                                             ; preds = %dec_label_pc_e75c
  %v8_e764 = icmp eq i32 %v2_e75c, 11
  br i1 %v8_e764, label %dec_label_pc_e364.backedge, label %dec_label_pc_e5dc

dec_label_pc_e770:                                ; preds = %dec_label_pc_e584
  %v2_e774 = load i32, i32* @global_var_1da40.96, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e784 = call i32 @function_13410(i32 %v2_e774, i32* nonnull %v4_e6e8, i32 2, i32 16384)
  br label %dec_label_pc_e364.backedge

dec_label_pc_e78c:                                ; preds = %dec_label_pc_e594
  %v2_e78c = load i32, i32* @global_var_1da40.96, align 4
  %v1_e790 = call i32 @function_12c1c(i32 %v2_e78c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e798 = load i32, i32* @r8, align 4
  %v2_e798 = inttoptr i32 %v1_e798 to i32*
  store i32 -1, i32* %v2_e798, align 4
  br label %dec_label_pc_e364.backedge

dec_label_pc_e7a0:                                ; preds = %dec_label_pc_e5d4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e7b0 = load i32, i32* @global_var_1da40.96, align 4
  %v5_e7b4 = call i32 @function_13410(i32 %v2_e7b0, i32* nonnull %v4_e6e8, i32 2, i32 16384)
  %v3_e7b8 = load i8*, i8** %stack_var_-38, align 4
  %v4_e7b8 = ptrtoint i8* %v3_e7b8 to i32
  %v4_e7bc = urem i32 %v4_e5a0, 256
  %v4_e7c0 = mul i32 %v4_e7b8, 256
  %v5_e7c0 = or i32 %v4_e7c0, %v4_e7bc
  store i32 %v5_e7c0, i32* %r2.global-to-local, align 4
  %v3_e7c8 = sdiv i32 %v4_e7c0, 256
  store i32 %v3_e7c8, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e7d4 = load i32, i32* @global_var_1da40.96, align 4
  %v6_e7dc = inttoptr i32 %v5_e7c0 to i8*
  store i8* %v6_e7dc, i8** %stack_var_-38, align 4
  %v8_e7e0 = call i32 @function_13410(i32 %v2_e7d4, i32* nonnull %stack_var_-1532, i32 %v5_e7c0, i32 16384)
  %v3_e7e4 = load i8*, i8** %stack_var_-38, align 4
  %v4_e7e4 = ptrtoint i8* %v3_e7e4 to i32
  store i32 %v4_e7e4, i32* %r2.global-to-local, align 4
  %v4_e7e8 = urem i32 %v3_e7c8, 256
  store i32 %v4_e7e8, i32* %r3.global-to-local, align 4
  %v6_e7ec = mul nuw nsw i32 %v4_e7e8, 256
  %v7_e7ec = or i32 %v4_e7e4, %v6_e7ec
  %v9_e7ec = icmp eq i32 %v7_e7ec, 0
  br i1 %v9_e7ec, label %dec_label_pc_e364.backedge, label %dec_label_pc_e7f4

dec_label_pc_e7f4:                                ; preds = %dec_label_pc_e7a0
  %v7_e7f8 = call i32 @function_8320(i32* nonnull %stack_var_-1532, i32 %v7_e7ec, i32 %v4_e7e4, i32 %v4_e7e8)
  br label %dec_label_pc_e364.backedge

; uselistorder directives
  uselistorder i32 %v4_e7e8, { 2, 0, 1 }
  uselistorder i32 %v4_e7e4, { 1, 0, 2 }
  uselistorder i32 %v3_e7c8, { 1, 0 }
  uselistorder i32 %v5_e7c0, { 1, 0, 2 }
  uselistorder i32 %v4_e7c0, { 1, 0 }
  uselistorder i32 %v3_e60c, { 3, 2, 1, 0 }
  uselistorder i32 %v9_e5c8, { 1, 0 }
  uselistorder i32 %v4_e59c, { 2, 3, 0, 1 }
  uselistorder i32 %v5_e570, { 1, 0 }
  uselistorder i32 %v2_e510, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v5_e448, { 2, 3, 1, 0 }
  uselistorder i32 %v2_e394, { 2, 1, 0 }
  uselistorder i32 %v1_e388, { 1, 2, 0 }
  uselistorder i32 %v1_e370, { 1, 2, 0 }
  uselistorder i32* %v4_e6e8, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v2_e360, { 1, 0, 2 }
  uselistorder i32 %v2_e35c, { 1, 0, 2 }
  uselistorder i32 %v2_e1fc, { 0, 1, 7, 2, 3, 4, 5, 6, 8 }
  uselistorder i32 %v2_e1ec, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_e10c, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-124, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i8** %stack_var_-38, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 23, 31, 32, 34, 33, 0, 38, 39, 35, 43, 44, 36, 37, 40, 41, 42 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_1401c, { 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_1dbbc.98 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1dbbc.98, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1dbbc.98 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1da40.96, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 16, 15, 17, 18 }
  uselistorder i32 (i32)* @function_e014, { 1, 0 }
  uselistorder i32 (i32)* @function_d760, { 1, 0 }
  uselistorder i32 (i32)* @function_8650, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_12340, { 0, 1, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_e8e0, { 2, 1, 0 }
  uselistorder i32* @global_var_1da44.74, { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_dfc0.72 to i32), { 0, 2, 1 }
  uselistorder i8** @global_var_1dc58.78, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_13574, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e364.backedge, { 6, 12, 5, 4, 11, 13, 3, 10, 2, 1, 9, 8, 0, 7 }
  uselistorder label %dec_label_pc_e480, { 2, 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_e3d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3c4, { 1, 0 }
  uselistorder label %dec_label_pc_e384.dec_label_pc_e384_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e36c.dec_label_pc_e36c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e1b8, { 2, 0, 1 }
}

define i32 @function_e82c() local_unnamed_addr {
dec_label_pc_e82c:
  %v2_e838 = load i32, i32* @global_var_1dbc0.104, align 4
  %v2_e83c = load i32, i32* @global_var_1dbcc.106, align 4
  store i32 ptrtoint (i32* @global_var_1dbc4.108 to i32), i32* @lr, align 4
  %v4_e848 = mul i32 %v2_e838, 2048
  %v5_e848 = xor i32 %v4_e848, %v2_e838
  %v4_e84c = udiv i32 %v2_e83c, 524288
  %v5_e84c = xor i32 %v4_e84c, %v2_e83c
  %v2_e850 = load i32, i32* @global_var_1dbc4.108, align 4
  %v2_e854 = load i32, i32* @global_var_1dbc8.110, align 4
  %v2_e858 = xor i32 %v5_e84c, %v5_e848
  %v4_e85c = udiv i32 %v5_e848, 256
  %v5_e85c = xor i32 %v2_e858, %v4_e85c
  store i32 %v2_e850, i32* @global_var_1dbc0.104, align 4
  store i32 %v2_e854, i32* @global_var_1dbc4.108, align 4
  store i32 %v2_e83c, i32* @global_var_1dbc8.110, align 4
  store i32 %v5_e85c, i32* @global_var_1dbcc.106, align 4
  ret i32 %v5_e85c

; uselistorder directives
  uselistorder i32 %v2_e83c, { 2, 1, 0 }
  uselistorder i32 %v2_e838, { 1, 0 }
}

define i32 @function_e884(i32 %arg1) local_unnamed_addr {
dec_label_pc_e884:
  %stack_var_-12 = alloca i32, align 4
  %v3_e884 = load i32, i32* @r4, align 4
  store i32 %v3_e884, i32* %stack_var_-12, align 4
  %v2_e88c = call i32 @function_12eec(i32* null)
  store i32 %v2_e88c, i32* @global_var_1dbc0.104, align 4
  %v0_e898 = call i32 @function_12c74()
  store i32 %v0_e898, i32* @r4, align 4
  %v0_e8a0 = call i32 @function_12ca0()
  %v0_e8a8 = load i32, i32* @r4, align 4
  %v2_e8a8 = xor i32 %v0_e8a8, %v0_e8a0
  store i32 %v2_e8a8, i32* @r4, align 4
  store i32 %v2_e8a8, i32* @global_var_1dbc4.108, align 4
  %v1_e8b0 = call i32 @function_131fc(i32 %v0_e8a0)
  %v2_e8b4 = load i32, i32* @global_var_1dbc4.108, align 4
  %v2_e8c0 = xor i32 %v2_e8b4, %v1_e8b0
  store i32 %v2_e8c0, i32* @global_var_1dbcc.106, align 4
  store i32 %v1_e8b0, i32* @global_var_1dbc8.110, align 4
  %v2_e8cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e8cc, i32* @r4, align 4
  ret i32 %v1_e8b0

; uselistorder directives
  uselistorder i32 %v1_e8b0, { 1, 2, 0 }
  uselistorder i32 %v0_e8a0, { 1, 0 }
  uselistorder i32 ()* @function_12ca0, { 2, 0, 1 }
}

define i32 @function_e8e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8e0:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e8e0 = load i32, i32* @r4, align 4
  store i32 %v3_e8e0, i32* %stack_var_-36, align 4
  %v6_e8e0 = load i32, i32* @r5, align 4
  %v9_e8e0 = load i32, i32* @r6, align 4
  %v12_e8e0 = load i32, i32* @r7, align 4
  %v28_e8e0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_e8e8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e8f4 = call i32 @function_11d4c(i32 28)
  %v3_e900 = call i32 @function_11c68(i32 28, i32* null)
  %v2_e90c = inttoptr i32 %v3_e900 to i8*
  %v3_e90c = call i32 @function_132f0(i32 %v2_e8e8, i8* %v2_e90c)
  %v2_e910 = icmp eq i32 %arg2, 0
  br i1 %v2_e910, label %dec_label_pc_e98c, label %dec_label_pc_e918

dec_label_pc_e918:                                ; preds = %dec_label_pc_e8e0
  store i32 ptrtoint (i32* @global_var_1dbc0.104 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbc4.108 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbc8.110 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1dbcc.106 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_e960 = bitcast i32* %stack_var_-68 to i8*
  br label %dec_label_pc_e92c

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e92c.dec_label_pc_e92c_crit_edge, %dec_label_pc_e918
  %v1_e950 = phi i32 [ %v1_e950.pre, %dec_label_pc_e92c.dec_label_pc_e92c_crit_edge ], [ ptrtoint (i32* @global_var_1dbc0.104 to i32), %dec_label_pc_e918 ]
  %v2_e92c = load i32, i32* @global_var_1dbcc.106, align 4
  store i32 %v2_e92c, i32* %r2.global-to-local, align 4
  %v2_e930 = load i32, i32* @global_var_1dbc0.104, align 4
  %v4_e934 = udiv i32 %v2_e92c, 524288
  %v5_e934 = xor i32 %v4_e934, %v2_e92c
  %v4_e938 = mul i32 %v2_e930, 2048
  %v5_e938 = xor i32 %v4_e938, %v2_e930
  %v2_e93c = xor i32 %v5_e934, %v5_e938
  %v2_e940 = load i32, i32* @global_var_1dbc4.108, align 4
  %v2_e944 = load i32, i32* @global_var_1dbc8.110, align 4
  store i32 %v2_e944, i32* %ip.global-to-local, align 4
  %v4_e948 = udiv i32 %v5_e938, 256
  %v5_e948 = xor i32 %v2_e93c, %v4_e948
  store i32 %v5_e948, i32* @r4, align 4
  %v2_e950 = inttoptr i32 %v1_e950 to i32*
  store i32 %v2_e940, i32* %v2_e950, align 4
  %v0_e954 = load i32, i32* %ip.global-to-local, align 4
  %v1_e954 = load i32, i32* %r8.global-to-local, align 4
  %v2_e954 = inttoptr i32 %v1_e954 to i32*
  store i32 %v0_e954, i32* %v2_e954, align 4
  %v0_e958 = load i32, i32* %r2.global-to-local, align 4
  %v1_e958 = load i32, i32* @r7, align 4
  %v2_e958 = inttoptr i32 %v1_e958 to i32*
  store i32 %v0_e958, i32* %v2_e958, align 4
  %v0_e95c = load i32, i32* @r4, align 4
  %v1_e95c = load i32, i32* @r6, align 4
  %v2_e95c = inttoptr i32 %v1_e95c to i32*
  store i32 %v0_e95c, i32* %v2_e95c, align 4
  %v2_e960 = call i32 @function_12318(i8* %v1_e960)
  %v0_e968 = load i32, i32* @r4, align 4
  %v2_e96c = call i32 @function_129a4(i32 %v0_e968, i32 %v2_e960)
  %v2_e974 = add i32 %v2_e96c, %v28_e8e0
  %v1_e978 = add i32 %v2_e974, -32
  %v2_e978 = inttoptr i32 %v1_e978 to i8*
  %v3_e978 = load i8, i8* %v2_e978, align 1
  %v2_e97c = load i32, i32* @r5, align 4
  %v3_e97c = load i32, i32* %fp.global-to-local, align 4
  %v4_e97c = add i32 %v3_e97c, %v2_e97c
  %v5_e97c = inttoptr i32 %v4_e97c to i8*
  store i8 %v3_e978, i8* %v5_e97c, align 1
  %v0_e980 = load i32, i32* @r5, align 4
  %v1_e980 = add i32 %v0_e980, 1
  store i32 %v1_e980, i32* @r5, align 4
  %v1_e984 = load i32, i32* %sb.global-to-local, align 4
  %v9_e984 = icmp eq i32 %v1_e980, %v1_e984
  br i1 %v9_e984, label %dec_label_pc_e98c, label %dec_label_pc_e92c.dec_label_pc_e92c_crit_edge

dec_label_pc_e92c.dec_label_pc_e92c_crit_edge:    ; preds = %dec_label_pc_e92c
  %v1_e950.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e92c

dec_label_pc_e98c:                                ; preds = %dec_label_pc_e92c, %dec_label_pc_e8e0
  %v1_e990 = call i32 @function_11c94(i32 28)
  %v2_e998 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e998, i32* @r4, align 4
  store i32 %v6_e8e0, i32* @r5, align 4
  store i32 %v9_e8e0, i32* @r6, align 4
  store i32 %v12_e8e0, i32* @r7, align 4
  ret i32 %v1_e990

; uselistorder directives
  uselistorder i32 %v2_e930, { 1, 0 }
  uselistorder i32 %v2_e92c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
}

define i32 @function_e9ac(i8* %arg1) local_unnamed_addr {
dec_label_pc_e9ac:
  %fp.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_e9ac = load i32, i32* @r4, align 4
  store i32 %v3_e9ac, i32* %stack_var_-36, align 4
  %v9_e9ac = load i32, i32* @r6, align 4
  %v12_e9ac = load i32, i32* @r7, align 4
  %v15_e9ac = load i32, i32* @r8, align 4
  %v18_e9ac = load i32, i32* @sb, align 4
  %v21_e9ac = load i32, i32* @sl, align 4
  %v24_e9ac = load i32, i32* @fp, align 4
  %v0_e9b0 = load i32, i32* @r1, align 4
  store i32 %v0_e9b0, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_e9b0, 1
  br i1 %tmp20, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_e9ac
  store i32 %v3_e9ac, i32* @r4, align 4
  ret i32 %tmp

bb21:                                             ; preds = %dec_label_pc_e9ac
  store i32 ptrtoint (i32* @global_var_1dbcc.106 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbc8.110 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbc4.108 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbc0.104 to i32), i32* %r8.global-to-local, align 4
  %v2_e9cc = load i32, i32* @global_var_1dbcc.106, align 4
  store i32 %v2_e9cc, i32* @lr, align 4
  %v2_e9d0 = load i32, i32* @global_var_1dbc8.110, align 4
  store i32 %v2_e9d0, i32* %r7.global-to-local, align 4
  %v2_e9d4 = load i32, i32* @global_var_1dbc4.108, align 4
  store i32 %v2_e9d4, i32* %r6.global-to-local, align 4
  %v2_e9d8 = load i32, i32* @global_var_1dbc0.104, align 4
  br label %dec_label_pc_ea04

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_ea30
  %v3_ea38 = sdiv i32 %v5_ea1c, 256
  %v1_e9e0 = trunc i32 %v3_ea38 to i8
  %v3_e9e0 = add i32 %v9_ea24, 1
  %v4_e9e0 = inttoptr i32 %v3_e9e0 to i8*
  store i8 %v1_e9e0, i8* %v4_e9e0, align 1
  %v0_e9e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e9e4 = trunc i32 %v0_e9e4 to i8
  %v2_e9e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_e9e4 = inttoptr i32 %v2_e9e4 to i8*
  store i8 %v1_e9e4, i8* %v3_e9e4, align 1
  %v0_e9e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_e9e8 = add i32 %v0_e9e8, 2
  store i32 %v1_e9e8, i32* %r5.global-to-local, align 4
  %v0_e9ec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e9ec

dec_label_pc_e9ec:                                ; preds = %.thread, %dec_label_pc_e9e0
  %v0_e9ec = phi i32 [ %v9_ea28, %.thread ], [ %v0_e9ec.pre, %dec_label_pc_e9e0 ]
  %v2_e9e07 = phi i32 [ %v12_ea24, %.thread ], [ %v1_e9e8, %dec_label_pc_e9e0 ]
  %tmp22 = icmp slt i32 %v0_e9ec, 1
  br i1 %tmp22, label %dec_label_pc_ea6c, label %dec_label_pc_e9f8

dec_label_pc_e9f8:                                ; preds = %dec_label_pc_e9ec
  %v0_e9f0 = load i32, i32* %r6.global-to-local, align 4
  %v0_e9f8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_e9f8, i32* %r6.global-to-local, align 4
  %v0_e9fc = load i32, i32* @lr, align 4
  store i32 %v0_e9fc, i32* %r7.global-to-local, align 4
  %v0_ea00 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_ea00, i32* @lr, align 4
  br label %dec_label_pc_ea04

dec_label_pc_ea04:                                ; preds = %bb21, %dec_label_pc_e9f8
  %v0_ea54 = phi i32 [ %v2_e9d4, %bb21 ], [ %v0_e9f8, %dec_label_pc_e9f8 ]
  %v9_ea24 = phi i32 [ %tmp, %bb21 ], [ %v2_e9e07, %dec_label_pc_e9f8 ]
  %v0_ea3c = phi i32 [ %v0_e9b0, %bb21 ], [ %v0_e9ec, %dec_label_pc_e9f8 ]
  %v0_ea48 = phi i32 [ %v2_e9cc, %bb21 ], [ %v0_ea00, %dec_label_pc_e9f8 ]
  %v0_ea44 = phi i32 [ %v2_e9d8, %bb21 ], [ %v0_e9f0, %dec_label_pc_e9f8 ]
  %v4_ea04 = mul i32 %v0_ea44, 2048
  %v5_ea04 = xor i32 %v4_ea04, %v0_ea44
  %v4_ea08 = udiv i32 %v0_ea48, 524288
  %v5_ea08 = xor i32 %v4_ea08, %v0_ea48
  %v2_ea0c = xor i32 %v5_ea08, %v5_ea04
  %v4_ea1c = udiv i32 %v5_ea04, 256
  %v5_ea1c = xor i32 %v4_ea1c, %v2_ea0c
  store i32 %v5_ea1c, i32* %r3.global-to-local, align 4
  %v7_ea24 = icmp sgt i32 %v0_ea3c, 3
  br i1 %v7_ea24, label %.thread, label %dec_label_pc_ea30

.thread:                                          ; preds = %dec_label_pc_ea04
  %v10_ea24 = inttoptr i32 %v9_ea24 to i32*
  store i32 %v5_ea1c, i32* %v10_ea24, align 4
  %v11_ea24 = load i32, i32* %r5.global-to-local, align 4
  %v12_ea24 = add i32 %v11_ea24, 4
  store i32 %v12_ea24, i32* %r5.global-to-local, align 4
  %v8_ea28 = load i32, i32* %r4.global-to-local, align 4
  %v9_ea28 = add i32 %v8_ea28, -4
  store i32 %v9_ea28, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e9ec

dec_label_pc_ea30:                                ; preds = %dec_label_pc_ea04
  store i32 %v5_ea1c, i32* %r3.global-to-local, align 4
  %v7_ea34 = icmp eq i32 %v0_ea3c, 1
  %v1_ea3c = add i32 %v0_ea3c, -2
  store i32 %v1_ea3c, i32* %r4.global-to-local, align 4
  br i1 %v7_ea34, label %dec_label_pc_ea44, label %dec_label_pc_e9e0

dec_label_pc_ea44:                                ; preds = %dec_label_pc_ea30
  store i32 %v5_ea1c, i32* %r3.global-to-local, align 4
  %v1_ea54 = load i32, i32* %r8.global-to-local, align 4
  %v2_ea54 = inttoptr i32 %v1_ea54 to i32*
  store i32 %v0_ea54, i32* %v2_ea54, align 4
  %v0_ea58 = load i32, i32* %r7.global-to-local, align 4
  %v1_ea58 = load i32, i32* %sl.global-to-local, align 4
  %v2_ea58 = inttoptr i32 %v1_ea58 to i32*
  store i32 %v0_ea58, i32* %v2_ea58, align 4
  %v0_ea5c = load i32, i32* @lr, align 4
  %v1_ea5c = load i32, i32* %sb.global-to-local, align 4
  %v2_ea5c = inttoptr i32 %v1_ea5c to i32*
  store i32 %v0_ea5c, i32* %v2_ea5c, align 4
  %v0_ea60 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea60 = load i32, i32* %fp.global-to-local, align 4
  %v2_ea60 = inttoptr i32 %v1_ea60 to i32*
  store i32 %v0_ea60, i32* %v2_ea60, align 4
  %v0_ea64 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea64 = trunc i32 %v0_ea64 to i8
  %v2_ea64 = load i32, i32* %r5.global-to-local, align 4
  %v3_ea64 = inttoptr i32 %v2_ea64 to i8*
  store i8 %v1_ea64, i8* %v3_ea64, align 1
  %v2_ea68 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ea68, i32* @r4, align 4
  store i32 %v9_e9ac, i32* @r6, align 4
  store i32 %v12_e9ac, i32* @r7, align 4
  store i32 %v15_e9ac, i32* @r8, align 4
  store i32 %v18_e9ac, i32* @sb, align 4
  store i32 %v21_e9ac, i32* @sl, align 4
  store i32 %v24_e9ac, i32* @fp, align 4
  ret i32 %v5_ea04

dec_label_pc_ea6c:                                ; preds = %dec_label_pc_e9ec
  %v0_ea6c = load i32, i32* %r3.global-to-local, align 4
  %v1_ea6c = load i32, i32* %fp.global-to-local, align 4
  %v2_ea6c = inttoptr i32 %v1_ea6c to i32*
  store i32 %v0_ea6c, i32* %v2_ea6c, align 4
  %v0_ea70 = load i32, i32* @lr, align 4
  %v1_ea70 = load i32, i32* %sb.global-to-local, align 4
  %v2_ea70 = inttoptr i32 %v1_ea70 to i32*
  store i32 %v0_ea70, i32* %v2_ea70, align 4
  %v0_ea74 = load i32, i32* %r7.global-to-local, align 4
  %v1_ea74 = load i32, i32* %sl.global-to-local, align 4
  %v2_ea74 = inttoptr i32 %v1_ea74 to i32*
  store i32 %v0_ea74, i32* %v2_ea74, align 4
  %v0_ea78 = load i32, i32* %r6.global-to-local, align 4
  %v1_ea78 = load i32, i32* %r8.global-to-local, align 4
  %v2_ea78 = inttoptr i32 %v1_ea78 to i32*
  store i32 %v0_ea78, i32* %v2_ea78, align 4
  %v2_ea7c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ea7c, i32* @r4, align 4
  store i32 %v9_e9ac, i32* @r6, align 4
  store i32 %v12_e9ac, i32* @r7, align 4
  store i32 %v15_e9ac, i32* @r8, align 4
  store i32 %v18_e9ac, i32* @sb, align 4
  store i32 %v21_e9ac, i32* @sl, align 4
  store i32 %v24_e9ac, i32* @fp, align 4
  ret i32 %v5_ea04

; uselistorder directives
  uselistorder i32 %v9_ea28, { 1, 0 }
  uselistorder i32 %v12_ea24, { 1, 0 }
  uselistorder i32 %v5_ea1c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v5_ea04, { 1, 2, 0, 3 }
  uselistorder i32 %v0_ea44, { 1, 0 }
  uselistorder i32 %v0_ea48, { 1, 0 }
  uselistorder i32 %v0_e9ec, { 1, 0 }
  uselistorder i32 %v24_e9ac, { 1, 0 }
  uselistorder i32 %v21_e9ac, { 1, 0 }
  uselistorder i32 %v18_e9ac, { 1, 0 }
  uselistorder i32 %v15_e9ac, { 1, 0 }
  uselistorder i32 %v12_e9ac, { 1, 0 }
  uselistorder i32 %v9_e9ac, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 4, 7, 6, 3 }
  uselistorder i32* @global_var_1dbc0.104, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1dbc0.104 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_1dbc4.108, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32* @global_var_1dbc8.110, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_1dbcc.106, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @sl, { 79, 80, 81, 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* @sb, { 71, 72, 73, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder label %dec_label_pc_ea04, { 1, 0 }
}

define i32 @function_ea90() local_unnamed_addr {
dec_label_pc_ea90:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ea90 = load i32, i32* @r4, align 4
  store i32 %v3_ea90, i32* %stack_var_-16, align 4
  %v0_ea94 = load i32, i32* @r0, align 4
  store i32 %v0_ea94, i32* %r5.global-to-local, align 4
  %v1_ea98 = add i32 %v0_ea94, 4
  %v2_ea98 = inttoptr i32 %v1_ea98 to i32*
  %v3_ea98 = load i32, i32* %v2_ea98, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 60092, i32* @lr, align 4
  %v1_eab8 = icmp ne i32 %v3_ea98, -1
  call void @__pseudo_cond_branch(i1 %v1_eab8, i32 ptrtoint (i32* @global_var_12c1c.99 to i32))
  %v3_eac8 = call i32 @function_13500(i32 2, i32 1, i32 0)
  store i32 %v3_eac8, i32* %r3.global-to-local, align 4
  %v7_ead0 = icmp eq i32 %v3_eac8, -1
  store i32 256, i32* @r1, align 4
  %v0_ead8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ead8 = add i32 %v0_ead8, 28
  store i32 %v1_ead8, i32* @r0, align 4
  %v2_eadc = add i32 %v0_ead8, 4
  %v3_eadc = inttoptr i32 %v2_eadc to i32*
  store i32 %v3_eac8, i32* %v3_eadc, align 4
  br i1 %v7_ead0, label %dec_label_pc_ea90.dec_label_pc_eb58_crit_edge, label %dec_label_pc_eae4

dec_label_pc_ea90.dec_label_pc_eb58_crit_edge:    ; preds = %dec_label_pc_ea90
  %v14_eb5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_eb58

dec_label_pc_eae4:                                ; preds = %dec_label_pc_ea90
  %v0_eae4 = load i32, i32* %r6.global-to-local, align 4
  %v1_eae4 = load i32, i32* %r5.global-to-local, align 4
  %v2_eae4 = add i32 %v1_eae4, 24
  %v3_eae4 = inttoptr i32 %v2_eae4 to i32*
  store i32 %v0_eae4, i32* %v3_eae4, align 4
  %v0_eae8 = call i32 @function_123b8()
  %v0_eaec = load i32, i32* %r5.global-to-local, align 4
  %v1_eaec = add i32 %v0_eaec, 4
  %v2_eaec = inttoptr i32 %v1_eaec to i32*
  %v3_eaec = load i32, i32* %v2_eaec, align 4
  store i32 %v3_eaec, i32* @r4, align 4
  %v0_eaf4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_eaf4, i32* @r2, align 4
  %v2_eafc = call i32 @function_12b58(i32 %v3_eaec, i32 3)
  %v1_eb04 = or i32 %v2_eafc, 2048
  store i32 %v1_eb04, i32* @r2, align 4
  %v0_eb08 = load i32, i32* @r4, align 4
  %v2_eb0c = call i32 @function_12b58(i32 %v0_eb08, i32 4)
  store i32 ptrtoint (i32* @global_var_1dc04.124 to i32), i32* %r3.global-to-local, align 4
  %v0_eb14 = load i32, i32* %r5.global-to-local, align 4
  %v1_eb14 = add i32 %v0_eb14, 20
  %v2_eb14 = inttoptr i32 %v1_eb14 to i32*
  %v3_eb14 = load i32, i32* %v2_eb14, align 4
  store i32 %v3_eb14, i32* @r4, align 4
  %v2_eb18 = load i32, i32* @global_var_1dc04.124, align 4
  %v1_eb1c = add i32 %v0_eb14, 16
  %v2_eb1c = inttoptr i32 %v1_eb1c to i32*
  %v3_eb1c = load i32, i32* %v2_eb1c, align 4
  store i32 %v3_eb1c, i32* @lr, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_eb24 = add i32 %v0_eb14, 8
  %v3_eb24 = inttoptr i32 %v2_eb24 to i32*
  store i32 %v2_eb18, i32* %v3_eb24, align 4
  %v0_eb28 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb28 = load i32, i32* %r5.global-to-local, align 4
  %v2_eb28 = add i32 %v1_eb28, 12
  %v3_eb28 = inttoptr i32 %v2_eb28 to i32*
  store i32 %v0_eb28, i32* %v3_eb28, align 4
  %v0_eb30 = load i32, i32* %r5.global-to-local, align 4
  %v1_eb30 = add i32 %v0_eb30, 4
  %v2_eb30 = inttoptr i32 %v1_eb30 to i32*
  %v3_eb30 = load i32, i32* %v2_eb30, align 4
  %v0_eb34 = load i32, i32* %r3.global-to-local, align 4
  %v2_eb34 = mul i32 %v0_eb34, 2
  store i32 %v2_eb34, i32* %r3.global-to-local, align 4
  store i32 %v2_eb34, i32* %stack_var_-32, align 4
  %v3_eb54 = bitcast i32* %stack_var_-32 to %sockaddr*
  %v4_eb54 = call i32 @function_1335c(i32 %v3_eb30, %sockaddr* %v3_eb54, i32 16)
  br label %dec_label_pc_eb58

dec_label_pc_eb58:                                ; preds = %dec_label_pc_ea90.dec_label_pc_eb58_crit_edge, %dec_label_pc_eae4
  %v14_eb5c = phi i32 [ %v14_eb5c.pre, %dec_label_pc_ea90.dec_label_pc_eb58_crit_edge ], [ %v4_eb54, %dec_label_pc_eae4 ]
  %v2_eb5c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eb5c, i32* @r4, align 4
  ret i32 %v14_eb5c

; uselistorder directives
  uselistorder i32 %v2_eb34, { 1, 0 }
  uselistorder i32 %v3_eac8, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 ()* @function_123b8, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_eb58, { 1, 0 }
}

define i32 @function_eb64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eb64:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_eb64 = load i32, i32* @r4, align 4
  %v6_eb64 = load i32, i32* @r5, align 4
  %v9_eb64 = load i32, i32* @r6, align 4
  %v12_eb64 = load i32, i32* @r7, align 4
  %v15_eb64 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1dbd0.126 to i32), i32* @r8, align 4
  %v2_eb6c = load i32, i32* @global_var_1dbd0.126, align 4
  store i32 ptrtoint (i32* @global_var_1dbfc.128 to i32), i32* %sb.global-to-local, align 4
  %v3_eb78 = mul i32 %v2_eb6c, 16
  store i32 %v3_eb78, i32* %r3.global-to-local, align 4
  %v3_eb80 = urem i32 %arg3, 65536
  store i32 %v3_eb80, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_eb8c = load i32, i32* @global_var_1dbfc.128, align 4
  %v1_eb90 = add i32 %v3_eb78, 16
  store i32 %v1_eb90, i32* %r1.global-to-local, align 4
  store i32 %v3_eb80, i32* %stack_var_-44, align 4
  %v15_eb98 = call i32 @function_13934(i32 %v2_eb8c, i32 %v1_eb90, i32 %v3_eb80, i32 %v3_eb78)
  store i32 %v15_eb98, i32* %sl.global-to-local, align 4
  %v0_eba0 = load i32, i32* @r5, align 4
  %v1_eba4 = load i32, i32* %sb.global-to-local, align 4
  %v2_eba4 = inttoptr i32 %v1_eba4 to i32*
  store i32 %v15_eb98, i32* %v2_eba4, align 4
  %v2_eba8 = load i32, i32* @global_var_1dbd0.126, align 4
  store i32 %v2_eba8, i32* %fp.global-to-local, align 4
  %v1_ebac = inttoptr i32 %v0_eba0 to i8*
  %v2_ebac = call i32 @function_12318(i8* %v1_ebac)
  %sext = mul i32 %v2_ebac, 16777216
  %v1_ebb0 = sdiv i32 %sext, 16777216
  %v2_ebb0 = add nsw i32 %v1_ebb0, 1
  store i32 %v2_ebb0, i32* @r4, align 4
  store i32 %v1_ebb0, i32* @r7, align 4
  %v1_ebbc = call i32 @function_13698(i32 %v2_ebb0)
  %v0_ebc0 = load i32, i32* @r5, align 4
  store i32 %v0_ebc0, i32* %r1.global-to-local, align 4
  %v0_ebc4 = load i32, i32* @r4, align 4
  store i32 %v0_ebc4, i32* %r2.global-to-local, align 4
  store i32 %v1_ebbc, i32* @r6, align 4
  %v3_ebcc = call i32 @function_12394(i32 %v1_ebbc, i32 %v0_ebc0, i32 %v0_ebc4)
  %v0_ebd0 = load i32, i32* @r7, align 4
  %tmp21 = icmp slt i32 %v0_ebd0, 1
  %extract.t6 = trunc i32 %v0_ebd0 to i8
  br i1 %tmp21, label %dec_label_pc_ebf4, label %dec_label_pc_ebd8

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_eb64
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebdc

dec_label_pc_ebdc:                                ; preds = %dec_label_pc_ebdc, %dec_label_pc_ebd8
  %v2_ebe4 = phi i32 [ %v1_ebe8, %dec_label_pc_ebdc ], [ 0, %dec_label_pc_ebd8 ]
  %v1_ebdc = load i32, i32* @r6, align 4
  %v2_ebdc = add i32 %v1_ebdc, %v2_ebe4
  %v3_ebdc = inttoptr i32 %v2_ebdc to i8*
  %v4_ebdc = load i8, i8* %v3_ebdc, align 1
  %v6_ebdc = zext i8 %v4_ebdc to i32
  %v1_ebe0 = xor i32 %v6_ebdc, 84
  store i32 %v1_ebe0, i32* %r3.global-to-local, align 4
  %v1_ebe4 = trunc i32 %v1_ebe0 to i8
  store i8 %v1_ebe4, i8* %v3_ebdc, align 1
  %v0_ebe8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ebe8 = add i32 %v0_ebe8, 1
  store i32 %v1_ebe8, i32* %r2.global-to-local, align 4
  %v0_ebec = load i32, i32* @r7, align 4
  %v9_ebec = icmp eq i32 %v0_ebec, %v1_ebe8
  br i1 %v9_ebec, label %dec_label_pc_ebf4.loopexit, label %dec_label_pc_ebdc

dec_label_pc_ebf4.loopexit:                       ; preds = %dec_label_pc_ebdc
  %extract.t = trunc i32 %v1_ebe8 to i8
  br label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebf4.loopexit, %dec_label_pc_eb64
  %v0_ec04.off0 = phi i8 [ %extract.t, %dec_label_pc_ebf4.loopexit ], [ %extract.t6, %dec_label_pc_eb64 ]
  %v2_ebf4 = load i32, i32* @global_var_1dbd0.126, align 4
  %v2_ebf8 = load i32, i32* @global_var_1dbfc.128, align 4
  store i32 %v2_ebf8, i32* %r2.global-to-local, align 4
  %v3_ebfc = mul i32 %v2_ebf4, 16
  %v2_ec00 = add i32 %v2_ebf8, %v3_ebfc
  store i32 %v2_ec00, i32* %r3.global-to-local, align 4
  %v3_ec04 = add i32 %v2_ec00, 12
  %v4_ec04 = inttoptr i32 %v3_ec04 to i8*
  store i8 %v0_ec04.off0, i8* %v4_ec04, align 1
  %v0_ec08 = load i32, i32* @r6, align 4
  %v1_ec08 = load i32, i32* %sl.global-to-local, align 4
  %v2_ec08 = load i32, i32* %fp.global-to-local, align 4
  %v5_ec08 = mul i32 %v2_ec08, 16
  %v6_ec08 = add i32 %v5_ec08, %v1_ec08
  %v7_ec08 = inttoptr i32 %v6_ec08 to i32*
  store i32 %v0_ec08, i32* %v7_ec08, align 4
  %v2_ec10 = load i32, i32* @global_var_1dbd0.126, align 4
  store i32 %v2_ec10, i32* @r7, align 4
  %v2_ec14 = load i32, i32* @global_var_1dbfc.128, align 4
  store i32 %v2_ec14, i32* %sl.global-to-local, align 4
  %v1_ec18 = inttoptr i32 %arg2 to i8*
  %v2_ec18 = call i32 @function_12318(i8* %v1_ec18)
  %sext1 = mul i32 %v2_ec18, 16777216
  %v1_ec1c = sdiv i32 %sext1, 16777216
  %v2_ec1c = add nsw i32 %v1_ec1c, 1
  store i32 %v2_ec1c, i32* @r4, align 4
  store i32 %v1_ec1c, i32* @r5, align 4
  %v1_ec28 = call i32 @function_13698(i32 %v2_ec1c)
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ec30 = load i32, i32* @r4, align 4
  store i32 %v0_ec30, i32* %r2.global-to-local, align 4
  store i32 %v1_ec28, i32* %r6.global-to-local, align 4
  %v3_ec38 = call i32 @function_12394(i32 %v1_ec28, i32 %arg2, i32 %v0_ec30)
  %v0_ec3c = load i32, i32* @r5, align 4
  %tmp22 = icmp slt i32 %v0_ec3c, 1
  %extract.t8 = trunc i32 %v0_ec3c to i8
  br i1 %tmp22, label %dec_label_pc_ec60, label %dec_label_pc_ec44

dec_label_pc_ec44:                                ; preds = %dec_label_pc_ebf4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ec48

dec_label_pc_ec48:                                ; preds = %dec_label_pc_ec48, %dec_label_pc_ec44
  %v2_ec50 = phi i32 [ %v1_ec54, %dec_label_pc_ec48 ], [ 0, %dec_label_pc_ec44 ]
  %v1_ec48 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec48 = add i32 %v1_ec48, %v2_ec50
  %v3_ec48 = inttoptr i32 %v2_ec48 to i8*
  %v4_ec48 = load i8, i8* %v3_ec48, align 1
  %v6_ec48 = zext i8 %v4_ec48 to i32
  %v1_ec4c = xor i32 %v6_ec48, 84
  store i32 %v1_ec4c, i32* %r3.global-to-local, align 4
  %v1_ec50 = trunc i32 %v1_ec4c to i8
  store i8 %v1_ec50, i8* %v3_ec48, align 1
  %v0_ec54 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec54 = add i32 %v0_ec54, 1
  store i32 %v1_ec54, i32* %r2.global-to-local, align 4
  %v0_ec58 = load i32, i32* @r5, align 4
  %v9_ec58 = icmp eq i32 %v0_ec58, %v1_ec54
  br i1 %v9_ec58, label %dec_label_pc_ec60.loopexit, label %dec_label_pc_ec48

dec_label_pc_ec60.loopexit:                       ; preds = %dec_label_pc_ec48
  %extract.t7 = trunc i32 %v1_ec54 to i8
  br label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec60.loopexit, %dec_label_pc_ebf4
  %v0_ec70.off0 = phi i8 [ %extract.t7, %dec_label_pc_ec60.loopexit ], [ %extract.t8, %dec_label_pc_ebf4 ]
  %v2_ec60 = load i32, i32* @global_var_1dbd0.126, align 4
  %v2_ec64 = load i32, i32* @global_var_1dbfc.128, align 4
  %v3_ec68 = mul i32 %v2_ec60, 16
  %v2_ec6c = or i32 %v3_ec68, 13
  %v3_ec70 = add i32 %v2_ec6c, %v2_ec64
  %v4_ec70 = inttoptr i32 %v3_ec70 to i8*
  store i8 %v0_ec70.off0, i8* %v4_ec70, align 1
  %v2_ec78 = load i32, i32* @global_var_1dbd0.126, align 4
  store i32 %v2_ec78, i32* %lr.global-to-local, align 4
  %v4_ec7c = load i8, i8* @global_var_1dc01.131, align 1
  %v5_ec7c = zext i8 %v4_ec7c to i32
  %v3_ec80 = load i8, i8* bitcast (i8** @global_var_1dc00.130 to i8*), align 4
  %v4_ec80 = zext i8 %v3_ec80 to i32
  %v2_ec84 = load i32, i32* @global_var_1dbfc.128, align 4
  %v4_ec88 = mul nuw nsw i32 %v5_ec7c, 256
  %v5_ec88 = or i32 %v4_ec80, %v4_ec88
  store i32 %v5_ec88, i32* %r2.global-to-local, align 4
  %v3_ec8c = mul i32 %v2_ec78, 16
  %v2_ec90 = add i32 %v2_ec84, %v3_ec8c
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  %v3_ec98 = add i32 %v2_ec90, 9
  %v4_ec98 = inttoptr i32 %v3_ec98 to i8*
  store i8 %v4_ec7c, i8* %v4_ec98, align 1
  %v0_ec9c = load i32, i32* %r2.global-to-local, align 4
  %v1_ec9c = trunc i32 %v0_ec9c to i8
  %v2_ec9c = load i32, i32* %r1.global-to-local, align 4
  %v3_ec9c = add i32 %v2_ec9c, 8
  %v4_ec9c = inttoptr i32 %v3_ec9c to i8*
  store i8 %v1_ec9c, i8* %v4_ec9c, align 1
  %v4_eca0 = load i8, i8* @global_var_1dc01.131, align 1
  %v5_eca0 = zext i8 %v4_eca0 to i32
  %v3_eca4 = load i8, i8* bitcast (i8** @global_var_1dc00.130 to i8*), align 4
  %v4_eca4 = zext i8 %v3_eca4 to i32
  %v4_eca8 = mul nuw nsw i32 %v5_eca0, 256
  %v5_eca8 = or i32 %v4_eca4, %v4_eca8
  %v2_ecac = load i32, i32* %stack_var_-44, align 4
  %v2_ecb0 = add i32 %v5_eca8, %v2_ecac
  store i32 %v2_ecb0, i32* %r3.global-to-local, align 4
  %v3_ecb49 = udiv i32 %v2_ecb0, 256
  %v1_ecb8 = trunc i32 %v3_ecb49 to i8
  %v2_ecb8 = load i32, i32* %r1.global-to-local, align 4
  %v3_ecb8 = add i32 %v2_ecb8, 11
  %v4_ecb8 = inttoptr i32 %v3_ecb8 to i8*
  store i8 %v1_ecb8, i8* %v4_ecb8, align 1
  %v0_ecbc = load i32, i32* %r3.global-to-local, align 4
  %v1_ecbc = trunc i32 %v0_ecbc to i8
  %v2_ecbc = load i32, i32* %r1.global-to-local, align 4
  %v3_ecbc = add i32 %v2_ecbc, 10
  %v4_ecbc = inttoptr i32 %v3_ecbc to i8*
  store i8 %v1_ecbc, i8* %v4_ecbc, align 1
  %v4_ecc0 = load i8, i8* @global_var_1dc01.131, align 1
  %v5_ecc0 = zext i8 %v4_ecc0 to i32
  %v3_ecc4 = load i8, i8* bitcast (i8** @global_var_1dc00.130 to i8*), align 4
  %v4_ecc4 = zext i8 %v3_ecc4 to i32
  %v4_ecc8 = mul nuw nsw i32 %v5_ecc0, 256
  %v5_ecc8 = or i32 %v4_ecc4, %v4_ecc8
  %v2_eccc = load i32, i32* %stack_var_-44, align 4
  %v2_ecd0 = add i32 %v5_ecc8, %v2_eccc
  store i32 %v2_ecd0, i32* %r2.global-to-local, align 4
  %v0_ecd4 = load i32, i32* @r7, align 4
  %v3_ecd4 = mul i32 %v0_ecd4, 16
  %v1_ecd8 = load i32, i32* %sl.global-to-local, align 4
  %v2_ecd8 = add i32 %v1_ecd8, %v3_ecd4
  store i32 %v2_ecd8, i32* %r3.global-to-local, align 4
  %v0_ecdc = load i32, i32* %lr.global-to-local, align 4
  %v1_ecdc = add i32 %v0_ecdc, 1
  store i32 %v1_ecdc, i32* @lr, align 4
  %v3_ece0 = sdiv i32 %v2_ecd0, 256
  store i32 %v3_ece0, i32* %r1.global-to-local, align 4
  %v0_ece4 = load i32, i32* %r6.global-to-local, align 4
  %v2_ece4 = add i32 %v2_ecd8, 4
  %v3_ece4 = inttoptr i32 %v2_ece4 to i32*
  store i32 %v0_ece4, i32* %v3_ece4, align 4
  %v0_ece8 = load i32, i32* @lr, align 4
  %v1_ece8 = load i32, i32* @r8, align 4
  %v2_ece8 = inttoptr i32 %v1_ece8 to i32*
  store i32 %v0_ece8, i32* %v2_ece8, align 4
  %v0_ecec = load i32, i32* %r1.global-to-local, align 4
  %v1_ecec = trunc i32 %v0_ecec to i8
  store i8 %v1_ecec, i8* @global_var_1dc01.131, align 1
  %v0_ecf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_ecf0 = trunc i32 %v0_ecf0 to i8
  store i8 %v1_ecf0, i8* bitcast (i8** @global_var_1dc00.130 to i8*), align 4
  store i32 %v3_eb64, i32* @r4, align 4
  store i32 %v6_eb64, i32* @r5, align 4
  store i32 %v9_eb64, i32* @r6, align 4
  store i32 %v12_eb64, i32* @r7, align 4
  store i32 %v15_eb64, i32* @r8, align 4
  ret i32 ptrtoint (i8** @global_var_1dc00.130 to i32)

; uselistorder directives
  uselistorder i32 %v1_ec54, { 0, 2, 3, 1 }
  uselistorder i32 %v1_ec28, { 1, 0 }
  uselistorder i32 %v1_ebe8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_ebbc, { 1, 0 }
  uselistorder i32 %v3_eb80, { 1, 2, 0 }
  uselistorder i32 %v3_eb78, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i8*)* @function_12318, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13934, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_ed08(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed08:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp1302 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_ed08 = load i32, i32* @r4, align 4
  store i32 %v3_ed08, i32* %stack_var_-36, align 4
  %v6_ed08 = load i32, i32* @r5, align 4
  %v24_ed08 = load i32, i32* @fp, align 4
  %v0_ed14 = call i32 @function_12c48()
  store i32 %v0_ed14, i32* %r0.global-to-local, align 4
  %v7_ed18 = icmp eq i32 %v0_ed14, -1
  %. = zext i1 %v7_ed18 to i32
  %tmp1334 = icmp slt i32 %v0_ed14, 1
  %storemerge1250 = select i1 %tmp1334, i32 %., i32 1
  store i32 %storemerge1250, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dc70.133 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed34 = icmp eq i32 %storemerge1250, 0
  store i1 %v2_ed34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_ed14, i32* @global_var_1dc70.133, align 4
  br i1 %v2_ed34, label %dec_label_pc_edc8, label %dec_label_pc_ed40

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ed08
  store i32 %v3_ed08, i32* %r4.global-to-local, align 4
  store i32 %v6_ed08, i32* @r5, align 4
  store i32 %v24_ed08, i32* %fp.global-to-local, align 4
  ret i32 %v0_ed14

dec_label_pc_edc8:                                ; preds = %dec_label_pc_ed08
  %v0_edc8 = call i32 @function_125d0()
  store i32 %v0_edc8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc4c.49 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_edc8, i32* @global_var_1dc4c.49, align 4
  %v1_edd4 = call i32 @function_e884(i32 %v0_edc8)
  %v0_edd8 = load i32, i32* @r4, align 4
  store i32 %v0_edd8, i32* %r0.global-to-local, align 4
  %v1_eddc = inttoptr i32 %v0_edd8 to i32*
  %v2_eddc = call i32 @function_12eec(i32* %v1_eddc)
  store i32 ptrtoint (i32* @global_var_1dc04.124 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_eddc, i32* @global_var_1dc04.124, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_edf0 = call i32 @function_137ec(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_1dc68.137 to i32), i32* %fp.global-to-local, align 4
  store i32 %v2_edf0, i32* @lr, align 4
  %v0_edfc = load i32, i32* @r4, align 4
  store i32 %v0_edfc, i32* %stack_var_-52, align 4
  store i32 %v2_edf0, i32* @global_var_1dc68.137, align 4
  store i32 %v0_edfc, i32* %r3.global-to-local, align 4
  store i32 %v0_edfc, i32* @r5, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_edfc, i32* %ip.global-to-local, align 4
  %v1_ee14 = add i32 %v2_edf0, 4
  store i32 %v1_ee14, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ee18

dec_label_pc_ee18:                                ; preds = %dec_label_pc_ee18.dec_label_pc_ee18_crit_edge, %dec_label_pc_edc8
  %v0_ee30 = phi i32 [ %v0_ee30.pre, %dec_label_pc_ee18.dec_label_pc_ee18_crit_edge ], [ %v0_edfc, %dec_label_pc_edc8 ]
  %v0_ee20 = phi i32 [ %v0_ee38, %dec_label_pc_ee18.dec_label_pc_ee18_crit_edge ], [ %v0_edfc, %dec_label_pc_edc8 ]
  %v1_ee28 = phi i32 [ %v1_ee28.pre, %dec_label_pc_ee18.dec_label_pc_ee18_crit_edge ], [ %v2_edf0, %dec_label_pc_edc8 ]
  %v3_ee18 = mul i32 %v0_ee20, 256
  store i32 %v3_ee18, i32* %r2.global-to-local, align 4
  %v1_ee20 = add i32 %v0_ee20, 1
  store i32 %v1_ee20, i32* %ip.global-to-local, align 4
  %v2_ee24 = mul i32 %v0_ee20, 288
  %v2_ee28 = add i32 %v1_ee28, 12
  %v2_ee30 = add i32 %v2_ee28, %v2_ee24
  %v3_ee30 = inttoptr i32 %v2_ee30 to i32*
  store i32 %v0_ee30, i32* %v3_ee30, align 4
  %v0_ee34 = load i32, i32* %r0.global-to-local, align 4
  %v1_ee34 = load i32, i32* %r1.global-to-local, align 4
  %v2_ee34 = inttoptr i32 %v1_ee34 to i32*
  store i32 %v0_ee34, i32* %v2_ee34, align 4
  %v3_ee34 = load i32, i32* %r1.global-to-local, align 4
  %v4_ee34 = add i32 %v3_ee34, 288
  store i32 %v4_ee34, i32* %r1.global-to-local, align 4
  %v0_ee38 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_ee38, i32* %r3.global-to-local, align 4
  %v7_ee3c = icmp sgt i32 %v1_ee20, 255
  br i1 %v7_ee3c, label %dec_label_pc_ee40, label %dec_label_pc_ee18.dec_label_pc_ee18_crit_edge

dec_label_pc_ee18.dec_label_pc_ee18_crit_edge:    ; preds = %dec_label_pc_ee18
  %v1_ee28.pre = load i32, i32* @lr, align 4
  %v0_ee30.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ee18

dec_label_pc_ee40:                                ; preds = %dec_label_pc_ee18
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v0_ee38, i32* %stack_var_-52, align 4
  %v3_ee50 = call i32 @function_13500(i32 2, i32 3, i32 6)
  store i32 %v3_ee50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc6c.139 to i32), i32* %ip.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v3_ee50, i32* @global_var_1dc6c.139, align 4
  %v0_ee60 = load i32, i32* @r5, align 4
  store i32 %v0_ee60, i32* @r2, align 4
  store i32 %v3_ee50, i32* @r4, align 4
  %v2_ee68 = call i32 @function_12b58(i32 %v3_ee50, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ee70 = or i32 %v2_ee68, 2048
  store i32 %v1_ee70, i32* @r2, align 4
  %v0_ee74 = load i32, i32* @r4, align 4
  store i32 %v0_ee74, i32* %r0.global-to-local, align 4
  %v2_ee78 = call i32 @function_12b58(i32 %v0_ee74, i32 4)
  %v2_ee84 = load i32, i32* @global_var_1dc6c.139, align 4
  store i32 %v2_ee84, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_ee8c = load i32, i32* @r5, align 4
  store i32 %v0_ee8c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_ee94 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ee94, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v6_eea4 = call i32 @function_134d0(i32 %v2_ee84, i32 %v0_ee8c, i32 3, i32* nonnull %stack_var_-52, i32 4)
  store i32 %v6_eea4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eea8 = icmp eq i32 %v6_eea4, 0
  store i1 %v2_eea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eea8, label %dec_label_pc_eeb0, label %dec_label_pc_10d08

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_ee40, %dec_label_pc_10d08, %dec_label_pc_eeb0
  %v0_eeb0 = call i32 @function_e82c()
  %v3_eeb4 = mul i32 %v0_eeb0, 65536
  store i32 %v3_eeb4, i32* %r0.global-to-local, align 4
  %v3_eeb8 = urem i32 %v0_eeb0, 65536
  store i32 %v3_eeb8, i32* %r2.global-to-local, align 4
  %v1_eebc = mul i32 %v0_eeb0, 256
  %v3_eec0 = and i32 %v1_eebc, 65280
  %tmp1337 = udiv i32 %v0_eeb0, 256
  %v4_eec4 = urem i32 %tmp1337, 256
  %v5_eec4 = or i32 %v4_eec4, %v3_eec0
  store i32 %v5_eec4, i32* %r3.global-to-local, align 4
  %v2_eec8 = icmp ugt i32 %v5_eec4, 1023
  store i1 %v2_eec8, i1* %cpsr_c.global-to-local, align 1
  %v7_eec8 = icmp eq i32 %v5_eec4, 1024
  store i1 %v7_eec8, i1* %cpsr_z.global-to-local, align 1
  %v3_eed0 = icmp ult i32 %v5_eec4, 1022
  br i1 %v3_eed0, label %dec_label_pc_eeb0, label %dec_label_pc_eed4

dec_label_pc_eed4:                                ; preds = %dec_label_pc_eeb0
  store i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32* %fp.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_1dbd4.141 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1dbd7.142 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1dbd6.143 to i8*), align 4
  %v0_ef0c = call i32 @function_e82c()
  %v1_ef0c = trunc i32 %v0_ef0c to i8
  store i32 %v0_ef0c, i32* %r0.global-to-local, align 4
  %v4_ef141171 = udiv i32 %v0_ef0c, 256
  %v3_ef18 = load i8, i8* @global_var_1dbf4.146, align 1
  %sext694 = mul i32 %v0_eeb0, 16777216
  %v4_ef1c = sdiv i32 %sext694, 16777216
  %v1_ef20 = trunc i32 %v4_ef141171 to i8
  store i8 %v1_ef20, i8* bitcast (i32* @global_var_1dbd9.147 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1dbdd.148 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1dbe8.145 to i32), i32* %r2.global-to-local, align 4
  %tmp = urem i8 %v3_ef18, 16
  %v1_ef34 = zext i8 %tmp to i32
  %v1_ef38 = and i32 %v4_ef1c, 128
  %v2_ef38 = icmp ne i32 %v1_ef38, 0
  store i1 %v2_ef38, i1* %cpsr_c.global-to-local, align 1
  %v3_ef38 = ashr i32 %sext694, 31
  store i32 %v3_ef38, i32* %ip.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1dbdc.149 to i8*), align 4
  %v1_ef40 = or i32 %v1_ef34, 80
  store i32 %v1_ef40, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  %v1_ef48 = trunc i32 %v3_ef38 to i8
  store i8 %v1_ef48, i8* bitcast (i32* @global_var_1dbe9.150 to i8*), align 4
  %v1_ef4c = trunc i32 %v1_ef40 to i8
  store i8 %v1_ef4c, i8* @global_var_1dbf4.146, align 1
  %v0_ef50 = load i32, i32* %r4.global-to-local, align 4
  %v1_ef50 = trunc i32 %v0_ef50 to i8
  store i8 %v1_ef50, i8* bitcast (i32* @global_var_1dbea.151 to i8*), align 4
  %v1_ef54 = trunc i32 %v4_ef1c to i8
  store i8 %v1_ef54, i8* bitcast (i32* @global_var_1dbe8.145 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1dbeb.152 to i8*), align 4
  store i8 %v1_ef0c, i8* bitcast (i32* @global_var_1dbd8.153 to i8*), align 4
  %v0_ef60 = call i32 @function_e82c()
  %v3_ef68 = load i8, i8* @global_var_1dbf5.154, align 1
  %v4_ef68 = zext i8 %v3_ef68 to i32
  %sext695 = mul i32 %v0_ef60, 16777216
  %v1_ef6c = sdiv i32 %sext695, 16777216
  %v2_ef6c = and i32 %v1_ef6c, 128
  %v3_ef6c = icmp ne i32 %v2_ef6c, 0
  store i1 %v3_ef6c, i1* %cpsr_c.global-to-local, align 1
  %v4_ef6c = ashr i32 %sext695, 31
  store i32 %v4_ef6c, i32* %ip.global-to-local, align 4
  %v1_ef70 = or i32 %v4_ef68, 2
  store i32 %v1_ef70, i32* %r3.global-to-local, align 4
  store i32 %v1_ef6c, i32* @r4, align 4
  %v1_ef78 = trunc i32 %v4_ef6c to i8
  store i8 %v1_ef78, i8* bitcast (i32* @global_var_1dbf7.155 to i8*), align 4
  %v1_ef7c = trunc i32 %v1_ef70 to i8
  store i8 %v1_ef7c, i8* @global_var_1dbf5.154, align 1
  store i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1554c.159 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_ef8c = trunc i32 %v1_ef6c to i8
  store i8 %v1_ef8c, i8* bitcast (i32* @global_var_1dbf6.160 to i8*), align 4
  %v5_ef90 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32 ptrtoint ([5 x i8]* @global_var_1554c.159 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15554.162 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_efa0 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32 ptrtoint ([6 x i8]* @global_var_15554.162 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1555c.164 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_efb0 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32 ptrtoint ([7 x i8]* @global_var_1555c.164 to i32), i32 11)
  store i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32* %r1.global-to-local, align 4
  %v5_efc0 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_efd0 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), i32* %r1.global-to-local, align 4
  %v5_efe0 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1555c.164 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_eff0 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), i32 ptrtoint ([7 x i8]* @global_var_1555c.164 to i32), i32 10)
  store i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32* %r1.global-to-local, align 4
  %v5_f000 = call i32 @function_eb64(i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154b4.172 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_f010 = call i32 @function_eb64(i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32 ptrtoint (i32* @global_var_154b4.172 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154c0.174 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_f020 = call i32 @function_eb64(i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32 ptrtoint (i32* @global_var_154c0.174 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_154cc.176 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_f030 = call i32 @function_eb64(i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32 ptrtoint ([7 x i8]* @global_var_154cc.176 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f040 = call i32 @function_eb64(i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_154dc.180 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f050 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([6 x i8]* @global_var_154dc.180 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_154e4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f060 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([6 x i8]* @global_var_154e4.182 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_154ec.184 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f070 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([9 x i8]* @global_var_154ec.184 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_154f8.186 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_f080 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([5 x i8]* @global_var_154f8.186 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_15500.188 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f090 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([4 x i8]* @global_var_15500.188 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r1.global-to-local, align 4
  %v5_f0a0 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_15504.190 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f0b0 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint ([7 x i8]* @global_var_15504.190 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_f0c0 = call i32 @function_eb64(i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_1550c.192 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1550c.192 to i32), i32* %r1.global-to-local, align 4
  %v5_f0d0 = call i32 @function_eb64(i32 ptrtoint ([8 x i8]* @global_var_1550c.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1550c.192 to i32), i32 14)
  store i32 ptrtoint ([7 x i8]* @global_var_15514.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1551c.196 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f0e0 = call i32 @function_eb64(i32 ptrtoint ([7 x i8]* @global_var_15514.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1551c.196 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32* %r1.global-to-local, align 4
  %v5_f0f0 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1552c.200 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f100 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32 ptrtoint ([7 x i8]* @global_var_1552c.200 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15534.202 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f110 = call i32 @function_eb64(i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), i32 ptrtoint ([8 x i8]* @global_var_15534.202 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_1553c.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_f120 = call i32 @function_eb64(i32 ptrtoint ([4 x i8]* @global_var_1553c.204 to i32), i32 ptrtoint (i32* @global_var_154d8.166 to i32), i32 3)
  store i32 %v4_f120, i32* %r0.global-to-local, align 4
  %v2_f128 = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_f128, i32* %ip.global-to-local, align 4
  %v1_10b88 = add i32 %v2_f128, 20
  %v1_10be0 = add i32 %v2_f128, 16
  %v2_10be0 = inttoptr i32 %v1_10be0 to i32*
  %v2_10e2c = ptrtoint i32* %stack_var_-36 to i32
  %v2_10eb0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_10eb4 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10eb8 = ptrtoint i32* %stack_var_-348 to i32
  %v2_1186c = ptrtoint i32* %stack_var_-41 to i32
  %v2_11874 = ptrtoint i32* %stack_var_-76 to i32
  %v2_1187c = ptrtoint i32* %stack_var_-73 to i32
  %v2_1104c = ptrtoint i8* %stack_var_-56 to i32
  %v2_11054 = bitcast i8* %stack_var_-56 to i32*
  %v2_1151c = ptrtoint i32* %stack_var_-48 to i32
  %v2_11b2c = ptrtoint i32* %stack_var_-92 to i32
  %v3_11b34 = bitcast i32* %stack_var_-92 to %sockaddr*
  %v2_11b80 = ptrtoint i32* %stack_var_-38 to i32
  %v1_10bf0 = add i32 %v2_f128, 9
  %v2_10bf0 = inttoptr i32 %v1_10bf0 to i8*
  %v1_10c8c = add i32 %v2_f128, 12
  %v2_10c8c = inttoptr i32 %v1_10c8c to i32*
  br label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_10f10, %dec_label_pc_eed4
  %stack_var_-2036.0 = phi i32 [ %tmp1302, %dec_label_pc_eed4 ], [ %stack_var_-2036.1, %dec_label_pc_10f10 ]
  store i32 %stack_var_-2036.0, i32* %r0.global-to-local, align 4
  %v2_f138 = load i32, i32* @global_var_1dc04.124, align 4
  %v3_f13c = icmp uge i32 %stack_var_-2036.0, %v2_f138
  store i1 %v3_f13c, i1* %cpsr_c.global-to-local, align 1
  %v9_f13c = icmp eq i32 %stack_var_-2036.0, %v2_f138
  store i1 %v9_f13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f13c, label %dec_label_pc_10b7c, label %dec_label_pc_f148

dec_label_pc_f148:                                ; preds = %dec_label_pc_f130
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_f150

dec_label_pc_f150:                                ; preds = %dec_label_pc_10a78, %dec_label_pc_f148
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v0_f164 = call i32 @function_e82c()
  %v1_f164 = trunc i32 %v0_f164 to i8
  store i32 %v0_f164, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc4c.49 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32* %r4.global-to-local, align 4
  %v2_f170 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_f170, i32* %r2.global-to-local, align 4
  %v2_f174 = and i32 %v0_f164, 128
  %v3_f174 = icmp ne i32 %v2_f174, 0
  store i1 %v3_f174, i1* %cpsr_c.global-to-local, align 1
  %v4_f174 = sdiv i32 %v0_f164, 256
  store i32 %v4_f174, i32* %r3.global-to-local, align 4
  %v1_f178 = trunc i32 %v4_f174 to i8
  store i8 %v1_f178, i8* bitcast (i32* @global_var_1dbd9.147 to i8*), align 4
  store i32 %v2_f170, i32* @global_var_1dbe0.205, align 4
  store i8 %v1_f164, i8* bitcast (i32* @global_var_1dbd8.153 to i8*), align 4
  br label %dec_label_pc_f184

dec_label_pc_f184:                                ; preds = %.thread649.thread, %dec_label_pc_f218, %dec_label_pc_f20c, %dec_label_pc_f200, %dec_label_pc_f1f4, %dec_label_pc_f1e8, %dec_label_pc_f1dc, %dec_label_pc_f1d0, %dec_label_pc_f1c4, %dec_label_pc_f1b8, %dec_label_pc_f1ac, %bb1889, %dec_label_pc_10a4c, %dec_label_pc_10a18, %dec_label_pc_109d4, %bb1861, %dec_label_pc_108d0, %.thread597, %dec_label_pc_1085c, %dec_label_pc_10820, %bb1829, %bb1822, %bb1817, %bb1812, %bb1806, %bb1801, %bb1795, %bb1790, %bb1785, %bb1780, %bb1775, %bb1770, %bb1765, %bb1760, %bb1755, %.thread469, %dec_label_pc_1044c, %.thread463, %dec_label_pc_10408, %.thread457, %dec_label_pc_103dc, %.thread453, %dec_label_pc_103b4, %dec_label_pc_103a4, %.thread448, %.thread444, %.thread440, %.thread436, %bb1743, %bb1736, %bb1731, %bb1723, %bb1717, %bb1710, %bb1705, %bb1700, %bb1695, %bb1690, %bb1685, %.thread363, %bb1677, %bb1673, %bb1670, %bb1664, %bb1656, %bb1653, %bb1649, %bb1641, %bb1634, %bb1629, %bb1626, %bb1622, %bb1618, %bb1610, %bb1603, %bb1598, %bb1593, %bb1591, %bb1587, %bb1580, %dec_label_pc_fd24, %dec_label_pc_fd14, %.thread243, %dec_label_pc_fcd4, %.thread237, %.thread233, %dec_label_pc_fc7c, %dec_label_pc_fc60, %.thread226, %.thread222, %.thread218, %dec_label_pc_f950, %dec_label_pc_f720, %dec_label_pc_f660, %.thread114, %dec_label_pc_f57c, %dec_label_pc_f558, %.thread91, %dec_label_pc_f4d8, %dec_label_pc_f4b4, %.thread75, %.thread71, %dec_label_pc_f438, %dec_label_pc_f3f4, %.thread60, %dec_label_pc_f3a8, %dec_label_pc_f390, %dec_label_pc_f35c, %.thread48, %.thread44, %.thread40, %dec_label_pc_f30c, %.thread35, %.thread31, %dec_label_pc_f284, %dec_label_pc_f270, %dec_label_pc_f25c, %dec_label_pc_10a70, %dec_label_pc_10a44, %bb1883, %bb1882, %dec_label_pc_109f8, %dec_label_pc_109b0, %dec_label_pc_1098c, %dec_label_pc_1096c, %dec_label_pc_10948, %bb1856, %dec_label_pc_108a0, %dec_label_pc_10884, %dec_label_pc_10840, %dec_label_pc_10804, %dec_label_pc_107e4, %dec_label_pc_107c0, %bb1823, %bb1796, %bb1771, %bb1751, %bb1750, %bb1745, %bb1744, %bb1711, %bb1680, %bb1604, %bb1566, %dec_label_pc_fbf8, %dec_label_pc_fbd4, %dec_label_pc_fbb4, %dec_label_pc_fb94, %dec_label_pc_fb64, %dec_label_pc_fb44, %dec_label_pc_fb24, %dec_label_pc_fb0c, %dec_label_pc_fae4, %dec_label_pc_facc, %dec_label_pc_faac, %dec_label_pc_fa88, %dec_label_pc_fa60, %dec_label_pc_fa44, %dec_label_pc_fa24, %dec_label_pc_fa04, %dec_label_pc_f9e4, %dec_label_pc_f9c4, %dec_label_pc_f9b0, %dec_label_pc_f98c, %dec_label_pc_f96c, %dec_label_pc_f934, %dec_label_pc_f918, %dec_label_pc_f8fc, %dec_label_pc_f8dc, %dec_label_pc_f8c8, %dec_label_pc_f8ac, %dec_label_pc_f888, %dec_label_pc_f85c, %dec_label_pc_f830, %dec_label_pc_f804, %dec_label_pc_f7d4, %dec_label_pc_f7b0, %dec_label_pc_f788, %dec_label_pc_f76c, %dec_label_pc_f744, %dec_label_pc_f6fc, %dec_label_pc_f6d0, %dec_label_pc_f6b0, %dec_label_pc_f658, %dec_label_pc_f628, %bb1428, %bb1425, %bb1422, %bb1413, %bb1410, %bb1407, %bb1398, %bb1395, %bb1394, %bb1391, %bb1384, %bb1377, %bb1370, %bb1367, %bb1364, %bb1355, %bb1352, %dec_label_pc_f224, %bb1349, %bb1348, %bb1347, %bb1346, %bb1345, %bb1344, %bb1343, %bb1342, %bb1341, %bb1340, %bb1339, %dec_label_pc_f150
  %v0_f184 = call i32 @function_e82c()
  store i32 %v0_f184, i32* %r0.global-to-local, align 4
  %v1_f188 = urem i32 %v0_f184, 256
  store i32 %v1_f188, i32* %r1.global-to-local, align 4
  %v3_f18c = udiv i32 %v0_f184, 256
  store i32 %v3_f18c, i32* %r3.global-to-local, align 4
  %v3_f190 = udiv i32 %v0_f184, 65536
  store i32 %v3_f190, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f194 = icmp eq i32 %v1_f188, 0
  store i1 %v2_f194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f194, label %bb1339, label %bb1338

bb1338:                                           ; preds = %dec_label_pc_f184
  %v3_f198 = icmp ugt i32 %v1_f188, 126
  store i1 %v3_f198, i1* %cpsr_c.global-to-local, align 1
  %v8_f198 = icmp eq i32 %v1_f188, 127
  store i1 %v8_f198, i1* %cpsr_z.global-to-local, align 1
  br label %bb1339

bb1339:                                           ; preds = %dec_label_pc_f184, %bb1338
  %v0_f1a8 = phi i1 [ true, %dec_label_pc_f184 ], [ %v8_f198, %bb1338 ]
  %v1_f19c = urem i32 %v3_f18c, 256
  store i32 %v1_f19c, i32* %ip.global-to-local, align 4
  %v1_f1a0 = urem i32 %v3_f190, 256
  store i32 %v1_f1a0, i32* %r2.global-to-local, align 4
  %v1_f1a4 = and i32 %v0_f184, 8388608
  %v2_f1a4 = icmp ne i32 %v1_f1a4, 0
  store i1 %v2_f1a4, i1* %cpsr_c.global-to-local, align 1
  %v3_f1a4 = udiv i32 %v0_f184, 16777216
  store i32 %v3_f1a4, i32* %r0.global-to-local, align 4
  br i1 %v0_f1a8, label %dec_label_pc_f184, label %dec_label_pc_f1ac

dec_label_pc_f1ac:                                ; preds = %bb1339
  %v2_f1ac = icmp ugt i32 %v1_f188, 14
  store i1 %v2_f1ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f1ac = icmp eq i32 %v1_f188, 15
  store i1 %v7_f1ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1ac, label %dec_label_pc_f184, label %bb1340

bb1340:                                           ; preds = %dec_label_pc_f1ac
  %v3_f1b0 = icmp ugt i32 %v1_f188, 2
  store i1 %v3_f1b0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1b0 = icmp eq i32 %v1_f188, 3
  store i1 %v8_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1b0, label %dec_label_pc_f184, label %dec_label_pc_f1b8

dec_label_pc_f1b8:                                ; preds = %bb1340
  %v2_f1b8 = icmp ugt i32 %v1_f188, 9
  store i1 %v2_f1b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b8 = icmp eq i32 %v1_f188, 10
  store i1 %v7_f1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1b8, label %dec_label_pc_f184, label %bb1341

bb1341:                                           ; preds = %dec_label_pc_f1b8
  %v3_f1bc = icmp ugt i32 %v1_f188, 55
  store i1 %v3_f1bc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1bc = icmp eq i32 %v1_f188, 56
  store i1 %v8_f1bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1bc, label %dec_label_pc_f184, label %dec_label_pc_f1c4

dec_label_pc_f1c4:                                ; preds = %bb1341
  %v2_f1c4 = icmp ugt i32 %v1_f188, 48
  store i1 %v2_f1c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c4 = icmp eq i32 %v1_f188, 49
  store i1 %v7_f1c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1c4, label %dec_label_pc_f184, label %bb1342

bb1342:                                           ; preds = %dec_label_pc_f1c4
  %v3_f1c8 = icmp ugt i32 %v1_f188, 24
  store i1 %v3_f1c8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1c8 = icmp eq i32 %v1_f188, 25
  store i1 %v8_f1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1c8, label %dec_label_pc_f184, label %dec_label_pc_f1d0

dec_label_pc_f1d0:                                ; preds = %bb1342
  %v2_f1d0 = icmp ugt i32 %v1_f188, 136
  store i1 %v2_f1d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d0 = icmp eq i32 %v1_f188, 137
  store i1 %v7_f1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1d0, label %dec_label_pc_f184, label %bb1343

bb1343:                                           ; preds = %dec_label_pc_f1d0
  %v3_f1d4 = icmp ugt i32 %v1_f188, 49
  store i1 %v3_f1d4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1d4 = icmp eq i32 %v1_f188, 50
  store i1 %v8_f1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1d4, label %dec_label_pc_f184, label %dec_label_pc_f1dc

dec_label_pc_f1dc:                                ; preds = %bb1343
  %v2_f1dc = icmp ugt i32 %v1_f188, 6
  store i1 %v2_f1dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f1dc = icmp eq i32 %v1_f188, 7
  store i1 %v7_f1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1dc, label %dec_label_pc_f184, label %bb1344

bb1344:                                           ; preds = %dec_label_pc_f1dc
  %v3_f1e0 = icmp ugt i32 %v1_f188, 5
  store i1 %v3_f1e0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1e0 = icmp eq i32 %v1_f188, 6
  store i1 %v8_f1e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1e0, label %dec_label_pc_f184, label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %bb1344
  %v2_f1e8 = icmp ugt i32 %v1_f188, 20
  store i1 %v2_f1e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e8 = icmp eq i32 %v1_f188, 21
  store i1 %v7_f1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e8, label %dec_label_pc_f184, label %bb1345

bb1345:                                           ; preds = %dec_label_pc_f1e8
  %v3_f1ec = icmp ugt i32 %v1_f188, 10
  store i1 %v3_f1ec, i1* %cpsr_c.global-to-local, align 1
  %v8_f1ec = icmp eq i32 %v1_f188, 11
  store i1 %v8_f1ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1ec, label %dec_label_pc_f184, label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %bb1345
  %v2_f1f4 = icmp ugt i32 %v1_f188, 25
  store i1 %v2_f1f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f4 = icmp eq i32 %v1_f188, 26
  store i1 %v7_f1f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1f4, label %dec_label_pc_f184, label %bb1346

bb1346:                                           ; preds = %dec_label_pc_f1f4
  %v3_f1f8 = icmp ugt i32 %v1_f188, 21
  store i1 %v3_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1f8 = icmp eq i32 %v1_f188, 22
  store i1 %v8_f1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1f8, label %dec_label_pc_f184, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %bb1346
  %v2_f200 = icmp ugt i32 %v1_f188, 28
  store i1 %v2_f200, i1* %cpsr_c.global-to-local, align 1
  %v7_f200 = icmp eq i32 %v1_f188, 29
  store i1 %v7_f200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f200, label %dec_label_pc_f184, label %bb1347

bb1347:                                           ; preds = %dec_label_pc_f200
  %v3_f204 = icmp ugt i32 %v1_f188, 27
  store i1 %v3_f204, i1* %cpsr_c.global-to-local, align 1
  %v8_f204 = icmp eq i32 %v1_f188, 28
  store i1 %v8_f204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f204, label %dec_label_pc_f184, label %dec_label_pc_f20c

dec_label_pc_f20c:                                ; preds = %bb1347
  %v2_f20c = icmp ugt i32 %v1_f188, 32
  store i1 %v2_f20c, i1* %cpsr_c.global-to-local, align 1
  %v7_f20c = icmp eq i32 %v1_f188, 33
  store i1 %v7_f20c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f20c, label %dec_label_pc_f184, label %bb1348

bb1348:                                           ; preds = %dec_label_pc_f20c
  %v3_f210 = icmp ugt i32 %v1_f188, 29
  store i1 %v3_f210, i1* %cpsr_c.global-to-local, align 1
  %v8_f210 = icmp eq i32 %v1_f188, 30
  store i1 %v8_f210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f210, label %dec_label_pc_f184, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %bb1348
  %v2_f218 = icmp ugt i32 %v1_f188, 213
  store i1 %v2_f218, i1* %cpsr_c.global-to-local, align 1
  %v7_f218 = icmp eq i32 %v1_f188, 214
  store i1 %v7_f218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f218, label %dec_label_pc_f184, label %bb1349

bb1349:                                           ; preds = %dec_label_pc_f218
  %v3_f21c = icmp ugt i32 %v1_f188, 54
  store i1 %v3_f21c, i1* %cpsr_c.global-to-local, align 1
  %v8_f21c = icmp eq i32 %v1_f188, 55
  store i1 %v8_f21c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f21c, label %dec_label_pc_f184, label %dec_label_pc_f224

dec_label_pc_f224:                                ; preds = %bb1349
  %v2_f224 = icmp ugt i32 %v1_f188, 214
  store i1 %v2_f224, i1* %cpsr_c.global-to-local, align 1
  %v7_f224 = icmp eq i32 %v1_f188, 215
  store i1 %v7_f224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f224, label %dec_label_pc_f184, label %dec_label_pc_f22c

dec_label_pc_f22c:                                ; preds = %dec_label_pc_f224
  %v7_f22c = icmp eq i32 %v1_f188, 192
  %.1945 = zext i1 %v7_f22c to i32
  %v2_f238 = icmp ugt i32 %v1_f19c, 167
  store i1 %v2_f238, i1* %cpsr_c.global-to-local, align 1
  %v7_f238 = icmp eq i32 %v1_f19c, 168
  store i1 %v7_f238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f238, label %bb1352, label %dec_label_pc_f244

bb1352:                                           ; preds = %dec_label_pc_f22c
  %v2_f22c = icmp ugt i32 %v1_f188, 191
  store i1 %v2_f22c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f22c, label %dec_label_pc_f184, label %dec_label_pc_f244

dec_label_pc_f244:                                ; preds = %dec_label_pc_f22c, %bb1352
  %v7_f244 = icmp eq i32 %v1_f188, 146
  %.1946 = zext i1 %v7_f244 to i32
  %v2_f250 = icmp ugt i32 %v1_f19c, 16
  store i1 %v2_f250, i1* %cpsr_c.global-to-local, align 1
  %v7_f250 = icmp eq i32 %v1_f19c, 17
  store i1 %v7_f250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f250, label %bb1355, label %dec_label_pc_f25c

bb1355:                                           ; preds = %dec_label_pc_f244
  %v2_f244 = icmp ugt i32 %v1_f188, 145
  store i1 %v2_f244, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f244, label %dec_label_pc_f184, label %dec_label_pc_f25c

dec_label_pc_f25c:                                ; preds = %dec_label_pc_f244, %bb1355
  %v2_f25c = icmp ugt i32 %v1_f19c, 79
  store i1 %v2_f25c, i1* %cpsr_c.global-to-local, align 1
  %v7_f25c = icmp eq i32 %v1_f19c, 80
  %.1947 = zext i1 %v7_f25c to i32
  %v2_f268 = and i32 %.1947, %.1946
  %v4_f268 = icmp eq i32 %v2_f268, 0
  store i1 %v4_f268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f268, label %dec_label_pc_f270, label %dec_label_pc_f184

dec_label_pc_f270:                                ; preds = %dec_label_pc_f25c
  %v2_f270 = icmp ugt i32 %v1_f19c, 97
  store i1 %v2_f270, i1* %cpsr_c.global-to-local, align 1
  %v7_f270 = icmp eq i32 %v1_f19c, 98
  %.1948 = zext i1 %v7_f270 to i32
  store i32 %.1948, i32* %r8.global-to-local, align 4
  %v2_f27c = and i32 %.1948, %.1946
  %v4_f27c = icmp eq i32 %v2_f27c, 0
  store i1 %v4_f27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f27c, label %dec_label_pc_f284, label %dec_label_pc_f184

dec_label_pc_f284:                                ; preds = %dec_label_pc_f270
  %v2_f284 = icmp ugt i32 %v1_f19c, 153
  store i1 %v2_f284, i1* %cpsr_c.global-to-local, align 1
  %v7_f284 = icmp eq i32 %v1_f19c, 154
  %.1949 = zext i1 %v7_f284 to i32
  store i32 %.1949, i32* %sl.global-to-local, align 4
  %v2_f290 = and i32 %.1949, %.1946
  %v4_f290 = icmp eq i32 %v2_f290, 0
  store i1 %v4_f290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f290, label %dec_label_pc_f298, label %dec_label_pc_f184

dec_label_pc_f298:                                ; preds = %dec_label_pc_f284
  %v7_f298 = icmp eq i32 %v1_f188, 147
  %.1950 = zext i1 %v7_f298 to i32
  store i32 %.1950, i32* %sb.global-to-local, align 4
  %v2_f2a4 = icmp ugt i32 %v1_f19c, 158
  store i1 %v2_f2a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2a4 = icmp eq i32 %v1_f19c, 159
  store i1 %v7_f2a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2a4, label %bb1364, label %dec_label_pc_f2b0

bb1364:                                           ; preds = %dec_label_pc_f298
  %v2_f298 = icmp ugt i32 %v1_f188, 146
  store i1 %v2_f298, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f298, label %dec_label_pc_f184, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f298, %bb1364
  %v2_f2b0 = icmp ugt i32 %v1_f19c, 113
  %v7_f2b0 = icmp eq i32 %v1_f19c, 114
  %.1951 = zext i1 %v7_f2b0 to i32
  store i32 %.1951, i32* %fp.global-to-local, align 4
  %v2_f2bc = icmp ugt i32 %v1_f188, 147
  store i1 %v2_f2bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f2bc = icmp eq i32 %v1_f188, 148
  store i1 %v7_f2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2bc, label %bb1367, label %dec_label_pc_f2cc

bb1367:                                           ; preds = %dec_label_pc_f2b0
  store i1 %v2_f2b0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2b0, label %dec_label_pc_f184, label %dec_label_pc_f2cc

dec_label_pc_f2cc:                                ; preds = %dec_label_pc_f2b0, %bb1367
  %v7_f2cc = icmp eq i32 %v1_f188, 150
  %.1952 = zext i1 %v7_f2cc to i32
  store i32 %.1952, i32* %r4.global-to-local, align 4
  %v2_f2d8 = icmp ugt i32 %v1_f19c, 124
  store i1 %v2_f2d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2d8 = icmp eq i32 %v1_f19c, 125
  store i1 %v7_f2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2d8, label %bb1370, label %dec_label_pc_f2e4

bb1370:                                           ; preds = %dec_label_pc_f2cc
  %v2_f2cc = icmp ugt i32 %v1_f188, 149
  store i1 %v2_f2cc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2cc, label %dec_label_pc_f184, label %dec_label_pc_f2e4

dec_label_pc_f2e4:                                ; preds = %dec_label_pc_f2cc, %bb1370
  %v2_f2e4 = icmp ugt i32 %v1_f19c, 132
  store i1 %v2_f2e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e4 = icmp eq i32 %v1_f19c, 133
  store i1 %v7_f2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2e4, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_f2e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2f8

.thread31:                                        ; preds = %dec_label_pc_f2e4
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2f0 = icmp eq i1 %v7_f2cc, false
  store i1 %v2_f2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2f0, label %dec_label_pc_f2f8, label %dec_label_pc_f184

dec_label_pc_f2f8:                                ; preds = %.thread32, %.thread31
  %v2_f2f8 = icmp ugt i32 %v1_f19c, 143
  store i1 %v2_f2f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2f8 = icmp eq i32 %v1_f19c, 144
  store i1 %v7_f2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2f8, label %.thread35, label %.thread36

.thread36:                                        ; preds = %dec_label_pc_f2f8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f30c

.thread35:                                        ; preds = %dec_label_pc_f2f8
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f304 = icmp eq i1 %v7_f2cc, false
  store i1 %v2_f304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f304, label %dec_label_pc_f30c, label %dec_label_pc_f184

dec_label_pc_f30c:                                ; preds = %.thread36, %.thread35
  %v2_f30c = icmp ugt i32 %v1_f19c, 148
  store i1 %v2_f30c, i1* %cpsr_c.global-to-local, align 1
  %v7_f30c = icmp eq i32 %v1_f19c, 149
  %.1953 = zext i1 %v7_f30c to i32
  %v2_f318 = and i32 %.1953, %.1952
  %v4_f318 = icmp eq i32 %v2_f318, 0
  store i1 %v4_f318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f318, label %dec_label_pc_f320, label %dec_label_pc_f184

dec_label_pc_f320:                                ; preds = %dec_label_pc_f30c
  %v2_f320 = icmp ugt i32 %v1_f19c, 156
  store i1 %v2_f320, i1* %cpsr_c.global-to-local, align 1
  %v7_f320 = icmp eq i32 %v1_f19c, 157
  store i1 %v7_f320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f320, label %.thread40, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_f320
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f334

.thread40:                                        ; preds = %dec_label_pc_f320
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f32c = icmp eq i1 %v7_f2cc, false
  store i1 %v2_f32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f32c, label %dec_label_pc_f334, label %dec_label_pc_f184

dec_label_pc_f334:                                ; preds = %.thread41, %.thread40
  %v2_f334 = icmp ugt i32 %v1_f19c, 183
  store i1 %v2_f334, i1* %cpsr_c.global-to-local, align 1
  %v7_f334 = icmp eq i32 %v1_f19c, 184
  store i1 %v7_f334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f334, label %.thread44, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_f334
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f348

.thread44:                                        ; preds = %dec_label_pc_f334
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f340 = icmp eq i1 %v7_f2cc, false
  store i1 %v2_f340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f340, label %dec_label_pc_f348, label %dec_label_pc_f184

dec_label_pc_f348:                                ; preds = %.thread45, %.thread44
  %v2_f348 = icmp ugt i32 %v1_f19c, 189
  store i1 %v2_f348, i1* %cpsr_c.global-to-local, align 1
  %v7_f348 = icmp eq i32 %v1_f19c, 190
  store i1 %v7_f348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f348, label %.thread48, label %.thread49

.thread49:                                        ; preds = %dec_label_pc_f348
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f35c

.thread48:                                        ; preds = %dec_label_pc_f348
  store i32 %.1952, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f354 = icmp eq i1 %v7_f2cc, false
  store i1 %v2_f354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f354, label %dec_label_pc_f35c, label %dec_label_pc_f184

dec_label_pc_f35c:                                ; preds = %.thread49, %.thread48
  %v2_f35c = icmp ugt i32 %v1_f19c, 195
  store i1 %v2_f35c, i1* %cpsr_c.global-to-local, align 1
  %v7_f35c = icmp eq i32 %v1_f19c, 196
  %.1954 = zext i1 %v7_f35c to i32
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_f368 = and i32 %.1954, %.1952
  %v4_f368 = icmp eq i32 %v2_f368, 0
  store i1 %v4_f368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f368, label %dec_label_pc_f374, label %dec_label_pc_f184

dec_label_pc_f374:                                ; preds = %dec_label_pc_f35c
  %v7_f374 = icmp eq i32 %v1_f188, 152
  %.1955 = zext i1 %v7_f374 to i32
  store i32 %.1955, i32* %fp.global-to-local, align 4
  %v2_f380 = icmp ugt i32 %v1_f19c, 81
  store i1 %v2_f380, i1* %cpsr_c.global-to-local, align 1
  %v7_f380 = icmp eq i32 %v1_f19c, 82
  store i1 %v7_f380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f380, label %bb1377, label %dec_label_pc_f390

bb1377:                                           ; preds = %dec_label_pc_f374
  %v2_f374 = icmp ugt i32 %v1_f188, 151
  store i1 %v2_f374, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f374, label %dec_label_pc_f184, label %dec_label_pc_f390

dec_label_pc_f390:                                ; preds = %dec_label_pc_f374, %bb1377
  %v2_f390 = icmp ugt i32 %v1_f19c, 228
  store i1 %v2_f390, i1* %cpsr_c.global-to-local, align 1
  %v7_f390 = icmp eq i32 %v1_f19c, 229
  %.1956 = zext i1 %v7_f390 to i32
  store i32 %.1956, i32* %r3.global-to-local, align 4
  %v2_f39c = and i32 %.1956, %.1955
  %v4_f39c = icmp eq i32 %v2_f39c, 0
  store i1 %v4_f39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f39c, label %dec_label_pc_f3a8, label %dec_label_pc_f184

dec_label_pc_f3a8:                                ; preds = %dec_label_pc_f390
  %v7_f3a8 = icmp eq i32 %v1_f188, 157
  %.1957 = zext i1 %v7_f3a8 to i32
  store i32 %.1957, i32* %fp.global-to-local, align 4
  %v2_f3b4 = icmp ugt i32 %v1_f19c, 201
  store i1 %v2_f3b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3b4 = icmp eq i32 %v1_f19c, 202
  %storemerge1185 = zext i1 %v7_f3b4 to i32
  store i32 %storemerge1185, i32* %r3.global-to-local, align 4
  %v2_f3c0 = and i32 %storemerge1185, %.1957
  %v4_f3c0 = icmp eq i32 %v2_f3c0, 0
  store i1 %v4_f3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3c0, label %dec_label_pc_f3d0, label %dec_label_pc_f184

dec_label_pc_f3d0:                                ; preds = %dec_label_pc_f3a8
  store i32 %.1957, i32* %r3.global-to-local, align 4
  %v2_f3d4 = icmp ugt i32 %v1_f19c, 216
  store i1 %v2_f3d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3d4 = icmp eq i32 %v1_f19c, 217
  store i1 %v7_f3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3d4, label %.thread60, label %.thread61

.thread61:                                        ; preds = %dec_label_pc_f3d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3e8

.thread60:                                        ; preds = %dec_label_pc_f3d0
  store i32 %.1957, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3e0 = icmp eq i1 %v7_f3a8, false
  store i1 %v2_f3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3e0, label %dec_label_pc_f3e8, label %dec_label_pc_f184

dec_label_pc_f3e8:                                ; preds = %.thread61, %.thread60
  %v2_f3e8 = icmp ugt i32 %v1_f188, 160
  store i1 %v2_f3e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f3e8 = icmp eq i32 %v1_f188, 161
  store i1 %v7_f3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3e8, label %bb1384, label %dec_label_pc_f3f4

bb1384:                                           ; preds = %dec_label_pc_f3e8
  %v3_f3ec = icmp ugt i32 %v1_f19c, 123
  store i1 %v3_f3ec, i1* %cpsr_c.global-to-local, align 1
  %v8_f3ec = icmp eq i32 %v1_f19c, 124
  store i1 %v8_f3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f3ec, label %dec_label_pc_f184, label %dec_label_pc_f3f4

dec_label_pc_f3f4:                                ; preds = %dec_label_pc_f3e8, %bb1384
  %v7_f3f4 = icmp eq i32 %v1_f188, 162
  %.1958 = zext i1 %v7_f3f4 to i32
  store i32 %.1958, i32* %fp.global-to-local, align 4
  %v2_f400 = icmp ugt i32 %v1_f19c, 31
  store i1 %v2_f400, i1* %cpsr_c.global-to-local, align 1
  %v7_f400 = icmp eq i32 %v1_f19c, 32
  %storemerge1187 = zext i1 %v7_f400 to i32
  store i32 %storemerge1187, i32* %r3.global-to-local, align 4
  %v2_f40c = and i32 %storemerge1187, %.1958
  %v4_f40c = icmp eq i32 %v2_f40c, 0
  store i1 %v4_f40c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f40c, label %dec_label_pc_f41c, label %dec_label_pc_f184

dec_label_pc_f41c:                                ; preds = %dec_label_pc_f3f4
  %v7_f41c = icmp eq i32 %v1_f188, 155
  %.1959 = zext i1 %v7_f41c to i32
  store i32 %.1959, i32* %fp.global-to-local, align 4
  %v2_f428 = icmp ugt i32 %v1_f19c, 95
  store i1 %v2_f428, i1* %cpsr_c.global-to-local, align 1
  %v7_f428 = icmp eq i32 %v1_f19c, 96
  store i1 %v7_f428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f428, label %bb1391, label %dec_label_pc_f438

bb1391:                                           ; preds = %dec_label_pc_f41c
  %v2_f41c = icmp ugt i32 %v1_f188, 154
  store i1 %v2_f41c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f41c, label %dec_label_pc_f184, label %dec_label_pc_f438

dec_label_pc_f438:                                ; preds = %dec_label_pc_f41c, %bb1391
  %v2_f438 = and i32 %.1953, %.1959
  %v4_f438 = icmp eq i32 %v2_f438, 0
  store i1 %v4_f438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f438, label %dec_label_pc_f440, label %dec_label_pc_f184

dec_label_pc_f440:                                ; preds = %dec_label_pc_f438
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f444 = icmp ugt i32 %v1_f19c, 154
  store i1 %v2_f444, i1* %cpsr_c.global-to-local, align 1
  %v7_f444 = icmp eq i32 %v1_f19c, 155
  store i1 %v7_f444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f444, label %.thread71, label %.thread72

.thread72:                                        ; preds = %dec_label_pc_f440
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f458

.thread71:                                        ; preds = %dec_label_pc_f440
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f450 = icmp eq i1 %v7_f41c, false
  store i1 %v2_f450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f450, label %dec_label_pc_f458, label %dec_label_pc_f184

dec_label_pc_f458:                                ; preds = %.thread72, %.thread71
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f45c = icmp ugt i32 %v1_f19c, 177
  store i1 %v2_f45c, i1* %cpsr_c.global-to-local, align 1
  %v7_f45c = icmp eq i32 %v1_f19c, 178
  store i1 %v7_f45c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f45c, label %.thread75, label %.thread76

.thread76:                                        ; preds = %dec_label_pc_f458
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f470

.thread75:                                        ; preds = %dec_label_pc_f458
  store i32 %.1959, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f468 = icmp eq i1 %v7_f41c, false
  store i1 %v2_f468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f468, label %dec_label_pc_f470, label %dec_label_pc_f184

dec_label_pc_f470:                                ; preds = %.thread76, %.thread75
  %v7_f470 = icmp eq i32 %v1_f188, 164
  %.1960 = zext i1 %v7_f470 to i32
  %v2_f47c = icmp ugt i32 %v1_f19c, 157
  store i1 %v2_f47c, i1* %cpsr_c.global-to-local, align 1
  %v7_f47c = icmp eq i32 %v1_f19c, 158
  store i1 %v7_f47c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f47c, label %bb1394, label %dec_label_pc_f48c

bb1394:                                           ; preds = %dec_label_pc_f470
  %v2_f470 = icmp ugt i32 %v1_f188, 163
  store i1 %v2_f470, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f470, label %dec_label_pc_f184, label %dec_label_pc_f48c

dec_label_pc_f48c:                                ; preds = %dec_label_pc_f470, %bb1394
  %v2_f48c = icmp ugt i32 %v1_f188, 155
  store i1 %v2_f48c, i1* %cpsr_c.global-to-local, align 1
  %v7_f48c = icmp eq i32 %v1_f188, 156
  store i1 %v7_f48c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f48c, label %bb1395, label %dec_label_pc_f498

bb1395:                                           ; preds = %dec_label_pc_f48c
  %v3_f490 = icmp ugt i32 %v1_f19c, 8
  store i1 %v3_f490, i1* %cpsr_c.global-to-local, align 1
  %v8_f490 = icmp eq i32 %v1_f19c, 9
  store i1 %v8_f490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f490, label %dec_label_pc_f184, label %dec_label_pc_f498

dec_label_pc_f498:                                ; preds = %dec_label_pc_f48c, %bb1395
  %v7_f498 = icmp eq i32 %v1_f188, 167
  %.1961 = zext i1 %v7_f498 to i32
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_f4a4 = icmp ugt i32 %v1_f19c, 43
  store i1 %v2_f4a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4a4 = icmp eq i32 %v1_f19c, 44
  store i1 %v7_f4a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4a4, label %bb1398, label %dec_label_pc_f4b4

bb1398:                                           ; preds = %dec_label_pc_f498
  %v2_f498 = icmp ugt i32 %v1_f188, 166
  store i1 %v2_f498, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f498, label %dec_label_pc_f184, label %dec_label_pc_f4b4

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f498, %bb1398
  %v2_f4b4 = icmp ugt i32 %v1_f19c, 67
  %v7_f4b4 = icmp eq i32 %v1_f19c, 68
  %.1962 = zext i1 %v7_f4b4 to i32
  store i32 %.1962, i32* %fp.global-to-local, align 4
  %v2_f4c0 = icmp ugt i32 %v1_f188, 167
  store i1 %v2_f4c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f4c0 = icmp eq i32 %v1_f188, 168
  %storemerge1192 = zext i1 %v7_f4c0 to i32
  store i32 %storemerge1192, i32* %r3.global-to-local, align 4
  %v2_f4cc = and i32 %.1962, %storemerge1192
  %v4_f4cc = icmp eq i32 %v2_f4cc, 0
  store i1 %v4_f4cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4cc, label %dec_label_pc_f4d8, label %dec_label_pc_f184

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4b4
  %v2_f4d8 = icmp ugt i32 %v1_f19c, 84
  store i1 %v2_f4d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f4d8 = icmp eq i32 %v1_f19c, 85
  %.1963 = zext i1 %v7_f4d8 to i32
  %v2_f4e4 = and i32 %.1963, %storemerge1192
  %v4_f4e4 = icmp eq i32 %v2_f4e4, 0
  store i1 %v4_f4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4e4, label %dec_label_pc_f4f0, label %dec_label_pc_f184

dec_label_pc_f4f0:                                ; preds = %dec_label_pc_f4d8
  %v2_f4f0 = icmp ugt i32 %v1_f19c, 101
  store i1 %v2_f4f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f4f0 = icmp eq i32 %v1_f19c, 102
  store i1 %v7_f4f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4f0, label %.thread91, label %.thread92

.thread92:                                        ; preds = %dec_label_pc_f4f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f504

.thread91:                                        ; preds = %dec_label_pc_f4f0
  store i32 %storemerge1192, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4fc = icmp eq i1 %v7_f4c0, false
  store i1 %v2_f4fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4fc, label %dec_label_pc_f504, label %dec_label_pc_f184

dec_label_pc_f504:                                ; preds = %.thread92, %.thread91
  %v2_f504 = icmp ugt i32 %v1_f19c, 58
  %v7_f504 = icmp eq i32 %v1_f19c, 59
  %.1964 = zext i1 %v7_f504 to i32
  store i32 %.1964, i32* %r3.global-to-local, align 4
  %v2_f510 = icmp ugt i32 %v1_f188, 202
  store i1 %v2_f510, i1* %cpsr_c.global-to-local, align 1
  %v7_f510 = icmp eq i32 %v1_f188, 203
  store i1 %v7_f510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f510, label %bb1407, label %dec_label_pc_f520

bb1407:                                           ; preds = %dec_label_pc_f504
  store i1 %v2_f504, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f504, label %dec_label_pc_f184, label %dec_label_pc_f520

dec_label_pc_f520:                                ; preds = %dec_label_pc_f504, %bb1407
  %v2_f520 = icmp ugt i32 %v1_f19c, 33
  %v7_f520 = icmp eq i32 %v1_f19c, 34
  %.1965 = zext i1 %v7_f520 to i32
  store i32 %.1965, i32* %fp.global-to-local, align 4
  %v2_f52c = icmp ugt i32 %v1_f188, 203
  store i1 %v2_f52c, i1* %cpsr_c.global-to-local, align 1
  %v7_f52c = icmp eq i32 %v1_f188, 204
  store i1 %v7_f52c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f52c, label %bb1410, label %dec_label_pc_f53c

bb1410:                                           ; preds = %dec_label_pc_f520
  store i1 %v2_f520, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f520, label %dec_label_pc_f184, label %dec_label_pc_f53c

dec_label_pc_f53c:                                ; preds = %dec_label_pc_f520, %bb1410
  %v7_f53c = icmp eq i32 %v1_f188, 207
  %.1966 = zext i1 %v7_f53c to i32
  %v2_f548 = icmp ugt i32 %v1_f19c, 29
  store i1 %v2_f548, i1* %cpsr_c.global-to-local, align 1
  %v7_f548 = icmp eq i32 %v1_f19c, 30
  store i1 %v7_f548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f548, label %bb1413, label %dec_label_pc_f558

bb1413:                                           ; preds = %dec_label_pc_f53c
  %v2_f53c = icmp ugt i32 %v1_f188, 206
  store i1 %v2_f53c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f53c, label %dec_label_pc_f184, label %dec_label_pc_f558

dec_label_pc_f558:                                ; preds = %dec_label_pc_f53c, %bb1413
  %v7_f558 = icmp eq i32 %v1_f19c, 55
  %.1967 = zext i1 %v7_f558 to i32
  store i32 %.1967, i32* %fp.global-to-local, align 4
  %v2_f564 = icmp ugt i32 %v1_f188, 116
  store i1 %v2_f564, i1* %cpsr_c.global-to-local, align 1
  %v7_f564 = icmp eq i32 %v1_f188, 117
  %storemerge1198 = zext i1 %v7_f564 to i32
  store i32 %storemerge1198, i32* %r3.global-to-local, align 4
  %v2_f570 = and i32 %.1967, %storemerge1198
  %v4_f570 = icmp eq i32 %v2_f570, 0
  store i1 %v4_f570, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f570, label %dec_label_pc_f57c, label %dec_label_pc_f184

dec_label_pc_f57c:                                ; preds = %dec_label_pc_f558
  %v2_f57c = icmp ugt i32 %v1_f19c, 55
  store i1 %v2_f57c, i1* %cpsr_c.global-to-local, align 1
  %v7_f57c = icmp eq i32 %v1_f19c, 56
  %.1968 = zext i1 %v7_f57c to i32
  %v2_f588 = and i32 %.1968, %storemerge1198
  %v4_f588 = icmp eq i32 %v2_f588, 0
  store i1 %v4_f588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f588, label %dec_label_pc_f594, label %dec_label_pc_f184

dec_label_pc_f594:                                ; preds = %dec_label_pc_f57c
  %v7_f594 = icmp eq i32 %v1_f188, 80
  %.1969 = zext i1 %v7_f594 to i32
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_f5a0 = icmp ugt i32 %v1_f19c, 234
  store i1 %v2_f5a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5a0 = icmp eq i32 %v1_f19c, 235
  store i1 %v7_f5a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5a0, label %bb1422, label %dec_label_pc_f5b0

bb1422:                                           ; preds = %dec_label_pc_f594
  %v2_f594 = icmp ugt i32 %v1_f188, 79
  store i1 %v2_f594, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f594, label %dec_label_pc_f184, label %dec_label_pc_f5b0

dec_label_pc_f5b0:                                ; preds = %dec_label_pc_f594, %bb1422
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_f5b4 = icmp ugt i32 %v1_f19c, 119
  store i1 %v2_f5b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5b4 = icmp eq i32 %v1_f19c, 120
  store i1 %v7_f5b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5b4, label %.thread114, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_f5b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5c8

.thread114:                                       ; preds = %dec_label_pc_f5b0
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5c0 = icmp eq i1 %v7_f53c, false
  store i1 %v2_f5c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5c0, label %dec_label_pc_f5c8, label %dec_label_pc_f184

dec_label_pc_f5c8:                                ; preds = %.thread115, %.thread114
  %v7_f5c8 = icmp eq i32 %v1_f188, 209
  %.1970 = zext i1 %v7_f5c8 to i32
  store i32 %.1970, i32* %fp.global-to-local, align 4
  %v2_f5d4 = icmp ugt i32 %v1_f19c, 34
  store i1 %v2_f5d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5d4 = icmp eq i32 %v1_f19c, 35
  store i1 %v7_f5d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5d4, label %bb1425, label %dec_label_pc_f5e4

bb1425:                                           ; preds = %dec_label_pc_f5c8
  %v2_f5c8 = icmp ugt i32 %v1_f188, 208
  store i1 %v2_f5c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5c8, label %dec_label_pc_f184, label %dec_label_pc_f5e4

dec_label_pc_f5e4:                                ; preds = %dec_label_pc_f5c8, %bb1425
  %v7_f5e4 = icmp eq i32 %v1_f188, 64
  %.1971 = zext i1 %v7_f5e4 to i32
  %v2_f5f0 = icmp ugt i32 %v1_f19c, 69
  store i1 %v2_f5f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5f0 = icmp eq i32 %v1_f19c, 70
  store i1 %v7_f5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5f0, label %bb1428, label %dec_label_pc_f600

bb1428:                                           ; preds = %dec_label_pc_f5e4
  %v2_f5e4 = icmp ugt i32 %v1_f188, 63
  store i1 %v2_f5e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5e4, label %dec_label_pc_f184, label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %dec_label_pc_f5e4, %bb1428
  %v7_f600 = icmp eq i32 %v1_f188, 172
  %.1972 = zext i1 %v7_f600 to i32
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_f60c = icmp ugt i32 %v1_f19c, 14
  store i1 %v2_f60c, i1* %cpsr_c.global-to-local, align 1
  %v7_f60c = icmp eq i32 %v1_f19c, 15
  store i1 %v7_f60c, i1* %cpsr_z.global-to-local, align 1
  %v2_f610 = xor i1 %v2_f60c, true
  %v3_f610 = or i1 %v7_f60c, %v2_f610
  br i1 %v3_f610, label %bb1431, label %bb1432

bb1431:                                           ; preds = %dec_label_pc_f600
  store i32 0, i32* %fp.global-to-local, align 4
  br label %bb1432

bb1432:                                           ; preds = %dec_label_pc_f600, %bb1431
  %v1_f618768 = phi i32 [ %.1970, %dec_label_pc_f600 ], [ 0, %bb1431 ]
  %v2_f614 = xor i1 %v7_f60c, true
  %v3_f614 = and i1 %v2_f60c, %v2_f614
  br i1 %v3_f614, label %bb1433, label %bb1434

bb1433:                                           ; preds = %bb1432
  store i32 1, i32* %fp.global-to-local, align 4
  br label %bb1434

bb1434:                                           ; preds = %bb1432, %bb1433
  %v0_fbec = phi i32 [ %v1_f618768, %bb1432 ], [ 1, %bb1433 ]
  %v2_f618 = and i32 %v0_fbec, %.1972
  %v4_f618 = icmp eq i32 %v2_f618, 0
  store i1 %v4_f618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f618, label %dec_label_pc_f630, label %dec_label_pc_f628

dec_label_pc_f628:                                ; preds = %bb1434
  %v2_f628 = icmp ugt i32 %v1_f19c, 30
  store i1 %v2_f628, i1* %cpsr_c.global-to-local, align 1
  %v7_f628 = icmp eq i32 %v1_f19c, 31
  store i1 %v7_f628, i1* %cpsr_z.global-to-local, align 1
  %v2_f62c = xor i1 %v2_f628, true
  %v3_f62c = or i1 %v7_f628, %v2_f62c
  br i1 %v3_f62c, label %dec_label_pc_f184, label %dec_label_pc_f630

dec_label_pc_f630:                                ; preds = %dec_label_pc_f628, %bb1434
  %v2_f630 = icmp ugt i32 %v1_f19c, 62
  store i1 %v2_f630, i1* %cpsr_c.global-to-local, align 1
  %v7_f630 = icmp eq i32 %v1_f19c, 63
  store i1 %v7_f630, i1* %cpsr_z.global-to-local, align 1
  %v2_f634 = xor i1 %v2_f630, true
  %v3_f634 = or i1 %v7_f630, %v2_f634
  br i1 %v3_f634, label %bb1435, label %bb1436

bb1435:                                           ; preds = %dec_label_pc_f630
  br label %bb1436

bb1436:                                           ; preds = %dec_label_pc_f630, %bb1435
  %v0_f63c770 = phi i32 [ %.1971, %dec_label_pc_f630 ], [ 0, %bb1435 ]
  %v2_f638 = xor i1 %v7_f630, true
  %v3_f638 = and i1 %v2_f630, %v2_f638
  br i1 %v3_f638, label %bb1437, label %bb1438

bb1437:                                           ; preds = %bb1436
  br label %bb1438

bb1438:                                           ; preds = %bb1436, %bb1437
  %v0_10838 = phi i32 [ %v0_f63c770, %bb1436 ], [ 1, %bb1437 ]
  store i32 %v0_10838, i32* %r3.global-to-local, align 4
  %v2_f640 = icmp ugt i32 %v1_f188, 99
  store i1 %v2_f640, i1* %cpsr_c.global-to-local, align 1
  %v7_f640 = icmp eq i32 %v1_f188, 100
  store i1 %v7_f640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f640, label %bb1439, label %.thread1121

.thread1121:                                      ; preds = %bb1438
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f660

bb1439:                                           ; preds = %bb1438
  %v2_f648 = urem i32 %v0_10838, 2
  store i32 %v2_f648, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f64c = icmp eq i32 %v2_f648, 0
  store i1 %v2_f64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f64c, label %dec_label_pc_f660, label %dec_label_pc_f658

dec_label_pc_f658:                                ; preds = %bb1439
  %v2_f658 = icmp ugt i32 %v1_f19c, 125
  store i1 %v2_f658, i1* %cpsr_c.global-to-local, align 1
  %v7_f658 = icmp eq i32 %v1_f19c, 126
  store i1 %v7_f658, i1* %cpsr_z.global-to-local, align 1
  %v2_f65c = xor i1 %v2_f658, true
  %v3_f65c = or i1 %v7_f658, %v2_f65c
  br i1 %v3_f65c, label %dec_label_pc_f184, label %dec_label_pc_f660

dec_label_pc_f660:                                ; preds = %.thread1121, %dec_label_pc_f658, %bb1439
  %v7_f660 = icmp eq i32 %v1_f188, 169
  %.1973 = zext i1 %v7_f660 to i32
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_f66c = icmp ugt i32 %v1_f19c, 253
  store i1 %v2_f66c, i1* %cpsr_c.global-to-local, align 1
  %v7_f66c = icmp eq i32 %v1_f19c, 254
  %storemerge1205 = zext i1 %v7_f66c to i32
  store i32 %storemerge1205, i32* %fp.global-to-local, align 4
  %v2_f678 = and i32 %storemerge1205, %.1973
  %v4_f678 = icmp eq i32 %v2_f678, 0
  store i1 %v4_f678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f678, label %dec_label_pc_f688, label %dec_label_pc_f184

dec_label_pc_f688:                                ; preds = %dec_label_pc_f660
  %v7_f688 = icmp eq i32 %v1_f188, 198
  %.1974 = zext i1 %v7_f688 to i32
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 %v2_f250, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f250, i1* %cpsr_z.global-to-local, align 1
  %v2_f69c = xor i1 %v2_f250, true
  %v3_f69c = or i1 %v7_f250, %v2_f69c
  br i1 %v3_f69c, label %bb1446, label %bb1447

bb1446:                                           ; preds = %dec_label_pc_f688
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1447

bb1447:                                           ; preds = %dec_label_pc_f688, %bb1446
  %v4_f6a0 = phi i32 [ %.1974, %dec_label_pc_f688 ], [ 0, %bb1446 ]
  %v2_f6a0 = xor i1 %v7_f250, true
  %v3_f6a0 = and i1 %v2_f250, %v2_f6a0
  br i1 %v3_f6a0, label %bb1448, label %thread-pre-split131

bb1448:                                           ; preds = %bb1447
  store i32 %v4_f6a0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split131

thread-pre-split131:                              ; preds = %bb1447, %bb1448
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6a4 = icmp eq i32 %v4_f6a0, 0
  store i1 %v2_f6a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6a4, label %dec_label_pc_f6b8, label %dec_label_pc_f6b0

dec_label_pc_f6b0:                                ; preds = %thread-pre-split131
  %v2_f6b0 = icmp ugt i32 %v1_f19c, 18
  store i1 %v2_f6b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6b0 = icmp eq i32 %v1_f19c, 19
  store i1 %v7_f6b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6b4 = xor i1 %v2_f6b0, true
  %v3_f6b4 = or i1 %v7_f6b0, %v2_f6b4
  br i1 %v3_f6b4, label %dec_label_pc_f184, label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f6b0, %thread-pre-split131
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 %v2_f4b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6c0 = xor i1 %v2_f4b4, true
  %v3_f6c0 = or i1 %v7_f4b4, %v2_f6c0
  br i1 %v3_f6c0, label %bb1449, label %bb1450

bb1449:                                           ; preds = %dec_label_pc_f6b8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1450

bb1450:                                           ; preds = %dec_label_pc_f6b8, %bb1449
  %v4_f6c4 = phi i32 [ %.1971, %dec_label_pc_f6b8 ], [ 0, %bb1449 ]
  %v2_f6c4 = xor i1 %v7_f4b4, true
  %v3_f6c4 = and i1 %v2_f4b4, %v2_f6c4
  br i1 %v3_f6c4, label %bb1451, label %thread-pre-split132

bb1451:                                           ; preds = %bb1450
  store i32 %v4_f6c4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split132

thread-pre-split132:                              ; preds = %bb1450, %bb1451
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6c8 = icmp eq i32 %v4_f6c4, 0
  store i1 %v2_f6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6c8, label %dec_label_pc_f6d8, label %dec_label_pc_f6d0

dec_label_pc_f6d0:                                ; preds = %thread-pre-split132
  %v2_f6d0 = icmp ugt i32 %v1_f19c, 225
  store i1 %v2_f6d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6d0 = icmp eq i32 %v1_f19c, 226
  store i1 %v7_f6d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6d4 = xor i1 %v2_f6d0, true
  %v3_f6d4 = or i1 %v7_f6d0, %v2_f6d4
  br i1 %v3_f6d4, label %dec_label_pc_f184, label %dec_label_pc_f6d8

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6d0, %thread-pre-split132
  store i1 %v2_f520, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f520, i1* %cpsr_z.global-to-local, align 1
  %v2_f6dc = xor i1 %v2_f520, true
  %v3_f6dc = or i1 %v7_f520, %v2_f6dc
  br i1 %v3_f6dc, label %bb1452, label %bb1453

bb1452:                                           ; preds = %dec_label_pc_f6d8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1453

bb1453:                                           ; preds = %dec_label_pc_f6d8, %bb1452
  %v0_f6e4778 = phi i32 [ %v4_f6c4, %dec_label_pc_f6d8 ], [ 0, %bb1452 ]
  %v2_f6e0 = xor i1 %v7_f520, true
  %v3_f6e0 = and i1 %v2_f520, %v2_f6e0
  br i1 %v3_f6e0, label %bb1454, label %bb1455

bb1454:                                           ; preds = %bb1453
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1455

bb1455:                                           ; preds = %bb1453, %bb1454
  %v0_f6e4 = phi i32 [ %v0_f6e4778, %bb1453 ], [ 1, %bb1454 ]
  %v2_f6e8 = icmp ugt i32 %v1_f188, 127
  store i1 %v2_f6e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f6e8 = icmp eq i32 %v1_f188, 128
  store i1 %v7_f6e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6e8, label %.thread133, label %.thread134

.thread134:                                       ; preds = %bb1455
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f704

.thread133:                                       ; preds = %bb1455
  %v2_f6f0 = urem i32 %v0_f6e4, 2
  store i32 %v2_f6f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6f4 = icmp eq i32 %v2_f6f0, 0
  store i1 %v2_f6f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6f4, label %dec_label_pc_f704, label %dec_label_pc_f6fc

dec_label_pc_f6fc:                                ; preds = %.thread133
  %v2_f6fc = icmp ugt i32 %v1_f19c, 235
  store i1 %v2_f6fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6fc = icmp eq i32 %v1_f19c, 236
  store i1 %v7_f6fc, i1* %cpsr_z.global-to-local, align 1
  %v2_f700 = xor i1 %v2_f6fc, true
  %v3_f700 = or i1 %v7_f6fc, %v2_f700
  br i1 %v3_f700, label %dec_label_pc_f184, label %dec_label_pc_f704

dec_label_pc_f704:                                ; preds = %.thread134, %dec_label_pc_f6fc, %.thread133
  %v7_f704 = icmp eq i32 %v1_f188, 129
  %.1975 = zext i1 %v7_f704 to i32
  store i32 %.1975, i32* %r3.global-to-local, align 4
  %v2_f710 = icmp ugt i32 %v1_f19c, 20
  store i1 %v2_f710, i1* %cpsr_c.global-to-local, align 1
  %v7_f710 = icmp eq i32 %v1_f19c, 21
  store i1 %v7_f710, i1* %cpsr_z.global-to-local, align 1
  %v2_f714 = xor i1 %v2_f710, true
  %v3_f714 = or i1 %v7_f710, %v2_f714
  br i1 %v3_f714, label %.thread139, label %bb1458

.thread139:                                       ; preds = %dec_label_pc_f704
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f728

bb1458:                                           ; preds = %dec_label_pc_f704
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f718 = icmp eq i1 %v7_f704, false
  store i1 %v2_f718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f718, label %dec_label_pc_f728, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %bb1458
  %v2_f720 = icmp eq i32 %v1_f19c, 255
  store i1 %v2_f720, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f720, label %dec_label_pc_f728, label %dec_label_pc_f184

dec_label_pc_f728:                                ; preds = %.thread139, %dec_label_pc_f720, %bb1458
  %v7_f728 = icmp eq i32 %v1_f188, 130
  %.1976 = zext i1 %v7_f728 to i32
  store i32 %.1976, i32* %r3.global-to-local, align 4
  %v2_f734 = icmp ugt i32 %v1_f19c, 38
  store i1 %v2_f734, i1* %cpsr_c.global-to-local, align 1
  %v7_f734 = icmp eq i32 %v1_f19c, 39
  store i1 %v7_f734, i1* %cpsr_z.global-to-local, align 1
  %v2_f738 = xor i1 %v2_f734, true
  %v3_f738 = or i1 %v7_f734, %v2_f738
  br i1 %v3_f738, label %.thread144, label %bb1461

.thread144:                                       ; preds = %dec_label_pc_f728
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f74c

bb1461:                                           ; preds = %dec_label_pc_f728
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f73c = icmp eq i1 %v7_f728, false
  store i1 %v2_f73c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f73c, label %dec_label_pc_f74c, label %dec_label_pc_f744

dec_label_pc_f744:                                ; preds = %bb1461
  %v2_f744 = icmp ugt i32 %v1_f19c, 166
  store i1 %v2_f744, i1* %cpsr_c.global-to-local, align 1
  %v7_f744 = icmp eq i32 %v1_f19c, 167
  store i1 %v7_f744, i1* %cpsr_z.global-to-local, align 1
  %v2_f748 = xor i1 %v2_f744, true
  %v3_f748 = or i1 %v7_f744, %v2_f748
  br i1 %v3_f748, label %dec_label_pc_f184, label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %.thread144, %dec_label_pc_f744, %bb1461
  %v2_f74c = icmp ugt i32 %v1_f19c, 1
  store i1 %v2_f74c, i1* %cpsr_c.global-to-local, align 1
  %v7_f74c = icmp eq i32 %v1_f19c, 2
  store i1 %v7_f74c, i1* %cpsr_z.global-to-local, align 1
  %v2_f750 = xor i1 %v2_f74c, true
  %v3_f750 = or i1 %v7_f74c, %v2_f750
  br i1 %v3_f750, label %bb1462, label %bb1463

bb1462:                                           ; preds = %dec_label_pc_f74c
  br label %bb1463

bb1463:                                           ; preds = %dec_label_pc_f74c, %bb1462
  %v1_f760783 = phi i32 [ %.1974, %dec_label_pc_f74c ], [ 0, %bb1462 ]
  %v2_f754 = xor i1 %v7_f74c, true
  %v3_f754 = and i1 %v2_f74c, %v2_f754
  br i1 %v3_f754, label %bb1464, label %bb1465

bb1464:                                           ; preds = %bb1463
  br label %bb1465

bb1465:                                           ; preds = %bb1463, %bb1464
  %v1_f77c = phi i32 [ %v1_f760783, %bb1463 ], [ 1, %bb1464 ]
  %v2_f758 = icmp ugt i32 %v1_f188, 130
  store i1 %v2_f758, i1* %cpsr_c.global-to-local, align 1
  %v7_f758 = icmp eq i32 %v1_f188, 131
  store i1 %v7_f758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f758, label %.thread147, label %.thread148

.thread148:                                       ; preds = %bb1465
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f774

.thread147:                                       ; preds = %bb1465
  %v2_f760 = urem i32 %v1_f77c, 2
  store i32 %v2_f760, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f764 = icmp eq i32 %v2_f760, 0
  store i1 %v2_f764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f764, label %dec_label_pc_f774, label %dec_label_pc_f76c

dec_label_pc_f76c:                                ; preds = %.thread147
  %v2_f76c = icmp ugt i32 %v1_f19c, 249
  store i1 %v2_f76c, i1* %cpsr_c.global-to-local, align 1
  %v7_f76c = icmp eq i32 %v1_f19c, 250
  store i1 %v7_f76c, i1* %cpsr_z.global-to-local, align 1
  %v2_f770 = xor i1 %v2_f76c, true
  %v3_f770 = or i1 %v7_f76c, %v2_f770
  br i1 %v3_f770, label %dec_label_pc_f184, label %dec_label_pc_f774

dec_label_pc_f774:                                ; preds = %.thread148, %dec_label_pc_f76c, %.thread147
  %v2_f774 = icmp ugt i32 %v1_f188, 131
  store i1 %v2_f774, i1* %cpsr_c.global-to-local, align 1
  %v7_f774 = icmp eq i32 %v1_f188, 132
  store i1 %v7_f774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f774, label %.thread151, label %.thread152

.thread152:                                       ; preds = %dec_label_pc_f774
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f790

.thread151:                                       ; preds = %dec_label_pc_f774
  %v2_f77c = urem i32 %v1_f77c, 2
  store i32 %v2_f77c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f780 = icmp eq i32 %v2_f77c, 0
  store i1 %v2_f780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f780, label %dec_label_pc_f790, label %dec_label_pc_f788

dec_label_pc_f788:                                ; preds = %.thread151
  %v2_f788 = icmp ugt i32 %v1_f19c, 249
  store i1 %v2_f788, i1* %cpsr_c.global-to-local, align 1
  %v7_f788 = icmp eq i32 %v1_f19c, 250
  store i1 %v7_f788, i1* %cpsr_z.global-to-local, align 1
  %v2_f78c = xor i1 %v2_f788, true
  %v3_f78c = or i1 %v7_f788, %v2_f78c
  br i1 %v3_f78c, label %dec_label_pc_f184, label %dec_label_pc_f790

dec_label_pc_f790:                                ; preds = %.thread152, %dec_label_pc_f788, %.thread151
  %v2_f790 = icmp ugt i32 %v1_f19c, 3
  store i1 %v2_f790, i1* %cpsr_c.global-to-local, align 1
  %v7_f790 = icmp eq i32 %v1_f19c, 4
  store i1 %v7_f790, i1* %cpsr_z.global-to-local, align 1
  %v2_f794 = xor i1 %v2_f790, true
  %v3_f794 = or i1 %v7_f790, %v2_f794
  br i1 %v3_f794, label %bb1466, label %bb1467

bb1466:                                           ; preds = %dec_label_pc_f790
  br label %bb1467

bb1467:                                           ; preds = %dec_label_pc_f790, %bb1466
  %v1_f7a4785 = phi i32 [ %v1_f77c, %dec_label_pc_f790 ], [ 0, %bb1466 ]
  %v2_f798 = xor i1 %v7_f790, true
  %v3_f798 = and i1 %v2_f790, %v2_f798
  br i1 %v3_f798, label %bb1468, label %bb1469

bb1468:                                           ; preds = %bb1467
  br label %bb1469

bb1469:                                           ; preds = %bb1467, %bb1468
  %v1_f9bc = phi i32 [ %v1_f7a4785, %bb1467 ], [ 1, %bb1468 ]
  %v2_f79c = icmp ugt i32 %v1_f188, 133
  store i1 %v2_f79c, i1* %cpsr_c.global-to-local, align 1
  %v7_f79c = icmp eq i32 %v1_f188, 134
  store i1 %v7_f79c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f79c, label %.thread155, label %.thread156

.thread156:                                       ; preds = %bb1469
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7b8

.thread155:                                       ; preds = %bb1469
  %v2_f7a4 = urem i32 %v1_f9bc, 2
  store i32 %v2_f7a4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7a8 = icmp eq i32 %v2_f7a4, 0
  store i1 %v2_f7a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7a8, label %dec_label_pc_f7b8, label %dec_label_pc_f7b0

dec_label_pc_f7b0:                                ; preds = %.thread155
  %v2_f7b0 = icmp ugt i32 %v1_f19c, 233
  store i1 %v2_f7b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7b0 = icmp eq i32 %v1_f19c, 234
  store i1 %v7_f7b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f7b4 = xor i1 %v2_f7b0, true
  %v3_f7b4 = or i1 %v7_f7b0, %v2_f7b4
  br i1 %v3_f7b4, label %dec_label_pc_f184, label %dec_label_pc_f7b8

dec_label_pc_f7b8:                                ; preds = %.thread156, %dec_label_pc_f7b0, %.thread155
  %v7_f7b8 = icmp eq i32 %v1_f188, 136
  %.1977 = zext i1 %v7_f7b8 to i32
  store i32 %.1977, i32* %r3.global-to-local, align 4
  %v2_f7c4 = icmp ugt i32 %v1_f19c, 175
  store i1 %v2_f7c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7c4 = icmp eq i32 %v1_f19c, 176
  store i1 %v7_f7c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f7c8 = xor i1 %v2_f7c4, true
  %v3_f7c8 = or i1 %v7_f7c4, %v2_f7c8
  br i1 %v3_f7c8, label %.thread161, label %bb1472

.thread161:                                       ; preds = %dec_label_pc_f7b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7dc

bb1472:                                           ; preds = %dec_label_pc_f7b8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7cc = icmp eq i1 %v7_f7b8, false
  store i1 %v2_f7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7cc, label %dec_label_pc_f7dc, label %dec_label_pc_f7d4

dec_label_pc_f7d4:                                ; preds = %bb1472
  %v2_f7d4 = icmp ugt i32 %v1_f19c, 221
  store i1 %v2_f7d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d4 = icmp eq i32 %v1_f19c, 222
  store i1 %v7_f7d4, i1* %cpsr_z.global-to-local, align 1
  %v2_f7d8 = xor i1 %v2_f7d4, true
  %v3_f7d8 = or i1 %v7_f7d4, %v2_f7d8
  br i1 %v3_f7d8, label %dec_label_pc_f184, label %dec_label_pc_f7dc

dec_label_pc_f7dc:                                ; preds = %.thread161, %dec_label_pc_f7d4, %bb1472
  %v7_f7dc = icmp eq i32 %v1_f188, 138
  %.1978 = zext i1 %v7_f7dc to i32
  store i32 %.1978, i32* %fp.global-to-local, align 4
  store i32 %.1978, i32* %r3.global-to-local, align 4
  %v2_f7ec = icmp ugt i32 %v1_f19c, 11
  store i1 %v2_f7ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f7ec = icmp eq i32 %v1_f19c, 12
  store i1 %v7_f7ec, i1* %cpsr_z.global-to-local, align 1
  %v2_f7f0 = xor i1 %v2_f7ec, true
  %v3_f7f0 = or i1 %v7_f7ec, %v2_f7f0
  br i1 %v3_f7f0, label %bb1475, label %bb1476

bb1475:                                           ; preds = %dec_label_pc_f7dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1476

bb1476:                                           ; preds = %dec_label_pc_f7dc, %bb1475
  %v4_f7f4 = phi i32 [ %.1978, %dec_label_pc_f7dc ], [ 0, %bb1475 ]
  %v2_f7f4 = xor i1 %v7_f7ec, true
  %v3_f7f4 = and i1 %v2_f7ec, %v2_f7f4
  br i1 %v3_f7f4, label %bb1477, label %thread-pre-split165

bb1477:                                           ; preds = %bb1476
  store i32 %v4_f7f4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split165

thread-pre-split165:                              ; preds = %bb1476, %bb1477
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7f8 = icmp eq i32 %v4_f7f4, 0
  store i1 %v2_f7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7f8, label %dec_label_pc_f80c, label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %thread-pre-split165
  %v2_f804 = icmp ugt i32 %v1_f19c, 192
  store i1 %v2_f804, i1* %cpsr_c.global-to-local, align 1
  %v7_f804 = icmp eq i32 %v1_f19c, 193
  store i1 %v7_f804, i1* %cpsr_z.global-to-local, align 1
  %v2_f808 = xor i1 %v2_f804, true
  %v3_f808 = or i1 %v7_f804, %v2_f808
  br i1 %v3_f808, label %dec_label_pc_f184, label %dec_label_pc_f80c

dec_label_pc_f80c:                                ; preds = %dec_label_pc_f804, %thread-pre-split165
  %v7_f80c = icmp eq i32 %v1_f188, 139
  %.1979 = zext i1 %v7_f80c to i32
  store i32 %.1979, i32* %r3.global-to-local, align 4
  store i1 %v2_f548, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f548, i1* %cpsr_z.global-to-local, align 1
  %v2_f820 = xor i1 %v2_f548, true
  %v3_f820 = or i1 %v7_f548, %v2_f820
  br i1 %v3_f820, label %bb1480, label %bb1481

bb1480:                                           ; preds = %dec_label_pc_f80c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1481

bb1481:                                           ; preds = %dec_label_pc_f80c, %bb1480
  %v4_f824 = phi i32 [ %.1979, %dec_label_pc_f80c ], [ 0, %bb1480 ]
  %v2_f824 = xor i1 %v7_f548, true
  %v3_f824 = and i1 %v2_f548, %v2_f824
  br i1 %v3_f824, label %bb1482, label %thread-pre-split167

bb1482:                                           ; preds = %bb1481
  store i32 %v4_f824, i32* %r3.global-to-local, align 4
  br label %thread-pre-split167

thread-pre-split167:                              ; preds = %bb1481, %bb1482
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f828 = icmp eq i32 %v4_f824, 0
  store i1 %v2_f828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f828, label %dec_label_pc_f838, label %dec_label_pc_f830

dec_label_pc_f830:                                ; preds = %thread-pre-split167
  %v2_f830 = icmp ugt i32 %v1_f19c, 141
  store i1 %v2_f830, i1* %cpsr_c.global-to-local, align 1
  %v7_f830 = icmp eq i32 %v1_f19c, 142
  store i1 %v7_f830, i1* %cpsr_z.global-to-local, align 1
  %v2_f834 = xor i1 %v2_f830, true
  %v3_f834 = or i1 %v7_f830, %v2_f834
  br i1 %v3_f834, label %dec_label_pc_f184, label %dec_label_pc_f838

dec_label_pc_f838:                                ; preds = %dec_label_pc_f830, %thread-pre-split167
  store i32 %v1_f19c, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f838 = icmp eq i32 %v1_f19c, 0
  store i1 %v2_f838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f838, label %bb1484, label %bb1483

bb1483:                                           ; preds = %dec_label_pc_f838
  store i32 1, i32* %fp.global-to-local, align 4
  br label %bb1484

bb1484:                                           ; preds = %dec_label_pc_f838, %bb1483
  %v0_107fc = phi i32 [ 0, %dec_label_pc_f838 ], [ 1, %bb1483 ]
  store i32 %v0_107fc, i32* %r3.global-to-local, align 4
  %v2_f844 = icmp ugt i32 %v1_f188, 139
  store i1 %v2_f844, i1* %cpsr_c.global-to-local, align 1
  %v7_f844 = icmp eq i32 %v1_f188, 140
  store i1 %v7_f844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f844, label %bb1485, label %.thread1123

.thread1123:                                      ; preds = %bb1484
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f864

bb1485:                                           ; preds = %bb1484
  store i32 %v0_107fc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f850 = icmp eq i32 %v0_107fc, 0
  store i1 %v2_f850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f850, label %dec_label_pc_f864, label %dec_label_pc_f85c

dec_label_pc_f85c:                                ; preds = %bb1485
  store i1 %v2_f3b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f3b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f860 = xor i1 %v2_f3b4, true
  %v3_f860 = or i1 %v7_f3b4, %v2_f860
  br i1 %v3_f860, label %dec_label_pc_f184, label %dec_label_pc_f864

dec_label_pc_f864:                                ; preds = %.thread1123, %dec_label_pc_f85c, %bb1485
  %v0_f8501125 = phi i32 [ 0, %.thread1123 ], [ 1, %dec_label_pc_f85c ], [ 0, %bb1485 ]
  store i1 %v2_f4a4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f868 = xor i1 %v2_f4a4, true
  %v3_f868 = or i1 %v7_f4a4, %v2_f868
  br i1 %v3_f868, label %bb1486, label %bb1487

bb1486:                                           ; preds = %dec_label_pc_f864
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1487

bb1487:                                           ; preds = %dec_label_pc_f864, %bb1486
  %v0_f870794 = phi i32 [ %v0_f8501125, %dec_label_pc_f864 ], [ 0, %bb1486 ]
  %v2_f86c = xor i1 %v7_f4a4, true
  %v3_f86c = and i1 %v2_f4a4, %v2_f86c
  br i1 %v3_f86c, label %bb1488, label %bb1489

bb1488:                                           ; preds = %bb1487
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1489

bb1489:                                           ; preds = %bb1487, %bb1488
  %v0_f870 = phi i32 [ %v0_f870794, %bb1487 ], [ 1, %bb1488 ]
  %v2_f874 = icmp ugt i32 %v1_f188, 142
  store i1 %v2_f874, i1* %cpsr_c.global-to-local, align 1
  %v7_f874 = icmp eq i32 %v1_f188, 143
  store i1 %v7_f874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f874, label %.thread169, label %.thread170

.thread170:                                       ; preds = %bb1489
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f890

.thread169:                                       ; preds = %bb1489
  %v2_f87c = urem i32 %v0_f870, 2
  store i32 %v2_f87c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f880 = icmp eq i32 %v2_f87c, 0
  store i1 %v2_f880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f880, label %dec_label_pc_f890, label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %.thread169
  %v2_f888 = icmp ugt i32 %v1_f19c, 231
  store i1 %v2_f888, i1* %cpsr_c.global-to-local, align 1
  %v7_f888 = icmp eq i32 %v1_f19c, 232
  store i1 %v7_f888, i1* %cpsr_z.global-to-local, align 1
  %v2_f88c = xor i1 %v2_f888, true
  %v3_f88c = or i1 %v7_f888, %v2_f88c
  br i1 %v3_f88c, label %dec_label_pc_f184, label %dec_label_pc_f890

dec_label_pc_f890:                                ; preds = %.thread170, %dec_label_pc_f888, %.thread169
  %v7_f890 = icmp eq i32 %v1_f188, 144
  %.1980 = zext i1 %v7_f890 to i32
  store i32 %.1980, i32* %r3.global-to-local, align 4
  store i1 %v2_f270, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f270, i1* %cpsr_z.global-to-local, align 1
  %v2_f8a0 = xor i1 %v2_f270, true
  %v3_f8a0 = or i1 %v7_f270, %v2_f8a0
  br i1 %v3_f8a0, label %.thread175, label %bb1492

.thread175:                                       ; preds = %dec_label_pc_f890
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8b4

bb1492:                                           ; preds = %dec_label_pc_f890
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8a4 = icmp eq i1 %v7_f890, false
  store i1 %v2_f8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8a4, label %dec_label_pc_f8b4, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %bb1492
  %v2_f8ac = icmp ugt i32 %v1_f19c, 251
  store i1 %v2_f8ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f8ac = icmp eq i32 %v1_f19c, 252
  store i1 %v7_f8ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b0 = xor i1 %v2_f8ac, true
  %v3_f8b0 = or i1 %v7_f8ac, %v2_f8b0
  br i1 %v3_f8b0, label %dec_label_pc_f184, label %dec_label_pc_f8b4

dec_label_pc_f8b4:                                ; preds = %.thread175, %dec_label_pc_f8ac, %bb1492
  %v0_f8c0.pr798 = phi i32 [ 0, %.thread175 ], [ 1, %dec_label_pc_f8ac ], [ 0, %bb1492 ]
  %v2_f8b4 = icmp ugt i32 %v1_f19c, 163
  store i1 %v2_f8b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8b4 = icmp eq i32 %v1_f19c, 164
  store i1 %v7_f8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b8 = xor i1 %v2_f8b4, true
  %v3_f8b8 = or i1 %v7_f8b4, %v2_f8b8
  br i1 %v3_f8b8, label %bb1493, label %bb1494

bb1493:                                           ; preds = %dec_label_pc_f8b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1494

bb1494:                                           ; preds = %dec_label_pc_f8b4, %bb1493
  %v0_f8c0.pr = phi i32 [ %v0_f8c0.pr798, %dec_label_pc_f8b4 ], [ 0, %bb1493 ]
  %v2_f8bc = xor i1 %v7_f8b4, true
  %v3_f8bc = and i1 %v2_f8b4, %v2_f8bc
  br i1 %v3_f8bc, label %bb1495, label %thread-pre-split178

bb1495:                                           ; preds = %bb1494
  store i32 %.1946, i32* %r3.global-to-local, align 4
  br label %thread-pre-split178

thread-pre-split178:                              ; preds = %bb1494, %bb1495
  %v0_f8c0 = phi i32 [ %.1946, %bb1495 ], [ %v0_f8c0.pr, %bb1494 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8c0 = icmp eq i32 %v0_f8c0, 0
  store i1 %v2_f8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8c0, label %dec_label_pc_f8d0, label %dec_label_pc_f8c8

dec_label_pc_f8c8:                                ; preds = %thread-pre-split178
  %v2_f8c8 = icmp ugt i32 %v1_f19c, 164
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8c8 = icmp eq i32 %v1_f19c, 165
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8cc = xor i1 %v2_f8c8, true
  %v3_f8cc = or i1 %v7_f8c8, %v2_f8cc
  br i1 %v3_f8cc, label %dec_label_pc_f184, label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8c8, %thread-pre-split178
  store i32 %v0_f6e4, i32* %fp.global-to-local, align 4
  %v2_f8d4 = and i32 %v0_f6e4, %.1950
  %v4_f8d4 = icmp eq i32 %v2_f8d4, 0
  store i1 %v4_f8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8d4, label %dec_label_pc_f8e4, label %dec_label_pc_f8dc

dec_label_pc_f8dc:                                ; preds = %dec_label_pc_f8d0
  %v2_f8dc = icmp ugt i32 %v1_f19c, 41
  store i1 %v2_f8dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f8dc = icmp eq i32 %v1_f19c, 42
  store i1 %v7_f8dc, i1* %cpsr_z.global-to-local, align 1
  %v2_f8e0 = xor i1 %v2_f8dc, true
  %v3_f8e0 = or i1 %v7_f8dc, %v2_f8e0
  br i1 %v3_f8e0, label %dec_label_pc_f184, label %dec_label_pc_f8e4

dec_label_pc_f8e4:                                ; preds = %dec_label_pc_f8dc, %dec_label_pc_f8d0
  store i1 %v2_f4f0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8e8 = xor i1 %v2_f4f0, true
  %v3_f8e8 = or i1 %v7_f4f0, %v2_f8e8
  br i1 %v3_f8e8, label %bb1496, label %bb1497

bb1496:                                           ; preds = %dec_label_pc_f8e4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1497

bb1497:                                           ; preds = %dec_label_pc_f8e4, %bb1496
  %v1_f8f0801 = phi i32 [ %v0_f8c0, %dec_label_pc_f8e4 ], [ 0, %bb1496 ]
  %v2_f8ec = xor i1 %v7_f4f0, true
  %v3_f8ec = and i1 %v2_f4f0, %v2_f8ec
  br i1 %v3_f8ec, label %bb1498, label %bb1499

bb1498:                                           ; preds = %bb1497
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1499

bb1499:                                           ; preds = %bb1497, %bb1498
  %v1_f8f0 = phi i32 [ %v1_f8f0801, %bb1497 ], [ 1, %bb1498 ]
  %v2_f8f0 = and i32 %v1_f8f0, %.1950
  %v4_f8f0 = icmp eq i32 %v2_f8f0, 0
  store i1 %v4_f8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f8f0, label %dec_label_pc_f904, label %dec_label_pc_f8fc

dec_label_pc_f8fc:                                ; preds = %bb1499
  %v2_f8fc = icmp ugt i32 %v1_f19c, 103
  store i1 %v2_f8fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f8fc = icmp eq i32 %v1_f19c, 104
  store i1 %v7_f8fc, i1* %cpsr_z.global-to-local, align 1
  %v2_f900 = xor i1 %v2_f8fc, true
  %v3_f900 = or i1 %v7_f8fc, %v2_f900
  br i1 %v3_f900, label %dec_label_pc_f184, label %dec_label_pc_f904

dec_label_pc_f904:                                ; preds = %dec_label_pc_f8fc, %bb1499
  %v2_f904 = icmp ugt i32 %v1_f19c, 166
  store i1 %v2_f904, i1* %cpsr_c.global-to-local, align 1
  %v7_f904 = icmp eq i32 %v1_f19c, 167
  store i1 %v7_f904, i1* %cpsr_z.global-to-local, align 1
  %v2_f908 = xor i1 %v2_f904, true
  %v3_f908 = or i1 %v7_f904, %v2_f908
  br i1 %v3_f908, label %bb1500, label %bb1501

bb1500:                                           ; preds = %dec_label_pc_f904
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1501

bb1501:                                           ; preds = %dec_label_pc_f904, %bb1500
  %v0_f910.pr = phi i32 [ %v1_f8f0, %dec_label_pc_f904 ], [ 0, %bb1500 ]
  %v2_f90c = xor i1 %v7_f904, true
  %v3_f90c = and i1 %v2_f904, %v2_f90c
  br i1 %v3_f90c, label %bb1502, label %thread-pre-split179

bb1502:                                           ; preds = %bb1501
  store i32 %.1950, i32* %r3.global-to-local, align 4
  br label %thread-pre-split179

thread-pre-split179:                              ; preds = %bb1501, %bb1502
  %v0_f910 = phi i32 [ %.1950, %bb1502 ], [ %v0_f910.pr, %bb1501 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f910 = icmp eq i32 %v0_f910, 0
  store i1 %v2_f910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f910, label %dec_label_pc_f920, label %dec_label_pc_f918

dec_label_pc_f918:                                ; preds = %thread-pre-split179
  %v2_f918 = icmp ugt i32 %v1_f19c, 168
  store i1 %v2_f918, i1* %cpsr_c.global-to-local, align 1
  %v7_f918 = icmp eq i32 %v1_f19c, 169
  store i1 %v7_f918, i1* %cpsr_z.global-to-local, align 1
  %v2_f91c = xor i1 %v2_f918, true
  %v3_f91c = or i1 %v7_f918, %v2_f91c
  br i1 %v3_f91c, label %dec_label_pc_f184, label %dec_label_pc_f920

dec_label_pc_f920:                                ; preds = %dec_label_pc_f918, %thread-pre-split179
  %v2_f920 = icmp ugt i32 %v1_f19c, 196
  store i1 %v2_f920, i1* %cpsr_c.global-to-local, align 1
  %v7_f920 = icmp eq i32 %v1_f19c, 197
  store i1 %v7_f920, i1* %cpsr_z.global-to-local, align 1
  %v2_f924 = xor i1 %v2_f920, true
  %v3_f924 = or i1 %v7_f920, %v2_f924
  br i1 %v3_f924, label %bb1503, label %bb1504

bb1503:                                           ; preds = %dec_label_pc_f920
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1504

bb1504:                                           ; preds = %dec_label_pc_f920, %bb1503
  %v0_f92c.pr = phi i32 [ %v0_f910, %dec_label_pc_f920 ], [ 0, %bb1503 ]
  %v2_f928 = xor i1 %v7_f920, true
  %v3_f928 = and i1 %v2_f920, %v2_f928
  br i1 %v3_f928, label %bb1505, label %thread-pre-split180

bb1505:                                           ; preds = %bb1504
  store i32 %.1950, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1504, %bb1505
  %v0_f92c = phi i32 [ %.1950, %bb1505 ], [ %v0_f92c.pr, %bb1504 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f92c = icmp eq i32 %v0_f92c, 0
  store i1 %v2_f92c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f92c, label %dec_label_pc_f93c, label %dec_label_pc_f934

dec_label_pc_f934:                                ; preds = %thread-pre-split180
  %v2_f934 = icmp ugt i32 %v1_f19c, 198
  store i1 %v2_f934, i1* %cpsr_c.global-to-local, align 1
  %v7_f934 = icmp eq i32 %v1_f19c, 199
  store i1 %v7_f934, i1* %cpsr_z.global-to-local, align 1
  %v2_f938 = xor i1 %v2_f934, true
  %v3_f938 = or i1 %v7_f934, %v2_f938
  br i1 %v3_f938, label %dec_label_pc_f184, label %dec_label_pc_f93c

dec_label_pc_f93c:                                ; preds = %dec_label_pc_f934, %thread-pre-split180
  %v2_f93c = icmp ugt i32 %v1_f19c, 236
  store i1 %v2_f93c, i1* %cpsr_c.global-to-local, align 1
  %v7_f93c = icmp eq i32 %v1_f19c, 237
  store i1 %v7_f93c, i1* %cpsr_z.global-to-local, align 1
  %v2_f940 = xor i1 %v2_f93c, true
  %v3_f940 = or i1 %v7_f93c, %v2_f940
  br i1 %v3_f940, label %bb1506, label %bb1507

bb1506:                                           ; preds = %dec_label_pc_f93c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1507

bb1507:                                           ; preds = %dec_label_pc_f93c, %bb1506
  %v0_f948.pr = phi i32 [ %v0_f92c, %dec_label_pc_f93c ], [ 0, %bb1506 ]
  %v2_f944 = xor i1 %v7_f93c, true
  %v3_f944 = and i1 %v2_f93c, %v2_f944
  br i1 %v3_f944, label %bb1508, label %thread-pre-split181

bb1508:                                           ; preds = %bb1507
  store i32 %.1950, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1507, %bb1508
  %v0_f948 = phi i32 [ %.1950, %bb1508 ], [ %v0_f948.pr, %bb1507 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f948 = icmp eq i32 %v0_f948, 0
  store i1 %v2_f948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f948, label %dec_label_pc_f958, label %dec_label_pc_f950

dec_label_pc_f950:                                ; preds = %thread-pre-split181
  %v2_f950 = icmp eq i32 %v1_f19c, 255
  store i1 %v2_f950, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f950, label %dec_label_pc_f958, label %dec_label_pc_f184

dec_label_pc_f958:                                ; preds = %dec_label_pc_f950, %thread-pre-split181
  %v2_f958 = icmp ugt i32 %v1_f19c, 111
  store i1 %v2_f958, i1* %cpsr_c.global-to-local, align 1
  %v7_f958 = icmp eq i32 %v1_f19c, 112
  store i1 %v7_f958, i1* %cpsr_z.global-to-local, align 1
  %v2_f95c = xor i1 %v2_f958, true
  %v3_f95c = or i1 %v7_f958, %v2_f95c
  br i1 %v3_f95c, label %bb1509, label %bb1510

bb1509:                                           ; preds = %dec_label_pc_f958
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1510

bb1510:                                           ; preds = %dec_label_pc_f958, %bb1509
  %v0_f964.pr = phi i32 [ %v0_f948, %dec_label_pc_f958 ], [ 0, %bb1509 ]
  %v2_f960 = xor i1 %v7_f958, true
  %v3_f960 = and i1 %v2_f958, %v2_f960
  br i1 %v3_f960, label %bb1511, label %thread-pre-split182

bb1511:                                           ; preds = %bb1510
  store i32 %.1952, i32* %r3.global-to-local, align 4
  br label %thread-pre-split182

thread-pre-split182:                              ; preds = %bb1510, %bb1511
  %v0_f964 = phi i32 [ %.1952, %bb1511 ], [ %v0_f964.pr, %bb1510 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f964 = icmp eq i32 %v0_f964, 0
  store i1 %v2_f964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f964, label %dec_label_pc_f974, label %dec_label_pc_f96c

dec_label_pc_f96c:                                ; preds = %thread-pre-split182
  store i1 %v2_f2b0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f970 = xor i1 %v2_f2b0, true
  %v3_f970 = or i1 %v7_f2b0, %v2_f970
  br i1 %v3_f970, label %dec_label_pc_f184, label %dec_label_pc_f974

dec_label_pc_f974:                                ; preds = %dec_label_pc_f96c, %thread-pre-split182
  store i32 %.1955, i32* %r3.global-to-local, align 4
  %v2_f978 = icmp ugt i32 %v1_f19c, 149
  store i1 %v2_f978, i1* %cpsr_c.global-to-local, align 1
  %v7_f978 = icmp eq i32 %v1_f19c, 150
  store i1 %v7_f978, i1* %cpsr_z.global-to-local, align 1
  %v2_f97c = xor i1 %v2_f978, true
  %v3_f97c = or i1 %v7_f978, %v2_f97c
  br i1 %v3_f97c, label %bb1512, label %bb1513

bb1512:                                           ; preds = %dec_label_pc_f974
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1513

bb1513:                                           ; preds = %dec_label_pc_f974, %bb1512
  %v4_f980 = phi i32 [ %.1955, %dec_label_pc_f974 ], [ 0, %bb1512 ]
  %v2_f980 = xor i1 %v7_f978, true
  %v3_f980 = and i1 %v2_f978, %v2_f980
  br i1 %v3_f980, label %bb1514, label %thread-pre-split183

bb1514:                                           ; preds = %bb1513
  store i32 %v4_f980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split183

thread-pre-split183:                              ; preds = %bb1513, %bb1514
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f984 = icmp eq i32 %v4_f980, 0
  store i1 %v2_f984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f984, label %dec_label_pc_f994, label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %thread-pre-split183
  store i1 %v2_f284, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f284, i1* %cpsr_z.global-to-local, align 1
  %v2_f990 = xor i1 %v2_f284, true
  %v3_f990 = or i1 %v7_f284, %v2_f990
  br i1 %v3_f990, label %dec_label_pc_f184, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %dec_label_pc_f98c, %thread-pre-split183
  %v7_f994 = icmp eq i32 %v1_f188, 153
  %.1981 = zext i1 %v7_f994 to i32
  store i32 %.1981, i32* %r3.global-to-local, align 4
  %v2_f9a0 = icmp ugt i32 %v1_f19c, 19
  store i1 %v2_f9a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a0 = icmp eq i32 %v1_f19c, 20
  store i1 %v7_f9a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9a4 = xor i1 %v2_f9a0, true
  %v3_f9a4 = or i1 %v7_f9a0, %v2_f9a4
  br i1 %v3_f9a4, label %.thread186, label %bb1517

.thread186:                                       ; preds = %dec_label_pc_f994
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9b8

bb1517:                                           ; preds = %dec_label_pc_f994
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9a8 = icmp eq i1 %v7_f994, false
  store i1 %v2_f9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9a8, label %dec_label_pc_f9b8, label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %bb1517
  %v2_f9b0 = icmp ugt i32 %v1_f19c, 30
  store i1 %v2_f9b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b0 = icmp eq i32 %v1_f19c, 31
  store i1 %v7_f9b0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9b4 = xor i1 %v2_f9b0, true
  %v3_f9b4 = or i1 %v7_f9b0, %v2_f9b4
  br i1 %v3_f9b4, label %dec_label_pc_f184, label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %.thread186, %dec_label_pc_f9b0, %bb1517
  store i32 %.1959, i32* %r4.global-to-local, align 4
  %v2_f9bc = and i32 %v1_f9bc, %.1959
  %v4_f9bc = icmp eq i32 %v2_f9bc, 0
  store i1 %v4_f9bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f9bc, label %dec_label_pc_f9cc, label %dec_label_pc_f9c4

dec_label_pc_f9c4:                                ; preds = %dec_label_pc_f9b8
  %v2_f9c4 = icmp ugt i32 %v1_f19c, 8
  store i1 %v2_f9c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c4 = icmp eq i32 %v1_f19c, 9
  store i1 %v7_f9c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9c8 = xor i1 %v2_f9c4, true
  %v3_f9c8 = or i1 %v7_f9c4, %v2_f9c8
  br i1 %v3_f9c8, label %dec_label_pc_f184, label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_f9c4, %dec_label_pc_f9b8
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f9d0 = icmp ugt i32 %v1_f19c, 72
  store i1 %v2_f9d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d0 = icmp eq i32 %v1_f19c, 73
  store i1 %v7_f9d0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9d4 = xor i1 %v2_f9d0, true
  %v3_f9d4 = or i1 %v7_f9d0, %v2_f9d4
  br i1 %v3_f9d4, label %bb1518, label %bb1519

bb1518:                                           ; preds = %dec_label_pc_f9cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1519

bb1519:                                           ; preds = %dec_label_pc_f9cc, %bb1518
  %v4_f9d8 = phi i32 [ %.1959, %dec_label_pc_f9cc ], [ 0, %bb1518 ]
  %v2_f9d8 = xor i1 %v7_f9d0, true
  %v3_f9d8 = and i1 %v2_f9d0, %v2_f9d8
  br i1 %v3_f9d8, label %bb1520, label %thread-pre-split189

bb1520:                                           ; preds = %bb1519
  store i32 %v4_f9d8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split189

thread-pre-split189:                              ; preds = %bb1519, %bb1520
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9dc = icmp eq i32 %v4_f9d8, 0
  store i1 %v2_f9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9dc, label %dec_label_pc_f9ec, label %dec_label_pc_f9e4

dec_label_pc_f9e4:                                ; preds = %thread-pre-split189
  %v2_f9e4 = icmp ugt i32 %v1_f19c, 87
  store i1 %v2_f9e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9e4 = icmp eq i32 %v1_f19c, 88
  store i1 %v7_f9e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9e8 = xor i1 %v2_f9e4, true
  %v3_f9e8 = or i1 %v7_f9e4, %v2_f9e8
  br i1 %v3_f9e8, label %dec_label_pc_f184, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f9e4, %thread-pre-split189
  store i32 %.1959, i32* %r3.global-to-local, align 4
  %v2_f9f0 = icmp ugt i32 %v1_f19c, 211
  store i1 %v2_f9f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9f0 = icmp eq i32 %v1_f19c, 212
  store i1 %v7_f9f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9f4 = xor i1 %v2_f9f0, true
  %v3_f9f4 = or i1 %v7_f9f0, %v2_f9f4
  br i1 %v3_f9f4, label %bb1521, label %bb1522

bb1521:                                           ; preds = %dec_label_pc_f9ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1522

bb1522:                                           ; preds = %dec_label_pc_f9ec, %bb1521
  %v4_f9f8 = phi i32 [ %.1959, %dec_label_pc_f9ec ], [ 0, %bb1521 ]
  %v2_f9f8 = xor i1 %v7_f9f0, true
  %v3_f9f8 = and i1 %v2_f9f0, %v2_f9f8
  br i1 %v3_f9f8, label %bb1523, label %thread-pre-split190

bb1523:                                           ; preds = %bb1522
  store i32 %v4_f9f8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split190

thread-pre-split190:                              ; preds = %bb1522, %bb1523
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9fc = icmp eq i32 %v4_f9f8, 0
  store i1 %v2_f9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9fc, label %dec_label_pc_fa0c, label %dec_label_pc_fa04

dec_label_pc_fa04:                                ; preds = %thread-pre-split190
  %v2_fa04 = icmp ugt i32 %v1_f19c, 220
  store i1 %v2_fa04, i1* %cpsr_c.global-to-local, align 1
  %v7_fa04 = icmp eq i32 %v1_f19c, 221
  store i1 %v7_fa04, i1* %cpsr_z.global-to-local, align 1
  %v2_fa08 = xor i1 %v2_fa04, true
  %v3_fa08 = or i1 %v7_fa04, %v2_fa08
  br i1 %v3_fa08, label %dec_label_pc_f184, label %dec_label_pc_fa0c

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_fa04, %thread-pre-split190
  store i32 %.1957, i32* %r3.global-to-local, align 4
  store i1 %v2_f30c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f30c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa14 = xor i1 %v2_f30c, true
  %v3_fa14 = or i1 %v7_f30c, %v2_fa14
  br i1 %v3_fa14, label %bb1524, label %bb1525

bb1524:                                           ; preds = %dec_label_pc_fa0c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1525

bb1525:                                           ; preds = %dec_label_pc_fa0c, %bb1524
  %v4_fa18 = phi i32 [ %.1957, %dec_label_pc_fa0c ], [ 0, %bb1524 ]
  %v2_fa18 = xor i1 %v7_f30c, true
  %v3_fa18 = and i1 %v2_f30c, %v2_fa18
  br i1 %v3_fa18, label %bb1526, label %thread-pre-split191

bb1526:                                           ; preds = %bb1525
  store i32 %v4_fa18, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1525, %bb1526
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa1c = icmp eq i32 %v4_fa18, 0
  store i1 %v2_fa1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa1c, label %dec_label_pc_fa2c, label %dec_label_pc_fa24

dec_label_pc_fa24:                                ; preds = %thread-pre-split191
  %v2_fa24 = icmp ugt i32 %v1_f19c, 152
  store i1 %v2_fa24, i1* %cpsr_c.global-to-local, align 1
  %v7_fa24 = icmp eq i32 %v1_f19c, 153
  store i1 %v7_fa24, i1* %cpsr_z.global-to-local, align 1
  %v2_fa28 = xor i1 %v2_fa24, true
  %v3_fa28 = or i1 %v7_fa24, %v2_fa28
  br i1 %v3_fa28, label %dec_label_pc_f184, label %dec_label_pc_fa2c

dec_label_pc_fa2c:                                ; preds = %dec_label_pc_fa24, %thread-pre-split191
  store i32 %v0_107fc, i32* %fp.global-to-local, align 4
  %v2_fa30 = icmp ugt i32 %v1_f188, 157
  store i1 %v2_fa30, i1* %cpsr_c.global-to-local, align 1
  %v7_fa30 = icmp eq i32 %v1_f188, 158
  %.1982 = zext i1 %v7_fa30 to i32
  store i32 %.1982, i32* %r3.global-to-local, align 4
  %v2_fa3c = and i32 %v0_107fc, %.1982
  %v4_fa3c = icmp eq i32 %v2_fa3c, 0
  store i1 %v4_fa3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa3c, label %dec_label_pc_fa4c, label %dec_label_pc_fa44

dec_label_pc_fa44:                                ; preds = %dec_label_pc_fa2c
  store i1 %v2_f9a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f9a4, label %dec_label_pc_f184, label %dec_label_pc_fa4c

dec_label_pc_fa4c:                                ; preds = %dec_label_pc_fa44, %dec_label_pc_fa2c
  %v2_fa4c = icmp ugt i32 %v1_f19c, 233
  store i1 %v2_fa4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa4c = icmp eq i32 %v1_f19c, 234
  store i1 %v7_fa4c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa50 = xor i1 %v2_fa4c, true
  %v3_fa50 = or i1 %v7_fa4c, %v2_fa50
  br i1 %v3_fa50, label %bb1529, label %bb1530

bb1529:                                           ; preds = %dec_label_pc_fa4c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1530

bb1530:                                           ; preds = %dec_label_pc_fa4c, %bb1529
  %v4_fa54 = phi i32 [ %.1982, %dec_label_pc_fa4c ], [ 0, %bb1529 ]
  %v2_fa54 = xor i1 %v7_fa4c, true
  %v3_fa54 = and i1 %v2_fa4c, %v2_fa54
  br i1 %v3_fa54, label %bb1531, label %thread-pre-split193

bb1531:                                           ; preds = %bb1530
  store i32 %v4_fa54, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1530, %bb1531
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa58 = icmp eq i32 %v4_fa54, 0
  store i1 %v2_fa58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa58, label %dec_label_pc_fa68, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %thread-pre-split193
  %v2_fa60 = icmp ugt i32 %v1_f19c, 245
  store i1 %v2_fa60, i1* %cpsr_c.global-to-local, align 1
  %v7_fa60 = icmp eq i32 %v1_f19c, 246
  store i1 %v7_fa60, i1* %cpsr_z.global-to-local, align 1
  %v2_fa64 = xor i1 %v2_fa60, true
  %v3_fa64 = or i1 %v7_fa60, %v2_fa64
  br i1 %v3_fa64, label %dec_label_pc_f184, label %dec_label_pc_fa68

dec_label_pc_fa68:                                ; preds = %dec_label_pc_fa60, %thread-pre-split193
  %v7_fa68 = icmp eq i32 %v1_f188, 159
  %.1983 = zext i1 %v7_fa68 to i32
  %v2_fa74 = icmp ugt i32 %v1_f19c, 118
  store i1 %v2_fa74, i1* %cpsr_c.global-to-local, align 1
  %v7_fa74 = icmp eq i32 %v1_f19c, 119
  store i1 %v7_fa74, i1* %cpsr_z.global-to-local, align 1
  %v2_fa78 = xor i1 %v2_fa74, true
  %v3_fa78 = or i1 %v7_fa74, %v2_fa78
  br i1 %v3_fa78, label %bb1534, label %bb1535

bb1534:                                           ; preds = %dec_label_pc_fa68
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1535

bb1535:                                           ; preds = %dec_label_pc_fa68, %bb1534
  %v0_fa80.pr = phi i32 [ %v4_fa54, %dec_label_pc_fa68 ], [ 0, %bb1534 ]
  %v2_fa7c = xor i1 %v7_fa74, true
  %v3_fa7c = and i1 %v2_fa74, %v2_fa7c
  br i1 %v3_fa7c, label %bb1536, label %thread-pre-split195

bb1536:                                           ; preds = %bb1535
  store i32 %.1983, i32* %r3.global-to-local, align 4
  br label %thread-pre-split195

thread-pre-split195:                              ; preds = %bb1535, %bb1536
  %v0_fa80 = phi i32 [ %.1983, %bb1536 ], [ %v0_fa80.pr, %bb1535 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa80 = icmp eq i32 %v0_fa80, 0
  store i1 %v2_fa80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa80, label %dec_label_pc_fa90, label %dec_label_pc_fa88

dec_label_pc_fa88:                                ; preds = %thread-pre-split195
  store i1 %v2_f5b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_fa8c = xor i1 %v2_f5b4, true
  %v3_fa8c = or i1 %v7_f5b4, %v2_fa8c
  br i1 %v3_fa8c, label %dec_label_pc_f184, label %dec_label_pc_fa90

dec_label_pc_fa90:                                ; preds = %dec_label_pc_fa88, %thread-pre-split195
  %v7_fa90 = icmp eq i32 %v1_f188, 160
  %.1984 = zext i1 %v7_fa90 to i32
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_fa9c = icmp ugt i32 %v1_f19c, 130
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa9c = icmp eq i32 %v1_f19c, 131
  store i1 %v7_fa9c, i1* %cpsr_z.global-to-local, align 1
  %v2_faa0 = xor i1 %v2_fa9c, true
  %v3_faa0 = or i1 %v7_fa9c, %v2_faa0
  br i1 %v3_faa0, label %.thread198, label %bb1539

.thread198:                                       ; preds = %dec_label_pc_fa90
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fab4

bb1539:                                           ; preds = %dec_label_pc_fa90
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_faa4 = icmp eq i1 %v7_fa90, false
  store i1 %v2_faa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faa4, label %dec_label_pc_fab4, label %dec_label_pc_faac

dec_label_pc_faac:                                ; preds = %bb1539
  store i1 %v2_f978, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f97c, label %dec_label_pc_f184, label %dec_label_pc_fab4

dec_label_pc_fab4:                                ; preds = %.thread198, %dec_label_pc_faac, %bb1539
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_fab8 = icmp ugt i32 %v1_f19c, 222
  store i1 %v2_fab8, i1* %cpsr_c.global-to-local, align 1
  %v7_fab8 = icmp eq i32 %v1_f19c, 223
  store i1 %v7_fab8, i1* %cpsr_z.global-to-local, align 1
  %v2_fabc = xor i1 %v2_fab8, true
  %v3_fabc = or i1 %v7_fab8, %v2_fabc
  br i1 %v3_fabc, label %bb1540, label %bb1541

bb1540:                                           ; preds = %dec_label_pc_fab4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1541

bb1541:                                           ; preds = %dec_label_pc_fab4, %bb1540
  %v4_fac0 = phi i32 [ %.1971, %dec_label_pc_fab4 ], [ 0, %bb1540 ]
  %v2_fac0 = xor i1 %v7_fab8, true
  %v3_fac0 = and i1 %v2_fab8, %v2_fac0
  br i1 %v3_fac0, label %bb1542, label %thread-pre-split201

bb1542:                                           ; preds = %bb1541
  store i32 %v4_fac0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split201

thread-pre-split201:                              ; preds = %bb1541, %bb1542
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fac4 = icmp eq i32 %v4_fac0, 0
  store i1 %v2_fac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fac4, label %dec_label_pc_fad4, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %thread-pre-split201
  %v2_facc = icmp ugt i32 %v1_f19c, 225
  store i1 %v2_facc, i1* %cpsr_c.global-to-local, align 1
  %v7_facc = icmp eq i32 %v1_f19c, 226
  store i1 %v7_facc, i1* %cpsr_z.global-to-local, align 1
  %v2_fad0 = xor i1 %v2_facc, true
  %v3_fad0 = or i1 %v7_facc, %v2_fad0
  br i1 %v3_fad0, label %dec_label_pc_f184, label %dec_label_pc_fad4

dec_label_pc_fad4:                                ; preds = %dec_label_pc_facc, %thread-pre-split201
  store i32 %.1958, i32* %r3.global-to-local, align 4
  store i32 %v0_f870, i32* %r4.global-to-local, align 4
  %v2_fadc = and i32 %v0_f870, %.1958
  %v4_fadc = icmp eq i32 %v2_fadc, 0
  store i1 %v4_fadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fadc, label %dec_label_pc_faec, label %dec_label_pc_fae4

dec_label_pc_fae4:                                ; preds = %dec_label_pc_fad4
  %v2_fae4 = icmp ugt i32 %v1_f19c, 45
  store i1 %v2_fae4, i1* %cpsr_c.global-to-local, align 1
  %v7_fae4 = icmp eq i32 %v1_f19c, 46
  store i1 %v7_fae4, i1* %cpsr_z.global-to-local, align 1
  %v2_fae8 = xor i1 %v2_fae4, true
  %v3_fae8 = or i1 %v7_fae4, %v2_fae8
  br i1 %v3_fae8, label %dec_label_pc_f184, label %dec_label_pc_faec

dec_label_pc_faec:                                ; preds = %dec_label_pc_fae4, %dec_label_pc_fad4
  %v7_faec = icmp eq i32 %v1_f188, 163
  %.1985 = zext i1 %v7_faec to i32
  store i32 %.1985, i32* %sb.global-to-local, align 4
  %v2_faf8 = icmp ugt i32 %v1_f19c, 203
  store i1 %v2_faf8, i1* %cpsr_c.global-to-local, align 1
  %v7_faf8 = icmp eq i32 %v1_f19c, 204
  store i1 %v7_faf8, i1* %cpsr_z.global-to-local, align 1
  %v2_fafc = xor i1 %v2_faf8, true
  %v3_fafc = or i1 %v7_faf8, %v2_fafc
  br i1 %v3_fafc, label %bb1545, label %bb1546

bb1545:                                           ; preds = %dec_label_pc_faec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1546

bb1546:                                           ; preds = %dec_label_pc_faec, %bb1545
  %v0_fb04.pr = phi i32 [ %.1958, %dec_label_pc_faec ], [ 0, %bb1545 ]
  %v2_fb00 = xor i1 %v7_faf8, true
  %v3_fb00 = and i1 %v2_faf8, %v2_fb00
  br i1 %v3_fb00, label %bb1547, label %thread-pre-split203

bb1547:                                           ; preds = %bb1546
  store i32 %.1985, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1546, %bb1547
  %v0_fb04 = phi i32 [ %.1985, %bb1547 ], [ %v0_fb04.pr, %bb1546 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb04 = icmp eq i32 %v0_fb04, 0
  store i1 %v2_fb04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb04, label %dec_label_pc_fb14, label %dec_label_pc_fb0c

dec_label_pc_fb0c:                                ; preds = %thread-pre-split203
  %v2_fb0c = icmp ugt i32 %v1_f19c, 205
  store i1 %v2_fb0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb0c = icmp eq i32 %v1_f19c, 206
  store i1 %v7_fb0c, i1* %cpsr_z.global-to-local, align 1
  %v2_fb10 = xor i1 %v2_fb0c, true
  %v3_fb10 = or i1 %v7_fb0c, %v2_fb10
  br i1 %v3_fb10, label %dec_label_pc_f184, label %dec_label_pc_fb14

dec_label_pc_fb14:                                ; preds = %dec_label_pc_fb0c, %thread-pre-split203
  store i32 %.1960, i32* %fp.global-to-local, align 4
  store i32 %v0_f870, i32* %r3.global-to-local, align 4
  %v2_fb1c = and i32 %v0_f870, %.1960
  %v4_fb1c = icmp eq i32 %v2_fb1c, 0
  store i1 %v4_fb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb1c, label %dec_label_pc_fb2c, label %dec_label_pc_fb24

dec_label_pc_fb24:                                ; preds = %dec_label_pc_fb14
  %v2_fb24 = icmp ugt i32 %v1_f19c, 48
  store i1 %v2_fb24, i1* %cpsr_c.global-to-local, align 1
  %v7_fb24 = icmp eq i32 %v1_f19c, 49
  store i1 %v7_fb24, i1* %cpsr_z.global-to-local, align 1
  %v2_fb28 = xor i1 %v2_fb24, true
  %v3_fb28 = or i1 %v7_fb24, %v2_fb28
  br i1 %v3_fb28, label %dec_label_pc_f184, label %dec_label_pc_fb2c

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_fb24, %dec_label_pc_fb14
  store i32 %.1960, i32* %r3.global-to-local, align 4
  %v2_fb30 = icmp ugt i32 %v1_f19c, 215
  store i1 %v2_fb30, i1* %cpsr_c.global-to-local, align 1
  %v7_fb30 = icmp eq i32 %v1_f19c, 216
  store i1 %v7_fb30, i1* %cpsr_z.global-to-local, align 1
  %v2_fb34 = xor i1 %v2_fb30, true
  %v3_fb34 = or i1 %v7_fb30, %v2_fb34
  br i1 %v3_fb34, label %bb1548, label %bb1549

bb1548:                                           ; preds = %dec_label_pc_fb2c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1549

bb1549:                                           ; preds = %dec_label_pc_fb2c, %bb1548
  %v4_fb38 = phi i32 [ %.1960, %dec_label_pc_fb2c ], [ 0, %bb1548 ]
  %v2_fb38 = xor i1 %v7_fb30, true
  %v3_fb38 = and i1 %v2_fb30, %v2_fb38
  br i1 %v3_fb38, label %bb1550, label %thread-pre-split204

bb1550:                                           ; preds = %bb1549
  store i32 %v4_fb38, i32* %r3.global-to-local, align 4
  br label %thread-pre-split204

thread-pre-split204:                              ; preds = %bb1549, %bb1550
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb3c = icmp eq i32 %v4_fb38, 0
  store i1 %v2_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb3c, label %dec_label_pc_fb4c, label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %thread-pre-split204
  %v2_fb44 = icmp ugt i32 %v1_f19c, 231
  store i1 %v2_fb44, i1* %cpsr_c.global-to-local, align 1
  %v7_fb44 = icmp eq i32 %v1_f19c, 232
  store i1 %v7_fb44, i1* %cpsr_z.global-to-local, align 1
  %v2_fb48 = xor i1 %v2_fb44, true
  %v3_fb48 = or i1 %v7_fb44, %v2_fb48
  br i1 %v3_fb48, label %dec_label_pc_f184, label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_fb44, %thread-pre-split204
  store i32 %.1973, i32* %r3.global-to-local, align 4
  %v2_fb50 = icmp ugt i32 %v1_f19c, 250
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  %v7_fb50 = icmp eq i32 %v1_f19c, 251
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  %v2_fb54 = xor i1 %v2_fb50, true
  %v3_fb54 = or i1 %v7_fb50, %v2_fb54
  br i1 %v3_fb54, label %bb1551, label %bb1552

bb1551:                                           ; preds = %dec_label_pc_fb4c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1552

bb1552:                                           ; preds = %dec_label_pc_fb4c, %bb1551
  %v4_fb58 = phi i32 [ %.1973, %dec_label_pc_fb4c ], [ 0, %bb1551 ]
  %v2_fb58 = xor i1 %v7_fb50, true
  %v3_fb58 = and i1 %v2_fb50, %v2_fb58
  br i1 %v3_fb58, label %bb1553, label %thread-pre-split205

bb1553:                                           ; preds = %bb1552
  store i32 %v4_fb58, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1552, %bb1553
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb5c = icmp eq i32 %v4_fb58, 0
  store i1 %v2_fb5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb5c, label %dec_label_pc_fb6c, label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %thread-pre-split205
  %v2_fb64 = icmp ugt i32 %v1_f19c, 252
  store i1 %v2_fb64, i1* %cpsr_c.global-to-local, align 1
  %v7_fb64 = icmp eq i32 %v1_f19c, 253
  store i1 %v7_fb64, i1* %cpsr_z.global-to-local, align 1
  %v2_fb68 = xor i1 %v2_fb64, true
  %v3_fb68 = or i1 %v7_fb64, %v2_fb68
  br i1 %v3_fb68, label %dec_label_pc_f184, label %dec_label_pc_fb6c

dec_label_pc_fb6c:                                ; preds = %dec_label_pc_fb64, %thread-pre-split205
  %v7_fb6c = icmp eq i32 %v1_f188, 199
  %.1986 = zext i1 %v7_fb6c to i32
  store i32 %.1986, i32* %r4.global-to-local, align 4
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 %v2_f5b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_fb80 = xor i1 %v2_f5b4, true
  %v3_fb80 = or i1 %v7_f5b4, %v2_fb80
  br i1 %v3_fb80, label %bb1556, label %bb1557

bb1556:                                           ; preds = %dec_label_pc_fb6c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1557

bb1557:                                           ; preds = %dec_label_pc_fb6c, %bb1556
  %v4_fb84 = phi i32 [ %.1986, %dec_label_pc_fb6c ], [ 0, %bb1556 ]
  %v2_fb84 = xor i1 %v7_f5b4, true
  %v3_fb84 = and i1 %v2_f5b4, %v2_fb84
  br i1 %v3_fb84, label %bb1558, label %thread-pre-split207

bb1558:                                           ; preds = %bb1557
  store i32 %v4_fb84, i32* %r3.global-to-local, align 4
  br label %thread-pre-split207

thread-pre-split207:                              ; preds = %bb1557, %bb1558
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb88 = icmp eq i32 %v4_fb84, 0
  store i1 %v2_fb88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb88, label %dec_label_pc_fb9c, label %dec_label_pc_fb94

dec_label_pc_fb94:                                ; preds = %thread-pre-split207
  %v2_fb94 = icmp ugt i32 %v1_f19c, 252
  store i1 %v2_fb94, i1* %cpsr_c.global-to-local, align 1
  %v7_fb94 = icmp eq i32 %v1_f19c, 253
  store i1 %v7_fb94, i1* %cpsr_z.global-to-local, align 1
  %v2_fb98 = xor i1 %v2_fb94, true
  %v3_fb98 = or i1 %v7_fb94, %v2_fb98
  br i1 %v3_fb98, label %dec_label_pc_f184, label %dec_label_pc_fb9c

dec_label_pc_fb9c:                                ; preds = %dec_label_pc_fb94, %thread-pre-split207
  store i32 %v0_107fc, i32* %r3.global-to-local, align 4
  %v2_fba0 = icmp ugt i32 %v1_f188, 204
  store i1 %v2_fba0, i1* %cpsr_c.global-to-local, align 1
  %v7_fba0 = icmp eq i32 %v1_f188, 205
  store i1 %v7_fba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fba0, label %.thread208, label %.thread209

.thread209:                                       ; preds = %dec_label_pc_fb9c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbbc

.thread208:                                       ; preds = %dec_label_pc_fb9c
  store i32 %v0_107fc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbac = icmp eq i32 %v0_107fc, 0
  store i1 %v2_fbac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbac, label %dec_label_pc_fbbc, label %dec_label_pc_fbb4

dec_label_pc_fbb4:                                ; preds = %.thread208
  %v2_fbb4 = icmp ugt i32 %v1_f19c, 116
  store i1 %v2_fbb4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbb4 = icmp eq i32 %v1_f19c, 117
  store i1 %v7_fbb4, i1* %cpsr_z.global-to-local, align 1
  %v2_fbb8 = xor i1 %v2_fbb4, true
  %v3_fbb8 = or i1 %v7_fbb4, %v2_fbb8
  br i1 %v3_fbb8, label %dec_label_pc_f184, label %dec_label_pc_fbbc

dec_label_pc_fbbc:                                ; preds = %.thread209, %dec_label_pc_fbb4, %.thread208
  store i32 %.1966, i32* %r3.global-to-local, align 4
  store i1 %v2_f504, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f504, i1* %cpsr_z.global-to-local, align 1
  %v2_fbc4 = xor i1 %v2_f504, true
  %v3_fbc4 = or i1 %v7_f504, %v2_fbc4
  br i1 %v3_fbc4, label %bb1559, label %bb1560

bb1559:                                           ; preds = %dec_label_pc_fbbc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1560

bb1560:                                           ; preds = %dec_label_pc_fbbc, %bb1559
  %v4_fbc8 = phi i32 [ %.1966, %dec_label_pc_fbbc ], [ 0, %bb1559 ]
  %v2_fbc8 = xor i1 %v7_f504, true
  %v3_fbc8 = and i1 %v2_f504, %v2_fbc8
  br i1 %v3_fbc8, label %bb1561, label %thread-pre-split212

bb1561:                                           ; preds = %bb1560
  store i32 %v4_fbc8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split212

thread-pre-split212:                              ; preds = %bb1560, %bb1561
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbcc = icmp eq i32 %v4_fbc8, 0
  store i1 %v2_fbcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbcc, label %dec_label_pc_fbdc, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %thread-pre-split212
  %v2_fbd4 = icmp ugt i32 %v1_f19c, 60
  store i1 %v2_fbd4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbd4 = icmp eq i32 %v1_f19c, 61
  store i1 %v7_fbd4, i1* %cpsr_z.global-to-local, align 1
  %v2_fbd8 = xor i1 %v2_fbd4, true
  %v3_fbd8 = or i1 %v7_fbd4, %v2_fbd8
  br i1 %v3_fbd8, label %dec_label_pc_f184, label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbd4, %thread-pre-split212
  store i32 %v0_fbec, i32* %r3.global-to-local, align 4
  %v2_fbe0 = icmp ugt i32 %v1_f188, 103
  store i1 %v2_fbe0, i1* %cpsr_c.global-to-local, align 1
  %v7_fbe0 = icmp eq i32 %v1_f188, 104
  %.1987 = zext i1 %v7_fbe0 to i32
  store i32 %.1987, i32* %fp.global-to-local, align 4
  %v2_fbec = and i32 %v0_fbec, %.1987
  %v4_fbec = icmp eq i32 %v2_fbec, 0
  store i1 %v4_fbec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fbec, label %dec_label_pc_fc00, label %dec_label_pc_fbf8

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_fbdc
  store i1 %v2_f548, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f820, label %dec_label_pc_f184, label %dec_label_pc_fc00

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fbf8, %dec_label_pc_fbdc
  %v7_fc00 = icmp eq i32 %v1_f188, 188
  %.1988 = zext i1 %v7_fc00 to i32
  store i32 %.1988, i32* %r4.global-to-local, align 4
  %v2_fc0c = icmp ugt i32 %v1_f19c, 165
  store i1 %v2_fc0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc0c = icmp eq i32 %v1_f19c, 166
  store i1 %v7_fc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc0c, label %bb1566, label %dec_label_pc_fc1c

bb1566:                                           ; preds = %dec_label_pc_fc00
  %v2_fc00 = icmp ugt i32 %v1_f188, 187
  store i1 %v2_fc00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc00, label %dec_label_pc_f184, label %dec_label_pc_fc1c

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fc00, %bb1566
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_fc20 = icmp ugt i32 %v1_f19c, 225
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  %v7_fc20 = icmp eq i32 %v1_f19c, 226
  store i1 %v7_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc20, label %.thread218, label %.thread219

.thread219:                                       ; preds = %dec_label_pc_fc1c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc34

.thread218:                                       ; preds = %dec_label_pc_fc1c
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc2c = icmp eq i1 %v7_fc00, false
  store i1 %v2_fc2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc2c, label %dec_label_pc_fc34, label %dec_label_pc_f184

dec_label_pc_fc34:                                ; preds = %.thread219, %.thread218
  %v2_fc34 = icmp ugt i32 %v1_f19c, 202
  store i1 %v2_fc34, i1* %cpsr_c.global-to-local, align 1
  %v7_fc34 = icmp eq i32 %v1_f19c, 203
  store i1 %v7_fc34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc34, label %.thread222, label %.thread223

.thread223:                                       ; preds = %dec_label_pc_fc34
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc48

.thread222:                                       ; preds = %dec_label_pc_fc34
  store i32 %.1983, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc40 = icmp eq i1 %v7_fa68, false
  store i1 %v2_fc40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc40, label %dec_label_pc_fc48, label %dec_label_pc_f184

dec_label_pc_fc48:                                ; preds = %.thread223, %.thread222
  store i32 %.1958, i32* %r3.global-to-local, align 4
  %v2_fc4c = icmp ugt i32 %v1_f19c, 242
  store i1 %v2_fc4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc4c = icmp eq i32 %v1_f19c, 243
  store i1 %v7_fc4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc4c, label %.thread226, label %.thread227

.thread227:                                       ; preds = %dec_label_pc_fc48
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc60

.thread226:                                       ; preds = %dec_label_pc_fc48
  store i32 %.1958, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc58 = icmp eq i1 %v7_f3f4, false
  store i1 %v2_fc58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc58, label %dec_label_pc_fc60, label %dec_label_pc_f184

dec_label_pc_fc60:                                ; preds = %.thread227, %.thread226
  %v2_fc64 = icmp ugt i32 %v1_f188, 44
  store i1 %v2_fc64, i1* %cpsr_c.global-to-local, align 1
  %v7_fc64 = icmp eq i32 %v1_f188, 45
  %.1989 = zext i1 %v7_fc64 to i32
  store i32 %.1989, i32* %fp.global-to-local, align 4
  %v2_fc70 = and i32 %.1967, %.1989
  %v4_fc70 = icmp eq i32 %v2_fc70, 0
  store i1 %v4_fc70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc70, label %dec_label_pc_fc7c, label %dec_label_pc_f184

dec_label_pc_fc7c:                                ; preds = %dec_label_pc_fc60
  %v7_fc7c = icmp eq i32 %v1_f188, 178
  %.1990 = zext i1 %v7_fc7c to i32
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_fc88 = icmp ugt i32 %v1_f19c, 61
  store i1 %v2_fc88, i1* %cpsr_c.global-to-local, align 1
  %v7_fc88 = icmp eq i32 %v1_f19c, 62
  %storemerge1223 = zext i1 %v7_fc88 to i32
  store i32 %storemerge1223, i32* %r4.global-to-local, align 4
  %v2_fc94 = and i32 %storemerge1223, %.1990
  %v4_fc94 = icmp eq i32 %v2_fc94, 0
  store i1 %v4_fc94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fc94, label %dec_label_pc_fca4, label %dec_label_pc_f184

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc7c
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa9c, label %.thread233, label %.thread234

.thread234:                                       ; preds = %dec_label_pc_fca4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcbc

.thread233:                                       ; preds = %dec_label_pc_fca4
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcb4 = icmp eq i1 %v7_fbe0, false
  store i1 %v2_fcb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcb4, label %dec_label_pc_fcbc, label %dec_label_pc_f184

dec_label_pc_fcbc:                                ; preds = %.thread234, %.thread233
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_fcc0 = icmp ugt i32 %v1_f19c, 235
  store i1 %v2_fcc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fcc0 = icmp eq i32 %v1_f19c, 236
  store i1 %v7_fcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcc0, label %.thread237, label %.thread238

.thread238:                                       ; preds = %dec_label_pc_fcbc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcd4

.thread237:                                       ; preds = %dec_label_pc_fcbc
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fccc = icmp eq i1 %v7_fbe0, false
  store i1 %v2_fccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fccc, label %dec_label_pc_fcd4, label %dec_label_pc_f184

dec_label_pc_fcd4:                                ; preds = %.thread238, %.thread237
  %v7_fcd4 = icmp eq i32 %v1_f188, 107
  %.1991 = zext i1 %v7_fcd4 to i32
  store i32 %.1991, i32* %fp.global-to-local, align 4
  %v2_fce0 = icmp ugt i32 %v1_f19c, 169
  store i1 %v2_fce0, i1* %cpsr_c.global-to-local, align 1
  %v7_fce0 = icmp eq i32 %v1_f19c, 170
  %storemerge1225 = zext i1 %v7_fce0 to i32
  %v2_fcec = and i32 %storemerge1225, %.1991
  %v4_fcec = icmp eq i32 %v2_fcec, 0
  store i1 %v4_fcec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fcec, label %dec_label_pc_fcfc, label %dec_label_pc_f184

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fcd4
  store i32 %.1978, i32* %r3.global-to-local, align 4
  store i1 %v2_f920, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f920, label %.thread243, label %.thread244

.thread244:                                       ; preds = %dec_label_pc_fcfc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd14

.thread243:                                       ; preds = %dec_label_pc_fcfc
  store i32 %.1978, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd0c = icmp eq i1 %v7_f7dc, false
  store i1 %v2_fd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd0c, label %dec_label_pc_fd14, label %dec_label_pc_f184

dec_label_pc_fd14:                                ; preds = %.thread244, %.thread243
  store i32 %.1962, i32* %r3.global-to-local, align 4
  store i32 %.1978, i32* %r4.global-to-local, align 4
  %v2_fd1c = and i32 %.1962, %.1978
  %v4_fd1c = icmp eq i32 %v2_fd1c, 0
  store i1 %v4_fd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd1c, label %dec_label_pc_fd24, label %dec_label_pc_f184

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd14
  store i32 %.1964, i32* %fp.global-to-local, align 4
  %v2_fd2c = and i32 %.1964, %.1979
  %v4_fd2c = icmp eq i32 %v2_fd2c, 0
  store i1 %v4_fd2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd2c, label %dec_label_pc_fd34, label %dec_label_pc_f184

dec_label_pc_fd34:                                ; preds = %dec_label_pc_fd24
  %v2_fd34 = icmp ugt i32 %v1_f19c, 184
  store i1 %v2_fd34, i1* %cpsr_c.global-to-local, align 1
  %v7_fd34 = icmp eq i32 %v1_f19c, 185
  store i1 %v7_fd34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd34, label %.thread247, label %.thread248

.thread248:                                       ; preds = %dec_label_pc_fd34
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd5c

.thread247:                                       ; preds = %dec_label_pc_fd34
  store i32 %.1946, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd40 = icmp eq i1 %v7_f244, false
  store i1 %v2_fd40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd40, label %dec_label_pc_fd5c, label %dec_label_pc_fd48

dec_label_pc_fd48:                                ; preds = %.thread247
  %v2_fd48 = icmp ugt i32 %v1_f1a0, 189
  store i1 %v2_fd48, i1* %cpsr_c.global-to-local, align 1
  %v7_fd48 = icmp eq i32 %v1_f1a0, 190
  store i1 %v7_fd48, i1* %cpsr_z.global-to-local, align 1
  %v2_fd4c = xor i1 %v7_fd48, true
  %v3_fd4c = and i1 %v2_fd48, %v2_fd4c
  br i1 %v3_fd4c, label %bb1577, label %bb1578

bb1577:                                           ; preds = %dec_label_pc_fd48
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1578

bb1578:                                           ; preds = %dec_label_pc_fd48, %bb1577
  %v0_fd54838 = phi i32 [ %.1946, %dec_label_pc_fd48 ], [ 0, %bb1577 ]
  %v2_fd50 = xor i1 %v2_fd48, true
  %v3_fd50 = or i1 %v7_fd48, %v2_fd50
  br i1 %v3_fd50, label %bb1579, label %bb1580

bb1579:                                           ; preds = %bb1578
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1580

bb1580:                                           ; preds = %bb1578, %bb1579
  %v0_fd54 = phi i32 [ %v0_fd54838, %bb1578 ], [ 1, %bb1579 ]
  %v2_fd54 = and i32 %v3_f190, 64
  %v3_fd54 = icmp ne i32 %v2_fd54, 0
  store i1 %v3_fd54, i1* %cpsr_c.global-to-local, align 1
  %v4_fd54 = udiv i32 %v1_f1a0, 128
  %v5_fd54 = and i32 %v0_fd54, %v4_fd54
  store i32 %v5_fd54, i32* %r3.global-to-local, align 4
  %v6_fd54 = icmp eq i32 %v5_fd54, 0
  store i1 %v6_fd54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fd54, label %dec_label_pc_fd5c, label %dec_label_pc_f184

dec_label_pc_fd5c:                                ; preds = %.thread248, %bb1580, %.thread247
  %v2_fd5c = icmp ugt i32 %v1_f19c, 46
  store i1 %v2_fd5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd5c = icmp eq i32 %v1_f19c, 47
  %.1992 = zext i1 %v7_fd5c to i32
  %v2_fd68 = and i32 %.1992, %.1985
  %v4_fd68 = icmp eq i32 %v2_fd68, 0
  store i1 %v4_fd68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd68, label %dec_label_pc_fd8c, label %dec_label_pc_fd70

dec_label_pc_fd70:                                ; preds = %dec_label_pc_fd5c
  %v2_fd70 = icmp ugt i32 %v1_f1a0, 8
  store i1 %v2_fd70, i1* %cpsr_c.global-to-local, align 1
  %v7_fd70 = icmp eq i32 %v1_f1a0, 9
  store i1 %v7_fd70, i1* %cpsr_z.global-to-local, align 1
  %v2_fd74 = xor i1 %v2_fd70, true
  %v3_fd74 = or i1 %v7_fd70, %v2_fd74
  br i1 %v3_fd74, label %bb1583, label %bb1584

bb1583:                                           ; preds = %dec_label_pc_fd70
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1584

bb1584:                                           ; preds = %dec_label_pc_fd70, %bb1583
  %v2_fd78 = xor i1 %v7_fd70, true
  %v3_fd78 = and i1 %v2_fd70, %v2_fd78
  br i1 %v3_fd78, label %bb1585, label %bb1586

bb1585:                                           ; preds = %bb1584
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1586

bb1586:                                           ; preds = %bb1584, %bb1585
  %v0_fd84.pr = phi i32 [ 0, %bb1584 ], [ 1, %bb1585 ]
  %v2_fd7c = icmp ugt i32 %v1_f1a0, 9
  store i1 %v2_fd7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd7c = icmp eq i32 %v1_f1a0, 10
  store i1 %v7_fd7c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd80 = xor i1 %v7_fd7c, true
  %v3_fd80 = and i1 %v2_fd7c, %v2_fd80
  br i1 %v3_fd80, label %.thread253, label %bb1587

.thread253:                                       ; preds = %bb1586
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd8c

bb1587:                                           ; preds = %bb1586
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd84 = icmp eq i32 %v0_fd84.pr, 0
  store i1 %v2_fd84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd84, label %dec_label_pc_fd8c, label %dec_label_pc_f184

dec_label_pc_fd8c:                                ; preds = %.thread253, %bb1587, %dec_label_pc_fd5c
  %v2_fd8c = icmp ugt i32 %v1_f188, 173
  store i1 %v2_fd8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd8c = icmp eq i32 %v1_f188, 174
  store i1 %v7_fd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd8c, label %bb1588, label %dec_label_pc_fdb0

bb1588:                                           ; preds = %dec_label_pc_fd8c
  %v3_fd90 = icmp ugt i32 %v1_f19c, 137
  store i1 %v3_fd90, i1* %cpsr_c.global-to-local, align 1
  %v8_fd90 = icmp eq i32 %v1_f19c, 138
  store i1 %v8_fd90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd90, label %dec_label_pc_fd98, label %dec_label_pc_fdb0

dec_label_pc_fd98:                                ; preds = %bb1588
  store i32 %v1_f1a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd98 = icmp eq i32 %v1_f1a0, 0
  store i1 %v2_fd98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd98, label %bb1590, label %bb1589

bb1589:                                           ; preds = %dec_label_pc_fd98
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1590

bb1590:                                           ; preds = %dec_label_pc_fd98, %bb1589
  %v0_fda8.pr = phi i32 [ 0, %dec_label_pc_fd98 ], [ 1, %bb1589 ]
  %v2_fda0 = icmp ugt i32 %v1_f1a0, 125
  store i1 %v2_fda0, i1* %cpsr_c.global-to-local, align 1
  %v7_fda0 = icmp eq i32 %v1_f1a0, 126
  store i1 %v7_fda0, i1* %cpsr_z.global-to-local, align 1
  %v2_fda4 = xor i1 %v7_fda0, true
  %v3_fda4 = and i1 %v2_fda0, %v2_fda4
  br i1 %v3_fda4, label %.thread258, label %bb1591

.thread258:                                       ; preds = %bb1590
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdb0

bb1591:                                           ; preds = %bb1590
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fda8 = icmp eq i32 %v0_fda8.pr, 0
  store i1 %v2_fda8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fda8, label %dec_label_pc_fdb0, label %dec_label_pc_f184

dec_label_pc_fdb0:                                ; preds = %dec_label_pc_fd8c, %.thread258, %bb1591, %bb1588
  %v2_fdb0 = icmp ugt i32 %v1_f19c, 240
  store i1 %v2_fdb0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdb0 = icmp eq i32 %v1_f19c, 241
  store i1 %v7_fdb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdb0, label %.thread261, label %.thread262

.thread262:                                       ; preds = %dec_label_pc_fdb0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdd4

.thread261:                                       ; preds = %dec_label_pc_fdb0
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdbc = icmp eq i1 %v7_f22c, false
  store i1 %v2_fdbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdbc, label %dec_label_pc_fdd4, label %dec_label_pc_fdc4

dec_label_pc_fdc4:                                ; preds = %.thread261
  %v1_fdc4 = add nsw i32 %v1_f1a0, -255
  store i32 %v1_fdc4, i32* %r3.global-to-local, align 4
  %v2_fdc4 = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_fdc4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fdc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdc4, label %bb1593, label %bb1592

bb1592:                                           ; preds = %dec_label_pc_fdc4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1593

bb1593:                                           ; preds = %dec_label_pc_fdc4, %bb1592
  %v0_fdcc = phi i32 [ %v1_fdc4, %dec_label_pc_fdc4 ], [ 1, %bb1592 ]
  %v2_fdcc = and i32 %v3_f190, 64
  %v3_fdcc = icmp ne i32 %v2_fdcc, 0
  store i1 %v3_fdcc, i1* %cpsr_c.global-to-local, align 1
  %v4_fdcc = udiv i32 %v1_f1a0, 128
  %v5_fdcc = and i32 %v0_fdcc, %v4_fdcc
  store i32 %v5_fdcc, i32* %r3.global-to-local, align 4
  %v6_fdcc = icmp eq i32 %v5_fdcc, 0
  store i1 %v6_fdcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fdcc, label %dec_label_pc_fdd4, label %dec_label_pc_f184

dec_label_pc_fdd4:                                ; preds = %.thread262, %bb1593, %.thread261
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_fdd8 = icmp ugt i32 %v1_f19c, 198
  store i1 %v2_fdd8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdd8 = icmp eq i32 %v1_f19c, 199
  store i1 %v7_fdd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdd8, label %.thread265, label %.thread266

.thread266:                                       ; preds = %dec_label_pc_fdd4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe08

.thread265:                                       ; preds = %dec_label_pc_fdd4
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fde4 = icmp eq i1 %v7_f688, false
  store i1 %v2_fde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fde4, label %dec_label_pc_fe08, label %dec_label_pc_fdec

dec_label_pc_fdec:                                ; preds = %.thread265
  %v2_fdec = icmp ugt i32 %v1_f1a0, 62
  store i1 %v2_fdec, i1* %cpsr_c.global-to-local, align 1
  %v7_fdec = icmp eq i32 %v1_f1a0, 63
  store i1 %v7_fdec, i1* %cpsr_z.global-to-local, align 1
  %v2_fdf0 = xor i1 %v2_fdec, true
  %v3_fdf0 = or i1 %v7_fdec, %v2_fdf0
  br i1 %v3_fdf0, label %bb1594, label %bb1595

bb1594:                                           ; preds = %dec_label_pc_fdec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1595

bb1595:                                           ; preds = %dec_label_pc_fdec, %bb1594
  %v0_fe00.pr848 = phi i32 [ %.1974, %dec_label_pc_fdec ], [ 0, %bb1594 ]
  %v2_fdf4 = xor i1 %v7_fdec, true
  %v3_fdf4 = and i1 %v2_fdec, %v2_fdf4
  br i1 %v3_fdf4, label %bb1596, label %bb1597

bb1596:                                           ; preds = %bb1595
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1597

bb1597:                                           ; preds = %bb1595, %bb1596
  %v0_fe00.pr = phi i32 [ %v0_fe00.pr848, %bb1595 ], [ 1, %bb1596 ]
  %v2_fdf8 = icmp ugt i32 %v1_f1a0, 125
  store i1 %v2_fdf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf8 = icmp eq i32 %v1_f1a0, 126
  store i1 %v7_fdf8, i1* %cpsr_z.global-to-local, align 1
  %v2_fdfc = xor i1 %v7_fdf8, true
  %v3_fdfc = and i1 %v2_fdf8, %v2_fdfc
  br i1 %v3_fdfc, label %.thread270, label %bb1598

.thread270:                                       ; preds = %bb1597
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe08

bb1598:                                           ; preds = %bb1597
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe00 = icmp eq i32 %v0_fe00.pr, 0
  store i1 %v2_fe00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe00, label %dec_label_pc_fe08, label %dec_label_pc_f184

dec_label_pc_fe08:                                ; preds = %.thread270, %.thread266, %bb1598, %.thread265
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_fe0c = icmp ugt i32 %v1_f19c, 210
  store i1 %v2_fe0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe0c = icmp eq i32 %v1_f19c, 211
  store i1 %v7_fe0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe0c, label %.thread273, label %.thread274

.thread274:                                       ; preds = %dec_label_pc_fe08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe3c

.thread273:                                       ; preds = %dec_label_pc_fe08
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe18 = icmp eq i1 %v7_f688, false
  store i1 %v2_fe18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe18, label %dec_label_pc_fe3c, label %dec_label_pc_fe20

dec_label_pc_fe20:                                ; preds = %.thread273
  %v2_fe20 = icmp ugt i32 %v1_f1a0, 94
  store i1 %v2_fe20, i1* %cpsr_c.global-to-local, align 1
  %v7_fe20 = icmp eq i32 %v1_f1a0, 95
  store i1 %v7_fe20, i1* %cpsr_z.global-to-local, align 1
  %v2_fe24 = xor i1 %v2_fe20, true
  %v3_fe24 = or i1 %v7_fe20, %v2_fe24
  br i1 %v3_fe24, label %bb1599, label %bb1600

bb1599:                                           ; preds = %dec_label_pc_fe20
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1600

bb1600:                                           ; preds = %dec_label_pc_fe20, %bb1599
  %v0_fe34.pr851 = phi i32 [ %.1974, %dec_label_pc_fe20 ], [ 0, %bb1599 ]
  %v2_fe28 = xor i1 %v7_fe20, true
  %v3_fe28 = and i1 %v2_fe20, %v2_fe28
  br i1 %v3_fe28, label %bb1601, label %bb1602

bb1601:                                           ; preds = %bb1600
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1602

bb1602:                                           ; preds = %bb1600, %bb1601
  %v0_fe34.pr = phi i32 [ %v0_fe34.pr851, %bb1600 ], [ 1, %bb1601 ]
  %v2_fe2c = icmp ugt i32 %v1_f1a0, 125
  store i1 %v2_fe2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe2c = icmp eq i32 %v1_f1a0, 126
  store i1 %v7_fe2c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe30 = xor i1 %v7_fe2c, true
  %v3_fe30 = and i1 %v2_fe2c, %v2_fe30
  br i1 %v3_fe30, label %.thread278, label %bb1603

.thread278:                                       ; preds = %bb1602
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe3c

bb1603:                                           ; preds = %bb1602
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe34 = icmp eq i32 %v0_fe34.pr, 0
  store i1 %v2_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe34, label %dec_label_pc_fe3c, label %dec_label_pc_f184

dec_label_pc_fe3c:                                ; preds = %.thread278, %.thread274, %bb1603, %.thread273
  store i32 %.1966, i32* %r3.global-to-local, align 4
  %v2_fe40 = and i32 %.1949, %.1966
  %v4_fe40 = icmp eq i32 %v2_fe40, 0
  store i1 %v4_fe40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fe40, label %dec_label_pc_fe54, label %dec_label_pc_fe48

dec_label_pc_fe48:                                ; preds = %dec_label_pc_fe3c
  %v2_fe48 = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_fe48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fe48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe48, label %dec_label_pc_fe54, label %bb1604

bb1604:                                           ; preds = %dec_label_pc_fe48
  %v3_fe4c = icmp ugt i32 %v1_f1a0, 190
  store i1 %v3_fe4c, i1* %cpsr_c.global-to-local, align 1
  %v8_fe4c = icmp eq i32 %v1_f1a0, 191
  store i1 %v8_fe4c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe50 = xor i1 %v8_fe4c, true
  %v3_fe50 = and i1 %v3_fe4c, %v2_fe50
  br i1 %v3_fe50, label %dec_label_pc_f184, label %dec_label_pc_fe54

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe48, %bb1604, %dec_label_pc_fe3c
  %v7_fe54 = icmp eq i32 %v1_f188, 37
  %.1993 = zext i1 %v7_fe54 to i32
  store i32 %.1993, i32* %sl.global-to-local, align 4
  %v2_fe60 = icmp ugt i32 %v1_f19c, 138
  store i1 %v2_fe60, i1* %cpsr_c.global-to-local, align 1
  %v7_fe60 = icmp eq i32 %v1_f19c, 139
  store i1 %v7_fe60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe60, label %bb1607, label %dec_label_pc_fe84

bb1607:                                           ; preds = %dec_label_pc_fe54
  %v2_fe54 = icmp ugt i32 %v1_f188, 36
  store i1 %v2_fe54, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe54, label %dec_label_pc_fe6c, label %dec_label_pc_fe84

dec_label_pc_fe6c:                                ; preds = %bb1607
  store i32 %v1_f1a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe6c = icmp eq i32 %v1_f1a0, 0
  store i1 %v2_fe6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe6c, label %bb1609, label %bb1608

bb1608:                                           ; preds = %dec_label_pc_fe6c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1609

bb1609:                                           ; preds = %dec_label_pc_fe6c, %bb1608
  %v0_fe7c.pr = phi i32 [ 0, %dec_label_pc_fe6c ], [ 1, %bb1608 ]
  %v2_fe74 = icmp ugt i32 %v1_f1a0, 29
  store i1 %v2_fe74, i1* %cpsr_c.global-to-local, align 1
  %v7_fe74 = icmp eq i32 %v1_f1a0, 30
  store i1 %v7_fe74, i1* %cpsr_z.global-to-local, align 1
  %v2_fe78 = xor i1 %v7_fe74, true
  %v3_fe78 = and i1 %v2_fe74, %v2_fe78
  br i1 %v3_fe78, label %.thread284, label %bb1610

.thread284:                                       ; preds = %bb1609
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe84

bb1610:                                           ; preds = %bb1609
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe7c = icmp eq i32 %v0_fe7c.pr, 0
  store i1 %v2_fe7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe7c, label %dec_label_pc_fe84, label %dec_label_pc_f184

dec_label_pc_fe84:                                ; preds = %dec_label_pc_fe54, %.thread284, %bb1610, %bb1607
  %v0_feb0.pr857 = phi i32 [ %.1966, %dec_label_pc_fe54 ], [ 0, %.thread284 ], [ 0, %bb1610 ], [ %.1966, %bb1607 ]
  %v7_fe84 = icmp eq i32 %v1_f188, 67
  %.1994 = zext i1 %v7_fe84 to i32
  %v2_fe90 = icmp ugt i32 %v1_f19c, 206
  store i1 %v2_fe90, i1* %cpsr_c.global-to-local, align 1
  %v7_fe90 = icmp eq i32 %v1_f19c, 207
  store i1 %v7_fe90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe90, label %bb1613, label %dec_label_pc_feb8

bb1613:                                           ; preds = %dec_label_pc_fe84
  %v2_fe84 = icmp ugt i32 %v1_f188, 66
  store i1 %v2_fe84, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe84, label %dec_label_pc_fe9c, label %dec_label_pc_feb8

dec_label_pc_fe9c:                                ; preds = %bb1613
  %v2_fe9c = icmp ugt i32 %v1_f1a0, 62
  store i1 %v2_fe9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe9c = icmp eq i32 %v1_f1a0, 63
  store i1 %v7_fe9c, i1* %cpsr_z.global-to-local, align 1
  %v2_fea0 = xor i1 %v2_fe9c, true
  %v3_fea0 = or i1 %v7_fe9c, %v2_fea0
  br i1 %v3_fea0, label %bb1614, label %bb1615

bb1614:                                           ; preds = %dec_label_pc_fe9c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1615

bb1615:                                           ; preds = %dec_label_pc_fe9c, %bb1614
  %v0_feb0.pr856 = phi i32 [ %v0_feb0.pr857, %dec_label_pc_fe9c ], [ 0, %bb1614 ]
  %v2_fea4 = xor i1 %v7_fe9c, true
  %v3_fea4 = and i1 %v2_fe9c, %v2_fea4
  br i1 %v3_fea4, label %bb1616, label %bb1617

bb1616:                                           ; preds = %bb1615
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1617

bb1617:                                           ; preds = %bb1615, %bb1616
  %v0_feb0.pr = phi i32 [ %v0_feb0.pr856, %bb1615 ], [ 1, %bb1616 ]
  %v2_fea8 = icmp ugt i32 %v1_f1a0, 93
  store i1 %v2_fea8, i1* %cpsr_c.global-to-local, align 1
  %v7_fea8 = icmp eq i32 %v1_f1a0, 94
  store i1 %v7_fea8, i1* %cpsr_z.global-to-local, align 1
  %v2_feac = xor i1 %v7_fea8, true
  %v3_feac = and i1 %v2_fea8, %v2_feac
  br i1 %v3_feac, label %.thread290, label %bb1618

.thread290:                                       ; preds = %bb1617
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_feb8

bb1618:                                           ; preds = %bb1617
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feb0 = icmp eq i32 %v0_feb0.pr, 0
  store i1 %v2_feb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feb0, label %dec_label_pc_feb8, label %dec_label_pc_f184

dec_label_pc_feb8:                                ; preds = %dec_label_pc_fe84, %.thread290, %bb1618, %bb1613
  %v2_feb8 = icmp ugt i32 %v1_f19c, 204
  store i1 %v2_feb8, i1* %cpsr_c.global-to-local, align 1
  %v7_feb8 = icmp eq i32 %v1_f19c, 205
  store i1 %v7_feb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feb8, label %.thread293, label %.thread294

.thread294:                                       ; preds = %dec_label_pc_feb8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fee0

.thread293:                                       ; preds = %dec_label_pc_feb8
  store i32 %.1994, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fec4 = icmp eq i1 %v7_fe84, false
  store i1 %v2_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fec4, label %dec_label_pc_fee0, label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %.thread293
  %v2_fecc = icmp ugt i32 %v1_f1a0, 189
  store i1 %v2_fecc, i1* %cpsr_c.global-to-local, align 1
  %v7_fecc = icmp eq i32 %v1_f1a0, 190
  store i1 %v7_fecc, i1* %cpsr_z.global-to-local, align 1
  %v2_fed0 = xor i1 %v7_fecc, true
  %v3_fed0 = and i1 %v2_fecc, %v2_fed0
  br i1 %v3_fed0, label %bb1619, label %bb1620

bb1619:                                           ; preds = %dec_label_pc_fecc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1620

bb1620:                                           ; preds = %dec_label_pc_fecc, %bb1619
  %v0_fed8860 = phi i32 [ %.1994, %dec_label_pc_fecc ], [ 0, %bb1619 ]
  %v2_fed4 = xor i1 %v2_fecc, true
  %v3_fed4 = or i1 %v7_fecc, %v2_fed4
  br i1 %v3_fed4, label %bb1621, label %bb1622

bb1621:                                           ; preds = %bb1620
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1622

bb1622:                                           ; preds = %bb1620, %bb1621
  %v0_fed8 = phi i32 [ %v0_fed8860, %bb1620 ], [ 1, %bb1621 ]
  %v2_fed8 = and i32 %v3_f190, 64
  %v3_fed8 = icmp ne i32 %v2_fed8, 0
  store i1 %v3_fed8, i1* %cpsr_c.global-to-local, align 1
  %v4_fed8 = udiv i32 %v1_f1a0, 128
  %v5_fed8 = and i32 %v0_fed8, %v4_fed8
  store i32 %v5_fed8, i32* %r3.global-to-local, align 4
  %v6_fed8 = icmp eq i32 %v5_fed8, 0
  store i1 %v6_fed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fed8, label %dec_label_pc_fee0, label %dec_label_pc_f184

dec_label_pc_fee0:                                ; preds = %.thread294, %bb1622, %.thread293
  store i32 %.1969, i32* %r3.global-to-local, align 4
  %v2_fee4 = icmp ugt i32 %v1_f19c, 239
  store i1 %v2_fee4, i1* %cpsr_c.global-to-local, align 1
  %v7_fee4 = icmp eq i32 %v1_f19c, 240
  store i1 %v7_fee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fee4, label %.thread297, label %.thread298

.thread298:                                       ; preds = %dec_label_pc_fee0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff0c

.thread297:                                       ; preds = %dec_label_pc_fee0
  store i32 %.1969, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fef0 = icmp eq i1 %v7_f594, false
  store i1 %v2_fef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fef0, label %dec_label_pc_ff0c, label %dec_label_pc_fef8

dec_label_pc_fef8:                                ; preds = %.thread297
  %v2_fef8 = icmp ugt i32 %v1_f1a0, 141
  store i1 %v2_fef8, i1* %cpsr_c.global-to-local, align 1
  %v7_fef8 = icmp eq i32 %v1_f1a0, 142
  store i1 %v7_fef8, i1* %cpsr_z.global-to-local, align 1
  %v2_fefc = xor i1 %v7_fef8, true
  %v3_fefc = and i1 %v2_fef8, %v2_fefc
  br i1 %v3_fefc, label %bb1623, label %bb1624

bb1623:                                           ; preds = %dec_label_pc_fef8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1624

bb1624:                                           ; preds = %dec_label_pc_fef8, %bb1623
  %v0_ff04863 = phi i32 [ %.1969, %dec_label_pc_fef8 ], [ 0, %bb1623 ]
  %v2_ff00 = xor i1 %v2_fef8, true
  %v3_ff00 = or i1 %v7_fef8, %v2_ff00
  br i1 %v3_ff00, label %bb1625, label %bb1626

bb1625:                                           ; preds = %bb1624
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1626

bb1626:                                           ; preds = %bb1624, %bb1625
  %v0_ff04 = phi i32 [ %v0_ff04863, %bb1624 ], [ 1, %bb1625 ]
  %v2_ff04 = and i32 %v3_f190, 64
  %v3_ff04 = icmp ne i32 %v2_ff04, 0
  store i1 %v3_ff04, i1* %cpsr_c.global-to-local, align 1
  %v4_ff04 = udiv i32 %v1_f1a0, 128
  %v5_ff04 = and i32 %v0_ff04, %v4_ff04
  store i32 %v5_ff04, i32* %r3.global-to-local, align 4
  %v6_ff04 = icmp eq i32 %v5_ff04, 0
  store i1 %v6_ff04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_ff04, label %dec_label_pc_ff0c, label %dec_label_pc_f184

dec_label_pc_ff0c:                                ; preds = %.thread298, %bb1626, %.thread297
  store i32 %.1954, i32* %r3.global-to-local, align 4
  %v2_ff10 = icmp ugt i32 %v1_f188, 81
  store i1 %v2_ff10, i1* %cpsr_c.global-to-local, align 1
  %v7_ff10 = icmp eq i32 %v1_f188, 82
  store i1 %v7_ff10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff10, label %.thread301, label %.thread302

.thread302:                                       ; preds = %dec_label_pc_ff0c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff3c

.thread301:                                       ; preds = %dec_label_pc_ff0c
  store i32 %.1954, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff1c = icmp eq i1 %v7_f35c, false
  store i1 %v2_ff1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff1c, label %dec_label_pc_ff3c, label %dec_label_pc_ff24

dec_label_pc_ff24:                                ; preds = %.thread301
  store i32 %v1_f1a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff24 = icmp eq i32 %v1_f1a0, 0
  store i1 %v2_ff24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff24, label %bb1628, label %bb1627

bb1627:                                           ; preds = %dec_label_pc_ff24
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1628

bb1628:                                           ; preds = %dec_label_pc_ff24, %bb1627
  %v0_ff34.pr = phi i32 [ 0, %dec_label_pc_ff24 ], [ 1, %bb1627 ]
  %v2_ff2c = icmp ugt i32 %v1_f1a0, 13
  store i1 %v2_ff2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff2c = icmp eq i32 %v1_f1a0, 14
  store i1 %v7_ff2c, i1* %cpsr_z.global-to-local, align 1
  %v2_ff30 = xor i1 %v7_ff2c, true
  %v3_ff30 = and i1 %v2_ff2c, %v2_ff30
  br i1 %v3_ff30, label %.thread306, label %bb1629

.thread306:                                       ; preds = %bb1628
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff3c

bb1629:                                           ; preds = %bb1628
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff34 = icmp eq i32 %v0_ff34.pr, 0
  store i1 %v2_ff34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff34, label %dec_label_pc_ff3c, label %dec_label_pc_f184

dec_label_pc_ff3c:                                ; preds = %.thread306, %.thread302, %bb1629, %.thread301
  store i32 %.1963, i32* %r3.global-to-local, align 4
  %v2_ff40 = icmp ugt i32 %v1_f188, 94
  store i1 %v2_ff40, i1* %cpsr_c.global-to-local, align 1
  %v7_ff40 = icmp eq i32 %v1_f188, 95
  store i1 %v7_ff40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff40, label %.thread309, label %.thread310

.thread310:                                       ; preds = %dec_label_pc_ff3c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff70

.thread309:                                       ; preds = %dec_label_pc_ff3c
  store i32 %.1963, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff4c = icmp eq i1 %v7_f4d8, false
  store i1 %v2_ff4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff4c, label %dec_label_pc_ff70, label %dec_label_pc_ff54

dec_label_pc_ff54:                                ; preds = %.thread309
  %v2_ff54 = icmp ugt i32 %v1_f1a0, 6
  store i1 %v2_ff54, i1* %cpsr_c.global-to-local, align 1
  %v7_ff54 = icmp eq i32 %v1_f1a0, 7
  store i1 %v7_ff54, i1* %cpsr_z.global-to-local, align 1
  %v2_ff58 = xor i1 %v2_ff54, true
  %v3_ff58 = or i1 %v7_ff54, %v2_ff58
  br i1 %v3_ff58, label %bb1630, label %bb1631

bb1630:                                           ; preds = %dec_label_pc_ff54
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1631

bb1631:                                           ; preds = %dec_label_pc_ff54, %bb1630
  %v0_ff68.pr868 = phi i32 [ %.1963, %dec_label_pc_ff54 ], [ 0, %bb1630 ]
  %v2_ff5c = xor i1 %v7_ff54, true
  %v3_ff5c = and i1 %v2_ff54, %v2_ff5c
  br i1 %v3_ff5c, label %bb1632, label %bb1633

bb1632:                                           ; preds = %bb1631
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1633

bb1633:                                           ; preds = %bb1631, %bb1632
  %v0_ff68.pr = phi i32 [ %v0_ff68.pr868, %bb1631 ], [ 1, %bb1632 ]
  %v2_ff60 = icmp ugt i32 %v1_f1a0, 61
  store i1 %v2_ff60, i1* %cpsr_c.global-to-local, align 1
  %v7_ff60 = icmp eq i32 %v1_f1a0, 62
  store i1 %v7_ff60, i1* %cpsr_z.global-to-local, align 1
  %v2_ff64 = xor i1 %v7_ff60, true
  %v3_ff64 = and i1 %v2_ff60, %v2_ff64
  br i1 %v3_ff64, label %.thread314, label %bb1634

.thread314:                                       ; preds = %bb1633
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff70

bb1634:                                           ; preds = %bb1633
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff68 = icmp eq i32 %v0_ff68.pr, 0
  store i1 %v2_ff68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff68, label %dec_label_pc_ff70, label %dec_label_pc_f184

dec_label_pc_ff70:                                ; preds = %.thread314, %.thread310, %bb1634, %.thread309
  store i32 %.1971, i32* %fp.global-to-local, align 4
  store i1 %v2_f93c, i1* %cpsr_c.global-to-local, align 1
  %.1995 = zext i1 %v7_f93c to i32
  store i32 %.1995, i32* %r4.global-to-local, align 4
  %v2_ff80 = and i32 %.1995, %.1971
  %v4_ff80 = icmp eq i32 %v2_ff80, 0
  store i1 %v4_ff80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff80, label %dec_label_pc_ffa4, label %dec_label_pc_ff88

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff70
  %v2_ff88 = icmp ugt i32 %v1_f1a0, 30
  store i1 %v2_ff88, i1* %cpsr_c.global-to-local, align 1
  %v7_ff88 = icmp eq i32 %v1_f1a0, 31
  store i1 %v7_ff88, i1* %cpsr_z.global-to-local, align 1
  %v2_ff8c = xor i1 %v2_ff88, true
  %v3_ff8c = or i1 %v7_ff88, %v2_ff8c
  br i1 %v3_ff8c, label %bb1637, label %bb1638

bb1637:                                           ; preds = %dec_label_pc_ff88
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1638

bb1638:                                           ; preds = %dec_label_pc_ff88, %bb1637
  %v2_ff90 = xor i1 %v7_ff88, true
  %v3_ff90 = and i1 %v2_ff88, %v2_ff90
  br i1 %v3_ff90, label %bb1639, label %bb1640

bb1639:                                           ; preds = %bb1638
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1640

bb1640:                                           ; preds = %bb1638, %bb1639
  %v0_ff9c.pr = phi i32 [ 0, %bb1638 ], [ 1, %bb1639 ]
  %v2_ff94 = icmp ugt i32 %v1_f1a0, 41
  store i1 %v2_ff94, i1* %cpsr_c.global-to-local, align 1
  %v7_ff94 = icmp eq i32 %v1_f1a0, 42
  store i1 %v7_ff94, i1* %cpsr_z.global-to-local, align 1
  %v2_ff98 = xor i1 %v7_ff94, true
  %v3_ff98 = and i1 %v2_ff94, %v2_ff98
  br i1 %v3_ff98, label %.thread319, label %bb1641

.thread319:                                       ; preds = %bb1640
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffa4

bb1641:                                           ; preds = %bb1640
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff9c = icmp eq i32 %v0_ff9c.pr, 0
  store i1 %v2_ff9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff9c, label %dec_label_pc_ffa4, label %dec_label_pc_f184

dec_label_pc_ffa4:                                ; preds = %.thread319, %bb1641, %dec_label_pc_ff70
  %v7_ffa4 = icmp eq i32 %v1_f188, 185
  %.1996 = zext i1 %v7_ffa4 to i32
  %v2_ffb0 = icmp ugt i32 %v1_f19c, 91
  store i1 %v2_ffb0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb0 = icmp eq i32 %v1_f19c, 92
  store i1 %v7_ffb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb0, label %bb1644, label %dec_label_pc_ffd8

bb1644:                                           ; preds = %dec_label_pc_ffa4
  %v2_ffa4 = icmp ugt i32 %v1_f188, 184
  store i1 %v2_ffa4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ffa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffa4, label %dec_label_pc_ffbc, label %dec_label_pc_ffd8

dec_label_pc_ffbc:                                ; preds = %bb1644
  %v2_ffbc = icmp ugt i32 %v1_f1a0, 218
  store i1 %v2_ffbc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffbc = icmp eq i32 %v1_f1a0, 219
  store i1 %v7_ffbc, i1* %cpsr_z.global-to-local, align 1
  %v2_ffc0 = xor i1 %v2_ffbc, true
  %v3_ffc0 = or i1 %v7_ffbc, %v2_ffc0
  br i1 %v3_ffc0, label %bb1645, label %bb1646

bb1645:                                           ; preds = %dec_label_pc_ffbc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1646

bb1646:                                           ; preds = %dec_label_pc_ffbc, %bb1645
  %v2_ffc4 = xor i1 %v7_ffbc, true
  %v3_ffc4 = and i1 %v2_ffbc, %v2_ffc4
  br i1 %v3_ffc4, label %bb1647, label %bb1648

bb1647:                                           ; preds = %bb1646
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1648

bb1648:                                           ; preds = %bb1646, %bb1647
  %v0_ffd0.pr = phi i32 [ 0, %bb1646 ], [ 1, %bb1647 ]
  %v2_ffc8 = icmp ugt i32 %v1_f1a0, 221
  store i1 %v2_ffc8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc8 = icmp eq i32 %v1_f1a0, 222
  store i1 %v7_ffc8, i1* %cpsr_z.global-to-local, align 1
  %v2_ffcc = xor i1 %v7_ffc8, true
  %v3_ffcc = and i1 %v2_ffc8, %v2_ffcc
  br i1 %v3_ffcc, label %.thread325, label %bb1649

.thread325:                                       ; preds = %bb1648
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffd8

bb1649:                                           ; preds = %bb1648
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffd0 = icmp eq i32 %v0_ffd0.pr, 0
  store i1 %v2_ffd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffd0, label %dec_label_pc_ffd8, label %dec_label_pc_f184

dec_label_pc_ffd8:                                ; preds = %dec_label_pc_ffa4, %.thread325, %bb1649, %bb1644
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_ffdc = icmp ugt i32 %v1_f19c, 237
  store i1 %v2_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffdc = icmp eq i32 %v1_f19c, 238
  store i1 %v7_ffdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffdc, label %.thread328, label %.thread329

.thread329:                                       ; preds = %dec_label_pc_ffd8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10004

.thread328:                                       ; preds = %dec_label_pc_ffd8
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffe8 = icmp eq i1 %v7_fbe0, false
  store i1 %v2_ffe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffe8, label %dec_label_pc_10004, label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %.thread328
  %v2_fff0 = icmp ugt i32 %v1_f1a0, 189
  store i1 %v2_fff0, i1* %cpsr_c.global-to-local, align 1
  %v7_fff0 = icmp eq i32 %v1_f1a0, 190
  store i1 %v7_fff0, i1* %cpsr_z.global-to-local, align 1
  %v2_fff4 = xor i1 %v7_fff0, true
  %v3_fff4 = and i1 %v2_fff0, %v2_fff4
  br i1 %v3_fff4, label %bb1650, label %bb1651

bb1650:                                           ; preds = %dec_label_pc_fff0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1651

bb1651:                                           ; preds = %dec_label_pc_fff0, %bb1650
  %v0_fffc878 = phi i32 [ %.1987, %dec_label_pc_fff0 ], [ 0, %bb1650 ]
  %v2_fff8 = xor i1 %v2_fff0, true
  %v3_fff8 = or i1 %v7_fff0, %v2_fff8
  br i1 %v3_fff8, label %bb1652, label %bb1653

bb1652:                                           ; preds = %bb1651
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1653

bb1653:                                           ; preds = %bb1651, %bb1652
  %v0_fffc = phi i32 [ %v0_fffc878, %bb1651 ], [ 1, %bb1652 ]
  %v2_fffc = and i32 %v3_f190, 64
  %v3_fffc = icmp ne i32 %v2_fffc, 0
  store i1 %v3_fffc, i1* %cpsr_c.global-to-local, align 1
  %v4_fffc = udiv i32 %v1_f1a0, 128
  %v5_fffc = and i32 %v0_fffc, %v4_fffc
  store i32 %v5_fffc, i32* %r3.global-to-local, align 4
  %v6_fffc = icmp eq i32 %v5_fffc, 0
  store i1 %v6_fffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fffc, label %dec_label_pc_10004, label %dec_label_pc_f184

dec_label_pc_10004:                               ; preds = %.thread329, %bb1653, %.thread328
  store i32 %.1970, i32* %r3.global-to-local, align 4
  %v2_10008 = icmp ugt i32 %v1_f19c, 221
  store i1 %v2_10008, i1* %cpsr_c.global-to-local, align 1
  %v7_10008 = icmp eq i32 %v1_f19c, 222
  store i1 %v7_10008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10008, label %.thread332, label %.thread333

.thread333:                                       ; preds = %dec_label_pc_10004
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10034

.thread332:                                       ; preds = %dec_label_pc_10004
  store i32 %.1970, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10014 = icmp eq i1 %v7_f5c8, false
  store i1 %v2_10014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10014, label %dec_label_pc_10034, label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %.thread332
  store i32 %v1_f1a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1001c = icmp eq i32 %v1_f1a0, 0
  store i1 %v2_1001c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1001c, label %bb1655, label %bb1654

bb1654:                                           ; preds = %dec_label_pc_1001c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1655

bb1655:                                           ; preds = %dec_label_pc_1001c, %bb1654
  %v0_1002c.pr = phi i32 [ 0, %dec_label_pc_1001c ], [ 1, %bb1654 ]
  %v2_10024 = icmp ugt i32 %v1_f1a0, 29
  store i1 %v2_10024, i1* %cpsr_c.global-to-local, align 1
  %v7_10024 = icmp eq i32 %v1_f1a0, 30
  store i1 %v7_10024, i1* %cpsr_z.global-to-local, align 1
  %v2_10028 = xor i1 %v7_10024, true
  %v3_10028 = and i1 %v2_10024, %v2_10028
  br i1 %v3_10028, label %.thread337, label %bb1656

.thread337:                                       ; preds = %bb1655
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10034

bb1656:                                           ; preds = %bb1655
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1002c = icmp eq i32 %v0_1002c.pr, 0
  store i1 %v2_1002c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1002c, label %dec_label_pc_10034, label %dec_label_pc_f184

dec_label_pc_10034:                               ; preds = %.thread337, %.thread333, %bb1656, %.thread332
  %v7_10034 = icmp eq i32 %v1_f188, 208
  %.1997 = zext i1 %v7_10034 to i32
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 %v2_f904, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f904, label %bb1659, label %dec_label_pc_1006c

bb1659:                                           ; preds = %dec_label_pc_10034
  %v2_10034 = icmp ugt i32 %v1_f188, 207
  store i1 %v2_10034, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10034, label %dec_label_pc_10050, label %dec_label_pc_1006c

dec_label_pc_10050:                               ; preds = %bb1659
  %v2_10050 = icmp ugt i32 %v1_f1a0, 230
  store i1 %v2_10050, i1* %cpsr_c.global-to-local, align 1
  %v7_10050 = icmp eq i32 %v1_f1a0, 231
  store i1 %v7_10050, i1* %cpsr_z.global-to-local, align 1
  %v2_10054 = xor i1 %v2_10050, true
  %v3_10054 = or i1 %v7_10050, %v2_10054
  br i1 %v3_10054, label %bb1660, label %bb1661

bb1660:                                           ; preds = %dec_label_pc_10050
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1661

bb1661:                                           ; preds = %dec_label_pc_10050, %bb1660
  %v0_10064.pr883 = phi i32 [ %.1997, %dec_label_pc_10050 ], [ 0, %bb1660 ]
  %v2_10058 = xor i1 %v7_10050, true
  %v3_10058 = and i1 %v2_10050, %v2_10058
  br i1 %v3_10058, label %bb1662, label %bb1663

bb1662:                                           ; preds = %bb1661
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1663

bb1663:                                           ; preds = %bb1661, %bb1662
  %v0_10064.pr = phi i32 [ %v0_10064.pr883, %bb1661 ], [ 1, %bb1662 ]
  %v2_1005c = icmp ugt i32 %v1_f1a0, 250
  store i1 %v2_1005c, i1* %cpsr_c.global-to-local, align 1
  %v7_1005c = icmp eq i32 %v1_f1a0, 251
  store i1 %v7_1005c, i1* %cpsr_z.global-to-local, align 1
  %v2_10060 = xor i1 %v7_1005c, true
  %v3_10060 = and i1 %v2_1005c, %v2_10060
  br i1 %v3_10060, label %.thread345, label %bb1664

.thread345:                                       ; preds = %bb1663
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1006c

bb1664:                                           ; preds = %bb1663
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10064 = icmp eq i32 %v0_10064.pr, 0
  store i1 %v2_10064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10064, label %dec_label_pc_1006c, label %dec_label_pc_f184

dec_label_pc_1006c:                               ; preds = %dec_label_pc_10034, %.thread345, %bb1664, %bb1659
  store i32 %.1967, i32* %r3.global-to-local, align 4
  %v2_10070 = icmp ugt i32 %v1_f188, 65
  store i1 %v2_10070, i1* %cpsr_c.global-to-local, align 1
  %v7_10070 = icmp eq i32 %v1_f188, 66
  %.1998 = zext i1 %v7_10070 to i32
  store i32 %.1998, i32* %fp.global-to-local, align 4
  %v2_1007c = and i32 %.1967, %.1998
  %v4_1007c = icmp eq i32 %v2_1007c, 0
  store i1 %v4_1007c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1007c, label %dec_label_pc_1009c, label %dec_label_pc_10088

dec_label_pc_10088:                               ; preds = %dec_label_pc_1006c
  %v2_10088 = icmp ugt i32 %v1_f1a0, 157
  store i1 %v2_10088, i1* %cpsr_c.global-to-local, align 1
  %v7_10088 = icmp eq i32 %v1_f1a0, 158
  store i1 %v7_10088, i1* %cpsr_z.global-to-local, align 1
  %v2_1008c = xor i1 %v7_10088, true
  %v3_1008c = and i1 %v2_10088, %v2_1008c
  br i1 %v3_1008c, label %bb1667, label %bb1668

bb1667:                                           ; preds = %dec_label_pc_10088
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1668

bb1668:                                           ; preds = %dec_label_pc_10088, %bb1667
  %v0_10094886 = phi i32 [ %.1967, %dec_label_pc_10088 ], [ 0, %bb1667 ]
  %v2_10090 = xor i1 %v2_10088, true
  %v3_10090 = or i1 %v7_10088, %v2_10090
  br i1 %v3_10090, label %bb1669, label %bb1670

bb1669:                                           ; preds = %bb1668
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1670

bb1670:                                           ; preds = %bb1668, %bb1669
  %v0_10094 = phi i32 [ %v0_10094886, %bb1668 ], [ 1, %bb1669 ]
  %v2_10094 = and i32 %v3_f190, 64
  %v3_10094 = icmp ne i32 %v2_10094, 0
  store i1 %v3_10094, i1* %cpsr_c.global-to-local, align 1
  %v4_10094 = udiv i32 %v1_f1a0, 128
  %v5_10094 = and i32 %v0_10094, %v4_10094
  store i32 %v5_10094, i32* %r3.global-to-local, align 4
  %v6_10094 = icmp eq i32 %v5_10094, 0
  store i1 %v6_10094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10094, label %dec_label_pc_1009c, label %dec_label_pc_f184

dec_label_pc_1009c:                               ; preds = %bb1670, %dec_label_pc_1006c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 %v2_f630, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f630, label %.thread349, label %.thread350

.thread350:                                       ; preds = %dec_label_pc_1009c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100cc

.thread349:                                       ; preds = %dec_label_pc_1009c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100ac = icmp eq i1 %v7_fc64, false
  store i1 %v2_100ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100ac, label %dec_label_pc_100cc, label %dec_label_pc_100b4

dec_label_pc_100b4:                               ; preds = %.thread349
  store i32 %v1_f1a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100b4 = icmp eq i32 %v1_f1a0, 0
  store i1 %v2_100b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100b4, label %bb1672, label %bb1671

bb1671:                                           ; preds = %dec_label_pc_100b4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1672

bb1672:                                           ; preds = %dec_label_pc_100b4, %bb1671
  %v0_100c4.pr = phi i32 [ 0, %dec_label_pc_100b4 ], [ 1, %bb1671 ]
  %v2_100bc = icmp ugt i32 %v1_f1a0, 125
  store i1 %v2_100bc, i1* %cpsr_c.global-to-local, align 1
  %v7_100bc = icmp eq i32 %v1_f1a0, 126
  store i1 %v7_100bc, i1* %cpsr_z.global-to-local, align 1
  %v2_100c0 = xor i1 %v7_100bc, true
  %v3_100c0 = and i1 %v2_100bc, %v2_100c0
  br i1 %v3_100c0, label %.thread354, label %bb1673

.thread354:                                       ; preds = %bb1672
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100cc

bb1673:                                           ; preds = %bb1672
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100c4 = icmp eq i32 %v0_100c4.pr, 0
  store i1 %v2_100c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100c4, label %dec_label_pc_100cc, label %dec_label_pc_f184

dec_label_pc_100cc:                               ; preds = %.thread354, %.thread350, %bb1673, %.thread349
  %v2_100cc = icmp ugt i32 %v1_f188, 215
  store i1 %v2_100cc, i1* %cpsr_c.global-to-local, align 1
  %v7_100cc = icmp eq i32 %v1_f188, 216
  store i1 %v7_100cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100cc, label %.thread357, label %.thread358

.thread358:                                       ; preds = %dec_label_pc_100cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100f4

.thread357:                                       ; preds = %dec_label_pc_100cc
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100d8 = icmp eq i1 %v7_f93c, false
  store i1 %v2_100d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100d8, label %dec_label_pc_100f4, label %dec_label_pc_100e0

dec_label_pc_100e0:                               ; preds = %.thread357
  %v2_100e0 = icmp ugt i32 %v1_f1a0, 157
  store i1 %v2_100e0, i1* %cpsr_c.global-to-local, align 1
  %v7_100e0 = icmp eq i32 %v1_f1a0, 158
  store i1 %v7_100e0, i1* %cpsr_z.global-to-local, align 1
  %v2_100e4 = xor i1 %v7_100e0, true
  %v3_100e4 = and i1 %v2_100e0, %v2_100e4
  br i1 %v3_100e4, label %bb1674, label %bb1675

bb1674:                                           ; preds = %dec_label_pc_100e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1675

bb1675:                                           ; preds = %dec_label_pc_100e0, %bb1674
  %v0_100ec890 = phi i32 [ %.1995, %dec_label_pc_100e0 ], [ 0, %bb1674 ]
  %v2_100e8 = xor i1 %v2_100e0, true
  %v3_100e8 = or i1 %v7_100e0, %v2_100e8
  br i1 %v3_100e8, label %bb1676, label %bb1677

bb1676:                                           ; preds = %bb1675
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1677

bb1677:                                           ; preds = %bb1675, %bb1676
  %v0_100ec = phi i32 [ %v0_100ec890, %bb1675 ], [ 1, %bb1676 ]
  %v2_100ec = and i32 %v3_f190, 64
  %v3_100ec = icmp ne i32 %v2_100ec, 0
  store i1 %v3_100ec, i1* %cpsr_c.global-to-local, align 1
  %v4_100ec = udiv i32 %v1_f1a0, 128
  %v5_100ec = and i32 %v0_100ec, %v4_100ec
  store i32 %v5_100ec, i32* %r3.global-to-local, align 4
  %v6_100ec = icmp eq i32 %v5_100ec, 0
  store i1 %v6_100ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_100ec, label %dec_label_pc_100f4, label %dec_label_pc_f184

dec_label_pc_100f4:                               ; preds = %.thread358, %bb1677, %.thread357
  %v2_100f4 = icmp ugt i32 %v1_f19c, 60
  %v7_100f4 = icmp eq i32 %v1_f19c, 61
  %.1999 = zext i1 %v7_100f4 to i32
  store i32 %.1999, i32* %r4.global-to-local, align 4
  %v2_10100 = icmp ugt i32 %v1_f188, 107
  store i1 %v2_10100, i1* %cpsr_c.global-to-local, align 1
  %v7_10100 = icmp eq i32 %v1_f188, 108
  store i1 %v7_10100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10100, label %bb1680, label %dec_label_pc_1010c

bb1680:                                           ; preds = %dec_label_pc_100f4
  store i1 %v2_100f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100f4, label %dec_label_pc_f184, label %dec_label_pc_1010c

dec_label_pc_1010c:                               ; preds = %dec_label_pc_100f4, %bb1680
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_10110 = icmp ugt i32 %v1_f19c, 75
  store i1 %v2_10110, i1* %cpsr_c.global-to-local, align 1
  %v7_10110 = icmp eq i32 %v1_f19c, 76
  store i1 %v7_10110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10110, label %.thread363, label %.thread364

.thread364:                                       ; preds = %dec_label_pc_1010c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10124

.thread363:                                       ; preds = %dec_label_pc_1010c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1011c = icmp eq i1 %v7_fc64, false
  store i1 %v2_1011c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1011c, label %dec_label_pc_10124, label %dec_label_pc_f184

dec_label_pc_10124:                               ; preds = %.thread364, %.thread363
  %v2_10124 = icmp ugt i32 %v1_f19c, 10
  store i1 %v2_10124, i1* %cpsr_c.global-to-local, align 1
  %v7_10124 = icmp eq i32 %v1_f19c, 11
  store i1 %v7_10124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10124, label %.thread367, label %.thread368

.thread368:                                       ; preds = %dec_label_pc_10124
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10154

.thread367:                                       ; preds = %dec_label_pc_10124
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10130 = icmp eq i1 %v7_ffa4, false
  store i1 %v2_10130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10130, label %dec_label_pc_10154, label %dec_label_pc_10138

dec_label_pc_10138:                               ; preds = %.thread367
  %v2_10138 = icmp ugt i32 %v1_f1a0, 142
  store i1 %v2_10138, i1* %cpsr_c.global-to-local, align 1
  %v7_10138 = icmp eq i32 %v1_f1a0, 143
  store i1 %v7_10138, i1* %cpsr_z.global-to-local, align 1
  %v2_1013c = xor i1 %v2_10138, true
  %v3_1013c = or i1 %v7_10138, %v2_1013c
  br i1 %v3_1013c, label %bb1681, label %bb1682

bb1681:                                           ; preds = %dec_label_pc_10138
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1682

bb1682:                                           ; preds = %dec_label_pc_10138, %bb1681
  %v0_1014c.pr894 = phi i32 [ %.1996, %dec_label_pc_10138 ], [ 0, %bb1681 ]
  %v2_10140 = xor i1 %v7_10138, true
  %v3_10140 = and i1 %v2_10138, %v2_10140
  br i1 %v3_10140, label %bb1683, label %bb1684

bb1683:                                           ; preds = %bb1682
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1684

bb1684:                                           ; preds = %bb1682, %bb1683
  %v0_1014c.pr = phi i32 [ %v0_1014c.pr894, %bb1682 ], [ 1, %bb1683 ]
  %v2_10144 = icmp ugt i32 %v1_f1a0, 146
  store i1 %v2_10144, i1* %cpsr_c.global-to-local, align 1
  %v7_10144 = icmp eq i32 %v1_f1a0, 147
  store i1 %v7_10144, i1* %cpsr_z.global-to-local, align 1
  %v2_10148 = xor i1 %v7_10144, true
  %v3_10148 = and i1 %v2_10144, %v2_10148
  br i1 %v3_10148, label %.thread372, label %bb1685

.thread372:                                       ; preds = %bb1684
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10154

bb1685:                                           ; preds = %bb1684
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1014c = icmp eq i32 %v0_1014c.pr, 0
  store i1 %v2_1014c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1014c, label %dec_label_pc_10154, label %dec_label_pc_f184

dec_label_pc_10154:                               ; preds = %.thread372, %.thread368, %bb1685, %.thread367
  store i32 %.1968, i32* %fp.global-to-local, align 4
  %v2_10158 = and i32 %.1968, %.1996
  %v4_10158 = icmp eq i32 %v2_10158, 0
  store i1 %v4_10158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10158, label %dec_label_pc_1017c, label %dec_label_pc_10160

dec_label_pc_10160:                               ; preds = %dec_label_pc_10154
  %v2_10160 = icmp ugt i32 %v1_f1a0, 19
  store i1 %v2_10160, i1* %cpsr_c.global-to-local, align 1
  %v7_10160 = icmp eq i32 %v1_f1a0, 20
  store i1 %v7_10160, i1* %cpsr_z.global-to-local, align 1
  %v2_10164 = xor i1 %v2_10160, true
  %v3_10164 = or i1 %v7_10160, %v2_10164
  br i1 %v3_10164, label %bb1686, label %bb1687

bb1686:                                           ; preds = %dec_label_pc_10160
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1687

bb1687:                                           ; preds = %dec_label_pc_10160, %bb1686
  %v2_10168 = xor i1 %v7_10160, true
  %v3_10168 = and i1 %v2_10160, %v2_10168
  br i1 %v3_10168, label %bb1688, label %bb1689

bb1688:                                           ; preds = %bb1687
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1689

bb1689:                                           ; preds = %bb1687, %bb1688
  %v0_10174.pr = phi i32 [ 0, %bb1687 ], [ 1, %bb1688 ]
  %v2_1016c = icmp ugt i32 %v1_f1a0, 21
  store i1 %v2_1016c, i1* %cpsr_c.global-to-local, align 1
  %v7_1016c = icmp eq i32 %v1_f1a0, 22
  store i1 %v7_1016c, i1* %cpsr_z.global-to-local, align 1
  %v2_10170 = xor i1 %v7_1016c, true
  %v3_10170 = and i1 %v2_1016c, %v2_10170
  br i1 %v3_10170, label %.thread376, label %bb1690

.thread376:                                       ; preds = %bb1689
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1017c

bb1690:                                           ; preds = %bb1689
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10174 = icmp eq i32 %v0_10174.pr, 0
  store i1 %v2_10174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10174, label %dec_label_pc_1017c, label %dec_label_pc_f184

dec_label_pc_1017c:                               ; preds = %.thread376, %bb1690, %dec_label_pc_10154
  %v2_1017c = and i32 %.1999, %.1996
  %v4_1017c = icmp eq i32 %v2_1017c, 0
  store i1 %v4_1017c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1017c, label %dec_label_pc_101a0, label %dec_label_pc_10184

dec_label_pc_10184:                               ; preds = %dec_label_pc_1017c
  %v2_10184 = icmp ugt i32 %v1_f1a0, 134
  store i1 %v2_10184, i1* %cpsr_c.global-to-local, align 1
  %v7_10184 = icmp eq i32 %v1_f1a0, 135
  store i1 %v7_10184, i1* %cpsr_z.global-to-local, align 1
  %v2_10188 = xor i1 %v2_10184, true
  %v3_10188 = or i1 %v7_10184, %v2_10188
  br i1 %v3_10188, label %bb1691, label %bb1692

bb1691:                                           ; preds = %dec_label_pc_10184
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1692

bb1692:                                           ; preds = %dec_label_pc_10184, %bb1691
  %v2_1018c = xor i1 %v7_10184, true
  %v3_1018c = and i1 %v2_10184, %v2_1018c
  br i1 %v3_1018c, label %bb1693, label %bb1694

bb1693:                                           ; preds = %bb1692
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1694

bb1694:                                           ; preds = %bb1692, %bb1693
  %v0_10198.pr = phi i32 [ 0, %bb1692 ], [ 1, %bb1693 ]
  %v2_10190 = icmp ugt i32 %v1_f1a0, 137
  store i1 %v2_10190, i1* %cpsr_c.global-to-local, align 1
  %v7_10190 = icmp eq i32 %v1_f1a0, 138
  store i1 %v7_10190, i1* %cpsr_z.global-to-local, align 1
  %v2_10194 = xor i1 %v7_10190, true
  %v3_10194 = and i1 %v2_10190, %v2_10194
  br i1 %v3_10194, label %.thread380, label %bb1695

.thread380:                                       ; preds = %bb1694
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101a0

bb1695:                                           ; preds = %bb1694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10198 = icmp eq i32 %v0_10198.pr, 0
  store i1 %v2_10198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10198, label %dec_label_pc_101a0, label %dec_label_pc_f184

dec_label_pc_101a0:                               ; preds = %.thread380, %bb1695, %dec_label_pc_1017c
  store i32 %storemerge1223, i32* %r3.global-to-local, align 4
  %v2_101a4 = and i32 %storemerge1223, %.1996
  %v4_101a4 = icmp eq i32 %v2_101a4, 0
  store i1 %v4_101a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_101a4, label %dec_label_pc_101c8, label %dec_label_pc_101ac

dec_label_pc_101ac:                               ; preds = %dec_label_pc_101a0
  %v2_101ac = icmp ugt i32 %v1_f1a0, 185
  store i1 %v2_101ac, i1* %cpsr_c.global-to-local, align 1
  %v7_101ac = icmp eq i32 %v1_f1a0, 186
  store i1 %v7_101ac, i1* %cpsr_z.global-to-local, align 1
  %v2_101b0 = xor i1 %v2_101ac, true
  %v3_101b0 = or i1 %v7_101ac, %v2_101b0
  br i1 %v3_101b0, label %bb1696, label %bb1697

bb1696:                                           ; preds = %dec_label_pc_101ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1697

bb1697:                                           ; preds = %dec_label_pc_101ac, %bb1696
  %v0_101c0.pr903 = phi i32 [ %storemerge1223, %dec_label_pc_101ac ], [ 0, %bb1696 ]
  %v2_101b4 = xor i1 %v7_101ac, true
  %v3_101b4 = and i1 %v2_101ac, %v2_101b4
  br i1 %v3_101b4, label %bb1698, label %bb1699

bb1698:                                           ; preds = %bb1697
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1699

bb1699:                                           ; preds = %bb1697, %bb1698
  %v0_101c0.pr = phi i32 [ %v0_101c0.pr903, %bb1697 ], [ 1, %bb1698 ]
  %v2_101b8 = icmp ugt i32 %v1_f1a0, 189
  store i1 %v2_101b8, i1* %cpsr_c.global-to-local, align 1
  %v7_101b8 = icmp eq i32 %v1_f1a0, 190
  store i1 %v7_101b8, i1* %cpsr_z.global-to-local, align 1
  %v2_101bc = xor i1 %v7_101b8, true
  %v3_101bc = and i1 %v2_101b8, %v2_101bc
  br i1 %v3_101bc, label %.thread384, label %bb1700

.thread384:                                       ; preds = %bb1699
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101c8

bb1700:                                           ; preds = %bb1699
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101c0 = icmp eq i32 %v0_101c0.pr, 0
  store i1 %v2_101c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101c0, label %dec_label_pc_101c8, label %dec_label_pc_f184

dec_label_pc_101c8:                               ; preds = %.thread384, %bb1700, %dec_label_pc_101a0
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 %v2_f978, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f978, label %.thread387, label %.thread388

.thread388:                                       ; preds = %dec_label_pc_101c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101fc

.thread387:                                       ; preds = %dec_label_pc_101c8
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101d8 = icmp eq i1 %v7_10070, false
  store i1 %v2_101d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101d8, label %dec_label_pc_101fc, label %dec_label_pc_101e0

dec_label_pc_101e0:                               ; preds = %.thread387
  %v2_101e0 = icmp ugt i32 %v1_f1a0, 118
  store i1 %v2_101e0, i1* %cpsr_c.global-to-local, align 1
  %v7_101e0 = icmp eq i32 %v1_f1a0, 119
  store i1 %v7_101e0, i1* %cpsr_z.global-to-local, align 1
  %v2_101e4 = xor i1 %v2_101e0, true
  %v3_101e4 = or i1 %v7_101e0, %v2_101e4
  br i1 %v3_101e4, label %bb1701, label %bb1702

bb1701:                                           ; preds = %dec_label_pc_101e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1702

bb1702:                                           ; preds = %dec_label_pc_101e0, %bb1701
  %v0_101f4.pr906 = phi i32 [ %.1998, %dec_label_pc_101e0 ], [ 0, %bb1701 ]
  %v2_101e8 = xor i1 %v7_101e0, true
  %v3_101e8 = and i1 %v2_101e0, %v2_101e8
  br i1 %v3_101e8, label %bb1703, label %bb1704

bb1703:                                           ; preds = %bb1702
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1704

bb1704:                                           ; preds = %bb1702, %bb1703
  %v0_101f4.pr = phi i32 [ %v0_101f4.pr906, %bb1702 ], [ 1, %bb1703 ]
  %v2_101ec = icmp ugt i32 %v1_f1a0, 213
  store i1 %v2_101ec, i1* %cpsr_c.global-to-local, align 1
  %v7_101ec = icmp eq i32 %v1_f1a0, 214
  store i1 %v7_101ec, i1* %cpsr_z.global-to-local, align 1
  %v2_101f0 = xor i1 %v7_101ec, true
  %v3_101f0 = and i1 %v2_101ec, %v2_101f0
  br i1 %v3_101f0, label %.thread392, label %bb1705

.thread392:                                       ; preds = %bb1704
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_101fc

bb1705:                                           ; preds = %bb1704
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101f4 = icmp eq i32 %v0_101f4.pr, 0
  store i1 %v2_101f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_101f4, label %dec_label_pc_101fc, label %dec_label_pc_f184

dec_label_pc_101fc:                               ; preds = %.thread392, %.thread388, %bb1705, %.thread387
  store i32 %.1998, i32* %r3.global-to-local, align 4
  %v2_10200 = icmp ugt i32 %v1_f19c, 150
  store i1 %v2_10200, i1* %cpsr_c.global-to-local, align 1
  %v7_10200 = icmp eq i32 %v1_f19c, 151
  store i1 %v7_10200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10200, label %.thread395, label %.thread396

.thread396:                                       ; preds = %dec_label_pc_101fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10230

.thread395:                                       ; preds = %dec_label_pc_101fc
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1020c = icmp eq i1 %v7_10070, false
  store i1 %v2_1020c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1020c, label %dec_label_pc_10230, label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %.thread395
  %v2_10214 = icmp ugt i32 %v1_f1a0, 135
  store i1 %v2_10214, i1* %cpsr_c.global-to-local, align 1
  %v7_10214 = icmp eq i32 %v1_f1a0, 136
  store i1 %v7_10214, i1* %cpsr_z.global-to-local, align 1
  %v2_10218 = xor i1 %v2_10214, true
  %v3_10218 = or i1 %v7_10214, %v2_10218
  br i1 %v3_10218, label %bb1706, label %bb1707

bb1706:                                           ; preds = %dec_label_pc_10214
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1707

bb1707:                                           ; preds = %dec_label_pc_10214, %bb1706
  %v0_10228.pr909 = phi i32 [ %.1998, %dec_label_pc_10214 ], [ 0, %bb1706 ]
  %v2_1021c = xor i1 %v7_10214, true
  %v3_1021c = and i1 %v2_10214, %v2_1021c
  br i1 %v3_1021c, label %bb1708, label %bb1709

bb1708:                                           ; preds = %bb1707
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1709

bb1709:                                           ; preds = %bb1707, %bb1708
  %v0_10228.pr = phi i32 [ %v0_10228.pr909, %bb1707 ], [ 1, %bb1708 ]
  %v2_10220 = icmp ugt i32 %v1_f1a0, 137
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  %v7_10220 = icmp eq i32 %v1_f1a0, 138
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  %v2_10224 = xor i1 %v7_10220, true
  %v3_10224 = and i1 %v2_10220, %v2_10224
  br i1 %v3_10224, label %.thread400, label %bb1710

.thread400:                                       ; preds = %bb1709
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10230

bb1710:                                           ; preds = %bb1709
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10228 = icmp eq i32 %v0_10228.pr, 0
  store i1 %v2_10228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10228, label %dec_label_pc_10230, label %dec_label_pc_f184

dec_label_pc_10230:                               ; preds = %.thread400, %.thread396, %bb1710, %.thread395
  store i32 %.1971, i32* %r3.global-to-local, align 4
  %v2_10234 = icmp ugt i32 %v1_f19c, 93
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  %v7_10234 = icmp eq i32 %v1_f19c, 94
  store i1 %v7_10234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10234, label %.thread403, label %.thread404

.thread404:                                       ; preds = %dec_label_pc_10230
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10254

.thread403:                                       ; preds = %dec_label_pc_10230
  store i32 %.1971, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10240 = icmp eq i1 %v7_f5e4, false
  store i1 %v2_10240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10240, label %dec_label_pc_10254, label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %.thread403
  %v2_10248 = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_10248, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10248, label %dec_label_pc_10254, label %bb1711

bb1711:                                           ; preds = %dec_label_pc_10248
  %v3_1024c = icmp ugt i32 %v1_f1a0, 235
  store i1 %v3_1024c, i1* %cpsr_c.global-to-local, align 1
  %v8_1024c = icmp eq i32 %v1_f1a0, 236
  store i1 %v8_1024c, i1* %cpsr_z.global-to-local, align 1
  %v2_10250 = xor i1 %v8_1024c, true
  %v3_10250 = and i1 %v3_1024c, %v2_10250
  br i1 %v3_10250, label %dec_label_pc_f184, label %dec_label_pc_10254

dec_label_pc_10254:                               ; preds = %dec_label_pc_10248, %.thread404, %bb1711, %.thread403
  %v0_10274.pr915 = phi i32 [ 0, %.thread404 ], [ %.1971, %bb1711 ], [ 0, %.thread403 ], [ %.1971, %dec_label_pc_10248 ]
  %v2_10254 = icmp ugt i32 %v1_f188, 62
  store i1 %v2_10254, i1* %cpsr_c.global-to-local, align 1
  %v7_10254 = icmp eq i32 %v1_f188, 63
  store i1 %v7_10254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10254, label %bb1712, label %dec_label_pc_1027c

bb1712:                                           ; preds = %dec_label_pc_10254
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb50, label %dec_label_pc_10260, label %dec_label_pc_1027c

dec_label_pc_10260:                               ; preds = %bb1712
  %v2_10260 = icmp ugt i32 %v1_f1a0, 17
  store i1 %v2_10260, i1* %cpsr_c.global-to-local, align 1
  %v7_10260 = icmp eq i32 %v1_f1a0, 18
  store i1 %v7_10260, i1* %cpsr_z.global-to-local, align 1
  %v2_10264 = xor i1 %v2_10260, true
  %v3_10264 = or i1 %v7_10260, %v2_10264
  br i1 %v3_10264, label %bb1713, label %bb1714

bb1713:                                           ; preds = %dec_label_pc_10260
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1714

bb1714:                                           ; preds = %dec_label_pc_10260, %bb1713
  %v0_10274.pr914 = phi i32 [ %v0_10274.pr915, %dec_label_pc_10260 ], [ 0, %bb1713 ]
  %v2_10268 = xor i1 %v7_10260, true
  %v3_10268 = and i1 %v2_10260, %v2_10268
  br i1 %v3_10268, label %bb1715, label %bb1716

bb1715:                                           ; preds = %bb1714
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1716

bb1716:                                           ; preds = %bb1714, %bb1715
  %v0_10274.pr = phi i32 [ %v0_10274.pr914, %bb1714 ], [ 1, %bb1715 ]
  %v2_1026c = icmp ugt i32 %v1_f1a0, 19
  store i1 %v2_1026c, i1* %cpsr_c.global-to-local, align 1
  %v7_1026c = icmp eq i32 %v1_f1a0, 20
  store i1 %v7_1026c, i1* %cpsr_z.global-to-local, align 1
  %v2_10270 = xor i1 %v7_1026c, true
  %v3_10270 = and i1 %v2_1026c, %v2_10270
  br i1 %v3_10270, label %.thread409, label %bb1717

.thread409:                                       ; preds = %bb1716
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1027c

bb1717:                                           ; preds = %bb1716
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10274 = icmp eq i32 %v0_10274.pr, 0
  store i1 %v2_10274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10274, label %dec_label_pc_1027c, label %dec_label_pc_f184

dec_label_pc_1027c:                               ; preds = %dec_label_pc_10254, %.thread409, %bb1717, %bb1712
  %v0_1029c.pr918 = phi i32 [ %v0_10274.pr915, %dec_label_pc_10254 ], [ 0, %.thread409 ], [ 0, %bb1717 ], [ %v0_10274.pr915, %bb1712 ]
  %v2_1027c = icmp ugt i32 %v1_f188, 69
  store i1 %v2_1027c, i1* %cpsr_c.global-to-local, align 1
  %v7_1027c = icmp eq i32 %v1_f188, 70
  store i1 %v7_1027c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1027c, label %bb1718, label %dec_label_pc_102a4

bb1718:                                           ; preds = %dec_label_pc_1027c
  %v3_10280 = icmp ugt i32 %v1_f19c, 41
  store i1 %v3_10280, i1* %cpsr_c.global-to-local, align 1
  %v8_10280 = icmp eq i32 %v1_f19c, 42
  store i1 %v8_10280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10280, label %dec_label_pc_10288, label %dec_label_pc_102a4

dec_label_pc_10288:                               ; preds = %bb1718
  %v2_10288 = icmp ugt i32 %v1_f1a0, 71
  store i1 %v2_10288, i1* %cpsr_c.global-to-local, align 1
  %v7_10288 = icmp eq i32 %v1_f1a0, 72
  store i1 %v7_10288, i1* %cpsr_z.global-to-local, align 1
  %v2_1028c = xor i1 %v2_10288, true
  %v3_1028c = or i1 %v7_10288, %v2_1028c
  br i1 %v3_1028c, label %bb1719, label %bb1720

bb1719:                                           ; preds = %dec_label_pc_10288
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1720

bb1720:                                           ; preds = %dec_label_pc_10288, %bb1719
  %v0_1029c.pr917 = phi i32 [ %v0_1029c.pr918, %dec_label_pc_10288 ], [ 0, %bb1719 ]
  %v2_10290 = xor i1 %v7_10288, true
  %v3_10290 = and i1 %v2_10288, %v2_10290
  br i1 %v3_10290, label %bb1721, label %bb1722

bb1721:                                           ; preds = %bb1720
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1722

bb1722:                                           ; preds = %bb1720, %bb1721
  %v0_1029c.pr = phi i32 [ %v0_1029c.pr917, %bb1720 ], [ 1, %bb1721 ]
  %v2_10294 = icmp ugt i32 %v1_f1a0, 73
  store i1 %v2_10294, i1* %cpsr_c.global-to-local, align 1
  %v7_10294 = icmp eq i32 %v1_f1a0, 74
  store i1 %v7_10294, i1* %cpsr_z.global-to-local, align 1
  %v2_10298 = xor i1 %v7_10294, true
  %v3_10298 = and i1 %v2_10294, %v2_10298
  br i1 %v3_10298, label %.thread414, label %bb1723

.thread414:                                       ; preds = %bb1722
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102a4

bb1723:                                           ; preds = %bb1722
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1029c = icmp eq i32 %v0_1029c.pr, 0
  store i1 %v2_1029c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1029c, label %dec_label_pc_102a4, label %dec_label_pc_f184

dec_label_pc_102a4:                               ; preds = %dec_label_pc_1027c, %.thread414, %bb1723, %bb1718
  %v0_102d0.pr921 = phi i32 [ %v0_1029c.pr918, %dec_label_pc_1027c ], [ 0, %.thread414 ], [ 0, %bb1723 ], [ %v0_1029c.pr918, %bb1718 ]
  %v7_102a4 = icmp eq i32 %v1_f188, 74
  %.2000 = zext i1 %v7_102a4 to i32
  %v2_102b0 = icmp ugt i32 %v1_f19c, 90
  store i1 %v2_102b0, i1* %cpsr_c.global-to-local, align 1
  %v7_102b0 = icmp eq i32 %v1_f19c, 91
  store i1 %v7_102b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102b0, label %bb1726, label %dec_label_pc_102d8

bb1726:                                           ; preds = %dec_label_pc_102a4
  %v2_102a4 = icmp ugt i32 %v1_f188, 73
  store i1 %v2_102a4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_102a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102a4, label %dec_label_pc_102bc, label %dec_label_pc_102d8

dec_label_pc_102bc:                               ; preds = %bb1726
  %v2_102bc = icmp ugt i32 %v1_f1a0, 111
  store i1 %v2_102bc, i1* %cpsr_c.global-to-local, align 1
  %v7_102bc = icmp eq i32 %v1_f1a0, 112
  store i1 %v7_102bc, i1* %cpsr_z.global-to-local, align 1
  %v2_102c0 = xor i1 %v2_102bc, true
  %v3_102c0 = or i1 %v7_102bc, %v2_102c0
  br i1 %v3_102c0, label %bb1727, label %bb1728

bb1727:                                           ; preds = %dec_label_pc_102bc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1728

bb1728:                                           ; preds = %dec_label_pc_102bc, %bb1727
  %v0_102d0.pr920 = phi i32 [ %v0_102d0.pr921, %dec_label_pc_102bc ], [ 0, %bb1727 ]
  %v2_102c4 = xor i1 %v7_102bc, true
  %v3_102c4 = and i1 %v2_102bc, %v2_102c4
  br i1 %v3_102c4, label %bb1729, label %bb1730

bb1729:                                           ; preds = %bb1728
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1730

bb1730:                                           ; preds = %bb1728, %bb1729
  %v0_102d0.pr = phi i32 [ %v0_102d0.pr920, %bb1728 ], [ 1, %bb1729 ]
  %v2_102c8 = icmp ugt i32 %v1_f1a0, 113
  store i1 %v2_102c8, i1* %cpsr_c.global-to-local, align 1
  %v7_102c8 = icmp eq i32 %v1_f1a0, 114
  store i1 %v7_102c8, i1* %cpsr_z.global-to-local, align 1
  %v2_102cc = xor i1 %v7_102c8, true
  %v3_102cc = and i1 %v2_102c8, %v2_102cc
  br i1 %v3_102cc, label %.thread420, label %bb1731

.thread420:                                       ; preds = %bb1730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102d8

bb1731:                                           ; preds = %bb1730
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102d0 = icmp eq i32 %v0_102d0.pr, 0
  store i1 %v2_102d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102d0, label %dec_label_pc_102d8, label %dec_label_pc_f184

dec_label_pc_102d8:                               ; preds = %dec_label_pc_102a4, %.thread420, %bb1731, %bb1726
  %v2_102d8 = icmp ugt i32 %v1_f19c, 200
  store i1 %v2_102d8, i1* %cpsr_c.global-to-local, align 1
  %v7_102d8 = icmp eq i32 %v1_f19c, 201
  store i1 %v7_102d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102d8, label %.thread423, label %.thread424

.thread424:                                       ; preds = %dec_label_pc_102d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10308

.thread423:                                       ; preds = %dec_label_pc_102d8
  store i32 %.2000, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102e4 = icmp eq i1 %v7_102a4, false
  store i1 %v2_102e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102e4, label %dec_label_pc_10308, label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %.thread423
  %v2_102ec = icmp ugt i32 %v1_f1a0, 54
  store i1 %v2_102ec, i1* %cpsr_c.global-to-local, align 1
  %v7_102ec = icmp eq i32 %v1_f1a0, 55
  store i1 %v7_102ec, i1* %cpsr_z.global-to-local, align 1
  %v2_102f0 = xor i1 %v2_102ec, true
  %v3_102f0 = or i1 %v7_102ec, %v2_102f0
  br i1 %v3_102f0, label %bb1732, label %bb1733

bb1732:                                           ; preds = %dec_label_pc_102ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1733

bb1733:                                           ; preds = %dec_label_pc_102ec, %bb1732
  %v0_10300.pr924 = phi i32 [ %.2000, %dec_label_pc_102ec ], [ 0, %bb1732 ]
  %v2_102f4 = xor i1 %v7_102ec, true
  %v3_102f4 = and i1 %v2_102ec, %v2_102f4
  br i1 %v3_102f4, label %bb1734, label %bb1735

bb1734:                                           ; preds = %bb1733
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1735

bb1735:                                           ; preds = %bb1733, %bb1734
  %v0_10300.pr = phi i32 [ %v0_10300.pr924, %bb1733 ], [ 1, %bb1734 ]
  %v2_102f8 = icmp ugt i32 %v1_f1a0, 56
  store i1 %v2_102f8, i1* %cpsr_c.global-to-local, align 1
  %v7_102f8 = icmp eq i32 %v1_f1a0, 57
  store i1 %v7_102f8, i1* %cpsr_z.global-to-local, align 1
  %v2_102fc = xor i1 %v7_102f8, true
  %v3_102fc = and i1 %v2_102f8, %v2_102fc
  br i1 %v3_102fc, label %.thread428, label %bb1736

.thread428:                                       ; preds = %bb1735
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10308

bb1736:                                           ; preds = %bb1735
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10300 = icmp eq i32 %v0_10300.pr, 0
  store i1 %v2_10300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10300, label %dec_label_pc_10308, label %dec_label_pc_f184

dec_label_pc_10308:                               ; preds = %.thread428, %.thread424, %bb1736, %.thread423
  store i32 %.1988, i32* %fp.global-to-local, align 4
  %v2_1030c = icmp ugt i32 %v1_f19c, 208
  store i1 %v2_1030c, i1* %cpsr_c.global-to-local, align 1
  %v7_1030c = icmp eq i32 %v1_f19c, 209
  %.2001 = zext i1 %v7_1030c to i32
  store i32 %.2001, i32* %r4.global-to-local, align 4
  %v2_10318 = and i32 %.2001, %.1988
  %v4_10318 = icmp eq i32 %v2_10318, 0
  store i1 %v4_10318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10318, label %dec_label_pc_1033c, label %dec_label_pc_10320

dec_label_pc_10320:                               ; preds = %dec_label_pc_10308
  %v2_10320 = icmp ugt i32 %v1_f1a0, 46
  store i1 %v2_10320, i1* %cpsr_c.global-to-local, align 1
  %v7_10320 = icmp eq i32 %v1_f1a0, 47
  store i1 %v7_10320, i1* %cpsr_z.global-to-local, align 1
  %v2_10324 = xor i1 %v2_10320, true
  %v3_10324 = or i1 %v7_10320, %v2_10324
  br i1 %v3_10324, label %bb1739, label %bb1740

bb1739:                                           ; preds = %dec_label_pc_10320
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1740

bb1740:                                           ; preds = %dec_label_pc_10320, %bb1739
  %v2_10328 = xor i1 %v7_10320, true
  %v3_10328 = and i1 %v2_10320, %v2_10328
  br i1 %v3_10328, label %bb1741, label %bb1742

bb1741:                                           ; preds = %bb1740
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1742

bb1742:                                           ; preds = %bb1740, %bb1741
  %v0_10334.pr = phi i32 [ 0, %bb1740 ], [ 1, %bb1741 ]
  %v2_1032c = icmp ugt i32 %v1_f1a0, 51
  store i1 %v2_1032c, i1* %cpsr_c.global-to-local, align 1
  %v7_1032c = icmp eq i32 %v1_f1a0, 52
  store i1 %v7_1032c, i1* %cpsr_z.global-to-local, align 1
  %v2_10330 = xor i1 %v7_1032c, true
  %v3_10330 = and i1 %v2_1032c, %v2_10330
  br i1 %v3_10330, label %.thread433, label %bb1743

.thread433:                                       ; preds = %bb1742
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1033c

bb1743:                                           ; preds = %bb1742
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10334 = icmp eq i32 %v0_10334.pr, 0
  store i1 %v2_10334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10334, label %dec_label_pc_1033c, label %dec_label_pc_f184

dec_label_pc_1033c:                               ; preds = %.thread433, %bb1743, %dec_label_pc_10308
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_10340 = icmp ugt i32 %v1_f19c, 164
  store i1 %v2_10340, i1* %cpsr_c.global-to-local, align 1
  %v7_10340 = icmp eq i32 %v1_f19c, 165
  store i1 %v7_10340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10340, label %.thread436, label %.thread437

.thread437:                                       ; preds = %dec_label_pc_1033c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10354

.thread436:                                       ; preds = %dec_label_pc_1033c
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1034c = icmp eq i1 %v7_fc00, false
  store i1 %v2_1034c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1034c, label %dec_label_pc_10354, label %dec_label_pc_f184

dec_label_pc_10354:                               ; preds = %.thread437, %.thread436
  store i32 %storemerge1185, i32* %r3.global-to-local, align 4
  %v2_10358 = icmp ugt i32 %v1_f188, 148
  store i1 %v2_10358, i1* %cpsr_c.global-to-local, align 1
  %v7_10358 = icmp eq i32 %v1_f188, 149
  store i1 %v7_10358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10358, label %.thread440, label %.thread441

.thread441:                                       ; preds = %dec_label_pc_10354
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1036c

.thread440:                                       ; preds = %dec_label_pc_10354
  store i32 %storemerge1185, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10364 = icmp eq i1 %v7_f3b4, false
  store i1 %v2_10364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10364, label %dec_label_pc_1036c, label %dec_label_pc_f184

dec_label_pc_1036c:                               ; preds = %.thread441, %.thread440
  %v2_1036c = icmp ugt i32 %v1_f188, 150
  store i1 %v2_1036c, i1* %cpsr_c.global-to-local, align 1
  %v7_1036c = icmp eq i32 %v1_f188, 151
  store i1 %v7_1036c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1036c, label %.thread444, label %.thread445

.thread445:                                       ; preds = %dec_label_pc_1036c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10380

.thread444:                                       ; preds = %dec_label_pc_1036c
  store i32 %.1947, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10378 = icmp eq i1 %v7_f25c, false
  store i1 %v2_10378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10378, label %dec_label_pc_10380, label %dec_label_pc_f184

dec_label_pc_10380:                               ; preds = %.thread445, %.thread444
  store i32 %.1960, i32* %r3.global-to-local, align 4
  %v2_10384 = icmp ugt i32 %v1_f19c, 131
  store i1 %v2_10384, i1* %cpsr_c.global-to-local, align 1
  %v7_10384 = icmp eq i32 %v1_f19c, 132
  store i1 %v7_10384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10384, label %.thread448, label %.thread449

.thread449:                                       ; preds = %dec_label_pc_10380
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10398

.thread448:                                       ; preds = %dec_label_pc_10380
  store i32 %.1960, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10390 = icmp eq i1 %v7_f470, false
  store i1 %v2_10390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10390, label %dec_label_pc_10398, label %dec_label_pc_f184

dec_label_pc_10398:                               ; preds = %.thread449, %.thread448
  %v2_10398 = icmp ugt i32 %v1_f188, 175
  store i1 %v2_10398, i1* %cpsr_c.global-to-local, align 1
  %v7_10398 = icmp eq i32 %v1_f188, 176
  store i1 %v7_10398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10398, label %bb1744, label %dec_label_pc_103a4

bb1744:                                           ; preds = %dec_label_pc_10398
  %v3_1039c = icmp ugt i32 %v1_f19c, 30
  store i1 %v3_1039c, i1* %cpsr_c.global-to-local, align 1
  %v8_1039c = icmp eq i32 %v1_f19c, 31
  store i1 %v8_1039c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1039c, label %dec_label_pc_f184, label %dec_label_pc_103a4

dec_label_pc_103a4:                               ; preds = %dec_label_pc_10398, %bb1744
  store i32 %.1961, i32* %r3.global-to-local, align 4
  %v2_103ac = and i32 %.1951, %.1961
  %v4_103ac = icmp eq i32 %v2_103ac, 0
  store i1 %v4_103ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103ac, label %dec_label_pc_103b4, label %dec_label_pc_f184

dec_label_pc_103b4:                               ; preds = %dec_label_pc_103a4
  store i32 %storemerge1187, i32* %fp.global-to-local, align 4
  %v2_103bc = and i32 %storemerge1187, %.1990
  %v4_103bc = icmp eq i32 %v2_103bc, 0
  store i1 %v4_103bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103bc, label %dec_label_pc_103c4, label %dec_label_pc_f184

dec_label_pc_103c4:                               ; preds = %dec_label_pc_103b4
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_103c8 = icmp ugt i32 %v1_f19c, 32
  store i1 %v2_103c8, i1* %cpsr_c.global-to-local, align 1
  %v7_103c8 = icmp eq i32 %v1_f19c, 33
  store i1 %v7_103c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103c8, label %.thread453, label %.thread454

.thread454:                                       ; preds = %dec_label_pc_103c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103dc

.thread453:                                       ; preds = %dec_label_pc_103c4
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103d4 = icmp eq i1 %v7_fc7c, false
  store i1 %v2_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103d4, label %dec_label_pc_103dc, label %dec_label_pc_f184

dec_label_pc_103dc:                               ; preds = %.thread454, %.thread453
  store i32 %.1964, i32* %r3.global-to-local, align 4
  %v2_103e0 = and i32 %.1964, %.1993
  %v4_103e0 = icmp eq i32 %v2_103e0, 0
  store i1 %v4_103e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_103e0, label %dec_label_pc_103e8, label %dec_label_pc_f184

dec_label_pc_103e8:                               ; preds = %dec_label_pc_103dc
  %v2_103e8 = icmp ugt i32 %v1_f19c, 186
  store i1 %v2_103e8, i1* %cpsr_c.global-to-local, align 1
  %v7_103e8 = icmp eq i32 %v1_f19c, 187
  store i1 %v7_103e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103e8, label %.thread457, label %.thread458

.thread458:                                       ; preds = %dec_label_pc_103e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103fc

.thread457:                                       ; preds = %dec_label_pc_103e8
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103f4 = icmp eq i1 %v7_fe54, false
  store i1 %v2_103f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103f4, label %dec_label_pc_103fc, label %dec_label_pc_f184

dec_label_pc_103fc:                               ; preds = %.thread458, %.thread457
  %v2_103fc = icmp ugt i32 %v1_f188, 45
  store i1 %v2_103fc, i1* %cpsr_c.global-to-local, align 1
  %v7_103fc = icmp eq i32 %v1_f188, 46
  store i1 %v7_103fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103fc, label %bb1745, label %dec_label_pc_10408

bb1745:                                           ; preds = %dec_label_pc_103fc
  %v3_10400 = icmp ugt i32 %v1_f19c, 104
  store i1 %v3_10400, i1* %cpsr_c.global-to-local, align 1
  %v8_10400 = icmp eq i32 %v1_f19c, 105
  store i1 %v8_10400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10400, label %dec_label_pc_f184, label %dec_label_pc_10408

dec_label_pc_10408:                               ; preds = %dec_label_pc_103fc, %bb1745
  store i32 %storemerge1205, i32* %fp.global-to-local, align 4
  %v2_1040c = icmp ugt i32 %v1_f188, 50
  store i1 %v2_1040c, i1* %cpsr_c.global-to-local, align 1
  %v7_1040c = icmp eq i32 %v1_f188, 51
  %.2002 = zext i1 %v7_1040c to i32
  %v2_10418 = and i32 %storemerge1205, %.2002
  %v4_10418 = icmp eq i32 %v2_10418, 0
  store i1 %v4_10418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10418, label %dec_label_pc_10420, label %dec_label_pc_f184

dec_label_pc_10420:                               ; preds = %dec_label_pc_10408
  %v2_10420 = icmp eq i32 %v1_f19c, 255
  store i1 %v2_10420, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10420, label %.thread463, label %.thread464

.thread464:                                       ; preds = %dec_label_pc_10420
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10434

.thread463:                                       ; preds = %dec_label_pc_10420
  store i32 %.2002, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1042c = icmp eq i1 %v7_1040c, false
  store i1 %v2_1042c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1042c, label %dec_label_pc_10434, label %dec_label_pc_f184

dec_label_pc_10434:                               ; preds = %.thread464, %.thread463
  %v7_10434 = icmp eq i32 %v1_f188, 5
  %.2003 = zext i1 %v7_10434 to i32
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_10440 = icmp ugt i32 %v1_f19c, 134
  store i1 %v2_10440, i1* %cpsr_c.global-to-local, align 1
  %v7_10440 = icmp eq i32 %v1_f19c, 135
  store i1 %v7_10440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10440, label %bb1750, label %dec_label_pc_1044c

bb1750:                                           ; preds = %dec_label_pc_10434
  %v2_10434 = icmp ugt i32 %v1_f188, 4
  store i1 %v2_10434, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10434, label %dec_label_pc_f184, label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %dec_label_pc_10434, %bb1750
  %v2_10450 = and i32 %.1954, %.2003
  %v4_10450 = icmp eq i32 %v2_10450, 0
  store i1 %v4_10450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10450, label %dec_label_pc_10458, label %dec_label_pc_f184

dec_label_pc_10458:                               ; preds = %dec_label_pc_1044c
  store i1 %v2_f734, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f734, label %.thread469, label %.thread470

.thread470:                                       ; preds = %dec_label_pc_10458
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1046c

.thread469:                                       ; preds = %dec_label_pc_10458
  store i32 %.2003, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10464 = icmp eq i1 %v7_10434, false
  store i1 %v2_10464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10464, label %dec_label_pc_1046c, label %dec_label_pc_f184

dec_label_pc_1046c:                               ; preds = %.thread470, %.thread469
  %v2_1046c = icmp ugt i32 %v1_f188, 90
  store i1 %v2_1046c, i1* %cpsr_c.global-to-local, align 1
  %v7_1046c = icmp eq i32 %v1_f188, 91
  store i1 %v7_1046c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1046c, label %bb1751, label %dec_label_pc_10478

bb1751:                                           ; preds = %dec_label_pc_1046c
  %v3_10470 = icmp ugt i32 %v1_f19c, 133
  store i1 %v3_10470, i1* %cpsr_c.global-to-local, align 1
  %v8_10470 = icmp eq i32 %v1_f19c, 134
  store i1 %v8_10470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10470, label %dec_label_pc_f184, label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_1046c, %bb1751
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_1047c = icmp ugt i32 %v1_f19c, 199
  store i1 %v2_1047c, i1* %cpsr_c.global-to-local, align 1
  %v7_1047c = icmp eq i32 %v1_f19c, 200
  store i1 %v7_1047c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1047c, label %.thread474, label %.thread475

.thread475:                                       ; preds = %dec_label_pc_10478
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104a4

.thread474:                                       ; preds = %dec_label_pc_10478
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10488 = icmp eq i1 %v7_fbe0, false
  store i1 %v2_10488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10488, label %dec_label_pc_104a4, label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %.thread474
  %v2_10490 = icmp ugt i32 %v1_f1a0, 157
  store i1 %v2_10490, i1* %cpsr_c.global-to-local, align 1
  %v7_10490 = icmp eq i32 %v1_f1a0, 158
  store i1 %v7_10490, i1* %cpsr_z.global-to-local, align 1
  %v2_10494 = xor i1 %v7_10490, true
  %v3_10494 = and i1 %v2_10490, %v2_10494
  br i1 %v3_10494, label %bb1752, label %bb1753

bb1752:                                           ; preds = %dec_label_pc_10490
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %dec_label_pc_10490, %bb1752
  %v0_1049c939 = phi i32 [ %.1987, %dec_label_pc_10490 ], [ 0, %bb1752 ]
  %v2_10498 = xor i1 %v2_10490, true
  %v3_10498 = or i1 %v7_10490, %v2_10498
  br i1 %v3_10498, label %bb1754, label %bb1755

bb1754:                                           ; preds = %bb1753
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1755

bb1755:                                           ; preds = %bb1753, %bb1754
  %v0_1049c = phi i32 [ %v0_1049c939, %bb1753 ], [ 1, %bb1754 ]
  %v2_1049c = and i32 %v3_f190, 64
  %v3_1049c = icmp ne i32 %v2_1049c, 0
  store i1 %v3_1049c, i1* %cpsr_c.global-to-local, align 1
  %v4_1049c = udiv i32 %v1_f1a0, 128
  %v5_1049c = and i32 %v0_1049c, %v4_1049c
  store i32 %v5_1049c, i32* %r3.global-to-local, align 4
  %v6_1049c = icmp eq i32 %v5_1049c, 0
  store i1 %v6_1049c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1049c, label %dec_label_pc_104a4, label %dec_label_pc_f184

dec_label_pc_104a4:                               ; preds = %.thread475, %bb1755, %.thread474
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_104a8 = icmp ugt i32 %v1_f19c, 151
  store i1 %v2_104a8, i1* %cpsr_c.global-to-local, align 1
  %v7_104a8 = icmp eq i32 %v1_f19c, 152
  store i1 %v7_104a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104a8, label %.thread478, label %.thread479

.thread479:                                       ; preds = %dec_label_pc_104a4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104d8

.thread478:                                       ; preds = %dec_label_pc_104a4
  store i32 %.1991, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104b4 = icmp eq i1 %v7_fcd4, false
  store i1 %v2_104b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104b4, label %dec_label_pc_104d8, label %dec_label_pc_104bc

dec_label_pc_104bc:                               ; preds = %.thread478
  %v2_104bc = icmp ugt i32 %v1_f1a0, 94
  store i1 %v2_104bc, i1* %cpsr_c.global-to-local, align 1
  %v7_104bc = icmp eq i32 %v1_f1a0, 95
  store i1 %v7_104bc, i1* %cpsr_z.global-to-local, align 1
  %v2_104c0 = xor i1 %v2_104bc, true
  %v3_104c0 = or i1 %v7_104bc, %v2_104c0
  br i1 %v3_104c0, label %bb1756, label %bb1757

bb1756:                                           ; preds = %dec_label_pc_104bc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1757

bb1757:                                           ; preds = %dec_label_pc_104bc, %bb1756
  %v0_104d0.pr942 = phi i32 [ %.1991, %dec_label_pc_104bc ], [ 0, %bb1756 ]
  %v2_104c4 = xor i1 %v7_104bc, true
  %v3_104c4 = and i1 %v2_104bc, %v2_104c4
  br i1 %v3_104c4, label %bb1758, label %bb1759

bb1758:                                           ; preds = %bb1757
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1759

bb1759:                                           ; preds = %bb1757, %bb1758
  %v0_104d0.pr = phi i32 [ %v0_104d0.pr942, %bb1757 ], [ 1, %bb1758 ]
  %v2_104c8 = icmp ugt i32 %v1_f1a0, 109
  store i1 %v2_104c8, i1* %cpsr_c.global-to-local, align 1
  %v7_104c8 = icmp eq i32 %v1_f1a0, 110
  store i1 %v7_104c8, i1* %cpsr_z.global-to-local, align 1
  %v2_104cc = xor i1 %v7_104c8, true
  %v3_104cc = and i1 %v2_104c8, %v2_104cc
  br i1 %v3_104cc, label %.thread483, label %bb1760

.thread483:                                       ; preds = %bb1759
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_104d8

bb1760:                                           ; preds = %bb1759
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104d0 = icmp eq i32 %v0_104d0.pr, 0
  store i1 %v2_104d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104d0, label %dec_label_pc_104d8, label %dec_label_pc_f184

dec_label_pc_104d8:                               ; preds = %.thread483, %.thread479, %bb1760, %.thread478
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_104dc = icmp ugt i32 %v1_f19c, 180
  store i1 %v2_104dc, i1* %cpsr_c.global-to-local, align 1
  %v7_104dc = icmp eq i32 %v1_f19c, 181
  store i1 %v7_104dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104dc, label %.thread486, label %.thread487

.thread487:                                       ; preds = %dec_label_pc_104d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1050c

.thread486:                                       ; preds = %dec_label_pc_104d8
  store i32 %.1991, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104e8 = icmp eq i1 %v7_fcd4, false
  store i1 %v2_104e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104e8, label %dec_label_pc_1050c, label %dec_label_pc_104f0

dec_label_pc_104f0:                               ; preds = %.thread486
  %v2_104f0 = icmp ugt i32 %v1_f1a0, 158
  store i1 %v2_104f0, i1* %cpsr_c.global-to-local, align 1
  %v7_104f0 = icmp eq i32 %v1_f1a0, 159
  store i1 %v7_104f0, i1* %cpsr_z.global-to-local, align 1
  %v2_104f4 = xor i1 %v2_104f0, true
  %v3_104f4 = or i1 %v7_104f0, %v2_104f4
  br i1 %v3_104f4, label %bb1761, label %bb1762

bb1761:                                           ; preds = %dec_label_pc_104f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1762

bb1762:                                           ; preds = %dec_label_pc_104f0, %bb1761
  %v0_10504.pr945 = phi i32 [ %.1991, %dec_label_pc_104f0 ], [ 0, %bb1761 ]
  %v2_104f8 = xor i1 %v7_104f0, true
  %v3_104f8 = and i1 %v2_104f0, %v2_104f8
  br i1 %v3_104f8, label %bb1763, label %bb1764

bb1763:                                           ; preds = %bb1762
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1764

bb1764:                                           ; preds = %bb1762, %bb1763
  %v0_10504.pr = phi i32 [ %v0_10504.pr945, %bb1762 ], [ 1, %bb1763 ]
  %v2_104fc = icmp ugt i32 %v1_f1a0, 187
  store i1 %v2_104fc, i1* %cpsr_c.global-to-local, align 1
  %v7_104fc = icmp eq i32 %v1_f1a0, 188
  store i1 %v7_104fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10500 = xor i1 %v7_104fc, true
  %v3_10500 = and i1 %v2_104fc, %v2_10500
  br i1 %v3_10500, label %.thread491, label %bb1765

.thread491:                                       ; preds = %bb1764
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1050c

bb1765:                                           ; preds = %bb1764
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10504 = icmp eq i32 %v0_10504.pr, 0
  store i1 %v2_10504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10504, label %dec_label_pc_1050c, label %dec_label_pc_f184

dec_label_pc_1050c:                               ; preds = %.thread491, %.thread487, %bb1765, %.thread486
  store i32 %.1972, i32* %r3.global-to-local, align 4
  %v2_10510 = and i32 %.1948, %.1972
  %v4_10510 = icmp eq i32 %v2_10510, 0
  store i1 %v4_10510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10510, label %dec_label_pc_10534, label %dec_label_pc_10518

dec_label_pc_10518:                               ; preds = %dec_label_pc_1050c
  %v2_10518 = icmp ugt i32 %v1_f1a0, 62
  store i1 %v2_10518, i1* %cpsr_c.global-to-local, align 1
  %v7_10518 = icmp eq i32 %v1_f1a0, 63
  store i1 %v7_10518, i1* %cpsr_z.global-to-local, align 1
  %v2_1051c = xor i1 %v2_10518, true
  %v3_1051c = or i1 %v7_10518, %v2_1051c
  br i1 %v3_1051c, label %bb1766, label %bb1767

bb1766:                                           ; preds = %dec_label_pc_10518
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1767

bb1767:                                           ; preds = %dec_label_pc_10518, %bb1766
  %v0_1052c.pr947 = phi i32 [ %.1972, %dec_label_pc_10518 ], [ 0, %bb1766 ]
  %v2_10520 = xor i1 %v7_10518, true
  %v3_10520 = and i1 %v2_10518, %v2_10520
  br i1 %v3_10520, label %bb1768, label %bb1769

bb1768:                                           ; preds = %bb1767
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1769

bb1769:                                           ; preds = %bb1767, %bb1768
  %v0_1052c.pr = phi i32 [ %v0_1052c.pr947, %bb1767 ], [ 1, %bb1768 ]
  %v2_10524 = icmp ugt i32 %v1_f1a0, 93
  store i1 %v2_10524, i1* %cpsr_c.global-to-local, align 1
  %v7_10524 = icmp eq i32 %v1_f1a0, 94
  store i1 %v7_10524, i1* %cpsr_z.global-to-local, align 1
  %v2_10528 = xor i1 %v7_10524, true
  %v3_10528 = and i1 %v2_10524, %v2_10528
  br i1 %v3_10528, label %.thread495, label %bb1770

.thread495:                                       ; preds = %bb1769
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10534

bb1770:                                           ; preds = %bb1769
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1052c = icmp eq i32 %v0_1052c.pr, 0
  store i1 %v2_1052c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1052c, label %dec_label_pc_10534, label %dec_label_pc_f184

dec_label_pc_10534:                               ; preds = %.thread495, %bb1770, %dec_label_pc_1050c
  store i32 %storemerge1225, i32* %r3.global-to-local, align 4
  %v2_10538 = icmp ugt i32 %v1_f188, 183
  store i1 %v2_10538, i1* %cpsr_c.global-to-local, align 1
  %v7_10538 = icmp eq i32 %v1_f188, 184
  store i1 %v7_10538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10538, label %.thread498, label %.thread499

.thread499:                                       ; preds = %dec_label_pc_10534
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10558

.thread498:                                       ; preds = %dec_label_pc_10534
  store i32 %storemerge1225, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10544 = icmp eq i1 %v7_fce0, false
  store i1 %v2_10544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10544, label %dec_label_pc_10558, label %dec_label_pc_1054c

dec_label_pc_1054c:                               ; preds = %.thread498
  %v2_1054c = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_1054c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1054c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1054c, label %dec_label_pc_10558, label %bb1771

bb1771:                                           ; preds = %dec_label_pc_1054c
  %v3_10550 = icmp ugt i32 %v1_f1a0, 238
  store i1 %v3_10550, i1* %cpsr_c.global-to-local, align 1
  %v8_10550 = icmp eq i32 %v1_f1a0, 239
  store i1 %v8_10550, i1* %cpsr_z.global-to-local, align 1
  %v2_10554 = xor i1 %v8_10550, true
  %v3_10554 = and i1 %v3_10550, %v2_10554
  br i1 %v3_10554, label %dec_label_pc_f184, label %dec_label_pc_10558

dec_label_pc_10558:                               ; preds = %dec_label_pc_1054c, %.thread499, %bb1771, %.thread498
  %v2_10558 = icmp ugt i32 %v1_f19c, 110
  store i1 %v2_10558, i1* %cpsr_c.global-to-local, align 1
  %v7_10558 = icmp eq i32 %v1_f19c, 111
  store i1 %v7_10558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10558, label %.thread502, label %.thread503

.thread503:                                       ; preds = %dec_label_pc_10558
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10580

.thread502:                                       ; preds = %dec_label_pc_10558
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10564 = icmp eq i1 %v7_f22c, false
  store i1 %v2_10564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10564, label %dec_label_pc_10580, label %dec_label_pc_1056c

dec_label_pc_1056c:                               ; preds = %.thread502
  %v2_1056c = icmp ugt i32 %v1_f1a0, 141
  store i1 %v2_1056c, i1* %cpsr_c.global-to-local, align 1
  %v7_1056c = icmp eq i32 %v1_f1a0, 142
  store i1 %v7_1056c, i1* %cpsr_z.global-to-local, align 1
  %v2_10570 = xor i1 %v7_1056c, true
  %v3_10570 = and i1 %v2_1056c, %v2_10570
  br i1 %v3_10570, label %bb1772, label %bb1773

bb1772:                                           ; preds = %dec_label_pc_1056c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %dec_label_pc_1056c, %bb1772
  %v0_10578952 = phi i32 [ %.1945, %dec_label_pc_1056c ], [ 0, %bb1772 ]
  %v2_10574 = xor i1 %v2_1056c, true
  %v3_10574 = or i1 %v7_1056c, %v2_10574
  br i1 %v3_10574, label %bb1774, label %bb1775

bb1774:                                           ; preds = %bb1773
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1775

bb1775:                                           ; preds = %bb1773, %bb1774
  %v0_10578 = phi i32 [ %v0_10578952, %bb1773 ], [ 1, %bb1774 ]
  %v2_10578 = and i32 %v3_f190, 64
  %v3_10578 = icmp ne i32 %v2_10578, 0
  store i1 %v3_10578, i1* %cpsr_c.global-to-local, align 1
  %v4_10578 = udiv i32 %v1_f1a0, 128
  %v5_10578 = and i32 %v0_10578, %v4_10578
  store i32 %v5_10578, i32* %r3.global-to-local, align 4
  %v6_10578 = icmp eq i32 %v5_10578, 0
  store i1 %v6_10578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10578, label %dec_label_pc_10580, label %dec_label_pc_f184

dec_label_pc_10580:                               ; preds = %.thread503, %bb1775, %.thread502
  %v2_10580 = icmp ugt i32 %v1_f19c, 251
  store i1 %v2_10580, i1* %cpsr_c.global-to-local, align 1
  %v7_10580 = icmp eq i32 %v1_f19c, 252
  store i1 %v7_10580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10580, label %.thread506, label %.thread507

.thread507:                                       ; preds = %dec_label_pc_10580
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105b0

.thread506:                                       ; preds = %dec_label_pc_10580
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1058c = icmp eq i1 %v7_f22c, false
  store i1 %v2_1058c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1058c, label %dec_label_pc_105b0, label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %.thread506
  %v2_10594 = icmp ugt i32 %v1_f1a0, 206
  store i1 %v2_10594, i1* %cpsr_c.global-to-local, align 1
  %v7_10594 = icmp eq i32 %v1_f1a0, 207
  store i1 %v7_10594, i1* %cpsr_z.global-to-local, align 1
  %v2_10598 = xor i1 %v2_10594, true
  %v3_10598 = or i1 %v7_10594, %v2_10598
  br i1 %v3_10598, label %bb1776, label %bb1777

bb1776:                                           ; preds = %dec_label_pc_10594
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1777

bb1777:                                           ; preds = %dec_label_pc_10594, %bb1776
  %v0_105a8.pr954 = phi i32 [ %.1945, %dec_label_pc_10594 ], [ 0, %bb1776 ]
  %v2_1059c = xor i1 %v7_10594, true
  %v3_1059c = and i1 %v2_10594, %v2_1059c
  br i1 %v3_1059c, label %bb1778, label %bb1779

bb1778:                                           ; preds = %bb1777
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1779

bb1779:                                           ; preds = %bb1777, %bb1778
  %v0_105a8.pr = phi i32 [ %v0_105a8.pr954, %bb1777 ], [ 1, %bb1778 ]
  %v2_105a0 = icmp ugt i32 %v1_f1a0, 221
  store i1 %v2_105a0, i1* %cpsr_c.global-to-local, align 1
  %v7_105a0 = icmp eq i32 %v1_f1a0, 222
  store i1 %v7_105a0, i1* %cpsr_z.global-to-local, align 1
  %v2_105a4 = xor i1 %v7_105a0, true
  %v3_105a4 = and i1 %v2_105a0, %v2_105a4
  br i1 %v3_105a4, label %.thread511, label %bb1780

.thread511:                                       ; preds = %bb1779
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105b0

bb1780:                                           ; preds = %bb1779
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105a8 = icmp eq i32 %v0_105a8.pr, 0
  store i1 %v2_105a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105a8, label %dec_label_pc_105b0, label %dec_label_pc_f184

dec_label_pc_105b0:                               ; preds = %.thread511, %.thread507, %bb1780, %.thread506
  %v2_105b0 = icmp ugt i32 %v1_f19c, 39
  store i1 %v2_105b0, i1* %cpsr_c.global-to-local, align 1
  %v7_105b0 = icmp eq i32 %v1_f19c, 40
  store i1 %v7_105b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105b0, label %.thread514, label %.thread515

.thread515:                                       ; preds = %dec_label_pc_105b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105e0

.thread514:                                       ; preds = %dec_label_pc_105b0
  store i32 %.1945, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105bc = icmp eq i1 %v7_f22c, false
  store i1 %v2_105bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105bc, label %dec_label_pc_105e0, label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %.thread514
  %v2_105c4 = icmp ugt i32 %v1_f1a0, 54
  store i1 %v2_105c4, i1* %cpsr_c.global-to-local, align 1
  %v7_105c4 = icmp eq i32 %v1_f1a0, 55
  store i1 %v7_105c4, i1* %cpsr_z.global-to-local, align 1
  %v2_105c8 = xor i1 %v2_105c4, true
  %v3_105c8 = or i1 %v7_105c4, %v2_105c8
  br i1 %v3_105c8, label %bb1781, label %bb1782

bb1781:                                           ; preds = %dec_label_pc_105c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1782

bb1782:                                           ; preds = %dec_label_pc_105c4, %bb1781
  %v0_105d8.pr956 = phi i32 [ %.1945, %dec_label_pc_105c4 ], [ 0, %bb1781 ]
  %v2_105cc = xor i1 %v7_105c4, true
  %v3_105cc = and i1 %v2_105c4, %v2_105cc
  br i1 %v3_105cc, label %bb1783, label %bb1784

bb1783:                                           ; preds = %bb1782
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1784

bb1784:                                           ; preds = %bb1782, %bb1783
  %v0_105d8.pr = phi i32 [ %v0_105d8.pr956, %bb1782 ], [ 1, %bb1783 ]
  %v2_105d0 = icmp ugt i32 %v1_f1a0, 57
  store i1 %v2_105d0, i1* %cpsr_c.global-to-local, align 1
  %v7_105d0 = icmp eq i32 %v1_f1a0, 58
  store i1 %v7_105d0, i1* %cpsr_z.global-to-local, align 1
  %v2_105d4 = xor i1 %v7_105d0, true
  %v3_105d4 = and i1 %v2_105d0, %v2_105d4
  br i1 %v3_105d4, label %.thread519, label %bb1785

.thread519:                                       ; preds = %bb1784
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105e0

bb1785:                                           ; preds = %bb1784
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105d8 = icmp eq i32 %v0_105d8.pr, 0
  store i1 %v2_105d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105d8, label %dec_label_pc_105e0, label %dec_label_pc_f184

dec_label_pc_105e0:                               ; preds = %.thread519, %.thread515, %bb1785, %.thread514
  store i32 %.1974, i32* %r3.global-to-local, align 4
  %v2_105e4 = icmp ugt i32 %v1_f19c, 7
  store i1 %v2_105e4, i1* %cpsr_c.global-to-local, align 1
  %v7_105e4 = icmp eq i32 %v1_f19c, 8
  store i1 %v7_105e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105e4, label %.thread522, label %.thread523

.thread523:                                       ; preds = %dec_label_pc_105e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10614

.thread522:                                       ; preds = %dec_label_pc_105e0
  store i32 %.1974, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105f0 = icmp eq i1 %v7_f688, false
  store i1 %v2_105f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105f0, label %dec_label_pc_10614, label %dec_label_pc_105f8

dec_label_pc_105f8:                               ; preds = %.thread522
  %v2_105f8 = icmp ugt i32 %v1_f1a0, 79
  store i1 %v2_105f8, i1* %cpsr_c.global-to-local, align 1
  %v7_105f8 = icmp eq i32 %v1_f1a0, 80
  store i1 %v7_105f8, i1* %cpsr_z.global-to-local, align 1
  %v2_105fc = xor i1 %v2_105f8, true
  %v3_105fc = or i1 %v7_105f8, %v2_105fc
  br i1 %v3_105fc, label %bb1786, label %bb1787

bb1786:                                           ; preds = %dec_label_pc_105f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1787

bb1787:                                           ; preds = %dec_label_pc_105f8, %bb1786
  %v0_1060c.pr959 = phi i32 [ %.1974, %dec_label_pc_105f8 ], [ 0, %bb1786 ]
  %v2_10600 = xor i1 %v7_105f8, true
  %v3_10600 = and i1 %v2_105f8, %v2_10600
  br i1 %v3_10600, label %bb1788, label %bb1789

bb1788:                                           ; preds = %bb1787
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1789

bb1789:                                           ; preds = %bb1787, %bb1788
  %v0_1060c.pr = phi i32 [ %v0_1060c.pr959, %bb1787 ], [ 1, %bb1788 ]
  %v2_10604 = icmp ugt i32 %v1_f1a0, 93
  store i1 %v2_10604, i1* %cpsr_c.global-to-local, align 1
  %v7_10604 = icmp eq i32 %v1_f1a0, 94
  store i1 %v7_10604, i1* %cpsr_z.global-to-local, align 1
  %v2_10608 = xor i1 %v7_10604, true
  %v3_10608 = and i1 %v2_10604, %v2_10608
  br i1 %v3_10608, label %.thread527, label %bb1790

.thread527:                                       ; preds = %bb1789
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10614

bb1790:                                           ; preds = %bb1789
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1060c = icmp eq i32 %v0_1060c.pr, 0
  store i1 %v2_1060c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1060c, label %dec_label_pc_10614, label %dec_label_pc_f184

dec_label_pc_10614:                               ; preds = %.thread527, %.thread523, %bb1790, %.thread522
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_10618 = icmp ugt i32 %v1_f19c, 115
  store i1 %v2_10618, i1* %cpsr_c.global-to-local, align 1
  %v7_10618 = icmp eq i32 %v1_f19c, 116
  store i1 %v7_10618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10618, label %.thread530, label %.thread531

.thread531:                                       ; preds = %dec_label_pc_10614
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10648

.thread530:                                       ; preds = %dec_label_pc_10614
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10624 = icmp eq i1 %v7_fb6c, false
  store i1 %v2_10624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10624, label %dec_label_pc_10648, label %dec_label_pc_1062c

dec_label_pc_1062c:                               ; preds = %.thread530
  %v2_1062c = icmp ugt i32 %v1_f1a0, 110
  store i1 %v2_1062c, i1* %cpsr_c.global-to-local, align 1
  %v7_1062c = icmp eq i32 %v1_f1a0, 111
  store i1 %v7_1062c, i1* %cpsr_z.global-to-local, align 1
  %v2_10630 = xor i1 %v2_1062c, true
  %v3_10630 = or i1 %v7_1062c, %v2_10630
  br i1 %v3_10630, label %bb1791, label %bb1792

bb1791:                                           ; preds = %dec_label_pc_1062c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1792

bb1792:                                           ; preds = %dec_label_pc_1062c, %bb1791
  %v0_10640.pr962 = phi i32 [ %.1986, %dec_label_pc_1062c ], [ 0, %bb1791 ]
  %v2_10634 = xor i1 %v7_1062c, true
  %v3_10634 = and i1 %v2_1062c, %v2_10634
  br i1 %v3_10634, label %bb1793, label %bb1794

bb1793:                                           ; preds = %bb1792
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1794

bb1794:                                           ; preds = %bb1792, %bb1793
  %v0_10640.pr = phi i32 [ %v0_10640.pr962, %bb1792 ], [ 1, %bb1793 ]
  %v2_10638 = icmp ugt i32 %v1_f1a0, 117
  store i1 %v2_10638, i1* %cpsr_c.global-to-local, align 1
  %v7_10638 = icmp eq i32 %v1_f1a0, 118
  store i1 %v7_10638, i1* %cpsr_z.global-to-local, align 1
  %v2_1063c = xor i1 %v7_10638, true
  %v3_1063c = and i1 %v2_10638, %v2_1063c
  br i1 %v3_1063c, label %.thread535, label %bb1795

.thread535:                                       ; preds = %bb1794
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10648

bb1795:                                           ; preds = %bb1794
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10640 = icmp eq i32 %v0_10640.pr, 0
  store i1 %v2_10640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10640, label %dec_label_pc_10648, label %dec_label_pc_f184

dec_label_pc_10648:                               ; preds = %.thread535, %.thread531, %bb1795, %.thread530
  store i32 %.1956, i32* %fp.global-to-local, align 4
  %v2_10650 = and i32 %.1956, %.1986
  %v4_10650 = icmp eq i32 %v2_10650, 0
  store i1 %v4_10650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10650, label %dec_label_pc_10664, label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %dec_label_pc_10648
  %v2_10658 = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_10658, i1* %cpsr_c.global-to-local, align 1
  %v7_10658 = icmp eq i32 %v1_f1a0, 255
  store i1 %v7_10658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10658, label %dec_label_pc_10664, label %bb1796

bb1796:                                           ; preds = %dec_label_pc_10658
  %v3_1065c = icmp ugt i32 %v1_f1a0, 246
  store i1 %v3_1065c, i1* %cpsr_c.global-to-local, align 1
  %v8_1065c = icmp eq i32 %v1_f1a0, 247
  store i1 %v8_1065c, i1* %cpsr_z.global-to-local, align 1
  %v2_10660 = xor i1 %v8_1065c, true
  %v3_10660 = and i1 %v3_1065c, %v2_10660
  br i1 %v3_10660, label %dec_label_pc_f184, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_10658, %bb1796, %dec_label_pc_10648
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_10668 = icmp ugt i32 %v1_f19c, 35
  store i1 %v2_10668, i1* %cpsr_c.global-to-local, align 1
  %v7_10668 = icmp eq i32 %v1_f19c, 36
  store i1 %v7_10668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10668, label %.thread538, label %.thread539

.thread539:                                       ; preds = %dec_label_pc_10664
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10698

.thread538:                                       ; preds = %dec_label_pc_10664
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10674 = icmp eq i1 %v7_fb6c, false
  store i1 %v2_10674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10674, label %dec_label_pc_10698, label %dec_label_pc_1067c

dec_label_pc_1067c:                               ; preds = %.thread538
  %v2_1067c = icmp ugt i32 %v1_f1a0, 218
  store i1 %v2_1067c, i1* %cpsr_c.global-to-local, align 1
  %v7_1067c = icmp eq i32 %v1_f1a0, 219
  store i1 %v7_1067c, i1* %cpsr_z.global-to-local, align 1
  %v2_10680 = xor i1 %v2_1067c, true
  %v3_10680 = or i1 %v7_1067c, %v2_10680
  br i1 %v3_10680, label %bb1797, label %bb1798

bb1797:                                           ; preds = %dec_label_pc_1067c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1798

bb1798:                                           ; preds = %dec_label_pc_1067c, %bb1797
  %v0_10690.pr967 = phi i32 [ %.1986, %dec_label_pc_1067c ], [ 0, %bb1797 ]
  %v2_10684 = xor i1 %v7_1067c, true
  %v3_10684 = and i1 %v2_1067c, %v2_10684
  br i1 %v3_10684, label %bb1799, label %bb1800

bb1799:                                           ; preds = %bb1798
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1800

bb1800:                                           ; preds = %bb1798, %bb1799
  %v0_10690.pr = phi i32 [ %v0_10690.pr967, %bb1798 ], [ 1, %bb1799 ]
  %v2_10688 = icmp ugt i32 %v1_f1a0, 221
  store i1 %v2_10688, i1* %cpsr_c.global-to-local, align 1
  %v7_10688 = icmp eq i32 %v1_f1a0, 222
  store i1 %v7_10688, i1* %cpsr_z.global-to-local, align 1
  %v2_1068c = xor i1 %v7_10688, true
  %v3_1068c = and i1 %v2_10688, %v2_1068c
  br i1 %v3_1068c, label %.thread543, label %bb1801

.thread543:                                       ; preds = %bb1800
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10698

bb1801:                                           ; preds = %bb1800
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10690 = icmp eq i32 %v0_10690.pr, 0
  store i1 %v2_10690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10690, label %dec_label_pc_10698, label %dec_label_pc_f184

dec_label_pc_10698:                               ; preds = %.thread543, %.thread539, %bb1801, %.thread538
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_1069c = icmp ugt i32 %v1_f19c, 57
  store i1 %v2_1069c, i1* %cpsr_c.global-to-local, align 1
  %v7_1069c = icmp eq i32 %v1_f19c, 58
  store i1 %v7_1069c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1069c, label %.thread546, label %.thread547

.thread547:                                       ; preds = %dec_label_pc_10698
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106cc

.thread546:                                       ; preds = %dec_label_pc_10698
  store i32 %.1986, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106a8 = icmp eq i1 %v7_fb6c, false
  store i1 %v2_106a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106a8, label %dec_label_pc_106cc, label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %.thread546
  %v2_106b0 = icmp ugt i32 %v1_f1a0, 182
  store i1 %v2_106b0, i1* %cpsr_c.global-to-local, align 1
  %v7_106b0 = icmp eq i32 %v1_f1a0, 183
  store i1 %v7_106b0, i1* %cpsr_z.global-to-local, align 1
  %v2_106b4 = xor i1 %v2_106b0, true
  %v3_106b4 = or i1 %v7_106b0, %v2_106b4
  br i1 %v3_106b4, label %bb1802, label %bb1803

bb1802:                                           ; preds = %dec_label_pc_106b0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1803

bb1803:                                           ; preds = %dec_label_pc_106b0, %bb1802
  %v0_106c4.pr970 = phi i32 [ %.1986, %dec_label_pc_106b0 ], [ 0, %bb1802 ]
  %v2_106b8 = xor i1 %v7_106b0, true
  %v3_106b8 = and i1 %v2_106b0, %v2_106b8
  br i1 %v3_106b8, label %bb1804, label %bb1805

bb1804:                                           ; preds = %bb1803
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1805

bb1805:                                           ; preds = %bb1803, %bb1804
  %v0_106c4.pr = phi i32 [ %v0_106c4.pr970, %bb1803 ], [ 1, %bb1804 ]
  %v2_106bc = icmp ugt i32 %v1_f1a0, 185
  store i1 %v2_106bc, i1* %cpsr_c.global-to-local, align 1
  %v7_106bc = icmp eq i32 %v1_f1a0, 186
  store i1 %v7_106bc, i1* %cpsr_z.global-to-local, align 1
  %v2_106c0 = xor i1 %v7_106bc, true
  %v3_106c0 = and i1 %v2_106bc, %v2_106c0
  br i1 %v3_106c0, label %.thread551, label %bb1806

.thread551:                                       ; preds = %bb1805
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106cc

bb1806:                                           ; preds = %bb1805
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106c4 = icmp eq i32 %v0_106c4.pr, 0
  store i1 %v2_106c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106c4, label %dec_label_pc_106cc, label %dec_label_pc_f184

dec_label_pc_106cc:                               ; preds = %.thread551, %.thread547, %bb1806, %.thread546
  %v2_106cc = icmp ugt i32 %v1_f188, 205
  store i1 %v2_106cc, i1* %cpsr_c.global-to-local, align 1
  %v7_106cc = icmp eq i32 %v1_f188, 206
  store i1 %v7_106cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106cc, label %bb1807, label %dec_label_pc_106f4

bb1807:                                           ; preds = %dec_label_pc_106cc
  %v3_106d0 = icmp ugt i32 %v1_f19c, 219
  store i1 %v3_106d0, i1* %cpsr_c.global-to-local, align 1
  %v8_106d0 = icmp eq i32 %v1_f19c, 220
  store i1 %v8_106d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106d0, label %dec_label_pc_106d8, label %dec_label_pc_106f4

dec_label_pc_106d8:                               ; preds = %bb1807
  %v2_106d8 = icmp ugt i32 %v1_f1a0, 170
  store i1 %v2_106d8, i1* %cpsr_c.global-to-local, align 1
  %v7_106d8 = icmp eq i32 %v1_f1a0, 171
  store i1 %v7_106d8, i1* %cpsr_z.global-to-local, align 1
  %v2_106dc = xor i1 %v2_106d8, true
  %v3_106dc = or i1 %v7_106d8, %v2_106dc
  br i1 %v3_106dc, label %bb1808, label %bb1809

bb1808:                                           ; preds = %dec_label_pc_106d8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1809

bb1809:                                           ; preds = %dec_label_pc_106d8, %bb1808
  %v2_106e0 = xor i1 %v7_106d8, true
  %v3_106e0 = and i1 %v2_106d8, %v2_106e0
  br i1 %v3_106e0, label %bb1810, label %bb1811

bb1810:                                           ; preds = %bb1809
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1811

bb1811:                                           ; preds = %bb1809, %bb1810
  %v0_106ec.pr = phi i32 [ 0, %bb1809 ], [ 1, %bb1810 ]
  %v2_106e4 = icmp ugt i32 %v1_f1a0, 173
  store i1 %v2_106e4, i1* %cpsr_c.global-to-local, align 1
  %v7_106e4 = icmp eq i32 %v1_f1a0, 174
  store i1 %v7_106e4, i1* %cpsr_z.global-to-local, align 1
  %v2_106e8 = xor i1 %v7_106e4, true
  %v3_106e8 = and i1 %v2_106e4, %v2_106e8
  br i1 %v3_106e8, label %.thread556, label %bb1812

.thread556:                                       ; preds = %bb1811
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106f4

bb1812:                                           ; preds = %bb1811
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106ec = icmp eq i32 %v0_106ec.pr, 0
  store i1 %v2_106ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106ec, label %dec_label_pc_106f4, label %dec_label_pc_f184

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106cc, %.thread556, %bb1812, %bb1807
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_106f8 = icmp ugt i32 %v1_f19c, 77
  store i1 %v2_106f8, i1* %cpsr_c.global-to-local, align 1
  %v7_106f8 = icmp eq i32 %v1_f19c, 78
  store i1 %v7_106f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f8, label %.thread559, label %.thread560

.thread560:                                       ; preds = %dec_label_pc_106f4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10728

.thread559:                                       ; preds = %dec_label_pc_106f4
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10704 = icmp eq i1 %v7_10034, false
  store i1 %v2_10704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10704, label %dec_label_pc_10728, label %dec_label_pc_1070c

dec_label_pc_1070c:                               ; preds = %.thread559
  %v2_1070c = icmp ugt i32 %v1_f1a0, 38
  store i1 %v2_1070c, i1* %cpsr_c.global-to-local, align 1
  %v7_1070c = icmp eq i32 %v1_f1a0, 39
  store i1 %v7_1070c, i1* %cpsr_z.global-to-local, align 1
  %v2_10710 = xor i1 %v2_1070c, true
  %v3_10710 = or i1 %v7_1070c, %v2_10710
  br i1 %v3_10710, label %bb1813, label %bb1814

bb1813:                                           ; preds = %dec_label_pc_1070c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1814

bb1814:                                           ; preds = %dec_label_pc_1070c, %bb1813
  %v0_10720.pr976 = phi i32 [ %.1997, %dec_label_pc_1070c ], [ 0, %bb1813 ]
  %v2_10714 = xor i1 %v7_1070c, true
  %v3_10714 = and i1 %v2_1070c, %v2_10714
  br i1 %v3_10714, label %bb1815, label %bb1816

bb1815:                                           ; preds = %bb1814
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1816

bb1816:                                           ; preds = %bb1814, %bb1815
  %v0_10720.pr = phi i32 [ %v0_10720.pr976, %bb1814 ], [ 1, %bb1815 ]
  %v2_10718 = icmp ugt i32 %v1_f1a0, 41
  store i1 %v2_10718, i1* %cpsr_c.global-to-local, align 1
  %v7_10718 = icmp eq i32 %v1_f1a0, 42
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  %v2_1071c = xor i1 %v7_10718, true
  %v3_1071c = and i1 %v2_10718, %v2_1071c
  br i1 %v3_1071c, label %.thread564, label %bb1817

.thread564:                                       ; preds = %bb1816
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10728

bb1817:                                           ; preds = %bb1816
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10720 = icmp eq i32 %v0_10720.pr, 0
  store i1 %v2_10720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10720, label %dec_label_pc_10728, label %dec_label_pc_f184

dec_label_pc_10728:                               ; preds = %.thread564, %.thread560, %bb1817, %.thread559
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_1072c = icmp ugt i32 %v1_f19c, 92
  store i1 %v2_1072c, i1* %cpsr_c.global-to-local, align 1
  %v7_1072c = icmp eq i32 %v1_f19c, 93
  store i1 %v7_1072c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1072c, label %.thread567, label %.thread568

.thread568:                                       ; preds = %dec_label_pc_10728
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1075c

.thread567:                                       ; preds = %dec_label_pc_10728
  store i32 %.1997, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10738 = icmp eq i1 %v7_10034, false
  store i1 %v2_10738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10738, label %dec_label_pc_1075c, label %dec_label_pc_10740

dec_label_pc_10740:                               ; preds = %.thread567
  %v2_10740 = icmp ugt i32 %v1_f1a0, 190
  store i1 %v2_10740, i1* %cpsr_c.global-to-local, align 1
  %v7_10740 = icmp eq i32 %v1_f1a0, 191
  store i1 %v7_10740, i1* %cpsr_z.global-to-local, align 1
  %v2_10744 = xor i1 %v2_10740, true
  %v3_10744 = or i1 %v7_10740, %v2_10744
  br i1 %v3_10744, label %bb1818, label %bb1819

bb1818:                                           ; preds = %dec_label_pc_10740
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1819

bb1819:                                           ; preds = %dec_label_pc_10740, %bb1818
  %v0_10754.pr979 = phi i32 [ %.1997, %dec_label_pc_10740 ], [ 0, %bb1818 ]
  %v2_10748 = xor i1 %v7_10740, true
  %v3_10748 = and i1 %v2_10740, %v2_10748
  br i1 %v3_10748, label %bb1820, label %bb1821

bb1820:                                           ; preds = %bb1819
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1821

bb1821:                                           ; preds = %bb1819, %bb1820
  %v0_10754.pr = phi i32 [ %v0_10754.pr979, %bb1819 ], [ 1, %bb1820 ]
  %v2_1074c = icmp ugt i32 %v1_f1a0, 191
  store i1 %v2_1074c, i1* %cpsr_c.global-to-local, align 1
  %v7_1074c = icmp eq i32 %v1_f1a0, 192
  store i1 %v7_1074c, i1* %cpsr_z.global-to-local, align 1
  %v2_10750 = xor i1 %v7_1074c, true
  %v3_10750 = and i1 %v2_1074c, %v2_10750
  br i1 %v3_10750, label %.thread572, label %bb1822

.thread572:                                       ; preds = %bb1821
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1075c

bb1822:                                           ; preds = %bb1821
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10754 = icmp eq i32 %v0_10754.pr, 0
  store i1 %v2_10754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10754, label %dec_label_pc_1075c, label %dec_label_pc_f184

dec_label_pc_1075c:                               ; preds = %.thread572, %.thread568, %bb1822, %.thread567
  store i32 %.1998, i32* %r3.global-to-local, align 4
  %v2_10760 = icmp ugt i32 %v1_f19c, 70
  store i1 %v2_10760, i1* %cpsr_c.global-to-local, align 1
  %v7_10760 = icmp eq i32 %v1_f19c, 71
  store i1 %v7_10760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10760, label %.thread575, label %.thread576

.thread576:                                       ; preds = %dec_label_pc_1075c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10780

.thread575:                                       ; preds = %dec_label_pc_1075c
  store i32 %.1998, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1076c = icmp eq i1 %v7_10070, false
  store i1 %v2_1076c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1076c, label %dec_label_pc_10780, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %.thread575
  %v2_10774 = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_10774, i1* %cpsr_c.global-to-local, align 1
  %v7_10774 = icmp eq i32 %v1_f1a0, 255
  store i1 %v7_10774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10774, label %dec_label_pc_10780, label %bb1823

bb1823:                                           ; preds = %dec_label_pc_10774
  %v3_10778 = icmp ugt i32 %v1_f1a0, 238
  store i1 %v3_10778, i1* %cpsr_c.global-to-local, align 1
  %v8_10778 = icmp eq i32 %v1_f1a0, 239
  store i1 %v8_10778, i1* %cpsr_z.global-to-local, align 1
  %v2_1077c = xor i1 %v8_10778, true
  %v3_1077c = and i1 %v3_10778, %v2_1077c
  br i1 %v3_1077c, label %dec_label_pc_f184, label %dec_label_pc_10780

dec_label_pc_10780:                               ; preds = %dec_label_pc_10774, %.thread576, %bb1823, %.thread575
  %v0_107a0.pr985 = phi i32 [ 0, %.thread576 ], [ %.1998, %bb1823 ], [ 0, %.thread575 ], [ %.1998, %dec_label_pc_10774 ]
  %v2_10780 = icmp ugt i32 %v1_f188, 97
  store i1 %v2_10780, i1* %cpsr_c.global-to-local, align 1
  %v7_10780 = icmp eq i32 %v1_f188, 98
  store i1 %v7_10780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10780, label %bb1824, label %dec_label_pc_107a8

bb1824:                                           ; preds = %dec_label_pc_10780
  %v3_10784 = icmp ugt i32 %v1_f19c, 141
  store i1 %v3_10784, i1* %cpsr_c.global-to-local, align 1
  %v8_10784 = icmp eq i32 %v1_f19c, 142
  store i1 %v8_10784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10784, label %dec_label_pc_1078c, label %dec_label_pc_107a8

dec_label_pc_1078c:                               ; preds = %bb1824
  %v2_1078c = icmp ugt i32 %v1_f1a0, 206
  store i1 %v2_1078c, i1* %cpsr_c.global-to-local, align 1
  %v7_1078c = icmp eq i32 %v1_f1a0, 207
  store i1 %v7_1078c, i1* %cpsr_z.global-to-local, align 1
  %v2_10790 = xor i1 %v2_1078c, true
  %v3_10790 = or i1 %v7_1078c, %v2_10790
  br i1 %v3_10790, label %bb1825, label %bb1826

bb1825:                                           ; preds = %dec_label_pc_1078c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1826

bb1826:                                           ; preds = %dec_label_pc_1078c, %bb1825
  %v0_107a0.pr984 = phi i32 [ %v0_107a0.pr985, %dec_label_pc_1078c ], [ 0, %bb1825 ]
  %v2_10794 = xor i1 %v7_1078c, true
  %v3_10794 = and i1 %v2_1078c, %v2_10794
  br i1 %v3_10794, label %bb1827, label %bb1828

bb1827:                                           ; preds = %bb1826
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1828

bb1828:                                           ; preds = %bb1826, %bb1827
  %v0_107a0.pr = phi i32 [ %v0_107a0.pr984, %bb1826 ], [ 1, %bb1827 ]
  %v2_10798 = icmp ugt i32 %v1_f1a0, 221
  store i1 %v2_10798, i1* %cpsr_c.global-to-local, align 1
  %v7_10798 = icmp eq i32 %v1_f1a0, 222
  store i1 %v7_10798, i1* %cpsr_z.global-to-local, align 1
  %v2_1079c = xor i1 %v7_10798, true
  %v3_1079c = and i1 %v2_10798, %v2_1079c
  br i1 %v3_1079c, label %.thread581, label %bb1829

.thread581:                                       ; preds = %bb1828
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107a8

bb1829:                                           ; preds = %bb1828
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107a0 = icmp eq i32 %v0_107a0.pr, 0
  store i1 %v2_107a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107a0, label %dec_label_pc_107a8, label %dec_label_pc_f184

dec_label_pc_107a8:                               ; preds = %dec_label_pc_10780, %.thread581, %bb1829, %bb1824
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_107ac = icmp ugt i32 %v1_f19c, 18
  store i1 %v2_107ac, i1* %cpsr_c.global-to-local, align 1
  %v7_107ac = icmp eq i32 %v1_f19c, 19
  store i1 %v7_107ac, i1* %cpsr_z.global-to-local, align 1
  %v2_107b0 = xor i1 %v2_107ac, true
  %v3_107b0 = or i1 %v7_107ac, %v2_107b0
  br i1 %v3_107b0, label %bb1830, label %bb1831

bb1830:                                           ; preds = %dec_label_pc_107a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1831

bb1831:                                           ; preds = %dec_label_pc_107a8, %bb1830
  %v4_107b4 = phi i32 [ %.1991, %dec_label_pc_107a8 ], [ 0, %bb1830 ]
  %v2_107b4 = xor i1 %v7_107ac, true
  %v3_107b4 = and i1 %v2_107ac, %v2_107b4
  br i1 %v3_107b4, label %bb1832, label %thread-pre-split584

bb1832:                                           ; preds = %bb1831
  store i32 %v4_107b4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split584

thread-pre-split584:                              ; preds = %bb1831, %bb1832
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107b8 = icmp eq i32 %v4_107b4, 0
  store i1 %v2_107b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107b8, label %dec_label_pc_107c8, label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %thread-pre-split584
  %v2_107c0 = icmp ugt i32 %v1_f19c, 22
  store i1 %v2_107c0, i1* %cpsr_c.global-to-local, align 1
  %v7_107c0 = icmp eq i32 %v1_f19c, 23
  store i1 %v7_107c0, i1* %cpsr_z.global-to-local, align 1
  %v2_107c4 = xor i1 %v2_107c0, true
  %v3_107c4 = or i1 %v7_107c0, %v2_107c4
  br i1 %v3_107c4, label %dec_label_pc_f184, label %dec_label_pc_107c8

dec_label_pc_107c8:                               ; preds = %dec_label_pc_107c0, %thread-pre-split584
  %v7_107c8 = icmp eq i32 %v1_f188, 35
  %.2004 = zext i1 %v7_107c8 to i32
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 %v2_f47c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f47c, i1* %cpsr_z.global-to-local, align 1
  %v2_107d8 = xor i1 %v2_f47c, true
  %v3_107d8 = or i1 %v7_f47c, %v2_107d8
  br i1 %v3_107d8, label %.thread587, label %bb1835

.thread587:                                       ; preds = %dec_label_pc_107c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107ec

bb1835:                                           ; preds = %dec_label_pc_107c8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107dc = icmp eq i1 %v7_107c8, false
  store i1 %v2_107dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107dc, label %dec_label_pc_107ec, label %dec_label_pc_107e4

dec_label_pc_107e4:                               ; preds = %bb1835
  %v2_107e4 = icmp ugt i32 %v1_f19c, 181
  store i1 %v2_107e4, i1* %cpsr_c.global-to-local, align 1
  %v7_107e4 = icmp eq i32 %v1_f19c, 182
  store i1 %v7_107e4, i1* %cpsr_z.global-to-local, align 1
  %v2_107e8 = xor i1 %v2_107e4, true
  %v3_107e8 = or i1 %v7_107e4, %v2_107e8
  br i1 %v3_107e8, label %dec_label_pc_f184, label %dec_label_pc_107ec

dec_label_pc_107ec:                               ; preds = %.thread587, %dec_label_pc_107e4, %bb1835
  store i32 %v0_107fc, i32* %fp.global-to-local, align 4
  %v2_107f0 = icmp ugt i32 %v1_f188, 51
  store i1 %v2_107f0, i1* %cpsr_c.global-to-local, align 1
  %v7_107f0 = icmp eq i32 %v1_f188, 52
  %.2005 = zext i1 %v7_107f0 to i32
  store i32 %.2005, i32* %r3.global-to-local, align 4
  %v2_107fc = and i32 %.2005, %v0_107fc
  %v4_107fc = icmp eq i32 %v2_107fc, 0
  store i1 %v4_107fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_107fc, label %dec_label_pc_1080c, label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %dec_label_pc_107ec
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10234, i1* %cpsr_z.global-to-local, align 1
  %v2_10808 = xor i1 %v2_10234, true
  %v3_10808 = or i1 %v7_10234, %v2_10808
  br i1 %v3_10808, label %dec_label_pc_f184, label %dec_label_pc_1080c.thread

dec_label_pc_1080c.thread:                        ; preds = %dec_label_pc_10804
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10234, i1* %cpsr_z.global-to-local, align 1
  br label %bb1839

dec_label_pc_1080c:                               ; preds = %dec_label_pc_107ec
  %.pre2094 = xor i1 %v2_10234, true
  %.pre2095 = or i1 %v7_10234, %.pre2094
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10234, i1* %cpsr_z.global-to-local, align 1
  br i1 %.pre2095, label %bb1838, label %bb1839

bb1838:                                           ; preds = %dec_label_pc_1080c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1839

bb1839:                                           ; preds = %dec_label_pc_1080c.thread, %dec_label_pc_1080c, %bb1838
  %v4_10814 = phi i32 [ %.2005, %dec_label_pc_1080c ], [ 0, %bb1838 ], [ %.2005, %dec_label_pc_1080c.thread ]
  %v3_10810.pre-phi2097 = phi i1 [ false, %dec_label_pc_1080c ], [ true, %bb1838 ], [ false, %dec_label_pc_1080c.thread ]
  %v2_10814 = xor i1 %v7_10234, true
  %v3_10814 = and i1 %v2_10234, %v2_10814
  br i1 %v3_10814, label %bb1840, label %thread-pre-split591

bb1840:                                           ; preds = %bb1839
  store i32 %v4_10814, i32* %r3.global-to-local, align 4
  br label %thread-pre-split591

thread-pre-split591:                              ; preds = %bb1839, %bb1840
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10818 = icmp eq i32 %v4_10814, 0
  store i1 %v2_10818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10818, label %dec_label_pc_10828, label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %thread-pre-split591
  %v2_10820 = icmp eq i32 %v1_f19c, 255
  store i1 %v2_10820, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10420, label %dec_label_pc_10828, label %dec_label_pc_f184

dec_label_pc_10828:                               ; preds = %dec_label_pc_10820, %thread-pre-split591
  %v2_1082c = icmp ugt i32 %v1_f188, 53
  store i1 %v2_1082c, i1* %cpsr_c.global-to-local, align 1
  %v7_1082c = icmp eq i32 %v1_f188, 54
  %.2006 = zext i1 %v7_1082c to i32
  store i32 %.2006, i32* %r3.global-to-local, align 4
  %v2_10838 = and i32 %.2006, %v0_10838
  %v4_10838 = icmp eq i32 %v2_10838, 0
  store i1 %v4_10838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10838, label %dec_label_pc_10848, label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %dec_label_pc_10828
  store i1 %v2_10234, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10810.pre-phi2097, label %dec_label_pc_f184, label %dec_label_pc_10848

dec_label_pc_10848:                               ; preds = %dec_label_pc_10840, %dec_label_pc_10828
  %v2_10848 = icmp ugt i32 %v1_f19c, 142
  store i1 %v2_10848, i1* %cpsr_c.global-to-local, align 1
  %v7_10848 = icmp eq i32 %v1_f19c, 143
  store i1 %v7_10848, i1* %cpsr_z.global-to-local, align 1
  %v2_1084c = xor i1 %v2_10848, true
  %v3_1084c = or i1 %v7_10848, %v2_1084c
  br i1 %v3_1084c, label %bb1843, label %bb1844

bb1843:                                           ; preds = %dec_label_pc_10848
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1844

bb1844:                                           ; preds = %dec_label_pc_10848, %bb1843
  %v4_10850 = phi i32 [ %.2006, %dec_label_pc_10848 ], [ 0, %bb1843 ]
  %v2_10850 = xor i1 %v7_10848, true
  %v3_10850 = and i1 %v2_10848, %v2_10850
  br i1 %v3_10850, label %bb1845, label %thread-pre-split593

bb1845:                                           ; preds = %bb1844
  store i32 %v4_10850, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1844, %bb1845
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10854 = icmp eq i32 %v4_10850, 0
  store i1 %v2_10854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10854, label %dec_label_pc_10864, label %dec_label_pc_1085c

dec_label_pc_1085c:                               ; preds = %thread-pre-split593
  %v2_1085c = icmp eq i32 %v1_f19c, 255
  store i1 %v2_1085c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10420, label %dec_label_pc_10864, label %dec_label_pc_f184

dec_label_pc_10864:                               ; preds = %dec_label_pc_1085c, %thread-pre-split593
  %v7_10864 = icmp eq i32 %v1_f188, 13
  %.2007 = zext i1 %v7_10864 to i32
  %v2_10870 = icmp ugt i32 %v1_f19c, 50
  store i1 %v2_10870, i1* %cpsr_c.global-to-local, align 1
  %v7_10870 = icmp eq i32 %v1_f19c, 51
  store i1 %v7_10870, i1* %cpsr_z.global-to-local, align 1
  %v2_10874 = xor i1 %v2_10870, true
  %v3_10874 = or i1 %v7_10870, %v2_10874
  br i1 %v3_10874, label %bb1848, label %bb1849

bb1848:                                           ; preds = %dec_label_pc_10864
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1849

bb1849:                                           ; preds = %dec_label_pc_10864, %bb1848
  %v0_1087c.pr = phi i32 [ %v4_10850, %dec_label_pc_10864 ], [ 0, %bb1848 ]
  %v2_10878 = xor i1 %v7_10870, true
  %v3_10878 = and i1 %v2_10870, %v2_10878
  br i1 %v3_10878, label %bb1850, label %thread-pre-split595

bb1850:                                           ; preds = %bb1849
  store i32 %.2007, i32* %r3.global-to-local, align 4
  br label %thread-pre-split595

thread-pre-split595:                              ; preds = %bb1849, %bb1850
  %v0_1087c = phi i32 [ %.2007, %bb1850 ], [ %v0_1087c.pr, %bb1849 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1087c = icmp eq i32 %v0_1087c, 0
  store i1 %v2_1087c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1087c, label %dec_label_pc_1088c, label %dec_label_pc_10884

dec_label_pc_10884:                               ; preds = %thread-pre-split595
  store i1 %v2_f504, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fbc4, label %dec_label_pc_f184, label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %dec_label_pc_10884, %thread-pre-split595
  store i1 %v2_10558, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10558, i1* %cpsr_z.global-to-local, align 1
  %v2_10890 = xor i1 %v2_10558, true
  %v3_10890 = or i1 %v7_10558, %v2_10890
  br i1 %v3_10890, label %bb1851, label %bb1852

bb1851:                                           ; preds = %dec_label_pc_1088c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1852

bb1852:                                           ; preds = %dec_label_pc_1088c, %bb1851
  %v0_10898.pr = phi i32 [ %v0_1087c, %dec_label_pc_1088c ], [ 0, %bb1851 ]
  %v2_10894 = xor i1 %v7_10558, true
  %v3_10894 = and i1 %v2_10558, %v2_10894
  br i1 %v3_10894, label %bb1853, label %thread-pre-split596

bb1853:                                           ; preds = %bb1852
  store i32 %.2007, i32* %r3.global-to-local, align 4
  br label %thread-pre-split596

thread-pre-split596:                              ; preds = %bb1852, %bb1853
  %v0_10898 = phi i32 [ %.2007, %bb1853 ], [ %v0_10898.pr, %bb1852 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10898 = icmp eq i32 %v0_10898, 0
  store i1 %v2_10898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10898, label %dec_label_pc_108a8, label %dec_label_pc_108a0

dec_label_pc_108a0:                               ; preds = %thread-pre-split596
  store i1 %v2_f2b0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2b0, i1* %cpsr_z.global-to-local, align 1
  %v2_108a4 = xor i1 %v2_f2b0, true
  %v3_108a4 = or i1 %v7_f2b0, %v2_108a4
  br i1 %v3_108a4, label %dec_label_pc_f184, label %dec_label_pc_108a8

dec_label_pc_108a8:                               ; preds = %dec_label_pc_108a0, %thread-pre-split596
  %v2_108a8 = icmp ugt i32 %v1_f19c, 171
  store i1 %v2_108a8, i1* %cpsr_c.global-to-local, align 1
  %v7_108a8 = icmp eq i32 %v1_f19c, 172
  store i1 %v7_108a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108a8, label %.thread597, label %.thread598

.thread598:                                       ; preds = %dec_label_pc_108a8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_108bc

.thread597:                                       ; preds = %dec_label_pc_108a8
  store i32 %.1985, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108b4 = icmp eq i1 %v7_faec, false
  store i1 %v2_108b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108b4, label %dec_label_pc_108bc, label %dec_label_pc_f184

dec_label_pc_108bc:                               ; preds = %.thread598, %.thread597
  %v2_108bc = icmp ugt i32 %v1_f19c, 13
  store i1 %v2_108bc, i1* %cpsr_c.global-to-local, align 1
  %v7_108bc = icmp eq i32 %v1_f19c, 14
  store i1 %v7_108bc, i1* %cpsr_z.global-to-local, align 1
  %v2_108c0 = xor i1 %v2_108bc, true
  %v3_108c0 = or i1 %v7_108bc, %v2_108c0
  br i1 %v3_108c0, label %bb1854, label %bb1855

bb1854:                                           ; preds = %dec_label_pc_108bc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1855

bb1855:                                           ; preds = %dec_label_pc_108bc, %bb1854
  %v2_108c4 = xor i1 %v7_108bc, true
  %v3_108c4 = and i1 %v2_108bc, %v2_108c4
  br i1 %v3_108c4, label %thread-pre-split601, label %thread-pre-split601.thread

thread-pre-split601.thread:                       ; preds = %bb1855
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d18

thread-pre-split601:                              ; preds = %bb1855
  store i32 %.2002, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108c8 = icmp eq i1 %v7_1040c, false
  store i1 %v2_108c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108c8, label %dec_label_pc_10d18, label %dec_label_pc_108d0

dec_label_pc_108d0:                               ; preds = %thread-pre-split601
  %v2_108d0 = icmp eq i32 %v1_f19c, 255
  store i1 %v2_108d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10420, label %dec_label_pc_108d8, label %dec_label_pc_f184

dec_label_pc_108d8:                               ; preds = %dec_label_pc_10d18, %bb1889, %bb1887, %dec_label_pc_108d0
  %v2_108d8 = icmp ugt i32 %v1_f188, 211
  store i1 %v2_108d8, i1* %cpsr_c.global-to-local, align 1
  %v7_108d8 = icmp eq i32 %v1_f188, 212
  store i1 %v7_108d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d8, label %.thread602, label %.thread603

.thread603:                                       ; preds = %dec_label_pc_108d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_108f8

.thread602:                                       ; preds = %dec_label_pc_108d8
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108e4 = icmp eq i1 %v7_fd5c, false
  store i1 %v2_108e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108e4, label %dec_label_pc_108f8, label %dec_label_pc_108ec

dec_label_pc_108ec:                               ; preds = %.thread602
  %v2_108ec = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_108ec, i1* %cpsr_c.global-to-local, align 1
  %v7_108ec = icmp eq i32 %v1_f1a0, 255
  store i1 %v7_108ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108ec, label %dec_label_pc_108f8, label %bb1856

bb1856:                                           ; preds = %dec_label_pc_108ec
  %v3_108f0 = icmp ugt i32 %v1_f1a0, 222
  store i1 %v3_108f0, i1* %cpsr_c.global-to-local, align 1
  %v8_108f0 = icmp eq i32 %v1_f1a0, 223
  store i1 %v8_108f0, i1* %cpsr_z.global-to-local, align 1
  %v2_108f4 = xor i1 %v8_108f0, true
  %v3_108f4 = and i1 %v3_108f0, %v2_108f4
  br i1 %v3_108f4, label %dec_label_pc_f184, label %dec_label_pc_108f8

dec_label_pc_108f8:                               ; preds = %dec_label_pc_108ec, %.thread603, %bb1856, %.thread602
  store i32 %.1965, i32* %r3.global-to-local, align 4
  %v2_108fc = icmp ugt i32 %v1_f188, 88
  store i1 %v2_108fc, i1* %cpsr_c.global-to-local, align 1
  %v7_108fc = icmp eq i32 %v1_f188, 89
  store i1 %v7_108fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108fc, label %.thread606, label %.thread607

.thread607:                                       ; preds = %dec_label_pc_108f8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1092c

.thread606:                                       ; preds = %dec_label_pc_108f8
  store i32 %.1965, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10908 = icmp eq i1 %v7_f520, false
  store i1 %v2_10908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10908, label %dec_label_pc_1092c, label %dec_label_pc_10910

dec_label_pc_10910:                               ; preds = %.thread606
  %v2_10910 = icmp ugt i32 %v1_f1a0, 94
  store i1 %v2_10910, i1* %cpsr_c.global-to-local, align 1
  %v7_10910 = icmp eq i32 %v1_f1a0, 95
  store i1 %v7_10910, i1* %cpsr_z.global-to-local, align 1
  %v2_10914 = xor i1 %v2_10910, true
  %v3_10914 = or i1 %v7_10910, %v2_10914
  br i1 %v3_10914, label %bb1857, label %bb1858

bb1857:                                           ; preds = %dec_label_pc_10910
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1858

bb1858:                                           ; preds = %dec_label_pc_10910, %bb1857
  %v0_10924.pr1002 = phi i32 [ %.1965, %dec_label_pc_10910 ], [ 0, %bb1857 ]
  %v2_10918 = xor i1 %v7_10910, true
  %v3_10918 = and i1 %v2_10910, %v2_10918
  br i1 %v3_10918, label %bb1859, label %bb1860

bb1859:                                           ; preds = %bb1858
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1860

bb1860:                                           ; preds = %bb1858, %bb1859
  %v0_10924.pr = phi i32 [ %v0_10924.pr1002, %bb1858 ], [ 1, %bb1859 ]
  %v2_1091c = icmp ugt i32 %v1_f1a0, 95
  store i1 %v2_1091c, i1* %cpsr_c.global-to-local, align 1
  %v7_1091c = icmp eq i32 %v1_f1a0, 96
  store i1 %v7_1091c, i1* %cpsr_z.global-to-local, align 1
  %v2_10920 = xor i1 %v7_1091c, true
  %v3_10920 = and i1 %v2_1091c, %v2_10920
  br i1 %v3_10920, label %.thread611, label %bb1861

.thread611:                                       ; preds = %bb1860
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1092c

bb1861:                                           ; preds = %bb1860
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10924 = icmp eq i32 %v0_10924.pr, 0
  store i1 %v2_10924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10924, label %dec_label_pc_1092c, label %dec_label_pc_f184

dec_label_pc_1092c:                               ; preds = %.thread611, %.thread607, %bb1861, %.thread606
  %v7_1092c = icmp eq i32 %v1_f188, 219
  %.2008 = zext i1 %v7_1092c to i32
  store i32 %.2008, i32* %r3.global-to-local, align 4
  %v2_10938 = icmp ugt i32 %v1_f19c, 214
  store i1 %v2_10938, i1* %cpsr_c.global-to-local, align 1
  %v7_10938 = icmp eq i32 %v1_f19c, 215
  store i1 %v7_10938, i1* %cpsr_z.global-to-local, align 1
  %v2_1093c = xor i1 %v2_10938, true
  %v3_1093c = or i1 %v7_10938, %v2_1093c
  br i1 %v3_1093c, label %.thread616, label %bb1864

.thread616:                                       ; preds = %dec_label_pc_1092c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10950

bb1864:                                           ; preds = %dec_label_pc_1092c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10940 = icmp eq i1 %v7_1092c, false
  store i1 %v2_10940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10940, label %dec_label_pc_10950, label %dec_label_pc_10948

dec_label_pc_10948:                               ; preds = %bb1864
  %v2_10948 = icmp ugt i32 %v1_f19c, 229
  store i1 %v2_10948, i1* %cpsr_c.global-to-local, align 1
  %v7_10948 = icmp eq i32 %v1_f19c, 230
  store i1 %v7_10948, i1* %cpsr_z.global-to-local, align 1
  %v2_1094c = xor i1 %v2_10948, true
  %v3_1094c = or i1 %v7_10948, %v2_1094c
  br i1 %v3_1094c, label %dec_label_pc_f184, label %dec_label_pc_10950

dec_label_pc_10950:                               ; preds = %.thread616, %dec_label_pc_10948, %bb1864
  %v7_10950 = icmp eq i32 %v1_f188, 23
  %.2009 = zext i1 %v7_10950 to i32
  store i32 %.2009, i32* %r3.global-to-local, align 4
  store i1 %v2_1072c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1072c, i1* %cpsr_z.global-to-local, align 1
  %v2_10960 = xor i1 %v2_1072c, true
  %v3_10960 = or i1 %v7_1072c, %v2_10960
  br i1 %v3_10960, label %.thread621, label %bb1867

.thread621:                                       ; preds = %dec_label_pc_10950
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10974

bb1867:                                           ; preds = %dec_label_pc_10950
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10964 = icmp eq i1 %v7_10950, false
  store i1 %v2_10964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10964, label %dec_label_pc_10974, label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %bb1867
  %v2_1096c = icmp ugt i32 %v1_f19c, 107
  store i1 %v2_1096c, i1* %cpsr_c.global-to-local, align 1
  %v7_1096c = icmp eq i32 %v1_f19c, 108
  store i1 %v7_1096c, i1* %cpsr_z.global-to-local, align 1
  %v2_10970 = xor i1 %v2_1096c, true
  %v3_10970 = or i1 %v7_1096c, %v2_10970
  br i1 %v3_10970, label %dec_label_pc_f184, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %.thread621, %dec_label_pc_1096c, %bb1867
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 %v2_100f4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100f4, i1* %cpsr_z.global-to-local, align 1
  %v2_1097c = xor i1 %v2_100f4, true
  %v3_1097c = or i1 %v7_100f4, %v2_1097c
  br i1 %v3_1097c, label %bb1868, label %bb1869

bb1868:                                           ; preds = %dec_label_pc_10974
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1869

bb1869:                                           ; preds = %dec_label_pc_10974, %bb1868
  %v4_10980 = phi i32 [ %.1990, %dec_label_pc_10974 ], [ 0, %bb1868 ]
  %v2_10980 = xor i1 %v7_100f4, true
  %v3_10980 = and i1 %v2_100f4, %v2_10980
  br i1 %v3_10980, label %bb1870, label %thread-pre-split624

bb1870:                                           ; preds = %bb1869
  store i32 %v4_10980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split624

thread-pre-split624:                              ; preds = %bb1869, %bb1870
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10984 = icmp eq i32 %v4_10980, 0
  store i1 %v2_10984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10984, label %dec_label_pc_10994, label %dec_label_pc_1098c

dec_label_pc_1098c:                               ; preds = %thread-pre-split624
  store i1 %v2_fc88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fc88, i1* %cpsr_z.global-to-local, align 1
  %v2_10990 = xor i1 %v2_fc88, true
  %v3_10990 = or i1 %v7_fc88, %v2_10990
  br i1 %v3_10990, label %dec_label_pc_f184, label %dec_label_pc_10994

dec_label_pc_10994:                               ; preds = %dec_label_pc_1098c, %thread-pre-split624
  %v7_10994 = icmp eq i32 %v1_f188, 106
  %.2010 = zext i1 %v7_10994 to i32
  store i32 %.2010, i32* %r3.global-to-local, align 4
  store i1 %v2_104dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_104dc, i1* %cpsr_z.global-to-local, align 1
  %v2_109a4 = xor i1 %v2_104dc, true
  %v3_109a4 = or i1 %v7_104dc, %v2_109a4
  br i1 %v3_109a4, label %.thread627, label %bb1873

.thread627:                                       ; preds = %dec_label_pc_10994
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109b8

bb1873:                                           ; preds = %dec_label_pc_10994
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109a8 = icmp eq i1 %v7_10994, false
  store i1 %v2_109a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109a8, label %dec_label_pc_109b8, label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %bb1873
  %v2_109b0 = icmp ugt i32 %v1_f19c, 187
  store i1 %v2_109b0, i1* %cpsr_c.global-to-local, align 1
  %v7_109b0 = icmp eq i32 %v1_f19c, 188
  store i1 %v7_109b0, i1* %cpsr_z.global-to-local, align 1
  %v2_109b4 = xor i1 %v2_109b0, true
  %v3_109b4 = or i1 %v7_109b0, %v2_109b4
  br i1 %v3_109b4, label %dec_label_pc_f184, label %dec_label_pc_109b8

dec_label_pc_109b8:                               ; preds = %.thread627, %dec_label_pc_109b0, %bb1873
  %v7_109b8 = icmp eq i32 %v1_f188, 34
  %.2011 = zext i1 %v7_109b8 to i32
  store i32 %.2011, i32* %r3.global-to-local, align 4
  %v2_109c4 = icmp ugt i32 %v1_f19c, 243
  store i1 %v2_109c4, i1* %cpsr_c.global-to-local, align 1
  %v7_109c4 = icmp eq i32 %v1_f19c, 244
  store i1 %v7_109c4, i1* %cpsr_z.global-to-local, align 1
  %v2_109c8 = xor i1 %v2_109c4, true
  %v3_109c8 = or i1 %v7_109c4, %v2_109c8
  br i1 %v3_109c8, label %.thread632, label %bb1876

.thread632:                                       ; preds = %dec_label_pc_109b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_109dc

bb1876:                                           ; preds = %dec_label_pc_109b8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109cc = icmp eq i1 %v7_109b8, false
  store i1 %v2_109cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109cc, label %dec_label_pc_109dc, label %dec_label_pc_109d4

dec_label_pc_109d4:                               ; preds = %bb1876
  %v2_109d4 = icmp eq i32 %v1_f19c, 255
  store i1 %v2_109d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10420, label %dec_label_pc_109dc, label %dec_label_pc_f184

dec_label_pc_109dc:                               ; preds = %.thread632, %dec_label_pc_109d4, %bb1876
  %v7_109dc = icmp eq i32 %v1_f188, 87
  %.2012 = zext i1 %v7_109dc to i32
  store i32 %.2012, i32* %r3.global-to-local, align 4
  store i1 %v2_f428, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f428, i1* %cpsr_z.global-to-local, align 1
  %v2_109ec = xor i1 %v2_f428, true
  %v3_109ec = or i1 %v7_f428, %v2_109ec
  br i1 %v3_109ec, label %.thread637, label %bb1879

.thread637:                                       ; preds = %dec_label_pc_109dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a00

bb1879:                                           ; preds = %dec_label_pc_109dc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_109f0 = icmp eq i1 %v7_109dc, false
  store i1 %v2_109f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109f0, label %dec_label_pc_10a00, label %dec_label_pc_109f8

dec_label_pc_109f8:                               ; preds = %bb1879
  store i1 %v2_f270, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f8a0, label %dec_label_pc_f184, label %dec_label_pc_10a00

dec_label_pc_10a00:                               ; preds = %.thread637, %dec_label_pc_109f8, %bb1879
  %v7_10a00 = icmp eq i32 %v1_f188, 86
  %.2013 = zext i1 %v7_10a00 to i32
  store i32 %.2013, i32* %r3.global-to-local, align 4
  %v2_10a0c = icmp ugt i32 %v1_f19c, 207
  store i1 %v2_10a0c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a0c = icmp eq i32 %v1_f19c, 208
  store i1 %v7_10a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a0c, label %bb1882, label %dec_label_pc_10a18

bb1882:                                           ; preds = %dec_label_pc_10a00
  %v2_10a00 = icmp ugt i32 %v1_f188, 85
  store i1 %v2_10a00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a00, label %dec_label_pc_f184, label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %dec_label_pc_10a00, %bb1882
  %v2_10a18 = and i32 %.2013, %.2001
  %v4_10a18 = icmp eq i32 %v2_10a18, 0
  store i1 %v4_10a18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10a18, label %dec_label_pc_10a20, label %dec_label_pc_f184

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10a18
  %v2_10a20 = icmp ugt i32 %v1_f188, 192
  store i1 %v2_10a20, i1* %cpsr_c.global-to-local, align 1
  %v7_10a20 = icmp eq i32 %v1_f188, 193
  store i1 %v7_10a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a20, label %bb1883, label %dec_label_pc_10a2c

bb1883:                                           ; preds = %dec_label_pc_10a20
  store i1 %v2_f8b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8b4, label %dec_label_pc_f184, label %dec_label_pc_10a2c

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10a20, %bb1883
  store i32 %v1_f8f0, i32* %r3.global-to-local, align 4
  %v2_10a30 = icmp ugt i32 %v1_f188, 119
  store i1 %v2_10a30, i1* %cpsr_c.global-to-local, align 1
  %v7_10a30 = icmp eq i32 %v1_f188, 120
  store i1 %v7_10a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a30, label %.thread643, label %.thread644

.thread644:                                       ; preds = %dec_label_pc_10a2c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a4c

.thread643:                                       ; preds = %dec_label_pc_10a2c
  %v2_10a38 = urem i32 %v1_f8f0, 2
  store i32 %v2_10a38, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a3c = icmp eq i32 %v2_10a38, 0
  store i1 %v2_10a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a3c, label %dec_label_pc_10a4c, label %dec_label_pc_10a44

dec_label_pc_10a44:                               ; preds = %.thread643
  %v2_10a44 = icmp ugt i32 %v1_f19c, 106
  store i1 %v2_10a44, i1* %cpsr_c.global-to-local, align 1
  %v7_10a44 = icmp eq i32 %v1_f19c, 107
  store i1 %v7_10a44, i1* %cpsr_z.global-to-local, align 1
  %v2_10a48 = xor i1 %v2_10a44, true
  %v3_10a48 = or i1 %v7_10a44, %v2_10a48
  br i1 %v3_10a48, label %dec_label_pc_f184, label %dec_label_pc_10a4c

dec_label_pc_10a4c:                               ; preds = %.thread644, %dec_label_pc_10a44, %.thread643
  store i32 %.1962, i32* %r3.global-to-local, align 4
  store i32 %.1988, i32* %r4.global-to-local, align 4
  %v2_10a54 = and i32 %.1962, %.1988
  %v4_10a54 = icmp eq i32 %v2_10a54, 0
  store i1 %v4_10a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10a54, label %dec_label_pc_10a5c, label %dec_label_pc_f184

dec_label_pc_10a5c:                               ; preds = %dec_label_pc_10a4c
  %v2_10a5c = icmp ugt i32 %v1_f188, 77
  store i1 %v2_10a5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a5c = icmp eq i32 %v1_f188, 78
  store i1 %v7_10a5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a5c, label %bb1884, label %dec_label_pc_10a70

bb1884:                                           ; preds = %dec_label_pc_10a5c
  %v3_10a60 = icmp ugt i32 %v1_f19c, 45
  store i1 %v3_10a60, i1* %cpsr_c.global-to-local, align 1
  %v8_10a60 = icmp eq i32 %v1_f19c, 46
  store i1 %v8_10a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a60, label %.thread649.thread, label %dec_label_pc_10a70

.thread649.thread:                                ; preds = %bb1884
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f184

dec_label_pc_10a70:                               ; preds = %bb1884, %dec_label_pc_10a5c
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10a70 = icmp ugt i32 %v1_f188, 223
  store i1 %v2_10a70, i1* %cpsr_c.global-to-local, align 1
  %v7_10a70 = icmp eq i32 %v1_f188, 224
  store i1 %v7_10a70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a70, label %dec_label_pc_f184, label %dec_label_pc_10a78

dec_label_pc_10a78:                               ; preds = %dec_label_pc_10a70
  %v5_10a84 = call i32 @llvm.bswap.i32(i32 %v0_f184)
  store i32 %v5_10a84, i32* %r3.global-to-local, align 4
  %v3_10a90 = mul nuw i32 %v3_f1a4, 16777216
  %v1_10a88 = udiv i32 %v5_10a84, 256
  %v3_10a94 = and i32 %v1_10a88, 65280
  %v1_10a8c = mul i32 %v5_10a84, 256
  %v4_10a98 = and i32 %v1_10a8c, 16711680
  %tmp2103 = and i32 %v0_f184, 32768
  %v3_10a9c = icmp ne i32 %tmp2103, 0
  store i1 %v3_10a9c, i1* %cpsr_c.global-to-local, align 1
  %v4_10a9c = udiv i32 %v5_10a84, 16777216
  store i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32* @r0, align 4
  %v5_10a9c = or i32 %v4_10a9c, %v3_10a90
  %v5_10a98 = or i32 %v5_10a9c, %v4_10a98
  %v2_10aa4 = or i32 %v5_10a98, %v3_10a94
  store i32 %v2_10aa4, i32* %r2.global-to-local, align 4
  store i32 %v2_10aa4, i32* @global_var_1dbe4.207, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1dbde.208 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1dbdf.209 to i8*), align 4
  %v3_10ab8 = call i32 @function_d0b8(i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32 20)
  %sext = mul i32 %v3_10ab8, 16777216
  %v1_10abc = sdiv i32 %sext, 16777216
  store i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dbe8.145 to i32), i32* %fp.global-to-local, align 4
  %v4_10ac8 = load i32, i32* @global_var_1dbe4.207, align 4
  %v1_10acc = and i32 %v1_10abc, 128
  %v2_10acc = icmp ne i32 %v1_10acc, 0
  store i1 %v2_10acc, i1* %cpsr_c.global-to-local, align 1
  %v3_10acc = ashr i32 %sext, 31
  store i32 23, i32* %ip.global-to-local, align 4
  %v1_10ad4 = trunc i32 %v3_10acc to i8
  store i8 %v1_10ad4, i8* bitcast (i32* @global_var_1dbdf.209 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1dbe8.145 to i32), i32* @r1, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dbeb.152 to i8*), align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  %v1_10ae4 = trunc i32 %v1_10abc to i8
  store i8 %v1_10ae4, i8* bitcast (i32* @global_var_1dbde.208 to i8*), align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 %v4_10ac8, i32* @global_var_1dbec.211, align 4
  %v0_10af0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10af0 = trunc i32 %v0_10af0 to i8
  store i8 %v1_10af0, i8* bitcast (i32* @global_var_1dbea.151 to i8*), align 4
  store i8 %v1_10af0, i8* bitcast (i32* @global_var_1dbf8.212 to i8*), align 4
  store i8 %v1_10af0, i8* bitcast (i32* @global_var_1dbf9.213 to i8*), align 4
  %v5_10afc = call i32 @function_d114(i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32 ptrtoint (i32* @global_var_1dbe8.145 to i32), i32 5120, i32 20)
  %v2_10b00 = load i32, i32* @global_var_1dbe8.145, align 4
  %sext3 = mul i32 %v5_10afc, 16777216
  %v1_10b08 = sdiv i32 %sext3, 16777216
  store i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), i32* %r1.global-to-local, align 4
  %v2_10b10 = load i32, i32* @global_var_1dc6c.139, align 4
  store i32 %v2_10b10, i32* %r0.global-to-local, align 4
  %v3_10b14 = udiv i32 %v2_10b00, 65536
  %v3_10b18 = ashr i32 %sext3, 31
  %v1_10b20 = trunc i32 %v3_10b18 to i8
  store i8 %v1_10b20, i8* bitcast (i32* @global_var_1dbf9.213 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v1_10b2c = and i32 %v3_10b14, 128
  %v2_10b2c = icmp ne i32 %v1_10b2c, 0
  store i1 %v2_10b2c, i1* %cpsr_c.global-to-local, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v1_10b48 = trunc i32 %v1_10b08 to i8
  store i8 %v1_10b48, i8* bitcast (i32* @global_var_1dbf8.212 to i8*), align 4
  store i32 %v2_11b2c, i32* @r4, align 4
  %v8_10b5c = call i32 @function_1349c(i32 %v2_10b10, i32* bitcast (i8** @global_var_1dbd4.141 to i32*), i32 40, i32 16384, i32 %v2_11b2c, i32 16)
  store i32 %v8_10b5c, i32* %r0.global-to-local, align 4
  %v3_10b60 = load i32, i32* %stack_var_-52, align 4
  %v1_10b64 = add i32 %v3_10b60, 1
  store i32 %v1_10b64, i32* %r3.global-to-local, align 4
  %v3_10b68 = icmp ugt i32 %v1_10b64, 383
  store i1 %v3_10b68, i1* %cpsr_c.global-to-local, align 1
  %v8_10b68 = icmp eq i32 %v1_10b64, 384
  store i1 %v8_10b68, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10b64, i32* %stack_var_-52, align 4
  %v5_10b70 = icmp slt i32 %v1_10b64, 384
  br i1 %v5_10b70, label %dec_label_pc_f150, label %dec_label_pc_10b74

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10a78
  store i32 %v2_f138, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10b7c

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_f130, %dec_label_pc_10b74
  %stack_var_-2036.1 = phi i32 [ %stack_var_-2036.0, %dec_label_pc_f130 ], [ %v2_f138, %dec_label_pc_10b74 ]
  %v0_10b7c = call i32 @function_131f0()
  store i32 %v0_10b7c, i32* %r0.global-to-local, align 4
  store i32 %v2_f128, i32* %ip.global-to-local, align 4
  store i32 %v0_10b7c, i32* %fp.global-to-local, align 4
  store i32 %v1_10b88, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10b90

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10c4c, %dec_label_pc_10c44, %dec_label_pc_10c3c, %dec_label_pc_10c10, %dec_label_pc_10bfc, %dec_label_pc_10bf0, %dec_label_pc_10bd8, %dec_label_pc_10c34, %dec_label_pc_10c28, %dec_label_pc_10bd0, %dec_label_pc_10cec, %dec_label_pc_10b7c
  %v1_10b94 = phi i32 [ %v0_10b7c, %dec_label_pc_10b7c ], [ %v1_10b94.pre.pre, %dec_label_pc_10cec ], [ %v0_10bc4, %dec_label_pc_10bd0 ], [ %v0_10bc4, %dec_label_pc_10c28 ], [ %v0_10bc4, %dec_label_pc_10c34 ], [ %v0_10bc4, %dec_label_pc_10bd8 ], [ %v0_10bc4, %dec_label_pc_10bf0 ], [ %v0_10bc4, %dec_label_pc_10bfc ], [ %v0_10bc4, %dec_label_pc_10c10 ], [ %v0_10bc4, %dec_label_pc_10c3c ], [ %v0_10bc4, %dec_label_pc_10c44 ], [ %v0_10bc4, %dec_label_pc_10c4c ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10b94 = inttoptr i32 %v1_10b94 to i32*
  store i32 0, i32* %v2_10b94, align 4
  %v2_10ba0 = load i32, i32* @global_var_1dc6c.139, align 4
  store i32 %v2_10ba0, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_f128, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10bb0 = load i32, i32* %ip.global-to-local, align 4
  %v7_10bb8 = call i32 @function_1343c(i32 %v2_10ba0, i32* nonnull %stack_var_-1862, i32 1514, i32 16384, i32 %v0_10bb0, i32 %v0_10bb0)
  store i32 %v7_10bb8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bbc = icmp eq i32 %v7_10bb8, 0
  store i1 %v2_10bbc, i1* %cpsr_z.global-to-local, align 1
  %tmp1886 = icmp slt i32 %v7_10bb8, 1
  br i1 %tmp1886, label %dec_label_pc_10d38, label %dec_label_pc_10bc4

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10b90
  %v0_10bc4 = load i32, i32* %fp.global-to-local, align 4
  %v1_10bc4 = inttoptr i32 %v0_10bc4 to i32*
  %v2_10bc4 = load i32, i32* %v1_10bc4, align 4
  store i32 %v2_10bc4, i32* %r3.global-to-local, align 4
  %v2_10bc8 = icmp ugt i32 %v2_10bc4, 10
  store i1 %v2_10bc8, i1* %cpsr_c.global-to-local, align 1
  %v7_10bc8 = icmp eq i32 %v2_10bc4, 11
  store i1 %v7_10bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bc8, label %dec_label_pc_10d38, label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc4
  %v2_10bd0 = icmp ugt i32 %v7_10bb8, 38
  store i1 %v2_10bd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10bd0 = icmp eq i32 %v7_10bb8, 39
  store i1 %v7_10bd0, i1* %cpsr_z.global-to-local, align 1
  %v2_10bd4 = xor i1 %v2_10bd0, true
  %v3_10bd4 = or i1 %v7_10bd0, %v2_10bd4
  br i1 %v3_10bd4, label %dec_label_pc_10b90, label %dec_label_pc_10bd8

dec_label_pc_10bd8:                               ; preds = %dec_label_pc_10bd0
  store i32 %v2_f128, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc4c.49 to i32), i32* %r1.global-to-local, align 4
  %v3_10be0 = load i32, i32* %v2_10be0, align 4
  store i32 %v3_10be0, i32* %r2.global-to-local, align 4
  %v2_10be4 = load i32, i32* @global_var_1dc4c.49, align 4
  store i32 %v2_10be4, i32* %r3.global-to-local, align 4
  %v3_10be8 = icmp uge i32 %v3_10be0, %v2_10be4
  store i1 %v3_10be8, i1* %cpsr_c.global-to-local, align 1
  %v9_10be8 = icmp eq i32 %v3_10be0, %v2_10be4
  store i1 %v9_10be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10be8, label %dec_label_pc_10bf0, label %dec_label_pc_10b90

dec_label_pc_10bf0:                               ; preds = %dec_label_pc_10bd8
  %v3_10bf0 = load i8, i8* %v2_10bf0, align 1
  %v4_10bf0 = zext i8 %v3_10bf0 to i32
  store i32 %v4_10bf0, i32* %r3.global-to-local, align 4
  %v2_10bf4 = icmp ugt i8 %v3_10bf0, 5
  store i1 %v2_10bf4, i1* %cpsr_c.global-to-local, align 1
  %v7_10bf4 = icmp eq i8 %v3_10bf0, 6
  store i1 %v7_10bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bf4, label %dec_label_pc_10bfc, label %dec_label_pc_10b90

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10bf0
  %v0_10bfc = load i32, i32* @r5, align 4
  %v1_10bfc = inttoptr i32 %v0_10bfc to i8*
  %v2_10bfc = load i8, i8* %v1_10bfc, align 1
  %v3_10bfc = zext i8 %v2_10bfc to i32
  store i32 %v3_10bfc, i32* %r3.global-to-local, align 4
  %v1_10c00 = add i32 %v0_10bfc, 1
  %v2_10c00 = inttoptr i32 %v1_10c00 to i8*
  %v3_10c00 = load i8, i8* %v2_10c00, align 1
  %v4_10c00 = zext i8 %v3_10c00 to i32
  store i32 %v4_10c00, i32* %r2.global-to-local, align 4
  %v4_10c04 = mul nuw nsw i32 %v4_10c00, 256
  %v5_10c04 = or i32 %v4_10c04, %v3_10bfc
  store i32 %v5_10c04, i32* %r3.global-to-local, align 4
  %v2_10c08 = icmp ugt i32 %v5_10c04, 5887
  store i1 %v2_10c08, i1* %cpsr_c.global-to-local, align 1
  %v7_10c08 = icmp eq i32 %v5_10c04, 5888
  store i1 %v7_10c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c08, label %dec_label_pc_10c10, label %dec_label_pc_10b90

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10bfc
  %v1_10c10 = add i32 %v0_10bfc, 3
  %v2_10c10 = inttoptr i32 %v1_10c10 to i8*
  %v3_10c10 = load i8, i8* %v2_10c10, align 1
  %v4_10c10 = zext i8 %v3_10c10 to i32
  store i32 %v4_10c10, i32* %r2.global-to-local, align 4
  %v1_10c14 = add i32 %v0_10bfc, 2
  %v2_10c14 = inttoptr i32 %v1_10c14 to i8*
  %v3_10c14 = load i8, i8* %v2_10c14, align 1
  %v4_10c14 = zext i8 %v3_10c14 to i32
  %v4_10c18 = mul nuw nsw i32 %v4_10c10, 256
  %v5_10c18 = or i32 %v4_10c14, %v4_10c18
  store i32 %v5_10c18, i32* %r3.global-to-local, align 4
  store i32 %v4_ef1c, i32* %r2.global-to-local, align 4
  %v3_10c20 = icmp uge i32 %v5_10c18, %v4_ef1c
  store i1 %v3_10c20, i1* %cpsr_c.global-to-local, align 1
  %v9_10c20 = icmp eq i32 %v5_10c18, %v4_ef1c
  store i1 %v9_10c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10c20, label %dec_label_pc_10c28, label %dec_label_pc_10b90

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10c10
  %v1_10c28 = add i32 %v0_10bfc, 13
  %v2_10c28 = inttoptr i32 %v1_10c28 to i8*
  %v3_10c28 = load i8, i8* %v2_10c28, align 1
  %v4_10c28 = zext i8 %v3_10c28 to i32
  store i32 %v4_10c28, i32* %r3.global-to-local, align 4
  %v1_10c2c = and i32 %v4_10c28, 2
  %v2_10c2c = icmp eq i32 %v1_10c2c, 0
  store i1 %v2_10c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c2c, label %dec_label_pc_10b90, label %dec_label_pc_10c34

dec_label_pc_10c34:                               ; preds = %dec_label_pc_10c28
  %v1_10c34 = and i32 %v4_10c28, 16
  %v2_10c34 = icmp eq i32 %v1_10c34, 0
  store i1 %v2_10c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c34, label %dec_label_pc_10b90, label %dec_label_pc_10c3c

dec_label_pc_10c3c:                               ; preds = %dec_label_pc_10c34
  %v1_10c3c = and i32 %v4_10c28, 4
  %v2_10c3c = icmp eq i32 %v1_10c3c, 0
  store i1 %v2_10c3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c3c, label %dec_label_pc_10c44, label %dec_label_pc_10b90

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c3c
  %tmp2104 = urem i8 %v3_10c28, 2
  %v2_10c44 = icmp eq i8 %tmp2104, 0
  store i1 %v2_10c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c44, label %dec_label_pc_10c4c, label %dec_label_pc_10b90

dec_label_pc_10c4c:                               ; preds = %dec_label_pc_10c44
  %v1_10c4c = add i32 %v0_10bfc, 8
  %v2_10c4c = inttoptr i32 %v1_10c4c to i32*
  %v3_10c4c = load i32, i32* %v2_10c4c, align 4
  %v2_10c68 = call i32 @llvm.bswap.i32(i32 %v3_10c4c)
  %v1_10c6c = add i32 %v2_10c68, -1
  %v1_10c70 = udiv i32 %v1_10c6c, 256
  %v3_10c74 = and i32 %v1_10c70, 65280
  %v1_10c78 = and i32 %v1_10c6c, 65280
  store i32 %v1_10c78, i32* %r2.global-to-local, align 4
  %v3_10c7c = mul i32 %v1_10c6c, 16777216
  %v4_10c80 = udiv i32 %v1_10c6c, 16777216
  %v5_10c80 = or i32 %v3_10c74, %v4_10c80
  store i32 %v5_10c80, i32* %r1.global-to-local, align 4
  store i32 %v2_f128, i32* %r3.global-to-local, align 4
  %v4_10c88 = mul nuw nsw i32 %v1_10c78, 256
  %v5_10c88 = or i32 %v4_10c88, %v3_10c7c
  store i32 %v5_10c88, i32* %r0.global-to-local, align 4
  %v3_10c8c = load i32, i32* %v2_10c8c, align 4
  store i32 %v3_10c8c, i32* %r2.global-to-local, align 4
  %v2_10c90 = call i32 @llvm.bswap.i32(i32 %v1_10c6c)
  store i32 %v2_10c90, i32* %ip.global-to-local, align 4
  %v3_10c94 = icmp uge i32 %v2_10c90, %v3_10c8c
  store i1 %v3_10c94, i1* %cpsr_c.global-to-local, align 1
  %v9_10c94 = icmp eq i32 %v2_10c90, %v3_10c8c
  store i1 %v9_10c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10c94, label %dec_label_pc_10c9c, label %dec_label_pc_10b90

dec_label_pc_10c9c:                               ; preds = %dec_label_pc_10c4c
  %v0_10c9c = load i32, i32* @r4, align 4
  %v2_10c9c = icmp ugt i32 %v0_10c9c, 254
  store i1 %v2_10c9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c9c = icmp eq i32 %v0_10c9c, 255
  store i1 %v7_10c9c, i1* %cpsr_z.global-to-local, align 1
  %v8_10ca0 = icmp sgt i32 %v0_10c9c, 255
  br i1 %v8_10ca0, label %dec_label_pc_10d38, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c9c
  %v3_10ca8 = mul i32 %v0_10c9c, 256
  store i32 %v3_10ca8, i32* %r2.global-to-local, align 4
  %v2_10cac = load i32, i32* @global_var_1dc68.137, align 4
  store i32 %v2_10cac, i32* %r1.global-to-local, align 4
  %v2_10cb4 = mul i32 %v0_10c9c, 288
  store i32 %v2_10cb4, i32* %r3.global-to-local, align 4
  %v2_10cb8 = add i32 %v2_10cac, %v2_10cb4
  store i32 %v2_10cb8, i32* @r0, align 4
  %v1_10cbc = add i32 %v2_10cb8, 12
  %v2_10cbc = inttoptr i32 %v1_10cbc to i32*
  %v3_10cbc = load i32, i32* %v2_10cbc, align 4
  store i32 %v3_10cbc, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cc0 = icmp eq i32 %v3_10cbc, 0
  store i1 %v2_10cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cc0, label %dec_label_pc_10cec, label %dec_label_pc_10ccc.preheader

dec_label_pc_10ccc.preheader:                     ; preds = %dec_label_pc_10ca4
  %v2_10cc4 = add i32 %v2_10cb8, 288
  store i32 %v2_10cc4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10ccc

dec_label_pc_10ccc:                               ; preds = %dec_label_pc_10ccc.preheader, %dec_label_pc_10ce0
  %v0_10ce0 = phi i32 [ %v2_10cc4, %dec_label_pc_10ccc.preheader ], [ %v1_10cd8, %dec_label_pc_10ce0 ]
  %v0_10ccc = phi i32 [ %v0_10c9c, %dec_label_pc_10ccc.preheader ], [ %v1_10ccc, %dec_label_pc_10ce0 ]
  %v1_10ccc = add i32 %v0_10ccc, 1
  store i32 %v1_10ccc, i32* @r4, align 4
  %v7_10cd0 = icmp eq i32 %v1_10ccc, 256
  store i32 %v0_10ce0, i32* @r0, align 4
  %v1_10cd8 = add i32 %v0_10ce0, 288
  store i32 %v1_10cd8, i32* %r2.global-to-local, align 4
  br i1 %v7_10cd0, label %dec_label_pc_10d38.loopexit, label %dec_label_pc_10ce0

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_10ccc
  %v1_10ce0 = add i32 %v0_10ce0, 12
  %v2_10ce0 = inttoptr i32 %v1_10ce0 to i32*
  %v3_10ce0 = load i32, i32* %v2_10ce0, align 4
  store i32 %v3_10ce0, i32* %r3.global-to-local, align 4
  %v2_10ce4 = icmp eq i32 %v3_10ce0, 0
  br i1 %v2_10ce4, label %dec_label_pc_10cec.loopexit, label %dec_label_pc_10ccc

dec_label_pc_10cec.loopexit:                      ; preds = %dec_label_pc_10ce0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cec

dec_label_pc_10cec:                               ; preds = %dec_label_pc_10cec.loopexit, %dec_label_pc_10ca4
  %v1_10cec = phi i32 [ %v0_10ce0, %dec_label_pc_10cec.loopexit ], [ %v2_10cb8, %dec_label_pc_10ca4 ]
  %v2_10cec = add i32 %v1_10cec, 16
  %v3_10cec = inttoptr i32 %v2_10cec to i32*
  store i32 %v3_10c8c, i32* %v3_10cec, align 4
  %v0_10cf0 = load i32, i32* @r5, align 4
  %v1_10cf0 = inttoptr i32 %v0_10cf0 to i32*
  %v2_10cf0 = load i32, i32* %v1_10cf0, align 4
  store i32 %v2_10cf0, i32* %r2.global-to-local, align 4
  %v1_10cf4 = and i32 %v2_10cf0, 128
  %v2_10cf4 = icmp ne i32 %v1_10cf4, 0
  store i1 %v2_10cf4, i1* %cpsr_c.global-to-local, align 1
  %v3_10cf4 = sdiv i32 %v2_10cf0, 256
  store i32 %v3_10cf4, i32* %r3.global-to-local, align 4
  %v1_10cf8 = trunc i32 %v3_10cf4 to i8
  %v2_10cf8 = load i32, i32* @r0, align 4
  %v3_10cf8 = add i32 %v2_10cf8, 21
  %v4_10cf8 = inttoptr i32 %v3_10cf8 to i8*
  store i8 %v1_10cf8, i8* %v4_10cf8, align 1
  %v0_10cfc = load i32, i32* %r2.global-to-local, align 4
  %v1_10cfc = trunc i32 %v0_10cfc to i8
  %v2_10cfc = load i32, i32* @r0, align 4
  %v3_10cfc = add i32 %v2_10cfc, 20
  %v4_10cfc = inttoptr i32 %v3_10cfc to i8*
  store i8 %v1_10cfc, i8* %v4_10cfc, align 1
  %v0_10d00 = call i32 @function_ea90()
  store i32 %v0_10d00, i32* %r0.global-to-local, align 4
  %v1_10b94.pre.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_10b90

dec_label_pc_10d08:                               ; preds = %dec_label_pc_ee40
  store i32 ptrtoint (i32* @global_var_1dc6c.139 to i32), i32* %r1.global-to-local, align 4
  %v2_10d0c = load i32, i32* @global_var_1dc6c.139, align 4
  store i32 %v2_10d0c, i32* %r0.global-to-local, align 4
  %v1_10d10 = call i32 @function_12c1c(i32 %v2_10d0c)
  store i32 %v1_10d10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eeb0

dec_label_pc_10d18:                               ; preds = %thread-pre-split601.thread, %thread-pre-split601
  %v2_10d18 = icmp ugt i32 %v1_f188, 78
  store i1 %v2_10d18, i1* %cpsr_c.global-to-local, align 1
  %v7_10d18 = icmp eq i32 %v1_f188, 79
  store i1 %v7_10d18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d18, label %bb1887, label %dec_label_pc_108d8

bb1887:                                           ; preds = %dec_label_pc_10d18
  %v3_10d1c = icmp ugt i32 %v1_f19c, 120
  store i1 %v3_10d1c, i1* %cpsr_c.global-to-local, align 1
  %v8_10d1c = icmp eq i32 %v1_f19c, 121
  store i1 %v8_10d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10d1c, label %dec_label_pc_10d24, label %dec_label_pc_108d8

dec_label_pc_10d24:                               ; preds = %bb1887
  %v1_10d24 = add nsw i32 %v1_f1a0, -255
  store i32 %v1_10d24, i32* %r3.global-to-local, align 4
  %v2_10d24 = icmp eq i32 %v1_f1a0, 255
  store i1 %v2_10d24, i1* %cpsr_c.global-to-local, align 1
  %v7_10d24 = icmp eq i32 %v1_f1a0, 255
  store i1 %v7_10d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d24, label %bb1889, label %bb1888

bb1888:                                           ; preds = %dec_label_pc_10d24
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1889

bb1889:                                           ; preds = %dec_label_pc_10d24, %bb1888
  %v0_10d2c = phi i32 [ %v1_10d24, %dec_label_pc_10d24 ], [ 1, %bb1888 ]
  %v2_10d2c = and i32 %v3_f190, 64
  %v3_10d2c = icmp ne i32 %v2_10d2c, 0
  store i1 %v3_10d2c, i1* %cpsr_c.global-to-local, align 1
  %v4_10d2c = udiv i32 %v1_f1a0, 128
  %v5_10d2c = and i32 %v0_10d2c, %v4_10d2c
  store i32 %v5_10d2c, i32* %r3.global-to-local, align 4
  %v6_10d2c = icmp eq i32 %v5_10d2c, 0
  store i1 %v6_10d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_10d2c, label %dec_label_pc_108d8, label %dec_label_pc_f184

dec_label_pc_10d38.loopexit:                      ; preds = %dec_label_pc_10ccc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d38

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10c9c, %dec_label_pc_10bc4, %dec_label_pc_10b90, %dec_label_pc_10d38.loopexit
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1840, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v2_10d4c2054 = load i32, i32* @sp, align 4
  %v3_10d4c2055 = add i32 %v2_10d4c2054, 1840
  %v4_10d4c2056 = inttoptr i32 %v3_10d4c2055 to i32*
  store i32 0, i32* %v4_10d4c2056, align 4
  br label %dec_label_pc_10d40.dec_label_pc_10d40_crit_edge

dec_label_pc_10d40.dec_label_pc_10d40_crit_edge:  ; preds = %dec_label_pc_10d38, %dec_label_pc_10d40.dec_label_pc_10d40_crit_edge
  %v0_10d40.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10d4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10d40 = add i32 %v0_10d40.pre, 1840
  store i32 %v1_10d40, i32* %r0.global-to-local, align 4
  %v1_10d44 = add i32 %v0_10d40.pre, 4
  store i32 %v1_10d44, i32* %r3.global-to-local, align 4
  %v7_10d48 = icmp eq i32 %v1_10d44, 128
  %v2_10d4c = load i32, i32* @sp, align 4
  %v3_10d4c = add i32 %v2_10d4c, %v1_10d40
  %v4_10d4c = inttoptr i32 %v3_10d4c to i32*
  store i32 %v0_10d4c.pre, i32* %v4_10d4c, align 4
  br i1 %v7_10d48, label %dec_label_pc_10d54, label %dec_label_pc_10d40.dec_label_pc_10d40_crit_edge

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d40.dec_label_pc_10d40_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10d54 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d582057 = add i32 %v0_10d54, 1712
  store i32 %v1_10d582057, i32* %r1.global-to-local, align 4
  %v1_10d5c2058 = add i32 %v0_10d54, 4
  store i32 %v1_10d5c2058, i32* %r3.global-to-local, align 4
  %v7_10d602059 = icmp eq i32 %v1_10d5c2058, 128
  %v2_10d642060 = load i32, i32* @sp, align 4
  %v3_10d642061 = add i32 %v2_10d642060, %v1_10d582057
  %v4_10d642062 = inttoptr i32 %v3_10d642061 to i32*
  store i32 %v0_10d54, i32* %v4_10d642062, align 4
  br i1 %v7_10d602059, label %dec_label_pc_10d6c, label %dec_label_pc_10d58.dec_label_pc_10d58_crit_edge

dec_label_pc_10d58.dec_label_pc_10d58_crit_edge:  ; preds = %dec_label_pc_10d54, %dec_label_pc_10d58.dec_label_pc_10d58_crit_edge
  %v0_10d58.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10d64.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10d58 = add i32 %v0_10d58.pre, 1712
  store i32 %v1_10d58, i32* %r1.global-to-local, align 4
  %v1_10d5c = add i32 %v0_10d58.pre, 4
  store i32 %v1_10d5c, i32* %r3.global-to-local, align 4
  %v7_10d60 = icmp eq i32 %v1_10d5c, 128
  %v2_10d64 = load i32, i32* @sp, align 4
  %v3_10d64 = add i32 %v2_10d64, %v1_10d58
  %v4_10d64 = inttoptr i32 %v3_10d64 to i32*
  store i32 %v0_10d64.pre, i32* %v4_10d64, align 4
  br i1 %v7_10d60, label %dec_label_pc_10d6c, label %dec_label_pc_10d58.dec_label_pc_10d58_crit_edge

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d58.dec_label_pc_10d58_crit_edge, %dec_label_pc_10d54
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10d6c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10d6c, i32* @r6, align 4
  store i32 %v0_10d6c, i32* @r5, align 4
  store i32 %v0_10d6c, i32* @r7, align 4
  store i32 %v0_10d6c, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10de8

dec_label_pc_10d80:                               ; preds = %dec_label_pc_10e10, %dec_label_pc_10de8
  %storemerge1248 = phi i32 [ 30, %dec_label_pc_10de8 ], [ 5, %dec_label_pc_10e10 ]
  store i32 %storemerge1248, i32* %r1.global-to-local, align 4
  %v1_10d84 = add i32 %v2_10dfc, 8
  %v2_10d84 = inttoptr i32 %v1_10d84 to i32*
  %v3_10d84 = load i32, i32* %v2_10d84, align 4
  store i32 %v3_10d84, i32* %r2.global-to-local, align 4
  %v2_10d88 = load i32, i32* @global_var_1dc04.124, align 4
  %v2_10d8c = sub i32 %v2_10d88, %v3_10d84
  store i32 %v2_10d8c, i32* %r3.global-to-local, align 4
  %v3_10d90 = icmp uge i32 %v2_10d8c, %storemerge1248
  store i1 %v3_10d90, i1* %cpsr_c.global-to-local, align 1
  %v9_10d90 = icmp eq i32 %v2_10d8c, %storemerge1248
  store i1 %v9_10d90, i1* %cpsr_z.global-to-local, align 1
  %v2_10d94 = xor i1 %v9_10d90, true
  %v3_10d94 = and i1 %v3_10d90, %v2_10d94
  br i1 %v3_10d94, label %dec_label_pc_10e54, label %dec_label_pc_10d98

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10d80
  store i1 %v2_10e04, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10e04, i1* %cpsr_z.global-to-local, align 1
  %v1_10e20 = add i32 %v2_10dfc, 4
  %v2_10e20 = inttoptr i32 %v1_10e20 to i32*
  %v3_10e20 = load i32, i32* %v2_10e20, align 4
  br i1 %v7_10e04, label %dec_label_pc_10e20, label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d98
  store i32 %v3_10e20, i32* %ip.global-to-local, align 4
  %v3_10da8 = udiv i32 %v3_10e20, 32
  store i32 %v2_10e2c, i32* %r2.global-to-local, align 4
  %v3_10db0 = mul nuw nsw i32 %v3_10da8, 4
  %v2_10db4 = add i32 %v3_10db0, %v2_10e2c
  store i32 %v2_10db4, i32* %r3.global-to-local, align 4
  %v1_10db8 = add i32 %v2_10db4, -184
  %v2_10db8 = inttoptr i32 %v1_10db8 to i32*
  %v3_10db8 = load i32, i32* %v2_10db8, align 4
  %v1_10dbc = urem i32 %v3_10e20, 32
  store i32 %v1_10dbc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10dc4 = shl i32 1, %v1_10dbc
  %v8_10dc4 = or i32 %v3_10db8, %v7_10dc4
  store i32 %v8_10dc4, i32* %r2.global-to-local, align 4
  store i32 %v8_10dc4, i32* %v2_10db8, align 4
  %v0_10dcc = load i32, i32* @r6, align 4
  %v1_10dcc = load i32, i32* %ip.global-to-local, align 4
  %v3_10dcc = icmp uge i32 %v0_10dcc, %v1_10dcc
  store i1 %v3_10dcc, i1* %cpsr_c.global-to-local, align 1
  %v9_10dcc = icmp eq i32 %v0_10dcc, %v1_10dcc
  store i1 %v9_10dcc, i1* %cpsr_z.global-to-local, align 1
  %v5_10dd0 = icmp slt i32 %v0_10dcc, %v1_10dcc
  br i1 %v5_10dd0, label %bb1891, label %bb1892

bb1891:                                           ; preds = %dec_label_pc_10da0
  store i32 %v1_10dcc, i32* @r6, align 4
  br label %bb1892

bb1892:                                           ; preds = %dec_label_pc_10e10, %dec_label_pc_11c50, %dec_label_pc_10e88, %bb1894, %dec_label_pc_10da0, %bb1891
  %v3_10dd4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10dd4, i32* %r3.global-to-local, align 4
  %v1_10dd8 = add i32 %v3_10dd4, 1
  store i32 %v1_10dd8, i32* %r2.global-to-local, align 4
  %v2_10ddc = icmp ugt i32 %v1_10dd8, 254
  store i1 %v2_10ddc, i1* %cpsr_c.global-to-local, align 1
  %v7_10ddc = icmp eq i32 %v1_10dd8, 255
  store i1 %v7_10ddc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10dd8, i32* %stack_var_-52, align 4
  %v8_10de4 = icmp sgt i32 %v1_10dd8, 255
  br i1 %v8_10de4, label %dec_label_pc_10e94, label %dec_label_pc_10de8

dec_label_pc_10de8:                               ; preds = %bb1892, %dec_label_pc_10d6c
  %v0_10df4 = phi i32 [ %v1_10dd8, %bb1892 ], [ %v0_10d6c, %dec_label_pc_10d6c ]
  %v3_10dec = mul i32 %v0_10df4, 256
  store i32 %v3_10dec, i32* %r3.global-to-local, align 4
  %v2_10df0 = load i32, i32* @global_var_1dc68.137, align 4
  store i32 %v2_10df0, i32* %r1.global-to-local, align 4
  %v2_10df8 = mul i32 %v0_10df4, 288
  store i32 %v2_10df8, i32* %r2.global-to-local, align 4
  %v2_10dfc = add i32 %v2_10df0, %v2_10df8
  store i32 %v2_10dfc, i32* @r4, align 4
  %v1_10e00 = add i32 %v2_10dfc, 12
  %v2_10e00 = inttoptr i32 %v1_10e00 to i32*
  %v3_10e00 = load i32, i32* %v2_10e00, align 4
  store i32 %v3_10e00, i32* %ip.global-to-local, align 4
  %v2_10e04 = icmp ne i32 %v3_10e00, 0
  store i1 %v2_10e04, i1* %cpsr_c.global-to-local, align 1
  %v7_10e04 = icmp eq i32 %v3_10e00, 1
  store i1 %v7_10e04, i1* %cpsr_z.global-to-local, align 1
  %v2_10e08 = xor i1 %v7_10e04, true
  %v3_10e08 = and i1 %v2_10e04, %v2_10e08
  br i1 %v3_10e08, label %dec_label_pc_10d80, label %dec_label_pc_10e10

dec_label_pc_10e10:                               ; preds = %dec_label_pc_10de8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e10 = icmp eq i32 %v3_10e00, 0
  store i1 %v2_10e10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e10, label %bb1892, label %dec_label_pc_10d80

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10d98
  store i32 %v3_10e20, i32* %r0.global-to-local, align 4
  %v3_10e28 = udiv i32 %v3_10e20, 32
  store i32 %v2_10e2c, i32* %r1.global-to-local, align 4
  %v3_10e30 = mul nuw nsw i32 %v3_10e28, 4
  %v2_10e34 = add i32 %v3_10e30, %v2_10e2c
  store i32 %v2_10e34, i32* %r3.global-to-local, align 4
  %v1_10e38 = add i32 %v2_10e34, -312
  %v2_10e38 = inttoptr i32 %v1_10e38 to i32*
  %v3_10e38 = load i32, i32* %v2_10e38, align 4
  %v1_10e3c = urem i32 %v3_10e20, 32
  store i32 %v1_10e3c, i32* %r1.global-to-local, align 4
  %v7_10e40 = shl i32 1, %v1_10e3c
  %v8_10e40 = or i32 %v3_10e38, %v7_10e40
  store i32 %v8_10e40, i32* %r2.global-to-local, align 4
  %v0_10e44 = load i32, i32* @r5, align 4
  %v3_10e44 = icmp uge i32 %v0_10e44, %v3_10e20
  store i1 %v3_10e44, i1* %cpsr_c.global-to-local, align 1
  %v9_10e44 = icmp eq i32 %v0_10e44, %v3_10e20
  store i1 %v9_10e44, i1* %cpsr_z.global-to-local, align 1
  %v5_10e48 = icmp slt i32 %v0_10e44, %v3_10e20
  br i1 %v5_10e48, label %bb1893, label %bb1894

bb1893:                                           ; preds = %dec_label_pc_10e20
  store i32 %v3_10e20, i32* @r5, align 4
  br label %bb1894

bb1894:                                           ; preds = %dec_label_pc_10e20, %bb1893
  store i32 %v8_10e40, i32* %v2_10e38, align 4
  br label %bb1892

dec_label_pc_10e54:                               ; preds = %dec_label_pc_10d80
  %v1_10e54 = add i32 %v2_10dfc, 4
  %v2_10e54 = inttoptr i32 %v1_10e54 to i32*
  %v3_10e54 = load i32, i32* %v2_10e54, align 4
  store i32 %v3_10e54, i32* %r0.global-to-local, align 4
  %v1_10e58 = call i32 @function_12c1c(i32 %v3_10e54)
  store i32 %v1_10e58, i32* %r0.global-to-local, align 4
  %v0_10e5c = load i32, i32* @r4, align 4
  %v1_10e5c = add i32 %v0_10e5c, 12
  %v2_10e5c = inttoptr i32 %v1_10e5c to i32*
  %v3_10e5c = load i32, i32* %v2_10e5c, align 4
  store i32 %v3_10e5c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10e64 = icmp ugt i32 %v3_10e5c, 1
  store i1 %v2_10e64, i1* %cpsr_c.global-to-local, align 1
  %v7_10e64 = icmp eq i32 %v3_10e5c, 2
  store i1 %v7_10e64, i1* %cpsr_z.global-to-local, align 1
  %v2_10e68 = add i32 %v0_10e5c, 4
  %v3_10e68 = inttoptr i32 %v2_10e68 to i32*
  store i32 -1, i32* %v3_10e68, align 4
  %v2_10e6c = xor i1 %v2_10e64, true
  %v3_10e6c = or i1 %v7_10e64, %v2_10e6c
  br i1 %v3_10e6c, label %dec_label_pc_11c50, label %dec_label_pc_10e70

dec_label_pc_10e70:                               ; preds = %dec_label_pc_10e54
  %v0_10e70 = load i32, i32* @r4, align 4
  %v1_10e70 = add i32 %v0_10e70, 284
  %v2_10e70 = inttoptr i32 %v1_10e70 to i8*
  %v3_10e70 = load i8, i8* %v2_10e70, align 1
  %v4_10e70 = zext i8 %v3_10e70 to i32
  %v1_10e74 = add nuw nsw i32 %v4_10e70, 1
  %v1_10e78 = urem i32 %v1_10e74, 256
  store i32 %v1_10e78, i32* %r3.global-to-local, align 4
  %v2_10e7c = icmp ugt i32 %v1_10e78, 9
  store i1 %v2_10e7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e7c = icmp eq i32 %v1_10e78, 10
  store i1 %v7_10e7c, i1* %cpsr_z.global-to-local, align 1
  %v1_10e80 = trunc i32 %v1_10e74 to i8
  store i8 %v1_10e80, i8* %v2_10e70, align 1
  %v0_10e84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e84, label %dec_label_pc_11c50, label %dec_label_pc_10e88

dec_label_pc_10e88:                               ; preds = %dec_label_pc_10e70
  %v0_10e88 = load i32, i32* @r4, align 4
  store i32 %v0_10e88, i32* @r0, align 4
  %v0_10e8c = call i32 @function_ea90()
  store i32 %v0_10e8c, i32* %r0.global-to-local, align 4
  br label %bb1892

dec_label_pc_10e94:                               ; preds = %bb1892
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-64, align 4
  %v0_10ea0 = load i32, i32* @r6, align 4
  %v1_10ea0 = load i32, i32* @r5, align 4
  %v3_10ea0 = icmp uge i32 %v0_10ea0, %v1_10ea0
  store i1 %v3_10ea0, i1* %cpsr_c.global-to-local, align 1
  %v9_10ea0 = icmp eq i32 %v0_10ea0, %v1_10ea0
  store i1 %v9_10ea0, i1* %cpsr_z.global-to-local, align 1
  %v5_10ea4 = icmp slt i32 %v0_10ea0, %v1_10ea0
  %storemerge696 = select i1 %v5_10ea4, i32 %v1_10ea0, i32 %v0_10ea0
  store i32 %v2_10eb0, i32* %ip.global-to-local, align 4
  store i32 %v2_10eb4, i32* %r1.global-to-local, align 4
  store i32 %v2_10eb8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10ec0 = add i32 %storemerge696, 1
  store i32 %v1_10ec0, i32* %r0.global-to-local, align 4
  %v5_10ecc = call i32 @function_12e3c(i32 %v1_10ec0, i32 %v2_10eb4, i32 %v2_10eb8, i32 0, i32 %v2_10eb0)
  %v0_10ed0 = load i32, i32* @r4, align 4
  store i32 %v0_10ed0, i32* %r0.global-to-local, align 4
  %v1_10ed4 = inttoptr i32 %v0_10ed0 to i32*
  %v2_10ed4 = call i32 @function_12eec(i32* %v1_10ed4)
  store i32 %v2_10ed4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc04.124 to i32), i32* @lr, align 4
  %v0_10edc = load i32, i32* @r4, align 4
  store i32 %v0_10edc, i32* %stack_var_-52, align 4
  store i32 %v2_10ed4, i32* @global_var_1dc04.124, align 4
  br label %dec_label_pc_10f24

dec_label_pc_10ee8:                               ; preds = %dec_label_pc_10f48, %dec_label_pc_11bec
  %v0_10f00 = phi i32 [ %v3_10f3c, %dec_label_pc_10f48 ], [ %v0_10ee8.pre, %dec_label_pc_11bec ]
  %v3_10ee8 = udiv i32 %v0_10f00, 32
  %v3_10ef0 = mul nuw nsw i32 %v3_10ee8, 4
  store i32 %v2_10e2c, i32* %ip.global-to-local, align 4
  %v2_10ef8 = add i32 %v3_10ef0, %v2_10e2c
  store i32 %v2_10ef8, i32* %r3.global-to-local, align 4
  %v1_10efc = add i32 %v2_10ef8, -184
  %v2_10efc = inttoptr i32 %v1_10efc to i32*
  %v3_10efc = load i32, i32* %v2_10efc, align 4
  %v1_10f00 = urem i32 %v0_10f00, 32
  store i32 %v1_10f00, i32* %r1.global-to-local, align 4
  %v2_10f04 = add nsw i32 %v1_10f00, -1
  %v3_10f04 = shl i32 1, %v2_10f04
  %v4_10f04 = and i32 %v3_10f04, %v3_10efc
  %v5_10f04 = icmp ne i32 %v4_10f04, 0
  store i1 %v5_10f04, i1* %cpsr_c.global-to-local, align 1
  %v6_10f04 = lshr i32 %v3_10efc, %v1_10f00
  store i32 %v6_10f04, i32* %r2.global-to-local, align 4
  %v1_10f08 = urem i32 %v6_10f04, 2
  %v2_10f08 = icmp eq i32 %v1_10f08, 0
  store i1 %v2_10f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f08, label %dec_label_pc_10f10, label %dec_label_pc_110d8.preheader

dec_label_pc_110d8.preheader:                     ; preds = %dec_label_pc_10ee8
  %v0_110d8718 = load i32, i32* @r6, align 4
  %v1_110d8719 = add i32 %v0_110d8718, 12
  %v2_110d8720 = inttoptr i32 %v1_110d8719 to i32*
  %v3_110d8721 = load i32, i32* %v2_110d8720, align 4
  store i32 %v3_110d8721, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110dc717723 = icmp eq i32 %v3_110d8721, 0
  store i1 %v2_110dc717723, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110dc717723, label %dec_label_pc_10f10, label %dec_label_pc_110e4.lr.ph

dec_label_pc_10f10:                               ; preds = %dec_label_pc_110d8.loopexit, %dec_label_pc_110dc.backedge, %dec_label_pc_110d8.preheader, %dec_label_pc_10ee8, %bb1939, %dec_label_pc_11924, %dec_label_pc_10f24, %dec_label_pc_11c00, %dec_label_pc_11968
  %v3_10f10 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10f10, i32* %r3.global-to-local, align 4
  %v1_10f14 = add i32 %v3_10f10, 1
  store i32 %v1_10f14, i32* %r4.global-to-local, align 4
  %v2_10f18 = icmp ugt i32 %v1_10f14, 254
  store i1 %v2_10f18, i1* %cpsr_c.global-to-local, align 1
  %v7_10f18 = icmp eq i32 %v1_10f14, 255
  store i1 %v7_10f18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10f14, i32* %stack_var_-52, align 4
  %v8_10f20 = icmp sgt i32 %v1_10f14, 255
  br i1 %v8_10f20, label %dec_label_pc_f130, label %dec_label_pc_10f24

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f10, %dec_label_pc_10e94
  %v0_10f28 = phi i32 [ %v1_10f14, %dec_label_pc_10f10 ], [ %v0_10edc, %dec_label_pc_10e94 ]
  store i32 ptrtoint (i32* @global_var_1dc68.137 to i32), i32* %r0.global-to-local, align 4
  %v3_10f28 = mul i32 %v0_10f28, 256
  store i32 %v3_10f28, i32* %r3.global-to-local, align 4
  %v2_10f30 = load i32, i32* @global_var_1dc68.137, align 4
  store i32 %v2_10f30, i32* %r1.global-to-local, align 4
  %v2_10f34 = mul i32 %v0_10f28, 288
  store i32 %v2_10f34, i32* %r2.global-to-local, align 4
  %v2_10f38 = add i32 %v2_10f30, %v2_10f34
  store i32 %v2_10f38, i32* @r6, align 4
  %v1_10f3c = add i32 %v2_10f38, 4
  %v2_10f3c = inttoptr i32 %v1_10f3c to i32*
  %v3_10f3c = load i32, i32* %v2_10f3c, align 4
  store i32 %v3_10f3c, i32* @r4, align 4
  %v2_10f40 = icmp eq i32 %v3_10f3c, -1
  store i1 %v2_10f40, i1* %cpsr_c.global-to-local, align 1
  %v7_10f40 = icmp eq i32 %v3_10f3c, -1
  store i1 %v7_10f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f40, label %dec_label_pc_10f10, label %dec_label_pc_10f48

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f24
  %v3_10f48 = udiv i32 %v3_10f3c, 32
  store i32 %v2_10e2c, i32* %r1.global-to-local, align 4
  %v3_10f54 = mul nuw nsw i32 %v3_10f48, 4
  %v2_10f58 = add i32 %v3_10f54, %v2_10e2c
  store i32 %v2_10f58, i32* %r3.global-to-local, align 4
  %v1_10f5c = add i32 %v2_10f58, -312
  %v2_10f5c = inttoptr i32 %v1_10f5c to i32*
  %v3_10f5c = load i32, i32* %v2_10f5c, align 4
  %v1_10f60 = urem i32 %v3_10f3c, 32
  store i32 %v1_10f60, i32* %r1.global-to-local, align 4
  %v2_10f64 = add nsw i32 %v1_10f60, -1
  %v3_10f64 = shl i32 1, %v2_10f64
  %v4_10f64 = and i32 %v3_10f5c, %v3_10f64
  %v5_10f64 = icmp ne i32 %v4_10f64, 0
  store i1 %v5_10f64, i1* %cpsr_c.global-to-local, align 1
  %v6_10f64 = lshr i32 %v3_10f5c, %v1_10f60
  store i32 %v6_10f64, i32* %r2.global-to-local, align 4
  %v1_10f68 = urem i32 %v6_10f64, 2
  %v2_10f68 = icmp eq i32 %v1_10f68, 0
  store i1 %v2_10f68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f68, label %dec_label_pc_10ee8, label %dec_label_pc_10f70

dec_label_pc_10f70:                               ; preds = %dec_label_pc_10f48
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v3_10f3c, i32* %r0.global-to-local, align 4
  store i32 %v2_1151c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_1104c, i32* @r4, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i8 4, i8* %stack_var_-56, align 1
  %v6_10fa0 = call i32 @function_133b4(i32 %v3_10f3c, i32 1, i32 4, i32* nonnull %stack_var_-48, i32 %v2_1104c)
  %v3_10fa4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10fa4, i32* %r3.global-to-local, align 4
  %v2_10fa8 = or i32 %v3_10fa4, %v6_10fa0
  store i32 %v2_10fa8, i32* %r0.global-to-local, align 4
  %v4_10fa8 = icmp eq i32 %v2_10fa8, 0
  store i1 %v4_10fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10fa8, label %dec_label_pc_10fb0, label %dec_label_pc_11c00

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10f70
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_10fb4 = load i32, i32* @r6, align 4
  %v2_10fb4 = add i32 %v1_10fb4, 12
  %v3_10fb4 = inttoptr i32 %v2_10fb4 to i32*
  store i32 2, i32* %v3_10fb4, align 4
  %v0_10fb8 = call i32 @function_e82c()
  store i32 %v0_10fb8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1dc00.130 to i32), i32* %ip.global-to-local, align 4
  %v2_10fc0 = load i8, i8* bitcast (i8** @global_var_1dc00.130 to i8*), align 4
  %v3_10fc0 = zext i8 %v2_10fc0 to i32
  %v3_10fc4 = load i8, i8* @global_var_1dc01.131, align 1
  %v4_10fc4 = zext i8 %v3_10fc4 to i32
  store i32 %v4_10fc4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10fc8 = mul nuw nsw i32 %v4_10fc4, 256
  %v5_10fc8 = or i32 %v4_10fc8, %v3_10fc0
  store i32 %v5_10fc8, i32* %r1.global-to-local, align 4
  %v2_10fcc = call i32 @function_129a4(i32 %v0_10fb8, i32 %v5_10fc8)
  store i32 ptrtoint (i32* @global_var_1dbd0.126 to i32), i32* %r1.global-to-local, align 4
  %v2_10fd4 = load i32, i32* @global_var_1dbd0.126, align 4
  store i32 %v2_10fd4, i32* @lr, align 4
  %v1_10fdc = load i32, i32* @r5, align 4
  %v9_10fdc = icmp eq i32 %v2_10fd4, %v1_10fdc
  store i1 %v9_10fdc, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10fe0 = urem i32 %v2_10fcc, 65536
  store i32 %v3_10fe0, i32* %r0.global-to-local, align 4
  %v7_10fe4 = icmp sgt i32 %v2_10fd4, %v1_10fdc
  br i1 %v7_10fe4, label %dec_label_pc_10fe8, label %dec_label_pc_11be8

dec_label_pc_10fe8:                               ; preds = %dec_label_pc_10fb0
  store i32 ptrtoint (i32* @global_var_1dbfc.128 to i32), i32* %r2.global-to-local, align 4
  %v2_10fec = load i32, i32* @global_var_1dbfc.128, align 4
  store i32 %v2_10fec, i32* %r4.global-to-local, align 4
  store i32 %v1_10fdc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11000

dec_label_pc_10ff8:                               ; preds = %dec_label_pc_11020, %dec_label_pc_11000
  %v3_10ff8 = icmp uge i32 %v2_10fd4, %v1_11014
  store i1 %v3_10ff8, i1* %cpsr_c.global-to-local, align 1
  %v9_10ff8 = icmp eq i32 %v2_10fd4, %v1_11014
  store i1 %v9_10ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10ff8, label %dec_label_pc_11be8, label %dec_label_pc_11000

dec_label_pc_11000:                               ; preds = %dec_label_pc_10ff8, %dec_label_pc_10fe8
  %v0_11014 = phi i32 [ %v1_11014, %dec_label_pc_10ff8 ], [ %v1_10fdc, %dec_label_pc_10fe8 ]
  %v0_11020 = phi i32 [ %v1_11018, %dec_label_pc_10ff8 ], [ %v2_10fec, %dec_label_pc_10fe8 ]
  store i32 %v0_11020, i32* %r1.global-to-local, align 4
  %v1_11004 = add i32 %v0_11020, 8
  %v2_11004 = inttoptr i32 %v1_11004 to i8*
  %v3_11004 = load i8, i8* %v2_11004, align 1
  %v4_11004 = zext i8 %v3_11004 to i32
  store i32 %v4_11004, i32* %r3.global-to-local, align 4
  %v1_11008 = add i32 %v0_11020, 9
  %v2_11008 = inttoptr i32 %v1_11008 to i8*
  %v3_11008 = load i8, i8* %v2_11008, align 1
  %v4_11008 = zext i8 %v3_11008 to i32
  store i32 %v4_11008, i32* %r2.global-to-local, align 4
  %v4_1100c = mul nuw nsw i32 %v4_11008, 256
  %v5_1100c = or i32 %v4_1100c, %v4_11004
  store i32 %v5_1100c, i32* %r3.global-to-local, align 4
  %v3_11010 = icmp uge i32 %v5_1100c, %v3_10fe0
  store i1 %v3_11010, i1* %cpsr_c.global-to-local, align 1
  %v9_11010 = icmp eq i32 %v5_1100c, %v3_10fe0
  store i1 %v9_11010, i1* %cpsr_z.global-to-local, align 1
  %v1_11014 = add i32 %v0_11014, 1
  store i32 %v1_11014, i32* %ip.global-to-local, align 4
  %v1_11018 = add i32 %v0_11020, 16
  store i32 %v1_11018, i32* %r4.global-to-local, align 4
  %v2_1101c = xor i1 %v9_11010, true
  %v3_1101c = and i1 %v3_11010, %v2_1101c
  br i1 %v3_1101c, label %dec_label_pc_10ff8, label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %dec_label_pc_11000
  %v1_11020 = add i32 %v0_11020, 10
  %v2_11020 = inttoptr i32 %v1_11020 to i8*
  %v3_11020 = load i8, i8* %v2_11020, align 1
  %v4_11020 = zext i8 %v3_11020 to i32
  store i32 %v4_11020, i32* %r3.global-to-local, align 4
  %v1_11024 = add i32 %v0_11020, 11
  %v2_11024 = inttoptr i32 %v1_11024 to i8*
  %v3_11024 = load i8, i8* %v2_11024, align 1
  %v4_11024 = zext i8 %v3_11024 to i32
  store i32 %v4_11024, i32* %r2.global-to-local, align 4
  %v4_11028 = mul nuw nsw i32 %v4_11024, 256
  %v5_11028 = or i32 %v4_11028, %v4_11020
  store i32 %v5_11028, i32* %r3.global-to-local, align 4
  %v3_1102c = icmp uge i32 %v5_11028, %v3_10fe0
  store i1 %v3_1102c, i1* %cpsr_c.global-to-local, align 1
  %v9_1102c = icmp eq i32 %v5_11028, %v3_10fe0
  store i1 %v9_1102c, i1* %cpsr_z.global-to-local, align 1
  %v2_11030 = xor i1 %v3_1102c, true
  %v3_11030 = or i1 %v9_1102c, %v2_11030
  br i1 %v3_11030, label %dec_label_pc_10ff8, label %dec_label_pc_11bec

dec_label_pc_11038:                               ; preds = %dec_label_pc_112a8, %dec_label_pc_112cc, %dec_label_pc_11270
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_1103c = call i32 @function_11d4c(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11044 = call i32 @function_11d4c(i32 27)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_11054 = call i32 @function_11c68(i32 26, i32* %v2_11054)
  store i32 %v3_11054, i32* @r4, align 4
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_11068 = call i32 @function_11c68(i32 27, i32* %v2_11054)
  %v3_1106c = load i8, i8* %stack_var_-56, align 1
  %v4_1106c = sext i8 %v3_1106c to i32
  %sext4 = mul i32 %v3_11068, 16777216
  %v1_11070 = sdiv i32 %sext4, 16777216
  store i32 %v1_11070, i32* @r5, align 4
  %v0_11074 = load i32, i32* @r4, align 4
  store i32 %v0_11074, i32* %r2.global-to-local, align 4
  %v1_11078 = add nsw i32 %v4_1106c, -1
  store i32 %v1_11078, i32* %r3.global-to-local, align 4
  %v0_1107c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1107c, i32* %r0.global-to-local, align 4
  %v0_11080 = load i32, i32* @r6, align 4
  %v1_11080 = add i32 %v0_11080, 24
  %v2_11080 = inttoptr i32 %v1_11080 to i32*
  %v3_11080 = load i32, i32* %v2_11080, align 4
  store i32 %v3_11080, i32* %r1.global-to-local, align 4
  %v4_11084 = call i32 @function_123dc(i32 %v0_1107c, i32 %v3_11080, i32 %v0_11074, i32 %v1_11078)
  store i32 %v4_11084, i32* %r0.global-to-local, align 4
  %v2_11088 = icmp eq i32 %v4_11084, -1
  store i1 %v2_11088, i1* %cpsr_c.global-to-local, align 1
  %v7_11088 = icmp eq i32 %v4_11084, -1
  store i1 %v7_11088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11088, label %dec_label_pc_11098, label %dec_label_pc_110c0

dec_label_pc_11098:                               ; preds = %dec_label_pc_11038
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_11098 = load i8, i8* %stack_var_-56, align 1
  %v4_11098 = sext i8 %v3_11098 to i32
  %v0_1109c = load i32, i32* @r5, align 4
  store i32 %v0_1109c, i32* %r2.global-to-local, align 4
  %v1_110a0 = add nsw i32 %v4_11098, -1
  store i32 %v1_110a0, i32* %r3.global-to-local, align 4
  %v0_110a4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_110a4, i32* %r0.global-to-local, align 4
  %v0_110a8 = load i32, i32* @r6, align 4
  %v1_110a8 = add i32 %v0_110a8, 24
  %v2_110a8 = inttoptr i32 %v1_110a8 to i32*
  %v3_110a8 = load i32, i32* %v2_110a8, align 4
  store i32 %v3_110a8, i32* %r1.global-to-local, align 4
  %v4_110ac = call i32 @function_123dc(i32 %v0_110a4, i32 %v3_110a8, i32 %v0_1109c, i32 %v1_110a0)
  store i32 %v4_110ac, i32* %r0.global-to-local, align 4
  %v2_110b0 = icmp eq i32 %v4_110ac, -1
  store i1 %v2_110b0, i1* %cpsr_c.global-to-local, align 1
  %v7_110b0 = icmp eq i32 %v4_110ac, -1
  store i1 %v7_110b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110b0, label %dec_label_pc_11c28, label %dec_label_pc_110c0

dec_label_pc_110c0:                               ; preds = %dec_label_pc_11098, %dec_label_pc_11038
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_110c4 = call i32 @function_11c94(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_110cc = call i32 @function_11c94(i32 27)
  store i32 %v1_110cc, i32* %r0.global-to-local, align 4
  %v0_110d0 = load i32, i32* @r7, align 4
  %v3_110d0 = icmp eq i32 %v0_110d0, -1
  store i1 %v3_110d0, i1* %cpsr_c.global-to-local, align 1
  %v8_110d0 = icmp eq i32 %v0_110d0, -1
  store i1 %v8_110d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_110d0, label %dec_label_pc_110d8.loopexit, label %dec_label_pc_112e8

dec_label_pc_110d8.loopexit:                      ; preds = %dec_label_pc_11260, %dec_label_pc_11a0c, %dec_label_pc_11158, %dec_label_pc_110c0, %dec_label_pc_11904
  %v0_110d8 = load i32, i32* @r6, align 4
  %v1_110d8 = add i32 %v0_110d8, 12
  %v2_110d8 = inttoptr i32 %v1_110d8 to i32*
  %v3_110d8 = load i32, i32* %v2_110d8, align 4
  store i32 %v3_110d8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110dc717 = icmp eq i32 %v3_110d8, 0
  store i1 %v2_110dc717, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110dc717, label %dec_label_pc_10f10, label %dec_label_pc_110e4.lr.ph

dec_label_pc_110e4.lr.ph:                         ; preds = %dec_label_pc_110d8.preheader, %dec_label_pc_110d8.loopexit
  %v0_110e41053 = phi i32 [ %v0_110d8, %dec_label_pc_110d8.loopexit ], [ %v0_110d8718, %dec_label_pc_110d8.preheader ]
  br label %dec_label_pc_110e4

dec_label_pc_110e4:                               ; preds = %dec_label_pc_110dc.backedge.thread, %dec_label_pc_110dc.backedge, %dec_label_pc_110dc.backedge.thread2099, %dec_label_pc_110e4.lr.ph
  %v0_119b4 = phi i32 [ %v0_110e41053, %dec_label_pc_110e4.lr.ph ], [ %v0_110e41035, %dec_label_pc_110dc.backedge ], [ %v0_11158, %dec_label_pc_110dc.backedge.thread ], [ %v0_11158, %dec_label_pc_110dc.backedge.thread2099 ]
  %v1_110e4 = add i32 %v0_119b4, 24
  %v2_110e4 = inttoptr i32 %v1_110e4 to i32*
  %v3_110e4 = load i32, i32* %v2_110e4, align 4
  store i32 %v3_110e4, i32* %r3.global-to-local, align 4
  %v2_110e8 = icmp ugt i32 %v3_110e4, 255
  store i1 %v2_110e8, i1* %cpsr_c.global-to-local, align 1
  %v7_110e8 = icmp eq i32 %v3_110e4, 256
  store i1 %v7_110e8, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_119b4, 28
  store i32 %.pre, i32* %r8.global-to-local, align 4
  br i1 %v7_110e8, label %dec_label_pc_119b4, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110e4, %dec_label_pc_119b4
  store i32 0, i32* @r5, align 4
  %v1_110f8 = load i32, i32* %fp.global-to-local, align 4
  %v2_110f8 = inttoptr i32 %v1_110f8 to i32*
  store i32 0, i32* %v2_110f8, align 4
  %v0_110fc = load i32, i32* @r6, align 4
  %v1_110fc = add i32 %v0_110fc, 24
  %v2_110fc = inttoptr i32 %v1_110fc to i32*
  %v3_110fc = load i32, i32* %v2_110fc, align 4
  store i32 %v3_110fc, i32* %r2.global-to-local, align 4
  %v0_11100 = load i32, i32* %r8.global-to-local, align 4
  %v2_11100 = add i32 %v0_11100, %v3_110fc
  store i32 %v2_11100, i32* @r4, align 4
  %v1_11104 = add i32 %v0_110fc, 4
  %v2_11104 = inttoptr i32 %v1_11104 to i32*
  %v3_11104 = load i32, i32* %v2_11104, align 4
  store i32 %v3_11104, i32* %r0.global-to-local, align 4
  %v1_11108 = sub i32 256, %v3_110fc
  store i32 %v1_11108, i32* %r2.global-to-local, align 4
  store i32 %v2_11100, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11114 = inttoptr i32 %v2_11100 to i32*
  %v5_11114 = call i32 @function_13410(i32 %v3_11104, i32* %v4_11114, i32 %v1_11108, i32 16384)
  store i32 %v5_11114, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11118 = icmp eq i32 %v5_11114, 0
  store i1 %v2_11118, i1* %cpsr_z.global-to-local, align 1
  %tmp1895 = icmp slt i32 %v5_11114, 1
  br i1 %tmp1895, label %dec_label_pc_11918, label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %dec_label_pc_110f4
  %v0_11120 = load i32, i32* @r5, align 4
  store i32 %v0_11120, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11128

dec_label_pc_11128:                               ; preds = %bb1897, %dec_label_pc_11120
  %v3_11130 = phi i32 [ %v1_11134, %bb1897 ], [ %v0_11120, %dec_label_pc_11120 ]
  %v1_11128 = load i32, i32* @r4, align 4
  %v2_11128 = add i32 %v1_11128, %v3_11130
  %v3_11128 = inttoptr i32 %v2_11128 to i8*
  %v4_11128 = load i8, i8* %v3_11128, align 1
  %v6_11128 = zext i8 %v4_11128 to i32
  store i32 %v6_11128, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1112c = icmp eq i8 %v4_11128, 0
  store i1 %v2_1112c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1112c, label %bb1896, label %bb1897

bb1896:                                           ; preds = %dec_label_pc_11128
  %v1_11130 = load i32, i32* %r1.global-to-local, align 4
  %v2_11130 = trunc i32 %v1_11130 to i8
  store i8 %v2_11130, i8* %v3_11128, align 1
  %v0_11134.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb1897

bb1897:                                           ; preds = %dec_label_pc_11128, %bb1896
  %v0_11134 = phi i32 [ %v3_11130, %dec_label_pc_11128 ], [ %v0_11134.pre, %bb1896 ]
  %v1_11134 = add i32 %v0_11134, 1
  store i32 %v1_11134, i32* %r2.global-to-local, align 4
  %v3_11138 = icmp uge i32 %v5_11114, %v1_11134
  store i1 %v3_11138, i1* %cpsr_c.global-to-local, align 1
  %v9_11138 = icmp eq i32 %v5_11114, %v1_11134
  store i1 %v9_11138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11138, label %dec_label_pc_11140, label %dec_label_pc_11128

dec_label_pc_11140:                               ; preds = %bb1897, %dec_label_pc_1191c
  store i32 ptrtoint (i32* @global_var_1dc04.124 to i32), i32* @lr, align 4
  %v0_11144 = load i32, i32* @r6, align 4
  %v1_11144 = add i32 %v0_11144, 24
  %v2_11144 = inttoptr i32 %v1_11144 to i32*
  %v3_11144 = load i32, i32* %v2_11144, align 4
  %v2_11148 = load i32, i32* @global_var_1dc04.124, align 4
  store i32 %v2_11148, i32* %r3.global-to-local, align 4
  %v2_1114c = add i32 %v3_11144, %v5_11114
  store i32 %v2_1114c, i32* %ip.global-to-local, align 4
  store i32 %v2_1114c, i32* %v2_11144, align 4
  %v0_11154 = load i32, i32* %r3.global-to-local, align 4
  %v1_11154 = load i32, i32* @r6, align 4
  %v2_11154 = add i32 %v1_11154, 8
  %v3_11154 = inttoptr i32 %v2_11154 to i32*
  store i32 %v0_11154, i32* %v3_11154, align 4
  br label %dec_label_pc_11158

dec_label_pc_11158:                               ; preds = %dec_label_pc_11774, %dec_label_pc_11140
  %v0_11158 = load i32, i32* @r6, align 4
  %v1_11158 = add i32 %v0_11158, 12
  %v2_11158 = inttoptr i32 %v1_11158 to i32*
  %v3_11158 = load i32, i32* %v2_11158, align 4
  store i32 %v3_11158, i32* %r2.global-to-local, align 4
  %v1_1115c = add i32 %v3_11158, -2
  store i32 %v1_1115c, i32* %r3.global-to-local, align 4
  %v7_11160 = icmp eq i32 %v1_1115c, 8
  store i1 %v7_11160, i1* %cpsr_z.global-to-local, align 1
  %v5_11164 = and i32 %v1_1115c, 1073741824
  %v6_11164 = icmp ne i32 %v5_11164, 0
  store i1 %v6_11164, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_11158, label %dec_label_pc_110d8.loopexit [
    i32 2, label %dec_label_pc_11190
    i32 3, label %dec_label_pc_11270
    i32 4, label %dec_label_pc_1132c
    i32 5, label %dec_label_pc_113d8
    i32 6, label %dec_label_pc_114a0
    i32 7, label %dec_label_pc_11630
    i32 8, label %dec_label_pc_11568
    i32 9, label %dec_label_pc_11798
    i32 10, label %dec_label_pc_116f8
  ]

dec_label_pc_11190:                               ; preds = %dec_label_pc_11158
  %v1_11190 = add i32 %v0_11158, 24
  %v2_11190 = inttoptr i32 %v1_11190 to i32*
  %v3_11190 = load i32, i32* %v2_11190, align 4
  store i32 %v3_11190, i32* %ip.global-to-local, align 4
  %v0_11194 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11194, i32* @r5, align 4
  store i32 0, i32* @r7, align 4
  store i32 -3, i32* %sb.global-to-local, align 4
  store i32 -4, i32* %sl.global-to-local, align 4
  %v1_111a4 = add i32 %v0_11158, 29
  store i32 %v1_111a4, i32* @r4, align 4
  %v3_111a8708 = icmp eq i32 %v3_11190, 0
  store i1 %v3_111a8708, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_111a8708, i1* %cpsr_z.global-to-local, align 1
  %v6_111ac715 = icmp sgt i32 %v3_11190, 0
  br i1 %v6_111ac715, label %dec_label_pc_111b0.preheader, label %dec_label_pc_11250

dec_label_pc_111a8.loopexit:                      ; preds = %dec_label_pc_111c8
  %v2_111d0 = add i32 %v1_111d0, 2
  store i32 %v2_111d0, i32* @r5, align 4
  %v2_111d4 = add i32 %v1_111d4, 2
  store i32 %v2_111d4, i32* @r4, align 4
  %v2_111d8 = add i32 %v1_111d8, 2
  store i32 %v2_111d8, i32* @r7, align 4
  %v3_111a8 = icmp uge i32 %v2_111d8, %v1_111a8
  store i1 %v3_111a8, i1* %cpsr_c.global-to-local, align 1
  %v9_111a8 = icmp eq i32 %v2_111d8, %v1_111a8
  store i1 %v9_111a8, i1* %cpsr_z.global-to-local, align 1
  %v6_111ac = icmp slt i32 %v2_111d8, %v1_111a8
  br i1 %v6_111ac, label %dec_label_pc_111b0.preheader, label %dec_label_pc_11250

dec_label_pc_111b0.preheader:                     ; preds = %dec_label_pc_11190, %dec_label_pc_111a8.loopexit
  %v6_112581108 = phi i32 [ %v6_112581109, %dec_label_pc_111a8.loopexit ], [ %v0_11158, %dec_label_pc_11190 ]
  %v1_111d81097 = phi i32 [ %v2_111d8, %dec_label_pc_111a8.loopexit ], [ 0, %dec_label_pc_11190 ]
  %v1_111d01095 = phi i32 [ %v2_111d0, %dec_label_pc_111a8.loopexit ], [ %v0_11194, %dec_label_pc_11190 ]
  %v1_111bc1093 = phi i32 [ %v1_111a8, %dec_label_pc_111a8.loopexit ], [ %v3_11190, %dec_label_pc_11190 ]
  %v0_111b01091 = phi i32 [ %v2_111d4, %dec_label_pc_111a8.loopexit ], [ %v1_111a4, %dec_label_pc_11190 ]
  br label %dec_label_pc_111b0

dec_label_pc_111b0:                               ; preds = %dec_label_pc_111b0.preheader, %dec_label_pc_11230
  %v6_112581109 = phi i32 [ %v6_112581108, %dec_label_pc_111b0.preheader ], [ %v0_11238, %dec_label_pc_11230 ]
  %v1_111d8 = phi i32 [ %v1_111d81097, %dec_label_pc_111b0.preheader ], [ %v1_1123c, %dec_label_pc_11230 ]
  %v1_111d0 = phi i32 [ %v1_111d01095, %dec_label_pc_111b0.preheader ], [ %v1_11244, %dec_label_pc_11230 ]
  %v1_111a8 = phi i32 [ %v1_111bc1093, %dec_label_pc_111b0.preheader ], [ %v3_11238, %dec_label_pc_11230 ]
  %v1_111d4 = phi i32 [ %v0_111b01091, %dec_label_pc_111b0.preheader ], [ %v1_11248, %dec_label_pc_11230 ]
  %v1_111b0 = add i32 %v1_111d4, -1
  %v2_111b0 = inttoptr i32 %v1_111b0 to i8*
  %v3_111b0 = load i8, i8* %v2_111b0, align 1
  %v4_111b0 = zext i8 %v3_111b0 to i32
  store i32 %v4_111b0, i32* %r3.global-to-local, align 4
  %v2_111b4 = icmp eq i8 %v3_111b0, -1
  store i1 %v2_111b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_111b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111b4, label %dec_label_pc_111bc, label %dec_label_pc_11250

dec_label_pc_111bc:                               ; preds = %dec_label_pc_111b0
  %v0_111bc = load i32, i32* %r8.global-to-local, align 4
  %v2_111bc = add i32 %v0_111bc, %v1_111a8
  store i32 %v2_111bc, i32* %r2.global-to-local, align 4
  %v3_111c0 = icmp uge i32 %v2_111bc, %v1_111d4
  store i1 %v3_111c0, i1* %cpsr_c.global-to-local, align 1
  %v9_111c0 = icmp eq i32 %v2_111bc, %v1_111d4
  store i1 %v9_111c0, i1* %cpsr_z.global-to-local, align 1
  %v2_111c4 = xor i1 %v3_111c0, true
  %v3_111c4 = or i1 %v9_111c0, %v2_111c4
  br i1 %v3_111c4, label %dec_label_pc_11250, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %dec_label_pc_111bc
  %v1_111c8 = inttoptr i32 %v1_111d4 to i8*
  %v2_111c8 = load i8, i8* %v1_111c8, align 1
  %v3_111c8 = zext i8 %v2_111c8 to i32
  store i32 %v3_111c8, i32* %r3.global-to-local, align 4
  %v2_111cc = icmp eq i8 %v2_111c8, -1
  store i1 %v2_111cc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_111cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_111cc, label %dec_label_pc_111a8.loopexit, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_111c8
  %v2_111e0 = icmp ugt i8 %v2_111c8, -4
  store i1 %v2_111e0, i1* %cpsr_c.global-to-local, align 1
  %v7_111e0 = icmp eq i8 %v2_111c8, -3
  store i1 %v7_111e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111e0, label %dec_label_pc_11860, label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111e0
  %v1_111e8 = add i32 %v1_111d0, 2
  store i32 %v1_111e8, i32* %r3.global-to-local, align 4
  %v3_111ec = icmp uge i32 %v2_111bc, %v1_111e8
  store i1 %v3_111ec, i1* %cpsr_c.global-to-local, align 1
  %v9_111ec = icmp eq i32 %v2_111bc, %v1_111e8
  store i1 %v9_111ec, i1* %cpsr_z.global-to-local, align 1
  %v2_111f0 = xor i1 %v3_111ec, true
  %v3_111f0 = or i1 %v9_111ec, %v2_111f0
  br i1 %v3_111f0, label %dec_label_pc_11250, label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %bb1936, %dec_label_pc_118b8, %bb1935, %dec_label_pc_111e8
  %v0_111f4 = load i32, i32* @r4, align 4
  %v1_111f4 = inttoptr i32 %v0_111f4 to i8*
  %v2_111f4 = load i8, i8* %v1_111f4, align 1
  %v3_111f4 = zext i8 %v2_111f4 to i32
  store i32 %v3_111f4, i32* %r3.global-to-local, align 4
  %v2_111f8 = icmp ugt i8 %v2_111f4, -4
  store i1 %v2_111f8, i1* %cpsr_c.global-to-local, align 1
  %v7_111f8 = icmp eq i8 %v2_111f4, -3
  store i1 %v7_111f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f8, label %bb1898, label %dec_label_pc_11204

bb1898:                                           ; preds = %dec_label_pc_111f4
  %v1_111fc = load i32, i32* %sl.global-to-local, align 4
  %v2_111fc = trunc i32 %v1_111fc to i8
  store i8 %v2_111fc, i8* %v1_111f4, align 1
  %v0_11200.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11200.pr, label %bb1900, label %.dec_label_pc_11204_crit_edge

.dec_label_pc_11204_crit_edge:                    ; preds = %bb1898
  %v0_11204.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %.dec_label_pc_11204_crit_edge, %dec_label_pc_111f4
  %v0_11204 = phi i32 [ %v0_11204.pre, %.dec_label_pc_11204_crit_edge ], [ %v3_111f4, %dec_label_pc_111f4 ]
  %v2_11204 = icmp ugt i32 %v0_11204, 250
  store i1 %v2_11204, i1* %cpsr_c.global-to-local, align 1
  %v7_11204 = icmp eq i32 %v0_11204, 251
  store i1 %v7_11204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11204, label %bb1899, label %bb1900

bb1899:                                           ; preds = %dec_label_pc_11204
  %v1_11208 = load i32, i32* %sb.global-to-local, align 4
  %v2_11208 = trunc i32 %v1_11208 to i8
  %v3_11208 = load i32, i32* @r4, align 4
  %v4_11208 = inttoptr i32 %v3_11208 to i8*
  store i8 %v2_11208, i8* %v4_11208, align 1
  br label %bb1900

bb1900:                                           ; preds = %bb1898, %dec_label_pc_11204, %bb1899
  %v0_1120c = load i32, i32* @r4, align 4
  %v1_1120c = add i32 %v0_1120c, 1
  %v2_1120c = inttoptr i32 %v1_1120c to i8*
  %v3_1120c = load i8, i8* %v2_1120c, align 1
  %v4_1120c = zext i8 %v3_1120c to i32
  store i32 %v4_1120c, i32* %r3.global-to-local, align 4
  %v2_11210 = icmp ugt i8 %v3_1120c, -4
  store i1 %v2_11210, i1* %cpsr_c.global-to-local, align 1
  %v7_11210 = icmp eq i8 %v3_1120c, -3
  store i1 %v7_11210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11210, label %bb1901, label %dec_label_pc_1121c

bb1901:                                           ; preds = %bb1900
  %v1_11214 = load i32, i32* %sl.global-to-local, align 4
  %v2_11214 = trunc i32 %v1_11214 to i8
  store i8 %v2_11214, i8* %v2_1120c, align 1
  %v0_11218.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11218.pr, label %bb1903, label %.dec_label_pc_1121c_crit_edge

.dec_label_pc_1121c_crit_edge:                    ; preds = %bb1901
  %v0_1121c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %.dec_label_pc_1121c_crit_edge, %bb1900
  %v0_1121c = phi i32 [ %v0_1121c.pre, %.dec_label_pc_1121c_crit_edge ], [ %v4_1120c, %bb1900 ]
  %v2_1121c = icmp ugt i32 %v0_1121c, 250
  store i1 %v2_1121c, i1* %cpsr_c.global-to-local, align 1
  %v7_1121c = icmp eq i32 %v0_1121c, 251
  store i1 %v7_1121c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1121c, label %bb1902, label %bb1903

bb1902:                                           ; preds = %dec_label_pc_1121c
  %v1_11220 = load i32, i32* %sb.global-to-local, align 4
  %v2_11220 = trunc i32 %v1_11220 to i8
  %v3_11220 = load i32, i32* @r4, align 4
  %v4_11220 = add i32 %v3_11220, 1
  %v5_11220 = inttoptr i32 %v4_11220 to i8*
  store i8 %v2_11220, i8* %v5_11220, align 1
  br label %bb1903

bb1903:                                           ; preds = %bb1901, %dec_label_pc_1121c, %bb1902
  %v0_11224 = load i32, i32* @r6, align 4
  %v1_11224 = add i32 %v0_11224, 4
  %v2_11224 = inttoptr i32 %v1_11224 to i32*
  %v3_11224 = load i32, i32* %v2_11224, align 4
  store i32 %v3_11224, i32* %r0.global-to-local, align 4
  %v0_11228 = load i32, i32* @r5, align 4
  br label %dec_label_pc_11230

dec_label_pc_11230:                               ; preds = %dec_label_pc_11974, %bb1903
  %v0_11234 = phi i32 [ %v3_11990, %dec_label_pc_11974 ], [ %v3_11224, %bb1903 ]
  %storemerge5 = phi i32 [ %v2_1187c, %dec_label_pc_11974 ], [ %v0_11228, %bb1903 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_11974 ], [ 3, %bb1903 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11234 = inttoptr i32 %storemerge5 to i32*
  %v5_11234 = call i32 @function_13470(i32 %v0_11234, i32* %v4_11234, i32 %storemerge, i32 16384)
  store i32 %v5_11234, i32* %r0.global-to-local, align 4
  %v0_11238 = load i32, i32* @r6, align 4
  %v1_11238 = add i32 %v0_11238, 24
  %v2_11238 = inttoptr i32 %v1_11238 to i32*
  %v3_11238 = load i32, i32* %v2_11238, align 4
  store i32 %v3_11238, i32* %ip.global-to-local, align 4
  %v0_1123c = load i32, i32* @r7, align 4
  %v1_1123c = add i32 %v0_1123c, 3
  store i32 %v1_1123c, i32* @r7, align 4
  %v3_11240 = icmp uge i32 %v1_1123c, %v3_11238
  store i1 %v3_11240, i1* %cpsr_c.global-to-local, align 1
  %v9_11240 = icmp eq i32 %v1_1123c, %v3_11238
  store i1 %v9_11240, i1* %cpsr_z.global-to-local, align 1
  %v0_11244 = load i32, i32* @r5, align 4
  %v1_11244 = add i32 %v0_11244, 3
  store i32 %v1_11244, i32* @r5, align 4
  %v0_11248 = load i32, i32* @r4, align 4
  %v1_11248 = add i32 %v0_11248, 3
  store i32 %v1_11248, i32* @r4, align 4
  %v5_1124c = icmp slt i32 %v1_1123c, %v3_11238
  br i1 %v5_1124c, label %dec_label_pc_111b0, label %dec_label_pc_11250

dec_label_pc_11250:                               ; preds = %dec_label_pc_111a8.loopexit, %dec_label_pc_111b0, %dec_label_pc_11230, %dec_label_pc_111e8, %dec_label_pc_111bc, %dec_label_pc_11190, %dec_label_pc_11860.dec_label_pc_11250.loopexit_crit_edge
  %v6_11258 = phi i32 [ %v0_11888, %dec_label_pc_11860.dec_label_pc_11250.loopexit_crit_edge ], [ %v0_11158, %dec_label_pc_11190 ], [ %v6_112581109, %dec_label_pc_111b0 ], [ %v0_11238, %dec_label_pc_11230 ], [ %v6_112581109, %dec_label_pc_111e8 ], [ %v6_112581109, %dec_label_pc_111bc ], [ %v6_112581109, %dec_label_pc_111a8.loopexit ]
  %v0_11260.pre = phi i32 [ %v0_11250.pre.pre, %dec_label_pc_11860.dec_label_pc_11250.loopexit_crit_edge ], [ 0, %dec_label_pc_11190 ], [ %v1_111d8, %dec_label_pc_111b0 ], [ %v1_1123c, %dec_label_pc_11230 ], [ %v1_111d8, %dec_label_pc_111e8 ], [ %v1_111d8, %dec_label_pc_111bc ], [ %v2_111d8, %dec_label_pc_111a8.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11250 = icmp eq i32 %v0_11260.pre, 0
  store i1 %v2_11250, i1* %cpsr_z.global-to-local, align 1
  %tmp1904 = icmp slt i32 %v0_11260.pre, 1
  br i1 %tmp1904, label %dec_label_pc_11260, label %.thread1149

.thread1149:                                      ; preds = %dec_label_pc_11250
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_11258 = add i32 %v6_11258, 12
  %v8_11258 = inttoptr i32 %v7_11258 to i32*
  store i32 3, i32* %v8_11258, align 4
  br label %dec_label_pc_11774

dec_label_pc_11260:                               ; preds = %dec_label_pc_11250, %dec_label_pc_11800, %dec_label_pc_11a58, %dec_label_pc_11698, %dec_label_pc_115d0, %dec_label_pc_11508, %dec_label_pc_11440, %dec_label_pc_11394, %dec_label_pc_112e8
  %v0_11260 = phi i32 [ %v1_117f4, %dec_label_pc_11800 ], [ %v0_11a50, %dec_label_pc_11a58 ], [ %v1_1168c, %dec_label_pc_11698 ], [ %v1_115c4, %dec_label_pc_115d0 ], [ %v1_114fc, %dec_label_pc_11508 ], [ %v1_11434, %dec_label_pc_11440 ], [ %v0_11394, %dec_label_pc_11394 ], [ %v0_112e8, %dec_label_pc_112e8 ], [ %v0_11260.pre, %dec_label_pc_11250 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11260 = icmp eq i32 %v0_11260, 0
  store i1 %v2_11260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11260, label %dec_label_pc_110d8.loopexit, label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %dec_label_pc_11260
  %v0_11268 = load i32, i32* @r6, align 4
  %v1_11268 = add i32 %v0_11268, 24
  %v2_11268 = inttoptr i32 %v1_11268 to i32*
  %v3_11268 = load i32, i32* %v2_11268, align 4
  store i32 %v3_11268, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11774

dec_label_pc_11270:                               ; preds = %dec_label_pc_11158
  %v1_11270 = add i32 %v0_11158, 24
  %v2_11270 = inttoptr i32 %v1_11270 to i32*
  %v3_11270 = load i32, i32* %v2_11270, align 4
  store i32 %v3_11270, i32* %r3.global-to-local, align 4
  %v1_11274 = add i32 %v3_11270, -1
  store i32 %v1_11274, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11278 = icmp eq i32 %v1_11274, 0
  store i1 %v2_11278, i1* %cpsr_z.global-to-local, align 1
  %tmp1905 = icmp slt i32 %v1_11274, 1
  br i1 %tmp1905, label %dec_label_pc_11038, label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_11270
  %v2_11280 = add i32 %v1_11274, %v0_11158
  store i32 %v2_11280, i32* %r3.global-to-local, align 4
  %v1_11284 = add i32 %v2_11280, 28
  %v2_11284 = inttoptr i32 %v1_11284 to i8*
  %v3_11284 = load i8, i8* %v2_11284, align 1
  %v4_11284 = zext i8 %v3_11284 to i32
  store i32 %v4_11284, i32* %r3.global-to-local, align 4
  %v2_11288 = icmp ugt i8 %v3_11284, 61
  store i1 %v2_11288, i1* %cpsr_c.global-to-local, align 1
  %v7_11288 = icmp eq i8 %v3_11284, 62
  store i1 %v7_11288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11288, label %dec_label_pc_112cc, label %bb1906

bb1906:                                           ; preds = %dec_label_pc_11280
  %v3_1128c = icmp ugt i8 %v3_11284, 57
  store i1 %v3_1128c, i1* %cpsr_c.global-to-local, align 1
  %v8_1128c = icmp eq i8 %v3_11284, 58
  store i1 %v8_1128c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1128c, label %dec_label_pc_112cc, label %dec_label_pc_112c4

dec_label_pc_11298:                               ; preds = %dec_label_pc_112c4
  %v2_11298 = icmp ugt i32 %v0_112a0, 34
  store i1 %v2_11298, i1* %cpsr_c.global-to-local, align 1
  %v7_11298 = icmp eq i32 %v0_112a0, 35
  store i1 %v7_11298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11298, label %dec_label_pc_112cc, label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11298
  %v2_112a0 = icmp ugt i32 %v0_112a0, 36
  store i1 %v2_112a0, i1* %cpsr_c.global-to-local, align 1
  %v7_112a0 = icmp eq i32 %v0_112a0, 37
  store i1 %v7_112a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112a0, label %dec_label_pc_112cc, label %dec_label_pc_112a8

dec_label_pc_112a8:                               ; preds = %dec_label_pc_112a0
  %v1_112a8 = add i32 %v0_112a8, -1
  store i32 %v1_112a8, i32* %r0.global-to-local, align 4
  %v2_112a8 = icmp ne i32 %v0_112a8, 0
  store i1 %v2_112a8, i1* %cpsr_c.global-to-local, align 1
  %v7_112a8 = icmp eq i32 %v0_112a8, 1
  store i1 %v7_112a8, i1* %cpsr_z.global-to-local, align 1
  %v2_112ac = add i32 %v1_112a8, %v0_11158
  store i32 %v2_112ac, i32* %r3.global-to-local, align 4
  br i1 %v7_112a8, label %dec_label_pc_11038, label %dec_label_pc_112b4

dec_label_pc_112b4:                               ; preds = %dec_label_pc_112a8
  %v1_112b4 = add i32 %v2_112ac, 28
  %v2_112b4 = inttoptr i32 %v1_112b4 to i8*
  %v3_112b4 = load i8, i8* %v2_112b4, align 1
  %v4_112b4 = zext i8 %v3_112b4 to i32
  store i32 %v4_112b4, i32* %r3.global-to-local, align 4
  %v2_112b8 = icmp ugt i8 %v3_112b4, 61
  store i1 %v2_112b8, i1* %cpsr_c.global-to-local, align 1
  %v7_112b8 = icmp eq i8 %v3_112b4, 62
  store i1 %v7_112b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112b8, label %dec_label_pc_112cc, label %bb1907

bb1907:                                           ; preds = %dec_label_pc_112b4
  %v3_112bc = icmp ugt i8 %v3_112b4, 57
  store i1 %v3_112bc, i1* %cpsr_c.global-to-local, align 1
  %v8_112bc = icmp eq i8 %v3_112b4, 58
  store i1 %v8_112bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112bc, label %dec_label_pc_112cc, label %dec_label_pc_112c4

dec_label_pc_112c4:                               ; preds = %bb1906, %bb1907
  %v0_112a8 = phi i32 [ %v1_112a8, %bb1907 ], [ %v1_11274, %bb1906 ]
  %v0_112a0 = phi i32 [ %v4_112b4, %bb1907 ], [ %v4_11284, %bb1906 ]
  %v2_112c4 = icmp ugt i32 %v0_112a0, 35
  store i1 %v2_112c4, i1* %cpsr_c.global-to-local, align 1
  %v7_112c4 = icmp eq i32 %v0_112a0, 36
  store i1 %v7_112c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112c4, label %dec_label_pc_112cc, label %dec_label_pc_11298

dec_label_pc_112cc:                               ; preds = %dec_label_pc_112b4, %dec_label_pc_112c4, %bb1907, %dec_label_pc_112a0, %dec_label_pc_11298, %dec_label_pc_11280, %bb1906
  %v0_112cc = phi i32 [ %v1_11274, %dec_label_pc_11280 ], [ %v1_11274, %bb1906 ], [ %v1_112a8, %dec_label_pc_112b4 ], [ %v0_112a8, %dec_label_pc_112c4 ], [ %v1_112a8, %bb1907 ], [ %v0_112a8, %dec_label_pc_112a0 ], [ %v0_112a8, %dec_label_pc_11298 ]
  %v1_112cc = add i32 %v0_112cc, 1
  store i32 %v1_112cc, i32* @r7, align 4
  %v2_112d0 = icmp eq i32 %v1_112cc, -1
  store i1 %v2_112d0, i1* %cpsr_c.global-to-local, align 1
  %v7_112d0 = icmp eq i32 %v0_112cc, -2
  store i1 %v7_112d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112d0, label %dec_label_pc_11038, label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112cc
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_112dc = call i32 @function_11c94(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_112e4 = call i32 @function_11c94(i32 27)
  store i32 %v1_112e4, i32* %r0.global-to-local, align 4
  %v0_112e8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_112e8

dec_label_pc_112e8:                               ; preds = %dec_label_pc_110c0, %dec_label_pc_112d8
  %v0_112e8 = phi i32 [ %v0_110d0, %dec_label_pc_110c0 ], [ %v0_112e8.pre, %dec_label_pc_112d8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112e8 = icmp eq i32 %v0_112e8, 0
  store i1 %v2_112e8, i1* %cpsr_z.global-to-local, align 1
  %tmp1908 = icmp slt i32 %v0_112e8, 1
  br i1 %tmp1908, label %dec_label_pc_11260, label %dec_label_pc_112f0

dec_label_pc_112f0:                               ; preds = %dec_label_pc_112e8
  %v0_112f0 = load i32, i32* @r6, align 4
  %v1_112f0 = inttoptr i32 %v0_112f0 to i32*
  %v2_112f0 = load i32, i32* %v1_112f0, align 4
  store i32 %v2_112f0, i32* %r3.global-to-local, align 4
  %v1_112f4 = add i32 %v0_112f0, 4
  %v2_112f4 = inttoptr i32 %v1_112f4 to i32*
  %v3_112f4 = load i32, i32* %v2_112f4, align 4
  store i32 %v3_112f4, i32* %r0.global-to-local, align 4
  %v1_112f8 = add i32 %v2_112f0, 12
  %v2_112f8 = inttoptr i32 %v1_112f8 to i8*
  %v3_112f8 = load i8, i8* %v2_112f8, align 1
  %v4_112f8 = zext i8 %v3_112f8 to i32
  store i32 %v4_112f8, i32* %r2.global-to-local, align 4
  %v1_112fc = inttoptr i32 %v2_112f0 to i32*
  %v2_112fc = load i32, i32* %v1_112fc, align 4
  store i32 %v2_112fc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11304 = inttoptr i32 %v2_112fc to i32*
  %v5_11304 = call i32 @function_13470(i32 %v3_112f4, i32* %v4_11304, i32 %v4_112f8, i32 16384)
  store i32 %v5_11304, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_1130c = load i32, i32* @r6, align 4
  %v1_1130c = add i32 %v0_1130c, 4
  %v2_1130c = inttoptr i32 %v1_1130c to i32*
  %v3_1130c = load i32, i32* %v2_1130c, align 4
  store i32 %v3_1130c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11318 = call i32 @function_13470(i32 %v3_1130c, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 %v5_11318, i32* %r0.global-to-local, align 4
  %v0_1131c = load i32, i32* @r6, align 4
  %v1_1131c = add i32 %v0_1131c, 24
  %v2_1131c = inttoptr i32 %v1_1131c to i32*
  %v3_1131c = load i32, i32* %v2_1131c, align 4
  store i32 %v3_1131c, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_11324 = add i32 %v0_1131c, 12
  %v3_11324 = inttoptr i32 %v2_11324 to i32*
  store i32 4, i32* %v3_11324, align 4
  br label %dec_label_pc_11774

dec_label_pc_1132c:                               ; preds = %dec_label_pc_11158
  %v1_1132c = add i32 %v0_11158, 24
  %v2_1132c = inttoptr i32 %v1_1132c to i32*
  %v3_1132c = load i32, i32* %v2_1132c, align 4
  store i32 %v3_1132c, i32* %r3.global-to-local, align 4
  %v1_11330 = add i32 %v3_1132c, -1
  store i32 %v1_11330, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11334 = icmp eq i32 %v1_11330, 0
  store i1 %v2_11334, i1* %cpsr_z.global-to-local, align 1
  %tmp1909 = icmp slt i32 %v1_11330, 1
  br i1 %tmp1909, label %dec_label_pc_118c4, label %dec_label_pc_1133c

dec_label_pc_1133c:                               ; preds = %dec_label_pc_1132c
  %v2_1133c = add i32 %v1_11330, %v0_11158
  store i32 %v2_1133c, i32* %r3.global-to-local, align 4
  %v1_11340 = add i32 %v2_1133c, 28
  %v2_11340 = inttoptr i32 %v1_11340 to i8*
  %v3_11340 = load i8, i8* %v2_11340, align 1
  %v4_11340 = zext i8 %v3_11340 to i32
  store i32 %v4_11340, i32* %r3.global-to-local, align 4
  %v2_11344 = icmp ugt i8 %v3_11340, 61
  store i1 %v2_11344, i1* %cpsr_c.global-to-local, align 1
  %v7_11344 = icmp eq i8 %v3_11340, 62
  store i1 %v7_11344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11344, label %dec_label_pc_11380, label %bb1910

bb1910:                                           ; preds = %dec_label_pc_1133c
  %v3_11348 = icmp ugt i8 %v3_11340, 57
  store i1 %v3_11348, i1* %cpsr_c.global-to-local, align 1
  %v8_11348 = icmp eq i8 %v3_11340, 58
  store i1 %v8_11348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11348, label %dec_label_pc_11380, label %dec_label_pc_11378

dec_label_pc_11354:                               ; preds = %dec_label_pc_11378
  %v2_11354 = icmp ugt i32 %v0_11354, 34
  store i1 %v2_11354, i1* %cpsr_c.global-to-local, align 1
  %v7_11354 = icmp eq i32 %v0_11354, 35
  store i1 %v7_11354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11354, label %dec_label_pc_11380, label %dec_label_pc_1135c

dec_label_pc_1135c:                               ; preds = %dec_label_pc_11354
  %v1_1135c = add i32 %v0_1135c, -1
  store i32 %v1_1135c, i32* %r0.global-to-local, align 4
  %v2_1135c = icmp ne i32 %v0_1135c, 0
  store i1 %v2_1135c, i1* %cpsr_c.global-to-local, align 1
  %v7_1135c = icmp eq i32 %v0_1135c, 1
  store i1 %v7_1135c, i1* %cpsr_z.global-to-local, align 1
  %v2_11360 = add i32 %v1_1135c, %v0_11158
  store i32 %v2_11360, i32* %r3.global-to-local, align 4
  br i1 %v7_1135c, label %dec_label_pc_118c4, label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %dec_label_pc_1135c
  %v1_11368 = add i32 %v2_11360, 28
  %v2_11368 = inttoptr i32 %v1_11368 to i8*
  %v3_11368 = load i8, i8* %v2_11368, align 1
  %v4_11368 = zext i8 %v3_11368 to i32
  store i32 %v4_11368, i32* %r3.global-to-local, align 4
  %v2_1136c = icmp ugt i8 %v3_11368, 61
  store i1 %v2_1136c, i1* %cpsr_c.global-to-local, align 1
  %v7_1136c = icmp eq i8 %v3_11368, 62
  store i1 %v7_1136c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1136c, label %dec_label_pc_11380, label %bb1911

bb1911:                                           ; preds = %dec_label_pc_11368
  %v3_11370 = icmp ugt i8 %v3_11368, 57
  store i1 %v3_11370, i1* %cpsr_c.global-to-local, align 1
  %v8_11370 = icmp eq i8 %v3_11368, 58
  store i1 %v8_11370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11370, label %dec_label_pc_11380, label %dec_label_pc_11378

dec_label_pc_11378:                               ; preds = %bb1910, %bb1911
  %v0_1135c = phi i32 [ %v1_1135c, %bb1911 ], [ %v1_11330, %bb1910 ]
  %v0_11354 = phi i32 [ %v4_11368, %bb1911 ], [ %v4_11340, %bb1910 ]
  %v2_11378 = icmp ugt i32 %v0_11354, 35
  store i1 %v2_11378, i1* %cpsr_c.global-to-local, align 1
  %v7_11378 = icmp eq i32 %v0_11354, 36
  store i1 %v7_11378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11378, label %dec_label_pc_11380, label %dec_label_pc_11354

dec_label_pc_11380:                               ; preds = %dec_label_pc_11368, %dec_label_pc_11378, %bb1911, %dec_label_pc_11354, %dec_label_pc_1133c, %bb1910
  %v0_11380 = phi i32 [ %v1_11330, %dec_label_pc_1133c ], [ %v1_11330, %bb1910 ], [ %v1_1135c, %dec_label_pc_11368 ], [ %v0_1135c, %dec_label_pc_11378 ], [ %v1_1135c, %bb1911 ], [ %v0_1135c, %dec_label_pc_11354 ]
  %v1_11380 = add i32 %v0_11380, 1
  store i32 %v1_11380, i32* @r7, align 4
  %v2_11384 = icmp eq i32 %v1_11380, -1
  store i1 %v2_11384, i1* %cpsr_c.global-to-local, align 1
  %v7_11384 = icmp eq i32 %v0_11380, -2
  store i1 %v7_11384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11384, label %dec_label_pc_118c4, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11380
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11390 = call i32 @function_11c94(i32 25)
  store i32 %v1_11390, i32* %r0.global-to-local, align 4
  %v0_11394.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %dec_label_pc_11904, %dec_label_pc_1138c
  %v0_11394 = phi i32 [ %v0_1190c, %dec_label_pc_11904 ], [ %v0_11394.pre, %dec_label_pc_1138c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11394 = icmp eq i32 %v0_11394, 0
  store i1 %v2_11394, i1* %cpsr_z.global-to-local, align 1
  %tmp1912 = icmp slt i32 %v0_11394, 1
  br i1 %tmp1912, label %dec_label_pc_11260, label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11394
  %v0_1139c = load i32, i32* @r6, align 4
  %v1_1139c = inttoptr i32 %v0_1139c to i32*
  %v2_1139c = load i32, i32* %v1_1139c, align 4
  store i32 %v2_1139c, i32* %r3.global-to-local, align 4
  %v1_113a0 = add i32 %v0_1139c, 4
  %v2_113a0 = inttoptr i32 %v1_113a0 to i32*
  %v3_113a0 = load i32, i32* %v2_113a0, align 4
  store i32 %v3_113a0, i32* %r0.global-to-local, align 4
  %v1_113a4 = add i32 %v2_1139c, 13
  %v2_113a4 = inttoptr i32 %v1_113a4 to i8*
  %v3_113a4 = load i8, i8* %v2_113a4, align 1
  %v4_113a4 = zext i8 %v3_113a4 to i32
  store i32 %v4_113a4, i32* %r2.global-to-local, align 4
  %v1_113a8 = add i32 %v2_1139c, 4
  %v2_113a8 = inttoptr i32 %v1_113a8 to i32*
  %v3_113a8 = load i32, i32* %v2_113a8, align 4
  store i32 %v3_113a8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_113b0 = inttoptr i32 %v3_113a8 to i32*
  %v5_113b0 = call i32 @function_13470(i32 %v3_113a0, i32* %v4_113b0, i32 %v4_113a4, i32 16384)
  store i32 %v5_113b0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_113b8 = load i32, i32* @r6, align 4
  %v1_113b8 = add i32 %v0_113b8, 4
  %v2_113b8 = inttoptr i32 %v1_113b8 to i32*
  %v3_113b8 = load i32, i32* %v2_113b8, align 4
  store i32 %v3_113b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_113c4 = call i32 @function_13470(i32 %v3_113b8, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 %v5_113c4, i32* %r0.global-to-local, align 4
  %v0_113c8 = load i32, i32* @r6, align 4
  %v1_113c8 = add i32 %v0_113c8, 24
  %v2_113c8 = inttoptr i32 %v1_113c8 to i32*
  %v3_113c8 = load i32, i32* %v2_113c8, align 4
  store i32 %v3_113c8, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_113d0 = add i32 %v0_113c8, 12
  %v3_113d0 = inttoptr i32 %v2_113d0 to i32*
  store i32 5, i32* %v3_113d0, align 4
  br label %dec_label_pc_11774

dec_label_pc_113d8:                               ; preds = %dec_label_pc_11158
  %v1_113d8 = add i32 %v0_11158, 24
  %v2_113d8 = inttoptr i32 %v1_113d8 to i32*
  %v3_113d8 = load i32, i32* %v2_113d8, align 4
  store i32 %v3_113d8, i32* %ip.global-to-local, align 4
  %v1_113dc = add i32 %v3_113d8, -1
  store i32 %v1_113dc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113e0 = icmp eq i32 %v1_113dc, 0
  store i1 %v2_113e0, i1* %cpsr_z.global-to-local, align 1
  %tmp1913 = icmp slt i32 %v1_113dc, 1
  br i1 %tmp1913, label %dec_label_pc_110dc.backedge.thread, label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113d8
  %v2_113e8 = add i32 %v1_113dc, %v0_11158
  store i32 %v2_113e8, i32* %r3.global-to-local, align 4
  %v1_113ec = add i32 %v2_113e8, 28
  %v2_113ec = inttoptr i32 %v1_113ec to i8*
  %v3_113ec = load i8, i8* %v2_113ec, align 1
  %v4_113ec = zext i8 %v3_113ec to i32
  store i32 %v4_113ec, i32* %r3.global-to-local, align 4
  %v2_113f0 = icmp ugt i8 %v3_113ec, 57
  store i1 %v2_113f0, i1* %cpsr_c.global-to-local, align 1
  %v7_113f0 = icmp eq i8 %v3_113ec, 58
  store i1 %v7_113f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113f0, label %dec_label_pc_11434, label %bb1914

bb1914:                                           ; preds = %dec_label_pc_113e8
  %v3_113f4 = icmp ugt i8 %v3_113ec, 61
  store i1 %v3_113f4, i1* %cpsr_c.global-to-local, align 1
  %v8_113f4 = icmp eq i8 %v3_113ec, 62
  store i1 %v8_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113f4, label %dec_label_pc_11434, label %dec_label_pc_1142c

dec_label_pc_11400:                               ; preds = %dec_label_pc_1142c
  %v2_11400 = icmp ugt i32 %v0_11408, 34
  store i1 %v2_11400, i1* %cpsr_c.global-to-local, align 1
  %v7_11400 = icmp eq i32 %v0_11408, 35
  store i1 %v7_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11400, label %dec_label_pc_11434, label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %dec_label_pc_11400
  %v2_11408 = icmp ugt i32 %v0_11408, 36
  store i1 %v2_11408, i1* %cpsr_c.global-to-local, align 1
  %v7_11408 = icmp eq i32 %v0_11408, 37
  store i1 %v7_11408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11408, label %dec_label_pc_11434, label %dec_label_pc_11410

dec_label_pc_11410:                               ; preds = %dec_label_pc_11408
  %v1_11410 = add i32 %v0_11410, -1
  store i32 %v1_11410, i32* %r0.global-to-local, align 4
  %v2_11410 = icmp ne i32 %v0_11410, 0
  store i1 %v2_11410, i1* %cpsr_c.global-to-local, align 1
  %v7_11410 = icmp eq i32 %v0_11410, 1
  store i1 %v7_11410, i1* %cpsr_z.global-to-local, align 1
  %v2_11414 = add i32 %v1_11410, %v0_11158
  store i32 %v2_11414, i32* %r3.global-to-local, align 4
  br i1 %v7_11410, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11410
  %v1_1141c = add i32 %v2_11414, 28
  %v2_1141c = inttoptr i32 %v1_1141c to i8*
  %v3_1141c = load i8, i8* %v2_1141c, align 1
  %v4_1141c = zext i8 %v3_1141c to i32
  store i32 %v4_1141c, i32* %r3.global-to-local, align 4
  %v2_11420 = icmp ugt i8 %v3_1141c, 61
  store i1 %v2_11420, i1* %cpsr_c.global-to-local, align 1
  %v7_11420 = icmp eq i8 %v3_1141c, 62
  store i1 %v7_11420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11420, label %dec_label_pc_11434, label %bb1915

bb1915:                                           ; preds = %dec_label_pc_1141c
  %v3_11424 = icmp ugt i8 %v3_1141c, 57
  store i1 %v3_11424, i1* %cpsr_c.global-to-local, align 1
  %v8_11424 = icmp eq i8 %v3_1141c, 58
  store i1 %v8_11424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11424, label %dec_label_pc_11434, label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %bb1914, %bb1915
  %v0_11410 = phi i32 [ %v1_11410, %bb1915 ], [ %v1_113dc, %bb1914 ]
  %v0_11408 = phi i32 [ %v4_1141c, %bb1915 ], [ %v4_113ec, %bb1914 ]
  %v2_1142c = icmp ugt i32 %v0_11408, 35
  store i1 %v2_1142c, i1* %cpsr_c.global-to-local, align 1
  %v7_1142c = icmp eq i32 %v0_11408, 36
  store i1 %v7_1142c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1142c, label %dec_label_pc_11434, label %dec_label_pc_11400

dec_label_pc_11434:                               ; preds = %dec_label_pc_1141c, %dec_label_pc_1142c, %bb1915, %dec_label_pc_11408, %dec_label_pc_11400, %dec_label_pc_113e8, %bb1914
  %v0_11434 = phi i32 [ %v1_113dc, %dec_label_pc_113e8 ], [ %v1_113dc, %bb1914 ], [ %v1_11410, %dec_label_pc_1141c ], [ %v0_11410, %dec_label_pc_1142c ], [ %v1_11410, %bb1915 ], [ %v0_11410, %dec_label_pc_11408 ], [ %v0_11410, %dec_label_pc_11400 ]
  %v1_11434 = add i32 %v0_11434, 1
  store i32 %v1_11434, i32* @r7, align 4
  %v2_11438 = icmp eq i32 %v1_11434, -1
  store i1 %v2_11438, i1* %cpsr_c.global-to-local, align 1
  %v7_11438 = icmp eq i32 %v0_11434, -2
  store i1 %v7_11438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11438, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_11434
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11440 = icmp eq i32 %v1_11434, 0
  store i1 %v2_11440, i1* %cpsr_z.global-to-local, align 1
  %tmp1916 = icmp slt i32 %v1_11434, 1
  br i1 %tmp1916, label %dec_label_pc_11260, label %dec_label_pc_11448

dec_label_pc_11448:                               ; preds = %dec_label_pc_11440
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1144c = call i32 @function_11d4c(i32 5)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_1145c = call i32 @function_11c68(i32 5, i32* %v2_11054)
  store i32 %v3_1145c, i32* %r0.global-to-local, align 4
  %v3_11460 = load i8, i8* %stack_var_-56, align 1
  %v4_11460 = sext i8 %v3_11460 to i32
  store i32 %v4_11460, i32* %r2.global-to-local, align 4
  store i32 %v3_1145c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1146c = load i32, i32* @r6, align 4
  %v1_1146c = add i32 %v0_1146c, 4
  %v2_1146c = inttoptr i32 %v1_1146c to i32*
  %v3_1146c = load i32, i32* %v2_1146c, align 4
  store i32 %v3_1146c, i32* %r0.global-to-local, align 4
  %v4_11470 = inttoptr i32 %v3_1145c to i32*
  %v5_11470 = call i32 @function_13470(i32 %v3_1146c, i32* %v4_11470, i32 %v4_11460, i32 16384)
  store i32 %v5_11470, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11480 = load i32, i32* @r6, align 4
  %v1_11480 = add i32 %v0_11480, 4
  %v2_11480 = inttoptr i32 %v1_11480 to i32*
  %v3_11480 = load i32, i32* %v2_11480, align 4
  store i32 %v3_11480, i32* %r0.global-to-local, align 4
  %v5_11484 = call i32 @function_13470(i32 %v3_11480, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1148c = call i32 @function_11c94(i32 5)
  store i32 %v1_1148c, i32* %r0.global-to-local, align 4
  %v0_11490 = load i32, i32* @r6, align 4
  %v1_11490 = add i32 %v0_11490, 24
  %v2_11490 = inttoptr i32 %v1_11490 to i32*
  %v3_11490 = load i32, i32* %v2_11490, align 4
  store i32 %v3_11490, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_11498 = add i32 %v0_11490, 12
  %v3_11498 = inttoptr i32 %v2_11498 to i32*
  store i32 6, i32* %v3_11498, align 4
  br label %dec_label_pc_11774

dec_label_pc_114a0:                               ; preds = %dec_label_pc_11158
  %v1_114a0 = add i32 %v0_11158, 24
  %v2_114a0 = inttoptr i32 %v1_114a0 to i32*
  %v3_114a0 = load i32, i32* %v2_114a0, align 4
  store i32 %v3_114a0, i32* %ip.global-to-local, align 4
  %v1_114a4 = add i32 %v3_114a0, -1
  store i32 %v1_114a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114a8 = icmp eq i32 %v1_114a4, 0
  store i1 %v2_114a8, i1* %cpsr_z.global-to-local, align 1
  %tmp1917 = icmp slt i32 %v1_114a4, 1
  br i1 %tmp1917, label %dec_label_pc_110dc.backedge.thread, label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %dec_label_pc_114a0
  %v2_114b0 = add i32 %v1_114a4, %v0_11158
  store i32 %v2_114b0, i32* %r3.global-to-local, align 4
  %v1_114b4 = add i32 %v2_114b0, 28
  %v2_114b4 = inttoptr i32 %v1_114b4 to i8*
  %v3_114b4 = load i8, i8* %v2_114b4, align 1
  %v4_114b4 = zext i8 %v3_114b4 to i32
  store i32 %v4_114b4, i32* %r3.global-to-local, align 4
  %v2_114b8 = icmp ugt i8 %v3_114b4, 57
  store i1 %v2_114b8, i1* %cpsr_c.global-to-local, align 1
  %v7_114b8 = icmp eq i8 %v3_114b4, 58
  store i1 %v7_114b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114b8, label %dec_label_pc_114fc, label %bb1918

bb1918:                                           ; preds = %dec_label_pc_114b0
  %v3_114bc = icmp ugt i8 %v3_114b4, 61
  store i1 %v3_114bc, i1* %cpsr_c.global-to-local, align 1
  %v8_114bc = icmp eq i8 %v3_114b4, 62
  store i1 %v8_114bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114bc, label %dec_label_pc_114fc, label %dec_label_pc_114f4

dec_label_pc_114c8:                               ; preds = %dec_label_pc_114f4
  %v2_114c8 = icmp ugt i32 %v0_114d0, 34
  store i1 %v2_114c8, i1* %cpsr_c.global-to-local, align 1
  %v7_114c8 = icmp eq i32 %v0_114d0, 35
  store i1 %v7_114c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114c8, label %dec_label_pc_114fc, label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114c8
  %v2_114d0 = icmp ugt i32 %v0_114d0, 36
  store i1 %v2_114d0, i1* %cpsr_c.global-to-local, align 1
  %v7_114d0 = icmp eq i32 %v0_114d0, 37
  store i1 %v7_114d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114d0, label %dec_label_pc_114fc, label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %dec_label_pc_114d0
  %v1_114d8 = add i32 %v0_114d8, -1
  store i32 %v1_114d8, i32* %r0.global-to-local, align 4
  %v2_114d8 = icmp ne i32 %v0_114d8, 0
  store i1 %v2_114d8, i1* %cpsr_c.global-to-local, align 1
  %v7_114d8 = icmp eq i32 %v0_114d8, 1
  store i1 %v7_114d8, i1* %cpsr_z.global-to-local, align 1
  %v2_114dc = add i32 %v1_114d8, %v0_11158
  store i32 %v2_114dc, i32* %r3.global-to-local, align 4
  br i1 %v7_114d8, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114d8
  %v1_114e4 = add i32 %v2_114dc, 28
  %v2_114e4 = inttoptr i32 %v1_114e4 to i8*
  %v3_114e4 = load i8, i8* %v2_114e4, align 1
  %v4_114e4 = zext i8 %v3_114e4 to i32
  store i32 %v4_114e4, i32* %r3.global-to-local, align 4
  %v2_114e8 = icmp ugt i8 %v3_114e4, 61
  store i1 %v2_114e8, i1* %cpsr_c.global-to-local, align 1
  %v7_114e8 = icmp eq i8 %v3_114e4, 62
  store i1 %v7_114e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e8, label %dec_label_pc_114fc, label %bb1919

bb1919:                                           ; preds = %dec_label_pc_114e4
  %v3_114ec = icmp ugt i8 %v3_114e4, 57
  store i1 %v3_114ec, i1* %cpsr_c.global-to-local, align 1
  %v8_114ec = icmp eq i8 %v3_114e4, 58
  store i1 %v8_114ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114ec, label %dec_label_pc_114fc, label %dec_label_pc_114f4

dec_label_pc_114f4:                               ; preds = %bb1918, %bb1919
  %v0_114d8 = phi i32 [ %v1_114d8, %bb1919 ], [ %v1_114a4, %bb1918 ]
  %v0_114d0 = phi i32 [ %v4_114e4, %bb1919 ], [ %v4_114b4, %bb1918 ]
  %v2_114f4 = icmp ugt i32 %v0_114d0, 35
  store i1 %v2_114f4, i1* %cpsr_c.global-to-local, align 1
  %v7_114f4 = icmp eq i32 %v0_114d0, 36
  store i1 %v7_114f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114f4, label %dec_label_pc_114fc, label %dec_label_pc_114c8

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114e4, %dec_label_pc_114f4, %bb1919, %dec_label_pc_114d0, %dec_label_pc_114c8, %dec_label_pc_114b0, %bb1918
  %v0_114fc = phi i32 [ %v1_114a4, %dec_label_pc_114b0 ], [ %v1_114a4, %bb1918 ], [ %v1_114d8, %dec_label_pc_114e4 ], [ %v0_114d8, %dec_label_pc_114f4 ], [ %v1_114d8, %bb1919 ], [ %v0_114d8, %dec_label_pc_114d0 ], [ %v0_114d8, %dec_label_pc_114c8 ]
  %v1_114fc = add i32 %v0_114fc, 1
  store i32 %v1_114fc, i32* @r7, align 4
  %v2_11500 = icmp eq i32 %v1_114fc, -1
  store i1 %v2_11500, i1* %cpsr_c.global-to-local, align 1
  %v7_11500 = icmp eq i32 %v0_114fc, -2
  store i1 %v7_11500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11500, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_114fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11508 = icmp eq i32 %v1_114fc, 0
  store i1 %v2_11508, i1* %cpsr_z.global-to-local, align 1
  %tmp1920 = icmp slt i32 %v1_114fc, 1
  br i1 %tmp1920, label %dec_label_pc_11260, label %dec_label_pc_11510

dec_label_pc_11510:                               ; preds = %dec_label_pc_11508
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11514 = call i32 @function_11d4c(i32 6)
  store i32 %v2_1151c, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_11524 = call i32 @function_11c68(i32 6, i32* nonnull %stack_var_-48)
  store i32 %v3_11524, i32* %r0.global-to-local, align 4
  %v3_11528 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_11528, i32* %r2.global-to-local, align 4
  store i32 %v3_11524, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11534 = load i32, i32* @r6, align 4
  %v1_11534 = add i32 %v0_11534, 4
  %v2_11534 = inttoptr i32 %v1_11534 to i32*
  %v3_11534 = load i32, i32* %v2_11534, align 4
  store i32 %v3_11534, i32* %r0.global-to-local, align 4
  %v4_11538 = inttoptr i32 %v3_11524 to i32*
  %v5_11538 = call i32 @function_13470(i32 %v3_11534, i32* %v4_11538, i32 %v3_11528, i32 16384)
  store i32 %v5_11538, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11548 = load i32, i32* @r6, align 4
  %v1_11548 = add i32 %v0_11548, 4
  %v2_11548 = inttoptr i32 %v1_11548 to i32*
  %v3_11548 = load i32, i32* %v2_11548, align 4
  store i32 %v3_11548, i32* %r0.global-to-local, align 4
  %v5_1154c = call i32 @function_13470(i32 %v3_11548, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11554 = call i32 @function_11c94(i32 6)
  store i32 %v1_11554, i32* %r0.global-to-local, align 4
  %v0_11558 = load i32, i32* @r6, align 4
  %v1_11558 = add i32 %v0_11558, 24
  %v2_11558 = inttoptr i32 %v1_11558 to i32*
  %v3_11558 = load i32, i32* %v2_11558, align 4
  store i32 %v3_11558, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_11560 = add i32 %v0_11558, 12
  %v3_11560 = inttoptr i32 %v2_11560 to i32*
  store i32 7, i32* %v3_11560, align 4
  br label %dec_label_pc_11774

dec_label_pc_11568:                               ; preds = %dec_label_pc_11158
  %v1_11568 = add i32 %v0_11158, 24
  %v2_11568 = inttoptr i32 %v1_11568 to i32*
  %v3_11568 = load i32, i32* %v2_11568, align 4
  store i32 %v3_11568, i32* %ip.global-to-local, align 4
  %v1_1156c = add i32 %v3_11568, -1
  store i32 %v1_1156c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11570 = icmp eq i32 %v1_1156c, 0
  store i1 %v2_11570, i1* %cpsr_z.global-to-local, align 1
  %tmp1921 = icmp slt i32 %v1_1156c, 1
  br i1 %tmp1921, label %dec_label_pc_110dc.backedge.thread, label %dec_label_pc_11578

dec_label_pc_11578:                               ; preds = %dec_label_pc_11568
  %v2_11578 = add i32 %v1_1156c, %v0_11158
  store i32 %v2_11578, i32* %r3.global-to-local, align 4
  %v1_1157c = add i32 %v2_11578, 28
  %v2_1157c = inttoptr i32 %v1_1157c to i8*
  %v3_1157c = load i8, i8* %v2_1157c, align 1
  %v4_1157c = zext i8 %v3_1157c to i32
  store i32 %v4_1157c, i32* %r3.global-to-local, align 4
  %v2_11580 = icmp ugt i8 %v3_1157c, 61
  store i1 %v2_11580, i1* %cpsr_c.global-to-local, align 1
  %v7_11580 = icmp eq i8 %v3_1157c, 62
  store i1 %v7_11580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11580, label %dec_label_pc_115c4, label %bb1922

bb1922:                                           ; preds = %dec_label_pc_11578
  %v3_11584 = icmp ugt i8 %v3_1157c, 57
  store i1 %v3_11584, i1* %cpsr_c.global-to-local, align 1
  %v8_11584 = icmp eq i8 %v3_1157c, 58
  store i1 %v8_11584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11584, label %dec_label_pc_115c4, label %dec_label_pc_115bc

dec_label_pc_11590:                               ; preds = %dec_label_pc_115bc
  %v2_11590 = icmp ugt i32 %v0_11598, 34
  store i1 %v2_11590, i1* %cpsr_c.global-to-local, align 1
  %v7_11590 = icmp eq i32 %v0_11598, 35
  store i1 %v7_11590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11590, label %dec_label_pc_115c4, label %dec_label_pc_11598

dec_label_pc_11598:                               ; preds = %dec_label_pc_11590
  %v2_11598 = icmp ugt i32 %v0_11598, 36
  store i1 %v2_11598, i1* %cpsr_c.global-to-local, align 1
  %v7_11598 = icmp eq i32 %v0_11598, 37
  store i1 %v7_11598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11598, label %dec_label_pc_115c4, label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11598
  %v1_115a0 = add i32 %v0_115a0, -1
  store i32 %v1_115a0, i32* %r0.global-to-local, align 4
  %v2_115a0 = icmp ne i32 %v0_115a0, 0
  store i1 %v2_115a0, i1* %cpsr_c.global-to-local, align 1
  %v7_115a0 = icmp eq i32 %v0_115a0, 1
  store i1 %v7_115a0, i1* %cpsr_z.global-to-local, align 1
  %v2_115a4 = add i32 %v1_115a0, %v0_11158
  store i32 %v2_115a4, i32* %r3.global-to-local, align 4
  br i1 %v7_115a0, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_115ac

dec_label_pc_115ac:                               ; preds = %dec_label_pc_115a0
  %v1_115ac = add i32 %v2_115a4, 28
  %v2_115ac = inttoptr i32 %v1_115ac to i8*
  %v3_115ac = load i8, i8* %v2_115ac, align 1
  %v4_115ac = zext i8 %v3_115ac to i32
  store i32 %v4_115ac, i32* %r3.global-to-local, align 4
  %v2_115b0 = icmp ugt i8 %v3_115ac, 61
  store i1 %v2_115b0, i1* %cpsr_c.global-to-local, align 1
  %v7_115b0 = icmp eq i8 %v3_115ac, 62
  store i1 %v7_115b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115b0, label %dec_label_pc_115c4, label %bb1923

bb1923:                                           ; preds = %dec_label_pc_115ac
  %v3_115b4 = icmp ugt i8 %v3_115ac, 57
  store i1 %v3_115b4, i1* %cpsr_c.global-to-local, align 1
  %v8_115b4 = icmp eq i8 %v3_115ac, 58
  store i1 %v8_115b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_115b4, label %dec_label_pc_115c4, label %dec_label_pc_115bc

dec_label_pc_115bc:                               ; preds = %bb1922, %bb1923
  %v0_115a0 = phi i32 [ %v1_115a0, %bb1923 ], [ %v1_1156c, %bb1922 ]
  %v0_11598 = phi i32 [ %v4_115ac, %bb1923 ], [ %v4_1157c, %bb1922 ]
  %v2_115bc = icmp ugt i32 %v0_11598, 35
  store i1 %v2_115bc, i1* %cpsr_c.global-to-local, align 1
  %v7_115bc = icmp eq i32 %v0_11598, 36
  store i1 %v7_115bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115bc, label %dec_label_pc_115c4, label %dec_label_pc_11590

dec_label_pc_115c4:                               ; preds = %dec_label_pc_115ac, %dec_label_pc_115bc, %bb1923, %dec_label_pc_11598, %dec_label_pc_11590, %dec_label_pc_11578, %bb1922
  %v0_115c4 = phi i32 [ %v1_1156c, %dec_label_pc_11578 ], [ %v1_1156c, %bb1922 ], [ %v1_115a0, %dec_label_pc_115ac ], [ %v0_115a0, %dec_label_pc_115bc ], [ %v1_115a0, %bb1923 ], [ %v0_115a0, %dec_label_pc_11598 ], [ %v0_115a0, %dec_label_pc_11590 ]
  %v1_115c4 = add i32 %v0_115c4, 1
  store i32 %v1_115c4, i32* @r7, align 4
  %v2_115c8 = icmp eq i32 %v1_115c4, -1
  store i1 %v2_115c8, i1* %cpsr_c.global-to-local, align 1
  %v7_115c8 = icmp eq i32 %v0_115c4, -2
  store i1 %v7_115c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115c8, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_115d0

dec_label_pc_115d0:                               ; preds = %dec_label_pc_115c4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115d0 = icmp eq i32 %v1_115c4, 0
  store i1 %v2_115d0, i1* %cpsr_z.global-to-local, align 1
  %tmp1924 = icmp slt i32 %v1_115c4, 1
  br i1 %tmp1924, label %dec_label_pc_11260, label %dec_label_pc_115d8

dec_label_pc_115d8:                               ; preds = %dec_label_pc_115d0
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_115dc = call i32 @function_11d4c(i32 7)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_115ec = call i32 @function_11c68(i32 7, i32* %v2_11054)
  store i32 %v3_115ec, i32* %r0.global-to-local, align 4
  %v3_115f0 = load i8, i8* %stack_var_-56, align 1
  %v4_115f0 = sext i8 %v3_115f0 to i32
  store i32 %v4_115f0, i32* %r2.global-to-local, align 4
  store i32 %v3_115ec, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_115fc = load i32, i32* @r6, align 4
  %v1_115fc = add i32 %v0_115fc, 4
  %v2_115fc = inttoptr i32 %v1_115fc to i32*
  %v3_115fc = load i32, i32* %v2_115fc, align 4
  store i32 %v3_115fc, i32* %r0.global-to-local, align 4
  %v4_11600 = inttoptr i32 %v3_115ec to i32*
  %v5_11600 = call i32 @function_13470(i32 %v3_115fc, i32* %v4_11600, i32 %v4_115f0, i32 16384)
  store i32 %v5_11600, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11610 = load i32, i32* @r6, align 4
  %v1_11610 = add i32 %v0_11610, 4
  %v2_11610 = inttoptr i32 %v1_11610 to i32*
  %v3_11610 = load i32, i32* %v2_11610, align 4
  store i32 %v3_11610, i32* %r0.global-to-local, align 4
  %v5_11614 = call i32 @function_13470(i32 %v3_11610, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_1161c = call i32 @function_11c94(i32 7)
  store i32 %v1_1161c, i32* %r0.global-to-local, align 4
  %v0_11620 = load i32, i32* @r6, align 4
  %v1_11620 = add i32 %v0_11620, 24
  %v2_11620 = inttoptr i32 %v1_11620 to i32*
  %v3_11620 = load i32, i32* %v2_11620, align 4
  store i32 %v3_11620, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_11628 = add i32 %v0_11620, 12
  %v3_11628 = inttoptr i32 %v2_11628 to i32*
  store i32 9, i32* %v3_11628, align 4
  br label %dec_label_pc_11774

dec_label_pc_11630:                               ; preds = %dec_label_pc_11158
  %v1_11630 = add i32 %v0_11158, 24
  %v2_11630 = inttoptr i32 %v1_11630 to i32*
  %v3_11630 = load i32, i32* %v2_11630, align 4
  store i32 %v3_11630, i32* %ip.global-to-local, align 4
  %v1_11634 = add i32 %v3_11630, -1
  store i32 %v1_11634, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11638 = icmp eq i32 %v1_11634, 0
  store i1 %v2_11638, i1* %cpsr_z.global-to-local, align 1
  %tmp1925 = icmp slt i32 %v1_11634, 1
  br i1 %tmp1925, label %dec_label_pc_110dc.backedge.thread, label %dec_label_pc_11640

dec_label_pc_11640:                               ; preds = %dec_label_pc_11630
  %v2_11640 = add i32 %v1_11634, %v0_11158
  store i32 %v2_11640, i32* %r3.global-to-local, align 4
  %v1_11644 = add i32 %v2_11640, 28
  %v2_11644 = inttoptr i32 %v1_11644 to i8*
  %v3_11644 = load i8, i8* %v2_11644, align 1
  %v4_11644 = zext i8 %v3_11644 to i32
  store i32 %v4_11644, i32* %r3.global-to-local, align 4
  %v2_11648 = icmp ugt i8 %v3_11644, 57
  store i1 %v2_11648, i1* %cpsr_c.global-to-local, align 1
  %v7_11648 = icmp eq i8 %v3_11644, 58
  store i1 %v7_11648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11648, label %dec_label_pc_1168c, label %bb1926

bb1926:                                           ; preds = %dec_label_pc_11640
  %v3_1164c = icmp ugt i8 %v3_11644, 61
  store i1 %v3_1164c, i1* %cpsr_c.global-to-local, align 1
  %v8_1164c = icmp eq i8 %v3_11644, 62
  store i1 %v8_1164c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1164c, label %dec_label_pc_1168c, label %dec_label_pc_11684

dec_label_pc_11658:                               ; preds = %dec_label_pc_11684
  %v2_11658 = icmp ugt i32 %v0_11660, 34
  store i1 %v2_11658, i1* %cpsr_c.global-to-local, align 1
  %v7_11658 = icmp eq i32 %v0_11660, 35
  store i1 %v7_11658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11658, label %dec_label_pc_1168c, label %dec_label_pc_11660

dec_label_pc_11660:                               ; preds = %dec_label_pc_11658
  %v2_11660 = icmp ugt i32 %v0_11660, 36
  store i1 %v2_11660, i1* %cpsr_c.global-to-local, align 1
  %v7_11660 = icmp eq i32 %v0_11660, 37
  store i1 %v7_11660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11660, label %dec_label_pc_1168c, label %dec_label_pc_11668

dec_label_pc_11668:                               ; preds = %dec_label_pc_11660
  %v1_11668 = add i32 %v0_11668, -1
  store i32 %v1_11668, i32* %r0.global-to-local, align 4
  %v2_11668 = icmp ne i32 %v0_11668, 0
  store i1 %v2_11668, i1* %cpsr_c.global-to-local, align 1
  %v7_11668 = icmp eq i32 %v0_11668, 1
  store i1 %v7_11668, i1* %cpsr_z.global-to-local, align 1
  %v2_1166c = add i32 %v1_11668, %v0_11158
  store i32 %v2_1166c, i32* %r3.global-to-local, align 4
  br i1 %v7_11668, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %dec_label_pc_11668
  %v1_11674 = add i32 %v2_1166c, 28
  %v2_11674 = inttoptr i32 %v1_11674 to i8*
  %v3_11674 = load i8, i8* %v2_11674, align 1
  %v4_11674 = zext i8 %v3_11674 to i32
  store i32 %v4_11674, i32* %r3.global-to-local, align 4
  %v2_11678 = icmp ugt i8 %v3_11674, 61
  store i1 %v2_11678, i1* %cpsr_c.global-to-local, align 1
  %v7_11678 = icmp eq i8 %v3_11674, 62
  store i1 %v7_11678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11678, label %dec_label_pc_1168c, label %bb1927

bb1927:                                           ; preds = %dec_label_pc_11674
  %v3_1167c = icmp ugt i8 %v3_11674, 57
  store i1 %v3_1167c, i1* %cpsr_c.global-to-local, align 1
  %v8_1167c = icmp eq i8 %v3_11674, 58
  store i1 %v8_1167c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1167c, label %dec_label_pc_1168c, label %dec_label_pc_11684

dec_label_pc_11684:                               ; preds = %bb1926, %bb1927
  %v0_11668 = phi i32 [ %v1_11668, %bb1927 ], [ %v1_11634, %bb1926 ]
  %v0_11660 = phi i32 [ %v4_11674, %bb1927 ], [ %v4_11644, %bb1926 ]
  %v2_11684 = icmp ugt i32 %v0_11660, 35
  store i1 %v2_11684, i1* %cpsr_c.global-to-local, align 1
  %v7_11684 = icmp eq i32 %v0_11660, 36
  store i1 %v7_11684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11684, label %dec_label_pc_1168c, label %dec_label_pc_11658

dec_label_pc_1168c:                               ; preds = %dec_label_pc_11674, %dec_label_pc_11684, %bb1927, %dec_label_pc_11660, %dec_label_pc_11658, %dec_label_pc_11640, %bb1926
  %v0_1168c = phi i32 [ %v1_11634, %dec_label_pc_11640 ], [ %v1_11634, %bb1926 ], [ %v1_11668, %dec_label_pc_11674 ], [ %v0_11668, %dec_label_pc_11684 ], [ %v1_11668, %bb1927 ], [ %v0_11668, %dec_label_pc_11660 ], [ %v0_11668, %dec_label_pc_11658 ]
  %v1_1168c = add i32 %v0_1168c, 1
  store i32 %v1_1168c, i32* @r7, align 4
  %v2_11690 = icmp eq i32 %v1_1168c, -1
  store i1 %v2_11690, i1* %cpsr_c.global-to-local, align 1
  %v7_11690 = icmp eq i32 %v0_1168c, -2
  store i1 %v7_11690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11690, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_11698

dec_label_pc_11698:                               ; preds = %dec_label_pc_1168c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11698 = icmp eq i32 %v1_1168c, 0
  store i1 %v2_11698, i1* %cpsr_z.global-to-local, align 1
  %tmp1928 = icmp slt i32 %v1_1168c, 1
  br i1 %tmp1928, label %dec_label_pc_11260, label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11698
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_116a4 = call i32 @function_11d4c(i32 4)
  store i32 %v2_1151c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_116b4 = call i32 @function_11c68(i32 4, i32* nonnull %stack_var_-48)
  store i32 %v3_116b4, i32* %r0.global-to-local, align 4
  %v3_116b8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_116b8, i32* %r2.global-to-local, align 4
  store i32 %v3_116b4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116c4 = load i32, i32* @r6, align 4
  %v1_116c4 = add i32 %v0_116c4, 4
  %v2_116c4 = inttoptr i32 %v1_116c4 to i32*
  %v3_116c4 = load i32, i32* %v2_116c4, align 4
  store i32 %v3_116c4, i32* %r0.global-to-local, align 4
  %v4_116c8 = inttoptr i32 %v3_116b4 to i32*
  %v5_116c8 = call i32 @function_13470(i32 %v3_116c4, i32* %v4_116c8, i32 %v3_116b8, i32 16384)
  store i32 %v5_116c8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116d8 = load i32, i32* @r6, align 4
  %v1_116d8 = add i32 %v0_116d8, 4
  %v2_116d8 = inttoptr i32 %v1_116d8 to i32*
  %v3_116d8 = load i32, i32* %v2_116d8, align 4
  store i32 %v3_116d8, i32* %r0.global-to-local, align 4
  %v5_116dc = call i32 @function_13470(i32 %v3_116d8, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_116e4 = call i32 @function_11c94(i32 4)
  store i32 %v1_116e4, i32* %r0.global-to-local, align 4
  %v0_116e8 = load i32, i32* @r6, align 4
  %v1_116e8 = add i32 %v0_116e8, 24
  %v2_116e8 = inttoptr i32 %v1_116e8 to i32*
  %v3_116e8 = load i32, i32* %v2_116e8, align 4
  store i32 %v3_116e8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_116f0 = add i32 %v0_116e8, 12
  %v3_116f0 = inttoptr i32 %v2_116f0 to i32*
  store i32 8, i32* %v3_116f0, align 4
  br label %dec_label_pc_11774

dec_label_pc_116f8:                               ; preds = %dec_label_pc_11158
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_116fc = call i32 @function_11d4c(i32 10)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_1170c = call i32 @function_11c68(i32 10, i32* %v2_11054)
  %v3_11710 = load i8, i8* %stack_var_-56, align 1
  %v4_11710 = sext i8 %v3_11710 to i32
  store i32 %v3_1170c, i32* %r2.global-to-local, align 4
  %v1_11718 = add nsw i32 %v4_11710, -1
  store i32 %v1_11718, i32* %r3.global-to-local, align 4
  %v0_1171c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1171c, i32* %r0.global-to-local, align 4
  %v0_11720 = load i32, i32* @r6, align 4
  %v1_11720 = add i32 %v0_11720, 24
  %v2_11720 = inttoptr i32 %v1_11720 to i32*
  %v3_11720 = load i32, i32* %v2_11720, align 4
  store i32 %v3_11720, i32* %r1.global-to-local, align 4
  %v4_11724 = call i32 @function_123dc(i32 %v0_1171c, i32 %v3_11720, i32 %v3_1170c, i32 %v1_11718)
  %v2_11728 = icmp eq i32 %v4_11724, -1
  store i1 %v2_11728, i1* %cpsr_c.global-to-local, align 1
  %v7_11728 = icmp eq i32 %v4_11724, -1
  store i1 %v7_11728, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_11a10 = call i32 @function_11c94(i32 10)
  br i1 %v7_11728, label %dec_label_pc_11a0c, label %dec_label_pc_11730

dec_label_pc_11730:                               ; preds = %dec_label_pc_116f8
  store i32 %v1_11a10, i32* %r0.global-to-local, align 4
  %v0_11738 = load i32, i32* @r6, align 4
  %v1_11738 = add i32 %v0_11738, 4
  %v2_11738 = inttoptr i32 %v1_11738 to i32*
  %v3_11738 = load i32, i32* %v2_11738, align 4
  store i32 %v3_11738, i32* %r0.global-to-local, align 4
  %v1_1173c = call i32 @function_12c1c(i32 %v3_11738)
  store i32 %v1_1173c, i32* %r0.global-to-local, align 4
  %v0_11740 = load i32, i32* @r6, align 4
  %v1_11740 = add i32 %v0_11740, 284
  %v2_11740 = inttoptr i32 %v1_11740 to i8*
  %v3_11740 = load i8, i8* %v2_11740, align 1
  %v4_11740 = zext i8 %v3_11740 to i32
  %v1_11744 = add nuw nsw i32 %v4_11740, 1
  %v1_11748 = urem i32 %v1_11744, 256
  store i32 %v1_11748, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_11750 = icmp ugt i32 %v1_11748, 9
  store i1 %v2_11750, i1* %cpsr_c.global-to-local, align 1
  %v7_11750 = icmp eq i32 %v1_11748, 10
  store i1 %v7_11750, i1* %cpsr_z.global-to-local, align 1
  %v2_11754 = add i32 %v0_11740, 4
  %v3_11754 = inttoptr i32 %v2_11754 to i32*
  store i32 -1, i32* %v3_11754, align 4
  %v0_11758 = load i32, i32* %r3.global-to-local, align 4
  %v1_11758 = trunc i32 %v0_11758 to i8
  %v2_11758 = load i32, i32* @r6, align 4
  %v3_11758 = add i32 %v2_11758, 284
  %v4_11758 = inttoptr i32 %v3_11758 to i8*
  store i8 %v1_11758, i8* %v4_11758, align 1
  %v0_1175c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1175c, label %dec_label_pc_11760, label %dec_label_pc_119a0

dec_label_pc_11760:                               ; preds = %dec_label_pc_11730
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11764 = load i32, i32* @r6, align 4
  %v1_11764 = add i32 %v0_11764, 24
  %v2_11764 = inttoptr i32 %v1_11764 to i32*
  %v3_11764 = load i32, i32* %v2_11764, align 4
  store i32 %v3_11764, i32* %ip.global-to-local, align 4
  %v2_11768 = add i32 %v0_11764, 12
  %v3_11768 = inttoptr i32 %v2_11768 to i32*
  store i32 0, i32* %v3_11768, align 4
  %v0_1176c = load i32, i32* %r3.global-to-local, align 4
  %v1_1176c = trunc i32 %v0_1176c to i8
  %v2_1176c = load i32, i32* @r6, align 4
  %v3_1176c = add i32 %v2_1176c, 284
  %v4_1176c = inttoptr i32 %v3_1176c to i8*
  store i8 %v1_1176c, i8* %v4_1176c, align 1
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_11774

dec_label_pc_11774:                               ; preds = %.thread1149, %dec_label_pc_11808, %dec_label_pc_11aa8, %dec_label_pc_119a0, %dec_label_pc_116a0, %dec_label_pc_115d8, %dec_label_pc_11510, %dec_label_pc_11448, %dec_label_pc_1139c, %dec_label_pc_112f0, %dec_label_pc_11268, %dec_label_pc_11760
  %v0_11774 = load i32, i32* %ip.global-to-local, align 4
  %v1_11774 = load i32, i32* @r7, align 4
  %v2_11774 = sub i32 %v0_11774, %v1_11774
  %v3_11774 = icmp uge i32 %v0_11774, %v1_11774
  store i1 %v3_11774, i1* %cpsr_c.global-to-local, align 1
  %v4_11774 = xor i32 %v1_11774, %v0_11774
  %v5_11774 = xor i32 %v2_11774, %v0_11774
  %v6_11774 = and i32 %v5_11774, %v4_11774
  %v7_11774 = icmp slt i32 %v6_11774, 0
  %v8_11774 = icmp slt i32 %v2_11774, 0
  %v9_11774 = icmp eq i32 %v0_11774, %v1_11774
  store i1 %v9_11774, i1* %cpsr_z.global-to-local, align 1
  %v2_11778 = xor i1 %v8_11774, %v7_11774
  %v0_11774.v1_11774 = select i1 %v2_11778, i32 %v0_11774, i32 %v1_11774
  store i32 %v0_11774.v1_11774, i32* %r1.global-to-local, align 4
  %v2_11780 = sub i32 %v0_11774, %v0_11774.v1_11774
  store i32 %v2_11780, i32* @r2, align 4
  %v1_11784 = load i32, i32* @r6, align 4
  %v2_11784 = add i32 %v1_11784, 24
  %v3_11784 = inttoptr i32 %v2_11784 to i32*
  store i32 %v2_11780, i32* %v3_11784, align 4
  %v0_11788 = load i32, i32* %r8.global-to-local, align 4
  %v1_11788 = load i32, i32* %r1.global-to-local, align 4
  %v2_11788 = add i32 %v1_11788, %v0_11788
  store i32 %v2_11788, i32* @r1, align 4
  store i32 %v0_11788, i32* @r0, align 4
  %v3_11790 = call i32 @function_13240(i32 %v0_11788, i32 %v2_11788, i32 %v2_11780)
  store i32 %v3_11790, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11158

dec_label_pc_11798:                               ; preds = %dec_label_pc_11158
  %v1_11798 = add i32 %v0_11158, 24
  %v2_11798 = inttoptr i32 %v1_11798 to i32*
  %v3_11798 = load i32, i32* %v2_11798, align 4
  store i32 %v3_11798, i32* %ip.global-to-local, align 4
  %v1_1179c = add i32 %v3_11798, -1
  store i32 %v1_1179c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117a0 = icmp eq i32 %v1_1179c, 0
  store i1 %v2_117a0, i1* %cpsr_z.global-to-local, align 1
  %tmp1931 = icmp slt i32 %v1_1179c, 1
  br i1 %tmp1931, label %dec_label_pc_110dc.backedge.thread, label %dec_label_pc_117a8

dec_label_pc_117a8:                               ; preds = %dec_label_pc_11798
  %v2_117a8 = add i32 %v1_1179c, %v0_11158
  store i32 %v2_117a8, i32* %r3.global-to-local, align 4
  %v1_117ac = add i32 %v2_117a8, 28
  %v2_117ac = inttoptr i32 %v1_117ac to i8*
  %v3_117ac = load i8, i8* %v2_117ac, align 1
  %v4_117ac = zext i8 %v3_117ac to i32
  store i32 %v4_117ac, i32* %r3.global-to-local, align 4
  %v2_117b0 = icmp ugt i8 %v3_117ac, 61
  store i1 %v2_117b0, i1* %cpsr_c.global-to-local, align 1
  %v7_117b0 = icmp eq i8 %v3_117ac, 62
  store i1 %v7_117b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117b0, label %dec_label_pc_117f4, label %bb1932

bb1932:                                           ; preds = %dec_label_pc_117a8
  %v3_117b4 = icmp ugt i8 %v3_117ac, 57
  store i1 %v3_117b4, i1* %cpsr_c.global-to-local, align 1
  %v8_117b4 = icmp eq i8 %v3_117ac, 58
  store i1 %v8_117b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_117b4, label %dec_label_pc_117f4, label %dec_label_pc_117ec

dec_label_pc_117c0:                               ; preds = %dec_label_pc_117ec
  %v2_117c0 = icmp ugt i32 %v0_117c8, 34
  store i1 %v2_117c0, i1* %cpsr_c.global-to-local, align 1
  %v7_117c0 = icmp eq i32 %v0_117c8, 35
  store i1 %v7_117c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117c0, label %dec_label_pc_117f4, label %dec_label_pc_117c8

dec_label_pc_117c8:                               ; preds = %dec_label_pc_117c0
  %v2_117c8 = icmp ugt i32 %v0_117c8, 36
  store i1 %v2_117c8, i1* %cpsr_c.global-to-local, align 1
  %v7_117c8 = icmp eq i32 %v0_117c8, 37
  store i1 %v7_117c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117c8, label %dec_label_pc_117f4, label %dec_label_pc_117d0

dec_label_pc_117d0:                               ; preds = %dec_label_pc_117c8
  %v1_117d0 = add i32 %v0_117d0, -1
  store i32 %v1_117d0, i32* %r0.global-to-local, align 4
  %v2_117d0 = icmp ne i32 %v0_117d0, 0
  store i1 %v2_117d0, i1* %cpsr_c.global-to-local, align 1
  %v7_117d0 = icmp eq i32 %v0_117d0, 1
  store i1 %v7_117d0, i1* %cpsr_z.global-to-local, align 1
  %v2_117d4 = add i32 %v1_117d0, %v0_11158
  store i32 %v2_117d4, i32* %r3.global-to-local, align 4
  br i1 %v7_117d0, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_117dc

dec_label_pc_117dc:                               ; preds = %dec_label_pc_117d0
  %v1_117dc = add i32 %v2_117d4, 28
  %v2_117dc = inttoptr i32 %v1_117dc to i8*
  %v3_117dc = load i8, i8* %v2_117dc, align 1
  %v4_117dc = zext i8 %v3_117dc to i32
  store i32 %v4_117dc, i32* %r3.global-to-local, align 4
  %v2_117e0 = icmp ugt i8 %v3_117dc, 61
  store i1 %v2_117e0, i1* %cpsr_c.global-to-local, align 1
  %v7_117e0 = icmp eq i8 %v3_117dc, 62
  store i1 %v7_117e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117e0, label %dec_label_pc_117f4, label %bb1933

bb1933:                                           ; preds = %dec_label_pc_117dc
  %v3_117e4 = icmp ugt i8 %v3_117dc, 57
  store i1 %v3_117e4, i1* %cpsr_c.global-to-local, align 1
  %v8_117e4 = icmp eq i8 %v3_117dc, 58
  store i1 %v8_117e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_117e4, label %dec_label_pc_117f4, label %dec_label_pc_117ec

dec_label_pc_117ec:                               ; preds = %bb1932, %bb1933
  %v0_117d0 = phi i32 [ %v1_117d0, %bb1933 ], [ %v1_1179c, %bb1932 ]
  %v0_117c8 = phi i32 [ %v4_117dc, %bb1933 ], [ %v4_117ac, %bb1932 ]
  %v2_117ec = icmp ugt i32 %v0_117c8, 35
  store i1 %v2_117ec, i1* %cpsr_c.global-to-local, align 1
  %v7_117ec = icmp eq i32 %v0_117c8, 36
  store i1 %v7_117ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117ec, label %dec_label_pc_117f4, label %dec_label_pc_117c0

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117dc, %dec_label_pc_117ec, %bb1933, %dec_label_pc_117c8, %dec_label_pc_117c0, %dec_label_pc_117a8, %bb1932
  %v0_117f4 = phi i32 [ %v1_1179c, %dec_label_pc_117a8 ], [ %v1_1179c, %bb1932 ], [ %v1_117d0, %dec_label_pc_117dc ], [ %v0_117d0, %dec_label_pc_117ec ], [ %v1_117d0, %bb1933 ], [ %v0_117d0, %dec_label_pc_117c8 ], [ %v0_117d0, %dec_label_pc_117c0 ]
  %v1_117f4 = add i32 %v0_117f4, 1
  store i32 %v1_117f4, i32* @r7, align 4
  %v2_117f8 = icmp eq i32 %v1_117f4, -1
  store i1 %v2_117f8, i1* %cpsr_c.global-to-local, align 1
  %v7_117f8 = icmp eq i32 %v0_117f4, -2
  store i1 %v7_117f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117f8, label %dec_label_pc_110dc.backedge.thread2099, label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %dec_label_pc_117f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11800 = icmp eq i32 %v1_117f4, 0
  store i1 %v2_11800, i1* %cpsr_z.global-to-local, align 1
  %tmp1934 = icmp slt i32 %v1_117f4, 1
  br i1 %tmp1934, label %dec_label_pc_11260, label %dec_label_pc_11808

dec_label_pc_11808:                               ; preds = %dec_label_pc_11800
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1180c = call i32 @function_11d4c(i32 8)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_1181c = call i32 @function_11c68(i32 8, i32* %v2_11054)
  store i32 %v3_1181c, i32* %r0.global-to-local, align 4
  %v3_11820 = load i8, i8* %stack_var_-56, align 1
  %v4_11820 = sext i8 %v3_11820 to i32
  store i32 %v4_11820, i32* %r2.global-to-local, align 4
  store i32 %v3_1181c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1182c = load i32, i32* @r6, align 4
  %v1_1182c = add i32 %v0_1182c, 4
  %v2_1182c = inttoptr i32 %v1_1182c to i32*
  %v3_1182c = load i32, i32* %v2_1182c, align 4
  store i32 %v3_1182c, i32* %r0.global-to-local, align 4
  %v4_11830 = inttoptr i32 %v3_1181c to i32*
  %v5_11830 = call i32 @function_13470(i32 %v3_1182c, i32* %v4_11830, i32 %v4_11820, i32 16384)
  store i32 %v5_11830, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15540.223 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11840 = load i32, i32* @r6, align 4
  %v1_11840 = add i32 %v0_11840, 4
  %v2_11840 = inttoptr i32 %v1_11840 to i32*
  %v3_11840 = load i32, i32* %v2_11840, align 4
  store i32 %v3_11840, i32* %r0.global-to-local, align 4
  %v5_11844 = call i32 @function_13470(i32 %v3_11840, i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1184c = call i32 @function_11c94(i32 8)
  store i32 %v1_1184c, i32* %r0.global-to-local, align 4
  %v0_11850 = load i32, i32* @r6, align 4
  %v1_11850 = add i32 %v0_11850, 24
  %v2_11850 = inttoptr i32 %v1_11850 to i32*
  %v3_11850 = load i32, i32* %v2_11850, align 4
  store i32 %v3_11850, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_11858 = add i32 %v0_11850, 12
  %v3_11858 = inttoptr i32 %v2_11858 to i32*
  store i32 10, i32* %v3_11858, align 4
  br label %dec_label_pc_11774

dec_label_pc_11860:                               ; preds = %dec_label_pc_111e0
  store i32 ptrtoint (i32* @global_var_1556c.225 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_1186c, i32* @r0, align 4
  %v3_11870 = call i32 @function_13230(i32 %v2_1186c, i32 ptrtoint (i32* @global_var_1556c.225 to i32), i32 3)
  store i32 9, i32* @r2, align 4
  store i32 %v2_1187c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15563.227 to i32), i32* @r1, align 4
  %v3_11884 = call i32 @function_13230(i32 %v2_1187c, i32 ptrtoint (i32* @global_var_15563.227 to i32), i32 9)
  store i32 %v3_11884, i32* %r0.global-to-local, align 4
  %v0_11888 = load i32, i32* @r6, align 4
  %v1_11888 = add i32 %v0_11888, 24
  %v2_11888 = inttoptr i32 %v1_11888 to i32*
  %v3_11888 = load i32, i32* %v2_11888, align 4
  store i32 %v3_11888, i32* %ip.global-to-local, align 4
  %v0_1188c = load i32, i32* @r5, align 4
  %v1_1188c = add i32 %v0_1188c, 2
  store i32 %v1_1188c, i32* %r2.global-to-local, align 4
  %v0_11890 = load i32, i32* %r8.global-to-local, align 4
  %v2_11890 = add i32 %v0_11890, %v3_11888
  store i32 %v2_11890, i32* %r3.global-to-local, align 4
  %v3_11894 = icmp uge i32 %v2_11890, %v1_1188c
  store i1 %v3_11894, i1* %cpsr_c.global-to-local, align 1
  %v9_11894 = icmp eq i32 %v2_11890, %v1_1188c
  store i1 %v9_11894, i1* %cpsr_z.global-to-local, align 1
  %v2_11898 = xor i1 %v3_11894, true
  %v3_11898 = or i1 %v9_11894, %v2_11898
  br i1 %v3_11898, label %dec_label_pc_11860.dec_label_pc_11250.loopexit_crit_edge, label %dec_label_pc_1189c

dec_label_pc_11860.dec_label_pc_11250.loopexit_crit_edge: ; preds = %dec_label_pc_11860
  %v0_11250.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11250

dec_label_pc_1189c:                               ; preds = %dec_label_pc_11860
  %v0_1189c = load i32, i32* @r4, align 4
  %v1_1189c = add i32 %v0_1189c, 1
  %v2_1189c = inttoptr i32 %v1_1189c to i8*
  %v3_1189c = load i8, i8* %v2_1189c, align 1
  %v4_1189c = zext i8 %v3_1189c to i32
  store i32 %v4_1189c, i32* %r3.global-to-local, align 4
  %v2_118a0 = icmp ugt i8 %v3_1189c, 30
  store i1 %v2_118a0, i1* %cpsr_c.global-to-local, align 1
  %v7_118a0 = icmp eq i8 %v3_1189c, 31
  store i1 %v7_118a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118a0, label %dec_label_pc_11974, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_1189c
  %v1_118a8 = add i32 %v0_1189c, -1
  %v2_118a8 = inttoptr i32 %v1_118a8 to i8*
  %v3_118a8 = load i8, i8* %v2_118a8, align 1
  %v4_118a8 = zext i8 %v3_118a8 to i32
  store i32 %v4_118a8, i32* %r3.global-to-local, align 4
  %v2_118ac = icmp ugt i8 %v3_118a8, -4
  store i1 %v2_118ac, i1* %cpsr_c.global-to-local, align 1
  %v7_118ac = icmp eq i8 %v3_118a8, -3
  store i1 %v7_118ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118ac, label %bb1935, label %dec_label_pc_118b8

bb1935:                                           ; preds = %dec_label_pc_118a8
  %v1_118b0 = load i32, i32* %sl.global-to-local, align 4
  %v2_118b0 = trunc i32 %v1_118b0 to i8
  store i8 %v2_118b0, i8* %v2_118a8, align 1
  %v0_118b4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118b4.pr, label %dec_label_pc_111f4, label %.dec_label_pc_118b8_crit_edge

.dec_label_pc_118b8_crit_edge:                    ; preds = %bb1935
  %v0_118b8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %.dec_label_pc_118b8_crit_edge, %dec_label_pc_118a8
  %v0_118b8 = phi i32 [ %v0_118b8.pre, %.dec_label_pc_118b8_crit_edge ], [ %v4_118a8, %dec_label_pc_118a8 ]
  %v2_118b8 = icmp ugt i32 %v0_118b8, 250
  store i1 %v2_118b8, i1* %cpsr_c.global-to-local, align 1
  %v7_118b8 = icmp eq i32 %v0_118b8, 251
  store i1 %v7_118b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118b8, label %bb1936, label %dec_label_pc_111f4

bb1936:                                           ; preds = %dec_label_pc_118b8
  %v1_118bc = load i32, i32* %sb.global-to-local, align 4
  %v2_118bc = trunc i32 %v1_118bc to i8
  %v3_118bc = load i32, i32* @r4, align 4
  %v4_118bc = add i32 %v3_118bc, -1
  %v5_118bc = inttoptr i32 %v4_118bc to i8*
  store i8 %v2_118bc, i8* %v5_118bc, align 1
  br label %dec_label_pc_111f4

dec_label_pc_118c4:                               ; preds = %dec_label_pc_1135c, %dec_label_pc_11380, %dec_label_pc_1132c
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_118c8 = call i32 @function_11d4c(i32 25)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_118d8 = call i32 @function_11c68(i32 25, i32* %v2_11054)
  %v3_118dc = load i8, i8* %stack_var_-56, align 1
  %v4_118dc = sext i8 %v3_118dc to i32
  store i32 %v3_118d8, i32* %r2.global-to-local, align 4
  %v1_118e4 = add nsw i32 %v4_118dc, -1
  store i32 %v1_118e4, i32* %r3.global-to-local, align 4
  %v0_118e8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_118e8, i32* %r0.global-to-local, align 4
  %v0_118ec = load i32, i32* @r6, align 4
  %v1_118ec = add i32 %v0_118ec, 24
  %v2_118ec = inttoptr i32 %v1_118ec to i32*
  %v3_118ec = load i32, i32* %v2_118ec, align 4
  store i32 %v3_118ec, i32* %r1.global-to-local, align 4
  %v4_118f0 = call i32 @function_123dc(i32 %v0_118e8, i32 %v3_118ec, i32 %v3_118d8, i32 %v1_118e4)
  store i32 %v4_118f0, i32* %r0.global-to-local, align 4
  %v1_118f4 = add i32 %v4_118f0, 1
  store i32 %v1_118f4, i32* @r7, align 4
  %v2_118f4 = icmp eq i32 %v4_118f0, -1
  store i1 %v2_118f4, i1* %cpsr_c.global-to-local, align 1
  %v7_118f4 = icmp eq i32 %v1_118f4, 0
  store i1 %v7_118f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_118f4, label %thread-pre-split688, label %bb1937

bb1937:                                           ; preds = %dec_label_pc_118c4
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split688

thread-pre-split688:                              ; preds = %dec_label_pc_118c4, %bb1937
  %v0_118fc = phi i1 [ false, %bb1937 ], [ true, %dec_label_pc_118c4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_118fc, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11c44 = call i32 @function_11c94(i32 25)
  store i32 %v1_11c44, i32* %r0.global-to-local, align 4
  br i1 %v0_118fc, label %dec_label_pc_11c40, label %dec_label_pc_11904

dec_label_pc_11904:                               ; preds = %thread-pre-split688
  %v0_1190c = load i32, i32* @r7, align 4
  %v3_1190c = icmp eq i32 %v0_1190c, -1
  store i1 %v3_1190c, i1* %cpsr_c.global-to-local, align 1
  %v8_1190c = icmp eq i32 %v0_1190c, -1
  store i1 %v8_1190c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1190c, label %dec_label_pc_110d8.loopexit, label %dec_label_pc_11394

dec_label_pc_11918:                               ; preds = %dec_label_pc_110f4
  br i1 %v2_11118, label %dec_label_pc_11c5c, label %dec_label_pc_1191c

dec_label_pc_1191c:                               ; preds = %dec_label_pc_11918
  %v3_1191c = icmp eq i32 %v5_11114, -1
  store i1 %v3_1191c, i1* %cpsr_c.global-to-local, align 1
  %v8_1191c = icmp eq i32 %v5_11114, -1
  store i1 %v8_1191c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1191c, label %dec_label_pc_11924, label %dec_label_pc_11140

dec_label_pc_11924:                               ; preds = %dec_label_pc_1191c
  %v0_11924 = load i32, i32* %fp.global-to-local, align 4
  %v1_11924 = inttoptr i32 %v0_11924 to i32*
  %v2_11924 = load i32, i32* %v1_11924, align 4
  store i32 %v2_11924, i32* %r3.global-to-local, align 4
  %v2_11928 = icmp ugt i32 %v2_11924, 10
  store i1 %v2_11928, i1* %cpsr_c.global-to-local, align 1
  %v7_11928 = icmp eq i32 %v2_11924, 11
  store i1 %v7_11928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11928, label %dec_label_pc_10f10, label %dec_label_pc_11930

dec_label_pc_11930:                               ; preds = %dec_label_pc_11924, %dec_label_pc_11c5c
  %v0_11930 = load i32, i32* @r6, align 4
  %v1_11930 = add i32 %v0_11930, 4
  %v2_11930 = inttoptr i32 %v1_11930 to i32*
  %v3_11930 = load i32, i32* %v2_11930, align 4
  store i32 %v3_11930, i32* %r0.global-to-local, align 4
  %v1_11934 = call i32 @function_12c1c(i32 %v3_11930)
  store i32 %v1_11934, i32* %r0.global-to-local, align 4
  %v0_11938 = load i32, i32* @r6, align 4
  %v1_11938 = add i32 %v0_11938, 284
  %v2_11938 = inttoptr i32 %v1_11938 to i8*
  %v3_11938 = load i8, i8* %v2_11938, align 1
  %v4_11938 = zext i8 %v3_11938 to i32
  %v1_1193c = add nuw nsw i32 %v4_11938, 1
  %v1_11940 = urem i32 %v1_1193c, 256
  store i32 %v1_11940, i32* %r3.global-to-local, align 4
  %v2_11944 = icmp ugt i32 %v1_11940, 8
  store i1 %v2_11944, i1* %cpsr_c.global-to-local, align 1
  %v7_11944 = icmp eq i32 %v1_11940, 9
  store i1 %v7_11944, i1* %cpsr_z.global-to-local, align 1
  %v1_11948 = trunc i32 %v1_1193c to i8
  store i8 %v1_11948, i8* %v2_11938, align 1
  %v0_1194c = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1194c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_1194c = xor i1 %v1_1194c, true
  %v3_1194c = and i1 %v0_1194c, %v2_1194c
  br i1 %v3_1194c, label %bb1938, label %.thread1163

.thread1163:                                      ; preds = %dec_label_pc_11930
  store i32 -1, i32* @r4, align 4
  %v1_1195811591164 = load i32, i32* @r6, align 4
  %v2_1195811601165 = add i32 %v1_1195811591164, 4
  %v3_1195811611166 = inttoptr i32 %v2_1195811601165 to i32*
  store i32 -1, i32* %v3_1195811611166, align 4
  br label %bb1939

bb1938:                                           ; preds = %dec_label_pc_11930
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_119581155 = load i32, i32* @r6, align 4
  %v2_119581156 = add i32 %v1_119581155, 4
  %v3_119581157 = inttoptr i32 %v2_119581156 to i32*
  store i32 -1, i32* %v3_119581157, align 4
  %v4_1195c = load i32, i32* %r2.global-to-local, align 4
  %v5_1195c = load i32, i32* @r6, align 4
  %v6_1195c = add i32 %v5_1195c, 12
  %v7_1195c = inttoptr i32 %v6_1195c to i32*
  store i32 %v4_1195c, i32* %v7_1195c, align 4
  %v4_11960 = load i32, i32* %r3.global-to-local, align 4
  %v5_11960 = trunc i32 %v4_11960 to i8
  %v6_11960 = load i32, i32* @r6, align 4
  %v7_11960 = add i32 %v6_11960, 284
  %v8_11960 = inttoptr i32 %v7_11960 to i8*
  store i8 %v5_11960, i8* %v8_11960, align 1
  %v0_11964.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11964.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb1939

bb1939:                                           ; preds = %.thread1163, %bb1938
  %v1_11964 = phi i1 [ %v1_11964.pre, %bb1938 ], [ %v1_1194c, %.thread1163 ]
  %v0_11964 = phi i1 [ %v0_11964.pre, %bb1938 ], [ %v0_1194c, %.thread1163 ]
  %v2_11964 = xor i1 %v1_11964, true
  %v3_11964 = and i1 %v0_11964, %v2_11964
  br i1 %v3_11964, label %dec_label_pc_10f10, label %dec_label_pc_11968

dec_label_pc_11968:                               ; preds = %bb1939
  %v0_11968 = load i32, i32* @r6, align 4
  store i32 %v0_11968, i32* @r0, align 4
  %v0_1196c = call i32 @function_ea90()
  store i32 %v0_1196c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f10

dec_label_pc_11974:                               ; preds = %dec_label_pc_1189c
  store i32 %v2_1186c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_11984 = add i32 %v0_11888, 4
  %v2_11984 = inttoptr i32 %v1_11984 to i32*
  %v3_11984 = load i32, i32* %v2_11984, align 4
  store i32 %v3_11984, i32* %r0.global-to-local, align 4
  %v5_11988 = call i32 @function_13470(i32 %v3_11984, i32* nonnull %stack_var_-41, i32 3, i32 16384)
  store i32 %v5_11988, i32* %r0.global-to-local, align 4
  store i32 %v2_11874, i32* %r1.global-to-local, align 4
  %v0_11990 = load i32, i32* @r6, align 4
  %v1_11990 = add i32 %v0_11990, 4
  %v2_11990 = inttoptr i32 %v1_11990 to i32*
  %v3_11990 = load i32, i32* %v2_11990, align 4
  store i32 %v3_11990, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11230

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11730
  %v0_119a0 = load i32, i32* @r6, align 4
  store i32 %v0_119a0, i32* @r0, align 4
  %v0_119a4 = call i32 @function_ea90()
  store i32 %v0_119a4, i32* %r0.global-to-local, align 4
  %v0_119a8 = load i32, i32* @r6, align 4
  %v1_119a8 = add i32 %v0_119a8, 24
  %v2_119a8 = inttoptr i32 %v1_119a8 to i32*
  %v3_119a8 = load i32, i32* %v2_119a8, align 4
  store i32 %v3_119a8, i32* %ip.global-to-local, align 4
  %v0_119ac = load i32, i32* @r4, align 4
  store i32 %v0_119ac, i32* @r7, align 4
  br label %dec_label_pc_11774

dec_label_pc_119b4:                               ; preds = %dec_label_pc_110e4
  store i32 %.pre, i32* @r0, align 4
  %v1_119bc = add i32 %v0_119b4, 92
  store i32 %v1_119bc, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_119c4 = call i32 @function_13240(i32 %.pre, i32 %v1_119bc, i32 192)
  store i32 %v3_119c4, i32* %r0.global-to-local, align 4
  %v0_119c8 = load i32, i32* @r6, align 4
  %v1_119c8 = add i32 %v0_119c8, 24
  %v2_119c8 = inttoptr i32 %v1_119c8 to i32*
  %v3_119c8 = load i32, i32* %v2_119c8, align 4
  store i32 %v3_119c8, i32* %r3.global-to-local, align 4
  %v1_119cc = add i32 %v3_119c8, -64
  store i32 %v1_119cc, i32* %ip.global-to-local, align 4
  store i32 %v1_119cc, i32* %v2_119c8, align 4
  br label %dec_label_pc_110f4

dec_label_pc_11a0c:                               ; preds = %dec_label_pc_116f8
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11a18 = call i32 @function_11d4c(i32 9)
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_11a28 = call i32 @function_11c68(i32 9, i32* nonnull %v2_11054)
  store i32 %v3_11a28, i32* %r0.global-to-local, align 4
  %v3_11a2c = load i8, i8* %stack_var_-56, align 1
  %v4_11a2c = sext i8 %v3_11a2c to i32
  store i32 %v3_11a28, i32* %r2.global-to-local, align 4
  %v1_11a34 = add nsw i32 %v4_11a2c, -1
  store i32 %v1_11a34, i32* %r3.global-to-local, align 4
  %v0_11a38 = load i32, i32* @r6, align 4
  %v1_11a38 = add i32 %v0_11a38, 24
  %v2_11a38 = inttoptr i32 %v1_11a38 to i32*
  %v3_11a38 = load i32, i32* %v2_11a38, align 4
  store i32 %v3_11a38, i32* %r1.global-to-local, align 4
  %v0_11a3c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11a3c, i32* %r0.global-to-local, align 4
  %v4_11a40 = call i32 @function_123dc(i32 %v0_11a3c, i32 %v3_11a38, i32 %v3_11a28, i32 %v1_11a34)
  store i32 %v4_11a40, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11a4c = call i32 @function_11c94(i32 9)
  store i32 %v1_11a4c, i32* %r0.global-to-local, align 4
  %v0_11a50 = load i32, i32* @r7, align 4
  %v2_11a50 = icmp eq i32 %v0_11a50, -1
  store i1 %v2_11a50, i1* %cpsr_c.global-to-local, align 1
  %v7_11a50 = icmp eq i32 %v0_11a50, -1
  store i1 %v7_11a50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a50, label %dec_label_pc_110d8.loopexit, label %dec_label_pc_11a58

dec_label_pc_11a58:                               ; preds = %dec_label_pc_11a0c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a58 = icmp eq i32 %v0_11a50, 0
  store i1 %v2_11a58, i1* %cpsr_z.global-to-local, align 1
  %tmp1940 = icmp slt i32 %v0_11a50, 1
  br i1 %tmp1940, label %dec_label_pc_11260, label %dec_label_pc_11a60

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a58
  %v0_11a60 = load i32, i32* @r6, align 4
  %v1_11a60 = add i32 %v0_11a60, 21
  %v2_11a60 = inttoptr i32 %v1_11a60 to i8*
  %v3_11a60 = load i8, i8* %v2_11a60, align 1
  %v4_11a60 = zext i8 %v3_11a60 to i32
  store i32 %v4_11a60, i32* %r3.global-to-local, align 4
  %v1_11a64 = add i32 %v0_11a60, 20
  %v2_11a64 = inttoptr i32 %v1_11a64 to i8*
  %v3_11a64 = load i8, i8* %v2_11a64, align 1
  %v4_11a64 = zext i8 %v3_11a64 to i32
  store i32 %v4_11a64, i32* %r2.global-to-local, align 4
  %v1_11a68 = add i32 %v0_11a60, 16
  %v2_11a68 = inttoptr i32 %v1_11a68 to i32*
  %v3_11a68 = load i32, i32* %v2_11a68, align 4
  store i32 %v3_11a68, i32* %r1.global-to-local, align 4
  %v4_11a6c = mul nuw nsw i32 %v4_11a60, 256
  %v5_11a6c = or i32 %v4_11a64, %v4_11a6c
  store i32 %v5_11a6c, i32* %r2.global-to-local, align 4
  %v1_11a70 = and i32 %v4_11a64, 128
  %v2_11a70 = icmp ne i32 %v1_11a70, 0
  store i1 %v2_11a70, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_11a60, i32* %r3.global-to-local, align 4
  store i32 %v3_11a68, i32* %stack_var_-48, align 4
  store i32 %v5_11a6c, i32* %stack_var_-38, align 4
  %v1_11a80 = inttoptr i32 %v0_11a60 to i32*
  %v2_11a80 = load i32, i32* %v1_11a80, align 4
  store i32 %v2_11a80, i32* %sl.global-to-local, align 4
  %v0_11a84 = call i32 @function_12c48()
  store i32 %v0_11a84, i32* %r0.global-to-local, align 4
  %v7_11a88 = icmp eq i32 %v0_11a84, -1
  %.2014 = zext i1 %v7_11a88 to i32
  store i32 %.2014, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11a94 = icmp eq i32 %v0_11a84, 0
  store i1 %v2_11a94, i1* %cpsr_z.global-to-local, align 1
  %tmp1943 = icmp slt i32 %v0_11a84, 1
  br i1 %tmp1943, label %bb1944, label %.thread691

.thread691:                                       ; preds = %dec_label_pc_11a60
  store i32 1, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11aa8

bb1944:                                           ; preds = %dec_label_pc_11a60
  store i32 %.2014, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11aa0 = icmp eq i1 %v7_11a88, false
  store i1 %v2_11aa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11aa0, label %dec_label_pc_11ac8, label %dec_label_pc_11aa8

dec_label_pc_11aa8:                               ; preds = %.thread691, %bb1944, %dec_label_pc_11b40
  %v0_11aa8 = load i32, i32* @r6, align 4
  %v1_11aa8 = add i32 %v0_11aa8, 4
  %v2_11aa8 = inttoptr i32 %v1_11aa8 to i32*
  %v3_11aa8 = load i32, i32* %v2_11aa8, align 4
  store i32 %v3_11aa8, i32* %r0.global-to-local, align 4
  %v1_11aac = call i32 @function_12c1c(i32 %v3_11aa8)
  store i32 %v1_11aac, i32* %r0.global-to-local, align 4
  %v0_11ab0 = load i32, i32* @r6, align 4
  %v1_11ab0 = add i32 %v0_11ab0, 24
  %v2_11ab0 = inttoptr i32 %v1_11ab0 to i32*
  %v3_11ab0 = load i32, i32* %v2_11ab0, align 4
  store i32 %v3_11ab0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_11abc = add i32 %v0_11ab0, 4
  %v3_11abc = inttoptr i32 %v2_11abc to i32*
  store i32 -1, i32* %v3_11abc, align 4
  %v0_11ac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ac0 = load i32, i32* @r6, align 4
  %v2_11ac0 = add i32 %v1_11ac0, 12
  %v3_11ac0 = inttoptr i32 %v2_11ac0 to i32*
  store i32 %v0_11ac0, i32* %v3_11ac0, align 4
  br label %dec_label_pc_11774

dec_label_pc_11ac8:                               ; preds = %bb1944
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_11ad4 = call i32 @function_13500(i32 2, i32 1, i32 0)
  store i32 %v3_11ad4, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_11ae0 = call i32 @function_11d4c(i32 2)
  store i32 2, i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_15488.76 to i32), i32* @r0, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v2_11af4 = call i32 @function_1330c(i32 ptrtoint ([15 x i8]* @global_var_15488.76 to i32))
  %v0_11af8 = load i32, i32* @r5, align 4
  store i32 %v0_11af8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_11b04 = inttoptr i32 %v0_11af8 to i32*
  %v3_11b04 = call i32 @function_11c68(i32 2, i32* %v2_11b04)
  %v4_11b04 = inttoptr i32 %v3_11b04 to i8*
  store i32 %v3_11b04, i32* %r0.global-to-local, align 4
  %v2_11b08 = add i32 %v3_11b04, 1
  %v3_11b08 = inttoptr i32 %v2_11b08 to i8*
  %v4_11b08 = load i8, i8* %v3_11b08, align 1
  %v5_11b08 = zext i8 %v4_11b08 to i32
  store i32 %v5_11b08, i32* %r2.global-to-local, align 4
  %v3_11b0c = load i8, i8* %v4_11b04, align 1
  %v4_11b0c = zext i8 %v3_11b0c to i32
  %v4_11b10 = mul nuw nsw i32 %v5_11b08, 256
  %v5_11b10 = or i32 %v4_11b0c, %v4_11b10
  store i32 %v5_11b10, i32* %r3.global-to-local, align 4
  %v1_11b14 = and i32 %v4_11b0c, 128
  %v2_11b14 = icmp ne i32 %v1_11b14, 0
  store i1 %v2_11b14, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_11b08, i32* %r1.global-to-local, align 4
  %v0_11b18 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11b18, i32* %r0.global-to-local, align 4
  %v1_11b24 = call i32 @function_11c94(i32 %v0_11b18)
  %v0_11b28 = load i32, i32* @r4, align 4
  store i32 %v0_11b28, i32* %r0.global-to-local, align 4
  store i32 %v2_11b2c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_11b34 = call i32 @function_1335c(i32 %v0_11b28, %sockaddr* %v3_11b34, i32 16)
  store i32 %v4_11b34, i32* %r0.global-to-local, align 4
  %v2_11b38 = icmp eq i32 %v4_11b34, -1
  store i1 %v2_11b38, i1* %cpsr_c.global-to-local, align 1
  %v7_11b38 = icmp eq i32 %v4_11b34, -1
  store i1 %v7_11b38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11b38, label %dec_label_pc_11c1c, label %dec_label_pc_11b40

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11ac8, %dec_label_pc_11c1c
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11b4c = load i32, i32* @r4, align 4
  store i32 %v0_11b4c, i32* %r0.global-to-local, align 4
  store i32 %v2_1104c, i32* %r1.global-to-local, align 4
  %v0_11b54 = load i32, i32* @r5, align 4
  %v6_11b54 = trunc i32 %v0_11b54 to i8
  store i8 %v6_11b54, i8* %stack_var_-56, align 1
  %v7_11b58 = call i32 @function_13470(i32 %v0_11b4c, i32* %v2_11054, i32 1, i32 16384)
  %v0_11b60 = load i32, i32* @r4, align 4
  store i32 %v0_11b60, i32* %r0.global-to-local, align 4
  store i32 %v2_1151c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_11b70 = call i32 @function_13470(i32 %v0_11b60, i32* nonnull %stack_var_-48, i32 4, i32 16384)
  %v0_11b78 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11b78, i32* %r2.global-to-local, align 4
  %v0_11b7c = load i32, i32* @r4, align 4
  store i32 %v0_11b7c, i32* %r0.global-to-local, align 4
  store i32 %v2_11b80, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11b88 = call i32 @function_13470(i32 %v0_11b7c, i32* nonnull %stack_var_-38, i32 %v0_11b78, i32 16384)
  %v0_11b8c = load i32, i32* %sl.global-to-local, align 4
  %v1_11b8c = add i32 %v0_11b8c, 12
  store i32 %v1_11b8c, i32* %r1.global-to-local, align 4
  %v0_11b90 = load i32, i32* @r4, align 4
  store i32 %v0_11b90, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11b9c = inttoptr i32 %v1_11b8c to i32*
  %v5_11b9c = call i32 @function_13470(i32 %v0_11b90, i32* %v4_11b9c, i32 1, i32 16384)
  store i32 %v5_11b9c, i32* %r0.global-to-local, align 4
  %v0_11ba0 = load i32, i32* %sl.global-to-local, align 4
  %v1_11ba0 = inttoptr i32 %v0_11ba0 to i32*
  %v2_11ba0 = load i32, i32* %v1_11ba0, align 4
  store i32 %v2_11ba0, i32* %r1.global-to-local, align 4
  %v1_11ba4 = add i32 %v0_11ba0, 12
  %v2_11ba4 = inttoptr i32 %v1_11ba4 to i8*
  %v3_11ba4 = load i8, i8* %v2_11ba4, align 1
  %v4_11ba4 = zext i8 %v3_11ba4 to i32
  store i32 %v4_11ba4, i32* %r2.global-to-local, align 4
  %v0_11ba8 = load i32, i32* @r4, align 4
  store i32 %v0_11ba8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11bb0 = inttoptr i32 %v2_11ba0 to i32*
  %v5_11bb0 = call i32 @function_13470(i32 %v0_11ba8, i32* %v4_11bb0, i32 %v4_11ba4, i32 16384)
  %v0_11bb4 = load i32, i32* %sl.global-to-local, align 4
  %v1_11bb4 = add i32 %v0_11bb4, 13
  store i32 %v1_11bb4, i32* %r1.global-to-local, align 4
  %v0_11bb8 = load i32, i32* @r4, align 4
  store i32 %v0_11bb8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11bc4 = inttoptr i32 %v1_11bb4 to i32*
  %v5_11bc4 = call i32 @function_13470(i32 %v0_11bb8, i32* %v4_11bc4, i32 1, i32 16384)
  %v0_11bc8 = load i32, i32* @r4, align 4
  store i32 %v0_11bc8, i32* %r0.global-to-local, align 4
  %v0_11bcc = load i32, i32* %sl.global-to-local, align 4
  %v1_11bcc = add i32 %v0_11bcc, 13
  %v2_11bcc = inttoptr i32 %v1_11bcc to i8*
  %v3_11bcc = load i8, i8* %v2_11bcc, align 1
  %v4_11bcc = zext i8 %v3_11bcc to i32
  store i32 %v4_11bcc, i32* %r2.global-to-local, align 4
  %v1_11bd0 = add i32 %v0_11bcc, 4
  %v2_11bd0 = inttoptr i32 %v1_11bd0 to i32*
  %v3_11bd0 = load i32, i32* %v2_11bd0, align 4
  store i32 %v3_11bd0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11bd8 = inttoptr i32 %v3_11bd0 to i32*
  %v5_11bd8 = call i32 @function_13470(i32 %v0_11bc8, i32* %v4_11bd8, i32 %v4_11bcc, i32 16384)
  %v0_11bdc = load i32, i32* @r4, align 4
  store i32 %v0_11bdc, i32* %r0.global-to-local, align 4
  %v1_11be0 = call i32 @function_12c1c(i32 %v0_11bdc)
  store i32 %v1_11be0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11be8:                               ; preds = %dec_label_pc_10ff8, %dec_label_pc_10fb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11bec

dec_label_pc_11bec:                               ; preds = %dec_label_pc_11020, %dec_label_pc_11be8
  %v0_11bf4 = phi i32 [ 0, %dec_label_pc_11be8 ], [ %v0_11020, %dec_label_pc_11020 ]
  %v0_11bec = load i32, i32* @r6, align 4
  %v1_11bec = add i32 %v0_11bec, 4
  %v2_11bec = inttoptr i32 %v1_11bec to i32*
  %v3_11bec = load i32, i32* %v2_11bec, align 4
  store i32 %v3_11bec, i32* @r4, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_11bf4 = inttoptr i32 %v0_11bec to i32*
  store i32 %v0_11bf4, i32* %v2_11bf4, align 4
  %v0_11bf8 = load i32, i32* %ip.global-to-local, align 4
  %v1_11bf8 = load i32, i32* @r6, align 4
  %v2_11bf8 = add i32 %v1_11bf8, 24
  %v3_11bf8 = inttoptr i32 %v2_11bf8 to i32*
  store i32 %v0_11bf8, i32* %v3_11bf8, align 4
  %v0_10ee8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ee8

dec_label_pc_11c00:                               ; preds = %dec_label_pc_10f70
  %v0_11c00 = load i32, i32* @r6, align 4
  %v1_11c00 = add i32 %v0_11c00, 4
  %v2_11c00 = inttoptr i32 %v1_11c00 to i32*
  %v3_11c00 = load i32, i32* %v2_11c00, align 4
  store i32 %v3_11c00, i32* %r0.global-to-local, align 4
  %v1_11c04 = call i32 @function_12c1c(i32 %v3_11c00)
  store i32 %v1_11c04, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_11c0c = load i32, i32* @r5, align 4
  %v1_11c0c = load i32, i32* @r6, align 4
  %v2_11c0c = add i32 %v1_11c0c, 12
  %v3_11c0c = inttoptr i32 %v2_11c0c to i32*
  store i32 %v0_11c0c, i32* %v3_11c0c, align 4
  %v0_11c10 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c10 = load i32, i32* @r6, align 4
  %v2_11c10 = add i32 %v1_11c10, 4
  %v3_11c10 = inttoptr i32 %v2_11c10 to i32*
  store i32 %v0_11c10, i32* %v3_11c10, align 4
  %v0_11c14 = load i32, i32* @r5, align 4
  %v1_11c14 = trunc i32 %v0_11c14 to i8
  %v2_11c14 = load i32, i32* @r6, align 4
  %v3_11c14 = add i32 %v2_11c14, 284
  %v4_11c14 = inttoptr i32 %v3_11c14 to i8*
  store i8 %v1_11c14, i8* %v4_11c14, align 1
  br label %dec_label_pc_10f10

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11ac8
  %v0_11c1c = load i32, i32* @r4, align 4
  store i32 %v0_11c1c, i32* %r0.global-to-local, align 4
  %v1_11c20 = call i32 @function_12c1c(i32 %v0_11c1c)
  store i32 %v1_11c20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b40

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11098
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11c2c = call i32 @function_11c94(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11c34 = call i32 @function_11c94(i32 27)
  store i32 %v1_11c34, i32* %r0.global-to-local, align 4
  %v0_11c38 = load i32, i32* @r6, align 4
  %v1_11c38 = add i32 %v0_11c38, 12
  %v2_11c38 = inttoptr i32 %v1_11c38 to i32*
  %v3_11c38 = load i32, i32* %v2_11c38, align 4
  br label %dec_label_pc_110dc.backedge

dec_label_pc_110dc.backedge.thread:               ; preds = %dec_label_pc_113d8, %dec_label_pc_114a0, %dec_label_pc_11568, %dec_label_pc_11630, %dec_label_pc_11798
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110e4

dec_label_pc_110dc.backedge.thread2099:           ; preds = %dec_label_pc_11410, %dec_label_pc_114d8, %dec_label_pc_11668, %dec_label_pc_115a0, %dec_label_pc_117d0, %dec_label_pc_11434, %dec_label_pc_114fc, %dec_label_pc_115c4, %dec_label_pc_1168c, %dec_label_pc_117f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110e4

dec_label_pc_110dc.backedge:                      ; preds = %dec_label_pc_11c28, %dec_label_pc_11c40
  %storemerge2102 = phi i32 [ %v3_11c48, %dec_label_pc_11c40 ], [ %v3_11c38, %dec_label_pc_11c28 ]
  %v0_110dc.be = phi i32 [ %v3_11c48, %dec_label_pc_11c40 ], [ %v3_11c38, %dec_label_pc_11c28 ]
  %v0_110e41035 = phi i32 [ %v0_11c48, %dec_label_pc_11c40 ], [ %v0_11c38, %dec_label_pc_11c28 ]
  store i32 %storemerge2102, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110dc = icmp eq i32 %v0_110dc.be, 0
  store i1 %v2_110dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110dc, label %dec_label_pc_10f10, label %dec_label_pc_110e4

dec_label_pc_11c40:                               ; preds = %thread-pre-split688
  %v0_11c48 = load i32, i32* @r6, align 4
  %v1_11c48 = add i32 %v0_11c48, 12
  %v2_11c48 = inttoptr i32 %v1_11c48 to i32*
  %v3_11c48 = load i32, i32* %v2_11c48, align 4
  br label %dec_label_pc_110dc.backedge

dec_label_pc_11c50:                               ; preds = %dec_label_pc_10e70, %dec_label_pc_10e54
  %v0_11c50 = load i32, i32* @r7, align 4
  %v1_11c50 = load i32, i32* @r4, align 4
  %v2_11c50 = add i32 %v1_11c50, 12
  %v3_11c50 = inttoptr i32 %v2_11c50 to i32*
  store i32 %v0_11c50, i32* %v3_11c50, align 4
  %v0_11c54 = load i32, i32* @r7, align 4
  %v1_11c54 = trunc i32 %v0_11c54 to i8
  %v2_11c54 = load i32, i32* @r4, align 4
  %v3_11c54 = add i32 %v2_11c54, 284
  %v4_11c54 = inttoptr i32 %v3_11c54 to i8*
  store i8 %v1_11c54, i8* %v4_11c54, align 1
  br label %bb1892

dec_label_pc_11c5c:                               ; preds = %dec_label_pc_11918
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_11c60 = load i32, i32* %fp.global-to-local, align 4
  %v2_11c60 = inttoptr i32 %v1_11c60 to i32*
  store i32 104, i32* %v2_11c60, align 4
  br label %dec_label_pc_11930

; uselistorder directives
  uselistorder i32 %v0_11c48, { 1, 0 }
  uselistorder i32 %v3_11c38, { 1, 0 }
  uselistorder i1 %v7_11b38, { 1, 0 }
  uselistorder i32 %v4_11b0c, { 1, 0 }
  uselistorder i32 %v5_11b08, { 1, 0, 2 }
  uselistorder i1 %v2_11aa0, { 1, 0 }
  uselistorder i32 %.2014, { 1, 0 }
  uselistorder i1 %v7_11a88, { 1, 0 }
  uselistorder i32 %v0_11a84, { 2, 1, 0, 3 }
  uselistorder i32 %v4_11a64, { 1, 0, 2 }
  uselistorder i32 %v4_11a60, { 1, 0, 2 }
  uselistorder i1 %v7_11a50, { 1, 0 }
  uselistorder i32 %v0_11a50, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v3_11990, { 1, 0 }
  uselistorder i1 %v1_1194c, { 1, 0 }
  uselistorder i32 %v1_11940, { 2, 1, 0 }
  uselistorder i32 %v1_1193c, { 1, 0 }
  uselistorder i32 %v0_1190c, { 0, 2, 1 }
  uselistorder i1 %v0_118fc, { 1, 0 }
  uselistorder i32 %v4_118f0, { 1, 0, 2 }
  uselistorder i32 %v0_11888, { 1, 2, 0 }
  uselistorder i1 %v7_117f8, { 1, 0 }
  uselistorder i32 %v1_117f4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_117c8, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_117d0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_117e4, { 1, 0 }
  uselistorder i32 %v1_117d0, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_117b4, { 1, 0 }
  uselistorder i32 %v1_1179c, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_11788, { 1, 2, 0 }
  uselistorder i32 %v2_11774, { 1, 0 }
  uselistorder i32 %v1_11774, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_11774, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i32 %v1_11748, { 2, 1, 0 }
  uselistorder i1 %v7_11728, { 1, 0 }
  uselistorder i1 %v7_11690, { 1, 0 }
  uselistorder i32 %v1_1168c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_11660, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_11668, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_1167c, { 1, 0 }
  uselistorder i32 %v1_11668, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_1164c, { 1, 0 }
  uselistorder i32 %v1_11634, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_115c8, { 1, 0 }
  uselistorder i32 %v1_115c4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_11598, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_115a0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_115b4, { 1, 0 }
  uselistorder i32 %v1_115a0, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11584, { 1, 0 }
  uselistorder i32 %v1_1156c, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_11500, { 1, 0 }
  uselistorder i32 %v1_114fc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_114d0, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_114d8, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_114ec, { 1, 0 }
  uselistorder i32 %v1_114d8, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_114bc, { 1, 0 }
  uselistorder i32 %v1_114a4, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i1 %v7_11438, { 1, 0 }
  uselistorder i32 %v1_11434, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_11408, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_11410, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_11424, { 1, 0 }
  uselistorder i32 %v1_11410, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_113f4, { 1, 0 }
  uselistorder i32 %v1_113dc, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_11394, { 2, 1, 0 }
  uselistorder i1 %v7_11384, { 1, 0 }
  uselistorder i32 %v0_11354, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1135c, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v8_11370, { 1, 0 }
  uselistorder i32 %v1_1135c, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_11348, { 1, 0 }
  uselistorder i32 %v1_11330, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_112e8, { 2, 1, 0 }
  uselistorder i1 %v7_112d0, { 1, 0 }
  uselistorder i32 %v0_112a0, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v0_112a8, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v8_112bc, { 1, 0 }
  uselistorder i32 %v1_112a8, { 0, 1, 3, 2, 4 }
  uselistorder i1 %v8_1128c, { 1, 0 }
  uselistorder i32 %v1_11274, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_11260.pre, { 0, 2, 1 }
  uselistorder i32 %v1_11248, { 1, 0 }
  uselistorder i32 %v1_11244, { 1, 0 }
  uselistorder i32 %v1_1123c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11238, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11238, { 0, 2, 1 }
  uselistorder i1 %v7_111e0, { 1, 0 }
  uselistorder i1 %v2_111cc, { 1, 0, 2 }
  uselistorder i1 %v2_111b4, { 1, 0, 2 }
  uselistorder i32 %v1_111d4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_111a8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_111d0, { 1, 0 }
  uselistorder i32 %v2_111d8, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v3_11190, { 0, 2, 1, 3 }
  uselistorder i32 %v0_11158, { 4, 5, 26, 6, 7, 24, 8, 9, 25, 10, 11, 23, 12, 13, 22, 14, 15, 21, 16, 17, 20, 3, 2, 18, 19, 27, 1, 0 }
  uselistorder i32 %v1_11134, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11130, { 1, 0 }
  uselistorder i32 %v5_11114, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_11100, { 1, 0, 2 }
  uselistorder i32 %v3_110fc, { 1, 0, 2 }
  uselistorder i32 %v0_119b4, { 1, 0, 2 }
  uselistorder i32 %v0_110d0, { 1, 0, 2 }
  uselistorder i1 %v7_110b0, { 1, 0 }
  uselistorder i1 %v7_11088, { 1, 0 }
  uselistorder i32 %v1_11018, { 1, 0 }
  uselistorder i32 %v1_11014, { 3, 1, 0, 2 }
  uselistorder i32 %v0_11020, { 0, 2, 1, 3, 6, 5, 4 }
  uselistorder i32 %v3_10fe0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10fd4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10f60, { 2, 1, 0 }
  uselistorder i32 %v3_10f5c, { 1, 0 }
  uselistorder i1 %v7_10f40, { 1, 0 }
  uselistorder i32 %v3_10f3c, { 5, 4, 2, 1, 0, 6, 7, 3 }
  uselistorder i32 %v0_10f28, { 1, 0 }
  uselistorder i32 %v1_10f14, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10f00, { 2, 1, 0 }
  uselistorder i32 %v3_10efc, { 1, 0 }
  uselistorder i32 %v0_10f00, { 1, 0 }
  uselistorder i32 %v1_10ea0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ea0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10e78, { 2, 1, 0 }
  uselistorder i32 %v1_10e74, { 1, 0 }
  uselistorder i32 %v0_10e44, { 0, 2, 1 }
  uselistorder i32 %v1_10e3c, { 1, 0 }
  uselistorder i1 %v7_10e04, { 0, 3, 1, 2 }
  uselistorder i1 %v2_10e04, { 1, 2, 0 }
  uselistorder i32 %v2_10dfc, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_10df4, { 1, 0 }
  uselistorder i32 %v1_10dd8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10dcc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10dcc, { 0, 2, 1 }
  uselistorder i32 %v1_10dbc, { 1, 0 }
  uselistorder i32 %v3_10e20, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge1248, { 1, 0, 2 }
  uselistorder i32 %v3_10cf4, { 1, 0 }
  uselistorder i32 %v1_10cd8, { 1, 0 }
  uselistorder i32 %v1_10ccc, { 1, 2, 0 }
  uselistorder i32 %v0_10ce0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c9c, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_10c90, { 2, 1, 0 }
  uselistorder i32 %v1_10c6c, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_10c44, { 1, 0 }
  uselistorder i32 %v0_10bfc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_10bc4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10b64, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10abc, { 1, 0 }
  uselistorder i32 %v5_10a84, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10a38, { 1, 0 }
  uselistorder i1 %v7_10a00, { 2, 1, 0 }
  uselistorder i1 %v2_109f0, { 1, 0 }
  uselistorder i1 %v2_109cc, { 1, 0 }
  uselistorder i1 %v2_109a8, { 1, 0 }
  uselistorder i1 %v2_10964, { 1, 0 }
  uselistorder i1 %v2_10940, { 1, 0 }
  uselistorder i1 %v2_10910, { 1, 0, 2 }
  uselistorder i1 %v2_10908, { 1, 0 }
  uselistorder i1 %v2_108e4, { 1, 0 }
  uselistorder i1 %v2_108c8, { 1, 0 }
  uselistorder i1 %v2_108bc, { 1, 0, 2 }
  uselistorder i1 %v2_108b4, { 1, 0 }
  uselistorder i1 %v2_10870, { 1, 0, 2 }
  uselistorder i32 %.2007, { 0, 3, 1, 2 }
  uselistorder i32 %v4_10850, { 1, 0, 2 }
  uselistorder i1 %v2_10848, { 1, 0, 2 }
  uselistorder i32 %.2006, { 2, 0, 1 }
  uselistorder i1 %v2_107dc, { 1, 0 }
  uselistorder i1 %v2_107ac, { 1, 0, 2 }
  uselistorder i1 %v2_1078c, { 1, 0, 2 }
  uselistorder i1 %v2_1076c, { 1, 0 }
  uselistorder i1 %v2_10740, { 1, 0, 2 }
  uselistorder i1 %v2_10738, { 1, 0 }
  uselistorder i1 %v7_1072c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1070c, { 1, 0, 2 }
  uselistorder i1 %v2_10704, { 1, 0 }
  uselistorder i1 %v2_106d8, { 1, 0, 2 }
  uselistorder i1 %v2_106b0, { 1, 0, 2 }
  uselistorder i1 %v2_106a8, { 1, 0 }
  uselistorder i1 %v2_1067c, { 1, 0, 2 }
  uselistorder i1 %v2_10674, { 1, 0 }
  uselistorder i1 %v2_1062c, { 1, 0, 2 }
  uselistorder i1 %v2_10624, { 1, 0 }
  uselistorder i1 %v2_105f8, { 1, 0, 2 }
  uselistorder i1 %v2_105f0, { 1, 0 }
  uselistorder i1 %v2_105c4, { 1, 0, 2 }
  uselistorder i1 %v2_105bc, { 1, 0 }
  uselistorder i1 %v2_10594, { 1, 0, 2 }
  uselistorder i1 %v2_1058c, { 1, 0 }
  uselistorder i1 %v7_1056c, { 1, 0, 2 }
  uselistorder i1 %v2_10564, { 1, 0 }
  uselistorder i1 %v7_10558, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_10558, { 2, 0, 1, 3 }
  uselistorder i1 %v2_1054c, { 1, 0, 2 }
  uselistorder i1 %v2_10544, { 1, 0 }
  uselistorder i1 %v2_10518, { 1, 0, 2 }
  uselistorder i1 %v2_104f0, { 1, 0, 2 }
  uselistorder i1 %v2_104e8, { 1, 0 }
  uselistorder i1 %v7_104dc, { 1, 0, 2, 3 }
  uselistorder i1 %v2_104bc, { 1, 0, 2 }
  uselistorder i1 %v2_104b4, { 1, 0 }
  uselistorder i1 %v7_10490, { 1, 0, 2 }
  uselistorder i1 %v2_10488, { 1, 0 }
  uselistorder i1 %v2_10464, { 1, 0 }
  uselistorder i32 %.2003, { 2, 0, 1 }
  uselistorder i1 %v7_10434, { 0, 3, 2, 1 }
  uselistorder i1 %v2_1042c, { 1, 0 }
  uselistorder i1 %v2_10420, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.2002, { 2, 1, 0 }
  uselistorder i1 %v7_1040c, { 1, 0, 2 }
  uselistorder i1 %v2_103f4, { 1, 0 }
  uselistorder i1 %v2_103d4, { 1, 0 }
  uselistorder i1 %v2_10390, { 1, 0 }
  uselistorder i1 %v2_10378, { 1, 0 }
  uselistorder i1 %v2_10364, { 1, 0 }
  uselistorder i1 %v2_1034c, { 1, 0 }
  uselistorder i1 %v2_10320, { 1, 0, 2 }
  uselistorder i1 %v2_102ec, { 1, 0, 2 }
  uselistorder i1 %v2_102e4, { 1, 0 }
  uselistorder i1 %v2_102bc, { 1, 0, 2 }
  uselistorder i32 %.2000, { 1, 0 }
  uselistorder i1 %v7_102a4, { 0, 3, 2, 1 }
  uselistorder i1 %v2_10288, { 1, 0, 2 }
  uselistorder i1 %v2_10260, { 1, 0, 2 }
  uselistorder i1 %v2_10248, { 1, 0, 2 }
  uselistorder i1 %v2_10240, { 1, 0 }
  uselistorder i1 %v7_10234, { 4, 0, 3, 2, 1, 6, 5, 7, 8 }
  uselistorder i1 %v2_10234, { 5, 4, 3, 0, 2, 1, 6, 7 }
  uselistorder i1 %v2_10214, { 1, 0, 2 }
  uselistorder i1 %v2_1020c, { 1, 0 }
  uselistorder i1 %v2_101e0, { 1, 0, 2 }
  uselistorder i1 %v2_101d8, { 1, 0 }
  uselistorder i1 %v2_101ac, { 1, 0, 2 }
  uselistorder i1 %v2_10184, { 1, 0, 2 }
  uselistorder i1 %v2_10160, { 1, 0, 2 }
  uselistorder i1 %v2_10138, { 1, 0, 2 }
  uselistorder i1 %v2_10130, { 1, 0 }
  uselistorder i1 %v2_1011c, { 1, 0 }
  uselistorder i1 %v7_100f4, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_100f4, { 2, 0, 1, 3 }
  uselistorder i1 %v7_100e0, { 1, 0, 2 }
  uselistorder i1 %v2_100d8, { 1, 0 }
  uselistorder i1 %v2_100ac, { 1, 0 }
  uselistorder i1 %v7_10088, { 1, 0, 2 }
  uselistorder i32 %.1998, { 2, 3, 8, 11, 7, 6, 10, 5, 4, 9, 0, 1 }
  uselistorder i1 %v7_10070, { 2, 1, 0, 3 }
  uselistorder i1 %v2_10050, { 1, 0, 2 }
  uselistorder i32 %.1997, { 4, 3, 6, 2, 1, 5, 7, 0 }
  uselistorder i1 %v7_10034, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_10014, { 1, 0 }
  uselistorder i1 %v7_fff0, { 1, 0, 2 }
  uselistorder i1 %v2_ffe8, { 1, 0 }
  uselistorder i1 %v2_ffbc, { 1, 0, 2 }
  uselistorder i32 %.1996, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ffa4, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ff88, { 1, 0, 2 }
  uselistorder i32 %.1995, { 3, 2, 0, 1 }
  uselistorder i1 %v2_ff54, { 1, 0, 2 }
  uselistorder i1 %v2_ff4c, { 1, 0 }
  uselistorder i1 %v2_ff1c, { 1, 0 }
  uselistorder i1 %v7_fef8, { 1, 0, 2 }
  uselistorder i1 %v2_fef0, { 1, 0 }
  uselistorder i1 %v7_fecc, { 1, 0, 2 }
  uselistorder i1 %v2_fec4, { 1, 0 }
  uselistorder i1 %v2_fe9c, { 1, 0, 2 }
  uselistorder i32 %.1994, { 1, 0 }
  uselistorder i1 %v7_fe84, { 0, 3, 2, 1 }
  uselistorder i32 %.1993, { 2, 0, 1 }
  uselistorder i1 %v7_fe54, { 0, 3, 2, 1 }
  uselistorder i1 %v2_fe48, { 1, 0, 2 }
  uselistorder i1 %v2_fe20, { 1, 0, 2 }
  uselistorder i1 %v2_fe18, { 1, 0 }
  uselistorder i1 %v2_fdec, { 1, 0, 2 }
  uselistorder i1 %v2_fde4, { 1, 0 }
  uselistorder i1 %v2_fdc4, { 1, 0, 2 }
  uselistorder i1 %v2_fdbc, { 1, 0 }
  uselistorder i1 %v2_fd70, { 1, 0, 2 }
  uselistorder i32 %.1992, { 1, 0 }
  uselistorder i1 %v7_fd48, { 1, 0, 2 }
  uselistorder i1 %v2_fd40, { 1, 0 }
  uselistorder i1 %v2_fd0c, { 1, 0 }
  uselistorder i32 %storemerge1225, { 2, 1, 0 }
  uselistorder i32 %.1991, { 6, 9, 5, 4, 8, 3, 2, 7, 0, 1 }
  uselistorder i1 %v7_fcd4, { 1, 0, 2 }
  uselistorder i1 %v2_fccc, { 1, 0 }
  uselistorder i1 %v2_fcb4, { 1, 0 }
  uselistorder i32 %storemerge1223, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_fc88, { 1, 0, 2 }
  uselistorder i32 %.1990, { 4, 6, 3, 5, 0, 1, 2 }
  uselistorder i32 %.1989, { 3, 5, 2, 4, 0, 1 }
  uselistorder i1 %v7_fc64, { 1, 0, 2 }
  uselistorder i1 %v2_fc58, { 1, 0 }
  uselistorder i1 %v2_fc40, { 1, 0 }
  uselistorder i1 %v2_fc2c, { 1, 0 }
  uselistorder i32 %.1988, { 0, 6, 4, 7, 1, 8, 3, 5, 2 }
  uselistorder i1 %v7_fc00, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1987, { 7, 6, 11, 5, 4, 10, 3, 9, 2, 8, 0, 1 }
  uselistorder i1 %v7_fbe0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.1986, { 7, 6, 10, 5, 4, 9, 0, 3, 2, 8, 11, 12, 1 }
  uselistorder i1 %v7_fb6c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_fb50, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_fb50, { 1, 2, 0, 3 }
  uselistorder i1 %v2_fb30, { 1, 0, 2 }
  uselistorder i1 %v2_faf8, { 1, 0, 2 }
  uselistorder i32 %.1985, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_fab8, { 1, 0, 2 }
  uselistorder i1 %v2_faa4, { 1, 0 }
  uselistorder i1 %v7_fa9c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fa9c, { 1, 0, 2 }
  uselistorder i1 %v2_fa74, { 1, 0, 2 }
  uselistorder i32 %.1983, { 2, 0, 1 }
  uselistorder i32 %v4_fa54, { 1, 0, 2 }
  uselistorder i1 %v2_fa4c, { 1, 0, 2 }
  uselistorder i32 %.1982, { 2, 0, 1 }
  uselistorder i1 %v2_f9f0, { 1, 0, 2 }
  uselistorder i1 %v2_f9d0, { 1, 0, 2 }
  uselistorder i1 %v2_f9a8, { 1, 0 }
  uselistorder i1 %v2_f9a0, { 1, 0, 2 }
  uselistorder i1 %v7_f978, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_f978, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_f958, { 1, 0, 2 }
  uselistorder i1 %v2_f950, { 1, 0, 2 }
  uselistorder i1 %v7_f93c, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f93c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f920, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f920, { 1, 2, 0, 3 }
  uselistorder i1 %v7_f904, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f904, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f8f0, { 0, 3, 2, 1 }
  uselistorder i1 %v7_f8b4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f8b4, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f8a4, { 1, 0 }
  uselistorder i32 %v2_f87c, { 1, 0 }
  uselistorder i32 %v0_f870, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_107fc, { 0, 8, 5, 4, 7, 1, 6, 2, 3, 9 }
  uselistorder i32 %.1979, { 0, 2, 1 }
  uselistorder i1 %v2_f7ec, { 1, 0, 2 }
  uselistorder i32 %.1978, { 0, 4, 2, 3, 5, 6, 1 }
  uselistorder i1 %v2_f7cc, { 1, 0 }
  uselistorder i32 %v2_f7a4, { 1, 0 }
  uselistorder i32 %v1_f9bc, { 1, 0 }
  uselistorder i1 %v2_f790, { 1, 0, 2 }
  uselistorder i32 %v2_f77c, { 1, 0 }
  uselistorder i32 %v2_f760, { 1, 0 }
  uselistorder i32 %v1_f77c, { 2, 0, 1 }
  uselistorder i1 %v2_f74c, { 1, 0, 2 }
  uselistorder i1 %v2_f73c, { 1, 0 }
  uselistorder i1 %v7_f734, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f734, { 1, 0, 2 }
  uselistorder i1 %v2_f720, { 1, 0, 2 }
  uselistorder i1 %v2_f718, { 1, 0 }
  uselistorder i32 %v2_f6f0, { 1, 0 }
  uselistorder i32 %v0_f6e4, { 1, 2, 0 }
  uselistorder i32 %v4_f6c4, { 1, 0, 2 }
  uselistorder i32 %.1974, { 5, 4, 9, 3, 2, 8, 1, 0, 7, 6, 10, 11 }
  uselistorder i1 %v7_f688, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge1205, { 0, 2, 1, 3 }
  uselistorder i32 %.1973, { 2, 3, 0, 1 }
  uselistorder i32 %v2_f648, { 1, 0 }
  uselistorder i32 %v0_10838, { 1, 0, 2 }
  uselistorder i1 %v7_f630, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f630, { 1, 2, 0, 3 }
  uselistorder i32 %v0_fbec, { 0, 2, 1 }
  uselistorder i1 %v2_f60c, { 1, 0, 2 }
  uselistorder i32 %.1972, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.1971, { 1, 2, 3, 7, 0, 8, 4, 9, 5, 10, 6 }
  uselistorder i1 %v7_f5e4, { 0, 3, 2, 1 }
  uselistorder i32 %.1970, { 1, 3, 2, 0 }
  uselistorder i1 %v7_f5c8, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f5c0, { 1, 0 }
  uselistorder i1 %v7_f5b4, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i1 %v2_f5b4, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %.1969, { 2, 1, 3, 0 }
  uselistorder i1 %v7_f594, { 0, 3, 2, 1 }
  uselistorder i32 %.1968, { 0, 2, 1 }
  uselistorder i32 %.1967, { 4, 0, 5, 1, 2, 3 }
  uselistorder i1 %v7_f548, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_f548, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1966, { 2, 3, 0, 5, 4, 6, 1, 7 }
  uselistorder i1 %v7_f53c, { 0, 3, 2, 1 }
  uselistorder i32 %.1965, { 2, 1, 3, 0 }
  uselistorder i1 %v7_f520, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f520, { 1, 0, 2, 3 }
  uselistorder i32 %.1964, { 0, 3, 1, 4, 2 }
  uselistorder i1 %v7_f504, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f504, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f4fc, { 1, 0 }
  uselistorder i1 %v7_f4f0, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f4f0, { 1, 0, 2, 3 }
  uselistorder i32 %.1963, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge1192, { 2, 0, 1, 3 }
  uselistorder i32 %.1962, { 0, 5, 1, 4, 2, 3 }
  uselistorder i1 %v7_f4b4, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f4b4, { 1, 0, 2 }
  uselistorder i1 %v7_f4a4, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f4a4, { 1, 0, 2, 3 }
  uselistorder i32 %.1961, { 0, 2, 1 }
  uselistorder i1 %v7_f498, { 2, 1, 0 }
  uselistorder i1 %v7_f47c, { 1, 0, 2, 3 }
  uselistorder i32 %.1960, { 1, 3, 2, 4, 0, 5 }
  uselistorder i1 %v7_f470, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f468, { 1, 0 }
  uselistorder i1 %v2_f450, { 1, 0 }
  uselistorder i1 %v7_f428, { 1, 0, 2, 3 }
  uselistorder i32 %.1959, { 5, 9, 6, 10, 0, 11, 4, 7, 3, 8, 1, 2 }
  uselistorder i1 %v7_f41c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge1187, { 0, 2, 1, 3 }
  uselistorder i32 %.1958, { 3, 6, 4, 0, 5, 1, 2 }
  uselistorder i1 %v2_f3e0, { 1, 0 }
  uselistorder i32 %storemerge1185, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f3b4, { 0, 3, 2, 1 }
  uselistorder i32 %.1957, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 %.1956, { 0, 3, 1, 2 }
  uselistorder i32 %.1955, { 2, 3, 0, 1 }
  uselistorder i1 %v7_f374, { 2, 1, 0 }
  uselistorder i32 %.1954, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f354, { 1, 0 }
  uselistorder i1 %v2_f340, { 1, 0 }
  uselistorder i1 %v2_f32c, { 1, 0 }
  uselistorder i1 %v7_f30c, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f30c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f304, { 1, 0 }
  uselistorder i1 %v2_f2f0, { 1, 0 }
  uselistorder i32 %.1952, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_f2cc, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i1 %v7_f2b0, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_f2b0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1950, { 3, 8, 4, 7, 5, 6, 0, 1, 2 }
  uselistorder i1 %v7_f298, { 2, 1, 0 }
  uselistorder i1 %v7_f284, { 2, 1, 0 }
  uselistorder i1 %v7_f270, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f270, { 1, 0, 2, 3 }
  uselistorder i32 %.1947, { 1, 0 }
  uselistorder i1 %v7_f250, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_f250, { 1, 0, 2, 3 }
  uselistorder i32 %.1946, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_f244, { 0, 3, 2, 1 }
  uselistorder i32 %.1945, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_f22c, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v1_f1a0, { 0, 193, 203, 192, 197, 198, 200, 199, 194, 195, 196, 202, 188, 189, 191, 190, 185, 186, 187, 204, 181, 182, 184, 183, 177, 178, 180, 179, 173, 174, 176, 175, 169, 170, 172, 171, 165, 166, 168, 167, 162, 163, 164, 201, 158, 159, 161, 160, 154, 155, 157, 156, 149, 148, 147, 146, 145, 144, 143, 142, 1, 141, 140, 139, 138, 151, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 2, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 152, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 4, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 5, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 6, 43, 42, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 150, 29, 28, 27, 26, 25, 24, 23, 22, 8, 153, 21, 20, 19, 18, 17, 16, 15, 14, 13, 9, 12, 11, 10 }
  uselistorder i32 %v1_f19c, { 305, 306, 289, 290, 291, 292, 293, 294, 339, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 340, 307, 308, 309, 310, 311, 312, 338, 313, 314, 337, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 335, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 288, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 287, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 286, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_f190, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_f188, { 187, 188, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f184, { 4, 5, 0, 6, 1, 2, 3, 7 }
  uselistorder i32 %v4_f174, { 1, 0 }
  uselistorder i32 %v0_f164, { 0, 1, 3, 2 }
  uselistorder i32 %v2_f138, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-2036.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_11b2c, { 2, 1, 0 }
  uselistorder i32 %v2_1151c, { 1, 2, 3, 0 }
  uselistorder i32* %v2_11054, { 2, 1, 6, 3, 0, 4, 5, 7, 8 }
  uselistorder i32 %v2_1104c, { 4, 3, 8, 5, 2, 6, 7, 9, 10, 1, 0 }
  uselistorder i32 %v2_1187c, { 1, 2, 0 }
  uselistorder i32 %v2_10e2c, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %v2_f128, { 2, 3, 5, 6, 0, 1, 4, 7, 8 }
  uselistorder i32 %v4_ef6c, { 1, 0 }
  uselistorder i32 %v1_ef6c, { 2, 0, 1 }
  uselistorder i32 %v3_ef38, { 1, 0 }
  uselistorder i32 %v4_ef1c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_ef0c, { 0, 2, 1 }
  uselistorder i32 %v0_eeb0, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v3_ee50, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ee38, { 0, 2, 1 }
  uselistorder i32 %v0_ee20, { 2, 1, 0 }
  uselistorder i32 %v0_edfc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge1250, { 1, 0 }
  uselistorder i32 %v0_ed14, { 3, 2, 1, 0, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-92, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-48, { 1, 4, 5, 3, 6, 2, 7, 0, 8, 9 }
  uselistorder i8* %stack_var_-56, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 10, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 0, 1, 2, 5, 6, 7, 8, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 7, 1, 6, 5, 2, 10, 8, 9, 11, 12, 14, 13 }
  uselistorder i32* %r3.global-to-local, { 39, 6, 7, 8, 9, 10, 11, 12, 13, 14, 69, 15, 16, 17, 40, 576, 41, 42, 43, 44, 562, 577, 578, 579, 580, 0, 1, 2, 3, 4, 5, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 589, 590, 591, 571, 572, 573, 574, 575, 581, 582, 583, 584, 585, 586, 587, 588, 45, 46, 47, 48, 49, 50, 592, 593, 51, 52, 53, 54, 55, 56, 57, 59, 61, 60, 58, 62, 63, 64, 65, 70, 66, 67, 68, 71, 552, 553, 72, 594, 595, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 96, 99, 98, 101, 100, 106, 102, 103, 104, 105, 108, 107, 125, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 128, 129, 132, 131, 223, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 328, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 433, 434, 436, 437, 448, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 465, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 475, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 476, 477, 478, 480, 488, 481, 482, 483, 484, 485, 486, 487, 490, 489, 501, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 505, 502, 503, 504, 506, 507, 508, 509, 510, 511, 514, 512, 513, 515, 516, 517, 518, 521, 519, 520, 522, 523, 524, 525, 527, 526, 528, 535, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551 }
  uselistorder i32* %r2.global-to-local, { 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 18, 118, 29, 30, 114, 119, 0, 1, 2, 19, 20, 22, 21, 23, 25, 24, 26, 28, 27, 111, 113, 112, 115, 117, 116, 123, 125, 124, 120, 121, 122, 31, 32, 33, 34, 35, 36, 37, 126, 127, 38, 39, 40, 41, 42, 44, 45, 128, 43, 46, 47, 48, 53, 49, 50, 51, 52, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r1.global-to-local, { 28, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 104, 105, 100, 101, 0, 1, 2, 44, 45, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 97, 98, 99, 102, 103, 106, 107, 56, 29, 30, 31, 108, 109, 110, 111, 32, 33, 34, 35, 37, 38, 39, 36, 40, 41, 42, 46, 43, 55, 47, 96, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 87, 93, 89, 90, 91, 92, 94, 95 }
  uselistorder i32* %r0.global-to-local, { 194, 193, 195, 11, 10, 78, 77, 13, 12, 14, 15, 16, 18, 17, 19, 20, 21, 22, 24, 23, 26, 25, 27, 28, 30, 29, 31, 33, 32, 34, 36, 35, 37, 79, 39, 187, 189, 188, 80, 82, 81, 169, 168, 171, 170, 172, 173, 190, 1, 0, 2, 4, 3, 6, 5, 7, 8, 9, 110, 41, 40, 42, 38, 43, 44, 45, 46, 48, 47, 50, 49, 52, 51, 53, 54, 55, 56, 58, 57, 60, 59, 62, 61, 63, 64, 65, 66, 68, 67, 70, 69, 72, 71, 73, 75, 157, 158, 160, 159, 162, 161, 164, 163, 165, 166, 167, 175, 174, 177, 176, 181, 178, 179, 180, 197, 196, 199, 198, 183, 182, 184, 185, 186, 192, 191, 85, 83, 201, 200, 202, 204, 203, 111, 205, 206, 207, 93, 156, 84, 87, 86, 88, 89, 90, 92, 91, 94, 99, 95, 96, 97, 98, 76, 101, 100, 74, 102, 103, 105, 104, 106, 108, 107, 109, 112, 113, 115, 114, 117, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 143, 146, 145, 147, 151, 148, 149, 150, 152, 153, 154, 155 }
  uselistorder i32* %ip.global-to-local, { 10, 11, 2, 12, 3, 42, 0, 1, 46, 4, 5, 7, 6, 9, 8, 39, 38, 40, 41, 45, 47, 43, 44, 13, 14, 15, 16, 18, 17, 19, 22, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_z.global-to-local, { 62, 51, 855, 843, 12, 13, 782, 15, 16, 17, 53, 52, 54, 55, 56, 797, 798, 799, 820, 821, 822, 823, 824, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 839, 18, 19, 20, 21, 22, 28, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 50, 45, 46, 47, 48, 49, 783, 784, 785, 786, 787, 793, 788, 789, 790, 791, 792, 794, 795, 796, 800, 801, 806, 802, 803, 804, 805, 807, 808, 809, 841, 810, 816, 811, 812, 813, 814, 815, 817, 818, 819, 840, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 856, 57, 58, 59, 60, 61, 857, 842, 14, 844, 845, 846, 63, 65, 64, 66, 67, 69, 71, 70, 858, 68, 72, 73, 74, 75, 76, 77, 82, 78, 79, 80, 81, 850, 849, 847, 83, 84, 85, 86, 848, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 781, 108, 109, 110, 111, 112, 113, 114, 115, 780, 116, 117, 118, 779, 119, 120, 121, 778, 122, 123, 124, 125, 126, 127, 777, 128, 129, 130, 776, 131, 132, 775, 133, 134, 135, 774, 136, 137, 138, 139, 773, 140, 141, 142, 854, 143, 144, 772, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 0, 160, 161, 162, 163, 771, 164, 165, 166, 167, 168, 770, 169, 170, 171, 172, 173, 174, 175, 769, 176, 177, 768, 178, 179, 180, 767, 181, 182, 766, 183, 184, 185, 765, 186, 187, 764, 188, 189, 190, 191, 192, 763, 193, 194, 195, 762, 196, 197, 761, 198, 199, 200, 760, 201, 202, 203, 204, 205, 759, 206, 207, 208, 758, 209, 210, 757, 211, 212, 213, 756, 214, 215, 755, 216, 217, 218, 754, 219, 220, 753, 221, 222, 223, 752, 224, 225, 226, 227, 751, 228, 229, 230, 231, 750, 232, 233, 749, 234, 235, 236, 237, 748, 238, 239, 240, 747, 241, 242, 746, 243, 244, 245, 745, 246, 247, 248, 249, 744, 250, 251, 252, 253, 743, 254, 255, 256, 257, 258, 742, 259, 260, 261, 262, 263, 741, 264, 265, 266, 740, 267, 268, 269, 270, 271, 272, 739, 273, 274, 738, 275, 276, 737, 277, 278, 736, 279, 280, 735, 281, 282, 283, 284, 734, 285, 286, 287, 733, 288, 289, 732, 290, 291, 292, 293, 294, 731, 295, 296, 297, 298, 299, 730, 300, 301, 302, 303, 304, 305, 306, 729, 307, 308, 728, 309, 310, 311, 727, 312, 313, 726, 314, 315, 316, 725, 317, 318, 724, 319, 320, 321, 322, 723, 323, 324, 325, 326, 722, 327, 328, 329, 330, 721, 331, 332, 333, 720, 334, 335, 719, 336, 337, 338, 339, 340, 341, 718, 342, 343, 717, 344, 345, 346, 716, 347, 348, 349, 350, 351, 715, 352, 353, 354, 355, 356, 714, 357, 358, 359, 713, 360, 361, 362, 363, 712, 364, 365, 711, 366, 367, 368, 369, 370, 710, 371, 372, 373, 374, 709, 375, 376, 377, 708, 378, 379, 707, 380, 381, 382, 706, 383, 384, 385, 386, 705, 387, 388, 389, 390, 704, 391, 392, 703, 393, 394, 395, 396, 397, 702, 398, 399, 400, 401, 402, 403, 404, 405, 701, 406, 407, 408, 700, 409, 410, 699, 411, 412, 413, 698, 414, 415, 416, 417, 697, 418, 419, 696, 420, 421, 422, 423, 424, 695, 425, 426, 427, 428, 429, 430, 694, 431, 432, 433, 434, 693, 435, 436, 437, 692, 438, 439, 691, 440, 441, 442, 443, 867, 444, 445, 866, 446, 447, 865, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 864, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 863, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 862, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 861, 528, 529, 530, 860, 531, 532, 533, 534, 853, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 859, 545, 546, 547, 690, 548, 549, 550, 551, 689, 552, 553, 554, 688, 555, 556, 557, 558, 687, 559, 560, 561, 686, 562, 563, 564, 685, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 852, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 684, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 683, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 682, 608, 609, 681, 610, 611, 612, 613, 614, 615, 616, 617, 680, 618, 619, 620, 621, 622, 623, 624, 679, 625, 626, 678, 627, 628, 677, 629, 630, 631, 676, 632, 633, 675, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 851, 674 }
  uselistorder i1* %cpsr_c.global-to-local, {}
  uselistorder i32 (i32)* @function_1330c, { 2, 1, 0, 3 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_15488.76 to i32), { 0, 2, 1, 3 }
  uselistorder i8 31, { 8, 2, 3, 9, 10, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_15540.223 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_15540.223, { 1, 0 }
  uselistorder i8 58, { 9, 10, 6, 15, 7, 8, 5, 14, 4, 13, 2, 3, 0, 1, 11, 12 }
  uselistorder i8 57, { 9, 10, 6, 13, 7, 8, 5, 12, 4, 11, 2, 3, 0, 1 }
  uselistorder i8 62, { 12, 13, 9, 2, 10, 11, 8, 1, 7, 0, 5, 6, 3, 4 }
  uselistorder i8 61, { 12, 13, 9, 2, 10, 11, 8, 1, 7, 0, 5, 6, 3, 4 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_13470, { 2, 3, 4, 5, 6, 7, 8, 23, 0, 1, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 25, 26, 24, 15, 16, 17, 18, 27, 28, 29, 30 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_11c94, { 9, 8, 37, 36, 13, 38, 35, 34, 33, 32, 14, 12, 11, 10, 7, 6, 5, 31, 30, 29, 39, 28, 27, 26, 25, 2, 1, 0, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_123dc, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_11c68, { 1, 2, 23, 0, 3, 4, 5, 6, 22, 24, 25, 26, 7, 8, 9, 10, 30, 31, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29 }
  uselistorder i32 (i32)* @function_11d4c, { 29, 28, 11, 30, 27, 26, 25, 24, 12, 9, 10, 8, 23, 22, 21, 20, 4, 3, 2, 1, 0, 19, 18, 17, 16, 15, 14, 13, 7, 6, 5 }
  uselistorder i8* @global_var_1dc01.131, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1dc00.130 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1dc00.130 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12e3c, { 1, 0 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 1712, { 1, 0 }
  uselistorder i32 1840, { 2, 0, 1 }
  uselistorder i32 ()* @function_ea90, { 3, 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32, i32)* @function_1349c, { 0, 1, 2, 7, 3, 4, 5, 6, 9, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @function_d114, { 9, 8, 7, 2, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 5120, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_d0b8, { 11, 10, 9, 3, 8, 7, 6, 5, 4, 1, 0, 2 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 200, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 240, { 3, 2, 1, 0 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 104, { 0, 2, 1, 3, 4 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 252, { 2, 0, 1, 3 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 131, { 0, 2, 1, 3 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 208, { 2, 0, 3, 1 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 116, { 2, 0, 1 }
  uselistorder i32 206, { 1, 5, 2, 3, 6, 4, 0 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 160, { 1, 0, 2 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 201, { 1, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 152, { 1, 0, 2 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 156, { 1, 0 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 133, { 1, 2, 3, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 126, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_15524.198 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_154d4.178 to i32), { 0, 10, 1, 11, 2, 3, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_154ac.170 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_154a4.168 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_154d8.166 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1555c.164 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_eb64, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_15544.157 to i32), { 1, 7, 2, 3, 4, 8, 5, 9, 6, 10, 0, 11 }
  uselistorder i8* @global_var_1dbf5.154, { 1, 0 }
  uselistorder i8* @global_var_1dbf4.146, { 1, 0 }
  uselistorder i8** @global_var_1dbd4.141, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1dbd4.141 to i32), { 6, 0, 5, 1, 4, 3, 2 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 65280, { 35, 0, 1, 2, 3, 4, 36, 19, 5, 37, 25, 20, 21, 26, 27, 28, 38, 39, 40, 6, 41, 7, 8, 29, 30, 31, 42, 43, 44, 9, 45, 10, 11, 46, 12, 47, 32, 33, 48, 13, 49, 50, 22, 51, 52, 14, 53, 54, 23, 55, 56, 15, 57, 24, 34, 58, 59, 16, 60, 61, 17, 18 }
  uselistorder i32 ()* @function_e82c, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 16, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 6, 5, 4, 3, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder i32 2048, { 6, 5, 0, 1, 2, 7, 3, 8, 9, 4, 10 }
  uselistorder i32* @global_var_1dc6c.139, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1dc68.137, { 1, 2, 3, 0, 4 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1dc04.124, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @function_12eec, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_e884, { 1, 0 }
  uselistorder i32* @global_var_1dc4c.49, { 4, 5, 1, 2, 3, 6, 7, 8, 9, 10, 0, 11, 15, 12, 13, 14 }
  uselistorder i32 ()* @function_125d0, { 2, 1, 0 }
  uselistorder i32 ()* @function_12c48, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 2, 45, 46, 47, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52 }
  uselistorder label %dec_label_pc_110dc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_110dc.backedge.thread2099, { 9, 4, 8, 2, 7, 3, 6, 1, 5, 0 }
  uselistorder label %dec_label_pc_110dc.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11bec, { 1, 0 }
  uselistorder label %dec_label_pc_11b40, { 1, 0 }
  uselistorder label %dec_label_pc_11aa8, { 2, 1, 0 }
  uselistorder label %bb1939, { 1, 0 }
  uselistorder label %dec_label_pc_11930, { 1, 0 }
  uselistorder label %thread-pre-split688, { 1, 0 }
  uselistorder label %dec_label_pc_118c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_117f4, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_117ec, { 1, 0 }
  uselistorder label %dec_label_pc_11774, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_1168c, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_11684, { 1, 0 }
  uselistorder label %dec_label_pc_115c4, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_115bc, { 1, 0 }
  uselistorder label %dec_label_pc_114fc, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_114f4, { 1, 0 }
  uselistorder label %dec_label_pc_11434, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_1142c, { 1, 0 }
  uselistorder label %dec_label_pc_11380, { 1, 2, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_11378, { 1, 0 }
  uselistorder label %dec_label_pc_112e8, { 1, 0 }
  uselistorder label %dec_label_pc_112cc, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_112c4, { 1, 0 }
  uselistorder label %dec_label_pc_11260, { 2, 1, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_11250, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %bb1903, { 2, 1, 0 }
  uselistorder label %bb1900, { 2, 1, 0 }
  uselistorder label %dec_label_pc_111b0, { 1, 0 }
  uselistorder label %dec_label_pc_111b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11140, { 1, 0 }
  uselistorder label %bb1897, { 1, 0 }
  uselistorder label %dec_label_pc_110f4, { 1, 0 }
  uselistorder label %dec_label_pc_110e4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_110e4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_110d8.loopexit, { 1, 4, 0, 2, 3 }
  uselistorder label %dec_label_pc_11038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10f10, { 1, 7, 8, 4, 5, 0, 6, 2, 3 }
  uselistorder label %dec_label_pc_10ee8, { 1, 0 }
  uselistorder label %bb1894, { 1, 0 }
  uselistorder label %bb1892, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10d58.dec_label_pc_10d58_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10d40.dec_label_pc_10d40_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10d38, { 3, 0, 1, 2 }
  uselistorder label %bb1889, { 1, 0 }
  uselistorder label %dec_label_pc_10d18, { 1, 0 }
  uselistorder label %dec_label_pc_10ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10b90, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10a4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10a2c, { 1, 0 }
  uselistorder label %dec_label_pc_10a18, { 1, 0 }
  uselistorder label %dec_label_pc_10a00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_109dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_109b8, { 1, 2, 0 }
  uselistorder label %thread-pre-split624, { 1, 0 }
  uselistorder label %bb1869, { 1, 0 }
  uselistorder label %dec_label_pc_10974, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10950, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1092c, { 2, 0, 3, 1 }
  uselistorder label %bb1860, { 1, 0 }
  uselistorder label %bb1858, { 1, 0 }
  uselistorder label %dec_label_pc_108f8, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_108d8, { 1, 2, 0, 3 }
  uselistorder label %bb1855, { 1, 0 }
  uselistorder label %dec_label_pc_108bc, { 1, 0 }
  uselistorder label %thread-pre-split596, { 1, 0 }
  uselistorder label %bb1852, { 1, 0 }
  uselistorder label %thread-pre-split595, { 1, 0 }
  uselistorder label %bb1849, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1844, { 1, 0 }
  uselistorder label %thread-pre-split591, { 1, 0 }
  uselistorder label %bb1839, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107ec, { 1, 2, 0 }
  uselistorder label %thread-pre-split584, { 1, 0 }
  uselistorder label %bb1831, { 1, 0 }
  uselistorder label %dec_label_pc_107a8, { 2, 1, 3, 0 }
  uselistorder label %bb1828, { 1, 0 }
  uselistorder label %bb1826, { 1, 0 }
  uselistorder label %dec_label_pc_10780, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1075c, { 2, 0, 3, 1 }
  uselistorder label %bb1821, { 1, 0 }
  uselistorder label %bb1819, { 1, 0 }
  uselistorder label %dec_label_pc_10728, { 2, 0, 3, 1 }
  uselistorder label %bb1816, { 1, 0 }
  uselistorder label %bb1814, { 1, 0 }
  uselistorder label %dec_label_pc_106f4, { 2, 1, 3, 0 }
  uselistorder label %bb1811, { 1, 0 }
  uselistorder label %bb1809, { 1, 0 }
  uselistorder label %dec_label_pc_106cc, { 2, 0, 3, 1 }
  uselistorder label %bb1805, { 1, 0 }
  uselistorder label %bb1803, { 1, 0 }
  uselistorder label %dec_label_pc_10698, { 2, 0, 3, 1 }
  uselistorder label %bb1800, { 1, 0 }
  uselistorder label %bb1798, { 1, 0 }
  uselistorder label %dec_label_pc_10664, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10648, { 2, 0, 3, 1 }
  uselistorder label %bb1794, { 1, 0 }
  uselistorder label %bb1792, { 1, 0 }
  uselistorder label %dec_label_pc_10614, { 2, 0, 3, 1 }
  uselistorder label %bb1789, { 1, 0 }
  uselistorder label %bb1787, { 1, 0 }
  uselistorder label %dec_label_pc_105e0, { 2, 0, 3, 1 }
  uselistorder label %bb1784, { 1, 0 }
  uselistorder label %bb1782, { 1, 0 }
  uselistorder label %dec_label_pc_105b0, { 2, 0, 3, 1 }
  uselistorder label %bb1779, { 1, 0 }
  uselistorder label %bb1777, { 1, 0 }
  uselistorder label %dec_label_pc_10580, { 1, 2, 0 }
  uselistorder label %bb1775, { 1, 0 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %dec_label_pc_10558, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10534, { 1, 0, 2 }
  uselistorder label %bb1769, { 1, 0 }
  uselistorder label %bb1767, { 1, 0 }
  uselistorder label %dec_label_pc_1050c, { 2, 0, 3, 1 }
  uselistorder label %bb1764, { 1, 0 }
  uselistorder label %bb1762, { 1, 0 }
  uselistorder label %dec_label_pc_104d8, { 2, 0, 3, 1 }
  uselistorder label %bb1759, { 1, 0 }
  uselistorder label %bb1757, { 1, 0 }
  uselistorder label %dec_label_pc_104a4, { 1, 2, 0 }
  uselistorder label %bb1755, { 1, 0 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %dec_label_pc_10478, { 1, 0 }
  uselistorder label %dec_label_pc_1046c, { 1, 0 }
  uselistorder label %dec_label_pc_1044c, { 1, 0 }
  uselistorder label %dec_label_pc_10434, { 1, 0 }
  uselistorder label %dec_label_pc_10408, { 1, 0 }
  uselistorder label %dec_label_pc_103fc, { 1, 0 }
  uselistorder label %dec_label_pc_103dc, { 1, 0 }
  uselistorder label %dec_label_pc_103a4, { 1, 0 }
  uselistorder label %dec_label_pc_10398, { 1, 0 }
  uselistorder label %dec_label_pc_10380, { 1, 0 }
  uselistorder label %dec_label_pc_1036c, { 1, 0 }
  uselistorder label %dec_label_pc_10354, { 1, 0 }
  uselistorder label %dec_label_pc_1033c, { 1, 0, 2 }
  uselistorder label %bb1742, { 1, 0 }
  uselistorder label %bb1740, { 1, 0 }
  uselistorder label %dec_label_pc_10308, { 2, 0, 3, 1 }
  uselistorder label %bb1735, { 1, 0 }
  uselistorder label %bb1733, { 1, 0 }
  uselistorder label %dec_label_pc_102d8, { 2, 1, 3, 0 }
  uselistorder label %bb1730, { 1, 0 }
  uselistorder label %bb1728, { 1, 0 }
  uselistorder label %dec_label_pc_102a4, { 2, 1, 3, 0 }
  uselistorder label %bb1722, { 1, 0 }
  uselistorder label %bb1720, { 1, 0 }
  uselistorder label %dec_label_pc_1027c, { 2, 1, 3, 0 }
  uselistorder label %bb1716, { 1, 0 }
  uselistorder label %bb1714, { 1, 0 }
  uselistorder label %dec_label_pc_10254, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10230, { 2, 0, 3, 1 }
  uselistorder label %bb1709, { 1, 0 }
  uselistorder label %bb1707, { 1, 0 }
  uselistorder label %dec_label_pc_101fc, { 2, 0, 3, 1 }
  uselistorder label %bb1704, { 1, 0 }
  uselistorder label %bb1702, { 1, 0 }
  uselistorder label %dec_label_pc_101c8, { 1, 0, 2 }
  uselistorder label %bb1699, { 1, 0 }
  uselistorder label %bb1697, { 1, 0 }
  uselistorder label %dec_label_pc_101a0, { 1, 0, 2 }
  uselistorder label %bb1694, { 1, 0 }
  uselistorder label %bb1692, { 1, 0 }
  uselistorder label %dec_label_pc_1017c, { 1, 0, 2 }
  uselistorder label %bb1689, { 1, 0 }
  uselistorder label %bb1687, { 1, 0 }
  uselistorder label %dec_label_pc_10154, { 2, 0, 3, 1 }
  uselistorder label %bb1684, { 1, 0 }
  uselistorder label %bb1682, { 1, 0 }
  uselistorder label %dec_label_pc_10124, { 1, 0 }
  uselistorder label %dec_label_pc_1010c, { 1, 0 }
  uselistorder label %dec_label_pc_100f4, { 1, 2, 0 }
  uselistorder label %bb1677, { 1, 0 }
  uselistorder label %bb1675, { 1, 0 }
  uselistorder label %dec_label_pc_100cc, { 2, 0, 3, 1 }
  uselistorder label %bb1672, { 1, 0 }
  uselistorder label %bb1670, { 1, 0 }
  uselistorder label %bb1668, { 1, 0 }
  uselistorder label %dec_label_pc_1006c, { 2, 1, 3, 0 }
  uselistorder label %bb1663, { 1, 0 }
  uselistorder label %bb1661, { 1, 0 }
  uselistorder label %dec_label_pc_10034, { 2, 0, 3, 1 }
  uselistorder label %bb1655, { 1, 0 }
  uselistorder label %dec_label_pc_10004, { 1, 2, 0 }
  uselistorder label %bb1653, { 1, 0 }
  uselistorder label %bb1651, { 1, 0 }
  uselistorder label %dec_label_pc_ffd8, { 2, 1, 3, 0 }
  uselistorder label %bb1648, { 1, 0 }
  uselistorder label %bb1646, { 1, 0 }
  uselistorder label %dec_label_pc_ffa4, { 1, 0, 2 }
  uselistorder label %bb1640, { 1, 0 }
  uselistorder label %bb1638, { 1, 0 }
  uselistorder label %dec_label_pc_ff70, { 2, 0, 3, 1 }
  uselistorder label %bb1633, { 1, 0 }
  uselistorder label %bb1631, { 1, 0 }
  uselistorder label %dec_label_pc_ff3c, { 2, 0, 3, 1 }
  uselistorder label %bb1628, { 1, 0 }
  uselistorder label %dec_label_pc_ff0c, { 1, 2, 0 }
  uselistorder label %bb1626, { 1, 0 }
  uselistorder label %bb1624, { 1, 0 }
  uselistorder label %dec_label_pc_fee0, { 1, 2, 0 }
  uselistorder label %bb1622, { 1, 0 }
  uselistorder label %bb1620, { 1, 0 }
  uselistorder label %dec_label_pc_feb8, { 2, 1, 3, 0 }
  uselistorder label %bb1617, { 1, 0 }
  uselistorder label %bb1615, { 1, 0 }
  uselistorder label %dec_label_pc_fe84, { 2, 1, 3, 0 }
  uselistorder label %bb1609, { 1, 0 }
  uselistorder label %dec_label_pc_fe54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fe3c, { 2, 0, 3, 1 }
  uselistorder label %bb1602, { 1, 0 }
  uselistorder label %bb1600, { 1, 0 }
  uselistorder label %dec_label_pc_fe08, { 2, 0, 3, 1 }
  uselistorder label %bb1597, { 1, 0 }
  uselistorder label %bb1595, { 1, 0 }
  uselistorder label %dec_label_pc_fdd4, { 1, 2, 0 }
  uselistorder label %bb1593, { 1, 0 }
  uselistorder label %dec_label_pc_fdb0, { 2, 1, 3, 0 }
  uselistorder label %bb1590, { 1, 0 }
  uselistorder label %dec_label_pc_fd8c, { 1, 0, 2 }
  uselistorder label %bb1586, { 1, 0 }
  uselistorder label %bb1584, { 1, 0 }
  uselistorder label %dec_label_pc_fd5c, { 1, 2, 0 }
  uselistorder label %bb1580, { 1, 0 }
  uselistorder label %bb1578, { 1, 0 }
  uselistorder label %dec_label_pc_fd14, { 1, 0 }
  uselistorder label %dec_label_pc_fcd4, { 1, 0 }
  uselistorder label %dec_label_pc_fcbc, { 1, 0 }
  uselistorder label %dec_label_pc_fc60, { 1, 0 }
  uselistorder label %dec_label_pc_fc48, { 1, 0 }
  uselistorder label %dec_label_pc_fc34, { 1, 0 }
  uselistorder label %dec_label_pc_fc1c, { 1, 0 }
  uselistorder label %thread-pre-split212, { 1, 0 }
  uselistorder label %bb1560, { 1, 0 }
  uselistorder label %dec_label_pc_fbbc, { 1, 2, 0 }
  uselistorder label %thread-pre-split207, { 1, 0 }
  uselistorder label %bb1557, { 1, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1552, { 1, 0 }
  uselistorder label %thread-pre-split204, { 1, 0 }
  uselistorder label %bb1549, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1546, { 1, 0 }
  uselistorder label %thread-pre-split201, { 1, 0 }
  uselistorder label %bb1541, { 1, 0 }
  uselistorder label %dec_label_pc_fab4, { 1, 2, 0 }
  uselistorder label %thread-pre-split195, { 1, 0 }
  uselistorder label %bb1535, { 1, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1530, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1525, { 1, 0 }
  uselistorder label %thread-pre-split190, { 1, 0 }
  uselistorder label %bb1522, { 1, 0 }
  uselistorder label %thread-pre-split189, { 1, 0 }
  uselistorder label %bb1519, { 1, 0 }
  uselistorder label %dec_label_pc_f9b8, { 1, 2, 0 }
  uselistorder label %thread-pre-split183, { 1, 0 }
  uselistorder label %bb1513, { 1, 0 }
  uselistorder label %thread-pre-split182, { 1, 0 }
  uselistorder label %bb1510, { 1, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1507, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1504, { 1, 0 }
  uselistorder label %thread-pre-split179, { 1, 0 }
  uselistorder label %bb1501, { 1, 0 }
  uselistorder label %bb1499, { 1, 0 }
  uselistorder label %bb1497, { 1, 0 }
  uselistorder label %thread-pre-split178, { 1, 0 }
  uselistorder label %bb1494, { 1, 0 }
  uselistorder label %dec_label_pc_f8b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f890, { 1, 2, 0 }
  uselistorder label %bb1489, { 1, 0 }
  uselistorder label %bb1487, { 1, 0 }
  uselistorder label %dec_label_pc_f864, { 1, 2, 0 }
  uselistorder label %bb1484, { 1, 0 }
  uselistorder label %thread-pre-split167, { 1, 0 }
  uselistorder label %bb1481, { 1, 0 }
  uselistorder label %thread-pre-split165, { 1, 0 }
  uselistorder label %bb1476, { 1, 0 }
  uselistorder label %dec_label_pc_f7dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f7b8, { 1, 2, 0 }
  uselistorder label %bb1469, { 1, 0 }
  uselistorder label %bb1467, { 1, 0 }
  uselistorder label %dec_label_pc_f790, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f774, { 1, 2, 0 }
  uselistorder label %bb1465, { 1, 0 }
  uselistorder label %bb1463, { 1, 0 }
  uselistorder label %dec_label_pc_f74c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f728, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f704, { 1, 2, 0 }
  uselistorder label %bb1455, { 1, 0 }
  uselistorder label %bb1453, { 1, 0 }
  uselistorder label %thread-pre-split132, { 1, 0 }
  uselistorder label %bb1450, { 1, 0 }
  uselistorder label %thread-pre-split131, { 1, 0 }
  uselistorder label %bb1447, { 1, 0 }
  uselistorder label %dec_label_pc_f660, { 1, 2, 0 }
  uselistorder label %bb1438, { 1, 0 }
  uselistorder label %bb1436, { 1, 0 }
  uselistorder label %bb1434, { 1, 0 }
  uselistorder label %bb1432, { 1, 0 }
  uselistorder label %dec_label_pc_f600, { 1, 0 }
  uselistorder label %dec_label_pc_f5e4, { 1, 0 }
  uselistorder label %dec_label_pc_f5c8, { 1, 0 }
  uselistorder label %dec_label_pc_f5b0, { 1, 0 }
  uselistorder label %dec_label_pc_f558, { 1, 0 }
  uselistorder label %dec_label_pc_f53c, { 1, 0 }
  uselistorder label %dec_label_pc_f520, { 1, 0 }
  uselistorder label %dec_label_pc_f504, { 1, 0 }
  uselistorder label %dec_label_pc_f4b4, { 1, 0 }
  uselistorder label %dec_label_pc_f498, { 1, 0 }
  uselistorder label %dec_label_pc_f48c, { 1, 0 }
  uselistorder label %dec_label_pc_f470, { 1, 0 }
  uselistorder label %dec_label_pc_f458, { 1, 0 }
  uselistorder label %dec_label_pc_f438, { 1, 0 }
  uselistorder label %dec_label_pc_f3f4, { 1, 0 }
  uselistorder label %dec_label_pc_f3e8, { 1, 0 }
  uselistorder label %dec_label_pc_f390, { 1, 0 }
  uselistorder label %dec_label_pc_f35c, { 1, 0 }
  uselistorder label %dec_label_pc_f348, { 1, 0 }
  uselistorder label %dec_label_pc_f334, { 1, 0 }
  uselistorder label %dec_label_pc_f30c, { 1, 0 }
  uselistorder label %dec_label_pc_f2f8, { 1, 0 }
  uselistorder label %dec_label_pc_f2e4, { 1, 0 }
  uselistorder label %dec_label_pc_f2cc, { 1, 0 }
  uselistorder label %dec_label_pc_f2b0, { 1, 0 }
  uselistorder label %dec_label_pc_f25c, { 1, 0 }
  uselistorder label %dec_label_pc_f244, { 1, 0 }
  uselistorder label %bb1339, { 1, 0 }
  uselistorder label %dec_label_pc_f184, { 11, 117, 0, 12, 118, 119, 13, 120, 121, 14, 122, 123, 124, 125, 15, 126, 16, 17, 127, 128, 18, 129, 19, 130, 131, 132, 20, 133, 21, 22, 23, 24, 25, 134, 26, 27, 28, 29, 30, 135, 31, 32, 33, 34, 136, 35, 36, 137, 37, 38, 138, 39, 40, 41, 42, 43, 139, 44, 45, 46, 47, 48, 49, 50, 51, 52, 140, 53, 54, 55, 56, 57, 58, 59, 141, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 142, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 91, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 92, 180, 181, 182, 93, 183, 184, 185, 186, 94, 187, 95, 96, 188, 189, 190, 97, 98, 99, 191, 192, 193, 100, 101, 102, 194, 103, 195, 104, 105, 106, 196, 107, 108, 109, 110, 111, 112, 113, 197, 198, 199, 114, 115, 116, 200, 201, 202, 203, 1, 204, 2, 205, 3, 206, 4, 207, 5, 208, 6, 209, 7, 210, 8, 211, 9, 212, 10, 213, 214 }
  uselistorder label %dec_label_pc_eeb0, { 1, 2, 0 }
}

define i32 @function_11c68(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11c68:
  store i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32* @ip, align 4
  %v3_11c6c = mul i32 %arg1, 8
  %v2_11c70 = add i32 %v3_11c6c, ptrtoint (i32* @global_var_1dc78.230 to i32)
  %v2_11c74 = icmp eq i32* %arg2, null
  br i1 %v2_11c74, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11c68
  %v3_11c8011 = inttoptr i32 %v2_11c70 to i32*
  %v4_11c8012 = load i32, i32* %v3_11c8011, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_11c68
  %v2_11c78 = add i32 %v3_11c6c, add (i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32 5)
  %v3_11c78 = inttoptr i32 %v2_11c78 to i8*
  %v4_11c78 = load i8, i8* %v3_11c78, align 1
  %v5_11c78 = zext i8 %v4_11c78 to i32
  store i32 %v5_11c78, i32* @r2, align 4
  %v2_11c7c = add i32 %v3_11c6c, add (i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32 4)
  %v3_11c7c = inttoptr i32 %v2_11c7c to i8*
  %v4_11c7c = load i8, i8* %v3_11c7c, align 4
  %v5_11c7c = zext i8 %v4_11c7c to i32
  %v3_11c80 = inttoptr i32 %v2_11c70 to i32*
  %v4_11c80 = load i32, i32* %v3_11c80, align 4
  %v5_11c84 = mul nuw nsw i32 %v5_11c78, 256
  %v6_11c84 = or i32 %v5_11c7c, %v5_11c84
  store i32 %v6_11c84, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_11c80714 = phi i32 [ %v4_11c8012, %.thread ], [ %v4_11c80, %bb ]
  ret i32 %v4_11c80714

; uselistorder directives
  uselistorder i32 %v2_11c70, { 1, 0 }
  uselistorder i32 %v3_11c6c, { 2, 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_11c94(i32 %arg1) local_unnamed_addr {
dec_label_pc_11c94:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11c94 = mul i32 %arg1, 8
  %v3_11c98 = load i32, i32* @r4, align 4
  store i32 %v3_11c98, i32* %stack_var_-20, align 4
  %v3_11ca8 = and i32 %v3_11c94, 2040
  %v2_11cac = add i32 %v3_11ca8, ptrtoint (i32* @global_var_1dc78.230 to i32)
  store i32 %v2_11cac, i32* @lr, align 4
  %v1_11cb4 = add i32 %v3_11ca8, add (i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32 4)
  store i32 %v1_11cb4, i32* %r7.global-to-local, align 4
  %v2_11cb8 = load i32, i32* @global_var_1da48.233, align 4
  store i32 %v2_11cb8, i32* @r2, align 4
  %v2_11cbc = inttoptr i32 %v1_11cb4 to i8*
  %v3_11cbc = load i8, i8* %v2_11cbc, align 4
  %v4_11cbc = zext i8 %v3_11cbc to i32
  store i32 %v4_11cbc, i32* @r1, align 4
  %v1_11cc0 = add i32 %v3_11ca8, add (i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32 5)
  %v2_11cc0 = inttoptr i32 %v1_11cc0 to i8*
  %v3_11cc0 = load i8, i8* %v2_11cc0, align 1
  %v4_11cc0 = zext i8 %v3_11cc0 to i32
  %v3_11cc4 = udiv i32 %v2_11cb8, 256
  %v4_11cc8 = mul nuw nsw i32 %v4_11cc0, 256
  %v5_11cc8 = or i32 %v4_11cc8, %v4_11cbc
  %v7_11cc8 = icmp eq i32 %v5_11cc8, 0
  store i1 %v7_11cc8, i1* @cpsr_z, align 1
  %v3_11ccc = udiv i32 %v2_11cb8, 65536
  %v1_11cd0 = urem i32 %v3_11cc4, 256
  store i32 %v1_11cd0, i32* %r6.global-to-local, align 4
  %v1_11cd4 = urem i32 %v3_11ccc, 256
  store i32 %v1_11cd4, i32* %r5.global-to-local, align 4
  %v3_11cd8 = udiv i32 %v2_11cb8, 16777216
  store i32 %v3_11cd8, i32* %r4.global-to-local, align 4
  %v1_11cdc = urem i32 %v2_11cb8, 256
  br i1 %v7_11cc8, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11c94
  store i32 %v3_11c98, i32* @r4, align 4
  ret i32 %v1_11cdc

bb8:                                              ; preds = %dec_label_pc_11c94
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11ce8, %bb8
  %v2_11cf4 = phi i32 [ %v1_11d30, %dec_label_pc_11ce8 ], [ 0, %bb8 ]
  %v0_11ce8 = phi i32 [ %v0_11d28, %dec_label_pc_11ce8 ], [ %v2_11cac, %bb8 ]
  %v1_11ce8 = inttoptr i32 %v0_11ce8 to i32*
  %v2_11ce8 = load i32, i32* %v1_11ce8, align 4
  %v2_11cec = add i32 %v2_11ce8, %v2_11cf4
  %v3_11cec = inttoptr i32 %v2_11cec to i8*
  %v4_11cec = load i8, i8* %v3_11cec, align 1
  %v6_11cec = zext i8 %v4_11cec to i32
  %v2_11cf0 = xor i32 %v6_11cec, %v1_11cdc
  %v1_11cf4 = trunc i32 %v2_11cf0 to i8
  store i8 %v1_11cf4, i8* %v3_11cec, align 1
  %v0_11cf8 = load i32, i32* @lr, align 4
  %v1_11cf8 = inttoptr i32 %v0_11cf8 to i32*
  %v2_11cf8 = load i32, i32* %v1_11cf8, align 4
  %v0_11cfc = load i32, i32* @ip, align 4
  %v2_11cfc = add i32 %v0_11cfc, %v2_11cf8
  %v3_11cfc = inttoptr i32 %v2_11cfc to i8*
  %v4_11cfc = load i8, i8* %v3_11cfc, align 1
  %v6_11cfc = zext i8 %v4_11cfc to i32
  %v0_11d00 = load i32, i32* %r6.global-to-local, align 4
  %v2_11d00 = xor i32 %v0_11d00, %v6_11cfc
  %v1_11d04 = trunc i32 %v2_11d00 to i8
  store i8 %v1_11d04, i8* %v3_11cfc, align 1
  %v0_11d08 = load i32, i32* @lr, align 4
  %v1_11d08 = inttoptr i32 %v0_11d08 to i32*
  %v2_11d08 = load i32, i32* %v1_11d08, align 4
  %v0_11d0c = load i32, i32* @ip, align 4
  %v2_11d0c = add i32 %v0_11d0c, %v2_11d08
  %v3_11d0c = inttoptr i32 %v2_11d0c to i8*
  %v4_11d0c = load i8, i8* %v3_11d0c, align 1
  %v6_11d0c = zext i8 %v4_11d0c to i32
  %v0_11d10 = load i32, i32* %r5.global-to-local, align 4
  %v2_11d10 = xor i32 %v0_11d10, %v6_11d0c
  %v1_11d14 = trunc i32 %v2_11d10 to i8
  store i8 %v1_11d14, i8* %v3_11d0c, align 1
  %v0_11d18 = load i32, i32* @lr, align 4
  %v1_11d18 = inttoptr i32 %v0_11d18 to i32*
  %v2_11d18 = load i32, i32* %v1_11d18, align 4
  store i32 %v2_11d18, i32* @r1, align 4
  %v0_11d1c = load i32, i32* @ip, align 4
  %v2_11d1c = add i32 %v0_11d1c, %v2_11d18
  %v3_11d1c = inttoptr i32 %v2_11d1c to i8*
  %v4_11d1c = load i8, i8* %v3_11d1c, align 1
  %v6_11d1c = zext i8 %v4_11d1c to i32
  %v0_11d20 = load i32, i32* %r4.global-to-local, align 4
  %v2_11d20 = xor i32 %v0_11d20, %v6_11d1c
  %v1_11d24 = trunc i32 %v2_11d20 to i8
  store i8 %v1_11d24, i8* %v3_11d1c, align 1
  %v0_11d28 = load i32, i32* @lr, align 4
  %v1_11d28 = add i32 %v0_11d28, 4
  %v2_11d28 = inttoptr i32 %v1_11d28 to i8*
  %v3_11d28 = load i8, i8* %v2_11d28, align 1
  %v4_11d28 = zext i8 %v3_11d28 to i32
  %v0_11d2c = load i32, i32* %r7.global-to-local, align 4
  %v1_11d2c = add i32 %v0_11d2c, 1
  %v2_11d2c = inttoptr i32 %v1_11d2c to i8*
  %v3_11d2c = load i8, i8* %v2_11d2c, align 1
  %v4_11d2c = zext i8 %v3_11d2c to i32
  %v0_11d30 = load i32, i32* @ip, align 4
  %v1_11d30 = add i32 %v0_11d30, 1
  store i32 %v1_11d30, i32* @ip, align 4
  %v4_11d34 = mul nuw nsw i32 %v4_11d2c, 256
  %v5_11d34 = or i32 %v4_11d34, %v4_11d28
  store i32 %v5_11d34, i32* @r2, align 4
  %v9_11d38 = icmp eq i32 %v5_11d34, %v1_11d30
  store i1 %v9_11d38, i1* @cpsr_z, align 1
  %v8_11d3c = icmp sgt i32 %v5_11d34, %v1_11d30
  br i1 %v8_11d3c, label %dec_label_pc_11ce8, label %dec_label_pc_11d40

dec_label_pc_11d40:                               ; preds = %dec_label_pc_11ce8
  %v2_11d40 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11d40, i32* @r4, align 4
  ret i32 %v1_11cdc

; uselistorder directives
  uselistorder i32 %v1_11d30, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11d28, { 1, 0 }
  uselistorder i32 %v1_11cdc, { 1, 2, 0 }
  uselistorder i32 %v2_11cb8, { 3, 0, 1, 2, 4 }
}

define i32 @function_11d4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d4c:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11d4c = mul i32 %arg1, 8
  %v3_11d50 = load i32, i32* @r4, align 4
  store i32 %v3_11d50, i32* %stack_var_-20, align 4
  %v3_11d60 = and i32 %v3_11d4c, 2040
  %v2_11d64 = add i32 %v3_11d60, ptrtoint (i32* @global_var_1dc78.230 to i32)
  store i32 %v2_11d64, i32* @lr, align 4
  %v1_11d6c = add i32 %v3_11d60, add (i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32 4)
  store i32 %v1_11d6c, i32* %r7.global-to-local, align 4
  %v2_11d70 = load i32, i32* @global_var_1da48.233, align 4
  store i32 %v2_11d70, i32* @r2, align 4
  %v2_11d74 = inttoptr i32 %v1_11d6c to i8*
  %v3_11d74 = load i8, i8* %v2_11d74, align 4
  %v4_11d74 = zext i8 %v3_11d74 to i32
  %v1_11d78 = add i32 %v3_11d60, add (i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32 5)
  %v2_11d78 = inttoptr i32 %v1_11d78 to i8*
  %v3_11d78 = load i8, i8* %v2_11d78, align 1
  %v4_11d78 = zext i8 %v3_11d78 to i32
  %v3_11d7c = udiv i32 %v2_11d70, 256
  %v4_11d80 = mul nuw nsw i32 %v4_11d78, 256
  %v5_11d80 = or i32 %v4_11d80, %v4_11d74
  %v7_11d80 = icmp eq i32 %v5_11d80, 0
  %v3_11d84 = udiv i32 %v2_11d70, 65536
  %v1_11d88 = urem i32 %v3_11d7c, 256
  store i32 %v1_11d88, i32* %r6.global-to-local, align 4
  %v1_11d8c = urem i32 %v3_11d84, 256
  store i32 %v1_11d8c, i32* %r5.global-to-local, align 4
  %v3_11d90 = udiv i32 %v2_11d70, 16777216
  store i32 %v3_11d90, i32* %r4.global-to-local, align 4
  %v1_11d94 = urem i32 %v2_11d70, 256
  br i1 %v7_11d80, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11d4c
  store i32 %v3_11d50, i32* @r4, align 4
  ret i32 %v1_11d94

bb8:                                              ; preds = %dec_label_pc_11d4c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11da0

dec_label_pc_11da0:                               ; preds = %dec_label_pc_11da0, %bb8
  %v2_11dac = phi i32 [ %v1_11de8, %dec_label_pc_11da0 ], [ 0, %bb8 ]
  %v0_11da0 = phi i32 [ %v0_11de0, %dec_label_pc_11da0 ], [ %v2_11d64, %bb8 ]
  %v1_11da0 = inttoptr i32 %v0_11da0 to i32*
  %v2_11da0 = load i32, i32* %v1_11da0, align 4
  %v2_11da4 = add i32 %v2_11da0, %v2_11dac
  %v3_11da4 = inttoptr i32 %v2_11da4 to i8*
  %v4_11da4 = load i8, i8* %v3_11da4, align 1
  %v6_11da4 = zext i8 %v4_11da4 to i32
  %v2_11da8 = xor i32 %v6_11da4, %v1_11d94
  %v1_11dac = trunc i32 %v2_11da8 to i8
  store i8 %v1_11dac, i8* %v3_11da4, align 1
  %v0_11db0 = load i32, i32* @lr, align 4
  %v1_11db0 = inttoptr i32 %v0_11db0 to i32*
  %v2_11db0 = load i32, i32* %v1_11db0, align 4
  %v0_11db4 = load i32, i32* %ip.global-to-local, align 4
  %v2_11db4 = add i32 %v0_11db4, %v2_11db0
  %v3_11db4 = inttoptr i32 %v2_11db4 to i8*
  %v4_11db4 = load i8, i8* %v3_11db4, align 1
  %v6_11db4 = zext i8 %v4_11db4 to i32
  %v0_11db8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11db8 = xor i32 %v0_11db8, %v6_11db4
  %v1_11dbc = trunc i32 %v2_11db8 to i8
  store i8 %v1_11dbc, i8* %v3_11db4, align 1
  %v0_11dc0 = load i32, i32* @lr, align 4
  %v1_11dc0 = inttoptr i32 %v0_11dc0 to i32*
  %v2_11dc0 = load i32, i32* %v1_11dc0, align 4
  %v0_11dc4 = load i32, i32* %ip.global-to-local, align 4
  %v2_11dc4 = add i32 %v0_11dc4, %v2_11dc0
  %v3_11dc4 = inttoptr i32 %v2_11dc4 to i8*
  %v4_11dc4 = load i8, i8* %v3_11dc4, align 1
  %v6_11dc4 = zext i8 %v4_11dc4 to i32
  %v0_11dc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_11dc8 = xor i32 %v0_11dc8, %v6_11dc4
  %v1_11dcc = trunc i32 %v2_11dc8 to i8
  store i8 %v1_11dcc, i8* %v3_11dc4, align 1
  %v0_11dd0 = load i32, i32* @lr, align 4
  %v1_11dd0 = inttoptr i32 %v0_11dd0 to i32*
  %v2_11dd0 = load i32, i32* %v1_11dd0, align 4
  %v0_11dd4 = load i32, i32* %ip.global-to-local, align 4
  %v2_11dd4 = add i32 %v0_11dd4, %v2_11dd0
  %v3_11dd4 = inttoptr i32 %v2_11dd4 to i8*
  %v4_11dd4 = load i8, i8* %v3_11dd4, align 1
  %v6_11dd4 = zext i8 %v4_11dd4 to i32
  %v0_11dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_11dd8 = xor i32 %v0_11dd8, %v6_11dd4
  %v1_11ddc = trunc i32 %v2_11dd8 to i8
  store i8 %v1_11ddc, i8* %v3_11dd4, align 1
  %v0_11de0 = load i32, i32* @lr, align 4
  %v1_11de0 = add i32 %v0_11de0, 4
  %v2_11de0 = inttoptr i32 %v1_11de0 to i8*
  %v3_11de0 = load i8, i8* %v2_11de0, align 1
  %v4_11de0 = zext i8 %v3_11de0 to i32
  %v0_11de4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11de4 = add i32 %v0_11de4, 1
  %v2_11de4 = inttoptr i32 %v1_11de4 to i8*
  %v3_11de4 = load i8, i8* %v2_11de4, align 1
  %v4_11de4 = zext i8 %v3_11de4 to i32
  %v0_11de8 = load i32, i32* %ip.global-to-local, align 4
  %v1_11de8 = add i32 %v0_11de8, 1
  store i32 %v1_11de8, i32* %ip.global-to-local, align 4
  %v4_11dec = mul nuw nsw i32 %v4_11de4, 256
  %v5_11dec = or i32 %v4_11dec, %v4_11de0
  store i32 %v5_11dec, i32* @r2, align 4
  %v8_11df4 = icmp sgt i32 %v5_11dec, %v1_11de8
  br i1 %v8_11df4, label %dec_label_pc_11da0, label %dec_label_pc_11df8

dec_label_pc_11df8:                               ; preds = %dec_label_pc_11da0
  %v2_11df8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11df8, i32* @r4, align 4
  ret i32 %v1_11d94

; uselistorder directives
  uselistorder i32 %v1_11de8, { 1, 2, 0 }
  uselistorder i32 %v0_11de0, { 1, 0 }
  uselistorder i32 %v1_11d94, { 1, 2, 0 }
  uselistorder i32 %v2_11d70, { 3, 0, 1, 2, 4 }
}

define i32 @function_11e04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11e04:
  %fp.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11e04 = load i32, i32* @r4, align 4
  store i32 %v3_11e04, i32* %stack_var_-36, align 4
  %v9_11e04 = load i32, i32* @r6, align 4
  %v12_11e04 = load i32, i32* @r7, align 4
  %v1_11e0c = call i32 @function_13698(i32 2)
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1dc78.230 to i32), i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v1_11e0c, i32* @r7, align 4
  %v4_11e28 = call i32 @function_12394(i32 %v1_11e0c, i32 ptrtoint ([3 x i8]* @global_var_15570.238 to i32), i32 2)
  %v0_11e2c = load i32, i32* @r5, align 4
  %v0_11e30 = load i32, i32* @r7, align 4
  store i32 %v0_11e30, i32* @global_var_1dc80.239, align 4
  %v1_11e34 = trunc i32 %v0_11e2c to i8
  store i8 %v1_11e34, i8* bitcast (i32* @global_var_1dc84.240 to i8*), align 4
  %v0_11e38 = load i32, i32* @r6, align 4
  %v1_11e38 = trunc i32 %v0_11e38 to i8
  store i8 %v1_11e38, i8* bitcast (i32* @global_var_1dc85.241 to i8*), align 4
  %v1_11e3c = call i32 @function_13698(i32 %v0_11e2c)
  %v0_11e40 = load i32, i32* @r5, align 4
  store i32 %v1_11e3c, i32* @r7, align 4
  %v4_11e4c = call i32 @function_12394(i32 %v1_11e3c, i32 ptrtoint ([3 x i8]* @global_var_15574.243 to i32), i32 %v0_11e40)
  %v0_11e54 = load i32, i32* @r7, align 4
  store i32 %v0_11e54, i32* @global_var_1dc88.244, align 4
  %v0_11e58 = load i32, i32* @r5, align 4
  %v1_11e58 = trunc i32 %v0_11e58 to i8
  store i8 %v1_11e58, i8* bitcast (i32* @global_var_1dc8c.245 to i8*), align 4
  %v0_11e5c = load i32, i32* @r6, align 4
  %v1_11e5c = trunc i32 %v0_11e5c to i8
  store i8 %v1_11e5c, i8* bitcast (i32* @global_var_1dc8d.246 to i8*), align 4
  %v1_11e60 = call i32 @function_13698(i32 23)
  store i32 %v1_11e60, i32* @r5, align 4
  %v3_11e70 = call i32 @function_12394(i32 %v1_11e60, i32 ptrtoint (i32* @global_var_15578.248 to i32), i32 23)
  store i8 23, i8* bitcast (i32* @global_var_1dc94.249 to i8*), align 4
  %v0_11e80 = load i32, i32* @r5, align 4
  store i32 %v0_11e80, i32* @global_var_1dc90.250, align 4
  %v0_11e84 = load i32, i32* @r6, align 4
  %v1_11e84 = trunc i32 %v0_11e84 to i8
  store i8 %v1_11e84, i8* bitcast (i32* @global_var_1dc95.251 to i8*), align 4
  %v1_11e88 = call i32 @function_13698(i32 6)
  store i32 6, i32* %fp.global-to-local, align 4
  store i32 %v1_11e88, i32* @r5, align 4
  %v4_11e9c = call i32 @function_12394(i32 %v1_11e88, i32 ptrtoint ([7 x i8]* @global_var_15590.253 to i32), i32 6)
  %v0_11ea4 = load i32, i32* @r5, align 4
  store i32 %v0_11ea4, i32* @global_var_1dc98.254, align 4
  store i8 6, i8* bitcast (i32* @global_var_1dc9c.255 to i8*), align 4
  %v0_11eac = load i32, i32* @r6, align 4
  %v1_11eac = trunc i32 %v0_11eac to i8
  store i8 %v1_11eac, i8* bitcast (i32* @global_var_1dc9d.256 to i8*), align 4
  %v1_11eb0 = call i32 @function_13698(i32 7)
  store i32 7, i32* %r8.global-to-local, align 4
  store i32 %v1_11eb0, i32* @r5, align 4
  %v4_11ec4 = call i32 @function_12394(i32 %v1_11eb0, i32 ptrtoint ([8 x i8]* @global_var_15598.258 to i32), i32 7)
  %v0_11ecc = load i32, i32* @r5, align 4
  store i32 %v0_11ecc, i32* @global_var_1dca0.259, align 4
  store i8 7, i8* bitcast (i32* @global_var_1dca4.260 to i8*), align 4
  %v0_11ed4 = load i32, i32* @r6, align 4
  %v1_11ed4 = trunc i32 %v0_11ed4 to i8
  store i8 %v1_11ed4, i8* bitcast (i32* @global_var_1dca5.261 to i8*), align 4
  %v1_11ed8 = call i32 @function_13698(i32 7)
  %v0_11ee0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11ed8, i32* @r5, align 4
  %v4_11ee8 = call i32 @function_12394(i32 %v1_11ed8, i32 ptrtoint ([8 x i8]* @global_var_155a0.263 to i32), i32 %v0_11ee0)
  %v0_11ef0 = load i32, i32* @r5, align 4
  store i32 %v0_11ef0, i32* @global_var_1dca8.264, align 4
  %v1_11ef4 = trunc i32 %v0_11ee0 to i8
  store i8 %v1_11ef4, i8* bitcast (i32* @global_var_1dcac.265 to i8*), align 4
  %v0_11ef8 = load i32, i32* @r6, align 4
  %v1_11ef8 = trunc i32 %v0_11ef8 to i8
  store i8 %v1_11ef8, i8* bitcast (i32* @global_var_1dcad.266 to i8*), align 4
  %v1_11efc = call i32 @function_13698(i32 3)
  store i32 %v1_11efc, i32* @r5, align 4
  %v4_11f0c = call i32 @function_12394(i32 %v1_11efc, i32 ptrtoint ([4 x i8]* @global_var_155a8.268 to i32), i32 3)
  store i8 3, i8* bitcast (i32* @global_var_1dcb4.269 to i8*), align 4
  %v0_11f1c = load i32, i32* @r5, align 4
  store i32 %v0_11f1c, i32* @global_var_1dcb0.270, align 4
  %v0_11f20 = load i32, i32* @r6, align 4
  %v1_11f20 = trunc i32 %v0_11f20 to i8
  store i8 %v1_11f20, i8* bitcast (i32* @global_var_1dcb5.271 to i8*), align 4
  %v1_11f24 = call i32 @function_13698(i32 19)
  store i32 %v1_11f24, i32* @r5, align 4
  %v3_11f34 = call i32 @function_12394(i32 %v1_11f24, i32 ptrtoint (i32* @global_var_155ac.273 to i32), i32 19)
  store i8 19, i8* bitcast (i32* @global_var_1dcbc.274 to i8*), align 4
  %v0_11f44 = load i32, i32* @r5, align 4
  store i32 %v0_11f44, i32* @global_var_1dcb8.275, align 4
  %v0_11f48 = load i32, i32* @r6, align 4
  %v1_11f48 = trunc i32 %v0_11f48 to i8
  store i8 %v1_11f48, i8* bitcast (i32* @global_var_1dcbd.276 to i8*), align 4
  %v1_11f4c = call i32 @function_13698(i32 24)
  store i32 %v1_11f4c, i32* @r5, align 4
  %v3_11f5c = call i32 @function_12394(i32 %v1_11f4c, i32 ptrtoint (i32* @global_var_155c0.278 to i32), i32 24)
  store i8 24, i8* bitcast (i32* @global_var_1dcc4.279 to i8*), align 4
  %v0_11f6c = load i32, i32* @r5, align 4
  store i32 %v0_11f6c, i32* @global_var_1dcc0.280, align 4
  %v0_11f70 = load i32, i32* @r6, align 4
  %v1_11f70 = trunc i32 %v0_11f70 to i8
  store i8 %v1_11f70, i8* bitcast (i32* @global_var_1dcc5.281 to i8*), align 4
  %v1_11f74 = call i32 @function_13698(i32 9)
  store i32 %v1_11f74, i32* @r5, align 4
  %v4_11f84 = call i32 @function_12394(i32 %v1_11f74, i32 ptrtoint ([10 x i8]* @global_var_155dc.283 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1dccc.284 to i8*), align 4
  %v0_11f94 = load i32, i32* @r5, align 4
  store i32 %v0_11f94, i32* @global_var_1dcc8.285, align 4
  %v0_11f98 = load i32, i32* @r6, align 4
  %v1_11f98 = trunc i32 %v0_11f98 to i8
  store i8 %v1_11f98, i8* bitcast (i32* @global_var_1dccd.286 to i8*), align 4
  %v1_11f9c = call i32 @function_13698(i32 16)
  store i32 %v1_11f9c, i32* @r5, align 4
  store i32 16, i32* %sb.global-to-local, align 4
  %v4_11fb0 = call i32 @function_12394(i32 %v1_11f9c, i32 ptrtoint ([17 x i8]* @global_var_155e8.288 to i32), i32 16)
  %v0_11fb8 = load i32, i32* @r5, align 4
  store i32 %v0_11fb8, i32* @global_var_1dcd0.289, align 4
  store i8 16, i8* bitcast (i32* @global_var_1dcd4.290 to i8*), align 4
  %v0_11fc0 = load i32, i32* @r6, align 4
  %v1_11fc0 = trunc i32 %v0_11fc0 to i8
  store i8 %v1_11fc0, i8* bitcast (i32* @global_var_1dcd5.291 to i8*), align 4
  %v1_11fc4 = call i32 @function_13698(i32 22)
  store i32 %v1_11fc4, i32* @r5, align 4
  %v4_11fd4 = call i32 @function_12394(i32 %v1_11fc4, i32 ptrtoint ([23 x i8]* @global_var_155fc.293 to i32), i32 22)
  %v0_11fdc = load i32, i32* %r8.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1dcdc.294 to i8*), align 4
  %v0_11fe4 = load i32, i32* @r5, align 4
  store i32 %v0_11fe4, i32* @global_var_1dcd8.295, align 4
  %v0_11fe8 = load i32, i32* @r6, align 4
  %v1_11fe8 = trunc i32 %v0_11fe8 to i8
  store i8 %v1_11fe8, i8* bitcast (i32* @global_var_1dcdd.296 to i8*), align 4
  %v1_11fec = call i32 @function_13698(i32 %v0_11fdc)
  %v0_11ff4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_11fec, i32* @r5, align 4
  %v4_11ffc = call i32 @function_12394(i32 %v1_11fec, i32 ptrtoint ([8 x i8]* @global_var_15614.298 to i32), i32 %v0_11ff4)
  %v0_12004 = load i32, i32* @r5, align 4
  store i32 %v0_12004, i32* @global_var_1dce0.299, align 4
  %v1_12008 = trunc i32 %v0_11ff4 to i8
  store i8 %v1_12008, i8* bitcast (i32* @global_var_1dce4.300 to i8*), align 4
  %v0_1200c = load i32, i32* @r6, align 4
  %v1_1200c = trunc i32 %v0_1200c to i8
  store i8 %v1_1200c, i8* bitcast (i32* @global_var_1dce5.301 to i8*), align 4
  %v1_12010 = call i32 @function_13698(i32 5)
  store i32 %v1_12010, i32* @r5, align 4
  %v4_12020 = call i32 @function_12394(i32 %v1_12010, i32 ptrtoint ([6 x i8]* @global_var_1561c.303 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1dcec.304 to i8*), align 4
  %v0_12030 = load i32, i32* @r5, align 4
  store i32 %v0_12030, i32* @global_var_1dce8.305, align 4
  %v0_12034 = load i32, i32* @r6, align 4
  %v1_12034 = trunc i32 %v0_12034 to i8
  store i8 %v1_12034, i8* bitcast (i32* @global_var_1dced.306 to i8*), align 4
  %v1_12038 = call i32 @function_13698(i32 4)
  store i32 %v1_12038, i32* @r5, align 4
  %v4_12048 = call i32 @function_12394(i32 %v1_12038, i32 ptrtoint ([5 x i8]* @global_var_15624.308 to i32), i32 4)
  %v0_12050 = load i32, i32* %fp.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1dcf4.309 to i8*), align 4
  %v0_12058 = load i32, i32* @r5, align 4
  store i32 %v0_12058, i32* @global_var_1dcf0.310, align 4
  %v0_1205c = load i32, i32* @r6, align 4
  %v1_1205c = trunc i32 %v0_1205c to i8
  store i8 %v1_1205c, i8* bitcast (i32* @global_var_1dcf5.311 to i8*), align 4
  %v1_12060 = call i32 @function_13698(i32 %v0_12050)
  %v0_12068 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_12060, i32* @r5, align 4
  %v4_12070 = call i32 @function_12394(i32 %v1_12060, i32 ptrtoint ([7 x i8]* @global_var_1562c.313 to i32), i32 %v0_12068)
  %v0_12078 = load i32, i32* @r5, align 4
  store i32 %v0_12078, i32* @global_var_1dcf8.314, align 4
  %v1_1207c = trunc i32 %v0_12068 to i8
  store i8 %v1_1207c, i8* bitcast (i32* @global_var_1dcfc.315 to i8*), align 4
  %v0_12080 = load i32, i32* @r6, align 4
  %v1_12080 = trunc i32 %v0_12080 to i8
  store i8 %v1_12080, i8* bitcast (i32* @global_var_1dcfd.316 to i8*), align 4
  %v1_12084 = call i32 @function_13698(i32 14)
  store i32 %v1_12084, i32* @r5, align 4
  store i32 14, i32* %sl.global-to-local, align 4
  %v4_12098 = call i32 @function_12394(i32 %v1_12084, i32 ptrtoint ([15 x i8]* @global_var_15634.318 to i32), i32 14)
  %v0_120a0 = load i32, i32* @r5, align 4
  store i32 %v0_120a0, i32* @global_var_1dd00.319, align 4
  store i8 14, i8* bitcast (i32* @global_var_1dd04.320 to i8*), align 4
  %v0_120a8 = load i32, i32* @r6, align 4
  %v1_120a8 = trunc i32 %v0_120a8 to i8
  store i8 %v1_120a8, i8* bitcast (i32* @global_var_1dd05.321 to i8*), align 4
  %v1_120ac = call i32 @function_13698(i32 8)
  store i32 8, i32* @r7, align 4
  store i32 %v1_120ac, i32* @r5, align 4
  %v4_120c0 = call i32 @function_12394(i32 %v1_120ac, i32 ptrtoint ([9 x i8]* @global_var_15644.323 to i32), i32 8)
  %v0_120c4 = load i32, i32* %r8.global-to-local, align 4
  %v0_120c8 = load i32, i32* @r5, align 4
  store i32 %v0_120c8, i32* @global_var_1dd60.324, align 4
  %v0_120cc = load i32, i32* @r7, align 4
  %v1_120cc = trunc i32 %v0_120cc to i8
  store i8 %v1_120cc, i8* bitcast (i32* @global_var_1dd64.325 to i8*), align 4
  %v0_120d0 = load i32, i32* @r6, align 4
  %v1_120d0 = trunc i32 %v0_120d0 to i8
  store i8 %v1_120d0, i8* bitcast (i32* @global_var_1dd65.326 to i8*), align 4
  %v1_120d4 = call i32 @function_13698(i32 %v0_120c4)
  %v0_120dc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_120d4, i32* @r5, align 4
  %v4_120e4 = call i32 @function_12394(i32 %v1_120d4, i32 ptrtoint ([8 x i8]* @global_var_15650.328 to i32), i32 %v0_120dc)
  %v0_120e8 = load i32, i32* %sb.global-to-local, align 4
  %v0_120ec = load i32, i32* @r5, align 4
  store i32 %v0_120ec, i32* @global_var_1dd68.329, align 4
  %v1_120f0 = trunc i32 %v0_120dc to i8
  store i8 %v1_120f0, i8* bitcast (i32* @global_var_1dd6c.330 to i8*), align 4
  %v0_120f4 = load i32, i32* @r6, align 4
  %v1_120f4 = trunc i32 %v0_120f4 to i8
  store i8 %v1_120f4, i8* bitcast (i32* @global_var_1dd6d.331 to i8*), align 4
  %v1_120f8 = call i32 @function_13698(i32 %v0_120e8)
  %v0_12100 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v1_120f8, i32* @r5, align 4
  %v4_12108 = call i32 @function_12394(i32 %v1_120f8, i32 ptrtoint ([17 x i8]* @global_var_15658.333 to i32), i32 %v0_12100)
  %v0_1210c = load i32, i32* @r7, align 4
  %v0_12110 = load i32, i32* @r5, align 4
  store i32 %v0_12110, i32* @global_var_1dd08.334, align 4
  %v1_12114 = trunc i32 %v0_12100 to i8
  store i8 %v1_12114, i8* bitcast (i32* @global_var_1dd0c.335 to i8*), align 4
  %v0_12118 = load i32, i32* @r6, align 4
  %v1_12118 = trunc i32 %v0_12118 to i8
  store i8 %v1_12118, i8* bitcast (i32* @global_var_1dd0d.336 to i8*), align 4
  %v1_1211c = call i32 @function_13698(i32 %v0_1210c)
  %v0_12124 = load i32, i32* @r7, align 4
  store i32 %v1_1211c, i32* @r5, align 4
  %v4_1212c = call i32 @function_12394(i32 %v1_1211c, i32 ptrtoint ([9 x i8]* @global_var_1566c.338 to i32), i32 %v0_12124)
  %v0_12134 = load i32, i32* @r5, align 4
  store i32 %v0_12134, i32* @global_var_1dd10.339, align 4
  %v0_12138 = load i32, i32* @r7, align 4
  %v1_12138 = trunc i32 %v0_12138 to i8
  store i8 %v1_12138, i8* bitcast (i32* @global_var_1dd14.340 to i8*), align 4
  %v0_1213c = load i32, i32* @r6, align 4
  %v1_1213c = trunc i32 %v0_1213c to i8
  store i8 %v1_1213c, i8* bitcast (i32* @global_var_1dd15.341 to i8*), align 4
  %v1_12140 = call i32 @function_13698(i32 21)
  store i32 %v1_12140, i32* @r5, align 4
  %v3_12150 = call i32 @function_12394(i32 %v1_12140, i32 ptrtoint (i32* @global_var_156f4.343 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1dd1c.344 to i8*), align 4
  %v0_12160 = load i32, i32* @r5, align 4
  store i32 %v0_12160, i32* @global_var_1dd18.345, align 4
  %v0_12164 = load i32, i32* @r6, align 4
  %v1_12164 = trunc i32 %v0_12164 to i8
  store i8 %v1_12164, i8* bitcast (i32* @global_var_1dd1d.346 to i8*), align 4
  %v1_12168 = call i32 @function_13698(i32 17)
  store i32 %v1_12168, i32* @r5, align 4
  %v4_12178 = call i32 @function_12394(i32 %v1_12168, i32 ptrtoint ([18 x i8]* @global_var_15678.348 to i32), i32 17)
  store i8 17, i8* bitcast (i32* @global_var_1dd24.349 to i8*), align 4
  %v0_12188 = load i32, i32* @r5, align 4
  store i32 %v0_12188, i32* @global_var_1dd20.350, align 4
  %v0_1218c = load i32, i32* @r6, align 4
  %v1_1218c = trunc i32 %v0_1218c to i8
  store i8 %v1_1218c, i8* bitcast (i32* @global_var_1dd25.351 to i8*), align 4
  %v1_12190 = call i32 @function_13698(i32 12)
  store i32 %v1_12190, i32* @r5, align 4
  %v4_121a0 = call i32 @function_12394(i32 %v1_12190, i32 ptrtoint ([13 x i8]* @global_var_1568c.353 to i32), i32 12)
  %v0_121a8 = load i32, i32* %sl.global-to-local, align 4
  store i8 12, i8* bitcast (i32* @global_var_1dd2c.354 to i8*), align 4
  %v0_121b0 = load i32, i32* @r5, align 4
  store i32 %v0_121b0, i32* @global_var_1dd28.355, align 4
  %v0_121b4 = load i32, i32* @r6, align 4
  %v1_121b4 = trunc i32 %v0_121b4 to i8
  store i8 %v1_121b4, i8* bitcast (i32* @global_var_1dd2d.356 to i8*), align 4
  %v1_121b8 = call i32 @function_13698(i32 %v0_121a8)
  %v0_121c0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_121b8, i32* @r5, align 4
  %v4_121c8 = call i32 @function_12394(i32 %v1_121b8, i32 ptrtoint ([15 x i8]* @global_var_1569c.358 to i32), i32 %v0_121c0)
  %v0_121d0 = load i32, i32* @r5, align 4
  store i32 %v0_121d0, i32* @global_var_1dd30.359, align 4
  %v1_121d4 = trunc i32 %v0_121c0 to i8
  store i8 %v1_121d4, i8* bitcast (i32* @global_var_1dd34.360 to i8*), align 4
  %v0_121d8 = load i32, i32* @r6, align 4
  %v1_121d8 = trunc i32 %v0_121d8 to i8
  store i8 %v1_121d8, i8* bitcast (i32* @global_var_1dd35.361 to i8*), align 4
  %v1_121dc = call i32 @function_13698(i32 19)
  store i32 %v1_121dc, i32* @r5, align 4
  %v4_121ec = call i32 @function_12394(i32 %v1_121dc, i32 ptrtoint ([20 x i8]* @global_var_156ac.363 to i32), i32 19)
  %v0_121f4 = load i32, i32* @r7, align 4
  store i8 19, i8* bitcast (i32* @global_var_1dd3c.364 to i8*), align 4
  %v0_121fc = load i32, i32* @r5, align 4
  store i32 %v0_121fc, i32* @global_var_1dd38.365, align 4
  %v0_12200 = load i32, i32* @r6, align 4
  %v1_12200 = trunc i32 %v0_12200 to i8
  store i8 %v1_12200, i8* bitcast (i32* @global_var_1dd3d.366 to i8*), align 4
  %v1_12204 = call i32 @function_13698(i32 %v0_121f4)
  %v0_1220c = load i32, i32* @r7, align 4
  store i32 %v1_12204, i32* @r5, align 4
  %v4_12214 = call i32 @function_12394(i32 %v1_12204, i32 ptrtoint ([9 x i8]* @global_var_156c0.368 to i32), i32 %v0_1220c)
  %v0_1221c = load i32, i32* @r5, align 4
  store i32 %v0_1221c, i32* @global_var_1dd40.369, align 4
  %v0_12220 = load i32, i32* @r7, align 4
  %v1_12220 = trunc i32 %v0_12220 to i8
  store i8 %v1_12220, i8* bitcast (i32* @global_var_1dd44.370 to i8*), align 4
  %v0_12224 = load i32, i32* @r6, align 4
  %v1_12224 = trunc i32 %v0_12224 to i8
  store i8 %v1_12224, i8* bitcast (i32* @global_var_1dd45.371 to i8*), align 4
  %v1_12228 = call i32 @function_13698(i32 5)
  store i32 %v1_12228, i32* @r5, align 4
  %v4_12238 = call i32 @function_12394(i32 %v1_12228, i32 ptrtoint ([6 x i8]* @global_var_156cc.373 to i32), i32 5)
  %v0_12240 = load i32, i32* %fp.global-to-local, align 4
  store i8 5, i8* bitcast (i32* @global_var_1dd4c.374 to i8*), align 4
  %v0_12248 = load i32, i32* @r5, align 4
  store i32 %v0_12248, i32* @global_var_1dd48.375, align 4
  %v0_1224c = load i32, i32* @r6, align 4
  %v1_1224c = trunc i32 %v0_1224c to i8
  store i8 %v1_1224c, i8* bitcast (i32* @global_var_1dd4d.376 to i8*), align 4
  %v1_12250 = call i32 @function_13698(i32 %v0_12240)
  %v0_12258 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_12250, i32* @r5, align 4
  %v4_12260 = call i32 @function_12394(i32 %v1_12250, i32 ptrtoint ([7 x i8]* @global_var_156d4.378 to i32), i32 %v0_12258)
  %v0_12268 = load i32, i32* @r5, align 4
  store i32 %v0_12268, i32* @global_var_1dd50.379, align 4
  %v1_1226c = trunc i32 %v0_12258 to i8
  store i8 %v1_1226c, i8* bitcast (i32* @global_var_1dd54.380 to i8*), align 4
  %v0_12270 = load i32, i32* @r6, align 4
  %v1_12270 = trunc i32 %v0_12270 to i8
  store i8 %v1_12270, i8* bitcast (i32* @global_var_1dd55.381 to i8*), align 4
  %v1_12274 = call i32 @function_13698(i32 23)
  %v4_12284 = call i32 @function_12394(i32 %v1_12274, i32 ptrtoint ([24 x i8]* @global_var_156dc.383 to i32), i32 23)
  %v0_1228c = load i32, i32* @r6, align 4
  %v1_1228c = trunc i32 %v0_1228c to i8
  store i8 %v1_1228c, i8* bitcast (i32* @global_var_1dd5d.384 to i8*), align 4
  store i32 %v1_12274, i32* @global_var_1dd58.385, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dd5c.386 to i8*), align 4
  %v2_12298 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12298, i32* @r4, align 4
  store i32 %v9_11e04, i32* @r6, align 4
  store i32 %v12_11e04, i32* @r7, align 4
  ret i32 %v4_12284

; uselistorder directives
  uselistorder i32 %v1_12250, { 1, 0 }
  uselistorder i32 %v1_12204, { 1, 0 }
  uselistorder i32 %v1_121b8, { 1, 0 }
  uselistorder i32 %v1_1211c, { 1, 0 }
  uselistorder i32 %v1_120f8, { 1, 0 }
  uselistorder i32 %v1_120d4, { 1, 0 }
  uselistorder i32 %v1_120ac, { 1, 0 }
  uselistorder i32 %v1_12060, { 1, 0 }
  uselistorder i32 %v1_11fec, { 1, 0 }
  uselistorder i32 %v1_11ed8, { 1, 0 }
  uselistorder i32 %v1_11eb0, { 1, 0 }
  uselistorder i32 %v1_11e88, { 1, 0 }
  uselistorder i32 %v1_11e3c, { 1, 0 }
  uselistorder i32 %v1_11e0c, { 1, 0 }
  uselistorder i8 4, { 2, 0, 1 }
  uselistorder i8 5, { 12, 13, 14, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder i8 16, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8 6, { 0, 2, 3, 4, 5, 1 }
  uselistorder i8 23, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @function_12394, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1dc78.230 to i32), { 5, 0, 1, 2, 3, 4, 6 }
}

define i32 @function_12318(i8* %arg1) local_unnamed_addr {
dec_label_pc_12318:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v3_1231c = load i8, i8* %arg1, align 1
  %v4_1231c = zext i8 %v3_1231c to i32
  %v2_12320 = icmp eq i8 %v3_1231c, 0
  br i1 %v2_12320, label %dec_label_pc_1233c, label %bb

dec_label_pc_1233c:                               ; preds = %dec_label_pc_1232c, %dec_label_pc_12318
  %merge = phi i32 [ %v4_1231c, %dec_label_pc_12318 ], [ %v1_1232c, %dec_label_pc_1232c ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_12318
  br label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %dec_label_pc_1232c, %bb
  %v0_1232c = phi i32 [ %v1_1232c, %dec_label_pc_1232c ], [ 0, %bb ]
  %v1_1232c = add i32 %v0_1232c, 1
  %v2_12330 = add i32 %v1_1232c, %tmp
  %v3_12330 = inttoptr i32 %v2_12330 to i8*
  %v4_12330 = load i8, i8* %v3_12330, align 1
  %v2_12334 = icmp eq i8 %v4_12330, 0
  br i1 %v2_12334, label %dec_label_pc_1233c, label %dec_label_pc_1232c

; uselistorder directives
  uselistorder i32 %v1_1232c, { 1, 0, 2 }
}

define i32 @function_12340(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12340:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12340 = load i8, i8* %arg1, align 1
  %v3_12340 = zext i8 %v2_12340 to i32
  %v2_12344 = icmp eq i8 %v2_12340, 0
  br i1 %v2_12344, label %dec_label_pc_12388, label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_12340
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12350

dec_label_pc_12350:                               ; preds = %dec_label_pc_12350, %dec_label_pc_1234c
  %v0_12350 = phi i32 [ %v1_12350, %dec_label_pc_12350 ], [ 0, %dec_label_pc_1234c ]
  %v1_12350 = add i32 %v0_12350, 1
  store i32 %v1_12350, i32* %ip.global-to-local, align 4
  %v2_12354 = add i32 %v1_12350, %tmp
  %v3_12354 = inttoptr i32 %v2_12354 to i8*
  %v4_12354 = load i8, i8* %v3_12354, align 1
  %v2_12358 = icmp eq i8 %v4_12354, 0
  br i1 %v2_12358, label %dec_label_pc_12360, label %dec_label_pc_12350

dec_label_pc_12360:                               ; preds = %dec_label_pc_12350
  %v7_12360 = icmp eq i32 %v0_12350, -2
  br i1 %v7_12360, label %dec_label_pc_12380, label %dec_label_pc_1236c.preheader

dec_label_pc_1236c.preheader:                     ; preds = %dec_label_pc_12360, %dec_label_pc_12388
  %storemerge = phi i32 [ %v3_12340, %dec_label_pc_12388 ], [ %v1_12350, %dec_label_pc_12360 ]
  %v2_12378.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1236c

dec_label_pc_1236c:                               ; preds = %dec_label_pc_1236c.dec_label_pc_1236c_crit_edge, %dec_label_pc_1236c.preheader
  %v2_12378 = phi i32 [ %v5_12378, %dec_label_pc_1236c.dec_label_pc_1236c_crit_edge ], [ %v2_12378.pre, %dec_label_pc_1236c.preheader ]
  %v0_12370 = phi i32 [ %v0_12370.pre, %dec_label_pc_1236c.dec_label_pc_1236c_crit_edge ], [ %tmp, %dec_label_pc_1236c.preheader ]
  %v0_1236c = phi i32 [ %v0_1236c.pre, %dec_label_pc_1236c.dec_label_pc_1236c_crit_edge ], [ %storemerge, %dec_label_pc_1236c.preheader ]
  %v1_1236c = add i32 %v0_1236c, -1
  store i32 %v1_1236c, i32* @r2, align 4
  %v1_12370 = inttoptr i32 %v0_12370 to i8*
  %v2_12370 = load i8, i8* %v1_12370, align 1
  %v5_12370 = add i32 %v0_12370, 1
  store i32 %v5_12370, i32* %r1.global-to-local, align 4
  %v3_12374 = icmp eq i32 %v0_1236c, 0
  %v3_12378 = inttoptr i32 %v2_12378 to i8*
  store i8 %v2_12370, i8* %v3_12378, align 1
  %v4_12378 = load i32, i32* @r0, align 4
  %v5_12378 = add i32 %v4_12378, 1
  store i32 %v5_12378, i32* @r0, align 4
  br i1 %v3_12374, label %dec_label_pc_12380.loopexit, label %dec_label_pc_1236c.dec_label_pc_1236c_crit_edge

dec_label_pc_1236c.dec_label_pc_1236c_crit_edge:  ; preds = %dec_label_pc_1236c
  %v0_1236c.pre = load i32, i32* @r2, align 4
  %v0_12370.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1236c

dec_label_pc_12380.loopexit:                      ; preds = %dec_label_pc_1236c
  %v0_12380.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12380

dec_label_pc_12380:                               ; preds = %dec_label_pc_12380.loopexit, %dec_label_pc_12360
  %v0_12380 = phi i32 [ %v0_12380.pre, %dec_label_pc_12380.loopexit ], [ %v1_12350, %dec_label_pc_12360 ]
  ret i32 %v0_12380

dec_label_pc_12388:                               ; preds = %dec_label_pc_12340
  store i32 %v3_12340, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1236c.preheader

; uselistorder directives
  uselistorder i32 %v5_12378, { 1, 0 }
  uselistorder i32 %v0_12370, { 1, 0 }
  uselistorder i32 %v1_12350, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_12340, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1236c.preheader, { 1, 0 }
}

define i32 @function_12394(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12394:
  %ip.global-to-local = alloca i32, align 4
  %v2_12394 = icmp eq i32 %arg3, 0
  br i1 %v2_12394, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_123a0, %dec_label_pc_12394
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_12394
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_123a0

dec_label_pc_123a0:                               ; preds = %dec_label_pc_123a0, %bb
  %v0_123a0 = phi i32 [ %v1_123a8, %dec_label_pc_123a0 ], [ 0, %bb ]
  %v2_123a0 = add i32 %v0_123a0, %arg2
  %v3_123a0 = inttoptr i32 %v2_123a0 to i8*
  %v4_123a0 = load i8, i8* %v3_123a0, align 1
  %v4_123a4 = add i32 %v0_123a0, %arg1
  %v5_123a4 = inttoptr i32 %v4_123a4 to i8*
  store i8 %v4_123a0, i8* %v5_123a4, align 1
  %v0_123a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_123a8 = add i32 %v0_123a8, 1
  store i32 %v1_123a8, i32* %ip.global-to-local, align 4
  %v9_123ac = icmp eq i32 %v1_123a8, %arg3
  br i1 %v9_123ac, label %.loopexit, label %dec_label_pc_123a0

; uselistorder directives
  uselistorder i32 %v1_123a8, { 1, 2, 0 }
}

define i32 @function_123b8() local_unnamed_addr {
dec_label_pc_123b8:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_123b8 = load i32, i32* @r1, align 4
  %v2_123b8 = icmp eq i32 %v0_123b8, 0
  br i1 %v2_123b8, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_123b8
  %v2_123bc = load i32, i32* @r0, align 4
  ret i32 %v2_123bc

bb3:                                              ; preds = %dec_label_pc_123b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %dec_label_pc_123c8.dec_label_pc_123c8_crit_edge, %bb3
  %v2_123c8 = phi i32 [ %v1_123cc, %dec_label_pc_123c8.dec_label_pc_123c8_crit_edge ], [ 0, %bb3 ]
  %v0_123c8.off0 = phi i8 [ %extract.t, %dec_label_pc_123c8.dec_label_pc_123c8_crit_edge ], [ 0, %bb3 ]
  %v3_123c8 = load i32, i32* @r0, align 4
  %v4_123c8 = add i32 %v3_123c8, %v2_123c8
  %v5_123c8 = inttoptr i32 %v4_123c8 to i8*
  store i8 %v0_123c8.off0, i8* %v5_123c8, align 1
  %v0_123cc = load i32, i32* %r3.global-to-local, align 4
  %v1_123cc = add i32 %v0_123cc, 1
  store i32 %v1_123cc, i32* %r3.global-to-local, align 4
  %v1_123d0 = load i32, i32* @r1, align 4
  %v9_123d0 = icmp eq i32 %v1_123cc, %v1_123d0
  br i1 %v9_123d0, label %dec_label_pc_123d8, label %dec_label_pc_123c8.dec_label_pc_123c8_crit_edge

dec_label_pc_123c8.dec_label_pc_123c8_crit_edge:  ; preds = %dec_label_pc_123c8
  %v0_123c8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_123c8.pre to i8
  br label %dec_label_pc_123c8

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123c8
  %v1_123d8 = load i32, i32* @r0, align 4
  ret i32 %v1_123d8

; uselistorder directives
  uselistorder i32 %v1_123cc, { 1, 2, 0 }
}

define i32 @function_123dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_123dc:
  %v7_123f0 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_123f0, label %dec_label_pc_123f4, label %dec_label_pc_123fc

dec_label_pc_123f4:                               ; preds = %dec_label_pc_12410, %dec_label_pc_123dc, %dec_label_pc_123fc
  ret i32 -1

dec_label_pc_123fc:                               ; preds = %dec_label_pc_123dc
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_123f4, label %dec_label_pc_12404

dec_label_pc_12404:                               ; preds = %dec_label_pc_123fc
  br label %dec_label_pc_1241c

dec_label_pc_12410:                               ; preds = %dec_label_pc_12434, %dec_label_pc_1241c
  %v1_12410 = add i32 %v0_1243c, 1
  %v9_12414 = icmp eq i32 %v1_12410, %arg2
  br i1 %v9_12414, label %dec_label_pc_123f4, label %dec_label_pc_1241c

dec_label_pc_1241c:                               ; preds = %dec_label_pc_12410, %dec_label_pc_12404
  %v0_1243c = phi i32 [ %v1_12410, %dec_label_pc_12410 ], [ 0, %dec_label_pc_12404 ]
  %v0_12428 = phi i32 [ %v1_12428., %dec_label_pc_12410 ], [ 0, %dec_label_pc_12404 ]
  %v2_1241c = add i32 %v0_12428, %arg3
  %v3_1241c = inttoptr i32 %v2_1241c to i8*
  %v4_1241c = load i8, i8* %v3_1241c, align 1
  %v2_12420 = add i32 %v0_1243c, %arg1
  %v3_12420 = inttoptr i32 %v2_12420 to i8*
  %v4_12420 = load i8, i8* %v3_12420, align 1
  %v9_12424 = icmp eq i8 %v4_12420, %v4_1241c
  %v1_12428 = add i32 %v0_12428, 1
  %v1_12428. = select i1 %v9_12424, i32 %v1_12428, i32 0
  br i1 %v9_12424, label %dec_label_pc_12434, label %dec_label_pc_12410

dec_label_pc_12434:                               ; preds = %dec_label_pc_1241c
  %v9_12434 = icmp eq i32 %v1_12428., %arg4
  br i1 %v9_12434, label %dec_label_pc_1243c, label %dec_label_pc_12410

dec_label_pc_1243c:                               ; preds = %dec_label_pc_12434
  %v1_1243c = add i32 %v0_1243c, 1
  ret i32 %v1_1243c

; uselistorder directives
  uselistorder i1 %v9_12424, { 1, 0 }
  uselistorder i32 %v0_12428, { 1, 0 }
  uselistorder label %dec_label_pc_123f4, { 0, 2, 1 }
}

define i32 @function_12444(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12444:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v3_12444 = load i32, i32* @r4, align 4
  store i32 %v3_12444, i32* %stack_var_-28, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12450

dec_label_pc_12450:                               ; preds = %.thread, %dec_label_pc_12468, %bb, %dec_label_pc_12444
  %v0_12450 = phi i32 [ %tmp, %dec_label_pc_12444 ], [ %v5_12450, %bb ], [ %v5_12450, %dec_label_pc_12468 ], [ %v5_12450, %.thread ]
  %v1_12450 = inttoptr i32 %v0_12450 to i8*
  %v2_12450 = load i8, i8* %v1_12450, align 1
  %v3_12450 = zext i8 %v2_12450 to i32
  %v5_12450 = add i32 %v0_12450, 1
  store i32 %v5_12450, i32* %r5.global-to-local, align 4
  %v7_12458 = icmp eq i8 %v2_12450, 9
  br i1 %v7_12458, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12450
  store i32 %v3_12450, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12450

bb:                                               ; preds = %dec_label_pc_12450
  %v8_1245c = icmp eq i8 %v2_12450, 32
  store i32 %v3_12450, i32* %r4.global-to-local, align 4
  br i1 %v8_1245c, label %dec_label_pc_12450, label %dec_label_pc_12468

dec_label_pc_12468:                               ; preds = %bb
  %v7_12468 = icmp eq i8 %v2_12450, 10
  br i1 %v7_12468, label %dec_label_pc_12450, label %dec_label_pc_12470

dec_label_pc_12470:                               ; preds = %dec_label_pc_12468
  %v7_12470 = icmp eq i8 %v2_12450, 45
  br i1 %v7_12470, label %dec_label_pc_12550, label %dec_label_pc_12478

dec_label_pc_12478:                               ; preds = %dec_label_pc_12470
  %v7_12478 = icmp eq i8 %v2_12450, 43
  br i1 %v7_12478, label %bb48, label %dec_label_pc_12488

bb48:                                             ; preds = %dec_label_pc_12478
  %v2_1247c = inttoptr i32 %v5_12450 to i8*
  %v3_1247c = load i8, i8* %v2_1247c, align 1
  %v4_1247c = zext i8 %v3_1247c to i32
  store i32 %v4_1247c, i32* %r4.global-to-local, align 4
  %v6_1247c = add i32 %v0_12450, 2
  store i32 %v6_1247c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %bb48, %dec_label_pc_12478, %dec_label_pc_12550
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_12550 ], [ 2147483647, %dec_label_pc_12478 ], [ 2147483647, %bb48 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_12550 ], [ 0, %dec_label_pc_12478 ], [ 0, %bb48 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_12490 = call i32 @function_129a4(i32 %storemerge1, i32 %arg2)
  %v0_12494 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12494, i32* @r1, align 4
  store i32 %v2_12490, i32* %r8.global-to-local, align 4
  store i32 %storemerge1, i32* @r0, align 4
  %v0_124a0 = call i32 @function_12894()
  store i32 %v0_124a0, i32* @lr, align 4
  %v0_124b0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124b0

dec_label_pc_124b0:                               ; preds = %.thread8, %dec_label_pc_12488
  %v2_1252c11 = phi i32 [ %v1_1254826, %.thread8 ], [ 0, %dec_label_pc_12488 ]
  %v1_12508 = phi i32 [ %v0_1253c24, %.thread8 ], [ 0, %dec_label_pc_12488 ]
  %v1_124f0 = phi i32 [ %v3_12534, %.thread8 ], [ %v0_124b0.pre, %dec_label_pc_12488 ]
  %v1_124b0 = urem i32 %v1_124f0, 256
  %v1_124b4 = add nsw i32 %v1_124b0, -48
  %v1_124bc = add nsw i32 %v1_124b0, -97
  %v1_124c0 = add i32 %v1_124f0, -48
  %v1_124c4 = add nsw i32 %v1_124b0, -65
  %tmp71 = icmp ult i32 %v1_124b4, 10
  br i1 %tmp71, label %dec_label_pc_124f4, label %dec_label_pc_124cc

dec_label_pc_124cc:                               ; preds = %dec_label_pc_124b0
  %v2_124cc = icmp ugt i32 %v1_124c4, 24
  %v7_124cc = icmp eq i32 %v1_124c4, 25
  %v2_124d0 = xor i1 %v7_124cc, true
  %v3_124d0 = and i1 %v2_124cc, %v2_124d0
  br i1 %v3_124d0, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_124cc
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_124cc, %bb49
  %v0_124e420 = phi i32 [ %v1_124c0, %dec_label_pc_124cc ], [ 0, %bb49 ]
  %v2_124d4 = xor i1 %v2_124cc, true
  %v3_124d4 = or i1 %v7_124cc, %v2_124d4
  br i1 %v3_124d4, label %bb51, label %bb52

bb51:                                             ; preds = %bb50
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v0_124e4 = phi i32 [ %v0_124e420, %bb50 ], [ 1, %bb51 ]
  br i1 %v3_124d0, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  %v6_124dc = icmp ugt i32 %v1_124bc, 24
  %v11_124dc = icmp eq i32 %v1_124bc, 25
  br label %bb54

bb54:                                             ; preds = %bb52, %bb53
  %v1_124e0 = phi i1 [ %v7_124cc, %bb52 ], [ %v11_124dc, %bb53 ]
  %v0_124e0 = phi i1 [ %v2_124cc, %bb52 ], [ %v6_124dc, %bb53 ]
  %v2_124e0 = xor i1 %v1_124e0, true
  %v3_124e0 = and i1 %v0_124e0, %v2_124e0
  br i1 %v3_124e0, label %dec_label_pc_1253c, label %dec_label_pc_124e4

dec_label_pc_124e4:                               ; preds = %bb54
  %v2_124e4 = icmp eq i32 %v0_124e4, 0
  %. = select i1 %v2_124e4, i32 87, i32 55
  %v2_124f0 = sub i32 %v1_124f0, %.
  br label %dec_label_pc_124f4

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124b0, %dec_label_pc_124e4
  %v0_1250834 = phi i32 [ %v1_124c4, %dec_label_pc_124b0 ], [ %., %dec_label_pc_124e4 ]
  %v3_1252c12 = phi i32 [ %v1_124c0, %dec_label_pc_124b0 ], [ %v2_124f0, %dec_label_pc_124e4 ]
  %v1_124f4 = load i32, i32* %r6.global-to-local, align 4
  %v6_124f8 = icmp slt i32 %v3_1252c12, %v1_124f4
  br i1 %v6_124f8, label %dec_label_pc_124fc, label %dec_label_pc_1253c

dec_label_pc_124fc:                               ; preds = %dec_label_pc_124f4
  %v3_124fc = icmp uge i32 %v2_1252c11, %v0_124a0
  %v9_124fc = icmp eq i32 %v2_1252c11, %v0_124a0
  %v2_12500 = xor i1 %v3_124fc, true
  %v3_12500 = or i1 %v9_124fc, %v2_12500
  br i1 %v3_12500, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_124fc
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_124fc, %bb57
  %v0_1250833 = phi i32 [ %v0_1250834, %dec_label_pc_124fc ], [ 0, %bb57 ]
  %v2_12504 = xor i1 %v9_124fc, true
  %v3_12504 = and i1 %v3_124fc, %v2_12504
  br i1 %v3_12504, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v0_12508 = phi i32 [ %v0_1250833, %bb58 ], [ 1, %bb59 ]
  %tmp72 = icmp slt i32 %v1_12508, 0
  %v4_12508 = zext i1 %tmp72 to i32
  %v5_12508 = or i32 %v0_12508, %v4_12508
  %v7_12508 = icmp eq i32 %v5_12508, 0
  br i1 %v7_12508, label %dec_label_pc_12514, label %.thread8

dec_label_pc_12514:                               ; preds = %bb60
  %v1_12520 = load i32, i32* %r8.global-to-local, align 4
  %v7_12524 = icmp sgt i32 %v3_1252c12, %v1_12520
  br i1 %v7_12524, label %bb63, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12514
  br label %bb64

bb63:                                             ; preds = %dec_label_pc_12514
  %v2_12528 = icmp eq i1 %v9_124fc, false
  br i1 %v2_12528, label %bb64, label %.thread8

bb64:                                             ; preds = %bb63, %.thread5
  %v4_1252c13 = mul i32 %v1_124f4, %v2_1252c11
  %v5_1252c14 = add i32 %v4_1252c13, %v3_1252c12
  br label %.thread8

.thread8:                                         ; preds = %bb63, %bb60, %bb64
  %v1_1254826 = phi i32 [ %v2_1252c11, %bb63 ], [ %v2_1252c11, %bb60 ], [ %v5_1252c14, %bb64 ]
  %v0_1253c24 = phi i32 [ -1, %bb63 ], [ -1, %bb60 ], [ 1, %bb64 ]
  %v0_12534 = load i32, i32* %r5.global-to-local, align 4
  %v1_12534 = inttoptr i32 %v0_12534 to i8*
  %v2_12534 = load i8, i8* %v1_12534, align 1
  %v3_12534 = zext i8 %v2_12534 to i32
  store i32 %v3_12534, i32* %r4.global-to-local, align 4
  %v5_12534 = add i32 %v0_12534, 1
  store i32 %v5_12534, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_124b0

dec_label_pc_1253c:                               ; preds = %dec_label_pc_124f4, %bb54
  %v1_1253c = icmp slt i32 %v1_12508, 0
  %v0_12560 = load i32, i32* %sl.global-to-local, align 4
  %v2_12560 = icmp eq i32 %v0_12560, 0
  br i1 %v1_1253c, label %dec_label_pc_12560, label %dec_label_pc_12544

dec_label_pc_12544:                               ; preds = %dec_label_pc_1253c
  br i1 %v2_12560, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_12544
  %v2_12548 = sub i32 0, %v2_1252c11
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_12544, %bb65
  %v23_1254c = phi i32 [ %v2_1252c11, %dec_label_pc_12544 ], [ %v2_12548, %bb65 ]
  %v2_1254c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1254c, i32* @r4, align 4
  ret i32 %v23_1254c

dec_label_pc_12550:                               ; preds = %dec_label_pc_12470
  %v1_12550 = inttoptr i32 %v5_12450 to i8*
  %v2_12550 = load i8, i8* %v1_12550, align 1
  %v3_12550 = zext i8 %v2_12550 to i32
  store i32 %v3_12550, i32* %r4.global-to-local, align 4
  %v5_12550 = add i32 %v0_12450, 2
  store i32 %v5_12550, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12488

dec_label_pc_12560:                               ; preds = %dec_label_pc_1253c
  %.70 = select i1 %v2_12560, i32 2147483647, i32 -2147483648
  %v2_1256c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1256c, i32* @r4, align 4
  ret i32 %.70

; uselistorder directives
  uselistorder i32 %v3_12534, { 1, 0 }
  uselistorder i1 %v9_124fc, { 1, 0, 2 }
  uselistorder i1 %v3_124fc, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_124cc, { 1, 2, 0 }
  uselistorder i1 %v2_124cc, { 1, 0, 2 }
  uselistorder i32 %v1_124b0, { 1, 2, 0 }
  uselistorder i32 %v1_124f0, { 1, 2, 0 }
  uselistorder i32 %v1_12508, { 1, 0 }
  uselistorder i32 %v2_1252c11, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_124a0, { 1, 0, 2 }
  uselistorder i32 %v5_12450, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v3_12450, { 1, 0 }
  uselistorder i32 %v0_12450, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i8 9, { 3, 4, 0, 1, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %dec_label_pc_124f4, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_12488, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12450, { 1, 2, 0, 3 }
}

define i32 @function_12570(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12570:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12570 = load i32, i32* @r4, align 4
  store i32 %v3_12570, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12588

dec_label_pc_12588:                               ; preds = %dec_label_pc_125b4.dec_label_pc_12588_crit_edge, %dec_label_pc_12570
  %v0_1258c = phi i32 [ %v0_1258c.pre, %dec_label_pc_125b4.dec_label_pc_12588_crit_edge ], [ %arg3, %dec_label_pc_12570 ]
  %v0_12588 = phi i32 [ %v1_125a0, %dec_label_pc_125b4.dec_label_pc_12588_crit_edge ], [ %tmp, %dec_label_pc_12570 ]
  %tmp12 = inttoptr i32 %v0_12588 to i32*
  %v5_12594 = call i32 @function_12de4(i32 %v0_1258c, i32* %tmp12, i32 1)
  %v7_12598 = icmp eq i32 %v5_12594, 1
  %v0_1259c = load i32, i32* @r4, align 4
  %v1_125a0 = add i32 %v0_1259c, 1
  store i32 %v1_125a0, i32* @r4, align 4
  %v0_125a8 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_12598, label %dec_label_pc_125a8, label %dec_label_pc_125c0

dec_label_pc_125a8:                               ; preds = %dec_label_pc_12588
  %v1_125a8 = add i32 %v0_125a8, 1
  store i32 %v1_125a8, i32* %r5.global-to-local, align 4
  %v0_125ac = load i32, i32* %r7.global-to-local, align 4
  %v7_125b0 = icmp sgt i32 %v0_125ac, %v1_125a8
  br i1 %v7_125b0, label %dec_label_pc_125b4, label %dec_label_pc_125c0

dec_label_pc_125b4:                               ; preds = %dec_label_pc_125a8
  %v1_125b4 = inttoptr i32 %v0_1259c to i8*
  %v2_125b4 = load i8, i8* %v1_125b4, align 1
  %v7_125b8 = icmp eq i8 %v2_125b4, 10
  br i1 %v7_125b8, label %dec_label_pc_125c0, label %dec_label_pc_125b4.dec_label_pc_12588_crit_edge

dec_label_pc_125b4.dec_label_pc_12588_crit_edge:  ; preds = %dec_label_pc_125b4
  %v0_1258c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12588

dec_label_pc_125c0:                               ; preds = %dec_label_pc_12588, %dec_label_pc_125b4, %dec_label_pc_125a8
  %v0_125c0 = phi i32 [ %v1_125a8, %dec_label_pc_125b4 ], [ %v1_125a8, %dec_label_pc_125a8 ], [ %v0_125a8, %dec_label_pc_12588 ]
  %v2_125c0 = icmp eq i32 %v0_125c0, 0
  %v1_125c4 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_125c0, i32 0, i32 %v1_125c4
  %v2_125cc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_125cc, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_125a0, { 1, 0 }
  uselistorder i8 10, { 2, 0, 3, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_12de4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_125c0, { 1, 2, 0 }
}

define i32 @function_125d0() local_unnamed_addr {
dec_label_pc_125d0:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_125d0 = load i32, i32* @r4, align 4
  store i32 16, i32* @r4, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_125e0 = call i32 @function_131f0()
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_125e8 = inttoptr i32 %v0_125e0 to i32*
  store i32 0, i32* %v2_125e8, align 4
  %v0_125f4 = load i32, i32* %r6.global-to-local, align 4
  %v3_125f8 = call i32 @function_13500(i32 2, i32 2, i32 %v0_125f4)
  %v7_12604 = icmp eq i32 %v3_125f8, -1
  store i32 %v3_125f8, i32* %r5.global-to-local, align 4
  %v2_12610 = load i32, i32* @r4, align 4
  br i1 %v7_12604, label %dec_label_pc_12660, label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_125d0
  %v7_12610 = shl i32 2056, %v2_12610
  %v8_12610 = or i32 %v7_12610, 2056
  store i32 2, i32* %stack_var_-40, align 4
  %v3_12640 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_12640 = call i32 @function_1335c(i32 %v3_125f8, %sockaddr* %v3_12640, i32 %v2_12610)
  %v2_12648 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1264c = load i32, i32* %r5.global-to-local, align 4
  %v4_12650 = call i32 @function_13388(i32 %v0_1264c, %sockaddr* %v3_12640, i32 %v2_12648)
  %v1_12658 = call i32 @function_12c1c(i32 %v0_1264c)
  br label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_125d0, %dec_label_pc_12624
  %v0_12660 = phi i32 [ %v0_125f4, %dec_label_pc_125d0 ], [ %v8_12610, %dec_label_pc_12624 ]
  store i32 %v3_125d0, i32* @r4, align 4
  ret i32 %v0_12660

; uselistorder directives
  uselistorder i32 %v3_125f8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_1335c, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13500, { 20, 21, 18, 19, 17, 6, 5, 4, 3, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder label %dec_label_pc_12660, { 1, 0 }
}

define i32 @function_1266c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1266c:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_12670 = load i8, i8* %tmp, align 1
  %v2_12674 = icmp eq i8 %v3_12670, 0
  br i1 %v2_12674, label %bb, label %dec_label_pc_12688

bb:                                               ; preds = %dec_label_pc_1266c
  %v4_12670 = zext i8 %v3_12670 to i32
  br label %dec_label_pc_1269c

dec_label_pc_12688:                               ; preds = %dec_label_pc_1266c
  br label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_1268c, %dec_label_pc_12688
  %v0_1268c = phi i32 [ %v1_1268c, %dec_label_pc_1268c ], [ 0, %dec_label_pc_12688 ]
  %v1_1268c = add i32 %v0_1268c, 1
  %v2_12690 = add i32 %v1_1268c, %arg2
  %v3_12690 = inttoptr i32 %v2_12690 to i8*
  %v4_12690 = load i8, i8* %v3_12690, align 1
  %v2_12694 = icmp eq i8 %v4_12690, 0
  br i1 %v2_12694, label %dec_label_pc_1269c, label %dec_label_pc_1268c

dec_label_pc_1269c:                               ; preds = %dec_label_pc_1268c, %bb
  %v0_126e018 = phi i32 [ %v4_12670, %bb ], [ %v1_1268c, %dec_label_pc_1268c ]
  %v0_126a41 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_126a41, 1
  br i1 %tmp27, label %dec_label_pc_126f0, label %dec_label_pc_126b0

dec_label_pc_126b0:                               ; preds = %dec_label_pc_1269c, %dec_label_pc_126a4.backedge
  %v0_126a8.in = phi i32 [ %v0_126a8, %dec_label_pc_126a4.backedge ], [ %v0_126a41, %dec_label_pc_1269c ]
  %v0_126d4 = phi i32 [ %v1_126d4., %dec_label_pc_126a4.backedge ], [ 0, %dec_label_pc_1269c ]
  %v0_126b0 = phi i32 [ %v5_126b0, %dec_label_pc_126a4.backedge ], [ %tmp20, %dec_label_pc_1269c ]
  %v0_126a8 = add i32 %v0_126a8.in, -1
  %v1_126b0 = inttoptr i32 %v0_126b0 to i8*
  %v2_126b0 = load i8, i8* %v1_126b0, align 1
  %v3_126b0 = zext i8 %v2_126b0 to i32
  store i32 %v3_126b0, i32* @lr, align 4
  %v5_126b0 = add i32 %v0_126b0, 1
  %v2_126b4 = add i32 %v0_126d4, %arg2
  %v3_126b4 = inttoptr i32 %v2_126b4 to i8*
  %v4_126b4 = load i8, i8* %v3_126b4, align 1
  %v6_126b4 = zext i8 %v4_126b4 to i32
  %v1_126b8 = add nsw i32 %v3_126b0, -65
  %v1_126bc = add nsw i32 %v6_126b4, -65
  %tmp35 = icmp ult i32 %v1_126b8, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_126b0
  %v5_126c4 = or i32 %v3_126b0, 96
  store i32 %v5_126c4, i32* @lr, align 4
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_126b0, %bb28
  %v0_126d0 = phi i32 [ %v3_126b0, %dec_label_pc_126b0 ], [ %v5_126c4, %bb28 ]
  %tmp36 = icmp ult i32 %v1_126bc, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_126cc = or i32 %v6_126b4, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_126d0 = phi i32 [ %v6_126b4, %bb29 ], [ %v5_126cc, %bb30 ]
  %v9_126d0 = icmp eq i32 %v0_126d0, %v1_126d0
  %v1_126d4 = add i32 %v0_126d4, 1
  %v1_126d4. = select i1 %v9_126d0, i32 %v1_126d4, i32 0
  br i1 %v9_126d0, label %dec_label_pc_126e0, label %dec_label_pc_126a4.backedge

dec_label_pc_126a4.backedge:                      ; preds = %bb31, %dec_label_pc_126e0
  %tmp32 = icmp slt i32 %v0_126a8, 1
  br i1 %tmp32, label %dec_label_pc_126f0, label %dec_label_pc_126b0

dec_label_pc_126e0:                               ; preds = %bb31
  %v9_126e0 = icmp eq i32 %v0_126e018, %v1_126d4.
  br i1 %v9_126e0, label %dec_label_pc_126e8, label %dec_label_pc_126a4.backedge

dec_label_pc_126e8:                               ; preds = %dec_label_pc_126e0
  %v2_126e8 = sub i32 %v5_126b0, %tmp20
  ret i32 %v2_126e8

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126a4.backedge, %dec_label_pc_1269c
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_126d4., { 1, 0 }
  uselistorder i32 %v0_126b0, { 1, 0 }
  uselistorder i32 %v0_126d4, { 1, 0 }
  uselistorder i8 %v3_12670, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder label %dec_label_pc_126a4.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_126b0, { 1, 0 }
}

define i32 @function_126f8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_126f8:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_126f8 = load i8, i8* %arg1, align 1
  %v2_126fc = icmp eq i8 %v2_126f8, 0
  br i1 %v2_126fc, label %bb, label %dec_label_pc_12708

bb:                                               ; preds = %dec_label_pc_126f8
  %v3_126f8 = zext i8 %v2_126f8 to i32
  br label %dec_label_pc_1271c

dec_label_pc_12708:                               ; preds = %dec_label_pc_126f8
  br label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_1270c, %dec_label_pc_12708
  %v0_1270c = phi i32 [ %v1_1270c, %dec_label_pc_1270c ], [ 0, %dec_label_pc_12708 ]
  %v1_1270c = add i32 %v0_1270c, 1
  %v2_12710 = add i32 %v1_1270c, %tmp
  %v3_12710 = inttoptr i32 %v2_12710 to i8*
  %v4_12710 = load i8, i8* %v3_12710, align 1
  %v2_12714 = icmp eq i8 %v4_12710, 0
  br i1 %v2_12714, label %dec_label_pc_1271c, label %dec_label_pc_1270c

dec_label_pc_1271c:                               ; preds = %dec_label_pc_1270c, %bb
  %v0_12740 = phi i32 [ %v3_126f8, %bb ], [ %v1_1270c, %dec_label_pc_1270c ]
  %v1_1271c = inttoptr i32 %arg2 to i8*
  %v2_1271c = load i8, i8* %v1_1271c, align 1
  %v3_1271c = zext i8 %v2_1271c to i32
  %v2_12720 = icmp eq i8 %v2_1271c, 0
  br i1 %v2_12720, label %bb22, label %dec_label_pc_1272c

bb22:                                             ; preds = %dec_label_pc_1271c
  store i32 %v3_1271c, i32* @r2, align 4
  br label %dec_label_pc_12740

dec_label_pc_1272c:                               ; preds = %dec_label_pc_1271c
  br label %dec_label_pc_12730

dec_label_pc_12730:                               ; preds = %dec_label_pc_12730, %dec_label_pc_1272c
  %v0_12730 = phi i32 [ %v1_12730, %dec_label_pc_12730 ], [ 0, %dec_label_pc_1272c ]
  %v1_12730 = add i32 %v0_12730, 1
  store i32 %v1_12730, i32* @r2, align 4
  %v2_12734 = add i32 %v1_12730, %arg2
  %v3_12734 = inttoptr i32 %v2_12734 to i8*
  %v4_12734 = load i8, i8* %v3_12734, align 1
  %v2_12738 = icmp eq i8 %v4_12734, 0
  br i1 %v2_12738, label %dec_label_pc_12740, label %dec_label_pc_12730

dec_label_pc_12740:                               ; preds = %dec_label_pc_12730, %bb22
  %v0_1276c4 = phi i32 [ %v3_1271c, %bb22 ], [ %v1_12730, %dec_label_pc_12730 ]
  %v9_12740 = icmp eq i32 %v0_12740, %v0_1276c4
  br i1 %v9_12740, label %dec_label_pc_1276c.preheader, label %dec_label_pc_1274c

dec_label_pc_1276c.preheader:                     ; preds = %dec_label_pc_12740
  %v2_1276c6 = icmp eq i32 %v0_12740, 0
  br i1 %v2_1276c6, label %dec_label_pc_12774, label %dec_label_pc_12754

dec_label_pc_1274c:                               ; preds = %dec_label_pc_12754, %dec_label_pc_12740
  ret i32 0

dec_label_pc_12754:                               ; preds = %dec_label_pc_12764, %dec_label_pc_1276c.preheader
  %v0_1276c.in = phi i32 [ %v0_1276c, %dec_label_pc_12764 ], [ %v0_12740, %dec_label_pc_1276c.preheader ]
  %v0_12768 = phi i32 [ %v1_12768, %dec_label_pc_12764 ], [ %arg2, %dec_label_pc_1276c.preheader ]
  %v0_12764 = phi i32 [ %v1_12764, %dec_label_pc_12764 ], [ %tmp, %dec_label_pc_1276c.preheader ]
  %v0_1276c = add i32 %v0_1276c.in, -1
  %v1_12754 = inttoptr i32 %v0_12764 to i8*
  %v2_12754 = load i8, i8* %v1_12754, align 1
  %v3_12754 = zext i8 %v2_12754 to i32
  store i32 %v3_12754, i32* @r2, align 4
  %v1_12758 = inttoptr i32 %v0_12768 to i8*
  %v2_12758 = load i8, i8* %v1_12758, align 1
  %v9_1275c = icmp eq i8 %v2_12754, %v2_12758
  br i1 %v9_1275c, label %dec_label_pc_12764, label %dec_label_pc_1274c

dec_label_pc_12764:                               ; preds = %dec_label_pc_12754
  %v1_12764 = add i32 %v0_12764, 1
  %v1_12768 = add i32 %v0_12768, 1
  %v2_1276c = icmp eq i32 %v0_1276c, 0
  br i1 %v2_1276c, label %dec_label_pc_12774, label %dec_label_pc_12754

dec_label_pc_12774:                               ; preds = %dec_label_pc_12764, %dec_label_pc_1276c.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_12730, { 0, 1, 3, 2 }
  uselistorder i8 %v2_126f8, { 1, 0 }
}

define i32 @function_1277c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1277c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1277c = load i32, i32* @r4, align 4
  store i32 %v3_1277c, i32* %stack_var_-28, align 4
  %v22_1277c = ptrtoint i32* %stack_var_-28 to i32
  %v0_12780 = load i32, i32* @r2, align 4
  store i32 %v0_12780, i32* %r8.global-to-local, align 4
  %v2_12780 = icmp eq i32 %v0_12780, 0
  store i1 %v2_12780, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_12780, label %dec_label_pc_12870, label %dec_label_pc_12790

dec_label_pc_12790:                               ; preds = %dec_label_pc_1277c
  %v3_12790 = icmp eq i8 %arg1, 0
  store i1 %v3_12790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12790, label %.thread, label %dec_label_pc_127a4

.thread:                                          ; preds = %dec_label_pc_12790
  %v4_12798 = inttoptr i32 %v0_12780 to i8*
  store i8 48, i8* %v4_12798, align 1
  %v0_1279c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1279c.pr.pr, label %.thread1, label %dec_label_pc_127a4

.thread1:                                         ; preds = %.thread
  %v4_1279c = load i32, i32* %r8.global-to-local, align 4
  %v5_1279c = add i32 %v4_1279c, 1
  %v6_1279c = inttoptr i32 %v5_1279c to i8*
  store i8 0, i8* %v6_1279c, align 1
  %v0_127a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127a0.pr.pr, label %dec_label_pc_12870, label %dec_label_pc_127a4

dec_label_pc_127a4:                               ; preds = %dec_label_pc_12790, %.thread, %.thread1
  %v7_127a8 = icmp eq i32 %arg2, 10
  store i1 %v7_127a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127a8, label %bb, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_127a4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_127a4
  %tmp39 = icmp slt i8 %arg1, 0
  %phitmp = icmp eq i1 %tmp39, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_127cc

.thread4:                                         ; preds = %bb, %.thread21
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127dc

dec_label_pc_127cc:                               ; preds = %bb
  %v2_127cc = sub nsw i32 0, %tmp
  store i32 %v2_127cc, i32* %r4.global-to-local, align 4
  store i1 %v3_12790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12790, label %dec_label_pc_1287c, label %dec_label_pc_127dc

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127cc, %.thread4
  %v0_127e410 = phi i32 [ %tmp, %.thread4 ], [ %v2_127cc, %dec_label_pc_127cc ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_127cc ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_127e0 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_127e0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %bb37, %dec_label_pc_127dc
  %v0_127e4 = phi i32 [ %v0_12808, %bb37 ], [ %v0_127e410, %dec_label_pc_127dc ]
  store i32 %v0_127e4, i32* %r0.global-to-local, align 4
  %v0_127e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_127e8, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_127e4, 16777216
  %v1_127ec = sdiv i32 %sext, 16777216
  %v3_127ec = call i32 @function_129a4(i32 %v1_127ec, i32 %v0_127e8)
  store i32 %v3_127ec, i32* %r0.global-to-local, align 4
  %v7_127f0 = icmp eq i32 %v3_127ec, 9
  store i1 %v7_127f0, i1* %cpsr_z.global-to-local, align 1
  %v1_127f4 = add i32 %v3_127ec, 48
  %v0_127f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_127f8, i32* @r1, align 4
  %v7_127fc = icmp sgt i32 %v3_127ec, 9
  %extract.t = trunc i32 %v1_127f4 to i8
  br i1 %v7_127fc, label %bb36, label %bb37

bb36:                                             ; preds = %dec_label_pc_127e4
  %v9_127fc = add i32 %v3_127ec, 55
  %extract.t20 = trunc i32 %v9_127fc to i8
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_127e4, %bb36
  %v0_12804.off0 = phi i8 [ %extract.t, %dec_label_pc_127e4 ], [ %extract.t20, %bb36 ]
  %v0_12800 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12800, i32* @r0, align 4
  %v2_12804 = load i32, i32* %r7.global-to-local, align 4
  %v3_12804 = inttoptr i32 %v2_12804 to i8*
  store i8 %v0_12804.off0, i8* %v3_12804, align 1
  %v4_12804 = load i32, i32* %r7.global-to-local, align 4
  %v5_12804 = add i32 %v4_12804, -1
  store i32 %v5_12804, i32* %r7.global-to-local, align 4
  %v0_12808 = call i32 @function_12894()
  store i32 %v0_12808, i32* %r0.global-to-local, align 4
  store i32 %v0_12808, i32* %r4.global-to-local, align 4
  %v2_1280c = icmp eq i32 %v0_12808, 0
  store i1 %v2_1280c, i1* %cpsr_z.global-to-local, align 1
  %v0_12810 = load i32, i32* %r6.global-to-local, align 4
  %v1_12810 = add i32 %v0_12810, -1
  store i32 %v1_12810, i32* %r6.global-to-local, align 4
  br i1 %v2_1280c, label %dec_label_pc_12818, label %dec_label_pc_127e4

dec_label_pc_12818:                               ; preds = %bb37
  %v0_12818 = load i32, i32* %sl.global-to-local, align 4
  %v2_12818 = icmp eq i32 %v0_12818, 0
  store i1 %v2_12818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12818, label %bb38, label %dec_label_pc_12880

bb38:                                             ; preds = %dec_label_pc_12818
  store i32 %v0_12810, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12824

dec_label_pc_12824:                               ; preds = %bb38, %dec_label_pc_12880
  %v1_12830 = phi i32 [ %v0_12810, %bb38 ], [ %v1_12828.pre, %dec_label_pc_12880 ]
  %v2_12824 = ptrtoint i32* %stack_var_-62 to i32
  %v2_12828 = add i32 %v1_12830, %v2_12824
  %v3_12828 = inttoptr i32 %v2_12828 to i8*
  %v4_12828 = load i8, i8* %v3_12828, align 1
  %v6_12828 = zext i8 %v4_12828 to i32
  %v2_1282c = icmp eq i8 %v4_12828, 0
  store i1 %v2_1282c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12828, i32* %r1.global-to-local, align 4
  br i1 %v2_1282c, label %dec_label_pc_12854, label %dec_label_pc_12838

dec_label_pc_12838:                               ; preds = %dec_label_pc_12824
  br label %dec_label_pc_1283c

dec_label_pc_1283c:                               ; preds = %dec_label_pc_1283c, %dec_label_pc_12838
  %v0_1283c = phi i32 [ %v1_1283c, %dec_label_pc_1283c ], [ 0, %dec_label_pc_12838 ]
  %v1_1283c = add i32 %v0_1283c, 1
  store i32 %v1_1283c, i32* @r2, align 4
  %v2_12840 = add i32 %v1_1283c, %v2_12828
  %v3_12840 = inttoptr i32 %v2_12840 to i8*
  %v4_12840 = load i8, i8* %v3_12840, align 1
  %v2_12844 = icmp eq i8 %v4_12840, 0
  store i1 %v2_12844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12844, label %dec_label_pc_1284c, label %dec_label_pc_1283c

dec_label_pc_1284c:                               ; preds = %dec_label_pc_1283c
  %v7_1284c = icmp eq i32 %v0_1283c, -2
  store i1 %v7_1284c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1284c, label %dec_label_pc_12870, label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_1284c, %dec_label_pc_12824
  %v0_1285c17 = phi i32 [ %v1_1283c, %dec_label_pc_1284c ], [ %v6_12828, %dec_label_pc_12824 ]
  store i32 %v2_12828, i32* %r0.global-to-local, align 4
  %v0_12858 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12858, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1285c

dec_label_pc_1285c:                               ; preds = %dec_label_pc_1285c.dec_label_pc_1285c_crit_edge, %dec_label_pc_12854
  %v2_12868 = phi i32 [ %v5_12868, %dec_label_pc_1285c.dec_label_pc_1285c_crit_edge ], [ %v0_12858, %dec_label_pc_12854 ]
  %v0_12860 = phi i32 [ %v0_12860.pre, %dec_label_pc_1285c.dec_label_pc_1285c_crit_edge ], [ %v2_12828, %dec_label_pc_12854 ]
  %v0_1285c = phi i32 [ %v0_1285c.pre, %dec_label_pc_1285c.dec_label_pc_1285c_crit_edge ], [ %v0_1285c17, %dec_label_pc_12854 ]
  %v1_1285c = add i32 %v0_1285c, -1
  store i32 %v1_1285c, i32* @r2, align 4
  %v1_12860 = inttoptr i32 %v0_12860 to i8*
  %v2_12860 = load i8, i8* %v1_12860, align 1
  %v5_12860 = add i32 %v0_12860, 1
  store i32 %v5_12860, i32* %r0.global-to-local, align 4
  %v3_12864 = icmp eq i32 %v0_1285c, 0
  store i1 %v3_12864, i1* %cpsr_z.global-to-local, align 1
  %v3_12868 = inttoptr i32 %v2_12868 to i8*
  store i8 %v2_12860, i8* %v3_12868, align 1
  %v4_12868 = load i32, i32* %r1.global-to-local, align 4
  %v5_12868 = add i32 %v4_12868, 1
  store i32 %v5_12868, i32* %r1.global-to-local, align 4
  br i1 %v3_12864, label %dec_label_pc_12870, label %dec_label_pc_1285c.dec_label_pc_1285c_crit_edge

dec_label_pc_1285c.dec_label_pc_1285c_crit_edge:  ; preds = %dec_label_pc_1285c
  %v0_1285c.pre = load i32, i32* @r2, align 4
  %v0_12860.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1285c

dec_label_pc_12870:                               ; preds = %dec_label_pc_1285c, %dec_label_pc_1284c, %.thread1, %dec_label_pc_1277c
  %v0_12870 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12870, i32* %r0.global-to-local, align 4
  %v2_12878 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12878, i32* @r4, align 4
  ret i32 %v0_12870

dec_label_pc_1287c:                               ; preds = %dec_label_pc_127cc
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12880

dec_label_pc_12880:                               ; preds = %dec_label_pc_12818, %dec_label_pc_1287c
  %v1_12884 = phi i32 [ %v1_12810, %dec_label_pc_12818 ], [ 32, %dec_label_pc_1287c ]
  %v2_12884 = add i32 %v1_12884, %v22_1277c
  %v3_1288c = add i32 %v2_12884, -34
  %v4_1288c = inttoptr i32 %v3_1288c to i8*
  store i8 45, i8* %v4_1288c, align 1
  %v1_12828.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12824

; uselistorder directives
  uselistorder i32 %v5_12868, { 1, 0 }
  uselistorder i1 %v3_12864, { 1, 0 }
  uselistorder i32 %v0_12860, { 1, 0 }
  uselistorder i1 %v7_1284c, { 1, 0 }
  uselistorder i32 %v1_1283c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_12828, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12808, { 1, 2, 3, 0 }
  uselistorder i32 %v3_127ec, { 1, 0, 2, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_12790, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12780, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 9, 10, 11, 12, 13 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12880, { 1, 0 }
  uselistorder label %dec_label_pc_12824, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_127a4, { 2, 1, 0 }
}

define i32 @function_12894() local_unnamed_addr {
dec_label_pc_12894:
  %v0_12894 = load i32, i32* @r1, align 4
  %v1_12894 = add i32 %v0_12894, -1
  %v7_12894 = icmp eq i32 %v0_12894, 1
  br i1 %v7_12894, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_12894
  %v2_12898 = load i32, i32* @r0, align 4
  ret i32 %v2_12898

bb82:                                             ; preds = %dec_label_pc_12894
  %v2_12894 = icmp eq i32 %v0_12894, 0
  br i1 %v2_12894, label %dec_label_pc_1297c, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %bb82
  %v0_128a0 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_128a0, %v0_12894
  br i1 %tmp, label %dec_label_pc_128a8, label %dec_label_pc_12934

dec_label_pc_128a8:                               ; preds = %dec_label_pc_128a0
  %v2_128a8 = and i32 %v1_12894, %v0_12894
  %v4_128a8 = icmp eq i32 %v2_128a8, 0
  br i1 %v4_128a8, label %dec_label_pc_12940, label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %dec_label_pc_128a8
  %v3_128b0 = icmp ult i32 %v0_12894, 536870912
  br i1 %v3_128b0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_128b0
  %v4_128b4 = mul i32 %v0_12894, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_128b0, %.thread
  %v0_128d4.pr36.ph = phi i32 [ %v4_128b4, %.thread ], [ %v0_12894, %dec_label_pc_128b0 ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_128b0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_128d4.pr36 = phi i32 [ %v4_128c8, %bb85 ], [ %v0_128d4.pr36.ph, %.preheader.preheader ]
  %v1_128cc = phi i32 [ %v4_128cc, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_128c0 = icmp ugt i32 %v0_128d4.pr36, 268435455
  br i1 %v2_128c0, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_128d4thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_128c4 = icmp ult i32 %v0_128d4.pr36, %v0_128a0
  br i1 %v4_128c4, label %bb84, label %dec_label_pc_128d4thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_128c8 = and i32 %v0_128d4.pr36, 268435456
  %v3_128c8 = icmp eq i32 %v2_128c8, 0
  %v4_128c8 = mul i32 %v0_128d4.pr36, 16
  br i1 %v3_128c8, label %bb85, label %dec_label_pc_128d4.loopexit

bb85:                                             ; preds = %bb84
  %v2_128cc = and i32 %v1_128cc, 268435456
  %v3_128cc = icmp eq i32 %v2_128cc, 0
  %v4_128cc = mul i32 %v1_128cc, 16
  br i1 %v3_128cc, label %.preheader, label %dec_label_pc_128d4thread-pre-split.loopexit.loopexit

dec_label_pc_128d4thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_128e048.ph = phi i32 [ %v1_128cc, %bb83 ], [ %v4_128cc, %bb85 ]
  %v0_128d4.pr38.ph = phi i32 [ %v0_128d4.pr36, %bb83 ], [ %v4_128c8, %bb85 ]
  br label %dec_label_pc_128d4thread-pre-split.loopexit

dec_label_pc_128d4thread-pre-split.loopexit:      ; preds = %dec_label_pc_128d4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_128e048 = phi i32 [ %v1_128cc, %.thread2 ], [ %v1_128e048.ph, %dec_label_pc_128d4thread-pre-split.loopexit.loopexit ]
  %v0_128d4.pr38 = phi i32 [ %v0_128d4.pr36, %.thread2 ], [ %v0_128d4.pr38.ph, %dec_label_pc_128d4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_128d4thread-pre-split

dec_label_pc_128d4thread-pre-split:               ; preds = %dec_label_pc_128d4thread-pre-split.loopexit, %bb87
  %v1_128e046 = phi i32 [ %v1_128e048, %dec_label_pc_128d4thread-pre-split.loopexit ], [ %v3_128e0, %bb87 ]
  %v0_128d4.pr = phi i32 [ %v0_128d4.pr38, %dec_label_pc_128d4thread-pre-split.loopexit ], [ %v3_128dc, %bb87 ]
  br label %dec_label_pc_128d4

dec_label_pc_128d4.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_128d4

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128d4.loopexit, %dec_label_pc_128d4thread-pre-split
  %v1_128e0 = phi i32 [ %v1_128e046, %dec_label_pc_128d4thread-pre-split ], [ %v1_128cc, %dec_label_pc_128d4.loopexit ]
  %v1_128dc = phi i32 [ %v0_128d4.pr, %dec_label_pc_128d4thread-pre-split ], [ %v4_128c8, %dec_label_pc_128d4.loopexit ]
  %v2_128d4 = icmp slt i32 %v1_128dc, 0
  br i1 %v2_128d4, label %dec_label_pc_128e8, label %bb86

bb86:                                             ; preds = %dec_label_pc_128d4
  %v4_128d8 = icmp ult i32 %v1_128dc, %v0_128a0
  br i1 %v4_128d8, label %bb87, label %dec_label_pc_128e8

bb87:                                             ; preds = %bb86
  %v3_128dc = mul i32 %v1_128dc, 2
  %v2_128e0 = icmp slt i32 %v1_128e0, 0
  %v3_128e0 = mul i32 %v1_128e0, 2
  br i1 %v2_128e0, label %dec_label_pc_128e8, label %dec_label_pc_128d4thread-pre-split

dec_label_pc_128e8:                               ; preds = %bb86, %dec_label_pc_128d4, %bb87
  %v2_128f459 = phi i32 [ %v3_128e0, %bb87 ], [ %v1_128e0, %bb86 ], [ %v1_128e0, %dec_label_pc_128d4 ]
  %v1_128ec51 = phi i32 [ %v3_128dc, %bb87 ], [ %v1_128dc, %bb86 ], [ %v1_128dc, %dec_label_pc_128d4 ]
  br label %dec_label_pc_128ec

dec_label_pc_128ec:                               ; preds = %.thread11, %dec_label_pc_128e8
  %v1_12920 = phi i32 [ %v4_12920, %.thread11 ], [ %v2_128f459, %dec_label_pc_128e8 ]
  %v1_128f4 = phi i32 [ %v0_1292c, %.thread11 ], [ 0, %dec_label_pc_128e8 ]
  %v1_12924 = phi i32 [ %v4_12924, %.thread11 ], [ %v1_128ec51, %dec_label_pc_128e8 ]
  %v1_128f0 = phi i32 [ %v0_1291c, %.thread11 ], [ %v0_128a0, %dec_label_pc_128e8 ]
  %v3_128ec = icmp ult i32 %v1_128f0, %v1_12924
  br i1 %v3_128ec, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_128ec
  %v3_128f0 = sub i32 %v1_128f0, %v1_12924
  %v3_128f4 = or i32 %v1_128f4, %v1_12920
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_128ec, %bb88
  %v1_128fc = phi i32 [ %v1_128f0, %dec_label_pc_128ec ], [ %v3_128f0, %bb88 ]
  %v1_12900 = phi i32 [ %v1_128f4, %dec_label_pc_128ec ], [ %v3_128f4, %bb88 ]
  %v4_128f8 = udiv i32 %v1_12924, 2
  %v6_128f8 = icmp ult i32 %v1_128fc, %v4_128f8
  br i1 %v6_128f8, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_128fc = urem i32 %v1_12924, 2
  %v4_128fc = icmp eq i32 %v3_128fc, 0
  %v6_128fc = sub i32 %v1_128fc, %v4_128f8
  br i1 %v4_128fc, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12900 = udiv i32 %v1_12920, 2
  %v6_12900 = or i32 %v1_12900, %v5_12900
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_12908 = phi i32 [ %v6_128fc, %bb89 ], [ %v1_128fc, %.thread7 ], [ %v6_128fc, %bb90 ]
  %v1_1290c = phi i32 [ %v1_12900, %bb89 ], [ %v1_12900, %.thread7 ], [ %v6_12900, %bb90 ]
  %v4_12904 = udiv i32 %v1_12924, 4
  %v6_12904 = icmp ult i32 %v1_12908, %v4_12904
  br i1 %v6_12904, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_12908 = and i32 %v1_12924, 2
  %v4_12908 = icmp eq i32 %v3_12908, 0
  %v6_12908 = sub i32 %v1_12908, %v4_12904
  br i1 %v4_12908, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_1290c = udiv i32 %v1_12920, 4
  %v6_1290c = or i32 %v1_1290c, %v5_1290c
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_12914 = phi i32 [ %v6_12908, %bb91 ], [ %v1_12908, %.thread8 ], [ %v6_12908, %bb92 ]
  %v1_12918 = phi i32 [ %v1_1290c, %bb91 ], [ %v1_1290c, %.thread8 ], [ %v6_1290c, %bb92 ]
  %v4_12910 = udiv i32 %v1_12924, 8
  %v6_12910 = icmp ult i32 %v1_12914, %v4_12910
  br i1 %v6_12910, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_12914 = and i32 %v1_12924, 4
  %v4_12914 = icmp eq i32 %v3_12914, 0
  %v6_12914 = sub i32 %v1_12914, %v4_12910
  br i1 %v4_12914, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12918 = udiv i32 %v1_12920, 8
  %v6_12918 = or i32 %v1_12918, %v5_12918
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_1292c = phi i32 [ %v1_12918, %bb93 ], [ %v1_12918, %.thread9 ], [ %v6_12918, %bb94 ]
  %v0_1291c = phi i32 [ %v6_12914, %bb93 ], [ %v1_12914, %.thread9 ], [ %v6_12914, %bb94 ]
  %v2_1291c = icmp eq i32 %v0_1291c, 0
  br i1 %v2_1291c, label %dec_label_pc_1292c, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_12920, 16
  br i1 %tmp142, label %dec_label_pc_1292c, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_12920 = udiv i32 %v1_12920, 16
  %v4_12924 = udiv i32 %v1_12924, 16
  br label %dec_label_pc_128ec

dec_label_pc_1292c:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_1292c

dec_label_pc_12934:                               ; preds = %dec_label_pc_128a0
  %v9_128a0 = icmp eq i32 %v0_128a0, %v0_12894
  %. = zext i1 %v9_128a0 to i32
  ret i32 %.

dec_label_pc_12940:                               ; preds = %dec_label_pc_128a8
  %v2_12940 = icmp ugt i32 %v0_12894, 65535
  br i1 %v2_12940, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_12940
  %v2_12944 = and i32 %v0_12894, 32768
  %v3_12944 = icmp eq i32 %v2_12944, 0
  %v4_12944 = udiv i32 %v0_12894, 65536
  br i1 %v3_12944, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_12940
  %v0_1295065 = phi i32 [ %v0_12894, %dec_label_pc_12940 ], [ %v4_12944, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_12954 = phi i32 [ %v0_1295065, %.thread16 ], [ %v4_12944, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_12950 = icmp ugt i32 %v1_12954, 255
  br i1 %v2_12950, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_12954 = and i32 %v1_12954, 128
  %v3_12954 = icmp eq i32 %v2_12954, 0
  %v4_12954 = udiv i32 %v1_12954, 256
  br i1 %v3_12954, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_12958 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_12964 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_12958, %bb102 ]
  %v1_12960 = phi i32 [ %v1_12954, %bb100 ], [ %v4_12954, %bb101 ], [ %v4_12954, %bb102 ]
  %v2_1295c = icmp ugt i32 %v1_12960, 15
  br i1 %v2_1295c, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_12960 = and i32 %v1_12960, 8
  %v3_12960 = icmp eq i32 %v2_12960, 0
  %v4_12960 = udiv i32 %v1_12960, 16
  br i1 %v3_12960, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_12964 = add nsw i32 %v1_12964, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_1296c = phi i32 [ %v1_12964, %.thread17 ], [ %v1_12964, %bb103 ], [ %v2_12964, %bb104 ]
  %v5_12970 = phi i32 [ %v1_12960, %.thread17 ], [ %v4_12960, %bb103 ], [ %v4_12960, %bb104 ]
  %v2_12968 = icmp ugt i32 %v5_12970, 3
  %v7_12968 = icmp eq i32 %v5_12970, 4
  %v2_1296c = xor i1 %v7_12968, true
  %v3_1296c = and i1 %v2_12968, %v2_1296c
  br i1 %v3_1296c, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_1296c = add nsw i32 %v4_1296c, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_12970 = phi i32 [ %v4_1296c, %.thread18 ], [ %v5_1296c, %bb105 ]
  %v2_12970 = xor i1 %v2_12968, true
  %v3_12970 = or i1 %v7_12968, %v2_12970
  br i1 %v3_12970, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_12970 = udiv i32 %v5_12970, 2
  %v9_12970 = add i32 %v4_12970, %v8_12970
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_12974 = phi i32 [ %v4_12970, %bb106 ], [ %v9_12970, %bb107 ]
  %v6_12974 = lshr i32 %v0_128a0, %v1_12974
  ret i32 %v6_12974

dec_label_pc_1297c:                               ; preds = %bb82
  %v0_1297c = load i32, i32* @lr, align 4
  %v0_12980 = call i32 @function_12b54()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_1297c)
  %v9_1298c = load i32, i32* @lr, align 4
  %v0_12990 = call i32 @function_12894()
  store i32 %v9_1298c, i32* @lr, align 4
  ret i32 %v0_12990

; uselistorder directives
  uselistorder i32 %v4_12970, { 1, 0 }
  uselistorder i1 %v7_12968, { 1, 0 }
  uselistorder i32 %v4_12960, { 1, 0 }
  uselistorder i32 %v1_12960, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12954, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12954, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12944, { 1, 0 }
  uselistorder i32 %v0_1291c, { 1, 0 }
  uselistorder i32 %v4_12910, { 1, 0 }
  uselistorder i32 %v1_12918, { 1, 2, 0 }
  uselistorder i32 %v4_12904, { 1, 0 }
  uselistorder i32 %v1_1290c, { 1, 2, 0 }
  uselistorder i32 %v4_128f8, { 1, 0 }
  uselistorder i32 %v1_12900, { 1, 2, 0 }
  uselistorder i32 %v1_12924, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_128f4, { 1, 0 }
  uselistorder i32 %v1_12920, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_128e0, { 1, 0 }
  uselistorder i32 %v3_128dc, { 1, 0 }
  uselistorder i32 %v1_128dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_128e0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_128cc, { 1, 0 }
  uselistorder i32 %v4_128c8, { 2, 1, 0 }
  uselistorder i32 %v1_128cc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_128d4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_128a0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12894, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 65535, { 100, 0, 1, 53, 12, 54, 24, 28, 55, 25, 56, 26, 57, 27, 58, 59, 13, 60, 2, 61, 62, 32, 63, 31, 64, 29, 65, 30, 66, 14, 15, 3, 67, 33, 68, 34, 69, 16, 17, 4, 70, 35, 71, 36, 72, 18, 73, 39, 74, 38, 75, 37, 76, 19, 20, 5, 41, 77, 40, 78, 79, 80, 21, 81, 82, 6, 44, 83, 42, 84, 43, 85, 86, 22, 87, 7, 8, 47, 88, 45, 89, 46, 90, 91, 23, 92, 9, 48, 93, 49, 94, 50, 95, 96, 10, 51, 97, 98, 11, 52, 99 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_1292c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_128e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128d4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_129a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_129a4:
  store i32 %arg1, i32* @r0, align 4
  %v1_129a4 = add i32 %arg2, -1
  %v2_129a4 = icmp eq i32 %arg2, 0
  br i1 %v2_129a4, label %dec_label_pc_12a60, label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129a4
  %v7_129a4 = icmp eq i32 %arg2, 1
  br i1 %v7_129a4, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_129ac
  %v1_129ac = load i32, i32* @r0, align 4
  %v10_129ac = icmp eq i32 %v1_129ac, %arg2
  br i1 %v10_129ac, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_129ac, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_129ac = icmp ult i32 %v1_129ac, %arg2
  br i1 %v4_129ac, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_129b4 = and i32 %v1_129a4, %arg2
  %v8_129b4 = icmp eq i32 %v6_129b4, 0
  br i1 %v8_129b4, label %.thread67, label %dec_label_pc_129c4.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_129b8 = phi i32 [ %v1_129ac, %bb75 ], [ 0, %.thread65 ]
  %v3_129b8 = and i32 %v1_129b8, %v1_129a4
  br label %bb76

dec_label_pc_129c4.preheader:                     ; preds = %bb75
  %v2_129c499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_129c499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_12a54, %bb74, %bb89, %bb84, %dec_label_pc_12a24, %.thread67
  %v5_129bc = phi i32 [ %v1_129ac, %bb74 ], [ %v3_129b8, %.thread67 ], [ %v1_12a00.v6_12a00.v6_12a08.v6_12a10, %dec_label_pc_12a24 ], [ 0, %bb84 ], [ %v1_12a58, %dec_label_pc_12a54 ], [ %v2_12a54, %bb89 ]
  ret i32 %v5_129bc

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_129c4.preheader
  %v0_129d8.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_129c4.preheader ], [ %v4_129cc, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_129c4.preheader ], [ %v2_129d011, %.thread1.thread9 ]
  br label %dec_label_pc_129d8thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_129c4.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_129d011, %.thread1.thread9 ], [ 0, %dec_label_pc_129c4.preheader ]
  %v0_129d8.pr33100 = phi i32 [ %v4_129cc, %.thread1.thread9 ], [ %arg2, %dec_label_pc_129c4.preheader ]
  %v4_129c8 = icmp ult i32 %v0_129d8.pr33100, %v1_129ac
  br i1 %v4_129c8, label %bb78, label %dec_label_pc_129d8thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_129cc = and i32 %v0_129d8.pr33100, 268435456
  %v3_129cc = icmp eq i32 %v2_129cc, 0
  %v4_129cc = mul i32 %v0_129d8.pr33100, 16
  br i1 %v3_129cc, label %.thread1.thread9, label %dec_label_pc_129d8.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_129d011 = add i32 %storemerge101, 4
  %v2_129c4 = icmp ugt i32 %v4_129cc, 268435455
  br i1 %v2_129c4, label %.thread, label %bb77

dec_label_pc_129d8thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_129d8thread-pre-split.loopexit

dec_label_pc_129d8thread-pre-split.loopexit:      ; preds = %dec_label_pc_129d8thread-pre-split.loopexit.loopexit, %.thread
  %v0_129d8.pr3398 = phi i32 [ %v0_129d8.pr33.lcssa, %.thread ], [ %v0_129d8.pr33100, %dec_label_pc_129d8thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_129d8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_129d8thread-pre-split

dec_label_pc_129d8thread-pre-split:               ; preds = %.thread4, %dec_label_pc_129d8thread-pre-split.loopexit
  %v1_129e439 = phi i32 [ %storemerge95, %dec_label_pc_129d8thread-pre-split.loopexit ], [ %v2_129e4, %.thread4 ]
  %v0_129d8.pr = phi i32 [ %v0_129d8.pr3398, %dec_label_pc_129d8thread-pre-split.loopexit ], [ %v3_129e0, %.thread4 ]
  br label %dec_label_pc_129d8

dec_label_pc_129d8.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129d8.loopexit, %dec_label_pc_129d8thread-pre-split
  %v0_129ec.pr = phi i32 [ %v1_129e439, %dec_label_pc_129d8thread-pre-split ], [ %storemerge101, %dec_label_pc_129d8.loopexit ]
  %v1_129e0 = phi i32 [ %v0_129d8.pr, %dec_label_pc_129d8thread-pre-split ], [ %v4_129cc, %dec_label_pc_129d8.loopexit ]
  %v2_129d8 = icmp slt i32 %v1_129e0, 0
  br i1 %v2_129d8, label %dec_label_pc_129ec, label %bb79

bb79:                                             ; preds = %dec_label_pc_129d8
  %v4_129dc = icmp ult i32 %v1_129e0, %v1_129ac
  br i1 %v4_129dc, label %.thread4, label %dec_label_pc_129ec

.thread4:                                         ; preds = %bb79
  %v3_129e0 = mul i32 %v1_129e0, 2
  %v2_129e4 = add i32 %v0_129ec.pr, 1
  br label %dec_label_pc_129d8thread-pre-split

dec_label_pc_129ec:                               ; preds = %bb79, %dec_label_pc_129d8
  %v2_129ec = add i32 %v0_129ec.pr, -3
  %v5_129f0 = icmp slt i32 %v0_129ec.pr, 3
  br i1 %v5_129f0, label %dec_label_pc_12a30, label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129ec, %bb83
  %v6_12a1c = phi i32 [ %v0_12a24, %bb83 ], [ %v2_129ec, %dec_label_pc_129ec ]
  %v1_129f8 = phi i32 [ %v1_12a00.v6_12a00.v6_12a08.v6_12a10, %bb83 ], [ %v1_129ac, %dec_label_pc_129ec ]
  %v3_12a1812 = phi i32 [ %v3_12a18, %bb83 ], [ %v1_129e0, %dec_label_pc_129ec ]
  %v3_129f4 = icmp ult i32 %v1_129f8, %v3_12a1812
  %v3_129f8 = select i1 %v3_129f4, i32 0, i32 %v3_12a1812
  %v1_12a00 = sub i32 %v1_129f8, %v3_129f8
  %v4_129fc = udiv i32 %v3_12a1812, 2
  %v6_129fc = icmp ult i32 %v1_12a00, %v4_129fc
  %v6_12a00 = select i1 %v6_129fc, i32 0, i32 %v4_129fc
  %v1_12a00.v6_12a00 = sub i32 %v1_12a00, %v6_12a00
  %.demorgan = and i1 %v3_129f4, %v6_129fc
  %v4_12a04 = udiv i32 %v3_12a1812, 4
  %v6_12a04 = icmp ult i32 %v1_12a00.v6_12a00, %v4_12a04
  %v6_12a08 = select i1 %v6_12a04, i32 0, i32 %v4_12a04
  %v1_12a00.v6_12a00.v6_12a08 = sub i32 %v1_12a00.v6_12a00, %v6_12a08
  %.demorgan71 = and i1 %.demorgan, %v6_12a04
  %v4_12a0c = udiv i32 %v3_12a1812, 8
  %v6_12a0c = icmp ult i32 %v1_12a00.v6_12a00.v6_12a08, %v4_12a0c
  %v6_12a10 = select i1 %v6_12a0c, i32 0, i32 %v4_12a0c
  %v1_12a00.v6_12a00.v6_12a08.v6_12a10 = sub i32 %v1_12a00.v6_12a00.v6_12a08, %v6_12a10
  %.demorgan72 = and i1 %.demorgan71, %v6_12a0c
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_129f4
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_129f4, %bb80
  %v2_12a14 = add i32 %v1_12a00.v6_12a00.v6_12a08.v6_12a10, -1
  %v4_12a14 = sub i32 0, %v1_12a00.v6_12a00.v6_12a08.v6_12a10
  %v5_12a14 = and i32 %v1_12a00.v6_12a00.v6_12a08.v6_12a10, %v4_12a14
  %v3_12a18 = udiv i32 %v3_12a1812, 16
  %v5_12a1c = icmp slt i32 %v1_12a00.v6_12a00.v6_12a08.v6_12a10, 1
  br i1 %v5_12a1c, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_12a1c = add i32 %v6_12a1c, -4
  %v9_12a1c = sub i32 3, %v6_12a1c
  %v10_12a1c = and i32 %v9_12a1c, %v6_12a1c
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_12a24 = phi i32 [ %v6_12a1c, %bb81 ], [ %v7_12a1c, %bb82 ]
  %v0_12a2015.in = phi i32 [ %v2_12a14, %bb81 ], [ %v7_12a1c, %bb82 ]
  %v1_12a2014.in = phi i32 [ %v5_12a14, %bb81 ], [ %v10_12a1c, %bb82 ]
  %v1_12a2014 = icmp slt i32 %v1_12a2014.in, 0
  %v0_12a2015 = icmp slt i32 %v0_12a2015.in, 0
  %v2_12a20 = xor i1 %v0_12a2015, %v1_12a2014
  br i1 %v2_12a20, label %dec_label_pc_12a24, label %dec_label_pc_129f4

dec_label_pc_12a24:                               ; preds = %bb83
  %v1_12a24 = urem i32 %v0_12a24, 4
  %v2_12a24 = icmp eq i32 %v1_12a24, 0
  br i1 %v2_12a24, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_12a24
  %v3_12a28 = icmp eq i32 %v1_12a00.v6_12a00.v6_12a08.v6_12a10, 0
  br i1 %v3_12a28, label %bb76, label %dec_label_pc_12a30

dec_label_pc_12a30:                               ; preds = %bb84, %dec_label_pc_129ec
  %v0_12a44 = phi i32 [ %v3_12a18, %bb84 ], [ %v1_129e0, %dec_label_pc_129ec ]
  %v1_12a40 = phi i32 [ %v1_12a00.v6_12a00.v6_12a08.v6_12a10, %bb84 ], [ %v1_129ac, %dec_label_pc_129ec ]
  %v0_12a30 = phi i32 [ %v0_12a24, %bb84 ], [ %v2_129ec, %dec_label_pc_129ec ]
  %v5_12a34 = icmp slt i32 %v0_12a30, -2
  br i1 %v5_12a34, label %dec_label_pc_12a54, label %dec_label_pc_12a38

dec_label_pc_12a38:                               ; preds = %dec_label_pc_12a30
  %v8_12a30 = icmp eq i32 %v0_12a30, -2
  br i1 %v8_12a30, label %dec_label_pc_12a48, label %dec_label_pc_12a3c

dec_label_pc_12a3c:                               ; preds = %dec_label_pc_12a38
  %v3_12a3c = icmp ult i32 %v1_12a40, %v0_12a44
  br i1 %v3_12a3c, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_12a3c
  %v2_12a3c = sub i32 %v1_12a40, %v0_12a44
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12a3c, %bb85
  %v0_12a4852 = phi i32 [ %v1_12a40, %dec_label_pc_12a3c ], [ %v2_12a3c, %bb85 ]
  %v3_12a44 = udiv i32 %v0_12a44, 2
  br label %dec_label_pc_12a48

dec_label_pc_12a48:                               ; preds = %dec_label_pc_12a38, %bb86
  %v0_12a50 = phi i32 [ %v0_12a44, %dec_label_pc_12a38 ], [ %v3_12a44, %bb86 ]
  %v1_12a4c = phi i32 [ %v1_12a40, %dec_label_pc_12a38 ], [ %v0_12a4852, %bb86 ]
  %v3_12a48 = icmp ult i32 %v1_12a4c, %v0_12a50
  br i1 %v3_12a48, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_12a48
  %v2_12a48 = sub i32 %v1_12a4c, %v0_12a50
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_12a48, %bb87
  %v0_12a5455 = phi i32 [ %v1_12a4c, %dec_label_pc_12a48 ], [ %v2_12a48, %bb87 ]
  %v3_12a50 = udiv i32 %v0_12a50, 2
  br label %dec_label_pc_12a54

dec_label_pc_12a54:                               ; preds = %dec_label_pc_12a30, %bb88
  %v2_12a58 = phi i32 [ %v0_12a44, %dec_label_pc_12a30 ], [ %v3_12a50, %bb88 ]
  %v1_12a58 = phi i32 [ %v1_12a40, %dec_label_pc_12a30 ], [ %v0_12a5455, %bb88 ]
  %v3_12a54 = icmp ult i32 %v1_12a58, %v2_12a58
  br i1 %v3_12a54, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_12a54
  %v2_12a54 = sub i32 %v1_12a58, %v2_12a58
  br label %bb76

dec_label_pc_12a60:                               ; preds = %dec_label_pc_129a4
  %v0_12a60 = load i32, i32* @lr, align 4
  %v0_12a64 = call i32 @function_12b54()
  call void @__pseudo_branch(i32 %v0_12a60)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12a58, { 1, 2, 0 }
  uselistorder i32 %v0_12a44, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12a24, { 1, 0, 2 }
  uselistorder i32 %v7_12a1c, { 1, 0 }
  uselistorder i32 %v3_12a18, { 1, 0 }
  uselistorder i32 %v1_12a00.v6_12a00.v6_12a08.v6_12a10, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_12a0c, { 1, 0 }
  uselistorder i32 %v4_12a04, { 1, 0 }
  uselistorder i32 %v4_129fc, { 1, 0 }
  uselistorder i32 %v6_12a1c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_129ec, { 1, 0 }
  uselistorder i32 %v1_129e0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_129cc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_129d8.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_129ac, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_12a54, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_12a48, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_129f4, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_12a70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a70:
  store i32 %arg1, i32* @r0, align 4
  %v2_12a70 = icmp eq i32 %arg2, 0
  br i1 %v2_12a70, label %dec_label_pc_12b44, label %dec_label_pc_12a78

dec_label_pc_12a78:                               ; preds = %dec_label_pc_12a70
  %v1_12a70 = icmp slt i32 %arg2, 0
  br i1 %v1_12a70, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_12a78
  %v2_12a78 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_12a78, %bb
  %v4_12a90 = phi i32 [ %arg2, %dec_label_pc_12a78 ], [ %v2_12a78, %bb ]
  %v0_12a7c = load i32, i32* @r0, align 4
  %v1_12a7c = icmp slt i32 %v0_12a7c, 0
  br i1 %v1_12a7c, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_12a80 = sub i32 0, %v0_12a7c
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12a88 = phi i32 [ %v0_12a7c, %bb79 ], [ %v2_12a80, %bb80 ]
  %v1_12a84 = add i32 %v4_12a90, -1
  %v7_12a84 = icmp eq i32 %v4_12a90, 1
  br i1 %v7_12a84, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12a88 = icmp eq i32 %v1_12a88, %v4_12a90
  br i1 %v10_12a88, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12a88 = icmp ult i32 %v1_12a88, %v4_12a90
  br i1 %v4_12a88, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_12a90 = and i32 %v1_12a84, %v4_12a90
  %v8_12a90 = icmp eq i32 %v6_12a90, 0
  br i1 %v8_12a90, label %.thread72, label %dec_label_pc_12aa0.preheader

dec_label_pc_12aa0.preheader:                     ; preds = %bb84
  %v2_12aa0109 = icmp ugt i32 %v4_12a90, 268435455
  br i1 %v2_12aa0109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_12a9464 = phi i32 [ %v1_12a88, %bb84 ], [ 0, %.thread70 ]
  %v3_12a94 = and i32 %v1_12a9464, %v1_12a84
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_12aa0.preheader
  %v0_12ab4.pr35.lcssa = phi i32 [ %v4_12a90, %dec_label_pc_12aa0.preheader ], [ %v4_12aa8, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12aa0.preheader ], [ %v2_12aac9, %.thread2.thread7 ]
  br label %dec_label_pc_12ab4thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_12aa0.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_12aac9, %.thread2.thread7 ], [ 0, %dec_label_pc_12aa0.preheader ]
  %v0_12ab4.pr35110 = phi i32 [ %v4_12aa8, %.thread2.thread7 ], [ %v4_12a90, %dec_label_pc_12aa0.preheader ]
  %v4_12aa4 = icmp ult i32 %v0_12ab4.pr35110, %v1_12a88
  br i1 %v4_12aa4, label %bb86, label %dec_label_pc_12ab4thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_12aa8 = and i32 %v0_12ab4.pr35110, 268435456
  %v3_12aa8 = icmp eq i32 %v2_12aa8, 0
  %v4_12aa8 = mul i32 %v0_12ab4.pr35110, 16
  br i1 %v3_12aa8, label %.thread2.thread7, label %dec_label_pc_12ab4.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_12aac9 = add i32 %storemerge111, 4
  %v2_12aa0 = icmp ugt i32 %v4_12aa8, 268435455
  br i1 %v2_12aa0, label %.thread1, label %bb85

dec_label_pc_12ab4thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_12ab4thread-pre-split.loopexit

dec_label_pc_12ab4thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ab4thread-pre-split.loopexit.loopexit, %.thread1
  %v0_12ab4.pr35108 = phi i32 [ %v0_12ab4.pr35.lcssa, %.thread1 ], [ %v0_12ab4.pr35110, %dec_label_pc_12ab4thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_12ab4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ab4thread-pre-split

dec_label_pc_12ab4thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12ab4thread-pre-split.loopexit
  %v1_12ac041 = phi i32 [ %storemerge105, %dec_label_pc_12ab4thread-pre-split.loopexit ], [ %v2_12ac0, %.thread4 ]
  %v2_12ab836 = phi i32 [ %v1_12a88, %dec_label_pc_12ab4thread-pre-split.loopexit ], [ %v2_12ab8, %.thread4 ]
  %v0_12ab4.pr = phi i32 [ %v0_12ab4.pr35108, %dec_label_pc_12ab4thread-pre-split.loopexit ], [ %v3_12abc, %.thread4 ]
  br label %dec_label_pc_12ab4

dec_label_pc_12ab4.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12ab4.loopexit, %dec_label_pc_12ab4thread-pre-split
  %v0_12ac8.pr = phi i32 [ %v1_12ac041, %dec_label_pc_12ab4thread-pre-split ], [ %storemerge111, %dec_label_pc_12ab4.loopexit ]
  %v2_12ab8 = phi i32 [ %v2_12ab836, %dec_label_pc_12ab4thread-pre-split ], [ %v1_12a88, %dec_label_pc_12ab4.loopexit ]
  %v1_12abc = phi i32 [ %v0_12ab4.pr, %dec_label_pc_12ab4thread-pre-split ], [ %v4_12aa8, %dec_label_pc_12ab4.loopexit ]
  %v2_12ab4 = icmp slt i32 %v1_12abc, 0
  br i1 %v2_12ab4, label %dec_label_pc_12ac8, label %bb87

bb87:                                             ; preds = %dec_label_pc_12ab4
  %v4_12ab8 = icmp ult i32 %v1_12abc, %v2_12ab8
  br i1 %v4_12ab8, label %.thread4, label %dec_label_pc_12ac8

.thread4:                                         ; preds = %bb87
  %v3_12abc = mul i32 %v1_12abc, 2
  %v2_12ac0 = add i32 %v0_12ac8.pr, 1
  br label %dec_label_pc_12ab4thread-pre-split

dec_label_pc_12ac8:                               ; preds = %bb87, %dec_label_pc_12ab4
  %v2_12ac8 = add i32 %v0_12ac8.pr, -3
  %v5_12acc = icmp slt i32 %v0_12ac8.pr, 3
  br i1 %v5_12acc, label %dec_label_pc_12b0c, label %dec_label_pc_12ad0

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12ac8, %bb91
  %v6_12af8 = phi i32 [ %v0_12b00, %bb91 ], [ %v2_12ac8, %dec_label_pc_12ac8 ]
  %v1_12ad4 = phi i32 [ %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, %bb91 ], [ %v2_12ab8, %dec_label_pc_12ac8 ]
  %v3_12af410 = phi i32 [ %v3_12af4, %bb91 ], [ %v1_12abc, %dec_label_pc_12ac8 ]
  %v3_12ad0 = icmp ult i32 %v1_12ad4, %v3_12af410
  %v3_12ad4 = select i1 %v3_12ad0, i32 0, i32 %v3_12af410
  %v1_12adc = sub i32 %v1_12ad4, %v3_12ad4
  %v4_12ad8 = udiv i32 %v3_12af410, 2
  %v6_12ad8 = icmp ult i32 %v1_12adc, %v4_12ad8
  %v6_12adc = select i1 %v6_12ad8, i32 0, i32 %v4_12ad8
  %v1_12adc.v6_12adc = sub i32 %v1_12adc, %v6_12adc
  %.demorgan = and i1 %v3_12ad0, %v6_12ad8
  %v4_12ae0 = udiv i32 %v3_12af410, 4
  %v6_12ae0 = icmp ult i32 %v1_12adc.v6_12adc, %v4_12ae0
  %v6_12ae4 = select i1 %v6_12ae0, i32 0, i32 %v4_12ae0
  %v1_12adc.v6_12adc.v6_12ae4 = sub i32 %v1_12adc.v6_12adc, %v6_12ae4
  %.demorgan76 = and i1 %.demorgan, %v6_12ae0
  %v4_12ae8 = udiv i32 %v3_12af410, 8
  %v6_12ae8 = icmp ult i32 %v1_12adc.v6_12adc.v6_12ae4, %v4_12ae8
  %v6_12aec = select i1 %v6_12ae8, i32 0, i32 %v4_12ae8
  %v1_12adc.v6_12adc.v6_12ae4.v6_12aec = sub i32 %v1_12adc.v6_12adc.v6_12ae4, %v6_12aec
  %.demorgan77 = and i1 %.demorgan76, %v6_12ae8
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_12ad0
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_12ad0, %bb88
  %v2_12af0 = add i32 %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, -1
  %v4_12af0 = sub i32 0, %v1_12adc.v6_12adc.v6_12ae4.v6_12aec
  %v5_12af0 = and i32 %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, %v4_12af0
  %v3_12af4 = udiv i32 %v3_12af410, 16
  %v5_12af8 = icmp slt i32 %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, 1
  br i1 %v5_12af8, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12af8 = add i32 %v6_12af8, -4
  %v9_12af8 = sub i32 3, %v6_12af8
  %v10_12af8 = and i32 %v9_12af8, %v6_12af8
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_12b00 = phi i32 [ %v6_12af8, %bb89 ], [ %v7_12af8, %bb90 ]
  %v0_12afc13.in = phi i32 [ %v2_12af0, %bb89 ], [ %v7_12af8, %bb90 ]
  %v1_12afc12.in = phi i32 [ %v5_12af0, %bb89 ], [ %v10_12af8, %bb90 ]
  %v1_12afc12 = icmp slt i32 %v1_12afc12.in, 0
  %v0_12afc13 = icmp slt i32 %v0_12afc13.in, 0
  %v2_12afc = xor i1 %v0_12afc13, %v1_12afc12
  br i1 %v2_12afc, label %dec_label_pc_12b00, label %dec_label_pc_12ad0

dec_label_pc_12b00:                               ; preds = %bb91
  %v1_12b00 = urem i32 %v0_12b00, 4
  %v2_12b00 = icmp eq i32 %v1_12b00, 0
  br i1 %v2_12b00, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_12b00
  %v3_12b04 = icmp eq i32 %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, 0
  br i1 %v3_12b04, label %.thread6, label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %bb92, %dec_label_pc_12ac8
  %v0_12b20 = phi i32 [ %v3_12af4, %bb92 ], [ %v1_12abc, %dec_label_pc_12ac8 ]
  %v1_12b1c = phi i32 [ %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, %bb92 ], [ %v2_12ab8, %dec_label_pc_12ac8 ]
  %v0_12b0c = phi i32 [ %v0_12b00, %bb92 ], [ %v2_12ac8, %dec_label_pc_12ac8 ]
  %v5_12b10 = icmp slt i32 %v0_12b0c, -2
  br i1 %v5_12b10, label %dec_label_pc_12b30, label %dec_label_pc_12b14

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12b0c
  %v8_12b0c = icmp eq i32 %v0_12b0c, -2
  br i1 %v8_12b0c, label %dec_label_pc_12b24, label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12b14
  %v3_12b18 = icmp ult i32 %v1_12b1c, %v0_12b20
  br i1 %v3_12b18, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_12b18
  %v2_12b18 = sub i32 %v1_12b1c, %v0_12b20
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_12b18, %bb93
  %v0_12b2454 = phi i32 [ %v1_12b1c, %dec_label_pc_12b18 ], [ %v2_12b18, %bb93 ]
  %v3_12b20 = udiv i32 %v0_12b20, 2
  br label %dec_label_pc_12b24

dec_label_pc_12b24:                               ; preds = %dec_label_pc_12b14, %bb94
  %v0_12b2c = phi i32 [ %v0_12b20, %dec_label_pc_12b14 ], [ %v3_12b20, %bb94 ]
  %v1_12b28 = phi i32 [ %v1_12b1c, %dec_label_pc_12b14 ], [ %v0_12b2454, %bb94 ]
  %v3_12b24 = icmp ult i32 %v1_12b28, %v0_12b2c
  br i1 %v3_12b24, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_12b24
  %v2_12b24 = sub i32 %v1_12b28, %v0_12b2c
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_12b24, %bb95
  %v0_12b3057 = phi i32 [ %v1_12b28, %dec_label_pc_12b24 ], [ %v2_12b24, %bb95 ]
  %v3_12b2c = udiv i32 %v0_12b2c, 2
  br label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b0c, %bb96
  %v2_12b34 = phi i32 [ %v0_12b20, %dec_label_pc_12b0c ], [ %v3_12b2c, %bb96 ]
  %v1_12b34 = phi i32 [ %v1_12b1c, %dec_label_pc_12b0c ], [ %v0_12b3057, %bb96 ]
  %v3_12b30 = icmp ult i32 %v1_12b34, %v2_12b34
  br i1 %v3_12b30, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_12b30
  %v2_12b30 = sub i32 %v1_12b34, %v2_12b34
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_12b30, %bb83, %.thread72, %dec_label_pc_12b00, %bb92, %bb97
  %v1_12b3c = phi i32 [ %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, %dec_label_pc_12b00 ], [ 0, %bb92 ], [ %v1_12b34, %dec_label_pc_12b30 ], [ %v2_12b30, %bb97 ], [ %v3_12a94, %.thread72 ], [ %v1_12a88, %bb83 ]
  br i1 %v1_12a7c, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_12b3c = sub i32 0, %v1_12b3c
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_12b40 = phi i32 [ %v1_12b3c, %.thread6 ], [ %v2_12b3c, %bb98 ]
  ret i32 %v1_12b40

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12a70
  %v0_12b44 = load i32, i32* @lr, align 4
  %v0_12b48 = call i32 @function_12b54()
  call void @__pseudo_branch(i32 %v0_12b44)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12b20, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12b00, { 1, 0, 2 }
  uselistorder i32 %v7_12af8, { 1, 0 }
  uselistorder i32 %v3_12af4, { 1, 0 }
  uselistorder i32 %v1_12adc.v6_12adc.v6_12ae4.v6_12aec, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_12ae8, { 1, 0 }
  uselistorder i32 %v4_12ae0, { 1, 0 }
  uselistorder i32 %v4_12ad8, { 1, 0 }
  uselistorder i32 %v6_12af8, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12ac8, { 1, 0 }
  uselistorder i32 %v1_12abc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_12ab8, { 1, 0, 3, 2 }
  uselistorder i32 %v4_12aa8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12ab4.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12a88, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_12a90, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @function_12b54, { 2, 1, 0 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_12b30, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12b24, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_12ad0, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_12b54() local_unnamed_addr {
dec_label_pc_12b54:
  %v1_12b54 = load i32, i32* @r0, align 4
  ret i32 %v1_12b54
}

define i32 @function_12b58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b58:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_12b58 = load i32, i32* @r2, align 4
  %v1_12b68 = add i32 %arg2, -12
  store i32 %v6_12b58, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_12b68, 2
  br i1 %tmp, label %dec_label_pc_12b90, label %dec_label_pc_12b88

dec_label_pc_12b88:                               ; preds = %dec_label_pc_12b58
  %v0_12b88 = call i32 @function_12bcc()
  br label %dec_label_pc_12bbc

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b58
  %v2_12b98 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_12b98, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_12b98, -4095
  br i1 %tmp8, label %dec_label_pc_12bbc, label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12b90
  %v0_12ba8 = call i32 @function_131f0()
  %v0_12bac = load i32, i32* %r4.global-to-local, align 4
  %v1_12bac = sub i32 0, %v0_12bac
  %v2_12bb0 = inttoptr i32 %v0_12ba8 to i32*
  store i32 %v1_12bac, i32* %v2_12bb0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12bbc

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12ba8, %dec_label_pc_12b90, %dec_label_pc_12b88
  %storemerge = phi i32 [ %v0_12b88, %dec_label_pc_12b88 ], [ %v2_12b98, %dec_label_pc_12b90 ], [ -1, %dec_label_pc_12ba8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_12b98, { 1, 0, 2 }
}

define i32 @function_12bcc() local_unnamed_addr {
dec_label_pc_12bcc:
  %r4.global-to-local = alloca i32, align 4
  %v0_12bec = load i32, i32* @r0, align 4
  store i32 %v0_12bec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12bec, -4095
  br i1 %tmp, label %dec_label_pc_12c08, label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12bcc
  %v0_12bf8 = call i32 @function_131f0()
  %v0_12bfc = load i32, i32* %r4.global-to-local, align 4
  %v1_12bfc = sub i32 0, %v0_12bfc
  %v2_12c00 = inttoptr i32 %v0_12bf8 to i32*
  store i32 %v1_12bfc, i32* %v2_12c00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12bcc, %dec_label_pc_12bf8
  %v0_12c08 = phi i32 [ %v0_12bec, %dec_label_pc_12bcc ], [ -1, %dec_label_pc_12bf8 ]
  ret i32 %v0_12c08

; uselistorder directives
  uselistorder i32 %v0_12bec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c08, { 1, 0 }
}

define i32 @function_12c1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c1c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c1c = load i32, i32* @r4, align 4
  store i32 %v3_12c1c, i32* %stack_var_-8, align 4
  %v1_12c20 = call i32 @close(i32 %arg1)
  store i32 %v1_12c20, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_12c20, -4095
  br i1 %tmp, label %dec_label_pc_12c40, label %dec_label_pc_12c30

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c1c
  %v0_12c30 = call i32 @function_131f0()
  %v0_12c34 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c34 = sub i32 0, %v0_12c34
  %v2_12c38 = inttoptr i32 %v0_12c30 to i32*
  store i32 %v1_12c34, i32* %v2_12c38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c40

dec_label_pc_12c40:                               ; preds = %dec_label_pc_12c1c, %dec_label_pc_12c30
  %v0_12c40 = phi i32 [ %v1_12c20, %dec_label_pc_12c1c ], [ -1, %dec_label_pc_12c30 ]
  %v2_12c44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c44, i32* @r4, align 4
  ret i32 %v0_12c40

; uselistorder directives
  uselistorder i32 %v1_12c20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c40, { 1, 0 }
}

define i32 @function_12c48() local_unnamed_addr {
dec_label_pc_12c48:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c48 = load i32, i32* @r4, align 4
  store i32 %v3_12c48, i32* %stack_var_-8, align 4
  %v0_12c4c = call i32 @fork()
  store i32 %v0_12c4c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c4c, -4095
  br i1 %tmp, label %dec_label_pc_12c6c, label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c48
  %v0_12c5c = call i32 @function_131f0()
  %v0_12c60 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c60 = sub i32 0, %v0_12c60
  %v2_12c64 = inttoptr i32 %v0_12c5c to i32*
  store i32 %v1_12c60, i32* %v2_12c64, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c6c

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12c48, %dec_label_pc_12c5c
  %v0_12c6c = phi i32 [ %v0_12c4c, %dec_label_pc_12c48 ], [ -1, %dec_label_pc_12c5c ]
  %v2_12c70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c70, i32* @r4, align 4
  ret i32 %v0_12c6c

; uselistorder directives
  uselistorder i32 %v0_12c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c6c, { 1, 0 }
}

define i32 @function_12c74() local_unnamed_addr {
dec_label_pc_12c74:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c74 = load i32, i32* @r4, align 4
  store i32 %v3_12c74, i32* %stack_var_-8, align 4
  %v0_12c78 = call i32 @getpid()
  store i32 %v0_12c78, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c78, -4095
  br i1 %tmp, label %dec_label_pc_12c98, label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c74
  %v0_12c88 = call i32 @function_131f0()
  %v0_12c8c = load i32, i32* %r4.global-to-local, align 4
  %v1_12c8c = sub i32 0, %v0_12c8c
  %v2_12c90 = inttoptr i32 %v0_12c88 to i32*
  store i32 %v1_12c8c, i32* %v2_12c90, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c98

dec_label_pc_12c98:                               ; preds = %dec_label_pc_12c74, %dec_label_pc_12c88
  %v0_12c98 = phi i32 [ %v0_12c78, %dec_label_pc_12c74 ], [ -1, %dec_label_pc_12c88 ]
  %v2_12c9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c9c, i32* @r4, align 4
  ret i32 %v0_12c98

; uselistorder directives
  uselistorder i32 %v0_12c78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c98, { 1, 0 }
}

define i32 @function_12ca0() local_unnamed_addr {
dec_label_pc_12ca0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ca0 = load i32, i32* @r4, align 4
  store i32 %v3_12ca0, i32* %stack_var_-8, align 4
  %v0_12ca4 = call i32 @getppid()
  store i32 %v0_12ca4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ca4, -4095
  br i1 %tmp, label %dec_label_pc_12cc4, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12ca0
  %v0_12cb4 = call i32 @function_131f0()
  %v0_12cb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12cb8 = sub i32 0, %v0_12cb8
  %v2_12cbc = inttoptr i32 %v0_12cb4 to i32*
  store i32 %v1_12cb8, i32* %v2_12cbc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12ca0, %dec_label_pc_12cb4
  %v0_12cc4 = phi i32 [ %v0_12ca4, %dec_label_pc_12ca0 ], [ -1, %dec_label_pc_12cb4 ]
  %v2_12cc8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12cc8, i32* @r4, align 4
  ret i32 %v0_12cc4

; uselistorder directives
  uselistorder i32 %v0_12ca4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12cc4, { 1, 0 }
}

define i32 @function_12ccc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ccc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12ccc = load i32, i32* @r3, align 4
  store i32 %v9_12ccc, i32* %stack_var_-4, align 4
  %v2_12cd8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12cd8, i32* @r3, align 4
  %v2_12ce8 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_12ce8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12ce8, -4095
  br i1 %tmp, label %dec_label_pc_12d08, label %dec_label_pc_12cf8

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12ccc
  %v0_12cf8 = call i32 @function_131f0()
  %v0_12cfc = load i32, i32* %r4.global-to-local, align 4
  %v1_12cfc = sub i32 0, %v0_12cfc
  store i32 %v1_12cfc, i32* @r3, align 4
  %v2_12d00 = inttoptr i32 %v0_12cf8 to i32*
  store i32 %v1_12cfc, i32* %v2_12d00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d08

dec_label_pc_12d08:                               ; preds = %dec_label_pc_12ccc, %dec_label_pc_12cf8
  %v0_12d08 = phi i32 [ %v2_12ce8, %dec_label_pc_12ccc ], [ -1, %dec_label_pc_12cf8 ]
  ret i32 %v0_12d08

; uselistorder directives
  uselistorder i32 %v2_12ce8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12d08, { 1, 0 }
}

define i32 @function_12d1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d1c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d1c = load i32, i32* @r4, align 4
  store i32 %v3_12d1c, i32* %stack_var_-8, align 4
  %v2_12d20 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_12d20, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12d20, -4095
  br i1 %tmp, label %dec_label_pc_12d40, label %dec_label_pc_12d30

dec_label_pc_12d30:                               ; preds = %dec_label_pc_12d1c
  %v0_12d30 = call i32 @function_131f0()
  %v0_12d34 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d34 = sub i32 0, %v0_12d34
  %v2_12d38 = inttoptr i32 %v0_12d30 to i32*
  store i32 %v1_12d34, i32* %v2_12d38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12d1c, %dec_label_pc_12d30
  %v0_12d40 = phi i32 [ %v2_12d20, %dec_label_pc_12d1c ], [ -1, %dec_label_pc_12d30 ]
  %v2_12d44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d44, i32* @r4, align 4
  ret i32 %v0_12d40

; uselistorder directives
  uselistorder i32 %v2_12d20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
}

define i32 @function_12d48(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d48:
  %r4.global-to-local = alloca i32, align 4
  %v6_12d48 = load i32, i32* @r2, align 4
  %v1_12d58 = and i32 %arg2, 64
  store i32 %v1_12d58, i32* @r3, align 4
  %v2_12d58 = icmp eq i32 %v1_12d58, 0
  br i1 %v2_12d58, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_12d48
  store i32 %v6_12d48, i32* @r3, align 4
  %phitmp = urem i32 %v6_12d48, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12d48, %bb
  %v0_12d68 = phi i32 [ 0, %dec_label_pc_12d48 ], [ %phitmp, %bb ]
  store i32 %v0_12d68, i32* @r2, align 4
  %v4_12d70 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_12d74 = icmp eq i32 %v4_12d70, -4096
  store i1 %v7_12d74, i1* @cpsr_z, align 1
  store i32 %v4_12d70, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12d70, -4095
  br i1 %tmp, label %dec_label_pc_12d90, label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %.thread1
  %v0_12d80 = call i32 @function_131f0()
  %v0_12d84 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d84 = sub i32 0, %v0_12d84
  store i32 %v1_12d84, i32* @r3, align 4
  %v2_12d88 = inttoptr i32 %v0_12d80 to i32*
  store i32 %v1_12d84, i32* %v2_12d88, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d90

dec_label_pc_12d90:                               ; preds = %.thread1, %dec_label_pc_12d80
  %v0_12d90 = phi i32 [ %v4_12d70, %.thread1 ], [ -1, %dec_label_pc_12d80 ]
  ret i32 %v0_12d90

; uselistorder directives
  uselistorder i32 %v4_12d70, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12d90, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_12da4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12da4:
  store i32 %arg1, i32* @r2, align 4
  %v0_12dac = load i32, i32* @r0, align 4
  %v2_12dac = inttoptr i32 %v0_12dac to i8*
  %v3_12dac = call i32 @function_12d48(i8* %v2_12dac, i32 577)
  %v0_12db0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12db0, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_12da4
  %v6_12db0 = and i32 %v3_12dac, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12da4, %bb
  %v7_12db0 = phi i32 [ %v3_12dac, %dec_label_pc_12da4 ], [ %v6_12db0, %bb ]
  ret i32 %v7_12db0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_12db4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12db4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12db4 = load i32, i32* @r4, align 4
  store i32 %v3_12db4, i32* %stack_var_-8, align 4
  %v2_12dbc = load i32, i32* @r2, align 4
  %v3_12dbc = load i32, i32* @r3, align 4
  %v4_12dbc = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %v2_12dbc, i32 %v3_12dbc, i32 0)
  store i32 %v4_12dbc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12dbc, -4095
  br i1 %tmp, label %dec_label_pc_12ddc, label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %dec_label_pc_12db4
  %v0_12dcc = call i32 @function_131f0()
  %v0_12dd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12dd0 = sub i32 0, %v0_12dd0
  %v2_12dd4 = inttoptr i32 %v0_12dcc to i32*
  store i32 %v1_12dd0, i32* %v2_12dd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ddc

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12db4, %dec_label_pc_12dcc
  %v0_12ddc = phi i32 [ %v4_12dbc, %dec_label_pc_12db4 ], [ -1, %dec_label_pc_12dcc ]
  %v2_12de0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12de0, i32* @r4, align 4
  ret i32 %v0_12ddc

; uselistorder directives
  uselistorder i32 %v4_12dbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ddc, { 1, 0 }
}

define i32 @function_12de4(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12de4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12de4 = load i32, i32* @r4, align 4
  store i32 %v3_12de4, i32* %stack_var_-8, align 4
  %v4_12de8 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_12de8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12de8, -4095
  br i1 %tmp, label %dec_label_pc_12e08, label %dec_label_pc_12df8

dec_label_pc_12df8:                               ; preds = %dec_label_pc_12de4
  %v0_12df8 = call i32 @function_131f0()
  %v0_12dfc = load i32, i32* %r4.global-to-local, align 4
  %v1_12dfc = sub i32 0, %v0_12dfc
  %v2_12e00 = inttoptr i32 %v0_12df8 to i32*
  store i32 %v1_12dfc, i32* %v2_12e00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e08

dec_label_pc_12e08:                               ; preds = %dec_label_pc_12de4, %dec_label_pc_12df8
  %v0_12e08 = phi i32 [ %v4_12de8, %dec_label_pc_12de4 ], [ -1, %dec_label_pc_12df8 ]
  %v2_12e0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e0c, i32* @r4, align 4
  ret i32 %v0_12e08

; uselistorder directives
  uselistorder i32 %v4_12de8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e08, { 1, 0 }
}

define i32 @function_12e10(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e10:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v3_12e10 = load i32, i32* @r4, align 4
  store i32 %v3_12e10, i32* %stack_var_-8, align 4
  %v7_12e14 = call i32 @readlink(i8* %arg1, i8* %tmp, i32 %arg3)
  store i32 %v7_12e14, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v7_12e14, -4095
  br i1 %tmp6, label %dec_label_pc_12e34, label %dec_label_pc_12e24

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12e10
  %v0_12e24 = call i32 @function_131f0()
  %v0_12e28 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e28 = sub i32 0, %v0_12e28
  %v2_12e2c = inttoptr i32 %v0_12e24 to i32*
  store i32 %v1_12e28, i32* %v2_12e2c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e34

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12e10, %dec_label_pc_12e24
  %v0_12e34 = phi i32 [ %v7_12e14, %dec_label_pc_12e10 ], [ -1, %dec_label_pc_12e24 ]
  %v2_12e38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e38, i32* @r4, align 4
  ret i32 %v0_12e34

; uselistorder directives
  uselistorder i32 %v7_12e14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e34, { 1, 0 }
}

define i32 @function_12e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12e3c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e3c = load i32, i32* @r4, align 4
  store i32 %v3_12e3c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e64, label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e3c
  %v0_12e54 = call i32 @function_131f0()
  %v0_12e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e58 = sub i32 0, %v0_12e58
  %v2_12e5c = inttoptr i32 %v0_12e54 to i32*
  store i32 %v1_12e58, i32* %v2_12e5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12e68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e64

dec_label_pc_12e64:                               ; preds = %dec_label_pc_12e3c, %dec_label_pc_12e54
  %v2_12e68 = phi i32 [ %v3_12e3c, %dec_label_pc_12e3c ], [ %v2_12e68.pre, %dec_label_pc_12e54 ]
  %v0_12e64 = phi i32 [ %arg1, %dec_label_pc_12e3c ], [ -1, %dec_label_pc_12e54 ]
  store i32 %v2_12e68, i32* @r4, align 4
  ret i32 %v0_12e64

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e64, { 1, 0 }
}

define i32 @function_12e6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e6c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e6c = load i32, i32* @r4, align 4
  store i32 %v3_12e6c, i32* %stack_var_-8, align 4
  %v0_12e70 = call i32 @setsid()
  store i32 %v0_12e70, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e70, -4095
  br i1 %tmp, label %dec_label_pc_12e90, label %dec_label_pc_12e80

dec_label_pc_12e80:                               ; preds = %dec_label_pc_12e6c
  %v0_12e80 = call i32 @function_131f0()
  %v0_12e84 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e84 = sub i32 0, %v0_12e84
  %v2_12e88 = inttoptr i32 %v0_12e80 to i32*
  store i32 %v1_12e84, i32* %v2_12e88, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e90

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e6c, %dec_label_pc_12e80
  %v0_12e90 = phi i32 [ %v0_12e70, %dec_label_pc_12e6c ], [ -1, %dec_label_pc_12e80 ]
  %v2_12e94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e94, i32* @r4, align 4
  ret i32 %v0_12e90

; uselistorder directives
  uselistorder i32 %v0_12e70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e90, { 1, 0 }
}

define i32 @function_12e98(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e98:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e98 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_12e98, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12e98
  %v3_12ea05 = load i32, i32* @r4, align 4
  store i32 %v3_12ea05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ec0

bb:                                               ; preds = %dec_label_pc_12e98
  %v3_12ea0 = load i32, i32* @r4, align 4
  store i32 %v3_12ea0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_12ec0, label %dec_label_pc_12eac

dec_label_pc_12eac:                               ; preds = %bb
  %v0_12eac = call i32 @function_131f0()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12eb8 = inttoptr i32 %v0_12eac to i32*
  store i32 22, i32* %v2_12eb8, align 4
  %v0_12ee4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ee4

dec_label_pc_12ec0:                               ; preds = %.thread, %bb
  %v7_12ec0 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_12ec0, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_12ec0, -4095
  br i1 %tmp13, label %dec_label_pc_12ee0, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ec0
  %v0_12ed0 = call i32 @function_131f0()
  %v0_12ed4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ed4 = sub i32 0, %v0_12ed4
  %v2_12ed8 = inttoptr i32 %v0_12ed0 to i32*
  store i32 %v1_12ed4, i32* %v2_12ed8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ee0

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ec0, %dec_label_pc_12ed0
  %v0_12ee0 = phi i32 [ %v7_12ec0, %dec_label_pc_12ec0 ], [ -1, %dec_label_pc_12ed0 ]
  store i32 %v0_12ee0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ee4

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12eac, %dec_label_pc_12ee0
  %v0_12ee4 = phi i32 [ %v0_12ee4.pre, %dec_label_pc_12eac ], [ %v0_12ee0, %dec_label_pc_12ee0 ]
  %v2_12ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ee8, i32* @r4, align 4
  ret i32 %v0_12ee4

; uselistorder directives
  uselistorder i32 %v7_12ec0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12ee4, { 1, 0 }
  uselistorder label %dec_label_pc_12ee0, { 1, 0 }
  uselistorder label %dec_label_pc_12ec0, { 1, 0 }
}

define i32 @function_12eec(i32* %arg1) local_unnamed_addr {
dec_label_pc_12eec:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12eec = load i32, i32* @r4, align 4
  store i32 %v3_12eec, i32* %stack_var_-8, align 4
  %v2_12ef0 = call i32 @time(i32* %arg1)
  store i32 %v2_12ef0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12ef0, -4095
  br i1 %tmp, label %dec_label_pc_12f10, label %dec_label_pc_12f00

dec_label_pc_12f00:                               ; preds = %dec_label_pc_12eec
  %v0_12f00 = call i32 @function_131f0()
  %v0_12f04 = load i32, i32* %r4.global-to-local, align 4
  %v1_12f04 = sub i32 0, %v0_12f04
  %v2_12f08 = inttoptr i32 %v0_12f00 to i32*
  store i32 %v1_12f04, i32* %v2_12f08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12eec, %dec_label_pc_12f00
  %v0_12f10 = phi i32 [ %v2_12ef0, %dec_label_pc_12eec ], [ -1, %dec_label_pc_12f00 ]
  %v2_12f14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f14, i32* @r4, align 4
  ret i32 %v0_12f10

; uselistorder directives
  uselistorder i32 %v2_12ef0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f10, { 1, 0 }
}

define i32 @function_12f18(i8* %arg1) local_unnamed_addr {
dec_label_pc_12f18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f18 = load i32, i32* @r4, align 4
  store i32 %v3_12f18, i32* %stack_var_-8, align 4
  %v3_12f1c = call i32 @unlink(i8* %arg1)
  store i32 %v3_12f1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_12f1c, -4095
  br i1 %tmp, label %dec_label_pc_12f3c, label %dec_label_pc_12f2c

dec_label_pc_12f2c:                               ; preds = %dec_label_pc_12f18
  %v0_12f2c = call i32 @function_131f0()
  %v0_12f30 = load i32, i32* %r4.global-to-local, align 4
  %v1_12f30 = sub i32 0, %v0_12f30
  %v2_12f34 = inttoptr i32 %v0_12f2c to i32*
  store i32 %v1_12f30, i32* %v2_12f34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f18, %dec_label_pc_12f2c
  %v0_12f3c = phi i32 [ %v3_12f1c, %dec_label_pc_12f18 ], [ -1, %dec_label_pc_12f2c ]
  %v2_12f40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f40, i32* @r4, align 4
  ret i32 %v0_12f3c

; uselistorder directives
  uselistorder i32 %v3_12f1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f3c, { 1, 0 }
}

define i32 @function_12f44(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f44:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f44 = load i32, i32* @r4, align 4
  store i32 %v3_12f44, i32* %stack_var_-8, align 4
  %v4_12f48 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_12f48, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12f48, -4095
  br i1 %tmp, label %dec_label_pc_12f68, label %dec_label_pc_12f58

dec_label_pc_12f58:                               ; preds = %dec_label_pc_12f44
  %v0_12f58 = call i32 @function_131f0()
  %v0_12f5c = load i32, i32* %r4.global-to-local, align 4
  %v1_12f5c = sub i32 0, %v0_12f5c
  %v2_12f60 = inttoptr i32 %v0_12f58 to i32*
  store i32 %v1_12f5c, i32* %v2_12f60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f68

dec_label_pc_12f68:                               ; preds = %dec_label_pc_12f44, %dec_label_pc_12f58
  %v0_12f68 = phi i32 [ %v4_12f48, %dec_label_pc_12f44 ], [ -1, %dec_label_pc_12f58 ]
  %v2_12f6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f6c, i32* @r4, align 4
  ret i32 %v0_12f68

; uselistorder directives
  uselistorder i32 %v4_12f48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f68, { 1, 0 }
}

define i32 @function_12f70(i32* %arg1) local_unnamed_addr {
dec_label_pc_12f70:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12f70 = load i32, i32* @r4, align 4
  store i32 %v3_12f70, i32* %stack_var_-20, align 4
  %v6_12f70 = load i32, i32* @r5, align 4
  %v9_12f70 = load i32, i32* @r6, align 4
  %v12_12f70 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12f78 = load i32, i32* %arg1, align 4
  store i32 %v2_12f78, i32* %r4.global-to-local, align 4
  %v2_12f7c = ptrtoint i32* %stack_var_-36 to i32
  %v1_12f80 = add i32 %tmp, 24
  store i32 %v1_12f80, i32* @r6, align 4
  %v3_12f84 = icmp eq i32 %v2_12f78, -1
  store i32 %v2_12f7c, i32* @r7, align 4
  store i32 %v1_12f80, i32* %r2.global-to-local, align 4
  store i32 %v2_12f7c, i32* @r0, align 4
  br i1 %v3_12f84, label %dec_label_pc_12f9c, label %dec_label_pc_12fb0

dec_label_pc_12f9c:                               ; preds = %dec_label_pc_12f70
  %v0_12f9c = call i32 @function_131f0()
  %v0_12fa4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12fa4, i32* %r2.global-to-local, align 4
  %v2_12fa8 = inttoptr i32 %v0_12f9c to i32*
  store i32 9, i32* %v2_12fa8, align 4
  %v0_13008.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13008

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12f70
  %v8_12fb8 = call i32 @function_14234(i32 %v2_12f7c, i32 ptrtoint (i32* @global_var_1422c.389 to i32), i32 %v1_12f80, i32 82484, i32 %v3_12f70, i32 %v6_12f70, i32 %v9_12f70)
  %v1_12fc8 = call i32 @function_1422c()
  %v0_12fd4 = load i32, i32* @r5, align 4
  %v1_12fd4 = inttoptr i32 %v0_12fd4 to i32*
  %v2_12fd4 = load i32, i32* %v1_12fd4, align 4
  store i32 %v2_12fd4, i32* @r4, align 4
  store i32 %v2_12f7c, i32* @r0, align 4
  store i32 -1, i32* %v1_12fd4, align 4
  store i32 ptrtoint (i32* @global_var_12fec.393 to i32), i32* @lr, align 4
  %v8_12fe8 = call i32 @function_14234(i32 %v2_12f7c, i32 1, i32 %v1_12f80, i32 82484, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_12fec = load i32, i32* @r5, align 4
  %v1_12fec = add i32 %v0_12fec, 12
  %v2_12fec = inttoptr i32 %v1_12fec to i32*
  %v3_12fec = load i32, i32* %v2_12fec, align 4
  store i32 %v3_12fec, i32* @r0, align 4
  %v0_12ff0 = call i32 @function_13844()
  %v0_12ff4 = load i32, i32* @r5, align 4
  store i32 %v0_12ff4, i32* @r0, align 4
  %v0_12ff8 = call i32 @function_13844()
  %v0_12ffc = load i32, i32* @r4, align 4
  %v1_13000 = call i32 @function_12c1c(i32 %v0_12ffc)
  store i32 %v1_13000, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %dec_label_pc_12f9c, %dec_label_pc_12fb0
  %v0_13008 = phi i32 [ %v0_13008.pre, %dec_label_pc_12f9c ], [ %v1_13000, %dec_label_pc_12fb0 ]
  %v2_13010 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13010, i32* @r4, align 4
  store i32 %v6_12f70, i32* @r5, align 4
  store i32 %v9_12f70, i32* @r6, align 4
  store i32 %v12_12f70, i32* @r7, align 4
  ret i32 %v0_13008

; uselistorder directives
  uselistorder i32 %v1_12f80, { 2, 1, 0, 3 }
  uselistorder i32 %v2_12f7c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_12f70, { 1, 0 }
  uselistorder i32 %v6_12f70, { 1, 0 }
  uselistorder label %dec_label_pc_13008, { 1, 0 }
}

define i32 @function_13024(i32 %arg1) local_unnamed_addr {
dec_label_pc_13024:
  %r5.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-108 = alloca i32, align 4
  %v3_13024 = load i32, i32* @r4, align 4
  %v9_13024 = load i32, i32* @r6, align 4
  %v12_13024 = load i32, i32* @r7, align 4
  %v0_13030 = load i32, i32* @r0, align 4
  %v2_13030 = inttoptr i32 %v0_13030 to i8*
  %v3_13030 = call i32 @function_12d48(i8* %v2_13030, i32 18432)
  store i32 %v3_13030, i32* @r0, align 4
  store i32 %v3_13030, i32* @r7, align 4
  %v1_13034 = icmp slt i32 %v3_13030, 0
  br i1 %v1_13034, label %.thread1, label %dec_label_pc_13040

.thread1:                                         ; preds = %dec_label_pc_13024
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_13110

dec_label_pc_13040:                               ; preds = %dec_label_pc_13024
  %v2_1302c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1302c, i32* @r1, align 4
  %v0_13044 = call i32 @function_14658()
  %v1_13048 = icmp slt i32 %v0_13044, 0
  br i1 %v1_13048, label %dec_label_pc_13068, label %dec_label_pc_13050

dec_label_pc_13050:                               ; preds = %dec_label_pc_13040
  %v0_13050 = load i32, i32* @r7, align 4
  store i32 1, i32* @r2, align 4
  %v2_1305c = call i32 @function_12b58(i32 %v0_13050, i32 2)
  %v1_13060 = icmp slt i32 %v2_1305c, 0
  br i1 %v1_13060, label %dec_label_pc_13068, label %dec_label_pc_13088

dec_label_pc_13068:                               ; preds = %dec_label_pc_13050, %dec_label_pc_13040
  %v0_13068 = call i32 @function_131f0()
  store i32 %v0_13068, i32* %r5.global-to-local, align 4
  %v0_13070 = load i32, i32* @r7, align 4
  %v1_13074 = inttoptr i32 %v0_13068 to i32*
  %v2_13074 = load i32, i32* %v1_13074, align 4
  store i32 %v2_13074, i32* @r4, align 4
  %v1_13078 = call i32 @function_12c1c(i32 %v0_13070)
  store i32 0, i32* @r6, align 4
  %v0_13080 = load i32, i32* @r4, align 4
  %v1_13080 = load i32, i32* %r5.global-to-local, align 4
  %v2_13080 = inttoptr i32 %v1_13080 to i32*
  store i32 %v0_13080, i32* %v2_13080, align 4
  br label %dec_label_pc_13110

dec_label_pc_13088:                               ; preds = %dec_label_pc_13050
  %v1_1308c = call i32 @function_13698(i32 48)
  store i32 %v1_1308c, i32* @r6, align 4
  %v2_13090 = icmp eq i32 %v1_1308c, 0
  br i1 %v2_13090, label %dec_label_pc_130e0, label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_13088
  store i32 0, i32* @r4, align 4
  %v2_1309c = add i32 %v1_1308c, 16
  %v3_1309c = inttoptr i32 %v2_1309c to i32*
  store i32 0, i32* %v3_1309c, align 4
  %v2_130a4 = icmp ugt i32 %tmp, 511
  %v1_130a8 = load i32, i32* @r6, align 4
  %v2_130a8 = add i32 %v1_130a8, 20
  %v3_130a8 = inttoptr i32 %v2_130a8 to i32*
  store i32 %tmp, i32* %v3_130a8, align 4
  br i1 %v2_130a4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13098
  %v2_130b0 = load i32, i32* @r6, align 4
  %v3_130b0 = add i32 %v2_130b0, 20
  %v4_130b0 = inttoptr i32 %v3_130b0 to i32*
  store i32 512, i32* %v4_130b0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13098, %bb
  %v0_130b4 = load i32, i32* @r7, align 4
  %v1_130b4 = load i32, i32* @r6, align 4
  %v2_130b4 = inttoptr i32 %v1_130b4 to i32*
  store i32 %v0_130b4, i32* %v2_130b4, align 4
  %v0_130b8 = load i32, i32* @r4, align 4
  %v1_130b8 = load i32, i32* @r6, align 4
  %v2_130b8 = add i32 %v1_130b8, 8
  %v3_130b8 = inttoptr i32 %v2_130b8 to i32*
  store i32 %v0_130b8, i32* %v3_130b8, align 4
  %v0_130bc = load i32, i32* @r4, align 4
  %v1_130bc = load i32, i32* @r6, align 4
  %v2_130bc = add i32 %v1_130bc, 4
  %v3_130bc = inttoptr i32 %v2_130bc to i32*
  store i32 %v0_130bc, i32* %v3_130bc, align 4
  %v0_130c4 = load i32, i32* @r6, align 4
  %v1_130c4 = add i32 %v0_130c4, 20
  %v2_130c4 = inttoptr i32 %v1_130c4 to i32*
  %v3_130c4 = load i32, i32* %v2_130c4, align 4
  %v2_130c8 = call i32 @function_137ec(i32 1, i32 %v3_130c4)
  %v2_130cc = icmp eq i32 %v2_130c8, 0
  %v1_130d0 = load i32, i32* @r6, align 4
  %v2_130d0 = add i32 %v1_130d0, 12
  %v3_130d0 = inttoptr i32 %v2_130d0 to i32*
  store i32 %v2_130c8, i32* %v3_130d0, align 4
  br i1 %v2_130cc, label %dec_label_pc_130d8, label %dec_label_pc_130fc

dec_label_pc_130d8:                               ; preds = %.thread
  %v0_130d8 = load i32, i32* @r6, align 4
  store i32 %v0_130d8, i32* @r0, align 4
  %v0_130dc = call i32 @function_13844()
  br label %dec_label_pc_130e0

dec_label_pc_130e0:                               ; preds = %dec_label_pc_13088, %dec_label_pc_130d8
  %v0_130e0 = load i32, i32* @r7, align 4
  %v1_130e4 = call i32 @function_12c1c(i32 %v0_130e0)
  %v0_130e8 = call i32 @function_131f0()
  store i32 0, i32* @r6, align 4
  %v2_130f4 = inttoptr i32 %v0_130e8 to i32*
  store i32 12, i32* %v2_130f4, align 4
  br label %dec_label_pc_13110

dec_label_pc_130fc:                               ; preds = %.thread
  store i32 78096, i32* @lr, align 4
  %v1_1310c = call i32 @function_1422c()
  br label %dec_label_pc_13110

dec_label_pc_13110:                               ; preds = %.thread1, %dec_label_pc_130e0, %dec_label_pc_13068, %dec_label_pc_130fc
  %v0_13110 = load i32, i32* @r6, align 4
  store i32 %v3_13024, i32* @r4, align 4
  store i32 %v9_13024, i32* @r6, align 4
  store i32 %v12_13024, i32* @r7, align 4
  ret i32 %v0_13110

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_137ec, { 39, 40, 38, 37, 36, 22, 35, 34, 33, 32, 28, 27, 26, 25, 24, 23, 21, 20, 0, 19, 18, 17, 16, 15, 3, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 31, 30, 29 }
  uselistorder i32 512, { 0, 5, 1, 6, 8, 2, 9, 3, 10, 4, 11, 7 }
  uselistorder i32 (i32)* @function_12c1c, { 18, 17, 16, 31, 35, 30, 34, 33, 29, 32, 28, 27, 26, 25, 24, 23, 22, 21, 20, 2, 19, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_13110, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_130e0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_13120(i32* %arg1) local_unnamed_addr {
dec_label_pc_13120:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_13120 = load i32, i32* @r4, align 4
  %v6_13120 = load i32, i32* @r5, align 4
  %v9_13120 = load i32, i32* @lr, align 4
  %v1_13124 = add i32 %tmp, 24
  store i32 %v1_13124, i32* @r4, align 4
  %v2_13128 = ptrtoint i32* %stack_var_-28 to i32
  store i32 82484, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v2_13128, i32* @r0, align 4
  store i32 %v1_13124, i32* %r2.global-to-local, align 4
  %v8_13144 = call i32 @function_14234(i32 %v2_13128, i32 ptrtoint (i32* @global_var_1422c.389 to i32), i32 %v1_13124, i32 82484, i32 %v3_13120, i32 %v6_13120, i32 %v9_13120)
  %v0_13148 = load i32, i32* @r4, align 4
  store i32 %v0_13148, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1422c.389 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13158.398 to i32), i32* @lr, align 4
  %v1_13154 = call i32 @function_1422c()
  store i32 %v1_13154, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %dec_label_pc_1318c, %dec_label_pc_13120
  %v0_13158 = load i32, i32* @r5, align 4
  %v1_13158 = add i32 %v0_13158, 4
  %v2_13158 = inttoptr i32 %v1_13158 to i32*
  %v3_13158 = load i32, i32* %v2_13158, align 4
  store i32 %v3_13158, i32* %r2.global-to-local, align 4
  %v4_13158 = add i32 %v0_13158, 8
  %v5_13158 = inttoptr i32 %v4_13158 to i32*
  %v6_13158 = load i32, i32* %v5_13158, align 4
  store i32 %v6_13158, i32* %r3.global-to-local, align 4
  %tmp8 = icmp ugt i32 %v6_13158, %v3_13158
  br i1 %tmp8, label %dec_label_pc_1318c, label %dec_label_pc_13164

dec_label_pc_13164:                               ; preds = %dec_label_pc_13158
  %v1_13164 = inttoptr i32 %v0_13158 to i32*
  %v2_13164 = load i32, i32* %v1_13164, align 4
  store i32 %v2_13164, i32* @r0, align 4
  %v1_13168 = add i32 %v0_13158, 12
  %v2_13168 = inttoptr i32 %v1_13168 to i32*
  %v3_13168 = load i32, i32* %v2_13168, align 4
  %v1_1316c = add i32 %v0_13158, 20
  %v2_1316c = inttoptr i32 %v1_1316c to i32*
  %v3_1316c = load i32, i32* %v2_1316c, align 4
  store i32 %v3_1316c, i32* @r2, align 4
  %v4_13170 = call i32 @function_146a8(i32 %v2_13164, i32 %v3_13168, i32 %v3_1316c, i32 %v6_13158)
  store i32 %v4_13170, i32* %r0.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_13170, 1
  br i1 %tmp7, label %.thread, label %dec_label_pc_13180

.thread:                                          ; preds = %dec_label_pc_13164
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_131c0

dec_label_pc_13180:                               ; preds = %dec_label_pc_13164
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13184 = load i32, i32* @r5, align 4
  %v2_13184 = add i32 %v1_13184, 4
  %v3_13184 = inttoptr i32 %v2_13184 to i32*
  store i32 0, i32* %v3_13184, align 4
  %v1_13188 = load i32, i32* @r5, align 4
  %v2_13188 = add i32 %v1_13188, 8
  %v3_13188 = inttoptr i32 %v2_13188 to i32*
  store i32 %v4_13170, i32* %v3_13188, align 4
  %v0_1318c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13158, %dec_label_pc_13180
  %v1_131a4 = phi i32 [ %v0_13158, %dec_label_pc_13158 ], [ %v0_1318c.pre, %dec_label_pc_13180 ]
  %v1_1318c = add i32 %v1_131a4, 4
  %v2_1318c = inttoptr i32 %v1_1318c to i32*
  %v3_1318c = load i32, i32* %v2_1318c, align 4
  store i32 %v3_1318c, i32* %r2.global-to-local, align 4
  %v1_13190 = add i32 %v1_131a4, 12
  %v2_13190 = inttoptr i32 %v1_13190 to i32*
  %v3_13190 = load i32, i32* %v2_13190, align 4
  store i32 %v3_13190, i32* %ip.global-to-local, align 4
  %v2_13194 = add i32 %v3_13190, %v3_1318c
  store i32 %v2_13194, i32* @r4, align 4
  %v1_13198 = add i32 %v2_13194, 4
  %v2_13198 = inttoptr i32 %v1_13198 to i32*
  %v3_13198 = load i32, i32* %v2_13198, align 4
  %v1_1319c = add i32 %v2_13194, 8
  %v2_1319c = inttoptr i32 %v1_1319c to i8*
  %v3_1319c = load i8, i8* %v2_1319c, align 1
  %v4_1319c = zext i8 %v3_1319c to i32
  store i32 %v4_1319c, i32* %r3.global-to-local, align 4
  %v1_131a0 = add i32 %v2_13194, 9
  %v2_131a0 = inttoptr i32 %v1_131a0 to i8*
  %v3_131a0 = load i8, i8* %v2_131a0, align 1
  %v4_131a0 = zext i8 %v3_131a0 to i32
  store i32 %v4_131a0, i32* %r0.global-to-local, align 4
  %v2_131a4 = add i32 %v1_131a4, 16
  %v3_131a4 = inttoptr i32 %v2_131a4 to i32*
  store i32 %v3_13198, i32* %v3_131a4, align 4
  %v0_131a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_131a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_131a8 = add i32 %v1_131a8, %v0_131a8
  %v3_131a8 = inttoptr i32 %v2_131a8 to i32*
  %v4_131a8 = load i32, i32* %v3_131a8, align 4
  %v0_131ac = load i32, i32* %r3.global-to-local, align 4
  %v1_131ac = load i32, i32* %r0.global-to-local, align 4
  %v4_131ac = mul i32 %v1_131ac, 256
  %v5_131ac = or i32 %v4_131ac, %v0_131ac
  store i32 %v5_131ac, i32* %r3.global-to-local, align 4
  %v2_131b0 = add i32 %v5_131ac, %v0_131a8
  store i32 %v2_131b0, i32* @r2, align 4
  %v2_131b4 = icmp eq i32 %v4_131a8, 0
  %v1_131b8 = load i32, i32* @r5, align 4
  %v2_131b8 = add i32 %v1_131b8, 4
  %v3_131b8 = inttoptr i32 %v2_131b8 to i32*
  store i32 %v2_131b0, i32* %v3_131b8, align 4
  br i1 %v2_131b4, label %dec_label_pc_13158, label %dec_label_pc_131c0

dec_label_pc_131c0:                               ; preds = %dec_label_pc_1318c, %.thread
  store i32 %v2_13128, i32* @r0, align 4
  store i32 82484, i32* %r3.global-to-local, align 4
  store i32 78292, i32* @lr, align 4
  %v3_131d0 = load i32, i32* @r2, align 4
  %v8_131d0 = call i32 @function_14234(i32 %v2_13128, i32 1, i32 %v3_131d0, i32 82484, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_131d4 = load i32, i32* @r4, align 4
  store i32 %v0_131d4, i32* %r0.global-to-local, align 4
  store i32 %v3_13120, i32* @r4, align 4
  store i32 %v6_13120, i32* @r5, align 4
  ret i32 %v0_131d4

; uselistorder directives
  uselistorder i32 %v1_131a4, { 0, 2, 1 }
  uselistorder i32 %v6_13158, { 1, 0, 2 }
  uselistorder i32 %v0_13158, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_13128, { 1, 0, 3, 2 }
  uselistorder i32 %v1_13124, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 5, 6, 0 }
  uselistorder label %dec_label_pc_1318c, { 1, 0 }
}

define i32 @function_131f0() local_unnamed_addr {
dec_label_pc_131f0:
  ret i32 ptrtoint (i32* @global_var_1dc40.401 to i32)
}

define i32 @function_131fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_131fc:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v1_13208 = bitcast i32* %stack_var_-20 to %tms*
  %v2_13208 = call i32 @function_14a38(%tms* %v1_13208)
  %v2_13210 = load i32, i32* %stack_var_-20, align 4
  %v2_13214 = add i32 %v2_13210, %tmp
  %v2_1321c = mul i32 %v2_13214, 10000
  %v1_13220 = and i32 %v2_1321c, 2147483632
  ret i32 %v1_13220

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_13230(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13230:
  %v0_13230 = call i32 @function_14e40()
  ret i32 %v0_13230
}

define i32 @function_13240(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13240:
  %v0_13240 = call i32 @function_14e40()
  ret i32 %v0_13240

; uselistorder directives
  uselistorder i32 ()* @function_14e40, { 1, 0 }
}

define i32 @function_13250(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13250:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_13254 = load i32, i32* @r2, align 4
  %v8_13254 = icmp eq i32 %v0_13254, 8
  store i1 %v8_13254, i1* %cpsr_z.global-to-local, align 1
  %v5_13258 = icmp slt i32 %v0_13254, 8
  br i1 %v5_13258, label %dec_label_pc_132b8, label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_13250
  %v4_1325c = mul i32 %arg2, 256
  %v5_1325c = or i32 %v4_1325c, %arg2
  %v4_13260 = mul i32 %v5_1325c, 65536
  %v5_13260 = or i32 %v4_13260, %v5_1325c
  store i32 %v5_13260, i32* %r1.global-to-local, align 4
  %v1_1326457 = urem i32 %tmp, 4
  %v2_1326458 = icmp eq i32 %v1_1326457, 0
  store i1 %v2_1326458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1326458, label %dec_label_pc_13274, label %bb

bb:                                               ; preds = %dec_label_pc_1325c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1325c ]
  %v3_1326859 = phi i32 [ %v6_13268, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1325c ]
  %v4_13268 = inttoptr i32 %v3_1326859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13268, align 1
  %v5_13268 = load i32, i32* %r3.global-to-local, align 4
  %v6_13268 = add i32 %v5_13268, 1
  store i32 %v6_13268, i32* %r3.global-to-local, align 4
  %v0_1326c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13278.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1326c.pr, label %dec_label_pc_13274, label %.thread

.thread:                                          ; preds = %bb
  %v2_1326c = add i32 %v0_13278.pr.pre, -1
  store i32 %v2_1326c, i32* @r2, align 4
  %v1_13264 = urem i32 %v6_13268, 4
  %v2_13264 = icmp eq i32 %v1_13264, 0
  store i1 %v2_13264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13264, label %dec_label_pc_13274, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13268.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13268.pre to i8
  br label %bb

dec_label_pc_13274:                               ; preds = %.thread, %bb, %dec_label_pc_1325c
  %v0_1328028 = phi i32 [ %tmp, %dec_label_pc_1325c ], [ %v6_13268, %bb ], [ %v6_13268, %.thread ]
  %v0_13278.pr = phi i32 [ %v0_13254, %dec_label_pc_1325c ], [ %v0_13278.pr.pre, %bb ], [ %v2_1326c, %.thread ]
  %v0_13274 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13274, i32* %ip.global-to-local, align 4
  %v8_1327810 = icmp eq i32 %v0_13278.pr, 8
  store i1 %v8_1327810, i1* %cpsr_z.global-to-local, align 1
  %v5_1327c11 = icmp slt i32 %v0_13278.pr, 8
  br i1 %v5_1327c11, label %dec_label_pc_132b8, label %dec_label_pc_13280.preheader

dec_label_pc_13280.preheader:                     ; preds = %dec_label_pc_13274
  %v1_1328046 = inttoptr i32 %v0_1328028 to i32*
  store i32 %v0_13274, i32* %v1_1328046, align 4
  %v3_1328047 = add i32 %v0_1328028, 4
  %v4_1328048 = inttoptr i32 %v3_1328047 to i32*
  %v5_1328049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1328049, i32* %v4_1328048, align 4
  %v6_1328050 = add i32 %v0_1328028, 8
  store i32 %v6_1328050, i32* %r3.global-to-local, align 4
  %v0_1328451 = load i32, i32* @r2, align 4
  %v1_1328452 = add i32 %v0_1328451, -8
  store i32 %v1_1328452, i32* %r2.global-to-local, align 4
  %v5_1328c53 = icmp slt i32 %v1_1328452, 8
  br i1 %v5_1328c53, label %dec_label_pc_13280.dec_label_pc_132b8.loopexit_crit_edge, label %dec_label_pc_13290

dec_label_pc_13290:                               ; preds = %dec_label_pc_13280.preheader, %dec_label_pc_13278.dec_label_pc_13280_crit_edge
  %v6_1328055 = phi i32 [ %v6_13280, %dec_label_pc_13278.dec_label_pc_13280_crit_edge ], [ %v6_1328050, %dec_label_pc_13280.preheader ]
  %v0_1328054 = phi i32 [ %v12_132ac, %dec_label_pc_13278.dec_label_pc_13280_crit_edge ], [ %v0_1328028, %dec_label_pc_13280.preheader ]
  %v1_13290 = inttoptr i32 %v6_1328055 to i32*
  %v2_13290 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13290, i32* %v1_13290, align 4
  %v3_13290 = add i32 %v0_1328054, 12
  %v4_13290 = inttoptr i32 %v3_13290 to i32*
  %v5_13290 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13290, i32* %v4_13290, align 4
  %v6_13290 = add i32 %v0_1328054, 16
  store i32 %v6_13290, i32* %r3.global-to-local, align 4
  %v0_13294 = load i32, i32* %r2.global-to-local, align 4
  %v1_13294 = add i32 %v0_13294, -8
  store i32 %v1_13294, i32* %r2.global-to-local, align 4
  %v5_1329c = icmp slt i32 %v1_13294, 8
  br i1 %v5_1329c, label %dec_label_pc_13290.dec_label_pc_132b8.loopexit_crit_edge, label %dec_label_pc_132a0

dec_label_pc_132a0:                               ; preds = %dec_label_pc_13290
  %v1_132a0 = inttoptr i32 %v6_13290 to i32*
  %v2_132a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_132a0, i32* %v1_132a0, align 4
  %v3_132a0 = add i32 %v0_1328054, 20
  %v4_132a0 = inttoptr i32 %v3_132a0 to i32*
  %v5_132a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_132a0, i32* %v4_132a0, align 4
  %v6_132a0 = add i32 %v0_1328054, 24
  store i32 %v6_132a0, i32* %r3.global-to-local, align 4
  %v0_132a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_132a4 = add i32 %v0_132a4, -8
  store i32 %v1_132a4, i32* %r2.global-to-local, align 4
  %v5_132ac = icmp slt i32 %v1_132a4, 8
  br i1 %v5_132ac, label %dec_label_pc_132a0.dec_label_pc_132b8.loopexit_crit_edge, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_132a0
  %v7_132ac = inttoptr i32 %v6_132a0 to i32*
  %v8_132ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_132ac, i32* %v7_132ac, align 4
  %v9_132ac = add i32 %v0_1328054, 28
  %v10_132ac = inttoptr i32 %v9_132ac to i32*
  %v11_132ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_132ac, i32* %v10_132ac, align 4
  %v12_132ac = add i32 %v0_1328054, 32
  store i32 %v12_132ac, i32* %r3.global-to-local, align 4
  %v6_132b0 = load i32, i32* %r2.global-to-local, align 4
  %v7_132b0 = add i32 %v6_132b0, -8
  store i32 %v7_132b0, i32* %r2.global-to-local, align 4
  %v5_1327c = icmp slt i32 %v7_132b0, 8
  br i1 %v5_1327c, label %dec_label_pc_13278.dec_label_pc_132b8.loopexit_crit_edge, label %dec_label_pc_13278.dec_label_pc_13280_crit_edge

dec_label_pc_13278.dec_label_pc_13280_crit_edge:  ; preds = %dec_label_pc_13278
  %v2_13280.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13280 = inttoptr i32 %v12_132ac to i32*
  store i32 %v2_13280.pre, i32* %v1_13280, align 4
  %v3_13280 = add i32 %v0_1328054, 36
  %v4_13280 = inttoptr i32 %v3_13280 to i32*
  %v5_13280 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13280, i32* %v4_13280, align 4
  %v6_13280 = add i32 %v0_1328054, 40
  store i32 %v6_13280, i32* %r3.global-to-local, align 4
  %v0_13284 = load i32, i32* %r2.global-to-local, align 4
  %v1_13284 = add i32 %v0_13284, -8
  store i32 %v1_13284, i32* %r2.global-to-local, align 4
  %v5_1328c = icmp slt i32 %v1_13284, 8
  br i1 %v5_1328c, label %dec_label_pc_13280.dec_label_pc_132b8.loopexit_crit_edge, label %dec_label_pc_13290

dec_label_pc_13280.dec_label_pc_132b8.loopexit_crit_edge: ; preds = %dec_label_pc_13278.dec_label_pc_13280_crit_edge, %dec_label_pc_13280.preheader
  %v1_13284.lcssa = phi i32 [ %v1_1328452, %dec_label_pc_13280.preheader ], [ %v1_13284, %dec_label_pc_13278.dec_label_pc_13280_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_132b8

dec_label_pc_13278.dec_label_pc_132b8.loopexit_crit_edge: ; preds = %dec_label_pc_13278
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_132b8

dec_label_pc_13290.dec_label_pc_132b8.loopexit_crit_edge: ; preds = %dec_label_pc_13290
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_132b8

dec_label_pc_132a0.dec_label_pc_132b8.loopexit_crit_edge: ; preds = %dec_label_pc_132a0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_132b8

dec_label_pc_132b8:                               ; preds = %dec_label_pc_13274, %dec_label_pc_13280.dec_label_pc_132b8.loopexit_crit_edge, %dec_label_pc_13278.dec_label_pc_132b8.loopexit_crit_edge, %dec_label_pc_13290.dec_label_pc_132b8.loopexit_crit_edge, %dec_label_pc_132a0.dec_label_pc_132b8.loopexit_crit_edge, %dec_label_pc_13250
  %v0_132c0 = phi i32 [ %v0_13254, %dec_label_pc_13250 ], [ %v1_132a4, %dec_label_pc_132a0.dec_label_pc_132b8.loopexit_crit_edge ], [ %v1_13294, %dec_label_pc_13290.dec_label_pc_132b8.loopexit_crit_edge ], [ %v7_132b0, %dec_label_pc_13278.dec_label_pc_132b8.loopexit_crit_edge ], [ %v1_13284.lcssa, %dec_label_pc_13280.dec_label_pc_132b8.loopexit_crit_edge ], [ %v0_13278.pr, %dec_label_pc_13274 ]
  %v2_132b8 = icmp eq i32 %v0_132c0, 0
  store i1 %v2_132b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132b8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_132b8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_132b8
  %v1_132c0 = sub i32 7, %v0_132c0
  store i32 %v1_132c0, i32* %r2.global-to-local, align 4
  %v3_132c4 = mul i32 %v1_132c0, 4
  %v4_132c4 = add i32 %v3_132c4, ptrtoint (i32* @global_var_132cc.403 to i32)
  call void @__pseudo_branch(i32 %v4_132c4)
  %v0_132cc = load i32, i32* %r1.global-to-local, align 4
  %v1_132cc = trunc i32 %v0_132cc to i8
  %v2_132cc = load i32, i32* %r3.global-to-local, align 4
  %v3_132cc = inttoptr i32 %v2_132cc to i8*
  store i8 %v1_132cc, i8* %v3_132cc, align 1
  %v4_132cc = load i32, i32* %r3.global-to-local, align 4
  %v5_132cc = add i32 %v4_132cc, 1
  store i32 %v5_132cc, i32* %r3.global-to-local, align 4
  %v0_132d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_132d0 = trunc i32 %v0_132d0 to i8
  %v3_132d0 = inttoptr i32 %v5_132cc to i8*
  store i8 %v1_132d0, i8* %v3_132d0, align 1
  %v4_132d0 = load i32, i32* %r3.global-to-local, align 4
  %v5_132d0 = add i32 %v4_132d0, 1
  store i32 %v5_132d0, i32* %r3.global-to-local, align 4
  %v0_132d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_132d4 = trunc i32 %v0_132d4 to i8
  %v3_132d4 = inttoptr i32 %v5_132d0 to i8*
  store i8 %v1_132d4, i8* %v3_132d4, align 1
  %v4_132d4 = load i32, i32* %r3.global-to-local, align 4
  %v5_132d4 = add i32 %v4_132d4, 1
  store i32 %v5_132d4, i32* %r3.global-to-local, align 4
  %v0_132d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_132d8 = trunc i32 %v0_132d8 to i8
  %v3_132d8 = inttoptr i32 %v5_132d4 to i8*
  store i8 %v1_132d8, i8* %v3_132d8, align 1
  %v4_132d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_132d8 = add i32 %v4_132d8, 1
  store i32 %v5_132d8, i32* %r3.global-to-local, align 4
  %v0_132dc = load i32, i32* %r1.global-to-local, align 4
  %v1_132dc = trunc i32 %v0_132dc to i8
  %v3_132dc = inttoptr i32 %v5_132d8 to i8*
  store i8 %v1_132dc, i8* %v3_132dc, align 1
  %v4_132dc = load i32, i32* %r3.global-to-local, align 4
  %v5_132dc = add i32 %v4_132dc, 1
  store i32 %v5_132dc, i32* %r3.global-to-local, align 4
  %v0_132e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_132e0 = trunc i32 %v0_132e0 to i8
  %v3_132e0 = inttoptr i32 %v5_132dc to i8*
  store i8 %v1_132e0, i8* %v3_132e0, align 1
  %v4_132e0 = load i32, i32* %r3.global-to-local, align 4
  %v5_132e0 = add i32 %v4_132e0, 1
  store i32 %v5_132e0, i32* %r3.global-to-local, align 4
  %v0_132e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_132e4 = trunc i32 %v0_132e4 to i8
  %v3_132e4 = inttoptr i32 %v5_132e0 to i8*
  store i8 %v1_132e4, i8* %v3_132e4, align 1
  %v4_132e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_132e4 = add i32 %v4_132e4, 1
  store i32 %v5_132e4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13280, { 1, 0 }
  uselistorder i32 %v12_132ac, { 1, 2, 0 }
  uselistorder i32 %v0_1328054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13278.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13268, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1325c, { 1, 0 }
  uselistorder i32 %v0_13254, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_132b8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13290, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_132f0(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_132f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_132f0 = sub i32 %arg1, %tmp
  %v1_132f4 = add i32 %v2_132f0, -1
  store i32 %v1_132f4, i32* %r2.global-to-local, align 4
  %v2_132f84 = load i8, i8* %arg2, align 1
  %v5_132f86 = add i32 %tmp, 1
  store i32 %v5_132f86, i32* %r1.global-to-local, align 4
  %v2_132fc7 = icmp eq i8 %v2_132f84, 0
  store i1 %v2_132fc7, i1* %cpsr_z.global-to-local, align 1
  %v5_133008 = inttoptr i32 %arg1 to i8*
  store i8 %v2_132f84, i8* %v5_133008, align 1
  %v0_133049 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_133049, label %dec_label_pc_13308, label %dec_label_pc_132f8.dec_label_pc_132f8_crit_edge

dec_label_pc_132f8.dec_label_pc_132f8_crit_edge:  ; preds = %dec_label_pc_132f0, %dec_label_pc_132f8.dec_label_pc_132f8_crit_edge
  %v0_132f8.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_13300.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_132f8 = inttoptr i32 %v0_132f8.pre to i8*
  %v2_132f8 = load i8, i8* %v1_132f8, align 1
  %v5_132f8 = add i32 %v0_132f8.pre, 1
  store i32 %v5_132f8, i32* %r1.global-to-local, align 4
  %v2_132fc = icmp eq i8 %v2_132f8, 0
  store i1 %v2_132fc, i1* %cpsr_z.global-to-local, align 1
  %v4_13300 = add i32 %v5_132f8, %v3_13300.pre
  %v5_13300 = inttoptr i32 %v4_13300 to i8*
  store i8 %v2_132f8, i8* %v5_13300, align 1
  %v0_13304 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13304, label %dec_label_pc_13308, label %dec_label_pc_132f8.dec_label_pc_132f8_crit_edge

dec_label_pc_13308:                               ; preds = %dec_label_pc_132f8.dec_label_pc_132f8_crit_edge, %dec_label_pc_132f0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132f8.dec_label_pc_132f8_crit_edge, { 1, 0 }
}

define i32 @function_1330c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1330c:
  %stack_var_-8 = alloca i32, align 4
  %v2_13310 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_13310, i32* @r1, align 4
  %v0_13318 = call i32 @function_152d0()
  %v2_1331c = icmp eq i32 %v0_13318, 0
  br i1 %v2_1331c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_1330c
  %v3_13324 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_1330c, %bb
  %v5_1332c = phi i32 [ -1, %dec_label_pc_1330c ], [ %v3_13324, %bb ]
  ret i32 %v5_1332c

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13330(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13330:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13330 = load i32, i32* @r4, align 4
  store i32 %v3_13330, i32* %stack_var_-8, align 4
  %v5_13334 = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_13334, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13334, -4095
  br i1 %tmp, label %dec_label_pc_13354, label %dec_label_pc_13344

dec_label_pc_13344:                               ; preds = %dec_label_pc_13330
  %v0_13344 = call i32 @function_131f0()
  %v0_13348 = load i32, i32* %r4.global-to-local, align 4
  %v1_13348 = sub i32 0, %v0_13348
  %v2_1334c = inttoptr i32 %v0_13344 to i32*
  store i32 %v1_13348, i32* %v2_1334c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13330, %dec_label_pc_13344
  %v0_13354 = phi i32 [ %v5_13334, %dec_label_pc_13330 ], [ -1, %dec_label_pc_13344 ]
  %v2_13358 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13358, i32* @r4, align 4
  ret i32 %v0_13354

; uselistorder directives
  uselistorder i32 %v5_13334, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13354, { 1, 0 }
}

define i32 @function_1335c(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1335c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1335c = load i32, i32* @r4, align 4
  store i32 %v3_1335c, i32* %stack_var_-8, align 4
  %v5_13360 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_13360, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13360, -4095
  br i1 %tmp, label %dec_label_pc_13380, label %dec_label_pc_13370

dec_label_pc_13370:                               ; preds = %dec_label_pc_1335c
  %v0_13370 = call i32 @function_131f0()
  %v0_13374 = load i32, i32* %r4.global-to-local, align 4
  %v1_13374 = sub i32 0, %v0_13374
  %v2_13378 = inttoptr i32 %v0_13370 to i32*
  store i32 %v1_13374, i32* %v2_13378, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13380

dec_label_pc_13380:                               ; preds = %dec_label_pc_1335c, %dec_label_pc_13370
  %v0_13380 = phi i32 [ %v5_13360, %dec_label_pc_1335c ], [ -1, %dec_label_pc_13370 ]
  %v2_13384 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13384, i32* @r4, align 4
  ret i32 %v0_13380

; uselistorder directives
  uselistorder i32 %v5_13360, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13380, { 1, 0 }
}

define i32 @function_13388(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13388:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13388 = load i32, i32* @r4, align 4
  store i32 %v3_13388, i32* %stack_var_-8, align 4
  %v5_1338c = inttoptr i32 %arg3 to i32*
  %v6_1338c = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_1338c)
  store i32 %v6_1338c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_1338c, -4095
  br i1 %tmp, label %dec_label_pc_133ac, label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13388
  %v0_1339c = call i32 @function_131f0()
  %v0_133a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_133a0 = sub i32 0, %v0_133a0
  %v2_133a4 = inttoptr i32 %v0_1339c to i32*
  store i32 %v1_133a0, i32* %v2_133a4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133ac

dec_label_pc_133ac:                               ; preds = %dec_label_pc_13388, %dec_label_pc_1339c
  %v0_133ac = phi i32 [ %v6_1338c, %dec_label_pc_13388 ], [ -1, %dec_label_pc_1339c ]
  %v2_133b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_133b0, i32* @r4, align 4
  ret i32 %v0_133ac

; uselistorder directives
  uselistorder i32 %v6_1338c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133ac, { 1, 0 }
}

define i32 @function_133b4(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_133b4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_133b4 = load i32, i32* @r4, align 4
  store i32 %v3_133b4, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_133bc = call i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32* null)
  store i32 %v5_133bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_133bc, -4095
  br i1 %tmp, label %dec_label_pc_133dc, label %dec_label_pc_133cc

dec_label_pc_133cc:                               ; preds = %dec_label_pc_133b4
  %v0_133cc = call i32 @function_131f0()
  %v0_133d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_133d0 = sub i32 0, %v0_133d0
  %v2_133d4 = inttoptr i32 %v0_133cc to i32*
  store i32 %v1_133d0, i32* %v2_133d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133dc

dec_label_pc_133dc:                               ; preds = %dec_label_pc_133b4, %dec_label_pc_133cc
  %v0_133dc = phi i32 [ %v5_133bc, %dec_label_pc_133b4 ], [ -1, %dec_label_pc_133cc ]
  %v2_133e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_133e0, i32* @r4, align 4
  ret i32 %v0_133dc

; uselistorder directives
  uselistorder i32 %v5_133bc, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_133dc, { 1, 0 }
}

define i32 @function_133e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_133e4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_133e4 = load i32, i32* @r4, align 4
  store i32 %v3_133e4, i32* %stack_var_-8, align 4
  %v2_133e8 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_133e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_133e8, -4095
  br i1 %tmp, label %dec_label_pc_13408, label %dec_label_pc_133f8

dec_label_pc_133f8:                               ; preds = %dec_label_pc_133e4
  %v0_133f8 = call i32 @function_131f0()
  %v0_133fc = load i32, i32* %r4.global-to-local, align 4
  %v1_133fc = sub i32 0, %v0_133fc
  %v2_13400 = inttoptr i32 %v0_133f8 to i32*
  store i32 %v1_133fc, i32* %v2_13400, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13408

dec_label_pc_13408:                               ; preds = %dec_label_pc_133e4, %dec_label_pc_133f8
  %v0_13408 = phi i32 [ %v2_133e8, %dec_label_pc_133e4 ], [ -1, %dec_label_pc_133f8 ]
  %v2_1340c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1340c, i32* @r4, align 4
  ret i32 %v0_13408

; uselistorder directives
  uselistorder i32 %v2_133e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13408, { 1, 0 }
}

define i32 @function_13410(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13410:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13410 = load i32, i32* @r4, align 4
  store i32 %v3_13410, i32* %stack_var_-8, align 4
  %v5_13414 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_13414, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13414, -4095
  br i1 %tmp, label %dec_label_pc_13434, label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_13410
  %v0_13424 = call i32 @function_131f0()
  %v0_13428 = load i32, i32* %r4.global-to-local, align 4
  %v1_13428 = sub i32 0, %v0_13428
  %v2_1342c = inttoptr i32 %v0_13424 to i32*
  store i32 %v1_13428, i32* %v2_1342c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13434

dec_label_pc_13434:                               ; preds = %dec_label_pc_13410, %dec_label_pc_13424
  %v0_13434 = phi i32 [ %v5_13414, %dec_label_pc_13410 ], [ -1, %dec_label_pc_13424 ]
  %v2_13438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13438, i32* @r4, align 4
  ret i32 %v0_13434

; uselistorder directives
  uselistorder i32 %v5_13414, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13434, { 1, 0 }
}

define i32 @function_1343c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1343c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1343c = load i32, i32* @r4, align 4
  store i32 %v3_1343c, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13448 = call i32 @recvfrom(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32* null)
  store i32 %v5_13448, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13448, -4095
  br i1 %tmp, label %dec_label_pc_13468, label %dec_label_pc_13458

dec_label_pc_13458:                               ; preds = %dec_label_pc_1343c
  %v0_13458 = call i32 @function_131f0()
  %v0_1345c = load i32, i32* %r4.global-to-local, align 4
  %v1_1345c = sub i32 0, %v0_1345c
  %v2_13460 = inttoptr i32 %v0_13458 to i32*
  store i32 %v1_1345c, i32* %v2_13460, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13468

dec_label_pc_13468:                               ; preds = %dec_label_pc_1343c, %dec_label_pc_13458
  %v0_13468 = phi i32 [ %v5_13448, %dec_label_pc_1343c ], [ -1, %dec_label_pc_13458 ]
  %v2_1346c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1346c, i32* @r4, align 4
  ret i32 %v0_13468

; uselistorder directives
  uselistorder i32 %v5_13448, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13468, { 1, 0 }
}

define i32 @function_13470(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13470:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13470 = load i32, i32* @r4, align 4
  store i32 %v3_13470, i32* %stack_var_-8, align 4
  %v5_13474 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_13474, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13474, -4095
  br i1 %tmp, label %dec_label_pc_13494, label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13470
  %v0_13484 = call i32 @function_131f0()
  %v0_13488 = load i32, i32* %r4.global-to-local, align 4
  %v1_13488 = sub i32 0, %v0_13488
  %v2_1348c = inttoptr i32 %v0_13484 to i32*
  store i32 %v1_13488, i32* %v2_1348c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13494

dec_label_pc_13494:                               ; preds = %dec_label_pc_13470, %dec_label_pc_13484
  %v0_13494 = phi i32 [ %v5_13474, %dec_label_pc_13470 ], [ -1, %dec_label_pc_13484 ]
  %v2_13498 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13498, i32* @r4, align 4
  ret i32 %v0_13494

; uselistorder directives
  uselistorder i32 %v5_13474, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13494, { 1, 0 }
}

define i32 @function_1349c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1349c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_134a8 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_134a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_134a8, -4095
  br i1 %tmp, label %dec_label_pc_134c8, label %dec_label_pc_134b8

dec_label_pc_134b8:                               ; preds = %dec_label_pc_1349c
  %v0_134b8 = call i32 @function_131f0()
  %v0_134bc = load i32, i32* %r4.global-to-local, align 4
  %v1_134bc = sub i32 0, %v0_134bc
  %v2_134c0 = inttoptr i32 %v0_134b8 to i32*
  store i32 %v1_134bc, i32* %v2_134c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134c8

dec_label_pc_134c8:                               ; preds = %dec_label_pc_1349c, %dec_label_pc_134b8
  %v0_134c8 = phi i32 [ %v5_134a8, %dec_label_pc_1349c ], [ -1, %dec_label_pc_134b8 ]
  ret i32 %v0_134c8

; uselistorder directives
  uselistorder i32 %v5_134a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134c8, { 1, 0 }
}

define i32 @function_134d0(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_134d0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_134d0 = load i32, i32* @r4, align 4
  store i32 %v3_134d0, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_134d8 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_134d8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_134d8, -4095
  br i1 %tmp, label %dec_label_pc_134f8, label %dec_label_pc_134e8

dec_label_pc_134e8:                               ; preds = %dec_label_pc_134d0
  %v0_134e8 = call i32 @function_131f0()
  %v0_134ec = load i32, i32* %r4.global-to-local, align 4
  %v1_134ec = sub i32 0, %v0_134ec
  %v2_134f0 = inttoptr i32 %v0_134e8 to i32*
  store i32 %v1_134ec, i32* %v2_134f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_134f8

dec_label_pc_134f8:                               ; preds = %dec_label_pc_134d0, %dec_label_pc_134e8
  %v0_134f8 = phi i32 [ %v5_134d8, %dec_label_pc_134d0 ], [ -1, %dec_label_pc_134e8 ]
  %v2_134fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_134fc, i32* @r4, align 4
  ret i32 %v0_134f8

; uselistorder directives
  uselistorder i32 %v5_134d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134f8, { 1, 0 }
}

define i32 @function_13500(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13500:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13500 = load i32, i32* @r4, align 4
  store i32 %v3_13500, i32* %stack_var_-8, align 4
  %v3_13504 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_13504, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_13504, -4095
  br i1 %tmp, label %dec_label_pc_13524, label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %dec_label_pc_13500
  %v0_13514 = call i32 @function_131f0()
  %v0_13518 = load i32, i32* %r4.global-to-local, align 4
  %v1_13518 = sub i32 0, %v0_13518
  %v2_1351c = inttoptr i32 %v0_13514 to i32*
  store i32 %v1_13518, i32* %v2_1351c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13524

dec_label_pc_13524:                               ; preds = %dec_label_pc_13500, %dec_label_pc_13514
  %v0_13524 = phi i32 [ %v3_13504, %dec_label_pc_13500 ], [ -1, %dec_label_pc_13514 ]
  %v2_13528 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13528, i32* @r4, align 4
  ret i32 %v0_13524

; uselistorder directives
  uselistorder i32 %v3_13504, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13524, { 1, 0 }
}

define i32 @function_1352c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1352c:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_13548, label %dec_label_pc_13538

dec_label_pc_13538:                               ; preds = %dec_label_pc_1352c
  %v8_1353c = icmp sgt i32 %arg1, 64
  br i1 %v8_1353c, label %dec_label_pc_13548, label %dec_label_pc_13540

dec_label_pc_13540:                               ; preds = %dec_label_pc_13538
  %v0_13544 = call i32 @function_13650()
  br label %dec_label_pc_13548

dec_label_pc_13548:                               ; preds = %dec_label_pc_13538, %dec_label_pc_1352c, %dec_label_pc_13540
  %v0_13548 = call i32 @function_131f0()
  %v2_13550 = inttoptr i32 %v0_13548 to i32*
  store i32 22, i32* %v2_13550, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13548, { 2, 0, 1 }
}

define i32 @function_1355c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1355c:
  store i32 128, i32* @r2, align 4
  %v0_13568 = load i32, i32* @r0, align 4
  %v2_13568 = inttoptr i32 %v0_13568 to i8*
  %v3_13568 = call i32 @function_13250(i8* %v2_13568, i32 0)
  ret i32 0
}

define i32 @function_13574(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13574:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13574 = load i32, i32* @r4, align 4
  store i32 %v3_13574, i32* %stack_var_-12, align 4
  %v6_13574 = load i32, i32* @r5, align 4
  %v10_13574 = ptrtoint i32* %stack_var_-12 to i32
  %v7_13578 = icmp eq i32 %arg2, -1
  %v0_13584.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_13578, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13574
  br label %dec_label_pc_1359c

bb:                                               ; preds = %dec_label_pc_13574
  %v2_13580 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_13584.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_13584.pre, 1
  br i1 %tmp19, label %dec_label_pc_1359c, label %dec_label_pc_1358c

dec_label_pc_1358c:                               ; preds = %bb
  %v7_13590 = icmp sgt i32 %v0_13584.pre, 64
  br i1 %v7_13590, label %dec_label_pc_1359c, label %bb20

bb20:                                             ; preds = %dec_label_pc_1358c
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_135c024 = add i32 %v10_13574, 124
  store i32 %v5_135c024, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135b0

dec_label_pc_1359c:                               ; preds = %.thread, %dec_label_pc_1358c, %bb
  %v0_1359c = call i32 @function_131f0()
  store i32 %v0_1359c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_135a8 = inttoptr i32 %v0_1359c to i32*
  store i32 22, i32* %v2_135a8, align 4
  %v0_1361c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1361c

dec_label_pc_135b0:                               ; preds = %bb20, %dec_label_pc_135b0
  %v5_135c025 = phi i32 [ %v5_135c024, %bb20 ], [ %v5_135c0, %dec_label_pc_135b0 ]
  %v2_135b4 = add i32 %v5_135c025, -136
  %v3_135b4 = inttoptr i32 %v2_135b4 to i32*
  store i32 0, i32* %v3_135b4, align 4
  %v0_135b8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_135b8 = add i32 %v0_135b8.pre, -1
  store i32 %v1_135b8, i32* %r0.global-to-local, align 4
  %v6_135b8 = icmp slt i32 %v1_135b8, 0
  %v4_135c0 = mul i32 %v1_135b8, 4
  %v5_135c0 = add i32 %v4_135c0, %v10_13574
  store i32 %v5_135c0, i32* %r2.global-to-local, align 4
  br i1 %v6_135b8, label %dec_label_pc_135c8, label %dec_label_pc_135b0

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135b0
  %v2_135c8 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_135c8, i32* @r5, align 4
  %v2_135cc = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_135cc, i32* @r0, align 4
  %v0_135d0 = load i32, i32* @r4, align 4
  store i32 %v0_135d0, i32* @r1, align 4
  %v0_135d4 = call i32 @function_13650()
  store i32 %v0_135d4, i32* %r0.global-to-local, align 4
  %v1_135d8 = icmp slt i32 %v0_135d4, 0
  br i1 %v1_135d8, label %dec_label_pc_13618, label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135c8
  %v0_135e0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dd70.405 to i32), i32* %r0.global-to-local, align 4
  %v2_135e8 = call i32 @function_1362c(i32 ptrtoint (i32* @global_var_1dd70.405 to i32), i32 %v0_135e0)
  store i32 %v2_13580, i32* %r2.global-to-local, align 4
  %v0_13600 = load i32, i32* @r4, align 4
  store i32 %v0_13600, i32* %r0.global-to-local, align 4
  %v4_13608 = call i32 @function_14518(i32 %v0_13600, i32* nonnull %stack_var_-152, i32 %v2_13580)
  store i32 %v4_13608, i32* %r0.global-to-local, align 4
  %v1_1360c = icmp slt i32 %v4_13608, 0
  br i1 %v1_1360c, label %dec_label_pc_13618, label %bb23

bb23:                                             ; preds = %dec_label_pc_135e0
  %v5_13610 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_13610, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1361c

dec_label_pc_13618:                               ; preds = %dec_label_pc_135e0, %dec_label_pc_135c8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1361c

dec_label_pc_1361c:                               ; preds = %bb23, %dec_label_pc_1359c, %dec_label_pc_13618
  %v0_1361c = phi i32 [ %v5_13610, %bb23 ], [ %v0_1361c.pre, %dec_label_pc_1359c ], [ -1, %dec_label_pc_13618 ]
  store i32 %v0_1361c, i32* %r0.global-to-local, align 4
  %v2_13624 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13624, i32* @r4, align 4
  store i32 %v6_13574, i32* @r5, align 4
  ret i32 %v0_1361c

; uselistorder directives
  uselistorder i32 %v0_1361c, { 1, 0 }
  uselistorder i32 %v5_135c0, { 1, 0 }
  uselistorder i32 %v1_135b8, { 0, 2, 1 }
  uselistorder i32 %v2_13580, { 1, 0 }
  uselistorder i32 %v0_13584.pre, { 1, 0, 2 }
  uselistorder i32 %v10_13574, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1361c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_135b0, { 1, 0 }
  uselistorder label %dec_label_pc_1359c, { 1, 2, 0 }
}

define i32 @function_1362c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1362c:
  %v1_1362c = add i32 %arg2, -1
  %v3_13630 = udiv i32 %v1_1362c, 32
  %v4_13634 = mul nuw nsw i32 %v3_13630, 4
  %v5_13634 = add i32 %v4_13634, %arg1
  %v6_13634 = inttoptr i32 %v5_13634 to i32*
  %v7_13634 = load i32, i32* %v6_13634, align 4
  %v1_13638 = urem i32 %v1_1362c, 32
  %v7_13640 = shl i32 1, %v1_13638
  %v8_13640 = and i32 %v7_13634, %v7_13640
  %v10_13640 = icmp ne i32 %v8_13640, 0
  %. = zext i1 %v10_13640 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1362c, { 1, 0 }
}

define i32 @function_13650() local_unnamed_addr {
dec_label_pc_13650:
  %v0_13650 = load i32, i32* @r1, align 4
  %v1_13650 = add i32 %v0_13650, -1
  %v3_13654 = udiv i32 %v1_13650, 32
  store i32 %v3_13654, i32* @ip, align 4
  %v0_13658 = load i32, i32* @r0, align 4
  %v4_13658 = mul nuw nsw i32 %v3_13654, 4
  %v5_13658 = add i32 %v0_13658, %v4_13658
  %v6_13658 = inttoptr i32 %v5_13658 to i32*
  %v7_13658 = load i32, i32* %v6_13658, align 4
  %v1_1365c = urem i32 %v1_13650, 32
  %v7_13664 = shl i32 1, %v1_1365c
  %v8_13664 = or i32 %v7_13658, %v7_13664
  store i32 %v8_13664, i32* %v6_13658, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13654, { 1, 0 }
  uselistorder i32 %v1_13650, { 1, 0 }
}

define i32 @function_13674(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13674:
  %v1_13674 = add i32 %arg2, -1
  %v3_13678 = udiv i32 %v1_13674, 32
  %v4_1367c = mul nuw nsw i32 %v3_13678, 4
  %v5_1367c = add i32 %v4_1367c, %arg1
  %v6_1367c = inttoptr i32 %v5_1367c to i32*
  %v7_1367c = load i32, i32* %v6_1367c, align 4
  %v1_13680 = urem i32 %v1_13674, 32
  %tmp = shl i32 -1, %v1_13680
  %v8_13688 = add i32 %tmp, -1
  %v9_13688 = and i32 %v7_1367c, %v8_13688
  store i32 %v9_13688, i32* %v6_1367c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13674, { 1, 0 }
}

define i32 @function_13698(i32 %arg1) local_unnamed_addr {
dec_label_pc_13698:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13698 = load i32, i32* @r4, align 4
  %v6_13698 = load i32, i32* @r5, align 4
  %v9_13698 = load i32, i32* @r6, align 4
  %v0_1369c = load i32, i32* %r0.global-to-local, align 4
  %v2_1369c = icmp eq i32 %v0_1369c, 0
  %v2_136a0 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_1369c, label %bb, label %dec_label_pc_136ac

bb:                                               ; preds = %dec_label_pc_13698
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136b4

dec_label_pc_136ac:                               ; preds = %dec_label_pc_13698
  %tmp = icmp ugt i32 %v0_1369c, -8
  br i1 %tmp, label %dec_label_pc_137b8, label %dec_label_pc_136b4

dec_label_pc_136b4:                               ; preds = %bb, %dec_label_pc_136ac
  %v0_136b4 = phi i32 [ %v0_1369c, %dec_label_pc_136ac ], [ 1, %bb ]
  %v1_136b4 = add i32 %v0_136b4, 4
  store i32 %v1_136b4, i32* %stack_var_-20, align 4
  store i32 %v2_136a0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1dc08.407 to i32), i32* %r0.global-to-local, align 4
  %v1_136cc = call i32 @function_1422c()
  store i32 ptrtoint (i32** @global_var_1da4c.411 to i32), i32* %r0.global-to-local, align 4
  %v3_136d8 = call i32 @function_13a4c(i32* bitcast (i32** @global_var_1da4c.411 to i32*), i32 %v2_136a0)
  store i32 %v3_136d8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc08.407 to i32), i32* %r0.global-to-local, align 4
  store i32 79600, i32* @lr, align 4
  %v1_136ec = call i32 @function_1422c()
  store i32 %v1_136ec, i32* %r0.global-to-local, align 4
  %v2_136f0 = icmp eq i32 %v3_136d8, 0
  br i1 %v2_136f0, label %dec_label_pc_136f8, label %dec_label_pc_137a8

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136b4
  %v2_136fc = load i32, i32* @global_var_1dc30.414, align 4
  store i32 %v2_136fc, i32* @r4, align 4
  %v2_13700 = load i32, i32* %stack_var_-20, align 4
  %v3_13704 = icmp ult i32 %v2_13700, %v2_136fc
  br i1 %v3_13704, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_136f8
  %v3_13708 = add i32 %v2_136fc, -1
  %v2_1370c = add i32 %v3_13708, %v2_13700
  %v2_13710 = sub i32 0, %v2_136fc
  %v3_13714 = and i32 %v2_1370c, %v2_13710
  store i32 %v3_13714, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_136f8, %bb14
  store i32 ptrtoint (i32* @global_var_1ddf0.416 to i32), i32* %r0.global-to-local, align 4
  %v1_13720 = call i32 @function_1422c()
  %v0_13724 = load i32, i32* @r4, align 4
  store i32 %v0_13724, i32* %r0.global-to-local, align 4
  %v1_13728 = call i32 @function_149e0(i32 %v0_13724)
  store i32 %v1_13728, i32* %r0.global-to-local, align 4
  %v7_1372c = icmp eq i32 %v1_13728, -1
  br i1 %v7_1372c, label %bb15, label %dec_label_pc_13738

bb15:                                             ; preds = %.thread3
  store i32 %v1_13728, i32* @r5, align 4
  br label %dec_label_pc_1374c

dec_label_pc_13738:                               ; preds = %.thread3
  %v1_13738 = add i32 %v1_13728, 3
  %v1_1373c = and i32 %v1_13738, -4
  store i32 %v1_1373c, i32* @r5, align 4
  %v9_13740 = icmp eq i32 %v1_1373c, %v1_13728
  br i1 %v9_13740, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_13738
  %v3_13744 = sub i32 %v1_1373c, %v1_13728
  store i32 %v3_13744, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_13738, %bb16
  %v1_13748 = xor i1 %v9_13740, true
  call void @__pseudo_cond_branch(i1 %v1_13748, i32 ptrtoint (i32* @global_var_149e0.417 to i32))
  br label %dec_label_pc_1374c

dec_label_pc_1374c:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_1ddf0.416 to i32), i32* %r0.global-to-local, align 4
  store i32 79708, i32* @lr, align 4
  %v1_13758 = call i32 @function_1422c()
  store i32 %v1_13758, i32* %r0.global-to-local, align 4
  %v0_1375c = load i32, i32* @r5, align 4
  %v7_1375c = icmp eq i32 %v0_1375c, -1
  br i1 %v7_1375c, label %dec_label_pc_137b8, label %dec_label_pc_13764

dec_label_pc_13764:                               ; preds = %dec_label_pc_1374c
  store i32 ptrtoint (i32* @global_var_1dc08.407 to i32), i32* %r0.global-to-local, align 4
  %v1_13770 = call i32 @function_1422c()
  %v0_13774 = load i32, i32* @r4, align 4
  %v0_13778 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1da4c.411 to i32), i32* %r0.global-to-local, align 4
  %v4_13780 = call i32 @function_13ba0(i32* bitcast (i32** @global_var_1da4c.411 to i32*), i32 %v0_13778, i32 %v0_13774)
  store i32 ptrtoint (i32** @global_var_1da4c.411 to i32), i32* %r0.global-to-local, align 4
  %v3_1378c = call i32 @function_13a4c(i32* bitcast (i32** @global_var_1da4c.411 to i32*), i32 %v2_136a0)
  store i32 %v3_1378c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1dc08.407 to i32), i32* %r0.global-to-local, align 4
  store i32 79776, i32* @lr, align 4
  %v1_1379c = call i32 @function_1422c()
  store i32 %v1_1379c, i32* %r0.global-to-local, align 4
  %v2_137a0 = icmp eq i32 %v3_1378c, 0
  br i1 %v2_137a0, label %dec_label_pc_137b8, label %dec_label_pc_137a8

dec_label_pc_137a8:                               ; preds = %dec_label_pc_136b4, %dec_label_pc_13764
  %v1_137ac = phi i32 [ %v3_136d8, %dec_label_pc_136b4 ], [ %v3_1378c, %dec_label_pc_13764 ]
  %v2_137a8 = load i32, i32* %stack_var_-20, align 4
  %v2_137ac = inttoptr i32 %v1_137ac to i32*
  store i32 %v2_137a8, i32* %v2_137ac, align 4
  %v3_137ac = load i32, i32* %r4.global-to-local, align 4
  %v4_137ac = add i32 %v3_137ac, 4
  store i32 %v4_137ac, i32* %r4.global-to-local, align 4
  %v2_137b0 = icmp eq i32 %v4_137ac, 0
  br i1 %v2_137b0, label %dec_label_pc_137b8, label %dec_label_pc_137c8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137a8, %dec_label_pc_13764, %dec_label_pc_1374c, %dec_label_pc_136ac
  %v0_137b8 = call i32 @function_131f0()
  store i32 %v0_137b8, i32* %r0.global-to-local, align 4
  %v2_137c0 = inttoptr i32 %v0_137b8 to i32*
  store i32 12, i32* %v2_137c0, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137a8, %dec_label_pc_137b8
  %v0_137c8 = phi i32 [ %v4_137ac, %dec_label_pc_137a8 ], [ 0, %dec_label_pc_137b8 ]
  store i32 %v0_137c8, i32* %r0.global-to-local, align 4
  store i32 %v3_13698, i32* @r4, align 4
  store i32 %v6_13698, i32* @r5, align 4
  store i32 %v9_13698, i32* @r6, align 4
  ret i32 %v0_137c8

; uselistorder directives
  uselistorder i32 %v0_137c8, { 1, 0 }
  uselistorder i32 %v3_1378c, { 1, 0, 2 }
  uselistorder i32 %v1_1373c, { 1, 0, 2 }
  uselistorder i32 %v1_13728, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_136d8, { 1, 0, 2 }
  uselistorder i32 %v0_1369c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 4, 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 18, 19, 6, 3, 4, 5, 7, 10, 9, 8, 2, 12, 11, 15, 13, 14, 16, 17, 0, 1 }
  uselistorder label %dec_label_pc_137c8, { 1, 0 }
  uselistorder label %dec_label_pc_137a8, { 1, 0 }
  uselistorder label %dec_label_pc_1374c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_136b4, { 1, 0 }
}

define i32 @function_137ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137ec:
  %stack_var_-12 = alloca i32, align 4
  %v3_137ec = load i32, i32* @r4, align 4
  store i32 %v3_137ec, i32* %stack_var_-12, align 4
  %v6_137ec = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_137f4 = mul i32 %arg2, %arg1
  store i32 %v2_137f4, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_137f8 = icmp eq i32 %arg1, 0
  store i32 %v2_137f4, i32* @r0, align 4
  br i1 %v2_137f8, label %dec_label_pc_13824, label %dec_label_pc_13804

dec_label_pc_13804:                               ; preds = %dec_label_pc_137ec
  %v0_13804 = call i32 @function_12894()
  %v0_13808 = load i32, i32* @r5, align 4
  %v9_13808 = icmp eq i32 %v0_13808, %v0_13804
  store i32 0, i32* @r5, align 4
  br i1 %v9_13808, label %dec_label_pc_13804.dec_label_pc_13824_crit_edge, label %dec_label_pc_13814

dec_label_pc_13804.dec_label_pc_13824_crit_edge:  ; preds = %dec_label_pc_13804
  %v0_13824.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13824

dec_label_pc_13814:                               ; preds = %dec_label_pc_13804
  %v0_13814 = call i32 @function_131f0()
  %v2_1381c = inttoptr i32 %v0_13814 to i32*
  store i32 12, i32* %v2_1381c, align 4
  br label %dec_label_pc_1383c

dec_label_pc_13824:                               ; preds = %dec_label_pc_13804.dec_label_pc_13824_crit_edge, %dec_label_pc_137ec
  %v0_13824 = phi i32 [ %v0_13824.pre, %dec_label_pc_13804.dec_label_pc_13824_crit_edge ], [ %v2_137f4, %dec_label_pc_137ec ]
  %v1_13828 = call i32 @function_13698(i32 %v0_13824)
  store i32 %v1_13828, i32* @r5, align 4
  store i32 79932, i32* @lr, align 4
  %v1_13838 = icmp ne i32 %v1_13828, 0
  call void @__pseudo_cond_branch(i1 %v1_13838, i32 ptrtoint (i32* @global_var_13250.418 to i32))
  br label %dec_label_pc_1383c

dec_label_pc_1383c:                               ; preds = %dec_label_pc_13814, %dec_label_pc_13824
  %v0_1383c = load i32, i32* @r5, align 4
  %v2_13840 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13840, i32* @r4, align 4
  store i32 %v6_137ec, i32* @r5, align 4
  ret i32 %v0_1383c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1383c, { 1, 0 }
}

define i32 @function_13844() local_unnamed_addr {
dec_label_pc_13844:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_13844 = load i32, i32* @r0, align 4
  %v2_13844 = icmp eq i32 %v0_13844, 0
  %v3_13848 = load i32, i32* @r4, align 4
  store i32 %v3_13848, i32* %stack_var_-24, align 4
  %v6_13848 = load i32, i32* @r5, align 4
  %v9_13848 = load i32, i32* @r6, align 4
  %v15_13848 = load i32, i32* @r8, align 4
  br i1 %v2_13844, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_13844
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_13844
  %v1_13850 = add i32 %v0_13844, -4
  %v2_13850 = inttoptr i32 %v1_13850 to i32*
  %v3_13850 = load i32, i32* %v2_13850, align 4
  store i32 %v3_13850, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_1da4c.411 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_13850, i32* @r4, align 4
  %v1_13868 = call i32 @function_1422c()
  %v0_1386c = load i32, i32* @r4, align 4
  %v0_13870 = load i32, i32* @r5, align 4
  %v4_13878 = call i32 @function_13ba0(i32* bitcast (i32** @global_var_1da4c.411 to i32*), i32 %v0_1386c, i32 %v0_13870)
  %v1_13880 = inttoptr i32 %v4_13878 to i32*
  %v2_13880 = load i32, i32* %v1_13880, align 4
  store i32 %v2_13880, i32* %r6.global-to-local, align 4
  %v2_13884 = load i32, i32* @global_var_1dc30.414, align 4
  %v4_13888 = mul i32 %v2_13884, 8
  %v6_13888 = icmp ult i32 %v2_13880, %v4_13888
  store i32 %v4_13878, i32* @r4, align 4
  br i1 %v6_13888, label %dec_label_pc_138c8, label %dec_label_pc_13894

dec_label_pc_13894:                               ; preds = %bb11
  %v1_1389c = call i32 @function_1422c()
  %v1_138a4 = call i32 @function_149e0(i32 0)
  %v0_138a8 = load i32, i32* @r4, align 4
  %v1_138a8 = add i32 %v0_138a8, 12
  store i32 %v1_138a8, i32* @r5, align 4
  %v9_138ac = icmp eq i32 %v1_138a8, %v1_138a4
  br i1 %v9_138ac, label %dec_label_pc_138d0, label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %dec_label_pc_13894
  %v1_138c0 = call i32 @function_1422c()
  br label %dec_label_pc_138c8

dec_label_pc_138c8:                               ; preds = %bb11, %dec_label_pc_138b4, %bb14
  %v2_138c8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138c8, i32* @r4, align 4
  store i32 %v6_13848, i32* @r5, align 4
  store i32 %v9_13848, i32* %r6.global-to-local, align 4
  store i32 %v15_13848, i32* %r8.global-to-local, align 4
  %v0_138cc = call i32 @function_1422c()
  %v0_138d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_138d0

dec_label_pc_138d0:                               ; preds = %dec_label_pc_13894, %dec_label_pc_138c8
  %v1_138d8 = phi i32 [ %v0_138a8, %dec_label_pc_13894 ], [ %v0_138d0.pre, %dec_label_pc_138c8 ]
  %v1_138d0 = add i32 %v1_138d8, 4
  %v2_138d0 = inttoptr i32 %v1_138d0 to i32*
  %v3_138d0 = load i32, i32* %v2_138d0, align 4
  %v2_138d4 = icmp eq i32 %v3_138d0, 0
  br i1 %v2_138d4, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_138d0
  %v2_138d8 = add i32 %v1_138d8, 8
  %v3_138d8 = inttoptr i32 %v2_138d8 to i32*
  %v4_138d8 = load i32, i32* %v3_138d8, align 4
  %v3_138dc = add i32 %v3_138d0, 8
  %v4_138dc = inttoptr i32 %v3_138dc to i32*
  store i32 %v4_138d8, i32* %v4_138dc, align 4
  %v0_138e0.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_138d0, %bb12
  %v0_138e0 = phi i32 [ %v1_138d8, %dec_label_pc_138d0 ], [ %v0_138e0.pre, %bb12 ]
  %v1_138e0 = add i32 %v0_138e0, 8
  %v2_138e0 = inttoptr i32 %v1_138e0 to i32*
  %v3_138e0 = load i32, i32* %v2_138e0, align 4
  %v1_138e4 = add i32 %v0_138e0, 4
  %v2_138e4 = inttoptr i32 %v1_138e4 to i32*
  %v3_138e4 = load i32, i32* %v2_138e4, align 4
  %v2_138e8 = icmp eq i32 %v3_138e0, 0
  br i1 %v2_138e8, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_138ec = add i32 %v3_138e0, 4
  %v4_138ec = inttoptr i32 %v3_138ec to i32*
  store i32 %v3_138e4, i32* %v4_138ec, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_138f0 = load i32, i32* %r8.global-to-local, align 4
  %v3_138f0 = inttoptr i32 %v2_138f0 to i32*
  store i32 %v3_138e4, i32* %v3_138f0, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_13900 = call i32 @function_1422c()
  %v0_13904 = load i32, i32* %r6.global-to-local, align 4
  %v1_13904 = load i32, i32* @r4, align 4
  %v0_1390c = load i32, i32* @r5, align 4
  %v2_13904 = sub i32 12, %v0_13904
  %v1_13908 = add i32 %v2_13904, %v1_13904
  %v2_1390c = sub i32 %v1_13908, %v0_1390c
  %v1_13910 = call i32 @function_149e0(i32 %v2_1390c)
  br label %dec_label_pc_138c8

; uselistorder directives
  uselistorder i32 %v0_138e0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_149e0, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_138d0, { 1, 0 }
  uselistorder label %dec_label_pc_138c8, { 2, 1, 0 }
}

define i32 @function_13934(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13934:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13934 = load i32, i32* @r4, align 4
  store i32 %v3_13934, i32* %stack_var_-24, align 4
  %v6_13934 = load i32, i32* @r5, align 4
  %v9_13934 = load i32, i32* @r6, align 4
  %v12_13934 = load i32, i32* @r7, align 4
  %v15_13934 = load i32, i32* @r8, align 4
  %v18_13934 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_13938 = icmp eq i32 %arg2, 0
  %v0_1393c = load i32, i32* @r0, align 4
  store i32 %v0_1393c, i32* @r7, align 4
  br i1 %v2_13938, label %dec_label_pc_13944, label %dec_label_pc_1394c

dec_label_pc_13944:                               ; preds = %dec_label_pc_13934
  %v0_13944 = call i32 @function_13844()
  %v0_13954.pre = load i32, i32* @r4, align 4
  %v2_13958.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_13954

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13934
  %v2_1394c = icmp eq i32 %v0_1393c, 0
  br i1 %v2_1394c, label %dec_label_pc_13954, label %dec_label_pc_13960

dec_label_pc_13954:                               ; preds = %dec_label_pc_1394c, %dec_label_pc_13944
  %v2_13958 = phi i32 [ %v3_13934, %dec_label_pc_1394c ], [ %v2_13958.pre, %dec_label_pc_13944 ]
  %v0_13954 = phi i32 [ %arg2, %dec_label_pc_1394c ], [ %v0_13954.pre, %dec_label_pc_13944 ]
  store i32 %v2_13958, i32* @r4, align 4
  store i32 %v6_13934, i32* @r5, align 4
  store i32 %v9_13934, i32* @r6, align 4
  store i32 %v12_13934, i32* @r7, align 4
  store i32 %v18_13934, i32* @lr, align 4
  %v1_1395c = call i32 @function_13698(i32 %v0_13954)
  %v0_13960.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13960

dec_label_pc_13960:                               ; preds = %dec_label_pc_1394c, %dec_label_pc_13954
  %v0_13978 = phi i32 [ %v0_1393c, %dec_label_pc_1394c ], [ %v1_1395c, %dec_label_pc_13954 ]
  %v0_13960 = phi i32 [ %arg2, %dec_label_pc_1394c ], [ %v0_13960.pre, %dec_label_pc_13954 ]
  %v1_13960 = add i32 %v0_13960, 7
  %v1_13964 = and i32 %v1_13960, -4
  store i32 %v1_13964, i32* @r5, align 4
  %v2_13968 = icmp ugt i32 %v1_13964, 10
  %v1_1396c = add i32 %v0_13978, -4
  %v2_1396c = inttoptr i32 %v1_1396c to i32*
  %v3_1396c = load i32, i32* %v2_1396c, align 4
  store i32 %v3_1396c, i32* @r6, align 4
  br i1 %v2_13968, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_13960
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_13960, %bb
  %v0_139f4 = phi i32 [ %v1_13964, %dec_label_pc_13960 ], [ 12, %bb ]
  store i32 %v1_1396c, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_139f4, %v3_1396c
  br i1 %tmp, label %dec_label_pc_13980, label %dec_label_pc_139f4

dec_label_pc_13980:                               ; preds = %bb14
  %v2_13974 = sub i32 %v0_139f4, %v3_1396c
  %v1_13990 = call i32 @function_1422c()
  %v0_13998 = load i32, i32* @r8, align 4
  %v1_13998 = load i32, i32* @r6, align 4
  %v2_13998 = add i32 %v1_13998, %v0_13998
  %v4_139a0 = call i32 @function_13ae0(i32* bitcast (i32** @global_var_1da4c.411 to i32*), i32 %v2_13998, i32 %v2_13974)
  store i32 %v4_139a0, i32* @r4, align 4
  store i32 80312, i32* @lr, align 4
  %v1_139b4 = call i32 @function_1422c()
  %v0_139b8 = load i32, i32* @r4, align 4
  %v2_139b8 = icmp eq i32 %v0_139b8, 0
  br i1 %v2_139b8, label %dec_label_pc_139c8, label %.thread

.thread:                                          ; preds = %dec_label_pc_13980
  %v1_139bc = load i32, i32* @r6, align 4
  %v3_139bc = add i32 %v1_139bc, %v0_139b8
  %v2_139c0 = load i32, i32* @r7, align 4
  %v3_139c0 = add i32 %v2_139c0, -4
  %v4_139c0 = inttoptr i32 %v3_139c0 to i32*
  store i32 %v3_139bc, i32* %v4_139c0, align 4
  br label %dec_label_pc_13a34

dec_label_pc_139c8:                               ; preds = %dec_label_pc_13980
  %v0_139c8 = load i32, i32* @r5, align 4
  %v1_139c8 = add i32 %v0_139c8, -4
  %v1_139cc = call i32 @function_13698(i32 %v1_139c8)
  store i32 %v1_139cc, i32* @r0, align 4
  store i32 %v1_139cc, i32* @r4, align 4
  %v2_139d0 = icmp eq i32 %v1_139cc, 0
  br i1 %v2_139d0, label %dec_label_pc_139ec, label %dec_label_pc_139d8

dec_label_pc_139d8:                               ; preds = %dec_label_pc_139c8
  %v0_139d8 = load i32, i32* @r6, align 4
  %v1_139d8 = add i32 %v0_139d8, -4
  store i32 %v1_139d8, i32* @r2, align 4
  %v0_139dc = load i32, i32* @r7, align 4
  store i32 %v0_139dc, i32* @r1, align 4
  %v3_139e0 = call i32 @function_13230(i32 %v1_139cc, i32 %v0_139dc, i32 %v1_139d8)
  %v0_139e4 = load i32, i32* @r7, align 4
  store i32 %v0_139e4, i32* @r0, align 4
  %v0_139e8 = call i32 @function_13844()
  %v0_139ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_139ec

dec_label_pc_139ec:                               ; preds = %dec_label_pc_139c8, %dec_label_pc_139d8
  %v0_139ec = phi i32 [ 0, %dec_label_pc_139c8 ], [ %v0_139ec.pre, %dec_label_pc_139d8 ]
  store i32 %v0_139ec, i32* @r7, align 4
  br label %dec_label_pc_13a34

dec_label_pc_139f4:                               ; preds = %bb14
  %v1_139f4 = add i32 %v0_139f4, 28
  %tmp15 = icmp ugt i32 %v1_139f4, %v3_1396c
  br i1 %tmp15, label %dec_label_pc_13a34, label %dec_label_pc_13a00

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139f4
  %v1_13a0c = call i32 @function_1422c()
  %v0_13a10 = load i32, i32* @r8, align 4
  %v1_13a10 = load i32, i32* @r5, align 4
  %v2_13a10 = add i32 %v1_13a10, %v0_13a10
  %v1_13a14 = load i32, i32* @r6, align 4
  %v2_13a14 = sub i32 %v1_13a14, %v1_13a10
  %v4_13a1c = call i32 @function_13ba0(i32* bitcast (i32** @global_var_1da4c.411 to i32*), i32 %v2_13a10, i32 %v2_13a14)
  store i32 80432, i32* @lr, align 4
  %v1_13a2c = call i32 @function_1422c()
  %v0_13a30 = load i32, i32* @r5, align 4
  %v1_13a30 = load i32, i32* @r7, align 4
  %v2_13a30 = add i32 %v1_13a30, -4
  %v3_13a30 = inttoptr i32 %v2_13a30 to i32*
  store i32 %v0_13a30, i32* %v3_13a30, align 4
  br label %dec_label_pc_13a34

dec_label_pc_13a34:                               ; preds = %.thread, %dec_label_pc_139f4, %dec_label_pc_139ec, %dec_label_pc_13a00
  %v0_13a34 = load i32, i32* @r7, align 4
  %v2_13a38 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13a38, i32* @r4, align 4
  store i32 %v6_13934, i32* @r5, align 4
  store i32 %v9_13934, i32* @r6, align 4
  store i32 %v12_13934, i32* @r7, align 4
  store i32 %v15_13934, i32* @r8, align 4
  ret i32 %v0_13a34

; uselistorder directives
  uselistorder i32 %v1_13a10, { 1, 0 }
  uselistorder i32 %v0_139f4, { 1, 2, 0 }
  uselistorder i32 %v3_1396c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32** @global_var_1da4c.411, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1da4c.411 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32)* @function_13698, { 1, 38, 0, 4, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 ()* @function_13844, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32* @r8, { 92, 93, 94, 95, 97, 96, 3, 4, 5, 6, 113, 114, 115, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 1, 91, 116, 2, 117, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32* @r7, { 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 8, 9, 15, 16, 17, 2, 6, 24, 10, 11, 12, 13, 14, 4, 18, 3, 19, 20, 21, 22, 23, 25, 1, 42, 43, 44, 45, 46, 47, 48, 49, 226, 227, 228, 144, 145, 146, 147, 50, 0, 51, 52, 53, 54, 55, 56, 5, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 231, 232, 233, 234, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 135, 136, 137, 138, 139, 140, 141, 142, 143 }
  uselistorder label %dec_label_pc_13a34, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_139ec, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_13960, { 1, 0 }
}

define i32 @function_13a4c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a4c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_13a4c = inttoptr i32 %arg2 to i32*
  %v2_13a4c = load i32, i32* %v1_13a4c, align 4
  %v3_13a50 = load i32, i32* @r4, align 4
  store i32 %v3_13a50, i32* %stack_var_-8, align 4
  %v1_13a54 = add i32 %v2_13a4c, 3
  %v1_13a58 = and i32 %v1_13a54, -4
  store i32 %v1_13a58, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_13a60 = icmp ugt i32 %v1_13a58, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_13a68 = load i32, i32* %arg1, align 4
  store i32 %v2_13a68, i32* %r0.global-to-local, align 4
  br i1 %v2_13a60, label %dec_label_pc_13ad4.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_13a4c
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13ad4.preheader

dec_label_pc_13ad4.preheader:                     ; preds = %dec_label_pc_13a4c, %bb
  %v1_13a88 = phi i32 [ %v1_13a58, %dec_label_pc_13a4c ], [ 12, %bb ]
  %v2_13ad49 = icmp eq i32 %v2_13a68, 0
  br i1 %v2_13ad49, label %dec_label_pc_13adc, label %dec_label_pc_13a74

dec_label_pc_13a74:                               ; preds = %dec_label_pc_13ad4.preheader, %dec_label_pc_13ad0
  %v2_13a8c = phi i32 [ %v3_13ad0, %dec_label_pc_13ad0 ], [ %v2_13a68, %dec_label_pc_13ad4.preheader ]
  %v1_13a74 = inttoptr i32 %v2_13a8c to i32*
  %v2_13a74 = load i32, i32* %v1_13a74, align 4
  store i32 %v2_13a74, i32* %ip.global-to-local, align 4
  %v3_13a78 = icmp ult i32 %v2_13a74, %v1_13a88
  br i1 %v3_13a78, label %dec_label_pc_13ad0, label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a74
  %v1_13a80 = add i32 %v1_13a88, 44
  %v3_13a84 = icmp ult i32 %v2_13a74, %v1_13a80
  br i1 %v3_13a84, label %dec_label_pc_13a94, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_13a80
  %v2_13a78.le = sub i32 %v2_13a74, %v1_13a88
  store i32 %v2_13a78.le, i32* %v1_13a74, align 4
  %v0_13ac0.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_13ac8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_13a94:                               ; preds = %dec_label_pc_13a80
  %v1_13a94 = add i32 %v2_13a8c, 4
  %v2_13a94 = inttoptr i32 %v1_13a94 to i32*
  %v3_13a94 = load i32, i32* %v2_13a94, align 4
  store i32 %v3_13a94, i32* %r2.global-to-local, align 4
  %v2_13a98 = icmp eq i32 %v3_13a94, 0
  br i1 %v2_13a98, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_13a94
  %v2_13a9c = add i32 %v2_13a8c, 8
  %v3_13a9c = inttoptr i32 %v2_13a9c to i32*
  %v4_13a9c = load i32, i32* %v3_13a9c, align 4
  %v3_13aa0 = add i32 %v3_13a94, 8
  %v4_13aa0 = inttoptr i32 %v3_13aa0 to i32*
  store i32 %v4_13a9c, i32* %v4_13aa0, align 4
  %v0_13aa4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13a94, %bb27
  %v0_13aa4 = phi i32 [ %v2_13a8c, %dec_label_pc_13a94 ], [ %v0_13aa4.pre, %bb27 ]
  %v1_13aa4 = add i32 %v0_13aa4, 8
  %v2_13aa4 = inttoptr i32 %v1_13aa4 to i32*
  %v3_13aa4 = load i32, i32* %v2_13aa4, align 4
  %v1_13aa8 = add i32 %v0_13aa4, 4
  %v2_13aa8 = inttoptr i32 %v1_13aa8 to i32*
  %v3_13aa8 = load i32, i32* %v2_13aa8, align 4
  %v2_13aac = icmp eq i32 %v3_13aa4, 0
  br i1 %v2_13aac, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_13ab0 = add i32 %v3_13aa4, 4
  %v4_13ab0 = inttoptr i32 %v3_13ab0 to i32*
  store i32 %v3_13aa8, i32* %v4_13ab0, align 4
  %v1_13ab8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_13ab8, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_13ab4 = load i32, i32* %r1.global-to-local, align 4
  %v3_13ab4 = inttoptr i32 %v2_13ab4 to i32*
  store i32 %v3_13aa8, i32* %v3_13ab4, align 4
  %v1_13abc.pre = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_13abc.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_13ac8 = phi i32 [ %v0_13ac8.pre, %.thread._crit_edge ], [ %v1_13ab8, %bb28 ], [ %v1_13abc.pre, %.thread5 ]
  %v0_13ac0 = phi i32 [ %v0_13ac0.pre, %.thread._crit_edge ], [ %v1_13ab8, %bb28 ], [ %v1_13abc.pre, %.thread5 ]
  %v1_13ac0 = load i32, i32* %r0.global-to-local, align 4
  %v2_13ac0 = sub i32 %v1_13ac0, %v0_13ac0
  %v1_13ac4 = add i32 %v2_13ac0, 12
  store i32 %v1_13ac4, i32* %r0.global-to-local, align 4
  %v1_13ac8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13ac8 = inttoptr i32 %v1_13ac8 to i32*
  store i32 %v0_13ac8, i32* %v2_13ac8, align 4
  %v2_13acc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13acc, i32* %r4.global-to-local, align 4
  ret i32 %v1_13ac4

dec_label_pc_13ad0:                               ; preds = %dec_label_pc_13a74
  %v1_13ad0 = add i32 %v2_13a8c, 4
  %v2_13ad0 = inttoptr i32 %v1_13ad0 to i32*
  %v3_13ad0 = load i32, i32* %v2_13ad0, align 4
  store i32 %v3_13ad0, i32* %r0.global-to-local, align 4
  %v2_13ad4 = icmp eq i32 %v3_13ad0, 0
  br i1 %v2_13ad4, label %dec_label_pc_13ad4.dec_label_pc_13adc_crit_edge, label %dec_label_pc_13a74

dec_label_pc_13ad4.dec_label_pc_13adc_crit_edge:  ; preds = %dec_label_pc_13ad0
  br label %dec_label_pc_13adc

dec_label_pc_13adc:                               ; preds = %dec_label_pc_13ad4.dec_label_pc_13adc_crit_edge, %dec_label_pc_13ad4.preheader
  store i32 %v3_13a50, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13ad0, { 1, 2, 0 }
  uselistorder i32 %v0_13aa4, { 1, 0 }
  uselistorder i32 %v2_13a74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13a8c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_13a88, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13a74, { 1, 0 }
  uselistorder label %dec_label_pc_13ad4.preheader, { 1, 0 }
}

define i32 @function_13ae0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13ae0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13ae4 = load i32, i32* %arg1, align 4
  store i32 %v2_13ae4, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_13b5c6 = icmp eq i32 %v2_13ae4, 0
  br i1 %v2_13b5c6, label %dec_label_pc_13b64, label %dec_label_pc_13af0

dec_label_pc_13af0:                               ; preds = %dec_label_pc_13ae0, %dec_label_pc_13b58
  %v0_13b30 = phi i32 [ %v3_13b58, %dec_label_pc_13b58 ], [ %v2_13ae4, %dec_label_pc_13ae0 ]
  %v1_13af0 = inttoptr i32 %v0_13b30 to i32*
  %v2_13af0 = load i32, i32* %v1_13af0, align 4
  store i32 %v2_13af0, i32* %r0.global-to-local, align 4
  %v2_13af4 = sub i32 %v0_13b30, %v2_13af0
  %v1_13af8 = add i32 %v2_13af4, 12
  %v3_13afc = icmp uge i32 %v1_13af8, %arg2
  %v9_13afc = icmp eq i32 %v1_13af8, %arg2
  %v2_13b00 = xor i1 %v9_13afc, true
  %v3_13b00 = and i1 %v3_13afc, %v2_13b00
  br i1 %v3_13b00, label %dec_label_pc_13b58, label %dec_label_pc_13b04

dec_label_pc_13b04:                               ; preds = %dec_label_pc_13af0
  br i1 %v9_13afc, label %dec_label_pc_13b08, label %dec_label_pc_13b64

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13b04
  %v1_13b08 = add i32 %arg3, 3
  %v1_13b0c = and i32 %v1_13b08, -4
  store i32 %v1_13b0c, i32* %r2.global-to-local, align 4
  %v2_13b10 = sub i32 %v2_13af0, %v1_13b0c
  %v3_13b10 = icmp ult i32 %v2_13af0, %v1_13b0c
  br i1 %v3_13b10, label %dec_label_pc_13b64, label %dec_label_pc_13b18

dec_label_pc_13b18:                               ; preds = %dec_label_pc_13b08
  %v1_13b18 = add i32 %v1_13b0c, 44
  %v3_13b1c = icmp ult i32 %v2_13af0, %v1_13b18
  br i1 %v3_13b1c, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_13b18
  store i32 %v2_13b10, i32* %v1_13af0, align 4
  %v1_13b28 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_13b28, i32* %r0.global-to-local, align 4
  ret i32 %v1_13b28

.thread2:                                         ; preds = %dec_label_pc_13b18
  %v1_13b30 = add i32 %v0_13b30, 4
  %v2_13b30 = inttoptr i32 %v1_13b30 to i32*
  %v3_13b30 = load i32, i32* %v2_13b30, align 4
  store i32 %v3_13b30, i32* %r2.global-to-local, align 4
  %v2_13b34 = icmp eq i32 %v3_13b30, 0
  br i1 %v2_13b34, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_13b38 = add i32 %v0_13b30, 8
  %v3_13b38 = inttoptr i32 %v2_13b38 to i32*
  %v4_13b38 = load i32, i32* %v3_13b38, align 4
  %v3_13b3c = add i32 %v3_13b30, 8
  %v4_13b3c = inttoptr i32 %v3_13b3c to i32*
  store i32 %v4_13b38, i32* %v4_13b3c, align 4
  %v0_13b40.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_13b40 = phi i32 [ %v0_13b30, %.thread2 ], [ %v0_13b40.pre, %bb17 ]
  %v1_13b40 = add i32 %v0_13b40, 8
  %v2_13b40 = inttoptr i32 %v1_13b40 to i32*
  %v3_13b40 = load i32, i32* %v2_13b40, align 4
  store i32 %v3_13b40, i32* %r2.global-to-local, align 4
  %v1_13b44 = add i32 %v0_13b40, 4
  %v2_13b44 = inttoptr i32 %v1_13b44 to i32*
  %v3_13b44 = load i32, i32* %v2_13b44, align 4
  %v2_13b48 = icmp eq i32 %v3_13b40, 0
  br i1 %v2_13b48, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_13b4c = add i32 %v3_13b40, 4
  %v4_13b4c = inttoptr i32 %v3_13b4c to i32*
  store i32 %v3_13b44, i32* %v4_13b4c, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_13b50 = load i32, i32* %lr.global-to-local, align 4
  %v3_13b50 = inttoptr i32 %v2_13b50 to i32*
  store i32 %v3_13b44, i32* %v3_13b50, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_13b54 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_13b54

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13af0
  %v1_13b58 = add i32 %v0_13b30, 4
  %v2_13b58 = inttoptr i32 %v1_13b58 to i32*
  %v3_13b58 = load i32, i32* %v2_13b58, align 4
  store i32 %v3_13b58, i32* %ip.global-to-local, align 4
  %v2_13b5c = icmp eq i32 %v3_13b58, 0
  br i1 %v2_13b5c, label %dec_label_pc_13b5c.dec_label_pc_13b64.loopexit_crit_edge, label %dec_label_pc_13af0

dec_label_pc_13b5c.dec_label_pc_13b64.loopexit_crit_edge: ; preds = %dec_label_pc_13b58
  br label %dec_label_pc_13b64

dec_label_pc_13b64:                               ; preds = %dec_label_pc_13b08, %dec_label_pc_13ae0, %dec_label_pc_13b5c.dec_label_pc_13b64.loopexit_crit_edge, %dec_label_pc_13b04
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_13b58, { 1, 2, 0 }
  uselistorder i32 %v0_13b40, { 1, 0 }
  uselistorder i32 %v1_13b0c, { 0, 2, 1, 3 }
  uselistorder i1 %v9_13afc, { 1, 0 }
  uselistorder i32 %v2_13af0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_13b30, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_13b64, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13af0, { 1, 0 }
}

define i32 @function_13b6c() local_unnamed_addr {
dec_label_pc_13b6c:
  %v0_13b6c = load i32, i32* @r2, align 4
  %v2_13b6c = icmp eq i32 %v0_13b6c, 0
  %v0_13b70 = load i32, i32* @r3, align 4
  %v1_13b70 = load i32, i32* @r1, align 4
  %v2_13b70 = add i32 %v1_13b70, 4
  %v3_13b70 = inttoptr i32 %v2_13b70 to i32*
  store i32 %v0_13b70, i32* %v3_13b70, align 4
  %v0_13b74 = load i32, i32* @r2, align 4
  %v1_13b74 = load i32, i32* @r1, align 4
  %v2_13b74 = add i32 %v1_13b74, 8
  %v3_13b74 = inttoptr i32 %v2_13b74 to i32*
  store i32 %v0_13b74, i32* %v3_13b74, align 4
  %v1_13b7c = load i32, i32* @r1, align 4
  br i1 %v2_13b6c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13b6c
  %v2_13b78 = load i32, i32* @r2, align 4
  %v3_13b78 = add i32 %v2_13b78, 4
  %v4_13b78 = inttoptr i32 %v3_13b78 to i32*
  store i32 %v1_13b7c, i32* %v4_13b78, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_13b6c
  %v2_13b7c = load i32, i32* @r0, align 4
  %v3_13b7c = inttoptr i32 %v2_13b7c to i32*
  store i32 %v1_13b7c, i32* %v3_13b7c, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_13b80 = load i32, i32* @r3, align 4
  %v2_13b80 = icmp eq i32 %v0_13b80, 0
  br i1 %v2_13b80, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_13b84 = load i32, i32* @r1, align 4
  %v3_13b84 = add i32 %v0_13b80, 8
  %v4_13b84 = inttoptr i32 %v3_13b84 to i32*
  store i32 %v1_13b84, i32* %v4_13b84, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_13b88 = load i32, i32* @r0, align 4
  ret i32 %v1_13b88

; uselistorder directives
  uselistorder i32 %v1_13b7c, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_13b8c() local_unnamed_addr {
dec_label_pc_13b8c:
  %v0_13b8c = load i32, i32* @r2, align 4
  %v2_13b8c = icmp eq i32 %v0_13b8c, 0
  %v1_13b90 = load i32, i32* @r1, align 4
  br i1 %v2_13b8c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13b8c
  %v2_13b90 = load i32, i32* @r0, align 4
  %v3_13b90 = inttoptr i32 %v2_13b90 to i32*
  store i32 %v1_13b90, i32* %v3_13b90, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_13b8c
  %v3_13b94 = add i32 %v0_13b8c, 4
  %v4_13b94 = inttoptr i32 %v3_13b94 to i32*
  store i32 %v1_13b90, i32* %v4_13b94, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_13b98 = load i32, i32* @r2, align 4
  %v1_13b98 = load i32, i32* @r1, align 4
  %v2_13b98 = add i32 %v1_13b98, 8
  %v3_13b98 = inttoptr i32 %v2_13b98 to i32*
  store i32 %v0_13b98, i32* %v3_13b98, align 4
  %v1_13b9c = load i32, i32* @r0, align 4
  ret i32 %v1_13b9c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_13ba0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13ba0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13ba0 = load i32, i32* @r4, align 4
  store i32 %v3_13ba0, i32* %stack_var_-20, align 4
  %v2_13ba4 = load i32, i32* %arg1, align 4
  store i32 %v2_13ba4, i32* %r4.global-to-local, align 4
  %v2_13ba8 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_13bc42 = icmp eq i32 %v2_13ba4, 0
  br i1 %v2_13bc42, label %dec_label_pc_13c74, label %dec_label_pc_13bb4

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13ba0, %dec_label_pc_13bbc
  %v0_13c04 = phi i32 [ %v0_13c0c, %dec_label_pc_13bbc ], [ 0, %dec_label_pc_13ba0 ]
  %v0_13c0c = phi i32 [ %v3_13bc0, %dec_label_pc_13bbc ], [ %v2_13ba4, %dec_label_pc_13ba0 ]
  %v1_13bc85.in = phi i32 [ %v3_13bc0, %dec_label_pc_13bbc ], [ %v2_13ba4, %dec_label_pc_13ba0 ]
  %v1_13bc85 = add i32 %v1_13bc85.in, 12
  %v3_13bb4 = icmp ult i32 %v1_13bc85, %arg2
  br i1 %v3_13bb4, label %dec_label_pc_13bbc, label %dec_label_pc_13bd4

dec_label_pc_13bbc:                               ; preds = %dec_label_pc_13bb4
  store i32 %v0_13c0c, i32* %r6.global-to-local, align 4
  %v1_13bc0 = add i32 %v0_13c0c, 4
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i32*
  %v3_13bc0 = load i32, i32* %v2_13bc0, align 4
  store i32 %v3_13bc0, i32* %r4.global-to-local, align 4
  %v2_13bc4 = icmp eq i32 %v3_13bc0, 0
  br i1 %v2_13bc4, label %dec_label_pc_13bc4.dec_label_pc_13c74.loopexit_crit_edge, label %dec_label_pc_13bb4

dec_label_pc_13bd4:                               ; preds = %dec_label_pc_13bb4
  %v1_13bd4 = inttoptr i32 %v0_13c0c to i32*
  %v2_13bd4 = load i32, i32* %v1_13bd4, align 4
  %v2_13bd8 = sub i32 %v0_13c0c, %v2_13bd4
  %v1_13bdc = add i32 %v2_13bd8, 12
  %v3_13be0 = icmp uge i32 %v1_13bdc, %v2_13ba8
  %v9_13be0 = icmp eq i32 %v1_13bdc, %v2_13ba8
  %v2_13be4 = xor i1 %v9_13be0, true
  %v3_13be4 = and i1 %v3_13be0, %v2_13be4
  br i1 %v3_13be4, label %dec_label_pc_13c74, label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %dec_label_pc_13bd4
  %v2_13be8 = add i32 %v2_13bd4, %arg3
  store i32 %v2_13be8, i32* %r7.global-to-local, align 4
  br i1 %v9_13be0, label %dec_label_pc_13bf0, label %dec_label_pc_13c1c

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13be8
  %v2_13bf0 = icmp eq i32 %v0_13c04, 0
  br i1 %v2_13bf0, label %dec_label_pc_13c68, label %dec_label_pc_13bf8

dec_label_pc_13bf8:                               ; preds = %dec_label_pc_13bf0
  %v1_13bf8 = add i32 %v0_13c04, 12
  %v9_13bfc = icmp eq i32 %v1_13bf8, %arg2
  br i1 %v9_13bfc, label %dec_label_pc_13c04, label %dec_label_pc_13c68

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13bf8
  %v1_13c04 = inttoptr i32 %v0_13c04 to i32*
  %v2_13c04 = load i32, i32* %v1_13c04, align 4
  %v1_13c08 = add i32 %v0_13c04, 8
  %v2_13c08 = inttoptr i32 %v1_13c08 to i32*
  %v3_13c08 = load i32, i32* %v2_13c08, align 4
  store i32 %v3_13c08, i32* @r2, align 4
  store i32 %v0_13c0c, i32* @r1, align 4
  %v2_13c10 = add i32 %v2_13c04, %v2_13be8
  store i32 %v2_13c10, i32* %r7.global-to-local, align 4
  %v0_13c14 = call i32 @function_13b8c()
  br label %dec_label_pc_13c68

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_13be8
  %v1_13c1c = add i32 %v0_13c0c, 4
  %v2_13c1c = inttoptr i32 %v1_13c1c to i32*
  %v3_13c1c = load i32, i32* %v2_13c1c, align 4
  store i32 %v3_13c1c, i32* %r5.global-to-local, align 4
  %v2_13c20 = icmp eq i32 %v3_13c1c, 0
  br i1 %v2_13c20, label %dec_label_pc_13c54, label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c1c
  %v1_13c28 = inttoptr i32 %v3_13c1c to i32*
  %v2_13c28 = load i32, i32* %v1_13c28, align 4
  %v2_13c2c = sub i32 %v3_13c1c, %v2_13c28
  %v1_13c30 = add i32 %v2_13c2c, 12
  %v9_13c34 = icmp eq i32 %v2_13ba8, %v1_13c30
  br i1 %v9_13c34, label %dec_label_pc_13c3c, label %dec_label_pc_13c54

dec_label_pc_13c3c:                               ; preds = %dec_label_pc_13c28
  store i32 %v0_13c04, i32* @r2, align 4
  store i32 %v3_13c1c, i32* @r1, align 4
  %v2_13c44 = add i32 %v2_13c28, %v2_13be8
  store i32 %v2_13c44, i32* %r7.global-to-local, align 4
  %v0_13c48 = call i32 @function_13b8c()
  %v0_13c4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c4c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c68

dec_label_pc_13c54:                               ; preds = %dec_label_pc_13c28, %dec_label_pc_13c1c
  %v2_13c54 = add i32 %v0_13c0c, %arg3
  store i32 %v2_13c54, i32* %r4.global-to-local, align 4
  store i32 %v3_13c1c, i32* @r3, align 4
  store i32 %v0_13c04, i32* @r2, align 4
  store i32 %v2_13c54, i32* @r1, align 4
  %v0_13c64 = call i32 @function_13b6c()
  br label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13bf8, %dec_label_pc_13bf0, %dec_label_pc_13c3c, %dec_label_pc_13c04, %dec_label_pc_13c54
  %v0_13c68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13c68, i32* %r5.global-to-local, align 4
  %v0_13c6c = load i32, i32* %r7.global-to-local, align 4
  %v2_13c6c = inttoptr i32 %v0_13c68 to i32*
  store i32 %v0_13c6c, i32* %v2_13c6c, align 4
  br label %dec_label_pc_13c8c

dec_label_pc_13bc4.dec_label_pc_13c74.loopexit_crit_edge: ; preds = %dec_label_pc_13bbc
  br label %dec_label_pc_13c74

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13ba0, %dec_label_pc_13bc4.dec_label_pc_13c74.loopexit_crit_edge, %dec_label_pc_13bd4
  %v1_13c74 = add i32 %v2_13ba8, -12
  store i32 %v1_13c74, i32* %r5.global-to-local, align 4
  %v3_13c78 = inttoptr i32 %v1_13c74 to i32*
  store i32 %arg3, i32* %v3_13c78, align 4
  %v0_13c7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13c7c, i32* @r3, align 4
  %v0_13c80 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13c80, i32* @r2, align 4
  %v0_13c84 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c84, i32* @r1, align 4
  %v0_13c88 = call i32 @function_13b6c()
  br label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c68, %dec_label_pc_13c74
  %v0_13c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_13c90 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13c90, i32* @r4, align 4
  ret i32 %v0_13c8c

; uselistorder directives
  uselistorder i32 %v3_13c1c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_13be0, { 1, 0 }
  uselistorder i32 %v3_13bc0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13c0c, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_13c04, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_13b6c, { 1, 0 }
  uselistorder i32* @r3, { 5, 8, 6, 7, 0, 9, 10, 11, 1, 2, 3, 12, 4 }
  uselistorder i32 ()* @function_13b8c, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13c8c, { 1, 0 }
  uselistorder label %dec_label_pc_13c74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13c68, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_13bb4, { 1, 0 }
}

define i32 @function_13c94() local_unnamed_addr {
dec_label_pc_13cb0.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_13c94 = ptrtoint i32* %stack_var_-268 to i32
  %v1_13ca4 = call i32 @function_1422c()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_13cb0 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13cb0.lr.ph, %dec_label_pc_13cb0
  %v1_13cb4 = phi i32 [ 31, %dec_label_pc_13cb0.lr.ph ], [ %v1_13cc0, %dec_label_pc_13cb0 ]
  %v4_13cb4 = mul i32 %v1_13cb4, 4
  %v5_13cb4 = add i32 %v4_13cb4, %v2_13cb0
  %v2_13cbc = add i32 %v5_13cb4, -128
  %v3_13cbc = inttoptr i32 %v2_13cbc to i32*
  store i32 0, i32* %v3_13cbc, align 4
  %v0_13cc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cc0 = add i32 %v0_13cc0, -1
  store i32 %v1_13cc0, i32* %r1.global-to-local, align 4
  %v6_13cc0 = icmp slt i32 %v1_13cc0, 0
  br i1 %v6_13cc0, label %dec_label_pc_13cc8, label %dec_label_pc_13cb0

dec_label_pc_13cc8:                               ; preds = %dec_label_pc_13cb0
  %v2_13cc8 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_13cc8, i32* @r4, align 4
  store i32 %v2_13cc8, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_13cd4 = call i32 @function_13650()
  %v2_13cd8 = icmp eq i32 %v0_13cd4, 0
  br i1 %v2_13cd8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13cc8
  store i32 %v2_13cc8, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13cc8, %bb
  store i32 81132, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13cd8, i32 ptrtoint (i32* @global_var_12e98.433 to i32))
  %v2_13cf0 = load i32, i32* @global_var_1dc20.435, align 4
  %v2_13cf4 = icmp eq i32 %v2_13cf0, 0
  br i1 %v2_13cf4, label %dec_label_pc_13cfc, label %dec_label_pc_13d2c

dec_label_pc_13cfc:                               ; preds = %.thread1
  store i32 1, i32* @global_var_1dc20.435, align 4
  br label %dec_label_pc_13d04

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13d7c, %dec_label_pc_13cfc
  %v1_13d10 = call i32 @function_1422c()
  %v1_13d18 = call i32 @function_153bc(i32 6)
  store i32 81196, i32* @lr, align 4
  %v1_13d28 = call i32 @function_1422c()
  %v2_13d30.pre = load i32, i32* @global_var_1dc20.435, align 4
  br label %dec_label_pc_13d2c

dec_label_pc_13d2c:                               ; preds = %.thread1, %dec_label_pc_13d04
  %v0_13da0 = phi i32 [ %v2_13cf0, %.thread1 ], [ %v2_13d30.pre, %dec_label_pc_13d04 ]
  store i32 ptrtoint (i32* @global_var_1dc20.435 to i32), i32* %ip.global-to-local, align 4
  %v7_13d34 = icmp eq i32 %v0_13da0, 1
  br i1 %v7_13d34, label %dec_label_pc_13d64.lr.ph, label %dec_label_pc_13d98

dec_label_pc_13d64.lr.ph:                         ; preds = %dec_label_pc_13d2c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_1dc20.435, align 4
  %v2_13d50 = bitcast i32* %stack_var_-268 to i8*
  %v3_13d50 = call i32 @function_13250(i8* %v2_13d50, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d64.lr.ph, %dec_label_pc_13d64
  %v1_13d68 = phi i32 [ 31, %dec_label_pc_13d64.lr.ph ], [ %v1_13d74, %dec_label_pc_13d64 ]
  %v4_13d68 = mul i32 %v1_13d68, 4
  %v5_13d68 = add i32 %v4_13d68, %v2_13cb0
  %v2_13d70 = add i32 %v5_13d68, -264
  %v3_13d70 = inttoptr i32 %v2_13d70 to i32*
  store i32 -1, i32* %v3_13d70, align 4
  %v0_13d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d74 = add i32 %v0_13d74, -1
  store i32 %v1_13d74, i32* %r1.global-to-local, align 4
  %v6_13d74 = icmp slt i32 %v1_13d74, 0
  br i1 %v6_13d74, label %dec_label_pc_13d7c, label %dec_label_pc_13d64

dec_label_pc_13d7c:                               ; preds = %dec_label_pc_13d64
  store i32 %v2_13c94, i32* %r1.global-to-local, align 4
  %v4_13d90 = call i32 @function_14518(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_13d04

dec_label_pc_13d98:                               ; preds = %dec_label_pc_13d2c
  %v7_13d98 = icmp eq i32 %v0_13da0, 2
  br i1 %v7_13d98, label %dec_label_pc_13da0, label %dec_label_pc_13dac

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d98
  store i32 3, i32* @global_var_1dc20.435, align 4
  %v0_13da8 = call i32 @function_13c94()
  %v2_13dac.pre = load i32, i32* @global_var_1dc20.435, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13d98, %dec_label_pc_13da0
  %v1_13db4 = phi i32 [ %v0_13da0, %dec_label_pc_13d98 ], [ %v2_13dac.pre, %dec_label_pc_13da0 ]
  %v7_13db0 = icmp eq i32 %v1_13db4, 3
  br i1 %v7_13db0, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_13dac
  %v2_13dbc = load i32, i32* %ip.global-to-local, align 4
  %v3_13dbc = inttoptr i32 %v2_13dbc to i32*
  store i32 4, i32* %v3_13dbc, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13dac, %bb27
  call void @__pseudo_cond_branch(i1 %v7_13db0, i32 ptrtoint (i32* @global_var_14630.437 to i32))
  br label %dec_label_pc_13dc4

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13dc4, %.thread3
  %v0_13dc4 = call i32 @function_13c94()
  br label %dec_label_pc_13dc4

; uselistorder directives
  uselistorder i32 %v1_13d74, { 2, 1, 0 }
  uselistorder i32 %v1_13cc0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 8, 7, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_1dc20.435, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13dac, { 1, 0 }
  uselistorder label %dec_label_pc_13d64, { 1, 0 }
  uselistorder label %dec_label_pc_13d2c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13cb0, { 1, 0 }
}

define i32 @function_13ddc(i8* %arg1) local_unnamed_addr {
dec_label_pc_13ddc:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13df0 = load i32, i32* @r4, align 4
  store i32 %v3_13df0, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_13e14.pre = load i32, i32* bitcast (i32** @global_var_1db8c.440 to i32*), align 4
  br label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13e0c, %dec_label_pc_13ddc
  %v0_13e44 = phi i32 [ %tmp, %dec_label_pc_13ddc ], [ %v1_13e08, %dec_label_pc_13e0c ]
  store i32 %v0_13e44, i32* %r4.global-to-local, align 4
  %v1_13e10 = inttoptr i32 %v0_13e44 to i8*
  %v2_13e10 = load i8, i8* %v1_13e10, align 1
  %v3_13e10 = zext i8 %v2_13e10 to i32
  %v3_13e18 = mul nuw nsw i32 %v3_13e10, 2
  %v4_13e18 = add i32 %v3_13e18, %v2_13e14.pre
  %v5_13e18 = inttoptr i32 %v4_13e18 to i8*
  %v6_13e18 = load i8, i8* %v5_13e18, align 1
  %v1_13e1c = and i8 %v6_13e18, 32
  %v2_13e1c = icmp eq i8 %v1_13e1c, 0
  %v1_13e08 = add i32 %v0_13e44, 1
  br i1 %v2_13e1c, label %dec_label_pc_13e24, label %dec_label_pc_13e0c

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13e0c
  %v7_13e24 = icmp eq i8 %v2_13e10, 43
  br i1 %v7_13e24, label %dec_label_pc_13e44, label %dec_label_pc_13e2c

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e24
  %v7_13e2c = icmp eq i8 %v2_13e10, 45
  br i1 %v7_13e2c, label %dec_label_pc_13e44, label %bb

bb:                                               ; preds = %dec_label_pc_13e2c
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e24, %dec_label_pc_13e2c
  %storemerge30 = phi i32 [ 1, %dec_label_pc_13e2c ], [ 0, %dec_label_pc_13e24 ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_13e08, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13ea0:                               ; preds = %bb, %dec_label_pc_13e44
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_13ea8 = call i32 @function_129a4(i32 -1, i32 10)
  %v0_13eac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13eac, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_13eb8 = urem i32 %v2_13ea8, 256
  store i32 %v1_13eb8, i32* %sl.global-to-local, align 4
  %v0_13ebc = call i32 @function_12894()
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_13ebc, i32* %r8.global-to-local, align 4
  %v0_13ed0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ed0

dec_label_pc_13ecc:                               ; preds = %bb48, %dec_label_pc_13f2c
  %v0_13ecc = phi i32 [ %v1_13efc, %bb48 ], [ %v0_13ecc.pre, %dec_label_pc_13f2c ]
  store i32 %v0_13ecc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13ed0

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13ea0, %dec_label_pc_13ecc
  %v0_13efc = phi i32 [ %v0_13ed0.pre, %dec_label_pc_13ea0 ], [ %v0_13ecc, %dec_label_pc_13ecc ]
  %v1_13ed0 = inttoptr i32 %v0_13efc to i8*
  %v2_13ed0 = load i8, i8* %v1_13ed0, align 1
  %v3_13ed0 = zext i8 %v2_13ed0 to i32
  %v1_13ed4 = add nsw i32 %v3_13ed0, -48
  %v1_13ed8 = urem i32 %v1_13ed4, 256
  %v1_13ee0 = or i32 %v3_13ed0, 32
  %tmp56 = icmp ult i32 %v1_13ed8, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_13ee8

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ed0
  %tmp57 = icmp ugt i32 %v1_13ee0, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_13ee8
  %v1_13eec = add nsw i32 %v1_13ee0, -87
  %v5_13ef4 = urem i32 %v1_13eec, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_13ed0, %dec_label_pc_13ee8, %bb42
  %v3_13f24 = phi i32 [ %v1_13ed8, %dec_label_pc_13ed0 ], [ 40, %dec_label_pc_13ee8 ], [ %v5_13ef4, %bb42 ]
  %v1_13ef8 = load i32, i32* %r5.global-to-local, align 4
  %v1_13efc = add i32 %v0_13efc, 1
  store i32 %v1_13efc, i32* %r4.global-to-local, align 4
  %v6_13f00 = icmp slt i32 %v3_13f24, %v1_13ef8
  br i1 %v6_13f00, label %dec_label_pc_13f04, label %dec_label_pc_13f44

dec_label_pc_13f04:                               ; preds = %bb43
  %v0_13f04 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f04 = load i32, i32* %r8.global-to-local, align 4
  %v9_13f04 = icmp eq i32 %v0_13f04, %v1_13f04
  br i1 %v9_13f04, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_13f04
  br label %dec_label_pc_13f14

bb44:                                             ; preds = %dec_label_pc_13f04
  %v3_13f04 = icmp ult i32 %v0_13f04, %v1_13f04
  br i1 %v3_13f04, label %dec_label_pc_13f14, label %dec_label_pc_13f2c

dec_label_pc_13f14:                               ; preds = %bb44, %.thread
  %v4_13f1c1727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_13f14 = load i32, i32* %sl.global-to-local, align 4
  %v3_13f14 = icmp uge i32 %v3_13f24, %v1_13f14
  %v9_13f14 = icmp eq i32 %v3_13f24, %v1_13f14
  %v2_13f18 = xor i1 %v3_13f14, true
  %v3_13f18 = or i1 %v9_13f14, %v2_13f18
  br i1 %v3_13f18, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13f14
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13f14, %bb45
  %v4_13f1c = phi i32 [ %v4_13f1c1727, %dec_label_pc_13f14 ], [ 0, %bb45 ]
  %v2_13f1c = xor i1 %v9_13f14, true
  %v3_13f1c = and i1 %v3_13f14, %v2_13f1c
  br i1 %v3_13f1c, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_13f1c = urem i32 %v4_13f1c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_13f20 = phi i32 [ %v5_13f1c, %bb47 ], [ %v4_13f1c, %bb46 ]
  %v2_13f20 = icmp eq i32 %v0_13f20, 0
  br i1 %v2_13f20, label %bb48, label %dec_label_pc_13f2c

bb48:                                             ; preds = %thread-pre-split
  %v4_13f24 = mul i32 %v0_13f04, %v1_13ef8
  %v5_13f24 = add i32 %v4_13f24, %v3_13f24
  store i32 %v5_13f24, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13ecc

dec_label_pc_13f2c:                               ; preds = %bb44, %thread-pre-split
  %v0_13f2c = call i32 @function_131f0()
  %v0_13f30 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f30 = load i32, i32* %fp.global-to-local, align 4
  %v2_13f30 = and i32 %v1_13f30, %v0_13f30
  store i32 %v2_13f30, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_13f3c = inttoptr i32 %v0_13f2c to i32*
  store i32 34, i32* %v2_13f3c, align 4
  %v0_13ecc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ecc

dec_label_pc_13f44:                               ; preds = %bb43
  %v0_13f44.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_13f44 = icmp eq i32 %v0_13f44.pre, 0
  br i1 %v2_13f44, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_13f44
  %v1_13f48 = load i32, i32* %r6.global-to-local, align 4
  %v3_13f48 = inttoptr i32 %v0_13f44.pre to i32*
  store i32 %v1_13f48, i32* %v3_13f48, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_13f44, %bb49
  %v0_13f4c = load i32, i32* %r7.global-to-local, align 4
  %v2_13f4c = icmp eq i32 %v0_13f4c, 0
  %. = select i1 %v2_13f4c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_13f58 = load i32, i32* %fp.global-to-local, align 4
  %v2_13f58 = icmp eq i32 %v0_13f58, 0
  %v0_13f7c.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13f58, label %dec_label_pc_13f74, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_13f7c.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_13f64, label %dec_label_pc_13f74

dec_label_pc_13f64:                               ; preds = %bb53
  %v0_13f64 = call i32 @function_131f0()
  %v2_13f6c = inttoptr i32 %v0_13f64 to i32*
  store i32 34, i32* %v2_13f6c, align 4
  %v0_13f70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13f70, i32* %ip.global-to-local, align 4
  %v0_13f74.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13f74

dec_label_pc_13f74:                               ; preds = %bb53, %bb50, %dec_label_pc_13f64
  %v0_13f7c.pre = phi i32 [ %v0_13f7c.pre.pre, %bb53 ], [ %v0_13f70, %dec_label_pc_13f64 ], [ %v0_13f7c.pre.pre, %bb50 ]
  %v0_13f74 = phi i32 [ %v0_13f4c, %bb53 ], [ %v0_13f74.pre, %dec_label_pc_13f64 ], [ %v0_13f4c, %bb50 ]
  %v2_13f74 = icmp eq i32 %v0_13f74, 0
  br i1 %v2_13f74, label %dec_label_pc_13f74._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_13f74
  %v2_13f78 = sub i32 0, %v0_13f7c.pre
  store i32 %v2_13f78, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13f74._crit_edge

dec_label_pc_13f74._crit_edge:                    ; preds = %dec_label_pc_13f74, %bb54
  %v0_13f7c = phi i32 [ %v2_13f78, %bb54 ], [ %v0_13f7c.pre, %dec_label_pc_13f74 ]
  %v2_13f80 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13f80, i32* @r4, align 4
  ret i32 %v0_13f7c

; uselistorder directives
  uselistorder i32 %v0_13f7c.pre, { 1, 0 }
  uselistorder i32 %v0_13f7c.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13f44.pre, { 1, 0 }
  uselistorder i32 %v4_13f1c, { 1, 0 }
  uselistorder i1 %v3_13f14, { 1, 0 }
  uselistorder i32 %v1_13f14, { 1, 0 }
  uselistorder i32 %v1_13efc, { 1, 0 }
  uselistorder i32 %v1_13ee0, { 1, 0 }
  uselistorder i32 %v1_13ed8, { 1, 0 }
  uselistorder i32 %v0_13ecc, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 5, 6, 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 ()* @function_12894, { 3, 1, 4, 2, 0 }
  uselistorder i32 (i32, i32)* @function_129a4, { 4, 3, 0, 8, 2, 7, 6, 5, 1 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder i8 32, { 0, 8, 9, 10, 1, 11, 12, 2, 3, 13, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_13f74._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13f74, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_13f2c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13ed0, { 1, 0 }
  uselistorder label %dec_label_pc_13ecc, { 1, 0 }
  uselistorder label %dec_label_pc_13ea0, { 1, 0 }
  uselistorder label %dec_label_pc_13e44, { 1, 0 }
}

define i32 @function_13f88(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f88:
  %stack_var_-16 = alloca i32, align 4
  %v2_13f88 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_13f88, i32* @r0, align 4
  %v8_13fa4 = call i32 @function_14234(i32 %v2_13f88, i32 ptrtoint (i32* @global_var_1422c.389 to i32), i32 ptrtoint (i32* @global_var_1db6c.443 to i32), i32 82484, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_13fb4 = call i32 @function_1422c()
  %v2_13fbc = load i32, i32* @global_var_1dc24.447, align 4
  %v2_13fc0 = icmp eq i32 %v2_13fbc, 0
  br i1 %v2_13fc0, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_13f88
  call void @__pseudo_branch(i32 %v2_13fbc)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13f88, %bb
  store i32 %v2_13f88, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_13fe4.449 to i32), i32* @lr, align 4
  %v8_13fe0 = call i32 @function_14234(i32 %v2_13f88, i32 1, i32 ptrtoint (i32* @global_var_1db6c.443 to i32), i32 82484, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v8_13fe0, i32* @r0, align 4
  %v1_13fe4 = call i32 @function_141c0(i32 %v8_13fe0)
  store i1 true, i1* @cpsr_z, align 1
  %v0_13ff8 = load i32, i32* @r4, align 4
  %v1_13ffc = call i32 @function_14630(i32 %v0_13ff8)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_13f88, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_1422c, { 4, 3, 2, 1, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 21, 20, 19 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_14234, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 82484, { 1, 0, 3, 4, 2, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1db6c.443 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1422c.389 to i32), { 0, 3, 1, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1401c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1401c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1401c = load i32, i32* @r4, align 4
  store i32 %v3_1401c, i32* %stack_var_-20, align 4
  %v6_1401c = load i32, i32* @r5, align 4
  %v9_1401c = load i32, i32* @r6, align 4
  %v16_1401c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @ip, align 4
  %v2_14020 = icmp eq i32 %arg1, 0
  %v2_14024 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_14020, label %dec_label_pc_141a8, label %dec_label_pc_1403c.preheader

dec_label_pc_1403c.preheader:                     ; preds = %dec_label_pc_1401c
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1404417 = add i32 %v16_1401c, 124
  br label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %dec_label_pc_1403c.preheader, %dec_label_pc_14034
  %v5_1404418 = phi i32 [ %v5_1404417, %dec_label_pc_1403c.preheader ], [ %v5_14044, %dec_label_pc_14034 ]
  %v2_14038 = add i32 %v5_1404418, -136
  %v3_14038 = inttoptr i32 %v2_14038 to i32*
  store i32 0, i32* %v3_14038, align 4
  %v0_1403c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1403c = add i32 %v0_1403c.pre, -1
  store i32 %v1_1403c, i32* %r1.global-to-local, align 4
  %v6_1403c = icmp slt i32 %v1_1403c, 0
  %v4_14044 = mul i32 %v1_1403c, 4
  %v5_14044 = add i32 %v4_14044, %v16_1401c
  br i1 %v6_1403c, label %dec_label_pc_1404c, label %dec_label_pc_14034

dec_label_pc_1404c:                               ; preds = %dec_label_pc_14034
  %v2_1404c = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_1404c, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_1405c = load i32, i32* @ip, align 4
  store i32 %v0_1405c, i32* %stack_var_-28, align 4
  %v0_14064 = call i32 @function_13650()
  store i32 %v0_14064, i32* %r0.global-to-local, align 4
  %v1_14068 = load i32, i32* @r5, align 4
  %v5_1406c = icmp slt i32 %v0_14064, %v1_14068
  br i1 %v5_1406c, label %dec_label_pc_141b0, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_1404c
  %v2_14070 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_14070, i32* @r4, align 4
  store i32 %v1_14068, i32* %r0.global-to-local, align 4
  store i32 %v2_1404c, i32* %r1.global-to-local, align 4
  %v3_14080 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_14080 = call i32 @function_12e98(i32 %v1_14068, %_TYPEDEF_sigset_t* %v3_14080, i32 %v2_14070)
  store i32 %v4_14080, i32* %r0.global-to-local, align 4
  %v1_14084 = load i32, i32* @r5, align 4
  %v9_14084 = icmp eq i32 %v4_14080, %v1_14084
  br i1 %v9_14084, label %dec_label_pc_1408c, label %dec_label_pc_141b0

dec_label_pc_1408c:                               ; preds = %dec_label_pc_14070
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_14070, i32* %r0.global-to-local, align 4
  %v2_14094 = call i32 @function_1362c(i32 %v2_14070, i32 17)
  store i32 %v2_14094, i32* %r0.global-to-local, align 4
  %v1_14098 = load i32, i32* @r5, align 4
  %v9_14098 = icmp eq i32 %v2_14094, %v1_14098
  br i1 %v9_14098, label %dec_label_pc_140b0.preheader, label %dec_label_pc_1408c.dec_label_pc_14178_crit_edge

dec_label_pc_1408c.dec_label_pc_14178_crit_edge:  ; preds = %dec_label_pc_1408c
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_14178

dec_label_pc_140b0.preheader:                     ; preds = %dec_label_pc_1408c
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140a8

dec_label_pc_140a8:                               ; preds = %dec_label_pc_140b0.preheader, %dec_label_pc_140a8
  %v5_140b816 = phi i32 [ %v5_1404417, %dec_label_pc_140b0.preheader ], [ %v5_140b8, %dec_label_pc_140a8 ]
  %v2_140ac = add i32 %v5_140b816, -136
  %v3_140ac = inttoptr i32 %v2_140ac to i32*
  store i32 0, i32* %v3_140ac, align 4
  %v0_140b0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_140b0 = add i32 %v0_140b0.pre, -1
  store i32 %v1_140b0, i32* %r1.global-to-local, align 4
  %v6_140b0 = icmp slt i32 %v1_140b0, 0
  %v4_140b8 = mul i32 %v1_140b0, 4
  %v5_140b8 = add i32 %v4_140b8, %v16_1401c
  br i1 %v6_140b0, label %dec_label_pc_140c0, label %dec_label_pc_140a8

dec_label_pc_140c0:                               ; preds = %dec_label_pc_140a8
  store i32 %v2_1404c, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_140c8 = call i32 @function_13650()
  store i32 %v0_140c8, i32* %r0.global-to-local, align 4
  %v1_140cc = icmp slt i32 %v0_140c8, 0
  br i1 %v1_140cc, label %dec_label_pc_141b0, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140c0
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_140e0 = call i32 @function_14518(i32 17, i32* null, i32 %v2_14024)
  store i32 %v4_140e0, i32* %r0.global-to-local, align 4
  %v1_140e4 = icmp slt i32 %v4_140e0, 0
  br i1 %v1_140e4, label %dec_label_pc_140ec, label %dec_label_pc_14114

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140d4
  %v0_140ec = call i32 @function_131f0()
  store i32 %v2_14070, i32* %r1.global-to-local, align 4
  store i32 %v0_140ec, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_14100 = inttoptr i32 %v0_140ec to i32*
  %v2_14100 = load i32, i32* %v1_14100, align 4
  store i32 %v2_14100, i32* @r4, align 4
  %v3_14104 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14104 = call i32 @function_12e98(i32 2, %_TYPEDEF_sigset_t* %v3_14104, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1410c = load i32, i32* @r4, align 4
  %v1_1410c = load i32, i32* %r5.global-to-local, align 4
  %v2_1410c = inttoptr i32 %v1_1410c to i32*
  store i32 %v0_1410c, i32* %v2_1410c, align 4
  %v17_141b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_14114:                               ; preds = %dec_label_pc_140d4
  %v2_14114 = load i32, i32* %stack_var_-424, align 4
  %v7_14118 = icmp eq i32 %v2_14114, 1
  %v2_14120 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14120, i32* @r4, align 4
  br i1 %v7_14118, label %dec_label_pc_14128, label %dec_label_pc_1415c

dec_label_pc_14128:                               ; preds = %dec_label_pc_14114
  store i32 %v2_14120, i32* %r1.global-to-local, align 4
  store i32 %v2_14120, i32* %r0.global-to-local, align 4
  %v2_14130 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_14130 = call i32 @function_149b4(%timespec* %v2_14130, i32 %v2_14120)
  store i32 %v3_14130, i32* %r0.global-to-local, align 4
  store i32 %v3_14130, i32* %r6.global-to-local, align 4
  %v0_14138 = call i32 @function_131f0()
  store i32 %v2_14070, i32* %r1.global-to-local, align 4
  store i32 %v0_14138, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1414c = inttoptr i32 %v0_14138 to i32*
  %v2_1414c = load i32, i32* %v1_1414c, align 4
  store i32 %v2_1414c, i32* @r4, align 4
  %v3_14150 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14150 = call i32 @function_12e98(i32 2, %_TYPEDEF_sigset_t* %v3_14150, i32 0)
  store i32 %v4_14150, i32* %r0.global-to-local, align 4
  %v0_14154 = load i32, i32* @r4, align 4
  %v1_14154 = load i32, i32* %r5.global-to-local, align 4
  %v2_14154 = inttoptr i32 %v1_14154 to i32*
  store i32 %v0_14154, i32* %v2_14154, align 4
  %v0_14184.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14184

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14114
  store i32 %v2_14070, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_14168 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14168 = call i32 @function_12e98(i32 2, %_TYPEDEF_sigset_t* %v3_14168, i32 0)
  store i32 %v4_14168, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_1408c.dec_label_pc_14178_crit_edge, %dec_label_pc_1415c
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_1408c.dec_label_pc_14178_crit_edge ], [ %v2_14120, %dec_label_pc_1415c ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_1417c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1417c = call i32 @function_149b4(%timespec* %v2_1417c, i32 %storemerge.pre-phi)
  store i32 %v3_1417c, i32* %r0.global-to-local, align 4
  store i32 %v3_1417c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14184

dec_label_pc_14184:                               ; preds = %dec_label_pc_14128, %dec_label_pc_14178
  %v0_14184 = phi i32 [ %v0_14184.pr, %dec_label_pc_14128 ], [ %v3_1417c, %dec_label_pc_14178 ]
  %v2_14184 = icmp eq i32 %v0_14184, 0
  br i1 %v2_14184, label %dec_label_pc_141a8, label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %dec_label_pc_14184
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14194 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_14194, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141a8:                               ; preds = %dec_label_pc_1401c, %dec_label_pc_14184
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b0:                               ; preds = %dec_label_pc_14070, %dec_label_pc_140c0, %dec_label_pc_1404c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b4:                               ; preds = %dec_label_pc_1418c, %dec_label_pc_141a8, %dec_label_pc_140ec, %dec_label_pc_141b0
  %v17_141b8 = phi i32 [ %v3_14194, %dec_label_pc_1418c ], [ 0, %dec_label_pc_141a8 ], [ %v17_141b8.pre, %dec_label_pc_140ec ], [ -1, %dec_label_pc_141b0 ]
  %v2_141b8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_141b8, i32* @r4, align 4
  store i32 %v6_1401c, i32* @r5, align 4
  store i32 %v9_1401c, i32* @r6, align 4
  ret i32 %v17_141b8

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_14120, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_140b0, { 0, 2, 1 }
  uselistorder i32 %v2_14070, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_14068, { 1, 0, 2 }
  uselistorder i32 %v1_1403c, { 0, 2, 1 }
  uselistorder i32 %v16_1401c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 1, 9, 8, 11, 10, 3, 12, 14, 15, 13, 17, 16, 18, 2, 19, 22, 20, 21, 0 }
  uselistorder i32 (i32, i32*, i32)* @function_14518, { 1, 2, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @function_12e98, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @function_13650, { 2, 1, 0, 3, 4 }
  uselistorder i32 -136, { 1, 2, 0 }
  uselistorder i32 124, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_141b4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_141b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_141a8, { 1, 0 }
  uselistorder label %dec_label_pc_14184, { 1, 0 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
  uselistorder label %dec_label_pc_140a8, { 1, 0 }
  uselistorder label %dec_label_pc_14034, { 1, 0 }
}

define i32 @function_141c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_141ec:
  %stack_var_-8 = alloca i32, align 4
  %v3_141c0 = load i32, i32* @r4, align 4
  store i32 %v3_141c0, i32* %stack_var_-8, align 4
  %v2_141f0 = load i32, i32* @global_var_1dc34.456, align 4
  %v2_141f4 = icmp eq i32 %v2_141f0, 0
  br i1 %v2_141f4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_141ec
  store i32 82432, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_141f0)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_141ec, %bb
  %v2_14204 = load i32, i32* @global_var_1dc38.458, align 4
  %v2_14208 = icmp eq i32 %v2_14204, 0
  br i1 %v2_14208, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_1420c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_1420c, i32* @r4, align 4
  %v9_1420c = load i32, i32* @r0, align 4
  ret i32 %v9_1420c

bb13:                                             ; preds = %.thread
  store i32 ptrtoint (i32* @global_var_14218.459 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_14204)
  %v2_14218 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14218, i32* @r4, align 4
  %v8_14218 = load i32, i32* @r0, align 4
  ret i32 %v8_14218

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1422c() local_unnamed_addr {
dec_label_pc_1422c:
  ret i32 0
}

define i32 @function_14234(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14234:
  %v1_14234 = load i32, i32* @r0, align 4
  ret i32 %v1_14234
}

define i32 @function_14238(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14238:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14238 = load i32, i32* @r4, align 4
  store i32 %v3_14238, i32* %stack_var_-12, align 4
  %v6_14238 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_14248 = call i32 @function_12b58(i32 %arg1, i32 1)
  %v7_1424c = icmp eq i32 %v2_14248, -1
  br i1 %v7_1424c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14238
  %v3_14250 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_14250, i32* @r4, align 4
  store i32 %v6_14238, i32* @r5, align 4
  ret i32 %v2_14248

bb4:                                              ; preds = %dec_label_pc_14238
  %v0_14254 = load i32, i32* @r4, align 4
  %v4_1425c = call i32 @function_12d48(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1570c.461, i32 0, i32 0), i32 %v0_14254)
  %v1_14260 = load i32, i32* %r5.global-to-local, align 4
  %v9_14260 = icmp eq i32 %v4_1425c, %v1_14260
  br i1 %v9_14260, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_14264 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_14264, i32* @r4, align 4
  store i32 %v6_14238, i32* @r5, align 4
  ret i32 %v4_1425c

bb6:                                              ; preds = %bb4
  %v0_14268 = call i32 @function_13c94()
  %v0_1426c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1426c, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v2_1426c = load i32, i32* @ip, align 4
  %v5_1426c = mul i32 %v2_1426c, 16384
  %v6_1426c = and i32 %v5_1426c, %v0_14254
  store i32 %v6_1426c, i32* @r5, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_14268

; uselistorder directives
  uselistorder i32 %v2_14248, { 1, 0 }
  uselistorder i32 %v6_14238, { 1, 0 }
  uselistorder i32 16384, { 0, 33, 51, 34, 52, 35, 53, 36, 54, 37, 55, 38, 56, 14, 57, 13, 68, 12, 49, 11, 50, 10, 58, 9, 59, 8, 60, 7, 61, 6, 62, 5, 63, 4, 64, 3, 65, 31, 66, 32, 67, 29, 70, 30, 71, 28, 69, 39, 72, 1, 73, 2, 74, 16, 75, 42, 76, 41, 77, 43, 78, 44, 79, 15, 80, 40, 81, 17, 82, 18, 83, 20, 84, 19, 85, 22, 86, 21, 87, 23, 88, 24, 89, 25, 90, 26, 91, 27, 92, 45, 46, 47, 48 }
  uselistorder i1* @cpsr_z, { 7, 6, 0, 8, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @function_13c94, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @function_12d48, { 9, 4, 0, 1, 2, 7, 8, 3, 5, 6 }
  uselistorder i32 (i32, i32)* @function_12b58, { 0, 5, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_14270(i32 %arg1) local_unnamed_addr {
dec_label_pc_14270:
  %v2_14274 = load i32, i32* @global_var_1dc3c.463, align 4
  %v2_14278 = icmp eq i32 %v2_14274, 0
  br i1 %v2_14278, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_14270
  %v6_14284 = load i32, i32* @r0, align 4
  ret i32 %v6_14284

bb2:                                              ; preds = %dec_label_pc_14270
  store i32 1, i32* @global_var_1dc3c.463, align 4
  store i32 4096, i32* @global_var_1dc30.414, align 4
  ret i32 undef
}

define i32 @function_142cc(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_142cc:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v4_142d0 = mul i32 %arg2, 4
  %v5_142d0 = add i32 %tmp, %v4_142d0
  %v2_142d4 = load i32, i32* %arg3, align 4
  %v2_142d8 = ptrtoint i32* %stack_var_-120 to i32
  %v1_142dc = add i32 %v5_142d0, 4
  %v9_142e0 = icmp eq i32 %v1_142dc, %v2_142d4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg7, i32* @global_var_1dc28.468, align 4
  store i32 %v1_142dc, i32* @global_var_1dc2c.470, align 4
  store i32 %arg6, i32* @global_var_1dc38.458, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_142e0, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_142cc
  store i32 %v5_142d0, i32* @global_var_1dc2c.470, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_142cc, %bb
  %v2_14320 = bitcast i32* %stack_var_-120 to i8*
  %v3_14320 = call i32 @function_13250(i8* %v2_14320, i32 0)
  %storemerge.pre = load i32, i32* @global_var_1dc2c.470, align 4
  br label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %dec_label_pc_14330, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_14330, %dec_label_pc_14330 ]
  %v1_14330 = inttoptr i32 %storemerge to i32*
  %v2_14330 = load i32, i32* %v1_14330, align 4
  %v4_14330 = add i32 %storemerge, 4
  %v2_14334 = icmp eq i32 %v2_14330, 0
  br i1 %v2_14334, label %dec_label_pc_14340, label %dec_label_pc_14330

dec_label_pc_14340:                               ; preds = %dec_label_pc_14330
  store i32 %v4_14330, i32* @r4, align 4
  %v1_1436022 = inttoptr i32 %v4_14330 to i32*
  %v2_1436023 = load i32, i32* %v1_1436022, align 4
  %v2_1436425 = icmp eq i32 %v2_1436023, 0
  br i1 %v2_1436425, label %dec_label_pc_1436c, label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %dec_label_pc_14340, %dec_label_pc_14360
  %v5_1434c = phi i32 [ %v2_14360, %dec_label_pc_14360 ], [ %v2_1436023, %dec_label_pc_14340 ]
  %v2_14348 = icmp ugt i32 %v5_1434c, 13
  %v7_14348 = icmp eq i32 %v5_1434c, 14
  %v2_1434c = xor i1 %v2_14348, true
  %v3_1434c = or i1 %v7_14348, %v2_1434c
  br i1 %v3_1434c, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_14348
  %v6_1434c = and i32 %v5_1434c, 536870912
  %v7_1434c = icmp ne i32 %v6_1434c, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_14348, %bb42
  %v1_14358 = phi i1 [ %v2_14348, %dec_label_pc_14348 ], [ %v7_1434c, %bb42 ]
  %v2_14350 = xor i1 %v1_14358, true
  %v3_14350 = or i1 %v7_14348, %v2_14350
  br i1 %v3_14350, label %bb44, label %dec_label_pc_14360

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_14360

dec_label_pc_14360:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_14350, i32 ptrtoint (i32* @global_var_13230.472 to i32))
  %v0_1435c = load i32, i32* @r4, align 4
  %v1_1435c = add i32 %v0_1435c, 8
  store i32 %v1_1435c, i32* @r4, align 4
  %v1_14360 = inttoptr i32 %v1_1435c to i32*
  %v2_14360 = load i32, i32* %v1_14360, align 4
  %v2_14364 = icmp eq i32 %v2_14360, 0
  br i1 %v2_14364, label %dec_label_pc_1436c, label %dec_label_pc_14348

dec_label_pc_1436c:                               ; preds = %dec_label_pc_14360, %dec_label_pc_14340
  %v1_14370 = call i32 @function_153d4(i32 %v2_142d8)
  store i32 %v1_14370, i32* @r0, align 4
  %v1_14374 = call i32 @function_14270(i32 %v1_14370)
  store i32 %v1_14374, i32* @r0, align 4
  %v2_14380 = icmp eq i32 %tmp37, 0
  br i1 %v2_14380, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_1436c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1436c, %bb45
  %v0_14390 = phi i32 [ %tmp37, %dec_label_pc_1436c ], [ 4096, %bb45 ]
  %v3_14388 = icmp eq i32 %tmp36, -1
  %v8_14388 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_1dc30.414 to i32), i32* @r2, align 4
  store i32 %v0_14390, i32* @global_var_1dc30.414, align 4
  br i1 %v3_14388, label %dec_label_pc_14398, label %dec_label_pc_143c0

dec_label_pc_14398:                               ; preds = %bb46
  %v0_14398 = call i32 @function_14924()
  store i32 %v0_14398, i32* @r0, align 4
  store i32 %v0_14398, i32* @r4, align 4
  %v0_143a0 = call i32 @function_148cc()
  %v0_143a4 = load i32, i32* @r4, align 4
  %v9_143a4 = icmp eq i32 %v0_143a4, %v0_143a0
  br i1 %v9_143a4, label %dec_label_pc_143ac, label %dec_label_pc_143e8

dec_label_pc_143ac:                               ; preds = %dec_label_pc_14398
  %v1_143ac = call i32 @function_148f8(i32 %v0_143a0)
  store i32 %v1_143ac, i32* @r0, align 4
  store i32 %v1_143ac, i32* @r4, align 4
  %v0_143b4 = call i32 @function_148a0()
  %v0_143b8 = load i32, i32* @r4, align 4
  %v9_143b8 = icmp eq i32 %v0_143b8, %v0_143b4
  br i1 %v9_143b8, label %dec_label_pc_143c0, label %dec_label_pc_143e8

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143ac, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_14388, label %dec_label_pc_14454, label %dec_label_pc_143cc

dec_label_pc_143cc:                               ; preds = %dec_label_pc_143c0
  %v9_143d0 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_143d0, label %dec_label_pc_143d8, label %dec_label_pc_143e8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143cc
  br label %dec_label_pc_143e8

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143d8, %dec_label_pc_143cc, %dec_label_pc_143ac, %dec_label_pc_14398
  %v2_143f0 = call i32 @function_14238(i32 0, i32 32768)
  %v2_143fc = call i32 @function_14238(i32 1, i32 32770)
  %v2_14408 = call i32 @function_14238(i32 2, i32 32770)
  br label %dec_label_pc_14454

dec_label_pc_14454:                               ; preds = %dec_label_pc_143e8, %dec_label_pc_143c0
  %v0_14418 = load i32, i32* %r6.global-to-local, align 4
  %v1_14418 = inttoptr i32 %v0_14418 to i32*
  %v2_14418 = load i32, i32* %v1_14418, align 4
  store i32 %v2_14418, i32* @global_var_1db84, align 4
  store i32 %arg5, i32* @global_var_1dc34.456, align 4
  %v2_14454 = icmp eq i32 %arg4, 0
  br i1 %v2_14454, label %dec_label_pc_14490, label %bb47

bb47:                                             ; preds = %dec_label_pc_14454
  br label %dec_label_pc_14490

dec_label_pc_14490:                               ; preds = %dec_label_pc_14454, %bb47
  call void @__pseudo_branch(i32 %arg4)
  %v1_144a0 = call i32 @function_131f0()
  %v2_144a8 = inttoptr i32 %v1_144a0 to i32*
  store i32 0, i32* %v2_144a8, align 4
  %v0_144d4 = load i32, i32* %r8.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_144e0 = call i32 @function_13f88(i32 %v0_144d4)
  ret i32 %v1_144e0

; uselistorder directives
  uselistorder i32 %v2_14360, { 1, 0 }
  uselistorder i32 %v1_1435c, { 1, 0 }
  uselistorder i1 %v2_14348, { 1, 0 }
  uselistorder i32 %v4_14330, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_13f88, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_14238, { 2, 1, 0 }
  uselistorder i32 32768, { 1, 2, 0 }
  uselistorder i32* @global_var_1dc30.414, { 1, 4, 0, 2, 3 }
  uselistorder i32 4096, { 0, 1, 3, 7, 4, 8, 5, 9, 2, 6, 10, 11 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i1 true, { 0, 1, 545, 2, 3, 4, 5, 6, 7, 8, 287, 9, 10, 11, 12, 13, 568, 285, 288, 299, 569, 546, 312, 547, 548, 128, 129, 549, 289, 130, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 131, 132, 566, 567, 311, 286, 300, 570, 126, 127, 310, 125, 571, 134, 133, 301, 305, 302, 306, 303, 307, 304, 309, 572, 135, 573, 124, 574, 313, 314, 575, 315, 316, 136, 576, 317, 318, 137, 138, 577, 319, 320, 139, 140, 578, 141, 142, 143, 579, 321, 322, 144, 145, 580, 323, 324, 146, 581, 325, 326, 121, 122, 123, 582, 327, 328, 120, 583, 329, 330, 584, 290, 291, 147, 148, 585, 331, 332, 149, 586, 150, 151, 587, 152, 153, 588, 154, 155, 589, 156, 284, 119, 157, 158, 590, 333, 334, 159, 160, 591, 161, 162, 592, 335, 336, 116, 117, 118, 115, 593, 337, 338, 594, 339, 340, 112, 113, 114, 595, 341, 342, 596, 343, 344, 109, 110, 111, 597, 345, 346, 598, 347, 348, 106, 107, 108, 599, 349, 350, 103, 104, 105, 600, 351, 352, 601, 353, 354, 100, 101, 102, 602, 355, 356, 163, 603, 357, 358, 97, 98, 99, 604, 359, 360, 605, 361, 362, 94, 95, 96, 606, 363, 364, 607, 365, 366, 91, 92, 93, 608, 367, 368, 609, 369, 370, 88, 89, 90, 610, 371, 372, 86, 87, 611, 373, 374, 85, 612, 375, 376, 613, 377, 378, 164, 165, 166, 614, 379, 380, 82, 83, 84, 615, 381, 382, 616, 383, 384, 79, 80, 81, 617, 385, 386, 77, 78, 618, 387, 388, 619, 389, 390, 620, 391, 392, 621, 393, 394, 622, 395, 396, 623, 397, 398, 624, 399, 400, 625, 401, 402, 626, 403, 404, 627, 405, 406, 167, 168, 169, 628, 407, 408, 74, 75, 76, 629, 409, 410, 630, 411, 412, 71, 72, 73, 631, 413, 414, 68, 69, 70, 632, 415, 416, 65, 66, 67, 64, 633, 417, 418, 634, 419, 420, 61, 62, 63, 635, 421, 422, 636, 423, 424, 58, 59, 60, 637, 425, 426, 638, 427, 428, 170, 171, 172, 639, 429, 430, 173, 174, 175, 640, 431, 432, 176, 177, 178, 641, 433, 434, 55, 56, 57, 642, 435, 436, 643, 437, 438, 53, 54, 644, 439, 440, 645, 441, 442, 52, 646, 647, 443, 444, 179, 180, 648, 445, 446, 49, 50, 51, 649, 447, 448, 48, 650, 651, 449, 450, 46, 47, 652, 451, 452, 653, 453, 454, 43, 44, 45, 654, 455, 456, 181, 182, 183, 655, 457, 458, 40, 41, 42, 656, 459, 460, 657, 461, 462, 39, 658, 659, 463, 464, 37, 38, 660, 465, 466, 35, 36, 661, 467, 468, 662, 469, 470, 32, 33, 34, 663, 471, 472, 31, 664, 184, 665, 473, 474, 28, 29, 30, 666, 475, 476, 667, 477, 478, 25, 26, 27, 668, 479, 480, 669, 481, 482, 670, 483, 484, 24, 671, 672, 485, 486, 185, 186, 187, 22, 23, 673, 487, 488, 674, 489, 490, 675, 491, 492, 676, 493, 494, 677, 495, 496, 678, 497, 498, 679, 499, 500, 188, 680, 189, 190, 21, 681, 501, 502, 191, 682, 192, 193, 194, 683, 195, 196, 197, 684, 198, 199, 200, 201, 685, 202, 203, 204, 205, 686, 206, 207, 687, 503, 504, 208, 209, 688, 210, 211, 212, 689, 213, 214, 215, 690, 216, 217, 218, 691, 219, 220, 221, 692, 222, 223, 224, 225, 693, 505, 506, 226, 227, 694, 228, 229, 230, 695, 231, 232, 696, 233, 234, 235, 697, 236, 237, 238, 698, 239, 240, 241, 242, 243, 244, 245, 699, 246, 247, 248, 700, 507, 508, 249, 20, 701, 509, 510, 250, 251, 19, 702, 292, 293, 703, 252, 704, 253, 254, 255, 705, 256, 257, 258, 706, 511, 512, 259, 18, 707, 513, 514, 260, 261, 17, 708, 515, 516, 16, 709, 517, 518, 262, 263, 264, 710, 519, 520, 265, 711, 521, 522, 266, 15, 712, 523, 524, 267, 268, 269, 713, 270, 271, 272, 714, 273, 274, 14, 715, 294, 295, 275, 276, 277, 278, 279, 716, 525, 526, 717, 527, 528, 718, 529, 530, 719, 531, 532, 720, 533, 534, 721, 535, 536, 722, 537, 538, 723, 539, 540, 724, 541, 542, 725, 543, 544, 298, 726, 727, 308, 728, 296, 280, 297, 281, 282, 283 }
  uselistorder i32 120, { 3, 0, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_14490, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_14360, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_14348, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_14518(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14518:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_14518 = load i32, i32* @r4, align 4
  %v6_14518 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1451c = icmp eq i32* %arg2, null
  %v2_14520 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_1451c, label %dec_label_pc_1458c, label %dec_label_pc_14530

dec_label_pc_14530:                               ; preds = %dec_label_pc_14518
  %v2_14534 = load i32, i32* %arg2, align 4
  %v4_14534 = add i32 %tmp, 4
  store i32 %v4_14534, i32* @r1, align 4
  %v2_14538 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_14538, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_14534, i32* %stack_var_-156, align 4
  %v3_14544 = call i32 @function_13230(i32 %v2_14538, i32 %v4_14534, i32 128)
  store i32 %v3_14544, i32* %r0.global-to-local, align 4
  %v0_14548 = load i32, i32* @r4, align 4
  %v1_14548 = add i32 %v0_14548, 132
  %v2_14548 = inttoptr i32 %v1_14548 to i32*
  %v3_14548 = load i32, i32* %v2_14548, align 4
  %v1_1454c = and i32 %v3_14548, 67108864
  %v2_1454c = icmp eq i32 %v1_1454c, 0
  br i1 %v2_1454c, label %dec_label_pc_14560, label %bb

bb:                                               ; preds = %dec_label_pc_14530
  br label %dec_label_pc_1457c

dec_label_pc_14560:                               ; preds = %dec_label_pc_14530
  %v1_14568 = and i32 %v3_14548, 4
  %v2_14568 = icmp eq i32 %v1_14568, 0
  br i1 %v2_14568, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_14560
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14560, %bb20
  br label %dec_label_pc_1457c

dec_label_pc_1457c:                               ; preds = %bb, %bb21
  %v2_1457c = icmp eq i32 %v0_14548, 0
  %v3_14580 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_14580 = select i1 %v2_1457c, i32 0, i32 %v3_14580
  %v0_1458c.pre = load i32, i32* @r5, align 4
  %v0_1459c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1458c

dec_label_pc_1458c:                               ; preds = %dec_label_pc_1457c, %dec_label_pc_14518
  %v0_1459c = phi i32 [ %arg1, %dec_label_pc_14518 ], [ %v0_1459c.pre, %dec_label_pc_1457c ]
  %v0_1458c = phi i32 [ %arg3, %dec_label_pc_14518 ], [ %v0_1458c.pre, %dec_label_pc_1457c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_14518 ], [ %.v3_14580, %dec_label_pc_1457c ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_1458c = icmp eq i32 %v0_1458c, 0
  %.v2_14520 = select i1 %v2_1458c, i32 0, i32 %v2_14520
  store i32 %.v2_14520, i32* @r2, align 4
  store i32 %v0_1459c, i32* %r0.global-to-local, align 4
  %v1_145a0 = call i32 @function_14604(i32 %v0_1459c)
  store i32 %v1_145a0, i32* %r0.global-to-local, align 4
  %v0_145a4 = load i32, i32* @r5, align 4
  %v2_145a4 = icmp eq i32 %v0_145a4, 0
  br i1 %v2_145a4, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1458c
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1458c, %bb25
  %v0_145b4.pr = phi i32 [ 0, %dec_label_pc_1458c ], [ 1, %bb25 ]
  %v1_145ac = icmp slt i32 %v1_145a0, 0
  br i1 %v1_145ac, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_145e8

thread-pre-split:                                 ; preds = %bb26
  %v2_145b4 = icmp eq i32 %v0_145b4.pr, 0
  store i32 %v1_145a0, i32* @r4, align 4
  br i1 %v2_145b4, label %dec_label_pc_145e8, label %dec_label_pc_145c0

dec_label_pc_145c0:                               ; preds = %thread-pre-split
  %v2_145c0 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_145a4, i32* %r0.global-to-local, align 4
  %v2_145c8 = inttoptr i32 %v0_145a4 to i32*
  store i32 %v2_145c0, i32* %v2_145c8, align 4
  %v3_145c8 = load i32, i32* %r0.global-to-local, align 4
  %v4_145c8 = add i32 %v3_145c8, 4
  store i32 %v4_145c8, i32* @r0, align 4
  %v2_145cc = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_145cc, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v3_145d4 = call i32 @function_13230(i32 %v4_145c8, i32 %v2_145cc, i32 128)
  store i32 %v3_145d4, i32* %r0.global-to-local, align 4
  %v1_145dc = load i32, i32* @r5, align 4
  %v2_145dc = add i32 %v1_145dc, 136
  %v3_145dc = inttoptr i32 %v2_145dc to i32*
  %v1_145e4 = load i32, i32* @r5, align 4
  %v2_145e4 = add i32 %v1_145e4, 132
  %v3_145e4 = inttoptr i32 %v2_145e4 to i32*
  %v0_145e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_145c0
  %v0_145e8 = phi i32 [ %v1_145a0, %thread-pre-split ], [ %v0_145e8.pre, %dec_label_pc_145c0 ], [ %v1_145a0, %thread-pre-split.thread ]
  store i32 %v0_145e8, i32* %r0.global-to-local, align 4
  store i32 %v3_14518, i32* @r4, align 4
  store i32 %v6_14518, i32* @r5, align 4
  ret i32 %v0_145e8

; uselistorder directives
  uselistorder i32 %v0_145e8, { 1, 0 }
  uselistorder i32 %v0_145a4, { 1, 0, 2 }
  uselistorder i32 %v0_1459c, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder i32 136, { 3, 1, 2, 0 }
  uselistorder i32 132, { 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_145e8, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1457c, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_14604(i32 %arg1) local_unnamed_addr {
dec_label_pc_14604:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14604 = load i32, i32* @r4, align 4
  store i32 %v3_14604, i32* %stack_var_-8, align 4
  %v1_14608 = load i32, i32* @r1, align 4
  %v2_14608 = inttoptr i32 %v1_14608 to %sigaction*
  %v3_14608 = load i32, i32* @r2, align 4
  %v4_14608 = inttoptr i32 %v3_14608 to %sigaction*
  %v5_14608 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_14608, %sigaction* %v4_14608)
  store i32 %v5_14608, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14608, -4095
  br i1 %tmp, label %dec_label_pc_14628, label %dec_label_pc_14618

dec_label_pc_14618:                               ; preds = %dec_label_pc_14604
  %v0_14618 = call i32 @function_131f0()
  %v0_1461c = load i32, i32* %r4.global-to-local, align 4
  %v1_1461c = sub i32 0, %v0_1461c
  %v2_14620 = inttoptr i32 %v0_14618 to i32*
  store i32 %v1_1461c, i32* %v2_14620, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14628

dec_label_pc_14628:                               ; preds = %dec_label_pc_14604, %dec_label_pc_14618
  %v0_14628 = phi i32 [ %v5_14608, %dec_label_pc_14604 ], [ -1, %dec_label_pc_14618 ]
  %v2_1462c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1462c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14628

; uselistorder directives
  uselistorder i32 %v5_14608, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14628, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_14630(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_14630:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_14658() local_unnamed_addr {
dec_label_pc_14658:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %tmp4 = bitcast i32* %stack_var_-72 to %stat*
  %v0_14668 = load i32, i32* @r0, align 4
  %v4_14668 = call i32 @fstat(i32 %v0_14668, %stat* %tmp4)
  store i32 %v4_14668, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14668, -4095
  br i1 %tmp, label %dec_label_pc_1468c, label %dec_label_pc_14678

dec_label_pc_14678:                               ; preds = %dec_label_pc_14658
  %v0_14678 = call i32 @function_131f0()
  %v0_1467c = load i32, i32* %r4.global-to-local, align 4
  %v1_1467c = sub i32 0, %v0_1467c
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14684 = inttoptr i32 %v0_14678 to i32*
  store i32 %v1_1467c, i32* %v2_14684, align 4
  br label %dec_label_pc_1469c

dec_label_pc_1468c:                               ; preds = %dec_label_pc_14658
  %v2_1468c = icmp eq i32 %v4_14668, 0
  store i32 83612, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1468c, i32 ptrtoint (i32* @global_var_14d74.488 to i32))
  br label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %dec_label_pc_14678, %dec_label_pc_1468c
  %v0_1469c = load i32, i32* %r4.global-to-local, align 4
  ret i32 %v0_1469c

; uselistorder directives
  uselistorder i32 %v4_14668, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 10, 8, 9, 6, 7, 0, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1469c, { 1, 0 }
}

define i32 @function_146a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_146a8:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %v6_146a8 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_146b0 = call i32 @function_1473c()
  store i32 %v0_146b0, i32* %r6.global-to-local, align 4
  %tmp8 = icmp slt i32 %v0_146b0, 1
  br i1 %tmp8, label %dec_label_pc_14734, label %dec_label_pc_14720.preheader

dec_label_pc_14720.preheader:                     ; preds = %dec_label_pc_146a8
  %v5_146b8 = load i32, i32* @r4, align 4
  %v7_146b8 = add i32 %v5_146b8, %v0_146b0
  store i32 %v7_146b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14720

dec_label_pc_146c4:                               ; preds = %dec_label_pc_14720
  %v1_146c4 = add i32 %v2_146d4, 16
  %v2_146c4 = inttoptr i32 %v1_146c4 to i32*
  %v3_146c4 = load i32, i32* %v2_146c4, align 4
  store i32 %v3_146c4, i32* @lr, align 4
  %v2_146c8 = inttoptr i32 %v1_14724 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  store i32 %v3_146c8, i32* %r2.global-to-local, align 4
  %v1_146cc = add i32 %v2_146d4, 18
  %v2_146cc = inttoptr i32 %v1_146cc to i8*
  %v3_146cc = load i8, i8* %v2_146cc, align 1
  %v4_146cc = zext i8 %v3_146cc to i32
  store i32 %v4_146cc, i32* %ip.global-to-local, align 4
  %v3_146d0 = sdiv i32 %v3_146c4, 256
  store i32 %v3_146d0, i32* %r3.global-to-local, align 4
  %v1_146d4 = trunc i32 %v3_146c4 to i8
  %v4_146d4 = inttoptr i32 %v1_14724 to i8*
  store i8 %v1_146d4, i8* %v4_146d4, align 1
  %v0_146d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_146d8 = load i32, i32* @r4, align 4
  %v2_146d8 = add i32 %v1_146d8, 4
  %v3_146d8 = inttoptr i32 %v2_146d8 to i32*
  store i32 %v0_146d8, i32* %v3_146d8, align 4
  %v0_146dc = load i32, i32* %ip.global-to-local, align 4
  %v1_146dc = trunc i32 %v0_146dc to i8
  %v2_146dc = load i32, i32* @r4, align 4
  %v3_146dc = add i32 %v2_146dc, 10
  %v4_146dc = inttoptr i32 %v3_146dc to i8*
  store i8 %v1_146dc, i8* %v4_146dc, align 1
  %v0_146e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_146e0 = trunc i32 %v0_146e0 to i8
  %v2_146e0 = load i32, i32* @r4, align 4
  %v3_146e0 = add i32 %v2_146e0, 9
  %v4_146e0 = inttoptr i32 %v3_146e0 to i8*
  store i8 %v1_146e0, i8* %v4_146e0, align 1
  %v0_146e4 = load i32, i32* @r4, align 4
  %v1_146e4 = add i32 %v0_146e4, 8
  %v2_146e4 = inttoptr i32 %v1_146e4 to i8*
  %v3_146e4 = load i8, i8* %v2_146e4, align 1
  %v4_146e4 = zext i8 %v3_146e4 to i32
  store i32 %v4_146e4, i32* %r2.global-to-local, align 4
  %v0_146e8 = load i32, i32* @r5, align 4
  %v1_146e8 = add i32 %v0_146e8, 1
  %v2_146e8 = inttoptr i32 %v1_146e8 to i8*
  %v3_146e8 = load i8, i8* %v2_146e8, align 1
  %v4_146e8 = zext i8 %v3_146e8 to i32
  store i32 %v4_146e8, i32* %r3.global-to-local, align 4
  %v4_146ec = mul nuw nsw i32 %v4_146e8, 256
  %v5_146ec = or i32 %v4_146ec, %v4_146e4
  %v1_146f0 = add nsw i32 %v5_146ec, -19
  store i32 %v1_146f0, i32* @r2, align 4
  %v3_146f4 = call i32 @function_13240(i32 %v1_1472c, i32 %v1_14728, i32 %v1_146f0)
  %v0_146f8 = load i32, i32* @r4, align 4
  %v1_146f8 = add i32 %v0_146f8, 8
  %v2_146f8 = inttoptr i32 %v1_146f8 to i8*
  %v3_146f8 = load i8, i8* %v2_146f8, align 1
  %v4_146f8 = zext i8 %v3_146f8 to i32
  store i32 %v4_146f8, i32* %r3.global-to-local, align 4
  %v0_146fc = load i32, i32* @r5, align 4
  %v1_146fc = add i32 %v0_146fc, 1
  %v2_146fc = inttoptr i32 %v1_146fc to i8*
  %v3_146fc = load i8, i8* %v2_146fc, align 1
  %v4_146fc = zext i8 %v3_146fc to i32
  store i32 %v0_146f8, i32* @r0, align 4
  %v4_14704 = mul nuw nsw i32 %v4_146fc, 256
  %v5_14704 = or i32 %v4_14704, %v4_146f8
  store i32 %v5_14704, i32* @r2, align 4
  store i32 %v0_146f8, i32* @r1, align 4
  %v3_1470c = call i32 @function_13240(i32 %v0_146f8, i32 %v0_146f8, i32 %v5_14704)
  %v0_14710 = load i32, i32* @r4, align 4
  %v1_14710 = add i32 %v0_14710, 8
  %v2_14710 = inttoptr i32 %v1_14710 to i8*
  %v3_14710 = load i8, i8* %v2_14710, align 1
  %v4_14710 = zext i8 %v3_14710 to i32
  store i32 %v4_14710, i32* %r3.global-to-local, align 4
  %v0_14714 = load i32, i32* @r5, align 4
  %v1_14714 = add i32 %v0_14714, 1
  %v2_14714 = inttoptr i32 %v1_14714 to i8*
  %v3_14714 = load i8, i8* %v2_14714, align 1
  %v4_14714 = zext i8 %v3_14714 to i32
  store i32 %v4_14714, i32* @r2, align 4
  %v4_14718 = mul nuw nsw i32 %v4_14714, 256
  %v5_14718 = or i32 %v4_14718, %v4_14710
  store i32 %v5_14718, i32* %r3.global-to-local, align 4
  %v2_1471c = add i32 %v5_14718, %v0_14710
  store i32 %v2_1471c, i32* @r4, align 4
  %v1_14720.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_14720.preheader, %dec_label_pc_146c4
  %v1_14720 = phi i32 [ %v7_146b8, %dec_label_pc_14720.preheader ], [ %v1_14720.pre, %dec_label_pc_146c4 ]
  %v2_146d4 = phi i32 [ %v5_146b8, %dec_label_pc_14720.preheader ], [ %v2_1471c, %dec_label_pc_146c4 ]
  %v3_14720 = icmp ult i32 %v2_146d4, %v1_14720
  %v1_14724 = add i32 %v2_146d4, 8
  store i32 %v1_14724, i32* @r5, align 4
  %v1_14728 = add i32 %v2_146d4, 19
  store i32 %v1_14728, i32* @r1, align 4
  %v1_1472c = add i32 %v2_146d4, 11
  store i32 %v1_1472c, i32* @r0, align 4
  br i1 %v3_14720, label %dec_label_pc_146c4, label %dec_label_pc_14734.loopexit

dec_label_pc_14734.loopexit:                      ; preds = %dec_label_pc_14720
  %v0_14734.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14734

dec_label_pc_14734:                               ; preds = %dec_label_pc_146a8, %dec_label_pc_14734.loopexit
  %v0_14734 = phi i32 [ %v0_14734.pre, %dec_label_pc_14734.loopexit ], [ %v0_146b0, %dec_label_pc_146a8 ]
  store i32 %v6_146a8, i32* @r5, align 4
  ret i32 %v0_14734

; uselistorder directives
  uselistorder i32 %v1_1472c, { 1, 0 }
  uselistorder i32 %v1_14728, { 1, 0 }
  uselistorder i32 %v1_14724, { 2, 1, 0 }
  uselistorder i32 %v2_146d4, { 4, 3, 2, 5, 1, 0 }
  uselistorder i32 %v0_146f8, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v3_146c4, { 1, 0, 2 }
  uselistorder i32 %v5_146b8, { 1, 0 }
  uselistorder i32 %v0_146b0, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @function_13240, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_14734, { 1, 0 }
  uselistorder label %dec_label_pc_14720, { 1, 0 }
}

define i32 @function_1473c() local_unnamed_addr {
dec_label_pc_1473c:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_14740 = load i32, i32* @r4, align 4
  %v9_14740 = load i32, i32* @r6, align 4
  %v0_14744 = load i32, i32* @r2, align 4
  %v1_14744 = add i32 %v0_14744, 6
  %v2_1474c = ptrtoint i32* %stack_var_-60 to i32
  %v1_14750 = and i32 %v1_14744, -4
  store i32 %v1_14750, i32* %r3.global-to-local, align 4
  %v2_14754 = sub i32 %v2_1474c, %v1_14750
  %v0_14758 = load i32, i32* @r1, align 4
  store i32 %v0_14758, i32* %r8.global-to-local, align 4
  store i32 %v0_14744, i32* %stack_var_-60, align 4
  store i32 %v2_14754, i32* %sl.global-to-local, align 4
  %v0_14764 = load i32, i32* @r0, align 4
  %v1_14768 = inttoptr i32 %v2_14754 to %linux_dirent64*
  store i32 %v2_14754, i32* %r1.global-to-local, align 4
  %v5_1476c = call i32 @getdents64(i32 %v0_14764, %linux_dirent64* %v1_14768, i32 %v0_14744)
  store i32 %v5_1476c, i32* @r6, align 4
  %tmp = icmp ult i32 %v5_1476c, -4095
  br i1 %tmp, label %dec_label_pc_14790, label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %dec_label_pc_1473c
  %v0_1477c = call i32 @function_131f0()
  %v0_14780 = load i32, i32* @r6, align 4
  %v1_14780 = sub i32 0, %v0_14780
  store i32 %v1_14780, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_14788 = inttoptr i32 %v0_1477c to i32*
  store i32 %v1_14780, i32* %v2_14788, align 4
  %v0_14798.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14798

dec_label_pc_14790:                               ; preds = %dec_label_pc_1473c
  br i1 false, label %dec_label_pc_14798, label %dec_label_pc_147a0

dec_label_pc_14798:                               ; preds = %dec_label_pc_14790, %dec_label_pc_1477c
  %v0_14798 = phi i32 [ -1, %dec_label_pc_14790 ], [ %v0_14798.pre, %dec_label_pc_1477c ]
  store i32 %v0_14798, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14894

dec_label_pc_147a0:                               ; preds = %dec_label_pc_14790
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_147a8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_147a8, i32* @r5, align 4
  %v0_147ac = load i32, i32* @sp, align 4
  store i32 %v0_147ac, i32* @r4, align 4
  br label %dec_label_pc_14870

dec_label_pc_147bc:                               ; preds = %dec_label_pc_14870
  %v2_14888 = add i32 %v3_14874, %v0_14888
  %v1_147bc = add i32 %v0_147c0, 17
  %v2_147bc = inttoptr i32 %v1_147bc to i8*
  %v3_147bc = load i8, i8* %v2_147bc, align 1
  %v4_147bc = zext i8 %v3_147bc to i32
  %v2_147c0 = inttoptr i32 %v1_1487c to i8*
  %v3_147c0 = load i8, i8* %v2_147c0, align 1
  %v4_147c0 = zext i8 %v3_147c0 to i32
  %v4_147c4 = mul nuw nsw i32 %v4_147bc, 256
  %v5_147c4 = or i32 %v4_147c0, %v4_147c4
  %v1_147c8 = add nuw nsw i32 %v5_147c4, 3
  %v1_147cc = and i32 %v1_147c8, 131068
  store i32 %v1_147cc, i32* %r3.global-to-local, align 4
  %v2_147d0 = add i32 %v1_147cc, %v2_14810
  store i32 %v2_147d0, i32* %sb.global-to-local, align 4
  %v9_147d4 = icmp eq i32 %v2_147d0, %v2_14888
  %v1_147d8 = and i32 %v1_147c8, 128
  %v2_147dc = icmp eq i32 %v1_147d8, 0
  %v3_147dc = or i1 %v9_147d4, %v2_147dc
  br i1 %v3_147dc, label %dec_label_pc_14810, label %dec_label_pc_147e0

dec_label_pc_147e0:                               ; preds = %dec_label_pc_147bc
  store i32 %stack_var_-52.0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_147f0 = call i32 @function_14950(i32 %v0_14764, i32 %stack_var_-52.0, i32 %stack_var_-48.0, i32 0)
  %v0_147f4 = load i32, i32* @r5, align 4
  %v1_147f4 = load i32, i32* %r8.global-to-local, align 4
  %v9_147f4 = icmp eq i32 %v0_147f4, %v1_147f4
  br i1 %v9_147f4, label %dec_label_pc_147fc, label %dec_label_pc_14890

dec_label_pc_147fc:                               ; preds = %dec_label_pc_147e0
  %v0_147fc = call i32 @function_131f0()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_14808 = inttoptr i32 %v0_147fc to i32*
  store i32 22, i32* %v2_14808, align 4
  %v0_14894.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14894

dec_label_pc_14810:                               ; preds = %dec_label_pc_147bc
  %v3_147d811 = udiv i32 %v1_147c8, 256
  %v1_14810 = trunc i32 %v3_147d811 to i8
  %v3_14810 = add i32 %v2_14810, 17
  %v4_14810 = inttoptr i32 %v3_14810 to i8*
  store i8 %v1_14810, i8* %v4_14810, align 1
  %v0_14814 = load i32, i32* %r3.global-to-local, align 4
  %v1_14814 = trunc i32 %v0_14814 to i8
  %v2_14814 = load i32, i32* @r5, align 4
  %v3_14814 = add i32 %v2_14814, 16
  %v4_14814 = inttoptr i32 %v3_14814 to i8*
  store i8 %v1_14814, i8* %v4_14814, align 1
  %v0_14818 = load i32, i32* @r4, align 4
  %v1_14818 = add i32 %v0_14818, 8
  %v1_1481c = inttoptr i32 %v1_14818 to i32*
  %v2_1481c = load i32, i32* %v1_1481c, align 4
  %v3_1481c = add i32 %v0_14818, 12
  %v4_1481c = inttoptr i32 %v3_1481c to i32*
  %v5_1481c = load i32, i32* %v4_1481c, align 4
  store i32 %v5_1481c, i32* %r3.global-to-local, align 4
  %v1_14828 = inttoptr i32 %v0_14818 to i32*
  %v2_14828 = load i32, i32* %v1_14828, align 4
  %v3_14828 = add i32 %v0_14818, 4
  %v4_14828 = inttoptr i32 %v3_14828 to i32*
  %v5_14828 = load i32, i32* %v4_14828, align 4
  store i32 %v5_14828, i32* %r3.global-to-local, align 4
  %v0_1482c = load i32, i32* @r5, align 4
  %v1_1482c = inttoptr i32 %v0_1482c to i32*
  store i32 %v2_14828, i32* %v1_1482c, align 4
  %v3_1482c = add i32 %v0_1482c, 4
  %v4_1482c = inttoptr i32 %v3_1482c to i32*
  %v5_1482c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1482c, i32* %v4_1482c, align 4
  %v0_14830 = load i32, i32* @r4, align 4
  %v1_14830 = add i32 %v0_14830, 8
  %v1_14834 = inttoptr i32 %v1_14830 to i32*
  %v2_14834 = load i32, i32* %v1_14834, align 4
  %v3_14834 = add i32 %v0_14830, 12
  %v4_14834 = inttoptr i32 %v3_14834 to i32*
  %v5_14834 = load i32, i32* %v4_14834, align 4
  store i32 %v5_14834, i32* %r3.global-to-local, align 4
  %v1_14838 = load i32, i32* @r5, align 4
  %v2_14838 = add i32 %v1_14838, 8
  %v3_14838 = inttoptr i32 %v2_14838 to i32*
  store i32 %v2_14834, i32* %v3_14838, align 4
  %v0_1483c = load i32, i32* %r3.global-to-local, align 4
  %v1_1483c = load i32, i32* @r5, align 4
  %v2_1483c = add i32 %v1_1483c, 12
  %v3_1483c = inttoptr i32 %v2_1483c to i32*
  store i32 %v0_1483c, i32* %v3_1483c, align 4
  %v0_14840 = load i32, i32* @r4, align 4
  %v1_14840 = add i32 %v0_14840, 18
  %v2_14840 = inttoptr i32 %v1_14840 to i8*
  %v3_14840 = load i8, i8* %v2_14840, align 1
  %v4_14840 = zext i8 %v3_14840 to i32
  store i32 %v4_14840, i32* %r3.global-to-local, align 4
  %v2_14844 = load i32, i32* @r5, align 4
  %v3_14844 = add i32 %v2_14844, 18
  %v4_14844 = inttoptr i32 %v3_14844 to i8*
  store i8 %v3_14840, i8* %v4_14844, align 1
  %v0_14848 = load i32, i32* @r4, align 4
  %v1_14848 = add i32 %v0_14848, 16
  %v2_14848 = inttoptr i32 %v1_14848 to i8*
  %v3_14848 = load i8, i8* %v2_14848, align 1
  %v4_14848 = zext i8 %v3_14848 to i32
  %v0_1484c = load i32, i32* %r7.global-to-local, align 4
  %v1_1484c = add i32 %v0_1484c, 1
  %v2_1484c = inttoptr i32 %v1_1484c to i8*
  %v3_1484c = load i8, i8* %v2_1484c, align 1
  %v4_1484c = zext i8 %v3_1484c to i32
  store i32 %v4_1484c, i32* %r3.global-to-local, align 4
  %v4_14850 = mul nuw nsw i32 %v4_1484c, 256
  %v5_14850 = or i32 %v4_14850, %v4_14848
  %v1_14854 = add nsw i32 %v5_14850, -19
  store i32 %v1_14854, i32* @r2, align 4
  %v3_14858 = call i32 @function_13230(i32 %v1_14880, i32 %v1_14884, i32 %v1_14854)
  %v0_1485c = load i32, i32* @r4, align 4
  %v1_1485c = add i32 %v0_1485c, 16
  %v2_1485c = inttoptr i32 %v1_1485c to i8*
  %v3_1485c = load i8, i8* %v2_1485c, align 1
  %v4_1485c = zext i8 %v3_1485c to i32
  store i32 %v4_1485c, i32* %r3.global-to-local, align 4
  %v0_14860 = load i32, i32* %r7.global-to-local, align 4
  %v1_14860 = add i32 %v0_14860, 1
  %v2_14860 = inttoptr i32 %v1_14860 to i8*
  %v3_14860 = load i8, i8* %v2_14860, align 1
  %v4_14860 = zext i8 %v3_14860 to i32
  %v4_14864 = mul nuw nsw i32 %v4_14860, 256
  %v5_14864 = or i32 %v4_14864, %v4_1485c
  store i32 %v5_14864, i32* %r3.global-to-local, align 4
  %v2_14868 = add i32 %v5_14864, %v0_1485c
  store i32 %v2_14868, i32* @r4, align 4
  %v0_1486c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1486c, i32* @r5, align 4
  %v1_14870.pre = load i32, i32* @r6, align 4
  %v0_14888.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14870

dec_label_pc_14870:                               ; preds = %dec_label_pc_147a0, %dec_label_pc_14810
  %stack_var_-52.0 = phi i32 [ -1, %dec_label_pc_147a0 ], [ %v2_1481c, %dec_label_pc_14810 ]
  %v0_14888 = phi i32 [ %v0_147a8, %dec_label_pc_147a0 ], [ %v0_14888.pre, %dec_label_pc_14810 ]
  %v2_14810 = phi i32 [ %v0_147a8, %dec_label_pc_147a0 ], [ %v0_1486c, %dec_label_pc_14810 ]
  %v0_147c0 = phi i32 [ %v0_147ac, %dec_label_pc_147a0 ], [ %v2_14868, %dec_label_pc_14810 ]
  %v1_14870 = phi i32 [ %v5_1476c, %dec_label_pc_147a0 ], [ %v1_14870.pre, %dec_label_pc_14810 ]
  %stack_var_-48.0 = phi i32 [ -1, %dec_label_pc_147a0 ], [ %v5_1481c, %dec_label_pc_14810 ]
  %v0_14870 = load i32, i32* %sl.global-to-local, align 4
  %v2_14870 = add i32 %v0_14870, %v1_14870
  store i32 %v2_14870, i32* %r3.global-to-local, align 4
  %v3_14874 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_14874, i32* @r2, align 4
  %v3_14878 = icmp ult i32 %v0_147c0, %v2_14870
  %v1_1487c = add i32 %v0_147c0, 16
  store i32 %v1_1487c, i32* %r7.global-to-local, align 4
  %v1_14880 = add i32 %v2_14810, 19
  store i32 %v1_14880, i32* @r0, align 4
  %v1_14884 = add i32 %v0_147c0, 19
  store i32 %v1_14884, i32* @r1, align 4
  br i1 %v3_14878, label %dec_label_pc_147bc, label %dec_label_pc_14890

dec_label_pc_14890:                               ; preds = %dec_label_pc_14870, %dec_label_pc_147e0
  %v1_14890 = phi i32 [ %v0_147f4, %dec_label_pc_147e0 ], [ %v2_14810, %dec_label_pc_14870 ]
  %v0_14890 = phi i32 [ %v1_147f4, %dec_label_pc_147e0 ], [ %v0_14888, %dec_label_pc_14870 ]
  %v2_14890 = sub i32 %v1_14890, %v0_14890
  store i32 %v2_14890, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14894

dec_label_pc_14894:                               ; preds = %dec_label_pc_147fc, %dec_label_pc_14798, %dec_label_pc_14890
  %v0_14894 = phi i32 [ %v0_14894.pre, %dec_label_pc_147fc ], [ %v0_14798, %dec_label_pc_14798 ], [ %v2_14890, %dec_label_pc_14890 ]
  store i32 %v3_14740, i32* @r4, align 4
  store i32 %v9_14740, i32* %r6.global-to-local, align 4
  ret i32 %v0_14894

; uselistorder directives
  uselistorder i32 %v1_14884, { 1, 0 }
  uselistorder i32 %v1_14880, { 1, 0 }
  uselistorder i32 %v1_1487c, { 1, 0 }
  uselistorder i32 %v3_14874, { 1, 0 }
  uselistorder i32 %v0_147c0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_14810, { 0, 3, 1, 2 }
  uselistorder i32 %v0_14818, { 1, 0, 2, 3 }
  uselistorder i32 %v0_147a8, { 1, 0, 2 }
  uselistorder i32 %v5_1476c, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @function_13230, { 5, 1, 0, 2, 4, 3 }
  uselistorder i32 128, { 13, 14, 36, 15, 37, 27, 18, 19, 20, 28, 10, 29, 0, 21, 22, 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 30, 24, 25, 26, 31, 11, 32, 12, 16, 33, 34, 35, 17 }
  uselistorder i32* @sp, { 4, 2, 0, 3, 1 }
  uselistorder i32* @r6, { 3, 133, 134, 135, 255, 256, 361, 362, 363, 364, 365, 366, 367, 369, 368, 384, 385, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 41, 50, 91, 92, 93, 94, 95, 96, 16, 17, 18, 19, 20, 97, 21, 22, 46, 98, 99, 100, 2, 1, 101, 102, 42, 47, 13, 14, 15, 51, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 52, 53, 54, 55, 48, 49, 103, 104, 105, 106, 107, 56, 57, 108, 109, 9, 110, 111, 112, 113, 114, 115, 116, 117, 118, 386, 387, 388, 259, 260, 261, 262, 0, 119, 120, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 11, 130, 131, 132, 154, 155, 156, 157, 10, 158, 159, 160, 5, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 263, 6, 264, 7, 265, 8, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 389, 390, 391, 392, 393, 394, 395, 396, 397, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 245, 248, 246, 247, 249, 250, 12, 251, 252, 253, 254, 257, 258 }
  uselistorder label %dec_label_pc_14894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14870, { 1, 0 }
}

define i32 @function_148a0() local_unnamed_addr {
dec_label_pc_148a0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148a0 = load i32, i32* @r4, align 4
  store i32 %v3_148a0, i32* %stack_var_-8, align 4
  %v0_148a8 = load i32, i32* @r0, align 4
  store i32 %v0_148a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_148a8, -4095
  br i1 %tmp, label %dec_label_pc_148c4, label %dec_label_pc_148b4

dec_label_pc_148b4:                               ; preds = %dec_label_pc_148a0
  %v0_148b4 = call i32 @function_131f0()
  %v0_148b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_148b8 = sub i32 0, %v0_148b8
  %v2_148bc = inttoptr i32 %v0_148b4 to i32*
  store i32 %v1_148b8, i32* %v2_148bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_148c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_148c4

dec_label_pc_148c4:                               ; preds = %dec_label_pc_148a0, %dec_label_pc_148b4
  %v2_148c8 = phi i32 [ %v3_148a0, %dec_label_pc_148a0 ], [ %v2_148c8.pre, %dec_label_pc_148b4 ]
  %v0_148c4 = phi i32 [ %v0_148a8, %dec_label_pc_148a0 ], [ -1, %dec_label_pc_148b4 ]
  store i32 %v2_148c8, i32* @r4, align 4
  ret i32 %v0_148c4

; uselistorder directives
  uselistorder i32 %v0_148a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_148c4, { 1, 0 }
}

define i32 @function_148cc() local_unnamed_addr {
dec_label_pc_148cc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148cc = load i32, i32* @r4, align 4
  store i32 %v3_148cc, i32* %stack_var_-8, align 4
  %v0_148d4 = load i32, i32* @r0, align 4
  store i32 %v0_148d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_148d4, -4095
  br i1 %tmp, label %dec_label_pc_148f0, label %dec_label_pc_148e0

dec_label_pc_148e0:                               ; preds = %dec_label_pc_148cc
  %v0_148e0 = call i32 @function_131f0()
  %v0_148e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_148e4 = sub i32 0, %v0_148e4
  %v2_148e8 = inttoptr i32 %v0_148e0 to i32*
  store i32 %v1_148e4, i32* %v2_148e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_148f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %dec_label_pc_148cc, %dec_label_pc_148e0
  %v2_148f4 = phi i32 [ %v3_148cc, %dec_label_pc_148cc ], [ %v2_148f4.pre, %dec_label_pc_148e0 ]
  %v0_148f0 = phi i32 [ %v0_148d4, %dec_label_pc_148cc ], [ -1, %dec_label_pc_148e0 ]
  store i32 %v2_148f4, i32* @r4, align 4
  ret i32 %v0_148f0

; uselistorder directives
  uselistorder i32 %v0_148d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_148f0, { 1, 0 }
}

define i32 @function_148f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_148f8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148f8 = load i32, i32* @r4, align 4
  store i32 %v3_148f8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1491c, label %dec_label_pc_1490c

dec_label_pc_1490c:                               ; preds = %dec_label_pc_148f8
  %v0_1490c = call i32 @function_131f0()
  %v0_14910 = load i32, i32* %r4.global-to-local, align 4
  %v1_14910 = sub i32 0, %v0_14910
  %v2_14914 = inttoptr i32 %v0_1490c to i32*
  store i32 %v1_14910, i32* %v2_14914, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14920.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1491c

dec_label_pc_1491c:                               ; preds = %dec_label_pc_148f8, %dec_label_pc_1490c
  %v2_14920 = phi i32 [ %v3_148f8, %dec_label_pc_148f8 ], [ %v2_14920.pre, %dec_label_pc_1490c ]
  %v0_1491c = phi i32 [ %arg1, %dec_label_pc_148f8 ], [ -1, %dec_label_pc_1490c ]
  store i32 %v2_14920, i32* %r4.global-to-local, align 4
  ret i32 %v0_1491c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1491c, { 1, 0 }
}

define i32 @function_14924() local_unnamed_addr {
dec_label_pc_14924:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14924 = load i32, i32* @r4, align 4
  store i32 %v3_14924, i32* %stack_var_-8, align 4
  %v0_1492c = load i32, i32* @r0, align 4
  store i32 %v0_1492c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1492c, -4095
  br i1 %tmp, label %dec_label_pc_14948, label %dec_label_pc_14938

dec_label_pc_14938:                               ; preds = %dec_label_pc_14924
  %v0_14938 = call i32 @function_131f0()
  %v0_1493c = load i32, i32* %r4.global-to-local, align 4
  %v1_1493c = sub i32 0, %v0_1493c
  %v2_14940 = inttoptr i32 %v0_14938 to i32*
  store i32 %v1_1493c, i32* %v2_14940, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1494c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14948

dec_label_pc_14948:                               ; preds = %dec_label_pc_14924, %dec_label_pc_14938
  %v2_1494c = phi i32 [ %v3_14924, %dec_label_pc_14924 ], [ %v2_1494c.pre, %dec_label_pc_14938 ]
  %v0_14948 = phi i32 [ %v0_1492c, %dec_label_pc_14924 ], [ -1, %dec_label_pc_14938 ]
  store i32 %v2_1494c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14948

; uselistorder directives
  uselistorder i32 %v0_1492c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14948, { 1, 0 }
}

define i32 @function_14950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14950:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14994, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14950
  %v0_14980 = call i32 @function_131f0()
  %v0_14984 = load i32, i32* %r4.global-to-local, align 4
  %v1_14984 = sub i32 0, %v0_14984
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1498c = inttoptr i32 %v0_14980 to i32*
  store i32 %v1_14984, i32* %v2_1498c, align 4
  %v0_1499c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1499c

dec_label_pc_14994:                               ; preds = %dec_label_pc_14950
  %v2_14994 = icmp eq i32 %arg1, 0
  br i1 %v2_14994, label %dec_label_pc_149a8, label %dec_label_pc_1499c

dec_label_pc_1499c:                               ; preds = %dec_label_pc_14994, %dec_label_pc_14980
  %v0_1499c = phi i32 [ %arg1, %dec_label_pc_14994 ], [ %v0_1499c.pre, %dec_label_pc_14980 ]
  br label %dec_label_pc_149ac

dec_label_pc_149a8:                               ; preds = %dec_label_pc_14994
  br label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %dec_label_pc_1499c, %dec_label_pc_149a8
  %v14_149b0 = phi i32 [ %v0_1499c, %dec_label_pc_1499c ], [ %tmp9, %dec_label_pc_149a8 ]
  ret i32 %v14_149b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_149ac, { 1, 0 }
}

define i32 @function_149b4(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149b4:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_149b4 = load i32, i32* @r4, align 4
  store i32 %v3_149b4, i32* %stack_var_-8, align 4
  %v6_149b8 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_149b8, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_149b8, -4095
  br i1 %tmp6, label %dec_label_pc_149d8, label %dec_label_pc_149c8

dec_label_pc_149c8:                               ; preds = %dec_label_pc_149b4
  %v0_149c8 = call i32 @function_131f0()
  %v0_149cc = load i32, i32* %r4.global-to-local, align 4
  %v1_149cc = sub i32 0, %v0_149cc
  %v2_149d0 = inttoptr i32 %v0_149c8 to i32*
  store i32 %v1_149cc, i32* %v2_149d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_149d8

dec_label_pc_149d8:                               ; preds = %dec_label_pc_149b4, %dec_label_pc_149c8
  %v0_149d8 = phi i32 [ %v6_149b8, %dec_label_pc_149b4 ], [ -1, %dec_label_pc_149c8 ]
  %v2_149dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_149dc, i32* %r4.global-to-local, align 4
  ret i32 %v0_149d8

; uselistorder directives
  uselistorder i32 %v6_149b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_149d8, { 1, 0 }
}

define i32 @function_149e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_149e0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_149e0 = load i32, i32* @r4, align 4
  store i32 %v3_149e0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1dc48.490 to i32), i32* %r4.global-to-local, align 4
  %v2_149e8 = load i32, i32* @global_var_1dc48.490, align 4
  %v2_149ec = icmp eq i32 %v2_149e8, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_149ec, label %dec_label_pc_149fc, label %dec_label_pc_14a08

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149e0
  %v2_149fc = call i32 @function_153f8(i32* null)
  %v1_14a00 = icmp slt i32 %v2_149fc, 0
  br i1 %v1_14a00, label %dec_label_pc_14a28, label %dec_label_pc_14a08thread-pre-split

dec_label_pc_14a08thread-pre-split:               ; preds = %dec_label_pc_149fc
  %v0_14a0c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_14a08.pre = load i32, i32* @global_var_1dc48.490, align 4
  br label %dec_label_pc_14a08

dec_label_pc_14a08:                               ; preds = %dec_label_pc_14a08thread-pre-split, %dec_label_pc_149e0
  %v2_14a08 = phi i32 [ %v2_14a08.pre, %dec_label_pc_14a08thread-pre-split ], [ %v2_149e8, %dec_label_pc_149e0 ]
  %v1_14a14 = phi i32 [ %v0_14a0c.pr, %dec_label_pc_14a08thread-pre-split ], [ %arg1, %dec_label_pc_149e0 ]
  %v2_14a0c = icmp eq i32 %v1_14a14, 0
  store i32 %v2_14a08, i32* %r4.global-to-local, align 4
  br i1 %v2_14a0c, label %dec_label_pc_14a2c, label %dec_label_pc_14a1c

dec_label_pc_14a1c:                               ; preds = %dec_label_pc_14a08
  %v2_14a14 = add i32 %v1_14a14, %v2_14a08
  %v1_14a1c = inttoptr i32 %v2_14a14 to i32*
  %v2_14a1c = call i32 @function_153f8(i32* %v1_14a1c)
  %v1_14a20 = icmp slt i32 %v2_14a1c, 0
  br i1 %v1_14a20, label %dec_label_pc_14a28, label %dec_label_pc_14a1c.dec_label_pc_14a2c_crit_edge

dec_label_pc_14a1c.dec_label_pc_14a2c_crit_edge:  ; preds = %dec_label_pc_14a1c
  %v0_14a2c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a2c

dec_label_pc_14a28:                               ; preds = %dec_label_pc_14a1c, %dec_label_pc_149fc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a2c

dec_label_pc_14a2c:                               ; preds = %dec_label_pc_14a1c.dec_label_pc_14a2c_crit_edge, %dec_label_pc_14a08, %dec_label_pc_14a28
  %v0_14a2c = phi i32 [ %v0_14a2c.pre, %dec_label_pc_14a1c.dec_label_pc_14a2c_crit_edge ], [ %v2_14a08, %dec_label_pc_14a08 ], [ -1, %dec_label_pc_14a28 ]
  %v2_14a30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14a30, i32* @r4, align 4
  ret i32 %v0_14a2c

; uselistorder directives
  uselistorder i32 %v2_14a08, { 1, 0, 2 }
  uselistorder i32* null, { 0, 4, 6, 22, 23, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 2, 18, 3, 19, 20, 21 }
  uselistorder label %dec_label_pc_14a2c, { 2, 0, 1 }
}

define i32 @function_14a38(%tms* %arg1) local_unnamed_addr {
dec_label_pc_14a38:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a38 = load i32, i32* @r4, align 4
  store i32 %v3_14a38, i32* %stack_var_-8, align 4
  %v3_14a3c = call i32 @times(%tms* %arg1)
  store i32 %v3_14a3c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_14a3c, -4095
  br i1 %tmp, label %dec_label_pc_14a5c, label %dec_label_pc_14a4c

dec_label_pc_14a4c:                               ; preds = %dec_label_pc_14a38
  %v0_14a4c = call i32 @function_131f0()
  %v0_14a50 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a50 = sub i32 0, %v0_14a50
  %v2_14a54 = inttoptr i32 %v0_14a4c to i32*
  store i32 %v1_14a50, i32* %v2_14a54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a5c

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a38, %dec_label_pc_14a4c
  %v0_14a5c = phi i32 [ %v3_14a3c, %dec_label_pc_14a38 ], [ -1, %dec_label_pc_14a4c ]
  %v2_14a60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a60, i32* %r4.global-to-local, align 4
  ret i32 %v0_14a5c

; uselistorder directives
  uselistorder i32 %v3_14a3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a5c, { 1, 0 }
}

define i32 @function_14a64(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a64:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 96, i32* @r2, align 4
  %v2_14a80 = inttoptr i32 %arg2 to i8*
  %v3_14a80 = call i32 @function_13250(i8* %v2_14a80, i32 0)
  %v1_14a84 = add i32 %tmp, 1
  %v2_14a84 = inttoptr i32 %v1_14a84 to i8*
  %v3_14a84 = load i8, i8* %v2_14a84, align 1
  %v4_14a84 = zext i8 %v3_14a84 to i32
  %v1_14a88 = add i32 %tmp, 5
  %v2_14a88 = inttoptr i32 %v1_14a88 to i8*
  %v3_14a88 = load i8, i8* %v2_14a88, align 1
  %v4_14a88 = zext i8 %v3_14a88 to i32
  %v2_14a8c = load i8, i8* %arg1, align 1
  %v3_14a8c = zext i8 %v2_14a8c to i32
  %v1_14a90 = add i32 %tmp, 4
  %v2_14a90 = inttoptr i32 %v1_14a90 to i8*
  %v3_14a90 = load i8, i8* %v2_14a90, align 1
  %v4_14a90 = zext i8 %v3_14a90 to i32
  %v1_14a94 = add i32 %tmp, 2
  %v2_14a94 = inttoptr i32 %v1_14a94 to i8*
  %v3_14a94 = load i8, i8* %v2_14a94, align 1
  %v4_14a94 = zext i8 %v3_14a94 to i32
  %v1_14a98 = add i32 %tmp, 6
  %v2_14a98 = inttoptr i32 %v1_14a98 to i8*
  %v3_14a98 = load i8, i8* %v2_14a98, align 1
  %v4_14a98 = zext i8 %v3_14a98 to i32
  %v1_14a9c = add i32 %tmp, 3
  %v2_14a9c = inttoptr i32 %v1_14a9c to i8*
  %v3_14a9c = load i8, i8* %v2_14a9c, align 1
  %v4_14a9c = zext i8 %v3_14a9c to i32
  %v4_14aa0 = mul nuw nsw i32 %v4_14a84, 256
  %v5_14aa0 = or i32 %v3_14a8c, %v4_14aa0
  %v4_14aa4 = mul nuw nsw i32 %v4_14a88, 256
  %v5_14aa4 = or i32 %v4_14a90, %v4_14aa4
  %v1_14aa8 = add i32 %tmp, 7
  %v2_14aa8 = inttoptr i32 %v1_14aa8 to i8*
  %v3_14aa8 = load i8, i8* %v2_14aa8, align 1
  %v4_14aa8 = zext i8 %v3_14aa8 to i32
  %v4_14aac = mul nuw nsw i32 %v4_14a94, 65536
  %v5_14aac = or i32 %v4_14aac, %v5_14aa0
  %v4_14ab0 = mul nuw nsw i32 %v4_14a98, 65536
  %v5_14ab0 = or i32 %v4_14ab0, %v5_14aa4
  %v4_14ab4 = mul nuw i32 %v4_14a9c, 16777216
  %v5_14ab4 = or i32 %v4_14ab4, %v5_14aac
  %v4_14ab8 = mul nuw i32 %v4_14aa8, 16777216
  %v5_14ab8 = or i32 %v4_14ab8, %v5_14ab0
  store i32 %v5_14ab8, i32* %r3.global-to-local, align 4
  %v0_14abc = load i32, i32* %r7.global-to-local, align 4
  %v1_14abc = inttoptr i32 %v0_14abc to i32*
  store i32 %v5_14ab4, i32* %v1_14abc, align 4
  %v3_14abc = add i32 %v0_14abc, 4
  %v4_14abc = inttoptr i32 %v3_14abc to i32*
  %v5_14abc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_14abc, i32* %v4_14abc, align 4
  %v0_14ac0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ac0 = add i32 %v0_14ac0, 89
  %v2_14ac0 = inttoptr i32 %v1_14ac0 to i8*
  %v3_14ac0 = load i8, i8* %v2_14ac0, align 1
  %v4_14ac0 = zext i8 %v3_14ac0 to i32
  %v1_14ac4 = add i32 %v0_14ac0, 93
  %v2_14ac4 = inttoptr i32 %v1_14ac4 to i8*
  %v3_14ac4 = load i8, i8* %v2_14ac4, align 1
  %v4_14ac4 = zext i8 %v3_14ac4 to i32
  %v1_14ac8 = add i32 %v0_14ac0, 88
  %v2_14ac8 = inttoptr i32 %v1_14ac8 to i8*
  %v3_14ac8 = load i8, i8* %v2_14ac8, align 1
  %v4_14ac8 = zext i8 %v3_14ac8 to i32
  %v1_14acc = add i32 %v0_14ac0, 92
  %v2_14acc = inttoptr i32 %v1_14acc to i8*
  %v3_14acc = load i8, i8* %v2_14acc, align 1
  %v4_14acc = zext i8 %v3_14acc to i32
  store i32 %v4_14acc, i32* %r3.global-to-local, align 4
  %v1_14ad0 = add i32 %v0_14ac0, 94
  %v2_14ad0 = inttoptr i32 %v1_14ad0 to i8*
  %v3_14ad0 = load i8, i8* %v2_14ad0, align 1
  %v4_14ad0 = zext i8 %v3_14ad0 to i32
  %v1_14ad4 = add i32 %v0_14ac0, 90
  %v2_14ad4 = inttoptr i32 %v1_14ad4 to i8*
  %v3_14ad4 = load i8, i8* %v2_14ad4, align 1
  %v4_14ad4 = zext i8 %v3_14ad4 to i32
  %v1_14ad8 = add i32 %v0_14ac0, 91
  %v2_14ad8 = inttoptr i32 %v1_14ad8 to i8*
  %v3_14ad8 = load i8, i8* %v2_14ad8, align 1
  %v4_14ad8 = zext i8 %v3_14ad8 to i32
  %v4_14adc = mul nuw nsw i32 %v4_14ac0, 256
  %v5_14adc = or i32 %v4_14ac8, %v4_14adc
  %v4_14ae0 = mul nuw nsw i32 %v4_14ac4, 256
  %v5_14ae0 = or i32 %v4_14acc, %v4_14ae0
  store i32 %v5_14ae0, i32* %r3.global-to-local, align 4
  %v1_14ae4 = add i32 %v0_14ac0, 95
  %v2_14ae4 = inttoptr i32 %v1_14ae4 to i8*
  %v3_14ae4 = load i8, i8* %v2_14ae4, align 1
  %v4_14ae4 = zext i8 %v3_14ae4 to i32
  %v4_14ae8 = mul nuw nsw i32 %v4_14ad0, 65536
  %v5_14ae8 = or i32 %v4_14ae8, %v5_14ae0
  store i32 %v5_14ae8, i32* %r3.global-to-local, align 4
  %v4_14aec = mul nuw nsw i32 %v4_14ad4, 65536
  %v5_14aec = or i32 %v4_14aec, %v5_14adc
  %v4_14af0 = mul nuw i32 %v4_14ad8, 16777216
  %v5_14af0 = or i32 %v4_14af0, %v5_14aec
  %v4_14af4 = mul nuw i32 %v4_14ae4, 16777216
  %v5_14af4 = or i32 %v4_14af4, %v5_14ae8
  store i32 %v5_14af4, i32* %r6.global-to-local, align 4
  %v1_14af8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14af8 = add i32 %v1_14af8, 88
  %v3_14af8 = inttoptr i32 %v2_14af8 to i32*
  store i32 %v5_14af0, i32* %v3_14af8, align 4
  %v0_14afc = load i32, i32* %r6.global-to-local, align 4
  %v1_14afc = load i32, i32* %r7.global-to-local, align 4
  %v2_14afc = add i32 %v1_14afc, 92
  %v3_14afc = inttoptr i32 %v2_14afc to i32*
  store i32 %v0_14afc, i32* %v3_14afc, align 4
  %v0_14b00 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b00 = add i32 %v0_14b00, 13
  %v2_14b00 = inttoptr i32 %v1_14b00 to i8*
  %v3_14b00 = load i8, i8* %v2_14b00, align 1
  %v4_14b00 = zext i8 %v3_14b00 to i32
  %v1_14b04 = add i32 %v0_14b00, 12
  %v2_14b04 = inttoptr i32 %v1_14b04 to i8*
  %v3_14b04 = load i8, i8* %v2_14b04, align 1
  %v4_14b04 = zext i8 %v3_14b04 to i32
  store i32 %v4_14b04, i32* %r3.global-to-local, align 4
  %v1_14b08 = add i32 %v0_14b00, 14
  %v2_14b08 = inttoptr i32 %v1_14b08 to i8*
  %v3_14b08 = load i8, i8* %v2_14b08, align 1
  %v4_14b08 = zext i8 %v3_14b08 to i32
  %v4_14b0c = mul nuw nsw i32 %v4_14b00, 256
  %v5_14b0c = or i32 %v4_14b04, %v4_14b0c
  store i32 %v5_14b0c, i32* %r3.global-to-local, align 4
  %v1_14b10 = add i32 %v0_14b00, 15
  %v2_14b10 = inttoptr i32 %v1_14b10 to i8*
  %v3_14b10 = load i8, i8* %v2_14b10, align 1
  %v4_14b10 = zext i8 %v3_14b10 to i32
  %v4_14b14 = mul nuw nsw i32 %v4_14b08, 65536
  %v5_14b14 = or i32 %v4_14b14, %v5_14b0c
  %v4_14b18 = mul nuw i32 %v4_14b10, 16777216
  %v5_14b18 = or i32 %v5_14b14, %v4_14b18
  store i32 %v5_14b18, i32* %r3.global-to-local, align 4
  %v1_14b1c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b1c = add i32 %v1_14b1c, 12
  %v3_14b1c = inttoptr i32 %v2_14b1c to i32*
  store i32 %v5_14b18, i32* %v3_14b1c, align 4
  %v0_14b20 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b20 = add i32 %v0_14b20, 17
  %v2_14b20 = inttoptr i32 %v1_14b20 to i8*
  %v3_14b20 = load i8, i8* %v2_14b20, align 1
  %v4_14b20 = zext i8 %v3_14b20 to i32
  %v1_14b24 = add i32 %v0_14b20, 16
  %v2_14b24 = inttoptr i32 %v1_14b24 to i8*
  %v3_14b24 = load i8, i8* %v2_14b24, align 1
  %v4_14b24 = zext i8 %v3_14b24 to i32
  store i32 %v4_14b24, i32* %r3.global-to-local, align 4
  %v1_14b28 = add i32 %v0_14b20, 18
  %v2_14b28 = inttoptr i32 %v1_14b28 to i8*
  %v3_14b28 = load i8, i8* %v2_14b28, align 1
  %v4_14b28 = zext i8 %v3_14b28 to i32
  %v4_14b2c = mul nuw nsw i32 %v4_14b20, 256
  %v5_14b2c = or i32 %v4_14b24, %v4_14b2c
  store i32 %v5_14b2c, i32* %r3.global-to-local, align 4
  %v1_14b30 = add i32 %v0_14b20, 19
  %v2_14b30 = inttoptr i32 %v1_14b30 to i8*
  %v3_14b30 = load i8, i8* %v2_14b30, align 1
  %v4_14b30 = zext i8 %v3_14b30 to i32
  %v4_14b34 = mul nuw nsw i32 %v4_14b28, 65536
  %v5_14b34 = or i32 %v4_14b34, %v5_14b2c
  %v4_14b38 = mul nuw i32 %v4_14b30, 16777216
  %v5_14b38 = or i32 %v5_14b34, %v4_14b38
  store i32 %v5_14b38, i32* %r3.global-to-local, align 4
  %v1_14b3c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b3c = add i32 %v1_14b3c, 16
  %v3_14b3c = inttoptr i32 %v2_14b3c to i32*
  store i32 %v5_14b38, i32* %v3_14b3c, align 4
  %v0_14b40 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b40 = add i32 %v0_14b40, 21
  %v2_14b40 = inttoptr i32 %v1_14b40 to i8*
  %v3_14b40 = load i8, i8* %v2_14b40, align 1
  %v4_14b40 = zext i8 %v3_14b40 to i32
  %v1_14b44 = add i32 %v0_14b40, 20
  %v2_14b44 = inttoptr i32 %v1_14b44 to i8*
  %v3_14b44 = load i8, i8* %v2_14b44, align 1
  %v4_14b44 = zext i8 %v3_14b44 to i32
  store i32 %v4_14b44, i32* %r3.global-to-local, align 4
  %v1_14b48 = add i32 %v0_14b40, 22
  %v2_14b48 = inttoptr i32 %v1_14b48 to i8*
  %v3_14b48 = load i8, i8* %v2_14b48, align 1
  %v4_14b48 = zext i8 %v3_14b48 to i32
  %v4_14b4c = mul nuw nsw i32 %v4_14b40, 256
  %v5_14b4c = or i32 %v4_14b44, %v4_14b4c
  store i32 %v5_14b4c, i32* %r3.global-to-local, align 4
  %v1_14b50 = add i32 %v0_14b40, 23
  %v2_14b50 = inttoptr i32 %v1_14b50 to i8*
  %v3_14b50 = load i8, i8* %v2_14b50, align 1
  %v4_14b50 = zext i8 %v3_14b50 to i32
  %v4_14b54 = mul nuw nsw i32 %v4_14b48, 65536
  %v5_14b54 = or i32 %v4_14b54, %v5_14b4c
  %v4_14b58 = mul nuw i32 %v4_14b50, 16777216
  %v5_14b58 = or i32 %v5_14b54, %v4_14b58
  store i32 %v5_14b58, i32* %r3.global-to-local, align 4
  %v1_14b5c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b5c = add i32 %v1_14b5c, 20
  %v3_14b5c = inttoptr i32 %v2_14b5c to i32*
  store i32 %v5_14b58, i32* %v3_14b5c, align 4
  %v0_14b60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b60 = add i32 %v0_14b60, 25
  %v2_14b60 = inttoptr i32 %v1_14b60 to i8*
  %v3_14b60 = load i8, i8* %v2_14b60, align 1
  %v4_14b60 = zext i8 %v3_14b60 to i32
  %v1_14b64 = add i32 %v0_14b60, 24
  %v2_14b64 = inttoptr i32 %v1_14b64 to i8*
  %v3_14b64 = load i8, i8* %v2_14b64, align 1
  %v4_14b64 = zext i8 %v3_14b64 to i32
  store i32 %v4_14b64, i32* %r3.global-to-local, align 4
  %v1_14b68 = add i32 %v0_14b60, 26
  %v2_14b68 = inttoptr i32 %v1_14b68 to i8*
  %v3_14b68 = load i8, i8* %v2_14b68, align 1
  %v4_14b68 = zext i8 %v3_14b68 to i32
  %v4_14b6c = mul nuw nsw i32 %v4_14b60, 256
  %v5_14b6c = or i32 %v4_14b64, %v4_14b6c
  store i32 %v5_14b6c, i32* %r3.global-to-local, align 4
  %v1_14b70 = add i32 %v0_14b60, 27
  %v2_14b70 = inttoptr i32 %v1_14b70 to i8*
  %v3_14b70 = load i8, i8* %v2_14b70, align 1
  %v4_14b70 = zext i8 %v3_14b70 to i32
  %v4_14b74 = mul nuw nsw i32 %v4_14b68, 65536
  %v5_14b74 = or i32 %v4_14b74, %v5_14b6c
  %v4_14b78 = mul nuw i32 %v4_14b70, 16777216
  %v5_14b78 = or i32 %v5_14b74, %v4_14b78
  store i32 %v5_14b78, i32* %r3.global-to-local, align 4
  %v1_14b7c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b7c = add i32 %v1_14b7c, 24
  %v3_14b7c = inttoptr i32 %v2_14b7c to i32*
  store i32 %v5_14b78, i32* %v3_14b7c, align 4
  %v0_14b80 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b80 = add i32 %v0_14b80, 29
  %v2_14b80 = inttoptr i32 %v1_14b80 to i8*
  %v3_14b80 = load i8, i8* %v2_14b80, align 1
  %v4_14b80 = zext i8 %v3_14b80 to i32
  %v1_14b84 = add i32 %v0_14b80, 28
  %v2_14b84 = inttoptr i32 %v1_14b84 to i8*
  %v3_14b84 = load i8, i8* %v2_14b84, align 1
  %v4_14b84 = zext i8 %v3_14b84 to i32
  store i32 %v4_14b84, i32* %r3.global-to-local, align 4
  %v1_14b88 = add i32 %v0_14b80, 30
  %v2_14b88 = inttoptr i32 %v1_14b88 to i8*
  %v3_14b88 = load i8, i8* %v2_14b88, align 1
  %v4_14b88 = zext i8 %v3_14b88 to i32
  %v4_14b8c = mul nuw nsw i32 %v4_14b80, 256
  %v5_14b8c = or i32 %v4_14b84, %v4_14b8c
  store i32 %v5_14b8c, i32* %r3.global-to-local, align 4
  %v1_14b90 = add i32 %v0_14b80, 31
  %v2_14b90 = inttoptr i32 %v1_14b90 to i8*
  %v3_14b90 = load i8, i8* %v2_14b90, align 1
  %v4_14b90 = zext i8 %v3_14b90 to i32
  %v4_14b94 = mul nuw nsw i32 %v4_14b88, 65536
  %v5_14b94 = or i32 %v4_14b94, %v5_14b8c
  %v4_14b98 = mul nuw i32 %v4_14b90, 16777216
  %v5_14b98 = or i32 %v5_14b94, %v4_14b98
  store i32 %v5_14b98, i32* %r3.global-to-local, align 4
  %v1_14b9c = load i32, i32* %r7.global-to-local, align 4
  %v2_14b9c = add i32 %v1_14b9c, 28
  %v3_14b9c = inttoptr i32 %v2_14b9c to i32*
  store i32 %v5_14b98, i32* %v3_14b9c, align 4
  %v0_14ba0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ba0 = add i32 %v0_14ba0, 33
  %v2_14ba0 = inttoptr i32 %v1_14ba0 to i8*
  %v3_14ba0 = load i8, i8* %v2_14ba0, align 1
  %v4_14ba0 = zext i8 %v3_14ba0 to i32
  %v1_14ba4 = add i32 %v0_14ba0, 37
  %v2_14ba4 = inttoptr i32 %v1_14ba4 to i8*
  %v3_14ba4 = load i8, i8* %v2_14ba4, align 1
  %v4_14ba4 = zext i8 %v3_14ba4 to i32
  %v1_14ba8 = add i32 %v0_14ba0, 32
  %v2_14ba8 = inttoptr i32 %v1_14ba8 to i8*
  %v3_14ba8 = load i8, i8* %v2_14ba8, align 1
  %v4_14ba8 = zext i8 %v3_14ba8 to i32
  %v1_14bac = add i32 %v0_14ba0, 36
  %v2_14bac = inttoptr i32 %v1_14bac to i8*
  %v3_14bac = load i8, i8* %v2_14bac, align 1
  %v4_14bac = zext i8 %v3_14bac to i32
  store i32 %v4_14bac, i32* %r3.global-to-local, align 4
  %v1_14bb0 = add i32 %v0_14ba0, 34
  %v2_14bb0 = inttoptr i32 %v1_14bb0 to i8*
  %v3_14bb0 = load i8, i8* %v2_14bb0, align 1
  %v4_14bb0 = zext i8 %v3_14bb0 to i32
  %v1_14bb4 = add i32 %v0_14ba0, 38
  %v2_14bb4 = inttoptr i32 %v1_14bb4 to i8*
  %v3_14bb4 = load i8, i8* %v2_14bb4, align 1
  %v4_14bb4 = zext i8 %v3_14bb4 to i32
  %v1_14bb8 = add i32 %v0_14ba0, 35
  %v2_14bb8 = inttoptr i32 %v1_14bb8 to i8*
  %v3_14bb8 = load i8, i8* %v2_14bb8, align 1
  %v4_14bb8 = zext i8 %v3_14bb8 to i32
  %v4_14bbc = mul nuw nsw i32 %v4_14ba0, 256
  %v5_14bbc = or i32 %v4_14ba8, %v4_14bbc
  %v4_14bc0 = mul nuw nsw i32 %v4_14ba4, 256
  %v5_14bc0 = or i32 %v4_14bac, %v4_14bc0
  store i32 %v5_14bc0, i32* %r3.global-to-local, align 4
  %v1_14bc4 = add i32 %v0_14ba0, 39
  %v2_14bc4 = inttoptr i32 %v1_14bc4 to i8*
  %v3_14bc4 = load i8, i8* %v2_14bc4, align 1
  %v4_14bc4 = zext i8 %v3_14bc4 to i32
  %v4_14bc8 = mul nuw nsw i32 %v4_14bb0, 65536
  %v5_14bc8 = or i32 %v4_14bc8, %v5_14bbc
  %v4_14bcc = mul nuw nsw i32 %v4_14bb4, 65536
  %v5_14bcc = or i32 %v4_14bcc, %v5_14bc0
  %v4_14bd0 = mul nuw i32 %v4_14bb8, 16777216
  %v5_14bd0 = or i32 %v5_14bc8, %v4_14bd0
  %v4_14bd4 = mul nuw i32 %v4_14bc4, 16777216
  %v5_14bd4 = or i32 %v5_14bcc, %v4_14bd4
  store i32 %v5_14bd4, i32* %r3.global-to-local, align 4
  %v1_14be8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14be8 = add i32 %v1_14be8, 32
  %v3_14be8 = inttoptr i32 %v2_14be8 to i32*
  store i32 %v5_14bd0, i32* %v3_14be8, align 4
  %v0_14bec = load i32, i32* %r3.global-to-local, align 4
  %v1_14bec = load i32, i32* %r7.global-to-local, align 4
  %v2_14bec = add i32 %v1_14bec, 36
  %v3_14bec = inttoptr i32 %v2_14bec to i32*
  store i32 %v0_14bec, i32* %v3_14bec, align 4
  %v0_14bf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bf0 = add i32 %v0_14bf0, 45
  %v2_14bf0 = inttoptr i32 %v1_14bf0 to i8*
  %v3_14bf0 = load i8, i8* %v2_14bf0, align 1
  %v4_14bf0 = zext i8 %v3_14bf0 to i32
  %v1_14bf4 = add i32 %v0_14bf0, 49
  %v2_14bf4 = inttoptr i32 %v1_14bf4 to i8*
  %v3_14bf4 = load i8, i8* %v2_14bf4, align 1
  %v4_14bf4 = zext i8 %v3_14bf4 to i32
  %v1_14bf8 = add i32 %v0_14bf0, 44
  %v2_14bf8 = inttoptr i32 %v1_14bf8 to i8*
  %v3_14bf8 = load i8, i8* %v2_14bf8, align 1
  %v4_14bf8 = zext i8 %v3_14bf8 to i32
  %v1_14bfc = add i32 %v0_14bf0, 48
  %v2_14bfc = inttoptr i32 %v1_14bfc to i8*
  %v3_14bfc = load i8, i8* %v2_14bfc, align 1
  %v4_14bfc = zext i8 %v3_14bfc to i32
  store i32 %v4_14bfc, i32* %r3.global-to-local, align 4
  %v1_14c00 = add i32 %v0_14bf0, 46
  %v2_14c00 = inttoptr i32 %v1_14c00 to i8*
  %v3_14c00 = load i8, i8* %v2_14c00, align 1
  %v4_14c00 = zext i8 %v3_14c00 to i32
  %v1_14c04 = add i32 %v0_14bf0, 50
  %v2_14c04 = inttoptr i32 %v1_14c04 to i8*
  %v3_14c04 = load i8, i8* %v2_14c04, align 1
  %v4_14c04 = zext i8 %v3_14c04 to i32
  %v1_14c08 = add i32 %v0_14bf0, 47
  %v2_14c08 = inttoptr i32 %v1_14c08 to i8*
  %v3_14c08 = load i8, i8* %v2_14c08, align 1
  %v4_14c08 = zext i8 %v3_14c08 to i32
  %v4_14c0c = mul nuw nsw i32 %v4_14bf0, 256
  %v5_14c0c = or i32 %v4_14bf8, %v4_14c0c
  %v4_14c10 = mul nuw nsw i32 %v4_14bf4, 256
  %v5_14c10 = or i32 %v4_14bfc, %v4_14c10
  store i32 %v5_14c10, i32* %r3.global-to-local, align 4
  %v1_14c14 = add i32 %v0_14bf0, 51
  %v2_14c14 = inttoptr i32 %v1_14c14 to i8*
  %v3_14c14 = load i8, i8* %v2_14c14, align 1
  %v4_14c14 = zext i8 %v3_14c14 to i32
  %v4_14c18 = mul nuw nsw i32 %v4_14c00, 65536
  %v5_14c18 = or i32 %v4_14c18, %v5_14c0c
  %v4_14c1c = mul nuw nsw i32 %v4_14c04, 65536
  %v5_14c1c = or i32 %v4_14c1c, %v5_14c10
  %v4_14c20 = mul nuw i32 %v4_14c08, 16777216
  %v5_14c20 = or i32 %v5_14c18, %v4_14c20
  %v4_14c24 = mul nuw i32 %v4_14c14, 16777216
  %v5_14c24 = or i32 %v5_14c1c, %v4_14c24
  store i32 %v5_14c24, i32* %r3.global-to-local, align 4
  %v1_14c38 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c38 = add i32 %v1_14c38, 44
  %v3_14c38 = inttoptr i32 %v2_14c38 to i32*
  store i32 %v5_14c20, i32* %v3_14c38, align 4
  %v0_14c3c = load i32, i32* %r3.global-to-local, align 4
  %v1_14c3c = load i32, i32* %r7.global-to-local, align 4
  %v2_14c3c = add i32 %v1_14c3c, 48
  %v3_14c3c = inttoptr i32 %v2_14c3c to i32*
  store i32 %v0_14c3c, i32* %v3_14c3c, align 4
  %v0_14c40 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c40 = add i32 %v0_14c40, 53
  %v2_14c40 = inttoptr i32 %v1_14c40 to i8*
  %v3_14c40 = load i8, i8* %v2_14c40, align 1
  %v4_14c40 = zext i8 %v3_14c40 to i32
  %v1_14c44 = add i32 %v0_14c40, 52
  %v2_14c44 = inttoptr i32 %v1_14c44 to i8*
  %v3_14c44 = load i8, i8* %v2_14c44, align 1
  %v4_14c44 = zext i8 %v3_14c44 to i32
  store i32 %v4_14c44, i32* %r3.global-to-local, align 4
  %v1_14c48 = add i32 %v0_14c40, 54
  %v2_14c48 = inttoptr i32 %v1_14c48 to i8*
  %v3_14c48 = load i8, i8* %v2_14c48, align 1
  %v4_14c48 = zext i8 %v3_14c48 to i32
  %v4_14c4c = mul nuw nsw i32 %v4_14c40, 256
  %v5_14c4c = or i32 %v4_14c44, %v4_14c4c
  store i32 %v5_14c4c, i32* %r3.global-to-local, align 4
  %v1_14c50 = add i32 %v0_14c40, 55
  %v2_14c50 = inttoptr i32 %v1_14c50 to i8*
  %v3_14c50 = load i8, i8* %v2_14c50, align 1
  %v4_14c50 = zext i8 %v3_14c50 to i32
  %v4_14c54 = mul nuw nsw i32 %v4_14c48, 65536
  %v5_14c54 = or i32 %v4_14c54, %v5_14c4c
  %v4_14c58 = mul nuw i32 %v4_14c50, 16777216
  %v5_14c58 = or i32 %v5_14c54, %v4_14c58
  store i32 %v5_14c58, i32* %r3.global-to-local, align 4
  %v1_14c5c = load i32, i32* %r7.global-to-local, align 4
  %v2_14c5c = add i32 %v1_14c5c, 52
  %v3_14c5c = inttoptr i32 %v2_14c5c to i32*
  store i32 %v5_14c58, i32* %v3_14c5c, align 4
  %v0_14c60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c60 = add i32 %v0_14c60, 57
  %v2_14c60 = inttoptr i32 %v1_14c60 to i8*
  %v3_14c60 = load i8, i8* %v2_14c60, align 1
  %v4_14c60 = zext i8 %v3_14c60 to i32
  %v1_14c64 = add i32 %v0_14c60, 56
  %v2_14c64 = inttoptr i32 %v1_14c64 to i8*
  %v3_14c64 = load i8, i8* %v2_14c64, align 1
  %v4_14c64 = zext i8 %v3_14c64 to i32
  %v1_14c68 = add i32 %v0_14c60, 60
  %v2_14c68 = inttoptr i32 %v1_14c68 to i8*
  %v3_14c68 = load i8, i8* %v2_14c68, align 1
  %v4_14c68 = zext i8 %v3_14c68 to i32
  store i32 %v4_14c68, i32* %r3.global-to-local, align 4
  %v1_14c6c = add i32 %v0_14c60, 61
  %v2_14c6c = inttoptr i32 %v1_14c6c to i8*
  %v3_14c6c = load i8, i8* %v2_14c6c, align 1
  %v4_14c6c = zext i8 %v3_14c6c to i32
  %v1_14c70 = add i32 %v0_14c60, 58
  %v2_14c70 = inttoptr i32 %v1_14c70 to i8*
  %v3_14c70 = load i8, i8* %v2_14c70, align 1
  %v4_14c70 = zext i8 %v3_14c70 to i32
  %v1_14c74 = add i32 %v0_14c60, 62
  %v2_14c74 = inttoptr i32 %v1_14c74 to i8*
  %v3_14c74 = load i8, i8* %v2_14c74, align 1
  %v4_14c74 = zext i8 %v3_14c74 to i32
  %v1_14c78 = add i32 %v0_14c60, 59
  %v2_14c78 = inttoptr i32 %v1_14c78 to i8*
  %v3_14c78 = load i8, i8* %v2_14c78, align 1
  %v4_14c78 = zext i8 %v3_14c78 to i32
  %v4_14c7c = mul nuw nsw i32 %v4_14c60, 256
  %v5_14c7c = or i32 %v4_14c64, %v4_14c7c
  %v4_14c80 = mul nuw nsw i32 %v4_14c6c, 256
  %v5_14c80 = or i32 %v4_14c80, %v4_14c68
  store i32 %v5_14c80, i32* %r3.global-to-local, align 4
  %v1_14c84 = add i32 %v0_14c60, 63
  %v2_14c84 = inttoptr i32 %v1_14c84 to i8*
  %v3_14c84 = load i8, i8* %v2_14c84, align 1
  %v4_14c84 = zext i8 %v3_14c84 to i32
  %v4_14c88 = mul nuw nsw i32 %v4_14c70, 65536
  %v5_14c88 = or i32 %v4_14c88, %v5_14c7c
  %v4_14c8c = mul nuw nsw i32 %v4_14c74, 65536
  %v5_14c8c = or i32 %v4_14c8c, %v5_14c80
  %v4_14c90 = mul nuw i32 %v4_14c84, 16777216
  %v5_14c90 = or i32 %v5_14c8c, %v4_14c90
  %v4_14c94 = mul nuw i32 %v4_14c78, 16777216
  %v5_14c94 = or i32 %v5_14c88, %v4_14c94
  store i32 %v5_14c90, i32* %r3.global-to-local, align 4
  %v1_14ca4 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ca4 = add i32 %v1_14ca4, 56
  %v3_14ca4 = inttoptr i32 %v2_14ca4 to i32*
  store i32 %v5_14c94, i32* %v3_14ca4, align 4
  %v0_14ca8 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ca8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ca8 = add i32 %v1_14ca8, 60
  %v3_14ca8 = inttoptr i32 %v2_14ca8 to i32*
  store i32 %v0_14ca8, i32* %v3_14ca8, align 4
  %v0_14cac = load i32, i32* %r4.global-to-local, align 4
  %v1_14cac = add i32 %v0_14cac, 65
  %v2_14cac = inttoptr i32 %v1_14cac to i8*
  %v3_14cac = load i8, i8* %v2_14cac, align 1
  %v4_14cac = zext i8 %v3_14cac to i32
  %v1_14cb0 = add i32 %v0_14cac, 64
  %v2_14cb0 = inttoptr i32 %v1_14cb0 to i8*
  %v3_14cb0 = load i8, i8* %v2_14cb0, align 1
  %v4_14cb0 = zext i8 %v3_14cb0 to i32
  store i32 %v4_14cb0, i32* %r3.global-to-local, align 4
  %v1_14cb4 = add i32 %v0_14cac, 66
  %v2_14cb4 = inttoptr i32 %v1_14cb4 to i8*
  %v3_14cb4 = load i8, i8* %v2_14cb4, align 1
  %v4_14cb4 = zext i8 %v3_14cb4 to i32
  %v4_14cb8 = mul nuw nsw i32 %v4_14cac, 256
  %v5_14cb8 = or i32 %v4_14cb0, %v4_14cb8
  store i32 %v5_14cb8, i32* %r3.global-to-local, align 4
  %v1_14cbc = add i32 %v0_14cac, 67
  %v2_14cbc = inttoptr i32 %v1_14cbc to i8*
  %v3_14cbc = load i8, i8* %v2_14cbc, align 1
  %v4_14cbc = zext i8 %v3_14cbc to i32
  %v4_14cc0 = mul nuw nsw i32 %v4_14cb4, 65536
  %v5_14cc0 = or i32 %v4_14cc0, %v5_14cb8
  %v4_14cc4 = mul nuw i32 %v4_14cbc, 16777216
  %v5_14cc4 = or i32 %v5_14cc0, %v4_14cc4
  store i32 %v5_14cc4, i32* %r3.global-to-local, align 4
  %v1_14cc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14cc8 = add i32 %v1_14cc8, 64
  %v3_14cc8 = inttoptr i32 %v2_14cc8 to i32*
  store i32 %v5_14cc4, i32* %v3_14cc8, align 4
  %v0_14ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_14ccc = add i32 %v0_14ccc, 73
  %v2_14ccc = inttoptr i32 %v1_14ccc to i8*
  %v3_14ccc = load i8, i8* %v2_14ccc, align 1
  %v4_14ccc = zext i8 %v3_14ccc to i32
  %v1_14cd0 = add i32 %v0_14ccc, 72
  %v2_14cd0 = inttoptr i32 %v1_14cd0 to i8*
  %v3_14cd0 = load i8, i8* %v2_14cd0, align 1
  %v4_14cd0 = zext i8 %v3_14cd0 to i32
  store i32 %v4_14cd0, i32* %r3.global-to-local, align 4
  %v1_14cd4 = add i32 %v0_14ccc, 74
  %v2_14cd4 = inttoptr i32 %v1_14cd4 to i8*
  %v3_14cd4 = load i8, i8* %v2_14cd4, align 1
  %v4_14cd4 = zext i8 %v3_14cd4 to i32
  %v4_14cd8 = mul nuw nsw i32 %v4_14ccc, 256
  %v5_14cd8 = or i32 %v4_14cd0, %v4_14cd8
  store i32 %v5_14cd8, i32* %r3.global-to-local, align 4
  %v1_14cdc = add i32 %v0_14ccc, 75
  %v2_14cdc = inttoptr i32 %v1_14cdc to i8*
  %v3_14cdc = load i8, i8* %v2_14cdc, align 1
  %v4_14cdc = zext i8 %v3_14cdc to i32
  %v4_14ce0 = mul nuw nsw i32 %v4_14cd4, 65536
  %v5_14ce0 = or i32 %v4_14ce0, %v5_14cd8
  %v4_14ce4 = mul nuw i32 %v4_14cdc, 16777216
  %v5_14ce4 = or i32 %v5_14ce0, %v4_14ce4
  store i32 %v5_14ce4, i32* %r3.global-to-local, align 4
  %v1_14ce8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ce8 = add i32 %v1_14ce8, 72
  %v3_14ce8 = inttoptr i32 %v2_14ce8 to i32*
  store i32 %v5_14ce4, i32* %v3_14ce8, align 4
  %v0_14cec = load i32, i32* %r4.global-to-local, align 4
  %v1_14cec = add i32 %v0_14cec, 81
  %v2_14cec = inttoptr i32 %v1_14cec to i8*
  %v3_14cec = load i8, i8* %v2_14cec, align 1
  %v4_14cec = zext i8 %v3_14cec to i32
  %v1_14cf0 = add i32 %v0_14cec, 80
  %v2_14cf0 = inttoptr i32 %v1_14cf0 to i8*
  %v3_14cf0 = load i8, i8* %v2_14cf0, align 1
  %v4_14cf0 = zext i8 %v3_14cf0 to i32
  store i32 %v4_14cf0, i32* %r3.global-to-local, align 4
  %v1_14cf4 = add i32 %v0_14cec, 82
  %v2_14cf4 = inttoptr i32 %v1_14cf4 to i8*
  %v3_14cf4 = load i8, i8* %v2_14cf4, align 1
  %v4_14cf4 = zext i8 %v3_14cf4 to i32
  %v4_14cf8 = mul nuw nsw i32 %v4_14cec, 256
  %v5_14cf8 = or i32 %v4_14cf0, %v4_14cf8
  store i32 %v5_14cf8, i32* %r3.global-to-local, align 4
  %v1_14cfc = add i32 %v0_14cec, 83
  %v2_14cfc = inttoptr i32 %v1_14cfc to i8*
  %v3_14cfc = load i8, i8* %v2_14cfc, align 1
  %v4_14cfc = zext i8 %v3_14cfc to i32
  %v4_14d00 = mul nuw nsw i32 %v4_14cf4, 65536
  %v5_14d00 = or i32 %v4_14d00, %v5_14cf8
  %v4_14d04 = mul nuw i32 %v4_14cfc, 16777216
  %v5_14d04 = or i32 %v5_14d00, %v4_14d04
  store i32 %v5_14d04, i32* %r3.global-to-local, align 4
  %v1_14d08 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d08 = add i32 %v1_14d08, 80
  %v3_14d08 = inttoptr i32 %v2_14d08 to i32*
  store i32 %v5_14d04, i32* %v3_14d08, align 4
  %v0_14d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_14d0c = add i32 %v0_14d0c, 69
  %v2_14d0c = inttoptr i32 %v1_14d0c to i8*
  %v3_14d0c = load i8, i8* %v2_14d0c, align 1
  %v4_14d0c = zext i8 %v3_14d0c to i32
  %v1_14d10 = add i32 %v0_14d0c, 68
  %v2_14d10 = inttoptr i32 %v1_14d10 to i8*
  %v3_14d10 = load i8, i8* %v2_14d10, align 1
  %v4_14d10 = zext i8 %v3_14d10 to i32
  store i32 %v4_14d10, i32* %r3.global-to-local, align 4
  %v1_14d14 = add i32 %v0_14d0c, 70
  %v2_14d14 = inttoptr i32 %v1_14d14 to i8*
  %v3_14d14 = load i8, i8* %v2_14d14, align 1
  %v4_14d14 = zext i8 %v3_14d14 to i32
  %v4_14d18 = mul nuw nsw i32 %v4_14d0c, 256
  %v5_14d18 = or i32 %v4_14d10, %v4_14d18
  store i32 %v5_14d18, i32* %r3.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d0c, 71
  %v2_14d1c = inttoptr i32 %v1_14d1c to i8*
  %v3_14d1c = load i8, i8* %v2_14d1c, align 1
  %v4_14d1c = zext i8 %v3_14d1c to i32
  %v4_14d20 = mul nuw nsw i32 %v4_14d14, 65536
  %v5_14d20 = or i32 %v4_14d20, %v5_14d18
  %v4_14d24 = mul nuw i32 %v4_14d1c, 16777216
  %v5_14d24 = or i32 %v5_14d20, %v4_14d24
  store i32 %v5_14d24, i32* %r3.global-to-local, align 4
  %v1_14d28 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d28 = add i32 %v1_14d28, 68
  %v3_14d28 = inttoptr i32 %v2_14d28 to i32*
  store i32 %v5_14d24, i32* %v3_14d28, align 4
  %v0_14d2c = load i32, i32* %r4.global-to-local, align 4
  %v1_14d2c = add i32 %v0_14d2c, 77
  %v2_14d2c = inttoptr i32 %v1_14d2c to i8*
  %v3_14d2c = load i8, i8* %v2_14d2c, align 1
  %v4_14d2c = zext i8 %v3_14d2c to i32
  %v1_14d30 = add i32 %v0_14d2c, 76
  %v2_14d30 = inttoptr i32 %v1_14d30 to i8*
  %v3_14d30 = load i8, i8* %v2_14d30, align 1
  %v4_14d30 = zext i8 %v3_14d30 to i32
  store i32 %v4_14d30, i32* %r3.global-to-local, align 4
  %v1_14d34 = add i32 %v0_14d2c, 78
  %v2_14d34 = inttoptr i32 %v1_14d34 to i8*
  %v3_14d34 = load i8, i8* %v2_14d34, align 1
  %v4_14d34 = zext i8 %v3_14d34 to i32
  %v4_14d38 = mul nuw nsw i32 %v4_14d2c, 256
  %v5_14d38 = or i32 %v4_14d30, %v4_14d38
  store i32 %v5_14d38, i32* %r3.global-to-local, align 4
  %v1_14d3c = add i32 %v0_14d2c, 79
  %v2_14d3c = inttoptr i32 %v1_14d3c to i8*
  %v3_14d3c = load i8, i8* %v2_14d3c, align 1
  %v4_14d3c = zext i8 %v3_14d3c to i32
  %v4_14d40 = mul nuw nsw i32 %v4_14d34, 65536
  %v5_14d40 = or i32 %v4_14d40, %v5_14d38
  %v4_14d44 = mul nuw i32 %v4_14d3c, 16777216
  %v5_14d44 = or i32 %v5_14d40, %v4_14d44
  store i32 %v5_14d44, i32* %r3.global-to-local, align 4
  %v1_14d48 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d48 = add i32 %v1_14d48, 76
  %v3_14d48 = inttoptr i32 %v2_14d48 to i32*
  store i32 %v5_14d44, i32* %v3_14d48, align 4
  %v0_14d4c = load i32, i32* %r4.global-to-local, align 4
  %v1_14d4c = add i32 %v0_14d4c, 85
  %v2_14d4c = inttoptr i32 %v1_14d4c to i8*
  %v3_14d4c = load i8, i8* %v2_14d4c, align 1
  %v4_14d4c = zext i8 %v3_14d4c to i32
  %v1_14d50 = add i32 %v0_14d4c, 84
  %v2_14d50 = inttoptr i32 %v1_14d50 to i8*
  %v3_14d50 = load i8, i8* %v2_14d50, align 1
  %v4_14d50 = zext i8 %v3_14d50 to i32
  store i32 %v4_14d50, i32* %r3.global-to-local, align 4
  %v1_14d54 = add i32 %v0_14d4c, 86
  %v2_14d54 = inttoptr i32 %v1_14d54 to i8*
  %v3_14d54 = load i8, i8* %v2_14d54, align 1
  %v4_14d54 = zext i8 %v3_14d54 to i32
  %v4_14d58 = mul nuw nsw i32 %v4_14d4c, 256
  %v5_14d58 = or i32 %v4_14d50, %v4_14d58
  store i32 %v5_14d58, i32* %r3.global-to-local, align 4
  %v1_14d5c = add i32 %v0_14d4c, 87
  %v2_14d5c = inttoptr i32 %v1_14d5c to i8*
  %v3_14d5c = load i8, i8* %v2_14d5c, align 1
  %v4_14d5c = zext i8 %v3_14d5c to i32
  %v4_14d60 = mul nuw nsw i32 %v4_14d54, 65536
  %v5_14d60 = or i32 %v4_14d60, %v5_14d58
  %v4_14d64 = mul nuw i32 %v4_14d5c, 16777216
  %v5_14d64 = or i32 %v5_14d60, %v4_14d64
  store i32 %v5_14d64, i32* %r3.global-to-local, align 4
  %v1_14d68 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d68 = add i32 %v1_14d68, 84
  %v3_14d68 = inttoptr i32 %v2_14d68 to i32*
  store i32 %v5_14d64, i32* %v3_14d68, align 4
  ret i32 %v4_14c6c

; uselistorder directives
  uselistorder i32 %v4_14c6c, { 1, 0 }
  uselistorder i32 %v0_14c60, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14bf0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14ba0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_14ac0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %tmp, { 6, 5, 3, 4, 2, 1, 0, 7 }
  uselistorder i32 87, { 2, 0, 3, 1 }
  uselistorder i32 84, { 1, 2, 0, 3, 4 }
  uselistorder i32 85, { 1, 0, 2 }
  uselistorder i32 79, { 3, 4, 0, 1, 2 }
  uselistorder i32 78, { 1, 0, 2, 3 }
  uselistorder i32 77, { 2, 0, 1 }
  uselistorder i32 71, { 1, 2, 0 }
  uselistorder i32 70, { 1, 0, 2, 3 }
  uselistorder i32 69, { 3, 1, 2, 0 }
  uselistorder i32 81, { 2, 0, 1 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 73, { 2, 0, 1, 3 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 66, { 1, 2, 0, 3, 4 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 62, { 5, 0, 1, 6, 2, 3, 7, 4 }
  uselistorder i32 58, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 61, { 2, 3, 0, 1, 4 }
  uselistorder i32 57, { 2, 0, 1, 3, 4 }
  uselistorder i32 55, { 3, 8, 0, 4, 5, 2, 6, 7, 1 }
  uselistorder i32 54, { 3, 4, 1, 2, 0 }
  uselistorder i32 53, { 2, 1, 0, 3 }
  uselistorder i32 51, { 2, 3, 0, 4, 1 }
  uselistorder i32 47, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 50, { 2, 0, 1, 3 }
  uselistorder i32 46, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 49, { 1, 2, 0, 3 }
  uselistorder i32 45, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 39, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 35, { 8, 0, 9, 1, 10, 2, 11, 3, 12, 4, 13, 5, 14, 6, 15, 16, 7, 17 }
  uselistorder i32 38, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 34, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 12 }
  uselistorder i32 33, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 30, { 8, 0, 4, 9, 5, 10, 6, 7, 11, 12, 1, 2, 3 }
  uselistorder i32 29, { 5, 6, 2, 3, 4, 1, 7, 0 }
  uselistorder i32 26, { 7, 0, 1, 2, 9, 6, 8, 3, 10, 4, 11, 5, 12, 13 }
  uselistorder i32 25, { 11, 25, 26, 2, 12, 3, 13, 4, 14, 5, 15, 10, 16, 6, 17, 0, 18, 19, 20, 7, 8, 21, 9, 22, 23, 1, 24 }
  uselistorder i32 23, { 9, 3, 1, 4, 2, 10, 11, 12, 0, 5, 6, 7, 8 }
  uselistorder i32 22, { 11, 1, 14, 2, 3, 4, 5, 0, 10, 12, 13, 6, 15, 7, 16, 8, 17, 9 }
  uselistorder i32 21, { 9, 3, 2, 10, 11, 8, 12, 7, 13, 0, 1, 4, 14, 5, 15, 6, 16 }
  uselistorder i32 19, { 13, 16, 17, 18, 4, 0, 5, 1, 14, 10, 11, 12, 15, 6, 7, 8, 9, 19, 2, 20, 3, 21 }
  uselistorder i32 18, { 10, 12, 13, 14, 8, 11, 9, 0, 1, 2, 3, 15, 4, 16, 5, 17, 6, 18, 7, 19 }
  uselistorder i32 17, { 16, 18, 0, 4, 29, 30, 5, 31, 32, 6, 1, 15, 17, 7, 8, 9, 10, 19, 20, 2, 21, 22, 23, 3, 24, 25, 26, 27, 28, 33, 11, 34, 12, 35, 36, 37, 13, 38, 14 }
  uselistorder i32 95, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i32 91, { 1, 2, 3, 0 }
  uselistorder i32 90, { 2, 0, 1 }
  uselistorder i32 94, { 4, 0, 5, 6, 1, 7, 2, 8, 3 }
  uselistorder i32 92, { 1, 2, 3, 0, 4 }
  uselistorder i32 93, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 6, { 30, 38, 15, 16, 83, 2, 35, 3, 18, 31, 19, 32, 20, 33, 17, 34, 0, 28, 36, 29, 21, 37, 4, 5, 39, 40, 41, 22, 42, 6, 43, 44, 45, 23, 46, 7, 47, 48, 49, 24, 50, 51, 52, 25, 53, 57, 58, 59, 8, 60, 61, 62, 63, 9, 64, 65, 66, 67, 68, 26, 69, 10, 70, 71, 72, 73, 74, 75, 27, 76, 11, 77, 78, 79, 80, 12, 81, 13, 14, 1, 82, 54, 55, 56 }
  uselistorder i32 96, { 1, 0, 4, 5, 2, 3 }
}

define i32 @function_14d74(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14d74:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14d74 = load i32, i32* @r4, align 4
  store i32 %v3_14d74, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_14d8c = inttoptr i32 %arg2 to i8*
  %v3_14d8c = call i32 @function_13250(i8* %v2_14d8c, i32 0)
  store i32 %v3_14d8c, i32* %r0.global-to-local, align 4
  %v0_14d90 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d90 = inttoptr i32 %v0_14d90 to i32*
  %v2_14d90 = load i32, i32* %v1_14d90, align 4
  store i32 %v2_14d90, i32* %r3.global-to-local, align 4
  %v1_14d94 = add i32 %v0_14d90, 4
  %v2_14d94 = inttoptr i32 %v1_14d94 to i32*
  %v3_14d94 = load i32, i32* %v2_14d94, align 4
  store i32 %v3_14d94, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_14d9c = load i32, i32* %r6.global-to-local, align 4
  %v1_14d9c = inttoptr i32 %v0_14d9c to i32*
  store i32 %v2_14d90, i32* %v1_14d9c, align 4
  %v3_14d9c = add i32 %v0_14d9c, 4
  %v4_14d9c = inttoptr i32 %v3_14d9c to i32*
  %v5_14d9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d9c, i32* %v4_14d9c, align 4
  %v0_14da0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14da0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14da0 = add i32 %v1_14da0, 12
  %v3_14da0 = inttoptr i32 %v2_14da0 to i32*
  store i32 %v0_14da0, i32* %v3_14da0, align 4
  %v0_14da4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14da4 = add i32 %v0_14da4, 9
  %v2_14da4 = inttoptr i32 %v1_14da4 to i8*
  %v3_14da4 = load i8, i8* %v2_14da4, align 1
  %v4_14da4 = zext i8 %v3_14da4 to i32
  store i32 %v4_14da4, i32* %r2.global-to-local, align 4
  %v1_14da8 = add i32 %v0_14da4, 8
  %v2_14da8 = inttoptr i32 %v1_14da8 to i8*
  %v3_14da8 = load i8, i8* %v2_14da8, align 1
  %v4_14da8 = zext i8 %v3_14da8 to i32
  %v4_14dac = mul nuw nsw i32 %v4_14da4, 256
  %v5_14dac = or i32 %v4_14da8, %v4_14dac
  store i32 %v5_14dac, i32* %r3.global-to-local, align 4
  %v1_14db0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14db0 = add i32 %v1_14db0, 16
  %v3_14db0 = inttoptr i32 %v2_14db0 to i32*
  store i32 %v5_14dac, i32* %v3_14db0, align 4
  %v0_14db4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14db4 = add i32 %v0_14db4, 11
  %v2_14db4 = inttoptr i32 %v1_14db4 to i8*
  %v3_14db4 = load i8, i8* %v2_14db4, align 1
  %v4_14db4 = zext i8 %v3_14db4 to i32
  store i32 %v4_14db4, i32* %r2.global-to-local, align 4
  %v1_14db8 = add i32 %v0_14db4, 10
  %v2_14db8 = inttoptr i32 %v1_14db8 to i8*
  %v3_14db8 = load i8, i8* %v2_14db8, align 1
  %v4_14db8 = zext i8 %v3_14db8 to i32
  %v4_14dbc = mul nuw nsw i32 %v4_14db4, 256
  %v5_14dbc = or i32 %v4_14db8, %v4_14dbc
  store i32 %v5_14dbc, i32* %r3.global-to-local, align 4
  %v1_14dc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14dc0 = add i32 %v1_14dc0, 20
  %v3_14dc0 = inttoptr i32 %v2_14dc0 to i32*
  store i32 %v5_14dbc, i32* %v3_14dc0, align 4
  %v0_14dc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dc4 = add i32 %v0_14dc4, 13
  %v2_14dc4 = inttoptr i32 %v1_14dc4 to i8*
  %v3_14dc4 = load i8, i8* %v2_14dc4, align 1
  %v4_14dc4 = zext i8 %v3_14dc4 to i32
  store i32 %v4_14dc4, i32* %r2.global-to-local, align 4
  %v1_14dc8 = add i32 %v0_14dc4, 12
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i8*
  %v3_14dc8 = load i8, i8* %v2_14dc8, align 1
  %v4_14dc8 = zext i8 %v3_14dc8 to i32
  %v4_14dcc = mul nuw nsw i32 %v4_14dc4, 256
  %v5_14dcc = or i32 %v4_14dc8, %v4_14dcc
  store i32 %v5_14dcc, i32* %r3.global-to-local, align 4
  %v1_14dd0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14dd0 = add i32 %v1_14dd0, 24
  %v3_14dd0 = inttoptr i32 %v2_14dd0 to i32*
  store i32 %v5_14dcc, i32* %v3_14dd0, align 4
  %v0_14dd4 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dd4 = add i32 %v0_14dd4, 20
  %v2_14dd4 = inttoptr i32 %v1_14dd4 to i32*
  %v3_14dd4 = load i32, i32* %v2_14dd4, align 4
  store i32 %v3_14dd4, i32* %r3.global-to-local, align 4
  %v1_14dd8 = add i32 %v0_14dd4, 14
  %v2_14dd8 = inttoptr i32 %v1_14dd8 to i8*
  %v3_14dd8 = load i8, i8* %v2_14dd8, align 1
  %v4_14dd8 = zext i8 %v3_14dd8 to i32
  store i32 %v4_14dd8, i32* %r0.global-to-local, align 4
  %v1_14ddc = add i32 %v0_14dd4, 15
  %v2_14ddc = inttoptr i32 %v1_14ddc to i8*
  %v3_14ddc = load i8, i8* %v2_14ddc, align 1
  %v4_14ddc = zext i8 %v3_14ddc to i32
  store i32 %v4_14ddc, i32* %ip.global-to-local, align 4
  %v1_14de0 = add i32 %v0_14dd4, 16
  %v2_14de0 = inttoptr i32 %v1_14de0 to i32*
  %v3_14de0 = load i32, i32* %v2_14de0, align 4
  store i32 %v3_14de0, i32* %r1.global-to-local, align 4
  %v1_14de4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14de4 = add i32 %v1_14de4, 44
  %v3_14de4 = inttoptr i32 %v2_14de4 to i32*
  store i32 %v3_14dd4, i32* %v3_14de4, align 4
  %v0_14de8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14de8 = add i32 %v0_14de8, 24
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  %v3_14de8 = load i32, i32* %v2_14de8, align 4
  store i32 %v3_14de8, i32* %r3.global-to-local, align 4
  %v1_14dec = load i32, i32* %r6.global-to-local, align 4
  %v2_14dec = add i32 %v1_14dec, 48
  %v3_14dec = inttoptr i32 %v2_14dec to i32*
  store i32 %v3_14de8, i32* %v3_14dec, align 4
  %v0_14df0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14df0 = add i32 %v0_14df0, 28
  %v2_14df0 = inttoptr i32 %v1_14df0 to i32*
  %v3_14df0 = load i32, i32* %v2_14df0, align 4
  store i32 %v3_14df0, i32* %r3.global-to-local, align 4
  %v1_14df4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14df4 = add i32 %v1_14df4, 52
  %v3_14df4 = inttoptr i32 %v2_14df4 to i32*
  store i32 %v3_14df0, i32* %v3_14df4, align 4
  %v0_14df8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14df8 = add i32 %v0_14df8, 32
  %v2_14df8 = inttoptr i32 %v1_14df8 to i32*
  %v3_14df8 = load i32, i32* %v2_14df8, align 4
  store i32 %v3_14df8, i32* %r3.global-to-local, align 4
  %v1_14dfc = load i32, i32* %r6.global-to-local, align 4
  %v2_14dfc = add i32 %v1_14dfc, 56
  %v3_14dfc = inttoptr i32 %v2_14dfc to i32*
  store i32 %v3_14df8, i32* %v3_14dfc, align 4
  %v0_14e00 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e00 = add i32 %v0_14e00, 40
  %v2_14e00 = inttoptr i32 %v1_14e00 to i32*
  %v3_14e00 = load i32, i32* %v2_14e00, align 4
  store i32 %v3_14e00, i32* %r3.global-to-local, align 4
  %v1_14e04 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e04 = add i32 %v1_14e04, 64
  %v3_14e04 = inttoptr i32 %v2_14e04 to i32*
  store i32 %v3_14e00, i32* %v3_14e04, align 4
  %v0_14e08 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e08 = add i32 %v0_14e08, 48
  %v2_14e08 = inttoptr i32 %v1_14e08 to i32*
  %v3_14e08 = load i32, i32* %v2_14e08, align 4
  store i32 %v3_14e08, i32* %r3.global-to-local, align 4
  %v1_14e0c = load i32, i32* %r6.global-to-local, align 4
  %v2_14e0c = add i32 %v1_14e0c, 72
  %v3_14e0c = inttoptr i32 %v2_14e0c to i32*
  store i32 %v3_14e08, i32* %v3_14e0c, align 4
  %v0_14e10 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e10 = add i32 %v0_14e10, 36
  %v2_14e10 = inttoptr i32 %v1_14e10 to i32*
  %v3_14e10 = load i32, i32* %v2_14e10, align 4
  store i32 %v3_14e10, i32* %r3.global-to-local, align 4
  %v1_14e14 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e14 = add i32 %v1_14e14, 60
  %v3_14e14 = inttoptr i32 %v2_14e14 to i32*
  store i32 %v3_14e10, i32* %v3_14e14, align 4
  %v0_14e18 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e18 = add i32 %v0_14e18, 44
  %v2_14e18 = inttoptr i32 %v1_14e18 to i32*
  %v3_14e18 = load i32, i32* %v2_14e18, align 4
  store i32 %v3_14e18, i32* %r3.global-to-local, align 4
  %v0_14e1c = load i32, i32* %r0.global-to-local, align 4
  %v1_14e1c = load i32, i32* %ip.global-to-local, align 4
  %v4_14e1c = mul i32 %v1_14e1c, 256
  %v5_14e1c = or i32 %v4_14e1c, %v0_14e1c
  store i32 %v5_14e1c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_14e24 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e24 = add i32 %v1_14e24, 28
  %v3_14e24 = inttoptr i32 %v2_14e24 to i32*
  store i32 %v5_14e1c, i32* %v3_14e24, align 4
  %v0_14e28 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e28 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e28 = add i32 %v1_14e28, 32
  %v3_14e28 = inttoptr i32 %v2_14e28 to i32*
  store i32 %v0_14e28, i32* %v3_14e28, align 4
  %v0_14e2c = load i32, i32* %r2.global-to-local, align 4
  %v1_14e2c = load i32, i32* %r6.global-to-local, align 4
  %v2_14e2c = add i32 %v1_14e2c, 36
  %v3_14e2c = inttoptr i32 %v2_14e2c to i32*
  store i32 %v0_14e2c, i32* %v3_14e2c, align 4
  %v0_14e30 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e30 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e30 = add i32 %v1_14e30, 68
  %v3_14e30 = inttoptr i32 %v2_14e30 to i32*
  store i32 %v0_14e30, i32* %v3_14e30, align 4
  %v0_14e34 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e34 = add i32 %v0_14e34, 52
  %v2_14e34 = inttoptr i32 %v1_14e34 to i32*
  %v3_14e34 = load i32, i32* %v2_14e34, align 4
  store i32 %v3_14e34, i32* %r3.global-to-local, align 4
  %v1_14e38 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e38 = add i32 %v1_14e38, 76
  %v3_14e38 = inttoptr i32 %v2_14e38 to i32*
  store i32 %v3_14e34, i32* %v3_14e38, align 4
  %v2_14e3c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e3c, i32* %r4.global-to-local, align 4
  ret i32 %v5_14e1c

; uselistorder directives
  uselistorder i32 %v0_14dd4, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 76, { 3, 0, 1, 2 }
  uselistorder i32 68, { 3, 0, 1, 2 }
  uselistorder i32 60, { 5, 3, 4, 1, 2, 0, 6 }
  uselistorder i32 72, { 4, 1, 2, 3, 0 }
  uselistorder i32 64, { 26, 21, 22, 10, 18, 58, 0, 8, 7, 6, 9, 5, 4, 3, 2, 1, 23, 24, 25, 27, 28, 19, 29, 30, 31, 11, 32, 33, 34, 12, 35, 36, 37, 13, 38, 39, 40, 20, 41, 42, 43, 14, 44, 45, 46, 47, 48, 15, 49, 50, 51, 52, 53, 16, 54, 55, 56, 17, 57 }
  uselistorder i32 56, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32 52, { 4, 5, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder i32 15, { 19, 14, 13, 15, 16, 2, 17, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 12, 22, 23, 24, 25, 0, 26, 27, 28, 29, 1, 30 }
  uselistorder i32 14, { 26, 20, 38, 0, 21, 1, 22, 23, 18, 19, 4, 24, 5, 25, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 17, 29, 30, 31, 32, 2, 33, 34, 35, 36, 3, 37 }
  uselistorder i32 13, { 33, 26, 23, 27, 28, 29, 30, 24, 31, 25, 4, 32, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 34, 35, 36, 37, 38, 21, 39, 40, 41, 42, 43, 44, 45, 46, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 3, 75, 76 }
  uselistorder i32 9, { 47, 48, 49, 8, 4, 50, 9, 5, 13, 28, 14, 29, 15, 30, 33, 11, 32, 24, 12, 31, 10, 2, 34, 25, 26, 36, 37, 38, 27, 35, 16, 39, 17, 40, 18, 41, 6, 43, 42, 19, 44, 20, 45, 21, 46, 0, 22, 1, 63, 51, 52, 53, 54, 55, 56, 7, 57, 58, 59, 60, 61, 62, 64, 65, 3, 66, 23 }
  uselistorder i32 (i8*, i32)* @function_13250, { 1, 0, 7, 6, 5, 2, 3, 4 }
  uselistorder i32 88, { 4, 1, 2, 0, 3, 5 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
}

define i32 @function_14e40() local_unnamed_addr {
dec_label_pc_14e40:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14e40 = load i32, i32* @r1, align 4
  %v1_14e40 = load i32, i32* @r0, align 4
  %v2_14e40 = sub i32 %v0_14e40, %v1_14e40
  %v3_14e40 = icmp ult i32 %v0_14e40, %v1_14e40
  %v4_14e40 = xor i32 %v1_14e40, %v0_14e40
  %v5_14e40 = xor i32 %v2_14e40, %v0_14e40
  %v6_14e40 = and i32 %v5_14e40, %v4_14e40
  %v7_14e40 = icmp slt i32 %v6_14e40, 0
  store i1 %v7_14e40, i1* %cpsr_v.global-to-local, align 1
  %v8_14e40 = icmp slt i32 %v2_14e40, 0
  store i1 %v8_14e40, i1* %cpsr_n.global-to-local, align 1
  %v9_14e40 = icmp eq i32 %v0_14e40, %v1_14e40
  store i1 %v9_14e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14e40, label %dec_label_pc_1508c, label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e40
  br i1 %v9_14e40, label %.thread122, label %bb

.thread122:                                       ; preds = %bb144, %.thread121, %bb141, %dec_label_pc_14e48
  %merge = phi i32 [ %v0_14e40, %dec_label_pc_14e48 ], [ %v2_15120, %bb141 ], [ %v11_1513c, %bb144 ], [ %v7_1513c, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14e48
  store i32 %v1_14e40, i32* %stack_var_-8, align 4
  %v0_14e50 = load i32, i32* @r2, align 4
  %v2_14e50 = add i32 %v0_14e50, -4
  store i32 %v2_14e50, i32* %r2.global-to-local, align 4
  %v4_14e50 = sub i32 3, %v0_14e50
  %v5_14e50 = and i32 %v4_14e50, %v0_14e50
  %v6_14e50 = icmp slt i32 %v5_14e50, 0
  store i1 %v6_14e50, i1* %cpsr_v.global-to-local, align 1
  %v7_14e50 = icmp slt i32 %v2_14e50, 0
  store i1 %v7_14e50, i1* %cpsr_n.global-to-local, align 1
  %v8_14e50 = icmp eq i32 %v0_14e50, 4
  store i1 %v8_14e50, i1* %cpsr_z.global-to-local, align 1
  %v5_14e54 = icmp slt i32 %v0_14e50, 4
  br i1 %v5_14e54, label %bb131, label %dec_label_pc_14e58

dec_label_pc_14e58:                               ; preds = %bb
  %v1_14e58 = urem i32 %v1_14e40, 4
  store i32 %v1_14e58, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e58 = icmp eq i32 %v1_14e58, 0
  store i1 %v2_14e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e58, label %dec_label_pc_14e60, label %dec_label_pc_14f04

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e58
  %v1_14e60 = urem i32 %v0_14e40, 4
  store i32 %v1_14e60, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e60 = icmp eq i32 %v1_14e60, 0
  store i1 %v2_14e60, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_14e40 to i2
  br i1 %v2_14e60, label %dec_label_pc_14e68, label %dec_label_pc_14f34

dec_label_pc_14e68:                               ; preds = %dec_label_pc_14e60, %dec_label_pc_14f2c
  %v0_14e8092 = phi i32 [ %v1_14e40, %dec_label_pc_14e60 ], [ %v0_14f7c75, %dec_label_pc_14f2c ]
  %v0_14e7c91 = phi i32 [ %v0_14e40, %dec_label_pc_14e60 ], [ %v0_14f2c, %dec_label_pc_14f2c ]
  %v0_14e68 = phi i32 [ %v2_14e50, %dec_label_pc_14e60 ], [ %v2_14f24, %dec_label_pc_14f2c ]
  %v2_14e68 = add i32 %v0_14e68, -8
  store i32 %v2_14e68, i32* %r2.global-to-local, align 4
  %v4_14e68 = sub i32 7, %v0_14e68
  %v5_14e68 = and i32 %v4_14e68, %v0_14e68
  %v6_14e68 = icmp slt i32 %v5_14e68, 0
  store i1 %v6_14e68, i1* %cpsr_v.global-to-local, align 1
  %v7_14e68 = icmp slt i32 %v2_14e68, 0
  store i1 %v7_14e68, i1* %cpsr_n.global-to-local, align 1
  %v8_14e68 = icmp eq i32 %v0_14e68, 8
  store i1 %v8_14e68, i1* %cpsr_z.global-to-local, align 1
  %v5_14e6c = icmp slt i32 %v0_14e68, 8
  br i1 %v5_14e6c, label %dec_label_pc_14ebc, label %dec_label_pc_14e70

dec_label_pc_14e70:                               ; preds = %dec_label_pc_14e68
  %v2_14e70 = add i32 %v0_14e68, -28
  store i32 %v2_14e70, i32* %r2.global-to-local, align 4
  %v4_14e70 = sub i32 27, %v0_14e68
  %v5_14e70 = and i32 %v4_14e70, %v2_14e68
  %v6_14e70 = icmp slt i32 %v5_14e70, 0
  store i1 %v6_14e70, i1* %cpsr_v.global-to-local, align 1
  %v7_14e70 = icmp slt i32 %v2_14e70, 0
  store i1 %v7_14e70, i1* %cpsr_n.global-to-local, align 1
  %v8_14e70 = icmp eq i32 %v2_14e68, 20
  store i1 %v8_14e70, i1* %cpsr_z.global-to-local, align 1
  %v5_14e74 = icmp slt i32 %v2_14e68, 20
  br i1 %v5_14e74, label %dec_label_pc_14ea8, label %dec_label_pc_14e78

dec_label_pc_14e78:                               ; preds = %dec_label_pc_14e70
  %v0_14e78 = load i32, i32* @r4, align 4
  store i32 %v0_14e78, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14e7c

dec_label_pc_14e7c:                               ; preds = %dec_label_pc_14e7c.dec_label_pc_14e7c_crit_edge, %dec_label_pc_14e78
  %v0_14e80 = phi i32 [ %v12_14e88, %dec_label_pc_14e7c.dec_label_pc_14e7c_crit_edge ], [ %v0_14e8092, %dec_label_pc_14e78 ]
  %v0_14e7c = phi i32 [ %v0_14e7c.pre, %dec_label_pc_14e7c.dec_label_pc_14e7c_crit_edge ], [ %v0_14e7c91, %dec_label_pc_14e78 ]
  %v1_14e7c = inttoptr i32 %v0_14e7c to i32*
  %v2_14e7c = load i32, i32* %v1_14e7c, align 4
  store i32 %v2_14e7c, i32* %r3.global-to-local, align 4
  %v3_14e7c = add i32 %v0_14e7c, 4
  %v4_14e7c = inttoptr i32 %v3_14e7c to i32*
  %v5_14e7c = load i32, i32* %v4_14e7c, align 4
  store i32 %v5_14e7c, i32* %r4.global-to-local, align 4
  %v6_14e7c = add i32 %v0_14e7c, 8
  %v7_14e7c = inttoptr i32 %v6_14e7c to i32*
  %v8_14e7c = load i32, i32* %v7_14e7c, align 4
  store i32 %v8_14e7c, i32* %ip.global-to-local, align 4
  %v9_14e7c = add i32 %v0_14e7c, 12
  %v10_14e7c = inttoptr i32 %v9_14e7c to i32*
  %v11_14e7c = load i32, i32* %v10_14e7c, align 4
  store i32 %v11_14e7c, i32* %lr.global-to-local, align 4
  %v12_14e7c = add i32 %v0_14e7c, 16
  store i32 %v12_14e7c, i32* %r1.global-to-local, align 4
  %v1_14e80 = inttoptr i32 %v0_14e80 to i32*
  store i32 %v2_14e7c, i32* %v1_14e80, align 4
  %v3_14e80 = add i32 %v0_14e80, 4
  %v4_14e80 = inttoptr i32 %v3_14e80 to i32*
  %v5_14e80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14e80, i32* %v4_14e80, align 4
  %v6_14e80 = add i32 %v0_14e80, 8
  %v7_14e80 = inttoptr i32 %v6_14e80 to i32*
  %v8_14e80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14e80, i32* %v7_14e80, align 4
  %v9_14e80 = add i32 %v0_14e80, 12
  %v10_14e80 = inttoptr i32 %v9_14e80 to i32*
  %v11_14e80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14e80, i32* %v10_14e80, align 4
  %v12_14e80 = add i32 %v0_14e80, 16
  store i32 %v12_14e80, i32* %r0.global-to-local, align 4
  %v0_14e84 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e84 = inttoptr i32 %v0_14e84 to i32*
  %v2_14e84 = load i32, i32* %v1_14e84, align 4
  store i32 %v2_14e84, i32* %r3.global-to-local, align 4
  %v3_14e84 = add i32 %v0_14e84, 4
  %v4_14e84 = inttoptr i32 %v3_14e84 to i32*
  %v5_14e84 = load i32, i32* %v4_14e84, align 4
  store i32 %v5_14e84, i32* %r4.global-to-local, align 4
  %v6_14e84 = add i32 %v0_14e84, 8
  %v7_14e84 = inttoptr i32 %v6_14e84 to i32*
  %v8_14e84 = load i32, i32* %v7_14e84, align 4
  store i32 %v8_14e84, i32* @ip, align 4
  %v9_14e84 = add i32 %v0_14e84, 12
  %v10_14e84 = inttoptr i32 %v9_14e84 to i32*
  %v11_14e84 = load i32, i32* %v10_14e84, align 4
  store i32 %v11_14e84, i32* @lr, align 4
  %v12_14e84 = add i32 %v0_14e84, 16
  store i32 %v12_14e84, i32* @r1, align 4
  %v1_14e88 = inttoptr i32 %v12_14e80 to i32*
  store i32 %v2_14e84, i32* %v1_14e88, align 4
  %v3_14e88 = add i32 %v0_14e80, 20
  %v4_14e88 = inttoptr i32 %v3_14e88 to i32*
  %v5_14e88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14e88, i32* %v4_14e88, align 4
  %v6_14e88 = add i32 %v0_14e80, 24
  %v7_14e88 = inttoptr i32 %v6_14e88 to i32*
  %v8_14e88 = load i32, i32* @ip, align 4
  store i32 %v8_14e88, i32* %v7_14e88, align 4
  %v9_14e88 = add i32 %v0_14e80, 28
  %v10_14e88 = inttoptr i32 %v9_14e88 to i32*
  %v11_14e88 = load i32, i32* @lr, align 4
  store i32 %v11_14e88, i32* %v10_14e88, align 4
  %v12_14e88 = add i32 %v0_14e80, 32
  store i32 %v12_14e88, i32* @r0, align 4
  %v0_14e8c = load i32, i32* %r2.global-to-local, align 4
  %v2_14e8c = add i32 %v0_14e8c, -32
  store i32 %v2_14e8c, i32* %r2.global-to-local, align 4
  %v6_14e90 = icmp slt i32 %v0_14e8c, 32
  br i1 %v6_14e90, label %dec_label_pc_14e94, label %dec_label_pc_14e7c.dec_label_pc_14e7c_crit_edge

dec_label_pc_14e7c.dec_label_pc_14e7c_crit_edge:  ; preds = %dec_label_pc_14e7c
  %v0_14e7c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14e7c

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e7c
  %v4_14e94 = add i32 %v0_14e8c, -16
  %v6_14e94 = add i32 %v0_14e8c, 2147483616
  %v7_14e94 = and i32 %v4_14e94, %v6_14e94
  %v8_14e94 = icmp slt i32 %v7_14e94, 0
  store i1 %v8_14e94, i1* %cpsr_v.global-to-local, align 1
  %v9_14e94 = icmp slt i32 %v4_14e94, 0
  store i1 %v9_14e94, i1* %cpsr_n.global-to-local, align 1
  %v10_14e94 = icmp eq i32 %v4_14e94, 0
  store i1 %v10_14e94, i1* %cpsr_z.global-to-local, align 1
  %v5_14e98 = icmp slt i32 %v2_14e8c, -16
  br i1 %v5_14e98, label %.thread1, label %bb128

bb128:                                            ; preds = %dec_label_pc_14e94
  %v6_14e98 = load i32, i32* @r1, align 4
  %v7_14e98 = inttoptr i32 %v6_14e98 to i32*
  %v8_14e98 = load i32, i32* %v7_14e98, align 4
  store i32 %v8_14e98, i32* %r3.global-to-local, align 4
  %v9_14e98 = add i32 %v6_14e98, 4
  %v10_14e98 = inttoptr i32 %v9_14e98 to i32*
  %v11_14e98 = load i32, i32* %v10_14e98, align 4
  store i32 %v11_14e98, i32* %r4.global-to-local, align 4
  %v12_14e98 = add i32 %v6_14e98, 8
  %v13_14e98 = inttoptr i32 %v12_14e98 to i32*
  %v14_14e98 = load i32, i32* %v13_14e98, align 4
  store i32 %v14_14e98, i32* @ip, align 4
  %v15_14e98 = add i32 %v6_14e98, 12
  %v16_14e98 = inttoptr i32 %v15_14e98 to i32*
  %v17_14e98 = load i32, i32* %v16_14e98, align 4
  store i32 %v17_14e98, i32* @lr, align 4
  %v18_14e98 = add i32 %v6_14e98, 16
  store i32 %v18_14e98, i32* @r1, align 4
  %v7_14e9c = inttoptr i32 %v12_14e88 to i32*
  store i32 %v8_14e98, i32* %v7_14e9c, align 4
  %v9_14e9c = add i32 %v0_14e80, 36
  %v10_14e9c = inttoptr i32 %v9_14e9c to i32*
  %v11_14e9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14e9c, i32* %v10_14e9c, align 4
  %v12_14e9c = add i32 %v0_14e80, 40
  %v13_14e9c = inttoptr i32 %v12_14e9c to i32*
  %v14_14e9c = load i32, i32* @ip, align 4
  store i32 %v14_14e9c, i32* %v13_14e9c, align 4
  %v15_14e9c = add i32 %v0_14e80, 44
  %v16_14e9c = inttoptr i32 %v15_14e9c to i32*
  %v17_14e9c = load i32, i32* @lr, align 4
  store i32 %v17_14e9c, i32* %v16_14e9c, align 4
  %v18_14e9c = add i32 %v0_14e80, 48
  store i32 %v18_14e9c, i32* @r0, align 4
  %v6_14ea0 = load i32, i32* %r2.global-to-local, align 4
  %v7_14ea0 = add i32 %v6_14ea0, -16
  store i32 %v7_14ea0, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14e94, %bb128
  %v3_14eb0101 = phi i32 [ %v12_14e88, %dec_label_pc_14e94 ], [ %v18_14e9c, %bb128 ]
  %v0_14ea895 = phi i32 [ %v2_14e8c, %dec_label_pc_14e94 ], [ %v7_14ea0, %bb128 ]
  %v2_14ea4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ea4, i32* @r4, align 4
  br label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14e70, %.thread1
  %v3_14eb0100 = phi i32 [ %v0_14e8092, %dec_label_pc_14e70 ], [ %v3_14eb0101, %.thread1 ]
  %v0_14ea8 = phi i32 [ %v2_14e70, %dec_label_pc_14e70 ], [ %v0_14ea895, %.thread1 ]
  %v1_14ea8 = add i32 %v0_14ea8, 20
  store i32 %v1_14ea8, i32* %r2.global-to-local, align 4
  %v3_14ea8 = sub i32 0, %v0_14ea8
  %v4_14ea8 = and i32 %v1_14ea8, %v3_14ea8
  %v5_14ea8 = icmp slt i32 %v4_14ea8, 0
  store i1 %v5_14ea8, i1* %cpsr_v.global-to-local, align 1
  %v6_14ea8 = icmp slt i32 %v1_14ea8, 0
  store i1 %v6_14ea8, i1* %cpsr_n.global-to-local, align 1
  %v7_14ea8 = icmp eq i32 %v1_14ea8, 0
  store i1 %v7_14ea8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %.thread117, %dec_label_pc_14ea8
  %v0_14ebc.pre147 = phi i32 [ %v0_14ebc.pre, %.thread117 ], [ %v1_14ea8, %dec_label_pc_14ea8 ]
  %v3_14eb0 = phi i32 [ %v3_14eb098118, %.thread117 ], [ %v3_14eb0100, %dec_label_pc_14ea8 ]
  %v1_14eb4 = phi i1 [ %v1_14eb8, %.thread117 ], [ %v5_14ea8, %dec_label_pc_14ea8 ]
  %v0_14eb4 = phi i1 [ %v0_14eb8, %.thread117 ], [ %v6_14ea8, %dec_label_pc_14ea8 ]
  %v2_14eac = xor i1 %v1_14eb4, %v0_14eb4
  br i1 %v2_14eac, label %.thread117, label %bb129

bb129:                                            ; preds = %dec_label_pc_14eac
  %v3_14eac = load i32, i32* @r1, align 4
  %v4_14eac = inttoptr i32 %v3_14eac to i32*
  %v5_14eac = load i32, i32* %v4_14eac, align 4
  store i32 %v5_14eac, i32* %r3.global-to-local, align 4
  %v6_14eac = add i32 %v3_14eac, 4
  %v7_14eac = inttoptr i32 %v6_14eac to i32*
  %v8_14eac = load i32, i32* %v7_14eac, align 4
  store i32 %v8_14eac, i32* @ip, align 4
  %v9_14eac = add i32 %v3_14eac, 8
  %v10_14eac = inttoptr i32 %v9_14eac to i32*
  %v11_14eac = load i32, i32* %v10_14eac, align 4
  store i32 %v11_14eac, i32* @lr, align 4
  %v12_14eac = add i32 %v3_14eac, 12
  store i32 %v12_14eac, i32* @r1, align 4
  %v4_14eb0 = inttoptr i32 %v3_14eb0 to i32*
  store i32 %v5_14eac, i32* %v4_14eb0, align 4
  %v6_14eb0 = add i32 %v3_14eb0, 4
  %v7_14eb0 = inttoptr i32 %v6_14eb0 to i32*
  %v8_14eb0 = load i32, i32* @ip, align 4
  store i32 %v8_14eb0, i32* %v7_14eb0, align 4
  %v9_14eb0 = add i32 %v3_14eb0, 8
  %v10_14eb0 = inttoptr i32 %v9_14eb0 to i32*
  %v11_14eb0 = load i32, i32* @lr, align 4
  store i32 %v11_14eb0, i32* %v10_14eb0, align 4
  %v12_14eb0 = add i32 %v3_14eb0, 12
  store i32 %v12_14eb0, i32* @r0, align 4
  %v3_14eb4 = load i32, i32* %r2.global-to-local, align 4
  %v4_14eb4 = add i32 %v3_14eb4, -12
  store i32 %v4_14eb4, i32* %r2.global-to-local, align 4
  %v6_14eb4 = sub i32 11, %v3_14eb4
  %v7_14eb4 = and i32 %v6_14eb4, %v3_14eb4
  %v8_14eb4 = icmp slt i32 %v7_14eb4, 0
  store i1 %v8_14eb4, i1* %cpsr_v.global-to-local, align 1
  %v9_14eb4 = icmp slt i32 %v4_14eb4, 0
  store i1 %v9_14eb4, i1* %cpsr_n.global-to-local, align 1
  %v10_14eb4 = icmp eq i32 %v3_14eb4, 12
  store i1 %v10_14eb4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_14eac, %bb129
  %v0_14ebc.pre = phi i32 [ %v4_14eb4, %bb129 ], [ %v0_14ebc.pre147, %dec_label_pc_14eac ]
  %v3_14eb098118 = phi i32 [ %v12_14eb0, %bb129 ], [ %v3_14eb0, %dec_label_pc_14eac ]
  %v1_14eb8 = phi i1 [ %v8_14eb4, %bb129 ], [ %v1_14eb4, %dec_label_pc_14eac ]
  %v0_14eb8 = phi i1 [ %v9_14eb4, %bb129 ], [ %v0_14eb4, %dec_label_pc_14eac ]
  %v2_14eb8 = xor i1 %v1_14eb8, %v0_14eb8
  br i1 %v2_14eb8, label %dec_label_pc_14ebc, label %dec_label_pc_14eac

dec_label_pc_14ebc:                               ; preds = %.thread117, %dec_label_pc_14e68
  %v7_14ecc = phi i32 [ %v0_14e8092, %dec_label_pc_14e68 ], [ %v3_14eb098118, %.thread117 ]
  %v0_14ebc = phi i32 [ %v2_14e68, %dec_label_pc_14e68 ], [ %v0_14ebc.pre, %.thread117 ]
  %v2_14ebc = add i32 %v0_14ebc, 8
  store i32 %v2_14ebc, i32* %r2.global-to-local, align 4
  %v4_14ebc = sub i32 0, %v0_14ebc
  %v5_14ebc = and i32 %v2_14ebc, %v4_14ebc
  %v6_14ebc = icmp slt i32 %v5_14ebc, 0
  store i1 %v6_14ebc, i1* %cpsr_v.global-to-local, align 1
  %v7_14ebc = icmp slt i32 %v2_14ebc, 0
  store i1 %v7_14ebc, i1* %cpsr_n.global-to-local, align 1
  %v8_14ebc = icmp eq i32 %v2_14ebc, 0
  store i1 %v8_14ebc, i1* %cpsr_z.global-to-local, align 1
  %v5_14ec0 = icmp slt i32 %v0_14ebc, -8
  br i1 %v5_14ec0, label %bb131, label %dec_label_pc_14ec4

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14ebc
  %v6_14ec4 = add i32 %v0_14ebc, 4
  store i32 %v6_14ec4, i32* %r2.global-to-local, align 4
  %v8_14ec4 = sub i32 -5, %v0_14ebc
  %v9_14ec4 = and i32 %v8_14ec4, %v2_14ebc
  %v10_14ec4 = icmp slt i32 %v9_14ec4, 0
  store i1 %v10_14ec4, i1* %cpsr_v.global-to-local, align 1
  %v11_14ec4 = icmp slt i32 %v6_14ec4, 0
  store i1 %v11_14ec4, i1* %cpsr_n.global-to-local, align 1
  %v12_14ec4 = icmp eq i32 %v2_14ebc, 4
  store i1 %v12_14ec4, i1* %cpsr_z.global-to-local, align 1
  %v5_14ec8 = icmp slt i32 %v2_14ebc, 4
  %v6_14ec8 = load i32, i32* @r1, align 4
  %v7_14ec8 = inttoptr i32 %v6_14ec8 to i32*
  %v8_14ec8 = load i32, i32* %v7_14ec8, align 4
  store i32 %v8_14ec8, i32* %r3.global-to-local, align 4
  %v10_14ec8 = add i32 %v6_14ec8, 4
  br i1 %v5_14ec8, label %.thread5, label %bb130

.thread5:                                         ; preds = %dec_label_pc_14ec4
  store i32 %v10_14ec8, i32* @r1, align 4
  %v8_14ecc = inttoptr i32 %v7_14ecc to i32*
  store i32 %v8_14ec8, i32* %v8_14ecc, align 4
  %v9_14ecc = load i32, i32* @r0, align 4
  %v10_14ecc = add i32 %v9_14ecc, 4
  store i32 %v10_14ecc, i32* @r0, align 4
  %v0_14edc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb131

bb130:                                            ; preds = %dec_label_pc_14ec4
  %v10_14ed0 = inttoptr i32 %v10_14ec8 to i32*
  %v11_14ed0 = load i32, i32* %v10_14ed0, align 4
  store i32 %v11_14ed0, i32* @ip, align 4
  %v12_14ed0 = add i32 %v6_14ec8, 8
  store i32 %v12_14ed0, i32* @r1, align 4
  %v7_14ed4 = inttoptr i32 %v7_14ecc to i32*
  store i32 %v8_14ec8, i32* %v7_14ed4, align 4
  %v9_14ed4 = add i32 %v7_14ecc, 4
  %v10_14ed4 = inttoptr i32 %v9_14ed4 to i32*
  %v11_14ed4 = load i32, i32* @ip, align 4
  store i32 %v11_14ed4, i32* %v10_14ed4, align 4
  %v12_14ed4 = add i32 %v7_14ecc, 8
  store i32 %v12_14ed4, i32* @r0, align 4
  %v6_14ed8 = load i32, i32* %r2.global-to-local, align 4
  %v7_14ed8 = add i32 %v6_14ed8, -4
  store i32 %v7_14ed8, i32* %r2.global-to-local, align 4
  br label %bb131

bb131:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_14ebc, %bb, %dec_label_pc_15084, %dec_label_pc_15018, %dec_label_pc_14fac, %bb130
  %v2_14eec = phi i32 [ %v10_14ecc, %.thread5 ], [ %v0_14f7c75, %.thread11 ], [ %v7_14ecc, %dec_label_pc_14ebc ], [ %v1_14e40, %bb ], [ %v2_14eec113, %dec_label_pc_15084 ], [ %v2_14eec112, %dec_label_pc_15018 ], [ %v2_14eec111, %dec_label_pc_14fac ], [ %v12_14ed4, %bb130 ]
  %v0_14edc = phi i32 [ %v0_14edc.pre, %.thread5 ], [ %v2_14f24, %.thread11 ], [ %v2_14ebc, %dec_label_pc_14ebc ], [ %v2_14e50, %bb ], [ %v0_14edc109, %dec_label_pc_15084 ], [ %v0_14edc108, %dec_label_pc_15018 ], [ %v0_14edc107, %dec_label_pc_14fac ], [ %v7_14ed8, %bb130 ]
  %v1_14edc = add i32 %v0_14edc, 4
  store i32 %v1_14edc, i32* %r2.global-to-local, align 4
  %v3_14edc = sub i32 0, %v0_14edc
  %v4_14edc = and i32 %v1_14edc, %v3_14edc
  %v5_14edc = icmp slt i32 %v4_14edc, 0
  store i1 %v5_14edc, i1* %cpsr_v.global-to-local, align 1
  %v6_14edc = icmp slt i32 %v1_14edc, 0
  store i1 %v6_14edc, i1* %cpsr_n.global-to-local, align 1
  %v7_14edc = icmp eq i32 %v1_14edc, 0
  store i1 %v7_14edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14edc, label %bb132, label %bb133

bb132:                                            ; preds = %bb131
  %v3_14ee0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14ee0, i32* %r0.global-to-local, align 4
  ret i32 %v3_14ee0

bb133:                                            ; preds = %bb131
  %v1_14ee4 = add i32 %v0_14edc, 2
  %v3_14ee4 = sub i32 -3, %v0_14edc
  %v4_14ee4 = and i32 %v3_14ee4, %v1_14edc
  %v5_14ee4 = icmp slt i32 %v4_14ee4, 0
  store i1 %v5_14ee4, i1* %cpsr_v.global-to-local, align 1
  %v6_14ee4 = icmp slt i32 %v1_14ee4, 0
  store i1 %v6_14ee4, i1* %cpsr_n.global-to-local, align 1
  %v7_14ee4 = icmp eq i32 %v1_14edc, 2
  store i1 %v7_14ee4, i1* %cpsr_z.global-to-local, align 1
  %v0_14ee8 = load i32, i32* @r1, align 4
  %v1_14ee8 = inttoptr i32 %v0_14ee8 to i8*
  %v2_14ee8 = load i8, i8* %v1_14ee8, align 1
  %v3_14ee8 = zext i8 %v2_14ee8 to i32
  store i32 %v3_14ee8, i32* %r3.global-to-local, align 4
  %v5_14ee8 = add i32 %v0_14ee8, 1
  store i32 %v5_14ee8, i32* %r1.global-to-local, align 4
  %v3_14eec = inttoptr i32 %v2_14eec to i8*
  store i8 %v2_14ee8, i8* %v3_14eec, align 1
  %v4_14eec = load i32, i32* @r0, align 4
  %v5_14eec = add i32 %v4_14eec, 1
  store i32 %v5_14eec, i32* %r0.global-to-local, align 4
  %v0_14ef0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14ef0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14ef0 = xor i1 %v0_14ef0, %v1_14ef0
  br i1 %v2_14ef0, label %.thread119, label %bb134

bb134:                                            ; preds = %bb133
  %v3_14ef0 = load i32, i32* %r1.global-to-local, align 4
  %v4_14ef0 = inttoptr i32 %v3_14ef0 to i8*
  %v5_14ef0 = load i8, i8* %v4_14ef0, align 1
  %v6_14ef0 = zext i8 %v5_14ef0 to i32
  store i32 %v6_14ef0, i32* %r3.global-to-local, align 4
  %v8_14ef0 = add i32 %v3_14ef0, 1
  store i32 %v8_14ef0, i32* %r1.global-to-local, align 4
  %v6_14ef4 = inttoptr i32 %v5_14eec to i8*
  store i8 %v5_14ef0, i8* %v6_14ef4, align 1
  %v7_14ef4 = load i32, i32* %r0.global-to-local, align 4
  %v8_14ef4 = add i32 %v7_14ef4, 1
  store i32 %v8_14ef4, i32* %r0.global-to-local, align 4
  %v1_14ef8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14ef8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb133, %bb134
  %v7_14efc = phi i32 [ %v8_14ef4, %bb134 ], [ %v5_14eec, %bb133 ]
  %v2_14efc = phi i1 [ %v2_14ef8.pre, %bb134 ], [ %v1_14ef0, %bb133 ]
  %v1_14efc = phi i1 [ %v1_14ef8.pre, %bb134 ], [ %v0_14ef0, %bb133 ]
  %v0_14ef8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14ef8 = xor i1 %v2_14efc, %v1_14efc
  %v4_14ef8 = or i1 %v0_14ef8, %v3_14ef8
  br i1 %v4_14ef8, label %.thread120, label %bb135

bb135:                                            ; preds = %.thread119
  %v5_14ef8 = load i32, i32* %r1.global-to-local, align 4
  %v6_14ef8 = inttoptr i32 %v5_14ef8 to i8*
  %v7_14ef8 = load i8, i8* %v6_14ef8, align 1
  %v8_14ef8 = zext i8 %v7_14ef8 to i32
  store i32 %v8_14ef8, i32* %r3.global-to-local, align 4
  %v10_14ef8 = add i32 %v5_14ef8, 1
  store i32 %v10_14ef8, i32* %r1.global-to-local, align 4
  %v8_14efc = inttoptr i32 %v7_14efc to i8*
  store i8 %v7_14ef8, i8* %v8_14efc, align 1
  %v9_14efc = load i32, i32* %r0.global-to-local, align 4
  %v10_14efc = add i32 %v9_14efc, 1
  store i32 %v10_14efc, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb135
  %v2_14f00 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f00, i32* %r0.global-to-local, align 4
  ret i32 %v2_14f00

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14e58
  %v1_14f04 = sub nsw i32 4, %v1_14e58
  store i32 %v1_14f04, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14f08 = icmp ult i32 %v1_14f04, 2
  store i1 %v8_14f08, i1* %cpsr_n.global-to-local, align 1
  %v9_14f08 = icmp eq i32 %v1_14f04, 2
  store i1 %v9_14f08, i1* %cpsr_z.global-to-local, align 1
  %v1_14f0c = inttoptr i32 %v0_14e40 to i8*
  %v2_14f0c = load i8, i8* %v1_14f0c, align 1
  %v3_14f0c = zext i8 %v2_14f0c to i32
  store i32 %v3_14f0c, i32* %r3.global-to-local, align 4
  %v5_14f0c = add i32 %v0_14e40, 1
  store i32 %v5_14f0c, i32* @r1, align 4
  %v3_14f10 = inttoptr i32 %v1_14e40 to i8*
  store i8 %v2_14f0c, i8* %v3_14f10, align 1
  %v4_14f10 = load i32, i32* @r0, align 4
  %v5_14f10 = add i32 %v4_14f10, 1
  store i32 %v5_14f10, i32* @r0, align 4
  br i1 %v8_14f08, label %.thread11, label %bb136

bb136:                                            ; preds = %dec_label_pc_14f04
  %v6_14f14 = load i32, i32* @r1, align 4
  %v7_14f14 = inttoptr i32 %v6_14f14 to i8*
  %v8_14f14 = load i8, i8* %v7_14f14, align 1
  %v9_14f14 = zext i8 %v8_14f14 to i32
  store i32 %v9_14f14, i32* %r3.global-to-local, align 4
  %v11_14f14 = add i32 %v6_14f14, 1
  store i32 %v11_14f14, i32* @r1, align 4
  %v9_14f18 = inttoptr i32 %v5_14f10 to i8*
  store i8 %v8_14f14, i8* %v9_14f18, align 1
  %v10_14f18 = load i32, i32* @r0, align 4
  %v11_14f18 = add i32 %v10_14f18, 1
  store i32 %v11_14f18, i32* @r0, align 4
  br i1 %v9_14f08, label %.thread11, label %bb137

bb137:                                            ; preds = %bb136
  %v8_14f1c = load i32, i32* @r1, align 4
  %v9_14f1c = inttoptr i32 %v8_14f1c to i8*
  %v10_14f1c = load i8, i8* %v9_14f1c, align 1
  %v11_14f1c = zext i8 %v10_14f1c to i32
  store i32 %v11_14f1c, i32* %r3.global-to-local, align 4
  %v13_14f1c = add i32 %v8_14f1c, 1
  store i32 %v13_14f1c, i32* @r1, align 4
  %v11_14f20 = inttoptr i32 %v11_14f18 to i8*
  store i8 %v10_14f1c, i8* %v11_14f20, align 1
  %v12_14f20 = load i32, i32* @r0, align 4
  %v13_14f20 = add i32 %v12_14f20, 1
  store i32 %v13_14f20, i32* @r0, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb136, %dec_label_pc_14f04, %bb137
  %v0_14f7c75 = phi i32 [ %v11_14f18, %bb136 ], [ %v5_14f10, %dec_label_pc_14f04 ], [ %v13_14f20, %bb137 ]
  %v0_14f24 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f24 = load i32, i32* @ip, align 4
  %v2_14f24 = sub i32 %v0_14f24, %v1_14f24
  store i32 %v2_14f24, i32* %r2.global-to-local, align 4
  %v4_14f24 = xor i32 %v1_14f24, %v0_14f24
  %v5_14f24 = xor i32 %v2_14f24, %v0_14f24
  %v6_14f24 = and i32 %v5_14f24, %v4_14f24
  %v7_14f24 = icmp slt i32 %v6_14f24, 0
  store i1 %v7_14f24, i1* %cpsr_v.global-to-local, align 1
  %v8_14f24 = icmp slt i32 %v2_14f24, 0
  store i1 %v8_14f24, i1* %cpsr_n.global-to-local, align 1
  %v9_14f24 = icmp eq i32 %v0_14f24, %v1_14f24
  store i1 %v9_14f24, i1* %cpsr_z.global-to-local, align 1
  %v5_14f28 = icmp slt i32 %v0_14f24, %v1_14f24
  br i1 %v5_14f28, label %bb131, label %dec_label_pc_14f2c

dec_label_pc_14f2c:                               ; preds = %.thread11
  %v0_14f2c = load i32, i32* @r1, align 4
  %v1_14f2c = urem i32 %v0_14f2c, 4
  store i32 %v1_14f2c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14f2c = icmp eq i32 %v1_14f2c, 0
  store i1 %v2_14f2c, i1* %cpsr_z.global-to-local, align 1
  %extract.t123 = trunc i32 %v0_14f2c to i2
  br i1 %v2_14f2c, label %dec_label_pc_14e68, label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14e60, %dec_label_pc_14f2c
  %v0_14f7c74 = phi i32 [ %v1_14e40, %dec_label_pc_14e60 ], [ %v0_14f7c75, %dec_label_pc_14f2c ]
  %v0_15028 = phi i32 [ %v2_14e50, %dec_label_pc_14e60 ], [ %v2_14f24, %dec_label_pc_14f2c ]
  %v0_14f3c.off0 = phi i2 [ %extract.t, %dec_label_pc_14e60 ], [ %extract.t123, %dec_label_pc_14f2c ]
  %v0_14f34 = phi i32 [ %v0_14e40, %dec_label_pc_14e60 ], [ %v0_14f2c, %dec_label_pc_14f2c ]
  %v1_14f34 = and i32 %v0_14f34, -4
  store i32 %v1_14f34, i32* %r1.global-to-local, align 4
  %v1_14f38 = inttoptr i32 %v1_14f34 to i32*
  %v2_14f38 = load i32, i32* %v1_14f38, align 4
  store i32 %v2_14f38, i32* @lr, align 4
  %v4_14f38 = add i32 %v1_14f34, 4
  store i32 %v4_14f38, i32* %r1.global-to-local, align 4
  %v2_15020 = add i32 %v0_15028, -12
  %v4_15020 = sub i32 11, %v0_15028
  %v5_15020 = and i32 %v4_15020, %v0_15028
  %v6_15020 = icmp slt i32 %v5_15020, 0
  store i1 %v6_15020, i1* %cpsr_v.global-to-local, align 1
  %v7_15020 = icmp slt i32 %v2_15020, 0
  store i1 %v7_15020, i1* %cpsr_n.global-to-local, align 1
  %v8_15020 = icmp eq i32 %v0_15028, 12
  store i1 %v8_15020, i1* %cpsr_z.global-to-local, align 1
  %v5_15024 = icmp slt i32 %v0_15028, 12
  switch i2 %v0_14f3c.off0, label %dec_label_pc_14f48 [
    i2 -1, label %dec_label_pc_15020
    i2 -2, label %dec_label_pc_14fb4
  ]

dec_label_pc_14f48:                               ; preds = %dec_label_pc_14f34
  br i1 %v5_15024, label %dec_label_pc_14f94, label %dec_label_pc_14f50

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14f48
  store i32 %v2_15020, i32* %r2.global-to-local, align 4
  %v3_14f54 = load i32, i32* @r4, align 4
  store i32 %v3_14f54, i32* %stack_var_-16, align 4
  %v6_14f54 = load i32, i32* @r5, align 4
  store i32 %v6_14f54, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14f58

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f58.dec_label_pc_14f58_crit_edge, %dec_label_pc_14f50
  %v0_14f7c = phi i32 [ %v12_14f7c, %dec_label_pc_14f58.dec_label_pc_14f58_crit_edge ], [ %v0_14f7c74, %dec_label_pc_14f50 ]
  %v0_14f5c = phi i32 [ %v0_14f5c.pre, %dec_label_pc_14f58.dec_label_pc_14f58_crit_edge ], [ %v4_14f38, %dec_label_pc_14f50 ]
  %v0_14f58 = phi i32 [ %v0_14f58.pre, %dec_label_pc_14f58.dec_label_pc_14f58_crit_edge ], [ %v2_14f38, %dec_label_pc_14f50 ]
  %v3_14f58 = udiv i32 %v0_14f58, 256
  store i32 %v3_14f58, i32* %r3.global-to-local, align 4
  %v1_14f5c = inttoptr i32 %v0_14f5c to i32*
  %v2_14f5c = load i32, i32* %v1_14f5c, align 4
  store i32 %v2_14f5c, i32* %r4.global-to-local, align 4
  %v3_14f5c = add i32 %v0_14f5c, 4
  %v4_14f5c = inttoptr i32 %v3_14f5c to i32*
  %v5_14f5c = load i32, i32* %v4_14f5c, align 4
  store i32 %v5_14f5c, i32* %r5.global-to-local, align 4
  %v6_14f5c = add i32 %v0_14f5c, 8
  %v7_14f5c = inttoptr i32 %v6_14f5c to i32*
  %v8_14f5c = load i32, i32* %v7_14f5c, align 4
  store i32 %v8_14f5c, i32* %ip.global-to-local, align 4
  %v9_14f5c = add i32 %v0_14f5c, 12
  %v10_14f5c = inttoptr i32 %v9_14f5c to i32*
  %v11_14f5c = load i32, i32* %v10_14f5c, align 4
  store i32 %v11_14f5c, i32* @lr, align 4
  %v12_14f5c = add i32 %v0_14f5c, 16
  store i32 %v12_14f5c, i32* %r1.global-to-local, align 4
  %v4_14f60 = mul i32 %v2_14f5c, 16777216
  %v5_14f60 = or i32 %v4_14f60, %v3_14f58
  store i32 %v5_14f60, i32* %r3.global-to-local, align 4
  %v3_14f64 = udiv i32 %v2_14f5c, 256
  %v4_14f68 = mul i32 %v5_14f5c, 16777216
  %v5_14f68 = or i32 %v4_14f68, %v3_14f64
  store i32 %v5_14f68, i32* %r4.global-to-local, align 4
  %v3_14f6c = udiv i32 %v5_14f5c, 256
  %v4_14f70 = mul i32 %v8_14f5c, 16777216
  %v5_14f70 = or i32 %v4_14f70, %v3_14f6c
  store i32 %v5_14f70, i32* %r5.global-to-local, align 4
  %v3_14f74 = udiv i32 %v8_14f5c, 256
  %v4_14f78 = mul i32 %v11_14f5c, 16777216
  %v5_14f78 = or i32 %v4_14f78, %v3_14f74
  store i32 %v5_14f78, i32* @ip, align 4
  %v1_14f7c = inttoptr i32 %v0_14f7c to i32*
  store i32 %v5_14f60, i32* %v1_14f7c, align 4
  %v3_14f7c = add i32 %v0_14f7c, 4
  %v4_14f7c = inttoptr i32 %v3_14f7c to i32*
  %v5_14f7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14f7c, i32* %v4_14f7c, align 4
  %v6_14f7c = add i32 %v0_14f7c, 8
  %v7_14f7c = inttoptr i32 %v6_14f7c to i32*
  %v8_14f7c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14f7c, i32* %v7_14f7c, align 4
  %v9_14f7c = add i32 %v0_14f7c, 12
  %v10_14f7c = inttoptr i32 %v9_14f7c to i32*
  %v11_14f7c = load i32, i32* @ip, align 4
  store i32 %v11_14f7c, i32* %v10_14f7c, align 4
  %v12_14f7c = add i32 %v0_14f7c, 16
  store i32 %v12_14f7c, i32* @r0, align 4
  %v0_14f80 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f80 = add i32 %v0_14f80, -16
  store i32 %v2_14f80, i32* %r2.global-to-local, align 4
  %v6_14f84 = icmp slt i32 %v0_14f80, 16
  br i1 %v6_14f84, label %dec_label_pc_14f88, label %dec_label_pc_14f58.dec_label_pc_14f58_crit_edge

dec_label_pc_14f58.dec_label_pc_14f58_crit_edge:  ; preds = %dec_label_pc_14f58
  %v0_14f58.pre = load i32, i32* @lr, align 4
  %v0_14f5c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f58

dec_label_pc_14f88:                               ; preds = %dec_label_pc_14f58
  %v2_14f88 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14f88, i32* @r4, align 4
  %v5_14f88 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14f88, i32* @r5, align 4
  %v2_14f8c = add i32 %v0_14f80, -4
  store i32 %v2_14f8c, i32* %r2.global-to-local, align 4
  %v4_14f8c = add i32 %v0_14f80, 2147483632
  %v5_14f8c = and i32 %v2_14f8c, %v4_14f8c
  %v6_14f8c = icmp slt i32 %v5_14f8c, 0
  store i1 %v6_14f8c, i1* %cpsr_v.global-to-local, align 1
  %v7_14f8c = icmp slt i32 %v2_14f8c, 0
  store i1 %v7_14f8c, i1* %cpsr_n.global-to-local, align 1
  %v8_14f8c = icmp eq i32 %v2_14f8c, 0
  store i1 %v8_14f8c, i1* %cpsr_z.global-to-local, align 1
  %v5_14f90 = icmp slt i32 %v2_14f80, -12
  br i1 %v5_14f90, label %dec_label_pc_14fac, label %dec_label_pc_14f94

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f88, %dec_label_pc_14f48, %dec_label_pc_14f94
  %v1_14fa0 = phi i32 [ %v4_14fa0, %dec_label_pc_14f94 ], [ %v12_14f7c, %dec_label_pc_14f88 ], [ %v0_14f7c74, %dec_label_pc_14f48 ]
  %v0_14f94 = load i32, i32* @lr, align 4
  %v3_14f94 = udiv i32 %v0_14f94, 256
  store i32 %v3_14f94, i32* %ip.global-to-local, align 4
  %v0_14f98 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f98 = inttoptr i32 %v0_14f98 to i32*
  %v2_14f98 = load i32, i32* %v1_14f98, align 4
  store i32 %v2_14f98, i32* @lr, align 4
  %v4_14f98 = add i32 %v0_14f98, 4
  store i32 %v4_14f98, i32* %r1.global-to-local, align 4
  %v4_14f9c = mul i32 %v2_14f98, 16777216
  %v5_14f9c = or i32 %v4_14f9c, %v3_14f94
  store i32 %v5_14f9c, i32* @ip, align 4
  %v2_14fa0 = inttoptr i32 %v1_14fa0 to i32*
  store i32 %v5_14f9c, i32* %v2_14fa0, align 4
  %v3_14fa0 = load i32, i32* @r0, align 4
  %v4_14fa0 = add i32 %v3_14fa0, 4
  store i32 %v4_14fa0, i32* @r0, align 4
  %v0_14fa4 = load i32, i32* %r2.global-to-local, align 4
  %v2_14fa4 = add i32 %v0_14fa4, -4
  store i32 %v2_14fa4, i32* %r2.global-to-local, align 4
  %v6_14fa8 = icmp slt i32 %v0_14fa4, 4
  br i1 %v6_14fa8, label %dec_label_pc_14fac.loopexit, label %dec_label_pc_14f94

dec_label_pc_14fac.loopexit:                      ; preds = %dec_label_pc_14f94
  %v4_14fa4 = sub i32 3, %v0_14fa4
  %v5_14fa4 = and i32 %v4_14fa4, %v0_14fa4
  %v6_14fa4 = icmp slt i32 %v5_14fa4, 0
  %v7_14fa4 = icmp slt i32 %v2_14fa4, 0
  store i1 %v6_14fa4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14fa4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14fac.loopexit, %dec_label_pc_14f88
  %v2_14eec111 = phi i32 [ %v4_14fa0, %dec_label_pc_14fac.loopexit ], [ %v12_14f7c, %dec_label_pc_14f88 ]
  %v0_14edc107 = phi i32 [ %v2_14fa4, %dec_label_pc_14fac.loopexit ], [ %v2_14f8c, %dec_label_pc_14f88 ]
  %v0_14fac = load i32, i32* %r1.global-to-local, align 4
  %v1_14fac = add i32 %v0_14fac, -3
  store i32 %v1_14fac, i32* @r1, align 4
  br label %bb131

dec_label_pc_14fb4:                               ; preds = %dec_label_pc_14f34
  br i1 %v5_15024, label %dec_label_pc_15000, label %dec_label_pc_14fbc

dec_label_pc_14fbc:                               ; preds = %dec_label_pc_14fb4
  store i32 %v2_15020, i32* %r2.global-to-local, align 4
  %v3_14fc0 = load i32, i32* @r4, align 4
  store i32 %v3_14fc0, i32* %stack_var_-16, align 4
  %v6_14fc0 = load i32, i32* @r5, align 4
  store i32 %v6_14fc0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14fc4

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14fc4.dec_label_pc_14fc4_crit_edge, %dec_label_pc_14fbc
  %v0_14fe8 = phi i32 [ %v12_14fe8, %dec_label_pc_14fc4.dec_label_pc_14fc4_crit_edge ], [ %v0_14f7c74, %dec_label_pc_14fbc ]
  %v0_14fc8 = phi i32 [ %v0_14fc8.pre, %dec_label_pc_14fc4.dec_label_pc_14fc4_crit_edge ], [ %v4_14f38, %dec_label_pc_14fbc ]
  %v0_14fc4 = phi i32 [ %v0_14fc4.pre, %dec_label_pc_14fc4.dec_label_pc_14fc4_crit_edge ], [ %v2_14f38, %dec_label_pc_14fbc ]
  %v3_14fc4 = udiv i32 %v0_14fc4, 65536
  store i32 %v3_14fc4, i32* %r3.global-to-local, align 4
  %v1_14fc8 = inttoptr i32 %v0_14fc8 to i32*
  %v2_14fc8 = load i32, i32* %v1_14fc8, align 4
  store i32 %v2_14fc8, i32* %r4.global-to-local, align 4
  %v3_14fc8 = add i32 %v0_14fc8, 4
  %v4_14fc8 = inttoptr i32 %v3_14fc8 to i32*
  %v5_14fc8 = load i32, i32* %v4_14fc8, align 4
  store i32 %v5_14fc8, i32* %r5.global-to-local, align 4
  %v6_14fc8 = add i32 %v0_14fc8, 8
  %v7_14fc8 = inttoptr i32 %v6_14fc8 to i32*
  %v8_14fc8 = load i32, i32* %v7_14fc8, align 4
  store i32 %v8_14fc8, i32* %ip.global-to-local, align 4
  %v9_14fc8 = add i32 %v0_14fc8, 12
  %v10_14fc8 = inttoptr i32 %v9_14fc8 to i32*
  %v11_14fc8 = load i32, i32* %v10_14fc8, align 4
  store i32 %v11_14fc8, i32* @lr, align 4
  %v12_14fc8 = add i32 %v0_14fc8, 16
  store i32 %v12_14fc8, i32* %r1.global-to-local, align 4
  %v4_14fcc = mul i32 %v2_14fc8, 65536
  %v5_14fcc = or i32 %v4_14fcc, %v3_14fc4
  store i32 %v5_14fcc, i32* %r3.global-to-local, align 4
  %v3_14fd0 = udiv i32 %v2_14fc8, 65536
  %v4_14fd4 = mul i32 %v5_14fc8, 65536
  %v5_14fd4 = or i32 %v4_14fd4, %v3_14fd0
  store i32 %v5_14fd4, i32* %r4.global-to-local, align 4
  %v3_14fd8 = udiv i32 %v5_14fc8, 65536
  %v4_14fdc = mul i32 %v8_14fc8, 65536
  %v5_14fdc = or i32 %v4_14fdc, %v3_14fd8
  store i32 %v5_14fdc, i32* %r5.global-to-local, align 4
  %v3_14fe0 = udiv i32 %v8_14fc8, 65536
  %v4_14fe4 = mul i32 %v11_14fc8, 65536
  %v5_14fe4 = or i32 %v4_14fe4, %v3_14fe0
  store i32 %v5_14fe4, i32* @ip, align 4
  %v1_14fe8 = inttoptr i32 %v0_14fe8 to i32*
  store i32 %v5_14fcc, i32* %v1_14fe8, align 4
  %v3_14fe8 = add i32 %v0_14fe8, 4
  %v4_14fe8 = inttoptr i32 %v3_14fe8 to i32*
  %v5_14fe8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14fe8, i32* %v4_14fe8, align 4
  %v6_14fe8 = add i32 %v0_14fe8, 8
  %v7_14fe8 = inttoptr i32 %v6_14fe8 to i32*
  %v8_14fe8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14fe8, i32* %v7_14fe8, align 4
  %v9_14fe8 = add i32 %v0_14fe8, 12
  %v10_14fe8 = inttoptr i32 %v9_14fe8 to i32*
  %v11_14fe8 = load i32, i32* @ip, align 4
  store i32 %v11_14fe8, i32* %v10_14fe8, align 4
  %v12_14fe8 = add i32 %v0_14fe8, 16
  store i32 %v12_14fe8, i32* @r0, align 4
  %v0_14fec = load i32, i32* %r2.global-to-local, align 4
  %v2_14fec = add i32 %v0_14fec, -16
  store i32 %v2_14fec, i32* %r2.global-to-local, align 4
  %v6_14ff0 = icmp slt i32 %v0_14fec, 16
  br i1 %v6_14ff0, label %dec_label_pc_14ff4, label %dec_label_pc_14fc4.dec_label_pc_14fc4_crit_edge

dec_label_pc_14fc4.dec_label_pc_14fc4_crit_edge:  ; preds = %dec_label_pc_14fc4
  %v0_14fc4.pre = load i32, i32* @lr, align 4
  %v0_14fc8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14fc4

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fc4
  %v2_14ff4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ff4, i32* @r4, align 4
  %v5_14ff4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14ff4, i32* @r5, align 4
  %v2_14ff8 = add i32 %v0_14fec, -4
  store i32 %v2_14ff8, i32* %r2.global-to-local, align 4
  %v4_14ff8 = add i32 %v0_14fec, 2147483632
  %v5_14ff8 = and i32 %v2_14ff8, %v4_14ff8
  %v6_14ff8 = icmp slt i32 %v5_14ff8, 0
  store i1 %v6_14ff8, i1* %cpsr_v.global-to-local, align 1
  %v7_14ff8 = icmp slt i32 %v2_14ff8, 0
  store i1 %v7_14ff8, i1* %cpsr_n.global-to-local, align 1
  %v8_14ff8 = icmp eq i32 %v2_14ff8, 0
  store i1 %v8_14ff8, i1* %cpsr_z.global-to-local, align 1
  %v5_14ffc = icmp slt i32 %v2_14fec, -12
  br i1 %v5_14ffc, label %dec_label_pc_15018, label %dec_label_pc_15000

dec_label_pc_15000:                               ; preds = %dec_label_pc_14ff4, %dec_label_pc_14fb4, %dec_label_pc_15000
  %v1_1500c = phi i32 [ %v4_1500c, %dec_label_pc_15000 ], [ %v12_14fe8, %dec_label_pc_14ff4 ], [ %v0_14f7c74, %dec_label_pc_14fb4 ]
  %v0_15000 = load i32, i32* @lr, align 4
  %v3_15000 = udiv i32 %v0_15000, 65536
  store i32 %v3_15000, i32* %ip.global-to-local, align 4
  %v0_15004 = load i32, i32* %r1.global-to-local, align 4
  %v1_15004 = inttoptr i32 %v0_15004 to i32*
  %v2_15004 = load i32, i32* %v1_15004, align 4
  store i32 %v2_15004, i32* @lr, align 4
  %v4_15004 = add i32 %v0_15004, 4
  store i32 %v4_15004, i32* %r1.global-to-local, align 4
  %v4_15008 = mul i32 %v2_15004, 65536
  %v5_15008 = or i32 %v4_15008, %v3_15000
  store i32 %v5_15008, i32* @ip, align 4
  %v2_1500c = inttoptr i32 %v1_1500c to i32*
  store i32 %v5_15008, i32* %v2_1500c, align 4
  %v3_1500c = load i32, i32* @r0, align 4
  %v4_1500c = add i32 %v3_1500c, 4
  store i32 %v4_1500c, i32* @r0, align 4
  %v0_15010 = load i32, i32* %r2.global-to-local, align 4
  %v2_15010 = add i32 %v0_15010, -4
  store i32 %v2_15010, i32* %r2.global-to-local, align 4
  %v6_15014 = icmp slt i32 %v0_15010, 4
  br i1 %v6_15014, label %dec_label_pc_15018.loopexit, label %dec_label_pc_15000

dec_label_pc_15018.loopexit:                      ; preds = %dec_label_pc_15000
  %v4_15010 = sub i32 3, %v0_15010
  %v5_15010 = and i32 %v4_15010, %v0_15010
  %v6_15010 = icmp slt i32 %v5_15010, 0
  %v7_15010 = icmp slt i32 %v2_15010, 0
  store i1 %v6_15010, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15010, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15018.loopexit, %dec_label_pc_14ff4
  %v2_14eec112 = phi i32 [ %v4_1500c, %dec_label_pc_15018.loopexit ], [ %v12_14fe8, %dec_label_pc_14ff4 ]
  %v0_14edc108 = phi i32 [ %v2_15010, %dec_label_pc_15018.loopexit ], [ %v2_14ff8, %dec_label_pc_14ff4 ]
  %v0_15018 = load i32, i32* %r1.global-to-local, align 4
  %v1_15018 = add i32 %v0_15018, -2
  store i32 %v1_15018, i32* @r1, align 4
  br label %bb131

dec_label_pc_15020:                               ; preds = %dec_label_pc_14f34
  br i1 %v5_15024, label %dec_label_pc_1506c, label %dec_label_pc_15028

dec_label_pc_15028:                               ; preds = %dec_label_pc_15020
  store i32 %v2_15020, i32* %r2.global-to-local, align 4
  %v3_1502c = load i32, i32* @r4, align 4
  store i32 %v3_1502c, i32* %stack_var_-16, align 4
  %v6_1502c = load i32, i32* @r5, align 4
  store i32 %v6_1502c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_15030.dec_label_pc_15030_crit_edge, %dec_label_pc_15028
  %v0_15054 = phi i32 [ %v12_15054, %dec_label_pc_15030.dec_label_pc_15030_crit_edge ], [ %v0_14f7c74, %dec_label_pc_15028 ]
  %v0_15034 = phi i32 [ %v0_15034.pre, %dec_label_pc_15030.dec_label_pc_15030_crit_edge ], [ %v4_14f38, %dec_label_pc_15028 ]
  %v0_15030 = phi i32 [ %v0_15030.pre, %dec_label_pc_15030.dec_label_pc_15030_crit_edge ], [ %v2_14f38, %dec_label_pc_15028 ]
  %v3_15030 = udiv i32 %v0_15030, 16777216
  store i32 %v3_15030, i32* %r3.global-to-local, align 4
  %v1_15034 = inttoptr i32 %v0_15034 to i32*
  %v2_15034 = load i32, i32* %v1_15034, align 4
  store i32 %v2_15034, i32* %r4.global-to-local, align 4
  %v3_15034 = add i32 %v0_15034, 4
  %v4_15034 = inttoptr i32 %v3_15034 to i32*
  %v5_15034 = load i32, i32* %v4_15034, align 4
  store i32 %v5_15034, i32* %r5.global-to-local, align 4
  %v6_15034 = add i32 %v0_15034, 8
  %v7_15034 = inttoptr i32 %v6_15034 to i32*
  %v8_15034 = load i32, i32* %v7_15034, align 4
  store i32 %v8_15034, i32* %ip.global-to-local, align 4
  %v9_15034 = add i32 %v0_15034, 12
  %v10_15034 = inttoptr i32 %v9_15034 to i32*
  %v11_15034 = load i32, i32* %v10_15034, align 4
  store i32 %v11_15034, i32* @lr, align 4
  %v12_15034 = add i32 %v0_15034, 16
  store i32 %v12_15034, i32* %r1.global-to-local, align 4
  %v4_15038 = mul i32 %v2_15034, 256
  %v5_15038 = or i32 %v4_15038, %v3_15030
  store i32 %v5_15038, i32* %r3.global-to-local, align 4
  %v3_1503c = udiv i32 %v2_15034, 16777216
  %v4_15040 = mul i32 %v5_15034, 256
  %v5_15040 = or i32 %v4_15040, %v3_1503c
  store i32 %v5_15040, i32* %r4.global-to-local, align 4
  %v3_15044 = udiv i32 %v5_15034, 16777216
  %v4_15048 = mul i32 %v8_15034, 256
  %v5_15048 = or i32 %v4_15048, %v3_15044
  store i32 %v5_15048, i32* %r5.global-to-local, align 4
  %v3_1504c = udiv i32 %v8_15034, 16777216
  %v4_15050 = mul i32 %v11_15034, 256
  %v5_15050 = or i32 %v4_15050, %v3_1504c
  store i32 %v5_15050, i32* @ip, align 4
  %v1_15054 = inttoptr i32 %v0_15054 to i32*
  store i32 %v5_15038, i32* %v1_15054, align 4
  %v3_15054 = add i32 %v0_15054, 4
  %v4_15054 = inttoptr i32 %v3_15054 to i32*
  %v5_15054 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15054, i32* %v4_15054, align 4
  %v6_15054 = add i32 %v0_15054, 8
  %v7_15054 = inttoptr i32 %v6_15054 to i32*
  %v8_15054 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15054, i32* %v7_15054, align 4
  %v9_15054 = add i32 %v0_15054, 12
  %v10_15054 = inttoptr i32 %v9_15054 to i32*
  %v11_15054 = load i32, i32* @ip, align 4
  store i32 %v11_15054, i32* %v10_15054, align 4
  %v12_15054 = add i32 %v0_15054, 16
  store i32 %v12_15054, i32* @r0, align 4
  %v0_15058 = load i32, i32* %r2.global-to-local, align 4
  %v2_15058 = add i32 %v0_15058, -16
  store i32 %v2_15058, i32* %r2.global-to-local, align 4
  %v6_1505c = icmp slt i32 %v0_15058, 16
  br i1 %v6_1505c, label %dec_label_pc_15060, label %dec_label_pc_15030.dec_label_pc_15030_crit_edge

dec_label_pc_15030.dec_label_pc_15030_crit_edge:  ; preds = %dec_label_pc_15030
  %v0_15030.pre = load i32, i32* @lr, align 4
  %v0_15034.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15030

dec_label_pc_15060:                               ; preds = %dec_label_pc_15030
  %v2_15060 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15060, i32* @r4, align 4
  %v5_15060 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15060, i32* @r5, align 4
  %v2_15064 = add i32 %v0_15058, -4
  store i32 %v2_15064, i32* %r2.global-to-local, align 4
  %v4_15064 = add i32 %v0_15058, 2147483632
  %v5_15064 = and i32 %v2_15064, %v4_15064
  %v6_15064 = icmp slt i32 %v5_15064, 0
  store i1 %v6_15064, i1* %cpsr_v.global-to-local, align 1
  %v7_15064 = icmp slt i32 %v2_15064, 0
  store i1 %v7_15064, i1* %cpsr_n.global-to-local, align 1
  %v8_15064 = icmp eq i32 %v2_15064, 0
  store i1 %v8_15064, i1* %cpsr_z.global-to-local, align 1
  %v5_15068 = icmp slt i32 %v2_15058, -12
  br i1 %v5_15068, label %dec_label_pc_15084, label %dec_label_pc_1506c

dec_label_pc_1506c:                               ; preds = %dec_label_pc_15060, %dec_label_pc_15020, %dec_label_pc_1506c
  %v1_15078 = phi i32 [ %v4_15078, %dec_label_pc_1506c ], [ %v12_15054, %dec_label_pc_15060 ], [ %v0_14f7c74, %dec_label_pc_15020 ]
  %v0_1506c = load i32, i32* @lr, align 4
  %v3_1506c = udiv i32 %v0_1506c, 16777216
  store i32 %v3_1506c, i32* %ip.global-to-local, align 4
  %v0_15070 = load i32, i32* %r1.global-to-local, align 4
  %v1_15070 = inttoptr i32 %v0_15070 to i32*
  %v2_15070 = load i32, i32* %v1_15070, align 4
  store i32 %v2_15070, i32* @lr, align 4
  %v4_15070 = add i32 %v0_15070, 4
  store i32 %v4_15070, i32* %r1.global-to-local, align 4
  %v4_15074 = mul i32 %v2_15070, 256
  %v5_15074 = or i32 %v4_15074, %v3_1506c
  store i32 %v5_15074, i32* @ip, align 4
  %v2_15078 = inttoptr i32 %v1_15078 to i32*
  store i32 %v5_15074, i32* %v2_15078, align 4
  %v3_15078 = load i32, i32* @r0, align 4
  %v4_15078 = add i32 %v3_15078, 4
  store i32 %v4_15078, i32* @r0, align 4
  %v0_1507c = load i32, i32* %r2.global-to-local, align 4
  %v2_1507c = add i32 %v0_1507c, -4
  store i32 %v2_1507c, i32* %r2.global-to-local, align 4
  %v6_15080 = icmp slt i32 %v0_1507c, 4
  br i1 %v6_15080, label %dec_label_pc_15084.loopexit, label %dec_label_pc_1506c

dec_label_pc_15084.loopexit:                      ; preds = %dec_label_pc_1506c
  %v4_1507c = sub i32 3, %v0_1507c
  %v5_1507c = and i32 %v4_1507c, %v0_1507c
  %v6_1507c = icmp slt i32 %v5_1507c, 0
  %v7_1507c = icmp slt i32 %v2_1507c, 0
  store i1 %v6_1507c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1507c, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15084

dec_label_pc_15084:                               ; preds = %dec_label_pc_15084.loopexit, %dec_label_pc_15060
  %v2_14eec113 = phi i32 [ %v4_15078, %dec_label_pc_15084.loopexit ], [ %v12_15054, %dec_label_pc_15060 ]
  %v0_14edc109 = phi i32 [ %v2_1507c, %dec_label_pc_15084.loopexit ], [ %v2_15064, %dec_label_pc_15060 ]
  %v0_15084 = load i32, i32* %r1.global-to-local, align 4
  %v1_15084 = add i32 %v0_15084, -1
  store i32 %v1_15084, i32* @r1, align 4
  br label %bb131

dec_label_pc_1508c:                               ; preds = %dec_label_pc_14e40
  %v1_1508c = load i32, i32* @r2, align 4
  %v2_1508c = add i32 %v1_1508c, %v0_14e40
  store i32 %v2_1508c, i32* %r1.global-to-local, align 4
  %v2_15090 = add i32 %v1_1508c, %v1_14e40
  store i32 %v2_15090, i32* %r0.global-to-local, align 4
  %v2_15094 = add i32 %v1_1508c, -4
  store i32 %v2_15094, i32* %r2.global-to-local, align 4
  %v4_15094 = sub i32 3, %v1_1508c
  %v5_15094 = and i32 %v4_15094, %v1_1508c
  %v6_15094 = icmp slt i32 %v5_15094, 0
  store i1 %v6_15094, i1* %cpsr_v.global-to-local, align 1
  %v7_15094 = icmp slt i32 %v2_15094, 0
  store i1 %v7_15094, i1* %cpsr_n.global-to-local, align 1
  %v8_15094 = icmp eq i32 %v1_1508c, 4
  store i1 %v8_15094, i1* %cpsr_z.global-to-local, align 1
  %v5_15098 = icmp slt i32 %v1_1508c, 4
  br i1 %v5_15098, label %bb141, label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %dec_label_pc_1508c
  %v1_1509c = urem i32 %v2_15090, 4
  store i32 %v1_1509c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1509c = icmp eq i32 %v1_1509c, 0
  store i1 %v2_1509c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1509c, label %dec_label_pc_150a4, label %dec_label_pc_15144

dec_label_pc_150a4:                               ; preds = %dec_label_pc_1509c
  %v1_150a4 = urem i32 %v2_1508c, 4
  store i32 %v1_150a4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_150a4 = icmp eq i32 %v1_150a4, 0
  store i1 %v2_150a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_150a4, label %dec_label_pc_150ac, label %dec_label_pc_15170

dec_label_pc_150ac:                               ; preds = %dec_label_pc_150a4, %dec_label_pc_15168
  %v0_150c448 = phi i32 [ %v2_15090, %dec_label_pc_150a4 ], [ %v0_151b831, %dec_label_pc_15168 ]
  %v0_150c047 = phi i32 [ %v2_1508c, %dec_label_pc_150a4 ], [ %v0_15168, %dec_label_pc_15168 ]
  %v0_150ac = phi i32 [ %v2_15094, %dec_label_pc_150a4 ], [ %v2_15160, %dec_label_pc_15168 ]
  %v2_150ac = add i32 %v0_150ac, -8
  store i32 %v2_150ac, i32* %r2.global-to-local, align 4
  %v4_150ac = sub i32 7, %v0_150ac
  %v5_150ac = and i32 %v4_150ac, %v0_150ac
  %v6_150ac = icmp slt i32 %v5_150ac, 0
  store i1 %v6_150ac, i1* %cpsr_v.global-to-local, align 1
  %v7_150ac = icmp slt i32 %v2_150ac, 0
  store i1 %v7_150ac, i1* %cpsr_n.global-to-local, align 1
  %v8_150ac = icmp eq i32 %v0_150ac, 8
  store i1 %v8_150ac, i1* %cpsr_z.global-to-local, align 1
  %v5_150b0 = icmp slt i32 %v0_150ac, 8
  br i1 %v5_150b0, label %dec_label_pc_150fc, label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %dec_label_pc_150ac
  %v3_150b4 = load i32, i32* @r4, align 4
  store i32 %v3_150b4, i32* %stack_var_-8, align 4
  %v6_150b4 = load i32, i32* @lr, align 4
  %v2_150b8 = add i32 %v0_150ac, -28
  store i32 %v2_150b8, i32* %r2.global-to-local, align 4
  %v4_150b8 = sub i32 27, %v0_150ac
  %v5_150b8 = and i32 %v4_150b8, %v2_150ac
  %v6_150b8 = icmp slt i32 %v5_150b8, 0
  store i1 %v6_150b8, i1* %cpsr_v.global-to-local, align 1
  %v7_150b8 = icmp slt i32 %v2_150b8, 0
  store i1 %v7_150b8, i1* %cpsr_n.global-to-local, align 1
  %v8_150b8 = icmp eq i32 %v2_150ac, 20
  store i1 %v8_150b8, i1* %cpsr_z.global-to-local, align 1
  %v5_150bc = icmp slt i32 %v2_150ac, 20
  br i1 %v5_150bc, label %dec_label_pc_150d8, label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %dec_label_pc_150b4, %dec_label_pc_150c0.dec_label_pc_150c0_crit_edge
  %v0_150c4 = phi i32 [ %v1_150cc, %dec_label_pc_150c0.dec_label_pc_150c0_crit_edge ], [ %v0_150c448, %dec_label_pc_150b4 ]
  %v0_150c0 = phi i32 [ %v0_150c0.pre, %dec_label_pc_150c0.dec_label_pc_150c0_crit_edge ], [ %v0_150c047, %dec_label_pc_150b4 ]
  %v1_150c0 = add i32 %v0_150c0, -4
  %v2_150c0 = inttoptr i32 %v1_150c0 to i32*
  %v3_150c0 = load i32, i32* %v2_150c0, align 4
  store i32 %v3_150c0, i32* %r3.global-to-local, align 4
  %v4_150c0 = add i32 %v0_150c0, -8
  %v5_150c0 = inttoptr i32 %v4_150c0 to i32*
  %v6_150c0 = load i32, i32* %v5_150c0, align 4
  store i32 %v6_150c0, i32* %r4.global-to-local, align 4
  %v7_150c0 = add i32 %v0_150c0, -12
  %v8_150c0 = inttoptr i32 %v7_150c0 to i32*
  %v9_150c0 = load i32, i32* %v8_150c0, align 4
  store i32 %v9_150c0, i32* %ip.global-to-local, align 4
  %v10_150c0 = add i32 %v0_150c0, -16
  %v11_150c0 = inttoptr i32 %v10_150c0 to i32*
  %v12_150c0 = load i32, i32* %v11_150c0, align 4
  store i32 %v12_150c0, i32* %lr.global-to-local, align 4
  store i32 %v10_150c0, i32* %r1.global-to-local, align 4
  %v1_150c4 = add i32 %v0_150c4, -16
  %v2_150c4 = inttoptr i32 %v1_150c4 to i32*
  store i32 %v3_150c0, i32* %v2_150c4, align 4
  %v4_150c4 = add i32 %v0_150c4, -12
  %v5_150c4 = inttoptr i32 %v4_150c4 to i32*
  %v6_150c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_150c4, i32* %v5_150c4, align 4
  %v7_150c4 = add i32 %v0_150c4, -8
  %v8_150c4 = inttoptr i32 %v7_150c4 to i32*
  %v9_150c4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_150c4, i32* %v8_150c4, align 4
  %v10_150c4 = add i32 %v0_150c4, -4
  %v11_150c4 = inttoptr i32 %v10_150c4 to i32*
  %v12_150c4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_150c4, i32* %v11_150c4, align 4
  store i32 %v1_150c4, i32* %r0.global-to-local, align 4
  %v0_150c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_150c8 = add i32 %v0_150c8, -4
  %v2_150c8 = inttoptr i32 %v1_150c8 to i32*
  %v3_150c8 = load i32, i32* %v2_150c8, align 4
  store i32 %v3_150c8, i32* %r3.global-to-local, align 4
  %v4_150c8 = add i32 %v0_150c8, -8
  %v5_150c8 = inttoptr i32 %v4_150c8 to i32*
  %v6_150c8 = load i32, i32* %v5_150c8, align 4
  store i32 %v6_150c8, i32* %r4.global-to-local, align 4
  %v7_150c8 = add i32 %v0_150c8, -12
  %v8_150c8 = inttoptr i32 %v7_150c8 to i32*
  %v9_150c8 = load i32, i32* %v8_150c8, align 4
  store i32 %v9_150c8, i32* @ip, align 4
  %v10_150c8 = add i32 %v0_150c8, -16
  %v11_150c8 = inttoptr i32 %v10_150c8 to i32*
  %v12_150c8 = load i32, i32* %v11_150c8, align 4
  store i32 %v12_150c8, i32* %lr.global-to-local, align 4
  store i32 %v10_150c8, i32* %r1.global-to-local, align 4
  %v1_150cc = add i32 %v0_150c4, -32
  %v2_150cc = inttoptr i32 %v1_150cc to i32*
  store i32 %v3_150c8, i32* %v2_150cc, align 4
  %v4_150cc = add i32 %v0_150c4, -28
  %v5_150cc = inttoptr i32 %v4_150cc to i32*
  %v6_150cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_150cc, i32* %v5_150cc, align 4
  %v7_150cc = add i32 %v0_150c4, -24
  %v8_150cc = inttoptr i32 %v7_150cc to i32*
  %v9_150cc = load i32, i32* @ip, align 4
  store i32 %v9_150cc, i32* %v8_150cc, align 4
  %v10_150cc = add i32 %v0_150c4, -20
  %v11_150cc = inttoptr i32 %v10_150cc to i32*
  %v12_150cc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_150cc, i32* %v11_150cc, align 4
  store i32 %v1_150cc, i32* %r0.global-to-local, align 4
  %v0_150d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_150d0 = add i32 %v0_150d0, -32
  store i32 %v2_150d0, i32* %r2.global-to-local, align 4
  %v6_150d4 = icmp slt i32 %v0_150d0, 32
  br i1 %v6_150d4, label %dec_label_pc_150d8.loopexit, label %dec_label_pc_150c0.dec_label_pc_150c0_crit_edge

dec_label_pc_150c0.dec_label_pc_150c0_crit_edge:  ; preds = %dec_label_pc_150c0
  %v0_150c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_150c0

dec_label_pc_150d8.loopexit:                      ; preds = %dec_label_pc_150c0
  %v4_150d0 = sub i32 31, %v0_150d0
  %v5_150d0 = and i32 %v4_150d0, %v0_150d0
  %v6_150d0 = icmp slt i32 %v5_150d0, 0
  %v7_150d0 = icmp slt i32 %v2_150d0, 0
  store i1 %v6_150d0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_150d0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_150d8

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150d8.loopexit, %dec_label_pc_150b4
  %v6_150e0 = phi i32 [ %v1_150cc, %dec_label_pc_150d8.loopexit ], [ %v0_150c448, %dec_label_pc_150b4 ]
  %v0_150e8.pr = phi i32 [ %v2_150d0, %dec_label_pc_150d8.loopexit ], [ %v2_150b8, %dec_label_pc_150b4 ]
  %v4_150d8 = add i32 %v0_150e8.pr, 16
  %v6_150d8 = sub i32 0, %v0_150e8.pr
  %v7_150d8 = and i32 %v4_150d8, %v6_150d8
  %v8_150d8 = icmp slt i32 %v7_150d8, 0
  store i1 %v8_150d8, i1* %cpsr_v.global-to-local, align 1
  %v9_150d8 = icmp slt i32 %v4_150d8, 0
  store i1 %v9_150d8, i1* %cpsr_n.global-to-local, align 1
  %v10_150d8 = icmp eq i32 %v4_150d8, 0
  store i1 %v10_150d8, i1* %cpsr_z.global-to-local, align 1
  %v5_150dc = icmp slt i32 %v0_150e8.pr, -16
  br i1 %v5_150dc, label %.thread13, label %bb138

bb138:                                            ; preds = %dec_label_pc_150d8
  %v6_150dc = load i32, i32* %r1.global-to-local, align 4
  %v7_150dc = add i32 %v6_150dc, -4
  %v8_150dc = inttoptr i32 %v7_150dc to i32*
  %v9_150dc = load i32, i32* %v8_150dc, align 4
  store i32 %v9_150dc, i32* %r3.global-to-local, align 4
  %v10_150dc = add i32 %v6_150dc, -8
  %v11_150dc = inttoptr i32 %v10_150dc to i32*
  %v12_150dc = load i32, i32* %v11_150dc, align 4
  store i32 %v12_150dc, i32* %r4.global-to-local, align 4
  %v13_150dc = add i32 %v6_150dc, -12
  %v14_150dc = inttoptr i32 %v13_150dc to i32*
  %v15_150dc = load i32, i32* %v14_150dc, align 4
  store i32 %v15_150dc, i32* @ip, align 4
  %v16_150dc = add i32 %v6_150dc, -16
  %v17_150dc = inttoptr i32 %v16_150dc to i32*
  %v18_150dc = load i32, i32* %v17_150dc, align 4
  store i32 %v18_150dc, i32* %lr.global-to-local, align 4
  store i32 %v16_150dc, i32* %r1.global-to-local, align 4
  %v7_150e0 = add i32 %v6_150e0, -16
  %v8_150e0 = inttoptr i32 %v7_150e0 to i32*
  store i32 %v9_150dc, i32* %v8_150e0, align 4
  %v10_150e0 = add i32 %v6_150e0, -12
  %v11_150e0 = inttoptr i32 %v10_150e0 to i32*
  %v12_150e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_150e0, i32* %v11_150e0, align 4
  %v13_150e0 = add i32 %v6_150e0, -8
  %v14_150e0 = inttoptr i32 %v13_150e0 to i32*
  %v15_150e0 = load i32, i32* @ip, align 4
  store i32 %v15_150e0, i32* %v14_150e0, align 4
  %v16_150e0 = add i32 %v6_150e0, -4
  %v17_150e0 = inttoptr i32 %v16_150e0 to i32*
  %v18_150e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_150e0, i32* %v17_150e0, align 4
  store i32 %v7_150e0, i32* %r0.global-to-local, align 4
  %v6_150e4 = load i32, i32* %r2.global-to-local, align 4
  %v7_150e4 = add i32 %v6_150e4, -16
  store i32 %v7_150e4, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_150d8, %bb138
  %v6_150f0 = phi i32 [ %v7_150e0, %bb138 ], [ %v6_150e0, %dec_label_pc_150d8 ]
  %v0_150e8 = phi i32 [ %v7_150e4, %bb138 ], [ %v0_150e8.pr, %dec_label_pc_150d8 ]
  %v4_150e8 = add i32 %v0_150e8, 20
  store i32 %v4_150e8, i32* %r2.global-to-local, align 4
  %v6_150e8 = sub i32 0, %v0_150e8
  %v7_150e8 = and i32 %v4_150e8, %v6_150e8
  %v8_150e8 = icmp slt i32 %v7_150e8, 0
  store i1 %v8_150e8, i1* %cpsr_v.global-to-local, align 1
  %v9_150e8 = icmp slt i32 %v4_150e8, 0
  store i1 %v9_150e8, i1* %cpsr_n.global-to-local, align 1
  %v10_150e8 = icmp eq i32 %v4_150e8, 0
  store i1 %v10_150e8, i1* %cpsr_z.global-to-local, align 1
  %v5_150ec = icmp slt i32 %v0_150e8, -20
  br i1 %v5_150ec, label %.thread15, label %bb139

bb139:                                            ; preds = %.thread13
  %v6_150ec = load i32, i32* %r1.global-to-local, align 4
  %v7_150ec = add i32 %v6_150ec, -4
  %v8_150ec = inttoptr i32 %v7_150ec to i32*
  %v9_150ec = load i32, i32* %v8_150ec, align 4
  store i32 %v9_150ec, i32* %r3.global-to-local, align 4
  %v10_150ec = add i32 %v6_150ec, -8
  %v11_150ec = inttoptr i32 %v10_150ec to i32*
  %v12_150ec = load i32, i32* %v11_150ec, align 4
  store i32 %v12_150ec, i32* @ip, align 4
  %v13_150ec = add i32 %v6_150ec, -12
  %v14_150ec = inttoptr i32 %v13_150ec to i32*
  %v15_150ec = load i32, i32* %v14_150ec, align 4
  store i32 %v15_150ec, i32* %lr.global-to-local, align 4
  store i32 %v13_150ec, i32* %r1.global-to-local, align 4
  %v7_150f0 = add i32 %v6_150f0, -12
  %v8_150f0 = inttoptr i32 %v7_150f0 to i32*
  store i32 %v9_150ec, i32* %v8_150f0, align 4
  %v10_150f0 = add i32 %v6_150f0, -8
  %v11_150f0 = inttoptr i32 %v10_150f0 to i32*
  %v12_150f0 = load i32, i32* @ip, align 4
  store i32 %v12_150f0, i32* %v11_150f0, align 4
  %v13_150f0 = add i32 %v6_150f0, -4
  %v14_150f0 = inttoptr i32 %v13_150f0 to i32*
  %v15_150f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_150f0, i32* %v14_150f0, align 4
  store i32 %v7_150f0, i32* %r0.global-to-local, align 4
  %v6_150f4 = load i32, i32* %r2.global-to-local, align 4
  %v7_150f4 = add i32 %v6_150f4, -12
  store i32 %v7_150f4, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb139
  %v6_1511456 = phi i32 [ %v6_150f0, %.thread13 ], [ %v7_150f0, %bb139 ]
  %v0_150fc54 = phi i32 [ %v4_150e8, %.thread13 ], [ %v7_150f4, %bb139 ]
  %v2_150f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_150f8, i32* @r4, align 4
  store i32 %v6_150b4, i32* @lr, align 4
  br label %dec_label_pc_150fc

dec_label_pc_150fc:                               ; preds = %dec_label_pc_150ac, %.thread15
  %v7_1510c = phi i32 [ %v0_150c448, %dec_label_pc_150ac ], [ %v6_1511456, %.thread15 ]
  %v0_150fc = phi i32 [ %v2_150ac, %dec_label_pc_150ac ], [ %v0_150fc54, %.thread15 ]
  %v2_150fc = add i32 %v0_150fc, 8
  store i32 %v2_150fc, i32* %r2.global-to-local, align 4
  %v4_150fc = sub i32 0, %v0_150fc
  %v5_150fc = and i32 %v2_150fc, %v4_150fc
  %v6_150fc = icmp slt i32 %v5_150fc, 0
  store i1 %v6_150fc, i1* %cpsr_v.global-to-local, align 1
  %v7_150fc = icmp slt i32 %v2_150fc, 0
  store i1 %v7_150fc, i1* %cpsr_n.global-to-local, align 1
  %v8_150fc = icmp eq i32 %v2_150fc, 0
  store i1 %v8_150fc, i1* %cpsr_z.global-to-local, align 1
  %v5_15100 = icmp slt i32 %v0_150fc, -8
  br i1 %v5_15100, label %bb141, label %dec_label_pc_15104

dec_label_pc_15104:                               ; preds = %dec_label_pc_150fc
  %v6_15104 = add i32 %v0_150fc, 4
  store i32 %v6_15104, i32* %r2.global-to-local, align 4
  %v8_15104 = sub i32 -5, %v0_150fc
  %v9_15104 = and i32 %v8_15104, %v2_150fc
  %v10_15104 = icmp slt i32 %v9_15104, 0
  store i1 %v10_15104, i1* %cpsr_v.global-to-local, align 1
  %v11_15104 = icmp slt i32 %v6_15104, 0
  store i1 %v11_15104, i1* %cpsr_n.global-to-local, align 1
  %v12_15104 = icmp eq i32 %v2_150fc, 4
  store i1 %v12_15104, i1* %cpsr_z.global-to-local, align 1
  %v5_15108 = icmp slt i32 %v2_150fc, 4
  %v6_15108 = load i32, i32* %r1.global-to-local, align 4
  %v7_15108 = add i32 %v6_15108, -4
  %v8_15108 = inttoptr i32 %v7_15108 to i32*
  %v9_15108 = load i32, i32* %v8_15108, align 4
  store i32 %v9_15108, i32* %r3.global-to-local, align 4
  br i1 %v5_15108, label %.thread19, label %bb140

.thread19:                                        ; preds = %dec_label_pc_15104
  store i32 %v7_15108, i32* %r1.global-to-local, align 4
  %v8_1510c = add i32 %v7_1510c, -4
  %v9_1510c = inttoptr i32 %v8_1510c to i32*
  store i32 %v9_15108, i32* %v9_1510c, align 4
  %v10_1510c = load i32, i32* %r0.global-to-local, align 4
  %v11_1510c = add i32 %v10_1510c, -4
  store i32 %v11_1510c, i32* %r0.global-to-local, align 4
  %v0_1511c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_15104
  %v10_15110 = add i32 %v6_15108, -8
  %v11_15110 = inttoptr i32 %v10_15110 to i32*
  %v12_15110 = load i32, i32* %v11_15110, align 4
  store i32 %v12_15110, i32* @ip, align 4
  store i32 %v10_15110, i32* %r1.global-to-local, align 4
  %v7_15114 = add i32 %v7_1510c, -8
  %v8_15114 = inttoptr i32 %v7_15114 to i32*
  store i32 %v9_15108, i32* %v8_15114, align 4
  %v10_15114 = add i32 %v7_1510c, -4
  %v11_15114 = inttoptr i32 %v10_15114 to i32*
  %v12_15114 = load i32, i32* @ip, align 4
  store i32 %v12_15114, i32* %v11_15114, align 4
  store i32 %v7_15114, i32* %r0.global-to-local, align 4
  %v6_15118 = load i32, i32* %r2.global-to-local, align 4
  %v7_15118 = add i32 %v6_15118, -4
  store i32 %v7_15118, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_150fc, %dec_label_pc_1508c, %dec_label_pc_152c0, %dec_label_pc_15254, %dec_label_pc_151e8, %bb140
  %v2_15120 = phi i32 [ %v11_1510c, %.thread19 ], [ %v0_151b831, %.thread25 ], [ %v7_1510c, %dec_label_pc_150fc ], [ %v2_15090, %dec_label_pc_1508c ], [ %v2_1512c64, %dec_label_pc_152c0 ], [ %v2_1512c63, %dec_label_pc_15254 ], [ %v2_1512c62, %dec_label_pc_151e8 ], [ %v7_15114, %bb140 ]
  %v0_1511c = phi i32 [ %v0_1511c.pre, %.thread19 ], [ %v2_15160, %.thread25 ], [ %v2_150fc, %dec_label_pc_150fc ], [ %v2_15094, %dec_label_pc_1508c ], [ %v0_1511c60, %dec_label_pc_152c0 ], [ %v0_1511c59, %dec_label_pc_15254 ], [ %v0_1511c58, %dec_label_pc_151e8 ], [ %v7_15118, %bb140 ]
  %v1_1511c = add i32 %v0_1511c, 4
  store i32 %v1_1511c, i32* %r2.global-to-local, align 4
  %v3_1511c = sub i32 0, %v0_1511c
  %v4_1511c = and i32 %v1_1511c, %v3_1511c
  %v5_1511c = icmp slt i32 %v4_1511c, 0
  store i1 %v5_1511c, i1* %cpsr_v.global-to-local, align 1
  %v6_1511c = icmp slt i32 %v1_1511c, 0
  store i1 %v6_1511c, i1* %cpsr_n.global-to-local, align 1
  %v7_1511c = icmp eq i32 %v1_1511c, 0
  store i1 %v7_1511c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1511c, label %.thread122, label %bb142

bb142:                                            ; preds = %bb141
  %v1_15124 = add i32 %v0_1511c, 2
  %v3_15124 = sub i32 -3, %v0_1511c
  %v4_15124 = and i32 %v3_15124, %v1_1511c
  %v5_15124 = icmp slt i32 %v4_15124, 0
  store i1 %v5_15124, i1* %cpsr_v.global-to-local, align 1
  %v6_15124 = icmp slt i32 %v1_15124, 0
  store i1 %v6_15124, i1* %cpsr_n.global-to-local, align 1
  %v7_15124 = icmp eq i32 %v1_1511c, 2
  store i1 %v7_15124, i1* %cpsr_z.global-to-local, align 1
  %v0_15128 = load i32, i32* %r1.global-to-local, align 4
  %v1_15128 = add i32 %v0_15128, -1
  %v2_15128 = inttoptr i32 %v1_15128 to i8*
  %v3_15128 = load i8, i8* %v2_15128, align 1
  %v4_15128 = zext i8 %v3_15128 to i32
  store i32 %v4_15128, i32* %r3.global-to-local, align 4
  store i32 %v1_15128, i32* %r1.global-to-local, align 4
  %v3_1512c = add i32 %v2_15120, -1
  %v4_1512c = inttoptr i32 %v3_1512c to i8*
  store i8 %v3_15128, i8* %v4_1512c, align 1
  %v5_1512c = load i32, i32* %r0.global-to-local, align 4
  %v6_1512c = add i32 %v5_1512c, -1
  store i32 %v6_1512c, i32* %r0.global-to-local, align 4
  %v0_15130 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15130 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15130 = xor i1 %v0_15130, %v1_15130
  br i1 %v2_15130, label %.thread121, label %bb143

bb143:                                            ; preds = %bb142
  %v3_15130 = load i32, i32* %r1.global-to-local, align 4
  %v4_15130 = add i32 %v3_15130, -1
  %v5_15130 = inttoptr i32 %v4_15130 to i8*
  %v6_15130 = load i8, i8* %v5_15130, align 1
  %v7_15130 = zext i8 %v6_15130 to i32
  store i32 %v7_15130, i32* %r3.global-to-local, align 4
  store i32 %v4_15130, i32* %r1.global-to-local, align 4
  %v6_15134 = add i32 %v5_1512c, -2
  %v7_15134 = inttoptr i32 %v6_15134 to i8*
  store i8 %v6_15130, i8* %v7_15134, align 1
  %v8_15134 = load i32, i32* %r0.global-to-local, align 4
  %v9_15134 = add i32 %v8_15134, -1
  store i32 %v9_15134, i32* %r0.global-to-local, align 4
  %v1_15138.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15138.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb142, %bb143
  %v7_1513c = phi i32 [ %v9_15134, %bb143 ], [ %v6_1512c, %bb142 ]
  %v2_1513c = phi i1 [ %v2_15138.pre, %bb143 ], [ %v1_15130, %bb142 ]
  %v1_1513c = phi i1 [ %v1_15138.pre, %bb143 ], [ %v0_15130, %bb142 ]
  %v0_15138 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15138 = xor i1 %v2_1513c, %v1_1513c
  %v4_15138 = or i1 %v0_15138, %v3_15138
  br i1 %v4_15138, label %.thread122, label %bb144

bb144:                                            ; preds = %.thread121
  %v5_15138 = load i32, i32* %r1.global-to-local, align 4
  %v6_15138 = add i32 %v5_15138, -1
  %v7_15138 = inttoptr i32 %v6_15138 to i8*
  %v8_15138 = load i8, i8* %v7_15138, align 1
  %v9_15138 = zext i8 %v8_15138 to i32
  store i32 %v9_15138, i32* %r3.global-to-local, align 4
  store i32 %v6_15138, i32* %r1.global-to-local, align 4
  %v8_1513c = add i32 %v7_1513c, -1
  %v9_1513c = inttoptr i32 %v8_1513c to i8*
  store i8 %v8_15138, i8* %v9_1513c, align 1
  %v10_1513c = load i32, i32* %r0.global-to-local, align 4
  %v11_1513c = add i32 %v10_1513c, -1
  store i32 %v11_1513c, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_15144:                               ; preds = %dec_label_pc_1509c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15144 = icmp eq i32 %v1_1509c, 1
  store i1 %v8_15144, i1* %cpsr_n.global-to-local, align 1
  %v9_15144 = icmp eq i32 %v1_1509c, 2
  store i1 %v9_15144, i1* %cpsr_z.global-to-local, align 1
  %v1_15148 = add i32 %v2_1508c, -1
  %v2_15148 = inttoptr i32 %v1_15148 to i8*
  %v3_15148 = load i8, i8* %v2_15148, align 1
  %v4_15148 = zext i8 %v3_15148 to i32
  store i32 %v4_15148, i32* %r3.global-to-local, align 4
  store i32 %v1_15148, i32* %r1.global-to-local, align 4
  %v3_1514c = add i32 %v2_15090, -1
  %v4_1514c = inttoptr i32 %v3_1514c to i8*
  store i8 %v3_15148, i8* %v4_1514c, align 1
  %v5_1514c = load i32, i32* %r0.global-to-local, align 4
  %v6_1514c = add i32 %v5_1514c, -1
  store i32 %v6_1514c, i32* %r0.global-to-local, align 4
  br i1 %v8_15144, label %.thread25, label %bb145

bb145:                                            ; preds = %dec_label_pc_15144
  %v6_15150 = load i32, i32* %r1.global-to-local, align 4
  %v7_15150 = add i32 %v6_15150, -1
  %v8_15150 = inttoptr i32 %v7_15150 to i8*
  %v9_15150 = load i8, i8* %v8_15150, align 1
  %v10_15150 = zext i8 %v9_15150 to i32
  store i32 %v10_15150, i32* %r3.global-to-local, align 4
  store i32 %v7_15150, i32* %r1.global-to-local, align 4
  %v9_15154 = add i32 %v5_1514c, -2
  %v10_15154 = inttoptr i32 %v9_15154 to i8*
  store i8 %v9_15150, i8* %v10_15154, align 1
  %v11_15154 = load i32, i32* %r0.global-to-local, align 4
  %v12_15154 = add i32 %v11_15154, -1
  store i32 %v12_15154, i32* %r0.global-to-local, align 4
  br i1 %v9_15144, label %.thread25, label %bb146

bb146:                                            ; preds = %bb145
  %v8_15158 = load i32, i32* %r1.global-to-local, align 4
  %v9_15158 = add i32 %v8_15158, -1
  %v10_15158 = inttoptr i32 %v9_15158 to i8*
  %v11_15158 = load i8, i8* %v10_15158, align 1
  %v12_15158 = zext i8 %v11_15158 to i32
  store i32 %v12_15158, i32* %r3.global-to-local, align 4
  store i32 %v9_15158, i32* %r1.global-to-local, align 4
  %v11_1515c = add i32 %v11_15154, -2
  %v12_1515c = inttoptr i32 %v11_1515c to i8*
  store i8 %v11_15158, i8* %v12_1515c, align 1
  %v13_1515c = load i32, i32* %r0.global-to-local, align 4
  %v14_1515c = add i32 %v13_1515c, -1
  store i32 %v14_1515c, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb145, %dec_label_pc_15144, %bb146
  %v0_151b831 = phi i32 [ %v12_15154, %bb145 ], [ %v6_1514c, %dec_label_pc_15144 ], [ %v14_1515c, %bb146 ]
  %v0_15160 = load i32, i32* %r2.global-to-local, align 4
  %v1_15160 = load i32, i32* @ip, align 4
  %v2_15160 = sub i32 %v0_15160, %v1_15160
  store i32 %v2_15160, i32* %r2.global-to-local, align 4
  %v4_15160 = xor i32 %v1_15160, %v0_15160
  %v5_15160 = xor i32 %v2_15160, %v0_15160
  %v6_15160 = and i32 %v5_15160, %v4_15160
  %v7_15160 = icmp slt i32 %v6_15160, 0
  store i1 %v7_15160, i1* %cpsr_v.global-to-local, align 1
  %v8_15160 = icmp slt i32 %v2_15160, 0
  store i1 %v8_15160, i1* %cpsr_n.global-to-local, align 1
  %v9_15160 = icmp eq i32 %v0_15160, %v1_15160
  store i1 %v9_15160, i1* %cpsr_z.global-to-local, align 1
  %v5_15164 = icmp slt i32 %v0_15160, %v1_15160
  br i1 %v5_15164, label %bb141, label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %.thread25
  %v0_15168 = load i32, i32* %r1.global-to-local, align 4
  %v1_15168 = urem i32 %v0_15168, 4
  store i32 %v1_15168, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15168 = icmp eq i32 %v1_15168, 0
  store i1 %v2_15168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15168, label %dec_label_pc_150ac, label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_150a4, %dec_label_pc_15168
  %v0_151b830 = phi i32 [ %v2_15090, %dec_label_pc_150a4 ], [ %v0_151b831, %dec_label_pc_15168 ]
  %v0_15264 = phi i32 [ %v2_15094, %dec_label_pc_150a4 ], [ %v2_15160, %dec_label_pc_15168 ]
  %v0_15170 = phi i32 [ %v2_1508c, %dec_label_pc_150a4 ], [ %v0_15168, %dec_label_pc_15168 ]
  %v0_15178 = phi i32 [ %v1_150a4, %dec_label_pc_150a4 ], [ %v1_15168, %dec_label_pc_15168 ]
  %v1_15170 = and i32 %v0_15170, -4
  store i32 %v1_15170, i32* %r1.global-to-local, align 4
  %v1_15174 = inttoptr i32 %v1_15170 to i32*
  %v2_15174 = load i32, i32* %v1_15174, align 4
  store i32 %v2_15174, i32* %r3.global-to-local, align 4
  %v7_15178 = icmp ult i32 %v0_15178, 2
  %v2_1525c = add i32 %v0_15264, -12
  %v4_1525c = sub i32 11, %v0_15264
  %v5_1525c = and i32 %v4_1525c, %v0_15264
  %v6_1525c = icmp slt i32 %v5_1525c, 0
  store i1 %v6_1525c, i1* %cpsr_v.global-to-local, align 1
  %v7_1525c = icmp slt i32 %v2_1525c, 0
  store i1 %v7_1525c, i1* %cpsr_n.global-to-local, align 1
  %v8_1525c = icmp eq i32 %v0_15264, 12
  store i1 %v8_1525c, i1* %cpsr_z.global-to-local, align 1
  %v5_15260 = icmp slt i32 %v0_15264, 12
  br i1 %v7_15178, label %dec_label_pc_1525c, label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_15170
  %v8_15178 = icmp eq i32 %v0_15178, 2
  br i1 %v8_15178, label %dec_label_pc_151f0, label %dec_label_pc_15184

dec_label_pc_15184:                               ; preds = %dec_label_pc_15180
  br i1 %v5_15260, label %dec_label_pc_151d0, label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %dec_label_pc_15184
  store i32 %v2_1525c, i32* %r2.global-to-local, align 4
  %v3_15190 = load i32, i32* @r4, align 4
  store i32 %v3_15190, i32* %stack_var_-12, align 4
  %v6_15190 = load i32, i32* @r5, align 4
  store i32 %v6_15190, i32* %stack_var_-8, align 4
  %v9_15190 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15194

dec_label_pc_15194:                               ; preds = %dec_label_pc_15194.dec_label_pc_15194_crit_edge, %dec_label_pc_1518c
  %v0_151b8 = phi i32 [ %v1_151b8, %dec_label_pc_15194.dec_label_pc_15194_crit_edge ], [ %v0_151b830, %dec_label_pc_1518c ]
  %v0_15198 = phi i32 [ %v0_15198.pre, %dec_label_pc_15194.dec_label_pc_15194_crit_edge ], [ %v1_15170, %dec_label_pc_1518c ]
  %v0_15194 = phi i32 [ %v0_15194.pre, %dec_label_pc_15194.dec_label_pc_15194_crit_edge ], [ %v2_15174, %dec_label_pc_1518c ]
  %v3_15194 = mul i32 %v0_15194, 256
  store i32 %v3_15194, i32* %lr.global-to-local, align 4
  %v1_15198 = add i32 %v0_15198, -4
  %v2_15198 = inttoptr i32 %v1_15198 to i32*
  %v3_15198 = load i32, i32* %v2_15198, align 4
  store i32 %v3_15198, i32* %r3.global-to-local, align 4
  %v4_15198 = add i32 %v0_15198, -8
  %v5_15198 = inttoptr i32 %v4_15198 to i32*
  %v6_15198 = load i32, i32* %v5_15198, align 4
  store i32 %v6_15198, i32* %r4.global-to-local, align 4
  %v7_15198 = add i32 %v0_15198, -12
  %v8_15198 = inttoptr i32 %v7_15198 to i32*
  %v9_15198 = load i32, i32* %v8_15198, align 4
  store i32 %v9_15198, i32* %r5.global-to-local, align 4
  %v10_15198 = add i32 %v0_15198, -16
  %v11_15198 = inttoptr i32 %v10_15198 to i32*
  %v12_15198 = load i32, i32* %v11_15198, align 4
  store i32 %v10_15198, i32* %r1.global-to-local, align 4
  %v4_1519c = udiv i32 %v12_15198, 16777216
  %v5_1519c = or i32 %v4_1519c, %v3_15194
  store i32 %v5_1519c, i32* %lr.global-to-local, align 4
  %v3_151a0 = mul i32 %v12_15198, 256
  %v4_151a4 = udiv i32 %v9_15198, 16777216
  %v5_151a4 = or i32 %v3_151a0, %v4_151a4
  store i32 %v5_151a4, i32* @ip, align 4
  %v3_151a8 = mul i32 %v9_15198, 256
  %v4_151ac = udiv i32 %v6_15198, 16777216
  %v5_151ac = or i32 %v3_151a8, %v4_151ac
  store i32 %v5_151ac, i32* %r5.global-to-local, align 4
  %v3_151b0 = mul i32 %v6_15198, 256
  %v4_151b4 = udiv i32 %v3_15198, 16777216
  %v5_151b4 = or i32 %v3_151b0, %v4_151b4
  store i32 %v5_151b4, i32* %r4.global-to-local, align 4
  %v1_151b8 = add i32 %v0_151b8, -16
  %v2_151b8 = inttoptr i32 %v1_151b8 to i32*
  store i32 %v5_151b4, i32* %v2_151b8, align 4
  %v4_151b8 = add i32 %v0_151b8, -12
  %v5_151b8 = inttoptr i32 %v4_151b8 to i32*
  %v6_151b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_151b8, i32* %v5_151b8, align 4
  %v7_151b8 = add i32 %v0_151b8, -8
  %v8_151b8 = inttoptr i32 %v7_151b8 to i32*
  %v9_151b8 = load i32, i32* @ip, align 4
  store i32 %v9_151b8, i32* %v8_151b8, align 4
  %v10_151b8 = add i32 %v0_151b8, -4
  %v11_151b8 = inttoptr i32 %v10_151b8 to i32*
  %v12_151b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_151b8, i32* %v11_151b8, align 4
  store i32 %v1_151b8, i32* %r0.global-to-local, align 4
  %v0_151bc = load i32, i32* %r2.global-to-local, align 4
  %v2_151bc = add i32 %v0_151bc, -16
  store i32 %v2_151bc, i32* %r2.global-to-local, align 4
  %v6_151c0 = icmp slt i32 %v0_151bc, 16
  br i1 %v6_151c0, label %dec_label_pc_151c4, label %dec_label_pc_15194.dec_label_pc_15194_crit_edge

dec_label_pc_15194.dec_label_pc_15194_crit_edge:  ; preds = %dec_label_pc_15194
  %v0_15194.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15198.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15194

dec_label_pc_151c4:                               ; preds = %dec_label_pc_15194
  %v2_151c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_151c4, i32* @r4, align 4
  %v5_151c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_151c4, i32* @r5, align 4
  store i32 %v9_15190, i32* @lr, align 4
  %v2_151c8 = add i32 %v0_151bc, -4
  store i32 %v2_151c8, i32* %r2.global-to-local, align 4
  %v4_151c8 = add i32 %v0_151bc, 2147483632
  %v5_151c8 = and i32 %v2_151c8, %v4_151c8
  %v6_151c8 = icmp slt i32 %v5_151c8, 0
  store i1 %v6_151c8, i1* %cpsr_v.global-to-local, align 1
  %v7_151c8 = icmp slt i32 %v2_151c8, 0
  store i1 %v7_151c8, i1* %cpsr_n.global-to-local, align 1
  %v8_151c8 = icmp eq i32 %v2_151c8, 0
  store i1 %v8_151c8, i1* %cpsr_z.global-to-local, align 1
  %v5_151cc = icmp slt i32 %v2_151bc, -12
  br i1 %v5_151cc, label %dec_label_pc_151e8, label %dec_label_pc_151d0

dec_label_pc_151d0:                               ; preds = %dec_label_pc_151c4, %dec_label_pc_15184, %dec_label_pc_151d0
  %v1_151dc = phi i32 [ %v5_151dc, %dec_label_pc_151d0 ], [ %v1_151b8, %dec_label_pc_151c4 ], [ %v0_151b830, %dec_label_pc_15184 ]
  %v0_151d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_151d0 = mul i32 %v0_151d0, 256
  store i32 %v3_151d0, i32* %ip.global-to-local, align 4
  %v0_151d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_151d4 = add i32 %v0_151d4, -4
  %v2_151d4 = inttoptr i32 %v1_151d4 to i32*
  %v3_151d4 = load i32, i32* %v2_151d4, align 4
  store i32 %v3_151d4, i32* %r3.global-to-local, align 4
  store i32 %v1_151d4, i32* %r1.global-to-local, align 4
  %v4_151d8 = udiv i32 %v3_151d4, 16777216
  %v5_151d8 = or i32 %v4_151d8, %v3_151d0
  store i32 %v5_151d8, i32* @ip, align 4
  %v2_151dc = add i32 %v1_151dc, -4
  %v3_151dc = inttoptr i32 %v2_151dc to i32*
  store i32 %v5_151d8, i32* %v3_151dc, align 4
  %v4_151dc = load i32, i32* %r0.global-to-local, align 4
  %v5_151dc = add i32 %v4_151dc, -4
  store i32 %v5_151dc, i32* %r0.global-to-local, align 4
  %v0_151e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_151e0 = add i32 %v0_151e0, -4
  store i32 %v2_151e0, i32* %r2.global-to-local, align 4
  %v6_151e4 = icmp slt i32 %v0_151e0, 4
  br i1 %v6_151e4, label %dec_label_pc_151e8.loopexit, label %dec_label_pc_151d0

dec_label_pc_151e8.loopexit:                      ; preds = %dec_label_pc_151d0
  %v4_151e0 = sub i32 3, %v0_151e0
  %v5_151e0 = and i32 %v4_151e0, %v0_151e0
  %v6_151e0 = icmp slt i32 %v5_151e0, 0
  %v7_151e0 = icmp slt i32 %v2_151e0, 0
  store i1 %v6_151e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_151e0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151e8

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151e8.loopexit, %dec_label_pc_151c4
  %v2_1512c62 = phi i32 [ %v5_151dc, %dec_label_pc_151e8.loopexit ], [ %v1_151b8, %dec_label_pc_151c4 ]
  %v0_1511c58 = phi i32 [ %v2_151e0, %dec_label_pc_151e8.loopexit ], [ %v2_151c8, %dec_label_pc_151c4 ]
  %v0_151e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_151e8 = add i32 %v0_151e8, 3
  store i32 %v1_151e8, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_151f0:                               ; preds = %dec_label_pc_15180
  br i1 %v5_15260, label %dec_label_pc_1523c, label %dec_label_pc_151f8

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151f0
  store i32 %v2_1525c, i32* %r2.global-to-local, align 4
  %v3_151fc = load i32, i32* @r4, align 4
  store i32 %v3_151fc, i32* %stack_var_-12, align 4
  %v6_151fc = load i32, i32* @r5, align 4
  store i32 %v6_151fc, i32* %stack_var_-8, align 4
  %v9_151fc = load i32, i32* @lr, align 4
  br label %dec_label_pc_15200

dec_label_pc_15200:                               ; preds = %dec_label_pc_15200.dec_label_pc_15200_crit_edge, %dec_label_pc_151f8
  %v0_15224 = phi i32 [ %v1_15224, %dec_label_pc_15200.dec_label_pc_15200_crit_edge ], [ %v0_151b830, %dec_label_pc_151f8 ]
  %v0_15204 = phi i32 [ %v0_15204.pre, %dec_label_pc_15200.dec_label_pc_15200_crit_edge ], [ %v1_15170, %dec_label_pc_151f8 ]
  %v0_15200 = phi i32 [ %v0_15200.pre, %dec_label_pc_15200.dec_label_pc_15200_crit_edge ], [ %v2_15174, %dec_label_pc_151f8 ]
  %v3_15200 = mul i32 %v0_15200, 65536
  store i32 %v3_15200, i32* %lr.global-to-local, align 4
  %v1_15204 = add i32 %v0_15204, -4
  %v2_15204 = inttoptr i32 %v1_15204 to i32*
  %v3_15204 = load i32, i32* %v2_15204, align 4
  store i32 %v3_15204, i32* %r3.global-to-local, align 4
  %v4_15204 = add i32 %v0_15204, -8
  %v5_15204 = inttoptr i32 %v4_15204 to i32*
  %v6_15204 = load i32, i32* %v5_15204, align 4
  store i32 %v6_15204, i32* %r4.global-to-local, align 4
  %v7_15204 = add i32 %v0_15204, -12
  %v8_15204 = inttoptr i32 %v7_15204 to i32*
  %v9_15204 = load i32, i32* %v8_15204, align 4
  store i32 %v9_15204, i32* %r5.global-to-local, align 4
  %v10_15204 = add i32 %v0_15204, -16
  %v11_15204 = inttoptr i32 %v10_15204 to i32*
  %v12_15204 = load i32, i32* %v11_15204, align 4
  store i32 %v10_15204, i32* %r1.global-to-local, align 4
  %v4_15208 = udiv i32 %v12_15204, 65536
  %v5_15208 = or i32 %v4_15208, %v3_15200
  store i32 %v5_15208, i32* %lr.global-to-local, align 4
  %v3_1520c = mul i32 %v12_15204, 65536
  %v4_15210 = udiv i32 %v9_15204, 65536
  %v5_15210 = or i32 %v3_1520c, %v4_15210
  store i32 %v5_15210, i32* @ip, align 4
  %v3_15214 = mul i32 %v9_15204, 65536
  %v4_15218 = udiv i32 %v6_15204, 65536
  %v5_15218 = or i32 %v3_15214, %v4_15218
  store i32 %v5_15218, i32* %r5.global-to-local, align 4
  %v3_1521c = mul i32 %v6_15204, 65536
  %v4_15220 = udiv i32 %v3_15204, 65536
  %v5_15220 = or i32 %v3_1521c, %v4_15220
  store i32 %v5_15220, i32* %r4.global-to-local, align 4
  %v1_15224 = add i32 %v0_15224, -16
  %v2_15224 = inttoptr i32 %v1_15224 to i32*
  store i32 %v5_15220, i32* %v2_15224, align 4
  %v4_15224 = add i32 %v0_15224, -12
  %v5_15224 = inttoptr i32 %v4_15224 to i32*
  %v6_15224 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15224, i32* %v5_15224, align 4
  %v7_15224 = add i32 %v0_15224, -8
  %v8_15224 = inttoptr i32 %v7_15224 to i32*
  %v9_15224 = load i32, i32* @ip, align 4
  store i32 %v9_15224, i32* %v8_15224, align 4
  %v10_15224 = add i32 %v0_15224, -4
  %v11_15224 = inttoptr i32 %v10_15224 to i32*
  %v12_15224 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15224, i32* %v11_15224, align 4
  store i32 %v1_15224, i32* %r0.global-to-local, align 4
  %v0_15228 = load i32, i32* %r2.global-to-local, align 4
  %v2_15228 = add i32 %v0_15228, -16
  store i32 %v2_15228, i32* %r2.global-to-local, align 4
  %v6_1522c = icmp slt i32 %v0_15228, 16
  br i1 %v6_1522c, label %dec_label_pc_15230, label %dec_label_pc_15200.dec_label_pc_15200_crit_edge

dec_label_pc_15200.dec_label_pc_15200_crit_edge:  ; preds = %dec_label_pc_15200
  %v0_15200.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15204.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15200

dec_label_pc_15230:                               ; preds = %dec_label_pc_15200
  %v2_15230 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15230, i32* @r4, align 4
  %v5_15230 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_15230, i32* @r5, align 4
  store i32 %v9_151fc, i32* @lr, align 4
  %v2_15234 = add i32 %v0_15228, -4
  store i32 %v2_15234, i32* %r2.global-to-local, align 4
  %v4_15234 = add i32 %v0_15228, 2147483632
  %v5_15234 = and i32 %v2_15234, %v4_15234
  %v6_15234 = icmp slt i32 %v5_15234, 0
  store i1 %v6_15234, i1* %cpsr_v.global-to-local, align 1
  %v7_15234 = icmp slt i32 %v2_15234, 0
  store i1 %v7_15234, i1* %cpsr_n.global-to-local, align 1
  %v8_15234 = icmp eq i32 %v2_15234, 0
  store i1 %v8_15234, i1* %cpsr_z.global-to-local, align 1
  %v5_15238 = icmp slt i32 %v2_15228, -12
  br i1 %v5_15238, label %dec_label_pc_15254, label %dec_label_pc_1523c

dec_label_pc_1523c:                               ; preds = %dec_label_pc_15230, %dec_label_pc_151f0, %dec_label_pc_1523c
  %v1_15248 = phi i32 [ %v5_15248, %dec_label_pc_1523c ], [ %v1_15224, %dec_label_pc_15230 ], [ %v0_151b830, %dec_label_pc_151f0 ]
  %v0_1523c = load i32, i32* %r3.global-to-local, align 4
  %v3_1523c = mul i32 %v0_1523c, 65536
  store i32 %v3_1523c, i32* %ip.global-to-local, align 4
  %v0_15240 = load i32, i32* %r1.global-to-local, align 4
  %v1_15240 = add i32 %v0_15240, -4
  %v2_15240 = inttoptr i32 %v1_15240 to i32*
  %v3_15240 = load i32, i32* %v2_15240, align 4
  store i32 %v3_15240, i32* %r3.global-to-local, align 4
  store i32 %v1_15240, i32* %r1.global-to-local, align 4
  %v4_15244 = udiv i32 %v3_15240, 65536
  %v5_15244 = or i32 %v4_15244, %v3_1523c
  store i32 %v5_15244, i32* @ip, align 4
  %v2_15248 = add i32 %v1_15248, -4
  %v3_15248 = inttoptr i32 %v2_15248 to i32*
  store i32 %v5_15244, i32* %v3_15248, align 4
  %v4_15248 = load i32, i32* %r0.global-to-local, align 4
  %v5_15248 = add i32 %v4_15248, -4
  store i32 %v5_15248, i32* %r0.global-to-local, align 4
  %v0_1524c = load i32, i32* %r2.global-to-local, align 4
  %v2_1524c = add i32 %v0_1524c, -4
  store i32 %v2_1524c, i32* %r2.global-to-local, align 4
  %v6_15250 = icmp slt i32 %v0_1524c, 4
  br i1 %v6_15250, label %dec_label_pc_15254.loopexit, label %dec_label_pc_1523c

dec_label_pc_15254.loopexit:                      ; preds = %dec_label_pc_1523c
  %v4_1524c = sub i32 3, %v0_1524c
  %v5_1524c = and i32 %v4_1524c, %v0_1524c
  %v6_1524c = icmp slt i32 %v5_1524c, 0
  %v7_1524c = icmp slt i32 %v2_1524c, 0
  store i1 %v6_1524c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1524c, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15254

dec_label_pc_15254:                               ; preds = %dec_label_pc_15254.loopexit, %dec_label_pc_15230
  %v2_1512c63 = phi i32 [ %v5_15248, %dec_label_pc_15254.loopexit ], [ %v1_15224, %dec_label_pc_15230 ]
  %v0_1511c59 = phi i32 [ %v2_1524c, %dec_label_pc_15254.loopexit ], [ %v2_15234, %dec_label_pc_15230 ]
  %v0_15254 = load i32, i32* %r1.global-to-local, align 4
  %v1_15254 = add i32 %v0_15254, 2
  store i32 %v1_15254, i32* %r1.global-to-local, align 4
  br label %bb141

dec_label_pc_1525c:                               ; preds = %dec_label_pc_15170
  br i1 %v5_15260, label %dec_label_pc_152a8, label %dec_label_pc_15264

dec_label_pc_15264:                               ; preds = %dec_label_pc_1525c
  store i32 %v2_1525c, i32* %r2.global-to-local, align 4
  %v3_15268 = load i32, i32* @r4, align 4
  store i32 %v3_15268, i32* %stack_var_-12, align 4
  %v6_15268 = load i32, i32* @r5, align 4
  store i32 %v6_15268, i32* %stack_var_-8, align 4
  %v9_15268 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %dec_label_pc_1526c.dec_label_pc_1526c_crit_edge, %dec_label_pc_15264
  %v0_15290 = phi i32 [ %v1_15290, %dec_label_pc_1526c.dec_label_pc_1526c_crit_edge ], [ %v0_151b830, %dec_label_pc_15264 ]
  %v0_15270 = phi i32 [ %v0_15270.pre, %dec_label_pc_1526c.dec_label_pc_1526c_crit_edge ], [ %v1_15170, %dec_label_pc_15264 ]
  %v0_1526c = phi i32 [ %v0_1526c.pre, %dec_label_pc_1526c.dec_label_pc_1526c_crit_edge ], [ %v2_15174, %dec_label_pc_15264 ]
  %v3_1526c = mul i32 %v0_1526c, 16777216
  store i32 %v3_1526c, i32* %lr.global-to-local, align 4
  %v1_15270 = add i32 %v0_15270, -4
  %v2_15270 = inttoptr i32 %v1_15270 to i32*
  %v3_15270 = load i32, i32* %v2_15270, align 4
  store i32 %v3_15270, i32* %r3.global-to-local, align 4
  %v4_15270 = add i32 %v0_15270, -8
  %v5_15270 = inttoptr i32 %v4_15270 to i32*
  %v6_15270 = load i32, i32* %v5_15270, align 4
  store i32 %v6_15270, i32* %r4.global-to-local, align 4
  %v7_15270 = add i32 %v0_15270, -12
  %v8_15270 = inttoptr i32 %v7_15270 to i32*
  %v9_15270 = load i32, i32* %v8_15270, align 4
  store i32 %v9_15270, i32* %r5.global-to-local, align 4
  %v10_15270 = add i32 %v0_15270, -16
  %v11_15270 = inttoptr i32 %v10_15270 to i32*
  %v12_15270 = load i32, i32* %v11_15270, align 4
  store i32 %v10_15270, i32* %r1.global-to-local, align 4
  %v4_15274 = udiv i32 %v12_15270, 256
  %v5_15274 = or i32 %v4_15274, %v3_1526c
  store i32 %v5_15274, i32* %lr.global-to-local, align 4
  %v3_15278 = mul i32 %v12_15270, 16777216
  %v4_1527c = udiv i32 %v9_15270, 256
  %v5_1527c = or i32 %v3_15278, %v4_1527c
  store i32 %v5_1527c, i32* @ip, align 4
  %v3_15280 = mul i32 %v9_15270, 16777216
  %v4_15284 = udiv i32 %v6_15270, 256
  %v5_15284 = or i32 %v3_15280, %v4_15284
  store i32 %v5_15284, i32* %r5.global-to-local, align 4
  %v3_15288 = mul i32 %v6_15270, 16777216
  %v4_1528c = udiv i32 %v3_15270, 256
  %v5_1528c = or i32 %v3_15288, %v4_1528c
  store i32 %v5_1528c, i32* %r4.global-to-local, align 4
  %v1_15290 = add i32 %v0_15290, -16
  %v2_15290 = inttoptr i32 %v1_15290 to i32*
  store i32 %v5_1528c, i32* %v2_15290, align 4
  %v4_15290 = add i32 %v0_15290, -12
  %v5_15290 = inttoptr i32 %v4_15290 to i32*
  %v6_15290 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15290, i32* %v5_15290, align 4
  %v7_15290 = add i32 %v0_15290, -8
  %v8_15290 = inttoptr i32 %v7_15290 to i32*
  %v9_15290 = load i32, i32* @ip, align 4
  store i32 %v9_15290, i32* %v8_15290, align 4
  %v10_15290 = add i32 %v0_15290, -4
  %v11_15290 = inttoptr i32 %v10_15290 to i32*
  %v12_15290 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15290, i32* %v11_15290, align 4
  store i32 %v1_15290, i32* %r0.global-to-local, align 4
  %v0_15294 = load i32, i32* %r2.global-to-local, align 4
  %v2_15294 = add i32 %v0_15294, -16
  store i32 %v2_15294, i32* %r2.global-to-local, align 4
  %v6_15298 = icmp slt i32 %v0_15294, 16
  br i1 %v6_15298, label %dec_label_pc_1529c, label %dec_label_pc_1526c.dec_label_pc_1526c_crit_edge

dec_label_pc_1526c.dec_label_pc_1526c_crit_edge:  ; preds = %dec_label_pc_1526c
  %v0_1526c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15270.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1526c

dec_label_pc_1529c:                               ; preds = %dec_label_pc_1526c
  %v2_1529c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1529c, i32* @r4, align 4
  %v5_1529c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_1529c, i32* @r5, align 4
  store i32 %v9_15268, i32* @lr, align 4
  %v2_152a0 = add i32 %v0_15294, -4
  store i32 %v2_152a0, i32* %r2.global-to-local, align 4
  %v4_152a0 = add i32 %v0_15294, 2147483632
  %v5_152a0 = and i32 %v2_152a0, %v4_152a0
  %v6_152a0 = icmp slt i32 %v5_152a0, 0
  store i1 %v6_152a0, i1* %cpsr_v.global-to-local, align 1
  %v7_152a0 = icmp slt i32 %v2_152a0, 0
  store i1 %v7_152a0, i1* %cpsr_n.global-to-local, align 1
  %v8_152a0 = icmp eq i32 %v2_152a0, 0
  store i1 %v8_152a0, i1* %cpsr_z.global-to-local, align 1
  %v5_152a4 = icmp slt i32 %v2_15294, -12
  br i1 %v5_152a4, label %dec_label_pc_152c0, label %dec_label_pc_152a8

dec_label_pc_152a8:                               ; preds = %dec_label_pc_1529c, %dec_label_pc_1525c, %dec_label_pc_152a8
  %v1_152b4 = phi i32 [ %v5_152b4, %dec_label_pc_152a8 ], [ %v1_15290, %dec_label_pc_1529c ], [ %v0_151b830, %dec_label_pc_1525c ]
  %v0_152a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_152a8 = mul i32 %v0_152a8, 16777216
  store i32 %v3_152a8, i32* %ip.global-to-local, align 4
  %v0_152ac = load i32, i32* %r1.global-to-local, align 4
  %v1_152ac = add i32 %v0_152ac, -4
  %v2_152ac = inttoptr i32 %v1_152ac to i32*
  %v3_152ac = load i32, i32* %v2_152ac, align 4
  store i32 %v3_152ac, i32* %r3.global-to-local, align 4
  store i32 %v1_152ac, i32* %r1.global-to-local, align 4
  %v4_152b0 = udiv i32 %v3_152ac, 256
  %v5_152b0 = or i32 %v4_152b0, %v3_152a8
  store i32 %v5_152b0, i32* @ip, align 4
  %v2_152b4 = add i32 %v1_152b4, -4
  %v3_152b4 = inttoptr i32 %v2_152b4 to i32*
  store i32 %v5_152b0, i32* %v3_152b4, align 4
  %v4_152b4 = load i32, i32* %r0.global-to-local, align 4
  %v5_152b4 = add i32 %v4_152b4, -4
  store i32 %v5_152b4, i32* %r0.global-to-local, align 4
  %v0_152b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_152b8 = add i32 %v0_152b8, -4
  store i32 %v2_152b8, i32* %r2.global-to-local, align 4
  %v6_152bc = icmp slt i32 %v0_152b8, 4
  br i1 %v6_152bc, label %dec_label_pc_152c0.loopexit, label %dec_label_pc_152a8

dec_label_pc_152c0.loopexit:                      ; preds = %dec_label_pc_152a8
  %v4_152b8 = sub i32 3, %v0_152b8
  %v5_152b8 = and i32 %v4_152b8, %v0_152b8
  %v6_152b8 = icmp slt i32 %v5_152b8, 0
  %v7_152b8 = icmp slt i32 %v2_152b8, 0
  store i1 %v6_152b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_152b8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_152c0

dec_label_pc_152c0:                               ; preds = %dec_label_pc_152c0.loopexit, %dec_label_pc_1529c
  %v2_1512c64 = phi i32 [ %v5_152b4, %dec_label_pc_152c0.loopexit ], [ %v1_15290, %dec_label_pc_1529c ]
  %v0_1511c60 = phi i32 [ %v2_152b8, %dec_label_pc_152c0.loopexit ], [ %v2_152a0, %dec_label_pc_1529c ]
  %v0_152c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_152c0 = add i32 %v0_152c0, 1
  store i32 %v1_152c0, i32* %r1.global-to-local, align 4
  br label %bb141

; uselistorder directives
  uselistorder i32 %v5_152b4, { 0, 2, 1 }
  uselistorder i32 %v3_152a8, { 1, 0 }
  uselistorder i32 %v2_152a0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15290, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15270, { 1, 0 }
  uselistorder i32 %v3_1526c, { 1, 0 }
  uselistorder i32 %v0_15270, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15290, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15248, { 0, 2, 1 }
  uselistorder i32 %v3_1523c, { 1, 0 }
  uselistorder i32 %v2_15234, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15224, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15204, { 1, 0 }
  uselistorder i32 %v3_15200, { 1, 0 }
  uselistorder i32 %v0_15204, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15224, { 3, 2, 1, 0 }
  uselistorder i32 %v5_151dc, { 0, 2, 1 }
  uselistorder i32 %v3_151d0, { 1, 0 }
  uselistorder i32 %v2_151c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_151b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15198, { 1, 0 }
  uselistorder i32 %v3_15194, { 1, 0 }
  uselistorder i32 %v0_15198, { 3, 2, 1, 0 }
  uselistorder i32 %v0_151b8, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15260, { 2, 0, 1 }
  uselistorder i32 %v0_15178, { 1, 0 }
  uselistorder i32 %v0_15264, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_151b830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15168, { 2, 1, 0 }
  uselistorder i32 %v0_15168, { 2, 0, 1 }
  uselistorder i32 %v2_15160, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15160, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15160, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_151b831, { 2, 1, 0 }
  uselistorder i32 %v11_1513c, { 1, 0 }
  uselistorder i32 %v7_1513c, { 1, 0 }
  uselistorder i32 %v1_1511c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1511c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15120, { 1, 0 }
  uselistorder i32 %v7_15114, { 0, 2, 1 }
  uselistorder i32 %v10_15110, { 1, 0 }
  uselistorder i32 %v9_15108, { 1, 0, 2 }
  uselistorder i32 %v6_15104, { 1, 0 }
  uselistorder i32 %v2_150fc, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_150fc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1510c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_150f0, { 0, 2, 1 }
  uselistorder i32 %v13_150ec, { 1, 0 }
  uselistorder i32 %v4_150e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_150e8, { 2, 0, 1 }
  uselistorder i32 %v6_150f0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_150e0, { 0, 2, 1 }
  uselistorder i32 %v16_150dc, { 1, 0 }
  uselistorder i32 %v4_150d8, { 1, 2, 0 }
  uselistorder i32 %v0_150e8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_150e0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_150cc, { 0, 3, 2, 1 }
  uselistorder i32 %v10_150c8, { 1, 0 }
  uselistorder i32 %v1_150c4, { 1, 0 }
  uselistorder i32 %v10_150c0, { 1, 0 }
  uselistorder i32 %v0_150c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_150c4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_150b8, { 0, 2, 1 }
  uselistorder i32 %v2_150ac, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_150ac, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_150c448, { 1, 2, 0 }
  uselistorder i32 %v1_150a4, { 2, 1, 0 }
  uselistorder i32 %v1_1509c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_15094, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_15090, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1508c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1508c, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v4_15078, { 0, 2, 1 }
  uselistorder i32 %v3_1506c, { 1, 0 }
  uselistorder i32 %v2_15064, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_15054, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15034, { 1, 0, 2 }
  uselistorder i32 %v5_15034, { 1, 0, 2 }
  uselistorder i32 %v2_15034, { 1, 0, 2 }
  uselistorder i32 %v3_15030, { 1, 0 }
  uselistorder i32 %v0_15034, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15054, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1500c, { 0, 2, 1 }
  uselistorder i32 %v3_15000, { 1, 0 }
  uselistorder i32 %v2_14ff8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14fe8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14fc8, { 1, 0, 2 }
  uselistorder i32 %v5_14fc8, { 1, 0, 2 }
  uselistorder i32 %v2_14fc8, { 1, 0, 2 }
  uselistorder i32 %v3_14fc4, { 1, 0 }
  uselistorder i32 %v0_14fc8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14fe8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14fa0, { 0, 2, 1 }
  uselistorder i32 %v3_14f94, { 1, 0 }
  uselistorder i32 %v2_14f8c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v12_14f7c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14f5c, { 1, 0, 2 }
  uselistorder i32 %v5_14f5c, { 1, 0, 2 }
  uselistorder i32 %v2_14f5c, { 1, 0, 2 }
  uselistorder i32 %v3_14f58, { 1, 0 }
  uselistorder i32 %v0_14f5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14f7c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_15024, { 2, 0, 1 }
  uselistorder i32 %v0_15028, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_14f7c74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14f2c, { 1, 0 }
  uselistorder i32 %v0_14f2c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14f24, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14f24, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14f24, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_14f7c75, { 2, 1, 0 }
  uselistorder i32 %v1_14f04, { 1, 0, 2 }
  uselistorder i32 %v1_14edc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14edc, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14ec8, { 1, 0, 2 }
  uselistorder i32 %v6_14ec4, { 1, 0 }
  uselistorder i32 %v2_14ebc, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_14ebc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14ecc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14eb4, { 0, 2, 1 }
  uselistorder i32 %v3_14eb4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_14eb4, { 1, 0 }
  uselistorder i1 %v1_14eb4, { 1, 0 }
  uselistorder i32 %v3_14eb0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14ea8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_14e94, { 1, 2, 0 }
  uselistorder i32 %v12_14e88, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14e7c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14e80, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14e70, { 0, 2, 1 }
  uselistorder i32 %v2_14e68, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_14e68, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v1_14e60, { 1, 0 }
  uselistorder i32 %v1_14e58, { 2, 1, 0 }
  uselistorder i32 %v2_14e50, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14e50, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v2_14e40, { 1, 0 }
  uselistorder i32 %v1_14e40, { 1, 5, 6, 3, 4, 0, 7, 9, 2, 8, 10 }
  uselistorder i32 %v0_14e40, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 25, 26, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 37, 1, 2, 3, 38, 4, 5, 6, 39, 35, 36, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %r2.global-to-local, { 0, 27, 1, 2, 3, 4, 5, 28, 6, 7, 8, 9, 10, 67, 68, 69, 70, 71, 11, 29, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 30, 31, 62, 32, 33, 34, 35, 36, 63, 37, 38, 39, 40, 41, 64, 42, 43, 44, 45, 46, 65, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 12, 2, 4, 6, 8, 5, 13, 7, 9, 11, 65, 10, 64, 63, 66, 14, 19, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 34, 26, 27, 35, 28, 36, 29, 37, 30, 31, 32, 33, 38, 41, 39, 51, 40, 42, 45, 43, 52, 44, 46, 49, 47, 53, 48, 50, 54, 55, 56, 58, 57, 59, 60, 61, 62 }
  uselistorder i32* %r0.global-to-local, { 0, 21, 1, 2, 22, 3, 4, 34, 36, 5, 6, 7, 8, 9, 23, 10, 12, 11, 13, 14, 35, 15, 16, 24, 17, 18, 19, 20, 25, 26, 27, 29, 28, 30, 31, 32, 33 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 17, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 45, 8, 46, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 0, 24, 1, 26, 2, 27, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 42, 8, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 0, 23, 1, 25, 2, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 47, 8, 48, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 0, 25, 1, 27, 2, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 31, { 20, 22, 1, 0, 12, 14, 13, 15, 2, 6, 17, 23, 24, 25, 26, 21, 16, 7, 18, 19, 8, 9, 3, 10, 4, 5, 11 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -2, { 12, 13, 11, 17, 0, 15, 1, 16, 2, 3, 10, 8, 9, 7, 6, 5, 4, 18, 19, 20, 21, 14 }
  uselistorder i32 65536, { 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 61, 1, 62, 63, 2, 64, 0, 3, 65, 66, 67, 68, 69, 72, 70, 71, 73, 74, 4, 75, 78, 79, 76, 80, 77, 81, 82, 83, 84, 85, 149, 87, 86, 150, 89, 88, 90, 92, 91, 94, 93, 151, 96, 95, 152, 98, 97, 99, 101, 100, 103, 102, 104, 105, 109, 110, 111, 112, 106, 107, 108, 113, 116, 117, 118, 114, 115, 119, 5, 120, 122, 123, 124, 121, 125, 6, 126, 130, 131, 132, 127, 128, 129, 133, 134, 135, 137, 136, 138, 7, 139, 141, 142, 140, 143, 8, 144, 146, 147, 145, 148 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 47, 46, 49, 48, 54, 50, 55, 51, 53, 52, 56, 59, 57, 60, 58, 62, 61, 64, 63, 66, 65, 67, 68, 69, 70, 73, 71, 74, 72, 75, 76, 78, 77, 84, 79, 85, 80, 86, 81, 87, 82, 88, 83, 89, 92, 93, 90, 91, 94, 95, 99, 96, 100, 97, 98, 101, 104, 105, 102, 103, 106, 107, 111, 108, 112, 109, 110, 113, 121, 114, 122, 115, 123, 116, 124, 125, 117, 126, 118, 127, 119, 128, 120, 132, 129, 133, 130, 134, 131, 135, 142, 136, 143, 144, 137, 145, 140, 146, 138, 147, 148, 139, 141, 149, 150, 154, 151, 155, 156, 152, 153, 157, 158, 159, 163, 160, 164, 161, 165, 162, 166, 167, 168, 173, 169, 174, 170, 175, 171, 176, 172, 177, 178, 179, 180, 181, 182, 184, 183, 185 }
  uselistorder i32* @r5, { 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 156, 157, 158, 160, 588, 589, 590, 591, 592, 0, 593, 594, 595, 596, 597, 598, 315, 316, 317, 318, 319, 320, 498, 499, 500, 501, 502, 503, 504, 511, 505, 506, 507, 508, 509, 510, 547, 548, 549, 556, 557, 558, 559, 550, 551, 552, 553, 554, 555, 22, 23, 24, 161, 162, 3, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 85, 86, 20, 21, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104, 105, 4, 106, 107, 108, 96, 97, 98, 99, 100, 101, 102, 103, 324, 325, 326, 327, 328, 329, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 1, 127, 128, 5, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 2, 146, 174, 175, 176, 177, 178, 8, 179, 180, 181, 182, 183, 184, 185, 186, 9, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 6, 490, 491, 492, 493, 494, 495, 496, 497, 560, 561, 562, 563, 564, 565, 566, 567, 7, 568, 569, 570, 571, 572, 573, 574, 575, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 307, 308, 309, 310, 311, 312, 313, 314, 321, 322, 323 }
  uselistorder i32 -3, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 -5, { 1, 0 }
  uselistorder i32 11, { 5, 6, 7, 18, 19, 9, 10, 11, 12, 8, 13, 0, 14, 15, 16, 17, 20, 21, 22, 23, 1, 24, 25, 26, 2, 27, 28, 29, 3, 30, 31, 32, 4, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24 }
  uselistorder i32 48, { 0, 6, 7, 4, 5, 1, 8, 2, 3, 9 }
  uselistorder i32 40, { 1, 8, 2, 0, 3, 5, 6, 7, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 36, { 1, 20, 21, 10, 11, 0, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 18, 8, 19, 9 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0 }
  uselistorder i32 -32, { 1, 0, 2, 3 }
  uselistorder i32 24, { 0, 73, 74, 38, 39, 1, 75, 76, 36, 37, 16, 15, 67, 42, 43, 68, 44, 55, 59, 40, 41, 62, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 63, 58, 64, 60, 61, 69, 70, 71, 65, 66, 35, 72, 17, 18, 19, 20, 2, 21, 22, 3, 23, 4, 5, 6, 7, 8, 9, 10, 79, 24, 11, 80, 25, 26, 12, 81, 27, 82, 83, 84, 28, 29, 13, 85, 30, 86, 31, 32, 14, 87, 33, 88, 89, 77, 34, 78 }
  uselistorder i32* @lr, { 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 102, 103, 104, 1, 105, 106, 107, 2, 108, 109, 110, 111, 112, 113, 114, 115, 19, 20, 116, 117, 118, 119, 120, 71, 72, 73, 74, 75, 76, 77, 78, 21, 22, 23, 24, 25, 6, 79, 4, 5, 80, 34, 35, 81, 45, 46, 47, 48, 49, 36, 37, 38, 39, 40, 7, 8, 9, 3, 14, 12, 13, 10, 11, 82, 83, 84, 85, 86, 87, 15, 16, 17, 18, 26, 27, 28, 29, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 88, 89, 90, 91, 30, 31, 32, 33 }
  uselistorder i32 16, { 32, 33, 34, 179, 35, 180, 181, 36, 182, 183, 37, 184, 185, 186, 187, 188, 189, 92, 93, 75, 76, 97, 94, 95, 96, 98, 26, 99, 100, 5, 6, 7, 8, 9, 25, 10, 11, 0, 12, 13, 49, 79, 38, 80, 39, 50, 77, 78, 81, 83, 84, 28, 27, 74, 85, 14, 15, 24, 71, 16, 86, 17, 51, 82, 40, 87, 52, 88, 53, 89, 54, 90, 55, 91, 56, 57, 58, 101, 102, 60, 103, 104, 105, 106, 107, 1, 59, 108, 109, 110, 62, 111, 112, 113, 114, 115, 2, 61, 116, 63, 117, 118, 119, 18, 120, 19, 121, 72, 20, 64, 65, 122, 123, 3, 42, 124, 41, 125, 66, 126, 127, 128, 21, 129, 22, 130, 73, 23, 67, 68, 131, 132, 4, 44, 133, 43, 134, 29, 136, 137, 138, 139, 69, 140, 141, 142, 143, 144, 145, 146, 147, 30, 148, 149, 150, 151, 153, 152, 154, 155, 156, 157, 158, 159, 160, 31, 161, 162, 163, 164, 165, 167, 166, 168, 169, 170, 171, 172, 173, 70, 174, 175, 176, 46, 177, 45, 48, 178, 47, 135 }
  uselistorder i32 20, { 113, 3, 114, 115, 0, 4, 116, 35, 36, 22, 23, 1, 37, 38, 39, 40, 24, 26, 5, 28, 6, 29, 30, 31, 32, 20, 21, 27, 25, 33, 34, 41, 42, 43, 7, 44, 45, 46, 47, 48, 49, 50, 51, 8, 52, 53, 54, 2, 55, 56, 57, 58, 16, 59, 60, 61, 62, 63, 64, 65, 66, 67, 17, 68, 69, 70, 71, 72, 73, 74, 76, 77, 9, 78, 79, 80, 81, 82, 83, 84, 10, 85, 86, 87, 88, 18, 19, 89, 12, 90, 11, 91, 92, 93, 94, 14, 95, 13, 96, 97, 98, 99, 100, 101, 102, 103, 15, 104, 105, 106, 107, 108, 109, 110, 111, 112, 75 }
  uselistorder i32 27, { 1, 0, 8, 2, 10, 6, 9, 3, 11, 4, 12, 5, 13, 7, 14 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 7, { 22, 23, 25, 65, 67, 0, 15, 30, 3, 17, 26, 18, 27, 19, 28, 16, 29, 1, 24, 31, 32, 20, 33, 21, 34, 35, 4, 36, 37, 5, 38, 39, 6, 40, 41, 7, 42, 43, 44, 45, 8, 46, 47, 48, 49, 9, 50, 51, 52, 53, 54, 10, 55, 56, 57, 58, 59, 11, 60, 61, 62, 63, 12, 64, 13, 14, 2, 66 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 15, 14, 7, 13, 12, 11, 10, 22, 23, 24, 25, 8, 26, 0, 29, 9, 27, 28, 6, 1, 2, 3, 5, 4 }
  uselistorder i32* @ip, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 2, 3, 56, 6, 7, 8, 9, 10, 11, 12, 1, 0, 4, 5 }
  uselistorder i1 false, { 93, 94, 95, 103, 87, 92, 104, 105, 89, 90, 91, 106, 86, 107, 108, 0, 98, 97, 99, 96, 1, 5, 4, 84, 66, 101, 85, 83, 88, 102, 67, 68, 69, 70, 71, 65, 64, 63, 62, 2, 3, 72, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 73, 74, 75, 76, 77, 78, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 100, 79, 80, 82, 81, 109 }
  uselistorder i32 4, { 70, 61, 62, 5, 397, 63, 398, 49, 6, 7, 64, 399, 65, 400, 401, 402, 403, 66, 404, 405, 406, 407, 67, 408, 409, 410, 411, 412, 8, 413, 414, 415, 416, 417, 68, 418, 48, 419, 420, 421, 422, 423, 424, 9, 10, 69, 425, 233, 234, 173, 174, 235, 236, 237, 426, 427, 428, 429, 430, 119, 120, 121, 50, 122, 123, 378, 380, 379, 376, 377, 346, 347, 348, 349, 381, 382, 383, 384, 350, 351, 352, 385, 386, 124, 125, 126, 127, 128, 41, 11, 12, 238, 239, 240, 241, 242, 243, 13, 14, 57, 15, 16, 58, 387, 388, 170, 17, 18, 88, 71, 302, 292, 51, 203, 204, 205, 177, 93, 178, 179, 180, 197, 198, 47, 46, 206, 175, 176, 181, 182, 90, 183, 184, 185, 91, 186, 92, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 89, 200, 201, 202, 199, 59, 207, 56, 55, 208, 19, 209, 20, 210, 211, 21, 22, 212, 213, 42, 214, 43, 219, 171, 220, 94, 221, 95, 223, 96, 224, 225, 222, 215, 97, 216, 217, 218, 389, 226, 54, 53, 52, 227, 98, 23, 24, 25, 26, 27, 228, 44, 229, 45, 230, 231, 232, 99, 244, 245, 129, 246, 247, 248, 249, 130, 131, 1, 250, 100, 251, 72, 252, 253, 254, 132, 255, 256, 133, 134, 2, 101, 257, 73, 258, 74, 259, 260, 135, 261, 262, 263, 264, 265, 136, 137, 266, 267, 103, 268, 3, 102, 269, 75, 270, 104, 271, 272, 138, 273, 274, 275, 276, 277, 139, 140, 278, 279, 106, 280, 4, 105, 281, 76, 282, 107, 283, 28, 293, 294, 141, 295, 296, 297, 142, 143, 109, 298, 108, 300, 77, 301, 303, 144, 304, 305, 145, 146, 306, 78, 307, 79, 308, 309, 310, 311, 147, 312, 313, 314, 148, 149, 111, 315, 110, 80, 316, 81, 317, 318, 319, 320, 321, 322, 113, 323, 114, 324, 150, 325, 326, 327, 151, 152, 115, 328, 112, 329, 82, 330, 83, 331, 332, 333, 153, 154, 334, 155, 335, 336, 156, 157, 116, 337, 84, 338, 85, 339, 340, 341, 342, 343, 117, 344, 86, 345, 390, 391, 392, 393, 118, 395, 87, 396, 158, 353, 354, 29, 159, 355, 356, 30, 160, 357, 358, 31, 161, 359, 360, 32, 162, 361, 362, 33, 163, 60, 363, 364, 34, 365, 164, 366, 367, 35, 165, 368, 369, 36, 166, 370, 371, 37, 167, 372, 373, 38, 168, 374, 375, 39, 394, 284, 285, 286, 287, 40, 288, 289, 0, 290, 169, 291, 299, 172 }
  uselistorder i32* @r2, { 64, 65, 26, 9, 27, 29, 28, 30, 31, 32, 33, 7, 66, 1, 67, 72, 73, 76, 68, 55, 59, 60, 63, 61, 62, 56, 57, 58, 54, 14, 0, 74, 2, 75, 5, 34, 35, 36, 8, 10, 69, 70, 71, 3, 37, 38, 39, 6, 22, 23, 24, 4, 40, 48, 51, 52, 49, 50, 53, 15, 11, 12, 13, 18, 19, 16, 17, 20, 21, 25, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder label %dec_label_pc_152a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1523c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15170, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_150fc, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_150c0, { 1, 0 }
  uselistorder label %dec_label_pc_150ac, { 1, 0 }
  uselistorder label %dec_label_pc_1506c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15000, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb131, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_14ea8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14e68, { 1, 0 }
}

define i32 @function_152c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_152c8:
  ret i32 %arg1
}

define i32 @function_152d0() local_unnamed_addr {
dec_label_pc_152d0:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_152d0 = load i32, i32* @r0, align 4
  %v2_152d0 = icmp eq i32 %v0_152d0, 0
  %v3_152d4 = load i32, i32* @r4, align 4
  store i32 %v3_152d4, i32* %stack_var_-20, align 4
  %v0_152d8 = load i32, i32* @r1, align 4
  br i1 %v2_152d0, label %dec_label_pc_153b0, label %dec_label_pc_152ec.lr.ph

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152ec.lr.ph, %dec_label_pc_15370
  %v1_15370 = phi i32 [ 0, %dec_label_pc_152ec.lr.ph ], [ %v5_15370, %dec_label_pc_15370 ]
  %v0_15374 = phi i32 [ 1, %dec_label_pc_152ec.lr.ph ], [ %v1_15374, %dec_label_pc_15370 ]
  %v0_152f4 = phi i32 [ %v0_152d0, %dec_label_pc_152ec.lr.ph ], [ %v0_152f425, %dec_label_pc_15370 ]
  %v1_152f4 = inttoptr i32 %v0_152f4 to i8*
  %v2_152f4 = load i8, i8* %v1_152f4, align 1
  %v3_152f4 = zext i8 %v2_152f4 to i32
  %v3_152f8 = mul nuw nsw i32 %v3_152f4, 2
  %v4_152f8 = add i32 %v3_152f8, %v2_152f0.pre
  %v5_152f8 = inttoptr i32 %v4_152f8 to i8*
  %v6_152f8 = load i8, i8* %v5_152f8, align 1
  %v1_152fc = and i8 %v6_152f8, 8
  %v2_152fc = icmp eq i8 %v1_152fc, 0
  br i1 %v2_152fc, label %dec_label_pc_153b0, label %dec_label_pc_15304

dec_label_pc_15304:                               ; preds = %dec_label_pc_152ec
  br label %dec_label_pc_15324

dec_label_pc_1530c:                               ; preds = %dec_label_pc_15324
  %v3_15310 = mul i32 %v0_15370, 10
  %v4_15310 = add i32 %v3_15324, %v3_15310
  %v1_15314 = add i32 %v4_15310, -48
  %v8_1531c = icmp sgt i32 %v1_15314, 255
  br i1 %v8_1531c, label %dec_label_pc_153b0, label %dec_label_pc_15320

dec_label_pc_15320:                               ; preds = %dec_label_pc_1530c
  %v1_15320 = add i32 %v0_15360, 1
  store i32 %v1_15320, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15324

dec_label_pc_15324:                               ; preds = %dec_label_pc_15304, %dec_label_pc_15320
  %v0_15370 = phi i32 [ 0, %dec_label_pc_15304 ], [ %v1_15314, %dec_label_pc_15320 ]
  %v0_15360 = phi i32 [ %v0_152f4, %dec_label_pc_15304 ], [ %v1_15320, %dec_label_pc_15320 ]
  %v1_15324 = inttoptr i32 %v0_15360 to i8*
  %v2_15324 = load i8, i8* %v1_15324, align 1
  %v3_15324 = zext i8 %v2_15324 to i32
  %v2_15328 = mul nuw nsw i32 %v3_15324, 2
  %v2_1532c = add i32 %v2_15328, %v2_152f0.pre
  %v3_15330 = inttoptr i32 %v2_1532c to i8*
  %v4_15330 = load i8, i8* %v3_15330, align 1
  %v6_15330 = zext i8 %v4_15330 to i32
  %v1_1533c = and i32 %v6_15330, 8
  %v2_1533c = icmp eq i32 %v1_1533c, 0
  br i1 %v2_1533c, label %dec_label_pc_15344, label %dec_label_pc_1530c

dec_label_pc_15344:                               ; preds = %dec_label_pc_15324
  %v8_15348 = icmp sgt i32 %v0_15374, 3
  br i1 %v8_15348, label %dec_label_pc_1535c, label %dec_label_pc_1534c

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15344
  %v7_1534c = icmp eq i8 %v2_15324, 46
  br i1 %v7_1534c, label %dec_label_pc_15354, label %dec_label_pc_153b0

dec_label_pc_15354:                               ; preds = %dec_label_pc_1534c
  %v1_15354 = add i32 %v0_15360, 1
  store i32 %v1_15354, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15370

dec_label_pc_1535c:                               ; preds = %dec_label_pc_15344
  %v2_1535c = icmp eq i8 %v2_15324, 0
  %v1_15360 = add i32 %v0_15360, 1
  store i32 %v1_15360, i32* %r0.global-to-local, align 4
  br i1 %v2_1535c, label %dec_label_pc_15370, label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_1535c
  %v1_15368 = and i32 %v6_15330, 32
  %v2_15368 = icmp eq i32 %v1_15368, 0
  br i1 %v2_15368, label %dec_label_pc_153b0, label %dec_label_pc_15370

dec_label_pc_15370:                               ; preds = %dec_label_pc_15368, %dec_label_pc_1535c, %dec_label_pc_15354
  %v0_152f425 = phi i32 [ %v1_15360, %dec_label_pc_15368 ], [ %v1_15360, %dec_label_pc_1535c ], [ %v1_15354, %dec_label_pc_15354 ]
  %v4_15370 = mul i32 %v1_15370, 256
  %v5_15370 = or i32 %v0_15370, %v4_15370
  %v1_15374 = add nuw nsw i32 %v0_15374, 1
  %v7_1537c = icmp slt i32 %v1_15374, 5
  br i1 %v7_1537c, label %dec_label_pc_152ec, label %dec_label_pc_15380

dec_label_pc_152ec.lr.ph:                         ; preds = %dec_label_pc_152d0
  %v2_152f0.pre = load i32, i32* bitcast (i32** @global_var_1db8c.440 to i32*), align 4
  br label %dec_label_pc_152ec

dec_label_pc_15380:                               ; preds = %dec_label_pc_15370
  %v2_15380 = icmp eq i32 %v0_152d8, 0
  br i1 %v2_15380, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_15380
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb40:                                             ; preds = %dec_label_pc_15380
  %v3_1539c = call i32 @llvm.bswap.i32(i32 %v5_15370)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_153a8 = inttoptr i32 %v0_152d8 to i32*
  store i32 %v3_1539c, i32* %v3_153a8, align 4
  %v2_153ac.pre = load i32, i32* %stack_var_-20, align 4
  %v17_153ac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb40
  %v17_153ac = phi i32 [ 1, %bb ], [ %v17_153ac.pre, %bb40 ]
  %v2_153ac = phi i32 [ %v3_152d4, %bb ], [ %v2_153ac.pre, %bb40 ]
  store i32 %v2_153ac, i32* @r4, align 4
  ret i32 %v17_153ac

dec_label_pc_153b0:                               ; preds = %dec_label_pc_1534c, %dec_label_pc_15368, %dec_label_pc_152ec, %dec_label_pc_1530c, %dec_label_pc_152d0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_152d4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_152f0.pre, { 1, 0 }
  uselistorder i32 %v1_15374, { 1, 0 }
  uselistorder i32 %v0_15360, { 0, 1, 3, 2 }
  uselistorder i32 %v3_152d4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 5, { 16, 27, 17, 5, 18, 6, 2, 20, 28, 21, 29, 22, 30, 19, 31, 3, 0, 32, 26, 23, 33, 24, 25, 34, 35, 7, 36, 37, 38, 8, 39, 40, 41, 42, 9, 43, 44, 45, 46, 10, 47, 51, 52, 53, 54, 11, 55, 56, 57, 58, 12, 59, 60, 61, 62, 63, 64, 65, 13, 66, 67, 68, 69, 70, 71, 72, 14, 73, 74, 75, 76, 77, 78, 79, 80, 15, 81, 4, 82, 48, 1, 49, 50 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 63, 64, 68, 71, 72, 73, 69, 70, 74, 75, 76, 77, 78, 476, 477, 79, 80, 81, 82, 83, 84, 85, 479, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 100, 99, 102, 474, 480, 107, 103, 106, 104, 105, 478, 109, 108, 110, 111, 112, 115, 114, 113, 116, 118, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 133, 142, 138, 143, 139, 135, 136, 140, 137, 144, 145, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 161, 160, 168, 163, 174, 175, 169, 164, 176, 177, 170, 165, 178, 171, 179, 172, 180, 173, 181, 166, 182, 167, 183, 184, 185, 186, 187, 188, 189, 192, 193, 196, 194, 190, 197, 195, 191, 200, 199, 198, 203, 204, 201, 205, 202, 206, 210, 207, 212, 211, 208, 209, 213, 472, 481, 214, 215, 216, 217, 218, 221, 219, 220, 223, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 241, 237, 244, 242, 238, 247, 246, 245, 250, 251, 248, 252, 249, 253, 257, 254, 259, 258, 255, 256, 260, 473, 482, 261, 262, 263, 264, 265, 268, 266, 267, 270, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 287, 289, 290, 291, 295, 301, 296, 292, 297, 302, 298, 303, 299, 293, 304, 294, 305, 306, 300, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 317, 320, 323, 324, 322, 321, 325, 328, 327, 326, 335, 332, 336, 333, 329, 337, 334, 330, 331, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 348, 350, 351, 353, 352, 354, 355, 356, 357, 360, 367, 361, 362, 358, 363, 364, 365, 359, 368, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 381, 383, 384, 385, 389, 396, 390, 391, 397, 392, 386, 387, 393, 388, 394, 398, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 416, 418, 419, 420, 431, 426, 421, 432, 427, 433, 428, 434, 429, 422, 423, 424, 435, 436, 437, 438, 430, 425, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 450, 452, 453, 454, 455, 456, 457, 458, 460, 459, 461, 462, 463, 464, 465, 466, 468, 467, 469, 470, 471, 475 }
  uselistorder i32 32, { 51, 37, 38, 35, 47, 48, 41, 42, 46, 5, 4, 7, 6, 9, 8, 36, 34, 49, 50, 11, 10, 13, 12, 15, 14, 17, 16, 39, 43, 40, 19, 18, 20, 22, 21, 23, 24, 26, 25, 44, 45, 27, 0, 28, 1, 2, 3, 52, 53, 29, 54, 30, 31, 32, 33 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 3, { 41, 63, 64, 163, 65, 66, 67, 68, 69, 70, 75, 88, 164, 4, 156, 158, 159, 0, 71, 23, 72, 24, 160, 73, 42, 25, 28, 76, 45, 77, 2, 78, 79, 80, 81, 43, 5, 82, 74, 83, 46, 84, 26, 85, 27, 86, 44, 87, 47, 29, 48, 49, 50, 51, 1, 89, 90, 91, 92, 93, 94, 95, 7, 6, 52, 96, 30, 97, 98, 99, 100, 101, 9, 8, 53, 102, 31, 103, 104, 105, 106, 54, 107, 11, 10, 33, 108, 32, 109, 110, 111, 112, 55, 113, 13, 12, 35, 114, 34, 115, 56, 117, 118, 119, 120, 121, 122, 57, 123, 58, 124, 36, 125, 126, 127, 128, 129, 15, 14, 59, 37, 130, 131, 132, 133, 134, 135, 17, 16, 60, 136, 38, 137, 138, 139, 140, 141, 142, 143, 19, 18, 61, 144, 39, 145, 146, 147, 148, 149, 150, 151, 21, 20, 62, 152, 40, 153, 154, 155, 161, 162, 22, 157, 3, 116 }
  uselistorder i32 8, { 103, 140, 23, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 24, 157, 68, 69, 70, 71, 75, 72, 73, 74, 158, 136, 135, 133, 134, 122, 123, 124, 137, 138, 139, 125, 126, 127, 7, 27, 28, 25, 26, 17, 18, 20, 21, 29, 159, 76, 77, 78, 79, 8, 9, 48, 19, 10, 11, 16, 12, 30, 56, 31, 13, 14, 15, 49, 37, 52, 38, 53, 39, 54, 36, 55, 22, 57, 58, 59, 60, 62, 63, 50, 51, 47, 40, 64, 41, 65, 42, 66, 67, 61, 43, 80, 81, 82, 3, 83, 84, 85, 4, 86, 87, 88, 89, 90, 91, 92, 5, 93, 94, 95, 96, 97, 98, 99, 6, 104, 32, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 128, 33, 129, 34, 130, 35, 131, 44, 132, 0, 1, 46, 100, 101, 45, 102, 2 }
  uselistorder i32 255, { 16, 20, 21, 17, 22, 18, 23, 24, 2, 19, 25, 4, 26, 3, 1, 5, 6, 27, 0, 28, 7, 10, 11, 9, 12, 8, 13, 14, 15 }
  uselistorder i32 10, { 10, 50, 51, 0, 3, 4, 28, 29, 52, 1, 30, 11, 33, 35, 12, 34, 13, 36, 14, 37, 6, 38, 39, 31, 32, 40, 27, 41, 15, 42, 16, 43, 17, 44, 18, 45, 19, 46, 47, 20, 5, 21, 22, 48, 23, 49, 8, 53, 54, 55, 56, 57, 58, 24, 59, 60, 61, 25, 62, 64, 65, 2, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 7, 79, 9, 80, 63, 26 }
  uselistorder i8 0, { 7, 0, 1, 20, 4, 21, 22, 2, 10, 23, 24, 25, 26, 27, 28, 29, 8, 30, 31, 32, 33, 34, 3, 5, 6, 11, 35, 36, 37, 38, 39, 17, 40, 43, 18, 41, 42, 16, 44, 45, 46, 47, 48, 12, 13, 9, 14, 49, 15, 19, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 2, { 7, 144, 260, 261, 69, 262, 263, 61, 264, 60, 265, 59, 148, 84, 85, 208, 86, 209, 87, 210, 8, 145, 266, 65, 88, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 147, 18, 19, 20, 21, 22, 90, 91, 89, 62, 63, 92, 164, 93, 2, 1, 94, 150, 95, 151, 96, 152, 158, 80, 149, 79, 153, 78, 154, 77, 155, 76, 156, 75, 157, 74, 163, 159, 160, 161, 162, 70, 97, 165, 23, 24, 166, 167, 168, 98, 25, 26, 27, 28, 29, 169, 30, 31, 146, 170, 99, 171, 32, 100, 257, 102, 172, 104, 173, 103, 174, 101, 105, 175, 33, 34, 106, 176, 71, 107, 108, 111, 109, 110, 112, 113, 114, 115, 64, 68, 177, 178, 179, 244, 245, 180, 181, 182, 183, 184, 185, 3, 35, 36, 37, 38, 39, 40, 116, 186, 81, 187, 188, 189, 190, 191, 4, 41, 42, 43, 44, 45, 46, 118, 117, 192, 193, 47, 194, 195, 66, 196, 120, 197, 5, 48, 49, 50, 51, 52, 121, 198, 119, 199, 200, 53, 201, 202, 67, 203, 123, 204, 6, 54, 55, 56, 57, 58, 124, 205, 122, 206, 211, 212, 213, 214, 215, 216, 217, 126, 218, 125, 219, 220, 221, 222, 223, 128, 127, 224, 225, 226, 227, 228, 229, 230, 231, 130, 232, 129, 233, 234, 235, 236, 132, 237, 133, 238, 239, 240, 241, 134, 242, 131, 243, 246, 247, 248, 249, 250, 251, 136, 252, 135, 253, 254, 137, 138, 82, 139, 255, 258, 140, 141, 83, 142, 259, 72, 256, 143, 73, 207 }
  uselistorder i32* @r1, { 49, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 1, 98, 99, 23, 24, 26, 25, 6, 7, 100, 0, 101, 47, 48, 18, 103, 66, 71, 72, 75, 73, 74, 67, 68, 69, 70, 65, 76, 102, 11, 5, 50, 27, 77, 28, 3, 78, 29, 30, 51, 52, 12, 8, 9, 10, 14, 13, 79, 15, 16, 17, 19, 20, 21, 22, 31, 32, 33, 4, 34, 60, 61, 2, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 80 }
  uselistorder label %dec_label_pc_153b0, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_15324, { 1, 0 }
}

define i32 @function_153bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_153bc:
  %v3_153bc = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_153c4 = call i32 @function_12c74()
  %v0_153c8 = load i32, i32* @r4, align 4
  store i32 %v3_153bc, i32* @r4, align 4
  %v2_153d0 = call i32 @function_12d1c(i32 %v0_153c4, i32 %v0_153c8)
  ret i32 %v2_153d0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12d1c, { 5, 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_12c74, { 0, 3, 1, 2 }
}

define i32 @function_153d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_153d4:
  %v1_153d4 = add i32 %arg1, 28
  %v2_153d4 = inttoptr i32 %v1_153d4 to i32*
  %v3_153d4 = load i32, i32* %v2_153d4, align 4
  %v1_153dc = add i32 %arg1, 44
  %v2_153dc = inttoptr i32 %v1_153dc to i32*
  %v3_153dc = load i32, i32* %v2_153dc, align 4
  store i32 %v3_153d4, i32* @global_var_1de08.493, align 4
  store i32 %v3_153dc, i32* @global_var_1de0c.495, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 13, 0, 5, 6, 2, 3, 11, 12, 1, 4, 7, 8, 9, 10 }
  uselistorder i32 28, { 35, 0, 25, 26, 7, 8, 34, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 24, 6, 23, 3, 4, 5, 27, 28, 29, 30, 31, 32, 33 }
}

define i32 @function_153f8(i32* %arg1) local_unnamed_addr {
dec_label_pc_153f8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15400 = call i32 @brk(i32* %arg1)
  %v3_15404 = icmp ult i32 %v2_15400, %tmp
  store i32 %v2_15400, i32* @global_var_1dc48.490, align 4
  br i1 %v3_15404, label %dec_label_pc_15418, label %dec_label_pc_15428

dec_label_pc_15418:                               ; preds = %dec_label_pc_153f8
  %v0_15418 = call i32 @function_131f0()
  %v2_15420 = inttoptr i32 %v0_15418 to i32*
  store i32 12, i32* %v2_15420, align 4
  br label %dec_label_pc_15428

dec_label_pc_15428:                               ; preds = %dec_label_pc_153f8, %dec_label_pc_15418
  %v0_15428 = phi i32 [ 0, %dec_label_pc_153f8 ], [ -1, %dec_label_pc_15418 ]
  ret i32 %v0_15428

; uselistorder directives
  uselistorder i32 12, { 16, 10, 115, 116, 117, 119, 120, 121, 122, 11, 118, 123, 124, 125, 126, 127, 128, 129, 62, 63, 28, 29, 64, 17, 18, 110, 111, 112, 0, 107, 113, 7, 114, 8, 108, 4, 109, 19, 20, 6, 65, 66, 21, 67, 68, 22, 12, 45, 39, 42, 46, 31, 32, 33, 47, 30, 34, 35, 36, 37, 38, 40, 43, 44, 41, 48, 49, 50, 9, 51, 52, 54, 55, 57, 56, 23, 58, 24, 59, 25, 60, 5, 61, 53, 103, 69, 70, 71, 72, 26, 73, 74, 75, 76, 77, 27, 78, 79, 80, 81, 82, 83, 13, 84, 85, 86, 87, 88, 89, 14, 90, 91, 15, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 1, 2, 3 }
  uselistorder i32 ()* @function_131f0, { 18, 35, 27, 43, 9, 8, 7, 6, 42, 41, 40, 5, 57, 26, 25, 47, 46, 17, 10, 34, 33, 16, 21, 20, 15, 30, 32, 45, 31, 56, 14, 13, 39, 38, 37, 55, 44, 29, 4, 3, 54, 53, 36, 22, 52, 2, 12, 51, 24, 11, 23, 19, 1, 0, 50, 49, 48, 28 }
  uselistorder i32* @global_var_1dc48.490, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15428, { 1, 0 }
}

define i32 @function_15434(i32 %arg1) local_unnamed_addr {
dec_label_pc_15434:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15438 = load i32, i32* @global_var_1da1c.453, align 4
  %v7_1543c = icmp eq i32 %v3_15438, -1
  %v3_15440 = load i32, i32* @r4, align 4
  store i32 %v3_15440, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1da1c.453 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1543c, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_15434
  store i32 %v3_15440, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_15434, %.preheader
  %v0_15450 = phi i32 [ %v3_15454, %.preheader ], [ %v3_15438, %dec_label_pc_15434 ]
  call void @__pseudo_branch(i32 %v0_15450)
  %v0_15454 = load i32, i32* %r4.global-to-local, align 4
  %v1_15454 = add i32 %v0_15454, -4
  %v2_15454 = inttoptr i32 %v1_15454 to i32*
  %v3_15454 = load i32, i32* %v2_15454, align 4
  store i32 %v1_15454, i32* %r4.global-to-local, align 4
  %v3_15458 = icmp eq i32 %v3_15454, -1
  br i1 %v3_15458, label %dec_label_pc_15460, label %.preheader

dec_label_pc_15460:                               ; preds = %.preheader
  %v2_15460 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15460, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_15454, { 1, 0 }
  uselistorder i32 %v3_15438, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 45, 16, 46, 47, 48, 3, 17, 18, 19, 49, 50, 51, 4, 20, 21, 22, 52, 53, 54, 5, 23, 24, 55, 15, 14, 56, 57, 58, 13, 12, 11, 10, 25, 26, 27, 28, 29, 0, 30, 1, 31, 2, 59, 9, 32, 36, 37, 43, 38, 33, 34, 39, 40, 41, 42, 44, 8, 7, 35, 6 }
  uselistorder i32 -1, { 154, 0, 95, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 155, 96, 234, 97, 273, 98, 264, 256, 99, 295, 100, 296, 101, 297, 102, 298, 142, 89, 257, 258, 103, 259, 260, 104, 299, 1, 156, 2, 105, 265, 266, 157, 158, 252, 253, 143, 159, 144, 160, 3, 4, 88, 80, 81, 161, 162, 163, 87, 235, 164, 236, 5, 6, 106, 274, 107, 270, 108, 271, 109, 275, 110, 262, 111, 237, 112, 254, 113, 238, 114, 239, 115, 276, 116, 277, 117, 165, 153, 118, 166, 119, 240, 120, 255, 121, 263, 122, 300, 301, 123, 241, 124, 242, 125, 261, 126, 269, 127, 243, 128, 302, 129, 278, 130, 244, 131, 267, 132, 279, 133, 268, 134, 272, 135, 303, 90, 304, 167, 168, 169, 170, 171, 172, 173, 174, 7, 8, 9, 10, 136, 137, 11, 175, 245, 17, 176, 145, 228, 82, 18, 177, 178, 93, 94, 91, 92, 12, 179, 16, 180, 181, 182, 231, 232, 183, 184, 185, 229, 138, 230, 19, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 233, 14, 206, 13, 207, 208, 15, 209, 210, 211, 20, 212, 213, 139, 246, 214, 247, 83, 21, 22, 146, 248, 148, 249, 23, 147, 250, 24, 25, 26, 27, 149, 251, 28, 29, 30, 31, 215, 32, 84, 216, 33, 141, 34, 35, 36, 217, 37, 38, 39, 40, 41, 42, 43, 85, 44, 45, 46, 47, 48, 49, 218, 50, 51, 52, 219, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 220, 65, 140, 66, 67, 68, 221, 69, 70, 71, 222, 72, 73, 74, 223, 75, 76, 77, 78, 224, 225, 226, 227, 79, 86, 150, 151, 152 }
  uselistorder i32* @global_var_1da1c.453, { 1, 0 }
  uselistorder i32 1, {}
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_15468() local_unnamed_addr {
dec_label_pc_15468:
  %v5_1546c = load i32, i32* @r0, align 4
  ret i32 %v5_1546c

; uselistorder directives
  uselistorder i32* @r0, { 5, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 75, 76, 78, 77, 27, 161, 162, 33, 34, 35, 36, 21, 4, 8, 9, 112, 113, 28, 163, 164, 62, 166, 7, 14, 129, 20, 128, 125, 32, 127, 13, 126, 130, 165, 42, 24, 79, 80, 81, 82, 30, 22, 83, 84, 85, 86, 23, 167, 10, 16, 43, 12, 131, 15, 132, 133, 19, 87, 134, 17, 88, 18, 89, 90, 0, 37, 44, 38, 45, 39, 40, 41, 46, 49, 50, 51, 52, 53, 1, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 29, 71, 72, 73, 74, 91, 92, 93, 94, 95, 96, 97, 3, 98, 99, 100, 101, 102, 103, 104, 31, 105, 122, 123, 2, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 124, 110, 111, 6, 11, 25, 26 }
}

define i32 @function_15470() local_unnamed_addr {
entry:
  %v3_15474 = load i32, i32* @r4, align 4
  %v0_1547c = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_15474)
  ret i32 %v0_1547c

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 7, 12, 13, 9, 10, 11, 14, 2, 5, 6, 3, 4, 1, 8 }
  uselistorder i32 0, { 119, 0, 1233, 1234, 1235, 1236, 121, 120, 1237, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1394, 1395, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 38, 1414, 1415, 1416, 1417, 1418, 39, 1419, 1420, 1421, 40, 1422, 1423, 1424, 41, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1440, 1441, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 42, 1460, 1461, 1462, 1463, 1464, 43, 1465, 1466, 1467, 1468, 1469, 44, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1085, 1086, 365, 1087, 366, 643, 1339, 1340, 1341, 1342, 1219, 1088, 1089, 1483, 1484, 1485, 1486, 367, 1090, 1, 1091, 1092, 1093, 1487, 1488, 1489, 122, 1490, 69, 1491, 67, 68, 1492, 1493, 1494, 368, 1498, 369, 1509, 1511, 591, 311, 1512, 370, 1510, 371, 372, 2, 1495, 1496, 123, 1220, 326, 1221, 375, 328, 327, 1222, 1223, 1224, 1225, 374, 1227, 1228, 373, 1229, 1497, 1055, 1056, 1057, 1058, 1059, 1060, 125, 87, 1061, 70, 124, 126, 377, 1499, 378, 329, 1500, 1501, 1503, 1504, 376, 1345, 1347, 1348, 48, 312, 1349, 1346, 1343, 1344, 3, 1327, 1330, 1328, 1329, 313, 4, 1352, 1350, 1351, 314, 127, 1331, 1332, 1333, 1337, 1334, 1335, 379, 5, 1336, 6, 1359, 1360, 128, 1353, 1354, 1355, 1356, 1357, 1358, 7, 8, 1226, 644, 645, 646, 380, 9, 381, 1361, 1308, 587, 1309, 588, 1362, 1188, 647, 1062, 648, 649, 1363, 1364, 1238, 1513, 1514, 63, 1094, 382, 1095, 1096, 1097, 1098, 383, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 650, 1063, 1189, 1502, 651, 652, 1106, 1239, 653, 589, 1505, 73, 1506, 1387, 654, 1230, 1388, 1231, 1310, 1507, 1508, 10, 655, 88, 656, 657, 306, 305, 592, 74, 75, 76, 77, 599, 593, 50, 49, 89, 658, 659, 660, 661, 663, 662, 11, 1365, 1366, 308, 307, 594, 78, 79, 80, 81, 600, 595, 52, 51, 47, 60, 1367, 601, 1368, 1369, 1370, 82, 1371, 1372, 1373, 1374, 1375, 129, 596, 602, 597, 598, 1376, 603, 102, 130, 1107, 1108, 83, 1109, 1110, 604, 12, 315, 131, 132, 359, 53, 133, 384, 664, 71, 1111, 1112, 1378, 1377, 1379, 1380, 45, 134, 1381, 137, 136, 135, 360, 361, 362, 139, 138, 140, 385, 1113, 1114, 141, 1294, 1295, 103, 142, 1115, 143, 665, 144, 1269, 1270, 145, 1240, 1241, 671, 666, 90, 667, 619, 146, 147, 620, 621, 622, 623, 84, 668, 633, 617, 605, 618, 639, 640, 386, 624, 625, 606, 626, 627, 607, 628, 629, 608, 630, 631, 609, 632, 634, 610, 635, 642, 611, 636, 641, 637, 66, 54, 309, 310, 638, 590, 669, 387, 670, 317, 672, 388, 673, 676, 677, 316, 674, 675, 166, 165, 678, 679, 612, 64, 389, 680, 681, 683, 684, 685, 686, 687, 688, 689, 390, 690, 691, 692, 693, 59, 85, 694, 695, 696, 697, 698, 699, 700, 701, 167, 702, 703, 704, 705, 706, 168, 707, 708, 709, 710, 711, 712, 169, 713, 714, 170, 715, 716, 171, 717, 718, 719, 55, 720, 721, 722, 723, 172, 724, 725, 726, 173, 727, 91, 92, 728, 729, 730, 174, 731, 732, 733, 734, 175, 735, 736, 737, 738, 148, 739, 740, 741, 176, 742, 743, 744, 745, 177, 746, 747, 748, 749, 750, 178, 751, 752, 753, 754, 179, 755, 756, 757, 758, 180, 759, 760, 761, 762, 181, 763, 764, 765, 766, 182, 767, 768, 769, 770, 771, 183, 772, 773, 774, 775, 184, 776, 777, 778, 779, 185, 780, 781, 782, 783, 186, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 149, 801, 802, 803, 804, 187, 805, 806, 807, 808, 188, 809, 150, 189, 810, 811, 190, 812, 151, 191, 813, 814, 192, 815, 93, 94, 816, 817, 818, 193, 819, 820, 821, 822, 194, 823, 824, 825, 826, 195, 827, 828, 829, 830, 152, 831, 832, 833, 834, 153, 835, 836, 837, 838, 196, 839, 840, 841, 842, 843, 197, 844, 845, 846, 847, 154, 848, 849, 850, 851, 198, 852, 853, 854, 855, 199, 856, 857, 858, 155, 859, 860, 861, 862, 200, 863, 864, 865, 866, 156, 867, 868, 869, 157, 870, 871, 872, 873, 201, 874, 875, 876, 877, 158, 878, 879, 880, 881, 202, 882, 883, 884, 885, 203, 886, 887, 888, 889, 204, 890, 159, 205, 891, 892, 160, 893, 894, 895, 896, 206, 897, 898, 899, 900, 207, 901, 902, 903, 904, 905, 906, 907, 161, 908, 909, 910, 162, 911, 912, 913, 914, 208, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 209, 930, 931, 932, 933, 210, 934, 935, 211, 936, 937, 212, 938, 939, 940, 213, 941, 942, 943, 214, 944, 945, 946, 215, 947, 948, 216, 949, 950, 951, 217, 952, 953, 218, 954, 955, 219, 956, 957, 958, 959, 220, 960, 961, 221, 962, 963, 222, 964, 965, 223, 966, 967, 224, 968, 969, 225, 970, 971, 972, 226, 973, 163, 227, 974, 975, 976, 228, 977, 86, 95, 978, 979, 164, 980, 981, 229, 982, 983, 230, 984, 985, 986, 987, 231, 988, 989, 990, 991, 232, 992, 993, 994, 995, 233, 996, 997, 234, 998, 999, 235, 1000, 1001, 1002, 1003, 236, 1004, 237, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 391, 1032, 392, 1033, 1036, 1037, 1038, 1039, 1040, 238, 1034, 239, 1035, 13, 240, 682, 1242, 1243, 1041, 1042, 241, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 330, 393, 1050, 65, 394, 1051, 14, 1052, 324, 1053, 395, 1054, 1064, 1065, 1066, 363, 245, 244, 613, 614, 364, 243, 242, 319, 323, 396, 1067, 246, 247, 1076, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 318, 397, 1077, 398, 1078, 399, 1079, 400, 1080, 1081, 1082, 1083, 56, 1084, 248, 249, 401, 72, 1116, 1117, 1118, 1119, 322, 1120, 1121, 1122, 321, 1123, 1124, 1125, 1126, 98, 1127, 1129, 1128, 96, 97, 250, 320, 402, 1130, 333, 331, 332, 99, 251, 61, 252, 1132, 1133, 107, 104, 105, 106, 15, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 18, 19, 20, 21, 22, 1140, 1141, 253, 335, 1142, 403, 1143, 404, 1144, 405, 1145, 406, 1146, 407, 1147, 408, 1148, 334, 1149, 254, 255, 256, 1151, 1152, 1150, 1154, 1155, 1153, 23, 24, 25, 26, 27, 1156, 257, 1157, 1158, 337, 1159, 409, 1160, 410, 1161, 411, 1162, 412, 1163, 413, 1164, 414, 1165, 336, 1166, 415, 1167, 259, 258, 260, 1169, 1170, 1168, 1171, 1172, 57, 1174, 1175, 1176, 1177, 416, 1178, 28, 29, 30, 31, 32, 1173, 261, 100, 1179, 1180, 342, 1181, 341, 1182, 340, 1183, 338, 1184, 339, 1185, 417, 1186, 418, 1187, 263, 262, 264, 1191, 1192, 1190, 1193, 1194, 58, 1196, 1197, 1198, 1199, 419, 1200, 33, 34, 35, 36, 37, 1195, 265, 101, 1201, 1202, 344, 1203, 343, 1204, 420, 1205, 1244, 111, 110, 108, 109, 1245, 1246, 62, 1247, 1248, 1249, 1250, 1251, 266, 1252, 1253, 421, 1254, 1255, 1256, 1257, 270, 267, 268, 269, 1258, 1259, 1260, 1261, 422, 1262, 1263, 347, 1265, 346, 1266, 345, 1267, 423, 1268, 1271, 1272, 114, 112, 113, 16, 1273, 1274, 1275, 1276, 271, 1277, 1278, 349, 348, 1279, 424, 1280, 272, 275, 274, 273, 1283, 1284, 1282, 1281, 425, 1286, 1285, 1287, 276, 1288, 1289, 352, 1290, 351, 1291, 350, 1292, 426, 1293, 277, 280, 279, 278, 1298, 1299, 1297, 1296, 1301, 1300, 1302, 1303, 281, 355, 1304, 354, 1305, 353, 1306, 427, 1307, 1311, 1312, 1313, 1314, 118, 115, 116, 117, 17, 1315, 1316, 1317, 282, 1318, 283, 1319, 1320, 358, 1321, 357, 1322, 356, 1323, 428, 1324, 288, 430, 286, 287, 284, 285, 1325, 290, 289, 1326, 431, 291, 429, 296, 433, 294, 295, 292, 293, 1382, 298, 297, 1383, 299, 432, 325, 1338, 1384, 300, 1385, 1206, 301, 1207, 1208, 302, 1209, 1210, 1211, 303, 434, 1212, 1213, 46, 1214, 1215, 1216, 1217, 1218, 435, 1232, 304, 1264, 1386, 615, 616, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529 }
  uselistorder i32* @r4, { 36, 664, 668, 669, 672, 673, 445, 446, 447, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 181, 62, 616, 617, 430, 690, 691, 692, 693, 694, 695, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 696, 697, 5, 698, 699, 700, 701, 715, 716, 717, 718, 34, 719, 32, 710, 711, 712, 713, 714, 702, 703, 704, 431, 432, 433, 434, 435, 436, 437, 438, 705, 706, 153, 154, 709, 618, 619, 620, 588, 6, 589, 590, 591, 7, 592, 8, 600, 601, 593, 9, 10, 594, 595, 596, 597, 598, 599, 621, 11, 629, 630, 622, 623, 624, 625, 626, 627, 628, 63, 64, 65, 66, 67, 68, 631, 632, 551, 552, 633, 634, 363, 364, 69, 70, 155, 156, 71, 72, 73, 74, 635, 636, 637, 638, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 75, 76, 157, 158, 365, 366, 707, 708, 2, 77, 78, 79, 80, 218, 219, 448, 449, 81, 82, 666, 667, 439, 440, 670, 671, 441, 442, 553, 554, 220, 221, 83, 84, 85, 86, 222, 223, 224, 225, 226, 639, 640, 641, 87, 88, 89, 492, 493, 494, 450, 451, 452, 90, 91, 37, 12, 92, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 4, 3, 50, 51, 49, 52, 53, 54, 55, 56, 57, 58, 59, 93, 94, 60, 61, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 0, 125, 113, 114, 115, 116, 117, 118, 104, 105, 106, 107, 108, 642, 643, 644, 645, 453, 454, 455, 456, 457, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 13, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 14, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 33, 174, 175, 176, 177, 178, 179, 180, 227, 228, 229, 1, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 15, 247, 16, 248, 17, 249, 18, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 19, 274, 20, 275, 21, 276, 22, 277, 278, 279, 280, 281, 23, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 24, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 25, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 26, 512, 27, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 28, 532, 29, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 30, 557, 31, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 663, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 659, 660, 661, 417, 418, 419, 420, 423, 421, 422, 424, 425, 426, 427, 428, 429, 443, 444, 35, 665 }
}

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
